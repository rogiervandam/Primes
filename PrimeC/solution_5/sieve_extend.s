GAS LISTING /tmp/cc64mrzX.s 			page 1


   1              		.file	"sieve_extend.c"
   2              		.intel_syntax noprefix
   3              	# GNU C17 (Ubuntu 9.4.0-1ubuntu1~20.04.1) version 9.4.0 (x86_64-linux-gnu)
   4              	#	compiled by GNU C version 9.4.0, GMP version 6.2.0, MPFR version 4.0.2, MPC version 1.1.0, isl ve
   5              	
   6              	# GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
   7              	# options passed:  -imultiarch x86_64-linux-gnu sieve_extend.c
   8              	# -march=skylake -mmmx -mno-3dnow -msse -msse2 -msse3 -mssse3 -mno-sse4a
   9              	# -mcx16 -msahf -mmovbe -maes -mno-sha -mpclmul -mpopcnt -mabm -mno-lwp
  10              	# -mfma -mno-fma4 -mno-xop -mbmi -mno-sgx -mbmi2 -mno-pconfig -mno-wbnoinvd
  11              	# -mno-tbm -mavx2 -msse4.2 -msse4.1 -mlzcnt -mrtm -mhle -mrdrnd -mf16c
  12              	# -mfsgsbase -mrdseed -mprfchw -madx -mfxsr -mxsave -mxsaveopt -mno-avx512f
  13              	# -mno-avx512er -mno-avx512cd -mno-avx512pf -mno-prefetchwt1 -mclflushopt
  14              	# -mxsavec -mxsaves -mno-avx512dq -mno-avx512bw -mno-avx512vl
  15              	# -mno-avx512ifma -mno-avx512vbmi -mno-avx5124fmaps -mno-avx5124vnniw
  16              	# -mno-clwb -mno-mwaitx -mno-clzero -mno-pku -mno-rdpid -mno-gfni
  17              	# -mno-shstk -mno-avx512vbmi2 -mno-avx512vnni -mno-vaes -mno-vpclmulqdq
  18              	# -mno-avx512bitalg -mno-avx512vpopcntdq -mno-movdiri -mno-movdir64b
  19              	# -mno-waitpkg -mno-cldemote -mno-ptwrite -mtune=intel -masm=intel
  20              	# -malign-data=cacheline -mavx -g -Ofast -funroll-all-loops
  21              	# -fno-asynchronous-unwind-tables -fno-exceptions -fverbose-asm
  22              	# -fstack-protector-strong -Wformat -Wformat-security
  23              	# -fstack-clash-protection -fcf-protection
  24              	# options enabled:  -fPIC -fPIE -faggressive-loop-optimizations
  25              	# -falign-functions -falign-jumps -falign-labels -falign-loops
  26              	# -fassociative-math -fassume-phsa -fauto-inc-dec -fbranch-count-reg
  27              	# -fcaller-saves -fcode-hoisting -fcombine-stack-adjustments -fcommon
  28              	# -fcompare-elim -fcprop-registers -fcrossjumping -fcse-follow-jumps
  29              	# -fcx-limited-range -fdefer-pop -fdelete-null-pointer-checks
  30              	# -fdevirtualize -fdevirtualize-speculatively -fdwarf2-cfi-asm
  31              	# -fearly-inlining -feliminate-unused-debug-types -fexpensive-optimizations
  32              	# -ffinite-math-only -fforward-propagate -ffp-int-builtin-inexact
  33              	# -ffunction-cse -fgcse -fgcse-after-reload -fgcse-lm -fgnu-runtime
  34              	# -fgnu-unique -fguess-branch-probability -fhoist-adjacent-loads -fident
  35              	# -fif-conversion -fif-conversion2 -findirect-inlining -finline
  36              	# -finline-atomics -finline-functions -finline-functions-called-once
  37              	# -finline-small-functions -fipa-bit-cp -fipa-cp -fipa-cp-clone -fipa-icf
  38              	# -fipa-icf-functions -fipa-icf-variables -fipa-profile -fipa-pure-const
  39              	# -fipa-ra -fipa-reference -fipa-reference-addressable -fipa-sra
  40              	# -fipa-stack-alignment -fipa-vrp -fira-hoist-pressure
  41              	# -fira-share-save-slots -fira-share-spill-slots
  42              	# -fisolate-erroneous-paths-dereference -fivopts -fkeep-static-consts
  43              	# -fleading-underscore -flifetime-dse -floop-interchange
  44              	# -floop-unroll-and-jam -flra-remat -flto-odr-type-merging
  45              	# -fmerge-constants -fmerge-debug-strings -fmove-loop-invariants
  46              	# -fomit-frame-pointer -foptimize-sibling-calls -foptimize-strlen
  47              	# -fpartial-inlining -fpeel-loops -fpeephole -fpeephole2 -fplt
  48              	# -fpredictive-commoning -fprefetch-loop-arrays -freciprocal-math -free
  49              	# -freg-struct-return -frename-registers -freorder-blocks
  50              	# -freorder-blocks-and-partition -freorder-functions -frerun-cse-after-loop
  51              	# -fsched-critical-path-heuristic -fsched-dep-count-heuristic
  52              	# -fsched-group-heuristic -fsched-interblock -fsched-last-insn-heuristic
  53              	# -fsched-rank-heuristic -fsched-spec -fsched-spec-insn-heuristic
  54              	# -fsched-stalled-insns-dep -fschedule-fusion -fschedule-insns2
  55              	# -fsemantic-interposition -fshow-column -fshrink-wrap
  56              	# -fshrink-wrap-separate -fsplit-ivs-in-unroller -fsplit-loops
  57              	# -fsplit-paths -fsplit-wide-types -fssa-backprop -fssa-phiopt
GAS LISTING /tmp/cc64mrzX.s 			page 2


  58              	# -fstack-clash-protection -fstack-protector-strong -fstdarg-opt
  59              	# -fstore-merging -fstrict-aliasing -fstrict-volatile-bitfields
  60              	# -fsync-libcalls -fthread-jumps -ftoplevel-reorder -ftree-bit-ccp
  61              	# -ftree-builtin-call-dce -ftree-ccp -ftree-ch -ftree-coalesce-vars
  62              	# -ftree-copy-prop -ftree-cselim -ftree-dce -ftree-dominator-opts
  63              	# -ftree-dse -ftree-forwprop -ftree-fre -ftree-loop-distribute-patterns
  64              	# -ftree-loop-distribution -ftree-loop-if-convert -ftree-loop-im
  65              	# -ftree-loop-ivcanon -ftree-loop-optimize -ftree-loop-vectorize
  66              	# -ftree-parallelize-loops= -ftree-partial-pre -ftree-phiprop -ftree-pre
  67              	# -ftree-pta -ftree-reassoc -ftree-scev-cprop -ftree-sink
  68              	# -ftree-slp-vectorize -ftree-slsr -ftree-sra -ftree-switch-conversion
  69              	# -ftree-tail-merge -ftree-ter -ftree-vrp -funit-at-a-time
  70              	# -funroll-all-loops -funroll-loops -funsafe-math-optimizations
  71              	# -funswitch-loops -fvar-tracking -fvar-tracking-assignments -fverbose-asm
  72              	# -fversion-loops-for-strides -fweb -fzero-initialized-in-bss
  73              	# -m128bit-long-double -m64 -m80387 -mabm -maccumulate-outgoing-args -madx
  74              	# -maes -malign-stringops -mavx -mavx2 -mbmi -mbmi2 -mclflushopt -mcx16
  75              	# -mf16c -mfancy-math-387 -mfma -mfp-ret-in-387 -mfsgsbase -mfxsr -mglibc
  76              	# -mhle -mlong-double-80 -mlzcnt -mmmx -mmovbe -mpclmul -mpopcnt -mprfchw
  77              	# -mpush-args -mrdrnd -mrdseed -mred-zone -mrtm -msahf -msse -msse2 -msse3
  78              	# -msse4 -msse4.1 -msse4.2 -mssse3 -mstv -mtls-direct-seg-refs -mvzeroupper
  79              	# -mxsave -mxsavec -mxsaveopt -mxsaves
  80              	
  81              		.text
  82              	.Ltext0:
  83              		.cfi_sections	.debug_frame
  84              		.p2align 4
  86              	extendSieve_smallSize:
  87              	.LVL0:
  88              	.LFB64:
  89              		.file 1 "sieve_extend.c"
   1:sieve_extend.c **** #include <stdio.h>
   2:sieve_extend.c **** #include <stdlib.h>
   3:sieve_extend.c **** #include <stdint.h>
   4:sieve_extend.c **** #include <time.h>
   5:sieve_extend.c **** #include <math.h>
   6:sieve_extend.c **** #include <string.h>
   7:sieve_extend.c **** 
   8:sieve_extend.c **** //add debug in front of a line to only compile it if the value below is set to 1 (or !=0)
   9:sieve_extend.c **** #define option_runonce 0
  10:sieve_extend.c **** #define debug if (option_runonce)
  11:sieve_extend.c **** 
  12:sieve_extend.c **** #define default_sieve_limit 1000000
  13:sieve_extend.c **** #define default_blocksize (32*1024*8-1024)
  14:sieve_extend.c **** #define default_sieve_duration 5
  15:sieve_extend.c **** #define default_sample_duration 0.1
  16:sieve_extend.c **** #define default_sample_max 5
  17:sieve_extend.c **** #define default_verbose_level 2
  18:sieve_extend.c **** #define default_tune_level 0
  19:sieve_extend.c **** #define default_check_level 1
  20:sieve_extend.c **** #define default_show_primes_on_error 100
  21:sieve_extend.c **** #define default_showMaxFactor (0 || option_runonce?100:0)
  22:sieve_extend.c **** #define anticiped_cache_line_bytesize 128
  23:sieve_extend.c **** 
  24:sieve_extend.c **** // 64 bit
  25:sieve_extend.c **** #define TYPE uint64_t
  26:sieve_extend.c **** 
GAS LISTING /tmp/cc64mrzX.s 			page 3


  27:sieve_extend.c **** // calculate the rest dynamically
  28:sieve_extend.c **** #define counter_t TYPE
  29:sieve_extend.c **** #define bitshift_t TYPE
  30:sieve_extend.c **** #define bitword_t uint64_t
  31:sieve_extend.c **** 
  32:sieve_extend.c **** #define WORD_SIZE (sizeof(bitword_t)*8)
  33:sieve_extend.c **** #define WORD_SIZE_counter ((counter_t)WORD_SIZE)
  34:sieve_extend.c **** #define WORD_SIZE_bitshift ((bitshift_t)WORD_SIZE)
  35:sieve_extend.c **** #define pow(base,pow) (pow*((base>>pow)&1U))
  36:sieve_extend.c **** //#define SHIFT ((bitshift_t)(pow(WORD_SIZE,1)+pow(WORD_SIZE,2)+pow(WORD_SIZE,3)+pow(WORD_SIZE,4)+p
  37:sieve_extend.c **** #define SHIFT_WORD ((bitshift_t)(pow(WORD_SIZE,1)+pow(WORD_SIZE,2)+pow(WORD_SIZE,3)+pow(WORD_SIZE,4
  38:sieve_extend.c **** 
  39:sieve_extend.c **** #define VECTOR_ELEMENTS 4
  40:sieve_extend.c **** #define VECTOR_SIZE_bytes (sizeof(bitword_t)*VECTOR_ELEMENTS)
  41:sieve_extend.c **** #define VECTOR_SIZE_counter (VECTOR_SIZE_bytes*8)
  42:sieve_extend.c **** #define VECTOR_SIZE (VECTOR_SIZE_bytes*8)
  43:sieve_extend.c **** #define SHIFT_VECTOR ((bitshift_t)(pow(VECTOR_SIZE,1)+pow(VECTOR_SIZE,2)+pow(VECTOR_SIZE,3)+pow(VEC
  44:sieve_extend.c **** 
  45:sieve_extend.c **** typedef bitword_t bitvector_t __attribute__ ((vector_size(VECTOR_SIZE_bytes)));
  46:sieve_extend.c **** 
  47:sieve_extend.c **** // globals for tuning
  48:sieve_extend.c **** counter_t global_SMALLSTEP_FASTER = 0;
  49:sieve_extend.c **** counter_t global_MEDIUMSTEP_FASTER = 0;
  50:sieve_extend.c **** counter_t global_VECTORSTEP_FASTER = 128;
  51:sieve_extend.c **** 
  52:sieve_extend.c **** #define SAFE_SHIFTBIT (bitshift_t)1U
  53:sieve_extend.c **** #define SAFE_ZERO  (bitword_t)0U
  54:sieve_extend.c **** #define BITWORD_SHIFTBIT (bitword_t)1U
  55:sieve_extend.c **** #define WORDMASK ((~SAFE_ZERO)>>(WORD_SIZE_bitshift-SHIFT_WORD))
  56:sieve_extend.c **** #define VECTORMASK ((~SAFE_ZERO)>>(WORD_SIZE_bitshift-SHIFT_VECTOR))
  57:sieve_extend.c **** // #define SMALLSTEP_FASTER ((counter_t)0)
  58:sieve_extend.c **** // #define MEDIUMSTEP_FASTER ((counter_t)16)
  59:sieve_extend.c **** // #define VECTORSTEP_FASTER ((counter_t)96)
  60:sieve_extend.c **** 
  61:sieve_extend.c **** #define SMALLSTEP_FASTER ((counter_t)global_SMALLSTEP_FASTER)
  62:sieve_extend.c **** #define MEDIUMSTEP_FASTER ((counter_t)global_MEDIUMSTEP_FASTER)
  63:sieve_extend.c **** #define VECTORSTEP_FASTER ((counter_t)global_VECTORSTEP_FASTER)
  64:sieve_extend.c **** 
  65:sieve_extend.c **** #define wordindex(index) (((counter_t)index) >> (bitshift_t)SHIFT_WORD)
  66:sieve_extend.c **** #define wordend(index) ((counter_t)index|WORDMASK)
  67:sieve_extend.c **** #define vectorindex(index) (((counter_t)index) >> (bitshift_t)SHIFT_VECTOR)
  68:sieve_extend.c **** #define vectorstart(index) (((counter_t)index) & (counter_t)~VECTORMASK)
  69:sieve_extend.c **** 
  70:sieve_extend.c **** // modern processors do a & over the shiftssize, so we only have to do that ourselve when using the
  71:sieve_extend.c **** #define bitindex(index) ((bitshift_t)(index))
  72:sieve_extend.c **** // #define bitindex(index) ((bitshift_t)(index)&((bitword_t)(WORD_SIZE-1)))
  73:sieve_extend.c **** //#define bitindex_calc(index) ((bitshift_t)(index)&((bitshift_t)(WORD_SIZE_bitshift-SAFE_SHIFTBIT)
  74:sieve_extend.c **** #define bitindex_calc(index) ((bitshift_t)(index)&((bitshift_t)(WORDMASK)))
  75:sieve_extend.c **** #define  markmask(index) (BITWORD_SHIFTBIT << bitindex(index))
  76:sieve_extend.c **** #define  markmask_calc(index) (BITWORD_SHIFTBIT << bitindex_calc(index))
  77:sieve_extend.c **** // #define chopmask(index) ((SAFE_SHIFTBIT << bitindex(index))-SAFE_SHIFTBIT)
  78:sieve_extend.c **** // #define chopmask2(index) (((bitword_t)2U << bitindex(index))-SAFE_SHIFTBIT)
  79:sieve_extend.c **** #define chopmask(index) (~SAFE_ZERO >> (WORD_SIZE-1-bitindex_calc(index)))
  80:sieve_extend.c **** #define keepmask(index) (~SAFE_ZERO << (bitindex_calc(index)))
  81:sieve_extend.c **** #define chopmask2(index) chopmask(index)
  82:sieve_extend.c **** #define real(bit) (bit*2+1)
  83:sieve_extend.c **** 
GAS LISTING /tmp/cc64mrzX.s 			page 4


  84:sieve_extend.c **** #define min(a,b) ((a<b) ? a : b)
  85:sieve_extend.c **** #define uintsafeminus(a,b) ((a>b)?(a-b):0)
  86:sieve_extend.c **** 
  87:sieve_extend.c **** #define likely(x)       (__builtin_expect((x),1))
  88:sieve_extend.c **** #define unlikely(x)     (__builtin_expect((x),0))
  89:sieve_extend.c **** 
  90:sieve_extend.c **** counter_t debug_hitpoint[5] = { 0,0,0,0,0};
  91:sieve_extend.c **** 
  92:sieve_extend.c **** struct sieve_state {
  93:sieve_extend.c ****     bitword_t* bitarray;
  94:sieve_extend.c ****     counter_t  bits;
  95:sieve_extend.c ****     counter_t  size;
  96:sieve_extend.c **** };
  97:sieve_extend.c **** 
  98:sieve_extend.c **** #include "debugtools.h"
  99:sieve_extend.c **** 
 100:sieve_extend.c **** // use cache lines as much as possible - alignment might be key
 101:sieve_extend.c **** #define ceiling(x,y) (((x) + (y) - 1) / (y)) // Return the smallest multiple N of y such that:  x <
 102:sieve_extend.c **** static struct sieve_state *create_sieve(counter_t size) {
 103:sieve_extend.c ****     struct sieve_state *sieve = aligned_alloc(8, sizeof(struct sieve_state));
 104:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize*8) * anticiped_cache
 105:sieve_extend.c **** 
 106:sieve_extend.c ****     sieve->bitarray = aligned_alloc((size_t)anticiped_cache_line_bytesize, (size_t)memSize );
 107:sieve_extend.c ****     sieve->bits     = size >> 1;
 108:sieve_extend.c ****     sieve->size     = size;
 109:sieve_extend.c **** 
 110:sieve_extend.c ****     // moved clearing the sieve with 0 to the sieve_block_extend
 111:sieve_extend.c ****     // it gave weird malloc problems at this point
 112:sieve_extend.c ****     return sieve;
 113:sieve_extend.c **** }
 114:sieve_extend.c **** 
 115:sieve_extend.c **** static void delete_sieve(struct sieve_state *sieve) {
 116:sieve_extend.c ****     free(sieve->bitarray);
 117:sieve_extend.c ****     free(sieve);
 118:sieve_extend.c **** }
 119:sieve_extend.c **** 
 120:sieve_extend.c **** // not much performance gain at smaller sieves, but its's nice to have an implementation
 121:sieve_extend.c **** static inline counter_t searchBitFalse(bitword_t* bitarray, register counter_t index) {
 122:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 124:sieve_extend.c **** }
 125:sieve_extend.c **** 
 126:sieve_extend.c **** // not much performance gain at smaller sieves, but its's nice to have an implementation
 127:sieve_extend.c **** static inline counter_t searchBitFalse_longRange(bitword_t* bitarray, register counter_t index) {
 128:sieve_extend.c ****     // return searchBitFalse(bitarray, index);
 129:sieve_extend.c **** 
 130:sieve_extend.c ****    register counter_t index_word = wordindex(index);
 131:sieve_extend.c ****    bitshift_t index_bit  = bitindex_calc(index);
 132:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 133:sieve_extend.c ****    index += distance;
 134:sieve_extend.c ****    distance += index_bit;
 135:sieve_extend.c **** 
 136:sieve_extend.c ****    while unlikely(distance == WORD_SIZE_bitshift) { // to prevent a bug from optimzer
 137:sieve_extend.c ****        index_word++;
 138:sieve_extend.c ****        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 139:sieve_extend.c ****        index += distance;
 140:sieve_extend.c ****    }
GAS LISTING /tmp/cc64mrzX.s 			page 5


 141:sieve_extend.c **** 
 142:sieve_extend.c ****    return index;
 143:sieve_extend.c **** }
 144:sieve_extend.c **** 
 145:sieve_extend.c **** 
 146:sieve_extend.c **** static void inline applyMask(bitword_t* __restrict bitarray, const counter_t step, const counter_t 
 147:sieve_extend.c **** //#if __APPLE__
 148:sieve_extend.c **** //   register const counter_t step_2 = step * 2;
 149:sieve_extend.c **** //   register const counter_t step_3 = step * 3;
 150:sieve_extend.c **** //   register const counter_t step_4 = step * 4;
 151:sieve_extend.c **** //   register const counter_t range_stop_word = wordindex(range_stop);
 152:sieve_extend.c **** //   const counter_t loop_stop_word = (range_stop_word > step_3) ? (range_stop_word - step_3) : (co
 153:sieve_extend.c **** //
 154:sieve_extend.c **** //   #pragma ivdep
 155:sieve_extend.c **** //   for (;index_word < loop_stop_word;  index_word += step_4) {
 156:sieve_extend.c **** //       bitarray[index_word         ] |= mask;
 157:sieve_extend.c **** //       bitarray[index_word + step  ] |= mask;
 158:sieve_extend.c **** //       bitarray[index_word + step_2] |= mask;
 159:sieve_extend.c **** //       bitarray[index_word + step_3] |= mask;
 160:sieve_extend.c **** //   }
 161:sieve_extend.c **** //
 162:sieve_extend.c **** //   #pragma ivdep
 163:sieve_extend.c **** //   while (index_word < range_stop_word) {
 164:sieve_extend.c **** //       bitarray[index_word] |= mask;
 165:sieve_extend.c **** //       index_word += step;
 166:sieve_extend.c **** //   }
 167:sieve_extend.c **** //
 168:sieve_extend.c **** //   if (index_word == wordindex(range_stop)) {
 169:sieve_extend.c **** //       bitarray[wordindex(range_stop)] |= (mask & chopmask2(range_stop));
 170:sieve_extend.c **** //   }
 171:sieve_extend.c **** //#endif
 172:sieve_extend.c **** //    ALTERNATIVE using pointers is faster in gcc
 173:sieve_extend.c **** //#if __linux__
 174:sieve_extend.c ****    const counter_t range_stop_word = wordindex(range_stop);
 175:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 176:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 177:sieve_extend.c **** 
 178:sieve_extend.c ****   #pragma unroll
 179:sieve_extend.c ****    #pragma ivdep
 180:sieve_extend.c ****    while likely(index_ptr < fast_loop_ptr) {
 181:sieve_extend.c ****        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 183:sieve_extend.c ****        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 185:sieve_extend.c ****        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 187:sieve_extend.c ****        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 189:sieve_extend.c ****        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 191:sieve_extend.c ****    }
 192:sieve_extend.c **** 
 193:sieve_extend.c ****    const register bitword_t* __restrict range_stop_ptr = &bitarray[(range_stop_word)];
 194:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 195:sieve_extend.c ****        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 197:sieve_extend.c ****    }
GAS LISTING /tmp/cc64mrzX.s 			page 6


 198:sieve_extend.c **** 
 199:sieve_extend.c ****    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range_stop_ptr, depending o
 200:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 201:sieve_extend.c ****    }
 202:sieve_extend.c **** 
 203:sieve_extend.c **** //    const counter_t range_stop_word = wordindex(range_stop);
 204:sieve_extend.c **** //    bitword_t* __restrict index_ptr = &bitarray[index_word];
 205:sieve_extend.c **** //    bitword_t* __restrict fast_loop_ptr = &bitarray[((range_stop_word>step*4) ? (range_stop_word 
 206:sieve_extend.c **** //    bitword_t* __restrict range_stop_ptr = &bitarray[(range_stop_word)];//>step_4) ? (range_stop_
 207:sieve_extend.c **** //    const int loop_iterations = ((range_stop_word - index_word) / (step*4));
 208:sieve_extend.c **** 
 209:sieve_extend.c **** //      debug printf("..%ju loop iterations for step %ju range in words (%ju - %ju)\n",(uintmax_t)l
 210:sieve_extend.c **** 
 211:sieve_extend.c **** //     #pragma unroll 1
 212:sieve_extend.c **** //    #pragma ivdep
 213:sieve_extend.c **** //    for ( int i=0; i < loop_iterations; i++) {
 214:sieve_extend.c **** //        *(index_ptr) |= mask;
 215:sieve_extend.c **** //        *(index_ptr+step) |= mask;
 216:sieve_extend.c **** //        *(index_ptr+2*step) |= mask;
 217:sieve_extend.c **** //        *(index_ptr+3*step) |= mask;
 218:sieve_extend.c **** //        index_ptr += 4*step;
 219:sieve_extend.c **** //    }
 220:sieve_extend.c **** 
 221:sieve_extend.c **** //    while ( index_ptr < range_stop_ptr) {
 222:sieve_extend.c **** //        *index_ptr |= mask;
 223:sieve_extend.c **** //        index_ptr+=step;
 224:sieve_extend.c **** //    }
 225:sieve_extend.c **** 
 226:sieve_extend.c **** //    if (index_ptr == range_stop_ptr) {
 227:sieve_extend.c **** //       *range_stop_ptr |= (mask & chopmask(range_stop));
 228:sieve_extend.c **** //    }
 229:sieve_extend.c **** //#endif
 230:sieve_extend.c **** }
 231:sieve_extend.c **** 
 232:sieve_extend.c **** // set bits by creating a pattern and then extending it to word and range size
 233:sieve_extend.c **** static void inline setBitsTrue_smallStep(bitword_t* __restrict bitarray, const counter_t range_star
 234:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using smallstep (%ju occurances)
 235:sieve_extend.c **** 
 236:sieve_extend.c ****     // build the pattern in a word
 237:sieve_extend.c **** 	register bitword_t pattern = BITWORD_SHIFTBIT;
 238:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; patternsize += patternsi
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 241:sieve_extend.c ****     // debug if (step==13) { printf("Before\n"); dump_bitarray(bitarray,10); }
 242:sieve_extend.c ****     
 243:sieve_extend.c ****     // initialize loop variables and stop if this is it
 244:sieve_extend.c ****     const counter_t range_stop_word = wordindex(range_stop);
 245:sieve_extend.c ****     register counter_t range_start_word = wordindex(range_start);
 246:sieve_extend.c ****      if (range_start_word >= range_stop_word) { // shortcut
 247:sieve_extend.c ****        bitarray[range_start_word] |= (pattern << bitindex(range_start)) & chopmask(range_stop);
 248:sieve_extend.c ****         //  debug if (step==13) { printf("After\n"); dump_bitarray(bitarray,10); }
 249:sieve_extend.c ****        return;
 250:sieve_extend.c ****     }
 251:sieve_extend.c ****     
 252:sieve_extend.c ****     bitarray[range_start_word] |= (pattern << bitindex(range_start));
 253:sieve_extend.c **** 
 254:sieve_extend.c ****    // from now on, we are before range_stop_word
GAS LISTING /tmp/cc64mrzX.s 			page 7


 255:sieve_extend.c ****    // first word is special, because it should not set bits before the range_start_bit
 256:sieve_extend.c ****    register bitshift_t pattern_size = WORD_SIZE_bitshift - (WORD_SIZE_bitshift % step);
 257:sieve_extend.c ****    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 258:sieve_extend.c ****    register bitshift_t shift = (bitindex_calc(range_start))%step ;
 259:sieve_extend.c ****    counter_t loop_range = range_stop_word - range_start_word;
 260:sieve_extend.c ****    #pragma unroll
 261:sieve_extend.c ****    #pragma ivdep
 262:sieve_extend.c ****    for (counter_t i=1; i <= loop_range; i++) {
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 265:sieve_extend.c **** 
 266:sieve_extend.c ****         // bitarray[range_start_word+i] |=  (pattern >> (pattern_size-((shift+i*pattern_shift) % st
 267:sieve_extend.c ****    }
 268:sieve_extend.c ****    bitarray[range_stop_word] &= chopmask(range_stop);
 269:sieve_extend.c **** 
 270:sieve_extend.c **** //    for(counter_t check=range_start; check<=range_stop; check+=step) {
 271:sieve_extend.c **** //         if (!(bitarray[wordindex(check)] & markmask(check))) {
 272:sieve_extend.c **** //             printf("Bit %ju not set\n",check);
 273:sieve_extend.c **** //             dump_bitarray(bitarray,4);
 274:sieve_extend.c **** //             printWord(pattern); printf("\n");
 275:sieve_extend.c **** //             exit(0);
 276:sieve_extend.c **** //         }
 277:sieve_extend.c **** //    }
 278:sieve_extend.c **** 
 279:sieve_extend.c ****     // pattern = (pattern << (bitindex_calc(range_start) % step)); // correct for inital offset
 280:sieve_extend.c ****     // const register bitshift_t pattern_shift = WORD_SIZE_bitshift % step;
 281:sieve_extend.c ****     // const register bitshift_t pattern_shift_flipped = WORD_SIZE_bitshift - pattern_shift - patte
 282:sieve_extend.c ****     // const register counter_t loop_range = range_stop_word - range_start_word;
 283:sieve_extend.c ****     // #pragma unroll
 284:sieve_extend.c ****     // #pragma ivdep
 285:sieve_extend.c ****     // for (counter_t i=1; i <= loop_range; i++) {
 286:sieve_extend.c ****     //     pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 287:sieve_extend.c ****     //     bitarray[range_start_word+i] |= pattern;
 288:sieve_extend.c ****     // }
 289:sieve_extend.c ****     // bitarray[range_stop_word] &= chopmask(range_stop);
 290:sieve_extend.c **** }
 291:sieve_extend.c **** 
 292:sieve_extend.c **** // Medium steps could be within the same word (e.g. less than 64 bits apart).
 293:sieve_extend.c **** // By joining the masks and then writing to memory, we might save some time.
 294:sieve_extend.c **** // This is especially true for small steps over long ranges
 295:sieve_extend.c **** // but it needs tuning, because there is some overhead of checking if the next step is in the same 
 296:sieve_extend.c **** static void  setBitsTrue_mediumStep(bitword_t* __restrict bitarray, const counter_t range_start, co
 297:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 298:sieve_extend.c **** 
 299:sieve_extend.c ****     if (range_stop_unique > range_stop) { // the range will not repeat itself; no need to try to re
 300:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-unique (%ju
 301:sieve_extend.c **** 
 302:sieve_extend.c ****         #pragma ivdep
 303:sieve_extend.c ****         for (register counter_t index = range_start; index <= range_stop;) {
 304:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 305:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 306:sieve_extend.c ****             #pragma ivdep
 307:sieve_extend.c ****             do {
 308:sieve_extend.c ****                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
GAS LISTING /tmp/cc64mrzX.s 			page 8


 312:sieve_extend.c ****             //     mask |= markmask(index);
 313:sieve_extend.c ****             bitarray[index_word] |= mask;
 314:sieve_extend.c ****         }
 315:sieve_extend.c ****     }
 316:sieve_extend.c ****     else { // this mask will reoccur at a interval of step words -> fill mask and reapply as a inte
 317:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-repeat (%ju
 318:sieve_extend.c ****         
 319:sieve_extend.c ****         #pragma ivdep
 320:sieve_extend.c ****         for (register counter_t index = range_start; index <= range_stop_unique;) {
 321:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 322:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 323:sieve_extend.c ****             #pragma ivdep
 324:sieve_extend.c ****             do {
 325:sieve_extend.c ****                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 329:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 330:sieve_extend.c ****             //     mask |= markmask(index);
 331:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 332:sieve_extend.c ****         }
 333:sieve_extend.c ****     }
 334:sieve_extend.c **** }
 335:sieve_extend.c **** 
 336:sieve_extend.c **** // small ranges (< WORD_SIZE * step) mean the mask is unique
 337:sieve_extend.c **** static inline void setBitsTrue_largeSteps(bitword_t* __restrict bitarray, const counter_t range_sta
 338:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largesteps (%ju occurances
 339:sieve_extend.c ****     
 340:sieve_extend.c ****     #pragma unroll
 341:sieve_extend.c ****     #pragma ivdep
 342:sieve_extend.c ****     for (counter_t index = range_start; index <= range_stop; index += step) {
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 345:sieve_extend.c **** 
 346:sieve_extend.c **** //    counter_t loop_iterations = (range_stop - range_start) / step;
 347:sieve_extend.c **** //    #pragma unroll
 348:sieve_extend.c **** //     #pragma ivdep
 349:sieve_extend.c **** //     for (register counter_t i = 0; i <= loop_iterations; i++) {
 350:sieve_extend.c **** //         bitarray[wordindex(range_start+i*step)] |= markmask(range_start+i*step);
 351:sieve_extend.c **** //     }
 352:sieve_extend.c **** }
 353:sieve_extend.c **** 
 354:sieve_extend.c **** // small ranges (< WORD_SIZE * step) mean the mask is unique
 355:sieve_extend.c **** static void setBitsTrue_race(bitword_t* bitarray, counter_t index1, counter_t index2, const counter
 356:sieve_extend.c ****     debug printf("Setting bits step %ju and %ju in %ju bit range (%ju-%ju) using race (%ju occuranc
 357:sieve_extend.c **** 
 358:sieve_extend.c ****     counter_t index1_word = wordindex(index1);
 359:sieve_extend.c ****     counter_t index2_word = wordindex(index2);
 360:sieve_extend.c ****     
 361:sieve_extend.c ****     while (1) {
 362:sieve_extend.c ****         if (index1_word == index2_word) {
 363:sieve_extend.c ****             bitword_t mask = SAFE_ZERO;
 364:sieve_extend.c ****             counter_t index_word = index1_word;
 365:sieve_extend.c ****             do {
 366:sieve_extend.c ****                 mask |= markmask(index1);
 367:sieve_extend.c ****                 index1 += step1;
 368:sieve_extend.c ****                 index1_word = wordindex(index1);
GAS LISTING /tmp/cc64mrzX.s 			page 9


 369:sieve_extend.c ****             } while (index1_word == index_word);
 370:sieve_extend.c ****             do {
 371:sieve_extend.c ****                 mask |= markmask(index2);
 372:sieve_extend.c ****                 index2 += step2;
 373:sieve_extend.c ****                 index2_word = wordindex(index2);
 374:sieve_extend.c ****             } while (index2_word == index_word);
 375:sieve_extend.c ****             bitarray[index_word] |= mask;
 376:sieve_extend.c ****         }
 377:sieve_extend.c **** 
 378:sieve_extend.c ****         // because step is larger, index2 is the most likely to get out of bounds first
 379:sieve_extend.c ****         if (index2 > range_stop) {
 380:sieve_extend.c ****             while (index1 <= range_stop) {
 381:sieve_extend.c ****                 bitarray[wordindex(index1)] |= markmask(index1);
 382:sieve_extend.c ****                 index1 += step1;
 383:sieve_extend.c ****             }
 384:sieve_extend.c ****             return;
 385:sieve_extend.c ****         }
 386:sieve_extend.c **** 
 387:sieve_extend.c ****         if (index1 > range_stop) {
 388:sieve_extend.c ****             while (index2 <= range_stop) {
 389:sieve_extend.c ****                 bitarray[wordindex(index2)] |= markmask(index2);
 390:sieve_extend.c ****                 index2 += step2;
 391:sieve_extend.c ****             }
 392:sieve_extend.c ****             return;
 393:sieve_extend.c ****         }
 394:sieve_extend.c **** 
 395:sieve_extend.c ****         while (index1_word < index2_word) {
 396:sieve_extend.c ****             bitarray[index1_word] |= markmask(index1);
 397:sieve_extend.c ****             index1 += step1;
 398:sieve_extend.c ****             index1_word = wordindex(index1);
 399:sieve_extend.c ****         }
 400:sieve_extend.c ****         
 401:sieve_extend.c ****         while (index2_word < index1_word){
 402:sieve_extend.c ****             bitarray[index2_word] |= markmask(index2);
 403:sieve_extend.c ****             index2 += step2;
 404:sieve_extend.c ****             index2_word = wordindex(index2);
 405:sieve_extend.c ****         }
 406:sieve_extend.c **** 
 407:sieve_extend.c ****     }
 408:sieve_extend.c **** }
 409:sieve_extend.c **** 
 410:sieve_extend.c **** // Large ranges (> WORD_SIZE * step) mean the same mask can be reused
 411:sieve_extend.c **** static inline void setBitsTrue_largeRange(bitword_t* __restrict bitarray, const counter_t range_sta
 412:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange (%ju occurances
 413:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 414:sieve_extend.c **** 
 415:sieve_extend.c **** //    #pragma unroll
 416:sieve_extend.c ****     #pragma ivdep
 417:sieve_extend.c ****     for (register counter_t index = range_start; index < range_stop_unique; index += step) {
 418:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 419:sieve_extend.c ****     }
 420:sieve_extend.c **** }
 421:sieve_extend.c **** 
 422:sieve_extend.c **** static void setBitsTrue_largeRange_vector(bitword_t* __restrict bitarray_word, counter_t range_star
 423:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 424:sieve_extend.c **** 
 425:sieve_extend.c ****     // const counter_t range_stop_unique_oneword =  min(range_start + WORD_SIZE_counter * step, ran
GAS LISTING /tmp/cc64mrzX.s 			page 10


 426:sieve_extend.c ****     // for (counter_t index = range_start; index <= range_stop_unique_oneword; index += step) {
 427:sieve_extend.c ****     //     applyMask(bitarray_word, step, range_stop, markmask(index), wordindex(index));
 428:sieve_extend.c ****     // }
 429:sieve_extend.c ****     // return;
 430:sieve_extend.c **** 
 431:sieve_extend.c ****     bitvector_t* __restrict bitarray_vector = __builtin_assume_aligned( (bitvector_t*) bitarray_wor
 432:sieve_extend.c ****     
 433:sieve_extend.c ****     // find out where the first complete vector is
 434:sieve_extend.c ****     // printWord(range_start); printf("\n");
 435:sieve_extend.c ****     // printWord(~VECTORMASK); printf("\n");
 436:sieve_extend.c ****     // printWord(vectorstart(range_start)); printf("\n\n");
 437:sieve_extend.c ****     counter_t range_start_atvector = vectorstart(range_start);
 438:sieve_extend.c ****     if likely((range_start_atvector + step) < range_start) { // not the first step possible in this
 439:sieve_extend.c ****         debug { printf("Range start+step %ju not at start of vector %ju\n",range_start+step, range_
 440:sieve_extend.c **** 
 441:sieve_extend.c ****         range_start_atvector += VECTOR_SIZE; // find next vector
 442:sieve_extend.c ****         if (unlikely(range_start_atvector > range_stop)) { // we should not be here; just handle wi
 443:sieve_extend.c ****             debug printf("..Marking and returning without vector\n");
 444:sieve_extend.c **** 
 445:sieve_extend.c ****             for (counter_t index = range_start; index <= range_stop; index += step) 
 446:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 447:sieve_extend.c ****             return;                 
 448:sieve_extend.c ****         }
 449:sieve_extend.c **** 
 450:sieve_extend.c ****         debug printf("..Marking without vector until %ju\n",range_start_atvector);
 451:sieve_extend.c ****         register counter_t index = range_start; // outside to later adjust range_start
 452:sieve_extend.c **** 
 453:sieve_extend.c ****         // #pragma ivdep unroll
 454:sieve_extend.c ****         // for (; index < range_start_atvector; index += step) 
 455:sieve_extend.c ****         //     bitarray_word[wordindex(index)] |= markmask(index);
 456:sieve_extend.c **** 
 457:sieve_extend.c ****         #pragma ivdep unroll
 458:sieve_extend.c ****         for (; range_start < range_start_atvector;) {
 459:sieve_extend.c ****             register counter_t index_word = wordindex(range_start);
 460:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 461:sieve_extend.c ****             do {
 462:sieve_extend.c ****                 mask |= markmask(range_start);
 463:sieve_extend.c ****                 range_start += step;
 464:sieve_extend.c ****             } while (wordindex(range_start) == index_word);
 465:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 466:sieve_extend.c ****         }
 467:sieve_extend.c ****         // range_start = index;
 468:sieve_extend.c ****     }
 469:sieve_extend.c ****     
 470:sieve_extend.c ****     const counter_t range_stop_unique =  min(range_start + VECTOR_SIZE_counter * step, range_stop);
 471:sieve_extend.c ****     
 472:sieve_extend.c ****     const counter_t step_2 = step * 2;
 473:sieve_extend.c ****     const counter_t step_3 = step * 3;
 474:sieve_extend.c ****     const counter_t step_4 = step * 4;
 475:sieve_extend.c **** 
 476:sieve_extend.c ****     #pragma ivdep unroll
 477:sieve_extend.c ****     for (counter_t index = range_start; index < range_stop_unique;) {
 478:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 479:sieve_extend.c ****         register bitvector_t quadmask = { };
 480:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 481:sieve_extend.c ****         
 482:sieve_extend.c ****         // build a quadmask
GAS LISTING /tmp/cc64mrzX.s 			page 11


 483:sieve_extend.c ****         #pragma ivdep unroll
 484:sieve_extend.c ****         do {
 485:sieve_extend.c ****             quadmask[word] |= markmask(index);
 486:sieve_extend.c ****             index += step;
 487:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 488:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 489:sieve_extend.c ****         
 490:sieve_extend.c ****         // use mask on all n*step multiples
 491:sieve_extend.c ****         register counter_t current_vector = current_vector_start_word >> (SHIFT_VECTOR - SHIFT_WORD
 492:sieve_extend.c ****         const counter_t range_stop_vector = vectorindex(range_stop);
 493:sieve_extend.c ****         
 494:sieve_extend.c ****         // if (current_vector+step_4 <= range_stop_vector) {
 495:sieve_extend.c ****         //     register const counter_t loop_stop_vector = (range_stop_vector > step_4) ? (range_st
 496:sieve_extend.c ****         //     #pragma ivdep unroll
 497:sieve_extend.c ****         //     for(; current_vector <= loop_stop_vector; current_vector += step_4) {
 498:sieve_extend.c ****         //         bitarray_vector[current_vector       ] |= quadmask;
 499:sieve_extend.c ****         //         bitarray_vector[current_vector+step  ] |= quadmask;
 500:sieve_extend.c ****         //         bitarray_vector[current_vector+step_2] |= quadmask;
 501:sieve_extend.c ****         //         bitarray_vector[current_vector+step_3] |= quadmask;
 502:sieve_extend.c ****         //     }
 503:sieve_extend.c ****         // }
 504:sieve_extend.c **** 
 505:sieve_extend.c ****         #pragma ivdep unroll
 506:sieve_extend.c ****         for(; current_vector+step_4 < range_stop_vector; current_vector += step_4) {
 507:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 508:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= quadmask;
 509:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= quadmask;
 510:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= quadmask;
 511:sieve_extend.c ****         }
 512:sieve_extend.c **** 
 513:sieve_extend.c ****         #pragma ivdep unroll
 514:sieve_extend.c ****         for(; current_vector < range_stop_vector; current_vector += step) {
 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 516:sieve_extend.c ****         }
 517:sieve_extend.c ****         
 518:sieve_extend.c ****         if (current_vector == range_stop_vector) {
 519:sieve_extend.c ****             counter_t index_word = current_vector * VECTOR_ELEMENTS;
 520:sieve_extend.c ****             counter_t range_stop_word = wordindex(range_stop);
 521:sieve_extend.c ****             if (index_word <= range_stop_word) {
 522:sieve_extend.c ****                 #pragma ivdep
 523:sieve_extend.c ****                 for (word =0; word < VECTOR_ELEMENTS; word++) {
 524:sieve_extend.c ****                     if (index_word+word <= range_stop_word)
 525:sieve_extend.c ****                         bitarray_word[index_word+word] |= quadmask[word];
 526:sieve_extend.c ****                 }
 527:sieve_extend.c ****             }
 528:sieve_extend.c **** 
 529:sieve_extend.c ****         }
 530:sieve_extend.c ****     }
 531:sieve_extend.c **** }
 532:sieve_extend.c **** 
 533:sieve_extend.c **** static void extendSieve_smallSize(bitword_t* __restrict bitarray, const counter_t source_start, con
  90              		.loc 1 533 153 view -0
  91              		.cfi_startproc
 534:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
  92              		.loc 1 534 5 view .LVU1
 535:sieve_extend.c ****     // debug { printf("...At start. "); dump_bitarray(bitarray, 4); }
 536:sieve_extend.c **** 
GAS LISTING /tmp/cc64mrzX.s 			page 12


 537:sieve_extend.c ****     const counter_t source_word = wordindex(source_start);
  93              		.loc 1 537 5 view .LVU2
 538:sieve_extend.c ****     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_start)) | (bitarray[sou
  94              		.loc 1 538 5 view .LVU3
  95              	# sieve_extend.c:533: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 533:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
  96              		.loc 1 533 153 is_stmt 0 view .LVU4
  97 0000 55       		push	rbp	#
  98              		.cfi_def_cfa_offset 16
  99              		.cfi_offset 6, -16
 100 0001 4989D1   		mov	r9, rdx	# size, tmp576
 101              	# sieve_extend.c:537:     const counter_t source_word = wordindex(source_start);
 537:sieve_extend.c ****     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_start)) | (bitarray[sou
 102              		.loc 1 537 21 view .LVU5
 103 0004 4889F0   		mov	rax, rsi	# source_word, source_start
 104              	# sieve_extend.c:533: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 533:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 105              		.loc 1 533 153 view .LVU6
 106 0007 4889E5   		mov	rbp, rsp	#,
 107              		.cfi_def_cfa_register 6
 108              	# sieve_extend.c:538:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 109              		.loc 1 538 134 view .LVU7
 110 000a 89F2     		mov	edx, esi	# tmp334, source_start
 111              	.LVL1:
 112              	# sieve_extend.c:533: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 533:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 113              		.loc 1 533 153 view .LVU8
 114 000c 4157     		push	r15	#
 115              	# sieve_extend.c:537:     const counter_t source_word = wordindex(source_start);
 537:sieve_extend.c ****     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_start)) | (bitarray[sou
 116              		.loc 1 537 21 view .LVU9
 117 000e 48C1E806 		shr	rax, 6	# source_word,
 118              	.LVL2:
 119              	# sieve_extend.c:538:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 120              		.loc 1 538 134 view .LVU10
 121 0012 83E23F   		and	edx, 63	# tmp334,
 122              	# sieve_extend.c:533: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 533:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 123              		.loc 1 533 153 view .LVU11
 124 0015 4156     		push	r14	#
 125              	# sieve_extend.c:538:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 126              		.loc 1 538 133 view .LVU12
 127 0017 41B84000 		mov	r8d, 64	# tmp336,
 127      0000
 128              	# sieve_extend.c:538:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 129              		.loc 1 538 167 view .LVU13
 130 001d 4589CB   		mov	r11d, r9d	# tmp342, size
 131              	# sieve_extend.c:533: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 533:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 132              		.loc 1 533 153 view .LVU14
 133 0020 4155     		push	r13	#
 134              	# sieve_extend.c:538:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 135              		.loc 1 538 133 view .LVU15
 136 0022 4129D0   		sub	r8d, edx	# tmp335, tmp334
 137              	# sieve_extend.c:538:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 138              		.loc 1 538 167 view .LVU16
 139 0025 41F7D3   		not	r11d	# tmp342
GAS LISTING /tmp/cc64mrzX.s 			page 13


 140              	# sieve_extend.c:533: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 533:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 141              		.loc 1 533 153 view .LVU17
 142 0028 4154     		push	r12	#
 143              		.cfi_offset 15, -24
 144              		.cfi_offset 14, -32
 145              		.cfi_offset 13, -40
 146              		.cfi_offset 12, -48
 147              	# sieve_extend.c:538:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 148              		.loc 1 538 167 view .LVU18
 149 002a 49C7C4FF 		mov	r12, -1	# tmp345,
 149      FFFFFF
 150 0031 C442A3F7 		shrx	r13, r12, r11	# tmp344, tmp345, tmp342
 150      EC
 151              	# sieve_extend.c:533: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 533:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 152              		.loc 1 533 153 view .LVU19
 153 0036 53       		push	rbx	#
 154              		.cfi_offset 3, -56
 155 0037 4889CB   		mov	rbx, rcx	# destination_stop, tmp577
 156              	# sieve_extend.c:538:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 157              		.loc 1 538 58 view .LVU20
 158 003a 488B0CC7 		mov	rcx, QWORD PTR [rdi+rax*8]	# *_5, *_5
 159              	.LVL3:
 160              	# sieve_extend.c:538:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 161              		.loc 1 538 112 view .LVU21
 162 003e C462B9F7 		shlx	r8, QWORD PTR 8[rdi+rax*8], r8	# tmp337, *_11, tmp335
 162      44C708
 163              	# sieve_extend.c:538:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 164              		.loc 1 538 58 view .LVU22
 165 0045 C462CBF7 		shrx	r10, rcx, rsi	# tmp339, *_5, source_start
 165      D1
 166              	# sieve_extend.c:538:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 167              		.loc 1 538 85 view .LVU23
 168 004a 4D09D0   		or	r8, r10	# tmp341, tmp339
 169              	# sieve_extend.c:533: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 533:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 170              		.loc 1 533 153 view .LVU24
 171 004d 4883E4E0 		and	rsp, -32	#,
 172              	# sieve_extend.c:538:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 173              		.loc 1 538 24 view .LVU25
 174 0051 4D21E8   		and	r8, r13	# pattern, tmp344
 175              	.LVL4:
 539:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 176              		.loc 1 539 5 is_stmt 1 view .LVU26
 177              	.LBB315:
 178              		.loc 1 539 10 view .LVU27
 179              		.loc 1 539 54 view .LVU28
 180              	# sieve_extend.c:539:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 181              		.loc 1 539 5 is_stmt 0 view .LVU29
 182 0054 4983F940 		cmp	r9, 64	# size,
 183 0058 0F87C200 		ja	.L2	#,
 183      0000
 184 005e 4D89CE   		mov	r14, r9	# pattern_size, size
 185              	.LVL5:
 186              	.L3:
 540:sieve_extend.c ****         pattern |= (pattern << pattern_size);
GAS LISTING /tmp/cc64mrzX.s 			page 14


 187              		.loc 1 540 9 is_stmt 1 discriminator 3 view .LVU30
 188              	# sieve_extend.c:539:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 539:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 189              		.loc 1 539 103 is_stmt 0 discriminator 3 view .LVU31
 190 0061 4B8D0436 		lea	rax, [r14+r14]	# pattern_size,
 191              	# sieve_extend.c:540:         pattern |= (pattern << pattern_size);
 192              		.loc 1 540 29 discriminator 3 view .LVU32
 193 0065 C44289F7 		shlx	r15, r8, r14	# _23, pattern, pattern_size
 193      F8
 194              	# sieve_extend.c:540:         pattern |= (pattern << pattern_size);
 195              		.loc 1 540 17 discriminator 3 view .LVU33
 196 006a 4D09F8   		or	r8, r15	# pattern, _23
 197              	.LVL6:
 539:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 198              		.loc 1 539 90 is_stmt 1 discriminator 3 view .LVU34
 539:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 199              		.loc 1 539 54 discriminator 3 view .LVU35
 200              	# sieve_extend.c:539:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 539:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 201              		.loc 1 539 5 is_stmt 0 discriminator 3 view .LVU36
 202 006d 4883F840 		cmp	rax, 64	# pattern_size,
 203 0071 0F87A900 		ja	.L2	#,
 203      0000
 204              		.loc 1 540 9 is_stmt 1 view .LVU37
 205              	# sieve_extend.c:539:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 539:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 206              		.loc 1 539 103 is_stmt 0 view .LVU38
 207 0077 4A8D0CB5 		lea	rcx, 0[0+r14*4]	# pattern_size,
 207      00000000 
 208              	# sieve_extend.c:540:         pattern |= (pattern << pattern_size);
 209              		.loc 1 540 29 view .LVU39
 210 007f C4C2F9F7 		shlx	rdx, r8, rax	# _23, pattern, pattern_size
 210      D0
 211              	# sieve_extend.c:540:         pattern |= (pattern << pattern_size);
 212              		.loc 1 540 17 view .LVU40
 213 0084 4909D0   		or	r8, rdx	# pattern, _23
 214              	.LVL7:
 539:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 215              		.loc 1 539 90 is_stmt 1 view .LVU41
 539:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 216              		.loc 1 539 54 view .LVU42
 217              	# sieve_extend.c:539:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 539:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 218              		.loc 1 539 5 is_stmt 0 view .LVU43
 219 0087 4883F940 		cmp	rcx, 64	# pattern_size,
 220 008b 0F878F00 		ja	.L2	#,
 220      0000
 221              		.loc 1 540 9 is_stmt 1 view .LVU44
 222              	# sieve_extend.c:539:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 539:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 223              		.loc 1 539 103 is_stmt 0 view .LVU45
 224 0091 4E8D1CF5 		lea	r11, 0[0+r14*8]	# pattern_size,
 224      00000000 
 225              	# sieve_extend.c:540:         pattern |= (pattern << pattern_size);
 226              		.loc 1 540 29 view .LVU46
 227 0099 C442F1F7 		shlx	r10, r8, rcx	# _23, pattern, pattern_size
 227      D0
GAS LISTING /tmp/cc64mrzX.s 			page 15


 228              	# sieve_extend.c:540:         pattern |= (pattern << pattern_size);
 229              		.loc 1 540 17 view .LVU47
 230 009e 4D09D0   		or	r8, r10	# pattern, _23
 231              	.LVL8:
 539:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 232              		.loc 1 539 90 is_stmt 1 view .LVU48
 539:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 233              		.loc 1 539 54 view .LVU49
 234              	# sieve_extend.c:539:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 539:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 235              		.loc 1 539 5 is_stmt 0 view .LVU50
 236 00a1 4983FB40 		cmp	r11, 64	# pattern_size,
 237 00a5 7779     		ja	.L2	#,
 238              		.loc 1 540 9 is_stmt 1 view .LVU51
 239              	# sieve_extend.c:539:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 539:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 240              		.loc 1 539 103 is_stmt 0 view .LVU52
 241 00a7 4D89F5   		mov	r13, r14	# pattern_size, pattern_size
 242              	# sieve_extend.c:540:         pattern |= (pattern << pattern_size);
 243              		.loc 1 540 29 view .LVU53
 244 00aa C442A1F7 		shlx	r12, r8, r11	# _23, pattern, pattern_size
 244      E0
 245              	# sieve_extend.c:539:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 539:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 246              		.loc 1 539 103 view .LVU54
 247 00af 49C1E504 		sal	r13, 4	# pattern_size,
 248              	# sieve_extend.c:540:         pattern |= (pattern << pattern_size);
 249              		.loc 1 540 17 view .LVU55
 250 00b3 4D09E0   		or	r8, r12	# pattern, _23
 251              	.LVL9:
 539:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 252              		.loc 1 539 90 is_stmt 1 view .LVU56
 539:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 253              		.loc 1 539 54 view .LVU57
 254              	# sieve_extend.c:539:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 539:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 255              		.loc 1 539 5 is_stmt 0 view .LVU58
 256 00b6 4983FD40 		cmp	r13, 64	# pattern_size,
 257 00ba 7764     		ja	.L2	#,
 258              		.loc 1 540 9 is_stmt 1 view .LVU59
 259              	# sieve_extend.c:539:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 539:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 260              		.loc 1 539 103 is_stmt 0 view .LVU60
 261 00bc 4C89F0   		mov	rax, r14	# pattern_size, pattern_size
 262              	# sieve_extend.c:540:         pattern |= (pattern << pattern_size);
 263              		.loc 1 540 29 view .LVU61
 264 00bf C44291F7 		shlx	r15, r8, r13	# _23, pattern, pattern_size
 264      F8
 265              	# sieve_extend.c:539:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 539:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 266              		.loc 1 539 103 view .LVU62
 267 00c4 48C1E005 		sal	rax, 5	# pattern_size,
 268              	# sieve_extend.c:540:         pattern |= (pattern << pattern_size);
 269              		.loc 1 540 17 view .LVU63
 270 00c8 4D09F8   		or	r8, r15	# pattern, _23
 271              	.LVL10:
 539:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
GAS LISTING /tmp/cc64mrzX.s 			page 16


 272              		.loc 1 539 90 is_stmt 1 view .LVU64
 539:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 273              		.loc 1 539 54 view .LVU65
 274              	# sieve_extend.c:539:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 539:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 275              		.loc 1 539 5 is_stmt 0 view .LVU66
 276 00cb 4883F840 		cmp	rax, 64	# pattern_size,
 277 00cf 774F     		ja	.L2	#,
 278              		.loc 1 540 9 is_stmt 1 view .LVU67
 279              	# sieve_extend.c:539:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 539:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 280              		.loc 1 539 103 is_stmt 0 view .LVU68
 281 00d1 4C89F1   		mov	rcx, r14	# pattern_size, pattern_size
 282              	# sieve_extend.c:540:         pattern |= (pattern << pattern_size);
 283              		.loc 1 540 29 view .LVU69
 284 00d4 C4C2F9F7 		shlx	rdx, r8, rax	# _23, pattern, pattern_size
 284      D0
 285              	# sieve_extend.c:539:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 539:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 286              		.loc 1 539 103 view .LVU70
 287 00d9 48C1E106 		sal	rcx, 6	# pattern_size,
 288              	# sieve_extend.c:540:         pattern |= (pattern << pattern_size);
 289              		.loc 1 540 17 view .LVU71
 290 00dd 4909D0   		or	r8, rdx	# pattern, _23
 291              	.LVL11:
 539:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 292              		.loc 1 539 90 is_stmt 1 view .LVU72
 539:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 293              		.loc 1 539 54 view .LVU73
 294              	# sieve_extend.c:539:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 539:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 295              		.loc 1 539 5 is_stmt 0 view .LVU74
 296 00e0 4883F940 		cmp	rcx, 64	# pattern_size,
 297 00e4 773A     		ja	.L2	#,
 298              		.loc 1 540 9 is_stmt 1 view .LVU75
 299              	# sieve_extend.c:539:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 539:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 300              		.loc 1 539 103 is_stmt 0 view .LVU76
 301 00e6 4D89F3   		mov	r11, r14	# pattern_size, pattern_size
 302              	# sieve_extend.c:540:         pattern |= (pattern << pattern_size);
 303              		.loc 1 540 29 view .LVU77
 304 00e9 C442F1F7 		shlx	r10, r8, rcx	# _23, pattern, pattern_size
 304      D0
 305              	# sieve_extend.c:539:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 539:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 306              		.loc 1 539 103 view .LVU78
 307 00ee 49C1E307 		sal	r11, 7	# pattern_size,
 308              	# sieve_extend.c:540:         pattern |= (pattern << pattern_size);
 309              		.loc 1 540 17 view .LVU79
 310 00f2 4D09D0   		or	r8, r10	# pattern, _23
 311              	.LVL12:
 539:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 312              		.loc 1 539 90 is_stmt 1 view .LVU80
 539:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 313              		.loc 1 539 54 view .LVU81
 314              	# sieve_extend.c:539:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 539:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
GAS LISTING /tmp/cc64mrzX.s 			page 17


 315              		.loc 1 539 5 is_stmt 0 view .LVU82
 316 00f5 4983FB40 		cmp	r11, 64	# pattern_size,
 317 00f9 7725     		ja	.L2	#,
 318              		.loc 1 540 9 is_stmt 1 view .LVU83
 319              	# sieve_extend.c:539:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 539:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 320              		.loc 1 539 103 is_stmt 0 view .LVU84
 321 00fb 49C1E608 		sal	r14, 8	# pattern_size,
 322              	# sieve_extend.c:540:         pattern |= (pattern << pattern_size);
 323              		.loc 1 540 29 view .LVU85
 324 00ff C442A1F7 		shlx	r12, r8, r11	# _23, pattern, pattern_size
 324      E0
 325              	# sieve_extend.c:540:         pattern |= (pattern << pattern_size);
 326              		.loc 1 540 17 view .LVU86
 327 0104 4D09E0   		or	r8, r12	# pattern, _23
 328              	.LVL13:
 539:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 329              		.loc 1 539 90 is_stmt 1 view .LVU87
 539:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 330              		.loc 1 539 54 view .LVU88
 331              	# sieve_extend.c:539:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 539:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 332              		.loc 1 539 5 is_stmt 0 view .LVU89
 333 0107 4983FE40 		cmp	r14, 64	# pattern_size,
 334 010b 0F8650FF 		jbe	.L3	#,
 334      FFFF
 335              	.LVL14:
 336 0111 66662E0F 		.p2align 4
 336      1F840000 
 336      0000000F 
 336      1F4000
 337              		.p2align 3
 338              	.L2:
 539:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 339              		.loc 1 539 5 view .LVU90
 340              	.LBE315:
 541:sieve_extend.c **** 
 542:sieve_extend.c ****     const counter_t destination_start = source_start + size;
 341              		.loc 1 542 5 is_stmt 1 view .LVU91
 342              	# sieve_extend.c:542:     const counter_t destination_start = source_start + size;
 343              		.loc 1 542 21 is_stmt 0 view .LVU92
 344 0120 4A8D0C0E 		lea	rcx, [rsi+r9]	# destination_start,
 345              	.LVL15:
 543:sieve_extend.c ****     counter_t destination_start_word = wordindex(destination_start);
 346              		.loc 1 543 5 is_stmt 1 view .LVU93
 347              	# sieve_extend.c:544:     counter_t destination_stop_word = wordindex(destination_stop);
 544:sieve_extend.c ****     counter_t destination_stop_word = wordindex(destination_stop);
 348              		.loc 1 544 15 is_stmt 0 view .LVU94
 349 0124 4989DC   		mov	r12, rbx	# destination_stop_word, destination_stop
 350              	# sieve_extend.c:543:     counter_t destination_start_word = wordindex(destination_start);
 543:sieve_extend.c ****     counter_t destination_start_word = wordindex(destination_start);
 351              		.loc 1 543 15 view .LVU95
 352 0127 4989CB   		mov	r11, rcx	# destination_start_word, destination_start
 353 012a F7D3     		not	ebx	# tmp348
 354              	.LVL16:
 543:sieve_extend.c ****     counter_t destination_start_word = wordindex(destination_start);
 355              		.loc 1 543 15 view .LVU96
GAS LISTING /tmp/cc64mrzX.s 			page 18


 356 012c 49C1EB06 		shr	r11, 6	# destination_start_word,
 357              	.LVL17:
 358              		.loc 1 544 5 is_stmt 1 view .LVU97
 359 0130 49C7C5FF 		mov	r13, -1	# tmp350,
 359      FFFFFF
 360              	# sieve_extend.c:544:     counter_t destination_stop_word = wordindex(destination_stop);
 361              		.loc 1 544 15 is_stmt 0 view .LVU98
 362 0137 49C1EC06 		shr	r12, 6	# destination_stop_word,
 363              	.LVL18:
 545:sieve_extend.c ****     if (destination_start_word >= destination_stop_word) {
 364              		.loc 1 545 5 is_stmt 1 view .LVU99
 365 013b 4A8D34DD 		lea	rsi, 0[0+r11*8]	# _116,
 365      00000000 
 366              	.LVL19:
 367              		.loc 1 545 5 is_stmt 0 view .LVU100
 368 0143 4C8D3437 		lea	r14, [rdi+rsi]	# _117,
 369              	# sieve_extend.c:545:     if (destination_start_word >= destination_stop_word) {
 370              		.loc 1 545 8 view .LVU101
 371 0147 4D39E3   		cmp	r11, r12	# destination_start_word, destination_stop_word
 372 014a C4C2F1F7 		shlx	rax, r8, rcx	# _120, pattern, destination_start
 372      C0
 373 014f 4D8B3E   		mov	r15, QWORD PTR [r14]	# pretmp_118, *_117
 374 0152 C4C2E3F7 		shrx	rbx, r13, rbx	# _124, tmp350, tmp348
 374      DD
 375 0157 0F833305 		jnb	.L49	#,
 375      0000
 546:sieve_extend.c ****         bitarray[destination_start_word] |= (pattern << bitindex(destination_start)) & chopmask(des
 547:sieve_extend.c ****         return;
 548:sieve_extend.c ****     }
 549:sieve_extend.c **** 
 550:sieve_extend.c ****     bitarray[destination_start_word] |= (pattern << bitindex(destination_start));
 376              		.loc 1 550 5 is_stmt 1 view .LVU102
 377              	# sieve_extend.c:550:     bitarray[destination_start_word] |= (pattern << bitindex(destination_star
 378              		.loc 1 550 38 is_stmt 0 view .LVU103
 379 015d 4C09F8   		or	rax, r15	# tmp353, pretmp_118
 380              	# sieve_extend.c:553:     register const bitshift_t pattern_shift = WORD_SIZE_counter % size;
 551:sieve_extend.c **** 
 552:sieve_extend.c ****     // TODO: refactor according to smallstep
 553:sieve_extend.c ****     register const bitshift_t pattern_shift = WORD_SIZE_counter % size;
 381              		.loc 1 553 31 view .LVU104
 382 0160 31D2     		xor	edx, edx	# tmp355
 383              	# sieve_extend.c:550:     bitarray[destination_start_word] |= (pattern << bitindex(destination_star
 550:sieve_extend.c **** 
 384              		.loc 1 550 38 view .LVU105
 385 0162 498906   		mov	QWORD PTR [r14], rax	# *_117, tmp353
 386              		.loc 1 553 5 is_stmt 1 view .LVU106
 387              	# sieve_extend.c:553:     register const bitshift_t pattern_shift = WORD_SIZE_counter % size;
 388              		.loc 1 553 31 is_stmt 0 view .LVU107
 389 0165 41BE4000 		mov	r14d, 64	# tmp354,
 389      0000
 390 016b 4C89F0   		mov	rax, r14	# tmp356, tmp354
 391 016e 488D7437 		lea	rsi, 8[rdi+rsi]	# vectp.140,
 391      08
 392 0173 49F7F1   		div	r9	# size
 393              	.LVL20:
 554:sieve_extend.c ****     register const bitshift_t pattern_size = WORD_SIZE_bitshift - pattern_shift;
 394              		.loc 1 554 5 is_stmt 1 view .LVU108
GAS LISTING /tmp/cc64mrzX.s 			page 19


 555:sieve_extend.c ****     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destination_start)) & WORDMASK;
 395              		.loc 1 555 5 view .LVU109
 556:sieve_extend.c ****     register counter_t loop_range = destination_stop_word - destination_start_word;
 396              		.loc 1 556 5 view .LVU110
 397 0176 48C1EE03 		shr	rsi, 3	# tmp363,
 398              	# sieve_extend.c:556:     register counter_t loop_range = destination_stop_word - destination_start
 399              		.loc 1 556 24 is_stmt 0 view .LVU111
 400 017a 4D89E1   		mov	r9, r12	# loop_range, destination_stop_word
 401              	.LVL21:
 402              	# sieve_extend.c:555:     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destinati
 555:sieve_extend.c ****     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destination_start)) & WORDMASK;
 403              		.loc 1 555 89 view .LVU112
 404 017d 48F7D9   		neg	rcx	# tmp359
 405              	.LVL22:
 406              	# sieve_extend.c:556:     register counter_t loop_range = destination_stop_word - destination_start
 407              		.loc 1 556 24 view .LVU113
 408 0180 4D29D9   		sub	r9, r11	# loop_range, destination_start_word
 409              	.LVL23:
 557:sieve_extend.c ****     destination_start_word++;
 410              		.loc 1 557 5 is_stmt 1 view .LVU114
 411              	# sieve_extend.c:554:     register const bitshift_t pattern_size = WORD_SIZE_bitshift - pattern_shi
 554:sieve_extend.c ****     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destination_start)) & WORDMASK;
 412              		.loc 1 554 31 is_stmt 0 view .LVU115
 413 0183 4C89F0   		mov	rax, r14	# tmp354, tmp354
 414 0186 48F7DE   		neg	rsi	# tmp364
 415              	# sieve_extend.c:555:     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destinati
 555:sieve_extend.c ****     register counter_t loop_range = destination_stop_word - destination_start_word;
 416              		.loc 1 555 25 view .LVU116
 417 0189 83E13F   		and	ecx, 63	# shift,
 418              	.LVL24:
 555:sieve_extend.c ****     register counter_t loop_range = destination_stop_word - destination_start_word;
 419              		.loc 1 555 25 view .LVU117
 420 018c 83E603   		and	esi, 3	# prolog_loop_niters.141,
 421              	# sieve_extend.c:557:     destination_start_word++;
 422              		.loc 1 557 27 view .LVU118
 423 018f 4D8D5301 		lea	r10, 1[r11]	# destination_start_word,
 424              	.LVL25:
 558:sieve_extend.c ****     
 559:sieve_extend.c ****     #pragma unroll
 560:sieve_extend.c ****     #pragma ivdep
 561:sieve_extend.c ****     for (counter_t i=0; i<=loop_range; ++i ) {
 425              		.loc 1 561 5 is_stmt 1 view .LVU119
 426              	.LBB316:
 427              		.loc 1 561 10 view .LVU120
 428              		.loc 1 561 25 view .LVU121
 429 0193 4D8D6901 		lea	r13, 1[r9]	# niters.139,
 430 0197 894C24F4 		mov	DWORD PTR -12[rsp], ecx	# %sfp, shift
 431 019b 895424F8 		mov	DWORD PTR -8[rsp], edx	# %sfp, tmp355
 432              	.LBE316:
 433              	# sieve_extend.c:554:     register const bitshift_t pattern_size = WORD_SIZE_bitshift - pattern_shi
 554:sieve_extend.c ****     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destination_start)) & WORDMASK;
 434              		.loc 1 554 31 is_stmt 0 view .LVU122
 435 019f 4829D0   		sub	rax, rdx	# tmp354, tmp355
 436              	.LVL26:
 554:sieve_extend.c ****     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destination_start)) & WORDMASK;
 437              		.loc 1 554 31 view .LVU123
 438 01a2 894424FC 		mov	DWORD PTR -4[rsp], eax	# %sfp, pattern_size
GAS LISTING /tmp/cc64mrzX.s 			page 20


 439 01a6 4983F90A 		cmp	r9, 10	# loop_range,
 440 01aa 0F860505 		jbe	.L11	#,
 440      0000
 441 01b0 4885F6   		test	rsi, rsi	# prolog_loop_niters.141
 442 01b3 0F84F404 		je	.L12	#,
 442      0000
 443              	.LBB317:
 562:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 444              		.loc 1 562 9 is_stmt 1 view .LVU124
 445              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 446              		.loc 1 562 72 is_stmt 0 view .LVU125
 447 01b9 4189C7   		mov	r15d, eax	# tmp365, pattern_size
 448 01bc 4129CF   		sub	r15d, ecx	# tmp365, shift
 449              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 450              		.loc 1 562 55 view .LVU126
 451 01bf C44281F7 		shlx	r14, r8, r15	# tmp366, pattern, tmp365
 451      F0
 452              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 453              		.loc 1 562 127 view .LVU127
 454 01c4 C442F3F7 		shrx	r15, r8, rcx	# tmp367, pattern, shift
 454      F8
 455              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 456              		.loc 1 562 116 view .LVU128
 457 01c9 4D09FE   		or	r14, r15	# tmp368, tmp367
 458 01cc 4E8934D7 		mov	QWORD PTR [rdi+r10*8], r14	# *_317, tmp368
 561:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 459              		.loc 1 561 40 is_stmt 1 view .LVU129
 460              	.LVL27:
 561:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 461              		.loc 1 561 25 view .LVU130
 462 01d0 4883FE01 		cmp	rsi, 1	# prolog_loop_niters.141,
 463              	# sieve_extend.c:561:     for (counter_t i=0; i<=loop_range; ++i ) {
 561:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 464              		.loc 1 561 40 is_stmt 0 view .LVU131
 465 01d4 41BE0100 		mov	r14d, 1	# i,
 465      0000
 466 01da 7452     		je	.L7	#,
 467              		.loc 1 562 9 is_stmt 1 view .LVU132
 468              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 469              		.loc 1 562 81 is_stmt 0 view .LVU133
 470 01dc 448D3411 		lea	r14d, [rcx+rdx]	# tmp369,
 471              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 472              		.loc 1 562 72 view .LVU134
 473 01e0 4189C7   		mov	r15d, eax	# tmp371, pattern_size
 474              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 475              		.loc 1 562 99 view .LVU135
 476 01e3 4183E63F 		and	r14d, 63	# _328,
 477              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 478              		.loc 1 562 72 view .LVU136
 479 01e7 4529F7   		sub	r15d, r14d	# tmp371, _328
 480              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 481              		.loc 1 562 127 view .LVU137
 482 01ea C4428BF7 		shrx	r14, r8, r14	# tmp373, pattern, _328
 482      F0
 483              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 484              		.loc 1 562 55 view .LVU138
 485 01ef C44281F7 		shlx	r15, r8, r15	# tmp372, pattern, tmp371
GAS LISTING /tmp/cc64mrzX.s 			page 21


 485      F8
 486              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 487              		.loc 1 562 116 view .LVU139
 488 01f4 4D09FE   		or	r14, r15	# tmp374, tmp372
 489 01f7 4E8974DF 		mov	QWORD PTR 16[rdi+r11*8], r14	# *_334, tmp374
 489      10
 561:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 490              		.loc 1 561 40 is_stmt 1 view .LVU140
 491              	.LVL28:
 561:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 492              		.loc 1 561 25 view .LVU141
 493 01fc 4883FE03 		cmp	rsi, 3	# prolog_loop_niters.141,
 494              	# sieve_extend.c:561:     for (counter_t i=0; i<=loop_range; ++i ) {
 561:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 495              		.loc 1 561 40 is_stmt 0 view .LVU142
 496 0200 41BE0200 		mov	r14d, 2	# i,
 496      0000
 497 0206 7526     		jne	.L7	#,
 498              		.loc 1 562 9 is_stmt 1 view .LVU143
 499              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 500              		.loc 1 562 81 is_stmt 0 view .LVU144
 501 0208 448D3451 		lea	r14d, [rcx+rdx*2]	# tmp376,
 502              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 503              		.loc 1 562 72 view .LVU145
 504 020c 4189C7   		mov	r15d, eax	# tmp378, pattern_size
 505              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 506              		.loc 1 562 99 view .LVU146
 507 020f 4183E63F 		and	r14d, 63	# _104,
 508              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 509              		.loc 1 562 72 view .LVU147
 510 0213 4529F7   		sub	r15d, r14d	# tmp378, _104
 511              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 512              		.loc 1 562 127 view .LVU148
 513 0216 C4428BF7 		shrx	r14, r8, r14	# tmp380, pattern, _104
 513      F0
 514              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 515              		.loc 1 562 55 view .LVU149
 516 021b C44281F7 		shlx	r15, r8, r15	# tmp379, pattern, tmp378
 516      F8
 517              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 518              		.loc 1 562 116 view .LVU150
 519 0220 4D09FE   		or	r14, r15	# tmp381, tmp379
 520 0223 4E8974DF 		mov	QWORD PTR 24[rdi+r11*8], r14	# *_94, tmp381
 520      18
 561:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 521              		.loc 1 561 40 is_stmt 1 view .LVU151
 522              	.LVL29:
 561:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 523              		.loc 1 561 25 view .LVU152
 524              	# sieve_extend.c:561:     for (counter_t i=0; i<=loop_range; ++i ) {
 561:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 525              		.loc 1 561 40 is_stmt 0 view .LVU153
 526 0228 41BE0300 		mov	r14d, 3	# i,
 526      0000
 527              	.LVL30:
 528              	.L7:
 561:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
GAS LISTING /tmp/cc64mrzX.s 			page 22


 529              		.loc 1 561 40 view .LVU154
 530 022e 4929F5   		sub	r13, rsi	# niters.142, prolog_loop_niters.141
 531 0231 4C01D6   		add	rsi, r10	# tmp388, destination_start_word
 532 0234 4D89EB   		mov	r11, r13	# bnd.143, niters.142
 533 0237 C4C1F96E 		vmovq	xmm3, r14	# i, i
 533      DE
 534 023c 49C1EB03 		shr	r11, 3	# bnd.143,
 535 0240 488D34F7 		lea	rsi, [rdi+rsi*8]	# ivtmp.161,
 536 0244 49C1E306 		sal	r11, 6	# tmp391,
 537 0248 C4627D59 		vpbroadcastq	ymm9, xmm3	# tmp382, i
 537      CB
 538 024d C4C1F96E 		vmovq	xmm4, r8	# pattern, pattern
 538      E0
 539 0252 4D8D3C33 		lea	r15, [r11+rsi]	# _344,
 540 0256 4183E340 		and	r11d, 64	# tmp391,
 541 025a C535D435 		vpaddq	ymm14, ymm9, YMMWORD PTR .LC0[rip]	# vect_vec_iv_.146, tmp382,
 541      00000000 
 542 0262 C4E27D58 		vpbroadcastd	ymm6, DWORD PTR -8[rsp]	# vect_cst__146, %sfp
 542      7424F8
 543 0269 C4E27D59 		vpbroadcastq	ymm2, xmm4	# vect_cst__156, pattern
 543      D4
 544 026e C4E27D58 		vpbroadcastd	ymm5, DWORD PTR -12[rsp]	# vect_cst__148, %sfp
 544      6C24F4
 545 0275 C4627D58 		vpbroadcastd	ymm12, DWORD PTR -4[rsp]	# vect_cst__152, %sfp
 545      6424FC
 546 027c C57D6F05 		vmovdqa	ymm8, YMMWORD PTR .LC1[rip]	# tmp496,
 546      00000000 
 547 0284 C5FD6F3D 		vmovdqa	ymm7, YMMWORD PTR .LC2[rip]	# tmp497,
 547      00000000 
 548 028c C57D6F2D 		vmovdqa	ymm13, YMMWORD PTR .LC3[rip]	# tmp498,
 548      00000000 
 549 0294 0F849600 		je	.L9	#,
 549      0000
 550              	.LVL31:
 561:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 551              		.loc 1 561 40 view .LVU155
 552 029a C57D7FF1 		vmovdqa	ymm1, ymm14	# vect_vec_iv_.146, vect_vec_iv_.146
 553 029e 4883C640 		add	rsi, 64	# ivtmp.161,
 554              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 555              		.loc 1 562 81 view .LVU156
 556 02a2 C575D4D7 		vpaddq	ymm10, ymm1, ymm7	# vect_vec_iv_.146, vect_vec_iv_.146, tmp497
 557 02a6 C4410DD4 		vpaddq	ymm14, ymm14, ymm8	# vect_vec_iv_.146, vect_vec_iv_.146, tmp496
 557      F0
 558              		.loc 1 562 9 is_stmt 1 view .LVU157
 559              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 560              		.loc 1 562 81 is_stmt 0 view .LVU158
 561 02ab C4C37546 		vperm2i128	ymm0, ymm1, ymm10, 32	# tmp538, vect_vec_iv_.146, vect_vec_iv_.146,
 561      C220
 562 02b1 C4437546 		vperm2i128	ymm11, ymm1, ymm10, 49	# tmp539, vect_vec_iv_.146, vect_vec_iv_.146,
 562      DA31
 563 02b7 C57D70F8 		vpshufd	ymm15, ymm0, 216	# tmp540, tmp538,
 563      D8
 564 02bc C4C17D70 		vpshufd	ymm3, ymm11, 216	# tmp541, tmp539,
 564      DBD8
 565 02c2 C5056CCB 		vpunpcklqdq	ymm9, ymm15, ymm3	# tmp542, tmp540, tmp541
 566 02c6 C4C24D40 		vpmulld	ymm4, ymm6, ymm9	# vect__45.148, vect_cst__146, tmp542
 566      E1
GAS LISTING /tmp/cc64mrzX.s 			page 23


 567              	.LVL32:
 568              		.loc 1 562 81 view .LVU159
 569 02cb C5DDFECD 		vpaddd	ymm1, ymm4, ymm5	# vect__47.149, vect__45.148, vect_cst__148
 570              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 571              		.loc 1 562 99 view .LVU160
 572 02cf C4C175DB 		vpand	ymm0, ymm1, ymm13	# vect__48.150, vect__47.149, tmp498
 572      C5
 573              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 574              		.loc 1 562 72 view .LVU161
 575 02d4 C51DFAF8 		vpsubd	ymm15, ymm12, ymm0	# vect__49.151, vect_cst__152, vect__48.150
 576              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 577              		.loc 1 562 116 view .LVU162
 578 02d8 C4627D35 		vpmovzxdq	ymm11, xmm0	#, vect__48.150
 578      D8
 579 02dd C4427D35 		vpmovzxdq	ymm10, xmm15	#, vect__49.151
 579      D7
 580 02e2 C442ED45 		vpsrlvq	ymm9, ymm2, ymm11	# vect_patt_136.155, vect_cst__156, vect_patt_137.154
 580      CB
 581 02e7 C4C2ED47 		vpsllvq	ymm3, ymm2, ymm10	# vect_patt_138.153, vect_cst__156, vect_patt_139.152
 581      DA
 582 02ec C4637D39 		vextracti128	xmm1, ymm15, 0x1	# tmp554, vect__49.151
 582      F901
 583 02f2 C4C165EB 		vpor	ymm4, ymm3, ymm9	# vect__55.156, vect_patt_138.153, vect_patt_136.155
 583      E1
 584 02f7 C4E37D39 		vextracti128	xmm0, ymm0, 0x1	# tmp557, vect__48.150
 584      C001
 585 02fd C4627D35 		vpmovzxdq	ymm15, xmm1	# vect_patt_139.152, tmp554
 585      F9
 586 0302 C4E27D35 		vpmovzxdq	ymm3, xmm0	# vect_patt_137.154, tmp557
 586      D8
 587 0307 C442ED47 		vpsllvq	ymm10, ymm2, ymm15	# vect_patt_138.153, vect_cst__156, vect_patt_139.152
 587      D7
 588 030c C462ED45 		vpsrlvq	ymm11, ymm2, ymm3	# vect_patt_136.155, vect_cst__156, vect_patt_137.154
 588      DB
 589              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 590              		.loc 1 562 44 view .LVU163
 591 0311 C5FD7F66 		vmovdqa	YMMWORD PTR -64[rsi], ymm4	# MEM[base: _341, offset: 0B], vect__55.156
 591      C0
 592              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 593              		.loc 1 562 116 view .LVU164
 594 0316 C4412DEB 		vpor	ymm9, ymm10, ymm11	# vect__55.156, vect_patt_138.153, vect_patt_136.155
 594      CB
 595              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 596              		.loc 1 562 44 view .LVU165
 597 031b C57D7F4E 		vmovdqa	YMMWORD PTR -32[rsi], ymm9	# MEM[base: _341, offset: 32B], vect__55.156
 597      E0
 561:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 598              		.loc 1 561 40 is_stmt 1 view .LVU166
 561:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 599              		.loc 1 561 25 view .LVU167
 600 0320 4C39FE   		cmp	rsi, r15	# ivtmp.161, _344
 601 0323 0F841201 		je	.L37	#,
 601      0000
 602 0329 0F1F8000 		.p2align 4
 602      000000
 603              		.p2align 3
 604              	.L9:
GAS LISTING /tmp/cc64mrzX.s 			page 24


 605              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 606              		.loc 1 562 81 is_stmt 0 discriminator 3 view .LVU168
 607 0330 C58DD4CF 		vpaddq	ymm1, ymm14, ymm7	# vect_vec_iv_.146, vect_vec_iv_.146, tmp497
 608 0334 C4C10DD4 		vpaddq	ymm4, ymm14, ymm8	# vect_vec_iv_.146, vect_vec_iv_.146, tmp496
 608      E0
 609              		.loc 1 562 9 is_stmt 1 discriminator 3 view .LVU169
 610              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 611              		.loc 1 562 81 is_stmt 0 discriminator 3 view .LVU170
 612 0339 C4630D46 		vperm2i128	ymm15, ymm14, ymm1, 32	# tmp398, vect_vec_iv_.146, vect_vec_iv_.146,
 612      F920
 613 033f C4630D46 		vperm2i128	ymm14, ymm14, ymm1, 49	# tmp399, vect_vec_iv_.146, vect_vec_iv_.146,
 613      F131
 614 0345 C4417D70 		vpshufd	ymm10, ymm15, 216	# tmp396, tmp398,
 614      D7D8
 615 034b 4883EE80 		sub	rsi, -128	# ivtmp.161,
 616 034f C4C17D70 		vpshufd	ymm0, ymm14, 216	# tmp397, tmp399,
 616      C6D8
 617 0355 C5AD6CD8 		vpunpcklqdq	ymm3, ymm10, ymm0	# tmp400, tmp396, tmp397
 618 0359 C4624D40 		vpmulld	ymm11, ymm6, ymm3	# vect__45.148, vect_cst__146, tmp400
 618      DB
 619 035e C525FECD 		vpaddd	ymm9, ymm11, ymm5	# vect__47.149, vect__45.148, vect_cst__148
 620              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 621              		.loc 1 562 99 discriminator 3 view .LVU171
 622 0362 C44135DB 		vpand	ymm15, ymm9, ymm13	# vect__48.150, vect__47.149, tmp498
 622      FD
 623              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 624              		.loc 1 562 72 discriminator 3 view .LVU172
 625 0367 C4C11DFA 		vpsubd	ymm1, ymm12, ymm15	# vect__49.151, vect_cst__152, vect__48.150
 625      CF
 626              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 627              		.loc 1 562 116 discriminator 3 view .LVU173
 628 036c C4C27D35 		vpmovzxdq	ymm0, xmm15	#, vect__48.150
 628      C7
 629 0371 C4627D35 		vpmovzxdq	ymm14, xmm1	#, vect__49.151
 629      F1
 630 0376 C4E2ED45 		vpsrlvq	ymm3, ymm2, ymm0	# vect_patt_136.155, vect_cst__156, vect_patt_137.154
 630      D8
 631 037b C442ED47 		vpsllvq	ymm10, ymm2, ymm14	# vect_patt_138.153, vect_cst__156, vect_patt_139.152
 631      D6
 632 0380 C4C37D39 		vextracti128	xmm9, ymm1, 0x1	# tmp412, vect__49.151
 632      C901
 633 0386 C52DEBDB 		vpor	ymm11, ymm10, ymm3	# vect__55.156, vect_patt_138.153, vect_patt_136.155
 634 038a C4437D39 		vextracti128	xmm15, ymm15, 0x1	# tmp415, vect__48.150
 634      FF01
 635 0390 C4C27D35 		vpmovzxdq	ymm1, xmm9	# vect_patt_139.152, tmp412
 635      C9
 636 0395 C4427D35 		vpmovzxdq	ymm10, xmm15	# vect_patt_137.154, tmp415
 636      D7
 637 039a C462ED47 		vpsllvq	ymm14, ymm2, ymm1	# vect_patt_138.153, vect_cst__156, vect_patt_139.152
 637      F1
 638 039f C4C2ED45 		vpsrlvq	ymm0, ymm2, ymm10	# vect_patt_136.155, vect_cst__156, vect_patt_137.154
 638      C2
 639              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 640              		.loc 1 562 44 discriminator 3 view .LVU174
 641 03a4 C57D7F5E 		vmovdqa	YMMWORD PTR -128[rsi], ymm11	# MEM[base: _341, offset: 0B], vect__55.156
 641      80
 642              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
GAS LISTING /tmp/cc64mrzX.s 			page 25


 643              		.loc 1 562 81 discriminator 3 view .LVU175
 644 03a9 C55DD4DF 		vpaddq	ymm11, ymm4, ymm7	# vect_vec_iv_.146, vect_vec_iv_.146, tmp497
 645              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 646              		.loc 1 562 116 discriminator 3 view .LVU176
 647 03ad C58DEBD8 		vpor	ymm3, ymm14, ymm0	# vect__55.156, vect_patt_138.153, vect_patt_136.155
 648              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 649              		.loc 1 562 81 discriminator 3 view .LVU177
 650 03b1 C4435D46 		vperm2i128	ymm9, ymm4, ymm11, 32	# tmp513, vect_vec_iv_.146, vect_vec_iv_.146,
 650      CB20
 651 03b7 C4C17D70 		vpshufd	ymm1, ymm9, 216	# tmp515, tmp513,
 651      C9D8
 652 03bd C4415DD4 		vpaddq	ymm14, ymm4, ymm8	# vect_vec_iv_.146, vect_vec_iv_.146, tmp496
 652      F0
 653              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 654              		.loc 1 562 44 discriminator 3 view .LVU178
 655 03c2 C5FD7F5E 		vmovdqa	YMMWORD PTR -96[rsi], ymm3	# MEM[base: _341, offset: 32B], vect__55.156
 655      A0
 561:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 656              		.loc 1 561 40 is_stmt 1 discriminator 3 view .LVU179
 561:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 657              		.loc 1 561 25 discriminator 3 view .LVU180
 658              		.loc 1 562 9 discriminator 3 view .LVU181
 659              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 660              		.loc 1 562 81 is_stmt 0 discriminator 3 view .LVU182
 661 03c7 C4C35D46 		vperm2i128	ymm4, ymm4, ymm11, 49	# tmp514, vect_vec_iv_.146, vect_vec_iv_.146,
 661      E331
 662 03cd C57D70FC 		vpshufd	ymm15, ymm4, 216	# tmp516, tmp514,
 662      D8
 663 03d2 C441756C 		vpunpcklqdq	ymm10, ymm1, ymm15	# tmp517, tmp515, tmp516
 663      D7
 664 03d7 C4C24D40 		vpmulld	ymm0, ymm6, ymm10	# vect__45.148, vect_cst__146, tmp517
 664      C2
 665 03dc C5FDFEDD 		vpaddd	ymm3, ymm0, ymm5	# vect__47.149, vect__45.148, vect_cst__148
 666              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 667              		.loc 1 562 99 discriminator 3 view .LVU183
 668 03e0 C44165DB 		vpand	ymm9, ymm3, ymm13	# vect__48.150, vect__47.149, tmp498
 668      CD
 669              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 670              		.loc 1 562 72 discriminator 3 view .LVU184
 671 03e5 C4C11DFA 		vpsubd	ymm4, ymm12, ymm9	# vect__49.151, vect_cst__152, vect__48.150
 671      E1
 672              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 673              		.loc 1 562 116 discriminator 3 view .LVU185
 674 03ea C4427D35 		vpmovzxdq	ymm15, xmm9	#, vect__48.150
 674      F9
 675 03ef C4627D35 		vpmovzxdq	ymm11, xmm4	#, vect__49.151
 675      DC
 676 03f4 C442ED45 		vpsrlvq	ymm10, ymm2, ymm15	# vect_patt_136.155, vect_cst__156, vect_patt_137.154
 676      D7
 677 03f9 C4C2ED47 		vpsllvq	ymm1, ymm2, ymm11	# vect_patt_138.153, vect_cst__156, vect_patt_139.152
 677      CB
 678 03fe C4E37D39 		vextracti128	xmm3, ymm4, 0x1	# tmp529, vect__49.151
 678      E301
 679 0404 C4C175EB 		vpor	ymm0, ymm1, ymm10	# vect__55.156, vect_patt_138.153, vect_patt_136.155
 679      C2
 680 0409 C4437D39 		vextracti128	xmm9, ymm9, 0x1	# tmp532, vect__48.150
 680      C901
GAS LISTING /tmp/cc64mrzX.s 			page 26


 681 040f C4E27D35 		vpmovzxdq	ymm4, xmm3	# vect_patt_139.152, tmp529
 681      E3
 682 0414 C4C27D35 		vpmovzxdq	ymm1, xmm9	# vect_patt_137.154, tmp532
 682      C9
 683 0419 C462ED47 		vpsllvq	ymm11, ymm2, ymm4	# vect_patt_138.153, vect_cst__156, vect_patt_139.152
 683      DC
 684 041e C462ED45 		vpsrlvq	ymm15, ymm2, ymm1	# vect_patt_136.155, vect_cst__156, vect_patt_137.154
 684      F9
 685              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 686              		.loc 1 562 44 discriminator 3 view .LVU186
 687 0423 C5FD7F46 		vmovdqa	YMMWORD PTR -64[rsi], ymm0	# MEM[base: _341, offset: 0B], vect__55.156
 687      C0
 688              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 689              		.loc 1 562 116 discriminator 3 view .LVU187
 690 0428 C44125EB 		vpor	ymm10, ymm11, ymm15	# vect__55.156, vect_patt_138.153, vect_patt_136.155
 690      D7
 691              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 692              		.loc 1 562 44 discriminator 3 view .LVU188
 693 042d C57D7F56 		vmovdqa	YMMWORD PTR -32[rsi], ymm10	# MEM[base: _341, offset: 32B], vect__55.156
 693      E0
 561:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 694              		.loc 1 561 40 is_stmt 1 discriminator 3 view .LVU189
 561:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 695              		.loc 1 561 25 discriminator 3 view .LVU190
 696 0432 4C39FE   		cmp	rsi, r15	# ivtmp.161, _344
 697 0435 0F85F5FE 		jne	.L9	#,
 697      FFFF
 698              	.L37:
 699 043b 4C89EE   		mov	rsi, r13	# niters_vector_mult_vf.144, niters.142
 700 043e 4883E6F8 		and	rsi, -8	# niters_vector_mult_vf.144,
 701 0442 4901F6   		add	r14, rsi	# tmp.145, niters_vector_mult_vf.144
 702 0445 4939F5   		cmp	r13, rsi	# niters.142, niters_vector_mult_vf.144
 703 0448 0F845A02 		je	.L50	#,
 703      0000
 704 044e C5F877   		vzeroupper
 705              	.L6:
 706              	.LVL33:
 707              		.loc 1 562 9 view .LVU191
 708              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 709              		.loc 1 562 81 is_stmt 0 view .LVU192
 710 0451 4189D7   		mov	r15d, edx	# tmp418, tmp355
 711              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 712              		.loc 1 562 72 view .LVU193
 713 0454 4189C5   		mov	r13d, eax	# tmp421, pattern_size
 714              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 715              		.loc 1 562 81 view .LVU194
 716 0457 450FAFFE 		imul	r15d, r14d	# tmp418, tmp.145
 717              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 718              		.loc 1 562 17 view .LVU195
 719 045b 4F8D1C16 		lea	r11, [r14+r10]	# tmp420,
 720              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 721              		.loc 1 562 81 view .LVU196
 722 045f 4101CF   		add	r15d, ecx	# tmp419, shift
 723              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 724              		.loc 1 562 99 view .LVU197
 725 0462 4183E73F 		and	r15d, 63	# _49,
 726              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
GAS LISTING /tmp/cc64mrzX.s 			page 27


 727              		.loc 1 562 127 view .LVU198
 728 0466 C4C283F7 		shrx	rsi, r8, r15	# tmp423, pattern, _49
 728      F0
 729              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 730              		.loc 1 562 72 view .LVU199
 731 046b 4529FD   		sub	r13d, r15d	# tmp421, _49
 732              	# sieve_extend.c:561:     for (counter_t i=0; i<=loop_range; ++i ) {
 561:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 733              		.loc 1 561 40 view .LVU200
 734 046e 4D8D7E01 		lea	r15, 1[r14]	# i,
 735              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 736              		.loc 1 562 55 view .LVU201
 737 0472 C44291F7 		shlx	r13, r8, r13	# tmp422, pattern, tmp421
 737      E8
 738              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 739              		.loc 1 562 116 view .LVU202
 740 0477 4C09EE   		or	rsi, r13	# tmp424, tmp422
 741 047a 4A8934DF 		mov	QWORD PTR [rdi+r11*8], rsi	# *_55, tmp424
 561:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 742              		.loc 1 561 40 is_stmt 1 view .LVU203
 743              	.LVL34:
 561:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 744              		.loc 1 561 25 view .LVU204
 745              	# sieve_extend.c:561:     for (counter_t i=0; i<=loop_range; ++i ) {
 561:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 746              		.loc 1 561 5 is_stmt 0 view .LVU205
 747 047e 4D39CF   		cmp	r15, r9	# i, loop_range
 748 0481 0F87F101 		ja	.L10	#,
 748      0000
 749              		.loc 1 562 9 is_stmt 1 view .LVU206
 750              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 751              		.loc 1 562 81 is_stmt 0 view .LVU207
 752 0487 4189D3   		mov	r11d, edx	# tmp425, tmp355
 753              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 754              		.loc 1 562 72 view .LVU208
 755 048a 4189C5   		mov	r13d, eax	# tmp428, pattern_size
 756              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 757              		.loc 1 562 81 view .LVU209
 758 048d 450FAFDF 		imul	r11d, r15d	# tmp425, i
 759              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 760              		.loc 1 562 17 view .LVU210
 761 0491 4D01D7   		add	r15, r10	# tmp427, destination_start_word
 762              	.LVL35:
 763              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 764              		.loc 1 562 81 view .LVU211
 765 0494 4101CB   		add	r11d, ecx	# tmp426, shift
 766              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 767              		.loc 1 562 99 view .LVU212
 768 0497 4183E33F 		and	r11d, 63	# _83,
 769              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 770              		.loc 1 562 72 view .LVU213
 771 049b 4529DD   		sub	r13d, r11d	# tmp428, _83
 772              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 773              		.loc 1 562 127 view .LVU214
 774 049e C442A3F7 		shrx	r11, r8, r11	# tmp430, pattern, _83
 774      D8
 775              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
GAS LISTING /tmp/cc64mrzX.s 			page 28


 776              		.loc 1 562 55 view .LVU215
 777 04a3 C4C291F7 		shlx	rsi, r8, r13	# tmp429, pattern, tmp428
 777      F0
 778              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 779              		.loc 1 562 116 view .LVU216
 780 04a8 4C09DE   		or	rsi, r11	# tmp431, tmp430
 781 04ab 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_181, tmp431
 561:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 782              		.loc 1 561 40 is_stmt 1 view .LVU217
 783 04af 4D8D7E02 		lea	r15, 2[r14]	# i,
 784              	.LVL36:
 561:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 785              		.loc 1 561 25 view .LVU218
 786              	# sieve_extend.c:561:     for (counter_t i=0; i<=loop_range; ++i ) {
 561:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 787              		.loc 1 561 5 is_stmt 0 view .LVU219
 788 04b3 4D39F9   		cmp	r9, r15	# loop_range, i
 789 04b6 0F82BC01 		jb	.L10	#,
 789      0000
 790              		.loc 1 562 9 is_stmt 1 view .LVU220
 791              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 792              		.loc 1 562 81 is_stmt 0 view .LVU221
 793 04bc 89D6     		mov	esi, edx	# tmp432, tmp355
 794              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 795              		.loc 1 562 72 view .LVU222
 796 04be 4189C5   		mov	r13d, eax	# tmp435, pattern_size
 797              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 798              		.loc 1 562 81 view .LVU223
 799 04c1 410FAFF7 		imul	esi, r15d	# tmp432, i
 800              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 801              		.loc 1 562 17 view .LVU224
 802 04c5 4D01D7   		add	r15, r10	# tmp434, destination_start_word
 803              	.LVL37:
 804              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 805              		.loc 1 562 81 view .LVU225
 806 04c8 01CE     		add	esi, ecx	# tmp433, shift
 807              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 808              		.loc 1 562 99 view .LVU226
 809 04ca 83E63F   		and	esi, 63	# _190,
 810              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 811              		.loc 1 562 72 view .LVU227
 812 04cd 4129F5   		sub	r13d, esi	# tmp435, _190
 813              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 814              		.loc 1 562 127 view .LVU228
 815 04d0 C4C2CBF7 		shrx	rsi, r8, rsi	# tmp437, pattern, _190
 815      F0
 816              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 817              		.loc 1 562 55 view .LVU229
 818 04d5 C44291F7 		shlx	r11, r8, r13	# tmp436, pattern, tmp435
 818      D8
 819              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 820              		.loc 1 562 116 view .LVU230
 821 04da 4C09DE   		or	rsi, r11	# tmp438, tmp436
 822 04dd 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_196, tmp438
 561:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 823              		.loc 1 561 40 is_stmt 1 view .LVU231
 824 04e1 4D8D7E03 		lea	r15, 3[r14]	# i,
GAS LISTING /tmp/cc64mrzX.s 			page 29


 825              	.LVL38:
 561:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 826              		.loc 1 561 25 view .LVU232
 827              	# sieve_extend.c:561:     for (counter_t i=0; i<=loop_range; ++i ) {
 561:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 828              		.loc 1 561 5 is_stmt 0 view .LVU233
 829 04e5 4D39F9   		cmp	r9, r15	# loop_range, i
 830 04e8 0F828A01 		jb	.L10	#,
 830      0000
 831              		.loc 1 562 9 is_stmt 1 view .LVU234
 832              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 833              		.loc 1 562 81 is_stmt 0 view .LVU235
 834 04ee 4189D3   		mov	r11d, edx	# tmp439, tmp355
 835              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 836              		.loc 1 562 72 view .LVU236
 837 04f1 4189C5   		mov	r13d, eax	# tmp442, pattern_size
 838              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 839              		.loc 1 562 81 view .LVU237
 840 04f4 450FAFDF 		imul	r11d, r15d	# tmp439, i
 841              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 842              		.loc 1 562 17 view .LVU238
 843 04f8 4D01D7   		add	r15, r10	# tmp441, destination_start_word
 844              	.LVL39:
 845              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 846              		.loc 1 562 81 view .LVU239
 847 04fb 4101CB   		add	r11d, ecx	# tmp440, shift
 848              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 849              		.loc 1 562 99 view .LVU240
 850 04fe 4183E33F 		and	r11d, 63	# _205,
 851              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 852              		.loc 1 562 127 view .LVU241
 853 0502 C4C2A3F7 		shrx	rsi, r8, r11	# tmp444, pattern, _205
 853      F0
 854              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 855              		.loc 1 562 72 view .LVU242
 856 0507 4529DD   		sub	r13d, r11d	# tmp442, _205
 857              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 858              		.loc 1 562 55 view .LVU243
 859 050a C44291F7 		shlx	r13, r8, r13	# tmp443, pattern, tmp442
 859      E8
 860              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 861              		.loc 1 562 116 view .LVU244
 862 050f 4C09EE   		or	rsi, r13	# tmp445, tmp443
 863 0512 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_211, tmp445
 561:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 864              		.loc 1 561 40 is_stmt 1 view .LVU245
 865 0516 4D8D7E04 		lea	r15, 4[r14]	# i,
 866              	.LVL40:
 561:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 867              		.loc 1 561 25 view .LVU246
 868              	# sieve_extend.c:561:     for (counter_t i=0; i<=loop_range; ++i ) {
 561:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 869              		.loc 1 561 5 is_stmt 0 view .LVU247
 870 051a 4D39F9   		cmp	r9, r15	# loop_range, i
 871 051d 0F825501 		jb	.L10	#,
 871      0000
 872              		.loc 1 562 9 is_stmt 1 view .LVU248
GAS LISTING /tmp/cc64mrzX.s 			page 30


 873              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 874              		.loc 1 562 81 is_stmt 0 view .LVU249
 875 0523 4189D3   		mov	r11d, edx	# tmp446, tmp355
 876              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 877              		.loc 1 562 72 view .LVU250
 878 0526 4189C5   		mov	r13d, eax	# tmp449, pattern_size
 879              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 880              		.loc 1 562 81 view .LVU251
 881 0529 450FAFDF 		imul	r11d, r15d	# tmp446, i
 882              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 883              		.loc 1 562 17 view .LVU252
 884 052d 4D01D7   		add	r15, r10	# tmp448, destination_start_word
 885              	.LVL41:
 886              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 887              		.loc 1 562 81 view .LVU253
 888 0530 4101CB   		add	r11d, ecx	# tmp447, shift
 889              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 890              		.loc 1 562 99 view .LVU254
 891 0533 4183E33F 		and	r11d, 63	# _220,
 892              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 893              		.loc 1 562 127 view .LVU255
 894 0537 C4C2A3F7 		shrx	rsi, r8, r11	# tmp451, pattern, _220
 894      F0
 895              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 896              		.loc 1 562 72 view .LVU256
 897 053c 4529DD   		sub	r13d, r11d	# tmp449, _220
 898              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 899              		.loc 1 562 55 view .LVU257
 900 053f C44291F7 		shlx	r13, r8, r13	# tmp450, pattern, tmp449
 900      E8
 901              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 902              		.loc 1 562 116 view .LVU258
 903 0544 4C09EE   		or	rsi, r13	# tmp452, tmp450
 904 0547 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_226, tmp452
 561:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 905              		.loc 1 561 40 is_stmt 1 view .LVU259
 906 054b 4D8D7E05 		lea	r15, 5[r14]	# i,
 907              	.LVL42:
 561:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 908              		.loc 1 561 25 view .LVU260
 909              	# sieve_extend.c:561:     for (counter_t i=0; i<=loop_range; ++i ) {
 561:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 910              		.loc 1 561 5 is_stmt 0 view .LVU261
 911 054f 4D39F9   		cmp	r9, r15	# loop_range, i
 912 0552 0F822001 		jb	.L10	#,
 912      0000
 913              		.loc 1 562 9 is_stmt 1 view .LVU262
 914              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 915              		.loc 1 562 81 is_stmt 0 view .LVU263
 916 0558 4189D3   		mov	r11d, edx	# tmp453, tmp355
 917              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 918              		.loc 1 562 72 view .LVU264
 919 055b 4189C5   		mov	r13d, eax	# tmp456, pattern_size
 920              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 921              		.loc 1 562 81 view .LVU265
 922 055e 450FAFDF 		imul	r11d, r15d	# tmp453, i
 923              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
GAS LISTING /tmp/cc64mrzX.s 			page 31


 924              		.loc 1 562 17 view .LVU266
 925 0562 4D01D7   		add	r15, r10	# tmp455, destination_start_word
 926              	.LVL43:
 927              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 928              		.loc 1 562 81 view .LVU267
 929 0565 4101CB   		add	r11d, ecx	# tmp454, shift
 930              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 931              		.loc 1 562 99 view .LVU268
 932 0568 4183E33F 		and	r11d, 63	# _235,
 933              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 934              		.loc 1 562 127 view .LVU269
 935 056c C4C2A3F7 		shrx	rsi, r8, r11	# tmp458, pattern, _235
 935      F0
 936              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 937              		.loc 1 562 72 view .LVU270
 938 0571 4529DD   		sub	r13d, r11d	# tmp456, _235
 939              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 940              		.loc 1 562 55 view .LVU271
 941 0574 C44291F7 		shlx	r13, r8, r13	# tmp457, pattern, tmp456
 941      E8
 942              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 943              		.loc 1 562 116 view .LVU272
 944 0579 4C09EE   		or	rsi, r13	# tmp459, tmp457
 945 057c 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_241, tmp459
 561:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 946              		.loc 1 561 40 is_stmt 1 view .LVU273
 947 0580 4D8D7E06 		lea	r15, 6[r14]	# i,
 948              	.LVL44:
 561:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 949              		.loc 1 561 25 view .LVU274
 950              	# sieve_extend.c:561:     for (counter_t i=0; i<=loop_range; ++i ) {
 561:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 951              		.loc 1 561 5 is_stmt 0 view .LVU275
 952 0584 4D39F9   		cmp	r9, r15	# loop_range, i
 953 0587 0F82EB00 		jb	.L10	#,
 953      0000
 954              		.loc 1 562 9 is_stmt 1 view .LVU276
 955              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 956              		.loc 1 562 81 is_stmt 0 view .LVU277
 957 058d 4189D3   		mov	r11d, edx	# tmp460, tmp355
 958              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 959              		.loc 1 562 72 view .LVU278
 960 0590 4189C5   		mov	r13d, eax	# tmp463, pattern_size
 961              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 962              		.loc 1 562 81 view .LVU279
 963 0593 450FAFDF 		imul	r11d, r15d	# tmp460, i
 964              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 965              		.loc 1 562 17 view .LVU280
 966 0597 4D01D7   		add	r15, r10	# tmp462, destination_start_word
 967              	.LVL45:
 968              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 969              		.loc 1 562 81 view .LVU281
 970 059a 4101CB   		add	r11d, ecx	# tmp461, shift
 971              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 972              		.loc 1 562 99 view .LVU282
 973 059d 4183E33F 		and	r11d, 63	# _250,
 974              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
GAS LISTING /tmp/cc64mrzX.s 			page 32


 975              		.loc 1 562 127 view .LVU283
 976 05a1 C4C2A3F7 		shrx	rsi, r8, r11	# tmp465, pattern, _250
 976      F0
 977              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 978              		.loc 1 562 72 view .LVU284
 979 05a6 4529DD   		sub	r13d, r11d	# tmp463, _250
 980              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 981              		.loc 1 562 55 view .LVU285
 982 05a9 C44291F7 		shlx	r13, r8, r13	# tmp464, pattern, tmp463
 982      E8
 983              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 984              		.loc 1 562 116 view .LVU286
 985 05ae 4C09EE   		or	rsi, r13	# tmp466, tmp464
 986 05b1 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_256, tmp466
 561:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 987              		.loc 1 561 40 is_stmt 1 view .LVU287
 988 05b5 4D8D7E07 		lea	r15, 7[r14]	# i,
 989              	.LVL46:
 561:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 990              		.loc 1 561 25 view .LVU288
 991              	# sieve_extend.c:561:     for (counter_t i=0; i<=loop_range; ++i ) {
 561:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 992              		.loc 1 561 5 is_stmt 0 view .LVU289
 993 05b9 4D39F9   		cmp	r9, r15	# loop_range, i
 994 05bc 0F82B600 		jb	.L10	#,
 994      0000
 995              		.loc 1 562 9 is_stmt 1 view .LVU290
 996              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 997              		.loc 1 562 81 is_stmt 0 view .LVU291
 998 05c2 4189D3   		mov	r11d, edx	# tmp467, tmp355
 999              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1000              		.loc 1 562 72 view .LVU292
 1001 05c5 4189C5   		mov	r13d, eax	# tmp470, pattern_size
 1002              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1003              		.loc 1 562 81 view .LVU293
 1004 05c8 450FAFDF 		imul	r11d, r15d	# tmp467, i
 1005              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1006              		.loc 1 562 17 view .LVU294
 1007 05cc 4D01D7   		add	r15, r10	# tmp469, destination_start_word
 1008              	.LVL47:
 1009              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1010              		.loc 1 562 81 view .LVU295
 1011 05cf 4101CB   		add	r11d, ecx	# tmp468, shift
 1012              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1013              		.loc 1 562 99 view .LVU296
 1014 05d2 4183E33F 		and	r11d, 63	# _265,
 1015              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1016              		.loc 1 562 127 view .LVU297
 1017 05d6 C4C2A3F7 		shrx	rsi, r8, r11	# tmp472, pattern, _265
 1017      F0
 1018              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1019              		.loc 1 562 72 view .LVU298
 1020 05db 4529DD   		sub	r13d, r11d	# tmp470, _265
 1021              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1022              		.loc 1 562 55 view .LVU299
 1023 05de C44291F7 		shlx	r13, r8, r13	# tmp471, pattern, tmp470
 1023      E8
GAS LISTING /tmp/cc64mrzX.s 			page 33


 1024              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1025              		.loc 1 562 116 view .LVU300
 1026 05e3 4C09EE   		or	rsi, r13	# tmp473, tmp471
 1027 05e6 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_271, tmp473
 561:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1028              		.loc 1 561 40 is_stmt 1 view .LVU301
 1029 05ea 4D8D7E08 		lea	r15, 8[r14]	# i,
 1030              	.LVL48:
 561:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1031              		.loc 1 561 25 view .LVU302
 1032              	# sieve_extend.c:561:     for (counter_t i=0; i<=loop_range; ++i ) {
 561:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1033              		.loc 1 561 5 is_stmt 0 view .LVU303
 1034 05ee 4D39F9   		cmp	r9, r15	# loop_range, i
 1035 05f1 0F828100 		jb	.L10	#,
 1035      0000
 1036              		.loc 1 562 9 is_stmt 1 view .LVU304
 1037              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1038              		.loc 1 562 81 is_stmt 0 view .LVU305
 1039 05f7 4189D3   		mov	r11d, edx	# tmp474, tmp355
 1040              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1041              		.loc 1 562 72 view .LVU306
 1042 05fa 4189C5   		mov	r13d, eax	# tmp477, pattern_size
 1043              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1044              		.loc 1 562 81 view .LVU307
 1045 05fd 450FAFDF 		imul	r11d, r15d	# tmp474, i
 1046              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1047              		.loc 1 562 17 view .LVU308
 1048 0601 4D01D7   		add	r15, r10	# tmp476, destination_start_word
 1049              	.LVL49:
 1050              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1051              		.loc 1 562 81 view .LVU309
 1052 0604 4101CB   		add	r11d, ecx	# tmp475, shift
 1053              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1054              		.loc 1 562 99 view .LVU310
 1055 0607 4183E33F 		and	r11d, 63	# _280,
 1056              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1057              		.loc 1 562 127 view .LVU311
 1058 060b C4C2A3F7 		shrx	rsi, r8, r11	# tmp479, pattern, _280
 1058      F0
 1059              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1060              		.loc 1 562 72 view .LVU312
 1061 0610 4529DD   		sub	r13d, r11d	# tmp477, _280
 1062              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1063              		.loc 1 562 55 view .LVU313
 1064 0613 C44291F7 		shlx	r13, r8, r13	# tmp478, pattern, tmp477
 1064      E8
 1065              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1066              		.loc 1 562 116 view .LVU314
 1067 0618 4C09EE   		or	rsi, r13	# tmp480, tmp478
 1068 061b 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_286, tmp480
 561:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1069              		.loc 1 561 40 is_stmt 1 view .LVU315
 1070 061f 4D8D7E09 		lea	r15, 9[r14]	# i,
 1071              	.LVL50:
 561:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1072              		.loc 1 561 25 view .LVU316
GAS LISTING /tmp/cc64mrzX.s 			page 34


 1073              	# sieve_extend.c:561:     for (counter_t i=0; i<=loop_range; ++i ) {
 561:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1074              		.loc 1 561 5 is_stmt 0 view .LVU317
 1075 0623 4D39F9   		cmp	r9, r15	# loop_range, i
 1076 0626 7250     		jb	.L10	#,
 1077              		.loc 1 562 9 is_stmt 1 view .LVU318
 1078              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1079              		.loc 1 562 81 is_stmt 0 view .LVU319
 1080 0628 4189D3   		mov	r11d, edx	# tmp481, tmp355
 1081              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1082              		.loc 1 562 72 view .LVU320
 1083 062b 4189C5   		mov	r13d, eax	# tmp484, pattern_size
 1084              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1085              		.loc 1 562 81 view .LVU321
 1086 062e 450FAFDF 		imul	r11d, r15d	# tmp481, i
 1087              	# sieve_extend.c:561:     for (counter_t i=0; i<=loop_range; ++i ) {
 561:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1088              		.loc 1 561 40 view .LVU322
 1089 0632 4983C60A 		add	r14, 10	# i,
 1090              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1091              		.loc 1 562 17 view .LVU323
 1092 0636 4D01D7   		add	r15, r10	# tmp483, destination_start_word
 1093              	.LVL51:
 1094              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1095              		.loc 1 562 81 view .LVU324
 1096 0639 4101CB   		add	r11d, ecx	# tmp482, shift
 1097              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1098              		.loc 1 562 99 view .LVU325
 1099 063c 4183E33F 		and	r11d, 63	# _295,
 1100              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1101              		.loc 1 562 127 view .LVU326
 1102 0640 C4C2A3F7 		shrx	rsi, r8, r11	# tmp486, pattern, _295
 1102      F0
 1103              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1104              		.loc 1 562 72 view .LVU327
 1105 0645 4529DD   		sub	r13d, r11d	# tmp484, _295
 1106              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1107              		.loc 1 562 55 view .LVU328
 1108 0648 C44291F7 		shlx	r13, r8, r13	# tmp485, pattern, tmp484
 1108      E8
 1109              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1110              		.loc 1 562 116 view .LVU329
 1111 064d 4C09EE   		or	rsi, r13	# tmp487, tmp485
 1112              	# sieve_extend.c:561:     for (counter_t i=0; i<=loop_range; ++i ) {
 561:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1113              		.loc 1 561 5 view .LVU330
 1114 0650 4D39F1   		cmp	r9, r14	# loop_range, i
 1115              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1116              		.loc 1 562 116 view .LVU331
 1117 0653 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_301, tmp487
 561:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1118              		.loc 1 561 40 is_stmt 1 view .LVU332
 1119              	.LVL52:
 561:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1120              		.loc 1 561 25 view .LVU333
 1121              	# sieve_extend.c:561:     for (counter_t i=0; i<=loop_range; ++i ) {
 561:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
GAS LISTING /tmp/cc64mrzX.s 			page 35


 1122              		.loc 1 561 5 is_stmt 0 view .LVU334
 1123 0657 721F     		jb	.L10	#,
 1124              		.loc 1 562 9 is_stmt 1 view .LVU335
 1125              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1126              		.loc 1 562 81 is_stmt 0 view .LVU336
 1127 0659 410FAFD6 		imul	edx, r14d	# tmp488, i
 1128              	.LVL53:
 1129              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1130              		.loc 1 562 17 view .LVU337
 1131 065d 4D01D6   		add	r14, r10	# tmp490, destination_start_word
 1132              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1133              		.loc 1 562 81 view .LVU338
 1134 0660 01D1     		add	ecx, edx	# tmp489, tmp488
 1135              	.LVL54:
 1136              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1137              		.loc 1 562 99 view .LVU339
 1138 0662 83E13F   		and	ecx, 63	# _108,
 1139              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1140              		.loc 1 562 72 view .LVU340
 1141 0665 29C8     		sub	eax, ecx	# tmp491, _108
 1142              	.LVL55:
 1143              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1144              		.loc 1 562 55 view .LVU341
 1145 0667 C4C2F9F7 		shlx	rdx, r8, rax	# tmp492, pattern, tmp491
 1145      D0
 1146              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1147              		.loc 1 562 127 view .LVU342
 1148 066c C442F3F7 		shrx	r8, r8, rcx	# tmp493, pattern, _108
 1148      C0
 1149              	.LVL56:
 1150              	# sieve_extend.c:562:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1151              		.loc 1 562 116 view .LVU343
 1152 0671 4909D0   		or	r8, rdx	# tmp494, tmp492
 1153 0674 4E8904F7 		mov	QWORD PTR [rdi+r14*8], r8	# *_42, tmp494
 561:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1154              		.loc 1 561 40 is_stmt 1 view .LVU344
 561:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1155              		.loc 1 561 25 view .LVU345
 1156              	.L10:
 561:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1157              		.loc 1 561 25 is_stmt 0 view .LVU346
 1158              	.LBE317:
 563:sieve_extend.c ****     }
 564:sieve_extend.c ****     bitarray[destination_stop_word] &= chopmask(destination_stop);
 1159              		.loc 1 564 5 is_stmt 1 view .LVU347
 1160              	# sieve_extend.c:564:     bitarray[destination_stop_word] &= chopmask(destination_stop);
 1161              		.loc 1 564 37 is_stmt 0 view .LVU348
 1162 0678 4A211CE7 		and	QWORD PTR [rdi+r12*8], rbx	# *_57, _124
 1163              	# sieve_extend.c:565: }
 565:sieve_extend.c **** }
 1164              		.loc 1 565 1 view .LVU349
 1165 067c 488D65D8 		lea	rsp, -40[rbp]	#,
 1166 0680 5B       		pop	rbx	#
 1167 0681 415C     		pop	r12	#
 1168              	.LVL57:
 1169              		.loc 1 565 1 view .LVU350
 1170 0683 415D     		pop	r13	#
GAS LISTING /tmp/cc64mrzX.s 			page 36


 1171 0685 415E     		pop	r14	#
 1172 0687 415F     		pop	r15	#
 1173 0689 5D       		pop	rbp	#
 1174              		.cfi_remember_state
 1175              		.cfi_def_cfa 7, 8
 1176 068a C3       		ret	
 1177              	.LVL58:
 1178 068b 0F1F4400 		.p2align 4,,7
 1178      00
 1179              		.p2align 3
 1180              	.L49:
 1181              		.cfi_restore_state
 546:sieve_extend.c ****         return;
 1182              		.loc 1 546 9 is_stmt 1 view .LVU351
 1183              	# sieve_extend.c:546:         bitarray[destination_start_word] |= (pattern << bitindex(destination_
 546:sieve_extend.c ****         return;
 1184              		.loc 1 546 86 is_stmt 0 view .LVU352
 1185 0690 4821D8   		and	rax, rbx	# tmp351, _124
 1186              	# sieve_extend.c:546:         bitarray[destination_start_word] |= (pattern << bitindex(destination_
 546:sieve_extend.c ****         return;
 1187              		.loc 1 546 42 view .LVU353
 1188 0693 4C09F8   		or	rax, r15	# tmp352, pretmp_118
 1189 0696 498906   		mov	QWORD PTR [r14], rax	# *_117, tmp352
 547:sieve_extend.c ****     }
 1190              		.loc 1 547 9 is_stmt 1 view .LVU354
 1191              	# sieve_extend.c:565: }
 1192              		.loc 1 565 1 is_stmt 0 view .LVU355
 1193 0699 488D65D8 		lea	rsp, -40[rbp]	#,
 1194 069d 5B       		pop	rbx	#
 1195 069e 415C     		pop	r12	#
 1196              	.LVL59:
 1197              		.loc 1 565 1 view .LVU356
 1198 06a0 415D     		pop	r13	#
 1199 06a2 415E     		pop	r14	#
 1200 06a4 415F     		pop	r15	#
 1201 06a6 5D       		pop	rbp	#
 1202              		.cfi_remember_state
 1203              		.cfi_def_cfa 7, 8
 1204 06a7 C3       		ret	
 1205              	.LVL60:
 1206              	.L50:
 1207              		.cfi_restore_state
 1208              		.loc 1 565 1 view .LVU357
 1209 06a8 C5F877   		vzeroupper
 1210 06ab EBCB     		jmp	.L10	#
 1211              	.LVL61:
 1212              	.L12:
 1213              	.LBB318:
 1214              	# sieve_extend.c:561:     for (counter_t i=0; i<=loop_range; ++i ) {
 561:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1215              		.loc 1 561 20 view .LVU358
 1216 06ad 4531F6   		xor	r14d, r14d	# i
 1217 06b0 E979FBFF 		jmp	.L7	#
 1217      FF
 1218              	.L11:
 1219 06b5 4531F6   		xor	r14d, r14d	# tmp.145
 1220              		.p2align 4,,2
GAS LISTING /tmp/cc64mrzX.s 			page 37


 1221 06b8 E994FDFF 		jmp	.L6	#
 1221      FF
 1222              	.LBE318:
 1223              		.cfi_endproc
 1224              	.LFE64:
 1226 06bd 0F1F00   		.p2align 4
 1228              	extendSieve_shiftright_ivdep:
 1229              	.LVL62:
 1230              	.LFB69:
 566:sieve_extend.c **** 
 567:sieve_extend.c **** static void extendSieve_aligned(bitword_t* bitarray, const counter_t source_start, const counter_t 
 568:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 569:sieve_extend.c **** 
 570:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 571:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 572:sieve_extend.c ****     counter_t source_word = wordindex(source_start);
 573:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 574:sieve_extend.c ****     
 575:sieve_extend.c ****     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 576:sieve_extend.c **** 
 577:sieve_extend.c ****     while (copy_word + size <= destination_stop_word) {
 578:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 579:sieve_extend.c ****         copy_word += size;
 580:sieve_extend.c ****     }
 581:sieve_extend.c **** 
 582:sieve_extend.c ****    while (copy_word < destination_stop_word) {
 583:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 584:sieve_extend.c ****         source_word++;
 585:sieve_extend.c ****         copy_word++;
 586:sieve_extend.c ****     }
 587:sieve_extend.c **** 
 588:sieve_extend.c **** }
 589:sieve_extend.c **** 
 590:sieve_extend.c **** //https://stackoverflow.com/questions/1898153/how-to-determine-if-memory-is-aligned
 591:sieve_extend.c **** #define is_unaligned(POINTER, BYTE_COUNT) (((uintptr_t)(const void *)(POINTER)) % (BYTE_COUNT))
 592:sieve_extend.c **** 
 593:sieve_extend.c **** void shiftvec(uint64_t* __restrict dst, const uint64_t* __restrict src, int size, int shift)
 594:sieve_extend.c **** {
 595:sieve_extend.c ****     int i = 0;
 596:sieve_extend.c ****     // MSVC: use steps of 2 for SSE, 4 for AVX2, 8 for AVX512
 597:sieve_extend.c ****     for (; i+4 < size; i+=4,dst+=4,src+=4)
 598:sieve_extend.c ****     {
 599:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 603:sieve_extend.c ****     }
 604:sieve_extend.c ****     for (; i < size; ++i,++src,++dst)
 605:sieve_extend.c ****     {
 606:sieve_extend.c ****         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 607:sieve_extend.c ****     }    
 608:sieve_extend.c **** }
 609:sieve_extend.c **** 
 610:sieve_extend.c **** #define forward_distance 3
 611:sieve_extend.c **** static void extendSieve_shiftright_ptr(bitword_t* bitarray, const counter_t source_start, const cou
 612:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 613:sieve_extend.c ****    
GAS LISTING /tmp/cc64mrzX.s 			page 38


 614:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 615:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 616:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_calc(source_start);
 617:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 618:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 619:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 620:sieve_extend.c **** 
 621:sieve_extend.c ****     if (copy_word >= destination_stop_word) { 
 622:sieve_extend.c ****         bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose da
 623:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 624:sieve_extend.c ****                                 & keepmask(copy_start) & chopmask(destination_stop);
 625:sieve_extend.c ****         return; // rapid exit for one word variant
 626:sieve_extend.c ****     }
 627:sieve_extend.c **** 
 628:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose data
 629:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 630:sieve_extend.c ****                                 & keepmask(copy_start);
 631:sieve_extend.c **** 
 632:sieve_extend.c ****     copy_word++;
 633:sieve_extend.c **** 
 634:sieve_extend.c ****     debug printf("..copy distance %ju\n",(uintmax_t) copy_word - (uintmax_t) source_word);
 635:sieve_extend.c ****     if (((copy_word - source_word) > forward_distance)) {
 636:sieve_extend.c ****         // shiftvec(&bitarray[copy_word], &bitarray[source_word],size_word,shift );
 637:sieve_extend.c ****         
 638:sieve_extend.c ****         bitword_t* __restrict copy_ptr   = &bitarray[copy_word];
 639:sieve_extend.c ****         bitword_t* __restrict source_ptr = &bitarray[source_word];
 640:sieve_extend.c ****         // bitword_t* copy_ptr   = &bitarray[copy_word];
 641:sieve_extend.c ****         // bitword_t* source_ptr = &bitarray[source_word];
 642:sieve_extend.c ****         bitword_t* __restrict dest_ptr   = &bitarray[destination_stop_word];
 643:sieve_extend.c ****         long size_word_ptr   = dest_ptr - copy_ptr;
 644:sieve_extend.c **** 
 645:sieve_extend.c ****         #pragma ivdep 
 646:sieve_extend.c ****         for (long i = 0; (i+forward_distance) < size_word_ptr; i+=forward_distance, copy_ptr+=forwa
 647:sieve_extend.c ****             #pragma ivdep
 648:sieve_extend.c ****             for (counter_t j = 0; j < forward_distance; ++j) 
 649:sieve_extend.c ****                 *(copy_ptr+j)  = (*(source_ptr+j  ) >> shift_flipped); 
 650:sieve_extend.c ****             #pragma ivdep
 651:sieve_extend.c ****             for (counter_t j = 0; j < forward_distance; ++j) 
 652:sieve_extend.c ****                 *(copy_ptr+j) |= (*(source_ptr+j+1) << shift);
 653:sieve_extend.c ****         }
 654:sieve_extend.c **** 
 655:sieve_extend.c ****         size_word_ptr = dest_ptr - copy_ptr;
 656:sieve_extend.c ****         #pragma ivdep 
 657:sieve_extend.c ****         for (counter_t i=0; i <= size_word_ptr; i++)
 658:sieve_extend.c ****             *(copy_ptr+i) = (*(source_ptr+i) >> shift_flipped) | (*(source_ptr+i+1) << shift);
 659:sieve_extend.c **** 
 660:sieve_extend.c ****         // #pragma GCC ivdep
 661:sieve_extend.c ****         // for (; i <= size_word; i++) 
 662:sieve_extend.c ****         //     *(copy_ptr+i) = (*(source_ptr+i) >> shift_flipped) | (*(source_ptr+i+1) << shift);
 663:sieve_extend.c ****     }
 664:sieve_extend.c ****     else {
 665:sieve_extend.c ****         register counter_t i = 0;
 666:sieve_extend.c ****         bitword_t* copy_ptr   = &bitarray[copy_word];
 667:sieve_extend.c ****         bitword_t* source_ptr = &bitarray[source_word];
 668:sieve_extend.c ****         bitword_t* dest_ptr   = &bitarray[destination_stop_word];
 669:sieve_extend.c ****         long size_word_ptr   = dest_ptr - copy_ptr;
 670:sieve_extend.c ****         for (; i <= size_word_ptr; i++)
GAS LISTING /tmp/cc64mrzX.s 			page 39


 671:sieve_extend.c ****             *(copy_ptr+i) = (*(source_ptr+i) >> shift_flipped) | (*(source_ptr+i+1) << shift);
 672:sieve_extend.c ****     }
 673:sieve_extend.c **** 
 674:sieve_extend.c ****     // for (; i <= size_word; i++) 
 675:sieve_extend.c ****     //     *(copy_ptr+i) = (*(source_ptr+i) >> shift_flipped) | (*(source_ptr+i+1) << shift);
 676:sieve_extend.c **** 
 677:sieve_extend.c ****     // for (; i <= size_word; i++) 
 678:sieve_extend.c ****     //     bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_wo
 679:sieve_extend.c **** 
 680:sieve_extend.c ****     // for (; copy_word <= destination_stop_word; copy_word++, source_word++ ) 
 681:sieve_extend.c ****     //     bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1
 682:sieve_extend.c **** }
 683:sieve_extend.c **** 
 684:sieve_extend.c **** static inline counter_t extendSieve_shiftleft_unrolled(bitword_t* bitarray, const counter_t aligned
 685:sieve_extend.c ****     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_copy_word - 2) : 0; // s
 686:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 687:sieve_extend.c ****     counter_t distance = 0;
 688:sieve_extend.c ****     while (copy_word < fast_loop_stop_word) {
 689:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 690:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 691:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 693:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 694:sieve_extend.c ****         copy_word += 2;
 695:sieve_extend.c ****         source_word += 2;
 696:sieve_extend.c ****         distance += 2;
 697:sieve_extend.c ****     }
 698:sieve_extend.c ****     return distance;
 699:sieve_extend.c **** }
 700:sieve_extend.c **** 
 701:sieve_extend.c **** //static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source_start, const counte
 702:sieve_extend.c **** //    const bitword_t* destination_stop_ptr = &bitarray[wordindex(destination_stop)];
 703:sieve_extend.c **** //    const counter_t copy_start = source_start + size;
 704:sieve_extend.c **** //    register const bitshift_t shift = bitindex_calc(source_start) - bitindex_calc(copy_start);
 705:sieve_extend.c **** //    register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 706:sieve_extend.c **** //    register bitword_t* source_ptr = &bitarray[wordindex(source_start)];
 707:sieve_extend.c **** //    register bitword_t* copy_ptr = &bitarray[wordindex(copy_start)];
 708:sieve_extend.c **** //    const bitword_t* aligned_copy_ptr = min(source_ptr + size, destination_stop_ptr); // after <<
 709:sieve_extend.c **** //
 710:sieve_extend.c **** //    *copy_ptr |= ((*source_ptr >> shift) | (*(source_ptr+1) << shift_flipped)) & ~chopmask2(copy_
 711:sieve_extend.c **** //    copy_ptr++;
 712:sieve_extend.c **** //    source_ptr++;
 713:sieve_extend.c **** //
 714:sieve_extend.c **** //    while (copy_ptr+3 <= aligned_copy_ptr) {
 715:sieve_extend.c **** //        bitword_t source0 = *source_ptr >> shift;
 716:sieve_extend.c **** //        bitword_t source1 = *(source_ptr+1);
 717:sieve_extend.c **** //        *copy_ptr = (source0) | (source1 << shift_flipped);
 718:sieve_extend.c **** //        bitword_t source2 = *(source_ptr+2);
 719:sieve_extend.c **** //        *(copy_ptr+1) = (source1 >> shift) | (source2 << shift_flipped);
 720:sieve_extend.c **** //        bitword_t source3 = *(source_ptr+3);
 721:sieve_extend.c **** //        *(copy_ptr+2) = (source2 >> shift) | (source3 << shift_flipped);
 722:sieve_extend.c **** //
 723:sieve_extend.c **** //        copy_ptr+=3;
 724:sieve_extend.c **** //        source_ptr+=3;
 725:sieve_extend.c **** //    }
 726:sieve_extend.c **** //
 727:sieve_extend.c **** //    while (copy_ptr <= aligned_copy_ptr) {
GAS LISTING /tmp/cc64mrzX.s 			page 40


 728:sieve_extend.c **** //        register bitword_t source0 = *source_ptr >> shift;
 729:sieve_extend.c **** //        source_ptr++;
 730:sieve_extend.c **** //        register bitword_t source1 = *source_ptr << shift_flipped;
 731:sieve_extend.c **** //        *copy_ptr = source0 | source1;
 732:sieve_extend.c **** //        copy_ptr++;
 733:sieve_extend.c **** //    }
 734:sieve_extend.c **** //
 735:sieve_extend.c **** //    if (copy_ptr >= destination_stop_ptr) return;
 736:sieve_extend.c **** //
 737:sieve_extend.c **** //    source_ptr = copy_ptr - size; // recalibrate
 738:sieve_extend.c **** //    const size_t memsize = (size_t)size*sizeof(bitword_t);
 739:sieve_extend.c **** //     while (copy_ptr + size <= destination_stop_ptr) {
 740:sieve_extend.c **** //         memcpy(copy_ptr, source_ptr, memsize );
 741:sieve_extend.c **** //         copy_ptr += size;
 742:sieve_extend.c **** //     }
 743:sieve_extend.c **** //
 744:sieve_extend.c **** //    while (copy_ptr <= destination_stop_ptr) {
 745:sieve_extend.c **** //        // *copy_ptr++ = *source_ptr++;
 746:sieve_extend.c **** //        *copy_ptr = *source_ptr;
 747:sieve_extend.c **** //        copy_ptr++;
 748:sieve_extend.c **** //        source_ptr++;
 749:sieve_extend.c **** //    }
 750:sieve_extend.c **** //
 751:sieve_extend.c **** //}
 752:sieve_extend.c **** 
 753:sieve_extend.c **** 
 754:sieve_extend.c **** static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t source_start, const c
 1231              		.loc 1 754 149 is_stmt 1 view -0
 1232              		.cfi_startproc
 755:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1233              		.loc 1 755 5 view .LVU360
 756:sieve_extend.c ****    
 757:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 1234              		.loc 1 757 5 view .LVU361
 1235              	# sieve_extend.c:754: static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t
 754:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1236              		.loc 1 754 149 is_stmt 0 view .LVU362
 1237 06c0 55       		push	rbp	#
 1238              		.cfi_def_cfa_offset 16
 1239              		.cfi_offset 6, -16
 1240              	# sieve_extend.c:758:     const counter_t copy_start = source_start + size;
 758:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 1241              		.loc 1 758 21 view .LVU363
 1242 06c1 4C8D0416 		lea	r8, [rsi+rdx]	# copy_start,
 1243              	# sieve_extend.c:757:     const counter_t destination_stop_word = wordindex(destination_stop);
 757:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 1244              		.loc 1 757 21 view .LVU364
 1245 06c5 4889C8   		mov	rax, rcx	# destination_stop_word, destination_stop
 1246              	# sieve_extend.c:754: static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t
 754:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1247              		.loc 1 754 149 view .LVU365
 1248 06c8 4889E5   		mov	rbp, rsp	#,
 1249              		.cfi_def_cfa_register 6
 1250              	# sieve_extend.c:759:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 759:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_calc(source_start);
 1251              		.loc 1 759 39 view .LVU366
 1252 06cb 4D89C2   		mov	r10, r8	# _4, copy_start
GAS LISTING /tmp/cc64mrzX.s 			page 41


 1253              	# sieve_extend.c:754: static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t
 754:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1254              		.loc 1 754 149 view .LVU367
 1255 06ce 4157     		push	r15	#
 1256              	# sieve_extend.c:762:     register counter_t copy_word = wordindex(copy_start);
 760:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 761:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 762:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 1257              		.loc 1 762 24 view .LVU368
 1258 06d0 49C1E806 		shr	r8, 6	# copy_word,
 1259              	# sieve_extend.c:759:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 759:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1260              		.loc 1 759 39 view .LVU369
 1261 06d4 4183E23F 		and	r10d, 63	# _4,
 1262              	# sieve_extend.c:754: static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t
 754:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1263              		.loc 1 754 149 view .LVU370
 1264 06d8 4156     		push	r14	#
 1265              	# sieve_extend.c:757:     const counter_t destination_stop_word = wordindex(destination_stop);
 757:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 1266              		.loc 1 757 21 view .LVU371
 1267 06da 48C1E806 		shr	rax, 6	# destination_stop_word,
 1268              		.cfi_offset 15, -24
 1269              		.cfi_offset 14, -32
 1270              	# sieve_extend.c:759:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 759:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1271              		.loc 1 759 31 view .LVU372
 1272 06de 4D89D6   		mov	r14, r10	# shift, _4
 1273              	# sieve_extend.c:754: static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t
 754:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1274              		.loc 1 754 149 view .LVU373
 1275 06e1 4155     		push	r13	#
 1276 06e3 F7D1     		not	ecx	# tmp401
 1277              	.LVL63:
 754:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1278              		.loc 1 754 149 view .LVU374
 1279 06e5 4154     		push	r12	#
 1280              		.cfi_offset 13, -40
 1281              		.cfi_offset 12, -48
 1282 06e7 4E8D24C5 		lea	r12, 0[0+r8*8]	# _176,
 1282      00000000 
 1283 06ef 53       		push	rbx	#
 1284 06f0 4E8D2C27 		lea	r13, [rdi+r12]	# _177,
 1285 06f4 4D8B7D00 		mov	r15, QWORD PTR 0[r13]	# pretmp_178, *_177
 1286 06f8 4883E4E0 		and	rsp, -32	#,
 1287              		.cfi_offset 3, -56
 1288              	.LVL64:
 758:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_calc(source_start);
 1289              		.loc 1 758 5 is_stmt 1 view .LVU375
 759:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1290              		.loc 1 759 5 view .LVU376
 1291              	# sieve_extend.c:757:     const counter_t destination_stop_word = wordindex(destination_stop);
 757:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 1292              		.loc 1 757 21 is_stmt 0 view .LVU377
 1293 06fc 48894424 		mov	QWORD PTR -8[rsp], rax	# %sfp, destination_stop_word
 1293      F8
 1294              	.LVL65:
GAS LISTING /tmp/cc64mrzX.s 			page 42


 1295              	# sieve_extend.c:759:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 759:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1296              		.loc 1 759 67 view .LVU378
 1297 0701 4889F0   		mov	rax, rsi	# _5, source_start
 1298              	# sieve_extend.c:761:     register counter_t source_word = wordindex(source_start);
 761:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 1299              		.loc 1 761 24 view .LVU379
 1300 0704 48C1EE06 		shr	rsi, 6	# source_word,
 1301              	.LVL66:
 1302              	# sieve_extend.c:759:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 759:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1303              		.loc 1 759 67 view .LVU380
 1304 0708 83E03F   		and	eax, 63	# _5,
 1305              	.LVL67:
 760:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 1306              		.loc 1 760 5 is_stmt 1 view .LVU381
 761:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 1307              		.loc 1 761 5 view .LVU382
 1308              		.loc 1 762 5 view .LVU383
 763:sieve_extend.c **** 
 764:sieve_extend.c ****     if (copy_word >= destination_stop_word) { 
 1309              		.loc 1 764 5 view .LVU384
 1310              	# sieve_extend.c:759:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 759:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1311              		.loc 1 759 31 is_stmt 0 view .LVU385
 1312 070b 4929C6   		sub	r14, rax	# shift, _5
 1313              	.LVL68:
 759:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1314              		.loc 1 759 31 view .LVU386
 1315 070e 488D1CF5 		lea	rbx, 0[0+rsi*8]	# _179,
 1315      00000000 
 1316              	# sieve_extend.c:760:     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 760:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 1317              		.loc 1 760 31 view .LVU387
 1318 0716 4883C040 		add	rax, 64	# tmp394,
 1319              	.LVL69:
 760:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 1320              		.loc 1 760 31 view .LVU388
 1321 071a 4C8D1C1F 		lea	r11, [rdi+rbx]	# _180,
 1322 071e 4C897C24 		mov	QWORD PTR -24[rsp], r15	# %sfp, pretmp_178
 1322      E8
 1323 0723 4C29D0   		sub	rax, r10	# shift_flipped, _4
 1324              	.LVL70:
 760:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 1325              		.loc 1 760 31 view .LVU389
 1326 0726 C44289F7 		shlx	r9, QWORD PTR [r11], r14	# tmp396, *_180, shift
 1326      0B
 1327 072b C442FBF7 		shrx	r15, r15, rax	# tmp398, pretmp_178, shift_flipped
 1327      FF
 1328 0730 44897424 		mov	DWORD PTR -12[rsp], r14d	# %sfp, shift
 1328      F4
 1329 0735 4D09F9   		or	r9, r15	# _186, tmp398
 1330              	# sieve_extend.c:764:     if (copy_word >= destination_stop_word) { 
 1331              		.loc 1 764 8 view .LVU390
 1332 0738 4C394424 		cmp	QWORD PTR -8[rsp], r8	# %sfp, copy_word
 1332      F8
 1333 073d 49C7C7FF 		mov	r15, -1	# tmp400,
GAS LISTING /tmp/cc64mrzX.s 			page 43


 1333      FFFFFF
 1334 0744 894424F0 		mov	DWORD PTR -16[rsp], eax	# %sfp, shift_flipped
 1335 0748 C442A9F7 		shlx	r10, r15, r10	# _189, tmp400, _4
 1335      D7
 1336              	.LVL71:
 1337              		.loc 1 764 8 view .LVU391
 1338 074d C442F3F7 		shrx	r15, r15, rcx	# _193, tmp400, tmp401
 1338      FF
 1339 0752 0F86F80A 		jbe	.L260	#,
 1339      0000
 765:sieve_extend.c ****         bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose da
 766:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 767:sieve_extend.c ****                                 & keepmask(copy_start) & chopmask(destination_stop);
 768:sieve_extend.c ****         return; // rapid exit for one word variant
 769:sieve_extend.c ****     }
 770:sieve_extend.c **** 
 771:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose data
 1340              		.loc 1 771 5 is_stmt 1 view .LVU392
 1341              	# sieve_extend.c:773:                                 & keepmask(copy_start);
 772:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 773:sieve_extend.c ****                                 & keepmask(copy_start);
 1342              		.loc 1 773 33 is_stmt 0 view .LVU393
 1343 0758 4D21D1   		and	r9, r10	# tmp407, _189
 1344              	# sieve_extend.c:775:     copy_word++;
 774:sieve_extend.c **** 
 775:sieve_extend.c ****     copy_word++;
 1345              		.loc 1 775 14 view .LVU394
 1346 075b 498D4801 		lea	rcx, 1[r8]	# copy_word,
 1347              	# sieve_extend.c:771:     bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start
 771:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 1348              		.loc 1 771 25 view .LVU395
 1349 075f 4C0B4C24 		or	r9, QWORD PTR -24[rsp]	# tmp408, %sfp
 1349      E8
 1350              	# sieve_extend.c:779:     if (size >= WORD_SIZE_counter) {
 776:sieve_extend.c **** 
 777:sieve_extend.c ****     debug { printf("...start - %ju - %ju - end\n",(uintmax_t)wordindex(copy_start), (uintmax_t)dest
 778:sieve_extend.c **** 
 779:sieve_extend.c ****     if (size >= WORD_SIZE_counter) {
 1351              		.loc 1 779 8 view .LVU396
 1352 0764 4883FA3F 		cmp	rdx, 63	# size,
 1353              	# sieve_extend.c:771:     bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start
 771:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 1354              		.loc 1 771 25 view .LVU397
 1355 0768 4D894D00 		mov	QWORD PTR 0[r13], r9	# *_177, tmp408
 775:sieve_extend.c **** 
 1356              		.loc 1 775 5 is_stmt 1 view .LVU398
 1357              	.LVL72:
 777:sieve_extend.c **** 
 1358              		.loc 1 777 5 view .LVU399
 1359              		.loc 1 779 5 view .LVU400
 1360              	# sieve_extend.c:779:     if (size >= WORD_SIZE_counter) {
 1361              		.loc 1 779 8 is_stmt 0 view .LVU401
 1362 076c 0F876604 		ja	.L261	#,
 1362      0000
 780:sieve_extend.c ****         register const counter_t loop_distance = destination_stop_word - copy_word;
 781:sieve_extend.c **** 
 782:sieve_extend.c ****         #pragma unroll
GAS LISTING /tmp/cc64mrzX.s 			page 44


 783:sieve_extend.c ****         #pragma ivdep
 784:sieve_extend.c ****         for (register counter_t i = 0; i <loop_distance; i++) {
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 786:sieve_extend.c ****         }
 787:sieve_extend.c ****         source_word += loop_distance; copy_word+= loop_distance;
 788:sieve_extend.c ****     }
 789:sieve_extend.c **** 
 790:sieve_extend.c ****     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 1363              		.loc 1 790 12 is_stmt 1 discriminator 1 view .LVU402
 1364              	# sieve_extend.c:790:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 1365              		.loc 1 790 5 is_stmt 0 discriminator 1 view .LVU403
 1366 0772 4C8B5C24 		mov	r11, QWORD PTR -8[rsp]	# destination_stop_word, %sfp
 1366      F8
 1367 0777 4939CB   		cmp	r11, rcx	# destination_stop_word, copy_word
 1368 077a 0F824104 		jb	.L66	#,
 1368      0000
 1369 0780 4D89DC   		mov	r12, r11	# _173, destination_stop_word
 1370 0783 498D5301 		lea	rdx, 1[r11]	# _198,
 1371              	.LVL73:
 1372              		.loc 1 790 5 discriminator 1 view .LVU404
 1373 0787 4929CC   		sub	r12, rcx	# _173, copy_word
 1374 078a 4C8D0CF5 		lea	r9, 40[0+rsi*8]	# _168,
 1374      28000000 
 1375 0792 4C896424 		mov	QWORD PTR -32[rsp], r12	# %sfp, _173
 1375      E0
 1376 0797 4C8D24CD 		lea	r12, 0[0+rcx*8]	# _166,
 1376      00000000 
 1377 079f 48895424 		mov	QWORD PTR -24[rsp], rdx	# %sfp, _198
 1377      E8
 1378 07a4 4D8D5424 		lea	r10, 32[r12]	# tmp497,
 1378      20
 1379 07a9 488D14F5 		lea	rdx, 0[0+rsi*8]	# _260,
 1379      00000000 
 1380 07b1 4D8D6802 		lea	r13, 2[r8]	# _175,
 1381 07b5 4C39D2   		cmp	rdx, r10	# _260, tmp497
 1382 07b8 410F9DC2 		setge	r10b	#, tmp499
 1383 07bc 4D39CC   		cmp	r12, r9	# _166, _168
 1384 07bf 410F9DC1 		setge	r9b	#, tmp501
 1385 07c3 4508CA   		or	r10b, r9b	# tmp499, tmp501
 1386 07c6 0F843808 		je	.L56	#,
 1386      0000
 1387 07cc 48837C24 		cmp	QWORD PTR -32[rsp], 5	# %sfp,
 1387      E005
 1388 07d2 410F97C2 		seta	r10b	#, tmp504
 1389 07d6 4C3B6C24 		cmp	r13, QWORD PTR -24[rsp]	# _175, %sfp
 1389      E8
 1390 07db 410F96C1 		setbe	r9b	#, tmp506
 1391 07df 4584CA   		test	r10b, r9b	# tmp504, tmp506
 1392 07e2 0F841C08 		je	.L56	#,
 1392      0000
 1393 07e8 4D29C3   		sub	r11, r8	# tmp508, copy_word
 1394 07eb 4C3B6C24 		cmp	r13, QWORD PTR -24[rsp]	# _175, %sfp
 1394      E8
 1395 07f0 41B90100 		mov	r9d, 1	# tmp509,
 1395      0000
 1396 07f6 4D0F46CB 		cmovbe	r9, r11	# tmp508,, niters.171
 1397 07fa 4801FA   		add	rdx, rdi	# vectp.172, bitarray
GAS LISTING /tmp/cc64mrzX.s 			page 45


 1398 07fd 48C1EA03 		shr	rdx, 3	# tmp511,
 1399 0801 48F7DA   		neg	rdx	# tmp512
 1400 0804 83E203   		and	edx, 3	# prolog_loop_niters.173,
 1401 0807 0F847B0A 		je	.L77	#,
 1401      0000
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1402              		.loc 1 791 9 is_stmt 1 view .LVU405
 1403              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1404              		.loc 1 791 99 is_stmt 0 view .LVU406
 1405 080d 488B5C1F 		mov	rbx, QWORD PTR 8[rdi+rbx]	# *_354, *_354
 1405      08
 1406              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1407              		.loc 1 791 83 view .LVU407
 1408 0812 4C8D5601 		lea	r10, 1[rsi]	# tmp566,
 1409              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1410              		.loc 1 791 99 view .LVU408
 1411 0816 C46289F7 		shlx	r11, rbx, r14	# tmp513, *_354, shift
 1411      DB
 1412              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1413              		.loc 1 791 54 view .LVU409
 1414 081b C4E2FBF7 		shrx	rbx, QWORD PTR [rdi+rsi*8], rax	# tmp515, *_349, shift_flipped
 1414      1CF7
 1415              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1416              		.loc 1 791 83 view .LVU410
 1417 0821 4C895424 		mov	QWORD PTR -40[rsp], r10	# %sfp, tmp566
 1417      D8
 1418              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1419              		.loc 1 791 72 view .LVU411
 1420 0826 4909DB   		or	r11, rbx	# tmp517, tmp515
 1421 0829 4E891C27 		mov	QWORD PTR [rdi+r12], r11	# *_358, tmp517
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1422              		.loc 1 790 48 is_stmt 1 view .LVU412
 1423              	.LVL74:
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1424              		.loc 1 790 12 view .LVU413
 1425 082d 4883FA01 		cmp	rdx, 1	# prolog_loop_niters.173,
 1426              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1427              		.loc 1 791 29 is_stmt 0 view .LVU414
 1428 0831 4D89EC   		mov	r12, r13	# copy_word, _175
 1429 0834 745E     		je	.L67	#,
 1430              		.loc 1 791 9 is_stmt 1 view .LVU415
 1431              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1432              		.loc 1 791 40 is_stmt 0 view .LVU416
 1433 0836 4E8D24D5 		lea	r12, 0[0+r10*8]	# _367,
 1433      00000000 
 1434              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1435              		.loc 1 791 83 view .LVU417
 1436 083e 4C8D5E02 		lea	r11, 2[rsi]	# source_word,
 1437              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1438              		.loc 1 791 54 view .LVU418
 1439 0842 4A8B1C27 		mov	rbx, QWORD PTR [rdi+r12]	# *_368, *_368
 1440              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1441              		.loc 1 791 83 view .LVU419
 1442 0846 4C895C24 		mov	QWORD PTR -40[rsp], r11	# %sfp, source_word
 1442      D8
 1443              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1444              		.loc 1 791 99 view .LVU420
GAS LISTING /tmp/cc64mrzX.s 			page 46


 1445 084b C42289F7 		shlx	r11, QWORD PTR 8[rdi+r12], r14	# tmp518, *_373, shift
 1445      5C2708
 1446              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1447              		.loc 1 791 54 view .LVU421
 1448 0852 C462FBF7 		shrx	r12, rbx, rax	# tmp520, *_368, shift_flipped
 1448      E3
 1449              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1450              		.loc 1 791 72 view .LVU422
 1451 0857 4D09E3   		or	r11, r12	# tmp522, tmp520
 1452 085a 4883FA03 		cmp	rdx, 3	# prolog_loop_niters.173,
 1453              	# sieve_extend.c:790:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1454              		.loc 1 790 57 view .LVU423
 1455 085e 4D8D6003 		lea	r12, 3[r8]	# copy_word,
 1456              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1457              		.loc 1 791 72 view .LVU424
 1458 0862 4E891CEF 		mov	QWORD PTR [rdi+r13*8], r11	# *_377, tmp522
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1459              		.loc 1 790 48 is_stmt 1 view .LVU425
 1460              	.LVL75:
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1461              		.loc 1 790 12 view .LVU426
 1462 0866 752C     		jne	.L67	#,
 1463              		.loc 1 791 9 view .LVU427
 1464              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1465              		.loc 1 791 40 is_stmt 0 view .LVU428
 1466 0868 488D5E02 		lea	rbx, 2[rsi]	# source_word,
 1467              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1468              		.loc 1 791 83 view .LVU429
 1469 086c 4C8D5E03 		lea	r11, 3[rsi]	# source_word,
 1470 0870 4C895C24 		mov	QWORD PTR -40[rsp], r11	# %sfp, source_word
 1470      D8
 1471              	.LVL76:
 1472              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1473              		.loc 1 791 40 view .LVU430
 1474 0875 48C1E303 		sal	rbx, 3	# source_word,
 1475              	.LVL77:
 1476              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1477              		.loc 1 791 99 view .LVU431
 1478 0879 C46289F7 		shlx	r11, QWORD PTR 8[rdi+rbx], r14	# tmp523, *_111, shift
 1478      5C1F08
 1479              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1480              		.loc 1 791 54 view .LVU432
 1481 0880 488B1C1F 		mov	rbx, QWORD PTR [rdi+rbx]	# *_121, *_121
 1482 0884 C4E2FBF7 		shrx	rbx, rbx, rax	# tmp525, *_121, shift_flipped
 1482      DB
 1483              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1484              		.loc 1 791 72 view .LVU433
 1485 0889 4909DB   		or	r11, rbx	# tmp527, tmp525
 1486 088c 4E891CE7 		mov	QWORD PTR [rdi+r12*8], r11	# *_103, tmp527
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1487              		.loc 1 790 48 is_stmt 1 view .LVU434
 1488              	# sieve_extend.c:790:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1489              		.loc 1 790 57 is_stmt 0 view .LVU435
 1490 0890 4D8D6004 		lea	r12, 4[r8]	# copy_word,
 1491              	.LVL78:
GAS LISTING /tmp/cc64mrzX.s 			page 47


 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1492              		.loc 1 790 12 is_stmt 1 view .LVU436
 1493              	.L67:
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1494              		.loc 1 790 12 is_stmt 0 view .LVU437
 1495 0894 4901D2   		add	r10, rdx	# tmp531, prolog_loop_niters.173
 1496 0897 4929D1   		sub	r9, rdx	# niters.174, prolog_loop_niters.173
 1497 089a 4E8D04D7 		lea	r8, [rdi+r10*8]	# vectp.184,
 1498 089e 4D89CA   		mov	r10, r9	# bnd.175, niters.174
 1499 08a1 49C1EA02 		shr	r10, 2	# bnd.175,
 1500 08a5 4801D6   		add	rsi, rdx	# tmp528, prolog_loop_niters.173
 1501 08a8 49C1E205 		sal	r10, 5	# _469,
 1502 08ac 4801D1   		add	rcx, rdx	# tmp533, prolog_loop_niters.173
 1503 08af 4D8D5AE0 		lea	r11, -32[r10]	# tmp588,
 1504              	# sieve_extend.c:775:     copy_word++;
 775:sieve_extend.c **** 
 1505              		.loc 1 775 14 view .LVU438
 1506 08b3 31D2     		xor	edx, edx	# ivtmp.222
 1507 08b5 488D34F7 		lea	rsi, [rdi+rsi*8]	# vectp.180,
 1508 08b9 488D0CCF 		lea	rcx, [rdi+rcx*8]	# vectp.189,
 1509 08bd 49C1EB05 		shr	r11, 5	# tmp586,
 1510 08c1 C5F96E4C 		vmovd	xmm1, DWORD PTR -16[rsp]	# _184, %sfp
 1510      24F0
 1511 08c7 4983C301 		add	r11, 1	# tmp589,
 1512 08cb C5F96E44 		vmovd	xmm0, DWORD PTR -12[rsp]	# _182, %sfp
 1512      24F4
 1513 08d1 4183E307 		and	r11d, 7	# tmp590,
 1514 08d5 0F841A01 		je	.L69	#,
 1514      0000
 1515 08db 4983FB01 		cmp	r11, 1	# tmp590,
 1516 08df 0F84E700 		je	.L191	#,
 1516      0000
 1517 08e5 4983FB02 		cmp	r11, 2	# tmp590,
 1518 08e9 0F84BD00 		je	.L192	#,
 1518      0000
 1519 08ef 4983FB03 		cmp	r11, 3	# tmp590,
 1520 08f3 0F849200 		je	.L193	#,
 1520      0000
 1521 08f9 4983FB04 		cmp	r11, 4	# tmp590,
 1522 08fd 746C     		je	.L194	#,
 1523 08ff 4983FB05 		cmp	r11, 5	# tmp590,
 1524 0903 7445     		je	.L195	#,
 1525 0905 4983FB06 		cmp	r11, 6	# tmp590,
 1526 0909 741E     		je	.L196	#,
 1527              		.loc 1 791 9 is_stmt 1 view .LVU439
 1528              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1529              		.loc 1 791 54 is_stmt 0 view .LVU440
 1530 090b C5FD6F36 		vmovdqa	ymm6, YMMWORD PTR [rsi]	# tmp1085, MEM[base: vectp.180_10, index: ivtmp.222_467, offset: 0
 1531 090f BA200000 		mov	edx, 32	# ivtmp.222,
 1531      00
 1532              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1533              		.loc 1 791 99 view .LVU441
 1534 0914 C4C17E6F 		vmovdqu	ymm7, YMMWORD PTR [r8]	# tmp1086, MEM[base: vectp.184_17, index: ivtmp.222_467, offset: 0B
 1534      38
 1535              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1536              		.loc 1 791 54 view .LVU442
 1537 0919 C5CDD3D1 		vpsrlq	ymm2, ymm6, xmm1	# vect__62.182, tmp1085, _184
GAS LISTING /tmp/cc64mrzX.s 			page 48


 1538              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1539              		.loc 1 791 99 view .LVU443
 1540 091d C5C5F3D8 		vpsllq	ymm3, ymm7, xmm0	# vect__67.186, tmp1086, _182
 1541              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1542              		.loc 1 791 72 view .LVU444
 1543 0921 C5EDEBE3 		vpor	ymm4, ymm2, ymm3	# vect__70.187, vect__62.182, vect__67.186
 1544              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1545              		.loc 1 791 29 view .LVU445
 1546 0925 C5FE7F21 		vmovdqu	YMMWORD PTR [rcx], ymm4	# MEM[base: vectp.189_212, index: ivtmp.222_467, offset: 0B], vect
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1547              		.loc 1 790 48 is_stmt 1 view .LVU446
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1548              		.loc 1 790 12 view .LVU447
 1549              	.L196:
 1550              		.loc 1 791 9 view .LVU448
 1551              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1552              		.loc 1 791 54 is_stmt 0 view .LVU449
 1553 0929 C5FD6F2C 		vmovdqa	ymm5, YMMWORD PTR [rsi+rdx]	# tmp1087, MEM[base: vectp.180_10, index: ivtmp.222_467, offse
 1553      16
 1554              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1555              		.loc 1 791 99 view .LVU450
 1556 092e C4417E6F 		vmovdqu	ymm9, YMMWORD PTR [r8+rdx]	# tmp1088, MEM[base: vectp.184_17, index: ivtmp.222_467, offset
 1556      0C10
 1557              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1558              		.loc 1 791 54 view .LVU451
 1559 0934 C555D3C1 		vpsrlq	ymm8, ymm5, xmm1	# vect__62.182, tmp1087, _184
 1560              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1561              		.loc 1 791 99 view .LVU452
 1562 0938 C535F3D0 		vpsllq	ymm10, ymm9, xmm0	# vect__67.186, tmp1088, _182
 1563              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1564              		.loc 1 791 72 view .LVU453
 1565 093c C4413DEB 		vpor	ymm11, ymm8, ymm10	# vect__70.187, vect__62.182, vect__67.186
 1565      DA
 1566              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1567              		.loc 1 791 29 view .LVU454
 1568 0941 C57E7F1C 		vmovdqu	YMMWORD PTR [rcx+rdx], ymm11	# MEM[base: vectp.189_212, index: ivtmp.222_467, offset: 0B],
 1568      11
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1569              		.loc 1 790 48 is_stmt 1 view .LVU455
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1570              		.loc 1 790 12 view .LVU456
 1571 0946 4883C220 		add	rdx, 32	# ivtmp.222,
 1572              	.L195:
 1573              		.loc 1 791 9 view .LVU457
 1574              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1575              		.loc 1 791 54 is_stmt 0 view .LVU458
 1576 094a C57D6F24 		vmovdqa	ymm12, YMMWORD PTR [rsi+rdx]	# tmp1089, MEM[base: vectp.180_10, index: ivtmp.222_467, offs
 1576      16
 1577              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1578              		.loc 1 791 99 view .LVU459
 1579 094f C4417E6F 		vmovdqu	ymm14, YMMWORD PTR [r8+rdx]	# tmp1090, MEM[base: vectp.184_17, index: ivtmp.222_467, offse
 1579      3410
 1580              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1581              		.loc 1 791 54 view .LVU460
 1582 0955 C51DD3E9 		vpsrlq	ymm13, ymm12, xmm1	# vect__62.182, tmp1089, _184
 1583              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1584              		.loc 1 791 99 view .LVU461
GAS LISTING /tmp/cc64mrzX.s 			page 49


 1585 0959 C50DF3F8 		vpsllq	ymm15, ymm14, xmm0	# vect__67.186, tmp1090, _182
 1586              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1587              		.loc 1 791 72 view .LVU462
 1588 095d C4C115EB 		vpor	ymm6, ymm13, ymm15	# vect__70.187, vect__62.182, vect__67.186
 1588      F7
 1589              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1590              		.loc 1 791 29 view .LVU463
 1591 0962 C5FE7F34 		vmovdqu	YMMWORD PTR [rcx+rdx], ymm6	# MEM[base: vectp.189_212, index: ivtmp.222_467, offset: 0B], 
 1591      11
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1592              		.loc 1 790 48 is_stmt 1 view .LVU464
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1593              		.loc 1 790 12 view .LVU465
 1594 0967 4883C220 		add	rdx, 32	# ivtmp.222,
 1595              	.L194:
 1596              		.loc 1 791 9 view .LVU466
 1597              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1598              		.loc 1 791 54 is_stmt 0 view .LVU467
 1599 096b C5FD6F14 		vmovdqa	ymm2, YMMWORD PTR [rsi+rdx]	# tmp1091, MEM[base: vectp.180_10, index: ivtmp.222_467, offse
 1599      16
 1600              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1601              		.loc 1 791 99 view .LVU468
 1602 0970 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR [r8+rdx]	# tmp1092, MEM[base: vectp.184_17, index: ivtmp.222_467, offset
 1602      1C10
 1603              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1604              		.loc 1 791 54 view .LVU469
 1605 0976 C5EDD3F9 		vpsrlq	ymm7, ymm2, xmm1	# vect__62.182, tmp1091, _184
 1606              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1607              		.loc 1 791 99 view .LVU470
 1608 097a C5E5F3E0 		vpsllq	ymm4, ymm3, xmm0	# vect__67.186, tmp1092, _182
 1609              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1610              		.loc 1 791 72 view .LVU471
 1611 097e C5C5EBEC 		vpor	ymm5, ymm7, ymm4	# vect__70.187, vect__62.182, vect__67.186
 1612              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1613              		.loc 1 791 29 view .LVU472
 1614 0982 C5FE7F2C 		vmovdqu	YMMWORD PTR [rcx+rdx], ymm5	# MEM[base: vectp.189_212, index: ivtmp.222_467, offset: 0B], 
 1614      11
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1615              		.loc 1 790 48 is_stmt 1 view .LVU473
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1616              		.loc 1 790 12 view .LVU474
 1617 0987 4883C220 		add	rdx, 32	# ivtmp.222,
 1618              	.L193:
 1619              		.loc 1 791 9 view .LVU475
 1620              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1621              		.loc 1 791 54 is_stmt 0 view .LVU476
 1622 098b C57D6F04 		vmovdqa	ymm8, YMMWORD PTR [rsi+rdx]	# tmp1093, MEM[base: vectp.180_10, index: ivtmp.222_467, offse
 1622      16
 1623              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1624              		.loc 1 791 99 view .LVU477
 1625 0990 C4417E6F 		vmovdqu	ymm10, YMMWORD PTR [r8+rdx]	# tmp1094, MEM[base: vectp.184_17, index: ivtmp.222_467, offse
 1625      1410
 1626              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1627              		.loc 1 791 54 view .LVU478
 1628 0996 C53DD3C9 		vpsrlq	ymm9, ymm8, xmm1	# vect__62.182, tmp1093, _184
 1629              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1630              		.loc 1 791 99 view .LVU479
GAS LISTING /tmp/cc64mrzX.s 			page 50


 1631 099a C52DF3D8 		vpsllq	ymm11, ymm10, xmm0	# vect__67.186, tmp1094, _182
 1632              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1633              		.loc 1 791 72 view .LVU480
 1634 099e C44135EB 		vpor	ymm12, ymm9, ymm11	# vect__70.187, vect__62.182, vect__67.186
 1634      E3
 1635              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1636              		.loc 1 791 29 view .LVU481
 1637 09a3 C57E7F24 		vmovdqu	YMMWORD PTR [rcx+rdx], ymm12	# MEM[base: vectp.189_212, index: ivtmp.222_467, offset: 0B],
 1637      11
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1638              		.loc 1 790 48 is_stmt 1 view .LVU482
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1639              		.loc 1 790 12 view .LVU483
 1640 09a8 4883C220 		add	rdx, 32	# ivtmp.222,
 1641              	.L192:
 1642              		.loc 1 791 9 view .LVU484
 1643              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1644              		.loc 1 791 54 is_stmt 0 view .LVU485
 1645 09ac C57D6F2C 		vmovdqa	ymm13, YMMWORD PTR [rsi+rdx]	# tmp1095, MEM[base: vectp.180_10, index: ivtmp.222_467, offs
 1645      16
 1646              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1647              		.loc 1 791 99 view .LVU486
 1648 09b1 C4417E6F 		vmovdqu	ymm15, YMMWORD PTR [r8+rdx]	# tmp1096, MEM[base: vectp.184_17, index: ivtmp.222_467, offse
 1648      3C10
 1649              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1650              		.loc 1 791 54 view .LVU487
 1651 09b7 C515D3F1 		vpsrlq	ymm14, ymm13, xmm1	# vect__62.182, tmp1095, _184
 1652              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1653              		.loc 1 791 99 view .LVU488
 1654 09bb C585F3F0 		vpsllq	ymm6, ymm15, xmm0	# vect__67.186, tmp1096, _182
 1655              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1656              		.loc 1 791 72 view .LVU489
 1657 09bf C58DEBD6 		vpor	ymm2, ymm14, ymm6	# vect__70.187, vect__62.182, vect__67.186
 1658              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1659              		.loc 1 791 29 view .LVU490
 1660 09c3 C5FE7F14 		vmovdqu	YMMWORD PTR [rcx+rdx], ymm2	# MEM[base: vectp.189_212, index: ivtmp.222_467, offset: 0B], 
 1660      11
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1661              		.loc 1 790 48 is_stmt 1 view .LVU491
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1662              		.loc 1 790 12 view .LVU492
 1663 09c8 4883C220 		add	rdx, 32	# ivtmp.222,
 1664              	.L191:
 1665              		.loc 1 791 9 view .LVU493
 1666              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1667              		.loc 1 791 54 is_stmt 0 view .LVU494
 1668 09cc C5FD6F3C 		vmovdqa	ymm7, YMMWORD PTR [rsi+rdx]	# tmp1097, MEM[base: vectp.180_10, index: ivtmp.222_467, offse
 1668      16
 1669              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1670              		.loc 1 791 99 view .LVU495
 1671 09d1 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR [r8+rdx]	# tmp1098, MEM[base: vectp.184_17, index: ivtmp.222_467, offset
 1671      1C10
 1672              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1673              		.loc 1 791 54 view .LVU496
 1674 09d7 C5C5D3E1 		vpsrlq	ymm4, ymm7, xmm1	# vect__62.182, tmp1097, _184
 1675              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1676              		.loc 1 791 99 view .LVU497
GAS LISTING /tmp/cc64mrzX.s 			page 51


 1677 09db C5E5F3E8 		vpsllq	ymm5, ymm3, xmm0	# vect__67.186, tmp1098, _182
 1678              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1679              		.loc 1 791 72 view .LVU498
 1680 09df C55DEBC5 		vpor	ymm8, ymm4, ymm5	# vect__70.187, vect__62.182, vect__67.186
 1681              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1682              		.loc 1 791 29 view .LVU499
 1683 09e3 C57E7F04 		vmovdqu	YMMWORD PTR [rcx+rdx], ymm8	# MEM[base: vectp.189_212, index: ivtmp.222_467, offset: 0B], 
 1683      11
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1684              		.loc 1 790 48 is_stmt 1 view .LVU500
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1685              		.loc 1 790 12 view .LVU501
 1686 09e8 4883C220 		add	rdx, 32	# ivtmp.222,
 1687 09ec 4C39D2   		cmp	rdx, r10	# ivtmp.222, _469
 1688 09ef 0F842E01 		je	.L244	#,
 1688      0000
 1689              	.L69:
 1690              		.loc 1 791 9 discriminator 2 view .LVU502
 1691              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1692              		.loc 1 791 54 is_stmt 0 discriminator 2 view .LVU503
 1693 09f5 C57D6F0C 		vmovdqa	ymm9, YMMWORD PTR [rsi+rdx]	# tmp1015, MEM[base: vectp.180_10, index: ivtmp.222_467, offse
 1693      16
 1694              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1695              		.loc 1 791 99 discriminator 2 view .LVU504
 1696 09fa C4417E6F 		vmovdqu	ymm11, YMMWORD PTR [r8+rdx]	# tmp1016, MEM[base: vectp.184_17, index: ivtmp.222_467, offse
 1696      1C10
 1697              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1698              		.loc 1 791 54 discriminator 2 view .LVU505
 1699 0a00 C535D3D1 		vpsrlq	ymm10, ymm9, xmm1	# vect__62.182, tmp1015, _184
 1700              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1701              		.loc 1 791 99 discriminator 2 view .LVU506
 1702 0a04 C525F3E0 		vpsllq	ymm12, ymm11, xmm0	# vect__67.186, tmp1016, _182
 1703              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1704              		.loc 1 791 72 discriminator 2 view .LVU507
 1705 0a08 C4412DEB 		vpor	ymm13, ymm10, ymm12	# vect__70.187, vect__62.182, vect__67.186
 1705      EC
 1706              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1707              		.loc 1 791 29 discriminator 2 view .LVU508
 1708 0a0d C57E7F2C 		vmovdqu	YMMWORD PTR [rcx+rdx], ymm13	# MEM[base: vectp.189_212, index: ivtmp.222_467, offset: 0B],
 1708      11
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1709              		.loc 1 790 48 is_stmt 1 discriminator 2 view .LVU509
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1710              		.loc 1 790 12 discriminator 2 view .LVU510
 1711              		.loc 1 791 9 discriminator 2 view .LVU511
 1712              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1713              		.loc 1 791 54 is_stmt 0 discriminator 2 view .LVU512
 1714 0a12 C57D6F74 		vmovdqa	ymm14, YMMWORD PTR 32[rsi+rdx]	# tmp1017, MEM[base: vectp.180_10, index: ivtmp.222_467, of
 1714      1620
 1715              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1716              		.loc 1 791 99 discriminator 2 view .LVU513
 1717 0a18 C4C17E6F 		vmovdqu	ymm6, YMMWORD PTR 32[r8+rdx]	# tmp1018, MEM[base: vectp.184_17, index: ivtmp.222_467, offs
 1717      741020
 1718              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1719              		.loc 1 791 54 discriminator 2 view .LVU514
 1720 0a1f C50DD3F9 		vpsrlq	ymm15, ymm14, xmm1	# vect__62.182, tmp1017, _184
 1721              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
GAS LISTING /tmp/cc64mrzX.s 			page 52


 1722              		.loc 1 791 99 discriminator 2 view .LVU515
 1723 0a23 C5CDF3D0 		vpsllq	ymm2, ymm6, xmm0	# vect__67.186, tmp1018, _182
 1724              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1725              		.loc 1 791 72 discriminator 2 view .LVU516
 1726 0a27 C585EBFA 		vpor	ymm7, ymm15, ymm2	# vect__70.187, vect__62.182, vect__67.186
 1727              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1728              		.loc 1 791 29 discriminator 2 view .LVU517
 1729 0a2b C5FE7F7C 		vmovdqu	YMMWORD PTR 32[rcx+rdx], ymm7	# MEM[base: vectp.189_212, index: ivtmp.222_467, offset: 0B]
 1729      1120
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1730              		.loc 1 790 48 is_stmt 1 discriminator 2 view .LVU518
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1731              		.loc 1 790 12 discriminator 2 view .LVU519
 1732              		.loc 1 791 9 discriminator 2 view .LVU520
 1733              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1734              		.loc 1 791 54 is_stmt 0 discriminator 2 view .LVU521
 1735 0a31 C5FD6F64 		vmovdqa	ymm4, YMMWORD PTR 64[rsi+rdx]	# tmp1019, MEM[base: vectp.180_10, index: ivtmp.222_467, off
 1735      1640
 1736              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1737              		.loc 1 791 99 discriminator 2 view .LVU522
 1738 0a37 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR 64[r8+rdx]	# tmp1020, MEM[base: vectp.184_17, index: ivtmp.222_467, offs
 1738      5C1040
 1739              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1740              		.loc 1 791 54 discriminator 2 view .LVU523
 1741 0a3e C5DDD3E9 		vpsrlq	ymm5, ymm4, xmm1	# vect__62.182, tmp1019, _184
 1742              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1743              		.loc 1 791 99 discriminator 2 view .LVU524
 1744 0a42 C565F3C0 		vpsllq	ymm8, ymm3, xmm0	# vect__67.186, tmp1020, _182
 1745              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1746              		.loc 1 791 72 discriminator 2 view .LVU525
 1747 0a46 C44155EB 		vpor	ymm9, ymm5, ymm8	# vect__70.187, vect__62.182, vect__67.186
 1747      C8
 1748              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1749              		.loc 1 791 29 discriminator 2 view .LVU526
 1750 0a4b C57E7F4C 		vmovdqu	YMMWORD PTR 64[rcx+rdx], ymm9	# MEM[base: vectp.189_212, index: ivtmp.222_467, offset: 0B]
 1750      1140
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1751              		.loc 1 790 48 is_stmt 1 discriminator 2 view .LVU527
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1752              		.loc 1 790 12 discriminator 2 view .LVU528
 1753              		.loc 1 791 9 discriminator 2 view .LVU529
 1754              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1755              		.loc 1 791 54 is_stmt 0 discriminator 2 view .LVU530
 1756 0a51 C57D6F54 		vmovdqa	ymm10, YMMWORD PTR 96[rsi+rdx]	# tmp1021, MEM[base: vectp.180_10, index: ivtmp.222_467, of
 1756      1660
 1757              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1758              		.loc 1 791 99 discriminator 2 view .LVU531
 1759 0a57 C4417E6F 		vmovdqu	ymm12, YMMWORD PTR 96[r8+rdx]	# tmp1022, MEM[base: vectp.184_17, index: ivtmp.222_467, off
 1759      641060
 1760              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1761              		.loc 1 791 54 discriminator 2 view .LVU532
 1762 0a5e C52DD3D9 		vpsrlq	ymm11, ymm10, xmm1	# vect__62.182, tmp1021, _184
 1763              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1764              		.loc 1 791 99 discriminator 2 view .LVU533
 1765 0a62 C51DF3E8 		vpsllq	ymm13, ymm12, xmm0	# vect__67.186, tmp1022, _182
 1766              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1767              		.loc 1 791 72 discriminator 2 view .LVU534
GAS LISTING /tmp/cc64mrzX.s 			page 53


 1768 0a66 C44125EB 		vpor	ymm14, ymm11, ymm13	# vect__70.187, vect__62.182, vect__67.186
 1768      F5
 1769              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1770              		.loc 1 791 29 discriminator 2 view .LVU535
 1771 0a6b C57E7F74 		vmovdqu	YMMWORD PTR 96[rcx+rdx], ymm14	# MEM[base: vectp.189_212, index: ivtmp.222_467, offset: 0B
 1771      1160
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1772              		.loc 1 790 48 is_stmt 1 discriminator 2 view .LVU536
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1773              		.loc 1 790 12 discriminator 2 view .LVU537
 1774              		.loc 1 791 9 discriminator 2 view .LVU538
 1775              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1776              		.loc 1 791 54 is_stmt 0 discriminator 2 view .LVU539
 1777 0a71 C57D6FBC 		vmovdqa	ymm15, YMMWORD PTR 128[rsi+rdx]	# tmp1023, MEM[base: vectp.180_10, index: ivtmp.222_467, o
 1777      16800000 
 1777      00
 1778              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1779              		.loc 1 791 99 discriminator 2 view .LVU540
 1780 0a7a C4C17E6F 		vmovdqu	ymm2, YMMWORD PTR 128[r8+rdx]	# tmp1024, MEM[base: vectp.184_17, index: ivtmp.222_467, off
 1780      94108000 
 1780      0000
 1781              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1782              		.loc 1 791 54 discriminator 2 view .LVU541
 1783 0a84 C585D3F1 		vpsrlq	ymm6, ymm15, xmm1	# vect__62.182, tmp1023, _184
 1784              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1785              		.loc 1 791 99 discriminator 2 view .LVU542
 1786 0a88 C5EDF3F8 		vpsllq	ymm7, ymm2, xmm0	# vect__67.186, tmp1024, _182
 1787              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1788              		.loc 1 791 72 discriminator 2 view .LVU543
 1789 0a8c C5CDEBE7 		vpor	ymm4, ymm6, ymm7	# vect__70.187, vect__62.182, vect__67.186
 1790              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1791              		.loc 1 791 29 discriminator 2 view .LVU544
 1792 0a90 C5FE7FA4 		vmovdqu	YMMWORD PTR 128[rcx+rdx], ymm4	# MEM[base: vectp.189_212, index: ivtmp.222_467, offset: 0B
 1792      11800000 
 1792      00
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1793              		.loc 1 790 48 is_stmt 1 discriminator 2 view .LVU545
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1794              		.loc 1 790 12 discriminator 2 view .LVU546
 1795              		.loc 1 791 9 discriminator 2 view .LVU547
 1796              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1797              		.loc 1 791 54 is_stmt 0 discriminator 2 view .LVU548
 1798 0a99 C5FD6FAC 		vmovdqa	ymm5, YMMWORD PTR 160[rsi+rdx]	# tmp1025, MEM[base: vectp.180_10, index: ivtmp.222_467, of
 1798      16A00000 
 1798      00
 1799              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1800              		.loc 1 791 99 discriminator 2 view .LVU549
 1801 0aa2 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR 160[r8+rdx]	# tmp1026, MEM[base: vectp.184_17, index: ivtmp.222_467, off
 1801      9C10A000 
 1801      0000
 1802              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1803              		.loc 1 791 54 discriminator 2 view .LVU550
 1804 0aac C555D3C1 		vpsrlq	ymm8, ymm5, xmm1	# vect__62.182, tmp1025, _184
 1805              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1806              		.loc 1 791 99 discriminator 2 view .LVU551
 1807 0ab0 C565F3C8 		vpsllq	ymm9, ymm3, xmm0	# vect__67.186, tmp1026, _182
 1808              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
GAS LISTING /tmp/cc64mrzX.s 			page 54


 1809              		.loc 1 791 72 discriminator 2 view .LVU552
 1810 0ab4 C4413DEB 		vpor	ymm10, ymm8, ymm9	# vect__70.187, vect__62.182, vect__67.186
 1810      D1
 1811              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1812              		.loc 1 791 29 discriminator 2 view .LVU553
 1813 0ab9 C57E7F94 		vmovdqu	YMMWORD PTR 160[rcx+rdx], ymm10	# MEM[base: vectp.189_212, index: ivtmp.222_467, offset: 0
 1813      11A00000 
 1813      00
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1814              		.loc 1 790 48 is_stmt 1 discriminator 2 view .LVU554
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1815              		.loc 1 790 12 discriminator 2 view .LVU555
 1816              		.loc 1 791 9 discriminator 2 view .LVU556
 1817              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1818              		.loc 1 791 54 is_stmt 0 discriminator 2 view .LVU557
 1819 0ac2 C57D6F9C 		vmovdqa	ymm11, YMMWORD PTR 192[rsi+rdx]	# tmp1027, MEM[base: vectp.180_10, index: ivtmp.222_467, o
 1819      16C00000 
 1819      00
 1820              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1821              		.loc 1 791 99 discriminator 2 view .LVU558
 1822 0acb C4417E6F 		vmovdqu	ymm13, YMMWORD PTR 192[r8+rdx]	# tmp1028, MEM[base: vectp.184_17, index: ivtmp.222_467, of
 1822      AC10C000 
 1822      0000
 1823              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1824              		.loc 1 791 54 discriminator 2 view .LVU559
 1825 0ad5 C525D3E1 		vpsrlq	ymm12, ymm11, xmm1	# vect__62.182, tmp1027, _184
 1826              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1827              		.loc 1 791 99 discriminator 2 view .LVU560
 1828 0ad9 C515F3F0 		vpsllq	ymm14, ymm13, xmm0	# vect__67.186, tmp1028, _182
 1829              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1830              		.loc 1 791 72 discriminator 2 view .LVU561
 1831 0add C4411DEB 		vpor	ymm15, ymm12, ymm14	# vect__70.187, vect__62.182, vect__67.186
 1831      FE
 1832              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1833              		.loc 1 791 29 discriminator 2 view .LVU562
 1834 0ae2 C57E7FBC 		vmovdqu	YMMWORD PTR 192[rcx+rdx], ymm15	# MEM[base: vectp.189_212, index: ivtmp.222_467, offset: 0
 1834      11C00000 
 1834      00
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1835              		.loc 1 790 48 is_stmt 1 discriminator 2 view .LVU563
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1836              		.loc 1 790 12 discriminator 2 view .LVU564
 1837              		.loc 1 791 9 discriminator 2 view .LVU565
 1838              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1839              		.loc 1 791 54 is_stmt 0 discriminator 2 view .LVU566
 1840 0aeb C5FD6FB4 		vmovdqa	ymm6, YMMWORD PTR 224[rsi+rdx]	# tmp1029, MEM[base: vectp.180_10, index: ivtmp.222_467, of
 1840      16E00000 
 1840      00
 1841              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1842              		.loc 1 791 99 discriminator 2 view .LVU567
 1843 0af4 C4C17E6F 		vmovdqu	ymm7, YMMWORD PTR 224[r8+rdx]	# tmp1030, MEM[base: vectp.184_17, index: ivtmp.222_467, off
 1843      BC10E000 
 1843      0000
 1844              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1845              		.loc 1 791 54 discriminator 2 view .LVU568
 1846 0afe C5CDD3D1 		vpsrlq	ymm2, ymm6, xmm1	# vect__62.182, tmp1029, _184
 1847              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
GAS LISTING /tmp/cc64mrzX.s 			page 55


 1848              		.loc 1 791 99 discriminator 2 view .LVU569
 1849 0b02 C5C5F3E0 		vpsllq	ymm4, ymm7, xmm0	# vect__67.186, tmp1030, _182
 1850              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1851              		.loc 1 791 72 discriminator 2 view .LVU570
 1852 0b06 C5EDEBEC 		vpor	ymm5, ymm2, ymm4	# vect__70.187, vect__62.182, vect__67.186
 1853              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1854              		.loc 1 791 29 discriminator 2 view .LVU571
 1855 0b0a C5FE7FAC 		vmovdqu	YMMWORD PTR 224[rcx+rdx], ymm5	# MEM[base: vectp.189_212, index: ivtmp.222_467, offset: 0B
 1855      11E00000 
 1855      00
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1856              		.loc 1 790 48 is_stmt 1 discriminator 2 view .LVU572
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1857              		.loc 1 790 12 discriminator 2 view .LVU573
 1858 0b13 4881C200 		add	rdx, 256	# ivtmp.222,
 1858      010000
 1859 0b1a 4C39D2   		cmp	rdx, r10	# ivtmp.222, _469
 1860 0b1d 0F85D2FE 		jne	.L69	#,
 1860      FFFF
 1861              	.L244:
 1862 0b23 4C8B5424 		mov	r10, QWORD PTR -40[rsp]	# source_word, %sfp
 1862      D8
 1863 0b28 4C89CB   		mov	rbx, r9	# niters_vector_mult_vf.176, niters.174
 1864 0b2b 4883E3FC 		and	rbx, -4	# niters_vector_mult_vf.176,
 1865 0b2f 4901DC   		add	r12, rbx	# tmp.177, niters_vector_mult_vf.176
 1866 0b32 4901DA   		add	r10, rbx	# source_word, niters_vector_mult_vf.176
 1867 0b35 4C39CB   		cmp	rbx, r9	# niters_vector_mult_vf.176, niters.174
 1868 0b38 0F844207 		je	.L257	#,
 1868      0000
 1869              	.LVL79:
 1870              		.loc 1 791 9 view .LVU574
 1871              	# sieve_extend.c:790:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1872              		.loc 1 790 5 is_stmt 0 view .LVU575
 1873 0b3e 488B5424 		mov	rdx, QWORD PTR -8[rsp]	# destination_stop_word, %sfp
 1873      F8
 1874              	# sieve_extend.c:790:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1875              		.loc 1 790 57 view .LVU576
 1876 0b43 4D8D5C24 		lea	r11, 1[r12]	# copy_word,
 1876      01
 1877              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1878              		.loc 1 791 99 view .LVU577
 1879 0b48 C42289F7 		shlx	r8, QWORD PTR 8[rdi+r10*8], r14	# tmp545, *_66, shift
 1879      44D708
 1880              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1881              		.loc 1 791 54 view .LVU578
 1882 0b4f C4A2FBF7 		shrx	rsi, QWORD PTR [rdi+r10*8], rax	# tmp547, *_61, shift_flipped
 1882      34D7
 1883              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1884              		.loc 1 791 72 view .LVU579
 1885 0b55 4909F0   		or	r8, rsi	# tmp549, tmp547
 1886              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1887              		.loc 1 791 83 view .LVU580
 1888 0b58 4D8D4A01 		lea	r9, 1[r10]	# _64,
 1889              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1890              		.loc 1 791 72 view .LVU581
GAS LISTING /tmp/cc64mrzX.s 			page 56


 1891 0b5c 4E8904E7 		mov	QWORD PTR [rdi+r12*8], r8	# *_70, tmp549
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1892              		.loc 1 790 48 is_stmt 1 view .LVU582
 1893              	.LVL80:
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1894              		.loc 1 790 12 view .LVU583
 1895              	# sieve_extend.c:790:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1896              		.loc 1 790 5 is_stmt 0 view .LVU584
 1897 0b60 4939D3   		cmp	r11, rdx	# copy_word, destination_stop_word
 1898 0b63 0F871707 		ja	.L257	#,
 1898      0000
 1899              		.loc 1 791 9 is_stmt 1 view .LVU585
 1900              	# sieve_extend.c:790:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1901              		.loc 1 790 57 is_stmt 0 view .LVU586
 1902 0b69 4983C402 		add	r12, 2	# copy_word,
 1903              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1904              		.loc 1 791 99 view .LVU587
 1905 0b6d C4A289F7 		shlx	rcx, QWORD PTR 8[rdi+r9*8], r14	# tmp550, *_53, shift
 1905      4CCF08
 1906              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1907              		.loc 1 791 54 view .LVU588
 1908 0b74 4A8B1CCF 		mov	rbx, QWORD PTR [rdi+r9*8]	# *_48, *_48
 1909              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1910              		.loc 1 791 83 view .LVU589
 1911 0b78 4983C202 		add	r10, 2	# _51,
 1912              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1913              		.loc 1 791 54 view .LVU590
 1914 0b7c C462FBF7 		shrx	r9, rbx, rax	# tmp552, *_48, shift_flipped
 1914      CB
 1915              	.LVL81:
 1916              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1917              		.loc 1 791 72 view .LVU591
 1918 0b81 4C09C9   		or	rcx, r9	# tmp554, tmp552
 1919 0b84 4A890CDF 		mov	QWORD PTR [rdi+r11*8], rcx	# *_57, tmp554
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1920              		.loc 1 790 48 is_stmt 1 view .LVU592
 1921              	.LVL82:
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1922              		.loc 1 790 12 view .LVU593
 1923              	# sieve_extend.c:790:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1924              		.loc 1 790 5 is_stmt 0 view .LVU594
 1925 0b88 4C39E2   		cmp	rdx, r12	# destination_stop_word, copy_word
 1926 0b8b 0F82EF06 		jb	.L257	#,
 1926      0000
 1927              		.loc 1 791 9 is_stmt 1 view .LVU595
 1928              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1929              		.loc 1 791 99 is_stmt 0 view .LVU596
 1930 0b91 C42289F7 		shlx	r14, QWORD PTR 8[rdi+r10*8], r14	# tmp555, *_36, shift
 1930      74D708
 1931              	.LVL83:
 1932              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1933              		.loc 1 791 54 view .LVU597
 1934 0b98 4E8B14D7 		mov	r10, QWORD PTR [rdi+r10*8]	# *_30, *_30
 1935              	.LVL84:
GAS LISTING /tmp/cc64mrzX.s 			page 57


 1936              		.loc 1 791 54 view .LVU598
 1937 0b9c C4C2FBF7 		shrx	rax, r10, rax	# tmp557, *_30, shift_flipped
 1937      C2
 1938              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1939              		.loc 1 791 72 view .LVU599
 1940 0ba1 4C09F0   		or	rax, r14	# tmp559, tmp555
 1941 0ba4 4A8904E7 		mov	QWORD PTR [rdi+r12*8], rax	# *_40, tmp559
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1942              		.loc 1 790 48 is_stmt 1 view .LVU600
 1943              	.LVL85:
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1944              		.loc 1 790 12 view .LVU601
 1945 0ba8 C5F877   		vzeroupper
 1946              	.LVL86:
 1947              	.L73:
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1948              		.loc 1 790 12 is_stmt 0 view .LVU602
 1949 0bab 4C3B6C24 		cmp	r13, QWORD PTR -24[rsp]	# _175, %sfp
 1949      E8
 1950 0bb0 B9000000 		mov	ecx, 0	# tmp544,
 1950      00
 1951 0bb5 4C8B6424 		mov	r12, QWORD PTR -32[rsp]	#, %sfp
 1951      E0
 1952 0bba 490F46CC 		cmovbe	rcx, r12	#,, tmp543
 1953 0bbe 4C01E9   		add	rcx, r13	# copy_word, _175
 1954              	.L66:
 792:sieve_extend.c ****     }
 793:sieve_extend.c ****     bitarray[copy_word] &= chopmask(destination_stop);
 1955              		.loc 1 793 5 is_stmt 1 view .LVU603
 1956              	# sieve_extend.c:793:     bitarray[copy_word] &= chopmask(destination_stop);
 1957              		.loc 1 793 25 is_stmt 0 view .LVU604
 1958 0bc1 4C213CCF 		and	QWORD PTR [rdi+rcx*8], r15	# *_72, _193
 1959              	# sieve_extend.c:795: }
 794:sieve_extend.c **** 
 795:sieve_extend.c **** }
 1960              		.loc 1 795 1 view .LVU605
 1961 0bc5 488D65D8 		lea	rsp, -40[rbp]	#,
 1962 0bc9 5B       		pop	rbx	#
 1963 0bca 415C     		pop	r12	#
 1964 0bcc 415D     		pop	r13	#
 1965 0bce 415E     		pop	r14	#
 1966 0bd0 415F     		pop	r15	#
 1967 0bd2 5D       		pop	rbp	#
 1968              		.cfi_remember_state
 1969              		.cfi_def_cfa 7, 8
 1970 0bd3 C3       		ret	
 1971              	.LVL87:
 1972              		.p2align 4,,7
 1973 0bd4 0F1F4000 		.p2align 3
 1974              	.L261:
 1975              		.cfi_restore_state
 1976              	.LBB319:
 780:sieve_extend.c **** 
 1977              		.loc 1 780 9 is_stmt 1 view .LVU606
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1978              		.loc 1 784 9 view .LVU607
 1979              	.LBB320:
GAS LISTING /tmp/cc64mrzX.s 			page 58


 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1980              		.loc 1 784 14 view .LVU608
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1981              		.loc 1 784 40 view .LVU609
 1982              	# sieve_extend.c:784:         for (register counter_t i = 0; i <loop_distance; i++) {
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1983              		.loc 1 784 9 is_stmt 0 view .LVU610
 1984 0bd8 4C8B6C24 		mov	r13, QWORD PTR -8[rsp]	# loop_distance, %sfp
 1984      F8
 1985 0bdd 4889F2   		mov	rdx, rsi	# source_word, source_word
 1986              	.LVL88:
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1987              		.loc 1 784 9 view .LVU611
 1988 0be0 4929CD   		sub	r13, rcx	# loop_distance, copy_word
 1989 0be3 4C896C24 		mov	QWORD PTR -24[rsp], r13	# %sfp, loop_distance
 1989      E8
 1990 0be8 0F84FB03 		je	.L62	#,
 1990      0000
 1991 0bee 4D8D5424 		lea	r10, 8[r12]	# tmp413,
 1991      08
 1992 0bf3 4C8D4B28 		lea	r9, 40[rbx]	# tmp412,
 1993 0bf7 4D39D1   		cmp	r9, r10	# tmp412, tmp413
 1994 0bfa 4C8D6B08 		lea	r13, 8[rbx]	# tmp417,
 1995 0bfe 410F9EC1 		setle	r9b	#, tmp415
 1996 0c02 4983C428 		add	r12, 40	# tmp416,
 1997 0c06 4D39EC   		cmp	r12, r13	# tmp416, tmp417
 1998 0c09 488D5601 		lea	rdx, 1[rsi]	# _232,
 1999 0c0d 410F9EC5 		setle	r13b	#, tmp419
 2000 0c11 4509E9   		or	r9d, r13d	# tmp420, tmp419
 2001 0c14 4C8D6B20 		lea	r13, 32[rbx]	# tmp421,
 2002 0c18 4D39D5   		cmp	r13, r10	# tmp421, tmp413
 2003 0c1b 410F9EC2 		setle	r10b	#, tmp424
 2004 0c1f 4939DC   		cmp	r12, rbx	# tmp416, _179
 2005 0c22 410F9EC4 		setle	r12b	#, tmp427
 2006 0c26 4509E2   		or	r10d, r12d	# tmp428, tmp427
 2007 0c29 4584D1   		test	r9b, r10b	# tmp420, tmp428
 2008 0c2c 0F846706 		je	.L57	#,
 2008      0000
 2009 0c32 4C8B4C24 		mov	r9, QWORD PTR -24[rsp]	# loop_distance, %sfp
 2009      E8
 2010 0c37 4D8D69FF 		lea	r13, -1[r9]	# tmp430,
 2011 0c3b 4983FD05 		cmp	r13, 5	# tmp430,
 2012 0c3f 0F865406 		jbe	.L57	#,
 2012      0000
 2013 0c45 4D89D9   		mov	r9, r11	# tmp433, _180
 2014              	# sieve_extend.c:784:         for (register counter_t i = 0; i <loop_distance; i++) {
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2015              		.loc 1 784 33 view .LVU612
 2016 0c48 4531E4   		xor	r12d, r12d	# i
 2017 0c4b 49C1E903 		shr	r9, 3	# tmp433,
 2018 0c4f 49F7D9   		neg	r9	# tmp434
 2019 0c52 4183E103 		and	r9d, 3	# prolog_loop_niters.192,
 2020 0c56 7468     		je	.L58	#,
 785:sieve_extend.c ****         }
 2021              		.loc 1 785 13 is_stmt 1 view .LVU613
 2022              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
GAS LISTING /tmp/cc64mrzX.s 			page 59


 2023              		.loc 1 785 109 is_stmt 0 view .LVU614
 2024 0c58 488B5C1F 		mov	rbx, QWORD PTR 8[rdi+rbx]	# *_428, *_428
 2024      08
 2025 0c5d C46289F7 		shlx	r10, rbx, r14	# tmp435, *_428, shift
 2025      D3
 2026              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2027              		.loc 1 785 62 view .LVU615
 2028 0c62 4D8B1B   		mov	r11, QWORD PTR [r11]	# *_180, *_180
 2029 0c65 C442FBF7 		shrx	r12, r11, rax	# tmp437, *_180, shift_flipped
 2029      E3
 2030              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2031              		.loc 1 785 80 view .LVU616
 2032 0c6a 4D09E2   		or	r10, r12	# tmp439, tmp437
 2033 0c6d 4983F901 		cmp	r9, 1	# prolog_loop_niters.192,
 2034 0c71 4C8914CF 		mov	QWORD PTR [rdi+rcx*8], r10	# *_433, tmp439
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2035              		.loc 1 784 58 is_stmt 1 view .LVU617
 2036              	.LVL89:
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2037              		.loc 1 784 40 view .LVU618
 2038              	# sieve_extend.c:784:         for (register counter_t i = 0; i <loop_distance; i++) {
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2039              		.loc 1 784 59 is_stmt 0 view .LVU619
 2040 0c75 41BC0100 		mov	r12d, 1	# i,
 2040      0000
 2041 0c7b 7443     		je	.L58	#,
 785:sieve_extend.c ****         }
 2042              		.loc 1 785 13 is_stmt 1 view .LVU620
 2043              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2044              		.loc 1 785 109 is_stmt 0 view .LVU621
 2045 0c7d C46289F7 		shlx	r13, QWORD PTR 8[rdi+rdx*8], r14	# tmp441, *_448, shift
 2045      6CD708
 2046              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2047              		.loc 1 785 62 view .LVU622
 2048 0c84 C4E2FBF7 		shrx	rbx, QWORD PTR [rdi+rdx*8], rax	# tmp443, *_443, shift_flipped
 2048      1CD7
 2049              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2050              		.loc 1 785 80 view .LVU623
 2051 0c8a 4909DD   		or	r13, rbx	# tmp445, tmp443
 2052 0c8d 4983F903 		cmp	r9, 3	# prolog_loop_niters.192,
 2053 0c91 4E896CC7 		mov	QWORD PTR 16[rdi+r8*8], r13	# *_453, tmp445
 2053      10
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2054              		.loc 1 784 58 is_stmt 1 view .LVU624
 2055              	.LVL90:
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2056              		.loc 1 784 40 view .LVU625
 2057              	# sieve_extend.c:784:         for (register counter_t i = 0; i <loop_distance; i++) {
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2058              		.loc 1 784 59 is_stmt 0 view .LVU626
 2059 0c96 41BC0200 		mov	r12d, 2	# i,
 2059      0000
GAS LISTING /tmp/cc64mrzX.s 			page 60


 2060 0c9c 7522     		jne	.L58	#,
 785:sieve_extend.c ****         }
 2061              		.loc 1 785 13 is_stmt 1 view .LVU627
 2062              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2063              		.loc 1 785 58 is_stmt 0 view .LVU628
 2064 0c9e 4C8D5E02 		lea	r11, 2[rsi]	# tmp446,
 2065              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2066              		.loc 1 785 109 view .LVU629
 2067 0ca2 C42289F7 		shlx	r10, QWORD PTR 8[rdi+r11*8], r14	# tmp448, *_286, shift
 2067      54DF08
 2068              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2069              		.loc 1 785 62 view .LVU630
 2070 0ca9 4E8B24DF 		mov	r12, QWORD PTR [rdi+r11*8]	# *_281, *_281
 2071 0cad C442FBF7 		shrx	r13, r12, rax	# tmp450, *_281, shift_flipped
 2071      EC
 2072              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2073              		.loc 1 785 80 view .LVU631
 2074 0cb2 4D09EA   		or	r10, r13	# tmp452, tmp450
 2075              	# sieve_extend.c:784:         for (register counter_t i = 0; i <loop_distance; i++) {
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2076              		.loc 1 784 59 view .LVU632
 2077 0cb5 41BC0300 		mov	r12d, 3	# i,
 2077      0000
 2078              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2079              		.loc 1 785 80 view .LVU633
 2080 0cbb 4E8954C7 		mov	QWORD PTR 24[rdi+r8*8], r10	# *_291, tmp452
 2080      18
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2081              		.loc 1 784 58 is_stmt 1 view .LVU634
 2082              	.LVL91:
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2083              		.loc 1 784 40 view .LVU635
 2084              	.L58:
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2085              		.loc 1 784 40 is_stmt 0 view .LVU636
 2086 0cc0 488B5C24 		mov	rbx, QWORD PTR -24[rsp]	# niters.193, %sfp
 2086      E8
 2087 0cc5 4E8D040E 		lea	r8, [rsi+r9]	# tmp453,
 2088 0cc9 4E8D14C7 		lea	r10, [rdi+r8*8]	# vectp.198,
 2089 0ccd 4C01CA   		add	rdx, r9	# tmp455, prolog_loop_niters.192
 2090 0cd0 C5F96E4C 		vmovd	xmm1, DWORD PTR -16[rsp]	# _184, %sfp
 2090      24F0
 2091 0cd6 4C8D1CD7 		lea	r11, [rdi+rdx*8]	# vectp.202,
 2092 0cda 4C29CB   		sub	rbx, r9	# niters.193, prolog_loop_niters.192
 2093              	# sieve_extend.c:784:         for (register counter_t i = 0; i <loop_distance; i++) {
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2094              		.loc 1 784 33 view .LVU637
 2095 0cdd 31D2     		xor	edx, edx	# ivtmp.241
 2096 0cdf 4989DD   		mov	r13, rbx	# bnd.194, niters.193
 2097 0ce2 4901C9   		add	r9, rcx	# tmp457, copy_word
 2098 0ce5 49C1ED02 		shr	r13, 2	# bnd.194,
 2099 0ce9 4E8D0CCF 		lea	r9, [rdi+r9*8]	# vectp.207,
GAS LISTING /tmp/cc64mrzX.s 			page 61


 2100 0ced 49C1E505 		sal	r13, 5	# bnd.194,
 2101 0cf1 C5F96E44 		vmovd	xmm0, DWORD PTR -12[rsp]	# _182, %sfp
 2101      24F4
 2102 0cf7 4D8D45E0 		lea	r8, -32[r13]	# tmp582,
 2103 0cfb 49C1E805 		shr	r8, 5	# tmp580,
 2104 0cff 4983C001 		add	r8, 1	# tmp583,
 2105 0d03 4183E007 		and	r8d, 7	# tmp584,
 2106 0d07 0F840901 		je	.L60	#,
 2106      0000
 2107 0d0d 4983F801 		cmp	r8, 1	# tmp584,
 2108 0d11 0F84D300 		je	.L179	#,
 2108      0000
 2109 0d17 4983F802 		cmp	r8, 2	# tmp584,
 2110 0d1b 0F84A600 		je	.L180	#,
 2110      0000
 2111 0d21 4983F803 		cmp	r8, 3	# tmp584,
 2112 0d25 747E     		je	.L181	#,
 2113 0d27 4983F804 		cmp	r8, 4	# tmp584,
 2114 0d2b 7455     		je	.L182	#,
 2115 0d2d 4983F805 		cmp	r8, 5	# tmp584,
 2116 0d31 742D     		je	.L183	#,
 2117 0d33 4983F806 		cmp	r8, 6	# tmp584,
 2118 0d37 0F858007 		jne	.L262	#,
 2118      0000
 2119              	.L184:
 785:sieve_extend.c ****         }
 2120              		.loc 1 785 13 is_stmt 1 view .LVU638
 2121              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2122              		.loc 1 785 62 is_stmt 0 view .LVU639
 2123 0d3d C4417D6F 		vmovdqa	ymm12, YMMWORD PTR [r10+rdx]	# tmp1073, MEM[base: vectp.198_325, index: ivtmp.241_483, off
 2123      2412
 2124              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2125              		.loc 1 785 109 view .LVU640
 2126 0d43 C4417E6F 		vmovdqu	ymm14, YMMWORD PTR [r11+rdx]	# tmp1074, MEM[base: vectp.202_332, index: ivtmp.241_483, off
 2126      3413
 2127              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2128              		.loc 1 785 62 view .LVU641
 2129 0d49 C51DD3E9 		vpsrlq	ymm13, ymm12, xmm1	# vect__49.200, tmp1073, _184
 2130              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2131              		.loc 1 785 109 view .LVU642
 2132 0d4d C50DF3F8 		vpsllq	ymm15, ymm14, xmm0	# vect__54.204, tmp1074, _182
 2133              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2134              		.loc 1 785 80 view .LVU643
 2135 0d51 C4C115EB 		vpor	ymm6, ymm13, ymm15	# vect__58.205, vect__49.200, vect__54.204
 2135      F7
 2136              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2137              		.loc 1 785 35 view .LVU644
 2138 0d56 C4C17E7F 		vmovdqu	YMMWORD PTR [r9+rdx], ymm6	# MEM[base: vectp.207_341, index: ivtmp.241_483, offset: 0B], v
 2138      3411
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2139              		.loc 1 784 58 is_stmt 1 view .LVU645
GAS LISTING /tmp/cc64mrzX.s 			page 62


 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2140              		.loc 1 784 40 view .LVU646
 2141 0d5c 4883C220 		add	rdx, 32	# ivtmp.241,
 2142              	.L183:
 785:sieve_extend.c ****         }
 2143              		.loc 1 785 13 view .LVU647
 2144              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2145              		.loc 1 785 62 is_stmt 0 view .LVU648
 2146 0d60 C4C17D6F 		vmovdqa	ymm2, YMMWORD PTR [r10+rdx]	# tmp1075, MEM[base: vectp.198_325, index: ivtmp.241_483, offs
 2146      1412
 2147              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2148              		.loc 1 785 109 view .LVU649
 2149 0d66 C4C17E6F 		vmovdqu	ymm4, YMMWORD PTR [r11+rdx]	# tmp1076, MEM[base: vectp.202_332, index: ivtmp.241_483, offs
 2149      2413
 2150              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2151              		.loc 1 785 62 view .LVU650
 2152 0d6c C5EDD3F9 		vpsrlq	ymm7, ymm2, xmm1	# vect__49.200, tmp1075, _184
 2153              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2154              		.loc 1 785 109 view .LVU651
 2155 0d70 C5DDF3E8 		vpsllq	ymm5, ymm4, xmm0	# vect__54.204, tmp1076, _182
 2156              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2157              		.loc 1 785 80 view .LVU652
 2158 0d74 C545EBC5 		vpor	ymm8, ymm7, ymm5	# vect__58.205, vect__49.200, vect__54.204
 2159              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2160              		.loc 1 785 35 view .LVU653
 2161 0d78 C4417E7F 		vmovdqu	YMMWORD PTR [r9+rdx], ymm8	# MEM[base: vectp.207_341, index: ivtmp.241_483, offset: 0B], v
 2161      0411
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2162              		.loc 1 784 58 is_stmt 1 view .LVU654
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2163              		.loc 1 784 40 view .LVU655
 2164 0d7e 4883C220 		add	rdx, 32	# ivtmp.241,
 2165              	.L182:
 785:sieve_extend.c ****         }
 2166              		.loc 1 785 13 view .LVU656
 2167              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2168              		.loc 1 785 62 is_stmt 0 view .LVU657
 2169 0d82 C4417D6F 		vmovdqa	ymm9, YMMWORD PTR [r10+rdx]	# tmp1077, MEM[base: vectp.198_325, index: ivtmp.241_483, offs
 2169      0C12
 2170              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2171              		.loc 1 785 109 view .LVU658
 2172 0d88 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR [r11+rdx]	# tmp1078, MEM[base: vectp.202_332, index: ivtmp.241_483, offs
 2172      1C13
 2173              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2174              		.loc 1 785 62 view .LVU659
 2175 0d8e C535D3D1 		vpsrlq	ymm10, ymm9, xmm1	# vect__49.200, tmp1077, _184
 2176              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
GAS LISTING /tmp/cc64mrzX.s 			page 63


 2177              		.loc 1 785 109 view .LVU660
 2178 0d92 C565F3D8 		vpsllq	ymm11, ymm3, xmm0	# vect__54.204, tmp1078, _182
 2179              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2180              		.loc 1 785 80 view .LVU661
 2181 0d96 C4412DEB 		vpor	ymm12, ymm10, ymm11	# vect__58.205, vect__49.200, vect__54.204
 2181      E3
 2182              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2183              		.loc 1 785 35 view .LVU662
 2184 0d9b C4417E7F 		vmovdqu	YMMWORD PTR [r9+rdx], ymm12	# MEM[base: vectp.207_341, index: ivtmp.241_483, offset: 0B], 
 2184      2411
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2185              		.loc 1 784 58 is_stmt 1 view .LVU663
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2186              		.loc 1 784 40 view .LVU664
 2187 0da1 4883C220 		add	rdx, 32	# ivtmp.241,
 2188              	.L181:
 785:sieve_extend.c ****         }
 2189              		.loc 1 785 13 view .LVU665
 2190              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2191              		.loc 1 785 62 is_stmt 0 view .LVU666
 2192 0da5 C4417D6F 		vmovdqa	ymm13, YMMWORD PTR [r10+rdx]	# tmp1079, MEM[base: vectp.198_325, index: ivtmp.241_483, off
 2192      2C12
 2193              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2194              		.loc 1 785 109 view .LVU667
 2195 0dab C4417E6F 		vmovdqu	ymm15, YMMWORD PTR [r11+rdx]	# tmp1080, MEM[base: vectp.202_332, index: ivtmp.241_483, off
 2195      3C13
 2196              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2197              		.loc 1 785 62 view .LVU668
 2198 0db1 C515D3F1 		vpsrlq	ymm14, ymm13, xmm1	# vect__49.200, tmp1079, _184
 2199              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2200              		.loc 1 785 109 view .LVU669
 2201 0db5 C585F3F0 		vpsllq	ymm6, ymm15, xmm0	# vect__54.204, tmp1080, _182
 2202              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2203              		.loc 1 785 80 view .LVU670
 2204 0db9 C58DEBD6 		vpor	ymm2, ymm14, ymm6	# vect__58.205, vect__49.200, vect__54.204
 2205              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2206              		.loc 1 785 35 view .LVU671
 2207 0dbd C4C17E7F 		vmovdqu	YMMWORD PTR [r9+rdx], ymm2	# MEM[base: vectp.207_341, index: ivtmp.241_483, offset: 0B], v
 2207      1411
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2208              		.loc 1 784 58 is_stmt 1 view .LVU672
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2209              		.loc 1 784 40 view .LVU673
 2210 0dc3 4883C220 		add	rdx, 32	# ivtmp.241,
 2211              	.L180:
 785:sieve_extend.c ****         }
 2212              		.loc 1 785 13 view .LVU674
 2213              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
GAS LISTING /tmp/cc64mrzX.s 			page 64


 2214              		.loc 1 785 62 is_stmt 0 view .LVU675
 2215 0dc7 C4C17D6F 		vmovdqa	ymm7, YMMWORD PTR [r10+rdx]	# tmp1081, MEM[base: vectp.198_325, index: ivtmp.241_483, offs
 2215      3C12
 2216              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2217              		.loc 1 785 109 view .LVU676
 2218 0dcd C4C17E6F 		vmovdqu	ymm5, YMMWORD PTR [r11+rdx]	# tmp1082, MEM[base: vectp.202_332, index: ivtmp.241_483, offs
 2218      2C13
 2219              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2220              		.loc 1 785 62 view .LVU677
 2221 0dd3 C5C5D3E1 		vpsrlq	ymm4, ymm7, xmm1	# vect__49.200, tmp1081, _184
 2222              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2223              		.loc 1 785 109 view .LVU678
 2224 0dd7 C555F3C0 		vpsllq	ymm8, ymm5, xmm0	# vect__54.204, tmp1082, _182
 2225              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2226              		.loc 1 785 80 view .LVU679
 2227 0ddb C4415DEB 		vpor	ymm9, ymm4, ymm8	# vect__58.205, vect__49.200, vect__54.204
 2227      C8
 2228              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2229              		.loc 1 785 35 view .LVU680
 2230 0de0 C4417E7F 		vmovdqu	YMMWORD PTR [r9+rdx], ymm9	# MEM[base: vectp.207_341, index: ivtmp.241_483, offset: 0B], v
 2230      0C11
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2231              		.loc 1 784 58 is_stmt 1 view .LVU681
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2232              		.loc 1 784 40 view .LVU682
 2233 0de6 4883C220 		add	rdx, 32	# ivtmp.241,
 2234              	.L179:
 785:sieve_extend.c ****         }
 2235              		.loc 1 785 13 view .LVU683
 2236              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2237              		.loc 1 785 62 is_stmt 0 view .LVU684
 2238 0dea C4417D6F 		vmovdqa	ymm10, YMMWORD PTR [r10+rdx]	# tmp1083, MEM[base: vectp.198_325, index: ivtmp.241_483, off
 2238      1412
 2239              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2240              		.loc 1 785 109 view .LVU685
 2241 0df0 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR [r11+rdx]	# tmp1084, MEM[base: vectp.202_332, index: ivtmp.241_483, offs
 2241      1C13
 2242              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2243              		.loc 1 785 62 view .LVU686
 2244 0df6 C52DD3D9 		vpsrlq	ymm11, ymm10, xmm1	# vect__49.200, tmp1083, _184
 2245              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2246              		.loc 1 785 109 view .LVU687
 2247 0dfa C565F3E0 		vpsllq	ymm12, ymm3, xmm0	# vect__54.204, tmp1084, _182
 2248              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2249              		.loc 1 785 80 view .LVU688
 2250 0dfe C44125EB 		vpor	ymm13, ymm11, ymm12	# vect__58.205, vect__49.200, vect__54.204
 2250      EC
GAS LISTING /tmp/cc64mrzX.s 			page 65


 2251              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2252              		.loc 1 785 35 view .LVU689
 2253 0e03 C4417E7F 		vmovdqu	YMMWORD PTR [r9+rdx], ymm13	# MEM[base: vectp.207_341, index: ivtmp.241_483, offset: 0B], 
 2253      2C11
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2254              		.loc 1 784 58 is_stmt 1 view .LVU690
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2255              		.loc 1 784 40 view .LVU691
 2256 0e09 4883C220 		add	rdx, 32	# ivtmp.241,
 2257 0e0d 4C39EA   		cmp	rdx, r13	# ivtmp.241, _485
 2258 0e10 0F843E01 		je	.L243	#,
 2258      0000
 2259              	.L60:
 785:sieve_extend.c ****         }
 2260              		.loc 1 785 13 discriminator 3 view .LVU692
 2261              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2262              		.loc 1 785 62 is_stmt 0 discriminator 3 view .LVU693
 2263 0e16 C4417D6F 		vmovdqa	ymm14, YMMWORD PTR [r10+rdx]	# tmp980, MEM[base: vectp.198_325, index: ivtmp.241_483, offs
 2263      3412
 2264              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2265              		.loc 1 785 109 discriminator 3 view .LVU694
 2266 0e1c C4C17E6F 		vmovdqu	ymm6, YMMWORD PTR [r11+rdx]	# tmp981, MEM[base: vectp.202_332, index: ivtmp.241_483, offse
 2266      3413
 2267              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2268              		.loc 1 785 62 discriminator 3 view .LVU695
 2269 0e22 C50DD3F9 		vpsrlq	ymm15, ymm14, xmm1	# vect__49.200, tmp980, _184
 2270              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2271              		.loc 1 785 109 discriminator 3 view .LVU696
 2272 0e26 C5CDF3D0 		vpsllq	ymm2, ymm6, xmm0	# vect__54.204, tmp981, _182
 2273              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2274              		.loc 1 785 80 discriminator 3 view .LVU697
 2275 0e2a C585EBFA 		vpor	ymm7, ymm15, ymm2	# vect__58.205, vect__49.200, vect__54.204
 2276              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2277              		.loc 1 785 35 discriminator 3 view .LVU698
 2278 0e2e C4C17E7F 		vmovdqu	YMMWORD PTR [r9+rdx], ymm7	# MEM[base: vectp.207_341, index: ivtmp.241_483, offset: 0B], v
 2278      3C11
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2279              		.loc 1 784 58 is_stmt 1 discriminator 3 view .LVU699
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2280              		.loc 1 784 40 discriminator 3 view .LVU700
 785:sieve_extend.c ****         }
 2281              		.loc 1 785 13 discriminator 3 view .LVU701
 2282              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2283              		.loc 1 785 62 is_stmt 0 discriminator 3 view .LVU702
 2284 0e34 C4C17D6F 		vmovdqa	ymm4, YMMWORD PTR 32[r10+rdx]	# tmp982, MEM[base: vectp.198_325, index: ivtmp.241_483, off
 2284      641220
 2285              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2286              		.loc 1 785 109 discriminator 3 view .LVU703
GAS LISTING /tmp/cc64mrzX.s 			page 66


 2287 0e3b C4C17E6F 		vmovdqu	ymm5, YMMWORD PTR 32[r11+rdx]	# tmp983, MEM[base: vectp.202_332, index: ivtmp.241_483, off
 2287      6C1320
 2288              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2289              		.loc 1 785 62 discriminator 3 view .LVU704
 2290 0e42 C55DD3C1 		vpsrlq	ymm8, ymm4, xmm1	# vect__49.200, tmp982, _184
 2291              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2292              		.loc 1 785 109 discriminator 3 view .LVU705
 2293 0e46 C555F3C8 		vpsllq	ymm9, ymm5, xmm0	# vect__54.204, tmp983, _182
 2294              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2295              		.loc 1 785 80 discriminator 3 view .LVU706
 2296 0e4a C4413DEB 		vpor	ymm10, ymm8, ymm9	# vect__58.205, vect__49.200, vect__54.204
 2296      D1
 2297              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2298              		.loc 1 785 35 discriminator 3 view .LVU707
 2299 0e4f C4417E7F 		vmovdqu	YMMWORD PTR 32[r9+rdx], ymm10	# MEM[base: vectp.207_341, index: ivtmp.241_483, offset: 0B]
 2299      541120
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2300              		.loc 1 784 58 is_stmt 1 discriminator 3 view .LVU708
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2301              		.loc 1 784 40 discriminator 3 view .LVU709
 785:sieve_extend.c ****         }
 2302              		.loc 1 785 13 discriminator 3 view .LVU710
 2303              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2304              		.loc 1 785 62 is_stmt 0 discriminator 3 view .LVU711
 2305 0e56 C4417D6F 		vmovdqa	ymm11, YMMWORD PTR 64[r10+rdx]	# tmp984, MEM[base: vectp.198_325, index: ivtmp.241_483, of
 2305      5C1240
 2306              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2307              		.loc 1 785 109 discriminator 3 view .LVU712
 2308 0e5d C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR 64[r11+rdx]	# tmp985, MEM[base: vectp.202_332, index: ivtmp.241_483, off
 2308      5C1340
 2309              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2310              		.loc 1 785 62 discriminator 3 view .LVU713
 2311 0e64 C525D3E1 		vpsrlq	ymm12, ymm11, xmm1	# vect__49.200, tmp984, _184
 2312              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2313              		.loc 1 785 109 discriminator 3 view .LVU714
 2314 0e68 C565F3E8 		vpsllq	ymm13, ymm3, xmm0	# vect__54.204, tmp985, _182
 2315              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2316              		.loc 1 785 80 discriminator 3 view .LVU715
 2317 0e6c C4411DEB 		vpor	ymm14, ymm12, ymm13	# vect__58.205, vect__49.200, vect__54.204
 2317      F5
 2318              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2319              		.loc 1 785 35 discriminator 3 view .LVU716
 2320 0e71 C4417E7F 		vmovdqu	YMMWORD PTR 64[r9+rdx], ymm14	# MEM[base: vectp.207_341, index: ivtmp.241_483, offset: 0B]
 2320      741140
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2321              		.loc 1 784 58 is_stmt 1 discriminator 3 view .LVU717
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
GAS LISTING /tmp/cc64mrzX.s 			page 67


 2322              		.loc 1 784 40 discriminator 3 view .LVU718
 785:sieve_extend.c ****         }
 2323              		.loc 1 785 13 discriminator 3 view .LVU719
 2324              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2325              		.loc 1 785 62 is_stmt 0 discriminator 3 view .LVU720
 2326 0e78 C4417D6F 		vmovdqa	ymm15, YMMWORD PTR 96[r10+rdx]	# tmp986, MEM[base: vectp.198_325, index: ivtmp.241_483, of
 2326      7C1260
 2327              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2328              		.loc 1 785 109 discriminator 3 view .LVU721
 2329 0e7f C4C17E6F 		vmovdqu	ymm2, YMMWORD PTR 96[r11+rdx]	# tmp987, MEM[base: vectp.202_332, index: ivtmp.241_483, off
 2329      541360
 2330              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2331              		.loc 1 785 62 discriminator 3 view .LVU722
 2332 0e86 C585D3F1 		vpsrlq	ymm6, ymm15, xmm1	# vect__49.200, tmp986, _184
 2333              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2334              		.loc 1 785 109 discriminator 3 view .LVU723
 2335 0e8a C5EDF3F8 		vpsllq	ymm7, ymm2, xmm0	# vect__54.204, tmp987, _182
 2336              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2337              		.loc 1 785 80 discriminator 3 view .LVU724
 2338 0e8e C5CDEBE7 		vpor	ymm4, ymm6, ymm7	# vect__58.205, vect__49.200, vect__54.204
 2339              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2340              		.loc 1 785 35 discriminator 3 view .LVU725
 2341 0e92 C4C17E7F 		vmovdqu	YMMWORD PTR 96[r9+rdx], ymm4	# MEM[base: vectp.207_341, index: ivtmp.241_483, offset: 0B],
 2341      641160
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2342              		.loc 1 784 58 is_stmt 1 discriminator 3 view .LVU726
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2343              		.loc 1 784 40 discriminator 3 view .LVU727
 785:sieve_extend.c ****         }
 2344              		.loc 1 785 13 discriminator 3 view .LVU728
 2345              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2346              		.loc 1 785 62 is_stmt 0 discriminator 3 view .LVU729
 2347 0e99 C4417D6F 		vmovdqa	ymm8, YMMWORD PTR 128[r10+rdx]	# tmp988, MEM[base: vectp.198_325, index: ivtmp.241_483, of
 2347      84128000 
 2347      0000
 2348              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2349              		.loc 1 785 109 discriminator 3 view .LVU730
 2350 0ea3 C4417E6F 		vmovdqu	ymm9, YMMWORD PTR 128[r11+rdx]	# tmp989, MEM[base: vectp.202_332, index: ivtmp.241_483, of
 2350      8C138000 
 2350      0000
 2351              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2352              		.loc 1 785 62 discriminator 3 view .LVU731
 2353 0ead C5BDD3E9 		vpsrlq	ymm5, ymm8, xmm1	# vect__49.200, tmp988, _184
 2354              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2355              		.loc 1 785 109 discriminator 3 view .LVU732
 2356 0eb1 C535F3D0 		vpsllq	ymm10, ymm9, xmm0	# vect__54.204, tmp989, _182
 2357              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
GAS LISTING /tmp/cc64mrzX.s 			page 68


 785:sieve_extend.c ****         }
 2358              		.loc 1 785 80 discriminator 3 view .LVU733
 2359 0eb5 C44155EB 		vpor	ymm11, ymm5, ymm10	# vect__58.205, vect__49.200, vect__54.204
 2359      DA
 2360              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2361              		.loc 1 785 35 discriminator 3 view .LVU734
 2362 0eba C4417E7F 		vmovdqu	YMMWORD PTR 128[r9+rdx], ymm11	# MEM[base: vectp.207_341, index: ivtmp.241_483, offset: 0B
 2362      9C118000 
 2362      0000
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2363              		.loc 1 784 58 is_stmt 1 discriminator 3 view .LVU735
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2364              		.loc 1 784 40 discriminator 3 view .LVU736
 785:sieve_extend.c ****         }
 2365              		.loc 1 785 13 discriminator 3 view .LVU737
 2366              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2367              		.loc 1 785 62 is_stmt 0 discriminator 3 view .LVU738
 2368 0ec4 C4417D6F 		vmovdqa	ymm12, YMMWORD PTR 160[r10+rdx]	# tmp990, MEM[base: vectp.198_325, index: ivtmp.241_483, o
 2368      A412A000 
 2368      0000
 2369              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2370              		.loc 1 785 109 discriminator 3 view .LVU739
 2371 0ece C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR 160[r11+rdx]	# tmp991, MEM[base: vectp.202_332, index: ivtmp.241_483, of
 2371      9C13A000 
 2371      0000
 2372              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2373              		.loc 1 785 62 discriminator 3 view .LVU740
 2374 0ed8 C51DD3E9 		vpsrlq	ymm13, ymm12, xmm1	# vect__49.200, tmp990, _184
 2375              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2376              		.loc 1 785 109 discriminator 3 view .LVU741
 2377 0edc C565F3F0 		vpsllq	ymm14, ymm3, xmm0	# vect__54.204, tmp991, _182
 2378              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2379              		.loc 1 785 80 discriminator 3 view .LVU742
 2380 0ee0 C44115EB 		vpor	ymm15, ymm13, ymm14	# vect__58.205, vect__49.200, vect__54.204
 2380      FE
 2381              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2382              		.loc 1 785 35 discriminator 3 view .LVU743
 2383 0ee5 C4417E7F 		vmovdqu	YMMWORD PTR 160[r9+rdx], ymm15	# MEM[base: vectp.207_341, index: ivtmp.241_483, offset: 0B
 2383      BC11A000 
 2383      0000
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2384              		.loc 1 784 58 is_stmt 1 discriminator 3 view .LVU744
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2385              		.loc 1 784 40 discriminator 3 view .LVU745
 785:sieve_extend.c ****         }
 2386              		.loc 1 785 13 discriminator 3 view .LVU746
 2387              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2388              		.loc 1 785 62 is_stmt 0 discriminator 3 view .LVU747
 2389 0eef C4C17D6F 		vmovdqa	ymm6, YMMWORD PTR 192[r10+rdx]	# tmp992, MEM[base: vectp.198_325, index: ivtmp.241_483, of
GAS LISTING /tmp/cc64mrzX.s 			page 69


 2389      B412C000 
 2389      0000
 2390              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2391              		.loc 1 785 109 discriminator 3 view .LVU748
 2392 0ef9 C4C17E6F 		vmovdqu	ymm7, YMMWORD PTR 192[r11+rdx]	# tmp993, MEM[base: vectp.202_332, index: ivtmp.241_483, of
 2392      BC13C000 
 2392      0000
 2393              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2394              		.loc 1 785 62 discriminator 3 view .LVU749
 2395 0f03 C5CDD3D1 		vpsrlq	ymm2, ymm6, xmm1	# vect__49.200, tmp992, _184
 2396              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2397              		.loc 1 785 109 discriminator 3 view .LVU750
 2398 0f07 C5C5F3E0 		vpsllq	ymm4, ymm7, xmm0	# vect__54.204, tmp993, _182
 2399              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2400              		.loc 1 785 80 discriminator 3 view .LVU751
 2401 0f0b C56DEBC4 		vpor	ymm8, ymm2, ymm4	# vect__58.205, vect__49.200, vect__54.204
 2402              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2403              		.loc 1 785 35 discriminator 3 view .LVU752
 2404 0f0f C4417E7F 		vmovdqu	YMMWORD PTR 192[r9+rdx], ymm8	# MEM[base: vectp.207_341, index: ivtmp.241_483, offset: 0B]
 2404      8411C000 
 2404      0000
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2405              		.loc 1 784 58 is_stmt 1 discriminator 3 view .LVU753
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2406              		.loc 1 784 40 discriminator 3 view .LVU754
 785:sieve_extend.c ****         }
 2407              		.loc 1 785 13 discriminator 3 view .LVU755
 2408              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2409              		.loc 1 785 62 is_stmt 0 discriminator 3 view .LVU756
 2410 0f19 C4C17D6F 		vmovdqa	ymm5, YMMWORD PTR 224[r10+rdx]	# tmp994, MEM[base: vectp.198_325, index: ivtmp.241_483, of
 2410      AC12E000 
 2410      0000
 2411              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2412              		.loc 1 785 109 discriminator 3 view .LVU757
 2413 0f23 C4417E6F 		vmovdqu	ymm10, YMMWORD PTR 224[r11+rdx]	# tmp995, MEM[base: vectp.202_332, index: ivtmp.241_483, o
 2413      9413E000 
 2413      0000
 2414              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2415              		.loc 1 785 62 discriminator 3 view .LVU758
 2416 0f2d C555D3C9 		vpsrlq	ymm9, ymm5, xmm1	# vect__49.200, tmp994, _184
 2417              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2418              		.loc 1 785 109 discriminator 3 view .LVU759
 2419 0f31 C52DF3D8 		vpsllq	ymm11, ymm10, xmm0	# vect__54.204, tmp995, _182
 2420              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2421              		.loc 1 785 80 discriminator 3 view .LVU760
 2422 0f35 C44135EB 		vpor	ymm12, ymm9, ymm11	# vect__58.205, vect__49.200, vect__54.204
 2422      E3
GAS LISTING /tmp/cc64mrzX.s 			page 70


 2423              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2424              		.loc 1 785 35 discriminator 3 view .LVU761
 2425 0f3a C4417E7F 		vmovdqu	YMMWORD PTR 224[r9+rdx], ymm12	# MEM[base: vectp.207_341, index: ivtmp.241_483, offset: 0B
 2425      A411E000 
 2425      0000
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2426              		.loc 1 784 58 is_stmt 1 discriminator 3 view .LVU762
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2427              		.loc 1 784 40 discriminator 3 view .LVU763
 2428 0f44 4881C200 		add	rdx, 256	# ivtmp.241,
 2428      010000
 2429 0f4b 4C39EA   		cmp	rdx, r13	# ivtmp.241, _485
 2430 0f4e 0F85C2FE 		jne	.L60	#,
 2430      FFFF
 2431              	.L243:
 2432 0f54 4C8B6C24 		mov	r13, QWORD PTR -24[rsp]	# loop_distance, %sfp
 2432      E8
 2433 0f59 4989DA   		mov	r10, rbx	# niters_vector_mult_vf.195, niters.193
 2434 0f5c 4983E2FC 		and	r10, -4	# niters_vector_mult_vf.195,
 2435 0f60 4C39D3   		cmp	rbx, r10	# niters.193, niters_vector_mult_vf.195
 2436 0f63 4F8D2414 		lea	r12, [r12+r10]	# tmp.196,
 2437 0f67 4A8D142E 		lea	rdx, [rsi+r13]	# source_word,
 2438 0f6b 0F840703 		je	.L255	#,
 2438      0000
 2439              	.LVL92:
 785:sieve_extend.c ****         }
 2440              		.loc 1 785 13 view .LVU764
 2441              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2442              		.loc 1 785 58 is_stmt 0 view .LVU765
 2443 0f71 4A8D1C26 		lea	rbx, [rsi+r12]	# tmp467,
 2444              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2445              		.loc 1 785 21 view .LVU766
 2446 0f75 4E8D1C21 		lea	r11, [rcx+r12]	# tmp468,
 2447              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2448              		.loc 1 785 62 view .LVU767
 2449 0f79 4C8B04DF 		mov	r8, QWORD PTR [rdi+rbx*8]	# *_386, *_386
 2450              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2451              		.loc 1 785 109 view .LVU768
 2452 0f7d C46289F7 		shlx	r9, QWORD PTR 8[rdi+rbx*8], r14	# tmp469, *_391, shift
 2452      4CDF08
 2453              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2454              		.loc 1 785 62 view .LVU769
 2455 0f84 C442FBF7 		shrx	r10, r8, rax	# tmp471, *_386, shift_flipped
 2455      D0
 2456              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2457              		.loc 1 785 80 view .LVU770
 2458 0f89 4D09D1   		or	r9, r10	# tmp473, tmp471
 2459 0f8c 4E890CDF 		mov	QWORD PTR [rdi+r11*8], r9	# *_396, tmp473
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2460              		.loc 1 784 58 is_stmt 1 view .LVU771
GAS LISTING /tmp/cc64mrzX.s 			page 71


 2461              	# sieve_extend.c:784:         for (register counter_t i = 0; i <loop_distance; i++) {
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2462              		.loc 1 784 59 is_stmt 0 view .LVU772
 2463 0f90 4D8D4C24 		lea	r9, 1[r12]	# i,
 2463      01
 2464              	.LVL93:
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2465              		.loc 1 784 40 is_stmt 1 view .LVU773
 2466              	# sieve_extend.c:784:         for (register counter_t i = 0; i <loop_distance; i++) {
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2467              		.loc 1 784 9 is_stmt 0 view .LVU774
 2468 0f95 4D39CD   		cmp	r13, r9	# loop_distance, i
 2469 0f98 0F86DA02 		jbe	.L255	#,
 2469      0000
 785:sieve_extend.c ****         }
 2470              		.loc 1 785 13 is_stmt 1 view .LVU775
 2471              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2472              		.loc 1 785 58 is_stmt 0 view .LVU776
 2473 0f9e 4A8D1C0E 		lea	rbx, [rsi+r9]	# tmp474,
 2474              	# sieve_extend.c:784:         for (register counter_t i = 0; i <loop_distance; i++) {
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2475              		.loc 1 784 59 view .LVU777
 2476 0fa2 4983C402 		add	r12, 2	# i,
 2477              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2478              		.loc 1 785 62 view .LVU778
 2479 0fa6 4C8B1CDF 		mov	r11, QWORD PTR [rdi+rbx*8]	# *_404, *_404
 2480              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2481              		.loc 1 785 21 view .LVU779
 2482 0faa 4901C9   		add	r9, rcx	# tmp475, copy_word
 2483              	.LVL94:
 2484              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2485              		.loc 1 785 109 view .LVU780
 2486 0fad C46289F7 		shlx	r8, QWORD PTR 8[rdi+rbx*8], r14	# tmp476, *_409, shift
 2486      44DF08
 2487              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2488              		.loc 1 785 62 view .LVU781
 2489 0fb4 C442FBF7 		shrx	r10, r11, rax	# tmp478, *_404, shift_flipped
 2489      D3
 2490              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2491              		.loc 1 785 80 view .LVU782
 2492 0fb9 4D09D0   		or	r8, r10	# tmp480, tmp478
 2493              	# sieve_extend.c:784:         for (register counter_t i = 0; i <loop_distance; i++) {
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2494              		.loc 1 784 9 view .LVU783
 2495 0fbc 4D39E5   		cmp	r13, r12	# loop_distance, i
 2496              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2497              		.loc 1 785 80 view .LVU784
 2498 0fbf 4E8904CF 		mov	QWORD PTR [rdi+r9*8], r8	# *_414, tmp480
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2499              		.loc 1 784 58 is_stmt 1 view .LVU785
GAS LISTING /tmp/cc64mrzX.s 			page 72


 2500              	.LVL95:
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2501              		.loc 1 784 40 view .LVU786
 2502              	# sieve_extend.c:784:         for (register counter_t i = 0; i <loop_distance; i++) {
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2503              		.loc 1 784 9 is_stmt 0 view .LVU787
 2504 0fc3 0F86AF02 		jbe	.L255	#,
 2504      0000
 785:sieve_extend.c ****         }
 2505              		.loc 1 785 13 is_stmt 1 view .LVU788
 2506              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2507              		.loc 1 785 58 is_stmt 0 view .LVU789
 2508 0fc9 4C01E6   		add	rsi, r12	# tmp481, i
 2509              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2510              		.loc 1 785 21 view .LVU790
 2511 0fcc 4901CC   		add	r12, rcx	# tmp482, copy_word
 2512              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2513              		.loc 1 785 109 view .LVU791
 2514 0fcf C4E289F7 		shlx	rcx, QWORD PTR 8[rdi+rsi*8], r14	# tmp483, *_311, shift
 2514      4CF708
 2515              	.LVL96:
 2516              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2517              		.loc 1 785 62 view .LVU792
 2518 0fd6 488B34F7 		mov	rsi, QWORD PTR [rdi+rsi*8]	# *_306, *_306
 2519 0fda C462FBF7 		shrx	r14, rsi, rax	# tmp485, *_306, shift_flipped
 2519      F6
 2520              	.LVL97:
 2521              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2522              		.loc 1 785 80 view .LVU793
 2523 0fdf 4909CE   		or	r14, rcx	# tmp487, tmp483
 2524 0fe2 4E8934E7 		mov	QWORD PTR [rdi+r12*8], r14	# *_316, tmp487
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2525              		.loc 1 784 58 is_stmt 1 view .LVU794
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2526              		.loc 1 784 40 view .LVU795
 2527 0fe6 C5F877   		vzeroupper
 2528              	.L62:
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2529              		.loc 1 784 40 is_stmt 0 view .LVU796
 2530              	.LBE320:
 787:sieve_extend.c ****     }
 2531              		.loc 1 787 9 is_stmt 1 view .LVU797
 787:sieve_extend.c ****     }
 2532              		.loc 1 787 39 view .LVU798
 2533              	.LVL98:
 787:sieve_extend.c ****     }
 2534              		.loc 1 787 39 is_stmt 0 view .LVU799
 2535              	.LBE319:
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2536              		.loc 1 790 12 is_stmt 1 view .LVU800
 2537 0fe9 488B4C24 		mov	rcx, QWORD PTR -8[rsp]	# destination_stop_word, %sfp
 2537      F8
GAS LISTING /tmp/cc64mrzX.s 			page 73


 2538 0fee 48C1E203 		sal	rdx, 3	# _260,
 2539              	.LVL99:
 2540              	.LBB322:
 2541              	# sieve_extend.c:787:         source_word += loop_distance; copy_word+= loop_distance;
 787:sieve_extend.c ****     }
 2542              		.loc 1 787 21 is_stmt 0 view .LVU801
 2543 0ff2 48C74424 		mov	QWORD PTR -32[rsp], 0	# %sfp,
 2543      E0000000 
 2543      00
 2544 0ffb 4C8D6901 		lea	r13, 1[rcx]	# _198,
 2545 0fff 4C896C24 		mov	QWORD PTR -24[rsp], r13	# %sfp, _198
 2545      E8
 2546              	.LVL100:
 2547              	.L56:
 787:sieve_extend.c ****     }
 2548              		.loc 1 787 21 view .LVU802
 2549 1004 4C8B5C24 		mov	r11, QWORD PTR -8[rsp]	# destination_stop_word, %sfp
 2549      F8
 2550 1009 4801FA   		add	rdx, rdi	# ivtmp.214, bitarray
 2551              	.LBE322:
 2552              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 791:sieve_extend.c ****     }
 2553              		.loc 1 791 99 view .LVU803
 2554 100c 440FB664 		movzx	r12d, BYTE PTR -12[rsp]	# tmp1038, %sfp
 2554      24F4
 2555 1012 C46299F7 		shlx	r14, QWORD PTR 8[rdx], r12	# tmp560, MEM[base: _465, offset: 8B], tmp1038
 2555      7208
 2556              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 791:sieve_extend.c ****     }
 2557              		.loc 1 791 54 view .LVU804
 2558 1018 440FB654 		movzx	r10d, BYTE PTR -16[rsp]	# tmp1039, %sfp
 2558      24F0
 2559              	# sieve_extend.c:790:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2560              		.loc 1 790 57 view .LVU805
 2561 101e 4C8D6101 		lea	r12, 1[rcx]	# copy_word,
 2562 1022 4D89D8   		mov	r8, r11	# tmp570, destination_stop_word
 2563              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 791:sieve_extend.c ****     }
 2564              		.loc 1 791 54 view .LVU806
 2565 1025 C4E2ABF7 		shrx	rsi, QWORD PTR [rdx], r10	# tmp562, MEM[base: _465, offset: 0B], tmp1039
 2565      32
 2566 102a 4929C8   		sub	r8, rcx	# tmp570, copy_word
 2567              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 791:sieve_extend.c ****     }
 2568              		.loc 1 791 72 view .LVU807
 2569 102d 4909F6   		or	r14, rsi	# tmp564, tmp562
 2570 1030 4C8934CF 		mov	QWORD PTR [rdi+rcx*8], r14	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 
 2571 1034 4183E007 		and	r8d, 7	# tmp571,
 2572              	.LVL101:
 791:sieve_extend.c ****     }
 2573              		.loc 1 791 9 is_stmt 1 view .LVU808
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2574              		.loc 1 790 48 view .LVU809
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2575              		.loc 1 790 12 view .LVU810
 2576              	# sieve_extend.c:790:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
GAS LISTING /tmp/cc64mrzX.s 			page 74


 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2577              		.loc 1 790 5 is_stmt 0 view .LVU811
 2578 1038 4D39E3   		cmp	r11, r12	# destination_stop_word, copy_word
 2579 103b 4C8D7208 		lea	r14, 8[rdx]	# ivtmp.214,
 2580 103f 0F8266FB 		jb	.L73	#,
 2580      FFFF
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2581              		.loc 1 790 5 view .LVU812
 2582 1045 4D85C0   		test	r8, r8	# tmp571
 2583 1048 0F844001 		je	.L249	#,
 2583      0000
 2584 104e 4983F801 		cmp	r8, 1	# tmp571,
 2585 1052 0F840601 		je	.L198	#,
 2585      0000
 2586 1058 4983F802 		cmp	r8, 2	# tmp571,
 2587 105c 0F84D800 		je	.L199	#,
 2587      0000
 2588 1062 4983F803 		cmp	r8, 3	# tmp571,
 2589 1066 0F84A900 		je	.L200	#,
 2589      0000
 2590 106c 4983F804 		cmp	r8, 4	# tmp571,
 2591 1070 747D     		je	.L201	#,
 2592 1072 4983F805 		cmp	r8, 5	# tmp571,
 2593 1076 7452     		je	.L202	#,
 2594 1078 4983F806 		cmp	r8, 6	# tmp571,
 2595 107c 7428     		je	.L203	#,
 791:sieve_extend.c ****     }
 2596              		.loc 1 791 9 is_stmt 1 view .LVU813
 2597              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 791:sieve_extend.c ****     }
 2598              		.loc 1 791 54 is_stmt 0 view .LVU814
 2599 107e 498B06   		mov	rax, QWORD PTR [r14]	# MEM[base: _465, offset: 0B], MEM[base: _465, offset: 0B]
 2600              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 791:sieve_extend.c ****     }
 2601              		.loc 1 791 99 view .LVU815
 2602 1081 440FB64C 		movzx	r9d, BYTE PTR -12[rsp]	# tmp1042, %sfp
 2602      24F4
 2603 1087 C442B1F7 		shlx	r11, QWORD PTR 8[r14], r9	# tmp777, MEM[base: _465, offset: 8B], tmp1042
 2603      5E08
 2604              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 791:sieve_extend.c ****     }
 2605              		.loc 1 791 54 view .LVU816
 2606 108d 0FB65C24 		movzx	ebx, BYTE PTR -16[rsp]	# tmp1043, %sfp
 2606      F0
 2607 1092 C462E3F7 		shrx	r8, rax, rbx	# tmp779, MEM[base: _465, offset: 0B], tmp1043
 2607      C0
 2608              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 791:sieve_extend.c ****     }
 2609              		.loc 1 791 72 view .LVU817
 2610 1097 4D09D8   		or	r8, r11	# tmp780, tmp777
 2611 109a 4C8D7210 		lea	r14, 16[rdx]	# ivtmp.214,
 2612 109e 4E8904E7 		mov	QWORD PTR [rdi+r12*8], r8	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 0
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2613              		.loc 1 790 48 is_stmt 1 view .LVU818
 2614              	# sieve_extend.c:790:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2615              		.loc 1 790 57 is_stmt 0 view .LVU819
GAS LISTING /tmp/cc64mrzX.s 			page 75


 2616 10a2 4C8D6102 		lea	r12, 2[rcx]	# copy_word,
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2617              		.loc 1 790 12 is_stmt 1 view .LVU820
 2618              	.L203:
 791:sieve_extend.c ****     }
 2619              		.loc 1 791 9 view .LVU821
 2620              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 791:sieve_extend.c ****     }
 2621              		.loc 1 791 99 is_stmt 0 view .LVU822
 2622 10a6 0FB65424 		movzx	edx, BYTE PTR -12[rsp]	# tmp1044, %sfp
 2622      F4
 2623 10ab C442E9F7 		shlx	r10, QWORD PTR 8[r14], rdx	# tmp782, MEM[base: _465, offset: 8B], tmp1044
 2623      5608
 2624              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 791:sieve_extend.c ****     }
 2625              		.loc 1 791 54 view .LVU823
 2626 10b1 0FB64C24 		movzx	ecx, BYTE PTR -16[rsp]	# tmp1045, %sfp
 2626      F0
 2627              	.LVL102:
 791:sieve_extend.c ****     }
 2628              		.loc 1 791 54 view .LVU824
 2629 10b6 C4C2F3F7 		shrx	rsi, QWORD PTR [r14], rcx	# tmp784, MEM[base: _465, offset: 0B], tmp1045
 2629      36
 2630              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 791:sieve_extend.c ****     }
 2631              		.loc 1 791 72 view .LVU825
 2632 10bb 4909F2   		or	r10, rsi	# tmp785, tmp784
 2633 10be 4983C608 		add	r14, 8	# ivtmp.214,
 2634 10c2 4E8914E7 		mov	QWORD PTR [rdi+r12*8], r10	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2635              		.loc 1 790 48 is_stmt 1 view .LVU826
 2636              	# sieve_extend.c:790:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2637              		.loc 1 790 57 is_stmt 0 view .LVU827
 2638 10c6 4983C401 		add	r12, 1	# copy_word,
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2639              		.loc 1 790 12 is_stmt 1 view .LVU828
 2640              	.L202:
 791:sieve_extend.c ****     }
 2641              		.loc 1 791 9 view .LVU829
 2642              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 791:sieve_extend.c ****     }
 2643              		.loc 1 791 99 is_stmt 0 view .LVU830
 2644 10ca 440FB64C 		movzx	r9d, BYTE PTR -12[rsp]	# tmp1046, %sfp
 2644      24F4
 2645 10d0 C442B1F7 		shlx	r11, QWORD PTR 8[r14], r9	# tmp787, MEM[base: _465, offset: 8B], tmp1046
 2645      5E08
 2646              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 791:sieve_extend.c ****     }
 2647              		.loc 1 791 54 view .LVU831
 2648 10d6 0FB64424 		movzx	eax, BYTE PTR -16[rsp]	# tmp1047, %sfp
 2648      F0
 2649 10db C4C2FBF7 		shrx	rbx, QWORD PTR [r14], rax	# tmp789, MEM[base: _465, offset: 0B], tmp1047
 2649      1E
 2650              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 791:sieve_extend.c ****     }
 2651              		.loc 1 791 72 view .LVU832
GAS LISTING /tmp/cc64mrzX.s 			page 76


 2652 10e0 4909DB   		or	r11, rbx	# tmp790, tmp789
 2653 10e3 4983C608 		add	r14, 8	# ivtmp.214,
 2654 10e7 4E891CE7 		mov	QWORD PTR [rdi+r12*8], r11	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2655              		.loc 1 790 48 is_stmt 1 view .LVU833
 2656              	# sieve_extend.c:790:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2657              		.loc 1 790 57 is_stmt 0 view .LVU834
 2658 10eb 4983C401 		add	r12, 1	# copy_word,
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2659              		.loc 1 790 12 is_stmt 1 view .LVU835
 2660              	.L201:
 791:sieve_extend.c ****     }
 2661              		.loc 1 791 9 view .LVU836
 2662              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 791:sieve_extend.c ****     }
 2663              		.loc 1 791 99 is_stmt 0 view .LVU837
 2664 10ef 440FB644 		movzx	r8d, BYTE PTR -12[rsp]	# tmp1048, %sfp
 2664      24F4
 2665 10f5 C4C2B9F7 		shlx	rdx, QWORD PTR 8[r14], r8	# tmp792, MEM[base: _465, offset: 8B], tmp1048
 2665      5608
 2666              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 791:sieve_extend.c ****     }
 2667              		.loc 1 791 54 view .LVU838
 2668 10fb 440FB654 		movzx	r10d, BYTE PTR -16[rsp]	# tmp1049, %sfp
 2668      24F0
 2669 1101 C4C2ABF7 		shrx	rcx, QWORD PTR [r14], r10	# tmp794, MEM[base: _465, offset: 0B], tmp1049
 2669      0E
 2670              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 791:sieve_extend.c ****     }
 2671              		.loc 1 791 72 view .LVU839
 2672 1106 4809CA   		or	rdx, rcx	# tmp795, tmp794
 2673 1109 4983C608 		add	r14, 8	# ivtmp.214,
 2674 110d 4A8914E7 		mov	QWORD PTR [rdi+r12*8], rdx	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2675              		.loc 1 790 48 is_stmt 1 view .LVU840
 2676              	# sieve_extend.c:790:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2677              		.loc 1 790 57 is_stmt 0 view .LVU841
 2678 1111 4983C401 		add	r12, 1	# copy_word,
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2679              		.loc 1 790 12 is_stmt 1 view .LVU842
 2680              	.L200:
 791:sieve_extend.c ****     }
 2681              		.loc 1 791 9 view .LVU843
 2682              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 791:sieve_extend.c ****     }
 2683              		.loc 1 791 99 is_stmt 0 view .LVU844
 2684 1115 0FB67424 		movzx	esi, BYTE PTR -12[rsp]	# tmp1050, %sfp
 2684      F4
 2685 111a C442C9F7 		shlx	r9, QWORD PTR 8[r14], rsi	# tmp797, MEM[base: _465, offset: 8B], tmp1050
 2685      4E08
 2686              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 791:sieve_extend.c ****     }
 2687              		.loc 1 791 54 view .LVU845
 2688 1120 440FB65C 		movzx	r11d, BYTE PTR -16[rsp]	# tmp1051, %sfp
 2688      24F0
GAS LISTING /tmp/cc64mrzX.s 			page 77


 2689 1126 C4C2A3F7 		shrx	rax, QWORD PTR [r14], r11	# tmp799, MEM[base: _465, offset: 0B], tmp1051
 2689      06
 2690              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 791:sieve_extend.c ****     }
 2691              		.loc 1 791 72 view .LVU846
 2692 112b 4909C1   		or	r9, rax	# tmp800, tmp799
 2693 112e 4983C608 		add	r14, 8	# ivtmp.214,
 2694 1132 4E890CE7 		mov	QWORD PTR [rdi+r12*8], r9	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 0
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2695              		.loc 1 790 48 is_stmt 1 view .LVU847
 2696              	# sieve_extend.c:790:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2697              		.loc 1 790 57 is_stmt 0 view .LVU848
 2698 1136 4983C401 		add	r12, 1	# copy_word,
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2699              		.loc 1 790 12 is_stmt 1 view .LVU849
 2700              	.L199:
 791:sieve_extend.c ****     }
 2701              		.loc 1 791 9 view .LVU850
 2702              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 791:sieve_extend.c ****     }
 2703              		.loc 1 791 99 is_stmt 0 view .LVU851
 2704 113a 0FB65C24 		movzx	ebx, BYTE PTR -12[rsp]	# tmp1052, %sfp
 2704      F4
 2705 113f C442E1F7 		shlx	r8, QWORD PTR 8[r14], rbx	# tmp802, MEM[base: _465, offset: 8B], tmp1052
 2705      4608
 2706              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 791:sieve_extend.c ****     }
 2707              		.loc 1 791 54 view .LVU852
 2708 1145 0FB65424 		movzx	edx, BYTE PTR -16[rsp]	# tmp1053, %sfp
 2708      F0
 2709 114a C442EBF7 		shrx	r10, QWORD PTR [r14], rdx	# tmp804, MEM[base: _465, offset: 0B], tmp1053
 2709      16
 2710              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 791:sieve_extend.c ****     }
 2711              		.loc 1 791 72 view .LVU853
 2712 114f 4D09D0   		or	r8, r10	# tmp805, tmp804
 2713 1152 4983C608 		add	r14, 8	# ivtmp.214,
 2714 1156 4E8904E7 		mov	QWORD PTR [rdi+r12*8], r8	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 0
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2715              		.loc 1 790 48 is_stmt 1 view .LVU854
 2716              	# sieve_extend.c:790:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2717              		.loc 1 790 57 is_stmt 0 view .LVU855
 2718 115a 4983C401 		add	r12, 1	# copy_word,
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2719              		.loc 1 790 12 is_stmt 1 view .LVU856
 2720              	.L198:
 791:sieve_extend.c ****     }
 2721              		.loc 1 791 9 view .LVU857
 2722              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 791:sieve_extend.c ****     }
 2723              		.loc 1 791 99 is_stmt 0 view .LVU858
 2724 115e 0FB64C24 		movzx	ecx, BYTE PTR -12[rsp]	# tmp1054, %sfp
 2724      F4
 2725 1163 C4C2F1F7 		shlx	rsi, QWORD PTR 8[r14], rcx	# tmp807, MEM[base: _465, offset: 8B], tmp1054
 2725      7608
GAS LISTING /tmp/cc64mrzX.s 			page 78


 2726              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 791:sieve_extend.c ****     }
 2727              		.loc 1 791 54 view .LVU859
 2728 1169 440FB64C 		movzx	r9d, BYTE PTR -16[rsp]	# tmp1055, %sfp
 2728      24F0
 2729 116f C442B3F7 		shrx	r11, QWORD PTR [r14], r9	# tmp809, MEM[base: _465, offset: 0B], tmp1055
 2729      1E
 2730              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 791:sieve_extend.c ****     }
 2731              		.loc 1 791 72 view .LVU860
 2732 1174 4C09DE   		or	rsi, r11	# tmp810, tmp809
 2733 1177 4983C608 		add	r14, 8	# ivtmp.214,
 2734 117b 4A8934E7 		mov	QWORD PTR [rdi+r12*8], rsi	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2735              		.loc 1 790 48 is_stmt 1 view .LVU861
 2736              	# sieve_extend.c:790:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2737              		.loc 1 790 57 is_stmt 0 view .LVU862
 2738 117f 4983C401 		add	r12, 1	# copy_word,
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2739              		.loc 1 790 12 is_stmt 1 view .LVU863
 2740              	# sieve_extend.c:790:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2741              		.loc 1 790 5 is_stmt 0 view .LVU864
 2742 1183 4C396424 		cmp	QWORD PTR -8[rsp], r12	# %sfp, copy_word
 2742      F8
 2743 1188 0F821DFA 		jb	.L73	#,
 2743      FFFF
 2744              	.L249:
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2745              		.loc 1 790 5 view .LVU865
 2746 118e 8B4424F4 		mov	eax, DWORD PTR -12[rsp]	# _182, %sfp
 2747 1192 8B5C24F0 		mov	ebx, DWORD PTR -16[rsp]	# _184, %sfp
 2748              	.L72:
 791:sieve_extend.c ****     }
 2749              		.loc 1 791 9 is_stmt 1 view .LVU866
 2750              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 791:sieve_extend.c ****     }
 2751              		.loc 1 791 54 is_stmt 0 view .LVU867
 2752 1196 C4C2E3F7 		shrx	rdx, QWORD PTR [r14], rbx	# tmp725, MEM[base: _465, offset: 0B], _184
 2752      16
 2753              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 791:sieve_extend.c ****     }
 2754              		.loc 1 791 99 view .LVU868
 2755 119b C442F9F7 		shlx	r8, QWORD PTR 8[r14], rax	# tmp723, MEM[base: _465, offset: 8B], _182
 2755      4608
 2756              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 791:sieve_extend.c ****     }
 2757              		.loc 1 791 72 view .LVU869
 2758 11a1 4909D0   		or	r8, rdx	# tmp726, tmp725
 2759 11a4 4983C640 		add	r14, 64	# ivtmp.214,
 2760 11a8 4E8904E7 		mov	QWORD PTR [rdi+r12*8], r8	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 0
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2761              		.loc 1 790 48 is_stmt 1 view .LVU870
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2762              		.loc 1 790 12 view .LVU871
 791:sieve_extend.c ****     }
GAS LISTING /tmp/cc64mrzX.s 			page 79


 2763              		.loc 1 791 9 view .LVU872
 2764              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 791:sieve_extend.c ****     }
 2765              		.loc 1 791 54 is_stmt 0 view .LVU873
 2766 11ac C4C2E3F7 		shrx	rcx, QWORD PTR -56[r14], rbx	# tmp732, MEM[base: _465, offset: 0B], _184
 2766      4EC8
 2767              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 791:sieve_extend.c ****     }
 2768              		.loc 1 791 99 view .LVU874
 2769 11b2 C442F9F7 		shlx	r10, QWORD PTR -48[r14], rax	# tmp730, MEM[base: _465, offset: 8B], _182
 2769      56D0
 2770              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 791:sieve_extend.c ****     }
 2771              		.loc 1 791 72 view .LVU875
 2772 11b8 4909CA   		or	r10, rcx	# tmp733, tmp732
 2773 11bb 4E8954E7 		mov	QWORD PTR 8[rdi+r12*8], r10	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset:
 2773      08
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2774              		.loc 1 790 48 is_stmt 1 view .LVU876
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2775              		.loc 1 790 12 view .LVU877
 791:sieve_extend.c ****     }
 2776              		.loc 1 791 9 view .LVU878
 2777              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 791:sieve_extend.c ****     }
 2778              		.loc 1 791 54 is_stmt 0 view .LVU879
 2779 11c0 C442E3F7 		shrx	r9, QWORD PTR -48[r14], rbx	# tmp739, MEM[base: _465, offset: 0B], _184
 2779      4ED0
 2780              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 791:sieve_extend.c ****     }
 2781              		.loc 1 791 99 view .LVU880
 2782 11c6 C4C2F9F7 		shlx	rsi, QWORD PTR -40[r14], rax	# tmp737, MEM[base: _465, offset: 8B], _182
 2782      76D8
 2783              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 791:sieve_extend.c ****     }
 2784              		.loc 1 791 72 view .LVU881
 2785 11cc 4C09CE   		or	rsi, r9	# tmp740, tmp739
 2786 11cf 4A8974E7 		mov	QWORD PTR 16[rdi+r12*8], rsi	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset
 2786      10
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2787              		.loc 1 790 48 is_stmt 1 view .LVU882
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2788              		.loc 1 790 12 view .LVU883
 791:sieve_extend.c ****     }
 2789              		.loc 1 791 9 view .LVU884
 2790              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 791:sieve_extend.c ****     }
 2791              		.loc 1 791 54 is_stmt 0 view .LVU885
 2792 11d4 C442E3F7 		shrx	r8, QWORD PTR -40[r14], rbx	# tmp746, MEM[base: _465, offset: 0B], _184
 2792      46D8
 2793              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 791:sieve_extend.c ****     }
 2794              		.loc 1 791 99 view .LVU886
 2795 11da C442F9F7 		shlx	r11, QWORD PTR -32[r14], rax	# tmp744, MEM[base: _465, offset: 8B], _182
 2795      5EE0
 2796              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 791:sieve_extend.c ****     }
GAS LISTING /tmp/cc64mrzX.s 			page 80


 2797              		.loc 1 791 72 view .LVU887
 2798 11e0 4D09C3   		or	r11, r8	# tmp747, tmp746
 2799 11e3 4E895CE7 		mov	QWORD PTR 24[rdi+r12*8], r11	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset
 2799      18
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2800              		.loc 1 790 48 is_stmt 1 view .LVU888
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2801              		.loc 1 790 12 view .LVU889
 791:sieve_extend.c ****     }
 2802              		.loc 1 791 9 view .LVU890
 2803              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 791:sieve_extend.c ****     }
 2804              		.loc 1 791 99 is_stmt 0 view .LVU891
 2805 11e8 C4C2F9F7 		shlx	rdx, QWORD PTR -24[r14], rax	# tmp751, MEM[base: _465, offset: 8B], _182
 2805      56E8
 2806              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 791:sieve_extend.c ****     }
 2807              		.loc 1 791 54 view .LVU892
 2808 11ee C442E3F7 		shrx	r10, QWORD PTR -32[r14], rbx	# tmp753, MEM[base: _465, offset: 0B], _184
 2808      56E0
 2809              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 791:sieve_extend.c ****     }
 2810              		.loc 1 791 72 view .LVU893
 2811 11f4 4C09D2   		or	rdx, r10	# tmp754, tmp753
 2812 11f7 4A8954E7 		mov	QWORD PTR 32[rdi+r12*8], rdx	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset
 2812      20
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2813              		.loc 1 790 48 is_stmt 1 view .LVU894
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2814              		.loc 1 790 12 view .LVU895
 791:sieve_extend.c ****     }
 2815              		.loc 1 791 9 view .LVU896
 2816              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 791:sieve_extend.c ****     }
 2817              		.loc 1 791 99 is_stmt 0 view .LVU897
 2818 11fc C4C2F9F7 		shlx	rcx, QWORD PTR -16[r14], rax	# tmp758, MEM[base: _465, offset: 8B], _182
 2818      4EF0
 2819              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 791:sieve_extend.c ****     }
 2820              		.loc 1 791 54 view .LVU898
 2821 1202 C4C2E3F7 		shrx	rsi, QWORD PTR -24[r14], rbx	# tmp760, MEM[base: _465, offset: 0B], _184
 2821      76E8
 2822              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 791:sieve_extend.c ****     }
 2823              		.loc 1 791 72 view .LVU899
 2824 1208 4809F1   		or	rcx, rsi	# tmp761, tmp760
 2825 120b 4A894CE7 		mov	QWORD PTR 40[rdi+r12*8], rcx	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset
 2825      28
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2826              		.loc 1 790 48 is_stmt 1 view .LVU900
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2827              		.loc 1 790 12 view .LVU901
 791:sieve_extend.c ****     }
 2828              		.loc 1 791 9 view .LVU902
 2829              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 791:sieve_extend.c ****     }
 2830              		.loc 1 791 99 is_stmt 0 view .LVU903
GAS LISTING /tmp/cc64mrzX.s 			page 81


 2831 1210 C442F9F7 		shlx	r11, QWORD PTR -8[r14], rax	# tmp765, MEM[base: _465, offset: 8B], _182
 2831      5EF8
 2832              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 791:sieve_extend.c ****     }
 2833              		.loc 1 791 54 view .LVU904
 2834 1216 C442E3F7 		shrx	r9, QWORD PTR -16[r14], rbx	# tmp767, MEM[base: _465, offset: 0B], _184
 2834      4EF0
 2835              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 791:sieve_extend.c ****     }
 2836              		.loc 1 791 72 view .LVU905
 2837 121c 4D09CB   		or	r11, r9	# tmp768, tmp767
 2838 121f 4E895CE7 		mov	QWORD PTR 48[rdi+r12*8], r11	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset
 2838      30
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2839              		.loc 1 790 48 is_stmt 1 view .LVU906
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2840              		.loc 1 790 12 view .LVU907
 791:sieve_extend.c ****     }
 2841              		.loc 1 791 9 view .LVU908
 2842              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 791:sieve_extend.c ****     }
 2843              		.loc 1 791 99 is_stmt 0 view .LVU909
 2844 1224 C442F9F7 		shlx	r8, QWORD PTR [r14], rax	# tmp772, MEM[base: _465, offset: 8B], _182
 2844      06
 2845              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 791:sieve_extend.c ****     }
 2846              		.loc 1 791 54 view .LVU910
 2847 1229 C4C2E3F7 		shrx	rdx, QWORD PTR -8[r14], rbx	# tmp774, MEM[base: _465, offset: 0B], _184
 2847      56F8
 2848              	# sieve_extend.c:791:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 791:sieve_extend.c ****     }
 2849              		.loc 1 791 72 view .LVU911
 2850 122f 4909D0   		or	r8, rdx	# tmp775, tmp774
 2851 1232 4E8944E7 		mov	QWORD PTR 56[rdi+r12*8], r8	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset:
 2851      38
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2852              		.loc 1 790 48 is_stmt 1 view .LVU912
 2853              	# sieve_extend.c:790:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2854              		.loc 1 790 57 is_stmt 0 view .LVU913
 2855 1237 4983C408 		add	r12, 8	# copy_word,
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2856              		.loc 1 790 12 is_stmt 1 view .LVU914
 2857              	# sieve_extend.c:790:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 790:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2858              		.loc 1 790 5 is_stmt 0 view .LVU915
 2859 123b 4C396424 		cmp	QWORD PTR -8[rsp], r12	# %sfp, copy_word
 2859      F8
 2860 1240 0F8350FF 		jnb	.L72	#,
 2860      FFFF
 2861 1246 E960F9FF 		jmp	.L73	#
 2861      FF
 2862              	.LVL103:
 2863 124b 0F1F4400 		.p2align 4,,7
 2863      00
 2864              		.p2align 3
 2865              	.L260:
GAS LISTING /tmp/cc64mrzX.s 			page 82


 765:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 2866              		.loc 1 765 9 is_stmt 1 view .LVU916
 2867              	# sieve_extend.c:765:         bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the s
 765:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 2868              		.loc 1 765 29 is_stmt 0 view .LVU917
 2869 1250 488B7C24 		mov	rdi, QWORD PTR -24[rsp]	# pretmp_178, %sfp
 2869      E8
 2870              	.LVL104:
 2871              	# sieve_extend.c:767:                                 & keepmask(copy_start) & chopmask(destination
 767:sieve_extend.c ****         return; // rapid exit for one word variant
 2872              		.loc 1 767 56 view .LVU918
 2873 1255 4D21FA   		and	r10, r15	# _189, _193
 2874 1258 4D21D1   		and	r9, r10	# tmp405, tmp404
 2875              	# sieve_extend.c:765:         bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the s
 765:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 2876              		.loc 1 765 29 view .LVU919
 2877 125b 4C09CF   		or	rdi, r9	# pretmp_178, tmp405
 2878 125e 49897D00 		mov	QWORD PTR 0[r13], rdi	# *_177, tmp406
 768:sieve_extend.c ****     }
 2879              		.loc 1 768 9 is_stmt 1 view .LVU920
 2880              	# sieve_extend.c:795: }
 2881              		.loc 1 795 1 is_stmt 0 view .LVU921
 2882 1262 488D65D8 		lea	rsp, -40[rbp]	#,
 2883 1266 5B       		pop	rbx	#
 2884 1267 415C     		pop	r12	#
 2885 1269 415D     		pop	r13	#
 2886 126b 415E     		pop	r14	#
 2887              	.LVL105:
 2888              		.loc 1 795 1 view .LVU922
 2889 126d 415F     		pop	r15	#
 2890 126f 5D       		pop	rbp	#
 2891              		.cfi_remember_state
 2892              		.cfi_def_cfa 7, 8
 2893 1270 C3       		ret	
 2894              	.LVL106:
 2895              		.p2align 4,,7
 2896 1271 0F1F8000 		.p2align 3
 2896      000000
 2897              	.L255:
 2898              		.cfi_restore_state
 2899              		.loc 1 795 1 view .LVU923
 2900 1278 C5F877   		vzeroupper
 2901 127b E969FDFF 		jmp	.L62	#
 2901      FF
 2902              	.LVL107:
 2903              		.p2align 4,,7
 2904              		.p2align 3
 2905              	.L257:
 2906              		.loc 1 795 1 view .LVU924
 2907 1280 C5F877   		vzeroupper
 2908 1283 E923F9FF 		jmp	.L73	#
 2908      FF
 2909              	.LVL108:
 2910              		.p2align 4,,7
 2911              		.p2align 3
 2912              	.L77:
 2913              	# sieve_extend.c:761:     register counter_t source_word = wordindex(source_start);
GAS LISTING /tmp/cc64mrzX.s 			page 83


 761:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 2914              		.loc 1 761 24 view .LVU925
 2915 1288 48897424 		mov	QWORD PTR -40[rsp], rsi	# %sfp, source_word
 2915      D8
 2916              	# sieve_extend.c:775:     copy_word++;
 775:sieve_extend.c **** 
 2917              		.loc 1 775 14 view .LVU926
 2918 128d 4989CC   		mov	r12, rcx	# copy_word, copy_word
 2919 1290 4C8D5601 		lea	r10, 1[rsi]	# tmp566,
 2920 1294 E9FBF5FF 		jmp	.L67	#
 2920      FF
 2921              	.LVL109:
 2922              	.L57:
 775:sieve_extend.c **** 
 2923              		.loc 1 775 14 view .LVU927
 2924 1299 488B5424 		mov	rdx, QWORD PTR -24[rsp]	# loop_distance, %sfp
 2924      E8
 2925              	.LBB323:
 2926              	.LBB321:
 2927              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2928              		.loc 1 785 35 view .LVU928
 2929 129e 4929F0   		sub	r8, rsi	# tmp490, source_word
 2930 12a1 4801F2   		add	rdx, rsi	# loop_distance, source_word
 2931 12a4 4C8D24D7 		lea	r12, [rdi+rdx*8]	# _481,
 2932 12a8 4C89E0   		mov	rax, r12	# tmp575, _481
 2933 12ab 4C29D8   		sub	rax, r11	# tmp575, ivtmp.232
 2934 12ae 4883E808 		sub	rax, 8	# tmp576,
 2935 12b2 48C1E803 		shr	rax, 3	# tmp574,
 2936 12b6 4883C001 		add	rax, 1	# tmp577,
 2937 12ba 83E007   		and	eax, 7	# tmp578,
 2938 12bd 0F842401 		je	.L250	#,
 2938      0000
 2939 12c3 4883F801 		cmp	rax, 1	# tmp578,
 2940 12c7 0F84EF00 		je	.L185	#,
 2940      0000
 2941 12cd 4883F802 		cmp	rax, 2	# tmp578,
 2942 12d1 0F84C400 		je	.L186	#,
 2942      0000
 2943 12d7 4883F803 		cmp	rax, 3	# tmp578,
 2944 12db 0F849800 		je	.L187	#,
 2944      0000
 2945 12e1 4883F804 		cmp	rax, 4	# tmp578,
 2946 12e5 7471     		je	.L188	#,
 2947 12e7 4883F805 		cmp	rax, 5	# tmp578,
 2948 12eb 7449     		je	.L189	#,
 2949 12ed 4883F806 		cmp	rax, 6	# tmp578,
 2950 12f1 7422     		je	.L190	#,
 2951              	.LVL110:
 785:sieve_extend.c ****         }
 2952              		.loc 1 785 13 is_stmt 1 view .LVU929
 2953              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2954              		.loc 1 785 62 is_stmt 0 view .LVU930
 2955 12f3 440FB64C 		movzx	r9d, BYTE PTR -16[rsp]	# tmp1057, %sfp
 2955      24F0
 2956 12f9 C442B3F7 		shrx	r13, QWORD PTR [r11], r9	# tmp812, MEM[base: _475, offset: 0B], tmp1057
GAS LISTING /tmp/cc64mrzX.s 			page 84


 2956      2B
 2957              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2958              		.loc 1 785 109 view .LVU931
 2959 12fe 0FB65C24 		movzx	ebx, BYTE PTR -12[rsp]	# tmp1058, %sfp
 2959      F4
 2960 1303 C442E1F7 		shlx	r10, QWORD PTR 8[r11], rbx	# tmp814, MEM[base: _475, offset: 8B], tmp1058
 2960      5308
 2961              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2962              		.loc 1 785 80 view .LVU932
 2963 1309 4D09D5   		or	r13, r10	# tmp815, tmp814
 2964 130c 4F896CC3 		mov	QWORD PTR 8[r11+r8*8], r13	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp815
 2964      08
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2965              		.loc 1 784 58 is_stmt 1 view .LVU933
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2966              		.loc 1 784 40 view .LVU934
 2967 1311 4983C308 		add	r11, 8	# ivtmp.232,
 2968              	.L190:
 785:sieve_extend.c ****         }
 2969              		.loc 1 785 13 view .LVU935
 2970              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2971              		.loc 1 785 62 is_stmt 0 view .LVU936
 2972 1315 0FB64C24 		movzx	ecx, BYTE PTR -16[rsp]	# tmp1059, %sfp
 2972      F0
 2973              	.LVL111:
 785:sieve_extend.c ****         }
 2974              		.loc 1 785 62 view .LVU937
 2975 131a C442F3F7 		shrx	r14, QWORD PTR [r11], rcx	# tmp817, MEM[base: _475, offset: 0B], tmp1059
 2975      33
 2976              	.LVL112:
 2977              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2978              		.loc 1 785 109 view .LVU938
 2979 131f 0FB67424 		movzx	esi, BYTE PTR -12[rsp]	# tmp1060, %sfp
 2979      F4
 2980 1324 C4C2C9F7 		shlx	rax, QWORD PTR 8[r11], rsi	# tmp819, MEM[base: _475, offset: 8B], tmp1060
 2980      4308
 2981              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2982              		.loc 1 785 80 view .LVU939
 2983 132a 4909C6   		or	r14, rax	# tmp820, tmp819
 2984 132d 4F8974C3 		mov	QWORD PTR 8[r11+r8*8], r14	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp820
 2984      08
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2985              		.loc 1 784 58 is_stmt 1 view .LVU940
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2986              		.loc 1 784 40 view .LVU941
 2987 1332 4983C308 		add	r11, 8	# ivtmp.232,
 2988              	.L189:
 785:sieve_extend.c ****         }
 2989              		.loc 1 785 13 view .LVU942
 2990              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2991              		.loc 1 785 62 is_stmt 0 view .LVU943
GAS LISTING /tmp/cc64mrzX.s 			page 85


 2992 1336 440FB64C 		movzx	r9d, BYTE PTR -16[rsp]	# tmp1061, %sfp
 2992      24F0
 2993 133c C442B3F7 		shrx	r13, QWORD PTR [r11], r9	# tmp822, MEM[base: _475, offset: 0B], tmp1061
 2993      2B
 2994              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2995              		.loc 1 785 109 view .LVU944
 2996 1341 0FB65C24 		movzx	ebx, BYTE PTR -12[rsp]	# tmp1062, %sfp
 2996      F4
 2997 1346 C442E1F7 		shlx	r10, QWORD PTR 8[r11], rbx	# tmp824, MEM[base: _475, offset: 8B], tmp1062
 2997      5308
 2998              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 2999              		.loc 1 785 80 view .LVU945
 3000 134c 4D09D5   		or	r13, r10	# tmp825, tmp824
 3001 134f 4F896CC3 		mov	QWORD PTR 8[r11+r8*8], r13	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp825
 3001      08
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3002              		.loc 1 784 58 is_stmt 1 view .LVU946
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3003              		.loc 1 784 40 view .LVU947
 3004 1354 4983C308 		add	r11, 8	# ivtmp.232,
 3005              	.L188:
 785:sieve_extend.c ****         }
 3006              		.loc 1 785 13 view .LVU948
 3007              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 3008              		.loc 1 785 62 is_stmt 0 view .LVU949
 3009 1358 0FB64C24 		movzx	ecx, BYTE PTR -16[rsp]	# tmp1063, %sfp
 3009      F0
 3010 135d C442F3F7 		shrx	r14, QWORD PTR [r11], rcx	# tmp827, MEM[base: _475, offset: 0B], tmp1063
 3010      33
 3011              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 3012              		.loc 1 785 109 view .LVU950
 3013 1362 0FB67424 		movzx	esi, BYTE PTR -12[rsp]	# tmp1064, %sfp
 3013      F4
 3014 1367 C4C2C9F7 		shlx	rax, QWORD PTR 8[r11], rsi	# tmp829, MEM[base: _475, offset: 8B], tmp1064
 3014      4308
 3015              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 3016              		.loc 1 785 80 view .LVU951
 3017 136d 4909C6   		or	r14, rax	# tmp830, tmp829
 3018 1370 4F8974C3 		mov	QWORD PTR 8[r11+r8*8], r14	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp830
 3018      08
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3019              		.loc 1 784 58 is_stmt 1 view .LVU952
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3020              		.loc 1 784 40 view .LVU953
 3021 1375 4983C308 		add	r11, 8	# ivtmp.232,
 3022              	.L187:
 785:sieve_extend.c ****         }
 3023              		.loc 1 785 13 view .LVU954
 3024              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 3025              		.loc 1 785 62 is_stmt 0 view .LVU955
 3026 1379 440FB64C 		movzx	r9d, BYTE PTR -16[rsp]	# tmp1065, %sfp
GAS LISTING /tmp/cc64mrzX.s 			page 86


 3026      24F0
 3027 137f C442B3F7 		shrx	r13, QWORD PTR [r11], r9	# tmp832, MEM[base: _475, offset: 0B], tmp1065
 3027      2B
 3028              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 3029              		.loc 1 785 109 view .LVU956
 3030 1384 0FB65C24 		movzx	ebx, BYTE PTR -12[rsp]	# tmp1066, %sfp
 3030      F4
 3031 1389 C442E1F7 		shlx	r10, QWORD PTR 8[r11], rbx	# tmp834, MEM[base: _475, offset: 8B], tmp1066
 3031      5308
 3032              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 3033              		.loc 1 785 80 view .LVU957
 3034 138f 4D09D5   		or	r13, r10	# tmp835, tmp834
 3035 1392 4F896CC3 		mov	QWORD PTR 8[r11+r8*8], r13	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp835
 3035      08
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3036              		.loc 1 784 58 is_stmt 1 view .LVU958
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3037              		.loc 1 784 40 view .LVU959
 3038 1397 4983C308 		add	r11, 8	# ivtmp.232,
 3039              	.L186:
 785:sieve_extend.c ****         }
 3040              		.loc 1 785 13 view .LVU960
 3041              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 3042              		.loc 1 785 62 is_stmt 0 view .LVU961
 3043 139b 0FB64C24 		movzx	ecx, BYTE PTR -16[rsp]	# tmp1067, %sfp
 3043      F0
 3044 13a0 C442F3F7 		shrx	r14, QWORD PTR [r11], rcx	# tmp837, MEM[base: _475, offset: 0B], tmp1067
 3044      33
 3045              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 3046              		.loc 1 785 109 view .LVU962
 3047 13a5 0FB67424 		movzx	esi, BYTE PTR -12[rsp]	# tmp1068, %sfp
 3047      F4
 3048 13aa C4C2C9F7 		shlx	rax, QWORD PTR 8[r11], rsi	# tmp839, MEM[base: _475, offset: 8B], tmp1068
 3048      4308
 3049              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 3050              		.loc 1 785 80 view .LVU963
 3051 13b0 4909C6   		or	r14, rax	# tmp840, tmp839
 3052 13b3 4F8974C3 		mov	QWORD PTR 8[r11+r8*8], r14	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp840
 3052      08
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3053              		.loc 1 784 58 is_stmt 1 view .LVU964
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3054              		.loc 1 784 40 view .LVU965
 3055 13b8 4983C308 		add	r11, 8	# ivtmp.232,
 3056              	.L185:
 785:sieve_extend.c ****         }
 3057              		.loc 1 785 13 view .LVU966
 3058              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 3059              		.loc 1 785 62 is_stmt 0 view .LVU967
 3060 13bc 440FB64C 		movzx	r9d, BYTE PTR -16[rsp]	# tmp1069, %sfp
 3060      24F0
GAS LISTING /tmp/cc64mrzX.s 			page 87


 3061 13c2 C442B3F7 		shrx	r13, QWORD PTR [r11], r9	# tmp842, MEM[base: _475, offset: 0B], tmp1069
 3061      2B
 3062              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 3063              		.loc 1 785 109 view .LVU968
 3064 13c7 0FB65C24 		movzx	ebx, BYTE PTR -12[rsp]	# tmp1070, %sfp
 3064      F4
 3065 13cc C442E1F7 		shlx	r10, QWORD PTR 8[r11], rbx	# tmp844, MEM[base: _475, offset: 8B], tmp1070
 3065      5308
 3066              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 3067              		.loc 1 785 80 view .LVU969
 3068 13d2 4D09D5   		or	r13, r10	# tmp845, tmp844
 3069 13d5 4F896CC3 		mov	QWORD PTR 8[r11+r8*8], r13	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp845
 3069      08
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3070              		.loc 1 784 58 is_stmt 1 view .LVU970
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3071              		.loc 1 784 40 view .LVU971
 3072 13da 4983C308 		add	r11, 8	# ivtmp.232,
 3073              	# sieve_extend.c:784:         for (register counter_t i = 0; i <loop_distance; i++) {
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3074              		.loc 1 784 9 is_stmt 0 view .LVU972
 3075 13de 4D39E3   		cmp	r11, r12	# ivtmp.232, _481
 3076 13e1 0F8402FC 		je	.L62	#,
 3076      FFFF
 3077              	.L250:
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3078              		.loc 1 784 9 view .LVU973
 3079 13e7 8B4C24F4 		mov	ecx, DWORD PTR -12[rsp]	# _182, %sfp
 3080 13eb 448B7424 		mov	r14d, DWORD PTR -16[rsp]	# _184, %sfp
 3080      F0
 3081              	.L64:
 785:sieve_extend.c ****         }
 3082              		.loc 1 785 13 is_stmt 1 view .LVU974
 3083              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 3084              		.loc 1 785 109 is_stmt 0 view .LVU975
 3085 13f0 C4C2F1F7 		shlx	rax, QWORD PTR 8[r11], rcx	# tmp493, MEM[base: _475, offset: 8B], _182
 3085      4308
 3086              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 3087              		.loc 1 785 62 view .LVU976
 3088 13f6 C4C28BF7 		shrx	rsi, QWORD PTR [r11], r14	# tmp491, MEM[base: _475, offset: 0B], _184
 3088      33
 3089              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 3090              		.loc 1 785 80 view .LVU977
 3091 13fb 4809C6   		or	rsi, rax	# tmp495, tmp493
 3092 13fe 4D8D6B08 		lea	r13, 8[r11]	# tmp579,
 3093 1402 4B8974C3 		mov	QWORD PTR 8[r11+r8*8], rsi	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp495
 3093      08
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3094              		.loc 1 784 58 is_stmt 1 view .LVU978
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3095              		.loc 1 784 40 view .LVU979
 785:sieve_extend.c ****         }
GAS LISTING /tmp/cc64mrzX.s 			page 88


 3096              		.loc 1 785 13 view .LVU980
 3097              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 3098              		.loc 1 785 62 is_stmt 0 view .LVU981
 3099 1407 C4428BF7 		shrx	r9, QWORD PTR 8[r11], r14	# tmp636, MEM[base: _475, offset: 0B], _184
 3099      4B08
 3100              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 3101              		.loc 1 785 109 view .LVU982
 3102 140d C4C2F1F7 		shlx	rbx, QWORD PTR 8[r13], rcx	# tmp638, MEM[base: _475, offset: 8B], _182
 3102      5D08
 3103              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 3104              		.loc 1 785 80 view .LVU983
 3105 1413 4909D9   		or	r9, rbx	# tmp639, tmp638
 3106 1416 4D8D5310 		lea	r10, 16[r11]	# ivtmp.232,
 3107 141a 4D8D6B18 		lea	r13, 24[r11]	# ivtmp.232,
 3108 141e 4F894CC3 		mov	QWORD PTR 16[r11+r8*8], r9	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp639
 3108      10
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3109              		.loc 1 784 58 is_stmt 1 view .LVU984
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3110              		.loc 1 784 40 view .LVU985
 785:sieve_extend.c ****         }
 3111              		.loc 1 785 13 view .LVU986
 3112              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 3113              		.loc 1 785 62 is_stmt 0 view .LVU987
 3114 1423 C4C28BF7 		shrx	rsi, QWORD PTR 16[r11], r14	# tmp642, MEM[base: _475, offset: 0B], _184
 3114      7310
 3115              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 3116              		.loc 1 785 109 view .LVU988
 3117 1429 C4C2F1F7 		shlx	rax, QWORD PTR 8[r10], rcx	# tmp644, MEM[base: _475, offset: 8B], _182
 3117      4208
 3118              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 3119              		.loc 1 785 80 view .LVU989
 3120 142f 4809C6   		or	rsi, rax	# tmp645, tmp644
 3121 1432 4B8974C3 		mov	QWORD PTR 24[r11+r8*8], rsi	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp645
 3121      18
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3122              		.loc 1 784 58 is_stmt 1 view .LVU990
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3123              		.loc 1 784 40 view .LVU991
 785:sieve_extend.c ****         }
 3124              		.loc 1 785 13 view .LVU992
 3125              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 3126              		.loc 1 785 62 is_stmt 0 view .LVU993
 3127 1437 C4428BF7 		shrx	r9, QWORD PTR 24[r11], r14	# tmp648, MEM[base: _475, offset: 0B], _184
 3127      4B18
 3128              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 3129              		.loc 1 785 109 view .LVU994
 3130 143d C4C2F1F7 		shlx	rbx, QWORD PTR 8[r13], rcx	# tmp650, MEM[base: _475, offset: 8B], _182
 3130      5D08
GAS LISTING /tmp/cc64mrzX.s 			page 89


 3131              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 3132              		.loc 1 785 80 view .LVU995
 3133 1443 4909D9   		or	r9, rbx	# tmp651, tmp650
 3134 1446 4D8D5320 		lea	r10, 32[r11]	# ivtmp.232,
 3135 144a 4D8D6B28 		lea	r13, 40[r11]	# ivtmp.232,
 3136 144e 4F894CC3 		mov	QWORD PTR 32[r11+r8*8], r9	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp651
 3136      20
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3137              		.loc 1 784 58 is_stmt 1 view .LVU996
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3138              		.loc 1 784 40 view .LVU997
 785:sieve_extend.c ****         }
 3139              		.loc 1 785 13 view .LVU998
 3140              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 3141              		.loc 1 785 62 is_stmt 0 view .LVU999
 3142 1453 C4C28BF7 		shrx	rsi, QWORD PTR 32[r11], r14	# tmp654, MEM[base: _475, offset: 0B], _184
 3142      7320
 3143              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 3144              		.loc 1 785 109 view .LVU1000
 3145 1459 C4C2F1F7 		shlx	rax, QWORD PTR 8[r10], rcx	# tmp656, MEM[base: _475, offset: 8B], _182
 3145      4208
 3146              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 3147              		.loc 1 785 80 view .LVU1001
 3148 145f 4809C6   		or	rsi, rax	# tmp657, tmp656
 3149 1462 4B8974C3 		mov	QWORD PTR 40[r11+r8*8], rsi	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp657
 3149      28
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3150              		.loc 1 784 58 is_stmt 1 view .LVU1002
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3151              		.loc 1 784 40 view .LVU1003
 785:sieve_extend.c ****         }
 3152              		.loc 1 785 13 view .LVU1004
 3153              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 3154              		.loc 1 785 62 is_stmt 0 view .LVU1005
 3155 1467 C4428BF7 		shrx	r9, QWORD PTR 40[r11], r14	# tmp660, MEM[base: _475, offset: 0B], _184
 3155      4B28
 3156              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 3157              		.loc 1 785 109 view .LVU1006
 3158 146d C4C2F1F7 		shlx	rbx, QWORD PTR 8[r13], rcx	# tmp662, MEM[base: _475, offset: 8B], _182
 3158      5D08
 3159              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 3160              		.loc 1 785 80 view .LVU1007
 3161 1473 4909D9   		or	r9, rbx	# tmp663, tmp662
 3162 1476 4D8D5330 		lea	r10, 48[r11]	# ivtmp.232,
 3163 147a 4D8D6B38 		lea	r13, 56[r11]	# ivtmp.232,
 3164 147e 4F894CC3 		mov	QWORD PTR 48[r11+r8*8], r9	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp663
 3164      30
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3165              		.loc 1 784 58 is_stmt 1 view .LVU1008
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
GAS LISTING /tmp/cc64mrzX.s 			page 90


 3166              		.loc 1 784 40 view .LVU1009
 785:sieve_extend.c ****         }
 3167              		.loc 1 785 13 view .LVU1010
 3168              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 3169              		.loc 1 785 62 is_stmt 0 view .LVU1011
 3170 1483 C4C28BF7 		shrx	rsi, QWORD PTR 48[r11], r14	# tmp666, MEM[base: _475, offset: 0B], _184
 3170      7330
 3171              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 3172              		.loc 1 785 109 view .LVU1012
 3173 1489 C4C2F1F7 		shlx	rax, QWORD PTR 8[r10], rcx	# tmp668, MEM[base: _475, offset: 8B], _182
 3173      4208
 3174              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 3175              		.loc 1 785 80 view .LVU1013
 3176 148f 4809C6   		or	rsi, rax	# tmp669, tmp668
 3177 1492 4B8974C3 		mov	QWORD PTR 56[r11+r8*8], rsi	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp669
 3177      38
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3178              		.loc 1 784 58 is_stmt 1 view .LVU1014
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3179              		.loc 1 784 40 view .LVU1015
 785:sieve_extend.c ****         }
 3180              		.loc 1 785 13 view .LVU1016
 3181              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 3182              		.loc 1 785 62 is_stmt 0 view .LVU1017
 3183 1497 C4428BF7 		shrx	r9, QWORD PTR 56[r11], r14	# tmp672, MEM[base: _475, offset: 0B], _184
 3183      4B38
 3184              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 3185              		.loc 1 785 109 view .LVU1018
 3186 149d C4C2F1F7 		shlx	rbx, QWORD PTR 8[r13], rcx	# tmp674, MEM[base: _475, offset: 8B], _182
 3186      5D08
 3187              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 3188              		.loc 1 785 80 view .LVU1019
 3189 14a3 4909D9   		or	r9, rbx	# tmp675, tmp674
 3190 14a6 4F894CC3 		mov	QWORD PTR 64[r11+r8*8], r9	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp675
 3190      40
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3191              		.loc 1 784 58 is_stmt 1 view .LVU1020
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3192              		.loc 1 784 40 view .LVU1021
 3193 14ab 4983C340 		add	r11, 64	# ivtmp.232,
 3194              	# sieve_extend.c:784:         for (register counter_t i = 0; i <loop_distance; i++) {
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3195              		.loc 1 784 9 is_stmt 0 view .LVU1022
 3196 14af 4D39E3   		cmp	r11, r12	# ivtmp.232, _481
 3197 14b2 0F8538FF 		jne	.L64	#,
 3197      FFFF
 3198 14b8 E92CFBFF 		jmp	.L62	#
 3198      FF
 3199              	.LVL113:
 3200              	.L262:
 785:sieve_extend.c ****         }
GAS LISTING /tmp/cc64mrzX.s 			page 91


 3201              		.loc 1 785 13 is_stmt 1 view .LVU1023
 3202              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 3203              		.loc 1 785 62 is_stmt 0 view .LVU1024
 3204 14bd C4417D6F 		vmovdqa	ymm8, YMMWORD PTR [r10]	# tmp1071, MEM[base: vectp.198_325, index: ivtmp.241_483, offset: 
 3204      02
 3205 14c2 BA200000 		mov	edx, 32	# ivtmp.241,
 3205      00
 3206              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 3207              		.loc 1 785 109 view .LVU1025
 3208 14c7 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR [r11]	# tmp1072, MEM[base: vectp.202_332, index: ivtmp.241_483, offset: 
 3208      1B
 3209              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 3210              		.loc 1 785 62 view .LVU1026
 3211 14cc C53DD3C9 		vpsrlq	ymm9, ymm8, xmm1	# vect__49.200, tmp1071, _184
 3212              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 3213              		.loc 1 785 109 view .LVU1027
 3214 14d0 C565F3D0 		vpsllq	ymm10, ymm3, xmm0	# vect__54.204, tmp1072, _182
 3215              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 3216              		.loc 1 785 80 view .LVU1028
 3217 14d4 C44135EB 		vpor	ymm11, ymm9, ymm10	# vect__58.205, vect__49.200, vect__54.204
 3217      DA
 3218              	# sieve_extend.c:785:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 785:sieve_extend.c ****         }
 3219              		.loc 1 785 35 view .LVU1029
 3220 14d9 C4417E7F 		vmovdqu	YMMWORD PTR [r9], ymm11	# MEM[base: vectp.207_341, index: ivtmp.241_483, offset: 0B], vect
 3220      19
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3221              		.loc 1 784 58 is_stmt 1 view .LVU1030
 784:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3222              		.loc 1 784 40 view .LVU1031
 3223 14de E95AF8FF 		jmp	.L184	#
 3223      FF
 3224              	.LBE321:
 3225              	.LBE323:
 3226              		.cfi_endproc
 3227              	.LFE69:
 3229 14e3 66662E0F 		.p2align 4
 3229      1F840000 
 3229      00000066 
 3229      90
 3230              		.globl	compare_tuning_result
 3232              	compare_tuning_result:
 3233              	.LVL114:
 3234              	.LFB81:
 796:sieve_extend.c **** 
 797:sieve_extend.c **** static void extendSieve_shiftright_base(bitword_t* bitarray, const counter_t source_start, const co
 798:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 799:sieve_extend.c ****    
 800:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 801:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 802:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_calc(source_start);
 803:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
GAS LISTING /tmp/cc64mrzX.s 			page 92


 804:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 805:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 806:sieve_extend.c **** 
 807:sieve_extend.c ****     if (copy_word >= destination_stop_word) { 
 808:sieve_extend.c ****         bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose da
 809:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 810:sieve_extend.c ****                                 & keepmask(copy_start) & chopmask(destination_stop);
 811:sieve_extend.c ****         return; // rapid exit for one word variant
 812:sieve_extend.c ****     }
 813:sieve_extend.c **** 
 814:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose data
 815:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 816:sieve_extend.c ****                                 & keepmask(copy_start);
 817:sieve_extend.c ****     
 818:sieve_extend.c ****     copy_word++;
 819:sieve_extend.c **** 
 820:sieve_extend.c ****     debug { printf("...start - %ju - %ju - end\n",(uintmax_t)wordindex(copy_start), (uintmax_t)dest
 821:sieve_extend.c **** 
 822:sieve_extend.c ****     for (; copy_word <= destination_stop_word; copy_word++, source_word++ ) 
 823:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 824:sieve_extend.c ****     // bitarray[copy_word] &= chopmask(destination_stop);
 825:sieve_extend.c **** 
 826:sieve_extend.c **** }
 827:sieve_extend.c **** 
 828:sieve_extend.c **** static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source_start, const counter_
 829:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 830:sieve_extend.c **** 
 831:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 832:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 833:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_calc(copy_start);
 834:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 835:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 836:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 837:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 838:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 839:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 840:sieve_extend.c **** 
 841:sieve_extend.c ****     copy_word++;
 842:sieve_extend.c ****     source_word++;
 843:sieve_extend.c **** 
 844:sieve_extend.c ****     const counter_t aligned_copy_word = min(source_word + size, destination_stop_word); // after <<
 845:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 846:sieve_extend.c ****     source_word += distance;
 847:sieve_extend.c ****     copy_word += distance;
 848:sieve_extend.c **** 
 849:sieve_extend.c ****      debug { counter_t fast_loop_stop_word = uintsafeminus(aligned_copy_word,2); printf("...start -
 850:sieve_extend.c **** 
 851:sieve_extend.c ****     #pragma ivdep
 852:sieve_extend.c ****     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 854:sieve_extend.c ****     }
 855:sieve_extend.c **** 
 856:sieve_extend.c ****     if (copy_word >= destination_stop_word) return;
 857:sieve_extend.c **** 
 858:sieve_extend.c ****     source_word = copy_word - size; // recalibrate
 859:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 860:sieve_extend.c **** 
GAS LISTING /tmp/cc64mrzX.s 			page 93


 861:sieve_extend.c ****     #pragma ivdep
 862:sieve_extend.c ****     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 863:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 864:sieve_extend.c **** 
 865:sieve_extend.c ****     #pragma ivdep
 866:sieve_extend.c ****     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 868:sieve_extend.c **** 
 869:sieve_extend.c **** 
 870:sieve_extend.c ****  }
 871:sieve_extend.c **** 
 872:sieve_extend.c **** static inline void extendSieve(bitword_t* bitarray, const counter_t source_start, const counter_t s
 873:sieve_extend.c ****     if (size < WORD_SIZE_counter)   {
 874:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 875:sieve_extend.c ****         return; // rapid exit for small sizes
 876:sieve_extend.c ****     }
 877:sieve_extend.c **** 
 878:sieve_extend.c ****     const counter_t copy_start  = source_start + size;
 879:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 880:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 881:sieve_extend.c **** 
 882:sieve_extend.c ****     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_start, size, destinatio
 883:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 884:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 885:sieve_extend.c **** }
 886:sieve_extend.c **** 
 887:sieve_extend.c **** static void sieve_block_stripe(struct sieve_state *sieve, const counter_t block_start, const counte
 888:sieve_extend.c ****     counter_t prime = prime_start;
 889:sieve_extend.c ****     counter_t start = prime * prime * 2 + prime * 2;
 890:sieve_extend.c ****     counter_t step  = prime * 2 + 1;
 891:sieve_extend.c ****     bitword_t* bitarray = sieve->bitarray;
 892:sieve_extend.c **** 
 893:sieve_extend.c ****     debug printf("Block strip for block %ju - %ju\n",(uintmax_t)block_start,(uintmax_t)block_stop);
 894:sieve_extend.c ****     
 895:sieve_extend.c ****     while (start <= block_stop) {
 896:sieve_extend.c ****         step  = prime * 2 + 1;
 897:sieve_extend.c ****         if unlikely(step > SMALLSTEP_FASTER) break;
 898:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 899:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 900:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1 );
 901:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 902:sieve_extend.c ****     }
 903:sieve_extend.c ****     
 904:sieve_extend.c ****     while (start <= block_stop) {
 905:sieve_extend.c ****         step  = prime * 2 + 1;
 906:sieve_extend.c ****         if unlikely(step > MEDIUMSTEP_FASTER) break;
 907:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 908:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 909:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1 );
 910:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 911:sieve_extend.c ****     }
 912:sieve_extend.c **** 
 913:sieve_extend.c **** //     counter_t start1 = 0; // save value
 914:sieve_extend.c **** //     counter_t step1 = 0; // save value
 915:sieve_extend.c **** //     while (start <= block_stop) {
 916:sieve_extend.c **** //         step  = prime * 2 + 1;
 917:sieve_extend.c **** //         if (step > 64) break;
GAS LISTING /tmp/cc64mrzX.s 			page 94


 918:sieve_extend.c **** //         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_star
 919:sieve_extend.c **** //         start1 = start; // save value
 920:sieve_extend.c **** //         step1 = step; // save value
 921:sieve_extend.c **** //         prime = searchBitFalse(bitarray, prime+1 );
 922:sieve_extend.c **** //         start = prime * prime * 2 + prime * 2;
 923:sieve_extend.c **** //         step  = prime * 2 + 1;
 924:sieve_extend.c **** //         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + pr
 925:sieve_extend.c **** //         if (start <= block_stop) setBitsTrue_race(bitarray, start1, start, step1, step, block_st
 926:sieve_extend.c **** // //        else                     setBitsTrue_largeSteps(bitarray, start1, step1, block_stop);
 927:sieve_extend.c **** //         prime = searchBitFalse(bitarray, prime+1 );
 928:sieve_extend.c **** //         start = prime * prime * 2 + prime * 2;
 929:sieve_extend.c **** //     }
 930:sieve_extend.c **** 
 931:sieve_extend.c ****     while (start <= block_stop) {
 932:sieve_extend.c ****         step  = prime * 2 + 1;
 933:sieve_extend.c ****         if unlikely(step > VECTORSTEP_FASTER) break;
 934:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 935:sieve_extend.c ****         setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
 936:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1 );
 937:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 938:sieve_extend.c ****     }
 939:sieve_extend.c **** 
 940:sieve_extend.c ****     while (start <= block_stop) {
 941:sieve_extend.c ****         step  = prime * 2 + 1;
 942:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 943:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 944:sieve_extend.c ****         setBitsTrue_largeRange(bitarray, start, step, block_stop);
 945:sieve_extend.c ****         prime = searchBitFalse_longRange(bitarray, prime+1 );
 946:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 947:sieve_extend.c ****     }
 948:sieve_extend.c **** 
 949:sieve_extend.c ****     while (start <= block_stop) {
 950:sieve_extend.c ****         step  = prime * 2 + 1;
 951:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 952:sieve_extend.c ****         if likely(start <= block_stop)
 953:sieve_extend.c ****             setBitsTrue_largeSteps(bitarray, start, step, block_stop);
 954:sieve_extend.c ****         prime = searchBitFalse_longRange(bitarray, prime+1 );
 955:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 956:sieve_extend.c ****     }
 957:sieve_extend.c **** }
 958:sieve_extend.c **** 
 959:sieve_extend.c **** struct block {
 960:sieve_extend.c ****     counter_t pattern_size; // size of pattern applied 
 961:sieve_extend.c ****     counter_t pattern_start; // start of pattern
 962:sieve_extend.c ****     counter_t prime; // next prime to be striped
 963:sieve_extend.c **** };
 964:sieve_extend.c **** 
 965:sieve_extend.c **** // returns prime that could not be handled:
 966:sieve_extend.c **** // start is too large
 967:sieve_extend.c **** // range is too big
 968:sieve_extend.c **** static struct block sieve_block_extend(struct sieve_state *sieve, const counter_t block_start, cons
 969:sieve_extend.c ****     register counter_t prime   = 0;
 970:sieve_extend.c ****     counter_t patternsize_bits = 1;
 971:sieve_extend.c ****     counter_t pattern_start    = 0;
 972:sieve_extend.c ****     counter_t range_stop       = block_start;
 973:sieve_extend.c ****     bitword_t* bitarray        = sieve->bitarray;
 974:sieve_extend.c ****     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 };
GAS LISTING /tmp/cc64mrzX.s 			page 95


 975:sieve_extend.c **** 
 976:sieve_extend.c ****     sieve->bitarray[0] = SAFE_ZERO; // only the first word has to be cleared; the rest is populated
 977:sieve_extend.c ****     
 978:sieve_extend.c ****     for (;range_stop < block_stop;) {
 979:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 980:sieve_extend.c ****         counter_t start = prime * prime * 2 + prime * 2;
 981:sieve_extend.c ****         if unlikely(start > block_stop) break;
 982:sieve_extend.c **** 
 983:sieve_extend.c ****         const counter_t step  = prime * 2 + 1;
 984:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 985:sieve_extend.c **** 
 986:sieve_extend.c ****         range_stop = block_start + patternsize_bits * step * 2;  // range is x2 so the second block
 987:sieve_extend.c ****         block.pattern_size = patternsize_bits;
 988:sieve_extend.c ****         block.pattern_start = pattern_start;
 989:sieve_extend.c ****         if (range_stop > block_stop) return block; //range_stop = block_stop;
 990:sieve_extend.c **** 
 991:sieve_extend.c ****         if (patternsize_bits>1) {
 992:sieve_extend.c ****             pattern_start = block_start | patternsize_bits;
 993:sieve_extend.c ****             extendSieve(bitarray, pattern_start, patternsize_bits, range_stop);
 994:sieve_extend.c ****         }
 995:sieve_extend.c ****         patternsize_bits *= step;
 996:sieve_extend.c **** 
 997:sieve_extend.c ****         if      (step < SMALLSTEP_FASTER)      setBitsTrue_smallStep (bitarray, start, (bitshift_t)
 998:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitarray, start, step, range_
 999:sieve_extend.c ****         else if (step < WORD_SIZE_counter * 4) setBitsTrue_largeRange_vector(bitarray, start, step,
1000:sieve_extend.c ****         else                                   setBitsTrue_largeRange(bitarray, start, step, range_
1001:sieve_extend.c ****         block.prime = prime;
1002:sieve_extend.c ****     } 
1003:sieve_extend.c **** 
1004:sieve_extend.c ****     return block;
1005:sieve_extend.c **** }
1006:sieve_extend.c **** 
1007:sieve_extend.c **** static struct sieve_state *sieve(const counter_t maxints, const counter_t blocksize) {
1008:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
1009:sieve_extend.c ****     counter_t prime     = 0;
1010:sieve_extend.c ****     bitword_t* bitarray = sieve->bitarray;
1011:sieve_extend.c **** 
1012:sieve_extend.c ****     debug printf("Running sieve to find all primes up to %ju with blocksize %ju\n",(uintmax_t)maxin
1013:sieve_extend.c **** 
1014:sieve_extend.c ****     // fill the whole sieve bij adding en copying incrementally
1015:sieve_extend.c ****     struct block block = sieve_block_extend(sieve, 0, sieve->bits);
1016:sieve_extend.c ****     extendSieve(bitarray, block.pattern_start, block.pattern_size, sieve->bits);
1017:sieve_extend.c ****     prime = block.prime;
1018:sieve_extend.c **** 
1019:sieve_extend.c ****     // #pragma unroll 8
1020:sieve_extend.c ****     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= sieve->bits; block_sta
1021:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
1022:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime);
1023:sieve_extend.c ****         sieve_block_stripe(sieve, block_start, block_stop, prime);
1024:sieve_extend.c ****     } 
1025:sieve_extend.c **** 
1026:sieve_extend.c ****     return sieve;
1027:sieve_extend.c **** }
1028:sieve_extend.c **** 
1029:sieve_extend.c **** static void show_primes(struct sieve_state *sieve, counter_t maxFactor) {
1030:sieve_extend.c ****     counter_t primeCount = 1;    // We already have 2
1031:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitarray, factor+
GAS LISTING /tmp/cc64mrzX.s 			page 96


1032:sieve_extend.c ****         primeCount++;
1033:sieve_extend.c ****         if (factor < maxFactor/2) {
1034:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
1035:sieve_extend.c ****             if (primeCount % 10 == 0) printf("\n");
1036:sieve_extend.c ****         }
1037:sieve_extend.c ****     }
1038:sieve_extend.c ****     printf("\nFound %ju primes until %ju\n",(uintmax_t)primeCount, (uintmax_t)sieve->bits*2+1);
1039:sieve_extend.c **** }
1040:sieve_extend.c **** 
1041:sieve_extend.c **** static counter_t count_primes(struct sieve_state *sieve) {
1042:sieve_extend.c ****     counter_t primeCount = 1;
1043:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitarray, factor+
1044:sieve_extend.c ****     return primeCount;
1045:sieve_extend.c **** }
1046:sieve_extend.c **** 
1047:sieve_extend.c **** static void deepAnalyzePrimes(struct sieve_state *sieve) {
1048:sieve_extend.c ****     printf("DeepAnalyzing\n");
1049:sieve_extend.c ****     counter_t warn_prime = 0;
1050:sieve_extend.c ****     counter_t warn_nonprime = 0;
1051:sieve_extend.c ****     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
1052:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
1053:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1054:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
1055:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
1056:sieve_extend.c ****                 }
1057:sieve_extend.c ****             }
1058:sieve_extend.c ****         }
1059:sieve_extend.c ****         else {
1060:sieve_extend.c ****             counter_t c_prime = 0;
1061:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1062:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
1063:sieve_extend.c ****             }
1064:sieve_extend.c ****             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) was marked non-prime, 
1065:sieve_extend.c ****         }
1066:sieve_extend.c ****     }
1067:sieve_extend.c **** }
1068:sieve_extend.c **** 
1069:sieve_extend.c **** 
1070:sieve_extend.c **** int validatePrimeCount(struct sieve_state *sieve, int option_verboselevel) {
1071:sieve_extend.c **** 
1072:sieve_extend.c ****     counter_t primecount = count_primes(sieve);
1073:sieve_extend.c ****     counter_t valid_primes = 0;
1074:sieve_extend.c ****     switch(sieve->size) {
1075:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
1076:sieve_extend.c ****         case 100:           valid_primes = 25;       break;
1077:sieve_extend.c ****         case 1000:          valid_primes = 168;      break;
1078:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
1079:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
1080:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
1081:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
1082:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
1083:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
1084:sieve_extend.c ****         default:            valid_primes= 0;
1085:sieve_extend.c ****     }
1086:sieve_extend.c **** 
1087:sieve_extend.c ****     int valid = (valid_primes == primecount);
1088:sieve_extend.c ****     if (valid  && option_verboselevel >= 4) printf("Result: Sievesize %ju is expected to have %ju p
GAS LISTING /tmp/cc64mrzX.s 			page 97


1089:sieve_extend.c ****     if (!valid && option_verboselevel >= 1) {
1090:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
1091:sieve_extend.c ****         if (!valid && option_verboselevel >= 2) show_primes(sieve, default_show_primes_on_error);
1092:sieve_extend.c ****     }
1093:sieve_extend.c ****     if (!valid && option_verboselevel >= 3) deepAnalyzePrimes(sieve);
1094:sieve_extend.c ****     return (valid);
1095:sieve_extend.c **** }
1096:sieve_extend.c **** 
1097:sieve_extend.c **** void usage(char *name) {
1098:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
1099:sieve_extend.c ****     fprintf(stderr, "Options:\n");
1100:sieve_extend.c ****     fprintf(stderr, "  --verbose <level>  Show more output to a certain level:\n");
1101:sieve_extend.c ****     fprintf(stderr, "                     1 - show phase progress\n");
1102:sieve_extend.c ****     fprintf(stderr, "                     2 - show general progress within the phase\n");
1103:sieve_extend.c ****     fprintf(stderr, "                     3 - show actual work\n");
1104:sieve_extend.c ****     fprintf(stderr, "  --check            check the correctness of the algorithm\n");
1105:sieve_extend.c ****     fprintf(stderr, "  --show <maximum>   Show the primes found up to the maximum\n");
1106:sieve_extend.c ****     fprintf(stderr, "  --tune  <level>    find the best settings for the current os and hardware\n"
1107:sieve_extend.c ****     fprintf(stderr, "                     1 - fast tuning\n");
1108:sieve_extend.c ****     fprintf(stderr, "                     2 - refined tuning\n");
1109:sieve_extend.c ****     fprintf(stderr, "                     3 - maximum tuning (takes long)\n");
1110:sieve_extend.c ****     exit(1);
1111:sieve_extend.c **** }
1112:sieve_extend.c **** 
1113:sieve_extend.c **** typedef struct  {
1114:sieve_extend.c ****     counter_t maxints;
1115:sieve_extend.c ****     counter_t blocksize_bits;
1116:sieve_extend.c ****     counter_t blocksize_kb;
1117:sieve_extend.c ****     counter_t free_bits;
1118:sieve_extend.c ****     counter_t smallstep_faster;
1119:sieve_extend.c ****     counter_t mediumstep_faster;
1120:sieve_extend.c ****     counter_t vectorstep_faster;
1121:sieve_extend.c ****     counter_t sample_max;
1122:sieve_extend.c ****     double    sample_duration;
1123:sieve_extend.c ****     counter_t passes;
1124:sieve_extend.c ****     double    elapsed_time;
1125:sieve_extend.c ****     double    avg;
1126:sieve_extend.c **** } tuning_result_type;
1127:sieve_extend.c **** 
1128:sieve_extend.c **** int compare_tuning_result(const void *a, const void *b) {
 3235              		.loc 1 1128 57 view -0
 3236              		.cfi_startproc
 3237              		.loc 1 1128 57 is_stmt 0 view .LVU1033
 3238 14f0 F30F1EFA 		endbr64	
1129:sieve_extend.c ****     tuning_result_type *resultA = (tuning_result_type *)a;
 3239              		.loc 1 1129 5 is_stmt 1 view .LVU1034
 3240              	.LVL115:
1130:sieve_extend.c ****     tuning_result_type *resultB = (tuning_result_type *)b;
 3241              		.loc 1 1130 5 view .LVU1035
1131:sieve_extend.c ****     return (resultB->avg > resultA->avg ? 1 : -1);
 3242              		.loc 1 1131 5 view .LVU1036
 3243              	# sieve_extend.c:1131:     return (resultB->avg > resultA->avg ? 1 : -1);
 3244              		.loc 1 1131 45 is_stmt 0 view .LVU1037
 3245 14f4 C5FB1046 		vmovsd	xmm0, QWORD PTR 88[rsi]	# MEM[(struct tuning_result_type *)b_5(D)].avg, MEM[(struct tuning_
 3245      58
 3246 14f9 31C0     		xor	eax, eax	# <retval>
 3247 14fb C5F92F47 		vcomisd	xmm0, QWORD PTR 88[rdi]	# MEM[(struct tuning_result_type *)b_5(D)].avg, MEM[(struct tuning
GAS LISTING /tmp/cc64mrzX.s 			page 98


 3247      58
 3248 1500 0F97C0   		seta	al	#, <retval>
 3249 1503 8D4400FF 		lea	eax, -1[rax+rax]	# <retval>,
 3250              	# sieve_extend.c:1132: }
1132:sieve_extend.c **** }
 3251              		.loc 1 1132 1 view .LVU1038
 3252 1507 C3       		ret	
 3253              		.cfi_endproc
 3254              	.LFE81:
 3256 1508 0F1F8400 		.p2align 4
 3256      00000000 
 3258              	setBitsTrue_largeRange_vector:
 3259              	.LVL116:
 3260              	.LFB63:
 422:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 3261              		.loc 1 422 153 is_stmt 1 view -0
 3262              		.cfi_startproc
 422:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 3263              		.loc 1 422 153 is_stmt 0 view .LVU1040
 3264 1510 55       		push	rbp	#
 3265              		.cfi_def_cfa_offset 16
 3266              		.cfi_offset 6, -16
 3267              	# sieve_extend.c:437:     counter_t range_start_atvector = vectorstart(range_start);
 437:sieve_extend.c ****     if likely((range_start_atvector + step) < range_start) { // not the first step possible in this
 3268              		.loc 1 437 15 view .LVU1041
 3269 1511 4989F3   		mov	r11, rsi	# range_start_atvector, range_start
 3270              	# sieve_extend.c:422: static void setBitsTrue_largeRange_vector(bitword_t* __restrict bitarray_word
 422:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 3271              		.loc 1 422 153 view .LVU1042
 3272 1514 4889E5   		mov	rbp, rsp	#,
 3273              		.cfi_def_cfa_register 6
 3274              	# sieve_extend.c:437:     counter_t range_start_atvector = vectorstart(range_start);
 437:sieve_extend.c ****     if likely((range_start_atvector + step) < range_start) { // not the first step possible in this
 3275              		.loc 1 437 15 view .LVU1043
 3276 1517 4530DB   		xor	r11b, r11b	# range_start_atvector
 3277              	# sieve_extend.c:422: static void setBitsTrue_largeRange_vector(bitword_t* __restrict bitarray_word
 422:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 3278              		.loc 1 422 153 view .LVU1044
 3279 151a 4157     		push	r15	#
 3280 151c 4156     		push	r14	#
 3281 151e 4155     		push	r13	#
 3282 1520 4154     		push	r12	#
 3283 1522 53       		push	rbx	#
 3284 1523 4883E4E0 		and	rsp, -32	#,
 3285 1527 488DA424 		lea	rsp, -160[rsp]	#,
 3285      60FFFFFF 
 3286              		.cfi_offset 15, -24
 3287              		.cfi_offset 14, -32
 3288              		.cfi_offset 13, -40
 3289              		.cfi_offset 12, -48
 3290              		.cfi_offset 3, -56
 3291              	# sieve_extend.c:422: static void setBitsTrue_largeRange_vector(bitword_t* __restrict bitarray_word
 422:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 3292              		.loc 1 422 153 view .LVU1045
 3293 152f 64488B04 		mov	rax, QWORD PTR fs:40	# tmp561, MEM[(<address-space-1> long unsigned int *)40B]
 3293      25280000 
 3293      00
GAS LISTING /tmp/cc64mrzX.s 			page 99


 3294 1538 48898424 		mov	QWORD PTR 152[rsp], rax	# D.6676, tmp561
 3294      98000000 
 3295 1540 31C0     		xor	eax, eax	# tmp561
 423:sieve_extend.c **** 
 3296              		.loc 1 423 5 is_stmt 1 view .LVU1046
 431:sieve_extend.c ****     
 3297              		.loc 1 431 5 view .LVU1047
 3298              	.LVL117:
 437:sieve_extend.c ****     if likely((range_start_atvector + step) < range_start) { // not the first step possible in this
 3299              		.loc 1 437 5 view .LVU1048
 438:sieve_extend.c ****         debug { printf("Range start+step %ju not at start of vector %ju\n",range_start+step, range_
 3300              		.loc 1 438 5 view .LVU1049
 3301              	# sieve_extend.c:438:     if likely((range_start_atvector + step) < range_start) { // not the first
 438:sieve_extend.c ****         debug { printf("Range start+step %ju not at start of vector %ju\n",range_start+step, range_
 3302              		.loc 1 438 8 is_stmt 0 view .LVU1050
 3303 1542 498D0413 		lea	rax, [r11+rdx]	# tmp224,
 3304 1546 4839F0   		cmp	rax, rsi	# tmp224, range_start
 3305 1549 0F83FE00 		jnb	.L267	#,
 3305      0000
 3306              	.LBB324:
 439:sieve_extend.c **** 
 3307              		.loc 1 439 9 is_stmt 1 view .LVU1051
 441:sieve_extend.c ****         if (unlikely(range_start_atvector > range_stop)) { // we should not be here; just handle wi
 3308              		.loc 1 441 9 view .LVU1052
 3309              	# sieve_extend.c:441:         range_start_atvector += VECTOR_SIZE; // find next vector
 441:sieve_extend.c ****         if (unlikely(range_start_atvector > range_stop)) { // we should not be here; just handle wi
 3310              		.loc 1 441 30 is_stmt 0 view .LVU1053
 3311 154f 4981C300 		add	r11, 256	# range_start_atvector,
 3311      010000
 3312              	.LVL118:
 442:sieve_extend.c ****             debug printf("..Marking and returning without vector\n");
 3313              		.loc 1 442 9 is_stmt 1 view .LVU1054
 3314              	# sieve_extend.c:442:         if (unlikely(range_start_atvector > range_stop)) { // we should not b
 442:sieve_extend.c ****             debug printf("..Marking and returning without vector\n");
 3315              		.loc 1 442 12 is_stmt 0 view .LVU1055
 3316 1556 4939CB   		cmp	r11, rcx	# range_start_atvector, range_stop
 3317 1559 0F87500A 		ja	.L268	#,
 3317      0000
 458:sieve_extend.c ****             register counter_t index_word = wordindex(range_start);
 3318              		.loc 1 458 16 is_stmt 1 view .LVU1056
 3319              	# sieve_extend.c:458:         for (; range_start < range_start_atvector;) {
 458:sieve_extend.c ****             register counter_t index_word = wordindex(range_start);
 3320              		.loc 1 458 9 is_stmt 0 view .LVU1057
 3321 155f 4C39DE   		cmp	rsi, r11	# range_start, range_start_atvector
 3322              	.LBB325:
 3323              	# sieve_extend.c:462:                 mask |= markmask(range_start);
 462:sieve_extend.c ****                 range_start += step;
 3324              		.loc 1 462 25 view .LVU1058
 3325 1562 41B90100 		mov	r9d, 1	# tmp232,
 3325      0000
 3326              	.LBE325:
 3327              	# sieve_extend.c:458:         for (; range_start < range_start_atvector;) {
 458:sieve_extend.c ****             register counter_t index_word = wordindex(range_start);
 3328              		.loc 1 458 9 view .LVU1059
 3329 1568 0F83DF00 		jnb	.L267	#,
 3329      0000
 3330              	.LVL119:
GAS LISTING /tmp/cc64mrzX.s 			page 100


 3331 156e 6690     		.p2align 4
 3332              		.p2align 3
 3333              	.L269:
 3334              	.LBB326:
 459:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 3335              		.loc 1 459 13 is_stmt 1 view .LVU1060
 3336              	# sieve_extend.c:459:             register counter_t index_word = wordindex(range_start);
 459:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 3337              		.loc 1 459 32 is_stmt 0 view .LVU1061
 3338 1570 4989F0   		mov	r8, rsi	# index_word, range_start
 3339              	# sieve_extend.c:460:             register bitword_t mask = SAFE_ZERO;
 460:sieve_extend.c ****             do {
 3340              		.loc 1 460 32 view .LVU1062
 3341 1573 31DB     		xor	ebx, ebx	# mask
 3342              	# sieve_extend.c:459:             register counter_t index_word = wordindex(range_start);
 459:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 3343              		.loc 1 459 32 view .LVU1063
 3344 1575 49C1E806 		shr	r8, 6	# index_word,
 3345              	.LVL120:
 460:sieve_extend.c ****             do {
 3346              		.loc 1 460 13 is_stmt 1 view .LVU1064
 3347              	.L272:
 461:sieve_extend.c ****                 mask |= markmask(range_start);
 3348              		.loc 1 461 13 discriminator 1 view .LVU1065
 462:sieve_extend.c ****                 range_start += step;
 3349              		.loc 1 462 17 discriminator 1 view .LVU1066
 3350              	# sieve_extend.c:462:                 mask |= markmask(range_start);
 462:sieve_extend.c ****                 range_start += step;
 3351              		.loc 1 462 25 is_stmt 0 discriminator 1 view .LVU1067
 3352 1579 C442C9F7 		shlx	r10, r9, rsi	# tmp231, tmp232, range_start
 3352      D1
 3353              	# sieve_extend.c:463:                 range_start += step;
 463:sieve_extend.c ****             } while (wordindex(range_start) == index_word);
 3354              		.loc 1 463 29 discriminator 1 view .LVU1068
 3355 157e 4801D6   		add	rsi, rdx	# range_start, step
 3356              	# sieve_extend.c:464:             } while (wordindex(range_start) == index_word);
 464:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3357              		.loc 1 464 22 discriminator 1 view .LVU1069
 3358 1581 4989F4   		mov	r12, rsi	# tmp233, range_start
 3359              	# sieve_extend.c:462:                 mask |= markmask(range_start);
 462:sieve_extend.c ****                 range_start += step;
 3360              		.loc 1 462 22 discriminator 1 view .LVU1070
 3361 1584 4C09D3   		or	rbx, r10	# mask, tmp231
 3362              	.LVL121:
 463:sieve_extend.c ****             } while (wordindex(range_start) == index_word);
 3363              		.loc 1 463 17 is_stmt 1 discriminator 1 view .LVU1071
 464:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3364              		.loc 1 464 21 discriminator 1 view .LVU1072
 3365              	# sieve_extend.c:464:             } while (wordindex(range_start) == index_word);
 464:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3366              		.loc 1 464 22 is_stmt 0 discriminator 1 view .LVU1073
 3367 1587 49C1EC06 		shr	r12, 6	# tmp233,
 3368              	# sieve_extend.c:464:             } while (wordindex(range_start) == index_word);
 464:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3369              		.loc 1 464 13 discriminator 1 view .LVU1074
 3370 158b 4D39C4   		cmp	r12, r8	# tmp233, index_word
 3371 158e 0F85AC00 		jne	.L440	#,
GAS LISTING /tmp/cc64mrzX.s 			page 101


 3371      0000
 461:sieve_extend.c ****                 mask |= markmask(range_start);
 3372              		.loc 1 461 13 is_stmt 1 view .LVU1075
 462:sieve_extend.c ****                 range_start += step;
 3373              		.loc 1 462 17 view .LVU1076
 3374              	# sieve_extend.c:462:                 mask |= markmask(range_start);
 462:sieve_extend.c ****                 range_start += step;
 3375              		.loc 1 462 25 is_stmt 0 view .LVU1077
 3376 1594 C442C9F7 		shlx	r13, r9, rsi	# tmp485, tmp232, range_start
 3376      E9
 3377              	# sieve_extend.c:463:                 range_start += step;
 463:sieve_extend.c ****             } while (wordindex(range_start) == index_word);
 3378              		.loc 1 463 29 view .LVU1078
 3379 1599 4801D6   		add	rsi, rdx	# range_start, step
 3380              	# sieve_extend.c:464:             } while (wordindex(range_start) == index_word);
 464:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3381              		.loc 1 464 22 view .LVU1079
 3382 159c 4989F6   		mov	r14, rsi	# tmp486, range_start
 3383              	# sieve_extend.c:462:                 mask |= markmask(range_start);
 462:sieve_extend.c ****                 range_start += step;
 3384              		.loc 1 462 22 view .LVU1080
 3385 159f 4C09EB   		or	rbx, r13	# mask, tmp485
 3386              	.LVL122:
 463:sieve_extend.c ****             } while (wordindex(range_start) == index_word);
 3387              		.loc 1 463 17 is_stmt 1 view .LVU1081
 464:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3388              		.loc 1 464 21 view .LVU1082
 3389              	# sieve_extend.c:464:             } while (wordindex(range_start) == index_word);
 464:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3390              		.loc 1 464 22 is_stmt 0 view .LVU1083
 3391 15a2 49C1EE06 		shr	r14, 6	# tmp486,
 3392              	# sieve_extend.c:464:             } while (wordindex(range_start) == index_word);
 464:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3393              		.loc 1 464 13 view .LVU1084
 3394 15a6 4D39C6   		cmp	r14, r8	# tmp486, index_word
 3395 15a9 0F859100 		jne	.L440	#,
 3395      0000
 461:sieve_extend.c ****                 mask |= markmask(range_start);
 3396              		.loc 1 461 13 is_stmt 1 view .LVU1085
 462:sieve_extend.c ****                 range_start += step;
 3397              		.loc 1 462 17 view .LVU1086
 3398              	# sieve_extend.c:462:                 mask |= markmask(range_start);
 462:sieve_extend.c ****                 range_start += step;
 3399              		.loc 1 462 25 is_stmt 0 view .LVU1087
 3400 15af C442C9F7 		shlx	r15, r9, rsi	# tmp487, tmp232, range_start
 3400      F9
 3401              	# sieve_extend.c:463:                 range_start += step;
 463:sieve_extend.c ****             } while (wordindex(range_start) == index_word);
 3402              		.loc 1 463 29 view .LVU1088
 3403 15b4 4801D6   		add	rsi, rdx	# range_start, step
 3404              	# sieve_extend.c:464:             } while (wordindex(range_start) == index_word);
 464:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3405              		.loc 1 464 22 view .LVU1089
 3406 15b7 4889F0   		mov	rax, rsi	# tmp488, range_start
 3407              	# sieve_extend.c:462:                 mask |= markmask(range_start);
 462:sieve_extend.c ****                 range_start += step;
 3408              		.loc 1 462 22 view .LVU1090
GAS LISTING /tmp/cc64mrzX.s 			page 102


 3409 15ba 4C09FB   		or	rbx, r15	# mask, tmp487
 3410              	.LVL123:
 463:sieve_extend.c ****             } while (wordindex(range_start) == index_word);
 3411              		.loc 1 463 17 is_stmt 1 view .LVU1091
 464:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3412              		.loc 1 464 21 view .LVU1092
 3413              	# sieve_extend.c:464:             } while (wordindex(range_start) == index_word);
 464:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3414              		.loc 1 464 22 is_stmt 0 view .LVU1093
 3415 15bd 48C1E806 		shr	rax, 6	# tmp488,
 3416              	# sieve_extend.c:464:             } while (wordindex(range_start) == index_word);
 464:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3417              		.loc 1 464 13 view .LVU1094
 3418 15c1 4C39C0   		cmp	rax, r8	# tmp488, index_word
 3419 15c4 757A     		jne	.L440	#,
 461:sieve_extend.c ****                 mask |= markmask(range_start);
 3420              		.loc 1 461 13 is_stmt 1 view .LVU1095
 462:sieve_extend.c ****                 range_start += step;
 3421              		.loc 1 462 17 view .LVU1096
 3422              	# sieve_extend.c:462:                 mask |= markmask(range_start);
 462:sieve_extend.c ****                 range_start += step;
 3423              		.loc 1 462 25 is_stmt 0 view .LVU1097
 3424 15c6 C442C9F7 		shlx	r10, r9, rsi	# tmp489, tmp232, range_start
 3424      D1
 3425              	# sieve_extend.c:463:                 range_start += step;
 463:sieve_extend.c ****             } while (wordindex(range_start) == index_word);
 3426              		.loc 1 463 29 view .LVU1098
 3427 15cb 4801D6   		add	rsi, rdx	# range_start, step
 3428              	# sieve_extend.c:464:             } while (wordindex(range_start) == index_word);
 464:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3429              		.loc 1 464 22 view .LVU1099
 3430 15ce 4989F4   		mov	r12, rsi	# tmp490, range_start
 3431              	# sieve_extend.c:462:                 mask |= markmask(range_start);
 462:sieve_extend.c ****                 range_start += step;
 3432              		.loc 1 462 22 view .LVU1100
 3433 15d1 4C09D3   		or	rbx, r10	# mask, tmp489
 3434              	.LVL124:
 463:sieve_extend.c ****             } while (wordindex(range_start) == index_word);
 3435              		.loc 1 463 17 is_stmt 1 view .LVU1101
 464:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3436              		.loc 1 464 21 view .LVU1102
 3437              	# sieve_extend.c:464:             } while (wordindex(range_start) == index_word);
 464:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3438              		.loc 1 464 22 is_stmt 0 view .LVU1103
 3439 15d4 49C1EC06 		shr	r12, 6	# tmp490,
 3440              	# sieve_extend.c:464:             } while (wordindex(range_start) == index_word);
 464:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3441              		.loc 1 464 13 view .LVU1104
 3442 15d8 4D39C4   		cmp	r12, r8	# tmp490, index_word
 3443 15db 7563     		jne	.L440	#,
 461:sieve_extend.c ****                 mask |= markmask(range_start);
 3444              		.loc 1 461 13 is_stmt 1 view .LVU1105
 462:sieve_extend.c ****                 range_start += step;
 3445              		.loc 1 462 17 view .LVU1106
 3446              	# sieve_extend.c:462:                 mask |= markmask(range_start);
 462:sieve_extend.c ****                 range_start += step;
 3447              		.loc 1 462 25 is_stmt 0 view .LVU1107
GAS LISTING /tmp/cc64mrzX.s 			page 103


 3448 15dd C442C9F7 		shlx	r13, r9, rsi	# tmp491, tmp232, range_start
 3448      E9
 3449              	# sieve_extend.c:463:                 range_start += step;
 463:sieve_extend.c ****             } while (wordindex(range_start) == index_word);
 3450              		.loc 1 463 29 view .LVU1108
 3451 15e2 4801D6   		add	rsi, rdx	# range_start, step
 3452              	# sieve_extend.c:464:             } while (wordindex(range_start) == index_word);
 464:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3453              		.loc 1 464 22 view .LVU1109
 3454 15e5 4989F6   		mov	r14, rsi	# tmp492, range_start
 3455              	# sieve_extend.c:462:                 mask |= markmask(range_start);
 462:sieve_extend.c ****                 range_start += step;
 3456              		.loc 1 462 22 view .LVU1110
 3457 15e8 4C09EB   		or	rbx, r13	# mask, tmp491
 3458              	.LVL125:
 463:sieve_extend.c ****             } while (wordindex(range_start) == index_word);
 3459              		.loc 1 463 17 is_stmt 1 view .LVU1111
 464:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3460              		.loc 1 464 21 view .LVU1112
 3461              	# sieve_extend.c:464:             } while (wordindex(range_start) == index_word);
 464:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3462              		.loc 1 464 22 is_stmt 0 view .LVU1113
 3463 15eb 49C1EE06 		shr	r14, 6	# tmp492,
 3464              	# sieve_extend.c:464:             } while (wordindex(range_start) == index_word);
 464:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3465              		.loc 1 464 13 view .LVU1114
 3466 15ef 4D39C6   		cmp	r14, r8	# tmp492, index_word
 3467 15f2 754C     		jne	.L440	#,
 461:sieve_extend.c ****                 mask |= markmask(range_start);
 3468              		.loc 1 461 13 is_stmt 1 view .LVU1115
 462:sieve_extend.c ****                 range_start += step;
 3469              		.loc 1 462 17 view .LVU1116
 3470              	# sieve_extend.c:462:                 mask |= markmask(range_start);
 462:sieve_extend.c ****                 range_start += step;
 3471              		.loc 1 462 25 is_stmt 0 view .LVU1117
 3472 15f4 C442C9F7 		shlx	r15, r9, rsi	# tmp493, tmp232, range_start
 3472      F9
 3473              	# sieve_extend.c:463:                 range_start += step;
 463:sieve_extend.c ****             } while (wordindex(range_start) == index_word);
 3474              		.loc 1 463 29 view .LVU1118
 3475 15f9 4801D6   		add	rsi, rdx	# range_start, step
 3476              	# sieve_extend.c:464:             } while (wordindex(range_start) == index_word);
 464:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3477              		.loc 1 464 22 view .LVU1119
 3478 15fc 4889F0   		mov	rax, rsi	# tmp494, range_start
 3479              	# sieve_extend.c:462:                 mask |= markmask(range_start);
 462:sieve_extend.c ****                 range_start += step;
 3480              		.loc 1 462 22 view .LVU1120
 3481 15ff 4C09FB   		or	rbx, r15	# mask, tmp493
 3482              	.LVL126:
 463:sieve_extend.c ****             } while (wordindex(range_start) == index_word);
 3483              		.loc 1 463 17 is_stmt 1 view .LVU1121
 464:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3484              		.loc 1 464 21 view .LVU1122
 3485              	# sieve_extend.c:464:             } while (wordindex(range_start) == index_word);
 464:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3486              		.loc 1 464 22 is_stmt 0 view .LVU1123
GAS LISTING /tmp/cc64mrzX.s 			page 104


 3487 1602 48C1E806 		shr	rax, 6	# tmp494,
 3488              	# sieve_extend.c:464:             } while (wordindex(range_start) == index_word);
 464:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3489              		.loc 1 464 13 view .LVU1124
 3490 1606 4C39C0   		cmp	rax, r8	# tmp494, index_word
 3491 1609 7535     		jne	.L440	#,
 461:sieve_extend.c ****                 mask |= markmask(range_start);
 3492              		.loc 1 461 13 is_stmt 1 view .LVU1125
 462:sieve_extend.c ****                 range_start += step;
 3493              		.loc 1 462 17 view .LVU1126
 3494              	# sieve_extend.c:462:                 mask |= markmask(range_start);
 462:sieve_extend.c ****                 range_start += step;
 3495              		.loc 1 462 25 is_stmt 0 view .LVU1127
 3496 160b C442C9F7 		shlx	r10, r9, rsi	# tmp495, tmp232, range_start
 3496      D1
 3497              	# sieve_extend.c:463:                 range_start += step;
 463:sieve_extend.c ****             } while (wordindex(range_start) == index_word);
 3498              		.loc 1 463 29 view .LVU1128
 3499 1610 4801D6   		add	rsi, rdx	# range_start, step
 3500              	# sieve_extend.c:464:             } while (wordindex(range_start) == index_word);
 464:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3501              		.loc 1 464 22 view .LVU1129
 3502 1613 4989F4   		mov	r12, rsi	# tmp496, range_start
 3503              	# sieve_extend.c:462:                 mask |= markmask(range_start);
 462:sieve_extend.c ****                 range_start += step;
 3504              		.loc 1 462 22 view .LVU1130
 3505 1616 4C09D3   		or	rbx, r10	# mask, tmp495
 3506              	.LVL127:
 463:sieve_extend.c ****             } while (wordindex(range_start) == index_word);
 3507              		.loc 1 463 17 is_stmt 1 view .LVU1131
 464:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3508              		.loc 1 464 21 view .LVU1132
 3509              	# sieve_extend.c:464:             } while (wordindex(range_start) == index_word);
 464:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3510              		.loc 1 464 22 is_stmt 0 view .LVU1133
 3511 1619 49C1EC06 		shr	r12, 6	# tmp496,
 3512              	# sieve_extend.c:464:             } while (wordindex(range_start) == index_word);
 464:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3513              		.loc 1 464 13 view .LVU1134
 3514 161d 4D39C4   		cmp	r12, r8	# tmp496, index_word
 3515 1620 751E     		jne	.L440	#,
 461:sieve_extend.c ****                 mask |= markmask(range_start);
 3516              		.loc 1 461 13 is_stmt 1 view .LVU1135
 462:sieve_extend.c ****                 range_start += step;
 3517              		.loc 1 462 17 view .LVU1136
 3518              	# sieve_extend.c:462:                 mask |= markmask(range_start);
 462:sieve_extend.c ****                 range_start += step;
 3519              		.loc 1 462 25 is_stmt 0 view .LVU1137
 3520 1622 C442C9F7 		shlx	r13, r9, rsi	# tmp497, tmp232, range_start
 3520      E9
 3521              	# sieve_extend.c:463:                 range_start += step;
 463:sieve_extend.c ****             } while (wordindex(range_start) == index_word);
 3522              		.loc 1 463 29 view .LVU1138
 3523 1627 4801D6   		add	rsi, rdx	# range_start, step
 3524              	# sieve_extend.c:464:             } while (wordindex(range_start) == index_word);
 464:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3525              		.loc 1 464 22 view .LVU1139
GAS LISTING /tmp/cc64mrzX.s 			page 105


 3526 162a 4989F6   		mov	r14, rsi	# tmp498, range_start
 3527              	# sieve_extend.c:462:                 mask |= markmask(range_start);
 462:sieve_extend.c ****                 range_start += step;
 3528              		.loc 1 462 22 view .LVU1140
 3529 162d 4C09EB   		or	rbx, r13	# mask, tmp497
 3530              	.LVL128:
 463:sieve_extend.c ****             } while (wordindex(range_start) == index_word);
 3531              		.loc 1 463 17 is_stmt 1 view .LVU1141
 464:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3532              		.loc 1 464 21 view .LVU1142
 3533              	# sieve_extend.c:464:             } while (wordindex(range_start) == index_word);
 464:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3534              		.loc 1 464 22 is_stmt 0 view .LVU1143
 3535 1630 49C1EE06 		shr	r14, 6	# tmp498,
 3536              	# sieve_extend.c:464:             } while (wordindex(range_start) == index_word);
 464:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3537              		.loc 1 464 13 view .LVU1144
 3538 1634 4D39C6   		cmp	r14, r8	# tmp498, index_word
 3539 1637 0F843CFF 		je	.L272	#,
 3539      FFFF
 3540 163d 0F1F00   		.p2align 4
 3541              		.p2align 3
 3542              	.L440:
 465:sieve_extend.c ****         }
 3543              		.loc 1 465 13 is_stmt 1 view .LVU1145
 3544              	# sieve_extend.c:465:             bitarray_word[index_word] |= mask;
 465:sieve_extend.c ****         }
 3545              		.loc 1 465 39 is_stmt 0 view .LVU1146
 3546 1640 4A091CC7 		or	QWORD PTR [rdi+r8*8], rbx	# *_26, mask
 465:sieve_extend.c ****         }
 3547              		.loc 1 465 39 view .LVU1147
 3548              	.LBE326:
 458:sieve_extend.c ****             register counter_t index_word = wordindex(range_start);
 3549              		.loc 1 458 16 is_stmt 1 view .LVU1148
 3550              	# sieve_extend.c:458:         for (; range_start < range_start_atvector;) {
 458:sieve_extend.c ****             register counter_t index_word = wordindex(range_start);
 3551              		.loc 1 458 9 is_stmt 0 view .LVU1149
 3552 1644 4939F3   		cmp	r11, rsi	# range_start_atvector, range_start
 3553 1647 0F8723FF 		ja	.L269	#,
 3553      FFFF
 3554              	.LVL129:
 3555              	.L267:
 458:sieve_extend.c ****             register counter_t index_word = wordindex(range_start);
 3556              		.loc 1 458 9 view .LVU1150
 3557              	.LBE324:
 470:sieve_extend.c ****     
 3558              		.loc 1 470 5 is_stmt 1 view .LVU1151
 3559              	# sieve_extend.c:470:     const counter_t range_stop_unique =  min(range_start + VECTOR_SIZE_counte
 470:sieve_extend.c ****     
 3560              		.loc 1 470 42 is_stmt 0 view .LVU1152
 3561 164d 4989D3   		mov	r11, rdx	# tmp235, step
 3562              	.LVL130:
 3563              	# sieve_extend.c:474:     const counter_t step_4 = step * 4;
 474:sieve_extend.c **** 
 3564              		.loc 1 474 21 view .LVU1153
 3565 1650 4C8D2495 		lea	r12, 0[0+rdx*4]	# step_4,
 3565      00000000 
GAS LISTING /tmp/cc64mrzX.s 			page 106


 3566              	# sieve_extend.c:470:     const counter_t range_stop_unique =  min(range_start + VECTOR_SIZE_counte
 470:sieve_extend.c ****     
 3567              		.loc 1 470 42 view .LVU1154
 3568 1658 49C1E308 		sal	r11, 8	# tmp235,
 3569 165c 4901F3   		add	r11, rsi	# tmp236, range_start
 3570              	# sieve_extend.c:470:     const counter_t range_stop_unique =  min(range_start + VECTOR_SIZE_counte
 470:sieve_extend.c ****     
 3571              		.loc 1 470 21 view .LVU1155
 3572 165f 4939CB   		cmp	r11, rcx	# tmp236, range_stop
 3573 1662 4C0F47D9 		cmova	r11, rcx	# tmp236,, tmp236, range_stop
 3574 1666 4C895C24 		mov	QWORD PTR 88[rsp], r11	# %sfp, range_stop_unique
 3574      58
 3575              	.LVL131:
 472:sieve_extend.c ****     const counter_t step_3 = step * 3;
 3576              		.loc 1 472 5 is_stmt 1 view .LVU1156
 473:sieve_extend.c ****     const counter_t step_4 = step * 4;
 3577              		.loc 1 473 5 view .LVU1157
 474:sieve_extend.c **** 
 3578              		.loc 1 474 5 view .LVU1158
 477:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 3579              		.loc 1 477 5 view .LVU1159
 3580              	.LBB328:
 477:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 3581              		.loc 1 477 10 view .LVU1160
 477:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 3582              		.loc 1 477 41 view .LVU1161
 3583              	# sieve_extend.c:477:     for (counter_t index = range_start; index < range_stop_unique;) {
 477:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 3584              		.loc 1 477 5 is_stmt 0 view .LVU1162
 3585 166b 4C39DE   		cmp	rsi, r11	# range_start, range_stop_unique
 3586 166e 0F83CF04 		jnb	.L266	#,
 3586      0000
 3587              	.LBB329:
 3588              	# sieve_extend.c:492:         const counter_t range_stop_vector = vectorindex(range_stop);
 492:sieve_extend.c ****         
 3589              		.loc 1 492 25 view .LVU1163
 3590 1674 4989C8   		mov	r8, rcx	# range_stop_vector, range_stop
 3591              	# sieve_extend.c:485:             quadmask[word] |= markmask(index);
 485:sieve_extend.c ****             index += step;
 3592              		.loc 1 485 31 view .LVU1164
 3593 1677 41BA0100 		mov	r10d, 1	# tmp266,
 3593      0000
 3594              	.LBB330:
 3595              	# sieve_extend.c:520:             counter_t range_stop_word = wordindex(range_stop);
 520:sieve_extend.c ****             if (index_word <= range_stop_word) {
 3596              		.loc 1 520 23 view .LVU1165
 3597 167d 48C1E906 		shr	rcx, 6	# range_stop,
 3598              	.LVL132:
 520:sieve_extend.c ****             if (index_word <= range_stop_word) {
 3599              		.loc 1 520 23 view .LVU1166
 3600              	.LBE330:
 3601              	# sieve_extend.c:492:         const counter_t range_stop_vector = vectorindex(range_stop);
 492:sieve_extend.c ****         
 3602              		.loc 1 492 25 view .LVU1167
 3603 1681 49C1E808 		shr	r8, 8	# range_stop_vector,
 3604              	.LVL133:
 492:sieve_extend.c ****         
GAS LISTING /tmp/cc64mrzX.s 			page 107


 3605              		.loc 1 492 25 view .LVU1168
 3606 1685 4883FA01 		cmp	rdx, 1	# step,
 3607              	# sieve_extend.c:479:         register bitvector_t quadmask = { };
 479:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 3608              		.loc 1 479 30 view .LVU1169
 3609 1689 C5E9EFD2 		vpxor	xmm2, xmm2, xmm2	# tmp262
 3610 168d 4889CB   		mov	rbx, rcx	# range_stop_word, range_stop
 3611              	.LBB331:
 3612              	# sieve_extend.c:520:             counter_t range_stop_word = wordindex(range_stop);
 520:sieve_extend.c ****             if (index_word <= range_stop_word) {
 3613              		.loc 1 520 23 view .LVU1170
 3614 1690 48894C24 		mov	QWORD PTR 80[rsp], rcx	# %sfp, range_stop
 3614      50
 3615 1695 0F851A05 		jne	.L460	#,
 3615      0000
 3616              	.LVL134:
 3617 169b 0F1F4400 		.p2align 4
 3617      00
 3618              		.p2align 3
 3619              	.L273:
 520:sieve_extend.c ****             if (index_word <= range_stop_word) {
 3620              		.loc 1 520 23 view .LVU1171
 3621              	.LBE331:
 478:sieve_extend.c ****         register bitvector_t quadmask = { };
 3622              		.loc 1 478 9 is_stmt 1 view .LVU1172
 3623              	# sieve_extend.c:478:         const counter_t current_vector_start_word =  vectorindex(index) << (S
 478:sieve_extend.c ****         register bitvector_t quadmask = { };
 3624              		.loc 1 478 54 is_stmt 0 view .LVU1173
 3625 16a0 4889F2   		mov	rdx, rsi	# ivtmp.267, range_start
 3626              	# sieve_extend.c:480:         register counter_t word = wordindex(index) - current_vector_start_wor
 480:sieve_extend.c ****         
 3627              		.loc 1 480 35 view .LVU1174
 3628 16a3 4989F1   		mov	r9, rsi	# tmp263, range_start
 3629              	# sieve_extend.c:478:         const counter_t current_vector_start_word =  vectorindex(index) << (S
 478:sieve_extend.c ****         register bitvector_t quadmask = { };
 3630              		.loc 1 478 54 view .LVU1175
 3631 16a6 48C1EA08 		shr	rdx, 8	# ivtmp.267,
 3632              	# sieve_extend.c:480:         register counter_t word = wordindex(index) - current_vector_start_wor
 480:sieve_extend.c ****         
 3633              		.loc 1 480 35 view .LVU1176
 3634 16aa 49C1E906 		shr	r9, 6	# tmp263,
 3635              	# sieve_extend.c:478:         const counter_t current_vector_start_word =  vectorindex(index) << (S
 478:sieve_extend.c ****         register bitvector_t quadmask = { };
 3636              		.loc 1 478 25 view .LVU1177
 3637 16ae 4C8D3495 		lea	r14, 0[0+rdx*4]	# current_vector_start_word,
 3637      00000000 
 3638              	.LVL135:
 479:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 3639              		.loc 1 479 9 is_stmt 1 view .LVU1178
 3640              	# sieve_extend.c:479:         register bitvector_t quadmask = { };
 479:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 3641              		.loc 1 479 30 is_stmt 0 view .LVU1179
 3642 16b6 C5FD7F54 		vmovdqa	YMMWORD PTR 96[rsp], ymm2	# quadmask, tmp262
 3642      2460
 480:sieve_extend.c ****         
 3643              		.loc 1 480 9 is_stmt 1 view .LVU1180
 3644              	# sieve_extend.c:480:         register counter_t word = wordindex(index) - current_vector_start_wor
GAS LISTING /tmp/cc64mrzX.s 			page 108


 480:sieve_extend.c ****         
 3645              		.loc 1 480 28 is_stmt 0 view .LVU1181
 3646 16bc 4D29F1   		sub	r9, r14	# word, current_vector_start_word
 3647              	.LVL136:
 3648              	.L285:
 484:sieve_extend.c ****             quadmask[word] |= markmask(index);
 3649              		.loc 1 484 9 is_stmt 1 view .LVU1182
 485:sieve_extend.c ****             index += step;
 3650              		.loc 1 485 13 view .LVU1183
 3651              	# sieve_extend.c:485:             quadmask[word] |= markmask(index);
 485:sieve_extend.c ****             index += step;
 3652              		.loc 1 485 31 is_stmt 0 view .LVU1184
 3653 16bf C442C9F7 		shlx	r12, r10, rsi	# tmp265, tmp266, range_start
 3653      E2
 3654              	# sieve_extend.c:485:             quadmask[word] |= markmask(index);
 485:sieve_extend.c ****             index += step;
 3655              		.loc 1 485 28 view .LVU1185
 3656 16c4 4E0964CC 		or	QWORD PTR 96[rsp+r9*8], r12	# quadmask, tmp265
 3656      60
 486:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3657              		.loc 1 486 13 is_stmt 1 view .LVU1186
 3658              	# sieve_extend.c:486:             index += step;
 486:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3659              		.loc 1 486 19 is_stmt 0 view .LVU1187
 3660 16c9 4C8D4E01 		lea	r9, 1[rsi]	# tmp306,
 3661              	.LVL137:
 3662              	# sieve_extend.c:487:             word = wordindex(index) - current_vector_start_word;
 487:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3663              		.loc 1 487 20 view .LVU1188
 3664 16cd 4C89C9   		mov	rcx, r9	# tmp267, range_start
 3665              	# sieve_extend.c:486:             index += step;
 486:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3666              		.loc 1 486 19 view .LVU1189
 3667 16d0 4C89CE   		mov	rsi, r9	# range_start, tmp306
 487:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3668              		.loc 1 487 13 is_stmt 1 view .LVU1190
 3669              	# sieve_extend.c:487:             word = wordindex(index) - current_vector_start_word;
 487:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3670              		.loc 1 487 20 is_stmt 0 view .LVU1191
 3671 16d3 48C1E906 		shr	rcx, 6	# tmp267,
 3672              	# sieve_extend.c:487:             word = wordindex(index) - current_vector_start_word;
 487:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3673              		.loc 1 487 18 view .LVU1192
 3674 16d7 4C29F1   		sub	rcx, r14	# word, current_vector_start_word
 488:sieve_extend.c ****         
 3675              		.loc 1 488 17 is_stmt 1 view .LVU1193
 3676              	# sieve_extend.c:488:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 488:sieve_extend.c ****         
 3677              		.loc 1 488 9 is_stmt 0 view .LVU1194
 3678 16da 4883F903 		cmp	rcx, 3	# word,
 3679 16de 0F87EC00 		ja	.L438	#,
 3679      0000
 484:sieve_extend.c ****             quadmask[word] |= markmask(index);
 3680              		.loc 1 484 9 is_stmt 1 view .LVU1195
 485:sieve_extend.c ****             index += step;
 3681              		.loc 1 485 13 view .LVU1196
 3682              	# sieve_extend.c:486:             index += step;
GAS LISTING /tmp/cc64mrzX.s 			page 109


 486:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3683              		.loc 1 486 19 is_stmt 0 view .LVU1197
 3684 16e4 4883C601 		add	rsi, 1	# range_start,
 3685              	# sieve_extend.c:485:             quadmask[word] |= markmask(index);
 485:sieve_extend.c ****             index += step;
 3686              		.loc 1 485 31 view .LVU1198
 3687 16e8 C4C2B1F7 		shlx	rax, r10, r9	# tmp416, tmp266, range_start
 3687      C2
 3688              	# sieve_extend.c:487:             word = wordindex(index) - current_vector_start_word;
 487:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3689              		.loc 1 487 20 view .LVU1199
 3690 16ed 4989F7   		mov	r15, rsi	# tmp417, range_start
 3691              	# sieve_extend.c:485:             quadmask[word] |= markmask(index);
 485:sieve_extend.c ****             index += step;
 3692              		.loc 1 485 28 view .LVU1200
 3693 16f0 480944CC 		or	QWORD PTR 96[rsp+rcx*8], rax	# quadmask, tmp416
 3693      60
 486:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3694              		.loc 1 486 13 is_stmt 1 view .LVU1201
 3695              	.LVL138:
 487:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3696              		.loc 1 487 13 view .LVU1202
 3697              	# sieve_extend.c:487:             word = wordindex(index) - current_vector_start_word;
 487:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3698              		.loc 1 487 20 is_stmt 0 view .LVU1203
 3699 16f5 49C1EF06 		shr	r15, 6	# tmp417,
 3700              	# sieve_extend.c:487:             word = wordindex(index) - current_vector_start_word;
 487:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3701              		.loc 1 487 18 view .LVU1204
 3702 16f9 4D29F7   		sub	r15, r14	# word, current_vector_start_word
 488:sieve_extend.c ****         
 3703              		.loc 1 488 17 is_stmt 1 view .LVU1205
 3704              	# sieve_extend.c:488:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 488:sieve_extend.c ****         
 3705              		.loc 1 488 9 is_stmt 0 view .LVU1206
 3706 16fc 4983FF03 		cmp	r15, 3	# word,
 3707 1700 0F87CA00 		ja	.L438	#,
 3707      0000
 484:sieve_extend.c ****             quadmask[word] |= markmask(index);
 3708              		.loc 1 484 9 is_stmt 1 view .LVU1207
 485:sieve_extend.c ****             index += step;
 3709              		.loc 1 485 13 view .LVU1208
 3710              	# sieve_extend.c:485:             quadmask[word] |= markmask(index);
 485:sieve_extend.c ****             index += step;
 3711              		.loc 1 485 31 is_stmt 0 view .LVU1209
 3712 1706 C4C2C9F7 		shlx	rsi, r10, rsi	# tmp419, tmp266, range_start
 3712      F2
 3713              	.LVL139:
 3714              	# sieve_extend.c:485:             quadmask[word] |= markmask(index);
 485:sieve_extend.c ****             index += step;
 3715              		.loc 1 485 28 view .LVU1210
 3716 170b 4A0974FC 		or	QWORD PTR 96[rsp+r15*8], rsi	# quadmask, tmp419
 3716      60
 486:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3717              		.loc 1 486 13 is_stmt 1 view .LVU1211
 3718              	.LVL140:
 3719              	# sieve_extend.c:486:             index += step;
GAS LISTING /tmp/cc64mrzX.s 			page 110


 486:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3720              		.loc 1 486 19 is_stmt 0 view .LVU1212
 3721 1710 498D7102 		lea	rsi, 2[r9]	# range_start,
 3722              	.LVL141:
 487:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3723              		.loc 1 487 13 is_stmt 1 view .LVU1213
 3724              	# sieve_extend.c:487:             word = wordindex(index) - current_vector_start_word;
 487:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3725              		.loc 1 487 20 is_stmt 0 view .LVU1214
 3726 1714 4989F5   		mov	r13, rsi	# tmp420, range_start
 3727 1717 49C1ED06 		shr	r13, 6	# tmp420,
 3728              	# sieve_extend.c:487:             word = wordindex(index) - current_vector_start_word;
 487:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3729              		.loc 1 487 18 view .LVU1215
 3730 171b 4D29F5   		sub	r13, r14	# word, current_vector_start_word
 488:sieve_extend.c ****         
 3731              		.loc 1 488 17 is_stmt 1 view .LVU1216
 3732              	# sieve_extend.c:488:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 488:sieve_extend.c ****         
 3733              		.loc 1 488 9 is_stmt 0 view .LVU1217
 3734 171e 4983FD03 		cmp	r13, 3	# word,
 3735 1722 0F87A800 		ja	.L438	#,
 3735      0000
 484:sieve_extend.c ****             quadmask[word] |= markmask(index);
 3736              		.loc 1 484 9 is_stmt 1 view .LVU1218
 485:sieve_extend.c ****             index += step;
 3737              		.loc 1 485 13 view .LVU1219
 3738              	# sieve_extend.c:485:             quadmask[word] |= markmask(index);
 485:sieve_extend.c ****             index += step;
 3739              		.loc 1 485 31 is_stmt 0 view .LVU1220
 3740 1728 C442C9F7 		shlx	r12, r10, rsi	# tmp422, tmp266, range_start
 3740      E2
 3741              	# sieve_extend.c:486:             index += step;
 486:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3742              		.loc 1 486 19 view .LVU1221
 3743 172d 498D7103 		lea	rsi, 3[r9]	# range_start,
 3744              	.LVL142:
 3745              	# sieve_extend.c:487:             word = wordindex(index) - current_vector_start_word;
 487:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3746              		.loc 1 487 20 view .LVU1222
 3747 1731 4889F1   		mov	rcx, rsi	# tmp423, range_start
 3748              	# sieve_extend.c:485:             quadmask[word] |= markmask(index);
 485:sieve_extend.c ****             index += step;
 3749              		.loc 1 485 28 view .LVU1223
 3750 1734 4E0964EC 		or	QWORD PTR 96[rsp+r13*8], r12	# quadmask, tmp422
 3750      60
 486:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3751              		.loc 1 486 13 is_stmt 1 view .LVU1224
 3752              	.LVL143:
 487:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3753              		.loc 1 487 13 view .LVU1225
 3754              	# sieve_extend.c:487:             word = wordindex(index) - current_vector_start_word;
 487:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3755              		.loc 1 487 20 is_stmt 0 view .LVU1226
 3756 1739 48C1E906 		shr	rcx, 6	# tmp423,
 3757              	.LVL144:
 3758              	# sieve_extend.c:487:             word = wordindex(index) - current_vector_start_word;
GAS LISTING /tmp/cc64mrzX.s 			page 111


 487:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3759              		.loc 1 487 18 view .LVU1227
 3760 173d 4C29F1   		sub	rcx, r14	# word, current_vector_start_word
 488:sieve_extend.c ****         
 3761              		.loc 1 488 17 is_stmt 1 view .LVU1228
 3762              	# sieve_extend.c:488:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 488:sieve_extend.c ****         
 3763              		.loc 1 488 9 is_stmt 0 view .LVU1229
 3764 1740 4883F903 		cmp	rcx, 3	# word,
 3765 1744 0F878600 		ja	.L438	#,
 3765      0000
 484:sieve_extend.c ****             quadmask[word] |= markmask(index);
 3766              		.loc 1 484 9 is_stmt 1 view .LVU1230
 485:sieve_extend.c ****             index += step;
 3767              		.loc 1 485 13 view .LVU1231
 3768              	# sieve_extend.c:485:             quadmask[word] |= markmask(index);
 485:sieve_extend.c ****             index += step;
 3769              		.loc 1 485 31 is_stmt 0 view .LVU1232
 3770 174a C4C2C9F7 		shlx	rax, r10, rsi	# tmp425, tmp266, range_start
 3770      C2
 3771              	# sieve_extend.c:486:             index += step;
 486:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3772              		.loc 1 486 19 view .LVU1233
 3773 174f 498D7104 		lea	rsi, 4[r9]	# range_start,
 3774              	.LVL145:
 3775              	# sieve_extend.c:487:             word = wordindex(index) - current_vector_start_word;
 487:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3776              		.loc 1 487 20 view .LVU1234
 3777 1753 4989F7   		mov	r15, rsi	# tmp426, range_start
 3778              	# sieve_extend.c:485:             quadmask[word] |= markmask(index);
 485:sieve_extend.c ****             index += step;
 3779              		.loc 1 485 28 view .LVU1235
 3780 1756 480944CC 		or	QWORD PTR 96[rsp+rcx*8], rax	# quadmask, tmp425
 3780      60
 486:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3781              		.loc 1 486 13 is_stmt 1 view .LVU1236
 3782              	.LVL146:
 487:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3783              		.loc 1 487 13 view .LVU1237
 3784              	# sieve_extend.c:487:             word = wordindex(index) - current_vector_start_word;
 487:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3785              		.loc 1 487 20 is_stmt 0 view .LVU1238
 3786 175b 49C1EF06 		shr	r15, 6	# tmp426,
 3787              	# sieve_extend.c:487:             word = wordindex(index) - current_vector_start_word;
 487:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3788              		.loc 1 487 18 view .LVU1239
 3789 175f 4D29F7   		sub	r15, r14	# word, current_vector_start_word
 488:sieve_extend.c ****         
 3790              		.loc 1 488 17 is_stmt 1 view .LVU1240
 3791              	# sieve_extend.c:488:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 488:sieve_extend.c ****         
 3792              		.loc 1 488 9 is_stmt 0 view .LVU1241
 3793 1762 4983FF03 		cmp	r15, 3	# word,
 3794 1766 7768     		ja	.L438	#,
 484:sieve_extend.c ****             quadmask[word] |= markmask(index);
 3795              		.loc 1 484 9 is_stmt 1 view .LVU1242
 485:sieve_extend.c ****             index += step;
GAS LISTING /tmp/cc64mrzX.s 			page 112


 3796              		.loc 1 485 13 view .LVU1243
 3797              	# sieve_extend.c:485:             quadmask[word] |= markmask(index);
 485:sieve_extend.c ****             index += step;
 3798              		.loc 1 485 31 is_stmt 0 view .LVU1244
 3799 1768 C4C2C9F7 		shlx	rsi, r10, rsi	# tmp428, tmp266, range_start
 3799      F2
 3800              	.LVL147:
 3801              	# sieve_extend.c:485:             quadmask[word] |= markmask(index);
 485:sieve_extend.c ****             index += step;
 3802              		.loc 1 485 28 view .LVU1245
 3803 176d 4A0974FC 		or	QWORD PTR 96[rsp+r15*8], rsi	# quadmask, tmp428
 3803      60
 486:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3804              		.loc 1 486 13 is_stmt 1 view .LVU1246
 3805              	.LVL148:
 3806              	# sieve_extend.c:486:             index += step;
 486:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3807              		.loc 1 486 19 is_stmt 0 view .LVU1247
 3808 1772 498D7105 		lea	rsi, 5[r9]	# range_start,
 3809              	.LVL149:
 487:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3810              		.loc 1 487 13 is_stmt 1 view .LVU1248
 3811              	# sieve_extend.c:487:             word = wordindex(index) - current_vector_start_word;
 487:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3812              		.loc 1 487 20 is_stmt 0 view .LVU1249
 3813 1776 4989F5   		mov	r13, rsi	# tmp429, range_start
 3814 1779 49C1ED06 		shr	r13, 6	# tmp429,
 3815              	# sieve_extend.c:487:             word = wordindex(index) - current_vector_start_word;
 487:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3816              		.loc 1 487 18 view .LVU1250
 3817 177d 4D29F5   		sub	r13, r14	# word, current_vector_start_word
 488:sieve_extend.c ****         
 3818              		.loc 1 488 17 is_stmt 1 view .LVU1251
 3819              	# sieve_extend.c:488:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 488:sieve_extend.c ****         
 3820              		.loc 1 488 9 is_stmt 0 view .LVU1252
 3821 1780 4983FD03 		cmp	r13, 3	# word,
 3822 1784 774A     		ja	.L438	#,
 484:sieve_extend.c ****             quadmask[word] |= markmask(index);
 3823              		.loc 1 484 9 is_stmt 1 view .LVU1253
 485:sieve_extend.c ****             index += step;
 3824              		.loc 1 485 13 view .LVU1254
 3825              	# sieve_extend.c:485:             quadmask[word] |= markmask(index);
 485:sieve_extend.c ****             index += step;
 3826              		.loc 1 485 31 is_stmt 0 view .LVU1255
 3827 1786 C442C9F7 		shlx	r12, r10, rsi	# tmp431, tmp266, range_start
 3827      E2
 3828              	# sieve_extend.c:486:             index += step;
 486:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3829              		.loc 1 486 19 view .LVU1256
 3830 178b 498D7106 		lea	rsi, 6[r9]	# range_start,
 3831              	.LVL150:
 3832              	# sieve_extend.c:487:             word = wordindex(index) - current_vector_start_word;
 487:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3833              		.loc 1 487 20 view .LVU1257
 3834 178f 4889F1   		mov	rcx, rsi	# tmp432, range_start
 3835              	# sieve_extend.c:485:             quadmask[word] |= markmask(index);
GAS LISTING /tmp/cc64mrzX.s 			page 113


 485:sieve_extend.c ****             index += step;
 3836              		.loc 1 485 28 view .LVU1258
 3837 1792 4E0964EC 		or	QWORD PTR 96[rsp+r13*8], r12	# quadmask, tmp431
 3837      60
 486:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3838              		.loc 1 486 13 is_stmt 1 view .LVU1259
 3839              	.LVL151:
 487:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3840              		.loc 1 487 13 view .LVU1260
 3841              	# sieve_extend.c:487:             word = wordindex(index) - current_vector_start_word;
 487:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3842              		.loc 1 487 20 is_stmt 0 view .LVU1261
 3843 1797 48C1E906 		shr	rcx, 6	# tmp432,
 3844              	.LVL152:
 3845              	# sieve_extend.c:487:             word = wordindex(index) - current_vector_start_word;
 487:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3846              		.loc 1 487 18 view .LVU1262
 3847 179b 4C29F1   		sub	rcx, r14	# word, current_vector_start_word
 488:sieve_extend.c ****         
 3848              		.loc 1 488 17 is_stmt 1 view .LVU1263
 3849              	# sieve_extend.c:488:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 488:sieve_extend.c ****         
 3850              		.loc 1 488 9 is_stmt 0 view .LVU1264
 3851 179e 4883F903 		cmp	rcx, 3	# word,
 3852 17a2 772C     		ja	.L438	#,
 484:sieve_extend.c ****             quadmask[word] |= markmask(index);
 3853              		.loc 1 484 9 is_stmt 1 view .LVU1265
 485:sieve_extend.c ****             index += step;
 3854              		.loc 1 485 13 view .LVU1266
 3855              	# sieve_extend.c:485:             quadmask[word] |= markmask(index);
 485:sieve_extend.c ****             index += step;
 3856              		.loc 1 485 31 is_stmt 0 view .LVU1267
 3857 17a4 C4C2C9F7 		shlx	rax, r10, rsi	# tmp434, tmp266, range_start
 3857      C2
 3858              	# sieve_extend.c:486:             index += step;
 486:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3859              		.loc 1 486 19 view .LVU1268
 3860 17a9 498D7107 		lea	rsi, 7[r9]	# range_start,
 3861              	.LVL153:
 3862              	# sieve_extend.c:487:             word = wordindex(index) - current_vector_start_word;
 487:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3863              		.loc 1 487 20 view .LVU1269
 3864 17ad 4989F1   		mov	r9, rsi	# tmp435, range_start
 3865              	.LVL154:
 3866              	# sieve_extend.c:485:             quadmask[word] |= markmask(index);
 485:sieve_extend.c ****             index += step;
 3867              		.loc 1 485 28 view .LVU1270
 3868 17b0 480944CC 		or	QWORD PTR 96[rsp+rcx*8], rax	# quadmask, tmp434
 3868      60
 486:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3869              		.loc 1 486 13 is_stmt 1 view .LVU1271
 3870              	.LVL155:
 487:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3871              		.loc 1 487 13 view .LVU1272
 3872              	# sieve_extend.c:487:             word = wordindex(index) - current_vector_start_word;
 487:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3873              		.loc 1 487 20 is_stmt 0 view .LVU1273
GAS LISTING /tmp/cc64mrzX.s 			page 114


 3874 17b5 49C1E906 		shr	r9, 6	# tmp435,
 3875              	.LVL156:
 3876              	# sieve_extend.c:487:             word = wordindex(index) - current_vector_start_word;
 487:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3877              		.loc 1 487 18 view .LVU1274
 3878 17b9 4D29F1   		sub	r9, r14	# word, current_vector_start_word
 3879              	.LVL157:
 488:sieve_extend.c ****         
 3880              		.loc 1 488 17 is_stmt 1 view .LVU1275
 3881              	# sieve_extend.c:488:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 488:sieve_extend.c ****         
 3882              		.loc 1 488 9 is_stmt 0 view .LVU1276
 3883 17bc 4983F903 		cmp	r9, 3	# word,
 3884 17c0 0F86F9FE 		jbe	.L285	#,
 3884      FFFF
 3885              	.LVL158:
 3886 17c6 662E0F1F 		.p2align 4
 3886      84000000 
 3886      0000
 3887              		.p2align 3
 3888              	.L438:
 491:sieve_extend.c ****         const counter_t range_stop_vector = vectorindex(range_stop);
 3889              		.loc 1 491 9 is_stmt 1 view .LVU1277
 492:sieve_extend.c ****         
 3890              		.loc 1 492 9 view .LVU1278
 506:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 3891              		.loc 1 506 9 view .LVU1279
 506:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 3892              		.loc 1 506 15 view .LVU1280
 3893              	# sieve_extend.c:506:         for(; current_vector+step_4 < range_stop_vector; current_vector += st
 506:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 3894              		.loc 1 506 29 is_stmt 0 view .LVU1281
 3895 17d0 4C8D7204 		lea	r14, 4[rdx]	# ivtmp.267,
 3896              	.LVL159:
 3897              	# sieve_extend.c:506:         for(; current_vector+step_4 < range_stop_vector; current_vector += st
 506:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 3898              		.loc 1 506 9 view .LVU1282
 3899 17d4 4D39F0   		cmp	r8, r14	# range_stop_vector, ivtmp.267
 3900 17d7 0F861202 		jbe	.L286	#,
 3900      0000
 3901 17dd 4D89F5   		mov	r13, r14	# tmp301, ivtmp.267
 3902 17e0 4D8D6604 		lea	r12, 4[r14]	# ivtmp.267,
 3903 17e4 48C1E205 		sal	rdx, 5	# tmp268,
 3904              	.LVL160:
 506:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 3905              		.loc 1 506 9 view .LVU1283
 3906 17e8 49F7D5   		not	r13	# tmp301
 3907              	.LVL161:
 506:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 3908              		.loc 1 506 9 view .LVU1284
 3909 17eb 4D01C5   		add	r13, r8	# tmp302, range_stop_vector
 3910 17ee 4C8D3C17 		lea	r15, [rdi+rdx]	# ivtmp.268,
 3911              	# sieve_extend.c:507:             bitarray_vector[current_vector       ] |= quadmask;
 507:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= quadmask;
 3912              		.loc 1 507 52 view .LVU1285
 3913 17f2 C57D6F5C 		vmovdqa	ymm11, YMMWORD PTR 96[rsp]	# quadmask.57_217, quadmask
 3913      2460
GAS LISTING /tmp/cc64mrzX.s 			page 115


 3914 17f8 4C89F2   		mov	rdx, r14	# ivtmp.267, ivtmp.267
 3915 17fb 49C1ED02 		shr	r13, 2	# tmp300,
 3916 17ff C44125EB 		vpor	ymm12, ymm11, YMMWORD PTR [r15]	# tmp269, quadmask.57_217, MEM[base: _246, offset: 0B]
 3916      27
 3917              	# sieve_extend.c:508:             bitarray_vector[current_vector+step  ] |= quadmask;
 508:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= quadmask;
 3918              		.loc 1 508 52 view .LVU1286
 3919 1804 C44125EB 		vpor	ymm13, ymm11, YMMWORD PTR 32[r15]	# tmp270, quadmask.57_217, MEM[base: _246, offset: 32B]
 3919      6F20
 3920 180a 4183E503 		and	r13d, 3	# tmp303,
 507:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= quadmask;
 3921              		.loc 1 507 13 is_stmt 1 view .LVU1287
 3922              	# sieve_extend.c:509:             bitarray_vector[current_vector+step_2] |= quadmask;
 509:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= quadmask;
 3923              		.loc 1 509 52 is_stmt 0 view .LVU1288
 3924 180e C44125EB 		vpor	ymm14, ymm11, YMMWORD PTR 64[r15]	# tmp271, quadmask.57_217, MEM[base: _246, offset: 64B]
 3924      7740
 3925              	# sieve_extend.c:510:             bitarray_vector[current_vector+step_3] |= quadmask;
 510:sieve_extend.c ****         }
 3926              		.loc 1 510 52 view .LVU1289
 3927 1814 C44125EB 		vpor	ymm15, ymm11, YMMWORD PTR 96[r15]	# tmp272, quadmask.57_217, MEM[base: _246, offset: 96B]
 3927      7F60
 3928              	# sieve_extend.c:506:         for(; current_vector+step_4 < range_stop_vector; current_vector += st
 506:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 3929              		.loc 1 506 9 view .LVU1290
 3930 181a 4D39C4   		cmp	r12, r8	# ivtmp.267, range_stop_vector
 3931 181d 498D8F80 		lea	rcx, 128[r15]	# ivtmp.268,
 3931      000000
 3932              	# sieve_extend.c:507:             bitarray_vector[current_vector       ] |= quadmask;
 507:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= quadmask;
 3933              		.loc 1 507 52 view .LVU1291
 3934 1824 C4417D7F 		vmovdqa	YMMWORD PTR [r15], ymm12	# MEM[base: _246, offset: 0B], tmp269
 3934      27
 508:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= quadmask;
 3935              		.loc 1 508 13 is_stmt 1 view .LVU1292
 3936              	# sieve_extend.c:508:             bitarray_vector[current_vector+step  ] |= quadmask;
 508:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= quadmask;
 3937              		.loc 1 508 52 is_stmt 0 view .LVU1293
 3938 1829 C4417D7F 		vmovdqa	YMMWORD PTR 32[r15], ymm13	# MEM[base: _246, offset: 32B], tmp270
 3938      6F20
 509:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= quadmask;
 3939              		.loc 1 509 13 is_stmt 1 view .LVU1294
 3940              	# sieve_extend.c:509:             bitarray_vector[current_vector+step_2] |= quadmask;
 509:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= quadmask;
 3941              		.loc 1 509 52 is_stmt 0 view .LVU1295
 3942 182f C4417D7F 		vmovdqa	YMMWORD PTR 64[r15], ymm14	# MEM[base: _246, offset: 64B], tmp271
 3942      7740
 510:sieve_extend.c ****         }
 3943              		.loc 1 510 13 is_stmt 1 view .LVU1296
 3944              	# sieve_extend.c:510:             bitarray_vector[current_vector+step_3] |= quadmask;
 510:sieve_extend.c ****         }
 3945              		.loc 1 510 52 is_stmt 0 view .LVU1297
 3946 1835 C4417D7F 		vmovdqa	YMMWORD PTR 96[r15], ymm15	# MEM[base: _246, offset: 96B], tmp272
 3946      7F60
 506:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 3947              		.loc 1 506 58 is_stmt 1 view .LVU1298
 3948              	.LVL162:
GAS LISTING /tmp/cc64mrzX.s 			page 116


 506:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 3949              		.loc 1 506 15 view .LVU1299
 3950              	# sieve_extend.c:506:         for(; current_vector+step_4 < range_stop_vector; current_vector += st
 506:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 3951              		.loc 1 506 9 is_stmt 0 view .LVU1300
 3952 183b 0F83AE01 		jnb	.L286	#,
 3952      0000
 3953 1841 4D85ED   		test	r13, r13	# tmp303
 3954 1844 0F84AF00 		je	.L287	#,
 3954      0000
 3955 184a 4983FD01 		cmp	r13, 1	# tmp303,
 3956 184e 746F     		je	.L398	#,
 3957 1850 4983FD02 		cmp	r13, 2	# tmp303,
 3958 1854 743B     		je	.L399	#,
 507:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= quadmask;
 3959              		.loc 1 507 13 is_stmt 1 view .LVU1301
 3960              	# sieve_extend.c:507:             bitarray_vector[current_vector       ] |= quadmask;
 507:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= quadmask;
 3961              		.loc 1 507 52 is_stmt 0 view .LVU1302
 3962 1856 C4C125EB 		vpor	ymm0, ymm11, YMMWORD PTR 128[r15]	# tmp402, quadmask.57_217, MEM[base: _246, offset: 0B]
 3962      87800000 
 3962      00
 3963 185f 4D8D6608 		lea	r12, 8[r14]	# ivtmp.267,
 3964 1863 C4C17D7F 		vmovdqa	YMMWORD PTR 128[r15], ymm0	# MEM[base: _246, offset: 0B], tmp402
 3964      87800000 
 3964      00
 508:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= quadmask;
 3965              		.loc 1 508 13 is_stmt 1 view .LVU1303
 3966              	# sieve_extend.c:508:             bitarray_vector[current_vector+step  ] |= quadmask;
 508:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= quadmask;
 3967              		.loc 1 508 52 is_stmt 0 view .LVU1304
 3968 186c C5A5EB49 		vpor	ymm1, ymm11, YMMWORD PTR 32[rcx]	# tmp403, quadmask.57_217, MEM[base: _246, offset: 32B]
 3968      20
 3969              	# sieve_extend.c:509:             bitarray_vector[current_vector+step_2] |= quadmask;
 509:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= quadmask;
 3970              		.loc 1 509 52 view .LVU1305
 3971 1871 C5A5EB59 		vpor	ymm3, ymm11, YMMWORD PTR 64[rcx]	# tmp404, quadmask.57_217, MEM[base: _246, offset: 64B]
 3971      40
 3972              	# sieve_extend.c:508:             bitarray_vector[current_vector+step  ] |= quadmask;
 508:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= quadmask;
 3973              		.loc 1 508 52 view .LVU1306
 3974 1876 C5FD7F49 		vmovdqa	YMMWORD PTR 32[rcx], ymm1	# MEM[base: _246, offset: 32B], tmp403
 3974      20
 509:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= quadmask;
 3975              		.loc 1 509 13 is_stmt 1 view .LVU1307
 3976              	# sieve_extend.c:510:             bitarray_vector[current_vector+step_3] |= quadmask;
 510:sieve_extend.c ****         }
 3977              		.loc 1 510 52 is_stmt 0 view .LVU1308
 3978 187b C5A5EB61 		vpor	ymm4, ymm11, YMMWORD PTR 96[rcx]	# tmp405, quadmask.57_217, MEM[base: _246, offset: 96B]
 3978      60
 3979              	# sieve_extend.c:509:             bitarray_vector[current_vector+step_2] |= quadmask;
 509:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= quadmask;
 3980              		.loc 1 509 52 view .LVU1309
 3981 1880 C5FD7F59 		vmovdqa	YMMWORD PTR 64[rcx], ymm3	# MEM[base: _246, offset: 64B], tmp404
 3981      40
 510:sieve_extend.c ****         }
 3982              		.loc 1 510 13 is_stmt 1 view .LVU1310
GAS LISTING /tmp/cc64mrzX.s 			page 117


 3983              	# sieve_extend.c:510:             bitarray_vector[current_vector+step_3] |= quadmask;
 510:sieve_extend.c ****         }
 3984              		.loc 1 510 52 is_stmt 0 view .LVU1311
 3985 1885 C5FD7F61 		vmovdqa	YMMWORD PTR 96[rcx], ymm4	# MEM[base: _246, offset: 96B], tmp405
 3985      60
 506:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 3986              		.loc 1 506 58 is_stmt 1 view .LVU1312
 506:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 3987              		.loc 1 506 15 view .LVU1313
 3988 188a 498D8F00 		lea	rcx, 256[r15]	# ivtmp.268,
 3988      010000
 3989              	.L399:
 507:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= quadmask;
 3990              		.loc 1 507 13 view .LVU1314
 3991              	# sieve_extend.c:507:             bitarray_vector[current_vector       ] |= quadmask;
 507:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= quadmask;
 3992              		.loc 1 507 52 is_stmt 0 view .LVU1315
 3993 1891 C5A5EB29 		vpor	ymm5, ymm11, YMMWORD PTR [rcx]	# tmp407, quadmask.57_217, MEM[base: _246, offset: 0B]
 3994              	# sieve_extend.c:508:             bitarray_vector[current_vector+step  ] |= quadmask;
 508:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= quadmask;
 3995              		.loc 1 508 52 view .LVU1316
 3996 1895 C5A5EB71 		vpor	ymm6, ymm11, YMMWORD PTR 32[rcx]	# tmp408, quadmask.57_217, MEM[base: _246, offset: 32B]
 3996      20
 3997              	# sieve_extend.c:509:             bitarray_vector[current_vector+step_2] |= quadmask;
 509:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= quadmask;
 3998              		.loc 1 509 52 view .LVU1317
 3999 189a C5A5EB79 		vpor	ymm7, ymm11, YMMWORD PTR 64[rcx]	# tmp409, quadmask.57_217, MEM[base: _246, offset: 64B]
 3999      40
 4000              	# sieve_extend.c:510:             bitarray_vector[current_vector+step_3] |= quadmask;
 510:sieve_extend.c ****         }
 4001              		.loc 1 510 52 view .LVU1318
 4002 189f C525EB41 		vpor	ymm8, ymm11, YMMWORD PTR 96[rcx]	# tmp410, quadmask.57_217, MEM[base: _246, offset: 96B]
 4002      60
 4003              	# sieve_extend.c:507:             bitarray_vector[current_vector       ] |= quadmask;
 507:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= quadmask;
 4004              		.loc 1 507 52 view .LVU1319
 4005 18a4 C5FD7F29 		vmovdqa	YMMWORD PTR [rcx], ymm5	# MEM[base: _246, offset: 0B], tmp407
 508:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= quadmask;
 4006              		.loc 1 508 13 is_stmt 1 view .LVU1320
 4007 18a8 4983C404 		add	r12, 4	# ivtmp.267,
 4008              	# sieve_extend.c:508:             bitarray_vector[current_vector+step  ] |= quadmask;
 508:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= quadmask;
 4009              		.loc 1 508 52 is_stmt 0 view .LVU1321
 4010 18ac C5FD7F71 		vmovdqa	YMMWORD PTR 32[rcx], ymm6	# MEM[base: _246, offset: 32B], tmp408
 4010      20
 509:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= quadmask;
 4011              		.loc 1 509 13 is_stmt 1 view .LVU1322
 4012 18b1 4883E980 		sub	rcx, -128	# ivtmp.268,
 4013              	# sieve_extend.c:509:             bitarray_vector[current_vector+step_2] |= quadmask;
 509:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= quadmask;
 4014              		.loc 1 509 52 is_stmt 0 view .LVU1323
 4015 18b5 C5FD7F79 		vmovdqa	YMMWORD PTR -64[rcx], ymm7	# MEM[base: _246, offset: 64B], tmp409
 4015      C0
 510:sieve_extend.c ****         }
 4016              		.loc 1 510 13 is_stmt 1 view .LVU1324
 4017              	# sieve_extend.c:510:             bitarray_vector[current_vector+step_3] |= quadmask;
 510:sieve_extend.c ****         }
GAS LISTING /tmp/cc64mrzX.s 			page 118


 4018              		.loc 1 510 52 is_stmt 0 view .LVU1325
 4019 18ba C57D7F41 		vmovdqa	YMMWORD PTR -32[rcx], ymm8	# MEM[base: _246, offset: 96B], tmp410
 4019      E0
 506:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 4020              		.loc 1 506 58 is_stmt 1 view .LVU1326
 506:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 4021              		.loc 1 506 15 view .LVU1327
 4022              	.L398:
 507:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= quadmask;
 4023              		.loc 1 507 13 view .LVU1328
 4024              	# sieve_extend.c:507:             bitarray_vector[current_vector       ] |= quadmask;
 507:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= quadmask;
 4025              		.loc 1 507 52 is_stmt 0 view .LVU1329
 4026 18bf C525EB09 		vpor	ymm9, ymm11, YMMWORD PTR [rcx]	# tmp412, quadmask.57_217, MEM[base: _246, offset: 0B]
 4027              	# sieve_extend.c:508:             bitarray_vector[current_vector+step  ] |= quadmask;
 508:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= quadmask;
 4028              		.loc 1 508 52 view .LVU1330
 4029 18c3 C525EB51 		vpor	ymm10, ymm11, YMMWORD PTR 32[rcx]	# tmp413, quadmask.57_217, MEM[base: _246, offset: 32B]
 4029      20
 4030              	# sieve_extend.c:509:             bitarray_vector[current_vector+step_2] |= quadmask;
 509:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= quadmask;
 4031              		.loc 1 509 52 view .LVU1331
 4032 18c8 C525EB61 		vpor	ymm12, ymm11, YMMWORD PTR 64[rcx]	# tmp414, quadmask.57_217, MEM[base: _246, offset: 64B]
 4032      40
 4033              	# sieve_extend.c:510:             bitarray_vector[current_vector+step_3] |= quadmask;
 510:sieve_extend.c ****         }
 4034              		.loc 1 510 52 view .LVU1332
 4035 18cd C525EB69 		vpor	ymm13, ymm11, YMMWORD PTR 96[rcx]	# tmp415, quadmask.57_217, MEM[base: _246, offset: 96B]
 4035      60
 4036 18d2 4C89E2   		mov	rdx, r12	# ivtmp.267, ivtmp.267
 4037 18d5 4983C404 		add	r12, 4	# ivtmp.267,
 4038              	# sieve_extend.c:507:             bitarray_vector[current_vector       ] |= quadmask;
 507:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= quadmask;
 4039              		.loc 1 507 52 view .LVU1333
 4040 18d9 C57D7F09 		vmovdqa	YMMWORD PTR [rcx], ymm9	# MEM[base: _246, offset: 0B], tmp412
 508:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= quadmask;
 4041              		.loc 1 508 13 is_stmt 1 view .LVU1334
 4042 18dd 4883E980 		sub	rcx, -128	# ivtmp.268,
 4043              	# sieve_extend.c:508:             bitarray_vector[current_vector+step  ] |= quadmask;
 508:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= quadmask;
 4044              		.loc 1 508 52 is_stmt 0 view .LVU1335
 4045 18e1 C57D7F51 		vmovdqa	YMMWORD PTR -96[rcx], ymm10	# MEM[base: _246, offset: 32B], tmp413
 4045      A0
 509:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= quadmask;
 4046              		.loc 1 509 13 is_stmt 1 view .LVU1336
 4047              	# sieve_extend.c:509:             bitarray_vector[current_vector+step_2] |= quadmask;
 509:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= quadmask;
 4048              		.loc 1 509 52 is_stmt 0 view .LVU1337
 4049 18e6 C57D7F61 		vmovdqa	YMMWORD PTR -64[rcx], ymm12	# MEM[base: _246, offset: 64B], tmp414
 4049      C0
 510:sieve_extend.c ****         }
 4050              		.loc 1 510 13 is_stmt 1 view .LVU1338
 4051              	# sieve_extend.c:510:             bitarray_vector[current_vector+step_3] |= quadmask;
 510:sieve_extend.c ****         }
 4052              		.loc 1 510 52 is_stmt 0 view .LVU1339
 4053 18eb C57D7F69 		vmovdqa	YMMWORD PTR -32[rcx], ymm13	# MEM[base: _246, offset: 96B], tmp415
 4053      E0
GAS LISTING /tmp/cc64mrzX.s 			page 119


 506:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 4054              		.loc 1 506 58 is_stmt 1 view .LVU1340
 506:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 4055              		.loc 1 506 15 view .LVU1341
 4056              	# sieve_extend.c:506:         for(; current_vector+step_4 < range_stop_vector; current_vector += st
 506:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 4057              		.loc 1 506 9 is_stmt 0 view .LVU1342
 4058 18f0 4D39C4   		cmp	r12, r8	# ivtmp.267, range_stop_vector
 4059 18f3 0F83F600 		jnb	.L286	#,
 4059      0000
 4060              	.L287:
 507:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= quadmask;
 4061              		.loc 1 507 13 is_stmt 1 view .LVU1343
 4062              	# sieve_extend.c:507:             bitarray_vector[current_vector       ] |= quadmask;
 507:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= quadmask;
 4063              		.loc 1 507 52 is_stmt 0 view .LVU1344
 4064 18f9 C525EB31 		vpor	ymm14, ymm11, YMMWORD PTR [rcx]	# tmp315, quadmask.57_217, MEM[base: _246, offset: 0B]
 4065              	# sieve_extend.c:508:             bitarray_vector[current_vector+step  ] |= quadmask;
 508:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= quadmask;
 4066              		.loc 1 508 52 view .LVU1345
 4067 18fd C525EB79 		vpor	ymm15, ymm11, YMMWORD PTR 32[rcx]	# tmp316, quadmask.57_217, MEM[base: _246, offset: 32B]
 4067      20
 4068              	# sieve_extend.c:507:             bitarray_vector[current_vector       ] |= quadmask;
 507:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= quadmask;
 4069              		.loc 1 507 52 view .LVU1346
 4070 1902 C57D7F31 		vmovdqa	YMMWORD PTR [rcx], ymm14	# MEM[base: _246, offset: 0B], tmp315
 508:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= quadmask;
 4071              		.loc 1 508 13 is_stmt 1 view .LVU1347
 4072              	# sieve_extend.c:509:             bitarray_vector[current_vector+step_2] |= quadmask;
 509:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= quadmask;
 4073              		.loc 1 509 52 is_stmt 0 view .LVU1348
 4074 1906 C5A5EB41 		vpor	ymm0, ymm11, YMMWORD PTR 64[rcx]	# tmp317, quadmask.57_217, MEM[base: _246, offset: 64B]
 4074      40
 4075              	# sieve_extend.c:510:             bitarray_vector[current_vector+step_3] |= quadmask;
 510:sieve_extend.c ****         }
 4076              		.loc 1 510 52 view .LVU1349
 4077 190b C5A5EB49 		vpor	ymm1, ymm11, YMMWORD PTR 96[rcx]	# tmp318, quadmask.57_217, MEM[base: _246, offset: 96B]
 4077      60
 4078              	# sieve_extend.c:507:             bitarray_vector[current_vector       ] |= quadmask;
 507:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= quadmask;
 4079              		.loc 1 507 52 view .LVU1350
 4080 1910 C5A5EB99 		vpor	ymm3, ymm11, YMMWORD PTR 128[rcx]	# tmp322, quadmask.57_217, MEM[base: _246, offset: 0B]
 4080      80000000 
 4081              	# sieve_extend.c:508:             bitarray_vector[current_vector+step  ] |= quadmask;
 508:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= quadmask;
 4082              		.loc 1 508 52 view .LVU1351
 4083 1918 C5A5EBA1 		vpor	ymm4, ymm11, YMMWORD PTR 160[rcx]	# tmp323, quadmask.57_217, MEM[base: _246, offset: 32B]
 4083      A0000000 
 4084              	# sieve_extend.c:509:             bitarray_vector[current_vector+step_2] |= quadmask;
 509:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= quadmask;
 4085              		.loc 1 509 52 view .LVU1352
 4086 1920 C5A5EBA9 		vpor	ymm5, ymm11, YMMWORD PTR 192[rcx]	# tmp324, quadmask.57_217, MEM[base: _246, offset: 64B]
 4086      C0000000 
 4087              	# sieve_extend.c:510:             bitarray_vector[current_vector+step_3] |= quadmask;
 510:sieve_extend.c ****         }
 4088              		.loc 1 510 52 view .LVU1353
 4089 1928 C5A5EBB1 		vpor	ymm6, ymm11, YMMWORD PTR 224[rcx]	# tmp325, quadmask.57_217, MEM[base: _246, offset: 96B]
GAS LISTING /tmp/cc64mrzX.s 			page 120


 4089      E0000000 
 4090              	# sieve_extend.c:507:             bitarray_vector[current_vector       ] |= quadmask;
 507:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= quadmask;
 4091              		.loc 1 507 52 view .LVU1354
 4092 1930 C5A5EBB9 		vpor	ymm7, ymm11, YMMWORD PTR 256[rcx]	# tmp329, quadmask.57_217, MEM[base: _246, offset: 0B]
 4092      00010000 
 4093              	# sieve_extend.c:508:             bitarray_vector[current_vector+step  ] |= quadmask;
 508:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= quadmask;
 4094              		.loc 1 508 52 view .LVU1355
 4095 1938 C525EB81 		vpor	ymm8, ymm11, YMMWORD PTR 288[rcx]	# tmp330, quadmask.57_217, MEM[base: _246, offset: 32B]
 4095      20010000 
 4096              	# sieve_extend.c:509:             bitarray_vector[current_vector+step_2] |= quadmask;
 509:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= quadmask;
 4097              		.loc 1 509 52 view .LVU1356
 4098 1940 C525EB89 		vpor	ymm9, ymm11, YMMWORD PTR 320[rcx]	# tmp331, quadmask.57_217, MEM[base: _246, offset: 64B]
 4098      40010000 
 4099              	# sieve_extend.c:510:             bitarray_vector[current_vector+step_3] |= quadmask;
 510:sieve_extend.c ****         }
 4100              		.loc 1 510 52 view .LVU1357
 4101 1948 C525EB91 		vpor	ymm10, ymm11, YMMWORD PTR 352[rcx]	# tmp332, quadmask.57_217, MEM[base: _246, offset: 96B]
 4101      60010000 
 4102              	# sieve_extend.c:507:             bitarray_vector[current_vector       ] |= quadmask;
 507:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= quadmask;
 4103              		.loc 1 507 52 view .LVU1358
 4104 1950 C525EBA1 		vpor	ymm12, ymm11, YMMWORD PTR 384[rcx]	# tmp336, quadmask.57_217, MEM[base: _246, offset: 0B]
 4104      80010000 
 4105              	# sieve_extend.c:508:             bitarray_vector[current_vector+step  ] |= quadmask;
 508:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= quadmask;
 4106              		.loc 1 508 52 view .LVU1359
 4107 1958 C525EBA9 		vpor	ymm13, ymm11, YMMWORD PTR 416[rcx]	# tmp337, quadmask.57_217, MEM[base: _246, offset: 32B]
 4107      A0010000 
 4108              	# sieve_extend.c:509:             bitarray_vector[current_vector+step_2] |= quadmask;
 509:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= quadmask;
 4109              		.loc 1 509 52 view .LVU1360
 4110 1960 C525EBB1 		vpor	ymm14, ymm11, YMMWORD PTR 448[rcx]	# tmp338, quadmask.57_217, MEM[base: _246, offset: 64B]
 4110      C0010000 
 4111 1968 498D5424 		lea	rdx, 12[r12]	# ivtmp.267,
 4111      0C
 4112 196d 4983C410 		add	r12, 16	# ivtmp.267,
 4113              	# sieve_extend.c:508:             bitarray_vector[current_vector+step  ] |= quadmask;
 508:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= quadmask;
 4114              		.loc 1 508 52 view .LVU1361
 4115 1971 C57D7F79 		vmovdqa	YMMWORD PTR 32[rcx], ymm15	# MEM[base: _246, offset: 32B], tmp316
 4115      20
 509:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= quadmask;
 4116              		.loc 1 509 13 is_stmt 1 view .LVU1362
 4117              	# sieve_extend.c:510:             bitarray_vector[current_vector+step_3] |= quadmask;
 510:sieve_extend.c ****         }
 4118              		.loc 1 510 52 is_stmt 0 view .LVU1363
 4119 1976 C525EBB9 		vpor	ymm15, ymm11, YMMWORD PTR 480[rcx]	# tmp339, quadmask.57_217, MEM[base: _246, offset: 96B]
 4119      E0010000 
 4120              	# sieve_extend.c:509:             bitarray_vector[current_vector+step_2] |= quadmask;
 509:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= quadmask;
 4121              		.loc 1 509 52 view .LVU1364
 4122 197e C5FD7F41 		vmovdqa	YMMWORD PTR 64[rcx], ymm0	# MEM[base: _246, offset: 64B], tmp317
 4122      40
 510:sieve_extend.c ****         }
GAS LISTING /tmp/cc64mrzX.s 			page 121


 4123              		.loc 1 510 13 is_stmt 1 view .LVU1365
 4124 1983 4881C100 		add	rcx, 512	# ivtmp.268,
 4124      020000
 4125              	# sieve_extend.c:510:             bitarray_vector[current_vector+step_3] |= quadmask;
 510:sieve_extend.c ****         }
 4126              		.loc 1 510 52 is_stmt 0 view .LVU1366
 4127 198a C5FD7F89 		vmovdqa	YMMWORD PTR -416[rcx], ymm1	# MEM[base: _246, offset: 96B], tmp318
 4127      60FEFFFF 
 506:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 4128              		.loc 1 506 58 is_stmt 1 view .LVU1367
 506:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 4129              		.loc 1 506 15 view .LVU1368
 507:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= quadmask;
 4130              		.loc 1 507 13 view .LVU1369
 4131              	# sieve_extend.c:507:             bitarray_vector[current_vector       ] |= quadmask;
 507:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= quadmask;
 4132              		.loc 1 507 52 is_stmt 0 view .LVU1370
 4133 1992 C5FD7F99 		vmovdqa	YMMWORD PTR -384[rcx], ymm3	# MEM[base: _246, offset: 0B], tmp322
 4133      80FEFFFF 
 508:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= quadmask;
 4134              		.loc 1 508 13 is_stmt 1 view .LVU1371
 4135              	# sieve_extend.c:508:             bitarray_vector[current_vector+step  ] |= quadmask;
 508:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= quadmask;
 4136              		.loc 1 508 52 is_stmt 0 view .LVU1372
 4137 199a C5FD7FA1 		vmovdqa	YMMWORD PTR -352[rcx], ymm4	# MEM[base: _246, offset: 32B], tmp323
 4137      A0FEFFFF 
 509:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= quadmask;
 4138              		.loc 1 509 13 is_stmt 1 view .LVU1373
 4139              	# sieve_extend.c:509:             bitarray_vector[current_vector+step_2] |= quadmask;
 509:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= quadmask;
 4140              		.loc 1 509 52 is_stmt 0 view .LVU1374
 4141 19a2 C5FD7FA9 		vmovdqa	YMMWORD PTR -320[rcx], ymm5	# MEM[base: _246, offset: 64B], tmp324
 4141      C0FEFFFF 
 510:sieve_extend.c ****         }
 4142              		.loc 1 510 13 is_stmt 1 view .LVU1375
 4143              	# sieve_extend.c:510:             bitarray_vector[current_vector+step_3] |= quadmask;
 510:sieve_extend.c ****         }
 4144              		.loc 1 510 52 is_stmt 0 view .LVU1376
 4145 19aa C5FD7FB1 		vmovdqa	YMMWORD PTR -288[rcx], ymm6	# MEM[base: _246, offset: 96B], tmp325
 4145      E0FEFFFF 
 506:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 4146              		.loc 1 506 58 is_stmt 1 view .LVU1377
 506:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 4147              		.loc 1 506 15 view .LVU1378
 507:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= quadmask;
 4148              		.loc 1 507 13 view .LVU1379
 4149              	# sieve_extend.c:507:             bitarray_vector[current_vector       ] |= quadmask;
 507:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= quadmask;
 4150              		.loc 1 507 52 is_stmt 0 view .LVU1380
 4151 19b2 C5FD7FB9 		vmovdqa	YMMWORD PTR -256[rcx], ymm7	# MEM[base: _246, offset: 0B], tmp329
 4151      00FFFFFF 
 508:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= quadmask;
 4152              		.loc 1 508 13 is_stmt 1 view .LVU1381
 4153              	# sieve_extend.c:508:             bitarray_vector[current_vector+step  ] |= quadmask;
 508:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= quadmask;
 4154              		.loc 1 508 52 is_stmt 0 view .LVU1382
 4155 19ba C57D7F81 		vmovdqa	YMMWORD PTR -224[rcx], ymm8	# MEM[base: _246, offset: 32B], tmp330
GAS LISTING /tmp/cc64mrzX.s 			page 122


 4155      20FFFFFF 
 509:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= quadmask;
 4156              		.loc 1 509 13 is_stmt 1 view .LVU1383
 4157              	# sieve_extend.c:509:             bitarray_vector[current_vector+step_2] |= quadmask;
 509:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= quadmask;
 4158              		.loc 1 509 52 is_stmt 0 view .LVU1384
 4159 19c2 C57D7F89 		vmovdqa	YMMWORD PTR -192[rcx], ymm9	# MEM[base: _246, offset: 64B], tmp331
 4159      40FFFFFF 
 510:sieve_extend.c ****         }
 4160              		.loc 1 510 13 is_stmt 1 view .LVU1385
 4161              	# sieve_extend.c:510:             bitarray_vector[current_vector+step_3] |= quadmask;
 510:sieve_extend.c ****         }
 4162              		.loc 1 510 52 is_stmt 0 view .LVU1386
 4163 19ca C57D7F91 		vmovdqa	YMMWORD PTR -160[rcx], ymm10	# MEM[base: _246, offset: 96B], tmp332
 4163      60FFFFFF 
 506:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 4164              		.loc 1 506 58 is_stmt 1 view .LVU1387
 506:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 4165              		.loc 1 506 15 view .LVU1388
 507:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= quadmask;
 4166              		.loc 1 507 13 view .LVU1389
 4167              	# sieve_extend.c:507:             bitarray_vector[current_vector       ] |= quadmask;
 507:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= quadmask;
 4168              		.loc 1 507 52 is_stmt 0 view .LVU1390
 4169 19d2 C57D7F61 		vmovdqa	YMMWORD PTR -128[rcx], ymm12	# MEM[base: _246, offset: 0B], tmp336
 4169      80
 508:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= quadmask;
 4170              		.loc 1 508 13 is_stmt 1 view .LVU1391
 4171              	# sieve_extend.c:508:             bitarray_vector[current_vector+step  ] |= quadmask;
 508:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= quadmask;
 4172              		.loc 1 508 52 is_stmt 0 view .LVU1392
 4173 19d7 C57D7F69 		vmovdqa	YMMWORD PTR -96[rcx], ymm13	# MEM[base: _246, offset: 32B], tmp337
 4173      A0
 509:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= quadmask;
 4174              		.loc 1 509 13 is_stmt 1 view .LVU1393
 4175              	# sieve_extend.c:509:             bitarray_vector[current_vector+step_2] |= quadmask;
 509:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= quadmask;
 4176              		.loc 1 509 52 is_stmt 0 view .LVU1394
 4177 19dc C57D7F71 		vmovdqa	YMMWORD PTR -64[rcx], ymm14	# MEM[base: _246, offset: 64B], tmp338
 4177      C0
 510:sieve_extend.c ****         }
 4178              		.loc 1 510 13 is_stmt 1 view .LVU1395
 4179              	# sieve_extend.c:510:             bitarray_vector[current_vector+step_3] |= quadmask;
 510:sieve_extend.c ****         }
 4180              		.loc 1 510 52 is_stmt 0 view .LVU1396
 4181 19e1 C57D7F79 		vmovdqa	YMMWORD PTR -32[rcx], ymm15	# MEM[base: _246, offset: 96B], tmp339
 4181      E0
 506:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 4182              		.loc 1 506 58 is_stmt 1 view .LVU1397
 506:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 4183              		.loc 1 506 15 view .LVU1398
 4184              	# sieve_extend.c:506:         for(; current_vector+step_4 < range_stop_vector; current_vector += st
 506:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 4185              		.loc 1 506 9 is_stmt 0 view .LVU1399
 4186 19e6 4D39C4   		cmp	r12, r8	# ivtmp.267, range_stop_vector
 4187 19e9 0F820AFF 		jb	.L287	#,
 4187      FFFF
GAS LISTING /tmp/cc64mrzX.s 			page 123


 4188              	.LVL163:
 4189              	.L286:
 514:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4190              		.loc 1 514 15 is_stmt 1 view .LVU1400
 4191              	# sieve_extend.c:514:         for(; current_vector < range_stop_vector; current_vector += step) {
 514:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4192              		.loc 1 514 9 is_stmt 0 view .LVU1401
 4193 19ef 4939D0   		cmp	r8, rdx	# range_stop_vector, ivtmp.267
 4194 19f2 0F867101 		jbe	.L288	#,
 4194      0000
 4195 19f8 4889D0   		mov	rax, rdx	# tmp273, ivtmp.267
 4196 19fb 4D89C1   		mov	r9, r8	# tmp296, range_stop_vector
 4197 19fe 48C1E005 		sal	rax, 5	# tmp273,
 4198 1a02 4929D1   		sub	r9, rdx	# tmp296, ivtmp.267
 4199              	# sieve_extend.c:515:             bitarray_vector[current_vector] |= quadmask;
 515:sieve_extend.c ****         }
 4200              		.loc 1 515 45 view .LVU1402
 4201 1a05 C57D6F5C 		vmovdqa	ymm11, YMMWORD PTR 96[rsp]	# quadmask.61_186, quadmask
 4201      2460
 4202 1a0b 4801F8   		add	rax, rdi	# ivtmp.278, bitarray_word
 4203 1a0e 4183E107 		and	r9d, 7	# tmp297,
 4204 1a12 0F849900 		je	.L289	#,
 4204      0000
 4205 1a18 4983F901 		cmp	r9, 1	# tmp297,
 4206 1a1c 747E     		je	.L386	#,
 4207 1a1e 4983F902 		cmp	r9, 2	# tmp297,
 4208 1a22 7468     		je	.L387	#,
 4209 1a24 4983F903 		cmp	r9, 3	# tmp297,
 4210 1a28 7452     		je	.L388	#,
 4211 1a2a 4983F904 		cmp	r9, 4	# tmp297,
 4212 1a2e 743C     		je	.L389	#,
 4213 1a30 4983F905 		cmp	r9, 5	# tmp297,
 4214 1a34 7426     		je	.L390	#,
 4215 1a36 4983F906 		cmp	r9, 6	# tmp297,
 4216 1a3a 7410     		je	.L391	#,
 515:sieve_extend.c ****         }
 4217              		.loc 1 515 13 is_stmt 1 view .LVU1403
 4218              	# sieve_extend.c:515:             bitarray_vector[current_vector] |= quadmask;
 515:sieve_extend.c ****         }
 4219              		.loc 1 515 45 is_stmt 0 view .LVU1404
 4220 1a3c C5A5EB00 		vpor	ymm0, ymm11, YMMWORD PTR [rax]	# tmp395, quadmask.61_186, MEM[base: _263, offset: 0B]
 4221              	# sieve_extend.c:514:         for(; current_vector < range_stop_vector; current_vector += step) {
 514:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4222              		.loc 1 514 66 view .LVU1405
 4223 1a40 4883C201 		add	rdx, 1	# ivtmp.267,
 4224              	# sieve_extend.c:515:             bitarray_vector[current_vector] |= quadmask;
 515:sieve_extend.c ****         }
 4225              		.loc 1 515 45 view .LVU1406
 4226 1a44 C5FD7F00 		vmovdqa	YMMWORD PTR [rax], ymm0	# MEM[base: _263, offset: 0B], tmp395
 514:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4227              		.loc 1 514 51 is_stmt 1 view .LVU1407
 514:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4228              		.loc 1 514 15 view .LVU1408
 4229 1a48 4883C020 		add	rax, 32	# ivtmp.278,
 4230              	.L391:
 515:sieve_extend.c ****         }
 4231              		.loc 1 515 13 view .LVU1409
GAS LISTING /tmp/cc64mrzX.s 			page 124


 4232              	# sieve_extend.c:515:             bitarray_vector[current_vector] |= quadmask;
 515:sieve_extend.c ****         }
 4233              		.loc 1 515 45 is_stmt 0 view .LVU1410
 4234 1a4c C5A5EB08 		vpor	ymm1, ymm11, YMMWORD PTR [rax]	# tmp396, quadmask.61_186, MEM[base: _263, offset: 0B]
 4235              	# sieve_extend.c:514:         for(; current_vector < range_stop_vector; current_vector += step) {
 514:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4236              		.loc 1 514 66 view .LVU1411
 4237 1a50 4883C201 		add	rdx, 1	# ivtmp.267,
 4238              	# sieve_extend.c:515:             bitarray_vector[current_vector] |= quadmask;
 515:sieve_extend.c ****         }
 4239              		.loc 1 515 45 view .LVU1412
 4240 1a54 C5FD7F08 		vmovdqa	YMMWORD PTR [rax], ymm1	# MEM[base: _263, offset: 0B], tmp396
 514:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4241              		.loc 1 514 51 is_stmt 1 view .LVU1413
 514:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4242              		.loc 1 514 15 view .LVU1414
 4243 1a58 4883C020 		add	rax, 32	# ivtmp.278,
 4244              	.L390:
 515:sieve_extend.c ****         }
 4245              		.loc 1 515 13 view .LVU1415
 4246              	# sieve_extend.c:515:             bitarray_vector[current_vector] |= quadmask;
 515:sieve_extend.c ****         }
 4247              		.loc 1 515 45 is_stmt 0 view .LVU1416
 4248 1a5c C5A5EB18 		vpor	ymm3, ymm11, YMMWORD PTR [rax]	# tmp397, quadmask.61_186, MEM[base: _263, offset: 0B]
 4249              	# sieve_extend.c:514:         for(; current_vector < range_stop_vector; current_vector += step) {
 514:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4250              		.loc 1 514 66 view .LVU1417
 4251 1a60 4883C201 		add	rdx, 1	# ivtmp.267,
 4252              	# sieve_extend.c:515:             bitarray_vector[current_vector] |= quadmask;
 515:sieve_extend.c ****         }
 4253              		.loc 1 515 45 view .LVU1418
 4254 1a64 C5FD7F18 		vmovdqa	YMMWORD PTR [rax], ymm3	# MEM[base: _263, offset: 0B], tmp397
 514:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4255              		.loc 1 514 51 is_stmt 1 view .LVU1419
 514:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4256              		.loc 1 514 15 view .LVU1420
 4257 1a68 4883C020 		add	rax, 32	# ivtmp.278,
 4258              	.L389:
 515:sieve_extend.c ****         }
 4259              		.loc 1 515 13 view .LVU1421
 4260              	# sieve_extend.c:515:             bitarray_vector[current_vector] |= quadmask;
 515:sieve_extend.c ****         }
 4261              		.loc 1 515 45 is_stmt 0 view .LVU1422
 4262 1a6c C5A5EB20 		vpor	ymm4, ymm11, YMMWORD PTR [rax]	# tmp398, quadmask.61_186, MEM[base: _263, offset: 0B]
 4263              	# sieve_extend.c:514:         for(; current_vector < range_stop_vector; current_vector += step) {
 514:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4264              		.loc 1 514 66 view .LVU1423
 4265 1a70 4883C201 		add	rdx, 1	# ivtmp.267,
 4266              	# sieve_extend.c:515:             bitarray_vector[current_vector] |= quadmask;
 515:sieve_extend.c ****         }
 4267              		.loc 1 515 45 view .LVU1424
 4268 1a74 C5FD7F20 		vmovdqa	YMMWORD PTR [rax], ymm4	# MEM[base: _263, offset: 0B], tmp398
 514:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4269              		.loc 1 514 51 is_stmt 1 view .LVU1425
 514:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4270              		.loc 1 514 15 view .LVU1426
 4271 1a78 4883C020 		add	rax, 32	# ivtmp.278,
GAS LISTING /tmp/cc64mrzX.s 			page 125


 4272              	.L388:
 515:sieve_extend.c ****         }
 4273              		.loc 1 515 13 view .LVU1427
 4274              	# sieve_extend.c:515:             bitarray_vector[current_vector] |= quadmask;
 515:sieve_extend.c ****         }
 4275              		.loc 1 515 45 is_stmt 0 view .LVU1428
 4276 1a7c C5A5EB28 		vpor	ymm5, ymm11, YMMWORD PTR [rax]	# tmp399, quadmask.61_186, MEM[base: _263, offset: 0B]
 4277              	# sieve_extend.c:514:         for(; current_vector < range_stop_vector; current_vector += step) {
 514:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4278              		.loc 1 514 66 view .LVU1429
 4279 1a80 4883C201 		add	rdx, 1	# ivtmp.267,
 4280              	# sieve_extend.c:515:             bitarray_vector[current_vector] |= quadmask;
 515:sieve_extend.c ****         }
 4281              		.loc 1 515 45 view .LVU1430
 4282 1a84 C5FD7F28 		vmovdqa	YMMWORD PTR [rax], ymm5	# MEM[base: _263, offset: 0B], tmp399
 514:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4283              		.loc 1 514 51 is_stmt 1 view .LVU1431
 514:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4284              		.loc 1 514 15 view .LVU1432
 4285 1a88 4883C020 		add	rax, 32	# ivtmp.278,
 4286              	.L387:
 515:sieve_extend.c ****         }
 4287              		.loc 1 515 13 view .LVU1433
 4288              	# sieve_extend.c:515:             bitarray_vector[current_vector] |= quadmask;
 515:sieve_extend.c ****         }
 4289              		.loc 1 515 45 is_stmt 0 view .LVU1434
 4290 1a8c C5A5EB30 		vpor	ymm6, ymm11, YMMWORD PTR [rax]	# tmp400, quadmask.61_186, MEM[base: _263, offset: 0B]
 4291              	# sieve_extend.c:514:         for(; current_vector < range_stop_vector; current_vector += step) {
 514:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4292              		.loc 1 514 66 view .LVU1435
 4293 1a90 4883C201 		add	rdx, 1	# ivtmp.267,
 4294              	# sieve_extend.c:515:             bitarray_vector[current_vector] |= quadmask;
 515:sieve_extend.c ****         }
 4295              		.loc 1 515 45 view .LVU1436
 4296 1a94 C5FD7F30 		vmovdqa	YMMWORD PTR [rax], ymm6	# MEM[base: _263, offset: 0B], tmp400
 514:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4297              		.loc 1 514 51 is_stmt 1 view .LVU1437
 514:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4298              		.loc 1 514 15 view .LVU1438
 4299 1a98 4883C020 		add	rax, 32	# ivtmp.278,
 4300              	.L386:
 515:sieve_extend.c ****         }
 4301              		.loc 1 515 13 view .LVU1439
 4302              	# sieve_extend.c:515:             bitarray_vector[current_vector] |= quadmask;
 515:sieve_extend.c ****         }
 4303              		.loc 1 515 45 is_stmt 0 view .LVU1440
 4304 1a9c C5A5EB38 		vpor	ymm7, ymm11, YMMWORD PTR [rax]	# tmp401, quadmask.61_186, MEM[base: _263, offset: 0B]
 4305              	# sieve_extend.c:514:         for(; current_vector < range_stop_vector; current_vector += step) {
 514:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4306              		.loc 1 514 66 view .LVU1441
 4307 1aa0 4883C201 		add	rdx, 1	# ivtmp.267,
 4308              	# sieve_extend.c:515:             bitarray_vector[current_vector] |= quadmask;
 515:sieve_extend.c ****         }
 4309              		.loc 1 515 45 view .LVU1442
 4310 1aa4 C5FD7F38 		vmovdqa	YMMWORD PTR [rax], ymm7	# MEM[base: _263, offset: 0B], tmp401
 514:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4311              		.loc 1 514 51 is_stmt 1 view .LVU1443
GAS LISTING /tmp/cc64mrzX.s 			page 126


 514:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4312              		.loc 1 514 15 view .LVU1444
 4313 1aa8 4883C020 		add	rax, 32	# ivtmp.278,
 4314              	# sieve_extend.c:514:         for(; current_vector < range_stop_vector; current_vector += step) {
 514:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4315              		.loc 1 514 9 is_stmt 0 view .LVU1445
 4316 1aac 4939D0   		cmp	r8, rdx	# range_stop_vector, ivtmp.267
 4317 1aaf 7476     		je	.L437	#,
 4318              	.L289:
 515:sieve_extend.c ****         }
 4319              		.loc 1 515 13 is_stmt 1 view .LVU1446
 4320              	# sieve_extend.c:515:             bitarray_vector[current_vector] |= quadmask;
 515:sieve_extend.c ****         }
 4321              		.loc 1 515 45 is_stmt 0 view .LVU1447
 4322 1ab1 C525EB00 		vpor	ymm8, ymm11, YMMWORD PTR [rax]	# tmp274, quadmask.61_186, MEM[base: _263, offset: 0B]
 4323 1ab5 C525EB48 		vpor	ymm9, ymm11, YMMWORD PTR 32[rax]	# tmp342, quadmask.61_186, MEM[base: _263, offset: 0B]
 4323      20
 4324 1aba C525EB50 		vpor	ymm10, ymm11, YMMWORD PTR 64[rax]	# tmp345, quadmask.61_186, MEM[base: _263, offset: 0B]
 4324      40
 4325 1abf C525EB60 		vpor	ymm12, ymm11, YMMWORD PTR 96[rax]	# tmp348, quadmask.61_186, MEM[base: _263, offset: 0B]
 4325      60
 4326 1ac4 C525EBA8 		vpor	ymm13, ymm11, YMMWORD PTR 128[rax]	# tmp351, quadmask.61_186, MEM[base: _263, offset: 0B]
 4326      80000000 
 4327 1acc C525EBB0 		vpor	ymm14, ymm11, YMMWORD PTR 160[rax]	# tmp354, quadmask.61_186, MEM[base: _263, offset: 0B]
 4327      A0000000 
 4328 1ad4 C525EBB8 		vpor	ymm15, ymm11, YMMWORD PTR 192[rax]	# tmp357, quadmask.61_186, MEM[base: _263, offset: 0B]
 4328      C0000000 
 4329 1adc C5A5EB80 		vpor	ymm0, ymm11, YMMWORD PTR 224[rax]	# tmp360, quadmask.61_186, MEM[base: _263, offset: 0B]
 4329      E0000000 
 4330              	# sieve_extend.c:514:         for(; current_vector < range_stop_vector; current_vector += step) {
 514:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4331              		.loc 1 514 66 view .LVU1448
 4332 1ae4 4883C208 		add	rdx, 8	# ivtmp.267,
 4333 1ae8 48050001 		add	rax, 256	# ivtmp.278,
 4333      0000
 4334              	# sieve_extend.c:515:             bitarray_vector[current_vector] |= quadmask;
 515:sieve_extend.c ****         }
 4335              		.loc 1 515 45 view .LVU1449
 4336 1aee C57D7F80 		vmovdqa	YMMWORD PTR -256[rax], ymm8	# MEM[base: _263, offset: 0B], tmp274
 4336      00FFFFFF 
 514:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4337              		.loc 1 514 51 is_stmt 1 view .LVU1450
 514:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4338              		.loc 1 514 15 view .LVU1451
 515:sieve_extend.c ****         }
 4339              		.loc 1 515 13 view .LVU1452
 4340              	# sieve_extend.c:515:             bitarray_vector[current_vector] |= quadmask;
 515:sieve_extend.c ****         }
 4341              		.loc 1 515 45 is_stmt 0 view .LVU1453
 4342 1af6 C57D7F88 		vmovdqa	YMMWORD PTR -224[rax], ymm9	# MEM[base: _263, offset: 0B], tmp342
 4342      20FFFFFF 
 514:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4343              		.loc 1 514 51 is_stmt 1 view .LVU1454
 514:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4344              		.loc 1 514 15 view .LVU1455
 515:sieve_extend.c ****         }
 4345              		.loc 1 515 13 view .LVU1456
GAS LISTING /tmp/cc64mrzX.s 			page 127


 4346              	# sieve_extend.c:515:             bitarray_vector[current_vector] |= quadmask;
 515:sieve_extend.c ****         }
 4347              		.loc 1 515 45 is_stmt 0 view .LVU1457
 4348 1afe C57D7F90 		vmovdqa	YMMWORD PTR -192[rax], ymm10	# MEM[base: _263, offset: 0B], tmp345
 4348      40FFFFFF 
 514:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4349              		.loc 1 514 51 is_stmt 1 view .LVU1458
 514:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4350              		.loc 1 514 15 view .LVU1459
 515:sieve_extend.c ****         }
 4351              		.loc 1 515 13 view .LVU1460
 4352              	# sieve_extend.c:515:             bitarray_vector[current_vector] |= quadmask;
 515:sieve_extend.c ****         }
 4353              		.loc 1 515 45 is_stmt 0 view .LVU1461
 4354 1b06 C57D7FA0 		vmovdqa	YMMWORD PTR -160[rax], ymm12	# MEM[base: _263, offset: 0B], tmp348
 4354      60FFFFFF 
 514:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4355              		.loc 1 514 51 is_stmt 1 view .LVU1462
 514:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4356              		.loc 1 514 15 view .LVU1463
 515:sieve_extend.c ****         }
 4357              		.loc 1 515 13 view .LVU1464
 4358              	# sieve_extend.c:515:             bitarray_vector[current_vector] |= quadmask;
 515:sieve_extend.c ****         }
 4359              		.loc 1 515 45 is_stmt 0 view .LVU1465
 4360 1b0e C57D7F68 		vmovdqa	YMMWORD PTR -128[rax], ymm13	# MEM[base: _263, offset: 0B], tmp351
 4360      80
 514:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4361              		.loc 1 514 51 is_stmt 1 view .LVU1466
 514:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4362              		.loc 1 514 15 view .LVU1467
 515:sieve_extend.c ****         }
 4363              		.loc 1 515 13 view .LVU1468
 4364              	# sieve_extend.c:515:             bitarray_vector[current_vector] |= quadmask;
 515:sieve_extend.c ****         }
 4365              		.loc 1 515 45 is_stmt 0 view .LVU1469
 4366 1b13 C57D7F70 		vmovdqa	YMMWORD PTR -96[rax], ymm14	# MEM[base: _263, offset: 0B], tmp354
 4366      A0
 514:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4367              		.loc 1 514 51 is_stmt 1 view .LVU1470
 514:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4368              		.loc 1 514 15 view .LVU1471
 515:sieve_extend.c ****         }
 4369              		.loc 1 515 13 view .LVU1472
 4370              	# sieve_extend.c:515:             bitarray_vector[current_vector] |= quadmask;
 515:sieve_extend.c ****         }
 4371              		.loc 1 515 45 is_stmt 0 view .LVU1473
 4372 1b18 C57D7F78 		vmovdqa	YMMWORD PTR -64[rax], ymm15	# MEM[base: _263, offset: 0B], tmp357
 4372      C0
 514:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4373              		.loc 1 514 51 is_stmt 1 view .LVU1474
 514:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4374              		.loc 1 514 15 view .LVU1475
 515:sieve_extend.c ****         }
 4375              		.loc 1 515 13 view .LVU1476
 4376              	# sieve_extend.c:515:             bitarray_vector[current_vector] |= quadmask;
 515:sieve_extend.c ****         }
GAS LISTING /tmp/cc64mrzX.s 			page 128


 4377              		.loc 1 515 45 is_stmt 0 view .LVU1477
 4378 1b1d C5FD7F40 		vmovdqa	YMMWORD PTR -32[rax], ymm0	# MEM[base: _263, offset: 0B], tmp360
 4378      E0
 514:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4379              		.loc 1 514 51 is_stmt 1 view .LVU1478
 514:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4380              		.loc 1 514 15 view .LVU1479
 4381              	# sieve_extend.c:514:         for(; current_vector < range_stop_vector; current_vector += step) {
 514:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4382              		.loc 1 514 9 is_stmt 0 view .LVU1480
 4383 1b22 4939D0   		cmp	r8, rdx	# range_stop_vector, ivtmp.267
 4384 1b25 758A     		jne	.L289	#,
 4385              	.L437:
 4386              	.LVL164:
 4387              	# sieve_extend.c:514:         for(; current_vector < range_stop_vector; current_vector += step) {
 514:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4388              		.loc 1 514 66 view .LVU1481
 4389 1b27 4C89C2   		mov	rdx, r8	# ivtmp.267, range_stop_vector
 4390              	.LVL165:
 4391              	.L290:
 4392              	.LBB332:
 519:sieve_extend.c ****             counter_t range_stop_word = wordindex(range_stop);
 4393              		.loc 1 519 13 is_stmt 1 view .LVU1482
 4394              	# sieve_extend.c:519:             counter_t index_word = current_vector * VECTOR_ELEMENTS;
 519:sieve_extend.c ****             counter_t range_stop_word = wordindex(range_stop);
 4395              		.loc 1 519 23 is_stmt 0 view .LVU1483
 4396 1b2a 4C8D3495 		lea	r14, 0[0+rdx*4]	# index_word,
 4396      00000000 
 4397              	.LVL166:
 520:sieve_extend.c ****             if (index_word <= range_stop_word) {
 4398              		.loc 1 520 13 is_stmt 1 view .LVU1484
 521:sieve_extend.c ****                 #pragma ivdep
 4399              		.loc 1 521 13 view .LVU1485
 4400              	# sieve_extend.c:521:             if (index_word <= range_stop_word) {
 521:sieve_extend.c ****                 #pragma ivdep
 4401              		.loc 1 521 16 is_stmt 0 view .LVU1486
 4402 1b32 4C39F3   		cmp	rbx, r14	# range_stop_word, index_word
 4403 1b35 7339     		jnb	.L461	#,
 4404              	.LVL167:
 4405              	.L291:
 521:sieve_extend.c ****                 #pragma ivdep
 4406              		.loc 1 521 16 view .LVU1487
 4407              	.LBE332:
 4408              	.LBE329:
 477:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 4409              		.loc 1 477 41 is_stmt 1 view .LVU1488
 4410              	# sieve_extend.c:477:     for (counter_t index = range_start; index < range_stop_unique;) {
 477:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 4411              		.loc 1 477 5 is_stmt 0 view .LVU1489
 4412 1b37 4939F3   		cmp	r11, rsi	# range_stop_unique, range_start
 4413 1b3a 0F8760FB 		ja	.L273	#,
 4413      FFFF
 4414              	.LVL168:
 4415              	.L459:
 477:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 4416              		.loc 1 477 5 view .LVU1490
 4417 1b40 C5F877   		vzeroupper
GAS LISTING /tmp/cc64mrzX.s 			page 129


 4418              	.LVL169:
 4419              	.L266:
 477:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 4420              		.loc 1 477 5 view .LVU1491
 4421              	.LBE328:
 4422              	# sieve_extend.c:531: }
 531:sieve_extend.c **** 
 4423              		.loc 1 531 1 view .LVU1492
 4424 1b43 488B8424 		mov	rax, QWORD PTR 152[rsp]	# tmp562, D.6676
 4424      98000000 
 4425 1b4b 64483304 		xor	rax, QWORD PTR fs:40	# tmp562, MEM[(<address-space-1> long unsigned int *)40B]
 4425      25280000 
 4425      00
 4426 1b54 0F854805 		jne	.L462	#,
 4426      0000
 4427 1b5a 488D65D8 		lea	rsp, -40[rbp]	#,
 4428 1b5e 5B       		pop	rbx	#
 4429 1b5f 415C     		pop	r12	#
 4430 1b61 415D     		pop	r13	#
 4431 1b63 415E     		pop	r14	#
 4432 1b65 415F     		pop	r15	#
 4433 1b67 5D       		pop	rbp	#
 4434              		.cfi_remember_state
 4435              		.cfi_def_cfa 7, 8
 4436 1b68 C3       		ret	
 4437              	.LVL170:
 4438              	.L288:
 4439              		.cfi_restore_state
 4440              	.LBB337:
 4441              	.LBB335:
 518:sieve_extend.c ****             counter_t index_word = current_vector * VECTOR_ELEMENTS;
 4442              		.loc 1 518 9 is_stmt 1 view .LVU1493
 4443              	# sieve_extend.c:518:         if (current_vector == range_stop_vector) {
 518:sieve_extend.c ****             counter_t index_word = current_vector * VECTOR_ELEMENTS;
 4444              		.loc 1 518 12 is_stmt 0 view .LVU1494
 4445 1b69 75CC     		jne	.L291	#,
 4446 1b6b EBBD     		jmp	.L290	#
 4447              	.LVL171:
 4448 1b6d 0F1F00   		.p2align 4,,7
 4449              		.p2align 3
 4450              	.L461:
 4451              	.LBB333:
 523:sieve_extend.c ****                     if (index_word+word <= range_stop_word)
 4452              		.loc 1 523 31 is_stmt 1 view .LVU1495
 524:sieve_extend.c ****                         bitarray_word[index_word+word] |= quadmask[word];
 4453              		.loc 1 524 21 view .LVU1496
 525:sieve_extend.c ****                 }
 4454              		.loc 1 525 25 view .LVU1497
 4455              	# sieve_extend.c:525:                         bitarray_word[index_word+word] |= quadmask[word];
 525:sieve_extend.c ****                 }
 4456              		.loc 1 525 56 is_stmt 0 view .LVU1498
 4457 1b70 4C8B7C24 		mov	r15, QWORD PTR 96[rsp]	# quadmask, quadmask
 4457      60
 4458              	# sieve_extend.c:524:                     if (index_word+word <= range_stop_word)
 524:sieve_extend.c ****                         bitarray_word[index_word+word] |= quadmask[word];
 4459              		.loc 1 524 35 view .LVU1499
 4460 1b75 4D8D6E01 		lea	r13, 1[r14]	# _131,
GAS LISTING /tmp/cc64mrzX.s 			page 130


 4461              	# sieve_extend.c:525:                         bitarray_word[index_word+word] |= quadmask[word];
 525:sieve_extend.c ****                 }
 4462              		.loc 1 525 56 view .LVU1500
 4463 1b79 48C1E205 		sal	rdx, 5	# tmp275,
 4464 1b7d 4C093C17 		or	QWORD PTR [rdi+rdx], r15	# *_144, quadmask
 523:sieve_extend.c ****                     if (index_word+word <= range_stop_word)
 4465              		.loc 1 523 55 is_stmt 1 view .LVU1501
 4466              	.LVL172:
 523:sieve_extend.c ****                     if (index_word+word <= range_stop_word)
 4467              		.loc 1 523 31 view .LVU1502
 524:sieve_extend.c ****                         bitarray_word[index_word+word] |= quadmask[word];
 4468              		.loc 1 524 21 view .LVU1503
 4469              	# sieve_extend.c:524:                     if (index_word+word <= range_stop_word)
 524:sieve_extend.c ****                         bitarray_word[index_word+word] |= quadmask[word];
 4470              		.loc 1 524 24 is_stmt 0 view .LVU1504
 4471 1b81 4C39EB   		cmp	rbx, r13	# range_stop_word, _131
 4472 1b84 7209     		jb	.L293	#,
 525:sieve_extend.c ****                 }
 4473              		.loc 1 525 25 is_stmt 1 view .LVU1505
 4474              	# sieve_extend.c:525:                         bitarray_word[index_word+word] |= quadmask[word];
 525:sieve_extend.c ****                 }
 4475              		.loc 1 525 56 is_stmt 0 view .LVU1506
 4476 1b86 4C8B6424 		mov	r12, QWORD PTR 104[rsp]	# quadmask, quadmask
 4476      68
 4477 1b8b 4E0924EF 		or	QWORD PTR [rdi+r13*8], r12	# *_66, quadmask
 4478              	.L293:
 523:sieve_extend.c ****                     if (index_word+word <= range_stop_word)
 4479              		.loc 1 523 55 is_stmt 1 view .LVU1507
 4480              	.LVL173:
 523:sieve_extend.c ****                     if (index_word+word <= range_stop_word)
 4481              		.loc 1 523 31 view .LVU1508
 524:sieve_extend.c ****                         bitarray_word[index_word+word] |= quadmask[word];
 4482              		.loc 1 524 21 view .LVU1509
 4483              	# sieve_extend.c:524:                     if (index_word+word <= range_stop_word)
 524:sieve_extend.c ****                         bitarray_word[index_word+word] |= quadmask[word];
 4484              		.loc 1 524 35 is_stmt 0 view .LVU1510
 4485 1b8f 498D5602 		lea	rdx, 2[r14]	# _116,
 4486              	# sieve_extend.c:524:                     if (index_word+word <= range_stop_word)
 524:sieve_extend.c ****                         bitarray_word[index_word+word] |= quadmask[word];
 4487              		.loc 1 524 24 view .LVU1511
 4488 1b93 4839D3   		cmp	rbx, rdx	# range_stop_word, _116
 4489 1b96 7209     		jb	.L294	#,
 525:sieve_extend.c ****                 }
 4490              		.loc 1 525 25 is_stmt 1 view .LVU1512
 4491              	# sieve_extend.c:525:                         bitarray_word[index_word+word] |= quadmask[word];
 525:sieve_extend.c ****                 }
 4492              		.loc 1 525 56 is_stmt 0 view .LVU1513
 4493 1b98 488B4C24 		mov	rcx, QWORD PTR 112[rsp]	# quadmask, quadmask
 4493      70
 4494 1b9d 48090CD7 		or	QWORD PTR [rdi+rdx*8], rcx	# *_75, quadmask
 4495              	.L294:
 523:sieve_extend.c ****                     if (index_word+word <= range_stop_word)
 4496              		.loc 1 523 55 is_stmt 1 view .LVU1514
 4497              	.LVL174:
 523:sieve_extend.c ****                     if (index_word+word <= range_stop_word)
 4498              		.loc 1 523 31 view .LVU1515
 524:sieve_extend.c ****                         bitarray_word[index_word+word] |= quadmask[word];
GAS LISTING /tmp/cc64mrzX.s 			page 131


 4499              		.loc 1 524 21 view .LVU1516
 4500              	# sieve_extend.c:524:                     if (index_word+word <= range_stop_word)
 524:sieve_extend.c ****                         bitarray_word[index_word+word] |= quadmask[word];
 4501              		.loc 1 524 35 is_stmt 0 view .LVU1517
 4502 1ba1 4983C603 		add	r14, 3	# _85,
 4503              	.LVL175:
 4504              	# sieve_extend.c:524:                     if (index_word+word <= range_stop_word)
 524:sieve_extend.c ****                         bitarray_word[index_word+word] |= quadmask[word];
 4505              		.loc 1 524 24 view .LVU1518
 4506 1ba5 4939DE   		cmp	r14, rbx	# _85, range_stop_word
 4507 1ba8 778D     		ja	.L291	#,
 525:sieve_extend.c ****                 }
 4508              		.loc 1 525 25 is_stmt 1 view .LVU1519
 4509              	# sieve_extend.c:525:                         bitarray_word[index_word+word] |= quadmask[word];
 525:sieve_extend.c ****                 }
 4510              		.loc 1 525 56 is_stmt 0 view .LVU1520
 4511 1baa 488B4424 		mov	rax, QWORD PTR 120[rsp]	# quadmask, quadmask
 4511      78
 4512 1baf 4A0904F7 		or	QWORD PTR [rdi+r14*8], rax	# *_83, quadmask
 4513 1bb3 EB82     		jmp	.L291	#
 4514              	.LVL176:
 4515              	.L460:
 4516              	# sieve_extend.c:519:             counter_t index_word = current_vector * VECTOR_ELEMENTS;
 519:sieve_extend.c ****             counter_t range_stop_word = wordindex(range_stop);
 4517              		.loc 1 519 23 view .LVU1521
 4518 1bb5 4A8D0485 		lea	rax, 0[0+r8*4]	# index_word,
 4518      00000000 
 4519 1bbd 4C8D0C52 		lea	r9, [rdx+rdx*2]	# tmp239,
 4520              	# sieve_extend.c:524:                     if (index_word+word <= range_stop_word)
 524:sieve_extend.c ****                         bitarray_word[index_word+word] |= quadmask[word];
 4521              		.loc 1 524 35 view .LVU1522
 4522 1bc1 488D5801 		lea	rbx, 1[rax]	# _135,
 4523 1bc5 4C8D7802 		lea	r15, 2[rax]	# _146,
 4524              	# sieve_extend.c:519:             counter_t index_word = current_vector * VECTOR_ELEMENTS;
 519:sieve_extend.c ****             counter_t range_stop_word = wordindex(range_stop);
 4525              		.loc 1 519 23 view .LVU1523
 4526 1bc9 48894424 		mov	QWORD PTR 72[rsp], rax	# %sfp, index_word
 4526      48
 4527              	# sieve_extend.c:524:                     if (index_word+word <= range_stop_word)
 524:sieve_extend.c ****                         bitarray_word[index_word+word] |= quadmask[word];
 4528              		.loc 1 524 35 view .LVU1524
 4529 1bce 4883C003 		add	rax, 3	# _157,
 4530 1bd2 4989D6   		mov	r14, rdx	# _278, step
 4531              	# sieve_extend.c:525:                         bitarray_word[index_word+word] |= quadmask[word];
 525:sieve_extend.c ****                 }
 4532              		.loc 1 525 56 view .LVU1525
 4533 1bd5 4C8D2CC7 		lea	r13, [rdi+rax*8]	# _159,
 4534 1bd9 4889D1   		mov	rcx, rdx	# _285, step
 4535 1bdc 4989D2   		mov	r10, rdx	# _289, step
 4536              	# sieve_extend.c:524:                     if (index_word+word <= range_stop_word)
 524:sieve_extend.c ****                         bitarray_word[index_word+word] |= quadmask[word];
 4537              		.loc 1 524 35 view .LVU1526
 4538 1bdf 48894424 		mov	QWORD PTR 48[rsp], rax	# %sfp, _157
 4538      30
 4539              	# sieve_extend.c:525:                         bitarray_word[index_word+word] |= quadmask[word];
 525:sieve_extend.c ****                 }
 4540              		.loc 1 525 56 view .LVU1527
GAS LISTING /tmp/cc64mrzX.s 			page 132


 4541 1be4 4E8D1CFF 		lea	r11, [rdi+r15*8]	# _148,
 4542              	.LVL177:
 525:sieve_extend.c ****                 }
 4543              		.loc 1 525 56 view .LVU1528
 4544 1be8 49C1E607 		sal	r14, 7	# _278,
 4545 1bec 488D04DF 		lea	rax, [rdi+rbx*8]	# _137,
 4546 1bf0 48C1E105 		sal	rcx, 5	# _285,
 4547 1bf4 49C1E105 		sal	r9, 5	# tmp240,
 4548              	# sieve_extend.c:524:                     if (index_word+word <= range_stop_word)
 524:sieve_extend.c ****                         bitarray_word[index_word+word] |= quadmask[word];
 4549              		.loc 1 524 35 view .LVU1529
 4550 1bf8 48895C24 		mov	QWORD PTR 64[rsp], rbx	# %sfp, _135
 4550      40
 4551 1bfd 4C897C24 		mov	QWORD PTR 56[rsp], r15	# %sfp, _146
 4551      38
 4552              	# sieve_extend.c:525:                         bitarray_word[index_word+word] |= quadmask[word];
 525:sieve_extend.c ****                 }
 4553              		.loc 1 525 56 view .LVU1530
 4554 1c02 4C896C24 		mov	QWORD PTR 40[rsp], r13	# %sfp, _159
 4554      28
 4555 1c07 49C1E206 		sal	r10, 6	# _289,
 4556 1c0b 4C895C24 		mov	QWORD PTR 32[rsp], r11	# %sfp, _148
 4556      20
 4557 1c10 48894424 		mov	QWORD PTR 24[rsp], rax	# %sfp, _137
 4557      18
 4558 1c15 66662E0F 		.p2align 4
 4558      1F840000 
 4558      000000
 4559              		.p2align 3
 4560              	.L284:
 525:sieve_extend.c ****                 }
 4561              		.loc 1 525 56 view .LVU1531
 4562              	.LBE333:
 478:sieve_extend.c ****         register bitvector_t quadmask = { };
 4563              		.loc 1 478 9 is_stmt 1 view .LVU1532
 4564              	# sieve_extend.c:478:         const counter_t current_vector_start_word =  vectorindex(index) << (S
 478:sieve_extend.c ****         register bitvector_t quadmask = { };
 4565              		.loc 1 478 54 is_stmt 0 view .LVU1533
 4566 1c20 4889F0   		mov	rax, rsi	# ivtmp.295, range_start
 4567              	# sieve_extend.c:480:         register counter_t word = wordindex(index) - current_vector_start_wor
 480:sieve_extend.c ****         
 4568              		.loc 1 480 35 view .LVU1534
 4569 1c23 4989F5   		mov	r13, rsi	# tmp242, range_start
 4570              	# sieve_extend.c:478:         const counter_t current_vector_start_word =  vectorindex(index) << (S
 478:sieve_extend.c ****         register bitvector_t quadmask = { };
 4571              		.loc 1 478 54 view .LVU1535
 4572 1c26 48C1E808 		shr	rax, 8	# ivtmp.295,
 4573              	# sieve_extend.c:485:             quadmask[word] |= markmask(index);
 485:sieve_extend.c ****             index += step;
 4574              		.loc 1 485 31 view .LVU1536
 4575 1c2a BB010000 		mov	ebx, 1	# tmp245,
 4575      00
 4576              	# sieve_extend.c:479:         register bitvector_t quadmask = { };
 479:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 4577              		.loc 1 479 30 view .LVU1537
 4578 1c2f C5F9EFC0 		vpxor	xmm0, xmm0, xmm0	# tmp241
 4579              	# sieve_extend.c:478:         const counter_t current_vector_start_word =  vectorindex(index) << (S
GAS LISTING /tmp/cc64mrzX.s 			page 133


 478:sieve_extend.c ****         register bitvector_t quadmask = { };
 4580              		.loc 1 478 25 view .LVU1538
 4581 1c33 4C8D1C85 		lea	r11, 0[0+rax*4]	# current_vector_start_word,
 4581      00000000 
 4582              	.LVL178:
 479:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 4583              		.loc 1 479 9 is_stmt 1 view .LVU1539
 4584              	# sieve_extend.c:480:         register counter_t word = wordindex(index) - current_vector_start_wor
 480:sieve_extend.c ****         
 4585              		.loc 1 480 35 is_stmt 0 view .LVU1540
 4586 1c3b 49C1ED06 		shr	r13, 6	# tmp242,
 4587              	# sieve_extend.c:479:         register bitvector_t quadmask = { };
 479:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 4588              		.loc 1 479 30 view .LVU1541
 4589 1c3f C5FD7F44 		vmovdqa	YMMWORD PTR 96[rsp], ymm0	# quadmask, tmp241
 4589      2460
 480:sieve_extend.c ****         
 4590              		.loc 1 480 9 is_stmt 1 view .LVU1542
 4591              	# sieve_extend.c:480:         register counter_t word = wordindex(index) - current_vector_start_wor
 480:sieve_extend.c ****         
 4592              		.loc 1 480 28 is_stmt 0 view .LVU1543
 4593 1c45 4D29DD   		sub	r13, r11	# word, current_vector_start_word
 4594              	.LVL179:
 4595              	.L274:
 484:sieve_extend.c ****             quadmask[word] |= markmask(index);
 4596              		.loc 1 484 9 is_stmt 1 discriminator 1 view .LVU1544
 485:sieve_extend.c ****             index += step;
 4597              		.loc 1 485 13 discriminator 1 view .LVU1545
 4598              	# sieve_extend.c:485:             quadmask[word] |= markmask(index);
 485:sieve_extend.c ****             index += step;
 4599              		.loc 1 485 31 is_stmt 0 discriminator 1 view .LVU1546
 4600 1c48 C462C9F7 		shlx	r15, rbx, rsi	# tmp244, tmp245, range_start
 4600      FB
 4601              	# sieve_extend.c:486:             index += step;
 486:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4602              		.loc 1 486 19 discriminator 1 view .LVU1547
 4603 1c4d 4801D6   		add	rsi, rdx	# range_start, step
 4604              	# sieve_extend.c:485:             quadmask[word] |= markmask(index);
 485:sieve_extend.c ****             index += step;
 4605              		.loc 1 485 28 discriminator 1 view .LVU1548
 4606 1c50 4E097CEC 		or	QWORD PTR 96[rsp+r13*8], r15	# quadmask, tmp244
 4606      60
 486:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4607              		.loc 1 486 13 is_stmt 1 discriminator 1 view .LVU1549
 487:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4608              		.loc 1 487 13 discriminator 1 view .LVU1550
 4609              	# sieve_extend.c:487:             word = wordindex(index) - current_vector_start_word;
 487:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4610              		.loc 1 487 20 is_stmt 0 discriminator 1 view .LVU1551
 4611 1c55 4989F5   		mov	r13, rsi	# tmp246, range_start
 4612              	.LVL180:
 487:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4613              		.loc 1 487 20 discriminator 1 view .LVU1552
 4614 1c58 49C1ED06 		shr	r13, 6	# tmp246,
 4615              	# sieve_extend.c:487:             word = wordindex(index) - current_vector_start_word;
 487:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4616              		.loc 1 487 18 discriminator 1 view .LVU1553
GAS LISTING /tmp/cc64mrzX.s 			page 134


 4617 1c5c 4D29DD   		sub	r13, r11	# word, current_vector_start_word
 488:sieve_extend.c ****         
 4618              		.loc 1 488 17 is_stmt 1 discriminator 1 view .LVU1554
 4619              	# sieve_extend.c:488:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 488:sieve_extend.c ****         
 4620              		.loc 1 488 9 is_stmt 0 discriminator 1 view .LVU1555
 4621 1c5f 4983FD03 		cmp	r13, 3	# word,
 4622 1c63 0F87D700 		ja	.L439	#,
 4622      0000
 484:sieve_extend.c ****             quadmask[word] |= markmask(index);
 4623              		.loc 1 484 9 is_stmt 1 view .LVU1556
 485:sieve_extend.c ****             index += step;
 4624              		.loc 1 485 13 view .LVU1557
 4625              	# sieve_extend.c:485:             quadmask[word] |= markmask(index);
 485:sieve_extend.c ****             index += step;
 4626              		.loc 1 485 31 is_stmt 0 view .LVU1558
 4627 1c69 C462C9F7 		shlx	r15, rbx, rsi	# tmp465, tmp245, range_start
 4627      FB
 4628              	# sieve_extend.c:486:             index += step;
 486:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4629              		.loc 1 486 19 view .LVU1559
 4630 1c6e 4801D6   		add	rsi, rdx	# range_start, step
 4631              	# sieve_extend.c:485:             quadmask[word] |= markmask(index);
 485:sieve_extend.c ****             index += step;
 4632              		.loc 1 485 28 view .LVU1560
 4633 1c71 4E097CEC 		or	QWORD PTR 96[rsp+r13*8], r15	# quadmask, tmp465
 4633      60
 486:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4634              		.loc 1 486 13 is_stmt 1 view .LVU1561
 487:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4635              		.loc 1 487 13 view .LVU1562
 4636              	# sieve_extend.c:487:             word = wordindex(index) - current_vector_start_word;
 487:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4637              		.loc 1 487 20 is_stmt 0 view .LVU1563
 4638 1c76 4989F5   		mov	r13, rsi	# tmp466, range_start
 4639 1c79 49C1ED06 		shr	r13, 6	# tmp466,
 4640              	# sieve_extend.c:487:             word = wordindex(index) - current_vector_start_word;
 487:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4641              		.loc 1 487 18 view .LVU1564
 4642 1c7d 4D29DD   		sub	r13, r11	# word, current_vector_start_word
 488:sieve_extend.c ****         
 4643              		.loc 1 488 17 is_stmt 1 view .LVU1565
 4644              	# sieve_extend.c:488:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 488:sieve_extend.c ****         
 4645              		.loc 1 488 9 is_stmt 0 view .LVU1566
 4646 1c80 4983FD03 		cmp	r13, 3	# word,
 4647 1c84 0F87B600 		ja	.L439	#,
 4647      0000
 484:sieve_extend.c ****             quadmask[word] |= markmask(index);
 4648              		.loc 1 484 9 is_stmt 1 view .LVU1567
 485:sieve_extend.c ****             index += step;
 4649              		.loc 1 485 13 view .LVU1568
 4650              	# sieve_extend.c:485:             quadmask[word] |= markmask(index);
 485:sieve_extend.c ****             index += step;
 4651              		.loc 1 485 31 is_stmt 0 view .LVU1569
 4652 1c8a C462C9F7 		shlx	r15, rbx, rsi	# tmp468, tmp245, range_start
 4652      FB
GAS LISTING /tmp/cc64mrzX.s 			page 135


 4653              	# sieve_extend.c:486:             index += step;
 486:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4654              		.loc 1 486 19 view .LVU1570
 4655 1c8f 4801D6   		add	rsi, rdx	# range_start, step
 4656              	# sieve_extend.c:485:             quadmask[word] |= markmask(index);
 485:sieve_extend.c ****             index += step;
 4657              		.loc 1 485 28 view .LVU1571
 4658 1c92 4E097CEC 		or	QWORD PTR 96[rsp+r13*8], r15	# quadmask, tmp468
 4658      60
 486:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4659              		.loc 1 486 13 is_stmt 1 view .LVU1572
 487:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4660              		.loc 1 487 13 view .LVU1573
 4661              	# sieve_extend.c:487:             word = wordindex(index) - current_vector_start_word;
 487:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4662              		.loc 1 487 20 is_stmt 0 view .LVU1574
 4663 1c97 4989F5   		mov	r13, rsi	# tmp469, range_start
 4664 1c9a 49C1ED06 		shr	r13, 6	# tmp469,
 4665              	# sieve_extend.c:487:             word = wordindex(index) - current_vector_start_word;
 487:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4666              		.loc 1 487 18 view .LVU1575
 4667 1c9e 4D29DD   		sub	r13, r11	# word, current_vector_start_word
 488:sieve_extend.c ****         
 4668              		.loc 1 488 17 is_stmt 1 view .LVU1576
 4669              	# sieve_extend.c:488:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 488:sieve_extend.c ****         
 4670              		.loc 1 488 9 is_stmt 0 view .LVU1577
 4671 1ca1 4983FD03 		cmp	r13, 3	# word,
 4672 1ca5 0F879500 		ja	.L439	#,
 4672      0000
 484:sieve_extend.c ****             quadmask[word] |= markmask(index);
 4673              		.loc 1 484 9 is_stmt 1 view .LVU1578
 485:sieve_extend.c ****             index += step;
 4674              		.loc 1 485 13 view .LVU1579
 4675              	# sieve_extend.c:485:             quadmask[word] |= markmask(index);
 485:sieve_extend.c ****             index += step;
 4676              		.loc 1 485 31 is_stmt 0 view .LVU1580
 4677 1cab C462C9F7 		shlx	r15, rbx, rsi	# tmp471, tmp245, range_start
 4677      FB
 4678              	# sieve_extend.c:486:             index += step;
 486:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4679              		.loc 1 486 19 view .LVU1581
 4680 1cb0 4801D6   		add	rsi, rdx	# range_start, step
 4681              	# sieve_extend.c:485:             quadmask[word] |= markmask(index);
 485:sieve_extend.c ****             index += step;
 4682              		.loc 1 485 28 view .LVU1582
 4683 1cb3 4E097CEC 		or	QWORD PTR 96[rsp+r13*8], r15	# quadmask, tmp471
 4683      60
 486:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4684              		.loc 1 486 13 is_stmt 1 view .LVU1583
 487:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4685              		.loc 1 487 13 view .LVU1584
 4686              	# sieve_extend.c:487:             word = wordindex(index) - current_vector_start_word;
 487:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4687              		.loc 1 487 20 is_stmt 0 view .LVU1585
 4688 1cb8 4989F5   		mov	r13, rsi	# tmp472, range_start
 4689 1cbb 49C1ED06 		shr	r13, 6	# tmp472,
GAS LISTING /tmp/cc64mrzX.s 			page 136


 4690              	# sieve_extend.c:487:             word = wordindex(index) - current_vector_start_word;
 487:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4691              		.loc 1 487 18 view .LVU1586
 4692 1cbf 4D29DD   		sub	r13, r11	# word, current_vector_start_word
 488:sieve_extend.c ****         
 4693              		.loc 1 488 17 is_stmt 1 view .LVU1587
 4694              	# sieve_extend.c:488:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 488:sieve_extend.c ****         
 4695              		.loc 1 488 9 is_stmt 0 view .LVU1588
 4696 1cc2 4983FD03 		cmp	r13, 3	# word,
 4697 1cc6 7778     		ja	.L439	#,
 484:sieve_extend.c ****             quadmask[word] |= markmask(index);
 4698              		.loc 1 484 9 is_stmt 1 view .LVU1589
 485:sieve_extend.c ****             index += step;
 4699              		.loc 1 485 13 view .LVU1590
 4700              	# sieve_extend.c:485:             quadmask[word] |= markmask(index);
 485:sieve_extend.c ****             index += step;
 4701              		.loc 1 485 31 is_stmt 0 view .LVU1591
 4702 1cc8 C462C9F7 		shlx	r15, rbx, rsi	# tmp474, tmp245, range_start
 4702      FB
 4703              	# sieve_extend.c:486:             index += step;
 486:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4704              		.loc 1 486 19 view .LVU1592
 4705 1ccd 4801D6   		add	rsi, rdx	# range_start, step
 4706              	# sieve_extend.c:485:             quadmask[word] |= markmask(index);
 485:sieve_extend.c ****             index += step;
 4707              		.loc 1 485 28 view .LVU1593
 4708 1cd0 4E097CEC 		or	QWORD PTR 96[rsp+r13*8], r15	# quadmask, tmp474
 4708      60
 486:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4709              		.loc 1 486 13 is_stmt 1 view .LVU1594
 487:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4710              		.loc 1 487 13 view .LVU1595
 4711              	# sieve_extend.c:487:             word = wordindex(index) - current_vector_start_word;
 487:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4712              		.loc 1 487 20 is_stmt 0 view .LVU1596
 4713 1cd5 4989F5   		mov	r13, rsi	# tmp475, range_start
 4714 1cd8 49C1ED06 		shr	r13, 6	# tmp475,
 4715              	# sieve_extend.c:487:             word = wordindex(index) - current_vector_start_word;
 487:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4716              		.loc 1 487 18 view .LVU1597
 4717 1cdc 4D29DD   		sub	r13, r11	# word, current_vector_start_word
 488:sieve_extend.c ****         
 4718              		.loc 1 488 17 is_stmt 1 view .LVU1598
 4719              	# sieve_extend.c:488:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 488:sieve_extend.c ****         
 4720              		.loc 1 488 9 is_stmt 0 view .LVU1599
 4721 1cdf 4983FD03 		cmp	r13, 3	# word,
 4722 1ce3 775B     		ja	.L439	#,
 484:sieve_extend.c ****             quadmask[word] |= markmask(index);
 4723              		.loc 1 484 9 is_stmt 1 view .LVU1600
 485:sieve_extend.c ****             index += step;
 4724              		.loc 1 485 13 view .LVU1601
 4725              	# sieve_extend.c:485:             quadmask[word] |= markmask(index);
 485:sieve_extend.c ****             index += step;
 4726              		.loc 1 485 31 is_stmt 0 view .LVU1602
 4727 1ce5 C462C9F7 		shlx	r15, rbx, rsi	# tmp477, tmp245, range_start
GAS LISTING /tmp/cc64mrzX.s 			page 137


 4727      FB
 4728              	# sieve_extend.c:486:             index += step;
 486:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4729              		.loc 1 486 19 view .LVU1603
 4730 1cea 4801D6   		add	rsi, rdx	# range_start, step
 4731              	# sieve_extend.c:485:             quadmask[word] |= markmask(index);
 485:sieve_extend.c ****             index += step;
 4732              		.loc 1 485 28 view .LVU1604
 4733 1ced 4E097CEC 		or	QWORD PTR 96[rsp+r13*8], r15	# quadmask, tmp477
 4733      60
 486:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4734              		.loc 1 486 13 is_stmt 1 view .LVU1605
 487:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4735              		.loc 1 487 13 view .LVU1606
 4736              	# sieve_extend.c:487:             word = wordindex(index) - current_vector_start_word;
 487:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4737              		.loc 1 487 20 is_stmt 0 view .LVU1607
 4738 1cf2 4989F5   		mov	r13, rsi	# tmp478, range_start
 4739 1cf5 49C1ED06 		shr	r13, 6	# tmp478,
 4740              	# sieve_extend.c:487:             word = wordindex(index) - current_vector_start_word;
 487:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4741              		.loc 1 487 18 view .LVU1608
 4742 1cf9 4D29DD   		sub	r13, r11	# word, current_vector_start_word
 488:sieve_extend.c ****         
 4743              		.loc 1 488 17 is_stmt 1 view .LVU1609
 4744              	# sieve_extend.c:488:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 488:sieve_extend.c ****         
 4745              		.loc 1 488 9 is_stmt 0 view .LVU1610
 4746 1cfc 4983FD03 		cmp	r13, 3	# word,
 4747 1d00 773E     		ja	.L439	#,
 484:sieve_extend.c ****             quadmask[word] |= markmask(index);
 4748              		.loc 1 484 9 is_stmt 1 view .LVU1611
 485:sieve_extend.c ****             index += step;
 4749              		.loc 1 485 13 view .LVU1612
 4750              	# sieve_extend.c:485:             quadmask[word] |= markmask(index);
 485:sieve_extend.c ****             index += step;
 4751              		.loc 1 485 31 is_stmt 0 view .LVU1613
 4752 1d02 C462C9F7 		shlx	r15, rbx, rsi	# tmp480, tmp245, range_start
 4752      FB
 4753              	# sieve_extend.c:486:             index += step;
 486:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4754              		.loc 1 486 19 view .LVU1614
 4755 1d07 4801D6   		add	rsi, rdx	# range_start, step
 4756              	# sieve_extend.c:485:             quadmask[word] |= markmask(index);
 485:sieve_extend.c ****             index += step;
 4757              		.loc 1 485 28 view .LVU1615
 4758 1d0a 4E097CEC 		or	QWORD PTR 96[rsp+r13*8], r15	# quadmask, tmp480
 4758      60
 486:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4759              		.loc 1 486 13 is_stmt 1 view .LVU1616
 487:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4760              		.loc 1 487 13 view .LVU1617
 4761              	# sieve_extend.c:487:             word = wordindex(index) - current_vector_start_word;
 487:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4762              		.loc 1 487 20 is_stmt 0 view .LVU1618
 4763 1d0f 4989F5   		mov	r13, rsi	# tmp481, range_start
 4764 1d12 49C1ED06 		shr	r13, 6	# tmp481,
GAS LISTING /tmp/cc64mrzX.s 			page 138


 4765              	# sieve_extend.c:487:             word = wordindex(index) - current_vector_start_word;
 487:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4766              		.loc 1 487 18 view .LVU1619
 4767 1d16 4D29DD   		sub	r13, r11	# word, current_vector_start_word
 488:sieve_extend.c ****         
 4768              		.loc 1 488 17 is_stmt 1 view .LVU1620
 4769              	# sieve_extend.c:488:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 488:sieve_extend.c ****         
 4770              		.loc 1 488 9 is_stmt 0 view .LVU1621
 4771 1d19 4983FD03 		cmp	r13, 3	# word,
 4772 1d1d 7721     		ja	.L439	#,
 484:sieve_extend.c ****             quadmask[word] |= markmask(index);
 4773              		.loc 1 484 9 is_stmt 1 view .LVU1622
 485:sieve_extend.c ****             index += step;
 4774              		.loc 1 485 13 view .LVU1623
 4775              	# sieve_extend.c:485:             quadmask[word] |= markmask(index);
 485:sieve_extend.c ****             index += step;
 4776              		.loc 1 485 31 is_stmt 0 view .LVU1624
 4777 1d1f C462C9F7 		shlx	r15, rbx, rsi	# tmp483, tmp245, range_start
 4777      FB
 4778              	# sieve_extend.c:486:             index += step;
 486:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4779              		.loc 1 486 19 view .LVU1625
 4780 1d24 4801D6   		add	rsi, rdx	# range_start, step
 4781              	# sieve_extend.c:485:             quadmask[word] |= markmask(index);
 485:sieve_extend.c ****             index += step;
 4782              		.loc 1 485 28 view .LVU1626
 4783 1d27 4E097CEC 		or	QWORD PTR 96[rsp+r13*8], r15	# quadmask, tmp483
 4783      60
 486:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4784              		.loc 1 486 13 is_stmt 1 view .LVU1627
 487:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4785              		.loc 1 487 13 view .LVU1628
 4786              	# sieve_extend.c:487:             word = wordindex(index) - current_vector_start_word;
 487:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4787              		.loc 1 487 20 is_stmt 0 view .LVU1629
 4788 1d2c 4989F5   		mov	r13, rsi	# tmp484, range_start
 4789 1d2f 49C1ED06 		shr	r13, 6	# tmp484,
 4790              	.LVL181:
 4791              	# sieve_extend.c:487:             word = wordindex(index) - current_vector_start_word;
 487:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4792              		.loc 1 487 18 view .LVU1630
 4793 1d33 4D29DD   		sub	r13, r11	# word, current_vector_start_word
 4794              	.LVL182:
 488:sieve_extend.c ****         
 4795              		.loc 1 488 17 is_stmt 1 view .LVU1631
 4796              	# sieve_extend.c:488:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 488:sieve_extend.c ****         
 4797              		.loc 1 488 9 is_stmt 0 view .LVU1632
 4798 1d36 4983FD03 		cmp	r13, 3	# word,
 4799 1d3a 0F8608FF 		jbe	.L274	#,
 4799      FFFF
 4800              	.LVL183:
 4801              		.p2align 4
 4802              		.p2align 3
 4803              	.L439:
 491:sieve_extend.c ****         const counter_t range_stop_vector = vectorindex(range_stop);
GAS LISTING /tmp/cc64mrzX.s 			page 139


 4804              		.loc 1 491 9 is_stmt 1 view .LVU1633
 492:sieve_extend.c ****         
 4805              		.loc 1 492 9 view .LVU1634
 506:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 4806              		.loc 1 506 9 view .LVU1635
 506:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 4807              		.loc 1 506 15 view .LVU1636
 4808              	# sieve_extend.c:506:         for(; current_vector+step_4 < range_stop_vector; current_vector += st
 506:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 4809              		.loc 1 506 29 is_stmt 0 view .LVU1637
 4810 1d40 4A8D1C20 		lea	rbx, [rax+r12]	# ivtmp.295,
 4811              	# sieve_extend.c:506:         for(; current_vector+step_4 < range_stop_vector; current_vector += st
 506:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 4812              		.loc 1 506 9 view .LVU1638
 4813 1d44 4C39C3   		cmp	rbx, r8	# ivtmp.295, range_stop_vector
 4814 1d47 0F831301 		jnb	.L275	#,
 4814      0000
 4815 1d4d 48C1E005 		sal	rax, 5	# tmp247,
 4816              	# sieve_extend.c:507:             bitarray_vector[current_vector       ] |= quadmask;
 507:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= quadmask;
 4817              		.loc 1 507 52 view .LVU1639
 4818 1d51 C5FD6F54 		vmovdqa	ymm2, YMMWORD PTR 96[rsp]	# quadmask.57_42, quadmask
 4818      2460
 4819 1d57 4C8D1C07 		lea	r11, [rdi+rax]	# ivtmp.296,
 4820              	.LVL184:
 4821              	.L276:
 507:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= quadmask;
 4822              		.loc 1 507 13 is_stmt 1 discriminator 2 view .LVU1640
 4823              	# sieve_extend.c:507:             bitarray_vector[current_vector       ] |= quadmask;
 507:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= quadmask;
 4824              		.loc 1 507 52 is_stmt 0 discriminator 2 view .LVU1641
 4825 1d5b C4C16DEB 		vpor	ymm1, ymm2, YMMWORD PTR [r11]	# tmp248, quadmask.57_42, MEM[base: _282, offset: 0B]
 4825      0B
 4826 1d60 4889D8   		mov	rax, rbx	# ivtmp.295, ivtmp.295
 4827 1d63 C4C17D7F 		vmovdqa	YMMWORD PTR [r11], ymm1	# MEM[base: _282, offset: 0B], tmp248
 4827      0B
 508:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= quadmask;
 4828              		.loc 1 508 13 is_stmt 1 discriminator 2 view .LVU1642
 4829 1d68 4A8D1C23 		lea	rbx, [rbx+r12]	# ivtmp.295,
 4830              	# sieve_extend.c:508:             bitarray_vector[current_vector+step  ] |= quadmask;
 508:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= quadmask;
 4831              		.loc 1 508 52 is_stmt 0 discriminator 2 view .LVU1643
 4832 1d6c C4C16DEB 		vpor	ymm3, ymm2, YMMWORD PTR [r11+rcx]	# tmp249, quadmask.57_42, MEM[base: _282, index: _285, offs
 4832      1C0B
 4833 1d72 C4C17D7F 		vmovdqa	YMMWORD PTR [r11+rcx], ymm3	# MEM[base: _282, index: _285, offset: 0B], tmp249
 4833      1C0B
 509:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= quadmask;
 4834              		.loc 1 509 13 is_stmt 1 discriminator 2 view .LVU1644
 4835              	# sieve_extend.c:509:             bitarray_vector[current_vector+step_2] |= quadmask;
 509:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= quadmask;
 4836              		.loc 1 509 52 is_stmt 0 discriminator 2 view .LVU1645
 4837 1d78 C4816DEB 		vpor	ymm4, ymm2, YMMWORD PTR [r11+r10]	# tmp250, quadmask.57_42, MEM[base: _282, index: _289, offs
 4837      2413
 4838 1d7e C4817D7F 		vmovdqa	YMMWORD PTR [r11+r10], ymm4	# MEM[base: _282, index: _289, offset: 0B], tmp250
 4838      2413
 510:sieve_extend.c ****         }
 4839              		.loc 1 510 13 is_stmt 1 discriminator 2 view .LVU1646
GAS LISTING /tmp/cc64mrzX.s 			page 140


 4840              	# sieve_extend.c:510:             bitarray_vector[current_vector+step_3] |= quadmask;
 510:sieve_extend.c ****         }
 4841              		.loc 1 510 52 is_stmt 0 discriminator 2 view .LVU1647
 4842 1d84 C4816DEB 		vpor	ymm5, ymm2, YMMWORD PTR [r11+r9]	# tmp251, quadmask.57_42, MEM[base: _282, index: _293, offse
 4842      2C0B
 4843 1d8a C4817D7F 		vmovdqa	YMMWORD PTR [r11+r9], ymm5	# MEM[base: _282, index: _293, offset: 0B], tmp251
 4843      2C0B
 506:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 4844              		.loc 1 506 58 is_stmt 1 discriminator 2 view .LVU1648
 4845              	.LVL185:
 506:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 4846              		.loc 1 506 15 discriminator 2 view .LVU1649
 4847 1d90 4D01F3   		add	r11, r14	# ivtmp.296, _278
 4848              	# sieve_extend.c:506:         for(; current_vector+step_4 < range_stop_vector; current_vector += st
 506:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 4849              		.loc 1 506 9 is_stmt 0 discriminator 2 view .LVU1650
 4850 1d93 4939D8   		cmp	r8, rbx	# range_stop_vector, ivtmp.295
 4851 1d96 0F86C400 		jbe	.L275	#,
 4851      0000
 507:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= quadmask;
 4852              		.loc 1 507 13 is_stmt 1 view .LVU1651
 4853              	# sieve_extend.c:507:             bitarray_vector[current_vector       ] |= quadmask;
 507:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= quadmask;
 4854              		.loc 1 507 52 is_stmt 0 view .LVU1652
 4855 1d9c C4C16DEB 		vpor	ymm6, ymm2, YMMWORD PTR [r11]	# tmp449, quadmask.57_42, MEM[base: _282, offset: 0B]
 4855      33
 4856 1da1 4E8D3C23 		lea	r15, [rbx+r12]	# ivtmp.295,
 4857 1da5 C4C17D7F 		vmovdqa	YMMWORD PTR [r11], ymm6	# MEM[base: _282, offset: 0B], tmp449
 4857      33
 508:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= quadmask;
 4858              		.loc 1 508 13 is_stmt 1 view .LVU1653
 4859 1daa 4889D8   		mov	rax, rbx	# ivtmp.295, ivtmp.295
 4860              	.LVL186:
 4861              	# sieve_extend.c:508:             bitarray_vector[current_vector+step  ] |= quadmask;
 508:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= quadmask;
 4862              		.loc 1 508 52 is_stmt 0 view .LVU1654
 4863 1dad C4C16DEB 		vpor	ymm7, ymm2, YMMWORD PTR [r11+rcx]	# tmp450, quadmask.57_42, MEM[base: _282, index: _285, offs
 4863      3C0B
 4864 1db3 C4C17D7F 		vmovdqa	YMMWORD PTR [r11+rcx], ymm7	# MEM[base: _282, index: _285, offset: 0B], tmp450
 4864      3C0B
 509:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= quadmask;
 4865              		.loc 1 509 13 is_stmt 1 view .LVU1655
 4866              	# sieve_extend.c:509:             bitarray_vector[current_vector+step_2] |= quadmask;
 509:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= quadmask;
 4867              		.loc 1 509 52 is_stmt 0 view .LVU1656
 4868 1db9 C4016DEB 		vpor	ymm8, ymm2, YMMWORD PTR [r11+r10]	# tmp451, quadmask.57_42, MEM[base: _282, index: _289, offs
 4868      0413
 4869 1dbf C4017D7F 		vmovdqa	YMMWORD PTR [r11+r10], ymm8	# MEM[base: _282, index: _289, offset: 0B], tmp451
 4869      0413
 510:sieve_extend.c ****         }
 4870              		.loc 1 510 13 is_stmt 1 view .LVU1657
 4871              	# sieve_extend.c:510:             bitarray_vector[current_vector+step_3] |= quadmask;
 510:sieve_extend.c ****         }
 4872              		.loc 1 510 52 is_stmt 0 view .LVU1658
 4873 1dc5 C4016DEB 		vpor	ymm9, ymm2, YMMWORD PTR [r11+r9]	# tmp452, quadmask.57_42, MEM[base: _282, index: _293, offse
 4873      0C0B
 4874 1dcb C4017D7F 		vmovdqa	YMMWORD PTR [r11+r9], ymm9	# MEM[base: _282, index: _293, offset: 0B], tmp452
GAS LISTING /tmp/cc64mrzX.s 			page 141


 4874      0C0B
 506:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 4875              		.loc 1 506 58 is_stmt 1 view .LVU1659
 506:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 4876              		.loc 1 506 15 view .LVU1660
 4877 1dd1 4D01F3   		add	r11, r14	# ivtmp.296, _278
 4878              	# sieve_extend.c:506:         for(; current_vector+step_4 < range_stop_vector; current_vector += st
 506:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 4879              		.loc 1 506 9 is_stmt 0 view .LVU1661
 4880 1dd4 4D39F8   		cmp	r8, r15	# range_stop_vector, ivtmp.295
 4881 1dd7 0F868300 		jbe	.L275	#,
 4881      0000
 507:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= quadmask;
 4882              		.loc 1 507 13 is_stmt 1 view .LVU1662
 4883              	# sieve_extend.c:507:             bitarray_vector[current_vector       ] |= quadmask;
 507:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= quadmask;
 4884              		.loc 1 507 52 is_stmt 0 view .LVU1663
 4885 1ddd C4416DEB 		vpor	ymm10, ymm2, YMMWORD PTR [r11]	# tmp455, quadmask.57_42, MEM[base: _282, offset: 0B]
 4885      13
 4886 1de2 4F8D2C27 		lea	r13, [r15+r12]	# ivtmp.295,
 4887 1de6 C4417D7F 		vmovdqa	YMMWORD PTR [r11], ymm10	# MEM[base: _282, offset: 0B], tmp455
 4887      13
 508:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= quadmask;
 4888              		.loc 1 508 13 is_stmt 1 view .LVU1664
 4889 1deb 4C89F8   		mov	rax, r15	# ivtmp.295, ivtmp.295
 4890              	# sieve_extend.c:508:             bitarray_vector[current_vector+step  ] |= quadmask;
 508:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= quadmask;
 4891              		.loc 1 508 52 is_stmt 0 view .LVU1665
 4892 1dee C4416DEB 		vpor	ymm11, ymm2, YMMWORD PTR [r11+rcx]	# tmp456, quadmask.57_42, MEM[base: _282, index: _285, off
 4892      1C0B
 4893 1df4 C4417D7F 		vmovdqa	YMMWORD PTR [r11+rcx], ymm11	# MEM[base: _282, index: _285, offset: 0B], tmp456
 4893      1C0B
 509:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= quadmask;
 4894              		.loc 1 509 13 is_stmt 1 view .LVU1666
 4895              	# sieve_extend.c:509:             bitarray_vector[current_vector+step_2] |= quadmask;
 509:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= quadmask;
 4896              		.loc 1 509 52 is_stmt 0 view .LVU1667
 4897 1dfa C4016DEB 		vpor	ymm12, ymm2, YMMWORD PTR [r11+r10]	# tmp457, quadmask.57_42, MEM[base: _282, index: _289, off
 4897      2413
 4898 1e00 C4017D7F 		vmovdqa	YMMWORD PTR [r11+r10], ymm12	# MEM[base: _282, index: _289, offset: 0B], tmp457
 4898      2413
 510:sieve_extend.c ****         }
 4899              		.loc 1 510 13 is_stmt 1 view .LVU1668
 4900              	# sieve_extend.c:510:             bitarray_vector[current_vector+step_3] |= quadmask;
 510:sieve_extend.c ****         }
 4901              		.loc 1 510 52 is_stmt 0 view .LVU1669
 4902 1e06 C4016DEB 		vpor	ymm13, ymm2, YMMWORD PTR [r11+r9]	# tmp458, quadmask.57_42, MEM[base: _282, index: _293, offs
 4902      2C0B
 4903 1e0c C4017D7F 		vmovdqa	YMMWORD PTR [r11+r9], ymm13	# MEM[base: _282, index: _293, offset: 0B], tmp458
 4903      2C0B
 506:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 4904              		.loc 1 506 58 is_stmt 1 view .LVU1670
 506:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 4905              		.loc 1 506 15 view .LVU1671
 4906 1e12 4D01F3   		add	r11, r14	# ivtmp.296, _278
 4907              	# sieve_extend.c:506:         for(; current_vector+step_4 < range_stop_vector; current_vector += st
 506:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
GAS LISTING /tmp/cc64mrzX.s 			page 142


 4908              		.loc 1 506 9 is_stmt 0 view .LVU1672
 4909 1e15 4D39E8   		cmp	r8, r13	# range_stop_vector, ivtmp.295
 4910 1e18 7646     		jbe	.L275	#,
 507:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= quadmask;
 4911              		.loc 1 507 13 is_stmt 1 view .LVU1673
 4912              	# sieve_extend.c:507:             bitarray_vector[current_vector       ] |= quadmask;
 507:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= quadmask;
 4913              		.loc 1 507 52 is_stmt 0 view .LVU1674
 4914 1e1a C4416DEB 		vpor	ymm14, ymm2, YMMWORD PTR [r11]	# tmp461, quadmask.57_42, MEM[base: _282, offset: 0B]
 4914      33
 4915 1e1f 4B8D5C25 		lea	rbx, 0[r13+r12]	# ivtmp.295,
 4915      00
 4916 1e24 C4417D7F 		vmovdqa	YMMWORD PTR [r11], ymm14	# MEM[base: _282, offset: 0B], tmp461
 4916      33
 508:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= quadmask;
 4917              		.loc 1 508 13 is_stmt 1 view .LVU1675
 4918 1e29 4C89E8   		mov	rax, r13	# ivtmp.295, ivtmp.295
 4919              	# sieve_extend.c:508:             bitarray_vector[current_vector+step  ] |= quadmask;
 508:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= quadmask;
 4920              		.loc 1 508 52 is_stmt 0 view .LVU1676
 4921 1e2c C4416DEB 		vpor	ymm15, ymm2, YMMWORD PTR [r11+rcx]	# tmp462, quadmask.57_42, MEM[base: _282, index: _285, off
 4921      3C0B
 4922 1e32 C4417D7F 		vmovdqa	YMMWORD PTR [r11+rcx], ymm15	# MEM[base: _282, index: _285, offset: 0B], tmp462
 4922      3C0B
 509:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= quadmask;
 4923              		.loc 1 509 13 is_stmt 1 view .LVU1677
 4924              	# sieve_extend.c:509:             bitarray_vector[current_vector+step_2] |= quadmask;
 509:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= quadmask;
 4925              		.loc 1 509 52 is_stmt 0 view .LVU1678
 4926 1e38 C4816DEB 		vpor	ymm0, ymm2, YMMWORD PTR [r11+r10]	# tmp463, quadmask.57_42, MEM[base: _282, index: _289, offs
 4926      0413
 4927 1e3e C4817D7F 		vmovdqa	YMMWORD PTR [r11+r10], ymm0	# MEM[base: _282, index: _289, offset: 0B], tmp463
 4927      0413
 510:sieve_extend.c ****         }
 4928              		.loc 1 510 13 is_stmt 1 view .LVU1679
 4929              	# sieve_extend.c:510:             bitarray_vector[current_vector+step_3] |= quadmask;
 510:sieve_extend.c ****         }
 4930              		.loc 1 510 52 is_stmt 0 view .LVU1680
 4931 1e44 C4816DEB 		vpor	ymm1, ymm2, YMMWORD PTR [r11+r9]	# tmp464, quadmask.57_42, MEM[base: _282, index: _293, offse
 4931      0C0B
 4932 1e4a C4817D7F 		vmovdqa	YMMWORD PTR [r11+r9], ymm1	# MEM[base: _282, index: _293, offset: 0B], tmp464
 4932      0C0B
 506:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 4933              		.loc 1 506 58 is_stmt 1 view .LVU1681
 506:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 4934              		.loc 1 506 15 view .LVU1682
 4935              	.LVL187:
 506:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 4936              		.loc 1 506 15 is_stmt 0 view .LVU1683
 4937 1e50 4D01F3   		add	r11, r14	# ivtmp.296, _278
 4938              	# sieve_extend.c:506:         for(; current_vector+step_4 < range_stop_vector; current_vector += st
 506:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 4939              		.loc 1 506 9 view .LVU1684
 4940 1e53 4939D8   		cmp	r8, rbx	# range_stop_vector, ivtmp.295
 4941 1e56 0F87FFFE 		ja	.L276	#,
 4941      FFFF
 4942              	.LVL188:
GAS LISTING /tmp/cc64mrzX.s 			page 143


 4943 1e5c 0F1F4000 		.p2align 4
 4944              		.p2align 3
 4945              	.L275:
 514:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4946              		.loc 1 514 15 is_stmt 1 view .LVU1685
 4947              	# sieve_extend.c:514:         for(; current_vector < range_stop_vector; current_vector += step) {
 514:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4948              		.loc 1 514 9 is_stmt 0 view .LVU1686
 4949 1e60 4939C0   		cmp	r8, rax	# range_stop_vector, ivtmp.295
 4950 1e63 0F86C700 		jbe	.L277	#,
 4950      0000
 4951              	# sieve_extend.c:515:             bitarray_vector[current_vector] |= quadmask;
 515:sieve_extend.c ****         }
 4952              		.loc 1 515 45 view .LVU1687
 4953 1e69 C5FD6F54 		vmovdqa	ymm2, YMMWORD PTR 96[rsp]	# quadmask.61_63, quadmask
 4953      2460
 4954 1e6f 4989C3   		mov	r11, rax	# tmp252, ivtmp.295
 4955 1e72 49C1E305 		sal	r11, 5	# tmp252,
 4956 1e76 4901FB   		add	r11, rdi	# ivtmp.290, bitarray_word
 4957              	.L278:
 515:sieve_extend.c ****         }
 4958              		.loc 1 515 13 is_stmt 1 discriminator 2 view .LVU1688
 4959              	# sieve_extend.c:515:             bitarray_vector[current_vector] |= quadmask;
 515:sieve_extend.c ****         }
 4960              		.loc 1 515 45 is_stmt 0 discriminator 2 view .LVU1689
 4961 1e79 C4C16DEB 		vpor	ymm3, ymm2, YMMWORD PTR [r11]	# tmp253, quadmask.61_63, MEM[base: _272, offset: 0B]
 4961      1B
 4962              	# sieve_extend.c:514:         for(; current_vector < range_stop_vector; current_vector += step) {
 514:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4963              		.loc 1 514 66 discriminator 2 view .LVU1690
 4964 1e7e 4801D0   		add	rax, rdx	# ivtmp.295, step
 4965              	# sieve_extend.c:515:             bitarray_vector[current_vector] |= quadmask;
 515:sieve_extend.c ****         }
 4966              		.loc 1 515 45 discriminator 2 view .LVU1691
 4967 1e81 C4C17D7F 		vmovdqa	YMMWORD PTR [r11], ymm3	# MEM[base: _272, offset: 0B], tmp253
 4967      1B
 514:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4968              		.loc 1 514 51 is_stmt 1 discriminator 2 view .LVU1692
 514:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4969              		.loc 1 514 15 discriminator 2 view .LVU1693
 4970 1e86 4901CB   		add	r11, rcx	# ivtmp.290, _285
 4971              	# sieve_extend.c:514:         for(; current_vector < range_stop_vector; current_vector += step) {
 514:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4972              		.loc 1 514 9 is_stmt 0 discriminator 2 view .LVU1694
 4973 1e89 4939C0   		cmp	r8, rax	# range_stop_vector, ivtmp.295
 4974 1e8c 0F869E00 		jbe	.L277	#,
 4974      0000
 515:sieve_extend.c ****         }
 4975              		.loc 1 515 13 is_stmt 1 view .LVU1695
 4976              	# sieve_extend.c:515:             bitarray_vector[current_vector] |= quadmask;
 515:sieve_extend.c ****         }
 4977              		.loc 1 515 45 is_stmt 0 view .LVU1696
 4978 1e92 C4C16DEB 		vpor	ymm4, ymm2, YMMWORD PTR [r11]	# tmp436, quadmask.61_63, MEM[base: _272, offset: 0B]
 4978      23
 4979              	# sieve_extend.c:514:         for(; current_vector < range_stop_vector; current_vector += step) {
 514:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4980              		.loc 1 514 66 view .LVU1697
GAS LISTING /tmp/cc64mrzX.s 			page 144


 4981 1e97 4801D0   		add	rax, rdx	# ivtmp.295, step
 4982              	# sieve_extend.c:515:             bitarray_vector[current_vector] |= quadmask;
 515:sieve_extend.c ****         }
 4983              		.loc 1 515 45 view .LVU1698
 4984 1e9a C4C17D7F 		vmovdqa	YMMWORD PTR [r11], ymm4	# MEM[base: _272, offset: 0B], tmp436
 4984      23
 514:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4985              		.loc 1 514 51 is_stmt 1 view .LVU1699
 514:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4986              		.loc 1 514 15 view .LVU1700
 4987 1e9f 4901CB   		add	r11, rcx	# ivtmp.290, _285
 4988              	# sieve_extend.c:514:         for(; current_vector < range_stop_vector; current_vector += step) {
 514:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4989              		.loc 1 514 9 is_stmt 0 view .LVU1701
 4990 1ea2 4939C0   		cmp	r8, rax	# range_stop_vector, ivtmp.295
 4991 1ea5 0F868500 		jbe	.L277	#,
 4991      0000
 515:sieve_extend.c ****         }
 4992              		.loc 1 515 13 is_stmt 1 view .LVU1702
 4993              	# sieve_extend.c:515:             bitarray_vector[current_vector] |= quadmask;
 515:sieve_extend.c ****         }
 4994              		.loc 1 515 45 is_stmt 0 view .LVU1703
 4995 1eab C4C16DEB 		vpor	ymm5, ymm2, YMMWORD PTR [r11]	# tmp438, quadmask.61_63, MEM[base: _272, offset: 0B]
 4995      2B
 4996              	# sieve_extend.c:514:         for(; current_vector < range_stop_vector; current_vector += step) {
 514:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4997              		.loc 1 514 66 view .LVU1704
 4998 1eb0 4801D0   		add	rax, rdx	# ivtmp.295, step
 4999              	# sieve_extend.c:515:             bitarray_vector[current_vector] |= quadmask;
 515:sieve_extend.c ****         }
 5000              		.loc 1 515 45 view .LVU1705
 5001 1eb3 C4C17D7F 		vmovdqa	YMMWORD PTR [r11], ymm5	# MEM[base: _272, offset: 0B], tmp438
 5001      2B
 514:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 5002              		.loc 1 514 51 is_stmt 1 view .LVU1706
 514:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 5003              		.loc 1 514 15 view .LVU1707
 5004 1eb8 4901CB   		add	r11, rcx	# ivtmp.290, _285
 5005              	# sieve_extend.c:514:         for(; current_vector < range_stop_vector; current_vector += step) {
 514:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 5006              		.loc 1 514 9 is_stmt 0 view .LVU1708
 5007 1ebb 4939C0   		cmp	r8, rax	# range_stop_vector, ivtmp.295
 5008 1ebe 7670     		jbe	.L277	#,
 515:sieve_extend.c ****         }
 5009              		.loc 1 515 13 is_stmt 1 view .LVU1709
 5010              	# sieve_extend.c:515:             bitarray_vector[current_vector] |= quadmask;
 515:sieve_extend.c ****         }
 5011              		.loc 1 515 45 is_stmt 0 view .LVU1710
 5012 1ec0 C4C16DEB 		vpor	ymm6, ymm2, YMMWORD PTR [r11]	# tmp440, quadmask.61_63, MEM[base: _272, offset: 0B]
 5012      33
 5013              	# sieve_extend.c:514:         for(; current_vector < range_stop_vector; current_vector += step) {
 514:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 5014              		.loc 1 514 66 view .LVU1711
 5015 1ec5 4801D0   		add	rax, rdx	# ivtmp.295, step
 5016              	# sieve_extend.c:515:             bitarray_vector[current_vector] |= quadmask;
 515:sieve_extend.c ****         }
 5017              		.loc 1 515 45 view .LVU1712
GAS LISTING /tmp/cc64mrzX.s 			page 145


 5018 1ec8 C4C17D7F 		vmovdqa	YMMWORD PTR [r11], ymm6	# MEM[base: _272, offset: 0B], tmp440
 5018      33
 514:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 5019              		.loc 1 514 51 is_stmt 1 view .LVU1713
 514:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 5020              		.loc 1 514 15 view .LVU1714
 5021 1ecd 4901CB   		add	r11, rcx	# ivtmp.290, _285
 5022              	# sieve_extend.c:514:         for(; current_vector < range_stop_vector; current_vector += step) {
 514:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 5023              		.loc 1 514 9 is_stmt 0 view .LVU1715
 5024 1ed0 4939C0   		cmp	r8, rax	# range_stop_vector, ivtmp.295
 5025 1ed3 765B     		jbe	.L277	#,
 515:sieve_extend.c ****         }
 5026              		.loc 1 515 13 is_stmt 1 view .LVU1716
 5027              	# sieve_extend.c:515:             bitarray_vector[current_vector] |= quadmask;
 515:sieve_extend.c ****         }
 5028              		.loc 1 515 45 is_stmt 0 view .LVU1717
 5029 1ed5 C4C16DEB 		vpor	ymm7, ymm2, YMMWORD PTR [r11]	# tmp442, quadmask.61_63, MEM[base: _272, offset: 0B]
 5029      3B
 5030              	# sieve_extend.c:514:         for(; current_vector < range_stop_vector; current_vector += step) {
 514:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 5031              		.loc 1 514 66 view .LVU1718
 5032 1eda 4801D0   		add	rax, rdx	# ivtmp.295, step
 5033              	# sieve_extend.c:515:             bitarray_vector[current_vector] |= quadmask;
 515:sieve_extend.c ****         }
 5034              		.loc 1 515 45 view .LVU1719
 5035 1edd C4C17D7F 		vmovdqa	YMMWORD PTR [r11], ymm7	# MEM[base: _272, offset: 0B], tmp442
 5035      3B
 514:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 5036              		.loc 1 514 51 is_stmt 1 view .LVU1720
 514:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 5037              		.loc 1 514 15 view .LVU1721
 5038 1ee2 4901CB   		add	r11, rcx	# ivtmp.290, _285
 5039              	# sieve_extend.c:514:         for(; current_vector < range_stop_vector; current_vector += step) {
 514:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 5040              		.loc 1 514 9 is_stmt 0 view .LVU1722
 5041 1ee5 4939C0   		cmp	r8, rax	# range_stop_vector, ivtmp.295
 5042 1ee8 7646     		jbe	.L277	#,
 515:sieve_extend.c ****         }
 5043              		.loc 1 515 13 is_stmt 1 view .LVU1723
 5044              	# sieve_extend.c:515:             bitarray_vector[current_vector] |= quadmask;
 515:sieve_extend.c ****         }
 5045              		.loc 1 515 45 is_stmt 0 view .LVU1724
 5046 1eea C4416DEB 		vpor	ymm8, ymm2, YMMWORD PTR [r11]	# tmp444, quadmask.61_63, MEM[base: _272, offset: 0B]
 5046      03
 5047              	# sieve_extend.c:514:         for(; current_vector < range_stop_vector; current_vector += step) {
 514:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 5048              		.loc 1 514 66 view .LVU1725
 5049 1eef 4801D0   		add	rax, rdx	# ivtmp.295, step
 5050              	# sieve_extend.c:515:             bitarray_vector[current_vector] |= quadmask;
 515:sieve_extend.c ****         }
 5051              		.loc 1 515 45 view .LVU1726
 5052 1ef2 C4417D7F 		vmovdqa	YMMWORD PTR [r11], ymm8	# MEM[base: _272, offset: 0B], tmp444
 5052      03
 514:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 5053              		.loc 1 514 51 is_stmt 1 view .LVU1727
 514:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
GAS LISTING /tmp/cc64mrzX.s 			page 146


 5054              		.loc 1 514 15 view .LVU1728
 5055 1ef7 4901CB   		add	r11, rcx	# ivtmp.290, _285
 5056              	# sieve_extend.c:514:         for(; current_vector < range_stop_vector; current_vector += step) {
 514:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 5057              		.loc 1 514 9 is_stmt 0 view .LVU1729
 5058 1efa 4939C0   		cmp	r8, rax	# range_stop_vector, ivtmp.295
 5059 1efd 7631     		jbe	.L277	#,
 515:sieve_extend.c ****         }
 5060              		.loc 1 515 13 is_stmt 1 view .LVU1730
 5061              	# sieve_extend.c:515:             bitarray_vector[current_vector] |= quadmask;
 515:sieve_extend.c ****         }
 5062              		.loc 1 515 45 is_stmt 0 view .LVU1731
 5063 1eff C4416DEB 		vpor	ymm9, ymm2, YMMWORD PTR [r11]	# tmp446, quadmask.61_63, MEM[base: _272, offset: 0B]
 5063      0B
 5064              	# sieve_extend.c:514:         for(; current_vector < range_stop_vector; current_vector += step) {
 514:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 5065              		.loc 1 514 66 view .LVU1732
 5066 1f04 4801D0   		add	rax, rdx	# ivtmp.295, step
 5067              	# sieve_extend.c:515:             bitarray_vector[current_vector] |= quadmask;
 515:sieve_extend.c ****         }
 5068              		.loc 1 515 45 view .LVU1733
 5069 1f07 C4417D7F 		vmovdqa	YMMWORD PTR [r11], ymm9	# MEM[base: _272, offset: 0B], tmp446
 5069      0B
 514:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 5070              		.loc 1 514 51 is_stmt 1 view .LVU1734
 514:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 5071              		.loc 1 514 15 view .LVU1735
 5072 1f0c 4901CB   		add	r11, rcx	# ivtmp.290, _285
 5073              	# sieve_extend.c:514:         for(; current_vector < range_stop_vector; current_vector += step) {
 514:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 5074              		.loc 1 514 9 is_stmt 0 view .LVU1736
 5075 1f0f 4939C0   		cmp	r8, rax	# range_stop_vector, ivtmp.295
 5076 1f12 761C     		jbe	.L277	#,
 515:sieve_extend.c ****         }
 5077              		.loc 1 515 13 is_stmt 1 view .LVU1737
 5078              	# sieve_extend.c:515:             bitarray_vector[current_vector] |= quadmask;
 515:sieve_extend.c ****         }
 5079              		.loc 1 515 45 is_stmt 0 view .LVU1738
 5080 1f14 C4416DEB 		vpor	ymm10, ymm2, YMMWORD PTR [r11]	# tmp448, quadmask.61_63, MEM[base: _272, offset: 0B]
 5080      13
 5081              	# sieve_extend.c:514:         for(; current_vector < range_stop_vector; current_vector += step) {
 514:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 5082              		.loc 1 514 66 view .LVU1739
 5083 1f19 4801D0   		add	rax, rdx	# ivtmp.295, step
 5084              	# sieve_extend.c:515:             bitarray_vector[current_vector] |= quadmask;
 515:sieve_extend.c ****         }
 5085              		.loc 1 515 45 view .LVU1740
 5086 1f1c C4417D7F 		vmovdqa	YMMWORD PTR [r11], ymm10	# MEM[base: _272, offset: 0B], tmp448
 5086      13
 514:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 5087              		.loc 1 514 51 is_stmt 1 view .LVU1741
 514:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 5088              		.loc 1 514 15 view .LVU1742
 5089 1f21 4901CB   		add	r11, rcx	# ivtmp.290, _285
 5090              	# sieve_extend.c:514:         for(; current_vector < range_stop_vector; current_vector += step) {
 514:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 5091              		.loc 1 514 9 is_stmt 0 view .LVU1743
GAS LISTING /tmp/cc64mrzX.s 			page 147


 5092 1f24 4939C0   		cmp	r8, rax	# range_stop_vector, ivtmp.295
 5093 1f27 0F874CFF 		ja	.L278	#,
 5093      FFFF
 5094 1f2d 0F1F00   		.p2align 4
 5095              		.p2align 3
 5096              	.L277:
 518:sieve_extend.c ****             counter_t index_word = current_vector * VECTOR_ELEMENTS;
 5097              		.loc 1 518 9 is_stmt 1 view .LVU1744
 5098              	# sieve_extend.c:518:         if (current_vector == range_stop_vector) {
 518:sieve_extend.c ****             counter_t index_word = current_vector * VECTOR_ELEMENTS;
 5099              		.loc 1 518 12 is_stmt 0 view .LVU1745
 5100 1f30 4939C0   		cmp	r8, rax	# range_stop_vector, ivtmp.295
 5101 1f33 7410     		je	.L463	#,
 5102              	.L280:
 518:sieve_extend.c ****             counter_t index_word = current_vector * VECTOR_ELEMENTS;
 5103              		.loc 1 518 12 view .LVU1746
 5104              	.LBE335:
 477:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 5105              		.loc 1 477 41 is_stmt 1 view .LVU1747
 5106              	# sieve_extend.c:477:     for (counter_t index = range_start; index < range_stop_unique;) {
 477:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 5107              		.loc 1 477 5 is_stmt 0 view .LVU1748
 5108 1f35 48397424 		cmp	QWORD PTR 88[rsp], rsi	# %sfp, range_start
 5108      58
 5109 1f3a 0F87E0FC 		ja	.L284	#,
 5109      FFFF
 5110              		.p2align 4,,3
 5111 1f40 E9FBFBFF 		jmp	.L459	#
 5111      FF
 5112              	.L463:
 5113              	.LBB336:
 5114              	.LBB334:
 519:sieve_extend.c ****             counter_t range_stop_word = wordindex(range_stop);
 5115              		.loc 1 519 13 is_stmt 1 view .LVU1749
 5116              	.LVL189:
 520:sieve_extend.c ****             if (index_word <= range_stop_word) {
 5117              		.loc 1 520 13 view .LVU1750
 521:sieve_extend.c ****                 #pragma ivdep
 5118              		.loc 1 521 13 view .LVU1751
 5119              	# sieve_extend.c:521:             if (index_word <= range_stop_word) {
 521:sieve_extend.c ****                 #pragma ivdep
 5120              		.loc 1 521 16 is_stmt 0 view .LVU1752
 5121 1f45 4C8B7C24 		mov	r15, QWORD PTR 80[rsp]	# range_stop_word, %sfp
 5121      50
 5122 1f4a 4C397C24 		cmp	QWORD PTR 72[rsp], r15	# %sfp, range_stop_word
 5122      48
 5123 1f4f 77E4     		ja	.L280	#,
 5124              	.LVL190:
 523:sieve_extend.c ****                     if (index_word+word <= range_stop_word)
 5125              		.loc 1 523 31 is_stmt 1 view .LVU1753
 524:sieve_extend.c ****                         bitarray_word[index_word+word] |= quadmask[word];
 5126              		.loc 1 524 21 view .LVU1754
 525:sieve_extend.c ****                 }
 5127              		.loc 1 525 25 view .LVU1755
 5128              	# sieve_extend.c:525:                         bitarray_word[index_word+word] |= quadmask[word];
 525:sieve_extend.c ****                 }
 5129              		.loc 1 525 56 is_stmt 0 view .LVU1756
GAS LISTING /tmp/cc64mrzX.s 			page 148


 5130 1f51 488B4424 		mov	rax, QWORD PTR 96[rsp]	# quadmask, quadmask
 5130      60
 5131 1f56 4D89C5   		mov	r13, r8	# tmp254, range_stop_vector
 5132              	# sieve_extend.c:524:                     if (index_word+word <= range_stop_word)
 524:sieve_extend.c ****                         bitarray_word[index_word+word] |= quadmask[word];
 5133              		.loc 1 524 24 view .LVU1757
 5134 1f59 488B5C24 		mov	rbx, QWORD PTR 64[rsp]	# _135, %sfp
 5134      40
 5135              	# sieve_extend.c:525:                         bitarray_word[index_word+word] |= quadmask[word];
 525:sieve_extend.c ****                 }
 5136              		.loc 1 525 56 view .LVU1758
 5137 1f5e 49C1E505 		sal	r13, 5	# tmp254,
 5138 1f62 4A09042F 		or	QWORD PTR [rdi+r13], rax	# *_126, quadmask
 523:sieve_extend.c ****                     if (index_word+word <= range_stop_word)
 5139              		.loc 1 523 55 is_stmt 1 view .LVU1759
 5140              	.LVL191:
 523:sieve_extend.c ****                     if (index_word+word <= range_stop_word)
 5141              		.loc 1 523 31 view .LVU1760
 524:sieve_extend.c ****                         bitarray_word[index_word+word] |= quadmask[word];
 5142              		.loc 1 524 21 view .LVU1761
 5143              	# sieve_extend.c:524:                     if (index_word+word <= range_stop_word)
 524:sieve_extend.c ****                         bitarray_word[index_word+word] |= quadmask[word];
 5144              		.loc 1 524 24 is_stmt 0 view .LVU1762
 5145 1f66 48395C24 		cmp	QWORD PTR 80[rsp], rbx	# %sfp, _135
 5145      50
 5146 1f6b 720D     		jb	.L282	#,
 525:sieve_extend.c ****                 }
 5147              		.loc 1 525 25 is_stmt 1 view .LVU1763
 5148              	# sieve_extend.c:525:                         bitarray_word[index_word+word] |= quadmask[word];
 525:sieve_extend.c ****                 }
 5149              		.loc 1 525 56 is_stmt 0 view .LVU1764
 5150 1f6d 4C8B5C24 		mov	r11, QWORD PTR 104[rsp]	# quadmask, quadmask
 5150      68
 5151 1f72 4C8B7C24 		mov	r15, QWORD PTR 24[rsp]	# _137, %sfp
 5151      18
 5152 1f77 4D091F   		or	QWORD PTR [r15], r11	# *_137, quadmask
 5153              	.L282:
 523:sieve_extend.c ****                     if (index_word+word <= range_stop_word)
 5154              		.loc 1 523 55 is_stmt 1 view .LVU1765
 5155              	.LVL192:
 523:sieve_extend.c ****                     if (index_word+word <= range_stop_word)
 5156              		.loc 1 523 31 view .LVU1766
 524:sieve_extend.c ****                         bitarray_word[index_word+word] |= quadmask[word];
 5157              		.loc 1 524 21 view .LVU1767
 5158              	# sieve_extend.c:524:                     if (index_word+word <= range_stop_word)
 524:sieve_extend.c ****                         bitarray_word[index_word+word] |= quadmask[word];
 5159              		.loc 1 524 24 is_stmt 0 view .LVU1768
 5160 1f7a 4C8B6C24 		mov	r13, QWORD PTR 56[rsp]	# _146, %sfp
 5160      38
 5161 1f7f 4C396C24 		cmp	QWORD PTR 80[rsp], r13	# %sfp, _146
 5161      50
 5162 1f84 720D     		jb	.L283	#,
 525:sieve_extend.c ****                 }
 5163              		.loc 1 525 25 is_stmt 1 view .LVU1769
 5164              	# sieve_extend.c:525:                         bitarray_word[index_word+word] |= quadmask[word];
 525:sieve_extend.c ****                 }
 5165              		.loc 1 525 56 is_stmt 0 view .LVU1770
GAS LISTING /tmp/cc64mrzX.s 			page 149


 5166 1f86 488B4424 		mov	rax, QWORD PTR 112[rsp]	# quadmask, quadmask
 5166      70
 5167 1f8b 488B5C24 		mov	rbx, QWORD PTR 32[rsp]	# _148, %sfp
 5167      20
 5168 1f90 480903   		or	QWORD PTR [rbx], rax	# *_148, quadmask
 5169              	.L283:
 523:sieve_extend.c ****                     if (index_word+word <= range_stop_word)
 5170              		.loc 1 523 55 is_stmt 1 view .LVU1771
 5171              	.LVL193:
 523:sieve_extend.c ****                     if (index_word+word <= range_stop_word)
 5172              		.loc 1 523 31 view .LVU1772
 524:sieve_extend.c ****                         bitarray_word[index_word+word] |= quadmask[word];
 5173              		.loc 1 524 21 view .LVU1773
 5174              	# sieve_extend.c:524:                     if (index_word+word <= range_stop_word)
 524:sieve_extend.c ****                         bitarray_word[index_word+word] |= quadmask[word];
 5175              		.loc 1 524 24 is_stmt 0 view .LVU1774
 5176 1f93 4C8B5C24 		mov	r11, QWORD PTR 48[rsp]	# _157, %sfp
 5176      30
 5177 1f98 4C395C24 		cmp	QWORD PTR 80[rsp], r11	# %sfp, _157
 5177      50
 5178 1f9d 7296     		jb	.L280	#,
 525:sieve_extend.c ****                 }
 5179              		.loc 1 525 25 is_stmt 1 view .LVU1775
 5180              	# sieve_extend.c:525:                         bitarray_word[index_word+word] |= quadmask[word];
 525:sieve_extend.c ****                 }
 5181              		.loc 1 525 56 is_stmt 0 view .LVU1776
 5182 1f9f 4C8B7C24 		mov	r15, QWORD PTR 120[rsp]	# quadmask, quadmask
 5182      78
 5183 1fa4 4C8B6C24 		mov	r13, QWORD PTR 40[rsp]	# _159, %sfp
 5183      28
 5184 1fa9 4D097D00 		or	QWORD PTR 0[r13], r15	# *_159, quadmask
 5185 1fad EB86     		jmp	.L280	#
 5186              	.LVL194:
 5187              	.L268:
 525:sieve_extend.c ****                 }
 5188              		.loc 1 525 56 view .LVU1777
 5189              	.LBE334:
 5190              	.LBE336:
 5191              	.LBE337:
 5192              	.LBB338:
 5193              	.LBB327:
 445:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5194              		.loc 1 445 49 is_stmt 1 view .LVU1778
 5195              	# sieve_extend.c:445:             for (counter_t index = range_start; index <= range_stop; index +=
 445:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5196              		.loc 1 445 13 is_stmt 0 view .LVU1779
 5197 1faf 4839CE   		cmp	rsi, rcx	# range_start, range_stop
 5198 1fb2 0F878BFB 		ja	.L266	#,
 5198      FFFF
 5199              	# sieve_extend.c:446:                 bitarray_word[wordindex(index)] |= markmask(index);
 446:sieve_extend.c ****             return;                 
 5200              		.loc 1 446 52 view .LVU1780
 5201 1fb8 BB010000 		mov	ebx, 1	# tmp229,
 5201      00
 5202              	.LVL195:
 5203              	.L271:
 446:sieve_extend.c ****             return;                 
GAS LISTING /tmp/cc64mrzX.s 			page 150


 5204              		.loc 1 446 17 is_stmt 1 discriminator 3 view .LVU1781
 5205              	# sieve_extend.c:446:                 bitarray_word[wordindex(index)] |= markmask(index);
 446:sieve_extend.c ****             return;                 
 5206              		.loc 1 446 49 is_stmt 0 discriminator 3 view .LVU1782
 5207 1fbd 4989F0   		mov	r8, rsi	# tmp225, range_start
 5208              	# sieve_extend.c:446:                 bitarray_word[wordindex(index)] |= markmask(index);
 446:sieve_extend.c ****             return;                 
 5209              		.loc 1 446 52 discriminator 3 view .LVU1783
 5210 1fc0 C462C9F7 		shlx	r10, rbx, rsi	# tmp228, tmp229, range_start
 5210      D3
 5211              	# sieve_extend.c:446:                 bitarray_word[wordindex(index)] |= markmask(index);
 446:sieve_extend.c ****             return;                 
 5212              		.loc 1 446 49 discriminator 3 view .LVU1784
 5213 1fc5 49C1E806 		shr	r8, 6	# tmp225,
 5214              	# sieve_extend.c:445:             for (counter_t index = range_start; index <= range_stop; index +=
 445:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5215              		.loc 1 445 76 discriminator 3 view .LVU1785
 5216 1fc9 4801D6   		add	rsi, rdx	# range_start, step
 5217              	# sieve_extend.c:446:                 bitarray_word[wordindex(index)] |= markmask(index);
 446:sieve_extend.c ****             return;                 
 5218              		.loc 1 446 49 discriminator 3 view .LVU1786
 5219 1fcc 4E0914C7 		or	QWORD PTR [rdi+r8*8], r10	# *_14, tmp228
 445:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5220              		.loc 1 445 70 is_stmt 1 discriminator 3 view .LVU1787
 445:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5221              		.loc 1 445 49 discriminator 3 view .LVU1788
 5222              	# sieve_extend.c:445:             for (counter_t index = range_start; index <= range_stop; index +=
 445:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5223              		.loc 1 445 13 is_stmt 0 discriminator 3 view .LVU1789
 5224 1fd0 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 5225 1fd3 0F826AFB 		jb	.L266	#,
 5225      FFFF
 446:sieve_extend.c ****             return;                 
 5226              		.loc 1 446 17 is_stmt 1 view .LVU1790
 5227              	# sieve_extend.c:446:                 bitarray_word[wordindex(index)] |= markmask(index);
 446:sieve_extend.c ****             return;                 
 5228              		.loc 1 446 49 is_stmt 0 view .LVU1791
 5229 1fd9 4989F3   		mov	r11, rsi	# tmp361, range_start
 5230              	# sieve_extend.c:446:                 bitarray_word[wordindex(index)] |= markmask(index);
 446:sieve_extend.c ****             return;                 
 5231              		.loc 1 446 52 view .LVU1792
 5232 1fdc C462C9F7 		shlx	r9, rbx, rsi	# tmp364, tmp229, range_start
 5232      CB
 5233              	# sieve_extend.c:446:                 bitarray_word[wordindex(index)] |= markmask(index);
 446:sieve_extend.c ****             return;                 
 5234              		.loc 1 446 49 view .LVU1793
 5235 1fe1 49C1EB06 		shr	r11, 6	# tmp361,
 5236              	# sieve_extend.c:445:             for (counter_t index = range_start; index <= range_stop; index +=
 445:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5237              		.loc 1 445 76 view .LVU1794
 5238 1fe5 4801D6   		add	rsi, rdx	# range_start, step
 5239              	# sieve_extend.c:446:                 bitarray_word[wordindex(index)] |= markmask(index);
 446:sieve_extend.c ****             return;                 
 5240              		.loc 1 446 49 view .LVU1795
 5241 1fe8 4E090CDF 		or	QWORD PTR [rdi+r11*8], r9	# *_14, tmp364
 445:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5242              		.loc 1 445 70 is_stmt 1 view .LVU1796
GAS LISTING /tmp/cc64mrzX.s 			page 151


 445:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5243              		.loc 1 445 49 view .LVU1797
 5244              	# sieve_extend.c:445:             for (counter_t index = range_start; index <= range_stop; index +=
 445:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5245              		.loc 1 445 13 is_stmt 0 view .LVU1798
 5246 1fec 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 5247 1fef 0F824EFB 		jb	.L266	#,
 5247      FFFF
 446:sieve_extend.c ****             return;                 
 5248              		.loc 1 446 17 is_stmt 1 view .LVU1799
 5249              	# sieve_extend.c:446:                 bitarray_word[wordindex(index)] |= markmask(index);
 446:sieve_extend.c ****             return;                 
 5250              		.loc 1 446 49 is_stmt 0 view .LVU1800
 5251 1ff5 4989F6   		mov	r14, rsi	# tmp366, range_start
 5252              	# sieve_extend.c:446:                 bitarray_word[wordindex(index)] |= markmask(index);
 446:sieve_extend.c ****             return;                 
 5253              		.loc 1 446 52 view .LVU1801
 5254 1ff8 C462C9F7 		shlx	r15, rbx, rsi	# tmp369, tmp229, range_start
 5254      FB
 5255              	# sieve_extend.c:446:                 bitarray_word[wordindex(index)] |= markmask(index);
 446:sieve_extend.c ****             return;                 
 5256              		.loc 1 446 49 view .LVU1802
 5257 1ffd 49C1EE06 		shr	r14, 6	# tmp366,
 5258              	# sieve_extend.c:445:             for (counter_t index = range_start; index <= range_stop; index +=
 445:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5259              		.loc 1 445 76 view .LVU1803
 5260 2001 4801D6   		add	rsi, rdx	# range_start, step
 5261              	# sieve_extend.c:446:                 bitarray_word[wordindex(index)] |= markmask(index);
 446:sieve_extend.c ****             return;                 
 5262              		.loc 1 446 49 view .LVU1804
 5263 2004 4E093CF7 		or	QWORD PTR [rdi+r14*8], r15	# *_14, tmp369
 445:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5264              		.loc 1 445 70 is_stmt 1 view .LVU1805
 445:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5265              		.loc 1 445 49 view .LVU1806
 5266              	# sieve_extend.c:445:             for (counter_t index = range_start; index <= range_stop; index +=
 445:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5267              		.loc 1 445 13 is_stmt 0 view .LVU1807
 5268 2008 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 5269 200b 0F8232FB 		jb	.L266	#,
 5269      FFFF
 446:sieve_extend.c ****             return;                 
 5270              		.loc 1 446 17 is_stmt 1 view .LVU1808
 5271              	# sieve_extend.c:446:                 bitarray_word[wordindex(index)] |= markmask(index);
 446:sieve_extend.c ****             return;                 
 5272              		.loc 1 446 49 is_stmt 0 view .LVU1809
 5273 2011 4989F5   		mov	r13, rsi	# tmp371, range_start
 5274              	# sieve_extend.c:446:                 bitarray_word[wordindex(index)] |= markmask(index);
 446:sieve_extend.c ****             return;                 
 5275              		.loc 1 446 52 view .LVU1810
 5276 2014 C462C9F7 		shlx	r12, rbx, rsi	# tmp374, tmp229, range_start
 5276      E3
 5277              	# sieve_extend.c:446:                 bitarray_word[wordindex(index)] |= markmask(index);
 446:sieve_extend.c ****             return;                 
 5278              		.loc 1 446 49 view .LVU1811
 5279 2019 49C1ED06 		shr	r13, 6	# tmp371,
 5280              	# sieve_extend.c:445:             for (counter_t index = range_start; index <= range_stop; index +=
GAS LISTING /tmp/cc64mrzX.s 			page 152


 445:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5281              		.loc 1 445 76 view .LVU1812
 5282 201d 4801D6   		add	rsi, rdx	# range_start, step
 5283              	# sieve_extend.c:446:                 bitarray_word[wordindex(index)] |= markmask(index);
 446:sieve_extend.c ****             return;                 
 5284              		.loc 1 446 49 view .LVU1813
 5285 2020 4E0924EF 		or	QWORD PTR [rdi+r13*8], r12	# *_14, tmp374
 445:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5286              		.loc 1 445 70 is_stmt 1 view .LVU1814
 445:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5287              		.loc 1 445 49 view .LVU1815
 5288              	# sieve_extend.c:445:             for (counter_t index = range_start; index <= range_stop; index +=
 445:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5289              		.loc 1 445 13 is_stmt 0 view .LVU1816
 5290 2024 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 5291 2027 0F8216FB 		jb	.L266	#,
 5291      FFFF
 446:sieve_extend.c ****             return;                 
 5292              		.loc 1 446 17 is_stmt 1 view .LVU1817
 5293              	# sieve_extend.c:446:                 bitarray_word[wordindex(index)] |= markmask(index);
 446:sieve_extend.c ****             return;                 
 5294              		.loc 1 446 49 is_stmt 0 view .LVU1818
 5295 202d 4889F0   		mov	rax, rsi	# tmp376, range_start
 5296              	# sieve_extend.c:446:                 bitarray_word[wordindex(index)] |= markmask(index);
 446:sieve_extend.c ****             return;                 
 5297              		.loc 1 446 52 view .LVU1819
 5298 2030 C462C9F7 		shlx	r8, rbx, rsi	# tmp379, tmp229, range_start
 5298      C3
 5299              	# sieve_extend.c:446:                 bitarray_word[wordindex(index)] |= markmask(index);
 446:sieve_extend.c ****             return;                 
 5300              		.loc 1 446 49 view .LVU1820
 5301 2035 48C1E806 		shr	rax, 6	# tmp376,
 5302              	# sieve_extend.c:445:             for (counter_t index = range_start; index <= range_stop; index +=
 445:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5303              		.loc 1 445 76 view .LVU1821
 5304 2039 4801D6   		add	rsi, rdx	# range_start, step
 5305              	# sieve_extend.c:446:                 bitarray_word[wordindex(index)] |= markmask(index);
 446:sieve_extend.c ****             return;                 
 5306              		.loc 1 446 49 view .LVU1822
 5307 203c 4C0904C7 		or	QWORD PTR [rdi+rax*8], r8	# *_14, tmp379
 445:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5308              		.loc 1 445 70 is_stmt 1 view .LVU1823
 445:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5309              		.loc 1 445 49 view .LVU1824
 5310              	# sieve_extend.c:445:             for (counter_t index = range_start; index <= range_stop; index +=
 445:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5311              		.loc 1 445 13 is_stmt 0 view .LVU1825
 5312 2040 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 5313 2043 0F82FAFA 		jb	.L266	#,
 5313      FFFF
 446:sieve_extend.c ****             return;                 
 5314              		.loc 1 446 17 is_stmt 1 view .LVU1826
 5315              	# sieve_extend.c:446:                 bitarray_word[wordindex(index)] |= markmask(index);
 446:sieve_extend.c ****             return;                 
 5316              		.loc 1 446 49 is_stmt 0 view .LVU1827
 5317 2049 4989F2   		mov	r10, rsi	# tmp381, range_start
 5318              	# sieve_extend.c:446:                 bitarray_word[wordindex(index)] |= markmask(index);
GAS LISTING /tmp/cc64mrzX.s 			page 153


 446:sieve_extend.c ****             return;                 
 5319              		.loc 1 446 52 view .LVU1828
 5320 204c C462C9F7 		shlx	r11, rbx, rsi	# tmp384, tmp229, range_start
 5320      DB
 5321              	# sieve_extend.c:446:                 bitarray_word[wordindex(index)] |= markmask(index);
 446:sieve_extend.c ****             return;                 
 5322              		.loc 1 446 49 view .LVU1829
 5323 2051 49C1EA06 		shr	r10, 6	# tmp381,
 5324              	# sieve_extend.c:445:             for (counter_t index = range_start; index <= range_stop; index +=
 445:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5325              		.loc 1 445 76 view .LVU1830
 5326 2055 4801D6   		add	rsi, rdx	# range_start, step
 5327              	# sieve_extend.c:446:                 bitarray_word[wordindex(index)] |= markmask(index);
 446:sieve_extend.c ****             return;                 
 5328              		.loc 1 446 49 view .LVU1831
 5329 2058 4E091CD7 		or	QWORD PTR [rdi+r10*8], r11	# *_14, tmp384
 445:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5330              		.loc 1 445 70 is_stmt 1 view .LVU1832
 445:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5331              		.loc 1 445 49 view .LVU1833
 5332              	# sieve_extend.c:445:             for (counter_t index = range_start; index <= range_stop; index +=
 445:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5333              		.loc 1 445 13 is_stmt 0 view .LVU1834
 5334 205c 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 5335 205f 0F82DEFA 		jb	.L266	#,
 5335      FFFF
 446:sieve_extend.c ****             return;                 
 5336              		.loc 1 446 17 is_stmt 1 view .LVU1835
 5337              	# sieve_extend.c:446:                 bitarray_word[wordindex(index)] |= markmask(index);
 446:sieve_extend.c ****             return;                 
 5338              		.loc 1 446 49 is_stmt 0 view .LVU1836
 5339 2065 4989F6   		mov	r14, rsi	# tmp386, range_start
 5340              	# sieve_extend.c:446:                 bitarray_word[wordindex(index)] |= markmask(index);
 446:sieve_extend.c ****             return;                 
 5341              		.loc 1 446 52 view .LVU1837
 5342 2068 C462C9F7 		shlx	r9, rbx, rsi	# tmp389, tmp229, range_start
 5342      CB
 5343              	# sieve_extend.c:446:                 bitarray_word[wordindex(index)] |= markmask(index);
 446:sieve_extend.c ****             return;                 
 5344              		.loc 1 446 49 view .LVU1838
 5345 206d 49C1EE06 		shr	r14, 6	# tmp386,
 5346              	# sieve_extend.c:445:             for (counter_t index = range_start; index <= range_stop; index +=
 445:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5347              		.loc 1 445 76 view .LVU1839
 5348 2071 4801D6   		add	rsi, rdx	# range_start, step
 5349              	# sieve_extend.c:446:                 bitarray_word[wordindex(index)] |= markmask(index);
 446:sieve_extend.c ****             return;                 
 5350              		.loc 1 446 49 view .LVU1840
 5351 2074 4E090CF7 		or	QWORD PTR [rdi+r14*8], r9	# *_14, tmp389
 445:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5352              		.loc 1 445 70 is_stmt 1 view .LVU1841
 445:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5353              		.loc 1 445 49 view .LVU1842
 5354              	# sieve_extend.c:445:             for (counter_t index = range_start; index <= range_stop; index +=
 445:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5355              		.loc 1 445 13 is_stmt 0 view .LVU1843
 5356 2078 4839F1   		cmp	rcx, rsi	# range_stop, range_start
GAS LISTING /tmp/cc64mrzX.s 			page 154


 5357 207b 0F82C2FA 		jb	.L266	#,
 5357      FFFF
 446:sieve_extend.c ****             return;                 
 5358              		.loc 1 446 17 is_stmt 1 view .LVU1844
 5359              	# sieve_extend.c:446:                 bitarray_word[wordindex(index)] |= markmask(index);
 446:sieve_extend.c ****             return;                 
 5360              		.loc 1 446 49 is_stmt 0 view .LVU1845
 5361 2081 4989F7   		mov	r15, rsi	# tmp391, range_start
 5362              	# sieve_extend.c:446:                 bitarray_word[wordindex(index)] |= markmask(index);
 446:sieve_extend.c ****             return;                 
 5363              		.loc 1 446 52 view .LVU1846
 5364 2084 C462C9F7 		shlx	r13, rbx, rsi	# tmp394, tmp229, range_start
 5364      EB
 5365              	# sieve_extend.c:446:                 bitarray_word[wordindex(index)] |= markmask(index);
 446:sieve_extend.c ****             return;                 
 5366              		.loc 1 446 49 view .LVU1847
 5367 2089 49C1EF06 		shr	r15, 6	# tmp391,
 5368              	# sieve_extend.c:445:             for (counter_t index = range_start; index <= range_stop; index +=
 445:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5369              		.loc 1 445 76 view .LVU1848
 5370 208d 4801D6   		add	rsi, rdx	# range_start, step
 5371              	# sieve_extend.c:446:                 bitarray_word[wordindex(index)] |= markmask(index);
 446:sieve_extend.c ****             return;                 
 5372              		.loc 1 446 49 view .LVU1849
 5373 2090 4E092CFF 		or	QWORD PTR [rdi+r15*8], r13	# *_14, tmp394
 445:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5374              		.loc 1 445 70 is_stmt 1 view .LVU1850
 445:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5375              		.loc 1 445 49 view .LVU1851
 5376              	# sieve_extend.c:445:             for (counter_t index = range_start; index <= range_stop; index +=
 445:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5377              		.loc 1 445 13 is_stmt 0 view .LVU1852
 5378 2094 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 5379 2097 0F8320FF 		jnb	.L271	#,
 5379      FFFF
 5380 209d E9A1FAFF 		jmp	.L266	#
 5380      FF
 5381              	.LVL196:
 5382              	.L462:
 445:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5383              		.loc 1 445 13 view .LVU1853
 5384              	.LBE327:
 5385              	.LBE338:
 5386              	# sieve_extend.c:531: }
 531:sieve_extend.c **** 
 5387              		.loc 1 531 1 view .LVU1854
 5388 20a2 E8000000 		call	__stack_chk_fail@PLT	#
 5388      00
 5389              	.LVL197:
 531:sieve_extend.c **** 
 5390              		.loc 1 531 1 view .LVU1855
 5391              		.cfi_endproc
 5392              	.LFE63:
 5394 20a7 660F1F84 		.p2align 4
 5394      00000000 
 5394      00
 5396              	extendSieve_aligned:
GAS LISTING /tmp/cc64mrzX.s 			page 155


 5397              	.LVL198:
 5398              	.LFB65:
 567:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 5399              		.loc 1 567 140 is_stmt 1 view -0
 5400              		.cfi_startproc
 568:sieve_extend.c **** 
 5401              		.loc 1 568 5 view .LVU1857
 570:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 5402              		.loc 1 570 5 view .LVU1858
 5403              	# sieve_extend.c:567: static void extendSieve_aligned(bitword_t* bitarray, const counter_t source_s
 567:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 5404              		.loc 1 567 140 is_stmt 0 view .LVU1859
 5405 20b0 55       		push	rbp	#
 5406              		.cfi_def_cfa_offset 16
 5407              		.cfi_offset 6, -16
 5408 20b1 4889E5   		mov	rbp, rsp	#,
 5409              		.cfi_def_cfa_register 6
 5410 20b4 4157     		push	r15	#
 5411 20b6 4156     		push	r14	#
 5412 20b8 4155     		push	r13	#
 5413              		.cfi_offset 15, -24
 5414              		.cfi_offset 14, -32
 5415              		.cfi_offset 13, -40
 5416 20ba 4989FD   		mov	r13, rdi	# bitarray, tmp295
 5417 20bd 4154     		push	r12	#
 5418              		.cfi_offset 12, -48
 5419 20bf 4989D4   		mov	r12, rdx	# size, tmp297
 5420 20c2 53       		push	rbx	#
 5421              		.cfi_offset 3, -56
 5422              	# sieve_extend.c:570:     const counter_t destination_stop_word = wordindex(destination_stop);
 570:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 5423              		.loc 1 570 21 view .LVU1860
 5424 20c3 4889CB   		mov	rbx, rcx	# tmp298, tmp298
 5425              	# sieve_extend.c:571:     const counter_t copy_start = source_start + size;
 571:sieve_extend.c ****     counter_t source_word = wordindex(source_start);
 5426              		.loc 1 571 21 view .LVU1861
 5427 20c6 488D0C16 		lea	rcx, [rsi+rdx]	# copy_start,
 5428              	.LVL199:
 5429              	# sieve_extend.c:567: static void extendSieve_aligned(bitword_t* bitarray, const counter_t source_s
 567:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 5430              		.loc 1 567 140 view .LVU1862
 5431 20ca 4883E4E0 		and	rsp, -32	#,
 5432              	# sieve_extend.c:573:     counter_t copy_word = wordindex(copy_start);
 573:sieve_extend.c ****     
 5433              		.loc 1 573 15 view .LVU1863
 5434 20ce 4889C8   		mov	rax, rcx	# ivtmp.351, copy_start
 5435              	# sieve_extend.c:572:     counter_t source_word = wordindex(source_start);
 572:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 5436              		.loc 1 572 15 view .LVU1864
 5437 20d1 48C1EE06 		shr	rsi, 6	# source_start,
 5438              	.LVL200:
 5439              	# sieve_extend.c:567: static void extendSieve_aligned(bitword_t* bitarray, const counter_t source_s
 567:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 5440              		.loc 1 567 140 view .LVU1865
 5441 20d5 488D6424 		lea	rsp, -32[rsp]	#,
 5441      E0
 5442              	# sieve_extend.c:573:     counter_t copy_word = wordindex(copy_start);
GAS LISTING /tmp/cc64mrzX.s 			page 156


 573:sieve_extend.c ****     
 5443              		.loc 1 573 15 view .LVU1866
 5444 20da 48C1E806 		shr	rax, 6	# ivtmp.351,
 5445              	# sieve_extend.c:575:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 575:sieve_extend.c **** 
 5446              		.loc 1 575 35 view .LVU1867
 5447 20de 488D3CF5 		lea	rdi, 0[0+rsi*8]	# _4,
 5447      00000000 
 5448              	.LVL201:
 5449              	# sieve_extend.c:570:     const counter_t destination_stop_word = wordindex(destination_stop);
 570:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 5450              		.loc 1 570 21 view .LVU1868
 5451 20e6 48C1EB06 		shr	rbx, 6	# tmp298,
 5452              	.LVL202:
 571:sieve_extend.c ****     counter_t source_word = wordindex(source_start);
 5453              		.loc 1 571 5 is_stmt 1 view .LVU1869
 572:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 5454              		.loc 1 572 5 view .LVU1870
 5455              	# sieve_extend.c:575:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 575:sieve_extend.c **** 
 5456              		.loc 1 575 35 is_stmt 0 view .LVU1871
 5457 20ea 4D8D743D 		lea	r14, 0[r13+rdi]	# _5,
 5457      00
 5458              	# sieve_extend.c:572:     counter_t source_word = wordindex(source_start);
 572:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 5459              		.loc 1 572 15 view .LVU1872
 5460 20ef 48897424 		mov	QWORD PTR 8[rsp], rsi	# %sfp, source_word
 5460      08
 5461              	.LVL203:
 573:sieve_extend.c ****     
 5462              		.loc 1 573 5 is_stmt 1 view .LVU1873
 575:sieve_extend.c **** 
 5463              		.loc 1 575 5 view .LVU1874
 5464              	# sieve_extend.c:575:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 575:sieve_extend.c **** 
 5465              		.loc 1 575 52 is_stmt 0 view .LVU1875
 5466 20f4 89CE     		mov	esi, ecx	# tmp183, copy_start
 5467              	.LVL204:
 5468              	# sieve_extend.c:577:     while (copy_word + size <= destination_stop_word) {
 577:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5469              		.loc 1 577 22 view .LVU1876
 5470 20f6 498D0C04 		lea	rcx, [r12+rax]	# ivtmp.351,
 5471              	.LVL205:
 5472              	# sieve_extend.c:575:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 575:sieve_extend.c **** 
 5473              		.loc 1 575 52 view .LVU1877
 5474 20fa F7D6     		not	esi	# tmp183
 5475              	# sieve_extend.c:575:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 575:sieve_extend.c **** 
 5476              		.loc 1 575 35 view .LVU1878
 5477 20fc 48893C24 		mov	QWORD PTR [rsp], rdi	# %sfp, _4
 5478              	# sieve_extend.c:575:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 575:sieve_extend.c **** 
 5479              		.loc 1 575 52 view .LVU1879
 5480 2100 48C7C2FF 		mov	rdx, -1	# tmp186,
 5480      FFFFFF
 5481              	.LVL206:
GAS LISTING /tmp/cc64mrzX.s 			page 157


 575:sieve_extend.c **** 
 5482              		.loc 1 575 52 view .LVU1880
 5483 2107 C462CBF7 		shrx	r8, rdx, rsi	# tmp185, tmp186, tmp183
 5483      C2
 5484              	# sieve_extend.c:575:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 575:sieve_extend.c **** 
 5485              		.loc 1 575 49 view .LVU1881
 5486 210c C442B8F2 		andn	r9, r8, QWORD PTR [r14]	# tmp189, tmp185, *_5
 5486      0E
 5487              	# sieve_extend.c:575:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 575:sieve_extend.c **** 
 5488              		.loc 1 575 25 view .LVU1882
 5489 2111 4D894CC5 		mov	QWORD PTR 0[r13+rax*8], r9	# *_13, tmp189
 5489      00
 577:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5490              		.loc 1 577 5 is_stmt 1 view .LVU1883
 577:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5491              		.loc 1 577 11 view .LVU1884
 5492 2116 4839CB   		cmp	rbx, rcx	# destination_stop_word, ivtmp.351
 5493 2119 0F827101 		jb	.L465	#,
 5493      0000
 5494 211f 4C8D14C5 		lea	r10, 0[0+rax*8]	# _12,
 5494      00000000 
 5495 2127 488D04CD 		lea	rax, 0[0+rcx*8]	# tmp191,
 5495      00000000 
 5496              	.LVL207:
 577:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5497              		.loc 1 577 11 is_stmt 0 view .LVU1885
 5498 212f 4D01EA   		add	r10, r13	# tmp190, bitarray
 5499              	# sieve_extend.c:578:         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*
 578:sieve_extend.c ****         copy_word += size;
 5500              		.loc 1 578 9 view .LVU1886
 5501 2132 4E8D3CE5 		lea	r15, 0[0+r12*8]	# _15,
 5501      00000000 
 5502 213a 4929C2   		sub	r10, rax	# tmp190, tmp191
 5503 213d 4C895424 		mov	QWORD PTR 24[rsp], r10	# %sfp, tmp190
 5503      18
 5504              	.LVL208:
 5505              	.L466:
 578:sieve_extend.c ****         copy_word += size;
 5506              		.loc 1 578 9 is_stmt 1 view .LVU1887
 5507              	.LBB339:
 5508              	.LBI339:
 5509              		.file 2 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h"
   1:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** /* Copyright (C) 2004-2020 Free Software Foundation, Inc.
   2:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    This file is part of the GNU C Library.
   3:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
   4:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    The GNU C Library is free software; you can redistribute it and/or
   5:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    modify it under the terms of the GNU Lesser General Public
   6:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    License as published by the Free Software Foundation; either
   7:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    version 2.1 of the License, or (at your option) any later version.
   8:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
   9:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    The GNU C Library is distributed in the hope that it will be useful,
  10:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  12:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    Lesser General Public License for more details.
  13:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
GAS LISTING /tmp/cc64mrzX.s 			page 158


  14:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    You should have received a copy of the GNU Lesser General Public
  15:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    License along with the GNU C Library; if not, see
  16:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    <https://www.gnu.org/licenses/>.  */
  17:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  18:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #ifndef _BITS_STRING_FORTIFIED_H
  19:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #define _BITS_STRING_FORTIFIED_H 1
  20:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  21:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #ifndef _STRING_H
  22:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** # error "Never use <bits/string_fortified.h> directly; include <string.h> instead."
  23:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  24:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  25:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #if !__GNUC_PREREQ (5,0)
  26:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __warndecl (__warn_memset_zero_len,
  27:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	    "memset used with constant zero length parameter; this could be due to transposed parameters")
  28:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  29:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  30:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __fortify_function void *
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __NTH (memcpy (void *__restrict __dest, const void *__restrict __src,
 5510              		.loc 2 31 1 view .LVU1888
 5511              	.LBB340:
  32:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
  33:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
 5512              		.loc 2 34 3 view .LVU1889
 5513              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5514              		.loc 2 34 10 is_stmt 0 view .LVU1890
 5515 2142 4C8B5C24 		mov	r11, QWORD PTR 24[rsp]	# _189, %sfp
 5515      18
 5516 2147 4C89FA   		mov	rdx, r15	#, _15
 5517 214a 48894C24 		mov	QWORD PTR 16[rsp], rcx	# %sfp, ivtmp.351
 5517      10
 5518 214f 4C89F6   		mov	rsi, r14	#, _5
 5519 2152 498D3CCB 		lea	rdi, [r11+rcx*8]	# tmp193,
 5520 2156 E8000000 		call	memcpy@PLT	#
 5520      00
 5521              	.LVL209:
 5522              		.loc 2 34 10 view .LVU1891
 5523              	.LBE340:
 5524              	.LBE339:
 579:sieve_extend.c ****     }
 5525              		.loc 1 579 9 is_stmt 1 view .LVU1892
 577:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5526              		.loc 1 577 11 view .LVU1893
 5527 215b 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.351, %sfp
 5527      10
 5528 2160 4A8D0C20 		lea	rcx, [rax+r12]	# ivtmp.351,
 5529 2164 4839CB   		cmp	rbx, rcx	# destination_stop_word, ivtmp.351
 5530 2167 0F822301 		jb	.L465	#,
 5530      0000
 578:sieve_extend.c ****         copy_word += size;
 5531              		.loc 1 578 9 view .LVU1894
 5532              	.LVL210:
 5533              	.LBB348:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5534              		.loc 2 31 1 view .LVU1895
 5535              	.LBB341:
 5536              		.loc 2 34 3 view .LVU1896
GAS LISTING /tmp/cc64mrzX.s 			page 159


 5537              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5538              		.loc 2 34 10 is_stmt 0 view .LVU1897
 5539 216d 488B7C24 		mov	rdi, QWORD PTR 24[rsp]	# _189, %sfp
 5539      18
 5540 2172 4C89F6   		mov	rsi, r14	#, _5
 5541 2175 48894C24 		mov	QWORD PTR 16[rsp], rcx	# %sfp, ivtmp.351
 5541      10
 5542              	.LVL211:
 5543              		.loc 2 34 10 view .LVU1898
 5544 217a 4C89FA   		mov	rdx, r15	#, _15
 5545 217d 488D3CCF 		lea	rdi, [rdi+rcx*8]	# tmp276,
 5546 2181 E8000000 		call	memcpy@PLT	#
 5546      00
 5547              	.LVL212:
 5548              		.loc 2 34 10 view .LVU1899
 5549              	.LBE341:
 5550              	.LBE348:
 579:sieve_extend.c ****     }
 5551              		.loc 1 579 9 is_stmt 1 view .LVU1900
 577:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5552              		.loc 1 577 11 view .LVU1901
 5553 2186 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.351, %sfp
 5553      10
 5554 218b 4A8D3420 		lea	rsi, [rax+r12]	# ivtmp.351,
 5555 218f 4839F3   		cmp	rbx, rsi	# destination_stop_word, ivtmp.351
 5556 2192 0F82F800 		jb	.L465	#,
 5556      0000
 578:sieve_extend.c ****         copy_word += size;
 5557              		.loc 1 578 9 view .LVU1902
 5558              	.LVL213:
 5559              	.LBB349:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5560              		.loc 2 31 1 view .LVU1903
 5561              	.LBB342:
 5562              		.loc 2 34 3 view .LVU1904
 5563              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5564              		.loc 2 34 10 is_stmt 0 view .LVU1905
 5565 2198 488B5424 		mov	rdx, QWORD PTR 24[rsp]	# _189, %sfp
 5565      18
 5566 219d 48897424 		mov	QWORD PTR 16[rsp], rsi	# %sfp, ivtmp.351
 5566      10
 5567 21a2 488D3CF2 		lea	rdi, [rdx+rsi*8]	# tmp279,
 5568 21a6 4C89FA   		mov	rdx, r15	#, _15
 5569 21a9 4C89F6   		mov	rsi, r14	#, _5
 5570 21ac E8000000 		call	memcpy@PLT	#
 5570      00
 5571              	.LVL214:
 5572              		.loc 2 34 10 view .LVU1906
 5573              	.LBE342:
 5574              	.LBE349:
 579:sieve_extend.c ****     }
 5575              		.loc 1 579 9 is_stmt 1 view .LVU1907
 577:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5576              		.loc 1 577 11 view .LVU1908
 5577 21b1 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.351, %sfp
 5577      10
 5578 21b6 4E8D0420 		lea	r8, [rax+r12]	# ivtmp.351,
GAS LISTING /tmp/cc64mrzX.s 			page 160


 5579 21ba 4C39C3   		cmp	rbx, r8	# destination_stop_word, ivtmp.351
 5580 21bd 0F82CD00 		jb	.L465	#,
 5580      0000
 578:sieve_extend.c ****         copy_word += size;
 5581              		.loc 1 578 9 view .LVU1909
 5582              	.LVL215:
 5583              	.LBB350:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5584              		.loc 2 31 1 view .LVU1910
 5585              	.LBB343:
 5586              		.loc 2 34 3 view .LVU1911
 5587              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5588              		.loc 2 34 10 is_stmt 0 view .LVU1912
 5589 21c3 4C8B4C24 		mov	r9, QWORD PTR 24[rsp]	# _189, %sfp
 5589      18
 5590 21c8 4C89FA   		mov	rdx, r15	#, _15
 5591 21cb 4C894424 		mov	QWORD PTR 16[rsp], r8	# %sfp, ivtmp.351
 5591      10
 5592 21d0 4C89F6   		mov	rsi, r14	#, _5
 5593 21d3 4B8D3CC1 		lea	rdi, [r9+r8*8]	# tmp282,
 5594 21d7 E8000000 		call	memcpy@PLT	#
 5594      00
 5595              	.LVL216:
 5596              		.loc 2 34 10 view .LVU1913
 5597              	.LBE343:
 5598              	.LBE350:
 579:sieve_extend.c ****     }
 5599              		.loc 1 579 9 is_stmt 1 view .LVU1914
 577:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5600              		.loc 1 577 11 view .LVU1915
 5601 21dc 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.351, %sfp
 5601      10
 5602 21e1 4E8D1420 		lea	r10, [rax+r12]	# ivtmp.351,
 5603 21e5 4C39D3   		cmp	rbx, r10	# destination_stop_word, ivtmp.351
 5604 21e8 0F82A200 		jb	.L465	#,
 5604      0000
 578:sieve_extend.c ****         copy_word += size;
 5605              		.loc 1 578 9 view .LVU1916
 5606              	.LVL217:
 5607              	.LBB351:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5608              		.loc 2 31 1 view .LVU1917
 5609              	.LBB344:
 5610              		.loc 2 34 3 view .LVU1918
 5611              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5612              		.loc 2 34 10 is_stmt 0 view .LVU1919
 5613 21ee 4C8B5C24 		mov	r11, QWORD PTR 24[rsp]	# _189, %sfp
 5613      18
 5614 21f3 4C89FA   		mov	rdx, r15	#, _15
 5615 21f6 4C895424 		mov	QWORD PTR 16[rsp], r10	# %sfp, ivtmp.351
 5615      10
 5616 21fb 4C89F6   		mov	rsi, r14	#, _5
 5617 21fe 4B8D3CD3 		lea	rdi, [r11+r10*8]	# tmp285,
 5618 2202 E8000000 		call	memcpy@PLT	#
 5618      00
 5619              	.LVL218:
 5620              		.loc 2 34 10 view .LVU1920
GAS LISTING /tmp/cc64mrzX.s 			page 161


 5621              	.LBE344:
 5622              	.LBE351:
 579:sieve_extend.c ****     }
 5623              		.loc 1 579 9 is_stmt 1 view .LVU1921
 577:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5624              		.loc 1 577 11 view .LVU1922
 5625 2207 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.351, %sfp
 5625      10
 5626 220c 4A8D0C20 		lea	rcx, [rax+r12]	# ivtmp.351,
 5627 2210 4839CB   		cmp	rbx, rcx	# destination_stop_word, ivtmp.351
 5628 2213 727B     		jb	.L465	#,
 578:sieve_extend.c ****         copy_word += size;
 5629              		.loc 1 578 9 view .LVU1923
 5630              	.LVL219:
 5631              	.LBB352:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5632              		.loc 2 31 1 view .LVU1924
 5633              	.LBB345:
 5634              		.loc 2 34 3 view .LVU1925
 5635              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5636              		.loc 2 34 10 is_stmt 0 view .LVU1926
 5637 2215 488B7C24 		mov	rdi, QWORD PTR 24[rsp]	# _189, %sfp
 5637      18
 5638 221a 4C89F6   		mov	rsi, r14	#, _5
 5639 221d 48894C24 		mov	QWORD PTR 16[rsp], rcx	# %sfp, ivtmp.351
 5639      10
 5640 2222 4C89FA   		mov	rdx, r15	#, _15
 5641 2225 488D3CCF 		lea	rdi, [rdi+rcx*8]	# tmp288,
 5642 2229 E8000000 		call	memcpy@PLT	#
 5642      00
 5643              	.LVL220:
 5644              		.loc 2 34 10 view .LVU1927
 5645              	.LBE345:
 5646              	.LBE352:
 579:sieve_extend.c ****     }
 5647              		.loc 1 579 9 is_stmt 1 view .LVU1928
 577:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5648              		.loc 1 577 11 view .LVU1929
 5649 222e 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.351, %sfp
 5649      10
 5650 2233 4A8D3420 		lea	rsi, [rax+r12]	# ivtmp.351,
 5651 2237 4839F3   		cmp	rbx, rsi	# destination_stop_word, ivtmp.351
 5652 223a 7254     		jb	.L465	#,
 578:sieve_extend.c ****         copy_word += size;
 5653              		.loc 1 578 9 view .LVU1930
 5654              	.LVL221:
 5655              	.LBB353:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5656              		.loc 2 31 1 view .LVU1931
 5657              	.LBB346:
 5658              		.loc 2 34 3 view .LVU1932
 5659              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5660              		.loc 2 34 10 is_stmt 0 view .LVU1933
 5661 223c 488B5424 		mov	rdx, QWORD PTR 24[rsp]	# _189, %sfp
 5661      18
 5662 2241 48897424 		mov	QWORD PTR 16[rsp], rsi	# %sfp, ivtmp.351
 5662      10
GAS LISTING /tmp/cc64mrzX.s 			page 162


 5663 2246 488D3CF2 		lea	rdi, [rdx+rsi*8]	# tmp291,
 5664 224a 4C89FA   		mov	rdx, r15	#, _15
 5665 224d 4C89F6   		mov	rsi, r14	#, _5
 5666 2250 E8000000 		call	memcpy@PLT	#
 5666      00
 5667              	.LVL222:
 5668              		.loc 2 34 10 view .LVU1934
 5669              	.LBE346:
 5670              	.LBE353:
 579:sieve_extend.c ****     }
 5671              		.loc 1 579 9 is_stmt 1 view .LVU1935
 577:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5672              		.loc 1 577 11 view .LVU1936
 5673 2255 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.351, %sfp
 5673      10
 5674 225a 4E8D0420 		lea	r8, [rax+r12]	# ivtmp.351,
 5675 225e 4C39C3   		cmp	rbx, r8	# destination_stop_word, ivtmp.351
 5676 2261 722D     		jb	.L465	#,
 578:sieve_extend.c ****         copy_word += size;
 5677              		.loc 1 578 9 view .LVU1937
 5678              	.LVL223:
 5679              	.LBB354:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5680              		.loc 2 31 1 view .LVU1938
 5681              	.LBB347:
 5682              		.loc 2 34 3 view .LVU1939
 5683              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5684              		.loc 2 34 10 is_stmt 0 view .LVU1940
 5685 2263 4C8B4C24 		mov	r9, QWORD PTR 24[rsp]	# _189, %sfp
 5685      18
 5686 2268 4C89FA   		mov	rdx, r15	#, _15
 5687 226b 4C894424 		mov	QWORD PTR 16[rsp], r8	# %sfp, ivtmp.351
 5687      10
 5688 2270 4C89F6   		mov	rsi, r14	#, _5
 5689 2273 4B8D3CC1 		lea	rdi, [r9+r8*8]	# tmp294,
 5690 2277 E8000000 		call	memcpy@PLT	#
 5690      00
 5691              	.LVL224:
 5692              		.loc 2 34 10 view .LVU1941
 5693              	.LBE347:
 5694              	.LBE354:
 579:sieve_extend.c ****     }
 5695              		.loc 1 579 9 is_stmt 1 view .LVU1942
 577:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5696              		.loc 1 577 11 view .LVU1943
 5697 227c 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.351, %sfp
 5697      10
 5698              	.LVL225:
 577:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5699              		.loc 1 577 11 is_stmt 0 view .LVU1944
 5700 2281 4A8D0C20 		lea	rcx, [rax+r12]	# ivtmp.351,
 5701              	.LVL226:
 577:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5702              		.loc 1 577 11 view .LVU1945
 5703 2285 4839CB   		cmp	rbx, rcx	# destination_stop_word, ivtmp.351
 5704 2288 0F83B4FE 		jnb	.L466	#,
 5704      FFFF
GAS LISTING /tmp/cc64mrzX.s 			page 163


 5705              	.LVL227:
 5706 228e 6690     		.p2align 4
 5707              		.p2align 3
 5708              	.L465:
 582:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5709              		.loc 1 582 10 is_stmt 1 view .LVU1946
 5710 2290 4839C3   		cmp	rbx, rax	# destination_stop_word, ivtmp.351
 5711 2293 0F864902 		jbe	.L576	#,
 5711      0000
 5712 2299 4C8B1424 		mov	r10, QWORD PTR [rsp]	# _4, %sfp
 5713 229d 4C8D24C5 		lea	r12, 0[0+rax*8]	# _41,
 5713      00000000 
 5714              	.LVL228:
 582:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5715              		.loc 1 582 10 is_stmt 0 view .LVU1947
 5716 22a5 4D8D7C24 		lea	r15, 32[r12]	# tmp199,
 5716      20
 5717 22aa 498D7A20 		lea	rdi, 32[r10]	# tmp202,
 5718 22ae 4D39FA   		cmp	r10, r15	# _4, tmp199
 5719 22b1 410F9DC3 		setge	r11b	#, tmp201
 5720 22b5 4939FC   		cmp	r12, rdi	# _41, tmp202
 5721 22b8 400F9DC6 		setge	sil	#, tmp204
 5722 22bc 4108F3   		or	r11b, sil	# tmp201, tmp204
 5723 22bf 0F844B02 		je	.L468	#,
 5723      0000
 5724 22c5 488D53FF 		lea	rdx, -1[rbx]	# tmp206,
 5725 22c9 4829C2   		sub	rdx, rax	# tmp207, ivtmp.351
 5726 22cc 4883FA05 		cmp	rdx, 5	# tmp207,
 5727 22d0 0F863A02 		jbe	.L468	#,
 5727      0000
 5728 22d6 4D89F7   		mov	r15, r14	# tmp210, _5
 5729 22d9 49C1EF03 		shr	r15, 3	# tmp210,
 5730 22dd 49F7DF   		neg	r15	# tmp211
 5731 22e0 4183E703 		and	r15d, 3	# prolog_loop_niters.319,
 5732 22e4 0F842E03 		je	.L475	#,
 5732      0000
 583:sieve_extend.c ****         source_word++;
 5733              		.loc 1 583 9 is_stmt 1 view .LVU1948
 5734              	# sieve_extend.c:583:         bitarray[copy_word] = bitarray[source_word];
 583:sieve_extend.c ****         source_word++;
 5735              		.loc 1 583 39 is_stmt 0 view .LVU1949
 5736 22ea 4D8B06   		mov	r8, QWORD PTR [r14]	# _150, *_5
 5737 22ed 4983FF01 		cmp	r15, 1	# prolog_loop_niters.319,
 5738              	# sieve_extend.c:584:         source_word++;
 584:sieve_extend.c ****         copy_word++;
 5739              		.loc 1 584 20 view .LVU1950
 5740 22f1 4C8B4C24 		mov	r9, QWORD PTR 8[rsp]	# source_word, %sfp
 5740      08
 5741              	# sieve_extend.c:585:         copy_word++;
 585:sieve_extend.c ****     }
 5742              		.loc 1 585 18 view .LVU1951
 5743 22f6 4C8D7001 		lea	r14, 1[rax]	# copy_word,
 5744              	# sieve_extend.c:583:         bitarray[copy_word] = bitarray[source_word];
 583:sieve_extend.c ****         source_word++;
 5745              		.loc 1 583 29 view .LVU1952
 5746 22fa 4F894425 		mov	QWORD PTR 0[r13+r12], r8	# *_149, _150
 5746      00
GAS LISTING /tmp/cc64mrzX.s 			page 164


 584:sieve_extend.c ****         copy_word++;
 5747              		.loc 1 584 9 is_stmt 1 view .LVU1953
 5748              	# sieve_extend.c:584:         source_word++;
 584:sieve_extend.c ****         copy_word++;
 5749              		.loc 1 584 20 is_stmt 0 view .LVU1954
 5750 22ff 4D8D6101 		lea	r12, 1[r9]	# source_word,
 5751              	.LVL229:
 585:sieve_extend.c ****     }
 5752              		.loc 1 585 9 is_stmt 1 view .LVU1955
 582:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5753              		.loc 1 582 10 view .LVU1956
 5754 2303 742A     		je	.L469	#,
 583:sieve_extend.c ****         source_word++;
 5755              		.loc 1 583 9 view .LVU1957
 5756              	# sieve_extend.c:583:         bitarray[copy_word] = bitarray[source_word];
 583:sieve_extend.c ****         source_word++;
 5757              		.loc 1 583 39 is_stmt 0 view .LVU1958
 5758 2305 4B8B4CE5 		mov	rcx, QWORD PTR 0[r13+r12*8]	# _163, *_160
 5758      00
 5759 230a 4983FF03 		cmp	r15, 3	# prolog_loop_niters.319,
 5760              	# sieve_extend.c:584:         source_word++;
 584:sieve_extend.c ****         copy_word++;
 5761              		.loc 1 584 20 view .LVU1959
 5762 230e 4D8D6102 		lea	r12, 2[r9]	# source_word,
 5763              	.LVL230:
 5764              	# sieve_extend.c:583:         bitarray[copy_word] = bitarray[source_word];
 583:sieve_extend.c ****         source_word++;
 5765              		.loc 1 583 29 view .LVU1960
 5766 2312 4B894CF5 		mov	QWORD PTR 0[r13+r14*8], rcx	# *_162, _163
 5766      00
 584:sieve_extend.c ****         copy_word++;
 5767              		.loc 1 584 9 is_stmt 1 view .LVU1961
 5768              	.LVL231:
 585:sieve_extend.c ****     }
 5769              		.loc 1 585 9 view .LVU1962
 5770              	# sieve_extend.c:585:         copy_word++;
 585:sieve_extend.c ****     }
 5771              		.loc 1 585 18 is_stmt 0 view .LVU1963
 5772 2317 4C8D7002 		lea	r14, 2[rax]	# copy_word,
 5773              	.LVL232:
 582:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5774              		.loc 1 582 10 is_stmt 1 view .LVU1964
 5775 231b 7512     		jne	.L469	#,
 583:sieve_extend.c ****         source_word++;
 5776              		.loc 1 583 9 view .LVU1965
 5777              	# sieve_extend.c:583:         bitarray[copy_word] = bitarray[source_word];
 583:sieve_extend.c ****         source_word++;
 5778              		.loc 1 583 39 is_stmt 0 view .LVU1966
 5779 231d 4F8B54E5 		mov	r10, QWORD PTR 0[r13+r12*8]	# _89, *_86
 5779      00
 5780              	# sieve_extend.c:584:         source_word++;
 584:sieve_extend.c ****         copy_word++;
 5781              		.loc 1 584 20 view .LVU1967
 5782 2322 4D8D6103 		lea	r12, 3[r9]	# source_word,
 5783              	.LVL233:
 5784              	# sieve_extend.c:583:         bitarray[copy_word] = bitarray[source_word];
 583:sieve_extend.c ****         source_word++;
GAS LISTING /tmp/cc64mrzX.s 			page 165


 5785              		.loc 1 583 29 view .LVU1968
 5786 2326 4F8954F5 		mov	QWORD PTR 0[r13+r14*8], r10	# *_88, _89
 5786      00
 584:sieve_extend.c ****         copy_word++;
 5787              		.loc 1 584 9 is_stmt 1 view .LVU1969
 5788              	.LVL234:
 585:sieve_extend.c ****     }
 5789              		.loc 1 585 9 view .LVU1970
 5790              	# sieve_extend.c:585:         copy_word++;
 585:sieve_extend.c ****     }
 5791              		.loc 1 585 18 is_stmt 0 view .LVU1971
 5792 232b 4C8D7003 		lea	r14, 3[rax]	# copy_word,
 5793              	.LVL235:
 582:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5794              		.loc 1 582 10 is_stmt 1 view .LVU1972
 5795              	.L469:
 582:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5796              		.loc 1 582 10 is_stmt 0 view .LVU1973
 5797 232f 488B7C24 		mov	rdi, QWORD PTR 8[rsp]	# source_word, %sfp
 5797      08
 5798 2334 4989DB   		mov	r11, rbx	# tmp212, destination_stop_word
 5799 2337 4D29FB   		sub	r11, r15	# tmp212, prolog_loop_niters.319
 5800 233a 4929C3   		sub	r11, rax	# niters.320, ivtmp.351
 5801 233d 4C01F8   		add	rax, r15	# tmp215, prolog_loop_niters.319
 5802 2340 4D89D8   		mov	r8, r11	# bnd.321, niters.320
 5803 2343 4C01FF   		add	rdi, r15	# source_word, prolog_loop_niters.319
 5804 2346 49C1E802 		shr	r8, 2	# bnd.321,
 5805 234a 4D8D7CC5 		lea	r15, 0[r13+rax*8]	# vectp.329,
 5805      00
 5806 234f 49C1E005 		sal	r8, 5	# _182,
 5807              	# sieve_extend.c:572:     counter_t source_word = wordindex(source_start);
 572:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 5808              		.loc 1 572 15 view .LVU1974
 5809 2353 31C0     		xor	eax, eax	# ivtmp.342
 5810 2355 498D50E0 		lea	rdx, -32[r8]	# tmp228,
 5811 2359 498D74FD 		lea	rsi, 0[r13+rdi*8]	# vectp.326,
 5811      00
 5812 235e 48C1EA05 		shr	rdx, 5	# tmp226,
 5813 2362 4883C201 		add	rdx, 1	# tmp229,
 5814 2366 83E207   		and	edx, 7	# tmp230,
 5815 2369 0F849500 		je	.L471	#,
 5815      0000
 5816 236f 4883FA01 		cmp	rdx, 1	# tmp230,
 5817 2373 7477     		je	.L535	#,
 5818 2375 4883FA02 		cmp	rdx, 2	# tmp230,
 5819 2379 7462     		je	.L536	#,
 5820 237b 4883FA03 		cmp	rdx, 3	# tmp230,
 5821 237f 744D     		je	.L537	#,
 5822 2381 4883FA04 		cmp	rdx, 4	# tmp230,
 5823 2385 7438     		je	.L538	#,
 5824 2387 4883FA05 		cmp	rdx, 5	# tmp230,
 5825 238b 7423     		je	.L539	#,
 5826 238d 4883FA06 		cmp	rdx, 6	# tmp230,
 5827 2391 740E     		je	.L540	#,
 583:sieve_extend.c ****         source_word++;
 5828              		.loc 1 583 9 is_stmt 1 view .LVU1975
 5829              	# sieve_extend.c:583:         bitarray[copy_word] = bitarray[source_word];
GAS LISTING /tmp/cc64mrzX.s 			page 166


 583:sieve_extend.c ****         source_word++;
 5830              		.loc 1 583 29 is_stmt 0 view .LVU1976
 5831 2393 C5FD6F0E 		vmovdqa	ymm1, YMMWORD PTR [rsi]	# tmp330, MEM[base: vectp.326_119, index: ivtmp.342_180, offset: 0
 5832 2397 B8200000 		mov	eax, 32	# ivtmp.342,
 5832      00
 5833 239c C4C17E7F 		vmovdqu	YMMWORD PTR [r15], ymm1	# MEM[base: vectp.329_125, index: ivtmp.342_180, offset: 0B], tmp3
 5833      0F
 584:sieve_extend.c ****         copy_word++;
 5834              		.loc 1 584 9 is_stmt 1 view .LVU1977
 585:sieve_extend.c ****     }
 5835              		.loc 1 585 9 view .LVU1978
 582:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5836              		.loc 1 582 10 view .LVU1979
 5837              	.L540:
 583:sieve_extend.c ****         source_word++;
 5838              		.loc 1 583 9 view .LVU1980
 5839              	# sieve_extend.c:583:         bitarray[copy_word] = bitarray[source_word];
 583:sieve_extend.c ****         source_word++;
 5840              		.loc 1 583 29 is_stmt 0 view .LVU1981
 5841 23a1 C5FD6F3C 		vmovdqa	ymm7, YMMWORD PTR [rsi+rax]	# tmp331, MEM[base: vectp.326_119, index: ivtmp.342_180, offse
 5841      06
 5842 23a6 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm7	# MEM[base: vectp.329_125, index: ivtmp.342_180, offset: 0B], 
 5842      3C07
 584:sieve_extend.c ****         copy_word++;
 5843              		.loc 1 584 9 is_stmt 1 view .LVU1982
 585:sieve_extend.c ****     }
 5844              		.loc 1 585 9 view .LVU1983
 582:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5845              		.loc 1 582 10 view .LVU1984
 5846 23ac 4883C020 		add	rax, 32	# ivtmp.342,
 5847              	.L539:
 583:sieve_extend.c ****         source_word++;
 5848              		.loc 1 583 9 view .LVU1985
 5849              	# sieve_extend.c:583:         bitarray[copy_word] = bitarray[source_word];
 583:sieve_extend.c ****         source_word++;
 5850              		.loc 1 583 29 is_stmt 0 view .LVU1986
 5851 23b0 C5FD6F34 		vmovdqa	ymm6, YMMWORD PTR [rsi+rax]	# tmp332, MEM[base: vectp.326_119, index: ivtmp.342_180, offse
 5851      06
 5852 23b5 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm6	# MEM[base: vectp.329_125, index: ivtmp.342_180, offset: 0B], 
 5852      3407
 584:sieve_extend.c ****         copy_word++;
 5853              		.loc 1 584 9 is_stmt 1 view .LVU1987
 585:sieve_extend.c ****     }
 5854              		.loc 1 585 9 view .LVU1988
 582:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5855              		.loc 1 582 10 view .LVU1989
 5856 23bb 4883C020 		add	rax, 32	# ivtmp.342,
 5857              	.L538:
 583:sieve_extend.c ****         source_word++;
 5858              		.loc 1 583 9 view .LVU1990
 5859              	# sieve_extend.c:583:         bitarray[copy_word] = bitarray[source_word];
 583:sieve_extend.c ****         source_word++;
 5860              		.loc 1 583 29 is_stmt 0 view .LVU1991
 5861 23bf C5FD6F2C 		vmovdqa	ymm5, YMMWORD PTR [rsi+rax]	# tmp333, MEM[base: vectp.326_119, index: ivtmp.342_180, offse
 5861      06
 5862 23c4 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm5	# MEM[base: vectp.329_125, index: ivtmp.342_180, offset: 0B], 
 5862      2C07
GAS LISTING /tmp/cc64mrzX.s 			page 167


 584:sieve_extend.c ****         copy_word++;
 5863              		.loc 1 584 9 is_stmt 1 view .LVU1992
 585:sieve_extend.c ****     }
 5864              		.loc 1 585 9 view .LVU1993
 582:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5865              		.loc 1 582 10 view .LVU1994
 5866 23ca 4883C020 		add	rax, 32	# ivtmp.342,
 5867              	.L537:
 583:sieve_extend.c ****         source_word++;
 5868              		.loc 1 583 9 view .LVU1995
 5869              	# sieve_extend.c:583:         bitarray[copy_word] = bitarray[source_word];
 583:sieve_extend.c ****         source_word++;
 5870              		.loc 1 583 29 is_stmt 0 view .LVU1996
 5871 23ce C5FD6F24 		vmovdqa	ymm4, YMMWORD PTR [rsi+rax]	# tmp334, MEM[base: vectp.326_119, index: ivtmp.342_180, offse
 5871      06
 5872 23d3 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm4	# MEM[base: vectp.329_125, index: ivtmp.342_180, offset: 0B], 
 5872      2407
 584:sieve_extend.c ****         copy_word++;
 5873              		.loc 1 584 9 is_stmt 1 view .LVU1997
 585:sieve_extend.c ****     }
 5874              		.loc 1 585 9 view .LVU1998
 582:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5875              		.loc 1 582 10 view .LVU1999
 5876 23d9 4883C020 		add	rax, 32	# ivtmp.342,
 5877              	.L536:
 583:sieve_extend.c ****         source_word++;
 5878              		.loc 1 583 9 view .LVU2000
 5879              	# sieve_extend.c:583:         bitarray[copy_word] = bitarray[source_word];
 583:sieve_extend.c ****         source_word++;
 5880              		.loc 1 583 29 is_stmt 0 view .LVU2001
 5881 23dd C5FD6F04 		vmovdqa	ymm0, YMMWORD PTR [rsi+rax]	# tmp335, MEM[base: vectp.326_119, index: ivtmp.342_180, offse
 5881      06
 5882 23e2 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm0	# MEM[base: vectp.329_125, index: ivtmp.342_180, offset: 0B], 
 5882      0407
 584:sieve_extend.c ****         copy_word++;
 5883              		.loc 1 584 9 is_stmt 1 view .LVU2002
 585:sieve_extend.c ****     }
 5884              		.loc 1 585 9 view .LVU2003
 582:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5885              		.loc 1 582 10 view .LVU2004
 5886 23e8 4883C020 		add	rax, 32	# ivtmp.342,
 5887              	.L535:
 583:sieve_extend.c ****         source_word++;
 5888              		.loc 1 583 9 view .LVU2005
 5889              	# sieve_extend.c:583:         bitarray[copy_word] = bitarray[source_word];
 583:sieve_extend.c ****         source_word++;
 5890              		.loc 1 583 29 is_stmt 0 view .LVU2006
 5891 23ec C5FD6F14 		vmovdqa	ymm2, YMMWORD PTR [rsi+rax]	# tmp336, MEM[base: vectp.326_119, index: ivtmp.342_180, offse
 5891      06
 5892 23f1 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm2	# MEM[base: vectp.329_125, index: ivtmp.342_180, offset: 0B], 
 5892      1407
 584:sieve_extend.c ****         copy_word++;
 5893              		.loc 1 584 9 is_stmt 1 view .LVU2007
 585:sieve_extend.c ****     }
 5894              		.loc 1 585 9 view .LVU2008
 582:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5895              		.loc 1 582 10 view .LVU2009
GAS LISTING /tmp/cc64mrzX.s 			page 168


 5896 23f7 4883C020 		add	rax, 32	# ivtmp.342,
 5897 23fb 4C39C0   		cmp	rax, r8	# ivtmp.342, _182
 5898 23fe 0F848D00 		je	.L572	#,
 5898      0000
 5899              	.L471:
 583:sieve_extend.c ****         source_word++;
 5900              		.loc 1 583 9 view .LVU2010
 5901              	# sieve_extend.c:583:         bitarray[copy_word] = bitarray[source_word];
 583:sieve_extend.c ****         source_word++;
 5902              		.loc 1 583 29 is_stmt 0 view .LVU2011
 5903 2404 C5FD6F1C 		vmovdqa	ymm3, YMMWORD PTR [rsi+rax]	# tmp319, MEM[base: vectp.326_119, index: ivtmp.342_180, offse
 5903      06
 5904 2409 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm3	# MEM[base: vectp.329_125, index: ivtmp.342_180, offset: 0B], 
 5904      1C07
 584:sieve_extend.c ****         copy_word++;
 5905              		.loc 1 584 9 is_stmt 1 view .LVU2012
 585:sieve_extend.c ****     }
 5906              		.loc 1 585 9 view .LVU2013
 582:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5907              		.loc 1 582 10 view .LVU2014
 583:sieve_extend.c ****         source_word++;
 5908              		.loc 1 583 9 view .LVU2015
 5909              	# sieve_extend.c:583:         bitarray[copy_word] = bitarray[source_word];
 583:sieve_extend.c ****         source_word++;
 5910              		.loc 1 583 29 is_stmt 0 view .LVU2016
 5911 240f C57D6F44 		vmovdqa	ymm8, YMMWORD PTR 32[rsi+rax]	# tmp320, MEM[base: vectp.326_119, index: ivtmp.342_180, off
 5911      0620
 5912 2415 C4417E7F 		vmovdqu	YMMWORD PTR 32[r15+rax], ymm8	# MEM[base: vectp.329_125, index: ivtmp.342_180, offset: 0B]
 5912      440720
 584:sieve_extend.c ****         copy_word++;
 5913              		.loc 1 584 9 is_stmt 1 view .LVU2017
 585:sieve_extend.c ****     }
 5914              		.loc 1 585 9 view .LVU2018
 582:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5915              		.loc 1 582 10 view .LVU2019
 583:sieve_extend.c ****         source_word++;
 5916              		.loc 1 583 9 view .LVU2020
 5917              	# sieve_extend.c:583:         bitarray[copy_word] = bitarray[source_word];
 583:sieve_extend.c ****         source_word++;
 5918              		.loc 1 583 29 is_stmt 0 view .LVU2021
 5919 241c C57D6F4C 		vmovdqa	ymm9, YMMWORD PTR 64[rsi+rax]	# tmp321, MEM[base: vectp.326_119, index: ivtmp.342_180, off
 5919      0640
 5920 2422 C4417E7F 		vmovdqu	YMMWORD PTR 64[r15+rax], ymm9	# MEM[base: vectp.329_125, index: ivtmp.342_180, offset: 0B]
 5920      4C0740
 584:sieve_extend.c ****         copy_word++;
 5921              		.loc 1 584 9 is_stmt 1 view .LVU2022
 585:sieve_extend.c ****     }
 5922              		.loc 1 585 9 view .LVU2023
 582:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5923              		.loc 1 582 10 view .LVU2024
 583:sieve_extend.c ****         source_word++;
 5924              		.loc 1 583 9 view .LVU2025
 5925              	# sieve_extend.c:583:         bitarray[copy_word] = bitarray[source_word];
 583:sieve_extend.c ****         source_word++;
 5926              		.loc 1 583 29 is_stmt 0 view .LVU2026
 5927 2429 C57D6F54 		vmovdqa	ymm10, YMMWORD PTR 96[rsi+rax]	# tmp322, MEM[base: vectp.326_119, index: ivtmp.342_180, of
 5927      0660
GAS LISTING /tmp/cc64mrzX.s 			page 169


 5928 242f C4417E7F 		vmovdqu	YMMWORD PTR 96[r15+rax], ymm10	# MEM[base: vectp.329_125, index: ivtmp.342_180, offset: 0B
 5928      540760
 584:sieve_extend.c ****         copy_word++;
 5929              		.loc 1 584 9 is_stmt 1 view .LVU2027
 585:sieve_extend.c ****     }
 5930              		.loc 1 585 9 view .LVU2028
 582:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5931              		.loc 1 582 10 view .LVU2029
 583:sieve_extend.c ****         source_word++;
 5932              		.loc 1 583 9 view .LVU2030
 5933              	# sieve_extend.c:583:         bitarray[copy_word] = bitarray[source_word];
 583:sieve_extend.c ****         source_word++;
 5934              		.loc 1 583 29 is_stmt 0 view .LVU2031
 5935 2436 C57D6F9C 		vmovdqa	ymm11, YMMWORD PTR 128[rsi+rax]	# tmp323, MEM[base: vectp.326_119, index: ivtmp.342_180, o
 5935      06800000 
 5935      00
 5936 243f C4417E7F 		vmovdqu	YMMWORD PTR 128[r15+rax], ymm11	# MEM[base: vectp.329_125, index: ivtmp.342_180, offset: 0
 5936      9C078000 
 5936      0000
 584:sieve_extend.c ****         copy_word++;
 5937              		.loc 1 584 9 is_stmt 1 view .LVU2032
 585:sieve_extend.c ****     }
 5938              		.loc 1 585 9 view .LVU2033
 582:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5939              		.loc 1 582 10 view .LVU2034
 583:sieve_extend.c ****         source_word++;
 5940              		.loc 1 583 9 view .LVU2035
 5941              	# sieve_extend.c:583:         bitarray[copy_word] = bitarray[source_word];
 583:sieve_extend.c ****         source_word++;
 5942              		.loc 1 583 29 is_stmt 0 view .LVU2036
 5943 2449 C57D6FA4 		vmovdqa	ymm12, YMMWORD PTR 160[rsi+rax]	# tmp324, MEM[base: vectp.326_119, index: ivtmp.342_180, o
 5943      06A00000 
 5943      00
 5944 2452 C4417E7F 		vmovdqu	YMMWORD PTR 160[r15+rax], ymm12	# MEM[base: vectp.329_125, index: ivtmp.342_180, offset: 0
 5944      A407A000 
 5944      0000
 584:sieve_extend.c ****         copy_word++;
 5945              		.loc 1 584 9 is_stmt 1 view .LVU2037
 585:sieve_extend.c ****     }
 5946              		.loc 1 585 9 view .LVU2038
 582:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5947              		.loc 1 582 10 view .LVU2039
 583:sieve_extend.c ****         source_word++;
 5948              		.loc 1 583 9 view .LVU2040
 5949              	# sieve_extend.c:583:         bitarray[copy_word] = bitarray[source_word];
 583:sieve_extend.c ****         source_word++;
 5950              		.loc 1 583 29 is_stmt 0 view .LVU2041
 5951 245c C57D6FAC 		vmovdqa	ymm13, YMMWORD PTR 192[rsi+rax]	# tmp325, MEM[base: vectp.326_119, index: ivtmp.342_180, o
 5951      06C00000 
 5951      00
 5952 2465 C4417E7F 		vmovdqu	YMMWORD PTR 192[r15+rax], ymm13	# MEM[base: vectp.329_125, index: ivtmp.342_180, offset: 0
 5952      AC07C000 
 5952      0000
 584:sieve_extend.c ****         copy_word++;
 5953              		.loc 1 584 9 is_stmt 1 view .LVU2042
 585:sieve_extend.c ****     }
 5954              		.loc 1 585 9 view .LVU2043
GAS LISTING /tmp/cc64mrzX.s 			page 170


 582:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5955              		.loc 1 582 10 view .LVU2044
 583:sieve_extend.c ****         source_word++;
 5956              		.loc 1 583 9 view .LVU2045
 5957              	# sieve_extend.c:583:         bitarray[copy_word] = bitarray[source_word];
 583:sieve_extend.c ****         source_word++;
 5958              		.loc 1 583 29 is_stmt 0 view .LVU2046
 5959 246f C57D6FB4 		vmovdqa	ymm14, YMMWORD PTR 224[rsi+rax]	# tmp326, MEM[base: vectp.326_119, index: ivtmp.342_180, o
 5959      06E00000 
 5959      00
 5960 2478 C4417E7F 		vmovdqu	YMMWORD PTR 224[r15+rax], ymm14	# MEM[base: vectp.329_125, index: ivtmp.342_180, offset: 0
 5960      B407E000 
 5960      0000
 584:sieve_extend.c ****         copy_word++;
 5961              		.loc 1 584 9 is_stmt 1 view .LVU2047
 585:sieve_extend.c ****     }
 5962              		.loc 1 585 9 view .LVU2048
 582:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5963              		.loc 1 582 10 view .LVU2049
 5964 2482 48050001 		add	rax, 256	# ivtmp.342,
 5964      0000
 5965 2488 4C39C0   		cmp	rax, r8	# ivtmp.342, _182
 5966 248b 0F8573FF 		jne	.L471	#,
 5966      FFFF
 5967              	.L572:
 5968 2491 4D89D9   		mov	r9, r11	# niters_vector_mult_vf.322, niters.320
 5969 2494 4983E1FC 		and	r9, -4	# niters_vector_mult_vf.322,
 5970 2498 4D01CC   		add	r12, r9	# tmp.323, niters_vector_mult_vf.322
 5971 249b 4D01CE   		add	r14, r9	# tmp.324, niters_vector_mult_vf.322
 5972 249e 4D39CB   		cmp	r11, r9	# niters.320, niters_vector_mult_vf.322
 5973 24a1 7455     		je	.L575	#,
 5974              	.LVL236:
 583:sieve_extend.c ****         source_word++;
 5975              		.loc 1 583 9 view .LVU2050
 5976              	# sieve_extend.c:583:         bitarray[copy_word] = bitarray[source_word];
 583:sieve_extend.c ****         source_word++;
 5977              		.loc 1 583 39 is_stmt 0 view .LVU2051
 5978 24a3 4B8B4CE5 		mov	rcx, QWORD PTR 0[r13+r12*8]	# _37, *_21
 5978      00
 5979              	# sieve_extend.c:585:         copy_word++;
 585:sieve_extend.c ****     }
 5980              		.loc 1 585 18 view .LVU2052
 5981 24a8 4D8D5601 		lea	r10, 1[r14]	# copy_word,
 5982              	# sieve_extend.c:584:         source_word++;
 584:sieve_extend.c ****         copy_word++;
 5983              		.loc 1 584 20 view .LVU2053
 5984 24ac 4983C401 		add	r12, 1	# source_word,
 5985              	.LVL237:
 5986              	# sieve_extend.c:582:    while (copy_word < destination_stop_word) {
 582:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5987              		.loc 1 582 10 view .LVU2054
 5988 24b0 4C39D3   		cmp	rbx, r10	# destination_stop_word, copy_word
 5989              	# sieve_extend.c:583:         bitarray[copy_word] = bitarray[source_word];
 583:sieve_extend.c ****         source_word++;
 5990              		.loc 1 583 29 view .LVU2055
 5991 24b3 4B894CF5 		mov	QWORD PTR 0[r13+r14*8], rcx	# *_23, _37
 5991      00
GAS LISTING /tmp/cc64mrzX.s 			page 171


 584:sieve_extend.c ****         copy_word++;
 5992              		.loc 1 584 9 is_stmt 1 view .LVU2056
 5993              	.LVL238:
 585:sieve_extend.c ****     }
 5994              		.loc 1 585 9 view .LVU2057
 582:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5995              		.loc 1 582 10 view .LVU2058
 5996 24b8 763E     		jbe	.L575	#,
 583:sieve_extend.c ****         source_word++;
 5997              		.loc 1 583 9 view .LVU2059
 5998              	# sieve_extend.c:583:         bitarray[copy_word] = bitarray[source_word];
 583:sieve_extend.c ****         source_word++;
 5999              		.loc 1 583 39 is_stmt 0 view .LVU2060
 6000 24ba 4E8D1CE5 		lea	r11, 0[0+r12*8]	# _134,
 6000      00000000 
 6001              	# sieve_extend.c:585:         copy_word++;
 585:sieve_extend.c ****     }
 6002              		.loc 1 585 18 view .LVU2061
 6003 24c2 4983C602 		add	r14, 2	# copy_word,
 6004              	# sieve_extend.c:583:         bitarray[copy_word] = bitarray[source_word];
 583:sieve_extend.c ****         source_word++;
 6005              		.loc 1 583 39 view .LVU2062
 6006 24c6 4F8B64E5 		mov	r12, QWORD PTR 0[r13+r12*8]	# _138, *_135
 6006      00
 6007              	# sieve_extend.c:582:    while (copy_word < destination_stop_word) {
 582:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6008              		.loc 1 582 10 view .LVU2063
 6009 24cb 4C39F3   		cmp	rbx, r14	# destination_stop_word, copy_word
 6010              	# sieve_extend.c:583:         bitarray[copy_word] = bitarray[source_word];
 583:sieve_extend.c ****         source_word++;
 6011              		.loc 1 583 29 view .LVU2064
 6012 24ce 4F8964D5 		mov	QWORD PTR 0[r13+r10*8], r12	# *_137, _138
 6012      00
 584:sieve_extend.c ****         copy_word++;
 6013              		.loc 1 584 9 is_stmt 1 view .LVU2065
 585:sieve_extend.c ****     }
 6014              		.loc 1 585 9 view .LVU2066
 6015              	.LVL239:
 582:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6016              		.loc 1 582 10 view .LVU2067
 6017 24d3 7623     		jbe	.L575	#,
 583:sieve_extend.c ****         source_word++;
 6018              		.loc 1 583 9 view .LVU2068
 6019              	# sieve_extend.c:583:         bitarray[copy_word] = bitarray[source_word];
 583:sieve_extend.c ****         source_word++;
 6020              		.loc 1 583 39 is_stmt 0 view .LVU2069
 6021 24d5 4B8B5C1D 		mov	rbx, QWORD PTR 8[r13+r11]	# _109, *_106
 6021      08
 6022              	.LVL240:
 6023              	# sieve_extend.c:583:         bitarray[copy_word] = bitarray[source_word];
 583:sieve_extend.c ****         source_word++;
 6024              		.loc 1 583 29 view .LVU2070
 6025 24da 4B895CF5 		mov	QWORD PTR 0[r13+r14*8], rbx	# *_108, _109
 6025      00
 584:sieve_extend.c ****         copy_word++;
 6026              		.loc 1 584 9 is_stmt 1 view .LVU2071
 585:sieve_extend.c ****     }
GAS LISTING /tmp/cc64mrzX.s 			page 172


 6027              		.loc 1 585 9 view .LVU2072
 582:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6028              		.loc 1 582 10 view .LVU2073
 6029 24df C5F877   		vzeroupper
 6030              	.LVL241:
 6031              	.L576:
 6032              	# sieve_extend.c:588: }
 588:sieve_extend.c **** 
 6033              		.loc 1 588 1 is_stmt 0 view .LVU2074
 6034 24e2 488D65D8 		lea	rsp, -40[rbp]	#,
 6035 24e6 5B       		pop	rbx	#
 6036 24e7 415C     		pop	r12	#
 6037 24e9 415D     		pop	r13	#
 6038 24eb 415E     		pop	r14	#
 6039 24ed 415F     		pop	r15	#
 6040 24ef 5D       		pop	rbp	#
 6041              		.cfi_remember_state
 6042              		.cfi_def_cfa 7, 8
 6043 24f0 C3       		ret	
 6044              	.LVL242:
 6045              		.p2align 4,,7
 6046 24f1 0F1F8000 		.p2align 3
 6046      000000
 6047              	.L575:
 6048              		.cfi_restore_state
 588:sieve_extend.c **** 
 6049              		.loc 1 588 1 view .LVU2075
 6050 24f8 C5F877   		vzeroupper
 6051 24fb 488D65D8 		lea	rsp, -40[rbp]	#,
 6052 24ff 5B       		pop	rbx	#
 6053              	.LVL243:
 588:sieve_extend.c **** 
 6054              		.loc 1 588 1 view .LVU2076
 6055 2500 415C     		pop	r12	#
 6056 2502 415D     		pop	r13	#
 6057              	.LVL244:
 588:sieve_extend.c **** 
 6058              		.loc 1 588 1 view .LVU2077
 6059 2504 415E     		pop	r14	#
 6060 2506 415F     		pop	r15	#
 6061 2508 5D       		pop	rbp	#
 6062              		.cfi_remember_state
 6063              		.cfi_def_cfa 7, 8
 6064 2509 C3       		ret	
 6065              	.LVL245:
 6066 250a 660F1F44 		.p2align 4,,7
 6066      0000
 6067              		.p2align 3
 6068              	.L468:
 6069              		.cfi_restore_state
 6070              	# sieve_extend.c:583:         bitarray[copy_word] = bitarray[source_word];
 583:sieve_extend.c ****         source_word++;
 6071              		.loc 1 583 39 view .LVU2078
 6072 2510 488B7C24 		mov	rdi, QWORD PTR 8[rsp]	# source_word, %sfp
 6072      08
 6073 2515 4F8D7425 		lea	r14, 0[r13+r12]	# ivtmp.337,
 6073      00
GAS LISTING /tmp/cc64mrzX.s 			page 173


 6074 251a 4D8D6CDD 		lea	r13, 0[r13+rbx*8]	# _179,
 6074      00
 6075              	.LVL246:
 583:sieve_extend.c ****         source_word++;
 6076              		.loc 1 583 39 view .LVU2079
 6077 251f 4C89EE   		mov	rsi, r13	# tmp221, _179
 6078 2522 4C29F6   		sub	rsi, r14	# tmp221, ivtmp.337
 6079 2525 4829C7   		sub	rdi, rax	# source_word, ivtmp.351
 6080 2528 4883EE08 		sub	rsi, 8	# tmp222,
 6081 252c 48C1EE03 		shr	rsi, 3	# tmp220,
 6082 2530 4883C601 		add	rsi, 1	# tmp223,
 6083 2534 83E607   		and	esi, 7	# tmp224,
 6084 2537 0F848100 		je	.L473	#,
 6084      0000
 6085 253d 4883FE01 		cmp	rsi, 1	# tmp224,
 6086 2541 7466     		je	.L541	#,
 6087 2543 4883FE02 		cmp	rsi, 2	# tmp224,
 6088 2547 7454     		je	.L542	#,
 6089 2549 4883FE03 		cmp	rsi, 3	# tmp224,
 6090 254d 7442     		je	.L543	#,
 6091 254f 4883FE04 		cmp	rsi, 4	# tmp224,
 6092 2553 7430     		je	.L544	#,
 6093 2555 4883FE05 		cmp	rsi, 5	# tmp224,
 6094 2559 741E     		je	.L545	#,
 6095 255b 4883FE06 		cmp	rsi, 6	# tmp224,
 6096 255f 740C     		je	.L546	#,
 6097              	.LVL247:
 583:sieve_extend.c ****         source_word++;
 6098              		.loc 1 583 9 is_stmt 1 view .LVU2080
 6099              	# sieve_extend.c:583:         bitarray[copy_word] = bitarray[source_word];
 583:sieve_extend.c ****         source_word++;
 6100              		.loc 1 583 39 is_stmt 0 view .LVU2081
 6101 2561 4D8B3CFE 		mov	r15, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 6102 2565 4983C608 		add	r14, 8	# ivtmp.337,
 6103              	# sieve_extend.c:583:         bitarray[copy_word] = bitarray[source_word];
 583:sieve_extend.c ****         source_word++;
 6104              		.loc 1 583 29 view .LVU2082
 6105 2569 4D897EF8 		mov	QWORD PTR -8[r14], r15	# MEM[base: _174, offset: 0B], _70
 584:sieve_extend.c ****         copy_word++;
 6106              		.loc 1 584 9 is_stmt 1 view .LVU2083
 585:sieve_extend.c ****     }
 6107              		.loc 1 585 9 view .LVU2084
 582:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6108              		.loc 1 582 10 view .LVU2085
 6109              	.L546:
 583:sieve_extend.c ****         source_word++;
 6110              		.loc 1 583 9 view .LVU2086
 6111              	# sieve_extend.c:583:         bitarray[copy_word] = bitarray[source_word];
 583:sieve_extend.c ****         source_word++;
 6112              		.loc 1 583 39 is_stmt 0 view .LVU2087
 6113 256d 4D8B04FE 		mov	r8, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 6114 2571 4983C608 		add	r14, 8	# ivtmp.337,
 6115              	# sieve_extend.c:583:         bitarray[copy_word] = bitarray[source_word];
 583:sieve_extend.c ****         source_word++;
 6116              		.loc 1 583 29 view .LVU2088
 6117 2575 4D8946F8 		mov	QWORD PTR -8[r14], r8	# MEM[base: _174, offset: 0B], _70
 584:sieve_extend.c ****         copy_word++;
GAS LISTING /tmp/cc64mrzX.s 			page 174


 6118              		.loc 1 584 9 is_stmt 1 view .LVU2089
 585:sieve_extend.c ****     }
 6119              		.loc 1 585 9 view .LVU2090
 582:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6120              		.loc 1 582 10 view .LVU2091
 6121              	.L545:
 583:sieve_extend.c ****         source_word++;
 6122              		.loc 1 583 9 view .LVU2092
 6123              	# sieve_extend.c:583:         bitarray[copy_word] = bitarray[source_word];
 583:sieve_extend.c ****         source_word++;
 6124              		.loc 1 583 39 is_stmt 0 view .LVU2093
 6125 2579 498B14FE 		mov	rdx, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 6126 257d 4983C608 		add	r14, 8	# ivtmp.337,
 6127              	# sieve_extend.c:583:         bitarray[copy_word] = bitarray[source_word];
 583:sieve_extend.c ****         source_word++;
 6128              		.loc 1 583 29 view .LVU2094
 6129 2581 498956F8 		mov	QWORD PTR -8[r14], rdx	# MEM[base: _174, offset: 0B], _70
 584:sieve_extend.c ****         copy_word++;
 6130              		.loc 1 584 9 is_stmt 1 view .LVU2095
 585:sieve_extend.c ****     }
 6131              		.loc 1 585 9 view .LVU2096
 582:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6132              		.loc 1 582 10 view .LVU2097
 6133              	.L544:
 583:sieve_extend.c ****         source_word++;
 6134              		.loc 1 583 9 view .LVU2098
 6135              	# sieve_extend.c:583:         bitarray[copy_word] = bitarray[source_word];
 583:sieve_extend.c ****         source_word++;
 6136              		.loc 1 583 39 is_stmt 0 view .LVU2099
 6137 2585 498B04FE 		mov	rax, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 6138 2589 4983C608 		add	r14, 8	# ivtmp.337,
 6139              	# sieve_extend.c:583:         bitarray[copy_word] = bitarray[source_word];
 583:sieve_extend.c ****         source_word++;
 6140              		.loc 1 583 29 view .LVU2100
 6141 258d 498946F8 		mov	QWORD PTR -8[r14], rax	# MEM[base: _174, offset: 0B], _70
 584:sieve_extend.c ****         copy_word++;
 6142              		.loc 1 584 9 is_stmt 1 view .LVU2101
 585:sieve_extend.c ****     }
 6143              		.loc 1 585 9 view .LVU2102
 582:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6144              		.loc 1 582 10 view .LVU2103
 6145              	.L543:
 583:sieve_extend.c ****         source_word++;
 6146              		.loc 1 583 9 view .LVU2104
 6147              	# sieve_extend.c:583:         bitarray[copy_word] = bitarray[source_word];
 583:sieve_extend.c ****         source_word++;
 6148              		.loc 1 583 39 is_stmt 0 view .LVU2105
 6149 2591 4D8B0CFE 		mov	r9, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 6150 2595 4983C608 		add	r14, 8	# ivtmp.337,
 6151              	# sieve_extend.c:583:         bitarray[copy_word] = bitarray[source_word];
 583:sieve_extend.c ****         source_word++;
 6152              		.loc 1 583 29 view .LVU2106
 6153 2599 4D894EF8 		mov	QWORD PTR -8[r14], r9	# MEM[base: _174, offset: 0B], _70
 584:sieve_extend.c ****         copy_word++;
 6154              		.loc 1 584 9 is_stmt 1 view .LVU2107
 585:sieve_extend.c ****     }
 6155              		.loc 1 585 9 view .LVU2108
GAS LISTING /tmp/cc64mrzX.s 			page 175


 582:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6156              		.loc 1 582 10 view .LVU2109
 6157              	.L542:
 583:sieve_extend.c ****         source_word++;
 6158              		.loc 1 583 9 view .LVU2110
 6159              	# sieve_extend.c:583:         bitarray[copy_word] = bitarray[source_word];
 583:sieve_extend.c ****         source_word++;
 6160              		.loc 1 583 39 is_stmt 0 view .LVU2111
 6161 259d 498B0CFE 		mov	rcx, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 6162 25a1 4983C608 		add	r14, 8	# ivtmp.337,
 6163              	# sieve_extend.c:583:         bitarray[copy_word] = bitarray[source_word];
 583:sieve_extend.c ****         source_word++;
 6164              		.loc 1 583 29 view .LVU2112
 6165 25a5 49894EF8 		mov	QWORD PTR -8[r14], rcx	# MEM[base: _174, offset: 0B], _70
 584:sieve_extend.c ****         copy_word++;
 6166              		.loc 1 584 9 is_stmt 1 view .LVU2113
 585:sieve_extend.c ****     }
 6167              		.loc 1 585 9 view .LVU2114
 582:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6168              		.loc 1 582 10 view .LVU2115
 6169              	.L541:
 583:sieve_extend.c ****         source_word++;
 6170              		.loc 1 583 9 view .LVU2116
 6171              	# sieve_extend.c:583:         bitarray[copy_word] = bitarray[source_word];
 583:sieve_extend.c ****         source_word++;
 6172              		.loc 1 583 39 is_stmt 0 view .LVU2117
 6173 25a9 4D8B14FE 		mov	r10, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 6174 25ad 4983C608 		add	r14, 8	# ivtmp.337,
 6175              	# sieve_extend.c:583:         bitarray[copy_word] = bitarray[source_word];
 583:sieve_extend.c ****         source_word++;
 6176              		.loc 1 583 29 view .LVU2118
 6177 25b1 4D8956F8 		mov	QWORD PTR -8[r14], r10	# MEM[base: _174, offset: 0B], _70
 584:sieve_extend.c ****         copy_word++;
 6178              		.loc 1 584 9 is_stmt 1 view .LVU2119
 585:sieve_extend.c ****     }
 6179              		.loc 1 585 9 view .LVU2120
 582:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6180              		.loc 1 582 10 view .LVU2121
 6181 25b5 4D39EE   		cmp	r14, r13	# ivtmp.337, _179
 6182 25b8 0F8424FF 		je	.L576	#,
 6182      FFFF
 6183              	.LVL248:
 6184              	.L473:
 583:sieve_extend.c ****         source_word++;
 6185              		.loc 1 583 9 view .LVU2122
 6186              	# sieve_extend.c:583:         bitarray[copy_word] = bitarray[source_word];
 583:sieve_extend.c ****         source_word++;
 6187              		.loc 1 583 39 is_stmt 0 view .LVU2123
 6188 25be 4D8B1CFE 		mov	r11, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 6189              	# sieve_extend.c:583:         bitarray[copy_word] = bitarray[source_word];
 583:sieve_extend.c ****         source_word++;
 6190              		.loc 1 583 29 view .LVU2124
 6191 25c2 4D891E   		mov	QWORD PTR [r14], r11	# MEM[base: _174, offset: 0B], _70
 584:sieve_extend.c ****         copy_word++;
 6192              		.loc 1 584 9 is_stmt 1 view .LVU2125
 585:sieve_extend.c ****     }
 6193              		.loc 1 585 9 view .LVU2126
GAS LISTING /tmp/cc64mrzX.s 			page 176


 582:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6194              		.loc 1 582 10 view .LVU2127
 583:sieve_extend.c ****         source_word++;
 6195              		.loc 1 583 9 view .LVU2128
 6196              	# sieve_extend.c:583:         bitarray[copy_word] = bitarray[source_word];
 583:sieve_extend.c ****         source_word++;
 6197              		.loc 1 583 39 is_stmt 0 view .LVU2129
 6198 25c5 4D8B64FE 		mov	r12, QWORD PTR 8[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 6198      08
 6199              	# sieve_extend.c:583:         bitarray[copy_word] = bitarray[source_word];
 583:sieve_extend.c ****         source_word++;
 6200              		.loc 1 583 29 view .LVU2130
 6201 25ca 4D896608 		mov	QWORD PTR 8[r14], r12	# MEM[base: _174, offset: 0B], _70
 584:sieve_extend.c ****         copy_word++;
 6202              		.loc 1 584 9 is_stmt 1 view .LVU2131
 585:sieve_extend.c ****     }
 6203              		.loc 1 585 9 view .LVU2132
 582:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6204              		.loc 1 582 10 view .LVU2133
 583:sieve_extend.c ****         source_word++;
 6205              		.loc 1 583 9 view .LVU2134
 6206              	# sieve_extend.c:583:         bitarray[copy_word] = bitarray[source_word];
 583:sieve_extend.c ****         source_word++;
 6207              		.loc 1 583 39 is_stmt 0 view .LVU2135
 6208 25ce 498B5CFE 		mov	rbx, QWORD PTR 16[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 6208      10
 6209              	# sieve_extend.c:583:         bitarray[copy_word] = bitarray[source_word];
 583:sieve_extend.c ****         source_word++;
 6210              		.loc 1 583 29 view .LVU2136
 6211 25d3 49895E10 		mov	QWORD PTR 16[r14], rbx	# MEM[base: _174, offset: 0B], _70
 584:sieve_extend.c ****         copy_word++;
 6212              		.loc 1 584 9 is_stmt 1 view .LVU2137
 585:sieve_extend.c ****     }
 6213              		.loc 1 585 9 view .LVU2138
 582:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6214              		.loc 1 582 10 view .LVU2139
 583:sieve_extend.c ****         source_word++;
 6215              		.loc 1 583 9 view .LVU2140
 6216              	# sieve_extend.c:583:         bitarray[copy_word] = bitarray[source_word];
 583:sieve_extend.c ****         source_word++;
 6217              		.loc 1 583 39 is_stmt 0 view .LVU2141
 6218 25d7 498B74FE 		mov	rsi, QWORD PTR 24[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 6218      18
 6219              	# sieve_extend.c:583:         bitarray[copy_word] = bitarray[source_word];
 583:sieve_extend.c ****         source_word++;
 6220              		.loc 1 583 29 view .LVU2142
 6221 25dc 49897618 		mov	QWORD PTR 24[r14], rsi	# MEM[base: _174, offset: 0B], _70
 584:sieve_extend.c ****         copy_word++;
 6222              		.loc 1 584 9 is_stmt 1 view .LVU2143
 585:sieve_extend.c ****     }
 6223              		.loc 1 585 9 view .LVU2144
 582:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6224              		.loc 1 582 10 view .LVU2145
 583:sieve_extend.c ****         source_word++;
 6225              		.loc 1 583 9 view .LVU2146
 6226              	# sieve_extend.c:583:         bitarray[copy_word] = bitarray[source_word];
 583:sieve_extend.c ****         source_word++;
GAS LISTING /tmp/cc64mrzX.s 			page 177


 6227              		.loc 1 583 39 is_stmt 0 view .LVU2147
 6228 25e0 4D8B7CFE 		mov	r15, QWORD PTR 32[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 6228      20
 6229              	# sieve_extend.c:583:         bitarray[copy_word] = bitarray[source_word];
 583:sieve_extend.c ****         source_word++;
 6230              		.loc 1 583 29 view .LVU2148
 6231 25e5 4D897E20 		mov	QWORD PTR 32[r14], r15	# MEM[base: _174, offset: 0B], _70
 584:sieve_extend.c ****         copy_word++;
 6232              		.loc 1 584 9 is_stmt 1 view .LVU2149
 585:sieve_extend.c ****     }
 6233              		.loc 1 585 9 view .LVU2150
 582:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6234              		.loc 1 582 10 view .LVU2151
 583:sieve_extend.c ****         source_word++;
 6235              		.loc 1 583 9 view .LVU2152
 6236              	# sieve_extend.c:583:         bitarray[copy_word] = bitarray[source_word];
 583:sieve_extend.c ****         source_word++;
 6237              		.loc 1 583 39 is_stmt 0 view .LVU2153
 6238 25e9 4D8B44FE 		mov	r8, QWORD PTR 40[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 6238      28
 6239              	# sieve_extend.c:583:         bitarray[copy_word] = bitarray[source_word];
 583:sieve_extend.c ****         source_word++;
 6240              		.loc 1 583 29 view .LVU2154
 6241 25ee 4D894628 		mov	QWORD PTR 40[r14], r8	# MEM[base: _174, offset: 0B], _70
 584:sieve_extend.c ****         copy_word++;
 6242              		.loc 1 584 9 is_stmt 1 view .LVU2155
 585:sieve_extend.c ****     }
 6243              		.loc 1 585 9 view .LVU2156
 582:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6244              		.loc 1 582 10 view .LVU2157
 583:sieve_extend.c ****         source_word++;
 6245              		.loc 1 583 9 view .LVU2158
 6246              	# sieve_extend.c:583:         bitarray[copy_word] = bitarray[source_word];
 583:sieve_extend.c ****         source_word++;
 6247              		.loc 1 583 39 is_stmt 0 view .LVU2159
 6248 25f2 498B54FE 		mov	rdx, QWORD PTR 48[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 6248      30
 6249              	# sieve_extend.c:583:         bitarray[copy_word] = bitarray[source_word];
 583:sieve_extend.c ****         source_word++;
 6250              		.loc 1 583 29 view .LVU2160
 6251 25f7 49895630 		mov	QWORD PTR 48[r14], rdx	# MEM[base: _174, offset: 0B], _70
 584:sieve_extend.c ****         copy_word++;
 6252              		.loc 1 584 9 is_stmt 1 view .LVU2161
 585:sieve_extend.c ****     }
 6253              		.loc 1 585 9 view .LVU2162
 582:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6254              		.loc 1 582 10 view .LVU2163
 583:sieve_extend.c ****         source_word++;
 6255              		.loc 1 583 9 view .LVU2164
 6256              	# sieve_extend.c:583:         bitarray[copy_word] = bitarray[source_word];
 583:sieve_extend.c ****         source_word++;
 6257              		.loc 1 583 39 is_stmt 0 view .LVU2165
 6258 25fb 498B44FE 		mov	rax, QWORD PTR 56[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 6258      38
 6259 2600 4983C640 		add	r14, 64	# ivtmp.337,
 6260              	# sieve_extend.c:583:         bitarray[copy_word] = bitarray[source_word];
 583:sieve_extend.c ****         source_word++;
GAS LISTING /tmp/cc64mrzX.s 			page 178


 6261              		.loc 1 583 29 view .LVU2166
 6262 2604 498946F8 		mov	QWORD PTR -8[r14], rax	# MEM[base: _174, offset: 0B], _70
 584:sieve_extend.c ****         copy_word++;
 6263              		.loc 1 584 9 is_stmt 1 view .LVU2167
 585:sieve_extend.c ****     }
 6264              		.loc 1 585 9 view .LVU2168
 582:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6265              		.loc 1 582 10 view .LVU2169
 6266 2608 4D39EE   		cmp	r14, r13	# ivtmp.337, _179
 6267 260b 75B1     		jne	.L473	#,
 6268 260d E9D0FEFF 		jmp	.L576	#
 6268      FF
 6269              	.LVL249:
 6270              		.p2align 4,,7
 6271 2612 660F1F44 		.p2align 3
 6271      0000
 6272              	.L475:
 6273              	# sieve_extend.c:572:     counter_t source_word = wordindex(source_start);
 572:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 6274              		.loc 1 572 15 is_stmt 0 view .LVU2170
 6275 2618 4C8B6424 		mov	r12, QWORD PTR 8[rsp]	# source_word, %sfp
 6275      08
 6276              	# sieve_extend.c:582:    while (copy_word < destination_stop_word) {
 582:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6277              		.loc 1 582 10 view .LVU2171
 6278 261d 4989C6   		mov	r14, rax	# copy_word, ivtmp.351
 6279 2620 E90AFDFF 		jmp	.L469	#
 6279      FF
 6280              		.cfi_endproc
 6281              	.LFE65:
 6283 2625 66662E0F 		.p2align 4
 6283      1F840000 
 6283      000000
 6285              	extendSieve_shiftleft:
 6286              	.LVL250:
 6287              	.LFB71:
 828:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 6288              		.loc 1 828 142 is_stmt 1 view -0
 6289              		.cfi_startproc
 829:sieve_extend.c **** 
 6290              		.loc 1 829 5 view .LVU2173
 831:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 6291              		.loc 1 831 5 view .LVU2174
 6292              	# sieve_extend.c:828: static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source
 828:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 6293              		.loc 1 828 142 is_stmt 0 view .LVU2175
 6294 2630 55       		push	rbp	#
 6295              		.cfi_def_cfa_offset 16
 6296              		.cfi_offset 6, -16
 6297              	# sieve_extend.c:831:     const counter_t destination_stop_word = wordindex(destination_stop);
 831:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 6298              		.loc 1 831 21 view .LVU2176
 6299 2631 48C1E906 		shr	rcx, 6	# tmp1219,
 6300              	.LVL251:
 6301              	# sieve_extend.c:828: static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source
 828:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 6302              		.loc 1 828 142 view .LVU2177
GAS LISTING /tmp/cc64mrzX.s 			page 179


 6303 2635 4989D2   		mov	r10, rdx	# size, tmp1218
 6304 2638 4889E5   		mov	rbp, rsp	#,
 6305              		.cfi_def_cfa_register 6
 6306 263b 4157     		push	r15	#
 6307 263d 4156     		push	r14	#
 6308              		.cfi_offset 15, -24
 6309              		.cfi_offset 14, -32
 6310              	# sieve_extend.c:831:     const counter_t destination_stop_word = wordindex(destination_stop);
 831:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 6311              		.loc 1 831 21 view .LVU2178
 6312 263f 4989CE   		mov	r14, rcx	# destination_stop_word, tmp1219
 6313              	# sieve_extend.c:828: static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source
 828:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 6314              		.loc 1 828 142 view .LVU2179
 6315 2642 4155     		push	r13	#
 6316 2644 4154     		push	r12	#
 6317 2646 53       		push	rbx	#
 6318              		.cfi_offset 13, -40
 6319              		.cfi_offset 12, -48
 6320              		.cfi_offset 3, -56
 6321 2647 4889FB   		mov	rbx, rdi	# bitarray, tmp1216
 6322              	# sieve_extend.c:832:     const counter_t copy_start = source_start + size;
 832:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_calc(copy_start);
 6323              		.loc 1 832 21 view .LVU2180
 6324 264a 488D3C16 		lea	rdi, [rsi+rdx]	# copy_start,
 6325              	.LVL252:
 6326              	# sieve_extend.c:828: static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source
 828:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 6327              		.loc 1 828 142 view .LVU2181
 6328 264e 4883E4E0 		and	rsp, -32	#,
 6329              	# sieve_extend.c:833:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 833:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 6330              		.loc 1 833 69 view .LVU2182
 6331 2652 4889F8   		mov	rax, rdi	# _5, copy_start
 6332              	# sieve_extend.c:828: static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source
 828:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 6333              		.loc 1 828 142 view .LVU2183
 6334 2655 488D6424 		lea	rsp, -96[rsp]	#,
 6334      A0
 6335              	# sieve_extend.c:836:     register counter_t copy_word = wordindex(copy_start);
 836:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 6336              		.loc 1 836 24 view .LVU2184
 6337 265a 4989FB   		mov	r11, rdi	# copy_word, copy_start
 6338              	# sieve_extend.c:831:     const counter_t destination_stop_word = wordindex(destination_stop);
 831:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 6339              		.loc 1 831 21 view .LVU2185
 6340 265d 48894C24 		mov	QWORD PTR 80[rsp], rcx	# %sfp, destination_stop_word
 6340      50
 6341              	.LVL253:
 832:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_calc(copy_start);
 6342              		.loc 1 832 5 is_stmt 1 view .LVU2186
 833:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 6343              		.loc 1 833 5 view .LVU2187
 6344              	# sieve_extend.c:833:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 833:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 6345              		.loc 1 833 39 is_stmt 0 view .LVU2188
 6346 2662 4889F1   		mov	rcx, rsi	# _4, source_start
GAS LISTING /tmp/cc64mrzX.s 			page 180


 6347              	.LVL254:
 6348              	# sieve_extend.c:835:     register counter_t source_word = wordindex(source_start);
 835:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 6349              		.loc 1 835 24 view .LVU2189
 6350 2665 48C1EE06 		shr	rsi, 6	# source_start,
 6351              	.LVL255:
 6352              	# sieve_extend.c:833:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 833:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 6353              		.loc 1 833 39 view .LVU2190
 6354 2669 83E13F   		and	ecx, 63	# _4,
 6355              	.LVL256:
 6356              	# sieve_extend.c:835:     register counter_t source_word = wordindex(source_start);
 835:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 6357              		.loc 1 835 24 view .LVU2191
 6358 266c 4989F0   		mov	r8, rsi	# source_word, source_start
 6359              	# sieve_extend.c:833:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 833:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 6360              		.loc 1 833 69 view .LVU2192
 6361 266f 83E03F   		and	eax, 63	# _5,
 6362              	.LVL257:
 834:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 6363              		.loc 1 834 5 is_stmt 1 view .LVU2193
 835:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 6364              		.loc 1 835 5 view .LVU2194
 836:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 6365              		.loc 1 836 5 view .LVU2195
 6366              	# sieve_extend.c:836:     register counter_t copy_word = wordindex(copy_start);
 836:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 6367              		.loc 1 836 24 is_stmt 0 view .LVU2196
 6368 2672 49C1EB06 		shr	r11, 6	# copy_word,
 6369              	.LVL258:
 837:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 6370              		.loc 1 837 5 is_stmt 1 view .LVU2197
 6371              	# sieve_extend.c:838:                              | (bitarray[source_word+1] << shift_flipped))
 838:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 6372              		.loc 1 838 41 is_stmt 0 view .LVU2198
 6373 2676 4D8D4801 		lea	r9, 1[r8]	# _183,
 6374              	# sieve_extend.c:833:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 833:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 6375              		.loc 1 833 31 view .LVU2199
 6376 267a 4989CD   		mov	r13, rcx	# shift, _4
 6377              	# sieve_extend.c:837:     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 837:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 6378              		.loc 1 837 25 view .LVU2200
 6379 267d 4A8D34DD 		lea	rsi, 0[0+r11*8]	# _6,
 6379      00000000 
 6380              	# sieve_extend.c:838:                              | (bitarray[source_word+1] << shift_flipped))
 838:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 6381              		.loc 1 838 41 view .LVU2201
 6382 2685 4C894C24 		mov	QWORD PTR 88[rsp], r9	# %sfp, _183
 6382      58
 6383              	# sieve_extend.c:833:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 833:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 6384              		.loc 1 833 31 view .LVU2202
 6385 268a 4929C5   		sub	r13, rax	# shift, _5
 6386              	.LVL259:
 6387              	# sieve_extend.c:844:     const counter_t aligned_copy_word = min(source_word + size, destination_s
GAS LISTING /tmp/cc64mrzX.s 			page 181


 844:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 6388              		.loc 1 844 41 view .LVU2203
 6389 268d 4D01D1   		add	r9, r10	# tmp555, size
 6390              	# sieve_extend.c:834:     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 834:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 6391              		.loc 1 834 31 view .LVU2204
 6392 2690 4829C8   		sub	rax, rcx	# tmp542, _4
 6393              	.LVL260:
 6394              	# sieve_extend.c:828: static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source
 828:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 6395              		.loc 1 828 142 view .LVU2205
 6396 2693 48895424 		mov	QWORD PTR 24[rsp], rdx	# %sfp, size
 6396      18
 6397              	# sieve_extend.c:834:     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 834:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 6398              		.loc 1 834 31 view .LVU2206
 6399 2698 4C8D7840 		lea	r15, 64[rax]	# shift_flipped,
 6400              	.LVL261:
 6401              	# sieve_extend.c:837:     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 837:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 6402              		.loc 1 837 52 view .LVU2207
 6403 269c 4A8B0CC3 		mov	rcx, QWORD PTR [rbx+r8*8]	# *_10, *_10
 6404              	# sieve_extend.c:837:     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 837:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 6405              		.loc 1 837 38 view .LVU2208
 6406 26a0 4A8D14C5 		lea	rdx, 0[0+r8*8]	# _9,
 6406      00000000 
 6407              	.LVL262:
 6408              	# sieve_extend.c:839:                              & ~chopmask(copy_start); // because this is the 
 839:sieve_extend.c **** 
 6409              		.loc 1 839 33 view .LVU2209
 6410 26a8 F7D7     		not	edi	# tmp549
 6411              	.LVL263:
 6412              	# sieve_extend.c:838:                              | (bitarray[source_word+1] << shift_flipped))
 838:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 6413              		.loc 1 838 57 view .LVU2210
 6414 26aa C4E281F7 		shlx	rax, QWORD PTR 8[rbx+rdx], r15	# tmp544, *_16, shift_flipped
 6414      441308
 6415              	# sieve_extend.c:837:     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 837:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 6416              		.loc 1 837 52 view .LVU2211
 6417 26b1 C46293F7 		shrx	r8, rcx, r13	# tmp546, *_10, shift
 6417      C1
 6418              	# sieve_extend.c:838:                              | (bitarray[source_word+1] << shift_flipped))
 838:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 6419              		.loc 1 838 30 view .LVU2212
 6420 26b6 4909C0   		or	r8, rax	# tmp548, tmp544
 6421              	# sieve_extend.c:839:                              & ~chopmask(copy_start); // because this is the 
 839:sieve_extend.c **** 
 6422              		.loc 1 839 33 view .LVU2213
 6423 26b9 48C7C0FF 		mov	rax, -1	# tmp552,
 6423      FFFFFF
 6424 26c0 C4E2C3F7 		shrx	rdi, rax, rdi	# tmp551, tmp552, tmp549
 6424      F8
 6425              	# sieve_extend.c:839:                              & ~chopmask(copy_start); // because this is the 
 839:sieve_extend.c **** 
 6426              		.loc 1 839 30 view .LVU2214
GAS LISTING /tmp/cc64mrzX.s 			page 182


 6427 26c5 C4C2C0F2 		andn	rcx, rdi, r8	# tmp554, tmp551, tmp548
 6427      C8
 6428              	# sieve_extend.c:837:     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 837:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 6429              		.loc 1 837 25 view .LVU2215
 6430 26ca 48090C33 		or	QWORD PTR [rbx+rsi], rcx	# *_7, tmp554
 841:sieve_extend.c ****     source_word++;
 6431              		.loc 1 841 5 is_stmt 1 view .LVU2216
 6432              	# sieve_extend.c:844:     const counter_t aligned_copy_word = min(source_word + size, destination_s
 844:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 6433              		.loc 1 844 21 is_stmt 0 view .LVU2217
 6434 26ce 4D39F1   		cmp	r9, r14	# tmp555, destination_stop_word
 6435              	# sieve_extend.c:841:     copy_word++;
 841:sieve_extend.c ****     source_word++;
 6436              		.loc 1 841 14 view .LVU2218
 6437 26d1 498D4301 		lea	rax, 1[r11]	# ivtmp.435,
 6438              	.LVL264:
 842:sieve_extend.c **** 
 6439              		.loc 1 842 5 is_stmt 1 view .LVU2219
 844:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 6440              		.loc 1 844 5 view .LVU2220
 6441              	# sieve_extend.c:838:                              | (bitarray[source_word+1] << shift_flipped))
 838:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 6442              		.loc 1 838 57 is_stmt 0 view .LVU2221
 6443 26d5 44897C24 		mov	DWORD PTR 72[rsp], r15d	# %sfp, shift_flipped
 6443      48
 6444              	# sieve_extend.c:837:     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 837:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 6445              		.loc 1 837 52 view .LVU2222
 6446 26da 4589EC   		mov	r12d, r13d	# _12, shift
 6447              	# sieve_extend.c:844:     const counter_t aligned_copy_word = min(source_word + size, destination_s
 844:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 6448              		.loc 1 844 21 view .LVU2223
 6449 26dd 4D0F47CE 		cmova	r9, r14	# tmp555,, tmp555, destination_stop_word
 6450              	.LBB360:
 6451              	.LBB361:
 6452              	# sieve_extend.c:685:     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_co
 685:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 6453              		.loc 1 685 91 view .LVU2224
 6454 26e1 41BE0200 		mov	r14d, 2	# tmp556,
 6454      0000
 6455              	.LVL265:
 685:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 6456              		.loc 1 685 91 view .LVU2225
 6457              	.LBE361:
 6458              	.LBE360:
 6459              	# sieve_extend.c:844:     const counter_t aligned_copy_word = min(source_word + size, destination_s
 844:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 6460              		.loc 1 844 21 view .LVU2226
 6461 26e7 4C894C24 		mov	QWORD PTR 64[rsp], r9	# %sfp, aligned_copy_word
 6461      40
 6462              	.LVL266:
 845:sieve_extend.c ****     source_word += distance;
 6463              		.loc 1 845 5 is_stmt 1 view .LVU2227
 6464              	.LBB386:
 6465              	.LBI360:
 684:sieve_extend.c ****     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_copy_word - 2) : 0; // s
GAS LISTING /tmp/cc64mrzX.s 			page 183


 6466              		.loc 1 684 25 view .LVU2228
 6467              	.LBB383:
 685:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 6468              		.loc 1 685 5 view .LVU2229
 6469              	# sieve_extend.c:685:     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_co
 685:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 6470              		.loc 1 685 91 is_stmt 0 view .LVU2230
 6471 26ec 4983F902 		cmp	r9, 2	# aligned_copy_word,
 6472 26f0 4D0F43F1 		cmovnb	r14, r9	# aligned_copy_word,, _86
 6473              	# sieve_extend.c:685:     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_co
 685:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 6474              		.loc 1 685 21 view .LVU2231
 6475 26f4 4D8D46FE 		lea	r8, -2[r14]	# fast_loop_stop_word,
 6476 26f8 4C894424 		mov	QWORD PTR 48[rsp], r8	# %sfp, fast_loop_stop_word
 6476      30
 6477              	.LVL267:
 686:sieve_extend.c ****     counter_t distance = 0;
 6478              		.loc 1 686 5 is_stmt 1 view .LVU2232
 687:sieve_extend.c ****     while (copy_word < fast_loop_stop_word) {
 6479              		.loc 1 687 5 view .LVU2233
 688:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6480              		.loc 1 688 5 view .LVU2234
 688:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6481              		.loc 1 688 11 view .LVU2235
 6482 26fd 4C39C0   		cmp	rax, r8	# ivtmp.435, fast_loop_stop_word
 6483 2700 0F83A404 		jnb	.L579	#,
 6483      0000
 6484 2706 4C8D5240 		lea	r10, 64[rdx]	# tmp559,
 6485              	.LVL268:
 688:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6486              		.loc 1 688 11 is_stmt 0 view .LVU2236
 6487 270a 4D29DE   		sub	r14, r11	# tmp557, copy_word
 6488 270d 4C8D4610 		lea	r8, 16[rsi]	# tmp560,
 6489              	.LVL269:
 688:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6490              		.loc 1 688 11 view .LVU2237
 6491 2711 498D7EFC 		lea	rdi, -4[r14]	# _332,
 6492 2715 488D4A08 		lea	rcx, 8[rdx]	# tmp796,
 6493 2719 4D39C2   		cmp	r10, r8	# tmp559, tmp560
 6494 271c 4C8D7648 		lea	r14, 72[rsi]	# tmp563,
 6495 2720 410F9EC1 		setle	r9b	#, tmp562
 6496              	.LVL270:
 688:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6497              		.loc 1 688 11 view .LVU2238
 6498 2724 48897C24 		mov	QWORD PTR 56[rsp], rdi	# %sfp, _332
 6498      38
 6499 2729 4939CE   		cmp	r14, rcx	# tmp563, tmp796
 6500 272c 400F9EC7 		setle	dil	#, tmp566
 6501 2730 4109F9   		or	r9d, edi	# tmp567, tmp566
 6502 2733 488D7A50 		lea	rdi, 80[rdx]	# tmp568,
 6503 2737 48897C24 		mov	QWORD PTR 40[rsp], rdi	# %sfp, tmp568
 6503      28
 6504 273c 4C39C7   		cmp	rdi, r8	# tmp568, tmp560
 6505 273f 0F9E4424 		setle	BYTE PTR 39[rsp]	#, %sfp
 6505      27
 6506 2744 4883C210 		add	rdx, 16	# tmp573,
 6507 2748 4939D6   		cmp	r14, rdx	# tmp563, tmp573
GAS LISTING /tmp/cc64mrzX.s 			page 184


 6508 274b 400F9EC7 		setle	dil	#, tmp575
 6509 274f 400A7C24 		or	dil, BYTE PTR 39[rsp]	# tmp576, %sfp
 6509      27
 6510 2754 4421CF   		and	edi, r9d	# tmp577, tmp567
 6511 2757 48837C24 		cmp	QWORD PTR 56[rsp], 11	# %sfp,
 6511      380B
 6512 275d 410F97C1 		seta	r9b	#, tmp579
 6513 2761 4421CF   		and	edi, r9d	# tmp580, tmp579
 6514 2764 4C8D4E08 		lea	r9, 8[rsi]	# tmp582,
 6515 2768 4D39CA   		cmp	r10, r9	# tmp559, tmp582
 6516 276b 410F9EC2 		setle	r10b	#, tmp584
 6517 276f 4883C640 		add	rsi, 64	# tmp585,
 6518 2773 4839CE   		cmp	rsi, rcx	# tmp585, tmp796
 6519 2776 0F9E4424 		setle	BYTE PTR 39[rsp]	#, %sfp
 6519      27
 6520 277b 440A5424 		or	r10b, BYTE PTR 39[rsp]	# tmp589, %sfp
 6520      27
 6521 2780 4421D7   		and	edi, r10d	# tmp590, tmp589
 6522 2783 4C394C24 		cmp	QWORD PTR 40[rsp], r9	# %sfp, tmp582
 6522      28
 6523 2788 410F9EC2 		setle	r10b	#, tmp594
 6524 278c 4839D6   		cmp	rsi, rdx	# tmp585, tmp573
 6525 278f 0F9E4424 		setle	BYTE PTR 40[rsp]	#, %sfp
 6525      28
 6526 2794 440A5424 		or	r10b, BYTE PTR 40[rsp]	# tmp599, %sfp
 6526      28
 6527 2799 4484D7   		test	dil, r10b	# tmp590, tmp599
 6528 279c 0F845E0D 		je	.L580	#,
 6528      0000
 6529 27a2 4D39CE   		cmp	r14, r9	# tmp563, tmp582
 6530 27a5 410F9EC6 		setle	r14b	#, tmp604
 6531 27a9 4C39C6   		cmp	rsi, r8	# tmp585, tmp560
 6532 27ac 400F9EC6 		setle	sil	#, tmp608
 6533 27b0 4108F6   		or	r14b, sil	# tmp604, tmp608
 6534 27b3 0F84470D 		je	.L580	#,
 6534      0000
 6535 27b9 4801D9   		add	rcx, rbx	# vectp.400, bitarray
 6536 27bc 4801DA   		add	rdx, rbx	# vectp.404, bitarray
 6537              	.LBB362:
 6538              	# sieve_extend.c:690:         bitword_t source1 = bitarray[source_word+1];
 690:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6539              		.loc 1 690 19 view .LVU2239
 6540 27bf C5FE6F0A 		vmovdqu	ymm1, YMMWORD PTR [rdx]	# MEM[base: vectp.404_499, index: ivtmp.475_748, offset: 0B], MEM[
 6541 27c3 C4C1796E 		vmovd	xmm3, r13d	# _12, _12
 6541      DD
 6542 27c8 C5FE6F42 		vmovdqu	ymm0, YMMWORD PTR 32[rdx]	# MEM[base: vectp.404_499, index: ivtmp.475_748, offset: 32B], M
 6542      20
 6543 27cd C4C1796E 		vmovd	xmm4, r15d	# _18,
 6543      E7
 6544              	# sieve_extend.c:689:         bitword_t source0 = bitarray[source_word  ];
 689:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6545              		.loc 1 689 19 view .LVU2240
 6546 27d2 C5FE6F39 		vmovdqu	ymm7, YMMWORD PTR [rcx]	# tmp1315, MEM[base: vectp.400_490, index: ivtmp.475_748, offset: 
 6547              	# sieve_extend.c:690:         bitword_t source1 = bitarray[source_word+1];
 690:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6548              		.loc 1 690 19 view .LVU2241
 6549 27d6 C5F56CE8 		vpunpcklqdq	ymm5, ymm1, ymm0	# tmp616, MEM[base: vectp.404_499, index: ivtmp.475_748, offset: 0B],
GAS LISTING /tmp/cc64mrzX.s 			page 185


 6550 27da C5756DF0 		vpunpckhqdq	ymm14, ymm1, ymm0	# tmp634, MEM[base: vectp.404_499, index: ivtmp.475_748, offset: 0B]
 6551              	# sieve_extend.c:689:         bitword_t source0 = bitarray[source_word  ];
 689:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6552              		.loc 1 689 19 view .LVU2242
 6553 27de C5C56C51 		vpunpcklqdq	ymm2, ymm7, YMMWORD PTR 32[rcx]	# tmp620, tmp1315, MEM[base: vectp.400_490, index: ivt
 6553      20
 6554 27e3 4C8B7424 		mov	r14, QWORD PTR 56[rsp]	# _332, %sfp
 6554      38
 6555              	# sieve_extend.c:690:         bitword_t source1 = bitarray[source_word+1];
 690:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6556              		.loc 1 690 19 view .LVU2243
 6557 27e8 C463FD00 		vpermq	ymm8, ymm5, 216	# vect_perm_even_507, tmp616,
 6557      C5D8
 6558              	# sieve_extend.c:689:         bitword_t source0 = bitarray[source_word  ];
 689:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6559              		.loc 1 689 19 view .LVU2244
 6560 27ee C4E3FD00 		vpermq	ymm6, ymm2, 216	# tmp619, tmp620,
 6560      F2D8
 6561              	# sieve_extend.c:690:         bitword_t source1 = bitarray[source_word+1];
 690:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6562              		.loc 1 690 19 view .LVU2245
 6563 27f4 C443FD00 		vpermq	ymm15, ymm14, 216	# tmp633, tmp634,
 6563      FED8
 6564              	# sieve_extend.c:691:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6565              		.loc 1 691 63 view .LVU2246
 6566 27fa C53DF3D4 		vpsllq	ymm10, ymm8, xmm4	# vect__100.408, vect_perm_even_507, _18
 6567              	# sieve_extend.c:691:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6568              		.loc 1 691 42 view .LVU2247
 6569 27fe C54DD3CB 		vpsrlq	ymm9, ymm6, xmm3	# vect__98.407, tmp619, _12
 6570              	# sieve_extend.c:693:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 693:sieve_extend.c ****         copy_word += 2;
 6571              		.loc 1 693 42 view .LVU2248
 6572 2802 C5BDD3C3 		vpsrlq	ymm0, ymm8, xmm3	# vect__109.410, vect_perm_even_507, _12
 6573              	# sieve_extend.c:693:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 693:sieve_extend.c ****         copy_word += 2;
 6574              		.loc 1 693 63 view .LVU2249
 6575 2806 C585F3CC 		vpsllq	ymm1, ymm15, xmm4	# vect__110.411, tmp633, _18
 6576 280a 49C1EE03 		shr	r14, 3	# _332,
 6577              	# sieve_extend.c:691:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6578              		.loc 1 691 52 view .LVU2250
 6579 280e C44135EB 		vpor	ymm11, ymm9, ymm10	# vect__104.409, vect__98.407, vect__100.408
 6579      DA
 6580              	# sieve_extend.c:693:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 693:sieve_extend.c ****         copy_word += 2;
 6581              		.loc 1 693 52 view .LVU2251
 6582 2813 C5F5EBE8 		vpor	ymm5, ymm1, ymm0	# vect__114.412, vect__110.411, vect__109.410
 6583 2817 4D8D56FF 		lea	r10, -1[r14]	# tmp828,
 6584              	# sieve_extend.c:691:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6585              		.loc 1 691 31 view .LVU2252
 6586 281b C4437D39 		vextracti128	xmm13, ymm11, 0x1	# tmp630, vect__104.409
 6586      DD01
 6587 2821 4183E201 		and	r10d, 1	# tmp830,
 6588              	.LVL271:
GAS LISTING /tmp/cc64mrzX.s 			page 186


 689:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6589              		.loc 1 689 9 is_stmt 1 view .LVU2253
 690:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6590              		.loc 1 690 9 view .LVU2254
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6591              		.loc 1 691 9 view .LVU2255
 6592              	# sieve_extend.c:693:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 693:sieve_extend.c ****         copy_word += 2;
 6593              		.loc 1 693 31 is_stmt 0 view .LVU2256
 6594 2825 C4E37D39 		vextracti128	xmm7, ymm5, 0x1	# tmp644, vect__114.412
 6594      EF01
 6595 282b 4983FE01 		cmp	r14, 1	# bnd.393,
 6596              	# sieve_extend.c:691:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6597              		.loc 1 691 31 view .LVU2257
 6598 282f C42179D6 		vmovq	QWORD PTR [rbx+r9], xmm11	# MEM[base: _513, index: ivtmp.475_748, offset: 0B], tmp626
 6598      1C0B
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6599              		.loc 1 691 31 view .LVU2258
 6600 2835 4E8D1C0B 		lea	r11, [rbx+r9]	# _513,
 6601              	.LVL272:
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6602              		.loc 1 691 31 view .LVU2259
 6603 2839 C423F916 		vpextrq	QWORD PTR 16[rbx+r9], xmm11, 1	# MEM[base: _513, index: ivtmp.475_748, offset: 16B], tmp62
 6603      5C0B1001 
 6604 2841 4A8D3C03 		lea	rdi, [rbx+r8]	# _533,
 6605 2845 C42179D6 		vmovq	QWORD PTR 32[rbx+r9], xmm13	# MEM[base: _513, index: ivtmp.475_748, offset: 32B], tmp630
 6605      6C0B20
 6606 284c C423F916 		vpextrq	QWORD PTR 48[rbx+r9], xmm13, 1	# MEM[base: _513, index: ivtmp.475_748, offset: 48B], tmp63
 6606      6C0B3001 
 692:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6607              		.loc 1 692 9 is_stmt 1 view .LVU2260
 6608              	.LVL273:
 693:sieve_extend.c ****         copy_word += 2;
 6609              		.loc 1 693 9 view .LVU2261
 6610 2854 41B90100 		mov	r9d, 1	# ivtmp.473,
 6610      0000
 6611              	# sieve_extend.c:693:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 693:sieve_extend.c ****         copy_word += 2;
 6612              		.loc 1 693 31 is_stmt 0 view .LVU2262
 6613 285a C4A179D6 		vmovq	QWORD PTR [rbx+r8], xmm5	# MEM[base: _533, index: ivtmp.475_748, offset: 0B], tmp640
 6613      2C03
 693:sieve_extend.c ****         copy_word += 2;
 6614              		.loc 1 693 31 view .LVU2263
 6615 2860 C4A3F916 		vpextrq	QWORD PTR 16[rbx+r8], xmm5, 1	# MEM[base: _533, index: ivtmp.475_748, offset: 16B], tmp640
 6615      6C031001 
 6616 2868 C4A179D6 		vmovq	QWORD PTR 32[rbx+r8], xmm7	# MEM[base: _533, index: ivtmp.475_748, offset: 32B], tmp644
 6616      7C0320
 6617 286f C4A3F916 		vpextrq	QWORD PTR 48[rbx+r8], xmm7, 1	# MEM[base: _533, index: ivtmp.475_748, offset: 48B], tmp644
 6617      7C033001 
 694:sieve_extend.c ****         source_word += 2;
 6618              		.loc 1 694 9 is_stmt 1 view .LVU2264
 695:sieve_extend.c ****         distance += 2;
 6619              		.loc 1 695 9 view .LVU2265
 696:sieve_extend.c ****     }
 6620              		.loc 1 696 9 view .LVU2266
 696:sieve_extend.c ****     }
GAS LISTING /tmp/cc64mrzX.s 			page 187


 6621              		.loc 1 696 9 is_stmt 0 view .LVU2267
 6622              	.LBE362:
 688:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6623              		.loc 1 688 11 is_stmt 1 view .LVU2268
 6624 2877 41B84000 		mov	r8d, 64	# ivtmp.475,
 6624      0000
 6625 287d 0F86E901 		jbe	.L810	#,
 6625      0000
 6626 2883 4D85D2   		test	r10, r10	# tmp830
 6627 2886 0F84A400 		je	.L581	#,
 6627      0000
 6628              	.LBB363:
 689:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6629              		.loc 1 689 9 view .LVU2269
 690:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6630              		.loc 1 690 9 view .LVU2270
 6631              	# sieve_extend.c:690:         bitword_t source1 = bitarray[source_word+1];
 690:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6632              		.loc 1 690 19 is_stmt 0 view .LVU2271
 6633 288c C57E6F4A 		vmovdqu	ymm9, YMMWORD PTR 64[rdx]	# MEM[base: vectp.404_499, index: ivtmp.475_748, offset: 0B], ME
 6633      40
 6634 2891 4983FE02 		cmp	r14, 2	# bnd.393,
 6635 2895 C57E6F52 		vmovdqu	ymm10, YMMWORD PTR 96[rdx]	# MEM[base: vectp.404_499, index: ivtmp.475_748, offset: 32B], 
 6635      60
 6636 289a 41B90200 		mov	r9d, 2	# ivtmp.473,
 6636      0000
 6637              	# sieve_extend.c:689:         bitword_t source0 = bitarray[source_word  ];
 689:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6638              		.loc 1 689 19 view .LVU2272
 6639 28a0 C5FE6F71 		vmovdqu	ymm6, YMMWORD PTR 64[rcx]	# tmp1432, MEM[base: vectp.400_490, index: ivtmp.475_748, offset
 6639      40
 6640              	# sieve_extend.c:690:         bitword_t source1 = bitarray[source_word+1];
 690:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6641              		.loc 1 690 19 view .LVU2273
 6642 28a5 C4C1356C 		vpunpcklqdq	ymm2, ymm9, ymm10	# tmp1190, MEM[base: vectp.404_499, index: ivtmp.475_748, offset: 0B
 6642      D2
 6643 28aa C441356D 		vpunpckhqdq	ymm8, ymm9, ymm10	# tmp1205, MEM[base: vectp.404_499, index: ivtmp.475_748, offset: 0B
 6643      C2
 6644              	# sieve_extend.c:689:         bitword_t source0 = bitarray[source_word  ];
 689:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6645              		.loc 1 689 19 view .LVU2274
 6646 28af C54D6C61 		vpunpcklqdq	ymm12, ymm6, YMMWORD PTR 96[rcx]	# tmp1194, tmp1432, MEM[base: vectp.400_490, index: i
 6646      60
 6647              	# sieve_extend.c:690:         bitword_t source1 = bitarray[source_word+1];
 690:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6648              		.loc 1 690 19 view .LVU2275
 6649 28b4 C463FD00 		vpermq	ymm11, ymm2, 216	# vect_perm_even_507, tmp1190,
 6649      DAD8
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6650              		.loc 1 691 9 is_stmt 1 view .LVU2276
 6651              	# sieve_extend.c:689:         bitword_t source0 = bitarray[source_word  ];
 689:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6652              		.loc 1 689 19 is_stmt 0 view .LVU2277
 6653 28ba C443FD00 		vpermq	ymm13, ymm12, 216	# tmp1195, tmp1194,
 6653      ECD8
 6654              	# sieve_extend.c:690:         bitword_t source1 = bitarray[source_word+1];
 690:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
GAS LISTING /tmp/cc64mrzX.s 			page 188


 6655              		.loc 1 690 19 view .LVU2278
 6656 28c0 C4C3FD00 		vpermq	ymm7, ymm8, 216	# tmp1206, tmp1205,
 6656      F8D8
 6657 28c6 41B88000 		mov	r8d, 128	# ivtmp.475,
 6657      0000
 6658              	# sieve_extend.c:691:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6659              		.loc 1 691 42 view .LVU2279
 6660 28cc C515D3F3 		vpsrlq	ymm14, ymm13, xmm3	# vect__98.407, tmp1195, _12
 6661              	# sieve_extend.c:691:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6662              		.loc 1 691 63 view .LVU2280
 6663 28d0 C525F3FC 		vpsllq	ymm15, ymm11, xmm4	# vect__100.408, vect_perm_even_507, _18
 6664              	# sieve_extend.c:693:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 693:sieve_extend.c ****         copy_word += 2;
 6665              		.loc 1 693 42 view .LVU2281
 6666 28d4 C525D3D3 		vpsrlq	ymm10, ymm11, xmm3	# vect__109.410, vect_perm_even_507, _12
 6667              	# sieve_extend.c:693:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 693:sieve_extend.c ****         copy_word += 2;
 6668              		.loc 1 693 63 view .LVU2282
 6669 28d8 C545F3CC 		vpsllq	ymm9, ymm7, xmm4	# vect__110.411, tmp1206, _18
 6670              	# sieve_extend.c:691:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6671              		.loc 1 691 52 view .LVU2283
 6672 28dc C4C10DEB 		vpor	ymm1, ymm14, ymm15	# vect__104.409, vect__98.407, vect__100.408
 6672      CF
 6673              	# sieve_extend.c:693:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 693:sieve_extend.c ****         copy_word += 2;
 6674              		.loc 1 693 52 view .LVU2284
 6675 28e1 C4C135EB 		vpor	ymm2, ymm9, ymm10	# vect__114.412, vect__110.411, vect__109.410
 6675      D2
 6676              	# sieve_extend.c:691:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6677              		.loc 1 691 31 view .LVU2285
 6678 28e6 C4E37D39 		vextracti128	xmm5, ymm1, 0x1	# tmp1202, vect__104.409
 6678      CD01
 6679              	# sieve_extend.c:693:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 693:sieve_extend.c ****         copy_word += 2;
 6680              		.loc 1 693 31 view .LVU2286
 6681 28ec C4E37D39 		vextracti128	xmm6, ymm2, 0x1	# tmp1213, vect__114.412
 6681      D601
 6682              	# sieve_extend.c:691:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6683              		.loc 1 691 31 view .LVU2287
 6684 28f2 C4C179D6 		vmovq	QWORD PTR 64[r11], xmm1	# MEM[base: _513, index: ivtmp.475_748, offset: 0B], tmp1199
 6684      4B40
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6685              		.loc 1 691 31 view .LVU2288
 6686 28f8 C4C3F916 		vpextrq	QWORD PTR 80[r11], xmm1, 1	# MEM[base: _513, index: ivtmp.475_748, offset: 16B], tmp1199
 6686      4B5001
 6687 28ff C4C179D6 		vmovq	QWORD PTR 96[r11], xmm5	# MEM[base: _513, index: ivtmp.475_748, offset: 32B], tmp1202
 6687      6B60
 6688 2905 C4C3F916 		vpextrq	QWORD PTR 112[r11], xmm5, 1	# MEM[base: _513, index: ivtmp.475_748, offset: 48B], tmp1202
 6688      6B7001
 692:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6689              		.loc 1 692 9 is_stmt 1 view .LVU2289
 693:sieve_extend.c ****         copy_word += 2;
GAS LISTING /tmp/cc64mrzX.s 			page 189


 6690              		.loc 1 693 9 view .LVU2290
 6691              	# sieve_extend.c:693:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 693:sieve_extend.c ****         copy_word += 2;
 6692              		.loc 1 693 31 is_stmt 0 view .LVU2291
 6693 290c C5F9D657 		vmovq	QWORD PTR 64[rdi], xmm2	# MEM[base: _533, index: ivtmp.475_748, offset: 0B], tmp1210
 6693      40
 693:sieve_extend.c ****         copy_word += 2;
 6694              		.loc 1 693 31 view .LVU2292
 6695 2911 C4E3F916 		vpextrq	QWORD PTR 80[rdi], xmm2, 1	# MEM[base: _533, index: ivtmp.475_748, offset: 16B], tmp1210
 6695      575001
 6696 2918 C5F9D677 		vmovq	QWORD PTR 96[rdi], xmm6	# MEM[base: _533, index: ivtmp.475_748, offset: 32B], tmp1213
 6696      60
 6697 291d C4E3F916 		vpextrq	QWORD PTR 112[rdi], xmm6, 1	# MEM[base: _533, index: ivtmp.475_748, offset: 48B], tmp1213
 6697      777001
 694:sieve_extend.c ****         source_word += 2;
 6698              		.loc 1 694 9 is_stmt 1 view .LVU2293
 695:sieve_extend.c ****         distance += 2;
 6699              		.loc 1 695 9 view .LVU2294
 696:sieve_extend.c ****     }
 6700              		.loc 1 696 9 view .LVU2295
 696:sieve_extend.c ****     }
 6701              		.loc 1 696 9 is_stmt 0 view .LVU2296
 6702              	.LBE363:
 688:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6703              		.loc 1 688 11 is_stmt 1 view .LVU2297
 6704 2924 0F864201 		jbe	.L810	#,
 6704      0000
 6705 292a 660F1F44 		.p2align 4
 6705      0000
 6706              		.p2align 3
 6707              	.L581:
 6708              	.LBB364:
 689:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6709              		.loc 1 689 9 view .LVU2298
 690:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6710              		.loc 1 690 9 view .LVU2299
 6711              	# sieve_extend.c:690:         bitword_t source1 = bitarray[source_word+1];
 690:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6712              		.loc 1 690 19 is_stmt 0 view .LVU2300
 6713 2930 C4217E6F 		vmovdqu	ymm12, YMMWORD PTR [rdx+r8]	# MEM[base: vectp.404_499, index: ivtmp.475_748, offset: 0B], 
 6713      2402
 6714 2936 4983C102 		add	r9, 2	# ivtmp.473,
 6715 293a C4217E6F 		vmovdqu	ymm13, YMMWORD PTR 32[rdx+r8]	# MEM[base: vectp.404_499, index: ivtmp.475_748, offset: 32B
 6715      6C0220
 6716              	# sieve_extend.c:689:         bitword_t source0 = bitarray[source_word  ];
 689:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6717              		.loc 1 689 19 view .LVU2301
 6718 2941 C4A17E6F 		vmovdqu	ymm1, YMMWORD PTR [rcx+r8]	# tmp1316, MEM[base: vectp.400_490, index: ivtmp.475_748, offse
 6718      0C01
 6719              	# sieve_extend.c:690:         bitword_t source1 = bitarray[source_word+1];
 690:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6720              		.loc 1 690 19 view .LVU2302
 6721 2947 C4411D6C 		vpunpcklqdq	ymm14, ymm12, ymm13	# tmp837, MEM[base: vectp.404_499, index: ivtmp.475_748, offset: 0
 6721      F5
 6722 294c C4411D6D 		vpunpckhqdq	ymm11, ymm12, ymm13	# tmp852, MEM[base: vectp.404_499, index: ivtmp.475_748, offset: 0
 6722      DD
 6723              	# sieve_extend.c:689:         bitword_t source0 = bitarray[source_word  ];
GAS LISTING /tmp/cc64mrzX.s 			page 190


 689:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6724              		.loc 1 689 19 view .LVU2303
 6725 2951 C4A1756C 		vpunpcklqdq	ymm0, ymm1, YMMWORD PTR 32[rcx+r8]	# tmp841, tmp1316, MEM[base: vectp.400_490, index: 
 6725      440120
 6726              	# sieve_extend.c:690:         bitword_t source1 = bitarray[source_word+1];
 690:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6727              		.loc 1 690 19 view .LVU2304
 6728 2958 C443FD00 		vpermq	ymm15, ymm14, 216	# vect_perm_even_507, tmp837,
 6728      FED8
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6729              		.loc 1 691 9 is_stmt 1 view .LVU2305
 6730              	# sieve_extend.c:689:         bitword_t source0 = bitarray[source_word  ];
 689:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6731              		.loc 1 689 19 is_stmt 0 view .LVU2306
 6732 295e C4E3FD00 		vpermq	ymm5, ymm0, 216	# tmp842, tmp841,
 6732      E8D8
 6733              	# sieve_extend.c:690:         bitword_t source1 = bitarray[source_word+1];
 690:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6734              		.loc 1 690 19 view .LVU2307
 6735 2964 C4C3FD00 		vpermq	ymm6, ymm11, 216	# tmp853, tmp852,
 6735      F3D8
 6736              	# sieve_extend.c:691:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6737              		.loc 1 691 42 view .LVU2308
 6738 296a C555D3C3 		vpsrlq	ymm8, ymm5, xmm3	# vect__98.407, tmp842, _12
 6739              	# sieve_extend.c:691:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6740              		.loc 1 691 63 view .LVU2309
 6741 296e C585F3FC 		vpsllq	ymm7, ymm15, xmm4	# vect__100.408, vect_perm_even_507, _18
 6742              	# sieve_extend.c:693:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 693:sieve_extend.c ****         copy_word += 2;
 6743              		.loc 1 693 42 view .LVU2310
 6744 2972 C505D3EB 		vpsrlq	ymm13, ymm15, xmm3	# vect__109.410, vect_perm_even_507, _12
 6745              	# sieve_extend.c:693:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 693:sieve_extend.c ****         copy_word += 2;
 6746              		.loc 1 693 63 view .LVU2311
 6747 2976 C54DF3E4 		vpsllq	ymm12, ymm6, xmm4	# vect__110.411, tmp853, _18
 6748              	# sieve_extend.c:691:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6749              		.loc 1 691 52 view .LVU2312
 6750 297a C53DEBCF 		vpor	ymm9, ymm8, ymm7	# vect__104.409, vect__98.407, vect__100.408
 6751              	# sieve_extend.c:693:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 693:sieve_extend.c ****         copy_word += 2;
 6752              		.loc 1 693 52 view .LVU2313
 6753 297e C4411DEB 		vpor	ymm14, ymm12, ymm13	# vect__114.412, vect__110.411, vect__109.410
 6753      F5
 6754              	# sieve_extend.c:691:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6755              		.loc 1 691 31 view .LVU2314
 6756 2983 C4637D39 		vextracti128	xmm2, ymm9, 0x1	# tmp849, vect__104.409
 6756      CA01
 6757              	# sieve_extend.c:693:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 693:sieve_extend.c ****         copy_word += 2;
 6758              		.loc 1 693 31 view .LVU2315
 6759 2989 C4637D39 		vextracti128	xmm1, ymm14, 0x1	# tmp860, vect__114.412
 6759      F101
 6760              	# sieve_extend.c:691:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
GAS LISTING /tmp/cc64mrzX.s 			page 191


 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6761              		.loc 1 691 31 view .LVU2316
 6762 298f C40179D6 		vmovq	QWORD PTR [r11+r8], xmm9	# MEM[base: _513, index: ivtmp.475_748, offset: 0B], tmp846
 6762      0C03
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6763              		.loc 1 691 31 view .LVU2317
 6764 2995 C403F916 		vpextrq	QWORD PTR 16[r11+r8], xmm9, 1	# MEM[base: _513, index: ivtmp.475_748, offset: 16B], tmp846
 6764      4C031001 
 6765 299d C48179D6 		vmovq	QWORD PTR 32[r11+r8], xmm2	# MEM[base: _513, index: ivtmp.475_748, offset: 32B], tmp849
 6765      540320
 6766 29a4 C483F916 		vpextrq	QWORD PTR 48[r11+r8], xmm2, 1	# MEM[base: _513, index: ivtmp.475_748, offset: 48B], tmp849
 6766      54033001 
 692:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6767              		.loc 1 692 9 is_stmt 1 view .LVU2318
 693:sieve_extend.c ****         copy_word += 2;
 6768              		.loc 1 693 9 view .LVU2319
 6769              	# sieve_extend.c:693:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 693:sieve_extend.c ****         copy_word += 2;
 6770              		.loc 1 693 31 is_stmt 0 view .LVU2320
 6771 29ac C42179D6 		vmovq	QWORD PTR [rdi+r8], xmm14	# MEM[base: _533, index: ivtmp.475_748, offset: 0B], tmp857
 6771      3407
 693:sieve_extend.c ****         copy_word += 2;
 6772              		.loc 1 693 31 view .LVU2321
 6773 29b2 C423F916 		vpextrq	QWORD PTR 16[rdi+r8], xmm14, 1	# MEM[base: _533, index: ivtmp.475_748, offset: 16B], tmp85
 6773      74071001 
 6774 29ba C4A179D6 		vmovq	QWORD PTR 32[rdi+r8], xmm1	# MEM[base: _533, index: ivtmp.475_748, offset: 32B], tmp860
 6774      4C0720
 6775 29c1 C4A3F916 		vpextrq	QWORD PTR 48[rdi+r8], xmm1, 1	# MEM[base: _533, index: ivtmp.475_748, offset: 48B], tmp860
 6775      4C073001 
 694:sieve_extend.c ****         source_word += 2;
 6776              		.loc 1 694 9 is_stmt 1 view .LVU2322
 695:sieve_extend.c ****         distance += 2;
 6777              		.loc 1 695 9 view .LVU2323
 696:sieve_extend.c ****     }
 6778              		.loc 1 696 9 view .LVU2324
 696:sieve_extend.c ****     }
 6779              		.loc 1 696 9 is_stmt 0 view .LVU2325
 6780              	.LBE364:
 688:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6781              		.loc 1 688 11 is_stmt 1 view .LVU2326
 6782              	.LBB365:
 689:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6783              		.loc 1 689 9 view .LVU2327
 690:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6784              		.loc 1 690 9 view .LVU2328
 6785              	# sieve_extend.c:690:         bitword_t source1 = bitarray[source_word+1];
 690:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6786              		.loc 1 690 19 is_stmt 0 view .LVU2329
 6787 29c9 C4217E6F 		vmovdqu	ymm8, YMMWORD PTR 64[rdx+r8]	# MEM[base: vectp.404_499, index: ivtmp.475_748, offset: 0B],
 6787      440240
 6788 29d0 C4A17E6F 		vmovdqu	ymm0, YMMWORD PTR 96[rdx+r8]	# MEM[base: vectp.404_499, index: ivtmp.475_748, offset: 32B]
 6788      440260
 6789              	# sieve_extend.c:689:         bitword_t source0 = bitarray[source_word  ];
 689:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6790              		.loc 1 689 19 view .LVU2330
 6791 29d7 C4A17E6F 		vmovdqu	ymm7, YMMWORD PTR 64[rcx+r8]	# tmp1317, MEM[base: vectp.400_490, index: ivtmp.475_748, off
 6791      7C0140
GAS LISTING /tmp/cc64mrzX.s 			page 192


 6792              	# sieve_extend.c:690:         bitword_t source1 = bitarray[source_word+1];
 690:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6793              		.loc 1 690 19 view .LVU2331
 6794 29de C5BD6CE8 		vpunpcklqdq	ymm5, ymm8, ymm0	# tmp867, MEM[base: vectp.404_499, index: ivtmp.475_748, offset: 0B],
 6795 29e2 C53D6DF8 		vpunpckhqdq	ymm15, ymm8, ymm0	# tmp882, MEM[base: vectp.404_499, index: ivtmp.475_748, offset: 0B]
 6796              	# sieve_extend.c:689:         bitword_t source0 = bitarray[source_word  ];
 689:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6797              		.loc 1 689 19 view .LVU2332
 6798 29e6 C421456C 		vpunpcklqdq	ymm10, ymm7, YMMWORD PTR 96[rcx+r8]	# tmp871, tmp1317, MEM[base: vectp.400_490, index:
 6798      540160
 6799              	# sieve_extend.c:690:         bitword_t source1 = bitarray[source_word+1];
 690:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6800              		.loc 1 690 19 view .LVU2333
 6801 29ed C463FD00 		vpermq	ymm9, ymm5, 216	# vect_perm_even_507, tmp867,
 6801      CDD8
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6802              		.loc 1 691 9 is_stmt 1 view .LVU2334
 6803              	# sieve_extend.c:689:         bitword_t source0 = bitarray[source_word  ];
 689:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6804              		.loc 1 689 19 is_stmt 0 view .LVU2335
 6805 29f3 C4C3FD00 		vpermq	ymm2, ymm10, 216	# tmp872, tmp871,
 6805      D2D8
 6806              	# sieve_extend.c:690:         bitword_t source1 = bitarray[source_word+1];
 690:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6807              		.loc 1 690 19 view .LVU2336
 6808 29f9 C4C3FD00 		vpermq	ymm1, ymm15, 216	# tmp883, tmp882,
 6808      CFD8
 6809              	# sieve_extend.c:691:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6810              		.loc 1 691 42 view .LVU2337
 6811 29ff C56DD3DB 		vpsrlq	ymm11, ymm2, xmm3	# vect__98.407, tmp872, _12
 6812              	# sieve_extend.c:691:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6813              		.loc 1 691 63 view .LVU2338
 6814 2a03 C5B5F3F4 		vpsllq	ymm6, ymm9, xmm4	# vect__100.408, vect_perm_even_507, _18
 6815              	# sieve_extend.c:693:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 693:sieve_extend.c ****         copy_word += 2;
 6816              		.loc 1 693 42 view .LVU2339
 6817 2a07 C5B5D3C3 		vpsrlq	ymm0, ymm9, xmm3	# vect__109.410, vect_perm_even_507, _12
 6818              	# sieve_extend.c:693:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 693:sieve_extend.c ****         copy_word += 2;
 6819              		.loc 1 693 63 view .LVU2340
 6820 2a0b C575F3C4 		vpsllq	ymm8, ymm1, xmm4	# vect__110.411, tmp883, _18
 6821              	# sieve_extend.c:691:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6822              		.loc 1 691 52 view .LVU2341
 6823 2a0f C525EBE6 		vpor	ymm12, ymm11, ymm6	# vect__104.409, vect__98.407, vect__100.408
 6824              	# sieve_extend.c:693:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 693:sieve_extend.c ****         copy_word += 2;
 6825              		.loc 1 693 52 view .LVU2342
 6826 2a13 C5BDEBE8 		vpor	ymm5, ymm8, ymm0	# vect__114.412, vect__110.411, vect__109.410
 6827              	# sieve_extend.c:691:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6828              		.loc 1 691 31 view .LVU2343
 6829 2a17 C4437D39 		vextracti128	xmm14, ymm12, 0x1	# tmp879, vect__104.409
 6829      E601
 6830              	# sieve_extend.c:693:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
GAS LISTING /tmp/cc64mrzX.s 			page 193


 693:sieve_extend.c ****         copy_word += 2;
 6831              		.loc 1 693 31 view .LVU2344
 6832 2a1d C4E37D39 		vextracti128	xmm7, ymm5, 0x1	# tmp890, vect__114.412
 6832      EF01
 6833              	# sieve_extend.c:691:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6834              		.loc 1 691 31 view .LVU2345
 6835 2a23 C40179D6 		vmovq	QWORD PTR 64[r11+r8], xmm12	# MEM[base: _513, index: ivtmp.475_748, offset: 0B], tmp876
 6835      640340
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6836              		.loc 1 691 31 view .LVU2346
 6837 2a2a C403F916 		vpextrq	QWORD PTR 80[r11+r8], xmm12, 1	# MEM[base: _513, index: ivtmp.475_748, offset: 16B], tmp87
 6837      64035001 
 6838 2a32 C40179D6 		vmovq	QWORD PTR 96[r11+r8], xmm14	# MEM[base: _513, index: ivtmp.475_748, offset: 32B], tmp879
 6838      740360
 6839 2a39 C403F916 		vpextrq	QWORD PTR 112[r11+r8], xmm14, 1	# MEM[base: _513, index: ivtmp.475_748, offset: 48B], tmp8
 6839      74037001 
 692:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6840              		.loc 1 692 9 is_stmt 1 view .LVU2347
 693:sieve_extend.c ****         copy_word += 2;
 6841              		.loc 1 693 9 view .LVU2348
 6842              	# sieve_extend.c:693:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 693:sieve_extend.c ****         copy_word += 2;
 6843              		.loc 1 693 31 is_stmt 0 view .LVU2349
 6844 2a41 C4A179D6 		vmovq	QWORD PTR 64[rdi+r8], xmm5	# MEM[base: _533, index: ivtmp.475_748, offset: 0B], tmp887
 6844      6C0740
 693:sieve_extend.c ****         copy_word += 2;
 6845              		.loc 1 693 31 view .LVU2350
 6846 2a48 C4A3F916 		vpextrq	QWORD PTR 80[rdi+r8], xmm5, 1	# MEM[base: _533, index: ivtmp.475_748, offset: 16B], tmp887
 6846      6C075001 
 6847 2a50 C4A179D6 		vmovq	QWORD PTR 96[rdi+r8], xmm7	# MEM[base: _533, index: ivtmp.475_748, offset: 32B], tmp890
 6847      7C0760
 6848 2a57 C4A3F916 		vpextrq	QWORD PTR 112[rdi+r8], xmm7, 1	# MEM[base: _533, index: ivtmp.475_748, offset: 48B], tmp89
 6848      7C077001 
 694:sieve_extend.c ****         source_word += 2;
 6849              		.loc 1 694 9 is_stmt 1 view .LVU2351
 695:sieve_extend.c ****         distance += 2;
 6850              		.loc 1 695 9 view .LVU2352
 696:sieve_extend.c ****     }
 6851              		.loc 1 696 9 view .LVU2353
 696:sieve_extend.c ****     }
 6852              		.loc 1 696 9 is_stmt 0 view .LVU2354
 6853              	.LBE365:
 688:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6854              		.loc 1 688 11 is_stmt 1 view .LVU2355
 6855 2a5f 4983E880 		sub	r8, -128	# ivtmp.475,
 6856 2a63 4D39CE   		cmp	r14, r9	# bnd.393, ivtmp.473
 6857 2a66 0F87C4FE 		ja	.L581	#,
 6857      FFFF
 6858              	.L810:
 688:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6859              		.loc 1 688 11 is_stmt 0 view .LVU2356
 6860 2a6c 488B5424 		mov	rdx, QWORD PTR 88[rsp]	# _183, %sfp
 6860      58
 6861 2a71 49C1E603 		sal	r14, 3	# _483,
 6862 2a75 4A8D0C32 		lea	rcx, [rdx+r14]	# tmp.395,
 6863 2a79 4A8D1430 		lea	rdx, [rax+r14]	# tmp.396,
GAS LISTING /tmp/cc64mrzX.s 			page 194


 6864              	.LVL274:
 6865              	.LBB366:
 689:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6866              		.loc 1 689 9 is_stmt 1 view .LVU2357
 6867              	# sieve_extend.c:689:         bitword_t source0 = bitarray[source_word  ];
 689:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6868              		.loc 1 689 37 is_stmt 0 view .LVU2358
 6869 2a7d 4C8D1CCD 		lea	r11, 0[0+rcx*8]	# _605,
 6869      00000000 
 6870              	.LVL275:
 690:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6871              		.loc 1 690 9 is_stmt 1 view .LVU2359
 6872              	# sieve_extend.c:691:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6873              		.loc 1 691 42 is_stmt 0 view .LVU2360
 6874 2a85 C4E293F7 		shrx	rsi, QWORD PTR [rbx+rcx*8], r13	# tmp648, *_606, shift
 6874      34CB
 6875              	# sieve_extend.c:690:         bitword_t source1 = bitarray[source_word+1];
 690:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6876              		.loc 1 690 19 view .LVU2361
 6877 2a8b 4A8B7C1B 		mov	rdi, QWORD PTR 8[rbx+r11]	# source1, *_610
 6877      08
 6878              	.LVL276:
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6879              		.loc 1 691 9 is_stmt 1 view .LVU2362
 6880              	# sieve_extend.c:691:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6881              		.loc 1 691 63 is_stmt 0 view .LVU2363
 6882 2a90 C46281F7 		shlx	r10, rdi, r15	# tmp650, source1, shift_flipped
 6882      D7
 6883              	# sieve_extend.c:691:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6884              		.loc 1 691 52 view .LVU2364
 6885 2a95 4C09D6   		or	rsi, r10	# tmp651, tmp650
 6886              	# sieve_extend.c:693:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 693:sieve_extend.c ****         copy_word += 2;
 6887              		.loc 1 693 42 view .LVU2365
 6888 2a98 C4E293F7 		shrx	rdi, rdi, r13	# tmp654, source1, shift
 6888      FF
 6889              	.LVL277:
 6890              	# sieve_extend.c:691:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6891              		.loc 1 691 52 view .LVU2366
 6892 2a9d 488934D3 		mov	QWORD PTR [rbx+rdx*8], rsi	# *_615, tmp651
 6893              	.LVL278:
 692:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6894              		.loc 1 692 9 is_stmt 1 view .LVU2367
 6895              	# sieve_extend.c:692:         bitword_t source2 = bitarray[source_word+2];
 692:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6896              		.loc 1 692 37 is_stmt 0 view .LVU2368
 6897 2aa1 4C8D4902 		lea	r9, 2[rcx]	# _618,
 6898              	.LVL279:
 693:sieve_extend.c ****         copy_word += 2;
 6899              		.loc 1 693 9 is_stmt 1 view .LVU2369
 6900              	# sieve_extend.c:693:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 693:sieve_extend.c ****         copy_word += 2;
 6901              		.loc 1 693 63 is_stmt 0 view .LVU2370
GAS LISTING /tmp/cc64mrzX.s 			page 195


 6902 2aa5 4E8B441B 		mov	r8, QWORD PTR 16[rbx+r11]	# *_620, *_620
 6902      10
 6903 2aaa C44281F7 		shlx	r11, r8, r15	# tmp652, *_620, shift_flipped
 6903      D8
 6904              	.LVL280:
 6905              	# sieve_extend.c:693:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 693:sieve_extend.c ****         copy_word += 2;
 6906              		.loc 1 693 52 view .LVU2371
 6907 2aaf 4C09DF   		or	rdi, r11	# tmp655, tmp652
 6908              	# sieve_extend.c:694:         copy_word += 2;
 694:sieve_extend.c ****         source_word += 2;
 6909              		.loc 1 694 19 view .LVU2372
 6910 2ab2 4C8D4202 		lea	r8, 2[rdx]	# copy_word,
 6911              	.LVL281:
 694:sieve_extend.c ****         source_word += 2;
 6912              		.loc 1 694 19 view .LVU2373
 6913              	.LBE366:
 6914              	# sieve_extend.c:688:     while (copy_word < fast_loop_stop_word) {
 688:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6915              		.loc 1 688 11 view .LVU2374
 6916 2ab6 4C8B5C24 		mov	r11, QWORD PTR 48[rsp]	# fast_loop_stop_word, %sfp
 6916      30
 6917              	.LBB367:
 6918              	# sieve_extend.c:696:         distance += 2;
 696:sieve_extend.c ****     }
 6919              		.loc 1 696 18 view .LVU2375
 6920 2abb 4D8D5602 		lea	r10, 2[r14]	# distance,
 6921              	# sieve_extend.c:693:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 693:sieve_extend.c ****         copy_word += 2;
 6922              		.loc 1 693 52 view .LVU2376
 6923 2abf 48897CD3 		mov	QWORD PTR 8[rbx+rdx*8], rdi	# *_626, tmp655
 6923      08
 6924              	.LVL282:
 694:sieve_extend.c ****         source_word += 2;
 6925              		.loc 1 694 9 is_stmt 1 view .LVU2377
 695:sieve_extend.c ****         distance += 2;
 6926              		.loc 1 695 9 view .LVU2378
 696:sieve_extend.c ****     }
 6927              		.loc 1 696 9 view .LVU2379
 696:sieve_extend.c ****     }
 6928              		.loc 1 696 9 is_stmt 0 view .LVU2380
 6929              	.LBE367:
 688:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6930              		.loc 1 688 11 is_stmt 1 view .LVU2381
 6931 2ac4 4D39C3   		cmp	r11, r8	# fast_loop_stop_word, copy_word
 6932 2ac7 0F86D500 		jbe	.L584	#,
 6932      0000
 6933              	.LBB368:
 689:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6934              		.loc 1 689 9 view .LVU2382
 6935              	# sieve_extend.c:691:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6936              		.loc 1 691 42 is_stmt 0 view .LVU2383
 6937 2acd 4A8B34CB 		mov	rsi, QWORD PTR [rbx+r9*8]	# *_636, *_636
 6938              	# sieve_extend.c:689:         bitword_t source0 = bitarray[source_word  ];
 689:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6939              		.loc 1 689 37 view .LVU2384
GAS LISTING /tmp/cc64mrzX.s 			page 196


 6940 2ad1 4E8D14CD 		lea	r10, 0[0+r9*8]	# _635,
 6940      00000000 
 6941              	.LVL283:
 690:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6942              		.loc 1 690 9 is_stmt 1 view .LVU2385
 6943              	# sieve_extend.c:690:         bitword_t source1 = bitarray[source_word+1];
 690:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6944              		.loc 1 690 19 is_stmt 0 view .LVU2386
 6945 2ad9 4A8B7C13 		mov	rdi, QWORD PTR 8[rbx+r10]	# source1, *_640
 6945      08
 6946              	.LVL284:
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6947              		.loc 1 691 9 is_stmt 1 view .LVU2387
 6948              	# sieve_extend.c:691:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6949              		.loc 1 691 42 is_stmt 0 view .LVU2388
 6950 2ade C4E293F7 		shrx	rsi, rsi, r13	# tmp656, *_636, shift
 6950      F6
 6951              	.LVL285:
 6952              	# sieve_extend.c:691:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6953              		.loc 1 691 63 view .LVU2389
 6954 2ae3 C46281F7 		shlx	r9, rdi, r15	# tmp658, source1, shift_flipped
 6954      CF
 6955              	.LVL286:
 6956              	# sieve_extend.c:691:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6957              		.loc 1 691 52 view .LVU2390
 6958 2ae8 4C09CE   		or	rsi, r9	# tmp659, tmp658
 6959 2aeb 4A8934C3 		mov	QWORD PTR [rbx+r8*8], rsi	# *_645, tmp659
 6960              	.LVL287:
 692:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6961              		.loc 1 692 9 is_stmt 1 view .LVU2391
 6962              	# sieve_extend.c:693:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 693:sieve_extend.c ****         copy_word += 2;
 6963              		.loc 1 693 42 is_stmt 0 view .LVU2392
 6964 2aef C4E293F7 		shrx	rdi, rdi, r13	# tmp662, source1, shift
 6964      FF
 6965              	.LVL288:
 6966              	# sieve_extend.c:693:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 693:sieve_extend.c ****         copy_word += 2;
 6967              		.loc 1 693 63 view .LVU2393
 6968 2af4 4E8B5413 		mov	r10, QWORD PTR 16[rbx+r10]	# *_650, *_650
 6968      10
 6969 2af9 C4C281F7 		shlx	rsi, r10, r15	# tmp660, *_650, shift_flipped
 6969      F2
 6970              	# sieve_extend.c:693:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 693:sieve_extend.c ****         copy_word += 2;
 6971              		.loc 1 693 52 view .LVU2394
 6972 2afe 4809F7   		or	rdi, rsi	# tmp663, tmp660
 6973              	# sieve_extend.c:692:         bitword_t source2 = bitarray[source_word+2];
 692:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6974              		.loc 1 692 37 view .LVU2395
 6975 2b01 4C8D4904 		lea	r9, 4[rcx]	# _648,
 693:sieve_extend.c ****         copy_word += 2;
 6976              		.loc 1 693 9 is_stmt 1 view .LVU2396
 6977              	# sieve_extend.c:693:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
GAS LISTING /tmp/cc64mrzX.s 			page 197


 693:sieve_extend.c ****         copy_word += 2;
 6978              		.loc 1 693 52 is_stmt 0 view .LVU2397
 6979 2b05 4A897CC3 		mov	QWORD PTR 8[rbx+r8*8], rdi	# *_656, tmp663
 6979      08
 694:sieve_extend.c ****         source_word += 2;
 6980              		.loc 1 694 9 is_stmt 1 view .LVU2398
 6981              	# sieve_extend.c:694:         copy_word += 2;
 694:sieve_extend.c ****         source_word += 2;
 6982              		.loc 1 694 19 is_stmt 0 view .LVU2399
 6983 2b0a 4C8D4204 		lea	r8, 4[rdx]	# copy_word,
 6984              	.LVL289:
 695:sieve_extend.c ****         distance += 2;
 6985              		.loc 1 695 9 is_stmt 1 view .LVU2400
 696:sieve_extend.c ****     }
 6986              		.loc 1 696 9 view .LVU2401
 696:sieve_extend.c ****     }
 6987              		.loc 1 696 9 is_stmt 0 view .LVU2402
 6988              	.LBE368:
 6989              	# sieve_extend.c:688:     while (copy_word < fast_loop_stop_word) {
 688:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6990              		.loc 1 688 11 view .LVU2403
 6991 2b0e 4D39C3   		cmp	r11, r8	# fast_loop_stop_word, copy_word
 6992              	.LBB369:
 6993              	# sieve_extend.c:696:         distance += 2;
 696:sieve_extend.c ****     }
 6994              		.loc 1 696 18 view .LVU2404
 6995 2b11 4D8D5604 		lea	r10, 4[r14]	# distance,
 6996              	.LVL290:
 696:sieve_extend.c ****     }
 6997              		.loc 1 696 18 view .LVU2405
 6998              	.LBE369:
 688:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6999              		.loc 1 688 11 is_stmt 1 view .LVU2406
 7000 2b15 0F868700 		jbe	.L584	#,
 7000      0000
 7001              	.LBB370:
 689:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 7002              		.loc 1 689 9 view .LVU2407
 7003              	# sieve_extend.c:689:         bitword_t source0 = bitarray[source_word  ];
 689:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 7004              		.loc 1 689 37 is_stmt 0 view .LVU2408
 7005 2b1b 4E8D14CD 		lea	r10, 0[0+r9*8]	# _665,
 7005      00000000 
 7006              	.LVL291:
 690:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 7007              		.loc 1 690 9 is_stmt 1 view .LVU2409
 7008              	# sieve_extend.c:694:         copy_word += 2;
 694:sieve_extend.c ****         source_word += 2;
 7009              		.loc 1 694 19 is_stmt 0 view .LVU2410
 7010 2b23 4883C206 		add	rdx, 6	# copy_word,
 7011              	# sieve_extend.c:690:         bitword_t source1 = bitarray[source_word+1];
 690:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 7012              		.loc 1 690 19 view .LVU2411
 7013 2b27 4A8B7C13 		mov	rdi, QWORD PTR 8[rbx+r10]	# source1, *_670
 7013      08
 7014              	.LVL292:
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
GAS LISTING /tmp/cc64mrzX.s 			page 198


 7015              		.loc 1 691 9 is_stmt 1 view .LVU2412
 7016              	# sieve_extend.c:692:         bitword_t source2 = bitarray[source_word+2];
 692:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 7017              		.loc 1 692 37 is_stmt 0 view .LVU2413
 7018 2b2c 4883C106 		add	rcx, 6	# _678,
 7019              	# sieve_extend.c:691:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7020              		.loc 1 691 42 view .LVU2414
 7021 2b30 4E8B0CCB 		mov	r9, QWORD PTR [rbx+r9*8]	# *_666, *_666
 7022              	.LVL293:
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7023              		.loc 1 691 42 view .LVU2415
 7024 2b34 C4C293F7 		shrx	rsi, r9, r13	# tmp664, *_666, shift
 7024      F1
 7025              	# sieve_extend.c:691:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7026              		.loc 1 691 63 view .LVU2416
 7027 2b39 C46281F7 		shlx	r9, rdi, r15	# tmp666, source1, shift_flipped
 7027      CF
 7028              	.LVL294:
 7029              	# sieve_extend.c:691:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7030              		.loc 1 691 52 view .LVU2417
 7031 2b3e 4C09CE   		or	rsi, r9	# tmp667, tmp666
 7032 2b41 4A8934C3 		mov	QWORD PTR [rbx+r8*8], rsi	# *_675, tmp667
 7033              	.LVL295:
 692:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 7034              		.loc 1 692 9 is_stmt 1 view .LVU2418
 693:sieve_extend.c ****         copy_word += 2;
 7035              		.loc 1 693 9 view .LVU2419
 7036              	# sieve_extend.c:693:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 693:sieve_extend.c ****         copy_word += 2;
 7037              		.loc 1 693 42 is_stmt 0 view .LVU2420
 7038 2b45 C4E293F7 		shrx	rdi, rdi, r13	# tmp670, source1, shift
 7038      FF
 7039              	.LVL296:
 7040              	# sieve_extend.c:693:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 693:sieve_extend.c ****         copy_word += 2;
 7041              		.loc 1 693 63 view .LVU2421
 7042 2b4a 4E8B5413 		mov	r10, QWORD PTR 16[rbx+r10]	# *_680, *_680
 7042      10
 7043              	.LVL297:
 693:sieve_extend.c ****         copy_word += 2;
 7044              		.loc 1 693 63 view .LVU2422
 7045 2b4f C4C281F7 		shlx	rsi, r10, r15	# tmp668, *_680, shift_flipped
 7045      F2
 7046              	# sieve_extend.c:693:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 693:sieve_extend.c ****         copy_word += 2;
 7047              		.loc 1 693 52 view .LVU2423
 7048 2b54 4809F7   		or	rdi, rsi	# tmp671, tmp668
 7049              	.LBE370:
 7050              	# sieve_extend.c:688:     while (copy_word < fast_loop_stop_word) {
 688:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 7051              		.loc 1 688 11 view .LVU2424
 7052 2b57 4939D3   		cmp	r11, rdx	# fast_loop_stop_word, copy_word
 7053              	.LBB371:
 7054              	# sieve_extend.c:693:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
GAS LISTING /tmp/cc64mrzX.s 			page 199


 693:sieve_extend.c ****         copy_word += 2;
 7055              		.loc 1 693 52 view .LVU2425
 7056 2b5a 4A897CC3 		mov	QWORD PTR 8[rbx+r8*8], rdi	# *_686, tmp671
 7056      08
 694:sieve_extend.c ****         source_word += 2;
 7057              		.loc 1 694 9 is_stmt 1 view .LVU2426
 7058              	.LVL298:
 695:sieve_extend.c ****         distance += 2;
 7059              		.loc 1 695 9 view .LVU2427
 696:sieve_extend.c ****     }
 7060              		.loc 1 696 9 view .LVU2428
 7061              	# sieve_extend.c:696:         distance += 2;
 696:sieve_extend.c ****     }
 7062              		.loc 1 696 18 is_stmt 0 view .LVU2429
 7063 2b5f 4D8D5606 		lea	r10, 6[r14]	# distance,
 7064              	.LVL299:
 696:sieve_extend.c ****     }
 7065              		.loc 1 696 18 view .LVU2430
 7066              	.LBE371:
 688:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 7067              		.loc 1 688 11 is_stmt 1 view .LVU2431
 7068 2b63 763D     		jbe	.L584	#,
 7069              	.LBB372:
 689:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 7070              		.loc 1 689 9 view .LVU2432
 7071              	# sieve_extend.c:689:         bitword_t source0 = bitarray[source_word  ];
 689:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 7072              		.loc 1 689 37 is_stmt 0 view .LVU2433
 7073 2b65 4C8D1CCD 		lea	r11, 0[0+rcx*8]	# _452,
 7073      00000000 
 7074              	.LVL300:
 690:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 7075              		.loc 1 690 9 is_stmt 1 view .LVU2434
 7076              	# sieve_extend.c:690:         bitword_t source1 = bitarray[source_word+1];
 690:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 7077              		.loc 1 690 19 is_stmt 0 view .LVU2435
 7078 2b6d 4E8B4C1B 		mov	r9, QWORD PTR 8[rbx+r11]	# source1, *_457
 7078      08
 7079              	.LVL301:
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7080              		.loc 1 691 9 is_stmt 1 view .LVU2436
 7081              	# sieve_extend.c:691:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7082              		.loc 1 691 63 is_stmt 0 view .LVU2437
 7083 2b72 C44281F7 		shlx	r8, r9, r15	# tmp674, source1, shift_flipped
 7083      C1
 7084              	# sieve_extend.c:691:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7085              		.loc 1 691 42 view .LVU2438
 7086 2b77 488B0CCB 		mov	rcx, QWORD PTR [rbx+rcx*8]	# *_453, *_453
 7087              	.LVL302:
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7088              		.loc 1 691 42 view .LVU2439
 7089 2b7b C46293F7 		shrx	r10, rcx, r13	# tmp672, *_453, shift
 7089      D1
 7090              	.LVL303:
 7091              	# sieve_extend.c:691:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
GAS LISTING /tmp/cc64mrzX.s 			page 200


 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7092              		.loc 1 691 52 view .LVU2440
 7093 2b80 4D09C2   		or	r10, r8	# tmp675, tmp674
 7094 2b83 4C8914D3 		mov	QWORD PTR [rbx+rdx*8], r10	# *_462, tmp675
 692:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 7095              		.loc 1 692 9 is_stmt 1 view .LVU2441
 7096              	.LVL304:
 693:sieve_extend.c ****         copy_word += 2;
 7097              		.loc 1 693 9 view .LVU2442
 7098              	# sieve_extend.c:696:         distance += 2;
 696:sieve_extend.c ****     }
 7099              		.loc 1 696 18 is_stmt 0 view .LVU2443
 7100 2b87 4D8D5608 		lea	r10, 8[r14]	# distance,
 7101              	# sieve_extend.c:693:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 693:sieve_extend.c ****         copy_word += 2;
 7102              		.loc 1 693 63 view .LVU2444
 7103 2b8b 4A8B741B 		mov	rsi, QWORD PTR 16[rbx+r11]	# *_467, *_467
 7103      10
 7104              	# sieve_extend.c:693:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 693:sieve_extend.c ****         copy_word += 2;
 7105              		.loc 1 693 42 view .LVU2445
 7106 2b90 C44293F7 		shrx	r11, r9, r13	# tmp678, source1, shift
 7106      D9
 7107              	.LVL305:
 7108              	# sieve_extend.c:693:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 693:sieve_extend.c ****         copy_word += 2;
 7109              		.loc 1 693 63 view .LVU2446
 7110 2b95 C4E281F7 		shlx	rdi, rsi, r15	# tmp676, *_467, shift_flipped
 7110      FE
 7111              	# sieve_extend.c:693:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 693:sieve_extend.c ****         copy_word += 2;
 7112              		.loc 1 693 52 view .LVU2447
 7113 2b9a 4909FB   		or	r11, rdi	# tmp679, tmp676
 7114 2b9d 4C895CD3 		mov	QWORD PTR 8[rbx+rdx*8], r11	# *_473, tmp679
 7114      08
 694:sieve_extend.c ****         source_word += 2;
 7115              		.loc 1 694 9 is_stmt 1 view .LVU2448
 695:sieve_extend.c ****         distance += 2;
 7116              		.loc 1 695 9 view .LVU2449
 696:sieve_extend.c ****     }
 7117              		.loc 1 696 9 view .LVU2450
 7118              	.LVL306:
 696:sieve_extend.c ****     }
 7119              		.loc 1 696 9 is_stmt 0 view .LVU2451
 7120              	.LBE372:
 688:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 7121              		.loc 1 688 11 is_stmt 1 view .LVU2452
 7122              	.L584:
 688:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 7123              		.loc 1 688 11 is_stmt 0 view .LVU2453
 7124 2ba2 4C015424 		add	QWORD PTR 88[rsp], r10	# %sfp, distance
 7124      58
 7125 2ba7 4C01D0   		add	rax, r10	# ivtmp.435, distance
 7126              	.L579:
 698:sieve_extend.c **** }
 7127              		.loc 1 698 5 is_stmt 1 view .LVU2454
 7128              	.LVL307:
GAS LISTING /tmp/cc64mrzX.s 			page 201


 698:sieve_extend.c **** }
 7129              		.loc 1 698 5 is_stmt 0 view .LVU2455
 7130              	.LBE383:
 7131              	.LBE386:
 846:sieve_extend.c ****     copy_word += distance;
 7132              		.loc 1 846 5 is_stmt 1 view .LVU2456
 847:sieve_extend.c **** 
 7133              		.loc 1 847 5 view .LVU2457
 849:sieve_extend.c **** 
 7134              		.loc 1 849 6 view .LVU2458
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7135              		.loc 1 852 11 view .LVU2459
 7136              	# sieve_extend.c:852:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7137              		.loc 1 852 5 is_stmt 0 view .LVU2460
 7138 2baa 4C8B5424 		mov	r10, QWORD PTR 64[rsp]	# aligned_copy_word, %sfp
 7138      40
 7139 2baf 4939C2   		cmp	r10, rax	# aligned_copy_word, ivtmp.435
 7140 2bb2 0F821004 		jb	.L585	#,
 7140      0000
 7141 2bb8 4C8B5C24 		mov	r11, QWORD PTR 88[rsp]	# _183, %sfp
 7141      58
 7142 2bbd 488D34C5 		lea	rsi, 0[0+rax*8]	# _220,
 7142      00000000 
 7143 2bc5 488D7E20 		lea	rdi, 32[rsi]	# tmp691,
 7144 2bc9 4A8D14DD 		lea	rdx, 0[0+r11*8]	# _226,
 7144      00000000 
 7145 2bd1 4A8D0CDD 		lea	rcx, 40[0+r11*8]	# _218,
 7145      28000000 
 7146 2bd9 4839D7   		cmp	rdi, rdx	# tmp691, _226
 7147 2bdc 4D89DE   		mov	r14, r11	# _183, _183
 7148 2bdf 410F9EC1 		setle	r9b	#, tmp693
 7149 2be3 4839F1   		cmp	rcx, rsi	# _218, _220
 7150 2be6 410F9EC0 		setle	r8b	#, tmp695
 7151 2bea 4508C1   		or	r9b, r8b	# tmp693, tmp695
 7152 2bed 0F84E50A 		je	.L586	#,
 7152      0000
 7153 2bf3 4C89D1   		mov	rcx, r10	# tmp697, aligned_copy_word
 7154 2bf6 4829C1   		sub	rcx, rax	# tmp697, ivtmp.435
 7155 2bf9 4883F905 		cmp	rcx, 5	# tmp697,
 7156 2bfd 0F86D50A 		jbe	.L586	#,
 7156      0000
 7157 2c03 4801DA   		add	rdx, rbx	# vectp.373, bitarray
 7158 2c06 4983C201 		add	r10, 1	# ivtmp.435,
 7159 2c0a 48C1EA03 		shr	rdx, 3	# tmp702,
 7160 2c0e 4C89D7   		mov	rdi, r10	# niters.372, ivtmp.435
 7161 2c11 48F7DA   		neg	rdx	# tmp703
 7162 2c14 4829C7   		sub	rdi, rax	# niters.372, ivtmp.435
 7163 2c17 83E203   		and	edx, 3	# prolog_loop_niters.374,
 7164 2c1a 0F84A80A 		je	.L605	#,
 7164      0000
 7165              	.LVL308:
 853:sieve_extend.c ****     }
 7166              		.loc 1 853 9 is_stmt 1 view .LVU2461
 7167              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7168              		.loc 1 853 77 is_stmt 0 view .LVU2462
GAS LISTING /tmp/cc64mrzX.s 			page 202


 7169 2c20 4D8D4301 		lea	r8, 1[r11]	# tmp793,
 7170              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7171              		.loc 1 853 94 view .LVU2463
 7172 2c24 4E8B5CDB 		mov	r11, QWORD PTR 8[rbx+r11*8]	# *_573, *_573
 7172      08
 7173              	.LVL309:
 853:sieve_extend.c ****     }
 7174              		.loc 1 853 94 view .LVU2464
 7175 2c29 C44281F7 		shlx	r9, r11, r15	# tmp704,, shift_flipped
 7175      CB
 7176              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7177              		.loc 1 853 56 view .LVU2465
 7178 2c2e 4E8B1CF3 		mov	r11, QWORD PTR [rbx+r14*8]	# *_568, *_568
 7179              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7180              		.loc 1 853 77 view .LVU2466
 7181 2c32 4C89C1   		mov	rcx, r8	# source_word, tmp793
 7182              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7183              		.loc 1 853 56 view .LVU2467
 7184 2c35 4C895C24 		mov	QWORD PTR 56[rsp], r11	# %sfp, *_568
 7184      38
 7185 2c3a C44293F7 		shrx	r11, r11, r13	# tmp706,, shift
 7185      DB
 7186              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7187              		.loc 1 853 66 view .LVU2468
 7188 2c3f 4D09D9   		or	r9, r11	# tmp708, tmp706
 7189 2c42 4883FA01 		cmp	rdx, 1	# prolog_loop_niters.374,
 7190 2c46 4C890C33 		mov	QWORD PTR [rbx+rsi], r9	# *_577, tmp708
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7191              		.loc 1 852 43 is_stmt 1 view .LVU2469
 7192              	# sieve_extend.c:852:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7193              		.loc 1 852 52 is_stmt 0 view .LVU2470
 7194 2c4a 488D7001 		lea	rsi, 1[rax]	# copy_word,
 7195              	.LVL310:
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7196              		.loc 1 852 11 is_stmt 1 view .LVU2471
 7197 2c4e 7454     		je	.L587	#,
 853:sieve_extend.c ****     }
 7198              		.loc 1 853 9 view .LVU2472
 7199              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7200              		.loc 1 853 40 is_stmt 0 view .LVU2473
 7201 2c50 4E8D1CC5 		lea	r11, 0[0+r8*8]	# _586,
 7201      00000000 
 7202              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7203              		.loc 1 853 94 view .LVU2474
 7204 2c58 C42281F7 		shlx	r9, QWORD PTR 8[rbx+r11], r15	# tmp709, *_592, shift_flipped
 7204      4C1B08
 7205              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7206              		.loc 1 853 56 view .LVU2475
GAS LISTING /tmp/cc64mrzX.s 			page 203


 7207 2c5f 4E8B1C1B 		mov	r11, QWORD PTR [rbx+r11]	# *_587, *_587
 7208 2c63 C44293F7 		shrx	r11, r11, r13	# tmp711, *_587, shift
 7208      DB
 7209              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7210              		.loc 1 853 66 view .LVU2476
 7211 2c68 4D09D9   		or	r9, r11	# tmp713, tmp711
 7212 2c6b 4883FA03 		cmp	rdx, 3	# prolog_loop_niters.374,
 7213 2c6f 4C890CF3 		mov	QWORD PTR [rbx+rsi*8], r9	# *_596, tmp713
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7214              		.loc 1 852 43 is_stmt 1 view .LVU2477
 7215              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7216              		.loc 1 853 77 is_stmt 0 view .LVU2478
 7217 2c73 498D4E02 		lea	rcx, 2[r14]	# source_word,
 7218              	.LVL311:
 7219              	# sieve_extend.c:852:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7220              		.loc 1 852 52 view .LVU2479
 7221 2c77 488D7002 		lea	rsi, 2[rax]	# copy_word,
 7222              	.LVL312:
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7223              		.loc 1 852 11 is_stmt 1 view .LVU2480
 7224 2c7b 7527     		jne	.L587	#,
 853:sieve_extend.c ****     }
 7225              		.loc 1 853 9 view .LVU2481
 7226              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7227              		.loc 1 853 40 is_stmt 0 view .LVU2482
 7228 2c7d 4C8D1CCD 		lea	r11, 0[0+rcx*8]	# _261,
 7228      00000000 
 7229              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7230              		.loc 1 853 77 view .LVU2483
 7231 2c85 498D4E03 		lea	rcx, 3[r14]	# source_word,
 7232              	.LVL313:
 7233              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7234              		.loc 1 853 56 view .LVU2484
 7235 2c89 4E8B0C1B 		mov	r9, QWORD PTR [rbx+r11]	# *_262, *_262
 7236              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7237              		.loc 1 853 94 view .LVU2485
 7238 2c8d C42281F7 		shlx	r14, QWORD PTR 8[rbx+r11], r15	# tmp714, *_267, shift_flipped
 7238      741B08
 7239              	.LVL314:
 7240              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7241              		.loc 1 853 56 view .LVU2486
 7242 2c94 C44293F7 		shrx	r11, r9, r13	# tmp716, *_262, shift
 7242      D9
 7243              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7244              		.loc 1 853 66 view .LVU2487
 7245 2c99 4D09DE   		or	r14, r11	# tmp718, tmp716
 7246 2c9c 4C8934F3 		mov	QWORD PTR [rbx+rsi*8], r14	# *_271, tmp718
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
GAS LISTING /tmp/cc64mrzX.s 			page 204


 7247              		.loc 1 852 43 is_stmt 1 view .LVU2488
 7248              	# sieve_extend.c:852:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7249              		.loc 1 852 52 is_stmt 0 view .LVU2489
 7250 2ca0 488D7003 		lea	rsi, 3[rax]	# copy_word,
 7251              	.LVL315:
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7252              		.loc 1 852 11 is_stmt 1 view .LVU2490
 7253              	.L587:
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7254              		.loc 1 852 11 is_stmt 0 view .LVU2491
 7255 2ca4 4829D7   		sub	rdi, rdx	# niters.375, prolog_loop_niters.374
 7256 2ca7 C441796E 		vmovd	xmm10, r12d	# _12, _12
 7256      D4
 7257 2cac 4989FB   		mov	r11, rdi	# bnd.376, niters.375
 7258 2caf 4801D0   		add	rax, rdx	# tmp724, prolog_loop_niters.374
 7259 2cb2 49C1EB02 		shr	r11, 2	# bnd.376,
 7260 2cb6 4901D0   		add	r8, rdx	# tmp722, prolog_loop_niters.374
 7261 2cb9 49C1E305 		sal	r11, 5	# _733,
 7262 2cbd 4E8D04C3 		lea	r8, [rbx+r8*8]	# vectp.385,
 7263 2cc1 4C8B7424 		mov	r14, QWORD PTR 88[rsp]	# _183, %sfp
 7263      58
 7264 2cc6 4D8D63E0 		lea	r12, -32[r11]	# tmp818,
 7265 2cca C5F96E54 		vmovd	xmm2, DWORD PTR 72[rsp]	# _18, %sfp
 7265      2448
 7266 2cd0 49C1EC05 		shr	r12, 5	# tmp816,
 7267 2cd4 4983C401 		add	r12, 1	# tmp819,
 7268 2cd8 4901D6   		add	r14, rdx	# _183, prolog_loop_niters.374
 7269 2cdb 488D14C3 		lea	rdx, [rbx+rax*8]	# vectp.390,
 7270              	# sieve_extend.c:846:     source_word += distance;
 846:sieve_extend.c ****     copy_word += distance;
 7271              		.loc 1 846 17 view .LVU2492
 7272 2cdf 31C0     		xor	eax, eax	# ivtmp.451
 7273 2ce1 4183E407 		and	r12d, 7	# tmp820,
 7274 2ce5 4E8D0CF3 		lea	r9, [rbx+r14*8]	# vectp.381,
 7275 2ce9 0F842801 		je	.L589	#,
 7275      0000
 7276 2cef 4983FC01 		cmp	r12, 1	# tmp820,
 7277 2cf3 0F84F200 		je	.L737	#,
 7277      0000
 7278 2cf9 4983FC02 		cmp	r12, 2	# tmp820,
 7279 2cfd 0F84C600 		je	.L738	#,
 7279      0000
 7280 2d03 4983FC03 		cmp	r12, 3	# tmp820,
 7281 2d07 0F849900 		je	.L739	#,
 7281      0000
 7282 2d0d 4983FC04 		cmp	r12, 4	# tmp820,
 7283 2d11 7470     		je	.L740	#,
 7284 2d13 4983FC05 		cmp	r12, 5	# tmp820,
 7285 2d17 7448     		je	.L741	#,
 7286 2d19 4983FC06 		cmp	r12, 6	# tmp820,
 7287 2d1d 7420     		je	.L742	#,
 853:sieve_extend.c ****     }
 7288              		.loc 1 853 9 is_stmt 1 view .LVU2493
 7289              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7290              		.loc 1 853 56 is_stmt 0 view .LVU2494
GAS LISTING /tmp/cc64mrzX.s 			page 205


 7291 2d1f C4C17D6F 		vmovdqa	ymm3, YMMWORD PTR [r9]	# tmp1411, MEM[base: vectp.381_307, index: ivtmp.451_731, offset: 0
 7291      19
 7292 2d24 B8200000 		mov	eax, 32	# ivtmp.451,
 7292      00
 7293              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7294              		.loc 1 853 94 view .LVU2495
 7295 2d29 C4C17E6F 		vmovdqu	ymm4, YMMWORD PTR [r8]	# tmp1412, MEM[base: vectp.385_314, index: ivtmp.451_731, offset: 0
 7295      20
 7296              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7297              		.loc 1 853 56 view .LVU2496
 7298 2d2e C44165D3 		vpsrlq	ymm11, ymm3, xmm10	# vect__38.383, tmp1411, _12
 7298      DA
 7299              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7300              		.loc 1 853 94 view .LVU2497
 7301 2d33 C5DDF3F2 		vpsllq	ymm6, ymm4, xmm2	# vect__43.387, tmp1412, _18
 7302              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7303              		.loc 1 853 66 view .LVU2498
 7304 2d37 C525EBE6 		vpor	ymm12, ymm11, ymm6	# vect__46.388, vect__38.383, vect__43.387
 7305              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7306              		.loc 1 853 29 view .LVU2499
 7307 2d3b C57E7F22 		vmovdqu	YMMWORD PTR [rdx], ymm12	# MEM[base: vectp.390_323, index: ivtmp.451_731, offset: 0B], vec
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7308              		.loc 1 852 43 is_stmt 1 view .LVU2500
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7309              		.loc 1 852 11 view .LVU2501
 7310              	.L742:
 853:sieve_extend.c ****     }
 7311              		.loc 1 853 9 view .LVU2502
 7312              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7313              		.loc 1 853 56 is_stmt 0 view .LVU2503
 7314 2d3f C4417D6F 		vmovdqa	ymm13, YMMWORD PTR [r9+rax]	# tmp1413, MEM[base: vectp.381_307, index: ivtmp.451_731, offs
 7314      2C01
 7315              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7316              		.loc 1 853 94 view .LVU2504
 7317 2d45 C4417E6F 		vmovdqu	ymm15, YMMWORD PTR [r8+rax]	# tmp1414, MEM[base: vectp.385_314, index: ivtmp.451_731, offs
 7317      3C00
 7318              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7319              		.loc 1 853 56 view .LVU2505
 7320 2d4b C44115D3 		vpsrlq	ymm14, ymm13, xmm10	# vect__38.383, tmp1413, _12
 7320      F2
 7321              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7322              		.loc 1 853 94 view .LVU2506
 7323 2d50 C585F3CA 		vpsllq	ymm1, ymm15, xmm2	# vect__43.387, tmp1414, _18
 7324              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7325              		.loc 1 853 66 view .LVU2507
 7326 2d54 C50DEBC1 		vpor	ymm8, ymm14, ymm1	# vect__46.388, vect__38.383, vect__43.387
 7327              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
GAS LISTING /tmp/cc64mrzX.s 			page 206


 853:sieve_extend.c ****     }
 7328              		.loc 1 853 29 view .LVU2508
 7329 2d58 C57E7F04 		vmovdqu	YMMWORD PTR [rdx+rax], ymm8	# MEM[base: vectp.390_323, index: ivtmp.451_731, offset: 0B], 
 7329      02
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7330              		.loc 1 852 43 is_stmt 1 view .LVU2509
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7331              		.loc 1 852 11 view .LVU2510
 7332 2d5d 4883C020 		add	rax, 32	# ivtmp.451,
 7333              	.L741:
 853:sieve_extend.c ****     }
 7334              		.loc 1 853 9 view .LVU2511
 7335              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7336              		.loc 1 853 56 is_stmt 0 view .LVU2512
 7337 2d61 C4C17D6F 		vmovdqa	ymm0, YMMWORD PTR [r9+rax]	# tmp1415, MEM[base: vectp.381_307, index: ivtmp.451_731, offse
 7337      0401
 7338              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7339              		.loc 1 853 94 view .LVU2513
 7340 2d67 C4417E6F 		vmovdqu	ymm9, YMMWORD PTR [r8+rax]	# tmp1416, MEM[base: vectp.385_314, index: ivtmp.451_731, offse
 7340      0C00
 7341              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7342              		.loc 1 853 56 view .LVU2514
 7343 2d6d C4C17DD3 		vpsrlq	ymm5, ymm0, xmm10	# vect__38.383, tmp1415, _12
 7343      EA
 7344              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7345              		.loc 1 853 94 view .LVU2515
 7346 2d72 C5B5F3FA 		vpsllq	ymm7, ymm9, xmm2	# vect__43.387, tmp1416, _18
 7347              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7348              		.loc 1 853 66 view .LVU2516
 7349 2d76 C5D5EBDF 		vpor	ymm3, ymm5, ymm7	# vect__46.388, vect__38.383, vect__43.387
 7350              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7351              		.loc 1 853 29 view .LVU2517
 7352 2d7a C5FE7F1C 		vmovdqu	YMMWORD PTR [rdx+rax], ymm3	# MEM[base: vectp.390_323, index: ivtmp.451_731, offset: 0B], 
 7352      02
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7353              		.loc 1 852 43 is_stmt 1 view .LVU2518
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7354              		.loc 1 852 11 view .LVU2519
 7355 2d7f 4883C020 		add	rax, 32	# ivtmp.451,
 7356              	.L740:
 853:sieve_extend.c ****     }
 7357              		.loc 1 853 9 view .LVU2520
 7358              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7359              		.loc 1 853 56 is_stmt 0 view .LVU2521
 7360 2d83 C4417D6F 		vmovdqa	ymm11, YMMWORD PTR [r9+rax]	# tmp1417, MEM[base: vectp.381_307, index: ivtmp.451_731, offs
 7360      1C01
 7361              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7362              		.loc 1 853 94 view .LVU2522
 7363 2d89 C4C17E6F 		vmovdqu	ymm6, YMMWORD PTR [r8+rax]	# tmp1418, MEM[base: vectp.385_314, index: ivtmp.451_731, offse
GAS LISTING /tmp/cc64mrzX.s 			page 207


 7363      3400
 7364              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7365              		.loc 1 853 56 view .LVU2523
 7366 2d8f C4C125D3 		vpsrlq	ymm4, ymm11, xmm10	# vect__38.383, tmp1417, _12
 7366      E2
 7367              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7368              		.loc 1 853 94 view .LVU2524
 7369 2d94 C54DF3E2 		vpsllq	ymm12, ymm6, xmm2	# vect__43.387, tmp1418, _18
 7370              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7371              		.loc 1 853 66 view .LVU2525
 7372 2d98 C4415DEB 		vpor	ymm13, ymm4, ymm12	# vect__46.388, vect__38.383, vect__43.387
 7372      EC
 7373              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7374              		.loc 1 853 29 view .LVU2526
 7375 2d9d C57E7F2C 		vmovdqu	YMMWORD PTR [rdx+rax], ymm13	# MEM[base: vectp.390_323, index: ivtmp.451_731, offset: 0B],
 7375      02
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7376              		.loc 1 852 43 is_stmt 1 view .LVU2527
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7377              		.loc 1 852 11 view .LVU2528
 7378 2da2 4883C020 		add	rax, 32	# ivtmp.451,
 7379              	.L739:
 853:sieve_extend.c ****     }
 7380              		.loc 1 853 9 view .LVU2529
 7381              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7382              		.loc 1 853 56 is_stmt 0 view .LVU2530
 7383 2da6 C4417D6F 		vmovdqa	ymm14, YMMWORD PTR [r9+rax]	# tmp1419, MEM[base: vectp.381_307, index: ivtmp.451_731, offs
 7383      3401
 7384              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7385              		.loc 1 853 94 view .LVU2531
 7386 2dac C4C17E6F 		vmovdqu	ymm1, YMMWORD PTR [r8+rax]	# tmp1420, MEM[base: vectp.385_314, index: ivtmp.451_731, offse
 7386      0C00
 7387              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7388              		.loc 1 853 56 view .LVU2532
 7389 2db2 C4410DD3 		vpsrlq	ymm15, ymm14, xmm10	# vect__38.383, tmp1419, _12
 7389      FA
 7390              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7391              		.loc 1 853 94 view .LVU2533
 7392 2db7 C575F3C2 		vpsllq	ymm8, ymm1, xmm2	# vect__43.387, tmp1420, _18
 7393              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7394              		.loc 1 853 66 view .LVU2534
 7395 2dbb C4C105EB 		vpor	ymm0, ymm15, ymm8	# vect__46.388, vect__38.383, vect__43.387
 7395      C0
 7396              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7397              		.loc 1 853 29 view .LVU2535
 7398 2dc0 C5FE7F04 		vmovdqu	YMMWORD PTR [rdx+rax], ymm0	# MEM[base: vectp.390_323, index: ivtmp.451_731, offset: 0B], 
 7398      02
GAS LISTING /tmp/cc64mrzX.s 			page 208


 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7399              		.loc 1 852 43 is_stmt 1 view .LVU2536
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7400              		.loc 1 852 11 view .LVU2537
 7401 2dc5 4883C020 		add	rax, 32	# ivtmp.451,
 7402              	.L738:
 853:sieve_extend.c ****     }
 7403              		.loc 1 853 9 view .LVU2538
 7404              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7405              		.loc 1 853 56 is_stmt 0 view .LVU2539
 7406 2dc9 C4C17D6F 		vmovdqa	ymm5, YMMWORD PTR [r9+rax]	# tmp1421, MEM[base: vectp.381_307, index: ivtmp.451_731, offse
 7406      2C01
 7407              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7408              		.loc 1 853 94 view .LVU2540
 7409 2dcf C4C17E6F 		vmovdqu	ymm7, YMMWORD PTR [r8+rax]	# tmp1422, MEM[base: vectp.385_314, index: ivtmp.451_731, offse
 7409      3C00
 7410              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7411              		.loc 1 853 56 view .LVU2541
 7412 2dd5 C44155D3 		vpsrlq	ymm9, ymm5, xmm10	# vect__38.383, tmp1421, _12
 7412      CA
 7413              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7414              		.loc 1 853 94 view .LVU2542
 7415 2dda C5C5F3DA 		vpsllq	ymm3, ymm7, xmm2	# vect__43.387, tmp1422, _18
 7416              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7417              		.loc 1 853 66 view .LVU2543
 7418 2dde C535EBDB 		vpor	ymm11, ymm9, ymm3	# vect__46.388, vect__38.383, vect__43.387
 7419              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7420              		.loc 1 853 29 view .LVU2544
 7421 2de2 C57E7F1C 		vmovdqu	YMMWORD PTR [rdx+rax], ymm11	# MEM[base: vectp.390_323, index: ivtmp.451_731, offset: 0B],
 7421      02
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7422              		.loc 1 852 43 is_stmt 1 view .LVU2545
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7423              		.loc 1 852 11 view .LVU2546
 7424 2de7 4883C020 		add	rax, 32	# ivtmp.451,
 7425              	.L737:
 853:sieve_extend.c ****     }
 7426              		.loc 1 853 9 view .LVU2547
 7427              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7428              		.loc 1 853 56 is_stmt 0 view .LVU2548
 7429 2deb C4C17D6F 		vmovdqa	ymm4, YMMWORD PTR [r9+rax]	# tmp1423, MEM[base: vectp.381_307, index: ivtmp.451_731, offse
 7429      2401
 7430              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7431              		.loc 1 853 94 view .LVU2549
 7432 2df1 C4417E6F 		vmovdqu	ymm12, YMMWORD PTR [r8+rax]	# tmp1424, MEM[base: vectp.385_314, index: ivtmp.451_731, offs
 7432      2400
 7433              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7434              		.loc 1 853 56 view .LVU2550
GAS LISTING /tmp/cc64mrzX.s 			page 209


 7435 2df7 C4C15DD3 		vpsrlq	ymm6, ymm4, xmm10	# vect__38.383, tmp1423, _12
 7435      F2
 7436              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7437              		.loc 1 853 94 view .LVU2551
 7438 2dfc C51DF3EA 		vpsllq	ymm13, ymm12, xmm2	# vect__43.387, tmp1424, _18
 7439              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7440              		.loc 1 853 66 view .LVU2552
 7441 2e00 C4414DEB 		vpor	ymm14, ymm6, ymm13	# vect__46.388, vect__38.383, vect__43.387
 7441      F5
 7442              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7443              		.loc 1 853 29 view .LVU2553
 7444 2e05 C57E7F34 		vmovdqu	YMMWORD PTR [rdx+rax], ymm14	# MEM[base: vectp.390_323, index: ivtmp.451_731, offset: 0B],
 7444      02
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7445              		.loc 1 852 43 is_stmt 1 view .LVU2554
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7446              		.loc 1 852 11 view .LVU2555
 7447 2e0a 4883C020 		add	rax, 32	# ivtmp.451,
 7448 2e0e 4C39D8   		cmp	rax, r11	# ivtmp.451, _733
 7449 2e11 0F843B01 		je	.L818	#,
 7449      0000
 7450              	.L589:
 853:sieve_extend.c ****     }
 7451              		.loc 1 853 9 discriminator 2 view .LVU2556
 7452              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7453              		.loc 1 853 56 is_stmt 0 discriminator 2 view .LVU2557
 7454 2e17 C4417D6F 		vmovdqa	ymm15, YMMWORD PTR [r9+rax]	# tmp1348, MEM[base: vectp.381_307, index: ivtmp.451_731, offs
 7454      3C01
 7455              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7456              		.loc 1 853 94 discriminator 2 view .LVU2558
 7457 2e1d C4417E6F 		vmovdqu	ymm8, YMMWORD PTR [r8+rax]	# tmp1349, MEM[base: vectp.385_314, index: ivtmp.451_731, offse
 7457      0400
 7458              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7459              		.loc 1 853 56 discriminator 2 view .LVU2559
 7460 2e23 C4C105D3 		vpsrlq	ymm1, ymm15, xmm10	# vect__38.383, tmp1348, _12
 7460      CA
 7461              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7462              		.loc 1 853 94 discriminator 2 view .LVU2560
 7463 2e28 C5BDF3C2 		vpsllq	ymm0, ymm8, xmm2	# vect__43.387, tmp1349, _18
 7464              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7465              		.loc 1 853 66 discriminator 2 view .LVU2561
 7466 2e2c C5F5EBE8 		vpor	ymm5, ymm1, ymm0	# vect__46.388, vect__38.383, vect__43.387
 7467              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7468              		.loc 1 853 29 discriminator 2 view .LVU2562
 7469 2e30 C5FE7F2C 		vmovdqu	YMMWORD PTR [rdx+rax], ymm5	# MEM[base: vectp.390_323, index: ivtmp.451_731, offset: 0B], 
 7469      02
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7470              		.loc 1 852 43 is_stmt 1 discriminator 2 view .LVU2563
GAS LISTING /tmp/cc64mrzX.s 			page 210


 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7471              		.loc 1 852 11 discriminator 2 view .LVU2564
 853:sieve_extend.c ****     }
 7472              		.loc 1 853 9 discriminator 2 view .LVU2565
 7473              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7474              		.loc 1 853 56 is_stmt 0 discriminator 2 view .LVU2566
 7475 2e35 C4417D6F 		vmovdqa	ymm9, YMMWORD PTR 32[r9+rax]	# tmp1350, MEM[base: vectp.381_307, index: ivtmp.451_731, off
 7475      4C0120
 7476              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7477              		.loc 1 853 94 discriminator 2 view .LVU2567
 7478 2e3c C4C17E6F 		vmovdqu	ymm7, YMMWORD PTR 32[r8+rax]	# tmp1351, MEM[base: vectp.385_314, index: ivtmp.451_731, off
 7478      7C0020
 7479              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7480              		.loc 1 853 56 discriminator 2 view .LVU2568
 7481 2e43 C44135D3 		vpsrlq	ymm11, ymm9, xmm10	# vect__38.383, tmp1350, _12
 7481      DA
 7482              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7483              		.loc 1 853 94 discriminator 2 view .LVU2569
 7484 2e48 C5C5F3DA 		vpsllq	ymm3, ymm7, xmm2	# vect__43.387, tmp1351, _18
 7485              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7486              		.loc 1 853 66 discriminator 2 view .LVU2570
 7487 2e4c C5A5EBE3 		vpor	ymm4, ymm11, ymm3	# vect__46.388, vect__38.383, vect__43.387
 7488              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7489              		.loc 1 853 29 discriminator 2 view .LVU2571
 7490 2e50 C5FE7F64 		vmovdqu	YMMWORD PTR 32[rdx+rax], ymm4	# MEM[base: vectp.390_323, index: ivtmp.451_731, offset: 0B]
 7490      0220
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7491              		.loc 1 852 43 is_stmt 1 discriminator 2 view .LVU2572
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7492              		.loc 1 852 11 discriminator 2 view .LVU2573
 853:sieve_extend.c ****     }
 7493              		.loc 1 853 9 discriminator 2 view .LVU2574
 7494              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7495              		.loc 1 853 56 is_stmt 0 discriminator 2 view .LVU2575
 7496 2e56 C4C17D6F 		vmovdqa	ymm6, YMMWORD PTR 64[r9+rax]	# tmp1352, MEM[base: vectp.381_307, index: ivtmp.451_731, off
 7496      740140
 7497              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7498              		.loc 1 853 94 discriminator 2 view .LVU2576
 7499 2e5d C4417E6F 		vmovdqu	ymm13, YMMWORD PTR 64[r8+rax]	# tmp1353, MEM[base: vectp.385_314, index: ivtmp.451_731, of
 7499      6C0040
 7500              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7501              		.loc 1 853 56 discriminator 2 view .LVU2577
 7502 2e64 C4414DD3 		vpsrlq	ymm12, ymm6, xmm10	# vect__38.383, tmp1352, _12
 7502      E2
 7503              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7504              		.loc 1 853 94 discriminator 2 view .LVU2578
 7505 2e69 C515F3F2 		vpsllq	ymm14, ymm13, xmm2	# vect__43.387, tmp1353, _18
GAS LISTING /tmp/cc64mrzX.s 			page 211


 7506              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7507              		.loc 1 853 66 discriminator 2 view .LVU2579
 7508 2e6d C4411DEB 		vpor	ymm15, ymm12, ymm14	# vect__46.388, vect__38.383, vect__43.387
 7508      FE
 7509              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7510              		.loc 1 853 29 discriminator 2 view .LVU2580
 7511 2e72 C57E7F7C 		vmovdqu	YMMWORD PTR 64[rdx+rax], ymm15	# MEM[base: vectp.390_323, index: ivtmp.451_731, offset: 0B
 7511      0240
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7512              		.loc 1 852 43 is_stmt 1 discriminator 2 view .LVU2581
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7513              		.loc 1 852 11 discriminator 2 view .LVU2582
 853:sieve_extend.c ****     }
 7514              		.loc 1 853 9 discriminator 2 view .LVU2583
 7515              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7516              		.loc 1 853 56 is_stmt 0 discriminator 2 view .LVU2584
 7517 2e78 C4C17D6F 		vmovdqa	ymm1, YMMWORD PTR 96[r9+rax]	# tmp1354, MEM[base: vectp.381_307, index: ivtmp.451_731, off
 7517      4C0160
 7518              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7519              		.loc 1 853 94 discriminator 2 view .LVU2585
 7520 2e7f C4C17E6F 		vmovdqu	ymm0, YMMWORD PTR 96[r8+rax]	# tmp1355, MEM[base: vectp.385_314, index: ivtmp.451_731, off
 7520      440060
 7521              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7522              		.loc 1 853 56 discriminator 2 view .LVU2586
 7523 2e86 C44175D3 		vpsrlq	ymm8, ymm1, xmm10	# vect__38.383, tmp1354, _12
 7523      C2
 7524              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7525              		.loc 1 853 94 discriminator 2 view .LVU2587
 7526 2e8b C5FDF3EA 		vpsllq	ymm5, ymm0, xmm2	# vect__43.387, tmp1355, _18
 7527              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7528              		.loc 1 853 66 discriminator 2 view .LVU2588
 7529 2e8f C53DEBCD 		vpor	ymm9, ymm8, ymm5	# vect__46.388, vect__38.383, vect__43.387
 7530              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7531              		.loc 1 853 29 discriminator 2 view .LVU2589
 7532 2e93 C57E7F4C 		vmovdqu	YMMWORD PTR 96[rdx+rax], ymm9	# MEM[base: vectp.390_323, index: ivtmp.451_731, offset: 0B]
 7532      0260
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7533              		.loc 1 852 43 is_stmt 1 discriminator 2 view .LVU2590
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7534              		.loc 1 852 11 discriminator 2 view .LVU2591
 853:sieve_extend.c ****     }
 7535              		.loc 1 853 9 discriminator 2 view .LVU2592
 7536              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7537              		.loc 1 853 56 is_stmt 0 discriminator 2 view .LVU2593
 7538 2e99 C4417D6F 		vmovdqa	ymm11, YMMWORD PTR 128[r9+rax]	# tmp1356, MEM[base: vectp.381_307, index: ivtmp.451_731, o
 7538      9C018000 
 7538      0000
 7539              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
GAS LISTING /tmp/cc64mrzX.s 			page 212


 853:sieve_extend.c ****     }
 7540              		.loc 1 853 94 discriminator 2 view .LVU2594
 7541 2ea3 C4C17E6F 		vmovdqu	ymm7, YMMWORD PTR 128[r8+rax]	# tmp1357, MEM[base: vectp.385_314, index: ivtmp.451_731, of
 7541      BC008000 
 7541      0000
 7542              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7543              		.loc 1 853 56 discriminator 2 view .LVU2595
 7544 2ead C4C125D3 		vpsrlq	ymm4, ymm11, xmm10	# vect__38.383, tmp1356, _12
 7544      E2
 7545              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7546              		.loc 1 853 94 discriminator 2 view .LVU2596
 7547 2eb2 C5C5F3DA 		vpsllq	ymm3, ymm7, xmm2	# vect__43.387, tmp1357, _18
 7548              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7549              		.loc 1 853 66 discriminator 2 view .LVU2597
 7550 2eb6 C5DDEBF3 		vpor	ymm6, ymm4, ymm3	# vect__46.388, vect__38.383, vect__43.387
 7551              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7552              		.loc 1 853 29 discriminator 2 view .LVU2598
 7553 2eba C5FE7FB4 		vmovdqu	YMMWORD PTR 128[rdx+rax], ymm6	# MEM[base: vectp.390_323, index: ivtmp.451_731, offset: 0B
 7553      02800000 
 7553      00
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7554              		.loc 1 852 43 is_stmt 1 discriminator 2 view .LVU2599
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7555              		.loc 1 852 11 discriminator 2 view .LVU2600
 853:sieve_extend.c ****     }
 7556              		.loc 1 853 9 discriminator 2 view .LVU2601
 7557              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7558              		.loc 1 853 56 is_stmt 0 discriminator 2 view .LVU2602
 7559 2ec3 C4417D6F 		vmovdqa	ymm12, YMMWORD PTR 160[r9+rax]	# tmp1358, MEM[base: vectp.381_307, index: ivtmp.451_731, o
 7559      A401A000 
 7559      0000
 7560              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7561              		.loc 1 853 94 discriminator 2 view .LVU2603
 7562 2ecd C4417E6F 		vmovdqu	ymm14, YMMWORD PTR 160[r8+rax]	# tmp1359, MEM[base: vectp.385_314, index: ivtmp.451_731, o
 7562      B400A000 
 7562      0000
 7563              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7564              		.loc 1 853 56 discriminator 2 view .LVU2604
 7565 2ed7 C4411DD3 		vpsrlq	ymm13, ymm12, xmm10	# vect__38.383, tmp1358, _12
 7565      EA
 7566              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7567              		.loc 1 853 94 discriminator 2 view .LVU2605
 7568 2edc C50DF3FA 		vpsllq	ymm15, ymm14, xmm2	# vect__43.387, tmp1359, _18
 7569              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7570              		.loc 1 853 66 discriminator 2 view .LVU2606
 7571 2ee0 C4C115EB 		vpor	ymm1, ymm13, ymm15	# vect__46.388, vect__38.383, vect__43.387
 7571      CF
 7572              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
GAS LISTING /tmp/cc64mrzX.s 			page 213


 853:sieve_extend.c ****     }
 7573              		.loc 1 853 29 discriminator 2 view .LVU2607
 7574 2ee5 C5FE7F8C 		vmovdqu	YMMWORD PTR 160[rdx+rax], ymm1	# MEM[base: vectp.390_323, index: ivtmp.451_731, offset: 0B
 7574      02A00000 
 7574      00
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7575              		.loc 1 852 43 is_stmt 1 discriminator 2 view .LVU2608
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7576              		.loc 1 852 11 discriminator 2 view .LVU2609
 853:sieve_extend.c ****     }
 7577              		.loc 1 853 9 discriminator 2 view .LVU2610
 7578              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7579              		.loc 1 853 56 is_stmt 0 discriminator 2 view .LVU2611
 7580 2eee C4417D6F 		vmovdqa	ymm8, YMMWORD PTR 192[r9+rax]	# tmp1360, MEM[base: vectp.381_307, index: ivtmp.451_731, of
 7580      8401C000 
 7580      0000
 7581              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7582              		.loc 1 853 94 discriminator 2 view .LVU2612
 7583 2ef8 C4C17E6F 		vmovdqu	ymm5, YMMWORD PTR 192[r8+rax]	# tmp1361, MEM[base: vectp.385_314, index: ivtmp.451_731, of
 7583      AC00C000 
 7583      0000
 7584              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7585              		.loc 1 853 56 discriminator 2 view .LVU2613
 7586 2f02 C4C13DD3 		vpsrlq	ymm0, ymm8, xmm10	# vect__38.383, tmp1360, _12
 7586      C2
 7587              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7588              		.loc 1 853 94 discriminator 2 view .LVU2614
 7589 2f07 C555F3CA 		vpsllq	ymm9, ymm5, xmm2	# vect__43.387, tmp1361, _18
 7590              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7591              		.loc 1 853 66 discriminator 2 view .LVU2615
 7592 2f0b C4417DEB 		vpor	ymm11, ymm0, ymm9	# vect__46.388, vect__38.383, vect__43.387
 7592      D9
 7593              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7594              		.loc 1 853 29 discriminator 2 view .LVU2616
 7595 2f10 C57E7F9C 		vmovdqu	YMMWORD PTR 192[rdx+rax], ymm11	# MEM[base: vectp.390_323, index: ivtmp.451_731, offset: 0
 7595      02C00000 
 7595      00
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7596              		.loc 1 852 43 is_stmt 1 discriminator 2 view .LVU2617
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7597              		.loc 1 852 11 discriminator 2 view .LVU2618
 853:sieve_extend.c ****     }
 7598              		.loc 1 853 9 discriminator 2 view .LVU2619
 7599              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7600              		.loc 1 853 56 is_stmt 0 discriminator 2 view .LVU2620
 7601 2f19 C4C17D6F 		vmovdqa	ymm4, YMMWORD PTR 224[r9+rax]	# tmp1362, MEM[base: vectp.381_307, index: ivtmp.451_731, of
 7601      A401E000 
 7601      0000
 7602              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
GAS LISTING /tmp/cc64mrzX.s 			page 214


 7603              		.loc 1 853 94 discriminator 2 view .LVU2621
 7604 2f23 C4C17E6F 		vmovdqu	ymm7, YMMWORD PTR 224[r8+rax]	# tmp1363, MEM[base: vectp.385_314, index: ivtmp.451_731, of
 7604      BC00E000 
 7604      0000
 7605              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7606              		.loc 1 853 56 discriminator 2 view .LVU2622
 7607 2f2d C4C15DD3 		vpsrlq	ymm6, ymm4, xmm10	# vect__38.383, tmp1362, _12
 7607      F2
 7608              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7609              		.loc 1 853 94 discriminator 2 view .LVU2623
 7610 2f32 C5C5F3DA 		vpsllq	ymm3, ymm7, xmm2	# vect__43.387, tmp1363, _18
 7611              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7612              		.loc 1 853 66 discriminator 2 view .LVU2624
 7613 2f36 C54DEBE3 		vpor	ymm12, ymm6, ymm3	# vect__46.388, vect__38.383, vect__43.387
 7614              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7615              		.loc 1 853 29 discriminator 2 view .LVU2625
 7616 2f3a C57E7FA4 		vmovdqu	YMMWORD PTR 224[rdx+rax], ymm12	# MEM[base: vectp.390_323, index: ivtmp.451_731, offset: 0
 7616      02E00000 
 7616      00
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7617              		.loc 1 852 43 is_stmt 1 discriminator 2 view .LVU2626
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7618              		.loc 1 852 11 discriminator 2 view .LVU2627
 7619 2f43 48050001 		add	rax, 256	# ivtmp.451,
 7619      0000
 7620 2f49 4C39D8   		cmp	rax, r11	# ivtmp.451, _733
 7621 2f4c 0F85C5FE 		jne	.L589	#,
 7621      FFFF
 7622              	.L818:
 7623 2f52 4989FE   		mov	r14, rdi	# niters_vector_mult_vf.377, niters.375
 7624 2f55 4983E6FC 		and	r14, -4	# niters_vector_mult_vf.377,
 7625 2f59 4C01F1   		add	rcx, r14	# tmp.378, niters_vector_mult_vf.377
 7626 2f5c 4C01F6   		add	rsi, r14	# tmp.379, niters_vector_mult_vf.377
 7627 2f5f 4C39F7   		cmp	rdi, r14	# niters.375, niters_vector_mult_vf.377
 7628 2f62 7461     		je	.L592	#,
 7629              	.LVL316:
 853:sieve_extend.c ****     }
 7630              		.loc 1 853 9 view .LVU2628
 7631              	# sieve_extend.c:852:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7632              		.loc 1 852 5 is_stmt 0 view .LVU2629
 7633 2f64 4C8B5C24 		mov	r11, QWORD PTR 64[rsp]	# aligned_copy_word, %sfp
 7633      40
 7634              	# sieve_extend.c:852:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7635              		.loc 1 852 52 view .LVU2630
 7636 2f69 488D5601 		lea	rdx, 1[rsi]	# copy_word,
 7637              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7638              		.loc 1 853 94 view .LVU2631
 7639 2f6d C46281F7 		shlx	r9, QWORD PTR 8[rbx+rcx*8], r15	# tmp734, *_133, shift_flipped
 7639      4CCB08
 7640              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
GAS LISTING /tmp/cc64mrzX.s 			page 215


 853:sieve_extend.c ****     }
 7641              		.loc 1 853 56 view .LVU2632
 7642 2f74 C46293F7 		shrx	r8, QWORD PTR [rbx+rcx*8], r13	# tmp736, *_82, shift
 7642      04CB
 7643              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7644              		.loc 1 853 66 view .LVU2633
 7645 2f7a 4D09C1   		or	r9, r8	# tmp738, tmp736
 7646              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7647              		.loc 1 853 77 view .LVU2634
 7648 2f7d 488D7901 		lea	rdi, 1[rcx]	# _301,
 7649              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7650              		.loc 1 853 66 view .LVU2635
 7651 2f81 4C890CF3 		mov	QWORD PTR [rbx+rsi*8], r9	# *_55, tmp738
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7652              		.loc 1 852 43 is_stmt 1 view .LVU2636
 7653              	.LVL317:
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7654              		.loc 1 852 11 view .LVU2637
 7655              	# sieve_extend.c:852:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7656              		.loc 1 852 5 is_stmt 0 view .LVU2638
 7657 2f85 4939D3   		cmp	r11, rdx	# aligned_copy_word, copy_word
 7658 2f88 723B     		jb	.L592	#,
 853:sieve_extend.c ****     }
 7659              		.loc 1 853 9 is_stmt 1 view .LVU2639
 7660              	# sieve_extend.c:852:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7661              		.loc 1 852 52 is_stmt 0 view .LVU2640
 7662 2f8a 4883C602 		add	rsi, 2	# copy_word,
 7663              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7664              		.loc 1 853 94 view .LVU2641
 7665 2f8e C46281F7 		shlx	r12, QWORD PTR 8[rbx+rdi*8], r15	# tmp739, *_555, shift_flipped
 7665      64FB08
 7666              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7667              		.loc 1 853 56 view .LVU2642
 7668 2f95 488B04FB 		mov	rax, QWORD PTR [rbx+rdi*8]	# *_122, *_122
 7669              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7670              		.loc 1 853 77 view .LVU2643
 7671 2f99 4883C102 		add	rcx, 2	# _78,
 7672              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7673              		.loc 1 853 56 view .LVU2644
 7674 2f9d C46293F7 		shrx	r14, rax, r13	# tmp741, *_122, shift
 7674      F0
 7675              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7676              		.loc 1 853 66 view .LVU2645
 7677 2fa2 4D09F4   		or	r12, r14	# tmp743, tmp741
 7678 2fa5 4C8924D3 		mov	QWORD PTR [rbx+rdx*8], r12	# *_559, tmp743
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7679              		.loc 1 852 43 is_stmt 1 view .LVU2646
GAS LISTING /tmp/cc64mrzX.s 			page 216


 7680              	.LVL318:
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7681              		.loc 1 852 11 view .LVU2647
 7682              	# sieve_extend.c:852:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7683              		.loc 1 852 5 is_stmt 0 view .LVU2648
 7684 2fa9 4939F3   		cmp	r11, rsi	# aligned_copy_word, copy_word
 7685 2fac 7217     		jb	.L592	#,
 853:sieve_extend.c ****     }
 7686              		.loc 1 853 9 is_stmt 1 view .LVU2649
 7687              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7688              		.loc 1 853 94 is_stmt 0 view .LVU2650
 7689 2fae C46281F7 		shlx	r15, QWORD PTR 8[rbx+rcx*8], r15	# tmp744, *_293, shift_flipped
 7689      7CCB08
 7690              	.LVL319:
 7691              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7692              		.loc 1 853 56 view .LVU2651
 7693 2fb5 488B0CCB 		mov	rcx, QWORD PTR [rbx+rcx*8]	# *_288, *_288
 7694              	.LVL320:
 853:sieve_extend.c ****     }
 7695              		.loc 1 853 56 view .LVU2652
 7696 2fb9 C46293F7 		shrx	r13, rcx, r13	# tmp746, *_288, shift
 7696      E9
 7697              	.LVL321:
 7698              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 7699              		.loc 1 853 66 view .LVU2653
 7700 2fbe 4D09EF   		or	r15, r13	# tmp748, tmp746
 7701 2fc1 4C893CF3 		mov	QWORD PTR [rbx+rsi*8], r15	# *_297, tmp748
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7702              		.loc 1 852 43 is_stmt 1 view .LVU2654
 7703              	.LVL322:
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7704              		.loc 1 852 11 view .LVU2655
 7705              	.L592:
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7706              		.loc 1 852 11 is_stmt 0 view .LVU2656
 7707 2fc5 4C89D0   		mov	rax, r10	# ivtmp.435, ivtmp.435
 7708              	.L585:
 856:sieve_extend.c **** 
 7709              		.loc 1 856 5 is_stmt 1 view .LVU2657
 7710              	# sieve_extend.c:856:     if (copy_word >= destination_stop_word) return;
 856:sieve_extend.c **** 
 7711              		.loc 1 856 8 is_stmt 0 view .LVU2658
 7712 2fc8 4C8B4424 		mov	r8, QWORD PTR 80[rsp]	# destination_stop_word, %sfp
 7712      50
 7713 2fcd 4939C0   		cmp	r8, rax	# destination_stop_word, ivtmp.435
 7714 2fd0 0F86B304 		jbe	.L840	#,
 7714      0000
 858:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 7715              		.loc 1 858 5 is_stmt 1 view .LVU2659
 7716              	# sieve_extend.c:858:     source_word = copy_word - size; // recalibrate
 858:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 7717              		.loc 1 858 17 is_stmt 0 view .LVU2660
 7718 2fd6 488B7424 		mov	rsi, QWORD PTR 24[rsp]	# size, %sfp
GAS LISTING /tmp/cc64mrzX.s 			page 217


 7718      18
 7719 2fdb 4989C5   		mov	r13, rax	# source_word, ivtmp.435
 7720              	# sieve_extend.c:862:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 862:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7721              		.loc 1 862 21 view .LVU2661
 7722 2fde 488D0C06 		lea	rcx, [rsi+rax]	# ivtmp.435,
 7723              	# sieve_extend.c:858:     source_word = copy_word - size; // recalibrate
 858:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 7724              		.loc 1 858 17 view .LVU2662
 7725 2fe2 4929F5   		sub	r13, rsi	# source_word, size
 7726              	.LVL323:
 859:sieve_extend.c **** 
 7727              		.loc 1 859 5 is_stmt 1 view .LVU2663
 7728              	# sieve_extend.c:862:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 862:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7729              		.loc 1 862 5 is_stmt 0 view .LVU2664
 7730 2fe5 4939C8   		cmp	r8, rcx	# destination_stop_word, ivtmp.435
 7731              	# sieve_extend.c:859:     const size_t memsize = (size_t)size*sizeof(bitword_t);
 859:sieve_extend.c **** 
 7732              		.loc 1 859 18 view .LVU2665
 7733 2fe8 4C8D34F5 		lea	r14, 0[0+rsi*8]	# memsize,
 7733      00000000 
 7734              	.LVL324:
 862:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7735              		.loc 1 862 5 is_stmt 1 view .LVU2666
 862:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7736              		.loc 1 862 11 view .LVU2667
 7737              	# sieve_extend.c:862:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 862:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7738              		.loc 1 862 5 is_stmt 0 view .LVU2668
 7739 2ff0 0F825F01 		jb	.L594	#,
 7739      0000
 7740 2ff6 4C8D24C3 		lea	r12, [rbx+rax*8]	# tmp761,
 7741 2ffa 488D04CD 		lea	rax, 0[0+rcx*8]	# tmp762,
 7741      00000000 
 7742              	# sieve_extend.c:863:         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 863:sieve_extend.c **** 
 7743              		.loc 1 863 38 view .LVU2669
 7744 3002 4E8D3CEB 		lea	r15, [rbx+r13*8]	# _48,
 7745 3006 4929C4   		sub	r12, rax	# _711, tmp762
 7746 3009 4C896C24 		mov	QWORD PTR 72[rsp], r13	# %sfp, source_word
 7746      48
 7747 300e 4989F5   		mov	r13, rsi	# size, size
 7748              	.LVL325:
 863:sieve_extend.c **** 
 7749              		.loc 1 863 38 view .LVU2670
 7750 3011 48895C24 		mov	QWORD PTR 64[rsp], rbx	# %sfp, bitarray
 7750      40
 7751              	.LVL326:
 863:sieve_extend.c **** 
 7752              		.loc 1 863 38 view .LVU2671
 7753 3016 4C89C3   		mov	rbx, r8	# destination_stop_word, destination_stop_word
 7754              	.LVL327:
 863:sieve_extend.c **** 
 7755              		.loc 1 863 38 view .LVU2672
 7756 3019 C5F877   		vzeroupper
 7757              	.L595:
GAS LISTING /tmp/cc64mrzX.s 			page 218


 863:sieve_extend.c **** 
 7758              		.loc 1 863 9 is_stmt 1 discriminator 2 view .LVU2673
 7759              	.LVL328:
 7760              	.LBB387:
 7761              	.LBI387:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7762              		.loc 2 31 1 discriminator 2 view .LVU2674
 7763              	.LBB388:
 7764              		.loc 2 34 3 discriminator 2 view .LVU2675
 7765              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 7766              		.loc 2 34 10 is_stmt 0 discriminator 2 view .LVU2676
 7767 301c 498D3CCC 		lea	rdi, [r12+rcx*8]	# tmp764,
 7768 3020 4C89F2   		mov	rdx, r14	#, memsize
 7769 3023 48894C24 		mov	QWORD PTR 88[rsp], rcx	# %sfp, ivtmp.435
 7769      58
 7770 3028 4C89FE   		mov	rsi, r15	#, _48
 7771 302b E8000000 		call	memcpy@PLT	#
 7771      00
 7772              	.LVL329:
 7773              		.loc 2 34 10 discriminator 2 view .LVU2677
 7774              	.LBE388:
 7775              	.LBE387:
 862:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7776              		.loc 1 862 54 is_stmt 1 discriminator 2 view .LVU2678
 862:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7777              		.loc 1 862 11 discriminator 2 view .LVU2679
 7778 3030 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.435, %sfp
 7778      58
 7779 3035 4A8D0C28 		lea	rcx, [rax+r13]	# ivtmp.435,
 7780              	# sieve_extend.c:862:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 862:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7781              		.loc 1 862 5 is_stmt 0 discriminator 2 view .LVU2680
 7782 3039 4839CB   		cmp	rbx, rcx	# destination_stop_word, ivtmp.435
 7783 303c 0F82FE00 		jb	.L830	#,
 7783      0000
 863:sieve_extend.c **** 
 7784              		.loc 1 863 9 is_stmt 1 view .LVU2681
 7785              	.LVL330:
 7786              	.LBB396:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7787              		.loc 2 31 1 view .LVU2682
 7788              	.LBB389:
 7789              		.loc 2 34 3 view .LVU2683
 7790              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 7791              		.loc 2 34 10 is_stmt 0 view .LVU2684
 7792 3042 498D3CCC 		lea	rdi, [r12+rcx*8]	# tmp1070,
 7793 3046 4C89F2   		mov	rdx, r14	#, memsize
 7794 3049 48894C24 		mov	QWORD PTR 88[rsp], rcx	# %sfp, ivtmp.435
 7794      58
 7795              	.LVL331:
 7796              		.loc 2 34 10 view .LVU2685
 7797 304e 4C89FE   		mov	rsi, r15	#, _48
 7798 3051 E8000000 		call	memcpy@PLT	#
 7798      00
 7799              	.LVL332:
 7800              		.loc 2 34 10 view .LVU2686
 7801              	.LBE389:
GAS LISTING /tmp/cc64mrzX.s 			page 219


 7802              	.LBE396:
 862:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7803              		.loc 1 862 54 is_stmt 1 view .LVU2687
 862:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7804              		.loc 1 862 11 view .LVU2688
 7805 3056 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.435, %sfp
 7805      58
 7806 305b 4E8D0C28 		lea	r9, [rax+r13]	# ivtmp.435,
 7807              	# sieve_extend.c:862:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 862:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7808              		.loc 1 862 5 is_stmt 0 view .LVU2689
 7809 305f 4C39CB   		cmp	rbx, r9	# destination_stop_word, ivtmp.435
 7810 3062 0F82D800 		jb	.L830	#,
 7810      0000
 863:sieve_extend.c **** 
 7811              		.loc 1 863 9 is_stmt 1 view .LVU2690
 7812              	.LVL333:
 7813              	.LBB397:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7814              		.loc 2 31 1 view .LVU2691
 7815              	.LBB390:
 7816              		.loc 2 34 3 view .LVU2692
 7817              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 7818              		.loc 2 34 10 is_stmt 0 view .LVU2693
 7819 3068 4B8D3CCC 		lea	rdi, [r12+r9*8]	# tmp1073,
 7820 306c 4C89F2   		mov	rdx, r14	#, memsize
 7821 306f 4C894C24 		mov	QWORD PTR 88[rsp], r9	# %sfp, ivtmp.435
 7821      58
 7822 3074 4C89FE   		mov	rsi, r15	#, _48
 7823 3077 E8000000 		call	memcpy@PLT	#
 7823      00
 7824              	.LVL334:
 7825              		.loc 2 34 10 view .LVU2694
 7826              	.LBE390:
 7827              	.LBE397:
 862:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7828              		.loc 1 862 54 is_stmt 1 view .LVU2695
 862:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7829              		.loc 1 862 11 view .LVU2696
 7830 307c 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.435, %sfp
 7830      58
 7831 3081 4E8D1C28 		lea	r11, [rax+r13]	# ivtmp.435,
 7832              	# sieve_extend.c:862:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 862:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7833              		.loc 1 862 5 is_stmt 0 view .LVU2697
 7834 3085 4C39DB   		cmp	rbx, r11	# destination_stop_word, ivtmp.435
 7835 3088 0F82B200 		jb	.L830	#,
 7835      0000
 863:sieve_extend.c **** 
 7836              		.loc 1 863 9 is_stmt 1 view .LVU2698
 7837              	.LVL335:
 7838              	.LBB398:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7839              		.loc 2 31 1 view .LVU2699
 7840              	.LBB391:
 7841              		.loc 2 34 3 view .LVU2700
 7842              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
GAS LISTING /tmp/cc64mrzX.s 			page 220


 7843              		.loc 2 34 10 is_stmt 0 view .LVU2701
 7844 308e 4C89F2   		mov	rdx, r14	#, memsize
 7845 3091 4B8D3CDC 		lea	rdi, [r12+r11*8]	# tmp1076,
 7846 3095 4C895C24 		mov	QWORD PTR 88[rsp], r11	# %sfp, ivtmp.435
 7846      58
 7847 309a 4C89FE   		mov	rsi, r15	#, _48
 7848 309d E8000000 		call	memcpy@PLT	#
 7848      00
 7849              	.LVL336:
 7850              		.loc 2 34 10 view .LVU2702
 7851              	.LBE391:
 7852              	.LBE398:
 862:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7853              		.loc 1 862 54 is_stmt 1 view .LVU2703
 862:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7854              		.loc 1 862 11 view .LVU2704
 7855 30a2 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.435, %sfp
 7855      58
 7856 30a7 4A8D1428 		lea	rdx, [rax+r13]	# ivtmp.435,
 7857              	# sieve_extend.c:862:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 862:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7858              		.loc 1 862 5 is_stmt 0 view .LVU2705
 7859 30ab 4839D3   		cmp	rbx, rdx	# destination_stop_word, ivtmp.435
 7860 30ae 0F828C00 		jb	.L830	#,
 7860      0000
 863:sieve_extend.c **** 
 7861              		.loc 1 863 9 is_stmt 1 view .LVU2706
 7862              	.LVL337:
 7863              	.LBB399:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7864              		.loc 2 31 1 view .LVU2707
 7865              	.LBB392:
 7866              		.loc 2 34 3 view .LVU2708
 7867              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 7868              		.loc 2 34 10 is_stmt 0 view .LVU2709
 7869 30b4 498D3CD4 		lea	rdi, [r12+rdx*8]	# tmp1079,
 7870 30b8 4C89FE   		mov	rsi, r15	#, _48
 7871 30bb 48895424 		mov	QWORD PTR 88[rsp], rdx	# %sfp, ivtmp.435
 7871      58
 7872 30c0 4C89F2   		mov	rdx, r14	#, memsize
 7873 30c3 E8000000 		call	memcpy@PLT	#
 7873      00
 7874              	.LVL338:
 7875              		.loc 2 34 10 view .LVU2710
 7876              	.LBE392:
 7877              	.LBE399:
 862:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7878              		.loc 1 862 54 is_stmt 1 view .LVU2711
 862:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7879              		.loc 1 862 11 view .LVU2712
 7880 30c8 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.435, %sfp
 7880      58
 7881 30cd 4E8D1428 		lea	r10, [rax+r13]	# ivtmp.435,
 7882              	# sieve_extend.c:862:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 862:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7883              		.loc 1 862 5 is_stmt 0 view .LVU2713
 7884 30d1 4C39D3   		cmp	rbx, r10	# destination_stop_word, ivtmp.435
GAS LISTING /tmp/cc64mrzX.s 			page 221


 7885 30d4 726A     		jb	.L830	#,
 863:sieve_extend.c **** 
 7886              		.loc 1 863 9 is_stmt 1 view .LVU2714
 7887              	.LVL339:
 7888              	.LBB400:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7889              		.loc 2 31 1 view .LVU2715
 7890              	.LBB393:
 7891              		.loc 2 34 3 view .LVU2716
 7892              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 7893              		.loc 2 34 10 is_stmt 0 view .LVU2717
 7894 30d6 4B8D3CD4 		lea	rdi, [r12+r10*8]	# tmp1082,
 7895 30da 4C89F2   		mov	rdx, r14	#, memsize
 7896 30dd 4C895424 		mov	QWORD PTR 88[rsp], r10	# %sfp, ivtmp.435
 7896      58
 7897 30e2 4C89FE   		mov	rsi, r15	#, _48
 7898 30e5 E8000000 		call	memcpy@PLT	#
 7898      00
 7899              	.LVL340:
 7900              		.loc 2 34 10 view .LVU2718
 7901              	.LBE393:
 7902              	.LBE400:
 862:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7903              		.loc 1 862 54 is_stmt 1 view .LVU2719
 862:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7904              		.loc 1 862 11 view .LVU2720
 7905 30ea 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.435, %sfp
 7905      58
 7906 30ef 4E8D0428 		lea	r8, [rax+r13]	# ivtmp.435,
 7907              	# sieve_extend.c:862:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 862:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7908              		.loc 1 862 5 is_stmt 0 view .LVU2721
 7909 30f3 4C39C3   		cmp	rbx, r8	# destination_stop_word, ivtmp.435
 7910 30f6 7248     		jb	.L830	#,
 863:sieve_extend.c **** 
 7911              		.loc 1 863 9 is_stmt 1 view .LVU2722
 7912              	.LVL341:
 7913              	.LBB401:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7914              		.loc 2 31 1 view .LVU2723
 7915              	.LBB394:
 7916              		.loc 2 34 3 view .LVU2724
 7917              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 7918              		.loc 2 34 10 is_stmt 0 view .LVU2725
 7919 30f8 4C89FE   		mov	rsi, r15	#, _48
 7920 30fb 4B8D3CC4 		lea	rdi, [r12+r8*8]	# tmp1085,
 7921 30ff 4C894424 		mov	QWORD PTR 88[rsp], r8	# %sfp, ivtmp.435
 7921      58
 7922 3104 4C89F2   		mov	rdx, r14	#, memsize
 7923 3107 E8000000 		call	memcpy@PLT	#
 7923      00
 7924              	.LVL342:
 7925              		.loc 2 34 10 view .LVU2726
 7926              	.LBE394:
 7927              	.LBE401:
 862:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7928              		.loc 1 862 54 is_stmt 1 view .LVU2727
GAS LISTING /tmp/cc64mrzX.s 			page 222


 862:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7929              		.loc 1 862 11 view .LVU2728
 7930 310c 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.435, %sfp
 7930      58
 7931 3111 4A8D3428 		lea	rsi, [rax+r13]	# ivtmp.435,
 7932              	# sieve_extend.c:862:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 862:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7933              		.loc 1 862 5 is_stmt 0 view .LVU2729
 7934 3115 4839F3   		cmp	rbx, rsi	# destination_stop_word, ivtmp.435
 7935 3118 7226     		jb	.L830	#,
 863:sieve_extend.c **** 
 7936              		.loc 1 863 9 is_stmt 1 view .LVU2730
 7937              	.LVL343:
 7938              	.LBB402:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7939              		.loc 2 31 1 view .LVU2731
 7940              	.LBB395:
 7941              		.loc 2 34 3 view .LVU2732
 7942              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 7943              		.loc 2 34 10 is_stmt 0 view .LVU2733
 7944 311a 498D3CF4 		lea	rdi, [r12+rsi*8]	# tmp1088,
 7945 311e 4C89F2   		mov	rdx, r14	#, memsize
 7946 3121 48897424 		mov	QWORD PTR 88[rsp], rsi	# %sfp, ivtmp.435
 7946      58
 7947 3126 4C89FE   		mov	rsi, r15	#, _48
 7948 3129 E8000000 		call	memcpy@PLT	#
 7948      00
 7949              	.LVL344:
 7950              		.loc 2 34 10 view .LVU2734
 7951              	.LBE395:
 7952              	.LBE402:
 862:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7953              		.loc 1 862 54 is_stmt 1 view .LVU2735
 862:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7954              		.loc 1 862 11 view .LVU2736
 7955 312e 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.435, %sfp
 7955      58
 7956              	.LVL345:
 862:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7957              		.loc 1 862 11 is_stmt 0 view .LVU2737
 7958 3133 4A8D0C28 		lea	rcx, [rax+r13]	# ivtmp.435,
 7959              	.LVL346:
 7960              	# sieve_extend.c:862:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 862:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7961              		.loc 1 862 5 view .LVU2738
 7962 3137 4839CB   		cmp	rbx, rcx	# destination_stop_word, ivtmp.435
 7963 313a 0F83DCFE 		jnb	.L595	#,
 7963      FFFF
 7964              	.LVL347:
 7965              		.p2align 4
 7966              		.p2align 3
 7967              	.L830:
 862:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7968              		.loc 1 862 5 view .LVU2739
 7969 3140 4C8B6C24 		mov	r13, QWORD PTR 72[rsp]	# source_word, %sfp
 7969      48
 7970              	# sieve_extend.c:866:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
GAS LISTING /tmp/cc64mrzX.s 			page 223


 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7971              		.loc 1 866 5 view .LVU2740
 7972 3145 48394424 		cmp	QWORD PTR 80[rsp], rax	# %sfp, ivtmp.435
 7972      50
 7973 314a 488B5C24 		mov	rbx, QWORD PTR 64[rsp]	# bitarray, %sfp
 7973      40
 7974              	.LVL348:
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7975              		.loc 1 866 11 is_stmt 1 view .LVU2741
 7976              	# sieve_extend.c:866:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7977              		.loc 1 866 5 is_stmt 0 view .LVU2742
 7978 314f 0F826E02 		jb	.L841	#,
 7978      0000
 7979              	.LVL349:
 7980              	.L594:
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7981              		.loc 1 866 5 view .LVU2743
 7982 3155 4C8D3CC5 		lea	r15, 0[0+rax*8]	# _195,
 7982      00000000 
 7983 315d 4E8D24ED 		lea	r12, 0[0+r13*8]	# _187,
 7983      00000000 
 7984 3165 498D7F20 		lea	rdi, 32[r15]	# tmp771,
 7985 3169 4E8D34ED 		lea	r14, 32[0+r13*8]	# _197,
 7985      20000000 
 7986              	.LVL350:
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7987              		.loc 1 866 5 view .LVU2744
 7988 3171 4939FC   		cmp	r12, rdi	# _187, tmp771
 7989 3174 410F9DC1 		setge	r9b	#, tmp773
 7990 3178 4D39F7   		cmp	r15, r14	# _195, _197
 7991 317b 410F9DC3 		setge	r11b	#, tmp775
 7992 317f 4508D9   		or	r9b, r11b	# tmp773, tmp775
 7993 3182 0F845002 		je	.L597	#,
 7993      0000
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7994              		.loc 1 866 5 view .LVU2745
 7995 3188 488B5424 		mov	rdx, QWORD PTR 80[rsp]	# destination_stop_word, %sfp
 7995      50
 7996 318d 4989D2   		mov	r10, rdx	# tmp777, destination_stop_word
 7997 3190 4929C2   		sub	r10, rax	# tmp777, ivtmp.435
 7998 3193 4983FA05 		cmp	r10, 5	# tmp777,
 7999 3197 0F863B02 		jbe	.L597	#,
 7999      0000
 8000 319d 4901DC   		add	r12, rbx	# vectp.360, bitarray
 8001 31a0 4C8D4201 		lea	r8, 1[rdx]	# _75,
 8002 31a4 49C1EC03 		shr	r12, 3	# tmp781,
 8003 31a8 49F7DC   		neg	r12	# tmp782
 8004 31ab 4183E403 		and	r12d, 3	# prolog_loop_niters.361,
 8005 31af 0F842B07 		je	.L606	#,
 8005      0000
 867:sieve_extend.c **** 
 8006              		.loc 1 867 9 is_stmt 1 view .LVU2746
 8007              	# sieve_extend.c:867:         bitarray[copy_word] = bitarray[source_word];
 867:sieve_extend.c **** 
 8008              		.loc 1 867 39 is_stmt 0 view .LVU2747
 8009 31b5 4A8B0CEB 		mov	rcx, QWORD PTR [rbx+r13*8]	# _114, *_111
GAS LISTING /tmp/cc64mrzX.s 			page 224


 8010 31b9 4983FC01 		cmp	r12, 1	# prolog_loop_niters.361,
 8011              	# sieve_extend.c:866:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8012              		.loc 1 866 57 view .LVU2748
 8013 31bd 488D7001 		lea	rsi, 1[rax]	# copy_word,
 8014              	# sieve_extend.c:866:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8015              		.loc 1 866 71 view .LVU2749
 8016 31c1 4D8D7501 		lea	r14, 1[r13]	# source_word,
 8017              	# sieve_extend.c:867:         bitarray[copy_word] = bitarray[source_word];
 867:sieve_extend.c **** 
 8018              		.loc 1 867 29 view .LVU2750
 8019 31c5 4A890C3B 		mov	QWORD PTR [rbx+r15], rcx	# *_113, _114
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8020              		.loc 1 866 48 is_stmt 1 view .LVU2751
 8021              	.LVL351:
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8022              		.loc 1 866 11 view .LVU2752
 8023 31c9 7426     		je	.L598	#,
 867:sieve_extend.c **** 
 8024              		.loc 1 867 9 view .LVU2753
 8025              	# sieve_extend.c:867:         bitarray[copy_word] = bitarray[source_word];
 867:sieve_extend.c **** 
 8026              		.loc 1 867 39 is_stmt 0 view .LVU2754
 8027 31cb 4E8B3CF3 		mov	r15, QWORD PTR [rbx+r14*8]	# _38, *_35
 8028 31cf 4983FC03 		cmp	r12, 3	# prolog_loop_niters.361,
 8029              	# sieve_extend.c:866:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8030              		.loc 1 866 71 view .LVU2755
 8031 31d3 4D8D7502 		lea	r14, 2[r13]	# source_word,
 8032              	.LVL352:
 8033              	# sieve_extend.c:867:         bitarray[copy_word] = bitarray[source_word];
 867:sieve_extend.c **** 
 8034              		.loc 1 867 29 view .LVU2756
 8035 31d7 4C893CF3 		mov	QWORD PTR [rbx+rsi*8], r15	# *_37, _38
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8036              		.loc 1 866 48 is_stmt 1 view .LVU2757
 8037              	# sieve_extend.c:866:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8038              		.loc 1 866 57 is_stmt 0 view .LVU2758
 8039 31db 488D7002 		lea	rsi, 2[rax]	# copy_word,
 8040              	.LVL353:
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8041              		.loc 1 866 11 is_stmt 1 view .LVU2759
 8042 31df 7510     		jne	.L598	#,
 867:sieve_extend.c **** 
 8043              		.loc 1 867 9 view .LVU2760
 8044              	# sieve_extend.c:867:         bitarray[copy_word] = bitarray[source_word];
 867:sieve_extend.c **** 
 8045              		.loc 1 867 39 is_stmt 0 view .LVU2761
 8046 31e1 4A8B3CF3 		mov	rdi, QWORD PTR [rbx+r14*8]	# _150, *_153
 8047              	# sieve_extend.c:866:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8048              		.loc 1 866 71 view .LVU2762
 8049 31e5 4D8D7503 		lea	r14, 3[r13]	# source_word,
 8050              	.LVL354:
 8051              	# sieve_extend.c:867:         bitarray[copy_word] = bitarray[source_word];
GAS LISTING /tmp/cc64mrzX.s 			page 225


 867:sieve_extend.c **** 
 8052              		.loc 1 867 29 view .LVU2763
 8053 31e9 48893CF3 		mov	QWORD PTR [rbx+rsi*8], rdi	# *_151, _150
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8054              		.loc 1 866 48 is_stmt 1 view .LVU2764
 8055              	# sieve_extend.c:866:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8056              		.loc 1 866 57 is_stmt 0 view .LVU2765
 8057 31ed 488D7003 		lea	rsi, 3[rax]	# copy_word,
 8058              	.LVL355:
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8059              		.loc 1 866 11 is_stmt 1 view .LVU2766
 8060              	.L598:
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8061              		.loc 1 866 11 is_stmt 0 view .LVU2767
 8062 31f1 4D29E0   		sub	r8, r12	# tmp783, prolog_loop_niters.361
 8063 31f4 4D01E5   		add	r13, r12	# tmp784, prolog_loop_niters.361
 8064 31f7 4929C0   		sub	r8, rax	# niters.362, ivtmp.435
 8065 31fa 4C01E0   		add	rax, r12	# tmp786, prolog_loop_niters.361
 8066 31fd 4D89C1   		mov	r9, r8	# bnd.363, niters.362
 8067 3200 4C8D24C3 		lea	r12, [rbx+rax*8]	# vectp.371,
 8068 3204 49C1E902 		shr	r9, 2	# bnd.363,
 8069              	# sieve_extend.c:858:     source_word = copy_word - size; // recalibrate
 858:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 8070              		.loc 1 858 17 view .LVU2768
 8071 3208 31C0     		xor	eax, eax	# ivtmp.426
 8072 320a 49C1E105 		sal	r9, 5	# _704,
 8073 320e 4E8D2CEB 		lea	r13, [rbx+r13*8]	# vectp.368,
 8074 3212 4D8D59E0 		lea	r11, -32[r9]	# tmp806,
 8075 3216 49C1EB05 		shr	r11, 5	# tmp804,
 8076 321a 4983C301 		add	r11, 1	# tmp807,
 8077 321e 4183E307 		and	r11d, 7	# tmp808,
 8078 3222 0F84A800 		je	.L600	#,
 8078      0000
 8079 3228 4983FB01 		cmp	r11, 1	# tmp808,
 8080 322c 0F848400 		je	.L750	#,
 8080      0000
 8081 3232 4983FB02 		cmp	r11, 2	# tmp808,
 8082 3236 746D     		je	.L751	#,
 8083 3238 4983FB03 		cmp	r11, 3	# tmp808,
 8084 323c 7456     		je	.L752	#,
 8085 323e 4983FB04 		cmp	r11, 4	# tmp808,
 8086 3242 743F     		je	.L753	#,
 8087 3244 4983FB05 		cmp	r11, 5	# tmp808,
 8088 3248 7428     		je	.L754	#,
 8089 324a 4983FB06 		cmp	r11, 6	# tmp808,
 8090 324e 7411     		je	.L755	#,
 8091              	.LVL356:
 867:sieve_extend.c **** 
 8092              		.loc 1 867 9 is_stmt 1 view .LVU2769
 8093              	# sieve_extend.c:867:         bitarray[copy_word] = bitarray[source_word];
 867:sieve_extend.c **** 
 8094              		.loc 1 867 29 is_stmt 0 view .LVU2770
 8095 3250 C4417D6F 		vmovdqa	ymm10, YMMWORD PTR 0[r13]	# tmp1397, MEM[base: vectp.368_189, index: ivtmp.426_702, offset
 8095      5500
 8096 3256 B8200000 		mov	eax, 32	# ivtmp.426,
 8096      00
GAS LISTING /tmp/cc64mrzX.s 			page 226


 8097 325b C4417E7F 		vmovdqu	YMMWORD PTR [r12], ymm10	# MEM[base: vectp.371_207, index: ivtmp.426_702, offset: 0B], tmp
 8097      1424
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8098              		.loc 1 866 48 is_stmt 1 view .LVU2771
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8099              		.loc 1 866 11 view .LVU2772
 8100              	.L755:
 867:sieve_extend.c **** 
 8101              		.loc 1 867 9 view .LVU2773
 8102              	# sieve_extend.c:867:         bitarray[copy_word] = bitarray[source_word];
 867:sieve_extend.c **** 
 8103              		.loc 1 867 29 is_stmt 0 view .LVU2774
 8104 3261 C4C17D6F 		vmovdqa	ymm2, YMMWORD PTR 0[r13+rax]	# tmp1398, MEM[base: vectp.368_189, index: ivtmp.426_702, off
 8104      540500
 8105 3268 C4C17E7F 		vmovdqu	YMMWORD PTR [r12+rax], ymm2	# MEM[base: vectp.371_207, index: ivtmp.426_702, offset: 0B], 
 8105      1404
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8106              		.loc 1 866 48 is_stmt 1 view .LVU2775
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8107              		.loc 1 866 11 view .LVU2776
 8108 326e 4883C020 		add	rax, 32	# ivtmp.426,
 8109              	.L754:
 867:sieve_extend.c **** 
 8110              		.loc 1 867 9 view .LVU2777
 8111              	# sieve_extend.c:867:         bitarray[copy_word] = bitarray[source_word];
 867:sieve_extend.c **** 
 8112              		.loc 1 867 29 is_stmt 0 view .LVU2778
 8113 3272 C4417D6F 		vmovdqa	ymm13, YMMWORD PTR 0[r13+rax]	# tmp1399, MEM[base: vectp.368_189, index: ivtmp.426_702, of
 8113      6C0500
 8114 3279 C4417E7F 		vmovdqu	YMMWORD PTR [r12+rax], ymm13	# MEM[base: vectp.371_207, index: ivtmp.426_702, offset: 0B],
 8114      2C04
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8115              		.loc 1 866 48 is_stmt 1 view .LVU2779
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8116              		.loc 1 866 11 view .LVU2780
 8117 327f 4883C020 		add	rax, 32	# ivtmp.426,
 8118              	.L753:
 867:sieve_extend.c **** 
 8119              		.loc 1 867 9 view .LVU2781
 8120              	# sieve_extend.c:867:         bitarray[copy_word] = bitarray[source_word];
 867:sieve_extend.c **** 
 8121              		.loc 1 867 29 is_stmt 0 view .LVU2782
 8122 3283 C4417D6F 		vmovdqa	ymm14, YMMWORD PTR 0[r13+rax]	# tmp1400, MEM[base: vectp.368_189, index: ivtmp.426_702, of
 8122      740500
 8123 328a C4417E7F 		vmovdqu	YMMWORD PTR [r12+rax], ymm14	# MEM[base: vectp.371_207, index: ivtmp.426_702, offset: 0B],
 8123      3404
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8124              		.loc 1 866 48 is_stmt 1 view .LVU2783
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8125              		.loc 1 866 11 view .LVU2784
 8126 3290 4883C020 		add	rax, 32	# ivtmp.426,
 8127              	.L752:
 867:sieve_extend.c **** 
 8128              		.loc 1 867 9 view .LVU2785
 8129              	# sieve_extend.c:867:         bitarray[copy_word] = bitarray[source_word];
 867:sieve_extend.c **** 
 8130              		.loc 1 867 29 is_stmt 0 view .LVU2786
GAS LISTING /tmp/cc64mrzX.s 			page 227


 8131 3294 C4417D6F 		vmovdqa	ymm15, YMMWORD PTR 0[r13+rax]	# tmp1401, MEM[base: vectp.368_189, index: ivtmp.426_702, of
 8131      7C0500
 8132 329b C4417E7F 		vmovdqu	YMMWORD PTR [r12+rax], ymm15	# MEM[base: vectp.371_207, index: ivtmp.426_702, offset: 0B],
 8132      3C04
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8133              		.loc 1 866 48 is_stmt 1 view .LVU2787
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8134              		.loc 1 866 11 view .LVU2788
 8135 32a1 4883C020 		add	rax, 32	# ivtmp.426,
 8136              	.L751:
 867:sieve_extend.c **** 
 8137              		.loc 1 867 9 view .LVU2789
 8138              	# sieve_extend.c:867:         bitarray[copy_word] = bitarray[source_word];
 867:sieve_extend.c **** 
 8139              		.loc 1 867 29 is_stmt 0 view .LVU2790
 8140 32a5 C4C17D6F 		vmovdqa	ymm1, YMMWORD PTR 0[r13+rax]	# tmp1402, MEM[base: vectp.368_189, index: ivtmp.426_702, off
 8140      4C0500
 8141 32ac C4C17E7F 		vmovdqu	YMMWORD PTR [r12+rax], ymm1	# MEM[base: vectp.371_207, index: ivtmp.426_702, offset: 0B], 
 8141      0C04
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8142              		.loc 1 866 48 is_stmt 1 view .LVU2791
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8143              		.loc 1 866 11 view .LVU2792
 8144 32b2 4883C020 		add	rax, 32	# ivtmp.426,
 8145              	.L750:
 867:sieve_extend.c **** 
 8146              		.loc 1 867 9 view .LVU2793
 8147              	# sieve_extend.c:867:         bitarray[copy_word] = bitarray[source_word];
 867:sieve_extend.c **** 
 8148              		.loc 1 867 29 is_stmt 0 view .LVU2794
 8149 32b6 C4417D6F 		vmovdqa	ymm8, YMMWORD PTR 0[r13+rax]	# tmp1403, MEM[base: vectp.368_189, index: ivtmp.426_702, off
 8149      440500
 8150 32bd C4417E7F 		vmovdqu	YMMWORD PTR [r12+rax], ymm8	# MEM[base: vectp.371_207, index: ivtmp.426_702, offset: 0B], 
 8150      0404
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8151              		.loc 1 866 48 is_stmt 1 view .LVU2795
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8152              		.loc 1 866 11 view .LVU2796
 8153 32c3 4883C020 		add	rax, 32	# ivtmp.426,
 8154 32c7 4C39C8   		cmp	rax, r9	# ivtmp.426, _704
 8155 32ca 0F849600 		je	.L815	#,
 8155      0000
 8156              	.L600:
 867:sieve_extend.c **** 
 8157              		.loc 1 867 9 discriminator 2 view .LVU2797
 8158              	# sieve_extend.c:867:         bitarray[copy_word] = bitarray[source_word];
 867:sieve_extend.c **** 
 8159              		.loc 1 867 29 is_stmt 0 discriminator 2 view .LVU2798
 8160 32d0 C4C17D6F 		vmovdqa	ymm0, YMMWORD PTR 0[r13+rax]	# tmp1384, MEM[base: vectp.368_189, index: ivtmp.426_702, off
 8160      440500
 8161 32d7 C4C17E7F 		vmovdqu	YMMWORD PTR [r12+rax], ymm0	# MEM[base: vectp.371_207, index: ivtmp.426_702, offset: 0B], 
 8161      0404
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8162              		.loc 1 866 48 is_stmt 1 discriminator 2 view .LVU2799
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8163              		.loc 1 866 11 discriminator 2 view .LVU2800
 867:sieve_extend.c **** 
GAS LISTING /tmp/cc64mrzX.s 			page 228


 8164              		.loc 1 867 9 discriminator 2 view .LVU2801
 8165              	# sieve_extend.c:867:         bitarray[copy_word] = bitarray[source_word];
 867:sieve_extend.c **** 
 8166              		.loc 1 867 29 is_stmt 0 discriminator 2 view .LVU2802
 8167 32dd C4C17D6F 		vmovdqa	ymm5, YMMWORD PTR 32[r13+rax]	# tmp1385, MEM[base: vectp.368_189, index: ivtmp.426_702, of
 8167      6C0520
 8168 32e4 C4C17E7F 		vmovdqu	YMMWORD PTR 32[r12+rax], ymm5	# MEM[base: vectp.371_207, index: ivtmp.426_702, offset: 0B]
 8168      6C0420
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8169              		.loc 1 866 48 is_stmt 1 discriminator 2 view .LVU2803
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8170              		.loc 1 866 11 discriminator 2 view .LVU2804
 867:sieve_extend.c **** 
 8171              		.loc 1 867 9 discriminator 2 view .LVU2805
 8172              	# sieve_extend.c:867:         bitarray[copy_word] = bitarray[source_word];
 867:sieve_extend.c **** 
 8173              		.loc 1 867 29 is_stmt 0 discriminator 2 view .LVU2806
 8174 32eb C4417D6F 		vmovdqa	ymm9, YMMWORD PTR 64[r13+rax]	# tmp1386, MEM[base: vectp.368_189, index: ivtmp.426_702, of
 8174      4C0540
 8175 32f2 C4417E7F 		vmovdqu	YMMWORD PTR 64[r12+rax], ymm9	# MEM[base: vectp.371_207, index: ivtmp.426_702, offset: 0B]
 8175      4C0440
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8176              		.loc 1 866 48 is_stmt 1 discriminator 2 view .LVU2807
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8177              		.loc 1 866 11 discriminator 2 view .LVU2808
 867:sieve_extend.c **** 
 8178              		.loc 1 867 9 discriminator 2 view .LVU2809
 8179              	# sieve_extend.c:867:         bitarray[copy_word] = bitarray[source_word];
 867:sieve_extend.c **** 
 8180              		.loc 1 867 29 is_stmt 0 discriminator 2 view .LVU2810
 8181 32f9 C4417D6F 		vmovdqa	ymm11, YMMWORD PTR 96[r13+rax]	# tmp1387, MEM[base: vectp.368_189, index: ivtmp.426_702, o
 8181      5C0560
 8182 3300 C4417E7F 		vmovdqu	YMMWORD PTR 96[r12+rax], ymm11	# MEM[base: vectp.371_207, index: ivtmp.426_702, offset: 0B
 8182      5C0460
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8183              		.loc 1 866 48 is_stmt 1 discriminator 2 view .LVU2811
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8184              		.loc 1 866 11 discriminator 2 view .LVU2812
 867:sieve_extend.c **** 
 8185              		.loc 1 867 9 discriminator 2 view .LVU2813
 8186              	# sieve_extend.c:867:         bitarray[copy_word] = bitarray[source_word];
 867:sieve_extend.c **** 
 8187              		.loc 1 867 29 is_stmt 0 discriminator 2 view .LVU2814
 8188 3307 C4C17D6F 		vmovdqa	ymm4, YMMWORD PTR 128[r13+rax]	# tmp1388, MEM[base: vectp.368_189, index: ivtmp.426_702, o
 8188      A4058000 
 8188      0000
 8189 3311 C4C17E7F 		vmovdqu	YMMWORD PTR 128[r12+rax], ymm4	# MEM[base: vectp.371_207, index: ivtmp.426_702, offset: 0B
 8189      A4048000 
 8189      0000
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8190              		.loc 1 866 48 is_stmt 1 discriminator 2 view .LVU2815
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8191              		.loc 1 866 11 discriminator 2 view .LVU2816
 867:sieve_extend.c **** 
 8192              		.loc 1 867 9 discriminator 2 view .LVU2817
 8193              	# sieve_extend.c:867:         bitarray[copy_word] = bitarray[source_word];
 867:sieve_extend.c **** 
GAS LISTING /tmp/cc64mrzX.s 			page 229


 8194              		.loc 1 867 29 is_stmt 0 discriminator 2 view .LVU2818
 8195 331b C4C17D6F 		vmovdqa	ymm6, YMMWORD PTR 160[r13+rax]	# tmp1389, MEM[base: vectp.368_189, index: ivtmp.426_702, o
 8195      B405A000 
 8195      0000
 8196 3325 C4C17E7F 		vmovdqu	YMMWORD PTR 160[r12+rax], ymm6	# MEM[base: vectp.371_207, index: ivtmp.426_702, offset: 0B
 8196      B404A000 
 8196      0000
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8197              		.loc 1 866 48 is_stmt 1 discriminator 2 view .LVU2819
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8198              		.loc 1 866 11 discriminator 2 view .LVU2820
 867:sieve_extend.c **** 
 8199              		.loc 1 867 9 discriminator 2 view .LVU2821
 8200              	# sieve_extend.c:867:         bitarray[copy_word] = bitarray[source_word];
 867:sieve_extend.c **** 
 8201              		.loc 1 867 29 is_stmt 0 discriminator 2 view .LVU2822
 8202 332f C4C17D6F 		vmovdqa	ymm7, YMMWORD PTR 192[r13+rax]	# tmp1390, MEM[base: vectp.368_189, index: ivtmp.426_702, o
 8202      BC05C000 
 8202      0000
 8203 3339 C4C17E7F 		vmovdqu	YMMWORD PTR 192[r12+rax], ymm7	# MEM[base: vectp.371_207, index: ivtmp.426_702, offset: 0B
 8203      BC04C000 
 8203      0000
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8204              		.loc 1 866 48 is_stmt 1 discriminator 2 view .LVU2823
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8205              		.loc 1 866 11 discriminator 2 view .LVU2824
 867:sieve_extend.c **** 
 8206              		.loc 1 867 9 discriminator 2 view .LVU2825
 8207              	# sieve_extend.c:867:         bitarray[copy_word] = bitarray[source_word];
 867:sieve_extend.c **** 
 8208              		.loc 1 867 29 is_stmt 0 discriminator 2 view .LVU2826
 8209 3343 C4C17D6F 		vmovdqa	ymm3, YMMWORD PTR 224[r13+rax]	# tmp1391, MEM[base: vectp.368_189, index: ivtmp.426_702, o
 8209      9C05E000 
 8209      0000
 8210 334d C4C17E7F 		vmovdqu	YMMWORD PTR 224[r12+rax], ymm3	# MEM[base: vectp.371_207, index: ivtmp.426_702, offset: 0B
 8210      9C04E000 
 8210      0000
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8211              		.loc 1 866 48 is_stmt 1 discriminator 2 view .LVU2827
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8212              		.loc 1 866 11 discriminator 2 view .LVU2828
 8213 3357 48050001 		add	rax, 256	# ivtmp.426,
 8213      0000
 8214 335d 4C39C8   		cmp	rax, r9	# ivtmp.426, _704
 8215 3360 0F856AFF 		jne	.L600	#,
 8215      FFFF
 8216              	.L815:
 8217 3366 4C89C2   		mov	rdx, r8	# niters_vector_mult_vf.364, niters.362
 8218 3369 4883E2FC 		and	rdx, -4	# niters_vector_mult_vf.364,
 8219 336d 4901D6   		add	r14, rdx	# tmp.365, niters_vector_mult_vf.364
 8220 3370 4801D6   		add	rsi, rdx	# tmp.366, niters_vector_mult_vf.364
 8221 3373 4C39C2   		cmp	rdx, r8	# niters_vector_mult_vf.364, niters.362
 8222 3376 0F840D01 		je	.L840	#,
 8222      0000
 8223              	.LVL357:
 867:sieve_extend.c **** 
 8224              		.loc 1 867 9 view .LVU2829
GAS LISTING /tmp/cc64mrzX.s 			page 230


 8225              	# sieve_extend.c:866:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8226              		.loc 1 866 5 is_stmt 0 view .LVU2830
 8227 337c 4C8B7C24 		mov	r15, QWORD PTR 80[rsp]	# destination_stop_word, %sfp
 8227      50
 8228              	# sieve_extend.c:866:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8229              		.loc 1 866 57 view .LVU2831
 8230 3381 4C8D4601 		lea	r8, 1[rsi]	# copy_word,
 8231              	# sieve_extend.c:867:         bitarray[copy_word] = bitarray[source_word];
 867:sieve_extend.c **** 
 8232              		.loc 1 867 39 view .LVU2832
 8233 3385 4E8B14F3 		mov	r10, QWORD PTR [rbx+r14*8]	# _90, *_141
 8234              	# sieve_extend.c:866:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8235              		.loc 1 866 71 view .LVU2833
 8236 3389 4983C601 		add	r14, 1	# source_word,
 8237              	.LVL358:
 8238              	# sieve_extend.c:866:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8239              		.loc 1 866 5 view .LVU2834
 8240 338d 4D39C7   		cmp	r15, r8	# destination_stop_word, copy_word
 8241              	# sieve_extend.c:867:         bitarray[copy_word] = bitarray[source_word];
 867:sieve_extend.c **** 
 8242              		.loc 1 867 29 view .LVU2835
 8243 3390 4C8914F3 		mov	QWORD PTR [rbx+rsi*8], r10	# *_489, _90
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8244              		.loc 1 866 48 is_stmt 1 view .LVU2836
 8245              	.LVL359:
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8246              		.loc 1 866 11 view .LVU2837
 8247              	# sieve_extend.c:866:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8248              		.loc 1 866 5 is_stmt 0 view .LVU2838
 8249 3394 0F82EF00 		jb	.L840	#,
 8249      0000
 867:sieve_extend.c **** 
 8250              		.loc 1 867 9 is_stmt 1 view .LVU2839
 8251              	# sieve_extend.c:867:         bitarray[copy_word] = bitarray[source_word];
 867:sieve_extend.c **** 
 8252              		.loc 1 867 39 is_stmt 0 view .LVU2840
 8253 339a 4A8D0CF5 		lea	rcx, 0[0+r14*8]	# _96,
 8253      00000000 
 8254              	# sieve_extend.c:866:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8255              		.loc 1 866 57 view .LVU2841
 8256 33a2 4883C602 		add	rsi, 2	# copy_word,
 8257              	# sieve_extend.c:867:         bitarray[copy_word] = bitarray[source_word];
 867:sieve_extend.c **** 
 8258              		.loc 1 867 39 view .LVU2842
 8259 33a6 4E8B34F3 		mov	r14, QWORD PTR [rbx+r14*8]	# _103, *_98
 8260              	# sieve_extend.c:866:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8261              		.loc 1 866 5 view .LVU2843
 8262 33aa 4939F7   		cmp	r15, rsi	# destination_stop_word, copy_word
 8263              	# sieve_extend.c:867:         bitarray[copy_word] = bitarray[source_word];
 867:sieve_extend.c **** 
GAS LISTING /tmp/cc64mrzX.s 			page 231


 8264              		.loc 1 867 29 view .LVU2844
 8265 33ad 4E8934C3 		mov	QWORD PTR [rbx+r8*8], r14	# *_102, _103
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8266              		.loc 1 866 48 is_stmt 1 view .LVU2845
 8267              	.LVL360:
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8268              		.loc 1 866 11 view .LVU2846
 8269              	# sieve_extend.c:866:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8270              		.loc 1 866 5 is_stmt 0 view .LVU2847
 8271 33b1 0F82D200 		jb	.L840	#,
 8271      0000
 867:sieve_extend.c **** 
 8272              		.loc 1 867 9 is_stmt 1 view .LVU2848
 8273              	# sieve_extend.c:867:         bitarray[copy_word] = bitarray[source_word];
 867:sieve_extend.c **** 
 8274              		.loc 1 867 39 is_stmt 0 view .LVU2849
 8275 33b7 488B7C0B 		mov	rdi, QWORD PTR 8[rbx+rcx]	# _34, *_83
 8275      08
 8276              	# sieve_extend.c:867:         bitarray[copy_word] = bitarray[source_word];
 867:sieve_extend.c **** 
 8277              		.loc 1 867 29 view .LVU2850
 8278 33bc 48893CF3 		mov	QWORD PTR [rbx+rsi*8], rdi	# *_72, _34
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8279              		.loc 1 866 48 is_stmt 1 view .LVU2851
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8280              		.loc 1 866 11 view .LVU2852
 8281 33c0 C5F877   		vzeroupper
 8282              	.L841:
 8283              	# sieve_extend.c:870:  }
 870:sieve_extend.c **** 
 8284              		.loc 1 870 2 is_stmt 0 view .LVU2853
 8285 33c3 488D65D8 		lea	rsp, -40[rbp]	#,
 8286              	.LVL361:
 870:sieve_extend.c **** 
 8287              		.loc 1 870 2 view .LVU2854
 8288 33c7 5B       		pop	rbx	#
 8289 33c8 415C     		pop	r12	#
 8290 33ca 415D     		pop	r13	#
 8291 33cc 415E     		pop	r14	#
 8292 33ce 415F     		pop	r15	#
 8293 33d0 5D       		pop	rbp	#
 8294              		.cfi_remember_state
 8295              		.cfi_def_cfa 7, 8
 8296              	.LVL362:
 870:sieve_extend.c **** 
 8297              		.loc 1 870 2 view .LVU2855
 8298 33d1 C3       		ret	
 8299              	.LVL363:
 8300              		.p2align 4,,7
 8301 33d2 660F1F44 		.p2align 3
 8301      0000
 8302              	.L597:
 8303              		.cfi_restore_state
 870:sieve_extend.c **** 
 8304              		.loc 1 870 2 view .LVU2856
 8305 33d8 488B7424 		mov	rsi, QWORD PTR 80[rsp]	# destination_stop_word, %sfp
GAS LISTING /tmp/cc64mrzX.s 			page 232


 8305      50
 8306 33dd 4E8D243B 		lea	r12, [rbx+r15]	# ivtmp.421,
 8307              	# sieve_extend.c:867:         bitarray[copy_word] = bitarray[source_word];
 867:sieve_extend.c **** 
 8308              		.loc 1 867 39 view .LVU2857
 8309 33e1 4929C5   		sub	r13, rax	# tmp791, ivtmp.435
 8310              	.LVL364:
 867:sieve_extend.c **** 
 8311              		.loc 1 867 39 view .LVU2858
 8312 33e4 488D5CF3 		lea	rbx, 8[rbx+rsi*8]	# _701,
 8312      08
 8313 33e9 4989D9   		mov	r9, rbx	# tmp799, _701
 8314 33ec 4D29E1   		sub	r9, r12	# tmp799, ivtmp.421
 8315 33ef 4983E908 		sub	r9, 8	# tmp800,
 8316 33f3 49C1E903 		shr	r9, 3	# tmp798,
 8317 33f7 4983C101 		add	r9, 1	# tmp801,
 8318 33fb 4183E107 		and	r9d, 7	# tmp802,
 8319 33ff 0F849B00 		je	.L603	#,
 8319      0000
 8320 3405 4983F901 		cmp	r9, 1	# tmp802,
 8321 3409 746C     		je	.L756	#,
 8322 340b 4983F902 		cmp	r9, 2	# tmp802,
 8323 340f 7459     		je	.L757	#,
 8324 3411 4983F903 		cmp	r9, 3	# tmp802,
 8325 3415 7446     		je	.L758	#,
 8326 3417 4983F904 		cmp	r9, 4	# tmp802,
 8327 341b 7433     		je	.L759	#,
 8328 341d 4983F905 		cmp	r9, 5	# tmp802,
 8329 3421 7420     		je	.L760	#,
 8330 3423 4983F906 		cmp	r9, 6	# tmp802,
 8331 3427 740D     		je	.L761	#,
 867:sieve_extend.c **** 
 8332              		.loc 1 867 9 is_stmt 1 view .LVU2859
 8333              	# sieve_extend.c:867:         bitarray[copy_word] = bitarray[source_word];
 867:sieve_extend.c **** 
 8334              		.loc 1 867 39 is_stmt 0 view .LVU2860
 8335 3429 4F8B1CEC 		mov	r11, QWORD PTR [r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 8336 342d 4983C408 		add	r12, 8	# ivtmp.421,
 8337              	# sieve_extend.c:867:         bitarray[copy_word] = bitarray[source_word];
 867:sieve_extend.c **** 
 8338              		.loc 1 867 29 view .LVU2861
 8339 3431 4D895C24 		mov	QWORD PTR -8[r12], r11	# MEM[base: _604, offset: 0B], _170
 8339      F8
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8340              		.loc 1 866 48 is_stmt 1 view .LVU2862
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8341              		.loc 1 866 11 view .LVU2863
 8342              	.L761:
 867:sieve_extend.c **** 
 8343              		.loc 1 867 9 view .LVU2864
 8344              	# sieve_extend.c:867:         bitarray[copy_word] = bitarray[source_word];
 867:sieve_extend.c **** 
 8345              		.loc 1 867 39 is_stmt 0 view .LVU2865
 8346 3436 4B8B04EC 		mov	rax, QWORD PTR [r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 8347 343a 4983C408 		add	r12, 8	# ivtmp.421,
 8348              	# sieve_extend.c:867:         bitarray[copy_word] = bitarray[source_word];
 867:sieve_extend.c **** 
GAS LISTING /tmp/cc64mrzX.s 			page 233


 8349              		.loc 1 867 29 view .LVU2866
 8350 343e 49894424 		mov	QWORD PTR -8[r12], rax	# MEM[base: _604, offset: 0B], _170
 8350      F8
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8351              		.loc 1 866 48 is_stmt 1 view .LVU2867
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8352              		.loc 1 866 11 view .LVU2868
 8353              	.L760:
 867:sieve_extend.c **** 
 8354              		.loc 1 867 9 view .LVU2869
 8355              	# sieve_extend.c:867:         bitarray[copy_word] = bitarray[source_word];
 867:sieve_extend.c **** 
 8356              		.loc 1 867 39 is_stmt 0 view .LVU2870
 8357 3443 4B8B14EC 		mov	rdx, QWORD PTR [r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 8358 3447 4983C408 		add	r12, 8	# ivtmp.421,
 8359              	# sieve_extend.c:867:         bitarray[copy_word] = bitarray[source_word];
 867:sieve_extend.c **** 
 8360              		.loc 1 867 29 view .LVU2871
 8361 344b 49895424 		mov	QWORD PTR -8[r12], rdx	# MEM[base: _604, offset: 0B], _170
 8361      F8
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8362              		.loc 1 866 48 is_stmt 1 view .LVU2872
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8363              		.loc 1 866 11 view .LVU2873
 8364              	.L759:
 867:sieve_extend.c **** 
 8365              		.loc 1 867 9 view .LVU2874
 8366              	# sieve_extend.c:867:         bitarray[copy_word] = bitarray[source_word];
 867:sieve_extend.c **** 
 8367              		.loc 1 867 39 is_stmt 0 view .LVU2875
 8368 3450 4F8B14EC 		mov	r10, QWORD PTR [r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 8369 3454 4983C408 		add	r12, 8	# ivtmp.421,
 8370              	# sieve_extend.c:867:         bitarray[copy_word] = bitarray[source_word];
 867:sieve_extend.c **** 
 8371              		.loc 1 867 29 view .LVU2876
 8372 3458 4D895424 		mov	QWORD PTR -8[r12], r10	# MEM[base: _604, offset: 0B], _170
 8372      F8
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8373              		.loc 1 866 48 is_stmt 1 view .LVU2877
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8374              		.loc 1 866 11 view .LVU2878
 8375              	.L758:
 867:sieve_extend.c **** 
 8376              		.loc 1 867 9 view .LVU2879
 8377              	# sieve_extend.c:867:         bitarray[copy_word] = bitarray[source_word];
 867:sieve_extend.c **** 
 8378              		.loc 1 867 39 is_stmt 0 view .LVU2880
 8379 345d 4F8B04EC 		mov	r8, QWORD PTR [r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 8380 3461 4983C408 		add	r12, 8	# ivtmp.421,
 8381              	# sieve_extend.c:867:         bitarray[copy_word] = bitarray[source_word];
 867:sieve_extend.c **** 
 8382              		.loc 1 867 29 view .LVU2881
 8383 3465 4D894424 		mov	QWORD PTR -8[r12], r8	# MEM[base: _604, offset: 0B], _170
 8383      F8
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8384              		.loc 1 866 48 is_stmt 1 view .LVU2882
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
GAS LISTING /tmp/cc64mrzX.s 			page 234


 8385              		.loc 1 866 11 view .LVU2883
 8386              	.L757:
 867:sieve_extend.c **** 
 8387              		.loc 1 867 9 view .LVU2884
 8388              	# sieve_extend.c:867:         bitarray[copy_word] = bitarray[source_word];
 867:sieve_extend.c **** 
 8389              		.loc 1 867 39 is_stmt 0 view .LVU2885
 8390 346a 4F8B3CEC 		mov	r15, QWORD PTR [r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 8391 346e 4983C408 		add	r12, 8	# ivtmp.421,
 8392              	# sieve_extend.c:867:         bitarray[copy_word] = bitarray[source_word];
 867:sieve_extend.c **** 
 8393              		.loc 1 867 29 view .LVU2886
 8394 3472 4D897C24 		mov	QWORD PTR -8[r12], r15	# MEM[base: _604, offset: 0B], _170
 8394      F8
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8395              		.loc 1 866 48 is_stmt 1 view .LVU2887
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8396              		.loc 1 866 11 view .LVU2888
 8397              	.L756:
 867:sieve_extend.c **** 
 8398              		.loc 1 867 9 view .LVU2889
 8399              	# sieve_extend.c:867:         bitarray[copy_word] = bitarray[source_word];
 867:sieve_extend.c **** 
 8400              		.loc 1 867 39 is_stmt 0 view .LVU2890
 8401 3477 4B8B0CEC 		mov	rcx, QWORD PTR [r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 8402 347b 4983C408 		add	r12, 8	# ivtmp.421,
 8403              	# sieve_extend.c:867:         bitarray[copy_word] = bitarray[source_word];
 867:sieve_extend.c **** 
 8404              		.loc 1 867 29 view .LVU2891
 8405 347f 49894C24 		mov	QWORD PTR -8[r12], rcx	# MEM[base: _604, offset: 0B], _170
 8405      F8
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8406              		.loc 1 866 48 is_stmt 1 view .LVU2892
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8407              		.loc 1 866 11 view .LVU2893
 8408              	# sieve_extend.c:866:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8409              		.loc 1 866 5 is_stmt 0 view .LVU2894
 8410 3484 4939DC   		cmp	r12, rbx	# ivtmp.421, _701
 8411 3487 7517     		jne	.L603	#,
 8412              	.LVL365:
 8413              	.L840:
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8414              		.loc 1 866 5 view .LVU2895
 8415 3489 C5F877   		vzeroupper
 8416              	# sieve_extend.c:870:  }
 870:sieve_extend.c **** 
 8417              		.loc 1 870 2 view .LVU2896
 8418 348c 488D65D8 		lea	rsp, -40[rbp]	#,
 8419              	.LVL366:
 870:sieve_extend.c **** 
 8420              		.loc 1 870 2 view .LVU2897
 8421 3490 5B       		pop	rbx	#
 8422 3491 415C     		pop	r12	#
 8423 3493 415D     		pop	r13	#
 8424 3495 415E     		pop	r14	#
 8425 3497 415F     		pop	r15	#
GAS LISTING /tmp/cc64mrzX.s 			page 235


 8426 3499 5D       		pop	rbp	#
 8427              		.cfi_remember_state
 8428              		.cfi_def_cfa 7, 8
 8429              	.LVL367:
 870:sieve_extend.c **** 
 8430              		.loc 1 870 2 view .LVU2898
 8431 349a C3       		ret	
 8432              	.LVL368:
 8433 349b 0F1F4400 		.p2align 4,,7
 8433      00
 8434              		.p2align 3
 8435              	.L603:
 8436              		.cfi_restore_state
 867:sieve_extend.c **** 
 8437              		.loc 1 867 9 is_stmt 1 view .LVU2899
 8438              	# sieve_extend.c:867:         bitarray[copy_word] = bitarray[source_word];
 867:sieve_extend.c **** 
 8439              		.loc 1 867 39 is_stmt 0 view .LVU2900
 8440 34a0 4F8B34EC 		mov	r14, QWORD PTR [r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 8441              	# sieve_extend.c:867:         bitarray[copy_word] = bitarray[source_word];
 867:sieve_extend.c **** 
 8442              		.loc 1 867 29 view .LVU2901
 8443 34a4 4D893424 		mov	QWORD PTR [r12], r14	# MEM[base: _604, offset: 0B], _170
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8444              		.loc 1 866 48 is_stmt 1 view .LVU2902
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8445              		.loc 1 866 11 view .LVU2903
 867:sieve_extend.c **** 
 8446              		.loc 1 867 9 view .LVU2904
 8447              	# sieve_extend.c:867:         bitarray[copy_word] = bitarray[source_word];
 867:sieve_extend.c **** 
 8448              		.loc 1 867 39 is_stmt 0 view .LVU2905
 8449 34a8 4B8B7CEC 		mov	rdi, QWORD PTR 8[r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 8449      08
 8450              	# sieve_extend.c:867:         bitarray[copy_word] = bitarray[source_word];
 867:sieve_extend.c **** 
 8451              		.loc 1 867 29 view .LVU2906
 8452 34ad 49897C24 		mov	QWORD PTR 8[r12], rdi	# MEM[base: _604, offset: 0B], _170
 8452      08
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8453              		.loc 1 866 48 is_stmt 1 view .LVU2907
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8454              		.loc 1 866 11 view .LVU2908
 867:sieve_extend.c **** 
 8455              		.loc 1 867 9 view .LVU2909
 8456              	# sieve_extend.c:867:         bitarray[copy_word] = bitarray[source_word];
 867:sieve_extend.c **** 
 8457              		.loc 1 867 39 is_stmt 0 view .LVU2910
 8458 34b2 4B8B74EC 		mov	rsi, QWORD PTR 16[r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 8458      10
 8459              	# sieve_extend.c:867:         bitarray[copy_word] = bitarray[source_word];
 867:sieve_extend.c **** 
 8460              		.loc 1 867 29 view .LVU2911
 8461 34b7 49897424 		mov	QWORD PTR 16[r12], rsi	# MEM[base: _604, offset: 0B], _170
 8461      10
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8462              		.loc 1 866 48 is_stmt 1 view .LVU2912
GAS LISTING /tmp/cc64mrzX.s 			page 236


 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8463              		.loc 1 866 11 view .LVU2913
 867:sieve_extend.c **** 
 8464              		.loc 1 867 9 view .LVU2914
 8465              	# sieve_extend.c:867:         bitarray[copy_word] = bitarray[source_word];
 867:sieve_extend.c **** 
 8466              		.loc 1 867 39 is_stmt 0 view .LVU2915
 8467 34bc 4F8B4CEC 		mov	r9, QWORD PTR 24[r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 8467      18
 8468              	# sieve_extend.c:867:         bitarray[copy_word] = bitarray[source_word];
 867:sieve_extend.c **** 
 8469              		.loc 1 867 29 view .LVU2916
 8470 34c1 4D894C24 		mov	QWORD PTR 24[r12], r9	# MEM[base: _604, offset: 0B], _170
 8470      18
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8471              		.loc 1 866 48 is_stmt 1 view .LVU2917
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8472              		.loc 1 866 11 view .LVU2918
 867:sieve_extend.c **** 
 8473              		.loc 1 867 9 view .LVU2919
 8474              	# sieve_extend.c:867:         bitarray[copy_word] = bitarray[source_word];
 867:sieve_extend.c **** 
 8475              		.loc 1 867 39 is_stmt 0 view .LVU2920
 8476 34c6 4F8B5CEC 		mov	r11, QWORD PTR 32[r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 8476      20
 8477              	# sieve_extend.c:867:         bitarray[copy_word] = bitarray[source_word];
 867:sieve_extend.c **** 
 8478              		.loc 1 867 29 view .LVU2921
 8479 34cb 4D895C24 		mov	QWORD PTR 32[r12], r11	# MEM[base: _604, offset: 0B], _170
 8479      20
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8480              		.loc 1 866 48 is_stmt 1 view .LVU2922
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8481              		.loc 1 866 11 view .LVU2923
 867:sieve_extend.c **** 
 8482              		.loc 1 867 9 view .LVU2924
 8483              	# sieve_extend.c:867:         bitarray[copy_word] = bitarray[source_word];
 867:sieve_extend.c **** 
 8484              		.loc 1 867 39 is_stmt 0 view .LVU2925
 8485 34d0 4B8B44EC 		mov	rax, QWORD PTR 40[r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 8485      28
 8486              	# sieve_extend.c:867:         bitarray[copy_word] = bitarray[source_word];
 867:sieve_extend.c **** 
 8487              		.loc 1 867 29 view .LVU2926
 8488 34d5 49894424 		mov	QWORD PTR 40[r12], rax	# MEM[base: _604, offset: 0B], _170
 8488      28
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8489              		.loc 1 866 48 is_stmt 1 view .LVU2927
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8490              		.loc 1 866 11 view .LVU2928
 867:sieve_extend.c **** 
 8491              		.loc 1 867 9 view .LVU2929
 8492              	# sieve_extend.c:867:         bitarray[copy_word] = bitarray[source_word];
 867:sieve_extend.c **** 
 8493              		.loc 1 867 39 is_stmt 0 view .LVU2930
 8494 34da 4B8B54EC 		mov	rdx, QWORD PTR 48[r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 8494      30
GAS LISTING /tmp/cc64mrzX.s 			page 237


 8495              	# sieve_extend.c:867:         bitarray[copy_word] = bitarray[source_word];
 867:sieve_extend.c **** 
 8496              		.loc 1 867 29 view .LVU2931
 8497 34df 49895424 		mov	QWORD PTR 48[r12], rdx	# MEM[base: _604, offset: 0B], _170
 8497      30
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8498              		.loc 1 866 48 is_stmt 1 view .LVU2932
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8499              		.loc 1 866 11 view .LVU2933
 867:sieve_extend.c **** 
 8500              		.loc 1 867 9 view .LVU2934
 8501              	# sieve_extend.c:867:         bitarray[copy_word] = bitarray[source_word];
 867:sieve_extend.c **** 
 8502              		.loc 1 867 39 is_stmt 0 view .LVU2935
 8503 34e4 4F8B54EC 		mov	r10, QWORD PTR 56[r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 8503      38
 8504 34e9 4983C440 		add	r12, 64	# ivtmp.421,
 8505              	# sieve_extend.c:867:         bitarray[copy_word] = bitarray[source_word];
 867:sieve_extend.c **** 
 8506              		.loc 1 867 29 view .LVU2936
 8507 34ed 4D895424 		mov	QWORD PTR -8[r12], r10	# MEM[base: _604, offset: 0B], _170
 8507      F8
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8508              		.loc 1 866 48 is_stmt 1 view .LVU2937
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8509              		.loc 1 866 11 view .LVU2938
 8510              	# sieve_extend.c:866:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8511              		.loc 1 866 5 is_stmt 0 view .LVU2939
 8512 34f2 4939DC   		cmp	r12, rbx	# ivtmp.421, _701
 8513 34f5 75A9     		jne	.L603	#,
 8514 34f7 EB90     		jmp	.L840	#
 8515              	.LVL369:
 8516 34f9 0F1F8000 		.p2align 4,,7
 8516      000000
 8517              		.p2align 3
 8518              	.L580:
 866:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8519              		.loc 1 866 5 view .LVU2940
 8520 3500 4C8B7424 		mov	r14, QWORD PTR 48[rsp]	# fast_loop_stop_word, %sfp
 8520      30
 8521 3505 4989C1   		mov	r9, rax	# tmp823, ivtmp.435
 8522 3508 49F7D1   		not	r9	# tmp823
 8523 350b 4801D9   		add	rcx, rbx	# ivtmp.466, bitarray
 8524              	.LBB403:
 8525              	.LBB384:
 8526              	.LBB373:
 8527              	# sieve_extend.c:691:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8528              		.loc 1 691 63 view .LVU2941
 8529 350e 4489FE   		mov	esi, r15d	# tmp1324, _18
 8530              	# sieve_extend.c:691:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8531              		.loc 1 691 42 view .LVU2942
 8532 3511 C4E29BF7 		shrx	rdx, QWORD PTR [rcx], r12	# tmp681, MEM[base: _743, offset: 0B], _12
 8532      11
 8533 3516 4D01F1   		add	r9, r14	# tmp824, fast_loop_stop_word
GAS LISTING /tmp/cc64mrzX.s 			page 238


 8534              	# sieve_extend.c:691:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8535              		.loc 1 691 63 view .LVU2943
 8536 3519 4589FA   		mov	r10d, r15d	# _18, shift_flipped
 8537              	# sieve_extend.c:690:         bitword_t source1 = bitarray[source_word+1];
 690:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8538              		.loc 1 690 19 view .LVU2944
 8539 351c 4C8B4108 		mov	r8, QWORD PTR 8[rcx]	# source1, MEM[base: _743, offset: 8B]
 8540              	# sieve_extend.c:691:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8541              		.loc 1 691 63 view .LVU2945
 8542 3520 C4C2C9F7 		shlx	rdi, r8, rsi	# tmp683, source1, tmp1324
 8542      F8
 8543 3525 49D1E9   		shr	r9	# tmp822
 8544              	# sieve_extend.c:691:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8545              		.loc 1 691 52 view .LVU2946
 8546 3528 4809FA   		or	rdx, rdi	# tmp684, tmp683
 8547              	# sieve_extend.c:694:         copy_word += 2;
 694:sieve_extend.c ****         source_word += 2;
 8548              		.loc 1 694 19 view .LVU2947
 8549 352b 488D7802 		lea	rdi, 2[rax]	# copy_word,
 8550 352f 49F7D3   		not	r11	# tmp794
 8551              	.LVL370:
 8552              	# sieve_extend.c:691:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8553              		.loc 1 691 52 view .LVU2948
 8554 3532 488914C3 		mov	QWORD PTR [rbx+rax*8], rdx	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 
 8555 3536 4183E103 		and	r9d, 3	# tmp825,
 8556              	.LVL371:
 689:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 8557              		.loc 1 689 9 is_stmt 1 view .LVU2949
 690:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8558              		.loc 1 690 9 view .LVU2950
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8559              		.loc 1 691 9 view .LVU2951
 692:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 8560              		.loc 1 692 9 view .LVU2952
 693:sieve_extend.c ****         copy_word += 2;
 8561              		.loc 1 693 9 view .LVU2953
 8562              	# sieve_extend.c:693:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 693:sieve_extend.c ****         copy_word += 2;
 8563              		.loc 1 693 42 is_stmt 0 view .LVU2954
 8564 353a C4429BF7 		shrx	r8, r8, r12	# tmp687, source1, _12
 8564      C0
 8565              	# sieve_extend.c:693:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 693:sieve_extend.c ****         copy_word += 2;
 8566              		.loc 1 693 63 view .LVU2955
 8567 353f C4E2A9F7 		shlx	rdx, QWORD PTR 16[rcx], r10	# tmp685, MEM[base: _743, offset: 16B], tmp1325
 8567      5110
 8568              	# sieve_extend.c:693:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 693:sieve_extend.c ****         copy_word += 2;
 8569              		.loc 1 693 52 view .LVU2956
 8570 3545 4909D0   		or	r8, rdx	# tmp688, tmp685
 8571              	.LBE373:
 8572              	# sieve_extend.c:688:     while (copy_word < fast_loop_stop_word) {
 688:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
GAS LISTING /tmp/cc64mrzX.s 			page 239


 8573              		.loc 1 688 11 view .LVU2957
 8574 3548 4939FE   		cmp	r14, rdi	# fast_loop_stop_word, copy_word
 8575 354b 4D8D143B 		lea	r10, [r11+rdi]	# distance,
 8576 354f 488D5110 		lea	rdx, 16[rcx]	# ivtmp.466,
 8577              	.LBB374:
 8578              	# sieve_extend.c:693:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 693:sieve_extend.c ****         copy_word += 2;
 8579              		.loc 1 693 52 view .LVU2958
 8580 3553 4C8944C3 		mov	QWORD PTR 8[rbx+rax*8], r8	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 
 8580      08
 8581              	.LVL372:
 694:sieve_extend.c ****         source_word += 2;
 8582              		.loc 1 694 9 is_stmt 1 view .LVU2959
 695:sieve_extend.c ****         distance += 2;
 8583              		.loc 1 695 9 view .LVU2960
 696:sieve_extend.c ****     }
 8584              		.loc 1 696 9 view .LVU2961
 696:sieve_extend.c ****     }
 8585              		.loc 1 696 9 is_stmt 0 view .LVU2962
 8586              	.LBE374:
 688:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8587              		.loc 1 688 11 is_stmt 1 view .LVU2963
 8588 3558 0F8644F6 		jbe	.L584	#,
 8588      FFFF
 8589 355e 4D85C9   		test	r9, r9	# tmp825
 8590 3561 0F848B00 		je	.L834	#,
 8590      0000
 8591 3567 4983F901 		cmp	r9, 1	# tmp825,
 8592 356b 7440     		je	.L768	#,
 8593 356d 4983F902 		cmp	r9, 2	# tmp825,
 8594 3571 0F857403 		jne	.L843	#,
 8594      0000
 8595              	.LVL373:
 8596              	.L769:
 8597              	.LBB375:
 689:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 8598              		.loc 1 689 9 view .LVU2964
 690:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8599              		.loc 1 690 9 view .LVU2965
 8600              	# sieve_extend.c:690:         bitword_t source1 = bitarray[source_word+1];
 690:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8601              		.loc 1 690 19 is_stmt 0 view .LVU2966
 8602 3577 488B7208 		mov	rsi, QWORD PTR 8[rdx]	# source1, MEM[base: _743, offset: 8B]
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8603              		.loc 1 691 9 is_stmt 1 view .LVU2967
 8604              	# sieve_extend.c:691:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8605              		.loc 1 691 42 is_stmt 0 view .LVU2968
 8606 357b C4E29BF7 		shrx	rcx, QWORD PTR [rdx], r12	# tmp1171, MEM[base: _743, offset: 0B], _12
 8606      0A
 8607              	.LVL374:
 8608              	# sieve_extend.c:691:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8609              		.loc 1 691 63 view .LVU2969
 8610 3580 4589F8   		mov	r8d, r15d	# tmp1427, _18
 8611 3583 C462B9F7 		shlx	r10, rsi, r8	# tmp1172, source1, tmp1427
 8611      D6
GAS LISTING /tmp/cc64mrzX.s 			page 240


 8612              	# sieve_extend.c:691:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8613              		.loc 1 691 52 view .LVU2970
 8614 3588 4C09D1   		or	rcx, r10	# tmp1173, tmp1172
 8615              	# sieve_extend.c:691:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8616              		.loc 1 691 63 view .LVU2971
 8617 358b 4589FE   		mov	r14d, r15d	# _18, shift_flipped
 8618              	# sieve_extend.c:693:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 693:sieve_extend.c ****         copy_word += 2;
 8619              		.loc 1 693 42 view .LVU2972
 8620 358e C4E29BF7 		shrx	rsi, rsi, r12	# tmp1176, source1, _12
 8620      F6
 8621              	# sieve_extend.c:691:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8622              		.loc 1 691 52 view .LVU2973
 8623 3593 48890CFB 		mov	QWORD PTR [rbx+rdi*8], rcx	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 
 8624              	.LVL375:
 692:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 8625              		.loc 1 692 9 is_stmt 1 view .LVU2974
 693:sieve_extend.c ****         copy_word += 2;
 8626              		.loc 1 693 9 view .LVU2975
 8627              	# sieve_extend.c:693:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 693:sieve_extend.c ****         copy_word += 2;
 8628              		.loc 1 693 63 is_stmt 0 view .LVU2976
 8629 3597 C46289F7 		shlx	r9, QWORD PTR 16[rdx], r14	# tmp1175, MEM[base: _743, offset: 16B], tmp1428
 8629      4A10
 8630              	# sieve_extend.c:693:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 693:sieve_extend.c ****         copy_word += 2;
 8631              		.loc 1 693 52 view .LVU2977
 8632 359d 4C09CE   		or	rsi, r9	# tmp1177, tmp1175
 8633 35a0 488974FB 		mov	QWORD PTR 8[rbx+rdi*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset:
 8633      08
 8634              	.LVL376:
 694:sieve_extend.c ****         source_word += 2;
 8635              		.loc 1 694 9 is_stmt 1 view .LVU2978
 8636 35a5 4883C210 		add	rdx, 16	# ivtmp.466,
 8637              	# sieve_extend.c:694:         copy_word += 2;
 694:sieve_extend.c ****         source_word += 2;
 8638              		.loc 1 694 19 is_stmt 0 view .LVU2979
 8639 35a9 4883C702 		add	rdi, 2	# copy_word,
 695:sieve_extend.c ****         distance += 2;
 8640              		.loc 1 695 9 is_stmt 1 view .LVU2980
 696:sieve_extend.c ****     }
 8641              		.loc 1 696 9 view .LVU2981
 696:sieve_extend.c ****     }
 8642              		.loc 1 696 9 is_stmt 0 view .LVU2982
 8643              	.LBE375:
 688:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8644              		.loc 1 688 11 is_stmt 1 view .LVU2983
 8645              	.LVL377:
 8646              	.L768:
 8647              	.LBB376:
 689:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 8648              		.loc 1 689 9 view .LVU2984
 690:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8649              		.loc 1 690 9 view .LVU2985
GAS LISTING /tmp/cc64mrzX.s 			page 241


 8650              	# sieve_extend.c:690:         bitword_t source1 = bitarray[source_word+1];
 690:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8651              		.loc 1 690 19 is_stmt 0 view .LVU2986
 8652 35ad 4C8B4A08 		mov	r9, QWORD PTR 8[rdx]	# source1, MEM[base: _743, offset: 8B]
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8653              		.loc 1 691 9 is_stmt 1 view .LVU2987
 8654              	# sieve_extend.c:691:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8655              		.loc 1 691 42 is_stmt 0 view .LVU2988
 8656 35b1 C4E29BF7 		shrx	rcx, QWORD PTR [rdx], r12	# tmp1181, MEM[base: _743, offset: 0B], _12
 8656      0A
 8657              	# sieve_extend.c:691:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8658              		.loc 1 691 63 view .LVU2989
 8659 35b6 4589F8   		mov	r8d, r15d	# tmp1429, _18
 8660 35b9 C442B9F7 		shlx	r10, r9, r8	# tmp1182, source1, tmp1429
 8660      D1
 8661              	# sieve_extend.c:691:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8662              		.loc 1 691 52 view .LVU2990
 8663 35be 4C09D1   		or	rcx, r10	# tmp1183, tmp1182
 8664              	# sieve_extend.c:691:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8665              		.loc 1 691 63 view .LVU2991
 8666 35c1 4589FE   		mov	r14d, r15d	# _18, shift_flipped
 8667              	# sieve_extend.c:693:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 693:sieve_extend.c ****         copy_word += 2;
 8668              		.loc 1 693 42 view .LVU2992
 8669 35c4 C4C29BF7 		shrx	rsi, r9, r12	# tmp1186, source1, _12
 8669      F1
 8670              	# sieve_extend.c:691:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8671              		.loc 1 691 52 view .LVU2993
 8672 35c9 48890CFB 		mov	QWORD PTR [rbx+rdi*8], rcx	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 
 8673              	.LVL378:
 692:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 8674              		.loc 1 692 9 is_stmt 1 view .LVU2994
 693:sieve_extend.c ****         copy_word += 2;
 8675              		.loc 1 693 9 view .LVU2995
 8676              	# sieve_extend.c:693:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 693:sieve_extend.c ****         copy_word += 2;
 8677              		.loc 1 693 63 is_stmt 0 view .LVU2996
 8678 35cd C4E289F7 		shlx	rcx, QWORD PTR 16[rdx], r14	# tmp1185, MEM[base: _743, offset: 16B], tmp1430
 8678      4A10
 8679              	# sieve_extend.c:693:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 693:sieve_extend.c ****         copy_word += 2;
 8680              		.loc 1 693 52 view .LVU2997
 8681 35d3 4809CE   		or	rsi, rcx	# tmp1187, tmp1185
 8682 35d6 488974FB 		mov	QWORD PTR 8[rbx+rdi*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset:
 8682      08
 8683              	.LVL379:
 694:sieve_extend.c ****         source_word += 2;
 8684              		.loc 1 694 9 is_stmt 1 view .LVU2998
 8685              	# sieve_extend.c:694:         copy_word += 2;
 694:sieve_extend.c ****         source_word += 2;
 8686              		.loc 1 694 19 is_stmt 0 view .LVU2999
 8687 35db 4883C702 		add	rdi, 2	# copy_word,
GAS LISTING /tmp/cc64mrzX.s 			page 242


 695:sieve_extend.c ****         distance += 2;
 8688              		.loc 1 695 9 is_stmt 1 view .LVU3000
 696:sieve_extend.c ****     }
 8689              		.loc 1 696 9 view .LVU3001
 8690 35df 4883C210 		add	rdx, 16	# ivtmp.466,
 8691              	.LBE376:
 8692              	# sieve_extend.c:688:     while (copy_word < fast_loop_stop_word) {
 688:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8693              		.loc 1 688 11 is_stmt 0 view .LVU3002
 8694 35e3 48397C24 		cmp	QWORD PTR 48[rsp], rdi	# %sfp, copy_word
 8694      30
 8695 35e8 4D8D143B 		lea	r10, [r11+rdi]	# distance,
 688:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8696              		.loc 1 688 11 is_stmt 1 view .LVU3003
 8697 35ec 0F86B0F5 		jbe	.L584	#,
 8697      FFFF
 8698              	.LVL380:
 8699              	.L834:
 688:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8700              		.loc 1 688 11 is_stmt 0 view .LVU3004
 8701 35f2 4489F9   		mov	ecx, r15d	# _18, shift_flipped
 8702              	.L583:
 8703              	.LVL381:
 8704              	.LBB377:
 689:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 8705              		.loc 1 689 9 is_stmt 1 view .LVU3005
 690:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8706              		.loc 1 690 9 view .LVU3006
 8707              	# sieve_extend.c:690:         bitword_t source1 = bitarray[source_word+1];
 690:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8708              		.loc 1 690 19 is_stmt 0 view .LVU3007
 8709 35f5 4C8B4A08 		mov	r9, QWORD PTR 8[rdx]	# source1, MEM[base: _743, offset: 8B]
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8710              		.loc 1 691 9 is_stmt 1 view .LVU3008
 8711              	# sieve_extend.c:691:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8712              		.loc 1 691 42 is_stmt 0 view .LVU3009
 8713 35f9 C4629BF7 		shrx	r8, QWORD PTR [rdx], r12	# tmp897, MEM[base: _743, offset: 0B], _12
 8713      02
 8714              	# sieve_extend.c:691:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8715              		.loc 1 691 63 view .LVU3010
 8716 35fe C442F1F7 		shlx	r14, r9, rcx	# tmp898, source1, _18
 8716      F1
 8717              	# sieve_extend.c:691:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8718              		.loc 1 691 52 view .LVU3011
 8719 3603 4D09F0   		or	r8, r14	# tmp899, tmp898
 8720              	# sieve_extend.c:693:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 693:sieve_extend.c ****         copy_word += 2;
 8721              		.loc 1 693 42 view .LVU3012
 8722 3606 C4429BF7 		shrx	r10, r9, r12	# tmp902, source1, _12
 8722      D1
 8723              	# sieve_extend.c:691:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8724              		.loc 1 691 52 view .LVU3013
 8725 360b 4C8904FB 		mov	QWORD PTR [rbx+rdi*8], r8	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 0
GAS LISTING /tmp/cc64mrzX.s 			page 243


 8726              	.LVL382:
 692:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 8727              		.loc 1 692 9 is_stmt 1 view .LVU3014
 693:sieve_extend.c ****         copy_word += 2;
 8728              		.loc 1 693 9 view .LVU3015
 8729              	# sieve_extend.c:693:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 693:sieve_extend.c ****         copy_word += 2;
 8730              		.loc 1 693 63 is_stmt 0 view .LVU3016
 8731 360f C4E2F1F7 		shlx	rsi, QWORD PTR 16[rdx], rcx	# tmp901, MEM[base: _743, offset: 16B], _18
 8731      7210
 8732              	# sieve_extend.c:693:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 693:sieve_extend.c ****         copy_word += 2;
 8733              		.loc 1 693 52 view .LVU3017
 8734 3615 4C09D6   		or	rsi, r10	# tmp903, tmp902
 8735 3618 488974FB 		mov	QWORD PTR 8[rbx+rdi*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset:
 8735      08
 8736              	.LVL383:
 694:sieve_extend.c ****         source_word += 2;
 8737              		.loc 1 694 9 is_stmt 1 view .LVU3018
 8738              	# sieve_extend.c:694:         copy_word += 2;
 694:sieve_extend.c ****         source_word += 2;
 8739              		.loc 1 694 19 is_stmt 0 view .LVU3019
 8740 361d 4C8D4F02 		lea	r9, 2[rdi]	# tmp826,
 695:sieve_extend.c ****         distance += 2;
 8741              		.loc 1 695 9 is_stmt 1 view .LVU3020
 696:sieve_extend.c ****     }
 8742              		.loc 1 696 9 view .LVU3021
 696:sieve_extend.c ****     }
 8743              		.loc 1 696 9 is_stmt 0 view .LVU3022
 8744              	.LBE377:
 688:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8745              		.loc 1 688 11 is_stmt 1 view .LVU3023
 8746              	.LBB378:
 689:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 8747              		.loc 1 689 9 view .LVU3024
 8748              	.LVL384:
 690:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8749              		.loc 1 690 9 view .LVU3025
 8750              	# sieve_extend.c:690:         bitword_t source1 = bitarray[source_word+1];
 690:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8751              		.loc 1 690 19 is_stmt 0 view .LVU3026
 8752 3621 4C8B4218 		mov	r8, QWORD PTR 24[rdx]	# source1, MEM[base: _743, offset: 8B]
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8753              		.loc 1 691 9 is_stmt 1 view .LVU3027
 8754              	# sieve_extend.c:691:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8755              		.loc 1 691 42 is_stmt 0 view .LVU3028
 8756 3625 C4E29BF7 		shrx	rsi, QWORD PTR 16[rdx], r12	# tmp909, MEM[base: _743, offset: 0B], _12
 8756      7210
 8757              	# sieve_extend.c:691:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8758              		.loc 1 691 63 view .LVU3029
 8759 362b C442F1F7 		shlx	r14, r8, rcx	# tmp910, source1, _18
 8759      F0
 8760              	# sieve_extend.c:691:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8761              		.loc 1 691 52 view .LVU3030
GAS LISTING /tmp/cc64mrzX.s 			page 244


 8762 3630 4C09F6   		or	rsi, r14	# tmp911, tmp910
 8763 3633 4A8934CB 		mov	QWORD PTR [rbx+r9*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 0
 8764              	.LVL385:
 692:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 8765              		.loc 1 692 9 is_stmt 1 view .LVU3031
 693:sieve_extend.c ****         copy_word += 2;
 8766              		.loc 1 693 9 view .LVU3032
 8767              	# sieve_extend.c:693:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 693:sieve_extend.c ****         copy_word += 2;
 8768              		.loc 1 693 42 is_stmt 0 view .LVU3033
 8769 3637 C4429BF7 		shrx	r8, r8, r12	# tmp914, source1, _12
 8769      C0
 8770              	# sieve_extend.c:693:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 693:sieve_extend.c ****         copy_word += 2;
 8771              		.loc 1 693 63 view .LVU3034
 8772 363c 4C8B5220 		mov	r10, QWORD PTR 32[rdx]	# MEM[base: _743, offset: 16B], MEM[base: _743, offset: 16B]
 8773 3640 C4C2F1F7 		shlx	rsi, r10, rcx	# tmp913, MEM[base: _743, offset: 16B], _18
 8773      F2
 8774              	# sieve_extend.c:693:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 693:sieve_extend.c ****         copy_word += 2;
 8775              		.loc 1 693 52 view .LVU3035
 8776 3645 4909F0   		or	r8, rsi	# tmp915, tmp913
 8777 3648 4883C240 		add	rdx, 64	# ivtmp.466,
 8778 364c 4E8944CB 		mov	QWORD PTR 8[rbx+r9*8], r8	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 8
 8778      08
 8779              	.LVL386:
 694:sieve_extend.c ****         source_word += 2;
 8780              		.loc 1 694 9 is_stmt 1 view .LVU3036
 8781              	# sieve_extend.c:694:         copy_word += 2;
 694:sieve_extend.c ****         source_word += 2;
 8782              		.loc 1 694 19 is_stmt 0 view .LVU3037
 8783 3651 4C8D4F04 		lea	r9, 4[rdi]	# copy_word,
 695:sieve_extend.c ****         distance += 2;
 8784              		.loc 1 695 9 is_stmt 1 view .LVU3038
 696:sieve_extend.c ****     }
 8785              		.loc 1 696 9 view .LVU3039
 696:sieve_extend.c ****     }
 8786              		.loc 1 696 9 is_stmt 0 view .LVU3040
 8787              	.LBE378:
 688:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8788              		.loc 1 688 11 is_stmt 1 view .LVU3041
 8789              	.LBB379:
 689:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 8790              		.loc 1 689 9 view .LVU3042
 8791              	.LVL387:
 690:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8792              		.loc 1 690 9 view .LVU3043
 8793              	# sieve_extend.c:690:         bitword_t source1 = bitarray[source_word+1];
 690:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8794              		.loc 1 690 19 is_stmt 0 view .LVU3044
 8795 3655 4C8B52E8 		mov	r10, QWORD PTR -24[rdx]	# source1, MEM[base: _743, offset: 8B]
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8796              		.loc 1 691 9 is_stmt 1 view .LVU3045
 8797              	# sieve_extend.c:691:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8798              		.loc 1 691 42 is_stmt 0 view .LVU3046
 8799 3659 C4E29BF7 		shrx	rsi, QWORD PTR -32[rdx], r12	# tmp921, MEM[base: _743, offset: 0B], _12
GAS LISTING /tmp/cc64mrzX.s 			page 245


 8799      72E0
 8800              	# sieve_extend.c:691:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8801              		.loc 1 691 63 view .LVU3047
 8802 365f C442F1F7 		shlx	r14, r10, rcx	# tmp922, source1, _18
 8802      F2
 8803              	# sieve_extend.c:691:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8804              		.loc 1 691 52 view .LVU3048
 8805 3664 4C09F6   		or	rsi, r14	# tmp923, tmp922
 8806 3667 4A8934CB 		mov	QWORD PTR [rbx+r9*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 0
 8807              	.LVL388:
 692:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 8808              		.loc 1 692 9 is_stmt 1 view .LVU3049
 693:sieve_extend.c ****         copy_word += 2;
 8809              		.loc 1 693 9 view .LVU3050
 8810              	# sieve_extend.c:693:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 693:sieve_extend.c ****         copy_word += 2;
 8811              		.loc 1 693 42 is_stmt 0 view .LVU3051
 8812 366b C4429BF7 		shrx	r10, r10, r12	# tmp926, source1, _12
 8812      D2
 8813              	# sieve_extend.c:693:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 693:sieve_extend.c ****         copy_word += 2;
 8814              		.loc 1 693 63 view .LVU3052
 8815 3670 4C8B42F0 		mov	r8, QWORD PTR -16[rdx]	# MEM[base: _743, offset: 16B], MEM[base: _743, offset: 16B]
 8816 3674 C4C2F1F7 		shlx	rsi, r8, rcx	# tmp925, MEM[base: _743, offset: 16B], _18
 8816      F0
 8817              	# sieve_extend.c:693:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 693:sieve_extend.c ****         copy_word += 2;
 8818              		.loc 1 693 52 view .LVU3053
 8819 3679 4909F2   		or	r10, rsi	# tmp927, tmp925
 8820 367c 4E8954CB 		mov	QWORD PTR 8[rbx+r9*8], r10	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 
 8820      08
 8821              	.LVL389:
 694:sieve_extend.c ****         source_word += 2;
 8822              		.loc 1 694 9 is_stmt 1 view .LVU3054
 8823              	# sieve_extend.c:694:         copy_word += 2;
 694:sieve_extend.c ****         source_word += 2;
 8824              		.loc 1 694 19 is_stmt 0 view .LVU3055
 8825 3681 4C8D4F06 		lea	r9, 6[rdi]	# copy_word,
 695:sieve_extend.c ****         distance += 2;
 8826              		.loc 1 695 9 is_stmt 1 view .LVU3056
 696:sieve_extend.c ****     }
 8827              		.loc 1 696 9 view .LVU3057
 696:sieve_extend.c ****     }
 8828              		.loc 1 696 9 is_stmt 0 view .LVU3058
 8829              	.LBE379:
 688:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8830              		.loc 1 688 11 is_stmt 1 view .LVU3059
 8831              	.LBB380:
 689:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 8832              		.loc 1 689 9 view .LVU3060
 8833              	.LVL390:
 690:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8834              		.loc 1 690 9 view .LVU3061
 8835              	# sieve_extend.c:690:         bitword_t source1 = bitarray[source_word+1];
 690:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
GAS LISTING /tmp/cc64mrzX.s 			page 246


 8836              		.loc 1 690 19 is_stmt 0 view .LVU3062
 8837 3685 4C8B42F8 		mov	r8, QWORD PTR -8[rdx]	# source1, MEM[base: _743, offset: 8B]
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8838              		.loc 1 691 9 is_stmt 1 view .LVU3063
 8839              	# sieve_extend.c:691:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8840              		.loc 1 691 42 is_stmt 0 view .LVU3064
 8841 3689 C4E29BF7 		shrx	rsi, QWORD PTR -16[rdx], r12	# tmp933, MEM[base: _743, offset: 0B], _12
 8841      72F0
 8842              	# sieve_extend.c:691:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8843              		.loc 1 691 63 view .LVU3065
 8844 368f C442F1F7 		shlx	r14, r8, rcx	# tmp934, source1, _18
 8844      F0
 8845              	# sieve_extend.c:691:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8846              		.loc 1 691 52 view .LVU3066
 8847 3694 4C09F6   		or	rsi, r14	# tmp935, tmp934
 8848 3697 4A8934CB 		mov	QWORD PTR [rbx+r9*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 0
 8849              	.LVL391:
 692:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 8850              		.loc 1 692 9 is_stmt 1 view .LVU3067
 693:sieve_extend.c ****         copy_word += 2;
 8851              		.loc 1 693 9 view .LVU3068
 8852              	# sieve_extend.c:694:         copy_word += 2;
 694:sieve_extend.c ****         source_word += 2;
 8853              		.loc 1 694 19 is_stmt 0 view .LVU3069
 8854 369b 4883C708 		add	rdi, 8	# copy_word,
 8855              	# sieve_extend.c:693:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 693:sieve_extend.c ****         copy_word += 2;
 8856              		.loc 1 693 42 view .LVU3070
 8857 369f C4429BF7 		shrx	r8, r8, r12	# tmp938, source1, _12
 8857      C0
 8858              	# sieve_extend.c:693:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 693:sieve_extend.c ****         copy_word += 2;
 8859              		.loc 1 693 63 view .LVU3071
 8860 36a4 4C8B12   		mov	r10, QWORD PTR [rdx]	# MEM[base: _743, offset: 16B], MEM[base: _743, offset: 16B]
 8861 36a7 C4C2F1F7 		shlx	rsi, r10, rcx	# tmp937, MEM[base: _743, offset: 16B], _18
 8861      F2
 8862              	# sieve_extend.c:693:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 693:sieve_extend.c ****         copy_word += 2;
 8863              		.loc 1 693 52 view .LVU3072
 8864 36ac 4909F0   		or	r8, rsi	# tmp939, tmp937
 8865              	.LBE380:
 8866              	# sieve_extend.c:688:     while (copy_word < fast_loop_stop_word) {
 688:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8867              		.loc 1 688 11 view .LVU3073
 8868 36af 48397C24 		cmp	QWORD PTR 48[rsp], rdi	# %sfp, copy_word
 8868      30
 8869 36b4 4D8D143B 		lea	r10, [r11+rdi]	# distance,
 8870              	.LBB381:
 8871              	# sieve_extend.c:693:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 693:sieve_extend.c ****         copy_word += 2;
 8872              		.loc 1 693 52 view .LVU3074
 8873 36b8 4E8944CB 		mov	QWORD PTR 8[rbx+r9*8], r8	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 8
 8873      08
 8874              	.LVL392:
GAS LISTING /tmp/cc64mrzX.s 			page 247


 694:sieve_extend.c ****         source_word += 2;
 8875              		.loc 1 694 9 is_stmt 1 view .LVU3075
 695:sieve_extend.c ****         distance += 2;
 8876              		.loc 1 695 9 view .LVU3076
 696:sieve_extend.c ****     }
 8877              		.loc 1 696 9 view .LVU3077
 696:sieve_extend.c ****     }
 8878              		.loc 1 696 9 is_stmt 0 view .LVU3078
 8879              	.LBE381:
 688:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8880              		.loc 1 688 11 is_stmt 1 view .LVU3079
 8881 36bd 0F8732FF 		ja	.L583	#,
 8881      FFFF
 8882 36c3 E9DAF4FF 		jmp	.L584	#
 8882      FF
 8883              	.LVL393:
 8884              		.p2align 4,,7
 8885              		.p2align 3
 8886              	.L605:
 688:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8887              		.loc 1 688 11 is_stmt 0 view .LVU3080
 8888              	.LBE384:
 8889              	.LBE403:
 8890              	# sieve_extend.c:852:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8891              		.loc 1 852 5 view .LVU3081
 8892 36c8 4889C6   		mov	rsi, rax	# copy_word, ivtmp.435
 8893              	# sieve_extend.c:846:     source_word += distance;
 846:sieve_extend.c ****     copy_word += distance;
 8894              		.loc 1 846 17 view .LVU3082
 8895 36cb 4C89D9   		mov	rcx, r11	# source_word, _183
 8896 36ce 4D8D4301 		lea	r8, 1[r11]	# tmp793,
 8897 36d2 E9CDF5FF 		jmp	.L587	#
 8897      FF
 8898              		.p2align 4,,7
 8899 36d7 90       		.p2align 3
 8900              	.L586:
 846:sieve_extend.c ****     copy_word += distance;
 8901              		.loc 1 846 17 view .LVU3083
 8902 36d8 488B7C24 		mov	rdi, QWORD PTR 88[rsp]	# _183, %sfp
 8902      58
 8903 36dd 4801DA   		add	rdx, rbx	# ivtmp.443, bitarray
 8904 36e0 4C8B5424 		mov	r10, QWORD PTR 64[rsp]	# tmp749, %sfp
 8904      40
 8905              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 8906              		.loc 1 853 29 view .LVU3084
 8907 36e5 4829F8   		sub	rax, rdi	# tmp753, _183
 8908 36e8 4901FA   		add	r10, rdi	# tmp749, _183
 8909 36eb 4E8D4CD3 		lea	r9, 8[rbx+r10*8]	# tmp752,
 8909      08
 8910 36f0 4929F1   		sub	r9, rsi	# tmp752, _220
 8911 36f3 4C89CE   		mov	rsi, r9	# _729, tmp752
 8912 36f6 4929D1   		sub	r9, rdx	# tmp811, ivtmp.443
 8913 36f9 4983E908 		sub	r9, 8	# tmp812,
 8914 36fd 49C1E903 		shr	r9, 3	# tmp810,
 8915 3701 4983C101 		add	r9, 1	# tmp813,
GAS LISTING /tmp/cc64mrzX.s 			page 248


 8916 3705 4183E107 		and	r9d, 7	# tmp814,
 8917 3709 0F84F900 		je	.L831	#,
 8917      0000
 8918 370f 4983F901 		cmp	r9, 1	# tmp814,
 8919 3713 0F84CA00 		je	.L743	#,
 8919      0000
 8920 3719 4983F902 		cmp	r9, 2	# tmp814,
 8921 371d 0F84A500 		je	.L744	#,
 8921      0000
 8922 3723 4983F903 		cmp	r9, 3	# tmp814,
 8923 3727 0F848000 		je	.L745	#,
 8923      0000
 8924 372d 4983F904 		cmp	r9, 4	# tmp814,
 8925 3731 745E     		je	.L746	#,
 8926 3733 4983F905 		cmp	r9, 5	# tmp814,
 8927 3737 743D     		je	.L747	#,
 8928 3739 4983F906 		cmp	r9, 6	# tmp814,
 8929 373d 741C     		je	.L748	#,
 853:sieve_extend.c ****     }
 8930              		.loc 1 853 9 is_stmt 1 view .LVU3085
 8931              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 8932              		.loc 1 853 56 is_stmt 0 view .LVU3086
 8933 373f C4629BF7 		shrx	r8, QWORD PTR [rdx], r12	# tmp1090, MEM[base: _720, offset: 0B], _12
 8933      02
 8934              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 8935              		.loc 1 853 94 view .LVU3087
 8936 3744 440FB65C 		movzx	r11d, BYTE PTR 72[rsp]	# tmp1404, %sfp
 8936      2448
 8937 374a C462A1F7 		shlx	r14, QWORD PTR 8[rdx], r11	# tmp1092, MEM[base: _720, offset: 8B], tmp1404
 8937      7208
 8938              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 8939              		.loc 1 853 66 view .LVU3088
 8940 3750 4D09F0   		or	r8, r14	# tmp1093, tmp1092
 8941 3753 4C8904C2 		mov	QWORD PTR [rdx+rax*8], r8	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1093
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8942              		.loc 1 852 43 is_stmt 1 view .LVU3089
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8943              		.loc 1 852 11 view .LVU3090
 8944 3757 4883C208 		add	rdx, 8	# ivtmp.443,
 8945              	.L748:
 853:sieve_extend.c ****     }
 8946              		.loc 1 853 9 view .LVU3091
 8947              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 8948              		.loc 1 853 56 is_stmt 0 view .LVU3092
 8949 375b C4629BF7 		shrx	r15, QWORD PTR [rdx], r12	# tmp1095, MEM[base: _720, offset: 0B], _12
 8949      3A
 8950              	.LVL394:
 8951              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 8952              		.loc 1 853 94 view .LVU3093
 8953 3760 0FB64C24 		movzx	ecx, BYTE PTR 72[rsp]	# tmp1405, %sfp
 8953      48
 8954 3765 C462F1F7 		shlx	r13, QWORD PTR 8[rdx], rcx	# tmp1097, MEM[base: _720, offset: 8B], tmp1405
GAS LISTING /tmp/cc64mrzX.s 			page 249


 8954      6A08
 8955              	.LVL395:
 8956              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 8957              		.loc 1 853 66 view .LVU3094
 8958 376b 4D09EF   		or	r15, r13	# tmp1098, tmp1097
 8959 376e 4C893CC2 		mov	QWORD PTR [rdx+rax*8], r15	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1098
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8960              		.loc 1 852 43 is_stmt 1 view .LVU3095
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8961              		.loc 1 852 11 view .LVU3096
 8962 3772 4883C208 		add	rdx, 8	# ivtmp.443,
 8963              	.L747:
 853:sieve_extend.c ****     }
 8964              		.loc 1 853 9 view .LVU3097
 8965              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 8966              		.loc 1 853 56 is_stmt 0 view .LVU3098
 8967 3776 C4629BF7 		shrx	r10, QWORD PTR [rdx], r12	# tmp1100, MEM[base: _720, offset: 0B], _12
 8967      12
 8968              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 8969              		.loc 1 853 94 view .LVU3099
 8970 377b 0FB67C24 		movzx	edi, BYTE PTR 72[rsp]	# tmp1406, %sfp
 8970      48
 8971 3780 C462C1F7 		shlx	r9, QWORD PTR 8[rdx], rdi	# tmp1102, MEM[base: _720, offset: 8B], tmp1406
 8971      4A08
 8972              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 8973              		.loc 1 853 66 view .LVU3100
 8974 3786 4D09CA   		or	r10, r9	# tmp1103, tmp1102
 8975 3789 4C8914C2 		mov	QWORD PTR [rdx+rax*8], r10	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1103
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8976              		.loc 1 852 43 is_stmt 1 view .LVU3101
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8977              		.loc 1 852 11 view .LVU3102
 8978 378d 4883C208 		add	rdx, 8	# ivtmp.443,
 8979              	.L746:
 853:sieve_extend.c ****     }
 8980              		.loc 1 853 9 view .LVU3103
 8981              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 8982              		.loc 1 853 56 is_stmt 0 view .LVU3104
 8983 3791 C4629BF7 		shrx	r8, QWORD PTR [rdx], r12	# tmp1105, MEM[base: _720, offset: 0B], _12
 8983      02
 8984              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 8985              		.loc 1 853 94 view .LVU3105
 8986 3796 440FB65C 		movzx	r11d, BYTE PTR 72[rsp]	# tmp1407, %sfp
 8986      2448
 8987 379c C462A1F7 		shlx	r14, QWORD PTR 8[rdx], r11	# tmp1107, MEM[base: _720, offset: 8B], tmp1407
 8987      7208
 8988              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 8989              		.loc 1 853 66 view .LVU3106
 8990 37a2 4D09F0   		or	r8, r14	# tmp1108, tmp1107
 8991 37a5 4C8904C2 		mov	QWORD PTR [rdx+rax*8], r8	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1108
GAS LISTING /tmp/cc64mrzX.s 			page 250


 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8992              		.loc 1 852 43 is_stmt 1 view .LVU3107
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8993              		.loc 1 852 11 view .LVU3108
 8994 37a9 4883C208 		add	rdx, 8	# ivtmp.443,
 8995              	.L745:
 853:sieve_extend.c ****     }
 8996              		.loc 1 853 9 view .LVU3109
 8997              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 8998              		.loc 1 853 56 is_stmt 0 view .LVU3110
 8999 37ad C4629BF7 		shrx	r15, QWORD PTR [rdx], r12	# tmp1110, MEM[base: _720, offset: 0B], _12
 8999      3A
 9000              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 9001              		.loc 1 853 94 view .LVU3111
 9002 37b2 0FB64C24 		movzx	ecx, BYTE PTR 72[rsp]	# tmp1408, %sfp
 9002      48
 9003 37b7 C462F1F7 		shlx	r13, QWORD PTR 8[rdx], rcx	# tmp1112, MEM[base: _720, offset: 8B], tmp1408
 9003      6A08
 9004              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 9005              		.loc 1 853 66 view .LVU3112
 9006 37bd 4D09EF   		or	r15, r13	# tmp1113, tmp1112
 9007 37c0 4C893CC2 		mov	QWORD PTR [rdx+rax*8], r15	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1113
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 9008              		.loc 1 852 43 is_stmt 1 view .LVU3113
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 9009              		.loc 1 852 11 view .LVU3114
 9010 37c4 4883C208 		add	rdx, 8	# ivtmp.443,
 9011              	.L744:
 853:sieve_extend.c ****     }
 9012              		.loc 1 853 9 view .LVU3115
 9013              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 9014              		.loc 1 853 56 is_stmt 0 view .LVU3116
 9015 37c8 C4629BF7 		shrx	r10, QWORD PTR [rdx], r12	# tmp1115, MEM[base: _720, offset: 0B], _12
 9015      12
 9016              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 9017              		.loc 1 853 94 view .LVU3117
 9018 37cd 0FB67C24 		movzx	edi, BYTE PTR 72[rsp]	# tmp1409, %sfp
 9018      48
 9019 37d2 C462C1F7 		shlx	r9, QWORD PTR 8[rdx], rdi	# tmp1117, MEM[base: _720, offset: 8B], tmp1409
 9019      4A08
 9020              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 9021              		.loc 1 853 66 view .LVU3118
 9022 37d8 4D09CA   		or	r10, r9	# tmp1118, tmp1117
 9023 37db 4C8914C2 		mov	QWORD PTR [rdx+rax*8], r10	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1118
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 9024              		.loc 1 852 43 is_stmt 1 view .LVU3119
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 9025              		.loc 1 852 11 view .LVU3120
 9026 37df 4883C208 		add	rdx, 8	# ivtmp.443,
 9027              	.L743:
 853:sieve_extend.c ****     }
GAS LISTING /tmp/cc64mrzX.s 			page 251


 9028              		.loc 1 853 9 view .LVU3121
 9029              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 9030              		.loc 1 853 56 is_stmt 0 view .LVU3122
 9031 37e3 C4629BF7 		shrx	r8, QWORD PTR [rdx], r12	# tmp1120, MEM[base: _720, offset: 0B], _12
 9031      02
 9032              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 9033              		.loc 1 853 94 view .LVU3123
 9034 37e8 440FB65C 		movzx	r11d, BYTE PTR 72[rsp]	# tmp1410, %sfp
 9034      2448
 9035 37ee C462A1F7 		shlx	r14, QWORD PTR 8[rdx], r11	# tmp1122, MEM[base: _720, offset: 8B], tmp1410
 9035      7208
 9036              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 9037              		.loc 1 853 66 view .LVU3124
 9038 37f4 4D09F0   		or	r8, r14	# tmp1123, tmp1122
 9039 37f7 4C8904C2 		mov	QWORD PTR [rdx+rax*8], r8	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1123
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 9040              		.loc 1 852 43 is_stmt 1 view .LVU3125
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 9041              		.loc 1 852 11 view .LVU3126
 9042 37fb 4883C208 		add	rdx, 8	# ivtmp.443,
 9043              	# sieve_extend.c:852:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 9044              		.loc 1 852 5 is_stmt 0 view .LVU3127
 9045 37ff 4839F2   		cmp	rdx, rsi	# ivtmp.443, _729
 9046 3802 0F84C600 		je	.L817	#,
 9046      0000
 9047              	.L831:
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 9048              		.loc 1 852 5 view .LVU3128
 9049 3808 448B7C24 		mov	r15d, DWORD PTR 72[rsp]	# _18, %sfp
 9049      48
 9050              	.L591:
 853:sieve_extend.c ****     }
 9051              		.loc 1 853 9 is_stmt 1 view .LVU3129
 9052              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 9053              		.loc 1 853 94 is_stmt 0 view .LVU3130
 9054 380d C46281F7 		shlx	r13, QWORD PTR 8[rdx], r15	# tmp756, MEM[base: _720, offset: 8B], _18
 9054      6A08
 9055              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 9056              		.loc 1 853 56 view .LVU3131
 9057 3813 C4E29BF7 		shrx	rcx, QWORD PTR [rdx], r12	# tmp754, MEM[base: _720, offset: 0B], _12
 9057      0A
 9058              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 9059              		.loc 1 853 66 view .LVU3132
 9060 3818 4C09E9   		or	rcx, r13	# tmp758, tmp756
 9061 381b 4C8D5208 		lea	r10, 8[rdx]	# tmp815,
 9062 381f 48890CC2 		mov	QWORD PTR [rdx+rax*8], rcx	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp758
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 9063              		.loc 1 852 43 is_stmt 1 view .LVU3133
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 9064              		.loc 1 852 11 view .LVU3134
GAS LISTING /tmp/cc64mrzX.s 			page 252


 853:sieve_extend.c ****     }
 9065              		.loc 1 853 9 view .LVU3135
 9066              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 9067              		.loc 1 853 94 is_stmt 0 view .LVU3136
 9068 3823 C44281F7 		shlx	r9, QWORD PTR 8[r10], r15	# tmp988, MEM[base: _720, offset: 8B], _18
 9068      4A08
 9069              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 9070              		.loc 1 853 56 view .LVU3137
 9071 3829 C4E29BF7 		shrx	rdi, QWORD PTR 8[rdx], r12	# tmp986, MEM[base: _720, offset: 0B], _12
 9071      7A08
 9072              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 9073              		.loc 1 853 66 view .LVU3138
 9074 382f 4C09CF   		or	rdi, r9	# tmp989, tmp988
 9075 3832 4C8D5A10 		lea	r11, 16[rdx]	# ivtmp.443,
 9076 3836 488D4A18 		lea	rcx, 24[rdx]	# ivtmp.443,
 9077 383a 49893CC2 		mov	QWORD PTR [r10+rax*8], rdi	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp989
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 9078              		.loc 1 852 43 is_stmt 1 view .LVU3139
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 9079              		.loc 1 852 11 view .LVU3140
 853:sieve_extend.c ****     }
 9080              		.loc 1 853 9 view .LVU3141
 9081              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 9082              		.loc 1 853 56 is_stmt 0 view .LVU3142
 9083 383e C4629BF7 		shrx	r14, QWORD PTR 16[rdx], r12	# tmp992, MEM[base: _720, offset: 0B], _12
 9083      7210
 9084              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 9085              		.loc 1 853 94 view .LVU3143
 9086 3844 C44281F7 		shlx	r8, QWORD PTR 8[r11], r15	# tmp994, MEM[base: _720, offset: 8B], _18
 9086      4308
 9087              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 9088              		.loc 1 853 66 view .LVU3144
 9089 384a 4D09C6   		or	r14, r8	# tmp995, tmp994
 9090 384d 4D8934C3 		mov	QWORD PTR [r11+rax*8], r14	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp995
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 9091              		.loc 1 852 43 is_stmt 1 view .LVU3145
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 9092              		.loc 1 852 11 view .LVU3146
 853:sieve_extend.c ****     }
 9093              		.loc 1 853 9 view .LVU3147
 9094              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 9095              		.loc 1 853 56 is_stmt 0 view .LVU3148
 9096 3851 C4629BF7 		shrx	r13, QWORD PTR 24[rdx], r12	# tmp998, MEM[base: _720, offset: 0B], _12
 9096      6A18
 9097              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 9098              		.loc 1 853 94 view .LVU3149
 9099 3857 C46281F7 		shlx	r10, QWORD PTR 8[rcx], r15	# tmp1000, MEM[base: _720, offset: 8B], _18
 9099      5108
 9100              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
GAS LISTING /tmp/cc64mrzX.s 			page 253


 853:sieve_extend.c ****     }
 9101              		.loc 1 853 66 view .LVU3150
 9102 385d 4D09D5   		or	r13, r10	# tmp1001, tmp1000
 9103 3860 4C8D4A20 		lea	r9, 32[rdx]	# ivtmp.443,
 9104 3864 4C8D7228 		lea	r14, 40[rdx]	# ivtmp.443,
 9105 3868 4C892CC1 		mov	QWORD PTR [rcx+rax*8], r13	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1001
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 9106              		.loc 1 852 43 is_stmt 1 view .LVU3151
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 9107              		.loc 1 852 11 view .LVU3152
 853:sieve_extend.c ****     }
 9108              		.loc 1 853 9 view .LVU3153
 9109              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 9110              		.loc 1 853 94 is_stmt 0 view .LVU3154
 9111 386c C44281F7 		shlx	r11, QWORD PTR 8[r9], r15	# tmp1006, MEM[base: _720, offset: 8B], _18
 9111      5908
 9112              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 9113              		.loc 1 853 56 view .LVU3155
 9114 3872 C4E29BF7 		shrx	rdi, QWORD PTR 32[rdx], r12	# tmp1004, MEM[base: _720, offset: 0B], _12
 9114      7A20
 9115              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 9116              		.loc 1 853 66 view .LVU3156
 9117 3878 4C09DF   		or	rdi, r11	# tmp1007, tmp1006
 9118 387b 49893CC1 		mov	QWORD PTR [r9+rax*8], rdi	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1007
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 9119              		.loc 1 852 43 is_stmt 1 view .LVU3157
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 9120              		.loc 1 852 11 view .LVU3158
 853:sieve_extend.c ****     }
 9121              		.loc 1 853 9 view .LVU3159
 9122              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 9123              		.loc 1 853 56 is_stmt 0 view .LVU3160
 9124 387f C4E29BF7 		shrx	rcx, QWORD PTR 40[rdx], r12	# tmp1010, MEM[base: _720, offset: 0B], _12
 9124      4A28
 9125              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 9126              		.loc 1 853 94 view .LVU3161
 9127 3885 C44281F7 		shlx	r8, QWORD PTR 8[r14], r15	# tmp1012, MEM[base: _720, offset: 8B], _18
 9127      4608
 9128              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 9129              		.loc 1 853 66 view .LVU3162
 9130 388b 4C09C1   		or	rcx, r8	# tmp1013, tmp1012
 9131 388e 4C8D6A30 		lea	r13, 48[rdx]	# ivtmp.443,
 9132 3892 4C8D5A38 		lea	r11, 56[rdx]	# ivtmp.443,
 9133 3896 49890CC6 		mov	QWORD PTR [r14+rax*8], rcx	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1013
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 9134              		.loc 1 852 43 is_stmt 1 view .LVU3163
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 9135              		.loc 1 852 11 view .LVU3164
 853:sieve_extend.c ****     }
 9136              		.loc 1 853 9 view .LVU3165
 9137              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
GAS LISTING /tmp/cc64mrzX.s 			page 254


 853:sieve_extend.c ****     }
 9138              		.loc 1 853 56 is_stmt 0 view .LVU3166
 9139 389a C4629BF7 		shrx	r10, QWORD PTR 48[rdx], r12	# tmp1016, MEM[base: _720, offset: 0B], _12
 9139      5230
 9140              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 9141              		.loc 1 853 94 view .LVU3167
 9142 38a0 C44281F7 		shlx	r9, QWORD PTR 8[r13], r15	# tmp1018, MEM[base: _720, offset: 8B], _18
 9142      4D08
 9143              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 9144              		.loc 1 853 66 view .LVU3168
 9145 38a6 4D09CA   		or	r10, r9	# tmp1019, tmp1018
 9146 38a9 4D8954C5 		mov	QWORD PTR 0[r13+rax*8], r10	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1019
 9146      00
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 9147              		.loc 1 852 43 is_stmt 1 view .LVU3169
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 9148              		.loc 1 852 11 view .LVU3170
 853:sieve_extend.c ****     }
 9149              		.loc 1 853 9 view .LVU3171
 9150 38ae 4883C240 		add	rdx, 64	# ivtmp.443,
 9151              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 9152              		.loc 1 853 56 is_stmt 0 view .LVU3172
 9153 38b2 C4E29BF7 		shrx	rdi, QWORD PTR -8[rdx], r12	# tmp1022, MEM[base: _720, offset: 0B], _12
 9153      7AF8
 9154              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 9155              		.loc 1 853 94 view .LVU3173
 9156 38b8 C44281F7 		shlx	r14, QWORD PTR 8[r11], r15	# tmp1024, MEM[base: _720, offset: 8B], _18
 9156      7308
 9157              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 9158              		.loc 1 853 66 view .LVU3174
 9159 38be 4C09F7   		or	rdi, r14	# tmp1025, tmp1024
 9160              	# sieve_extend.c:852:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 9161              		.loc 1 852 5 view .LVU3175
 9162 38c1 4839F2   		cmp	rdx, rsi	# ivtmp.443, _729
 9163              	# sieve_extend.c:853:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 853:sieve_extend.c ****     }
 9164              		.loc 1 853 66 view .LVU3176
 9165 38c4 49893CC3 		mov	QWORD PTR [r11+rax*8], rdi	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1025
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 9166              		.loc 1 852 43 is_stmt 1 view .LVU3177
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 9167              		.loc 1 852 11 view .LVU3178
 9168              	# sieve_extend.c:852:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 9169              		.loc 1 852 5 is_stmt 0 view .LVU3179
 9170 38c8 0F853FFF 		jne	.L591	#,
 9170      FFFF
 9171              	.L817:
 852:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 9172              		.loc 1 852 5 view .LVU3180
 9173 38ce 488B5424 		mov	rdx, QWORD PTR 64[rsp]	# aligned_copy_word, %sfp
GAS LISTING /tmp/cc64mrzX.s 			page 255


 9173      40
 9174 38d3 4C8D5201 		lea	r10, 1[rdx]	# ivtmp.435,
 9175 38d7 E9E9F6FF 		jmp	.L592	#
 9175      FF
 9176              	.LVL396:
 9177 38dc 0F1F4000 		.p2align 4,,7
 9178              		.p2align 3
 9179              	.L606:
 9180              	# sieve_extend.c:846:     source_word += distance;
 846:sieve_extend.c ****     copy_word += distance;
 9181              		.loc 1 846 17 view .LVU3181
 9182 38e0 4889C6   		mov	rsi, rax	# copy_word, ivtmp.435
 9183              	# sieve_extend.c:858:     source_word = copy_word - size; // recalibrate
 858:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 9184              		.loc 1 858 17 view .LVU3182
 9185 38e3 4D89EE   		mov	r14, r13	# source_word, source_word
 9186 38e6 E906F9FF 		jmp	.L598	#
 9186      FF
 9187              	.LVL397:
 9188              	.L843:
 9189              	.LBB404:
 9190              	.LBB385:
 9191              	.LBB382:
 689:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 9192              		.loc 1 689 9 is_stmt 1 view .LVU3183
 690:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 9193              		.loc 1 690 9 view .LVU3184
 9194              	# sieve_extend.c:690:         bitword_t source1 = bitarray[source_word+1];
 690:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 9195              		.loc 1 690 19 is_stmt 0 view .LVU3185
 9196 38eb 4C8B4A08 		mov	r9, QWORD PTR 8[rdx]	# source1, MEM[base: _743, offset: 8B]
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 9197              		.loc 1 691 9 is_stmt 1 view .LVU3186
 9198              	# sieve_extend.c:691:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 9199              		.loc 1 691 42 is_stmt 0 view .LVU3187
 9200 38ef C4E29BF7 		shrx	rsi, QWORD PTR [rdx], r12	# tmp1161, MEM[base: _743, offset: 0B], _12
 9200      32
 9201              	# sieve_extend.c:691:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 9202              		.loc 1 691 63 view .LVU3188
 9203 38f4 4589FA   		mov	r10d, r15d	# tmp1425, _18
 9204 38f7 C442A9F7 		shlx	r8, r9, r10	# tmp1162, source1, tmp1425
 9204      C1
 9205              	# sieve_extend.c:691:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 9206              		.loc 1 691 52 view .LVU3189
 9207 38fc 4C09C6   		or	rsi, r8	# tmp1163, tmp1162
 9208              	# sieve_extend.c:691:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 9209              		.loc 1 691 63 view .LVU3190
 9210 38ff 4589FE   		mov	r14d, r15d	# _18, shift_flipped
 9211              	# sieve_extend.c:691:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 691:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 9212              		.loc 1 691 52 view .LVU3191
 9213 3902 488934FB 		mov	QWORD PTR [rbx+rdi*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 
 9214              	.LVL398:
GAS LISTING /tmp/cc64mrzX.s 			page 256


 692:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 9215              		.loc 1 692 9 is_stmt 1 view .LVU3192
 693:sieve_extend.c ****         copy_word += 2;
 9216              		.loc 1 693 9 view .LVU3193
 9217              	# sieve_extend.c:693:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 693:sieve_extend.c ****         copy_word += 2;
 9218              		.loc 1 693 42 is_stmt 0 view .LVU3194
 9219 3906 C4429BF7 		shrx	r9, r9, r12	# tmp1166, source1, _12
 9219      C9
 9220              	# sieve_extend.c:693:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 693:sieve_extend.c ****         copy_word += 2;
 9221              		.loc 1 693 63 view .LVU3195
 9222 390b 488B5210 		mov	rdx, QWORD PTR 16[rdx]	# MEM[base: _743, offset: 16B], MEM[base: _743, offset: 16B]
 9223 390f C46289F7 		shlx	r10, rdx, r14	# tmp1165, MEM[base: _743, offset: 16B], tmp1426
 9223      D2
 9224              	# sieve_extend.c:693:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 693:sieve_extend.c ****         copy_word += 2;
 9225              		.loc 1 693 52 view .LVU3196
 9226 3914 4D09CA   		or	r10, r9	# tmp1167, tmp1166
 9227 3917 488D5120 		lea	rdx, 32[rcx]	# ivtmp.466,
 9228 391b 4C8954FB 		mov	QWORD PTR 8[rbx+rdi*8], r10	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset:
 9228      08
 9229              	.LVL399:
 694:sieve_extend.c ****         source_word += 2;
 9230              		.loc 1 694 9 is_stmt 1 view .LVU3197
 9231              	# sieve_extend.c:694:         copy_word += 2;
 694:sieve_extend.c ****         source_word += 2;
 9232              		.loc 1 694 19 is_stmt 0 view .LVU3198
 9233 3920 488D7804 		lea	rdi, 4[rax]	# copy_word,
 695:sieve_extend.c ****         distance += 2;
 9234              		.loc 1 695 9 is_stmt 1 view .LVU3199
 696:sieve_extend.c ****     }
 9235              		.loc 1 696 9 view .LVU3200
 696:sieve_extend.c ****     }
 9236              		.loc 1 696 9 is_stmt 0 view .LVU3201
 9237              	.LBE382:
 688:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 9238              		.loc 1 688 11 is_stmt 1 view .LVU3202
 9239 3924 E94EFCFF 		jmp	.L769	#
 9239      FF
 9240              	.LBE385:
 9241              	.LBE404:
 9242              		.cfi_endproc
 9243              	.LFE71:
 9245              		.section	.rodata.str1.1,"aMS",@progbits,1
 9246              	.LC4:
 9247 0000 25336A75 		.string	"%3ju "
 9247      2000
 9248              	.LC5:
 9249 0006 0A466F75 		.string	"\nFound %ju primes until %ju\n"
 9249      6E642025 
 9249      6A752070 
 9249      72696D65 
 9249      7320756E 
 9250              		.text
 9251 3929 0F1F8000 		.p2align 4
 9251      000000
GAS LISTING /tmp/cc64mrzX.s 			page 257


 9253              	show_primes.isra.0:
 9254              	.LVL400:
 9255              	.LFB86:
1029:sieve_extend.c ****     counter_t primeCount = 1;    // We already have 2
 9256              		.loc 1 1029 13 view -0
 9257              		.cfi_startproc
 9258              	.LBB405:
1031:sieve_extend.c ****         primeCount++;
 9259              		.loc 1 1031 30 view .LVU3204
 9260              	.LBE405:
 9261              	# sieve_extend.c:1029: static void show_primes(struct sieve_state *sieve, counter_t maxFactor) {
1029:sieve_extend.c ****     counter_t primeCount = 1;    // We already have 2
 9262              		.loc 1 1029 13 is_stmt 0 view .LVU3205
 9263 3930 4157     		push	r15	#
 9264              		.cfi_def_cfa_offset 16
 9265              		.cfi_offset 15, -16
 9266 3932 4156     		push	r14	#
 9267              		.cfi_def_cfa_offset 24
 9268              		.cfi_offset 14, -24
 9269 3934 4155     		push	r13	#
 9270              		.cfi_def_cfa_offset 32
 9271              		.cfi_offset 13, -32
 9272 3936 4154     		push	r12	#
 9273              		.cfi_def_cfa_offset 40
 9274              		.cfi_offset 12, -40
 9275 3938 4989F4   		mov	r12, rsi	# ISRA.79, tmp168
 9276 393b 55       		push	rbp	#
 9277              		.cfi_def_cfa_offset 48
 9278              		.cfi_offset 6, -48
 9279 393c 53       		push	rbx	#
 9280              		.cfi_def_cfa_offset 56
 9281              		.cfi_offset 3, -56
 9282 393d 488D6424 		lea	rsp, -8[rsp]	#,
 9282      F8
 9283              		.cfi_def_cfa_offset 64
 9284              	.LBB422:
 9285              	# sieve_extend.c:1031:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(s
1031:sieve_extend.c ****         primeCount++;
 9286              		.loc 1 1031 44 view .LVU3206
 9287 3942 488B36   		mov	rsi, QWORD PTR [rsi]	# prephitmp_86, *ISRA.79_32(D)
 9288              	# sieve_extend.c:1031:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(s
1031:sieve_extend.c ****         primeCount++;
 9289              		.loc 1 1031 5 view .LVU3207
 9290 3945 4883FE01 		cmp	rsi, 1	# prephitmp_86,
 9291 3949 0F867501 		jbe	.L851	#,
 9291      0000
 9292              	# sieve_extend.c:1033:         if (factor < maxFactor/2) {
1033:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 9293              		.loc 1 1033 31 view .LVU3208
 9294 394f 48D1EA   		shr	rdx	# maxFactor
 9295              	.LVL401:
1033:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 9296              		.loc 1 1033 31 view .LVU3209
 9297 3952 4989FD   		mov	r13, rdi	# ISRA.78, tmp167
 9298              	# sieve_extend.c:1031:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(s
1031:sieve_extend.c ****         primeCount++;
 9299              		.loc 1 1031 20 view .LVU3210
GAS LISTING /tmp/cc64mrzX.s 			page 258


 9300 3955 BB010000 		mov	ebx, 1	# factor,
 9300      00
 9301              	# sieve_extend.c:1033:         if (factor < maxFactor/2) {
1033:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 9302              		.loc 1 1033 31 view .LVU3211
 9303 395a 4889D5   		mov	rbp, rdx	# _4, maxFactor
 9304              	.LBE422:
 9305              	# sieve_extend.c:1030:     counter_t primeCount = 1;    // We already have 2
1030:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitarray, factor+
 9306              		.loc 1 1030 15 view .LVU3212
 9307 395d 41BF0100 		mov	r15d, 1	# primeCount,
 9307      0000
 9308              	.LBB423:
 9309              	.LBB406:
 9310              	.LBB407:
 9311              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 9312              		.file 3 "/usr/include/x86_64-linux-gnu/bits/stdio2.h"
   1:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** /* Checking macros for stdio functions.
   2:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    Copyright (C) 2004-2020 Free Software Foundation, Inc.
   3:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    This file is part of the GNU C Library.
   4:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
   5:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    The GNU C Library is free software; you can redistribute it and/or
   6:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    modify it under the terms of the GNU Lesser General Public
   7:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    License as published by the Free Software Foundation; either
   8:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    version 2.1 of the License, or (at your option) any later version.
   9:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  10:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    The GNU C Library is distributed in the hope that it will be useful,
  11:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  13:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    Lesser General Public License for more details.
  14:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  15:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    You should have received a copy of the GNU Lesser General Public
  16:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    License along with the GNU C Library; if not, see
  17:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    <https://www.gnu.org/licenses/>.  */
  18:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  19:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #ifndef _BITS_STDIO2_H
  20:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #define _BITS_STDIO2_H 1
  21:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  22:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #ifndef _STDIO_H
  23:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # error "Never include <bits/stdio2.h> directly; use <stdio.h> instead."
  24:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
  25:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  26:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __sprintf_chk (char *__restrict __s, int __flag, size_t __slen,
  27:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  const char *__restrict __format, ...) __THROW;
  28:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vsprintf_chk (char *__restrict __s, int __flag, size_t __slen,
  29:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   const char *__restrict __format,
  30:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   __gnuc_va_list __ap) __THROW;
  31:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  32:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #ifdef __va_arg_pack
  33:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  34:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (sprintf (char *__restrict __s, const char *__restrict __fmt, ...))
  35:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  36:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___sprintf_chk (__s, __USE_FORTIFY_LEVEL - 1,
  37:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				  __bos (__s), __fmt, __va_arg_pack ());
  38:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  39:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #elif !defined __cplusplus
  40:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # define sprintf(str, ...) \
GAS LISTING /tmp/cc64mrzX.s 			page 259


  41:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   __builtin___sprintf_chk (str, __USE_FORTIFY_LEVEL - 1, __bos (str), \
  42:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   __VA_ARGS__)
  43:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
  44:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  45:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  46:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (vsprintf (char *__restrict __s, const char *__restrict __fmt,
  47:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		 __gnuc_va_list __ap))
  48:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  49:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___vsprintf_chk (__s, __USE_FORTIFY_LEVEL - 1,
  50:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				   __bos (__s), __fmt, __ap);
  51:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  52:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  53:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #if defined __USE_ISOC99 || defined __USE_UNIX98
  54:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  55:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __snprintf_chk (char *__restrict __s, size_t __n, int __flag,
  56:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   size_t __slen, const char *__restrict __format,
  57:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   ...) __THROW;
  58:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vsnprintf_chk (char *__restrict __s, size_t __n, int __flag,
  59:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    size_t __slen, const char *__restrict __format,
  60:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    __gnuc_va_list __ap) __THROW;
  61:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  62:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # ifdef __va_arg_pack
  63:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  64:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (snprintf (char *__restrict __s, size_t __n,
  65:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		 const char *__restrict __fmt, ...))
  66:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  67:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
  68:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				   __bos (__s), __fmt, __va_arg_pack ());
  69:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  70:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # elif !defined __cplusplus
  71:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #  define snprintf(str, len, ...) \
  72:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   __builtin___snprintf_chk (str, len, __USE_FORTIFY_LEVEL - 1, __bos (str), \
  73:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    __VA_ARGS__)
  74:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # endif
  75:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  76:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  77:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (vsnprintf (char *__restrict __s, size_t __n,
  78:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		  const char *__restrict __fmt, __gnuc_va_list __ap))
  79:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  80:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___vsnprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
  81:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				    __bos (__s), __fmt, __ap);
  82:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  83:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  84:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
  85:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  86:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #if __USE_FORTIFY_LEVEL > 1
  87:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  88:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __fprintf_chk (FILE *__restrict __stream, int __flag,
  89:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  const char *__restrict __format, ...);
  90:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __printf_chk (int __flag, const char *__restrict __format, ...);
  91:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vfprintf_chk (FILE *__restrict __stream, int __flag,
  92:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   const char *__restrict __format, __gnuc_va_list __ap);
  93:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vprintf_chk (int __flag, const char *__restrict __format,
  94:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  __gnuc_va_list __ap);
  95:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  96:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # ifdef __va_arg_pack
  97:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
GAS LISTING /tmp/cc64mrzX.s 			page 260


  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** fprintf (FILE *__restrict __stream, const char *__restrict __fmt, ...)
  99:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt,
 101:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 102:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
 103:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
 104:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** printf (const char *__restrict __fmt, ...)
 106:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 107:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __printf_chk (__USE_FORTIFY_LEVEL - 1, __fmt, __va_arg_pack ());
 9313              		.loc 3 107 10 view .LVU3213
 9314 3963 49BECDCC 		movabs	r14, -3689348814741910323	# tmp136,
 9314      CCCCCCCC 
 9314      CCCC
 9315              	.LVL402:
 9316 396d 0F1F00   		.p2align 4
 9317              		.p2align 3
 9318              	.L850:
 9319              		.loc 3 107 10 view .LVU3214
 9320              	.LBE407:
 9321              	.LBE406:
1032:sieve_extend.c ****         if (factor < maxFactor/2) {
 9322              		.loc 1 1032 9 is_stmt 1 view .LVU3215
 9323              	# sieve_extend.c:1032:         primeCount++;
1032:sieve_extend.c ****         if (factor < maxFactor/2) {
 9324              		.loc 1 1032 19 is_stmt 0 view .LVU3216
 9325 3970 4983C701 		add	r15, 1	# primeCount,
 9326              	.LVL403:
1033:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 9327              		.loc 1 1033 9 is_stmt 1 view .LVU3217
 9328              	# sieve_extend.c:1033:         if (factor < maxFactor/2) {
1033:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 9329              		.loc 1 1033 12 is_stmt 0 view .LVU3218
 9330 3974 4839DD   		cmp	rbp, rbx	# _4, factor
 9331 3977 0F87FB00 		ja	.L874	#,
 9331      0000
 9332              	.L846:
1031:sieve_extend.c ****         primeCount++;
 9333              		.loc 1 1031 52 is_stmt 1 view .LVU3219
 9334              	.LVL404:
 9335              	# sieve_extend.c:1031:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(s
1031:sieve_extend.c ****         primeCount++;
 9336              		.loc 1 1031 61 is_stmt 0 view .LVU3220
 9337 397d 4D8B4500 		mov	r8, QWORD PTR 0[r13]	# _11, *ISRA.78_33(D)
 9338 3981 4883C301 		add	rbx, 1	# factor,
 9339              	.LVL405:
 9340              	.L873:
 9341              	.LBB412:
 9342              	.LBI412:
 121:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 9343              		.loc 1 121 25 is_stmt 1 view .LVU3221
 9344              	.LBB413:
 122:sieve_extend.c ****     return index;
 9345              		.loc 1 122 5 view .LVU3222
 122:sieve_extend.c ****     return index;
 9346              		.loc 1 122 11 view .LVU3223
 9347              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
GAS LISTING /tmp/cc64mrzX.s 			page 261


 122:sieve_extend.c ****     return index;
 9348              		.loc 1 122 21 is_stmt 0 view .LVU3224
 9349 3985 4889D9   		mov	rcx, rbx	# tmp124, factor
 9350 3988 48C1E906 		shr	rcx, 6	# tmp124,
 9351              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9352              		.loc 1 122 12 view .LVU3225
 9353 398c 4D8B0CC8 		mov	r9, QWORD PTR [r8+rcx*8]	# *_39,* _11
 9354              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9355              		.loc 1 122 11 view .LVU3226
 9356 3990 490FA3D9 		bt	r9, rbx	# *_39, factor
 9357 3994 0F83A600 		jnc	.L848	#,
 9357      0000
 122:sieve_extend.c ****     return index;
 9358              		.loc 1 122 58 is_stmt 1 view .LVU3227
 9359              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9360              		.loc 1 122 63 is_stmt 0 view .LVU3228
 9361 399a 4C8D5301 		lea	r10, 1[rbx]	# tmp138,
 9362              	.LVL406:
 9363              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9364              		.loc 1 122 21 view .LVU3229
 9365 399e 4D89D3   		mov	r11, r10	# tmp129, factor
 9366              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9367              		.loc 1 122 63 view .LVU3230
 9368 39a1 4C89D3   		mov	rbx, r10	# factor, tmp138
 122:sieve_extend.c ****     return index;
 9369              		.loc 1 122 11 is_stmt 1 view .LVU3231
 9370              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9371              		.loc 1 122 21 is_stmt 0 view .LVU3232
 9372 39a4 49C1EB06 		shr	r11, 6	# tmp129,
 9373              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9374              		.loc 1 122 12 view .LVU3233
 9375 39a8 4B8B04D8 		mov	rax, QWORD PTR [r8+r11*8]	# *_16, *_16
 9376              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9377              		.loc 1 122 11 view .LVU3234
 9378 39ac 4C0FA3D0 		bt	rax, r10	# *_16, factor
 9379 39b0 0F838A00 		jnc	.L848	#,
 9379      0000
 122:sieve_extend.c ****     return index;
 9380              		.loc 1 122 58 is_stmt 1 view .LVU3235
 9381              	.LVL407:
 9382              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9383              		.loc 1 122 63 is_stmt 0 view .LVU3236
 9384 39b6 4883C301 		add	rbx, 1	# factor,
 9385              	.LVL408:
 122:sieve_extend.c ****     return index;
 9386              		.loc 1 122 11 is_stmt 1 view .LVU3237
 9387              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
GAS LISTING /tmp/cc64mrzX.s 			page 262


 9388              		.loc 1 122 21 is_stmt 0 view .LVU3238
 9389 39ba 4889DA   		mov	rdx, rbx	# tmp139, factor
 9390 39bd 48C1EA06 		shr	rdx, 6	# tmp139,
 9391              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9392              		.loc 1 122 12 view .LVU3239
 9393 39c1 498B3CD0 		mov	rdi, QWORD PTR [r8+rdx*8]	# *_16, *_16
 9394              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9395              		.loc 1 122 11 view .LVU3240
 9396 39c5 480FA3DF 		bt	rdi, rbx	# *_16, factor
 9397 39c9 7375     		jnc	.L848	#,
 122:sieve_extend.c ****     return index;
 9398              		.loc 1 122 58 is_stmt 1 view .LVU3241
 9399              	.LVL409:
 9400              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9401              		.loc 1 122 63 is_stmt 0 view .LVU3242
 9402 39cb 498D5A02 		lea	rbx, 2[r10]	# factor,
 9403              	.LVL410:
 122:sieve_extend.c ****     return index;
 9404              		.loc 1 122 11 is_stmt 1 view .LVU3243
 9405              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9406              		.loc 1 122 21 is_stmt 0 view .LVU3244
 9407 39cf 4889D9   		mov	rcx, rbx	# tmp143, factor
 9408 39d2 48C1E906 		shr	rcx, 6	# tmp143,
 9409              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9410              		.loc 1 122 12 view .LVU3245
 9411 39d6 4D8B0CC8 		mov	r9, QWORD PTR [r8+rcx*8]	# *_16, *_16
 9412              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9413              		.loc 1 122 11 view .LVU3246
 9414 39da 490FA3D9 		bt	r9, rbx	# *_16, factor
 9415 39de 7360     		jnc	.L848	#,
 122:sieve_extend.c ****     return index;
 9416              		.loc 1 122 58 is_stmt 1 view .LVU3247
 9417              	.LVL411:
 9418              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9419              		.loc 1 122 63 is_stmt 0 view .LVU3248
 9420 39e0 498D5A03 		lea	rbx, 3[r10]	# factor,
 9421              	.LVL412:
 122:sieve_extend.c ****     return index;
 9422              		.loc 1 122 11 is_stmt 1 view .LVU3249
 9423              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9424              		.loc 1 122 21 is_stmt 0 view .LVU3250
 9425 39e4 4989DB   		mov	r11, rbx	# tmp147, factor
 9426 39e7 49C1EB06 		shr	r11, 6	# tmp147,
 9427              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9428              		.loc 1 122 12 view .LVU3251
 9429 39eb 4B8B04D8 		mov	rax, QWORD PTR [r8+r11*8]	# *_16, *_16
 9430              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
GAS LISTING /tmp/cc64mrzX.s 			page 263


 9431              		.loc 1 122 11 view .LVU3252
 9432 39ef 480FA3D8 		bt	rax, rbx	# *_16, factor
 9433 39f3 734B     		jnc	.L848	#,
 122:sieve_extend.c ****     return index;
 9434              		.loc 1 122 58 is_stmt 1 view .LVU3253
 9435              	.LVL413:
 9436              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9437              		.loc 1 122 63 is_stmt 0 view .LVU3254
 9438 39f5 498D5A04 		lea	rbx, 4[r10]	# factor,
 9439              	.LVL414:
 122:sieve_extend.c ****     return index;
 9440              		.loc 1 122 11 is_stmt 1 view .LVU3255
 9441              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9442              		.loc 1 122 21 is_stmt 0 view .LVU3256
 9443 39f9 4889DA   		mov	rdx, rbx	# tmp151, factor
 9444 39fc 48C1EA06 		shr	rdx, 6	# tmp151,
 9445              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9446              		.loc 1 122 12 view .LVU3257
 9447 3a00 498B3CD0 		mov	rdi, QWORD PTR [r8+rdx*8]	# *_16, *_16
 9448              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9449              		.loc 1 122 11 view .LVU3258
 9450 3a04 480FA3DF 		bt	rdi, rbx	# *_16, factor
 9451 3a08 7336     		jnc	.L848	#,
 122:sieve_extend.c ****     return index;
 9452              		.loc 1 122 58 is_stmt 1 view .LVU3259
 9453              	.LVL415:
 9454              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9455              		.loc 1 122 63 is_stmt 0 view .LVU3260
 9456 3a0a 498D5A05 		lea	rbx, 5[r10]	# factor,
 9457              	.LVL416:
 122:sieve_extend.c ****     return index;
 9458              		.loc 1 122 11 is_stmt 1 view .LVU3261
 9459              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9460              		.loc 1 122 21 is_stmt 0 view .LVU3262
 9461 3a0e 4889D9   		mov	rcx, rbx	# tmp155, factor
 9462 3a11 48C1E906 		shr	rcx, 6	# tmp155,
 9463              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9464              		.loc 1 122 12 view .LVU3263
 9465 3a15 4D8B0CC8 		mov	r9, QWORD PTR [r8+rcx*8]	# *_16, *_16
 9466              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9467              		.loc 1 122 11 view .LVU3264
 9468 3a19 490FA3D9 		bt	r9, rbx	# *_16, factor
 9469 3a1d 7321     		jnc	.L848	#,
 122:sieve_extend.c ****     return index;
 9470              		.loc 1 122 58 is_stmt 1 view .LVU3265
 9471              	.LVL417:
 9472              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9473              		.loc 1 122 63 is_stmt 0 view .LVU3266
GAS LISTING /tmp/cc64mrzX.s 			page 264


 9474 3a1f 498D5A06 		lea	rbx, 6[r10]	# factor,
 9475              	.LVL418:
 122:sieve_extend.c ****     return index;
 9476              		.loc 1 122 11 is_stmt 1 view .LVU3267
 9477              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9478              		.loc 1 122 21 is_stmt 0 view .LVU3268
 9479 3a23 4989DB   		mov	r11, rbx	# tmp159, factor
 9480 3a26 49C1EB06 		shr	r11, 6	# tmp159,
 9481              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9482              		.loc 1 122 12 view .LVU3269
 9483 3a2a 4B8B04D8 		mov	rax, QWORD PTR [r8+r11*8]	# *_16, *_16
 9484              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9485              		.loc 1 122 11 view .LVU3270
 9486 3a2e 480FA3D8 		bt	rax, rbx	# *_16, factor
 9487 3a32 730C     		jnc	.L848	#,
 122:sieve_extend.c ****     return index;
 9488              		.loc 1 122 58 is_stmt 1 view .LVU3271
 9489              	.LVL419:
 9490              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9491              		.loc 1 122 63 is_stmt 0 view .LVU3272
 9492 3a34 498D5A07 		lea	rbx, 7[r10]	# factor,
 9493              	.LVL420:
 122:sieve_extend.c ****     return index;
 9494              		.loc 1 122 11 is_stmt 1 view .LVU3273
 9495 3a38 E948FFFF 		jmp	.L873	#
 9495      FF
 9496 3a3d 0F1F00   		.p2align 4,,7
 9497              		.p2align 3
 9498              	.L848:
 9499              	.LVL421:
 122:sieve_extend.c ****     return index;
 9500              		.loc 1 122 11 is_stmt 0 view .LVU3274
 9501              	.LBE413:
 9502              	.LBE412:
1031:sieve_extend.c ****         primeCount++;
 9503              		.loc 1 1031 30 is_stmt 1 view .LVU3275
 9504              	# sieve_extend.c:1031:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(s
1031:sieve_extend.c ****         primeCount++;
 9505              		.loc 1 1031 5 is_stmt 0 view .LVU3276
 9506 3a40 4839F3   		cmp	rbx, rsi	# factor, prephitmp_86
 9507 3a43 0F8227FF 		jb	.L850	#,
 9507      FFFF
 9508              	.LVL422:
 9509              	.L845:
1031:sieve_extend.c ****         primeCount++;
 9510              		.loc 1 1031 5 view .LVU3277
 9511              	.LBE423:
1038:sieve_extend.c **** }
 9512              		.loc 1 1038 5 is_stmt 1 view .LVU3278
 9513              	.LBB424:
 9514              	.LBI424:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 9515              		.loc 3 105 1 view .LVU3279
GAS LISTING /tmp/cc64mrzX.s 			page 265


 9516              	.LBB425:
 9517              		.loc 3 107 3 view .LVU3280
 9518              	.LBE425:
 9519              	.LBE424:
 9520              	# sieve_extend.c:1039: }
1039:sieve_extend.c **** 
 9521              		.loc 1 1039 1 is_stmt 0 view .LVU3281
 9522 3a49 488D6424 		lea	rsp, 8[rsp]	#,
 9522      08
 9523              		.cfi_remember_state
 9524              		.cfi_def_cfa_offset 56
 9525              	.LBB429:
 9526              	.LBB426:
 9527              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 9528              		.loc 3 107 10 view .LVU3282
 9529 3a4e 4C89FA   		mov	rdx, r15	#, primeCount
 9530              	.LBE426:
 9531              	.LBE429:
 9532              	# sieve_extend.c:1039: }
1039:sieve_extend.c **** 
 9533              		.loc 1 1039 1 view .LVU3283
 9534 3a51 5B       		pop	rbx	#
 9535              		.cfi_def_cfa_offset 48
 9536              	# sieve_extend.c:1038:     printf("\nFound %ju primes until %ju\n",(uintmax_t)primeCount, (uintmax_
1038:sieve_extend.c **** }
 9537              		.loc 1 1038 5 view .LVU3284
 9538 3a52 488D4C36 		lea	rcx, 1[rsi+rsi]	# tmp135,
 9538      01
 9539              	.LBB430:
 9540              	.LBB427:
 9541              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 9542              		.loc 3 107 10 view .LVU3285
 9543 3a57 BF010000 		mov	edi, 1	#,
 9543      00
 9544 3a5c 31C0     		xor	eax, eax	#
 9545 3a5e 488D3500 		lea	rsi, .LC5[rip]	#,
 9545      000000
 9546              	.LBE427:
 9547              	.LBE430:
 9548              	# sieve_extend.c:1039: }
1039:sieve_extend.c **** 
 9549              		.loc 1 1039 1 view .LVU3286
 9550 3a65 5D       		pop	rbp	#
 9551              		.cfi_def_cfa_offset 40
 9552 3a66 415C     		pop	r12	#
 9553              		.cfi_def_cfa_offset 32
 9554 3a68 415D     		pop	r13	#
 9555              		.cfi_def_cfa_offset 24
 9556 3a6a 415E     		pop	r14	#
 9557              		.cfi_def_cfa_offset 16
 9558 3a6c 415F     		pop	r15	#
 9559              		.cfi_def_cfa_offset 8
 9560              	.LBB431:
 9561              	.LBB428:
 9562              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 9563              		.loc 3 107 10 view .LVU3287
 9564 3a6e E9000000 		jmp	__printf_chk@PLT	#
GAS LISTING /tmp/cc64mrzX.s 			page 266


 9564      00
 9565              	.LVL423:
 9566              		.p2align 4,,7
 9567 3a73 0F1F4400 		.p2align 3
 9567      00
 9568              	.L874:
 9569              		.cfi_restore_state
 9570              		.loc 3 107 10 view .LVU3288
 9571              	.LBE428:
 9572              	.LBE431:
 9573              	.LBB432:
1034:sieve_extend.c ****             if (primeCount % 10 == 0) printf("\n");
 9574              		.loc 1 1034 13 is_stmt 1 view .LVU3289
 9575              	.LBB414:
 9576              	.LBI406:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 9577              		.loc 3 105 1 view .LVU3290
 9578              	.LBB408:
 9579              		.loc 3 107 3 view .LVU3291
 9580              	.LBE408:
 9581              	.LBE414:
 9582              	# sieve_extend.c:1034:             printf("%3ju ",(uintmax_t)factor*2+1);
1034:sieve_extend.c ****             if (primeCount % 10 == 0) printf("\n");
 9583              		.loc 1 1034 13 is_stmt 0 view .LVU3292
 9584 3a78 488D541B 		lea	rdx, 1[rbx+rbx]	# tmp111,
 9584      01
 9585              	.LBB415:
 9586              	.LBB409:
 9587              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 9588              		.loc 3 107 10 view .LVU3293
 9589 3a7d BF010000 		mov	edi, 1	#,
 9589      00
 9590 3a82 31C0     		xor	eax, eax	#
 9591 3a84 488D3500 		lea	rsi, .LC4[rip]	#,
 9591      000000
 9592 3a8b E8000000 		call	__printf_chk@PLT	#
 9592      00
 9593              	.LVL424:
 9594              		.loc 3 107 10 view .LVU3294
 9595              	.LBE409:
 9596              	.LBE415:
1035:sieve_extend.c ****         }
 9597              		.loc 1 1035 13 is_stmt 1 view .LVU3295
 9598              	.LBB416:
 9599              	.LBB410:
 9600              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 9601              		.loc 3 107 10 is_stmt 0 view .LVU3296
 9602 3a90 4C89F8   		mov	rax, r15	# tmp120, primeCount
 9603              	.LBE410:
 9604              	.LBE416:
 9605              	# sieve_extend.c:1035:             if (primeCount % 10 == 0) printf("\n");
1035:sieve_extend.c ****         }
 9606              		.loc 1 1035 16 view .LVU3297
 9607 3a93 48BF9999 		movabs	rdi, 1844674407370955161	# tmp172,
 9607      99999999 
 9607      9919
 9608              	.LBB417:
GAS LISTING /tmp/cc64mrzX.s 			page 267


 9609              	.LBB411:
 9610              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 9611              		.loc 3 107 10 view .LVU3298
 9612 3a9d 490FAFC6 		imul	rax, r14	# tmp120, tmp136
 9613 3aa1 C4E3FBF0 		rorx	rdx, rax, 1	# tmp122, tmp120,
 9613      D001
 9614              	.LBE411:
 9615              	.LBE417:
 9616              	# sieve_extend.c:1035:             if (primeCount % 10 == 0) printf("\n");
1035:sieve_extend.c ****         }
 9617              		.loc 1 1035 16 view .LVU3299
 9618 3aa7 4839FA   		cmp	rdx, rdi	# tmp122, tmp172
 9619 3aaa 760C     		jbe	.L847	#,
 9620              	.L872:
 9621 3aac 498B3424 		mov	rsi, QWORD PTR [r12]	# prephitmp_86, *ISRA.79_32(D)
 9622              	.LBB418:
 9623              	.LBB419:
 9624              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 9625              		.loc 3 107 10 view .LVU3300
 9626 3ab0 E9C8FEFF 		jmp	.L846	#
 9626      FF
 9627              		.p2align 4,,7
 9628 3ab5 0F1F00   		.p2align 3
 9629              	.L847:
 9630              	.LBE419:
 9631              	.LBE418:
1035:sieve_extend.c ****         }
 9632              		.loc 1 1035 39 is_stmt 1 view .LVU3301
 9633              	.LVL425:
 9634              	.LBB421:
 9635              	.LBI418:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 9636              		.loc 3 105 1 view .LVU3302
 9637              	.LBB420:
 9638              		.loc 3 107 3 view .LVU3303
 9639              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 9640              		.loc 3 107 10 is_stmt 0 view .LVU3304
 9641 3ab8 BF0A0000 		mov	edi, 10	#,
 9641      00
 9642 3abd E8000000 		call	putchar@PLT	#
 9642      00
 9643              	.LVL426:
 9644 3ac2 EBE8     		jmp	.L872	#
 9645              	.LVL427:
 9646              	.L851:
 9647              		.loc 3 107 10 view .LVU3305
 9648              	.LBE420:
 9649              	.LBE421:
 9650              	.LBE432:
 9651              	# sieve_extend.c:1030:     counter_t primeCount = 1;    // We already have 2
1030:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitarray, factor+
 9652              		.loc 1 1030 15 view .LVU3306
 9653 3ac4 41BF0100 		mov	r15d, 1	# primeCount,
 9653      0000
 9654 3aca E97AFFFF 		jmp	.L845	#
 9654      FF
 9655              		.cfi_endproc
GAS LISTING /tmp/cc64mrzX.s 			page 268


 9656              	.LFE86:
 9658 3acf 90       		.p2align 4
 9660              	sieve:
 9661              	.LVL428:
 9662              	.LFB75:
1007:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 9663              		.loc 1 1007 86 is_stmt 1 view -0
 9664              		.cfi_startproc
1008:sieve_extend.c ****     counter_t prime     = 0;
 9665              		.loc 1 1008 5 view .LVU3308
 9666              	# sieve_extend.c:1007: static struct sieve_state *sieve(const counter_t maxints, const counter_t bl
1007:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 9667              		.loc 1 1007 86 is_stmt 0 view .LVU3309
 9668 3ad0 4157     		push	r15	#
 9669              		.cfi_def_cfa_offset 16
 9670              		.cfi_offset 15, -16
 9671 3ad2 4156     		push	r14	#
 9672              		.cfi_def_cfa_offset 24
 9673              		.cfi_offset 14, -24
 9674 3ad4 4155     		push	r13	#
 9675              		.cfi_def_cfa_offset 32
 9676              		.cfi_offset 13, -32
 9677 3ad6 4154     		push	r12	#
 9678              		.cfi_def_cfa_offset 40
 9679              		.cfi_offset 12, -40
 9680 3ad8 55       		push	rbp	#
 9681              		.cfi_def_cfa_offset 48
 9682              		.cfi_offset 6, -48
 9683 3ad9 53       		push	rbx	#
 9684              		.cfi_def_cfa_offset 56
 9685              		.cfi_offset 3, -56
 9686 3ada 4889FB   		mov	rbx, rdi	# maxints, tmp1244
 9687              	.LVL429:
 9688              	.LBB507:
 9689              	.LBI507:
 102:sieve_extend.c ****     struct sieve_state *sieve = aligned_alloc(8, sizeof(struct sieve_state));
 9690              		.loc 1 102 28 is_stmt 1 view .LVU3310
 9691              	.LBB508:
 103:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize*8) * anticiped_cache
 9692              		.loc 1 103 5 view .LVU3311
 9693              	# sieve_extend.c:103:     struct sieve_state *sieve = aligned_alloc(8, sizeof(struct sieve_state));
 103:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize*8) * anticiped_cache
 9694              		.loc 1 103 33 is_stmt 0 view .LVU3312
 9695 3add BF080000 		mov	edi, 8	#,
 9695      00
 9696              	.LVL430:
 103:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize*8) * anticiped_cache
 9697              		.loc 1 103 33 view .LVU3313
 9698              	.LBE508:
 9699              	.LBE507:
 9700              	# sieve_extend.c:1007: static struct sieve_state *sieve(const counter_t maxints, const counter_t bl
1007:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 9701              		.loc 1 1007 86 view .LVU3314
 9702 3ae2 488D6424 		lea	rsp, -104[rsp]	#,
 9702      98
 9703              		.cfi_def_cfa_offset 160
 9704              	.LBB512:
GAS LISTING /tmp/cc64mrzX.s 			page 269


 9705              	.LBB509:
 9706              	# sieve_extend.c:104:     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesiz
 104:sieve_extend.c **** 
 9707              		.loc 1 104 22 view .LVU3315
 9708 3ae7 4989DE   		mov	r14, rbx	# prephitmp_1432, maxints
 9709 3aea 49D1EE   		shr	r14	# prephitmp_1432
 9710              	.LBE509:
 9711              	.LBE512:
 9712              	# sieve_extend.c:1007: static struct sieve_state *sieve(const counter_t maxints, const counter_t bl
1007:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 9713              		.loc 1 1007 86 view .LVU3316
 9714 3aed 48897424 		mov	QWORD PTR 64[rsp], rsi	# %sfp, tmp1245
 9714      40
 9715              	.LBB513:
 9716              	.LBB510:
 9717              	# sieve_extend.c:103:     struct sieve_state *sieve = aligned_alloc(8, sizeof(struct sieve_state));
 103:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize*8) * anticiped_cache
 9718              		.loc 1 103 33 view .LVU3317
 9719 3af2 BE180000 		mov	esi, 24	#,
 9719      00
 9720              	.LVL431:
 103:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize*8) * anticiped_cache
 9721              		.loc 1 103 33 view .LVU3318
 9722 3af7 E8000000 		call	aligned_alloc@PLT	#
 9722      00
 9723              	.LVL432:
 9724              	# sieve_extend.c:104:     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesiz
 104:sieve_extend.c **** 
 9725              		.loc 1 104 22 view .LVU3319
 9726 3afc 498DB600 		lea	rsi, 1024[r14]	# tmp549,
 9726      040000
 9727              	# sieve_extend.c:106:     sieve->bitarray = aligned_alloc((size_t)anticiped_cache_line_bytesize, (s
 106:sieve_extend.c ****     sieve->bits     = size >> 1;
 9728              		.loc 1 106 23 view .LVU3320
 9729 3b03 BF800000 		mov	edi, 128	#,
 9729      00
 9730              	# sieve_extend.c:103:     struct sieve_state *sieve = aligned_alloc(8, sizeof(struct sieve_state));
 103:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize*8) * anticiped_cache
 9731              		.loc 1 103 33 view .LVU3321
 9732 3b08 48894424 		mov	QWORD PTR 48[rsp], rax	# %sfp, <retval>
 9732      30
 9733 3b0d 4989C7   		mov	r15, rax	# <retval>, tmp1246
 9734              	.LVL433:
 104:sieve_extend.c **** 
 9735              		.loc 1 104 5 is_stmt 1 view .LVU3322
 9736              	# sieve_extend.c:104:     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesiz
 104:sieve_extend.c **** 
 9737              		.loc 1 104 22 is_stmt 0 view .LVU3323
 9738 3b10 48C1EE0A 		shr	rsi, 10	# tmp550,
 9739              	# sieve_extend.c:104:     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesiz
 104:sieve_extend.c **** 
 9740              		.loc 1 104 12 view .LVU3324
 9741 3b14 48C1E607 		sal	rsi, 7	# memSize,
 9742              	# sieve_extend.c:104:     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesiz
 104:sieve_extend.c **** 
 9743              		.loc 1 104 22 view .LVU3325
 9744 3b18 4C897424 		mov	QWORD PTR 8[rsp], r14	# %sfp, prephitmp_1432
GAS LISTING /tmp/cc64mrzX.s 			page 270


 9744      08
 9745              	.LVL434:
 106:sieve_extend.c ****     sieve->bits     = size >> 1;
 9746              		.loc 1 106 5 is_stmt 1 view .LVU3326
 9747              	# sieve_extend.c:106:     sieve->bitarray = aligned_alloc((size_t)anticiped_cache_line_bytesize, (s
 106:sieve_extend.c ****     sieve->bits     = size >> 1;
 9748              		.loc 1 106 23 is_stmt 0 view .LVU3327
 9749 3b1d E8000000 		call	aligned_alloc@PLT	#
 9749      00
 9750              	.LVL435:
 106:sieve_extend.c ****     sieve->bits     = size >> 1;
 9751              		.loc 1 106 23 view .LVU3328
 9752 3b22 48894424 		mov	QWORD PTR 56[rsp], rax	# %sfp, _97
 9752      38
 9753              	.LBE510:
 9754              	.LBE513:
 9755              	.LBB514:
 9756              	.LBB515:
 9757              	# sieve_extend.c:978:     for (;range_stop < block_stop;) {
 978:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 9758              		.loc 1 978 5 view .LVU3329
 9759 3b27 4D85F6   		test	r14, r14	# prephitmp_1432
 9760              	.LBE515:
 9761              	.LBE514:
 9762              	.LBB591:
 9763              	.LBB511:
 9764              	# sieve_extend.c:106:     sieve->bitarray = aligned_alloc((size_t)anticiped_cache_line_bytesize, (s
 106:sieve_extend.c ****     sieve->bits     = size >> 1;
 9765              		.loc 1 106 21 view .LVU3330
 9766 3b2a 498907   		mov	QWORD PTR [r15], rax	# sieve_92->bitarray, _97
 107:sieve_extend.c ****     sieve->size     = size;
 9767              		.loc 1 107 5 is_stmt 1 view .LVU3331
 9768              	# sieve_extend.c:107:     sieve->bits     = size >> 1;
 107:sieve_extend.c ****     sieve->size     = size;
 9769              		.loc 1 107 21 is_stmt 0 view .LVU3332
 9770 3b2d 4D897708 		mov	QWORD PTR 8[r15], r14	# sieve_92->bits, prephitmp_1432
 108:sieve_extend.c **** 
 9771              		.loc 1 108 5 is_stmt 1 view .LVU3333
 9772              	# sieve_extend.c:108:     sieve->size     = size;
 108:sieve_extend.c **** 
 9773              		.loc 1 108 21 is_stmt 0 view .LVU3334
 9774 3b31 49895F10 		mov	QWORD PTR 16[r15], rbx	# sieve_92->size, maxints
 112:sieve_extend.c **** }
 9775              		.loc 1 112 5 is_stmt 1 view .LVU3335
 9776              	.LVL436:
 112:sieve_extend.c **** }
 9777              		.loc 1 112 5 is_stmt 0 view .LVU3336
 9778              	.LBE511:
 9779              	.LBE591:
1009:sieve_extend.c ****     bitword_t* bitarray = sieve->bitarray;
 9780              		.loc 1 1009 5 is_stmt 1 view .LVU3337
1010:sieve_extend.c **** 
 9781              		.loc 1 1010 5 view .LVU3338
1012:sieve_extend.c **** 
 9782              		.loc 1 1012 5 view .LVU3339
1015:sieve_extend.c ****     extendSieve(bitarray, block.pattern_start, block.pattern_size, sieve->bits);
 9783              		.loc 1 1015 5 view .LVU3340
GAS LISTING /tmp/cc64mrzX.s 			page 271


 9784              	.LBB592:
 9785              	.LBI514:
 968:sieve_extend.c ****     register counter_t prime   = 0;
 9786              		.loc 1 968 21 view .LVU3341
 9787              	.LBB584:
 969:sieve_extend.c ****     counter_t patternsize_bits = 1;
 9788              		.loc 1 969 5 view .LVU3342
 970:sieve_extend.c ****     counter_t pattern_start    = 0;
 9789              		.loc 1 970 5 view .LVU3343
 971:sieve_extend.c ****     counter_t range_stop       = block_start;
 9790              		.loc 1 971 5 view .LVU3344
 972:sieve_extend.c ****     bitword_t* bitarray        = sieve->bitarray;
 9791              		.loc 1 972 5 view .LVU3345
 973:sieve_extend.c ****     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 };
 9792              		.loc 1 973 5 view .LVU3346
 974:sieve_extend.c **** 
 9793              		.loc 1 974 5 view .LVU3347
 976:sieve_extend.c ****     
 9794              		.loc 1 976 5 view .LVU3348
 9795              	# sieve_extend.c:976:     sieve->bitarray[0] = SAFE_ZERO; // only the first word has to be cleared;
 976:sieve_extend.c ****     
 9796              		.loc 1 976 24 is_stmt 0 view .LVU3349
 9797 3b35 48C70000 		mov	QWORD PTR [rax], 0	# MEM[(uint64_t *)_97],
 9797      000000
 978:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 9798              		.loc 1 978 5 is_stmt 1 view .LVU3350
 978:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 9799              		.loc 1 978 11 view .LVU3351
 9800              	# sieve_extend.c:978:     for (;range_stop < block_stop;) {
 978:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 9801              		.loc 1 978 5 is_stmt 0 view .LVU3352
 9802 3b3c 0F843C1C 		je	.L1485	#,
 9802      0000
 9803 3b42 4989C7   		mov	r15, rax	# _97, _97
 9804              	# sieve_extend.c:969:     register counter_t prime   = 0;
 969:sieve_extend.c ****     counter_t patternsize_bits = 1;
 9805              		.loc 1 969 24 view .LVU3353
 9806 3b45 31C9     		xor	ecx, ecx	# prime
 9807              	# sieve_extend.c:971:     counter_t pattern_start    = 0;
 971:sieve_extend.c ****     counter_t range_stop       = block_start;
 9808              		.loc 1 971 15 view .LVU3354
 9809 3b47 48C74424 		mov	QWORD PTR 16[rsp], 0	# %sfp,
 9809      10000000 
 9809      00
 9810              	# sieve_extend.c:974:     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 
 974:sieve_extend.c **** 
 9811              		.loc 1 974 18 view .LVU3355
 9812 3b50 31D2     		xor	edx, edx	# block$pattern_size
 9813 3b52 31F6     		xor	esi, esi	# block$pattern_start
 9814              	# sieve_extend.c:970:     counter_t patternsize_bits = 1;
 970:sieve_extend.c ****     counter_t pattern_start    = 0;
 9815              		.loc 1 970 15 view .LVU3356
 9816 3b54 41BE0100 		mov	r14d, 1	# patternsize_bits,
 9816      0000
 9817              	.LVL437:
 9818              	.LBB516:
 9819              	# sieve_extend.c:979:         prime = searchBitFalse(bitarray, prime+1);
GAS LISTING /tmp/cc64mrzX.s 			page 272


 979:sieve_extend.c ****         counter_t start = prime * prime * 2 + prime * 2;
 9820              		.loc 1 979 17 view .LVU3357
 9821 3b5a 41BD0100 		mov	r13d, 1	# index,
 9821      0000
 9822              	.LVL438:
 9823              		.p2align 4
 9824              		.p2align 3
 9825              	.L876:
 9826              	.LBB517:
 9827              	.LBB518:
 123:sieve_extend.c **** }
 9828              		.loc 1 123 5 is_stmt 1 view .LVU3358
 123:sieve_extend.c **** }
 9829              		.loc 1 123 5 is_stmt 0 view .LVU3359
 9830              	.LBE518:
 9831              	.LBE517:
 980:sieve_extend.c ****         if unlikely(start > block_stop) break;
 9832              		.loc 1 980 9 is_stmt 1 view .LVU3360
 9833              	# sieve_extend.c:980:         counter_t start = prime * prime * 2 + prime * 2;
 980:sieve_extend.c ****         if unlikely(start > block_stop) break;
 9834              		.loc 1 980 45 is_stmt 0 view .LVU3361
 9835 3b60 498D5D01 		lea	rbx, 1[r13]	# index,
 9836 3b64 4F8D642D 		lea	r12, [r13+r13]	# _687,
 9836      00
 9837              	# sieve_extend.c:980:         counter_t start = prime * prime * 2 + prime * 2;
 980:sieve_extend.c ****         if unlikely(start > block_stop) break;
 9838              		.loc 1 980 19 view .LVU3362
 9839 3b69 4889DD   		mov	rbp, rbx	# index, index
 9840 3b6c 490FAFEC 		imul	rbp, r12	# index, _687
 9841              	.LVL439:
 981:sieve_extend.c **** 
 9842              		.loc 1 981 9 is_stmt 1 view .LVU3363
 9843              	# sieve_extend.c:981:         if unlikely(start > block_stop) break;
 981:sieve_extend.c **** 
 9844              		.loc 1 981 12 is_stmt 0 view .LVU3364
 9845 3b70 483B6C24 		cmp	rbp, QWORD PTR 8[rsp]	# index, %sfp
 9845      08
 9846 3b75 0F87E609 		ja	.L1486	#,
 9846      0000
 983:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 9847              		.loc 1 983 9 is_stmt 1 view .LVU3365
 9848              	# sieve_extend.c:983:         const counter_t step  = prime * 2 + 1;
 983:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 9849              		.loc 1 983 25 is_stmt 0 view .LVU3366
 9850 3b7b 4983C401 		add	r12, 1	# step,
 9851              	.LVL440:
 984:sieve_extend.c **** 
 9852              		.loc 1 984 9 is_stmt 1 view .LVU3367
 9853              	# sieve_extend.c:984:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 984:sieve_extend.c **** 
 9854              		.loc 1 984 12 is_stmt 0 view .LVU3368
 9855 3b7f 4885DB   		test	rbx, rbx	# index
 9856 3b82 7516     		jne	.L882	#,
 984:sieve_extend.c **** 
 9857              		.loc 1 984 41 is_stmt 1 view .LVU3369
 9858              	# sieve_extend.c:984:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 984:sieve_extend.c **** 
GAS LISTING /tmp/cc64mrzX.s 			page 273


 9859              		.loc 1 984 102 is_stmt 0 view .LVU3370
 9860 3b84 48C7C0FF 		mov	rax, -1	# tmp566,
 9860      FFFFFF
 9861 3b8b 31D2     		xor	edx, edx	# tmp565
 9862 3b8d 49F7F4   		div	r12	# step
 9863              	# sieve_extend.c:984:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 984:sieve_extend.c **** 
 9864              		.loc 1 984 47 view .LVU3371
 9865 3b90 48C7C5FE 		mov	rbp, -2	# tmp567,
 9865      FFFFFF
 9866              	.LVL441:
 984:sieve_extend.c **** 
 9867              		.loc 1 984 47 view .LVU3372
 9868 3b97 4829D5   		sub	rbp, rdx	# index, tmp565
 9869              	.LVL442:
 9870              	.L882:
 986:sieve_extend.c ****         block.pattern_size = patternsize_bits;
 9871              		.loc 1 986 9 is_stmt 1 view .LVU3373
 9872              	# sieve_extend.c:986:         range_stop = block_start + patternsize_bits * step * 2;  // range is 
 986:sieve_extend.c ****         block.pattern_size = patternsize_bits;
 9873              		.loc 1 986 53 is_stmt 0 view .LVU3374
 9874 3b9a 4C89E6   		mov	rsi, r12	# _68, step
 9875 3b9d 490FAFF6 		imul	rsi, r14	# _68, patternsize_bits
 9876 3ba1 48897424 		mov	QWORD PTR 32[rsp], rsi	# %sfp, _68
 9876      20
 9877              	# sieve_extend.c:986:         range_stop = block_start + patternsize_bits * step * 2;  // range is 
 986:sieve_extend.c ****         block.pattern_size = patternsize_bits;
 9878              		.loc 1 986 60 view .LVU3375
 9879 3ba6 4C8D0436 		lea	r8, [rsi+rsi]	# _69,
 9880              	.LVL443:
 987:sieve_extend.c ****         block.pattern_start = pattern_start;
 9881              		.loc 1 987 9 is_stmt 1 view .LVU3376
 988:sieve_extend.c ****         if (range_stop > block_stop) return block; //range_stop = block_stop;
 9882              		.loc 1 988 9 view .LVU3377
 989:sieve_extend.c **** 
 9883              		.loc 1 989 9 view .LVU3378
 9884              	# sieve_extend.c:989:         if (range_stop > block_stop) return block; //range_stop = block_stop;
 989:sieve_extend.c **** 
 9885              		.loc 1 989 12 is_stmt 0 view .LVU3379
 9886 3baa 4C3B4424 		cmp	r8, QWORD PTR 8[rsp]	# _69, %sfp
 9886      08
 9887 3baf 0F879F1B 		ja	.L1487	#,
 9887      0000
 991:sieve_extend.c ****             pattern_start = block_start | patternsize_bits;
 9888              		.loc 1 991 9 is_stmt 1 view .LVU3380
 9889 3bb5 488B7C24 		mov	rdi, QWORD PTR 16[rsp]	# pattern_start, %sfp
 9889      10
 9890              	# sieve_extend.c:991:         if (patternsize_bits>1) {
 991:sieve_extend.c ****             pattern_start = block_start | patternsize_bits;
 9891              		.loc 1 991 12 is_stmt 0 view .LVU3381
 9892 3bba 4983FE01 		cmp	r14, 1	# patternsize_bits,
 9893 3bbe 48897C24 		mov	QWORD PTR 24[rsp], rdi	# %sfp, pattern_start
 9893      18
 9894 3bc3 0F872F01 		ja	.L1488	#,
 9894      0000
 9895              	.LVL444:
 9896              	.L885:
GAS LISTING /tmp/cc64mrzX.s 			page 274


 995:sieve_extend.c **** 
 9897              		.loc 1 995 9 is_stmt 1 view .LVU3382
 997:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitarray, start, step, range_
 9898              		.loc 1 997 9 view .LVU3383
 9899              	# sieve_extend.c:997:         if      (step < SMALLSTEP_FASTER)      setBitsTrue_smallStep (bitarra
 997:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitarray, start, step, range_
 9900              		.loc 1 997 17 is_stmt 0 view .LVU3384
 9901 3bc9 4C3B2500 		cmp	r12, QWORD PTR global_SMALLSTEP_FASTER[rip]	# step, global_SMALLSTEP_FASTER
 9901      000000
 9902 3bd0 0F827A01 		jb	.L1489	#,
 9902      0000
 9903              	.L889:
 998:sieve_extend.c ****         else if (step < WORD_SIZE_counter * 4) setBitsTrue_largeRange_vector(bitarray, start, step,
 9904              		.loc 1 998 14 is_stmt 1 view .LVU3385
 9905              	# sieve_extend.c:998:         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitarra
 998:sieve_extend.c ****         else if (step < WORD_SIZE_counter * 4) setBitsTrue_largeRange_vector(bitarray, start, step,
 9906              		.loc 1 998 17 is_stmt 0 view .LVU3386
 9907 3bd6 4C3B2500 		cmp	r12, QWORD PTR global_MEDIUMSTEP_FASTER[rip]	# step, global_MEDIUMSTEP_FASTER
 9907      000000
 9908 3bdd 0F828D06 		jb	.L1490	#,
 9908      0000
 999:sieve_extend.c ****         else                                   setBitsTrue_largeRange(bitarray, start, step, range_
 9909              		.loc 1 999 14 is_stmt 1 view .LVU3387
 9910              	# sieve_extend.c:999:         else if (step < WORD_SIZE_counter * 4) setBitsTrue_largeRange_vector(
 999:sieve_extend.c ****         else                                   setBitsTrue_largeRange(bitarray, start, step, range_
 9911              		.loc 1 999 17 is_stmt 0 view .LVU3388
 9912 3be3 4981FCFF 		cmp	r12, 255	# step,
 9912      000000
 9913 3bea 0F876004 		ja	.L912	#,
 9913      0000
 999:sieve_extend.c ****         else                                   setBitsTrue_largeRange(bitarray, start, step, range_
 9914              		.loc 1 999 48 is_stmt 1 view .LVU3389
 9915 3bf0 4C89C1   		mov	rcx, r8	#, _69
 9916 3bf3 4C89E2   		mov	rdx, r12	#, step
 9917 3bf6 4889EE   		mov	rsi, rbp	#, index
 9918 3bf9 4C89FF   		mov	rdi, r15	#, _97
 9919 3bfc 4C894424 		mov	QWORD PTR 40[rsp], r8	# %sfp, _69
 9919      28
 9920 3c01 E80AD9FF 		call	setBitsTrue_largeRange_vector	#
 9920      FF
 9921              	.LVL445:
 9922 3c06 4C8B4424 		mov	r8, QWORD PTR 40[rsp]	# _69, %sfp
 9922      28
 9923              	.LVL446:
 9924              	.L893:
 999:sieve_extend.c ****         else                                   setBitsTrue_largeRange(bitarray, start, step, range_
 9925              		.loc 1 999 48 is_stmt 0 view .LVU3390
 9926              	.LBE516:
 978:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 9927              		.loc 1 978 11 is_stmt 1 view .LVU3391
 9928              	# sieve_extend.c:978:     for (;range_stop < block_stop;) {
 978:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 9929              		.loc 1 978 5 is_stmt 0 view .LVU3392
 9930 3c0b 4C3B4424 		cmp	r8, QWORD PTR 8[rsp]	# _69, %sfp
 9930      08
 9931 3c10 0F83FC03 		jnb	.L1491	#,
 9931      0000
GAS LISTING /tmp/cc64mrzX.s 			page 275


 9932              	.LVL447:
 9933              	.L919:
 9934              	.LBB578:
 979:sieve_extend.c ****         counter_t start = prime * prime * 2 + prime * 2;
 9935              		.loc 1 979 9 is_stmt 1 view .LVU3393
 9936              	.LBB520:
 9937              	.LBI517:
 121:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 9938              		.loc 1 121 25 view .LVU3394
 9939              	.LBB519:
 122:sieve_extend.c ****     return index;
 9940              		.loc 1 122 5 view .LVU3395
 122:sieve_extend.c ****     return index;
 9941              		.loc 1 122 11 view .LVU3396
 9942              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9943              		.loc 1 122 21 is_stmt 0 view .LVU3397
 9944 3c16 4889D9   		mov	rcx, rbx	# tmp553, index
 9945 3c19 48C1E906 		shr	rcx, 6	# tmp553,
 9946              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9947              		.loc 1 122 12 view .LVU3398
 9948 3c1d 4D8B14CF 		mov	r10, QWORD PTR [r15+rcx*8]	# *_933,* _97
 9949              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9950              		.loc 1 122 11 view .LVU3399
 9951 3c21 490FA3DA 		bt	r10, rbx	# *_933, index
 9952 3c25 0F83A500 		jnc	.L878	#,
 9952      0000
 122:sieve_extend.c ****     return index;
 9953              		.loc 1 122 58 is_stmt 1 view .LVU3400
 9954              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9955              		.loc 1 122 63 is_stmt 0 view .LVU3401
 9956 3c2b 4C8D4B01 		lea	r9, 1[rbx]	# tmp849,
 9957              	.LVL448:
 9958              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9959              		.loc 1 122 21 view .LVU3402
 9960 3c2f 4C89CD   		mov	rbp, r9	# tmp558, index
 9961              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9962              		.loc 1 122 63 view .LVU3403
 9963 3c32 4C89CB   		mov	rbx, r9	# index, tmp849
 122:sieve_extend.c ****     return index;
 9964              		.loc 1 122 11 is_stmt 1 view .LVU3404
 9965              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9966              		.loc 1 122 21 is_stmt 0 view .LVU3405
 9967 3c35 48C1ED06 		shr	rbp, 6	# tmp558,
 9968              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9969              		.loc 1 122 12 view .LVU3406
 9970 3c39 498B34EF 		mov	rsi, QWORD PTR [r15+rbp*8]	# *_49, *_49
 9971              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9972              		.loc 1 122 11 view .LVU3407
GAS LISTING /tmp/cc64mrzX.s 			page 276


 9973 3c3d 4C0FA3CE 		bt	rsi, r9	# *_49, index
 9974 3c41 0F838900 		jnc	.L878	#,
 9974      0000
 122:sieve_extend.c ****     return index;
 9975              		.loc 1 122 58 is_stmt 1 view .LVU3408
 9976              	.LVL449:
 9977              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9978              		.loc 1 122 63 is_stmt 0 view .LVU3409
 9979 3c47 4883C301 		add	rbx, 1	# index,
 9980              	.LVL450:
 122:sieve_extend.c ****     return index;
 9981              		.loc 1 122 11 is_stmt 1 view .LVU3410
 9982              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9983              		.loc 1 122 21 is_stmt 0 view .LVU3411
 9984 3c4b 4889DF   		mov	rdi, rbx	# tmp1142, index
 9985 3c4e 48C1EF06 		shr	rdi, 6	# tmp1142,
 9986              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9987              		.loc 1 122 12 view .LVU3412
 9988 3c52 4D8B1CFF 		mov	r11, QWORD PTR [r15+rdi*8]	# *_49, *_49
 9989              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9990              		.loc 1 122 11 view .LVU3413
 9991 3c56 490FA3DB 		bt	r11, rbx	# *_49, index
 9992 3c5a 7374     		jnc	.L878	#,
 122:sieve_extend.c ****     return index;
 9993              		.loc 1 122 58 is_stmt 1 view .LVU3414
 9994              	.LVL451:
 9995              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9996              		.loc 1 122 63 is_stmt 0 view .LVU3415
 9997 3c5c 498D5902 		lea	rbx, 2[r9]	# index,
 9998              	.LVL452:
 122:sieve_extend.c ****     return index;
 9999              		.loc 1 122 11 is_stmt 1 view .LVU3416
 10000              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10001              		.loc 1 122 21 is_stmt 0 view .LVU3417
 10002 3c60 4889D8   		mov	rax, rbx	# tmp1146, index
 10003 3c63 48C1E806 		shr	rax, 6	# tmp1146,
 10004              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10005              		.loc 1 122 12 view .LVU3418
 10006 3c67 4D8B04C7 		mov	r8, QWORD PTR [r15+rax*8]	# *_49, *_49
 10007              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10008              		.loc 1 122 11 view .LVU3419
 10009 3c6b 490FA3D8 		bt	r8, rbx	# *_49, index
 10010 3c6f 735F     		jnc	.L878	#,
 122:sieve_extend.c ****     return index;
 10011              		.loc 1 122 58 is_stmt 1 view .LVU3420
 10012              	.LVL453:
 10013              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10014              		.loc 1 122 63 is_stmt 0 view .LVU3421
GAS LISTING /tmp/cc64mrzX.s 			page 277


 10015 3c71 498D5903 		lea	rbx, 3[r9]	# index,
 10016              	.LVL454:
 122:sieve_extend.c ****     return index;
 10017              		.loc 1 122 11 is_stmt 1 view .LVU3422
 10018              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10019              		.loc 1 122 21 is_stmt 0 view .LVU3423
 10020 3c75 4889DA   		mov	rdx, rbx	# tmp1150, index
 10021 3c78 48C1EA06 		shr	rdx, 6	# tmp1150,
 10022              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10023              		.loc 1 122 12 view .LVU3424
 10024 3c7c 4D8B24D7 		mov	r12, QWORD PTR [r15+rdx*8]	# *_49, *_49
 10025              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10026              		.loc 1 122 11 view .LVU3425
 10027 3c80 490FA3DC 		bt	r12, rbx	# *_49, index
 10028 3c84 734A     		jnc	.L878	#,
 122:sieve_extend.c ****     return index;
 10029              		.loc 1 122 58 is_stmt 1 view .LVU3426
 10030              	.LVL455:
 10031              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10032              		.loc 1 122 63 is_stmt 0 view .LVU3427
 10033 3c86 498D5904 		lea	rbx, 4[r9]	# index,
 10034              	.LVL456:
 122:sieve_extend.c ****     return index;
 10035              		.loc 1 122 11 is_stmt 1 view .LVU3428
 10036              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10037              		.loc 1 122 21 is_stmt 0 view .LVU3429
 10038 3c8a 4889D9   		mov	rcx, rbx	# tmp1154, index
 10039 3c8d 48C1E906 		shr	rcx, 6	# tmp1154,
 10040              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10041              		.loc 1 122 12 view .LVU3430
 10042 3c91 4D8B14CF 		mov	r10, QWORD PTR [r15+rcx*8]	# *_49, *_49
 10043              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10044              		.loc 1 122 11 view .LVU3431
 10045 3c95 490FA3DA 		bt	r10, rbx	# *_49, index
 10046 3c99 7335     		jnc	.L878	#,
 122:sieve_extend.c ****     return index;
 10047              		.loc 1 122 58 is_stmt 1 view .LVU3432
 10048              	.LVL457:
 10049              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10050              		.loc 1 122 63 is_stmt 0 view .LVU3433
 10051 3c9b 498D5905 		lea	rbx, 5[r9]	# index,
 10052              	.LVL458:
 122:sieve_extend.c ****     return index;
 10053              		.loc 1 122 11 is_stmt 1 view .LVU3434
 10054              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10055              		.loc 1 122 21 is_stmt 0 view .LVU3435
 10056 3c9f 4889DD   		mov	rbp, rbx	# tmp1158, index
 10057 3ca2 48C1ED06 		shr	rbp, 6	# tmp1158,
GAS LISTING /tmp/cc64mrzX.s 			page 278


 10058              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10059              		.loc 1 122 12 view .LVU3436
 10060 3ca6 498B34EF 		mov	rsi, QWORD PTR [r15+rbp*8]	# *_49, *_49
 10061              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10062              		.loc 1 122 11 view .LVU3437
 10063 3caa 480FA3DE 		bt	rsi, rbx	# *_49, index
 10064 3cae 7320     		jnc	.L878	#,
 122:sieve_extend.c ****     return index;
 10065              		.loc 1 122 58 is_stmt 1 view .LVU3438
 10066              	.LVL459:
 10067              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10068              		.loc 1 122 63 is_stmt 0 view .LVU3439
 10069 3cb0 498D5906 		lea	rbx, 6[r9]	# index,
 10070              	.LVL460:
 122:sieve_extend.c ****     return index;
 10071              		.loc 1 122 11 is_stmt 1 view .LVU3440
 10072              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10073              		.loc 1 122 21 is_stmt 0 view .LVU3441
 10074 3cb4 4889DF   		mov	rdi, rbx	# tmp1162, index
 10075 3cb7 48C1EF06 		shr	rdi, 6	# tmp1162,
 10076              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10077              		.loc 1 122 12 view .LVU3442
 10078 3cbb 4D8B1CFF 		mov	r11, QWORD PTR [r15+rdi*8]	# *_49, *_49
 10079              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10080              		.loc 1 122 11 view .LVU3443
 10081 3cbf 490FA3DB 		bt	r11, rbx	# *_49, index
 10082 3cc3 730B     		jnc	.L878	#,
 122:sieve_extend.c ****     return index;
 10083              		.loc 1 122 58 is_stmt 1 view .LVU3444
 10084              	.LVL461:
 10085              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10086              		.loc 1 122 63 is_stmt 0 view .LVU3445
 10087 3cc5 498D5907 		lea	rbx, 7[r9]	# index,
 10088              	.LVL462:
 122:sieve_extend.c ****     return index;
 10089              		.loc 1 122 11 is_stmt 1 view .LVU3446
 10090 3cc9 E948FFFF 		jmp	.L919	#
 10090      FF
 10091              	.LVL463:
 10092 3cce 6690     		.p2align 4,,7
 10093              		.p2align 3
 10094              	.L878:
 122:sieve_extend.c ****     return index;
 10095              		.loc 1 122 11 is_stmt 0 view .LVU3447
 10096              	.LBE519:
 10097              	.LBE520:
 10098              	.LBE578:
 10099              	.LBE584:
 10100              	.LBE592:
 10101              	# sieve_extend.c:1007: static struct sieve_state *sieve(const counter_t maxints, const counter_t bl
GAS LISTING /tmp/cc64mrzX.s 			page 279


1007:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 10102              		.loc 1 1007 86 view .LVU3448
 10103 3cd0 4C89F2   		mov	rdx, r14	# block$pattern_size, patternsize_bits
 10104 3cd3 4C89E9   		mov	rcx, r13	# prime, index
 10105 3cd6 4C8B7424 		mov	r14, QWORD PTR 24[rsp]	# pattern_start, %sfp
 10105      18
 10106 3cdb 4989DD   		mov	r13, rbx	# index, index
 10107              	.LVL464:
1007:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 10108              		.loc 1 1007 86 view .LVU3449
 10109 3cde 488B7424 		mov	rsi, QWORD PTR 16[rsp]	# block$pattern_start, %sfp
 10109      10
 10110              	.LVL465:
1007:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 10111              		.loc 1 1007 86 view .LVU3450
 10112 3ce3 4C897424 		mov	QWORD PTR 16[rsp], r14	# %sfp, pattern_start
 10112      10
 10113              	.LVL466:
1007:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 10114              		.loc 1 1007 86 view .LVU3451
 10115 3ce8 4C8B7424 		mov	r14, QWORD PTR 32[rsp]	# patternsize_bits, %sfp
 10115      20
 10116              	.LVL467:
1007:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 10117              		.loc 1 1007 86 view .LVU3452
 10118 3ced E96EFEFF 		jmp	.L876	#
 10118      FF
 10119              	.LVL468:
 10120              		.p2align 4,,7
 10121 3cf2 660F1F44 		.p2align 3
 10121      0000
 10122              	.L1488:
 10123              	.LBB593:
 10124              	.LBB585:
 10125              	.LBB579:
 992:sieve_extend.c ****             extendSieve(bitarray, pattern_start, patternsize_bits, range_stop);
 10126              		.loc 1 992 13 is_stmt 1 view .LVU3453
 993:sieve_extend.c ****         }
 10127              		.loc 1 993 13 view .LVU3454
 10128              	.LBB521:
 10129              	.LBI521:
 872:sieve_extend.c ****     if (size < WORD_SIZE_counter)   {
 10130              		.loc 1 872 20 view .LVU3455
 10131              	.LBB522:
 873:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 10132              		.loc 1 873 5 view .LVU3456
 10133              	# sieve_extend.c:873:     if (size < WORD_SIZE_counter)   {
 873:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 10134              		.loc 1 873 8 is_stmt 0 view .LVU3457
 10135 3cf8 4983FE3F 		cmp	r14, 63	# patternsize_bits,
 10136 3cfc 0F86231A 		jbe	.L1492	#,
 10136      0000
 878:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 10137              		.loc 1 878 5 is_stmt 1 view .LVU3458
 10138              	.LVL469:
 879:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 10139              		.loc 1 879 5 view .LVU3459
GAS LISTING /tmp/cc64mrzX.s 			page 280


 10140              	# sieve_extend.c:878:     const counter_t copy_start  = source_start + size;
 878:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 10141              		.loc 1 878 21 is_stmt 0 view .LVU3460
 10142 3d02 4F8D0C36 		lea	r9, [r14+r14]	# copy_start,
 10143              	# sieve_extend.c:880:     const bitshift_t source_bit = bitindex_calc(source_start);
 880:sieve_extend.c **** 
 10144              		.loc 1 880 22 view .LVU3461
 10145 3d06 4D89F2   		mov	r10, r14	# source_bit, patternsize_bits
 10146              	# sieve_extend.c:879:     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 879:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 10147              		.loc 1 879 22 view .LVU3462
 10148 3d09 4183E13F 		and	r9d, 63	# copy_bit,
 10149              	.LVL470:
 880:sieve_extend.c **** 
 10150              		.loc 1 880 5 is_stmt 1 view .LVU3463
 10151              	# sieve_extend.c:880:     const bitshift_t source_bit = bitindex_calc(source_start);
 880:sieve_extend.c **** 
 10152              		.loc 1 880 22 is_stmt 0 view .LVU3464
 10153 3d0d 4183E23F 		and	r10d, 63	# source_bit,
 10154              	.LVL471:
 882:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 10155              		.loc 1 882 5 is_stmt 1 view .LVU3465
 10156              	# sieve_extend.c:882:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 882:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 10157              		.loc 1 882 13 is_stmt 0 view .LVU3466
 10158 3d11 4D39D1   		cmp	r9, r10	# copy_bit, source_bit
 10159              	# sieve_extend.c:882:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 882:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 10160              		.loc 1 882 37 view .LVU3467
 10161 3d14 4C89C1   		mov	rcx, r8	#, _69
 10162 3d17 4C894424 		mov	QWORD PTR 40[rsp], r8	# %sfp, _69
 10162      28
 10163 3d1c 4C89F2   		mov	rdx, r14	#, patternsize_bits
 10164 3d1f 4C89F6   		mov	rsi, r14	#, patternsize_bits
 10165 3d22 4C89FF   		mov	rdi, r15	#, _97
 10166              	# sieve_extend.c:882:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 882:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 10167              		.loc 1 882 13 view .LVU3468
 10168 3d25 0F82EB0A 		jb	.L1493	#,
 10168      0000
 10169              	.LVL472:
 883:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 10170              		.loc 1 883 10 is_stmt 1 view .LVU3469
 10171              	# sieve_extend.c:883:     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, so
 883:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 10172              		.loc 1 883 13 is_stmt 0 view .LVU3470
 10173 3d2b 0F86D10A 		jbe	.L888	#,
 10173      0000
 883:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 10174              		.loc 1 883 37 is_stmt 1 view .LVU3471
 10175 3d31 E88AC9FF 		call	extendSieve_shiftright_ivdep	#
 10175      FF
 10176              	.LVL473:
 883:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 10177              		.loc 1 883 37 is_stmt 0 view .LVU3472
 10178 3d36 4C897424 		mov	QWORD PTR 24[rsp], r14	# %sfp, patternsize_bits
 10178      18
GAS LISTING /tmp/cc64mrzX.s 			page 281


 10179              	.LBE522:
 10180              	.LBE521:
 10181              	# sieve_extend.c:997:         if      (step < SMALLSTEP_FASTER)      setBitsTrue_smallStep (bitarra
 997:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitarray, start, step, range_
 10182              		.loc 1 997 17 view .LVU3473
 10183 3d3b 4C3B2500 		cmp	r12, QWORD PTR global_SMALLSTEP_FASTER[rip]	# step, global_SMALLSTEP_FASTER
 10183      000000
 10184              	.LBB526:
 10185              	.LBB523:
 10186 3d42 4C8B4424 		mov	r8, QWORD PTR 40[rsp]	# _69, %sfp
 10186      28
 10187              	.LVL474:
 997:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitarray, start, step, range_
 10188              		.loc 1 997 17 view .LVU3474
 10189              	.LBE523:
 10190              	.LBE526:
 995:sieve_extend.c **** 
 10191              		.loc 1 995 9 is_stmt 1 view .LVU3475
 997:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitarray, start, step, range_
 10192              		.loc 1 997 9 view .LVU3476
 10193              	# sieve_extend.c:997:         if      (step < SMALLSTEP_FASTER)      setBitsTrue_smallStep (bitarra
 997:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitarray, start, step, range_
 10194              		.loc 1 997 17 is_stmt 0 view .LVU3477
 10195 3d47 0F8389FE 		jnb	.L889	#,
 10195      FFFF
 10196              	.LVL475:
 10197 3d4d 0F1F00   		.p2align 4
 10198              		.p2align 3
 10199              	.L1489:
 10200              	.LBB527:
 10201              	.LBB528:
 10202              	.LBB529:
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10203              		.loc 1 238 41 is_stmt 1 view .LVU3478
 10204              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10205              		.loc 1 238 5 is_stmt 0 view .LVU3479
 10206 3d50 4983FC40 		cmp	r12, 64	# step,
 10207 3d54 0F871A1A 		ja	.L990	#,
 10207      0000
 10208 3d5a 4C89E7   		mov	rdi, r12	# patternsize, step
 10209              	.LBE529:
 10210              	# sieve_extend.c:237: 	register bitword_t pattern = BITWORD_SHIFTBIT;
 237:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; patternsize += patternsi
 10211              		.loc 1 237 21 view .LVU3480
 10212 3d5d B9010000 		mov	ecx, 1	# pattern,
 10212      00
 10213              	.LVL476:
 10214              	.L891:
 10215              	.LBB530:
 239:sieve_extend.c **** 
 10216              		.loc 1 239 9 is_stmt 1 view .LVU3481
 10217              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10218              		.loc 1 238 88 is_stmt 0 view .LVU3482
 10219 3d62 4C8D1C3F 		lea	r11, [rdi+rdi]	# patternsize,
 10220              	# sieve_extend.c:239:         pattern |= (pattern << patternsize);
GAS LISTING /tmp/cc64mrzX.s 			page 282


 239:sieve_extend.c **** 
 10221              		.loc 1 239 29 view .LVU3483
 10222 3d66 C462C1F7 		shlx	r9, rcx, rdi	# _105, pattern, patternsize
 10222      C9
 10223              	# sieve_extend.c:239:         pattern |= (pattern << patternsize);
 239:sieve_extend.c **** 
 10224              		.loc 1 239 17 view .LVU3484
 10225 3d6b 4C09C9   		or	rcx, r9	# pattern, _105
 10226              	.LVL477:
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10227              		.loc 1 238 76 is_stmt 1 view .LVU3485
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10228              		.loc 1 238 41 view .LVU3486
 10229              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10230              		.loc 1 238 5 is_stmt 0 view .LVU3487
 10231 3d6e 4983FB40 		cmp	r11, 64	# patternsize,
 10232 3d72 0F87A800 		ja	.L890	#,
 10232      0000
 239:sieve_extend.c **** 
 10233              		.loc 1 239 9 is_stmt 1 view .LVU3488
 10234              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10235              		.loc 1 238 88 is_stmt 0 view .LVU3489
 10236 3d78 488D04BD 		lea	rax, 0[0+rdi*4]	# patternsize,
 10236      00000000 
 10237              	# sieve_extend.c:239:         pattern |= (pattern << patternsize);
 239:sieve_extend.c **** 
 10238              		.loc 1 239 29 view .LVU3490
 10239 3d80 C4E2A1F7 		shlx	rdx, rcx, r11	# _105, pattern, patternsize
 10239      D1
 10240              	# sieve_extend.c:239:         pattern |= (pattern << patternsize);
 239:sieve_extend.c **** 
 10241              		.loc 1 239 17 view .LVU3491
 10242 3d85 4809D1   		or	rcx, rdx	# pattern, _105
 10243              	.LVL478:
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10244              		.loc 1 238 76 is_stmt 1 view .LVU3492
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10245              		.loc 1 238 41 view .LVU3493
 10246              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10247              		.loc 1 238 5 is_stmt 0 view .LVU3494
 10248 3d88 4883F840 		cmp	rax, 64	# patternsize,
 10249 3d8c 0F878E00 		ja	.L890	#,
 10249      0000
 239:sieve_extend.c **** 
 10250              		.loc 1 239 9 is_stmt 1 view .LVU3495
 10251              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10252              		.loc 1 238 88 is_stmt 0 view .LVU3496
 10253 3d92 4C8D14FD 		lea	r10, 0[0+rdi*8]	# patternsize,
 10253      00000000 
 10254              	# sieve_extend.c:239:         pattern |= (pattern << patternsize);
 239:sieve_extend.c **** 
 10255              		.loc 1 239 29 view .LVU3497
 10256 3d9a C4E2F9F7 		shlx	rsi, rcx, rax	# _105, pattern, patternsize
GAS LISTING /tmp/cc64mrzX.s 			page 283


 10256      F1
 10257              	# sieve_extend.c:239:         pattern |= (pattern << patternsize);
 239:sieve_extend.c **** 
 10258              		.loc 1 239 17 view .LVU3498
 10259 3d9f 4809F1   		or	rcx, rsi	# pattern, _105
 10260              	.LVL479:
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10261              		.loc 1 238 76 is_stmt 1 view .LVU3499
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10262              		.loc 1 238 41 view .LVU3500
 10263              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10264              		.loc 1 238 5 is_stmt 0 view .LVU3501
 10265 3da2 4983FA40 		cmp	r10, 64	# patternsize,
 10266 3da6 7778     		ja	.L890	#,
 239:sieve_extend.c **** 
 10267              		.loc 1 239 9 is_stmt 1 view .LVU3502
 10268              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10269              		.loc 1 238 88 is_stmt 0 view .LVU3503
 10270 3da8 4989FB   		mov	r11, rdi	# patternsize, patternsize
 10271              	# sieve_extend.c:239:         pattern |= (pattern << patternsize);
 239:sieve_extend.c **** 
 10272              		.loc 1 239 29 view .LVU3504
 10273 3dab C462A9F7 		shlx	r9, rcx, r10	# _105, pattern, patternsize
 10273      C9
 10274              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10275              		.loc 1 238 88 view .LVU3505
 10276 3db0 49C1E304 		sal	r11, 4	# patternsize,
 10277              	# sieve_extend.c:239:         pattern |= (pattern << patternsize);
 239:sieve_extend.c **** 
 10278              		.loc 1 239 17 view .LVU3506
 10279 3db4 4C09C9   		or	rcx, r9	# pattern, _105
 10280              	.LVL480:
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10281              		.loc 1 238 76 is_stmt 1 view .LVU3507
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10282              		.loc 1 238 41 view .LVU3508
 10283              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10284              		.loc 1 238 5 is_stmt 0 view .LVU3509
 10285 3db7 4983FB40 		cmp	r11, 64	# patternsize,
 10286 3dbb 7763     		ja	.L890	#,
 239:sieve_extend.c **** 
 10287              		.loc 1 239 9 is_stmt 1 view .LVU3510
 10288              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10289              		.loc 1 238 88 is_stmt 0 view .LVU3511
 10290 3dbd 4889F8   		mov	rax, rdi	# patternsize, patternsize
 10291              	# sieve_extend.c:239:         pattern |= (pattern << patternsize);
 239:sieve_extend.c **** 
 10292              		.loc 1 239 29 view .LVU3512
 10293 3dc0 C4E2A1F7 		shlx	rdx, rcx, r11	# _105, pattern, patternsize
 10293      D1
 10294              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
GAS LISTING /tmp/cc64mrzX.s 			page 284


 10295              		.loc 1 238 88 view .LVU3513
 10296 3dc5 48C1E005 		sal	rax, 5	# patternsize,
 10297              	# sieve_extend.c:239:         pattern |= (pattern << patternsize);
 239:sieve_extend.c **** 
 10298              		.loc 1 239 17 view .LVU3514
 10299 3dc9 4809D1   		or	rcx, rdx	# pattern, _105
 10300              	.LVL481:
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10301              		.loc 1 238 76 is_stmt 1 view .LVU3515
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10302              		.loc 1 238 41 view .LVU3516
 10303              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10304              		.loc 1 238 5 is_stmt 0 view .LVU3517
 10305 3dcc 4883F840 		cmp	rax, 64	# patternsize,
 10306 3dd0 774E     		ja	.L890	#,
 239:sieve_extend.c **** 
 10307              		.loc 1 239 9 is_stmt 1 view .LVU3518
 10308              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10309              		.loc 1 238 88 is_stmt 0 view .LVU3519
 10310 3dd2 4989FA   		mov	r10, rdi	# patternsize, patternsize
 10311              	# sieve_extend.c:239:         pattern |= (pattern << patternsize);
 239:sieve_extend.c **** 
 10312              		.loc 1 239 29 view .LVU3520
 10313 3dd5 C4E2F9F7 		shlx	rsi, rcx, rax	# _105, pattern, patternsize
 10313      F1
 10314              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10315              		.loc 1 238 88 view .LVU3521
 10316 3dda 49C1E206 		sal	r10, 6	# patternsize,
 10317              	# sieve_extend.c:239:         pattern |= (pattern << patternsize);
 239:sieve_extend.c **** 
 10318              		.loc 1 239 17 view .LVU3522
 10319 3dde 4809F1   		or	rcx, rsi	# pattern, _105
 10320              	.LVL482:
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10321              		.loc 1 238 76 is_stmt 1 view .LVU3523
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10322              		.loc 1 238 41 view .LVU3524
 10323              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10324              		.loc 1 238 5 is_stmt 0 view .LVU3525
 10325 3de1 4983FA40 		cmp	r10, 64	# patternsize,
 10326 3de5 7739     		ja	.L890	#,
 239:sieve_extend.c **** 
 10327              		.loc 1 239 9 is_stmt 1 view .LVU3526
 10328              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10329              		.loc 1 238 88 is_stmt 0 view .LVU3527
 10330 3de7 4989FB   		mov	r11, rdi	# patternsize, patternsize
 10331              	# sieve_extend.c:239:         pattern |= (pattern << patternsize);
 239:sieve_extend.c **** 
 10332              		.loc 1 239 29 view .LVU3528
 10333 3dea C462A9F7 		shlx	r9, rcx, r10	# _105, pattern, patternsize
 10333      C9
 10334              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
GAS LISTING /tmp/cc64mrzX.s 			page 285


 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10335              		.loc 1 238 88 view .LVU3529
 10336 3def 49C1E307 		sal	r11, 7	# patternsize,
 10337              	# sieve_extend.c:239:         pattern |= (pattern << patternsize);
 239:sieve_extend.c **** 
 10338              		.loc 1 239 17 view .LVU3530
 10339 3df3 4C09C9   		or	rcx, r9	# pattern, _105
 10340              	.LVL483:
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10341              		.loc 1 238 76 is_stmt 1 view .LVU3531
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10342              		.loc 1 238 41 view .LVU3532
 10343              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10344              		.loc 1 238 5 is_stmt 0 view .LVU3533
 10345 3df6 4983FB40 		cmp	r11, 64	# patternsize,
 10346 3dfa 7724     		ja	.L890	#,
 239:sieve_extend.c **** 
 10347              		.loc 1 239 9 is_stmt 1 view .LVU3534
 10348              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10349              		.loc 1 238 88 is_stmt 0 view .LVU3535
 10350 3dfc 48C1E708 		sal	rdi, 8	# patternsize,
 10351              	# sieve_extend.c:239:         pattern |= (pattern << patternsize);
 239:sieve_extend.c **** 
 10352              		.loc 1 239 29 view .LVU3536
 10353 3e00 C4E2A1F7 		shlx	rdx, rcx, r11	# _105, pattern, patternsize
 10353      D1
 10354              	# sieve_extend.c:239:         pattern |= (pattern << patternsize);
 239:sieve_extend.c **** 
 10355              		.loc 1 239 17 view .LVU3537
 10356 3e05 4809D1   		or	rcx, rdx	# pattern, _105
 10357              	.LVL484:
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10358              		.loc 1 238 76 is_stmt 1 view .LVU3538
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10359              		.loc 1 238 41 view .LVU3539
 10360              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10361              		.loc 1 238 5 is_stmt 0 view .LVU3540
 10362 3e08 4883FF40 		cmp	rdi, 64	# patternsize,
 10363 3e0c 0F8650FF 		jbe	.L891	#,
 10363      FFFF
 10364              	.LVL485:
 10365 3e12 66662E0F 		.p2align 4
 10365      1F840000 
 10365      0000000F 
 10365      1F00
 10366              		.p2align 3
 10367              	.L890:
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10368              		.loc 1 238 5 view .LVU3541
 10369              	.LBE530:
 244:sieve_extend.c ****     register counter_t range_start_word = wordindex(range_start);
 10370              		.loc 1 244 5 is_stmt 1 view .LVU3542
 10371              	# sieve_extend.c:244:     const counter_t range_stop_word = wordindex(range_stop);
 244:sieve_extend.c ****     register counter_t range_start_word = wordindex(range_start);
GAS LISTING /tmp/cc64mrzX.s 			page 286


 10372              		.loc 1 244 21 is_stmt 0 view .LVU3543
 10373 3e20 4D89C2   		mov	r10, r8	# range_stop_word, _69
 10374              	# sieve_extend.c:245:     register counter_t range_start_word = wordindex(range_start);
 245:sieve_extend.c ****      if (range_start_word >= range_stop_word) { // shortcut
 10375              		.loc 1 245 24 view .LVU3544
 10376 3e23 4889EE   		mov	rsi, rbp	# range_start_word, index
 10377 3e26 48C1EE06 		shr	rsi, 6	# range_start_word,
 10378 3e2a 4489C0   		mov	eax, r8d	# tmp571, _69
 10379              	# sieve_extend.c:244:     const counter_t range_stop_word = wordindex(range_stop);
 244:sieve_extend.c ****     register counter_t range_start_word = wordindex(range_start);
 10380              		.loc 1 244 21 view .LVU3545
 10381 3e2d 49C1EA06 		shr	r10, 6	# range_stop_word,
 10382              	.LVL486:
 245:sieve_extend.c ****      if (range_start_word >= range_stop_word) { // shortcut
 10383              		.loc 1 245 5 is_stmt 1 view .LVU3546
 246:sieve_extend.c ****        bitarray[range_start_word] |= (pattern << bitindex(range_start)) & chopmask(range_stop);
 10384              		.loc 1 246 6 view .LVU3547
 10385 3e31 4D8D1CF7 		lea	r11, [r15+rsi*8]	# _1228,
 10386              	# sieve_extend.c:246:      if (range_start_word >= range_stop_word) { // shortcut
 246:sieve_extend.c ****        bitarray[range_start_word] |= (pattern << bitindex(range_start)) & chopmask(range_stop);
 10387              		.loc 1 246 9 is_stmt 0 view .LVU3548
 10388 3e35 4939F2   		cmp	r10, rsi	# range_stop_word, range_start_word
 10389 3e38 F7D0     		not	eax	# tmp571
 10390 3e3a 4D8B0B   		mov	r9, QWORD PTR [r11]	# pretmp_1229, MEM[(uint64_t *)_1228]
 10391 3e3d 48C7C7FF 		mov	rdi, -1	# tmp1614,
 10391      FFFFFF
 10392 3e44 C4E2FBF7 		shrx	rdx, rdi, rax	# _1235, tmp1614, tmp571
 10392      D7
 10393              	# sieve_extend.c:247:        bitarray[range_start_word] |= (pattern << bitindex(range_start)) & cho
 247:sieve_extend.c ****         //  debug if (step==13) { printf("After\n"); dump_bitarray(bitarray,10); }
 10394              		.loc 1 247 47 view .LVU3549
 10395 3e49 C4E2D1F7 		shlx	rax, rcx, rbp	# tmp574, pattern, index
 10395      C1
 10396 3e4e 48895424 		mov	QWORD PTR 40[rsp], rdx	# %sfp, _1235
 10396      28
 10397              	# sieve_extend.c:246:      if (range_start_word >= range_stop_word) { // shortcut
 246:sieve_extend.c ****        bitarray[range_start_word] |= (pattern << bitindex(range_start)) & chopmask(range_stop);
 10398              		.loc 1 246 9 view .LVU3550
 10399 3e53 0F869A08 		jbe	.L1494	#,
 10399      0000
 252:sieve_extend.c **** 
 10400              		.loc 1 252 5 is_stmt 1 view .LVU3551
 10401              	# sieve_extend.c:252:     bitarray[range_start_word] |= (pattern << bitindex(range_start));
 252:sieve_extend.c **** 
 10402              		.loc 1 252 32 is_stmt 0 view .LVU3552
 10403 3e59 4C09C8   		or	rax, r9	# tmp578, pretmp_1229
 10404              	# sieve_extend.c:256:    register bitshift_t pattern_size = WORD_SIZE_bitshift - (WORD_SIZE_bitshif
 256:sieve_extend.c ****    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 10405              		.loc 1 256 80 view .LVU3553
 10406 3e5c BF400000 		mov	edi, 64	# tmp579,
 10406      00
 10407 3e61 31D2     		xor	edx, edx	# tmp580
 10408              	# sieve_extend.c:257:    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 257:sieve_extend.c ****    register bitshift_t shift = (bitindex_calc(range_start))%step ;
 10409              		.loc 1 257 24 view .LVU3554
 10410 3e63 4D89E1   		mov	r9, r12	# pattern_shift, step
 10411              	# sieve_extend.c:252:     bitarray[range_start_word] |= (pattern << bitindex(range_start));
GAS LISTING /tmp/cc64mrzX.s 			page 287


 252:sieve_extend.c **** 
 10412              		.loc 1 252 32 view .LVU3555
 10413 3e66 498903   		mov	QWORD PTR [r11], rax	# MEM[(uint64_t *)_1228], tmp578
 256:sieve_extend.c ****    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 10414              		.loc 1 256 4 is_stmt 1 view .LVU3556
 10415              	# sieve_extend.c:256:    register bitshift_t pattern_size = WORD_SIZE_bitshift - (WORD_SIZE_bitshif
 256:sieve_extend.c ****    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 10416              		.loc 1 256 80 is_stmt 0 view .LVU3557
 10417 3e69 4889F8   		mov	rax, rdi	# tmp581, tmp579
 10418 3e6c 49F7F4   		div	r12	# step
 10419              	# sieve_extend.c:258:    register bitshift_t shift = (bitindex_calc(range_start))%step ;
 258:sieve_extend.c ****    counter_t loop_range = range_stop_word - range_start_word;
 10420              		.loc 1 258 33 view .LVU3558
 10421 3e6f 4889E8   		mov	rax, rbp	# index, index
 10422 3e72 83E03F   		and	eax, 63	# index,
 10423              	# sieve_extend.c:256:    register bitshift_t pattern_size = WORD_SIZE_bitshift - (WORD_SIZE_bitshif
 256:sieve_extend.c ****    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 10424              		.loc 1 256 24 view .LVU3559
 10425 3e75 4829D7   		sub	rdi, rdx	# pattern_size, tmp580
 10426              	.LVL487:
 257:sieve_extend.c ****    register bitshift_t shift = (bitindex_calc(range_start))%step ;
 10427              		.loc 1 257 4 is_stmt 1 view .LVU3560
 10428              	# sieve_extend.c:257:    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 257:sieve_extend.c ****    register bitshift_t shift = (bitindex_calc(range_start))%step ;
 10429              		.loc 1 257 24 is_stmt 0 view .LVU3561
 10430 3e78 4929D1   		sub	r9, rdx	# pattern_shift, tmp580
 10431              	.LVL488:
 258:sieve_extend.c ****    counter_t loop_range = range_stop_word - range_start_word;
 10432              		.loc 1 258 4 is_stmt 1 view .LVU3562
 10433              	# sieve_extend.c:258:    register bitshift_t shift = (bitindex_calc(range_start))%step ;
 258:sieve_extend.c ****    counter_t loop_range = range_stop_word - range_start_word;
 10434              		.loc 1 258 24 is_stmt 0 view .LVU3563
 10435 3e7b 31D2     		xor	edx, edx	# tmp584
 10436 3e7d 49F7F4   		div	r12	# step
 10437              	.LVL489:
 259:sieve_extend.c ****    #pragma unroll
 10438              		.loc 1 259 4 is_stmt 1 view .LVU3564
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10439              		.loc 1 262 4 view .LVU3565
 10440              	.LBB531:
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10441              		.loc 1 262 9 view .LVU3566
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10442              		.loc 1 262 24 view .LVU3567
 10443              	# sieve_extend.c:262:    for (counter_t i=1; i <= loop_range; i++) {
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10444              		.loc 1 262 4 is_stmt 0 view .LVU3568
 10445 3e80 4939F2   		cmp	r10, rsi	# range_stop_word, range_start_word
 10446 3e83 0F847501 		je	.L896	#,
 10446      0000
 10447 3e89 4B8D04D7 		lea	rax, [r15+r10*8]	# _1346,
 10448 3e8d 89FD     		mov	ebp, edi	# _1237, pattern_size
 10449              	.LVL490:
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10450              		.loc 1 262 4 view .LVU3569
 10451 3e8f 48894424 		mov	QWORD PTR 72[rsp], rax	# %sfp, _1346
 10451      48
GAS LISTING /tmp/cc64mrzX.s 			page 288


 10452 3e94 4C29D8   		sub	rax, r11	# tmp851, ivtmp.638
 10453 3e97 4883E808 		sub	rax, 8	# tmp852,
 10454 3e9b 498D3411 		lea	rsi, [r9+rdx]	# ivtmp.636,
 10455              	.LVL491:
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10456              		.loc 1 262 4 view .LVU3570
 10457 3e9f 48C1E803 		shr	rax, 3	# tmp850,
 10458 3ea3 4C89DF   		mov	rdi, r11	# ivtmp.638, _1228
 10459              	.LVL492:
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10460              		.loc 1 262 4 view .LVU3571
 10461 3ea6 4883C001 		add	rax, 1	# tmp853,
 10462 3eaa 83E003   		and	eax, 3	# tmp854,
 10463 3ead 0F849900 		je	.L1437	#,
 10463      0000
 10464 3eb3 4883F801 		cmp	rax, 1	# tmp854,
 10465 3eb7 7460     		je	.L1198	#,
 10466 3eb9 4883F802 		cmp	rax, 2	# tmp854,
 10467 3ebd 7432     		je	.L1199	#,
 10468              	.LVL493:
 10469              	.LBB532:
 263:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10470              		.loc 1 263 9 is_stmt 1 view .LVU3572
 264:sieve_extend.c **** 
 10471              		.loc 1 264 8 view .LVU3573
 10472              	# sieve_extend.c:263:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 263:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10473              		.loc 1 263 20 is_stmt 0 view .LVU3574
 10474 3ebf 4889F0   		mov	rax, rsi	# tmp1171, ivtmp.636
 10475 3ec2 31D2     		xor	edx, edx	# totalshift
 10476              	.LVL494:
 263:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10477              		.loc 1 263 20 view .LVU3575
 10478 3ec4 49F7F4   		div	r12	# step
 10479 3ec7 4883C708 		add	rdi, 8	# ivtmp.638,
 10480 3ecb 4C01CE   		add	rsi, r9	# ivtmp.636, pattern_shift
 10481              	.LVL495:
 10482              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10483              		.loc 1 264 91 view .LVU3576
 10484 3ece C4E2E9F7 		shlx	rax, rcx, rdx	# tmp1172, pattern, totalshift
 10484      C1
 10485              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10486              		.loc 1 264 37 view .LVU3577
 10487 3ed3 490B4308 		or	rax, QWORD PTR 8[r11]	# tmp1172, MEM[base: _1351, offset: 8B]
 10488 3ed7 48894424 		mov	QWORD PTR 80[rsp], rax	# %sfp, tmp1172
 10488      50
 10489              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10490              		.loc 1 264 66 view .LVU3578
 10491 3edc 89E8     		mov	eax, ebp	# tmp1174, _1237
 10492 3ede 29D0     		sub	eax, edx	# tmp1174, totalshift
 10493              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10494              		.loc 1 264 50 view .LVU3579
 10495 3ee0 C4E2FBF7 		shrx	rdx, rcx, rax	# tmp1175, pattern, tmp1174
GAS LISTING /tmp/cc64mrzX.s 			page 289


 10495      D1
 10496              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10497              		.loc 1 264 37 view .LVU3580
 10498 3ee5 488B4424 		mov	rax, QWORD PTR 80[rsp]	# tmp1173, %sfp
 10498      50
 10499 3eea 4809D0   		or	rax, rdx	# tmp1173, tmp1175
 10500 3eed 49894308 		mov	QWORD PTR 8[r11], rax	# MEM[base: _1351, offset: 8B], tmp1176
 10501              	.LBE532:
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10502              		.loc 1 262 41 is_stmt 1 view .LVU3581
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10503              		.loc 1 262 24 view .LVU3582
 10504              	.L1199:
 10505              	.LBB533:
 263:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10506              		.loc 1 263 9 view .LVU3583
 264:sieve_extend.c **** 
 10507              		.loc 1 264 8 view .LVU3584
 10508              	# sieve_extend.c:263:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 263:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10509              		.loc 1 263 20 is_stmt 0 view .LVU3585
 10510 3ef1 4889F0   		mov	rax, rsi	# tmp1178, ivtmp.636
 10511 3ef4 31D2     		xor	edx, edx	# totalshift
 10512 3ef6 49F7F4   		div	r12	# step
 10513              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10514              		.loc 1 264 66 view .LVU3586
 10515 3ef9 4189EB   		mov	r11d, ebp	# tmp1181, _1237
 10516 3efc 4C01CE   		add	rsi, r9	# ivtmp.636, pattern_shift
 10517 3eff 4883C708 		add	rdi, 8	# ivtmp.638,
 10518              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10519              		.loc 1 264 91 view .LVU3587
 10520 3f03 C4E2E9F7 		shlx	rax, rcx, rdx	# tmp1179, pattern, totalshift
 10520      C1
 10521              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10522              		.loc 1 264 37 view .LVU3588
 10523 3f08 480B07   		or	rax, QWORD PTR [rdi]	# tmp1180, MEM[base: _1351, offset: 8B]
 10524              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10525              		.loc 1 264 66 view .LVU3589
 10526 3f0b 4129D3   		sub	r11d, edx	# tmp1181, totalshift
 10527              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10528              		.loc 1 264 50 view .LVU3590
 10529 3f0e C4E2A3F7 		shrx	rdx, rcx, r11	# tmp1182, pattern, tmp1181
 10529      D1
 10530              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10531              		.loc 1 264 37 view .LVU3591
 10532 3f13 4809D0   		or	rax, rdx	# tmp1183, tmp1182
 10533 3f16 488907   		mov	QWORD PTR [rdi], rax	# MEM[base: _1351, offset: 8B], tmp1183
 10534              	.LBE533:
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10535              		.loc 1 262 41 is_stmt 1 view .LVU3592
GAS LISTING /tmp/cc64mrzX.s 			page 290


 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10536              		.loc 1 262 24 view .LVU3593
 10537              	.L1198:
 10538              	.LBB534:
 263:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10539              		.loc 1 263 9 view .LVU3594
 264:sieve_extend.c **** 
 10540              		.loc 1 264 8 view .LVU3595
 10541              	# sieve_extend.c:263:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 263:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10542              		.loc 1 263 20 is_stmt 0 view .LVU3596
 10543 3f19 4889F0   		mov	rax, rsi	# tmp1185, ivtmp.636
 10544 3f1c 31D2     		xor	edx, edx	# totalshift
 10545 3f1e 49F7F4   		div	r12	# step
 10546              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10547              		.loc 1 264 66 view .LVU3597
 10548 3f21 4189EB   		mov	r11d, ebp	# tmp1188, _1237
 10549 3f24 4883C708 		add	rdi, 8	# ivtmp.638,
 10550 3f28 4C01CE   		add	rsi, r9	# ivtmp.636, pattern_shift
 10551              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10552              		.loc 1 264 91 view .LVU3598
 10553 3f2b C4E2E9F7 		shlx	rax, rcx, rdx	# tmp1186, pattern, totalshift
 10553      C1
 10554              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10555              		.loc 1 264 37 view .LVU3599
 10556 3f30 480B07   		or	rax, QWORD PTR [rdi]	# tmp1187, MEM[base: _1351, offset: 8B]
 10557              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10558              		.loc 1 264 66 view .LVU3600
 10559 3f33 4129D3   		sub	r11d, edx	# tmp1188, totalshift
 10560              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10561              		.loc 1 264 50 view .LVU3601
 10562 3f36 C4E2A3F7 		shrx	rdx, rcx, r11	# tmp1189, pattern, tmp1188
 10562      D1
 10563              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10564              		.loc 1 264 37 view .LVU3602
 10565 3f3b 4809D0   		or	rax, rdx	# tmp1190, tmp1189
 10566 3f3e 488907   		mov	QWORD PTR [rdi], rax	# MEM[base: _1351, offset: 8B], tmp1190
 10567              	.LBE534:
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10568              		.loc 1 262 41 is_stmt 1 view .LVU3603
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10569              		.loc 1 262 24 view .LVU3604
 10570              	# sieve_extend.c:262:    for (counter_t i=1; i <= loop_range; i++) {
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10571              		.loc 1 262 4 is_stmt 0 view .LVU3605
 10572 3f41 48397C24 		cmp	QWORD PTR 72[rsp], rdi	# %sfp, ivtmp.638
 10572      48
 10573 3f46 0F84B200 		je	.L896	#,
 10573      0000
 10574              	.L1437:
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
GAS LISTING /tmp/cc64mrzX.s 			page 291


 10575              		.loc 1 262 4 view .LVU3606
 10576 3f4c 4C894424 		mov	QWORD PTR 80[rsp], r8	# %sfp, _69
 10576      50
 10577 3f51 4C8B5C24 		mov	r11, QWORD PTR 72[rsp]	# _1346, %sfp
 10577      48
 10578              	.L895:
 10579              	.LBB535:
 263:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10580              		.loc 1 263 9 is_stmt 1 view .LVU3607
 264:sieve_extend.c **** 
 10581              		.loc 1 264 8 view .LVU3608
 10582              	# sieve_extend.c:263:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 263:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10583              		.loc 1 263 20 is_stmt 0 view .LVU3609
 10584 3f56 4889F0   		mov	rax, rsi	# tmp591, ivtmp.636
 10585 3f59 31D2     		xor	edx, edx	# totalshift
 10586 3f5b 49F7F4   		div	r12	# step
 10587              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10588              		.loc 1 264 66 view .LVU3610
 10589 3f5e 4189E8   		mov	r8d, ebp	# tmp594, _1237
 10590 3f61 4C01CE   		add	rsi, r9	# ivtmp.636, pattern_shift
 10591 3f64 4883C720 		add	rdi, 32	# ivtmp.638,
 10592              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10593              		.loc 1 264 91 view .LVU3611
 10594 3f68 C4E2E9F7 		shlx	rax, rcx, rdx	# tmp592, pattern, totalshift
 10594      C1
 10595              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10596              		.loc 1 264 37 view .LVU3612
 10597 3f6d 480B47E8 		or	rax, QWORD PTR -24[rdi]	# tmp593, MEM[base: _1351, offset: 8B]
 10598              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10599              		.loc 1 264 66 view .LVU3613
 10600 3f71 4129D0   		sub	r8d, edx	# tmp594, totalshift
 10601              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10602              		.loc 1 264 50 view .LVU3614
 10603 3f74 C4E2BBF7 		shrx	rdx, rcx, r8	# tmp595, pattern, tmp594
 10603      D1
 10604              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10605              		.loc 1 264 66 view .LVU3615
 10606 3f79 4189E8   		mov	r8d, ebp	# tmp863, _1237
 10607              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10608              		.loc 1 264 37 view .LVU3616
 10609 3f7c 4809D0   		or	rax, rdx	# tmp596, tmp595
 10610              	# sieve_extend.c:263:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 263:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10611              		.loc 1 263 20 view .LVU3617
 10612 3f7f 31D2     		xor	edx, edx	# totalshift
 10613              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10614              		.loc 1 264 37 view .LVU3618
 10615 3f81 488947E8 		mov	QWORD PTR -24[rdi], rax	# MEM[base: _1351, offset: 8B], tmp596
GAS LISTING /tmp/cc64mrzX.s 			page 292


 10616              	.LBE535:
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10617              		.loc 1 262 41 is_stmt 1 view .LVU3619
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10618              		.loc 1 262 24 view .LVU3620
 10619              	.LBB536:
 263:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10620              		.loc 1 263 9 view .LVU3621
 264:sieve_extend.c **** 
 10621              		.loc 1 264 8 view .LVU3622
 10622              	# sieve_extend.c:263:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 263:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10623              		.loc 1 263 20 is_stmt 0 view .LVU3623
 10624 3f85 4889F0   		mov	rax, rsi	# tmp860, ivtmp.636
 10625 3f88 49F7F4   		div	r12	# step
 10626 3f8b 4C01CE   		add	rsi, r9	# ivtmp.636, pattern_shift
 10627              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10628              		.loc 1 264 91 view .LVU3624
 10629 3f8e C4E2E9F7 		shlx	rax, rcx, rdx	# tmp861, pattern, totalshift
 10629      C1
 10630              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10631              		.loc 1 264 37 view .LVU3625
 10632 3f93 480B47F0 		or	rax, QWORD PTR -16[rdi]	# tmp862, MEM[base: _1351, offset: 8B]
 10633              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10634              		.loc 1 264 66 view .LVU3626
 10635 3f97 4129D0   		sub	r8d, edx	# tmp863, totalshift
 10636              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10637              		.loc 1 264 50 view .LVU3627
 10638 3f9a C4E2BBF7 		shrx	rdx, rcx, r8	# tmp864, pattern, tmp863
 10638      D1
 10639              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10640              		.loc 1 264 66 view .LVU3628
 10641 3f9f 4189E8   		mov	r8d, ebp	# tmp872, _1237
 10642              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10643              		.loc 1 264 37 view .LVU3629
 10644 3fa2 4809D0   		or	rax, rdx	# tmp865, tmp864
 10645              	# sieve_extend.c:263:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 263:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10646              		.loc 1 263 20 view .LVU3630
 10647 3fa5 31D2     		xor	edx, edx	# totalshift
 10648              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10649              		.loc 1 264 37 view .LVU3631
 10650 3fa7 488947F0 		mov	QWORD PTR -16[rdi], rax	# MEM[base: _1351, offset: 8B], tmp865
 10651              	.LBE536:
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10652              		.loc 1 262 41 is_stmt 1 view .LVU3632
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10653              		.loc 1 262 24 view .LVU3633
 10654              	.LBB537:
 263:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
GAS LISTING /tmp/cc64mrzX.s 			page 293


 10655              		.loc 1 263 9 view .LVU3634
 264:sieve_extend.c **** 
 10656              		.loc 1 264 8 view .LVU3635
 10657              	# sieve_extend.c:263:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 263:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10658              		.loc 1 263 20 is_stmt 0 view .LVU3636
 10659 3fab 4889F0   		mov	rax, rsi	# tmp869, ivtmp.636
 10660 3fae 49F7F4   		div	r12	# step
 10661 3fb1 4C01CE   		add	rsi, r9	# ivtmp.636, pattern_shift
 10662              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10663              		.loc 1 264 91 view .LVU3637
 10664 3fb4 C4E2E9F7 		shlx	rax, rcx, rdx	# tmp870, pattern, totalshift
 10664      C1
 10665              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10666              		.loc 1 264 37 view .LVU3638
 10667 3fb9 480B47F8 		or	rax, QWORD PTR -8[rdi]	# tmp871, MEM[base: _1351, offset: 8B]
 10668              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10669              		.loc 1 264 66 view .LVU3639
 10670 3fbd 4129D0   		sub	r8d, edx	# tmp872, totalshift
 10671              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10672              		.loc 1 264 50 view .LVU3640
 10673 3fc0 C4E2BBF7 		shrx	rdx, rcx, r8	# tmp873, pattern, tmp872
 10673      D1
 10674              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10675              		.loc 1 264 66 view .LVU3641
 10676 3fc5 4189E8   		mov	r8d, ebp	# tmp881, _1237
 10677              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10678              		.loc 1 264 37 view .LVU3642
 10679 3fc8 4809D0   		or	rax, rdx	# tmp874, tmp873
 10680              	# sieve_extend.c:263:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 263:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10681              		.loc 1 263 20 view .LVU3643
 10682 3fcb 31D2     		xor	edx, edx	# totalshift
 10683              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10684              		.loc 1 264 37 view .LVU3644
 10685 3fcd 488947F8 		mov	QWORD PTR -8[rdi], rax	# MEM[base: _1351, offset: 8B], tmp874
 10686              	.LBE537:
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10687              		.loc 1 262 41 is_stmt 1 view .LVU3645
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10688              		.loc 1 262 24 view .LVU3646
 10689              	.LBB538:
 263:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10690              		.loc 1 263 9 view .LVU3647
 264:sieve_extend.c **** 
 10691              		.loc 1 264 8 view .LVU3648
 10692              	# sieve_extend.c:263:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 263:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10693              		.loc 1 263 20 is_stmt 0 view .LVU3649
 10694 3fd1 4889F0   		mov	rax, rsi	# tmp878, ivtmp.636
GAS LISTING /tmp/cc64mrzX.s 			page 294


 10695 3fd4 49F7F4   		div	r12	# step
 10696 3fd7 4C01CE   		add	rsi, r9	# ivtmp.636, pattern_shift
 10697              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10698              		.loc 1 264 91 view .LVU3650
 10699 3fda C4E2E9F7 		shlx	rax, rcx, rdx	# tmp879, pattern, totalshift
 10699      C1
 10700              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10701              		.loc 1 264 37 view .LVU3651
 10702 3fdf 480B07   		or	rax, QWORD PTR [rdi]	# tmp880, MEM[base: _1351, offset: 8B]
 10703              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10704              		.loc 1 264 66 view .LVU3652
 10705 3fe2 4129D0   		sub	r8d, edx	# tmp881, totalshift
 10706              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10707              		.loc 1 264 50 view .LVU3653
 10708 3fe5 C4E2BBF7 		shrx	rdx, rcx, r8	# tmp882, pattern, tmp881
 10708      D1
 10709              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 10710              		.loc 1 264 37 view .LVU3654
 10711 3fea 4809D0   		or	rax, rdx	# tmp883, tmp882
 10712 3fed 488907   		mov	QWORD PTR [rdi], rax	# MEM[base: _1351, offset: 8B], tmp883
 10713              	.LBE538:
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10714              		.loc 1 262 41 is_stmt 1 view .LVU3655
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10715              		.loc 1 262 24 view .LVU3656
 10716              	# sieve_extend.c:262:    for (counter_t i=1; i <= loop_range; i++) {
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10717              		.loc 1 262 4 is_stmt 0 view .LVU3657
 10718 3ff0 4939FB   		cmp	r11, rdi	# _1346, ivtmp.638
 10719 3ff3 0F855DFF 		jne	.L895	#,
 10719      FFFF
 10720 3ff9 4C8B4424 		mov	r8, QWORD PTR 80[rsp]	# _69, %sfp
 10720      50
 10721              	.L896:
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10722              		.loc 1 262 4 view .LVU3658
 10723              	.LBE531:
 268:sieve_extend.c **** 
 10724              		.loc 1 268 4 is_stmt 1 view .LVU3659
 10725              	# sieve_extend.c:268:    bitarray[range_stop_word] &= chopmask(range_stop);
 268:sieve_extend.c **** 
 10726              		.loc 1 268 30 is_stmt 0 view .LVU3660
 10727 3ffe 4C8B6424 		mov	r12, QWORD PTR 40[rsp]	# _1235, %sfp
 10727      28
 10728              	.LVL496:
 268:sieve_extend.c **** 
 10729              		.loc 1 268 30 view .LVU3661
 10730 4003 4F2124D7 		and	QWORD PTR [r15+r10*8], r12	# *_151, _1235
 10731              	.LVL497:
 268:sieve_extend.c **** 
 10732              		.loc 1 268 30 view .LVU3662
 10733              	.LBE528:
GAS LISTING /tmp/cc64mrzX.s 			page 295


 10734              	.LBE527:
 10735              	.LBE579:
 978:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 10736              		.loc 1 978 11 is_stmt 1 view .LVU3663
 10737              	# sieve_extend.c:978:     for (;range_stop < block_stop;) {
 978:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 10738              		.loc 1 978 5 is_stmt 0 view .LVU3664
 10739 4007 4C3B4424 		cmp	r8, QWORD PTR 8[rsp]	# _69, %sfp
 10739      08
 10740 400c 0F8204FC 		jb	.L919	#,
 10740      FFFF
 10741              	.L1491:
 978:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 10742              		.loc 1 978 5 view .LVU3665
 10743 4012 4C8B7C24 		mov	r15, QWORD PTR 48[rsp]	# <retval>, %sfp
 10743      30
 10744              	.LVL498:
 978:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 10745              		.loc 1 978 5 view .LVU3666
 10746 4017 4C89F2   		mov	rdx, r14	# block$pattern_size, patternsize_bits
 10747 401a 488B7424 		mov	rsi, QWORD PTR 16[rsp]	# block$pattern_start, %sfp
 10747      10
 10748              	.LBE585:
 10749              	.LBE593:
 10750              	.LBB594:
 10751              	.LBB595:
 10752              	# sieve_extend.c:873:     if (size < WORD_SIZE_counter)   {
 873:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 10753              		.loc 1 873 8 view .LVU3667
 10754 401f 4883FA3F 		cmp	rdx, 63	# block$pattern_size,
 10755              	.LBE595:
 10756              	.LBE594:
 10757              	.LBB600:
 10758              	.LBB586:
 10759              	# sieve_extend.c:978:     for (;range_stop < block_stop;) {
 978:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 10760              		.loc 1 978 5 view .LVU3668
 10761 4023 4C896C24 		mov	QWORD PTR 40[rsp], r13	# %sfp, index
 10761      28
1004:sieve_extend.c **** }
 10762              		.loc 1 1004 5 is_stmt 1 view .LVU3669
 10763              	.LVL499:
1004:sieve_extend.c **** }
 10764              		.loc 1 1004 5 is_stmt 0 view .LVU3670
 10765              	.LBE586:
 10766              	.LBE600:
1016:sieve_extend.c ****     prime = block.prime;
 10767              		.loc 1 1016 5 is_stmt 1 view .LVU3671
 10768              	.LBB601:
 10769              	.LBI594:
 872:sieve_extend.c ****     if (size < WORD_SIZE_counter)   {
 10770              		.loc 1 872 20 view .LVU3672
 10771              	.LBB596:
 873:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 10772              		.loc 1 873 5 view .LVU3673
 10773 4028 498B5F08 		mov	rbx, QWORD PTR 8[r15]	# prephitmp_1432, sieve_92->bits
 10774 402c 48895C24 		mov	QWORD PTR 8[rsp], rbx	# %sfp, prephitmp_1432
GAS LISTING /tmp/cc64mrzX.s 			page 296


 10774      08
 10775              	# sieve_extend.c:873:     if (size < WORD_SIZE_counter)   {
 873:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 10776              		.loc 1 873 8 is_stmt 0 view .LVU3674
 10777 4031 0F874705 		ja	.L920	#,
 10777      0000
 10778              	.LVL500:
 10779              	.L877:
 874:sieve_extend.c ****         return; // rapid exit for small sizes
 10780              		.loc 1 874 9 is_stmt 1 view .LVU3675
 10781 4037 488B4C24 		mov	rcx, QWORD PTR 8[rsp]	#, %sfp
 10781      08
 10782 403c 488B7C24 		mov	rdi, QWORD PTR 56[rsp]	#, %sfp
 10782      38
 10783 4041 E8BABFFF 		call	extendSieve_smallSize	#
 10783      FF
 10784              	.LVL501:
 875:sieve_extend.c ****     }
 10785              		.loc 1 875 9 view .LVU3676
 10786 4046 E9600500 		jmp	.L921	#
 10786      00
 10787              	.LVL502:
 10788 404b 0F1F4400 		.p2align 4,,7
 10788      00
 10789              		.p2align 3
 10790              	.L912:
 875:sieve_extend.c ****     }
 10791              		.loc 1 875 9 is_stmt 0 view .LVU3677
 10792              	.LBE596:
 10793              	.LBE601:
 10794              	.LBB602:
 10795              	.LBB587:
 10796              	.LBB580:
1000:sieve_extend.c ****         block.prime = prime;
 10797              		.loc 1 1000 48 is_stmt 1 view .LVU3678
 10798              	.LBB541:
 10799              	.LBI541:
 411:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange (%ju occurances
 10800              		.loc 1 411 20 view .LVU3679
 10801              	.LBB542:
 412:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 10802              		.loc 1 412 5 view .LVU3680
 413:sieve_extend.c **** 
 10803              		.loc 1 413 5 view .LVU3681
 10804              	# sieve_extend.c:413:     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * st
 413:sieve_extend.c **** 
 10805              		.loc 1 413 74 is_stmt 0 view .LVU3682
 10806 4050 4D89E3   		mov	r11, r12	# tmp625, step
 10807 4053 49C1E306 		sal	r11, 6	# tmp625,
 10808              	# sieve_extend.c:413:     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * st
 413:sieve_extend.c **** 
 10809              		.loc 1 413 21 view .LVU3683
 10810 4057 498D3C2B 		lea	rdi, [r11+rbp]	# range_stop_unique,
 10811              	.LVL503:
 417:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 10812              		.loc 1 417 5 is_stmt 1 view .LVU3684
 10813              	.LBB543:
GAS LISTING /tmp/cc64mrzX.s 			page 297


 417:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 10814              		.loc 1 417 10 view .LVU3685
 417:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 10815              		.loc 1 417 50 view .LVU3686
 10816              	# sieve_extend.c:417:     for (register counter_t index = range_start; index < range_stop_unique; i
 417:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 10817              		.loc 1 417 5 is_stmt 0 view .LVU3687
 10818 405b 4839FD   		cmp	rbp, rdi	# index, range_stop_unique
 10819 405e 0F83A7FB 		jnb	.L893	#,
 10819      FFFF
 10820              	.LBB544:
 10821              	.LBB545:
 10822              	# sieve_extend.c:174:    const counter_t range_stop_word = wordindex(range_stop);
 174:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 10823              		.loc 1 174 20 view .LVU3688
 10824 4064 4C89C2   		mov	rdx, r8	# range_stop_word, _69
 10825              	# sieve_extend.c:200:       *index_ptr |= (mask & chopmask(range_stop));
 200:sieve_extend.c ****    }
 10826              		.loc 1 200 29 view .LVU3689
 10827 4067 4489C6   		mov	esi, r8d	# tmp630, _69
 10828              	# sieve_extend.c:174:    const counter_t range_stop_word = wordindex(range_stop);
 174:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 10829              		.loc 1 174 20 view .LVU3690
 10830 406a 48C1EA06 		shr	rdx, 6	# range_stop_word,
 10831              	# sieve_extend.c:176:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 176:sieve_extend.c **** 
 10832              		.loc 1 176 110 view .LVU3691
 10833 406e 4B8D04A4 		lea	rax, [r12+r12*4]	# tmp628,
 10834              	# sieve_extend.c:200:       *index_ptr |= (mask & chopmask(range_stop));
 200:sieve_extend.c ****    }
 10835              		.loc 1 200 29 view .LVU3692
 10836 4072 49C7C2FF 		mov	r10, -1	# tmp1650,
 10836      FFFFFF
 10837 4079 F7D6     		not	esi	# tmp630
 10838 407b C442CBF7 		shrx	r11, r10, rsi	# _288, tmp1650, tmp630
 10838      DA
 10839              	# sieve_extend.c:176:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 176:sieve_extend.c **** 
 10840              		.loc 1 176 133 view .LVU3693
 10841 4080 4889D6   		mov	rsi, rdx	# tmp634, range_stop_word
 10842 4083 4829C6   		sub	rsi, rax	# tmp634, tmp628
 10843              	# sieve_extend.c:176:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 176:sieve_extend.c **** 
 10844              		.loc 1 176 53 view .LVU3694
 10845 4086 4839C2   		cmp	rdx, rax	# range_stop_word, tmp628
 10846              	# sieve_extend.c:200:       *index_ptr |= (mask & chopmask(range_stop));
 200:sieve_extend.c ****    }
 10847              		.loc 1 200 29 view .LVU3695
 10848 4089 4C895C24 		mov	QWORD PTR 40[rsp], r11	# %sfp, _288
 10848      28
 10849              	# sieve_extend.c:176:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 176:sieve_extend.c **** 
 10850              		.loc 1 176 53 view .LVU3696
 10851 408e 4D8D14F7 		lea	r10, [r15+rsi*8]	# tmp636,
 10852 4092 4D89E3   		mov	r11, r12	# _1320, step
 10853 4095 4D0F46D7 		cmovbe	r10, r15	# _97,, fast_loop_ptr
 10854              	.LBE545:
GAS LISTING /tmp/cc64mrzX.s 			page 298


 10855              	.LBE544:
 10856              	# sieve_extend.c:418:         applyMask(bitarray, step, range_stop, markmask(index), wordindex(inde
 418:sieve_extend.c ****     }
 10857              		.loc 1 418 9 view .LVU3697
 10858 4099 4C894424 		mov	QWORD PTR 72[rsp], r8	# %sfp, _69
 10858      48
 10859              	.LBB549:
 10860              	.LBB546:
 10861              	# sieve_extend.c:182:        index_ptr+=step;
 182:sieve_extend.c ****        *index_ptr |= mask;
 10862              		.loc 1 182 17 view .LVU3698
 10863 409e 4A8D0CE5 		lea	rcx, 0[0+r12*8]	# _256,
 10863      00000000 
 10864              	# sieve_extend.c:193:    const register bitword_t* __restrict range_stop_ptr = &bitarray[(range_sto
 193:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 10865              		.loc 1 193 41 view .LVU3699
 10866 40a6 4D8D0CD7 		lea	r9, [r15+rdx*8]	# range_stop_ptr,
 10867              	.LBE546:
 10868              	.LBE549:
 10869              	# sieve_extend.c:418:         applyMask(bitarray, step, range_stop, markmask(index), wordindex(inde
 418:sieve_extend.c ****     }
 10870              		.loc 1 418 9 view .LVU3700
 10871 40aa 4989F8   		mov	r8, rdi	# range_stop_unique, range_stop_unique
 10872              	.LVL504:
 418:sieve_extend.c ****     }
 10873              		.loc 1 418 9 view .LVU3701
 10874 40ad 48C1E003 		sal	rax, 3	# tmp640,
 10875 40b1 49C1E304 		sal	r11, 4	# _1320,
 10876              	.LVL505:
 10877 40b5 66662E0F 		.p2align 4
 10877      1F840000 
 10877      000000
 10878              		.p2align 3
 10879              	.L918:
 418:sieve_extend.c ****     }
 10880              		.loc 1 418 9 is_stmt 1 view .LVU3702
 10881 40c0 4889EA   		mov	rdx, rbp	# tmp643, index
 10882 40c3 BF010000 		mov	edi, 1	# tmp1653,
 10882      00
 10883 40c8 48C1EA06 		shr	rdx, 6	# tmp643,
 10884 40cc C4E2D1F7 		shlx	rsi, rdi, rbp	# _241, tmp1653, index
 10884      F7
 10885              	.LVL506:
 10886              	.LBB550:
 10887              	.LBI544:
 146:sieve_extend.c **** //#if __APPLE__
 10888              		.loc 1 146 20 view .LVU3703
 10889              	.LBB547:
 174:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 10890              		.loc 1 174 4 view .LVU3704
 175:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 10891              		.loc 1 175 4 view .LVU3705
 10892              	# sieve_extend.c:175:    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(
 175:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 10893              		.loc 1 175 78 is_stmt 0 view .LVU3706
 10894 40d1 498D14D7 		lea	rdx, [r15+rdx*8]	# index_ptr,
 10895              	.LVL507:
GAS LISTING /tmp/cc64mrzX.s 			page 299


 176:sieve_extend.c **** 
 10896              		.loc 1 176 4 is_stmt 1 view .LVU3707
 180:sieve_extend.c ****        *index_ptr |= mask;
 10897              		.loc 1 180 4 view .LVU3708
 180:sieve_extend.c ****        *index_ptr |= mask;
 10898              		.loc 1 180 10 view .LVU3709
 10899 40d5 4C39D2   		cmp	rdx, r10	# index_ptr, fast_loop_ptr
 10900 40d8 0F830201 		jnb	.L913	#,
 10900      0000
 180:sieve_extend.c ****        *index_ptr |= mask;
 10901              		.loc 1 180 10 is_stmt 0 view .LVU3710
 10902 40de 4A8D3C1A 		lea	rdi, [rdx+r11]	# ivtmp.679,
 10903              	.L914:
 181:sieve_extend.c ****        index_ptr+=step;
 10904              		.loc 1 181 8 is_stmt 1 view .LVU3711
 10905              	# sieve_extend.c:181:        *index_ptr |= mask;
 181:sieve_extend.c ****        index_ptr+=step;
 10906              		.loc 1 181 19 is_stmt 0 view .LVU3712
 10907 40e2 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_921, offset: 0B], _241
 182:sieve_extend.c ****        *index_ptr |= mask;
 10908              		.loc 1 182 8 is_stmt 1 view .LVU3713
 10909              	.LVL508:
 183:sieve_extend.c ****        index_ptr+=step;
 10910              		.loc 1 183 8 view .LVU3714
 10911              	# sieve_extend.c:183:        *index_ptr |= mask;
 183:sieve_extend.c ****        index_ptr+=step;
 10912              		.loc 1 183 19 is_stmt 0 view .LVU3715
 10913 40e5 4809340A 		or	QWORD PTR [rdx+rcx], rsi	# MEM[base: index_ptr_921, index: _256, offset: 0B], _241
 184:sieve_extend.c ****        *index_ptr |= mask;
 10914              		.loc 1 184 8 is_stmt 1 view .LVU3716
 10915              	.LVL509:
 185:sieve_extend.c ****        index_ptr+=step;
 10916              		.loc 1 185 8 view .LVU3717
 10917              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 10918              		.loc 1 185 19 is_stmt 0 view .LVU3718
 10919 40e9 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _1314, offset: 0B], _241
 186:sieve_extend.c ****        *index_ptr |= mask;
 10920              		.loc 1 186 8 is_stmt 1 view .LVU3719
 10921              	.LVL510:
 187:sieve_extend.c ****        index_ptr+=step;
 10922              		.loc 1 187 8 view .LVU3720
 10923              	# sieve_extend.c:187:        *index_ptr |= mask;
 187:sieve_extend.c ****        index_ptr+=step;
 10924              		.loc 1 187 19 is_stmt 0 view .LVU3721
 10925 40ec 4809340F 		or	QWORD PTR [rdi+rcx], rsi	# MEM[base: _1314, index: _256, offset: 0B], _241
 188:sieve_extend.c ****        *index_ptr |= mask;
 10926              		.loc 1 188 8 is_stmt 1 view .LVU3722
 10927              	.LVL511:
 189:sieve_extend.c ****        index_ptr+=step;
 10928              		.loc 1 189 8 view .LVU3723
 10929 40f0 4801C7   		add	rdi, rax	# ivtmp.679, tmp640
 10930              	# sieve_extend.c:189:        *index_ptr |= mask;
 189:sieve_extend.c ****        index_ptr+=step;
 10931              		.loc 1 189 19 is_stmt 0 view .LVU3724
 10932 40f3 4809348A 		or	QWORD PTR [rdx+rcx*4], rsi	# MEM[base: index_ptr_921, index: _256, step: 4, offset: 0B], _241
 190:sieve_extend.c ****    }
GAS LISTING /tmp/cc64mrzX.s 			page 300


 10933              		.loc 1 190 8 is_stmt 1 view .LVU3725
 10934 40f7 4801C2   		add	rdx, rax	# index_ptr, tmp640
 10935              	.LVL512:
 180:sieve_extend.c ****        *index_ptr |= mask;
 10936              		.loc 1 180 10 view .LVU3726
 10937 40fa 4939D2   		cmp	r10, rdx	# fast_loop_ptr, index_ptr
 10938 40fd 0F86DD00 		jbe	.L913	#,
 10938      0000
 181:sieve_extend.c ****        index_ptr+=step;
 10939              		.loc 1 181 8 view .LVU3727
 10940              	# sieve_extend.c:181:        *index_ptr |= mask;
 181:sieve_extend.c ****        index_ptr+=step;
 10941              		.loc 1 181 19 is_stmt 0 view .LVU3728
 10942 4103 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_921, offset: 0B], _241
 182:sieve_extend.c ****        *index_ptr |= mask;
 10943              		.loc 1 182 8 is_stmt 1 view .LVU3729
 10944              	.LVL513:
 183:sieve_extend.c ****        index_ptr+=step;
 10945              		.loc 1 183 8 view .LVU3730
 10946              	# sieve_extend.c:183:        *index_ptr |= mask;
 183:sieve_extend.c ****        index_ptr+=step;
 10947              		.loc 1 183 19 is_stmt 0 view .LVU3731
 10948 4106 4809340A 		or	QWORD PTR [rdx+rcx], rsi	# MEM[base: index_ptr_921, index: _256, offset: 0B], _241
 184:sieve_extend.c ****        *index_ptr |= mask;
 10949              		.loc 1 184 8 is_stmt 1 view .LVU3732
 10950              	.LVL514:
 185:sieve_extend.c ****        index_ptr+=step;
 10951              		.loc 1 185 8 view .LVU3733
 10952              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 10953              		.loc 1 185 19 is_stmt 0 view .LVU3734
 10954 410a 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _1314, offset: 0B], _241
 186:sieve_extend.c ****        *index_ptr |= mask;
 10955              		.loc 1 186 8 is_stmt 1 view .LVU3735
 10956              	.LVL515:
 187:sieve_extend.c ****        index_ptr+=step;
 10957              		.loc 1 187 8 view .LVU3736
 10958              	# sieve_extend.c:187:        *index_ptr |= mask;
 187:sieve_extend.c ****        index_ptr+=step;
 10959              		.loc 1 187 19 is_stmt 0 view .LVU3737
 10960 410d 4809340F 		or	QWORD PTR [rdi+rcx], rsi	# MEM[base: _1314, index: _256, offset: 0B], _241
 188:sieve_extend.c ****        *index_ptr |= mask;
 10961              		.loc 1 188 8 is_stmt 1 view .LVU3738
 10962              	.LVL516:
 189:sieve_extend.c ****        index_ptr+=step;
 10963              		.loc 1 189 8 view .LVU3739
 10964 4111 4801C7   		add	rdi, rax	# ivtmp.679, tmp640
 10965              	# sieve_extend.c:189:        *index_ptr |= mask;
 189:sieve_extend.c ****        index_ptr+=step;
 10966              		.loc 1 189 19 is_stmt 0 view .LVU3740
 10967 4114 4809348A 		or	QWORD PTR [rdx+rcx*4], rsi	# MEM[base: index_ptr_921, index: _256, step: 4, offset: 0B], _241
 190:sieve_extend.c ****    }
 10968              		.loc 1 190 8 is_stmt 1 view .LVU3741
 10969 4118 4801C2   		add	rdx, rax	# index_ptr, tmp640
 10970              	.LVL517:
 180:sieve_extend.c ****        *index_ptr |= mask;
 10971              		.loc 1 180 10 view .LVU3742
GAS LISTING /tmp/cc64mrzX.s 			page 301


 10972 411b 4939D2   		cmp	r10, rdx	# fast_loop_ptr, index_ptr
 10973 411e 0F86BC00 		jbe	.L913	#,
 10973      0000
 181:sieve_extend.c ****        index_ptr+=step;
 10974              		.loc 1 181 8 view .LVU3743
 10975              	# sieve_extend.c:181:        *index_ptr |= mask;
 181:sieve_extend.c ****        index_ptr+=step;
 10976              		.loc 1 181 19 is_stmt 0 view .LVU3744
 10977 4124 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_921, offset: 0B], _241
 182:sieve_extend.c ****        *index_ptr |= mask;
 10978              		.loc 1 182 8 is_stmt 1 view .LVU3745
 10979              	.LVL518:
 183:sieve_extend.c ****        index_ptr+=step;
 10980              		.loc 1 183 8 view .LVU3746
 10981              	# sieve_extend.c:183:        *index_ptr |= mask;
 183:sieve_extend.c ****        index_ptr+=step;
 10982              		.loc 1 183 19 is_stmt 0 view .LVU3747
 10983 4127 4809340A 		or	QWORD PTR [rdx+rcx], rsi	# MEM[base: index_ptr_921, index: _256, offset: 0B], _241
 184:sieve_extend.c ****        *index_ptr |= mask;
 10984              		.loc 1 184 8 is_stmt 1 view .LVU3748
 10985              	.LVL519:
 185:sieve_extend.c ****        index_ptr+=step;
 10986              		.loc 1 185 8 view .LVU3749
 10987              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 10988              		.loc 1 185 19 is_stmt 0 view .LVU3750
 10989 412b 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _1314, offset: 0B], _241
 186:sieve_extend.c ****        *index_ptr |= mask;
 10990              		.loc 1 186 8 is_stmt 1 view .LVU3751
 10991              	.LVL520:
 187:sieve_extend.c ****        index_ptr+=step;
 10992              		.loc 1 187 8 view .LVU3752
 10993              	# sieve_extend.c:187:        *index_ptr |= mask;
 187:sieve_extend.c ****        index_ptr+=step;
 10994              		.loc 1 187 19 is_stmt 0 view .LVU3753
 10995 412e 4809340F 		or	QWORD PTR [rdi+rcx], rsi	# MEM[base: _1314, index: _256, offset: 0B], _241
 188:sieve_extend.c ****        *index_ptr |= mask;
 10996              		.loc 1 188 8 is_stmt 1 view .LVU3754
 10997              	.LVL521:
 189:sieve_extend.c ****        index_ptr+=step;
 10998              		.loc 1 189 8 view .LVU3755
 10999 4132 4801C7   		add	rdi, rax	# ivtmp.679, tmp640
 11000              	# sieve_extend.c:189:        *index_ptr |= mask;
 189:sieve_extend.c ****        index_ptr+=step;
 11001              		.loc 1 189 19 is_stmt 0 view .LVU3756
 11002 4135 4809348A 		or	QWORD PTR [rdx+rcx*4], rsi	# MEM[base: index_ptr_921, index: _256, step: 4, offset: 0B], _241
 190:sieve_extend.c ****    }
 11003              		.loc 1 190 8 is_stmt 1 view .LVU3757
 11004 4139 4801C2   		add	rdx, rax	# index_ptr, tmp640
 11005              	.LVL522:
 180:sieve_extend.c ****        *index_ptr |= mask;
 11006              		.loc 1 180 10 view .LVU3758
 11007 413c 4939D2   		cmp	r10, rdx	# fast_loop_ptr, index_ptr
 11008 413f 0F869B00 		jbe	.L913	#,
 11008      0000
 181:sieve_extend.c ****        index_ptr+=step;
 11009              		.loc 1 181 8 view .LVU3759
GAS LISTING /tmp/cc64mrzX.s 			page 302


 11010              	# sieve_extend.c:181:        *index_ptr |= mask;
 181:sieve_extend.c ****        index_ptr+=step;
 11011              		.loc 1 181 19 is_stmt 0 view .LVU3760
 11012 4145 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_921, offset: 0B], _241
 182:sieve_extend.c ****        *index_ptr |= mask;
 11013              		.loc 1 182 8 is_stmt 1 view .LVU3761
 11014              	.LVL523:
 183:sieve_extend.c ****        index_ptr+=step;
 11015              		.loc 1 183 8 view .LVU3762
 11016              	# sieve_extend.c:183:        *index_ptr |= mask;
 183:sieve_extend.c ****        index_ptr+=step;
 11017              		.loc 1 183 19 is_stmt 0 view .LVU3763
 11018 4148 4809340A 		or	QWORD PTR [rdx+rcx], rsi	# MEM[base: index_ptr_921, index: _256, offset: 0B], _241
 184:sieve_extend.c ****        *index_ptr |= mask;
 11019              		.loc 1 184 8 is_stmt 1 view .LVU3764
 11020              	.LVL524:
 185:sieve_extend.c ****        index_ptr+=step;
 11021              		.loc 1 185 8 view .LVU3765
 11022              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 11023              		.loc 1 185 19 is_stmt 0 view .LVU3766
 11024 414c 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _1314, offset: 0B], _241
 186:sieve_extend.c ****        *index_ptr |= mask;
 11025              		.loc 1 186 8 is_stmt 1 view .LVU3767
 11026              	.LVL525:
 187:sieve_extend.c ****        index_ptr+=step;
 11027              		.loc 1 187 8 view .LVU3768
 11028              	# sieve_extend.c:187:        *index_ptr |= mask;
 187:sieve_extend.c ****        index_ptr+=step;
 11029              		.loc 1 187 19 is_stmt 0 view .LVU3769
 11030 414f 4809340F 		or	QWORD PTR [rdi+rcx], rsi	# MEM[base: _1314, index: _256, offset: 0B], _241
 188:sieve_extend.c ****        *index_ptr |= mask;
 11031              		.loc 1 188 8 is_stmt 1 view .LVU3770
 11032              	.LVL526:
 189:sieve_extend.c ****        index_ptr+=step;
 11033              		.loc 1 189 8 view .LVU3771
 11034 4153 4801C7   		add	rdi, rax	# ivtmp.679, tmp640
 11035              	# sieve_extend.c:189:        *index_ptr |= mask;
 189:sieve_extend.c ****        index_ptr+=step;
 11036              		.loc 1 189 19 is_stmt 0 view .LVU3772
 11037 4156 4809348A 		or	QWORD PTR [rdx+rcx*4], rsi	# MEM[base: index_ptr_921, index: _256, step: 4, offset: 0B], _241
 190:sieve_extend.c ****    }
 11038              		.loc 1 190 8 is_stmt 1 view .LVU3773
 11039 415a 4801C2   		add	rdx, rax	# index_ptr, tmp640
 11040              	.LVL527:
 180:sieve_extend.c ****        *index_ptr |= mask;
 11041              		.loc 1 180 10 view .LVU3774
 11042 415d 4939D2   		cmp	r10, rdx	# fast_loop_ptr, index_ptr
 11043 4160 767E     		jbe	.L913	#,
 181:sieve_extend.c ****        index_ptr+=step;
 11044              		.loc 1 181 8 view .LVU3775
 11045              	# sieve_extend.c:181:        *index_ptr |= mask;
 181:sieve_extend.c ****        index_ptr+=step;
 11046              		.loc 1 181 19 is_stmt 0 view .LVU3776
 11047 4162 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_921, offset: 0B], _241
 182:sieve_extend.c ****        *index_ptr |= mask;
 11048              		.loc 1 182 8 is_stmt 1 view .LVU3777
GAS LISTING /tmp/cc64mrzX.s 			page 303


 11049              	.LVL528:
 183:sieve_extend.c ****        index_ptr+=step;
 11050              		.loc 1 183 8 view .LVU3778
 11051              	# sieve_extend.c:183:        *index_ptr |= mask;
 183:sieve_extend.c ****        index_ptr+=step;
 11052              		.loc 1 183 19 is_stmt 0 view .LVU3779
 11053 4165 4809340A 		or	QWORD PTR [rdx+rcx], rsi	# MEM[base: index_ptr_921, index: _256, offset: 0B], _241
 184:sieve_extend.c ****        *index_ptr |= mask;
 11054              		.loc 1 184 8 is_stmt 1 view .LVU3780
 11055              	.LVL529:
 185:sieve_extend.c ****        index_ptr+=step;
 11056              		.loc 1 185 8 view .LVU3781
 11057              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 11058              		.loc 1 185 19 is_stmt 0 view .LVU3782
 11059 4169 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _1314, offset: 0B], _241
 186:sieve_extend.c ****        *index_ptr |= mask;
 11060              		.loc 1 186 8 is_stmt 1 view .LVU3783
 11061              	.LVL530:
 187:sieve_extend.c ****        index_ptr+=step;
 11062              		.loc 1 187 8 view .LVU3784
 11063              	# sieve_extend.c:187:        *index_ptr |= mask;
 187:sieve_extend.c ****        index_ptr+=step;
 11064              		.loc 1 187 19 is_stmt 0 view .LVU3785
 11065 416c 4809340F 		or	QWORD PTR [rdi+rcx], rsi	# MEM[base: _1314, index: _256, offset: 0B], _241
 188:sieve_extend.c ****        *index_ptr |= mask;
 11066              		.loc 1 188 8 is_stmt 1 view .LVU3786
 11067              	.LVL531:
 189:sieve_extend.c ****        index_ptr+=step;
 11068              		.loc 1 189 8 view .LVU3787
 11069 4170 4801C7   		add	rdi, rax	# ivtmp.679, tmp640
 11070              	# sieve_extend.c:189:        *index_ptr |= mask;
 189:sieve_extend.c ****        index_ptr+=step;
 11071              		.loc 1 189 19 is_stmt 0 view .LVU3788
 11072 4173 4809348A 		or	QWORD PTR [rdx+rcx*4], rsi	# MEM[base: index_ptr_921, index: _256, step: 4, offset: 0B], _241
 190:sieve_extend.c ****    }
 11073              		.loc 1 190 8 is_stmt 1 view .LVU3789
 11074 4177 4801C2   		add	rdx, rax	# index_ptr, tmp640
 11075              	.LVL532:
 180:sieve_extend.c ****        *index_ptr |= mask;
 11076              		.loc 1 180 10 view .LVU3790
 11077 417a 4939D2   		cmp	r10, rdx	# fast_loop_ptr, index_ptr
 11078 417d 7661     		jbe	.L913	#,
 181:sieve_extend.c ****        index_ptr+=step;
 11079              		.loc 1 181 8 view .LVU3791
 11080              	# sieve_extend.c:181:        *index_ptr |= mask;
 181:sieve_extend.c ****        index_ptr+=step;
 11081              		.loc 1 181 19 is_stmt 0 view .LVU3792
 11082 417f 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_921, offset: 0B], _241
 182:sieve_extend.c ****        *index_ptr |= mask;
 11083              		.loc 1 182 8 is_stmt 1 view .LVU3793
 11084              	.LVL533:
 183:sieve_extend.c ****        index_ptr+=step;
 11085              		.loc 1 183 8 view .LVU3794
 11086              	# sieve_extend.c:183:        *index_ptr |= mask;
 183:sieve_extend.c ****        index_ptr+=step;
 11087              		.loc 1 183 19 is_stmt 0 view .LVU3795
GAS LISTING /tmp/cc64mrzX.s 			page 304


 11088 4182 4809340A 		or	QWORD PTR [rdx+rcx], rsi	# MEM[base: index_ptr_921, index: _256, offset: 0B], _241
 184:sieve_extend.c ****        *index_ptr |= mask;
 11089              		.loc 1 184 8 is_stmt 1 view .LVU3796
 11090              	.LVL534:
 185:sieve_extend.c ****        index_ptr+=step;
 11091              		.loc 1 185 8 view .LVU3797
 11092              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 11093              		.loc 1 185 19 is_stmt 0 view .LVU3798
 11094 4186 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _1314, offset: 0B], _241
 186:sieve_extend.c ****        *index_ptr |= mask;
 11095              		.loc 1 186 8 is_stmt 1 view .LVU3799
 11096              	.LVL535:
 187:sieve_extend.c ****        index_ptr+=step;
 11097              		.loc 1 187 8 view .LVU3800
 11098              	# sieve_extend.c:187:        *index_ptr |= mask;
 187:sieve_extend.c ****        index_ptr+=step;
 11099              		.loc 1 187 19 is_stmt 0 view .LVU3801
 11100 4189 4809340F 		or	QWORD PTR [rdi+rcx], rsi	# MEM[base: _1314, index: _256, offset: 0B], _241
 188:sieve_extend.c ****        *index_ptr |= mask;
 11101              		.loc 1 188 8 is_stmt 1 view .LVU3802
 11102              	.LVL536:
 189:sieve_extend.c ****        index_ptr+=step;
 11103              		.loc 1 189 8 view .LVU3803
 11104 418d 4801C7   		add	rdi, rax	# ivtmp.679, tmp640
 11105              	# sieve_extend.c:189:        *index_ptr |= mask;
 189:sieve_extend.c ****        index_ptr+=step;
 11106              		.loc 1 189 19 is_stmt 0 view .LVU3804
 11107 4190 4809348A 		or	QWORD PTR [rdx+rcx*4], rsi	# MEM[base: index_ptr_921, index: _256, step: 4, offset: 0B], _241
 190:sieve_extend.c ****    }
 11108              		.loc 1 190 8 is_stmt 1 view .LVU3805
 11109 4194 4801C2   		add	rdx, rax	# index_ptr, tmp640
 11110              	.LVL537:
 180:sieve_extend.c ****        *index_ptr |= mask;
 11111              		.loc 1 180 10 view .LVU3806
 11112 4197 4939D2   		cmp	r10, rdx	# fast_loop_ptr, index_ptr
 11113 419a 7644     		jbe	.L913	#,
 181:sieve_extend.c ****        index_ptr+=step;
 11114              		.loc 1 181 8 view .LVU3807
 11115              	# sieve_extend.c:181:        *index_ptr |= mask;
 181:sieve_extend.c ****        index_ptr+=step;
 11116              		.loc 1 181 19 is_stmt 0 view .LVU3808
 11117 419c 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_921, offset: 0B], _241
 182:sieve_extend.c ****        *index_ptr |= mask;
 11118              		.loc 1 182 8 is_stmt 1 view .LVU3809
 11119              	.LVL538:
 183:sieve_extend.c ****        index_ptr+=step;
 11120              		.loc 1 183 8 view .LVU3810
 11121              	# sieve_extend.c:183:        *index_ptr |= mask;
 183:sieve_extend.c ****        index_ptr+=step;
 11122              		.loc 1 183 19 is_stmt 0 view .LVU3811
 11123 419f 4809340A 		or	QWORD PTR [rdx+rcx], rsi	# MEM[base: index_ptr_921, index: _256, offset: 0B], _241
 184:sieve_extend.c ****        *index_ptr |= mask;
 11124              		.loc 1 184 8 is_stmt 1 view .LVU3812
 11125              	.LVL539:
 185:sieve_extend.c ****        index_ptr+=step;
 11126              		.loc 1 185 8 view .LVU3813
GAS LISTING /tmp/cc64mrzX.s 			page 305


 11127              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 11128              		.loc 1 185 19 is_stmt 0 view .LVU3814
 11129 41a3 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _1314, offset: 0B], _241
 186:sieve_extend.c ****        *index_ptr |= mask;
 11130              		.loc 1 186 8 is_stmt 1 view .LVU3815
 11131              	.LVL540:
 187:sieve_extend.c ****        index_ptr+=step;
 11132              		.loc 1 187 8 view .LVU3816
 11133              	# sieve_extend.c:187:        *index_ptr |= mask;
 187:sieve_extend.c ****        index_ptr+=step;
 11134              		.loc 1 187 19 is_stmt 0 view .LVU3817
 11135 41a6 4809340F 		or	QWORD PTR [rdi+rcx], rsi	# MEM[base: _1314, index: _256, offset: 0B], _241
 188:sieve_extend.c ****        *index_ptr |= mask;
 11136              		.loc 1 188 8 is_stmt 1 view .LVU3818
 11137              	.LVL541:
 189:sieve_extend.c ****        index_ptr+=step;
 11138              		.loc 1 189 8 view .LVU3819
 11139 41aa 4801C7   		add	rdi, rax	# ivtmp.679, tmp640
 11140              	# sieve_extend.c:189:        *index_ptr |= mask;
 189:sieve_extend.c ****        index_ptr+=step;
 11141              		.loc 1 189 19 is_stmt 0 view .LVU3820
 11142 41ad 4809348A 		or	QWORD PTR [rdx+rcx*4], rsi	# MEM[base: index_ptr_921, index: _256, step: 4, offset: 0B], _241
 190:sieve_extend.c ****    }
 11143              		.loc 1 190 8 is_stmt 1 view .LVU3821
 11144 41b1 4801C2   		add	rdx, rax	# index_ptr, tmp640
 11145              	.LVL542:
 180:sieve_extend.c ****        *index_ptr |= mask;
 11146              		.loc 1 180 10 view .LVU3822
 11147 41b4 4939D2   		cmp	r10, rdx	# fast_loop_ptr, index_ptr
 11148 41b7 7627     		jbe	.L913	#,
 181:sieve_extend.c ****        index_ptr+=step;
 11149              		.loc 1 181 8 view .LVU3823
 11150              	# sieve_extend.c:181:        *index_ptr |= mask;
 181:sieve_extend.c ****        index_ptr+=step;
 11151              		.loc 1 181 19 is_stmt 0 view .LVU3824
 11152 41b9 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_921, offset: 0B], _241
 182:sieve_extend.c ****        *index_ptr |= mask;
 11153              		.loc 1 182 8 is_stmt 1 view .LVU3825
 11154              	.LVL543:
 183:sieve_extend.c ****        index_ptr+=step;
 11155              		.loc 1 183 8 view .LVU3826
 11156              	# sieve_extend.c:183:        *index_ptr |= mask;
 183:sieve_extend.c ****        index_ptr+=step;
 11157              		.loc 1 183 19 is_stmt 0 view .LVU3827
 11158 41bc 4809340A 		or	QWORD PTR [rdx+rcx], rsi	# MEM[base: index_ptr_921, index: _256, offset: 0B], _241
 184:sieve_extend.c ****        *index_ptr |= mask;
 11159              		.loc 1 184 8 is_stmt 1 view .LVU3828
 11160              	.LVL544:
 185:sieve_extend.c ****        index_ptr+=step;
 11161              		.loc 1 185 8 view .LVU3829
 11162              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 11163              		.loc 1 185 19 is_stmt 0 view .LVU3830
 11164 41c0 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _1314, offset: 0B], _241
 186:sieve_extend.c ****        *index_ptr |= mask;
 11165              		.loc 1 186 8 is_stmt 1 view .LVU3831
GAS LISTING /tmp/cc64mrzX.s 			page 306


 11166              	.LVL545:
 187:sieve_extend.c ****        index_ptr+=step;
 11167              		.loc 1 187 8 view .LVU3832
 11168              	# sieve_extend.c:187:        *index_ptr |= mask;
 187:sieve_extend.c ****        index_ptr+=step;
 11169              		.loc 1 187 19 is_stmt 0 view .LVU3833
 11170 41c3 4809340F 		or	QWORD PTR [rdi+rcx], rsi	# MEM[base: _1314, index: _256, offset: 0B], _241
 188:sieve_extend.c ****        *index_ptr |= mask;
 11171              		.loc 1 188 8 is_stmt 1 view .LVU3834
 11172              	.LVL546:
 189:sieve_extend.c ****        index_ptr+=step;
 11173              		.loc 1 189 8 view .LVU3835
 11174 41c7 4801C7   		add	rdi, rax	# ivtmp.679, tmp640
 11175              	# sieve_extend.c:189:        *index_ptr |= mask;
 189:sieve_extend.c ****        index_ptr+=step;
 11176              		.loc 1 189 19 is_stmt 0 view .LVU3836
 11177 41ca 4809348A 		or	QWORD PTR [rdx+rcx*4], rsi	# MEM[base: index_ptr_921, index: _256, step: 4, offset: 0B], _241
 190:sieve_extend.c ****    }
 11178              		.loc 1 190 8 is_stmt 1 view .LVU3837
 11179 41ce 4801C2   		add	rdx, rax	# index_ptr, tmp640
 11180              	.LVL547:
 180:sieve_extend.c ****        *index_ptr |= mask;
 11181              		.loc 1 180 10 view .LVU3838
 11182 41d1 4939D2   		cmp	r10, rdx	# fast_loop_ptr, index_ptr
 11183 41d4 0F8708FF 		ja	.L914	#,
 11183      FFFF
 11184 41da 660F1F44 		.p2align 4
 11184      0000
 11185              		.p2align 3
 11186              	.L913:
 193:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 11187              		.loc 1 193 4 view .LVU3839
 194:sieve_extend.c ****        *index_ptr |= mask;
 11188              		.loc 1 194 4 view .LVU3840
 194:sieve_extend.c ****        *index_ptr |= mask;
 11189              		.loc 1 194 10 view .LVU3841
 11190 41e0 4939D1   		cmp	r9, rdx	# range_stop_ptr, index_ptr
 11191 41e3 765B     		jbe	.L915	#,
 11192              	.L916:
 195:sieve_extend.c ****        index_ptr+=step;
 11193              		.loc 1 195 8 view .LVU3842
 11194              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 11195              		.loc 1 195 19 is_stmt 0 view .LVU3843
 11196 41e5 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_919, offset: 0B], _241
 196:sieve_extend.c ****    }
 11197              		.loc 1 196 8 is_stmt 1 view .LVU3844
 11198              	# sieve_extend.c:196:        index_ptr+=step;
 196:sieve_extend.c ****    }
 11199              		.loc 1 196 17 is_stmt 0 view .LVU3845
 11200 41e8 4801CA   		add	rdx, rcx	# index_ptr, _256
 11201              	.LVL548:
 194:sieve_extend.c ****        *index_ptr |= mask;
 11202              		.loc 1 194 10 is_stmt 1 view .LVU3846
 11203 41eb 4939D1   		cmp	r9, rdx	# range_stop_ptr, index_ptr
 11204 41ee 7650     		jbe	.L915	#,
 195:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/cc64mrzX.s 			page 307


 11205              		.loc 1 195 8 view .LVU3847
 11206              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 11207              		.loc 1 195 19 is_stmt 0 view .LVU3848
 11208 41f0 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_919, offset: 0B], _241
 196:sieve_extend.c ****    }
 11209              		.loc 1 196 8 is_stmt 1 view .LVU3849
 11210              	# sieve_extend.c:196:        index_ptr+=step;
 196:sieve_extend.c ****    }
 11211              		.loc 1 196 17 is_stmt 0 view .LVU3850
 11212 41f3 4801CA   		add	rdx, rcx	# index_ptr, _256
 11213              	.LVL549:
 194:sieve_extend.c ****        *index_ptr |= mask;
 11214              		.loc 1 194 10 is_stmt 1 view .LVU3851
 11215 41f6 4939D1   		cmp	r9, rdx	# range_stop_ptr, index_ptr
 11216 41f9 7645     		jbe	.L915	#,
 195:sieve_extend.c ****        index_ptr+=step;
 11217              		.loc 1 195 8 view .LVU3852
 11218              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 11219              		.loc 1 195 19 is_stmt 0 view .LVU3853
 11220 41fb 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_919, offset: 0B], _241
 196:sieve_extend.c ****    }
 11221              		.loc 1 196 8 is_stmt 1 view .LVU3854
 11222              	# sieve_extend.c:196:        index_ptr+=step;
 196:sieve_extend.c ****    }
 11223              		.loc 1 196 17 is_stmt 0 view .LVU3855
 11224 41fe 4801CA   		add	rdx, rcx	# index_ptr, _256
 11225              	.LVL550:
 194:sieve_extend.c ****        *index_ptr |= mask;
 11226              		.loc 1 194 10 is_stmt 1 view .LVU3856
 11227 4201 4939D1   		cmp	r9, rdx	# range_stop_ptr, index_ptr
 11228 4204 763A     		jbe	.L915	#,
 195:sieve_extend.c ****        index_ptr+=step;
 11229              		.loc 1 195 8 view .LVU3857
 11230              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 11231              		.loc 1 195 19 is_stmt 0 view .LVU3858
 11232 4206 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_919, offset: 0B], _241
 196:sieve_extend.c ****    }
 11233              		.loc 1 196 8 is_stmt 1 view .LVU3859
 11234              	# sieve_extend.c:196:        index_ptr+=step;
 196:sieve_extend.c ****    }
 11235              		.loc 1 196 17 is_stmt 0 view .LVU3860
 11236 4209 4801CA   		add	rdx, rcx	# index_ptr, _256
 11237              	.LVL551:
 194:sieve_extend.c ****        *index_ptr |= mask;
 11238              		.loc 1 194 10 is_stmt 1 view .LVU3861
 11239 420c 4939D1   		cmp	r9, rdx	# range_stop_ptr, index_ptr
 11240 420f 762F     		jbe	.L915	#,
 195:sieve_extend.c ****        index_ptr+=step;
 11241              		.loc 1 195 8 view .LVU3862
 11242              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 11243              		.loc 1 195 19 is_stmt 0 view .LVU3863
 11244 4211 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_919, offset: 0B], _241
 196:sieve_extend.c ****    }
GAS LISTING /tmp/cc64mrzX.s 			page 308


 11245              		.loc 1 196 8 is_stmt 1 view .LVU3864
 11246              	# sieve_extend.c:196:        index_ptr+=step;
 196:sieve_extend.c ****    }
 11247              		.loc 1 196 17 is_stmt 0 view .LVU3865
 11248 4214 4801CA   		add	rdx, rcx	# index_ptr, _256
 11249              	.LVL552:
 194:sieve_extend.c ****        *index_ptr |= mask;
 11250              		.loc 1 194 10 is_stmt 1 view .LVU3866
 11251 4217 4939D1   		cmp	r9, rdx	# range_stop_ptr, index_ptr
 11252 421a 7624     		jbe	.L915	#,
 195:sieve_extend.c ****        index_ptr+=step;
 11253              		.loc 1 195 8 view .LVU3867
 11254              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 11255              		.loc 1 195 19 is_stmt 0 view .LVU3868
 11256 421c 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_919, offset: 0B], _241
 196:sieve_extend.c ****    }
 11257              		.loc 1 196 8 is_stmt 1 view .LVU3869
 11258              	# sieve_extend.c:196:        index_ptr+=step;
 196:sieve_extend.c ****    }
 11259              		.loc 1 196 17 is_stmt 0 view .LVU3870
 11260 421f 4801CA   		add	rdx, rcx	# index_ptr, _256
 11261              	.LVL553:
 194:sieve_extend.c ****        *index_ptr |= mask;
 11262              		.loc 1 194 10 is_stmt 1 view .LVU3871
 11263 4222 4939D1   		cmp	r9, rdx	# range_stop_ptr, index_ptr
 11264 4225 7619     		jbe	.L915	#,
 195:sieve_extend.c ****        index_ptr+=step;
 11265              		.loc 1 195 8 view .LVU3872
 11266              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 11267              		.loc 1 195 19 is_stmt 0 view .LVU3873
 11268 4227 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_919, offset: 0B], _241
 196:sieve_extend.c ****    }
 11269              		.loc 1 196 8 is_stmt 1 view .LVU3874
 11270              	# sieve_extend.c:196:        index_ptr+=step;
 196:sieve_extend.c ****    }
 11271              		.loc 1 196 17 is_stmt 0 view .LVU3875
 11272 422a 4801CA   		add	rdx, rcx	# index_ptr, _256
 11273              	.LVL554:
 194:sieve_extend.c ****        *index_ptr |= mask;
 11274              		.loc 1 194 10 is_stmt 1 view .LVU3876
 11275 422d 4939D1   		cmp	r9, rdx	# range_stop_ptr, index_ptr
 11276 4230 760E     		jbe	.L915	#,
 195:sieve_extend.c ****        index_ptr+=step;
 11277              		.loc 1 195 8 view .LVU3877
 11278              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 11279              		.loc 1 195 19 is_stmt 0 view .LVU3878
 11280 4232 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_919, offset: 0B], _241
 196:sieve_extend.c ****    }
 11281              		.loc 1 196 8 is_stmt 1 view .LVU3879
 11282              	# sieve_extend.c:196:        index_ptr+=step;
 196:sieve_extend.c ****    }
 11283              		.loc 1 196 17 is_stmt 0 view .LVU3880
 11284 4235 4801CA   		add	rdx, rcx	# index_ptr, _256
 11285              	.LVL555:
GAS LISTING /tmp/cc64mrzX.s 			page 309


 194:sieve_extend.c ****        *index_ptr |= mask;
 11286              		.loc 1 194 10 is_stmt 1 view .LVU3881
 11287 4238 4939D1   		cmp	r9, rdx	# range_stop_ptr, index_ptr
 11288 423b 77A8     		ja	.L916	#,
 11289 423d 0F1F00   		.p2align 4
 11290              		.p2align 3
 11291              	.L915:
 199:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 11292              		.loc 1 199 4 view .LVU3882
 11293              	# sieve_extend.c:199:    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range
 199:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 11294              		.loc 1 199 7 is_stmt 0 view .LVU3883
 11295 4240 4939D1   		cmp	r9, rdx	# range_stop_ptr, index_ptr
 11296 4243 741B     		je	.L1495	#,
 11297              	.LVL556:
 11298              	.L917:
 199:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 11299              		.loc 1 199 7 view .LVU3884
 11300              	.LBE547:
 11301              	.LBE550:
 417:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 11302              		.loc 1 417 77 is_stmt 1 view .LVU3885
 11303              	# sieve_extend.c:417:     for (register counter_t index = range_start; index < range_stop_unique; i
 417:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 11304              		.loc 1 417 83 is_stmt 0 view .LVU3886
 11305 4245 4C01E5   		add	rbp, r12	# index, step
 11306              	.LVL557:
 417:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 11307              		.loc 1 417 50 is_stmt 1 view .LVU3887
 11308              	# sieve_extend.c:417:     for (register counter_t index = range_start; index < range_stop_unique; i
 417:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 11309              		.loc 1 417 5 is_stmt 0 view .LVU3888
 11310 4248 4939E8   		cmp	r8, rbp	# range_stop_unique, index
 11311 424b 0F876FFE 		ja	.L918	#,
 11311      FFFF
 11312 4251 4C8B4424 		mov	r8, QWORD PTR 72[rsp]	# _69, %sfp
 11312      48
 11313              	.LVL558:
 417:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 11314              		.loc 1 417 5 view .LVU3889
 11315 4256 E9B0F9FF 		jmp	.L893	#
 11315      FF
 11316              	.LVL559:
 11317 425b 0F1F4400 		.p2align 4,,7
 11317      00
 11318              		.p2align 3
 11319              	.L1495:
 11320              	.LBB551:
 11321              	.LBB548:
 200:sieve_extend.c ****    }
 11322              		.loc 1 200 7 is_stmt 1 view .LVU3890
 11323              	# sieve_extend.c:200:       *index_ptr |= (mask & chopmask(range_stop));
 200:sieve_extend.c ****    }
 11324              		.loc 1 200 27 is_stmt 0 view .LVU3891
 11325 4260 48237424 		and	rsi, QWORD PTR 40[rsp]	# tmp645, %sfp
 11325      28
 11326              	.LVL560:
GAS LISTING /tmp/cc64mrzX.s 			page 310


 11327              	# sieve_extend.c:200:       *index_ptr |= (mask & chopmask(range_stop));
 200:sieve_extend.c ****    }
 11328              		.loc 1 200 18 view .LVU3892
 11329 4265 490931   		or	QWORD PTR [r9], rsi	# *index_ptr_918, tmp645
 11330 4268 EBDB     		jmp	.L917	#
 11331              	.LVL561:
 11332 426a 660F1F44 		.p2align 4,,7
 11332      0000
 11333              		.p2align 3
 11334              	.L1490:
 200:sieve_extend.c ****    }
 11335              		.loc 1 200 18 view .LVU3893
 11336              	.LBE548:
 11337              	.LBE551:
 11338              	.LBE543:
 11339              	.LBE542:
 11340              	.LBE541:
 998:sieve_extend.c ****         else if (step < WORD_SIZE_counter * 4) setBitsTrue_largeRange_vector(bitarray, start, step,
 11341              		.loc 1 998 48 is_stmt 1 view .LVU3894
 11342              	.LBB552:
 11343              	.LBI552:
 296:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 11344              		.loc 1 296 14 view .LVU3895
 11345              	.LBB553:
 297:sieve_extend.c **** 
 11346              		.loc 1 297 5 view .LVU3896
 11347              	# sieve_extend.c:297:     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * st
 297:sieve_extend.c **** 
 11348              		.loc 1 297 74 is_stmt 0 view .LVU3897
 11349 4270 4C89E7   		mov	rdi, r12	# tmp597, step
 11350 4273 48C1E706 		sal	rdi, 6	# tmp597,
 11351 4277 4801EF   		add	rdi, rbp	# tmp597, index
 11352 427a 48897C24 		mov	QWORD PTR 72[rsp], rdi	# %sfp, tmp598
 11352      48
 11353 427f 0F92C0   		setc	al	#, _592
 11354              	# sieve_extend.c:299:     if (range_stop_unique > range_stop) { // the range will not repeat itself
 299:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-unique (%ju
 11355              		.loc 1 299 8 view .LVU3898
 11356 4282 4939F8   		cmp	r8, rdi	# _69, tmp598
 11357 4285 440FB6C8 		movzx	r9d, al	# _592, _592
 11358              	.LVL562:
 299:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-unique (%ju
 11359              		.loc 1 299 5 is_stmt 1 view .LVU3899
 11360              	# sieve_extend.c:299:     if (range_stop_unique > range_stop) { // the range will not repeat itself
 299:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-unique (%ju
 11361              		.loc 1 299 8 is_stmt 0 view .LVU3900
 11362 4289 0F827404 		jb	.L900	#,
 11362      0000
 11363              	.LVL563:
 11364              	.LBB554:
 320:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 11365              		.loc 1 320 54 is_stmt 1 view .LVU3901
 11366              	# sieve_extend.c:320:         for (register counter_t index = range_start; index <= range_stop_uniq
 320:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 11367              		.loc 1 320 9 is_stmt 0 view .LVU3902
 11368 428f 4D85C9   		test	r9, r9	# _592
 11369 4292 0F8573F9 		jne	.L893	#,
GAS LISTING /tmp/cc64mrzX.s 			page 311


 11369      FFFF
 11370              	.LBB555:
 11371              	.LBB556:
 11372              	.LBB557:
 11373              	# sieve_extend.c:174:    const counter_t range_stop_word = wordindex(range_stop);
 174:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 11374              		.loc 1 174 20 view .LVU3903
 11375 4298 4D89C3   		mov	r11, r8	# range_stop_word, _69
 11376              	# sieve_extend.c:176:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 176:sieve_extend.c **** 
 11377              		.loc 1 176 110 view .LVU3904
 11378 429b 4B8D3CA4 		lea	rdi, [r12+r12*4]	# tmp606,
 11379              	.LVL564:
 11380              	# sieve_extend.c:174:    const counter_t range_stop_word = wordindex(range_stop);
 174:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 11381              		.loc 1 174 20 view .LVU3905
 11382 429f 49C1EB06 		shr	r11, 6	# range_stop_word,
 11383              	# sieve_extend.c:200:       *index_ptr |= (mask & chopmask(range_stop));
 200:sieve_extend.c ****    }
 11384              		.loc 1 200 29 view .LVU3906
 11385 42a3 4589C2   		mov	r10d, r8d	# tmp608, _69
 11386              	# sieve_extend.c:176:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 176:sieve_extend.c **** 
 11387              		.loc 1 176 133 view .LVU3907
 11388 42a6 4C89D8   		mov	rax, r11	# tmp612, range_stop_word
 11389              	# sieve_extend.c:200:       *index_ptr |= (mask & chopmask(range_stop));
 200:sieve_extend.c ****    }
 11390              		.loc 1 200 29 view .LVU3908
 11391 42a9 41F7D2   		not	r10d	# tmp608
 11392              	# sieve_extend.c:176:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 176:sieve_extend.c **** 
 11393              		.loc 1 176 133 view .LVU3909
 11394 42ac 4829F8   		sub	rax, rdi	# tmp612, tmp606
 11395 42af 4939FB   		cmp	r11, rdi	# range_stop_word, tmp606
 11396              	# sieve_extend.c:200:       *index_ptr |= (mask & chopmask(range_stop));
 200:sieve_extend.c ****    }
 11397              		.loc 1 200 29 view .LVU3910
 11398 42b2 48C7C6FF 		mov	rsi, -1	# tmp1638,
 11398      FFFFFF
 11399 42b9 C4E2ABF7 		shrx	rdx, rsi, r10	# _232, tmp1638, tmp608
 11399      D6
 11400 42be 4D8D14C7 		lea	r10, [r15+rax*8]	# tmp614,
 11401 42c2 4C89E6   		mov	rsi, r12	# _1339, step
 11402 42c5 4D0F46D7 		cmovbe	r10, r15	# _97,, fast_loop_ptr
 11403              	# sieve_extend.c:193:    const register bitword_t* __restrict range_stop_ptr = &bitarray[(range_sto
 193:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 11404              		.loc 1 193 41 view .LVU3911
 11405 42c9 4F8D0CDF 		lea	r9, [r15+r11*8]	# range_stop_ptr,
 11406 42cd 48C1E604 		sal	rsi, 4	# _1339,
 11407              	# sieve_extend.c:182:        index_ptr+=step;
 182:sieve_extend.c ****        *index_ptr |= mask;
 11408              		.loc 1 182 17 view .LVU3912
 11409 42d1 4A8D0CE5 		lea	rcx, 0[0+r12*8]	# _200,
 11409      00000000 
 11410              	.LBE557:
 11411              	.LBE556:
 11412              	# sieve_extend.c:325:                 mask |= markmask(index);
GAS LISTING /tmp/cc64mrzX.s 			page 312


 325:sieve_extend.c ****                 index += step;
 11413              		.loc 1 325 25 view .LVU3913
 11414 42d9 48895C24 		mov	QWORD PTR 80[rsp], rbx	# %sfp, index
 11414      50
 11415 42de 41BB0100 		mov	r11d, 1	# tmp621,
 11415      0000
 11416 42e4 4C894424 		mov	QWORD PTR 88[rsp], r8	# %sfp, _69
 11416      58
 11417 42e9 4889F3   		mov	rbx, rsi	# _1339, _1339
 11418              	.LBB561:
 11419              	.LBB558:
 11420              	# sieve_extend.c:200:       *index_ptr |= (mask & chopmask(range_stop));
 200:sieve_extend.c ****    }
 11421              		.loc 1 200 29 view .LVU3914
 11422 42ec 48895424 		mov	QWORD PTR 40[rsp], rdx	# %sfp, _232
 11422      28
 11423 42f1 48C1E703 		sal	rdi, 3	# tmp618,
 11424              	.LBE558:
 11425              	.LBE561:
 11426              	# sieve_extend.c:325:                 mask |= markmask(index);
 325:sieve_extend.c ****                 index += step;
 11427              		.loc 1 325 25 view .LVU3915
 11428 42f5 4C8B4424 		mov	r8, QWORD PTR 72[rsp]	# tmp598, %sfp
 11428      48
 11429              	.LVL565:
 11430 42fa 660F1F44 		.p2align 4
 11430      0000
 11431              		.p2align 3
 11432              	.L911:
 321:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 11433              		.loc 1 321 13 is_stmt 1 view .LVU3916
 11434              	# sieve_extend.c:321:             register counter_t index_word = wordindex(index);
 321:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 11435              		.loc 1 321 32 is_stmt 0 view .LVU3917
 11436 4300 4889E8   		mov	rax, rbp	# index_word, index
 11437              	# sieve_extend.c:322:             register bitword_t mask = SAFE_ZERO;
 322:sieve_extend.c ****             #pragma ivdep
 11438              		.loc 1 322 32 view .LVU3918
 11439 4303 31D2     		xor	edx, edx	# mask
 11440              	# sieve_extend.c:321:             register counter_t index_word = wordindex(index);
 321:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 11441              		.loc 1 321 32 view .LVU3919
 11442 4305 48C1E806 		shr	rax, 6	# index_word,
 11443              	.LVL566:
 322:sieve_extend.c ****             #pragma ivdep
 11444              		.loc 1 322 13 is_stmt 1 view .LVU3920
 11445              	.L905:
 324:sieve_extend.c ****                 mask |= markmask(index);
 11446              		.loc 1 324 13 view .LVU3921
 325:sieve_extend.c ****                 index += step;
 11447              		.loc 1 325 17 view .LVU3922
 11448              	# sieve_extend.c:325:                 mask |= markmask(index);
 325:sieve_extend.c ****                 index += step;
 11449              		.loc 1 325 25 is_stmt 0 view .LVU3923
 11450 4309 C4C2D1F7 		shlx	rsi, r11, rbp	# tmp620, tmp621, index
 11450      F3
 11451              	# sieve_extend.c:326:                 index += step;
GAS LISTING /tmp/cc64mrzX.s 			page 313


 326:sieve_extend.c ****             } while (index_word == wordindex(index));
 11452              		.loc 1 326 23 view .LVU3924
 11453 430e 4C01E5   		add	rbp, r12	# index, step
 11454              	.LVL567:
 11455              	# sieve_extend.c:325:                 mask |= markmask(index);
 325:sieve_extend.c ****                 index += step;
 11456              		.loc 1 325 22 view .LVU3925
 11457 4311 4809F2   		or	rdx, rsi	# mask, tmp620
 11458              	.LVL568:
 326:sieve_extend.c ****             } while (index_word == wordindex(index));
 11459              		.loc 1 326 17 is_stmt 1 view .LVU3926
 327:sieve_extend.c ****             // #pragma ivdep
 11460              		.loc 1 327 21 view .LVU3927
 11461              	# sieve_extend.c:327:             } while (index_word == wordindex(index));
 327:sieve_extend.c ****             // #pragma ivdep
 11462              		.loc 1 327 36 is_stmt 0 view .LVU3928
 11463 4314 4889EE   		mov	rsi, rbp	# tmp622, index
 11464 4317 48C1EE06 		shr	rsi, 6	# tmp622,
 11465              	# sieve_extend.c:327:             } while (index_word == wordindex(index));
 327:sieve_extend.c ****             // #pragma ivdep
 11466              		.loc 1 327 13 view .LVU3929
 11467 431b 4839F0   		cmp	rax, rsi	# index_word, tmp622
 11468 431e 0F85AC00 		jne	.L1351	#,
 11468      0000
 324:sieve_extend.c ****                 mask |= markmask(index);
 11469              		.loc 1 324 13 is_stmt 1 view .LVU3930
 325:sieve_extend.c ****                 index += step;
 11470              		.loc 1 325 17 view .LVU3931
 11471              	# sieve_extend.c:325:                 mask |= markmask(index);
 325:sieve_extend.c ****                 index += step;
 11472              		.loc 1 325 25 is_stmt 0 view .LVU3932
 11473 4324 C4C2D1F7 		shlx	rsi, r11, rbp	# tmp1224, tmp621, index
 11473      F3
 11474              	# sieve_extend.c:326:                 index += step;
 326:sieve_extend.c ****             } while (index_word == wordindex(index));
 11475              		.loc 1 326 23 view .LVU3933
 11476 4329 4C01E5   		add	rbp, r12	# index, step
 11477              	.LVL569:
 11478              	# sieve_extend.c:325:                 mask |= markmask(index);
 325:sieve_extend.c ****                 index += step;
 11479              		.loc 1 325 22 view .LVU3934
 11480 432c 4809F2   		or	rdx, rsi	# mask, tmp1224
 11481              	.LVL570:
 326:sieve_extend.c ****             } while (index_word == wordindex(index));
 11482              		.loc 1 326 17 is_stmt 1 view .LVU3935
 327:sieve_extend.c ****             // #pragma ivdep
 11483              		.loc 1 327 21 view .LVU3936
 11484              	# sieve_extend.c:327:             } while (index_word == wordindex(index));
 327:sieve_extend.c ****             // #pragma ivdep
 11485              		.loc 1 327 36 is_stmt 0 view .LVU3937
 11486 432f 4889EE   		mov	rsi, rbp	# tmp1225, index
 11487 4332 48C1EE06 		shr	rsi, 6	# tmp1225,
 11488              	# sieve_extend.c:327:             } while (index_word == wordindex(index));
 327:sieve_extend.c ****             // #pragma ivdep
 11489              		.loc 1 327 13 view .LVU3938
 11490 4336 4839F0   		cmp	rax, rsi	# index_word, tmp1225
 11491 4339 0F859100 		jne	.L1351	#,
GAS LISTING /tmp/cc64mrzX.s 			page 314


 11491      0000
 324:sieve_extend.c ****                 mask |= markmask(index);
 11492              		.loc 1 324 13 is_stmt 1 view .LVU3939
 325:sieve_extend.c ****                 index += step;
 11493              		.loc 1 325 17 view .LVU3940
 11494              	# sieve_extend.c:325:                 mask |= markmask(index);
 325:sieve_extend.c ****                 index += step;
 11495              		.loc 1 325 25 is_stmt 0 view .LVU3941
 11496 433f C4C2D1F7 		shlx	rsi, r11, rbp	# tmp1226, tmp621, index
 11496      F3
 11497              	# sieve_extend.c:326:                 index += step;
 326:sieve_extend.c ****             } while (index_word == wordindex(index));
 11498              		.loc 1 326 23 view .LVU3942
 11499 4344 4C01E5   		add	rbp, r12	# index, step
 11500              	.LVL571:
 11501              	# sieve_extend.c:325:                 mask |= markmask(index);
 325:sieve_extend.c ****                 index += step;
 11502              		.loc 1 325 22 view .LVU3943
 11503 4347 4809F2   		or	rdx, rsi	# mask, tmp1226
 11504              	.LVL572:
 326:sieve_extend.c ****             } while (index_word == wordindex(index));
 11505              		.loc 1 326 17 is_stmt 1 view .LVU3944
 327:sieve_extend.c ****             // #pragma ivdep
 11506              		.loc 1 327 21 view .LVU3945
 11507              	# sieve_extend.c:327:             } while (index_word == wordindex(index));
 327:sieve_extend.c ****             // #pragma ivdep
 11508              		.loc 1 327 36 is_stmt 0 view .LVU3946
 11509 434a 4889EE   		mov	rsi, rbp	# tmp1227, index
 11510 434d 48C1EE06 		shr	rsi, 6	# tmp1227,
 11511              	# sieve_extend.c:327:             } while (index_word == wordindex(index));
 327:sieve_extend.c ****             // #pragma ivdep
 11512              		.loc 1 327 13 view .LVU3947
 11513 4351 4839F0   		cmp	rax, rsi	# index_word, tmp1227
 11514 4354 757A     		jne	.L1351	#,
 324:sieve_extend.c ****                 mask |= markmask(index);
 11515              		.loc 1 324 13 is_stmt 1 view .LVU3948
 325:sieve_extend.c ****                 index += step;
 11516              		.loc 1 325 17 view .LVU3949
 11517              	# sieve_extend.c:325:                 mask |= markmask(index);
 325:sieve_extend.c ****                 index += step;
 11518              		.loc 1 325 25 is_stmt 0 view .LVU3950
 11519 4356 C4C2D1F7 		shlx	rsi, r11, rbp	# tmp1228, tmp621, index
 11519      F3
 11520              	# sieve_extend.c:326:                 index += step;
 326:sieve_extend.c ****             } while (index_word == wordindex(index));
 11521              		.loc 1 326 23 view .LVU3951
 11522 435b 4C01E5   		add	rbp, r12	# index, step
 11523              	.LVL573:
 11524              	# sieve_extend.c:325:                 mask |= markmask(index);
 325:sieve_extend.c ****                 index += step;
 11525              		.loc 1 325 22 view .LVU3952
 11526 435e 4809F2   		or	rdx, rsi	# mask, tmp1228
 11527              	.LVL574:
 326:sieve_extend.c ****             } while (index_word == wordindex(index));
 11528              		.loc 1 326 17 is_stmt 1 view .LVU3953
 327:sieve_extend.c ****             // #pragma ivdep
 11529              		.loc 1 327 21 view .LVU3954
GAS LISTING /tmp/cc64mrzX.s 			page 315


 11530              	# sieve_extend.c:327:             } while (index_word == wordindex(index));
 327:sieve_extend.c ****             // #pragma ivdep
 11531              		.loc 1 327 36 is_stmt 0 view .LVU3955
 11532 4361 4889EE   		mov	rsi, rbp	# tmp1229, index
 11533 4364 48C1EE06 		shr	rsi, 6	# tmp1229,
 11534              	# sieve_extend.c:327:             } while (index_word == wordindex(index));
 327:sieve_extend.c ****             // #pragma ivdep
 11535              		.loc 1 327 13 view .LVU3956
 11536 4368 4839F0   		cmp	rax, rsi	# index_word, tmp1229
 11537 436b 7563     		jne	.L1351	#,
 324:sieve_extend.c ****                 mask |= markmask(index);
 11538              		.loc 1 324 13 is_stmt 1 view .LVU3957
 325:sieve_extend.c ****                 index += step;
 11539              		.loc 1 325 17 view .LVU3958
 11540              	# sieve_extend.c:325:                 mask |= markmask(index);
 325:sieve_extend.c ****                 index += step;
 11541              		.loc 1 325 25 is_stmt 0 view .LVU3959
 11542 436d C4C2D1F7 		shlx	rsi, r11, rbp	# tmp1230, tmp621, index
 11542      F3
 11543              	# sieve_extend.c:326:                 index += step;
 326:sieve_extend.c ****             } while (index_word == wordindex(index));
 11544              		.loc 1 326 23 view .LVU3960
 11545 4372 4C01E5   		add	rbp, r12	# index, step
 11546              	.LVL575:
 11547              	# sieve_extend.c:325:                 mask |= markmask(index);
 325:sieve_extend.c ****                 index += step;
 11548              		.loc 1 325 22 view .LVU3961
 11549 4375 4809F2   		or	rdx, rsi	# mask, tmp1230
 11550              	.LVL576:
 326:sieve_extend.c ****             } while (index_word == wordindex(index));
 11551              		.loc 1 326 17 is_stmt 1 view .LVU3962
 327:sieve_extend.c ****             // #pragma ivdep
 11552              		.loc 1 327 21 view .LVU3963
 11553              	# sieve_extend.c:327:             } while (index_word == wordindex(index));
 327:sieve_extend.c ****             // #pragma ivdep
 11554              		.loc 1 327 36 is_stmt 0 view .LVU3964
 11555 4378 4889EE   		mov	rsi, rbp	# tmp1231, index
 11556 437b 48C1EE06 		shr	rsi, 6	# tmp1231,
 11557              	# sieve_extend.c:327:             } while (index_word == wordindex(index));
 327:sieve_extend.c ****             // #pragma ivdep
 11558              		.loc 1 327 13 view .LVU3965
 11559 437f 4839F0   		cmp	rax, rsi	# index_word, tmp1231
 11560 4382 754C     		jne	.L1351	#,
 324:sieve_extend.c ****                 mask |= markmask(index);
 11561              		.loc 1 324 13 is_stmt 1 view .LVU3966
 325:sieve_extend.c ****                 index += step;
 11562              		.loc 1 325 17 view .LVU3967
 11563              	# sieve_extend.c:325:                 mask |= markmask(index);
 325:sieve_extend.c ****                 index += step;
 11564              		.loc 1 325 25 is_stmt 0 view .LVU3968
 11565 4384 C4C2D1F7 		shlx	rsi, r11, rbp	# tmp1232, tmp621, index
 11565      F3
 11566              	# sieve_extend.c:326:                 index += step;
 326:sieve_extend.c ****             } while (index_word == wordindex(index));
 11567              		.loc 1 326 23 view .LVU3969
 11568 4389 4C01E5   		add	rbp, r12	# index, step
 11569              	.LVL577:
GAS LISTING /tmp/cc64mrzX.s 			page 316


 11570              	# sieve_extend.c:325:                 mask |= markmask(index);
 325:sieve_extend.c ****                 index += step;
 11571              		.loc 1 325 22 view .LVU3970
 11572 438c 4809F2   		or	rdx, rsi	# mask, tmp1232
 11573              	.LVL578:
 326:sieve_extend.c ****             } while (index_word == wordindex(index));
 11574              		.loc 1 326 17 is_stmt 1 view .LVU3971
 327:sieve_extend.c ****             // #pragma ivdep
 11575              		.loc 1 327 21 view .LVU3972
 11576              	# sieve_extend.c:327:             } while (index_word == wordindex(index));
 327:sieve_extend.c ****             // #pragma ivdep
 11577              		.loc 1 327 36 is_stmt 0 view .LVU3973
 11578 438f 4889EE   		mov	rsi, rbp	# tmp1233, index
 11579 4392 48C1EE06 		shr	rsi, 6	# tmp1233,
 11580              	# sieve_extend.c:327:             } while (index_word == wordindex(index));
 327:sieve_extend.c ****             // #pragma ivdep
 11581              		.loc 1 327 13 view .LVU3974
 11582 4396 4839F0   		cmp	rax, rsi	# index_word, tmp1233
 11583 4399 7535     		jne	.L1351	#,
 324:sieve_extend.c ****                 mask |= markmask(index);
 11584              		.loc 1 324 13 is_stmt 1 view .LVU3975
 325:sieve_extend.c ****                 index += step;
 11585              		.loc 1 325 17 view .LVU3976
 11586              	# sieve_extend.c:325:                 mask |= markmask(index);
 325:sieve_extend.c ****                 index += step;
 11587              		.loc 1 325 25 is_stmt 0 view .LVU3977
 11588 439b C4C2D1F7 		shlx	rsi, r11, rbp	# tmp1234, tmp621, index
 11588      F3
 11589              	# sieve_extend.c:326:                 index += step;
 326:sieve_extend.c ****             } while (index_word == wordindex(index));
 11590              		.loc 1 326 23 view .LVU3978
 11591 43a0 4C01E5   		add	rbp, r12	# index, step
 11592              	.LVL579:
 11593              	# sieve_extend.c:325:                 mask |= markmask(index);
 325:sieve_extend.c ****                 index += step;
 11594              		.loc 1 325 22 view .LVU3979
 11595 43a3 4809F2   		or	rdx, rsi	# mask, tmp1234
 11596              	.LVL580:
 326:sieve_extend.c ****             } while (index_word == wordindex(index));
 11597              		.loc 1 326 17 is_stmt 1 view .LVU3980
 327:sieve_extend.c ****             // #pragma ivdep
 11598              		.loc 1 327 21 view .LVU3981
 11599              	# sieve_extend.c:327:             } while (index_word == wordindex(index));
 327:sieve_extend.c ****             // #pragma ivdep
 11600              		.loc 1 327 36 is_stmt 0 view .LVU3982
 11601 43a6 4889EE   		mov	rsi, rbp	# tmp1235, index
 11602 43a9 48C1EE06 		shr	rsi, 6	# tmp1235,
 11603              	# sieve_extend.c:327:             } while (index_word == wordindex(index));
 327:sieve_extend.c ****             // #pragma ivdep
 11604              		.loc 1 327 13 view .LVU3983
 11605 43ad 4839F0   		cmp	rax, rsi	# index_word, tmp1235
 11606 43b0 751E     		jne	.L1351	#,
 324:sieve_extend.c ****                 mask |= markmask(index);
 11607              		.loc 1 324 13 is_stmt 1 view .LVU3984
 325:sieve_extend.c ****                 index += step;
 11608              		.loc 1 325 17 view .LVU3985
 11609              	# sieve_extend.c:325:                 mask |= markmask(index);
GAS LISTING /tmp/cc64mrzX.s 			page 317


 325:sieve_extend.c ****                 index += step;
 11610              		.loc 1 325 25 is_stmt 0 view .LVU3986
 11611 43b2 C4C2D1F7 		shlx	rsi, r11, rbp	# tmp1236, tmp621, index
 11611      F3
 11612              	# sieve_extend.c:326:                 index += step;
 326:sieve_extend.c ****             } while (index_word == wordindex(index));
 11613              		.loc 1 326 23 view .LVU3987
 11614 43b7 4C01E5   		add	rbp, r12	# index, step
 11615              	.LVL581:
 11616              	# sieve_extend.c:325:                 mask |= markmask(index);
 325:sieve_extend.c ****                 index += step;
 11617              		.loc 1 325 22 view .LVU3988
 11618 43ba 4809F2   		or	rdx, rsi	# mask, tmp1236
 11619              	.LVL582:
 326:sieve_extend.c ****             } while (index_word == wordindex(index));
 11620              		.loc 1 326 17 is_stmt 1 view .LVU3989
 327:sieve_extend.c ****             // #pragma ivdep
 11621              		.loc 1 327 21 view .LVU3990
 11622              	# sieve_extend.c:327:             } while (index_word == wordindex(index));
 327:sieve_extend.c ****             // #pragma ivdep
 11623              		.loc 1 327 36 is_stmt 0 view .LVU3991
 11624 43bd 4889EE   		mov	rsi, rbp	# tmp1237, index
 11625 43c0 48C1EE06 		shr	rsi, 6	# tmp1237,
 11626              	# sieve_extend.c:327:             } while (index_word == wordindex(index));
 327:sieve_extend.c ****             // #pragma ivdep
 11627              		.loc 1 327 13 view .LVU3992
 11628 43c4 4839F0   		cmp	rax, rsi	# index_word, tmp1237
 11629 43c7 0F843CFF 		je	.L905	#,
 11629      FFFF
 11630 43cd 0F1F00   		.p2align 4
 11631              		.p2align 3
 11632              	.L1351:
 331:sieve_extend.c ****         }
 11633              		.loc 1 331 13 is_stmt 1 view .LVU3993
 11634              	.LVL583:
 11635              	.LBB562:
 11636              	.LBI556:
 146:sieve_extend.c **** //#if __APPLE__
 11637              		.loc 1 146 20 view .LVU3994
 11638              	.LBB559:
 174:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 11639              		.loc 1 174 4 view .LVU3995
 175:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 11640              		.loc 1 175 4 view .LVU3996
 11641              	# sieve_extend.c:175:    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(
 175:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 11642              		.loc 1 175 78 is_stmt 0 view .LVU3997
 11643 43d0 498D04C7 		lea	rax, [r15+rax*8]	# index_ptr,
 11644              	.LVL584:
 176:sieve_extend.c **** 
 11645              		.loc 1 176 4 is_stmt 1 view .LVU3998
 180:sieve_extend.c ****        *index_ptr |= mask;
 11646              		.loc 1 180 4 view .LVU3999
 180:sieve_extend.c ****        *index_ptr |= mask;
 11647              		.loc 1 180 10 view .LVU4000
 11648 43d4 4C39D0   		cmp	rax, r10	# index_ptr, fast_loop_ptr
 11649 43d7 0F830301 		jnb	.L906	#,
GAS LISTING /tmp/cc64mrzX.s 			page 318


 11649      0000
 180:sieve_extend.c ****        *index_ptr |= mask;
 11650              		.loc 1 180 10 is_stmt 0 view .LVU4001
 11651 43dd 488D3418 		lea	rsi, [rax+rbx]	# ivtmp.657,
 11652              	.L907:
 181:sieve_extend.c ****        index_ptr+=step;
 11653              		.loc 1 181 8 is_stmt 1 view .LVU4002
 11654              	# sieve_extend.c:181:        *index_ptr |= mask;
 181:sieve_extend.c ****        index_ptr+=step;
 11655              		.loc 1 181 19 is_stmt 0 view .LVU4003
 11656 43e1 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_908, offset: 0B], mask
 182:sieve_extend.c ****        *index_ptr |= mask;
 11657              		.loc 1 182 8 is_stmt 1 view .LVU4004
 11658              	.LVL585:
 183:sieve_extend.c ****        index_ptr+=step;
 11659              		.loc 1 183 8 view .LVU4005
 11660              	# sieve_extend.c:183:        *index_ptr |= mask;
 183:sieve_extend.c ****        index_ptr+=step;
 11661              		.loc 1 183 19 is_stmt 0 view .LVU4006
 11662 43e4 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_908, index: _200, offset: 0B], mask
 184:sieve_extend.c ****        *index_ptr |= mask;
 11663              		.loc 1 184 8 is_stmt 1 view .LVU4007
 11664              	.LVL586:
 185:sieve_extend.c ****        index_ptr+=step;
 11665              		.loc 1 185 8 view .LVU4008
 11666              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 11667              		.loc 1 185 19 is_stmt 0 view .LVU4009
 11668 43e8 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1331, offset: 0B], mask
 186:sieve_extend.c ****        *index_ptr |= mask;
 11669              		.loc 1 186 8 is_stmt 1 view .LVU4010
 11670              	.LVL587:
 187:sieve_extend.c ****        index_ptr+=step;
 11671              		.loc 1 187 8 view .LVU4011
 11672              	# sieve_extend.c:187:        *index_ptr |= mask;
 187:sieve_extend.c ****        index_ptr+=step;
 11673              		.loc 1 187 19 is_stmt 0 view .LVU4012
 11674 43eb 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1331, index: _200, offset: 0B], mask
 188:sieve_extend.c ****        *index_ptr |= mask;
 11675              		.loc 1 188 8 is_stmt 1 view .LVU4013
 11676              	.LVL588:
 189:sieve_extend.c ****        index_ptr+=step;
 11677              		.loc 1 189 8 view .LVU4014
 11678 43ef 4801FE   		add	rsi, rdi	# ivtmp.657, tmp618
 11679              	# sieve_extend.c:189:        *index_ptr |= mask;
 189:sieve_extend.c ****        index_ptr+=step;
 11680              		.loc 1 189 19 is_stmt 0 view .LVU4015
 11681 43f2 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_908, index: _200, step: 4, offset: 0B], mask
 190:sieve_extend.c ****    }
 11682              		.loc 1 190 8 is_stmt 1 view .LVU4016
 11683 43f6 4801F8   		add	rax, rdi	# index_ptr, tmp618
 11684              	.LVL589:
 180:sieve_extend.c ****        *index_ptr |= mask;
 11685              		.loc 1 180 10 view .LVU4017
 11686 43f9 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 11687 43fc 0F86DE00 		jbe	.L906	#,
 11687      0000
GAS LISTING /tmp/cc64mrzX.s 			page 319


 181:sieve_extend.c ****        index_ptr+=step;
 11688              		.loc 1 181 8 view .LVU4018
 11689              	# sieve_extend.c:181:        *index_ptr |= mask;
 181:sieve_extend.c ****        index_ptr+=step;
 11690              		.loc 1 181 19 is_stmt 0 view .LVU4019
 11691 4402 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_908, offset: 0B], mask
 182:sieve_extend.c ****        *index_ptr |= mask;
 11692              		.loc 1 182 8 is_stmt 1 view .LVU4020
 11693              	.LVL590:
 183:sieve_extend.c ****        index_ptr+=step;
 11694              		.loc 1 183 8 view .LVU4021
 11695              	# sieve_extend.c:183:        *index_ptr |= mask;
 183:sieve_extend.c ****        index_ptr+=step;
 11696              		.loc 1 183 19 is_stmt 0 view .LVU4022
 11697 4405 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_908, index: _200, offset: 0B], mask
 184:sieve_extend.c ****        *index_ptr |= mask;
 11698              		.loc 1 184 8 is_stmt 1 view .LVU4023
 11699              	.LVL591:
 185:sieve_extend.c ****        index_ptr+=step;
 11700              		.loc 1 185 8 view .LVU4024
 11701              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 11702              		.loc 1 185 19 is_stmt 0 view .LVU4025
 11703 4409 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1331, offset: 0B], mask
 186:sieve_extend.c ****        *index_ptr |= mask;
 11704              		.loc 1 186 8 is_stmt 1 view .LVU4026
 11705              	.LVL592:
 187:sieve_extend.c ****        index_ptr+=step;
 11706              		.loc 1 187 8 view .LVU4027
 11707              	# sieve_extend.c:187:        *index_ptr |= mask;
 187:sieve_extend.c ****        index_ptr+=step;
 11708              		.loc 1 187 19 is_stmt 0 view .LVU4028
 11709 440c 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1331, index: _200, offset: 0B], mask
 188:sieve_extend.c ****        *index_ptr |= mask;
 11710              		.loc 1 188 8 is_stmt 1 view .LVU4029
 11711              	.LVL593:
 189:sieve_extend.c ****        index_ptr+=step;
 11712              		.loc 1 189 8 view .LVU4030
 11713 4410 4801FE   		add	rsi, rdi	# ivtmp.657, tmp618
 11714              	# sieve_extend.c:189:        *index_ptr |= mask;
 189:sieve_extend.c ****        index_ptr+=step;
 11715              		.loc 1 189 19 is_stmt 0 view .LVU4031
 11716 4413 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_908, index: _200, step: 4, offset: 0B], mask
 190:sieve_extend.c ****    }
 11717              		.loc 1 190 8 is_stmt 1 view .LVU4032
 11718 4417 4801F8   		add	rax, rdi	# index_ptr, tmp618
 11719              	.LVL594:
 180:sieve_extend.c ****        *index_ptr |= mask;
 11720              		.loc 1 180 10 view .LVU4033
 11721 441a 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 11722 441d 0F86BD00 		jbe	.L906	#,
 11722      0000
 181:sieve_extend.c ****        index_ptr+=step;
 11723              		.loc 1 181 8 view .LVU4034
 11724              	# sieve_extend.c:181:        *index_ptr |= mask;
 181:sieve_extend.c ****        index_ptr+=step;
 11725              		.loc 1 181 19 is_stmt 0 view .LVU4035
GAS LISTING /tmp/cc64mrzX.s 			page 320


 11726 4423 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_908, offset: 0B], mask
 182:sieve_extend.c ****        *index_ptr |= mask;
 11727              		.loc 1 182 8 is_stmt 1 view .LVU4036
 11728              	.LVL595:
 183:sieve_extend.c ****        index_ptr+=step;
 11729              		.loc 1 183 8 view .LVU4037
 11730              	# sieve_extend.c:183:        *index_ptr |= mask;
 183:sieve_extend.c ****        index_ptr+=step;
 11731              		.loc 1 183 19 is_stmt 0 view .LVU4038
 11732 4426 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_908, index: _200, offset: 0B], mask
 184:sieve_extend.c ****        *index_ptr |= mask;
 11733              		.loc 1 184 8 is_stmt 1 view .LVU4039
 11734              	.LVL596:
 185:sieve_extend.c ****        index_ptr+=step;
 11735              		.loc 1 185 8 view .LVU4040
 11736              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 11737              		.loc 1 185 19 is_stmt 0 view .LVU4041
 11738 442a 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1331, offset: 0B], mask
 186:sieve_extend.c ****        *index_ptr |= mask;
 11739              		.loc 1 186 8 is_stmt 1 view .LVU4042
 11740              	.LVL597:
 187:sieve_extend.c ****        index_ptr+=step;
 11741              		.loc 1 187 8 view .LVU4043
 11742              	# sieve_extend.c:187:        *index_ptr |= mask;
 187:sieve_extend.c ****        index_ptr+=step;
 11743              		.loc 1 187 19 is_stmt 0 view .LVU4044
 11744 442d 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1331, index: _200, offset: 0B], mask
 188:sieve_extend.c ****        *index_ptr |= mask;
 11745              		.loc 1 188 8 is_stmt 1 view .LVU4045
 11746              	.LVL598:
 189:sieve_extend.c ****        index_ptr+=step;
 11747              		.loc 1 189 8 view .LVU4046
 11748 4431 4801FE   		add	rsi, rdi	# ivtmp.657, tmp618
 11749              	# sieve_extend.c:189:        *index_ptr |= mask;
 189:sieve_extend.c ****        index_ptr+=step;
 11750              		.loc 1 189 19 is_stmt 0 view .LVU4047
 11751 4434 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_908, index: _200, step: 4, offset: 0B], mask
 190:sieve_extend.c ****    }
 11752              		.loc 1 190 8 is_stmt 1 view .LVU4048
 11753 4438 4801F8   		add	rax, rdi	# index_ptr, tmp618
 11754              	.LVL599:
 180:sieve_extend.c ****        *index_ptr |= mask;
 11755              		.loc 1 180 10 view .LVU4049
 11756 443b 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 11757 443e 0F869C00 		jbe	.L906	#,
 11757      0000
 181:sieve_extend.c ****        index_ptr+=step;
 11758              		.loc 1 181 8 view .LVU4050
 11759              	# sieve_extend.c:181:        *index_ptr |= mask;
 181:sieve_extend.c ****        index_ptr+=step;
 11760              		.loc 1 181 19 is_stmt 0 view .LVU4051
 11761 4444 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_908, offset: 0B], mask
 182:sieve_extend.c ****        *index_ptr |= mask;
 11762              		.loc 1 182 8 is_stmt 1 view .LVU4052
 11763              	.LVL600:
 183:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/cc64mrzX.s 			page 321


 11764              		.loc 1 183 8 view .LVU4053
 11765              	# sieve_extend.c:183:        *index_ptr |= mask;
 183:sieve_extend.c ****        index_ptr+=step;
 11766              		.loc 1 183 19 is_stmt 0 view .LVU4054
 11767 4447 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_908, index: _200, offset: 0B], mask
 184:sieve_extend.c ****        *index_ptr |= mask;
 11768              		.loc 1 184 8 is_stmt 1 view .LVU4055
 11769              	.LVL601:
 185:sieve_extend.c ****        index_ptr+=step;
 11770              		.loc 1 185 8 view .LVU4056
 11771              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 11772              		.loc 1 185 19 is_stmt 0 view .LVU4057
 11773 444b 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1331, offset: 0B], mask
 186:sieve_extend.c ****        *index_ptr |= mask;
 11774              		.loc 1 186 8 is_stmt 1 view .LVU4058
 11775              	.LVL602:
 187:sieve_extend.c ****        index_ptr+=step;
 11776              		.loc 1 187 8 view .LVU4059
 11777              	# sieve_extend.c:187:        *index_ptr |= mask;
 187:sieve_extend.c ****        index_ptr+=step;
 11778              		.loc 1 187 19 is_stmt 0 view .LVU4060
 11779 444e 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1331, index: _200, offset: 0B], mask
 188:sieve_extend.c ****        *index_ptr |= mask;
 11780              		.loc 1 188 8 is_stmt 1 view .LVU4061
 11781              	.LVL603:
 189:sieve_extend.c ****        index_ptr+=step;
 11782              		.loc 1 189 8 view .LVU4062
 11783 4452 4801FE   		add	rsi, rdi	# ivtmp.657, tmp618
 11784              	# sieve_extend.c:189:        *index_ptr |= mask;
 189:sieve_extend.c ****        index_ptr+=step;
 11785              		.loc 1 189 19 is_stmt 0 view .LVU4063
 11786 4455 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_908, index: _200, step: 4, offset: 0B], mask
 190:sieve_extend.c ****    }
 11787              		.loc 1 190 8 is_stmt 1 view .LVU4064
 11788 4459 4801F8   		add	rax, rdi	# index_ptr, tmp618
 11789              	.LVL604:
 180:sieve_extend.c ****        *index_ptr |= mask;
 11790              		.loc 1 180 10 view .LVU4065
 11791 445c 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 11792 445f 767F     		jbe	.L906	#,
 181:sieve_extend.c ****        index_ptr+=step;
 11793              		.loc 1 181 8 view .LVU4066
 11794              	# sieve_extend.c:181:        *index_ptr |= mask;
 181:sieve_extend.c ****        index_ptr+=step;
 11795              		.loc 1 181 19 is_stmt 0 view .LVU4067
 11796 4461 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_908, offset: 0B], mask
 182:sieve_extend.c ****        *index_ptr |= mask;
 11797              		.loc 1 182 8 is_stmt 1 view .LVU4068
 11798              	.LVL605:
 183:sieve_extend.c ****        index_ptr+=step;
 11799              		.loc 1 183 8 view .LVU4069
 11800              	# sieve_extend.c:183:        *index_ptr |= mask;
 183:sieve_extend.c ****        index_ptr+=step;
 11801              		.loc 1 183 19 is_stmt 0 view .LVU4070
 11802 4464 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_908, index: _200, offset: 0B], mask
 184:sieve_extend.c ****        *index_ptr |= mask;
GAS LISTING /tmp/cc64mrzX.s 			page 322


 11803              		.loc 1 184 8 is_stmt 1 view .LVU4071
 11804              	.LVL606:
 185:sieve_extend.c ****        index_ptr+=step;
 11805              		.loc 1 185 8 view .LVU4072
 11806              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 11807              		.loc 1 185 19 is_stmt 0 view .LVU4073
 11808 4468 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1331, offset: 0B], mask
 186:sieve_extend.c ****        *index_ptr |= mask;
 11809              		.loc 1 186 8 is_stmt 1 view .LVU4074
 11810              	.LVL607:
 187:sieve_extend.c ****        index_ptr+=step;
 11811              		.loc 1 187 8 view .LVU4075
 11812              	# sieve_extend.c:187:        *index_ptr |= mask;
 187:sieve_extend.c ****        index_ptr+=step;
 11813              		.loc 1 187 19 is_stmt 0 view .LVU4076
 11814 446b 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1331, index: _200, offset: 0B], mask
 188:sieve_extend.c ****        *index_ptr |= mask;
 11815              		.loc 1 188 8 is_stmt 1 view .LVU4077
 11816              	.LVL608:
 189:sieve_extend.c ****        index_ptr+=step;
 11817              		.loc 1 189 8 view .LVU4078
 11818 446f 4801FE   		add	rsi, rdi	# ivtmp.657, tmp618
 11819              	# sieve_extend.c:189:        *index_ptr |= mask;
 189:sieve_extend.c ****        index_ptr+=step;
 11820              		.loc 1 189 19 is_stmt 0 view .LVU4079
 11821 4472 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_908, index: _200, step: 4, offset: 0B], mask
 190:sieve_extend.c ****    }
 11822              		.loc 1 190 8 is_stmt 1 view .LVU4080
 11823 4476 4801F8   		add	rax, rdi	# index_ptr, tmp618
 11824              	.LVL609:
 180:sieve_extend.c ****        *index_ptr |= mask;
 11825              		.loc 1 180 10 view .LVU4081
 11826 4479 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 11827 447c 7662     		jbe	.L906	#,
 181:sieve_extend.c ****        index_ptr+=step;
 11828              		.loc 1 181 8 view .LVU4082
 11829              	# sieve_extend.c:181:        *index_ptr |= mask;
 181:sieve_extend.c ****        index_ptr+=step;
 11830              		.loc 1 181 19 is_stmt 0 view .LVU4083
 11831 447e 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_908, offset: 0B], mask
 182:sieve_extend.c ****        *index_ptr |= mask;
 11832              		.loc 1 182 8 is_stmt 1 view .LVU4084
 11833              	.LVL610:
 183:sieve_extend.c ****        index_ptr+=step;
 11834              		.loc 1 183 8 view .LVU4085
 11835              	# sieve_extend.c:183:        *index_ptr |= mask;
 183:sieve_extend.c ****        index_ptr+=step;
 11836              		.loc 1 183 19 is_stmt 0 view .LVU4086
 11837 4481 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_908, index: _200, offset: 0B], mask
 184:sieve_extend.c ****        *index_ptr |= mask;
 11838              		.loc 1 184 8 is_stmt 1 view .LVU4087
 11839              	.LVL611:
 185:sieve_extend.c ****        index_ptr+=step;
 11840              		.loc 1 185 8 view .LVU4088
 11841              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/cc64mrzX.s 			page 323


 11842              		.loc 1 185 19 is_stmt 0 view .LVU4089
 11843 4485 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1331, offset: 0B], mask
 186:sieve_extend.c ****        *index_ptr |= mask;
 11844              		.loc 1 186 8 is_stmt 1 view .LVU4090
 11845              	.LVL612:
 187:sieve_extend.c ****        index_ptr+=step;
 11846              		.loc 1 187 8 view .LVU4091
 11847              	# sieve_extend.c:187:        *index_ptr |= mask;
 187:sieve_extend.c ****        index_ptr+=step;
 11848              		.loc 1 187 19 is_stmt 0 view .LVU4092
 11849 4488 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1331, index: _200, offset: 0B], mask
 188:sieve_extend.c ****        *index_ptr |= mask;
 11850              		.loc 1 188 8 is_stmt 1 view .LVU4093
 11851              	.LVL613:
 189:sieve_extend.c ****        index_ptr+=step;
 11852              		.loc 1 189 8 view .LVU4094
 11853 448c 4801FE   		add	rsi, rdi	# ivtmp.657, tmp618
 11854              	# sieve_extend.c:189:        *index_ptr |= mask;
 189:sieve_extend.c ****        index_ptr+=step;
 11855              		.loc 1 189 19 is_stmt 0 view .LVU4095
 11856 448f 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_908, index: _200, step: 4, offset: 0B], mask
 190:sieve_extend.c ****    }
 11857              		.loc 1 190 8 is_stmt 1 view .LVU4096
 11858 4493 4801F8   		add	rax, rdi	# index_ptr, tmp618
 11859              	.LVL614:
 180:sieve_extend.c ****        *index_ptr |= mask;
 11860              		.loc 1 180 10 view .LVU4097
 11861 4496 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 11862 4499 7645     		jbe	.L906	#,
 181:sieve_extend.c ****        index_ptr+=step;
 11863              		.loc 1 181 8 view .LVU4098
 11864              	# sieve_extend.c:181:        *index_ptr |= mask;
 181:sieve_extend.c ****        index_ptr+=step;
 11865              		.loc 1 181 19 is_stmt 0 view .LVU4099
 11866 449b 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_908, offset: 0B], mask
 182:sieve_extend.c ****        *index_ptr |= mask;
 11867              		.loc 1 182 8 is_stmt 1 view .LVU4100
 11868              	.LVL615:
 183:sieve_extend.c ****        index_ptr+=step;
 11869              		.loc 1 183 8 view .LVU4101
 11870              	# sieve_extend.c:183:        *index_ptr |= mask;
 183:sieve_extend.c ****        index_ptr+=step;
 11871              		.loc 1 183 19 is_stmt 0 view .LVU4102
 11872 449e 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_908, index: _200, offset: 0B], mask
 184:sieve_extend.c ****        *index_ptr |= mask;
 11873              		.loc 1 184 8 is_stmt 1 view .LVU4103
 11874              	.LVL616:
 185:sieve_extend.c ****        index_ptr+=step;
 11875              		.loc 1 185 8 view .LVU4104
 11876              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 11877              		.loc 1 185 19 is_stmt 0 view .LVU4105
 11878 44a2 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1331, offset: 0B], mask
 186:sieve_extend.c ****        *index_ptr |= mask;
 11879              		.loc 1 186 8 is_stmt 1 view .LVU4106
 11880              	.LVL617:
 187:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/cc64mrzX.s 			page 324


 11881              		.loc 1 187 8 view .LVU4107
 11882              	# sieve_extend.c:187:        *index_ptr |= mask;
 187:sieve_extend.c ****        index_ptr+=step;
 11883              		.loc 1 187 19 is_stmt 0 view .LVU4108
 11884 44a5 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1331, index: _200, offset: 0B], mask
 188:sieve_extend.c ****        *index_ptr |= mask;
 11885              		.loc 1 188 8 is_stmt 1 view .LVU4109
 11886              	.LVL618:
 189:sieve_extend.c ****        index_ptr+=step;
 11887              		.loc 1 189 8 view .LVU4110
 11888 44a9 4801FE   		add	rsi, rdi	# ivtmp.657, tmp618
 11889              	# sieve_extend.c:189:        *index_ptr |= mask;
 189:sieve_extend.c ****        index_ptr+=step;
 11890              		.loc 1 189 19 is_stmt 0 view .LVU4111
 11891 44ac 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_908, index: _200, step: 4, offset: 0B], mask
 190:sieve_extend.c ****    }
 11892              		.loc 1 190 8 is_stmt 1 view .LVU4112
 11893 44b0 4801F8   		add	rax, rdi	# index_ptr, tmp618
 11894              	.LVL619:
 180:sieve_extend.c ****        *index_ptr |= mask;
 11895              		.loc 1 180 10 view .LVU4113
 11896 44b3 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 11897 44b6 7628     		jbe	.L906	#,
 181:sieve_extend.c ****        index_ptr+=step;
 11898              		.loc 1 181 8 view .LVU4114
 11899              	# sieve_extend.c:181:        *index_ptr |= mask;
 181:sieve_extend.c ****        index_ptr+=step;
 11900              		.loc 1 181 19 is_stmt 0 view .LVU4115
 11901 44b8 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_908, offset: 0B], mask
 182:sieve_extend.c ****        *index_ptr |= mask;
 11902              		.loc 1 182 8 is_stmt 1 view .LVU4116
 11903              	.LVL620:
 183:sieve_extend.c ****        index_ptr+=step;
 11904              		.loc 1 183 8 view .LVU4117
 11905              	# sieve_extend.c:183:        *index_ptr |= mask;
 183:sieve_extend.c ****        index_ptr+=step;
 11906              		.loc 1 183 19 is_stmt 0 view .LVU4118
 11907 44bb 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_908, index: _200, offset: 0B], mask
 184:sieve_extend.c ****        *index_ptr |= mask;
 11908              		.loc 1 184 8 is_stmt 1 view .LVU4119
 11909              	.LVL621:
 185:sieve_extend.c ****        index_ptr+=step;
 11910              		.loc 1 185 8 view .LVU4120
 11911              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 11912              		.loc 1 185 19 is_stmt 0 view .LVU4121
 11913 44bf 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1331, offset: 0B], mask
 186:sieve_extend.c ****        *index_ptr |= mask;
 11914              		.loc 1 186 8 is_stmt 1 view .LVU4122
 11915              	.LVL622:
 187:sieve_extend.c ****        index_ptr+=step;
 11916              		.loc 1 187 8 view .LVU4123
 11917              	# sieve_extend.c:187:        *index_ptr |= mask;
 187:sieve_extend.c ****        index_ptr+=step;
 11918              		.loc 1 187 19 is_stmt 0 view .LVU4124
 11919 44c2 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1331, index: _200, offset: 0B], mask
 188:sieve_extend.c ****        *index_ptr |= mask;
GAS LISTING /tmp/cc64mrzX.s 			page 325


 11920              		.loc 1 188 8 is_stmt 1 view .LVU4125
 11921              	.LVL623:
 189:sieve_extend.c ****        index_ptr+=step;
 11922              		.loc 1 189 8 view .LVU4126
 11923 44c6 4801FE   		add	rsi, rdi	# ivtmp.657, tmp618
 11924              	# sieve_extend.c:189:        *index_ptr |= mask;
 189:sieve_extend.c ****        index_ptr+=step;
 11925              		.loc 1 189 19 is_stmt 0 view .LVU4127
 11926 44c9 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_908, index: _200, step: 4, offset: 0B], mask
 190:sieve_extend.c ****    }
 11927              		.loc 1 190 8 is_stmt 1 view .LVU4128
 11928 44cd 4801F8   		add	rax, rdi	# index_ptr, tmp618
 11929              	.LVL624:
 180:sieve_extend.c ****        *index_ptr |= mask;
 11930              		.loc 1 180 10 view .LVU4129
 11931 44d0 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 11932 44d3 0F8708FF 		ja	.L907	#,
 11932      FFFF
 11933 44d9 0F1F8000 		.p2align 4
 11933      000000
 11934              		.p2align 3
 11935              	.L906:
 193:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 11936              		.loc 1 193 4 view .LVU4130
 194:sieve_extend.c ****        *index_ptr |= mask;
 11937              		.loc 1 194 4 view .LVU4131
 194:sieve_extend.c ****        *index_ptr |= mask;
 11938              		.loc 1 194 10 view .LVU4132
 11939 44e0 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 11940 44e3 765B     		jbe	.L908	#,
 11941              	.L909:
 195:sieve_extend.c ****        index_ptr+=step;
 11942              		.loc 1 195 8 view .LVU4133
 11943              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 11944              		.loc 1 195 19 is_stmt 0 view .LVU4134
 11945 44e5 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_922, offset: 0B], mask
 196:sieve_extend.c ****    }
 11946              		.loc 1 196 8 is_stmt 1 view .LVU4135
 11947              	# sieve_extend.c:196:        index_ptr+=step;
 196:sieve_extend.c ****    }
 11948              		.loc 1 196 17 is_stmt 0 view .LVU4136
 11949 44e8 4801C8   		add	rax, rcx	# index_ptr, _200
 11950              	.LVL625:
 194:sieve_extend.c ****        *index_ptr |= mask;
 11951              		.loc 1 194 10 is_stmt 1 view .LVU4137
 11952 44eb 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 11953 44ee 7650     		jbe	.L908	#,
 195:sieve_extend.c ****        index_ptr+=step;
 11954              		.loc 1 195 8 view .LVU4138
 11955              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 11956              		.loc 1 195 19 is_stmt 0 view .LVU4139
 11957 44f0 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_922, offset: 0B], mask
 196:sieve_extend.c ****    }
 11958              		.loc 1 196 8 is_stmt 1 view .LVU4140
 11959              	# sieve_extend.c:196:        index_ptr+=step;
GAS LISTING /tmp/cc64mrzX.s 			page 326


 196:sieve_extend.c ****    }
 11960              		.loc 1 196 17 is_stmt 0 view .LVU4141
 11961 44f3 4801C8   		add	rax, rcx	# index_ptr, _200
 11962              	.LVL626:
 194:sieve_extend.c ****        *index_ptr |= mask;
 11963              		.loc 1 194 10 is_stmt 1 view .LVU4142
 11964 44f6 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 11965 44f9 7645     		jbe	.L908	#,
 195:sieve_extend.c ****        index_ptr+=step;
 11966              		.loc 1 195 8 view .LVU4143
 11967              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 11968              		.loc 1 195 19 is_stmt 0 view .LVU4144
 11969 44fb 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_922, offset: 0B], mask
 196:sieve_extend.c ****    }
 11970              		.loc 1 196 8 is_stmt 1 view .LVU4145
 11971              	# sieve_extend.c:196:        index_ptr+=step;
 196:sieve_extend.c ****    }
 11972              		.loc 1 196 17 is_stmt 0 view .LVU4146
 11973 44fe 4801C8   		add	rax, rcx	# index_ptr, _200
 11974              	.LVL627:
 194:sieve_extend.c ****        *index_ptr |= mask;
 11975              		.loc 1 194 10 is_stmt 1 view .LVU4147
 11976 4501 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 11977 4504 763A     		jbe	.L908	#,
 195:sieve_extend.c ****        index_ptr+=step;
 11978              		.loc 1 195 8 view .LVU4148
 11979              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 11980              		.loc 1 195 19 is_stmt 0 view .LVU4149
 11981 4506 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_922, offset: 0B], mask
 196:sieve_extend.c ****    }
 11982              		.loc 1 196 8 is_stmt 1 view .LVU4150
 11983              	# sieve_extend.c:196:        index_ptr+=step;
 196:sieve_extend.c ****    }
 11984              		.loc 1 196 17 is_stmt 0 view .LVU4151
 11985 4509 4801C8   		add	rax, rcx	# index_ptr, _200
 11986              	.LVL628:
 194:sieve_extend.c ****        *index_ptr |= mask;
 11987              		.loc 1 194 10 is_stmt 1 view .LVU4152
 11988 450c 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 11989 450f 762F     		jbe	.L908	#,
 195:sieve_extend.c ****        index_ptr+=step;
 11990              		.loc 1 195 8 view .LVU4153
 11991              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 11992              		.loc 1 195 19 is_stmt 0 view .LVU4154
 11993 4511 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_922, offset: 0B], mask
 196:sieve_extend.c ****    }
 11994              		.loc 1 196 8 is_stmt 1 view .LVU4155
 11995              	# sieve_extend.c:196:        index_ptr+=step;
 196:sieve_extend.c ****    }
 11996              		.loc 1 196 17 is_stmt 0 view .LVU4156
 11997 4514 4801C8   		add	rax, rcx	# index_ptr, _200
 11998              	.LVL629:
 194:sieve_extend.c ****        *index_ptr |= mask;
 11999              		.loc 1 194 10 is_stmt 1 view .LVU4157
GAS LISTING /tmp/cc64mrzX.s 			page 327


 12000 4517 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 12001 451a 7624     		jbe	.L908	#,
 195:sieve_extend.c ****        index_ptr+=step;
 12002              		.loc 1 195 8 view .LVU4158
 12003              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 12004              		.loc 1 195 19 is_stmt 0 view .LVU4159
 12005 451c 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_922, offset: 0B], mask
 196:sieve_extend.c ****    }
 12006              		.loc 1 196 8 is_stmt 1 view .LVU4160
 12007              	# sieve_extend.c:196:        index_ptr+=step;
 196:sieve_extend.c ****    }
 12008              		.loc 1 196 17 is_stmt 0 view .LVU4161
 12009 451f 4801C8   		add	rax, rcx	# index_ptr, _200
 12010              	.LVL630:
 194:sieve_extend.c ****        *index_ptr |= mask;
 12011              		.loc 1 194 10 is_stmt 1 view .LVU4162
 12012 4522 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 12013 4525 7619     		jbe	.L908	#,
 195:sieve_extend.c ****        index_ptr+=step;
 12014              		.loc 1 195 8 view .LVU4163
 12015              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 12016              		.loc 1 195 19 is_stmt 0 view .LVU4164
 12017 4527 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_922, offset: 0B], mask
 196:sieve_extend.c ****    }
 12018              		.loc 1 196 8 is_stmt 1 view .LVU4165
 12019              	# sieve_extend.c:196:        index_ptr+=step;
 196:sieve_extend.c ****    }
 12020              		.loc 1 196 17 is_stmt 0 view .LVU4166
 12021 452a 4801C8   		add	rax, rcx	# index_ptr, _200
 12022              	.LVL631:
 194:sieve_extend.c ****        *index_ptr |= mask;
 12023              		.loc 1 194 10 is_stmt 1 view .LVU4167
 12024 452d 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 12025 4530 760E     		jbe	.L908	#,
 195:sieve_extend.c ****        index_ptr+=step;
 12026              		.loc 1 195 8 view .LVU4168
 12027              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 12028              		.loc 1 195 19 is_stmt 0 view .LVU4169
 12029 4532 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_922, offset: 0B], mask
 196:sieve_extend.c ****    }
 12030              		.loc 1 196 8 is_stmt 1 view .LVU4170
 12031              	# sieve_extend.c:196:        index_ptr+=step;
 196:sieve_extend.c ****    }
 12032              		.loc 1 196 17 is_stmt 0 view .LVU4171
 12033 4535 4801C8   		add	rax, rcx	# index_ptr, _200
 12034              	.LVL632:
 194:sieve_extend.c ****        *index_ptr |= mask;
 12035              		.loc 1 194 10 is_stmt 1 view .LVU4172
 12036 4538 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 12037 453b 77A8     		ja	.L909	#,
 12038 453d 0F1F00   		.p2align 4
 12039              		.p2align 3
 12040              	.L908:
 199:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
GAS LISTING /tmp/cc64mrzX.s 			page 328


 12041              		.loc 1 199 4 view .LVU4173
 12042              	# sieve_extend.c:199:    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range
 199:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 12043              		.loc 1 199 7 is_stmt 0 view .LVU4174
 12044 4540 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 12045 4543 0F84CF11 		je	.L1496	#,
 12045      0000
 12046              	.LVL633:
 12047              	.L910:
 199:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 12048              		.loc 1 199 7 view .LVU4175
 12049              	.LBE559:
 12050              	.LBE562:
 12051              	.LBE555:
 320:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 12052              		.loc 1 320 54 is_stmt 1 view .LVU4176
 12053              	# sieve_extend.c:320:         for (register counter_t index = range_start; index <= range_stop_uniq
 320:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 12054              		.loc 1 320 9 is_stmt 0 view .LVU4177
 12055 4549 4939E8   		cmp	r8, rbp	# tmp598, index
 12056 454c 0F83AEFD 		jnb	.L911	#,
 12056      FFFF
 320:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 12057              		.loc 1 320 9 view .LVU4178
 12058 4552 488B5C24 		mov	rbx, QWORD PTR 80[rsp]	# index, %sfp
 12058      50
 12059 4557 4C8B4424 		mov	r8, QWORD PTR 88[rsp]	# _69, %sfp
 12059      58
 12060 455c E9AAF6FF 		jmp	.L893	#
 12060      FF
 12061              	.LVL634:
 12062              	.L1486:
 320:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 12063              		.loc 1 320 9 view .LVU4179
 12064 4561 4C8B4C24 		mov	r9, QWORD PTR 48[rsp]	# <retval>, %sfp
 12064      30
 12065 4566 48894C24 		mov	QWORD PTR 40[rsp], rcx	# %sfp, prime
 12065      28
 12066 456b 498B4108 		mov	rax, QWORD PTR 8[r9]	# prephitmp_1432, sieve_92->bits
 12067 456f 48894424 		mov	QWORD PTR 8[rsp], rax	# %sfp, prephitmp_1432
 12067      08
 12068              	.LVL635:
 12069              	.L884:
 320:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 12070              		.loc 1 320 9 view .LVU4180
 12071              	.LBE554:
 12072              	.LBE553:
 12073              	.LBE552:
 12074              	.LBE580:
 12075              	.LBE587:
 12076              	.LBE602:
1016:sieve_extend.c ****     prime = block.prime;
 12077              		.loc 1 1016 5 is_stmt 1 view .LVU4181
 12078              	.LBB603:
 872:sieve_extend.c ****     if (size < WORD_SIZE_counter)   {
 12079              		.loc 1 872 20 view .LVU4182
 12080              	.LBB597:
GAS LISTING /tmp/cc64mrzX.s 			page 329


 873:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 12081              		.loc 1 873 5 view .LVU4183
 12082              	# sieve_extend.c:873:     if (size < WORD_SIZE_counter)   {
 873:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 12083              		.loc 1 873 8 is_stmt 0 view .LVU4184
 12084 4574 4883FA3F 		cmp	rdx, 63	# block$pattern_size,
 12085 4578 0F86B9FA 		jbe	.L877	#,
 12085      FFFF
 12086              	.LVL636:
 12087              	.L920:
 878:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 12088              		.loc 1 878 5 is_stmt 1 view .LVU4185
 879:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 12089              		.loc 1 879 5 view .LVU4186
 12090              	# sieve_extend.c:878:     const counter_t copy_start  = source_start + size;
 878:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 12091              		.loc 1 878 21 is_stmt 0 view .LVU4187
 12092 457e 4C8D0416 		lea	r8, [rsi+rdx]	# copy_start,
 12093              	.LVL637:
 12094              	# sieve_extend.c:880:     const bitshift_t source_bit = bitindex_calc(source_start);
 880:sieve_extend.c **** 
 12095              		.loc 1 880 22 view .LVU4188
 12096 4582 4989F4   		mov	r12, rsi	# source_bit, block$pattern_start
 12097              	# sieve_extend.c:879:     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 879:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 12098              		.loc 1 879 22 view .LVU4189
 12099 4585 4183E03F 		and	r8d, 63	# copy_bit,
 12100              	.LVL638:
 880:sieve_extend.c **** 
 12101              		.loc 1 880 5 is_stmt 1 view .LVU4190
 12102              	# sieve_extend.c:880:     const bitshift_t source_bit = bitindex_calc(source_start);
 880:sieve_extend.c **** 
 12103              		.loc 1 880 22 is_stmt 0 view .LVU4191
 12104 4589 4183E43F 		and	r12d, 63	# source_bit,
 12105              	.LVL639:
 882:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 12106              		.loc 1 882 5 is_stmt 1 view .LVU4192
 12107              	# sieve_extend.c:882:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 882:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 12108              		.loc 1 882 37 is_stmt 0 view .LVU4193
 12109 458d 488B4C24 		mov	rcx, QWORD PTR 8[rsp]	#, %sfp
 12109      08
 12110              	# sieve_extend.c:882:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 882:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 12111              		.loc 1 882 13 view .LVU4194
 12112 4592 4D39E0   		cmp	r8, r12	# copy_bit, source_bit
 12113              	# sieve_extend.c:882:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 882:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 12114              		.loc 1 882 37 view .LVU4195
 12115 4595 488B7C24 		mov	rdi, QWORD PTR 56[rsp]	#, %sfp
 12115      38
 12116              	# sieve_extend.c:882:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 882:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 12117              		.loc 1 882 13 view .LVU4196
 12118 459a 0F82AA11 		jb	.L1497	#,
 12118      0000
 883:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
GAS LISTING /tmp/cc64mrzX.s 			page 330


 12119              		.loc 1 883 10 is_stmt 1 view .LVU4197
 12120              	# sieve_extend.c:883:     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, so
 883:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 12121              		.loc 1 883 13 is_stmt 0 view .LVU4198
 12122 45a0 0F878402 		ja	.L1498	#,
 12122      0000
 884:sieve_extend.c **** }
 12123              		.loc 1 884 37 is_stmt 1 view .LVU4199
 12124 45a6 E805DBFF 		call	extendSieve_aligned	#
 12124      FF
 12125              	.LVL640:
 12126              	.L921:
 884:sieve_extend.c **** }
 12127              		.loc 1 884 37 is_stmt 0 view .LVU4200
 12128              	.LBE597:
 12129              	.LBE603:
1017:sieve_extend.c **** 
 12130              		.loc 1 1017 5 is_stmt 1 view .LVU4201
1020:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 12131              		.loc 1 1020 5 view .LVU4202
 12132              	.LBB604:
1020:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 12133              		.loc 1 1020 10 view .LVU4203
 12134              	# sieve_extend.c:1020:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <=
1020:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 12135              		.loc 1 1020 38 is_stmt 0 view .LVU4204
 12136 45ab 488B5424 		mov	rdx, QWORD PTR 64[rsp]	# blocksize, %sfp
 12136      40
 12137              	# sieve_extend.c:1020:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <=
1020:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 12138              		.loc 1 1020 20 view .LVU4205
 12139 45b0 4531FF   		xor	r15d, r15d	# block_start
 12140 45b3 488B6C24 		mov	rbp, QWORD PTR 40[rsp]	# prime, %sfp
 12140      28
 12141              	# sieve_extend.c:1020:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <=
1020:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 12142              		.loc 1 1020 83 view .LVU4206
 12143 45b8 4C8B5424 		mov	r10, QWORD PTR 48[rsp]	# <retval>, %sfp
 12143      30
 12144              	# sieve_extend.c:1020:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <=
1020:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 12145              		.loc 1 1020 38 view .LVU4207
 12146 45bd 488D4AFF 		lea	rcx, -1[rdx]	# block_stop,
 12147              	.LVL641:
1020:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 12148              		.loc 1 1020 63 is_stmt 1 view .LVU4208
 12149 45c1 488D7501 		lea	rsi, 1[rbp]	# tmp824,
 12150              	.LBB605:
 12151              	.LBB606:
 12152              	.LBB607:
 12153              	.LBB608:
 12154              	# sieve_extend.c:256:    register bitshift_t pattern_size = WORD_SIZE_bitshift - (WORD_SIZE_bitshif
 256:sieve_extend.c ****    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 12155              		.loc 1 256 80 is_stmt 0 view .LVU4209
 12156 45c5 4989CC   		mov	r12, rcx	# block_stop, block_stop
 12157              	.LBE608:
 12158              	.LBE607:
GAS LISTING /tmp/cc64mrzX.s 			page 331


 12159              	.LBE606:
 12160              	.LBE605:
 12161              	# sieve_extend.c:1020:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <=
1020:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 12162              		.loc 1 1020 83 view .LVU4210
 12163 45c8 498B5208 		mov	rdx, QWORD PTR 8[r10]	# _8, sieve_92->bits
 12164              	.LBB696:
 12165              	.LBB691:
 12166              	.LBB624:
 12167              	.LBB619:
 12168              	# sieve_extend.c:256:    register bitshift_t pattern_size = WORD_SIZE_bitshift - (WORD_SIZE_bitshif
 256:sieve_extend.c ****    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 12169              		.loc 1 256 80 view .LVU4211
 12170 45cc 48897424 		mov	QWORD PTR 32[rsp], rsi	# %sfp, tmp824
 12170      20
 12171              	.LVL642:
 12172 45d1 66662E0F 		.p2align 4
 12172      1F840000 
 12172      0000000F 
 12172      1F4000
 12173              		.p2align 3
 12174              	.L927:
 256:sieve_extend.c ****    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 12175              		.loc 1 256 80 view .LVU4212
 12176              	.LBE619:
 12177              	.LBE624:
 12178              	.LBE691:
 12179              	.LBE696:
1021:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime);
 12180              		.loc 1 1021 9 is_stmt 1 view .LVU4213
 12181              	.LBB697:
 12182              	.LBB698:
 12183              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12184              		.loc 1 122 21 is_stmt 0 view .LVU4214
 12185 45e0 488B7C24 		mov	rdi, QWORD PTR 40[rsp]	# prime, %sfp
 12185      28
 12186 45e5 4939D4   		cmp	r12, rdx	# block_stop, _8
 12187              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12188              		.loc 1 122 12 view .LVU4215
 12189 45e8 4C8B7424 		mov	r14, QWORD PTR 56[rsp]	# _97, %sfp
 12189      38
 12190 45ed 4C0F47E2 		cmova	r12, rdx	# block_stop,, block_stop, _8
 12191              	.LVL643:
 122:sieve_extend.c ****     return index;
 12192              		.loc 1 122 12 view .LVU4216
 12193              	.LBE698:
 12194              	.LBE697:
1022:sieve_extend.c ****         sieve_block_stripe(sieve, block_start, block_stop, prime);
 12195              		.loc 1 1022 9 is_stmt 1 view .LVU4217
 12196              	.LBB701:
 12197              	.LBI697:
 121:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 12198              		.loc 1 121 25 view .LVU4218
 12199              	.LBB699:
 122:sieve_extend.c ****     return index;
GAS LISTING /tmp/cc64mrzX.s 			page 332


 12200              		.loc 1 122 5 view .LVU4219
 122:sieve_extend.c ****     return index;
 12201              		.loc 1 122 11 view .LVU4220
 12202              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12203              		.loc 1 122 21 is_stmt 0 view .LVU4221
 12204 45f1 4989FB   		mov	r11, rdi	# tmp647, prime
 12205 45f4 49C1EB06 		shr	r11, 6	# tmp647,
 12206              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12207              		.loc 1 122 12 view .LVU4222
 12208 45f8 4B8B1CDE 		mov	rbx, QWORD PTR [r14+r11*8]	# *_365, *_365
 12209              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12210              		.loc 1 122 11 view .LVU4223
 12211 45fc 480FA3FB 		bt	rbx, rdi	# *_365, tmp1665
 12212 4600 0F834502 		jnc	.L924	#,
 12212      0000
 12213 4606 488B4424 		mov	rax, QWORD PTR 32[rsp]	# tmp824, %sfp
 12213      20
 12214              	.L925:
 122:sieve_extend.c ****     return index;
 12215              		.loc 1 122 58 is_stmt 1 view .LVU4224
 12216              	.LVL644:
 12217              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12218              		.loc 1 122 21 is_stmt 0 view .LVU4225
 12219 460b 4989C5   		mov	r13, rax	# tmp652, tmp824
 12220              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12221              		.loc 1 122 63 view .LVU4226
 12222 460e 4889C6   		mov	rsi, rax	# prime, tmp824
 122:sieve_extend.c ****     return index;
 12223              		.loc 1 122 11 is_stmt 1 view .LVU4227
 12224              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12225              		.loc 1 122 21 is_stmt 0 view .LVU4228
 12226 4611 49C1ED06 		shr	r13, 6	# tmp652,
 12227              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12228              		.loc 1 122 12 view .LVU4229
 12229 4615 4F8B0CEE 		mov	r9, QWORD PTR [r14+r13*8]	# *_34, *_34
 12230              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12231              		.loc 1 122 11 view .LVU4230
 12232 4619 490FA3C1 		bt	r9, rax	# *_34, tmp824
 12233 461d 0F831502 		jnc	.L1430	#,
 12233      0000
 12234 4623 488D4801 		lea	rcx, 1[rax]	# tmp848,
 12235              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12236              		.loc 1 122 21 view .LVU4231
 12237 4627 4989C8   		mov	r8, rcx	# tmp887, tmp824
 12238 462a 4889C8   		mov	rax, rcx	# tmp824, tmp848
 12239              	.LVL645:
 122:sieve_extend.c ****     return index;
 12240              		.loc 1 122 58 is_stmt 1 view .LVU4232
GAS LISTING /tmp/cc64mrzX.s 			page 333


 12241              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12242              		.loc 1 122 21 is_stmt 0 view .LVU4233
 12243 462d 49C1E806 		shr	r8, 6	# tmp887,
 12244              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12245              		.loc 1 122 63 view .LVU4234
 12246 4631 4889CE   		mov	rsi, rcx	# prime, tmp824
 122:sieve_extend.c ****     return index;
 12247              		.loc 1 122 11 is_stmt 1 view .LVU4235
 12248              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12249              		.loc 1 122 12 is_stmt 0 view .LVU4236
 12250 4634 4F8B14C6 		mov	r10, QWORD PTR [r14+r8*8]	# *_34, *_34
 12251              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12252              		.loc 1 122 11 view .LVU4237
 12253 4638 490FA3CA 		bt	r10, rcx	# *_34, tmp824
 12254 463c 0F83F601 		jnc	.L1430	#,
 12254      0000
 12255 4642 488D4101 		lea	rax, 1[rcx]	# tmp824,
 12256              	.LVL646:
 122:sieve_extend.c ****     return index;
 12257              		.loc 1 122 58 is_stmt 1 view .LVU4238
 12258              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12259              		.loc 1 122 21 is_stmt 0 view .LVU4239
 12260 4646 4889C5   		mov	rbp, rax	# tmp1118, tmp824
 12261              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12262              		.loc 1 122 63 view .LVU4240
 12263 4649 4889C6   		mov	rsi, rax	# prime, tmp824
 122:sieve_extend.c ****     return index;
 12264              		.loc 1 122 11 is_stmt 1 view .LVU4241
 12265              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12266              		.loc 1 122 21 is_stmt 0 view .LVU4242
 12267 464c 48C1ED06 		shr	rbp, 6	# tmp1118,
 12268              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12269              		.loc 1 122 12 view .LVU4243
 12270 4650 498B3CEE 		mov	rdi, QWORD PTR [r14+rbp*8]	# *_34, *_34
 12271              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12272              		.loc 1 122 11 view .LVU4244
 12273 4654 480FA3C7 		bt	rdi, rax	# *_34, tmp824
 12274 4658 0F83DA01 		jnc	.L1430	#,
 12274      0000
 12275 465e 488D4102 		lea	rax, 2[rcx]	# tmp824,
 12276              	.LVL647:
 122:sieve_extend.c ****     return index;
 12277              		.loc 1 122 58 is_stmt 1 view .LVU4245
 12278              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12279              		.loc 1 122 21 is_stmt 0 view .LVU4246
 12280 4662 4989C3   		mov	r11, rax	# tmp1122, tmp824
 12281              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
GAS LISTING /tmp/cc64mrzX.s 			page 334


 122:sieve_extend.c ****     return index;
 12282              		.loc 1 122 63 view .LVU4247
 12283 4665 4889C6   		mov	rsi, rax	# prime, tmp824
 122:sieve_extend.c ****     return index;
 12284              		.loc 1 122 11 is_stmt 1 view .LVU4248
 12285              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12286              		.loc 1 122 21 is_stmt 0 view .LVU4249
 12287 4668 49C1EB06 		shr	r11, 6	# tmp1122,
 12288              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12289              		.loc 1 122 12 view .LVU4250
 12290 466c 4B8B1CDE 		mov	rbx, QWORD PTR [r14+r11*8]	# *_34, *_34
 12291              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12292              		.loc 1 122 11 view .LVU4251
 12293 4670 480FA3C3 		bt	rbx, rax	# *_34, tmp824
 12294 4674 0F83BE01 		jnc	.L1430	#,
 12294      0000
 12295 467a 488D4103 		lea	rax, 3[rcx]	# tmp824,
 12296              	.LVL648:
 122:sieve_extend.c ****     return index;
 12297              		.loc 1 122 58 is_stmt 1 view .LVU4252
 12298              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12299              		.loc 1 122 21 is_stmt 0 view .LVU4253
 12300 467e 4989C5   		mov	r13, rax	# tmp1126, tmp824
 12301              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12302              		.loc 1 122 63 view .LVU4254
 12303 4681 4889C6   		mov	rsi, rax	# prime, tmp824
 122:sieve_extend.c ****     return index;
 12304              		.loc 1 122 11 is_stmt 1 view .LVU4255
 12305              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12306              		.loc 1 122 21 is_stmt 0 view .LVU4256
 12307 4684 49C1ED06 		shr	r13, 6	# tmp1126,
 12308              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12309              		.loc 1 122 12 view .LVU4257
 12310 4688 4F8B0CEE 		mov	r9, QWORD PTR [r14+r13*8]	# *_34, *_34
 12311              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12312              		.loc 1 122 11 view .LVU4258
 12313 468c 490FA3C1 		bt	r9, rax	# *_34, tmp824
 12314 4690 0F83A201 		jnc	.L1430	#,
 12314      0000
 12315 4696 488D4104 		lea	rax, 4[rcx]	# tmp824,
 12316              	.LVL649:
 122:sieve_extend.c ****     return index;
 12317              		.loc 1 122 58 is_stmt 1 view .LVU4259
 12318              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12319              		.loc 1 122 21 is_stmt 0 view .LVU4260
 12320 469a 4989C0   		mov	r8, rax	# tmp1130, tmp824
 12321              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
GAS LISTING /tmp/cc64mrzX.s 			page 335


 12322              		.loc 1 122 63 view .LVU4261
 12323 469d 4889C6   		mov	rsi, rax	# prime, tmp824
 122:sieve_extend.c ****     return index;
 12324              		.loc 1 122 11 is_stmt 1 view .LVU4262
 12325              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12326              		.loc 1 122 21 is_stmt 0 view .LVU4263
 12327 46a0 49C1E806 		shr	r8, 6	# tmp1130,
 12328              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12329              		.loc 1 122 12 view .LVU4264
 12330 46a4 4F8B14C6 		mov	r10, QWORD PTR [r14+r8*8]	# *_34, *_34
 12331              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12332              		.loc 1 122 11 view .LVU4265
 12333 46a8 490FA3C2 		bt	r10, rax	# *_34, tmp824
 12334 46ac 0F838601 		jnc	.L1430	#,
 12334      0000
 12335 46b2 488D4105 		lea	rax, 5[rcx]	# tmp824,
 12336              	.LVL650:
 122:sieve_extend.c ****     return index;
 12337              		.loc 1 122 58 is_stmt 1 view .LVU4266
 12338              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12339              		.loc 1 122 21 is_stmt 0 view .LVU4267
 12340 46b6 4889C5   		mov	rbp, rax	# tmp1134, tmp824
 12341              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12342              		.loc 1 122 63 view .LVU4268
 12343 46b9 4889C6   		mov	rsi, rax	# prime, tmp824
 122:sieve_extend.c ****     return index;
 12344              		.loc 1 122 11 is_stmt 1 view .LVU4269
 12345              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12346              		.loc 1 122 21 is_stmt 0 view .LVU4270
 12347 46bc 48C1ED06 		shr	rbp, 6	# tmp1134,
 12348              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12349              		.loc 1 122 12 view .LVU4271
 12350 46c0 498B3CEE 		mov	rdi, QWORD PTR [r14+rbp*8]	# *_34, *_34
 12351              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12352              		.loc 1 122 11 view .LVU4272
 12353 46c4 480FA3C7 		bt	rdi, rax	# *_34, tmp824
 12354 46c8 0F836A01 		jnc	.L1430	#,
 12354      0000
 12355 46ce 488D4106 		lea	rax, 6[rcx]	# tmp824,
 12356              	.LVL651:
 122:sieve_extend.c ****     return index;
 12357              		.loc 1 122 58 is_stmt 1 view .LVU4273
 12358              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12359              		.loc 1 122 21 is_stmt 0 view .LVU4274
 12360 46d2 4989C3   		mov	r11, rax	# tmp1138, tmp824
 12361              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12362              		.loc 1 122 63 view .LVU4275
GAS LISTING /tmp/cc64mrzX.s 			page 336


 12363 46d5 4889C6   		mov	rsi, rax	# prime, tmp824
 122:sieve_extend.c ****     return index;
 12364              		.loc 1 122 11 is_stmt 1 view .LVU4276
 12365              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12366              		.loc 1 122 21 is_stmt 0 view .LVU4277
 12367 46d8 49C1EB06 		shr	r11, 6	# tmp1138,
 12368              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12369              		.loc 1 122 12 view .LVU4278
 12370 46dc 4B8B1CDE 		mov	rbx, QWORD PTR [r14+r11*8]	# *_34, *_34
 12371              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12372              		.loc 1 122 11 view .LVU4279
 12373 46e0 480FA3C3 		bt	rbx, rax	# *_34, tmp824
 12374 46e4 0F834E01 		jnc	.L1430	#,
 12374      0000
 12375 46ea 488D4107 		lea	rax, 7[rcx]	# tmp824,
 12376              	.LVL652:
 122:sieve_extend.c ****     return index;
 12377              		.loc 1 122 11 view .LVU4280
 12378 46ee E918FFFF 		jmp	.L925	#
 12378      FF
 12379              	.LVL653:
 12380              	.L1494:
 122:sieve_extend.c ****     return index;
 12381              		.loc 1 122 11 view .LVU4281
 12382              	.LBE699:
 12383              	.LBE701:
 12384              	.LBE604:
 12385              	.LBB707:
 12386              	.LBB588:
 12387              	.LBB581:
 12388              	.LBB572:
 12389              	.LBB539:
 247:sieve_extend.c ****         //  debug if (step==13) { printf("After\n"); dump_bitarray(bitarray,10); }
 12390              		.loc 1 247 8 is_stmt 1 view .LVU4282
 12391              	# sieve_extend.c:247:        bitarray[range_start_word] |= (pattern << bitindex(range_start)) & cho
 247:sieve_extend.c ****         //  debug if (step==13) { printf("After\n"); dump_bitarray(bitarray,10); }
 12392              		.loc 1 247 73 is_stmt 0 view .LVU4283
 12393 46f3 48234424 		and	rax, QWORD PTR 40[rsp]	# tmp575, %sfp
 12393      28
 12394              	# sieve_extend.c:247:        bitarray[range_start_word] |= (pattern << bitindex(range_start)) & cho
 247:sieve_extend.c ****         //  debug if (step==13) { printf("After\n"); dump_bitarray(bitarray,10); }
 12395              		.loc 1 247 35 view .LVU4284
 12396 46f8 4C09C8   		or	rax, r9	# tmp576, pretmp_1229
 12397 46fb 498903   		mov	QWORD PTR [r11], rax	# MEM[(uint64_t *)_1228], tmp576
 249:sieve_extend.c ****     }
 12398              		.loc 1 249 8 is_stmt 1 view .LVU4285
 12399 46fe E908F5FF 		jmp	.L893	#
 12399      FF
 12400              	.LVL654:
 12401              	.L900:
 249:sieve_extend.c ****     }
 12402              		.loc 1 249 8 is_stmt 0 view .LVU4286
 12403              	.LBE539:
 12404              	.LBE572:
GAS LISTING /tmp/cc64mrzX.s 			page 337


 12405              	.LBB573:
 12406              	.LBB570:
 12407              	.LBB565:
 12408              	.LBB566:
 12409              	.LBB567:
 303:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 12410              		.loc 1 303 54 is_stmt 1 view .LVU4287
 12411              	# sieve_extend.c:303:         for (register counter_t index = range_start; index <= range_stop;) {
 303:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 12412              		.loc 1 303 9 is_stmt 0 view .LVU4288
 12413 4703 4939E8   		cmp	r8, rbp	# _69, index
 12414 4706 0F82FFF4 		jb	.L893	#,
 12414      FFFF
 12415              	.LBB568:
 12416              	# sieve_extend.c:308:                 mask |= markmask(index);
 308:sieve_extend.c ****                 index += step;
 12417              		.loc 1 308 25 view .LVU4289
 12418 470c BF010000 		mov	edi, 1	# tmp601,
 12418      00
 12419              	.LVL655:
 12420 4711 66662E0F 		.p2align 4
 12420      1F840000 
 12420      0000000F 
 12420      1F4000
 12421              		.p2align 3
 12422              	.L904:
 304:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 12423              		.loc 1 304 13 is_stmt 1 view .LVU4290
 12424              	# sieve_extend.c:304:             register counter_t index_word = wordindex(index);
 304:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 12425              		.loc 1 304 32 is_stmt 0 view .LVU4291
 12426 4720 4889E9   		mov	rcx, rbp	# index_word, index
 12427              	# sieve_extend.c:305:             register bitword_t mask = SAFE_ZERO;
 305:sieve_extend.c ****             #pragma ivdep
 12428              		.loc 1 305 32 view .LVU4292
 12429 4723 4531C9   		xor	r9d, r9d	# mask
 12430              	# sieve_extend.c:304:             register counter_t index_word = wordindex(index);
 304:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 12431              		.loc 1 304 32 view .LVU4293
 12432 4726 48C1E906 		shr	rcx, 6	# index_word,
 12433              	.LVL656:
 305:sieve_extend.c ****             #pragma ivdep
 12434              		.loc 1 305 13 is_stmt 1 view .LVU4294
 12435              	.L903:
 307:sieve_extend.c ****                 mask |= markmask(index);
 12436              		.loc 1 307 13 view .LVU4295
 308:sieve_extend.c ****                 index += step;
 12437              		.loc 1 308 17 view .LVU4296
 12438              	# sieve_extend.c:308:                 mask |= markmask(index);
 308:sieve_extend.c ****                 index += step;
 12439              		.loc 1 308 25 is_stmt 0 view .LVU4297
 12440 472a C462D1F7 		shlx	r10, rdi, rbp	# tmp600, tmp601, index
 12440      D7
 12441              	# sieve_extend.c:309:                 index += step;
 309:sieve_extend.c ****             } while (index_word == wordindex(index));
 12442              		.loc 1 309 23 view .LVU4298
 12443 472f 4C01E5   		add	rbp, r12	# index, step
GAS LISTING /tmp/cc64mrzX.s 			page 338


 12444              	.LVL657:
 12445              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12446              		.loc 1 310 36 view .LVU4299
 12447 4732 4989EB   		mov	r11, rbp	# tmp602, index
 12448              	# sieve_extend.c:308:                 mask |= markmask(index);
 308:sieve_extend.c ****                 index += step;
 12449              		.loc 1 308 22 view .LVU4300
 12450 4735 4D09D1   		or	r9, r10	# mask, tmp600
 12451              	.LVL658:
 309:sieve_extend.c ****             } while (index_word == wordindex(index));
 12452              		.loc 1 309 17 is_stmt 1 view .LVU4301
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12453              		.loc 1 310 21 view .LVU4302
 12454              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12455              		.loc 1 310 36 is_stmt 0 view .LVU4303
 12456 4738 49C1EB06 		shr	r11, 6	# tmp602,
 12457              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12458              		.loc 1 310 13 view .LVU4304
 12459 473c 4C39D9   		cmp	rcx, r11	# index_word, tmp602
 12460 473f 0F85AB00 		jne	.L1350	#,
 12460      0000
 307:sieve_extend.c ****                 mask |= markmask(index);
 12461              		.loc 1 307 13 is_stmt 1 view .LVU4305
 308:sieve_extend.c ****                 index += step;
 12462              		.loc 1 308 17 view .LVU4306
 12463              	# sieve_extend.c:308:                 mask |= markmask(index);
 308:sieve_extend.c ****                 index += step;
 12464              		.loc 1 308 25 is_stmt 0 view .LVU4307
 12465 4745 C4E2D1F7 		shlx	rdx, rdi, rbp	# tmp1204, tmp601, index
 12465      D7
 12466              	# sieve_extend.c:309:                 index += step;
 309:sieve_extend.c ****             } while (index_word == wordindex(index));
 12467              		.loc 1 309 23 view .LVU4308
 12468 474a 4C01E5   		add	rbp, r12	# index, step
 12469              	.LVL659:
 12470              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12471              		.loc 1 310 36 view .LVU4309
 12472 474d 4889E8   		mov	rax, rbp	# tmp1205, index
 12473              	# sieve_extend.c:308:                 mask |= markmask(index);
 308:sieve_extend.c ****                 index += step;
 12474              		.loc 1 308 22 view .LVU4310
 12475 4750 4909D1   		or	r9, rdx	# mask, tmp1204
 12476              	.LVL660:
 309:sieve_extend.c ****             } while (index_word == wordindex(index));
 12477              		.loc 1 309 17 is_stmt 1 view .LVU4311
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12478              		.loc 1 310 21 view .LVU4312
 12479              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12480              		.loc 1 310 36 is_stmt 0 view .LVU4313
 12481 4753 48C1E806 		shr	rax, 6	# tmp1205,
 12482              	.LVL661:
 12483              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
GAS LISTING /tmp/cc64mrzX.s 			page 339


 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12484              		.loc 1 310 13 view .LVU4314
 12485 4757 4839C1   		cmp	rcx, rax	# index_word, tmp1205
 12486 475a 0F859000 		jne	.L1350	#,
 12486      0000
 307:sieve_extend.c ****                 mask |= markmask(index);
 12487              		.loc 1 307 13 is_stmt 1 view .LVU4315
 308:sieve_extend.c ****                 index += step;
 12488              		.loc 1 308 17 view .LVU4316
 12489              	# sieve_extend.c:308:                 mask |= markmask(index);
 308:sieve_extend.c ****                 index += step;
 12490              		.loc 1 308 25 is_stmt 0 view .LVU4317
 12491 4760 C4E2D1F7 		shlx	rsi, rdi, rbp	# tmp1206, tmp601, index
 12491      F7
 12492              	# sieve_extend.c:309:                 index += step;
 309:sieve_extend.c ****             } while (index_word == wordindex(index));
 12493              		.loc 1 309 23 view .LVU4318
 12494 4765 4C01E5   		add	rbp, r12	# index, step
 12495              	.LVL662:
 12496              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12497              		.loc 1 310 36 view .LVU4319
 12498 4768 4989EA   		mov	r10, rbp	# tmp1207, index
 12499              	# sieve_extend.c:308:                 mask |= markmask(index);
 308:sieve_extend.c ****                 index += step;
 12500              		.loc 1 308 22 view .LVU4320
 12501 476b 4909F1   		or	r9, rsi	# mask, tmp1206
 12502              	.LVL663:
 309:sieve_extend.c ****             } while (index_word == wordindex(index));
 12503              		.loc 1 309 17 is_stmt 1 view .LVU4321
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12504              		.loc 1 310 21 view .LVU4322
 12505              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12506              		.loc 1 310 36 is_stmt 0 view .LVU4323
 12507 476e 49C1EA06 		shr	r10, 6	# tmp1207,
 12508              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12509              		.loc 1 310 13 view .LVU4324
 12510 4772 4C39D1   		cmp	rcx, r10	# index_word, tmp1207
 12511 4775 7579     		jne	.L1350	#,
 307:sieve_extend.c ****                 mask |= markmask(index);
 12512              		.loc 1 307 13 is_stmt 1 view .LVU4325
 308:sieve_extend.c ****                 index += step;
 12513              		.loc 1 308 17 view .LVU4326
 12514              	# sieve_extend.c:308:                 mask |= markmask(index);
 308:sieve_extend.c ****                 index += step;
 12515              		.loc 1 308 25 is_stmt 0 view .LVU4327
 12516 4777 C462D1F7 		shlx	r11, rdi, rbp	# tmp1208, tmp601, index
 12516      DF
 12517              	# sieve_extend.c:309:                 index += step;
 309:sieve_extend.c ****             } while (index_word == wordindex(index));
 12518              		.loc 1 309 23 view .LVU4328
 12519 477c 4C01E5   		add	rbp, r12	# index, step
 12520              	.LVL664:
 12521              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
GAS LISTING /tmp/cc64mrzX.s 			page 340


 12522              		.loc 1 310 36 view .LVU4329
 12523 477f 4889EA   		mov	rdx, rbp	# tmp1209, index
 12524              	# sieve_extend.c:308:                 mask |= markmask(index);
 308:sieve_extend.c ****                 index += step;
 12525              		.loc 1 308 22 view .LVU4330
 12526 4782 4D09D9   		or	r9, r11	# mask, tmp1208
 12527              	.LVL665:
 309:sieve_extend.c ****             } while (index_word == wordindex(index));
 12528              		.loc 1 309 17 is_stmt 1 view .LVU4331
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12529              		.loc 1 310 21 view .LVU4332
 12530              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12531              		.loc 1 310 36 is_stmt 0 view .LVU4333
 12532 4785 48C1EA06 		shr	rdx, 6	# tmp1209,
 12533              	.LVL666:
 12534              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12535              		.loc 1 310 13 view .LVU4334
 12536 4789 4839D1   		cmp	rcx, rdx	# index_word, tmp1209
 12537 478c 7562     		jne	.L1350	#,
 307:sieve_extend.c ****                 mask |= markmask(index);
 12538              		.loc 1 307 13 is_stmt 1 view .LVU4335
 308:sieve_extend.c ****                 index += step;
 12539              		.loc 1 308 17 view .LVU4336
 12540              	# sieve_extend.c:308:                 mask |= markmask(index);
 308:sieve_extend.c ****                 index += step;
 12541              		.loc 1 308 25 is_stmt 0 view .LVU4337
 12542 478e C4E2D1F7 		shlx	rax, rdi, rbp	# tmp1210, tmp601, index
 12542      C7
 12543              	# sieve_extend.c:309:                 index += step;
 309:sieve_extend.c ****             } while (index_word == wordindex(index));
 12544              		.loc 1 309 23 view .LVU4338
 12545 4793 4C01E5   		add	rbp, r12	# index, step
 12546              	.LVL667:
 12547              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12548              		.loc 1 310 36 view .LVU4339
 12549 4796 4889EE   		mov	rsi, rbp	# tmp1211, index
 12550              	# sieve_extend.c:308:                 mask |= markmask(index);
 308:sieve_extend.c ****                 index += step;
 12551              		.loc 1 308 22 view .LVU4340
 12552 4799 4909C1   		or	r9, rax	# mask, tmp1210
 12553              	.LVL668:
 309:sieve_extend.c ****             } while (index_word == wordindex(index));
 12554              		.loc 1 309 17 is_stmt 1 view .LVU4341
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12555              		.loc 1 310 21 view .LVU4342
 12556              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12557              		.loc 1 310 36 is_stmt 0 view .LVU4343
 12558 479c 48C1EE06 		shr	rsi, 6	# tmp1211,
 12559              	.LVL669:
 12560              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12561              		.loc 1 310 13 view .LVU4344
 12562 47a0 4839F1   		cmp	rcx, rsi	# index_word, tmp1211
GAS LISTING /tmp/cc64mrzX.s 			page 341


 12563 47a3 754B     		jne	.L1350	#,
 307:sieve_extend.c ****                 mask |= markmask(index);
 12564              		.loc 1 307 13 is_stmt 1 view .LVU4345
 308:sieve_extend.c ****                 index += step;
 12565              		.loc 1 308 17 view .LVU4346
 12566              	# sieve_extend.c:308:                 mask |= markmask(index);
 308:sieve_extend.c ****                 index += step;
 12567              		.loc 1 308 25 is_stmt 0 view .LVU4347
 12568 47a5 C462D1F7 		shlx	r10, rdi, rbp	# tmp1212, tmp601, index
 12568      D7
 12569              	# sieve_extend.c:309:                 index += step;
 309:sieve_extend.c ****             } while (index_word == wordindex(index));
 12570              		.loc 1 309 23 view .LVU4348
 12571 47aa 4C01E5   		add	rbp, r12	# index, step
 12572              	.LVL670:
 12573              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12574              		.loc 1 310 36 view .LVU4349
 12575 47ad 4989EB   		mov	r11, rbp	# tmp1213, index
 12576              	# sieve_extend.c:308:                 mask |= markmask(index);
 308:sieve_extend.c ****                 index += step;
 12577              		.loc 1 308 22 view .LVU4350
 12578 47b0 4D09D1   		or	r9, r10	# mask, tmp1212
 12579              	.LVL671:
 309:sieve_extend.c ****             } while (index_word == wordindex(index));
 12580              		.loc 1 309 17 is_stmt 1 view .LVU4351
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12581              		.loc 1 310 21 view .LVU4352
 12582              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12583              		.loc 1 310 36 is_stmt 0 view .LVU4353
 12584 47b3 49C1EB06 		shr	r11, 6	# tmp1213,
 12585              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12586              		.loc 1 310 13 view .LVU4354
 12587 47b7 4C39D9   		cmp	rcx, r11	# index_word, tmp1213
 12588 47ba 7534     		jne	.L1350	#,
 307:sieve_extend.c ****                 mask |= markmask(index);
 12589              		.loc 1 307 13 is_stmt 1 view .LVU4355
 308:sieve_extend.c ****                 index += step;
 12590              		.loc 1 308 17 view .LVU4356
 12591              	# sieve_extend.c:308:                 mask |= markmask(index);
 308:sieve_extend.c ****                 index += step;
 12592              		.loc 1 308 25 is_stmt 0 view .LVU4357
 12593 47bc C4E2D1F7 		shlx	rdx, rdi, rbp	# tmp1214, tmp601, index
 12593      D7
 12594              	# sieve_extend.c:309:                 index += step;
 309:sieve_extend.c ****             } while (index_word == wordindex(index));
 12595              		.loc 1 309 23 view .LVU4358
 12596 47c1 4C01E5   		add	rbp, r12	# index, step
 12597              	.LVL672:
 12598              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12599              		.loc 1 310 36 view .LVU4359
 12600 47c4 4889E8   		mov	rax, rbp	# tmp1215, index
 12601              	# sieve_extend.c:308:                 mask |= markmask(index);
 308:sieve_extend.c ****                 index += step;
GAS LISTING /tmp/cc64mrzX.s 			page 342


 12602              		.loc 1 308 22 view .LVU4360
 12603 47c7 4909D1   		or	r9, rdx	# mask, tmp1214
 12604              	.LVL673:
 309:sieve_extend.c ****             } while (index_word == wordindex(index));
 12605              		.loc 1 309 17 is_stmt 1 view .LVU4361
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12606              		.loc 1 310 21 view .LVU4362
 12607              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12608              		.loc 1 310 36 is_stmt 0 view .LVU4363
 12609 47ca 48C1E806 		shr	rax, 6	# tmp1215,
 12610              	.LVL674:
 12611              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12612              		.loc 1 310 13 view .LVU4364
 12613 47ce 4839C1   		cmp	rcx, rax	# index_word, tmp1215
 12614 47d1 751D     		jne	.L1350	#,
 307:sieve_extend.c ****                 mask |= markmask(index);
 12615              		.loc 1 307 13 is_stmt 1 view .LVU4365
 308:sieve_extend.c ****                 index += step;
 12616              		.loc 1 308 17 view .LVU4366
 12617              	# sieve_extend.c:308:                 mask |= markmask(index);
 308:sieve_extend.c ****                 index += step;
 12618              		.loc 1 308 25 is_stmt 0 view .LVU4367
 12619 47d3 C4E2D1F7 		shlx	rsi, rdi, rbp	# tmp1216, tmp601, index
 12619      F7
 12620              	# sieve_extend.c:309:                 index += step;
 309:sieve_extend.c ****             } while (index_word == wordindex(index));
 12621              		.loc 1 309 23 view .LVU4368
 12622 47d8 4C01E5   		add	rbp, r12	# index, step
 12623              	.LVL675:
 12624              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12625              		.loc 1 310 36 view .LVU4369
 12626 47db 4989EA   		mov	r10, rbp	# tmp1217, index
 12627              	# sieve_extend.c:308:                 mask |= markmask(index);
 308:sieve_extend.c ****                 index += step;
 12628              		.loc 1 308 22 view .LVU4370
 12629 47de 4909F1   		or	r9, rsi	# mask, tmp1216
 12630              	.LVL676:
 309:sieve_extend.c ****             } while (index_word == wordindex(index));
 12631              		.loc 1 309 17 is_stmt 1 view .LVU4371
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12632              		.loc 1 310 21 view .LVU4372
 12633              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12634              		.loc 1 310 36 is_stmt 0 view .LVU4373
 12635 47e1 49C1EA06 		shr	r10, 6	# tmp1217,
 12636              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12637              		.loc 1 310 13 view .LVU4374
 12638 47e5 4C39D1   		cmp	rcx, r10	# index_word, tmp1217
 12639 47e8 0F843CFF 		je	.L903	#,
 12639      FFFF
 12640 47ee 6690     		.p2align 4
 12641              		.p2align 3
 12642              	.L1350:
GAS LISTING /tmp/cc64mrzX.s 			page 343


 313:sieve_extend.c ****         }
 12643              		.loc 1 313 13 is_stmt 1 view .LVU4375
 12644              	# sieve_extend.c:313:             bitarray[index_word] |= mask;
 313:sieve_extend.c ****         }
 12645              		.loc 1 313 34 is_stmt 0 view .LVU4376
 12646 47f0 4D090CCF 		or	QWORD PTR [r15+rcx*8], r9	# *_182, mask
 313:sieve_extend.c ****         }
 12647              		.loc 1 313 34 view .LVU4377
 12648              	.LBE568:
 303:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 12649              		.loc 1 303 54 is_stmt 1 view .LVU4378
 12650              	# sieve_extend.c:303:         for (register counter_t index = range_start; index <= range_stop;) {
 303:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 12651              		.loc 1 303 9 is_stmt 0 view .LVU4379
 12652 47f4 4939E8   		cmp	r8, rbp	# _69, index
 12653 47f7 0F8323FF 		jnb	.L904	#,
 12653      FFFF
 303:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 12654              		.loc 1 303 9 view .LVU4380
 12655 47fd E909F4FF 		jmp	.L893	#
 12655      FF
 12656              	.LVL677:
 12657              	.L888:
 303:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 12658              		.loc 1 303 9 view .LVU4381
 12659              	.LBE567:
 12660              	.LBE566:
 12661              	.LBE565:
 12662              	.LBE570:
 12663              	.LBE573:
 12664              	.LBB574:
 12665              	.LBB524:
 884:sieve_extend.c **** }
 12666              		.loc 1 884 37 is_stmt 1 view .LVU4382
 12667 4802 E8A9D8FF 		call	extendSieve_aligned	#
 12667      FF
 12668              	.LVL678:
 884:sieve_extend.c **** }
 12669              		.loc 1 884 37 is_stmt 0 view .LVU4383
 12670 4807 4C8B4424 		mov	r8, QWORD PTR 40[rsp]	# _69, %sfp
 12670      28
 12671 480c 4C897424 		mov	QWORD PTR 24[rsp], r14	# %sfp, patternsize_bits
 12671      18
 12672 4811 E9B3F3FF 		jmp	.L885	#
 12672      FF
 12673              	.LVL679:
 12674              	.L1493:
 882:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 12675              		.loc 1 882 37 is_stmt 1 view .LVU4384
 12676 4816 E815DEFF 		call	extendSieve_shiftleft	#
 12676      FF
 12677              	.LVL680:
 882:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 12678              		.loc 1 882 37 is_stmt 0 view .LVU4385
 12679 481b 4C8B4424 		mov	r8, QWORD PTR 40[rsp]	# _69, %sfp
 12679      28
 12680 4820 4C897424 		mov	QWORD PTR 24[rsp], r14	# %sfp, patternsize_bits
GAS LISTING /tmp/cc64mrzX.s 			page 344


 12680      18
 12681 4825 E99FF3FF 		jmp	.L885	#
 12681      FF
 12682              	.LVL681:
 12683              	.L1498:
 882:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 12684              		.loc 1 882 37 view .LVU4386
 12685              	.LBE524:
 12686              	.LBE574:
 12687              	.LBE581:
 12688              	.LBE588:
 12689              	.LBE707:
 12690              	.LBB708:
 12691              	.LBB598:
 883:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 12692              		.loc 1 883 37 is_stmt 1 view .LVU4387
 12693 482a E891BEFF 		call	extendSieve_shiftright_ivdep	#
 12693      FF
 12694              	.LVL682:
 883:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 12695              		.loc 1 883 37 is_stmt 0 view .LVU4388
 12696 482f E977FDFF 		jmp	.L921	#
 12696      FF
 12697              	.LVL683:
 12698              		.p2align 4,,7
 12699 4834 0F1F4000 		.p2align 3
 12700              	.L1430:
 883:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 12701              		.loc 1 883 37 view .LVU4389
 12702 4838 48894424 		mov	QWORD PTR 32[rsp], rax	# %sfp, tmp824
 12702      20
 12703 483d 488D4001 		lea	rax, 1[rax]	# tmp824,
 12704              	.LVL684:
 883:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 12705              		.loc 1 883 37 view .LVU4390
 12706 4841 48897424 		mov	QWORD PTR 40[rsp], rsi	# %sfp, prime
 12706      28
 12707 4846 48894424 		mov	QWORD PTR 32[rsp], rax	# %sfp, tmp824
 12707      20
 12708              	.LVL685:
 12709              	.L924:
 883:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 12710              		.loc 1 883 37 view .LVU4391
 12711              	.LBE598:
 12712              	.LBE708:
 12713              	.LBB709:
 12714              	.LBB702:
 12715              	.LBB700:
 123:sieve_extend.c **** }
 12716              		.loc 1 123 5 is_stmt 1 view .LVU4392
 123:sieve_extend.c **** }
 12717              		.loc 1 123 5 is_stmt 0 view .LVU4393
 12718              	.LBE700:
 12719              	.LBE702:
1023:sieve_extend.c ****     } 
 12720              		.loc 1 1023 9 is_stmt 1 view .LVU4394
 12721              	.LBB703:
GAS LISTING /tmp/cc64mrzX.s 			page 345


 12722              	.LBB692:
 12723              	# sieve_extend.c:889:     counter_t start = prime * prime * 2 + prime * 2;
 889:sieve_extend.c ****     counter_t step  = prime * 2 + 1;
 12724              		.loc 1 889 15 is_stmt 0 view .LVU4395
 12725 484b 488B7424 		mov	rsi, QWORD PTR 32[rsp]	# tmp658, %sfp
 12725      20
 12726              	.LBE692:
 12727              	.LBE703:
 12728              	# sieve_extend.c:1023:         sieve_block_stripe(sieve, block_start, block_stop, prime);
1023:sieve_extend.c ****     } 
 12729              		.loc 1 1023 9 view .LVU4396
 12730 4850 4C8B7424 		mov	r14, QWORD PTR 48[rsp]	# <retval>, %sfp
 12730      30
 12731              	.LBB704:
 12732              	.LBB693:
 12733              	# sieve_extend.c:889:     counter_t start = prime * prime * 2 + prime * 2;
 889:sieve_extend.c ****     counter_t step  = prime * 2 + 1;
 12734              		.loc 1 889 15 view .LVU4397
 12735 4855 480FAF74 		imul	rsi, QWORD PTR 40[rsp]	# tmp658, %sfp
 12735      2428
 12736              	.LBE693:
 12737              	.LBE704:
 12738              	# sieve_extend.c:1023:         sieve_block_stripe(sieve, block_start, block_stop, prime);
1023:sieve_extend.c ****     } 
 12739              		.loc 1 1023 9 view .LVU4398
 12740 485b 498B1E   		mov	rbx, QWORD PTR [r14]	# _30, MEM[(uint64_t * *)sieve_92]
 12741              	.LVL686:
 12742              	.LBB705:
 12743              	.LBI605:
 887:sieve_extend.c ****     counter_t prime = prime_start;
 12744              		.loc 1 887 13 is_stmt 1 view .LVU4399
 12745              	.LBB694:
 888:sieve_extend.c ****     counter_t start = prime * prime * 2 + prime * 2;
 12746              		.loc 1 888 5 view .LVU4400
 889:sieve_extend.c ****     counter_t step  = prime * 2 + 1;
 12747              		.loc 1 889 5 view .LVU4401
 12748              	# sieve_extend.c:889:     counter_t start = prime * prime * 2 + prime * 2;
 889:sieve_extend.c ****     counter_t step  = prime * 2 + 1;
 12749              		.loc 1 889 15 is_stmt 0 view .LVU4402
 12750 485e 4801F6   		add	rsi, rsi	# index
 12751              	.LVL687:
 890:sieve_extend.c ****     bitword_t* bitarray = sieve->bitarray;
 12752              		.loc 1 890 5 is_stmt 1 view .LVU4403
 891:sieve_extend.c **** 
 12753              		.loc 1 891 5 view .LVU4404
 893:sieve_extend.c ****     
 12754              		.loc 1 893 5 view .LVU4405
 895:sieve_extend.c ****         step  = prime * 2 + 1;
 12755              		.loc 1 895 5 view .LVU4406
 895:sieve_extend.c ****         step  = prime * 2 + 1;
 12756              		.loc 1 895 11 view .LVU4407
 12757 4861 4939F4   		cmp	r12, rsi	# block_stop, index
 12758 4864 0F82D303 		jb	.L931	#,
 12758      0000
 12759              	.LBB625:
 12760              	.LBB620:
 12761              	# sieve_extend.c:244:     const counter_t range_stop_word = wordindex(range_stop);
GAS LISTING /tmp/cc64mrzX.s 			page 346


 244:sieve_extend.c ****     register counter_t range_start_word = wordindex(range_start);
 12762              		.loc 1 244 21 is_stmt 0 view .LVU4408
 12763 486a 4C89E2   		mov	rdx, r12	# range_stop_word, block_stop
 12764              	# sieve_extend.c:268:    bitarray[range_stop_word] &= chopmask(range_stop);
 268:sieve_extend.c **** 
 12765              		.loc 1 268 33 view .LVU4409
 12766 486d 4489E1   		mov	ecx, r12d	# tmp660, block_stop
 12767              	# sieve_extend.c:244:     const counter_t range_stop_word = wordindex(range_stop);
 244:sieve_extend.c ****     register counter_t range_start_word = wordindex(range_start);
 12768              		.loc 1 244 21 view .LVU4410
 12769 4870 48C1EA06 		shr	rdx, 6	# range_stop_word,
 12770              	# sieve_extend.c:268:    bitarray[range_stop_word] &= chopmask(range_stop);
 268:sieve_extend.c **** 
 12771              		.loc 1 268 33 view .LVU4411
 12772 4874 F7D1     		not	ecx	# tmp660
 12773              	# sieve_extend.c:268:    bitarray[range_stop_word] &= chopmask(range_stop);
 268:sieve_extend.c **** 
 12774              		.loc 1 268 30 view .LVU4412
 12775 4876 488D2CD3 		lea	rbp, [rbx+rdx*8]	# _494,
 12776              	# sieve_extend.c:268:    bitarray[range_stop_word] &= chopmask(range_stop);
 268:sieve_extend.c **** 
 12777              		.loc 1 268 33 view .LVU4413
 12778 487a 49C7C5FF 		mov	r13, -1	# tmp1679,
 12778      FFFFFF
 12779              	# sieve_extend.c:244:     const counter_t range_stop_word = wordindex(range_stop);
 244:sieve_extend.c ****     register counter_t range_start_word = wordindex(range_start);
 12780              		.loc 1 244 21 view .LVU4414
 12781 4881 48895424 		mov	QWORD PTR 16[rsp], rdx	# %sfp, range_stop_word
 12781      10
 12782              	# sieve_extend.c:268:    bitarray[range_stop_word] &= chopmask(range_stop);
 268:sieve_extend.c **** 
 12783              		.loc 1 268 33 view .LVU4415
 12784 4886 C442F3F7 		shrx	r9, r13, rcx	# _499, tmp1679, tmp660
 12784      CD
 12785 488b 488B4C24 		mov	rcx, QWORD PTR 40[rsp]	# index, %sfp
 12785      28
 12786 4890 4989EE   		mov	r14, rbp	# _1365, _494
 12787              	.LVL688:
 268:sieve_extend.c **** 
 12788              		.loc 1 268 33 view .LVU4416
 12789 4893 4C894C24 		mov	QWORD PTR 8[rsp], r9	# %sfp, _499
 12789      08
 12790 4898 0F1F8400 		.p2align 4
 12790      00000000 
 12791              		.p2align 3
 12792              	.L942:
 268:sieve_extend.c **** 
 12793              		.loc 1 268 33 view .LVU4417
 12794              	.LBE620:
 12795              	.LBE625:
 896:sieve_extend.c ****         if unlikely(step > SMALLSTEP_FASTER) break;
 12796              		.loc 1 896 9 is_stmt 1 view .LVU4418
 12797              	# sieve_extend.c:896:         step  = prime * 2 + 1;
 896:sieve_extend.c ****         if unlikely(step > SMALLSTEP_FASTER) break;
 12798              		.loc 1 896 15 is_stmt 0 view .LVU4419
 12799 48a0 488D7C09 		lea	rdi, 1[rcx+rcx]	# step,
 12799      01
GAS LISTING /tmp/cc64mrzX.s 			page 347


 12800              	.LVL689:
 897:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 12801              		.loc 1 897 9 is_stmt 1 view .LVU4420
 12802              	# sieve_extend.c:897:         if unlikely(step > SMALLSTEP_FASTER) break;
 897:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 12803              		.loc 1 897 12 is_stmt 0 view .LVU4421
 12804 48a5 483B3D00 		cmp	rdi, QWORD PTR global_SMALLSTEP_FASTER[rip]	# step, global_SMALLSTEP_FASTER
 12804      000000
 12805 48ac 0F87C603 		ja	.L1499	#,
 12805      0000
 898:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 12806              		.loc 1 898 9 is_stmt 1 view .LVU4422
 12807              	# sieve_extend.c:898:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 898:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 12808              		.loc 1 898 12 is_stmt 0 view .LVU4423
 12809 48b2 4C8D5101 		lea	r10, 1[rcx]	# _303,
 12810 48b6 4D39FA   		cmp	r10, r15	# _303, block_start
 12811 48b9 7710     		ja	.L932	#,
 898:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 12812              		.loc 1 898 47 is_stmt 1 view .LVU4424
 12813              	# sieve_extend.c:898:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 898:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 12814              		.loc 1 898 67 is_stmt 0 view .LVU4425
 12815 48bb 4A8D0439 		lea	rax, [rcx+r15]	# _307,
 12816              	# sieve_extend.c:898:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 898:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 12817              		.loc 1 898 108 view .LVU4426
 12818 48bf 31D2     		xor	edx, edx	# tmp666
 12819              	# sieve_extend.c:898:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 898:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 12820              		.loc 1 898 75 view .LVU4427
 12821 48c1 488D3408 		lea	rsi, [rax+rcx]	# tmp664,
 12822              	.LVL690:
 12823              	# sieve_extend.c:898:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 898:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 12824              		.loc 1 898 108 view .LVU4428
 12825 48c5 48F7F7   		div	rdi	# step
 12826              	.LVL691:
 12827              	# sieve_extend.c:898:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 898:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 12828              		.loc 1 898 53 view .LVU4429
 12829 48c8 4829D6   		sub	rsi, rdx	# index, tmp666
 12830              	.LVL692:
 12831              	.L932:
 899:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1 );
 12832              		.loc 1 899 9 is_stmt 1 view .LVU4430
 12833              	.LBB626:
 12834              	.LBI607:
 233:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using smallstep (%ju occurances)
 12835              		.loc 1 233 20 view .LVU4431
 12836              	.LBB621:
 234:sieve_extend.c **** 
 12837              		.loc 1 234 5 view .LVU4432
 237:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; patternsize += patternsi
 12838              		.loc 1 237 2 view .LVU4433
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12839              		.loc 1 238 5 view .LVU4434
GAS LISTING /tmp/cc64mrzX.s 			page 348


 12840              	.LBB609:
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12841              		.loc 1 238 10 view .LVU4435
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12842              		.loc 1 238 41 view .LVU4436
 12843              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12844              		.loc 1 238 5 is_stmt 0 view .LVU4437
 12845 48cb 4883FF40 		cmp	rdi, 64	# step,
 12846 48cf 0F87330E 		ja	.L991	#,
 12846      0000
 12847 48d5 4989F8   		mov	r8, rdi	# patternsize, step
 12848              	.LBE609:
 12849              	# sieve_extend.c:237: 	register bitword_t pattern = BITWORD_SHIFTBIT;
 237:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; patternsize += patternsi
 12850              		.loc 1 237 21 view .LVU4438
 12851 48d8 B9010000 		mov	ecx, 1	# pattern,
 12851      00
 12852              	.LVL693:
 12853              	.L934:
 12854              	.LBB610:
 239:sieve_extend.c **** 
 12855              		.loc 1 239 9 is_stmt 1 view .LVU4439
 12856              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12857              		.loc 1 238 88 is_stmt 0 view .LVU4440
 12858 48dd 4F8D2C00 		lea	r13, [r8+r8]	# patternsize,
 12859              	# sieve_extend.c:239:         pattern |= (pattern << patternsize);
 239:sieve_extend.c **** 
 12860              		.loc 1 239 29 view .LVU4441
 12861 48e1 C462B9F7 		shlx	r11, rcx, r8	# _448, pattern, patternsize
 12861      D9
 12862              	# sieve_extend.c:239:         pattern |= (pattern << patternsize);
 239:sieve_extend.c **** 
 12863              		.loc 1 239 17 view .LVU4442
 12864 48e6 4C09D9   		or	rcx, r11	# pattern, _448
 12865              	.LVL694:
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12866              		.loc 1 238 76 is_stmt 1 view .LVU4443
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12867              		.loc 1 238 41 view .LVU4444
 12868              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12869              		.loc 1 238 5 is_stmt 0 view .LVU4445
 12870 48e9 4983FD40 		cmp	r13, 64	# patternsize,
 12871 48ed 0F879D00 		ja	.L933	#,
 12871      0000
 239:sieve_extend.c **** 
 12872              		.loc 1 239 9 is_stmt 1 view .LVU4446
 12873              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12874              		.loc 1 238 88 is_stmt 0 view .LVU4447
 12875 48f3 4A8D0485 		lea	rax, 0[0+r8*4]	# patternsize,
 12875      00000000 
 12876              	# sieve_extend.c:239:         pattern |= (pattern << patternsize);
 239:sieve_extend.c **** 
 12877              		.loc 1 239 29 view .LVU4448
GAS LISTING /tmp/cc64mrzX.s 			page 349


 12878 48fb C46291F7 		shlx	r9, rcx, r13	# _448, pattern, patternsize
 12878      C9
 12879              	# sieve_extend.c:239:         pattern |= (pattern << patternsize);
 239:sieve_extend.c **** 
 12880              		.loc 1 239 17 view .LVU4449
 12881 4900 4C09C9   		or	rcx, r9	# pattern, _448
 12882              	.LVL695:
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12883              		.loc 1 238 76 is_stmt 1 view .LVU4450
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12884              		.loc 1 238 41 view .LVU4451
 12885              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12886              		.loc 1 238 5 is_stmt 0 view .LVU4452
 12887 4903 4883F840 		cmp	rax, 64	# patternsize,
 12888 4907 0F878300 		ja	.L933	#,
 12888      0000
 239:sieve_extend.c **** 
 12889              		.loc 1 239 9 is_stmt 1 view .LVU4453
 12890              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12891              		.loc 1 238 88 is_stmt 0 view .LVU4454
 12892 490d 4E8D1CC5 		lea	r11, 0[0+r8*8]	# patternsize,
 12892      00000000 
 12893              	# sieve_extend.c:239:         pattern |= (pattern << patternsize);
 239:sieve_extend.c **** 
 12894              		.loc 1 239 29 view .LVU4455
 12895 4915 C4E2F9F7 		shlx	rdx, rcx, rax	# _448, pattern, patternsize
 12895      D1
 12896              	# sieve_extend.c:239:         pattern |= (pattern << patternsize);
 239:sieve_extend.c **** 
 12897              		.loc 1 239 17 view .LVU4456
 12898 491a 4809D1   		or	rcx, rdx	# pattern, _448
 12899              	.LVL696:
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12900              		.loc 1 238 76 is_stmt 1 view .LVU4457
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12901              		.loc 1 238 41 view .LVU4458
 12902              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12903              		.loc 1 238 5 is_stmt 0 view .LVU4459
 12904 491d 4983FB40 		cmp	r11, 64	# patternsize,
 12905 4921 776D     		ja	.L933	#,
 239:sieve_extend.c **** 
 12906              		.loc 1 239 9 is_stmt 1 view .LVU4460
 12907              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12908              		.loc 1 238 88 is_stmt 0 view .LVU4461
 12909 4923 4D89C1   		mov	r9, r8	# patternsize, patternsize
 12910              	# sieve_extend.c:239:         pattern |= (pattern << patternsize);
 239:sieve_extend.c **** 
 12911              		.loc 1 239 29 view .LVU4462
 12912 4926 C462A1F7 		shlx	r13, rcx, r11	# _448, pattern, patternsize
 12912      E9
 12913              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12914              		.loc 1 238 88 view .LVU4463
GAS LISTING /tmp/cc64mrzX.s 			page 350


 12915 492b 49C1E104 		sal	r9, 4	# patternsize,
 12916              	# sieve_extend.c:239:         pattern |= (pattern << patternsize);
 239:sieve_extend.c **** 
 12917              		.loc 1 239 17 view .LVU4464
 12918 492f 4C09E9   		or	rcx, r13	# pattern, _448
 12919              	.LVL697:
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12920              		.loc 1 238 76 is_stmt 1 view .LVU4465
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12921              		.loc 1 238 41 view .LVU4466
 12922              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12923              		.loc 1 238 5 is_stmt 0 view .LVU4467
 12924 4932 4983F940 		cmp	r9, 64	# patternsize,
 12925 4936 7758     		ja	.L933	#,
 239:sieve_extend.c **** 
 12926              		.loc 1 239 9 is_stmt 1 view .LVU4468
 12927              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12928              		.loc 1 238 88 is_stmt 0 view .LVU4469
 12929 4938 4C89C2   		mov	rdx, r8	# patternsize, patternsize
 12930              	# sieve_extend.c:239:         pattern |= (pattern << patternsize);
 239:sieve_extend.c **** 
 12931              		.loc 1 239 29 view .LVU4470
 12932 493b C4E2B1F7 		shlx	rax, rcx, r9	# _448, pattern, patternsize
 12932      C1
 12933              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12934              		.loc 1 238 88 view .LVU4471
 12935 4940 48C1E205 		sal	rdx, 5	# patternsize,
 12936              	# sieve_extend.c:239:         pattern |= (pattern << patternsize);
 239:sieve_extend.c **** 
 12937              		.loc 1 239 17 view .LVU4472
 12938 4944 4809C1   		or	rcx, rax	# pattern, _448
 12939              	.LVL698:
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12940              		.loc 1 238 76 is_stmt 1 view .LVU4473
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12941              		.loc 1 238 41 view .LVU4474
 12942              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12943              		.loc 1 238 5 is_stmt 0 view .LVU4475
 12944 4947 4883FA40 		cmp	rdx, 64	# patternsize,
 12945 494b 7743     		ja	.L933	#,
 239:sieve_extend.c **** 
 12946              		.loc 1 239 9 is_stmt 1 view .LVU4476
 12947              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12948              		.loc 1 238 88 is_stmt 0 view .LVU4477
 12949 494d 4D89C5   		mov	r13, r8	# patternsize, patternsize
 12950              	# sieve_extend.c:239:         pattern |= (pattern << patternsize);
 239:sieve_extend.c **** 
 12951              		.loc 1 239 29 view .LVU4478
 12952 4950 C462E9F7 		shlx	r11, rcx, rdx	# _448, pattern, patternsize
 12952      D9
 12953              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
GAS LISTING /tmp/cc64mrzX.s 			page 351


 12954              		.loc 1 238 88 view .LVU4479
 12955 4955 49C1E506 		sal	r13, 6	# patternsize,
 12956              	# sieve_extend.c:239:         pattern |= (pattern << patternsize);
 239:sieve_extend.c **** 
 12957              		.loc 1 239 17 view .LVU4480
 12958 4959 4C09D9   		or	rcx, r11	# pattern, _448
 12959              	.LVL699:
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12960              		.loc 1 238 76 is_stmt 1 view .LVU4481
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12961              		.loc 1 238 41 view .LVU4482
 12962              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12963              		.loc 1 238 5 is_stmt 0 view .LVU4483
 12964 495c 4983FD40 		cmp	r13, 64	# patternsize,
 12965 4960 772E     		ja	.L933	#,
 239:sieve_extend.c **** 
 12966              		.loc 1 239 9 is_stmt 1 view .LVU4484
 12967              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12968              		.loc 1 238 88 is_stmt 0 view .LVU4485
 12969 4962 4C89C0   		mov	rax, r8	# patternsize, patternsize
 12970              	# sieve_extend.c:239:         pattern |= (pattern << patternsize);
 239:sieve_extend.c **** 
 12971              		.loc 1 239 29 view .LVU4486
 12972 4965 C46291F7 		shlx	r9, rcx, r13	# _448, pattern, patternsize
 12972      C9
 12973              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12974              		.loc 1 238 88 view .LVU4487
 12975 496a 48C1E007 		sal	rax, 7	# patternsize,
 12976              	# sieve_extend.c:239:         pattern |= (pattern << patternsize);
 239:sieve_extend.c **** 
 12977              		.loc 1 239 17 view .LVU4488
 12978 496e 4C09C9   		or	rcx, r9	# pattern, _448
 12979              	.LVL700:
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12980              		.loc 1 238 76 is_stmt 1 view .LVU4489
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12981              		.loc 1 238 41 view .LVU4490
 12982              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12983              		.loc 1 238 5 is_stmt 0 view .LVU4491
 12984 4971 4883F840 		cmp	rax, 64	# patternsize,
 12985 4975 7719     		ja	.L933	#,
 239:sieve_extend.c **** 
 12986              		.loc 1 239 9 is_stmt 1 view .LVU4492
 12987              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12988              		.loc 1 238 88 is_stmt 0 view .LVU4493
 12989 4977 49C1E008 		sal	r8, 8	# patternsize,
 12990              	# sieve_extend.c:239:         pattern |= (pattern << patternsize);
 239:sieve_extend.c **** 
 12991              		.loc 1 239 29 view .LVU4494
 12992 497b C4E2F9F7 		shlx	rdx, rcx, rax	# _448, pattern, patternsize
 12992      D1
 12993              	# sieve_extend.c:239:         pattern |= (pattern << patternsize);
GAS LISTING /tmp/cc64mrzX.s 			page 352


 239:sieve_extend.c **** 
 12994              		.loc 1 239 17 view .LVU4495
 12995 4980 4809D1   		or	rcx, rdx	# pattern, _448
 12996              	.LVL701:
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12997              		.loc 1 238 76 is_stmt 1 view .LVU4496
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12998              		.loc 1 238 41 view .LVU4497
 12999              	# sieve_extend.c:238:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 13000              		.loc 1 238 5 is_stmt 0 view .LVU4498
 13001 4983 4983F840 		cmp	r8, 64	# patternsize,
 13002 4987 0F8650FF 		jbe	.L934	#,
 13002      FFFF
 13003              	.LVL702:
 13004 498d 0F1F00   		.p2align 4
 13005              		.p2align 3
 13006              	.L933:
 238:sieve_extend.c ****         pattern |= (pattern << patternsize);
 13007              		.loc 1 238 5 view .LVU4499
 13008              	.LBE610:
 244:sieve_extend.c ****     register counter_t range_start_word = wordindex(range_start);
 13009              		.loc 1 244 5 is_stmt 1 view .LVU4500
 245:sieve_extend.c ****      if (range_start_word >= range_stop_word) { // shortcut
 13010              		.loc 1 245 5 view .LVU4501
 13011              	# sieve_extend.c:245:     register counter_t range_start_word = wordindex(range_start);
 245:sieve_extend.c ****      if (range_start_word >= range_stop_word) { // shortcut
 13012              		.loc 1 245 24 is_stmt 0 view .LVU4502
 13013 4990 4989F0   		mov	r8, rsi	# range_start_word, index
 13014 4993 C462C9F7 		shlx	r9, rcx, rsi	# _1284, pattern, index
 13014      C9
 13015 4998 49C1E806 		shr	r8, 6	# range_start_word,
 13016              	.LVL703:
 246:sieve_extend.c ****        bitarray[range_start_word] |= (pattern << bitindex(range_start)) & chopmask(range_stop);
 13017              		.loc 1 246 6 is_stmt 1 view .LVU4503
 13018              	# sieve_extend.c:246:      if (range_start_word >= range_stop_word) { // shortcut
 246:sieve_extend.c ****        bitarray[range_start_word] |= (pattern << bitindex(range_start)) & chopmask(range_stop);
 13019              		.loc 1 246 9 is_stmt 0 view .LVU4504
 13020 499c 4C394424 		cmp	QWORD PTR 16[rsp], r8	# %sfp, range_start_word
 13020      10
 13021 49a1 4E8D1CC3 		lea	r11, [rbx+r8*8]	# _1281,
 13022 49a5 4D8B2B   		mov	r13, QWORD PTR [r11]	# pretmp_1282, *_1281
 13023 49a8 0F86BA02 		jbe	.L1500	#,
 13023      0000
 252:sieve_extend.c **** 
 13024              		.loc 1 252 5 is_stmt 1 view .LVU4505
 13025              	# sieve_extend.c:256:    register bitshift_t pattern_size = WORD_SIZE_bitshift - (WORD_SIZE_bitshif
 256:sieve_extend.c ****    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 13026              		.loc 1 256 80 is_stmt 0 view .LVU4506
 13027 49ae 31D2     		xor	edx, edx	# tmp675
 13028 49b0 B8400000 		mov	eax, 64	# tmp676,
 13028      00
 13029 49b5 48F7F7   		div	rdi	# step
 13030              	# sieve_extend.c:252:     bitarray[range_start_word] |= (pattern << bitindex(range_start));
 252:sieve_extend.c **** 
 13031              		.loc 1 252 32 view .LVU4507
 13032 49b8 4D09E9   		or	r9, r13	# tmp673, pretmp_1282
GAS LISTING /tmp/cc64mrzX.s 			page 353


 13033              	# sieve_extend.c:258:    register bitshift_t shift = (bitindex_calc(range_start))%step ;
 258:sieve_extend.c ****    counter_t loop_range = range_stop_word - range_start_word;
 13034              		.loc 1 258 33 view .LVU4508
 13035 49bb 4889F0   		mov	rax, rsi	# index, index
 13036              	# sieve_extend.c:252:     bitarray[range_start_word] |= (pattern << bitindex(range_start));
 252:sieve_extend.c **** 
 13037              		.loc 1 252 32 view .LVU4509
 13038 49be 4D890B   		mov	QWORD PTR [r11], r9	# *_1281, tmp673
 256:sieve_extend.c ****    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 13039              		.loc 1 256 4 is_stmt 1 view .LVU4510
 13040              	# sieve_extend.c:256:    register bitshift_t pattern_size = WORD_SIZE_bitshift - (WORD_SIZE_bitshif
 256:sieve_extend.c ****    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 13041              		.loc 1 256 24 is_stmt 0 view .LVU4511
 13042 49c1 41BD4000 		mov	r13d, 64	# pattern_size,
 13042      0000
 13043              	# sieve_extend.c:257:    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 257:sieve_extend.c ****    register bitshift_t shift = (bitindex_calc(range_start))%step ;
 13044              		.loc 1 257 24 view .LVU4512
 13045 49c7 4989F9   		mov	r9, rdi	# pattern_shift, step
 13046              	# sieve_extend.c:258:    register bitshift_t shift = (bitindex_calc(range_start))%step ;
 258:sieve_extend.c ****    counter_t loop_range = range_stop_word - range_start_word;
 13047              		.loc 1 258 33 view .LVU4513
 13048 49ca 83E03F   		and	eax, 63	# index,
 13049              	# sieve_extend.c:256:    register bitshift_t pattern_size = WORD_SIZE_bitshift - (WORD_SIZE_bitshif
 256:sieve_extend.c ****    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 13050              		.loc 1 256 24 view .LVU4514
 13051 49cd 4929D5   		sub	r13, rdx	# pattern_size, tmp675
 13052              	.LVL704:
 257:sieve_extend.c ****    register bitshift_t shift = (bitindex_calc(range_start))%step ;
 13053              		.loc 1 257 4 is_stmt 1 view .LVU4515
 13054              	# sieve_extend.c:257:    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 257:sieve_extend.c ****    register bitshift_t shift = (bitindex_calc(range_start))%step ;
 13055              		.loc 1 257 24 is_stmt 0 view .LVU4516
 13056 49d0 4929D1   		sub	r9, rdx	# pattern_shift, tmp675
 13057              	.LVL705:
 258:sieve_extend.c ****    counter_t loop_range = range_stop_word - range_start_word;
 13058              		.loc 1 258 4 is_stmt 1 view .LVU4517
 13059              	# sieve_extend.c:258:    register bitshift_t shift = (bitindex_calc(range_start))%step ;
 258:sieve_extend.c ****    counter_t loop_range = range_stop_word - range_start_word;
 13060              		.loc 1 258 24 is_stmt 0 view .LVU4518
 13061 49d3 31D2     		xor	edx, edx	# tmp679
 13062 49d5 48F7F7   		div	rdi	# step
 13063              	.LVL706:
 259:sieve_extend.c ****    #pragma unroll
 13064              		.loc 1 259 4 is_stmt 1 view .LVU4519
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 13065              		.loc 1 262 4 view .LVU4520
 13066              	.LBB611:
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 13067              		.loc 1 262 9 view .LVU4521
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 13068              		.loc 1 262 24 view .LVU4522
 13069              	# sieve_extend.c:262:    for (counter_t i=1; i <= loop_range; i++) {
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 13070              		.loc 1 262 4 is_stmt 0 view .LVU4523
 13071 49d8 4C394424 		cmp	QWORD PTR 16[rsp], r8	# %sfp, range_start_word
 13071      10
GAS LISTING /tmp/cc64mrzX.s 			page 354


 13072 49dd 0F845D01 		je	.L939	#,
 13072      0000
 13073 49e3 4C89F0   		mov	rax, r14	# tmp843, _1365
 13074 49e6 498D3411 		lea	rsi, [r9+rdx]	# ivtmp.614,
 13075              	.LVL707:
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 13076              		.loc 1 262 4 view .LVU4524
 13077 49ea 4C29D8   		sub	rax, r11	# tmp843, ivtmp.616
 13078 49ed 4D89D8   		mov	r8, r11	# ivtmp.616, _1281
 13079              	.LVL708:
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 13080              		.loc 1 262 4 view .LVU4525
 13081 49f0 4883E808 		sub	rax, 8	# tmp844,
 13082 49f4 48C1E803 		shr	rax, 3	# tmp842,
 13083 49f8 4883C001 		add	rax, 1	# tmp845,
 13084 49fc 83E003   		and	eax, 3	# tmp846,
 13085 49ff 0F849800 		je	.L938	#,
 13085      0000
 13086 4a05 4883F801 		cmp	rax, 1	# tmp846,
 13087 4a09 7461     		je	.L1207	#,
 13088 4a0b 4883F802 		cmp	rax, 2	# tmp846,
 13089 4a0f 7433     		je	.L1208	#,
 13090              	.LVL709:
 13091              	.LBB612:
 263:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 13092              		.loc 1 263 9 is_stmt 1 view .LVU4526
 264:sieve_extend.c **** 
 13093              		.loc 1 264 8 view .LVU4527
 13094              	# sieve_extend.c:263:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 263:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 13095              		.loc 1 263 20 is_stmt 0 view .LVU4528
 13096 4a11 4889F0   		mov	rax, rsi	# tmp1085, ivtmp.614
 13097 4a14 31D2     		xor	edx, edx	# totalshift
 13098              	.LVL710:
 263:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 13099              		.loc 1 263 20 view .LVU4529
 13100 4a16 48F7F7   		div	rdi	# step
 13101 4a19 4983C008 		add	r8, 8	# ivtmp.616,
 13102 4a1d 4C01CE   		add	rsi, r9	# ivtmp.614, pattern_shift
 13103              	.LVL711:
 13104              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 13105              		.loc 1 264 91 view .LVU4530
 13106 4a20 C4E2E9F7 		shlx	rax, rcx, rdx	# tmp1086, pattern, totalshift
 13106      C1
 13107              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 13108              		.loc 1 264 37 view .LVU4531
 13109 4a25 490B4308 		or	rax, QWORD PTR 8[r11]	# tmp1086, MEM[base: _1370, offset: 8B]
 13110 4a29 48894424 		mov	QWORD PTR 24[rsp], rax	# %sfp, tmp1086
 13110      18
 13111              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 13112              		.loc 1 264 66 view .LVU4532
 13113 4a2e 4489E8   		mov	eax, r13d	# tmp1088, _1295
 13114 4a31 29D0     		sub	eax, edx	# tmp1088, totalshift
 13115              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
GAS LISTING /tmp/cc64mrzX.s 			page 355


 264:sieve_extend.c **** 
 13116              		.loc 1 264 50 view .LVU4533
 13117 4a33 C4E2FBF7 		shrx	rdx, rcx, rax	# tmp1089, pattern, tmp1088
 13117      D1
 13118              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 13119              		.loc 1 264 37 view .LVU4534
 13120 4a38 488B4424 		mov	rax, QWORD PTR 24[rsp]	# tmp1087, %sfp
 13120      18
 13121 4a3d 4809D0   		or	rax, rdx	# tmp1087, tmp1089
 13122 4a40 49894308 		mov	QWORD PTR 8[r11], rax	# MEM[base: _1370, offset: 8B], tmp1090
 13123              	.LBE612:
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 13124              		.loc 1 262 41 is_stmt 1 view .LVU4535
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 13125              		.loc 1 262 24 view .LVU4536
 13126              	.L1208:
 13127              	.LBB613:
 263:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 13128              		.loc 1 263 9 view .LVU4537
 264:sieve_extend.c **** 
 13129              		.loc 1 264 8 view .LVU4538
 13130              	# sieve_extend.c:263:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 263:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 13131              		.loc 1 263 20 is_stmt 0 view .LVU4539
 13132 4a44 4889F0   		mov	rax, rsi	# tmp1092, ivtmp.614
 13133 4a47 31D2     		xor	edx, edx	# totalshift
 13134 4a49 48F7F7   		div	rdi	# step
 13135              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 13136              		.loc 1 264 66 view .LVU4540
 13137 4a4c 4589EB   		mov	r11d, r13d	# tmp1095, _1295
 13138 4a4f 4C01CE   		add	rsi, r9	# ivtmp.614, pattern_shift
 13139 4a52 4983C008 		add	r8, 8	# ivtmp.616,
 13140              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 13141              		.loc 1 264 91 view .LVU4541
 13142 4a56 C4E2E9F7 		shlx	rax, rcx, rdx	# tmp1093, pattern, totalshift
 13142      C1
 13143              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 13144              		.loc 1 264 37 view .LVU4542
 13145 4a5b 490B00   		or	rax, QWORD PTR [r8]	# tmp1094, MEM[base: _1370, offset: 8B]
 13146              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 13147              		.loc 1 264 66 view .LVU4543
 13148 4a5e 4129D3   		sub	r11d, edx	# tmp1095, totalshift
 13149              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 13150              		.loc 1 264 50 view .LVU4544
 13151 4a61 C4E2A3F7 		shrx	rdx, rcx, r11	# tmp1096, pattern, tmp1095
 13151      D1
 13152              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 13153              		.loc 1 264 37 view .LVU4545
 13154 4a66 4809D0   		or	rax, rdx	# tmp1097, tmp1096
 13155 4a69 498900   		mov	QWORD PTR [r8], rax	# MEM[base: _1370, offset: 8B], tmp1097
GAS LISTING /tmp/cc64mrzX.s 			page 356


 13156              	.LBE613:
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 13157              		.loc 1 262 41 is_stmt 1 view .LVU4546
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 13158              		.loc 1 262 24 view .LVU4547
 13159              	.L1207:
 13160              	.LBB614:
 263:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 13161              		.loc 1 263 9 view .LVU4548
 264:sieve_extend.c **** 
 13162              		.loc 1 264 8 view .LVU4549
 13163              	# sieve_extend.c:263:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 263:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 13164              		.loc 1 263 20 is_stmt 0 view .LVU4550
 13165 4a6c 4889F0   		mov	rax, rsi	# tmp1099, ivtmp.614
 13166 4a6f 31D2     		xor	edx, edx	# totalshift
 13167 4a71 48F7F7   		div	rdi	# step
 13168              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 13169              		.loc 1 264 66 view .LVU4551
 13170 4a74 4589EB   		mov	r11d, r13d	# tmp1102, _1295
 13171 4a77 4983C008 		add	r8, 8	# ivtmp.616,
 13172 4a7b 4C01CE   		add	rsi, r9	# ivtmp.614, pattern_shift
 13173              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 13174              		.loc 1 264 91 view .LVU4552
 13175 4a7e C4E2E9F7 		shlx	rax, rcx, rdx	# tmp1100, pattern, totalshift
 13175      C1
 13176              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 13177              		.loc 1 264 37 view .LVU4553
 13178 4a83 490B00   		or	rax, QWORD PTR [r8]	# tmp1101, MEM[base: _1370, offset: 8B]
 13179              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 13180              		.loc 1 264 66 view .LVU4554
 13181 4a86 4129D3   		sub	r11d, edx	# tmp1102, totalshift
 13182              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 13183              		.loc 1 264 50 view .LVU4555
 13184 4a89 C4E2A3F7 		shrx	rdx, rcx, r11	# tmp1103, pattern, tmp1102
 13184      D1
 13185              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 13186              		.loc 1 264 37 view .LVU4556
 13187 4a8e 4809D0   		or	rax, rdx	# tmp1104, tmp1103
 13188 4a91 498900   		mov	QWORD PTR [r8], rax	# MEM[base: _1370, offset: 8B], tmp1104
 13189              	.LBE614:
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 13190              		.loc 1 262 41 is_stmt 1 view .LVU4557
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 13191              		.loc 1 262 24 view .LVU4558
 13192              	# sieve_extend.c:262:    for (counter_t i=1; i <= loop_range; i++) {
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 13193              		.loc 1 262 4 is_stmt 0 view .LVU4559
 13194 4a94 4D39C6   		cmp	r14, r8	# _1365, ivtmp.616
 13195 4a97 0F84A300 		je	.L939	#,
 13195      0000
GAS LISTING /tmp/cc64mrzX.s 			page 357


 13196              	.L938:
 13197              	.LBB615:
 263:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 13198              		.loc 1 263 9 is_stmt 1 view .LVU4560
 264:sieve_extend.c **** 
 13199              		.loc 1 264 8 view .LVU4561
 13200              	# sieve_extend.c:263:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 263:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 13201              		.loc 1 263 20 is_stmt 0 view .LVU4562
 13202 4a9d 4889F0   		mov	rax, rsi	# tmp685, ivtmp.614
 13203 4aa0 31D2     		xor	edx, edx	# totalshift
 13204 4aa2 48F7F7   		div	rdi	# step
 13205              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 13206              		.loc 1 264 66 view .LVU4563
 13207 4aa5 4589EB   		mov	r11d, r13d	# tmp688, _1295
 13208 4aa8 4C01CE   		add	rsi, r9	# ivtmp.614, pattern_shift
 13209 4aab 4983C020 		add	r8, 32	# ivtmp.616,
 13210              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 13211              		.loc 1 264 91 view .LVU4564
 13212 4aaf C4E2E9F7 		shlx	rax, rcx, rdx	# tmp686, pattern, totalshift
 13212      C1
 13213              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 13214              		.loc 1 264 37 view .LVU4565
 13215 4ab4 490B40E8 		or	rax, QWORD PTR -24[r8]	# tmp687, MEM[base: _1370, offset: 8B]
 13216              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 13217              		.loc 1 264 66 view .LVU4566
 13218 4ab8 4129D3   		sub	r11d, edx	# tmp688, totalshift
 13219              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 13220              		.loc 1 264 50 view .LVU4567
 13221 4abb C4E2A3F7 		shrx	rdx, rcx, r11	# tmp689, pattern, tmp688
 13221      D1
 13222              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 13223              		.loc 1 264 66 view .LVU4568
 13224 4ac0 4589EB   		mov	r11d, r13d	# tmp898, _1295
 13225              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 13226              		.loc 1 264 37 view .LVU4569
 13227 4ac3 4809D0   		or	rax, rdx	# tmp690, tmp689
 13228              	# sieve_extend.c:263:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 263:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 13229              		.loc 1 263 20 view .LVU4570
 13230 4ac6 31D2     		xor	edx, edx	# totalshift
 13231              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 13232              		.loc 1 264 37 view .LVU4571
 13233 4ac8 498940E8 		mov	QWORD PTR -24[r8], rax	# MEM[base: _1370, offset: 8B], tmp690
 13234              	.LBE615:
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 13235              		.loc 1 262 41 is_stmt 1 view .LVU4572
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 13236              		.loc 1 262 24 view .LVU4573
GAS LISTING /tmp/cc64mrzX.s 			page 358


 13237              	.LBB616:
 263:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 13238              		.loc 1 263 9 view .LVU4574
 264:sieve_extend.c **** 
 13239              		.loc 1 264 8 view .LVU4575
 13240              	# sieve_extend.c:263:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 263:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 13241              		.loc 1 263 20 is_stmt 0 view .LVU4576
 13242 4acc 4889F0   		mov	rax, rsi	# tmp895, ivtmp.614
 13243 4acf 48F7F7   		div	rdi	# step
 13244 4ad2 4C01CE   		add	rsi, r9	# ivtmp.614, pattern_shift
 13245              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 13246              		.loc 1 264 91 view .LVU4577
 13247 4ad5 C4E2E9F7 		shlx	rax, rcx, rdx	# tmp896, pattern, totalshift
 13247      C1
 13248              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 13249              		.loc 1 264 37 view .LVU4578
 13250 4ada 490B40F0 		or	rax, QWORD PTR -16[r8]	# tmp897, MEM[base: _1370, offset: 8B]
 13251              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 13252              		.loc 1 264 66 view .LVU4579
 13253 4ade 4129D3   		sub	r11d, edx	# tmp898, totalshift
 13254              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 13255              		.loc 1 264 50 view .LVU4580
 13256 4ae1 C4E2A3F7 		shrx	rdx, rcx, r11	# tmp899, pattern, tmp898
 13256      D1
 13257              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 13258              		.loc 1 264 66 view .LVU4581
 13259 4ae6 4589EB   		mov	r11d, r13d	# tmp907, _1295
 13260              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 13261              		.loc 1 264 37 view .LVU4582
 13262 4ae9 4809D0   		or	rax, rdx	# tmp900, tmp899
 13263              	# sieve_extend.c:263:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 263:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 13264              		.loc 1 263 20 view .LVU4583
 13265 4aec 31D2     		xor	edx, edx	# totalshift
 13266              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 13267              		.loc 1 264 37 view .LVU4584
 13268 4aee 498940F0 		mov	QWORD PTR -16[r8], rax	# MEM[base: _1370, offset: 8B], tmp900
 13269              	.LBE616:
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 13270              		.loc 1 262 41 is_stmt 1 view .LVU4585
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 13271              		.loc 1 262 24 view .LVU4586
 13272              	.LBB617:
 263:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 13273              		.loc 1 263 9 view .LVU4587
 264:sieve_extend.c **** 
 13274              		.loc 1 264 8 view .LVU4588
 13275              	# sieve_extend.c:263:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 263:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
GAS LISTING /tmp/cc64mrzX.s 			page 359


 13276              		.loc 1 263 20 is_stmt 0 view .LVU4589
 13277 4af2 4889F0   		mov	rax, rsi	# tmp904, ivtmp.614
 13278 4af5 48F7F7   		div	rdi	# step
 13279 4af8 4C01CE   		add	rsi, r9	# ivtmp.614, pattern_shift
 13280              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 13281              		.loc 1 264 91 view .LVU4590
 13282 4afb C4E2E9F7 		shlx	rax, rcx, rdx	# tmp905, pattern, totalshift
 13282      C1
 13283              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 13284              		.loc 1 264 37 view .LVU4591
 13285 4b00 490B40F8 		or	rax, QWORD PTR -8[r8]	# tmp906, MEM[base: _1370, offset: 8B]
 13286              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 13287              		.loc 1 264 66 view .LVU4592
 13288 4b04 4129D3   		sub	r11d, edx	# tmp907, totalshift
 13289              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 13290              		.loc 1 264 50 view .LVU4593
 13291 4b07 C4E2A3F7 		shrx	rdx, rcx, r11	# tmp908, pattern, tmp907
 13291      D1
 13292              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 13293              		.loc 1 264 66 view .LVU4594
 13294 4b0c 4589EB   		mov	r11d, r13d	# tmp916, _1295
 13295              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 13296              		.loc 1 264 37 view .LVU4595
 13297 4b0f 4809D0   		or	rax, rdx	# tmp909, tmp908
 13298              	# sieve_extend.c:263:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 263:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 13299              		.loc 1 263 20 view .LVU4596
 13300 4b12 31D2     		xor	edx, edx	# totalshift
 13301              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 13302              		.loc 1 264 37 view .LVU4597
 13303 4b14 498940F8 		mov	QWORD PTR -8[r8], rax	# MEM[base: _1370, offset: 8B], tmp909
 13304              	.LBE617:
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 13305              		.loc 1 262 41 is_stmt 1 view .LVU4598
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 13306              		.loc 1 262 24 view .LVU4599
 13307              	.LBB618:
 263:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 13308              		.loc 1 263 9 view .LVU4600
 264:sieve_extend.c **** 
 13309              		.loc 1 264 8 view .LVU4601
 13310              	# sieve_extend.c:263:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 263:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 13311              		.loc 1 263 20 is_stmt 0 view .LVU4602
 13312 4b18 4889F0   		mov	rax, rsi	# tmp913, ivtmp.614
 13313 4b1b 48F7F7   		div	rdi	# step
 13314 4b1e 4C01CE   		add	rsi, r9	# ivtmp.614, pattern_shift
 13315              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 13316              		.loc 1 264 91 view .LVU4603
GAS LISTING /tmp/cc64mrzX.s 			page 360


 13317 4b21 C4E2E9F7 		shlx	rax, rcx, rdx	# tmp914, pattern, totalshift
 13317      C1
 13318              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 13319              		.loc 1 264 37 view .LVU4604
 13320 4b26 490B00   		or	rax, QWORD PTR [r8]	# tmp915, MEM[base: _1370, offset: 8B]
 13321              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 13322              		.loc 1 264 66 view .LVU4605
 13323 4b29 4129D3   		sub	r11d, edx	# tmp916, totalshift
 13324              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 13325              		.loc 1 264 50 view .LVU4606
 13326 4b2c C4E2A3F7 		shrx	rdx, rcx, r11	# tmp917, pattern, tmp916
 13326      D1
 13327              	# sieve_extend.c:264:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 264:sieve_extend.c **** 
 13328              		.loc 1 264 37 view .LVU4607
 13329 4b31 4809D0   		or	rax, rdx	# tmp918, tmp917
 13330 4b34 498900   		mov	QWORD PTR [r8], rax	# MEM[base: _1370, offset: 8B], tmp918
 13331              	.LBE618:
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 13332              		.loc 1 262 41 is_stmt 1 view .LVU4608
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 13333              		.loc 1 262 24 view .LVU4609
 13334              	# sieve_extend.c:262:    for (counter_t i=1; i <= loop_range; i++) {
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 13335              		.loc 1 262 4 is_stmt 0 view .LVU4610
 13336 4b37 4D39C6   		cmp	r14, r8	# _1365, ivtmp.616
 13337 4b3a 0F855DFF 		jne	.L938	#,
 13337      FFFF
 13338              	.L939:
 262:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 13339              		.loc 1 262 4 view .LVU4611
 13340              	.LBE611:
 268:sieve_extend.c **** 
 13341              		.loc 1 268 4 is_stmt 1 view .LVU4612
 13342              	# sieve_extend.c:268:    bitarray[range_stop_word] &= chopmask(range_stop);
 268:sieve_extend.c **** 
 13343              		.loc 1 268 30 is_stmt 0 view .LVU4613
 13344 4b40 488B7C24 		mov	rdi, QWORD PTR 8[rsp]	# _499, %sfp
 13344      08
 13345              	.LVL712:
 268:sieve_extend.c **** 
 13346              		.loc 1 268 30 view .LVU4614
 13347 4b45 48217D00 		and	QWORD PTR 0[rbp], rdi	# *_494, _499
 13348              	.LVL713:
 13349              	.L936:
 268:sieve_extend.c **** 
 13350              		.loc 1 268 30 view .LVU4615
 13351              	.LBE621:
 13352              	.LBE626:
 900:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 13353              		.loc 1 900 9 is_stmt 1 view .LVU4616
 13354              	.LBB627:
 13355              	.LBI627:
 121:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
GAS LISTING /tmp/cc64mrzX.s 			page 361


 13356              		.loc 1 121 25 view .LVU4617
 13357              	.LBB628:
 122:sieve_extend.c ****     return index;
 13358              		.loc 1 122 5 view .LVU4618
 122:sieve_extend.c ****     return index;
 13359              		.loc 1 122 11 view .LVU4619
 13360              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13361              		.loc 1 122 21 is_stmt 0 view .LVU4620
 13362 4b49 4C89D1   		mov	rcx, r10	# tmp691, _303
 13363 4b4c 48C1E906 		shr	rcx, 6	# tmp691,
 13364              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13365              		.loc 1 122 12 view .LVU4621
 13366 4b50 4C8B2CCB 		mov	r13, QWORD PTR [rbx+rcx*8]	# *_331, *_331
 13367              	.LBE628:
 13368              	.LBE627:
 13369              	# sieve_extend.c:898:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 898:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 13370              		.loc 1 898 12 view .LVU4622
 13371 4b54 4C89D1   		mov	rcx, r10	# index, _303
 13372              	.LBB630:
 13373              	.LBB629:
 13374              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13375              		.loc 1 122 11 view .LVU4623
 13376 4b57 4D0FA3D5 		bt	r13, r10	# *_331, _303
 13377 4b5b 0F83BF00 		jnc	.L940	#,
 13377      0000
 13378              	.LVL714:
 13379              	.L941:
 122:sieve_extend.c ****     return index;
 13380              		.loc 1 122 58 is_stmt 1 view .LVU4624
 13381              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13382              		.loc 1 122 63 is_stmt 0 view .LVU4625
 13383 4b61 4C8D5101 		lea	r10, 1[rcx]	# tmp841,
 13384              	.LVL715:
 13385              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13386              		.loc 1 122 21 view .LVU4626
 13387 4b65 4D89D1   		mov	r9, r10	# tmp696, index
 13388              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13389              		.loc 1 122 63 view .LVU4627
 13390 4b68 4C89D1   		mov	rcx, r10	# index, tmp841
 122:sieve_extend.c ****     return index;
 13391              		.loc 1 122 11 is_stmt 1 view .LVU4628
 13392              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13393              		.loc 1 122 21 is_stmt 0 view .LVU4629
 13394 4b6b 49C1E906 		shr	r9, 6	# tmp696,
 13395              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13396              		.loc 1 122 12 view .LVU4630
 13397 4b6f 4A8B34CB 		mov	rsi, QWORD PTR [rbx+r9*8]	# *_316, *_316
 13398              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
GAS LISTING /tmp/cc64mrzX.s 			page 362


 122:sieve_extend.c ****     return index;
 13399              		.loc 1 122 11 view .LVU4631
 13400 4b73 4C0FA3D6 		bt	rsi, r10	# *_316, index
 13401 4b77 0F83A300 		jnc	.L940	#,
 13401      0000
 122:sieve_extend.c ****     return index;
 13402              		.loc 1 122 58 is_stmt 1 view .LVU4632
 13403              	.LVL716:
 13404              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13405              		.loc 1 122 63 is_stmt 0 view .LVU4633
 13406 4b7d 4883C101 		add	rcx, 1	# index,
 13407              	.LVL717:
 122:sieve_extend.c ****     return index;
 13408              		.loc 1 122 11 is_stmt 1 view .LVU4634
 13409              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13410              		.loc 1 122 21 is_stmt 0 view .LVU4635
 13411 4b81 4989C8   		mov	r8, rcx	# tmp1056, index
 13412 4b84 49C1E806 		shr	r8, 6	# tmp1056,
 13413              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13414              		.loc 1 122 12 view .LVU4636
 13415 4b88 4A8B04C3 		mov	rax, QWORD PTR [rbx+r8*8]	# *_316, *_316
 13416              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13417              		.loc 1 122 11 view .LVU4637
 13418 4b8c 480FA3C8 		bt	rax, rcx	# *_316, index
 13419 4b90 0F838A00 		jnc	.L940	#,
 13419      0000
 122:sieve_extend.c ****     return index;
 13420              		.loc 1 122 58 is_stmt 1 view .LVU4638
 13421              	.LVL718:
 13422              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13423              		.loc 1 122 63 is_stmt 0 view .LVU4639
 13424 4b96 498D4A02 		lea	rcx, 2[r10]	# index,
 13425              	.LVL719:
 122:sieve_extend.c ****     return index;
 13426              		.loc 1 122 11 is_stmt 1 view .LVU4640
 13427              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13428              		.loc 1 122 21 is_stmt 0 view .LVU4641
 13429 4b9a 4989CB   		mov	r11, rcx	# tmp1060, index
 13430 4b9d 49C1EB06 		shr	r11, 6	# tmp1060,
 13431              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13432              		.loc 1 122 12 view .LVU4642
 13433 4ba1 4A8B14DB 		mov	rdx, QWORD PTR [rbx+r11*8]	# *_316, *_316
 13434              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13435              		.loc 1 122 11 view .LVU4643
 13436 4ba5 480FA3CA 		bt	rdx, rcx	# *_316, index
 13437 4ba9 7375     		jnc	.L940	#,
 122:sieve_extend.c ****     return index;
 13438              		.loc 1 122 58 is_stmt 1 view .LVU4644
 13439              	.LVL720:
GAS LISTING /tmp/cc64mrzX.s 			page 363


 13440              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13441              		.loc 1 122 63 is_stmt 0 view .LVU4645
 13442 4bab 498D4A03 		lea	rcx, 3[r10]	# index,
 13443              	.LVL721:
 122:sieve_extend.c ****     return index;
 13444              		.loc 1 122 11 is_stmt 1 view .LVU4646
 13445              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13446              		.loc 1 122 21 is_stmt 0 view .LVU4647
 13447 4baf 4889CF   		mov	rdi, rcx	# tmp1064, index
 13448 4bb2 48C1EF06 		shr	rdi, 6	# tmp1064,
 13449              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13450              		.loc 1 122 12 view .LVU4648
 13451 4bb6 4C8B2CFB 		mov	r13, QWORD PTR [rbx+rdi*8]	# *_316, *_316
 13452              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13453              		.loc 1 122 11 view .LVU4649
 13454 4bba 490FA3CD 		bt	r13, rcx	# *_316, index
 13455 4bbe 7360     		jnc	.L940	#,
 122:sieve_extend.c ****     return index;
 13456              		.loc 1 122 58 is_stmt 1 view .LVU4650
 13457              	.LVL722:
 13458              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13459              		.loc 1 122 63 is_stmt 0 view .LVU4651
 13460 4bc0 498D4A04 		lea	rcx, 4[r10]	# index,
 13461              	.LVL723:
 122:sieve_extend.c ****     return index;
 13462              		.loc 1 122 11 is_stmt 1 view .LVU4652
 13463              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13464              		.loc 1 122 21 is_stmt 0 view .LVU4653
 13465 4bc4 4989C9   		mov	r9, rcx	# tmp1068, index
 13466 4bc7 49C1E906 		shr	r9, 6	# tmp1068,
 13467              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13468              		.loc 1 122 12 view .LVU4654
 13469 4bcb 4A8B34CB 		mov	rsi, QWORD PTR [rbx+r9*8]	# *_316, *_316
 13470              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13471              		.loc 1 122 11 view .LVU4655
 13472 4bcf 480FA3CE 		bt	rsi, rcx	# *_316, index
 13473 4bd3 734B     		jnc	.L940	#,
 122:sieve_extend.c ****     return index;
 13474              		.loc 1 122 58 is_stmt 1 view .LVU4656
 13475              	.LVL724:
 13476              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13477              		.loc 1 122 63 is_stmt 0 view .LVU4657
 13478 4bd5 498D4A05 		lea	rcx, 5[r10]	# index,
 13479              	.LVL725:
 122:sieve_extend.c ****     return index;
 13480              		.loc 1 122 11 is_stmt 1 view .LVU4658
 13481              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
GAS LISTING /tmp/cc64mrzX.s 			page 364


 13482              		.loc 1 122 21 is_stmt 0 view .LVU4659
 13483 4bd9 4989C8   		mov	r8, rcx	# tmp1072, index
 13484 4bdc 49C1E806 		shr	r8, 6	# tmp1072,
 13485              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13486              		.loc 1 122 12 view .LVU4660
 13487 4be0 4A8B04C3 		mov	rax, QWORD PTR [rbx+r8*8]	# *_316, *_316
 13488              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13489              		.loc 1 122 11 view .LVU4661
 13490 4be4 480FA3C8 		bt	rax, rcx	# *_316, index
 13491 4be8 7336     		jnc	.L940	#,
 122:sieve_extend.c ****     return index;
 13492              		.loc 1 122 58 is_stmt 1 view .LVU4662
 13493              	.LVL726:
 13494              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13495              		.loc 1 122 63 is_stmt 0 view .LVU4663
 13496 4bea 498D4A06 		lea	rcx, 6[r10]	# index,
 13497              	.LVL727:
 122:sieve_extend.c ****     return index;
 13498              		.loc 1 122 11 is_stmt 1 view .LVU4664
 13499              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13500              		.loc 1 122 21 is_stmt 0 view .LVU4665
 13501 4bee 4989CB   		mov	r11, rcx	# tmp1076, index
 13502 4bf1 49C1EB06 		shr	r11, 6	# tmp1076,
 13503              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13504              		.loc 1 122 12 view .LVU4666
 13505 4bf5 4A8B14DB 		mov	rdx, QWORD PTR [rbx+r11*8]	# *_316, *_316
 13506              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13507              		.loc 1 122 11 view .LVU4667
 13508 4bf9 480FA3CA 		bt	rdx, rcx	# *_316, index
 13509 4bfd 7321     		jnc	.L940	#,
 122:sieve_extend.c ****     return index;
 13510              		.loc 1 122 58 is_stmt 1 view .LVU4668
 13511              	.LVL728:
 13512              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13513              		.loc 1 122 63 is_stmt 0 view .LVU4669
 13514 4bff 498D4A07 		lea	rcx, 7[r10]	# index,
 13515              	.LVL729:
 122:sieve_extend.c ****     return index;
 13516              		.loc 1 122 11 is_stmt 1 view .LVU4670
 13517              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13518              		.loc 1 122 21 is_stmt 0 view .LVU4671
 13519 4c03 4989CA   		mov	r10, rcx	# tmp1080, index
 13520 4c06 49C1EA06 		shr	r10, 6	# tmp1080,
 13521              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13522              		.loc 1 122 12 view .LVU4672
 13523 4c0a 4A8B3CD3 		mov	rdi, QWORD PTR [rbx+r10*8]	# *_316, *_316
 13524              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
GAS LISTING /tmp/cc64mrzX.s 			page 365


 13525              		.loc 1 122 11 view .LVU4673
 13526 4c0e 480FA3CF 		bt	rdi, rcx	# *_316, index
 13527 4c12 0F8249FF 		jc	.L941	#,
 13527      FFFF
 13528              	.LVL730:
 13529 4c18 0F1F8400 		.p2align 4
 13529      00000000 
 13530              		.p2align 3
 13531              	.L940:
 123:sieve_extend.c **** }
 13532              		.loc 1 123 5 is_stmt 1 view .LVU4674
 123:sieve_extend.c **** }
 13533              		.loc 1 123 5 is_stmt 0 view .LVU4675
 13534              	.LBE629:
 13535              	.LBE630:
 901:sieve_extend.c ****     }
 13536              		.loc 1 901 9 is_stmt 1 view .LVU4676
 13537              	# sieve_extend.c:901:         start = prime * prime * 2 + prime * 2;
 901:sieve_extend.c ****     }
 13538              		.loc 1 901 35 is_stmt 0 view .LVU4677
 13539 4c20 488D7101 		lea	rsi, 1[rcx]	# _411,
 13540              	# sieve_extend.c:901:         start = prime * prime * 2 + prime * 2;
 901:sieve_extend.c ****     }
 13541              		.loc 1 901 15 view .LVU4678
 13542 4c24 480FAFF1 		imul	rsi, rcx	# tmp702, index
 13543              	.LVL731:
 901:sieve_extend.c ****     }
 13544              		.loc 1 901 15 view .LVU4679
 13545 4c28 4801F6   		add	rsi, rsi	# index
 13546              	.LVL732:
 895:sieve_extend.c ****         step  = prime * 2 + 1;
 13547              		.loc 1 895 11 is_stmt 1 view .LVU4680
 13548 4c2b 4939F4   		cmp	r12, rsi	# block_stop, index
 13549 4c2e 0F836CFC 		jnb	.L942	#,
 13549      FFFF
 13550              	.LVL733:
 13551              	.L1482:
 895:sieve_extend.c ****         step  = prime * 2 + 1;
 13552              		.loc 1 895 11 is_stmt 0 view .LVU4681
 13553 4c34 488B5C24 		mov	rbx, QWORD PTR 48[rsp]	# <retval>, %sfp
 13553      30
 13554              	.LVL734:
 895:sieve_extend.c ****         step  = prime * 2 + 1;
 13555              		.loc 1 895 11 view .LVU4682
 13556 4c39 488B5308 		mov	rdx, QWORD PTR 8[rbx]	# _8, sieve_92->bits
 13557              	.L931:
 13558              	.LVL735:
 895:sieve_extend.c ****         step  = prime * 2 + 1;
 13559              		.loc 1 895 11 view .LVU4683
 13560              	.LBE694:
 13561              	.LBE705:
1020:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 13562              		.loc 1 1020 91 is_stmt 1 view .LVU4684
 13563              	# sieve_extend.c:1020:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <=
1020:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 13564              		.loc 1 1020 103 is_stmt 0 view .LVU4685
 13565 4c3d 488B6C24 		mov	rbp, QWORD PTR 64[rsp]	# blocksize, %sfp
GAS LISTING /tmp/cc64mrzX.s 			page 366


 13565      40
 13566 4c42 4901EF   		add	r15, rbp	# block_start, blocksize
 13567              	.LVL736:
 13568              	# sieve_extend.c:1020:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <=
1020:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 13569              		.loc 1 1020 128 view .LVU4686
 13570 4c45 4901EC   		add	r12, rbp	# block_stop, blocksize
 13571              	.LVL737:
1020:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 13572              		.loc 1 1020 63 is_stmt 1 view .LVU4687
 13573              	# sieve_extend.c:1020:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <=
1020:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 13574              		.loc 1 1020 5 is_stmt 0 view .LVU4688
 13575 4c48 4C39FA   		cmp	rdx, r15	# _8, block_start
 13576 4c4b 0F838FF9 		jnb	.L927	#,
 13576      FFFF
 13577              	.LBE709:
 13578              	# sieve_extend.c:1027: }
1027:sieve_extend.c **** 
 13579              		.loc 1 1027 1 view .LVU4689
 13580 4c51 488B4424 		mov	rax, QWORD PTR 48[rsp]	#, %sfp
 13580      30
 13581 4c56 488D6424 		lea	rsp, 104[rsp]	#,
 13581      68
 13582              		.cfi_remember_state
 13583              		.cfi_def_cfa_offset 56
 13584 4c5b 5B       		pop	rbx	#
 13585              		.cfi_def_cfa_offset 48
 13586 4c5c 5D       		pop	rbp	#
 13587              		.cfi_def_cfa_offset 40
 13588 4c5d 415C     		pop	r12	#
 13589              		.cfi_def_cfa_offset 32
 13590              	.LVL738:
1027:sieve_extend.c **** 
 13591              		.loc 1 1027 1 view .LVU4690
 13592 4c5f 415D     		pop	r13	#
 13593              		.cfi_def_cfa_offset 24
 13594 4c61 415E     		pop	r14	#
 13595              		.cfi_def_cfa_offset 16
 13596 4c63 415F     		pop	r15	#
 13597              		.cfi_def_cfa_offset 8
 13598              	.LVL739:
1027:sieve_extend.c **** 
 13599              		.loc 1 1027 1 view .LVU4691
 13600 4c65 C3       		ret	
 13601              	.LVL740:
 13602              		.p2align 4,,7
 13603 4c66 6690     		.p2align 3
 13604              	.L1500:
 13605              		.cfi_restore_state
 13606              	.LBB710:
 13607              	.LBB706:
 13608              	.LBB695:
 13609              	.LBB631:
 13610              	.LBB622:
 247:sieve_extend.c ****         //  debug if (step==13) { printf("After\n"); dump_bitarray(bitarray,10); }
 13611              		.loc 1 247 8 is_stmt 1 view .LVU4692
GAS LISTING /tmp/cc64mrzX.s 			page 367


 13612              	# sieve_extend.c:247:        bitarray[range_start_word] |= (pattern << bitindex(range_start)) & cho
 247:sieve_extend.c ****         //  debug if (step==13) { printf("After\n"); dump_bitarray(bitarray,10); }
 13613              		.loc 1 247 73 is_stmt 0 view .LVU4693
 13614 4c68 4C234C24 		and	r9, QWORD PTR 8[rsp]	# tmp671, %sfp
 13614      08
 13615              	# sieve_extend.c:247:        bitarray[range_start_word] |= (pattern << bitindex(range_start)) & cho
 247:sieve_extend.c ****         //  debug if (step==13) { printf("After\n"); dump_bitarray(bitarray,10); }
 13616              		.loc 1 247 35 view .LVU4694
 13617 4c6d 4D09E9   		or	r9, r13	# tmp672, pretmp_1282
 13618 4c70 4D890B   		mov	QWORD PTR [r11], r9	# *_1281, tmp672
 249:sieve_extend.c ****     }
 13619              		.loc 1 249 8 is_stmt 1 view .LVU4695
 13620 4c73 E9D1FEFF 		jmp	.L936	#
 13620      FF
 13621              	.LVL741:
 13622              		.p2align 4,,7
 13623              		.p2align 3
 13624              	.L1499:
 249:sieve_extend.c ****     }
 13625              		.loc 1 249 8 is_stmt 0 view .LVU4696
 13626              	.LBE622:
 13627              	.LBE631:
 904:sieve_extend.c ****         step  = prime * 2 + 1;
 13628              		.loc 1 904 11 is_stmt 1 view .LVU4697
 13629 4c78 4939F4   		cmp	r12, rsi	# block_stop, index
 13630 4c7b 72B7     		jb	.L1482	#,
 904:sieve_extend.c ****         step  = prime * 2 + 1;
 13631              		.loc 1 904 11 is_stmt 0 view .LVU4698
 13632 4c7d 4C897C24 		mov	QWORD PTR 24[rsp], r15	# %sfp, block_start
 13632      18
 13633              	.LBB632:
 13634              	.LBB633:
 13635              	.LBB634:
 13636              	.LBB635:
 13637              	.LBB636:
 13638              	.LBB637:
 13639              	# sieve_extend.c:308:                 mask |= markmask(index);
 308:sieve_extend.c ****                 index += step;
 13640              		.loc 1 308 25 view .LVU4699
 13641 4c82 41BA0100 		mov	r10d, 1	# tmp830,
 13641      0000
 13642              	.LVL742:
 13643 4c88 0F1F8400 		.p2align 4
 13643      00000000 
 13644              		.p2align 3
 13645              	.L930:
 308:sieve_extend.c ****                 index += step;
 13646              		.loc 1 308 25 view .LVU4700
 13647              	.LBE637:
 13648              	.LBE636:
 13649              	.LBE635:
 13650              	.LBE634:
 13651              	.LBE633:
 13652              	.LBE632:
 905:sieve_extend.c ****         if unlikely(step > MEDIUMSTEP_FASTER) break;
 13653              		.loc 1 905 9 is_stmt 1 view .LVU4701
 13654              	# sieve_extend.c:905:         step  = prime * 2 + 1;
GAS LISTING /tmp/cc64mrzX.s 			page 368


 905:sieve_extend.c ****         if unlikely(step > MEDIUMSTEP_FASTER) break;
 13655              		.loc 1 905 15 is_stmt 0 view .LVU4702
 13656 4c90 4C8D4409 		lea	r8, 1[rcx+rcx]	# step,
 13656      01
 13657              	.LVL743:
 906:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 13658              		.loc 1 906 9 is_stmt 1 view .LVU4703
 13659              	# sieve_extend.c:906:         if unlikely(step > MEDIUMSTEP_FASTER) break;
 906:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 13660              		.loc 1 906 12 is_stmt 0 view .LVU4704
 13661 4c95 4C3B0500 		cmp	r8, QWORD PTR global_MEDIUMSTEP_FASTER[rip]	# step, global_MEDIUMSTEP_FASTER
 13661      000000
 13662 4c9c 0F87D604 		ja	.L1501	#,
 13662      0000
 907:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 13663              		.loc 1 907 9 is_stmt 1 view .LVU4705
 13664              	# sieve_extend.c:907:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 907:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 13665              		.loc 1 907 12 is_stmt 0 view .LVU4706
 13666 4ca2 488B4424 		mov	rax, QWORD PTR 24[rsp]	# block_start, %sfp
 13666      18
 13667 4ca7 4C8D6901 		lea	r13, 1[rcx]	# _333,
 13668 4cab 4939C5   		cmp	r13, rax	# _333, block_start
 13669 4cae 770F     		ja	.L945	#,
 907:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 13670              		.loc 1 907 47 is_stmt 1 view .LVU4707
 13671              	# sieve_extend.c:907:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 907:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 13672              		.loc 1 907 67 is_stmt 0 view .LVU4708
 13673 4cb0 4801C8   		add	rax, rcx	# _337, index
 13674              	# sieve_extend.c:907:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 907:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 13675              		.loc 1 907 108 view .LVU4709
 13676 4cb3 31D2     		xor	edx, edx	# tmp706
 13677              	# sieve_extend.c:907:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 907:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 13678              		.loc 1 907 75 view .LVU4710
 13679 4cb5 488D3408 		lea	rsi, [rax+rcx]	# tmp704,
 13680              	.LVL744:
 13681              	# sieve_extend.c:907:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 907:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 13682              		.loc 1 907 108 view .LVU4711
 13683 4cb9 49F7F0   		div	r8	# step
 13684              	.LVL745:
 13685              	# sieve_extend.c:907:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 907:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 13686              		.loc 1 907 53 view .LVU4712
 13687 4cbc 4829D6   		sub	rsi, rdx	# index, tmp706
 13688              	.LVL746:
 13689              	.L945:
 908:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1 );
 13690              		.loc 1 908 9 is_stmt 1 view .LVU4713
 13691              	.LBB654:
 13692              	.LBI632:
 296:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 13693              		.loc 1 296 14 view .LVU4714
 13694              	.LBB652:
GAS LISTING /tmp/cc64mrzX.s 			page 369


 297:sieve_extend.c **** 
 13695              		.loc 1 297 5 view .LVU4715
 13696              	# sieve_extend.c:297:     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * st
 297:sieve_extend.c **** 
 13697              		.loc 1 297 74 is_stmt 0 view .LVU4716
 13698 4cbf 4D89C6   		mov	r14, r8	# tmp708, step
 13699 4cc2 4531FF   		xor	r15d, r15d	# _675
 13700 4cc5 49C1E606 		sal	r14, 6	# tmp708,
 13701 4cc9 4901F6   		add	r14, rsi	# tmp709, index
 13702 4ccc 410F92C7 		setc	r15b	#, _675
 13703              	.LVL747:
 299:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-unique (%ju
 13704              		.loc 1 299 5 is_stmt 1 view .LVU4717
 13705              	# sieve_extend.c:299:     if (range_stop_unique > range_stop) { // the range will not repeat itself
 299:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-unique (%ju
 13706              		.loc 1 299 8 is_stmt 0 view .LVU4718
 13707 4cd0 4D39F4   		cmp	r12, r14	# block_stop, tmp709
 13708 4cd3 0F829F03 		jb	.L948	#,
 13708      0000
 13709              	.LVL748:
 13710              	.LBB641:
 320:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 13711              		.loc 1 320 54 is_stmt 1 view .LVU4719
 13712              	# sieve_extend.c:320:         for (register counter_t index = range_start; index <= range_stop_uniq
 320:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 13713              		.loc 1 320 9 is_stmt 0 view .LVU4720
 13714 4cd9 4D85FF   		test	r15, r15	# _675
 13715 4cdc 0F858002 		jne	.L952	#,
 13715      0000
 13716              	.LBB642:
 13717              	.LBB643:
 13718              	.LBB644:
 13719              	# sieve_extend.c:176:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 176:sieve_extend.c **** 
 13720              		.loc 1 176 133 view .LVU4721
 13721 4ce2 488B7C24 		mov	rdi, QWORD PTR 16[rsp]	# range_stop_word, %sfp
 13721      10
 13722              	# sieve_extend.c:176:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 176:sieve_extend.c **** 
 13723              		.loc 1 176 110 view .LVU4722
 13724 4ce7 4F8D0C80 		lea	r9, [r8+r8*4]	# tmp722,
 13725 4ceb 4D89C7   		mov	r15, r8	# _1391, step
 13726              	# sieve_extend.c:182:        index_ptr+=step;
 182:sieve_extend.c ****        *index_ptr |= mask;
 13727              		.loc 1 182 17 view .LVU4723
 13728 4cee 4A8D0CC5 		lea	rcx, 0[0+r8*8]	# _543,
 13728      00000000 
 13729              	# sieve_extend.c:176:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 176:sieve_extend.c **** 
 13730              		.loc 1 176 133 view .LVU4724
 13731 4cf6 4989FB   		mov	r11, rdi	# tmp724, range_stop_word
 13732 4cf9 4D29CB   		sub	r11, r9	# tmp724, tmp722
 13733 4cfc 4C39CF   		cmp	rdi, r9	# range_stop_word, tmp722
 13734 4cff 4E8D1CDB 		lea	r11, [rbx+r11*8]	# tmp726,
 13735 4d03 4C0F46DB 		cmovbe	r11, rbx	# _30,, fast_loop_ptr
 13736 4d07 49C1E103 		sal	r9, 3	# tmp730,
 13737 4d0b 49C1E704 		sal	r15, 4	# _1391,
GAS LISTING /tmp/cc64mrzX.s 			page 370


 13738              	.LVL749:
 13739 4d0f 90       		.p2align 4
 13740              		.p2align 3
 13741              	.L961:
 176:sieve_extend.c **** 
 13742              		.loc 1 176 133 view .LVU4725
 13743              	.LBE644:
 13744              	.LBE643:
 321:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 13745              		.loc 1 321 13 is_stmt 1 view .LVU4726
 13746              	# sieve_extend.c:321:             register counter_t index_word = wordindex(index);
 321:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 13747              		.loc 1 321 32 is_stmt 0 view .LVU4727
 13748 4d10 4889F0   		mov	rax, rsi	# index_word, index
 13749              	# sieve_extend.c:322:             register bitword_t mask = SAFE_ZERO;
 322:sieve_extend.c ****             #pragma ivdep
 13750              		.loc 1 322 32 view .LVU4728
 13751 4d13 31D2     		xor	edx, edx	# mask
 13752              	# sieve_extend.c:321:             register counter_t index_word = wordindex(index);
 321:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 13753              		.loc 1 321 32 view .LVU4729
 13754 4d15 48C1E806 		shr	rax, 6	# index_word,
 13755              	.LVL750:
 322:sieve_extend.c ****             #pragma ivdep
 13756              		.loc 1 322 13 is_stmt 1 view .LVU4730
 13757              	.L955:
 324:sieve_extend.c ****                 mask |= markmask(index);
 13758              		.loc 1 324 13 view .LVU4731
 325:sieve_extend.c ****                 index += step;
 13759              		.loc 1 325 17 view .LVU4732
 13760              	# sieve_extend.c:325:                 mask |= markmask(index);
 325:sieve_extend.c ****                 index += step;
 13761              		.loc 1 325 25 is_stmt 0 view .LVU4733
 13762 4d19 C4C2C9F7 		shlx	rdi, r10, rsi	# tmp732, tmp830, index
 13762      FA
 13763              	# sieve_extend.c:326:                 index += step;
 326:sieve_extend.c ****             } while (index_word == wordindex(index));
 13764              		.loc 1 326 23 view .LVU4734
 13765 4d1e 4C01C6   		add	rsi, r8	# index, step
 13766              	# sieve_extend.c:325:                 mask |= markmask(index);
 325:sieve_extend.c ****                 index += step;
 13767              		.loc 1 325 22 view .LVU4735
 13768 4d21 4809FA   		or	rdx, rdi	# mask, tmp732
 13769              	.LVL751:
 326:sieve_extend.c ****             } while (index_word == wordindex(index));
 13770              		.loc 1 326 17 is_stmt 1 view .LVU4736
 327:sieve_extend.c ****             // #pragma ivdep
 13771              		.loc 1 327 21 view .LVU4737
 13772              	# sieve_extend.c:327:             } while (index_word == wordindex(index));
 327:sieve_extend.c ****             // #pragma ivdep
 13773              		.loc 1 327 36 is_stmt 0 view .LVU4738
 13774 4d24 4889F7   		mov	rdi, rsi	# tmp734, index
 13775 4d27 48C1EF06 		shr	rdi, 6	# tmp734,
 13776              	# sieve_extend.c:327:             } while (index_word == wordindex(index));
 327:sieve_extend.c ****             // #pragma ivdep
 13777              		.loc 1 327 13 view .LVU4739
 13778 4d2b 4839F8   		cmp	rax, rdi	# index_word, tmp734
GAS LISTING /tmp/cc64mrzX.s 			page 371


 13779 4d2e 0F85AC00 		jne	.L1349	#,
 13779      0000
 324:sieve_extend.c ****                 mask |= markmask(index);
 13780              		.loc 1 324 13 is_stmt 1 view .LVU4740
 325:sieve_extend.c ****                 index += step;
 13781              		.loc 1 325 17 view .LVU4741
 13782              	# sieve_extend.c:325:                 mask |= markmask(index);
 325:sieve_extend.c ****                 index += step;
 13783              		.loc 1 325 25 is_stmt 0 view .LVU4742
 13784 4d34 C4C2C9F7 		shlx	rdi, r10, rsi	# tmp1042, tmp830, index
 13784      FA
 13785              	# sieve_extend.c:326:                 index += step;
 326:sieve_extend.c ****             } while (index_word == wordindex(index));
 13786              		.loc 1 326 23 view .LVU4743
 13787 4d39 4C01C6   		add	rsi, r8	# index, step
 13788              	# sieve_extend.c:325:                 mask |= markmask(index);
 325:sieve_extend.c ****                 index += step;
 13789              		.loc 1 325 22 view .LVU4744
 13790 4d3c 4809FA   		or	rdx, rdi	# mask, tmp1042
 13791              	.LVL752:
 326:sieve_extend.c ****             } while (index_word == wordindex(index));
 13792              		.loc 1 326 17 is_stmt 1 view .LVU4745
 327:sieve_extend.c ****             // #pragma ivdep
 13793              		.loc 1 327 21 view .LVU4746
 13794              	# sieve_extend.c:327:             } while (index_word == wordindex(index));
 327:sieve_extend.c ****             // #pragma ivdep
 13795              		.loc 1 327 36 is_stmt 0 view .LVU4747
 13796 4d3f 4889F7   		mov	rdi, rsi	# tmp1043, index
 13797 4d42 48C1EF06 		shr	rdi, 6	# tmp1043,
 13798              	# sieve_extend.c:327:             } while (index_word == wordindex(index));
 327:sieve_extend.c ****             // #pragma ivdep
 13799              		.loc 1 327 13 view .LVU4748
 13800 4d46 4839F8   		cmp	rax, rdi	# index_word, tmp1043
 13801 4d49 0F859100 		jne	.L1349	#,
 13801      0000
 324:sieve_extend.c ****                 mask |= markmask(index);
 13802              		.loc 1 324 13 is_stmt 1 view .LVU4749
 325:sieve_extend.c ****                 index += step;
 13803              		.loc 1 325 17 view .LVU4750
 13804              	# sieve_extend.c:325:                 mask |= markmask(index);
 325:sieve_extend.c ****                 index += step;
 13805              		.loc 1 325 25 is_stmt 0 view .LVU4751
 13806 4d4f C4C2C9F7 		shlx	rdi, r10, rsi	# tmp1044, tmp830, index
 13806      FA
 13807              	# sieve_extend.c:326:                 index += step;
 326:sieve_extend.c ****             } while (index_word == wordindex(index));
 13808              		.loc 1 326 23 view .LVU4752
 13809 4d54 4C01C6   		add	rsi, r8	# index, step
 13810              	# sieve_extend.c:325:                 mask |= markmask(index);
 325:sieve_extend.c ****                 index += step;
 13811              		.loc 1 325 22 view .LVU4753
 13812 4d57 4809FA   		or	rdx, rdi	# mask, tmp1044
 13813              	.LVL753:
 326:sieve_extend.c ****             } while (index_word == wordindex(index));
 13814              		.loc 1 326 17 is_stmt 1 view .LVU4754
 327:sieve_extend.c ****             // #pragma ivdep
 13815              		.loc 1 327 21 view .LVU4755
GAS LISTING /tmp/cc64mrzX.s 			page 372


 13816              	# sieve_extend.c:327:             } while (index_word == wordindex(index));
 327:sieve_extend.c ****             // #pragma ivdep
 13817              		.loc 1 327 36 is_stmt 0 view .LVU4756
 13818 4d5a 4889F7   		mov	rdi, rsi	# tmp1045, index
 13819 4d5d 48C1EF06 		shr	rdi, 6	# tmp1045,
 13820              	# sieve_extend.c:327:             } while (index_word == wordindex(index));
 327:sieve_extend.c ****             // #pragma ivdep
 13821              		.loc 1 327 13 view .LVU4757
 13822 4d61 4839F8   		cmp	rax, rdi	# index_word, tmp1045
 13823 4d64 757A     		jne	.L1349	#,
 324:sieve_extend.c ****                 mask |= markmask(index);
 13824              		.loc 1 324 13 is_stmt 1 view .LVU4758
 325:sieve_extend.c ****                 index += step;
 13825              		.loc 1 325 17 view .LVU4759
 13826              	# sieve_extend.c:325:                 mask |= markmask(index);
 325:sieve_extend.c ****                 index += step;
 13827              		.loc 1 325 25 is_stmt 0 view .LVU4760
 13828 4d66 C4C2C9F7 		shlx	rdi, r10, rsi	# tmp1046, tmp830, index
 13828      FA
 13829              	# sieve_extend.c:326:                 index += step;
 326:sieve_extend.c ****             } while (index_word == wordindex(index));
 13830              		.loc 1 326 23 view .LVU4761
 13831 4d6b 4C01C6   		add	rsi, r8	# index, step
 13832              	# sieve_extend.c:325:                 mask |= markmask(index);
 325:sieve_extend.c ****                 index += step;
 13833              		.loc 1 325 22 view .LVU4762
 13834 4d6e 4809FA   		or	rdx, rdi	# mask, tmp1046
 13835              	.LVL754:
 326:sieve_extend.c ****             } while (index_word == wordindex(index));
 13836              		.loc 1 326 17 is_stmt 1 view .LVU4763
 327:sieve_extend.c ****             // #pragma ivdep
 13837              		.loc 1 327 21 view .LVU4764
 13838              	# sieve_extend.c:327:             } while (index_word == wordindex(index));
 327:sieve_extend.c ****             // #pragma ivdep
 13839              		.loc 1 327 36 is_stmt 0 view .LVU4765
 13840 4d71 4889F7   		mov	rdi, rsi	# tmp1047, index
 13841 4d74 48C1EF06 		shr	rdi, 6	# tmp1047,
 13842              	# sieve_extend.c:327:             } while (index_word == wordindex(index));
 327:sieve_extend.c ****             // #pragma ivdep
 13843              		.loc 1 327 13 view .LVU4766
 13844 4d78 4839F8   		cmp	rax, rdi	# index_word, tmp1047
 13845 4d7b 7563     		jne	.L1349	#,
 324:sieve_extend.c ****                 mask |= markmask(index);
 13846              		.loc 1 324 13 is_stmt 1 view .LVU4767
 325:sieve_extend.c ****                 index += step;
 13847              		.loc 1 325 17 view .LVU4768
 13848              	# sieve_extend.c:325:                 mask |= markmask(index);
 325:sieve_extend.c ****                 index += step;
 13849              		.loc 1 325 25 is_stmt 0 view .LVU4769
 13850 4d7d C4C2C9F7 		shlx	rdi, r10, rsi	# tmp1048, tmp830, index
 13850      FA
 13851              	# sieve_extend.c:326:                 index += step;
 326:sieve_extend.c ****             } while (index_word == wordindex(index));
 13852              		.loc 1 326 23 view .LVU4770
 13853 4d82 4C01C6   		add	rsi, r8	# index, step
 13854              	# sieve_extend.c:325:                 mask |= markmask(index);
 325:sieve_extend.c ****                 index += step;
GAS LISTING /tmp/cc64mrzX.s 			page 373


 13855              		.loc 1 325 22 view .LVU4771
 13856 4d85 4809FA   		or	rdx, rdi	# mask, tmp1048
 13857              	.LVL755:
 326:sieve_extend.c ****             } while (index_word == wordindex(index));
 13858              		.loc 1 326 17 is_stmt 1 view .LVU4772
 327:sieve_extend.c ****             // #pragma ivdep
 13859              		.loc 1 327 21 view .LVU4773
 13860              	# sieve_extend.c:327:             } while (index_word == wordindex(index));
 327:sieve_extend.c ****             // #pragma ivdep
 13861              		.loc 1 327 36 is_stmt 0 view .LVU4774
 13862 4d88 4889F7   		mov	rdi, rsi	# tmp1049, index
 13863 4d8b 48C1EF06 		shr	rdi, 6	# tmp1049,
 13864              	# sieve_extend.c:327:             } while (index_word == wordindex(index));
 327:sieve_extend.c ****             // #pragma ivdep
 13865              		.loc 1 327 13 view .LVU4775
 13866 4d8f 4839F8   		cmp	rax, rdi	# index_word, tmp1049
 13867 4d92 754C     		jne	.L1349	#,
 324:sieve_extend.c ****                 mask |= markmask(index);
 13868              		.loc 1 324 13 is_stmt 1 view .LVU4776
 325:sieve_extend.c ****                 index += step;
 13869              		.loc 1 325 17 view .LVU4777
 13870              	# sieve_extend.c:325:                 mask |= markmask(index);
 325:sieve_extend.c ****                 index += step;
 13871              		.loc 1 325 25 is_stmt 0 view .LVU4778
 13872 4d94 C4C2C9F7 		shlx	rdi, r10, rsi	# tmp1050, tmp830, index
 13872      FA
 13873              	# sieve_extend.c:326:                 index += step;
 326:sieve_extend.c ****             } while (index_word == wordindex(index));
 13874              		.loc 1 326 23 view .LVU4779
 13875 4d99 4C01C6   		add	rsi, r8	# index, step
 13876              	# sieve_extend.c:325:                 mask |= markmask(index);
 325:sieve_extend.c ****                 index += step;
 13877              		.loc 1 325 22 view .LVU4780
 13878 4d9c 4809FA   		or	rdx, rdi	# mask, tmp1050
 13879              	.LVL756:
 326:sieve_extend.c ****             } while (index_word == wordindex(index));
 13880              		.loc 1 326 17 is_stmt 1 view .LVU4781
 327:sieve_extend.c ****             // #pragma ivdep
 13881              		.loc 1 327 21 view .LVU4782
 13882              	# sieve_extend.c:327:             } while (index_word == wordindex(index));
 327:sieve_extend.c ****             // #pragma ivdep
 13883              		.loc 1 327 36 is_stmt 0 view .LVU4783
 13884 4d9f 4889F7   		mov	rdi, rsi	# tmp1051, index
 13885 4da2 48C1EF06 		shr	rdi, 6	# tmp1051,
 13886              	# sieve_extend.c:327:             } while (index_word == wordindex(index));
 327:sieve_extend.c ****             // #pragma ivdep
 13887              		.loc 1 327 13 view .LVU4784
 13888 4da6 4839F8   		cmp	rax, rdi	# index_word, tmp1051
 13889 4da9 7535     		jne	.L1349	#,
 324:sieve_extend.c ****                 mask |= markmask(index);
 13890              		.loc 1 324 13 is_stmt 1 view .LVU4785
 325:sieve_extend.c ****                 index += step;
 13891              		.loc 1 325 17 view .LVU4786
 13892              	# sieve_extend.c:325:                 mask |= markmask(index);
 325:sieve_extend.c ****                 index += step;
 13893              		.loc 1 325 25 is_stmt 0 view .LVU4787
 13894 4dab C4C2C9F7 		shlx	rdi, r10, rsi	# tmp1052, tmp830, index
GAS LISTING /tmp/cc64mrzX.s 			page 374


 13894      FA
 13895              	# sieve_extend.c:326:                 index += step;
 326:sieve_extend.c ****             } while (index_word == wordindex(index));
 13896              		.loc 1 326 23 view .LVU4788
 13897 4db0 4C01C6   		add	rsi, r8	# index, step
 13898              	# sieve_extend.c:325:                 mask |= markmask(index);
 325:sieve_extend.c ****                 index += step;
 13899              		.loc 1 325 22 view .LVU4789
 13900 4db3 4809FA   		or	rdx, rdi	# mask, tmp1052
 13901              	.LVL757:
 326:sieve_extend.c ****             } while (index_word == wordindex(index));
 13902              		.loc 1 326 17 is_stmt 1 view .LVU4790
 327:sieve_extend.c ****             // #pragma ivdep
 13903              		.loc 1 327 21 view .LVU4791
 13904              	# sieve_extend.c:327:             } while (index_word == wordindex(index));
 327:sieve_extend.c ****             // #pragma ivdep
 13905              		.loc 1 327 36 is_stmt 0 view .LVU4792
 13906 4db6 4889F7   		mov	rdi, rsi	# tmp1053, index
 13907 4db9 48C1EF06 		shr	rdi, 6	# tmp1053,
 13908              	# sieve_extend.c:327:             } while (index_word == wordindex(index));
 327:sieve_extend.c ****             // #pragma ivdep
 13909              		.loc 1 327 13 view .LVU4793
 13910 4dbd 4839F8   		cmp	rax, rdi	# index_word, tmp1053
 13911 4dc0 751E     		jne	.L1349	#,
 324:sieve_extend.c ****                 mask |= markmask(index);
 13912              		.loc 1 324 13 is_stmt 1 view .LVU4794
 325:sieve_extend.c ****                 index += step;
 13913              		.loc 1 325 17 view .LVU4795
 13914              	# sieve_extend.c:325:                 mask |= markmask(index);
 325:sieve_extend.c ****                 index += step;
 13915              		.loc 1 325 25 is_stmt 0 view .LVU4796
 13916 4dc2 C4C2C9F7 		shlx	rdi, r10, rsi	# tmp1054, tmp830, index
 13916      FA
 13917              	# sieve_extend.c:326:                 index += step;
 326:sieve_extend.c ****             } while (index_word == wordindex(index));
 13918              		.loc 1 326 23 view .LVU4797
 13919 4dc7 4C01C6   		add	rsi, r8	# index, step
 13920              	# sieve_extend.c:325:                 mask |= markmask(index);
 325:sieve_extend.c ****                 index += step;
 13921              		.loc 1 325 22 view .LVU4798
 13922 4dca 4809FA   		or	rdx, rdi	# mask, tmp1054
 13923              	.LVL758:
 326:sieve_extend.c ****             } while (index_word == wordindex(index));
 13924              		.loc 1 326 17 is_stmt 1 view .LVU4799
 327:sieve_extend.c ****             // #pragma ivdep
 13925              		.loc 1 327 21 view .LVU4800
 13926              	# sieve_extend.c:327:             } while (index_word == wordindex(index));
 327:sieve_extend.c ****             // #pragma ivdep
 13927              		.loc 1 327 36 is_stmt 0 view .LVU4801
 13928 4dcd 4889F7   		mov	rdi, rsi	# tmp1055, index
 13929 4dd0 48C1EF06 		shr	rdi, 6	# tmp1055,
 13930              	# sieve_extend.c:327:             } while (index_word == wordindex(index));
 327:sieve_extend.c ****             // #pragma ivdep
 13931              		.loc 1 327 13 view .LVU4802
 13932 4dd4 4839F8   		cmp	rax, rdi	# index_word, tmp1055
 13933 4dd7 0F843CFF 		je	.L955	#,
 13933      FFFF
GAS LISTING /tmp/cc64mrzX.s 			page 375


 13934 4ddd 0F1F00   		.p2align 4
 13935              		.p2align 3
 13936              	.L1349:
 331:sieve_extend.c ****         }
 13937              		.loc 1 331 13 is_stmt 1 view .LVU4803
 13938              	.LVL759:
 13939              	.LBB647:
 13940              	.LBI643:
 146:sieve_extend.c **** //#if __APPLE__
 13941              		.loc 1 146 20 view .LVU4804
 13942              	.LBB645:
 174:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 13943              		.loc 1 174 4 view .LVU4805
 175:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 13944              		.loc 1 175 4 view .LVU4806
 13945              	# sieve_extend.c:175:    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(
 175:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 13946              		.loc 1 175 78 is_stmt 0 view .LVU4807
 13947 4de0 488D04C3 		lea	rax, [rbx+rax*8]	# index_ptr,
 13948              	.LVL760:
 176:sieve_extend.c **** 
 13949              		.loc 1 176 4 is_stmt 1 view .LVU4808
 180:sieve_extend.c ****        *index_ptr |= mask;
 13950              		.loc 1 180 4 view .LVU4809
 180:sieve_extend.c ****        *index_ptr |= mask;
 13951              		.loc 1 180 10 view .LVU4810
 13952 4de4 4C39D8   		cmp	rax, r11	# index_ptr, fast_loop_ptr
 13953 4de7 0F830301 		jnb	.L956	#,
 13953      0000
 180:sieve_extend.c ****        *index_ptr |= mask;
 13954              		.loc 1 180 10 is_stmt 0 view .LVU4811
 13955 4ded 4A8D3C38 		lea	rdi, [rax+r15]	# ivtmp.594,
 13956              	.L957:
 181:sieve_extend.c ****        index_ptr+=step;
 13957              		.loc 1 181 8 is_stmt 1 view .LVU4812
 13958              	# sieve_extend.c:181:        *index_ptr |= mask;
 181:sieve_extend.c ****        index_ptr+=step;
 13959              		.loc 1 181 19 is_stmt 0 view .LVU4813
 13960 4df1 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_865, offset: 0B], mask
 182:sieve_extend.c ****        *index_ptr |= mask;
 13961              		.loc 1 182 8 is_stmt 1 view .LVU4814
 13962              	.LVL761:
 183:sieve_extend.c ****        index_ptr+=step;
 13963              		.loc 1 183 8 view .LVU4815
 13964              	# sieve_extend.c:183:        *index_ptr |= mask;
 183:sieve_extend.c ****        index_ptr+=step;
 13965              		.loc 1 183 19 is_stmt 0 view .LVU4816
 13966 4df4 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_865, index: _543, offset: 0B], mask
 184:sieve_extend.c ****        *index_ptr |= mask;
 13967              		.loc 1 184 8 is_stmt 1 view .LVU4817
 13968              	.LVL762:
 185:sieve_extend.c ****        index_ptr+=step;
 13969              		.loc 1 185 8 view .LVU4818
 13970              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 13971              		.loc 1 185 19 is_stmt 0 view .LVU4819
 13972 4df8 480917   		or	QWORD PTR [rdi], rdx	# MEM[base: _1385, offset: 0B], mask
GAS LISTING /tmp/cc64mrzX.s 			page 376


 186:sieve_extend.c ****        *index_ptr |= mask;
 13973              		.loc 1 186 8 is_stmt 1 view .LVU4820
 13974              	.LVL763:
 187:sieve_extend.c ****        index_ptr+=step;
 13975              		.loc 1 187 8 view .LVU4821
 13976              	# sieve_extend.c:187:        *index_ptr |= mask;
 187:sieve_extend.c ****        index_ptr+=step;
 13977              		.loc 1 187 19 is_stmt 0 view .LVU4822
 13978 4dfb 4809140F 		or	QWORD PTR [rdi+rcx], rdx	# MEM[base: _1385, index: _543, offset: 0B], mask
 188:sieve_extend.c ****        *index_ptr |= mask;
 13979              		.loc 1 188 8 is_stmt 1 view .LVU4823
 13980              	.LVL764:
 189:sieve_extend.c ****        index_ptr+=step;
 13981              		.loc 1 189 8 view .LVU4824
 13982 4dff 4C01CF   		add	rdi, r9	# ivtmp.594, tmp730
 13983              	# sieve_extend.c:189:        *index_ptr |= mask;
 189:sieve_extend.c ****        index_ptr+=step;
 13984              		.loc 1 189 19 is_stmt 0 view .LVU4825
 13985 4e02 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_865, index: _543, step: 4, offset: 0B], mask
 190:sieve_extend.c ****    }
 13986              		.loc 1 190 8 is_stmt 1 view .LVU4826
 13987 4e06 4C01C8   		add	rax, r9	# index_ptr, tmp730
 13988              	.LVL765:
 180:sieve_extend.c ****        *index_ptr |= mask;
 13989              		.loc 1 180 10 view .LVU4827
 13990 4e09 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 13991 4e0c 0F86DE00 		jbe	.L956	#,
 13991      0000
 181:sieve_extend.c ****        index_ptr+=step;
 13992              		.loc 1 181 8 view .LVU4828
 13993              	# sieve_extend.c:181:        *index_ptr |= mask;
 181:sieve_extend.c ****        index_ptr+=step;
 13994              		.loc 1 181 19 is_stmt 0 view .LVU4829
 13995 4e12 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_865, offset: 0B], mask
 182:sieve_extend.c ****        *index_ptr |= mask;
 13996              		.loc 1 182 8 is_stmt 1 view .LVU4830
 13997              	.LVL766:
 183:sieve_extend.c ****        index_ptr+=step;
 13998              		.loc 1 183 8 view .LVU4831
 13999              	# sieve_extend.c:183:        *index_ptr |= mask;
 183:sieve_extend.c ****        index_ptr+=step;
 14000              		.loc 1 183 19 is_stmt 0 view .LVU4832
 14001 4e15 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_865, index: _543, offset: 0B], mask
 184:sieve_extend.c ****        *index_ptr |= mask;
 14002              		.loc 1 184 8 is_stmt 1 view .LVU4833
 14003              	.LVL767:
 185:sieve_extend.c ****        index_ptr+=step;
 14004              		.loc 1 185 8 view .LVU4834
 14005              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 14006              		.loc 1 185 19 is_stmt 0 view .LVU4835
 14007 4e19 480917   		or	QWORD PTR [rdi], rdx	# MEM[base: _1385, offset: 0B], mask
 186:sieve_extend.c ****        *index_ptr |= mask;
 14008              		.loc 1 186 8 is_stmt 1 view .LVU4836
 14009              	.LVL768:
 187:sieve_extend.c ****        index_ptr+=step;
 14010              		.loc 1 187 8 view .LVU4837
GAS LISTING /tmp/cc64mrzX.s 			page 377


 14011              	# sieve_extend.c:187:        *index_ptr |= mask;
 187:sieve_extend.c ****        index_ptr+=step;
 14012              		.loc 1 187 19 is_stmt 0 view .LVU4838
 14013 4e1c 4809140F 		or	QWORD PTR [rdi+rcx], rdx	# MEM[base: _1385, index: _543, offset: 0B], mask
 188:sieve_extend.c ****        *index_ptr |= mask;
 14014              		.loc 1 188 8 is_stmt 1 view .LVU4839
 14015              	.LVL769:
 189:sieve_extend.c ****        index_ptr+=step;
 14016              		.loc 1 189 8 view .LVU4840
 14017 4e20 4C01CF   		add	rdi, r9	# ivtmp.594, tmp730
 14018              	# sieve_extend.c:189:        *index_ptr |= mask;
 189:sieve_extend.c ****        index_ptr+=step;
 14019              		.loc 1 189 19 is_stmt 0 view .LVU4841
 14020 4e23 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_865, index: _543, step: 4, offset: 0B], mask
 190:sieve_extend.c ****    }
 14021              		.loc 1 190 8 is_stmt 1 view .LVU4842
 14022 4e27 4C01C8   		add	rax, r9	# index_ptr, tmp730
 14023              	.LVL770:
 180:sieve_extend.c ****        *index_ptr |= mask;
 14024              		.loc 1 180 10 view .LVU4843
 14025 4e2a 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 14026 4e2d 0F86BD00 		jbe	.L956	#,
 14026      0000
 181:sieve_extend.c ****        index_ptr+=step;
 14027              		.loc 1 181 8 view .LVU4844
 14028              	# sieve_extend.c:181:        *index_ptr |= mask;
 181:sieve_extend.c ****        index_ptr+=step;
 14029              		.loc 1 181 19 is_stmt 0 view .LVU4845
 14030 4e33 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_865, offset: 0B], mask
 182:sieve_extend.c ****        *index_ptr |= mask;
 14031              		.loc 1 182 8 is_stmt 1 view .LVU4846
 14032              	.LVL771:
 183:sieve_extend.c ****        index_ptr+=step;
 14033              		.loc 1 183 8 view .LVU4847
 14034              	# sieve_extend.c:183:        *index_ptr |= mask;
 183:sieve_extend.c ****        index_ptr+=step;
 14035              		.loc 1 183 19 is_stmt 0 view .LVU4848
 14036 4e36 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_865, index: _543, offset: 0B], mask
 184:sieve_extend.c ****        *index_ptr |= mask;
 14037              		.loc 1 184 8 is_stmt 1 view .LVU4849
 14038              	.LVL772:
 185:sieve_extend.c ****        index_ptr+=step;
 14039              		.loc 1 185 8 view .LVU4850
 14040              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 14041              		.loc 1 185 19 is_stmt 0 view .LVU4851
 14042 4e3a 480917   		or	QWORD PTR [rdi], rdx	# MEM[base: _1385, offset: 0B], mask
 186:sieve_extend.c ****        *index_ptr |= mask;
 14043              		.loc 1 186 8 is_stmt 1 view .LVU4852
 14044              	.LVL773:
 187:sieve_extend.c ****        index_ptr+=step;
 14045              		.loc 1 187 8 view .LVU4853
 14046              	# sieve_extend.c:187:        *index_ptr |= mask;
 187:sieve_extend.c ****        index_ptr+=step;
 14047              		.loc 1 187 19 is_stmt 0 view .LVU4854
 14048 4e3d 4809140F 		or	QWORD PTR [rdi+rcx], rdx	# MEM[base: _1385, index: _543, offset: 0B], mask
 188:sieve_extend.c ****        *index_ptr |= mask;
GAS LISTING /tmp/cc64mrzX.s 			page 378


 14049              		.loc 1 188 8 is_stmt 1 view .LVU4855
 14050              	.LVL774:
 189:sieve_extend.c ****        index_ptr+=step;
 14051              		.loc 1 189 8 view .LVU4856
 14052 4e41 4C01CF   		add	rdi, r9	# ivtmp.594, tmp730
 14053              	# sieve_extend.c:189:        *index_ptr |= mask;
 189:sieve_extend.c ****        index_ptr+=step;
 14054              		.loc 1 189 19 is_stmt 0 view .LVU4857
 14055 4e44 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_865, index: _543, step: 4, offset: 0B], mask
 190:sieve_extend.c ****    }
 14056              		.loc 1 190 8 is_stmt 1 view .LVU4858
 14057 4e48 4C01C8   		add	rax, r9	# index_ptr, tmp730
 14058              	.LVL775:
 180:sieve_extend.c ****        *index_ptr |= mask;
 14059              		.loc 1 180 10 view .LVU4859
 14060 4e4b 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 14061 4e4e 0F869C00 		jbe	.L956	#,
 14061      0000
 181:sieve_extend.c ****        index_ptr+=step;
 14062              		.loc 1 181 8 view .LVU4860
 14063              	# sieve_extend.c:181:        *index_ptr |= mask;
 181:sieve_extend.c ****        index_ptr+=step;
 14064              		.loc 1 181 19 is_stmt 0 view .LVU4861
 14065 4e54 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_865, offset: 0B], mask
 182:sieve_extend.c ****        *index_ptr |= mask;
 14066              		.loc 1 182 8 is_stmt 1 view .LVU4862
 14067              	.LVL776:
 183:sieve_extend.c ****        index_ptr+=step;
 14068              		.loc 1 183 8 view .LVU4863
 14069              	# sieve_extend.c:183:        *index_ptr |= mask;
 183:sieve_extend.c ****        index_ptr+=step;
 14070              		.loc 1 183 19 is_stmt 0 view .LVU4864
 14071 4e57 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_865, index: _543, offset: 0B], mask
 184:sieve_extend.c ****        *index_ptr |= mask;
 14072              		.loc 1 184 8 is_stmt 1 view .LVU4865
 14073              	.LVL777:
 185:sieve_extend.c ****        index_ptr+=step;
 14074              		.loc 1 185 8 view .LVU4866
 14075              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 14076              		.loc 1 185 19 is_stmt 0 view .LVU4867
 14077 4e5b 480917   		or	QWORD PTR [rdi], rdx	# MEM[base: _1385, offset: 0B], mask
 186:sieve_extend.c ****        *index_ptr |= mask;
 14078              		.loc 1 186 8 is_stmt 1 view .LVU4868
 14079              	.LVL778:
 187:sieve_extend.c ****        index_ptr+=step;
 14080              		.loc 1 187 8 view .LVU4869
 14081              	# sieve_extend.c:187:        *index_ptr |= mask;
 187:sieve_extend.c ****        index_ptr+=step;
 14082              		.loc 1 187 19 is_stmt 0 view .LVU4870
 14083 4e5e 4809140F 		or	QWORD PTR [rdi+rcx], rdx	# MEM[base: _1385, index: _543, offset: 0B], mask
 188:sieve_extend.c ****        *index_ptr |= mask;
 14084              		.loc 1 188 8 is_stmt 1 view .LVU4871
 14085              	.LVL779:
 189:sieve_extend.c ****        index_ptr+=step;
 14086              		.loc 1 189 8 view .LVU4872
 14087 4e62 4C01CF   		add	rdi, r9	# ivtmp.594, tmp730
GAS LISTING /tmp/cc64mrzX.s 			page 379


 14088              	# sieve_extend.c:189:        *index_ptr |= mask;
 189:sieve_extend.c ****        index_ptr+=step;
 14089              		.loc 1 189 19 is_stmt 0 view .LVU4873
 14090 4e65 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_865, index: _543, step: 4, offset: 0B], mask
 190:sieve_extend.c ****    }
 14091              		.loc 1 190 8 is_stmt 1 view .LVU4874
 14092 4e69 4C01C8   		add	rax, r9	# index_ptr, tmp730
 14093              	.LVL780:
 180:sieve_extend.c ****        *index_ptr |= mask;
 14094              		.loc 1 180 10 view .LVU4875
 14095 4e6c 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 14096 4e6f 767F     		jbe	.L956	#,
 181:sieve_extend.c ****        index_ptr+=step;
 14097              		.loc 1 181 8 view .LVU4876
 14098              	# sieve_extend.c:181:        *index_ptr |= mask;
 181:sieve_extend.c ****        index_ptr+=step;
 14099              		.loc 1 181 19 is_stmt 0 view .LVU4877
 14100 4e71 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_865, offset: 0B], mask
 182:sieve_extend.c ****        *index_ptr |= mask;
 14101              		.loc 1 182 8 is_stmt 1 view .LVU4878
 14102              	.LVL781:
 183:sieve_extend.c ****        index_ptr+=step;
 14103              		.loc 1 183 8 view .LVU4879
 14104              	# sieve_extend.c:183:        *index_ptr |= mask;
 183:sieve_extend.c ****        index_ptr+=step;
 14105              		.loc 1 183 19 is_stmt 0 view .LVU4880
 14106 4e74 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_865, index: _543, offset: 0B], mask
 184:sieve_extend.c ****        *index_ptr |= mask;
 14107              		.loc 1 184 8 is_stmt 1 view .LVU4881
 14108              	.LVL782:
 185:sieve_extend.c ****        index_ptr+=step;
 14109              		.loc 1 185 8 view .LVU4882
 14110              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 14111              		.loc 1 185 19 is_stmt 0 view .LVU4883
 14112 4e78 480917   		or	QWORD PTR [rdi], rdx	# MEM[base: _1385, offset: 0B], mask
 186:sieve_extend.c ****        *index_ptr |= mask;
 14113              		.loc 1 186 8 is_stmt 1 view .LVU4884
 14114              	.LVL783:
 187:sieve_extend.c ****        index_ptr+=step;
 14115              		.loc 1 187 8 view .LVU4885
 14116              	# sieve_extend.c:187:        *index_ptr |= mask;
 187:sieve_extend.c ****        index_ptr+=step;
 14117              		.loc 1 187 19 is_stmt 0 view .LVU4886
 14118 4e7b 4809140F 		or	QWORD PTR [rdi+rcx], rdx	# MEM[base: _1385, index: _543, offset: 0B], mask
 188:sieve_extend.c ****        *index_ptr |= mask;
 14119              		.loc 1 188 8 is_stmt 1 view .LVU4887
 14120              	.LVL784:
 189:sieve_extend.c ****        index_ptr+=step;
 14121              		.loc 1 189 8 view .LVU4888
 14122 4e7f 4C01CF   		add	rdi, r9	# ivtmp.594, tmp730
 14123              	# sieve_extend.c:189:        *index_ptr |= mask;
 189:sieve_extend.c ****        index_ptr+=step;
 14124              		.loc 1 189 19 is_stmt 0 view .LVU4889
 14125 4e82 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_865, index: _543, step: 4, offset: 0B], mask
 190:sieve_extend.c ****    }
 14126              		.loc 1 190 8 is_stmt 1 view .LVU4890
GAS LISTING /tmp/cc64mrzX.s 			page 380


 14127 4e86 4C01C8   		add	rax, r9	# index_ptr, tmp730
 14128              	.LVL785:
 180:sieve_extend.c ****        *index_ptr |= mask;
 14129              		.loc 1 180 10 view .LVU4891
 14130 4e89 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 14131 4e8c 7662     		jbe	.L956	#,
 181:sieve_extend.c ****        index_ptr+=step;
 14132              		.loc 1 181 8 view .LVU4892
 14133              	# sieve_extend.c:181:        *index_ptr |= mask;
 181:sieve_extend.c ****        index_ptr+=step;
 14134              		.loc 1 181 19 is_stmt 0 view .LVU4893
 14135 4e8e 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_865, offset: 0B], mask
 182:sieve_extend.c ****        *index_ptr |= mask;
 14136              		.loc 1 182 8 is_stmt 1 view .LVU4894
 14137              	.LVL786:
 183:sieve_extend.c ****        index_ptr+=step;
 14138              		.loc 1 183 8 view .LVU4895
 14139              	# sieve_extend.c:183:        *index_ptr |= mask;
 183:sieve_extend.c ****        index_ptr+=step;
 14140              		.loc 1 183 19 is_stmt 0 view .LVU4896
 14141 4e91 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_865, index: _543, offset: 0B], mask
 184:sieve_extend.c ****        *index_ptr |= mask;
 14142              		.loc 1 184 8 is_stmt 1 view .LVU4897
 14143              	.LVL787:
 185:sieve_extend.c ****        index_ptr+=step;
 14144              		.loc 1 185 8 view .LVU4898
 14145              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 14146              		.loc 1 185 19 is_stmt 0 view .LVU4899
 14147 4e95 480917   		or	QWORD PTR [rdi], rdx	# MEM[base: _1385, offset: 0B], mask
 186:sieve_extend.c ****        *index_ptr |= mask;
 14148              		.loc 1 186 8 is_stmt 1 view .LVU4900
 14149              	.LVL788:
 187:sieve_extend.c ****        index_ptr+=step;
 14150              		.loc 1 187 8 view .LVU4901
 14151              	# sieve_extend.c:187:        *index_ptr |= mask;
 187:sieve_extend.c ****        index_ptr+=step;
 14152              		.loc 1 187 19 is_stmt 0 view .LVU4902
 14153 4e98 4809140F 		or	QWORD PTR [rdi+rcx], rdx	# MEM[base: _1385, index: _543, offset: 0B], mask
 188:sieve_extend.c ****        *index_ptr |= mask;
 14154              		.loc 1 188 8 is_stmt 1 view .LVU4903
 14155              	.LVL789:
 189:sieve_extend.c ****        index_ptr+=step;
 14156              		.loc 1 189 8 view .LVU4904
 14157 4e9c 4C01CF   		add	rdi, r9	# ivtmp.594, tmp730
 14158              	# sieve_extend.c:189:        *index_ptr |= mask;
 189:sieve_extend.c ****        index_ptr+=step;
 14159              		.loc 1 189 19 is_stmt 0 view .LVU4905
 14160 4e9f 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_865, index: _543, step: 4, offset: 0B], mask
 190:sieve_extend.c ****    }
 14161              		.loc 1 190 8 is_stmt 1 view .LVU4906
 14162 4ea3 4C01C8   		add	rax, r9	# index_ptr, tmp730
 14163              	.LVL790:
 180:sieve_extend.c ****        *index_ptr |= mask;
 14164              		.loc 1 180 10 view .LVU4907
 14165 4ea6 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 14166 4ea9 7645     		jbe	.L956	#,
GAS LISTING /tmp/cc64mrzX.s 			page 381


 181:sieve_extend.c ****        index_ptr+=step;
 14167              		.loc 1 181 8 view .LVU4908
 14168              	# sieve_extend.c:181:        *index_ptr |= mask;
 181:sieve_extend.c ****        index_ptr+=step;
 14169              		.loc 1 181 19 is_stmt 0 view .LVU4909
 14170 4eab 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_865, offset: 0B], mask
 182:sieve_extend.c ****        *index_ptr |= mask;
 14171              		.loc 1 182 8 is_stmt 1 view .LVU4910
 14172              	.LVL791:
 183:sieve_extend.c ****        index_ptr+=step;
 14173              		.loc 1 183 8 view .LVU4911
 14174              	# sieve_extend.c:183:        *index_ptr |= mask;
 183:sieve_extend.c ****        index_ptr+=step;
 14175              		.loc 1 183 19 is_stmt 0 view .LVU4912
 14176 4eae 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_865, index: _543, offset: 0B], mask
 184:sieve_extend.c ****        *index_ptr |= mask;
 14177              		.loc 1 184 8 is_stmt 1 view .LVU4913
 14178              	.LVL792:
 185:sieve_extend.c ****        index_ptr+=step;
 14179              		.loc 1 185 8 view .LVU4914
 14180              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 14181              		.loc 1 185 19 is_stmt 0 view .LVU4915
 14182 4eb2 480917   		or	QWORD PTR [rdi], rdx	# MEM[base: _1385, offset: 0B], mask
 186:sieve_extend.c ****        *index_ptr |= mask;
 14183              		.loc 1 186 8 is_stmt 1 view .LVU4916
 14184              	.LVL793:
 187:sieve_extend.c ****        index_ptr+=step;
 14185              		.loc 1 187 8 view .LVU4917
 14186              	# sieve_extend.c:187:        *index_ptr |= mask;
 187:sieve_extend.c ****        index_ptr+=step;
 14187              		.loc 1 187 19 is_stmt 0 view .LVU4918
 14188 4eb5 4809140F 		or	QWORD PTR [rdi+rcx], rdx	# MEM[base: _1385, index: _543, offset: 0B], mask
 188:sieve_extend.c ****        *index_ptr |= mask;
 14189              		.loc 1 188 8 is_stmt 1 view .LVU4919
 14190              	.LVL794:
 189:sieve_extend.c ****        index_ptr+=step;
 14191              		.loc 1 189 8 view .LVU4920
 14192 4eb9 4C01CF   		add	rdi, r9	# ivtmp.594, tmp730
 14193              	# sieve_extend.c:189:        *index_ptr |= mask;
 189:sieve_extend.c ****        index_ptr+=step;
 14194              		.loc 1 189 19 is_stmt 0 view .LVU4921
 14195 4ebc 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_865, index: _543, step: 4, offset: 0B], mask
 190:sieve_extend.c ****    }
 14196              		.loc 1 190 8 is_stmt 1 view .LVU4922
 14197 4ec0 4C01C8   		add	rax, r9	# index_ptr, tmp730
 14198              	.LVL795:
 180:sieve_extend.c ****        *index_ptr |= mask;
 14199              		.loc 1 180 10 view .LVU4923
 14200 4ec3 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 14201 4ec6 7628     		jbe	.L956	#,
 181:sieve_extend.c ****        index_ptr+=step;
 14202              		.loc 1 181 8 view .LVU4924
 14203              	# sieve_extend.c:181:        *index_ptr |= mask;
 181:sieve_extend.c ****        index_ptr+=step;
 14204              		.loc 1 181 19 is_stmt 0 view .LVU4925
 14205 4ec8 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_865, offset: 0B], mask
GAS LISTING /tmp/cc64mrzX.s 			page 382


 182:sieve_extend.c ****        *index_ptr |= mask;
 14206              		.loc 1 182 8 is_stmt 1 view .LVU4926
 14207              	.LVL796:
 183:sieve_extend.c ****        index_ptr+=step;
 14208              		.loc 1 183 8 view .LVU4927
 14209              	# sieve_extend.c:183:        *index_ptr |= mask;
 183:sieve_extend.c ****        index_ptr+=step;
 14210              		.loc 1 183 19 is_stmt 0 view .LVU4928
 14211 4ecb 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_865, index: _543, offset: 0B], mask
 184:sieve_extend.c ****        *index_ptr |= mask;
 14212              		.loc 1 184 8 is_stmt 1 view .LVU4929
 14213              	.LVL797:
 185:sieve_extend.c ****        index_ptr+=step;
 14214              		.loc 1 185 8 view .LVU4930
 14215              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 14216              		.loc 1 185 19 is_stmt 0 view .LVU4931
 14217 4ecf 480917   		or	QWORD PTR [rdi], rdx	# MEM[base: _1385, offset: 0B], mask
 186:sieve_extend.c ****        *index_ptr |= mask;
 14218              		.loc 1 186 8 is_stmt 1 view .LVU4932
 14219              	.LVL798:
 187:sieve_extend.c ****        index_ptr+=step;
 14220              		.loc 1 187 8 view .LVU4933
 14221              	# sieve_extend.c:187:        *index_ptr |= mask;
 187:sieve_extend.c ****        index_ptr+=step;
 14222              		.loc 1 187 19 is_stmt 0 view .LVU4934
 14223 4ed2 4809140F 		or	QWORD PTR [rdi+rcx], rdx	# MEM[base: _1385, index: _543, offset: 0B], mask
 188:sieve_extend.c ****        *index_ptr |= mask;
 14224              		.loc 1 188 8 is_stmt 1 view .LVU4935
 14225              	.LVL799:
 189:sieve_extend.c ****        index_ptr+=step;
 14226              		.loc 1 189 8 view .LVU4936
 14227 4ed6 4C01CF   		add	rdi, r9	# ivtmp.594, tmp730
 14228              	# sieve_extend.c:189:        *index_ptr |= mask;
 189:sieve_extend.c ****        index_ptr+=step;
 14229              		.loc 1 189 19 is_stmt 0 view .LVU4937
 14230 4ed9 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_865, index: _543, step: 4, offset: 0B], mask
 190:sieve_extend.c ****    }
 14231              		.loc 1 190 8 is_stmt 1 view .LVU4938
 14232 4edd 4C01C8   		add	rax, r9	# index_ptr, tmp730
 14233              	.LVL800:
 180:sieve_extend.c ****        *index_ptr |= mask;
 14234              		.loc 1 180 10 view .LVU4939
 14235 4ee0 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 14236 4ee3 0F8708FF 		ja	.L957	#,
 14236      FFFF
 14237 4ee9 0F1F8000 		.p2align 4
 14237      000000
 14238              		.p2align 3
 14239              	.L956:
 193:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 14240              		.loc 1 193 4 view .LVU4940
 194:sieve_extend.c ****        *index_ptr |= mask;
 14241              		.loc 1 194 4 view .LVU4941
 194:sieve_extend.c ****        *index_ptr |= mask;
 14242              		.loc 1 194 10 view .LVU4942
 14243 4ef0 4839E8   		cmp	rax, rbp	# index_ptr, _494
GAS LISTING /tmp/cc64mrzX.s 			page 383


 14244 4ef3 735B     		jnb	.L958	#,
 14245              	.L959:
 195:sieve_extend.c ****        index_ptr+=step;
 14246              		.loc 1 195 8 view .LVU4943
 14247              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 14248              		.loc 1 195 19 is_stmt 0 view .LVU4944
 14249 4ef5 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_861, offset: 0B], mask
 196:sieve_extend.c ****    }
 14250              		.loc 1 196 8 is_stmt 1 view .LVU4945
 14251              	# sieve_extend.c:196:        index_ptr+=step;
 196:sieve_extend.c ****    }
 14252              		.loc 1 196 17 is_stmt 0 view .LVU4946
 14253 4ef8 4801C8   		add	rax, rcx	# index_ptr, _543
 14254              	.LVL801:
 194:sieve_extend.c ****        *index_ptr |= mask;
 14255              		.loc 1 194 10 is_stmt 1 view .LVU4947
 14256 4efb 4839C5   		cmp	rbp, rax	# _494, index_ptr
 14257 4efe 7650     		jbe	.L958	#,
 195:sieve_extend.c ****        index_ptr+=step;
 14258              		.loc 1 195 8 view .LVU4948
 14259              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 14260              		.loc 1 195 19 is_stmt 0 view .LVU4949
 14261 4f00 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_861, offset: 0B], mask
 196:sieve_extend.c ****    }
 14262              		.loc 1 196 8 is_stmt 1 view .LVU4950
 14263              	# sieve_extend.c:196:        index_ptr+=step;
 196:sieve_extend.c ****    }
 14264              		.loc 1 196 17 is_stmt 0 view .LVU4951
 14265 4f03 4801C8   		add	rax, rcx	# index_ptr, _543
 14266              	.LVL802:
 194:sieve_extend.c ****        *index_ptr |= mask;
 14267              		.loc 1 194 10 is_stmt 1 view .LVU4952
 14268 4f06 4839C5   		cmp	rbp, rax	# _494, index_ptr
 14269 4f09 7645     		jbe	.L958	#,
 195:sieve_extend.c ****        index_ptr+=step;
 14270              		.loc 1 195 8 view .LVU4953
 14271              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 14272              		.loc 1 195 19 is_stmt 0 view .LVU4954
 14273 4f0b 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_861, offset: 0B], mask
 196:sieve_extend.c ****    }
 14274              		.loc 1 196 8 is_stmt 1 view .LVU4955
 14275              	# sieve_extend.c:196:        index_ptr+=step;
 196:sieve_extend.c ****    }
 14276              		.loc 1 196 17 is_stmt 0 view .LVU4956
 14277 4f0e 4801C8   		add	rax, rcx	# index_ptr, _543
 14278              	.LVL803:
 194:sieve_extend.c ****        *index_ptr |= mask;
 14279              		.loc 1 194 10 is_stmt 1 view .LVU4957
 14280 4f11 4839C5   		cmp	rbp, rax	# _494, index_ptr
 14281 4f14 763A     		jbe	.L958	#,
 195:sieve_extend.c ****        index_ptr+=step;
 14282              		.loc 1 195 8 view .LVU4958
 14283              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/cc64mrzX.s 			page 384


 14284              		.loc 1 195 19 is_stmt 0 view .LVU4959
 14285 4f16 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_861, offset: 0B], mask
 196:sieve_extend.c ****    }
 14286              		.loc 1 196 8 is_stmt 1 view .LVU4960
 14287              	# sieve_extend.c:196:        index_ptr+=step;
 196:sieve_extend.c ****    }
 14288              		.loc 1 196 17 is_stmt 0 view .LVU4961
 14289 4f19 4801C8   		add	rax, rcx	# index_ptr, _543
 14290              	.LVL804:
 194:sieve_extend.c ****        *index_ptr |= mask;
 14291              		.loc 1 194 10 is_stmt 1 view .LVU4962
 14292 4f1c 4839C5   		cmp	rbp, rax	# _494, index_ptr
 14293 4f1f 762F     		jbe	.L958	#,
 195:sieve_extend.c ****        index_ptr+=step;
 14294              		.loc 1 195 8 view .LVU4963
 14295              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 14296              		.loc 1 195 19 is_stmt 0 view .LVU4964
 14297 4f21 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_861, offset: 0B], mask
 196:sieve_extend.c ****    }
 14298              		.loc 1 196 8 is_stmt 1 view .LVU4965
 14299              	# sieve_extend.c:196:        index_ptr+=step;
 196:sieve_extend.c ****    }
 14300              		.loc 1 196 17 is_stmt 0 view .LVU4966
 14301 4f24 4801C8   		add	rax, rcx	# index_ptr, _543
 14302              	.LVL805:
 194:sieve_extend.c ****        *index_ptr |= mask;
 14303              		.loc 1 194 10 is_stmt 1 view .LVU4967
 14304 4f27 4839C5   		cmp	rbp, rax	# _494, index_ptr
 14305 4f2a 7624     		jbe	.L958	#,
 195:sieve_extend.c ****        index_ptr+=step;
 14306              		.loc 1 195 8 view .LVU4968
 14307              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 14308              		.loc 1 195 19 is_stmt 0 view .LVU4969
 14309 4f2c 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_861, offset: 0B], mask
 196:sieve_extend.c ****    }
 14310              		.loc 1 196 8 is_stmt 1 view .LVU4970
 14311              	# sieve_extend.c:196:        index_ptr+=step;
 196:sieve_extend.c ****    }
 14312              		.loc 1 196 17 is_stmt 0 view .LVU4971
 14313 4f2f 4801C8   		add	rax, rcx	# index_ptr, _543
 14314              	.LVL806:
 194:sieve_extend.c ****        *index_ptr |= mask;
 14315              		.loc 1 194 10 is_stmt 1 view .LVU4972
 14316 4f32 4839C5   		cmp	rbp, rax	# _494, index_ptr
 14317 4f35 7619     		jbe	.L958	#,
 195:sieve_extend.c ****        index_ptr+=step;
 14318              		.loc 1 195 8 view .LVU4973
 14319              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 14320              		.loc 1 195 19 is_stmt 0 view .LVU4974
 14321 4f37 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_861, offset: 0B], mask
 196:sieve_extend.c ****    }
 14322              		.loc 1 196 8 is_stmt 1 view .LVU4975
 14323              	# sieve_extend.c:196:        index_ptr+=step;
 196:sieve_extend.c ****    }
GAS LISTING /tmp/cc64mrzX.s 			page 385


 14324              		.loc 1 196 17 is_stmt 0 view .LVU4976
 14325 4f3a 4801C8   		add	rax, rcx	# index_ptr, _543
 14326              	.LVL807:
 194:sieve_extend.c ****        *index_ptr |= mask;
 14327              		.loc 1 194 10 is_stmt 1 view .LVU4977
 14328 4f3d 4839C5   		cmp	rbp, rax	# _494, index_ptr
 14329 4f40 760E     		jbe	.L958	#,
 195:sieve_extend.c ****        index_ptr+=step;
 14330              		.loc 1 195 8 view .LVU4978
 14331              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 14332              		.loc 1 195 19 is_stmt 0 view .LVU4979
 14333 4f42 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_861, offset: 0B], mask
 196:sieve_extend.c ****    }
 14334              		.loc 1 196 8 is_stmt 1 view .LVU4980
 14335              	# sieve_extend.c:196:        index_ptr+=step;
 196:sieve_extend.c ****    }
 14336              		.loc 1 196 17 is_stmt 0 view .LVU4981
 14337 4f45 4801C8   		add	rax, rcx	# index_ptr, _543
 14338              	.LVL808:
 194:sieve_extend.c ****        *index_ptr |= mask;
 14339              		.loc 1 194 10 is_stmt 1 view .LVU4982
 14340 4f48 4839C5   		cmp	rbp, rax	# _494, index_ptr
 14341 4f4b 77A8     		ja	.L959	#,
 14342 4f4d 0F1F00   		.p2align 4
 14343              		.p2align 3
 14344              	.L958:
 199:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 14345              		.loc 1 199 4 view .LVU4983
 14346              	# sieve_extend.c:199:    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range
 199:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 14347              		.loc 1 199 7 is_stmt 0 view .LVU4984
 14348 4f50 4839C5   		cmp	rbp, rax	# _494, index_ptr
 14349 4f53 0F840F01 		je	.L1502	#,
 14349      0000
 14350              	.LVL809:
 14351              	.L960:
 199:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 14352              		.loc 1 199 7 view .LVU4985
 14353              	.LBE645:
 14354              	.LBE647:
 14355              	.LBE642:
 320:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 14356              		.loc 1 320 54 is_stmt 1 view .LVU4986
 14357              	# sieve_extend.c:320:         for (register counter_t index = range_start; index <= range_stop_uniq
 320:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 14358              		.loc 1 320 9 is_stmt 0 view .LVU4987
 14359 4f59 4939F6   		cmp	r14, rsi	# tmp709, index
 14360 4f5c 0F83AEFD 		jnb	.L961	#,
 14360      FFFF
 14361              	.LVL810:
 14362              	.L952:
 320:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 14363              		.loc 1 320 9 view .LVU4988
 14364              	.LBE641:
 14365              	.LBE652:
 14366              	.LBE654:
GAS LISTING /tmp/cc64mrzX.s 			page 386


 909:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 14367              		.loc 1 909 9 is_stmt 1 view .LVU4989
 14368              	.LBB655:
 14369              	.LBI655:
 121:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 14370              		.loc 1 121 25 view .LVU4990
 14371              	.LBB656:
 122:sieve_extend.c ****     return index;
 14372              		.loc 1 122 5 view .LVU4991
 122:sieve_extend.c ****     return index;
 14373              		.loc 1 122 11 view .LVU4992
 14374              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14375              		.loc 1 122 21 is_stmt 0 view .LVU4993
 14376 4f62 4C89EE   		mov	rsi, r13	# tmp710, _333
 14377              	.LBE656:
 14378              	.LBE655:
 14379              	# sieve_extend.c:907:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 907:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 14380              		.loc 1 907 12 view .LVU4994
 14381 4f65 4C89E9   		mov	rcx, r13	# index, _333
 14382              	.LBB658:
 14383              	.LBB657:
 14384              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14385              		.loc 1 122 21 view .LVU4995
 14386 4f68 48C1EE06 		shr	rsi, 6	# tmp710,
 14387              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14388              		.loc 1 122 12 view .LVU4996
 14389 4f6c 4C8B04F3 		mov	r8, QWORD PTR [rbx+rsi*8]	# *_58, *_58
 14390              	.LVL811:
 14391              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14392              		.loc 1 122 11 view .LVU4997
 14393 4f70 4D0FA3E8 		bt	r8, r13	# *_58, _333
 14394 4f74 0F83C600 		jnc	.L951	#,
 14394      0000
 14395              	.LVL812:
 14396              	.L950:
 122:sieve_extend.c ****     return index;
 14397              		.loc 1 122 58 is_stmt 1 view .LVU4998
 14398              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14399              		.loc 1 122 63 is_stmt 0 view .LVU4999
 14400 4f7a 4C8D6901 		lea	r13, 1[rcx]	# tmp840,
 14401              	.LVL813:
 14402              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14403              		.loc 1 122 21 view .LVU5000
 14404 4f7e 4D89EE   		mov	r14, r13	# tmp737, index
 14405              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14406              		.loc 1 122 63 view .LVU5001
 14407 4f81 4C89E9   		mov	rcx, r13	# index, tmp840
 122:sieve_extend.c ****     return index;
 14408              		.loc 1 122 11 is_stmt 1 view .LVU5002
GAS LISTING /tmp/cc64mrzX.s 			page 387


 14409              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14410              		.loc 1 122 21 is_stmt 0 view .LVU5003
 14411 4f84 49C1EE06 		shr	r14, 6	# tmp737,
 14412              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14413              		.loc 1 122 12 view .LVU5004
 14414 4f88 4E8B0CF3 		mov	r9, QWORD PTR [rbx+r14*8]	# *_346, *_346
 14415              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14416              		.loc 1 122 11 view .LVU5005
 14417 4f8c 4D0FA3E9 		bt	r9, r13	# *_346, index
 14418 4f90 0F83AA00 		jnc	.L951	#,
 14418      0000
 122:sieve_extend.c ****     return index;
 14419              		.loc 1 122 58 is_stmt 1 view .LVU5006
 14420              	.LVL814:
 14421              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14422              		.loc 1 122 63 is_stmt 0 view .LVU5007
 14423 4f96 4883C101 		add	rcx, 1	# index,
 14424              	.LVL815:
 122:sieve_extend.c ****     return index;
 14425              		.loc 1 122 11 is_stmt 1 view .LVU5008
 14426              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14427              		.loc 1 122 21 is_stmt 0 view .LVU5009
 14428 4f9a 4889C8   		mov	rax, rcx	# tmp994, index
 14429 4f9d 48C1E806 		shr	rax, 6	# tmp994,
 14430              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14431              		.loc 1 122 12 view .LVU5010
 14432 4fa1 488B3CC3 		mov	rdi, QWORD PTR [rbx+rax*8]	# *_346, *_346
 14433              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14434              		.loc 1 122 11 view .LVU5011
 14435 4fa5 480FA3CF 		bt	rdi, rcx	# *_346, index
 14436 4fa9 0F839100 		jnc	.L951	#,
 14436      0000
 122:sieve_extend.c ****     return index;
 14437              		.loc 1 122 58 is_stmt 1 view .LVU5012
 14438              	.LVL816:
 14439              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14440              		.loc 1 122 63 is_stmt 0 view .LVU5013
 14441 4faf 498D4D02 		lea	rcx, 2[r13]	# index,
 14442              	.LVL817:
 122:sieve_extend.c ****     return index;
 14443              		.loc 1 122 11 is_stmt 1 view .LVU5014
 14444              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14445              		.loc 1 122 21 is_stmt 0 view .LVU5015
 14446 4fb3 4989CB   		mov	r11, rcx	# tmp998, index
 14447 4fb6 49C1EB06 		shr	r11, 6	# tmp998,
 14448              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14449              		.loc 1 122 12 view .LVU5016
GAS LISTING /tmp/cc64mrzX.s 			page 388


 14450 4fba 4E8B3CDB 		mov	r15, QWORD PTR [rbx+r11*8]	# *_346, *_346
 14451              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14452              		.loc 1 122 11 view .LVU5017
 14453 4fbe 490FA3CF 		bt	r15, rcx	# *_346, index
 14454 4fc2 737C     		jnc	.L951	#,
 122:sieve_extend.c ****     return index;
 14455              		.loc 1 122 58 is_stmt 1 view .LVU5018
 14456              	.LVL818:
 14457              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14458              		.loc 1 122 63 is_stmt 0 view .LVU5019
 14459 4fc4 498D4D03 		lea	rcx, 3[r13]	# index,
 14460              	.LVL819:
 122:sieve_extend.c ****     return index;
 14461              		.loc 1 122 11 is_stmt 1 view .LVU5020
 14462              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14463              		.loc 1 122 21 is_stmt 0 view .LVU5021
 14464 4fc8 4889CA   		mov	rdx, rcx	# tmp1002, index
 14465 4fcb 48C1EA06 		shr	rdx, 6	# tmp1002,
 14466              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14467              		.loc 1 122 12 view .LVU5022
 14468 4fcf 488B34D3 		mov	rsi, QWORD PTR [rbx+rdx*8]	# *_346, *_346
 14469              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14470              		.loc 1 122 11 view .LVU5023
 14471 4fd3 480FA3CE 		bt	rsi, rcx	# *_346, index
 14472 4fd7 7367     		jnc	.L951	#,
 122:sieve_extend.c ****     return index;
 14473              		.loc 1 122 58 is_stmt 1 view .LVU5024
 14474              	.LVL820:
 14475              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14476              		.loc 1 122 63 is_stmt 0 view .LVU5025
 14477 4fd9 498D4D04 		lea	rcx, 4[r13]	# index,
 14478              	.LVL821:
 122:sieve_extend.c ****     return index;
 14479              		.loc 1 122 11 is_stmt 1 view .LVU5026
 14480              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14481              		.loc 1 122 21 is_stmt 0 view .LVU5027
 14482 4fdd 4989C8   		mov	r8, rcx	# tmp1006, index
 14483 4fe0 49C1E806 		shr	r8, 6	# tmp1006,
 14484              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14485              		.loc 1 122 12 view .LVU5028
 14486 4fe4 4E8B34C3 		mov	r14, QWORD PTR [rbx+r8*8]	# *_346, *_346
 14487              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14488              		.loc 1 122 11 view .LVU5029
 14489 4fe8 490FA3CE 		bt	r14, rcx	# *_346, index
 14490 4fec 7352     		jnc	.L951	#,
 122:sieve_extend.c ****     return index;
 14491              		.loc 1 122 58 is_stmt 1 view .LVU5030
 14492              	.LVL822:
GAS LISTING /tmp/cc64mrzX.s 			page 389


 14493              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14494              		.loc 1 122 63 is_stmt 0 view .LVU5031
 14495 4fee 498D4D05 		lea	rcx, 5[r13]	# index,
 14496              	.LVL823:
 122:sieve_extend.c ****     return index;
 14497              		.loc 1 122 11 is_stmt 1 view .LVU5032
 14498              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14499              		.loc 1 122 21 is_stmt 0 view .LVU5033
 14500 4ff2 4989C9   		mov	r9, rcx	# tmp1010, index
 14501 4ff5 49C1E906 		shr	r9, 6	# tmp1010,
 14502              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14503              		.loc 1 122 12 view .LVU5034
 14504 4ff9 4A8B04CB 		mov	rax, QWORD PTR [rbx+r9*8]	# *_346, *_346
 14505              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14506              		.loc 1 122 11 view .LVU5035
 14507 4ffd 480FA3C8 		bt	rax, rcx	# *_346, index
 14508 5001 733D     		jnc	.L951	#,
 122:sieve_extend.c ****     return index;
 14509              		.loc 1 122 58 is_stmt 1 view .LVU5036
 14510              	.LVL824:
 14511              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14512              		.loc 1 122 63 is_stmt 0 view .LVU5037
 14513 5003 498D4D06 		lea	rcx, 6[r13]	# index,
 14514              	.LVL825:
 122:sieve_extend.c ****     return index;
 14515              		.loc 1 122 11 is_stmt 1 view .LVU5038
 14516              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14517              		.loc 1 122 21 is_stmt 0 view .LVU5039
 14518 5007 4889CF   		mov	rdi, rcx	# tmp1014, index
 14519 500a 48C1EF06 		shr	rdi, 6	# tmp1014,
 14520              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14521              		.loc 1 122 12 view .LVU5040
 14522 500e 4C8B1CFB 		mov	r11, QWORD PTR [rbx+rdi*8]	# *_346, *_346
 14523              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14524              		.loc 1 122 11 view .LVU5041
 14525 5012 490FA3CB 		bt	r11, rcx	# *_346, index
 14526 5016 7328     		jnc	.L951	#,
 122:sieve_extend.c ****     return index;
 14527              		.loc 1 122 58 is_stmt 1 view .LVU5042
 14528              	.LVL826:
 14529              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14530              		.loc 1 122 63 is_stmt 0 view .LVU5043
 14531 5018 498D4D07 		lea	rcx, 7[r13]	# index,
 14532              	.LVL827:
 122:sieve_extend.c ****     return index;
 14533              		.loc 1 122 11 is_stmt 1 view .LVU5044
 14534              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
GAS LISTING /tmp/cc64mrzX.s 			page 390


 14535              		.loc 1 122 21 is_stmt 0 view .LVU5045
 14536 501c 4989CD   		mov	r13, rcx	# tmp1018, index
 14537 501f 49C1ED06 		shr	r13, 6	# tmp1018,
 14538              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14539              		.loc 1 122 12 view .LVU5046
 14540 5023 4E8B3CEB 		mov	r15, QWORD PTR [rbx+r13*8]	# *_346, *_346
 14541              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14542              		.loc 1 122 11 view .LVU5047
 14543 5027 490FA3CF 		bt	r15, rcx	# *_346, index
 14544 502b 0F8249FF 		jc	.L950	#,
 14544      FFFF
 14545              	.LVL828:
 14546 5031 66662E0F 		.p2align 4
 14546      1F840000 
 14546      0000000F 
 14546      1F4000
 14547              		.p2align 3
 14548              	.L951:
 123:sieve_extend.c **** }
 14549              		.loc 1 123 5 is_stmt 1 view .LVU5048
 123:sieve_extend.c **** }
 14550              		.loc 1 123 5 is_stmt 0 view .LVU5049
 14551              	.LBE657:
 14552              	.LBE658:
 910:sieve_extend.c ****     }
 14553              		.loc 1 910 9 is_stmt 1 view .LVU5050
 14554              	# sieve_extend.c:910:         start = prime * prime * 2 + prime * 2;
 910:sieve_extend.c ****     }
 14555              		.loc 1 910 35 is_stmt 0 view .LVU5051
 14556 5040 488D7101 		lea	rsi, 1[rcx]	# _411,
 14557              	# sieve_extend.c:910:         start = prime * prime * 2 + prime * 2;
 910:sieve_extend.c ****     }
 14558              		.loc 1 910 15 view .LVU5052
 14559 5044 480FAFF1 		imul	rsi, rcx	# tmp743, index
 14560              	.LVL829:
 910:sieve_extend.c ****     }
 14561              		.loc 1 910 15 view .LVU5053
 14562 5048 4801F6   		add	rsi, rsi	# index
 14563              	.LVL830:
 904:sieve_extend.c ****         step  = prime * 2 + 1;
 14564              		.loc 1 904 11 is_stmt 1 view .LVU5054
 14565 504b 4939F4   		cmp	r12, rsi	# block_stop, index
 14566 504e 0F833CFC 		jnb	.L930	#,
 14566      FFFF
 904:sieve_extend.c ****         step  = prime * 2 + 1;
 14567              		.loc 1 904 11 is_stmt 0 view .LVU5055
 14568 5054 488B5C24 		mov	rbx, QWORD PTR 48[rsp]	# <retval>, %sfp
 14568      30
 14569              	.LVL831:
 904:sieve_extend.c ****         step  = prime * 2 + 1;
 14570              		.loc 1 904 11 view .LVU5056
 14571 5059 4C8B7C24 		mov	r15, QWORD PTR 24[rsp]	# block_start, %sfp
 14571      18
 14572 505e 488B5308 		mov	rdx, QWORD PTR 8[rbx]	# _8, sieve_92->bits
 14573 5062 E9D6FBFF 		jmp	.L931	#
GAS LISTING /tmp/cc64mrzX.s 			page 391


 14573      FF
 14574              	.LVL832:
 14575              		.p2align 4,,7
 14576 5067 90       		.p2align 3
 14577              	.L1502:
 14578              	.LBB659:
 14579              	.LBB653:
 14580              	.LBB650:
 14581              	.LBB649:
 14582              	.LBB648:
 14583              	.LBB646:
 200:sieve_extend.c ****    }
 14584              		.loc 1 200 7 is_stmt 1 view .LVU5057
 14585              	# sieve_extend.c:200:       *index_ptr |= (mask & chopmask(range_stop));
 200:sieve_extend.c ****    }
 14586              		.loc 1 200 27 is_stmt 0 view .LVU5058
 14587 5068 48235424 		and	rdx, QWORD PTR 8[rsp]	# tmp736, %sfp
 14587      08
 14588              	.LVL833:
 14589              	# sieve_extend.c:200:       *index_ptr |= (mask & chopmask(range_stop));
 200:sieve_extend.c ****    }
 14590              		.loc 1 200 18 view .LVU5059
 14591 506d 48095500 		or	QWORD PTR 0[rbp], rdx	# *index_ptr_642, tmp736
 14592 5071 E9E3FEFF 		jmp	.L960	#
 14592      FF
 14593              	.LVL834:
 14594              		.p2align 4,,7
 14595 5076 6690     		.p2align 3
 14596              	.L948:
 200:sieve_extend.c ****    }
 14597              		.loc 1 200 18 view .LVU5060
 14598              	.LBE646:
 14599              	.LBE648:
 14600              	.LBE649:
 14601              	.LBE650:
 14602              	.LBB651:
 14603              	.LBB640:
 14604              	.LBB639:
 303:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 14605              		.loc 1 303 54 is_stmt 1 view .LVU5061
 14606              	# sieve_extend.c:303:         for (register counter_t index = range_start; index <= range_stop;) {
 303:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 14607              		.loc 1 303 9 is_stmt 0 view .LVU5062
 14608 5078 4939F4   		cmp	r12, rsi	# block_stop, index
 14609 507b 0F82E1FE 		jb	.L952	#,
 14609      FFFF
 14610              	.LVL835:
 14611 5081 66662E0F 		.p2align 4
 14611      1F840000 
 14611      0000000F 
 14611      1F4000
 14612              		.p2align 3
 14613              	.L954:
 14614              	.LBB638:
 304:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 14615              		.loc 1 304 13 is_stmt 1 view .LVU5063
 14616              	# sieve_extend.c:304:             register counter_t index_word = wordindex(index);
GAS LISTING /tmp/cc64mrzX.s 			page 392


 304:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 14617              		.loc 1 304 32 is_stmt 0 view .LVU5064
 14618 5090 4989F6   		mov	r14, rsi	# index_word, index
 14619              	# sieve_extend.c:305:             register bitword_t mask = SAFE_ZERO;
 305:sieve_extend.c ****             #pragma ivdep
 14620              		.loc 1 305 32 view .LVU5065
 14621 5093 4531C9   		xor	r9d, r9d	# mask
 14622              	# sieve_extend.c:304:             register counter_t index_word = wordindex(index);
 304:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 14623              		.loc 1 304 32 view .LVU5066
 14624 5096 49C1EE06 		shr	r14, 6	# index_word,
 14625              	.LVL836:
 305:sieve_extend.c ****             #pragma ivdep
 14626              		.loc 1 305 13 is_stmt 1 view .LVU5067
 14627              	.L953:
 307:sieve_extend.c ****                 mask |= markmask(index);
 14628              		.loc 1 307 13 view .LVU5068
 308:sieve_extend.c ****                 index += step;
 14629              		.loc 1 308 17 view .LVU5069
 14630              	# sieve_extend.c:308:                 mask |= markmask(index);
 308:sieve_extend.c ****                 index += step;
 14631              		.loc 1 308 25 is_stmt 0 view .LVU5070
 14632 509a C4C2C9F7 		shlx	rcx, r10, rsi	# tmp716, tmp830, index
 14632      CA
 14633              	# sieve_extend.c:309:                 index += step;
 309:sieve_extend.c ****             } while (index_word == wordindex(index));
 14634              		.loc 1 309 23 view .LVU5071
 14635 509f 4C01C6   		add	rsi, r8	# index, step
 14636              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14637              		.loc 1 310 36 view .LVU5072
 14638 50a2 4989F3   		mov	r11, rsi	# tmp718, index
 14639              	# sieve_extend.c:308:                 mask |= markmask(index);
 308:sieve_extend.c ****                 index += step;
 14640              		.loc 1 308 22 view .LVU5073
 14641 50a5 4909C9   		or	r9, rcx	# mask, tmp716
 14642              	.LVL837:
 309:sieve_extend.c ****             } while (index_word == wordindex(index));
 14643              		.loc 1 309 17 is_stmt 1 view .LVU5074
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14644              		.loc 1 310 21 view .LVU5075
 14645              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14646              		.loc 1 310 36 is_stmt 0 view .LVU5076
 14647 50a8 49C1EB06 		shr	r11, 6	# tmp718,
 14648              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14649              		.loc 1 310 13 view .LVU5077
 14650 50ac 4D39DE   		cmp	r14, r11	# index_word, tmp718
 14651 50af 0F85AB00 		jne	.L1348	#,
 14651      0000
 307:sieve_extend.c ****                 mask |= markmask(index);
 14652              		.loc 1 307 13 is_stmt 1 view .LVU5078
 308:sieve_extend.c ****                 index += step;
 14653              		.loc 1 308 17 view .LVU5079
 14654              	# sieve_extend.c:308:                 mask |= markmask(index);
 308:sieve_extend.c ****                 index += step;
GAS LISTING /tmp/cc64mrzX.s 			page 393


 14655              		.loc 1 308 25 is_stmt 0 view .LVU5080
 14656 50b5 C442C9F7 		shlx	r15, r10, rsi	# tmp1022, tmp830, index
 14656      FA
 14657              	# sieve_extend.c:309:                 index += step;
 309:sieve_extend.c ****             } while (index_word == wordindex(index));
 14658              		.loc 1 309 23 view .LVU5081
 14659 50ba 4C01C6   		add	rsi, r8	# index, step
 14660              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14661              		.loc 1 310 36 view .LVU5082
 14662 50bd 4889F2   		mov	rdx, rsi	# tmp1023, index
 14663              	# sieve_extend.c:308:                 mask |= markmask(index);
 308:sieve_extend.c ****                 index += step;
 14664              		.loc 1 308 22 view .LVU5083
 14665 50c0 4D09F9   		or	r9, r15	# mask, tmp1022
 14666              	.LVL838:
 309:sieve_extend.c ****             } while (index_word == wordindex(index));
 14667              		.loc 1 309 17 is_stmt 1 view .LVU5084
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14668              		.loc 1 310 21 view .LVU5085
 14669              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14670              		.loc 1 310 36 is_stmt 0 view .LVU5086
 14671 50c3 48C1EA06 		shr	rdx, 6	# tmp1023,
 14672              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14673              		.loc 1 310 13 view .LVU5087
 14674 50c7 4939D6   		cmp	r14, rdx	# index_word, tmp1023
 14675 50ca 0F859000 		jne	.L1348	#,
 14675      0000
 307:sieve_extend.c ****                 mask |= markmask(index);
 14676              		.loc 1 307 13 is_stmt 1 view .LVU5088
 308:sieve_extend.c ****                 index += step;
 14677              		.loc 1 308 17 view .LVU5089
 14678              	# sieve_extend.c:308:                 mask |= markmask(index);
 308:sieve_extend.c ****                 index += step;
 14679              		.loc 1 308 25 is_stmt 0 view .LVU5090
 14680 50d0 C4C2C9F7 		shlx	rax, r10, rsi	# tmp1024, tmp830, index
 14680      C2
 14681              	# sieve_extend.c:309:                 index += step;
 309:sieve_extend.c ****             } while (index_word == wordindex(index));
 14682              		.loc 1 309 23 view .LVU5091
 14683 50d5 4C01C6   		add	rsi, r8	# index, step
 14684              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14685              		.loc 1 310 36 view .LVU5092
 14686 50d8 4889F7   		mov	rdi, rsi	# tmp1025, index
 14687              	# sieve_extend.c:308:                 mask |= markmask(index);
 308:sieve_extend.c ****                 index += step;
 14688              		.loc 1 308 22 view .LVU5093
 14689 50db 4909C1   		or	r9, rax	# mask, tmp1024
 14690              	.LVL839:
 309:sieve_extend.c ****             } while (index_word == wordindex(index));
 14691              		.loc 1 309 17 is_stmt 1 view .LVU5094
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14692              		.loc 1 310 21 view .LVU5095
 14693              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
GAS LISTING /tmp/cc64mrzX.s 			page 394


 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14694              		.loc 1 310 36 is_stmt 0 view .LVU5096
 14695 50de 48C1EF06 		shr	rdi, 6	# tmp1025,
 14696              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14697              		.loc 1 310 13 view .LVU5097
 14698 50e2 4939FE   		cmp	r14, rdi	# index_word, tmp1025
 14699 50e5 7579     		jne	.L1348	#,
 307:sieve_extend.c ****                 mask |= markmask(index);
 14700              		.loc 1 307 13 is_stmt 1 view .LVU5098
 308:sieve_extend.c ****                 index += step;
 14701              		.loc 1 308 17 view .LVU5099
 14702              	# sieve_extend.c:308:                 mask |= markmask(index);
 308:sieve_extend.c ****                 index += step;
 14703              		.loc 1 308 25 is_stmt 0 view .LVU5100
 14704 50e7 C4C2C9F7 		shlx	rcx, r10, rsi	# tmp1026, tmp830, index
 14704      CA
 14705              	# sieve_extend.c:309:                 index += step;
 309:sieve_extend.c ****             } while (index_word == wordindex(index));
 14706              		.loc 1 309 23 view .LVU5101
 14707 50ec 4C01C6   		add	rsi, r8	# index, step
 14708              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14709              		.loc 1 310 36 view .LVU5102
 14710 50ef 4989F3   		mov	r11, rsi	# tmp1027, index
 14711              	# sieve_extend.c:308:                 mask |= markmask(index);
 308:sieve_extend.c ****                 index += step;
 14712              		.loc 1 308 22 view .LVU5103
 14713 50f2 4909C9   		or	r9, rcx	# mask, tmp1026
 14714              	.LVL840:
 309:sieve_extend.c ****             } while (index_word == wordindex(index));
 14715              		.loc 1 309 17 is_stmt 1 view .LVU5104
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14716              		.loc 1 310 21 view .LVU5105
 14717              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14718              		.loc 1 310 36 is_stmt 0 view .LVU5106
 14719 50f5 49C1EB06 		shr	r11, 6	# tmp1027,
 14720              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14721              		.loc 1 310 13 view .LVU5107
 14722 50f9 4D39DE   		cmp	r14, r11	# index_word, tmp1027
 14723 50fc 7562     		jne	.L1348	#,
 307:sieve_extend.c ****                 mask |= markmask(index);
 14724              		.loc 1 307 13 is_stmt 1 view .LVU5108
 308:sieve_extend.c ****                 index += step;
 14725              		.loc 1 308 17 view .LVU5109
 14726              	# sieve_extend.c:308:                 mask |= markmask(index);
 308:sieve_extend.c ****                 index += step;
 14727              		.loc 1 308 25 is_stmt 0 view .LVU5110
 14728 50fe C442C9F7 		shlx	r15, r10, rsi	# tmp1028, tmp830, index
 14728      FA
 14729              	# sieve_extend.c:309:                 index += step;
 309:sieve_extend.c ****             } while (index_word == wordindex(index));
 14730              		.loc 1 309 23 view .LVU5111
 14731 5103 4C01C6   		add	rsi, r8	# index, step
 14732              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
GAS LISTING /tmp/cc64mrzX.s 			page 395


 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14733              		.loc 1 310 36 view .LVU5112
 14734 5106 4889F2   		mov	rdx, rsi	# tmp1029, index
 14735              	# sieve_extend.c:308:                 mask |= markmask(index);
 308:sieve_extend.c ****                 index += step;
 14736              		.loc 1 308 22 view .LVU5113
 14737 5109 4D09F9   		or	r9, r15	# mask, tmp1028
 14738              	.LVL841:
 309:sieve_extend.c ****             } while (index_word == wordindex(index));
 14739              		.loc 1 309 17 is_stmt 1 view .LVU5114
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14740              		.loc 1 310 21 view .LVU5115
 14741              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14742              		.loc 1 310 36 is_stmt 0 view .LVU5116
 14743 510c 48C1EA06 		shr	rdx, 6	# tmp1029,
 14744              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14745              		.loc 1 310 13 view .LVU5117
 14746 5110 4939D6   		cmp	r14, rdx	# index_word, tmp1029
 14747 5113 754B     		jne	.L1348	#,
 307:sieve_extend.c ****                 mask |= markmask(index);
 14748              		.loc 1 307 13 is_stmt 1 view .LVU5118
 308:sieve_extend.c ****                 index += step;
 14749              		.loc 1 308 17 view .LVU5119
 14750              	# sieve_extend.c:308:                 mask |= markmask(index);
 308:sieve_extend.c ****                 index += step;
 14751              		.loc 1 308 25 is_stmt 0 view .LVU5120
 14752 5115 C4C2C9F7 		shlx	rax, r10, rsi	# tmp1030, tmp830, index
 14752      C2
 14753              	# sieve_extend.c:309:                 index += step;
 309:sieve_extend.c ****             } while (index_word == wordindex(index));
 14754              		.loc 1 309 23 view .LVU5121
 14755 511a 4C01C6   		add	rsi, r8	# index, step
 14756              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14757              		.loc 1 310 36 view .LVU5122
 14758 511d 4889F7   		mov	rdi, rsi	# tmp1031, index
 14759              	# sieve_extend.c:308:                 mask |= markmask(index);
 308:sieve_extend.c ****                 index += step;
 14760              		.loc 1 308 22 view .LVU5123
 14761 5120 4909C1   		or	r9, rax	# mask, tmp1030
 14762              	.LVL842:
 309:sieve_extend.c ****             } while (index_word == wordindex(index));
 14763              		.loc 1 309 17 is_stmt 1 view .LVU5124
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14764              		.loc 1 310 21 view .LVU5125
 14765              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14766              		.loc 1 310 36 is_stmt 0 view .LVU5126
 14767 5123 48C1EF06 		shr	rdi, 6	# tmp1031,
 14768              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14769              		.loc 1 310 13 view .LVU5127
 14770 5127 4939FE   		cmp	r14, rdi	# index_word, tmp1031
 14771 512a 7534     		jne	.L1348	#,
 307:sieve_extend.c ****                 mask |= markmask(index);
GAS LISTING /tmp/cc64mrzX.s 			page 396


 14772              		.loc 1 307 13 is_stmt 1 view .LVU5128
 308:sieve_extend.c ****                 index += step;
 14773              		.loc 1 308 17 view .LVU5129
 14774              	# sieve_extend.c:308:                 mask |= markmask(index);
 308:sieve_extend.c ****                 index += step;
 14775              		.loc 1 308 25 is_stmt 0 view .LVU5130
 14776 512c C4C2C9F7 		shlx	rcx, r10, rsi	# tmp1032, tmp830, index
 14776      CA
 14777              	# sieve_extend.c:309:                 index += step;
 309:sieve_extend.c ****             } while (index_word == wordindex(index));
 14778              		.loc 1 309 23 view .LVU5131
 14779 5131 4C01C6   		add	rsi, r8	# index, step
 14780              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14781              		.loc 1 310 36 view .LVU5132
 14782 5134 4989F3   		mov	r11, rsi	# tmp1033, index
 14783              	# sieve_extend.c:308:                 mask |= markmask(index);
 308:sieve_extend.c ****                 index += step;
 14784              		.loc 1 308 22 view .LVU5133
 14785 5137 4909C9   		or	r9, rcx	# mask, tmp1032
 14786              	.LVL843:
 309:sieve_extend.c ****             } while (index_word == wordindex(index));
 14787              		.loc 1 309 17 is_stmt 1 view .LVU5134
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14788              		.loc 1 310 21 view .LVU5135
 14789              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14790              		.loc 1 310 36 is_stmt 0 view .LVU5136
 14791 513a 49C1EB06 		shr	r11, 6	# tmp1033,
 14792              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14793              		.loc 1 310 13 view .LVU5137
 14794 513e 4D39DE   		cmp	r14, r11	# index_word, tmp1033
 14795 5141 751D     		jne	.L1348	#,
 307:sieve_extend.c ****                 mask |= markmask(index);
 14796              		.loc 1 307 13 is_stmt 1 view .LVU5138
 308:sieve_extend.c ****                 index += step;
 14797              		.loc 1 308 17 view .LVU5139
 14798              	# sieve_extend.c:308:                 mask |= markmask(index);
 308:sieve_extend.c ****                 index += step;
 14799              		.loc 1 308 25 is_stmt 0 view .LVU5140
 14800 5143 C442C9F7 		shlx	r15, r10, rsi	# tmp1034, tmp830, index
 14800      FA
 14801              	# sieve_extend.c:309:                 index += step;
 309:sieve_extend.c ****             } while (index_word == wordindex(index));
 14802              		.loc 1 309 23 view .LVU5141
 14803 5148 4C01C6   		add	rsi, r8	# index, step
 14804              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14805              		.loc 1 310 36 view .LVU5142
 14806 514b 4889F2   		mov	rdx, rsi	# tmp1035, index
 14807              	# sieve_extend.c:308:                 mask |= markmask(index);
 308:sieve_extend.c ****                 index += step;
 14808              		.loc 1 308 22 view .LVU5143
 14809 514e 4D09F9   		or	r9, r15	# mask, tmp1034
 14810              	.LVL844:
 309:sieve_extend.c ****             } while (index_word == wordindex(index));
GAS LISTING /tmp/cc64mrzX.s 			page 397


 14811              		.loc 1 309 17 is_stmt 1 view .LVU5144
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14812              		.loc 1 310 21 view .LVU5145
 14813              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14814              		.loc 1 310 36 is_stmt 0 view .LVU5146
 14815 5151 48C1EA06 		shr	rdx, 6	# tmp1035,
 14816              	# sieve_extend.c:310:             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14817              		.loc 1 310 13 view .LVU5147
 14818 5155 4939D6   		cmp	r14, rdx	# index_word, tmp1035
 14819 5158 0F843CFF 		je	.L953	#,
 14819      FFFF
 14820 515e 6690     		.p2align 4
 14821              		.p2align 3
 14822              	.L1348:
 313:sieve_extend.c ****         }
 14823              		.loc 1 313 13 is_stmt 1 view .LVU5148
 14824              	# sieve_extend.c:313:             bitarray[index_word] |= mask;
 313:sieve_extend.c ****         }
 14825              		.loc 1 313 34 is_stmt 0 view .LVU5149
 14826 5160 4E090CF3 		or	QWORD PTR [rbx+r14*8], r9	# *_525, mask
 313:sieve_extend.c ****         }
 14827              		.loc 1 313 34 view .LVU5150
 14828              	.LBE638:
 303:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 14829              		.loc 1 303 54 is_stmt 1 view .LVU5151
 14830              	# sieve_extend.c:303:         for (register counter_t index = range_start; index <= range_stop;) {
 303:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 14831              		.loc 1 303 9 is_stmt 0 view .LVU5152
 14832 5164 4939F4   		cmp	r12, rsi	# block_stop, index
 14833 5167 0F8323FF 		jnb	.L954	#,
 14833      FFFF
 303:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 14834              		.loc 1 303 9 view .LVU5153
 14835 516d E9F0FDFF 		jmp	.L952	#
 14835      FF
 14836              	.LVL845:
 14837              		.p2align 4,,7
 14838 5172 660F1F44 		.p2align 3
 14838      0000
 14839              	.L1501:
 303:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 14840              		.loc 1 303 9 view .LVU5154
 14841 5178 4C8B7C24 		mov	r15, QWORD PTR 24[rsp]	# block_start, %sfp
 14841      18
 303:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 14842              		.loc 1 303 9 view .LVU5155
 14843              	.LBE639:
 14844              	.LBE640:
 14845              	.LBE651:
 14846              	.LBE653:
 14847              	.LBE659:
 931:sieve_extend.c ****         step  = prime * 2 + 1;
 14848              		.loc 1 931 11 is_stmt 1 view .LVU5156
 14849 517d 4939F4   		cmp	r12, rsi	# block_stop, index
 14850 5180 0F82AEFA 		jb	.L1482	#,
GAS LISTING /tmp/cc64mrzX.s 			page 398


 14850      FFFF
 932:sieve_extend.c ****         if unlikely(step > VECTORSTEP_FASTER) break;
 14851              		.loc 1 932 9 view .LVU5157
 14852              	# sieve_extend.c:932:         step  = prime * 2 + 1;
 932:sieve_extend.c ****         if unlikely(step > VECTORSTEP_FASTER) break;
 14853              		.loc 1 932 15 is_stmt 0 view .LVU5158
 14854 5186 4C8D5409 		lea	r10, 1[rcx+rcx]	# step,
 14854      01
 14855              	.LVL846:
 933:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 14856              		.loc 1 933 9 is_stmt 1 view .LVU5159
 14857              	# sieve_extend.c:933:         if unlikely(step > VECTORSTEP_FASTER) break;
 933:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 14858              		.loc 1 933 12 is_stmt 0 view .LVU5160
 14859 518b 4C3B1500 		cmp	r10, QWORD PTR global_VECTORSTEP_FASTER[rip]	# step, global_VECTORSTEP_FASTER
 14859      000000
 14860 5192 0F872E01 		ja	.L1503	#,
 14860      0000
 14861 5198 0F1F8400 		.p2align 4
 14861      00000000 
 14862              		.p2align 3
 14863              	.L962:
 934:sieve_extend.c ****         setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
 14864              		.loc 1 934 9 is_stmt 1 view .LVU5161
 14865              	# sieve_extend.c:934:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 934:sieve_extend.c ****         setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
 14866              		.loc 1 934 12 is_stmt 0 view .LVU5162
 14867 51a0 4C8D7101 		lea	r14, 1[rcx]	# _363,
 14868 51a4 4D39FE   		cmp	r14, r15	# _363, block_start
 14869 51a7 7710     		ja	.L964	#,
 934:sieve_extend.c ****         setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
 14870              		.loc 1 934 47 is_stmt 1 view .LVU5163
 14871              	# sieve_extend.c:934:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 934:sieve_extend.c ****         setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
 14872              		.loc 1 934 67 is_stmt 0 view .LVU5164
 14873 51a9 4A8D0439 		lea	rax, [rcx+r15]	# _367,
 14874              	# sieve_extend.c:934:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 934:sieve_extend.c ****         setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
 14875              		.loc 1 934 108 view .LVU5165
 14876 51ad 31D2     		xor	edx, edx	# tmp747
 14877              	# sieve_extend.c:934:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 934:sieve_extend.c ****         setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
 14878              		.loc 1 934 75 view .LVU5166
 14879 51af 488D3408 		lea	rsi, [rax+rcx]	# tmp745,
 14880              	.LVL847:
 14881              	# sieve_extend.c:934:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 934:sieve_extend.c ****         setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
 14882              		.loc 1 934 108 view .LVU5167
 14883 51b3 49F7F2   		div	r10	# step
 14884              	.LVL848:
 14885              	# sieve_extend.c:934:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 934:sieve_extend.c ****         setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
 14886              		.loc 1 934 53 view .LVU5168
 14887 51b6 4829D6   		sub	rsi, rdx	# index, tmp747
 14888              	.LVL849:
 14889              	.L964:
 935:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1 );
GAS LISTING /tmp/cc64mrzX.s 			page 399


 14890              		.loc 1 935 9 is_stmt 1 view .LVU5169
 14891 51b9 4C89E1   		mov	rcx, r12	#, block_stop
 14892 51bc 4C89D2   		mov	rdx, r10	#, step
 14893 51bf 4889DF   		mov	rdi, rbx	#, _30
 14894 51c2 E849C3FF 		call	setBitsTrue_largeRange_vector	#
 14894      FF
 14895              	.LVL850:
 936:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 14896              		.loc 1 936 9 view .LVU5170
 14897              	.LBB660:
 14898              	.LBI660:
 121:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 14899              		.loc 1 121 25 view .LVU5171
 14900              	.LBB661:
 122:sieve_extend.c ****     return index;
 14901              		.loc 1 122 5 view .LVU5172
 122:sieve_extend.c ****     return index;
 14902              		.loc 1 122 11 view .LVU5173
 14903              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14904              		.loc 1 122 21 is_stmt 0 view .LVU5174
 14905 51c7 4C89F1   		mov	rcx, r14	# tmp749, _363
 14906 51ca 48C1E906 		shr	rcx, 6	# tmp749,
 14907              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14908              		.loc 1 122 12 view .LVU5175
 14909 51ce 488B34CB 		mov	rsi, QWORD PTR [rbx+rcx*8]	# *_272, *_272
 14910              	.LBE661:
 14911              	.LBE660:
 14912              	# sieve_extend.c:934:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 934:sieve_extend.c ****         setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
 14913              		.loc 1 934 12 view .LVU5176
 14914 51d2 4C89F1   		mov	rcx, r14	# index, _363
 14915              	.LBB663:
 14916              	.LBB662:
 14917              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14918              		.loc 1 122 11 view .LVU5177
 14919 51d5 4C0FA3F6 		bt	rsi, r14	# *_272, _363
 14920 51d9 0F83C100 		jnc	.L965	#,
 14920      0000
 14921              	.LVL851:
 14922              	.L966:
 122:sieve_extend.c ****     return index;
 14923              		.loc 1 122 58 is_stmt 1 view .LVU5178
 14924              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14925              		.loc 1 122 63 is_stmt 0 view .LVU5179
 14926 51df 4C8D4101 		lea	r8, 1[rcx]	# tmp839,
 14927              	.LVL852:
 14928              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14929              		.loc 1 122 21 view .LVU5180
 14930 51e3 4D89C1   		mov	r9, r8	# tmp754, index
 14931              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14932              		.loc 1 122 63 view .LVU5181
GAS LISTING /tmp/cc64mrzX.s 			page 400


 14933 51e6 4C89C1   		mov	rcx, r8	# index, tmp839
 122:sieve_extend.c ****     return index;
 14934              		.loc 1 122 11 is_stmt 1 view .LVU5182
 14935              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14936              		.loc 1 122 21 is_stmt 0 view .LVU5183
 14937 51e9 49C1E906 		shr	r9, 6	# tmp754,
 14938              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14939              		.loc 1 122 12 view .LVU5184
 14940 51ed 4A8B3CCB 		mov	rdi, QWORD PTR [rbx+r9*8]	# *_376, *_376
 14941              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14942              		.loc 1 122 11 view .LVU5185
 14943 51f1 4C0FA3C7 		bt	rdi, r8	# *_376, index
 14944 51f5 0F83A500 		jnc	.L965	#,
 14944      0000
 122:sieve_extend.c ****     return index;
 14945              		.loc 1 122 58 is_stmt 1 view .LVU5186
 14946              	.LVL853:
 14947              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14948              		.loc 1 122 63 is_stmt 0 view .LVU5187
 14949 51fb 4883C101 		add	rcx, 1	# index,
 14950              	.LVL854:
 122:sieve_extend.c ****     return index;
 14951              		.loc 1 122 11 is_stmt 1 view .LVU5188
 14952              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14953              		.loc 1 122 21 is_stmt 0 view .LVU5189
 14954 51ff 4989CB   		mov	r11, rcx	# tmp966, index
 14955 5202 49C1EB06 		shr	r11, 6	# tmp966,
 14956              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14957              		.loc 1 122 12 view .LVU5190
 14958 5206 4E8B2CDB 		mov	r13, QWORD PTR [rbx+r11*8]	# *_376, *_376
 14959              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14960              		.loc 1 122 11 view .LVU5191
 14961 520a 490FA3CD 		bt	r13, rcx	# *_376, index
 14962 520e 0F838C00 		jnc	.L965	#,
 14962      0000
 122:sieve_extend.c ****     return index;
 14963              		.loc 1 122 58 is_stmt 1 view .LVU5192
 14964              	.LVL855:
 14965              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14966              		.loc 1 122 63 is_stmt 0 view .LVU5193
 14967 5214 498D4802 		lea	rcx, 2[r8]	# index,
 14968              	.LVL856:
 122:sieve_extend.c ****     return index;
 14969              		.loc 1 122 11 is_stmt 1 view .LVU5194
 14970              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14971              		.loc 1 122 21 is_stmt 0 view .LVU5195
 14972 5218 4989CA   		mov	r10, rcx	# tmp970, index
 14973 521b 49C1EA06 		shr	r10, 6	# tmp970,
GAS LISTING /tmp/cc64mrzX.s 			page 401


 14974              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14975              		.loc 1 122 12 view .LVU5196
 14976 521f 4E8B34D3 		mov	r14, QWORD PTR [rbx+r10*8]	# *_376, *_376
 14977              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14978              		.loc 1 122 11 view .LVU5197
 14979 5223 490FA3CE 		bt	r14, rcx	# *_376, index
 14980 5227 7377     		jnc	.L965	#,
 122:sieve_extend.c ****     return index;
 14981              		.loc 1 122 58 is_stmt 1 view .LVU5198
 14982              	.LVL857:
 14983              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14984              		.loc 1 122 63 is_stmt 0 view .LVU5199
 14985 5229 498D4803 		lea	rcx, 3[r8]	# index,
 14986              	.LVL858:
 122:sieve_extend.c ****     return index;
 14987              		.loc 1 122 11 is_stmt 1 view .LVU5200
 14988              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14989              		.loc 1 122 21 is_stmt 0 view .LVU5201
 14990 522d 4889C8   		mov	rax, rcx	# tmp974, index
 14991 5230 48C1E806 		shr	rax, 6	# tmp974,
 14992              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14993              		.loc 1 122 12 view .LVU5202
 14994 5234 488B14C3 		mov	rdx, QWORD PTR [rbx+rax*8]	# *_376, *_376
 14995              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 14996              		.loc 1 122 11 view .LVU5203
 14997 5238 480FA3CA 		bt	rdx, rcx	# *_376, index
 14998 523c 7362     		jnc	.L965	#,
 122:sieve_extend.c ****     return index;
 14999              		.loc 1 122 58 is_stmt 1 view .LVU5204
 15000              	.LVL859:
 15001              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 15002              		.loc 1 122 63 is_stmt 0 view .LVU5205
 15003 523e 498D4804 		lea	rcx, 4[r8]	# index,
 15004              	.LVL860:
 122:sieve_extend.c ****     return index;
 15005              		.loc 1 122 11 is_stmt 1 view .LVU5206
 15006              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 15007              		.loc 1 122 21 is_stmt 0 view .LVU5207
 15008 5242 4889CE   		mov	rsi, rcx	# tmp978, index
 15009 5245 48C1EE06 		shr	rsi, 6	# tmp978,
 15010              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 15011              		.loc 1 122 12 view .LVU5208
 15012 5249 4C8B0CF3 		mov	r9, QWORD PTR [rbx+rsi*8]	# *_376, *_376
 15013              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 15014              		.loc 1 122 11 view .LVU5209
 15015 524d 490FA3C9 		bt	r9, rcx	# *_376, index
 15016 5251 734D     		jnc	.L965	#,
GAS LISTING /tmp/cc64mrzX.s 			page 402


 122:sieve_extend.c ****     return index;
 15017              		.loc 1 122 58 is_stmt 1 view .LVU5210
 15018              	.LVL861:
 15019              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 15020              		.loc 1 122 63 is_stmt 0 view .LVU5211
 15021 5253 498D4805 		lea	rcx, 5[r8]	# index,
 15022              	.LVL862:
 122:sieve_extend.c ****     return index;
 15023              		.loc 1 122 11 is_stmt 1 view .LVU5212
 15024              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 15025              		.loc 1 122 21 is_stmt 0 view .LVU5213
 15026 5257 4889CF   		mov	rdi, rcx	# tmp982, index
 15027 525a 48C1EF06 		shr	rdi, 6	# tmp982,
 15028              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 15029              		.loc 1 122 12 view .LVU5214
 15030 525e 4C8B1CFB 		mov	r11, QWORD PTR [rbx+rdi*8]	# *_376, *_376
 15031              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 15032              		.loc 1 122 11 view .LVU5215
 15033 5262 490FA3CB 		bt	r11, rcx	# *_376, index
 15034 5266 7338     		jnc	.L965	#,
 122:sieve_extend.c ****     return index;
 15035              		.loc 1 122 58 is_stmt 1 view .LVU5216
 15036              	.LVL863:
 15037              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 15038              		.loc 1 122 63 is_stmt 0 view .LVU5217
 15039 5268 498D4806 		lea	rcx, 6[r8]	# index,
 15040              	.LVL864:
 122:sieve_extend.c ****     return index;
 15041              		.loc 1 122 11 is_stmt 1 view .LVU5218
 15042              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 15043              		.loc 1 122 21 is_stmt 0 view .LVU5219
 15044 526c 4989CD   		mov	r13, rcx	# tmp986, index
 15045 526f 49C1ED06 		shr	r13, 6	# tmp986,
 15046              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 15047              		.loc 1 122 12 view .LVU5220
 15048 5273 4E8B14EB 		mov	r10, QWORD PTR [rbx+r13*8]	# *_376, *_376
 15049              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 15050              		.loc 1 122 11 view .LVU5221
 15051 5277 490FA3CA 		bt	r10, rcx	# *_376, index
 15052 527b 7323     		jnc	.L965	#,
 122:sieve_extend.c ****     return index;
 15053              		.loc 1 122 58 is_stmt 1 view .LVU5222
 15054              	.LVL865:
 15055              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 15056              		.loc 1 122 63 is_stmt 0 view .LVU5223
 15057 527d 498D4807 		lea	rcx, 7[r8]	# index,
 15058              	.LVL866:
 122:sieve_extend.c ****     return index;
GAS LISTING /tmp/cc64mrzX.s 			page 403


 15059              		.loc 1 122 11 is_stmt 1 view .LVU5224
 15060              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 15061              		.loc 1 122 21 is_stmt 0 view .LVU5225
 15062 5281 4989C8   		mov	r8, rcx	# tmp990, index
 15063 5284 49C1E806 		shr	r8, 6	# tmp990,
 15064              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 15065              		.loc 1 122 12 view .LVU5226
 15066 5288 4E8B34C3 		mov	r14, QWORD PTR [rbx+r8*8]	# *_376, *_376
 15067              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 15068              		.loc 1 122 11 view .LVU5227
 15069 528c 490FA3CE 		bt	r14, rcx	# *_376, index
 15070 5290 0F8249FF 		jc	.L966	#,
 15070      FFFF
 15071              	.LVL867:
 15072 5296 662E0F1F 		.p2align 4
 15072      84000000 
 15072      0000
 15073              		.p2align 3
 15074              	.L965:
 123:sieve_extend.c **** }
 15075              		.loc 1 123 5 is_stmt 1 view .LVU5228
 123:sieve_extend.c **** }
 15076              		.loc 1 123 5 is_stmt 0 view .LVU5229
 15077              	.LBE662:
 15078              	.LBE663:
 937:sieve_extend.c ****     }
 15079              		.loc 1 937 9 is_stmt 1 view .LVU5230
 15080              	# sieve_extend.c:937:         start = prime * prime * 2 + prime * 2;
 937:sieve_extend.c ****     }
 15081              		.loc 1 937 35 is_stmt 0 view .LVU5231
 15082 52a0 488D7101 		lea	rsi, 1[rcx]	# _411,
 15083              	# sieve_extend.c:937:         start = prime * prime * 2 + prime * 2;
 937:sieve_extend.c ****     }
 15084              		.loc 1 937 15 view .LVU5232
 15085 52a4 480FAFF1 		imul	rsi, rcx	# tmp760, index
 15086              	.LVL868:
 937:sieve_extend.c ****     }
 15087              		.loc 1 937 15 view .LVU5233
 15088 52a8 4801F6   		add	rsi, rsi	# index
 15089              	.LVL869:
 931:sieve_extend.c ****         step  = prime * 2 + 1;
 15090              		.loc 1 931 11 is_stmt 1 view .LVU5234
 15091 52ab 4939F4   		cmp	r12, rsi	# block_stop, index
 15092 52ae 0F8280F9 		jb	.L1482	#,
 15092      FFFF
 932:sieve_extend.c ****         if unlikely(step > VECTORSTEP_FASTER) break;
 15093              		.loc 1 932 9 view .LVU5235
 15094              	# sieve_extend.c:932:         step  = prime * 2 + 1;
 932:sieve_extend.c ****         if unlikely(step > VECTORSTEP_FASTER) break;
 15095              		.loc 1 932 15 is_stmt 0 view .LVU5236
 15096 52b4 4C8D5409 		lea	r10, 1[rcx+rcx]	# step,
 15096      01
 15097              	.LVL870:
 933:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
GAS LISTING /tmp/cc64mrzX.s 			page 404


 15098              		.loc 1 933 9 is_stmt 1 view .LVU5237
 15099              	# sieve_extend.c:933:         if unlikely(step > VECTORSTEP_FASTER) break;
 933:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 15100              		.loc 1 933 12 is_stmt 0 view .LVU5238
 15101 52b9 4C3B1500 		cmp	r10, QWORD PTR global_VECTORSTEP_FASTER[rip]	# step, global_VECTORSTEP_FASTER
 15101      000000
 15102 52c0 0F86DAFE 		jbe	.L962	#,
 15102      FFFF
 15103              	.L1503:
 940:sieve_extend.c ****         step  = prime * 2 + 1;
 15104              		.loc 1 940 11 is_stmt 1 view .LVU5239
 15105 52c6 4939F4   		cmp	r12, rsi	# block_stop, index
 15106 52c9 0F8265F9 		jb	.L1482	#,
 15106      FFFF
 940:sieve_extend.c ****         step  = prime * 2 + 1;
 15107              		.loc 1 940 11 is_stmt 0 view .LVU5240
 15108 52cf 4C8D5101 		lea	r10, 1[rcx]	# _411,
 15109              	.LVL871:
 15110 52d3 66662E0F 		.p2align 4
 15110      1F840000 
 15110      00000066 
 15110      90
 15111              		.p2align 3
 15112              	.L963:
 941:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 15113              		.loc 1 941 9 is_stmt 1 view .LVU5241
 15114              	# sieve_extend.c:942:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 942:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 15115              		.loc 1 942 12 is_stmt 0 view .LVU5242
 15116 52e0 4D39FA   		cmp	r10, r15	# _411, block_start
 15117              	# sieve_extend.c:941:         step  = prime * 2 + 1;
 941:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 15118              		.loc 1 941 15 view .LVU5243
 15119 52e3 4C8D5C09 		lea	r11, 1[rcx+rcx]	# step,
 15119      01
 15120              	.LVL872:
 942:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 15121              		.loc 1 942 9 is_stmt 1 view .LVU5244
 15122              	# sieve_extend.c:942:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 942:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 15123              		.loc 1 942 12 is_stmt 0 view .LVU5245
 15124 52e8 7710     		ja	.L967	#,
 942:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 15125              		.loc 1 942 47 is_stmt 1 view .LVU5246
 15126              	# sieve_extend.c:942:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 942:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 15127              		.loc 1 942 67 is_stmt 0 view .LVU5247
 15128 52ea 4A8D0439 		lea	rax, [rcx+r15]	# _393,
 15129              	# sieve_extend.c:942:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 942:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 15130              		.loc 1 942 108 view .LVU5248
 15131 52ee 31D2     		xor	edx, edx	# tmp764
 15132              	# sieve_extend.c:942:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 942:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 15133              		.loc 1 942 75 view .LVU5249
 15134 52f0 488D3408 		lea	rsi, [rax+rcx]	# tmp762,
 15135              	.LVL873:
GAS LISTING /tmp/cc64mrzX.s 			page 405


 15136              	# sieve_extend.c:942:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 942:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 15137              		.loc 1 942 108 view .LVU5250
 15138 52f4 49F7F3   		div	r11	# step
 15139              	.LVL874:
 15140              	# sieve_extend.c:942:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 942:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 15141              		.loc 1 942 53 view .LVU5251
 15142 52f7 4829D6   		sub	rsi, rdx	# index, tmp764
 15143              	.LVL875:
 15144              	.L967:
 943:sieve_extend.c ****         setBitsTrue_largeRange(bitarray, start, step, block_stop);
 15145              		.loc 1 943 9 is_stmt 1 view .LVU5252
 15146              	# sieve_extend.c:943:         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 943:sieve_extend.c ****         setBitsTrue_largeRange(bitarray, start, step, block_stop);
 15147              		.loc 1 943 12 is_stmt 0 view .LVU5253
 15148 52fa 4D89DD   		mov	r13, r11	# tmp766, step
 15149 52fd 49C1E506 		sal	r13, 6	# tmp766,
 15150 5301 4901F5   		add	r13, rsi	# _399, index
 15151 5304 4D39EC   		cmp	r12, r13	# block_stop, _399
 15152 5307 0F825302 		jb	.L968	#,
 15152      0000
 15153              	.LVL876:
 15154              	.LBB664:
 15155              	.LBB665:
 15156              	.LBB666:
 417:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 15157              		.loc 1 417 50 is_stmt 1 view .LVU5254
 15158              	# sieve_extend.c:417:     for (register counter_t index = range_start; index < range_stop_unique; i
 417:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 15159              		.loc 1 417 5 is_stmt 0 view .LVU5255
 15160 530d 4C39EE   		cmp	rsi, r13	# index, _399
 15161 5310 0F83CB01 		jnb	.L979	#,
 15161      0000
 15162              	.LBB667:
 15163              	.LBB668:
 15164              	# sieve_extend.c:176:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 176:sieve_extend.c **** 
 15165              		.loc 1 176 133 view .LVU5256
 15166 5316 488B4C24 		mov	rcx, QWORD PTR 16[rsp]	# range_stop_word, %sfp
 15166      10
 15167              	# sieve_extend.c:176:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 176:sieve_extend.c **** 
 15168              		.loc 1 176 110 view .LVU5257
 15169 531b 4F8D049B 		lea	r8, [r11+r11*4]	# tmp776,
 15170 531f 4D89DE   		mov	r14, r11	# _1406, step
 15171              	# sieve_extend.c:182:        index_ptr+=step;
 182:sieve_extend.c ****        *index_ptr |= mask;
 15172              		.loc 1 182 17 view .LVU5258
 15173 5322 4A8D14DD 		lea	rdx, 0[0+r11*8]	# _626,
 15173      00000000 
 15174              	# sieve_extend.c:176:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 176:sieve_extend.c **** 
 15175              		.loc 1 176 133 view .LVU5259
 15176 532a 4989C9   		mov	r9, rcx	# tmp778, range_stop_word
 15177 532d 4D29C1   		sub	r9, r8	# tmp778, tmp776
 15178              	# sieve_extend.c:176:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
GAS LISTING /tmp/cc64mrzX.s 			page 406


 176:sieve_extend.c **** 
 15179              		.loc 1 176 53 view .LVU5260
 15180 5330 4C39C1   		cmp	rcx, r8	# range_stop_word, tmp776
 15181 5333 4E8D0CCB 		lea	r9, [rbx+r9*8]	# tmp780,
 15182 5337 4C0F46CB 		cmovbe	r9, rbx	# _30,, fast_loop_ptr
 15183 533b 49C1E003 		sal	r8, 3	# tmp784,
 15184 533f 49C1E604 		sal	r14, 4	# _1406,
 15185 5343 66662E0F 		.p2align 4
 15185      1F840000 
 15185      00000066 
 15185      90
 15186              		.p2align 3
 15187              	.L978:
 176:sieve_extend.c **** 
 15188              		.loc 1 176 53 view .LVU5261
 15189              	.LBE668:
 15190              	.LBE667:
 418:sieve_extend.c ****     }
 15191              		.loc 1 418 9 is_stmt 1 view .LVU5262
 15192 5350 4889F0   		mov	rax, rsi	# tmp787, index
 15193 5353 BF010000 		mov	edi, 1	# tmp1728,
 15193      00
 15194 5358 48C1E806 		shr	rax, 6	# tmp787,
 15195 535c C4E2C9F7 		shlx	rcx, rdi, rsi	# _611, tmp1728, index
 15195      CF
 15196              	.LVL877:
 15197              	.LBB671:
 15198              	.LBI667:
 146:sieve_extend.c **** //#if __APPLE__
 15199              		.loc 1 146 20 view .LVU5263
 15200              	.LBB669:
 174:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 15201              		.loc 1 174 4 view .LVU5264
 175:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 15202              		.loc 1 175 4 view .LVU5265
 15203              	# sieve_extend.c:175:    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(
 175:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 15204              		.loc 1 175 78 is_stmt 0 view .LVU5266
 15205 5361 488D04C3 		lea	rax, [rbx+rax*8]	# index_ptr,
 15206              	.LVL878:
 176:sieve_extend.c **** 
 15207              		.loc 1 176 4 is_stmt 1 view .LVU5267
 180:sieve_extend.c ****        *index_ptr |= mask;
 15208              		.loc 1 180 4 view .LVU5268
 180:sieve_extend.c ****        *index_ptr |= mask;
 15209              		.loc 1 180 10 view .LVU5269
 15210 5365 4C39C8   		cmp	rax, r9	# index_ptr, fast_loop_ptr
 15211 5368 0F830201 		jnb	.L973	#,
 15211      0000
 180:sieve_extend.c ****        *index_ptr |= mask;
 15212              		.loc 1 180 10 is_stmt 0 view .LVU5270
 15213 536e 4A8D3C30 		lea	rdi, [rax+r14]	# ivtmp.554,
 15214              	.L974:
 181:sieve_extend.c ****        index_ptr+=step;
 15215              		.loc 1 181 8 is_stmt 1 view .LVU5271
 15216              	# sieve_extend.c:181:        *index_ptr |= mask;
 181:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/cc64mrzX.s 			page 407


 15217              		.loc 1 181 19 is_stmt 0 view .LVU5272
 15218 5372 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_906, offset: 0B], _611
 182:sieve_extend.c ****        *index_ptr |= mask;
 15219              		.loc 1 182 8 is_stmt 1 view .LVU5273
 15220              	.LVL879:
 183:sieve_extend.c ****        index_ptr+=step;
 15221              		.loc 1 183 8 view .LVU5274
 15222              	# sieve_extend.c:183:        *index_ptr |= mask;
 183:sieve_extend.c ****        index_ptr+=step;
 15223              		.loc 1 183 19 is_stmt 0 view .LVU5275
 15224 5375 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_906, index: _626, offset: 0B], _611
 184:sieve_extend.c ****        *index_ptr |= mask;
 15225              		.loc 1 184 8 is_stmt 1 view .LVU5276
 15226              	.LVL880:
 185:sieve_extend.c ****        index_ptr+=step;
 15227              		.loc 1 185 8 view .LVU5277
 15228              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 15229              		.loc 1 185 19 is_stmt 0 view .LVU5278
 15230 5379 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _1412, offset: 0B], _611
 186:sieve_extend.c ****        *index_ptr |= mask;
 15231              		.loc 1 186 8 is_stmt 1 view .LVU5279
 15232              	.LVL881:
 187:sieve_extend.c ****        index_ptr+=step;
 15233              		.loc 1 187 8 view .LVU5280
 15234              	# sieve_extend.c:187:        *index_ptr |= mask;
 187:sieve_extend.c ****        index_ptr+=step;
 15235              		.loc 1 187 19 is_stmt 0 view .LVU5281
 15236 537c 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _1412, index: _626, offset: 0B], _611
 188:sieve_extend.c ****        *index_ptr |= mask;
 15237              		.loc 1 188 8 is_stmt 1 view .LVU5282
 15238              	.LVL882:
 189:sieve_extend.c ****        index_ptr+=step;
 15239              		.loc 1 189 8 view .LVU5283
 15240 5380 4C01C7   		add	rdi, r8	# ivtmp.554, tmp784
 15241              	# sieve_extend.c:189:        *index_ptr |= mask;
 189:sieve_extend.c ****        index_ptr+=step;
 15242              		.loc 1 189 19 is_stmt 0 view .LVU5284
 15243 5383 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_906, index: _626, step: 4, offset: 0B], _611
 190:sieve_extend.c ****    }
 15244              		.loc 1 190 8 is_stmt 1 view .LVU5285
 15245 5387 4C01C0   		add	rax, r8	# index_ptr, tmp784
 15246              	.LVL883:
 180:sieve_extend.c ****        *index_ptr |= mask;
 15247              		.loc 1 180 10 view .LVU5286
 15248 538a 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 15249 538d 0F86DD00 		jbe	.L973	#,
 15249      0000
 181:sieve_extend.c ****        index_ptr+=step;
 15250              		.loc 1 181 8 view .LVU5287
 15251              	# sieve_extend.c:181:        *index_ptr |= mask;
 181:sieve_extend.c ****        index_ptr+=step;
 15252              		.loc 1 181 19 is_stmt 0 view .LVU5288
 15253 5393 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_906, offset: 0B], _611
 182:sieve_extend.c ****        *index_ptr |= mask;
 15254              		.loc 1 182 8 is_stmt 1 view .LVU5289
 15255              	.LVL884:
GAS LISTING /tmp/cc64mrzX.s 			page 408


 183:sieve_extend.c ****        index_ptr+=step;
 15256              		.loc 1 183 8 view .LVU5290
 15257              	# sieve_extend.c:183:        *index_ptr |= mask;
 183:sieve_extend.c ****        index_ptr+=step;
 15258              		.loc 1 183 19 is_stmt 0 view .LVU5291
 15259 5396 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_906, index: _626, offset: 0B], _611
 184:sieve_extend.c ****        *index_ptr |= mask;
 15260              		.loc 1 184 8 is_stmt 1 view .LVU5292
 15261              	.LVL885:
 185:sieve_extend.c ****        index_ptr+=step;
 15262              		.loc 1 185 8 view .LVU5293
 15263              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 15264              		.loc 1 185 19 is_stmt 0 view .LVU5294
 15265 539a 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _1412, offset: 0B], _611
 186:sieve_extend.c ****        *index_ptr |= mask;
 15266              		.loc 1 186 8 is_stmt 1 view .LVU5295
 15267              	.LVL886:
 187:sieve_extend.c ****        index_ptr+=step;
 15268              		.loc 1 187 8 view .LVU5296
 15269              	# sieve_extend.c:187:        *index_ptr |= mask;
 187:sieve_extend.c ****        index_ptr+=step;
 15270              		.loc 1 187 19 is_stmt 0 view .LVU5297
 15271 539d 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _1412, index: _626, offset: 0B], _611
 188:sieve_extend.c ****        *index_ptr |= mask;
 15272              		.loc 1 188 8 is_stmt 1 view .LVU5298
 15273              	.LVL887:
 189:sieve_extend.c ****        index_ptr+=step;
 15274              		.loc 1 189 8 view .LVU5299
 15275 53a1 4C01C7   		add	rdi, r8	# ivtmp.554, tmp784
 15276              	# sieve_extend.c:189:        *index_ptr |= mask;
 189:sieve_extend.c ****        index_ptr+=step;
 15277              		.loc 1 189 19 is_stmt 0 view .LVU5300
 15278 53a4 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_906, index: _626, step: 4, offset: 0B], _611
 190:sieve_extend.c ****    }
 15279              		.loc 1 190 8 is_stmt 1 view .LVU5301
 15280 53a8 4C01C0   		add	rax, r8	# index_ptr, tmp784
 15281              	.LVL888:
 180:sieve_extend.c ****        *index_ptr |= mask;
 15282              		.loc 1 180 10 view .LVU5302
 15283 53ab 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 15284 53ae 0F86BC00 		jbe	.L973	#,
 15284      0000
 181:sieve_extend.c ****        index_ptr+=step;
 15285              		.loc 1 181 8 view .LVU5303
 15286              	# sieve_extend.c:181:        *index_ptr |= mask;
 181:sieve_extend.c ****        index_ptr+=step;
 15287              		.loc 1 181 19 is_stmt 0 view .LVU5304
 15288 53b4 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_906, offset: 0B], _611
 182:sieve_extend.c ****        *index_ptr |= mask;
 15289              		.loc 1 182 8 is_stmt 1 view .LVU5305
 15290              	.LVL889:
 183:sieve_extend.c ****        index_ptr+=step;
 15291              		.loc 1 183 8 view .LVU5306
 15292              	# sieve_extend.c:183:        *index_ptr |= mask;
 183:sieve_extend.c ****        index_ptr+=step;
 15293              		.loc 1 183 19 is_stmt 0 view .LVU5307
GAS LISTING /tmp/cc64mrzX.s 			page 409


 15294 53b7 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_906, index: _626, offset: 0B], _611
 184:sieve_extend.c ****        *index_ptr |= mask;
 15295              		.loc 1 184 8 is_stmt 1 view .LVU5308
 15296              	.LVL890:
 185:sieve_extend.c ****        index_ptr+=step;
 15297              		.loc 1 185 8 view .LVU5309
 15298              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 15299              		.loc 1 185 19 is_stmt 0 view .LVU5310
 15300 53bb 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _1412, offset: 0B], _611
 186:sieve_extend.c ****        *index_ptr |= mask;
 15301              		.loc 1 186 8 is_stmt 1 view .LVU5311
 15302              	.LVL891:
 187:sieve_extend.c ****        index_ptr+=step;
 15303              		.loc 1 187 8 view .LVU5312
 15304              	# sieve_extend.c:187:        *index_ptr |= mask;
 187:sieve_extend.c ****        index_ptr+=step;
 15305              		.loc 1 187 19 is_stmt 0 view .LVU5313
 15306 53be 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _1412, index: _626, offset: 0B], _611
 188:sieve_extend.c ****        *index_ptr |= mask;
 15307              		.loc 1 188 8 is_stmt 1 view .LVU5314
 15308              	.LVL892:
 189:sieve_extend.c ****        index_ptr+=step;
 15309              		.loc 1 189 8 view .LVU5315
 15310 53c2 4C01C7   		add	rdi, r8	# ivtmp.554, tmp784
 15311              	# sieve_extend.c:189:        *index_ptr |= mask;
 189:sieve_extend.c ****        index_ptr+=step;
 15312              		.loc 1 189 19 is_stmt 0 view .LVU5316
 15313 53c5 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_906, index: _626, step: 4, offset: 0B], _611
 190:sieve_extend.c ****    }
 15314              		.loc 1 190 8 is_stmt 1 view .LVU5317
 15315 53c9 4C01C0   		add	rax, r8	# index_ptr, tmp784
 15316              	.LVL893:
 180:sieve_extend.c ****        *index_ptr |= mask;
 15317              		.loc 1 180 10 view .LVU5318
 15318 53cc 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 15319 53cf 0F869B00 		jbe	.L973	#,
 15319      0000
 181:sieve_extend.c ****        index_ptr+=step;
 15320              		.loc 1 181 8 view .LVU5319
 15321              	# sieve_extend.c:181:        *index_ptr |= mask;
 181:sieve_extend.c ****        index_ptr+=step;
 15322              		.loc 1 181 19 is_stmt 0 view .LVU5320
 15323 53d5 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_906, offset: 0B], _611
 182:sieve_extend.c ****        *index_ptr |= mask;
 15324              		.loc 1 182 8 is_stmt 1 view .LVU5321
 15325              	.LVL894:
 183:sieve_extend.c ****        index_ptr+=step;
 15326              		.loc 1 183 8 view .LVU5322
 15327              	# sieve_extend.c:183:        *index_ptr |= mask;
 183:sieve_extend.c ****        index_ptr+=step;
 15328              		.loc 1 183 19 is_stmt 0 view .LVU5323
 15329 53d8 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_906, index: _626, offset: 0B], _611
 184:sieve_extend.c ****        *index_ptr |= mask;
 15330              		.loc 1 184 8 is_stmt 1 view .LVU5324
 15331              	.LVL895:
 185:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/cc64mrzX.s 			page 410


 15332              		.loc 1 185 8 view .LVU5325
 15333              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 15334              		.loc 1 185 19 is_stmt 0 view .LVU5326
 15335 53dc 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _1412, offset: 0B], _611
 186:sieve_extend.c ****        *index_ptr |= mask;
 15336              		.loc 1 186 8 is_stmt 1 view .LVU5327
 15337              	.LVL896:
 187:sieve_extend.c ****        index_ptr+=step;
 15338              		.loc 1 187 8 view .LVU5328
 15339              	# sieve_extend.c:187:        *index_ptr |= mask;
 187:sieve_extend.c ****        index_ptr+=step;
 15340              		.loc 1 187 19 is_stmt 0 view .LVU5329
 15341 53df 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _1412, index: _626, offset: 0B], _611
 188:sieve_extend.c ****        *index_ptr |= mask;
 15342              		.loc 1 188 8 is_stmt 1 view .LVU5330
 15343              	.LVL897:
 189:sieve_extend.c ****        index_ptr+=step;
 15344              		.loc 1 189 8 view .LVU5331
 15345 53e3 4C01C7   		add	rdi, r8	# ivtmp.554, tmp784
 15346              	# sieve_extend.c:189:        *index_ptr |= mask;
 189:sieve_extend.c ****        index_ptr+=step;
 15347              		.loc 1 189 19 is_stmt 0 view .LVU5332
 15348 53e6 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_906, index: _626, step: 4, offset: 0B], _611
 190:sieve_extend.c ****    }
 15349              		.loc 1 190 8 is_stmt 1 view .LVU5333
 15350 53ea 4C01C0   		add	rax, r8	# index_ptr, tmp784
 15351              	.LVL898:
 180:sieve_extend.c ****        *index_ptr |= mask;
 15352              		.loc 1 180 10 view .LVU5334
 15353 53ed 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 15354 53f0 767E     		jbe	.L973	#,
 181:sieve_extend.c ****        index_ptr+=step;
 15355              		.loc 1 181 8 view .LVU5335
 15356              	# sieve_extend.c:181:        *index_ptr |= mask;
 181:sieve_extend.c ****        index_ptr+=step;
 15357              		.loc 1 181 19 is_stmt 0 view .LVU5336
 15358 53f2 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_906, offset: 0B], _611
 182:sieve_extend.c ****        *index_ptr |= mask;
 15359              		.loc 1 182 8 is_stmt 1 view .LVU5337
 15360              	.LVL899:
 183:sieve_extend.c ****        index_ptr+=step;
 15361              		.loc 1 183 8 view .LVU5338
 15362              	# sieve_extend.c:183:        *index_ptr |= mask;
 183:sieve_extend.c ****        index_ptr+=step;
 15363              		.loc 1 183 19 is_stmt 0 view .LVU5339
 15364 53f5 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_906, index: _626, offset: 0B], _611
 184:sieve_extend.c ****        *index_ptr |= mask;
 15365              		.loc 1 184 8 is_stmt 1 view .LVU5340
 15366              	.LVL900:
 185:sieve_extend.c ****        index_ptr+=step;
 15367              		.loc 1 185 8 view .LVU5341
 15368              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 15369              		.loc 1 185 19 is_stmt 0 view .LVU5342
 15370 53f9 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _1412, offset: 0B], _611
 186:sieve_extend.c ****        *index_ptr |= mask;
GAS LISTING /tmp/cc64mrzX.s 			page 411


 15371              		.loc 1 186 8 is_stmt 1 view .LVU5343
 15372              	.LVL901:
 187:sieve_extend.c ****        index_ptr+=step;
 15373              		.loc 1 187 8 view .LVU5344
 15374              	# sieve_extend.c:187:        *index_ptr |= mask;
 187:sieve_extend.c ****        index_ptr+=step;
 15375              		.loc 1 187 19 is_stmt 0 view .LVU5345
 15376 53fc 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _1412, index: _626, offset: 0B], _611
 188:sieve_extend.c ****        *index_ptr |= mask;
 15377              		.loc 1 188 8 is_stmt 1 view .LVU5346
 15378              	.LVL902:
 189:sieve_extend.c ****        index_ptr+=step;
 15379              		.loc 1 189 8 view .LVU5347
 15380 5400 4C01C7   		add	rdi, r8	# ivtmp.554, tmp784
 15381              	# sieve_extend.c:189:        *index_ptr |= mask;
 189:sieve_extend.c ****        index_ptr+=step;
 15382              		.loc 1 189 19 is_stmt 0 view .LVU5348
 15383 5403 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_906, index: _626, step: 4, offset: 0B], _611
 190:sieve_extend.c ****    }
 15384              		.loc 1 190 8 is_stmt 1 view .LVU5349
 15385 5407 4C01C0   		add	rax, r8	# index_ptr, tmp784
 15386              	.LVL903:
 180:sieve_extend.c ****        *index_ptr |= mask;
 15387              		.loc 1 180 10 view .LVU5350
 15388 540a 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 15389 540d 7661     		jbe	.L973	#,
 181:sieve_extend.c ****        index_ptr+=step;
 15390              		.loc 1 181 8 view .LVU5351
 15391              	# sieve_extend.c:181:        *index_ptr |= mask;
 181:sieve_extend.c ****        index_ptr+=step;
 15392              		.loc 1 181 19 is_stmt 0 view .LVU5352
 15393 540f 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_906, offset: 0B], _611
 182:sieve_extend.c ****        *index_ptr |= mask;
 15394              		.loc 1 182 8 is_stmt 1 view .LVU5353
 15395              	.LVL904:
 183:sieve_extend.c ****        index_ptr+=step;
 15396              		.loc 1 183 8 view .LVU5354
 15397              	# sieve_extend.c:183:        *index_ptr |= mask;
 183:sieve_extend.c ****        index_ptr+=step;
 15398              		.loc 1 183 19 is_stmt 0 view .LVU5355
 15399 5412 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_906, index: _626, offset: 0B], _611
 184:sieve_extend.c ****        *index_ptr |= mask;
 15400              		.loc 1 184 8 is_stmt 1 view .LVU5356
 15401              	.LVL905:
 185:sieve_extend.c ****        index_ptr+=step;
 15402              		.loc 1 185 8 view .LVU5357
 15403              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 15404              		.loc 1 185 19 is_stmt 0 view .LVU5358
 15405 5416 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _1412, offset: 0B], _611
 186:sieve_extend.c ****        *index_ptr |= mask;
 15406              		.loc 1 186 8 is_stmt 1 view .LVU5359
 15407              	.LVL906:
 187:sieve_extend.c ****        index_ptr+=step;
 15408              		.loc 1 187 8 view .LVU5360
 15409              	# sieve_extend.c:187:        *index_ptr |= mask;
 187:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/cc64mrzX.s 			page 412


 15410              		.loc 1 187 19 is_stmt 0 view .LVU5361
 15411 5419 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _1412, index: _626, offset: 0B], _611
 188:sieve_extend.c ****        *index_ptr |= mask;
 15412              		.loc 1 188 8 is_stmt 1 view .LVU5362
 15413              	.LVL907:
 189:sieve_extend.c ****        index_ptr+=step;
 15414              		.loc 1 189 8 view .LVU5363
 15415 541d 4C01C7   		add	rdi, r8	# ivtmp.554, tmp784
 15416              	# sieve_extend.c:189:        *index_ptr |= mask;
 189:sieve_extend.c ****        index_ptr+=step;
 15417              		.loc 1 189 19 is_stmt 0 view .LVU5364
 15418 5420 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_906, index: _626, step: 4, offset: 0B], _611
 190:sieve_extend.c ****    }
 15419              		.loc 1 190 8 is_stmt 1 view .LVU5365
 15420 5424 4C01C0   		add	rax, r8	# index_ptr, tmp784
 15421              	.LVL908:
 180:sieve_extend.c ****        *index_ptr |= mask;
 15422              		.loc 1 180 10 view .LVU5366
 15423 5427 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 15424 542a 7644     		jbe	.L973	#,
 181:sieve_extend.c ****        index_ptr+=step;
 15425              		.loc 1 181 8 view .LVU5367
 15426              	# sieve_extend.c:181:        *index_ptr |= mask;
 181:sieve_extend.c ****        index_ptr+=step;
 15427              		.loc 1 181 19 is_stmt 0 view .LVU5368
 15428 542c 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_906, offset: 0B], _611
 182:sieve_extend.c ****        *index_ptr |= mask;
 15429              		.loc 1 182 8 is_stmt 1 view .LVU5369
 15430              	.LVL909:
 183:sieve_extend.c ****        index_ptr+=step;
 15431              		.loc 1 183 8 view .LVU5370
 15432              	# sieve_extend.c:183:        *index_ptr |= mask;
 183:sieve_extend.c ****        index_ptr+=step;
 15433              		.loc 1 183 19 is_stmt 0 view .LVU5371
 15434 542f 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_906, index: _626, offset: 0B], _611
 184:sieve_extend.c ****        *index_ptr |= mask;
 15435              		.loc 1 184 8 is_stmt 1 view .LVU5372
 15436              	.LVL910:
 185:sieve_extend.c ****        index_ptr+=step;
 15437              		.loc 1 185 8 view .LVU5373
 15438              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 15439              		.loc 1 185 19 is_stmt 0 view .LVU5374
 15440 5433 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _1412, offset: 0B], _611
 186:sieve_extend.c ****        *index_ptr |= mask;
 15441              		.loc 1 186 8 is_stmt 1 view .LVU5375
 15442              	.LVL911:
 187:sieve_extend.c ****        index_ptr+=step;
 15443              		.loc 1 187 8 view .LVU5376
 15444              	# sieve_extend.c:187:        *index_ptr |= mask;
 187:sieve_extend.c ****        index_ptr+=step;
 15445              		.loc 1 187 19 is_stmt 0 view .LVU5377
 15446 5436 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _1412, index: _626, offset: 0B], _611
 188:sieve_extend.c ****        *index_ptr |= mask;
 15447              		.loc 1 188 8 is_stmt 1 view .LVU5378
 15448              	.LVL912:
 189:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/cc64mrzX.s 			page 413


 15449              		.loc 1 189 8 view .LVU5379
 15450 543a 4C01C7   		add	rdi, r8	# ivtmp.554, tmp784
 15451              	# sieve_extend.c:189:        *index_ptr |= mask;
 189:sieve_extend.c ****        index_ptr+=step;
 15452              		.loc 1 189 19 is_stmt 0 view .LVU5380
 15453 543d 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_906, index: _626, step: 4, offset: 0B], _611
 190:sieve_extend.c ****    }
 15454              		.loc 1 190 8 is_stmt 1 view .LVU5381
 15455 5441 4C01C0   		add	rax, r8	# index_ptr, tmp784
 15456              	.LVL913:
 180:sieve_extend.c ****        *index_ptr |= mask;
 15457              		.loc 1 180 10 view .LVU5382
 15458 5444 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 15459 5447 7627     		jbe	.L973	#,
 181:sieve_extend.c ****        index_ptr+=step;
 15460              		.loc 1 181 8 view .LVU5383
 15461              	# sieve_extend.c:181:        *index_ptr |= mask;
 181:sieve_extend.c ****        index_ptr+=step;
 15462              		.loc 1 181 19 is_stmt 0 view .LVU5384
 15463 5449 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_906, offset: 0B], _611
 182:sieve_extend.c ****        *index_ptr |= mask;
 15464              		.loc 1 182 8 is_stmt 1 view .LVU5385
 15465              	.LVL914:
 183:sieve_extend.c ****        index_ptr+=step;
 15466              		.loc 1 183 8 view .LVU5386
 15467              	# sieve_extend.c:183:        *index_ptr |= mask;
 183:sieve_extend.c ****        index_ptr+=step;
 15468              		.loc 1 183 19 is_stmt 0 view .LVU5387
 15469 544c 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_906, index: _626, offset: 0B], _611
 184:sieve_extend.c ****        *index_ptr |= mask;
 15470              		.loc 1 184 8 is_stmt 1 view .LVU5388
 15471              	.LVL915:
 185:sieve_extend.c ****        index_ptr+=step;
 15472              		.loc 1 185 8 view .LVU5389
 15473              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 15474              		.loc 1 185 19 is_stmt 0 view .LVU5390
 15475 5450 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _1412, offset: 0B], _611
 186:sieve_extend.c ****        *index_ptr |= mask;
 15476              		.loc 1 186 8 is_stmt 1 view .LVU5391
 15477              	.LVL916:
 187:sieve_extend.c ****        index_ptr+=step;
 15478              		.loc 1 187 8 view .LVU5392
 15479              	# sieve_extend.c:187:        *index_ptr |= mask;
 187:sieve_extend.c ****        index_ptr+=step;
 15480              		.loc 1 187 19 is_stmt 0 view .LVU5393
 15481 5453 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _1412, index: _626, offset: 0B], _611
 188:sieve_extend.c ****        *index_ptr |= mask;
 15482              		.loc 1 188 8 is_stmt 1 view .LVU5394
 15483              	.LVL917:
 189:sieve_extend.c ****        index_ptr+=step;
 15484              		.loc 1 189 8 view .LVU5395
 15485 5457 4C01C7   		add	rdi, r8	# ivtmp.554, tmp784
 15486              	# sieve_extend.c:189:        *index_ptr |= mask;
 189:sieve_extend.c ****        index_ptr+=step;
 15487              		.loc 1 189 19 is_stmt 0 view .LVU5396
 15488 545a 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_906, index: _626, step: 4, offset: 0B], _611
GAS LISTING /tmp/cc64mrzX.s 			page 414


 190:sieve_extend.c ****    }
 15489              		.loc 1 190 8 is_stmt 1 view .LVU5397
 15490 545e 4C01C0   		add	rax, r8	# index_ptr, tmp784
 15491              	.LVL918:
 180:sieve_extend.c ****        *index_ptr |= mask;
 15492              		.loc 1 180 10 view .LVU5398
 15493 5461 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 15494 5464 0F8708FF 		ja	.L974	#,
 15494      FFFF
 15495 546a 660F1F44 		.p2align 4
 15495      0000
 15496              		.p2align 3
 15497              	.L973:
 193:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 15498              		.loc 1 193 4 view .LVU5399
 194:sieve_extend.c ****        *index_ptr |= mask;
 15499              		.loc 1 194 4 view .LVU5400
 194:sieve_extend.c ****        *index_ptr |= mask;
 15500              		.loc 1 194 10 view .LVU5401
 15501 5470 4839C5   		cmp	rbp, rax	# _494, index_ptr
 15502 5473 765B     		jbe	.L975	#,
 15503              	.L976:
 195:sieve_extend.c ****        index_ptr+=step;
 15504              		.loc 1 195 8 view .LVU5402
 15505              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 15506              		.loc 1 195 19 is_stmt 0 view .LVU5403
 15507 5475 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_897, offset: 0B], _611
 196:sieve_extend.c ****    }
 15508              		.loc 1 196 8 is_stmt 1 view .LVU5404
 15509              	# sieve_extend.c:196:        index_ptr+=step;
 196:sieve_extend.c ****    }
 15510              		.loc 1 196 17 is_stmt 0 view .LVU5405
 15511 5478 4801D0   		add	rax, rdx	# index_ptr, _626
 15512              	.LVL919:
 194:sieve_extend.c ****        *index_ptr |= mask;
 15513              		.loc 1 194 10 is_stmt 1 view .LVU5406
 15514 547b 4839C5   		cmp	rbp, rax	# _494, index_ptr
 15515 547e 7650     		jbe	.L975	#,
 195:sieve_extend.c ****        index_ptr+=step;
 15516              		.loc 1 195 8 view .LVU5407
 15517              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 15518              		.loc 1 195 19 is_stmt 0 view .LVU5408
 15519 5480 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_897, offset: 0B], _611
 196:sieve_extend.c ****    }
 15520              		.loc 1 196 8 is_stmt 1 view .LVU5409
 15521              	# sieve_extend.c:196:        index_ptr+=step;
 196:sieve_extend.c ****    }
 15522              		.loc 1 196 17 is_stmt 0 view .LVU5410
 15523 5483 4801D0   		add	rax, rdx	# index_ptr, _626
 15524              	.LVL920:
 194:sieve_extend.c ****        *index_ptr |= mask;
 15525              		.loc 1 194 10 is_stmt 1 view .LVU5411
 15526 5486 4839C5   		cmp	rbp, rax	# _494, index_ptr
 15527 5489 7645     		jbe	.L975	#,
 195:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/cc64mrzX.s 			page 415


 15528              		.loc 1 195 8 view .LVU5412
 15529              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 15530              		.loc 1 195 19 is_stmt 0 view .LVU5413
 15531 548b 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_897, offset: 0B], _611
 196:sieve_extend.c ****    }
 15532              		.loc 1 196 8 is_stmt 1 view .LVU5414
 15533              	# sieve_extend.c:196:        index_ptr+=step;
 196:sieve_extend.c ****    }
 15534              		.loc 1 196 17 is_stmt 0 view .LVU5415
 15535 548e 4801D0   		add	rax, rdx	# index_ptr, _626
 15536              	.LVL921:
 194:sieve_extend.c ****        *index_ptr |= mask;
 15537              		.loc 1 194 10 is_stmt 1 view .LVU5416
 15538 5491 4839C5   		cmp	rbp, rax	# _494, index_ptr
 15539 5494 763A     		jbe	.L975	#,
 195:sieve_extend.c ****        index_ptr+=step;
 15540              		.loc 1 195 8 view .LVU5417
 15541              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 15542              		.loc 1 195 19 is_stmt 0 view .LVU5418
 15543 5496 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_897, offset: 0B], _611
 196:sieve_extend.c ****    }
 15544              		.loc 1 196 8 is_stmt 1 view .LVU5419
 15545              	# sieve_extend.c:196:        index_ptr+=step;
 196:sieve_extend.c ****    }
 15546              		.loc 1 196 17 is_stmt 0 view .LVU5420
 15547 5499 4801D0   		add	rax, rdx	# index_ptr, _626
 15548              	.LVL922:
 194:sieve_extend.c ****        *index_ptr |= mask;
 15549              		.loc 1 194 10 is_stmt 1 view .LVU5421
 15550 549c 4839C5   		cmp	rbp, rax	# _494, index_ptr
 15551 549f 762F     		jbe	.L975	#,
 195:sieve_extend.c ****        index_ptr+=step;
 15552              		.loc 1 195 8 view .LVU5422
 15553              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 15554              		.loc 1 195 19 is_stmt 0 view .LVU5423
 15555 54a1 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_897, offset: 0B], _611
 196:sieve_extend.c ****    }
 15556              		.loc 1 196 8 is_stmt 1 view .LVU5424
 15557              	# sieve_extend.c:196:        index_ptr+=step;
 196:sieve_extend.c ****    }
 15558              		.loc 1 196 17 is_stmt 0 view .LVU5425
 15559 54a4 4801D0   		add	rax, rdx	# index_ptr, _626
 15560              	.LVL923:
 194:sieve_extend.c ****        *index_ptr |= mask;
 15561              		.loc 1 194 10 is_stmt 1 view .LVU5426
 15562 54a7 4839C5   		cmp	rbp, rax	# _494, index_ptr
 15563 54aa 7624     		jbe	.L975	#,
 195:sieve_extend.c ****        index_ptr+=step;
 15564              		.loc 1 195 8 view .LVU5427
 15565              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 15566              		.loc 1 195 19 is_stmt 0 view .LVU5428
 15567 54ac 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_897, offset: 0B], _611
 196:sieve_extend.c ****    }
GAS LISTING /tmp/cc64mrzX.s 			page 416


 15568              		.loc 1 196 8 is_stmt 1 view .LVU5429
 15569              	# sieve_extend.c:196:        index_ptr+=step;
 196:sieve_extend.c ****    }
 15570              		.loc 1 196 17 is_stmt 0 view .LVU5430
 15571 54af 4801D0   		add	rax, rdx	# index_ptr, _626
 15572              	.LVL924:
 194:sieve_extend.c ****        *index_ptr |= mask;
 15573              		.loc 1 194 10 is_stmt 1 view .LVU5431
 15574 54b2 4839C5   		cmp	rbp, rax	# _494, index_ptr
 15575 54b5 7619     		jbe	.L975	#,
 195:sieve_extend.c ****        index_ptr+=step;
 15576              		.loc 1 195 8 view .LVU5432
 15577              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 15578              		.loc 1 195 19 is_stmt 0 view .LVU5433
 15579 54b7 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_897, offset: 0B], _611
 196:sieve_extend.c ****    }
 15580              		.loc 1 196 8 is_stmt 1 view .LVU5434
 15581              	# sieve_extend.c:196:        index_ptr+=step;
 196:sieve_extend.c ****    }
 15582              		.loc 1 196 17 is_stmt 0 view .LVU5435
 15583 54ba 4801D0   		add	rax, rdx	# index_ptr, _626
 15584              	.LVL925:
 194:sieve_extend.c ****        *index_ptr |= mask;
 15585              		.loc 1 194 10 is_stmt 1 view .LVU5436
 15586 54bd 4839C5   		cmp	rbp, rax	# _494, index_ptr
 15587 54c0 760E     		jbe	.L975	#,
 195:sieve_extend.c ****        index_ptr+=step;
 15588              		.loc 1 195 8 view .LVU5437
 15589              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 15590              		.loc 1 195 19 is_stmt 0 view .LVU5438
 15591 54c2 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_897, offset: 0B], _611
 196:sieve_extend.c ****    }
 15592              		.loc 1 196 8 is_stmt 1 view .LVU5439
 15593              	# sieve_extend.c:196:        index_ptr+=step;
 196:sieve_extend.c ****    }
 15594              		.loc 1 196 17 is_stmt 0 view .LVU5440
 15595 54c5 4801D0   		add	rax, rdx	# index_ptr, _626
 15596              	.LVL926:
 194:sieve_extend.c ****        *index_ptr |= mask;
 15597              		.loc 1 194 10 is_stmt 1 view .LVU5441
 15598 54c8 4839C5   		cmp	rbp, rax	# _494, index_ptr
 15599 54cb 77A8     		ja	.L976	#,
 15600 54cd 0F1F00   		.p2align 4
 15601              		.p2align 3
 15602              	.L975:
 199:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 15603              		.loc 1 199 4 view .LVU5442
 15604              	# sieve_extend.c:199:    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range
 199:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 15605              		.loc 1 199 7 is_stmt 0 view .LVU5443
 15606 54d0 4839C5   		cmp	rbp, rax	# _494, index_ptr
 15607 54d3 7463     		je	.L1504	#,
 15608              	.LVL927:
 15609              	.L977:
 199:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
GAS LISTING /tmp/cc64mrzX.s 			page 417


 15610              		.loc 1 199 7 view .LVU5444
 15611              	.LBE669:
 15612              	.LBE671:
 417:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 15613              		.loc 1 417 77 is_stmt 1 view .LVU5445
 15614              	# sieve_extend.c:417:     for (register counter_t index = range_start; index < range_stop_unique; i
 417:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 15615              		.loc 1 417 83 is_stmt 0 view .LVU5446
 15616 54d5 4C01DE   		add	rsi, r11	# index, step
 15617              	.LVL928:
 417:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 15618              		.loc 1 417 50 is_stmt 1 view .LVU5447
 15619              	# sieve_extend.c:417:     for (register counter_t index = range_start; index < range_stop_unique; i
 417:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 15620              		.loc 1 417 5 is_stmt 0 view .LVU5448
 15621 54d8 4939F5   		cmp	r13, rsi	# _399, index
 15622 54db 0F876FFE 		ja	.L978	#,
 15622      FFFF
 15623              	.L979:
 15624              	.LVL929:
 417:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 15625              		.loc 1 417 5 view .LVU5449
 15626              	.LBE666:
 15627              	.LBE665:
 15628              	.LBE664:
 945:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 15629              		.loc 1 945 9 is_stmt 1 view .LVU5450
 15630              	.LBB675:
 15631              	.LBI675:
 127:sieve_extend.c ****     // return searchBitFalse(bitarray, index);
 15632              		.loc 1 127 25 view .LVU5451
 15633              	.LBB676:
 130:sieve_extend.c ****    bitshift_t index_bit  = bitindex_calc(index);
 15634              		.loc 1 130 4 view .LVU5452
 131:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 15635              		.loc 1 131 4 view .LVU5453
 15636              	# sieve_extend.c:130:    register counter_t index_word = wordindex(index);
 130:sieve_extend.c ****    bitshift_t index_bit  = bitindex_calc(index);
 15637              		.loc 1 130 23 is_stmt 0 view .LVU5454
 15638 54e1 4D89D5   		mov	r13, r10	# index_word, _411
 15639              	# sieve_extend.c:131:    bitshift_t index_bit  = bitindex_calc(index);
 131:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 15640              		.loc 1 131 15 view .LVU5455
 15641 54e4 4D89D3   		mov	r11, r10	# index_bit, _411
 15642              	.LVL930:
 15643              	# sieve_extend.c:130:    register counter_t index_word = wordindex(index);
 130:sieve_extend.c ****    bitshift_t index_bit  = bitindex_calc(index);
 15644              		.loc 1 130 23 view .LVU5456
 15645 54e7 49C1ED06 		shr	r13, 6	# index_word,
 15646              	# sieve_extend.c:131:    bitshift_t index_bit  = bitindex_calc(index);
 131:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 15647              		.loc 1 131 15 view .LVU5457
 15648 54eb 4183E33F 		and	r11d, 63	# index_bit,
 15649              	.LVL931:
 132:sieve_extend.c ****    index += distance;
 15650              		.loc 1 132 4 is_stmt 1 view .LVU5458
 15651              	# sieve_extend.c:132:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
GAS LISTING /tmp/cc64mrzX.s 			page 418


 132:sieve_extend.c ****    index += distance;
 15652              		.loc 1 132 89 is_stmt 0 view .LVU5459
 15653 54ef 4E8B04EB 		mov	r8, QWORD PTR [rbx+r13*8]	# *_582, *_582
 15654 54f3 C4C2A3F7 		shrx	rdx, r8, r11	# tmp769, *_582, index_bit
 15654      D0
 15655              	# sieve_extend.c:132:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 132:sieve_extend.c ****    index += distance;
 15656              		.loc 1 132 66 view .LVU5460
 15657 54f8 48F7D2   		not	rdx	# tmp771
 15658              	# sieve_extend.c:132:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 132:sieve_extend.c ****    index += distance;
 15659              		.loc 1 132 76 view .LVU5461
 15660 54fb 4A8D34ED 		lea	rsi, 0[0+r13*8]	# _581,
 15660      00000000 
 15661              	.LVL932:
 15662              	# sieve_extend.c:132:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 132:sieve_extend.c ****    index += distance;
 15663              		.loc 1 132 25 view .LVU5462
 15664 5503 F34C0FBC 		tzcnt	r9, rdx	# distance, tmp771
 15664      CA
 15665              	.LVL933:
 133:sieve_extend.c ****    distance += index_bit;
 15666              		.loc 1 133 4 is_stmt 1 view .LVU5463
 15667              	# sieve_extend.c:133:    index += distance;
 133:sieve_extend.c ****    distance += index_bit;
 15668              		.loc 1 133 10 is_stmt 0 view .LVU5464
 15669 5508 4B8D0C0A 		lea	rcx, [r10+r9]	# index,
 15670              	.LVL934:
 134:sieve_extend.c **** 
 15671              		.loc 1 134 4 is_stmt 1 view .LVU5465
 136:sieve_extend.c ****        index_word++;
 15672              		.loc 1 136 4 view .LVU5466
 136:sieve_extend.c ****        index_word++;
 15673              		.loc 1 136 10 view .LVU5467
 15674              	# sieve_extend.c:134:    distance += index_bit;
 134:sieve_extend.c **** 
 15675              		.loc 1 134 13 is_stmt 0 view .LVU5468
 15676 550c 4D01D9   		add	r9, r11	# distance, index_bit
 15677              	.LVL935:
 15678              	# sieve_extend.c:136:    while unlikely(distance == WORD_SIZE_bitshift) { // to prevent a bug from 
 136:sieve_extend.c ****        index_word++;
 15679              		.loc 1 136 10 view .LVU5469
 15680 550f 4983F940 		cmp	r9, 64	# distance,
 15681 5513 7433     		je	.L1505	#,
 15682              	.LVL936:
 15683              	.L1346:
 142:sieve_extend.c **** }
 15684              		.loc 1 142 4 is_stmt 1 view .LVU5470
 142:sieve_extend.c **** }
 15685              		.loc 1 142 4 is_stmt 0 view .LVU5471
 15686              	.LBE676:
 15687              	.LBE675:
 946:sieve_extend.c ****     }
 15688              		.loc 1 946 9 is_stmt 1 view .LVU5472
 15689              	# sieve_extend.c:946:         start = prime * prime * 2 + prime * 2;
 946:sieve_extend.c ****     }
 15690              		.loc 1 946 35 is_stmt 0 view .LVU5473
GAS LISTING /tmp/cc64mrzX.s 			page 419


 15691 5515 4C8D5101 		lea	r10, 1[rcx]	# _411,
 15692              	# sieve_extend.c:946:         start = prime * prime * 2 + prime * 2;
 946:sieve_extend.c ****     }
 15693              		.loc 1 946 15 view .LVU5474
 15694 5519 4C89D6   		mov	rsi, r10	# tmp797, _411
 15695 551c 480FAFF1 		imul	rsi, rcx	# tmp797, index
 15696              	.LVL937:
 946:sieve_extend.c ****     }
 15697              		.loc 1 946 15 view .LVU5475
 15698 5520 4801F6   		add	rsi, rsi	# index
 15699              	.LVL938:
 940:sieve_extend.c ****         step  = prime * 2 + 1;
 15700              		.loc 1 940 11 is_stmt 1 view .LVU5476
 15701 5523 4939F4   		cmp	r12, rsi	# block_stop, index
 15702 5526 0F83B4FD 		jnb	.L963	#,
 15702      FFFF
 940:sieve_extend.c ****         step  = prime * 2 + 1;
 15703              		.loc 1 940 11 is_stmt 0 view .LVU5477
 15704 552c E903F7FF 		jmp	.L1482	#
 15704      FF
 15705              	.LVL939:
 15706              		.p2align 4,,7
 15707 5531 0F1F8000 		.p2align 3
 15707      000000
 15708              	.L1504:
 15709              	.LBB678:
 15710              	.LBB674:
 15711              	.LBB673:
 15712              	.LBB672:
 15713              	.LBB670:
 200:sieve_extend.c ****    }
 15714              		.loc 1 200 7 is_stmt 1 view .LVU5478
 15715              	# sieve_extend.c:200:       *index_ptr |= (mask & chopmask(range_stop));
 200:sieve_extend.c ****    }
 15716              		.loc 1 200 27 is_stmt 0 view .LVU5479
 15717 5538 48234C24 		and	rcx, QWORD PTR 8[rsp]	# tmp789, %sfp
 15717      08
 15718              	.LVL940:
 15719              	# sieve_extend.c:200:       *index_ptr |= (mask & chopmask(range_stop));
 200:sieve_extend.c ****    }
 15720              		.loc 1 200 18 view .LVU5480
 15721 553d 48094D00 		or	QWORD PTR 0[rbp], rcx	# *index_ptr_902, tmp789
 15722 5541 EB92     		jmp	.L977	#
 15723              	.LVL941:
 15724              		.p2align 4,,7
 15725 5543 0F1F4400 		.p2align 3
 15725      00
 15726              	.L1505:
 200:sieve_extend.c ****    }
 15727              		.loc 1 200 18 view .LVU5481
 15728              	.LBE670:
 15729              	.LBE672:
 15730              	.LBE673:
 15731              	.LBE674:
 15732              	.LBE678:
 15733              	.LBB679:
 15734              	.LBB677:
GAS LISTING /tmp/cc64mrzX.s 			page 420


 137:sieve_extend.c ****        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 15735              		.loc 1 137 8 is_stmt 1 view .LVU5482
 138:sieve_extend.c ****        index += distance;
 15736              		.loc 1 138 8 view .LVU5483
 15737              	# sieve_extend.c:138:        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 138:sieve_extend.c ****        index += distance;
 15738              		.loc 1 138 48 is_stmt 0 view .LVU5484
 15739 5548 4C8B5433 		mov	r10, QWORD PTR 8[rbx+rsi]	# *_594, *_594
 15739      08
 15740 554d 49F7D2   		not	r10	# tmp790
 15741              	.LVL942:
 139:sieve_extend.c ****    }
 15742              		.loc 1 139 8 is_stmt 1 view .LVU5485
 15743              	# sieve_extend.c:138:        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 138:sieve_extend.c ****        index += distance;
 15744              		.loc 1 138 17 is_stmt 0 view .LVU5486
 15745 5550 F34D0FBC 		tzcnt	r14, r10	# distance, tmp790
 15745      F2
 15746              	.LVL943:
 15747              	# sieve_extend.c:139:        index += distance;
 139:sieve_extend.c ****    }
 15748              		.loc 1 139 14 view .LVU5487
 15749 5555 4C01F1   		add	rcx, r14	# index, distance
 15750              	.LVL944:
 136:sieve_extend.c ****        index_word++;
 15751              		.loc 1 136 10 is_stmt 1 view .LVU5488
 142:sieve_extend.c **** }
 15752              		.loc 1 142 4 view .LVU5489
 142:sieve_extend.c **** }
 15753              		.loc 1 142 4 is_stmt 0 view .LVU5490
 15754              	.LBE677:
 15755              	.LBE679:
 946:sieve_extend.c ****     }
 15756              		.loc 1 946 9 is_stmt 1 view .LVU5491
 15757 5558 EBBB     		jmp	.L1346	#
 15758              	.LVL945:
 15759 555a 660F1F44 		.p2align 4,,7
 15759      0000
 15760              		.p2align 3
 15761              	.L968:
 949:sieve_extend.c ****         step  = prime * 2 + 1;
 15762              		.loc 1 949 11 view .LVU5492
 15763 5560 4939F4   		cmp	r12, rsi	# block_stop, index
 15764              	.LBB680:
 15765              	.LBB681:
 15766              	# sieve_extend.c:343:         bitarray[wordindex(index)] |= markmask(index);
 343:sieve_extend.c ****     }
 15767              		.loc 1 343 39 is_stmt 0 view .LVU5493
 15768 5563 BD010000 		mov	ebp, 1	# tmp827,
 15768      00
 15769              	.LBE681:
 15770              	.LBE680:
 15771              	# sieve_extend.c:949:     while (start <= block_stop) {
 949:sieve_extend.c ****         step  = prime * 2 + 1;
 15772              		.loc 1 949 11 view .LVU5494
 15773 5568 0F82C6F6 		jb	.L1482	#,
 15773      FFFF
GAS LISTING /tmp/cc64mrzX.s 			page 421


 15774              	.LVL946:
 15775              	.L972:
 950:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 15776              		.loc 1 950 9 is_stmt 1 view .LVU5495
 15777              	# sieve_extend.c:951:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 951:sieve_extend.c ****         if likely(start <= block_stop)
 15778              		.loc 1 951 12 is_stmt 0 view .LVU5496
 15779 556e 4D39FA   		cmp	r10, r15	# _411, block_start
 15780              	# sieve_extend.c:950:         step  = prime * 2 + 1;
 950:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 15781              		.loc 1 950 15 view .LVU5497
 15782 5571 488D7C09 		lea	rdi, 1[rcx+rcx]	# step,
 15782      01
 15783              	.LVL947:
 951:sieve_extend.c ****         if likely(start <= block_stop)
 15784              		.loc 1 951 9 is_stmt 1 view .LVU5498
 15785              	# sieve_extend.c:951:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 951:sieve_extend.c ****         if likely(start <= block_stop)
 15786              		.loc 1 951 12 is_stmt 0 view .LVU5499
 15787 5576 0F874C01 		ja	.L981	#,
 15787      0000
 15788 557c 0F1F4000 		.p2align 4
 15789              		.p2align 3
 15790              	.L1507:
 951:sieve_extend.c ****         if likely(start <= block_stop)
 15791              		.loc 1 951 47 is_stmt 1 view .LVU5500
 15792              	# sieve_extend.c:951:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 951:sieve_extend.c ****         if likely(start <= block_stop)
 15793              		.loc 1 951 67 is_stmt 0 view .LVU5501
 15794 5580 4A8D0439 		lea	rax, [rcx+r15]	# _415,
 15795              	# sieve_extend.c:951:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 951:sieve_extend.c ****         if likely(start <= block_stop)
 15796              		.loc 1 951 108 view .LVU5502
 15797 5584 31D2     		xor	edx, edx	# tmp801
 15798              	# sieve_extend.c:951:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 951:sieve_extend.c ****         if likely(start <= block_stop)
 15799              		.loc 1 951 75 view .LVU5503
 15800 5586 488D3408 		lea	rsi, [rax+rcx]	# tmp799,
 15801              	# sieve_extend.c:951:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 951:sieve_extend.c ****         if likely(start <= block_stop)
 15802              		.loc 1 951 108 view .LVU5504
 15803 558a 48F7F7   		div	rdi	# step
 15804              	.LVL948:
 15805              	# sieve_extend.c:951:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 951:sieve_extend.c ****         if likely(start <= block_stop)
 15806              		.loc 1 951 53 view .LVU5505
 15807 558d 4829D6   		sub	rsi, rdx	# index, tmp801
 15808              	.LVL949:
 952:sieve_extend.c ****             setBitsTrue_largeSteps(bitarray, start, step, block_stop);
 15809              		.loc 1 952 9 is_stmt 1 view .LVU5506
 15810              	# sieve_extend.c:952:         if likely(start <= block_stop)
 952:sieve_extend.c ****             setBitsTrue_largeSteps(bitarray, start, step, block_stop);
 15811              		.loc 1 952 12 is_stmt 0 view .LVU5507
 15812 5590 4939F4   		cmp	r12, rsi	# block_stop, index
 15813 5593 0F82D700 		jb	.L986	#,
 15813      0000
 15814              	.LVL950:
GAS LISTING /tmp/cc64mrzX.s 			page 422


 15815              	.L985:
 15816              	.LBB684:
 15817              	.LBB682:
 343:sieve_extend.c ****     }
 15818              		.loc 1 343 9 is_stmt 1 view .LVU5508
 15819              	# sieve_extend.c:343:         bitarray[wordindex(index)] |= markmask(index);
 343:sieve_extend.c ****     }
 15820              		.loc 1 343 36 is_stmt 0 view .LVU5509
 15821 5599 4889F1   		mov	rcx, rsi	# tmp810, index
 15822              	# sieve_extend.c:343:         bitarray[wordindex(index)] |= markmask(index);
 343:sieve_extend.c ****     }
 15823              		.loc 1 343 39 view .LVU5510
 15824 559c C462C9F7 		shlx	r11, rbp, rsi	# tmp813, tmp827, index
 15824      DD
 15825              	# sieve_extend.c:343:         bitarray[wordindex(index)] |= markmask(index);
 343:sieve_extend.c ****     }
 15826              		.loc 1 343 36 view .LVU5511
 15827 55a1 48C1E906 		shr	rcx, 6	# tmp810,
 15828              	# sieve_extend.c:342:     for (counter_t index = range_start; index <= range_stop; index += step) {
 342:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15829              		.loc 1 342 68 view .LVU5512
 15830 55a5 4801FE   		add	rsi, rdi	# index, step
 15831              	# sieve_extend.c:343:         bitarray[wordindex(index)] |= markmask(index);
 343:sieve_extend.c ****     }
 15832              		.loc 1 343 36 view .LVU5513
 15833 55a8 4C091CCB 		or	QWORD PTR [rbx+rcx*8], r11	# *_426, tmp813
 342:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15834              		.loc 1 342 62 is_stmt 1 view .LVU5514
 342:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15835              		.loc 1 342 41 view .LVU5515
 15836              	# sieve_extend.c:342:     for (counter_t index = range_start; index <= range_stop; index += step) {
 342:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15837              		.loc 1 342 5 is_stmt 0 view .LVU5516
 15838 55ac 4939F4   		cmp	r12, rsi	# block_stop, index
 15839 55af 0F82BB00 		jb	.L986	#,
 15839      0000
 343:sieve_extend.c ****     }
 15840              		.loc 1 343 9 is_stmt 1 view .LVU5517
 15841              	# sieve_extend.c:343:         bitarray[wordindex(index)] |= markmask(index);
 343:sieve_extend.c ****     }
 15842              		.loc 1 343 36 is_stmt 0 view .LVU5518
 15843 55b5 4989F5   		mov	r13, rsi	# tmp926, index
 15844              	# sieve_extend.c:343:         bitarray[wordindex(index)] |= markmask(index);
 343:sieve_extend.c ****     }
 15845              		.loc 1 343 39 view .LVU5519
 15846 55b8 C462C9F7 		shlx	r8, rbp, rsi	# tmp929, tmp827, index
 15846      C5
 15847              	# sieve_extend.c:343:         bitarray[wordindex(index)] |= markmask(index);
 343:sieve_extend.c ****     }
 15848              		.loc 1 343 36 view .LVU5520
 15849 55bd 49C1ED06 		shr	r13, 6	# tmp926,
 15850              	# sieve_extend.c:342:     for (counter_t index = range_start; index <= range_stop; index += step) {
 342:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15851              		.loc 1 342 68 view .LVU5521
 15852 55c1 4801FE   		add	rsi, rdi	# index, step
 15853              	# sieve_extend.c:343:         bitarray[wordindex(index)] |= markmask(index);
 343:sieve_extend.c ****     }
GAS LISTING /tmp/cc64mrzX.s 			page 423


 15854              		.loc 1 343 36 view .LVU5522
 15855 55c4 4E0904EB 		or	QWORD PTR [rbx+r13*8], r8	# *_426, tmp929
 342:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15856              		.loc 1 342 62 is_stmt 1 view .LVU5523
 342:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15857              		.loc 1 342 41 view .LVU5524
 15858              	# sieve_extend.c:342:     for (counter_t index = range_start; index <= range_stop; index += step) {
 342:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15859              		.loc 1 342 5 is_stmt 0 view .LVU5525
 15860 55c8 4939F4   		cmp	r12, rsi	# block_stop, index
 15861 55cb 0F829F00 		jb	.L986	#,
 15861      0000
 343:sieve_extend.c ****     }
 15862              		.loc 1 343 9 is_stmt 1 view .LVU5526
 15863              	# sieve_extend.c:343:         bitarray[wordindex(index)] |= markmask(index);
 343:sieve_extend.c ****     }
 15864              		.loc 1 343 36 is_stmt 0 view .LVU5527
 15865 55d1 4989F1   		mov	r9, rsi	# tmp931, index
 15866              	# sieve_extend.c:343:         bitarray[wordindex(index)] |= markmask(index);
 343:sieve_extend.c ****     }
 15867              		.loc 1 343 39 view .LVU5528
 15868 55d4 C462C9F7 		shlx	r14, rbp, rsi	# tmp934, tmp827, index
 15868      F5
 15869              	# sieve_extend.c:343:         bitarray[wordindex(index)] |= markmask(index);
 343:sieve_extend.c ****     }
 15870              		.loc 1 343 36 view .LVU5529
 15871 55d9 49C1E906 		shr	r9, 6	# tmp931,
 15872              	# sieve_extend.c:342:     for (counter_t index = range_start; index <= range_stop; index += step) {
 342:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15873              		.loc 1 342 68 view .LVU5530
 15874 55dd 4801FE   		add	rsi, rdi	# index, step
 15875              	# sieve_extend.c:343:         bitarray[wordindex(index)] |= markmask(index);
 343:sieve_extend.c ****     }
 15876              		.loc 1 343 36 view .LVU5531
 15877 55e0 4E0934CB 		or	QWORD PTR [rbx+r9*8], r14	# *_426, tmp934
 342:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15878              		.loc 1 342 62 is_stmt 1 view .LVU5532
 342:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15879              		.loc 1 342 41 view .LVU5533
 15880              	# sieve_extend.c:342:     for (counter_t index = range_start; index <= range_stop; index += step) {
 342:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15881              		.loc 1 342 5 is_stmt 0 view .LVU5534
 15882 55e4 4939F4   		cmp	r12, rsi	# block_stop, index
 15883 55e7 0F828300 		jb	.L986	#,
 15883      0000
 343:sieve_extend.c ****     }
 15884              		.loc 1 343 9 is_stmt 1 view .LVU5535
 15885              	# sieve_extend.c:343:         bitarray[wordindex(index)] |= markmask(index);
 343:sieve_extend.c ****     }
 15886              		.loc 1 343 36 is_stmt 0 view .LVU5536
 15887 55ed 4889F0   		mov	rax, rsi	# tmp936, index
 15888              	# sieve_extend.c:343:         bitarray[wordindex(index)] |= markmask(index);
 343:sieve_extend.c ****     }
 15889              		.loc 1 343 39 view .LVU5537
 15890 55f0 C4E2C9F7 		shlx	rdx, rbp, rsi	# tmp939, tmp827, index
 15890      D5
 15891              	# sieve_extend.c:343:         bitarray[wordindex(index)] |= markmask(index);
GAS LISTING /tmp/cc64mrzX.s 			page 424


 343:sieve_extend.c ****     }
 15892              		.loc 1 343 36 view .LVU5538
 15893 55f5 48C1E806 		shr	rax, 6	# tmp936,
 15894              	# sieve_extend.c:342:     for (counter_t index = range_start; index <= range_stop; index += step) {
 342:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15895              		.loc 1 342 68 view .LVU5539
 15896 55f9 4801FE   		add	rsi, rdi	# index, step
 15897              	# sieve_extend.c:343:         bitarray[wordindex(index)] |= markmask(index);
 343:sieve_extend.c ****     }
 15898              		.loc 1 343 36 view .LVU5540
 15899 55fc 480914C3 		or	QWORD PTR [rbx+rax*8], rdx	# *_426, tmp939
 342:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15900              		.loc 1 342 62 is_stmt 1 view .LVU5541
 342:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15901              		.loc 1 342 41 view .LVU5542
 15902              	# sieve_extend.c:342:     for (counter_t index = range_start; index <= range_stop; index += step) {
 342:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15903              		.loc 1 342 5 is_stmt 0 view .LVU5543
 15904 5600 4939F4   		cmp	r12, rsi	# block_stop, index
 15905 5603 726B     		jb	.L986	#,
 343:sieve_extend.c ****     }
 15906              		.loc 1 343 9 is_stmt 1 view .LVU5544
 15907              	# sieve_extend.c:343:         bitarray[wordindex(index)] |= markmask(index);
 343:sieve_extend.c ****     }
 15908              		.loc 1 343 36 is_stmt 0 view .LVU5545
 15909 5605 4889F1   		mov	rcx, rsi	# tmp941, index
 15910              	# sieve_extend.c:343:         bitarray[wordindex(index)] |= markmask(index);
 343:sieve_extend.c ****     }
 15911              		.loc 1 343 39 view .LVU5546
 15912 5608 C462C9F7 		shlx	r11, rbp, rsi	# tmp944, tmp827, index
 15912      DD
 15913              	# sieve_extend.c:343:         bitarray[wordindex(index)] |= markmask(index);
 343:sieve_extend.c ****     }
 15914              		.loc 1 343 36 view .LVU5547
 15915 560d 48C1E906 		shr	rcx, 6	# tmp941,
 15916              	# sieve_extend.c:342:     for (counter_t index = range_start; index <= range_stop; index += step) {
 342:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15917              		.loc 1 342 68 view .LVU5548
 15918 5611 4801FE   		add	rsi, rdi	# index, step
 15919              	# sieve_extend.c:343:         bitarray[wordindex(index)] |= markmask(index);
 343:sieve_extend.c ****     }
 15920              		.loc 1 343 36 view .LVU5549
 15921 5614 4C091CCB 		or	QWORD PTR [rbx+rcx*8], r11	# *_426, tmp944
 342:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15922              		.loc 1 342 62 is_stmt 1 view .LVU5550
 342:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15923              		.loc 1 342 41 view .LVU5551
 15924              	# sieve_extend.c:342:     for (counter_t index = range_start; index <= range_stop; index += step) {
 342:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15925              		.loc 1 342 5 is_stmt 0 view .LVU5552
 15926 5618 4939F4   		cmp	r12, rsi	# block_stop, index
 15927 561b 7253     		jb	.L986	#,
 343:sieve_extend.c ****     }
 15928              		.loc 1 343 9 is_stmt 1 view .LVU5553
 15929              	# sieve_extend.c:343:         bitarray[wordindex(index)] |= markmask(index);
 343:sieve_extend.c ****     }
 15930              		.loc 1 343 36 is_stmt 0 view .LVU5554
GAS LISTING /tmp/cc64mrzX.s 			page 425


 15931 561d 4989F5   		mov	r13, rsi	# tmp946, index
 15932              	# sieve_extend.c:343:         bitarray[wordindex(index)] |= markmask(index);
 343:sieve_extend.c ****     }
 15933              		.loc 1 343 39 view .LVU5555
 15934 5620 C462C9F7 		shlx	r8, rbp, rsi	# tmp949, tmp827, index
 15934      C5
 15935              	# sieve_extend.c:343:         bitarray[wordindex(index)] |= markmask(index);
 343:sieve_extend.c ****     }
 15936              		.loc 1 343 36 view .LVU5556
 15937 5625 49C1ED06 		shr	r13, 6	# tmp946,
 15938              	# sieve_extend.c:342:     for (counter_t index = range_start; index <= range_stop; index += step) {
 342:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15939              		.loc 1 342 68 view .LVU5557
 15940 5629 4801FE   		add	rsi, rdi	# index, step
 15941              	# sieve_extend.c:343:         bitarray[wordindex(index)] |= markmask(index);
 343:sieve_extend.c ****     }
 15942              		.loc 1 343 36 view .LVU5558
 15943 562c 4E0904EB 		or	QWORD PTR [rbx+r13*8], r8	# *_426, tmp949
 342:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15944              		.loc 1 342 62 is_stmt 1 view .LVU5559
 342:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15945              		.loc 1 342 41 view .LVU5560
 15946              	# sieve_extend.c:342:     for (counter_t index = range_start; index <= range_stop; index += step) {
 342:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15947              		.loc 1 342 5 is_stmt 0 view .LVU5561
 15948 5630 4939F4   		cmp	r12, rsi	# block_stop, index
 15949 5633 723B     		jb	.L986	#,
 343:sieve_extend.c ****     }
 15950              		.loc 1 343 9 is_stmt 1 view .LVU5562
 15951              	# sieve_extend.c:343:         bitarray[wordindex(index)] |= markmask(index);
 343:sieve_extend.c ****     }
 15952              		.loc 1 343 36 is_stmt 0 view .LVU5563
 15953 5635 4989F1   		mov	r9, rsi	# tmp951, index
 15954              	# sieve_extend.c:343:         bitarray[wordindex(index)] |= markmask(index);
 343:sieve_extend.c ****     }
 15955              		.loc 1 343 39 view .LVU5564
 15956 5638 C462C9F7 		shlx	r14, rbp, rsi	# tmp954, tmp827, index
 15956      F5
 15957              	# sieve_extend.c:343:         bitarray[wordindex(index)] |= markmask(index);
 343:sieve_extend.c ****     }
 15958              		.loc 1 343 36 view .LVU5565
 15959 563d 49C1E906 		shr	r9, 6	# tmp951,
 15960              	# sieve_extend.c:342:     for (counter_t index = range_start; index <= range_stop; index += step) {
 342:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15961              		.loc 1 342 68 view .LVU5566
 15962 5641 4801FE   		add	rsi, rdi	# index, step
 15963              	# sieve_extend.c:343:         bitarray[wordindex(index)] |= markmask(index);
 343:sieve_extend.c ****     }
 15964              		.loc 1 343 36 view .LVU5567
 15965 5644 4E0934CB 		or	QWORD PTR [rbx+r9*8], r14	# *_426, tmp954
 342:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15966              		.loc 1 342 62 is_stmt 1 view .LVU5568
 342:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15967              		.loc 1 342 41 view .LVU5569
 15968              	# sieve_extend.c:342:     for (counter_t index = range_start; index <= range_stop; index += step) {
 342:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15969              		.loc 1 342 5 is_stmt 0 view .LVU5570
GAS LISTING /tmp/cc64mrzX.s 			page 426


 15970 5648 4939F4   		cmp	r12, rsi	# block_stop, index
 15971 564b 7223     		jb	.L986	#,
 343:sieve_extend.c ****     }
 15972              		.loc 1 343 9 is_stmt 1 view .LVU5571
 15973              	# sieve_extend.c:343:         bitarray[wordindex(index)] |= markmask(index);
 343:sieve_extend.c ****     }
 15974              		.loc 1 343 36 is_stmt 0 view .LVU5572
 15975 564d 4889F0   		mov	rax, rsi	# tmp956, index
 15976              	# sieve_extend.c:343:         bitarray[wordindex(index)] |= markmask(index);
 343:sieve_extend.c ****     }
 15977              		.loc 1 343 39 view .LVU5573
 15978 5650 C4E2C9F7 		shlx	rdx, rbp, rsi	# tmp959, tmp827, index
 15978      D5
 15979              	# sieve_extend.c:343:         bitarray[wordindex(index)] |= markmask(index);
 343:sieve_extend.c ****     }
 15980              		.loc 1 343 36 view .LVU5574
 15981 5655 48C1E806 		shr	rax, 6	# tmp956,
 15982              	# sieve_extend.c:342:     for (counter_t index = range_start; index <= range_stop; index += step) {
 342:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15983              		.loc 1 342 68 view .LVU5575
 15984 5659 4801FE   		add	rsi, rdi	# index, step
 15985              	# sieve_extend.c:343:         bitarray[wordindex(index)] |= markmask(index);
 343:sieve_extend.c ****     }
 15986              		.loc 1 343 36 view .LVU5576
 15987 565c 480914C3 		or	QWORD PTR [rbx+rax*8], rdx	# *_426, tmp959
 342:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15988              		.loc 1 342 62 is_stmt 1 view .LVU5577
 342:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15989              		.loc 1 342 41 view .LVU5578
 15990              	# sieve_extend.c:342:     for (counter_t index = range_start; index <= range_stop; index += step) {
 342:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15991              		.loc 1 342 5 is_stmt 0 view .LVU5579
 15992 5660 4939F4   		cmp	r12, rsi	# block_stop, index
 15993 5663 0F8330FF 		jnb	.L985	#,
 15993      FFFF
 15994 5669 0F1F8000 		.p2align 4
 15994      000000
 15995              		.p2align 3
 15996              	.L986:
 342:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15997              		.loc 1 342 5 view .LVU5580
 15998              	.LBE682:
 15999              	.LBE684:
 954:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 16000              		.loc 1 954 9 is_stmt 1 view .LVU5581
 16001              	.LVL951:
 16002              	.LBB685:
 16003              	.LBI685:
 127:sieve_extend.c ****     // return searchBitFalse(bitarray, index);
 16004              		.loc 1 127 25 view .LVU5582
 16005              	.LBB686:
 130:sieve_extend.c ****    bitshift_t index_bit  = bitindex_calc(index);
 16006              		.loc 1 130 4 view .LVU5583
 131:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 16007              		.loc 1 131 4 view .LVU5584
 16008              	# sieve_extend.c:130:    register counter_t index_word = wordindex(index);
 130:sieve_extend.c ****    bitshift_t index_bit  = bitindex_calc(index);
GAS LISTING /tmp/cc64mrzX.s 			page 427


 16009              		.loc 1 130 23 is_stmt 0 view .LVU5585
 16010 5670 4C89D1   		mov	rcx, r10	# index_word, _411
 16011              	# sieve_extend.c:131:    bitshift_t index_bit  = bitindex_calc(index);
 131:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 16012              		.loc 1 131 15 view .LVU5586
 16013 5673 4C89D7   		mov	rdi, r10	# index_bit, _411
 16014              	.LVL952:
 16015              	# sieve_extend.c:130:    register counter_t index_word = wordindex(index);
 130:sieve_extend.c ****    bitshift_t index_bit  = bitindex_calc(index);
 16016              		.loc 1 130 23 view .LVU5587
 16017 5676 48C1E906 		shr	rcx, 6	# index_word,
 16018              	# sieve_extend.c:131:    bitshift_t index_bit  = bitindex_calc(index);
 131:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 16019              		.loc 1 131 15 view .LVU5588
 16020 567a 83E73F   		and	edi, 63	# index_bit,
 16021              	.LVL953:
 132:sieve_extend.c ****    index += distance;
 16022              		.loc 1 132 4 is_stmt 1 view .LVU5589
 16023              	# sieve_extend.c:132:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 132:sieve_extend.c ****    index += distance;
 16024              		.loc 1 132 89 is_stmt 0 view .LVU5590
 16025 567d 4C8B1CCB 		mov	r11, QWORD PTR [rbx+rcx*8]	# *_665, *_665
 16026 5681 C442C3F7 		shrx	r13, r11, rdi	# tmp805, *_665, index_bit
 16026      EB
 16027              	# sieve_extend.c:132:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 132:sieve_extend.c ****    index += distance;
 16028              		.loc 1 132 66 view .LVU5591
 16029 5686 49F7D5   		not	r13	# tmp807
 16030              	# sieve_extend.c:132:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 132:sieve_extend.c ****    index += distance;
 16031              		.loc 1 132 76 view .LVU5592
 16032 5689 488D34CD 		lea	rsi, 0[0+rcx*8]	# _664,
 16032      00000000 
 16033              	# sieve_extend.c:132:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 132:sieve_extend.c ****    index += distance;
 16034              		.loc 1 132 25 view .LVU5593
 16035 5691 F34D0FBC 		tzcnt	r8, r13	# distance, tmp807
 16035      C5
 16036              	.LVL954:
 133:sieve_extend.c ****    distance += index_bit;
 16037              		.loc 1 133 4 is_stmt 1 view .LVU5594
 16038              	# sieve_extend.c:133:    index += distance;
 133:sieve_extend.c ****    distance += index_bit;
 16039              		.loc 1 133 10 is_stmt 0 view .LVU5595
 16040 5696 4B8D0C02 		lea	rcx, [r10+r8]	# index,
 16041              	.LVL955:
 134:sieve_extend.c **** 
 16042              		.loc 1 134 4 is_stmt 1 view .LVU5596
 136:sieve_extend.c ****        index_word++;
 16043              		.loc 1 136 4 view .LVU5597
 136:sieve_extend.c ****        index_word++;
 16044              		.loc 1 136 10 view .LVU5598
 16045              	# sieve_extend.c:134:    distance += index_bit;
 134:sieve_extend.c **** 
 16046              		.loc 1 134 13 is_stmt 0 view .LVU5599
 16047 569a 4901F8   		add	r8, rdi	# distance, index_bit
 16048              	.LVL956:
GAS LISTING /tmp/cc64mrzX.s 			page 428


 16049              	# sieve_extend.c:136:    while unlikely(distance == WORD_SIZE_bitshift) { // to prevent a bug from 
 136:sieve_extend.c ****        index_word++;
 16050              		.loc 1 136 10 view .LVU5600
 16051 569d 4983F840 		cmp	r8, 64	# distance,
 16052 56a1 7435     		je	.L1506	#,
 142:sieve_extend.c **** }
 16053              		.loc 1 142 4 is_stmt 1 view .LVU5601
 16054              	.LVL957:
 142:sieve_extend.c **** }
 16055              		.loc 1 142 4 is_stmt 0 view .LVU5602
 16056              	.LBE686:
 16057              	.LBE685:
 955:sieve_extend.c ****     }
 16058              		.loc 1 955 9 is_stmt 1 view .LVU5603
 16059              	# sieve_extend.c:955:         start = prime * prime * 2 + prime * 2;
 955:sieve_extend.c ****     }
 16060              		.loc 1 955 35 is_stmt 0 view .LVU5604
 16061 56a3 4C8D5101 		lea	r10, 1[rcx]	# _411,
 16062              	# sieve_extend.c:955:         start = prime * prime * 2 + prime * 2;
 955:sieve_extend.c ****     }
 16063              		.loc 1 955 15 view .LVU5605
 16064 56a7 4C89D6   		mov	rsi, r10	# tmp822, _411
 16065 56aa 480FAFF1 		imul	rsi, rcx	# tmp822, index
 16066 56ae 4801F6   		add	rsi, rsi	# index
 16067              	.LVL958:
 949:sieve_extend.c ****         step  = prime * 2 + 1;
 16068              		.loc 1 949 11 is_stmt 1 view .LVU5606
 16069 56b1 4939F4   		cmp	r12, rsi	# block_stop, index
 16070 56b4 0F827AF5 		jb	.L1482	#,
 16070      FFFF
 950:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 16071              		.loc 1 950 9 view .LVU5607
 16072              	# sieve_extend.c:951:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 951:sieve_extend.c ****         if likely(start <= block_stop)
 16073              		.loc 1 951 12 is_stmt 0 view .LVU5608
 16074 56ba 4D39FA   		cmp	r10, r15	# _411, block_start
 16075              	# sieve_extend.c:950:         step  = prime * 2 + 1;
 950:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 16076              		.loc 1 950 15 view .LVU5609
 16077 56bd 488D7C09 		lea	rdi, 1[rcx+rcx]	# step,
 16077      01
 16078              	.LVL959:
 951:sieve_extend.c ****         if likely(start <= block_stop)
 16079              		.loc 1 951 9 is_stmt 1 view .LVU5610
 16080              	# sieve_extend.c:951:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 951:sieve_extend.c ****         if likely(start <= block_stop)
 16081              		.loc 1 951 12 is_stmt 0 view .LVU5611
 16082 56c2 0F86B8FE 		jbe	.L1507	#,
 16082      FFFF
 16083              	.LVL960:
 16084              	.L981:
 16085              	.LBB688:
 16086              	.LBB683:
 342:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 16087              		.loc 1 342 41 is_stmt 1 view .LVU5612
 16088              	# sieve_extend.c:342:     for (counter_t index = range_start; index <= range_stop; index += step) {
 342:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
GAS LISTING /tmp/cc64mrzX.s 			page 429


 16089              		.loc 1 342 5 is_stmt 0 view .LVU5613
 16090 56c8 4939F4   		cmp	r12, rsi	# block_stop, index
 16091 56cb 72A3     		jb	.L986	#,
 16092 56cd E9C7FEFF 		jmp	.L985	#
 16092      FF
 16093              	.LVL961:
 16094              		.p2align 4,,7
 16095 56d2 660F1F44 		.p2align 3
 16095      0000
 16096              	.L1506:
 342:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 16097              		.loc 1 342 5 view .LVU5614
 16098              	.LBE683:
 16099              	.LBE688:
 16100              	.LBB689:
 16101              	.LBB687:
 137:sieve_extend.c ****        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 16102              		.loc 1 137 8 is_stmt 1 view .LVU5615
 138:sieve_extend.c ****        index += distance;
 16103              		.loc 1 138 8 view .LVU5616
 16104              	# sieve_extend.c:138:        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 138:sieve_extend.c ****        index += distance;
 16105              		.loc 1 138 48 is_stmt 0 view .LVU5617
 16106 56d8 4C8B4C33 		mov	r9, QWORD PTR 8[rbx+rsi]	# *_677, *_677
 16106      08
 16107 56dd 49F7D1   		not	r9	# tmp815
 16108              	.LVL962:
 139:sieve_extend.c ****    }
 16109              		.loc 1 139 8 is_stmt 1 view .LVU5618
 16110              	# sieve_extend.c:138:        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 138:sieve_extend.c ****        index += distance;
 16111              		.loc 1 138 17 is_stmt 0 view .LVU5619
 16112 56e0 F34D0FBC 		tzcnt	r14, r9	# distance, tmp815
 16112      F1
 16113              	.LVL963:
 16114              	# sieve_extend.c:139:        index += distance;
 139:sieve_extend.c ****    }
 16115              		.loc 1 139 14 view .LVU5620
 16116 56e5 4C01F1   		add	rcx, r14	# index, distance
 16117              	.LVL964:
 136:sieve_extend.c ****        index_word++;
 16118              		.loc 1 136 10 is_stmt 1 view .LVU5621
 142:sieve_extend.c **** }
 16119              		.loc 1 142 4 view .LVU5622
 142:sieve_extend.c **** }
 16120              		.loc 1 142 4 is_stmt 0 view .LVU5623
 16121              	.LBE687:
 16122              	.LBE689:
 955:sieve_extend.c ****     }
 16123              		.loc 1 955 9 is_stmt 1 view .LVU5624
 16124              	# sieve_extend.c:955:         start = prime * prime * 2 + prime * 2;
 955:sieve_extend.c ****     }
 16125              		.loc 1 955 35 is_stmt 0 view .LVU5625
 16126 56e8 4C8D5101 		lea	r10, 1[rcx]	# _411,
 16127              	# sieve_extend.c:955:         start = prime * prime * 2 + prime * 2;
 955:sieve_extend.c ****     }
 16128              		.loc 1 955 15 view .LVU5626
GAS LISTING /tmp/cc64mrzX.s 			page 430


 16129 56ec 4C89D0   		mov	rax, r10	# tmp820, _411
 16130 56ef 480FAFC1 		imul	rax, rcx	# tmp820, index
 16131 56f3 488D3400 		lea	rsi, [rax+rax]	# index,
 16132              	.LVL965:
 949:sieve_extend.c ****         step  = prime * 2 + 1;
 16133              		.loc 1 949 11 is_stmt 1 view .LVU5627
 16134 56f7 4939F4   		cmp	r12, rsi	# block_stop, index
 16135 56fa 0F836EFE 		jnb	.L972	#,
 16135      FFFF
 16136 5700 E92FF5FF 		jmp	.L1482	#
 16136      FF
 16137              	.LVL966:
 16138              		.p2align 4,,7
 16139 5705 0F1F00   		.p2align 3
 16140              	.L991:
 16141              	.LBB690:
 16142              	.LBB623:
 16143              	# sieve_extend.c:237: 	register bitword_t pattern = BITWORD_SHIFTBIT;
 237:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; patternsize += patternsi
 16144              		.loc 1 237 21 is_stmt 0 view .LVU5628
 16145 5708 B9010000 		mov	ecx, 1	# pattern,
 16145      00
 16146 570d E97EF2FF 		jmp	.L933	#
 16146      FF
 16147              	.LVL967:
 16148              		.p2align 4,,7
 16149 5712 660F1F44 		.p2align 3
 16149      0000
 16150              	.L1496:
 237:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; patternsize += patternsi
 16151              		.loc 1 237 21 view .LVU5629
 16152              	.LBE623:
 16153              	.LBE690:
 16154              	.LBE695:
 16155              	.LBE706:
 16156              	.LBE710:
 16157              	.LBB711:
 16158              	.LBB589:
 16159              	.LBB582:
 16160              	.LBB575:
 16161              	.LBB571:
 16162              	.LBB569:
 16163              	.LBB564:
 16164              	.LBB563:
 16165              	.LBB560:
 200:sieve_extend.c ****    }
 16166              		.loc 1 200 7 is_stmt 1 view .LVU5630
 16167              	# sieve_extend.c:200:       *index_ptr |= (mask & chopmask(range_stop));
 200:sieve_extend.c ****    }
 16168              		.loc 1 200 27 is_stmt 0 view .LVU5631
 16169 5718 48235424 		and	rdx, QWORD PTR 40[rsp]	# tmp624, %sfp
 16169      28
 16170              	.LVL968:
 16171              	# sieve_extend.c:200:       *index_ptr |= (mask & chopmask(range_stop));
 200:sieve_extend.c ****    }
 16172              		.loc 1 200 18 view .LVU5632
 16173 571d 490911   		or	QWORD PTR [r9], rdx	# *index_ptr_920, tmp624
GAS LISTING /tmp/cc64mrzX.s 			page 431


 16174 5720 E924EEFF 		jmp	.L910	#
 16174      FF
 16175              	.LVL969:
 16176              	.L1492:
 200:sieve_extend.c ****    }
 16177              		.loc 1 200 18 view .LVU5633
 16178              	.LBE560:
 16179              	.LBE563:
 16180              	.LBE564:
 16181              	.LBE569:
 16182              	.LBE571:
 16183              	.LBE575:
 16184              	.LBB576:
 16185              	.LBB525:
 874:sieve_extend.c ****         return; // rapid exit for small sizes
 16186              		.loc 1 874 9 is_stmt 1 view .LVU5634
 16187 5725 4C89C1   		mov	rcx, r8	#, _69
 16188 5728 4C89F2   		mov	rdx, r14	#, patternsize_bits
 16189 572b 4C89F6   		mov	rsi, r14	#, patternsize_bits
 16190 572e 4C89FF   		mov	rdi, r15	#, _97
 16191 5731 4C894424 		mov	QWORD PTR 40[rsp], r8	# %sfp, _69
 16191      28
 16192 5736 E8C5A8FF 		call	extendSieve_smallSize	#
 16192      FF
 16193              	.LVL970:
 875:sieve_extend.c ****     }
 16194              		.loc 1 875 9 view .LVU5635
 16195 573b 4C8B4424 		mov	r8, QWORD PTR 40[rsp]	# _69, %sfp
 16195      28
 16196 5740 4C897424 		mov	QWORD PTR 24[rsp], r14	# %sfp, patternsize_bits
 16196      18
 16197 5745 E97FE4FF 		jmp	.L885	#
 16197      FF
 16198              	.LVL971:
 16199              	.L1497:
 875:sieve_extend.c ****     }
 16200              		.loc 1 875 9 is_stmt 0 view .LVU5636
 16201              	.LBE525:
 16202              	.LBE576:
 16203              	.LBE582:
 16204              	.LBE589:
 16205              	.LBE711:
 16206              	.LBB712:
 16207              	.LBB599:
 882:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 16208              		.loc 1 882 37 is_stmt 1 view .LVU5637
 16209 574a E8E1CEFF 		call	extendSieve_shiftleft	#
 16209      FF
 16210              	.LVL972:
 882:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 16211              		.loc 1 882 37 is_stmt 0 view .LVU5638
 16212 574f E957EEFF 		jmp	.L921	#
 16212      FF
 16213              	.LVL973:
 16214              	.L1487:
 882:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 16215              		.loc 1 882 37 view .LVU5639
GAS LISTING /tmp/cc64mrzX.s 			page 432


 16216 5754 4C8B6C24 		mov	r13, QWORD PTR 48[rsp]	# <retval>, %sfp
 16216      30
 16217              	.LBE599:
 16218              	.LBE712:
 16219              	.LBB713:
 16220              	.LBB590:
 16221              	.LBB583:
 16222              	# sieve_extend.c:989:         if (range_stop > block_stop) return block; //range_stop = block_stop;
 989:sieve_extend.c **** 
 16223              		.loc 1 989 12 view .LVU5640
 16224 5759 4C89F2   		mov	rdx, r14	# block$pattern_size, patternsize_bits
 16225 575c 488B7424 		mov	rsi, QWORD PTR 16[rsp]	# block$pattern_start, %sfp
 16225      10
 16226 5761 48894C24 		mov	QWORD PTR 40[rsp], rcx	# %sfp, prime
 16226      28
 16227 5766 4D8B7D08 		mov	r15, QWORD PTR 8[r13]	# prephitmp_1432, sieve_92->bits
 16228              	.LVL974:
 989:sieve_extend.c **** 
 16229              		.loc 1 989 12 view .LVU5641
 16230 576a 4C897C24 		mov	QWORD PTR 8[rsp], r15	# %sfp, prephitmp_1432
 16230      08
 16231              	.LVL975:
 989:sieve_extend.c **** 
 16232              		.loc 1 989 12 view .LVU5642
 16233 576f E900EEFF 		jmp	.L884	#
 16233      FF
 16234              	.LVL976:
 16235              	.L990:
 16236              	.LBB577:
 16237              	.LBB540:
 16238              	# sieve_extend.c:237: 	register bitword_t pattern = BITWORD_SHIFTBIT;
 237:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; patternsize += patternsi
 16239              		.loc 1 237 21 view .LVU5643
 16240 5774 B9010000 		mov	ecx, 1	# pattern,
 16240      00
 16241 5779 E9A2E6FF 		jmp	.L890	#
 16241      FF
 16242              	.LVL977:
 16243              	.L1485:
 237:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; patternsize += patternsi
 16244              		.loc 1 237 21 view .LVU5644
 16245              	.LBE540:
 16246              	.LBE577:
 16247              	.LBE583:
 16248              	# sieve_extend.c:974:     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 
 974:sieve_extend.c **** 
 16249              		.loc 1 974 18 view .LVU5645
 16250 577e 31D2     		xor	edx, edx	# block$pattern_size
 16251 5780 31F6     		xor	esi, esi	# block$pattern_start
 16252              	# sieve_extend.c:969:     register counter_t prime   = 0;
 969:sieve_extend.c ****     counter_t patternsize_bits = 1;
 16253              		.loc 1 969 24 view .LVU5646
 16254 5782 48C74424 		mov	QWORD PTR 40[rsp], 0	# %sfp,
 16254      28000000 
 16254      00
 16255 578b E9A7E8FF 		jmp	.L877	#
 16255      FF
GAS LISTING /tmp/cc64mrzX.s 			page 433


 16256              	.LBE590:
 16257              	.LBE713:
 16258              		.cfi_endproc
 16259              	.LFE75:
 16261              		.p2align 4
 16263              	tune_benchmark:
 16264              	.LVL978:
 16265              	.LFB82:
1133:sieve_extend.c **** 
1134:sieve_extend.c **** static void tune_benchmark(tuning_result_type* tuning_result, counter_t tuning_result_index) {
 16266              		.loc 1 1134 94 is_stmt 1 view -0
 16267              		.cfi_startproc
 16268              		.loc 1 1134 94 is_stmt 0 view .LVU5648
 16269 5790 4154     		push	r12	#
 16270              		.cfi_def_cfa_offset 16
 16271              		.cfi_offset 12, -16
 16272 5792 4989F8   		mov	r8, rdi	# tmp149, tuning_result
 16273              	# sieve_extend.c:1140:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_f
1135:sieve_extend.c ****     counter_t passes = 0;
1136:sieve_extend.c ****     double elapsed_time = 0;
1137:sieve_extend.c ****     struct timespec start_time,end_time;
1138:sieve_extend.c ****     struct sieve_state *sieve_instance;
1139:sieve_extend.c **** 
1140:sieve_extend.c ****     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_faster;
 16274              		.loc 1 1140 44 view .LVU5649
 16275 5795 488D3C76 		lea	rdi, [rsi+rsi*2]	# tmp114,
 16276              	.LVL979:
 16277              	# sieve_extend.c:1134: static void tune_benchmark(tuning_result_type* tuning_result, counter_t tuni
1134:sieve_extend.c ****     counter_t passes = 0;
 16278              		.loc 1 1134 94 view .LVU5650
 16279 5799 55       		push	rbp	#
 16280              		.cfi_def_cfa_offset 24
 16281              		.cfi_offset 6, -24
 16282              	# sieve_extend.c:1140:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_f
 16283              		.loc 1 1140 44 view .LVU5651
 16284 579a 48C1E705 		sal	rdi, 5	# tmp115,
 16285              	# sieve_extend.c:1135:     counter_t passes = 0;
1135:sieve_extend.c ****     counter_t passes = 0;
 16286              		.loc 1 1135 15 view .LVU5652
 16287 579e 4531E4   		xor	r12d, r12d	# passes
 16288              	# sieve_extend.c:1134: static void tune_benchmark(tuning_result_type* tuning_result, counter_t tuni
1134:sieve_extend.c ****     counter_t passes = 0;
 16289              		.loc 1 1134 94 view .LVU5653
 16290 57a1 53       		push	rbx	#
 16291              		.cfi_def_cfa_offset 32
 16292              		.cfi_offset 3, -32
 16293              	# sieve_extend.c:1140:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_f
 16294              		.loc 1 1140 44 view .LVU5654
 16295 57a2 498D1C38 		lea	rbx, [r8+rdi]	# _2,
 16296              	# sieve_extend.c:1144:     clock_gettime(CLOCK_MONOTONIC,&start_time);
1141:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
1142:sieve_extend.c ****     global_VECTORSTEP_FASTER = tuning_result[tuning_result_index].vectorstep_faster;
1143:sieve_extend.c **** 
1144:sieve_extend.c ****     clock_gettime(CLOCK_MONOTONIC,&start_time);
 16297              		.loc 1 1144 5 view .LVU5655
 16298 57a6 BF010000 		mov	edi, 1	#,
 16298      00
GAS LISTING /tmp/cc64mrzX.s 			page 434


 16299              	# sieve_extend.c:1134: static void tune_benchmark(tuning_result_type* tuning_result, counter_t tuni
1134:sieve_extend.c ****     counter_t passes = 0;
 16300              		.loc 1 1134 94 view .LVU5656
 16301 57ab 488D6424 		lea	rsp, -48[rsp]	#,
 16301      D0
 16302              		.cfi_def_cfa_offset 80
 16303              	# sieve_extend.c:1141:     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep
1141:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
 16304              		.loc 1 1141 30 view .LVU5657
 16305 57b0 488B5328 		mov	rdx, QWORD PTR 40[rbx]	# _2->mediumstep_faster, _2->mediumstep_faster
 16306              	# sieve_extend.c:1144:     clock_gettime(CLOCK_MONOTONIC,&start_time);
 16307              		.loc 1 1144 5 view .LVU5658
 16308 57b4 4889E6   		mov	rsi, rsp	# tmp119,
 16309              	.LVL980:
 16310              	# sieve_extend.c:1142:     global_VECTORSTEP_FASTER = tuning_result[tuning_result_index].vectorstep
1142:sieve_extend.c **** 
 16311              		.loc 1 1142 30 view .LVU5659
 16312 57b7 488B4B30 		mov	rcx, QWORD PTR 48[rbx]	# _2->vectorstep_faster, _2->vectorstep_faster
 16313              	# sieve_extend.c:1134: static void tune_benchmark(tuning_result_type* tuning_result, counter_t tuni
1134:sieve_extend.c ****     counter_t passes = 0;
 16314              		.loc 1 1134 94 view .LVU5660
 16315 57bb 64488B04 		mov	rax, QWORD PTR fs:40	# tmp160, MEM[(<address-space-1> long unsigned int *)40B]
 16315      25280000 
 16315      00
 16316 57c4 48894424 		mov	QWORD PTR 40[rsp], rax	# D.7270, tmp160
 16316      28
 16317 57c9 31C0     		xor	eax, eax	# tmp160
1135:sieve_extend.c ****     double elapsed_time = 0;
 16318              		.loc 1 1135 5 is_stmt 1 view .LVU5661
 16319              	.LVL981:
1136:sieve_extend.c ****     struct timespec start_time,end_time;
 16320              		.loc 1 1136 5 view .LVU5662
1137:sieve_extend.c ****     struct sieve_state *sieve_instance;
 16321              		.loc 1 1137 5 view .LVU5663
1138:sieve_extend.c **** 
 16322              		.loc 1 1138 5 view .LVU5664
1140:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
 16323              		.loc 1 1140 5 view .LVU5665
 16324              	# sieve_extend.c:1140:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_f
1140:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
 16325              		.loc 1 1140 29 is_stmt 0 view .LVU5666
 16326 57cb 488B4320 		mov	rax, QWORD PTR 32[rbx]	# _2->smallstep_faster, _2->smallstep_faster
 16327              	# sieve_extend.c:1141:     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep
1141:sieve_extend.c ****     global_VECTORSTEP_FASTER = tuning_result[tuning_result_index].vectorstep_faster;
 16328              		.loc 1 1141 30 view .LVU5667
 16329 57cf 48891500 		mov	QWORD PTR global_MEDIUMSTEP_FASTER[rip], rdx	# global_MEDIUMSTEP_FASTER, _2->mediumstep_faster
 16329      000000
 16330              	# sieve_extend.c:1142:     global_VECTORSTEP_FASTER = tuning_result[tuning_result_index].vectorstep
1142:sieve_extend.c **** 
 16331              		.loc 1 1142 30 view .LVU5668
 16332 57d6 48890D00 		mov	QWORD PTR global_VECTORSTEP_FASTER[rip], rcx	# global_VECTORSTEP_FASTER, _2->vectorstep_faster
 16332      000000
 16333              	# sieve_extend.c:1140:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_f
1140:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
 16334              		.loc 1 1140 29 view .LVU5669
 16335 57dd 48890500 		mov	QWORD PTR global_SMALLSTEP_FASTER[rip], rax	# global_SMALLSTEP_FASTER, _2->smallstep_faster
 16335      000000
GAS LISTING /tmp/cc64mrzX.s 			page 435


1141:sieve_extend.c ****     global_VECTORSTEP_FASTER = tuning_result[tuning_result_index].vectorstep_faster;
 16336              		.loc 1 1141 5 is_stmt 1 view .LVU5670
1142:sieve_extend.c **** 
 16337              		.loc 1 1142 5 view .LVU5671
 16338              		.loc 1 1144 5 view .LVU5672
 16339 57e4 E8000000 		call	clock_gettime@PLT	#
 16339      00
 16340              	.LVL982:
1145:sieve_extend.c ****     while (elapsed_time <= tuning_result[tuning_result_index].sample_duration && passes < tuning_re
 16341              		.loc 1 1145 5 view .LVU5673
 16342              		.loc 1 1145 11 view .LVU5674
 16343 57e9 C5D957E4 		vxorpd	xmm4, xmm4, xmm4	# elapsed_time
 16344 57ed C5F92F63 		vcomisd	xmm4, QWORD PTR 64[rbx]	# elapsed_time, _2->sample_duration
 16344      40
 16345 57f2 C5FB103D 		vmovsd	xmm7, QWORD PTR .LC7[rip]	# _58,
 16345      00000000 
 16346 57fa 7676     		jbe	.L1509	#,
 16347 57fc E99E0000 		jmp	.L1510	#
 16347      00
 16348              	.LVL983:
 16349              		.p2align 4,,7
 16350 5801 0F1F8000 		.p2align 3
 16350      000000
 16351              	.L1513:
1146:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 16352              		.loc 1 1146 9 view .LVU5675
 16353              	# sieve_extend.c:1146:         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, t
 16354              		.loc 1 1146 26 is_stmt 0 view .LVU5676
 16355 5808 488B7308 		mov	rsi, QWORD PTR 8[rbx]	# _2->blocksize_bits, _2->blocksize_bits
 16356              	# sieve_extend.c:1148:         passes++;
1147:sieve_extend.c ****         delete_sieve(sieve_instance);
1148:sieve_extend.c ****         passes++;
 16357              		.loc 1 1148 15 view .LVU5677
 16358 580c 4983C401 		add	r12, 1	# passes,
 16359              	.LVL984:
 16360              	# sieve_extend.c:1146:         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, t
1146:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 16361              		.loc 1 1146 26 view .LVU5678
 16362 5810 488B3B   		mov	rdi, QWORD PTR [rbx]	#, _2->maxints
 16363 5813 E8B8E2FF 		call	sieve	#
 16363      FF
 16364              	.LVL985:
 16365              	.LBB714:
 16366              	.LBB715:
 16367              	# sieve_extend.c:116:     free(sieve->bitarray);
 116:sieve_extend.c ****     free(sieve);
 16368              		.loc 1 116 5 view .LVU5679
 16369 5818 488B38   		mov	rdi, QWORD PTR [rax]	#, sieve_instance_37->bitarray
 16370              	.LBE715:
 16371              	.LBE714:
 16372              	# sieve_extend.c:1146:         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, t
1146:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 16373              		.loc 1 1146 26 view .LVU5680
 16374 581b 4889C5   		mov	rbp, rax	# sieve_instance, tmp151
 16375              	.LVL986:
1147:sieve_extend.c ****         delete_sieve(sieve_instance);
 16376              		.loc 1 1147 9 is_stmt 1 view .LVU5681
GAS LISTING /tmp/cc64mrzX.s 			page 436


 16377              	.LBB717:
 16378              	.LBI714:
 115:sieve_extend.c ****     free(sieve->bitarray);
 16379              		.loc 1 115 13 view .LVU5682
 16380              	.LBB716:
 116:sieve_extend.c ****     free(sieve);
 16381              		.loc 1 116 5 view .LVU5683
 16382 581e E8000000 		call	free@PLT	#
 16382      00
 16383              	.LVL987:
 117:sieve_extend.c **** }
 16384              		.loc 1 117 5 view .LVU5684
 16385 5823 4889EF   		mov	rdi, rbp	#, sieve_instance
 16386 5826 E8000000 		call	free@PLT	#
 16386      00
 16387              	.LVL988:
 117:sieve_extend.c **** }
 16388              		.loc 1 117 5 is_stmt 0 view .LVU5685
 16389              	.LBE716:
 16390              	.LBE717:
 16391              		.loc 1 1148 9 is_stmt 1 view .LVU5686
1149:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&end_time);
 16392              		.loc 1 1149 9 view .LVU5687
 16393 582b 488D7424 		lea	rsi, 16[rsp]	# tmp122,
 16393      10
 16394 5830 BF010000 		mov	edi, 1	#,
 16394      00
 16395 5835 E8000000 		call	clock_gettime@PLT	#
 16395      00
 16396              	.LVL989:
1150:sieve_extend.c ****         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time.tv_
 16397              		.loc 1 1150 9 view .LVU5688
 16398              	# sieve_extend.c:1150:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 16399              		.loc 1 1150 58 is_stmt 0 view .LVU5689
 16400 583a C4E1FB2A 		vcvtsi2sd	xmm0, xmm0, QWORD PTR 24[rsp]	# tmp123, end_time.tv_nsec
 16400      442418
 16401              	# sieve_extend.c:1150:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 16402              		.loc 1 1150 64 view .LVU5690
 16403 5841 C4E1F32A 		vcvtsi2sd	xmm1, xmm1, QWORD PTR [rsp]	# tmp124, start_time.tv_sec
 16403      0C24
 16404              	# sieve_extend.c:1150:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 16405              		.loc 1 1150 104 view .LVU5691
 16406 5847 C4E1E32A 		vcvtsi2sd	xmm3, xmm3, QWORD PTR 8[rsp]	# tmp126, start_time.tv_nsec
 16406      5C2408
 16407              	# sieve_extend.c:1150:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 16408              		.loc 1 1150 40 view .LVU5692
 16409 584e C4E1EB2A 		vcvtsi2sd	xmm2, xmm2, QWORD PTR 16[rsp]	# tmp127, end_time.tv_sec
 16409      542410
 16410 5855 C4E2F19B 		vfmsub132sd	xmm0, xmm1, QWORD PTR .LC8[rip]	# _60, tmp124,
 16410      05000000 
 16410      00
 16411 585e C4E2E99D 		vfnmadd132sd	xmm3, xmm2, QWORD PTR .LC8[rip]	# _61, tmp127,
 16411      1D000000 
 16411      00
 16412              	# sieve_extend.c:1150:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 16413              		.loc 1 1150 22 view .LVU5693
 16414 5867 C5FB58E3 		vaddsd	xmm4, xmm0, xmm3	# elapsed_time, _60, _61
GAS LISTING /tmp/cc64mrzX.s 			page 437


 16415              	.LVL990:
1145:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 16416              		.loc 1 1145 11 is_stmt 1 view .LVU5694
 16417 586b C5F92F63 		vcomisd	xmm4, QWORD PTR 64[rbx]	# elapsed_time, _2->sample_duration
 16417      40
 16418 5870 7706     		ja	.L1524	#,
 16419              	.LVL991:
 16420              	.L1509:
 16421              	# sieve_extend.c:1145:     while (elapsed_time <= tuning_result[tuning_result_index].sample_duratio
1145:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 16422              		.loc 1 1145 79 is_stmt 0 discriminator 1 view .LVU5695
 16423 5872 4C396338 		cmp	QWORD PTR 56[rbx], r12	# _2->sample_max, passes
 16424 5876 7790     		ja	.L1513	#,
 16425              	.L1524:
1145:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 16426              		.loc 1 1145 79 discriminator 1 view .LVU5696
 16427 5878 C4C1CB2A 		vcvtsi2sd	xmm6, xmm6, r12	# tmp133, passes
 16427      F4
 16428 587d 4D85E4   		test	r12, r12	# passes
 16429 5880 7919     		jns	.L1515	#,
1145:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 16430              		.loc 1 1145 79 discriminator 1 view .LVU5697
 16431 5882 4C89E6   		mov	rsi, r12	# tmp135, passes
 16432 5885 4D89E1   		mov	r9, r12	# tmp136, passes
 16433 5888 48D1EE   		shr	rsi	# tmp135
 16434 588b 4183E101 		and	r9d, 1	# tmp136,
 16435 588f 4C09CE   		or	rsi, r9	# tmp148, tmp136
 16436 5892 C4E1D32A 		vcvtsi2sd	xmm5, xmm5, rsi	# tmp134, tmp148
 16436      EE
 16437 5897 C5D358F5 		vaddsd	xmm6, xmm5, xmm5	# tmp133, tmp134, tmp134
 16438              	.L1515:
1145:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 16439              		.loc 1 1145 79 discriminator 1 view .LVU5698
 16440 589b C5CB5EFC 		vdivsd	xmm7, xmm6, xmm4	# _58, tmp133, elapsed_time
 16441              	.LVL992:
 16442              	.L1510:
1151:sieve_extend.c ****     }
1152:sieve_extend.c ****     tuning_result[tuning_result_index].passes = passes;
 16443              		.loc 1 1152 5 is_stmt 1 view .LVU5699
 16444              	# sieve_extend.c:1152:     tuning_result[tuning_result_index].passes = passes;
 16445              		.loc 1 1152 47 is_stmt 0 view .LVU5700
 16446 589f 4C896348 		mov	QWORD PTR 72[rbx], r12	# _2->passes, passes
1153:sieve_extend.c ****     tuning_result[tuning_result_index].elapsed_time = elapsed_time;
 16447              		.loc 1 1153 5 is_stmt 1 view .LVU5701
 16448              	# sieve_extend.c:1153:     tuning_result[tuning_result_index].elapsed_time = elapsed_time;
 16449              		.loc 1 1153 53 is_stmt 0 view .LVU5702
 16450 58a3 C5FB1163 		vmovsd	QWORD PTR 80[rbx], xmm4	# _2->elapsed_time, elapsed_time
 16450      50
1154:sieve_extend.c ****     tuning_result[tuning_result_index].avg = passes/elapsed_time;
 16451              		.loc 1 1154 5 is_stmt 1 view .LVU5703
 16452              	# sieve_extend.c:1154:     tuning_result[tuning_result_index].avg = passes/elapsed_time;
 16453              		.loc 1 1154 44 is_stmt 0 view .LVU5704
 16454 58a8 C5FB117B 		vmovsd	QWORD PTR 88[rbx], xmm7	# _2->avg, _58
 16454      58
 16455              	# sieve_extend.c:1155: }
1155:sieve_extend.c **** }
 16456              		.loc 1 1155 1 view .LVU5705
GAS LISTING /tmp/cc64mrzX.s 			page 438


 16457 58ad 488B4424 		mov	rax, QWORD PTR 40[rsp]	# tmp161, D.7270
 16457      28
 16458 58b2 64483304 		xor	rax, QWORD PTR fs:40	# tmp161, MEM[(<address-space-1> long unsigned int *)40B]
 16458      25280000 
 16458      00
 16459 58bb 750A     		jne	.L1525	#,
 16460 58bd 488D6424 		lea	rsp, 48[rsp]	#,
 16460      30
 16461              		.cfi_remember_state
 16462              		.cfi_def_cfa_offset 32
 16463 58c2 5B       		pop	rbx	#
 16464              		.cfi_def_cfa_offset 24
 16465 58c3 5D       		pop	rbp	#
 16466              		.cfi_def_cfa_offset 16
 16467 58c4 415C     		pop	r12	#
 16468              		.cfi_def_cfa_offset 8
 16469 58c6 C3       		ret	
 16470              	.L1525:
 16471              		.cfi_restore_state
 16472 58c7 E8000000 		call	__stack_chk_fail@PLT	#
 16472      00
 16473              	.LVL993:
 16474              		.cfi_endproc
 16475              	.LFE82:
 16477 58cc 0F1F4000 		.p2align 4
 16478              		.globl	shiftvec
 16480              	shiftvec:
 16481              	.LVL994:
 16482              	.LFB66:
 594:sieve_extend.c ****     int i = 0;
 16483              		.loc 1 594 1 is_stmt 1 view -0
 16484              		.cfi_startproc
 594:sieve_extend.c ****     int i = 0;
 16485              		.loc 1 594 1 is_stmt 0 view .LVU5707
 16486 58d0 F30F1EFA 		endbr64	
 595:sieve_extend.c ****     // MSVC: use steps of 2 for SSE, 4 for AVX2, 8 for AVX512
 16487              		.loc 1 595 5 is_stmt 1 view .LVU5708
 16488              	.LVL995:
 597:sieve_extend.c ****     {
 16489              		.loc 1 597 5 view .LVU5709
 597:sieve_extend.c ****     {
 16490              		.loc 1 597 12 view .LVU5710
 16491              	# sieve_extend.c:597:     for (; i+4 < size; i+=4,dst+=4,src+=4)
 597:sieve_extend.c ****     {
 16492              		.loc 1 597 5 is_stmt 0 view .LVU5711
 16493 58d4 83FA04   		cmp	edx, 4	# size,
 16494 58d7 0F8E9D03 		jle	.L1571	#,
 16494      0000
 16495 58dd 41BB4000 		mov	r11d, 64	# tmp130,
 16495      0000
 16496 58e3 448D42FB 		lea	r8d, -5[rdx]	# tmp131,
 16497 58e7 4489D8   		mov	eax, r11d	# _4, tmp130
 16498 58ea C5F96EC9 		vmovd	xmm1, ecx	# shift, shift
 16499 58ee 29C8     		sub	eax, ecx	# _4, shift
 16500              	.LBB718:
 16501              	# sieve_extend.c:600:             *(dst+j) = (*(src+j))<<shift;
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
GAS LISTING /tmp/cc64mrzX.s 			page 439


 16502              		.loc 1 600 25 view .LVU5712
 16503 58f0 C4E3FD00 		vpermq	ymm2, YMMWORD PTR [rsi], 85	# vect__102.704, MEM[base: src_35(D), index: ivtmp.718_114, off
 16503      1655
 16504              	# sieve_extend.c:600:             *(dst+j) = (*(src+j))<<shift;
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16505              		.loc 1 600 34 view .LVU5713
 16506 58f6 C5FE6F26 		vmovdqu	ymm4, YMMWORD PTR [rsi]	# tmp269, MEM[base: src_35(D), index: ivtmp.718_114, offset: 0B]
 16507 58fa C4E1F96E 		vmovq	xmm0, rax	# _4, _4
 16507      C0
 16508 58ff 41C1E802 		shr	r8d, 2	# _25,
 16509 5903 41B90100 		mov	r9d, 1	# ivtmp.715,
 16509      0000
 16510              	.LBE718:
 16511              	.LBB719:
 16512              	# sieve_extend.c:602:             *(dst+j) |= (*(src+1)>>(64-shift));
 602:sieve_extend.c ****     }
 16513              		.loc 1 602 34 view .LVU5714
 16514 5909 C5EDD3E8 		vpsrlq	ymm5, ymm2, xmm0	# vect__57.705, vect__102.704, _4
 16515              	.LBE719:
 16516              	.LBB720:
 16517              	# sieve_extend.c:600:             *(dst+j) = (*(src+j))<<shift;
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16518              		.loc 1 600 34 view .LVU5715
 16519 590d C5DDF3D9 		vpsllq	ymm3, ymm4, xmm1	# vect__104.709, tmp269, shift
 16520 5911 458D5001 		lea	r10d, 1[r8]	# tmp164,
 16521 5915 4589C3   		mov	r11d, r8d	# tmp169, _25
 16522              	.LBE720:
 16523              	.LBB721:
 16524              	# sieve_extend.c:602:             *(dst+j) |= (*(src+1)>>(64-shift));
 602:sieve_extend.c ****     }
 16525              		.loc 1 602 22 view .LVU5716
 16526 5918 C5D5EBF3 		vpor	ymm6, ymm5, ymm3	# vect__58.710, vect__57.705, vect__104.709
 16527 591c 4183E307 		and	r11d, 7	# tmp169,
 16528              	.LVL996:
 602:sieve_extend.c ****     }
 16529              		.loc 1 602 22 view .LVU5717
 16530              	.LBE721:
 16531              	.LBB722:
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16532              		.loc 1 599 25 is_stmt 1 view .LVU5718
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16533              		.loc 1 600 13 view .LVU5719
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16534              		.loc 1 599 32 view .LVU5720
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16535              		.loc 1 599 25 view .LVU5721
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16536              		.loc 1 600 13 view .LVU5722
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16537              		.loc 1 599 32 view .LVU5723
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16538              		.loc 1 599 25 view .LVU5724
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16539              		.loc 1 600 13 view .LVU5725
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16540              		.loc 1 599 32 view .LVU5726
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
GAS LISTING /tmp/cc64mrzX.s 			page 440


 16541              		.loc 1 599 25 view .LVU5727
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16542              		.loc 1 600 13 view .LVU5728
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16543              		.loc 1 599 32 view .LVU5729
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16544              		.loc 1 599 25 view .LVU5730
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16545              		.loc 1 599 25 is_stmt 0 view .LVU5731
 16546              	.LBE722:
 16547              	.LBB723:
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16548              		.loc 1 601 25 is_stmt 1 view .LVU5732
 602:sieve_extend.c ****     }
 16549              		.loc 1 602 13 view .LVU5733
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16550              		.loc 1 601 32 view .LVU5734
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16551              		.loc 1 601 25 view .LVU5735
 602:sieve_extend.c ****     }
 16552              		.loc 1 602 13 view .LVU5736
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16553              		.loc 1 601 32 view .LVU5737
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16554              		.loc 1 601 25 view .LVU5738
 602:sieve_extend.c ****     }
 16555              		.loc 1 602 13 view .LVU5739
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16556              		.loc 1 601 32 view .LVU5740
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16557              		.loc 1 601 25 view .LVU5741
 602:sieve_extend.c ****     }
 16558              		.loc 1 602 13 view .LVU5742
 16559 5920 4183FA01 		cmp	r10d, 1	# tmp164,
 16560 5924 B8200000 		mov	eax, 32	# ivtmp.718,
 16560      00
 16561              	# sieve_extend.c:602:             *(dst+j) |= (*(src+1)>>(64-shift));
 602:sieve_extend.c ****     }
 16562              		.loc 1 602 22 is_stmt 0 view .LVU5743
 16563 5929 C5FE7F37 		vmovdqu	YMMWORD PTR [rdi], ymm6	# MEM[base: dst_34(D), index: ivtmp.718_114, offset: 0B], vect__58
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16564              		.loc 1 601 32 is_stmt 1 view .LVU5744
 16565              	.LVL997:
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16566              		.loc 1 601 25 view .LVU5745
 16567              	.LBE723:
 597:sieve_extend.c ****     {
 16568              		.loc 1 597 24 view .LVU5746
 597:sieve_extend.c ****     {
 16569              		.loc 1 597 12 view .LVU5747
 16570 592d 0F866002 		jbe	.L1569	#,
 16570      0000
 16571 5933 4585DB   		test	r11d, r11d	# tmp169
 16572 5936 0F841E01 		je	.L1529	#,
 16572      0000
 16573 593c 4183FB01 		cmp	r11d, 1	# tmp169,
 16574 5940 0F84E500 		je	.L1556	#,
GAS LISTING /tmp/cc64mrzX.s 			page 441


 16574      0000
 16575 5946 4183FB02 		cmp	r11d, 2	# tmp169,
 16576 594a 0F84B600 		je	.L1557	#,
 16576      0000
 16577 5950 4183FB03 		cmp	r11d, 3	# tmp169,
 16578 5954 0F848700 		je	.L1558	#,
 16578      0000
 16579 595a 4183FB04 		cmp	r11d, 4	# tmp169,
 16580 595e 745B     		je	.L1559	#,
 16581 5960 4183FB05 		cmp	r11d, 5	# tmp169,
 16582 5964 7430     		je	.L1560	#,
 16583 5966 4183FB06 		cmp	r11d, 6	# tmp169,
 16584 596a 0F85DC02 		jne	.L1572	#,
 16584      0000
 16585              	.L1561:
 16586              	.LVL998:
 16587              	.LBB724:
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16588              		.loc 1 599 25 view .LVU5748
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16589              		.loc 1 600 13 view .LVU5749
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16590              		.loc 1 599 32 view .LVU5750
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16591              		.loc 1 599 25 view .LVU5751
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16592              		.loc 1 600 13 view .LVU5752
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16593              		.loc 1 599 32 view .LVU5753
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16594              		.loc 1 599 25 view .LVU5754
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16595              		.loc 1 600 13 view .LVU5755
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16596              		.loc 1 599 32 view .LVU5756
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16597              		.loc 1 599 25 view .LVU5757
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16598              		.loc 1 600 13 view .LVU5758
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16599              		.loc 1 599 32 view .LVU5759
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16600              		.loc 1 599 25 view .LVU5760
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16601              		.loc 1 599 25 is_stmt 0 view .LVU5761
 16602              	.LBE724:
 16603              	.LBB725:
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16604              		.loc 1 601 25 is_stmt 1 view .LVU5762
 602:sieve_extend.c ****     }
 16605              		.loc 1 602 13 view .LVU5763
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16606              		.loc 1 601 32 view .LVU5764
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16607              		.loc 1 601 25 view .LVU5765
 602:sieve_extend.c ****     }
 16608              		.loc 1 602 13 view .LVU5766
GAS LISTING /tmp/cc64mrzX.s 			page 442


 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16609              		.loc 1 601 32 view .LVU5767
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16610              		.loc 1 601 25 view .LVU5768
 602:sieve_extend.c ****     }
 16611              		.loc 1 602 13 view .LVU5769
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16612              		.loc 1 601 32 view .LVU5770
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16613              		.loc 1 601 25 view .LVU5771
 602:sieve_extend.c ****     }
 16614              		.loc 1 602 13 view .LVU5772
 16615              	.LBE725:
 16616              	.LBB726:
 16617              	# sieve_extend.c:600:             *(dst+j) = (*(src+j))<<shift;
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16618              		.loc 1 600 25 is_stmt 0 view .LVU5773
 16619 5970 C463FD00 		vpermq	ymm12, YMMWORD PTR [rsi+rax], 85	# vect__102.704, MEM[base: src_35(D), index: ivtmp.718_114
 16619      240655
 16620 5977 4183C101 		add	r9d, 1	# ivtmp.715,
 16621              	# sieve_extend.c:600:             *(dst+j) = (*(src+j))<<shift;
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16622              		.loc 1 600 34 view .LVU5774
 16623 597b C57E6F34 		vmovdqu	ymm14, YMMWORD PTR [rsi+rax]	# tmp279, MEM[base: src_35(D), index: ivtmp.718_114, offset: 
 16623      06
 16624              	.LBE726:
 16625              	.LBB727:
 16626              	# sieve_extend.c:602:             *(dst+j) |= (*(src+1)>>(64-shift));
 602:sieve_extend.c ****     }
 16627              		.loc 1 602 34 view .LVU5775
 16628 5980 C51DD3E8 		vpsrlq	ymm13, ymm12, xmm0	# vect__57.705, vect__102.704, _4
 16629              	.LBE727:
 16630              	.LBB728:
 16631              	# sieve_extend.c:600:             *(dst+j) = (*(src+j))<<shift;
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16632              		.loc 1 600 34 view .LVU5776
 16633 5984 C50DF3F9 		vpsllq	ymm15, ymm14, xmm1	# vect__104.709, tmp279, shift
 16634              	.LBE728:
 16635              	.LBB729:
 16636              	# sieve_extend.c:602:             *(dst+j) |= (*(src+1)>>(64-shift));
 602:sieve_extend.c ****     }
 16637              		.loc 1 602 22 view .LVU5777
 16638 5988 C4C115EB 		vpor	ymm2, ymm13, ymm15	# vect__58.710, vect__57.705, vect__104.709
 16638      D7
 16639 598d C5FE7F14 		vmovdqu	YMMWORD PTR [rdi+rax], ymm2	# MEM[base: dst_34(D), index: ivtmp.718_114, offset: 0B], vect
 16639      07
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16640              		.loc 1 601 32 is_stmt 1 view .LVU5778
 16641              	.LVL999:
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16642              		.loc 1 601 25 view .LVU5779
 16643              	.LBE729:
 597:sieve_extend.c ****     {
 16644              		.loc 1 597 24 view .LVU5780
 597:sieve_extend.c ****     {
 16645              		.loc 1 597 12 view .LVU5781
 16646 5992 4883C020 		add	rax, 32	# ivtmp.718,
GAS LISTING /tmp/cc64mrzX.s 			page 443


 16647              	.L1560:
 16648              	.LVL1000:
 16649              	.LBB730:
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16650              		.loc 1 599 25 view .LVU5782
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16651              		.loc 1 600 13 view .LVU5783
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16652              		.loc 1 599 32 view .LVU5784
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16653              		.loc 1 599 25 view .LVU5785
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16654              		.loc 1 600 13 view .LVU5786
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16655              		.loc 1 599 32 view .LVU5787
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16656              		.loc 1 599 25 view .LVU5788
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16657              		.loc 1 600 13 view .LVU5789
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16658              		.loc 1 599 32 view .LVU5790
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16659              		.loc 1 599 25 view .LVU5791
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16660              		.loc 1 600 13 view .LVU5792
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16661              		.loc 1 599 32 view .LVU5793
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16662              		.loc 1 599 25 view .LVU5794
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16663              		.loc 1 599 25 is_stmt 0 view .LVU5795
 16664              	.LBE730:
 16665              	.LBB731:
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16666              		.loc 1 601 25 is_stmt 1 view .LVU5796
 602:sieve_extend.c ****     }
 16667              		.loc 1 602 13 view .LVU5797
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16668              		.loc 1 601 32 view .LVU5798
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16669              		.loc 1 601 25 view .LVU5799
 602:sieve_extend.c ****     }
 16670              		.loc 1 602 13 view .LVU5800
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16671              		.loc 1 601 32 view .LVU5801
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16672              		.loc 1 601 25 view .LVU5802
 602:sieve_extend.c ****     }
 16673              		.loc 1 602 13 view .LVU5803
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16674              		.loc 1 601 32 view .LVU5804
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16675              		.loc 1 601 25 view .LVU5805
 602:sieve_extend.c ****     }
 16676              		.loc 1 602 13 view .LVU5806
 16677              	.LBE731:
 16678              	.LBB732:
GAS LISTING /tmp/cc64mrzX.s 			page 444


 16679              	# sieve_extend.c:600:             *(dst+j) = (*(src+j))<<shift;
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16680              		.loc 1 600 25 is_stmt 0 view .LVU5807
 16681 5996 C4E3FD00 		vpermq	ymm5, YMMWORD PTR [rsi+rax], 85	# vect__102.704, MEM[base: src_35(D), index: ivtmp.718_114,
 16681      2C0655
 16682 599d 4183C101 		add	r9d, 1	# ivtmp.715,
 16683              	# sieve_extend.c:600:             *(dst+j) = (*(src+j))<<shift;
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16684              		.loc 1 600 34 view .LVU5808
 16685 59a1 C5FE6F1C 		vmovdqu	ymm3, YMMWORD PTR [rsi+rax]	# tmp280, MEM[base: src_35(D), index: ivtmp.718_114, offset: 0
 16685      06
 16686              	.LBE732:
 16687              	.LBB733:
 16688              	# sieve_extend.c:602:             *(dst+j) |= (*(src+1)>>(64-shift));
 602:sieve_extend.c ****     }
 16689              		.loc 1 602 34 view .LVU5809
 16690 59a6 C5D5D3E0 		vpsrlq	ymm4, ymm5, xmm0	# vect__57.705, vect__102.704, _4
 16691              	.LBE733:
 16692              	.LBB734:
 16693              	# sieve_extend.c:600:             *(dst+j) = (*(src+j))<<shift;
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16694              		.loc 1 600 34 view .LVU5810
 16695 59aa C5E5F3F1 		vpsllq	ymm6, ymm3, xmm1	# vect__104.709, tmp280, shift
 16696              	.LBE734:
 16697              	.LBB735:
 16698              	# sieve_extend.c:602:             *(dst+j) |= (*(src+1)>>(64-shift));
 602:sieve_extend.c ****     }
 16699              		.loc 1 602 22 view .LVU5811
 16700 59ae C5DDEBFE 		vpor	ymm7, ymm4, ymm6	# vect__58.710, vect__57.705, vect__104.709
 16701 59b2 C5FE7F3C 		vmovdqu	YMMWORD PTR [rdi+rax], ymm7	# MEM[base: dst_34(D), index: ivtmp.718_114, offset: 0B], vect
 16701      07
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16702              		.loc 1 601 32 is_stmt 1 view .LVU5812
 16703              	.LVL1001:
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16704              		.loc 1 601 25 view .LVU5813
 16705              	.LBE735:
 597:sieve_extend.c ****     {
 16706              		.loc 1 597 24 view .LVU5814
 597:sieve_extend.c ****     {
 16707              		.loc 1 597 12 view .LVU5815
 16708 59b7 4883C020 		add	rax, 32	# ivtmp.718,
 16709              	.L1559:
 16710              	.LVL1002:
 16711              	.LBB736:
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16712              		.loc 1 599 25 view .LVU5816
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16713              		.loc 1 600 13 view .LVU5817
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16714              		.loc 1 599 32 view .LVU5818
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16715              		.loc 1 599 25 view .LVU5819
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16716              		.loc 1 600 13 view .LVU5820
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16717              		.loc 1 599 32 view .LVU5821
GAS LISTING /tmp/cc64mrzX.s 			page 445


 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16718              		.loc 1 599 25 view .LVU5822
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16719              		.loc 1 600 13 view .LVU5823
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16720              		.loc 1 599 32 view .LVU5824
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16721              		.loc 1 599 25 view .LVU5825
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16722              		.loc 1 600 13 view .LVU5826
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16723              		.loc 1 599 32 view .LVU5827
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16724              		.loc 1 599 25 view .LVU5828
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16725              		.loc 1 599 25 is_stmt 0 view .LVU5829
 16726              	.LBE736:
 16727              	.LBB737:
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16728              		.loc 1 601 25 is_stmt 1 view .LVU5830
 602:sieve_extend.c ****     }
 16729              		.loc 1 602 13 view .LVU5831
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16730              		.loc 1 601 32 view .LVU5832
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16731              		.loc 1 601 25 view .LVU5833
 602:sieve_extend.c ****     }
 16732              		.loc 1 602 13 view .LVU5834
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16733              		.loc 1 601 32 view .LVU5835
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16734              		.loc 1 601 25 view .LVU5836
 602:sieve_extend.c ****     }
 16735              		.loc 1 602 13 view .LVU5837
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16736              		.loc 1 601 32 view .LVU5838
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16737              		.loc 1 601 25 view .LVU5839
 602:sieve_extend.c ****     }
 16738              		.loc 1 602 13 view .LVU5840
 16739              	.LBE737:
 16740              	.LBB738:
 16741              	# sieve_extend.c:600:             *(dst+j) = (*(src+j))<<shift;
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16742              		.loc 1 600 25 is_stmt 0 view .LVU5841
 16743 59bb C463FD00 		vpermq	ymm8, YMMWORD PTR [rsi+rax], 85	# vect__102.704, MEM[base: src_35(D), index: ivtmp.718_114,
 16743      040655
 16744 59c2 4183C101 		add	r9d, 1	# ivtmp.715,
 16745              	# sieve_extend.c:600:             *(dst+j) = (*(src+j))<<shift;
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16746              		.loc 1 600 34 view .LVU5842
 16747 59c6 C57E6F14 		vmovdqu	ymm10, YMMWORD PTR [rsi+rax]	# tmp281, MEM[base: src_35(D), index: ivtmp.718_114, offset: 
 16747      06
 16748              	.LBE738:
 16749              	.LBB739:
 16750              	# sieve_extend.c:602:             *(dst+j) |= (*(src+1)>>(64-shift));
 602:sieve_extend.c ****     }
GAS LISTING /tmp/cc64mrzX.s 			page 446


 16751              		.loc 1 602 34 view .LVU5843
 16752 59cb C53DD3C8 		vpsrlq	ymm9, ymm8, xmm0	# vect__57.705, vect__102.704, _4
 16753              	.LBE739:
 16754              	.LBB740:
 16755              	# sieve_extend.c:600:             *(dst+j) = (*(src+j))<<shift;
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16756              		.loc 1 600 34 view .LVU5844
 16757 59cf C52DF3D9 		vpsllq	ymm11, ymm10, xmm1	# vect__104.709, tmp281, shift
 16758              	.LBE740:
 16759              	.LBB741:
 16760              	# sieve_extend.c:602:             *(dst+j) |= (*(src+1)>>(64-shift));
 602:sieve_extend.c ****     }
 16761              		.loc 1 602 22 view .LVU5845
 16762 59d3 C44135EB 		vpor	ymm12, ymm9, ymm11	# vect__58.710, vect__57.705, vect__104.709
 16762      E3
 16763 59d8 C57E7F24 		vmovdqu	YMMWORD PTR [rdi+rax], ymm12	# MEM[base: dst_34(D), index: ivtmp.718_114, offset: 0B], vec
 16763      07
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16764              		.loc 1 601 32 is_stmt 1 view .LVU5846
 16765              	.LVL1003:
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16766              		.loc 1 601 25 view .LVU5847
 16767              	.LBE741:
 597:sieve_extend.c ****     {
 16768              		.loc 1 597 24 view .LVU5848
 597:sieve_extend.c ****     {
 16769              		.loc 1 597 12 view .LVU5849
 16770 59dd 4883C020 		add	rax, 32	# ivtmp.718,
 16771              	.L1558:
 16772              	.LVL1004:
 16773              	.LBB742:
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16774              		.loc 1 599 25 view .LVU5850
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16775              		.loc 1 600 13 view .LVU5851
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16776              		.loc 1 599 32 view .LVU5852
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16777              		.loc 1 599 25 view .LVU5853
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16778              		.loc 1 600 13 view .LVU5854
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16779              		.loc 1 599 32 view .LVU5855
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16780              		.loc 1 599 25 view .LVU5856
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16781              		.loc 1 600 13 view .LVU5857
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16782              		.loc 1 599 32 view .LVU5858
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16783              		.loc 1 599 25 view .LVU5859
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16784              		.loc 1 600 13 view .LVU5860
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16785              		.loc 1 599 32 view .LVU5861
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16786              		.loc 1 599 25 view .LVU5862
GAS LISTING /tmp/cc64mrzX.s 			page 447


 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16787              		.loc 1 599 25 is_stmt 0 view .LVU5863
 16788              	.LBE742:
 16789              	.LBB743:
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16790              		.loc 1 601 25 is_stmt 1 view .LVU5864
 602:sieve_extend.c ****     }
 16791              		.loc 1 602 13 view .LVU5865
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16792              		.loc 1 601 32 view .LVU5866
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16793              		.loc 1 601 25 view .LVU5867
 602:sieve_extend.c ****     }
 16794              		.loc 1 602 13 view .LVU5868
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16795              		.loc 1 601 32 view .LVU5869
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16796              		.loc 1 601 25 view .LVU5870
 602:sieve_extend.c ****     }
 16797              		.loc 1 602 13 view .LVU5871
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16798              		.loc 1 601 32 view .LVU5872
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16799              		.loc 1 601 25 view .LVU5873
 602:sieve_extend.c ****     }
 16800              		.loc 1 602 13 view .LVU5874
 16801              	.LBE743:
 16802              	.LBB744:
 16803              	# sieve_extend.c:600:             *(dst+j) = (*(src+j))<<shift;
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16804              		.loc 1 600 25 is_stmt 0 view .LVU5875
 16805 59e1 C463FD00 		vpermq	ymm13, YMMWORD PTR [rsi+rax], 85	# vect__102.704, MEM[base: src_35(D), index: ivtmp.718_114
 16805      2C0655
 16806 59e8 4183C101 		add	r9d, 1	# ivtmp.715,
 16807              	# sieve_extend.c:600:             *(dst+j) = (*(src+j))<<shift;
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16808              		.loc 1 600 34 view .LVU5876
 16809 59ec C57E6F3C 		vmovdqu	ymm15, YMMWORD PTR [rsi+rax]	# tmp282, MEM[base: src_35(D), index: ivtmp.718_114, offset: 
 16809      06
 16810              	.LBE744:
 16811              	.LBB745:
 16812              	# sieve_extend.c:602:             *(dst+j) |= (*(src+1)>>(64-shift));
 602:sieve_extend.c ****     }
 16813              		.loc 1 602 34 view .LVU5877
 16814 59f1 C515D3F0 		vpsrlq	ymm14, ymm13, xmm0	# vect__57.705, vect__102.704, _4
 16815              	.LBE745:
 16816              	.LBB746:
 16817              	# sieve_extend.c:600:             *(dst+j) = (*(src+j))<<shift;
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16818              		.loc 1 600 34 view .LVU5878
 16819 59f5 C585F3D1 		vpsllq	ymm2, ymm15, xmm1	# vect__104.709, tmp282, shift
 16820              	.LBE746:
 16821              	.LBB747:
 16822              	# sieve_extend.c:602:             *(dst+j) |= (*(src+1)>>(64-shift));
 602:sieve_extend.c ****     }
 16823              		.loc 1 602 22 view .LVU5879
 16824 59f9 C58DEBEA 		vpor	ymm5, ymm14, ymm2	# vect__58.710, vect__57.705, vect__104.709
GAS LISTING /tmp/cc64mrzX.s 			page 448


 16825 59fd C5FE7F2C 		vmovdqu	YMMWORD PTR [rdi+rax], ymm5	# MEM[base: dst_34(D), index: ivtmp.718_114, offset: 0B], vect
 16825      07
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16826              		.loc 1 601 32 is_stmt 1 view .LVU5880
 16827              	.LVL1005:
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16828              		.loc 1 601 25 view .LVU5881
 16829              	.LBE747:
 597:sieve_extend.c ****     {
 16830              		.loc 1 597 24 view .LVU5882
 597:sieve_extend.c ****     {
 16831              		.loc 1 597 12 view .LVU5883
 16832 5a02 4883C020 		add	rax, 32	# ivtmp.718,
 16833              	.L1557:
 16834              	.LVL1006:
 16835              	.LBB748:
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16836              		.loc 1 599 25 view .LVU5884
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16837              		.loc 1 600 13 view .LVU5885
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16838              		.loc 1 599 32 view .LVU5886
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16839              		.loc 1 599 25 view .LVU5887
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16840              		.loc 1 600 13 view .LVU5888
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16841              		.loc 1 599 32 view .LVU5889
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16842              		.loc 1 599 25 view .LVU5890
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16843              		.loc 1 600 13 view .LVU5891
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16844              		.loc 1 599 32 view .LVU5892
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16845              		.loc 1 599 25 view .LVU5893
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16846              		.loc 1 600 13 view .LVU5894
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16847              		.loc 1 599 32 view .LVU5895
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16848              		.loc 1 599 25 view .LVU5896
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16849              		.loc 1 599 25 is_stmt 0 view .LVU5897
 16850              	.LBE748:
 16851              	.LBB749:
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16852              		.loc 1 601 25 is_stmt 1 view .LVU5898
 602:sieve_extend.c ****     }
 16853              		.loc 1 602 13 view .LVU5899
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16854              		.loc 1 601 32 view .LVU5900
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16855              		.loc 1 601 25 view .LVU5901
 602:sieve_extend.c ****     }
 16856              		.loc 1 602 13 view .LVU5902
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
GAS LISTING /tmp/cc64mrzX.s 			page 449


 16857              		.loc 1 601 32 view .LVU5903
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16858              		.loc 1 601 25 view .LVU5904
 602:sieve_extend.c ****     }
 16859              		.loc 1 602 13 view .LVU5905
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16860              		.loc 1 601 32 view .LVU5906
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16861              		.loc 1 601 25 view .LVU5907
 602:sieve_extend.c ****     }
 16862              		.loc 1 602 13 view .LVU5908
 16863              	.LBE749:
 16864              	.LBB750:
 16865              	# sieve_extend.c:600:             *(dst+j) = (*(src+j))<<shift;
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16866              		.loc 1 600 25 is_stmt 0 view .LVU5909
 16867 5a06 C4E3FD00 		vpermq	ymm4, YMMWORD PTR [rsi+rax], 85	# vect__102.704, MEM[base: src_35(D), index: ivtmp.718_114,
 16867      240655
 16868 5a0d 4183C101 		add	r9d, 1	# ivtmp.715,
 16869              	# sieve_extend.c:600:             *(dst+j) = (*(src+j))<<shift;
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16870              		.loc 1 600 34 view .LVU5910
 16871 5a11 C5FE6F1C 		vmovdqu	ymm3, YMMWORD PTR [rsi+rax]	# tmp283, MEM[base: src_35(D), index: ivtmp.718_114, offset: 0
 16871      06
 16872              	.LBE750:
 16873              	.LBB751:
 16874              	# sieve_extend.c:602:             *(dst+j) |= (*(src+1)>>(64-shift));
 602:sieve_extend.c ****     }
 16875              		.loc 1 602 34 view .LVU5911
 16876 5a16 C5DDD3F0 		vpsrlq	ymm6, ymm4, xmm0	# vect__57.705, vect__102.704, _4
 16877              	.LBE751:
 16878              	.LBB752:
 16879              	# sieve_extend.c:600:             *(dst+j) = (*(src+j))<<shift;
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16880              		.loc 1 600 34 view .LVU5912
 16881 5a1a C5E5F3F9 		vpsllq	ymm7, ymm3, xmm1	# vect__104.709, tmp283, shift
 16882              	.LBE752:
 16883              	.LBB753:
 16884              	# sieve_extend.c:602:             *(dst+j) |= (*(src+1)>>(64-shift));
 602:sieve_extend.c ****     }
 16885              		.loc 1 602 22 view .LVU5913
 16886 5a1e C54DEBC7 		vpor	ymm8, ymm6, ymm7	# vect__58.710, vect__57.705, vect__104.709
 16887 5a22 C57E7F04 		vmovdqu	YMMWORD PTR [rdi+rax], ymm8	# MEM[base: dst_34(D), index: ivtmp.718_114, offset: 0B], vect
 16887      07
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16888              		.loc 1 601 32 is_stmt 1 view .LVU5914
 16889              	.LVL1007:
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16890              		.loc 1 601 25 view .LVU5915
 16891              	.LBE753:
 597:sieve_extend.c ****     {
 16892              		.loc 1 597 24 view .LVU5916
 597:sieve_extend.c ****     {
 16893              		.loc 1 597 12 view .LVU5917
 16894 5a27 4883C020 		add	rax, 32	# ivtmp.718,
 16895              	.L1556:
 16896              	.LVL1008:
GAS LISTING /tmp/cc64mrzX.s 			page 450


 16897              	.LBB754:
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16898              		.loc 1 599 25 view .LVU5918
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16899              		.loc 1 600 13 view .LVU5919
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16900              		.loc 1 599 32 view .LVU5920
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16901              		.loc 1 599 25 view .LVU5921
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16902              		.loc 1 600 13 view .LVU5922
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16903              		.loc 1 599 32 view .LVU5923
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16904              		.loc 1 599 25 view .LVU5924
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16905              		.loc 1 600 13 view .LVU5925
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16906              		.loc 1 599 32 view .LVU5926
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16907              		.loc 1 599 25 view .LVU5927
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16908              		.loc 1 600 13 view .LVU5928
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16909              		.loc 1 599 32 view .LVU5929
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16910              		.loc 1 599 25 view .LVU5930
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16911              		.loc 1 599 25 is_stmt 0 view .LVU5931
 16912              	.LBE754:
 16913              	.LBB755:
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16914              		.loc 1 601 25 is_stmt 1 view .LVU5932
 602:sieve_extend.c ****     }
 16915              		.loc 1 602 13 view .LVU5933
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16916              		.loc 1 601 32 view .LVU5934
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16917              		.loc 1 601 25 view .LVU5935
 602:sieve_extend.c ****     }
 16918              		.loc 1 602 13 view .LVU5936
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16919              		.loc 1 601 32 view .LVU5937
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16920              		.loc 1 601 25 view .LVU5938
 602:sieve_extend.c ****     }
 16921              		.loc 1 602 13 view .LVU5939
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16922              		.loc 1 601 32 view .LVU5940
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16923              		.loc 1 601 25 view .LVU5941
 602:sieve_extend.c ****     }
 16924              		.loc 1 602 13 view .LVU5942
 16925              	.LBE755:
 16926              	.LBB756:
 16927              	# sieve_extend.c:600:             *(dst+j) = (*(src+j))<<shift;
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
GAS LISTING /tmp/cc64mrzX.s 			page 451


 16928              		.loc 1 600 25 is_stmt 0 view .LVU5943
 16929 5a2b C463FD00 		vpermq	ymm9, YMMWORD PTR [rsi+rax], 85	# vect__102.704, MEM[base: src_35(D), index: ivtmp.718_114,
 16929      0C0655
 16930 5a32 4183C101 		add	r9d, 1	# ivtmp.715,
 16931              	# sieve_extend.c:600:             *(dst+j) = (*(src+j))<<shift;
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16932              		.loc 1 600 34 view .LVU5944
 16933 5a36 C57E6F1C 		vmovdqu	ymm11, YMMWORD PTR [rsi+rax]	# tmp284, MEM[base: src_35(D), index: ivtmp.718_114, offset: 
 16933      06
 16934              	.LBE756:
 16935              	.LBB757:
 16936              	# sieve_extend.c:602:             *(dst+j) |= (*(src+1)>>(64-shift));
 602:sieve_extend.c ****     }
 16937              		.loc 1 602 34 view .LVU5945
 16938 5a3b C535D3D0 		vpsrlq	ymm10, ymm9, xmm0	# vect__57.705, vect__102.704, _4
 16939              	.LBE757:
 16940              	.LBB758:
 16941              	# sieve_extend.c:600:             *(dst+j) = (*(src+j))<<shift;
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16942              		.loc 1 600 34 view .LVU5946
 16943 5a3f C525F3E1 		vpsllq	ymm12, ymm11, xmm1	# vect__104.709, tmp284, shift
 16944              	.LBE758:
 16945              	.LBB759:
 16946              	# sieve_extend.c:602:             *(dst+j) |= (*(src+1)>>(64-shift));
 602:sieve_extend.c ****     }
 16947              		.loc 1 602 22 view .LVU5947
 16948 5a43 C4412DEB 		vpor	ymm13, ymm10, ymm12	# vect__58.710, vect__57.705, vect__104.709
 16948      EC
 16949 5a48 C57E7F2C 		vmovdqu	YMMWORD PTR [rdi+rax], ymm13	# MEM[base: dst_34(D), index: ivtmp.718_114, offset: 0B], vec
 16949      07
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16950              		.loc 1 601 32 is_stmt 1 view .LVU5948
 16951              	.LVL1009:
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16952              		.loc 1 601 25 view .LVU5949
 16953              	.LBE759:
 597:sieve_extend.c ****     {
 16954              		.loc 1 597 24 view .LVU5950
 597:sieve_extend.c ****     {
 16955              		.loc 1 597 12 view .LVU5951
 16956 5a4d 4883C020 		add	rax, 32	# ivtmp.718,
 16957 5a51 4539CA   		cmp	r10d, r9d	# tmp164, ivtmp.715
 16958 5a54 0F863901 		jbe	.L1569	#,
 16958      0000
 16959              	.L1529:
 16960              	.LVL1010:
 16961              	.LBB760:
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16962              		.loc 1 599 25 view .LVU5952
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16963              		.loc 1 600 13 view .LVU5953
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16964              		.loc 1 599 32 view .LVU5954
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16965              		.loc 1 599 25 view .LVU5955
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16966              		.loc 1 600 13 view .LVU5956
GAS LISTING /tmp/cc64mrzX.s 			page 452


 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16967              		.loc 1 599 32 view .LVU5957
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16968              		.loc 1 599 25 view .LVU5958
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16969              		.loc 1 600 13 view .LVU5959
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16970              		.loc 1 599 32 view .LVU5960
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16971              		.loc 1 599 25 view .LVU5961
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16972              		.loc 1 600 13 view .LVU5962
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16973              		.loc 1 599 32 view .LVU5963
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16974              		.loc 1 599 25 view .LVU5964
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16975              		.loc 1 599 25 is_stmt 0 view .LVU5965
 16976              	.LBE760:
 16977              	.LBB761:
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16978              		.loc 1 601 25 is_stmt 1 view .LVU5966
 602:sieve_extend.c ****     }
 16979              		.loc 1 602 13 view .LVU5967
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16980              		.loc 1 601 32 view .LVU5968
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16981              		.loc 1 601 25 view .LVU5969
 602:sieve_extend.c ****     }
 16982              		.loc 1 602 13 view .LVU5970
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16983              		.loc 1 601 32 view .LVU5971
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16984              		.loc 1 601 25 view .LVU5972
 602:sieve_extend.c ****     }
 16985              		.loc 1 602 13 view .LVU5973
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16986              		.loc 1 601 32 view .LVU5974
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16987              		.loc 1 601 25 view .LVU5975
 602:sieve_extend.c ****     }
 16988              		.loc 1 602 13 view .LVU5976
 16989              	.LBE761:
 16990              	.LBB762:
 16991              	# sieve_extend.c:600:             *(dst+j) = (*(src+j))<<shift;
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16992              		.loc 1 600 25 is_stmt 0 view .LVU5977
 16993 5a5a C463FD00 		vpermq	ymm14, YMMWORD PTR [rsi+rax], 85	# vect__102.704, MEM[base: src_35(D), index: ivtmp.718_114
 16993      340655
 16994 5a61 C4E3FD00 		vpermq	ymm6, YMMWORD PTR 32[rsi+rax], 85	# vect__102.704, MEM[base: src_35(D), index: ivtmp.718_11
 16994      74062055 
 16995              	# sieve_extend.c:600:             *(dst+j) = (*(src+j))<<shift;
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16996              		.loc 1 600 34 view .LVU5978
 16997 5a69 C5FE6F14 		vmovdqu	ymm2, YMMWORD PTR [rsi+rax]	# tmp270, MEM[base: src_35(D), index: ivtmp.718_114, offset: 0
 16997      06
 16998              	# sieve_extend.c:600:             *(dst+j) = (*(src+j))<<shift;
GAS LISTING /tmp/cc64mrzX.s 			page 453


 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16999              		.loc 1 600 25 view .LVU5979
 17000 5a6e C463FD00 		vpermq	ymm10, YMMWORD PTR 64[rsi+rax], 85	# vect__102.704, MEM[base: src_35(D), index: ivtmp.718_1
 17000      54064055 
 17001              	# sieve_extend.c:600:             *(dst+j) = (*(src+j))<<shift;
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17002              		.loc 1 600 34 view .LVU5980
 17003 5a76 C5FE6F5C 		vmovdqu	ymm3, YMMWORD PTR 32[rsi+rax]	# tmp271, MEM[base: src_35(D), index: ivtmp.718_114, offset:
 17003      0620
 17004 5a7c 4183C108 		add	r9d, 8	# ivtmp.715,
 17005              	.LBE762:
 17006              	.LBB763:
 17007              	# sieve_extend.c:602:             *(dst+j) |= (*(src+1)>>(64-shift));
 602:sieve_extend.c ****     }
 17008              		.loc 1 602 34 view .LVU5981
 17009 5a80 C50DD3F8 		vpsrlq	ymm15, ymm14, xmm0	# vect__57.705, vect__102.704, _4
 17010 5a84 C5CDD3F8 		vpsrlq	ymm7, ymm6, xmm0	# vect__57.705, vect__102.704, _4
 17011              	.LBE763:
 17012              	.LBB764:
 17013              	# sieve_extend.c:600:             *(dst+j) = (*(src+j))<<shift;
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17014              		.loc 1 600 34 view .LVU5982
 17015 5a88 C5EDF3E9 		vpsllq	ymm5, ymm2, xmm1	# vect__104.709, tmp270, shift
 17016 5a8c C565F3C1 		vpsllq	ymm8, ymm3, xmm1	# vect__104.709, tmp271, shift
 17017 5a90 C57E6F64 		vmovdqu	ymm12, YMMWORD PTR 64[rsi+rax]	# tmp272, MEM[base: src_35(D), index: ivtmp.718_114, offset
 17017      0640
 17018              	.LBE764:
 17019              	.LBB765:
 17020              	# sieve_extend.c:602:             *(dst+j) |= (*(src+1)>>(64-shift));
 602:sieve_extend.c ****     }
 17021              		.loc 1 602 22 view .LVU5983
 17022 5a96 C585EBE5 		vpor	ymm4, ymm15, ymm5	# vect__58.710, vect__57.705, vect__104.709
 17023              	.LBE765:
 17024              	.LBB766:
 17025              	# sieve_extend.c:600:             *(dst+j) = (*(src+j))<<shift;
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17026              		.loc 1 600 34 view .LVU5984
 17027 5a9a C5FE6F9C 		vmovdqu	ymm3, YMMWORD PTR 128[rsi+rax]	# tmp274, MEM[base: src_35(D), index: ivtmp.718_114, offset
 17027      06800000 
 17027      00
 17028              	.LBE766:
 17029              	.LBB767:
 17030              	# sieve_extend.c:602:             *(dst+j) |= (*(src+1)>>(64-shift));
 602:sieve_extend.c ****     }
 17031              		.loc 1 602 22 view .LVU5985
 17032 5aa3 C44145EB 		vpor	ymm9, ymm7, ymm8	# vect__58.710, vect__57.705, vect__104.709
 17032      C8
 17033              	.LBE767:
 17034              	.LBB768:
 17035              	# sieve_extend.c:600:             *(dst+j) = (*(src+j))<<shift;
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17036              		.loc 1 600 25 view .LVU5986
 17037 5aa8 C463FD00 		vpermq	ymm15, YMMWORD PTR 96[rsi+rax], 85	# vect__102.704, MEM[base: src_35(D), index: ivtmp.718_1
 17037      7C066055 
 17038 5ab0 C4E3FD00 		vpermq	ymm7, YMMWORD PTR 128[rsi+rax], 85	# vect__102.704, MEM[base: src_35(D), index: ivtmp.718_1
 17038      BC068000 
 17038      000055
GAS LISTING /tmp/cc64mrzX.s 			page 454


 17039              	# sieve_extend.c:600:             *(dst+j) = (*(src+j))<<shift;
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17040              		.loc 1 600 34 view .LVU5987
 17041 5abb C5FE6F6C 		vmovdqu	ymm5, YMMWORD PTR 96[rsi+rax]	# tmp273, MEM[base: src_35(D), index: ivtmp.718_114, offset:
 17041      0660
 17042              	.LBE768:
 17043              	.LBB769:
 17044              	# sieve_extend.c:602:             *(dst+j) |= (*(src+1)>>(64-shift));
 602:sieve_extend.c ****     }
 17045              		.loc 1 602 34 view .LVU5988
 17046 5ac1 C52DD3D8 		vpsrlq	ymm11, ymm10, xmm0	# vect__57.705, vect__102.704, _4
 17047              	.LBE769:
 17048              	.LBB770:
 17049              	# sieve_extend.c:600:             *(dst+j) = (*(src+j))<<shift;
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17050              		.loc 1 600 34 view .LVU5989
 17051 5ac5 C51DF3E9 		vpsllq	ymm13, ymm12, xmm1	# vect__104.709, tmp272, shift
 17052              	.LBE770:
 17053              	.LBB771:
 17054              	# sieve_extend.c:602:             *(dst+j) |= (*(src+1)>>(64-shift));
 602:sieve_extend.c ****     }
 17055              		.loc 1 602 34 view .LVU5990
 17056 5ac9 C585D3D0 		vpsrlq	ymm2, ymm15, xmm0	# vect__57.705, vect__102.704, _4
 17057              	# sieve_extend.c:602:             *(dst+j) |= (*(src+1)>>(64-shift));
 602:sieve_extend.c ****     }
 17058              		.loc 1 602 22 view .LVU5991
 17059 5acd C5FE7F24 		vmovdqu	YMMWORD PTR [rdi+rax], ymm4	# MEM[base: dst_34(D), index: ivtmp.718_114, offset: 0B], vect
 17059      07
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17060              		.loc 1 601 32 is_stmt 1 view .LVU5992
 17061              	.LVL1011:
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17062              		.loc 1 601 25 view .LVU5993
 17063              	.LBE771:
 597:sieve_extend.c ****     {
 17064              		.loc 1 597 24 view .LVU5994
 597:sieve_extend.c ****     {
 17065              		.loc 1 597 12 view .LVU5995
 17066              	.LBB772:
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17067              		.loc 1 599 25 view .LVU5996
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17068              		.loc 1 600 13 view .LVU5997
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17069              		.loc 1 599 32 view .LVU5998
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17070              		.loc 1 599 25 view .LVU5999
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17071              		.loc 1 600 13 view .LVU6000
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17072              		.loc 1 599 32 view .LVU6001
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17073              		.loc 1 599 25 view .LVU6002
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17074              		.loc 1 600 13 view .LVU6003
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17075              		.loc 1 599 32 view .LVU6004
GAS LISTING /tmp/cc64mrzX.s 			page 455


 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17076              		.loc 1 599 25 view .LVU6005
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17077              		.loc 1 600 13 view .LVU6006
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17078              		.loc 1 599 32 view .LVU6007
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17079              		.loc 1 599 25 view .LVU6008
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17080              		.loc 1 599 25 is_stmt 0 view .LVU6009
 17081              	.LBE772:
 17082              	.LBB773:
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17083              		.loc 1 601 25 is_stmt 1 view .LVU6010
 602:sieve_extend.c ****     }
 17084              		.loc 1 602 13 view .LVU6011
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17085              		.loc 1 601 32 view .LVU6012
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17086              		.loc 1 601 25 view .LVU6013
 602:sieve_extend.c ****     }
 17087              		.loc 1 602 13 view .LVU6014
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17088              		.loc 1 601 32 view .LVU6015
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17089              		.loc 1 601 25 view .LVU6016
 602:sieve_extend.c ****     }
 17090              		.loc 1 602 13 view .LVU6017
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17091              		.loc 1 601 32 view .LVU6018
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17092              		.loc 1 601 25 view .LVU6019
 602:sieve_extend.c ****     }
 17093              		.loc 1 602 13 view .LVU6020
 17094              	# sieve_extend.c:602:             *(dst+j) |= (*(src+1)>>(64-shift));
 602:sieve_extend.c ****     }
 17095              		.loc 1 602 22 is_stmt 0 view .LVU6021
 17096 5ad2 C44125EB 		vpor	ymm14, ymm11, ymm13	# vect__58.710, vect__57.705, vect__104.709
 17096      F5
 17097              	# sieve_extend.c:602:             *(dst+j) |= (*(src+1)>>(64-shift));
 602:sieve_extend.c ****     }
 17098              		.loc 1 602 34 view .LVU6022
 17099 5ad7 C545D3C0 		vpsrlq	ymm8, ymm7, xmm0	# vect__57.705, vect__102.704, _4
 17100              	# sieve_extend.c:602:             *(dst+j) |= (*(src+1)>>(64-shift));
 602:sieve_extend.c ****     }
 17101              		.loc 1 602 22 view .LVU6023
 17102 5adb C57E7F4C 		vmovdqu	YMMWORD PTR 32[rdi+rax], ymm9	# MEM[base: dst_34(D), index: ivtmp.718_114, offset: 0B], ve
 17102      0720
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17103              		.loc 1 601 32 is_stmt 1 view .LVU6024
 17104              	.LVL1012:
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17105              		.loc 1 601 25 view .LVU6025
 17106              	.LBE773:
 597:sieve_extend.c ****     {
 17107              		.loc 1 597 24 view .LVU6026
 597:sieve_extend.c ****     {
GAS LISTING /tmp/cc64mrzX.s 			page 456


 17108              		.loc 1 597 12 view .LVU6027
 17109              	.LBB774:
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17110              		.loc 1 599 25 view .LVU6028
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17111              		.loc 1 600 13 view .LVU6029
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17112              		.loc 1 599 32 view .LVU6030
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17113              		.loc 1 599 25 view .LVU6031
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17114              		.loc 1 600 13 view .LVU6032
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17115              		.loc 1 599 32 view .LVU6033
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17116              		.loc 1 599 25 view .LVU6034
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17117              		.loc 1 600 13 view .LVU6035
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17118              		.loc 1 599 32 view .LVU6036
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17119              		.loc 1 599 25 view .LVU6037
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17120              		.loc 1 600 13 view .LVU6038
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17121              		.loc 1 599 32 view .LVU6039
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17122              		.loc 1 599 25 view .LVU6040
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17123              		.loc 1 599 25 is_stmt 0 view .LVU6041
 17124              	.LBE774:
 17125              	.LBB775:
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17126              		.loc 1 601 25 is_stmt 1 view .LVU6042
 602:sieve_extend.c ****     }
 17127              		.loc 1 602 13 view .LVU6043
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17128              		.loc 1 601 32 view .LVU6044
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17129              		.loc 1 601 25 view .LVU6045
 602:sieve_extend.c ****     }
 17130              		.loc 1 602 13 view .LVU6046
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17131              		.loc 1 601 32 view .LVU6047
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17132              		.loc 1 601 25 view .LVU6048
 602:sieve_extend.c ****     }
 17133              		.loc 1 602 13 view .LVU6049
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17134              		.loc 1 601 32 view .LVU6050
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17135              		.loc 1 601 25 view .LVU6051
 602:sieve_extend.c ****     }
 17136              		.loc 1 602 13 view .LVU6052
 17137              	.LBE775:
 17138              	.LBB776:
 17139              	# sieve_extend.c:600:             *(dst+j) = (*(src+j))<<shift;
GAS LISTING /tmp/cc64mrzX.s 			page 457


 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17140              		.loc 1 600 25 is_stmt 0 view .LVU6053
 17141 5ae1 C463FD00 		vpermq	ymm11, YMMWORD PTR 160[rsi+rax], 85	# vect__102.704, MEM[base: src_35(D), index: ivtmp.718_
 17141      9C06A000 
 17141      000055
 17142              	# sieve_extend.c:600:             *(dst+j) = (*(src+j))<<shift;
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17143              		.loc 1 600 34 view .LVU6054
 17144 5aec C5D5F3E1 		vpsllq	ymm4, ymm5, xmm1	# vect__104.709, tmp273, shift
 17145 5af0 C565F3C9 		vpsllq	ymm9, ymm3, xmm1	# vect__104.709, tmp274, shift
 17146 5af4 C57E6FAC 		vmovdqu	ymm13, YMMWORD PTR 160[rsi+rax]	# tmp275, MEM[base: src_35(D), index: ivtmp.718_114, offse
 17146      06A00000 
 17146      00
 17147              	.LBE776:
 17148              	.LBB777:
 17149              	# sieve_extend.c:602:             *(dst+j) |= (*(src+1)>>(64-shift));
 602:sieve_extend.c ****     }
 17150              		.loc 1 602 22 view .LVU6055
 17151 5afd C5EDEBF4 		vpor	ymm6, ymm2, ymm4	# vect__58.710, vect__57.705, vect__104.709
 17152              	.LBE777:
 17153              	.LBB778:
 17154              	# sieve_extend.c:600:             *(dst+j) = (*(src+j))<<shift;
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17155              		.loc 1 600 34 view .LVU6056
 17156 5b01 C5FE6F9C 		vmovdqu	ymm3, YMMWORD PTR 224[rsi+rax]	# tmp277, MEM[base: src_35(D), index: ivtmp.718_114, offset
 17156      06E00000 
 17156      00
 17157              	.LBE778:
 17158              	.LBB779:
 17159              	# sieve_extend.c:602:             *(dst+j) |= (*(src+1)>>(64-shift));
 602:sieve_extend.c ****     }
 17160              		.loc 1 602 22 view .LVU6057
 17161 5b0a C4413DEB 		vpor	ymm10, ymm8, ymm9	# vect__58.710, vect__57.705, vect__104.709
 17161      D1
 17162              	.LBE779:
 17163              	.LBB780:
 17164              	# sieve_extend.c:600:             *(dst+j) = (*(src+j))<<shift;
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17165              		.loc 1 600 25 view .LVU6058
 17166 5b0f C4E3FD00 		vpermq	ymm2, YMMWORD PTR 192[rsi+rax], 85	# vect__102.704, MEM[base: src_35(D), index: ivtmp.718_1
 17166      9406C000 
 17166      000055
 17167 5b1a C463FD00 		vpermq	ymm8, YMMWORD PTR 224[rsi+rax], 85	# vect__102.704, MEM[base: src_35(D), index: ivtmp.718_1
 17167      8406E000 
 17167      000055
 17168              	# sieve_extend.c:600:             *(dst+j) = (*(src+j))<<shift;
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17169              		.loc 1 600 34 view .LVU6059
 17170 5b25 C5FE6FA4 		vmovdqu	ymm4, YMMWORD PTR 192[rsi+rax]	# tmp276, MEM[base: src_35(D), index: ivtmp.718_114, offset
 17170      06C00000 
 17170      00
 17171              	.LBE780:
 17172              	.LBB781:
 17173              	# sieve_extend.c:602:             *(dst+j) |= (*(src+1)>>(64-shift));
 602:sieve_extend.c ****     }
 17174              		.loc 1 602 22 view .LVU6060
 17175 5b2e C57E7F74 		vmovdqu	YMMWORD PTR 64[rdi+rax], ymm14	# MEM[base: dst_34(D), index: ivtmp.718_114, offset: 0B], v
GAS LISTING /tmp/cc64mrzX.s 			page 458


 17175      0740
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17176              		.loc 1 601 32 is_stmt 1 view .LVU6061
 17177              	.LVL1013:
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17178              		.loc 1 601 25 view .LVU6062
 17179              	.LBE781:
 597:sieve_extend.c ****     {
 17180              		.loc 1 597 24 view .LVU6063
 597:sieve_extend.c ****     {
 17181              		.loc 1 597 12 view .LVU6064
 17182              	.LBB782:
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17183              		.loc 1 599 25 view .LVU6065
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17184              		.loc 1 600 13 view .LVU6066
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17185              		.loc 1 599 32 view .LVU6067
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17186              		.loc 1 599 25 view .LVU6068
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17187              		.loc 1 600 13 view .LVU6069
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17188              		.loc 1 599 32 view .LVU6070
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17189              		.loc 1 599 25 view .LVU6071
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17190              		.loc 1 600 13 view .LVU6072
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17191              		.loc 1 599 32 view .LVU6073
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17192              		.loc 1 599 25 view .LVU6074
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17193              		.loc 1 600 13 view .LVU6075
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17194              		.loc 1 599 32 view .LVU6076
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17195              		.loc 1 599 25 view .LVU6077
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17196              		.loc 1 599 25 is_stmt 0 view .LVU6078
 17197              	.LBE782:
 17198              	.LBB783:
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17199              		.loc 1 601 25 is_stmt 1 view .LVU6079
 602:sieve_extend.c ****     }
 17200              		.loc 1 602 13 view .LVU6080
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17201              		.loc 1 601 32 view .LVU6081
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17202              		.loc 1 601 25 view .LVU6082
 602:sieve_extend.c ****     }
 17203              		.loc 1 602 13 view .LVU6083
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17204              		.loc 1 601 32 view .LVU6084
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17205              		.loc 1 601 25 view .LVU6085
 602:sieve_extend.c ****     }
GAS LISTING /tmp/cc64mrzX.s 			page 459


 17206              		.loc 1 602 13 view .LVU6086
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17207              		.loc 1 601 32 view .LVU6087
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17208              		.loc 1 601 25 view .LVU6088
 602:sieve_extend.c ****     }
 17209              		.loc 1 602 13 view .LVU6089
 17210              	# sieve_extend.c:602:             *(dst+j) |= (*(src+1)>>(64-shift));
 602:sieve_extend.c ****     }
 17211              		.loc 1 602 34 is_stmt 0 view .LVU6090
 17212 5b34 C525D3E0 		vpsrlq	ymm12, ymm11, xmm0	# vect__57.705, vect__102.704, _4
 17213              	# sieve_extend.c:602:             *(dst+j) |= (*(src+1)>>(64-shift));
 602:sieve_extend.c ****     }
 17214              		.loc 1 602 22 view .LVU6091
 17215 5b38 C5FE7F74 		vmovdqu	YMMWORD PTR 96[rdi+rax], ymm6	# MEM[base: dst_34(D), index: ivtmp.718_114, offset: 0B], ve
 17215      0760
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17216              		.loc 1 601 32 is_stmt 1 view .LVU6092
 17217              	.LVL1014:
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17218              		.loc 1 601 25 view .LVU6093
 17219              	.LBE783:
 597:sieve_extend.c ****     {
 17220              		.loc 1 597 24 view .LVU6094
 597:sieve_extend.c ****     {
 17221              		.loc 1 597 12 view .LVU6095
 17222              	.LBB784:
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17223              		.loc 1 599 25 view .LVU6096
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17224              		.loc 1 600 13 view .LVU6097
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17225              		.loc 1 599 32 view .LVU6098
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17226              		.loc 1 599 25 view .LVU6099
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17227              		.loc 1 600 13 view .LVU6100
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17228              		.loc 1 599 32 view .LVU6101
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17229              		.loc 1 599 25 view .LVU6102
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17230              		.loc 1 600 13 view .LVU6103
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17231              		.loc 1 599 32 view .LVU6104
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17232              		.loc 1 599 25 view .LVU6105
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17233              		.loc 1 600 13 view .LVU6106
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17234              		.loc 1 599 32 view .LVU6107
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17235              		.loc 1 599 25 view .LVU6108
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17236              		.loc 1 599 25 is_stmt 0 view .LVU6109
 17237              	.LBE784:
 17238              	.LBB785:
GAS LISTING /tmp/cc64mrzX.s 			page 460


 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17239              		.loc 1 601 25 is_stmt 1 view .LVU6110
 602:sieve_extend.c ****     }
 17240              		.loc 1 602 13 view .LVU6111
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17241              		.loc 1 601 32 view .LVU6112
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17242              		.loc 1 601 25 view .LVU6113
 602:sieve_extend.c ****     }
 17243              		.loc 1 602 13 view .LVU6114
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17244              		.loc 1 601 32 view .LVU6115
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17245              		.loc 1 601 25 view .LVU6116
 602:sieve_extend.c ****     }
 17246              		.loc 1 602 13 view .LVU6117
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17247              		.loc 1 601 32 view .LVU6118
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17248              		.loc 1 601 25 view .LVU6119
 602:sieve_extend.c ****     }
 17249              		.loc 1 602 13 view .LVU6120
 17250              	# sieve_extend.c:602:             *(dst+j) |= (*(src+1)>>(64-shift));
 602:sieve_extend.c ****     }
 17251              		.loc 1 602 22 is_stmt 0 view .LVU6121
 17252 5b3e C57E7F94 		vmovdqu	YMMWORD PTR 128[rdi+rax], ymm10	# MEM[base: dst_34(D), index: ivtmp.718_114, offset: 0B], 
 17252      07800000 
 17252      00
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17253              		.loc 1 601 32 is_stmt 1 view .LVU6122
 17254              	.LVL1015:
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17255              		.loc 1 601 25 view .LVU6123
 17256              	.LBE785:
 597:sieve_extend.c ****     {
 17257              		.loc 1 597 24 view .LVU6124
 597:sieve_extend.c ****     {
 17258              		.loc 1 597 12 view .LVU6125
 17259              	.LBB786:
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17260              		.loc 1 599 25 view .LVU6126
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17261              		.loc 1 600 13 view .LVU6127
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17262              		.loc 1 599 32 view .LVU6128
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17263              		.loc 1 599 25 view .LVU6129
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17264              		.loc 1 600 13 view .LVU6130
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17265              		.loc 1 599 32 view .LVU6131
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17266              		.loc 1 599 25 view .LVU6132
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17267              		.loc 1 600 13 view .LVU6133
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17268              		.loc 1 599 32 view .LVU6134
GAS LISTING /tmp/cc64mrzX.s 			page 461


 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17269              		.loc 1 599 25 view .LVU6135
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17270              		.loc 1 600 13 view .LVU6136
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17271              		.loc 1 599 32 view .LVU6137
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17272              		.loc 1 599 25 view .LVU6138
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17273              		.loc 1 599 25 is_stmt 0 view .LVU6139
 17274              	.LBE786:
 17275              	.LBB787:
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17276              		.loc 1 601 25 is_stmt 1 view .LVU6140
 602:sieve_extend.c ****     }
 17277              		.loc 1 602 13 view .LVU6141
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17278              		.loc 1 601 32 view .LVU6142
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17279              		.loc 1 601 25 view .LVU6143
 602:sieve_extend.c ****     }
 17280              		.loc 1 602 13 view .LVU6144
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17281              		.loc 1 601 32 view .LVU6145
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17282              		.loc 1 601 25 view .LVU6146
 602:sieve_extend.c ****     }
 17283              		.loc 1 602 13 view .LVU6147
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17284              		.loc 1 601 32 view .LVU6148
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17285              		.loc 1 601 25 view .LVU6149
 602:sieve_extend.c ****     }
 17286              		.loc 1 602 13 view .LVU6150
 17287              	# sieve_extend.c:602:             *(dst+j) |= (*(src+1)>>(64-shift));
 602:sieve_extend.c ****     }
 17288              		.loc 1 602 34 is_stmt 0 view .LVU6151
 17289 5b47 C5EDD3E8 		vpsrlq	ymm5, ymm2, xmm0	# vect__57.705, vect__102.704, _4
 17290              	.LBE787:
 17291              	.LBB788:
 17292              	# sieve_extend.c:600:             *(dst+j) = (*(src+j))<<shift;
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17293              		.loc 1 600 34 view .LVU6152
 17294 5b4b C515F3F1 		vpsllq	ymm14, ymm13, xmm1	# vect__104.709, tmp275, shift
 17295              	.LBE788:
 17296              	.LBB789:
 17297              	# sieve_extend.c:602:             *(dst+j) |= (*(src+1)>>(64-shift));
 602:sieve_extend.c ****     }
 17298              		.loc 1 602 34 view .LVU6153
 17299 5b4f C53DD3C8 		vpsrlq	ymm9, ymm8, xmm0	# vect__57.705, vect__102.704, _4
 17300              	.LBE789:
 17301              	.LBB790:
 17302              	# sieve_extend.c:600:             *(dst+j) = (*(src+j))<<shift;
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17303              		.loc 1 600 34 view .LVU6154
 17304 5b53 C5DDF3F1 		vpsllq	ymm6, ymm4, xmm1	# vect__104.709, tmp276, shift
 17305 5b57 C565F3D1 		vpsllq	ymm10, ymm3, xmm1	# vect__104.709, tmp277, shift
GAS LISTING /tmp/cc64mrzX.s 			page 462


 17306              	.LBE790:
 17307              	.LBB791:
 17308              	# sieve_extend.c:602:             *(dst+j) |= (*(src+1)>>(64-shift));
 602:sieve_extend.c ****     }
 17309              		.loc 1 602 22 view .LVU6155
 17310 5b5b C4411DEB 		vpor	ymm15, ymm12, ymm14	# vect__58.710, vect__57.705, vect__104.709
 17310      FE
 17311 5b60 C5D5EBFE 		vpor	ymm7, ymm5, ymm6	# vect__58.710, vect__57.705, vect__104.709
 17312 5b64 C57E7FBC 		vmovdqu	YMMWORD PTR 160[rdi+rax], ymm15	# MEM[base: dst_34(D), index: ivtmp.718_114, offset: 0B], 
 17312      07A00000 
 17312      00
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17313              		.loc 1 601 32 is_stmt 1 view .LVU6156
 17314              	.LVL1016:
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17315              		.loc 1 601 25 view .LVU6157
 17316              	.LBE791:
 597:sieve_extend.c ****     {
 17317              		.loc 1 597 24 view .LVU6158
 597:sieve_extend.c ****     {
 17318              		.loc 1 597 12 view .LVU6159
 17319              	.LBB792:
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17320              		.loc 1 599 25 view .LVU6160
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17321              		.loc 1 600 13 view .LVU6161
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17322              		.loc 1 599 32 view .LVU6162
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17323              		.loc 1 599 25 view .LVU6163
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17324              		.loc 1 600 13 view .LVU6164
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17325              		.loc 1 599 32 view .LVU6165
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17326              		.loc 1 599 25 view .LVU6166
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17327              		.loc 1 600 13 view .LVU6167
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17328              		.loc 1 599 32 view .LVU6168
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17329              		.loc 1 599 25 view .LVU6169
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17330              		.loc 1 600 13 view .LVU6170
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17331              		.loc 1 599 32 view .LVU6171
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17332              		.loc 1 599 25 view .LVU6172
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17333              		.loc 1 599 25 is_stmt 0 view .LVU6173
 17334              	.LBE792:
 17335              	.LBB793:
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17336              		.loc 1 601 25 is_stmt 1 view .LVU6174
 602:sieve_extend.c ****     }
 17337              		.loc 1 602 13 view .LVU6175
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
GAS LISTING /tmp/cc64mrzX.s 			page 463


 17338              		.loc 1 601 32 view .LVU6176
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17339              		.loc 1 601 25 view .LVU6177
 602:sieve_extend.c ****     }
 17340              		.loc 1 602 13 view .LVU6178
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17341              		.loc 1 601 32 view .LVU6179
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17342              		.loc 1 601 25 view .LVU6180
 602:sieve_extend.c ****     }
 17343              		.loc 1 602 13 view .LVU6181
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17344              		.loc 1 601 32 view .LVU6182
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17345              		.loc 1 601 25 view .LVU6183
 602:sieve_extend.c ****     }
 17346              		.loc 1 602 13 view .LVU6184
 17347              	# sieve_extend.c:602:             *(dst+j) |= (*(src+1)>>(64-shift));
 602:sieve_extend.c ****     }
 17348              		.loc 1 602 22 is_stmt 0 view .LVU6185
 17349 5b6d C44135EB 		vpor	ymm11, ymm9, ymm10	# vect__58.710, vect__57.705, vect__104.709
 17349      DA
 17350 5b72 C5FE7FBC 		vmovdqu	YMMWORD PTR 192[rdi+rax], ymm7	# MEM[base: dst_34(D), index: ivtmp.718_114, offset: 0B], v
 17350      07C00000 
 17350      00
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17351              		.loc 1 601 32 is_stmt 1 view .LVU6186
 17352              	.LVL1017:
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17353              		.loc 1 601 25 view .LVU6187
 17354              	.LBE793:
 597:sieve_extend.c ****     {
 17355              		.loc 1 597 24 view .LVU6188
 597:sieve_extend.c ****     {
 17356              		.loc 1 597 12 view .LVU6189
 17357              	.LBB794:
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17358              		.loc 1 599 25 view .LVU6190
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17359              		.loc 1 600 13 view .LVU6191
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17360              		.loc 1 599 32 view .LVU6192
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17361              		.loc 1 599 25 view .LVU6193
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17362              		.loc 1 600 13 view .LVU6194
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17363              		.loc 1 599 32 view .LVU6195
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17364              		.loc 1 599 25 view .LVU6196
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17365              		.loc 1 600 13 view .LVU6197
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17366              		.loc 1 599 32 view .LVU6198
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17367              		.loc 1 599 25 view .LVU6199
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
GAS LISTING /tmp/cc64mrzX.s 			page 464


 17368              		.loc 1 600 13 view .LVU6200
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17369              		.loc 1 599 32 view .LVU6201
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17370              		.loc 1 599 25 view .LVU6202
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17371              		.loc 1 599 25 is_stmt 0 view .LVU6203
 17372              	.LBE794:
 17373              	.LBB795:
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17374              		.loc 1 601 25 is_stmt 1 view .LVU6204
 602:sieve_extend.c ****     }
 17375              		.loc 1 602 13 view .LVU6205
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17376              		.loc 1 601 32 view .LVU6206
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17377              		.loc 1 601 25 view .LVU6207
 602:sieve_extend.c ****     }
 17378              		.loc 1 602 13 view .LVU6208
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17379              		.loc 1 601 32 view .LVU6209
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17380              		.loc 1 601 25 view .LVU6210
 602:sieve_extend.c ****     }
 17381              		.loc 1 602 13 view .LVU6211
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17382              		.loc 1 601 32 view .LVU6212
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17383              		.loc 1 601 25 view .LVU6213
 602:sieve_extend.c ****     }
 17384              		.loc 1 602 13 view .LVU6214
 17385              	# sieve_extend.c:602:             *(dst+j) |= (*(src+1)>>(64-shift));
 602:sieve_extend.c ****     }
 17386              		.loc 1 602 22 is_stmt 0 view .LVU6215
 17387 5b7b C57E7F9C 		vmovdqu	YMMWORD PTR 224[rdi+rax], ymm11	# MEM[base: dst_34(D), index: ivtmp.718_114, offset: 0B], 
 17387      07E00000 
 17387      00
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17388              		.loc 1 601 32 is_stmt 1 view .LVU6216
 17389              	.LVL1018:
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17390              		.loc 1 601 25 view .LVU6217
 17391              	.LBE795:
 597:sieve_extend.c ****     {
 17392              		.loc 1 597 24 view .LVU6218
 597:sieve_extend.c ****     {
 17393              		.loc 1 597 12 view .LVU6219
 17394 5b84 48050001 		add	rax, 256	# ivtmp.718,
 17394      0000
 17395 5b8a 4539CA   		cmp	r10d, r9d	# tmp164, ivtmp.715
 17396 5b8d 0F87C7FE 		ja	.L1529	#,
 17396      FFFF
 17397              	.L1569:
 17398 5b93 4589C3   		mov	r11d, r8d	# _25, _25
 17399 5b96 428D0495 		lea	eax, 0[0+r10*4]	# i,
 17399      00000000 
 17400 5b9e 4983C301 		add	r11, 1	# tmp140,
GAS LISTING /tmp/cc64mrzX.s 			page 465


 17401 5ba2 49C1E305 		sal	r11, 5	# _105,
 17402 5ba6 4C01DF   		add	rdi, r11	# dst, _105
 17403 5ba9 4C01DE   		add	rsi, r11	# src, _105
 17404 5bac C5F877   		vzeroupper
 17405              	.LVL1019:
 17406              	.L1530:
 604:sieve_extend.c ****     {
 17407              		.loc 1 604 12 view .LVU6220
 17408              	# sieve_extend.c:604:     for (; i < size; ++i,++src,++dst)
 604:sieve_extend.c ****     {
 17409              		.loc 1 604 5 is_stmt 0 view .LVU6221
 17410 5baf 39C2     		cmp	edx, eax	# size, i
 17411 5bb1 0F8E9400 		jle	.L1573	#,
 17411      0000
 17412              	# sieve_extend.c:606:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 606:sieve_extend.c ****     }    
 17413              		.loc 1 606 35 view .LVU6222
 17414 5bb7 4C8B5608 		mov	r10, QWORD PTR 8[rsi]	# _57, MEM[(const uint64_t *)src_30 + 8B]
 17415 5bbb 41B84000 		mov	r8d, 64	# tmp142,
 17415      0000
 17416              	# sieve_extend.c:606:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 606:sieve_extend.c ****     }    
 17417              		.loc 1 606 23 view .LVU6223
 17418 5bc1 C462F3F7 		shrx	r9, QWORD PTR [rsi], rcx	# tmp143, *src_30, shift
 17418      0E
 17419 5bc6 4129C8   		sub	r8d, ecx	# _97, shift
 606:sieve_extend.c ****     }    
 17420              		.loc 1 606 9 is_stmt 1 view .LVU6224
 17421              	# sieve_extend.c:606:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 606:sieve_extend.c ****     }    
 17422              		.loc 1 606 43 is_stmt 0 view .LVU6225
 17423 5bc9 C442B9F7 		shlx	r11, r10, r8	# tmp145, _57, _97
 17423      DA
 17424              	# sieve_extend.c:606:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 606:sieve_extend.c ****     }    
 17425              		.loc 1 606 32 view .LVU6226
 17426 5bce 4D09D9   		or	r9, r11	# tmp146, tmp145
 17427 5bd1 4C890F   		mov	QWORD PTR [rdi], r9	# *dst_86, tmp146
 604:sieve_extend.c ****     {
 17428              		.loc 1 604 22 is_stmt 1 view .LVU6227
 17429              	.LVL1020:
 604:sieve_extend.c ****     {
 17430              		.loc 1 604 12 view .LVU6228
 17431              	# sieve_extend.c:604:     for (; i < size; ++i,++src,++dst)
 604:sieve_extend.c ****     {
 17432              		.loc 1 604 22 is_stmt 0 view .LVU6229
 17433 5bd4 448D4801 		lea	r9d, 1[rax]	# i,
 17434              	.LVL1021:
 17435              	# sieve_extend.c:604:     for (; i < size; ++i,++src,++dst)
 604:sieve_extend.c ****     {
 17436              		.loc 1 604 5 view .LVU6230
 17437 5bd8 4439CA   		cmp	edx, r9d	# size, i
 17438 5bdb 7E6D     		jle	.L1570	#,
 606:sieve_extend.c ****     }    
 17439              		.loc 1 606 9 is_stmt 1 view .LVU6231
 17440              	# sieve_extend.c:606:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 606:sieve_extend.c ****     }    
GAS LISTING /tmp/cc64mrzX.s 			page 466


 17441              		.loc 1 606 35 is_stmt 0 view .LVU6232
 17442 5bdd 4C8B4E10 		mov	r9, QWORD PTR 16[rsi]	# _109, MEM[(const uint64_t *)src_30 + 16B]
 17443              	.LVL1022:
 17444              	# sieve_extend.c:606:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 606:sieve_extend.c ****     }    
 17445              		.loc 1 606 23 view .LVU6233
 17446 5be1 C442F3F7 		shrx	r10, r10, rcx	# tmp148, _57, shift
 17446      D2
 17447              	# sieve_extend.c:606:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 606:sieve_extend.c ****     }    
 17448              		.loc 1 606 43 view .LVU6234
 17449 5be6 C442B9F7 		shlx	r11, r9, r8	# tmp149, _109, _97
 17449      D9
 17450              	# sieve_extend.c:606:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 606:sieve_extend.c ****     }    
 17451              		.loc 1 606 32 view .LVU6235
 17452 5beb 4D09DA   		or	r10, r11	# tmp150, tmp149
 17453 5bee 4C895708 		mov	QWORD PTR 8[rdi], r10	# MEM[(uint64_t *)dst_86 + 8B], tmp150
 604:sieve_extend.c ****     {
 17454              		.loc 1 604 22 is_stmt 1 view .LVU6236
 17455              	.LVL1023:
 604:sieve_extend.c ****     {
 17456              		.loc 1 604 12 view .LVU6237
 17457              	# sieve_extend.c:604:     for (; i < size; ++i,++src,++dst)
 604:sieve_extend.c ****     {
 17458              		.loc 1 604 22 is_stmt 0 view .LVU6238
 17459 5bf2 448D5002 		lea	r10d, 2[rax]	# i,
 17460              	.LVL1024:
 17461              	# sieve_extend.c:604:     for (; i < size; ++i,++src,++dst)
 604:sieve_extend.c ****     {
 17462              		.loc 1 604 5 view .LVU6239
 17463 5bf6 4439D2   		cmp	edx, r10d	# size, i
 17464 5bf9 7E4F     		jle	.L1570	#,
 606:sieve_extend.c ****     }    
 17465              		.loc 1 606 9 is_stmt 1 view .LVU6240
 17466              	# sieve_extend.c:606:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 606:sieve_extend.c ****     }    
 17467              		.loc 1 606 35 is_stmt 0 view .LVU6241
 17468 5bfb 4C8B5618 		mov	r10, QWORD PTR 24[rsi]	# _54, MEM[(const uint64_t *)src_30 + 24B]
 17469              	.LVL1025:
 17470              	# sieve_extend.c:606:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 606:sieve_extend.c ****     }    
 17471              		.loc 1 606 23 view .LVU6242
 17472 5bff C442F3F7 		shrx	r9, r9, rcx	# tmp152, _109, shift
 17472      C9
 17473              	# sieve_extend.c:606:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 606:sieve_extend.c ****     }    
 17474              		.loc 1 606 43 view .LVU6243
 17475 5c04 C442B9F7 		shlx	r11, r10, r8	# tmp153, _54, _97
 17475      DA
 17476              	# sieve_extend.c:606:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 606:sieve_extend.c ****     }    
 17477              		.loc 1 606 32 view .LVU6244
 17478 5c09 4D09D9   		or	r9, r11	# tmp154, tmp153
 17479 5c0c 4C894F10 		mov	QWORD PTR 16[rdi], r9	# MEM[(uint64_t *)dst_86 + 16B], tmp154
 604:sieve_extend.c ****     {
 17480              		.loc 1 604 22 is_stmt 1 view .LVU6245
GAS LISTING /tmp/cc64mrzX.s 			page 467


 17481              	.LVL1026:
 604:sieve_extend.c ****     {
 17482              		.loc 1 604 12 view .LVU6246
 17483              	# sieve_extend.c:604:     for (; i < size; ++i,++src,++dst)
 604:sieve_extend.c ****     {
 17484              		.loc 1 604 22 is_stmt 0 view .LVU6247
 17485 5c10 448D4803 		lea	r9d, 3[rax]	# i,
 17486              	.LVL1027:
 17487              	# sieve_extend.c:604:     for (; i < size; ++i,++src,++dst)
 604:sieve_extend.c ****     {
 17488              		.loc 1 604 5 view .LVU6248
 17489 5c14 4439CA   		cmp	edx, r9d	# size, i
 17490 5c17 7E31     		jle	.L1570	#,
 606:sieve_extend.c ****     }    
 17491              		.loc 1 606 9 is_stmt 1 view .LVU6249
 17492              	# sieve_extend.c:606:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 606:sieve_extend.c ****     }    
 17493              		.loc 1 606 35 is_stmt 0 view .LVU6250
 17494 5c19 4C8B4E20 		mov	r9, QWORD PTR 32[rsi]	# _77, MEM[(const uint64_t *)src_30 + 32B]
 17495              	.LVL1028:
 17496              	# sieve_extend.c:604:     for (; i < size; ++i,++src,++dst)
 604:sieve_extend.c ****     {
 17497              		.loc 1 604 22 view .LVU6251
 17498 5c1d 83C004   		add	eax, 4	# i,
 17499              	.LVL1029:
 17500              	# sieve_extend.c:606:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 606:sieve_extend.c ****     }    
 17501              		.loc 1 606 23 view .LVU6252
 17502 5c20 C442F3F7 		shrx	r10, r10, rcx	# tmp156, _54, shift
 17502      D2
 17503              	# sieve_extend.c:606:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 606:sieve_extend.c ****     }    
 17504              		.loc 1 606 43 view .LVU6253
 17505 5c25 C442B9F7 		shlx	r11, r9, r8	# tmp157, _77, _97
 17505      D9
 17506              	# sieve_extend.c:606:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 606:sieve_extend.c ****     }    
 17507              		.loc 1 606 32 view .LVU6254
 17508 5c2a 4D09DA   		or	r10, r11	# tmp158, tmp157
 17509              	# sieve_extend.c:604:     for (; i < size; ++i,++src,++dst)
 604:sieve_extend.c ****     {
 17510              		.loc 1 604 5 view .LVU6255
 17511 5c2d 39C2     		cmp	edx, eax	# size, i
 17512              	# sieve_extend.c:606:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 606:sieve_extend.c ****     }    
 17513              		.loc 1 606 32 view .LVU6256
 17514 5c2f 4C895718 		mov	QWORD PTR 24[rdi], r10	# MEM[(uint64_t *)dst_86 + 24B], tmp158
 604:sieve_extend.c ****     {
 17515              		.loc 1 604 22 is_stmt 1 view .LVU6257
 17516              	.LVL1030:
 604:sieve_extend.c ****     {
 17517              		.loc 1 604 12 view .LVU6258
 17518              	# sieve_extend.c:604:     for (; i < size; ++i,++src,++dst)
 604:sieve_extend.c ****     {
 17519              		.loc 1 604 5 is_stmt 0 view .LVU6259
 17520 5c33 7E15     		jle	.L1570	#,
 606:sieve_extend.c ****     }    
GAS LISTING /tmp/cc64mrzX.s 			page 468


 17521              		.loc 1 606 9 is_stmt 1 discriminator 2 view .LVU6260
 17522              	# sieve_extend.c:606:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 606:sieve_extend.c ****     }    
 17523              		.loc 1 606 43 is_stmt 0 discriminator 2 view .LVU6261
 17524 5c35 488B5628 		mov	rdx, QWORD PTR 40[rsi]	# MEM[(const uint64_t *)src_30 + 40B], MEM[(const uint64_t *)src_30 + 4
 17525              	.LVL1031:
 17526              	# sieve_extend.c:606:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 606:sieve_extend.c ****     }    
 17527              		.loc 1 606 23 discriminator 2 view .LVU6262
 17528 5c39 C4C2F3F7 		shrx	rcx, r9, rcx	# tmp162, _77, shift
 17528      C9
 17529              	.LVL1032:
 17530              	# sieve_extend.c:606:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 606:sieve_extend.c ****     }    
 17531              		.loc 1 606 43 discriminator 2 view .LVU6263
 17532 5c3e C4E2B9F7 		shlx	rsi, rdx, r8	# tmp160, MEM[(const uint64_t *)src_30 + 40B], _97
 17532      F2
 17533              	.LVL1033:
 17534              	# sieve_extend.c:606:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 606:sieve_extend.c ****     }    
 17535              		.loc 1 606 32 discriminator 2 view .LVU6264
 17536 5c43 4809F1   		or	rcx, rsi	# tmp163, tmp160
 17537 5c46 48894F20 		mov	QWORD PTR 32[rdi], rcx	# MEM[(uint64_t *)dst_86 + 32B], tmp163
 604:sieve_extend.c ****     {
 17538              		.loc 1 604 22 is_stmt 1 discriminator 2 view .LVU6265
 17539              	.LVL1034:
 604:sieve_extend.c ****     {
 17540              		.loc 1 604 12 discriminator 2 view .LVU6266
 17541              	.L1570:
 17542              	# sieve_extend.c:608: }
 608:sieve_extend.c **** 
 17543              		.loc 1 608 1 is_stmt 0 view .LVU6267
 17544 5c4a C3       		ret	
 17545              	.LVL1035:
 17546              	.L1573:
 608:sieve_extend.c **** 
 17547              		.loc 1 608 1 view .LVU6268
 17548 5c4b C3       		ret	
 17549              	.LVL1036:
 17550              	.L1572:
 17551              	.LBB796:
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17552              		.loc 1 599 25 is_stmt 1 view .LVU6269
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17553              		.loc 1 600 13 view .LVU6270
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17554              		.loc 1 599 32 view .LVU6271
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17555              		.loc 1 599 25 view .LVU6272
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17556              		.loc 1 600 13 view .LVU6273
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17557              		.loc 1 599 32 view .LVU6274
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17558              		.loc 1 599 25 view .LVU6275
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17559              		.loc 1 600 13 view .LVU6276
GAS LISTING /tmp/cc64mrzX.s 			page 469


 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17560              		.loc 1 599 32 view .LVU6277
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17561              		.loc 1 599 25 view .LVU6278
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17562              		.loc 1 600 13 view .LVU6279
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17563              		.loc 1 599 32 view .LVU6280
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17564              		.loc 1 599 25 view .LVU6281
 599:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17565              		.loc 1 599 25 is_stmt 0 view .LVU6282
 17566              	.LBE796:
 17567              	.LBB797:
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17568              		.loc 1 601 25 is_stmt 1 view .LVU6283
 602:sieve_extend.c ****     }
 17569              		.loc 1 602 13 view .LVU6284
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17570              		.loc 1 601 32 view .LVU6285
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17571              		.loc 1 601 25 view .LVU6286
 602:sieve_extend.c ****     }
 17572              		.loc 1 602 13 view .LVU6287
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17573              		.loc 1 601 32 view .LVU6288
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17574              		.loc 1 601 25 view .LVU6289
 602:sieve_extend.c ****     }
 17575              		.loc 1 602 13 view .LVU6290
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17576              		.loc 1 601 32 view .LVU6291
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17577              		.loc 1 601 25 view .LVU6292
 602:sieve_extend.c ****     }
 17578              		.loc 1 602 13 view .LVU6293
 17579              	.LBE797:
 17580              	.LBB798:
 17581              	# sieve_extend.c:600:             *(dst+j) = (*(src+j))<<shift;
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17582              		.loc 1 600 25 is_stmt 0 view .LVU6294
 17583 5c4c C4E3FD00 		vpermq	ymm7, YMMWORD PTR 32[rsi], 85	# vect__102.704, MEM[base: src_35(D), index: ivtmp.718_114, o
 17583      7E2055
 17584 5c53 41B90200 		mov	r9d, 2	# ivtmp.715,
 17584      0000
 17585              	# sieve_extend.c:600:             *(dst+j) = (*(src+j))<<shift;
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17586              		.loc 1 600 34 view .LVU6295
 17587 5c59 C57E6F4E 		vmovdqu	ymm9, YMMWORD PTR 32[rsi]	# tmp278, MEM[base: src_35(D), index: ivtmp.718_114, offset: 0B]
 17587      20
 17588 5c5e B8400000 		mov	eax, 64	# ivtmp.718,
 17588      00
 17589              	.LBE798:
 17590              	.LBB799:
 17591              	# sieve_extend.c:602:             *(dst+j) |= (*(src+1)>>(64-shift));
 602:sieve_extend.c ****     }
 17592              		.loc 1 602 34 view .LVU6296
GAS LISTING /tmp/cc64mrzX.s 			page 470


 17593 5c63 C545D3C0 		vpsrlq	ymm8, ymm7, xmm0	# vect__57.705, vect__102.704, _4
 17594              	.LBE799:
 17595              	.LBB800:
 17596              	# sieve_extend.c:600:             *(dst+j) = (*(src+j))<<shift;
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17597              		.loc 1 600 34 view .LVU6297
 17598 5c67 C535F3D1 		vpsllq	ymm10, ymm9, xmm1	# vect__104.709, tmp278, shift
 17599              	.LBE800:
 17600              	.LBB801:
 17601              	# sieve_extend.c:602:             *(dst+j) |= (*(src+1)>>(64-shift));
 602:sieve_extend.c ****     }
 17602              		.loc 1 602 22 view .LVU6298
 17603 5c6b C4413DEB 		vpor	ymm11, ymm8, ymm10	# vect__58.710, vect__57.705, vect__104.709
 17603      DA
 17604 5c70 C57E7F5F 		vmovdqu	YMMWORD PTR 32[rdi], ymm11	# MEM[base: dst_34(D), index: ivtmp.718_114, offset: 0B], vect_
 17604      20
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17605              		.loc 1 601 32 is_stmt 1 view .LVU6299
 17606              	.LVL1037:
 601:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17607              		.loc 1 601 25 view .LVU6300
 17608              	.LBE801:
 597:sieve_extend.c ****     {
 17609              		.loc 1 597 24 view .LVU6301
 597:sieve_extend.c ****     {
 17610              		.loc 1 597 12 view .LVU6302
 17611 5c75 E9F6FCFF 		jmp	.L1561	#
 17611      FF
 17612              	.LVL1038:
 17613              	.L1571:
 17614              	# sieve_extend.c:595:     int i = 0;
 595:sieve_extend.c ****     // MSVC: use steps of 2 for SSE, 4 for AVX2, 8 for AVX512
 17615              		.loc 1 595 9 is_stmt 0 view .LVU6303
 17616 5c7a 31C0     		xor	eax, eax	# i
 17617 5c7c E92EFFFF 		jmp	.L1530	#
 17617      FF
 17618              		.cfi_endproc
 17619              	.LFE66:
 17621              		.section	.rodata.str1.8,"aMS",@progbits,1
 17622              		.align 8
 17623              	.LC9:
 17624 0000 52657375 		.string	"Result: Sievesize %ju is expected to have %ju primes. algorithm produced %ju primes\n"
 17624      6C743A20 
 17624      53696576 
 17624      6573697A 
 17624      6520256A 
 17625 0055 000000   		.align 8
 17626              	.LC10:
 17627 0058 4E6F2076 		.string	"No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produced %j
 17627      616C6964 
 17627      20726573 
 17627      756C742E 
 17627      20536965 
 17628              		.section	.rodata.str1.1
 17629              	.LC11:
 17630 0023 44656570 		.string	"DeepAnalyzing"
 17630      416E616C 
GAS LISTING /tmp/cc64mrzX.s 			page 471


 17630      797A696E 
 17630      6700
 17631              		.section	.rodata.str1.8
 17632 00bb 00000000 		.align 8
 17632      00
 17633              	.LC12:
 17634 00c0 4E756D62 		.string	"Number %ju (%ju) was marked prime, but %ju * %ju = %ju\n"
 17634      65722025 
 17634      6A752028 
 17634      256A7529 
 17634      20776173 
 17635              		.align 8
 17636              	.LC13:
 17637 00f8 4E756D62 		.string	"Number %ju (%ju) was marked non-prime, but no factors found. So it is prime\n"
 17637      65722025 
 17637      6A752028 
 17637      256A7529 
 17637      20776173 
 17638              		.text
 17639 5c81 66662E0F 		.p2align 4
 17639      1F840000 
 17639      0000000F 
 17639      1F4000
 17640              		.globl	validatePrimeCount
 17642              	validatePrimeCount:
 17643              	.LVL1039:
 17644              	.LFB79:
1070:sieve_extend.c **** 
 17645              		.loc 1 1070 76 is_stmt 1 view -0
 17646              		.cfi_startproc
1070:sieve_extend.c **** 
 17647              		.loc 1 1070 76 is_stmt 0 view .LVU6305
 17648 5c90 F30F1EFA 		endbr64	
1072:sieve_extend.c ****     counter_t valid_primes = 0;
 17649              		.loc 1 1072 5 is_stmt 1 view .LVU6306
 17650              	# sieve_extend.c:1070: int validatePrimeCount(struct sieve_state *sieve, int option_verboselevel) {
1070:sieve_extend.c **** 
 17651              		.loc 1 1070 76 is_stmt 0 view .LVU6307
 17652 5c94 4157     		push	r15	#
 17653              		.cfi_def_cfa_offset 16
 17654              		.cfi_offset 15, -16
 17655 5c96 4156     		push	r14	#
 17656              		.cfi_def_cfa_offset 24
 17657              		.cfi_offset 14, -24
 17658 5c98 4155     		push	r13	#
 17659              		.cfi_def_cfa_offset 32
 17660              		.cfi_offset 13, -32
 17661 5c9a 4154     		push	r12	#
 17662              		.cfi_def_cfa_offset 40
 17663              		.cfi_offset 12, -40
 17664 5c9c 55       		push	rbp	#
 17665              		.cfi_def_cfa_offset 48
 17666              		.cfi_offset 6, -48
 17667 5c9d 4889FD   		mov	rbp, rdi	# sieve, tmp307
 17668 5ca0 53       		push	rbx	#
 17669              		.cfi_def_cfa_offset 56
 17670              		.cfi_offset 3, -56
GAS LISTING /tmp/cc64mrzX.s 			page 472


 17671 5ca1 89F3     		mov	ebx, esi	# option_verboselevel, tmp308
 17672 5ca3 488D6424 		lea	rsp, -56[rsp]	#,
 17672      C8
 17673              		.cfi_def_cfa_offset 112
 17674              	# sieve_extend.c:1072:     counter_t primecount = count_primes(sieve);
1072:sieve_extend.c ****     counter_t valid_primes = 0;
 17675              		.loc 1 1072 28 view .LVU6308
 17676 5ca8 488B17   		mov	rdx, QWORD PTR [rdi]	# _24, MEM[(uint64_t * *)sieve_18(D)]
 17677 5cab 488B7F08 		mov	rdi, QWORD PTR 8[rdi]	# _25, MEM[(long unsigned int *)sieve_18(D) + 8B]
 17678              	.LVL1040:
 17679              	.LBB823:
 17680              	.LBI823:
1041:sieve_extend.c ****     counter_t primeCount = 1;
 17681              		.loc 1 1041 18 is_stmt 1 view .LVU6309
 17682              	.LBB824:
 17683              	.LBB825:
1043:sieve_extend.c ****     return primeCount;
 17684              		.loc 1 1043 30 view .LVU6310
 17685 5caf 4C8B4D10 		mov	r9, QWORD PTR 16[rbp]	# pretmp_199, sieve_18(D)->size
 17686              	# sieve_extend.c:1043:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(s
1043:sieve_extend.c ****     return primeCount;
 17687              		.loc 1 1043 5 is_stmt 0 view .LVU6311
 17688 5cb3 4883FF01 		cmp	rdi, 1	# _25,
 17689 5cb7 0F860B05 		jbe	.L1575	#,
 17689      0000
 17690              	# sieve_extend.c:1043:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(s
1043:sieve_extend.c ****     return primeCount;
 17691              		.loc 1 1043 20 view .LVU6312
 17692 5cbd B8010000 		mov	eax, 1	# factor,
 17692      00
 17693              	.LBE825:
 17694              	# sieve_extend.c:1042:     counter_t primeCount = 1;
1042:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitarray, factor+
 17695              		.loc 1 1042 15 view .LVU6313
 17696 5cc2 41B80100 		mov	r8d, 1	# primeCount,
 17696      0000
 17697              	.LVL1041:
 17698 5cc8 0F1F8400 		.p2align 4
 17698      00000000 
 17699              		.p2align 3
 17700              	.L1578:
 17701              	.LBB828:
1043:sieve_extend.c ****     return primeCount;
 17702              		.loc 1 1043 104 is_stmt 1 view .LVU6314
 17703              	# sieve_extend.c:1043:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(s
1043:sieve_extend.c ****     return primeCount;
 17704              		.loc 1 1043 114 is_stmt 0 view .LVU6315
 17705 5cd0 4983C001 		add	r8, 1	# primeCount,
 17706              	.LVL1042:
1043:sieve_extend.c ****     return primeCount;
 17707              		.loc 1 1043 52 is_stmt 1 view .LVU6316
 17708              	# sieve_extend.c:1043:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(s
1043:sieve_extend.c ****     return primeCount;
 17709              		.loc 1 1043 61 is_stmt 0 view .LVU6317
 17710 5cd4 4883C001 		add	rax, 1	# factor,
 17711              	.LVL1043:
 17712              	.L1718:
GAS LISTING /tmp/cc64mrzX.s 			page 473


 17713              	.LBB826:
 17714              	.LBI826:
 121:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 17715              		.loc 1 121 25 is_stmt 1 view .LVU6318
 17716              	.LBB827:
 122:sieve_extend.c ****     return index;
 17717              		.loc 1 122 5 view .LVU6319
 122:sieve_extend.c ****     return index;
 17718              		.loc 1 122 11 view .LVU6320
 17719              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 17720              		.loc 1 122 21 is_stmt 0 view .LVU6321
 17721 5cd8 4889C1   		mov	rcx, rax	# tmp162, factor
 17722 5cdb 48C1E906 		shr	rcx, 6	# tmp162,
 17723              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 17724              		.loc 1 122 12 view .LVU6322
 17725 5cdf 4C8B1CCA 		mov	r11, QWORD PTR [rdx+rcx*8]	# *_106,* _24
 17726              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 17727              		.loc 1 122 11 view .LVU6323
 17728 5ce3 490FA3C3 		bt	r11, rax	# *_106, factor
 17729 5ce7 0F83AB00 		jnc	.L1576	#,
 17729      0000
 122:sieve_extend.c ****     return index;
 17730              		.loc 1 122 58 is_stmt 1 view .LVU6324
 17731              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 17732              		.loc 1 122 63 is_stmt 0 view .LVU6325
 17733 5ced 4C8D6001 		lea	r12, 1[rax]	# tmp235,
 17734              	.LVL1044:
 17735              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 17736              		.loc 1 122 21 view .LVU6326
 17737 5cf1 4D89E5   		mov	r13, r12	# tmp167, factor
 17738              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 17739              		.loc 1 122 63 view .LVU6327
 17740 5cf4 4C89E0   		mov	rax, r12	# factor, tmp235
 122:sieve_extend.c ****     return index;
 17741              		.loc 1 122 11 is_stmt 1 view .LVU6328
 17742              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 17743              		.loc 1 122 21 is_stmt 0 view .LVU6329
 17744 5cf7 49C1ED06 		shr	r13, 6	# tmp167,
 17745              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 17746              		.loc 1 122 12 view .LVU6330
 17747 5cfb 4E8B3CEA 		mov	r15, QWORD PTR [rdx+r13*8]	# *_35, *_35
 17748              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 17749              		.loc 1 122 11 view .LVU6331
 17750 5cff 4D0FA3E7 		bt	r15, r12	# *_35, factor
 17751 5d03 0F838F00 		jnc	.L1576	#,
 17751      0000
 122:sieve_extend.c ****     return index;
 17752              		.loc 1 122 58 is_stmt 1 view .LVU6332
GAS LISTING /tmp/cc64mrzX.s 			page 474


 17753              	.LVL1045:
 17754              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 17755              		.loc 1 122 63 is_stmt 0 view .LVU6333
 17756 5d09 4883C001 		add	rax, 1	# factor,
 17757              	.LVL1046:
 122:sieve_extend.c ****     return index;
 17758              		.loc 1 122 11 is_stmt 1 view .LVU6334
 17759              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 17760              		.loc 1 122 21 is_stmt 0 view .LVU6335
 17761 5d0d 4989C6   		mov	r14, rax	# tmp279, factor
 17762 5d10 49C1EE06 		shr	r14, 6	# tmp279,
 17763              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 17764              		.loc 1 122 12 view .LVU6336
 17765 5d14 4A8B34F2 		mov	rsi, QWORD PTR [rdx+r14*8]	# *_35, *_35
 17766              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 17767              		.loc 1 122 11 view .LVU6337
 17768 5d18 480FA3C6 		bt	rsi, rax	# *_35, factor
 17769 5d1c 737A     		jnc	.L1576	#,
 122:sieve_extend.c ****     return index;
 17770              		.loc 1 122 58 is_stmt 1 view .LVU6338
 17771              	.LVL1047:
 17772              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 17773              		.loc 1 122 63 is_stmt 0 view .LVU6339
 17774 5d1e 498D4424 		lea	rax, 2[r12]	# factor,
 17774      02
 17775              	.LVL1048:
 122:sieve_extend.c ****     return index;
 17776              		.loc 1 122 11 is_stmt 1 view .LVU6340
 17777              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 17778              		.loc 1 122 21 is_stmt 0 view .LVU6341
 17779 5d23 4989C2   		mov	r10, rax	# tmp283, factor
 17780 5d26 49C1EA06 		shr	r10, 6	# tmp283,
 17781              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 17782              		.loc 1 122 12 view .LVU6342
 17783 5d2a 4A8B0CD2 		mov	rcx, QWORD PTR [rdx+r10*8]	# *_35, *_35
 17784              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 17785              		.loc 1 122 11 view .LVU6343
 17786 5d2e 480FA3C1 		bt	rcx, rax	# *_35, factor
 17787 5d32 7364     		jnc	.L1576	#,
 122:sieve_extend.c ****     return index;
 17788              		.loc 1 122 58 is_stmt 1 view .LVU6344
 17789              	.LVL1049:
 17790              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 17791              		.loc 1 122 63 is_stmt 0 view .LVU6345
 17792 5d34 498D4424 		lea	rax, 3[r12]	# factor,
 17792      03
 17793              	.LVL1050:
 122:sieve_extend.c ****     return index;
GAS LISTING /tmp/cc64mrzX.s 			page 475


 17794              		.loc 1 122 11 is_stmt 1 view .LVU6346
 17795              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 17796              		.loc 1 122 21 is_stmt 0 view .LVU6347
 17797 5d39 4989C3   		mov	r11, rax	# tmp287, factor
 17798 5d3c 49C1EB06 		shr	r11, 6	# tmp287,
 17799              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 17800              		.loc 1 122 12 view .LVU6348
 17801 5d40 4E8B2CDA 		mov	r13, QWORD PTR [rdx+r11*8]	# *_35, *_35
 17802              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 17803              		.loc 1 122 11 view .LVU6349
 17804 5d44 490FA3C5 		bt	r13, rax	# *_35, factor
 17805 5d48 734E     		jnc	.L1576	#,
 122:sieve_extend.c ****     return index;
 17806              		.loc 1 122 58 is_stmt 1 view .LVU6350
 17807              	.LVL1051:
 17808              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 17809              		.loc 1 122 63 is_stmt 0 view .LVU6351
 17810 5d4a 498D4424 		lea	rax, 4[r12]	# factor,
 17810      04
 17811              	.LVL1052:
 122:sieve_extend.c ****     return index;
 17812              		.loc 1 122 11 is_stmt 1 view .LVU6352
 17813              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 17814              		.loc 1 122 21 is_stmt 0 view .LVU6353
 17815 5d4f 4989C7   		mov	r15, rax	# tmp291, factor
 17816 5d52 49C1EF06 		shr	r15, 6	# tmp291,
 17817              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 17818              		.loc 1 122 12 view .LVU6354
 17819 5d56 4E8B34FA 		mov	r14, QWORD PTR [rdx+r15*8]	# *_35, *_35
 17820              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 17821              		.loc 1 122 11 view .LVU6355
 17822 5d5a 490FA3C6 		bt	r14, rax	# *_35, factor
 17823 5d5e 7338     		jnc	.L1576	#,
 122:sieve_extend.c ****     return index;
 17824              		.loc 1 122 58 is_stmt 1 view .LVU6356
 17825              	.LVL1053:
 17826              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 17827              		.loc 1 122 63 is_stmt 0 view .LVU6357
 17828 5d60 498D4424 		lea	rax, 5[r12]	# factor,
 17828      05
 17829              	.LVL1054:
 122:sieve_extend.c ****     return index;
 17830              		.loc 1 122 11 is_stmt 1 view .LVU6358
 17831              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 17832              		.loc 1 122 21 is_stmt 0 view .LVU6359
 17833 5d65 4889C6   		mov	rsi, rax	# tmp295, factor
 17834 5d68 48C1EE06 		shr	rsi, 6	# tmp295,
 17835              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
GAS LISTING /tmp/cc64mrzX.s 			page 476


 122:sieve_extend.c ****     return index;
 17836              		.loc 1 122 12 view .LVU6360
 17837 5d6c 4C8B14F2 		mov	r10, QWORD PTR [rdx+rsi*8]	# *_35, *_35
 17838              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 17839              		.loc 1 122 11 view .LVU6361
 17840 5d70 490FA3C2 		bt	r10, rax	# *_35, factor
 17841 5d74 7322     		jnc	.L1576	#,
 122:sieve_extend.c ****     return index;
 17842              		.loc 1 122 58 is_stmt 1 view .LVU6362
 17843              	.LVL1055:
 17844              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 17845              		.loc 1 122 63 is_stmt 0 view .LVU6363
 17846 5d76 498D4424 		lea	rax, 6[r12]	# factor,
 17846      06
 17847              	.LVL1056:
 122:sieve_extend.c ****     return index;
 17848              		.loc 1 122 11 is_stmt 1 view .LVU6364
 17849              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 17850              		.loc 1 122 21 is_stmt 0 view .LVU6365
 17851 5d7b 4889C1   		mov	rcx, rax	# tmp299, factor
 17852 5d7e 48C1E906 		shr	rcx, 6	# tmp299,
 17853              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 17854              		.loc 1 122 12 view .LVU6366
 17855 5d82 4C8B1CCA 		mov	r11, QWORD PTR [rdx+rcx*8]	# *_35, *_35
 17856              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 17857              		.loc 1 122 11 view .LVU6367
 17858 5d86 490FA3C3 		bt	r11, rax	# *_35, factor
 17859 5d8a 730C     		jnc	.L1576	#,
 122:sieve_extend.c ****     return index;
 17860              		.loc 1 122 58 is_stmt 1 view .LVU6368
 17861              	.LVL1057:
 17862              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 17863              		.loc 1 122 63 is_stmt 0 view .LVU6369
 17864 5d8c 498D4424 		lea	rax, 7[r12]	# factor,
 17864      07
 17865              	.LVL1058:
 122:sieve_extend.c ****     return index;
 17866              		.loc 1 122 11 is_stmt 1 view .LVU6370
 17867 5d91 E942FFFF 		jmp	.L1718	#
 17867      FF
 17868              		.p2align 4,,7
 17869 5d96 6690     		.p2align 3
 17870              	.L1576:
 17871              	.LVL1059:
 122:sieve_extend.c ****     return index;
 17872              		.loc 1 122 11 is_stmt 0 view .LVU6371
 17873              	.LBE827:
 17874              	.LBE826:
1043:sieve_extend.c ****     return primeCount;
 17875              		.loc 1 1043 30 is_stmt 1 view .LVU6372
 17876              	# sieve_extend.c:1043:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(s
GAS LISTING /tmp/cc64mrzX.s 			page 477


1043:sieve_extend.c ****     return primeCount;
 17877              		.loc 1 1043 5 is_stmt 0 view .LVU6373
 17878 5d98 4839C7   		cmp	rdi, rax	# _25, factor
 17879 5d9b 0F872FFF 		ja	.L1578	#,
 17879      FFFF
1043:sieve_extend.c ****     return primeCount;
 17880              		.loc 1 1043 5 view .LVU6374
 17881              	.LBE828:
1044:sieve_extend.c **** }
 17882              		.loc 1 1044 5 is_stmt 1 view .LVU6375
 17883              	.LVL1060:
1044:sieve_extend.c **** }
 17884              		.loc 1 1044 5 is_stmt 0 view .LVU6376
 17885              	.LBE824:
 17886              	.LBE823:
1073:sieve_extend.c ****     switch(sieve->size) {
 17887              		.loc 1 1073 5 is_stmt 1 view .LVU6377
1074:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 17888              		.loc 1 1074 5 view .LVU6378
 17889 5da1 83FB03   		cmp	ebx, 3	# option_verboselevel,
 17890 5da4 0F9FC2   		setg	dl	#, tmp172
 17891 5da7 4981F9A0 		cmp	r9, 100000	# pretmp_199,
 17891      860100
 17892 5dae 0F842D06 		je	.L1579	#,
 17892      0000
 17893 5db4 0F86CC02 		jbe	.L1719	#,
 17893      0000
 17894 5dba 4981F900 		cmp	r9, 100000000	# pretmp_199,
 17894      E1F505
 17895 5dc1 0F84D905 		je	.L1587	#,
 17895      0000
 17896              		.p2align 4,,4
 17897 5dc7 0F863303 		jbe	.L1720	#,
 17897      0000
 17898 5dcd 4981F900 		cmp	r9, 1000000000	# pretmp_199,
 17898      CA9A3B
 17899 5dd4 0F85EB05 		jne	.L1585	#,
 17899      0000
 17900 5dda 4981F82E 		cmp	r8, 50847534	# primeCount,
 17900      DF0703
 17901              	# sieve_extend.c:1083:         case 1000000000:    valid_primes = 50847534; break;
1083:sieve_extend.c ****         default:            valid_primes= 0;
 17902              		.loc 1 1083 42 is_stmt 0 view .LVU6379
 17903 5de1 B92EDF07 		mov	ecx, 50847534	# valid_primes,
 17903      03
 17904 5de6 410F94C4 		sete	r12b	#, tmp189
 17905 5dea 4421E2   		and	edx, r12d	# _251, tmp189
 17906 5ded 4981F82E 		cmp	r8, 50847534	# primeCount,
 17906      DF0703
 17907 5df4 450FB6EC 		movzx	r13d, r12b	# <retval>, tmp189
 17908 5df8 410F95C6 		setne	r14b	#, _135
1083:sieve_extend.c ****         default:            valid_primes= 0;
 17909              		.loc 1 1083 29 is_stmt 1 view .LVU6380
 17910              	.LVL1061:
1083:sieve_extend.c ****         default:            valid_primes= 0;
 17911              		.loc 1 1083 54 view .LVU6381
 17912 5dfc 0F1F4000 		.p2align 4
GAS LISTING /tmp/cc64mrzX.s 			page 478


 17913              		.p2align 3
 17914              	.L1592:
1087:sieve_extend.c ****     if (valid  && option_verboselevel >= 4) printf("Result: Sievesize %ju is expected to have %ju p
 17915              		.loc 1 1087 5 view .LVU6382
1088:sieve_extend.c ****     if (!valid && option_verboselevel >= 1) {
 17916              		.loc 1 1088 5 view .LVU6383
 17917              	# sieve_extend.c:1088:     if (valid  && option_verboselevel >= 4) printf("Result: Sievesize %ju is
1088:sieve_extend.c ****     if (!valid && option_verboselevel >= 1) {
 17918              		.loc 1 1088 8 is_stmt 0 view .LVU6384
 17919 5e00 84D2     		test	dl, dl	# _251
 17920 5e02 0F841704 		je	.L1593	#,
 17920      0000
1088:sieve_extend.c ****     if (!valid && option_verboselevel >= 1) {
 17921              		.loc 1 1088 45 is_stmt 1 discriminator 1 view .LVU6385
 17922              	.LVL1062:
 17923              	.LBB830:
 17924              	.LBI830:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17925              		.loc 3 105 1 discriminator 1 view .LVU6386
 17926              	.LBB831:
 17927              		.loc 3 107 3 discriminator 1 view .LVU6387
 17928              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17929              		.loc 3 107 10 is_stmt 0 discriminator 1 view .LVU6388
 17930 5e08 4C89CA   		mov	rdx, r9	#, pretmp_199
 17931 5e0b 488D3500 		lea	rsi, .LC9[rip]	#,
 17931      000000
 17932 5e12 BF010000 		mov	edi, 1	#,
 17932      00
 17933 5e17 31C0     		xor	eax, eax	#
 17934 5e19 E8000000 		call	__printf_chk@PLT	#
 17934      00
 17935              	.LVL1063:
 17936              		.loc 3 107 10 discriminator 1 view .LVU6389
 17937              	.LBE831:
 17938              	.LBE830:
1089:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 17939              		.loc 1 1089 5 is_stmt 1 discriminator 1 view .LVU6390
 17940              	.L1594:
1093:sieve_extend.c ****     return (valid);
 17941              		.loc 1 1093 5 view .LVU6391
 17942              	# sieve_extend.c:1093:     if (!valid && option_verboselevel >= 3) deepAnalyzePrimes(sieve);
1093:sieve_extend.c ****     return (valid);
 17943              		.loc 1 1093 8 is_stmt 0 view .LVU6392
 17944 5e1e 83FB02   		cmp	ebx, 2	# option_verboselevel,
 17945 5e21 0F8E4C02 		jle	.L1574	#,
 17945      0000
 17946 5e27 4584F6   		test	r14b, r14b	# _135
 17947 5e2a 0F844302 		je	.L1574	#,
 17947      0000
1093:sieve_extend.c ****     return (valid);
 17948              		.loc 1 1093 45 is_stmt 1 discriminator 1 view .LVU6393
 17949              	.LBB832:
 17950              	.LBI832:
1047:sieve_extend.c ****     printf("DeepAnalyzing\n");
 17951              		.loc 1 1047 13 discriminator 1 view .LVU6394
 17952              	.LVL1064:
 17953              	.LBB833:
GAS LISTING /tmp/cc64mrzX.s 			page 479


1048:sieve_extend.c ****     counter_t warn_prime = 0;
 17954              		.loc 1 1048 5 discriminator 1 view .LVU6395
 17955              	.LBB834:
 17956              	.LBI834:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17957              		.loc 3 105 1 discriminator 1 view .LVU6396
 17958              	.LBB835:
 17959              		.loc 3 107 3 discriminator 1 view .LVU6397
 17960              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17961              		.loc 3 107 10 is_stmt 0 discriminator 1 view .LVU6398
 17962 5e30 488D3D00 		lea	rdi, .LC11[rip]	#,
 17962      000000
 17963 5e37 E8000000 		call	puts@PLT	#
 17963      00
 17964              	.LVL1065:
 17965              		.loc 3 107 10 discriminator 1 view .LVU6399
 17966              	.LBE835:
 17967              	.LBE834:
1049:sieve_extend.c ****     counter_t warn_nonprime = 0;
 17968              		.loc 1 1049 5 is_stmt 1 discriminator 1 view .LVU6400
1050:sieve_extend.c ****     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 17969              		.loc 1 1050 5 discriminator 1 view .LVU6401
1051:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 17970              		.loc 1 1051 5 discriminator 1 view .LVU6402
 17971              	.LBB836:
1051:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 17972              		.loc 1 1051 10 discriminator 1 view .LVU6403
1051:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 17973              		.loc 1 1051 31 discriminator 1 view .LVU6404
 17974              	# sieve_extend.c:1051:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
1051:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 17975              		.loc 1 1051 44 is_stmt 0 discriminator 1 view .LVU6405
 17976 5e3c 488B7D08 		mov	rdi, QWORD PTR 8[rbp]	# _137, MEM[(uint64_t *)sieve_18(D) + 8B]
 17977              	# sieve_extend.c:1051:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
1051:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 17978              		.loc 1 1051 5 discriminator 1 view .LVU6406
 17979 5e40 4883FF01 		cmp	rdi, 1	# _137,
 17980 5e44 0F862902 		jbe	.L1574	#,
 17980      0000
 17981              	.LBB837:
 17982              	.LBB838:
 17983              	.LBB839:
 17984              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17985              		.loc 3 107 10 view .LVU6407
 17986 5e4a 44896C24 		mov	DWORD PTR 36[rsp], r13d	# %sfp, <retval>
 17986      24
 17987              	.LBE839:
 17988              	.LBE838:
 17989              	.LBE837:
 17990              	# sieve_extend.c:1051:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
1051:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 17991              		.loc 1 1051 5 view .LVU6408
 17992 5e4f 41BE0200 		mov	r14d, 2	# ivtmp.751,
 17992      0000
 17993 5e55 41BC0300 		mov	r12d, 3	# ivtmp.749,
 17993      0000
 17994              	.LBE836:
GAS LISTING /tmp/cc64mrzX.s 			page 480


 17995              	# sieve_extend.c:1049:     counter_t warn_prime = 0;
1049:sieve_extend.c ****     counter_t warn_nonprime = 0;
 17996              		.loc 1 1049 15 view .LVU6409
 17997 5e5b 4531C0   		xor	r8d, r8d	# warn_prime
 17998              	# sieve_extend.c:1050:     counter_t warn_nonprime = 0;
1050:sieve_extend.c ****     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 17999              		.loc 1 1050 15 view .LVU6410
 18000 5e5e 48C74424 		mov	QWORD PTR 24[rsp], 0	# %sfp,
 18000      18000000 
 18000      00
 18001              	.LBB858:
 18002              	# sieve_extend.c:1051:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
1051:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 18003              		.loc 1 1051 20 view .LVU6411
 18004 5e67 41BF0100 		mov	r15d, 1	# prime,
 18004      0000
 18005              	.LBB846:
 18006              	.LBB843:
 18007              	.LBB840:
 18008              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18009              		.loc 3 107 10 view .LVU6412
 18010 5e6d 4989ED   		mov	r13, rbp	# sieve, sieve
 18011              	.LVL1066:
 18012              		.p2align 4
 18013              		.p2align 3
 18014              	.L1604:
 18015              		.loc 3 107 10 view .LVU6413
 18016              	.LBE840:
 18017              	.LBE843:
 18018              	.LBE846:
1052:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 18019              		.loc 1 1052 9 is_stmt 1 view .LVU6414
 18020              	# sieve_extend.c:1052:         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) {
1052:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 18021              		.loc 1 1052 29 is_stmt 0 view .LVU6415
 18022 5e70 498B6D00 		mov	rbp, QWORD PTR 0[r13]	# MEM[(uint64_t * *)sieve_18(D)], MEM[(uint64_t * *)sieve_18(D)]
 18023              	# sieve_extend.c:1052:         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) {
1052:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 18024              		.loc 1 1052 30 view .LVU6416
 18025 5e74 4C89FB   		mov	rbx, r15	# tmp198, prime
 18026 5e77 48C1EB06 		shr	rbx, 6	# tmp198,
 18027              	# sieve_extend.c:1052:         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) {
1052:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 18028              		.loc 1 1052 71 view .LVU6417
 18029 5e7b 4C8B4CDD 		mov	r9, QWORD PTR 0[rbp+rbx*8]	# *_47, *_47
 18029      00
 18030 5e80 C4C283F7 		shrx	rcx, r9, r15	# tmp201, *_47, prime
 18030      C9
 18031              	# sieve_extend.c:1052:         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) {
1052:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 18032              		.loc 1 1052 12 view .LVU6418
 18033 5e85 83E101   		and	ecx, 1	# c,
 18034 5e88 0F84BA02 		je	.L1596	#,
 18034      0000
 18035              	.LVL1067:
 18036              	.LBB847:
 18037              	.LBB848:
GAS LISTING /tmp/cc64mrzX.s 			page 481


1061:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18038              		.loc 1 1061 32 is_stmt 1 view .LVU6419
 18039              	.LBE848:
 18040              	# sieve_extend.c:1060:             counter_t c_prime = 0;
1060:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 18041              		.loc 1 1060 23 is_stmt 0 view .LVU6420
 18042 5e8e 31ED     		xor	ebp, ebp	# c_prime
 18043              	.LBB849:
 18044              	# sieve_extend.c:1061:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1061:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18045              		.loc 1 1061 13 view .LVU6421
 18046 5e90 4885FF   		test	rdi, rdi	# _137
 18047 5e93 BE030000 		mov	esi, 3	# ivtmp.741,
 18047      00
 18048 5e98 0F84E103 		je	.L1708	#,
 18048      0000
 18049 5e9e 4989FB   		mov	r11, rdi	# tmp231, _137
 18050 5ea1 4929CB   		sub	r11, rcx	# tmp231, c
 18051 5ea4 4183E303 		and	r11d, 3	# tmp231,
 18052 5ea8 4D89DA   		mov	r10, r11	# tmp232, tmp231
 18053 5eab 0F84BF00 		je	.L1597	#,
 18053      0000
 18054              	.LVL1068:
1062:sieve_extend.c ****             }
 18055              		.loc 1 1062 17 is_stmt 1 view .LVU6422
 18056              	# sieve_extend.c:1062:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1062:sieve_extend.c ****             }
 18057              		.loc 1 1062 48 is_stmt 0 view .LVU6423
 18058 5eb1 488D0409 		lea	rax, [rcx+rcx]	# tmp239,
 18059 5eb5 4C39F0   		cmp	rax, r14	# tmp239, ivtmp.751
 18060 5eb8 7411     		je	.L1649	#,
 18061              	# sieve_extend.c:1062:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1062:sieve_extend.c ****             }
 18062              		.loc 1 1062 33 view .LVU6424
 18063 5eba 31D2     		xor	edx, edx	# tmp241
 18064 5ebc 4C89E0   		mov	rax, r12	# tmp242, ivtmp.749
 18065 5ebf 48F7F6   		div	rsi	# ivtmp.741
 18066              	# sieve_extend.c:1062:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1062:sieve_extend.c ****             }
 18067              		.loc 1 1062 82 view .LVU6425
 18068 5ec2 31ED     		xor	ebp, ebp	# c_prime
1062:sieve_extend.c ****             }
 18069              		.loc 1 1062 82 view .LVU6426
 18070 5ec4 4885D2   		test	rdx, rdx	# tmp241
 18071 5ec7 400F94C5 		sete	bpl	#, c_prime
 18072              	.LVL1069:
 18073              	.L1649:
1061:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18074              		.loc 1 1061 68 is_stmt 1 view .LVU6427
 18075              	# sieve_extend.c:1061:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1061:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18076              		.loc 1 1061 69 is_stmt 0 view .LVU6428
 18077 5ecb 4883C101 		add	rcx, 1	# c,
 18078              	.LVL1070:
1061:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18079              		.loc 1 1061 32 is_stmt 1 view .LVU6429
 18080              	# sieve_extend.c:1061:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
GAS LISTING /tmp/cc64mrzX.s 			page 482


1061:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18081              		.loc 1 1061 13 is_stmt 0 view .LVU6430
 18082 5ecf 4839F9   		cmp	rcx, rdi	# c, _137
 18083 5ed2 0F877801 		ja	.L1603	#,
 18083      0000
 18084              	# sieve_extend.c:1061:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1061:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18085              		.loc 1 1061 51 view .LVU6431
 18086 5ed8 4989C9   		mov	r9, rcx	# tmp244, c
 18087 5edb BE050000 		mov	esi, 5	# ivtmp.741,
 18087      00
 18088 5ee0 4C0FAFC9 		imul	r9, rcx	# tmp244, c
 18089              	# sieve_extend.c:1061:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1061:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18090              		.loc 1 1061 47 view .LVU6432
 18091 5ee4 4D39E1   		cmp	r9, r12	# tmp244, ivtmp.749
 18092 5ee7 0F876301 		ja	.L1603	#,
 18092      0000
 18093 5eed 4983FA01 		cmp	r10, 1	# tmp232,
 18094 5ef1 747D     		je	.L1597	#,
 18095 5ef3 4983FA02 		cmp	r10, 2	# tmp232,
 18096 5ef7 7438     		je	.L1680	#,
1062:sieve_extend.c ****             }
 18097              		.loc 1 1062 17 is_stmt 1 view .LVU6433
 18098              	# sieve_extend.c:1062:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1062:sieve_extend.c ****             }
 18099              		.loc 1 1062 48 is_stmt 0 view .LVU6434
 18100 5ef9 488D1C09 		lea	rbx, [rcx+rcx]	# tmp245,
 18101 5efd 4C39F3   		cmp	rbx, r14	# tmp245, ivtmp.751
 18102 5f00 7417     		je	.L1651	#,
 18103              	# sieve_extend.c:1062:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1062:sieve_extend.c ****             }
 18104              		.loc 1 1062 33 view .LVU6435
 18105 5f02 31D2     		xor	edx, edx	# tmp247
 18106 5f04 4C89E0   		mov	rax, r12	# tmp248, ivtmp.749
 18107 5f07 48F7F6   		div	rsi	# ivtmp.741
 18108              	# sieve_extend.c:1062:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1062:sieve_extend.c ****             }
 18109              		.loc 1 1062 20 view .LVU6436
 18110 5f0a 4885D2   		test	rdx, rdx	# tmp247
 18111 5f0d 410F94C3 		sete	r11b	#, tmp249
 18112              	# sieve_extend.c:1062:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1062:sieve_extend.c ****             }
 18113              		.loc 1 1062 82 view .LVU6437
 18114 5f11 4180FB01 		cmp	r11b, 1	# tmp249,
 18115 5f15 4883DDFF 		sbb	rbp, -1	# c_prime,
 18116              	.LVL1071:
 18117              	.L1651:
1061:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18118              		.loc 1 1061 68 is_stmt 1 view .LVU6438
 18119              	# sieve_extend.c:1061:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1061:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18120              		.loc 1 1061 69 is_stmt 0 view .LVU6439
 18121 5f19 4883C101 		add	rcx, 1	# c,
 18122              	.LVL1072:
1061:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18123              		.loc 1 1061 32 is_stmt 1 view .LVU6440
GAS LISTING /tmp/cc64mrzX.s 			page 483


 18124 5f1d 4883C602 		add	rsi, 2	# ivtmp.741,
 18125              	# sieve_extend.c:1061:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1061:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18126              		.loc 1 1061 51 is_stmt 0 view .LVU6441
 18127 5f21 4989CA   		mov	r10, rcx	# tmp250, c
 18128 5f24 4C0FAFD1 		imul	r10, rcx	# tmp250, c
 18129              	# sieve_extend.c:1061:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1061:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18130              		.loc 1 1061 47 view .LVU6442
 18131 5f28 4D39E2   		cmp	r10, r12	# tmp250, ivtmp.749
 18132 5f2b 0F871F01 		ja	.L1603	#,
 18132      0000
 18133              	.L1680:
1062:sieve_extend.c ****             }
 18134              		.loc 1 1062 17 is_stmt 1 view .LVU6443
 18135              	# sieve_extend.c:1062:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1062:sieve_extend.c ****             }
 18136              		.loc 1 1062 48 is_stmt 0 view .LVU6444
 18137 5f31 4C8D0C09 		lea	r9, [rcx+rcx]	# tmp251,
 18138 5f35 4D39F1   		cmp	r9, r14	# tmp251, ivtmp.751
 18139 5f38 7415     		je	.L1654	#,
 18140              	# sieve_extend.c:1062:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1062:sieve_extend.c ****             }
 18141              		.loc 1 1062 33 view .LVU6445
 18142 5f3a 31D2     		xor	edx, edx	# tmp253
 18143 5f3c 4C89E0   		mov	rax, r12	# tmp254, ivtmp.749
 18144 5f3f 48F7F6   		div	rsi	# ivtmp.741
 18145              	# sieve_extend.c:1062:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1062:sieve_extend.c ****             }
 18146              		.loc 1 1062 20 view .LVU6446
 18147 5f42 4885D2   		test	rdx, rdx	# tmp253
 18148 5f45 0F94C3   		sete	bl	#, tmp255
 18149              	# sieve_extend.c:1062:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1062:sieve_extend.c ****             }
 18150              		.loc 1 1062 82 view .LVU6447
 18151 5f48 80FB01   		cmp	bl, 1	# tmp255,
 18152 5f4b 4883DDFF 		sbb	rbp, -1	# c_prime,
 18153              	.LVL1073:
 18154              	.L1654:
1061:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18155              		.loc 1 1061 68 is_stmt 1 view .LVU6448
 18156              	# sieve_extend.c:1061:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1061:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18157              		.loc 1 1061 69 is_stmt 0 view .LVU6449
 18158 5f4f 4883C101 		add	rcx, 1	# c,
 18159              	.LVL1074:
1061:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18160              		.loc 1 1061 32 is_stmt 1 view .LVU6450
 18161 5f53 4883C602 		add	rsi, 2	# ivtmp.741,
 18162              	# sieve_extend.c:1061:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1061:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18163              		.loc 1 1061 51 is_stmt 0 view .LVU6451
 18164 5f57 4989CB   		mov	r11, rcx	# tmp256, c
 18165 5f5a 4C0FAFD9 		imul	r11, rcx	# tmp256, c
 18166              	# sieve_extend.c:1061:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1061:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18167              		.loc 1 1061 47 view .LVU6452
GAS LISTING /tmp/cc64mrzX.s 			page 484


 18168 5f5e 4D39E3   		cmp	r11, r12	# tmp256, ivtmp.749
 18169 5f61 0F87E900 		ja	.L1603	#,
 18169      0000
 18170              	.LVL1075:
 18171 5f67 660F1F84 		.p2align 4
 18171      00000000 
 18171      00
 18172              		.p2align 3
 18173              	.L1597:
1062:sieve_extend.c ****             }
 18174              		.loc 1 1062 17 is_stmt 1 view .LVU6453
 18175              	# sieve_extend.c:1062:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1062:sieve_extend.c ****             }
 18176              		.loc 1 1062 48 is_stmt 0 view .LVU6454
 18177 5f70 4C8D1409 		lea	r10, [rcx+rcx]	# tmp210,
 18178 5f74 4D39F2   		cmp	r10, r14	# tmp210, ivtmp.751
 18179 5f77 7417     		je	.L1602	#,
 18180              	# sieve_extend.c:1062:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1062:sieve_extend.c ****             }
 18181              		.loc 1 1062 33 view .LVU6455
 18182 5f79 31D2     		xor	edx, edx	# tmp214
 18183 5f7b 4C89E0   		mov	rax, r12	# tmp215, ivtmp.749
 18184 5f7e 48F7F6   		div	rsi	# ivtmp.741
 18185              	# sieve_extend.c:1062:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1062:sieve_extend.c ****             }
 18186              		.loc 1 1062 20 view .LVU6456
 18187 5f81 4885D2   		test	rdx, rdx	# tmp214
 18188 5f84 410F94C1 		sete	r9b	#, tmp217
 18189              	# sieve_extend.c:1062:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1062:sieve_extend.c ****             }
 18190              		.loc 1 1062 82 view .LVU6457
 18191 5f88 4180F901 		cmp	r9b, 1	# tmp217,
 18192 5f8c 4883DDFF 		sbb	rbp, -1	# c_prime,
 18193              	.LVL1076:
 18194              	.L1602:
1061:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18195              		.loc 1 1061 68 is_stmt 1 view .LVU6458
 18196              	# sieve_extend.c:1061:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1061:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18197              		.loc 1 1061 69 is_stmt 0 view .LVU6459
 18198 5f90 4883C101 		add	rcx, 1	# tmp234,
 18199              	.LVL1077:
1061:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18200              		.loc 1 1061 32 is_stmt 1 view .LVU6460
 18201              	# sieve_extend.c:1061:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1061:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18202              		.loc 1 1061 13 is_stmt 0 view .LVU6461
 18203 5f94 4839F9   		cmp	rcx, rdi	# tmp234, _137
 18204 5f97 0F87B300 		ja	.L1603	#,
 18204      0000
 18205              	# sieve_extend.c:1061:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1061:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18206              		.loc 1 1061 51 view .LVU6462
 18207 5f9d 4889CB   		mov	rbx, rcx	# tmp218, tmp234
 18208 5fa0 4883C602 		add	rsi, 2	# tmp233,
 18209 5fa4 480FAFD9 		imul	rbx, rcx	# tmp218, tmp234
 18210              	# sieve_extend.c:1061:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
GAS LISTING /tmp/cc64mrzX.s 			page 485


1061:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18211              		.loc 1 1061 47 view .LVU6463
 18212 5fa8 4C39E3   		cmp	rbx, r12	# tmp218, ivtmp.749
 18213 5fab 0F879F00 		ja	.L1603	#,
 18213      0000
1062:sieve_extend.c ****             }
 18214              		.loc 1 1062 17 is_stmt 1 view .LVU6464
 18215              	# sieve_extend.c:1062:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1062:sieve_extend.c ****             }
 18216              		.loc 1 1062 48 is_stmt 0 view .LVU6465
 18217 5fb1 4C8D1C09 		lea	r11, [rcx+rcx]	# tmp257,
 18218 5fb5 4D39F3   		cmp	r11, r14	# tmp257, ivtmp.751
 18219 5fb8 7417     		je	.L1658	#,
 18220              	# sieve_extend.c:1062:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1062:sieve_extend.c ****             }
 18221              		.loc 1 1062 33 view .LVU6466
 18222 5fba 31D2     		xor	edx, edx	# tmp259
 18223 5fbc 4C89E0   		mov	rax, r12	# tmp260, ivtmp.749
 18224 5fbf 48F7F6   		div	rsi	# tmp233
 18225              	# sieve_extend.c:1062:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1062:sieve_extend.c ****             }
 18226              		.loc 1 1062 20 view .LVU6467
 18227 5fc2 4885D2   		test	rdx, rdx	# tmp259
 18228 5fc5 410F94C2 		sete	r10b	#, tmp261
 18229              	# sieve_extend.c:1062:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1062:sieve_extend.c ****             }
 18230              		.loc 1 1062 82 view .LVU6468
 18231 5fc9 4180FA01 		cmp	r10b, 1	# tmp261,
 18232 5fcd 4883DDFF 		sbb	rbp, -1	# c_prime,
 18233              	.LVL1078:
 18234              	.L1658:
1061:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18235              		.loc 1 1061 68 is_stmt 1 view .LVU6469
 18236              	# sieve_extend.c:1061:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1061:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18237              		.loc 1 1061 69 is_stmt 0 view .LVU6470
 18238 5fd1 4C8D4901 		lea	r9, 1[rcx]	# c,
1061:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18239              		.loc 1 1061 32 is_stmt 1 view .LVU6471
 18240 5fd5 488D5E02 		lea	rbx, 2[rsi]	# ivtmp.741,
 18241              	# sieve_extend.c:1061:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1061:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18242              		.loc 1 1061 51 is_stmt 0 view .LVU6472
 18243 5fd9 4D89CB   		mov	r11, r9	# tmp264, c
 18244 5fdc 4D0FAFD9 		imul	r11, r9	# tmp264, c
 18245              	# sieve_extend.c:1061:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1061:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18246              		.loc 1 1061 47 view .LVU6473
 18247 5fe0 4D39E3   		cmp	r11, r12	# tmp264, ivtmp.749
 18248 5fe3 776B     		ja	.L1603	#,
1062:sieve_extend.c ****             }
 18249              		.loc 1 1062 17 is_stmt 1 view .LVU6474
 18250              	# sieve_extend.c:1062:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1062:sieve_extend.c ****             }
 18251              		.loc 1 1062 48 is_stmt 0 view .LVU6475
 18252 5fe5 4D01C9   		add	r9, r9	# tmp265
 18253 5fe8 4D39F1   		cmp	r9, r14	# tmp265, ivtmp.751
GAS LISTING /tmp/cc64mrzX.s 			page 486


 18254 5feb 7417     		je	.L1660	#,
 18255              	# sieve_extend.c:1062:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1062:sieve_extend.c ****             }
 18256              		.loc 1 1062 33 view .LVU6476
 18257 5fed 31D2     		xor	edx, edx	# tmp267
 18258 5fef 4C89E0   		mov	rax, r12	# tmp268, ivtmp.749
 18259 5ff2 48F7F3   		div	rbx	# ivtmp.741
 18260              	# sieve_extend.c:1062:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1062:sieve_extend.c ****             }
 18261              		.loc 1 1062 20 view .LVU6477
 18262 5ff5 4885D2   		test	rdx, rdx	# tmp267
 18263 5ff8 410F94C2 		sete	r10b	#, tmp269
 18264              	# sieve_extend.c:1062:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1062:sieve_extend.c ****             }
 18265              		.loc 1 1062 82 view .LVU6478
 18266 5ffc 4180FA01 		cmp	r10b, 1	# tmp269,
 18267 6000 4883DDFF 		sbb	rbp, -1	# c_prime,
 18268              	.LVL1079:
 18269              	.L1660:
1061:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18270              		.loc 1 1061 68 is_stmt 1 view .LVU6479
 18271              	# sieve_extend.c:1061:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1061:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18272              		.loc 1 1061 69 is_stmt 0 view .LVU6480
 18273 6004 4C8D4902 		lea	r9, 2[rcx]	# c,
1061:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18274              		.loc 1 1061 32 is_stmt 1 view .LVU6481
 18275 6008 488D5E04 		lea	rbx, 4[rsi]	# ivtmp.741,
 18276              	# sieve_extend.c:1061:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1061:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18277              		.loc 1 1061 51 is_stmt 0 view .LVU6482
 18278 600c 4D89CB   		mov	r11, r9	# tmp272, c
 18279 600f 4D0FAFD9 		imul	r11, r9	# tmp272, c
 18280              	# sieve_extend.c:1061:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1061:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18281              		.loc 1 1061 47 view .LVU6483
 18282 6013 4D39E3   		cmp	r11, r12	# tmp272, ivtmp.749
 18283 6016 7738     		ja	.L1603	#,
1062:sieve_extend.c ****             }
 18284              		.loc 1 1062 17 is_stmt 1 view .LVU6484
 18285              	# sieve_extend.c:1062:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1062:sieve_extend.c ****             }
 18286              		.loc 1 1062 48 is_stmt 0 view .LVU6485
 18287 6018 4D01C9   		add	r9, r9	# tmp273
 18288 601b 4D39F1   		cmp	r9, r14	# tmp273, ivtmp.751
 18289 601e 7417     		je	.L1662	#,
 18290              	# sieve_extend.c:1062:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1062:sieve_extend.c ****             }
 18291              		.loc 1 1062 33 view .LVU6486
 18292 6020 31D2     		xor	edx, edx	# tmp275
 18293 6022 4C89E0   		mov	rax, r12	# tmp276, ivtmp.749
 18294 6025 48F7F3   		div	rbx	# ivtmp.741
 18295              	# sieve_extend.c:1062:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1062:sieve_extend.c ****             }
 18296              		.loc 1 1062 20 view .LVU6487
 18297 6028 4885D2   		test	rdx, rdx	# tmp275
 18298 602b 410F94C2 		sete	r10b	#, tmp277
GAS LISTING /tmp/cc64mrzX.s 			page 487


 18299              	# sieve_extend.c:1062:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1062:sieve_extend.c ****             }
 18300              		.loc 1 1062 82 view .LVU6488
 18301 602f 4180FA01 		cmp	r10b, 1	# tmp277,
 18302 6033 4883DDFF 		sbb	rbp, -1	# c_prime,
 18303              	.LVL1080:
 18304              	.L1662:
1061:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18305              		.loc 1 1061 68 is_stmt 1 view .LVU6489
 18306              	# sieve_extend.c:1061:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1061:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18307              		.loc 1 1061 69 is_stmt 0 view .LVU6490
 18308 6037 4883C103 		add	rcx, 3	# c,
 18309              	.LVL1081:
1061:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18310              		.loc 1 1061 32 is_stmt 1 view .LVU6491
 18311 603b 4883C606 		add	rsi, 6	# ivtmp.741,
 18312              	# sieve_extend.c:1061:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1061:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18313              		.loc 1 1061 51 is_stmt 0 view .LVU6492
 18314 603f 4989C9   		mov	r9, rcx	# tmp278, c
 18315 6042 4C0FAFC9 		imul	r9, rcx	# tmp278, c
 18316              	# sieve_extend.c:1061:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1061:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18317              		.loc 1 1061 47 view .LVU6493
 18318 6046 4D39E1   		cmp	r9, r12	# tmp278, ivtmp.749
 18319 6049 0F8621FF 		jbe	.L1597	#,
 18319      FFFF
 18320              	.LVL1082:
 18321 604f 90       		.p2align 4
 18322              		.p2align 3
 18323              	.L1603:
1061:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18324              		.loc 1 1061 47 view .LVU6494
 18325              	.LBE849:
1064:sieve_extend.c ****         }
 18326              		.loc 1 1064 13 is_stmt 1 view .LVU6495
 18327              	# sieve_extend.c:1064:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1064:sieve_extend.c ****         }
 18328              		.loc 1 1064 16 is_stmt 0 view .LVU6496
 18329 6050 4885ED   		test	rbp, rbp	# c_prime
 18330 6053 0F840D02 		je	.L1721	#,
 18330      0000
 18331              	.LVL1083:
 18332              	.L1600:
1064:sieve_extend.c ****         }
 18333              		.loc 1 1064 16 view .LVU6497
 18334              	.LBE847:
1051:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 18335              		.loc 1 1051 52 is_stmt 1 view .LVU6498
 18336              	# sieve_extend.c:1051:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
1051:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 18337              		.loc 1 1051 57 is_stmt 0 view .LVU6499
 18338 6059 4983C701 		add	r15, 1	# prime,
 18339              	.LVL1084:
1051:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 18340              		.loc 1 1051 31 is_stmt 1 view .LVU6500
GAS LISTING /tmp/cc64mrzX.s 			page 488


 18341 605d 4983C402 		add	r12, 2	# ivtmp.749,
 18342 6061 4983C602 		add	r14, 2	# ivtmp.751,
 18343              	# sieve_extend.c:1051:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
1051:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 18344              		.loc 1 1051 5 is_stmt 0 view .LVU6501
 18345 6065 4939FF   		cmp	r15, rdi	# prime, _137
 18346 6068 0F8202FE 		jb	.L1604	#,
 18346      FFFF
 18347              	.LVL1085:
 18348              	.L1710:
1051:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 18349              		.loc 1 1051 5 view .LVU6502
 18350 606e 448B6C24 		mov	r13d, DWORD PTR 36[rsp]	# <retval>, %sfp
 18350      24
 18351              	.LVL1086:
 18352              	.L1574:
1051:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 18353              		.loc 1 1051 5 view .LVU6503
 18354              	.LBE858:
 18355              	.LBE833:
 18356              	.LBE832:
 18357              	# sieve_extend.c:1095: }
1095:sieve_extend.c **** 
 18358              		.loc 1 1095 1 view .LVU6504
 18359 6073 488D6424 		lea	rsp, 56[rsp]	#,
 18359      38
 18360              		.cfi_remember_state
 18361              		.cfi_def_cfa_offset 56
 18362 6078 4489E8   		mov	eax, r13d	#, <retval>
 18363 607b 5B       		pop	rbx	#
 18364              		.cfi_def_cfa_offset 48
 18365 607c 5D       		pop	rbp	#
 18366              		.cfi_def_cfa_offset 40
 18367 607d 415C     		pop	r12	#
 18368              		.cfi_def_cfa_offset 32
 18369 607f 415D     		pop	r13	#
 18370              		.cfi_def_cfa_offset 24
 18371 6081 415E     		pop	r14	#
 18372              		.cfi_def_cfa_offset 16
 18373 6083 415F     		pop	r15	#
 18374              		.cfi_def_cfa_offset 8
 18375 6085 C3       		ret	
 18376              	.LVL1087:
 18377              	.L1719:
 18378              		.cfi_restore_state
 18379              	# sieve_extend.c:1074:     switch(sieve->size) {
1074:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 18380              		.loc 1 1074 5 view .LVU6505
 18381 6086 4981F9E8 		cmp	r9, 1000	# pretmp_199,
 18381      030000
 18382 608d 0F84E602 		je	.L1581	#,
 18382      0000
 18383 6093 7633     		jbe	.L1722	#,
 18384 6095 4981F910 		cmp	r9, 10000	# pretmp_199,
 18384      270000
 18385 609c 0F852303 		jne	.L1585	#,
 18385      0000
GAS LISTING /tmp/cc64mrzX.s 			page 489


 18386 60a2 4981F8CD 		cmp	r8, 1229	# primeCount,
 18386      040000
 18387              	# sieve_extend.c:1078:         case 10000:         valid_primes = 1229;     break;
1078:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 18388              		.loc 1 1078 42 view .LVU6506
 18389 60a9 B9CD0400 		mov	ecx, 1229	# valid_primes,
 18389      00
 18390 60ae 400F94C6 		sete	sil	#, tmp179
 18391 60b2 21F2     		and	edx, esi	# _251, tmp179
 18392 60b4 4981F8CD 		cmp	r8, 1229	# primeCount,
 18392      040000
 18393 60bb 440FB6EE 		movzx	r13d, sil	# <retval>, tmp179
 18394 60bf 410F95C6 		setne	r14b	#, _135
1078:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 18395              		.loc 1 1078 29 is_stmt 1 view .LVU6507
 18396              	.LVL1088:
1078:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 18397              		.loc 1 1078 54 view .LVU6508
 18398              	# sieve_extend.c:1078:         case 10000:         valid_primes = 1229;     break;
1078:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 18399              		.loc 1 1078 9 is_stmt 0 view .LVU6509
 18400 60c3 E938FDFF 		jmp	.L1592	#
 18400      FF
 18401              	.LVL1089:
 18402              	.L1722:
 18403              	# sieve_extend.c:1074:     switch(sieve->size) {
1074:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 18404              		.loc 1 1074 5 view .LVU6510
 18405 60c8 4983F90A 		cmp	r9, 10	# pretmp_199,
 18406 60cc 0F841A02 		je	.L1583	#,
 18406      0000
 18407 60d2 4983F964 		cmp	r9, 100	# pretmp_199,
 18408 60d6 0F85E902 		jne	.L1585	#,
 18408      0000
 18409 60dc 4983F819 		cmp	r8, 25	# primeCount,
 18410 60e0 0F94C1   		sete	cl	#, tmp173
 18411 60e3 21CA     		and	edx, ecx	# _251, tmp173
 18412 60e5 4983F819 		cmp	r8, 25	# primeCount,
 18413 60e9 440FB6E9 		movzx	r13d, cl	# <retval>, tmp173
 18414 60ed 410F95C6 		setne	r14b	#, _135
 18415              	# sieve_extend.c:1076:         case 100:           valid_primes = 25;       break;
1076:sieve_extend.c ****         case 1000:          valid_primes = 168;      break;
 18416              		.loc 1 1076 42 view .LVU6511
 18417 60f1 B9190000 		mov	ecx, 25	# valid_primes,
 18417      00
 18418 60f6 E905FDFF 		jmp	.L1592	#
 18418      FF
 18419 60fb 0F1F4400 		.p2align 4,,7
 18419      00
 18420              		.p2align 3
 18421              	.L1720:
 18422              	# sieve_extend.c:1074:     switch(sieve->size) {
1074:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 18423              		.loc 1 1074 5 view .LVU6512
 18424 6100 4981F940 		cmp	r9, 1000000	# pretmp_199,
 18424      420F00
 18425 6107 0F84B801 		je	.L1589	#,
GAS LISTING /tmp/cc64mrzX.s 			page 490


 18425      0000
 18426 610d 4981F980 		cmp	r9, 10000000	# pretmp_199,
 18426      969800
 18427 6114 0F85AB02 		jne	.L1585	#,
 18427      0000
 18428 611a 4981F803 		cmp	r8, 664579	# primeCount,
 18428      240A00
 18429              	# sieve_extend.c:1081:         case 10000000:      valid_primes = 664579;   break;
1081:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 18430              		.loc 1 1081 42 view .LVU6513
 18431 6121 B903240A 		mov	ecx, 664579	# valid_primes,
 18431      00
 18432 6126 410F94C7 		sete	r15b	#, tmp185
 18433 612a 4421FA   		and	edx, r15d	# _251, tmp185
 18434 612d 4981F803 		cmp	r8, 664579	# primeCount,
 18434      240A00
 18435 6134 450FB6EF 		movzx	r13d, r15b	# <retval>, tmp185
 18436 6138 410F95C6 		setne	r14b	#, _135
1081:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 18437              		.loc 1 1081 29 is_stmt 1 view .LVU6514
 18438              	.LVL1090:
1081:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 18439              		.loc 1 1081 54 view .LVU6515
 18440              	# sieve_extend.c:1081:         case 10000000:      valid_primes = 664579;   break;
1081:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 18441              		.loc 1 1081 9 is_stmt 0 view .LVU6516
 18442 613c E9BFFCFF 		jmp	.L1592	#
 18442      FF
 18443              	.LVL1091:
 18444              		.p2align 4,,7
 18445 6141 0F1F8000 		.p2align 3
 18445      000000
 18446              	.L1596:
 18447              	.LBB863:
 18448              	.LBB861:
 18449              	.LBB859:
 18450              	.LBB856:
1053:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 18451              		.loc 1 1053 32 is_stmt 1 view .LVU6517
 18452              	# sieve_extend.c:1053:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1053:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 18453              		.loc 1 1053 13 is_stmt 0 view .LVU6518
 18454 6148 4885FF   		test	rdi, rdi	# _137
 18455 614b 0F841DFF 		je	.L1710	#,
 18455      FFFF
 18456              	# sieve_extend.c:1053:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1053:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 18457              		.loc 1 1053 27 view .LVU6519
 18458 6151 BB010000 		mov	ebx, 1	# c,
 18458      00
 18459 6156 EB20     		jmp	.L1601	#
 18460              	.LVL1092:
 18461              		.p2align 4,,7
 18462              		.p2align 3
 18463              	.L1610:
 18464              	# sieve_extend.c:1055:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was mark
1055:sieve_extend.c ****                 }
GAS LISTING /tmp/cc64mrzX.s 			page 491


 18465              		.loc 1 1055 35 view .LVU6520
 18466 6158 4989E8   		mov	r8, rbp	# warn_prime, warn_prime
 18467              	.LVL1093:
 18468              	.L1599:
1053:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 18469              		.loc 1 1053 68 is_stmt 1 view .LVU6521
 18470              	# sieve_extend.c:1053:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1053:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 18471              		.loc 1 1053 69 is_stmt 0 view .LVU6522
 18472 615b 4883C301 		add	rbx, 1	# c,
 18473              	.LVL1094:
1053:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 18474              		.loc 1 1053 32 is_stmt 1 view .LVU6523
 18475              	# sieve_extend.c:1053:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1053:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 18476              		.loc 1 1053 13 is_stmt 0 view .LVU6524
 18477 615f 4839FB   		cmp	rbx, rdi	# c, _137
 18478 6162 0F87F1FE 		ja	.L1600	#,
 18478      FFFF
 18479              	# sieve_extend.c:1053:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1053:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 18480              		.loc 1 1053 51 view .LVU6525
 18481 6168 4989DB   		mov	r11, rbx	# tmp209, c
 18482 616b 4C0FAFDB 		imul	r11, rbx	# tmp209, c
 18483              	# sieve_extend.c:1053:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1053:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 18484              		.loc 1 1053 47 view .LVU6526
 18485 616f 4D39E3   		cmp	r11, r12	# tmp209, ivtmp.749
 18486 6172 0F87E1FE 		ja	.L1600	#,
 18486      FFFF
 18487              	.LVL1095:
 18488              	.L1601:
1054:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 18489              		.loc 1 1054 17 is_stmt 1 view .LVU6527
 18490 6178 488D2C1B 		lea	rbp, [rbx+rbx]	# _216,
 18491 617c 31D2     		xor	edx, edx	# tmp204
 18492 617e 4C89E0   		mov	rax, r12	# tmp203, ivtmp.749
 18493              	# sieve_extend.c:1054:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
1054:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 18494              		.loc 1 1054 39 is_stmt 0 view .LVU6528
 18495 6181 488D7501 		lea	rsi, 1[rbp]	# _55,
 18496 6185 48F7F6   		div	rsi	# _55
 18497              	# sieve_extend.c:1054:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
1054:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 18498              		.loc 1 1054 48 view .LVU6529
 18499 6188 4885D2   		test	rdx, rdx	# tmp204
 18500 618b 75CE     		jne	.L1599	#,
1054:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 18501              		.loc 1 1054 48 view .LVU6530
 18502 618d 4939EE   		cmp	r14, rbp	# ivtmp.751, _216
 18503 6190 74C9     		je	.L1599	#,
1055:sieve_extend.c ****                 }
 18504              		.loc 1 1055 21 is_stmt 1 view .LVU6531
 18505              	# sieve_extend.c:1055:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was mark
1055:sieve_extend.c ****                 }
 18506              		.loc 1 1055 24 is_stmt 0 view .LVU6532
 18507 6192 4983F81D 		cmp	r8, 29	# warn_prime,
GAS LISTING /tmp/cc64mrzX.s 			page 492


 18508              	# sieve_extend.c:1055:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was mark
1055:sieve_extend.c ****                 }
 18509              		.loc 1 1055 35 view .LVU6533
 18510 6196 498D6801 		lea	rbp, 1[r8]	# warn_prime,
 18511              	.LVL1096:
 18512              	# sieve_extend.c:1055:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was mark
1055:sieve_extend.c ****                 }
 18513              		.loc 1 1055 24 view .LVU6534
 18514 619a 77BC     		ja	.L1610	#,
1055:sieve_extend.c ****                 }
 18515              		.loc 1 1055 44 is_stmt 1 view .LVU6535
 18516              	.LVL1097:
 18517              	.LBB844:
 18518              	.LBI838:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18519              		.loc 3 105 1 view .LVU6536
 18520              	.LBB841:
 18521              		.loc 3 107 3 view .LVU6537
 18522              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18523              		.loc 3 107 10 is_stmt 0 view .LVU6538
 18524 619c 4989F0   		mov	r8, rsi	#, _55
 18525 619f 4989C1   		mov	r9, rax	#, tmp203
 18526 61a2 BF010000 		mov	edi, 1	#,
 18526      00
 18527 61a7 4C89F9   		mov	rcx, r15	#, prime
 18528 61aa 4C892424 		mov	QWORD PTR [rsp], r12	#, ivtmp.749
 18529 61ae 4C89E2   		mov	rdx, r12	#, ivtmp.749
 18530 61b1 488D3500 		lea	rsi, .LC12[rip]	#,
 18530      000000
 18531 61b8 31C0     		xor	eax, eax	#
 18532 61ba E8000000 		call	__printf_chk@PLT	#
 18532      00
 18533              	.LVL1098:
 18534 61bf 498B7D08 		mov	rdi, QWORD PTR 8[r13]	# _137, MEM[(uint64_t *)sieve_18(D) + 8B]
 18535              	.LBE841:
 18536              	.LBE844:
 18537              	# sieve_extend.c:1055:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was mark
1055:sieve_extend.c ****                 }
 18538              		.loc 1 1055 35 view .LVU6539
 18539 61c3 4989E8   		mov	r8, rbp	# warn_prime, warn_prime
 18540              	.LBB845:
 18541              	.LBB842:
 18542              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18543              		.loc 3 107 10 view .LVU6540
 18544 61c6 EB93     		jmp	.L1599	#
 18545              	.LVL1099:
 18546              	.L1575:
 18547              		.loc 3 107 10 view .LVU6541
 18548              	.LBE842:
 18549              	.LBE845:
 18550              	.LBE856:
 18551              	.LBE859:
 18552              	.LBE861:
 18553              	.LBE863:
 18554              	.LBB864:
 18555              	.LBB829:
1044:sieve_extend.c **** }
GAS LISTING /tmp/cc64mrzX.s 			page 493


 18556              		.loc 1 1044 5 is_stmt 1 view .LVU6542
1044:sieve_extend.c **** }
 18557              		.loc 1 1044 5 is_stmt 0 view .LVU6543
 18558              	.LBE829:
 18559              	.LBE864:
1073:sieve_extend.c ****     switch(sieve->size) {
 18560              		.loc 1 1073 5 is_stmt 1 view .LVU6544
1074:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 18561              		.loc 1 1074 5 view .LVU6545
 18562 61c8 4531ED   		xor	r13d, r13d	# <retval>
 18563 61cb 4981F9A0 		cmp	r9, 100000	# pretmp_199,
 18563      860100
 18564 61d2 41BE0100 		mov	r14d, 1	# _135,
 18564      0000
 18565 61d8 41B80100 		mov	r8d, 1	# primeCount,
 18565      0000
 18566 61de 0F842302 		je	.L1613	#,
 18566      0000
 18567 61e4 0F872301 		ja	.L1605	#,
 18567      0000
 18568 61ea 4983F964 		cmp	r9, 100	# pretmp_199,
 18569 61ee B9190000 		mov	ecx, 25	# valid_primes,
 18569      00
 18570 61f3 742A     		je	.L1593	#,
 18571              		.p2align 4,,2
 18572 61f5 0F864001 		jbe	.L1723	#,
 18572      0000
 18573 61fb 4981F9E8 		cmp	r9, 1000	# pretmp_199,
 18573      030000
 18574              	# sieve_extend.c:1077:         case 1000:          valid_primes = 168;      break;
1077:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 18575              		.loc 1 1077 42 is_stmt 0 view .LVU6546
 18576 6202 B9A80000 		mov	ecx, 168	# valid_primes,
 18576      00
 18577              	# sieve_extend.c:1074:     switch(sieve->size) {
1074:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 18578              		.loc 1 1074 5 view .LVU6547
 18579 6207 7416     		je	.L1593	#,
 18580 6209 4981F910 		cmp	r9, 10000	# pretmp_199,
 18580      270000
 18581 6210 B9CD0400 		mov	ecx, 1229	# tmp223,
 18581      00
 18582 6215 41BA0000 		mov	r10d, 0	# tmp224,
 18582      0000
 18583 621b 490F45CA 		cmovne	rcx, r10	# tmp223,, valid_primes, tmp224
 18584              	.LVL1100:
 18585              	.L1593:
1089:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 18586              		.loc 1 1089 5 is_stmt 1 view .LVU6548
 18587              	# sieve_extend.c:1089:     if (!valid && option_verboselevel >= 1) {
1089:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 18588              		.loc 1 1089 39 is_stmt 0 view .LVU6549
 18589 621f 85DB     		test	ebx, ebx	# option_verboselevel
 18590 6221 410F9FC4 		setg	r12b	#, tmp194
 18591              	# sieve_extend.c:1089:     if (!valid && option_verboselevel >= 1) {
1089:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 18592              		.loc 1 1089 8 view .LVU6550
GAS LISTING /tmp/cc64mrzX.s 			page 494


 18593 6225 4520F4   		and	r12b, r14b	# _7, _135
 18594 6228 0F84F0FB 		je	.L1594	#,
 18594      FFFF
1090:sieve_extend.c ****         if (!valid && option_verboselevel >= 2) show_primes(sieve, default_show_primes_on_error);
 18595              		.loc 1 1090 9 is_stmt 1 view .LVU6551
 18596              	.LVL1101:
 18597              	.LBB865:
 18598              	.LBI865:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18599              		.loc 3 105 1 view .LVU6552
 18600              	.LBB866:
 18601              		.loc 3 107 3 view .LVU6553
 18602              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18603              		.loc 3 107 10 is_stmt 0 view .LVU6554
 18604 622e 31C0     		xor	eax, eax	#
 18605 6230 4C89CA   		mov	rdx, r9	#, pretmp_199
 18606 6233 488D3500 		lea	rsi, .LC10[rip]	#,
 18606      000000
 18607 623a BF010000 		mov	edi, 1	#,
 18607      00
 18608 623f E8000000 		call	__printf_chk@PLT	#
 18608      00
 18609              	.LVL1102:
 18610              		.loc 3 107 10 view .LVU6555
 18611              	.LBE866:
 18612              	.LBE865:
1091:sieve_extend.c ****     }
 18613              		.loc 1 1091 9 is_stmt 1 view .LVU6556
 18614              	# sieve_extend.c:1091:         if (!valid && option_verboselevel >= 2) show_primes(sieve, default_s
1091:sieve_extend.c ****     }
 18615              		.loc 1 1091 12 is_stmt 0 view .LVU6557
 18616 6244 83FB01   		cmp	ebx, 1	# option_verboselevel,
 18617 6247 0F8426FE 		je	.L1574	#,
 18617      FFFF
1091:sieve_extend.c ****     }
 18618              		.loc 1 1091 49 is_stmt 1 discriminator 1 view .LVU6558
 18619 624d 488D7508 		lea	rsi, 8[rbp]	# tmp195,
 18620 6251 BA640000 		mov	edx, 100	#,
 18620      00
 18621 6256 4889EF   		mov	rdi, rbp	#, sieve
 18622              	# sieve_extend.c:1089:     if (!valid && option_verboselevel >= 1) {
1089:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 18623              		.loc 1 1089 9 is_stmt 0 discriminator 1 view .LVU6559
 18624 6259 4589E6   		mov	r14d, r12d	# _135, _7
 18625              	# sieve_extend.c:1091:         if (!valid && option_verboselevel >= 2) show_primes(sieve, default_s
1091:sieve_extend.c ****     }
 18626              		.loc 1 1091 49 discriminator 1 view .LVU6560
 18627 625c E8CFD6FF 		call	show_primes.isra.0	#
 18627      FF
 18628              	.LVL1103:
 18629 6261 E9B8FBFF 		jmp	.L1594	#
 18629      FF
 18630              	.LVL1104:
 18631              	.L1721:
 18632              	.LBB867:
 18633              	.LBB862:
 18634              	.LBB860:
GAS LISTING /tmp/cc64mrzX.s 			page 495


 18635              	.LBB857:
 18636              	# sieve_extend.c:1064:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1064:sieve_extend.c ****         }
 18637              		.loc 1 1064 44 view .LVU6561
 18638 6266 488B4C24 		mov	rcx, QWORD PTR 24[rsp]	# warn_nonprime, %sfp
 18638      18
 18639              	# sieve_extend.c:1064:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1064:sieve_extend.c ****         }
 18640              		.loc 1 1064 28 view .LVU6562
 18641 626b 4883F91D 		cmp	rcx, 29	# warn_nonprime,
 18642              	# sieve_extend.c:1064:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1064:sieve_extend.c ****         }
 18643              		.loc 1 1064 44 view .LVU6563
 18644 626f 488D5901 		lea	rbx, 1[rcx]	# warn_nonprime,
 18645              	.LVL1105:
 18646              	# sieve_extend.c:1064:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1064:sieve_extend.c ****         }
 18647              		.loc 1 1064 28 view .LVU6564
 18648 6273 761D     		jbe	.L1608	#,
 18649              	# sieve_extend.c:1064:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1064:sieve_extend.c ****         }
 18650              		.loc 1 1064 44 view .LVU6565
 18651 6275 48895C24 		mov	QWORD PTR 24[rsp], rbx	# %sfp, warn_nonprime
 18651      18
 18652 627a E9DAFDFF 		jmp	.L1600	#
 18652      FF
 18653              	.LVL1106:
 18654              	.L1708:
1064:sieve_extend.c ****         }
 18655              		.loc 1 1064 44 view .LVU6566
 18656 627f 488B5424 		mov	rdx, QWORD PTR 24[rsp]	# warn_nonprime, %sfp
 18656      18
 18657              	# sieve_extend.c:1064:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1064:sieve_extend.c ****         }
 18658              		.loc 1 1064 28 view .LVU6567
 18659 6284 4883FA1D 		cmp	rdx, 29	# warn_nonprime,
 18660              	# sieve_extend.c:1064:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1064:sieve_extend.c ****         }
 18661              		.loc 1 1064 44 view .LVU6568
 18662 6288 488D5A01 		lea	rbx, 1[rdx]	# warn_nonprime,
 18663              	.LVL1107:
 18664              	# sieve_extend.c:1064:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1064:sieve_extend.c ****         }
 18665              		.loc 1 1064 28 view .LVU6569
 18666 628c 0F87DCFD 		ja	.L1710	#,
 18666      FFFF
 18667              	.LVL1108:
 18668              	.L1608:
 18669              	.LBB850:
 18670              	.LBB851:
 18671              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18672              		.loc 3 107 10 view .LVU6570
 18673 6292 BF010000 		mov	edi, 1	#,
 18673      00
 18674              	.LBE851:
 18675              	.LBE850:
 18676              	# sieve_extend.c:1064:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
GAS LISTING /tmp/cc64mrzX.s 			page 496


1064:sieve_extend.c ****         }
 18677              		.loc 1 1064 53 view .LVU6571
 18678 6297 4B8D543F 		lea	rdx, 1[r15+r15]	# tmp220,
 18678      01
 18679              	.LBB854:
 18680              	.LBB852:
 18681              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18682              		.loc 3 107 10 view .LVU6572
 18683 629c 4C89F9   		mov	rcx, r15	#, prime
 18684 629f 488D3500 		lea	rsi, .LC13[rip]	#,
 18684      000000
 18685 62a6 4C894424 		mov	QWORD PTR 40[rsp], r8	# %sfp, warn_prime
 18685      28
 18686              	.LBE852:
 18687              	.LBE854:
1064:sieve_extend.c ****         }
 18688              		.loc 1 1064 53 is_stmt 1 view .LVU6573
 18689              	.LVL1109:
 18690              	.LBB855:
 18691              	.LBI850:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18692              		.loc 3 105 1 view .LVU6574
 18693              	.LBB853:
 18694              		.loc 3 107 3 view .LVU6575
 18695              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18696              		.loc 3 107 10 is_stmt 0 view .LVU6576
 18697 62ab 31C0     		xor	eax, eax	#
 18698 62ad E8000000 		call	__printf_chk@PLT	#
 18698      00
 18699              	.LVL1110:
 18700              		.loc 3 107 10 view .LVU6577
 18701 62b2 498B7D08 		mov	rdi, QWORD PTR 8[r13]	# _137, MEM[(uint64_t *)sieve_18(D) + 8B]
 18702 62b6 4C8B4424 		mov	r8, QWORD PTR 40[rsp]	# warn_prime, %sfp
 18702      28
 18703 62bb 48895C24 		mov	QWORD PTR 24[rsp], rbx	# %sfp, warn_nonprime
 18703      18
 18704 62c0 E994FDFF 		jmp	.L1600	#
 18704      FF
 18705              	.LVL1111:
 18706              	.L1589:
 18707              		.loc 3 107 10 view .LVU6578
 18708 62c5 4981F8A2 		cmp	r8, 78498	# primeCount,
 18708      320100
 18709              	.LBE853:
 18710              	.LBE855:
 18711              	.LBE857:
 18712              	.LBE860:
 18713              	.LBE862:
 18714              	.LBE867:
 18715              	# sieve_extend.c:1080:         case 1000000:       valid_primes = 78498;    break;
1080:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 18716              		.loc 1 1080 42 view .LVU6579
 18717 62cc B9A23201 		mov	ecx, 78498	# valid_primes,
 18717      00
 18718 62d1 410F94C5 		sete	r13b	#, tmp183
 18719 62d5 4421EA   		and	edx, r13d	# _251, tmp183
 18720 62d8 4981F8A2 		cmp	r8, 78498	# primeCount,
GAS LISTING /tmp/cc64mrzX.s 			page 497


 18720      320100
 18721 62df 450FB6ED 		movzx	r13d, r13b	# <retval>, tmp183
 18722 62e3 410F95C6 		setne	r14b	#, _135
1080:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 18723              		.loc 1 1080 29 is_stmt 1 view .LVU6580
 18724              	.LVL1112:
1080:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 18725              		.loc 1 1080 54 view .LVU6581
 18726              	# sieve_extend.c:1080:         case 1000000:       valid_primes = 78498;    break;
1080:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 18727              		.loc 1 1080 9 is_stmt 0 view .LVU6582
 18728 62e7 E914FBFF 		jmp	.L1592	#
 18728      FF
 18729              	.LVL1113:
 18730              	.L1583:
1080:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 18731              		.loc 1 1080 9 view .LVU6583
 18732 62ec 4983F804 		cmp	r8, 4	# primeCount,
 18733              	# sieve_extend.c:1075:         case 10:            valid_primes = 4;        break;
1075:sieve_extend.c ****         case 100:           valid_primes = 25;       break;
 18734              		.loc 1 1075 42 view .LVU6584
 18735 62f0 B9040000 		mov	ecx, 4	# valid_primes,
 18735      00
 18736 62f5 410F94C2 		sete	r10b	#, tmp175
 18737 62f9 4421D2   		and	edx, r10d	# _251, tmp175
 18738 62fc 4983F804 		cmp	r8, 4	# primeCount,
 18739 6300 450FB6EA 		movzx	r13d, r10b	# <retval>, tmp175
 18740 6304 410F95C6 		setne	r14b	#, _135
 18741 6308 E9F3FAFF 		jmp	.L1592	#
 18741      FF
 18742              	.LVL1114:
 18743              	.L1605:
 18744              	# sieve_extend.c:1074:     switch(sieve->size) {
1074:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 18745              		.loc 1 1074 5 view .LVU6585
 18746 630d 4981F900 		cmp	r9, 100000000	# pretmp_199,
 18746      E1F505
 18747              	# sieve_extend.c:1082:         case 100000000:     valid_primes = 5761455;  break;
1082:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 18748              		.loc 1 1082 42 view .LVU6586
 18749 6314 B9AFE957 		mov	ecx, 5761455	# valid_primes,
 18749      00
 18750              	# sieve_extend.c:1074:     switch(sieve->size) {
1074:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 18751              		.loc 1 1074 5 view .LVU6587
 18752 6319 0F8400FF 		je	.L1593	#,
 18752      FFFF
 18753 631f 762C     		jbe	.L1724	#,
 18754 6321 4981F900 		cmp	r9, 1000000000	# pretmp_199,
 18754      CA9A3B
 18755 6328 B92EDF07 		mov	ecx, 50847534	# tmp227,
 18755      03
 18756 632d B8000000 		mov	eax, 0	# tmp228,
 18756      00
 18757 6332 480F45C8 		cmovne	rcx, rax	# tmp227,, valid_primes, tmp228
 18758 6336 E9E4FEFF 		jmp	.L1593	#
 18758      FF
GAS LISTING /tmp/cc64mrzX.s 			page 498


 18759              	.L1723:
 18760 633b 31C9     		xor	ecx, ecx	# valid_primes
 18761 633d 4983F90A 		cmp	r9, 10	# pretmp_199,
 18762 6341 0F94C1   		sete	cl	#, valid_primes
 18763 6344 48C1E102 		sal	rcx, 2	# valid_primes,
 18764 6348 E9D2FEFF 		jmp	.L1593	#
 18764      FF
 18765              	.L1724:
 18766 634d 4981F940 		cmp	r9, 1000000	# pretmp_199,
 18766      420F00
 18767              	# sieve_extend.c:1080:         case 1000000:       valid_primes = 78498;    break;
1080:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 18768              		.loc 1 1080 42 view .LVU6588
 18769 6354 B9A23201 		mov	ecx, 78498	# valid_primes,
 18769      00
 18770              	# sieve_extend.c:1074:     switch(sieve->size) {
1074:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 18771              		.loc 1 1074 5 view .LVU6589
 18772 6359 0F84C0FE 		je	.L1593	#,
 18772      FFFF
 18773 635f 4981F980 		cmp	r9, 10000000	# pretmp_199,
 18773      969800
 18774 6366 B903240A 		mov	ecx, 664579	# tmp225,
 18774      00
 18775 636b BE000000 		mov	esi, 0	# tmp226,
 18775      00
 18776 6370 480F45CE 		cmovne	rcx, rsi	# tmp225,, valid_primes, tmp226
 18777 6374 E9A6FEFF 		jmp	.L1593	#
 18777      FF
 18778              	.LVL1115:
 18779              	.L1581:
1074:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 18780              		.loc 1 1074 5 view .LVU6590
 18781 6379 4981F8A8 		cmp	r8, 168	# primeCount,
 18781      000000
 18782              	# sieve_extend.c:1077:         case 1000:          valid_primes = 168;      break;
1077:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 18783              		.loc 1 1077 42 view .LVU6591
 18784 6380 B9A80000 		mov	ecx, 168	# valid_primes,
 18784      00
 18785 6385 410F94C6 		sete	r14b	#, tmp177
 18786 6389 4421F2   		and	edx, r14d	# _251, tmp177
 18787 638c 4981F8A8 		cmp	r8, 168	# primeCount,
 18787      000000
 18788 6393 450FB6EE 		movzx	r13d, r14b	# <retval>, tmp177
 18789 6397 410F95C6 		setne	r14b	#, _135
1077:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 18790              		.loc 1 1077 29 is_stmt 1 view .LVU6592
 18791              	.LVL1116:
1077:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 18792              		.loc 1 1077 54 view .LVU6593
 18793              	# sieve_extend.c:1077:         case 1000:          valid_primes = 168;      break;
1077:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 18794              		.loc 1 1077 9 is_stmt 0 view .LVU6594
 18795 639b E960FAFF 		jmp	.L1592	#
 18795      FF
 18796              	.LVL1117:
GAS LISTING /tmp/cc64mrzX.s 			page 499


 18797              	.L1587:
1077:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 18798              		.loc 1 1077 9 view .LVU6595
 18799 63a0 4981F8AF 		cmp	r8, 5761455	# primeCount,
 18799      E95700
 18800              	# sieve_extend.c:1082:         case 100000000:     valid_primes = 5761455;  break;
1082:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 18801              		.loc 1 1082 42 view .LVU6596
 18802 63a7 B9AFE957 		mov	ecx, 5761455	# valid_primes,
 18802      00
 18803 63ac 0F94C0   		sete	al	#, tmp187
 18804 63af 21C2     		and	edx, eax	# _251, tmp187
 18805 63b1 4981F8AF 		cmp	r8, 5761455	# primeCount,
 18805      E95700
 18806 63b8 440FB6E8 		movzx	r13d, al	# <retval>, tmp187
 18807 63bc 410F95C6 		setne	r14b	#, _135
1082:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 18808              		.loc 1 1082 29 is_stmt 1 view .LVU6597
 18809              	.LVL1118:
1082:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 18810              		.loc 1 1082 54 view .LVU6598
 18811              	# sieve_extend.c:1082:         case 100000000:     valid_primes = 5761455;  break;
1082:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 18812              		.loc 1 1082 9 is_stmt 0 view .LVU6599
 18813 63c0 E93BFAFF 		jmp	.L1592	#
 18813      FF
 18814              	.LVL1119:
 18815              	.L1585:
1082:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 18816              		.loc 1 1082 9 view .LVU6600
 18817 63c5 4D85C0   		test	r8, r8	# primeCount
 18818 63c8 410F94C3 		sete	r11b	#, tmp191
 18819 63cc 4421DA   		and	edx, r11d	# _251, tmp191
 18820 63cf 4D85C0   		test	r8, r8	# primeCount
 18821 63d2 450FB6EB 		movzx	r13d, r11b	# <retval>, tmp191
 18822 63d6 410F95C6 		setne	r14b	#, _135
1084:sieve_extend.c ****     }
 18823              		.loc 1 1084 29 is_stmt 1 view .LVU6601
 18824              	# sieve_extend.c:1084:         default:            valid_primes= 0;
1084:sieve_extend.c ****     }
 18825              		.loc 1 1084 41 is_stmt 0 view .LVU6602
 18826 63da 31C9     		xor	ecx, ecx	# valid_primes
 18827 63dc E91FFAFF 		jmp	.L1592	#
 18827      FF
 18828              	.L1579:
1084:sieve_extend.c ****     }
 18829              		.loc 1 1084 41 view .LVU6603
 18830 63e1 4981F878 		cmp	r8, 9592	# primeCount,
 18830      250000
 18831              	# sieve_extend.c:1079:         case 100000:        valid_primes = 9592;     break;
1079:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 18832              		.loc 1 1079 42 view .LVU6604
 18833 63e8 B9782500 		mov	ecx, 9592	# valid_primes,
 18833      00
 18834 63ed 400F94C7 		sete	dil	#, tmp181
 18835 63f1 21FA     		and	edx, edi	# _251, tmp181
 18836 63f3 4981F878 		cmp	r8, 9592	# primeCount,
GAS LISTING /tmp/cc64mrzX.s 			page 500


 18836      250000
 18837 63fa 440FB6EF 		movzx	r13d, dil	# <retval>, tmp181
 18838 63fe 410F95C6 		setne	r14b	#, _135
1079:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 18839              		.loc 1 1079 29 is_stmt 1 view .LVU6605
 18840              	.LVL1120:
1079:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 18841              		.loc 1 1079 54 view .LVU6606
 18842              	# sieve_extend.c:1079:         case 100000:        valid_primes = 9592;     break;
1079:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 18843              		.loc 1 1079 9 is_stmt 0 view .LVU6607
 18844 6402 E9F9F9FF 		jmp	.L1592	#
 18844      FF
 18845              	.LVL1121:
 18846              	.L1613:
 18847              	# sieve_extend.c:1079:         case 100000:        valid_primes = 9592;     break;
1079:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 18848              		.loc 1 1079 42 view .LVU6608
 18849 6407 B9782500 		mov	ecx, 9592	# valid_primes,
 18849      00
 18850 640c E90EFEFF 		jmp	.L1593	#
 18850      FF
 18851              		.cfi_endproc
 18852              	.LFE79:
 18854              		.section	.rodata.str1.8
 18855 0145 000000   		.align 8
 18856              	.LC14:
 18857 0148 55736167 		.string	"Usage: %s [options] [maximum]\n"
 18857      653A2025 
 18857      73205B6F 
 18857      7074696F 
 18857      6E735D20 
 18858              		.section	.rodata.str1.1
 18859              	.LC15:
 18860 0031 4F707469 		.string	"Options:\n"
 18860      6F6E733A 
 18860      0A00
 18861              		.section	.rodata.str1.8
 18862 0167 00       		.align 8
 18863              	.LC16:
 18864 0168 20202D2D 		.string	"  --verbose <level>  Show more output to a certain level:\n"
 18864      76657262 
 18864      6F736520 
 18864      3C6C6576 
 18864      656C3E20 
 18865 01a3 00000000 		.align 8
 18865      00
 18866              	.LC17:
 18867 01a8 20202020 		.string	"                     1 - show phase progress\n"
 18867      20202020 
 18867      20202020 
 18867      20202020 
 18867      20202020 
 18868 01d6 0000     		.align 8
 18869              	.LC18:
 18870 01d8 20202020 		.string	"                     2 - show general progress within the phase\n"
 18870      20202020 
GAS LISTING /tmp/cc64mrzX.s 			page 501


 18870      20202020 
 18870      20202020 
 18870      20202020 
 18871 0219 00000000 		.align 8
 18871      000000
 18872              	.LC19:
 18873 0220 20202020 		.string	"                     3 - show actual work\n"
 18873      20202020 
 18873      20202020 
 18873      20202020 
 18873      20202020 
 18874 024b 00000000 		.align 8
 18874      00
 18875              	.LC20:
 18876 0250 20202D2D 		.string	"  --check            check the correctness of the algorithm\n"
 18876      63686563 
 18876      6B202020 
 18876      20202020 
 18876      20202020 
 18877 028d 000000   		.align 8
 18878              	.LC21:
 18879 0290 20202D2D 		.string	"  --show <maximum>   Show the primes found up to the maximum\n"
 18879      73686F77 
 18879      203C6D61 
 18879      78696D75 
 18879      6D3E2020 
 18880 02ce 0000     		.align 8
 18881              	.LC22:
 18882 02d0 20202D2D 		.string	"  --tune  <level>    find the best settings for the current os and hardware\n"
 18882      74756E65 
 18882      20203C6C 
 18882      6576656C 
 18882      3E202020 
 18883 031d 000000   		.align 8
 18884              	.LC23:
 18885 0320 20202020 		.string	"                     1 - fast tuning\n"
 18885      20202020 
 18885      20202020 
 18885      20202020 
 18885      20202020 
 18886 0346 0000     		.align 8
 18887              	.LC24:
 18888 0348 20202020 		.string	"                     2 - refined tuning\n"
 18888      20202020 
 18888      20202020 
 18888      20202020 
 18888      20202020 
 18889 0371 00000000 		.align 8
 18889      000000
 18890              	.LC25:
 18891 0378 20202020 		.string	"                     3 - maximum tuning (takes long)\n"
 18891      20202020 
 18891      20202020 
 18891      20202020 
 18891      20202020 
 18892              		.text
 18893 6411 66662E0F 		.p2align 4
GAS LISTING /tmp/cc64mrzX.s 			page 502


 18893      1F840000 
 18893      0000000F 
 18893      1F4000
 18894              		.globl	usage
 18896              	usage:
 18897              	.LVL1122:
 18898              	.LFB80:
1097:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 18899              		.loc 1 1097 24 is_stmt 1 view -0
 18900              		.cfi_startproc
1097:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 18901              		.loc 1 1097 24 is_stmt 0 view .LVU6610
 18902 6420 F30F1EFA 		endbr64	
 18903 6424 50       		push	rax	#
 18904              		.cfi_def_cfa_offset 16
 18905 6425 58       		pop	rax	#
 18906              		.cfi_def_cfa_offset 8
1098:sieve_extend.c ****     fprintf(stderr, "Options:\n");
 18907              		.loc 1 1098 5 is_stmt 1 view .LVU6611
 18908              	.LVL1123:
 18909              	.LBB868:
 18910              	.LBI868:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18911              		.loc 3 98 1 view .LVU6612
 18912              	.LBB869:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18913              		.loc 3 100 3 view .LVU6613
 18914              	.LBE869:
 18915              	.LBE868:
 18916              	# sieve_extend.c:1097: void usage(char *name) {
1097:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 18917              		.loc 1 1097 24 is_stmt 0 view .LVU6614
 18918 6426 488D6424 		lea	rsp, -8[rsp]	#,
 18918      F8
 18919              		.cfi_def_cfa_offset 16
 18920              	# sieve_extend.c:1097: void usage(char *name) {
1097:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 18921              		.loc 1 1097 24 view .LVU6615
 18922 642b 4889F9   		mov	rcx, rdi	# name, tmp107
 18923              	.LBB871:
 18924              	.LBB870:
 18925              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18926              		.loc 3 100 10 view .LVU6616
 18927 642e 488B3D00 		mov	rdi, QWORD PTR stderr[rip]	#, stderr
 18927      000000
 18928              	.LVL1124:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18929              		.loc 3 100 10 view .LVU6617
 18930 6435 488D1500 		lea	rdx, .LC14[rip]	#,
 18930      000000
 18931 643c BE010000 		mov	esi, 1	#,
 18931      00
 18932 6441 31C0     		xor	eax, eax	#
 18933 6443 E8000000 		call	__fprintf_chk@PLT	#
 18933      00
 18934              	.LVL1125:
GAS LISTING /tmp/cc64mrzX.s 			page 503


 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18935              		.loc 3 100 10 view .LVU6618
 18936              	.LBE870:
 18937              	.LBE871:
1099:sieve_extend.c ****     fprintf(stderr, "  --verbose <level>  Show more output to a certain level:\n");
 18938              		.loc 1 1099 5 is_stmt 1 view .LVU6619
 18939              	.LBB872:
 18940              	.LBI872:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18941              		.loc 3 98 1 view .LVU6620
 18942              	.LBB873:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18943              		.loc 3 100 3 view .LVU6621
 18944              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18945              		.loc 3 100 10 is_stmt 0 view .LVU6622
 18946 6448 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 18946      000000
 18947 644f BA090000 		mov	edx, 9	#,
 18947      00
 18948 6454 BE010000 		mov	esi, 1	#,
 18948      00
 18949 6459 488D3D00 		lea	rdi, .LC15[rip]	#,
 18949      000000
 18950 6460 E8000000 		call	fwrite@PLT	#
 18950      00
 18951              	.LVL1126:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18952              		.loc 3 100 10 view .LVU6623
 18953              	.LBE873:
 18954              	.LBE872:
1100:sieve_extend.c ****     fprintf(stderr, "                     1 - show phase progress\n");
 18955              		.loc 1 1100 5 is_stmt 1 view .LVU6624
 18956              	.LBB874:
 18957              	.LBI874:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18958              		.loc 3 98 1 view .LVU6625
 18959              	.LBB875:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18960              		.loc 3 100 3 view .LVU6626
 18961              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18962              		.loc 3 100 10 is_stmt 0 view .LVU6627
 18963 6465 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 18963      000000
 18964 646c BA3A0000 		mov	edx, 58	#,
 18964      00
 18965 6471 BE010000 		mov	esi, 1	#,
 18965      00
 18966 6476 488D3D00 		lea	rdi, .LC16[rip]	#,
 18966      000000
 18967 647d E8000000 		call	fwrite@PLT	#
 18967      00
 18968              	.LVL1127:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18969              		.loc 3 100 10 view .LVU6628
 18970              	.LBE875:
GAS LISTING /tmp/cc64mrzX.s 			page 504


 18971              	.LBE874:
1101:sieve_extend.c ****     fprintf(stderr, "                     2 - show general progress within the phase\n");
 18972              		.loc 1 1101 5 is_stmt 1 view .LVU6629
 18973              	.LBB876:
 18974              	.LBI876:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18975              		.loc 3 98 1 view .LVU6630
 18976              	.LBB877:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18977              		.loc 3 100 3 view .LVU6631
 18978              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18979              		.loc 3 100 10 is_stmt 0 view .LVU6632
 18980 6482 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 18980      000000
 18981 6489 BA2D0000 		mov	edx, 45	#,
 18981      00
 18982 648e BE010000 		mov	esi, 1	#,
 18982      00
 18983 6493 488D3D00 		lea	rdi, .LC17[rip]	#,
 18983      000000
 18984 649a E8000000 		call	fwrite@PLT	#
 18984      00
 18985              	.LVL1128:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18986              		.loc 3 100 10 view .LVU6633
 18987              	.LBE877:
 18988              	.LBE876:
1102:sieve_extend.c ****     fprintf(stderr, "                     3 - show actual work\n");
 18989              		.loc 1 1102 5 is_stmt 1 view .LVU6634
 18990              	.LBB878:
 18991              	.LBI878:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18992              		.loc 3 98 1 view .LVU6635
 18993              	.LBB879:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18994              		.loc 3 100 3 view .LVU6636
 18995              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18996              		.loc 3 100 10 is_stmt 0 view .LVU6637
 18997 649f 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 18997      000000
 18998 64a6 BA400000 		mov	edx, 64	#,
 18998      00
 18999 64ab BE010000 		mov	esi, 1	#,
 18999      00
 19000 64b0 488D3D00 		lea	rdi, .LC18[rip]	#,
 19000      000000
 19001 64b7 E8000000 		call	fwrite@PLT	#
 19001      00
 19002              	.LVL1129:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19003              		.loc 3 100 10 view .LVU6638
 19004              	.LBE879:
 19005              	.LBE878:
1103:sieve_extend.c ****     fprintf(stderr, "  --check            check the correctness of the algorithm\n");
 19006              		.loc 1 1103 5 is_stmt 1 view .LVU6639
GAS LISTING /tmp/cc64mrzX.s 			page 505


 19007              	.LBB880:
 19008              	.LBI880:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19009              		.loc 3 98 1 view .LVU6640
 19010              	.LBB881:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19011              		.loc 3 100 3 view .LVU6641
 19012              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19013              		.loc 3 100 10 is_stmt 0 view .LVU6642
 19014 64bc 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 19014      000000
 19015 64c3 BA2A0000 		mov	edx, 42	#,
 19015      00
 19016 64c8 BE010000 		mov	esi, 1	#,
 19016      00
 19017 64cd 488D3D00 		lea	rdi, .LC19[rip]	#,
 19017      000000
 19018 64d4 E8000000 		call	fwrite@PLT	#
 19018      00
 19019              	.LVL1130:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19020              		.loc 3 100 10 view .LVU6643
 19021              	.LBE881:
 19022              	.LBE880:
1104:sieve_extend.c ****     fprintf(stderr, "  --show <maximum>   Show the primes found up to the maximum\n");
 19023              		.loc 1 1104 5 is_stmt 1 view .LVU6644
 19024              	.LBB882:
 19025              	.LBI882:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19026              		.loc 3 98 1 view .LVU6645
 19027              	.LBB883:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19028              		.loc 3 100 3 view .LVU6646
 19029              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19030              		.loc 3 100 10 is_stmt 0 view .LVU6647
 19031 64d9 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 19031      000000
 19032 64e0 BA3C0000 		mov	edx, 60	#,
 19032      00
 19033 64e5 BE010000 		mov	esi, 1	#,
 19033      00
 19034 64ea 488D3D00 		lea	rdi, .LC20[rip]	#,
 19034      000000
 19035 64f1 E8000000 		call	fwrite@PLT	#
 19035      00
 19036              	.LVL1131:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19037              		.loc 3 100 10 view .LVU6648
 19038              	.LBE883:
 19039              	.LBE882:
1105:sieve_extend.c ****     fprintf(stderr, "  --tune  <level>    find the best settings for the current os and hardware\n"
 19040              		.loc 1 1105 5 is_stmt 1 view .LVU6649
 19041              	.LBB884:
 19042              	.LBI884:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
GAS LISTING /tmp/cc64mrzX.s 			page 506


 19043              		.loc 3 98 1 view .LVU6650
 19044              	.LBB885:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19045              		.loc 3 100 3 view .LVU6651
 19046              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19047              		.loc 3 100 10 is_stmt 0 view .LVU6652
 19048 64f6 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 19048      000000
 19049 64fd BA3D0000 		mov	edx, 61	#,
 19049      00
 19050 6502 BE010000 		mov	esi, 1	#,
 19050      00
 19051 6507 488D3D00 		lea	rdi, .LC21[rip]	#,
 19051      000000
 19052 650e E8000000 		call	fwrite@PLT	#
 19052      00
 19053              	.LVL1132:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19054              		.loc 3 100 10 view .LVU6653
 19055              	.LBE885:
 19056              	.LBE884:
1106:sieve_extend.c ****     fprintf(stderr, "                     1 - fast tuning\n");
 19057              		.loc 1 1106 5 is_stmt 1 view .LVU6654
 19058              	.LBB886:
 19059              	.LBI886:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19060              		.loc 3 98 1 view .LVU6655
 19061              	.LBB887:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19062              		.loc 3 100 3 view .LVU6656
 19063              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19064              		.loc 3 100 10 is_stmt 0 view .LVU6657
 19065 6513 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 19065      000000
 19066 651a BA4C0000 		mov	edx, 76	#,
 19066      00
 19067 651f BE010000 		mov	esi, 1	#,
 19067      00
 19068 6524 488D3D00 		lea	rdi, .LC22[rip]	#,
 19068      000000
 19069 652b E8000000 		call	fwrite@PLT	#
 19069      00
 19070              	.LVL1133:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19071              		.loc 3 100 10 view .LVU6658
 19072              	.LBE887:
 19073              	.LBE886:
1107:sieve_extend.c ****     fprintf(stderr, "                     2 - refined tuning\n");
 19074              		.loc 1 1107 5 is_stmt 1 view .LVU6659
 19075              	.LBB888:
 19076              	.LBI888:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19077              		.loc 3 98 1 view .LVU6660
 19078              	.LBB889:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
GAS LISTING /tmp/cc64mrzX.s 			page 507


 19079              		.loc 3 100 3 view .LVU6661
 19080              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19081              		.loc 3 100 10 is_stmt 0 view .LVU6662
 19082 6530 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 19082      000000
 19083 6537 BA250000 		mov	edx, 37	#,
 19083      00
 19084 653c BE010000 		mov	esi, 1	#,
 19084      00
 19085 6541 488D3D00 		lea	rdi, .LC23[rip]	#,
 19085      000000
 19086 6548 E8000000 		call	fwrite@PLT	#
 19086      00
 19087              	.LVL1134:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19088              		.loc 3 100 10 view .LVU6663
 19089              	.LBE889:
 19090              	.LBE888:
1108:sieve_extend.c ****     fprintf(stderr, "                     3 - maximum tuning (takes long)\n");
 19091              		.loc 1 1108 5 is_stmt 1 view .LVU6664
 19092              	.LBB890:
 19093              	.LBI890:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19094              		.loc 3 98 1 view .LVU6665
 19095              	.LBB891:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19096              		.loc 3 100 3 view .LVU6666
 19097              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19098              		.loc 3 100 10 is_stmt 0 view .LVU6667
 19099 654d 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 19099      000000
 19100 6554 BA280000 		mov	edx, 40	#,
 19100      00
 19101 6559 BE010000 		mov	esi, 1	#,
 19101      00
 19102 655e 488D3D00 		lea	rdi, .LC24[rip]	#,
 19102      000000
 19103 6565 E8000000 		call	fwrite@PLT	#
 19103      00
 19104              	.LVL1135:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19105              		.loc 3 100 10 view .LVU6668
 19106              	.LBE891:
 19107              	.LBE890:
1109:sieve_extend.c ****     exit(1);
 19108              		.loc 1 1109 5 is_stmt 1 view .LVU6669
 19109              	.LBB892:
 19110              	.LBI892:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19111              		.loc 3 98 1 view .LVU6670
 19112              	.LBB893:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19113              		.loc 3 100 3 view .LVU6671
 19114              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
GAS LISTING /tmp/cc64mrzX.s 			page 508


 19115              		.loc 3 100 10 is_stmt 0 view .LVU6672
 19116 656a 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 19116      000000
 19117 6571 488D3D00 		lea	rdi, .LC25[rip]	#,
 19117      000000
 19118 6578 BA350000 		mov	edx, 53	#,
 19118      00
 19119 657d BE010000 		mov	esi, 1	#,
 19119      00
 19120 6582 E8000000 		call	fwrite@PLT	#
 19120      00
 19121              	.LVL1136:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19122              		.loc 3 100 10 view .LVU6673
 19123              	.LBE893:
 19124              	.LBE892:
1110:sieve_extend.c **** }
 19125              		.loc 1 1110 5 is_stmt 1 view .LVU6674
 19126 6587 BF010000 		mov	edi, 1	#,
 19126      00
 19127 658c E8000000 		call	exit@PLT	#
 19127      00
 19128              	.LVL1137:
 19129              		.cfi_endproc
 19130              	.LFE80:
 19132              		.section	.rodata.str1.1
 19133              	.LC27:
 19134 003b 56616C69 		.string	"Validating... "
 19134      64617469 
 19134      6E672E2E 
 19134      2E2000
 19135              	.LC28:
 19136 004a 2D2D6865 		.string	"--help"
 19136      6C7000
 19137              	.LC29:
 19138 0051 2D2D7665 		.string	"--verbose"
 19138      72626F73 
 19138      6500
 19139              	.LC30:
 19140 005b 4E6F2076 		.string	"No verbose level specified\n"
 19140      6572626F 
 19140      7365206C 
 19140      6576656C 
 19140      20737065 
 19141              	.LC31:
 19142 0077 256400   		.string	"%d"
 19143              		.section	.rodata.str1.8
 19144 03ae 0000     		.align 8
 19145              	.LC32:
 19146 03b0 4572726F 		.string	"Error: Invalid measurement time: %s\n"
 19146      723A2049 
 19146      6E76616C 
 19146      6964206D 
 19146      65617375 
 19147              		.section	.rodata.str1.1
 19148              	.LC33:
 19149 007a 56657262 		.string	"Verbose level set to %d\n"
GAS LISTING /tmp/cc64mrzX.s 			page 509


 19149      6F736520 
 19149      6C657665 
 19149      6C207365 
 19149      7420746F 
 19150              	.LC34:
 19151 0093 2D2D6368 		.string	"--check"
 19151      65636B00 
 19152              	.LC35:
 19153 009b 2D2D7475 		.string	"--tune"
 19153      6E6500
 19154              	.LC36:
 19155 00a2 4E6F2074 		.string	"No tune level specified\n"
 19155      756E6520 
 19155      6C657665 
 19155      6C207370 
 19155      65636966 
 19156              		.section	.rodata.str1.8
 19157 03d5 000000   		.align 8
 19158              	.LC37:
 19159 03d8 4572726F 		.string	"Error: Invalid tune level: %s\n"
 19159      723A2049 
 19159      6E76616C 
 19159      69642074 
 19159      756E6520 
 19160              		.section	.rodata.str1.1
 19161              	.LC38:
 19162 00bb 54756E65 		.string	"Tune level set to %d\n"
 19162      206C6576 
 19162      656C2073 
 19162      65742074 
 19162      6F202564 
 19163              	.LC39:
 19164 00d1 2D2D7368 		.string	"--show"
 19164      6F7700
 19165              	.LC40:
 19166 00d8 4E6F2073 		.string	"No show maximum specified\n"
 19166      686F7720 
 19166      6D617869 
 19166      6D756D20 
 19166      73706563 
 19167              	.LC41:
 19168 00f3 256A7500 		.string	"%ju"
 19169              		.section	.rodata.str1.8
 19170 03f7 00       		.align 8
 19171              	.LC42:
 19172 03f8 4572726F 		.string	"Error: Invalid show maximum: %s\n"
 19172      723A2049 
 19172      6E76616C 
 19172      69642073 
 19172      686F7720 
 19173              		.section	.rodata.str1.1
 19174              	.LC43:
 19175 00f7 53686F77 		.string	"Show maximum set to %ju\n"
 19175      206D6178 
 19175      696D756D 
 19175      20736574 
 19175      20746F20 
GAS LISTING /tmp/cc64mrzX.s 			page 510


 19176              	.LC44:
 19177 0110 496E7661 		.string	"Invalid size %s\n"
 19177      6C696420 
 19177      73697A65 
 19177      2025730A 
 19177      00
 19178              	.LC45:
 19179 0121 2E2E2E43 		.string	"...Checking size %ju ..."
 19179      6865636B 
 19179      696E6720 
 19179      73697A65 
 19179      20256A75 
 19180              	.LC46:
 19181 013a 2E626C6F 		.string	".blocksize %ju-"
 19181      636B7369 
 19181      7A652025 
 19181      6A752D00 
 19182              	.LC47:
 19183 014a 76616C69 		.string	"valid;"
 19183      643B00
 19184              	.LC48:
 19185 0151 2E2E2E56 		.string	"...Valid algorithm"
 19185      616C6964 
 19185      20616C67 
 19185      6F726974 
 19185      686D00
 19186              	.LC49:
 19187 0164 54756E69 		.string	"Tuning..."
 19187      6E672E2E 
 19187      2E00
 19188              	.LC50:
 19189 016e 2E283E29 		.string	".(>)"
 19189      00
 19190              		.section	.rodata.str1.8
 19191 0419 00000000 		.align 8
 19191      000000
 19192              	.LC51:
 19193 0420 626C6F63 		.string	"blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector %
 19193      6B73697A 
 19193      655F6269 
 19193      74732025 
 19193      31306A75 
 19194              		.section	.rodata.str1.1
 19195              	.LC52:
 19196 0173 2E2E2E2E 		.string	"...."
 19196      00
 19197              		.section	.rodata.str1.8
 19198 04a7 00       		.align 8
 19199              	.LC53:
 19200 04a8 256A7520 		.string	"%ju results. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju\n"
 19200      72657375 
 19200      6C74732E 
 19200      20496E69 
 19200      74616C20 
 19201              		.section	.rodata.str1.1
 19202              	.LC54:
 19203 0178 42657374 		.string	"Best options"
GAS LISTING /tmp/cc64mrzX.s 			page 511


 19203      206F7074 
 19203      696F6E73 
 19203      00
 19204              	.LC55:
 19205 0185 28256A75 		.string	"(%ju) "
 19205      292000
 19206              	.LC56:
 19207 018c 2E2E2E00 		.string	"..."
 19208              	.LC57:
 19209 0190 2E426573 		.string	".Best result:"
 19209      74207265 
 19209      73756C74 
 19209      3A00
 19210              		.section	.rodata.str1.8
 19211 04fa 00000000 		.align 8
 19211      0000
 19212              	.LC58:
 19213 0500 42656E63 		.string	"Benchmarking... with blocksize %ju steps: %ju/%ju/%ju\n"
 19213      686D6172 
 19213      6B696E67 
 19213      2E2E2E20 
 19213      77697468 
 19214 0537 00       		.align 8
 19215              	.LC60:
 19216 0538 726F6769 		.string	"rogiervandam_extend;%ju;%f;1;algorithm=other,faithful=yes,bits=1\n"
 19216      65727661 
 19216      6E64616D 
 19216      5F657874 
 19216      656E643B 
 19217 057a 00000000 		.align 8
 19217      0000
 19218              	.LC61:
 19219 0580 50617373 		.string	"Passes - per 5 seconds: %f - per second %f\n"
 19219      6573202D 
 19219      20706572 
 19219      20352073 
 19219      65636F6E 
 19220              		.section	.rodata.str1.1
 19221              	.LC62:
 19222 019e 53686F77 		.string	"Show result set:"
 19222      20726573 
 19222      756C7420 
 19222      7365743A 
 19222      00
 19223              		.section	.text.startup,"ax",@progbits
 19224              		.p2align 4
 19225              		.globl	main
 19227              	main:
 19228              	.LVL1138:
 19229              	.LFB85:
1156:sieve_extend.c **** 
1157:sieve_extend.c **** static inline void tuning_result_print(tuning_result_type tuning_result) {
1158:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
1159:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
1160:sieve_extend.c ****                             (uintmax_t)tuning_result.smallstep_faster,(uintmax_t)tuning_result.medi
1161:sieve_extend.c ****                             (uintmax_t)tuning_result.passes, (uintmax_t) tuning_result.sample_max,
1162:sieve_extend.c ****                             tuning_result.elapsed_time, tuning_result.sample_duration, tuning_resul
GAS LISTING /tmp/cc64mrzX.s 			page 512


1163:sieve_extend.c **** }
1164:sieve_extend.c **** 
1165:sieve_extend.c **** static tuning_result_type tune(int tune_level, counter_t maxints, int option_verboselevel) {
1166:sieve_extend.c ****     counter_t best_blocksize_bits = default_blocksize;
1167:sieve_extend.c **** 
1168:sieve_extend.c ****     double best_avg = 0;
1169:sieve_extend.c ****     best_blocksize_bits = 0;
1170:sieve_extend.c ****     counter_t best_smallstep_faster = 0;
1171:sieve_extend.c ****     counter_t best_mediumstep_faster = 0;
1172:sieve_extend.c ****     counter_t best_vectorstep_faster = 0;
1173:sieve_extend.c ****     counter_t smallstep_faster_steps = 4;
1174:sieve_extend.c ****     counter_t mediumstep_faster_steps = 4;
1175:sieve_extend.c ****     counter_t vectorstep_faster_steps = 32;
1176:sieve_extend.c ****     counter_t freebits_steps = anticiped_cache_line_bytesize;
1177:sieve_extend.c ****     counter_t sample_max = default_sample_max;
1178:sieve_extend.c ****     double sample_duration = default_sample_duration;
1179:sieve_extend.c **** 
1180:sieve_extend.c ****     // determines the size of the resultset
1181:sieve_extend.c ****     switch (tune_level) {
1182:sieve_extend.c ****         case 1:
1183:sieve_extend.c ****             smallstep_faster_steps  = WORD_SIZE/4;
1184:sieve_extend.c ****             mediumstep_faster_steps = WORD_SIZE/4;
1185:sieve_extend.c ****             vectorstep_faster_steps = WORD_SIZE/2;
1186:sieve_extend.c ****             freebits_steps = anticiped_cache_line_bytesize*8*2;
1187:sieve_extend.c ****             sample_max = 8;
1188:sieve_extend.c ****             sample_duration = 0.1;
1189:sieve_extend.c ****             break;
1190:sieve_extend.c ****         case 2:
1191:sieve_extend.c ****             smallstep_faster_steps  = WORD_SIZE/8;
1192:sieve_extend.c ****             mediumstep_faster_steps = WORD_SIZE/8;
1193:sieve_extend.c ****             vectorstep_faster_steps = WORD_SIZE/4;
1194:sieve_extend.c ****             freebits_steps = anticiped_cache_line_bytesize*8;
1195:sieve_extend.c ****             sample_max = 8;
1196:sieve_extend.c ****             sample_duration = 0.2;
1197:sieve_extend.c ****             break;
1198:sieve_extend.c ****         case 3:
1199:sieve_extend.c ****             smallstep_faster_steps  = WORD_SIZE/16;
1200:sieve_extend.c ****             mediumstep_faster_steps = WORD_SIZE/16;
1201:sieve_extend.c ****             vectorstep_faster_steps = WORD_SIZE/16;
1202:sieve_extend.c ****             freebits_steps = anticiped_cache_line_bytesize/2;
1203:sieve_extend.c ****             sample_max = 8;
1204:sieve_extend.c ****             sample_duration = 0.2;
1205:sieve_extend.c ****             break;
1206:sieve_extend.c ****     }
1207:sieve_extend.c ****     
1208:sieve_extend.c ****     if (option_verboselevel >= 1) printf("Tuning..."); if (option_verboselevel >= 2) printf("\n");
1209:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
1210:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
1211:sieve_extend.c ****     counter_t tuning_results=0;
1212:sieve_extend.c ****     counter_t tuning_result_index=0;
1213:sieve_extend.c ****     
1214:sieve_extend.c ****     for (counter_t smallstep_faster = 0; smallstep_faster <= WORD_SIZE/2; smallstep_faster += small
1215:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
1216:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE;
1217:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
1218:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
1219:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
GAS LISTING /tmp/cc64mrzX.s 			page 513


1220:sieve_extend.c **** 
1221:sieve_extend.c ****                         // set variables
1222:sieve_extend.c ****                         tuning_results++;
1223:sieve_extend.c ****                         tuning_result[tuning_result_index].maxints = maxints;
1224:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_duration = sample_duration;
1225:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_max = sample_max;
1226:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_kb = blocksize_kb;
1227:sieve_extend.c ****                         tuning_result[tuning_result_index].free_bits = free_bits;
1228:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_bits = blocksize_bits;
1229:sieve_extend.c ****                         tuning_result[tuning_result_index].smallstep_faster = smallstep_faster;
1230:sieve_extend.c ****                         tuning_result[tuning_result_index].mediumstep_faster = mediumstep_faster;
1231:sieve_extend.c ****                         tuning_result[tuning_result_index].vectorstep_faster = vectorstep_faster;
1232:sieve_extend.c ****                         tune_benchmark(tuning_result, tuning_result_index);
1233:sieve_extend.c **** 
1234:sieve_extend.c ****                         if ( tuning_result[tuning_result_index].avg > best_avg) {
1235:sieve_extend.c ****                             best_avg = tuning_result[tuning_result_index].avg;
1236:sieve_extend.c ****                             best_blocksize_bits = blocksize_bits;
1237:sieve_extend.c ****                             best_smallstep_faster = smallstep_faster;
1238:sieve_extend.c ****                             best_mediumstep_faster = mediumstep_faster;
1239:sieve_extend.c ****                             best_vectorstep_faster = vectorstep_faster;
1240:sieve_extend.c ****                             if (option_verboselevel >=2) { printf(".(>)"); tuning_result_print(tuni
1241:sieve_extend.c ****                         }
1242:sieve_extend.c ****                         if (option_verboselevel >= 3) { printf("...."); tuning_result_print(tuning_
1243:sieve_extend.c ****                         tuning_result_index++;
1244:sieve_extend.c ****                     }
1245:sieve_extend.c ****                 }
1246:sieve_extend.c ****             }
1247:sieve_extend.c ****         }
1248:sieve_extend.c ****     }
1249:sieve_extend.c ****     if (option_verboselevel >= 2) {
1250:sieve_extend.c ****         printf("%ju results. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju\n"
1251:sieve_extend.c ****         printf("Best options\n");
1252:sieve_extend.c ****     }
1253:sieve_extend.c ****     counter_t step=0;
1254:sieve_extend.c ****     while (tuning_results>4) {
1255:sieve_extend.c ****         qsort(tuning_result, (size_t)tuning_results, sizeof(tuning_result_type), compare_tuning_res
1256:sieve_extend.c ****         step++;
1257:sieve_extend.c ****         if (option_verboselevel >= 2) {
1258:sieve_extend.c ****             tuning_result_index = 0;
1259:sieve_extend.c ****             printf("(%ju) ",(uintmax_t)step); tuning_result_print(tuning_result[tuning_result_index
1260:sieve_extend.c ****             if (option_verboselevel >= 3) {
1261:sieve_extend.c ****                 for (counter_t tuning_result_index=0; tuning_result_index<min(10,tuning_results); t
1262:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
1263:sieve_extend.c ****                 }
1264:sieve_extend.c ****             }
1265:sieve_extend.c ****         }
1266:sieve_extend.c **** 
1267:sieve_extend.c ****         tuning_results = tuning_results / 2;
1268:sieve_extend.c **** 
1269:sieve_extend.c ****         for (counter_t i=0; i<tuning_results; i++) {
1270:sieve_extend.c ****             tune_benchmark(tuning_result, i);
1271:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
1272:sieve_extend.c ****         }
1273:sieve_extend.c ****         
1274:sieve_extend.c ****     }
1275:sieve_extend.c ****     tuning_result_type best_result = tuning_result[0];
1276:sieve_extend.c ****     if (option_verboselevel >= 1) {
GAS LISTING /tmp/cc64mrzX.s 			page 514


1277:sieve_extend.c ****         tuning_result_index = 0;
1278:sieve_extend.c ****         printf(".Best result:"); tuning_result_print(tuning_result[tuning_result_index]);
1279:sieve_extend.c ****     }
1280:sieve_extend.c **** 
1281:sieve_extend.c ****     free(tuning_result);
1282:sieve_extend.c ****     return best_result;
1283:sieve_extend.c **** }
1284:sieve_extend.c **** 
1285:sieve_extend.c **** int main(int argc, char *argv[]) {
 19230              		.loc 1 1285 34 view -0
 19231              		.cfi_startproc
 19232              		.loc 1 1285 34 is_stmt 0 view .LVU6676
 19233 0000 F30F1EFA 		endbr64	
 19234 0004 4157     		push	r15	#
 19235              		.cfi_def_cfa_offset 16
 19236              		.cfi_offset 15, -16
 19237 0006 4156     		push	r14	#
 19238              		.cfi_def_cfa_offset 24
 19239              		.cfi_offset 14, -24
 19240 0008 4155     		push	r13	#
 19241              		.cfi_def_cfa_offset 32
 19242              		.cfi_offset 13, -32
 19243 000a 4154     		push	r12	#
 19244              		.cfi_def_cfa_offset 40
 19245              		.cfi_offset 12, -40
 19246 000c 55       		push	rbp	#
 19247              		.cfi_def_cfa_offset 48
 19248              		.cfi_offset 6, -48
 19249 000d 53       		push	rbx	#
 19250              		.cfi_def_cfa_offset 56
 19251              		.cfi_offset 3, -56
 19252 000e 488DA424 		lea	rsp, -232[rsp]	#,
 19252      18FFFFFF 
 19253              		.cfi_def_cfa_offset 288
 19254              	# sieve_extend.c:1285: int main(int argc, char *argv[]) {
 19255              		.loc 1 1285 34 view .LVU6677
 19256 0016 64488B04 		mov	rax, QWORD PTR fs:40	# tmp570, MEM[(<address-space-1> long unsigned int *)40B]
 19256      25280000 
 19256      00
 19257 001f 48898424 		mov	QWORD PTR 216[rsp], rax	# D.7536, tmp570
 19257      D8000000 
 19258 0027 31C0     		xor	eax, eax	# tmp570
1286:sieve_extend.c **** 
1287:sieve_extend.c ****     
1288:sieve_extend.c ****     counter_t option_maxFactor  = default_sieve_limit;
 19259              		.loc 1 1288 5 is_stmt 1 view .LVU6678
 19260              	# sieve_extend.c:1288:     counter_t option_maxFactor  = default_sieve_limit;
 19261              		.loc 1 1288 15 is_stmt 0 view .LVU6679
 19262 0029 48C78424 		mov	QWORD PTR 160[rsp], 1000000	# option_maxFactor,
 19262      A0000000 
 19262      40420F00 
1289:sieve_extend.c ****     counter_t option_showMaxFactor = default_showMaxFactor;
 19263              		.loc 1 1289 5 is_stmt 1 view .LVU6680
 19264              	.LBB1000:
 19265              	# sieve_extend.c:1294:     for (int arg=1; arg < argc; arg++) {
1290:sieve_extend.c ****     int option_verboselevel = default_verbose_level;
1291:sieve_extend.c ****     int option_check = default_check_level;
GAS LISTING /tmp/cc64mrzX.s 			page 515


1292:sieve_extend.c ****     int option_tunelevel = default_tune_level;
1293:sieve_extend.c **** 
1294:sieve_extend.c ****     for (int arg=1; arg < argc; arg++) {
 19266              		.loc 1 1294 5 is_stmt 0 view .LVU6681
 19267 0035 83FF01   		cmp	edi, 1	# argc,
 19268              	.LBE1000:
 19269              	# sieve_extend.c:1289:     counter_t option_showMaxFactor = default_showMaxFactor;
1289:sieve_extend.c ****     counter_t option_showMaxFactor = default_showMaxFactor;
 19270              		.loc 1 1289 15 view .LVU6682
 19271 0038 48C78424 		mov	QWORD PTR 168[rsp], 0	# option_showMaxFactor,
 19271      A8000000 
 19271      00000000 
1290:sieve_extend.c ****     int option_verboselevel = default_verbose_level;
 19272              		.loc 1 1290 5 is_stmt 1 view .LVU6683
 19273              	# sieve_extend.c:1290:     int option_verboselevel = default_verbose_level;
1290:sieve_extend.c ****     int option_verboselevel = default_verbose_level;
 19274              		.loc 1 1290 9 is_stmt 0 view .LVU6684
 19275 0044 C7842498 		mov	DWORD PTR 152[rsp], 2	# option_verboselevel,
 19275      00000002 
 19275      000000
1291:sieve_extend.c ****     int option_tunelevel = default_tune_level;
 19276              		.loc 1 1291 5 is_stmt 1 view .LVU6685
 19277              	.LVL1139:
1292:sieve_extend.c **** 
 19278              		.loc 1 1292 5 view .LVU6686
 19279              	# sieve_extend.c:1292:     int option_tunelevel = default_tune_level;
1292:sieve_extend.c **** 
 19280              		.loc 1 1292 9 is_stmt 0 view .LVU6687
 19281 004f C784249C 		mov	DWORD PTR 156[rsp], 0	# option_tunelevel,
 19281      00000000 
 19281      000000
 19282              		.loc 1 1294 5 is_stmt 1 view .LVU6688
 19283              	.LBB1025:
 19284              		.loc 1 1294 10 view .LVU6689
 19285              	.LVL1140:
 19286              		.loc 1 1294 21 view .LVU6690
 19287              	# sieve_extend.c:1294:     for (int arg=1; arg < argc; arg++) {
 19288              		.loc 1 1294 5 is_stmt 0 view .LVU6691
 19289 005a 0F8E1C05 		jle	.L1744	#,
 19289      0000
 19290 0060 89FD     		mov	ebp, edi	# argc, tmp524
 19291 0062 4989F4   		mov	r12, rsi	# argv, tmp525
 19292              	# sieve_extend.c:1294:     for (int arg=1; arg < argc; arg++) {
 19293              		.loc 1 1294 14 view .LVU6692
 19294 0065 BB010000 		mov	ebx, 1	# arg,
 19294      00
 19295 006a 4C8D2D00 		lea	r13, .LC28[rip]	# tmp464,
 19295      000000
 19296              	# sieve_extend.c:1296:         else if (strcmp(argv[arg], "--verbose")==0) {
1295:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1296:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 19297              		.loc 1 1296 18 view .LVU6693
 19298 0071 4C8D3500 		lea	r14, .LC29[rip]	# tmp479,
 19298      000000
 19299 0078 EB66     		jmp	.L1728	#
 19300              	.LVL1141:
 19301 007a 660F1F44 		.p2align 4,,7
GAS LISTING /tmp/cc64mrzX.s 			page 516


 19301      0000
 19302              		.p2align 3
 19303              	.L1862:
1297:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\n"); usage(argv[0]); }
 19304              		.loc 1 1297 13 is_stmt 1 view .LVU6694
 19305              	# sieve_extend.c:1297:             if (++arg >= argc) { fprintf(stderr, "No verbose level specified
 19306              		.loc 1 1297 16 is_stmt 0 view .LVU6695
 19307 0080 83C301   		add	ebx, 1	# arg,
 19308              	.LVL1142:
 19309              		.loc 1 1297 16 view .LVU6696
 19310 0083 39DD     		cmp	ebp, ebx	# argc, arg
 19311 0085 0F8E9D0E 		jle	.L1860	#,
 19311      0000
1298:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option_verboselevel > 4) {
 19312              		.loc 1 1298 13 is_stmt 1 view .LVU6697
 19313              	# sieve_extend.c:1298:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option
 19314              		.loc 1 1298 28 is_stmt 0 view .LVU6698
 19315 008b 4D8D7C04 		lea	r15, 8[r12+rax]	# _16,
 19315      08
 19316              	# sieve_extend.c:1298:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option
 19317              		.loc 1 1298 17 view .LVU6699
 19318 0090 488D9424 		lea	rdx, 152[rsp]	# tmp301,
 19318      98000000 
 19319 0098 498B3F   		mov	rdi, QWORD PTR [r15]	#, *_16
 19320 009b 31C0     		xor	eax, eax	#
 19321 009d 488D3500 		lea	rsi, .LC31[rip]	#,
 19321      000000
 19322 00a4 E8000000 		call	__isoc99_sscanf@PLT	#
 19322      00
 19323              	.LVL1143:
 19324              	# sieve_extend.c:1298:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option
 19325              		.loc 1 1298 16 view .LVU6700
 19326 00a9 83F801   		cmp	eax, 1	# tmp526,
 19327 00ac 0F85E204 		jne	.L1733	#,
 19327      0000
 19328              	# sieve_extend.c:1298:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option
 19329              		.loc 1 1298 91 discriminator 1 view .LVU6701
 19330 00b2 8B942498 		mov	edx, DWORD PTR 152[rsp]	# option_verboselevel.16_19, option_verboselevel
 19330      000000
 19331              	# sieve_extend.c:1298:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option
 19332              		.loc 1 1298 68 discriminator 1 view .LVU6702
 19333 00b9 83FA04   		cmp	edx, 4	# option_verboselevel.16_19,
 19334 00bc 0F8FD204 		jg	.L1733	#,
 19334      0000
1299:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid measurement time: %s\n", argv[arg]); usage(argv[0])
1300:sieve_extend.c ****             }
1301:sieve_extend.c ****             printf("Verbose level set to %d\n",option_verboselevel);
 19335              		.loc 1 1301 13 is_stmt 1 view .LVU6703
 19336              	.LVL1144:
 19337              	.LBB1001:
 19338              	.LBI1001:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19339              		.loc 3 105 1 view .LVU6704
 19340              	.LBB1002:
 19341              		.loc 3 107 3 view .LVU6705
 19342              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19343              		.loc 3 107 10 is_stmt 0 view .LVU6706
GAS LISTING /tmp/cc64mrzX.s 			page 517


 19344 00c2 488D3500 		lea	rsi, .LC33[rip]	#,
 19344      000000
 19345 00c9 BF010000 		mov	edi, 1	#,
 19345      00
 19346 00ce 31C0     		xor	eax, eax	#
 19347 00d0 E8000000 		call	__printf_chk@PLT	#
 19347      00
 19348              	.LVL1145:
 19349              	.L1735:
 19350              		.loc 3 107 10 view .LVU6707
 19351              	.LBE1002:
 19352              	.LBE1001:
1294:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 19353              		.loc 1 1294 33 is_stmt 1 discriminator 2 view .LVU6708
 19354              	# sieve_extend.c:1294:     for (int arg=1; arg < argc; arg++) {
1294:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 19355              		.loc 1 1294 36 is_stmt 0 discriminator 2 view .LVU6709
 19356 00d5 83C301   		add	ebx, 1	# arg,
 19357              	.LVL1146:
1294:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 19358              		.loc 1 1294 21 is_stmt 1 discriminator 2 view .LVU6710
 19359              	# sieve_extend.c:1294:     for (int arg=1; arg < argc; arg++) {
1294:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 19360              		.loc 1 1294 5 is_stmt 0 discriminator 2 view .LVU6711
 19361 00d8 39DD     		cmp	ebp, ebx	# argc, arg
 19362 00da 0F8E0001 		jle	.L1861	#,
 19362      0000
 19363              	.LVL1147:
 19364              	.L1728:
1295:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 19365              		.loc 1 1295 9 is_stmt 1 view .LVU6712
 19366              	# sieve_extend.c:1295:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1295:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 19367              		.loc 1 1295 24 is_stmt 0 view .LVU6713
 19368 00e0 4863C3   		movsx	rax, ebx	# arg, arg
 19369              	# sieve_extend.c:1295:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1295:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 19370              		.loc 1 1295 13 view .LVU6714
 19371 00e3 41B90700 		mov	r9d, 7	# tmp290,
 19371      0000
 19372              	# sieve_extend.c:1295:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1295:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 19373              		.loc 1 1295 24 view .LVU6715
 19374 00e9 48C1E003 		sal	rax, 3	# _2,
 19375              	# sieve_extend.c:1295:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1295:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 19376              		.loc 1 1295 13 view .LVU6716
 19377 00ed 4C89EF   		mov	rdi, r13	# tmp289, tmp464
 19378              	# sieve_extend.c:1295:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1295:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 19379              		.loc 1 1295 24 view .LVU6717
 19380 00f0 4D8D3C04 		lea	r15, [r12+rax]	# _3,
 19381              	# sieve_extend.c:1295:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1295:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 19382              		.loc 1 1295 13 view .LVU6718
 19383 00f4 4C89C9   		mov	rcx, r9	# tmp490, tmp290
 19384 00f7 4D8B07   		mov	r8, QWORD PTR [r15]	# _4, *_3
GAS LISTING /tmp/cc64mrzX.s 			page 518


 19385 00fa 4C89C6   		mov	rsi, r8	# _4, _4
 19386 00fd F3A6     		repz cmpsb
 19387 00ff 0F97C2   		seta	dl	#, tmp291
 19388 0102 80DA00   		sbb	dl, 0	# _5
 19389              	# sieve_extend.c:1295:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1295:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 19390              		.loc 1 1295 12 view .LVU6719
 19391 0105 84D2     		test	dl, dl	# _5
 19392 0107 0F84A404 		je	.L1858	#,
 19392      0000
1296:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\n"); usage(argv[0]); }
 19393              		.loc 1 1296 14 is_stmt 1 view .LVU6720
 19394              	# sieve_extend.c:1296:         else if (strcmp(argv[arg], "--verbose")==0) {
1296:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\n"); usage(argv[0]); }
 19395              		.loc 1 1296 18 is_stmt 0 view .LVU6721
 19396 010d B90A0000 		mov	ecx, 10	# tmp296,
 19396      00
 19397 0112 4C89C6   		mov	rsi, r8	# _4, _4
 19398 0115 4C89F7   		mov	rdi, r14	# tmp295, tmp479
 19399 0118 F3A6     		repz cmpsb
 19400 011a 410F97C2 		seta	r10b	#, tmp297
 19401 011e 4180DA00 		sbb	r10b, 0	# _11
 19402              	# sieve_extend.c:1296:         else if (strcmp(argv[arg], "--verbose")==0) {
1296:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\n"); usage(argv[0]); }
 19403              		.loc 1 1296 17 view .LVU6722
 19404 0122 4584D2   		test	r10b, r10b	# _11
 19405 0125 0F8455FF 		je	.L1862	#,
 19405      FFFF
1302:sieve_extend.c ****         } 
1303:sieve_extend.c ****         else if (strcmp(argv[arg], "--check")==0) { option_check=1; }
 19406              		.loc 1 1303 14 is_stmt 1 view .LVU6723
 19407              	# sieve_extend.c:1303:         else if (strcmp(argv[arg], "--check")==0) { option_check=1; }
 19408              		.loc 1 1303 18 is_stmt 0 view .LVU6724
 19409 012b B9080000 		mov	ecx, 8	# tmp306,
 19409      00
 19410 0130 4C89C6   		mov	rsi, r8	# _4, _4
 19411 0133 488D3D00 		lea	rdi, .LC34[rip]	# tmp305,
 19411      000000
 19412 013a F3A6     		repz cmpsb
 19413 013c 410F97C3 		seta	r11b	#, tmp307
 19414 0140 4180DB00 		sbb	r11b, 0	# _23
 19415              	# sieve_extend.c:1303:         else if (strcmp(argv[arg], "--check")==0) { option_check=1; }
 19416              		.loc 1 1303 17 view .LVU6725
 19417 0144 4584DB   		test	r11b, r11b	# _23
 19418 0147 748C     		je	.L1735	#,
1304:sieve_extend.c ****         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
 19419              		.loc 1 1304 14 is_stmt 1 view .LVU6726
 19420              	# sieve_extend.c:1304:         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
 19421              		.loc 1 1304 18 is_stmt 0 view .LVU6727
 19422 0149 4C89C6   		mov	rsi, r8	# _4, _4
 19423 014c 488D3D00 		lea	rdi, .LC35[rip]	# tmp311,
 19423      000000
 19424 0153 4C89C9   		mov	rcx, r9	# tmp496, tmp290
 19425 0156 F3A6     		repz cmpsb
 19426 0158 0F97C2   		seta	dl	#, tmp313
 19427 015b 80DA00   		sbb	dl, 0	# _24
 19428              	# sieve_extend.c:1304:         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
GAS LISTING /tmp/cc64mrzX.s 			page 519


 19429              		.loc 1 1304 17 view .LVU6728
 19430 015e 84D2     		test	dl, dl	# _24
 19431 0160 0F855A01 		jne	.L1736	#,
 19431      0000
 19432              		.loc 1 1304 52 is_stmt 1 discriminator 1 view .LVU6729
 19433              	# sieve_extend.c:1304:         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
 19434              		.loc 1 1304 68 is_stmt 0 discriminator 1 view .LVU6730
 19435 0166 C784249C 		mov	DWORD PTR 156[rsp], 0	# option_tunelevel,
 19435      00000000 
 19435      000000
1305:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No tune level specified\n"); usage(argv[0]); }
 19436              		.loc 1 1305 13 is_stmt 1 discriminator 1 view .LVU6731
 19437              	# sieve_extend.c:1305:             if (++arg >= argc) { fprintf(stderr, "No tune level specified\n"
 19438              		.loc 1 1305 16 is_stmt 0 discriminator 1 view .LVU6732
 19439 0171 83C301   		add	ebx, 1	# arg,
 19440              	.LVL1148:
 19441              		.loc 1 1305 16 discriminator 1 view .LVU6733
 19442 0174 39DD     		cmp	ebp, ebx	# argc, arg
 19443 0176 0F8EEC0D 		jle	.L1863	#,
 19443      0000
1306:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tunelevel > 4) {
 19444              		.loc 1 1306 13 is_stmt 1 view .LVU6734
 19445              	# sieve_extend.c:1306:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tu
 19446              		.loc 1 1306 28 is_stmt 0 view .LVU6735
 19447 017c 4D8D7C04 		lea	r15, 8[r12+rax]	# _29,
 19447      08
 19448              	# sieve_extend.c:1306:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tu
 19449              		.loc 1 1306 17 view .LVU6736
 19450 0181 488D9424 		lea	rdx, 156[rsp]	# tmp317,
 19450      9C000000 
 19451 0189 498B3F   		mov	rdi, QWORD PTR [r15]	#, *_29
 19452 018c 31C0     		xor	eax, eax	#
 19453 018e 488D3500 		lea	rsi, .LC31[rip]	#,
 19453      000000
 19454 0195 E8000000 		call	__isoc99_sscanf@PLT	#
 19454      00
 19455              	.LVL1149:
 19456              	# sieve_extend.c:1306:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tu
 19457              		.loc 1 1306 16 view .LVU6737
 19458 019a 83F801   		cmp	eax, 1	# tmp527,
 19459 019d 0F85A70D 		jne	.L1738	#,
 19459      0000
 19460              	# sieve_extend.c:1306:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tu
 19461              		.loc 1 1306 85 discriminator 1 view .LVU6738
 19462 01a3 8B94249C 		mov	edx, DWORD PTR 156[rsp]	# option_tunelevel.20_32, option_tunelevel
 19462      000000
 19463              	# sieve_extend.c:1306:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tu
 19464              		.loc 1 1306 65 discriminator 1 view .LVU6739
 19465 01aa 83FA04   		cmp	edx, 4	# option_tunelevel.20_32,
 19466 01ad 0F8F970D 		jg	.L1738	#,
 19466      0000
1307:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid tune level: %s\n", argv[arg]); usage(argv[0]);
1308:sieve_extend.c ****             }
1309:sieve_extend.c ****             printf("Tune level set to %d\n",option_tunelevel);
 19467              		.loc 1 1309 13 is_stmt 1 view .LVU6740
 19468              	.LVL1150:
 19469              	.LBB1003:
GAS LISTING /tmp/cc64mrzX.s 			page 520


 19470              	.LBI1003:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19471              		.loc 3 105 1 view .LVU6741
 19472              	.LBB1004:
 19473              		.loc 3 107 3 view .LVU6742
 19474              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19475              		.loc 3 107 10 is_stmt 0 view .LVU6743
 19476 01b3 31C0     		xor	eax, eax	#
 19477 01b5 488D3500 		lea	rsi, .LC38[rip]	#,
 19477      000000
 19478 01bc BF010000 		mov	edi, 1	#,
 19478      00
 19479              	.LBE1004:
 19480              	.LBE1003:
 19481              	# sieve_extend.c:1294:     for (int arg=1; arg < argc; arg++) {
1294:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 19482              		.loc 1 1294 36 view .LVU6744
 19483 01c1 83C301   		add	ebx, 1	# arg,
 19484              	.LVL1151:
 19485              	.LBB1006:
 19486              	.LBB1005:
 19487              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19488              		.loc 3 107 10 view .LVU6745
 19489 01c4 E8000000 		call	__printf_chk@PLT	#
 19489      00
 19490              	.LVL1152:
 19491              		.loc 3 107 10 view .LVU6746
 19492              	.LBE1005:
 19493              	.LBE1006:
1294:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 19494              		.loc 1 1294 33 is_stmt 1 view .LVU6747
1294:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 19495              		.loc 1 1294 21 view .LVU6748
 19496              	# sieve_extend.c:1294:     for (int arg=1; arg < argc; arg++) {
1294:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 19497              		.loc 1 1294 5 is_stmt 0 view .LVU6749
 19498 01c9 39DD     		cmp	ebp, ebx	# argc, arg
 19499 01cb 0F8F0FFF 		jg	.L1728	#,
 19499      FFFF
 19500 01d1 66662E0F 		.p2align 4
 19500      1F840000 
 19500      0000000F 
 19500      1F4000
 19501              		.p2align 3
 19502              	.L1861:
1294:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 19503              		.loc 1 1294 5 view .LVU6750
 19504              	.LBE1025:
1310:sieve_extend.c ****         }
1311:sieve_extend.c ****         else if (strcmp(argv[arg], "--show")==0) { option_showMaxFactor=0;
1312:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
1313:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
1314:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
1315:sieve_extend.c ****             }
1316:sieve_extend.c ****             printf("Show maximum set to %ju\n",(uintmax_t)option_showMaxFactor);
1317:sieve_extend.c ****         }
1318:sieve_extend.c ****         else if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_maxFactor) != 1) {
GAS LISTING /tmp/cc64mrzX.s 			page 521


1319:sieve_extend.c ****             fprintf(stderr, "Invalid size %s\n",argv[arg]); usage(argv[0]); 
1320:sieve_extend.c ****             printf("Maximum set to %ju\n",(uintmax_t)option_maxFactor);
1321:sieve_extend.c ****         }
1322:sieve_extend.c ****     }
1323:sieve_extend.c **** 
1324:sieve_extend.c ****     if (option_runonce) { // used for stats and debugging
 19505              		.loc 1 1324 5 is_stmt 1 view .LVU6751
1325:sieve_extend.c ****         struct sieve_state* sieve_instance = sieve(option_maxFactor, default_blocksize);
1326:sieve_extend.c ****         printf("\nResult set:\n");
1327:sieve_extend.c ****         show_primes(sieve_instance, option_showMaxFactor);
1328:sieve_extend.c ****         int valid = validatePrimeCount(sieve_instance,3);
1329:sieve_extend.c ****         if (!valid) printf("The sieve is NOT valid\n");
1330:sieve_extend.c ****         else printf("The sieve is VALID\n");
1331:sieve_extend.c ****         delete_sieve(sieve_instance);
1332:sieve_extend.c ****         exit(0);
1333:sieve_extend.c ****     }
1334:sieve_extend.c **** 
1335:sieve_extend.c ****     struct timespec start_time,end_time;
 19506              		.loc 1 1335 5 view .LVU6752
1336:sieve_extend.c **** 
1337:sieve_extend.c ****     if (option_check) {
 19507              		.loc 1 1337 5 view .LVU6753
1338:sieve_extend.c ****         // Count the number of primes and validate the result
1339:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Validating... ");
 19508              		.loc 1 1339 9 view .LVU6754
 19509              	# sieve_extend.c:1339:         if (option_verboselevel >= 1) printf("Validating... ");
 19510              		.loc 1 1339 12 is_stmt 0 view .LVU6755
 19511 01e0 8BAC2498 		mov	ebp, DWORD PTR 152[rsp]	#, option_verboselevel
 19511      000000
 19512              	.LVL1153:
 19513              		.loc 1 1339 12 view .LVU6756
 19514 01e7 85ED     		test	ebp, ebp	#
 19515 01e9 0F8F8D03 		jg	.L1744	#,
 19515      0000
 19516              	.LVL1154:
 19517              	.L1729:
1340:sieve_extend.c ****         if (option_verboselevel >= 2) printf("\n");
 19518              		.loc 1 1340 9 is_stmt 1 view .LVU6757
 19519              	# sieve_extend.c:1340:         if (option_verboselevel >= 2) printf("\n");
 19520              		.loc 1 1340 12 is_stmt 0 view .LVU6758
 19521 01ef 83BC2498 		cmp	DWORD PTR 152[rsp], 1	# option_verboselevel,
 19521      00000001 
 19522 01f7 7E0A     		jle	.L1745	#,
 19523              		.loc 1 1340 39 is_stmt 1 view .LVU6759
 19524              	.LVL1155:
 19525              	.LBB1026:
 19526              	.LBI1026:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19527              		.loc 3 105 1 view .LVU6760
 19528              	.LBB1027:
 19529              		.loc 3 107 3 view .LVU6761
 19530              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19531              		.loc 3 107 10 is_stmt 0 view .LVU6762
 19532 01f9 BF0A0000 		mov	edi, 10	#,
 19532      00
 19533 01fe E8000000 		call	putchar@PLT	#
 19533      00
GAS LISTING /tmp/cc64mrzX.s 			page 522


 19534              	.LVL1156:
 19535              	.L1745:
 19536              		.loc 3 107 10 view .LVU6763
 19537              	.LBE1027:
 19538              	.LBE1026:
 19539              	.LBB1028:
 19540              	# sieve_extend.c:1294:     for (int arg=1; arg < argc; arg++) {
1294:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 19541              		.loc 1 1294 14 view .LVU6764
 19542 0203 C7442420 		mov	DWORD PTR 32[rsp], 7	# %sfp,
 19542      07000000 
 19543 020b 41BD6400 		mov	r13d, 100	# sieveSize_check,
 19543      0000
 19544              	.LBE1028:
 19545              	.LBB1029:
 19546              	.LBB1030:
 19547              	.LBB1031:
 19548              	.LBB1032:
 19549              	.LBB1033:
 19550              	.LBB1034:
 19551              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19552              		.loc 3 107 10 view .LVU6765
 19553 0211 4C8D3500 		lea	r14, .LC46[rip]	# tmp478,
 19553      000000
 19554              	.L1752:
 19555              	.LVL1157:
 19556              		.loc 3 107 10 view .LVU6766
 19557              	.LBE1034:
 19558              	.LBE1033:
 19559              	.LBE1032:
 19560              	.LBE1031:
1341:sieve_extend.c **** 
1342:sieve_extend.c ****         // validate algorithm - run one time for all sizes
1343:sieve_extend.c ****         for (counter_t sieveSize_check = 100; sieveSize_check <= 100000000; sieveSize_check *=10) {
1344:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 19561              		.loc 1 1344 13 is_stmt 1 view .LVU6767
 19562              	# sieve_extend.c:1344:             if (option_verboselevel >= 2) printf("...Checking size %ju ...",
 19563              		.loc 1 1344 37 is_stmt 0 view .LVU6768
 19564 0218 8B842498 		mov	eax, DWORD PTR 152[rsp]	# prephitmp_326, option_verboselevel
 19564      000000
 19565              	# sieve_extend.c:1344:             if (option_verboselevel >= 2) printf("...Checking size %ju ...",
 19566              		.loc 1 1344 16 view .LVU6769
 19567 021f 83F801   		cmp	eax, 1	# prephitmp_326,
 19568 0222 7E1D     		jle	.L1746	#,
 19569              		.loc 1 1344 43 is_stmt 1 view .LVU6770
 19570              	.LVL1158:
 19571              	.LBB1050:
 19572              	.LBI1050:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19573              		.loc 3 105 1 view .LVU6771
 19574              	.LBB1051:
 19575              		.loc 3 107 3 view .LVU6772
 19576              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19577              		.loc 3 107 10 is_stmt 0 view .LVU6773
 19578 0224 4C89EA   		mov	rdx, r13	#, sieveSize_check
 19579 0227 488D3500 		lea	rsi, .LC45[rip]	#,
 19579      000000
GAS LISTING /tmp/cc64mrzX.s 			page 523


 19580 022e BF010000 		mov	edi, 1	#,
 19580      00
 19581 0233 31C0     		xor	eax, eax	#
 19582 0235 E8000000 		call	__printf_chk@PLT	#
 19582      00
 19583              	.LVL1159:
 19584 023a 8B842498 		mov	eax, DWORD PTR 152[rsp]	# prephitmp_326, option_verboselevel
 19584      000000
 19585              	.LVL1160:
 19586              	.L1746:
 19587              		.loc 3 107 10 view .LVU6774
 19588              	.LBE1051:
 19589              	.LBE1050:
 19590              	.LBE1030:
 19591              	.LBE1029:
 19592              	.LBB1060:
 19593              	# sieve_extend.c:1294:     for (int arg=1; arg < argc; arg++) {
1294:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 19594              		.loc 1 1294 14 view .LVU6775
 19595 0241 41BC0500 		mov	r12d, 5	# ivtmp_106,
 19595      0000
 19596 0247 BD000400 		mov	ebp, 1024	# blocksize_bits,
 19596      00
 19597 024c EB56     		jmp	.L1750	#
 19598              	.LVL1161:
 19599 024e 6690     		.p2align 4,,7
 19600              		.p2align 3
 19601              	.L1747:
1294:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 19602              		.loc 1 1294 14 view .LVU6776
 19603              	.LBE1060:
 19604              	.LBB1061:
 19605              	.LBB1057:
 19606              	.LBB1052:
 19607              	.LBB1045:
1345:sieve_extend.c ****             struct sieve_state *sieve_instance_check;
1346:sieve_extend.c ****             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; blocksize_bits *= 2) {
1347:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
1348:sieve_extend.c ****                 sieve_instance_check = sieve(sieveSize_check, blocksize_bits);
 19608              		.loc 1 1348 17 is_stmt 1 view .LVU6777
 19609              	# sieve_extend.c:1348:                 sieve_instance_check = sieve(sieveSize_check, blocksize_bits
 19610              		.loc 1 1348 40 is_stmt 0 view .LVU6778
 19611 0250 4889EE   		mov	rsi, rbp	#, blocksize_bits
 19612 0253 4C89EF   		mov	rdi, r13	#, sieveSize_check
 19613 0256 E8000000 		call	sieve	#
 19613      00
 19614              	.LVL1162:
 19615              	# sieve_extend.c:1349:                 int valid = validatePrimeCount(sieve_instance_check,option_v
1349:sieve_extend.c ****                 int valid = validatePrimeCount(sieve_instance_check,option_verboselevel);
 19616              		.loc 1 1349 29 view .LVU6779
 19617 025b 8BB42498 		mov	esi, DWORD PTR 152[rsp]	#, option_verboselevel
 19617      000000
 19618              	# sieve_extend.c:1348:                 sieve_instance_check = sieve(sieveSize_check, blocksize_bits
1348:sieve_extend.c ****                 int valid = validatePrimeCount(sieve_instance_check,option_verboselevel);
 19619              		.loc 1 1348 40 view .LVU6780
 19620 0262 4989C7   		mov	r15, rax	# sieve_instance_check, tmp530
 19621              	.LVL1163:
GAS LISTING /tmp/cc64mrzX.s 			page 524


 19622              		.loc 1 1349 17 is_stmt 1 view .LVU6781
 19623              	# sieve_extend.c:1349:                 int valid = validatePrimeCount(sieve_instance_check,option_v
 19624              		.loc 1 1349 29 is_stmt 0 view .LVU6782
 19625 0265 4889C7   		mov	rdi, rax	#, sieve_instance_check
 19626 0268 E8000000 		call	validatePrimeCount	#
 19626      00
 19627              	.LVL1164:
 19628              	.LBB1036:
 19629              	.LBB1037:
 19630              	# sieve_extend.c:116:     free(sieve->bitarray);
 116:sieve_extend.c ****     free(sieve);
 19631              		.loc 1 116 5 view .LVU6783
 19632 026d 498B3F   		mov	rdi, QWORD PTR [r15]	#, sieve_instance_check_128->bitarray
 19633              	.LBE1037:
 19634              	.LBE1036:
 19635              	# sieve_extend.c:1349:                 int valid = validatePrimeCount(sieve_instance_check,option_v
 19636              		.loc 1 1349 29 view .LVU6784
 19637 0270 89C3     		mov	ebx, eax	# valid, tmp531
 19638              	.LVL1165:
1350:sieve_extend.c ****                 delete_sieve(sieve_instance_check);
 19639              		.loc 1 1350 17 is_stmt 1 view .LVU6785
 19640              	.LBB1039:
 19641              	.LBI1036:
 115:sieve_extend.c ****     free(sieve->bitarray);
 19642              		.loc 1 115 13 view .LVU6786
 19643              	.LBB1038:
 116:sieve_extend.c ****     free(sieve);
 19644              		.loc 1 116 5 view .LVU6787
 19645 0272 E8000000 		call	free@PLT	#
 19645      00
 19646              	.LVL1166:
 117:sieve_extend.c **** }
 19647              		.loc 1 117 5 view .LVU6788
 19648 0277 4C89FF   		mov	rdi, r15	#, sieve_instance_check
 19649 027a E8000000 		call	free@PLT	#
 19649      00
 19650              	.LVL1167:
 117:sieve_extend.c **** }
 19651              		.loc 1 117 5 is_stmt 0 view .LVU6789
 19652              	.LBE1038:
 19653              	.LBE1039:
1351:sieve_extend.c ****                 if (!valid) return 0; else if (option_verboselevel >= 3) printf("valid;");
 19654              		.loc 1 1351 17 is_stmt 1 view .LVU6790
 19655              	# sieve_extend.c:1351:                 if (!valid) return 0; else if (option_verboselevel >= 3) pri
 19656              		.loc 1 1351 20 is_stmt 0 view .LVU6791
 19657 027f 85DB     		test	ebx, ebx	# valid
 19658 0281 0F84C902 		je	.L1788	#,
 19658      0000
 19659              		.loc 1 1351 44 is_stmt 1 discriminator 2 view .LVU6792
 19660              	# sieve_extend.c:1351:                 if (!valid) return 0; else if (option_verboselevel >= 3) pri
 19661              		.loc 1 1351 68 is_stmt 0 discriminator 2 view .LVU6793
 19662 0287 8B842498 		mov	eax, DWORD PTR 152[rsp]	# prephitmp_326, option_verboselevel
 19662      000000
 19663              	# sieve_extend.c:1351:                 if (!valid) return 0; else if (option_verboselevel >= 3) pri
 19664              		.loc 1 1351 47 discriminator 2 view .LVU6794
 19665 028e 83F802   		cmp	eax, 2	# prephitmp_326,
 19666 0291 0F8FE900 		jg	.L1864	#,
GAS LISTING /tmp/cc64mrzX.s 			page 525


 19666      0000
 19667              	.LBE1045:
1346:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 19668              		.loc 1 1346 75 is_stmt 1 discriminator 2 view .LVU6795
 19669              	# sieve_extend.c:1346:             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; bl
1346:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 19670              		.loc 1 1346 90 is_stmt 0 discriminator 2 view .LVU6796
 19671 0297 4801ED   		add	rbp, rbp	# blocksize_bits
 19672              	.LVL1168:
1346:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 19673              		.loc 1 1346 49 is_stmt 1 discriminator 2 view .LVU6797
 19674              	# sieve_extend.c:1346:             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; bl
1346:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 19675              		.loc 1 1346 13 is_stmt 0 discriminator 2 view .LVU6798
 19676 029a 4183EC01 		sub	r12d, 1	# ivtmp_106,
 19677 029e 0F840301 		je	.L1865	#,
 19677      0000
 19678              	.LVL1169:
 19679              	.L1750:
 19680              	.LBB1046:
1347:sieve_extend.c ****                 sieve_instance_check = sieve(sieveSize_check, blocksize_bits);
 19681              		.loc 1 1347 17 is_stmt 1 view .LVU6799
 19682              	# sieve_extend.c:1347:                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uint
1347:sieve_extend.c ****                 sieve_instance_check = sieve(sieveSize_check, blocksize_bits);
 19683              		.loc 1 1347 20 is_stmt 0 view .LVU6800
 19684 02a4 83F802   		cmp	eax, 2	# prephitmp_326,
 19685 02a7 7EA7     		jle	.L1747	#,
1347:sieve_extend.c ****                 sieve_instance_check = sieve(sieveSize_check, blocksize_bits);
 19686              		.loc 1 1347 47 is_stmt 1 view .LVU6801
 19687              	.LVL1170:
 19688              	.LBB1040:
 19689              	.LBI1033:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19690              		.loc 3 105 1 view .LVU6802
 19691              	.LBB1035:
 19692              		.loc 3 107 3 view .LVU6803
 19693              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19694              		.loc 3 107 10 is_stmt 0 view .LVU6804
 19695 02a9 4889EA   		mov	rdx, rbp	#, blocksize_bits
 19696 02ac 4C89F6   		mov	rsi, r14	#, tmp478
 19697 02af BF010000 		mov	edi, 1	#,
 19697      00
 19698 02b4 31C0     		xor	eax, eax	#
 19699 02b6 E8000000 		call	__printf_chk@PLT	#
 19699      00
 19700              	.LVL1171:
 19701 02bb EB93     		jmp	.L1747	#
 19702              	.LVL1172:
 19703 02bd 0F1F00   		.p2align 4,,7
 19704              		.p2align 3
 19705              	.L1736:
 19706              		.loc 3 107 10 view .LVU6805
 19707              	.LBE1035:
 19708              	.LBE1040:
 19709              	.LBE1046:
 19710              	.LBE1052:
 19711              	.LBE1057:
GAS LISTING /tmp/cc64mrzX.s 			page 526


 19712              	.LBE1061:
 19713              	.LBB1062:
1311:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 19714              		.loc 1 1311 14 is_stmt 1 view .LVU6806
 19715              	# sieve_extend.c:1311:         else if (strcmp(argv[arg], "--show")==0) { option_showMaxFactor=0;
1311:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 19716              		.loc 1 1311 18 is_stmt 0 view .LVU6807
 19717 02c0 4C89C9   		mov	rcx, r9	# tmp290, tmp290
 19718 02c3 4C89C6   		mov	rsi, r8	# _4, _4
 19719 02c6 488D3D00 		lea	rdi, .LC39[rip]	# tmp321,
 19719      000000
 19720 02cd F3A6     		repz cmpsb
 19721 02cf 410F97C1 		seta	r9b	#, tmp323
 19722 02d3 4180D900 		sbb	r9b, 0	# _36
 19723              	# sieve_extend.c:1311:         else if (strcmp(argv[arg], "--show")==0) { option_showMaxFactor=0;
1311:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 19724              		.loc 1 1311 17 view .LVU6808
 19725 02d7 4584C9   		test	r9b, r9b	# _36
 19726 02da 756C     		jne	.L1740	#,
1311:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 19727              		.loc 1 1311 52 is_stmt 1 discriminator 1 view .LVU6809
 19728              	# sieve_extend.c:1311:         else if (strcmp(argv[arg], "--show")==0) { option_showMaxFactor=0;
1311:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 19729              		.loc 1 1311 72 is_stmt 0 discriminator 1 view .LVU6810
 19730 02dc 48C78424 		mov	QWORD PTR 168[rsp], 0	# option_showMaxFactor,
 19730      A8000000 
 19730      00000000 
1312:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 19731              		.loc 1 1312 13 is_stmt 1 discriminator 1 view .LVU6811
 19732              	# sieve_extend.c:1312:             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\
1312:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 19733              		.loc 1 1312 16 is_stmt 0 discriminator 1 view .LVU6812
 19734 02e8 83C301   		add	ebx, 1	# arg,
 19735              	.LVL1173:
1312:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 19736              		.loc 1 1312 16 discriminator 1 view .LVU6813
 19737 02eb 39DD     		cmp	ebp, ebx	# argc, arg
 19738 02ed 0F8EA00C 		jle	.L1866	#,
 19738      0000
1313:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 19739              		.loc 1 1313 13 is_stmt 1 view .LVU6814
 19740              	# sieve_extend.c:1313:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) 
1313:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 19741              		.loc 1 1313 28 is_stmt 0 view .LVU6815
 19742 02f3 4D8D7C04 		lea	r15, 8[r12+rax]	# _41,
 19742      08
 19743              	# sieve_extend.c:1313:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) 
1313:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 19744              		.loc 1 1313 17 view .LVU6816
 19745 02f8 488D9424 		lea	rdx, 168[rsp]	# tmp327,
 19745      A8000000 
 19746 0300 498B3F   		mov	rdi, QWORD PTR [r15]	#, *_41
 19747 0303 31C0     		xor	eax, eax	#
 19748 0305 488D3500 		lea	rsi, .LC41[rip]	#,
 19748      000000
 19749 030c E8000000 		call	__isoc99_sscanf@PLT	#
 19749      00
GAS LISTING /tmp/cc64mrzX.s 			page 527


 19750              	.LVL1174:
 19751              	# sieve_extend.c:1313:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) 
1313:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 19752              		.loc 1 1313 16 view .LVU6817
 19753 0311 83F801   		cmp	eax, 1	# tmp528,
 19754 0314 0F853F0C 		jne	.L1742	#,
 19754      0000
 19755              	# sieve_extend.c:1313:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) 
1313:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 19756              		.loc 1 1313 106 discriminator 1 view .LVU6818
 19757 031a 488B9424 		mov	rdx, QWORD PTR 168[rsp]	# option_showMaxFactor.24_44, option_showMaxFactor
 19757      A8000000 
 19758              	# sieve_extend.c:1313:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) 
1313:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 19759              		.loc 1 1313 82 discriminator 1 view .LVU6819
 19760 0322 483B9424 		cmp	rdx, QWORD PTR 160[rsp]	# option_showMaxFactor.24_44, option_maxFactor
 19760      A0000000 
 19761 032a 0F87290C 		ja	.L1742	#,
 19761      0000
1316:sieve_extend.c ****         }
 19762              		.loc 1 1316 13 is_stmt 1 view .LVU6820
 19763              	.LVL1175:
 19764              	.LBB1007:
 19765              	.LBI1007:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19766              		.loc 3 105 1 view .LVU6821
 19767              	.LBB1008:
 19768              		.loc 3 107 3 view .LVU6822
 19769              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19770              		.loc 3 107 10 is_stmt 0 view .LVU6823
 19771 0330 488D3500 		lea	rsi, .LC43[rip]	#,
 19771      000000
 19772 0337 BF010000 		mov	edi, 1	#,
 19772      00
 19773 033c 31C0     		xor	eax, eax	#
 19774 033e E8000000 		call	__printf_chk@PLT	#
 19774      00
 19775              	.LVL1176:
 19776 0343 E98DFDFF 		jmp	.L1735	#
 19776      FF
 19777              	.LVL1177:
 19778              		.p2align 4,,7
 19779              		.p2align 3
 19780              	.L1740:
 19781              		.loc 3 107 10 view .LVU6824
 19782              	.LBE1008:
 19783              	.LBE1007:
1318:sieve_extend.c ****             fprintf(stderr, "Invalid size %s\n",argv[arg]); usage(argv[0]); 
 19784              		.loc 1 1318 14 is_stmt 1 view .LVU6825
 19785              	# sieve_extend.c:1318:         else if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_maxFactor) != 
1318:sieve_extend.c ****             fprintf(stderr, "Invalid size %s\n",argv[arg]); usage(argv[0]); 
 19786              		.loc 1 1318 18 is_stmt 0 view .LVU6826
 19787 0348 31C0     		xor	eax, eax	#
 19788 034a 488D9424 		lea	rdx, 160[rsp]	# tmp329,
 19788      A0000000 
 19789 0352 488D3500 		lea	rsi, .LC41[rip]	#,
 19789      000000
GAS LISTING /tmp/cc64mrzX.s 			page 528


 19790 0359 4C89C7   		mov	rdi, r8	#, _4
 19791 035c E8000000 		call	__isoc99_sscanf@PLT	#
 19791      00
 19792              	.LVL1178:
 19793              	# sieve_extend.c:1318:         else if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_maxFactor) != 
1318:sieve_extend.c ****             fprintf(stderr, "Invalid size %s\n",argv[arg]); usage(argv[0]); 
 19794              		.loc 1 1318 17 view .LVU6827
 19795 0361 83F801   		cmp	eax, 1	# tmp529,
 19796 0364 0F846BFD 		je	.L1735	#,
 19796      FFFF
1319:sieve_extend.c ****             printf("Maximum set to %ju\n",(uintmax_t)option_maxFactor);
 19797              		.loc 1 1319 13 is_stmt 1 view .LVU6828
 19798              	.LVL1179:
 19799              	.LBB1009:
 19800              	.LBI1009:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19801              		.loc 3 98 1 view .LVU6829
 19802              	.LBB1010:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19803              		.loc 3 100 3 view .LVU6830
 19804              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19805              		.loc 3 100 10 is_stmt 0 view .LVU6831
 19806 036a 498B0F   		mov	rcx, QWORD PTR [r15]	#, *_3
 19807 036d 488D1500 		lea	rdx, .LC44[rip]	#,
 19807      000000
 19808 0374 E9250200 		jmp	.L1857	#
 19808      00
 19809              	.LVL1180:
 19810 0379 0F1F8000 		.p2align 4,,7
 19810      000000
 19811              		.p2align 3
 19812              	.L1864:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19813              		.loc 3 100 10 view .LVU6832
 19814              	.LBE1010:
 19815              	.LBE1009:
 19816              	.LBE1062:
 19817              	.LBB1063:
 19818              	.LBB1058:
 19819              	.LBB1053:
 19820              	.LBB1047:
 19821              		.loc 1 1351 74 is_stmt 1 view .LVU6833
 19822              	.LBB1041:
 19823              	.LBI1041:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19824              		.loc 3 105 1 view .LVU6834
 19825              	.LBB1042:
 19826              		.loc 3 107 3 view .LVU6835
 19827              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19828              		.loc 3 107 10 is_stmt 0 view .LVU6836
 19829 0380 31C0     		xor	eax, eax	#
 19830 0382 488D3500 		lea	rsi, .LC47[rip]	#,
 19830      000000
 19831 0389 BF010000 		mov	edi, 1	#,
 19831      00
 19832              	.LBE1042:
GAS LISTING /tmp/cc64mrzX.s 			page 529


 19833              	.LBE1041:
 19834              	.LBE1047:
 19835              	# sieve_extend.c:1346:             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; bl
1346:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 19836              		.loc 1 1346 90 view .LVU6837
 19837 038e 4801ED   		add	rbp, rbp	# blocksize_bits
 19838              	.LVL1181:
 19839              	.LBB1048:
 19840              	.LBB1044:
 19841              	.LBB1043:
 19842              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19843              		.loc 3 107 10 view .LVU6838
 19844 0391 E8000000 		call	__printf_chk@PLT	#
 19844      00
 19845              	.LVL1182:
 19846 0396 8B842498 		mov	eax, DWORD PTR 152[rsp]	# prephitmp_326, option_verboselevel
 19846      000000
 19847              	.LVL1183:
 19848              		.loc 3 107 10 view .LVU6839
 19849              	.LBE1043:
 19850              	.LBE1044:
 19851              	.LBE1048:
1346:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 19852              		.loc 1 1346 75 is_stmt 1 view .LVU6840
1346:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 19853              		.loc 1 1346 49 view .LVU6841
 19854              	# sieve_extend.c:1346:             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; bl
1346:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 19855              		.loc 1 1346 13 is_stmt 0 view .LVU6842
 19856 039d 4183EC01 		sub	r12d, 1	# ivtmp_106,
 19857 03a1 0F85FDFE 		jne	.L1750	#,
 19857      FFFF
 19858              	.L1865:
1346:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 19859              		.loc 1 1346 13 view .LVU6843
 19860              	.LBE1053:
1352:sieve_extend.c ****             }
1353:sieve_extend.c ****             if (option_verboselevel >= 2) printf("\n");
 19861              		.loc 1 1353 13 is_stmt 1 view .LVU6844
 19862              	# sieve_extend.c:1353:             if (option_verboselevel >= 2) printf("\n");
 19863              		.loc 1 1353 16 is_stmt 0 view .LVU6845
 19864 03a7 83F801   		cmp	eax, 1	# prephitmp_326,
 19865 03aa 7E0A     		jle	.L1751	#,
 19866              		.loc 1 1353 43 is_stmt 1 view .LVU6846
 19867              	.LVL1184:
 19868              	.LBB1054:
 19869              	.LBI1054:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19870              		.loc 3 105 1 view .LVU6847
 19871              	.LBB1055:
 19872              		.loc 3 107 3 view .LVU6848
 19873              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19874              		.loc 3 107 10 is_stmt 0 view .LVU6849
 19875 03ac BF0A0000 		mov	edi, 10	#,
 19875      00
 19876 03b1 E8000000 		call	putchar@PLT	#
 19876      00
GAS LISTING /tmp/cc64mrzX.s 			page 530


 19877              	.LVL1185:
 19878              	.L1751:
 19879              		.loc 3 107 10 view .LVU6850
 19880              	.LBE1055:
 19881              	.LBE1054:
 19882              	.LBE1058:
1343:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 19883              		.loc 1 1343 77 is_stmt 1 discriminator 2 view .LVU6851
 19884              	# sieve_extend.c:1343:         for (counter_t sieveSize_check = 100; sieveSize_check <= 100000000; 
1343:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 19885              		.loc 1 1343 93 is_stmt 0 discriminator 2 view .LVU6852
 19886 03b6 4F8D6CAD 		lea	r13, 0[r13+r13*4]	# tmp335,
 19886      00
 19887              	.LVL1186:
1343:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 19888              		.loc 1 1343 93 discriminator 2 view .LVU6853
 19889 03bb 4D01ED   		add	r13, r13	# sieveSize_check
 19890              	.LVL1187:
1343:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 19891              		.loc 1 1343 47 is_stmt 1 discriminator 2 view .LVU6854
 19892              	# sieve_extend.c:1343:         for (counter_t sieveSize_check = 100; sieveSize_check <= 100000000; 
1343:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 19893              		.loc 1 1343 9 is_stmt 0 discriminator 2 view .LVU6855
 19894 03be 836C2420 		sub	DWORD PTR 32[rsp], 1	# %sfp,
 19894      01
 19895 03c3 0F854FFE 		jne	.L1752	#,
 19895      FFFF
 19896              	.LBE1063:
1354:sieve_extend.c ****         }
1355:sieve_extend.c ****         if (option_verboselevel >= 1) printf("...Valid algorithm\n");
 19897              		.loc 1 1355 9 is_stmt 1 view .LVU6856
 19898              	# sieve_extend.c:1355:         if (option_verboselevel >= 1) printf("...Valid algorithm\n");
 19899              		.loc 1 1355 12 is_stmt 0 view .LVU6857
 19900 03c9 83BC2498 		cmp	DWORD PTR 152[rsp], 0	# option_verboselevel,
 19900      00000000 
 19901 03d1 0F8F4E09 		jg	.L1867	#,
 19901      0000
1356:sieve_extend.c ****     }
1357:sieve_extend.c ****     
1358:sieve_extend.c ****     counter_t best_blocksize_bits = default_blocksize;
 19902              		.loc 1 1358 5 is_stmt 1 view .LVU6858
 19903              	.LVL1188:
1359:sieve_extend.c ****     if (option_tunelevel) {
 19904              		.loc 1 1359 5 view .LVU6859
 19905              	# sieve_extend.c:1359:     if (option_tunelevel) {
 19906              		.loc 1 1359 9 is_stmt 0 view .LVU6860
 19907 03d7 448B8424 		mov	r8d, DWORD PTR 156[rsp]	# option_tunelevel.40_380, option_tunelevel
 19907      9C000000 
 19908              	# sieve_extend.c:1358:     counter_t best_blocksize_bits = default_blocksize;
1358:sieve_extend.c ****     if (option_tunelevel) {
 19909              		.loc 1 1358 15 view .LVU6861
 19910 03df 41BE00FC 		mov	r14d, 261120	# best_result$blocksize_bits,
 19910      0300
 19911              	# sieve_extend.c:1359:     if (option_tunelevel) {
 19912              		.loc 1 1359 8 view .LVU6862
 19913 03e5 4585C0   		test	r8d, r8d	# option_tunelevel.40_380
 19914 03e8 0F858C02 		jne	.L1868	#,
GAS LISTING /tmp/cc64mrzX.s 			page 531


 19914      0000
 19915              	.LVL1189:
 19916              	.L1781:
 19917              	.LBB1064:
1360:sieve_extend.c ****         tuning_result_type tuning_result = tune(option_tunelevel, option_maxFactor, option_verbosel
1361:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
1362:sieve_extend.c ****         global_MEDIUMSTEP_FASTER = tuning_result.mediumstep_faster;
1363:sieve_extend.c ****         global_VECTORSTEP_FASTER = tuning_result.vectorstep_faster;
1364:sieve_extend.c ****         best_blocksize_bits = tuning_result.blocksize_bits;
1365:sieve_extend.c ****     }
1366:sieve_extend.c **** 
1367:sieve_extend.c ****     double max_time = default_sieve_duration;
1368:sieve_extend.c ****     if (best_blocksize_bits > 0) {
1369:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
1370:sieve_extend.c ****         counter_t passes = 0;
 19918              		.loc 1 1370 9 is_stmt 1 view .LVU6863
1371:sieve_extend.c ****         counter_t blocksize_bits = best_blocksize_bits;
 19919              		.loc 1 1371 9 view .LVU6864
1372:sieve_extend.c ****         double elapsed_time = 0;
 19920              		.loc 1 1372 9 view .LVU6865
1373:sieve_extend.c ****         struct sieve_state *sieve_instance;
 19921              		.loc 1 1373 9 view .LVU6866
1374:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&start_time);
 19922              		.loc 1 1374 9 view .LVU6867
 19923 03ee 488DB424 		lea	rsi, 176[rsp]	# tmp438,
 19923      B0000000 
 19924 03f6 BF010000 		mov	edi, 1	#,
 19924      00
 19925 03fb E8000000 		call	clock_gettime@PLT	#
 19925      00
 19926              	.LVL1190:
1375:sieve_extend.c ****         while (elapsed_time <= max_time) {
 19927              		.loc 1 1375 9 view .LVU6868
 19928              		.loc 1 1375 15 view .LVU6869
 19929              	# sieve_extend.c:1370:         counter_t passes = 0;
1370:sieve_extend.c ****         counter_t blocksize_bits = best_blocksize_bits;
 19930              		.loc 1 1370 19 is_stmt 0 view .LVU6870
 19931 0400 4531FF   		xor	r15d, r15d	# passes
 19932 0403 4C8DA424 		lea	r12, 192[rsp]	# tmp465,
 19932      C0000000 
 19933              	.LVL1191:
 19934              	.L1782:
1376:sieve_extend.c ****             sieve_instance = sieve(option_maxFactor, blocksize_bits);//blocksize_bits);
 19935              		.loc 1 1376 13 is_stmt 1 view .LVU6871
 19936              	# sieve_extend.c:1376:             sieve_instance = sieve(option_maxFactor, blocksize_bits);//block
 19937              		.loc 1 1376 30 is_stmt 0 view .LVU6872
 19938 040b 488BBC24 		mov	rdi, QWORD PTR 160[rsp]	#, option_maxFactor
 19938      A0000000 
 19939 0413 4C89F6   		mov	rsi, r14	#, best_result$blocksize_bits
 19940              	# sieve_extend.c:1378:             passes++;
1377:sieve_extend.c ****             delete_sieve(sieve_instance);
1378:sieve_extend.c ****             passes++;
 19941              		.loc 1 1378 19 view .LVU6873
 19942 0416 4983C701 		add	r15, 1	# passes,
 19943              	# sieve_extend.c:1376:             sieve_instance = sieve(option_maxFactor, blocksize_bits);//block
1376:sieve_extend.c ****             sieve_instance = sieve(option_maxFactor, blocksize_bits);//blocksize_bits);
 19944              		.loc 1 1376 30 view .LVU6874
GAS LISTING /tmp/cc64mrzX.s 			page 532


 19945 041a E8000000 		call	sieve	#
 19945      00
 19946              	.LVL1192:
 19947              	.LBB1065:
 19948              	.LBB1066:
 19949              	# sieve_extend.c:116:     free(sieve->bitarray);
 116:sieve_extend.c ****     free(sieve);
 19950              		.loc 1 116 5 view .LVU6875
 19951 041f 488B38   		mov	rdi, QWORD PTR [rax]	#, sieve_instance_146->bitarray
 19952              	.LBE1066:
 19953              	.LBE1065:
 19954              	# sieve_extend.c:1376:             sieve_instance = sieve(option_maxFactor, blocksize_bits);//block
1376:sieve_extend.c ****             sieve_instance = sieve(option_maxFactor, blocksize_bits);//blocksize_bits);
 19955              		.loc 1 1376 30 view .LVU6876
 19956 0422 4989C5   		mov	r13, rax	# sieve_instance, tmp533
 19957              	.LVL1193:
1377:sieve_extend.c ****             delete_sieve(sieve_instance);
 19958              		.loc 1 1377 13 is_stmt 1 view .LVU6877
 19959              	.LBB1070:
 19960              	.LBI1065:
 115:sieve_extend.c ****     free(sieve->bitarray);
 19961              		.loc 1 115 13 view .LVU6878
 19962              	.LBB1067:
 116:sieve_extend.c ****     free(sieve);
 19963              		.loc 1 116 5 view .LVU6879
 19964 0425 E8000000 		call	free@PLT	#
 19964      00
 19965              	.LVL1194:
 117:sieve_extend.c **** }
 19966              		.loc 1 117 5 view .LVU6880
 19967 042a 4C89EF   		mov	rdi, r13	#, sieve_instance
 19968 042d E8000000 		call	free@PLT	#
 19968      00
 19969              	.LVL1195:
 117:sieve_extend.c **** }
 19970              		.loc 1 117 5 is_stmt 0 view .LVU6881
 19971              	.LBE1067:
 19972              	.LBE1070:
 19973              		.loc 1 1378 13 is_stmt 1 view .LVU6882
1379:sieve_extend.c ****             clock_gettime(CLOCK_MONOTONIC,&end_time);
 19974              		.loc 1 1379 13 view .LVU6883
 19975 0432 4C89E6   		mov	rsi, r12	#, tmp465
 19976 0435 BF010000 		mov	edi, 1	#,
 19976      00
 19977 043a E8000000 		call	clock_gettime@PLT	#
 19977      00
 19978              	.LVL1196:
1380:sieve_extend.c ****             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time
 19979              		.loc 1 1380 13 view .LVU6884
 19980              	# sieve_extend.c:1380:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 19981              		.loc 1 1380 62 is_stmt 0 view .LVU6885
 19982 043f C4E1D32A 		vcvtsi2sd	xmm5, xmm5, QWORD PTR 200[rsp]	# tmp441, end_time.tv_nsec
 19982      AC24C800 
 19982      0000
 19983              	# sieve_extend.c:1380:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 19984              		.loc 1 1380 68 view .LVU6886
 19985 0449 C4E1EB2A 		vcvtsi2sd	xmm2, xmm2, QWORD PTR 176[rsp]	# tmp442, start_time.tv_sec
GAS LISTING /tmp/cc64mrzX.s 			page 533


 19985      9424B000 
 19985      0000
 19986              	# sieve_extend.c:1380:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 19987              		.loc 1 1380 108 view .LVU6887
 19988 0453 C461BB2A 		vcvtsi2sd	xmm8, xmm8, QWORD PTR 184[rsp]	# tmp444, start_time.tv_nsec
 19988      8424B800 
 19988      0000
 19989              	# sieve_extend.c:1380:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 19990              		.loc 1 1380 44 view .LVU6888
 19991 045d C461B32A 		vcvtsi2sd	xmm9, xmm9, QWORD PTR 192[rsp]	# tmp445, end_time.tv_sec
 19991      8C24C000 
 19991      0000
 19992              	# sieve_extend.c:1375:         while (elapsed_time <= max_time) {
1375:sieve_extend.c ****             sieve_instance = sieve(option_maxFactor, blocksize_bits);//blocksize_bits);
 19993              		.loc 1 1375 15 view .LVU6889
 19994 0467 C57B1015 		vmovsd	xmm10, QWORD PTR .LC59[rip]	# tmp628,
 19994      00000000 
 19995 046f C4E2E99B 		vfmsub132sd	xmm5, xmm2, QWORD PTR .LC8[rip]	# _301, tmp442,
 19995      2D000000 
 19995      00
 19996 0478 C462B19D 		vfnmadd132sd	xmm8, xmm9, QWORD PTR .LC8[rip]	# _302, tmp445,
 19996      05000000 
 19996      00
 19997              	# sieve_extend.c:1380:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 19998              		.loc 1 1380 26 view .LVU6890
 19999 0481 C4C15358 		vaddsd	xmm0, xmm5, xmm8	# elapsed_time, _301, _302
 19999      C0
 20000              	.LVL1197:
1375:sieve_extend.c ****             sieve_instance = sieve(option_maxFactor, blocksize_bits);//blocksize_bits);
 20001              		.loc 1 1375 15 is_stmt 1 view .LVU6891
 20002 0486 C5792FD0 		vcomisd	xmm10, xmm0	# tmp628, elapsed_time
 20003 048a 0F828500 		jb	.L1854	#,
 20003      0000
 20004              	.LVL1198:
1376:sieve_extend.c ****             delete_sieve(sieve_instance);
 20005              		.loc 1 1376 13 view .LVU6892
 20006              	# sieve_extend.c:1376:             sieve_instance = sieve(option_maxFactor, blocksize_bits);//block
1376:sieve_extend.c ****             delete_sieve(sieve_instance);
 20007              		.loc 1 1376 30 is_stmt 0 view .LVU6893
 20008 0490 488BBC24 		mov	rdi, QWORD PTR 160[rsp]	#, option_maxFactor
 20008      A0000000 
 20009 0498 4C89F6   		mov	rsi, r14	#, best_result$blocksize_bits
 20010              	# sieve_extend.c:1378:             passes++;
1378:sieve_extend.c ****             clock_gettime(CLOCK_MONOTONIC,&end_time);
 20011              		.loc 1 1378 19 view .LVU6894
 20012 049b 4983C701 		add	r15, 1	# passes,
 20013              	# sieve_extend.c:1376:             sieve_instance = sieve(option_maxFactor, blocksize_bits);//block
1376:sieve_extend.c ****             delete_sieve(sieve_instance);
 20014              		.loc 1 1376 30 view .LVU6895
 20015 049f E8000000 		call	sieve	#
 20015      00
 20016              	.LVL1199:
 20017              	.LBB1071:
 20018              	.LBB1068:
 20019              	# sieve_extend.c:116:     free(sieve->bitarray);
 116:sieve_extend.c ****     free(sieve);
 20020              		.loc 1 116 5 view .LVU6896
GAS LISTING /tmp/cc64mrzX.s 			page 534


 20021 04a4 488B38   		mov	rdi, QWORD PTR [rax]	#, sieve_instance_146->bitarray
 20022              	.LBE1068:
 20023              	.LBE1071:
 20024              	# sieve_extend.c:1376:             sieve_instance = sieve(option_maxFactor, blocksize_bits);//block
1376:sieve_extend.c ****             delete_sieve(sieve_instance);
 20025              		.loc 1 1376 30 view .LVU6897
 20026 04a7 4889C5   		mov	rbp, rax	# sieve_instance, tmp535
1377:sieve_extend.c ****             passes++;
 20027              		.loc 1 1377 13 is_stmt 1 view .LVU6898
 20028              	.LVL1200:
 20029              	.LBB1072:
 115:sieve_extend.c ****     free(sieve->bitarray);
 20030              		.loc 1 115 13 view .LVU6899
 20031              	.LBB1069:
 116:sieve_extend.c ****     free(sieve);
 20032              		.loc 1 116 5 view .LVU6900
 20033 04aa E8000000 		call	free@PLT	#
 20033      00
 20034              	.LVL1201:
 117:sieve_extend.c **** }
 20035              		.loc 1 117 5 view .LVU6901
 20036 04af 4889EF   		mov	rdi, rbp	#, sieve_instance
 20037 04b2 E8000000 		call	free@PLT	#
 20037      00
 20038              	.LVL1202:
 117:sieve_extend.c **** }
 20039              		.loc 1 117 5 is_stmt 0 view .LVU6902
 20040              	.LBE1069:
 20041              	.LBE1072:
1378:sieve_extend.c ****             clock_gettime(CLOCK_MONOTONIC,&end_time);
 20042              		.loc 1 1378 13 is_stmt 1 view .LVU6903
1379:sieve_extend.c ****             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time
 20043              		.loc 1 1379 13 view .LVU6904
 20044 04b7 4C89E6   		mov	rsi, r12	#, tmp465
 20045 04ba BF010000 		mov	edi, 1	#,
 20045      00
 20046 04bf E8000000 		call	clock_gettime@PLT	#
 20046      00
 20047              	.LVL1203:
 20048              		.loc 1 1380 13 view .LVU6905
 20049              	# sieve_extend.c:1380:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 20050              		.loc 1 1380 62 is_stmt 0 view .LVU6906
 20051 04c4 C461A32A 		vcvtsi2sd	xmm11, xmm11, QWORD PTR 200[rsp]	# tmp518, end_time.tv_nsec
 20051      9C24C800 
 20051      0000
 20052              	# sieve_extend.c:1380:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 20053              		.loc 1 1380 68 view .LVU6907
 20054 04ce C4619B2A 		vcvtsi2sd	xmm12, xmm12, QWORD PTR 176[rsp]	# tmp519, start_time.tv_sec
 20054      A424B000 
 20054      0000
 20055              	# sieve_extend.c:1380:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 20056              		.loc 1 1380 108 view .LVU6908
 20057 04d8 C461932A 		vcvtsi2sd	xmm13, xmm13, QWORD PTR 184[rsp]	# tmp521, start_time.tv_nsec
 20057      AC24B800 
 20057      0000
 20058              	# sieve_extend.c:1380:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 20059              		.loc 1 1380 44 view .LVU6909
GAS LISTING /tmp/cc64mrzX.s 			page 535


 20060 04e2 C4618B2A 		vcvtsi2sd	xmm14, xmm14, QWORD PTR 192[rsp]	# tmp522, end_time.tv_sec
 20060      B424C000 
 20060      0000
 20061              	# sieve_extend.c:1375:         while (elapsed_time <= max_time) {
1375:sieve_extend.c ****             sieve_instance = sieve(option_maxFactor, blocksize_bits);//blocksize_bits);
 20062              		.loc 1 1375 15 view .LVU6910
 20063 04ec C57B103D 		vmovsd	xmm15, QWORD PTR .LC59[rip]	# tmp635,
 20063      00000000 
 20064 04f4 C462999B 		vfmsub132sd	xmm11, xmm12, QWORD PTR .LC8[rip]	# _301, tmp519,
 20064      1D000000 
 20064      00
 20065 04fd C462899D 		vfnmadd132sd	xmm13, xmm14, QWORD PTR .LC8[rip]	# _302, tmp522,
 20065      2D000000 
 20065      00
 20066              	# sieve_extend.c:1380:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 20067              		.loc 1 1380 26 view .LVU6911
 20068 0506 C4C12358 		vaddsd	xmm0, xmm11, xmm13	# elapsed_time, _301, _302
 20068      C5
 20069              	.LVL1204:
1375:sieve_extend.c ****             sieve_instance = sieve(option_maxFactor, blocksize_bits);//blocksize_bits);
 20070              		.loc 1 1375 15 is_stmt 1 view .LVU6912
 20071 050b C5792FF8 		vcomisd	xmm15, xmm0	# tmp635, elapsed_time
 20072 050f 0F83F6FE 		jnb	.L1782	#,
 20072      FFFF
 20073              	.L1854:
1381:sieve_extend.c ****         }
1382:sieve_extend.c ****         printf("rogiervandam_extend;%ju;%f;1;algorithm=other,faithful=yes,bits=1\n", (uintmax_t)pas
 20074              		.loc 1 1382 9 view .LVU6913
 20075              	.LVL1205:
 20076              	.LBB1073:
 20077              	.LBI1073:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20078              		.loc 3 105 1 view .LVU6914
 20079              	.LBB1074:
 20080              		.loc 3 107 3 view .LVU6915
 20081              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 20082              		.loc 3 107 10 is_stmt 0 view .LVU6916
 20083 0515 4C89FA   		mov	rdx, r15	#, passes
 20084 0518 488D3500 		lea	rsi, .LC60[rip]	#,
 20084      000000
 20085 051f BF010000 		mov	edi, 1	#,
 20085      00
 20086 0524 B8010000 		mov	eax, 1	#,
 20086      00
 20087 0529 C5FB1144 		vmovsd	QWORD PTR 32[rsp], xmm0	# %sfp, elapsed_time
 20087      2420
 20088 052f E8000000 		call	__printf_chk@PLT	#
 20088      00
 20089              	.LVL1206:
 20090              		.loc 3 107 10 view .LVU6917
 20091              	.LBE1074:
 20092              	.LBE1073:
1383:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - per second %f\n", 5*pass
 20093              		.loc 1 1383 9 is_stmt 1 view .LVU6918
 20094              	# sieve_extend.c:1383:         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - p
 20095              		.loc 1 1383 12 is_stmt 0 view .LVU6919
 20096 0534 83BC2498 		cmp	DWORD PTR 152[rsp], 0	# option_verboselevel,
GAS LISTING /tmp/cc64mrzX.s 			page 536


 20096      00000000 
 20097 053c 0F8FCA00 		jg	.L1869	#,
 20097      0000
 20098              	.LVL1207:
 20099              	.L1780:
 20100              		.loc 1 1383 12 view .LVU6920
 20101              	.LBE1064:
1384:sieve_extend.c ****     }
1385:sieve_extend.c ****     
1386:sieve_extend.c ****     if (option_showMaxFactor > 0) {
 20102              		.loc 1 1386 5 is_stmt 1 view .LVU6921
 20103              	# sieve_extend.c:1386:     if (option_showMaxFactor > 0) {
 20104              		.loc 1 1386 8 is_stmt 0 view .LVU6922
 20105 0542 4883BC24 		cmp	QWORD PTR 168[rsp], 0	# option_showMaxFactor,
 20105      A8000000 
 20105      00
 20106 054b 756D     		jne	.L1870	#,
 20107 054d 0F1F00   		.p2align 4
 20108              		.p2align 3
 20109              	.L1788:
 20110              	.LBB1081:
 20111              	.LBB1059:
 20112              	.LBB1056:
 20113              	.LBB1049:
1351:sieve_extend.c ****             }
 20114              		.loc 1 1351 29 is_stmt 1 discriminator 1 view .LVU6923
 20115              	.LBE1049:
 20116              	.LBE1056:
 20117              	.LBE1059:
 20118              	.LBE1081:
 20119              	# sieve_extend.c:1393: }
1387:sieve_extend.c ****         printf("Show result set:\n");
1388:sieve_extend.c ****         struct sieve_state* sieve_instance = sieve(option_maxFactor, option_maxFactor);
1389:sieve_extend.c ****         show_primes(sieve_instance, option_showMaxFactor);
1390:sieve_extend.c ****         delete_sieve(sieve_instance);
1391:sieve_extend.c ****         printf("\n");
1392:sieve_extend.c ****     }
1393:sieve_extend.c **** }
 20120              		.loc 1 1393 1 is_stmt 0 discriminator 1 view .LVU6924
 20121 0550 488B8424 		mov	rax, QWORD PTR 216[rsp]	# tmp571, D.7536
 20121      D8000000 
 20122 0558 64483304 		xor	rax, QWORD PTR fs:40	# tmp571, MEM[(<address-space-1> long unsigned int *)40B]
 20122      25280000 
 20122      00
 20123 0561 0F85270A 		jne	.L1871	#,
 20123      0000
 20124              	# sieve_extend.c:1393: }
 20125              		.loc 1 1393 1 view .LVU6925
 20126 0567 488DA424 		lea	rsp, 232[rsp]	#,
 20126      E8000000 
 20127              		.cfi_remember_state
 20128              		.cfi_def_cfa_offset 56
 20129 056f 31C0     		xor	eax, eax	#
 20130 0571 5B       		pop	rbx	#
 20131              		.cfi_def_cfa_offset 48
 20132 0572 5D       		pop	rbp	#
 20133              		.cfi_def_cfa_offset 40
GAS LISTING /tmp/cc64mrzX.s 			page 537


 20134 0573 415C     		pop	r12	#
 20135              		.cfi_def_cfa_offset 32
 20136 0575 415D     		pop	r13	#
 20137              		.cfi_def_cfa_offset 24
 20138 0577 415E     		pop	r14	#
 20139              		.cfi_def_cfa_offset 16
 20140 0579 415F     		pop	r15	#
 20141              		.cfi_def_cfa_offset 8
 20142 057b C3       		ret	
 20143              	.L1744:
 20144              		.cfi_restore_state
1339:sieve_extend.c ****         if (option_verboselevel >= 2) printf("\n");
 20145              		.loc 1 1339 39 is_stmt 1 view .LVU6926
 20146              	.LVL1208:
 20147              	.LBB1082:
 20148              	.LBI1082:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20149              		.loc 3 105 1 view .LVU6927
 20150              	.LBB1083:
 20151              		.loc 3 107 3 view .LVU6928
 20152              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 20153              		.loc 3 107 10 is_stmt 0 view .LVU6929
 20154 057c 488D3500 		lea	rsi, .LC27[rip]	#,
 20154      000000
 20155 0583 BF010000 		mov	edi, 1	#,
 20155      00
 20156 0588 31C0     		xor	eax, eax	#
 20157 058a E8000000 		call	__printf_chk@PLT	#
 20157      00
 20158              	.LVL1209:
 20159 058f E95BFCFF 		jmp	.L1729	#
 20159      FF
 20160              	.LVL1210:
 20161              	.L1733:
 20162              		.loc 3 107 10 view .LVU6930
 20163              	.LBE1083:
 20164              	.LBE1082:
 20165              	.LBB1084:
1299:sieve_extend.c ****             }
 20166              		.loc 1 1299 17 is_stmt 1 view .LVU6931
 20167              	.LBB1011:
 20168              	.LBI1011:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20169              		.loc 3 98 1 view .LVU6932
 20170              	.LBB1012:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 20171              		.loc 3 100 3 view .LVU6933
 20172              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 20173              		.loc 3 100 10 is_stmt 0 view .LVU6934
 20174 0594 498B0F   		mov	rcx, QWORD PTR [r15]	#, *_16
 20175 0597 488D1500 		lea	rdx, .LC32[rip]	#,
 20175      000000
 20176              	.LVL1211:
 20177              	.L1857:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 20178              		.loc 3 100 10 view .LVU6935
GAS LISTING /tmp/cc64mrzX.s 			page 538


 20179              	.LBE1012:
 20180              	.LBE1011:
 20181              	.LBB1013:
 20182              	.LBB1014:
 20183 059e 488B3D00 		mov	rdi, QWORD PTR stderr[rip]	#, stderr
 20183      000000
 20184 05a5 BE010000 		mov	esi, 1	#,
 20184      00
 20185 05aa 31C0     		xor	eax, eax	#
 20186 05ac E8000000 		call	__fprintf_chk@PLT	#
 20186      00
 20187              	.LVL1212:
 20188              	.L1858:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 20189              		.loc 3 100 10 view .LVU6936
 20190              	.LBE1014:
 20191              	.LBE1013:
1307:sieve_extend.c ****             }
 20192              		.loc 1 1307 80 is_stmt 1 view .LVU6937
 20193 05b1 498B3C24 		mov	rdi, QWORD PTR [r12]	#, *argv_159(D)
 20194 05b5 E8000000 		call	usage	#
 20194      00
 20195              	.LVL1213:
 20196              	.L1870:
1307:sieve_extend.c ****             }
 20197              		.loc 1 1307 80 is_stmt 0 view .LVU6938
 20198              	.LBE1084:
 20199              	.LBB1085:
1387:sieve_extend.c ****         struct sieve_state* sieve_instance = sieve(option_maxFactor, option_maxFactor);
 20200              		.loc 1 1387 9 is_stmt 1 view .LVU6939
 20201              	.LBB1086:
 20202              	.LBI1086:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20203              		.loc 3 105 1 view .LVU6940
 20204              	.LBB1087:
 20205              		.loc 3 107 3 view .LVU6941
 20206              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 20207              		.loc 3 107 10 is_stmt 0 view .LVU6942
 20208 05ba 488D3D00 		lea	rdi, .LC62[rip]	#,
 20208      000000
 20209 05c1 E8000000 		call	puts@PLT	#
 20209      00
 20210              	.LVL1214:
 20211              		.loc 3 107 10 view .LVU6943
 20212              	.LBE1087:
 20213              	.LBE1086:
1388:sieve_extend.c ****         show_primes(sieve_instance, option_showMaxFactor);
 20214              		.loc 1 1388 9 is_stmt 1 view .LVU6944
 20215              	# sieve_extend.c:1388:         struct sieve_state* sieve_instance = sieve(option_maxFactor, option_
1388:sieve_extend.c ****         show_primes(sieve_instance, option_showMaxFactor);
 20216              		.loc 1 1388 46 is_stmt 0 view .LVU6945
 20217 05c6 488BBC24 		mov	rdi, QWORD PTR 160[rsp]	# option_maxFactor.51_93, option_maxFactor
 20217      A0000000 
 20218 05ce 4889FE   		mov	rsi, rdi	#, option_maxFactor.51_93
 20219 05d1 E8000000 		call	sieve	#
 20219      00
 20220              	.LVL1215:
GAS LISTING /tmp/cc64mrzX.s 			page 539


 20221              	# sieve_extend.c:1389:         show_primes(sieve_instance, option_showMaxFactor);
1389:sieve_extend.c ****         delete_sieve(sieve_instance);
 20222              		.loc 1 1389 9 view .LVU6946
 20223 05d6 488B9424 		mov	rdx, QWORD PTR 168[rsp]	#, option_showMaxFactor
 20223      A8000000 
 20224              	# sieve_extend.c:1388:         struct sieve_state* sieve_instance = sieve(option_maxFactor, option_
1388:sieve_extend.c ****         show_primes(sieve_instance, option_showMaxFactor);
 20225              		.loc 1 1388 46 view .LVU6947
 20226 05de 4989C6   		mov	r14, rax	# sieve_instance, tmp534
 20227              	.LVL1216:
1389:sieve_extend.c ****         delete_sieve(sieve_instance);
 20228              		.loc 1 1389 9 is_stmt 1 view .LVU6948
 20229 05e1 488D7008 		lea	rsi, 8[rax]	# tmp460,
 20230 05e5 4889C7   		mov	rdi, rax	#, sieve_instance
 20231 05e8 E8000000 		call	show_primes.isra.0	#
 20231      00
 20232              	.LVL1217:
1390:sieve_extend.c ****         printf("\n");
 20233              		.loc 1 1390 9 view .LVU6949
 20234              	.LBB1088:
 20235              	.LBI1088:
 115:sieve_extend.c ****     free(sieve->bitarray);
 20236              		.loc 1 115 13 view .LVU6950
 20237              	.LBB1089:
 116:sieve_extend.c ****     free(sieve);
 20238              		.loc 1 116 5 view .LVU6951
 20239 05ed 498B3E   		mov	rdi, QWORD PTR [r14]	#, sieve_instance_151->bitarray
 20240 05f0 E8000000 		call	free@PLT	#
 20240      00
 20241              	.LVL1218:
 117:sieve_extend.c **** }
 20242              		.loc 1 117 5 view .LVU6952
 20243 05f5 4C89F7   		mov	rdi, r14	#, sieve_instance
 20244 05f8 E8000000 		call	free@PLT	#
 20244      00
 20245              	.LVL1219:
 117:sieve_extend.c **** }
 20246              		.loc 1 117 5 is_stmt 0 view .LVU6953
 20247              	.LBE1089:
 20248              	.LBE1088:
1391:sieve_extend.c ****     }
 20249              		.loc 1 1391 9 is_stmt 1 view .LVU6954
 20250              	.LBB1090:
 20251              	.LBI1090:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20252              		.loc 3 105 1 view .LVU6955
 20253              	.LBB1091:
 20254              		.loc 3 107 3 view .LVU6956
 20255              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 20256              		.loc 3 107 10 is_stmt 0 view .LVU6957
 20257 05fd BF0A0000 		mov	edi, 10	#,
 20257      00
 20258 0602 E8000000 		call	putchar@PLT	#
 20258      00
 20259              	.LVL1220:
 20260 0607 E944FFFF 		jmp	.L1788	#
 20260      FF
GAS LISTING /tmp/cc64mrzX.s 			page 540


 20261              	.LVL1221:
 20262              	.L1869:
 20263              		.loc 3 107 10 view .LVU6958
 20264              	.LBE1091:
 20265              	.LBE1090:
 20266              	.LBE1085:
 20267              	.LBB1092:
1383:sieve_extend.c ****     }
 20268              		.loc 1 1383 39 is_stmt 1 discriminator 1 view .LVU6959
 20269              	.LBB1075:
 20270              	.LBI1075:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20271              		.loc 3 105 1 discriminator 1 view .LVU6960
 20272              	.LBB1076:
 20273              		.loc 3 107 3 discriminator 1 view .LVU6961
 20274              	.LBE1076:
 20275              	.LBE1075:
 20276              	# sieve_extend.c:1383:         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - p
1383:sieve_extend.c ****     }
 20277              		.loc 1 1383 39 is_stmt 0 discriminator 1 view .LVU6962
 20278 060c C4C1FB2A 		vcvtsi2sd	xmm0, xmm0, r15	# tmp448, passes
 20278      C7
 20279 0611 4D85FF   		test	r15, r15	# passes
 20280 0614 C5FB1074 		vmovsd	xmm6, QWORD PTR 32[rsp]	# elapsed_time, %sfp
 20280      2420
 20281 061a 7918     		jns	.L1785	#,
 20282 061c 4C89F8   		mov	rax, r15	# tmp450, passes
 20283 061f 4C89FA   		mov	rdx, r15	# tmp451, passes
 20284 0622 48D1E8   		shr	rax	# tmp450
 20285 0625 83E201   		and	edx, 1	# tmp451,
 20286 0628 4809D0   		or	rax, rdx	# tmp514, tmp451
 20287 062b C4E1C32A 		vcvtsi2sd	xmm7, xmm7, rax	# tmp449, tmp514
 20287      F8
 20288 0630 C5C358C7 		vaddsd	xmm0, xmm7, xmm7	# tmp448, tmp449, tmp449
 20289              	.L1785:
1383:sieve_extend.c ****     }
 20290              		.loc 1 1383 39 discriminator 1 view .LVU6963
 20291 0634 C5FB5ECE 		vdivsd	xmm1, xmm0, xmm6	# tmp452, tmp448, elapsed_time
 20292              	# sieve_extend.c:1383:         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - p
1383:sieve_extend.c ****     }
 20293              		.loc 1 1383 95 discriminator 1 view .LVU6964
 20294 0638 4B8D34BF 		lea	rsi, [r15+r15*4]	# tmp453,
 20295              	# sieve_extend.c:1383:         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - p
1383:sieve_extend.c ****     }
 20296              		.loc 1 1383 39 discriminator 1 view .LVU6965
 20297 063c 4885F6   		test	rsi, rsi	# tmp453
 20298 063f C4E1E32A 		vcvtsi2sd	xmm3, xmm3, rsi	# tmp454, tmp453
 20298      DE
 20299 0644 7915     		jns	.L1787	#,
 20300 0646 4989F0   		mov	r8, rsi	# tmp456, tmp453
 20301 0649 83E601   		and	esi, 1	# tmp457,
 20302 064c 49D1E8   		shr	r8	# tmp456
 20303 064f 4909F0   		or	r8, rsi	# tmp515, tmp457
 20304 0652 C4C1DB2A 		vcvtsi2sd	xmm4, xmm4, r8	# tmp455, tmp515
 20304      E0
 20305 0657 C5DB58DC 		vaddsd	xmm3, xmm4, xmm4	# tmp454, tmp455, tmp455
 20306              	.L1787:
GAS LISTING /tmp/cc64mrzX.s 			page 541


 20307 065b C5E35EC6 		vdivsd	xmm0, xmm3, xmm6	# tmp458, tmp454, elapsed_time
 20308              	.LBB1078:
 20309              	.LBB1077:
 20310              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 20311              		.loc 3 107 10 discriminator 1 view .LVU6966
 20312 065f 488D3500 		lea	rsi, .LC61[rip]	#,
 20312      000000
 20313 0666 BF010000 		mov	edi, 1	#,
 20313      00
 20314 066b B8020000 		mov	eax, 2	#,
 20314      00
 20315 0670 E8000000 		call	__printf_chk@PLT	#
 20315      00
 20316              	.LVL1222:
 20317 0675 E9C8FEFF 		jmp	.L1780	#
 20317      FF
 20318              	.LVL1223:
 20319              	.L1868:
 20320              		.loc 3 107 10 discriminator 1 view .LVU6967
 20321              	.LBE1077:
 20322              	.LBE1078:
 20323              	.LBE1092:
 20324              	.LBB1093:
1360:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
 20325              		.loc 1 1360 9 is_stmt 1 view .LVU6968
 20326              	# sieve_extend.c:1360:         tuning_result_type tuning_result = tune(option_tunelevel, option_max
1360:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
 20327              		.loc 1 1360 44 is_stmt 0 view .LVU6969
 20328 067a 448B9424 		mov	r10d, DWORD PTR 152[rsp]	# option_verboselevel.41_63, option_verboselevel
 20328      98000000 
 20329 0682 4183E801 		sub	r8d, 1	#,
 20330 0686 4C8B9C24 		mov	r11, QWORD PTR 160[rsp]	# option_maxFactor.42_64, option_maxFactor
 20330      A0000000 
 20331 068e 4183F802 		cmp	r8d, 2	# _212,
 20332 0692 44895424 		mov	DWORD PTR 88[rsp], r10d	# %sfp, option_verboselevel.41_63
 20332      58
 20333 0697 4C895C24 		mov	QWORD PTR 120[rsp], r11	# %sfp, option_maxFactor.42_64
 20333      78
 20334              	.LVL1224:
 20335              	.LBB1094:
 20336              	.LBI1094:
1165:sieve_extend.c ****     counter_t best_blocksize_bits = default_blocksize;
 20337              		.loc 1 1165 27 is_stmt 1 view .LVU6970
 20338              	.LBB1095:
1166:sieve_extend.c **** 
 20339              		.loc 1 1166 5 view .LVU6971
1168:sieve_extend.c ****     best_blocksize_bits = 0;
 20340              		.loc 1 1168 5 view .LVU6972
1169:sieve_extend.c ****     counter_t best_smallstep_faster = 0;
 20341              		.loc 1 1169 5 view .LVU6973
1170:sieve_extend.c ****     counter_t best_mediumstep_faster = 0;
 20342              		.loc 1 1170 5 view .LVU6974
1171:sieve_extend.c ****     counter_t best_vectorstep_faster = 0;
 20343              		.loc 1 1171 5 view .LVU6975
1172:sieve_extend.c ****     counter_t smallstep_faster_steps = 4;
 20344              		.loc 1 1172 5 view .LVU6976
1173:sieve_extend.c ****     counter_t mediumstep_faster_steps = 4;
GAS LISTING /tmp/cc64mrzX.s 			page 542


 20345              		.loc 1 1173 5 view .LVU6977
1174:sieve_extend.c ****     counter_t vectorstep_faster_steps = 32;
 20346              		.loc 1 1174 5 view .LVU6978
1175:sieve_extend.c ****     counter_t freebits_steps = anticiped_cache_line_bytesize;
 20347              		.loc 1 1175 5 view .LVU6979
1176:sieve_extend.c ****     counter_t sample_max = default_sample_max;
 20348              		.loc 1 1176 5 view .LVU6980
1177:sieve_extend.c ****     double sample_duration = default_sample_duration;
 20349              		.loc 1 1177 5 view .LVU6981
1178:sieve_extend.c **** 
 20350              		.loc 1 1178 5 view .LVU6982
1181:sieve_extend.c ****         case 1:
 20351              		.loc 1 1181 5 view .LVU6983
 20352 069c 0F869407 		jbe	.L1789	#,
 20352      0000
 20353 06a2 C5FB1035 		vmovsd	xmm6, QWORD PTR .LC26[rip]	# sample_duration,
 20353      00000000 
 20354 06aa 48C74424 		mov	QWORD PTR 104[rsp], 5	# %sfp,
 20354      68050000 
 20354      00
 20355 06b3 48C74424 		mov	QWORD PTR 96[rsp], 128	# %sfp,
 20355      60800000 
 20355      00
 20356 06bc 48C78424 		mov	QWORD PTR 128[rsp], 32	# %sfp,
 20356      80000000 
 20356      20000000 
 20357 06c8 48C78424 		mov	QWORD PTR 136[rsp], 4	# %sfp,
 20357      88000000 
 20357      04000000 
 20358 06d4 C5FB1174 		vmovsd	QWORD PTR 112[rsp], xmm6	# %sfp, sample_duration
 20358      2470
 20359              	.LVL1225:
 20360              	.L1757:
1209:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 20361              		.loc 1 1209 5 view .LVU6984
 20362              	# sieve_extend.c:1209:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1209:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 20363              		.loc 1 1209 33 is_stmt 0 view .LVU6985
 20364 06da B8400000 		mov	eax, 64	# tmp348,
 20364      00
 20365 06df 31D2     		xor	edx, edx	# tmp347
 20366 06e1 48F7B424 		div	QWORD PTR 136[rsp]	# %sfp
 20366      88000000 
 20367              	# sieve_extend.c:1209:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1209:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 20368              		.loc 1 1209 254 view .LVU6986
 20369 06e9 31D2     		xor	edx, edx	# tmp355
 20370              	# sieve_extend.c:1211:     counter_t tuning_results=0;
1211:sieve_extend.c ****     counter_t tuning_result_index=0;
 20371              		.loc 1 1211 15 view .LVU6987
 20372 06eb 4531ED   		xor	r13d, r13d	# tuning_results
 20373              	# sieve_extend.c:1209:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1209:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 20374              		.loc 1 1209 83 view .LVU6988
 20375 06ee 488D7801 		lea	rdi, 1[rax]	# _229,
 20376              	.LVL1226:
1210:sieve_extend.c ****     counter_t tuning_results=0;
GAS LISTING /tmp/cc64mrzX.s 			page 543


 20377              		.loc 1 1210 5 is_stmt 1 view .LVU6989
 20378              	# sieve_extend.c:1209:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1209:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 20379              		.loc 1 1209 254 is_stmt 0 view .LVU6990
 20380 06f2 B8001000 		mov	eax, 4096	# tmp356,
 20380      00
 20381 06f7 48F77424 		div	QWORD PTR 96[rsp]	# %sfp
 20381      60
 20382              	.LVL1227:
 20383              	# sieve_extend.c:1209:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1209:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 20384              		.loc 1 1209 148 view .LVU6991
 20385 06fc 31D2     		xor	edx, edx	# tmp365
 20386              	# sieve_extend.c:1210:     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_r
1210:sieve_extend.c ****     counter_t tuning_results=0;
 20387              		.loc 1 1210 41 view .LVU6992
 20388 06fe 480FAFC7 		imul	rax, rdi	# tmp361, _229
 20389              	.LVL1228:
1210:sieve_extend.c ****     counter_t tuning_results=0;
 20390              		.loc 1 1210 41 view .LVU6993
 20391 0702 480FAFF8 		imul	rdi, rax	# tmp362, tmp361
 20392              	.LVL1229:
 20393              	# sieve_extend.c:1209:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1209:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 20394              		.loc 1 1209 148 view .LVU6994
 20395 0706 B8000100 		mov	eax, 256	# tmp366,
 20395      00
 20396 070b 48F7B424 		div	QWORD PTR 128[rsp]	# %sfp
 20396      80000000 
 20397              	# sieve_extend.c:1209:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1209:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 20398              		.loc 1 1209 201 view .LVU6995
 20399 0713 4883C001 		add	rax, 1	# tmp371,
 20400              	# sieve_extend.c:1210:     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_r
1210:sieve_extend.c ****     counter_t tuning_results=0;
 20401              		.loc 1 1210 41 view .LVU6996
 20402 0717 480FAFF8 		imul	rdi, rax	# tmp372, tmp371
 20403 071b 48C1E708 		sal	rdi, 8	# tmp372,
 20404 071f E8000000 		call	malloc@PLT	#
 20404      00
 20405              	.LVL1230:
1211:sieve_extend.c ****     counter_t tuning_result_index=0;
 20406              		.loc 1 1211 5 is_stmt 1 view .LVU6997
1212:sieve_extend.c ****     
 20407              		.loc 1 1212 5 view .LVU6998
1214:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 20408              		.loc 1 1214 5 view .LVU6999
 20409              	.LBB1096:
1214:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 20410              		.loc 1 1214 10 view .LVU7000
1214:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 20411              		.loc 1 1214 42 view .LVU7001
 20412              	.LBE1096:
 20413              	# sieve_extend.c:1168:     double best_avg = 0;
1168:sieve_extend.c ****     best_blocksize_bits = 0;
 20414              		.loc 1 1168 12 is_stmt 0 view .LVU7002
 20415 0724 C5F157C9 		vxorpd	xmm1, xmm1, xmm1	# best_avg
GAS LISTING /tmp/cc64mrzX.s 			page 544


 20416              	# sieve_extend.c:1171:     counter_t best_mediumstep_faster = 0;
1171:sieve_extend.c ****     counter_t best_vectorstep_faster = 0;
 20417              		.loc 1 1171 15 view .LVU7003
 20418 0728 48C74424 		mov	QWORD PTR 72[rsp], 0	# %sfp,
 20418      48000000 
 20418      00
 20419              	# sieve_extend.c:1170:     counter_t best_smallstep_faster = 0;
1170:sieve_extend.c ****     counter_t best_mediumstep_faster = 0;
 20420              		.loc 1 1170 15 view .LVU7004
 20421 0731 48C74424 		mov	QWORD PTR 64[rsp], 0	# %sfp,
 20421      40000000 
 20421      00
 20422              	# sieve_extend.c:1169:     best_blocksize_bits = 0;
1169:sieve_extend.c ****     counter_t best_smallstep_faster = 0;
 20423              		.loc 1 1169 25 view .LVU7005
 20424 073a 48C74424 		mov	QWORD PTR 56[rsp], 0	# %sfp,
 20424      38000000 
 20424      00
 20425              	.LBB1126:
 20426              	# sieve_extend.c:1214:     for (counter_t smallstep_faster = 0; smallstep_faster <= WORD_SIZE/2; sm
1214:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 20427              		.loc 1 1214 20 view .LVU7006
 20428 0743 48C74424 		mov	QWORD PTR 32[rsp], 0	# %sfp,
 20428      20000000 
 20428      00
 20429 074c 48894424 		mov	QWORD PTR 80[rsp], rax	# %sfp, tuning_result
 20429      50
 20430              	.LBE1126:
 20431              	# sieve_extend.c:1168:     double best_avg = 0;
1168:sieve_extend.c ****     best_blocksize_bits = 0;
 20432              		.loc 1 1168 12 view .LVU7007
 20433 0751 C5FB114C 		vmovsd	QWORD PTR 40[rsp], xmm1	# %sfp, best_avg
 20433      2428
 20434              	.LVL1231:
 20435              	.L1759:
 20436              	.LBB1127:
 20437              	.LBB1097:
1215:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE;
 20438              		.loc 1 1215 62 is_stmt 1 view .LVU7008
 20439              	.LBB1098:
 20440              	.LBB1099:
 20441              	# sieve_extend.c:1217:                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_
1217:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 20442              		.loc 1 1217 32 is_stmt 0 view .LVU7009
 20443 0757 4C8B7424 		mov	r14, QWORD PTR 32[rsp]	# mediumstep_faster, %sfp
 20443      20
 20444              	.LVL1232:
 20445 075c 0F1F4000 		.p2align 4
 20446              		.p2align 3
 20447              	.L1771:
1217:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 20448              		.loc 1 1217 32 view .LVU7010
 20449              	.LBE1099:
1216:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 20450              		.loc 1 1216 67 is_stmt 1 view .LVU7011
 20451              	.LBB1122:
 20452              	# sieve_extend.c:1217:                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_
GAS LISTING /tmp/cc64mrzX.s 			page 545


1217:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 20453              		.loc 1 1217 32 is_stmt 0 view .LVU7012
 20454 0760 4C897424 		mov	QWORD PTR 48[rsp], r14	# %sfp, mediumstep_faster
 20454      30
 20455              	.LVL1233:
 20456 0765 66662E0F 		.p2align 4
 20456      1F840000 
 20456      000000
 20457              		.p2align 3
 20458              	.L1769:
1217:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 20459              		.loc 1 1217 50 is_stmt 1 view .LVU7013
 20460              	.LBB1100:
 20461              	# sieve_extend.c:1218:                     for (counter_t free_bits=0; (free_bits < (anticiped_cach
1218:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 20462              		.loc 1 1218 36 is_stmt 0 view .LVU7014
 20463 0770 C744245C 		mov	DWORD PTR 92[rsp], 6	# %sfp,
 20463      06000000 
 20464              	.LBE1100:
 20465              	# sieve_extend.c:1217:                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_
1217:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 20466              		.loc 1 1217 32 view .LVU7015
 20467 0778 41BC0001 		mov	r12d, 256	# blocksize_kb,
 20467      0000
 20468              	.LVL1234:
 20469 077e 6690     		.p2align 4
 20470              		.p2align 3
 20471              	.L1767:
 20472              	.LBB1120:
1218:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 20473              		.loc 1 1218 49 is_stmt 1 view .LVU7016
 20474 0780 4F8D546D 		lea	r10, 0[r13+r13*2]	# tmp399,
 20474      00
 20475              	# sieve_extend.c:1218:                     for (counter_t free_bits=0; (free_bits < (anticiped_cach
1218:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 20476              		.loc 1 1218 134 is_stmt 0 view .LVU7017
 20477 0785 4C89E3   		mov	rbx, r12	# ivtmp.792, blocksize_kb
 20478 0788 4C8B5C24 		mov	r11, QWORD PTR 80[rsp]	# tuning_result, %sfp
 20478      50
 20479              	# sieve_extend.c:1218:                     for (counter_t free_bits=0; (free_bits < (anticiped_cach
1218:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 20480              		.loc 1 1218 36 view .LVU7018
 20481 078d 31ED     		xor	ebp, ebp	# free_bits
 20482 078f 49C1E205 		sal	r10, 5	# tmp400,
 20483              	# sieve_extend.c:1218:                     for (counter_t free_bits=0; (free_bits < (anticiped_cach
1218:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 20484              		.loc 1 1218 134 view .LVU7019
 20485 0793 48C1E30D 		sal	rbx, 13	# ivtmp.792,
 20486 0797 4F8D3C13 		lea	r15, [r11+r10]	# ivtmp.791,
 20487 079b EB44     		jmp	.L1765	#
 20488              	.LVL1235:
 20489 079d 0F1F00   		.p2align 4,,7
 20490              		.p2align 3
 20491              	.L1762:
 20492              	.LBB1101:
1235:sieve_extend.c ****                             best_blocksize_bits = blocksize_bits;
 20493              		.loc 1 1235 29 is_stmt 1 view .LVU7020
GAS LISTING /tmp/cc64mrzX.s 			page 546


1236:sieve_extend.c ****                             best_smallstep_faster = smallstep_faster;
 20494              		.loc 1 1236 29 view .LVU7021
1237:sieve_extend.c ****                             best_mediumstep_faster = mediumstep_faster;
 20495              		.loc 1 1237 29 view .LVU7022
1238:sieve_extend.c ****                             best_vectorstep_faster = vectorstep_faster;
 20496              		.loc 1 1238 29 view .LVU7023
1239:sieve_extend.c ****                             if (option_verboselevel >=2) { printf(".(>)"); tuning_result_print(tuni
 20497              		.loc 1 1239 29 view .LVU7024
1240:sieve_extend.c ****                         }
 20498              		.loc 1 1240 29 view .LVU7025
 20499              	# sieve_extend.c:1240:                             if (option_verboselevel >=2) { printf(".(>)"); t
1240:sieve_extend.c ****                         }
 20500              		.loc 1 1240 32 is_stmt 0 view .LVU7026
 20501 07a0 837C2458 		cmp	DWORD PTR 88[rsp], 1	# %sfp,
 20501      01
 20502 07a5 0F8FDD03 		jg	.L1872	#,
 20502      0000
1240:sieve_extend.c ****                         }
 20503              		.loc 1 1240 32 view .LVU7027
 20504 07ab 488B7424 		mov	rsi, QWORD PTR 32[rsp]	# smallstep_faster, %sfp
 20504      20
 20505 07b0 4C897424 		mov	QWORD PTR 72[rsp], r14	# %sfp, mediumstep_faster
 20505      48
 20506              	# sieve_extend.c:1235:                             best_avg = tuning_result[tuning_result_index].av
1235:sieve_extend.c ****                             best_blocksize_bits = blocksize_bits;
 20507              		.loc 1 1235 38 view .LVU7028
 20508 07b5 C5FB115C 		vmovsd	QWORD PTR 40[rsp], xmm3	# %sfp, _253
 20508      2428
 20509              	# sieve_extend.c:1236:                             best_blocksize_bits = blocksize_bits;
1236:sieve_extend.c ****                             best_smallstep_faster = smallstep_faster;
 20510              		.loc 1 1236 49 view .LVU7029
 20511 07bb 48895C24 		mov	QWORD PTR 56[rsp], rbx	# %sfp, ivtmp.792
 20511      38
 20512 07c0 48897424 		mov	QWORD PTR 64[rsp], rsi	# %sfp, smallstep_faster
 20512      40
 20513              	.LVL1236:
 20514              	.L1760:
1243:sieve_extend.c ****                     }
 20515              		.loc 1 1243 25 is_stmt 1 view .LVU7030
1243:sieve_extend.c ****                     }
 20516              		.loc 1 1243 25 is_stmt 0 view .LVU7031
 20517              	.LBE1101:
1218:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 20518              		.loc 1 1218 141 is_stmt 1 view .LVU7032
 20519              	# sieve_extend.c:1218:                     for (counter_t free_bits=0; (free_bits < (anticiped_cach
1218:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 20520              		.loc 1 1218 151 is_stmt 0 view .LVU7033
 20521 07c5 488B4C24 		mov	rcx, QWORD PTR 96[rsp]	# freebits_steps, %sfp
 20521      60
 20522 07ca 4983C760 		add	r15, 96	# ivtmp.791,
 20523 07ce 4801CD   		add	rbp, rcx	# free_bits, freebits_steps
 20524              	.LVL1237:
1218:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 20525              		.loc 1 1218 49 is_stmt 1 view .LVU7034
 20526 07d1 4829CB   		sub	rbx, rcx	# ivtmp.792, freebits_steps
 20527              	.LVL1238:
 20528              	# sieve_extend.c:1218:                     for (counter_t free_bits=0; (free_bits < (anticiped_cach
GAS LISTING /tmp/cc64mrzX.s 			page 547


1218:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 20529              		.loc 1 1218 21 is_stmt 0 view .LVU7035
 20530 07d4 4881FDFF 		cmp	rbp, 4095	# free_bits,
 20530      0F0000
 20531 07db 0F87E700 		ja	.L1761	#,
 20531      0000
 20532              	.LVL1239:
 20533              	.L1765:
 20534              	.LBB1118:
1219:sieve_extend.c **** 
 20535              		.loc 1 1219 25 is_stmt 1 view .LVU7036
1222:sieve_extend.c ****                         tuning_result[tuning_result_index].maxints = maxints;
 20536              		.loc 1 1222 25 view .LVU7037
 20537              	# sieve_extend.c:1229:                         tuning_result[tuning_result_index].smallstep_faster 
1229:sieve_extend.c ****                         tuning_result[tuning_result_index].mediumstep_faster = mediumstep_faster;
 20538              		.loc 1 1229 77 is_stmt 0 view .LVU7038
 20539 07e1 488B7C24 		mov	rdi, QWORD PTR 32[rsp]	# smallstep_faster, %sfp
 20539      20
 20540 07e6 4C89EE   		mov	rsi, r13	# tuning_results, tuning_results
 20541              	# sieve_extend.c:1223:                         tuning_result[tuning_result_index].maxints = maxints
1223:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_duration = sample_duration;
 20542              		.loc 1 1223 68 view .LVU7039
 20543 07e9 488B4C24 		mov	rcx, QWORD PTR 120[rsp]	# option_maxFactor.42_64, %sfp
 20543      78
 20544              	# sieve_extend.c:1222:                         tuning_results++;
1222:sieve_extend.c ****                         tuning_result[tuning_result_index].maxints = maxints;
 20545              		.loc 1 1222 39 view .LVU7040
 20546 07ee 4983C501 		add	r13, 1	# tuning_results,
 20547              	.LVL1240:
1223:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_duration = sample_duration;
 20548              		.loc 1 1223 25 is_stmt 1 view .LVU7041
 20549              	# sieve_extend.c:1225:                         tuning_result[tuning_result_index].sample_max = samp
1225:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_kb = blocksize_kb;
 20550              		.loc 1 1225 71 is_stmt 0 view .LVU7042
 20551 07f2 4C8B4C24 		mov	r9, QWORD PTR 104[rsp]	# sample_max, %sfp
 20551      68
 20552              	# sieve_extend.c:1231:                         tuning_result[tuning_result_index].vectorstep_faster
1231:sieve_extend.c ****                         tune_benchmark(tuning_result, tuning_result_index);
 20553              		.loc 1 1231 78 view .LVU7043
 20554 07f7 488B4424 		mov	rax, QWORD PTR 48[rsp]	# vectorstep_faster, %sfp
 20554      30
 20555              	# sieve_extend.c:1229:                         tuning_result[tuning_result_index].smallstep_faster 
1229:sieve_extend.c ****                         tuning_result[tuning_result_index].mediumstep_faster = mediumstep_faster;
 20556              		.loc 1 1229 77 view .LVU7044
 20557 07fc 49897F20 		mov	QWORD PTR 32[r15], rdi	# MEM[base: _500, offset: 32B], smallstep_faster
 20558              	# sieve_extend.c:1232:                         tune_benchmark(tuning_result, tuning_result_index);
1232:sieve_extend.c **** 
 20559              		.loc 1 1232 25 view .LVU7045
 20560 0800 488B7C24 		mov	rdi, QWORD PTR 80[rsp]	#, %sfp
 20560      50
 20561              	# sieve_extend.c:1224:                         tuning_result[tuning_result_index].sample_duration =
1224:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_max = sample_max;
 20562              		.loc 1 1224 76 view .LVU7046
 20563 0805 C5FB1064 		vmovsd	xmm4, QWORD PTR 112[rsp]	# sample_duration, %sfp
 20563      2470
 20564              	# sieve_extend.c:1223:                         tuning_result[tuning_result_index].maxints = maxints
1223:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_duration = sample_duration;
GAS LISTING /tmp/cc64mrzX.s 			page 548


 20565              		.loc 1 1223 68 view .LVU7047
 20566 080b 49890F   		mov	QWORD PTR [r15], rcx	# MEM[base: _500, offset: 0B], option_maxFactor.42_64
1224:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_max = sample_max;
 20567              		.loc 1 1224 25 is_stmt 1 view .LVU7048
 20568              	# sieve_extend.c:1225:                         tuning_result[tuning_result_index].sample_max = samp
1225:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_kb = blocksize_kb;
 20569              		.loc 1 1225 71 is_stmt 0 view .LVU7049
 20570 080e 4D894F38 		mov	QWORD PTR 56[r15], r9	# MEM[base: _500, offset: 56B], sample_max
 20571              	# sieve_extend.c:1226:                         tuning_result[tuning_result_index].blocksize_kb = bl
1226:sieve_extend.c ****                         tuning_result[tuning_result_index].free_bits = free_bits;
 20572              		.loc 1 1226 73 view .LVU7050
 20573 0812 4D896710 		mov	QWORD PTR 16[r15], r12	# MEM[base: _500, offset: 16B], blocksize_kb
 20574              	# sieve_extend.c:1227:                         tuning_result[tuning_result_index].free_bits = free_
1227:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_bits = blocksize_bits;
 20575              		.loc 1 1227 70 view .LVU7051
 20576 0816 49896F18 		mov	QWORD PTR 24[r15], rbp	# MEM[base: _500, offset: 24B], free_bits
 20577              	# sieve_extend.c:1228:                         tuning_result[tuning_result_index].blocksize_bits = 
1228:sieve_extend.c ****                         tuning_result[tuning_result_index].smallstep_faster = smallstep_faster;
 20578              		.loc 1 1228 75 view .LVU7052
 20579 081a 49895F08 		mov	QWORD PTR 8[r15], rbx	# MEM[base: _500, offset: 8B], ivtmp.792
 20580              	# sieve_extend.c:1230:                         tuning_result[tuning_result_index].mediumstep_faster
1230:sieve_extend.c ****                         tuning_result[tuning_result_index].vectorstep_faster = vectorstep_faster;
 20581              		.loc 1 1230 78 view .LVU7053
 20582 081e 4D897728 		mov	QWORD PTR 40[r15], r14	# MEM[base: _500, offset: 40B], mediumstep_faster
 20583              	# sieve_extend.c:1231:                         tuning_result[tuning_result_index].vectorstep_faster
1231:sieve_extend.c ****                         tune_benchmark(tuning_result, tuning_result_index);
 20584              		.loc 1 1231 78 view .LVU7054
 20585 0822 49894730 		mov	QWORD PTR 48[r15], rax	# MEM[base: _500, offset: 48B], vectorstep_faster
 20586              	# sieve_extend.c:1224:                         tuning_result[tuning_result_index].sample_duration =
1224:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_max = sample_max;
 20587              		.loc 1 1224 76 view .LVU7055
 20588 0826 C4C17B11 		vmovsd	QWORD PTR 64[r15], xmm4	# MEM[base: _500, offset: 64B], sample_duration
 20588      6740
1225:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_kb = blocksize_kb;
 20589              		.loc 1 1225 25 is_stmt 1 view .LVU7056
1226:sieve_extend.c ****                         tuning_result[tuning_result_index].free_bits = free_bits;
 20590              		.loc 1 1226 25 view .LVU7057
1227:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_bits = blocksize_bits;
 20591              		.loc 1 1227 25 view .LVU7058
1228:sieve_extend.c ****                         tuning_result[tuning_result_index].smallstep_faster = smallstep_faster;
 20592              		.loc 1 1228 25 view .LVU7059
1229:sieve_extend.c ****                         tuning_result[tuning_result_index].mediumstep_faster = mediumstep_faster;
 20593              		.loc 1 1229 25 view .LVU7060
1230:sieve_extend.c ****                         tuning_result[tuning_result_index].vectorstep_faster = vectorstep_faster;
 20594              		.loc 1 1230 25 view .LVU7061
1231:sieve_extend.c ****                         tune_benchmark(tuning_result, tuning_result_index);
 20595              		.loc 1 1231 25 view .LVU7062
1232:sieve_extend.c **** 
 20596              		.loc 1 1232 25 view .LVU7063
 20597 082c E8000000 		call	tune_benchmark	#
 20597      00
 20598              	.LVL1241:
1234:sieve_extend.c ****                             best_avg = tuning_result[tuning_result_index].avg;
 20599              		.loc 1 1234 25 view .LVU7064
 20600              	# sieve_extend.c:1234:                         if ( tuning_result[tuning_result_index].avg > best_a
1234:sieve_extend.c ****                             best_avg = tuning_result[tuning_result_index].avg;
 20601              		.loc 1 1234 64 is_stmt 0 view .LVU7065
GAS LISTING /tmp/cc64mrzX.s 			page 549


 20602 0831 C4C17B10 		vmovsd	xmm3, QWORD PTR 88[r15]	# _253, MEM[base: _500, offset: 88B]
 20602      5F58
 20603              	# sieve_extend.c:1234:                         if ( tuning_result[tuning_result_index].avg > best_a
1234:sieve_extend.c ****                             best_avg = tuning_result[tuning_result_index].avg;
 20604              		.loc 1 1234 28 view .LVU7066
 20605 0837 C5F92F5C 		vcomisd	xmm3, QWORD PTR 40[rsp]	# _253, %sfp
 20605      2428
 20606 083d 0F875DFF 		ja	.L1762	#,
 20606      FFFF
 20607              	.L1763:
1242:sieve_extend.c ****                         tuning_result_index++;
 20608              		.loc 1 1242 25 is_stmt 1 view .LVU7067
 20609              	# sieve_extend.c:1242:                         if (option_verboselevel >= 3) { printf("...."); tuni
1242:sieve_extend.c ****                         tuning_result_index++;
 20610              		.loc 1 1242 28 is_stmt 0 view .LVU7068
 20611 0843 837C2458 		cmp	DWORD PTR 88[rsp], 2	# %sfp,
 20611      02
 20612 0848 0F8E77FF 		jle	.L1760	#,
 20612      FFFF
1242:sieve_extend.c ****                         tuning_result_index++;
 20613              		.loc 1 1242 57 is_stmt 1 view .LVU7069
 20614              	.LVL1242:
 20615              	.LBB1102:
 20616              	.LBI1102:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20617              		.loc 3 105 1 view .LVU7070
 20618              	.LBB1103:
 20619              		.loc 3 107 3 view .LVU7071
 20620              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 20621              		.loc 3 107 10 is_stmt 0 view .LVU7072
 20622 084e 488D3500 		lea	rsi, .LC52[rip]	#,
 20622      000000
 20623 0855 BF010000 		mov	edi, 1	#,
 20623      00
 20624 085a 31C0     		xor	eax, eax	#
 20625 085c E8000000 		call	__printf_chk@PLT	#
 20625      00
 20626              	.LVL1243:
 20627              		.loc 3 107 10 view .LVU7073
 20628              	.LBE1103:
 20629              	.LBE1102:
1242:sieve_extend.c ****                         tuning_result_index++;
 20630              		.loc 1 1242 73 is_stmt 1 view .LVU7074
 20631              	.LBB1104:
 20632              	.LBI1104:
1157:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
 20633              		.loc 1 1157 20 view .LVU7075
 20634              	.LBB1105:
1158:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
 20635              		.loc 1 1158 5 view .LVU7076
 20636              	.LBB1106:
 20637              	.LBI1106:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20638              		.loc 3 105 1 view .LVU7077
 20639              	.LBB1107:
 20640              		.loc 3 107 3 view .LVU7078
 20641              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
GAS LISTING /tmp/cc64mrzX.s 			page 550


 20642              		.loc 3 107 10 is_stmt 0 view .LVU7079
 20643 0861 498B7F38 		mov	rdi, QWORD PTR 56[r15]	# MEM[base: _500, offset: 56B], MEM[base: _500, offset: 56B]
 20644 0865 C4C17B10 		vmovsd	xmm0, QWORD PTR 80[r15]	# MEM[base: _500, offset: 80B], MEM[base: _500, offset: 80B]
 20644      4750
 20645 086b 498B4F10 		mov	rcx, QWORD PTR 16[r15]	# MEM[base: _500, offset: 16B], MEM[base: _500, offset: 16B]
 20646 086f 498B5708 		mov	rdx, QWORD PTR 8[r15]	# MEM[base: _500, offset: 8B], MEM[base: _500, offset: 8B]
 20647 0873 48897C24 		mov	QWORD PTR 24[rsp], rdi	#, MEM[base: _500, offset: 56B]
 20647      18
 20648 0878 BF010000 		mov	edi, 1	#,
 20648      00
 20649 087d 498B4748 		mov	rax, QWORD PTR 72[r15]	# MEM[base: _500, offset: 72B], MEM[base: _500, offset: 72B]
 20650 0881 48894424 		mov	QWORD PTR 16[rsp], rax	#, MEM[base: _500, offset: 72B]
 20650      10
 20651 0886 B8030000 		mov	eax, 3	#,
 20651      00
 20652 088b 498B7730 		mov	rsi, QWORD PTR 48[r15]	# MEM[base: _500, offset: 48B], MEM[base: _500, offset: 48B]
 20653 088f 48897424 		mov	QWORD PTR 8[rsp], rsi	#, MEM[base: _500, offset: 48B]
 20653      08
 20654 0894 488D3500 		lea	rsi, .LC51[rip]	#,
 20654      000000
 20655 089b 4D8B4728 		mov	r8, QWORD PTR 40[r15]	# MEM[base: _500, offset: 40B], MEM[base: _500, offset: 40B]
 20656 089f 4C890424 		mov	QWORD PTR [rsp], r8	#, MEM[base: _500, offset: 40B]
 20657 08a3 4D8B4F20 		mov	r9, QWORD PTR 32[r15]	#, MEM[base: _500, offset: 32B]
 20658 08a7 4D8B4718 		mov	r8, QWORD PTR 24[r15]	#, MEM[base: _500, offset: 24B]
 20659 08ab C4C17B10 		vmovsd	xmm2, QWORD PTR 88[r15]	#, MEM[base: _500, offset: 88B]
 20659      5758
 20660 08b1 C4C17B10 		vmovsd	xmm1, QWORD PTR 64[r15]	#, MEM[base: _500, offset: 64B]
 20660      4F40
 20661 08b7 E8000000 		call	__printf_chk@PLT	#
 20661      00
 20662              	.LVL1244:
 20663              		.loc 3 107 10 view .LVU7080
 20664              	.LBE1107:
 20665              	.LBE1106:
 20666              	# sieve_extend.c:1163: }
1163:sieve_extend.c **** 
 20667              		.loc 1 1163 1 view .LVU7081
 20668 08bc E904FFFF 		jmp	.L1760	#
 20668      FF
 20669              	.LVL1245:
 20670              		.p2align 4,,7
 20671 08c1 0F1F8000 		.p2align 3
 20671      000000
 20672              	.L1761:
1163:sieve_extend.c **** 
 20673              		.loc 1 1163 1 view .LVU7082
 20674              	.LBE1105:
 20675              	.LBE1104:
 20676              	.LBE1118:
 20677              	.LBE1120:
1217:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 20678              		.loc 1 1217 67 is_stmt 1 view .LVU7083
 20679              	# sieve_extend.c:1217:                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_
1217:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 20680              		.loc 1 1217 80 is_stmt 0 view .LVU7084
 20681 08c8 49D1EC   		shr	r12	# blocksize_kb
 20682              	.LVL1246:
GAS LISTING /tmp/cc64mrzX.s 			page 551


1217:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 20683              		.loc 1 1217 50 is_stmt 1 view .LVU7085
 20684              	# sieve_extend.c:1217:                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_
1217:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 20685              		.loc 1 1217 17 is_stmt 0 view .LVU7086
 20686 08cb 836C245C 		sub	DWORD PTR 92[rsp], 1	# %sfp,
 20686      01
 20687 08d0 0F85AAFE 		jne	.L1767	#,
 20687      FFFF
 20688              	.LBE1122:
1216:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 20689              		.loc 1 1216 101 is_stmt 1 view .LVU7087
 20690              	# sieve_extend.c:1216:             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep
1216:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 20691              		.loc 1 1216 119 is_stmt 0 view .LVU7088
 20692 08d6 4C8BA424 		mov	r12, QWORD PTR 128[rsp]	# vectorstep_faster_steps, %sfp
 20692      80000000 
 20693              	.LVL1247:
1216:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 20694              		.loc 1 1216 119 view .LVU7089
 20695 08de 4C016424 		add	QWORD PTR 48[rsp], r12	# %sfp, vectorstep_faster_steps
 20695      30
 20696              	.LVL1248:
1216:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 20697              		.loc 1 1216 119 view .LVU7090
 20698 08e3 488B5C24 		mov	rbx, QWORD PTR 48[rsp]	# vectorstep_faster, %sfp
 20698      30
 20699              	.LVL1249:
1216:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 20700              		.loc 1 1216 67 is_stmt 1 view .LVU7091
 20701              	# sieve_extend.c:1216:             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep
1216:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 20702              		.loc 1 1216 13 is_stmt 0 view .LVU7092
 20703 08e8 4881FB00 		cmp	rbx, 256	# vectorstep_faster,
 20703      010000
 20704 08ef 0F867BFE 		jbe	.L1769	#,
 20704      FFFF
 20705              	.LBE1098:
1215:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE;
 20706              		.loc 1 1215 94 is_stmt 1 view .LVU7093
 20707              	# sieve_extend.c:1215:         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_fast
1215:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE;
 20708              		.loc 1 1215 112 is_stmt 0 view .LVU7094
 20709 08f5 4C03B424 		add	r14, QWORD PTR 136[rsp]	# mediumstep_faster, %sfp
 20709      88000000 
 20710              	.LVL1250:
1215:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE;
 20711              		.loc 1 1215 62 is_stmt 1 view .LVU7095
 20712              	# sieve_extend.c:1215:         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_fast
1215:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE;
 20713              		.loc 1 1215 9 is_stmt 0 view .LVU7096
 20714 08fd 4983FE40 		cmp	r14, 64	# mediumstep_faster,
 20715 0901 0F8659FE 		jbe	.L1771	#,
 20715      FFFF
 20716              	.LBE1097:
1214:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 20717              		.loc 1 1214 75 is_stmt 1 view .LVU7097
GAS LISTING /tmp/cc64mrzX.s 			page 552


 20718              	# sieve_extend.c:1214:     for (counter_t smallstep_faster = 0; smallstep_faster <= WORD_SIZE/2; sm
1214:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 20719              		.loc 1 1214 92 is_stmt 0 view .LVU7098
 20720 0907 4C8BB424 		mov	r14, QWORD PTR 136[rsp]	# smallstep_faster_steps, %sfp
 20720      88000000 
 20721              	.LVL1251:
1214:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 20722              		.loc 1 1214 92 view .LVU7099
 20723 090f 4C017424 		add	QWORD PTR 32[rsp], r14	# %sfp, smallstep_faster_steps
 20723      20
 20724              	.LVL1252:
1214:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 20725              		.loc 1 1214 92 view .LVU7100
 20726 0914 4C8B7C24 		mov	r15, QWORD PTR 32[rsp]	# smallstep_faster, %sfp
 20726      20
 20727              	.LVL1253:
1214:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 20728              		.loc 1 1214 42 is_stmt 1 view .LVU7101
 20729              	# sieve_extend.c:1214:     for (counter_t smallstep_faster = 0; smallstep_faster <= WORD_SIZE/2; sm
1214:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 20730              		.loc 1 1214 5 is_stmt 0 view .LVU7102
 20731 0919 4983FF20 		cmp	r15, 32	# smallstep_faster,
 20732 091d 0F8634FE 		jbe	.L1759	#,
 20732      FFFF
 20733 0923 4C8B7C24 		mov	r15, QWORD PTR 80[rsp]	# tuning_result, %sfp
 20733      50
 20734              	.LVL1254:
1214:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 20735              		.loc 1 1214 5 view .LVU7103
 20736              	.LBE1127:
1249:sieve_extend.c ****         printf("%ju results. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju\n"
 20737              		.loc 1 1249 5 is_stmt 1 view .LVU7104
 20738              	# sieve_extend.c:1249:     if (option_verboselevel >= 2) {
1249:sieve_extend.c ****         printf("%ju results. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju\n"
 20739              		.loc 1 1249 8 is_stmt 0 view .LVU7105
 20740 0928 837C2458 		cmp	DWORD PTR 88[rsp], 1	# %sfp,
 20740      01
 20741 092d 7E31     		jle	.L1772	#,
1250:sieve_extend.c ****         printf("Best options\n");
 20742              		.loc 1 1250 9 is_stmt 1 view .LVU7106
 20743              	.LVL1255:
 20744              	.LBB1128:
 20745              	.LBI1128:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20746              		.loc 3 105 1 view .LVU7107
 20747              	.LBB1129:
 20748              		.loc 3 107 3 view .LVU7108
 20749              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 20750              		.loc 3 107 10 is_stmt 0 view .LVU7109
 20751 092f 4C8B4C24 		mov	r9, QWORD PTR 72[rsp]	#, %sfp
 20751      48
 20752 0934 BF010000 		mov	edi, 1	#,
 20752      00
 20753 0939 4C8B4424 		mov	r8, QWORD PTR 64[rsp]	#, %sfp
 20753      40
 20754 093e 4C89EA   		mov	rdx, r13	#, tuning_results
 20755 0941 488B4C24 		mov	rcx, QWORD PTR 56[rsp]	#, %sfp
GAS LISTING /tmp/cc64mrzX.s 			page 553


 20755      38
 20756 0946 488D3500 		lea	rsi, .LC53[rip]	#,
 20756      000000
 20757 094d 31C0     		xor	eax, eax	#
 20758 094f E8000000 		call	__printf_chk@PLT	#
 20758      00
 20759              	.LVL1256:
 20760              		.loc 3 107 10 view .LVU7110
 20761              	.LBE1129:
 20762              	.LBE1128:
1251:sieve_extend.c ****     }
 20763              		.loc 1 1251 9 is_stmt 1 view .LVU7111
 20764              	.LBB1130:
 20765              	.LBI1130:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20766              		.loc 3 105 1 view .LVU7112
 20767              	.LBB1131:
 20768              		.loc 3 107 3 view .LVU7113
 20769              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 20770              		.loc 3 107 10 is_stmt 0 view .LVU7114
 20771 0954 488D3D00 		lea	rdi, .LC54[rip]	#,
 20771      000000
 20772 095b E8000000 		call	puts@PLT	#
 20772      00
 20773              	.LVL1257:
 20774              	.L1772:
 20775              		.loc 3 107 10 view .LVU7115
 20776              	.LBE1131:
 20777              	.LBE1130:
 20778              	.LBB1132:
 20779              	# sieve_extend.c:1261:                 for (counter_t tuning_result_index=0; tuning_result_index<mi
1261:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 20780              		.loc 1 1261 75 view .LVU7116
 20781 0960 4C8B7424 		mov	r14, QWORD PTR 104[rsp]	# sample_max, %sfp
 20781      68
 20782              	.LBE1132:
 20783              	.LBB1141:
 20784              	# sieve_extend.c:1269:         for (counter_t i=0; i<tuning_results; i++) {
1269:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20785              		.loc 1 1269 24 view .LVU7117
 20786 0965 4531E4   		xor	r12d, r12d	# step
 20787              	.LVL1258:
 20788              	.L1777:
1269:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20789              		.loc 1 1269 24 view .LVU7118
 20790              	.LBE1141:
1254:sieve_extend.c ****         qsort(tuning_result, (size_t)tuning_results, sizeof(tuning_result_type), compare_tuning_res
 20791              		.loc 1 1254 11 is_stmt 1 view .LVU7119
 20792 0968 4983FD04 		cmp	r13, 4	# tuning_results,
 20793 096c 0F861404 		jbe	.L1873	#,
 20793      0000
1255:sieve_extend.c ****         step++;
 20794              		.loc 1 1255 9 view .LVU7120
 20795 0972 488D0D00 		lea	rcx, compare_tuning_result[rip]	#,
 20795      000000
 20796 0979 BA600000 		mov	edx, 96	#,
 20796      00
GAS LISTING /tmp/cc64mrzX.s 			page 554


 20797 097e 4C89EE   		mov	rsi, r13	#, tuning_results
 20798 0981 4C89FF   		mov	rdi, r15	#, tuning_result
 20799 0984 E8000000 		call	qsort@PLT	#
 20799      00
 20800              	.LVL1259:
1256:sieve_extend.c ****         if (option_verboselevel >= 2) {
 20801              		.loc 1 1256 9 view .LVU7121
 20802              	# sieve_extend.c:1256:         step++;
1256:sieve_extend.c ****         if (option_verboselevel >= 2) {
 20803              		.loc 1 1256 13 is_stmt 0 view .LVU7122
 20804 0989 4983C401 		add	r12, 1	# step,
 20805              	.LVL1260:
1257:sieve_extend.c ****             tuning_result_index = 0;
 20806              		.loc 1 1257 9 is_stmt 1 view .LVU7123
 20807              	# sieve_extend.c:1257:         if (option_verboselevel >= 2) {
1257:sieve_extend.c ****             tuning_result_index = 0;
 20808              		.loc 1 1257 12 is_stmt 0 view .LVU7124
 20809 098d 837C2458 		cmp	DWORD PTR 88[rsp], 1	# %sfp,
 20809      01
 20810 0992 0F8F7D02 		jg	.L1773	#,
 20810      0000
 20811              	.L1775:
1267:sieve_extend.c **** 
 20812              		.loc 1 1267 9 is_stmt 1 view .LVU7125
 20813              	# sieve_extend.c:1267:         tuning_results = tuning_results / 2;
1267:sieve_extend.c **** 
 20814              		.loc 1 1267 24 is_stmt 0 view .LVU7126
 20815 0998 49D1ED   		shr	r13	# tuning_results
 20816              	.LVL1261:
1269:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20817              		.loc 1 1269 9 is_stmt 1 view .LVU7127
 20818              	.LBB1142:
1269:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20819              		.loc 1 1269 14 view .LVU7128
1269:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20820              		.loc 1 1269 29 view .LVU7129
 20821              	# sieve_extend.c:1269:         for (counter_t i=0; i<tuning_results; i++) {
1269:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20822              		.loc 1 1269 24 is_stmt 0 view .LVU7130
 20823 099b 31ED     		xor	ebp, ebp	# i
 20824 099d 4D89E8   		mov	r8, r13	# tmp487, tuning_results
 20825 09a0 498D5F38 		lea	rbx, 56[r15]	# ivtmp.773,
 20826 09a4 4183E007 		and	r8d, 7	# tmp487,
 20827 09a8 0F84D200 		je	.L1774	#,
 20827      0000
 20828 09ae 4983F801 		cmp	r8, 1	# tmp487,
 20829 09b2 0F84A900 		je	.L1832	#,
 20829      0000
 20830 09b8 4983F802 		cmp	r8, 2	# tmp487,
 20831 09bc 0F848900 		je	.L1833	#,
 20831      0000
 20832 09c2 4983F803 		cmp	r8, 3	# tmp487,
 20833 09c6 746D     		je	.L1834	#,
 20834 09c8 4983F804 		cmp	r8, 4	# tmp487,
 20835 09cc 7451     		je	.L1835	#,
 20836 09ce 4983F805 		cmp	r8, 5	# tmp487,
 20837 09d2 7435     		je	.L1836	#,
GAS LISTING /tmp/cc64mrzX.s 			page 555


 20838 09d4 4983F806 		cmp	r8, 6	# tmp487,
 20839 09d8 7419     		je	.L1837	#,
1270:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20840              		.loc 1 1270 13 is_stmt 1 view .LVU7131
 20841 09da 31F6     		xor	esi, esi	#
 20842 09dc 4C89FF   		mov	rdi, r15	#, tuning_result
 20843 09df E8000000 		call	tune_benchmark	#
 20843      00
 20844              	.LVL1262:
1271:sieve_extend.c ****         }
 20845              		.loc 1 1271 13 view .LVU7132
 20846              	# sieve_extend.c:1269:         for (counter_t i=0; i<tuning_results; i++) {
1269:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20847              		.loc 1 1269 48 is_stmt 0 view .LVU7133
 20848 09e4 BD010000 		mov	ebp, 1	# i,
 20848      00
 20849              	# sieve_extend.c:1271:             tuning_result[i].sample_max += sample_max;
1271:sieve_extend.c ****         }
 20850              		.loc 1 1271 41 view .LVU7134
 20851 09e9 4C0133   		add	QWORD PTR [rbx], r14	# MEM[base: _116, offset: 0B], sample_max
1269:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20852              		.loc 1 1269 47 is_stmt 1 view .LVU7135
 20853              	.LVL1263:
1269:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20854              		.loc 1 1269 29 view .LVU7136
 20855 09ec 498D9F98 		lea	rbx, 152[r15]	# ivtmp.773,
 20855      000000
 20856              	.L1837:
1270:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20857              		.loc 1 1270 13 view .LVU7137
 20858 09f3 4889EE   		mov	rsi, rbp	#, i
 20859 09f6 4C89FF   		mov	rdi, r15	#, tuning_result
 20860 09f9 E8000000 		call	tune_benchmark	#
 20860      00
 20861              	.LVL1264:
1271:sieve_extend.c ****         }
 20862              		.loc 1 1271 13 view .LVU7138
 20863              	# sieve_extend.c:1269:         for (counter_t i=0; i<tuning_results; i++) {
1269:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20864              		.loc 1 1269 48 is_stmt 0 view .LVU7139
 20865 09fe 4883C501 		add	rbp, 1	# i,
 20866              	# sieve_extend.c:1271:             tuning_result[i].sample_max += sample_max;
1271:sieve_extend.c ****         }
 20867              		.loc 1 1271 41 view .LVU7140
 20868 0a02 4C0133   		add	QWORD PTR [rbx], r14	# MEM[base: _116, offset: 0B], sample_max
1269:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20869              		.loc 1 1269 47 is_stmt 1 view .LVU7141
1269:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20870              		.loc 1 1269 29 view .LVU7142
 20871 0a05 4883C360 		add	rbx, 96	# ivtmp.773,
 20872              	.L1836:
1270:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20873              		.loc 1 1270 13 view .LVU7143
 20874 0a09 4889EE   		mov	rsi, rbp	#, i
 20875 0a0c 4C89FF   		mov	rdi, r15	#, tuning_result
 20876 0a0f E8000000 		call	tune_benchmark	#
 20876      00
GAS LISTING /tmp/cc64mrzX.s 			page 556


 20877              	.LVL1265:
1271:sieve_extend.c ****         }
 20878              		.loc 1 1271 13 view .LVU7144
 20879              	# sieve_extend.c:1269:         for (counter_t i=0; i<tuning_results; i++) {
1269:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20880              		.loc 1 1269 48 is_stmt 0 view .LVU7145
 20881 0a14 4883C501 		add	rbp, 1	# i,
 20882              	# sieve_extend.c:1271:             tuning_result[i].sample_max += sample_max;
1271:sieve_extend.c ****         }
 20883              		.loc 1 1271 41 view .LVU7146
 20884 0a18 4C0133   		add	QWORD PTR [rbx], r14	# MEM[base: _116, offset: 0B], sample_max
1269:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20885              		.loc 1 1269 47 is_stmt 1 view .LVU7147
1269:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20886              		.loc 1 1269 29 view .LVU7148
 20887 0a1b 4883C360 		add	rbx, 96	# ivtmp.773,
 20888              	.L1835:
1270:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20889              		.loc 1 1270 13 view .LVU7149
 20890 0a1f 4889EE   		mov	rsi, rbp	#, i
 20891 0a22 4C89FF   		mov	rdi, r15	#, tuning_result
 20892 0a25 E8000000 		call	tune_benchmark	#
 20892      00
 20893              	.LVL1266:
1271:sieve_extend.c ****         }
 20894              		.loc 1 1271 13 view .LVU7150
 20895              	# sieve_extend.c:1269:         for (counter_t i=0; i<tuning_results; i++) {
1269:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20896              		.loc 1 1269 48 is_stmt 0 view .LVU7151
 20897 0a2a 4883C501 		add	rbp, 1	# i,
 20898              	# sieve_extend.c:1271:             tuning_result[i].sample_max += sample_max;
1271:sieve_extend.c ****         }
 20899              		.loc 1 1271 41 view .LVU7152
 20900 0a2e 4C0133   		add	QWORD PTR [rbx], r14	# MEM[base: _116, offset: 0B], sample_max
1269:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20901              		.loc 1 1269 47 is_stmt 1 view .LVU7153
1269:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20902              		.loc 1 1269 29 view .LVU7154
 20903 0a31 4883C360 		add	rbx, 96	# ivtmp.773,
 20904              	.L1834:
1270:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20905              		.loc 1 1270 13 view .LVU7155
 20906 0a35 4889EE   		mov	rsi, rbp	#, i
 20907 0a38 4C89FF   		mov	rdi, r15	#, tuning_result
 20908 0a3b E8000000 		call	tune_benchmark	#
 20908      00
 20909              	.LVL1267:
1271:sieve_extend.c ****         }
 20910              		.loc 1 1271 13 view .LVU7156
 20911              	# sieve_extend.c:1269:         for (counter_t i=0; i<tuning_results; i++) {
1269:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20912              		.loc 1 1269 48 is_stmt 0 view .LVU7157
 20913 0a40 4883C501 		add	rbp, 1	# i,
 20914              	# sieve_extend.c:1271:             tuning_result[i].sample_max += sample_max;
1271:sieve_extend.c ****         }
 20915              		.loc 1 1271 41 view .LVU7158
 20916 0a44 4C0133   		add	QWORD PTR [rbx], r14	# MEM[base: _116, offset: 0B], sample_max
GAS LISTING /tmp/cc64mrzX.s 			page 557


1269:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20917              		.loc 1 1269 47 is_stmt 1 view .LVU7159
1269:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20918              		.loc 1 1269 29 view .LVU7160
 20919 0a47 4883C360 		add	rbx, 96	# ivtmp.773,
 20920              	.L1833:
1270:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20921              		.loc 1 1270 13 view .LVU7161
 20922 0a4b 4889EE   		mov	rsi, rbp	#, i
 20923 0a4e 4C89FF   		mov	rdi, r15	#, tuning_result
 20924 0a51 E8000000 		call	tune_benchmark	#
 20924      00
 20925              	.LVL1268:
1271:sieve_extend.c ****         }
 20926              		.loc 1 1271 13 view .LVU7162
 20927              	# sieve_extend.c:1269:         for (counter_t i=0; i<tuning_results; i++) {
1269:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20928              		.loc 1 1269 48 is_stmt 0 view .LVU7163
 20929 0a56 4883C501 		add	rbp, 1	# i,
 20930              	# sieve_extend.c:1271:             tuning_result[i].sample_max += sample_max;
1271:sieve_extend.c ****         }
 20931              		.loc 1 1271 41 view .LVU7164
 20932 0a5a 4C0133   		add	QWORD PTR [rbx], r14	# MEM[base: _116, offset: 0B], sample_max
1269:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20933              		.loc 1 1269 47 is_stmt 1 view .LVU7165
1269:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20934              		.loc 1 1269 29 view .LVU7166
 20935 0a5d 4883C360 		add	rbx, 96	# ivtmp.773,
 20936              	.L1832:
1270:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20937              		.loc 1 1270 13 view .LVU7167
 20938 0a61 4889EE   		mov	rsi, rbp	#, i
 20939 0a64 4C89FF   		mov	rdi, r15	#, tuning_result
 20940              	# sieve_extend.c:1269:         for (counter_t i=0; i<tuning_results; i++) {
1269:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20941              		.loc 1 1269 48 is_stmt 0 view .LVU7168
 20942 0a67 4883C501 		add	rbp, 1	# i,
 20943              	# sieve_extend.c:1270:             tune_benchmark(tuning_result, i);
1270:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20944              		.loc 1 1270 13 view .LVU7169
 20945 0a6b E8000000 		call	tune_benchmark	#
 20945      00
 20946              	.LVL1269:
1271:sieve_extend.c ****         }
 20947              		.loc 1 1271 13 is_stmt 1 view .LVU7170
 20948              	# sieve_extend.c:1271:             tuning_result[i].sample_max += sample_max;
1271:sieve_extend.c ****         }
 20949              		.loc 1 1271 41 is_stmt 0 view .LVU7171
 20950 0a70 4C0133   		add	QWORD PTR [rbx], r14	# MEM[base: _116, offset: 0B], sample_max
1269:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20951              		.loc 1 1269 47 is_stmt 1 view .LVU7172
1269:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20952              		.loc 1 1269 29 view .LVU7173
 20953 0a73 4883C360 		add	rbx, 96	# ivtmp.773,
 20954              	# sieve_extend.c:1269:         for (counter_t i=0; i<tuning_results; i++) {
1269:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20955              		.loc 1 1269 9 is_stmt 0 view .LVU7174
GAS LISTING /tmp/cc64mrzX.s 			page 558


 20956 0a77 4939ED   		cmp	r13, rbp	# tuning_results, i
 20957 0a7a 0F84E8FE 		je	.L1777	#,
 20957      FFFF
 20958              	.L1774:
1270:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20959              		.loc 1 1270 13 is_stmt 1 view .LVU7175
 20960 0a80 4889EE   		mov	rsi, rbp	#, i
 20961 0a83 4C89FF   		mov	rdi, r15	#, tuning_result
 20962 0a86 E8000000 		call	tune_benchmark	#
 20962      00
 20963              	.LVL1270:
1271:sieve_extend.c ****         }
 20964              		.loc 1 1271 13 view .LVU7176
 20965 0a8b 4C8D5360 		lea	r10, 96[rbx]	# tmp489,
 20966              	# sieve_extend.c:1271:             tuning_result[i].sample_max += sample_max;
1271:sieve_extend.c ****         }
 20967              		.loc 1 1271 41 is_stmt 0 view .LVU7177
 20968 0a8f 4C0133   		add	QWORD PTR [rbx], r14	# MEM[base: _116, offset: 0B], sample_max
1269:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20969              		.loc 1 1269 47 is_stmt 1 view .LVU7178
 20970              	# sieve_extend.c:1269:         for (counter_t i=0; i<tuning_results; i++) {
1269:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20971              		.loc 1 1269 48 is_stmt 0 view .LVU7179
 20972 0a92 488D7501 		lea	rsi, 1[rbp]	# tmp488,
1269:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20973              		.loc 1 1269 29 is_stmt 1 view .LVU7180
 20974              	# sieve_extend.c:1270:             tune_benchmark(tuning_result, i);
1270:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20975              		.loc 1 1270 13 is_stmt 0 view .LVU7181
 20976 0a96 4C89FF   		mov	rdi, r15	#, tuning_result
 20977 0a99 4C895424 		mov	QWORD PTR 32[rsp], r10	# %sfp, tmp489
 20977      20
1270:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20978              		.loc 1 1270 13 is_stmt 1 view .LVU7182
 20979 0a9e E8000000 		call	tune_benchmark	#
 20979      00
 20980              	.LVL1271:
1271:sieve_extend.c ****         }
 20981              		.loc 1 1271 13 view .LVU7183
 20982              	# sieve_extend.c:1271:             tuning_result[i].sample_max += sample_max;
1271:sieve_extend.c ****         }
 20983              		.loc 1 1271 41 is_stmt 0 view .LVU7184
 20984 0aa3 4C8B5C24 		mov	r11, QWORD PTR 32[rsp]	# tmp489, %sfp
 20984      20
 20985 0aa8 4C8D8BC0 		lea	r9, 192[rbx]	# ivtmp.773,
 20985      000000
 20986              	# sieve_extend.c:1269:         for (counter_t i=0; i<tuning_results; i++) {
1269:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20987              		.loc 1 1269 48 view .LVU7185
 20988 0aaf 488D7502 		lea	rsi, 2[rbp]	# i,
 20989              	# sieve_extend.c:1270:             tune_benchmark(tuning_result, i);
1270:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20990              		.loc 1 1270 13 view .LVU7186
 20991 0ab3 4C89FF   		mov	rdi, r15	#, tuning_result
 20992 0ab6 4C894C24 		mov	QWORD PTR 32[rsp], r9	# %sfp, ivtmp.773
 20992      20
 20993              	# sieve_extend.c:1271:             tuning_result[i].sample_max += sample_max;
GAS LISTING /tmp/cc64mrzX.s 			page 559


1271:sieve_extend.c ****         }
 20994              		.loc 1 1271 41 view .LVU7187
 20995 0abb 4D0133   		add	QWORD PTR [r11], r14	# MEM[base: _116, offset: 0B], sample_max
1269:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20996              		.loc 1 1269 47 is_stmt 1 view .LVU7188
1269:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20997              		.loc 1 1269 29 view .LVU7189
1270:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20998              		.loc 1 1270 13 view .LVU7190
 20999 0abe E8000000 		call	tune_benchmark	#
 20999      00
 21000              	.LVL1272:
1271:sieve_extend.c ****         }
 21001              		.loc 1 1271 13 view .LVU7191
 21002              	# sieve_extend.c:1271:             tuning_result[i].sample_max += sample_max;
1271:sieve_extend.c ****         }
 21003              		.loc 1 1271 41 is_stmt 0 view .LVU7192
 21004 0ac3 488B7C24 		mov	rdi, QWORD PTR 32[rsp]	# ivtmp.773, %sfp
 21004      20
 21005 0ac8 488D8320 		lea	rax, 288[rbx]	# ivtmp.773,
 21005      010000
 21006 0acf 48894424 		mov	QWORD PTR 32[rsp], rax	# %sfp, ivtmp.773
 21006      20
 21007              	# sieve_extend.c:1269:         for (counter_t i=0; i<tuning_results; i++) {
1269:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 21008              		.loc 1 1269 48 view .LVU7193
 21009 0ad4 488D7503 		lea	rsi, 3[rbp]	# i,
 21010              	# sieve_extend.c:1271:             tuning_result[i].sample_max += sample_max;
1271:sieve_extend.c ****         }
 21011              		.loc 1 1271 41 view .LVU7194
 21012 0ad8 4C0137   		add	QWORD PTR [rdi], r14	# MEM[base: _116, offset: 0B], sample_max
1269:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 21013              		.loc 1 1269 47 is_stmt 1 view .LVU7195
1269:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 21014              		.loc 1 1269 29 view .LVU7196
1270:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 21015              		.loc 1 1270 13 view .LVU7197
 21016 0adb 4C89FF   		mov	rdi, r15	#, tuning_result
 21017 0ade E8000000 		call	tune_benchmark	#
 21017      00
 21018              	.LVL1273:
1271:sieve_extend.c ****         }
 21019              		.loc 1 1271 13 view .LVU7198
 21020              	# sieve_extend.c:1271:             tuning_result[i].sample_max += sample_max;
1271:sieve_extend.c ****         }
 21021              		.loc 1 1271 41 is_stmt 0 view .LVU7199
 21022 0ae3 488B5424 		mov	rdx, QWORD PTR 32[rsp]	# ivtmp.773, %sfp
 21022      20
 21023 0ae8 488D8B80 		lea	rcx, 384[rbx]	# ivtmp.773,
 21023      010000
 21024              	# sieve_extend.c:1269:         for (counter_t i=0; i<tuning_results; i++) {
1269:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 21025              		.loc 1 1269 48 view .LVU7200
 21026 0aef 488D7504 		lea	rsi, 4[rbp]	# i,
 21027              	# sieve_extend.c:1270:             tune_benchmark(tuning_result, i);
1270:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 21028              		.loc 1 1270 13 view .LVU7201
GAS LISTING /tmp/cc64mrzX.s 			page 560


 21029 0af3 4C89FF   		mov	rdi, r15	#, tuning_result
 21030 0af6 48894C24 		mov	QWORD PTR 32[rsp], rcx	# %sfp, ivtmp.773
 21030      20
 21031              	# sieve_extend.c:1271:             tuning_result[i].sample_max += sample_max;
1271:sieve_extend.c ****         }
 21032              		.loc 1 1271 41 view .LVU7202
 21033 0afb 4C0132   		add	QWORD PTR [rdx], r14	# MEM[base: _116, offset: 0B], sample_max
1269:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 21034              		.loc 1 1269 47 is_stmt 1 view .LVU7203
1269:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 21035              		.loc 1 1269 29 view .LVU7204
1270:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 21036              		.loc 1 1270 13 view .LVU7205
 21037 0afe E8000000 		call	tune_benchmark	#
 21037      00
 21038              	.LVL1274:
1271:sieve_extend.c ****         }
 21039              		.loc 1 1271 13 view .LVU7206
 21040              	# sieve_extend.c:1271:             tuning_result[i].sample_max += sample_max;
1271:sieve_extend.c ****         }
 21041              		.loc 1 1271 41 is_stmt 0 view .LVU7207
 21042 0b03 488B7424 		mov	rsi, QWORD PTR 32[rsp]	# ivtmp.773, %sfp
 21042      20
 21043 0b08 4C8D83E0 		lea	r8, 480[rbx]	# ivtmp.773,
 21043      010000
 21044 0b0f 4C894424 		mov	QWORD PTR 32[rsp], r8	# %sfp, ivtmp.773
 21044      20
 21045              	# sieve_extend.c:1270:             tune_benchmark(tuning_result, i);
1270:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 21046              		.loc 1 1270 13 view .LVU7208
 21047 0b14 4C89FF   		mov	rdi, r15	#, tuning_result
 21048              	# sieve_extend.c:1271:             tuning_result[i].sample_max += sample_max;
1271:sieve_extend.c ****         }
 21049              		.loc 1 1271 41 view .LVU7209
 21050 0b17 4C0136   		add	QWORD PTR [rsi], r14	# MEM[base: _116, offset: 0B], sample_max
1269:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 21051              		.loc 1 1269 47 is_stmt 1 view .LVU7210
 21052              	# sieve_extend.c:1269:         for (counter_t i=0; i<tuning_results; i++) {
1269:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 21053              		.loc 1 1269 48 is_stmt 0 view .LVU7211
 21054 0b1a 488D7505 		lea	rsi, 5[rbp]	# i,
1269:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 21055              		.loc 1 1269 29 is_stmt 1 view .LVU7212
1270:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 21056              		.loc 1 1270 13 view .LVU7213
 21057 0b1e E8000000 		call	tune_benchmark	#
 21057      00
 21058              	.LVL1275:
1271:sieve_extend.c ****         }
 21059              		.loc 1 1271 13 view .LVU7214
 21060              	# sieve_extend.c:1271:             tuning_result[i].sample_max += sample_max;
1271:sieve_extend.c ****         }
 21061              		.loc 1 1271 41 is_stmt 0 view .LVU7215
 21062 0b23 4C8B5424 		mov	r10, QWORD PTR 32[rsp]	# ivtmp.773, %sfp
 21062      20
 21063 0b28 4C8D9B40 		lea	r11, 576[rbx]	# ivtmp.773,
 21063      020000
GAS LISTING /tmp/cc64mrzX.s 			page 561


 21064              	# sieve_extend.c:1269:         for (counter_t i=0; i<tuning_results; i++) {
1269:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 21065              		.loc 1 1269 48 view .LVU7216
 21066 0b2f 488D7506 		lea	rsi, 6[rbp]	# i,
 21067              	# sieve_extend.c:1270:             tune_benchmark(tuning_result, i);
1270:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 21068              		.loc 1 1270 13 view .LVU7217
 21069 0b33 4C89FF   		mov	rdi, r15	#, tuning_result
 21070 0b36 4C895C24 		mov	QWORD PTR 32[rsp], r11	# %sfp, ivtmp.773
 21070      20
 21071              	# sieve_extend.c:1271:             tuning_result[i].sample_max += sample_max;
1271:sieve_extend.c ****         }
 21072              		.loc 1 1271 41 view .LVU7218
 21073 0b3b 4D0132   		add	QWORD PTR [r10], r14	# MEM[base: _116, offset: 0B], sample_max
1269:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 21074              		.loc 1 1269 47 is_stmt 1 view .LVU7219
1269:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 21075              		.loc 1 1269 29 view .LVU7220
1270:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 21076              		.loc 1 1270 13 view .LVU7221
 21077 0b3e E8000000 		call	tune_benchmark	#
 21077      00
 21078              	.LVL1276:
1271:sieve_extend.c ****         }
 21079              		.loc 1 1271 13 view .LVU7222
 21080              	# sieve_extend.c:1271:             tuning_result[i].sample_max += sample_max;
1271:sieve_extend.c ****         }
 21081              		.loc 1 1271 41 is_stmt 0 view .LVU7223
 21082 0b43 4C8B4C24 		mov	r9, QWORD PTR 32[rsp]	# ivtmp.773, %sfp
 21082      20
 21083 0b48 488DBBA0 		lea	rdi, 672[rbx]	# ivtmp.773,
 21083      020000
 21084              	# sieve_extend.c:1269:         for (counter_t i=0; i<tuning_results; i++) {
1269:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 21085              		.loc 1 1269 48 view .LVU7224
 21086 0b4f 488D7507 		lea	rsi, 7[rbp]	# i,
 21087 0b53 4883C508 		add	rbp, 8	# i,
 21088 0b57 48897C24 		mov	QWORD PTR 32[rsp], rdi	# %sfp, ivtmp.773
 21088      20
 21089              	# sieve_extend.c:1270:             tune_benchmark(tuning_result, i);
1270:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 21090              		.loc 1 1270 13 view .LVU7225
 21091 0b5c 4C89FF   		mov	rdi, r15	#, tuning_result
 21092              	# sieve_extend.c:1271:             tuning_result[i].sample_max += sample_max;
1271:sieve_extend.c ****         }
 21093              		.loc 1 1271 41 view .LVU7226
 21094 0b5f 4D0131   		add	QWORD PTR [r9], r14	# MEM[base: _116, offset: 0B], sample_max
1269:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 21095              		.loc 1 1269 47 is_stmt 1 view .LVU7227
1269:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 21096              		.loc 1 1269 29 view .LVU7228
1270:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 21097              		.loc 1 1270 13 view .LVU7229
 21098 0b62 4881C300 		add	rbx, 768	# ivtmp.773,
 21098      030000
 21099 0b69 E8000000 		call	tune_benchmark	#
 21099      00
GAS LISTING /tmp/cc64mrzX.s 			page 562


 21100              	.LVL1277:
1271:sieve_extend.c ****         }
 21101              		.loc 1 1271 13 view .LVU7230
 21102              	# sieve_extend.c:1271:             tuning_result[i].sample_max += sample_max;
1271:sieve_extend.c ****         }
 21103              		.loc 1 1271 41 is_stmt 0 view .LVU7231
 21104 0b6e 488B4424 		mov	rax, QWORD PTR 32[rsp]	# ivtmp.773, %sfp
 21104      20
 21105 0b73 4C0130   		add	QWORD PTR [rax], r14	# MEM[base: _116, offset: 0B], sample_max
1269:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 21106              		.loc 1 1269 47 is_stmt 1 view .LVU7232
 21107              	.LVL1278:
1269:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 21108              		.loc 1 1269 29 view .LVU7233
 21109              	# sieve_extend.c:1269:         for (counter_t i=0; i<tuning_results; i++) {
1269:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 21110              		.loc 1 1269 9 is_stmt 0 view .LVU7234
 21111 0b76 4939ED   		cmp	r13, rbp	# tuning_results, i
 21112 0b79 0F8501FF 		jne	.L1774	#,
 21112      FFFF
 21113 0b7f E9E4FDFF 		jmp	.L1777	#
 21113      FF
 21114              	.LVL1279:
 21115              		.p2align 4,,7
 21116 0b84 0F1F4000 		.p2align 3
 21117              	.L1872:
1269:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 21118              		.loc 1 1269 9 view .LVU7235
 21119              	.LBE1142:
 21120              	.LBB1143:
 21121              	.LBB1125:
 21122              	.LBB1124:
 21123              	.LBB1123:
 21124              	.LBB1121:
 21125              	.LBB1119:
 21126              	.LBB1108:
 21127              	.LBB1109:
 21128              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 21129              		.loc 3 107 10 view .LVU7236
 21130 0b88 488D3500 		lea	rsi, .LC50[rip]	#,
 21130      000000
 21131 0b8f BF010000 		mov	edi, 1	#,
 21131      00
 21132 0b94 C5FB115C 		vmovsd	QWORD PTR 40[rsp], xmm3	# %sfp, _253
 21132      2428
 21133              	.LBE1109:
 21134              	.LBE1108:
1240:sieve_extend.c ****                         }
 21135              		.loc 1 1240 60 is_stmt 1 view .LVU7237
 21136              	.LVL1280:
 21137              	.LBB1111:
 21138              	.LBI1108:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 21139              		.loc 3 105 1 view .LVU7238
 21140              	.LBB1110:
 21141              		.loc 3 107 3 view .LVU7239
 21142              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
GAS LISTING /tmp/cc64mrzX.s 			page 563


 21143              		.loc 3 107 10 is_stmt 0 view .LVU7240
 21144 0b9a 31C0     		xor	eax, eax	#
 21145 0b9c E8000000 		call	__printf_chk@PLT	#
 21145      00
 21146              	.LVL1281:
 21147              		.loc 3 107 10 view .LVU7241
 21148              	.LBE1110:
 21149              	.LBE1111:
1240:sieve_extend.c ****                         }
 21150              		.loc 1 1240 76 is_stmt 1 view .LVU7242
 21151              	.LBB1112:
 21152              	.LBI1112:
1157:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
 21153              		.loc 1 1157 20 view .LVU7243
 21154              	.LBB1113:
1158:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
 21155              		.loc 1 1158 5 view .LVU7244
 21156              	.LBB1114:
 21157              	.LBI1114:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 21158              		.loc 3 105 1 view .LVU7245
 21159              	.LBB1115:
 21160              		.loc 3 107 3 view .LVU7246
 21161              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 21162              		.loc 3 107 10 is_stmt 0 view .LVU7247
 21163 0ba1 4D8B4738 		mov	r8, QWORD PTR 56[r15]	# MEM[base: _500, offset: 56B], MEM[base: _500, offset: 56B]
 21164 0ba5 488D3500 		lea	rsi, .LC51[rip]	#,
 21164      000000
 21165 0bac 498B5708 		mov	rdx, QWORD PTR 8[r15]	# MEM[base: _500, offset: 8B], MEM[base: _500, offset: 8B]
 21166 0bb0 BF010000 		mov	edi, 1	#,
 21166      00
 21167 0bb5 C4C17B10 		vmovsd	xmm0, QWORD PTR 80[r15]	# MEM[base: _500, offset: 80B], MEM[base: _500, offset: 80B]
 21167      4750
 21168 0bbb B8030000 		mov	eax, 3	#,
 21168      00
 21169 0bc0 498B4F10 		mov	rcx, QWORD PTR 16[r15]	# MEM[base: _500, offset: 16B], MEM[base: _500, offset: 16B]
 21170 0bc4 4C894424 		mov	QWORD PTR 24[rsp], r8	#, MEM[base: _500, offset: 56B]
 21170      18
 21171 0bc9 4D8B5748 		mov	r10, QWORD PTR 72[r15]	# MEM[base: _500, offset: 72B], MEM[base: _500, offset: 72B]
 21172 0bcd 4C895424 		mov	QWORD PTR 16[rsp], r10	#, MEM[base: _500, offset: 72B]
 21172      10
 21173 0bd2 4D8B5F30 		mov	r11, QWORD PTR 48[r15]	# MEM[base: _500, offset: 48B], MEM[base: _500, offset: 48B]
 21174 0bd6 4C895C24 		mov	QWORD PTR 8[rsp], r11	#, MEM[base: _500, offset: 48B]
 21174      08
 21175 0bdb 4D8B4F28 		mov	r9, QWORD PTR 40[r15]	# MEM[base: _500, offset: 40B], MEM[base: _500, offset: 40B]
 21176 0bdf 4C890C24 		mov	QWORD PTR [rsp], r9	#, MEM[base: _500, offset: 40B]
 21177 0be3 4D8B4F20 		mov	r9, QWORD PTR 32[r15]	#, MEM[base: _500, offset: 32B]
 21178 0be7 4D8B4718 		mov	r8, QWORD PTR 24[r15]	#, MEM[base: _500, offset: 24B]
 21179 0beb C4C17B10 		vmovsd	xmm2, QWORD PTR 88[r15]	#, MEM[base: _500, offset: 88B]
 21179      5758
 21180 0bf1 C4C17B10 		vmovsd	xmm1, QWORD PTR 64[r15]	#, MEM[base: _500, offset: 64B]
 21180      4F40
 21181 0bf7 E8000000 		call	__printf_chk@PLT	#
 21181      00
 21182              	.LVL1282:
 21183              		.loc 3 107 10 view .LVU7248
 21184              	.LBE1115:
GAS LISTING /tmp/cc64mrzX.s 			page 564


 21185              	.LBE1114:
 21186              	# sieve_extend.c:1163: }
1163:sieve_extend.c **** 
 21187              		.loc 1 1163 1 view .LVU7249
 21188 0bfc 488B5424 		mov	rdx, QWORD PTR 32[rsp]	# smallstep_faster, %sfp
 21188      20
 21189 0c01 4C897424 		mov	QWORD PTR 72[rsp], r14	# %sfp, mediumstep_faster
 21189      48
 21190              	.LBE1113:
 21191              	.LBE1112:
 21192              	# sieve_extend.c:1236:                             best_blocksize_bits = blocksize_bits;
1236:sieve_extend.c ****                             best_smallstep_faster = smallstep_faster;
 21193              		.loc 1 1236 49 view .LVU7250
 21194 0c06 48895C24 		mov	QWORD PTR 56[rsp], rbx	# %sfp, ivtmp.792
 21194      38
 21195              	.LBB1117:
 21196              	.LBB1116:
 21197              	# sieve_extend.c:1163: }
1163:sieve_extend.c **** 
 21198              		.loc 1 1163 1 view .LVU7251
 21199 0c0b 48895424 		mov	QWORD PTR 64[rsp], rdx	# %sfp, smallstep_faster
 21199      40
 21200 0c10 E92EFCFF 		jmp	.L1763	#
 21200      FF
 21201              	.LVL1283:
 21202              	.L1773:
1163:sieve_extend.c **** 
 21203              		.loc 1 1163 1 view .LVU7252
 21204              	.LBE1116:
 21205              	.LBE1117:
 21206              	.LBE1119:
 21207              	.LBE1121:
 21208              	.LBE1123:
 21209              	.LBE1124:
 21210              	.LBE1125:
 21211              	.LBE1143:
1258:sieve_extend.c ****             printf("(%ju) ",(uintmax_t)step); tuning_result_print(tuning_result[tuning_result_index
 21212              		.loc 1 1258 13 is_stmt 1 view .LVU7253
1259:sieve_extend.c ****             if (option_verboselevel >= 3) {
 21213              		.loc 1 1259 13 view .LVU7254
 21214              	.LBB1144:
 21215              	.LBI1144:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 21216              		.loc 3 105 1 view .LVU7255
 21217              	.LBB1145:
 21218              		.loc 3 107 3 view .LVU7256
 21219              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 21220              		.loc 3 107 10 is_stmt 0 view .LVU7257
 21221 0c15 4C89E2   		mov	rdx, r12	#, step
 21222 0c18 488D3500 		lea	rsi, .LC55[rip]	#,
 21222      000000
 21223 0c1f BF010000 		mov	edi, 1	#,
 21223      00
 21224 0c24 31C0     		xor	eax, eax	#
 21225 0c26 E8000000 		call	__printf_chk@PLT	#
 21225      00
 21226              	.LVL1284:
GAS LISTING /tmp/cc64mrzX.s 			page 565


 21227              		.loc 3 107 10 view .LVU7258
 21228              	.LBE1145:
 21229              	.LBE1144:
1259:sieve_extend.c ****             if (option_verboselevel >= 3) {
 21230              		.loc 1 1259 47 is_stmt 1 view .LVU7259
 21231              	.LBB1146:
 21232              	.LBI1146:
1157:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
 21233              		.loc 1 1157 20 view .LVU7260
 21234              	.LBB1147:
1158:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
 21235              		.loc 1 1158 5 view .LVU7261
 21236              	.LBB1148:
 21237              	.LBI1148:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 21238              		.loc 3 105 1 view .LVU7262
 21239              	.LBB1149:
 21240              		.loc 3 107 3 view .LVU7263
 21241              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 21242              		.loc 3 107 10 is_stmt 0 view .LVU7264
 21243 0c2b 498B5F38 		mov	rbx, QWORD PTR 56[r15]	# MEM[(struct tuning_result_type *)tuning_result_239 + 56B], MEM[(struc
 21244 0c2f 488D3500 		lea	rsi, .LC51[rip]	#,
 21244      000000
 21245 0c36 C4C17B10 		vmovsd	xmm0, QWORD PTR 80[r15]	# MEM[(struct tuning_result_type *)tuning_result_239 + 80B], MEM[(s
 21245      4750
 21246 0c3c BF010000 		mov	edi, 1	#,
 21246      00
 21247 0c41 498B4F10 		mov	rcx, QWORD PTR 16[r15]	# MEM[(struct tuning_result_type *)tuning_result_239 + 16B], MEM[(struc
 21248 0c45 B8030000 		mov	eax, 3	#,
 21248      00
 21249 0c4a 498B5708 		mov	rdx, QWORD PTR 8[r15]	# MEM[(struct tuning_result_type *)tuning_result_239 + 8B], MEM[(struct 
 21250 0c4e 48895C24 		mov	QWORD PTR 24[rsp], rbx	#, MEM[(struct tuning_result_type *)tuning_result_239 + 56B]
 21250      18
 21251 0c53 4D8B5748 		mov	r10, QWORD PTR 72[r15]	# MEM[(struct tuning_result_type *)tuning_result_239 + 72B], MEM[(struc
 21252 0c57 4C895424 		mov	QWORD PTR 16[rsp], r10	#, MEM[(struct tuning_result_type *)tuning_result_239 + 72B]
 21252      10
 21253 0c5c 4D8B5F30 		mov	r11, QWORD PTR 48[r15]	# MEM[(struct tuning_result_type *)tuning_result_239 + 48B], MEM[(struc
 21254 0c60 4C895C24 		mov	QWORD PTR 8[rsp], r11	#, MEM[(struct tuning_result_type *)tuning_result_239 + 48B]
 21254      08
 21255 0c65 4D8B4F28 		mov	r9, QWORD PTR 40[r15]	# MEM[(struct tuning_result_type *)tuning_result_239 + 40B], MEM[(struct
 21256 0c69 4C890C24 		mov	QWORD PTR [rsp], r9	#, MEM[(struct tuning_result_type *)tuning_result_239 + 40B]
 21257 0c6d 4D8B4F20 		mov	r9, QWORD PTR 32[r15]	#, MEM[(struct tuning_result_type *)tuning_result_239 + 32B]
 21258 0c71 4D8B4718 		mov	r8, QWORD PTR 24[r15]	#, MEM[(struct tuning_result_type *)tuning_result_239 + 24B]
 21259 0c75 C4C17B10 		vmovsd	xmm2, QWORD PTR 88[r15]	#, MEM[(struct tuning_result_type *)tuning_result_239 + 88B]
 21259      5758
 21260 0c7b C4C17B10 		vmovsd	xmm1, QWORD PTR 64[r15]	#, MEM[(struct tuning_result_type *)tuning_result_239 + 64B]
 21260      4F40
 21261 0c81 E8000000 		call	__printf_chk@PLT	#
 21261      00
 21262              	.LVL1285:
 21263              		.loc 3 107 10 view .LVU7265
 21264              	.LBE1149:
 21265              	.LBE1148:
 21266              	.LBE1147:
 21267              	.LBE1146:
1260:sieve_extend.c ****                 for (counter_t tuning_result_index=0; tuning_result_index<min(10,tuning_results); t
 21268              		.loc 1 1260 13 is_stmt 1 view .LVU7266
GAS LISTING /tmp/cc64mrzX.s 			page 566


 21269              	# sieve_extend.c:1260:             if (option_verboselevel >= 3) {
1260:sieve_extend.c ****                 for (counter_t tuning_result_index=0; tuning_result_index<min(10,tuning_results); t
 21270              		.loc 1 1260 16 is_stmt 0 view .LVU7267
 21271 0c86 837C2458 		cmp	DWORD PTR 88[rsp], 2	# %sfp,
 21271      02
 21272 0c8b 0F8407FD 		je	.L1775	#,
 21272      FFFF
 21273 0c91 498D5F08 		lea	rbx, 8[r15]	# ivtmp.779,
 21274              	.LBB1150:
 21275              	# sieve_extend.c:1261:                 for (counter_t tuning_result_index=0; tuning_result_index<mi
1261:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 21276              		.loc 1 1261 32 view .LVU7268
 21277 0c95 31ED     		xor	ebp, ebp	# tuning_result_index
 21278              	.L1776:
 21279              	.LVL1286:
1262:sieve_extend.c ****                 }
 21280              		.loc 1 1262 21 is_stmt 1 view .LVU7269
 21281              	.LBB1133:
 21282              	.LBI1133:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 21283              		.loc 3 105 1 view .LVU7270
 21284              	.LBB1134:
 21285              		.loc 3 107 3 view .LVU7271
 21286              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 21287              		.loc 3 107 10 is_stmt 0 view .LVU7272
 21288 0c97 488D3500 		lea	rsi, .LC56[rip]	#,
 21288      000000
 21289 0c9e BF010000 		mov	edi, 1	#,
 21289      00
 21290 0ca3 31C0     		xor	eax, eax	#
 21291              	.LBE1134:
 21292              	.LBE1133:
 21293              	# sieve_extend.c:1261:                 for (counter_t tuning_result_index=0; tuning_result_index<mi
1261:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 21294              		.loc 1 1261 118 view .LVU7273
 21295 0ca5 4883C501 		add	rbp, 1	# tuning_result_index,
 21296              	.LVL1287:
 21297              	.LBB1136:
 21298              	.LBB1135:
 21299              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 21300              		.loc 3 107 10 view .LVU7274
 21301 0ca9 E8000000 		call	__printf_chk@PLT	#
 21301      00
 21302              	.LVL1288:
 21303              		.loc 3 107 10 view .LVU7275
 21304              	.LBE1135:
 21305              	.LBE1136:
1262:sieve_extend.c ****                 }
 21306              		.loc 1 1262 36 is_stmt 1 view .LVU7276
 21307              	.LBB1137:
 21308              	.LBI1137:
1157:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
 21309              		.loc 1 1157 20 view .LVU7277
 21310              	.LBB1138:
1158:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
 21311              		.loc 1 1158 5 view .LVU7278
 21312              	.LBB1139:
GAS LISTING /tmp/cc64mrzX.s 			page 567


 21313              	.LBI1139:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 21314              		.loc 3 105 1 view .LVU7279
 21315              	.LBB1140:
 21316              		.loc 3 107 3 view .LVU7280
 21317              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 21318              		.loc 3 107 10 is_stmt 0 view .LVU7281
 21319 0cae 488B7B30 		mov	rdi, QWORD PTR 48[rbx]	# MEM[base: _158, offset: 48B], MEM[base: _158, offset: 48B]
 21320 0cb2 4883C360 		add	rbx, 96	# ivtmp.779,
 21321 0cb6 488B4BA8 		mov	rcx, QWORD PTR -88[rbx]	# MEM[base: _158, offset: 8B], MEM[base: _158, offset: 8B]
 21322 0cba C5FB1043 		vmovsd	xmm0, QWORD PTR -24[rbx]	# MEM[base: _158, offset: 72B], MEM[base: _158, offset: 72B]
 21322      E8
 21323 0cbf 48897C24 		mov	QWORD PTR 24[rsp], rdi	#, MEM[base: _158, offset: 48B]
 21323      18
 21324 0cc4 BF010000 		mov	edi, 1	#,
 21324      00
 21325 0cc9 488B43E0 		mov	rax, QWORD PTR -32[rbx]	# MEM[base: _158, offset: 64B], MEM[base: _158, offset: 64B]
 21326 0ccd 48894424 		mov	QWORD PTR 16[rsp], rax	#, MEM[base: _158, offset: 64B]
 21326      10
 21327 0cd2 B8030000 		mov	eax, 3	#,
 21327      00
 21328 0cd7 488B53C8 		mov	rdx, QWORD PTR -56[rbx]	# MEM[base: _158, offset: 40B], MEM[base: _158, offset: 40B]
 21329 0cdb 48895424 		mov	QWORD PTR 8[rsp], rdx	#, MEM[base: _158, offset: 40B]
 21329      08
 21330 0ce0 488B73C0 		mov	rsi, QWORD PTR -64[rbx]	# MEM[base: _158, offset: 32B], MEM[base: _158, offset: 32B]
 21331 0ce4 48893424 		mov	QWORD PTR [rsp], rsi	#, MEM[base: _158, offset: 32B]
 21332 0ce8 488D3500 		lea	rsi, .LC51[rip]	#,
 21332      000000
 21333 0cef 4C8B4BB8 		mov	r9, QWORD PTR -72[rbx]	#, MEM[base: _158, offset: 24B]
 21334 0cf3 4C8B43B0 		mov	r8, QWORD PTR -80[rbx]	#, MEM[base: _158, offset: 16B]
 21335 0cf7 488B53A0 		mov	rdx, QWORD PTR -96[rbx]	#, MEM[base: _158, offset: 0B]
 21336 0cfb C5FB1053 		vmovsd	xmm2, QWORD PTR -16[rbx]	#, MEM[base: _158, offset: 80B]
 21336      F0
 21337 0d00 C5FB104B 		vmovsd	xmm1, QWORD PTR -40[rbx]	#, MEM[base: _158, offset: 56B]
 21337      D8
 21338 0d05 E8000000 		call	__printf_chk@PLT	#
 21338      00
 21339              	.LVL1289:
 21340              		.loc 3 107 10 view .LVU7282
 21341              	.LBE1140:
 21342              	.LBE1139:
 21343              	.LBE1138:
 21344              	.LBE1137:
1261:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 21345              		.loc 1 1261 99 is_stmt 1 view .LVU7283
1261:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 21346              		.loc 1 1261 55 view .LVU7284
 21347              	# sieve_extend.c:1261:                 for (counter_t tuning_result_index=0; tuning_result_index<mi
1261:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 21348              		.loc 1 1261 75 is_stmt 0 view .LVU7285
 21349 0d0a 4983FD0A 		cmp	r13, 10	# tuning_results,
 21350 0d0e B90A0000 		mov	ecx, 10	# tmp422,
 21350      00
 21351 0d13 490F46CD 		cmovbe	rcx, r13	# tuning_results,, tmp422
 21352              	# sieve_extend.c:1261:                 for (counter_t tuning_result_index=0; tuning_result_index<mi
1261:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 21353              		.loc 1 1261 17 view .LVU7286
GAS LISTING /tmp/cc64mrzX.s 			page 568


 21354 0d17 4839CD   		cmp	rbp, rcx	# tuning_result_index, tmp422
 21355 0d1a 0F8277FF 		jb	.L1776	#,
 21355      FFFF
 21356 0d20 E973FCFF 		jmp	.L1775	#
 21356      FF
 21357              	.LVL1290:
 21358              	.L1867:
1261:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 21359              		.loc 1 1261 17 view .LVU7287
 21360              	.LBE1150:
 21361              	.LBE1095:
 21362              	.LBE1094:
 21363              	.LBE1093:
1355:sieve_extend.c ****     }
 21364              		.loc 1 1355 39 is_stmt 1 view .LVU7288
 21365              	.LBB1169:
 21366              	.LBI1169:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 21367              		.loc 3 105 1 view .LVU7289
 21368              	.LBB1170:
 21369              		.loc 3 107 3 view .LVU7290
 21370              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 21371              		.loc 3 107 10 is_stmt 0 view .LVU7291
 21372 0d25 488D3D00 		lea	rdi, .LC48[rip]	#,
 21372      000000
 21373              	.LBE1170:
 21374              	.LBE1169:
 21375              	# sieve_extend.c:1358:     counter_t best_blocksize_bits = default_blocksize;
1358:sieve_extend.c ****     if (option_tunelevel) {
 21376              		.loc 1 1358 15 view .LVU7292
 21377 0d2c 41BE00FC 		mov	r14d, 261120	# best_result$blocksize_bits,
 21377      0300
 21378              	.LBB1172:
 21379              	.LBB1171:
 21380              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 21381              		.loc 3 107 10 view .LVU7293
 21382 0d32 E8000000 		call	puts@PLT	#
 21382      00
 21383              	.LVL1291:
 21384              		.loc 3 107 10 view .LVU7294
 21385              	.LBE1171:
 21386              	.LBE1172:
1358:sieve_extend.c ****     if (option_tunelevel) {
 21387              		.loc 1 1358 5 is_stmt 1 view .LVU7295
1359:sieve_extend.c ****         tuning_result_type tuning_result = tune(option_tunelevel, option_maxFactor, option_verbosel
 21388              		.loc 1 1359 5 view .LVU7296
 21389              	# sieve_extend.c:1359:     if (option_tunelevel) {
1359:sieve_extend.c ****         tuning_result_type tuning_result = tune(option_tunelevel, option_maxFactor, option_verbosel
 21390              		.loc 1 1359 9 is_stmt 0 view .LVU7297
 21391 0d37 448B8424 		mov	r8d, DWORD PTR 156[rsp]	# option_tunelevel.40_62, option_tunelevel
 21391      9C000000 
 21392              	# sieve_extend.c:1359:     if (option_tunelevel) {
1359:sieve_extend.c ****         tuning_result_type tuning_result = tune(option_tunelevel, option_maxFactor, option_verbosel
 21393              		.loc 1 1359 8 view .LVU7298
 21394 0d3f 4585C0   		test	r8d, r8d	# option_tunelevel.40_62
 21395 0d42 0F857D01 		jne	.L1874	#,
 21395      0000
GAS LISTING /tmp/cc64mrzX.s 			page 569


 21396              	.LVL1292:
 21397              	.L1754:
 21398              	.LBB1173:
1369:sieve_extend.c ****         counter_t passes = 0;
 21399              		.loc 1 1369 9 is_stmt 1 view .LVU7299
 21400              	# sieve_extend.c:1369:         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize
1369:sieve_extend.c ****         counter_t passes = 0;
 21401              		.loc 1 1369 12 is_stmt 0 view .LVU7300
 21402 0d48 83BC2498 		cmp	DWORD PTR 152[rsp], 0	# option_verboselevel,
 21402      00000000 
 21403 0d50 0F8E98F6 		jle	.L1781	#,
 21403      FFFF
1369:sieve_extend.c ****         counter_t passes = 0;
 21404              		.loc 1 1369 39 is_stmt 1 discriminator 1 view .LVU7301
 21405              	.LVL1293:
 21406              	.LBB1079:
 21407              	.LBI1079:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 21408              		.loc 3 105 1 discriminator 1 view .LVU7302
 21409              	.LBB1080:
 21410              		.loc 3 107 3 discriminator 1 view .LVU7303
 21411              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 21412              		.loc 3 107 10 is_stmt 0 discriminator 1 view .LVU7304
 21413 0d56 4C8B0D00 		mov	r9, QWORD PTR global_VECTORSTEP_FASTER[rip]	#, global_VECTORSTEP_FASTER
 21413      000000
 21414 0d5d 4C89F2   		mov	rdx, r14	#, best_result$blocksize_bits
 21415 0d60 4C8B0500 		mov	r8, QWORD PTR global_MEDIUMSTEP_FASTER[rip]	#, global_MEDIUMSTEP_FASTER
 21415      000000
 21416 0d67 488D3500 		lea	rsi, .LC58[rip]	#,
 21416      000000
 21417 0d6e 488B0D00 		mov	rcx, QWORD PTR global_SMALLSTEP_FASTER[rip]	#, global_SMALLSTEP_FASTER
 21417      000000
 21418 0d75 BF010000 		mov	edi, 1	#,
 21418      00
 21419 0d7a 31C0     		xor	eax, eax	#
 21420 0d7c E8000000 		call	__printf_chk@PLT	#
 21420      00
 21421              	.LVL1294:
 21422 0d81 E968F6FF 		jmp	.L1781	#
 21422      FF
 21423              	.LVL1295:
 21424              	.L1873:
 21425              		.loc 3 107 10 discriminator 1 view .LVU7305
 21426              	.LBE1080:
 21427              	.LBE1079:
 21428              	.LBE1173:
 21429              	.LBB1174:
 21430              	.LBB1166:
 21431              	.LBB1163:
1275:sieve_extend.c ****     if (option_verboselevel >= 1) {
 21432              		.loc 1 1275 5 is_stmt 1 view .LVU7306
 21433              	# sieve_extend.c:1275:     tuning_result_type best_result = tuning_result[0];
1275:sieve_extend.c ****     if (option_verboselevel >= 1) {
 21434              		.loc 1 1275 24 is_stmt 0 view .LVU7307
 21435 0d86 4D8B7708 		mov	r14, QWORD PTR 8[r15]	# best_result$blocksize_bits, MEM[(struct tuning_result_type *)tuning_re
 21436              	.LVL1296:
 21437              	# sieve_extend.c:1276:     if (option_verboselevel >= 1) {
GAS LISTING /tmp/cc64mrzX.s 			page 570


1276:sieve_extend.c ****         tuning_result_index = 0;
 21438              		.loc 1 1276 8 view .LVU7308
 21439 0d8a 837C2458 		cmp	DWORD PTR 88[rsp], 0	# %sfp,
 21439      00
 21440              	# sieve_extend.c:1275:     tuning_result_type best_result = tuning_result[0];
1275:sieve_extend.c ****     if (option_verboselevel >= 1) {
 21441              		.loc 1 1275 24 view .LVU7309
 21442 0d8f 4D8B6F20 		mov	r13, QWORD PTR 32[r15]	# best_result$smallstep_faster, MEM[(struct tuning_result_type *)tuning
 21443              	.LVL1297:
1275:sieve_extend.c ****     if (option_verboselevel >= 1) {
 21444              		.loc 1 1275 24 view .LVU7310
 21445 0d93 498B6F28 		mov	rbp, QWORD PTR 40[r15]	# best_result$mediumstep_faster, MEM[(struct tuning_result_type *)tunin
 21446 0d97 498B5F30 		mov	rbx, QWORD PTR 48[r15]	# best_result$vectorstep_faster, MEM[(struct tuning_result_type *)tunin
1276:sieve_extend.c ****         tuning_result_index = 0;
 21447              		.loc 1 1276 5 is_stmt 1 view .LVU7311
 21448              	# sieve_extend.c:1276:     if (option_verboselevel >= 1) {
1276:sieve_extend.c ****         tuning_result_index = 0;
 21449              		.loc 1 1276 8 is_stmt 0 view .LVU7312
 21450 0d9b 7E6E     		jle	.L1779	#,
1277:sieve_extend.c ****         printf(".Best result:"); tuning_result_print(tuning_result[tuning_result_index]);
 21451              		.loc 1 1277 9 is_stmt 1 view .LVU7313
 21452              	.LVL1298:
1278:sieve_extend.c ****     }
 21453              		.loc 1 1278 9 view .LVU7314
 21454              	.LBB1151:
 21455              	.LBI1151:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 21456              		.loc 3 105 1 view .LVU7315
 21457              	.LBB1152:
 21458              		.loc 3 107 3 view .LVU7316
 21459              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 21460              		.loc 3 107 10 is_stmt 0 view .LVU7317
 21461 0d9d 488D3500 		lea	rsi, .LC57[rip]	#,
 21461      000000
 21462 0da4 BF010000 		mov	edi, 1	#,
 21462      00
 21463 0da9 31C0     		xor	eax, eax	#
 21464 0dab E8000000 		call	__printf_chk@PLT	#
 21464      00
 21465              	.LVL1299:
 21466              		.loc 3 107 10 view .LVU7318
 21467              	.LBE1152:
 21468              	.LBE1151:
1278:sieve_extend.c ****     }
 21469              		.loc 1 1278 34 is_stmt 1 view .LVU7319
 21470              	.LBB1153:
 21471              	.LBI1153:
1157:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
 21472              		.loc 1 1157 20 view .LVU7320
 21473              	.LBB1154:
1158:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
 21474              		.loc 1 1158 5 view .LVU7321
 21475              	.LBB1155:
 21476              	.LBI1155:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 21477              		.loc 3 105 1 view .LVU7322
 21478              	.LBB1156:
GAS LISTING /tmp/cc64mrzX.s 			page 571


 21479              		.loc 3 107 3 view .LVU7323
 21480              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 21481              		.loc 3 107 10 is_stmt 0 view .LVU7324
 21482 0db0 4D8B5738 		mov	r10, QWORD PTR 56[r15]	# MEM[(struct tuning_result_type *)tuning_result_239 + 56B], MEM[(struc
 21483 0db4 488D3500 		lea	rsi, .LC51[rip]	#,
 21483      000000
 21484 0dbb C4C17B10 		vmovsd	xmm0, QWORD PTR 80[r15]	# MEM[(struct tuning_result_type *)tuning_result_239 + 80B], MEM[(s
 21484      4750
 21485 0dc1 B8030000 		mov	eax, 3	#,
 21485      00
 21486 0dc6 498B4F10 		mov	rcx, QWORD PTR 16[r15]	# MEM[(struct tuning_result_type *)tuning_result_239 + 16B], MEM[(struc
 21487 0dca 498B5708 		mov	rdx, QWORD PTR 8[r15]	# MEM[(struct tuning_result_type *)tuning_result_239 + 8B], MEM[(struct 
 21488 0dce 4C895424 		mov	QWORD PTR 24[rsp], r10	#, MEM[(struct tuning_result_type *)tuning_result_239 + 56B]
 21488      18
 21489 0dd3 4D8B5F48 		mov	r11, QWORD PTR 72[r15]	# MEM[(struct tuning_result_type *)tuning_result_239 + 72B], MEM[(struc
 21490 0dd7 4C895C24 		mov	QWORD PTR 16[rsp], r11	#, MEM[(struct tuning_result_type *)tuning_result_239 + 72B]
 21490      10
 21491 0ddc 4D8B4F30 		mov	r9, QWORD PTR 48[r15]	# MEM[(struct tuning_result_type *)tuning_result_239 + 48B], MEM[(struct
 21492 0de0 4C894C24 		mov	QWORD PTR 8[rsp], r9	#, MEM[(struct tuning_result_type *)tuning_result_239 + 48B]
 21492      08
 21493 0de5 498B7F28 		mov	rdi, QWORD PTR 40[r15]	# MEM[(struct tuning_result_type *)tuning_result_239 + 40B], MEM[(struc
 21494 0de9 48893C24 		mov	QWORD PTR [rsp], rdi	#, MEM[(struct tuning_result_type *)tuning_result_239 + 40B]
 21495 0ded BF010000 		mov	edi, 1	#,
 21495      00
 21496 0df2 4D8B4F20 		mov	r9, QWORD PTR 32[r15]	#, MEM[(struct tuning_result_type *)tuning_result_239 + 32B]
 21497 0df6 4D8B4718 		mov	r8, QWORD PTR 24[r15]	#, MEM[(struct tuning_result_type *)tuning_result_239 + 24B]
 21498 0dfa C4C17B10 		vmovsd	xmm2, QWORD PTR 88[r15]	#, MEM[(struct tuning_result_type *)tuning_result_239 + 88B]
 21498      5758
 21499 0e00 C4C17B10 		vmovsd	xmm1, QWORD PTR 64[r15]	#, MEM[(struct tuning_result_type *)tuning_result_239 + 64B]
 21499      4F40
 21500 0e06 E8000000 		call	__printf_chk@PLT	#
 21500      00
 21501              	.LVL1300:
 21502              	.L1779:
 21503              		.loc 3 107 10 view .LVU7325
 21504              	.LBE1156:
 21505              	.LBE1155:
 21506              	.LBE1154:
 21507              	.LBE1153:
1281:sieve_extend.c ****     return best_result;
 21508              		.loc 1 1281 5 is_stmt 1 view .LVU7326
 21509 0e0b 4C89FF   		mov	rdi, r15	#, tuning_result
 21510 0e0e E8000000 		call	free@PLT	#
 21510      00
 21511              	.LVL1301:
1282:sieve_extend.c **** }
 21512              		.loc 1 1282 5 view .LVU7327
1282:sieve_extend.c **** }
 21513              		.loc 1 1282 5 is_stmt 0 view .LVU7328
 21514              	.LBE1163:
 21515              	.LBE1166:
1361:sieve_extend.c ****         global_MEDIUMSTEP_FASTER = tuning_result.mediumstep_faster;
 21516              		.loc 1 1361 9 is_stmt 1 view .LVU7329
 21517              	# sieve_extend.c:1361:         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
1361:sieve_extend.c ****         global_MEDIUMSTEP_FASTER = tuning_result.mediumstep_faster;
 21518              		.loc 1 1361 33 is_stmt 0 view .LVU7330
 21519 0e13 4C892D00 		mov	QWORD PTR global_SMALLSTEP_FASTER[rip], r13	# global_SMALLSTEP_FASTER, best_result$smallstep_f
GAS LISTING /tmp/cc64mrzX.s 			page 572


 21519      000000
1362:sieve_extend.c ****         global_VECTORSTEP_FASTER = tuning_result.vectorstep_faster;
 21520              		.loc 1 1362 9 is_stmt 1 view .LVU7331
 21521              	.LBE1174:
 21522              	# sieve_extend.c:1368:     if (best_blocksize_bits > 0) {
1368:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 21523              		.loc 1 1368 8 is_stmt 0 view .LVU7332
 21524 0e1a 4D85F6   		test	r14, r14	# best_result$blocksize_bits
 21525              	.LBB1175:
 21526              	# sieve_extend.c:1362:         global_MEDIUMSTEP_FASTER = tuning_result.mediumstep_faster;
1362:sieve_extend.c ****         global_VECTORSTEP_FASTER = tuning_result.vectorstep_faster;
 21527              		.loc 1 1362 34 view .LVU7333
 21528 0e1d 48892D00 		mov	QWORD PTR global_MEDIUMSTEP_FASTER[rip], rbp	# global_MEDIUMSTEP_FASTER, best_result$mediumste
 21528      000000
1363:sieve_extend.c ****         best_blocksize_bits = tuning_result.blocksize_bits;
 21529              		.loc 1 1363 9 is_stmt 1 view .LVU7334
 21530              	# sieve_extend.c:1363:         global_VECTORSTEP_FASTER = tuning_result.vectorstep_faster;
1363:sieve_extend.c ****         best_blocksize_bits = tuning_result.blocksize_bits;
 21531              		.loc 1 1363 34 is_stmt 0 view .LVU7335
 21532 0e24 48891D00 		mov	QWORD PTR global_VECTORSTEP_FASTER[rip], rbx	# global_VECTORSTEP_FASTER, best_result$vectorste
 21532      000000
1364:sieve_extend.c ****     }
 21533              		.loc 1 1364 9 is_stmt 1 view .LVU7336
 21534              	.LVL1302:
1364:sieve_extend.c ****     }
 21535              		.loc 1 1364 9 is_stmt 0 view .LVU7337
 21536              	.LBE1175:
1367:sieve_extend.c ****     if (best_blocksize_bits > 0) {
 21537              		.loc 1 1367 5 is_stmt 1 view .LVU7338
1368:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 21538              		.loc 1 1368 5 view .LVU7339
 21539              	# sieve_extend.c:1368:     if (best_blocksize_bits > 0) {
1368:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 21540              		.loc 1 1368 8 is_stmt 0 view .LVU7340
 21541 0e2b 0F8411F7 		je	.L1780	#,
 21541      FFFF
 21542 0e31 E912FFFF 		jmp	.L1754	#
 21542      FF
 21543              	.LVL1303:
 21544              	.L1789:
1368:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 21545              		.loc 1 1368 8 view .LVU7341
 21546 0e36 488D3D00 		lea	rdi, CSWTCH.128[rip]	# tmp337,
 21546      000000
 21547 0e3d 4C8D0D00 		lea	r9, CSWTCH.129[rip]	# tmp339,
 21547      000000
 21548 0e44 488D2D00 		lea	rbp, CSWTCH.130[rip]	# tmp341,
 21548      000000
 21549              	.LVL1304:
1368:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 21550              		.loc 1 1368 8 view .LVU7342
 21551 0e4b 488D1D00 		lea	rbx, CSWTCH.131[rip]	# tmp343,
 21551      000000
 21552              	.LVL1305:
1368:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 21553              		.loc 1 1368 8 view .LVU7343
 21554 0e52 4A8B0CC7 		mov	rcx, QWORD PTR [rdi+r8*8]	# smallstep_faster_steps, CSWTCH.128
GAS LISTING /tmp/cc64mrzX.s 			page 573


 21555 0e56 4F8B24C1 		mov	r12, QWORD PTR [r9+r8*8]	# vectorstep_faster_steps, CSWTCH.129
 21556 0e5a 4E8B7CC5 		mov	r15, QWORD PTR 0[rbp+r8*8]	# freebits_steps, CSWTCH.130
 21556      00
 21557              	.LVL1306:
1368:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 21558              		.loc 1 1368 8 view .LVU7344
 21559 0e5f C4A17B10 		vmovsd	xmm7, QWORD PTR [rbx+r8*8]	# sample_duration, CSWTCH.131
 21559      3CC3
 21560 0e65 48898C24 		mov	QWORD PTR 136[rsp], rcx	# %sfp, smallstep_faster_steps
 21560      88000000 
 21561 0e6d 4C89A424 		mov	QWORD PTR 128[rsp], r12	# %sfp, vectorstep_faster_steps
 21561      80000000 
 21562 0e75 4C897C24 		mov	QWORD PTR 96[rsp], r15	# %sfp, freebits_steps
 21562      60
 21563              	.LBB1176:
 21564              	# sieve_extend.c:1294:     for (int arg=1; arg < argc; arg++) {
1294:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 21565              		.loc 1 1294 14 view .LVU7345
 21566 0e7a 48C74424 		mov	QWORD PTR 104[rsp], 8	# %sfp,
 21566      68080000 
 21566      00
 21567 0e83 C5FB117C 		vmovsd	QWORD PTR 112[rsp], xmm7	# %sfp, sample_duration
 21567      2470
 21568              	.L1755:
 21569              	.LVL1307:
1294:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 21570              		.loc 1 1294 14 view .LVU7346
 21571              	.LBE1176:
 21572              	.LBB1177:
 21573              	.LBB1167:
 21574              	.LBB1164:
1208:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 21575              		.loc 1 1208 5 is_stmt 1 view .LVU7347
 21576              	# sieve_extend.c:1208:     if (option_verboselevel >= 1) printf("Tuning..."); if (option_verboselev
1208:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 21577              		.loc 1 1208 8 is_stmt 0 view .LVU7348
 21578 0e89 448B6C24 		mov	r13d, DWORD PTR 88[rsp]	# option_verboselevel.41_63, %sfp
 21578      58
 21579              	.LVL1308:
1208:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 21580              		.loc 1 1208 8 view .LVU7349
 21581 0e8e 4585ED   		test	r13d, r13d	# option_verboselevel.41_63
 21582 0e91 0F8E43F8 		jle	.L1757	#,
 21582      FFFF
1208:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 21583              		.loc 1 1208 35 is_stmt 1 view .LVU7350
 21584              	.LVL1309:
 21585              	.LBB1157:
 21586              	.LBI1157:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 21587              		.loc 3 105 1 view .LVU7351
 21588              	.LBB1158:
 21589              		.loc 3 107 3 view .LVU7352
 21590              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 21591              		.loc 3 107 10 is_stmt 0 view .LVU7353
 21592 0e97 31C0     		xor	eax, eax	#
 21593 0e99 488D3500 		lea	rsi, .LC49[rip]	#,
GAS LISTING /tmp/cc64mrzX.s 			page 574


 21593      000000
 21594 0ea0 BF010000 		mov	edi, 1	#,
 21594      00
 21595              	.LBE1158:
 21596              	.LBE1157:
 21597              	# sieve_extend.c:1208:     if (option_verboselevel >= 1) printf("Tuning..."); if (option_verboselev
1208:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 21598              		.loc 1 1208 59 view .LVU7354
 21599 0ea5 4489EB   		mov	ebx, r13d	# option_verboselevel.41_63, option_verboselevel.41_63
 21600              	.LBB1160:
 21601              	.LBB1159:
 21602              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 21603              		.loc 3 107 10 view .LVU7355
 21604 0ea8 E8000000 		call	__printf_chk@PLT	#
 21604      00
 21605              	.LVL1310:
 21606              		.loc 3 107 10 view .LVU7356
 21607              	.LBE1159:
 21608              	.LBE1160:
1208:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 21609              		.loc 1 1208 56 is_stmt 1 view .LVU7357
 21610              	# sieve_extend.c:1208:     if (option_verboselevel >= 1) printf("Tuning..."); if (option_verboselev
1208:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 21611              		.loc 1 1208 59 is_stmt 0 view .LVU7358
 21612 0ead 83EB01   		sub	ebx, 1	# option_verboselevel.41_63,
 21613 0eb0 0F8424F8 		je	.L1757	#,
 21613      FFFF
1208:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 21614              		.loc 1 1208 86 is_stmt 1 view .LVU7359
 21615              	.LVL1311:
 21616              	.LBB1161:
 21617              	.LBI1161:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 21618              		.loc 3 105 1 view .LVU7360
 21619              	.LBB1162:
 21620              		.loc 3 107 3 view .LVU7361
 21621              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 21622              		.loc 3 107 10 is_stmt 0 view .LVU7362
 21623 0eb6 BF0A0000 		mov	edi, 10	#,
 21623      00
 21624 0ebb E8000000 		call	putchar@PLT	#
 21624      00
 21625              	.LVL1312:
 21626 0ec0 E915F8FF 		jmp	.L1757	#
 21626      FF
 21627              	.LVL1313:
 21628              	.L1874:
 21629              		.loc 3 107 10 view .LVU7363
 21630              	.LBE1162:
 21631              	.LBE1161:
 21632              	.LBE1164:
 21633              	.LBE1167:
1360:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
 21634              		.loc 1 1360 9 is_stmt 1 view .LVU7364
 21635              	# sieve_extend.c:1360:         tuning_result_type tuning_result = tune(option_tunelevel, option_max
1360:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
 21636              		.loc 1 1360 44 is_stmt 0 view .LVU7365
GAS LISTING /tmp/cc64mrzX.s 			page 575


 21637 0ec5 8B942498 		mov	edx, DWORD PTR 152[rsp]	# option_verboselevel.41_63, option_verboselevel
 21637      000000
 21638 0ecc 4183E801 		sub	r8d, 1	#,
 21639 0ed0 488BB424 		mov	rsi, QWORD PTR 160[rsp]	# option_maxFactor.42_64, option_maxFactor
 21639      A0000000 
 21640 0ed8 4183F802 		cmp	r8d, 2	# _212,
 21641 0edc 89542458 		mov	DWORD PTR 88[rsp], edx	# %sfp, option_verboselevel.41_63
 21642 0ee0 48897424 		mov	QWORD PTR 120[rsp], rsi	# %sfp, option_maxFactor.42_64
 21642      78
 21643              	.LVL1314:
 21644              	.LBB1168:
1165:sieve_extend.c ****     counter_t best_blocksize_bits = default_blocksize;
 21645              		.loc 1 1165 27 is_stmt 1 view .LVU7366
 21646              	.LBB1165:
1166:sieve_extend.c **** 
 21647              		.loc 1 1166 5 view .LVU7367
1168:sieve_extend.c ****     best_blocksize_bits = 0;
 21648              		.loc 1 1168 5 view .LVU7368
1169:sieve_extend.c ****     counter_t best_smallstep_faster = 0;
 21649              		.loc 1 1169 5 view .LVU7369
1170:sieve_extend.c ****     counter_t best_mediumstep_faster = 0;
 21650              		.loc 1 1170 5 view .LVU7370
1171:sieve_extend.c ****     counter_t best_vectorstep_faster = 0;
 21651              		.loc 1 1171 5 view .LVU7371
1172:sieve_extend.c ****     counter_t smallstep_faster_steps = 4;
 21652              		.loc 1 1172 5 view .LVU7372
1173:sieve_extend.c ****     counter_t mediumstep_faster_steps = 4;
 21653              		.loc 1 1173 5 view .LVU7373
1174:sieve_extend.c ****     counter_t vectorstep_faster_steps = 32;
 21654              		.loc 1 1174 5 view .LVU7374
1175:sieve_extend.c ****     counter_t freebits_steps = anticiped_cache_line_bytesize;
 21655              		.loc 1 1175 5 view .LVU7375
1176:sieve_extend.c ****     counter_t sample_max = default_sample_max;
 21656              		.loc 1 1176 5 view .LVU7376
1177:sieve_extend.c ****     double sample_duration = default_sample_duration;
 21657              		.loc 1 1177 5 view .LVU7377
1178:sieve_extend.c **** 
 21658              		.loc 1 1178 5 view .LVU7378
1181:sieve_extend.c ****         case 1:
 21659              		.loc 1 1181 5 view .LVU7379
 21660 0ee5 0F864BFF 		jbe	.L1789	#,
 21660      FFFF
 21661 0eeb C5FB1005 		vmovsd	xmm0, QWORD PTR .LC26[rip]	# sample_duration,
 21661      00000000 
 21662 0ef3 48C74424 		mov	QWORD PTR 104[rsp], 5	# %sfp,
 21662      68050000 
 21662      00
 21663 0efc 48C74424 		mov	QWORD PTR 96[rsp], 128	# %sfp,
 21663      60800000 
 21663      00
 21664 0f05 48C78424 		mov	QWORD PTR 128[rsp], 32	# %sfp,
 21664      80000000 
 21664      20000000 
 21665 0f11 48C78424 		mov	QWORD PTR 136[rsp], 4	# %sfp,
 21665      88000000 
 21665      04000000 
 21666 0f1d C5FB1144 		vmovsd	QWORD PTR 112[rsp], xmm0	# %sfp, sample_duration
GAS LISTING /tmp/cc64mrzX.s 			page 576


 21666      2470
 21667 0f23 E961FFFF 		jmp	.L1755	#
 21667      FF
 21668              	.LVL1315:
 21669              	.L1860:
1181:sieve_extend.c ****         case 1:
 21670              		.loc 1 1181 5 is_stmt 0 view .LVU7380
 21671              	.LBE1165:
 21672              	.LBE1168:
 21673              	.LBE1177:
 21674              	.LBB1178:
1297:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option_verboselevel > 4) {
 21675              		.loc 1 1297 34 is_stmt 1 discriminator 1 view .LVU7381
 21676              	.LBB1016:
 21677              	.LBI1016:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 21678              		.loc 3 98 1 discriminator 1 view .LVU7382
 21679              	.LBB1017:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 21680              		.loc 3 100 3 discriminator 1 view .LVU7383
 21681              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 21682              		.loc 3 100 10 is_stmt 0 discriminator 1 view .LVU7384
 21683 0f28 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 21683      000000
 21684 0f2f BA1B0000 		mov	edx, 27	#,
 21684      00
 21685 0f34 BE010000 		mov	esi, 1	#,
 21685      00
 21686 0f39 488D3D00 		lea	rdi, .LC30[rip]	#,
 21686      000000
 21687 0f40 E8000000 		call	fwrite@PLT	#
 21687      00
 21688              	.LVL1316:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 21689              		.loc 3 100 10 discriminator 1 view .LVU7385
 21690              	.LBE1017:
 21691              	.LBE1016:
1297:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option_verboselevel > 4) {
 21692              		.loc 1 1297 83 is_stmt 1 discriminator 1 view .LVU7386
 21693 0f45 E967F6FF 		jmp	.L1858	#
 21693      FF
 21694              	.L1738:
1307:sieve_extend.c ****             }
 21695              		.loc 1 1307 17 view .LVU7387
 21696              	.LVL1317:
 21697              	.LBB1018:
 21698              	.LBI1013:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 21699              		.loc 3 98 1 view .LVU7388
 21700              	.LBB1015:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 21701              		.loc 3 100 3 view .LVU7389
 21702              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 21703              		.loc 3 100 10 is_stmt 0 view .LVU7390
 21704 0f4a 498B0F   		mov	rcx, QWORD PTR [r15]	#, *_29
GAS LISTING /tmp/cc64mrzX.s 			page 577


 21705 0f4d 488D1500 		lea	rdx, .LC37[rip]	#,
 21705      000000
 21706 0f54 E945F6FF 		jmp	.L1857	#
 21706      FF
 21707              	.LVL1318:
 21708              	.L1742:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 21709              		.loc 3 100 10 view .LVU7391
 21710              	.LBE1015:
 21711              	.LBE1018:
1314:sieve_extend.c ****             }
 21712              		.loc 1 1314 17 is_stmt 1 view .LVU7392
 21713              	.LBB1019:
 21714              	.LBI1019:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 21715              		.loc 3 98 1 view .LVU7393
 21716              	.LBB1020:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 21717              		.loc 3 100 3 view .LVU7394
 21718              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 21719              		.loc 3 100 10 is_stmt 0 view .LVU7395
 21720 0f59 498B0F   		mov	rcx, QWORD PTR [r15]	#, *_41
 21721 0f5c 488D1500 		lea	rdx, .LC42[rip]	#,
 21721      000000
 21722 0f63 E936F6FF 		jmp	.L1857	#
 21722      FF
 21723              	.LVL1319:
 21724              	.L1863:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 21725              		.loc 3 100 10 view .LVU7396
 21726              	.LBE1020:
 21727              	.LBE1019:
1305:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tunelevel > 4) {
 21728              		.loc 1 1305 34 is_stmt 1 discriminator 1 view .LVU7397
 21729              	.LBB1021:
 21730              	.LBI1021:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 21731              		.loc 3 98 1 discriminator 1 view .LVU7398
 21732              	.LBB1022:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 21733              		.loc 3 100 3 discriminator 1 view .LVU7399
 21734              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 21735              		.loc 3 100 10 is_stmt 0 discriminator 1 view .LVU7400
 21736 0f68 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 21736      000000
 21737 0f6f 488D3D00 		lea	rdi, .LC36[rip]	#,
 21737      000000
 21738 0f76 BA180000 		mov	edx, 24	#,
 21738      00
 21739 0f7b BE010000 		mov	esi, 1	#,
 21739      00
 21740 0f80 E8000000 		call	fwrite@PLT	#
 21740      00
 21741              	.LVL1320:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
GAS LISTING /tmp/cc64mrzX.s 			page 578


 21742              		.loc 3 100 10 discriminator 1 view .LVU7401
 21743              	.LBE1022:
 21744              	.LBE1021:
1305:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tunelevel > 4) {
 21745              		.loc 1 1305 80 is_stmt 1 discriminator 1 view .LVU7402
 21746 0f85 498B3C24 		mov	rdi, QWORD PTR [r12]	#, *argv_159(D)
 21747 0f89 E8000000 		call	usage	#
 21747      00
 21748              	.LVL1321:
 21749              	.L1871:
1305:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tunelevel > 4) {
 21750              		.loc 1 1305 80 is_stmt 0 discriminator 1 view .LVU7403
 21751              	.LBE1178:
 21752              	# sieve_extend.c:1393: }
 21753              		.loc 1 1393 1 view .LVU7404
 21754 0f8e E8000000 		call	__stack_chk_fail@PLT	#
 21754      00
 21755              	.LVL1322:
 21756              	.L1866:
 21757              	.LBB1179:
1312:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 21758              		.loc 1 1312 34 is_stmt 1 discriminator 1 view .LVU7405
 21759              	.LBB1023:
 21760              	.LBI1023:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 21761              		.loc 3 98 1 discriminator 1 view .LVU7406
 21762              	.LBB1024:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 21763              		.loc 3 100 3 discriminator 1 view .LVU7407
 21764              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 21765              		.loc 3 100 10 is_stmt 0 discriminator 1 view .LVU7408
 21766 0f93 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 21766      000000
 21767 0f9a 488D3D00 		lea	rdi, .LC40[rip]	#,
 21767      000000
 21768 0fa1 BA1A0000 		mov	edx, 26	#,
 21768      00
 21769 0fa6 BE010000 		mov	esi, 1	#,
 21769      00
 21770 0fab E8000000 		call	fwrite@PLT	#
 21770      00
 21771              	.LVL1323:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 21772              		.loc 3 100 10 discriminator 1 view .LVU7409
 21773              	.LBE1024:
 21774              	.LBE1023:
1312:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 21775              		.loc 1 1312 82 is_stmt 1 discriminator 1 view .LVU7410
 21776 0fb0 498B3C24 		mov	rdi, QWORD PTR [r12]	#, *argv_159(D)
 21777 0fb4 E8000000 		call	usage	#
 21777      00
 21778              	.LVL1324:
 21779              	.LBE1179:
 21780              		.cfi_endproc
 21781              	.LFE85:
 21783              		.section	.rodata
GAS LISTING /tmp/cc64mrzX.s 			page 579


 21784              		.align 16
 21787              	CSWTCH.131:
 21788 0000 9A999999 		.long	2576980378
 21789 0004 9999B93F 		.long	1069128089
 21790 0008 9A999999 		.long	2576980378
 21791 000c 9999C93F 		.long	1070176665
 21792 0010 9A999999 		.long	2576980378
 21793 0014 9999C93F 		.long	1070176665
 21794 0018 00000000 		.align 16
 21794      00000000 
 21797              	CSWTCH.130:
 21798 0020 00080000 		.quad	2048
 21798      00000000 
 21799 0028 00040000 		.quad	1024
 21799      00000000 
 21800 0030 40000000 		.quad	64
 21800      00000000 
 21801 0038 00000000 		.align 16
 21801      00000000 
 21804              	CSWTCH.129:
 21805 0040 20000000 		.quad	32
 21805      00000000 
 21806 0048 10000000 		.quad	16
 21806      00000000 
 21807 0050 04000000 		.quad	4
 21807      00000000 
 21808 0058 00000000 		.align 16
 21808      00000000 
 21811              	CSWTCH.128:
 21812 0060 10000000 		.quad	16
 21812      00000000 
 21813 0068 08000000 		.quad	8
 21813      00000000 
 21814 0070 04000000 		.quad	4
 21814      00000000 
 21815              		.globl	debug_hitpoint
 21816              		.bss
 21817              		.align 32
 21820              	debug_hitpoint:
 21821 0000 00000000 		.zero	40
 21821      00000000 
 21821      00000000 
 21821      00000000 
 21821      00000000 
 21822              		.globl	global_VECTORSTEP_FASTER
 21823              		.data
 21824              		.align 8
 21827              	global_VECTORSTEP_FASTER:
 21828 0000 80000000 		.quad	128
 21828      00000000 
 21829              		.globl	global_MEDIUMSTEP_FASTER
 21830              		.bss
 21831              		.align 8
 21834              	global_MEDIUMSTEP_FASTER:
 21835 0028 00000000 		.zero	8
 21835      00000000 
 21836              		.globl	global_SMALLSTEP_FASTER
GAS LISTING /tmp/cc64mrzX.s 			page 580


 21837              		.align 8
 21840              	global_SMALLSTEP_FASTER:
 21841 0030 00000000 		.zero	8
 21841      00000000 
 21842              		.section	.rodata.cst32,"aM",@progbits,32
 21843              		.align 32
 21844              	.LC0:
 21845 0000 00000000 		.quad	0
 21845      00000000 
 21846 0008 01000000 		.quad	1
 21846      00000000 
 21847 0010 02000000 		.quad	2
 21847      00000000 
 21848 0018 03000000 		.quad	3
 21848      00000000 
 21849              		.align 32
 21850              	.LC1:
 21851 0020 08000000 		.quad	8
 21851      00000000 
 21852 0028 08000000 		.quad	8
 21852      00000000 
 21853 0030 08000000 		.quad	8
 21853      00000000 
 21854 0038 08000000 		.quad	8
 21854      00000000 
 21855              		.align 32
 21856              	.LC2:
 21857 0040 04000000 		.quad	4
 21857      00000000 
 21858 0048 04000000 		.quad	4
 21858      00000000 
 21859 0050 04000000 		.quad	4
 21859      00000000 
 21860 0058 04000000 		.quad	4
 21860      00000000 
 21861              		.align 32
 21862              	.LC3:
 21863 0060 3F000000 		.long	63
 21864 0064 3F000000 		.long	63
 21865 0068 3F000000 		.long	63
 21866 006c 3F000000 		.long	63
 21867 0070 3F000000 		.long	63
 21868 0074 3F000000 		.long	63
 21869 0078 3F000000 		.long	63
 21870 007c 3F000000 		.long	63
 21871              		.section	.rodata.cst8,"aM",@progbits,8
 21872              		.align 8
 21873              	.LC7:
 21874 0000 00000000 		.long	0
 21875 0004 0000F87F 		.long	2146959360
 21876              		.align 8
 21877              	.LC8:
 21878 0008 95D626E8 		.long	3894859413
 21879 000c 0B2E113E 		.long	1041313291
 21880              		.align 8
 21881              	.LC26:
 21882 0010 9A999999 		.long	2576980378
GAS LISTING /tmp/cc64mrzX.s 			page 581


 21883 0014 9999B93F 		.long	1069128089
 21884              		.align 8
 21885              	.LC59:
 21886 0018 00000000 		.long	0
 21887 001c 00001440 		.long	1075052544
 21888              		.text
 21889              	.Letext0:
 21890              		.file 4 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h"
 21891              		.file 5 "/usr/include/x86_64-linux-gnu/bits/types.h"
 21892              		.file 6 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h"
 21893              		.file 7 "/usr/include/x86_64-linux-gnu/bits/types/FILE.h"
 21894              		.file 8 "/usr/include/stdio.h"
 21895              		.file 9 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h"
 21896              		.file 10 "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h"
 21897              		.file 11 "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h"
 21898              		.file 12 "/usr/include/stdint.h"
 21899              		.file 13 "/usr/include/time.h"
 21900              		.file 14 "/usr/include/math.h"
 21901              		.file 15 "/usr/include/stdlib.h"
 21902              		.file 16 "<built-in>"
 49905              		.section	.note.gnu.property,"a"
 49906              		.align 8
 49907 0000 04000000 		.long	 1f - 0f
 49908 0004 10000000 		.long	 4f - 1f
 49909 0008 05000000 		.long	 5
 49910              	0:
 49911 000c 474E5500 		.string	 "GNU"
 49912              	1:
 49913              		.align 8
 49914 0010 020000C0 		.long	 0xc0000002
 49915 0014 04000000 		.long	 3f - 2f
 49916              	2:
 49917 0018 03000000 		.long	 0x3
 49918              	3:
 49919 001c 00000000 		.align 8
 49920              	4:
GAS LISTING /tmp/cc64mrzX.s 			page 582


DEFINED SYMBOLS
                            *ABS*:0000000000000000 sieve_extend.c
     /tmp/cc64mrzX.s:86     .text:0000000000000000 extendSieve_smallSize
     /tmp/cc64mrzX.s:21844  .rodata.cst32:0000000000000000 .LC0
     /tmp/cc64mrzX.s:21850  .rodata.cst32:0000000000000020 .LC1
     /tmp/cc64mrzX.s:21856  .rodata.cst32:0000000000000040 .LC2
     /tmp/cc64mrzX.s:21862  .rodata.cst32:0000000000000060 .LC3
     /tmp/cc64mrzX.s:1228   .text:00000000000006c0 extendSieve_shiftright_ivdep
     /tmp/cc64mrzX.s:3232   .text:00000000000014f0 compare_tuning_result
     /tmp/cc64mrzX.s:3258   .text:0000000000001510 setBitsTrue_largeRange_vector
     /tmp/cc64mrzX.s:5396   .text:00000000000020b0 extendSieve_aligned
     /tmp/cc64mrzX.s:6285   .text:0000000000002630 extendSieve_shiftleft
     /tmp/cc64mrzX.s:9253   .text:0000000000003930 show_primes.isra.0
     /tmp/cc64mrzX.s:9248   .rodata.str1.1:0000000000000006 .LC5
     /tmp/cc64mrzX.s:9246   .rodata.str1.1:0000000000000000 .LC4
     /tmp/cc64mrzX.s:9660   .text:0000000000003ad0 sieve
     /tmp/cc64mrzX.s:21840  .bss:0000000000000030 global_SMALLSTEP_FASTER
     /tmp/cc64mrzX.s:21834  .bss:0000000000000028 global_MEDIUMSTEP_FASTER
     /tmp/cc64mrzX.s:21827  .data:0000000000000000 global_VECTORSTEP_FASTER
     /tmp/cc64mrzX.s:16263  .text:0000000000005790 tune_benchmark
     /tmp/cc64mrzX.s:21873  .rodata.cst8:0000000000000000 .LC7
     /tmp/cc64mrzX.s:21877  .rodata.cst8:0000000000000008 .LC8
     /tmp/cc64mrzX.s:16480  .text:00000000000058d0 shiftvec
     /tmp/cc64mrzX.s:17642  .text:0000000000005c90 validatePrimeCount
     /tmp/cc64mrzX.s:17623  .rodata.str1.8:0000000000000000 .LC9
     /tmp/cc64mrzX.s:17629  .rodata.str1.1:0000000000000023 .LC11
     /tmp/cc64mrzX.s:17633  .rodata.str1.8:00000000000000c0 .LC12
     /tmp/cc64mrzX.s:17626  .rodata.str1.8:0000000000000058 .LC10
     /tmp/cc64mrzX.s:17636  .rodata.str1.8:00000000000000f8 .LC13
     /tmp/cc64mrzX.s:18896  .text:0000000000006420 usage
     /tmp/cc64mrzX.s:18856  .rodata.str1.8:0000000000000148 .LC14
     /tmp/cc64mrzX.s:18859  .rodata.str1.1:0000000000000031 .LC15
     /tmp/cc64mrzX.s:18863  .rodata.str1.8:0000000000000168 .LC16
     /tmp/cc64mrzX.s:18866  .rodata.str1.8:00000000000001a8 .LC17
     /tmp/cc64mrzX.s:18869  .rodata.str1.8:00000000000001d8 .LC18
     /tmp/cc64mrzX.s:18872  .rodata.str1.8:0000000000000220 .LC19
     /tmp/cc64mrzX.s:18875  .rodata.str1.8:0000000000000250 .LC20
     /tmp/cc64mrzX.s:18878  .rodata.str1.8:0000000000000290 .LC21
     /tmp/cc64mrzX.s:18881  .rodata.str1.8:00000000000002d0 .LC22
     /tmp/cc64mrzX.s:18884  .rodata.str1.8:0000000000000320 .LC23
     /tmp/cc64mrzX.s:18887  .rodata.str1.8:0000000000000348 .LC24
     /tmp/cc64mrzX.s:18890  .rodata.str1.8:0000000000000378 .LC25
     /tmp/cc64mrzX.s:19227  .text.startup:0000000000000000 main
     /tmp/cc64mrzX.s:19135  .rodata.str1.1:000000000000004a .LC28
     /tmp/cc64mrzX.s:19137  .rodata.str1.1:0000000000000051 .LC29
     /tmp/cc64mrzX.s:19141  .rodata.str1.1:0000000000000077 .LC31
     /tmp/cc64mrzX.s:19148  .rodata.str1.1:000000000000007a .LC33
     /tmp/cc64mrzX.s:19150  .rodata.str1.1:0000000000000093 .LC34
     /tmp/cc64mrzX.s:19152  .rodata.str1.1:000000000000009b .LC35
     /tmp/cc64mrzX.s:19161  .rodata.str1.1:00000000000000bb .LC38
     /tmp/cc64mrzX.s:19180  .rodata.str1.1:000000000000013a .LC46
     /tmp/cc64mrzX.s:19178  .rodata.str1.1:0000000000000121 .LC45
     /tmp/cc64mrzX.s:19163  .rodata.str1.1:00000000000000d1 .LC39
     /tmp/cc64mrzX.s:19167  .rodata.str1.1:00000000000000f3 .LC41
     /tmp/cc64mrzX.s:19174  .rodata.str1.1:00000000000000f7 .LC43
     /tmp/cc64mrzX.s:19176  .rodata.str1.1:0000000000000110 .LC44
     /tmp/cc64mrzX.s:19182  .rodata.str1.1:000000000000014a .LC47
GAS LISTING /tmp/cc64mrzX.s 			page 583


     /tmp/cc64mrzX.s:21885  .rodata.cst8:0000000000000018 .LC59
     /tmp/cc64mrzX.s:19215  .rodata.str1.8:0000000000000538 .LC60
     /tmp/cc64mrzX.s:19133  .rodata.str1.1:000000000000003b .LC27
     /tmp/cc64mrzX.s:19145  .rodata.str1.8:00000000000003b0 .LC32
     /tmp/cc64mrzX.s:19221  .rodata.str1.1:000000000000019e .LC62
     /tmp/cc64mrzX.s:19218  .rodata.str1.8:0000000000000580 .LC61
     /tmp/cc64mrzX.s:21881  .rodata.cst8:0000000000000010 .LC26
     /tmp/cc64mrzX.s:19195  .rodata.str1.1:0000000000000173 .LC52
     /tmp/cc64mrzX.s:19192  .rodata.str1.8:0000000000000420 .LC51
     /tmp/cc64mrzX.s:19199  .rodata.str1.8:00000000000004a8 .LC53
     /tmp/cc64mrzX.s:19202  .rodata.str1.1:0000000000000178 .LC54
     /tmp/cc64mrzX.s:19188  .rodata.str1.1:000000000000016e .LC50
     /tmp/cc64mrzX.s:19204  .rodata.str1.1:0000000000000185 .LC55
     /tmp/cc64mrzX.s:19206  .rodata.str1.1:000000000000018c .LC56
     /tmp/cc64mrzX.s:19184  .rodata.str1.1:0000000000000151 .LC48
     /tmp/cc64mrzX.s:19212  .rodata.str1.8:0000000000000500 .LC58
     /tmp/cc64mrzX.s:19208  .rodata.str1.1:0000000000000190 .LC57
     /tmp/cc64mrzX.s:21811  .rodata:0000000000000060 CSWTCH.128
     /tmp/cc64mrzX.s:21804  .rodata:0000000000000040 CSWTCH.129
     /tmp/cc64mrzX.s:21797  .rodata:0000000000000020 CSWTCH.130
     /tmp/cc64mrzX.s:21787  .rodata:0000000000000000 CSWTCH.131
     /tmp/cc64mrzX.s:19186  .rodata.str1.1:0000000000000164 .LC49
     /tmp/cc64mrzX.s:19139  .rodata.str1.1:000000000000005b .LC30
     /tmp/cc64mrzX.s:19158  .rodata.str1.8:00000000000003d8 .LC37
     /tmp/cc64mrzX.s:19171  .rodata.str1.8:00000000000003f8 .LC42
     /tmp/cc64mrzX.s:19154  .rodata.str1.1:00000000000000a2 .LC36
     /tmp/cc64mrzX.s:19165  .rodata.str1.1:00000000000000d8 .LC40
     /tmp/cc64mrzX.s:21820  .bss:0000000000000000 debug_hitpoint

UNDEFINED SYMBOLS
__stack_chk_fail
_GLOBAL_OFFSET_TABLE_
memcpy
__printf_chk
putchar
aligned_alloc
clock_gettime
free
puts
stderr
__fprintf_chk
fwrite
exit
__isoc99_sscanf
malloc
qsort
