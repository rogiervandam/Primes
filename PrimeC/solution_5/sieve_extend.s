GAS LISTING /tmp/ccjg94QQ.s 			page 1


   1              		.file	"sieve_extend.c"
   2              		.intel_syntax noprefix
   3              	# GNU C17 (Ubuntu 9.4.0-1ubuntu1~20.04.1) version 9.4.0 (x86_64-linux-gnu)
   4              	#	compiled by GNU C version 9.4.0, GMP version 6.2.0, MPFR version 4.0.2, MPC version 1.1.0, isl ve
   5              	
   6              	# GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
   7              	# options passed:  -imultiarch x86_64-linux-gnu sieve_extend.c
   8              	# -march=skylake -mmmx -mno-3dnow -msse -msse2 -msse3 -mssse3 -mno-sse4a
   9              	# -mcx16 -msahf -mmovbe -maes -mno-sha -mpclmul -mpopcnt -mabm -mno-lwp
  10              	# -mfma -mno-fma4 -mno-xop -mbmi -mno-sgx -mbmi2 -mno-pconfig -mno-wbnoinvd
  11              	# -mno-tbm -mavx2 -msse4.2 -msse4.1 -mlzcnt -mrtm -mhle -mrdrnd -mf16c
  12              	# -mfsgsbase -mrdseed -mprfchw -madx -mfxsr -mxsave -mxsaveopt -mno-avx512f
  13              	# -mno-avx512er -mno-avx512cd -mno-avx512pf -mno-prefetchwt1 -mclflushopt
  14              	# -mxsavec -mxsaves -mno-avx512dq -mno-avx512bw -mno-avx512vl
  15              	# -mno-avx512ifma -mno-avx512vbmi -mno-avx5124fmaps -mno-avx5124vnniw
  16              	# -mno-clwb -mno-mwaitx -mno-clzero -mno-pku -mno-rdpid -mno-gfni
  17              	# -mno-shstk -mno-avx512vbmi2 -mno-avx512vnni -mno-vaes -mno-vpclmulqdq
  18              	# -mno-avx512bitalg -mno-avx512vpopcntdq -mno-movdiri -mno-movdir64b
  19              	# -mno-waitpkg -mno-cldemote -mno-ptwrite -mtune=intel -masm=intel
  20              	# -malign-data=cacheline -mavx -g -Ofast -funroll-all-loops
  21              	# -fno-asynchronous-unwind-tables -fno-exceptions -fverbose-asm
  22              	# -fstack-protector-strong -Wformat -Wformat-security
  23              	# -fstack-clash-protection -fcf-protection
  24              	# options enabled:  -fPIC -fPIE -faggressive-loop-optimizations
  25              	# -falign-functions -falign-jumps -falign-labels -falign-loops
  26              	# -fassociative-math -fassume-phsa -fauto-inc-dec -fbranch-count-reg
  27              	# -fcaller-saves -fcode-hoisting -fcombine-stack-adjustments -fcommon
  28              	# -fcompare-elim -fcprop-registers -fcrossjumping -fcse-follow-jumps
  29              	# -fcx-limited-range -fdefer-pop -fdelete-null-pointer-checks
  30              	# -fdevirtualize -fdevirtualize-speculatively -fdwarf2-cfi-asm
  31              	# -fearly-inlining -feliminate-unused-debug-types -fexpensive-optimizations
  32              	# -ffinite-math-only -fforward-propagate -ffp-int-builtin-inexact
  33              	# -ffunction-cse -fgcse -fgcse-after-reload -fgcse-lm -fgnu-runtime
  34              	# -fgnu-unique -fguess-branch-probability -fhoist-adjacent-loads -fident
  35              	# -fif-conversion -fif-conversion2 -findirect-inlining -finline
  36              	# -finline-atomics -finline-functions -finline-functions-called-once
  37              	# -finline-small-functions -fipa-bit-cp -fipa-cp -fipa-cp-clone -fipa-icf
  38              	# -fipa-icf-functions -fipa-icf-variables -fipa-profile -fipa-pure-const
  39              	# -fipa-ra -fipa-reference -fipa-reference-addressable -fipa-sra
  40              	# -fipa-stack-alignment -fipa-vrp -fira-hoist-pressure
  41              	# -fira-share-save-slots -fira-share-spill-slots
  42              	# -fisolate-erroneous-paths-dereference -fivopts -fkeep-static-consts
  43              	# -fleading-underscore -flifetime-dse -floop-interchange
  44              	# -floop-unroll-and-jam -flra-remat -flto-odr-type-merging
  45              	# -fmerge-constants -fmerge-debug-strings -fmove-loop-invariants
  46              	# -fomit-frame-pointer -foptimize-sibling-calls -foptimize-strlen
  47              	# -fpartial-inlining -fpeel-loops -fpeephole -fpeephole2 -fplt
  48              	# -fpredictive-commoning -fprefetch-loop-arrays -freciprocal-math -free
  49              	# -freg-struct-return -frename-registers -freorder-blocks
  50              	# -freorder-blocks-and-partition -freorder-functions -frerun-cse-after-loop
  51              	# -fsched-critical-path-heuristic -fsched-dep-count-heuristic
  52              	# -fsched-group-heuristic -fsched-interblock -fsched-last-insn-heuristic
  53              	# -fsched-rank-heuristic -fsched-spec -fsched-spec-insn-heuristic
  54              	# -fsched-stalled-insns-dep -fschedule-fusion -fschedule-insns2
  55              	# -fsemantic-interposition -fshow-column -fshrink-wrap
  56              	# -fshrink-wrap-separate -fsplit-ivs-in-unroller -fsplit-loops
  57              	# -fsplit-paths -fsplit-wide-types -fssa-backprop -fssa-phiopt
GAS LISTING /tmp/ccjg94QQ.s 			page 2


  58              	# -fstack-clash-protection -fstack-protector-strong -fstdarg-opt
  59              	# -fstore-merging -fstrict-aliasing -fstrict-volatile-bitfields
  60              	# -fsync-libcalls -fthread-jumps -ftoplevel-reorder -ftree-bit-ccp
  61              	# -ftree-builtin-call-dce -ftree-ccp -ftree-ch -ftree-coalesce-vars
  62              	# -ftree-copy-prop -ftree-cselim -ftree-dce -ftree-dominator-opts
  63              	# -ftree-dse -ftree-forwprop -ftree-fre -ftree-loop-distribute-patterns
  64              	# -ftree-loop-distribution -ftree-loop-if-convert -ftree-loop-im
  65              	# -ftree-loop-ivcanon -ftree-loop-optimize -ftree-loop-vectorize
  66              	# -ftree-parallelize-loops= -ftree-partial-pre -ftree-phiprop -ftree-pre
  67              	# -ftree-pta -ftree-reassoc -ftree-scev-cprop -ftree-sink
  68              	# -ftree-slp-vectorize -ftree-slsr -ftree-sra -ftree-switch-conversion
  69              	# -ftree-tail-merge -ftree-ter -ftree-vrp -funit-at-a-time
  70              	# -funroll-all-loops -funroll-loops -funsafe-math-optimizations
  71              	# -funswitch-loops -fvar-tracking -fvar-tracking-assignments -fverbose-asm
  72              	# -fversion-loops-for-strides -fweb -fzero-initialized-in-bss
  73              	# -m128bit-long-double -m64 -m80387 -mabm -maccumulate-outgoing-args -madx
  74              	# -maes -malign-stringops -mavx -mavx2 -mbmi -mbmi2 -mclflushopt -mcx16
  75              	# -mf16c -mfancy-math-387 -mfma -mfp-ret-in-387 -mfsgsbase -mfxsr -mglibc
  76              	# -mhle -mlong-double-80 -mlzcnt -mmmx -mmovbe -mpclmul -mpopcnt -mprfchw
  77              	# -mpush-args -mrdrnd -mrdseed -mred-zone -mrtm -msahf -msse -msse2 -msse3
  78              	# -msse4 -msse4.1 -msse4.2 -mssse3 -mstv -mtls-direct-seg-refs -mvzeroupper
  79              	# -mxsave -mxsavec -mxsaveopt -mxsaves
  80              	
  81              		.text
  82              	.Ltext0:
  83              		.cfi_sections	.debug_frame
  84              		.p2align 4
  86              	extendSieve_smallSize:
  87              	.LVL0:
  88              	.LFB65:
  89              		.file 1 "sieve_extend.c"
   1:sieve_extend.c **** #include <stdio.h>
   2:sieve_extend.c **** #include <stdlib.h>
   3:sieve_extend.c **** #include <stdint.h>
   4:sieve_extend.c **** #include <time.h>
   5:sieve_extend.c **** #include <math.h>
   6:sieve_extend.c **** #include <string.h>
   7:sieve_extend.c **** 
   8:sieve_extend.c **** //add debug in front of a line to only compile it if the value below is set to 1 (or !=0)
   9:sieve_extend.c **** #define option_runonce 0
  10:sieve_extend.c **** #define debug if (option_runonce)
  11:sieve_extend.c **** #define debug2 if (option_runonce>=2)
  12:sieve_extend.c **** 
  13:sieve_extend.c **** #define default_sieve_limit 1000000
  14:sieve_extend.c **** #define default_blocksize (32*1024*8-1024)
  15:sieve_extend.c **** #define default_sieve_duration 5
  16:sieve_extend.c **** #define default_sample_duration 0.1
  17:sieve_extend.c **** #define default_sample_max 5
  18:sieve_extend.c **** #define default_verbose_level 1
  19:sieve_extend.c **** #define default_tune_level 0
  20:sieve_extend.c **** #define default_check_level 1
  21:sieve_extend.c **** #define default_show_primes_on_error 100
  22:sieve_extend.c **** #define default_showMaxFactor (0 || option_runonce?100:0)
  23:sieve_extend.c **** #define anticiped_cache_line_bytesize 128
  24:sieve_extend.c **** 
  25:sieve_extend.c **** // 64 bit
  26:sieve_extend.c **** #define TYPE uint64_t
GAS LISTING /tmp/ccjg94QQ.s 			page 3


  27:sieve_extend.c **** 
  28:sieve_extend.c **** // calculate the rest dynamically
  29:sieve_extend.c **** #define counter_t TYPE
  30:sieve_extend.c **** #define bitshift_t TYPE
  31:sieve_extend.c **** #define bitword_t uint64_t
  32:sieve_extend.c **** 
  33:sieve_extend.c **** #define WORD_SIZE (sizeof(bitword_t)*8)
  34:sieve_extend.c **** #define WORD_SIZE_counter ((counter_t)WORD_SIZE)
  35:sieve_extend.c **** #define WORD_SIZE_bitshift ((bitshift_t)WORD_SIZE)
  36:sieve_extend.c **** #define pow(base,pow) (pow*((base>>pow)&1U))
  37:sieve_extend.c **** //#define SHIFT ((bitshift_t)(pow(WORD_SIZE,1)+pow(WORD_SIZE,2)+pow(WORD_SIZE,3)+pow(WORD_SIZE,4)+p
  38:sieve_extend.c **** #define SHIFT_WORD ((bitshift_t)(pow(WORD_SIZE,1)+pow(WORD_SIZE,2)+pow(WORD_SIZE,3)+pow(WORD_SIZE,4
  39:sieve_extend.c **** 
  40:sieve_extend.c **** #define VECTOR_ELEMENTS 4
  41:sieve_extend.c **** #define VECTOR_SIZE_bytes (sizeof(bitword_t)*VECTOR_ELEMENTS)
  42:sieve_extend.c **** #define VECTOR_SIZE_counter (VECTOR_SIZE_bytes*8)
  43:sieve_extend.c **** #define VECTOR_SIZE (VECTOR_SIZE_bytes*8)
  44:sieve_extend.c **** #define SHIFT_VECTOR ((bitshift_t)(pow(VECTOR_SIZE,1)+pow(VECTOR_SIZE,2)+pow(VECTOR_SIZE,3)+pow(VEC
  45:sieve_extend.c **** 
  46:sieve_extend.c **** typedef bitword_t bitvector_t __attribute__ ((vector_size(VECTOR_SIZE_bytes)));
  47:sieve_extend.c **** 
  48:sieve_extend.c **** // globals for tuning
  49:sieve_extend.c **** counter_t global_SMALLSTEP_FASTER = 0;
  50:sieve_extend.c **** counter_t global_MEDIUMSTEP_FASTER = 0;
  51:sieve_extend.c **** counter_t global_VECTORSTEP_FASTER = VECTOR_SIZE/2;
  52:sieve_extend.c **** 
  53:sieve_extend.c **** #define SAFE_SHIFTBIT (bitshift_t)1U
  54:sieve_extend.c **** #define SAFE_ZERO  (bitword_t)0U
  55:sieve_extend.c **** #define BITWORD_SHIFTBIT (bitword_t)1U
  56:sieve_extend.c **** #define WORDMASK ((~SAFE_ZERO)>>(WORD_SIZE_bitshift-SHIFT_WORD))
  57:sieve_extend.c **** #define VECTORMASK ((~SAFE_ZERO)>>(WORD_SIZE_bitshift-SHIFT_VECTOR))
  58:sieve_extend.c **** // #define SMALLSTEP_FASTER ((counter_t)0)
  59:sieve_extend.c **** // #define MEDIUMSTEP_FASTER ((counter_t)16)
  60:sieve_extend.c **** // #define VECTORSTEP_FASTER ((counter_t)96)
  61:sieve_extend.c **** 
  62:sieve_extend.c **** #define SMALLSTEP_FASTER ((counter_t)global_SMALLSTEP_FASTER)
  63:sieve_extend.c **** #define MEDIUMSTEP_FASTER ((counter_t)global_MEDIUMSTEP_FASTER)
  64:sieve_extend.c **** #define VECTORSTEP_FASTER ((counter_t)global_VECTORSTEP_FASTER)
  65:sieve_extend.c **** 
  66:sieve_extend.c **** #define wordindex(index) (((counter_t)index) >> (bitshift_t)SHIFT_WORD)
  67:sieve_extend.c **** #define wordend(index) ((counter_t)index|WORDMASK)
  68:sieve_extend.c **** #define vectorindex(index) (((counter_t)index) >> (bitshift_t)SHIFT_VECTOR)
  69:sieve_extend.c **** #define vectorstart(index) (((counter_t)index) & (counter_t)~VECTORMASK)
  70:sieve_extend.c **** 
  71:sieve_extend.c **** // modern processors do a & over the shiftssize, so we only have to do that ourselve when using the
  72:sieve_extend.c **** #define bitindex(index) ((bitshift_t)(index))
  73:sieve_extend.c **** // #define bitindex(index) ((bitshift_t)(index)&((bitword_t)(WORD_SIZE-1)))
  74:sieve_extend.c **** //#define bitindex_calc(index) ((bitshift_t)(index)&((bitshift_t)(WORD_SIZE_bitshift-SAFE_SHIFTBIT)
  75:sieve_extend.c **** #define bitindex_calc(index) ((bitshift_t)(index)&((bitshift_t)(WORDMASK)))
  76:sieve_extend.c **** #define  markmask(index) (BITWORD_SHIFTBIT << bitindex(index))
  77:sieve_extend.c **** #define  markmask_calc(index) (BITWORD_SHIFTBIT << bitindex_calc(index))
  78:sieve_extend.c **** // #define chopmask(index) ((SAFE_SHIFTBIT << bitindex(index))-SAFE_SHIFTBIT)
  79:sieve_extend.c **** // #define chopmask2(index) (((bitword_t)2U << bitindex(index))-SAFE_SHIFTBIT)
  80:sieve_extend.c **** #define chopmask(index) (~SAFE_ZERO >> (WORD_SIZE-1-bitindex_calc(index)))
  81:sieve_extend.c **** #define keepmask(index) (~SAFE_ZERO << (bitindex_calc(index)))
  82:sieve_extend.c **** #define chopmask2(index) chopmask(index)
  83:sieve_extend.c **** #define real(bit) (bit*2+1)
GAS LISTING /tmp/ccjg94QQ.s 			page 4


  84:sieve_extend.c **** 
  85:sieve_extend.c **** #define min(a,b) ((a<b) ? a : b)
  86:sieve_extend.c **** #define uintsafeminus(a,b) ((a>b)?(a-b):0)
  87:sieve_extend.c **** 
  88:sieve_extend.c **** #define likely(x)       (__builtin_expect((x),1))
  89:sieve_extend.c **** #define unlikely(x)     (__builtin_expect((x),0))
  90:sieve_extend.c **** 
  91:sieve_extend.c **** counter_t debug_hitpoint[5] = { 0,0,0,0,0};
  92:sieve_extend.c **** 
  93:sieve_extend.c **** struct sieve_state {
  94:sieve_extend.c ****     bitword_t* bitarray;
  95:sieve_extend.c ****     counter_t  bits;
  96:sieve_extend.c ****     counter_t  size;
  97:sieve_extend.c **** };
  98:sieve_extend.c **** 
  99:sieve_extend.c **** #include "debugtools.h"
 100:sieve_extend.c **** 
 101:sieve_extend.c **** // use cache lines as much as possible - alignment might be key
 102:sieve_extend.c **** #define ceiling(x,y) (((x) + (y) - 1) / (y)) // Return the smallest multiple N of y such that:  x <
 103:sieve_extend.c **** static struct sieve_state *create_sieve(counter_t size) {
 104:sieve_extend.c ****     struct sieve_state *sieve = aligned_alloc(8, sizeof(struct sieve_state));
 105:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize*8) * anticiped_cache
 106:sieve_extend.c **** 
 107:sieve_extend.c ****     sieve->bitarray = aligned_alloc((size_t)anticiped_cache_line_bytesize, (size_t)memSize );
 108:sieve_extend.c ****     sieve->bits     = size >> 1;
 109:sieve_extend.c ****     sieve->size     = size;
 110:sieve_extend.c **** 
 111:sieve_extend.c ****     // moved clearing the sieve with 0 to the sieve_block_extend
 112:sieve_extend.c ****     // it gave weird malloc problems at this point
 113:sieve_extend.c ****     return sieve;
 114:sieve_extend.c **** }
 115:sieve_extend.c **** 
 116:sieve_extend.c **** static void delete_sieve(struct sieve_state *sieve) {
 117:sieve_extend.c ****     free(sieve->bitarray);
 118:sieve_extend.c ****     free(sieve);
 119:sieve_extend.c **** }
 120:sieve_extend.c **** 
 121:sieve_extend.c **** // not much performance gain at smaller sieves, but its's nice to have an implementation
 122:sieve_extend.c **** static inline counter_t searchBitFalse(bitword_t* bitarray, register counter_t index) {
 123:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 125:sieve_extend.c **** }
 126:sieve_extend.c **** 
 127:sieve_extend.c **** // not much performance gain at smaller sieves, but its's nice to have an implementation
 128:sieve_extend.c **** static inline counter_t searchBitFalse_longRange(bitword_t* bitarray, register counter_t index) {
 129:sieve_extend.c ****     // return searchBitFalse(bitarray, index);
 130:sieve_extend.c **** 
 131:sieve_extend.c ****    register counter_t index_word = wordindex(index);
 132:sieve_extend.c ****    bitshift_t index_bit  = bitindex_calc(index);
 133:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 134:sieve_extend.c ****    index += distance;
 135:sieve_extend.c ****    distance += index_bit;
 136:sieve_extend.c **** 
 137:sieve_extend.c ****    while unlikely(distance == WORD_SIZE_bitshift) { // to prevent a bug from optimzer
 138:sieve_extend.c ****        index_word++;
 139:sieve_extend.c ****        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 140:sieve_extend.c ****        index += distance;
GAS LISTING /tmp/ccjg94QQ.s 			page 5


 141:sieve_extend.c ****    }
 142:sieve_extend.c **** 
 143:sieve_extend.c ****    return index;
 144:sieve_extend.c **** }
 145:sieve_extend.c **** 
 146:sieve_extend.c **** 
 147:sieve_extend.c **** static void inline applyMask(bitword_t* __restrict bitarray, const counter_t step, const counter_t 
 148:sieve_extend.c **** //#if __APPLE__
 149:sieve_extend.c **** //   register const counter_t step_2 = step * 2;
 150:sieve_extend.c **** //   register const counter_t step_3 = step * 3;
 151:sieve_extend.c **** //   register const counter_t step_4 = step * 4;
 152:sieve_extend.c **** //   register const counter_t range_stop_word = wordindex(range_stop);
 153:sieve_extend.c **** //   const counter_t loop_stop_word = (range_stop_word > step_3) ? (range_stop_word - step_3) : (co
 154:sieve_extend.c **** //
 155:sieve_extend.c **** //   #pragma ivdep
 156:sieve_extend.c **** //   for (;index_word < loop_stop_word;  index_word += step_4) {
 157:sieve_extend.c **** //       bitarray[index_word         ] |= mask;
 158:sieve_extend.c **** //       bitarray[index_word + step  ] |= mask;
 159:sieve_extend.c **** //       bitarray[index_word + step_2] |= mask;
 160:sieve_extend.c **** //       bitarray[index_word + step_3] |= mask;
 161:sieve_extend.c **** //   }
 162:sieve_extend.c **** //
 163:sieve_extend.c **** //   #pragma ivdep
 164:sieve_extend.c **** //   while (index_word < range_stop_word) {
 165:sieve_extend.c **** //       bitarray[index_word] |= mask;
 166:sieve_extend.c **** //       index_word += step;
 167:sieve_extend.c **** //   }
 168:sieve_extend.c **** //
 169:sieve_extend.c **** //   if (index_word == wordindex(range_stop)) {
 170:sieve_extend.c **** //       bitarray[wordindex(range_stop)] |= (mask & chopmask2(range_stop));
 171:sieve_extend.c **** //   }
 172:sieve_extend.c **** //#endif
 173:sieve_extend.c **** //    ALTERNATIVE using pointers is faster in gcc
 174:sieve_extend.c **** //#if __linux__
 175:sieve_extend.c ****    const counter_t range_stop_word = wordindex(range_stop);
 176:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 177:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 178:sieve_extend.c **** 
 179:sieve_extend.c ****   #pragma unroll
 180:sieve_extend.c ****    #pragma ivdep
 181:sieve_extend.c ****    while likely(index_ptr < fast_loop_ptr) {
 182:sieve_extend.c ****        *index_ptr |= mask;
 183:sieve_extend.c ****        index_ptr+=step;
 184:sieve_extend.c ****        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 186:sieve_extend.c ****        *index_ptr |= mask;
 187:sieve_extend.c ****        index_ptr+=step;
 188:sieve_extend.c ****        *index_ptr |= mask;
 189:sieve_extend.c ****        index_ptr+=step;
 190:sieve_extend.c ****        *index_ptr |= mask;
 191:sieve_extend.c ****        index_ptr+=step;
 192:sieve_extend.c ****    }
 193:sieve_extend.c **** 
 194:sieve_extend.c ****    const register bitword_t* __restrict range_stop_ptr = &bitarray[(range_stop_word)];
 195:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 196:sieve_extend.c ****        *index_ptr |= mask;
 197:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/ccjg94QQ.s 			page 6


 198:sieve_extend.c ****    }
 199:sieve_extend.c **** 
 200:sieve_extend.c ****    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range_stop_ptr, depending o
 201:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 202:sieve_extend.c ****    }
 203:sieve_extend.c **** 
 204:sieve_extend.c **** //    const counter_t range_stop_word = wordindex(range_stop);
 205:sieve_extend.c **** //    bitword_t* __restrict index_ptr = &bitarray[index_word];
 206:sieve_extend.c **** //    bitword_t* __restrict fast_loop_ptr = &bitarray[((range_stop_word>step*4) ? (range_stop_word 
 207:sieve_extend.c **** //    bitword_t* __restrict range_stop_ptr = &bitarray[(range_stop_word)];//>step_4) ? (range_stop_
 208:sieve_extend.c **** //    const int loop_iterations = ((range_stop_word - index_word) / (step*4));
 209:sieve_extend.c **** 
 210:sieve_extend.c **** //      debug printf("..%ju loop iterations for step %ju range in words (%ju - %ju)\n",(uintmax_t)l
 211:sieve_extend.c **** 
 212:sieve_extend.c **** //     #pragma unroll 1
 213:sieve_extend.c **** //    #pragma ivdep
 214:sieve_extend.c **** //    for ( int i=0; i < loop_iterations; i++) {
 215:sieve_extend.c **** //        *(index_ptr) |= mask;
 216:sieve_extend.c **** //        *(index_ptr+step) |= mask;
 217:sieve_extend.c **** //        *(index_ptr+2*step) |= mask;
 218:sieve_extend.c **** //        *(index_ptr+3*step) |= mask;
 219:sieve_extend.c **** //        index_ptr += 4*step;
 220:sieve_extend.c **** //    }
 221:sieve_extend.c **** 
 222:sieve_extend.c **** //    while ( index_ptr < range_stop_ptr) {
 223:sieve_extend.c **** //        *index_ptr |= mask;
 224:sieve_extend.c **** //        index_ptr+=step;
 225:sieve_extend.c **** //    }
 226:sieve_extend.c **** 
 227:sieve_extend.c **** //    if (index_ptr == range_stop_ptr) {
 228:sieve_extend.c **** //       *range_stop_ptr |= (mask & chopmask(range_stop));
 229:sieve_extend.c **** //    }
 230:sieve_extend.c **** //#endif
 231:sieve_extend.c **** }
 232:sieve_extend.c **** 
 233:sieve_extend.c **** // set bits by creating a pattern and then extending it to word and range size
 234:sieve_extend.c **** static void inline setBitsTrue_smallStep(bitword_t* __restrict bitarray, const counter_t range_star
 235:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using smallstep (%ju occurances)
 236:sieve_extend.c **** 
 237:sieve_extend.c ****     // build the pattern in a word
 238:sieve_extend.c **** 	register bitword_t pattern = BITWORD_SHIFTBIT;
 239:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; patternsize += patternsi
 240:sieve_extend.c ****         pattern |= (pattern << patternsize);
 241:sieve_extend.c **** 
 242:sieve_extend.c ****     // debug if (step==13) { printf("Before\n"); dump_bitarray(bitarray,10); }
 243:sieve_extend.c ****     
 244:sieve_extend.c ****     // initialize loop variables and stop if this is it
 245:sieve_extend.c ****     const counter_t range_stop_word = wordindex(range_stop);
 246:sieve_extend.c ****     register counter_t range_start_word = wordindex(range_start);
 247:sieve_extend.c ****      if (range_start_word >= range_stop_word) { // shortcut
 248:sieve_extend.c ****        bitarray[range_start_word] |= (pattern << bitindex(range_start)) & chopmask(range_stop);
 249:sieve_extend.c ****         //  debug if (step==13) { printf("After\n"); dump_bitarray(bitarray,10); }
 250:sieve_extend.c ****        return;
 251:sieve_extend.c ****     }
 252:sieve_extend.c ****     
 253:sieve_extend.c ****     bitarray[range_start_word] |= (pattern << bitindex(range_start));
 254:sieve_extend.c **** 
GAS LISTING /tmp/ccjg94QQ.s 			page 7


 255:sieve_extend.c ****    // from now on, we are before range_stop_word
 256:sieve_extend.c ****    // first word is special, because it should not set bits before the range_start_bit
 257:sieve_extend.c ****    register bitshift_t pattern_size = WORD_SIZE_bitshift - (WORD_SIZE_bitshift % step);
 258:sieve_extend.c ****    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 259:sieve_extend.c ****    register bitshift_t shift = (bitindex_calc(range_start))%step ;
 260:sieve_extend.c ****    counter_t loop_range = range_stop_word - range_start_word;
 261:sieve_extend.c ****    #pragma unroll
 262:sieve_extend.c ****    #pragma ivdep
 263:sieve_extend.c ****    for (counter_t i=1; i <= loop_range; i++) {
 264:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 265:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 266:sieve_extend.c **** 
 267:sieve_extend.c ****         // bitarray[range_start_word+i] |=  (pattern >> (pattern_size-((shift+i*pattern_shift) % st
 268:sieve_extend.c ****    }
 269:sieve_extend.c ****    bitarray[range_stop_word] &= chopmask(range_stop);
 270:sieve_extend.c **** 
 271:sieve_extend.c **** //    for(counter_t check=range_start; check<=range_stop; check+=step) {
 272:sieve_extend.c **** //         if (!(bitarray[wordindex(check)] & markmask(check))) {
 273:sieve_extend.c **** //             printf("Bit %ju not set\n",check);
 274:sieve_extend.c **** //             dump_bitarray(bitarray,4);
 275:sieve_extend.c **** //             printWord(pattern); printf("\n");
 276:sieve_extend.c **** //             exit(0);
 277:sieve_extend.c **** //         }
 278:sieve_extend.c **** //    }
 279:sieve_extend.c **** 
 280:sieve_extend.c ****     // pattern = (pattern << (bitindex_calc(range_start) % step)); // correct for inital offset
 281:sieve_extend.c ****     // const register bitshift_t pattern_shift = WORD_SIZE_bitshift % step;
 282:sieve_extend.c ****     // const register bitshift_t pattern_shift_flipped = WORD_SIZE_bitshift - pattern_shift - patte
 283:sieve_extend.c ****     // const register counter_t loop_range = range_stop_word - range_start_word;
 284:sieve_extend.c ****     // #pragma unroll
 285:sieve_extend.c ****     // #pragma ivdep
 286:sieve_extend.c ****     // for (counter_t i=1; i <= loop_range; i++) {
 287:sieve_extend.c ****     //     pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 288:sieve_extend.c ****     //     bitarray[range_start_word+i] |= pattern;
 289:sieve_extend.c ****     // }
 290:sieve_extend.c ****     // bitarray[range_stop_word] &= chopmask(range_stop);
 291:sieve_extend.c **** }
 292:sieve_extend.c **** 
 293:sieve_extend.c **** // Medium steps could be within the same word (e.g. less than 64 bits apart).
 294:sieve_extend.c **** // By joining the masks and then writing to memory, we might save some time.
 295:sieve_extend.c **** // This is especially true for small steps over long ranges
 296:sieve_extend.c **** // but it needs tuning, because there is some overhead of checking if the next step is in the same 
 297:sieve_extend.c **** static void  setBitsTrue_mediumStep(bitword_t* __restrict bitarray, const counter_t range_start, co
 298:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 299:sieve_extend.c **** 
 300:sieve_extend.c ****     if (range_stop_unique > range_stop) { // the range will not repeat itself; no need to try to re
 301:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-unique (%ju
 302:sieve_extend.c **** 
 303:sieve_extend.c ****         #pragma ivdep
 304:sieve_extend.c ****         for (register counter_t index = range_start; index <= range_stop;) {
 305:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 306:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 307:sieve_extend.c ****             #pragma ivdep
 308:sieve_extend.c ****             do {
 309:sieve_extend.c ****                 mask |= markmask(index);
 310:sieve_extend.c ****                 index += step;
 311:sieve_extend.c ****             } while (index_word == wordindex(index));
GAS LISTING /tmp/ccjg94QQ.s 			page 8


 312:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 313:sieve_extend.c ****             //     mask |= markmask(index);
 314:sieve_extend.c ****             bitarray[index_word] |= mask;
 315:sieve_extend.c ****         }
 316:sieve_extend.c ****     }
 317:sieve_extend.c ****     else { // this mask will reoccur at a interval of step words -> fill mask and reapply as a inte
 318:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-repeat (%ju
 319:sieve_extend.c ****         
 320:sieve_extend.c ****         #pragma ivdep
 321:sieve_extend.c ****         for (register counter_t index = range_start; index <= range_stop_unique;) {
 322:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 323:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 324:sieve_extend.c ****             #pragma ivdep
 325:sieve_extend.c ****             do {
 326:sieve_extend.c ****                 mask |= markmask(index);
 327:sieve_extend.c ****                 index += step;
 328:sieve_extend.c ****             } while (index_word == wordindex(index));
 329:sieve_extend.c ****             // #pragma ivdep
 330:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 331:sieve_extend.c ****             //     mask |= markmask(index);
 332:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 333:sieve_extend.c ****         }
 334:sieve_extend.c ****     }
 335:sieve_extend.c **** }
 336:sieve_extend.c **** 
 337:sieve_extend.c **** // small ranges (< WORD_SIZE * step) mean the mask is unique
 338:sieve_extend.c **** static inline void setBitsTrue_largeSteps(bitword_t* __restrict bitarray, const counter_t range_sta
 339:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largesteps (%ju occurances
 340:sieve_extend.c ****     
 341:sieve_extend.c ****     #pragma unroll
 342:sieve_extend.c ****     #pragma ivdep
 343:sieve_extend.c ****     for (counter_t index = range_start; index <= range_stop; index += step) {
 344:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 345:sieve_extend.c ****     }
 346:sieve_extend.c **** 
 347:sieve_extend.c **** //    counter_t loop_iterations = (range_stop - range_start) / step;
 348:sieve_extend.c **** //    #pragma unroll
 349:sieve_extend.c **** //     #pragma ivdep
 350:sieve_extend.c **** //     for (register counter_t i = 0; i <= loop_iterations; i++) {
 351:sieve_extend.c **** //         bitarray[wordindex(range_start+i*step)] |= markmask(range_start+i*step);
 352:sieve_extend.c **** //     }
 353:sieve_extend.c **** }
 354:sieve_extend.c **** 
 355:sieve_extend.c **** // small ranges (< WORD_SIZE * step) mean the mask is unique
 356:sieve_extend.c **** static void setBitsTrue_race(bitword_t* bitarray, counter_t index1, counter_t index2, const counter
 357:sieve_extend.c ****     debug printf("Setting bits step %ju and %ju in %ju bit range (%ju-%ju) using race (%ju occuranc
 358:sieve_extend.c **** 
 359:sieve_extend.c ****     counter_t index1_word = wordindex(index1);
 360:sieve_extend.c ****     counter_t index2_word = wordindex(index2);
 361:sieve_extend.c ****     
 362:sieve_extend.c ****     while (1) {
 363:sieve_extend.c ****         if (index1_word == index2_word) {
 364:sieve_extend.c ****             bitword_t mask = SAFE_ZERO;
 365:sieve_extend.c ****             counter_t index_word = index1_word;
 366:sieve_extend.c ****             do {
 367:sieve_extend.c ****                 mask |= markmask(index1);
 368:sieve_extend.c ****                 index1 += step1;
GAS LISTING /tmp/ccjg94QQ.s 			page 9


 369:sieve_extend.c ****                 index1_word = wordindex(index1);
 370:sieve_extend.c ****             } while (index1_word == index_word);
 371:sieve_extend.c ****             do {
 372:sieve_extend.c ****                 mask |= markmask(index2);
 373:sieve_extend.c ****                 index2 += step2;
 374:sieve_extend.c ****                 index2_word = wordindex(index2);
 375:sieve_extend.c ****             } while (index2_word == index_word);
 376:sieve_extend.c ****             bitarray[index_word] |= mask;
 377:sieve_extend.c ****         }
 378:sieve_extend.c **** 
 379:sieve_extend.c ****         // because step is larger, index2 is the most likely to get out of bounds first
 380:sieve_extend.c ****         if (index2 > range_stop) {
 381:sieve_extend.c ****             while (index1 <= range_stop) {
 382:sieve_extend.c ****                 bitarray[wordindex(index1)] |= markmask(index1);
 383:sieve_extend.c ****                 index1 += step1;
 384:sieve_extend.c ****             }
 385:sieve_extend.c ****             return;
 386:sieve_extend.c ****         }
 387:sieve_extend.c **** 
 388:sieve_extend.c ****         if (index1 > range_stop) {
 389:sieve_extend.c ****             while (index2 <= range_stop) {
 390:sieve_extend.c ****                 bitarray[wordindex(index2)] |= markmask(index2);
 391:sieve_extend.c ****                 index2 += step2;
 392:sieve_extend.c ****             }
 393:sieve_extend.c ****             return;
 394:sieve_extend.c ****         }
 395:sieve_extend.c **** 
 396:sieve_extend.c ****         while (index1_word < index2_word) {
 397:sieve_extend.c ****             bitarray[index1_word] |= markmask(index1);
 398:sieve_extend.c ****             index1 += step1;
 399:sieve_extend.c ****             index1_word = wordindex(index1);
 400:sieve_extend.c ****         }
 401:sieve_extend.c ****         
 402:sieve_extend.c ****         while (index2_word < index1_word){
 403:sieve_extend.c ****             bitarray[index2_word] |= markmask(index2);
 404:sieve_extend.c ****             index2 += step2;
 405:sieve_extend.c ****             index2_word = wordindex(index2);
 406:sieve_extend.c ****         }
 407:sieve_extend.c **** 
 408:sieve_extend.c ****     }
 409:sieve_extend.c **** }
 410:sieve_extend.c **** 
 411:sieve_extend.c **** // Large ranges (> WORD_SIZE * step) mean the same mask can be reused
 412:sieve_extend.c **** static inline void setBitsTrue_largeRange(bitword_t* __restrict bitarray, const counter_t range_sta
 413:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange (%ju occurances
 414:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 415:sieve_extend.c **** 
 416:sieve_extend.c **** //    #pragma unroll
 417:sieve_extend.c ****     #pragma ivdep
 418:sieve_extend.c ****     for (register counter_t index = range_start; index < range_stop_unique; index += step) {
 419:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 420:sieve_extend.c ****     }
 421:sieve_extend.c **** }
 422:sieve_extend.c **** 
 423:sieve_extend.c **** 
 424:sieve_extend.c **** static void inline applyMask_vector(bitvector_t* __restrict bitarray, const counter_t step, const c
 425:sieve_extend.c ****    const counter_t range_stop_vector = vectorindex(range_stop);
GAS LISTING /tmp/ccjg94QQ.s 			page 10


 426:sieve_extend.c ****    register bitvector_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_vect
 427:sieve_extend.c ****    register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_st
 428:sieve_extend.c **** 
 429:sieve_extend.c ****    #pragma unroll
 430:sieve_extend.c ****    #pragma ivdep
 431:sieve_extend.c ****    while likely(index_ptr < fast_loop_ptr) {
 432:sieve_extend.c ****        *index_ptr |= mask;
 433:sieve_extend.c ****        index_ptr+=step;
 434:sieve_extend.c ****        *index_ptr |= mask;
 435:sieve_extend.c ****        index_ptr+=step;
 436:sieve_extend.c ****        *index_ptr |= mask;
 437:sieve_extend.c ****        index_ptr+=step;
 438:sieve_extend.c ****        *index_ptr |= mask;
 439:sieve_extend.c ****        index_ptr+=step;
 440:sieve_extend.c ****        *index_ptr |= mask;
 441:sieve_extend.c ****        index_ptr+=step;
 442:sieve_extend.c ****    }
 443:sieve_extend.c **** 
 444:sieve_extend.c ****    const register bitvector_t* __restrict range_stop_ptr = &bitarray[(range_stop_vector)];
 445:sieve_extend.c ****    while likely(index_ptr <= range_stop_ptr) {
 446:sieve_extend.c ****        *index_ptr |= mask;
 447:sieve_extend.c ****        index_ptr+=step;
 448:sieve_extend.c ****    }
 449:sieve_extend.c **** 
 450:sieve_extend.c **** //    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range_stop_ptr, dependin
 451:sieve_extend.c **** //         bitword_t* __restrict index_ptr_word = (bitword_t*)index_ptr;
 452:sieve_extend.c **** //         bitword_t* __restrict range_stop_ptr_word = (bitword_t*)&bitarray[wordindex(range_stop)]
 453:sieve_extend.c **** //         for(counter_t word=0; index_ptr_word+word <= range_stop_ptr_word; word++) {
 454:sieve_extend.c **** //             *(index_ptr_word+word) = mask[word];
 455:sieve_extend.c **** //         }
 456:sieve_extend.c ****  
 457:sieve_extend.c **** //                //     counter_t index_word = current_vector * VECTOR_ELEMENTS;
 458:sieve_extend.c **** //         //     counter_t range_stop_word = wordindex(range_stop);
 459:sieve_extend.c **** //         //     if likely(index_word <= range_stop_word) {
 460:sieve_extend.c **** //         //         #pragma ivdep
 461:sieve_extend.c **** //         //         for (word =0; word < VECTOR_ELEMENTS; word++) {
 462:sieve_extend.c **** //         //             if unlikely(index_word+word <= range_stop_word)
 463:sieve_extend.c **** //         //                 bitarray_word[index_word+word] |= quadmask[word];
 464:sieve_extend.c **** //         //         }
 465:sieve_extend.c **** //         //     }
 466:sieve_extend.c **** 
 467:sieve_extend.c **** 
 468:sieve_extend.c **** //    }
 469:sieve_extend.c **** }
 470:sieve_extend.c **** 
 471:sieve_extend.c **** static void setBitsTrue_largeRange_vector(bitword_t* __restrict bitarray_word, counter_t range_star
 472:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 473:sieve_extend.c **** 
 474:sieve_extend.c ****     // const counter_t range_stop_unique_oneword =  min(range_start + WORD_SIZE_counter * step, ran
 475:sieve_extend.c ****     // for (counter_t index = range_start; index <= range_stop_unique_oneword; index += step) {
 476:sieve_extend.c ****     //     applyMask(bitarray_word, step, range_stop, markmask(index), wordindex(index));
 477:sieve_extend.c ****     // }
 478:sieve_extend.c ****     // return;
 479:sieve_extend.c **** 
 480:sieve_extend.c ****     bitvector_t* __restrict bitarray_vector = __builtin_assume_aligned( (bitvector_t*) bitarray_wor
 481:sieve_extend.c ****     
 482:sieve_extend.c ****     // find out where the first complete vector is
GAS LISTING /tmp/ccjg94QQ.s 			page 11


 483:sieve_extend.c ****     // printWord(range_start); printf("\n");
 484:sieve_extend.c ****     // printWord(~VECTORMASK); printf("\n");
 485:sieve_extend.c ****     // printWord(vectorstart(range_start)); printf("\n\n");
 486:sieve_extend.c ****     counter_t range_start_atvector = vectorstart(range_start);
 487:sieve_extend.c ****     if likely((range_start_atvector + step) < range_start) { // not the first step possible in this
 488:sieve_extend.c ****         debug { printf("Range start+step %ju not at start of vector %ju\n",range_start+step, range_
 489:sieve_extend.c **** 
 490:sieve_extend.c ****         range_start_atvector += VECTOR_SIZE; // find next vector
 491:sieve_extend.c ****         if (unlikely(range_start_atvector > range_stop)) { // we should not be here; just handle wi
 492:sieve_extend.c ****             debug2 printf("..Marking and returning without vector\n");
 493:sieve_extend.c **** 
 494:sieve_extend.c ****             for (counter_t index = range_start; index <= range_stop; index += step) 
 495:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 496:sieve_extend.c ****             return;                 
 497:sieve_extend.c ****         }
 498:sieve_extend.c **** 
 499:sieve_extend.c ****         debug2 printf("..Marking without vector until %ju\n",range_start_atvector);
 500:sieve_extend.c ****         register counter_t index = range_start; // outside to later adjust range_start
 501:sieve_extend.c **** 
 502:sieve_extend.c ****         // #pragma ivdep unroll
 503:sieve_extend.c ****         // for (; index < range_start_atvector; index += step) 
 504:sieve_extend.c ****         //     bitarray_word[wordindex(index)] |= markmask(index);
 505:sieve_extend.c ****         // range_start = index;
 506:sieve_extend.c **** 
 507:sieve_extend.c ****         #pragma ivdep unroll
 508:sieve_extend.c ****         for (; range_start < range_start_atvector;) {
 509:sieve_extend.c ****             register counter_t index_word = wordindex(range_start);
 510:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 511:sieve_extend.c ****             do {
 512:sieve_extend.c ****                 mask |= markmask(range_start);
 513:sieve_extend.c ****                 range_start += step;
 514:sieve_extend.c ****             } while (wordindex(range_start) == index_word);
 515:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 516:sieve_extend.c ****         }
 517:sieve_extend.c ****     }
 518:sieve_extend.c ****     
 519:sieve_extend.c ****     const counter_t range_stop_unique =  min(range_start + VECTOR_SIZE_counter * step, range_stop);
 520:sieve_extend.c ****     
 521:sieve_extend.c ****     // const counter_t step_2 = step * 2;
 522:sieve_extend.c ****     // const counter_t step_3 = step * 3;
 523:sieve_extend.c ****     // const counter_t step_4 = step * 4;
 524:sieve_extend.c **** 
 525:sieve_extend.c ****     #pragma ivdep unroll
 526:sieve_extend.c ****     for (counter_t index = range_start; index < range_stop_unique;) {
 527:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 528:sieve_extend.c ****         register bitvector_t quadmask = { };
 529:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 530:sieve_extend.c ****         
 531:sieve_extend.c ****         // build a quadmask
 532:sieve_extend.c ****         #pragma ivdep unroll
 533:sieve_extend.c ****         do {
 534:sieve_extend.c ****             quadmask[word] |= markmask(index);
 535:sieve_extend.c ****             index += step;
 536:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 537:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 538:sieve_extend.c ****         
 539:sieve_extend.c ****         // use mask on all n*step multiples
GAS LISTING /tmp/ccjg94QQ.s 			page 12


 540:sieve_extend.c ****         register counter_t current_vector = current_vector_start_word >> (SHIFT_VECTOR - SHIFT_WORD
 541:sieve_extend.c ****         const counter_t range_stop_vector = vectorindex(range_stop);
 542:sieve_extend.c **** 
 543:sieve_extend.c ****         applyMask_vector(bitarray_vector, step, range_stop, quadmask, current_vector);
 544:sieve_extend.c **** 
 545:sieve_extend.c ****         // if (current_vector+step_4 <= range_stop_vector) {
 546:sieve_extend.c ****         //     register const counter_t loop_stop_vector = (range_stop_vector > step_4) ? (range_st
 547:sieve_extend.c ****         //     #pragma ivdep unroll
 548:sieve_extend.c ****         //     for(; current_vector <= loop_stop_vector; current_vector += step_4) {
 549:sieve_extend.c ****         //         bitarray_vector[current_vector       ] |= quadmask;
 550:sieve_extend.c ****         //         bitarray_vector[current_vector+step  ] |= quadmask;
 551:sieve_extend.c ****         //         bitarray_vector[current_vector+step_2] |= quadmask;
 552:sieve_extend.c ****         //         bitarray_vector[current_vector+step_3] |= quadmask;
 553:sieve_extend.c ****         //     }
 554:sieve_extend.c ****         // }
 555:sieve_extend.c **** 
 556:sieve_extend.c **** 
 557:sieve_extend.c ****         // #pragma ivdep unroll
 558:sieve_extend.c ****         // for(; current_vector+step_4 < range_stop_vector; current_vector += step_4) {
 559:sieve_extend.c ****         //     bitarray_vector[current_vector       ] |= quadmask;
 560:sieve_extend.c ****         //     bitarray_vector[current_vector+step  ] |= quadmask;
 561:sieve_extend.c ****         //     bitarray_vector[current_vector+step_2] |= quadmask;
 562:sieve_extend.c ****         //     bitarray_vector[current_vector+step_3] |= quadmask;
 563:sieve_extend.c ****         // }
 564:sieve_extend.c **** 
 565:sieve_extend.c ****         // #pragma ivdep unroll
 566:sieve_extend.c ****         // for(; current_vector < range_stop_vector; current_vector += step) {
 567:sieve_extend.c ****         //     bitarray_vector[current_vector] |= quadmask;
 568:sieve_extend.c ****         // }
 569:sieve_extend.c ****         
 570:sieve_extend.c ****         // if unlikely(current_vector == range_stop_vector) {
 571:sieve_extend.c ****         //     counter_t index_word = current_vector * VECTOR_ELEMENTS;
 572:sieve_extend.c ****         //     counter_t range_stop_word = wordindex(range_stop);
 573:sieve_extend.c ****         //     if likely(index_word <= range_stop_word) {
 574:sieve_extend.c ****         //         #pragma ivdep
 575:sieve_extend.c ****         //         for (word =0; word < VECTOR_ELEMENTS; word++) {
 576:sieve_extend.c ****         //             if unlikely(index_word+word <= range_stop_word)
 577:sieve_extend.c ****         //                 bitarray_word[index_word+word] |= quadmask[word];
 578:sieve_extend.c ****         //         }
 579:sieve_extend.c ****         //     }
 580:sieve_extend.c **** 
 581:sieve_extend.c ****         // }
 582:sieve_extend.c ****     }
 583:sieve_extend.c **** }
 584:sieve_extend.c **** 
 585:sieve_extend.c **** static void extendSieve_smallSize(bitword_t* __restrict bitarray, const counter_t source_start, con
  90              		.loc 1 585 153 view -0
  91              		.cfi_startproc
 586:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
  92              		.loc 1 586 5 view .LVU1
 587:sieve_extend.c ****     // debug { printf("...At start. "); dump_bitarray(bitarray, 4); }
 588:sieve_extend.c **** 
 589:sieve_extend.c ****     const counter_t source_word = wordindex(source_start);
  93              		.loc 1 589 5 view .LVU2
 590:sieve_extend.c ****     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_start)) | (bitarray[sou
  94              		.loc 1 590 5 view .LVU3
  95              	# sieve_extend.c:585: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
GAS LISTING /tmp/ccjg94QQ.s 			page 13


 585:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
  96              		.loc 1 585 153 is_stmt 0 view .LVU4
  97 0000 55       		push	rbp	#
  98              		.cfi_def_cfa_offset 16
  99              		.cfi_offset 6, -16
 100 0001 4989D1   		mov	r9, rdx	# size, tmp576
 101              	# sieve_extend.c:589:     const counter_t source_word = wordindex(source_start);
 589:sieve_extend.c ****     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_start)) | (bitarray[sou
 102              		.loc 1 589 21 view .LVU5
 103 0004 4889F0   		mov	rax, rsi	# source_word, source_start
 104              	# sieve_extend.c:585: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 585:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 105              		.loc 1 585 153 view .LVU6
 106 0007 4889E5   		mov	rbp, rsp	#,
 107              		.cfi_def_cfa_register 6
 108              	# sieve_extend.c:590:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 109              		.loc 1 590 134 view .LVU7
 110 000a 89F2     		mov	edx, esi	# tmp334, source_start
 111              	.LVL1:
 112              	# sieve_extend.c:585: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 585:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 113              		.loc 1 585 153 view .LVU8
 114 000c 4157     		push	r15	#
 115              	# sieve_extend.c:589:     const counter_t source_word = wordindex(source_start);
 589:sieve_extend.c ****     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_start)) | (bitarray[sou
 116              		.loc 1 589 21 view .LVU9
 117 000e 48C1E806 		shr	rax, 6	# source_word,
 118              	.LVL2:
 119              	# sieve_extend.c:590:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 120              		.loc 1 590 134 view .LVU10
 121 0012 83E23F   		and	edx, 63	# tmp334,
 122              	# sieve_extend.c:585: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 585:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 123              		.loc 1 585 153 view .LVU11
 124 0015 4156     		push	r14	#
 125              	# sieve_extend.c:590:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 126              		.loc 1 590 133 view .LVU12
 127 0017 41B84000 		mov	r8d, 64	# tmp336,
 127      0000
 128              	# sieve_extend.c:590:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 129              		.loc 1 590 167 view .LVU13
 130 001d 4589CB   		mov	r11d, r9d	# tmp342, size
 131              	# sieve_extend.c:585: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 585:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 132              		.loc 1 585 153 view .LVU14
 133 0020 4155     		push	r13	#
 134              	# sieve_extend.c:590:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 135              		.loc 1 590 133 view .LVU15
 136 0022 4129D0   		sub	r8d, edx	# tmp335, tmp334
 137              	# sieve_extend.c:590:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 138              		.loc 1 590 167 view .LVU16
 139 0025 41F7D3   		not	r11d	# tmp342
 140              	# sieve_extend.c:585: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 585:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 141              		.loc 1 585 153 view .LVU17
 142 0028 4154     		push	r12	#
 143              		.cfi_offset 15, -24
GAS LISTING /tmp/ccjg94QQ.s 			page 14


 144              		.cfi_offset 14, -32
 145              		.cfi_offset 13, -40
 146              		.cfi_offset 12, -48
 147              	# sieve_extend.c:590:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 148              		.loc 1 590 167 view .LVU18
 149 002a 49C7C4FF 		mov	r12, -1	# tmp345,
 149      FFFFFF
 150 0031 C442A3F7 		shrx	r13, r12, r11	# tmp344, tmp345, tmp342
 150      EC
 151              	# sieve_extend.c:585: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 585:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 152              		.loc 1 585 153 view .LVU19
 153 0036 53       		push	rbx	#
 154              		.cfi_offset 3, -56
 155 0037 4889CB   		mov	rbx, rcx	# destination_stop, tmp577
 156              	# sieve_extend.c:590:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 157              		.loc 1 590 58 view .LVU20
 158 003a 488B0CC7 		mov	rcx, QWORD PTR [rdi+rax*8]	# *_5, *_5
 159              	.LVL3:
 160              	# sieve_extend.c:590:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 161              		.loc 1 590 112 view .LVU21
 162 003e C462B9F7 		shlx	r8, QWORD PTR 8[rdi+rax*8], r8	# tmp337, *_11, tmp335
 162      44C708
 163              	# sieve_extend.c:590:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 164              		.loc 1 590 58 view .LVU22
 165 0045 C462CBF7 		shrx	r10, rcx, rsi	# tmp339, *_5, source_start
 165      D1
 166              	# sieve_extend.c:590:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 167              		.loc 1 590 85 view .LVU23
 168 004a 4D09D0   		or	r8, r10	# tmp341, tmp339
 169              	# sieve_extend.c:585: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 585:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 170              		.loc 1 585 153 view .LVU24
 171 004d 4883E4E0 		and	rsp, -32	#,
 172              	# sieve_extend.c:590:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 173              		.loc 1 590 24 view .LVU25
 174 0051 4D21E8   		and	r8, r13	# pattern, tmp344
 175              	.LVL4:
 591:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 176              		.loc 1 591 5 is_stmt 1 view .LVU26
 177              	.LBB303:
 178              		.loc 1 591 10 view .LVU27
 179              		.loc 1 591 54 view .LVU28
 180              	# sieve_extend.c:591:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 181              		.loc 1 591 5 is_stmt 0 view .LVU29
 182 0054 4983F940 		cmp	r9, 64	# size,
 183 0058 0F87C200 		ja	.L2	#,
 183      0000
 184 005e 4D89CE   		mov	r14, r9	# pattern_size, size
 185              	.LVL5:
 186              	.L3:
 592:sieve_extend.c ****         pattern |= (pattern << pattern_size);
 187              		.loc 1 592 9 is_stmt 1 discriminator 3 view .LVU30
 188              	# sieve_extend.c:591:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 591:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 189              		.loc 1 591 103 is_stmt 0 discriminator 3 view .LVU31
 190 0061 4B8D0436 		lea	rax, [r14+r14]	# pattern_size,
GAS LISTING /tmp/ccjg94QQ.s 			page 15


 191              	# sieve_extend.c:592:         pattern |= (pattern << pattern_size);
 192              		.loc 1 592 29 discriminator 3 view .LVU32
 193 0065 C44289F7 		shlx	r15, r8, r14	# _23, pattern, pattern_size
 193      F8
 194              	# sieve_extend.c:592:         pattern |= (pattern << pattern_size);
 195              		.loc 1 592 17 discriminator 3 view .LVU33
 196 006a 4D09F8   		or	r8, r15	# pattern, _23
 197              	.LVL6:
 591:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 198              		.loc 1 591 90 is_stmt 1 discriminator 3 view .LVU34
 591:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 199              		.loc 1 591 54 discriminator 3 view .LVU35
 200              	# sieve_extend.c:591:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 591:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 201              		.loc 1 591 5 is_stmt 0 discriminator 3 view .LVU36
 202 006d 4883F840 		cmp	rax, 64	# pattern_size,
 203 0071 0F87A900 		ja	.L2	#,
 203      0000
 204              		.loc 1 592 9 is_stmt 1 view .LVU37
 205              	# sieve_extend.c:591:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 591:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 206              		.loc 1 591 103 is_stmt 0 view .LVU38
 207 0077 4A8D0CB5 		lea	rcx, 0[0+r14*4]	# pattern_size,
 207      00000000 
 208              	# sieve_extend.c:592:         pattern |= (pattern << pattern_size);
 209              		.loc 1 592 29 view .LVU39
 210 007f C4C2F9F7 		shlx	rdx, r8, rax	# _23, pattern, pattern_size
 210      D0
 211              	# sieve_extend.c:592:         pattern |= (pattern << pattern_size);
 212              		.loc 1 592 17 view .LVU40
 213 0084 4909D0   		or	r8, rdx	# pattern, _23
 214              	.LVL7:
 591:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 215              		.loc 1 591 90 is_stmt 1 view .LVU41
 591:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 216              		.loc 1 591 54 view .LVU42
 217              	# sieve_extend.c:591:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 591:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 218              		.loc 1 591 5 is_stmt 0 view .LVU43
 219 0087 4883F940 		cmp	rcx, 64	# pattern_size,
 220 008b 0F878F00 		ja	.L2	#,
 220      0000
 221              		.loc 1 592 9 is_stmt 1 view .LVU44
 222              	# sieve_extend.c:591:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 591:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 223              		.loc 1 591 103 is_stmt 0 view .LVU45
 224 0091 4E8D1CF5 		lea	r11, 0[0+r14*8]	# pattern_size,
 224      00000000 
 225              	# sieve_extend.c:592:         pattern |= (pattern << pattern_size);
 226              		.loc 1 592 29 view .LVU46
 227 0099 C442F1F7 		shlx	r10, r8, rcx	# _23, pattern, pattern_size
 227      D0
 228              	# sieve_extend.c:592:         pattern |= (pattern << pattern_size);
 229              		.loc 1 592 17 view .LVU47
 230 009e 4D09D0   		or	r8, r10	# pattern, _23
 231              	.LVL8:
 591:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
GAS LISTING /tmp/ccjg94QQ.s 			page 16


 232              		.loc 1 591 90 is_stmt 1 view .LVU48
 591:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 233              		.loc 1 591 54 view .LVU49
 234              	# sieve_extend.c:591:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 591:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 235              		.loc 1 591 5 is_stmt 0 view .LVU50
 236 00a1 4983FB40 		cmp	r11, 64	# pattern_size,
 237 00a5 7779     		ja	.L2	#,
 238              		.loc 1 592 9 is_stmt 1 view .LVU51
 239              	# sieve_extend.c:591:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 591:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 240              		.loc 1 591 103 is_stmt 0 view .LVU52
 241 00a7 4D89F5   		mov	r13, r14	# pattern_size, pattern_size
 242              	# sieve_extend.c:592:         pattern |= (pattern << pattern_size);
 243              		.loc 1 592 29 view .LVU53
 244 00aa C442A1F7 		shlx	r12, r8, r11	# _23, pattern, pattern_size
 244      E0
 245              	# sieve_extend.c:591:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 591:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 246              		.loc 1 591 103 view .LVU54
 247 00af 49C1E504 		sal	r13, 4	# pattern_size,
 248              	# sieve_extend.c:592:         pattern |= (pattern << pattern_size);
 249              		.loc 1 592 17 view .LVU55
 250 00b3 4D09E0   		or	r8, r12	# pattern, _23
 251              	.LVL9:
 591:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 252              		.loc 1 591 90 is_stmt 1 view .LVU56
 591:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 253              		.loc 1 591 54 view .LVU57
 254              	# sieve_extend.c:591:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 591:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 255              		.loc 1 591 5 is_stmt 0 view .LVU58
 256 00b6 4983FD40 		cmp	r13, 64	# pattern_size,
 257 00ba 7764     		ja	.L2	#,
 258              		.loc 1 592 9 is_stmt 1 view .LVU59
 259              	# sieve_extend.c:591:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 591:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 260              		.loc 1 591 103 is_stmt 0 view .LVU60
 261 00bc 4C89F0   		mov	rax, r14	# pattern_size, pattern_size
 262              	# sieve_extend.c:592:         pattern |= (pattern << pattern_size);
 263              		.loc 1 592 29 view .LVU61
 264 00bf C44291F7 		shlx	r15, r8, r13	# _23, pattern, pattern_size
 264      F8
 265              	# sieve_extend.c:591:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 591:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 266              		.loc 1 591 103 view .LVU62
 267 00c4 48C1E005 		sal	rax, 5	# pattern_size,
 268              	# sieve_extend.c:592:         pattern |= (pattern << pattern_size);
 269              		.loc 1 592 17 view .LVU63
 270 00c8 4D09F8   		or	r8, r15	# pattern, _23
 271              	.LVL10:
 591:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 272              		.loc 1 591 90 is_stmt 1 view .LVU64
 591:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 273              		.loc 1 591 54 view .LVU65
 274              	# sieve_extend.c:591:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 591:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
GAS LISTING /tmp/ccjg94QQ.s 			page 17


 275              		.loc 1 591 5 is_stmt 0 view .LVU66
 276 00cb 4883F840 		cmp	rax, 64	# pattern_size,
 277 00cf 774F     		ja	.L2	#,
 278              		.loc 1 592 9 is_stmt 1 view .LVU67
 279              	# sieve_extend.c:591:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 591:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 280              		.loc 1 591 103 is_stmt 0 view .LVU68
 281 00d1 4C89F1   		mov	rcx, r14	# pattern_size, pattern_size
 282              	# sieve_extend.c:592:         pattern |= (pattern << pattern_size);
 283              		.loc 1 592 29 view .LVU69
 284 00d4 C4C2F9F7 		shlx	rdx, r8, rax	# _23, pattern, pattern_size
 284      D0
 285              	# sieve_extend.c:591:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 591:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 286              		.loc 1 591 103 view .LVU70
 287 00d9 48C1E106 		sal	rcx, 6	# pattern_size,
 288              	# sieve_extend.c:592:         pattern |= (pattern << pattern_size);
 289              		.loc 1 592 17 view .LVU71
 290 00dd 4909D0   		or	r8, rdx	# pattern, _23
 291              	.LVL11:
 591:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 292              		.loc 1 591 90 is_stmt 1 view .LVU72
 591:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 293              		.loc 1 591 54 view .LVU73
 294              	# sieve_extend.c:591:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 591:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 295              		.loc 1 591 5 is_stmt 0 view .LVU74
 296 00e0 4883F940 		cmp	rcx, 64	# pattern_size,
 297 00e4 773A     		ja	.L2	#,
 298              		.loc 1 592 9 is_stmt 1 view .LVU75
 299              	# sieve_extend.c:591:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 591:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 300              		.loc 1 591 103 is_stmt 0 view .LVU76
 301 00e6 4D89F3   		mov	r11, r14	# pattern_size, pattern_size
 302              	# sieve_extend.c:592:         pattern |= (pattern << pattern_size);
 303              		.loc 1 592 29 view .LVU77
 304 00e9 C442F1F7 		shlx	r10, r8, rcx	# _23, pattern, pattern_size
 304      D0
 305              	# sieve_extend.c:591:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 591:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 306              		.loc 1 591 103 view .LVU78
 307 00ee 49C1E307 		sal	r11, 7	# pattern_size,
 308              	# sieve_extend.c:592:         pattern |= (pattern << pattern_size);
 309              		.loc 1 592 17 view .LVU79
 310 00f2 4D09D0   		or	r8, r10	# pattern, _23
 311              	.LVL12:
 591:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 312              		.loc 1 591 90 is_stmt 1 view .LVU80
 591:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 313              		.loc 1 591 54 view .LVU81
 314              	# sieve_extend.c:591:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 591:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 315              		.loc 1 591 5 is_stmt 0 view .LVU82
 316 00f5 4983FB40 		cmp	r11, 64	# pattern_size,
 317 00f9 7725     		ja	.L2	#,
 318              		.loc 1 592 9 is_stmt 1 view .LVU83
 319              	# sieve_extend.c:591:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
GAS LISTING /tmp/ccjg94QQ.s 			page 18


 591:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 320              		.loc 1 591 103 is_stmt 0 view .LVU84
 321 00fb 49C1E608 		sal	r14, 8	# pattern_size,
 322              	# sieve_extend.c:592:         pattern |= (pattern << pattern_size);
 323              		.loc 1 592 29 view .LVU85
 324 00ff C442A1F7 		shlx	r12, r8, r11	# _23, pattern, pattern_size
 324      E0
 325              	# sieve_extend.c:592:         pattern |= (pattern << pattern_size);
 326              		.loc 1 592 17 view .LVU86
 327 0104 4D09E0   		or	r8, r12	# pattern, _23
 328              	.LVL13:
 591:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 329              		.loc 1 591 90 is_stmt 1 view .LVU87
 591:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 330              		.loc 1 591 54 view .LVU88
 331              	# sieve_extend.c:591:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 591:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 332              		.loc 1 591 5 is_stmt 0 view .LVU89
 333 0107 4983FE40 		cmp	r14, 64	# pattern_size,
 334 010b 0F8650FF 		jbe	.L3	#,
 334      FFFF
 335              	.LVL14:
 336 0111 66662E0F 		.p2align 4
 336      1F840000 
 336      0000000F 
 336      1F4000
 337              		.p2align 3
 338              	.L2:
 591:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 339              		.loc 1 591 5 view .LVU90
 340              	.LBE303:
 593:sieve_extend.c **** 
 594:sieve_extend.c ****     const counter_t destination_start = source_start + size;
 341              		.loc 1 594 5 is_stmt 1 view .LVU91
 342              	# sieve_extend.c:594:     const counter_t destination_start = source_start + size;
 343              		.loc 1 594 21 is_stmt 0 view .LVU92
 344 0120 4A8D0C0E 		lea	rcx, [rsi+r9]	# destination_start,
 345              	.LVL15:
 595:sieve_extend.c ****     counter_t destination_start_word = wordindex(destination_start);
 346              		.loc 1 595 5 is_stmt 1 view .LVU93
 347              	# sieve_extend.c:596:     counter_t destination_stop_word = wordindex(destination_stop);
 596:sieve_extend.c ****     counter_t destination_stop_word = wordindex(destination_stop);
 348              		.loc 1 596 15 is_stmt 0 view .LVU94
 349 0124 4989DC   		mov	r12, rbx	# destination_stop_word, destination_stop
 350              	# sieve_extend.c:595:     counter_t destination_start_word = wordindex(destination_start);
 595:sieve_extend.c ****     counter_t destination_start_word = wordindex(destination_start);
 351              		.loc 1 595 15 view .LVU95
 352 0127 4989CB   		mov	r11, rcx	# destination_start_word, destination_start
 353 012a F7D3     		not	ebx	# tmp348
 354              	.LVL16:
 595:sieve_extend.c ****     counter_t destination_start_word = wordindex(destination_start);
 355              		.loc 1 595 15 view .LVU96
 356 012c 49C1EB06 		shr	r11, 6	# destination_start_word,
 357              	.LVL17:
 358              		.loc 1 596 5 is_stmt 1 view .LVU97
 359 0130 49C7C5FF 		mov	r13, -1	# tmp350,
 359      FFFFFF
GAS LISTING /tmp/ccjg94QQ.s 			page 19


 360              	# sieve_extend.c:596:     counter_t destination_stop_word = wordindex(destination_stop);
 361              		.loc 1 596 15 is_stmt 0 view .LVU98
 362 0137 49C1EC06 		shr	r12, 6	# destination_stop_word,
 363              	.LVL18:
 597:sieve_extend.c ****     if (destination_start_word >= destination_stop_word) {
 364              		.loc 1 597 5 is_stmt 1 view .LVU99
 365 013b 4A8D34DD 		lea	rsi, 0[0+r11*8]	# _116,
 365      00000000 
 366              	.LVL19:
 367              		.loc 1 597 5 is_stmt 0 view .LVU100
 368 0143 4C8D3437 		lea	r14, [rdi+rsi]	# _117,
 369              	# sieve_extend.c:597:     if (destination_start_word >= destination_stop_word) {
 370              		.loc 1 597 8 view .LVU101
 371 0147 4D39E3   		cmp	r11, r12	# destination_start_word, destination_stop_word
 372 014a C4C2F1F7 		shlx	rax, r8, rcx	# _120, pattern, destination_start
 372      C0
 373 014f 4D8B3E   		mov	r15, QWORD PTR [r14]	# pretmp_118, *_117
 374 0152 C4C2E3F7 		shrx	rbx, r13, rbx	# _124, tmp350, tmp348
 374      DD
 375 0157 0F833305 		jnb	.L49	#,
 375      0000
 598:sieve_extend.c ****         bitarray[destination_start_word] |= (pattern << bitindex(destination_start)) & chopmask(des
 599:sieve_extend.c ****         return;
 600:sieve_extend.c ****     }
 601:sieve_extend.c **** 
 602:sieve_extend.c ****     bitarray[destination_start_word] |= (pattern << bitindex(destination_start));
 376              		.loc 1 602 5 is_stmt 1 view .LVU102
 377              	# sieve_extend.c:602:     bitarray[destination_start_word] |= (pattern << bitindex(destination_star
 378              		.loc 1 602 38 is_stmt 0 view .LVU103
 379 015d 4C09F8   		or	rax, r15	# tmp353, pretmp_118
 380              	# sieve_extend.c:605:     register const bitshift_t pattern_shift = WORD_SIZE_counter % size;
 603:sieve_extend.c **** 
 604:sieve_extend.c ****     // TODO: refactor according to smallstep
 605:sieve_extend.c ****     register const bitshift_t pattern_shift = WORD_SIZE_counter % size;
 381              		.loc 1 605 31 view .LVU104
 382 0160 31D2     		xor	edx, edx	# tmp355
 383              	# sieve_extend.c:602:     bitarray[destination_start_word] |= (pattern << bitindex(destination_star
 602:sieve_extend.c **** 
 384              		.loc 1 602 38 view .LVU105
 385 0162 498906   		mov	QWORD PTR [r14], rax	# *_117, tmp353
 386              		.loc 1 605 5 is_stmt 1 view .LVU106
 387              	# sieve_extend.c:605:     register const bitshift_t pattern_shift = WORD_SIZE_counter % size;
 388              		.loc 1 605 31 is_stmt 0 view .LVU107
 389 0165 41BE4000 		mov	r14d, 64	# tmp354,
 389      0000
 390 016b 4C89F0   		mov	rax, r14	# tmp356, tmp354
 391 016e 488D7437 		lea	rsi, 8[rdi+rsi]	# vectp.136,
 391      08
 392 0173 49F7F1   		div	r9	# size
 393              	.LVL20:
 606:sieve_extend.c ****     register const bitshift_t pattern_size = WORD_SIZE_bitshift - pattern_shift;
 394              		.loc 1 606 5 is_stmt 1 view .LVU108
 607:sieve_extend.c ****     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destination_start)) & WORDMASK;
 395              		.loc 1 607 5 view .LVU109
 608:sieve_extend.c ****     register counter_t loop_range = destination_stop_word - destination_start_word;
 396              		.loc 1 608 5 view .LVU110
 397 0176 48C1EE03 		shr	rsi, 3	# tmp363,
GAS LISTING /tmp/ccjg94QQ.s 			page 20


 398              	# sieve_extend.c:608:     register counter_t loop_range = destination_stop_word - destination_start
 399              		.loc 1 608 24 is_stmt 0 view .LVU111
 400 017a 4D89E1   		mov	r9, r12	# loop_range, destination_stop_word
 401              	.LVL21:
 402              	# sieve_extend.c:607:     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destinati
 607:sieve_extend.c ****     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destination_start)) & WORDMASK;
 403              		.loc 1 607 89 view .LVU112
 404 017d 48F7D9   		neg	rcx	# tmp359
 405              	.LVL22:
 406              	# sieve_extend.c:608:     register counter_t loop_range = destination_stop_word - destination_start
 407              		.loc 1 608 24 view .LVU113
 408 0180 4D29D9   		sub	r9, r11	# loop_range, destination_start_word
 409              	.LVL23:
 609:sieve_extend.c ****     destination_start_word++;
 410              		.loc 1 609 5 is_stmt 1 view .LVU114
 411              	# sieve_extend.c:606:     register const bitshift_t pattern_size = WORD_SIZE_bitshift - pattern_shi
 606:sieve_extend.c ****     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destination_start)) & WORDMASK;
 412              		.loc 1 606 31 is_stmt 0 view .LVU115
 413 0183 4C89F0   		mov	rax, r14	# tmp354, tmp354
 414 0186 48F7DE   		neg	rsi	# tmp364
 415              	# sieve_extend.c:607:     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destinati
 607:sieve_extend.c ****     register counter_t loop_range = destination_stop_word - destination_start_word;
 416              		.loc 1 607 25 view .LVU116
 417 0189 83E13F   		and	ecx, 63	# shift,
 418              	.LVL24:
 607:sieve_extend.c ****     register counter_t loop_range = destination_stop_word - destination_start_word;
 419              		.loc 1 607 25 view .LVU117
 420 018c 83E603   		and	esi, 3	# prolog_loop_niters.137,
 421              	# sieve_extend.c:609:     destination_start_word++;
 422              		.loc 1 609 27 view .LVU118
 423 018f 4D8D5301 		lea	r10, 1[r11]	# destination_start_word,
 424              	.LVL25:
 610:sieve_extend.c ****     
 611:sieve_extend.c ****     #pragma unroll
 612:sieve_extend.c ****     #pragma ivdep
 613:sieve_extend.c ****     for (counter_t i=0; i<=loop_range; ++i ) {
 425              		.loc 1 613 5 is_stmt 1 view .LVU119
 426              	.LBB304:
 427              		.loc 1 613 10 view .LVU120
 428              		.loc 1 613 25 view .LVU121
 429 0193 4D8D6901 		lea	r13, 1[r9]	# niters.135,
 430 0197 894C24F4 		mov	DWORD PTR -12[rsp], ecx	# %sfp, shift
 431 019b 895424F8 		mov	DWORD PTR -8[rsp], edx	# %sfp, tmp355
 432              	.LBE304:
 433              	# sieve_extend.c:606:     register const bitshift_t pattern_size = WORD_SIZE_bitshift - pattern_shi
 606:sieve_extend.c ****     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destination_start)) & WORDMASK;
 434              		.loc 1 606 31 is_stmt 0 view .LVU122
 435 019f 4829D0   		sub	rax, rdx	# tmp354, tmp355
 436              	.LVL26:
 606:sieve_extend.c ****     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destination_start)) & WORDMASK;
 437              		.loc 1 606 31 view .LVU123
 438 01a2 894424FC 		mov	DWORD PTR -4[rsp], eax	# %sfp, pattern_size
 439 01a6 4983F90A 		cmp	r9, 10	# loop_range,
 440 01aa 0F860505 		jbe	.L11	#,
 440      0000
 441 01b0 4885F6   		test	rsi, rsi	# prolog_loop_niters.137
 442 01b3 0F84F404 		je	.L12	#,
GAS LISTING /tmp/ccjg94QQ.s 			page 21


 442      0000
 443              	.LBB305:
 614:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 444              		.loc 1 614 9 is_stmt 1 view .LVU124
 445              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 446              		.loc 1 614 72 is_stmt 0 view .LVU125
 447 01b9 4189C7   		mov	r15d, eax	# tmp365, pattern_size
 448 01bc 4129CF   		sub	r15d, ecx	# tmp365, shift
 449              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 450              		.loc 1 614 55 view .LVU126
 451 01bf C44281F7 		shlx	r14, r8, r15	# tmp366, pattern, tmp365
 451      F0
 452              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 453              		.loc 1 614 127 view .LVU127
 454 01c4 C442F3F7 		shrx	r15, r8, rcx	# tmp367, pattern, shift
 454      F8
 455              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 456              		.loc 1 614 116 view .LVU128
 457 01c9 4D09FE   		or	r14, r15	# tmp368, tmp367
 458 01cc 4E8934D7 		mov	QWORD PTR [rdi+r10*8], r14	# *_317, tmp368
 613:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 459              		.loc 1 613 40 is_stmt 1 view .LVU129
 460              	.LVL27:
 613:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 461              		.loc 1 613 25 view .LVU130
 462 01d0 4883FE01 		cmp	rsi, 1	# prolog_loop_niters.137,
 463              	# sieve_extend.c:613:     for (counter_t i=0; i<=loop_range; ++i ) {
 613:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 464              		.loc 1 613 40 is_stmt 0 view .LVU131
 465 01d4 41BE0100 		mov	r14d, 1	# i,
 465      0000
 466 01da 7452     		je	.L7	#,
 467              		.loc 1 614 9 is_stmt 1 view .LVU132
 468              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 469              		.loc 1 614 81 is_stmt 0 view .LVU133
 470 01dc 448D3411 		lea	r14d, [rcx+rdx]	# tmp369,
 471              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 472              		.loc 1 614 72 view .LVU134
 473 01e0 4189C7   		mov	r15d, eax	# tmp371, pattern_size
 474              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 475              		.loc 1 614 99 view .LVU135
 476 01e3 4183E63F 		and	r14d, 63	# _328,
 477              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 478              		.loc 1 614 72 view .LVU136
 479 01e7 4529F7   		sub	r15d, r14d	# tmp371, _328
 480              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 481              		.loc 1 614 127 view .LVU137
 482 01ea C4428BF7 		shrx	r14, r8, r14	# tmp373, pattern, _328
 482      F0
 483              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 484              		.loc 1 614 55 view .LVU138
 485 01ef C44281F7 		shlx	r15, r8, r15	# tmp372, pattern, tmp371
 485      F8
 486              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 487              		.loc 1 614 116 view .LVU139
 488 01f4 4D09FE   		or	r14, r15	# tmp374, tmp372
 489 01f7 4E8974DF 		mov	QWORD PTR 16[rdi+r11*8], r14	# *_334, tmp374
GAS LISTING /tmp/ccjg94QQ.s 			page 22


 489      10
 613:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 490              		.loc 1 613 40 is_stmt 1 view .LVU140
 491              	.LVL28:
 613:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 492              		.loc 1 613 25 view .LVU141
 493 01fc 4883FE03 		cmp	rsi, 3	# prolog_loop_niters.137,
 494              	# sieve_extend.c:613:     for (counter_t i=0; i<=loop_range; ++i ) {
 613:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 495              		.loc 1 613 40 is_stmt 0 view .LVU142
 496 0200 41BE0200 		mov	r14d, 2	# i,
 496      0000
 497 0206 7526     		jne	.L7	#,
 498              		.loc 1 614 9 is_stmt 1 view .LVU143
 499              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 500              		.loc 1 614 81 is_stmt 0 view .LVU144
 501 0208 448D3451 		lea	r14d, [rcx+rdx*2]	# tmp376,
 502              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 503              		.loc 1 614 72 view .LVU145
 504 020c 4189C7   		mov	r15d, eax	# tmp378, pattern_size
 505              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 506              		.loc 1 614 99 view .LVU146
 507 020f 4183E63F 		and	r14d, 63	# _104,
 508              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 509              		.loc 1 614 72 view .LVU147
 510 0213 4529F7   		sub	r15d, r14d	# tmp378, _104
 511              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 512              		.loc 1 614 127 view .LVU148
 513 0216 C4428BF7 		shrx	r14, r8, r14	# tmp380, pattern, _104
 513      F0
 514              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 515              		.loc 1 614 55 view .LVU149
 516 021b C44281F7 		shlx	r15, r8, r15	# tmp379, pattern, tmp378
 516      F8
 517              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 518              		.loc 1 614 116 view .LVU150
 519 0220 4D09FE   		or	r14, r15	# tmp381, tmp379
 520 0223 4E8974DF 		mov	QWORD PTR 24[rdi+r11*8], r14	# *_94, tmp381
 520      18
 613:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 521              		.loc 1 613 40 is_stmt 1 view .LVU151
 522              	.LVL29:
 613:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 523              		.loc 1 613 25 view .LVU152
 524              	# sieve_extend.c:613:     for (counter_t i=0; i<=loop_range; ++i ) {
 613:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 525              		.loc 1 613 40 is_stmt 0 view .LVU153
 526 0228 41BE0300 		mov	r14d, 3	# i,
 526      0000
 527              	.LVL30:
 528              	.L7:
 613:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 529              		.loc 1 613 40 view .LVU154
 530 022e 4929F5   		sub	r13, rsi	# niters.138, prolog_loop_niters.137
 531 0231 4C01D6   		add	rsi, r10	# tmp388, destination_start_word
 532 0234 4D89EB   		mov	r11, r13	# bnd.139, niters.138
 533 0237 C4C1F96E 		vmovq	xmm3, r14	# i, i
GAS LISTING /tmp/ccjg94QQ.s 			page 23


 533      DE
 534 023c 49C1EB03 		shr	r11, 3	# bnd.139,
 535 0240 488D34F7 		lea	rsi, [rdi+rsi*8]	# ivtmp.157,
 536 0244 49C1E306 		sal	r11, 6	# tmp391,
 537 0248 C4627D59 		vpbroadcastq	ymm9, xmm3	# tmp382, i
 537      CB
 538 024d C4C1F96E 		vmovq	xmm4, r8	# pattern, pattern
 538      E0
 539 0252 4D8D3C33 		lea	r15, [r11+rsi]	# _344,
 540 0256 4183E340 		and	r11d, 64	# tmp391,
 541 025a C535D435 		vpaddq	ymm14, ymm9, YMMWORD PTR .LC0[rip]	# vect_vec_iv_.142, tmp382,
 541      00000000 
 542 0262 C4E27D58 		vpbroadcastd	ymm6, DWORD PTR -8[rsp]	# vect_cst__146, %sfp
 542      7424F8
 543 0269 C4E27D59 		vpbroadcastq	ymm2, xmm4	# vect_cst__156, pattern
 543      D4
 544 026e C4E27D58 		vpbroadcastd	ymm5, DWORD PTR -12[rsp]	# vect_cst__148, %sfp
 544      6C24F4
 545 0275 C4627D58 		vpbroadcastd	ymm12, DWORD PTR -4[rsp]	# vect_cst__152, %sfp
 545      6424FC
 546 027c C57D6F05 		vmovdqa	ymm8, YMMWORD PTR .LC1[rip]	# tmp496,
 546      00000000 
 547 0284 C5FD6F3D 		vmovdqa	ymm7, YMMWORD PTR .LC2[rip]	# tmp497,
 547      00000000 
 548 028c C57D6F2D 		vmovdqa	ymm13, YMMWORD PTR .LC3[rip]	# tmp498,
 548      00000000 
 549 0294 0F849600 		je	.L9	#,
 549      0000
 550              	.LVL31:
 613:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 551              		.loc 1 613 40 view .LVU155
 552 029a C57D7FF1 		vmovdqa	ymm1, ymm14	# vect_vec_iv_.142, vect_vec_iv_.142
 553 029e 4883C640 		add	rsi, 64	# ivtmp.157,
 554              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 555              		.loc 1 614 81 view .LVU156
 556 02a2 C575D4D7 		vpaddq	ymm10, ymm1, ymm7	# vect_vec_iv_.142, vect_vec_iv_.142, tmp497
 557 02a6 C4410DD4 		vpaddq	ymm14, ymm14, ymm8	# vect_vec_iv_.142, vect_vec_iv_.142, tmp496
 557      F0
 558              		.loc 1 614 9 is_stmt 1 view .LVU157
 559              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 560              		.loc 1 614 81 is_stmt 0 view .LVU158
 561 02ab C4C37546 		vperm2i128	ymm0, ymm1, ymm10, 32	# tmp538, vect_vec_iv_.142, vect_vec_iv_.142,
 561      C220
 562 02b1 C4437546 		vperm2i128	ymm11, ymm1, ymm10, 49	# tmp539, vect_vec_iv_.142, vect_vec_iv_.142,
 562      DA31
 563 02b7 C57D70F8 		vpshufd	ymm15, ymm0, 216	# tmp540, tmp538,
 563      D8
 564 02bc C4C17D70 		vpshufd	ymm3, ymm11, 216	# tmp541, tmp539,
 564      DBD8
 565 02c2 C5056CCB 		vpunpcklqdq	ymm9, ymm15, ymm3	# tmp542, tmp540, tmp541
 566 02c6 C4C24D40 		vpmulld	ymm4, ymm6, ymm9	# vect__45.144, vect_cst__146, tmp542
 566      E1
 567              	.LVL32:
 568              		.loc 1 614 81 view .LVU159
 569 02cb C5DDFECD 		vpaddd	ymm1, ymm4, ymm5	# vect__47.145, vect__45.144, vect_cst__148
 570              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 571              		.loc 1 614 99 view .LVU160
GAS LISTING /tmp/ccjg94QQ.s 			page 24


 572 02cf C4C175DB 		vpand	ymm0, ymm1, ymm13	# vect__48.146, vect__47.145, tmp498
 572      C5
 573              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 574              		.loc 1 614 72 view .LVU161
 575 02d4 C51DFAF8 		vpsubd	ymm15, ymm12, ymm0	# vect__49.147, vect_cst__152, vect__48.146
 576              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 577              		.loc 1 614 116 view .LVU162
 578 02d8 C4627D35 		vpmovzxdq	ymm11, xmm0	#, vect__48.146
 578      D8
 579 02dd C4427D35 		vpmovzxdq	ymm10, xmm15	#, vect__49.147
 579      D7
 580 02e2 C442ED45 		vpsrlvq	ymm9, ymm2, ymm11	# vect_patt_136.151, vect_cst__156, vect_patt_137.150
 580      CB
 581 02e7 C4C2ED47 		vpsllvq	ymm3, ymm2, ymm10	# vect_patt_138.149, vect_cst__156, vect_patt_139.148
 581      DA
 582 02ec C4637D39 		vextracti128	xmm1, ymm15, 0x1	# tmp554, vect__49.147
 582      F901
 583 02f2 C4C165EB 		vpor	ymm4, ymm3, ymm9	# vect__55.152, vect_patt_138.149, vect_patt_136.151
 583      E1
 584 02f7 C4E37D39 		vextracti128	xmm0, ymm0, 0x1	# tmp557, vect__48.146
 584      C001
 585 02fd C4627D35 		vpmovzxdq	ymm15, xmm1	# vect_patt_139.148, tmp554
 585      F9
 586 0302 C4E27D35 		vpmovzxdq	ymm3, xmm0	# vect_patt_137.150, tmp557
 586      D8
 587 0307 C442ED47 		vpsllvq	ymm10, ymm2, ymm15	# vect_patt_138.149, vect_cst__156, vect_patt_139.148
 587      D7
 588 030c C462ED45 		vpsrlvq	ymm11, ymm2, ymm3	# vect_patt_136.151, vect_cst__156, vect_patt_137.150
 588      DB
 589              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 590              		.loc 1 614 44 view .LVU163
 591 0311 C5FD7F66 		vmovdqa	YMMWORD PTR -64[rsi], ymm4	# MEM[base: _341, offset: 0B], vect__55.152
 591      C0
 592              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 593              		.loc 1 614 116 view .LVU164
 594 0316 C4412DEB 		vpor	ymm9, ymm10, ymm11	# vect__55.152, vect_patt_138.149, vect_patt_136.151
 594      CB
 595              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 596              		.loc 1 614 44 view .LVU165
 597 031b C57D7F4E 		vmovdqa	YMMWORD PTR -32[rsi], ymm9	# MEM[base: _341, offset: 32B], vect__55.152
 597      E0
 613:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 598              		.loc 1 613 40 is_stmt 1 view .LVU166
 613:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 599              		.loc 1 613 25 view .LVU167
 600 0320 4C39FE   		cmp	rsi, r15	# ivtmp.157, _344
 601 0323 0F841201 		je	.L37	#,
 601      0000
 602 0329 0F1F8000 		.p2align 4
 602      000000
 603              		.p2align 3
 604              	.L9:
 605              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 606              		.loc 1 614 81 is_stmt 0 discriminator 3 view .LVU168
 607 0330 C58DD4CF 		vpaddq	ymm1, ymm14, ymm7	# vect_vec_iv_.142, vect_vec_iv_.142, tmp497
 608 0334 C4C10DD4 		vpaddq	ymm4, ymm14, ymm8	# vect_vec_iv_.142, vect_vec_iv_.142, tmp496
 608      E0
GAS LISTING /tmp/ccjg94QQ.s 			page 25


 609              		.loc 1 614 9 is_stmt 1 discriminator 3 view .LVU169
 610              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 611              		.loc 1 614 81 is_stmt 0 discriminator 3 view .LVU170
 612 0339 C4630D46 		vperm2i128	ymm15, ymm14, ymm1, 32	# tmp398, vect_vec_iv_.142, vect_vec_iv_.142,
 612      F920
 613 033f C4630D46 		vperm2i128	ymm14, ymm14, ymm1, 49	# tmp399, vect_vec_iv_.142, vect_vec_iv_.142,
 613      F131
 614 0345 C4417D70 		vpshufd	ymm10, ymm15, 216	# tmp396, tmp398,
 614      D7D8
 615 034b 4883EE80 		sub	rsi, -128	# ivtmp.157,
 616 034f C4C17D70 		vpshufd	ymm0, ymm14, 216	# tmp397, tmp399,
 616      C6D8
 617 0355 C5AD6CD8 		vpunpcklqdq	ymm3, ymm10, ymm0	# tmp400, tmp396, tmp397
 618 0359 C4624D40 		vpmulld	ymm11, ymm6, ymm3	# vect__45.144, vect_cst__146, tmp400
 618      DB
 619 035e C525FECD 		vpaddd	ymm9, ymm11, ymm5	# vect__47.145, vect__45.144, vect_cst__148
 620              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 621              		.loc 1 614 99 discriminator 3 view .LVU171
 622 0362 C44135DB 		vpand	ymm15, ymm9, ymm13	# vect__48.146, vect__47.145, tmp498
 622      FD
 623              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 624              		.loc 1 614 72 discriminator 3 view .LVU172
 625 0367 C4C11DFA 		vpsubd	ymm1, ymm12, ymm15	# vect__49.147, vect_cst__152, vect__48.146
 625      CF
 626              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 627              		.loc 1 614 116 discriminator 3 view .LVU173
 628 036c C4C27D35 		vpmovzxdq	ymm0, xmm15	#, vect__48.146
 628      C7
 629 0371 C4627D35 		vpmovzxdq	ymm14, xmm1	#, vect__49.147
 629      F1
 630 0376 C4E2ED45 		vpsrlvq	ymm3, ymm2, ymm0	# vect_patt_136.151, vect_cst__156, vect_patt_137.150
 630      D8
 631 037b C442ED47 		vpsllvq	ymm10, ymm2, ymm14	# vect_patt_138.149, vect_cst__156, vect_patt_139.148
 631      D6
 632 0380 C4C37D39 		vextracti128	xmm9, ymm1, 0x1	# tmp412, vect__49.147
 632      C901
 633 0386 C52DEBDB 		vpor	ymm11, ymm10, ymm3	# vect__55.152, vect_patt_138.149, vect_patt_136.151
 634 038a C4437D39 		vextracti128	xmm15, ymm15, 0x1	# tmp415, vect__48.146
 634      FF01
 635 0390 C4C27D35 		vpmovzxdq	ymm1, xmm9	# vect_patt_139.148, tmp412
 635      C9
 636 0395 C4427D35 		vpmovzxdq	ymm10, xmm15	# vect_patt_137.150, tmp415
 636      D7
 637 039a C462ED47 		vpsllvq	ymm14, ymm2, ymm1	# vect_patt_138.149, vect_cst__156, vect_patt_139.148
 637      F1
 638 039f C4C2ED45 		vpsrlvq	ymm0, ymm2, ymm10	# vect_patt_136.151, vect_cst__156, vect_patt_137.150
 638      C2
 639              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 640              		.loc 1 614 44 discriminator 3 view .LVU174
 641 03a4 C57D7F5E 		vmovdqa	YMMWORD PTR -128[rsi], ymm11	# MEM[base: _341, offset: 0B], vect__55.152
 641      80
 642              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 643              		.loc 1 614 81 discriminator 3 view .LVU175
 644 03a9 C55DD4DF 		vpaddq	ymm11, ymm4, ymm7	# vect_vec_iv_.142, vect_vec_iv_.142, tmp497
 645              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 646              		.loc 1 614 116 discriminator 3 view .LVU176
 647 03ad C58DEBD8 		vpor	ymm3, ymm14, ymm0	# vect__55.152, vect_patt_138.149, vect_patt_136.151
GAS LISTING /tmp/ccjg94QQ.s 			page 26


 648              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 649              		.loc 1 614 81 discriminator 3 view .LVU177
 650 03b1 C4435D46 		vperm2i128	ymm9, ymm4, ymm11, 32	# tmp513, vect_vec_iv_.142, vect_vec_iv_.142,
 650      CB20
 651 03b7 C4C17D70 		vpshufd	ymm1, ymm9, 216	# tmp515, tmp513,
 651      C9D8
 652 03bd C4415DD4 		vpaddq	ymm14, ymm4, ymm8	# vect_vec_iv_.142, vect_vec_iv_.142, tmp496
 652      F0
 653              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 654              		.loc 1 614 44 discriminator 3 view .LVU178
 655 03c2 C5FD7F5E 		vmovdqa	YMMWORD PTR -96[rsi], ymm3	# MEM[base: _341, offset: 32B], vect__55.152
 655      A0
 613:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 656              		.loc 1 613 40 is_stmt 1 discriminator 3 view .LVU179
 613:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 657              		.loc 1 613 25 discriminator 3 view .LVU180
 658              		.loc 1 614 9 discriminator 3 view .LVU181
 659              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 660              		.loc 1 614 81 is_stmt 0 discriminator 3 view .LVU182
 661 03c7 C4C35D46 		vperm2i128	ymm4, ymm4, ymm11, 49	# tmp514, vect_vec_iv_.142, vect_vec_iv_.142,
 661      E331
 662 03cd C57D70FC 		vpshufd	ymm15, ymm4, 216	# tmp516, tmp514,
 662      D8
 663 03d2 C441756C 		vpunpcklqdq	ymm10, ymm1, ymm15	# tmp517, tmp515, tmp516
 663      D7
 664 03d7 C4C24D40 		vpmulld	ymm0, ymm6, ymm10	# vect__45.144, vect_cst__146, tmp517
 664      C2
 665 03dc C5FDFEDD 		vpaddd	ymm3, ymm0, ymm5	# vect__47.145, vect__45.144, vect_cst__148
 666              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 667              		.loc 1 614 99 discriminator 3 view .LVU183
 668 03e0 C44165DB 		vpand	ymm9, ymm3, ymm13	# vect__48.146, vect__47.145, tmp498
 668      CD
 669              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 670              		.loc 1 614 72 discriminator 3 view .LVU184
 671 03e5 C4C11DFA 		vpsubd	ymm4, ymm12, ymm9	# vect__49.147, vect_cst__152, vect__48.146
 671      E1
 672              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 673              		.loc 1 614 116 discriminator 3 view .LVU185
 674 03ea C4427D35 		vpmovzxdq	ymm15, xmm9	#, vect__48.146
 674      F9
 675 03ef C4627D35 		vpmovzxdq	ymm11, xmm4	#, vect__49.147
 675      DC
 676 03f4 C442ED45 		vpsrlvq	ymm10, ymm2, ymm15	# vect_patt_136.151, vect_cst__156, vect_patt_137.150
 676      D7
 677 03f9 C4C2ED47 		vpsllvq	ymm1, ymm2, ymm11	# vect_patt_138.149, vect_cst__156, vect_patt_139.148
 677      CB
 678 03fe C4E37D39 		vextracti128	xmm3, ymm4, 0x1	# tmp529, vect__49.147
 678      E301
 679 0404 C4C175EB 		vpor	ymm0, ymm1, ymm10	# vect__55.152, vect_patt_138.149, vect_patt_136.151
 679      C2
 680 0409 C4437D39 		vextracti128	xmm9, ymm9, 0x1	# tmp532, vect__48.146
 680      C901
 681 040f C4E27D35 		vpmovzxdq	ymm4, xmm3	# vect_patt_139.148, tmp529
 681      E3
 682 0414 C4C27D35 		vpmovzxdq	ymm1, xmm9	# vect_patt_137.150, tmp532
 682      C9
 683 0419 C462ED47 		vpsllvq	ymm11, ymm2, ymm4	# vect_patt_138.149, vect_cst__156, vect_patt_139.148
GAS LISTING /tmp/ccjg94QQ.s 			page 27


 683      DC
 684 041e C462ED45 		vpsrlvq	ymm15, ymm2, ymm1	# vect_patt_136.151, vect_cst__156, vect_patt_137.150
 684      F9
 685              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 686              		.loc 1 614 44 discriminator 3 view .LVU186
 687 0423 C5FD7F46 		vmovdqa	YMMWORD PTR -64[rsi], ymm0	# MEM[base: _341, offset: 0B], vect__55.152
 687      C0
 688              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 689              		.loc 1 614 116 discriminator 3 view .LVU187
 690 0428 C44125EB 		vpor	ymm10, ymm11, ymm15	# vect__55.152, vect_patt_138.149, vect_patt_136.151
 690      D7
 691              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 692              		.loc 1 614 44 discriminator 3 view .LVU188
 693 042d C57D7F56 		vmovdqa	YMMWORD PTR -32[rsi], ymm10	# MEM[base: _341, offset: 32B], vect__55.152
 693      E0
 613:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 694              		.loc 1 613 40 is_stmt 1 discriminator 3 view .LVU189
 613:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 695              		.loc 1 613 25 discriminator 3 view .LVU190
 696 0432 4C39FE   		cmp	rsi, r15	# ivtmp.157, _344
 697 0435 0F85F5FE 		jne	.L9	#,
 697      FFFF
 698              	.L37:
 699 043b 4C89EE   		mov	rsi, r13	# niters_vector_mult_vf.140, niters.138
 700 043e 4883E6F8 		and	rsi, -8	# niters_vector_mult_vf.140,
 701 0442 4901F6   		add	r14, rsi	# tmp.141, niters_vector_mult_vf.140
 702 0445 4939F5   		cmp	r13, rsi	# niters.138, niters_vector_mult_vf.140
 703 0448 0F845A02 		je	.L50	#,
 703      0000
 704 044e C5F877   		vzeroupper
 705              	.L6:
 706              	.LVL33:
 707              		.loc 1 614 9 view .LVU191
 708              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 709              		.loc 1 614 81 is_stmt 0 view .LVU192
 710 0451 4189D7   		mov	r15d, edx	# tmp418, tmp355
 711              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 712              		.loc 1 614 72 view .LVU193
 713 0454 4189C5   		mov	r13d, eax	# tmp421, pattern_size
 714              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 715              		.loc 1 614 81 view .LVU194
 716 0457 450FAFFE 		imul	r15d, r14d	# tmp418, tmp.141
 717              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 718              		.loc 1 614 17 view .LVU195
 719 045b 4F8D1C16 		lea	r11, [r14+r10]	# tmp420,
 720              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 721              		.loc 1 614 81 view .LVU196
 722 045f 4101CF   		add	r15d, ecx	# tmp419, shift
 723              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 724              		.loc 1 614 99 view .LVU197
 725 0462 4183E73F 		and	r15d, 63	# _49,
 726              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 727              		.loc 1 614 127 view .LVU198
 728 0466 C4C283F7 		shrx	rsi, r8, r15	# tmp423, pattern, _49
 728      F0
 729              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 730              		.loc 1 614 72 view .LVU199
GAS LISTING /tmp/ccjg94QQ.s 			page 28


 731 046b 4529FD   		sub	r13d, r15d	# tmp421, _49
 732              	# sieve_extend.c:613:     for (counter_t i=0; i<=loop_range; ++i ) {
 613:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 733              		.loc 1 613 40 view .LVU200
 734 046e 4D8D7E01 		lea	r15, 1[r14]	# i,
 735              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 736              		.loc 1 614 55 view .LVU201
 737 0472 C44291F7 		shlx	r13, r8, r13	# tmp422, pattern, tmp421
 737      E8
 738              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 739              		.loc 1 614 116 view .LVU202
 740 0477 4C09EE   		or	rsi, r13	# tmp424, tmp422
 741 047a 4A8934DF 		mov	QWORD PTR [rdi+r11*8], rsi	# *_55, tmp424
 613:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 742              		.loc 1 613 40 is_stmt 1 view .LVU203
 743              	.LVL34:
 613:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 744              		.loc 1 613 25 view .LVU204
 745              	# sieve_extend.c:613:     for (counter_t i=0; i<=loop_range; ++i ) {
 613:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 746              		.loc 1 613 5 is_stmt 0 view .LVU205
 747 047e 4D39CF   		cmp	r15, r9	# i, loop_range
 748 0481 0F87F101 		ja	.L10	#,
 748      0000
 749              		.loc 1 614 9 is_stmt 1 view .LVU206
 750              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 751              		.loc 1 614 81 is_stmt 0 view .LVU207
 752 0487 4189D3   		mov	r11d, edx	# tmp425, tmp355
 753              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 754              		.loc 1 614 72 view .LVU208
 755 048a 4189C5   		mov	r13d, eax	# tmp428, pattern_size
 756              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 757              		.loc 1 614 81 view .LVU209
 758 048d 450FAFDF 		imul	r11d, r15d	# tmp425, i
 759              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 760              		.loc 1 614 17 view .LVU210
 761 0491 4D01D7   		add	r15, r10	# tmp427, destination_start_word
 762              	.LVL35:
 763              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 764              		.loc 1 614 81 view .LVU211
 765 0494 4101CB   		add	r11d, ecx	# tmp426, shift
 766              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 767              		.loc 1 614 99 view .LVU212
 768 0497 4183E33F 		and	r11d, 63	# _83,
 769              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 770              		.loc 1 614 72 view .LVU213
 771 049b 4529DD   		sub	r13d, r11d	# tmp428, _83
 772              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 773              		.loc 1 614 127 view .LVU214
 774 049e C442A3F7 		shrx	r11, r8, r11	# tmp430, pattern, _83
 774      D8
 775              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 776              		.loc 1 614 55 view .LVU215
 777 04a3 C4C291F7 		shlx	rsi, r8, r13	# tmp429, pattern, tmp428
 777      F0
 778              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 779              		.loc 1 614 116 view .LVU216
GAS LISTING /tmp/ccjg94QQ.s 			page 29


 780 04a8 4C09DE   		or	rsi, r11	# tmp431, tmp430
 781 04ab 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_181, tmp431
 613:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 782              		.loc 1 613 40 is_stmt 1 view .LVU217
 783 04af 4D8D7E02 		lea	r15, 2[r14]	# i,
 784              	.LVL36:
 613:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 785              		.loc 1 613 25 view .LVU218
 786              	# sieve_extend.c:613:     for (counter_t i=0; i<=loop_range; ++i ) {
 613:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 787              		.loc 1 613 5 is_stmt 0 view .LVU219
 788 04b3 4D39F9   		cmp	r9, r15	# loop_range, i
 789 04b6 0F82BC01 		jb	.L10	#,
 789      0000
 790              		.loc 1 614 9 is_stmt 1 view .LVU220
 791              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 792              		.loc 1 614 81 is_stmt 0 view .LVU221
 793 04bc 89D6     		mov	esi, edx	# tmp432, tmp355
 794              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 795              		.loc 1 614 72 view .LVU222
 796 04be 4189C5   		mov	r13d, eax	# tmp435, pattern_size
 797              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 798              		.loc 1 614 81 view .LVU223
 799 04c1 410FAFF7 		imul	esi, r15d	# tmp432, i
 800              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 801              		.loc 1 614 17 view .LVU224
 802 04c5 4D01D7   		add	r15, r10	# tmp434, destination_start_word
 803              	.LVL37:
 804              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 805              		.loc 1 614 81 view .LVU225
 806 04c8 01CE     		add	esi, ecx	# tmp433, shift
 807              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 808              		.loc 1 614 99 view .LVU226
 809 04ca 83E63F   		and	esi, 63	# _190,
 810              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 811              		.loc 1 614 72 view .LVU227
 812 04cd 4129F5   		sub	r13d, esi	# tmp435, _190
 813              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 814              		.loc 1 614 127 view .LVU228
 815 04d0 C4C2CBF7 		shrx	rsi, r8, rsi	# tmp437, pattern, _190
 815      F0
 816              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 817              		.loc 1 614 55 view .LVU229
 818 04d5 C44291F7 		shlx	r11, r8, r13	# tmp436, pattern, tmp435
 818      D8
 819              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 820              		.loc 1 614 116 view .LVU230
 821 04da 4C09DE   		or	rsi, r11	# tmp438, tmp436
 822 04dd 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_196, tmp438
 613:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 823              		.loc 1 613 40 is_stmt 1 view .LVU231
 824 04e1 4D8D7E03 		lea	r15, 3[r14]	# i,
 825              	.LVL38:
 613:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 826              		.loc 1 613 25 view .LVU232
 827              	# sieve_extend.c:613:     for (counter_t i=0; i<=loop_range; ++i ) {
 613:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
GAS LISTING /tmp/ccjg94QQ.s 			page 30


 828              		.loc 1 613 5 is_stmt 0 view .LVU233
 829 04e5 4D39F9   		cmp	r9, r15	# loop_range, i
 830 04e8 0F828A01 		jb	.L10	#,
 830      0000
 831              		.loc 1 614 9 is_stmt 1 view .LVU234
 832              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 833              		.loc 1 614 81 is_stmt 0 view .LVU235
 834 04ee 4189D3   		mov	r11d, edx	# tmp439, tmp355
 835              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 836              		.loc 1 614 72 view .LVU236
 837 04f1 4189C5   		mov	r13d, eax	# tmp442, pattern_size
 838              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 839              		.loc 1 614 81 view .LVU237
 840 04f4 450FAFDF 		imul	r11d, r15d	# tmp439, i
 841              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 842              		.loc 1 614 17 view .LVU238
 843 04f8 4D01D7   		add	r15, r10	# tmp441, destination_start_word
 844              	.LVL39:
 845              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 846              		.loc 1 614 81 view .LVU239
 847 04fb 4101CB   		add	r11d, ecx	# tmp440, shift
 848              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 849              		.loc 1 614 99 view .LVU240
 850 04fe 4183E33F 		and	r11d, 63	# _205,
 851              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 852              		.loc 1 614 127 view .LVU241
 853 0502 C4C2A3F7 		shrx	rsi, r8, r11	# tmp444, pattern, _205
 853      F0
 854              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 855              		.loc 1 614 72 view .LVU242
 856 0507 4529DD   		sub	r13d, r11d	# tmp442, _205
 857              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 858              		.loc 1 614 55 view .LVU243
 859 050a C44291F7 		shlx	r13, r8, r13	# tmp443, pattern, tmp442
 859      E8
 860              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 861              		.loc 1 614 116 view .LVU244
 862 050f 4C09EE   		or	rsi, r13	# tmp445, tmp443
 863 0512 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_211, tmp445
 613:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 864              		.loc 1 613 40 is_stmt 1 view .LVU245
 865 0516 4D8D7E04 		lea	r15, 4[r14]	# i,
 866              	.LVL40:
 613:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 867              		.loc 1 613 25 view .LVU246
 868              	# sieve_extend.c:613:     for (counter_t i=0; i<=loop_range; ++i ) {
 613:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 869              		.loc 1 613 5 is_stmt 0 view .LVU247
 870 051a 4D39F9   		cmp	r9, r15	# loop_range, i
 871 051d 0F825501 		jb	.L10	#,
 871      0000
 872              		.loc 1 614 9 is_stmt 1 view .LVU248
 873              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 874              		.loc 1 614 81 is_stmt 0 view .LVU249
 875 0523 4189D3   		mov	r11d, edx	# tmp446, tmp355
 876              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 877              		.loc 1 614 72 view .LVU250
GAS LISTING /tmp/ccjg94QQ.s 			page 31


 878 0526 4189C5   		mov	r13d, eax	# tmp449, pattern_size
 879              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 880              		.loc 1 614 81 view .LVU251
 881 0529 450FAFDF 		imul	r11d, r15d	# tmp446, i
 882              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 883              		.loc 1 614 17 view .LVU252
 884 052d 4D01D7   		add	r15, r10	# tmp448, destination_start_word
 885              	.LVL41:
 886              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 887              		.loc 1 614 81 view .LVU253
 888 0530 4101CB   		add	r11d, ecx	# tmp447, shift
 889              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 890              		.loc 1 614 99 view .LVU254
 891 0533 4183E33F 		and	r11d, 63	# _220,
 892              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 893              		.loc 1 614 127 view .LVU255
 894 0537 C4C2A3F7 		shrx	rsi, r8, r11	# tmp451, pattern, _220
 894      F0
 895              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 896              		.loc 1 614 72 view .LVU256
 897 053c 4529DD   		sub	r13d, r11d	# tmp449, _220
 898              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 899              		.loc 1 614 55 view .LVU257
 900 053f C44291F7 		shlx	r13, r8, r13	# tmp450, pattern, tmp449
 900      E8
 901              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 902              		.loc 1 614 116 view .LVU258
 903 0544 4C09EE   		or	rsi, r13	# tmp452, tmp450
 904 0547 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_226, tmp452
 613:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 905              		.loc 1 613 40 is_stmt 1 view .LVU259
 906 054b 4D8D7E05 		lea	r15, 5[r14]	# i,
 907              	.LVL42:
 613:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 908              		.loc 1 613 25 view .LVU260
 909              	# sieve_extend.c:613:     for (counter_t i=0; i<=loop_range; ++i ) {
 613:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 910              		.loc 1 613 5 is_stmt 0 view .LVU261
 911 054f 4D39F9   		cmp	r9, r15	# loop_range, i
 912 0552 0F822001 		jb	.L10	#,
 912      0000
 913              		.loc 1 614 9 is_stmt 1 view .LVU262
 914              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 915              		.loc 1 614 81 is_stmt 0 view .LVU263
 916 0558 4189D3   		mov	r11d, edx	# tmp453, tmp355
 917              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 918              		.loc 1 614 72 view .LVU264
 919 055b 4189C5   		mov	r13d, eax	# tmp456, pattern_size
 920              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 921              		.loc 1 614 81 view .LVU265
 922 055e 450FAFDF 		imul	r11d, r15d	# tmp453, i
 923              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 924              		.loc 1 614 17 view .LVU266
 925 0562 4D01D7   		add	r15, r10	# tmp455, destination_start_word
 926              	.LVL43:
 927              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 928              		.loc 1 614 81 view .LVU267
GAS LISTING /tmp/ccjg94QQ.s 			page 32


 929 0565 4101CB   		add	r11d, ecx	# tmp454, shift
 930              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 931              		.loc 1 614 99 view .LVU268
 932 0568 4183E33F 		and	r11d, 63	# _235,
 933              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 934              		.loc 1 614 127 view .LVU269
 935 056c C4C2A3F7 		shrx	rsi, r8, r11	# tmp458, pattern, _235
 935      F0
 936              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 937              		.loc 1 614 72 view .LVU270
 938 0571 4529DD   		sub	r13d, r11d	# tmp456, _235
 939              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 940              		.loc 1 614 55 view .LVU271
 941 0574 C44291F7 		shlx	r13, r8, r13	# tmp457, pattern, tmp456
 941      E8
 942              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 943              		.loc 1 614 116 view .LVU272
 944 0579 4C09EE   		or	rsi, r13	# tmp459, tmp457
 945 057c 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_241, tmp459
 613:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 946              		.loc 1 613 40 is_stmt 1 view .LVU273
 947 0580 4D8D7E06 		lea	r15, 6[r14]	# i,
 948              	.LVL44:
 613:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 949              		.loc 1 613 25 view .LVU274
 950              	# sieve_extend.c:613:     for (counter_t i=0; i<=loop_range; ++i ) {
 613:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 951              		.loc 1 613 5 is_stmt 0 view .LVU275
 952 0584 4D39F9   		cmp	r9, r15	# loop_range, i
 953 0587 0F82EB00 		jb	.L10	#,
 953      0000
 954              		.loc 1 614 9 is_stmt 1 view .LVU276
 955              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 956              		.loc 1 614 81 is_stmt 0 view .LVU277
 957 058d 4189D3   		mov	r11d, edx	# tmp460, tmp355
 958              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 959              		.loc 1 614 72 view .LVU278
 960 0590 4189C5   		mov	r13d, eax	# tmp463, pattern_size
 961              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 962              		.loc 1 614 81 view .LVU279
 963 0593 450FAFDF 		imul	r11d, r15d	# tmp460, i
 964              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 965              		.loc 1 614 17 view .LVU280
 966 0597 4D01D7   		add	r15, r10	# tmp462, destination_start_word
 967              	.LVL45:
 968              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 969              		.loc 1 614 81 view .LVU281
 970 059a 4101CB   		add	r11d, ecx	# tmp461, shift
 971              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 972              		.loc 1 614 99 view .LVU282
 973 059d 4183E33F 		and	r11d, 63	# _250,
 974              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 975              		.loc 1 614 127 view .LVU283
 976 05a1 C4C2A3F7 		shrx	rsi, r8, r11	# tmp465, pattern, _250
 976      F0
 977              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 978              		.loc 1 614 72 view .LVU284
GAS LISTING /tmp/ccjg94QQ.s 			page 33


 979 05a6 4529DD   		sub	r13d, r11d	# tmp463, _250
 980              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 981              		.loc 1 614 55 view .LVU285
 982 05a9 C44291F7 		shlx	r13, r8, r13	# tmp464, pattern, tmp463
 982      E8
 983              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 984              		.loc 1 614 116 view .LVU286
 985 05ae 4C09EE   		or	rsi, r13	# tmp466, tmp464
 986 05b1 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_256, tmp466
 613:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 987              		.loc 1 613 40 is_stmt 1 view .LVU287
 988 05b5 4D8D7E07 		lea	r15, 7[r14]	# i,
 989              	.LVL46:
 613:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 990              		.loc 1 613 25 view .LVU288
 991              	# sieve_extend.c:613:     for (counter_t i=0; i<=loop_range; ++i ) {
 613:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 992              		.loc 1 613 5 is_stmt 0 view .LVU289
 993 05b9 4D39F9   		cmp	r9, r15	# loop_range, i
 994 05bc 0F82B600 		jb	.L10	#,
 994      0000
 995              		.loc 1 614 9 is_stmt 1 view .LVU290
 996              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 997              		.loc 1 614 81 is_stmt 0 view .LVU291
 998 05c2 4189D3   		mov	r11d, edx	# tmp467, tmp355
 999              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1000              		.loc 1 614 72 view .LVU292
 1001 05c5 4189C5   		mov	r13d, eax	# tmp470, pattern_size
 1002              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1003              		.loc 1 614 81 view .LVU293
 1004 05c8 450FAFDF 		imul	r11d, r15d	# tmp467, i
 1005              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1006              		.loc 1 614 17 view .LVU294
 1007 05cc 4D01D7   		add	r15, r10	# tmp469, destination_start_word
 1008              	.LVL47:
 1009              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1010              		.loc 1 614 81 view .LVU295
 1011 05cf 4101CB   		add	r11d, ecx	# tmp468, shift
 1012              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1013              		.loc 1 614 99 view .LVU296
 1014 05d2 4183E33F 		and	r11d, 63	# _265,
 1015              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1016              		.loc 1 614 127 view .LVU297
 1017 05d6 C4C2A3F7 		shrx	rsi, r8, r11	# tmp472, pattern, _265
 1017      F0
 1018              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1019              		.loc 1 614 72 view .LVU298
 1020 05db 4529DD   		sub	r13d, r11d	# tmp470, _265
 1021              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1022              		.loc 1 614 55 view .LVU299
 1023 05de C44291F7 		shlx	r13, r8, r13	# tmp471, pattern, tmp470
 1023      E8
 1024              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1025              		.loc 1 614 116 view .LVU300
 1026 05e3 4C09EE   		or	rsi, r13	# tmp473, tmp471
 1027 05e6 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_271, tmp473
 613:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
GAS LISTING /tmp/ccjg94QQ.s 			page 34


 1028              		.loc 1 613 40 is_stmt 1 view .LVU301
 1029 05ea 4D8D7E08 		lea	r15, 8[r14]	# i,
 1030              	.LVL48:
 613:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1031              		.loc 1 613 25 view .LVU302
 1032              	# sieve_extend.c:613:     for (counter_t i=0; i<=loop_range; ++i ) {
 613:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1033              		.loc 1 613 5 is_stmt 0 view .LVU303
 1034 05ee 4D39F9   		cmp	r9, r15	# loop_range, i
 1035 05f1 0F828100 		jb	.L10	#,
 1035      0000
 1036              		.loc 1 614 9 is_stmt 1 view .LVU304
 1037              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1038              		.loc 1 614 81 is_stmt 0 view .LVU305
 1039 05f7 4189D3   		mov	r11d, edx	# tmp474, tmp355
 1040              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1041              		.loc 1 614 72 view .LVU306
 1042 05fa 4189C5   		mov	r13d, eax	# tmp477, pattern_size
 1043              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1044              		.loc 1 614 81 view .LVU307
 1045 05fd 450FAFDF 		imul	r11d, r15d	# tmp474, i
 1046              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1047              		.loc 1 614 17 view .LVU308
 1048 0601 4D01D7   		add	r15, r10	# tmp476, destination_start_word
 1049              	.LVL49:
 1050              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1051              		.loc 1 614 81 view .LVU309
 1052 0604 4101CB   		add	r11d, ecx	# tmp475, shift
 1053              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1054              		.loc 1 614 99 view .LVU310
 1055 0607 4183E33F 		and	r11d, 63	# _280,
 1056              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1057              		.loc 1 614 127 view .LVU311
 1058 060b C4C2A3F7 		shrx	rsi, r8, r11	# tmp479, pattern, _280
 1058      F0
 1059              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1060              		.loc 1 614 72 view .LVU312
 1061 0610 4529DD   		sub	r13d, r11d	# tmp477, _280
 1062              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1063              		.loc 1 614 55 view .LVU313
 1064 0613 C44291F7 		shlx	r13, r8, r13	# tmp478, pattern, tmp477
 1064      E8
 1065              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1066              		.loc 1 614 116 view .LVU314
 1067 0618 4C09EE   		or	rsi, r13	# tmp480, tmp478
 1068 061b 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_286, tmp480
 613:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1069              		.loc 1 613 40 is_stmt 1 view .LVU315
 1070 061f 4D8D7E09 		lea	r15, 9[r14]	# i,
 1071              	.LVL50:
 613:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1072              		.loc 1 613 25 view .LVU316
 1073              	# sieve_extend.c:613:     for (counter_t i=0; i<=loop_range; ++i ) {
 613:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1074              		.loc 1 613 5 is_stmt 0 view .LVU317
 1075 0623 4D39F9   		cmp	r9, r15	# loop_range, i
 1076 0626 7250     		jb	.L10	#,
GAS LISTING /tmp/ccjg94QQ.s 			page 35


 1077              		.loc 1 614 9 is_stmt 1 view .LVU318
 1078              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1079              		.loc 1 614 81 is_stmt 0 view .LVU319
 1080 0628 4189D3   		mov	r11d, edx	# tmp481, tmp355
 1081              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1082              		.loc 1 614 72 view .LVU320
 1083 062b 4189C5   		mov	r13d, eax	# tmp484, pattern_size
 1084              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1085              		.loc 1 614 81 view .LVU321
 1086 062e 450FAFDF 		imul	r11d, r15d	# tmp481, i
 1087              	# sieve_extend.c:613:     for (counter_t i=0; i<=loop_range; ++i ) {
 613:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1088              		.loc 1 613 40 view .LVU322
 1089 0632 4983C60A 		add	r14, 10	# i,
 1090              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1091              		.loc 1 614 17 view .LVU323
 1092 0636 4D01D7   		add	r15, r10	# tmp483, destination_start_word
 1093              	.LVL51:
 1094              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1095              		.loc 1 614 81 view .LVU324
 1096 0639 4101CB   		add	r11d, ecx	# tmp482, shift
 1097              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1098              		.loc 1 614 99 view .LVU325
 1099 063c 4183E33F 		and	r11d, 63	# _295,
 1100              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1101              		.loc 1 614 127 view .LVU326
 1102 0640 C4C2A3F7 		shrx	rsi, r8, r11	# tmp486, pattern, _295
 1102      F0
 1103              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1104              		.loc 1 614 72 view .LVU327
 1105 0645 4529DD   		sub	r13d, r11d	# tmp484, _295
 1106              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1107              		.loc 1 614 55 view .LVU328
 1108 0648 C44291F7 		shlx	r13, r8, r13	# tmp485, pattern, tmp484
 1108      E8
 1109              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1110              		.loc 1 614 116 view .LVU329
 1111 064d 4C09EE   		or	rsi, r13	# tmp487, tmp485
 1112              	# sieve_extend.c:613:     for (counter_t i=0; i<=loop_range; ++i ) {
 613:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1113              		.loc 1 613 5 view .LVU330
 1114 0650 4D39F1   		cmp	r9, r14	# loop_range, i
 1115              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1116              		.loc 1 614 116 view .LVU331
 1117 0653 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_301, tmp487
 613:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1118              		.loc 1 613 40 is_stmt 1 view .LVU332
 1119              	.LVL52:
 613:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1120              		.loc 1 613 25 view .LVU333
 1121              	# sieve_extend.c:613:     for (counter_t i=0; i<=loop_range; ++i ) {
 613:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1122              		.loc 1 613 5 is_stmt 0 view .LVU334
 1123 0657 721F     		jb	.L10	#,
 1124              		.loc 1 614 9 is_stmt 1 view .LVU335
 1125              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1126              		.loc 1 614 81 is_stmt 0 view .LVU336
GAS LISTING /tmp/ccjg94QQ.s 			page 36


 1127 0659 410FAFD6 		imul	edx, r14d	# tmp488, i
 1128              	.LVL53:
 1129              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1130              		.loc 1 614 17 view .LVU337
 1131 065d 4D01D6   		add	r14, r10	# tmp490, destination_start_word
 1132              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1133              		.loc 1 614 81 view .LVU338
 1134 0660 01D1     		add	ecx, edx	# tmp489, tmp488
 1135              	.LVL54:
 1136              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1137              		.loc 1 614 99 view .LVU339
 1138 0662 83E13F   		and	ecx, 63	# _108,
 1139              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1140              		.loc 1 614 72 view .LVU340
 1141 0665 29C8     		sub	eax, ecx	# tmp491, _108
 1142              	.LVL55:
 1143              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1144              		.loc 1 614 55 view .LVU341
 1145 0667 C4C2F9F7 		shlx	rdx, r8, rax	# tmp492, pattern, tmp491
 1145      D0
 1146              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1147              		.loc 1 614 127 view .LVU342
 1148 066c C442F3F7 		shrx	r8, r8, rcx	# tmp493, pattern, _108
 1148      C0
 1149              	.LVL56:
 1150              	# sieve_extend.c:614:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1151              		.loc 1 614 116 view .LVU343
 1152 0671 4909D0   		or	r8, rdx	# tmp494, tmp492
 1153 0674 4E8904F7 		mov	QWORD PTR [rdi+r14*8], r8	# *_42, tmp494
 613:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1154              		.loc 1 613 40 is_stmt 1 view .LVU344
 613:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1155              		.loc 1 613 25 view .LVU345
 1156              	.L10:
 613:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1157              		.loc 1 613 25 is_stmt 0 view .LVU346
 1158              	.LBE305:
 615:sieve_extend.c ****     }
 616:sieve_extend.c ****     bitarray[destination_stop_word] &= chopmask(destination_stop);
 1159              		.loc 1 616 5 is_stmt 1 view .LVU347
 1160              	# sieve_extend.c:616:     bitarray[destination_stop_word] &= chopmask(destination_stop);
 1161              		.loc 1 616 37 is_stmt 0 view .LVU348
 1162 0678 4A211CE7 		and	QWORD PTR [rdi+r12*8], rbx	# *_57, _124
 1163              	# sieve_extend.c:617: }
 617:sieve_extend.c **** }
 1164              		.loc 1 617 1 view .LVU349
 1165 067c 488D65D8 		lea	rsp, -40[rbp]	#,
 1166 0680 5B       		pop	rbx	#
 1167 0681 415C     		pop	r12	#
 1168              	.LVL57:
 1169              		.loc 1 617 1 view .LVU350
 1170 0683 415D     		pop	r13	#
 1171 0685 415E     		pop	r14	#
 1172 0687 415F     		pop	r15	#
 1173 0689 5D       		pop	rbp	#
 1174              		.cfi_remember_state
 1175              		.cfi_def_cfa 7, 8
GAS LISTING /tmp/ccjg94QQ.s 			page 37


 1176 068a C3       		ret	
 1177              	.LVL58:
 1178 068b 0F1F4400 		.p2align 4,,7
 1178      00
 1179              		.p2align 3
 1180              	.L49:
 1181              		.cfi_restore_state
 598:sieve_extend.c ****         return;
 1182              		.loc 1 598 9 is_stmt 1 view .LVU351
 1183              	# sieve_extend.c:598:         bitarray[destination_start_word] |= (pattern << bitindex(destination_
 598:sieve_extend.c ****         return;
 1184              		.loc 1 598 86 is_stmt 0 view .LVU352
 1185 0690 4821D8   		and	rax, rbx	# tmp351, _124
 1186              	# sieve_extend.c:598:         bitarray[destination_start_word] |= (pattern << bitindex(destination_
 598:sieve_extend.c ****         return;
 1187              		.loc 1 598 42 view .LVU353
 1188 0693 4C09F8   		or	rax, r15	# tmp352, pretmp_118
 1189 0696 498906   		mov	QWORD PTR [r14], rax	# *_117, tmp352
 599:sieve_extend.c ****     }
 1190              		.loc 1 599 9 is_stmt 1 view .LVU354
 1191              	# sieve_extend.c:617: }
 1192              		.loc 1 617 1 is_stmt 0 view .LVU355
 1193 0699 488D65D8 		lea	rsp, -40[rbp]	#,
 1194 069d 5B       		pop	rbx	#
 1195 069e 415C     		pop	r12	#
 1196              	.LVL59:
 1197              		.loc 1 617 1 view .LVU356
 1198 06a0 415D     		pop	r13	#
 1199 06a2 415E     		pop	r14	#
 1200 06a4 415F     		pop	r15	#
 1201 06a6 5D       		pop	rbp	#
 1202              		.cfi_remember_state
 1203              		.cfi_def_cfa 7, 8
 1204 06a7 C3       		ret	
 1205              	.LVL60:
 1206              	.L50:
 1207              		.cfi_restore_state
 1208              		.loc 1 617 1 view .LVU357
 1209 06a8 C5F877   		vzeroupper
 1210 06ab EBCB     		jmp	.L10	#
 1211              	.LVL61:
 1212              	.L12:
 1213              	.LBB306:
 1214              	# sieve_extend.c:613:     for (counter_t i=0; i<=loop_range; ++i ) {
 613:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1215              		.loc 1 613 20 view .LVU358
 1216 06ad 4531F6   		xor	r14d, r14d	# i
 1217 06b0 E979FBFF 		jmp	.L7	#
 1217      FF
 1218              	.L11:
 1219 06b5 4531F6   		xor	r14d, r14d	# tmp.141
 1220              		.p2align 4,,2
 1221 06b8 E994FDFF 		jmp	.L6	#
 1221      FF
 1222              	.LBE306:
 1223              		.cfi_endproc
 1224              	.LFE65:
GAS LISTING /tmp/ccjg94QQ.s 			page 38


 1226 06bd 0F1F00   		.p2align 4
 1228              	extendSieve_shiftright_ivdep:
 1229              	.LVL62:
 1230              	.LFB70:
 618:sieve_extend.c **** 
 619:sieve_extend.c **** static void extendSieve_aligned(bitword_t* bitarray, const counter_t source_start, const counter_t 
 620:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 621:sieve_extend.c **** 
 622:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 623:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 624:sieve_extend.c ****     counter_t source_word = wordindex(source_start);
 625:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 626:sieve_extend.c ****     
 627:sieve_extend.c ****     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 628:sieve_extend.c **** 
 629:sieve_extend.c ****     while (copy_word + size <= destination_stop_word) {
 630:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 631:sieve_extend.c ****         copy_word += size;
 632:sieve_extend.c ****     }
 633:sieve_extend.c **** 
 634:sieve_extend.c ****    while (copy_word < destination_stop_word) {
 635:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 636:sieve_extend.c ****         source_word++;
 637:sieve_extend.c ****         copy_word++;
 638:sieve_extend.c ****     }
 639:sieve_extend.c **** 
 640:sieve_extend.c **** }
 641:sieve_extend.c **** 
 642:sieve_extend.c **** //https://stackoverflow.com/questions/1898153/how-to-determine-if-memory-is-aligned
 643:sieve_extend.c **** #define is_unaligned(POINTER, BYTE_COUNT) (((uintptr_t)(const void *)(POINTER)) % (BYTE_COUNT))
 644:sieve_extend.c **** 
 645:sieve_extend.c **** void shiftvec(uint64_t* __restrict dst, const uint64_t* __restrict src, int size, int shift)
 646:sieve_extend.c **** {
 647:sieve_extend.c ****     int i = 0;
 648:sieve_extend.c ****     // MSVC: use steps of 2 for SSE, 4 for AVX2, 8 for AVX512
 649:sieve_extend.c ****     for (; i+4 < size; i+=4,dst+=4,src+=4)
 650:sieve_extend.c ****     {
 651:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 652:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 653:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 654:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 655:sieve_extend.c ****     }
 656:sieve_extend.c ****     for (; i < size; ++i,++src,++dst)
 657:sieve_extend.c ****     {
 658:sieve_extend.c ****         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 659:sieve_extend.c ****     }    
 660:sieve_extend.c **** }
 661:sieve_extend.c **** 
 662:sieve_extend.c **** #define forward_distance 3
 663:sieve_extend.c **** static void extendSieve_shiftright_ptr(bitword_t* bitarray, const counter_t source_start, const cou
 664:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 665:sieve_extend.c ****    
 666:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 667:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 668:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_calc(source_start);
 669:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 670:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
GAS LISTING /tmp/ccjg94QQ.s 			page 39


 671:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 672:sieve_extend.c **** 
 673:sieve_extend.c ****     if (copy_word >= destination_stop_word) { 
 674:sieve_extend.c ****         bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose da
 675:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 676:sieve_extend.c ****                                 & keepmask(copy_start) & chopmask(destination_stop);
 677:sieve_extend.c ****         return; // rapid exit for one word variant
 678:sieve_extend.c ****     }
 679:sieve_extend.c **** 
 680:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose data
 681:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 682:sieve_extend.c ****                                 & keepmask(copy_start);
 683:sieve_extend.c **** 
 684:sieve_extend.c ****     copy_word++;
 685:sieve_extend.c **** 
 686:sieve_extend.c ****     debug printf("..copy distance %ju\n",(uintmax_t) copy_word - (uintmax_t) source_word);
 687:sieve_extend.c ****     if (((copy_word - source_word) > forward_distance)) {
 688:sieve_extend.c ****         // shiftvec(&bitarray[copy_word], &bitarray[source_word],size_word,shift );
 689:sieve_extend.c ****         
 690:sieve_extend.c ****         bitword_t* __restrict copy_ptr   = &bitarray[copy_word];
 691:sieve_extend.c ****         bitword_t* __restrict source_ptr = &bitarray[source_word];
 692:sieve_extend.c ****         // bitword_t* copy_ptr   = &bitarray[copy_word];
 693:sieve_extend.c ****         // bitword_t* source_ptr = &bitarray[source_word];
 694:sieve_extend.c ****         bitword_t* __restrict dest_ptr   = &bitarray[destination_stop_word];
 695:sieve_extend.c ****         long size_word_ptr   = dest_ptr - copy_ptr;
 696:sieve_extend.c **** 
 697:sieve_extend.c ****         #pragma ivdep 
 698:sieve_extend.c ****         for (long i = 0; (i+forward_distance) < size_word_ptr; i+=forward_distance, copy_ptr+=forwa
 699:sieve_extend.c ****             #pragma ivdep
 700:sieve_extend.c ****             for (counter_t j = 0; j < forward_distance; ++j) 
 701:sieve_extend.c ****                 *(copy_ptr+j)  = (*(source_ptr+j  ) >> shift_flipped); 
 702:sieve_extend.c ****             #pragma ivdep
 703:sieve_extend.c ****             for (counter_t j = 0; j < forward_distance; ++j) 
 704:sieve_extend.c ****                 *(copy_ptr+j) |= (*(source_ptr+j+1) << shift);
 705:sieve_extend.c ****         }
 706:sieve_extend.c **** 
 707:sieve_extend.c ****         size_word_ptr = dest_ptr - copy_ptr;
 708:sieve_extend.c ****         #pragma ivdep 
 709:sieve_extend.c ****         for (counter_t i=0; i <= size_word_ptr; i++)
 710:sieve_extend.c ****             *(copy_ptr+i) = (*(source_ptr+i) >> shift_flipped) | (*(source_ptr+i+1) << shift);
 711:sieve_extend.c **** 
 712:sieve_extend.c ****         // #pragma GCC ivdep
 713:sieve_extend.c ****         // for (; i <= size_word; i++) 
 714:sieve_extend.c ****         //     *(copy_ptr+i) = (*(source_ptr+i) >> shift_flipped) | (*(source_ptr+i+1) << shift);
 715:sieve_extend.c ****     }
 716:sieve_extend.c ****     else {
 717:sieve_extend.c ****         register counter_t i = 0;
 718:sieve_extend.c ****         bitword_t* copy_ptr   = &bitarray[copy_word];
 719:sieve_extend.c ****         bitword_t* source_ptr = &bitarray[source_word];
 720:sieve_extend.c ****         bitword_t* dest_ptr   = &bitarray[destination_stop_word];
 721:sieve_extend.c ****         long size_word_ptr   = dest_ptr - copy_ptr;
 722:sieve_extend.c ****         for (; i <= size_word_ptr; i++)
 723:sieve_extend.c ****             *(copy_ptr+i) = (*(source_ptr+i) >> shift_flipped) | (*(source_ptr+i+1) << shift);
 724:sieve_extend.c ****     }
 725:sieve_extend.c **** 
 726:sieve_extend.c ****     // for (; i <= size_word; i++) 
 727:sieve_extend.c ****     //     *(copy_ptr+i) = (*(source_ptr+i) >> shift_flipped) | (*(source_ptr+i+1) << shift);
GAS LISTING /tmp/ccjg94QQ.s 			page 40


 728:sieve_extend.c **** 
 729:sieve_extend.c ****     // for (; i <= size_word; i++) 
 730:sieve_extend.c ****     //     bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_wo
 731:sieve_extend.c **** 
 732:sieve_extend.c ****     // for (; copy_word <= destination_stop_word; copy_word++, source_word++ ) 
 733:sieve_extend.c ****     //     bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1
 734:sieve_extend.c **** }
 735:sieve_extend.c **** 
 736:sieve_extend.c **** static inline counter_t extendSieve_shiftleft_unrolled(bitword_t* bitarray, const counter_t aligned
 737:sieve_extend.c ****     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_copy_word - 2) : 0; // s
 738:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 739:sieve_extend.c ****     counter_t distance = 0;
 740:sieve_extend.c ****     while (copy_word < fast_loop_stop_word) {
 741:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 742:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 743:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 744:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 745:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 746:sieve_extend.c ****         copy_word += 2;
 747:sieve_extend.c ****         source_word += 2;
 748:sieve_extend.c ****         distance += 2;
 749:sieve_extend.c ****     }
 750:sieve_extend.c ****     return distance;
 751:sieve_extend.c **** }
 752:sieve_extend.c **** 
 753:sieve_extend.c **** //static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source_start, const counte
 754:sieve_extend.c **** //    const bitword_t* destination_stop_ptr = &bitarray[wordindex(destination_stop)];
 755:sieve_extend.c **** //    const counter_t copy_start = source_start + size;
 756:sieve_extend.c **** //    register const bitshift_t shift = bitindex_calc(source_start) - bitindex_calc(copy_start);
 757:sieve_extend.c **** //    register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 758:sieve_extend.c **** //    register bitword_t* source_ptr = &bitarray[wordindex(source_start)];
 759:sieve_extend.c **** //    register bitword_t* copy_ptr = &bitarray[wordindex(copy_start)];
 760:sieve_extend.c **** //    const bitword_t* aligned_copy_ptr = min(source_ptr + size, destination_stop_ptr); // after <<
 761:sieve_extend.c **** //
 762:sieve_extend.c **** //    *copy_ptr |= ((*source_ptr >> shift) | (*(source_ptr+1) << shift_flipped)) & ~chopmask2(copy_
 763:sieve_extend.c **** //    copy_ptr++;
 764:sieve_extend.c **** //    source_ptr++;
 765:sieve_extend.c **** //
 766:sieve_extend.c **** //    while (copy_ptr+3 <= aligned_copy_ptr) {
 767:sieve_extend.c **** //        bitword_t source0 = *source_ptr >> shift;
 768:sieve_extend.c **** //        bitword_t source1 = *(source_ptr+1);
 769:sieve_extend.c **** //        *copy_ptr = (source0) | (source1 << shift_flipped);
 770:sieve_extend.c **** //        bitword_t source2 = *(source_ptr+2);
 771:sieve_extend.c **** //        *(copy_ptr+1) = (source1 >> shift) | (source2 << shift_flipped);
 772:sieve_extend.c **** //        bitword_t source3 = *(source_ptr+3);
 773:sieve_extend.c **** //        *(copy_ptr+2) = (source2 >> shift) | (source3 << shift_flipped);
 774:sieve_extend.c **** //
 775:sieve_extend.c **** //        copy_ptr+=3;
 776:sieve_extend.c **** //        source_ptr+=3;
 777:sieve_extend.c **** //    }
 778:sieve_extend.c **** //
 779:sieve_extend.c **** //    while (copy_ptr <= aligned_copy_ptr) {
 780:sieve_extend.c **** //        register bitword_t source0 = *source_ptr >> shift;
 781:sieve_extend.c **** //        source_ptr++;
 782:sieve_extend.c **** //        register bitword_t source1 = *source_ptr << shift_flipped;
 783:sieve_extend.c **** //        *copy_ptr = source0 | source1;
 784:sieve_extend.c **** //        copy_ptr++;
GAS LISTING /tmp/ccjg94QQ.s 			page 41


 785:sieve_extend.c **** //    }
 786:sieve_extend.c **** //
 787:sieve_extend.c **** //    if (copy_ptr >= destination_stop_ptr) return;
 788:sieve_extend.c **** //
 789:sieve_extend.c **** //    source_ptr = copy_ptr - size; // recalibrate
 790:sieve_extend.c **** //    const size_t memsize = (size_t)size*sizeof(bitword_t);
 791:sieve_extend.c **** //     while (copy_ptr + size <= destination_stop_ptr) {
 792:sieve_extend.c **** //         memcpy(copy_ptr, source_ptr, memsize );
 793:sieve_extend.c **** //         copy_ptr += size;
 794:sieve_extend.c **** //     }
 795:sieve_extend.c **** //
 796:sieve_extend.c **** //    while (copy_ptr <= destination_stop_ptr) {
 797:sieve_extend.c **** //        // *copy_ptr++ = *source_ptr++;
 798:sieve_extend.c **** //        *copy_ptr = *source_ptr;
 799:sieve_extend.c **** //        copy_ptr++;
 800:sieve_extend.c **** //        source_ptr++;
 801:sieve_extend.c **** //    }
 802:sieve_extend.c **** //
 803:sieve_extend.c **** //}
 804:sieve_extend.c **** 
 805:sieve_extend.c **** 
 806:sieve_extend.c **** static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t source_start, const c
 1231              		.loc 1 806 149 is_stmt 1 view -0
 1232              		.cfi_startproc
 807:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1233              		.loc 1 807 5 view .LVU360
 808:sieve_extend.c ****    
 809:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 1234              		.loc 1 809 5 view .LVU361
 1235              	# sieve_extend.c:806: static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t
 806:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1236              		.loc 1 806 149 is_stmt 0 view .LVU362
 1237 06c0 55       		push	rbp	#
 1238              		.cfi_def_cfa_offset 16
 1239              		.cfi_offset 6, -16
 1240              	# sieve_extend.c:810:     const counter_t copy_start = source_start + size;
 810:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 1241              		.loc 1 810 21 view .LVU363
 1242 06c1 4C8D0416 		lea	r8, [rsi+rdx]	# copy_start,
 1243              	# sieve_extend.c:809:     const counter_t destination_stop_word = wordindex(destination_stop);
 809:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 1244              		.loc 1 809 21 view .LVU364
 1245 06c5 4889C8   		mov	rax, rcx	# destination_stop_word, destination_stop
 1246              	# sieve_extend.c:806: static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t
 806:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1247              		.loc 1 806 149 view .LVU365
 1248 06c8 4889E5   		mov	rbp, rsp	#,
 1249              		.cfi_def_cfa_register 6
 1250              	# sieve_extend.c:811:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 811:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_calc(source_start);
 1251              		.loc 1 811 39 view .LVU366
 1252 06cb 4D89C2   		mov	r10, r8	# _4, copy_start
 1253              	# sieve_extend.c:806: static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t
 806:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1254              		.loc 1 806 149 view .LVU367
 1255 06ce 4157     		push	r15	#
 1256              	# sieve_extend.c:814:     register counter_t copy_word = wordindex(copy_start);
GAS LISTING /tmp/ccjg94QQ.s 			page 42


 812:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 813:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 814:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 1257              		.loc 1 814 24 view .LVU368
 1258 06d0 49C1E806 		shr	r8, 6	# copy_word,
 1259              	# sieve_extend.c:811:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 811:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1260              		.loc 1 811 39 view .LVU369
 1261 06d4 4183E23F 		and	r10d, 63	# _4,
 1262              	# sieve_extend.c:806: static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t
 806:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1263              		.loc 1 806 149 view .LVU370
 1264 06d8 4156     		push	r14	#
 1265              	# sieve_extend.c:809:     const counter_t destination_stop_word = wordindex(destination_stop);
 809:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 1266              		.loc 1 809 21 view .LVU371
 1267 06da 48C1E806 		shr	rax, 6	# destination_stop_word,
 1268              		.cfi_offset 15, -24
 1269              		.cfi_offset 14, -32
 1270              	# sieve_extend.c:811:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 811:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1271              		.loc 1 811 31 view .LVU372
 1272 06de 4D89D6   		mov	r14, r10	# shift, _4
 1273              	# sieve_extend.c:806: static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t
 806:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1274              		.loc 1 806 149 view .LVU373
 1275 06e1 4155     		push	r13	#
 1276 06e3 F7D1     		not	ecx	# tmp401
 1277              	.LVL63:
 806:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1278              		.loc 1 806 149 view .LVU374
 1279 06e5 4154     		push	r12	#
 1280              		.cfi_offset 13, -40
 1281              		.cfi_offset 12, -48
 1282 06e7 4E8D24C5 		lea	r12, 0[0+r8*8]	# _176,
 1282      00000000 
 1283 06ef 53       		push	rbx	#
 1284 06f0 4E8D2C27 		lea	r13, [rdi+r12]	# _177,
 1285 06f4 4D8B7D00 		mov	r15, QWORD PTR 0[r13]	# pretmp_178, *_177
 1286 06f8 4883E4E0 		and	rsp, -32	#,
 1287              		.cfi_offset 3, -56
 1288              	.LVL64:
 810:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_calc(source_start);
 1289              		.loc 1 810 5 is_stmt 1 view .LVU375
 811:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1290              		.loc 1 811 5 view .LVU376
 1291              	# sieve_extend.c:809:     const counter_t destination_stop_word = wordindex(destination_stop);
 809:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 1292              		.loc 1 809 21 is_stmt 0 view .LVU377
 1293 06fc 48894424 		mov	QWORD PTR -8[rsp], rax	# %sfp, destination_stop_word
 1293      F8
 1294              	.LVL65:
 1295              	# sieve_extend.c:811:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 811:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1296              		.loc 1 811 67 view .LVU378
 1297 0701 4889F0   		mov	rax, rsi	# _5, source_start
 1298              	# sieve_extend.c:813:     register counter_t source_word = wordindex(source_start);
GAS LISTING /tmp/ccjg94QQ.s 			page 43


 813:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 1299              		.loc 1 813 24 view .LVU379
 1300 0704 48C1EE06 		shr	rsi, 6	# source_word,
 1301              	.LVL66:
 1302              	# sieve_extend.c:811:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 811:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1303              		.loc 1 811 67 view .LVU380
 1304 0708 83E03F   		and	eax, 63	# _5,
 1305              	.LVL67:
 812:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 1306              		.loc 1 812 5 is_stmt 1 view .LVU381
 813:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 1307              		.loc 1 813 5 view .LVU382
 1308              		.loc 1 814 5 view .LVU383
 815:sieve_extend.c **** 
 816:sieve_extend.c ****     if (copy_word >= destination_stop_word) { 
 1309              		.loc 1 816 5 view .LVU384
 1310              	# sieve_extend.c:811:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 811:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1311              		.loc 1 811 31 is_stmt 0 view .LVU385
 1312 070b 4929C6   		sub	r14, rax	# shift, _5
 1313              	.LVL68:
 811:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1314              		.loc 1 811 31 view .LVU386
 1315 070e 488D1CF5 		lea	rbx, 0[0+rsi*8]	# _179,
 1315      00000000 
 1316              	# sieve_extend.c:812:     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 812:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 1317              		.loc 1 812 31 view .LVU387
 1318 0716 4883C040 		add	rax, 64	# tmp394,
 1319              	.LVL69:
 812:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 1320              		.loc 1 812 31 view .LVU388
 1321 071a 4C8D1C1F 		lea	r11, [rdi+rbx]	# _180,
 1322 071e 4C897C24 		mov	QWORD PTR -24[rsp], r15	# %sfp, pretmp_178
 1322      E8
 1323 0723 4C29D0   		sub	rax, r10	# shift_flipped, _4
 1324              	.LVL70:
 812:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 1325              		.loc 1 812 31 view .LVU389
 1326 0726 C44289F7 		shlx	r9, QWORD PTR [r11], r14	# tmp396, *_180, shift
 1326      0B
 1327 072b C442FBF7 		shrx	r15, r15, rax	# tmp398, pretmp_178, shift_flipped
 1327      FF
 1328 0730 44897424 		mov	DWORD PTR -12[rsp], r14d	# %sfp, shift
 1328      F4
 1329 0735 4D09F9   		or	r9, r15	# _186, tmp398
 1330              	# sieve_extend.c:816:     if (copy_word >= destination_stop_word) { 
 1331              		.loc 1 816 8 view .LVU390
 1332 0738 4C394424 		cmp	QWORD PTR -8[rsp], r8	# %sfp, copy_word
 1332      F8
 1333 073d 49C7C7FF 		mov	r15, -1	# tmp400,
 1333      FFFFFF
 1334 0744 894424F0 		mov	DWORD PTR -16[rsp], eax	# %sfp, shift_flipped
 1335 0748 C442A9F7 		shlx	r10, r15, r10	# _189, tmp400, _4
 1335      D7
 1336              	.LVL71:
GAS LISTING /tmp/ccjg94QQ.s 			page 44


 1337              		.loc 1 816 8 view .LVU391
 1338 074d C442F3F7 		shrx	r15, r15, rcx	# _193, tmp400, tmp401
 1338      FF
 1339 0752 0F86F80A 		jbe	.L260	#,
 1339      0000
 817:sieve_extend.c ****         bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose da
 818:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 819:sieve_extend.c ****                                 & keepmask(copy_start) & chopmask(destination_stop);
 820:sieve_extend.c ****         return; // rapid exit for one word variant
 821:sieve_extend.c ****     }
 822:sieve_extend.c **** 
 823:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose data
 1340              		.loc 1 823 5 is_stmt 1 view .LVU392
 1341              	# sieve_extend.c:825:                                 & keepmask(copy_start);
 824:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 825:sieve_extend.c ****                                 & keepmask(copy_start);
 1342              		.loc 1 825 33 is_stmt 0 view .LVU393
 1343 0758 4D21D1   		and	r9, r10	# tmp407, _189
 1344              	# sieve_extend.c:827:     copy_word++;
 826:sieve_extend.c **** 
 827:sieve_extend.c ****     copy_word++;
 1345              		.loc 1 827 14 view .LVU394
 1346 075b 498D4801 		lea	rcx, 1[r8]	# copy_word,
 1347              	# sieve_extend.c:823:     bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start
 823:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 1348              		.loc 1 823 25 view .LVU395
 1349 075f 4C0B4C24 		or	r9, QWORD PTR -24[rsp]	# tmp408, %sfp
 1349      E8
 1350              	# sieve_extend.c:831:     if (size >= WORD_SIZE_counter) {
 828:sieve_extend.c **** 
 829:sieve_extend.c ****     debug { printf("...start - %ju - %ju - end\n",(uintmax_t)wordindex(copy_start), (uintmax_t)dest
 830:sieve_extend.c **** 
 831:sieve_extend.c ****     if (size >= WORD_SIZE_counter) {
 1351              		.loc 1 831 8 view .LVU396
 1352 0764 4883FA3F 		cmp	rdx, 63	# size,
 1353              	# sieve_extend.c:823:     bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start
 823:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 1354              		.loc 1 823 25 view .LVU397
 1355 0768 4D894D00 		mov	QWORD PTR 0[r13], r9	# *_177, tmp408
 827:sieve_extend.c **** 
 1356              		.loc 1 827 5 is_stmt 1 view .LVU398
 1357              	.LVL72:
 829:sieve_extend.c **** 
 1358              		.loc 1 829 5 view .LVU399
 1359              		.loc 1 831 5 view .LVU400
 1360              	# sieve_extend.c:831:     if (size >= WORD_SIZE_counter) {
 1361              		.loc 1 831 8 is_stmt 0 view .LVU401
 1362 076c 0F876604 		ja	.L261	#,
 1362      0000
 832:sieve_extend.c ****         register const counter_t loop_distance = destination_stop_word - copy_word;
 833:sieve_extend.c **** 
 834:sieve_extend.c ****         #pragma unroll
 835:sieve_extend.c ****         #pragma ivdep
 836:sieve_extend.c ****         for (register counter_t i = 0; i <loop_distance; i++) {
 837:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 838:sieve_extend.c ****         }
 839:sieve_extend.c ****         source_word += loop_distance; copy_word+= loop_distance;
GAS LISTING /tmp/ccjg94QQ.s 			page 45


 840:sieve_extend.c ****     }
 841:sieve_extend.c **** 
 842:sieve_extend.c ****     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 1363              		.loc 1 842 12 is_stmt 1 discriminator 1 view .LVU402
 1364              	# sieve_extend.c:842:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 1365              		.loc 1 842 5 is_stmt 0 discriminator 1 view .LVU403
 1366 0772 4C8B5C24 		mov	r11, QWORD PTR -8[rsp]	# destination_stop_word, %sfp
 1366      F8
 1367 0777 4939CB   		cmp	r11, rcx	# destination_stop_word, copy_word
 1368 077a 0F824104 		jb	.L66	#,
 1368      0000
 1369 0780 4D89DC   		mov	r12, r11	# _173, destination_stop_word
 1370 0783 498D5301 		lea	rdx, 1[r11]	# _198,
 1371              	.LVL73:
 1372              		.loc 1 842 5 discriminator 1 view .LVU404
 1373 0787 4929CC   		sub	r12, rcx	# _173, copy_word
 1374 078a 4C8D0CF5 		lea	r9, 40[0+rsi*8]	# _168,
 1374      28000000 
 1375 0792 4C896424 		mov	QWORD PTR -32[rsp], r12	# %sfp, _173
 1375      E0
 1376 0797 4C8D24CD 		lea	r12, 0[0+rcx*8]	# _166,
 1376      00000000 
 1377 079f 48895424 		mov	QWORD PTR -24[rsp], rdx	# %sfp, _198
 1377      E8
 1378 07a4 4D8D5424 		lea	r10, 32[r12]	# tmp497,
 1378      20
 1379 07a9 488D14F5 		lea	rdx, 0[0+rsi*8]	# _260,
 1379      00000000 
 1380 07b1 4D8D6802 		lea	r13, 2[r8]	# _175,
 1381 07b5 4C39D2   		cmp	rdx, r10	# _260, tmp497
 1382 07b8 410F9DC2 		setge	r10b	#, tmp499
 1383 07bc 4D39CC   		cmp	r12, r9	# _166, _168
 1384 07bf 410F9DC1 		setge	r9b	#, tmp501
 1385 07c3 4508CA   		or	r10b, r9b	# tmp499, tmp501
 1386 07c6 0F843808 		je	.L56	#,
 1386      0000
 1387 07cc 48837C24 		cmp	QWORD PTR -32[rsp], 5	# %sfp,
 1387      E005
 1388 07d2 410F97C2 		seta	r10b	#, tmp504
 1389 07d6 4C3B6C24 		cmp	r13, QWORD PTR -24[rsp]	# _175, %sfp
 1389      E8
 1390 07db 410F96C1 		setbe	r9b	#, tmp506
 1391 07df 4584CA   		test	r10b, r9b	# tmp504, tmp506
 1392 07e2 0F841C08 		je	.L56	#,
 1392      0000
 1393 07e8 4D29C3   		sub	r11, r8	# tmp508, copy_word
 1394 07eb 4C3B6C24 		cmp	r13, QWORD PTR -24[rsp]	# _175, %sfp
 1394      E8
 1395 07f0 41B90100 		mov	r9d, 1	# tmp509,
 1395      0000
 1396 07f6 4D0F46CB 		cmovbe	r9, r11	# tmp508,, niters.167
 1397 07fa 4801FA   		add	rdx, rdi	# vectp.168, bitarray
 1398 07fd 48C1EA03 		shr	rdx, 3	# tmp511,
 1399 0801 48F7DA   		neg	rdx	# tmp512
 1400 0804 83E203   		and	edx, 3	# prolog_loop_niters.169,
 1401 0807 0F847B0A 		je	.L77	#,
 1401      0000
GAS LISTING /tmp/ccjg94QQ.s 			page 46


 843:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1402              		.loc 1 843 9 is_stmt 1 view .LVU405
 1403              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1404              		.loc 1 843 99 is_stmt 0 view .LVU406
 1405 080d 488B5C1F 		mov	rbx, QWORD PTR 8[rdi+rbx]	# *_354, *_354
 1405      08
 1406              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1407              		.loc 1 843 83 view .LVU407
 1408 0812 4C8D5601 		lea	r10, 1[rsi]	# tmp566,
 1409              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1410              		.loc 1 843 99 view .LVU408
 1411 0816 C46289F7 		shlx	r11, rbx, r14	# tmp513, *_354, shift
 1411      DB
 1412              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1413              		.loc 1 843 54 view .LVU409
 1414 081b C4E2FBF7 		shrx	rbx, QWORD PTR [rdi+rsi*8], rax	# tmp515, *_349, shift_flipped
 1414      1CF7
 1415              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1416              		.loc 1 843 83 view .LVU410
 1417 0821 4C895424 		mov	QWORD PTR -40[rsp], r10	# %sfp, tmp566
 1417      D8
 1418              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1419              		.loc 1 843 72 view .LVU411
 1420 0826 4909DB   		or	r11, rbx	# tmp517, tmp515
 1421 0829 4E891C27 		mov	QWORD PTR [rdi+r12], r11	# *_358, tmp517
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1422              		.loc 1 842 48 is_stmt 1 view .LVU412
 1423              	.LVL74:
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1424              		.loc 1 842 12 view .LVU413
 1425 082d 4883FA01 		cmp	rdx, 1	# prolog_loop_niters.169,
 1426              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1427              		.loc 1 843 29 is_stmt 0 view .LVU414
 1428 0831 4D89EC   		mov	r12, r13	# copy_word, _175
 1429 0834 745E     		je	.L67	#,
 1430              		.loc 1 843 9 is_stmt 1 view .LVU415
 1431              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1432              		.loc 1 843 40 is_stmt 0 view .LVU416
 1433 0836 4E8D24D5 		lea	r12, 0[0+r10*8]	# _367,
 1433      00000000 
 1434              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1435              		.loc 1 843 83 view .LVU417
 1436 083e 4C8D5E02 		lea	r11, 2[rsi]	# source_word,
 1437              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1438              		.loc 1 843 54 view .LVU418
 1439 0842 4A8B1C27 		mov	rbx, QWORD PTR [rdi+r12]	# *_368, *_368
 1440              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1441              		.loc 1 843 83 view .LVU419
 1442 0846 4C895C24 		mov	QWORD PTR -40[rsp], r11	# %sfp, source_word
 1442      D8
 1443              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1444              		.loc 1 843 99 view .LVU420
 1445 084b C42289F7 		shlx	r11, QWORD PTR 8[rdi+r12], r14	# tmp518, *_373, shift
 1445      5C2708
 1446              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1447              		.loc 1 843 54 view .LVU421
 1448 0852 C462FBF7 		shrx	r12, rbx, rax	# tmp520, *_368, shift_flipped
GAS LISTING /tmp/ccjg94QQ.s 			page 47


 1448      E3
 1449              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1450              		.loc 1 843 72 view .LVU422
 1451 0857 4D09E3   		or	r11, r12	# tmp522, tmp520
 1452 085a 4883FA03 		cmp	rdx, 3	# prolog_loop_niters.169,
 1453              	# sieve_extend.c:842:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1454              		.loc 1 842 57 view .LVU423
 1455 085e 4D8D6003 		lea	r12, 3[r8]	# copy_word,
 1456              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1457              		.loc 1 843 72 view .LVU424
 1458 0862 4E891CEF 		mov	QWORD PTR [rdi+r13*8], r11	# *_377, tmp522
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1459              		.loc 1 842 48 is_stmt 1 view .LVU425
 1460              	.LVL75:
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1461              		.loc 1 842 12 view .LVU426
 1462 0866 752C     		jne	.L67	#,
 1463              		.loc 1 843 9 view .LVU427
 1464              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1465              		.loc 1 843 40 is_stmt 0 view .LVU428
 1466 0868 488D5E02 		lea	rbx, 2[rsi]	# source_word,
 1467              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1468              		.loc 1 843 83 view .LVU429
 1469 086c 4C8D5E03 		lea	r11, 3[rsi]	# source_word,
 1470 0870 4C895C24 		mov	QWORD PTR -40[rsp], r11	# %sfp, source_word
 1470      D8
 1471              	.LVL76:
 1472              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1473              		.loc 1 843 40 view .LVU430
 1474 0875 48C1E303 		sal	rbx, 3	# source_word,
 1475              	.LVL77:
 1476              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1477              		.loc 1 843 99 view .LVU431
 1478 0879 C46289F7 		shlx	r11, QWORD PTR 8[rdi+rbx], r14	# tmp523, *_111, shift
 1478      5C1F08
 1479              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1480              		.loc 1 843 54 view .LVU432
 1481 0880 488B1C1F 		mov	rbx, QWORD PTR [rdi+rbx]	# *_121, *_121
 1482 0884 C4E2FBF7 		shrx	rbx, rbx, rax	# tmp525, *_121, shift_flipped
 1482      DB
 1483              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1484              		.loc 1 843 72 view .LVU433
 1485 0889 4909DB   		or	r11, rbx	# tmp527, tmp525
 1486 088c 4E891CE7 		mov	QWORD PTR [rdi+r12*8], r11	# *_103, tmp527
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1487              		.loc 1 842 48 is_stmt 1 view .LVU434
 1488              	# sieve_extend.c:842:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1489              		.loc 1 842 57 is_stmt 0 view .LVU435
 1490 0890 4D8D6004 		lea	r12, 4[r8]	# copy_word,
 1491              	.LVL78:
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1492              		.loc 1 842 12 is_stmt 1 view .LVU436
 1493              	.L67:
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1494              		.loc 1 842 12 is_stmt 0 view .LVU437
GAS LISTING /tmp/ccjg94QQ.s 			page 48


 1495 0894 4901D2   		add	r10, rdx	# tmp531, prolog_loop_niters.169
 1496 0897 4929D1   		sub	r9, rdx	# niters.170, prolog_loop_niters.169
 1497 089a 4E8D04D7 		lea	r8, [rdi+r10*8]	# vectp.180,
 1498 089e 4D89CA   		mov	r10, r9	# bnd.171, niters.170
 1499 08a1 49C1EA02 		shr	r10, 2	# bnd.171,
 1500 08a5 4801D6   		add	rsi, rdx	# tmp528, prolog_loop_niters.169
 1501 08a8 49C1E205 		sal	r10, 5	# _469,
 1502 08ac 4801D1   		add	rcx, rdx	# tmp533, prolog_loop_niters.169
 1503 08af 4D8D5AE0 		lea	r11, -32[r10]	# tmp588,
 1504              	# sieve_extend.c:827:     copy_word++;
 827:sieve_extend.c **** 
 1505              		.loc 1 827 14 view .LVU438
 1506 08b3 31D2     		xor	edx, edx	# ivtmp.218
 1507 08b5 488D34F7 		lea	rsi, [rdi+rsi*8]	# vectp.176,
 1508 08b9 488D0CCF 		lea	rcx, [rdi+rcx*8]	# vectp.185,
 1509 08bd 49C1EB05 		shr	r11, 5	# tmp586,
 1510 08c1 C5F96E4C 		vmovd	xmm1, DWORD PTR -16[rsp]	# _184, %sfp
 1510      24F0
 1511 08c7 4983C301 		add	r11, 1	# tmp589,
 1512 08cb C5F96E44 		vmovd	xmm0, DWORD PTR -12[rsp]	# _182, %sfp
 1512      24F4
 1513 08d1 4183E307 		and	r11d, 7	# tmp590,
 1514 08d5 0F841A01 		je	.L69	#,
 1514      0000
 1515 08db 4983FB01 		cmp	r11, 1	# tmp590,
 1516 08df 0F84E700 		je	.L191	#,
 1516      0000
 1517 08e5 4983FB02 		cmp	r11, 2	# tmp590,
 1518 08e9 0F84BD00 		je	.L192	#,
 1518      0000
 1519 08ef 4983FB03 		cmp	r11, 3	# tmp590,
 1520 08f3 0F849200 		je	.L193	#,
 1520      0000
 1521 08f9 4983FB04 		cmp	r11, 4	# tmp590,
 1522 08fd 746C     		je	.L194	#,
 1523 08ff 4983FB05 		cmp	r11, 5	# tmp590,
 1524 0903 7445     		je	.L195	#,
 1525 0905 4983FB06 		cmp	r11, 6	# tmp590,
 1526 0909 741E     		je	.L196	#,
 1527              		.loc 1 843 9 is_stmt 1 view .LVU439
 1528              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1529              		.loc 1 843 54 is_stmt 0 view .LVU440
 1530 090b C5FD6F36 		vmovdqa	ymm6, YMMWORD PTR [rsi]	# tmp1085, MEM[base: vectp.176_10, index: ivtmp.218_467, offset: 0
 1531 090f BA200000 		mov	edx, 32	# ivtmp.218,
 1531      00
 1532              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1533              		.loc 1 843 99 view .LVU441
 1534 0914 C4C17E6F 		vmovdqu	ymm7, YMMWORD PTR [r8]	# tmp1086, MEM[base: vectp.180_17, index: ivtmp.218_467, offset: 0B
 1534      38
 1535              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1536              		.loc 1 843 54 view .LVU442
 1537 0919 C5CDD3D1 		vpsrlq	ymm2, ymm6, xmm1	# vect__62.178, tmp1085, _184
 1538              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1539              		.loc 1 843 99 view .LVU443
 1540 091d C5C5F3D8 		vpsllq	ymm3, ymm7, xmm0	# vect__67.182, tmp1086, _182
 1541              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1542              		.loc 1 843 72 view .LVU444
GAS LISTING /tmp/ccjg94QQ.s 			page 49


 1543 0921 C5EDEBE3 		vpor	ymm4, ymm2, ymm3	# vect__70.183, vect__62.178, vect__67.182
 1544              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1545              		.loc 1 843 29 view .LVU445
 1546 0925 C5FE7F21 		vmovdqu	YMMWORD PTR [rcx], ymm4	# MEM[base: vectp.185_212, index: ivtmp.218_467, offset: 0B], vect
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1547              		.loc 1 842 48 is_stmt 1 view .LVU446
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1548              		.loc 1 842 12 view .LVU447
 1549              	.L196:
 1550              		.loc 1 843 9 view .LVU448
 1551              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1552              		.loc 1 843 54 is_stmt 0 view .LVU449
 1553 0929 C5FD6F2C 		vmovdqa	ymm5, YMMWORD PTR [rsi+rdx]	# tmp1087, MEM[base: vectp.176_10, index: ivtmp.218_467, offse
 1553      16
 1554              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1555              		.loc 1 843 99 view .LVU450
 1556 092e C4417E6F 		vmovdqu	ymm9, YMMWORD PTR [r8+rdx]	# tmp1088, MEM[base: vectp.180_17, index: ivtmp.218_467, offset
 1556      0C10
 1557              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1558              		.loc 1 843 54 view .LVU451
 1559 0934 C555D3C1 		vpsrlq	ymm8, ymm5, xmm1	# vect__62.178, tmp1087, _184
 1560              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1561              		.loc 1 843 99 view .LVU452
 1562 0938 C535F3D0 		vpsllq	ymm10, ymm9, xmm0	# vect__67.182, tmp1088, _182
 1563              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1564              		.loc 1 843 72 view .LVU453
 1565 093c C4413DEB 		vpor	ymm11, ymm8, ymm10	# vect__70.183, vect__62.178, vect__67.182
 1565      DA
 1566              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1567              		.loc 1 843 29 view .LVU454
 1568 0941 C57E7F1C 		vmovdqu	YMMWORD PTR [rcx+rdx], ymm11	# MEM[base: vectp.185_212, index: ivtmp.218_467, offset: 0B],
 1568      11
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1569              		.loc 1 842 48 is_stmt 1 view .LVU455
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1570              		.loc 1 842 12 view .LVU456
 1571 0946 4883C220 		add	rdx, 32	# ivtmp.218,
 1572              	.L195:
 1573              		.loc 1 843 9 view .LVU457
 1574              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1575              		.loc 1 843 54 is_stmt 0 view .LVU458
 1576 094a C57D6F24 		vmovdqa	ymm12, YMMWORD PTR [rsi+rdx]	# tmp1089, MEM[base: vectp.176_10, index: ivtmp.218_467, offs
 1576      16
 1577              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1578              		.loc 1 843 99 view .LVU459
 1579 094f C4417E6F 		vmovdqu	ymm14, YMMWORD PTR [r8+rdx]	# tmp1090, MEM[base: vectp.180_17, index: ivtmp.218_467, offse
 1579      3410
 1580              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1581              		.loc 1 843 54 view .LVU460
 1582 0955 C51DD3E9 		vpsrlq	ymm13, ymm12, xmm1	# vect__62.178, tmp1089, _184
 1583              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1584              		.loc 1 843 99 view .LVU461
 1585 0959 C50DF3F8 		vpsllq	ymm15, ymm14, xmm0	# vect__67.182, tmp1090, _182
 1586              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1587              		.loc 1 843 72 view .LVU462
 1588 095d C4C115EB 		vpor	ymm6, ymm13, ymm15	# vect__70.183, vect__62.178, vect__67.182
 1588      F7
GAS LISTING /tmp/ccjg94QQ.s 			page 50


 1589              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1590              		.loc 1 843 29 view .LVU463
 1591 0962 C5FE7F34 		vmovdqu	YMMWORD PTR [rcx+rdx], ymm6	# MEM[base: vectp.185_212, index: ivtmp.218_467, offset: 0B], 
 1591      11
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1592              		.loc 1 842 48 is_stmt 1 view .LVU464
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1593              		.loc 1 842 12 view .LVU465
 1594 0967 4883C220 		add	rdx, 32	# ivtmp.218,
 1595              	.L194:
 1596              		.loc 1 843 9 view .LVU466
 1597              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1598              		.loc 1 843 54 is_stmt 0 view .LVU467
 1599 096b C5FD6F14 		vmovdqa	ymm2, YMMWORD PTR [rsi+rdx]	# tmp1091, MEM[base: vectp.176_10, index: ivtmp.218_467, offse
 1599      16
 1600              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1601              		.loc 1 843 99 view .LVU468
 1602 0970 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR [r8+rdx]	# tmp1092, MEM[base: vectp.180_17, index: ivtmp.218_467, offset
 1602      1C10
 1603              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1604              		.loc 1 843 54 view .LVU469
 1605 0976 C5EDD3F9 		vpsrlq	ymm7, ymm2, xmm1	# vect__62.178, tmp1091, _184
 1606              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1607              		.loc 1 843 99 view .LVU470
 1608 097a C5E5F3E0 		vpsllq	ymm4, ymm3, xmm0	# vect__67.182, tmp1092, _182
 1609              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1610              		.loc 1 843 72 view .LVU471
 1611 097e C5C5EBEC 		vpor	ymm5, ymm7, ymm4	# vect__70.183, vect__62.178, vect__67.182
 1612              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1613              		.loc 1 843 29 view .LVU472
 1614 0982 C5FE7F2C 		vmovdqu	YMMWORD PTR [rcx+rdx], ymm5	# MEM[base: vectp.185_212, index: ivtmp.218_467, offset: 0B], 
 1614      11
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1615              		.loc 1 842 48 is_stmt 1 view .LVU473
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1616              		.loc 1 842 12 view .LVU474
 1617 0987 4883C220 		add	rdx, 32	# ivtmp.218,
 1618              	.L193:
 1619              		.loc 1 843 9 view .LVU475
 1620              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1621              		.loc 1 843 54 is_stmt 0 view .LVU476
 1622 098b C57D6F04 		vmovdqa	ymm8, YMMWORD PTR [rsi+rdx]	# tmp1093, MEM[base: vectp.176_10, index: ivtmp.218_467, offse
 1622      16
 1623              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1624              		.loc 1 843 99 view .LVU477
 1625 0990 C4417E6F 		vmovdqu	ymm10, YMMWORD PTR [r8+rdx]	# tmp1094, MEM[base: vectp.180_17, index: ivtmp.218_467, offse
 1625      1410
 1626              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1627              		.loc 1 843 54 view .LVU478
 1628 0996 C53DD3C9 		vpsrlq	ymm9, ymm8, xmm1	# vect__62.178, tmp1093, _184
 1629              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1630              		.loc 1 843 99 view .LVU479
 1631 099a C52DF3D8 		vpsllq	ymm11, ymm10, xmm0	# vect__67.182, tmp1094, _182
 1632              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1633              		.loc 1 843 72 view .LVU480
 1634 099e C44135EB 		vpor	ymm12, ymm9, ymm11	# vect__70.183, vect__62.178, vect__67.182
 1634      E3
GAS LISTING /tmp/ccjg94QQ.s 			page 51


 1635              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1636              		.loc 1 843 29 view .LVU481
 1637 09a3 C57E7F24 		vmovdqu	YMMWORD PTR [rcx+rdx], ymm12	# MEM[base: vectp.185_212, index: ivtmp.218_467, offset: 0B],
 1637      11
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1638              		.loc 1 842 48 is_stmt 1 view .LVU482
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1639              		.loc 1 842 12 view .LVU483
 1640 09a8 4883C220 		add	rdx, 32	# ivtmp.218,
 1641              	.L192:
 1642              		.loc 1 843 9 view .LVU484
 1643              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1644              		.loc 1 843 54 is_stmt 0 view .LVU485
 1645 09ac C57D6F2C 		vmovdqa	ymm13, YMMWORD PTR [rsi+rdx]	# tmp1095, MEM[base: vectp.176_10, index: ivtmp.218_467, offs
 1645      16
 1646              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1647              		.loc 1 843 99 view .LVU486
 1648 09b1 C4417E6F 		vmovdqu	ymm15, YMMWORD PTR [r8+rdx]	# tmp1096, MEM[base: vectp.180_17, index: ivtmp.218_467, offse
 1648      3C10
 1649              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1650              		.loc 1 843 54 view .LVU487
 1651 09b7 C515D3F1 		vpsrlq	ymm14, ymm13, xmm1	# vect__62.178, tmp1095, _184
 1652              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1653              		.loc 1 843 99 view .LVU488
 1654 09bb C585F3F0 		vpsllq	ymm6, ymm15, xmm0	# vect__67.182, tmp1096, _182
 1655              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1656              		.loc 1 843 72 view .LVU489
 1657 09bf C58DEBD6 		vpor	ymm2, ymm14, ymm6	# vect__70.183, vect__62.178, vect__67.182
 1658              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1659              		.loc 1 843 29 view .LVU490
 1660 09c3 C5FE7F14 		vmovdqu	YMMWORD PTR [rcx+rdx], ymm2	# MEM[base: vectp.185_212, index: ivtmp.218_467, offset: 0B], 
 1660      11
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1661              		.loc 1 842 48 is_stmt 1 view .LVU491
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1662              		.loc 1 842 12 view .LVU492
 1663 09c8 4883C220 		add	rdx, 32	# ivtmp.218,
 1664              	.L191:
 1665              		.loc 1 843 9 view .LVU493
 1666              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1667              		.loc 1 843 54 is_stmt 0 view .LVU494
 1668 09cc C5FD6F3C 		vmovdqa	ymm7, YMMWORD PTR [rsi+rdx]	# tmp1097, MEM[base: vectp.176_10, index: ivtmp.218_467, offse
 1668      16
 1669              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1670              		.loc 1 843 99 view .LVU495
 1671 09d1 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR [r8+rdx]	# tmp1098, MEM[base: vectp.180_17, index: ivtmp.218_467, offset
 1671      1C10
 1672              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1673              		.loc 1 843 54 view .LVU496
 1674 09d7 C5C5D3E1 		vpsrlq	ymm4, ymm7, xmm1	# vect__62.178, tmp1097, _184
 1675              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1676              		.loc 1 843 99 view .LVU497
 1677 09db C5E5F3E8 		vpsllq	ymm5, ymm3, xmm0	# vect__67.182, tmp1098, _182
 1678              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1679              		.loc 1 843 72 view .LVU498
 1680 09df C55DEBC5 		vpor	ymm8, ymm4, ymm5	# vect__70.183, vect__62.178, vect__67.182
 1681              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
GAS LISTING /tmp/ccjg94QQ.s 			page 52


 1682              		.loc 1 843 29 view .LVU499
 1683 09e3 C57E7F04 		vmovdqu	YMMWORD PTR [rcx+rdx], ymm8	# MEM[base: vectp.185_212, index: ivtmp.218_467, offset: 0B], 
 1683      11
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1684              		.loc 1 842 48 is_stmt 1 view .LVU500
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1685              		.loc 1 842 12 view .LVU501
 1686 09e8 4883C220 		add	rdx, 32	# ivtmp.218,
 1687 09ec 4C39D2   		cmp	rdx, r10	# ivtmp.218, _469
 1688 09ef 0F842E01 		je	.L244	#,
 1688      0000
 1689              	.L69:
 1690              		.loc 1 843 9 discriminator 2 view .LVU502
 1691              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1692              		.loc 1 843 54 is_stmt 0 discriminator 2 view .LVU503
 1693 09f5 C57D6F0C 		vmovdqa	ymm9, YMMWORD PTR [rsi+rdx]	# tmp1015, MEM[base: vectp.176_10, index: ivtmp.218_467, offse
 1693      16
 1694              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1695              		.loc 1 843 99 discriminator 2 view .LVU504
 1696 09fa C4417E6F 		vmovdqu	ymm11, YMMWORD PTR [r8+rdx]	# tmp1016, MEM[base: vectp.180_17, index: ivtmp.218_467, offse
 1696      1C10
 1697              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1698              		.loc 1 843 54 discriminator 2 view .LVU505
 1699 0a00 C535D3D1 		vpsrlq	ymm10, ymm9, xmm1	# vect__62.178, tmp1015, _184
 1700              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1701              		.loc 1 843 99 discriminator 2 view .LVU506
 1702 0a04 C525F3E0 		vpsllq	ymm12, ymm11, xmm0	# vect__67.182, tmp1016, _182
 1703              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1704              		.loc 1 843 72 discriminator 2 view .LVU507
 1705 0a08 C4412DEB 		vpor	ymm13, ymm10, ymm12	# vect__70.183, vect__62.178, vect__67.182
 1705      EC
 1706              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1707              		.loc 1 843 29 discriminator 2 view .LVU508
 1708 0a0d C57E7F2C 		vmovdqu	YMMWORD PTR [rcx+rdx], ymm13	# MEM[base: vectp.185_212, index: ivtmp.218_467, offset: 0B],
 1708      11
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1709              		.loc 1 842 48 is_stmt 1 discriminator 2 view .LVU509
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1710              		.loc 1 842 12 discriminator 2 view .LVU510
 1711              		.loc 1 843 9 discriminator 2 view .LVU511
 1712              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1713              		.loc 1 843 54 is_stmt 0 discriminator 2 view .LVU512
 1714 0a12 C57D6F74 		vmovdqa	ymm14, YMMWORD PTR 32[rsi+rdx]	# tmp1017, MEM[base: vectp.176_10, index: ivtmp.218_467, of
 1714      1620
 1715              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1716              		.loc 1 843 99 discriminator 2 view .LVU513
 1717 0a18 C4C17E6F 		vmovdqu	ymm6, YMMWORD PTR 32[r8+rdx]	# tmp1018, MEM[base: vectp.180_17, index: ivtmp.218_467, offs
 1717      741020
 1718              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1719              		.loc 1 843 54 discriminator 2 view .LVU514
 1720 0a1f C50DD3F9 		vpsrlq	ymm15, ymm14, xmm1	# vect__62.178, tmp1017, _184
 1721              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1722              		.loc 1 843 99 discriminator 2 view .LVU515
 1723 0a23 C5CDF3D0 		vpsllq	ymm2, ymm6, xmm0	# vect__67.182, tmp1018, _182
 1724              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1725              		.loc 1 843 72 discriminator 2 view .LVU516
 1726 0a27 C585EBFA 		vpor	ymm7, ymm15, ymm2	# vect__70.183, vect__62.178, vect__67.182
GAS LISTING /tmp/ccjg94QQ.s 			page 53


 1727              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1728              		.loc 1 843 29 discriminator 2 view .LVU517
 1729 0a2b C5FE7F7C 		vmovdqu	YMMWORD PTR 32[rcx+rdx], ymm7	# MEM[base: vectp.185_212, index: ivtmp.218_467, offset: 0B]
 1729      1120
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1730              		.loc 1 842 48 is_stmt 1 discriminator 2 view .LVU518
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1731              		.loc 1 842 12 discriminator 2 view .LVU519
 1732              		.loc 1 843 9 discriminator 2 view .LVU520
 1733              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1734              		.loc 1 843 54 is_stmt 0 discriminator 2 view .LVU521
 1735 0a31 C5FD6F64 		vmovdqa	ymm4, YMMWORD PTR 64[rsi+rdx]	# tmp1019, MEM[base: vectp.176_10, index: ivtmp.218_467, off
 1735      1640
 1736              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1737              		.loc 1 843 99 discriminator 2 view .LVU522
 1738 0a37 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR 64[r8+rdx]	# tmp1020, MEM[base: vectp.180_17, index: ivtmp.218_467, offs
 1738      5C1040
 1739              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1740              		.loc 1 843 54 discriminator 2 view .LVU523
 1741 0a3e C5DDD3E9 		vpsrlq	ymm5, ymm4, xmm1	# vect__62.178, tmp1019, _184
 1742              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1743              		.loc 1 843 99 discriminator 2 view .LVU524
 1744 0a42 C565F3C0 		vpsllq	ymm8, ymm3, xmm0	# vect__67.182, tmp1020, _182
 1745              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1746              		.loc 1 843 72 discriminator 2 view .LVU525
 1747 0a46 C44155EB 		vpor	ymm9, ymm5, ymm8	# vect__70.183, vect__62.178, vect__67.182
 1747      C8
 1748              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1749              		.loc 1 843 29 discriminator 2 view .LVU526
 1750 0a4b C57E7F4C 		vmovdqu	YMMWORD PTR 64[rcx+rdx], ymm9	# MEM[base: vectp.185_212, index: ivtmp.218_467, offset: 0B]
 1750      1140
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1751              		.loc 1 842 48 is_stmt 1 discriminator 2 view .LVU527
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1752              		.loc 1 842 12 discriminator 2 view .LVU528
 1753              		.loc 1 843 9 discriminator 2 view .LVU529
 1754              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1755              		.loc 1 843 54 is_stmt 0 discriminator 2 view .LVU530
 1756 0a51 C57D6F54 		vmovdqa	ymm10, YMMWORD PTR 96[rsi+rdx]	# tmp1021, MEM[base: vectp.176_10, index: ivtmp.218_467, of
 1756      1660
 1757              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1758              		.loc 1 843 99 discriminator 2 view .LVU531
 1759 0a57 C4417E6F 		vmovdqu	ymm12, YMMWORD PTR 96[r8+rdx]	# tmp1022, MEM[base: vectp.180_17, index: ivtmp.218_467, off
 1759      641060
 1760              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1761              		.loc 1 843 54 discriminator 2 view .LVU532
 1762 0a5e C52DD3D9 		vpsrlq	ymm11, ymm10, xmm1	# vect__62.178, tmp1021, _184
 1763              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1764              		.loc 1 843 99 discriminator 2 view .LVU533
 1765 0a62 C51DF3E8 		vpsllq	ymm13, ymm12, xmm0	# vect__67.182, tmp1022, _182
 1766              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1767              		.loc 1 843 72 discriminator 2 view .LVU534
 1768 0a66 C44125EB 		vpor	ymm14, ymm11, ymm13	# vect__70.183, vect__62.178, vect__67.182
 1768      F5
 1769              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1770              		.loc 1 843 29 discriminator 2 view .LVU535
 1771 0a6b C57E7F74 		vmovdqu	YMMWORD PTR 96[rcx+rdx], ymm14	# MEM[base: vectp.185_212, index: ivtmp.218_467, offset: 0B
GAS LISTING /tmp/ccjg94QQ.s 			page 54


 1771      1160
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1772              		.loc 1 842 48 is_stmt 1 discriminator 2 view .LVU536
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1773              		.loc 1 842 12 discriminator 2 view .LVU537
 1774              		.loc 1 843 9 discriminator 2 view .LVU538
 1775              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1776              		.loc 1 843 54 is_stmt 0 discriminator 2 view .LVU539
 1777 0a71 C57D6FBC 		vmovdqa	ymm15, YMMWORD PTR 128[rsi+rdx]	# tmp1023, MEM[base: vectp.176_10, index: ivtmp.218_467, o
 1777      16800000 
 1777      00
 1778              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1779              		.loc 1 843 99 discriminator 2 view .LVU540
 1780 0a7a C4C17E6F 		vmovdqu	ymm2, YMMWORD PTR 128[r8+rdx]	# tmp1024, MEM[base: vectp.180_17, index: ivtmp.218_467, off
 1780      94108000 
 1780      0000
 1781              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1782              		.loc 1 843 54 discriminator 2 view .LVU541
 1783 0a84 C585D3F1 		vpsrlq	ymm6, ymm15, xmm1	# vect__62.178, tmp1023, _184
 1784              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1785              		.loc 1 843 99 discriminator 2 view .LVU542
 1786 0a88 C5EDF3F8 		vpsllq	ymm7, ymm2, xmm0	# vect__67.182, tmp1024, _182
 1787              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1788              		.loc 1 843 72 discriminator 2 view .LVU543
 1789 0a8c C5CDEBE7 		vpor	ymm4, ymm6, ymm7	# vect__70.183, vect__62.178, vect__67.182
 1790              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1791              		.loc 1 843 29 discriminator 2 view .LVU544
 1792 0a90 C5FE7FA4 		vmovdqu	YMMWORD PTR 128[rcx+rdx], ymm4	# MEM[base: vectp.185_212, index: ivtmp.218_467, offset: 0B
 1792      11800000 
 1792      00
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1793              		.loc 1 842 48 is_stmt 1 discriminator 2 view .LVU545
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1794              		.loc 1 842 12 discriminator 2 view .LVU546
 1795              		.loc 1 843 9 discriminator 2 view .LVU547
 1796              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1797              		.loc 1 843 54 is_stmt 0 discriminator 2 view .LVU548
 1798 0a99 C5FD6FAC 		vmovdqa	ymm5, YMMWORD PTR 160[rsi+rdx]	# tmp1025, MEM[base: vectp.176_10, index: ivtmp.218_467, of
 1798      16A00000 
 1798      00
 1799              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1800              		.loc 1 843 99 discriminator 2 view .LVU549
 1801 0aa2 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR 160[r8+rdx]	# tmp1026, MEM[base: vectp.180_17, index: ivtmp.218_467, off
 1801      9C10A000 
 1801      0000
 1802              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1803              		.loc 1 843 54 discriminator 2 view .LVU550
 1804 0aac C555D3C1 		vpsrlq	ymm8, ymm5, xmm1	# vect__62.178, tmp1025, _184
 1805              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1806              		.loc 1 843 99 discriminator 2 view .LVU551
 1807 0ab0 C565F3C8 		vpsllq	ymm9, ymm3, xmm0	# vect__67.182, tmp1026, _182
 1808              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1809              		.loc 1 843 72 discriminator 2 view .LVU552
 1810 0ab4 C4413DEB 		vpor	ymm10, ymm8, ymm9	# vect__70.183, vect__62.178, vect__67.182
 1810      D1
 1811              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1812              		.loc 1 843 29 discriminator 2 view .LVU553
GAS LISTING /tmp/ccjg94QQ.s 			page 55


 1813 0ab9 C57E7F94 		vmovdqu	YMMWORD PTR 160[rcx+rdx], ymm10	# MEM[base: vectp.185_212, index: ivtmp.218_467, offset: 0
 1813      11A00000 
 1813      00
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1814              		.loc 1 842 48 is_stmt 1 discriminator 2 view .LVU554
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1815              		.loc 1 842 12 discriminator 2 view .LVU555
 1816              		.loc 1 843 9 discriminator 2 view .LVU556
 1817              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1818              		.loc 1 843 54 is_stmt 0 discriminator 2 view .LVU557
 1819 0ac2 C57D6F9C 		vmovdqa	ymm11, YMMWORD PTR 192[rsi+rdx]	# tmp1027, MEM[base: vectp.176_10, index: ivtmp.218_467, o
 1819      16C00000 
 1819      00
 1820              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1821              		.loc 1 843 99 discriminator 2 view .LVU558
 1822 0acb C4417E6F 		vmovdqu	ymm13, YMMWORD PTR 192[r8+rdx]	# tmp1028, MEM[base: vectp.180_17, index: ivtmp.218_467, of
 1822      AC10C000 
 1822      0000
 1823              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1824              		.loc 1 843 54 discriminator 2 view .LVU559
 1825 0ad5 C525D3E1 		vpsrlq	ymm12, ymm11, xmm1	# vect__62.178, tmp1027, _184
 1826              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1827              		.loc 1 843 99 discriminator 2 view .LVU560
 1828 0ad9 C515F3F0 		vpsllq	ymm14, ymm13, xmm0	# vect__67.182, tmp1028, _182
 1829              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1830              		.loc 1 843 72 discriminator 2 view .LVU561
 1831 0add C4411DEB 		vpor	ymm15, ymm12, ymm14	# vect__70.183, vect__62.178, vect__67.182
 1831      FE
 1832              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1833              		.loc 1 843 29 discriminator 2 view .LVU562
 1834 0ae2 C57E7FBC 		vmovdqu	YMMWORD PTR 192[rcx+rdx], ymm15	# MEM[base: vectp.185_212, index: ivtmp.218_467, offset: 0
 1834      11C00000 
 1834      00
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1835              		.loc 1 842 48 is_stmt 1 discriminator 2 view .LVU563
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1836              		.loc 1 842 12 discriminator 2 view .LVU564
 1837              		.loc 1 843 9 discriminator 2 view .LVU565
 1838              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1839              		.loc 1 843 54 is_stmt 0 discriminator 2 view .LVU566
 1840 0aeb C5FD6FB4 		vmovdqa	ymm6, YMMWORD PTR 224[rsi+rdx]	# tmp1029, MEM[base: vectp.176_10, index: ivtmp.218_467, of
 1840      16E00000 
 1840      00
 1841              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1842              		.loc 1 843 99 discriminator 2 view .LVU567
 1843 0af4 C4C17E6F 		vmovdqu	ymm7, YMMWORD PTR 224[r8+rdx]	# tmp1030, MEM[base: vectp.180_17, index: ivtmp.218_467, off
 1843      BC10E000 
 1843      0000
 1844              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1845              		.loc 1 843 54 discriminator 2 view .LVU568
 1846 0afe C5CDD3D1 		vpsrlq	ymm2, ymm6, xmm1	# vect__62.178, tmp1029, _184
 1847              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1848              		.loc 1 843 99 discriminator 2 view .LVU569
 1849 0b02 C5C5F3E0 		vpsllq	ymm4, ymm7, xmm0	# vect__67.182, tmp1030, _182
 1850              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1851              		.loc 1 843 72 discriminator 2 view .LVU570
 1852 0b06 C5EDEBEC 		vpor	ymm5, ymm2, ymm4	# vect__70.183, vect__62.178, vect__67.182
GAS LISTING /tmp/ccjg94QQ.s 			page 56


 1853              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1854              		.loc 1 843 29 discriminator 2 view .LVU571
 1855 0b0a C5FE7FAC 		vmovdqu	YMMWORD PTR 224[rcx+rdx], ymm5	# MEM[base: vectp.185_212, index: ivtmp.218_467, offset: 0B
 1855      11E00000 
 1855      00
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1856              		.loc 1 842 48 is_stmt 1 discriminator 2 view .LVU572
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1857              		.loc 1 842 12 discriminator 2 view .LVU573
 1858 0b13 4881C200 		add	rdx, 256	# ivtmp.218,
 1858      010000
 1859 0b1a 4C39D2   		cmp	rdx, r10	# ivtmp.218, _469
 1860 0b1d 0F85D2FE 		jne	.L69	#,
 1860      FFFF
 1861              	.L244:
 1862 0b23 4C8B5424 		mov	r10, QWORD PTR -40[rsp]	# source_word, %sfp
 1862      D8
 1863 0b28 4C89CB   		mov	rbx, r9	# niters_vector_mult_vf.172, niters.170
 1864 0b2b 4883E3FC 		and	rbx, -4	# niters_vector_mult_vf.172,
 1865 0b2f 4901DC   		add	r12, rbx	# tmp.173, niters_vector_mult_vf.172
 1866 0b32 4901DA   		add	r10, rbx	# source_word, niters_vector_mult_vf.172
 1867 0b35 4C39CB   		cmp	rbx, r9	# niters_vector_mult_vf.172, niters.170
 1868 0b38 0F844207 		je	.L257	#,
 1868      0000
 1869              	.LVL79:
 1870              		.loc 1 843 9 view .LVU574
 1871              	# sieve_extend.c:842:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1872              		.loc 1 842 5 is_stmt 0 view .LVU575
 1873 0b3e 488B5424 		mov	rdx, QWORD PTR -8[rsp]	# destination_stop_word, %sfp
 1873      F8
 1874              	# sieve_extend.c:842:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1875              		.loc 1 842 57 view .LVU576
 1876 0b43 4D8D5C24 		lea	r11, 1[r12]	# copy_word,
 1876      01
 1877              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1878              		.loc 1 843 99 view .LVU577
 1879 0b48 C42289F7 		shlx	r8, QWORD PTR 8[rdi+r10*8], r14	# tmp545, *_66, shift
 1879      44D708
 1880              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1881              		.loc 1 843 54 view .LVU578
 1882 0b4f C4A2FBF7 		shrx	rsi, QWORD PTR [rdi+r10*8], rax	# tmp547, *_61, shift_flipped
 1882      34D7
 1883              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1884              		.loc 1 843 72 view .LVU579
 1885 0b55 4909F0   		or	r8, rsi	# tmp549, tmp547
 1886              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1887              		.loc 1 843 83 view .LVU580
 1888 0b58 4D8D4A01 		lea	r9, 1[r10]	# _64,
 1889              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1890              		.loc 1 843 72 view .LVU581
 1891 0b5c 4E8904E7 		mov	QWORD PTR [rdi+r12*8], r8	# *_70, tmp549
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1892              		.loc 1 842 48 is_stmt 1 view .LVU582
 1893              	.LVL80:
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
GAS LISTING /tmp/ccjg94QQ.s 			page 57


 1894              		.loc 1 842 12 view .LVU583
 1895              	# sieve_extend.c:842:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1896              		.loc 1 842 5 is_stmt 0 view .LVU584
 1897 0b60 4939D3   		cmp	r11, rdx	# copy_word, destination_stop_word
 1898 0b63 0F871707 		ja	.L257	#,
 1898      0000
 1899              		.loc 1 843 9 is_stmt 1 view .LVU585
 1900              	# sieve_extend.c:842:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1901              		.loc 1 842 57 is_stmt 0 view .LVU586
 1902 0b69 4983C402 		add	r12, 2	# copy_word,
 1903              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1904              		.loc 1 843 99 view .LVU587
 1905 0b6d C4A289F7 		shlx	rcx, QWORD PTR 8[rdi+r9*8], r14	# tmp550, *_53, shift
 1905      4CCF08
 1906              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1907              		.loc 1 843 54 view .LVU588
 1908 0b74 4A8B1CCF 		mov	rbx, QWORD PTR [rdi+r9*8]	# *_48, *_48
 1909              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1910              		.loc 1 843 83 view .LVU589
 1911 0b78 4983C202 		add	r10, 2	# _51,
 1912              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1913              		.loc 1 843 54 view .LVU590
 1914 0b7c C462FBF7 		shrx	r9, rbx, rax	# tmp552, *_48, shift_flipped
 1914      CB
 1915              	.LVL81:
 1916              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1917              		.loc 1 843 72 view .LVU591
 1918 0b81 4C09C9   		or	rcx, r9	# tmp554, tmp552
 1919 0b84 4A890CDF 		mov	QWORD PTR [rdi+r11*8], rcx	# *_57, tmp554
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1920              		.loc 1 842 48 is_stmt 1 view .LVU592
 1921              	.LVL82:
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1922              		.loc 1 842 12 view .LVU593
 1923              	# sieve_extend.c:842:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1924              		.loc 1 842 5 is_stmt 0 view .LVU594
 1925 0b88 4C39E2   		cmp	rdx, r12	# destination_stop_word, copy_word
 1926 0b8b 0F82EF06 		jb	.L257	#,
 1926      0000
 1927              		.loc 1 843 9 is_stmt 1 view .LVU595
 1928              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1929              		.loc 1 843 99 is_stmt 0 view .LVU596
 1930 0b91 C42289F7 		shlx	r14, QWORD PTR 8[rdi+r10*8], r14	# tmp555, *_36, shift
 1930      74D708
 1931              	.LVL83:
 1932              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1933              		.loc 1 843 54 view .LVU597
 1934 0b98 4E8B14D7 		mov	r10, QWORD PTR [rdi+r10*8]	# *_30, *_30
 1935              	.LVL84:
 1936              		.loc 1 843 54 view .LVU598
 1937 0b9c C4C2FBF7 		shrx	rax, r10, rax	# tmp557, *_30, shift_flipped
 1937      C2
 1938              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1939              		.loc 1 843 72 view .LVU599
GAS LISTING /tmp/ccjg94QQ.s 			page 58


 1940 0ba1 4C09F0   		or	rax, r14	# tmp559, tmp555
 1941 0ba4 4A8904E7 		mov	QWORD PTR [rdi+r12*8], rax	# *_40, tmp559
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1942              		.loc 1 842 48 is_stmt 1 view .LVU600
 1943              	.LVL85:
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1944              		.loc 1 842 12 view .LVU601
 1945 0ba8 C5F877   		vzeroupper
 1946              	.LVL86:
 1947              	.L73:
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1948              		.loc 1 842 12 is_stmt 0 view .LVU602
 1949 0bab 4C3B6C24 		cmp	r13, QWORD PTR -24[rsp]	# _175, %sfp
 1949      E8
 1950 0bb0 B9000000 		mov	ecx, 0	# tmp544,
 1950      00
 1951 0bb5 4C8B6424 		mov	r12, QWORD PTR -32[rsp]	#, %sfp
 1951      E0
 1952 0bba 490F46CC 		cmovbe	rcx, r12	#,, tmp543
 1953 0bbe 4C01E9   		add	rcx, r13	# copy_word, _175
 1954              	.L66:
 844:sieve_extend.c ****     }
 845:sieve_extend.c ****     bitarray[copy_word] &= chopmask(destination_stop);
 1955              		.loc 1 845 5 is_stmt 1 view .LVU603
 1956              	# sieve_extend.c:845:     bitarray[copy_word] &= chopmask(destination_stop);
 1957              		.loc 1 845 25 is_stmt 0 view .LVU604
 1958 0bc1 4C213CCF 		and	QWORD PTR [rdi+rcx*8], r15	# *_72, _193
 1959              	# sieve_extend.c:847: }
 846:sieve_extend.c **** 
 847:sieve_extend.c **** }
 1960              		.loc 1 847 1 view .LVU605
 1961 0bc5 488D65D8 		lea	rsp, -40[rbp]	#,
 1962 0bc9 5B       		pop	rbx	#
 1963 0bca 415C     		pop	r12	#
 1964 0bcc 415D     		pop	r13	#
 1965 0bce 415E     		pop	r14	#
 1966 0bd0 415F     		pop	r15	#
 1967 0bd2 5D       		pop	rbp	#
 1968              		.cfi_remember_state
 1969              		.cfi_def_cfa 7, 8
 1970 0bd3 C3       		ret	
 1971              	.LVL87:
 1972              		.p2align 4,,7
 1973 0bd4 0F1F4000 		.p2align 3
 1974              	.L261:
 1975              		.cfi_restore_state
 1976              	.LBB307:
 832:sieve_extend.c **** 
 1977              		.loc 1 832 9 is_stmt 1 view .LVU606
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1978              		.loc 1 836 9 view .LVU607
 1979              	.LBB308:
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1980              		.loc 1 836 14 view .LVU608
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1981              		.loc 1 836 40 view .LVU609
 1982              	# sieve_extend.c:836:         for (register counter_t i = 0; i <loop_distance; i++) {
GAS LISTING /tmp/ccjg94QQ.s 			page 59


 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1983              		.loc 1 836 9 is_stmt 0 view .LVU610
 1984 0bd8 4C8B6C24 		mov	r13, QWORD PTR -8[rsp]	# loop_distance, %sfp
 1984      F8
 1985 0bdd 4889F2   		mov	rdx, rsi	# source_word, source_word
 1986              	.LVL88:
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1987              		.loc 1 836 9 view .LVU611
 1988 0be0 4929CD   		sub	r13, rcx	# loop_distance, copy_word
 1989 0be3 4C896C24 		mov	QWORD PTR -24[rsp], r13	# %sfp, loop_distance
 1989      E8
 1990 0be8 0F84FB03 		je	.L62	#,
 1990      0000
 1991 0bee 4D8D5424 		lea	r10, 8[r12]	# tmp413,
 1991      08
 1992 0bf3 4C8D4B28 		lea	r9, 40[rbx]	# tmp412,
 1993 0bf7 4D39D1   		cmp	r9, r10	# tmp412, tmp413
 1994 0bfa 4C8D6B08 		lea	r13, 8[rbx]	# tmp417,
 1995 0bfe 410F9EC1 		setle	r9b	#, tmp415
 1996 0c02 4983C428 		add	r12, 40	# tmp416,
 1997 0c06 4D39EC   		cmp	r12, r13	# tmp416, tmp417
 1998 0c09 488D5601 		lea	rdx, 1[rsi]	# _232,
 1999 0c0d 410F9EC5 		setle	r13b	#, tmp419
 2000 0c11 4509E9   		or	r9d, r13d	# tmp420, tmp419
 2001 0c14 4C8D6B20 		lea	r13, 32[rbx]	# tmp421,
 2002 0c18 4D39D5   		cmp	r13, r10	# tmp421, tmp413
 2003 0c1b 410F9EC2 		setle	r10b	#, tmp424
 2004 0c1f 4939DC   		cmp	r12, rbx	# tmp416, _179
 2005 0c22 410F9EC4 		setle	r12b	#, tmp427
 2006 0c26 4509E2   		or	r10d, r12d	# tmp428, tmp427
 2007 0c29 4584D1   		test	r9b, r10b	# tmp420, tmp428
 2008 0c2c 0F846706 		je	.L57	#,
 2008      0000
 2009 0c32 4C8B4C24 		mov	r9, QWORD PTR -24[rsp]	# loop_distance, %sfp
 2009      E8
 2010 0c37 4D8D69FF 		lea	r13, -1[r9]	# tmp430,
 2011 0c3b 4983FD05 		cmp	r13, 5	# tmp430,
 2012 0c3f 0F865406 		jbe	.L57	#,
 2012      0000
 2013 0c45 4D89D9   		mov	r9, r11	# tmp433, _180
 2014              	# sieve_extend.c:836:         for (register counter_t i = 0; i <loop_distance; i++) {
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2015              		.loc 1 836 33 view .LVU612
 2016 0c48 4531E4   		xor	r12d, r12d	# i
 2017 0c4b 49C1E903 		shr	r9, 3	# tmp433,
 2018 0c4f 49F7D9   		neg	r9	# tmp434
 2019 0c52 4183E103 		and	r9d, 3	# prolog_loop_niters.188,
 2020 0c56 7468     		je	.L58	#,
 837:sieve_extend.c ****         }
 2021              		.loc 1 837 13 is_stmt 1 view .LVU613
 2022              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2023              		.loc 1 837 109 is_stmt 0 view .LVU614
 2024 0c58 488B5C1F 		mov	rbx, QWORD PTR 8[rdi+rbx]	# *_428, *_428
 2024      08
 2025 0c5d C46289F7 		shlx	r10, rbx, r14	# tmp435, *_428, shift
 2025      D3
GAS LISTING /tmp/ccjg94QQ.s 			page 60


 2026              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2027              		.loc 1 837 62 view .LVU615
 2028 0c62 4D8B1B   		mov	r11, QWORD PTR [r11]	# *_180, *_180
 2029 0c65 C442FBF7 		shrx	r12, r11, rax	# tmp437, *_180, shift_flipped
 2029      E3
 2030              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2031              		.loc 1 837 80 view .LVU616
 2032 0c6a 4D09E2   		or	r10, r12	# tmp439, tmp437
 2033 0c6d 4983F901 		cmp	r9, 1	# prolog_loop_niters.188,
 2034 0c71 4C8914CF 		mov	QWORD PTR [rdi+rcx*8], r10	# *_433, tmp439
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2035              		.loc 1 836 58 is_stmt 1 view .LVU617
 2036              	.LVL89:
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2037              		.loc 1 836 40 view .LVU618
 2038              	# sieve_extend.c:836:         for (register counter_t i = 0; i <loop_distance; i++) {
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2039              		.loc 1 836 59 is_stmt 0 view .LVU619
 2040 0c75 41BC0100 		mov	r12d, 1	# i,
 2040      0000
 2041 0c7b 7443     		je	.L58	#,
 837:sieve_extend.c ****         }
 2042              		.loc 1 837 13 is_stmt 1 view .LVU620
 2043              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2044              		.loc 1 837 109 is_stmt 0 view .LVU621
 2045 0c7d C46289F7 		shlx	r13, QWORD PTR 8[rdi+rdx*8], r14	# tmp441, *_448, shift
 2045      6CD708
 2046              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2047              		.loc 1 837 62 view .LVU622
 2048 0c84 C4E2FBF7 		shrx	rbx, QWORD PTR [rdi+rdx*8], rax	# tmp443, *_443, shift_flipped
 2048      1CD7
 2049              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2050              		.loc 1 837 80 view .LVU623
 2051 0c8a 4909DD   		or	r13, rbx	# tmp445, tmp443
 2052 0c8d 4983F903 		cmp	r9, 3	# prolog_loop_niters.188,
 2053 0c91 4E896CC7 		mov	QWORD PTR 16[rdi+r8*8], r13	# *_453, tmp445
 2053      10
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2054              		.loc 1 836 58 is_stmt 1 view .LVU624
 2055              	.LVL90:
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2056              		.loc 1 836 40 view .LVU625
 2057              	# sieve_extend.c:836:         for (register counter_t i = 0; i <loop_distance; i++) {
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2058              		.loc 1 836 59 is_stmt 0 view .LVU626
 2059 0c96 41BC0200 		mov	r12d, 2	# i,
 2059      0000
 2060 0c9c 7522     		jne	.L58	#,
 837:sieve_extend.c ****         }
 2061              		.loc 1 837 13 is_stmt 1 view .LVU627
 2062              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
GAS LISTING /tmp/ccjg94QQ.s 			page 61


 2063              		.loc 1 837 58 is_stmt 0 view .LVU628
 2064 0c9e 4C8D5E02 		lea	r11, 2[rsi]	# tmp446,
 2065              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2066              		.loc 1 837 109 view .LVU629
 2067 0ca2 C42289F7 		shlx	r10, QWORD PTR 8[rdi+r11*8], r14	# tmp448, *_286, shift
 2067      54DF08
 2068              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2069              		.loc 1 837 62 view .LVU630
 2070 0ca9 4E8B24DF 		mov	r12, QWORD PTR [rdi+r11*8]	# *_281, *_281
 2071 0cad C442FBF7 		shrx	r13, r12, rax	# tmp450, *_281, shift_flipped
 2071      EC
 2072              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2073              		.loc 1 837 80 view .LVU631
 2074 0cb2 4D09EA   		or	r10, r13	# tmp452, tmp450
 2075              	# sieve_extend.c:836:         for (register counter_t i = 0; i <loop_distance; i++) {
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2076              		.loc 1 836 59 view .LVU632
 2077 0cb5 41BC0300 		mov	r12d, 3	# i,
 2077      0000
 2078              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2079              		.loc 1 837 80 view .LVU633
 2080 0cbb 4E8954C7 		mov	QWORD PTR 24[rdi+r8*8], r10	# *_291, tmp452
 2080      18
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2081              		.loc 1 836 58 is_stmt 1 view .LVU634
 2082              	.LVL91:
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2083              		.loc 1 836 40 view .LVU635
 2084              	.L58:
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2085              		.loc 1 836 40 is_stmt 0 view .LVU636
 2086 0cc0 488B5C24 		mov	rbx, QWORD PTR -24[rsp]	# niters.189, %sfp
 2086      E8
 2087 0cc5 4E8D040E 		lea	r8, [rsi+r9]	# tmp453,
 2088 0cc9 4E8D14C7 		lea	r10, [rdi+r8*8]	# vectp.194,
 2089 0ccd 4C01CA   		add	rdx, r9	# tmp455, prolog_loop_niters.188
 2090 0cd0 C5F96E4C 		vmovd	xmm1, DWORD PTR -16[rsp]	# _184, %sfp
 2090      24F0
 2091 0cd6 4C8D1CD7 		lea	r11, [rdi+rdx*8]	# vectp.198,
 2092 0cda 4C29CB   		sub	rbx, r9	# niters.189, prolog_loop_niters.188
 2093              	# sieve_extend.c:836:         for (register counter_t i = 0; i <loop_distance; i++) {
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2094              		.loc 1 836 33 view .LVU637
 2095 0cdd 31D2     		xor	edx, edx	# ivtmp.237
 2096 0cdf 4989DD   		mov	r13, rbx	# bnd.190, niters.189
 2097 0ce2 4901C9   		add	r9, rcx	# tmp457, copy_word
 2098 0ce5 49C1ED02 		shr	r13, 2	# bnd.190,
 2099 0ce9 4E8D0CCF 		lea	r9, [rdi+r9*8]	# vectp.203,
 2100 0ced 49C1E505 		sal	r13, 5	# bnd.190,
 2101 0cf1 C5F96E44 		vmovd	xmm0, DWORD PTR -12[rsp]	# _182, %sfp
 2101      24F4
 2102 0cf7 4D8D45E0 		lea	r8, -32[r13]	# tmp582,
 2103 0cfb 49C1E805 		shr	r8, 5	# tmp580,
GAS LISTING /tmp/ccjg94QQ.s 			page 62


 2104 0cff 4983C001 		add	r8, 1	# tmp583,
 2105 0d03 4183E007 		and	r8d, 7	# tmp584,
 2106 0d07 0F840901 		je	.L60	#,
 2106      0000
 2107 0d0d 4983F801 		cmp	r8, 1	# tmp584,
 2108 0d11 0F84D300 		je	.L179	#,
 2108      0000
 2109 0d17 4983F802 		cmp	r8, 2	# tmp584,
 2110 0d1b 0F84A600 		je	.L180	#,
 2110      0000
 2111 0d21 4983F803 		cmp	r8, 3	# tmp584,
 2112 0d25 747E     		je	.L181	#,
 2113 0d27 4983F804 		cmp	r8, 4	# tmp584,
 2114 0d2b 7455     		je	.L182	#,
 2115 0d2d 4983F805 		cmp	r8, 5	# tmp584,
 2116 0d31 742D     		je	.L183	#,
 2117 0d33 4983F806 		cmp	r8, 6	# tmp584,
 2118 0d37 0F858007 		jne	.L262	#,
 2118      0000
 2119              	.L184:
 837:sieve_extend.c ****         }
 2120              		.loc 1 837 13 is_stmt 1 view .LVU638
 2121              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2122              		.loc 1 837 62 is_stmt 0 view .LVU639
 2123 0d3d C4417D6F 		vmovdqa	ymm12, YMMWORD PTR [r10+rdx]	# tmp1073, MEM[base: vectp.194_325, index: ivtmp.237_483, off
 2123      2412
 2124              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2125              		.loc 1 837 109 view .LVU640
 2126 0d43 C4417E6F 		vmovdqu	ymm14, YMMWORD PTR [r11+rdx]	# tmp1074, MEM[base: vectp.198_332, index: ivtmp.237_483, off
 2126      3413
 2127              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2128              		.loc 1 837 62 view .LVU641
 2129 0d49 C51DD3E9 		vpsrlq	ymm13, ymm12, xmm1	# vect__49.196, tmp1073, _184
 2130              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2131              		.loc 1 837 109 view .LVU642
 2132 0d4d C50DF3F8 		vpsllq	ymm15, ymm14, xmm0	# vect__54.200, tmp1074, _182
 2133              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2134              		.loc 1 837 80 view .LVU643
 2135 0d51 C4C115EB 		vpor	ymm6, ymm13, ymm15	# vect__58.201, vect__49.196, vect__54.200
 2135      F7
 2136              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2137              		.loc 1 837 35 view .LVU644
 2138 0d56 C4C17E7F 		vmovdqu	YMMWORD PTR [r9+rdx], ymm6	# MEM[base: vectp.203_341, index: ivtmp.237_483, offset: 0B], v
 2138      3411
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2139              		.loc 1 836 58 is_stmt 1 view .LVU645
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2140              		.loc 1 836 40 view .LVU646
 2141 0d5c 4883C220 		add	rdx, 32	# ivtmp.237,
 2142              	.L183:
 837:sieve_extend.c ****         }
GAS LISTING /tmp/ccjg94QQ.s 			page 63


 2143              		.loc 1 837 13 view .LVU647
 2144              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2145              		.loc 1 837 62 is_stmt 0 view .LVU648
 2146 0d60 C4C17D6F 		vmovdqa	ymm2, YMMWORD PTR [r10+rdx]	# tmp1075, MEM[base: vectp.194_325, index: ivtmp.237_483, offs
 2146      1412
 2147              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2148              		.loc 1 837 109 view .LVU649
 2149 0d66 C4C17E6F 		vmovdqu	ymm4, YMMWORD PTR [r11+rdx]	# tmp1076, MEM[base: vectp.198_332, index: ivtmp.237_483, offs
 2149      2413
 2150              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2151              		.loc 1 837 62 view .LVU650
 2152 0d6c C5EDD3F9 		vpsrlq	ymm7, ymm2, xmm1	# vect__49.196, tmp1075, _184
 2153              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2154              		.loc 1 837 109 view .LVU651
 2155 0d70 C5DDF3E8 		vpsllq	ymm5, ymm4, xmm0	# vect__54.200, tmp1076, _182
 2156              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2157              		.loc 1 837 80 view .LVU652
 2158 0d74 C545EBC5 		vpor	ymm8, ymm7, ymm5	# vect__58.201, vect__49.196, vect__54.200
 2159              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2160              		.loc 1 837 35 view .LVU653
 2161 0d78 C4417E7F 		vmovdqu	YMMWORD PTR [r9+rdx], ymm8	# MEM[base: vectp.203_341, index: ivtmp.237_483, offset: 0B], v
 2161      0411
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2162              		.loc 1 836 58 is_stmt 1 view .LVU654
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2163              		.loc 1 836 40 view .LVU655
 2164 0d7e 4883C220 		add	rdx, 32	# ivtmp.237,
 2165              	.L182:
 837:sieve_extend.c ****         }
 2166              		.loc 1 837 13 view .LVU656
 2167              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2168              		.loc 1 837 62 is_stmt 0 view .LVU657
 2169 0d82 C4417D6F 		vmovdqa	ymm9, YMMWORD PTR [r10+rdx]	# tmp1077, MEM[base: vectp.194_325, index: ivtmp.237_483, offs
 2169      0C12
 2170              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2171              		.loc 1 837 109 view .LVU658
 2172 0d88 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR [r11+rdx]	# tmp1078, MEM[base: vectp.198_332, index: ivtmp.237_483, offs
 2172      1C13
 2173              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2174              		.loc 1 837 62 view .LVU659
 2175 0d8e C535D3D1 		vpsrlq	ymm10, ymm9, xmm1	# vect__49.196, tmp1077, _184
 2176              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2177              		.loc 1 837 109 view .LVU660
 2178 0d92 C565F3D8 		vpsllq	ymm11, ymm3, xmm0	# vect__54.200, tmp1078, _182
 2179              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2180              		.loc 1 837 80 view .LVU661
GAS LISTING /tmp/ccjg94QQ.s 			page 64


 2181 0d96 C4412DEB 		vpor	ymm12, ymm10, ymm11	# vect__58.201, vect__49.196, vect__54.200
 2181      E3
 2182              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2183              		.loc 1 837 35 view .LVU662
 2184 0d9b C4417E7F 		vmovdqu	YMMWORD PTR [r9+rdx], ymm12	# MEM[base: vectp.203_341, index: ivtmp.237_483, offset: 0B], 
 2184      2411
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2185              		.loc 1 836 58 is_stmt 1 view .LVU663
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2186              		.loc 1 836 40 view .LVU664
 2187 0da1 4883C220 		add	rdx, 32	# ivtmp.237,
 2188              	.L181:
 837:sieve_extend.c ****         }
 2189              		.loc 1 837 13 view .LVU665
 2190              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2191              		.loc 1 837 62 is_stmt 0 view .LVU666
 2192 0da5 C4417D6F 		vmovdqa	ymm13, YMMWORD PTR [r10+rdx]	# tmp1079, MEM[base: vectp.194_325, index: ivtmp.237_483, off
 2192      2C12
 2193              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2194              		.loc 1 837 109 view .LVU667
 2195 0dab C4417E6F 		vmovdqu	ymm15, YMMWORD PTR [r11+rdx]	# tmp1080, MEM[base: vectp.198_332, index: ivtmp.237_483, off
 2195      3C13
 2196              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2197              		.loc 1 837 62 view .LVU668
 2198 0db1 C515D3F1 		vpsrlq	ymm14, ymm13, xmm1	# vect__49.196, tmp1079, _184
 2199              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2200              		.loc 1 837 109 view .LVU669
 2201 0db5 C585F3F0 		vpsllq	ymm6, ymm15, xmm0	# vect__54.200, tmp1080, _182
 2202              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2203              		.loc 1 837 80 view .LVU670
 2204 0db9 C58DEBD6 		vpor	ymm2, ymm14, ymm6	# vect__58.201, vect__49.196, vect__54.200
 2205              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2206              		.loc 1 837 35 view .LVU671
 2207 0dbd C4C17E7F 		vmovdqu	YMMWORD PTR [r9+rdx], ymm2	# MEM[base: vectp.203_341, index: ivtmp.237_483, offset: 0B], v
 2207      1411
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2208              		.loc 1 836 58 is_stmt 1 view .LVU672
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2209              		.loc 1 836 40 view .LVU673
 2210 0dc3 4883C220 		add	rdx, 32	# ivtmp.237,
 2211              	.L180:
 837:sieve_extend.c ****         }
 2212              		.loc 1 837 13 view .LVU674
 2213              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2214              		.loc 1 837 62 is_stmt 0 view .LVU675
 2215 0dc7 C4C17D6F 		vmovdqa	ymm7, YMMWORD PTR [r10+rdx]	# tmp1081, MEM[base: vectp.194_325, index: ivtmp.237_483, offs
 2215      3C12
 2216              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
GAS LISTING /tmp/ccjg94QQ.s 			page 65


 2217              		.loc 1 837 109 view .LVU676
 2218 0dcd C4C17E6F 		vmovdqu	ymm5, YMMWORD PTR [r11+rdx]	# tmp1082, MEM[base: vectp.198_332, index: ivtmp.237_483, offs
 2218      2C13
 2219              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2220              		.loc 1 837 62 view .LVU677
 2221 0dd3 C5C5D3E1 		vpsrlq	ymm4, ymm7, xmm1	# vect__49.196, tmp1081, _184
 2222              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2223              		.loc 1 837 109 view .LVU678
 2224 0dd7 C555F3C0 		vpsllq	ymm8, ymm5, xmm0	# vect__54.200, tmp1082, _182
 2225              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2226              		.loc 1 837 80 view .LVU679
 2227 0ddb C4415DEB 		vpor	ymm9, ymm4, ymm8	# vect__58.201, vect__49.196, vect__54.200
 2227      C8
 2228              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2229              		.loc 1 837 35 view .LVU680
 2230 0de0 C4417E7F 		vmovdqu	YMMWORD PTR [r9+rdx], ymm9	# MEM[base: vectp.203_341, index: ivtmp.237_483, offset: 0B], v
 2230      0C11
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2231              		.loc 1 836 58 is_stmt 1 view .LVU681
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2232              		.loc 1 836 40 view .LVU682
 2233 0de6 4883C220 		add	rdx, 32	# ivtmp.237,
 2234              	.L179:
 837:sieve_extend.c ****         }
 2235              		.loc 1 837 13 view .LVU683
 2236              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2237              		.loc 1 837 62 is_stmt 0 view .LVU684
 2238 0dea C4417D6F 		vmovdqa	ymm10, YMMWORD PTR [r10+rdx]	# tmp1083, MEM[base: vectp.194_325, index: ivtmp.237_483, off
 2238      1412
 2239              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2240              		.loc 1 837 109 view .LVU685
 2241 0df0 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR [r11+rdx]	# tmp1084, MEM[base: vectp.198_332, index: ivtmp.237_483, offs
 2241      1C13
 2242              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2243              		.loc 1 837 62 view .LVU686
 2244 0df6 C52DD3D9 		vpsrlq	ymm11, ymm10, xmm1	# vect__49.196, tmp1083, _184
 2245              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2246              		.loc 1 837 109 view .LVU687
 2247 0dfa C565F3E0 		vpsllq	ymm12, ymm3, xmm0	# vect__54.200, tmp1084, _182
 2248              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2249              		.loc 1 837 80 view .LVU688
 2250 0dfe C44125EB 		vpor	ymm13, ymm11, ymm12	# vect__58.201, vect__49.196, vect__54.200
 2250      EC
 2251              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2252              		.loc 1 837 35 view .LVU689
 2253 0e03 C4417E7F 		vmovdqu	YMMWORD PTR [r9+rdx], ymm13	# MEM[base: vectp.203_341, index: ivtmp.237_483, offset: 0B], 
 2253      2C11
GAS LISTING /tmp/ccjg94QQ.s 			page 66


 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2254              		.loc 1 836 58 is_stmt 1 view .LVU690
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2255              		.loc 1 836 40 view .LVU691
 2256 0e09 4883C220 		add	rdx, 32	# ivtmp.237,
 2257 0e0d 4C39EA   		cmp	rdx, r13	# ivtmp.237, _485
 2258 0e10 0F843E01 		je	.L243	#,
 2258      0000
 2259              	.L60:
 837:sieve_extend.c ****         }
 2260              		.loc 1 837 13 discriminator 3 view .LVU692
 2261              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2262              		.loc 1 837 62 is_stmt 0 discriminator 3 view .LVU693
 2263 0e16 C4417D6F 		vmovdqa	ymm14, YMMWORD PTR [r10+rdx]	# tmp980, MEM[base: vectp.194_325, index: ivtmp.237_483, offs
 2263      3412
 2264              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2265              		.loc 1 837 109 discriminator 3 view .LVU694
 2266 0e1c C4C17E6F 		vmovdqu	ymm6, YMMWORD PTR [r11+rdx]	# tmp981, MEM[base: vectp.198_332, index: ivtmp.237_483, offse
 2266      3413
 2267              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2268              		.loc 1 837 62 discriminator 3 view .LVU695
 2269 0e22 C50DD3F9 		vpsrlq	ymm15, ymm14, xmm1	# vect__49.196, tmp980, _184
 2270              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2271              		.loc 1 837 109 discriminator 3 view .LVU696
 2272 0e26 C5CDF3D0 		vpsllq	ymm2, ymm6, xmm0	# vect__54.200, tmp981, _182
 2273              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2274              		.loc 1 837 80 discriminator 3 view .LVU697
 2275 0e2a C585EBFA 		vpor	ymm7, ymm15, ymm2	# vect__58.201, vect__49.196, vect__54.200
 2276              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2277              		.loc 1 837 35 discriminator 3 view .LVU698
 2278 0e2e C4C17E7F 		vmovdqu	YMMWORD PTR [r9+rdx], ymm7	# MEM[base: vectp.203_341, index: ivtmp.237_483, offset: 0B], v
 2278      3C11
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2279              		.loc 1 836 58 is_stmt 1 discriminator 3 view .LVU699
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2280              		.loc 1 836 40 discriminator 3 view .LVU700
 837:sieve_extend.c ****         }
 2281              		.loc 1 837 13 discriminator 3 view .LVU701
 2282              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2283              		.loc 1 837 62 is_stmt 0 discriminator 3 view .LVU702
 2284 0e34 C4C17D6F 		vmovdqa	ymm4, YMMWORD PTR 32[r10+rdx]	# tmp982, MEM[base: vectp.194_325, index: ivtmp.237_483, off
 2284      641220
 2285              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2286              		.loc 1 837 109 discriminator 3 view .LVU703
 2287 0e3b C4C17E6F 		vmovdqu	ymm5, YMMWORD PTR 32[r11+rdx]	# tmp983, MEM[base: vectp.198_332, index: ivtmp.237_483, off
 2287      6C1320
 2288              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2289              		.loc 1 837 62 discriminator 3 view .LVU704
GAS LISTING /tmp/ccjg94QQ.s 			page 67


 2290 0e42 C55DD3C1 		vpsrlq	ymm8, ymm4, xmm1	# vect__49.196, tmp982, _184
 2291              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2292              		.loc 1 837 109 discriminator 3 view .LVU705
 2293 0e46 C555F3C8 		vpsllq	ymm9, ymm5, xmm0	# vect__54.200, tmp983, _182
 2294              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2295              		.loc 1 837 80 discriminator 3 view .LVU706
 2296 0e4a C4413DEB 		vpor	ymm10, ymm8, ymm9	# vect__58.201, vect__49.196, vect__54.200
 2296      D1
 2297              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2298              		.loc 1 837 35 discriminator 3 view .LVU707
 2299 0e4f C4417E7F 		vmovdqu	YMMWORD PTR 32[r9+rdx], ymm10	# MEM[base: vectp.203_341, index: ivtmp.237_483, offset: 0B]
 2299      541120
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2300              		.loc 1 836 58 is_stmt 1 discriminator 3 view .LVU708
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2301              		.loc 1 836 40 discriminator 3 view .LVU709
 837:sieve_extend.c ****         }
 2302              		.loc 1 837 13 discriminator 3 view .LVU710
 2303              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2304              		.loc 1 837 62 is_stmt 0 discriminator 3 view .LVU711
 2305 0e56 C4417D6F 		vmovdqa	ymm11, YMMWORD PTR 64[r10+rdx]	# tmp984, MEM[base: vectp.194_325, index: ivtmp.237_483, of
 2305      5C1240
 2306              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2307              		.loc 1 837 109 discriminator 3 view .LVU712
 2308 0e5d C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR 64[r11+rdx]	# tmp985, MEM[base: vectp.198_332, index: ivtmp.237_483, off
 2308      5C1340
 2309              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2310              		.loc 1 837 62 discriminator 3 view .LVU713
 2311 0e64 C525D3E1 		vpsrlq	ymm12, ymm11, xmm1	# vect__49.196, tmp984, _184
 2312              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2313              		.loc 1 837 109 discriminator 3 view .LVU714
 2314 0e68 C565F3E8 		vpsllq	ymm13, ymm3, xmm0	# vect__54.200, tmp985, _182
 2315              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2316              		.loc 1 837 80 discriminator 3 view .LVU715
 2317 0e6c C4411DEB 		vpor	ymm14, ymm12, ymm13	# vect__58.201, vect__49.196, vect__54.200
 2317      F5
 2318              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2319              		.loc 1 837 35 discriminator 3 view .LVU716
 2320 0e71 C4417E7F 		vmovdqu	YMMWORD PTR 64[r9+rdx], ymm14	# MEM[base: vectp.203_341, index: ivtmp.237_483, offset: 0B]
 2320      741140
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2321              		.loc 1 836 58 is_stmt 1 discriminator 3 view .LVU717
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2322              		.loc 1 836 40 discriminator 3 view .LVU718
 837:sieve_extend.c ****         }
 2323              		.loc 1 837 13 discriminator 3 view .LVU719
 2324              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
GAS LISTING /tmp/ccjg94QQ.s 			page 68


 2325              		.loc 1 837 62 is_stmt 0 discriminator 3 view .LVU720
 2326 0e78 C4417D6F 		vmovdqa	ymm15, YMMWORD PTR 96[r10+rdx]	# tmp986, MEM[base: vectp.194_325, index: ivtmp.237_483, of
 2326      7C1260
 2327              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2328              		.loc 1 837 109 discriminator 3 view .LVU721
 2329 0e7f C4C17E6F 		vmovdqu	ymm2, YMMWORD PTR 96[r11+rdx]	# tmp987, MEM[base: vectp.198_332, index: ivtmp.237_483, off
 2329      541360
 2330              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2331              		.loc 1 837 62 discriminator 3 view .LVU722
 2332 0e86 C585D3F1 		vpsrlq	ymm6, ymm15, xmm1	# vect__49.196, tmp986, _184
 2333              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2334              		.loc 1 837 109 discriminator 3 view .LVU723
 2335 0e8a C5EDF3F8 		vpsllq	ymm7, ymm2, xmm0	# vect__54.200, tmp987, _182
 2336              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2337              		.loc 1 837 80 discriminator 3 view .LVU724
 2338 0e8e C5CDEBE7 		vpor	ymm4, ymm6, ymm7	# vect__58.201, vect__49.196, vect__54.200
 2339              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2340              		.loc 1 837 35 discriminator 3 view .LVU725
 2341 0e92 C4C17E7F 		vmovdqu	YMMWORD PTR 96[r9+rdx], ymm4	# MEM[base: vectp.203_341, index: ivtmp.237_483, offset: 0B],
 2341      641160
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2342              		.loc 1 836 58 is_stmt 1 discriminator 3 view .LVU726
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2343              		.loc 1 836 40 discriminator 3 view .LVU727
 837:sieve_extend.c ****         }
 2344              		.loc 1 837 13 discriminator 3 view .LVU728
 2345              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2346              		.loc 1 837 62 is_stmt 0 discriminator 3 view .LVU729
 2347 0e99 C4417D6F 		vmovdqa	ymm8, YMMWORD PTR 128[r10+rdx]	# tmp988, MEM[base: vectp.194_325, index: ivtmp.237_483, of
 2347      84128000 
 2347      0000
 2348              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2349              		.loc 1 837 109 discriminator 3 view .LVU730
 2350 0ea3 C4417E6F 		vmovdqu	ymm9, YMMWORD PTR 128[r11+rdx]	# tmp989, MEM[base: vectp.198_332, index: ivtmp.237_483, of
 2350      8C138000 
 2350      0000
 2351              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2352              		.loc 1 837 62 discriminator 3 view .LVU731
 2353 0ead C5BDD3E9 		vpsrlq	ymm5, ymm8, xmm1	# vect__49.196, tmp988, _184
 2354              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2355              		.loc 1 837 109 discriminator 3 view .LVU732
 2356 0eb1 C535F3D0 		vpsllq	ymm10, ymm9, xmm0	# vect__54.200, tmp989, _182
 2357              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2358              		.loc 1 837 80 discriminator 3 view .LVU733
 2359 0eb5 C44155EB 		vpor	ymm11, ymm5, ymm10	# vect__58.201, vect__49.196, vect__54.200
 2359      DA
 2360              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
GAS LISTING /tmp/ccjg94QQ.s 			page 69


 837:sieve_extend.c ****         }
 2361              		.loc 1 837 35 discriminator 3 view .LVU734
 2362 0eba C4417E7F 		vmovdqu	YMMWORD PTR 128[r9+rdx], ymm11	# MEM[base: vectp.203_341, index: ivtmp.237_483, offset: 0B
 2362      9C118000 
 2362      0000
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2363              		.loc 1 836 58 is_stmt 1 discriminator 3 view .LVU735
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2364              		.loc 1 836 40 discriminator 3 view .LVU736
 837:sieve_extend.c ****         }
 2365              		.loc 1 837 13 discriminator 3 view .LVU737
 2366              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2367              		.loc 1 837 62 is_stmt 0 discriminator 3 view .LVU738
 2368 0ec4 C4417D6F 		vmovdqa	ymm12, YMMWORD PTR 160[r10+rdx]	# tmp990, MEM[base: vectp.194_325, index: ivtmp.237_483, o
 2368      A412A000 
 2368      0000
 2369              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2370              		.loc 1 837 109 discriminator 3 view .LVU739
 2371 0ece C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR 160[r11+rdx]	# tmp991, MEM[base: vectp.198_332, index: ivtmp.237_483, of
 2371      9C13A000 
 2371      0000
 2372              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2373              		.loc 1 837 62 discriminator 3 view .LVU740
 2374 0ed8 C51DD3E9 		vpsrlq	ymm13, ymm12, xmm1	# vect__49.196, tmp990, _184
 2375              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2376              		.loc 1 837 109 discriminator 3 view .LVU741
 2377 0edc C565F3F0 		vpsllq	ymm14, ymm3, xmm0	# vect__54.200, tmp991, _182
 2378              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2379              		.loc 1 837 80 discriminator 3 view .LVU742
 2380 0ee0 C44115EB 		vpor	ymm15, ymm13, ymm14	# vect__58.201, vect__49.196, vect__54.200
 2380      FE
 2381              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2382              		.loc 1 837 35 discriminator 3 view .LVU743
 2383 0ee5 C4417E7F 		vmovdqu	YMMWORD PTR 160[r9+rdx], ymm15	# MEM[base: vectp.203_341, index: ivtmp.237_483, offset: 0B
 2383      BC11A000 
 2383      0000
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2384              		.loc 1 836 58 is_stmt 1 discriminator 3 view .LVU744
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2385              		.loc 1 836 40 discriminator 3 view .LVU745
 837:sieve_extend.c ****         }
 2386              		.loc 1 837 13 discriminator 3 view .LVU746
 2387              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2388              		.loc 1 837 62 is_stmt 0 discriminator 3 view .LVU747
 2389 0eef C4C17D6F 		vmovdqa	ymm6, YMMWORD PTR 192[r10+rdx]	# tmp992, MEM[base: vectp.194_325, index: ivtmp.237_483, of
 2389      B412C000 
 2389      0000
 2390              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2391              		.loc 1 837 109 discriminator 3 view .LVU748
GAS LISTING /tmp/ccjg94QQ.s 			page 70


 2392 0ef9 C4C17E6F 		vmovdqu	ymm7, YMMWORD PTR 192[r11+rdx]	# tmp993, MEM[base: vectp.198_332, index: ivtmp.237_483, of
 2392      BC13C000 
 2392      0000
 2393              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2394              		.loc 1 837 62 discriminator 3 view .LVU749
 2395 0f03 C5CDD3D1 		vpsrlq	ymm2, ymm6, xmm1	# vect__49.196, tmp992, _184
 2396              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2397              		.loc 1 837 109 discriminator 3 view .LVU750
 2398 0f07 C5C5F3E0 		vpsllq	ymm4, ymm7, xmm0	# vect__54.200, tmp993, _182
 2399              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2400              		.loc 1 837 80 discriminator 3 view .LVU751
 2401 0f0b C56DEBC4 		vpor	ymm8, ymm2, ymm4	# vect__58.201, vect__49.196, vect__54.200
 2402              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2403              		.loc 1 837 35 discriminator 3 view .LVU752
 2404 0f0f C4417E7F 		vmovdqu	YMMWORD PTR 192[r9+rdx], ymm8	# MEM[base: vectp.203_341, index: ivtmp.237_483, offset: 0B]
 2404      8411C000 
 2404      0000
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2405              		.loc 1 836 58 is_stmt 1 discriminator 3 view .LVU753
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2406              		.loc 1 836 40 discriminator 3 view .LVU754
 837:sieve_extend.c ****         }
 2407              		.loc 1 837 13 discriminator 3 view .LVU755
 2408              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2409              		.loc 1 837 62 is_stmt 0 discriminator 3 view .LVU756
 2410 0f19 C4C17D6F 		vmovdqa	ymm5, YMMWORD PTR 224[r10+rdx]	# tmp994, MEM[base: vectp.194_325, index: ivtmp.237_483, of
 2410      AC12E000 
 2410      0000
 2411              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2412              		.loc 1 837 109 discriminator 3 view .LVU757
 2413 0f23 C4417E6F 		vmovdqu	ymm10, YMMWORD PTR 224[r11+rdx]	# tmp995, MEM[base: vectp.198_332, index: ivtmp.237_483, o
 2413      9413E000 
 2413      0000
 2414              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2415              		.loc 1 837 62 discriminator 3 view .LVU758
 2416 0f2d C555D3C9 		vpsrlq	ymm9, ymm5, xmm1	# vect__49.196, tmp994, _184
 2417              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2418              		.loc 1 837 109 discriminator 3 view .LVU759
 2419 0f31 C52DF3D8 		vpsllq	ymm11, ymm10, xmm0	# vect__54.200, tmp995, _182
 2420              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2421              		.loc 1 837 80 discriminator 3 view .LVU760
 2422 0f35 C44135EB 		vpor	ymm12, ymm9, ymm11	# vect__58.201, vect__49.196, vect__54.200
 2422      E3
 2423              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2424              		.loc 1 837 35 discriminator 3 view .LVU761
 2425 0f3a C4417E7F 		vmovdqu	YMMWORD PTR 224[r9+rdx], ymm12	# MEM[base: vectp.203_341, index: ivtmp.237_483, offset: 0B
 2425      A411E000 
GAS LISTING /tmp/ccjg94QQ.s 			page 71


 2425      0000
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2426              		.loc 1 836 58 is_stmt 1 discriminator 3 view .LVU762
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2427              		.loc 1 836 40 discriminator 3 view .LVU763
 2428 0f44 4881C200 		add	rdx, 256	# ivtmp.237,
 2428      010000
 2429 0f4b 4C39EA   		cmp	rdx, r13	# ivtmp.237, _485
 2430 0f4e 0F85C2FE 		jne	.L60	#,
 2430      FFFF
 2431              	.L243:
 2432 0f54 4C8B6C24 		mov	r13, QWORD PTR -24[rsp]	# loop_distance, %sfp
 2432      E8
 2433 0f59 4989DA   		mov	r10, rbx	# niters_vector_mult_vf.191, niters.189
 2434 0f5c 4983E2FC 		and	r10, -4	# niters_vector_mult_vf.191,
 2435 0f60 4C39D3   		cmp	rbx, r10	# niters.189, niters_vector_mult_vf.191
 2436 0f63 4F8D2414 		lea	r12, [r12+r10]	# tmp.192,
 2437 0f67 4A8D142E 		lea	rdx, [rsi+r13]	# source_word,
 2438 0f6b 0F840703 		je	.L255	#,
 2438      0000
 2439              	.LVL92:
 837:sieve_extend.c ****         }
 2440              		.loc 1 837 13 view .LVU764
 2441              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2442              		.loc 1 837 58 is_stmt 0 view .LVU765
 2443 0f71 4A8D1C26 		lea	rbx, [rsi+r12]	# tmp467,
 2444              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2445              		.loc 1 837 21 view .LVU766
 2446 0f75 4E8D1C21 		lea	r11, [rcx+r12]	# tmp468,
 2447              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2448              		.loc 1 837 62 view .LVU767
 2449 0f79 4C8B04DF 		mov	r8, QWORD PTR [rdi+rbx*8]	# *_386, *_386
 2450              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2451              		.loc 1 837 109 view .LVU768
 2452 0f7d C46289F7 		shlx	r9, QWORD PTR 8[rdi+rbx*8], r14	# tmp469, *_391, shift
 2452      4CDF08
 2453              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2454              		.loc 1 837 62 view .LVU769
 2455 0f84 C442FBF7 		shrx	r10, r8, rax	# tmp471, *_386, shift_flipped
 2455      D0
 2456              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2457              		.loc 1 837 80 view .LVU770
 2458 0f89 4D09D1   		or	r9, r10	# tmp473, tmp471
 2459 0f8c 4E890CDF 		mov	QWORD PTR [rdi+r11*8], r9	# *_396, tmp473
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2460              		.loc 1 836 58 is_stmt 1 view .LVU771
 2461              	# sieve_extend.c:836:         for (register counter_t i = 0; i <loop_distance; i++) {
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2462              		.loc 1 836 59 is_stmt 0 view .LVU772
 2463 0f90 4D8D4C24 		lea	r9, 1[r12]	# i,
 2463      01
GAS LISTING /tmp/ccjg94QQ.s 			page 72


 2464              	.LVL93:
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2465              		.loc 1 836 40 is_stmt 1 view .LVU773
 2466              	# sieve_extend.c:836:         for (register counter_t i = 0; i <loop_distance; i++) {
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2467              		.loc 1 836 9 is_stmt 0 view .LVU774
 2468 0f95 4D39CD   		cmp	r13, r9	# loop_distance, i
 2469 0f98 0F86DA02 		jbe	.L255	#,
 2469      0000
 837:sieve_extend.c ****         }
 2470              		.loc 1 837 13 is_stmt 1 view .LVU775
 2471              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2472              		.loc 1 837 58 is_stmt 0 view .LVU776
 2473 0f9e 4A8D1C0E 		lea	rbx, [rsi+r9]	# tmp474,
 2474              	# sieve_extend.c:836:         for (register counter_t i = 0; i <loop_distance; i++) {
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2475              		.loc 1 836 59 view .LVU777
 2476 0fa2 4983C402 		add	r12, 2	# i,
 2477              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2478              		.loc 1 837 62 view .LVU778
 2479 0fa6 4C8B1CDF 		mov	r11, QWORD PTR [rdi+rbx*8]	# *_404, *_404
 2480              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2481              		.loc 1 837 21 view .LVU779
 2482 0faa 4901C9   		add	r9, rcx	# tmp475, copy_word
 2483              	.LVL94:
 2484              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2485              		.loc 1 837 109 view .LVU780
 2486 0fad C46289F7 		shlx	r8, QWORD PTR 8[rdi+rbx*8], r14	# tmp476, *_409, shift
 2486      44DF08
 2487              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2488              		.loc 1 837 62 view .LVU781
 2489 0fb4 C442FBF7 		shrx	r10, r11, rax	# tmp478, *_404, shift_flipped
 2489      D3
 2490              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2491              		.loc 1 837 80 view .LVU782
 2492 0fb9 4D09D0   		or	r8, r10	# tmp480, tmp478
 2493              	# sieve_extend.c:836:         for (register counter_t i = 0; i <loop_distance; i++) {
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2494              		.loc 1 836 9 view .LVU783
 2495 0fbc 4D39E5   		cmp	r13, r12	# loop_distance, i
 2496              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2497              		.loc 1 837 80 view .LVU784
 2498 0fbf 4E8904CF 		mov	QWORD PTR [rdi+r9*8], r8	# *_414, tmp480
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2499              		.loc 1 836 58 is_stmt 1 view .LVU785
 2500              	.LVL95:
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2501              		.loc 1 836 40 view .LVU786
 2502              	# sieve_extend.c:836:         for (register counter_t i = 0; i <loop_distance; i++) {
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
GAS LISTING /tmp/ccjg94QQ.s 			page 73


 2503              		.loc 1 836 9 is_stmt 0 view .LVU787
 2504 0fc3 0F86AF02 		jbe	.L255	#,
 2504      0000
 837:sieve_extend.c ****         }
 2505              		.loc 1 837 13 is_stmt 1 view .LVU788
 2506              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2507              		.loc 1 837 58 is_stmt 0 view .LVU789
 2508 0fc9 4C01E6   		add	rsi, r12	# tmp481, i
 2509              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2510              		.loc 1 837 21 view .LVU790
 2511 0fcc 4901CC   		add	r12, rcx	# tmp482, copy_word
 2512              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2513              		.loc 1 837 109 view .LVU791
 2514 0fcf C4E289F7 		shlx	rcx, QWORD PTR 8[rdi+rsi*8], r14	# tmp483, *_311, shift
 2514      4CF708
 2515              	.LVL96:
 2516              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2517              		.loc 1 837 62 view .LVU792
 2518 0fd6 488B34F7 		mov	rsi, QWORD PTR [rdi+rsi*8]	# *_306, *_306
 2519 0fda C462FBF7 		shrx	r14, rsi, rax	# tmp485, *_306, shift_flipped
 2519      F6
 2520              	.LVL97:
 2521              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2522              		.loc 1 837 80 view .LVU793
 2523 0fdf 4909CE   		or	r14, rcx	# tmp487, tmp483
 2524 0fe2 4E8934E7 		mov	QWORD PTR [rdi+r12*8], r14	# *_316, tmp487
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2525              		.loc 1 836 58 is_stmt 1 view .LVU794
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2526              		.loc 1 836 40 view .LVU795
 2527 0fe6 C5F877   		vzeroupper
 2528              	.L62:
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2529              		.loc 1 836 40 is_stmt 0 view .LVU796
 2530              	.LBE308:
 839:sieve_extend.c ****     }
 2531              		.loc 1 839 9 is_stmt 1 view .LVU797
 839:sieve_extend.c ****     }
 2532              		.loc 1 839 39 view .LVU798
 2533              	.LVL98:
 839:sieve_extend.c ****     }
 2534              		.loc 1 839 39 is_stmt 0 view .LVU799
 2535              	.LBE307:
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2536              		.loc 1 842 12 is_stmt 1 view .LVU800
 2537 0fe9 488B4C24 		mov	rcx, QWORD PTR -8[rsp]	# destination_stop_word, %sfp
 2537      F8
 2538 0fee 48C1E203 		sal	rdx, 3	# _260,
 2539              	.LVL99:
 2540              	.LBB310:
 2541              	# sieve_extend.c:839:         source_word += loop_distance; copy_word+= loop_distance;
 839:sieve_extend.c ****     }
GAS LISTING /tmp/ccjg94QQ.s 			page 74


 2542              		.loc 1 839 21 is_stmt 0 view .LVU801
 2543 0ff2 48C74424 		mov	QWORD PTR -32[rsp], 0	# %sfp,
 2543      E0000000 
 2543      00
 2544 0ffb 4C8D6901 		lea	r13, 1[rcx]	# _198,
 2545 0fff 4C896C24 		mov	QWORD PTR -24[rsp], r13	# %sfp, _198
 2545      E8
 2546              	.LVL100:
 2547              	.L56:
 839:sieve_extend.c ****     }
 2548              		.loc 1 839 21 view .LVU802
 2549 1004 4C8B5C24 		mov	r11, QWORD PTR -8[rsp]	# destination_stop_word, %sfp
 2549      F8
 2550 1009 4801FA   		add	rdx, rdi	# ivtmp.210, bitarray
 2551              	.LBE310:
 2552              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 843:sieve_extend.c ****     }
 2553              		.loc 1 843 99 view .LVU803
 2554 100c 440FB664 		movzx	r12d, BYTE PTR -12[rsp]	# tmp1038, %sfp
 2554      24F4
 2555 1012 C46299F7 		shlx	r14, QWORD PTR 8[rdx], r12	# tmp560, MEM[base: _465, offset: 8B], tmp1038
 2555      7208
 2556              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 843:sieve_extend.c ****     }
 2557              		.loc 1 843 54 view .LVU804
 2558 1018 440FB654 		movzx	r10d, BYTE PTR -16[rsp]	# tmp1039, %sfp
 2558      24F0
 2559              	# sieve_extend.c:842:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2560              		.loc 1 842 57 view .LVU805
 2561 101e 4C8D6101 		lea	r12, 1[rcx]	# copy_word,
 2562 1022 4D89D8   		mov	r8, r11	# tmp570, destination_stop_word
 2563              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 843:sieve_extend.c ****     }
 2564              		.loc 1 843 54 view .LVU806
 2565 1025 C4E2ABF7 		shrx	rsi, QWORD PTR [rdx], r10	# tmp562, MEM[base: _465, offset: 0B], tmp1039
 2565      32
 2566 102a 4929C8   		sub	r8, rcx	# tmp570, copy_word
 2567              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 843:sieve_extend.c ****     }
 2568              		.loc 1 843 72 view .LVU807
 2569 102d 4909F6   		or	r14, rsi	# tmp564, tmp562
 2570 1030 4C8934CF 		mov	QWORD PTR [rdi+rcx*8], r14	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 
 2571 1034 4183E007 		and	r8d, 7	# tmp571,
 2572              	.LVL101:
 843:sieve_extend.c ****     }
 2573              		.loc 1 843 9 is_stmt 1 view .LVU808
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2574              		.loc 1 842 48 view .LVU809
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2575              		.loc 1 842 12 view .LVU810
 2576              	# sieve_extend.c:842:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2577              		.loc 1 842 5 is_stmt 0 view .LVU811
 2578 1038 4D39E3   		cmp	r11, r12	# destination_stop_word, copy_word
 2579 103b 4C8D7208 		lea	r14, 8[rdx]	# ivtmp.210,
 2580 103f 0F8266FB 		jb	.L73	#,
GAS LISTING /tmp/ccjg94QQ.s 			page 75


 2580      FFFF
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2581              		.loc 1 842 5 view .LVU812
 2582 1045 4D85C0   		test	r8, r8	# tmp571
 2583 1048 0F844001 		je	.L249	#,
 2583      0000
 2584 104e 4983F801 		cmp	r8, 1	# tmp571,
 2585 1052 0F840601 		je	.L198	#,
 2585      0000
 2586 1058 4983F802 		cmp	r8, 2	# tmp571,
 2587 105c 0F84D800 		je	.L199	#,
 2587      0000
 2588 1062 4983F803 		cmp	r8, 3	# tmp571,
 2589 1066 0F84A900 		je	.L200	#,
 2589      0000
 2590 106c 4983F804 		cmp	r8, 4	# tmp571,
 2591 1070 747D     		je	.L201	#,
 2592 1072 4983F805 		cmp	r8, 5	# tmp571,
 2593 1076 7452     		je	.L202	#,
 2594 1078 4983F806 		cmp	r8, 6	# tmp571,
 2595 107c 7428     		je	.L203	#,
 843:sieve_extend.c ****     }
 2596              		.loc 1 843 9 is_stmt 1 view .LVU813
 2597              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 843:sieve_extend.c ****     }
 2598              		.loc 1 843 54 is_stmt 0 view .LVU814
 2599 107e 498B06   		mov	rax, QWORD PTR [r14]	# MEM[base: _465, offset: 0B], MEM[base: _465, offset: 0B]
 2600              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 843:sieve_extend.c ****     }
 2601              		.loc 1 843 99 view .LVU815
 2602 1081 440FB64C 		movzx	r9d, BYTE PTR -12[rsp]	# tmp1042, %sfp
 2602      24F4
 2603 1087 C442B1F7 		shlx	r11, QWORD PTR 8[r14], r9	# tmp777, MEM[base: _465, offset: 8B], tmp1042
 2603      5E08
 2604              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 843:sieve_extend.c ****     }
 2605              		.loc 1 843 54 view .LVU816
 2606 108d 0FB65C24 		movzx	ebx, BYTE PTR -16[rsp]	# tmp1043, %sfp
 2606      F0
 2607 1092 C462E3F7 		shrx	r8, rax, rbx	# tmp779, MEM[base: _465, offset: 0B], tmp1043
 2607      C0
 2608              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 843:sieve_extend.c ****     }
 2609              		.loc 1 843 72 view .LVU817
 2610 1097 4D09D8   		or	r8, r11	# tmp780, tmp777
 2611 109a 4C8D7210 		lea	r14, 16[rdx]	# ivtmp.210,
 2612 109e 4E8904E7 		mov	QWORD PTR [rdi+r12*8], r8	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 0
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2613              		.loc 1 842 48 is_stmt 1 view .LVU818
 2614              	# sieve_extend.c:842:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2615              		.loc 1 842 57 is_stmt 0 view .LVU819
 2616 10a2 4C8D6102 		lea	r12, 2[rcx]	# copy_word,
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2617              		.loc 1 842 12 is_stmt 1 view .LVU820
 2618              	.L203:
 843:sieve_extend.c ****     }
GAS LISTING /tmp/ccjg94QQ.s 			page 76


 2619              		.loc 1 843 9 view .LVU821
 2620              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 843:sieve_extend.c ****     }
 2621              		.loc 1 843 99 is_stmt 0 view .LVU822
 2622 10a6 0FB65424 		movzx	edx, BYTE PTR -12[rsp]	# tmp1044, %sfp
 2622      F4
 2623 10ab C442E9F7 		shlx	r10, QWORD PTR 8[r14], rdx	# tmp782, MEM[base: _465, offset: 8B], tmp1044
 2623      5608
 2624              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 843:sieve_extend.c ****     }
 2625              		.loc 1 843 54 view .LVU823
 2626 10b1 0FB64C24 		movzx	ecx, BYTE PTR -16[rsp]	# tmp1045, %sfp
 2626      F0
 2627              	.LVL102:
 843:sieve_extend.c ****     }
 2628              		.loc 1 843 54 view .LVU824
 2629 10b6 C4C2F3F7 		shrx	rsi, QWORD PTR [r14], rcx	# tmp784, MEM[base: _465, offset: 0B], tmp1045
 2629      36
 2630              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 843:sieve_extend.c ****     }
 2631              		.loc 1 843 72 view .LVU825
 2632 10bb 4909F2   		or	r10, rsi	# tmp785, tmp784
 2633 10be 4983C608 		add	r14, 8	# ivtmp.210,
 2634 10c2 4E8914E7 		mov	QWORD PTR [rdi+r12*8], r10	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2635              		.loc 1 842 48 is_stmt 1 view .LVU826
 2636              	# sieve_extend.c:842:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2637              		.loc 1 842 57 is_stmt 0 view .LVU827
 2638 10c6 4983C401 		add	r12, 1	# copy_word,
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2639              		.loc 1 842 12 is_stmt 1 view .LVU828
 2640              	.L202:
 843:sieve_extend.c ****     }
 2641              		.loc 1 843 9 view .LVU829
 2642              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 843:sieve_extend.c ****     }
 2643              		.loc 1 843 99 is_stmt 0 view .LVU830
 2644 10ca 440FB64C 		movzx	r9d, BYTE PTR -12[rsp]	# tmp1046, %sfp
 2644      24F4
 2645 10d0 C442B1F7 		shlx	r11, QWORD PTR 8[r14], r9	# tmp787, MEM[base: _465, offset: 8B], tmp1046
 2645      5E08
 2646              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 843:sieve_extend.c ****     }
 2647              		.loc 1 843 54 view .LVU831
 2648 10d6 0FB64424 		movzx	eax, BYTE PTR -16[rsp]	# tmp1047, %sfp
 2648      F0
 2649 10db C4C2FBF7 		shrx	rbx, QWORD PTR [r14], rax	# tmp789, MEM[base: _465, offset: 0B], tmp1047
 2649      1E
 2650              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 843:sieve_extend.c ****     }
 2651              		.loc 1 843 72 view .LVU832
 2652 10e0 4909DB   		or	r11, rbx	# tmp790, tmp789
 2653 10e3 4983C608 		add	r14, 8	# ivtmp.210,
 2654 10e7 4E891CE7 		mov	QWORD PTR [rdi+r12*8], r11	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2655              		.loc 1 842 48 is_stmt 1 view .LVU833
GAS LISTING /tmp/ccjg94QQ.s 			page 77


 2656              	# sieve_extend.c:842:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2657              		.loc 1 842 57 is_stmt 0 view .LVU834
 2658 10eb 4983C401 		add	r12, 1	# copy_word,
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2659              		.loc 1 842 12 is_stmt 1 view .LVU835
 2660              	.L201:
 843:sieve_extend.c ****     }
 2661              		.loc 1 843 9 view .LVU836
 2662              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 843:sieve_extend.c ****     }
 2663              		.loc 1 843 99 is_stmt 0 view .LVU837
 2664 10ef 440FB644 		movzx	r8d, BYTE PTR -12[rsp]	# tmp1048, %sfp
 2664      24F4
 2665 10f5 C4C2B9F7 		shlx	rdx, QWORD PTR 8[r14], r8	# tmp792, MEM[base: _465, offset: 8B], tmp1048
 2665      5608
 2666              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 843:sieve_extend.c ****     }
 2667              		.loc 1 843 54 view .LVU838
 2668 10fb 440FB654 		movzx	r10d, BYTE PTR -16[rsp]	# tmp1049, %sfp
 2668      24F0
 2669 1101 C4C2ABF7 		shrx	rcx, QWORD PTR [r14], r10	# tmp794, MEM[base: _465, offset: 0B], tmp1049
 2669      0E
 2670              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 843:sieve_extend.c ****     }
 2671              		.loc 1 843 72 view .LVU839
 2672 1106 4809CA   		or	rdx, rcx	# tmp795, tmp794
 2673 1109 4983C608 		add	r14, 8	# ivtmp.210,
 2674 110d 4A8914E7 		mov	QWORD PTR [rdi+r12*8], rdx	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2675              		.loc 1 842 48 is_stmt 1 view .LVU840
 2676              	# sieve_extend.c:842:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2677              		.loc 1 842 57 is_stmt 0 view .LVU841
 2678 1111 4983C401 		add	r12, 1	# copy_word,
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2679              		.loc 1 842 12 is_stmt 1 view .LVU842
 2680              	.L200:
 843:sieve_extend.c ****     }
 2681              		.loc 1 843 9 view .LVU843
 2682              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 843:sieve_extend.c ****     }
 2683              		.loc 1 843 99 is_stmt 0 view .LVU844
 2684 1115 0FB67424 		movzx	esi, BYTE PTR -12[rsp]	# tmp1050, %sfp
 2684      F4
 2685 111a C442C9F7 		shlx	r9, QWORD PTR 8[r14], rsi	# tmp797, MEM[base: _465, offset: 8B], tmp1050
 2685      4E08
 2686              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 843:sieve_extend.c ****     }
 2687              		.loc 1 843 54 view .LVU845
 2688 1120 440FB65C 		movzx	r11d, BYTE PTR -16[rsp]	# tmp1051, %sfp
 2688      24F0
 2689 1126 C4C2A3F7 		shrx	rax, QWORD PTR [r14], r11	# tmp799, MEM[base: _465, offset: 0B], tmp1051
 2689      06
 2690              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 843:sieve_extend.c ****     }
 2691              		.loc 1 843 72 view .LVU846
GAS LISTING /tmp/ccjg94QQ.s 			page 78


 2692 112b 4909C1   		or	r9, rax	# tmp800, tmp799
 2693 112e 4983C608 		add	r14, 8	# ivtmp.210,
 2694 1132 4E890CE7 		mov	QWORD PTR [rdi+r12*8], r9	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 0
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2695              		.loc 1 842 48 is_stmt 1 view .LVU847
 2696              	# sieve_extend.c:842:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2697              		.loc 1 842 57 is_stmt 0 view .LVU848
 2698 1136 4983C401 		add	r12, 1	# copy_word,
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2699              		.loc 1 842 12 is_stmt 1 view .LVU849
 2700              	.L199:
 843:sieve_extend.c ****     }
 2701              		.loc 1 843 9 view .LVU850
 2702              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 843:sieve_extend.c ****     }
 2703              		.loc 1 843 99 is_stmt 0 view .LVU851
 2704 113a 0FB65C24 		movzx	ebx, BYTE PTR -12[rsp]	# tmp1052, %sfp
 2704      F4
 2705 113f C442E1F7 		shlx	r8, QWORD PTR 8[r14], rbx	# tmp802, MEM[base: _465, offset: 8B], tmp1052
 2705      4608
 2706              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 843:sieve_extend.c ****     }
 2707              		.loc 1 843 54 view .LVU852
 2708 1145 0FB65424 		movzx	edx, BYTE PTR -16[rsp]	# tmp1053, %sfp
 2708      F0
 2709 114a C442EBF7 		shrx	r10, QWORD PTR [r14], rdx	# tmp804, MEM[base: _465, offset: 0B], tmp1053
 2709      16
 2710              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 843:sieve_extend.c ****     }
 2711              		.loc 1 843 72 view .LVU853
 2712 114f 4D09D0   		or	r8, r10	# tmp805, tmp804
 2713 1152 4983C608 		add	r14, 8	# ivtmp.210,
 2714 1156 4E8904E7 		mov	QWORD PTR [rdi+r12*8], r8	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 0
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2715              		.loc 1 842 48 is_stmt 1 view .LVU854
 2716              	# sieve_extend.c:842:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2717              		.loc 1 842 57 is_stmt 0 view .LVU855
 2718 115a 4983C401 		add	r12, 1	# copy_word,
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2719              		.loc 1 842 12 is_stmt 1 view .LVU856
 2720              	.L198:
 843:sieve_extend.c ****     }
 2721              		.loc 1 843 9 view .LVU857
 2722              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 843:sieve_extend.c ****     }
 2723              		.loc 1 843 99 is_stmt 0 view .LVU858
 2724 115e 0FB64C24 		movzx	ecx, BYTE PTR -12[rsp]	# tmp1054, %sfp
 2724      F4
 2725 1163 C4C2F1F7 		shlx	rsi, QWORD PTR 8[r14], rcx	# tmp807, MEM[base: _465, offset: 8B], tmp1054
 2725      7608
 2726              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 843:sieve_extend.c ****     }
 2727              		.loc 1 843 54 view .LVU859
 2728 1169 440FB64C 		movzx	r9d, BYTE PTR -16[rsp]	# tmp1055, %sfp
 2728      24F0
GAS LISTING /tmp/ccjg94QQ.s 			page 79


 2729 116f C442B3F7 		shrx	r11, QWORD PTR [r14], r9	# tmp809, MEM[base: _465, offset: 0B], tmp1055
 2729      1E
 2730              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 843:sieve_extend.c ****     }
 2731              		.loc 1 843 72 view .LVU860
 2732 1174 4C09DE   		or	rsi, r11	# tmp810, tmp809
 2733 1177 4983C608 		add	r14, 8	# ivtmp.210,
 2734 117b 4A8934E7 		mov	QWORD PTR [rdi+r12*8], rsi	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2735              		.loc 1 842 48 is_stmt 1 view .LVU861
 2736              	# sieve_extend.c:842:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2737              		.loc 1 842 57 is_stmt 0 view .LVU862
 2738 117f 4983C401 		add	r12, 1	# copy_word,
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2739              		.loc 1 842 12 is_stmt 1 view .LVU863
 2740              	# sieve_extend.c:842:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2741              		.loc 1 842 5 is_stmt 0 view .LVU864
 2742 1183 4C396424 		cmp	QWORD PTR -8[rsp], r12	# %sfp, copy_word
 2742      F8
 2743 1188 0F821DFA 		jb	.L73	#,
 2743      FFFF
 2744              	.L249:
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2745              		.loc 1 842 5 view .LVU865
 2746 118e 8B4424F4 		mov	eax, DWORD PTR -12[rsp]	# _182, %sfp
 2747 1192 8B5C24F0 		mov	ebx, DWORD PTR -16[rsp]	# _184, %sfp
 2748              	.L72:
 843:sieve_extend.c ****     }
 2749              		.loc 1 843 9 is_stmt 1 view .LVU866
 2750              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 843:sieve_extend.c ****     }
 2751              		.loc 1 843 54 is_stmt 0 view .LVU867
 2752 1196 C4C2E3F7 		shrx	rdx, QWORD PTR [r14], rbx	# tmp725, MEM[base: _465, offset: 0B], _184
 2752      16
 2753              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 843:sieve_extend.c ****     }
 2754              		.loc 1 843 99 view .LVU868
 2755 119b C442F9F7 		shlx	r8, QWORD PTR 8[r14], rax	# tmp723, MEM[base: _465, offset: 8B], _182
 2755      4608
 2756              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 843:sieve_extend.c ****     }
 2757              		.loc 1 843 72 view .LVU869
 2758 11a1 4909D0   		or	r8, rdx	# tmp726, tmp725
 2759 11a4 4983C640 		add	r14, 64	# ivtmp.210,
 2760 11a8 4E8904E7 		mov	QWORD PTR [rdi+r12*8], r8	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 0
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2761              		.loc 1 842 48 is_stmt 1 view .LVU870
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2762              		.loc 1 842 12 view .LVU871
 843:sieve_extend.c ****     }
 2763              		.loc 1 843 9 view .LVU872
 2764              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 843:sieve_extend.c ****     }
 2765              		.loc 1 843 54 is_stmt 0 view .LVU873
 2766 11ac C4C2E3F7 		shrx	rcx, QWORD PTR -56[r14], rbx	# tmp732, MEM[base: _465, offset: 0B], _184
GAS LISTING /tmp/ccjg94QQ.s 			page 80


 2766      4EC8
 2767              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 843:sieve_extend.c ****     }
 2768              		.loc 1 843 99 view .LVU874
 2769 11b2 C442F9F7 		shlx	r10, QWORD PTR -48[r14], rax	# tmp730, MEM[base: _465, offset: 8B], _182
 2769      56D0
 2770              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 843:sieve_extend.c ****     }
 2771              		.loc 1 843 72 view .LVU875
 2772 11b8 4909CA   		or	r10, rcx	# tmp733, tmp732
 2773 11bb 4E8954E7 		mov	QWORD PTR 8[rdi+r12*8], r10	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset:
 2773      08
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2774              		.loc 1 842 48 is_stmt 1 view .LVU876
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2775              		.loc 1 842 12 view .LVU877
 843:sieve_extend.c ****     }
 2776              		.loc 1 843 9 view .LVU878
 2777              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 843:sieve_extend.c ****     }
 2778              		.loc 1 843 54 is_stmt 0 view .LVU879
 2779 11c0 C442E3F7 		shrx	r9, QWORD PTR -48[r14], rbx	# tmp739, MEM[base: _465, offset: 0B], _184
 2779      4ED0
 2780              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 843:sieve_extend.c ****     }
 2781              		.loc 1 843 99 view .LVU880
 2782 11c6 C4C2F9F7 		shlx	rsi, QWORD PTR -40[r14], rax	# tmp737, MEM[base: _465, offset: 8B], _182
 2782      76D8
 2783              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 843:sieve_extend.c ****     }
 2784              		.loc 1 843 72 view .LVU881
 2785 11cc 4C09CE   		or	rsi, r9	# tmp740, tmp739
 2786 11cf 4A8974E7 		mov	QWORD PTR 16[rdi+r12*8], rsi	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset
 2786      10
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2787              		.loc 1 842 48 is_stmt 1 view .LVU882
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2788              		.loc 1 842 12 view .LVU883
 843:sieve_extend.c ****     }
 2789              		.loc 1 843 9 view .LVU884
 2790              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 843:sieve_extend.c ****     }
 2791              		.loc 1 843 54 is_stmt 0 view .LVU885
 2792 11d4 C442E3F7 		shrx	r8, QWORD PTR -40[r14], rbx	# tmp746, MEM[base: _465, offset: 0B], _184
 2792      46D8
 2793              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 843:sieve_extend.c ****     }
 2794              		.loc 1 843 99 view .LVU886
 2795 11da C442F9F7 		shlx	r11, QWORD PTR -32[r14], rax	# tmp744, MEM[base: _465, offset: 8B], _182
 2795      5EE0
 2796              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 843:sieve_extend.c ****     }
 2797              		.loc 1 843 72 view .LVU887
 2798 11e0 4D09C3   		or	r11, r8	# tmp747, tmp746
 2799 11e3 4E895CE7 		mov	QWORD PTR 24[rdi+r12*8], r11	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset
 2799      18
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
GAS LISTING /tmp/ccjg94QQ.s 			page 81


 2800              		.loc 1 842 48 is_stmt 1 view .LVU888
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2801              		.loc 1 842 12 view .LVU889
 843:sieve_extend.c ****     }
 2802              		.loc 1 843 9 view .LVU890
 2803              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 843:sieve_extend.c ****     }
 2804              		.loc 1 843 99 is_stmt 0 view .LVU891
 2805 11e8 C4C2F9F7 		shlx	rdx, QWORD PTR -24[r14], rax	# tmp751, MEM[base: _465, offset: 8B], _182
 2805      56E8
 2806              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 843:sieve_extend.c ****     }
 2807              		.loc 1 843 54 view .LVU892
 2808 11ee C442E3F7 		shrx	r10, QWORD PTR -32[r14], rbx	# tmp753, MEM[base: _465, offset: 0B], _184
 2808      56E0
 2809              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 843:sieve_extend.c ****     }
 2810              		.loc 1 843 72 view .LVU893
 2811 11f4 4C09D2   		or	rdx, r10	# tmp754, tmp753
 2812 11f7 4A8954E7 		mov	QWORD PTR 32[rdi+r12*8], rdx	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset
 2812      20
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2813              		.loc 1 842 48 is_stmt 1 view .LVU894
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2814              		.loc 1 842 12 view .LVU895
 843:sieve_extend.c ****     }
 2815              		.loc 1 843 9 view .LVU896
 2816              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 843:sieve_extend.c ****     }
 2817              		.loc 1 843 99 is_stmt 0 view .LVU897
 2818 11fc C4C2F9F7 		shlx	rcx, QWORD PTR -16[r14], rax	# tmp758, MEM[base: _465, offset: 8B], _182
 2818      4EF0
 2819              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 843:sieve_extend.c ****     }
 2820              		.loc 1 843 54 view .LVU898
 2821 1202 C4C2E3F7 		shrx	rsi, QWORD PTR -24[r14], rbx	# tmp760, MEM[base: _465, offset: 0B], _184
 2821      76E8
 2822              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 843:sieve_extend.c ****     }
 2823              		.loc 1 843 72 view .LVU899
 2824 1208 4809F1   		or	rcx, rsi	# tmp761, tmp760
 2825 120b 4A894CE7 		mov	QWORD PTR 40[rdi+r12*8], rcx	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset
 2825      28
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2826              		.loc 1 842 48 is_stmt 1 view .LVU900
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2827              		.loc 1 842 12 view .LVU901
 843:sieve_extend.c ****     }
 2828              		.loc 1 843 9 view .LVU902
 2829              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 843:sieve_extend.c ****     }
 2830              		.loc 1 843 99 is_stmt 0 view .LVU903
 2831 1210 C442F9F7 		shlx	r11, QWORD PTR -8[r14], rax	# tmp765, MEM[base: _465, offset: 8B], _182
 2831      5EF8
 2832              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 843:sieve_extend.c ****     }
 2833              		.loc 1 843 54 view .LVU904
GAS LISTING /tmp/ccjg94QQ.s 			page 82


 2834 1216 C442E3F7 		shrx	r9, QWORD PTR -16[r14], rbx	# tmp767, MEM[base: _465, offset: 0B], _184
 2834      4EF0
 2835              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 843:sieve_extend.c ****     }
 2836              		.loc 1 843 72 view .LVU905
 2837 121c 4D09CB   		or	r11, r9	# tmp768, tmp767
 2838 121f 4E895CE7 		mov	QWORD PTR 48[rdi+r12*8], r11	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset
 2838      30
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2839              		.loc 1 842 48 is_stmt 1 view .LVU906
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2840              		.loc 1 842 12 view .LVU907
 843:sieve_extend.c ****     }
 2841              		.loc 1 843 9 view .LVU908
 2842              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 843:sieve_extend.c ****     }
 2843              		.loc 1 843 99 is_stmt 0 view .LVU909
 2844 1224 C442F9F7 		shlx	r8, QWORD PTR [r14], rax	# tmp772, MEM[base: _465, offset: 8B], _182
 2844      06
 2845              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 843:sieve_extend.c ****     }
 2846              		.loc 1 843 54 view .LVU910
 2847 1229 C4C2E3F7 		shrx	rdx, QWORD PTR -8[r14], rbx	# tmp774, MEM[base: _465, offset: 0B], _184
 2847      56F8
 2848              	# sieve_extend.c:843:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 843:sieve_extend.c ****     }
 2849              		.loc 1 843 72 view .LVU911
 2850 122f 4909D0   		or	r8, rdx	# tmp775, tmp774
 2851 1232 4E8944E7 		mov	QWORD PTR 56[rdi+r12*8], r8	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset:
 2851      38
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2852              		.loc 1 842 48 is_stmt 1 view .LVU912
 2853              	# sieve_extend.c:842:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2854              		.loc 1 842 57 is_stmt 0 view .LVU913
 2855 1237 4983C408 		add	r12, 8	# copy_word,
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2856              		.loc 1 842 12 is_stmt 1 view .LVU914
 2857              	# sieve_extend.c:842:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 842:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2858              		.loc 1 842 5 is_stmt 0 view .LVU915
 2859 123b 4C396424 		cmp	QWORD PTR -8[rsp], r12	# %sfp, copy_word
 2859      F8
 2860 1240 0F8350FF 		jnb	.L72	#,
 2860      FFFF
 2861 1246 E960F9FF 		jmp	.L73	#
 2861      FF
 2862              	.LVL103:
 2863 124b 0F1F4400 		.p2align 4,,7
 2863      00
 2864              		.p2align 3
 2865              	.L260:
 817:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 2866              		.loc 1 817 9 is_stmt 1 view .LVU916
 2867              	# sieve_extend.c:817:         bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the s
 817:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 2868              		.loc 1 817 29 is_stmt 0 view .LVU917
GAS LISTING /tmp/ccjg94QQ.s 			page 83


 2869 1250 488B7C24 		mov	rdi, QWORD PTR -24[rsp]	# pretmp_178, %sfp
 2869      E8
 2870              	.LVL104:
 2871              	# sieve_extend.c:819:                                 & keepmask(copy_start) & chopmask(destination
 819:sieve_extend.c ****         return; // rapid exit for one word variant
 2872              		.loc 1 819 56 view .LVU918
 2873 1255 4D21FA   		and	r10, r15	# _189, _193
 2874 1258 4D21D1   		and	r9, r10	# tmp405, tmp404
 2875              	# sieve_extend.c:817:         bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the s
 817:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 2876              		.loc 1 817 29 view .LVU919
 2877 125b 4C09CF   		or	rdi, r9	# pretmp_178, tmp405
 2878 125e 49897D00 		mov	QWORD PTR 0[r13], rdi	# *_177, tmp406
 820:sieve_extend.c ****     }
 2879              		.loc 1 820 9 is_stmt 1 view .LVU920
 2880              	# sieve_extend.c:847: }
 2881              		.loc 1 847 1 is_stmt 0 view .LVU921
 2882 1262 488D65D8 		lea	rsp, -40[rbp]	#,
 2883 1266 5B       		pop	rbx	#
 2884 1267 415C     		pop	r12	#
 2885 1269 415D     		pop	r13	#
 2886 126b 415E     		pop	r14	#
 2887              	.LVL105:
 2888              		.loc 1 847 1 view .LVU922
 2889 126d 415F     		pop	r15	#
 2890 126f 5D       		pop	rbp	#
 2891              		.cfi_remember_state
 2892              		.cfi_def_cfa 7, 8
 2893 1270 C3       		ret	
 2894              	.LVL106:
 2895              		.p2align 4,,7
 2896 1271 0F1F8000 		.p2align 3
 2896      000000
 2897              	.L255:
 2898              		.cfi_restore_state
 2899              		.loc 1 847 1 view .LVU923
 2900 1278 C5F877   		vzeroupper
 2901 127b E969FDFF 		jmp	.L62	#
 2901      FF
 2902              	.LVL107:
 2903              		.p2align 4,,7
 2904              		.p2align 3
 2905              	.L257:
 2906              		.loc 1 847 1 view .LVU924
 2907 1280 C5F877   		vzeroupper
 2908 1283 E923F9FF 		jmp	.L73	#
 2908      FF
 2909              	.LVL108:
 2910              		.p2align 4,,7
 2911              		.p2align 3
 2912              	.L77:
 2913              	# sieve_extend.c:813:     register counter_t source_word = wordindex(source_start);
 813:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 2914              		.loc 1 813 24 view .LVU925
 2915 1288 48897424 		mov	QWORD PTR -40[rsp], rsi	# %sfp, source_word
 2915      D8
 2916              	# sieve_extend.c:827:     copy_word++;
GAS LISTING /tmp/ccjg94QQ.s 			page 84


 827:sieve_extend.c **** 
 2917              		.loc 1 827 14 view .LVU926
 2918 128d 4989CC   		mov	r12, rcx	# copy_word, copy_word
 2919 1290 4C8D5601 		lea	r10, 1[rsi]	# tmp566,
 2920 1294 E9FBF5FF 		jmp	.L67	#
 2920      FF
 2921              	.LVL109:
 2922              	.L57:
 827:sieve_extend.c **** 
 2923              		.loc 1 827 14 view .LVU927
 2924 1299 488B5424 		mov	rdx, QWORD PTR -24[rsp]	# loop_distance, %sfp
 2924      E8
 2925              	.LBB311:
 2926              	.LBB309:
 2927              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2928              		.loc 1 837 35 view .LVU928
 2929 129e 4929F0   		sub	r8, rsi	# tmp490, source_word
 2930 12a1 4801F2   		add	rdx, rsi	# loop_distance, source_word
 2931 12a4 4C8D24D7 		lea	r12, [rdi+rdx*8]	# _481,
 2932 12a8 4C89E0   		mov	rax, r12	# tmp575, _481
 2933 12ab 4C29D8   		sub	rax, r11	# tmp575, ivtmp.228
 2934 12ae 4883E808 		sub	rax, 8	# tmp576,
 2935 12b2 48C1E803 		shr	rax, 3	# tmp574,
 2936 12b6 4883C001 		add	rax, 1	# tmp577,
 2937 12ba 83E007   		and	eax, 7	# tmp578,
 2938 12bd 0F842401 		je	.L250	#,
 2938      0000
 2939 12c3 4883F801 		cmp	rax, 1	# tmp578,
 2940 12c7 0F84EF00 		je	.L185	#,
 2940      0000
 2941 12cd 4883F802 		cmp	rax, 2	# tmp578,
 2942 12d1 0F84C400 		je	.L186	#,
 2942      0000
 2943 12d7 4883F803 		cmp	rax, 3	# tmp578,
 2944 12db 0F849800 		je	.L187	#,
 2944      0000
 2945 12e1 4883F804 		cmp	rax, 4	# tmp578,
 2946 12e5 7471     		je	.L188	#,
 2947 12e7 4883F805 		cmp	rax, 5	# tmp578,
 2948 12eb 7449     		je	.L189	#,
 2949 12ed 4883F806 		cmp	rax, 6	# tmp578,
 2950 12f1 7422     		je	.L190	#,
 2951              	.LVL110:
 837:sieve_extend.c ****         }
 2952              		.loc 1 837 13 is_stmt 1 view .LVU929
 2953              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2954              		.loc 1 837 62 is_stmt 0 view .LVU930
 2955 12f3 440FB64C 		movzx	r9d, BYTE PTR -16[rsp]	# tmp1057, %sfp
 2955      24F0
 2956 12f9 C442B3F7 		shrx	r13, QWORD PTR [r11], r9	# tmp812, MEM[base: _475, offset: 0B], tmp1057
 2956      2B
 2957              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2958              		.loc 1 837 109 view .LVU931
 2959 12fe 0FB65C24 		movzx	ebx, BYTE PTR -12[rsp]	# tmp1058, %sfp
GAS LISTING /tmp/ccjg94QQ.s 			page 85


 2959      F4
 2960 1303 C442E1F7 		shlx	r10, QWORD PTR 8[r11], rbx	# tmp814, MEM[base: _475, offset: 8B], tmp1058
 2960      5308
 2961              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2962              		.loc 1 837 80 view .LVU932
 2963 1309 4D09D5   		or	r13, r10	# tmp815, tmp814
 2964 130c 4F896CC3 		mov	QWORD PTR 8[r11+r8*8], r13	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp815
 2964      08
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2965              		.loc 1 836 58 is_stmt 1 view .LVU933
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2966              		.loc 1 836 40 view .LVU934
 2967 1311 4983C308 		add	r11, 8	# ivtmp.228,
 2968              	.L190:
 837:sieve_extend.c ****         }
 2969              		.loc 1 837 13 view .LVU935
 2970              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2971              		.loc 1 837 62 is_stmt 0 view .LVU936
 2972 1315 0FB64C24 		movzx	ecx, BYTE PTR -16[rsp]	# tmp1059, %sfp
 2972      F0
 2973              	.LVL111:
 837:sieve_extend.c ****         }
 2974              		.loc 1 837 62 view .LVU937
 2975 131a C442F3F7 		shrx	r14, QWORD PTR [r11], rcx	# tmp817, MEM[base: _475, offset: 0B], tmp1059
 2975      33
 2976              	.LVL112:
 2977              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2978              		.loc 1 837 109 view .LVU938
 2979 131f 0FB67424 		movzx	esi, BYTE PTR -12[rsp]	# tmp1060, %sfp
 2979      F4
 2980 1324 C4C2C9F7 		shlx	rax, QWORD PTR 8[r11], rsi	# tmp819, MEM[base: _475, offset: 8B], tmp1060
 2980      4308
 2981              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2982              		.loc 1 837 80 view .LVU939
 2983 132a 4909C6   		or	r14, rax	# tmp820, tmp819
 2984 132d 4F8974C3 		mov	QWORD PTR 8[r11+r8*8], r14	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp820
 2984      08
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2985              		.loc 1 836 58 is_stmt 1 view .LVU940
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2986              		.loc 1 836 40 view .LVU941
 2987 1332 4983C308 		add	r11, 8	# ivtmp.228,
 2988              	.L189:
 837:sieve_extend.c ****         }
 2989              		.loc 1 837 13 view .LVU942
 2990              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2991              		.loc 1 837 62 is_stmt 0 view .LVU943
 2992 1336 440FB64C 		movzx	r9d, BYTE PTR -16[rsp]	# tmp1061, %sfp
 2992      24F0
 2993 133c C442B3F7 		shrx	r13, QWORD PTR [r11], r9	# tmp822, MEM[base: _475, offset: 0B], tmp1061
 2993      2B
 2994              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
GAS LISTING /tmp/ccjg94QQ.s 			page 86


 837:sieve_extend.c ****         }
 2995              		.loc 1 837 109 view .LVU944
 2996 1341 0FB65C24 		movzx	ebx, BYTE PTR -12[rsp]	# tmp1062, %sfp
 2996      F4
 2997 1346 C442E1F7 		shlx	r10, QWORD PTR 8[r11], rbx	# tmp824, MEM[base: _475, offset: 8B], tmp1062
 2997      5308
 2998              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 2999              		.loc 1 837 80 view .LVU945
 3000 134c 4D09D5   		or	r13, r10	# tmp825, tmp824
 3001 134f 4F896CC3 		mov	QWORD PTR 8[r11+r8*8], r13	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp825
 3001      08
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3002              		.loc 1 836 58 is_stmt 1 view .LVU946
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3003              		.loc 1 836 40 view .LVU947
 3004 1354 4983C308 		add	r11, 8	# ivtmp.228,
 3005              	.L188:
 837:sieve_extend.c ****         }
 3006              		.loc 1 837 13 view .LVU948
 3007              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 3008              		.loc 1 837 62 is_stmt 0 view .LVU949
 3009 1358 0FB64C24 		movzx	ecx, BYTE PTR -16[rsp]	# tmp1063, %sfp
 3009      F0
 3010 135d C442F3F7 		shrx	r14, QWORD PTR [r11], rcx	# tmp827, MEM[base: _475, offset: 0B], tmp1063
 3010      33
 3011              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 3012              		.loc 1 837 109 view .LVU950
 3013 1362 0FB67424 		movzx	esi, BYTE PTR -12[rsp]	# tmp1064, %sfp
 3013      F4
 3014 1367 C4C2C9F7 		shlx	rax, QWORD PTR 8[r11], rsi	# tmp829, MEM[base: _475, offset: 8B], tmp1064
 3014      4308
 3015              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 3016              		.loc 1 837 80 view .LVU951
 3017 136d 4909C6   		or	r14, rax	# tmp830, tmp829
 3018 1370 4F8974C3 		mov	QWORD PTR 8[r11+r8*8], r14	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp830
 3018      08
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3019              		.loc 1 836 58 is_stmt 1 view .LVU952
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3020              		.loc 1 836 40 view .LVU953
 3021 1375 4983C308 		add	r11, 8	# ivtmp.228,
 3022              	.L187:
 837:sieve_extend.c ****         }
 3023              		.loc 1 837 13 view .LVU954
 3024              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 3025              		.loc 1 837 62 is_stmt 0 view .LVU955
 3026 1379 440FB64C 		movzx	r9d, BYTE PTR -16[rsp]	# tmp1065, %sfp
 3026      24F0
 3027 137f C442B3F7 		shrx	r13, QWORD PTR [r11], r9	# tmp832, MEM[base: _475, offset: 0B], tmp1065
 3027      2B
 3028              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
GAS LISTING /tmp/ccjg94QQ.s 			page 87


 3029              		.loc 1 837 109 view .LVU956
 3030 1384 0FB65C24 		movzx	ebx, BYTE PTR -12[rsp]	# tmp1066, %sfp
 3030      F4
 3031 1389 C442E1F7 		shlx	r10, QWORD PTR 8[r11], rbx	# tmp834, MEM[base: _475, offset: 8B], tmp1066
 3031      5308
 3032              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 3033              		.loc 1 837 80 view .LVU957
 3034 138f 4D09D5   		or	r13, r10	# tmp835, tmp834
 3035 1392 4F896CC3 		mov	QWORD PTR 8[r11+r8*8], r13	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp835
 3035      08
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3036              		.loc 1 836 58 is_stmt 1 view .LVU958
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3037              		.loc 1 836 40 view .LVU959
 3038 1397 4983C308 		add	r11, 8	# ivtmp.228,
 3039              	.L186:
 837:sieve_extend.c ****         }
 3040              		.loc 1 837 13 view .LVU960
 3041              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 3042              		.loc 1 837 62 is_stmt 0 view .LVU961
 3043 139b 0FB64C24 		movzx	ecx, BYTE PTR -16[rsp]	# tmp1067, %sfp
 3043      F0
 3044 13a0 C442F3F7 		shrx	r14, QWORD PTR [r11], rcx	# tmp837, MEM[base: _475, offset: 0B], tmp1067
 3044      33
 3045              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 3046              		.loc 1 837 109 view .LVU962
 3047 13a5 0FB67424 		movzx	esi, BYTE PTR -12[rsp]	# tmp1068, %sfp
 3047      F4
 3048 13aa C4C2C9F7 		shlx	rax, QWORD PTR 8[r11], rsi	# tmp839, MEM[base: _475, offset: 8B], tmp1068
 3048      4308
 3049              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 3050              		.loc 1 837 80 view .LVU963
 3051 13b0 4909C6   		or	r14, rax	# tmp840, tmp839
 3052 13b3 4F8974C3 		mov	QWORD PTR 8[r11+r8*8], r14	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp840
 3052      08
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3053              		.loc 1 836 58 is_stmt 1 view .LVU964
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3054              		.loc 1 836 40 view .LVU965
 3055 13b8 4983C308 		add	r11, 8	# ivtmp.228,
 3056              	.L185:
 837:sieve_extend.c ****         }
 3057              		.loc 1 837 13 view .LVU966
 3058              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 3059              		.loc 1 837 62 is_stmt 0 view .LVU967
 3060 13bc 440FB64C 		movzx	r9d, BYTE PTR -16[rsp]	# tmp1069, %sfp
 3060      24F0
 3061 13c2 C442B3F7 		shrx	r13, QWORD PTR [r11], r9	# tmp842, MEM[base: _475, offset: 0B], tmp1069
 3061      2B
 3062              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 3063              		.loc 1 837 109 view .LVU968
GAS LISTING /tmp/ccjg94QQ.s 			page 88


 3064 13c7 0FB65C24 		movzx	ebx, BYTE PTR -12[rsp]	# tmp1070, %sfp
 3064      F4
 3065 13cc C442E1F7 		shlx	r10, QWORD PTR 8[r11], rbx	# tmp844, MEM[base: _475, offset: 8B], tmp1070
 3065      5308
 3066              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 3067              		.loc 1 837 80 view .LVU969
 3068 13d2 4D09D5   		or	r13, r10	# tmp845, tmp844
 3069 13d5 4F896CC3 		mov	QWORD PTR 8[r11+r8*8], r13	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp845
 3069      08
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3070              		.loc 1 836 58 is_stmt 1 view .LVU970
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3071              		.loc 1 836 40 view .LVU971
 3072 13da 4983C308 		add	r11, 8	# ivtmp.228,
 3073              	# sieve_extend.c:836:         for (register counter_t i = 0; i <loop_distance; i++) {
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3074              		.loc 1 836 9 is_stmt 0 view .LVU972
 3075 13de 4D39E3   		cmp	r11, r12	# ivtmp.228, _481
 3076 13e1 0F8402FC 		je	.L62	#,
 3076      FFFF
 3077              	.L250:
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3078              		.loc 1 836 9 view .LVU973
 3079 13e7 8B4C24F4 		mov	ecx, DWORD PTR -12[rsp]	# _182, %sfp
 3080 13eb 448B7424 		mov	r14d, DWORD PTR -16[rsp]	# _184, %sfp
 3080      F0
 3081              	.L64:
 837:sieve_extend.c ****         }
 3082              		.loc 1 837 13 is_stmt 1 view .LVU974
 3083              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 3084              		.loc 1 837 109 is_stmt 0 view .LVU975
 3085 13f0 C4C2F1F7 		shlx	rax, QWORD PTR 8[r11], rcx	# tmp493, MEM[base: _475, offset: 8B], _182
 3085      4308
 3086              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 3087              		.loc 1 837 62 view .LVU976
 3088 13f6 C4C28BF7 		shrx	rsi, QWORD PTR [r11], r14	# tmp491, MEM[base: _475, offset: 0B], _184
 3088      33
 3089              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 3090              		.loc 1 837 80 view .LVU977
 3091 13fb 4809C6   		or	rsi, rax	# tmp495, tmp493
 3092 13fe 4D8D6B08 		lea	r13, 8[r11]	# tmp579,
 3093 1402 4B8974C3 		mov	QWORD PTR 8[r11+r8*8], rsi	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp495
 3093      08
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3094              		.loc 1 836 58 is_stmt 1 view .LVU978
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3095              		.loc 1 836 40 view .LVU979
 837:sieve_extend.c ****         }
 3096              		.loc 1 837 13 view .LVU980
 3097              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 3098              		.loc 1 837 62 is_stmt 0 view .LVU981
 3099 1407 C4428BF7 		shrx	r9, QWORD PTR 8[r11], r14	# tmp636, MEM[base: _475, offset: 0B], _184
GAS LISTING /tmp/ccjg94QQ.s 			page 89


 3099      4B08
 3100              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 3101              		.loc 1 837 109 view .LVU982
 3102 140d C4C2F1F7 		shlx	rbx, QWORD PTR 8[r13], rcx	# tmp638, MEM[base: _475, offset: 8B], _182
 3102      5D08
 3103              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 3104              		.loc 1 837 80 view .LVU983
 3105 1413 4909D9   		or	r9, rbx	# tmp639, tmp638
 3106 1416 4D8D5310 		lea	r10, 16[r11]	# ivtmp.228,
 3107 141a 4D8D6B18 		lea	r13, 24[r11]	# ivtmp.228,
 3108 141e 4F894CC3 		mov	QWORD PTR 16[r11+r8*8], r9	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp639
 3108      10
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3109              		.loc 1 836 58 is_stmt 1 view .LVU984
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3110              		.loc 1 836 40 view .LVU985
 837:sieve_extend.c ****         }
 3111              		.loc 1 837 13 view .LVU986
 3112              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 3113              		.loc 1 837 62 is_stmt 0 view .LVU987
 3114 1423 C4C28BF7 		shrx	rsi, QWORD PTR 16[r11], r14	# tmp642, MEM[base: _475, offset: 0B], _184
 3114      7310
 3115              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 3116              		.loc 1 837 109 view .LVU988
 3117 1429 C4C2F1F7 		shlx	rax, QWORD PTR 8[r10], rcx	# tmp644, MEM[base: _475, offset: 8B], _182
 3117      4208
 3118              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 3119              		.loc 1 837 80 view .LVU989
 3120 142f 4809C6   		or	rsi, rax	# tmp645, tmp644
 3121 1432 4B8974C3 		mov	QWORD PTR 24[r11+r8*8], rsi	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp645
 3121      18
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3122              		.loc 1 836 58 is_stmt 1 view .LVU990
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3123              		.loc 1 836 40 view .LVU991
 837:sieve_extend.c ****         }
 3124              		.loc 1 837 13 view .LVU992
 3125              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 3126              		.loc 1 837 62 is_stmt 0 view .LVU993
 3127 1437 C4428BF7 		shrx	r9, QWORD PTR 24[r11], r14	# tmp648, MEM[base: _475, offset: 0B], _184
 3127      4B18
 3128              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 3129              		.loc 1 837 109 view .LVU994
 3130 143d C4C2F1F7 		shlx	rbx, QWORD PTR 8[r13], rcx	# tmp650, MEM[base: _475, offset: 8B], _182
 3130      5D08
 3131              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 3132              		.loc 1 837 80 view .LVU995
 3133 1443 4909D9   		or	r9, rbx	# tmp651, tmp650
 3134 1446 4D8D5320 		lea	r10, 32[r11]	# ivtmp.228,
GAS LISTING /tmp/ccjg94QQ.s 			page 90


 3135 144a 4D8D6B28 		lea	r13, 40[r11]	# ivtmp.228,
 3136 144e 4F894CC3 		mov	QWORD PTR 32[r11+r8*8], r9	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp651
 3136      20
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3137              		.loc 1 836 58 is_stmt 1 view .LVU996
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3138              		.loc 1 836 40 view .LVU997
 837:sieve_extend.c ****         }
 3139              		.loc 1 837 13 view .LVU998
 3140              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 3141              		.loc 1 837 62 is_stmt 0 view .LVU999
 3142 1453 C4C28BF7 		shrx	rsi, QWORD PTR 32[r11], r14	# tmp654, MEM[base: _475, offset: 0B], _184
 3142      7320
 3143              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 3144              		.loc 1 837 109 view .LVU1000
 3145 1459 C4C2F1F7 		shlx	rax, QWORD PTR 8[r10], rcx	# tmp656, MEM[base: _475, offset: 8B], _182
 3145      4208
 3146              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 3147              		.loc 1 837 80 view .LVU1001
 3148 145f 4809C6   		or	rsi, rax	# tmp657, tmp656
 3149 1462 4B8974C3 		mov	QWORD PTR 40[r11+r8*8], rsi	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp657
 3149      28
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3150              		.loc 1 836 58 is_stmt 1 view .LVU1002
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3151              		.loc 1 836 40 view .LVU1003
 837:sieve_extend.c ****         }
 3152              		.loc 1 837 13 view .LVU1004
 3153              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 3154              		.loc 1 837 62 is_stmt 0 view .LVU1005
 3155 1467 C4428BF7 		shrx	r9, QWORD PTR 40[r11], r14	# tmp660, MEM[base: _475, offset: 0B], _184
 3155      4B28
 3156              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 3157              		.loc 1 837 109 view .LVU1006
 3158 146d C4C2F1F7 		shlx	rbx, QWORD PTR 8[r13], rcx	# tmp662, MEM[base: _475, offset: 8B], _182
 3158      5D08
 3159              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 3160              		.loc 1 837 80 view .LVU1007
 3161 1473 4909D9   		or	r9, rbx	# tmp663, tmp662
 3162 1476 4D8D5330 		lea	r10, 48[r11]	# ivtmp.228,
 3163 147a 4D8D6B38 		lea	r13, 56[r11]	# ivtmp.228,
 3164 147e 4F894CC3 		mov	QWORD PTR 48[r11+r8*8], r9	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp663
 3164      30
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3165              		.loc 1 836 58 is_stmt 1 view .LVU1008
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3166              		.loc 1 836 40 view .LVU1009
 837:sieve_extend.c ****         }
 3167              		.loc 1 837 13 view .LVU1010
 3168              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
GAS LISTING /tmp/ccjg94QQ.s 			page 91


 3169              		.loc 1 837 62 is_stmt 0 view .LVU1011
 3170 1483 C4C28BF7 		shrx	rsi, QWORD PTR 48[r11], r14	# tmp666, MEM[base: _475, offset: 0B], _184
 3170      7330
 3171              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 3172              		.loc 1 837 109 view .LVU1012
 3173 1489 C4C2F1F7 		shlx	rax, QWORD PTR 8[r10], rcx	# tmp668, MEM[base: _475, offset: 8B], _182
 3173      4208
 3174              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 3175              		.loc 1 837 80 view .LVU1013
 3176 148f 4809C6   		or	rsi, rax	# tmp669, tmp668
 3177 1492 4B8974C3 		mov	QWORD PTR 56[r11+r8*8], rsi	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp669
 3177      38
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3178              		.loc 1 836 58 is_stmt 1 view .LVU1014
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3179              		.loc 1 836 40 view .LVU1015
 837:sieve_extend.c ****         }
 3180              		.loc 1 837 13 view .LVU1016
 3181              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 3182              		.loc 1 837 62 is_stmt 0 view .LVU1017
 3183 1497 C4428BF7 		shrx	r9, QWORD PTR 56[r11], r14	# tmp672, MEM[base: _475, offset: 0B], _184
 3183      4B38
 3184              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 3185              		.loc 1 837 109 view .LVU1018
 3186 149d C4C2F1F7 		shlx	rbx, QWORD PTR 8[r13], rcx	# tmp674, MEM[base: _475, offset: 8B], _182
 3186      5D08
 3187              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 3188              		.loc 1 837 80 view .LVU1019
 3189 14a3 4909D9   		or	r9, rbx	# tmp675, tmp674
 3190 14a6 4F894CC3 		mov	QWORD PTR 64[r11+r8*8], r9	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp675
 3190      40
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3191              		.loc 1 836 58 is_stmt 1 view .LVU1020
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3192              		.loc 1 836 40 view .LVU1021
 3193 14ab 4983C340 		add	r11, 64	# ivtmp.228,
 3194              	# sieve_extend.c:836:         for (register counter_t i = 0; i <loop_distance; i++) {
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3195              		.loc 1 836 9 is_stmt 0 view .LVU1022
 3196 14af 4D39E3   		cmp	r11, r12	# ivtmp.228, _481
 3197 14b2 0F8538FF 		jne	.L64	#,
 3197      FFFF
 3198 14b8 E92CFBFF 		jmp	.L62	#
 3198      FF
 3199              	.LVL113:
 3200              	.L262:
 837:sieve_extend.c ****         }
 3201              		.loc 1 837 13 is_stmt 1 view .LVU1023
 3202              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 3203              		.loc 1 837 62 is_stmt 0 view .LVU1024
 3204 14bd C4417D6F 		vmovdqa	ymm8, YMMWORD PTR [r10]	# tmp1071, MEM[base: vectp.194_325, index: ivtmp.237_483, offset: 
GAS LISTING /tmp/ccjg94QQ.s 			page 92


 3204      02
 3205 14c2 BA200000 		mov	edx, 32	# ivtmp.237,
 3205      00
 3206              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 3207              		.loc 1 837 109 view .LVU1025
 3208 14c7 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR [r11]	# tmp1072, MEM[base: vectp.198_332, index: ivtmp.237_483, offset: 
 3208      1B
 3209              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 3210              		.loc 1 837 62 view .LVU1026
 3211 14cc C53DD3C9 		vpsrlq	ymm9, ymm8, xmm1	# vect__49.196, tmp1071, _184
 3212              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 3213              		.loc 1 837 109 view .LVU1027
 3214 14d0 C565F3D0 		vpsllq	ymm10, ymm3, xmm0	# vect__54.200, tmp1072, _182
 3215              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 3216              		.loc 1 837 80 view .LVU1028
 3217 14d4 C44135EB 		vpor	ymm11, ymm9, ymm10	# vect__58.201, vect__49.196, vect__54.200
 3217      DA
 3218              	# sieve_extend.c:837:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 837:sieve_extend.c ****         }
 3219              		.loc 1 837 35 view .LVU1029
 3220 14d9 C4417E7F 		vmovdqu	YMMWORD PTR [r9], ymm11	# MEM[base: vectp.203_341, index: ivtmp.237_483, offset: 0B], vect
 3220      19
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3221              		.loc 1 836 58 is_stmt 1 view .LVU1030
 836:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3222              		.loc 1 836 40 view .LVU1031
 3223 14de E95AF8FF 		jmp	.L184	#
 3223      FF
 3224              	.LBE309:
 3225              	.LBE311:
 3226              		.cfi_endproc
 3227              	.LFE70:
 3229 14e3 66662E0F 		.p2align 4
 3229      1F840000 
 3229      00000066 
 3229      90
 3230              		.globl	compare_tuning_result
 3232              	compare_tuning_result:
 3233              	.LVL114:
 3234              	.LFB82:
 848:sieve_extend.c **** 
 849:sieve_extend.c **** static void extendSieve_shiftright_base(bitword_t* bitarray, const counter_t source_start, const co
 850:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 851:sieve_extend.c ****    
 852:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 853:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 854:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_calc(source_start);
 855:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 856:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 857:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 858:sieve_extend.c **** 
 859:sieve_extend.c ****     if (copy_word >= destination_stop_word) { 
 860:sieve_extend.c ****         bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose da
GAS LISTING /tmp/ccjg94QQ.s 			page 93


 861:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 862:sieve_extend.c ****                                 & keepmask(copy_start) & chopmask(destination_stop);
 863:sieve_extend.c ****         return; // rapid exit for one word variant
 864:sieve_extend.c ****     }
 865:sieve_extend.c **** 
 866:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose data
 867:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 868:sieve_extend.c ****                                 & keepmask(copy_start);
 869:sieve_extend.c ****     
 870:sieve_extend.c ****     copy_word++;
 871:sieve_extend.c **** 
 872:sieve_extend.c ****     debug { printf("...start - %ju - %ju - end\n",(uintmax_t)wordindex(copy_start), (uintmax_t)dest
 873:sieve_extend.c **** 
 874:sieve_extend.c ****     for (; copy_word <= destination_stop_word; copy_word++, source_word++ ) 
 875:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 876:sieve_extend.c ****     // bitarray[copy_word] &= chopmask(destination_stop);
 877:sieve_extend.c **** 
 878:sieve_extend.c **** }
 879:sieve_extend.c **** 
 880:sieve_extend.c **** static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source_start, const counter_
 881:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 882:sieve_extend.c **** 
 883:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 884:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 885:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_calc(copy_start);
 886:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 887:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 888:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 889:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 890:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 891:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 892:sieve_extend.c **** 
 893:sieve_extend.c ****     copy_word++;
 894:sieve_extend.c ****     source_word++;
 895:sieve_extend.c **** 
 896:sieve_extend.c ****     const counter_t aligned_copy_word = min(source_word + size, destination_stop_word); // after <<
 897:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 898:sieve_extend.c ****     source_word += distance;
 899:sieve_extend.c ****     copy_word += distance;
 900:sieve_extend.c **** 
 901:sieve_extend.c ****      debug { counter_t fast_loop_stop_word = uintsafeminus(aligned_copy_word,2); printf("...start -
 902:sieve_extend.c **** 
 903:sieve_extend.c ****     #pragma ivdep
 904:sieve_extend.c ****     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 905:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 906:sieve_extend.c ****     }
 907:sieve_extend.c **** 
 908:sieve_extend.c ****     if (copy_word >= destination_stop_word) return;
 909:sieve_extend.c **** 
 910:sieve_extend.c ****     source_word = copy_word - size; // recalibrate
 911:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 912:sieve_extend.c **** 
 913:sieve_extend.c ****     #pragma ivdep
 914:sieve_extend.c ****     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 915:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 916:sieve_extend.c **** 
 917:sieve_extend.c ****     #pragma ivdep
GAS LISTING /tmp/ccjg94QQ.s 			page 94


 918:sieve_extend.c ****     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 919:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 920:sieve_extend.c **** 
 921:sieve_extend.c **** 
 922:sieve_extend.c ****  }
 923:sieve_extend.c **** 
 924:sieve_extend.c **** static inline void extendSieve(bitword_t* bitarray, const counter_t source_start, const counter_t s
 925:sieve_extend.c ****     if (size < WORD_SIZE_counter)   {
 926:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 927:sieve_extend.c ****         return; // rapid exit for small sizes
 928:sieve_extend.c ****     }
 929:sieve_extend.c **** 
 930:sieve_extend.c ****     const counter_t copy_start  = source_start + size;
 931:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 932:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 933:sieve_extend.c **** 
 934:sieve_extend.c ****     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_start, size, destinatio
 935:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 936:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 937:sieve_extend.c **** }
 938:sieve_extend.c **** 
 939:sieve_extend.c **** static void sieve_block_stripe(struct sieve_state *sieve, const counter_t block_start, const counte
 940:sieve_extend.c ****     counter_t prime = prime_start;
 941:sieve_extend.c ****     counter_t start = prime * prime * 2 + prime * 2;
 942:sieve_extend.c ****     counter_t step  = prime * 2 + 1;
 943:sieve_extend.c ****     bitword_t* bitarray = sieve->bitarray;
 944:sieve_extend.c **** 
 945:sieve_extend.c ****     debug printf("Block strip for block %ju - %ju\n",(uintmax_t)block_start,(uintmax_t)block_stop);
 946:sieve_extend.c ****     
 947:sieve_extend.c ****     // while (start <= block_stop) {
 948:sieve_extend.c ****     //     step  = prime * 2 + 1;
 949:sieve_extend.c ****     //     if unlikely(step > SMALLSTEP_FASTER) break;
 950:sieve_extend.c ****     //     if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_star
 951:sieve_extend.c ****     //     setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 952:sieve_extend.c ****     //     prime = searchBitFalse(bitarray, prime+1 );
 953:sieve_extend.c ****     //     start = prime * prime * 2 + prime * 2;
 954:sieve_extend.c ****     // }
 955:sieve_extend.c ****     
 956:sieve_extend.c ****     // while (start <= block_stop) {
 957:sieve_extend.c ****     //     step  = prime * 2 + 1;
 958:sieve_extend.c ****     //     if unlikely(step > MEDIUMSTEP_FASTER) break;
 959:sieve_extend.c ****     //     if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_star
 960:sieve_extend.c ****     //     setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 961:sieve_extend.c ****     //     prime = searchBitFalse(bitarray, prime+1 );
 962:sieve_extend.c ****     //     start = prime * prime * 2 + prime * 2;
 963:sieve_extend.c ****     // }
 964:sieve_extend.c **** 
 965:sieve_extend.c **** //     counter_t start1 = 0; // save value
 966:sieve_extend.c **** //     counter_t step1 = 0; // save value
 967:sieve_extend.c **** //     while (start <= block_stop) {
 968:sieve_extend.c **** //         step  = prime * 2 + 1;
 969:sieve_extend.c **** //         if (step > 64) break;
 970:sieve_extend.c **** //         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_star
 971:sieve_extend.c **** //         start1 = start; // save value
 972:sieve_extend.c **** //         step1 = step; // save value
 973:sieve_extend.c **** //         prime = searchBitFalse(bitarray, prime+1 );
 974:sieve_extend.c **** //         start = prime * prime * 2 + prime * 2;
GAS LISTING /tmp/ccjg94QQ.s 			page 95


 975:sieve_extend.c **** //         step  = prime * 2 + 1;
 976:sieve_extend.c **** //         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + pr
 977:sieve_extend.c **** //         if (start <= block_stop) setBitsTrue_race(bitarray, start1, start, step1, step, block_st
 978:sieve_extend.c **** // //        else                     setBitsTrue_largeSteps(bitarray, start1, step1, block_stop);
 979:sieve_extend.c **** //         prime = searchBitFalse(bitarray, prime+1 );
 980:sieve_extend.c **** //         start = prime * prime * 2 + prime * 2;
 981:sieve_extend.c **** //     }
 982:sieve_extend.c **** 
 983:sieve_extend.c ****     while (start <= block_stop) {
 984:sieve_extend.c ****         step  = prime * 2 + 1;
 985:sieve_extend.c ****         if unlikely(step > VECTORSTEP_FASTER) break;
 986:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 987:sieve_extend.c ****         setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
 988:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1 );
 989:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 990:sieve_extend.c ****     }
 991:sieve_extend.c **** 
 992:sieve_extend.c ****     while (start <= block_stop) {
 993:sieve_extend.c ****         step  = prime * 2 + 1;
 994:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 995:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 996:sieve_extend.c ****         setBitsTrue_largeRange(bitarray, start, step, block_stop);
 997:sieve_extend.c ****         prime = searchBitFalse_longRange(bitarray, prime+1 );
 998:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 999:sieve_extend.c ****     }
1000:sieve_extend.c **** 
1001:sieve_extend.c ****     while (start <= block_stop) {
1002:sieve_extend.c ****         step  = prime * 2 + 1;
1003:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
1004:sieve_extend.c ****         if likely(start <= block_stop)
1005:sieve_extend.c ****             setBitsTrue_largeSteps(bitarray, start, step, block_stop);
1006:sieve_extend.c ****         prime = searchBitFalse_longRange(bitarray, prime+1 );
1007:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
1008:sieve_extend.c ****     }
1009:sieve_extend.c **** }
1010:sieve_extend.c **** 
1011:sieve_extend.c **** struct block {
1012:sieve_extend.c ****     counter_t pattern_size; // size of pattern applied 
1013:sieve_extend.c ****     counter_t pattern_start; // start of pattern
1014:sieve_extend.c ****     counter_t prime; // next prime to be striped
1015:sieve_extend.c **** };
1016:sieve_extend.c **** 
1017:sieve_extend.c **** // returns prime that could not be handled:
1018:sieve_extend.c **** // start is too large
1019:sieve_extend.c **** // range is too big
1020:sieve_extend.c **** static struct block sieve_block_extend(struct sieve_state *sieve, const counter_t block_start, cons
1021:sieve_extend.c ****     register counter_t prime   = 0;
1022:sieve_extend.c ****     counter_t patternsize_bits = 1;
1023:sieve_extend.c ****     counter_t pattern_start    = 0;
1024:sieve_extend.c ****     counter_t range_stop       = block_start;
1025:sieve_extend.c ****     bitword_t* bitarray        = sieve->bitarray;
1026:sieve_extend.c ****     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 };
1027:sieve_extend.c **** 
1028:sieve_extend.c ****     sieve->bitarray[0] = SAFE_ZERO; // only the first word has to be cleared; the rest is populated
1029:sieve_extend.c ****     
1030:sieve_extend.c ****     for (;range_stop < block_stop;) {
1031:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
GAS LISTING /tmp/ccjg94QQ.s 			page 96


1032:sieve_extend.c ****         counter_t start = prime * prime * 2 + prime * 2;
1033:sieve_extend.c ****         if unlikely(start > block_stop) break;
1034:sieve_extend.c **** 
1035:sieve_extend.c ****         const counter_t step  = prime * 2 + 1;
1036:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
1037:sieve_extend.c **** 
1038:sieve_extend.c ****         range_stop = block_start + patternsize_bits * step * 2;  // range is x2 so the second block
1039:sieve_extend.c ****         block.pattern_size = patternsize_bits;
1040:sieve_extend.c ****         block.pattern_start = pattern_start;
1041:sieve_extend.c ****         if (range_stop > block_stop) return block; //range_stop = block_stop;
1042:sieve_extend.c **** 
1043:sieve_extend.c ****         if (patternsize_bits>1) {
1044:sieve_extend.c ****             pattern_start = block_start | patternsize_bits;
1045:sieve_extend.c ****             extendSieve(bitarray, pattern_start, patternsize_bits, range_stop);
1046:sieve_extend.c ****         }
1047:sieve_extend.c ****         patternsize_bits *= step;
1048:sieve_extend.c **** 
1049:sieve_extend.c ****         if      (step < SMALLSTEP_FASTER)      setBitsTrue_smallStep (bitarray, start, (bitshift_t)
1050:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitarray, start, step, range_
1051:sieve_extend.c ****         else if (step < WORD_SIZE_counter * 4) setBitsTrue_largeRange_vector(bitarray, start, step,
1052:sieve_extend.c ****         else                                   setBitsTrue_largeRange(bitarray, start, step, range_
1053:sieve_extend.c ****         block.prime = prime;
1054:sieve_extend.c ****     } 
1055:sieve_extend.c **** 
1056:sieve_extend.c ****     return block;
1057:sieve_extend.c **** }
1058:sieve_extend.c **** 
1059:sieve_extend.c **** static struct sieve_state *sieve(const counter_t maxints, const counter_t blocksize) {
1060:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
1061:sieve_extend.c ****     counter_t prime     = 0;
1062:sieve_extend.c ****     bitword_t* bitarray = sieve->bitarray;
1063:sieve_extend.c **** 
1064:sieve_extend.c ****     debug printf("Running sieve to find all primes up to %ju with blocksize %ju\n",(uintmax_t)maxin
1065:sieve_extend.c **** 
1066:sieve_extend.c ****     // fill the whole sieve bij adding en copying incrementally
1067:sieve_extend.c ****     struct block block = sieve_block_extend(sieve, 0, sieve->bits);
1068:sieve_extend.c ****     extendSieve(bitarray, block.pattern_start, block.pattern_size, sieve->bits);
1069:sieve_extend.c ****     prime = block.prime;
1070:sieve_extend.c **** 
1071:sieve_extend.c ****     // #pragma unroll 8
1072:sieve_extend.c ****     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= sieve->bits; block_sta
1073:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
1074:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime);
1075:sieve_extend.c ****         sieve_block_stripe(sieve, block_start, block_stop, prime);
1076:sieve_extend.c ****     } 
1077:sieve_extend.c **** 
1078:sieve_extend.c ****     return sieve;
1079:sieve_extend.c **** }
1080:sieve_extend.c **** 
1081:sieve_extend.c **** static void show_primes(struct sieve_state *sieve, counter_t maxFactor) {
1082:sieve_extend.c ****     counter_t primeCount = 1;    // We already have 2
1083:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitarray, factor+
1084:sieve_extend.c ****         primeCount++;
1085:sieve_extend.c ****         if (factor < maxFactor/2) {
1086:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
1087:sieve_extend.c ****             if (primeCount % 10 == 0) printf("\n");
1088:sieve_extend.c ****         }
GAS LISTING /tmp/ccjg94QQ.s 			page 97


1089:sieve_extend.c ****     }
1090:sieve_extend.c ****     printf("\nFound %ju primes until %ju\n",(uintmax_t)primeCount, (uintmax_t)sieve->bits*2+1);
1091:sieve_extend.c **** }
1092:sieve_extend.c **** 
1093:sieve_extend.c **** static counter_t count_primes(struct sieve_state *sieve) {
1094:sieve_extend.c ****     counter_t primeCount = 1;
1095:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitarray, factor+
1096:sieve_extend.c ****     return primeCount;
1097:sieve_extend.c **** }
1098:sieve_extend.c **** 
1099:sieve_extend.c **** static void deepAnalyzePrimes(struct sieve_state *sieve) {
1100:sieve_extend.c ****     printf("DeepAnalyzing\n");
1101:sieve_extend.c ****     counter_t warn_prime = 0;
1102:sieve_extend.c ****     counter_t warn_nonprime = 0;
1103:sieve_extend.c ****     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
1104:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
1105:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1106:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
1107:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
1108:sieve_extend.c ****                 }
1109:sieve_extend.c ****             }
1110:sieve_extend.c ****         }
1111:sieve_extend.c ****         else {
1112:sieve_extend.c ****             counter_t c_prime = 0;
1113:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1114:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
1115:sieve_extend.c ****             }
1116:sieve_extend.c ****             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) was marked non-prime, 
1117:sieve_extend.c ****         }
1118:sieve_extend.c ****     }
1119:sieve_extend.c **** }
1120:sieve_extend.c **** 
1121:sieve_extend.c **** 
1122:sieve_extend.c **** int validatePrimeCount(struct sieve_state *sieve, int option_verboselevel) {
1123:sieve_extend.c **** 
1124:sieve_extend.c ****     counter_t primecount = count_primes(sieve);
1125:sieve_extend.c ****     counter_t valid_primes = 0;
1126:sieve_extend.c ****     switch(sieve->size) {
1127:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
1128:sieve_extend.c ****         case 100:           valid_primes = 25;       break;
1129:sieve_extend.c ****         case 1000:          valid_primes = 168;      break;
1130:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
1131:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
1132:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
1133:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
1134:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
1135:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
1136:sieve_extend.c ****         default:            valid_primes= 0;
1137:sieve_extend.c ****     }
1138:sieve_extend.c **** 
1139:sieve_extend.c ****     int valid = (valid_primes == primecount);
1140:sieve_extend.c ****     if (valid  && option_verboselevel >= 4) printf("Result: Sievesize %ju is expected to have %ju p
1141:sieve_extend.c ****     if (!valid && option_verboselevel >= 1) {
1142:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
1143:sieve_extend.c ****         if (!valid && option_verboselevel >= 2) show_primes(sieve, default_show_primes_on_error);
1144:sieve_extend.c ****     }
1145:sieve_extend.c ****     if (!valid && option_verboselevel >= 3) deepAnalyzePrimes(sieve);
GAS LISTING /tmp/ccjg94QQ.s 			page 98


1146:sieve_extend.c ****     return (valid);
1147:sieve_extend.c **** }
1148:sieve_extend.c **** 
1149:sieve_extend.c **** void usage(char *name) {
1150:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
1151:sieve_extend.c ****     fprintf(stderr, "Options:\n");
1152:sieve_extend.c ****     fprintf(stderr, "  --verbose <level>  Show more output to a certain level:\n");
1153:sieve_extend.c ****     fprintf(stderr, "                     1 - show phase progress\n");
1154:sieve_extend.c ****     fprintf(stderr, "                     2 - show general progress within the phase\n");
1155:sieve_extend.c ****     fprintf(stderr, "                     3 - show actual work\n");
1156:sieve_extend.c ****     fprintf(stderr, "  --check            check the correctness of the algorithm\n");
1157:sieve_extend.c ****     fprintf(stderr, "  --show <maximum>   Show the primes found up to the maximum\n");
1158:sieve_extend.c ****     fprintf(stderr, "  --tune  <level>    find the best settings for the current os and hardware\n"
1159:sieve_extend.c ****     fprintf(stderr, "                     1 - fast tuning\n");
1160:sieve_extend.c ****     fprintf(stderr, "                     2 - refined tuning\n");
1161:sieve_extend.c ****     fprintf(stderr, "                     3 - maximum tuning (takes long)\n");
1162:sieve_extend.c ****     exit(1);
1163:sieve_extend.c **** }
1164:sieve_extend.c **** 
1165:sieve_extend.c **** typedef struct  {
1166:sieve_extend.c ****     counter_t maxints;
1167:sieve_extend.c ****     counter_t blocksize_bits;
1168:sieve_extend.c ****     counter_t blocksize_kb;
1169:sieve_extend.c ****     counter_t free_bits;
1170:sieve_extend.c ****     counter_t smallstep_faster;
1171:sieve_extend.c ****     counter_t mediumstep_faster;
1172:sieve_extend.c ****     counter_t vectorstep_faster;
1173:sieve_extend.c ****     counter_t sample_max;
1174:sieve_extend.c ****     double    sample_duration;
1175:sieve_extend.c ****     counter_t passes;
1176:sieve_extend.c ****     double    elapsed_time;
1177:sieve_extend.c ****     double    avg;
1178:sieve_extend.c **** } tuning_result_type;
1179:sieve_extend.c **** 
1180:sieve_extend.c **** int compare_tuning_result(const void *a, const void *b) {
 3235              		.loc 1 1180 57 view -0
 3236              		.cfi_startproc
 3237              		.loc 1 1180 57 is_stmt 0 view .LVU1033
 3238 14f0 F30F1EFA 		endbr64	
1181:sieve_extend.c ****     tuning_result_type *resultA = (tuning_result_type *)a;
 3239              		.loc 1 1181 5 is_stmt 1 view .LVU1034
 3240              	.LVL115:
1182:sieve_extend.c ****     tuning_result_type *resultB = (tuning_result_type *)b;
 3241              		.loc 1 1182 5 view .LVU1035
1183:sieve_extend.c ****     return (resultB->avg > resultA->avg ? 1 : -1);
 3242              		.loc 1 1183 5 view .LVU1036
 3243              	# sieve_extend.c:1183:     return (resultB->avg > resultA->avg ? 1 : -1);
 3244              		.loc 1 1183 45 is_stmt 0 view .LVU1037
 3245 14f4 C5FB1046 		vmovsd	xmm0, QWORD PTR 88[rsi]	# MEM[(struct tuning_result_type *)b_5(D)].avg, MEM[(struct tuning_
 3245      58
 3246 14f9 31C0     		xor	eax, eax	# <retval>
 3247 14fb C5F92F47 		vcomisd	xmm0, QWORD PTR 88[rdi]	# MEM[(struct tuning_result_type *)b_5(D)].avg, MEM[(struct tuning
 3247      58
 3248 1500 0F97C0   		seta	al	#, <retval>
 3249 1503 8D4400FF 		lea	eax, -1[rax+rax]	# <retval>,
 3250              	# sieve_extend.c:1184: }
1184:sieve_extend.c **** }
GAS LISTING /tmp/ccjg94QQ.s 			page 99


 3251              		.loc 1 1184 1 view .LVU1038
 3252 1507 C3       		ret	
 3253              		.cfi_endproc
 3254              	.LFE82:
 3256 1508 0F1F8400 		.p2align 4
 3256      00000000 
 3258              	setBitsTrue_largeRange_vector:
 3259              	.LVL116:
 3260              	.LFB64:
 471:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 3261              		.loc 1 471 153 is_stmt 1 view -0
 3262              		.cfi_startproc
 471:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 3263              		.loc 1 471 153 is_stmt 0 view .LVU1040
 3264 1510 55       		push	rbp	#
 3265              		.cfi_def_cfa_offset 16
 3266              		.cfi_offset 6, -16
 3267              	# sieve_extend.c:486:     counter_t range_start_atvector = vectorstart(range_start);
 486:sieve_extend.c ****     if likely((range_start_atvector + step) < range_start) { // not the first step possible in this
 3268              		.loc 1 486 15 view .LVU1041
 3269 1511 4989F3   		mov	r11, rsi	# range_start_atvector, range_start
 3270              	# sieve_extend.c:471: static void setBitsTrue_largeRange_vector(bitword_t* __restrict bitarray_word
 471:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 3271              		.loc 1 471 153 view .LVU1042
 3272 1514 4889E5   		mov	rbp, rsp	#,
 3273              		.cfi_def_cfa_register 6
 3274              	# sieve_extend.c:486:     counter_t range_start_atvector = vectorstart(range_start);
 486:sieve_extend.c ****     if likely((range_start_atvector + step) < range_start) { // not the first step possible in this
 3275              		.loc 1 486 15 view .LVU1043
 3276 1517 4530DB   		xor	r11b, r11b	# range_start_atvector
 3277              	# sieve_extend.c:471: static void setBitsTrue_largeRange_vector(bitword_t* __restrict bitarray_word
 471:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 3278              		.loc 1 471 153 view .LVU1044
 3279 151a 4157     		push	r15	#
 3280 151c 4156     		push	r14	#
 3281 151e 4155     		push	r13	#
 3282 1520 4154     		push	r12	#
 3283 1522 53       		push	rbx	#
 3284 1523 4883E4E0 		and	rsp, -32	#,
 3285 1527 488D6424 		lea	rsp, -64[rsp]	#,
 3285      C0
 3286              		.cfi_offset 15, -24
 3287              		.cfi_offset 14, -32
 3288              		.cfi_offset 13, -40
 3289              		.cfi_offset 12, -48
 3290              		.cfi_offset 3, -56
 3291              	# sieve_extend.c:471: static void setBitsTrue_largeRange_vector(bitword_t* __restrict bitarray_word
 471:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 3292              		.loc 1 471 153 view .LVU1045
 3293 152c 64488B04 		mov	rax, QWORD PTR fs:40	# tmp408, MEM[(<address-space-1> long unsigned int *)40B]
 3293      25280000 
 3293      00
 3294 1535 48894424 		mov	QWORD PTR 56[rsp], rax	# D.6648, tmp408
 3294      38
 3295 153a 31C0     		xor	eax, eax	# tmp408
 472:sieve_extend.c **** 
 3296              		.loc 1 472 5 is_stmt 1 view .LVU1046
GAS LISTING /tmp/ccjg94QQ.s 			page 100


 480:sieve_extend.c ****     
 3297              		.loc 1 480 5 view .LVU1047
 3298              	.LVL117:
 486:sieve_extend.c ****     if likely((range_start_atvector + step) < range_start) { // not the first step possible in this
 3299              		.loc 1 486 5 view .LVU1048
 487:sieve_extend.c ****         debug { printf("Range start+step %ju not at start of vector %ju\n",range_start+step, range_
 3300              		.loc 1 487 5 view .LVU1049
 3301              	# sieve_extend.c:487:     if likely((range_start_atvector + step) < range_start) { // not the first
 487:sieve_extend.c ****         debug { printf("Range start+step %ju not at start of vector %ju\n",range_start+step, range_
 3302              		.loc 1 487 8 is_stmt 0 view .LVU1050
 3303 153c 498D0413 		lea	rax, [r11+rdx]	# tmp180,
 3304 1540 4839F0   		cmp	rax, rsi	# tmp180, range_start
 3305 1543 0F830401 		jnb	.L267	#,
 3305      0000
 3306              	.LBB319:
 488:sieve_extend.c **** 
 3307              		.loc 1 488 9 is_stmt 1 view .LVU1051
 490:sieve_extend.c ****         if (unlikely(range_start_atvector > range_stop)) { // we should not be here; just handle wi
 3308              		.loc 1 490 9 view .LVU1052
 3309              	# sieve_extend.c:490:         range_start_atvector += VECTOR_SIZE; // find next vector
 490:sieve_extend.c ****         if (unlikely(range_start_atvector > range_stop)) { // we should not be here; just handle wi
 3310              		.loc 1 490 30 is_stmt 0 view .LVU1053
 3311 1549 4981C300 		add	r11, 256	# range_start_atvector,
 3311      010000
 3312              	.LVL118:
 491:sieve_extend.c ****             debug2 printf("..Marking and returning without vector\n");
 3313              		.loc 1 491 9 is_stmt 1 view .LVU1054
 3314              	# sieve_extend.c:491:         if (unlikely(range_start_atvector > range_stop)) { // we should not b
 491:sieve_extend.c ****             debug2 printf("..Marking and returning without vector\n");
 3315              		.loc 1 491 12 is_stmt 0 view .LVU1055
 3316 1550 4939CB   		cmp	r11, rcx	# range_start_atvector, range_stop
 3317 1553 0F877508 		ja	.L268	#,
 3317      0000
 508:sieve_extend.c ****             register counter_t index_word = wordindex(range_start);
 3318              		.loc 1 508 16 is_stmt 1 view .LVU1056
 3319              	# sieve_extend.c:508:         for (; range_start < range_start_atvector;) {
 508:sieve_extend.c ****             register counter_t index_word = wordindex(range_start);
 3320              		.loc 1 508 9 is_stmt 0 view .LVU1057
 3321 1559 4C39DE   		cmp	rsi, r11	# range_start, range_start_atvector
 3322              	.LBB320:
 3323              	# sieve_extend.c:512:                 mask |= markmask(range_start);
 512:sieve_extend.c ****                 range_start += step;
 3324              		.loc 1 512 25 view .LVU1058
 3325 155c 41B90100 		mov	r9d, 1	# tmp188,
 3325      0000
 3326              	.LBE320:
 3327              	# sieve_extend.c:508:         for (; range_start < range_start_atvector;) {
 508:sieve_extend.c ****             register counter_t index_word = wordindex(range_start);
 3328              		.loc 1 508 9 view .LVU1059
 3329 1562 0F83E500 		jnb	.L267	#,
 3329      0000
 3330              	.LVL119:
 3331 1568 0F1F8400 		.p2align 4
 3331      00000000 
 3332              		.p2align 3
 3333              	.L269:
 3334              	.LBB321:
GAS LISTING /tmp/ccjg94QQ.s 			page 101


 509:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 3335              		.loc 1 509 13 is_stmt 1 view .LVU1060
 3336              	# sieve_extend.c:509:             register counter_t index_word = wordindex(range_start);
 509:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 3337              		.loc 1 509 32 is_stmt 0 view .LVU1061
 3338 1570 4989F0   		mov	r8, rsi	# index_word, range_start
 3339              	# sieve_extend.c:510:             register bitword_t mask = SAFE_ZERO;
 510:sieve_extend.c ****             do {
 3340              		.loc 1 510 32 view .LVU1062
 3341 1573 31DB     		xor	ebx, ebx	# mask
 3342              	# sieve_extend.c:509:             register counter_t index_word = wordindex(range_start);
 509:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 3343              		.loc 1 509 32 view .LVU1063
 3344 1575 49C1E806 		shr	r8, 6	# index_word,
 3345              	.LVL120:
 510:sieve_extend.c ****             do {
 3346              		.loc 1 510 13 is_stmt 1 view .LVU1064
 3347              	.L272:
 511:sieve_extend.c ****                 mask |= markmask(range_start);
 3348              		.loc 1 511 13 discriminator 1 view .LVU1065
 512:sieve_extend.c ****                 range_start += step;
 3349              		.loc 1 512 17 discriminator 1 view .LVU1066
 3350              	# sieve_extend.c:512:                 mask |= markmask(range_start);
 512:sieve_extend.c ****                 range_start += step;
 3351              		.loc 1 512 25 is_stmt 0 discriminator 1 view .LVU1067
 3352 1579 C442C9F7 		shlx	r10, r9, rsi	# tmp187, tmp188, range_start
 3352      D1
 3353              	# sieve_extend.c:513:                 range_start += step;
 513:sieve_extend.c ****             } while (wordindex(range_start) == index_word);
 3354              		.loc 1 513 29 discriminator 1 view .LVU1068
 3355 157e 4801D6   		add	rsi, rdx	# range_start, step
 3356              	# sieve_extend.c:514:             } while (wordindex(range_start) == index_word);
 514:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3357              		.loc 1 514 22 discriminator 1 view .LVU1069
 3358 1581 4989F4   		mov	r12, rsi	# tmp189, range_start
 3359              	# sieve_extend.c:512:                 mask |= markmask(range_start);
 512:sieve_extend.c ****                 range_start += step;
 3360              		.loc 1 512 22 discriminator 1 view .LVU1070
 3361 1584 4C09D3   		or	rbx, r10	# mask, tmp187
 3362              	.LVL121:
 513:sieve_extend.c ****             } while (wordindex(range_start) == index_word);
 3363              		.loc 1 513 17 is_stmt 1 discriminator 1 view .LVU1071
 514:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3364              		.loc 1 514 21 discriminator 1 view .LVU1072
 3365              	# sieve_extend.c:514:             } while (wordindex(range_start) == index_word);
 514:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3366              		.loc 1 514 22 is_stmt 0 discriminator 1 view .LVU1073
 3367 1587 49C1EC06 		shr	r12, 6	# tmp189,
 3368              	# sieve_extend.c:514:             } while (wordindex(range_start) == index_word);
 514:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3369              		.loc 1 514 13 discriminator 1 view .LVU1074
 3370 158b 4D39C4   		cmp	r12, r8	# tmp189, index_word
 3371 158e 0F85AC00 		jne	.L421	#,
 3371      0000
 511:sieve_extend.c ****                 mask |= markmask(range_start);
 3372              		.loc 1 511 13 is_stmt 1 view .LVU1075
 512:sieve_extend.c ****                 range_start += step;
GAS LISTING /tmp/ccjg94QQ.s 			page 102


 3373              		.loc 1 512 17 view .LVU1076
 3374              	# sieve_extend.c:512:                 mask |= markmask(range_start);
 512:sieve_extend.c ****                 range_start += step;
 3375              		.loc 1 512 25 is_stmt 0 view .LVU1077
 3376 1594 C442C9F7 		shlx	r13, r9, rsi	# tmp390, tmp188, range_start
 3376      E9
 3377              	# sieve_extend.c:513:                 range_start += step;
 513:sieve_extend.c ****             } while (wordindex(range_start) == index_word);
 3378              		.loc 1 513 29 view .LVU1078
 3379 1599 4801D6   		add	rsi, rdx	# range_start, step
 3380              	# sieve_extend.c:514:             } while (wordindex(range_start) == index_word);
 514:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3381              		.loc 1 514 22 view .LVU1079
 3382 159c 4989F6   		mov	r14, rsi	# tmp391, range_start
 3383              	# sieve_extend.c:512:                 mask |= markmask(range_start);
 512:sieve_extend.c ****                 range_start += step;
 3384              		.loc 1 512 22 view .LVU1080
 3385 159f 4C09EB   		or	rbx, r13	# mask, tmp390
 3386              	.LVL122:
 513:sieve_extend.c ****             } while (wordindex(range_start) == index_word);
 3387              		.loc 1 513 17 is_stmt 1 view .LVU1081
 514:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3388              		.loc 1 514 21 view .LVU1082
 3389              	# sieve_extend.c:514:             } while (wordindex(range_start) == index_word);
 514:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3390              		.loc 1 514 22 is_stmt 0 view .LVU1083
 3391 15a2 49C1EE06 		shr	r14, 6	# tmp391,
 3392              	# sieve_extend.c:514:             } while (wordindex(range_start) == index_word);
 514:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3393              		.loc 1 514 13 view .LVU1084
 3394 15a6 4D39C6   		cmp	r14, r8	# tmp391, index_word
 3395 15a9 0F859100 		jne	.L421	#,
 3395      0000
 511:sieve_extend.c ****                 mask |= markmask(range_start);
 3396              		.loc 1 511 13 is_stmt 1 view .LVU1085
 512:sieve_extend.c ****                 range_start += step;
 3397              		.loc 1 512 17 view .LVU1086
 3398              	# sieve_extend.c:512:                 mask |= markmask(range_start);
 512:sieve_extend.c ****                 range_start += step;
 3399              		.loc 1 512 25 is_stmt 0 view .LVU1087
 3400 15af C442C9F7 		shlx	r15, r9, rsi	# tmp392, tmp188, range_start
 3400      F9
 3401              	# sieve_extend.c:513:                 range_start += step;
 513:sieve_extend.c ****             } while (wordindex(range_start) == index_word);
 3402              		.loc 1 513 29 view .LVU1088
 3403 15b4 4801D6   		add	rsi, rdx	# range_start, step
 3404              	# sieve_extend.c:514:             } while (wordindex(range_start) == index_word);
 514:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3405              		.loc 1 514 22 view .LVU1089
 3406 15b7 4889F0   		mov	rax, rsi	# tmp393, range_start
 3407              	# sieve_extend.c:512:                 mask |= markmask(range_start);
 512:sieve_extend.c ****                 range_start += step;
 3408              		.loc 1 512 22 view .LVU1090
 3409 15ba 4C09FB   		or	rbx, r15	# mask, tmp392
 3410              	.LVL123:
 513:sieve_extend.c ****             } while (wordindex(range_start) == index_word);
 3411              		.loc 1 513 17 is_stmt 1 view .LVU1091
GAS LISTING /tmp/ccjg94QQ.s 			page 103


 514:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3412              		.loc 1 514 21 view .LVU1092
 3413              	# sieve_extend.c:514:             } while (wordindex(range_start) == index_word);
 514:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3414              		.loc 1 514 22 is_stmt 0 view .LVU1093
 3415 15bd 48C1E806 		shr	rax, 6	# tmp393,
 3416              	# sieve_extend.c:514:             } while (wordindex(range_start) == index_word);
 514:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3417              		.loc 1 514 13 view .LVU1094
 3418 15c1 4C39C0   		cmp	rax, r8	# tmp393, index_word
 3419 15c4 757A     		jne	.L421	#,
 511:sieve_extend.c ****                 mask |= markmask(range_start);
 3420              		.loc 1 511 13 is_stmt 1 view .LVU1095
 512:sieve_extend.c ****                 range_start += step;
 3421              		.loc 1 512 17 view .LVU1096
 3422              	# sieve_extend.c:512:                 mask |= markmask(range_start);
 512:sieve_extend.c ****                 range_start += step;
 3423              		.loc 1 512 25 is_stmt 0 view .LVU1097
 3424 15c6 C442C9F7 		shlx	r10, r9, rsi	# tmp394, tmp188, range_start
 3424      D1
 3425              	# sieve_extend.c:513:                 range_start += step;
 513:sieve_extend.c ****             } while (wordindex(range_start) == index_word);
 3426              		.loc 1 513 29 view .LVU1098
 3427 15cb 4801D6   		add	rsi, rdx	# range_start, step
 3428              	# sieve_extend.c:514:             } while (wordindex(range_start) == index_word);
 514:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3429              		.loc 1 514 22 view .LVU1099
 3430 15ce 4989F4   		mov	r12, rsi	# tmp395, range_start
 3431              	# sieve_extend.c:512:                 mask |= markmask(range_start);
 512:sieve_extend.c ****                 range_start += step;
 3432              		.loc 1 512 22 view .LVU1100
 3433 15d1 4C09D3   		or	rbx, r10	# mask, tmp394
 3434              	.LVL124:
 513:sieve_extend.c ****             } while (wordindex(range_start) == index_word);
 3435              		.loc 1 513 17 is_stmt 1 view .LVU1101
 514:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3436              		.loc 1 514 21 view .LVU1102
 3437              	# sieve_extend.c:514:             } while (wordindex(range_start) == index_word);
 514:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3438              		.loc 1 514 22 is_stmt 0 view .LVU1103
 3439 15d4 49C1EC06 		shr	r12, 6	# tmp395,
 3440              	# sieve_extend.c:514:             } while (wordindex(range_start) == index_word);
 514:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3441              		.loc 1 514 13 view .LVU1104
 3442 15d8 4D39C4   		cmp	r12, r8	# tmp395, index_word
 3443 15db 7563     		jne	.L421	#,
 511:sieve_extend.c ****                 mask |= markmask(range_start);
 3444              		.loc 1 511 13 is_stmt 1 view .LVU1105
 512:sieve_extend.c ****                 range_start += step;
 3445              		.loc 1 512 17 view .LVU1106
 3446              	# sieve_extend.c:512:                 mask |= markmask(range_start);
 512:sieve_extend.c ****                 range_start += step;
 3447              		.loc 1 512 25 is_stmt 0 view .LVU1107
 3448 15dd C442C9F7 		shlx	r13, r9, rsi	# tmp396, tmp188, range_start
 3448      E9
 3449              	# sieve_extend.c:513:                 range_start += step;
 513:sieve_extend.c ****             } while (wordindex(range_start) == index_word);
GAS LISTING /tmp/ccjg94QQ.s 			page 104


 3450              		.loc 1 513 29 view .LVU1108
 3451 15e2 4801D6   		add	rsi, rdx	# range_start, step
 3452              	# sieve_extend.c:514:             } while (wordindex(range_start) == index_word);
 514:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3453              		.loc 1 514 22 view .LVU1109
 3454 15e5 4989F6   		mov	r14, rsi	# tmp397, range_start
 3455              	# sieve_extend.c:512:                 mask |= markmask(range_start);
 512:sieve_extend.c ****                 range_start += step;
 3456              		.loc 1 512 22 view .LVU1110
 3457 15e8 4C09EB   		or	rbx, r13	# mask, tmp396
 3458              	.LVL125:
 513:sieve_extend.c ****             } while (wordindex(range_start) == index_word);
 3459              		.loc 1 513 17 is_stmt 1 view .LVU1111
 514:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3460              		.loc 1 514 21 view .LVU1112
 3461              	# sieve_extend.c:514:             } while (wordindex(range_start) == index_word);
 514:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3462              		.loc 1 514 22 is_stmt 0 view .LVU1113
 3463 15eb 49C1EE06 		shr	r14, 6	# tmp397,
 3464              	# sieve_extend.c:514:             } while (wordindex(range_start) == index_word);
 514:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3465              		.loc 1 514 13 view .LVU1114
 3466 15ef 4D39C6   		cmp	r14, r8	# tmp397, index_word
 3467 15f2 754C     		jne	.L421	#,
 511:sieve_extend.c ****                 mask |= markmask(range_start);
 3468              		.loc 1 511 13 is_stmt 1 view .LVU1115
 512:sieve_extend.c ****                 range_start += step;
 3469              		.loc 1 512 17 view .LVU1116
 3470              	# sieve_extend.c:512:                 mask |= markmask(range_start);
 512:sieve_extend.c ****                 range_start += step;
 3471              		.loc 1 512 25 is_stmt 0 view .LVU1117
 3472 15f4 C442C9F7 		shlx	r15, r9, rsi	# tmp398, tmp188, range_start
 3472      F9
 3473              	# sieve_extend.c:513:                 range_start += step;
 513:sieve_extend.c ****             } while (wordindex(range_start) == index_word);
 3474              		.loc 1 513 29 view .LVU1118
 3475 15f9 4801D6   		add	rsi, rdx	# range_start, step
 3476              	# sieve_extend.c:514:             } while (wordindex(range_start) == index_word);
 514:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3477              		.loc 1 514 22 view .LVU1119
 3478 15fc 4889F0   		mov	rax, rsi	# tmp399, range_start
 3479              	# sieve_extend.c:512:                 mask |= markmask(range_start);
 512:sieve_extend.c ****                 range_start += step;
 3480              		.loc 1 512 22 view .LVU1120
 3481 15ff 4C09FB   		or	rbx, r15	# mask, tmp398
 3482              	.LVL126:
 513:sieve_extend.c ****             } while (wordindex(range_start) == index_word);
 3483              		.loc 1 513 17 is_stmt 1 view .LVU1121
 514:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3484              		.loc 1 514 21 view .LVU1122
 3485              	# sieve_extend.c:514:             } while (wordindex(range_start) == index_word);
 514:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3486              		.loc 1 514 22 is_stmt 0 view .LVU1123
 3487 1602 48C1E806 		shr	rax, 6	# tmp399,
 3488              	# sieve_extend.c:514:             } while (wordindex(range_start) == index_word);
 514:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3489              		.loc 1 514 13 view .LVU1124
GAS LISTING /tmp/ccjg94QQ.s 			page 105


 3490 1606 4C39C0   		cmp	rax, r8	# tmp399, index_word
 3491 1609 7535     		jne	.L421	#,
 511:sieve_extend.c ****                 mask |= markmask(range_start);
 3492              		.loc 1 511 13 is_stmt 1 view .LVU1125
 512:sieve_extend.c ****                 range_start += step;
 3493              		.loc 1 512 17 view .LVU1126
 3494              	# sieve_extend.c:512:                 mask |= markmask(range_start);
 512:sieve_extend.c ****                 range_start += step;
 3495              		.loc 1 512 25 is_stmt 0 view .LVU1127
 3496 160b C442C9F7 		shlx	r10, r9, rsi	# tmp400, tmp188, range_start
 3496      D1
 3497              	# sieve_extend.c:513:                 range_start += step;
 513:sieve_extend.c ****             } while (wordindex(range_start) == index_word);
 3498              		.loc 1 513 29 view .LVU1128
 3499 1610 4801D6   		add	rsi, rdx	# range_start, step
 3500              	# sieve_extend.c:514:             } while (wordindex(range_start) == index_word);
 514:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3501              		.loc 1 514 22 view .LVU1129
 3502 1613 4989F4   		mov	r12, rsi	# tmp401, range_start
 3503              	# sieve_extend.c:512:                 mask |= markmask(range_start);
 512:sieve_extend.c ****                 range_start += step;
 3504              		.loc 1 512 22 view .LVU1130
 3505 1616 4C09D3   		or	rbx, r10	# mask, tmp400
 3506              	.LVL127:
 513:sieve_extend.c ****             } while (wordindex(range_start) == index_word);
 3507              		.loc 1 513 17 is_stmt 1 view .LVU1131
 514:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3508              		.loc 1 514 21 view .LVU1132
 3509              	# sieve_extend.c:514:             } while (wordindex(range_start) == index_word);
 514:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3510              		.loc 1 514 22 is_stmt 0 view .LVU1133
 3511 1619 49C1EC06 		shr	r12, 6	# tmp401,
 3512              	# sieve_extend.c:514:             } while (wordindex(range_start) == index_word);
 514:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3513              		.loc 1 514 13 view .LVU1134
 3514 161d 4D39C4   		cmp	r12, r8	# tmp401, index_word
 3515 1620 751E     		jne	.L421	#,
 511:sieve_extend.c ****                 mask |= markmask(range_start);
 3516              		.loc 1 511 13 is_stmt 1 view .LVU1135
 512:sieve_extend.c ****                 range_start += step;
 3517              		.loc 1 512 17 view .LVU1136
 3518              	# sieve_extend.c:512:                 mask |= markmask(range_start);
 512:sieve_extend.c ****                 range_start += step;
 3519              		.loc 1 512 25 is_stmt 0 view .LVU1137
 3520 1622 C442C9F7 		shlx	r13, r9, rsi	# tmp402, tmp188, range_start
 3520      E9
 3521              	# sieve_extend.c:513:                 range_start += step;
 513:sieve_extend.c ****             } while (wordindex(range_start) == index_word);
 3522              		.loc 1 513 29 view .LVU1138
 3523 1627 4801D6   		add	rsi, rdx	# range_start, step
 3524              	# sieve_extend.c:514:             } while (wordindex(range_start) == index_word);
 514:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3525              		.loc 1 514 22 view .LVU1139
 3526 162a 4989F6   		mov	r14, rsi	# tmp403, range_start
 3527              	# sieve_extend.c:512:                 mask |= markmask(range_start);
 512:sieve_extend.c ****                 range_start += step;
 3528              		.loc 1 512 22 view .LVU1140
GAS LISTING /tmp/ccjg94QQ.s 			page 106


 3529 162d 4C09EB   		or	rbx, r13	# mask, tmp402
 3530              	.LVL128:
 513:sieve_extend.c ****             } while (wordindex(range_start) == index_word);
 3531              		.loc 1 513 17 is_stmt 1 view .LVU1141
 514:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3532              		.loc 1 514 21 view .LVU1142
 3533              	# sieve_extend.c:514:             } while (wordindex(range_start) == index_word);
 514:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3534              		.loc 1 514 22 is_stmt 0 view .LVU1143
 3535 1630 49C1EE06 		shr	r14, 6	# tmp403,
 3536              	# sieve_extend.c:514:             } while (wordindex(range_start) == index_word);
 514:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3537              		.loc 1 514 13 view .LVU1144
 3538 1634 4D39C6   		cmp	r14, r8	# tmp403, index_word
 3539 1637 0F843CFF 		je	.L272	#,
 3539      FFFF
 3540 163d 0F1F00   		.p2align 4
 3541              		.p2align 3
 3542              	.L421:
 515:sieve_extend.c ****         }
 3543              		.loc 1 515 13 is_stmt 1 view .LVU1145
 3544              	# sieve_extend.c:515:             bitarray_word[index_word] |= mask;
 515:sieve_extend.c ****         }
 3545              		.loc 1 515 39 is_stmt 0 view .LVU1146
 3546 1640 4A091CC7 		or	QWORD PTR [rdi+r8*8], rbx	# *_24, mask
 515:sieve_extend.c ****         }
 3547              		.loc 1 515 39 view .LVU1147
 3548              	.LBE321:
 508:sieve_extend.c ****             register counter_t index_word = wordindex(range_start);
 3549              		.loc 1 508 16 is_stmt 1 view .LVU1148
 3550              	# sieve_extend.c:508:         for (; range_start < range_start_atvector;) {
 508:sieve_extend.c ****             register counter_t index_word = wordindex(range_start);
 3551              		.loc 1 508 9 is_stmt 0 view .LVU1149
 3552 1644 4939F3   		cmp	r11, rsi	# range_start_atvector, range_start
 3553 1647 0F8723FF 		ja	.L269	#,
 3553      FFFF
 3554              	.LVL129:
 3555              	.L267:
 508:sieve_extend.c ****             register counter_t index_word = wordindex(range_start);
 3556              		.loc 1 508 9 view .LVU1150
 3557              	.LBE319:
 519:sieve_extend.c ****     
 3558              		.loc 1 519 5 is_stmt 1 view .LVU1151
 3559              	# sieve_extend.c:519:     const counter_t range_stop_unique =  min(range_start + VECTOR_SIZE_counte
 519:sieve_extend.c ****     
 3560              		.loc 1 519 42 is_stmt 0 view .LVU1152
 3561 164d 4989D2   		mov	r10, rdx	# tmp191, step
 3562 1650 49C1E208 		sal	r10, 8	# tmp191,
 3563 1654 4901F2   		add	r10, rsi	# tmp192, range_start
 3564              	# sieve_extend.c:519:     const counter_t range_stop_unique =  min(range_start + VECTOR_SIZE_counte
 519:sieve_extend.c ****     
 3565              		.loc 1 519 21 view .LVU1153
 3566 1657 4939CA   		cmp	r10, rcx	# tmp192, range_stop
 3567 165a 4C0F47D1 		cmova	r10, rcx	# tmp192,, range_stop_unique, range_stop
 3568              	.LVL130:
 526:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 3569              		.loc 1 526 5 is_stmt 1 view .LVU1154
GAS LISTING /tmp/ccjg94QQ.s 			page 107


 3570              	.LBB323:
 526:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 3571              		.loc 1 526 10 view .LVU1155
 526:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 3572              		.loc 1 526 41 view .LVU1156
 3573              	# sieve_extend.c:526:     for (counter_t index = range_start; index < range_stop_unique;) {
 526:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 3574              		.loc 1 526 5 is_stmt 0 view .LVU1157
 3575 165e 4C39D6   		cmp	rsi, r10	# range_start, range_stop_unique
 3576 1661 0F830C04 		jnb	.L266	#,
 3576      0000
 3577              	.LBB324:
 3578              	.LBB325:
 3579              	.LBB326:
 3580              	# sieve_extend.c:425:    const counter_t range_stop_vector = vectorindex(range_stop);
 425:sieve_extend.c ****    register bitvector_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_vect
 3581              		.loc 1 425 20 view .LVU1158
 3582 1667 4989CB   		mov	r11, rcx	# range_stop, range_stop
 3583              	.LVL131:
 3584              	# sieve_extend.c:427:    register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_aligne
 427:sieve_extend.c **** 
 3585              		.loc 1 427 114 view .LVU1159
 3586 166a 488D1C92 		lea	rbx, [rdx+rdx*4]	# tmp195,
 3587              	# sieve_extend.c:425:    const counter_t range_stop_vector = vectorindex(range_stop);
 425:sieve_extend.c ****    register bitvector_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_vect
 3588              		.loc 1 425 20 view .LVU1160
 3589 166e 49C1EB08 		shr	r11, 8	# range_stop,
 3590              	# sieve_extend.c:433:        index_ptr+=step;
 433:sieve_extend.c ****        *index_ptr |= mask;
 3591              		.loc 1 433 17 view .LVU1161
 3592 1672 4889D1   		mov	rcx, rdx	# _85, step
 3593              	.LVL132:
 3594              	# sieve_extend.c:427:    register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_aligne
 427:sieve_extend.c **** 
 3595              		.loc 1 427 139 view .LVU1162
 3596 1675 4D89D8   		mov	r8, r11	# tmp196, range_stop_vector
 3597              	# sieve_extend.c:444:    const register bitvector_t* __restrict range_stop_ptr = &bitarray[(range_s
 444:sieve_extend.c ****    while likely(index_ptr <= range_stop_ptr) {
 3598              		.loc 1 444 69 view .LVU1163
 3599 1678 4D89D9   		mov	r9, r11	# tmp197, range_stop_vector
 3600 167b 49C1E105 		sal	r9, 5	# tmp197,
 3601              	# sieve_extend.c:427:    register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_aligne
 427:sieve_extend.c **** 
 3602              		.loc 1 427 139 view .LVU1164
 3603 167f 4929D8   		sub	r8, rbx	# tmp196, tmp195
 3604              	# sieve_extend.c:427:    register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_aligne
 427:sieve_extend.c **** 
 3605              		.loc 1 427 89 view .LVU1165
 3606 1682 49C1E005 		sal	r8, 5	# tmp196,
 3607              	# sieve_extend.c:444:    const register bitvector_t* __restrict range_stop_ptr = &bitarray[(range_s
 444:sieve_extend.c ****    while likely(index_ptr <= range_stop_ptr) {
 3608              		.loc 1 444 43 view .LVU1166
 3609 1686 4901F9   		add	r9, rdi	# range_stop_ptr, bitarray_word
 3610              	# sieve_extend.c:433:        index_ptr+=step;
 433:sieve_extend.c ****        *index_ptr |= mask;
 3611              		.loc 1 433 17 view .LVU1167
 3612 1689 48C1E105 		sal	rcx, 5	# _85,
GAS LISTING /tmp/ccjg94QQ.s 			page 108


 3613 168d 4901F8   		add	r8, rdi	# tmp217, bitarray_word
 3614 1690 4883FA01 		cmp	rdx, 1	# step,
 3615 1694 0F85FC03 		jne	.L426	#,
 3615      0000
 3616              	.LBE326:
 3617              	.LBE325:
 3618              	# sieve_extend.c:528:         register bitvector_t quadmask = { };
 528:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 3619              		.loc 1 528 30 view .LVU1168
 3620 169a C5E9EFD2 		vpxor	xmm2, xmm2, xmm2	# tmp218
 3621 169e 4983FB05 		cmp	r11, 5	# range_stop_vector,
 3622              	# sieve_extend.c:534:             quadmask[word] |= markmask(index);
 534:sieve_extend.c ****             index += step;
 3623              		.loc 1 534 31 view .LVU1169
 3624 16a2 41BB0100 		mov	r11d, 1	# tmp222,
 3624      0000
 3625 16a8 4C0F46C7 		cmovbe	r8, rdi	# bitarray_word,, fast_loop_ptr
 3626              	.LVL133:
 3627 16ac 0F1F4000 		.p2align 4
 3628              		.p2align 3
 3629              	.L284:
 527:sieve_extend.c ****         register bitvector_t quadmask = { };
 3630              		.loc 1 527 9 is_stmt 1 view .LVU1170
 3631              	# sieve_extend.c:527:         const counter_t current_vector_start_word =  vectorindex(index) << (S
 527:sieve_extend.c ****         register bitvector_t quadmask = { };
 3632              		.loc 1 527 54 is_stmt 0 view .LVU1171
 3633 16b0 4889F0   		mov	rax, rsi	# _192, range_start
 3634              	# sieve_extend.c:529:         register counter_t word = wordindex(index) - current_vector_start_wor
 529:sieve_extend.c ****         
 3635              		.loc 1 529 35 view .LVU1172
 3636 16b3 4989F6   		mov	r14, rsi	# tmp219, range_start
 3637              	# sieve_extend.c:527:         const counter_t current_vector_start_word =  vectorindex(index) << (S
 527:sieve_extend.c ****         register bitvector_t quadmask = { };
 3638              		.loc 1 527 54 view .LVU1173
 3639 16b6 48C1E808 		shr	rax, 8	# _192,
 3640              	# sieve_extend.c:529:         register counter_t word = wordindex(index) - current_vector_start_wor
 529:sieve_extend.c ****         
 3641              		.loc 1 529 35 view .LVU1174
 3642 16ba 49C1EE06 		shr	r14, 6	# tmp219,
 3643              	# sieve_extend.c:527:         const counter_t current_vector_start_word =  vectorindex(index) << (S
 527:sieve_extend.c ****         register bitvector_t quadmask = { };
 3644              		.loc 1 527 25 view .LVU1175
 3645 16be 488D1485 		lea	rdx, 0[0+rax*4]	# current_vector_start_word,
 3645      00000000 
 3646              	.LVL134:
 528:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 3647              		.loc 1 528 9 is_stmt 1 view .LVU1176
 3648              	# sieve_extend.c:528:         register bitvector_t quadmask = { };
 528:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 3649              		.loc 1 528 30 is_stmt 0 view .LVU1177
 3650 16c6 C5FD7F14 		vmovdqa	YMMWORD PTR [rsp], ymm2	# quadmask, tmp218
 3650      24
 529:sieve_extend.c ****         
 3651              		.loc 1 529 9 is_stmt 1 view .LVU1178
 3652              	# sieve_extend.c:529:         register counter_t word = wordindex(index) - current_vector_start_wor
 529:sieve_extend.c ****         
 3653              		.loc 1 529 28 is_stmt 0 view .LVU1179
GAS LISTING /tmp/ccjg94QQ.s 			page 109


 3654 16cb 4929D6   		sub	r14, rdx	# word, current_vector_start_word
 3655              	.LVL135:
 3656              	.L279:
 533:sieve_extend.c ****             quadmask[word] |= markmask(index);
 3657              		.loc 1 533 9 is_stmt 1 view .LVU1180
 534:sieve_extend.c ****             index += step;
 3658              		.loc 1 534 13 view .LVU1181
 3659              	# sieve_extend.c:534:             quadmask[word] |= markmask(index);
 534:sieve_extend.c ****             index += step;
 3660              		.loc 1 534 31 is_stmt 0 view .LVU1182
 3661 16ce C442C9F7 		shlx	r15, r11, rsi	# tmp221, tmp222, range_start
 3661      FB
 3662              	# sieve_extend.c:534:             quadmask[word] |= markmask(index);
 534:sieve_extend.c ****             index += step;
 3663              		.loc 1 534 28 view .LVU1183
 3664 16d3 4E093CF4 		or	QWORD PTR [rsp+r14*8], r15	# quadmask, tmp221
 535:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3665              		.loc 1 535 13 is_stmt 1 view .LVU1184
 3666              	# sieve_extend.c:535:             index += step;
 535:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3667              		.loc 1 535 19 is_stmt 0 view .LVU1185
 3668 16d7 4C8D7601 		lea	r14, 1[rsi]	# tmp239,
 3669              	.LVL136:
 3670              	# sieve_extend.c:536:             word = wordindex(index) - current_vector_start_word;
 536:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3671              		.loc 1 536 20 view .LVU1186
 3672 16db 4C89F1   		mov	rcx, r14	# tmp223, range_start
 3673              	# sieve_extend.c:535:             index += step;
 535:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3674              		.loc 1 535 19 view .LVU1187
 3675 16de 4C89F6   		mov	rsi, r14	# range_start, tmp239
 536:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3676              		.loc 1 536 13 is_stmt 1 view .LVU1188
 3677              	# sieve_extend.c:536:             word = wordindex(index) - current_vector_start_word;
 536:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3678              		.loc 1 536 20 is_stmt 0 view .LVU1189
 3679 16e1 48C1E906 		shr	rcx, 6	# tmp223,
 3680              	# sieve_extend.c:536:             word = wordindex(index) - current_vector_start_word;
 536:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3681              		.loc 1 536 18 view .LVU1190
 3682 16e5 4829D1   		sub	rcx, rdx	# word, current_vector_start_word
 537:sieve_extend.c ****         
 3683              		.loc 1 537 17 is_stmt 1 view .LVU1191
 3684              	# sieve_extend.c:537:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 537:sieve_extend.c ****         
 3685              		.loc 1 537 9 is_stmt 0 view .LVU1192
 3686 16e8 4883F903 		cmp	rcx, 3	# word,
 3687 16ec 0F87DE00 		ja	.L419	#,
 3687      0000
 533:sieve_extend.c ****             quadmask[word] |= markmask(index);
 3688              		.loc 1 533 9 is_stmt 1 view .LVU1193
 534:sieve_extend.c ****             index += step;
 3689              		.loc 1 534 13 view .LVU1194
 3690              	# sieve_extend.c:535:             index += step;
 535:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3691              		.loc 1 535 19 is_stmt 0 view .LVU1195
 3692 16f2 4883C601 		add	rsi, 1	# range_start,
GAS LISTING /tmp/ccjg94QQ.s 			page 110


 3693              	# sieve_extend.c:534:             quadmask[word] |= markmask(index);
 534:sieve_extend.c ****             index += step;
 3694              		.loc 1 534 31 view .LVU1196
 3695 16f6 C4C289F7 		shlx	rbx, r11, r14	# tmp320, tmp222, range_start
 3695      DB
 3696              	# sieve_extend.c:536:             word = wordindex(index) - current_vector_start_word;
 536:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3697              		.loc 1 536 20 view .LVU1197
 3698 16fb 4989F4   		mov	r12, rsi	# tmp321, range_start
 3699              	# sieve_extend.c:534:             quadmask[word] |= markmask(index);
 534:sieve_extend.c ****             index += step;
 3700              		.loc 1 534 28 view .LVU1198
 3701 16fe 48091CCC 		or	QWORD PTR [rsp+rcx*8], rbx	# quadmask, tmp320
 535:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3702              		.loc 1 535 13 is_stmt 1 view .LVU1199
 3703              	.LVL137:
 536:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3704              		.loc 1 536 13 view .LVU1200
 3705              	# sieve_extend.c:536:             word = wordindex(index) - current_vector_start_word;
 536:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3706              		.loc 1 536 20 is_stmt 0 view .LVU1201
 3707 1702 49C1EC06 		shr	r12, 6	# tmp321,
 3708              	# sieve_extend.c:536:             word = wordindex(index) - current_vector_start_word;
 536:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3709              		.loc 1 536 18 view .LVU1202
 3710 1706 4929D4   		sub	r12, rdx	# word, current_vector_start_word
 537:sieve_extend.c ****         
 3711              		.loc 1 537 17 is_stmt 1 view .LVU1203
 3712              	# sieve_extend.c:537:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 537:sieve_extend.c ****         
 3713              		.loc 1 537 9 is_stmt 0 view .LVU1204
 3714 1709 4983FC03 		cmp	r12, 3	# word,
 3715 170d 0F87BD00 		ja	.L419	#,
 3715      0000
 533:sieve_extend.c ****             quadmask[word] |= markmask(index);
 3716              		.loc 1 533 9 is_stmt 1 view .LVU1205
 534:sieve_extend.c ****             index += step;
 3717              		.loc 1 534 13 view .LVU1206
 3718              	# sieve_extend.c:534:             quadmask[word] |= markmask(index);
 534:sieve_extend.c ****             index += step;
 3719              		.loc 1 534 31 is_stmt 0 view .LVU1207
 3720 1713 C4C2C9F7 		shlx	rsi, r11, rsi	# tmp323, tmp222, range_start
 3720      F3
 3721              	.LVL138:
 3722              	# sieve_extend.c:534:             quadmask[word] |= markmask(index);
 534:sieve_extend.c ****             index += step;
 3723              		.loc 1 534 28 view .LVU1208
 3724 1718 4A0934E4 		or	QWORD PTR [rsp+r12*8], rsi	# quadmask, tmp323
 535:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3725              		.loc 1 535 13 is_stmt 1 view .LVU1209
 3726              	.LVL139:
 3727              	# sieve_extend.c:535:             index += step;
 535:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3728              		.loc 1 535 19 is_stmt 0 view .LVU1210
 3729 171c 498D7602 		lea	rsi, 2[r14]	# range_start,
 3730              	.LVL140:
 536:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
GAS LISTING /tmp/ccjg94QQ.s 			page 111


 3731              		.loc 1 536 13 is_stmt 1 view .LVU1211
 3732              	# sieve_extend.c:536:             word = wordindex(index) - current_vector_start_word;
 536:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3733              		.loc 1 536 20 is_stmt 0 view .LVU1212
 3734 1720 4989F5   		mov	r13, rsi	# tmp324, range_start
 3735 1723 49C1ED06 		shr	r13, 6	# tmp324,
 3736              	# sieve_extend.c:536:             word = wordindex(index) - current_vector_start_word;
 536:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3737              		.loc 1 536 18 view .LVU1213
 3738 1727 4929D5   		sub	r13, rdx	# word, current_vector_start_word
 537:sieve_extend.c ****         
 3739              		.loc 1 537 17 is_stmt 1 view .LVU1214
 3740              	# sieve_extend.c:537:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 537:sieve_extend.c ****         
 3741              		.loc 1 537 9 is_stmt 0 view .LVU1215
 3742 172a 4983FD03 		cmp	r13, 3	# word,
 3743 172e 0F879C00 		ja	.L419	#,
 3743      0000
 533:sieve_extend.c ****             quadmask[word] |= markmask(index);
 3744              		.loc 1 533 9 is_stmt 1 view .LVU1216
 534:sieve_extend.c ****             index += step;
 3745              		.loc 1 534 13 view .LVU1217
 3746              	# sieve_extend.c:534:             quadmask[word] |= markmask(index);
 534:sieve_extend.c ****             index += step;
 3747              		.loc 1 534 31 is_stmt 0 view .LVU1218
 3748 1734 C442C9F7 		shlx	r15, r11, rsi	# tmp326, tmp222, range_start
 3748      FB
 3749              	# sieve_extend.c:535:             index += step;
 535:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3750              		.loc 1 535 19 view .LVU1219
 3751 1739 498D7603 		lea	rsi, 3[r14]	# range_start,
 3752              	.LVL141:
 3753              	# sieve_extend.c:536:             word = wordindex(index) - current_vector_start_word;
 536:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3754              		.loc 1 536 20 view .LVU1220
 3755 173d 4889F1   		mov	rcx, rsi	# tmp327, range_start
 3756              	# sieve_extend.c:534:             quadmask[word] |= markmask(index);
 534:sieve_extend.c ****             index += step;
 3757              		.loc 1 534 28 view .LVU1221
 3758 1740 4E093CEC 		or	QWORD PTR [rsp+r13*8], r15	# quadmask, tmp326
 535:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3759              		.loc 1 535 13 is_stmt 1 view .LVU1222
 3760              	.LVL142:
 536:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3761              		.loc 1 536 13 view .LVU1223
 3762              	# sieve_extend.c:536:             word = wordindex(index) - current_vector_start_word;
 536:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3763              		.loc 1 536 20 is_stmt 0 view .LVU1224
 3764 1744 48C1E906 		shr	rcx, 6	# tmp327,
 3765              	.LVL143:
 3766              	# sieve_extend.c:536:             word = wordindex(index) - current_vector_start_word;
 536:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3767              		.loc 1 536 18 view .LVU1225
 3768 1748 4829D1   		sub	rcx, rdx	# word, current_vector_start_word
 537:sieve_extend.c ****         
 3769              		.loc 1 537 17 is_stmt 1 view .LVU1226
 3770              	# sieve_extend.c:537:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
GAS LISTING /tmp/ccjg94QQ.s 			page 112


 537:sieve_extend.c ****         
 3771              		.loc 1 537 9 is_stmt 0 view .LVU1227
 3772 174b 4883F903 		cmp	rcx, 3	# word,
 3773 174f 777F     		ja	.L419	#,
 533:sieve_extend.c ****             quadmask[word] |= markmask(index);
 3774              		.loc 1 533 9 is_stmt 1 view .LVU1228
 534:sieve_extend.c ****             index += step;
 3775              		.loc 1 534 13 view .LVU1229
 3776              	# sieve_extend.c:534:             quadmask[word] |= markmask(index);
 534:sieve_extend.c ****             index += step;
 3777              		.loc 1 534 31 is_stmt 0 view .LVU1230
 3778 1751 C4C2C9F7 		shlx	rbx, r11, rsi	# tmp329, tmp222, range_start
 3778      DB
 3779              	# sieve_extend.c:535:             index += step;
 535:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3780              		.loc 1 535 19 view .LVU1231
 3781 1756 498D7604 		lea	rsi, 4[r14]	# range_start,
 3782              	.LVL144:
 3783              	# sieve_extend.c:536:             word = wordindex(index) - current_vector_start_word;
 536:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3784              		.loc 1 536 20 view .LVU1232
 3785 175a 4989F4   		mov	r12, rsi	# tmp330, range_start
 3786              	# sieve_extend.c:534:             quadmask[word] |= markmask(index);
 534:sieve_extend.c ****             index += step;
 3787              		.loc 1 534 28 view .LVU1233
 3788 175d 48091CCC 		or	QWORD PTR [rsp+rcx*8], rbx	# quadmask, tmp329
 535:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3789              		.loc 1 535 13 is_stmt 1 view .LVU1234
 3790              	.LVL145:
 536:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3791              		.loc 1 536 13 view .LVU1235
 3792              	# sieve_extend.c:536:             word = wordindex(index) - current_vector_start_word;
 536:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3793              		.loc 1 536 20 is_stmt 0 view .LVU1236
 3794 1761 49C1EC06 		shr	r12, 6	# tmp330,
 3795              	# sieve_extend.c:536:             word = wordindex(index) - current_vector_start_word;
 536:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3796              		.loc 1 536 18 view .LVU1237
 3797 1765 4929D4   		sub	r12, rdx	# word, current_vector_start_word
 537:sieve_extend.c ****         
 3798              		.loc 1 537 17 is_stmt 1 view .LVU1238
 3799              	# sieve_extend.c:537:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 537:sieve_extend.c ****         
 3800              		.loc 1 537 9 is_stmt 0 view .LVU1239
 3801 1768 4983FC03 		cmp	r12, 3	# word,
 3802 176c 7762     		ja	.L419	#,
 533:sieve_extend.c ****             quadmask[word] |= markmask(index);
 3803              		.loc 1 533 9 is_stmt 1 view .LVU1240
 534:sieve_extend.c ****             index += step;
 3804              		.loc 1 534 13 view .LVU1241
 3805              	# sieve_extend.c:534:             quadmask[word] |= markmask(index);
 534:sieve_extend.c ****             index += step;
 3806              		.loc 1 534 31 is_stmt 0 view .LVU1242
 3807 176e C4C2C9F7 		shlx	rsi, r11, rsi	# tmp332, tmp222, range_start
 3807      F3
 3808              	.LVL146:
 3809              	# sieve_extend.c:534:             quadmask[word] |= markmask(index);
GAS LISTING /tmp/ccjg94QQ.s 			page 113


 534:sieve_extend.c ****             index += step;
 3810              		.loc 1 534 28 view .LVU1243
 3811 1773 4A0934E4 		or	QWORD PTR [rsp+r12*8], rsi	# quadmask, tmp332
 535:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3812              		.loc 1 535 13 is_stmt 1 view .LVU1244
 3813              	.LVL147:
 3814              	# sieve_extend.c:535:             index += step;
 535:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3815              		.loc 1 535 19 is_stmt 0 view .LVU1245
 3816 1777 498D7605 		lea	rsi, 5[r14]	# range_start,
 3817              	.LVL148:
 536:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3818              		.loc 1 536 13 is_stmt 1 view .LVU1246
 3819              	# sieve_extend.c:536:             word = wordindex(index) - current_vector_start_word;
 536:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3820              		.loc 1 536 20 is_stmt 0 view .LVU1247
 3821 177b 4989F5   		mov	r13, rsi	# tmp333, range_start
 3822 177e 49C1ED06 		shr	r13, 6	# tmp333,
 3823              	# sieve_extend.c:536:             word = wordindex(index) - current_vector_start_word;
 536:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3824              		.loc 1 536 18 view .LVU1248
 3825 1782 4929D5   		sub	r13, rdx	# word, current_vector_start_word
 537:sieve_extend.c ****         
 3826              		.loc 1 537 17 is_stmt 1 view .LVU1249
 3827              	# sieve_extend.c:537:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 537:sieve_extend.c ****         
 3828              		.loc 1 537 9 is_stmt 0 view .LVU1250
 3829 1785 4983FD03 		cmp	r13, 3	# word,
 3830 1789 7745     		ja	.L419	#,
 533:sieve_extend.c ****             quadmask[word] |= markmask(index);
 3831              		.loc 1 533 9 is_stmt 1 view .LVU1251
 534:sieve_extend.c ****             index += step;
 3832              		.loc 1 534 13 view .LVU1252
 3833              	# sieve_extend.c:534:             quadmask[word] |= markmask(index);
 534:sieve_extend.c ****             index += step;
 3834              		.loc 1 534 31 is_stmt 0 view .LVU1253
 3835 178b C442C9F7 		shlx	r15, r11, rsi	# tmp335, tmp222, range_start
 3835      FB
 3836              	# sieve_extend.c:535:             index += step;
 535:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3837              		.loc 1 535 19 view .LVU1254
 3838 1790 498D7606 		lea	rsi, 6[r14]	# range_start,
 3839              	.LVL149:
 3840              	# sieve_extend.c:536:             word = wordindex(index) - current_vector_start_word;
 536:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3841              		.loc 1 536 20 view .LVU1255
 3842 1794 4889F1   		mov	rcx, rsi	# tmp336, range_start
 3843              	# sieve_extend.c:534:             quadmask[word] |= markmask(index);
 534:sieve_extend.c ****             index += step;
 3844              		.loc 1 534 28 view .LVU1256
 3845 1797 4E093CEC 		or	QWORD PTR [rsp+r13*8], r15	# quadmask, tmp335
 535:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3846              		.loc 1 535 13 is_stmt 1 view .LVU1257
 3847              	.LVL150:
 536:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3848              		.loc 1 536 13 view .LVU1258
 3849              	# sieve_extend.c:536:             word = wordindex(index) - current_vector_start_word;
GAS LISTING /tmp/ccjg94QQ.s 			page 114


 536:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3850              		.loc 1 536 20 is_stmt 0 view .LVU1259
 3851 179b 48C1E906 		shr	rcx, 6	# tmp336,
 3852              	.LVL151:
 3853              	# sieve_extend.c:536:             word = wordindex(index) - current_vector_start_word;
 536:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3854              		.loc 1 536 18 view .LVU1260
 3855 179f 4829D1   		sub	rcx, rdx	# word, current_vector_start_word
 537:sieve_extend.c ****         
 3856              		.loc 1 537 17 is_stmt 1 view .LVU1261
 3857              	# sieve_extend.c:537:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 537:sieve_extend.c ****         
 3858              		.loc 1 537 9 is_stmt 0 view .LVU1262
 3859 17a2 4883F903 		cmp	rcx, 3	# word,
 3860 17a6 7728     		ja	.L419	#,
 533:sieve_extend.c ****             quadmask[word] |= markmask(index);
 3861              		.loc 1 533 9 is_stmt 1 view .LVU1263
 534:sieve_extend.c ****             index += step;
 3862              		.loc 1 534 13 view .LVU1264
 3863              	# sieve_extend.c:534:             quadmask[word] |= markmask(index);
 534:sieve_extend.c ****             index += step;
 3864              		.loc 1 534 31 is_stmt 0 view .LVU1265
 3865 17a8 C4C2C9F7 		shlx	rbx, r11, rsi	# tmp338, tmp222, range_start
 3865      DB
 3866              	# sieve_extend.c:535:             index += step;
 535:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3867              		.loc 1 535 19 view .LVU1266
 3868 17ad 498D7607 		lea	rsi, 7[r14]	# range_start,
 3869              	.LVL152:
 3870              	# sieve_extend.c:536:             word = wordindex(index) - current_vector_start_word;
 536:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3871              		.loc 1 536 20 view .LVU1267
 3872 17b1 4989F6   		mov	r14, rsi	# tmp339, range_start
 3873              	.LVL153:
 3874              	# sieve_extend.c:534:             quadmask[word] |= markmask(index);
 534:sieve_extend.c ****             index += step;
 3875              		.loc 1 534 28 view .LVU1268
 3876 17b4 48091CCC 		or	QWORD PTR [rsp+rcx*8], rbx	# quadmask, tmp338
 535:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3877              		.loc 1 535 13 is_stmt 1 view .LVU1269
 3878              	.LVL154:
 536:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3879              		.loc 1 536 13 view .LVU1270
 3880              	# sieve_extend.c:536:             word = wordindex(index) - current_vector_start_word;
 536:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3881              		.loc 1 536 20 is_stmt 0 view .LVU1271
 3882 17b8 49C1EE06 		shr	r14, 6	# tmp339,
 3883              	.LVL155:
 3884              	# sieve_extend.c:536:             word = wordindex(index) - current_vector_start_word;
 536:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3885              		.loc 1 536 18 view .LVU1272
 3886 17bc 4929D6   		sub	r14, rdx	# word, current_vector_start_word
 3887              	.LVL156:
 537:sieve_extend.c ****         
 3888              		.loc 1 537 17 is_stmt 1 view .LVU1273
 3889              	# sieve_extend.c:537:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 537:sieve_extend.c ****         
GAS LISTING /tmp/ccjg94QQ.s 			page 115


 3890              		.loc 1 537 9 is_stmt 0 view .LVU1274
 3891 17bf 4983FE03 		cmp	r14, 3	# word,
 3892 17c3 0F8605FF 		jbe	.L279	#,
 3892      FFFF
 3893              	.LVL157:
 3894 17c9 0F1F8000 		.p2align 4
 3894      000000
 3895              		.p2align 3
 3896              	.L419:
 540:sieve_extend.c ****         const counter_t range_stop_vector = vectorindex(range_stop);
 3897              		.loc 1 540 9 is_stmt 1 view .LVU1275
 541:sieve_extend.c **** 
 3898              		.loc 1 541 9 view .LVU1276
 543:sieve_extend.c **** 
 3899              		.loc 1 543 9 view .LVU1277
 3900              	.LBB330:
 3901              	.LBB327:
 3902              	# sieve_extend.c:426:    register bitvector_t* __restrict index_ptr      =  __builtin_assume_aligne
 426:sieve_extend.c ****    register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_st
 3903              		.loc 1 426 89 is_stmt 0 view .LVU1278
 3904 17d0 48C1E005 		sal	rax, 5	# tmp224,
 3905              	.LVL158:
 426:sieve_extend.c ****    register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_st
 3906              		.loc 1 426 89 view .LVU1279
 3907              	.LBE327:
 3908              	.LBE330:
 3909              	# sieve_extend.c:543:         applyMask_vector(bitarray_vector, step, range_stop, quadmask, current
 543:sieve_extend.c **** 
 3910              		.loc 1 543 9 view .LVU1280
 3911 17d4 C5FD6F1C 		vmovdqa	ymm3, YMMWORD PTR [rsp]	# quadmask.57_171, quadmask
 3911      24
 3912              	.LVL159:
 3913              	.LBB331:
 3914              	.LBI325:
 424:sieve_extend.c ****    const counter_t range_stop_vector = vectorindex(range_stop);
 3915              		.loc 1 424 20 is_stmt 1 view .LVU1281
 3916              	.LBB328:
 425:sieve_extend.c ****    register bitvector_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_vect
 3917              		.loc 1 425 4 view .LVU1282
 426:sieve_extend.c ****    register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_st
 3918              		.loc 1 426 4 view .LVU1283
 3919              	# sieve_extend.c:426:    register bitvector_t* __restrict index_ptr      =  __builtin_assume_aligne
 426:sieve_extend.c ****    register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_st
 3920              		.loc 1 426 80 is_stmt 0 view .LVU1284
 3921 17d9 4801F8   		add	rax, rdi	# _70, bitarray_word
 3922              	.LVL160:
 427:sieve_extend.c **** 
 3923              		.loc 1 427 4 is_stmt 1 view .LVU1285
 431:sieve_extend.c ****        *index_ptr |= mask;
 3924              		.loc 1 431 4 view .LVU1286
 431:sieve_extend.c ****        *index_ptr |= mask;
 3925              		.loc 1 431 10 view .LVU1287
 3926 17dc 4939C0   		cmp	r8, rax	# fast_loop_ptr, _70
 3927 17df 0F865B01 		jbe	.L280	#,
 3927      0000
 3928 17e5 488D5040 		lea	rdx, 64[rax]	# ivtmp.264,
 3929              	.LVL161:
GAS LISTING /tmp/ccjg94QQ.s 			page 116


 3930              	.L281:
 432:sieve_extend.c ****        index_ptr+=step;
 3931              		.loc 1 432 8 view .LVU1288
 3932              	# sieve_extend.c:432:        *index_ptr |= mask;
 432:sieve_extend.c ****        index_ptr+=step;
 3933              		.loc 1 432 19 is_stmt 0 view .LVU1289
 3934 17e9 C5E5EB08 		vpor	ymm1, ymm3, YMMWORD PTR [rax]	# tmp225, quadmask.57_171, MEM[base: index_ptr_164, offset: 0B]
 3935              	# sieve_extend.c:434:        *index_ptr |= mask;
 434:sieve_extend.c ****        index_ptr+=step;
 3936              		.loc 1 434 19 view .LVU1290
 3937 17ed C5E5EB60 		vpor	ymm4, ymm3, YMMWORD PTR 32[rax]	# tmp226, quadmask.57_171, MEM[base: index_ptr_164, offset: 3
 3937      20
 3938              	# sieve_extend.c:432:        *index_ptr |= mask;
 432:sieve_extend.c ****        index_ptr+=step;
 3939              		.loc 1 432 19 view .LVU1291
 3940 17f2 C5FD7F08 		vmovdqa	YMMWORD PTR [rax], ymm1	# MEM[base: index_ptr_164, offset: 0B], tmp225
 433:sieve_extend.c ****        *index_ptr |= mask;
 3941              		.loc 1 433 8 is_stmt 1 view .LVU1292
 3942              	.LVL162:
 434:sieve_extend.c ****        index_ptr+=step;
 3943              		.loc 1 434 8 view .LVU1293
 3944 17f6 4C8DA0A0 		lea	r12, 160[rax]	# tmp237,
 3944      000000
 3945              	# sieve_extend.c:434:        *index_ptr |= mask;
 434:sieve_extend.c ****        index_ptr+=step;
 3946              		.loc 1 434 19 is_stmt 0 view .LVU1294
 3947 17fd C5FD7F60 		vmovdqa	YMMWORD PTR 32[rax], ymm4	# MEM[base: index_ptr_164, offset: 32B], tmp226
 3947      20
 435:sieve_extend.c ****        *index_ptr |= mask;
 3948              		.loc 1 435 8 is_stmt 1 view .LVU1295
 3949              	.LVL163:
 436:sieve_extend.c ****        index_ptr+=step;
 3950              		.loc 1 436 8 view .LVU1296
 3951              	# sieve_extend.c:431:    while likely(index_ptr < fast_loop_ptr) {
 431:sieve_extend.c ****        *index_ptr |= mask;
 3952              		.loc 1 431 10 is_stmt 0 view .LVU1297
 3953 1802 4D39C4   		cmp	r12, r8	# _70, fast_loop_ptr
 3954              	# sieve_extend.c:436:        *index_ptr |= mask;
 436:sieve_extend.c ****        index_ptr+=step;
 3955              		.loc 1 436 19 view .LVU1298
 3956 1805 C5E5EB2A 		vpor	ymm5, ymm3, YMMWORD PTR [rdx]	# tmp227, quadmask.57_171, MEM[base: _47, offset: 0B]
 3957              	# sieve_extend.c:438:        *index_ptr |= mask;
 438:sieve_extend.c ****        index_ptr+=step;
 3958              		.loc 1 438 19 view .LVU1299
 3959 1809 C5E5EB72 		vpor	ymm6, ymm3, YMMWORD PTR 32[rdx]	# tmp228, quadmask.57_171, MEM[base: _47, offset: 32B]
 3959      20
 3960              	# sieve_extend.c:436:        *index_ptr |= mask;
 436:sieve_extend.c ****        index_ptr+=step;
 3961              		.loc 1 436 19 view .LVU1300
 3962 180e C5FD7F2A 		vmovdqa	YMMWORD PTR [rdx], ymm5	# MEM[base: _47, offset: 0B], tmp227
 437:sieve_extend.c ****        *index_ptr |= mask;
 3963              		.loc 1 437 8 is_stmt 1 view .LVU1301
 3964              	.LVL164:
 438:sieve_extend.c ****        index_ptr+=step;
 3965              		.loc 1 438 8 view .LVU1302
 3966 1812 4C8DAAA0 		lea	r13, 160[rdx]	# tmp238,
 3966      000000
GAS LISTING /tmp/ccjg94QQ.s 			page 117


 3967              	# sieve_extend.c:438:        *index_ptr |= mask;
 438:sieve_extend.c ****        index_ptr+=step;
 3968              		.loc 1 438 19 is_stmt 0 view .LVU1303
 3969 1819 C5FD7F72 		vmovdqa	YMMWORD PTR 32[rdx], ymm6	# MEM[base: _47, offset: 32B], tmp228
 3969      20
 439:sieve_extend.c ****        *index_ptr |= mask;
 3970              		.loc 1 439 8 is_stmt 1 view .LVU1304
 3971              	.LVL165:
 440:sieve_extend.c ****        index_ptr+=step;
 3972              		.loc 1 440 8 view .LVU1305
 3973              	# sieve_extend.c:440:        *index_ptr |= mask;
 440:sieve_extend.c ****        index_ptr+=step;
 3974              		.loc 1 440 19 is_stmt 0 view .LVU1306
 3975 181e C5E5EBB8 		vpor	ymm7, ymm3, YMMWORD PTR 128[rax]	# tmp229, quadmask.57_171, MEM[base: index_ptr_164, offset: 
 3975      80000000 
 3976 1826 C5FD7FB8 		vmovdqa	YMMWORD PTR 128[rax], ymm7	# MEM[base: index_ptr_164, offset: 128B], tmp229
 3976      80000000 
 441:sieve_extend.c ****    }
 3977              		.loc 1 441 8 is_stmt 1 view .LVU1307
 3978              	.LVL166:
 441:sieve_extend.c ****    }
 3979              		.loc 1 441 8 is_stmt 0 view .LVU1308
 3980 182e 4C89E0   		mov	rax, r12	# _70, tmp237
 3981              	.LVL167:
 431:sieve_extend.c ****        *index_ptr |= mask;
 3982              		.loc 1 431 10 is_stmt 1 view .LVU1309
 3983 1831 0F830901 		jnb	.L280	#,
 3983      0000
 432:sieve_extend.c ****        index_ptr+=step;
 3984              		.loc 1 432 8 view .LVU1310
 3985              	# sieve_extend.c:432:        *index_ptr |= mask;
 432:sieve_extend.c ****        index_ptr+=step;
 3986              		.loc 1 432 19 is_stmt 0 view .LVU1311
 3987 1837 C4C165EB 		vpor	ymm0, ymm3, YMMWORD PTR [r12]	# tmp303, quadmask.57_171, MEM[base: index_ptr_164, offset: 0B]
 3987      0424
 3988              	# sieve_extend.c:434:        *index_ptr |= mask;
 434:sieve_extend.c ****        index_ptr+=step;
 3989              		.loc 1 434 19 view .LVU1312
 3990 183d C44165EB 		vpor	ymm8, ymm3, YMMWORD PTR 32[r12]	# tmp304, quadmask.57_171, MEM[base: index_ptr_164, offset: 3
 3990      442420
 3991              	# sieve_extend.c:432:        *index_ptr |= mask;
 432:sieve_extend.c ****        index_ptr+=step;
 3992              		.loc 1 432 19 view .LVU1313
 3993 1844 C4C17D7F 		vmovdqa	YMMWORD PTR [r12], ymm0	# MEM[base: index_ptr_164, offset: 0B], tmp303
 3993      0424
 433:sieve_extend.c ****        *index_ptr |= mask;
 3994              		.loc 1 433 8 is_stmt 1 view .LVU1314
 3995              	.LVL168:
 434:sieve_extend.c ****        index_ptr+=step;
 3996              		.loc 1 434 8 view .LVU1315
 3997 184a 4805A000 		add	rax, 160	# _70,
 3997      0000
 3998              	# sieve_extend.c:434:        *index_ptr |= mask;
 434:sieve_extend.c ****        index_ptr+=step;
 3999              		.loc 1 434 19 is_stmt 0 view .LVU1316
 4000 1850 C4417D7F 		vmovdqa	YMMWORD PTR 32[r12], ymm8	# MEM[base: index_ptr_164, offset: 32B], tmp304
 4000      442420
GAS LISTING /tmp/ccjg94QQ.s 			page 118


 435:sieve_extend.c ****        *index_ptr |= mask;
 4001              		.loc 1 435 8 is_stmt 1 view .LVU1317
 4002              	.LVL169:
 436:sieve_extend.c ****        index_ptr+=step;
 4003              		.loc 1 436 8 view .LVU1318
 4004              	# sieve_extend.c:431:    while likely(index_ptr < fast_loop_ptr) {
 431:sieve_extend.c ****        *index_ptr |= mask;
 4005              		.loc 1 431 10 is_stmt 0 view .LVU1319
 4006 1857 4C39C0   		cmp	rax, r8	# _70, fast_loop_ptr
 4007              	# sieve_extend.c:436:        *index_ptr |= mask;
 436:sieve_extend.c ****        index_ptr+=step;
 4008              		.loc 1 436 19 view .LVU1320
 4009 185a C565EB8A 		vpor	ymm9, ymm3, YMMWORD PTR 160[rdx]	# tmp305, quadmask.57_171, MEM[base: _47, offset: 0B]
 4009      A0000000 
 4010 1862 C57D7F8A 		vmovdqa	YMMWORD PTR 160[rdx], ymm9	# MEM[base: _47, offset: 0B], tmp305
 4010      A0000000 
 437:sieve_extend.c ****        *index_ptr |= mask;
 4011              		.loc 1 437 8 is_stmt 1 view .LVU1321
 4012              	.LVL170:
 438:sieve_extend.c ****        index_ptr+=step;
 4013              		.loc 1 438 8 view .LVU1322
 4014              	# sieve_extend.c:438:        *index_ptr |= mask;
 438:sieve_extend.c ****        index_ptr+=step;
 4015              		.loc 1 438 19 is_stmt 0 view .LVU1323
 4016 186a C44165EB 		vpor	ymm10, ymm3, YMMWORD PTR 32[r13]	# tmp306, quadmask.57_171, MEM[base: _47, offset: 32B]
 4016      5520
 4017 1870 C4417D7F 		vmovdqa	YMMWORD PTR 32[r13], ymm10	# MEM[base: _47, offset: 32B], tmp306
 4017      5520
 439:sieve_extend.c ****        *index_ptr |= mask;
 4018              		.loc 1 439 8 is_stmt 1 view .LVU1324
 4019              	.LVL171:
 440:sieve_extend.c ****        index_ptr+=step;
 4020              		.loc 1 440 8 view .LVU1325
 4021              	# sieve_extend.c:440:        *index_ptr |= mask;
 440:sieve_extend.c ****        index_ptr+=step;
 4022              		.loc 1 440 19 is_stmt 0 view .LVU1326
 4023 1876 C44165EB 		vpor	ymm11, ymm3, YMMWORD PTR 128[r12]	# tmp307, quadmask.57_171, MEM[base: index_ptr_164, offset:
 4023      9C248000 
 4023      0000
 4024 1880 C4417D7F 		vmovdqa	YMMWORD PTR 128[r12], ymm11	# MEM[base: index_ptr_164, offset: 128B], tmp307
 4024      9C248000 
 4024      0000
 441:sieve_extend.c ****    }
 4025              		.loc 1 441 8 is_stmt 1 view .LVU1327
 4026              	.LVL172:
 431:sieve_extend.c ****        *index_ptr |= mask;
 4027              		.loc 1 431 10 view .LVU1328
 4028 188a 0F83B000 		jnb	.L280	#,
 4028      0000
 432:sieve_extend.c ****        index_ptr+=step;
 4029              		.loc 1 432 8 view .LVU1329
 4030              	# sieve_extend.c:432:        *index_ptr |= mask;
 432:sieve_extend.c ****        index_ptr+=step;
 4031              		.loc 1 432 19 is_stmt 0 view .LVU1330
 4032 1890 C565EB20 		vpor	ymm12, ymm3, YMMWORD PTR [rax]	# tmp309, quadmask.57_171, MEM[base: index_ptr_164, offset: 0B
 4033              	# sieve_extend.c:434:        *index_ptr |= mask;
 434:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/ccjg94QQ.s 			page 119


 4034              		.loc 1 434 19 view .LVU1331
 4035 1894 C565EB68 		vpor	ymm13, ymm3, YMMWORD PTR 32[rax]	# tmp310, quadmask.57_171, MEM[base: index_ptr_164, offset: 
 4035      20
 4036              	# sieve_extend.c:432:        *index_ptr |= mask;
 432:sieve_extend.c ****        index_ptr+=step;
 4037              		.loc 1 432 19 view .LVU1332
 4038 1899 C57D7F20 		vmovdqa	YMMWORD PTR [rax], ymm12	# MEM[base: index_ptr_164, offset: 0B], tmp309
 433:sieve_extend.c ****        *index_ptr |= mask;
 4039              		.loc 1 433 8 is_stmt 1 view .LVU1333
 4040              	.LVL173:
 434:sieve_extend.c ****        index_ptr+=step;
 4041              		.loc 1 434 8 view .LVU1334
 4042              	# sieve_extend.c:434:        *index_ptr |= mask;
 434:sieve_extend.c ****        index_ptr+=step;
 4043              		.loc 1 434 19 is_stmt 0 view .LVU1335
 4044 189d C57D7F68 		vmovdqa	YMMWORD PTR 32[rax], ymm13	# MEM[base: index_ptr_164, offset: 32B], tmp310
 4044      20
 435:sieve_extend.c ****        *index_ptr |= mask;
 4045              		.loc 1 435 8 is_stmt 1 view .LVU1336
 4046              	.LVL174:
 436:sieve_extend.c ****        index_ptr+=step;
 4047              		.loc 1 436 8 view .LVU1337
 4048              	# sieve_extend.c:436:        *index_ptr |= mask;
 436:sieve_extend.c ****        index_ptr+=step;
 4049              		.loc 1 436 19 is_stmt 0 view .LVU1338
 4050 18a2 C565EBB2 		vpor	ymm14, ymm3, YMMWORD PTR 320[rdx]	# tmp311, quadmask.57_171, MEM[base: _47, offset: 0B]
 4050      40010000 
 4051              	# sieve_extend.c:438:        *index_ptr |= mask;
 438:sieve_extend.c ****        index_ptr+=step;
 4052              		.loc 1 438 19 view .LVU1339
 4053 18aa C565EBBA 		vpor	ymm15, ymm3, YMMWORD PTR 352[rdx]	# tmp312, quadmask.57_171, MEM[base: _47, offset: 32B]
 4053      60010000 
 4054              	# sieve_extend.c:436:        *index_ptr |= mask;
 436:sieve_extend.c ****        index_ptr+=step;
 4055              		.loc 1 436 19 view .LVU1340
 4056 18b2 C57D7FB2 		vmovdqa	YMMWORD PTR 320[rdx], ymm14	# MEM[base: _47, offset: 0B], tmp311
 4056      40010000 
 437:sieve_extend.c ****        *index_ptr |= mask;
 4057              		.loc 1 437 8 is_stmt 1 view .LVU1341
 4058              	.LVL175:
 438:sieve_extend.c ****        index_ptr+=step;
 4059              		.loc 1 438 8 view .LVU1342
 4060              	# sieve_extend.c:438:        *index_ptr |= mask;
 438:sieve_extend.c ****        index_ptr+=step;
 4061              		.loc 1 438 19 is_stmt 0 view .LVU1343
 4062 18ba C57D7FBA 		vmovdqa	YMMWORD PTR 352[rdx], ymm15	# MEM[base: _47, offset: 32B], tmp312
 4062      60010000 
 439:sieve_extend.c ****        *index_ptr |= mask;
 4063              		.loc 1 439 8 is_stmt 1 view .LVU1344
 4064              	.LVL176:
 440:sieve_extend.c ****        index_ptr+=step;
 4065              		.loc 1 440 8 view .LVU1345
 4066              	# sieve_extend.c:440:        *index_ptr |= mask;
 440:sieve_extend.c ****        index_ptr+=step;
 4067              		.loc 1 440 19 is_stmt 0 view .LVU1346
 4068 18c2 C5E5EB88 		vpor	ymm1, ymm3, YMMWORD PTR 128[rax]	# tmp313, quadmask.57_171, MEM[base: index_ptr_164, offset: 
 4068      80000000 
GAS LISTING /tmp/ccjg94QQ.s 			page 120


 4069 18ca C5FD7F88 		vmovdqa	YMMWORD PTR 128[rax], ymm1	# MEM[base: index_ptr_164, offset: 128B], tmp313
 4069      80000000 
 441:sieve_extend.c ****    }
 4070              		.loc 1 441 8 is_stmt 1 view .LVU1347
 4071              	.LVL177:
 441:sieve_extend.c ****    }
 4072              		.loc 1 441 8 is_stmt 0 view .LVU1348
 4073 18d2 498D8424 		lea	rax, 320[r12]	# _70,
 4073      40010000 
 4074              	.LVL178:
 431:sieve_extend.c ****        *index_ptr |= mask;
 4075              		.loc 1 431 10 is_stmt 1 view .LVU1349
 4076 18da 4C39C0   		cmp	rax, r8	# _70, fast_loop_ptr
 4077 18dd 7361     		jnb	.L280	#,
 432:sieve_extend.c ****        index_ptr+=step;
 4078              		.loc 1 432 8 view .LVU1350
 4079              	# sieve_extend.c:432:        *index_ptr |= mask;
 432:sieve_extend.c ****        index_ptr+=step;
 4080              		.loc 1 432 19 is_stmt 0 view .LVU1351
 4081 18df C4C165EB 		vpor	ymm4, ymm3, YMMWORD PTR 320[r12]	# tmp315, quadmask.57_171, MEM[base: index_ptr_164, offset: 
 4081      A4244001 
 4081      0000
 4082 18e9 4881C280 		add	rdx, 640	# ivtmp.264,
 4082      020000
 4083 18f0 C4C17D7F 		vmovdqa	YMMWORD PTR 320[r12], ymm4	# MEM[base: index_ptr_164, offset: 0B], tmp315
 4083      A4244001 
 4083      0000
 433:sieve_extend.c ****        *index_ptr |= mask;
 4084              		.loc 1 433 8 is_stmt 1 view .LVU1352
 4085              	.LVL179:
 434:sieve_extend.c ****        index_ptr+=step;
 4086              		.loc 1 434 8 view .LVU1353
 4087              	# sieve_extend.c:434:        *index_ptr |= mask;
 434:sieve_extend.c ****        index_ptr+=step;
 4088              		.loc 1 434 19 is_stmt 0 view .LVU1354
 4089 18fa C5E5EB68 		vpor	ymm5, ymm3, YMMWORD PTR 32[rax]	# tmp316, quadmask.57_171, MEM[base: index_ptr_164, offset: 3
 4089      20
 4090 18ff C5FD7F68 		vmovdqa	YMMWORD PTR 32[rax], ymm5	# MEM[base: index_ptr_164, offset: 32B], tmp316
 4090      20
 435:sieve_extend.c ****        *index_ptr |= mask;
 4091              		.loc 1 435 8 is_stmt 1 view .LVU1355
 4092              	.LVL180:
 436:sieve_extend.c ****        index_ptr+=step;
 4093              		.loc 1 436 8 view .LVU1356
 4094              	# sieve_extend.c:436:        *index_ptr |= mask;
 436:sieve_extend.c ****        index_ptr+=step;
 4095              		.loc 1 436 19 is_stmt 0 view .LVU1357
 4096 1904 C5E5EBB2 		vpor	ymm6, ymm3, YMMWORD PTR -160[rdx]	# tmp317, quadmask.57_171, MEM[base: _47, offset: 0B]
 4096      60FFFFFF 
 4097              	# sieve_extend.c:438:        *index_ptr |= mask;
 438:sieve_extend.c ****        index_ptr+=step;
 4098              		.loc 1 438 19 view .LVU1358
 4099 190c C5E5EB7A 		vpor	ymm7, ymm3, YMMWORD PTR -128[rdx]	# tmp318, quadmask.57_171, MEM[base: _47, offset: 32B]
 4099      80
 4100              	# sieve_extend.c:436:        *index_ptr |= mask;
 436:sieve_extend.c ****        index_ptr+=step;
 4101              		.loc 1 436 19 view .LVU1359
GAS LISTING /tmp/ccjg94QQ.s 			page 121


 4102 1911 C5FD7FB2 		vmovdqa	YMMWORD PTR -160[rdx], ymm6	# MEM[base: _47, offset: 0B], tmp317
 4102      60FFFFFF 
 437:sieve_extend.c ****        *index_ptr |= mask;
 4103              		.loc 1 437 8 is_stmt 1 view .LVU1360
 4104              	.LVL181:
 438:sieve_extend.c ****        index_ptr+=step;
 4105              		.loc 1 438 8 view .LVU1361
 4106              	# sieve_extend.c:438:        *index_ptr |= mask;
 438:sieve_extend.c ****        index_ptr+=step;
 4107              		.loc 1 438 19 is_stmt 0 view .LVU1362
 4108 1919 C5FD7F7A 		vmovdqa	YMMWORD PTR -128[rdx], ymm7	# MEM[base: _47, offset: 32B], tmp318
 4108      80
 439:sieve_extend.c ****        *index_ptr |= mask;
 4109              		.loc 1 439 8 is_stmt 1 view .LVU1363
 4110              	.LVL182:
 440:sieve_extend.c ****        index_ptr+=step;
 4111              		.loc 1 440 8 view .LVU1364
 4112              	# sieve_extend.c:440:        *index_ptr |= mask;
 440:sieve_extend.c ****        index_ptr+=step;
 4113              		.loc 1 440 19 is_stmt 0 view .LVU1365
 4114 191e C5E5EB80 		vpor	ymm0, ymm3, YMMWORD PTR 128[rax]	# tmp319, quadmask.57_171, MEM[base: index_ptr_164, offset: 
 4114      80000000 
 4115 1926 C5FD7F80 		vmovdqa	YMMWORD PTR 128[rax], ymm0	# MEM[base: index_ptr_164, offset: 128B], tmp319
 4115      80000000 
 441:sieve_extend.c ****    }
 4116              		.loc 1 441 8 is_stmt 1 view .LVU1366
 4117              	.LVL183:
 441:sieve_extend.c ****    }
 4118              		.loc 1 441 8 is_stmt 0 view .LVU1367
 4119 192e 498D8424 		lea	rax, 480[r12]	# _70,
 4119      E0010000 
 4120              	.LVL184:
 431:sieve_extend.c ****        *index_ptr |= mask;
 4121              		.loc 1 431 10 is_stmt 1 view .LVU1368
 4122 1936 4C39C0   		cmp	rax, r8	# _70, fast_loop_ptr
 4123 1939 0F82AAFE 		jb	.L281	#,
 4123      FFFF
 4124 193f 90       		.p2align 4
 4125              		.p2align 3
 4126              	.L280:
 444:sieve_extend.c ****    while likely(index_ptr <= range_stop_ptr) {
 4127              		.loc 1 444 4 view .LVU1369
 445:sieve_extend.c ****        *index_ptr |= mask;
 4128              		.loc 1 445 4 view .LVU1370
 445:sieve_extend.c ****        *index_ptr |= mask;
 4129              		.loc 1 445 10 view .LVU1371
 4130 1940 4939C1   		cmp	r9, rax	# range_stop_ptr, _70
 4131 1943 0F821E01 		jb	.L282	#,
 4131      0000
 445:sieve_extend.c ****        *index_ptr |= mask;
 4132              		.loc 1 445 10 is_stmt 0 view .LVU1372
 4133 1949 4D89CF   		mov	r15, r9	# tmp234, range_stop_ptr
 4134              	# sieve_extend.c:447:        index_ptr+=step;
 447:sieve_extend.c ****    }
 4135              		.loc 1 447 17 view .LVU1373
 4136 194c 488D4820 		lea	rcx, 32[rax]	# _70,
 4137 1950 4929C7   		sub	r15, rax	# tmp234, _70
GAS LISTING /tmp/ccjg94QQ.s 			page 122


 4138              	# sieve_extend.c:446:        *index_ptr |= mask;
 446:sieve_extend.c ****        index_ptr+=step;
 4139              		.loc 1 446 19 view .LVU1374
 4140 1953 C565EB00 		vpor	ymm8, ymm3, YMMWORD PTR [rax]	# tmp230, quadmask.57_171, MEM[base: index_ptr_130, offset: 0B]
 4141 1957 49C1EF05 		shr	r15, 5	# tmp233,
 4142 195b C57D7F00 		vmovdqa	YMMWORD PTR [rax], ymm8	# MEM[base: index_ptr_130, offset: 0B], tmp230
 4143 195f 4183E707 		and	r15d, 7	# tmp235,
 446:sieve_extend.c ****        index_ptr+=step;
 4144              		.loc 1 446 8 is_stmt 1 view .LVU1375
 447:sieve_extend.c ****    }
 4145              		.loc 1 447 8 view .LVU1376
 445:sieve_extend.c ****        *index_ptr |= mask;
 4146              		.loc 1 445 10 view .LVU1377
 4147 1963 4939C9   		cmp	r9, rcx	# range_stop_ptr, _70
 4148 1966 0F82FB00 		jb	.L282	#,
 4148      0000
 4149 196c 4D85FF   		test	r15, r15	# tmp235
 4150 196f 0F848300 		je	.L283	#,
 4150      0000
 4151 1975 4983FF01 		cmp	r15, 1	# tmp235,
 4152 1979 746B     		je	.L378	#,
 4153 197b 4983FF02 		cmp	r15, 2	# tmp235,
 4154 197f 7458     		je	.L379	#,
 4155 1981 4983FF03 		cmp	r15, 3	# tmp235,
 4156 1985 7445     		je	.L380	#,
 4157 1987 4983FF04 		cmp	r15, 4	# tmp235,
 4158 198b 7432     		je	.L381	#,
 4159 198d 4983FF05 		cmp	r15, 5	# tmp235,
 4160 1991 741F     		je	.L382	#,
 4161 1993 4983FF06 		cmp	r15, 6	# tmp235,
 4162 1997 740C     		je	.L383	#,
 446:sieve_extend.c ****        index_ptr+=step;
 4163              		.loc 1 446 8 view .LVU1378
 4164              	# sieve_extend.c:446:        *index_ptr |= mask;
 446:sieve_extend.c ****        index_ptr+=step;
 4165              		.loc 1 446 19 is_stmt 0 view .LVU1379
 4166 1999 C565EB09 		vpor	ymm9, ymm3, YMMWORD PTR [rcx]	# tmp296, quadmask.57_171, MEM[base: index_ptr_130, offset: 0B]
 4167 199d C57D7F09 		vmovdqa	YMMWORD PTR [rcx], ymm9	# MEM[base: index_ptr_130, offset: 0B], tmp296
 447:sieve_extend.c ****    }
 4168              		.loc 1 447 8 is_stmt 1 view .LVU1380
 4169              	# sieve_extend.c:447:        index_ptr+=step;
 447:sieve_extend.c ****    }
 4170              		.loc 1 447 17 is_stmt 0 view .LVU1381
 4171 19a1 488D4840 		lea	rcx, 64[rax]	# _70,
 445:sieve_extend.c ****        *index_ptr |= mask;
 4172              		.loc 1 445 10 is_stmt 1 view .LVU1382
 4173              	.L383:
 446:sieve_extend.c ****        index_ptr+=step;
 4174              		.loc 1 446 8 view .LVU1383
 4175              	# sieve_extend.c:446:        *index_ptr |= mask;
 446:sieve_extend.c ****        index_ptr+=step;
 4176              		.loc 1 446 19 is_stmt 0 view .LVU1384
 4177 19a5 C565EB11 		vpor	ymm10, ymm3, YMMWORD PTR [rcx]	# tmp297, quadmask.57_171, MEM[base: index_ptr_130, offset: 0B
 4178              	# sieve_extend.c:447:        index_ptr+=step;
 447:sieve_extend.c ****    }
 4179              		.loc 1 447 17 view .LVU1385
 4180 19a9 4883C120 		add	rcx, 32	# _70,
GAS LISTING /tmp/ccjg94QQ.s 			page 123


 4181              	# sieve_extend.c:446:        *index_ptr |= mask;
 446:sieve_extend.c ****        index_ptr+=step;
 4182              		.loc 1 446 19 view .LVU1386
 4183 19ad C57D7F51 		vmovdqa	YMMWORD PTR -32[rcx], ymm10	# MEM[base: index_ptr_130, offset: 0B], tmp297
 4183      E0
 447:sieve_extend.c ****    }
 4184              		.loc 1 447 8 is_stmt 1 view .LVU1387
 445:sieve_extend.c ****        *index_ptr |= mask;
 4185              		.loc 1 445 10 view .LVU1388
 4186              	.L382:
 446:sieve_extend.c ****        index_ptr+=step;
 4187              		.loc 1 446 8 view .LVU1389
 4188              	# sieve_extend.c:446:        *index_ptr |= mask;
 446:sieve_extend.c ****        index_ptr+=step;
 4189              		.loc 1 446 19 is_stmt 0 view .LVU1390
 4190 19b2 C565EB19 		vpor	ymm11, ymm3, YMMWORD PTR [rcx]	# tmp298, quadmask.57_171, MEM[base: index_ptr_130, offset: 0B
 4191              	# sieve_extend.c:447:        index_ptr+=step;
 447:sieve_extend.c ****    }
 4192              		.loc 1 447 17 view .LVU1391
 4193 19b6 4883C120 		add	rcx, 32	# _70,
 4194              	# sieve_extend.c:446:        *index_ptr |= mask;
 446:sieve_extend.c ****        index_ptr+=step;
 4195              		.loc 1 446 19 view .LVU1392
 4196 19ba C57D7F59 		vmovdqa	YMMWORD PTR -32[rcx], ymm11	# MEM[base: index_ptr_130, offset: 0B], tmp298
 4196      E0
 447:sieve_extend.c ****    }
 4197              		.loc 1 447 8 is_stmt 1 view .LVU1393
 445:sieve_extend.c ****        *index_ptr |= mask;
 4198              		.loc 1 445 10 view .LVU1394
 4199              	.L381:
 446:sieve_extend.c ****        index_ptr+=step;
 4200              		.loc 1 446 8 view .LVU1395
 4201              	# sieve_extend.c:446:        *index_ptr |= mask;
 446:sieve_extend.c ****        index_ptr+=step;
 4202              		.loc 1 446 19 is_stmt 0 view .LVU1396
 4203 19bf C565EB21 		vpor	ymm12, ymm3, YMMWORD PTR [rcx]	# tmp299, quadmask.57_171, MEM[base: index_ptr_130, offset: 0B
 4204              	# sieve_extend.c:447:        index_ptr+=step;
 447:sieve_extend.c ****    }
 4205              		.loc 1 447 17 view .LVU1397
 4206 19c3 4883C120 		add	rcx, 32	# _70,
 4207              	# sieve_extend.c:446:        *index_ptr |= mask;
 446:sieve_extend.c ****        index_ptr+=step;
 4208              		.loc 1 446 19 view .LVU1398
 4209 19c7 C57D7F61 		vmovdqa	YMMWORD PTR -32[rcx], ymm12	# MEM[base: index_ptr_130, offset: 0B], tmp299
 4209      E0
 447:sieve_extend.c ****    }
 4210              		.loc 1 447 8 is_stmt 1 view .LVU1399
 445:sieve_extend.c ****        *index_ptr |= mask;
 4211              		.loc 1 445 10 view .LVU1400
 4212              	.L380:
 446:sieve_extend.c ****        index_ptr+=step;
 4213              		.loc 1 446 8 view .LVU1401
 4214              	# sieve_extend.c:446:        *index_ptr |= mask;
 446:sieve_extend.c ****        index_ptr+=step;
 4215              		.loc 1 446 19 is_stmt 0 view .LVU1402
 4216 19cc C565EB29 		vpor	ymm13, ymm3, YMMWORD PTR [rcx]	# tmp300, quadmask.57_171, MEM[base: index_ptr_130, offset: 0B
 4217              	# sieve_extend.c:447:        index_ptr+=step;
GAS LISTING /tmp/ccjg94QQ.s 			page 124


 447:sieve_extend.c ****    }
 4218              		.loc 1 447 17 view .LVU1403
 4219 19d0 4883C120 		add	rcx, 32	# _70,
 4220              	# sieve_extend.c:446:        *index_ptr |= mask;
 446:sieve_extend.c ****        index_ptr+=step;
 4221              		.loc 1 446 19 view .LVU1404
 4222 19d4 C57D7F69 		vmovdqa	YMMWORD PTR -32[rcx], ymm13	# MEM[base: index_ptr_130, offset: 0B], tmp300
 4222      E0
 447:sieve_extend.c ****    }
 4223              		.loc 1 447 8 is_stmt 1 view .LVU1405
 445:sieve_extend.c ****        *index_ptr |= mask;
 4224              		.loc 1 445 10 view .LVU1406
 4225              	.L379:
 446:sieve_extend.c ****        index_ptr+=step;
 4226              		.loc 1 446 8 view .LVU1407
 4227              	# sieve_extend.c:446:        *index_ptr |= mask;
 446:sieve_extend.c ****        index_ptr+=step;
 4228              		.loc 1 446 19 is_stmt 0 view .LVU1408
 4229 19d9 C565EB31 		vpor	ymm14, ymm3, YMMWORD PTR [rcx]	# tmp301, quadmask.57_171, MEM[base: index_ptr_130, offset: 0B
 4230              	# sieve_extend.c:447:        index_ptr+=step;
 447:sieve_extend.c ****    }
 4231              		.loc 1 447 17 view .LVU1409
 4232 19dd 4883C120 		add	rcx, 32	# _70,
 4233              	# sieve_extend.c:446:        *index_ptr |= mask;
 446:sieve_extend.c ****        index_ptr+=step;
 4234              		.loc 1 446 19 view .LVU1410
 4235 19e1 C57D7F71 		vmovdqa	YMMWORD PTR -32[rcx], ymm14	# MEM[base: index_ptr_130, offset: 0B], tmp301
 4235      E0
 447:sieve_extend.c ****    }
 4236              		.loc 1 447 8 is_stmt 1 view .LVU1411
 445:sieve_extend.c ****        *index_ptr |= mask;
 4237              		.loc 1 445 10 view .LVU1412
 4238              	.L378:
 446:sieve_extend.c ****        index_ptr+=step;
 4239              		.loc 1 446 8 view .LVU1413
 4240              	# sieve_extend.c:446:        *index_ptr |= mask;
 446:sieve_extend.c ****        index_ptr+=step;
 4241              		.loc 1 446 19 is_stmt 0 view .LVU1414
 4242 19e6 C565EB39 		vpor	ymm15, ymm3, YMMWORD PTR [rcx]	# tmp302, quadmask.57_171, MEM[base: index_ptr_130, offset: 0B
 4243              	# sieve_extend.c:447:        index_ptr+=step;
 447:sieve_extend.c ****    }
 4244              		.loc 1 447 17 view .LVU1415
 4245 19ea 4883C120 		add	rcx, 32	# _70,
 4246              	# sieve_extend.c:446:        *index_ptr |= mask;
 446:sieve_extend.c ****        index_ptr+=step;
 4247              		.loc 1 446 19 view .LVU1416
 4248 19ee C57D7F79 		vmovdqa	YMMWORD PTR -32[rcx], ymm15	# MEM[base: index_ptr_130, offset: 0B], tmp302
 4248      E0
 447:sieve_extend.c ****    }
 4249              		.loc 1 447 8 is_stmt 1 view .LVU1417
 445:sieve_extend.c ****        *index_ptr |= mask;
 4250              		.loc 1 445 10 view .LVU1418
 4251 19f3 4939C9   		cmp	r9, rcx	# range_stop_ptr, _70
 4252 19f6 726F     		jb	.L282	#,
 4253              	.L283:
 446:sieve_extend.c ****        index_ptr+=step;
 4254              		.loc 1 446 8 view .LVU1419
GAS LISTING /tmp/ccjg94QQ.s 			page 125


 4255              	# sieve_extend.c:446:        *index_ptr |= mask;
 446:sieve_extend.c ****        index_ptr+=step;
 4256              		.loc 1 446 19 is_stmt 0 view .LVU1420
 4257 19f8 C5E5EB09 		vpor	ymm1, ymm3, YMMWORD PTR [rcx]	# tmp246, quadmask.57_171, MEM[base: index_ptr_130, offset: 0B]
 4258 19fc C5E5EB61 		vpor	ymm4, ymm3, YMMWORD PTR 32[rcx]	# tmp248, quadmask.57_171, MEM[base: index_ptr_130, offset: 0
 4258      20
 4259 1a01 C5E5EB69 		vpor	ymm5, ymm3, YMMWORD PTR 64[rcx]	# tmp250, quadmask.57_171, MEM[base: index_ptr_130, offset: 0
 4259      40
 4260 1a06 C5E5EB71 		vpor	ymm6, ymm3, YMMWORD PTR 96[rcx]	# tmp252, quadmask.57_171, MEM[base: index_ptr_130, offset: 0
 4260      60
 4261 1a0b C5E5EBB9 		vpor	ymm7, ymm3, YMMWORD PTR 128[rcx]	# tmp254, quadmask.57_171, MEM[base: index_ptr_130, offset: 
 4261      80000000 
 4262 1a13 C5E5EB81 		vpor	ymm0, ymm3, YMMWORD PTR 160[rcx]	# tmp256, quadmask.57_171, MEM[base: index_ptr_130, offset: 
 4262      A0000000 
 4263 1a1b C565EB81 		vpor	ymm8, ymm3, YMMWORD PTR 192[rcx]	# tmp258, quadmask.57_171, MEM[base: index_ptr_130, offset: 
 4263      C0000000 
 4264 1a23 C565EB89 		vpor	ymm9, ymm3, YMMWORD PTR 224[rcx]	# tmp260, quadmask.57_171, MEM[base: index_ptr_130, offset: 
 4264      E0000000 
 4265 1a2b C5FD7F09 		vmovdqa	YMMWORD PTR [rcx], ymm1	# MEM[base: index_ptr_130, offset: 0B], tmp246
 447:sieve_extend.c ****    }
 4266              		.loc 1 447 8 is_stmt 1 view .LVU1421
 445:sieve_extend.c ****        *index_ptr |= mask;
 4267              		.loc 1 445 10 view .LVU1422
 446:sieve_extend.c ****        index_ptr+=step;
 4268              		.loc 1 446 8 view .LVU1423
 4269              	# sieve_extend.c:447:        index_ptr+=step;
 447:sieve_extend.c ****    }
 4270              		.loc 1 447 17 is_stmt 0 view .LVU1424
 4271 1a2f 4881C100 		add	rcx, 256	# _70,
 4271      010000
 4272              	# sieve_extend.c:446:        *index_ptr |= mask;
 446:sieve_extend.c ****        index_ptr+=step;
 4273              		.loc 1 446 19 view .LVU1425
 4274 1a36 C5FD7FA1 		vmovdqa	YMMWORD PTR -224[rcx], ymm4	# MEM[base: index_ptr_130, offset: 0B], tmp248
 4274      20FFFFFF 
 447:sieve_extend.c ****    }
 4275              		.loc 1 447 8 is_stmt 1 view .LVU1426
 445:sieve_extend.c ****        *index_ptr |= mask;
 4276              		.loc 1 445 10 view .LVU1427
 446:sieve_extend.c ****        index_ptr+=step;
 4277              		.loc 1 446 8 view .LVU1428
 4278              	# sieve_extend.c:446:        *index_ptr |= mask;
 446:sieve_extend.c ****        index_ptr+=step;
 4279              		.loc 1 446 19 is_stmt 0 view .LVU1429
 4280 1a3e C5FD7FA9 		vmovdqa	YMMWORD PTR -192[rcx], ymm5	# MEM[base: index_ptr_130, offset: 0B], tmp250
 4280      40FFFFFF 
 447:sieve_extend.c ****    }
 4281              		.loc 1 447 8 is_stmt 1 view .LVU1430
 445:sieve_extend.c ****        *index_ptr |= mask;
 4282              		.loc 1 445 10 view .LVU1431
 446:sieve_extend.c ****        index_ptr+=step;
 4283              		.loc 1 446 8 view .LVU1432
 4284              	# sieve_extend.c:446:        *index_ptr |= mask;
 446:sieve_extend.c ****        index_ptr+=step;
 4285              		.loc 1 446 19 is_stmt 0 view .LVU1433
 4286 1a46 C5FD7FB1 		vmovdqa	YMMWORD PTR -160[rcx], ymm6	# MEM[base: index_ptr_130, offset: 0B], tmp252
 4286      60FFFFFF 
GAS LISTING /tmp/ccjg94QQ.s 			page 126


 447:sieve_extend.c ****    }
 4287              		.loc 1 447 8 is_stmt 1 view .LVU1434
 445:sieve_extend.c ****        *index_ptr |= mask;
 4288              		.loc 1 445 10 view .LVU1435
 446:sieve_extend.c ****        index_ptr+=step;
 4289              		.loc 1 446 8 view .LVU1436
 4290              	# sieve_extend.c:446:        *index_ptr |= mask;
 446:sieve_extend.c ****        index_ptr+=step;
 4291              		.loc 1 446 19 is_stmt 0 view .LVU1437
 4292 1a4e C5FD7F79 		vmovdqa	YMMWORD PTR -128[rcx], ymm7	# MEM[base: index_ptr_130, offset: 0B], tmp254
 4292      80
 447:sieve_extend.c ****    }
 4293              		.loc 1 447 8 is_stmt 1 view .LVU1438
 445:sieve_extend.c ****        *index_ptr |= mask;
 4294              		.loc 1 445 10 view .LVU1439
 446:sieve_extend.c ****        index_ptr+=step;
 4295              		.loc 1 446 8 view .LVU1440
 4296              	# sieve_extend.c:446:        *index_ptr |= mask;
 446:sieve_extend.c ****        index_ptr+=step;
 4297              		.loc 1 446 19 is_stmt 0 view .LVU1441
 4298 1a53 C5FD7F41 		vmovdqa	YMMWORD PTR -96[rcx], ymm0	# MEM[base: index_ptr_130, offset: 0B], tmp256
 4298      A0
 447:sieve_extend.c ****    }
 4299              		.loc 1 447 8 is_stmt 1 view .LVU1442
 445:sieve_extend.c ****        *index_ptr |= mask;
 4300              		.loc 1 445 10 view .LVU1443
 446:sieve_extend.c ****        index_ptr+=step;
 4301              		.loc 1 446 8 view .LVU1444
 4302              	# sieve_extend.c:446:        *index_ptr |= mask;
 446:sieve_extend.c ****        index_ptr+=step;
 4303              		.loc 1 446 19 is_stmt 0 view .LVU1445
 4304 1a58 C57D7F41 		vmovdqa	YMMWORD PTR -64[rcx], ymm8	# MEM[base: index_ptr_130, offset: 0B], tmp258
 4304      C0
 447:sieve_extend.c ****    }
 4305              		.loc 1 447 8 is_stmt 1 view .LVU1446
 445:sieve_extend.c ****        *index_ptr |= mask;
 4306              		.loc 1 445 10 view .LVU1447
 446:sieve_extend.c ****        index_ptr+=step;
 4307              		.loc 1 446 8 view .LVU1448
 4308              	# sieve_extend.c:446:        *index_ptr |= mask;
 446:sieve_extend.c ****        index_ptr+=step;
 4309              		.loc 1 446 19 is_stmt 0 view .LVU1449
 4310 1a5d C57D7F49 		vmovdqa	YMMWORD PTR -32[rcx], ymm9	# MEM[base: index_ptr_130, offset: 0B], tmp260
 4310      E0
 447:sieve_extend.c ****    }
 4311              		.loc 1 447 8 is_stmt 1 view .LVU1450
 445:sieve_extend.c ****        *index_ptr |= mask;
 4312              		.loc 1 445 10 view .LVU1451
 4313 1a62 4939C9   		cmp	r9, rcx	# range_stop_ptr, _70
 4314 1a65 7391     		jnb	.L283	#,
 4315              	.L282:
 4316              	.LVL185:
 445:sieve_extend.c ****        *index_ptr |= mask;
 4317              		.loc 1 445 10 is_stmt 0 view .LVU1452
 4318              	.LBE328:
 4319              	.LBE331:
 4320              	.LBE324:
GAS LISTING /tmp/ccjg94QQ.s 			page 127


 526:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 4321              		.loc 1 526 41 is_stmt 1 view .LVU1453
 4322              	# sieve_extend.c:526:     for (counter_t index = range_start; index < range_stop_unique;) {
 526:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 4323              		.loc 1 526 5 is_stmt 0 view .LVU1454
 4324 1a67 4939F2   		cmp	r10, rsi	# range_stop_unique, range_start
 4325 1a6a 0F8740FC 		ja	.L284	#,
 4325      FFFF
 4326              	.LVL186:
 4327              	.L425:
 526:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 4328              		.loc 1 526 5 view .LVU1455
 4329 1a70 C5F877   		vzeroupper
 4330              	.LVL187:
 4331              	.L266:
 526:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 4332              		.loc 1 526 5 view .LVU1456
 4333              	.LBE323:
 4334              	# sieve_extend.c:583: }
 583:sieve_extend.c **** 
 4335              		.loc 1 583 1 view .LVU1457
 4336 1a73 488B4424 		mov	rax, QWORD PTR 56[rsp]	# tmp409, D.6648
 4336      38
 4337 1a78 64483304 		xor	rax, QWORD PTR fs:40	# tmp409, MEM[(<address-space-1> long unsigned int *)40B]
 4337      25280000 
 4337      00
 4338 1a81 0F853B04 		jne	.L427	#,
 4338      0000
 4339 1a87 488D65D8 		lea	rsp, -40[rbp]	#,
 4340 1a8b 5B       		pop	rbx	#
 4341 1a8c 415C     		pop	r12	#
 4342 1a8e 415D     		pop	r13	#
 4343 1a90 415E     		pop	r14	#
 4344 1a92 415F     		pop	r15	#
 4345 1a94 5D       		pop	rbp	#
 4346              		.cfi_remember_state
 4347              		.cfi_def_cfa 7, 8
 4348 1a95 C3       		ret	
 4349              	.LVL188:
 4350              	.L426:
 4351              		.cfi_restore_state
 583:sieve_extend.c **** 
 4352              		.loc 1 583 1 view .LVU1458
 4353 1a96 4939DB   		cmp	r11, rbx	# range_stop_vector, tmp195
 4354 1a99 4989D5   		mov	r13, rdx	# _9, step
 4355 1a9c 4D89C3   		mov	r11, r8	# tmp199, tmp199
 4356              	.LBB334:
 4357              	.LBB333:
 4358              	# sieve_extend.c:534:             quadmask[word] |= markmask(index);
 534:sieve_extend.c ****             index += step;
 4359              		.loc 1 534 31 view .LVU1459
 4360 1a9f 41BC0100 		mov	r12d, 1	# tmp208,
 4360      0000
 4361              	# sieve_extend.c:528:         register bitvector_t quadmask = { };
 528:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 4362              		.loc 1 528 30 view .LVU1460
 4363 1aa5 C5E9EFD2 		vpxor	xmm2, xmm2, xmm2	# tmp204
GAS LISTING /tmp/ccjg94QQ.s 			page 128


 4364 1aa9 4C0F46DF 		cmovbe	r11, rdi	# bitarray_word,, tmp199
 4365 1aad 48C1E305 		sal	rbx, 5	# tmp203,
 4366 1ab1 49C1E506 		sal	r13, 6	# _9,
 4367 1ab5 66662E0F 		.p2align 4
 4367      1F840000 
 4367      000000
 4368              		.p2align 3
 4369              	.L278:
 527:sieve_extend.c ****         register bitvector_t quadmask = { };
 4370              		.loc 1 527 9 is_stmt 1 view .LVU1461
 4371              	# sieve_extend.c:527:         const counter_t current_vector_start_word =  vectorindex(index) << (S
 527:sieve_extend.c ****         register bitvector_t quadmask = { };
 4372              		.loc 1 527 54 is_stmt 0 view .LVU1462
 4373 1ac0 4989F6   		mov	r14, rsi	# _31, range_start
 4374              	# sieve_extend.c:529:         register counter_t word = wordindex(index) - current_vector_start_wor
 529:sieve_extend.c ****         
 4375              		.loc 1 529 35 view .LVU1463
 4376 1ac3 4889F0   		mov	rax, rsi	# tmp205, range_start
 4377              	# sieve_extend.c:527:         const counter_t current_vector_start_word =  vectorindex(index) << (S
 527:sieve_extend.c ****         register bitvector_t quadmask = { };
 4378              		.loc 1 527 54 view .LVU1464
 4379 1ac6 49C1EE08 		shr	r14, 8	# _31,
 4380              	# sieve_extend.c:529:         register counter_t word = wordindex(index) - current_vector_start_wor
 529:sieve_extend.c ****         
 4381              		.loc 1 529 35 view .LVU1465
 4382 1aca 48C1E806 		shr	rax, 6	# tmp205,
 4383              	# sieve_extend.c:527:         const counter_t current_vector_start_word =  vectorindex(index) << (S
 527:sieve_extend.c ****         register bitvector_t quadmask = { };
 4384              		.loc 1 527 25 view .LVU1466
 4385 1ace 4E8D04B5 		lea	r8, 0[0+r14*4]	# current_vector_start_word,
 4385      00000000 
 4386              	.LVL189:
 528:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 4387              		.loc 1 528 9 is_stmt 1 view .LVU1467
 4388              	# sieve_extend.c:528:         register bitvector_t quadmask = { };
 528:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 4389              		.loc 1 528 30 is_stmt 0 view .LVU1468
 4390 1ad6 C5FD7F14 		vmovdqa	YMMWORD PTR [rsp], ymm2	# quadmask, tmp204
 4390      24
 529:sieve_extend.c ****         
 4391              		.loc 1 529 9 is_stmt 1 view .LVU1469
 4392              	# sieve_extend.c:529:         register counter_t word = wordindex(index) - current_vector_start_wor
 529:sieve_extend.c ****         
 4393              		.loc 1 529 28 is_stmt 0 view .LVU1470
 4394 1adb 4C29C0   		sub	rax, r8	# word, current_vector_start_word
 4395              	.LVL190:
 4396              	.L274:
 533:sieve_extend.c ****             quadmask[word] |= markmask(index);
 4397              		.loc 1 533 9 is_stmt 1 discriminator 1 view .LVU1471
 534:sieve_extend.c ****             index += step;
 4398              		.loc 1 534 13 discriminator 1 view .LVU1472
 4399              	# sieve_extend.c:534:             quadmask[word] |= markmask(index);
 534:sieve_extend.c ****             index += step;
 4400              		.loc 1 534 31 is_stmt 0 discriminator 1 view .LVU1473
 4401 1ade C442C9F7 		shlx	r15, r12, rsi	# tmp207, tmp208, range_start
 4401      FC
 4402              	# sieve_extend.c:535:             index += step;
GAS LISTING /tmp/ccjg94QQ.s 			page 129


 535:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4403              		.loc 1 535 19 discriminator 1 view .LVU1474
 4404 1ae3 4801D6   		add	rsi, rdx	# range_start, step
 4405              	# sieve_extend.c:534:             quadmask[word] |= markmask(index);
 534:sieve_extend.c ****             index += step;
 4406              		.loc 1 534 28 discriminator 1 view .LVU1475
 4407 1ae6 4C093CC4 		or	QWORD PTR [rsp+rax*8], r15	# quadmask, tmp207
 535:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4408              		.loc 1 535 13 is_stmt 1 discriminator 1 view .LVU1476
 536:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4409              		.loc 1 536 13 discriminator 1 view .LVU1477
 4410              	# sieve_extend.c:536:             word = wordindex(index) - current_vector_start_word;
 536:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4411              		.loc 1 536 20 is_stmt 0 discriminator 1 view .LVU1478
 4412 1aea 4889F0   		mov	rax, rsi	# tmp209, range_start
 4413              	.LVL191:
 536:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4414              		.loc 1 536 20 discriminator 1 view .LVU1479
 4415 1aed 48C1E806 		shr	rax, 6	# tmp209,
 4416              	# sieve_extend.c:536:             word = wordindex(index) - current_vector_start_word;
 536:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4417              		.loc 1 536 18 discriminator 1 view .LVU1480
 4418 1af1 4C29C0   		sub	rax, r8	# word, current_vector_start_word
 537:sieve_extend.c ****         
 4419              		.loc 1 537 17 is_stmt 1 discriminator 1 view .LVU1481
 4420              	# sieve_extend.c:537:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 537:sieve_extend.c ****         
 4421              		.loc 1 537 9 is_stmt 0 discriminator 1 view .LVU1482
 4422 1af4 4883F803 		cmp	rax, 3	# word,
 4423 1af8 0F87D200 		ja	.L420	#,
 4423      0000
 533:sieve_extend.c ****             quadmask[word] |= markmask(index);
 4424              		.loc 1 533 9 is_stmt 1 view .LVU1483
 534:sieve_extend.c ****             index += step;
 4425              		.loc 1 534 13 view .LVU1484
 4426              	# sieve_extend.c:534:             quadmask[word] |= markmask(index);
 534:sieve_extend.c ****             index += step;
 4427              		.loc 1 534 31 is_stmt 0 view .LVU1485
 4428 1afe C442C9F7 		shlx	r15, r12, rsi	# tmp370, tmp208, range_start
 4428      FC
 4429              	# sieve_extend.c:535:             index += step;
 535:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4430              		.loc 1 535 19 view .LVU1486
 4431 1b03 4801D6   		add	rsi, rdx	# range_start, step
 4432              	# sieve_extend.c:534:             quadmask[word] |= markmask(index);
 534:sieve_extend.c ****             index += step;
 4433              		.loc 1 534 28 view .LVU1487
 4434 1b06 4C093CC4 		or	QWORD PTR [rsp+rax*8], r15	# quadmask, tmp370
 535:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4435              		.loc 1 535 13 is_stmt 1 view .LVU1488
 536:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4436              		.loc 1 536 13 view .LVU1489
 4437              	# sieve_extend.c:536:             word = wordindex(index) - current_vector_start_word;
 536:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4438              		.loc 1 536 20 is_stmt 0 view .LVU1490
 4439 1b0a 4889F0   		mov	rax, rsi	# tmp371, range_start
 4440 1b0d 48C1E806 		shr	rax, 6	# tmp371,
GAS LISTING /tmp/ccjg94QQ.s 			page 130


 4441              	# sieve_extend.c:536:             word = wordindex(index) - current_vector_start_word;
 536:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4442              		.loc 1 536 18 view .LVU1491
 4443 1b11 4C29C0   		sub	rax, r8	# word, current_vector_start_word
 537:sieve_extend.c ****         
 4444              		.loc 1 537 17 is_stmt 1 view .LVU1492
 4445              	# sieve_extend.c:537:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 537:sieve_extend.c ****         
 4446              		.loc 1 537 9 is_stmt 0 view .LVU1493
 4447 1b14 4883F803 		cmp	rax, 3	# word,
 4448 1b18 0F87B200 		ja	.L420	#,
 4448      0000
 533:sieve_extend.c ****             quadmask[word] |= markmask(index);
 4449              		.loc 1 533 9 is_stmt 1 view .LVU1494
 534:sieve_extend.c ****             index += step;
 4450              		.loc 1 534 13 view .LVU1495
 4451              	# sieve_extend.c:534:             quadmask[word] |= markmask(index);
 534:sieve_extend.c ****             index += step;
 4452              		.loc 1 534 31 is_stmt 0 view .LVU1496
 4453 1b1e C442C9F7 		shlx	r15, r12, rsi	# tmp373, tmp208, range_start
 4453      FC
 4454              	# sieve_extend.c:535:             index += step;
 535:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4455              		.loc 1 535 19 view .LVU1497
 4456 1b23 4801D6   		add	rsi, rdx	# range_start, step
 4457              	# sieve_extend.c:534:             quadmask[word] |= markmask(index);
 534:sieve_extend.c ****             index += step;
 4458              		.loc 1 534 28 view .LVU1498
 4459 1b26 4C093CC4 		or	QWORD PTR [rsp+rax*8], r15	# quadmask, tmp373
 535:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4460              		.loc 1 535 13 is_stmt 1 view .LVU1499
 536:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4461              		.loc 1 536 13 view .LVU1500
 4462              	# sieve_extend.c:536:             word = wordindex(index) - current_vector_start_word;
 536:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4463              		.loc 1 536 20 is_stmt 0 view .LVU1501
 4464 1b2a 4889F0   		mov	rax, rsi	# tmp374, range_start
 4465 1b2d 48C1E806 		shr	rax, 6	# tmp374,
 4466              	# sieve_extend.c:536:             word = wordindex(index) - current_vector_start_word;
 536:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4467              		.loc 1 536 18 view .LVU1502
 4468 1b31 4C29C0   		sub	rax, r8	# word, current_vector_start_word
 537:sieve_extend.c ****         
 4469              		.loc 1 537 17 is_stmt 1 view .LVU1503
 4470              	# sieve_extend.c:537:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 537:sieve_extend.c ****         
 4471              		.loc 1 537 9 is_stmt 0 view .LVU1504
 4472 1b34 4883F803 		cmp	rax, 3	# word,
 4473 1b38 0F879200 		ja	.L420	#,
 4473      0000
 533:sieve_extend.c ****             quadmask[word] |= markmask(index);
 4474              		.loc 1 533 9 is_stmt 1 view .LVU1505
 534:sieve_extend.c ****             index += step;
 4475              		.loc 1 534 13 view .LVU1506
 4476              	# sieve_extend.c:534:             quadmask[word] |= markmask(index);
 534:sieve_extend.c ****             index += step;
 4477              		.loc 1 534 31 is_stmt 0 view .LVU1507
GAS LISTING /tmp/ccjg94QQ.s 			page 131


 4478 1b3e C442C9F7 		shlx	r15, r12, rsi	# tmp376, tmp208, range_start
 4478      FC
 4479              	# sieve_extend.c:535:             index += step;
 535:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4480              		.loc 1 535 19 view .LVU1508
 4481 1b43 4801D6   		add	rsi, rdx	# range_start, step
 4482              	# sieve_extend.c:534:             quadmask[word] |= markmask(index);
 534:sieve_extend.c ****             index += step;
 4483              		.loc 1 534 28 view .LVU1509
 4484 1b46 4C093CC4 		or	QWORD PTR [rsp+rax*8], r15	# quadmask, tmp376
 535:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4485              		.loc 1 535 13 is_stmt 1 view .LVU1510
 536:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4486              		.loc 1 536 13 view .LVU1511
 4487              	# sieve_extend.c:536:             word = wordindex(index) - current_vector_start_word;
 536:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4488              		.loc 1 536 20 is_stmt 0 view .LVU1512
 4489 1b4a 4889F0   		mov	rax, rsi	# tmp377, range_start
 4490 1b4d 48C1E806 		shr	rax, 6	# tmp377,
 4491              	# sieve_extend.c:536:             word = wordindex(index) - current_vector_start_word;
 536:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4492              		.loc 1 536 18 view .LVU1513
 4493 1b51 4C29C0   		sub	rax, r8	# word, current_vector_start_word
 537:sieve_extend.c ****         
 4494              		.loc 1 537 17 is_stmt 1 view .LVU1514
 4495              	# sieve_extend.c:537:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 537:sieve_extend.c ****         
 4496              		.loc 1 537 9 is_stmt 0 view .LVU1515
 4497 1b54 4883F803 		cmp	rax, 3	# word,
 4498 1b58 7776     		ja	.L420	#,
 533:sieve_extend.c ****             quadmask[word] |= markmask(index);
 4499              		.loc 1 533 9 is_stmt 1 view .LVU1516
 534:sieve_extend.c ****             index += step;
 4500              		.loc 1 534 13 view .LVU1517
 4501              	# sieve_extend.c:534:             quadmask[word] |= markmask(index);
 534:sieve_extend.c ****             index += step;
 4502              		.loc 1 534 31 is_stmt 0 view .LVU1518
 4503 1b5a C442C9F7 		shlx	r15, r12, rsi	# tmp379, tmp208, range_start
 4503      FC
 4504              	# sieve_extend.c:535:             index += step;
 535:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4505              		.loc 1 535 19 view .LVU1519
 4506 1b5f 4801D6   		add	rsi, rdx	# range_start, step
 4507              	# sieve_extend.c:534:             quadmask[word] |= markmask(index);
 534:sieve_extend.c ****             index += step;
 4508              		.loc 1 534 28 view .LVU1520
 4509 1b62 4C093CC4 		or	QWORD PTR [rsp+rax*8], r15	# quadmask, tmp379
 535:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4510              		.loc 1 535 13 is_stmt 1 view .LVU1521
 536:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4511              		.loc 1 536 13 view .LVU1522
 4512              	# sieve_extend.c:536:             word = wordindex(index) - current_vector_start_word;
 536:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4513              		.loc 1 536 20 is_stmt 0 view .LVU1523
 4514 1b66 4889F0   		mov	rax, rsi	# tmp380, range_start
 4515 1b69 48C1E806 		shr	rax, 6	# tmp380,
 4516              	# sieve_extend.c:536:             word = wordindex(index) - current_vector_start_word;
GAS LISTING /tmp/ccjg94QQ.s 			page 132


 536:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4517              		.loc 1 536 18 view .LVU1524
 4518 1b6d 4C29C0   		sub	rax, r8	# word, current_vector_start_word
 537:sieve_extend.c ****         
 4519              		.loc 1 537 17 is_stmt 1 view .LVU1525
 4520              	# sieve_extend.c:537:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 537:sieve_extend.c ****         
 4521              		.loc 1 537 9 is_stmt 0 view .LVU1526
 4522 1b70 4883F803 		cmp	rax, 3	# word,
 4523 1b74 775A     		ja	.L420	#,
 533:sieve_extend.c ****             quadmask[word] |= markmask(index);
 4524              		.loc 1 533 9 is_stmt 1 view .LVU1527
 534:sieve_extend.c ****             index += step;
 4525              		.loc 1 534 13 view .LVU1528
 4526              	# sieve_extend.c:534:             quadmask[word] |= markmask(index);
 534:sieve_extend.c ****             index += step;
 4527              		.loc 1 534 31 is_stmt 0 view .LVU1529
 4528 1b76 C442C9F7 		shlx	r15, r12, rsi	# tmp382, tmp208, range_start
 4528      FC
 4529              	# sieve_extend.c:535:             index += step;
 535:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4530              		.loc 1 535 19 view .LVU1530
 4531 1b7b 4801D6   		add	rsi, rdx	# range_start, step
 4532              	# sieve_extend.c:534:             quadmask[word] |= markmask(index);
 534:sieve_extend.c ****             index += step;
 4533              		.loc 1 534 28 view .LVU1531
 4534 1b7e 4C093CC4 		or	QWORD PTR [rsp+rax*8], r15	# quadmask, tmp382
 535:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4535              		.loc 1 535 13 is_stmt 1 view .LVU1532
 536:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4536              		.loc 1 536 13 view .LVU1533
 4537              	# sieve_extend.c:536:             word = wordindex(index) - current_vector_start_word;
 536:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4538              		.loc 1 536 20 is_stmt 0 view .LVU1534
 4539 1b82 4889F0   		mov	rax, rsi	# tmp383, range_start
 4540 1b85 48C1E806 		shr	rax, 6	# tmp383,
 4541              	# sieve_extend.c:536:             word = wordindex(index) - current_vector_start_word;
 536:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4542              		.loc 1 536 18 view .LVU1535
 4543 1b89 4C29C0   		sub	rax, r8	# word, current_vector_start_word
 537:sieve_extend.c ****         
 4544              		.loc 1 537 17 is_stmt 1 view .LVU1536
 4545              	# sieve_extend.c:537:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 537:sieve_extend.c ****         
 4546              		.loc 1 537 9 is_stmt 0 view .LVU1537
 4547 1b8c 4883F803 		cmp	rax, 3	# word,
 4548 1b90 773E     		ja	.L420	#,
 533:sieve_extend.c ****             quadmask[word] |= markmask(index);
 4549              		.loc 1 533 9 is_stmt 1 view .LVU1538
 534:sieve_extend.c ****             index += step;
 4550              		.loc 1 534 13 view .LVU1539
 4551              	# sieve_extend.c:534:             quadmask[word] |= markmask(index);
 534:sieve_extend.c ****             index += step;
 4552              		.loc 1 534 31 is_stmt 0 view .LVU1540
 4553 1b92 C442C9F7 		shlx	r15, r12, rsi	# tmp385, tmp208, range_start
 4553      FC
 4554              	# sieve_extend.c:535:             index += step;
GAS LISTING /tmp/ccjg94QQ.s 			page 133


 535:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4555              		.loc 1 535 19 view .LVU1541
 4556 1b97 4801D6   		add	rsi, rdx	# range_start, step
 4557              	# sieve_extend.c:534:             quadmask[word] |= markmask(index);
 534:sieve_extend.c ****             index += step;
 4558              		.loc 1 534 28 view .LVU1542
 4559 1b9a 4C093CC4 		or	QWORD PTR [rsp+rax*8], r15	# quadmask, tmp385
 535:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4560              		.loc 1 535 13 is_stmt 1 view .LVU1543
 536:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4561              		.loc 1 536 13 view .LVU1544
 4562              	# sieve_extend.c:536:             word = wordindex(index) - current_vector_start_word;
 536:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4563              		.loc 1 536 20 is_stmt 0 view .LVU1545
 4564 1b9e 4889F0   		mov	rax, rsi	# tmp386, range_start
 4565 1ba1 48C1E806 		shr	rax, 6	# tmp386,
 4566              	# sieve_extend.c:536:             word = wordindex(index) - current_vector_start_word;
 536:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4567              		.loc 1 536 18 view .LVU1546
 4568 1ba5 4C29C0   		sub	rax, r8	# word, current_vector_start_word
 537:sieve_extend.c ****         
 4569              		.loc 1 537 17 is_stmt 1 view .LVU1547
 4570              	# sieve_extend.c:537:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 537:sieve_extend.c ****         
 4571              		.loc 1 537 9 is_stmt 0 view .LVU1548
 4572 1ba8 4883F803 		cmp	rax, 3	# word,
 4573 1bac 7722     		ja	.L420	#,
 533:sieve_extend.c ****             quadmask[word] |= markmask(index);
 4574              		.loc 1 533 9 is_stmt 1 view .LVU1549
 534:sieve_extend.c ****             index += step;
 4575              		.loc 1 534 13 view .LVU1550
 4576              	# sieve_extend.c:534:             quadmask[word] |= markmask(index);
 534:sieve_extend.c ****             index += step;
 4577              		.loc 1 534 31 is_stmt 0 view .LVU1551
 4578 1bae C442C9F7 		shlx	r15, r12, rsi	# tmp388, tmp208, range_start
 4578      FC
 4579              	# sieve_extend.c:535:             index += step;
 535:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4580              		.loc 1 535 19 view .LVU1552
 4581 1bb3 4801D6   		add	rsi, rdx	# range_start, step
 4582              	# sieve_extend.c:534:             quadmask[word] |= markmask(index);
 534:sieve_extend.c ****             index += step;
 4583              		.loc 1 534 28 view .LVU1553
 4584 1bb6 4C093CC4 		or	QWORD PTR [rsp+rax*8], r15	# quadmask, tmp388
 535:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4585              		.loc 1 535 13 is_stmt 1 view .LVU1554
 536:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4586              		.loc 1 536 13 view .LVU1555
 4587              	# sieve_extend.c:536:             word = wordindex(index) - current_vector_start_word;
 536:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4588              		.loc 1 536 20 is_stmt 0 view .LVU1556
 4589 1bba 4889F0   		mov	rax, rsi	# tmp389, range_start
 4590 1bbd 48C1E806 		shr	rax, 6	# tmp389,
 4591              	.LVL192:
 4592              	# sieve_extend.c:536:             word = wordindex(index) - current_vector_start_word;
 536:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4593              		.loc 1 536 18 view .LVU1557
GAS LISTING /tmp/ccjg94QQ.s 			page 134


 4594 1bc1 4C29C0   		sub	rax, r8	# word, current_vector_start_word
 4595              	.LVL193:
 537:sieve_extend.c ****         
 4596              		.loc 1 537 17 is_stmt 1 view .LVU1558
 4597              	# sieve_extend.c:537:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 537:sieve_extend.c ****         
 4598              		.loc 1 537 9 is_stmt 0 view .LVU1559
 4599 1bc4 4883F803 		cmp	rax, 3	# word,
 4600 1bc8 0F8610FF 		jbe	.L274	#,
 4600      FFFF
 4601              	.LVL194:
 4602 1bce 6690     		.p2align 4
 4603              		.p2align 3
 4604              	.L420:
 540:sieve_extend.c ****         const counter_t range_stop_vector = vectorindex(range_stop);
 4605              		.loc 1 540 9 is_stmt 1 view .LVU1560
 541:sieve_extend.c **** 
 4606              		.loc 1 541 9 view .LVU1561
 543:sieve_extend.c **** 
 4607              		.loc 1 543 9 view .LVU1562
 4608 1bd0 C5FD6F04 		vmovdqa	ymm0, YMMWORD PTR [rsp]	# quadmask.57_38, quadmask
 4608      24
 4609              	.LVL195:
 4610              	.LBB332:
 424:sieve_extend.c ****    const counter_t range_stop_vector = vectorindex(range_stop);
 4611              		.loc 1 424 20 view .LVU1563
 4612              	.LBB329:
 425:sieve_extend.c ****    register bitvector_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_vect
 4613              		.loc 1 425 4 view .LVU1564
 426:sieve_extend.c ****    register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_st
 4614              		.loc 1 426 4 view .LVU1565
 4615              	# sieve_extend.c:426:    register bitvector_t* __restrict index_ptr      =  __builtin_assume_aligne
 426:sieve_extend.c ****    register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_st
 4616              		.loc 1 426 89 is_stmt 0 view .LVU1566
 4617 1bd5 4D89F0   		mov	r8, r14	# _31, _31
 4618              	.LVL196:
 426:sieve_extend.c ****    register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_st
 4619              		.loc 1 426 89 view .LVU1567
 4620 1bd8 49C1E005 		sal	r8, 5	# _31,
 4621              	# sieve_extend.c:426:    register bitvector_t* __restrict index_ptr      =  __builtin_assume_aligne
 426:sieve_extend.c ****    register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_st
 4622              		.loc 1 426 80 view .LVU1568
 4623 1bdc 4901F8   		add	r8, rdi	# index_ptr, bitarray_word
 4624              	.LVL197:
 427:sieve_extend.c **** 
 4625              		.loc 1 427 4 is_stmt 1 view .LVU1569
 431:sieve_extend.c ****        *index_ptr |= mask;
 4626              		.loc 1 431 4 view .LVU1570
 431:sieve_extend.c ****        *index_ptr |= mask;
 4627              		.loc 1 431 10 view .LVU1571
 4628 1bdf 4D39D8   		cmp	r8, r11	# index_ptr, fast_loop_ptr
 4629 1be2 0F832801 		jnb	.L424	#,
 4629      0000
 4630 1be8 4F8D3428 		lea	r14, [r8+r13]	# ivtmp.290,
 4631              	.LVL198:
 4632              	.L276:
 432:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/ccjg94QQ.s 			page 135


 4633              		.loc 1 432 8 view .LVU1572
 4634              	# sieve_extend.c:432:        *index_ptr |= mask;
 432:sieve_extend.c ****        index_ptr+=step;
 4635              		.loc 1 432 19 is_stmt 0 view .LVU1573
 4636 1bec C4C17DEB 		vpor	ymm1, ymm0, YMMWORD PTR [r8]	# tmp211, quadmask.57_38, MEM[base: index_ptr_137, offset: 0B]
 4636      08
 4637 1bf1 C4C17D7F 		vmovdqa	YMMWORD PTR [r8], ymm1	# MEM[base: index_ptr_137, offset: 0B], tmp211
 4637      08
 433:sieve_extend.c ****        *index_ptr |= mask;
 4638              		.loc 1 433 8 is_stmt 1 view .LVU1574
 4639              	.LVL199:
 434:sieve_extend.c ****        index_ptr+=step;
 4640              		.loc 1 434 8 view .LVU1575
 4641              	# sieve_extend.c:434:        *index_ptr |= mask;
 434:sieve_extend.c ****        index_ptr+=step;
 4642              		.loc 1 434 19 is_stmt 0 view .LVU1576
 4643 1bf6 C4C17DEB 		vpor	ymm3, ymm0, YMMWORD PTR [r8+rcx]	# tmp212, quadmask.57_38, MEM[base: index_ptr_137, index: _8
 4643      1C08
 4644 1bfc C4C17D7F 		vmovdqa	YMMWORD PTR [r8+rcx], ymm3	# MEM[base: index_ptr_137, index: _85, offset: 0B], tmp212
 4644      1C08
 435:sieve_extend.c ****        *index_ptr |= mask;
 4645              		.loc 1 435 8 is_stmt 1 view .LVU1577
 4646              	.LVL200:
 436:sieve_extend.c ****        index_ptr+=step;
 4647              		.loc 1 436 8 view .LVU1578
 4648              	# sieve_extend.c:436:        *index_ptr |= mask;
 436:sieve_extend.c ****        index_ptr+=step;
 4649              		.loc 1 436 19 is_stmt 0 view .LVU1579
 4650 1c02 C4C17DEB 		vpor	ymm4, ymm0, YMMWORD PTR [r14]	# tmp213, quadmask.57_38, MEM[base: _189, offset: 0B]
 4650      26
 4651 1c07 C4C17D7F 		vmovdqa	YMMWORD PTR [r14], ymm4	# MEM[base: _189, offset: 0B], tmp213
 4651      26
 437:sieve_extend.c ****        *index_ptr |= mask;
 4652              		.loc 1 437 8 is_stmt 1 view .LVU1580
 4653              	.LVL201:
 438:sieve_extend.c ****        index_ptr+=step;
 4654              		.loc 1 438 8 view .LVU1581
 4655              	# sieve_extend.c:438:        *index_ptr |= mask;
 438:sieve_extend.c ****        index_ptr+=step;
 4656              		.loc 1 438 19 is_stmt 0 view .LVU1582
 4657 1c0c C4C17DEB 		vpor	ymm5, ymm0, YMMWORD PTR [r14+rcx]	# tmp214, quadmask.57_38, MEM[base: _189, index: _85, offse
 4657      2C0E
 4658 1c12 C4C17D7F 		vmovdqa	YMMWORD PTR [r14+rcx], ymm5	# MEM[base: _189, index: _85, offset: 0B], tmp214
 4658      2C0E
 439:sieve_extend.c ****        *index_ptr |= mask;
 4659              		.loc 1 439 8 is_stmt 1 view .LVU1583
 4660              	.LVL202:
 440:sieve_extend.c ****        index_ptr+=step;
 4661              		.loc 1 440 8 view .LVU1584
 4662 1c18 4901DE   		add	r14, rbx	# ivtmp.290, tmp203
 4663              	# sieve_extend.c:440:        *index_ptr |= mask;
 440:sieve_extend.c ****        index_ptr+=step;
 4664              		.loc 1 440 19 is_stmt 0 view .LVU1585
 4665 1c1b C4C17DEB 		vpor	ymm6, ymm0, YMMWORD PTR [r8+rcx*4]	# tmp215, quadmask.57_38, MEM[base: index_ptr_137, index: 
 4665      3488
 4666 1c21 C4C17D7F 		vmovdqa	YMMWORD PTR [r8+rcx*4], ymm6	# MEM[base: index_ptr_137, index: _85, step: 4, offset: 0B], 
 4666      3488
GAS LISTING /tmp/ccjg94QQ.s 			page 136


 441:sieve_extend.c ****    }
 4667              		.loc 1 441 8 is_stmt 1 view .LVU1586
 4668              	.LVL203:
 441:sieve_extend.c ****    }
 4669              		.loc 1 441 8 is_stmt 0 view .LVU1587
 4670 1c27 4901D8   		add	r8, rbx	# index_ptr, tmp203
 4671              	.LVL204:
 431:sieve_extend.c ****        *index_ptr |= mask;
 4672              		.loc 1 431 10 is_stmt 1 view .LVU1588
 4673 1c2a 4D39D8   		cmp	r8, r11	# index_ptr, fast_loop_ptr
 4674 1c2d 0F83DD00 		jnb	.L424	#,
 4674      0000
 432:sieve_extend.c ****        index_ptr+=step;
 4675              		.loc 1 432 8 view .LVU1589
 4676              	# sieve_extend.c:432:        *index_ptr |= mask;
 432:sieve_extend.c ****        index_ptr+=step;
 4677              		.loc 1 432 19 is_stmt 0 view .LVU1590
 4678 1c33 C4C17DEB 		vpor	ymm7, ymm0, YMMWORD PTR [r8]	# tmp353, quadmask.57_38, MEM[base: index_ptr_137, offset: 0B]
 4678      38
 4679 1c38 C4C17D7F 		vmovdqa	YMMWORD PTR [r8], ymm7	# MEM[base: index_ptr_137, offset: 0B], tmp353
 4679      38
 433:sieve_extend.c ****        *index_ptr |= mask;
 4680              		.loc 1 433 8 is_stmt 1 view .LVU1591
 4681              	.LVL205:
 434:sieve_extend.c ****        index_ptr+=step;
 4682              		.loc 1 434 8 view .LVU1592
 4683              	# sieve_extend.c:434:        *index_ptr |= mask;
 434:sieve_extend.c ****        index_ptr+=step;
 4684              		.loc 1 434 19 is_stmt 0 view .LVU1593
 4685 1c3d C4417DEB 		vpor	ymm8, ymm0, YMMWORD PTR [r8+rcx]	# tmp354, quadmask.57_38, MEM[base: index_ptr_137, index: _8
 4685      0408
 4686 1c43 C4417D7F 		vmovdqa	YMMWORD PTR [r8+rcx], ymm8	# MEM[base: index_ptr_137, index: _85, offset: 0B], tmp354
 4686      0408
 435:sieve_extend.c ****        *index_ptr |= mask;
 4687              		.loc 1 435 8 is_stmt 1 view .LVU1594
 4688              	.LVL206:
 436:sieve_extend.c ****        index_ptr+=step;
 4689              		.loc 1 436 8 view .LVU1595
 4690              	# sieve_extend.c:436:        *index_ptr |= mask;
 436:sieve_extend.c ****        index_ptr+=step;
 4691              		.loc 1 436 19 is_stmt 0 view .LVU1596
 4692 1c49 C4417DEB 		vpor	ymm9, ymm0, YMMWORD PTR [r14]	# tmp355, quadmask.57_38, MEM[base: _189, offset: 0B]
 4692      0E
 4693 1c4e C4417D7F 		vmovdqa	YMMWORD PTR [r14], ymm9	# MEM[base: _189, offset: 0B], tmp355
 4693      0E
 437:sieve_extend.c ****        *index_ptr |= mask;
 4694              		.loc 1 437 8 is_stmt 1 view .LVU1597
 4695              	.LVL207:
 438:sieve_extend.c ****        index_ptr+=step;
 4696              		.loc 1 438 8 view .LVU1598
 4697              	# sieve_extend.c:438:        *index_ptr |= mask;
 438:sieve_extend.c ****        index_ptr+=step;
 4698              		.loc 1 438 19 is_stmt 0 view .LVU1599
 4699 1c53 C4417DEB 		vpor	ymm10, ymm0, YMMWORD PTR [r14+rcx]	# tmp356, quadmask.57_38, MEM[base: _189, index: _85, offs
 4699      140E
 4700 1c59 C4417D7F 		vmovdqa	YMMWORD PTR [r14+rcx], ymm10	# MEM[base: _189, index: _85, offset: 0B], tmp356
 4700      140E
GAS LISTING /tmp/ccjg94QQ.s 			page 137


 439:sieve_extend.c ****        *index_ptr |= mask;
 4701              		.loc 1 439 8 is_stmt 1 view .LVU1600
 4702              	.LVL208:
 440:sieve_extend.c ****        index_ptr+=step;
 4703              		.loc 1 440 8 view .LVU1601
 4704 1c5f 4901DE   		add	r14, rbx	# ivtmp.290, tmp203
 4705              	# sieve_extend.c:440:        *index_ptr |= mask;
 440:sieve_extend.c ****        index_ptr+=step;
 4706              		.loc 1 440 19 is_stmt 0 view .LVU1602
 4707 1c62 C4417DEB 		vpor	ymm11, ymm0, YMMWORD PTR [r8+rcx*4]	# tmp357, quadmask.57_38, MEM[base: index_ptr_137, index:
 4707      1C88
 4708 1c68 C4417D7F 		vmovdqa	YMMWORD PTR [r8+rcx*4], ymm11	# MEM[base: index_ptr_137, index: _85, step: 4, offset: 0B],
 4708      1C88
 441:sieve_extend.c ****    }
 4709              		.loc 1 441 8 is_stmt 1 view .LVU1603
 4710              	.LVL209:
 441:sieve_extend.c ****    }
 4711              		.loc 1 441 8 is_stmt 0 view .LVU1604
 4712 1c6e 4901D8   		add	r8, rbx	# index_ptr, tmp203
 4713              	.LVL210:
 431:sieve_extend.c ****        *index_ptr |= mask;
 4714              		.loc 1 431 10 is_stmt 1 view .LVU1605
 4715 1c71 4D39D8   		cmp	r8, r11	# index_ptr, fast_loop_ptr
 4716 1c74 0F839600 		jnb	.L424	#,
 4716      0000
 432:sieve_extend.c ****        index_ptr+=step;
 4717              		.loc 1 432 8 view .LVU1606
 4718              	# sieve_extend.c:432:        *index_ptr |= mask;
 432:sieve_extend.c ****        index_ptr+=step;
 4719              		.loc 1 432 19 is_stmt 0 view .LVU1607
 4720 1c7a C4417DEB 		vpor	ymm12, ymm0, YMMWORD PTR [r8]	# tmp359, quadmask.57_38, MEM[base: index_ptr_137, offset: 0B]
 4720      20
 4721 1c7f C4417D7F 		vmovdqa	YMMWORD PTR [r8], ymm12	# MEM[base: index_ptr_137, offset: 0B], tmp359
 4721      20
 433:sieve_extend.c ****        *index_ptr |= mask;
 4722              		.loc 1 433 8 is_stmt 1 view .LVU1608
 4723              	.LVL211:
 434:sieve_extend.c ****        index_ptr+=step;
 4724              		.loc 1 434 8 view .LVU1609
 4725              	# sieve_extend.c:434:        *index_ptr |= mask;
 434:sieve_extend.c ****        index_ptr+=step;
 4726              		.loc 1 434 19 is_stmt 0 view .LVU1610
 4727 1c84 C4417DEB 		vpor	ymm13, ymm0, YMMWORD PTR [r8+rcx]	# tmp360, quadmask.57_38, MEM[base: index_ptr_137, index: _
 4727      2C08
 4728 1c8a C4417D7F 		vmovdqa	YMMWORD PTR [r8+rcx], ymm13	# MEM[base: index_ptr_137, index: _85, offset: 0B], tmp360
 4728      2C08
 435:sieve_extend.c ****        *index_ptr |= mask;
 4729              		.loc 1 435 8 is_stmt 1 view .LVU1611
 4730              	.LVL212:
 436:sieve_extend.c ****        index_ptr+=step;
 4731              		.loc 1 436 8 view .LVU1612
 4732              	# sieve_extend.c:436:        *index_ptr |= mask;
 436:sieve_extend.c ****        index_ptr+=step;
 4733              		.loc 1 436 19 is_stmt 0 view .LVU1613
 4734 1c90 C4417DEB 		vpor	ymm14, ymm0, YMMWORD PTR [r14]	# tmp361, quadmask.57_38, MEM[base: _189, offset: 0B]
 4734      36
 4735 1c95 C4417D7F 		vmovdqa	YMMWORD PTR [r14], ymm14	# MEM[base: _189, offset: 0B], tmp361
GAS LISTING /tmp/ccjg94QQ.s 			page 138


 4735      36
 437:sieve_extend.c ****        *index_ptr |= mask;
 4736              		.loc 1 437 8 is_stmt 1 view .LVU1614
 4737              	.LVL213:
 438:sieve_extend.c ****        index_ptr+=step;
 4738              		.loc 1 438 8 view .LVU1615
 4739              	# sieve_extend.c:438:        *index_ptr |= mask;
 438:sieve_extend.c ****        index_ptr+=step;
 4740              		.loc 1 438 19 is_stmt 0 view .LVU1616
 4741 1c9a C4417DEB 		vpor	ymm15, ymm0, YMMWORD PTR [r14+rcx]	# tmp362, quadmask.57_38, MEM[base: _189, index: _85, offs
 4741      3C0E
 4742 1ca0 C4417D7F 		vmovdqa	YMMWORD PTR [r14+rcx], ymm15	# MEM[base: _189, index: _85, offset: 0B], tmp362
 4742      3C0E
 439:sieve_extend.c ****        *index_ptr |= mask;
 4743              		.loc 1 439 8 is_stmt 1 view .LVU1617
 4744              	.LVL214:
 440:sieve_extend.c ****        index_ptr+=step;
 4745              		.loc 1 440 8 view .LVU1618
 4746 1ca6 4901DE   		add	r14, rbx	# ivtmp.290, tmp203
 4747              	# sieve_extend.c:440:        *index_ptr |= mask;
 440:sieve_extend.c ****        index_ptr+=step;
 4748              		.loc 1 440 19 is_stmt 0 view .LVU1619
 4749 1ca9 C4C17DEB 		vpor	ymm1, ymm0, YMMWORD PTR [r8+rcx*4]	# tmp363, quadmask.57_38, MEM[base: index_ptr_137, index: 
 4749      0C88
 4750 1caf C4C17D7F 		vmovdqa	YMMWORD PTR [r8+rcx*4], ymm1	# MEM[base: index_ptr_137, index: _85, step: 4, offset: 0B], 
 4750      0C88
 441:sieve_extend.c ****    }
 4751              		.loc 1 441 8 is_stmt 1 view .LVU1620
 4752              	.LVL215:
 441:sieve_extend.c ****    }
 4753              		.loc 1 441 8 is_stmt 0 view .LVU1621
 4754 1cb5 4901D8   		add	r8, rbx	# index_ptr, tmp203
 4755              	.LVL216:
 431:sieve_extend.c ****        *index_ptr |= mask;
 4756              		.loc 1 431 10 is_stmt 1 view .LVU1622
 4757 1cb8 4D39D8   		cmp	r8, r11	# index_ptr, fast_loop_ptr
 4758 1cbb 7353     		jnb	.L424	#,
 432:sieve_extend.c ****        index_ptr+=step;
 4759              		.loc 1 432 8 view .LVU1623
 4760              	# sieve_extend.c:432:        *index_ptr |= mask;
 432:sieve_extend.c ****        index_ptr+=step;
 4761              		.loc 1 432 19 is_stmt 0 view .LVU1624
 4762 1cbd C4C17DEB 		vpor	ymm3, ymm0, YMMWORD PTR [r8]	# tmp365, quadmask.57_38, MEM[base: index_ptr_137, offset: 0B]
 4762      18
 4763 1cc2 C4C17D7F 		vmovdqa	YMMWORD PTR [r8], ymm3	# MEM[base: index_ptr_137, offset: 0B], tmp365
 4763      18
 433:sieve_extend.c ****        *index_ptr |= mask;
 4764              		.loc 1 433 8 is_stmt 1 view .LVU1625
 4765              	.LVL217:
 434:sieve_extend.c ****        index_ptr+=step;
 4766              		.loc 1 434 8 view .LVU1626
 4767              	# sieve_extend.c:434:        *index_ptr |= mask;
 434:sieve_extend.c ****        index_ptr+=step;
 4768              		.loc 1 434 19 is_stmt 0 view .LVU1627
 4769 1cc7 C4C17DEB 		vpor	ymm4, ymm0, YMMWORD PTR [r8+rcx]	# tmp366, quadmask.57_38, MEM[base: index_ptr_137, index: _8
 4769      2408
 4770 1ccd C4C17D7F 		vmovdqa	YMMWORD PTR [r8+rcx], ymm4	# MEM[base: index_ptr_137, index: _85, offset: 0B], tmp366
GAS LISTING /tmp/ccjg94QQ.s 			page 139


 4770      2408
 435:sieve_extend.c ****        *index_ptr |= mask;
 4771              		.loc 1 435 8 is_stmt 1 view .LVU1628
 4772              	.LVL218:
 436:sieve_extend.c ****        index_ptr+=step;
 4773              		.loc 1 436 8 view .LVU1629
 4774              	# sieve_extend.c:436:        *index_ptr |= mask;
 436:sieve_extend.c ****        index_ptr+=step;
 4775              		.loc 1 436 19 is_stmt 0 view .LVU1630
 4776 1cd3 C4C17DEB 		vpor	ymm5, ymm0, YMMWORD PTR [r14]	# tmp367, quadmask.57_38, MEM[base: _189, offset: 0B]
 4776      2E
 4777 1cd8 C4C17D7F 		vmovdqa	YMMWORD PTR [r14], ymm5	# MEM[base: _189, offset: 0B], tmp367
 4777      2E
 437:sieve_extend.c ****        *index_ptr |= mask;
 4778              		.loc 1 437 8 is_stmt 1 view .LVU1631
 4779              	.LVL219:
 438:sieve_extend.c ****        index_ptr+=step;
 4780              		.loc 1 438 8 view .LVU1632
 4781              	# sieve_extend.c:438:        *index_ptr |= mask;
 438:sieve_extend.c ****        index_ptr+=step;
 4782              		.loc 1 438 19 is_stmt 0 view .LVU1633
 4783 1cdd C4C17DEB 		vpor	ymm6, ymm0, YMMWORD PTR [r14+rcx]	# tmp368, quadmask.57_38, MEM[base: _189, index: _85, offse
 4783      340E
 4784 1ce3 C4C17D7F 		vmovdqa	YMMWORD PTR [r14+rcx], ymm6	# MEM[base: _189, index: _85, offset: 0B], tmp368
 4784      340E
 439:sieve_extend.c ****        *index_ptr |= mask;
 4785              		.loc 1 439 8 is_stmt 1 view .LVU1634
 4786              	.LVL220:
 440:sieve_extend.c ****        index_ptr+=step;
 4787              		.loc 1 440 8 view .LVU1635
 4788 1ce9 4901DE   		add	r14, rbx	# ivtmp.290, tmp203
 4789              	# sieve_extend.c:440:        *index_ptr |= mask;
 440:sieve_extend.c ****        index_ptr+=step;
 4790              		.loc 1 440 19 is_stmt 0 view .LVU1636
 4791 1cec C4C17DEB 		vpor	ymm7, ymm0, YMMWORD PTR [r8+rcx*4]	# tmp369, quadmask.57_38, MEM[base: index_ptr_137, index: 
 4791      3C88
 4792 1cf2 C4C17D7F 		vmovdqa	YMMWORD PTR [r8+rcx*4], ymm7	# MEM[base: index_ptr_137, index: _85, step: 4, offset: 0B], 
 4792      3C88
 441:sieve_extend.c ****    }
 4793              		.loc 1 441 8 is_stmt 1 view .LVU1637
 4794              	.LVL221:
 441:sieve_extend.c ****    }
 4795              		.loc 1 441 8 is_stmt 0 view .LVU1638
 4796 1cf8 4901D8   		add	r8, rbx	# index_ptr, tmp203
 4797              	.LVL222:
 431:sieve_extend.c ****        *index_ptr |= mask;
 4798              		.loc 1 431 10 is_stmt 1 view .LVU1639
 4799 1cfb 4D39D8   		cmp	r8, r11	# index_ptr, fast_loop_ptr
 4800 1cfe 0F82E8FE 		jb	.L276	#,
 4800      FFFF
 4801 1d04 66662E0F 		.p2align 4
 4801      1F840000 
 4801      00000090 
 4802              		.p2align 3
 4803              	.L424:
 445:sieve_extend.c ****        *index_ptr |= mask;
 4804              		.loc 1 445 10 view .LVU1640
GAS LISTING /tmp/ccjg94QQ.s 			page 140


 4805 1d10 4D39C1   		cmp	r9, r8	# range_stop_ptr, index_ptr
 4806 1d13 0F82A700 		jb	.L285	#,
 4806      0000
 4807              	.L277:
 446:sieve_extend.c ****        index_ptr+=step;
 4808              		.loc 1 446 8 view .LVU1641
 4809              	# sieve_extend.c:446:        *index_ptr |= mask;
 446:sieve_extend.c ****        index_ptr+=step;
 4810              		.loc 1 446 19 is_stmt 0 view .LVU1642
 4811 1d19 C4417DEB 		vpor	ymm8, ymm0, YMMWORD PTR [r8]	# tmp231, quadmask.57_38, MEM[base: index_ptr_135, offset: 0B]
 4811      00
 4812 1d1e C4417D7F 		vmovdqa	YMMWORD PTR [r8], ymm8	# MEM[base: index_ptr_135, offset: 0B], tmp231
 4812      00
 447:sieve_extend.c ****    }
 4813              		.loc 1 447 8 is_stmt 1 view .LVU1643
 4814              	# sieve_extend.c:447:        index_ptr+=step;
 447:sieve_extend.c ****    }
 4815              		.loc 1 447 17 is_stmt 0 view .LVU1644
 4816 1d23 4901C8   		add	r8, rcx	# index_ptr, _85
 4817              	.LVL223:
 445:sieve_extend.c ****        *index_ptr |= mask;
 4818              		.loc 1 445 10 is_stmt 1 view .LVU1645
 4819 1d26 4D39C1   		cmp	r9, r8	# range_stop_ptr, index_ptr
 4820 1d29 0F829100 		jb	.L285	#,
 4820      0000
 446:sieve_extend.c ****        index_ptr+=step;
 4821              		.loc 1 446 8 view .LVU1646
 4822              	# sieve_extend.c:446:        *index_ptr |= mask;
 446:sieve_extend.c ****        index_ptr+=step;
 4823              		.loc 1 446 19 is_stmt 0 view .LVU1647
 4824 1d2f C4417DEB 		vpor	ymm9, ymm0, YMMWORD PTR [r8]	# tmp340, quadmask.57_38, MEM[base: index_ptr_135, offset: 0B]
 4824      08
 4825 1d34 C4417D7F 		vmovdqa	YMMWORD PTR [r8], ymm9	# MEM[base: index_ptr_135, offset: 0B], tmp340
 4825      08
 447:sieve_extend.c ****    }
 4826              		.loc 1 447 8 is_stmt 1 view .LVU1648
 4827              	# sieve_extend.c:447:        index_ptr+=step;
 447:sieve_extend.c ****    }
 4828              		.loc 1 447 17 is_stmt 0 view .LVU1649
 4829 1d39 4901C8   		add	r8, rcx	# index_ptr, _85
 445:sieve_extend.c ****        *index_ptr |= mask;
 4830              		.loc 1 445 10 is_stmt 1 view .LVU1650
 4831 1d3c 4D39C1   		cmp	r9, r8	# range_stop_ptr, index_ptr
 4832 1d3f 727F     		jb	.L285	#,
 446:sieve_extend.c ****        index_ptr+=step;
 4833              		.loc 1 446 8 view .LVU1651
 4834              	# sieve_extend.c:446:        *index_ptr |= mask;
 446:sieve_extend.c ****        index_ptr+=step;
 4835              		.loc 1 446 19 is_stmt 0 view .LVU1652
 4836 1d41 C4417DEB 		vpor	ymm10, ymm0, YMMWORD PTR [r8]	# tmp342, quadmask.57_38, MEM[base: index_ptr_135, offset: 0B]
 4836      10
 4837 1d46 C4417D7F 		vmovdqa	YMMWORD PTR [r8], ymm10	# MEM[base: index_ptr_135, offset: 0B], tmp342
 4837      10
 447:sieve_extend.c ****    }
 4838              		.loc 1 447 8 is_stmt 1 view .LVU1653
 4839              	# sieve_extend.c:447:        index_ptr+=step;
 447:sieve_extend.c ****    }
GAS LISTING /tmp/ccjg94QQ.s 			page 141


 4840              		.loc 1 447 17 is_stmt 0 view .LVU1654
 4841 1d4b 4901C8   		add	r8, rcx	# index_ptr, _85
 445:sieve_extend.c ****        *index_ptr |= mask;
 4842              		.loc 1 445 10 is_stmt 1 view .LVU1655
 4843 1d4e 4D39C1   		cmp	r9, r8	# range_stop_ptr, index_ptr
 4844 1d51 726D     		jb	.L285	#,
 446:sieve_extend.c ****        index_ptr+=step;
 4845              		.loc 1 446 8 view .LVU1656
 4846              	# sieve_extend.c:446:        *index_ptr |= mask;
 446:sieve_extend.c ****        index_ptr+=step;
 4847              		.loc 1 446 19 is_stmt 0 view .LVU1657
 4848 1d53 C4417DEB 		vpor	ymm11, ymm0, YMMWORD PTR [r8]	# tmp344, quadmask.57_38, MEM[base: index_ptr_135, offset: 0B]
 4848      18
 4849 1d58 C4417D7F 		vmovdqa	YMMWORD PTR [r8], ymm11	# MEM[base: index_ptr_135, offset: 0B], tmp344
 4849      18
 447:sieve_extend.c ****    }
 4850              		.loc 1 447 8 is_stmt 1 view .LVU1658
 4851              	# sieve_extend.c:447:        index_ptr+=step;
 447:sieve_extend.c ****    }
 4852              		.loc 1 447 17 is_stmt 0 view .LVU1659
 4853 1d5d 4901C8   		add	r8, rcx	# index_ptr, _85
 445:sieve_extend.c ****        *index_ptr |= mask;
 4854              		.loc 1 445 10 is_stmt 1 view .LVU1660
 4855 1d60 4D39C1   		cmp	r9, r8	# range_stop_ptr, index_ptr
 4856 1d63 725B     		jb	.L285	#,
 446:sieve_extend.c ****        index_ptr+=step;
 4857              		.loc 1 446 8 view .LVU1661
 4858              	# sieve_extend.c:446:        *index_ptr |= mask;
 446:sieve_extend.c ****        index_ptr+=step;
 4859              		.loc 1 446 19 is_stmt 0 view .LVU1662
 4860 1d65 C4417DEB 		vpor	ymm12, ymm0, YMMWORD PTR [r8]	# tmp346, quadmask.57_38, MEM[base: index_ptr_135, offset: 0B]
 4860      20
 4861 1d6a C4417D7F 		vmovdqa	YMMWORD PTR [r8], ymm12	# MEM[base: index_ptr_135, offset: 0B], tmp346
 4861      20
 447:sieve_extend.c ****    }
 4862              		.loc 1 447 8 is_stmt 1 view .LVU1663
 4863              	# sieve_extend.c:447:        index_ptr+=step;
 447:sieve_extend.c ****    }
 4864              		.loc 1 447 17 is_stmt 0 view .LVU1664
 4865 1d6f 4901C8   		add	r8, rcx	# index_ptr, _85
 445:sieve_extend.c ****        *index_ptr |= mask;
 4866              		.loc 1 445 10 is_stmt 1 view .LVU1665
 4867 1d72 4D39C1   		cmp	r9, r8	# range_stop_ptr, index_ptr
 4868 1d75 7249     		jb	.L285	#,
 446:sieve_extend.c ****        index_ptr+=step;
 4869              		.loc 1 446 8 view .LVU1666
 4870              	# sieve_extend.c:446:        *index_ptr |= mask;
 446:sieve_extend.c ****        index_ptr+=step;
 4871              		.loc 1 446 19 is_stmt 0 view .LVU1667
 4872 1d77 C4417DEB 		vpor	ymm13, ymm0, YMMWORD PTR [r8]	# tmp348, quadmask.57_38, MEM[base: index_ptr_135, offset: 0B]
 4872      28
 4873 1d7c C4417D7F 		vmovdqa	YMMWORD PTR [r8], ymm13	# MEM[base: index_ptr_135, offset: 0B], tmp348
 4873      28
 447:sieve_extend.c ****    }
 4874              		.loc 1 447 8 is_stmt 1 view .LVU1668
 4875              	# sieve_extend.c:447:        index_ptr+=step;
 447:sieve_extend.c ****    }
GAS LISTING /tmp/ccjg94QQ.s 			page 142


 4876              		.loc 1 447 17 is_stmt 0 view .LVU1669
 4877 1d81 4901C8   		add	r8, rcx	# index_ptr, _85
 445:sieve_extend.c ****        *index_ptr |= mask;
 4878              		.loc 1 445 10 is_stmt 1 view .LVU1670
 4879 1d84 4D39C1   		cmp	r9, r8	# range_stop_ptr, index_ptr
 4880 1d87 7237     		jb	.L285	#,
 446:sieve_extend.c ****        index_ptr+=step;
 4881              		.loc 1 446 8 view .LVU1671
 4882              	# sieve_extend.c:446:        *index_ptr |= mask;
 446:sieve_extend.c ****        index_ptr+=step;
 4883              		.loc 1 446 19 is_stmt 0 view .LVU1672
 4884 1d89 C4417DEB 		vpor	ymm14, ymm0, YMMWORD PTR [r8]	# tmp350, quadmask.57_38, MEM[base: index_ptr_135, offset: 0B]
 4884      30
 4885 1d8e C4417D7F 		vmovdqa	YMMWORD PTR [r8], ymm14	# MEM[base: index_ptr_135, offset: 0B], tmp350
 4885      30
 447:sieve_extend.c ****    }
 4886              		.loc 1 447 8 is_stmt 1 view .LVU1673
 4887              	# sieve_extend.c:447:        index_ptr+=step;
 447:sieve_extend.c ****    }
 4888              		.loc 1 447 17 is_stmt 0 view .LVU1674
 4889 1d93 4901C8   		add	r8, rcx	# index_ptr, _85
 445:sieve_extend.c ****        *index_ptr |= mask;
 4890              		.loc 1 445 10 is_stmt 1 view .LVU1675
 4891 1d96 4D39C1   		cmp	r9, r8	# range_stop_ptr, index_ptr
 4892 1d99 7225     		jb	.L285	#,
 446:sieve_extend.c ****        index_ptr+=step;
 4893              		.loc 1 446 8 view .LVU1676
 4894              	# sieve_extend.c:446:        *index_ptr |= mask;
 446:sieve_extend.c ****        index_ptr+=step;
 4895              		.loc 1 446 19 is_stmt 0 view .LVU1677
 4896 1d9b C4417DEB 		vpor	ymm15, ymm0, YMMWORD PTR [r8]	# tmp352, quadmask.57_38, MEM[base: index_ptr_135, offset: 0B]
 4896      38
 4897 1da0 C4417D7F 		vmovdqa	YMMWORD PTR [r8], ymm15	# MEM[base: index_ptr_135, offset: 0B], tmp352
 4897      38
 447:sieve_extend.c ****    }
 4898              		.loc 1 447 8 is_stmt 1 view .LVU1678
 4899              	.LVL224:
 4900              	# sieve_extend.c:447:        index_ptr+=step;
 447:sieve_extend.c ****    }
 4901              		.loc 1 447 17 is_stmt 0 view .LVU1679
 4902 1da5 4901C8   		add	r8, rcx	# index_ptr, _85
 4903              	.LVL225:
 445:sieve_extend.c ****        *index_ptr |= mask;
 4904              		.loc 1 445 10 is_stmt 1 view .LVU1680
 4905 1da8 4D39C1   		cmp	r9, r8	# range_stop_ptr, index_ptr
 4906 1dab 0F8368FF 		jnb	.L277	#,
 4906      FFFF
 4907              	.LVL226:
 4908 1db1 66662E0F 		.p2align 4
 4908      1F840000 
 4908      0000000F 
 4908      1F4000
 4909              		.p2align 3
 4910              	.L285:
 445:sieve_extend.c ****        *index_ptr |= mask;
 4911              		.loc 1 445 10 is_stmt 0 view .LVU1681
 4912              	.LBE329:
GAS LISTING /tmp/ccjg94QQ.s 			page 143


 4913              	.LBE332:
 4914              	.LBE333:
 526:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 4915              		.loc 1 526 41 is_stmt 1 view .LVU1682
 4916              	# sieve_extend.c:526:     for (counter_t index = range_start; index < range_stop_unique;) {
 526:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 4917              		.loc 1 526 5 is_stmt 0 view .LVU1683
 4918 1dc0 4939F2   		cmp	r10, rsi	# range_stop_unique, range_start
 4919 1dc3 0F87F7FC 		ja	.L278	#,
 4919      FFFF
 4920 1dc9 E9A2FCFF 		jmp	.L425	#
 4920      FF
 4921              	.LVL227:
 4922              	.L268:
 526:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 4923              		.loc 1 526 5 view .LVU1684
 4924              	.LBE334:
 4925              	.LBB335:
 4926              	.LBB322:
 494:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4927              		.loc 1 494 49 is_stmt 1 view .LVU1685
 4928              	# sieve_extend.c:494:             for (counter_t index = range_start; index <= range_stop; index +=
 494:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4929              		.loc 1 494 13 is_stmt 0 view .LVU1686
 4930 1dce 4839CE   		cmp	rsi, rcx	# range_start, range_stop
 4931              	# sieve_extend.c:495:                 bitarray_word[wordindex(index)] |= markmask(index);
 495:sieve_extend.c ****             return;                 
 4932              		.loc 1 495 52 view .LVU1687
 4933 1dd1 41BA0100 		mov	r10d, 1	# tmp185,
 4933      0000
 4934              	# sieve_extend.c:494:             for (counter_t index = range_start; index <= range_stop; index +=
 494:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4935              		.loc 1 494 13 view .LVU1688
 4936 1dd7 0F8796FC 		ja	.L266	#,
 4936      FFFF
 4937              	.LVL228:
 4938              	.L270:
 495:sieve_extend.c ****             return;                 
 4939              		.loc 1 495 17 is_stmt 1 discriminator 3 view .LVU1689
 4940              	# sieve_extend.c:495:                 bitarray_word[wordindex(index)] |= markmask(index);
 495:sieve_extend.c ****             return;                 
 4941              		.loc 1 495 49 is_stmt 0 discriminator 3 view .LVU1690
 4942 1ddd 4889F3   		mov	rbx, rsi	# tmp181, range_start
 4943              	# sieve_extend.c:495:                 bitarray_word[wordindex(index)] |= markmask(index);
 495:sieve_extend.c ****             return;                 
 4944              		.loc 1 495 52 discriminator 3 view .LVU1691
 4945 1de0 C442C9F7 		shlx	r9, r10, rsi	# tmp184, tmp185, range_start
 4945      CA
 4946              	# sieve_extend.c:495:                 bitarray_word[wordindex(index)] |= markmask(index);
 495:sieve_extend.c ****             return;                 
 4947              		.loc 1 495 49 discriminator 3 view .LVU1692
 4948 1de5 48C1EB06 		shr	rbx, 6	# tmp181,
 4949              	# sieve_extend.c:494:             for (counter_t index = range_start; index <= range_stop; index +=
 494:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4950              		.loc 1 494 76 discriminator 3 view .LVU1693
 4951 1de9 4801D6   		add	rsi, rdx	# range_start, step
 4952              	# sieve_extend.c:495:                 bitarray_word[wordindex(index)] |= markmask(index);
GAS LISTING /tmp/ccjg94QQ.s 			page 144


 495:sieve_extend.c ****             return;                 
 4953              		.loc 1 495 49 discriminator 3 view .LVU1694
 4954 1dec 4C090CDF 		or	QWORD PTR [rdi+rbx*8], r9	# *_14, tmp184
 494:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4955              		.loc 1 494 70 is_stmt 1 discriminator 3 view .LVU1695
 494:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4956              		.loc 1 494 49 discriminator 3 view .LVU1696
 4957              	# sieve_extend.c:494:             for (counter_t index = range_start; index <= range_stop; index +=
 494:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4958              		.loc 1 494 13 is_stmt 0 discriminator 3 view .LVU1697
 4959 1df0 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 4960 1df3 0F827AFC 		jb	.L266	#,
 4960      FFFF
 495:sieve_extend.c ****             return;                 
 4961              		.loc 1 495 17 is_stmt 1 view .LVU1698
 4962              	# sieve_extend.c:495:                 bitarray_word[wordindex(index)] |= markmask(index);
 495:sieve_extend.c ****             return;                 
 4963              		.loc 1 495 49 is_stmt 0 view .LVU1699
 4964 1df9 4989F6   		mov	r14, rsi	# tmp262, range_start
 4965              	# sieve_extend.c:495:                 bitarray_word[wordindex(index)] |= markmask(index);
 495:sieve_extend.c ****             return;                 
 4966              		.loc 1 495 52 view .LVU1700
 4967 1dfc C442C9F7 		shlx	r12, r10, rsi	# tmp265, tmp185, range_start
 4967      E2
 4968              	# sieve_extend.c:495:                 bitarray_word[wordindex(index)] |= markmask(index);
 495:sieve_extend.c ****             return;                 
 4969              		.loc 1 495 49 view .LVU1701
 4970 1e01 49C1EE06 		shr	r14, 6	# tmp262,
 4971              	# sieve_extend.c:494:             for (counter_t index = range_start; index <= range_stop; index +=
 494:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4972              		.loc 1 494 76 view .LVU1702
 4973 1e05 4801D6   		add	rsi, rdx	# range_start, step
 4974              	# sieve_extend.c:495:                 bitarray_word[wordindex(index)] |= markmask(index);
 495:sieve_extend.c ****             return;                 
 4975              		.loc 1 495 49 view .LVU1703
 4976 1e08 4E0924F7 		or	QWORD PTR [rdi+r14*8], r12	# *_14, tmp265
 494:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4977              		.loc 1 494 70 is_stmt 1 view .LVU1704
 494:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4978              		.loc 1 494 49 view .LVU1705
 4979              	# sieve_extend.c:494:             for (counter_t index = range_start; index <= range_stop; index +=
 494:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4980              		.loc 1 494 13 is_stmt 0 view .LVU1706
 4981 1e0c 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 4982 1e0f 0F825EFC 		jb	.L266	#,
 4982      FFFF
 495:sieve_extend.c ****             return;                 
 4983              		.loc 1 495 17 is_stmt 1 view .LVU1707
 4984              	# sieve_extend.c:495:                 bitarray_word[wordindex(index)] |= markmask(index);
 495:sieve_extend.c ****             return;                 
 4985              		.loc 1 495 49 is_stmt 0 view .LVU1708
 4986 1e15 4989F5   		mov	r13, rsi	# tmp267, range_start
 4987              	# sieve_extend.c:495:                 bitarray_word[wordindex(index)] |= markmask(index);
 495:sieve_extend.c ****             return;                 
 4988              		.loc 1 495 52 view .LVU1709
 4989 1e18 C4C2C9F7 		shlx	rax, r10, rsi	# tmp270, tmp185, range_start
 4989      C2
GAS LISTING /tmp/ccjg94QQ.s 			page 145


 4990              	# sieve_extend.c:495:                 bitarray_word[wordindex(index)] |= markmask(index);
 495:sieve_extend.c ****             return;                 
 4991              		.loc 1 495 49 view .LVU1710
 4992 1e1d 49C1ED06 		shr	r13, 6	# tmp267,
 4993              	# sieve_extend.c:494:             for (counter_t index = range_start; index <= range_stop; index +=
 494:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4994              		.loc 1 494 76 view .LVU1711
 4995 1e21 4801D6   		add	rsi, rdx	# range_start, step
 4996              	# sieve_extend.c:495:                 bitarray_word[wordindex(index)] |= markmask(index);
 495:sieve_extend.c ****             return;                 
 4997              		.loc 1 495 49 view .LVU1712
 4998 1e24 4A0904EF 		or	QWORD PTR [rdi+r13*8], rax	# *_14, tmp270
 494:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4999              		.loc 1 494 70 is_stmt 1 view .LVU1713
 494:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5000              		.loc 1 494 49 view .LVU1714
 5001              	# sieve_extend.c:494:             for (counter_t index = range_start; index <= range_stop; index +=
 494:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5002              		.loc 1 494 13 is_stmt 0 view .LVU1715
 5003 1e28 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 5004 1e2b 0F8242FC 		jb	.L266	#,
 5004      FFFF
 495:sieve_extend.c ****             return;                 
 5005              		.loc 1 495 17 is_stmt 1 view .LVU1716
 5006              	# sieve_extend.c:495:                 bitarray_word[wordindex(index)] |= markmask(index);
 495:sieve_extend.c ****             return;                 
 5007              		.loc 1 495 49 is_stmt 0 view .LVU1717
 5008 1e31 4989F7   		mov	r15, rsi	# tmp272, range_start
 5009              	# sieve_extend.c:495:                 bitarray_word[wordindex(index)] |= markmask(index);
 495:sieve_extend.c ****             return;                 
 5010              		.loc 1 495 52 view .LVU1718
 5011 1e34 C442C9F7 		shlx	r8, r10, rsi	# tmp275, tmp185, range_start
 5011      C2
 5012              	# sieve_extend.c:495:                 bitarray_word[wordindex(index)] |= markmask(index);
 495:sieve_extend.c ****             return;                 
 5013              		.loc 1 495 49 view .LVU1719
 5014 1e39 49C1EF06 		shr	r15, 6	# tmp272,
 5015              	# sieve_extend.c:494:             for (counter_t index = range_start; index <= range_stop; index +=
 494:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5016              		.loc 1 494 76 view .LVU1720
 5017 1e3d 4801D6   		add	rsi, rdx	# range_start, step
 5018              	# sieve_extend.c:495:                 bitarray_word[wordindex(index)] |= markmask(index);
 495:sieve_extend.c ****             return;                 
 5019              		.loc 1 495 49 view .LVU1721
 5020 1e40 4E0904FF 		or	QWORD PTR [rdi+r15*8], r8	# *_14, tmp275
 494:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5021              		.loc 1 494 70 is_stmt 1 view .LVU1722
 494:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5022              		.loc 1 494 49 view .LVU1723
 5023              	# sieve_extend.c:494:             for (counter_t index = range_start; index <= range_stop; index +=
 494:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5024              		.loc 1 494 13 is_stmt 0 view .LVU1724
 5025 1e44 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 5026 1e47 0F8226FC 		jb	.L266	#,
 5026      FFFF
 495:sieve_extend.c ****             return;                 
 5027              		.loc 1 495 17 is_stmt 1 view .LVU1725
GAS LISTING /tmp/ccjg94QQ.s 			page 146


 5028              	# sieve_extend.c:495:                 bitarray_word[wordindex(index)] |= markmask(index);
 495:sieve_extend.c ****             return;                 
 5029              		.loc 1 495 49 is_stmt 0 view .LVU1726
 5030 1e4d 4989F3   		mov	r11, rsi	# tmp277, range_start
 5031              	# sieve_extend.c:495:                 bitarray_word[wordindex(index)] |= markmask(index);
 495:sieve_extend.c ****             return;                 
 5032              		.loc 1 495 52 view .LVU1727
 5033 1e50 C4C2C9F7 		shlx	rbx, r10, rsi	# tmp280, tmp185, range_start
 5033      DA
 5034              	# sieve_extend.c:495:                 bitarray_word[wordindex(index)] |= markmask(index);
 495:sieve_extend.c ****             return;                 
 5035              		.loc 1 495 49 view .LVU1728
 5036 1e55 49C1EB06 		shr	r11, 6	# tmp277,
 5037              	# sieve_extend.c:494:             for (counter_t index = range_start; index <= range_stop; index +=
 494:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5038              		.loc 1 494 76 view .LVU1729
 5039 1e59 4801D6   		add	rsi, rdx	# range_start, step
 5040              	# sieve_extend.c:495:                 bitarray_word[wordindex(index)] |= markmask(index);
 495:sieve_extend.c ****             return;                 
 5041              		.loc 1 495 49 view .LVU1730
 5042 1e5c 4A091CDF 		or	QWORD PTR [rdi+r11*8], rbx	# *_14, tmp280
 494:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5043              		.loc 1 494 70 is_stmt 1 view .LVU1731
 494:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5044              		.loc 1 494 49 view .LVU1732
 5045              	# sieve_extend.c:494:             for (counter_t index = range_start; index <= range_stop; index +=
 494:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5046              		.loc 1 494 13 is_stmt 0 view .LVU1733
 5047 1e60 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 5048 1e63 0F820AFC 		jb	.L266	#,
 5048      FFFF
 495:sieve_extend.c ****             return;                 
 5049              		.loc 1 495 17 is_stmt 1 view .LVU1734
 5050              	# sieve_extend.c:495:                 bitarray_word[wordindex(index)] |= markmask(index);
 495:sieve_extend.c ****             return;                 
 5051              		.loc 1 495 49 is_stmt 0 view .LVU1735
 5052 1e69 4989F6   		mov	r14, rsi	# tmp282, range_start
 5053              	# sieve_extend.c:495:                 bitarray_word[wordindex(index)] |= markmask(index);
 495:sieve_extend.c ****             return;                 
 5054              		.loc 1 495 52 view .LVU1736
 5055 1e6c C442C9F7 		shlx	r9, r10, rsi	# tmp285, tmp185, range_start
 5055      CA
 5056              	# sieve_extend.c:495:                 bitarray_word[wordindex(index)] |= markmask(index);
 495:sieve_extend.c ****             return;                 
 5057              		.loc 1 495 49 view .LVU1737
 5058 1e71 49C1EE06 		shr	r14, 6	# tmp282,
 5059              	# sieve_extend.c:494:             for (counter_t index = range_start; index <= range_stop; index +=
 494:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5060              		.loc 1 494 76 view .LVU1738
 5061 1e75 4801D6   		add	rsi, rdx	# range_start, step
 5062              	# sieve_extend.c:495:                 bitarray_word[wordindex(index)] |= markmask(index);
 495:sieve_extend.c ****             return;                 
 5063              		.loc 1 495 49 view .LVU1739
 5064 1e78 4E090CF7 		or	QWORD PTR [rdi+r14*8], r9	# *_14, tmp285
 494:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5065              		.loc 1 494 70 is_stmt 1 view .LVU1740
 494:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
GAS LISTING /tmp/ccjg94QQ.s 			page 147


 5066              		.loc 1 494 49 view .LVU1741
 5067              	# sieve_extend.c:494:             for (counter_t index = range_start; index <= range_stop; index +=
 494:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5068              		.loc 1 494 13 is_stmt 0 view .LVU1742
 5069 1e7c 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 5070 1e7f 0F82EEFB 		jb	.L266	#,
 5070      FFFF
 495:sieve_extend.c ****             return;                 
 5071              		.loc 1 495 17 is_stmt 1 view .LVU1743
 5072              	# sieve_extend.c:495:                 bitarray_word[wordindex(index)] |= markmask(index);
 495:sieve_extend.c ****             return;                 
 5073              		.loc 1 495 49 is_stmt 0 view .LVU1744
 5074 1e85 4989F4   		mov	r12, rsi	# tmp287, range_start
 5075              	# sieve_extend.c:495:                 bitarray_word[wordindex(index)] |= markmask(index);
 495:sieve_extend.c ****             return;                 
 5076              		.loc 1 495 52 view .LVU1745
 5077 1e88 C442C9F7 		shlx	r13, r10, rsi	# tmp290, tmp185, range_start
 5077      EA
 5078              	# sieve_extend.c:495:                 bitarray_word[wordindex(index)] |= markmask(index);
 495:sieve_extend.c ****             return;                 
 5079              		.loc 1 495 49 view .LVU1746
 5080 1e8d 49C1EC06 		shr	r12, 6	# tmp287,
 5081              	# sieve_extend.c:494:             for (counter_t index = range_start; index <= range_stop; index +=
 494:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5082              		.loc 1 494 76 view .LVU1747
 5083 1e91 4801D6   		add	rsi, rdx	# range_start, step
 5084              	# sieve_extend.c:495:                 bitarray_word[wordindex(index)] |= markmask(index);
 495:sieve_extend.c ****             return;                 
 5085              		.loc 1 495 49 view .LVU1748
 5086 1e94 4E092CE7 		or	QWORD PTR [rdi+r12*8], r13	# *_14, tmp290
 494:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5087              		.loc 1 494 70 is_stmt 1 view .LVU1749
 494:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5088              		.loc 1 494 49 view .LVU1750
 5089              	# sieve_extend.c:494:             for (counter_t index = range_start; index <= range_stop; index +=
 494:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5090              		.loc 1 494 13 is_stmt 0 view .LVU1751
 5091 1e98 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 5092 1e9b 0F82D2FB 		jb	.L266	#,
 5092      FFFF
 495:sieve_extend.c ****             return;                 
 5093              		.loc 1 495 17 is_stmt 1 view .LVU1752
 5094              	# sieve_extend.c:495:                 bitarray_word[wordindex(index)] |= markmask(index);
 495:sieve_extend.c ****             return;                 
 5095              		.loc 1 495 49 is_stmt 0 view .LVU1753
 5096 1ea1 4889F0   		mov	rax, rsi	# tmp292, range_start
 5097              	# sieve_extend.c:495:                 bitarray_word[wordindex(index)] |= markmask(index);
 495:sieve_extend.c ****             return;                 
 5098              		.loc 1 495 52 view .LVU1754
 5099 1ea4 C442C9F7 		shlx	r15, r10, rsi	# tmp295, tmp185, range_start
 5099      FA
 5100              	# sieve_extend.c:495:                 bitarray_word[wordindex(index)] |= markmask(index);
 495:sieve_extend.c ****             return;                 
 5101              		.loc 1 495 49 view .LVU1755
 5102 1ea9 48C1E806 		shr	rax, 6	# tmp292,
 5103              	# sieve_extend.c:494:             for (counter_t index = range_start; index <= range_stop; index +=
 494:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
GAS LISTING /tmp/ccjg94QQ.s 			page 148


 5104              		.loc 1 494 76 view .LVU1756
 5105 1ead 4801D6   		add	rsi, rdx	# range_start, step
 5106              	# sieve_extend.c:495:                 bitarray_word[wordindex(index)] |= markmask(index);
 495:sieve_extend.c ****             return;                 
 5107              		.loc 1 495 49 view .LVU1757
 5108 1eb0 4C093CC7 		or	QWORD PTR [rdi+rax*8], r15	# *_14, tmp295
 494:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5109              		.loc 1 494 70 is_stmt 1 view .LVU1758
 494:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5110              		.loc 1 494 49 view .LVU1759
 5111              	# sieve_extend.c:494:             for (counter_t index = range_start; index <= range_stop; index +=
 494:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5112              		.loc 1 494 13 is_stmt 0 view .LVU1760
 5113 1eb4 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 5114 1eb7 0F8320FF 		jnb	.L270	#,
 5114      FFFF
 5115 1ebd E9B1FBFF 		jmp	.L266	#
 5115      FF
 5116              	.LVL229:
 5117              	.L427:
 494:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5118              		.loc 1 494 13 view .LVU1761
 5119              	.LBE322:
 5120              	.LBE335:
 5121              	# sieve_extend.c:583: }
 583:sieve_extend.c **** 
 5122              		.loc 1 583 1 view .LVU1762
 5123 1ec2 E8000000 		call	__stack_chk_fail@PLT	#
 5123      00
 5124              	.LVL230:
 583:sieve_extend.c **** 
 5125              		.loc 1 583 1 view .LVU1763
 5126              		.cfi_endproc
 5127              	.LFE64:
 5129 1ec7 660F1F84 		.p2align 4
 5129      00000000 
 5129      00
 5131              	extendSieve_aligned:
 5132              	.LVL231:
 5133              	.LFB66:
 619:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 5134              		.loc 1 619 140 is_stmt 1 view -0
 5135              		.cfi_startproc
 620:sieve_extend.c **** 
 5136              		.loc 1 620 5 view .LVU1765
 622:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 5137              		.loc 1 622 5 view .LVU1766
 5138              	# sieve_extend.c:619: static void extendSieve_aligned(bitword_t* bitarray, const counter_t source_s
 619:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 5139              		.loc 1 619 140 is_stmt 0 view .LVU1767
 5140 1ed0 55       		push	rbp	#
 5141              		.cfi_def_cfa_offset 16
 5142              		.cfi_offset 6, -16
 5143 1ed1 4889E5   		mov	rbp, rsp	#,
 5144              		.cfi_def_cfa_register 6
 5145 1ed4 4157     		push	r15	#
 5146 1ed6 4156     		push	r14	#
GAS LISTING /tmp/ccjg94QQ.s 			page 149


 5147 1ed8 4155     		push	r13	#
 5148              		.cfi_offset 15, -24
 5149              		.cfi_offset 14, -32
 5150              		.cfi_offset 13, -40
 5151 1eda 4989FD   		mov	r13, rdi	# bitarray, tmp295
 5152 1edd 4154     		push	r12	#
 5153              		.cfi_offset 12, -48
 5154 1edf 4989D4   		mov	r12, rdx	# size, tmp297
 5155 1ee2 53       		push	rbx	#
 5156              		.cfi_offset 3, -56
 5157              	# sieve_extend.c:622:     const counter_t destination_stop_word = wordindex(destination_stop);
 622:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 5158              		.loc 1 622 21 view .LVU1768
 5159 1ee3 4889CB   		mov	rbx, rcx	# tmp298, tmp298
 5160              	# sieve_extend.c:623:     const counter_t copy_start = source_start + size;
 623:sieve_extend.c ****     counter_t source_word = wordindex(source_start);
 5161              		.loc 1 623 21 view .LVU1769
 5162 1ee6 488D0C16 		lea	rcx, [rsi+rdx]	# copy_start,
 5163              	.LVL232:
 5164              	# sieve_extend.c:619: static void extendSieve_aligned(bitword_t* bitarray, const counter_t source_s
 619:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 5165              		.loc 1 619 140 view .LVU1770
 5166 1eea 4883E4E0 		and	rsp, -32	#,
 5167              	# sieve_extend.c:625:     counter_t copy_word = wordindex(copy_start);
 625:sieve_extend.c ****     
 5168              		.loc 1 625 15 view .LVU1771
 5169 1eee 4889C8   		mov	rax, rcx	# ivtmp.344, copy_start
 5170              	# sieve_extend.c:624:     counter_t source_word = wordindex(source_start);
 624:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 5171              		.loc 1 624 15 view .LVU1772
 5172 1ef1 48C1EE06 		shr	rsi, 6	# source_start,
 5173              	.LVL233:
 5174              	# sieve_extend.c:619: static void extendSieve_aligned(bitword_t* bitarray, const counter_t source_s
 619:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 5175              		.loc 1 619 140 view .LVU1773
 5176 1ef5 488D6424 		lea	rsp, -32[rsp]	#,
 5176      E0
 5177              	# sieve_extend.c:625:     counter_t copy_word = wordindex(copy_start);
 625:sieve_extend.c ****     
 5178              		.loc 1 625 15 view .LVU1774
 5179 1efa 48C1E806 		shr	rax, 6	# ivtmp.344,
 5180              	# sieve_extend.c:627:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 627:sieve_extend.c **** 
 5181              		.loc 1 627 35 view .LVU1775
 5182 1efe 488D3CF5 		lea	rdi, 0[0+rsi*8]	# _4,
 5182      00000000 
 5183              	.LVL234:
 5184              	# sieve_extend.c:622:     const counter_t destination_stop_word = wordindex(destination_stop);
 622:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 5185              		.loc 1 622 21 view .LVU1776
 5186 1f06 48C1EB06 		shr	rbx, 6	# tmp298,
 5187              	.LVL235:
 623:sieve_extend.c ****     counter_t source_word = wordindex(source_start);
 5188              		.loc 1 623 5 is_stmt 1 view .LVU1777
 624:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 5189              		.loc 1 624 5 view .LVU1778
 5190              	# sieve_extend.c:627:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
GAS LISTING /tmp/ccjg94QQ.s 			page 150


 627:sieve_extend.c **** 
 5191              		.loc 1 627 35 is_stmt 0 view .LVU1779
 5192 1f0a 4D8D743D 		lea	r14, 0[r13+rdi]	# _5,
 5192      00
 5193              	# sieve_extend.c:624:     counter_t source_word = wordindex(source_start);
 624:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 5194              		.loc 1 624 15 view .LVU1780
 5195 1f0f 48897424 		mov	QWORD PTR 8[rsp], rsi	# %sfp, source_word
 5195      08
 5196              	.LVL236:
 625:sieve_extend.c ****     
 5197              		.loc 1 625 5 is_stmt 1 view .LVU1781
 627:sieve_extend.c **** 
 5198              		.loc 1 627 5 view .LVU1782
 5199              	# sieve_extend.c:627:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 627:sieve_extend.c **** 
 5200              		.loc 1 627 52 is_stmt 0 view .LVU1783
 5201 1f14 89CE     		mov	esi, ecx	# tmp183, copy_start
 5202              	.LVL237:
 5203              	# sieve_extend.c:629:     while (copy_word + size <= destination_stop_word) {
 629:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5204              		.loc 1 629 22 view .LVU1784
 5205 1f16 498D0C04 		lea	rcx, [r12+rax]	# ivtmp.344,
 5206              	.LVL238:
 5207              	# sieve_extend.c:627:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 627:sieve_extend.c **** 
 5208              		.loc 1 627 52 view .LVU1785
 5209 1f1a F7D6     		not	esi	# tmp183
 5210              	# sieve_extend.c:627:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 627:sieve_extend.c **** 
 5211              		.loc 1 627 35 view .LVU1786
 5212 1f1c 48893C24 		mov	QWORD PTR [rsp], rdi	# %sfp, _4
 5213              	# sieve_extend.c:627:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 627:sieve_extend.c **** 
 5214              		.loc 1 627 52 view .LVU1787
 5215 1f20 48C7C2FF 		mov	rdx, -1	# tmp186,
 5215      FFFFFF
 5216              	.LVL239:
 627:sieve_extend.c **** 
 5217              		.loc 1 627 52 view .LVU1788
 5218 1f27 C462CBF7 		shrx	r8, rdx, rsi	# tmp185, tmp186, tmp183
 5218      C2
 5219              	# sieve_extend.c:627:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 627:sieve_extend.c **** 
 5220              		.loc 1 627 49 view .LVU1789
 5221 1f2c C442B8F2 		andn	r9, r8, QWORD PTR [r14]	# tmp189, tmp185, *_5
 5221      0E
 5222              	# sieve_extend.c:627:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 627:sieve_extend.c **** 
 5223              		.loc 1 627 25 view .LVU1790
 5224 1f31 4D894CC5 		mov	QWORD PTR 0[r13+rax*8], r9	# *_13, tmp189
 5224      00
 629:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5225              		.loc 1 629 5 is_stmt 1 view .LVU1791
 629:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5226              		.loc 1 629 11 view .LVU1792
 5227 1f36 4839CB   		cmp	rbx, rcx	# destination_stop_word, ivtmp.344
GAS LISTING /tmp/ccjg94QQ.s 			page 151


 5228 1f39 0F827101 		jb	.L429	#,
 5228      0000
 5229 1f3f 4C8D14C5 		lea	r10, 0[0+rax*8]	# _12,
 5229      00000000 
 5230 1f47 488D04CD 		lea	rax, 0[0+rcx*8]	# tmp191,
 5230      00000000 
 5231              	.LVL240:
 629:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5232              		.loc 1 629 11 is_stmt 0 view .LVU1793
 5233 1f4f 4D01EA   		add	r10, r13	# tmp190, bitarray
 5234              	# sieve_extend.c:630:         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*
 630:sieve_extend.c ****         copy_word += size;
 5235              		.loc 1 630 9 view .LVU1794
 5236 1f52 4E8D3CE5 		lea	r15, 0[0+r12*8]	# _15,
 5236      00000000 
 5237 1f5a 4929C2   		sub	r10, rax	# tmp190, tmp191
 5238 1f5d 4C895424 		mov	QWORD PTR 24[rsp], r10	# %sfp, tmp190
 5238      18
 5239              	.LVL241:
 5240              	.L430:
 630:sieve_extend.c ****         copy_word += size;
 5241              		.loc 1 630 9 is_stmt 1 view .LVU1795
 5242              	.LBB336:
 5243              	.LBI336:
 5244              		.file 2 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h"
   1:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** /* Copyright (C) 2004-2020 Free Software Foundation, Inc.
   2:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    This file is part of the GNU C Library.
   3:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
   4:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    The GNU C Library is free software; you can redistribute it and/or
   5:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    modify it under the terms of the GNU Lesser General Public
   6:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    License as published by the Free Software Foundation; either
   7:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    version 2.1 of the License, or (at your option) any later version.
   8:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
   9:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    The GNU C Library is distributed in the hope that it will be useful,
  10:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  12:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    Lesser General Public License for more details.
  13:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  14:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    You should have received a copy of the GNU Lesser General Public
  15:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    License along with the GNU C Library; if not, see
  16:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    <https://www.gnu.org/licenses/>.  */
  17:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  18:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #ifndef _BITS_STRING_FORTIFIED_H
  19:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #define _BITS_STRING_FORTIFIED_H 1
  20:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  21:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #ifndef _STRING_H
  22:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** # error "Never use <bits/string_fortified.h> directly; include <string.h> instead."
  23:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  24:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  25:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #if !__GNUC_PREREQ (5,0)
  26:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __warndecl (__warn_memset_zero_len,
  27:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	    "memset used with constant zero length parameter; this could be due to transposed parameters")
  28:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  29:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  30:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __fortify_function void *
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __NTH (memcpy (void *__restrict __dest, const void *__restrict __src,
 5245              		.loc 2 31 1 view .LVU1796
GAS LISTING /tmp/ccjg94QQ.s 			page 152


 5246              	.LBB337:
  32:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
  33:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
 5247              		.loc 2 34 3 view .LVU1797
 5248              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5249              		.loc 2 34 10 is_stmt 0 view .LVU1798
 5250 1f62 4C8B5C24 		mov	r11, QWORD PTR 24[rsp]	# _189, %sfp
 5250      18
 5251 1f67 4C89FA   		mov	rdx, r15	#, _15
 5252 1f6a 48894C24 		mov	QWORD PTR 16[rsp], rcx	# %sfp, ivtmp.344
 5252      10
 5253 1f6f 4C89F6   		mov	rsi, r14	#, _5
 5254 1f72 498D3CCB 		lea	rdi, [r11+rcx*8]	# tmp193,
 5255 1f76 E8000000 		call	memcpy@PLT	#
 5255      00
 5256              	.LVL242:
 5257              		.loc 2 34 10 view .LVU1799
 5258              	.LBE337:
 5259              	.LBE336:
 631:sieve_extend.c ****     }
 5260              		.loc 1 631 9 is_stmt 1 view .LVU1800
 629:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5261              		.loc 1 629 11 view .LVU1801
 5262 1f7b 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.344, %sfp
 5262      10
 5263 1f80 4A8D0C20 		lea	rcx, [rax+r12]	# ivtmp.344,
 5264 1f84 4839CB   		cmp	rbx, rcx	# destination_stop_word, ivtmp.344
 5265 1f87 0F822301 		jb	.L429	#,
 5265      0000
 630:sieve_extend.c ****         copy_word += size;
 5266              		.loc 1 630 9 view .LVU1802
 5267              	.LVL243:
 5268              	.LBB345:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5269              		.loc 2 31 1 view .LVU1803
 5270              	.LBB338:
 5271              		.loc 2 34 3 view .LVU1804
 5272              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5273              		.loc 2 34 10 is_stmt 0 view .LVU1805
 5274 1f8d 488B7C24 		mov	rdi, QWORD PTR 24[rsp]	# _189, %sfp
 5274      18
 5275 1f92 4C89F6   		mov	rsi, r14	#, _5
 5276 1f95 48894C24 		mov	QWORD PTR 16[rsp], rcx	# %sfp, ivtmp.344
 5276      10
 5277              	.LVL244:
 5278              		.loc 2 34 10 view .LVU1806
 5279 1f9a 4C89FA   		mov	rdx, r15	#, _15
 5280 1f9d 488D3CCF 		lea	rdi, [rdi+rcx*8]	# tmp276,
 5281 1fa1 E8000000 		call	memcpy@PLT	#
 5281      00
 5282              	.LVL245:
 5283              		.loc 2 34 10 view .LVU1807
 5284              	.LBE338:
 5285              	.LBE345:
 631:sieve_extend.c ****     }
 5286              		.loc 1 631 9 is_stmt 1 view .LVU1808
GAS LISTING /tmp/ccjg94QQ.s 			page 153


 629:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5287              		.loc 1 629 11 view .LVU1809
 5288 1fa6 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.344, %sfp
 5288      10
 5289 1fab 4A8D3420 		lea	rsi, [rax+r12]	# ivtmp.344,
 5290 1faf 4839F3   		cmp	rbx, rsi	# destination_stop_word, ivtmp.344
 5291 1fb2 0F82F800 		jb	.L429	#,
 5291      0000
 630:sieve_extend.c ****         copy_word += size;
 5292              		.loc 1 630 9 view .LVU1810
 5293              	.LVL246:
 5294              	.LBB346:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5295              		.loc 2 31 1 view .LVU1811
 5296              	.LBB339:
 5297              		.loc 2 34 3 view .LVU1812
 5298              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5299              		.loc 2 34 10 is_stmt 0 view .LVU1813
 5300 1fb8 488B5424 		mov	rdx, QWORD PTR 24[rsp]	# _189, %sfp
 5300      18
 5301 1fbd 48897424 		mov	QWORD PTR 16[rsp], rsi	# %sfp, ivtmp.344
 5301      10
 5302 1fc2 488D3CF2 		lea	rdi, [rdx+rsi*8]	# tmp279,
 5303 1fc6 4C89FA   		mov	rdx, r15	#, _15
 5304 1fc9 4C89F6   		mov	rsi, r14	#, _5
 5305 1fcc E8000000 		call	memcpy@PLT	#
 5305      00
 5306              	.LVL247:
 5307              		.loc 2 34 10 view .LVU1814
 5308              	.LBE339:
 5309              	.LBE346:
 631:sieve_extend.c ****     }
 5310              		.loc 1 631 9 is_stmt 1 view .LVU1815
 629:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5311              		.loc 1 629 11 view .LVU1816
 5312 1fd1 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.344, %sfp
 5312      10
 5313 1fd6 4E8D0420 		lea	r8, [rax+r12]	# ivtmp.344,
 5314 1fda 4C39C3   		cmp	rbx, r8	# destination_stop_word, ivtmp.344
 5315 1fdd 0F82CD00 		jb	.L429	#,
 5315      0000
 630:sieve_extend.c ****         copy_word += size;
 5316              		.loc 1 630 9 view .LVU1817
 5317              	.LVL248:
 5318              	.LBB347:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5319              		.loc 2 31 1 view .LVU1818
 5320              	.LBB340:
 5321              		.loc 2 34 3 view .LVU1819
 5322              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5323              		.loc 2 34 10 is_stmt 0 view .LVU1820
 5324 1fe3 4C8B4C24 		mov	r9, QWORD PTR 24[rsp]	# _189, %sfp
 5324      18
 5325 1fe8 4C89FA   		mov	rdx, r15	#, _15
 5326 1feb 4C894424 		mov	QWORD PTR 16[rsp], r8	# %sfp, ivtmp.344
 5326      10
 5327 1ff0 4C89F6   		mov	rsi, r14	#, _5
GAS LISTING /tmp/ccjg94QQ.s 			page 154


 5328 1ff3 4B8D3CC1 		lea	rdi, [r9+r8*8]	# tmp282,
 5329 1ff7 E8000000 		call	memcpy@PLT	#
 5329      00
 5330              	.LVL249:
 5331              		.loc 2 34 10 view .LVU1821
 5332              	.LBE340:
 5333              	.LBE347:
 631:sieve_extend.c ****     }
 5334              		.loc 1 631 9 is_stmt 1 view .LVU1822
 629:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5335              		.loc 1 629 11 view .LVU1823
 5336 1ffc 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.344, %sfp
 5336      10
 5337 2001 4E8D1420 		lea	r10, [rax+r12]	# ivtmp.344,
 5338 2005 4C39D3   		cmp	rbx, r10	# destination_stop_word, ivtmp.344
 5339 2008 0F82A200 		jb	.L429	#,
 5339      0000
 630:sieve_extend.c ****         copy_word += size;
 5340              		.loc 1 630 9 view .LVU1824
 5341              	.LVL250:
 5342              	.LBB348:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5343              		.loc 2 31 1 view .LVU1825
 5344              	.LBB341:
 5345              		.loc 2 34 3 view .LVU1826
 5346              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5347              		.loc 2 34 10 is_stmt 0 view .LVU1827
 5348 200e 4C8B5C24 		mov	r11, QWORD PTR 24[rsp]	# _189, %sfp
 5348      18
 5349 2013 4C89FA   		mov	rdx, r15	#, _15
 5350 2016 4C895424 		mov	QWORD PTR 16[rsp], r10	# %sfp, ivtmp.344
 5350      10
 5351 201b 4C89F6   		mov	rsi, r14	#, _5
 5352 201e 4B8D3CD3 		lea	rdi, [r11+r10*8]	# tmp285,
 5353 2022 E8000000 		call	memcpy@PLT	#
 5353      00
 5354              	.LVL251:
 5355              		.loc 2 34 10 view .LVU1828
 5356              	.LBE341:
 5357              	.LBE348:
 631:sieve_extend.c ****     }
 5358              		.loc 1 631 9 is_stmt 1 view .LVU1829
 629:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5359              		.loc 1 629 11 view .LVU1830
 5360 2027 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.344, %sfp
 5360      10
 5361 202c 4A8D0C20 		lea	rcx, [rax+r12]	# ivtmp.344,
 5362 2030 4839CB   		cmp	rbx, rcx	# destination_stop_word, ivtmp.344
 5363 2033 727B     		jb	.L429	#,
 630:sieve_extend.c ****         copy_word += size;
 5364              		.loc 1 630 9 view .LVU1831
 5365              	.LVL252:
 5366              	.LBB349:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5367              		.loc 2 31 1 view .LVU1832
 5368              	.LBB342:
 5369              		.loc 2 34 3 view .LVU1833
GAS LISTING /tmp/ccjg94QQ.s 			page 155


 5370              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5371              		.loc 2 34 10 is_stmt 0 view .LVU1834
 5372 2035 488B7C24 		mov	rdi, QWORD PTR 24[rsp]	# _189, %sfp
 5372      18
 5373 203a 4C89F6   		mov	rsi, r14	#, _5
 5374 203d 48894C24 		mov	QWORD PTR 16[rsp], rcx	# %sfp, ivtmp.344
 5374      10
 5375 2042 4C89FA   		mov	rdx, r15	#, _15
 5376 2045 488D3CCF 		lea	rdi, [rdi+rcx*8]	# tmp288,
 5377 2049 E8000000 		call	memcpy@PLT	#
 5377      00
 5378              	.LVL253:
 5379              		.loc 2 34 10 view .LVU1835
 5380              	.LBE342:
 5381              	.LBE349:
 631:sieve_extend.c ****     }
 5382              		.loc 1 631 9 is_stmt 1 view .LVU1836
 629:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5383              		.loc 1 629 11 view .LVU1837
 5384 204e 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.344, %sfp
 5384      10
 5385 2053 4A8D3420 		lea	rsi, [rax+r12]	# ivtmp.344,
 5386 2057 4839F3   		cmp	rbx, rsi	# destination_stop_word, ivtmp.344
 5387 205a 7254     		jb	.L429	#,
 630:sieve_extend.c ****         copy_word += size;
 5388              		.loc 1 630 9 view .LVU1838
 5389              	.LVL254:
 5390              	.LBB350:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5391              		.loc 2 31 1 view .LVU1839
 5392              	.LBB343:
 5393              		.loc 2 34 3 view .LVU1840
 5394              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5395              		.loc 2 34 10 is_stmt 0 view .LVU1841
 5396 205c 488B5424 		mov	rdx, QWORD PTR 24[rsp]	# _189, %sfp
 5396      18
 5397 2061 48897424 		mov	QWORD PTR 16[rsp], rsi	# %sfp, ivtmp.344
 5397      10
 5398 2066 488D3CF2 		lea	rdi, [rdx+rsi*8]	# tmp291,
 5399 206a 4C89FA   		mov	rdx, r15	#, _15
 5400 206d 4C89F6   		mov	rsi, r14	#, _5
 5401 2070 E8000000 		call	memcpy@PLT	#
 5401      00
 5402              	.LVL255:
 5403              		.loc 2 34 10 view .LVU1842
 5404              	.LBE343:
 5405              	.LBE350:
 631:sieve_extend.c ****     }
 5406              		.loc 1 631 9 is_stmt 1 view .LVU1843
 629:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5407              		.loc 1 629 11 view .LVU1844
 5408 2075 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.344, %sfp
 5408      10
 5409 207a 4E8D0420 		lea	r8, [rax+r12]	# ivtmp.344,
 5410 207e 4C39C3   		cmp	rbx, r8	# destination_stop_word, ivtmp.344
 5411 2081 722D     		jb	.L429	#,
 630:sieve_extend.c ****         copy_word += size;
GAS LISTING /tmp/ccjg94QQ.s 			page 156


 5412              		.loc 1 630 9 view .LVU1845
 5413              	.LVL256:
 5414              	.LBB351:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5415              		.loc 2 31 1 view .LVU1846
 5416              	.LBB344:
 5417              		.loc 2 34 3 view .LVU1847
 5418              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5419              		.loc 2 34 10 is_stmt 0 view .LVU1848
 5420 2083 4C8B4C24 		mov	r9, QWORD PTR 24[rsp]	# _189, %sfp
 5420      18
 5421 2088 4C89FA   		mov	rdx, r15	#, _15
 5422 208b 4C894424 		mov	QWORD PTR 16[rsp], r8	# %sfp, ivtmp.344
 5422      10
 5423 2090 4C89F6   		mov	rsi, r14	#, _5
 5424 2093 4B8D3CC1 		lea	rdi, [r9+r8*8]	# tmp294,
 5425 2097 E8000000 		call	memcpy@PLT	#
 5425      00
 5426              	.LVL257:
 5427              		.loc 2 34 10 view .LVU1849
 5428              	.LBE344:
 5429              	.LBE351:
 631:sieve_extend.c ****     }
 5430              		.loc 1 631 9 is_stmt 1 view .LVU1850
 629:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5431              		.loc 1 629 11 view .LVU1851
 5432 209c 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.344, %sfp
 5432      10
 5433              	.LVL258:
 629:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5434              		.loc 1 629 11 is_stmt 0 view .LVU1852
 5435 20a1 4A8D0C20 		lea	rcx, [rax+r12]	# ivtmp.344,
 5436              	.LVL259:
 629:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5437              		.loc 1 629 11 view .LVU1853
 5438 20a5 4839CB   		cmp	rbx, rcx	# destination_stop_word, ivtmp.344
 5439 20a8 0F83B4FE 		jnb	.L430	#,
 5439      FFFF
 5440              	.LVL260:
 5441 20ae 6690     		.p2align 4
 5442              		.p2align 3
 5443              	.L429:
 634:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5444              		.loc 1 634 10 is_stmt 1 view .LVU1854
 5445 20b0 4839C3   		cmp	rbx, rax	# destination_stop_word, ivtmp.344
 5446 20b3 0F864902 		jbe	.L540	#,
 5446      0000
 5447 20b9 4C8B1424 		mov	r10, QWORD PTR [rsp]	# _4, %sfp
 5448 20bd 4C8D24C5 		lea	r12, 0[0+rax*8]	# _41,
 5448      00000000 
 5449              	.LVL261:
 634:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5450              		.loc 1 634 10 is_stmt 0 view .LVU1855
 5451 20c5 4D8D7C24 		lea	r15, 32[r12]	# tmp199,
 5451      20
 5452 20ca 498D7A20 		lea	rdi, 32[r10]	# tmp202,
 5453 20ce 4D39FA   		cmp	r10, r15	# _4, tmp199
GAS LISTING /tmp/ccjg94QQ.s 			page 157


 5454 20d1 410F9DC3 		setge	r11b	#, tmp201
 5455 20d5 4939FC   		cmp	r12, rdi	# _41, tmp202
 5456 20d8 400F9DC6 		setge	sil	#, tmp204
 5457 20dc 4108F3   		or	r11b, sil	# tmp201, tmp204
 5458 20df 0F844B02 		je	.L432	#,
 5458      0000
 5459 20e5 488D53FF 		lea	rdx, -1[rbx]	# tmp206,
 5460 20e9 4829C2   		sub	rdx, rax	# tmp207, ivtmp.344
 5461 20ec 4883FA05 		cmp	rdx, 5	# tmp207,
 5462 20f0 0F863A02 		jbe	.L432	#,
 5462      0000
 5463 20f6 4D89F7   		mov	r15, r14	# tmp210, _5
 5464 20f9 49C1EF03 		shr	r15, 3	# tmp210,
 5465 20fd 49F7DF   		neg	r15	# tmp211
 5466 2100 4183E703 		and	r15d, 3	# prolog_loop_niters.312,
 5467 2104 0F842E03 		je	.L439	#,
 5467      0000
 635:sieve_extend.c ****         source_word++;
 5468              		.loc 1 635 9 is_stmt 1 view .LVU1856
 5469              	# sieve_extend.c:635:         bitarray[copy_word] = bitarray[source_word];
 635:sieve_extend.c ****         source_word++;
 5470              		.loc 1 635 39 is_stmt 0 view .LVU1857
 5471 210a 4D8B06   		mov	r8, QWORD PTR [r14]	# _150, *_5
 5472 210d 4983FF01 		cmp	r15, 1	# prolog_loop_niters.312,
 5473              	# sieve_extend.c:636:         source_word++;
 636:sieve_extend.c ****         copy_word++;
 5474              		.loc 1 636 20 view .LVU1858
 5475 2111 4C8B4C24 		mov	r9, QWORD PTR 8[rsp]	# source_word, %sfp
 5475      08
 5476              	# sieve_extend.c:637:         copy_word++;
 637:sieve_extend.c ****     }
 5477              		.loc 1 637 18 view .LVU1859
 5478 2116 4C8D7001 		lea	r14, 1[rax]	# copy_word,
 5479              	# sieve_extend.c:635:         bitarray[copy_word] = bitarray[source_word];
 635:sieve_extend.c ****         source_word++;
 5480              		.loc 1 635 29 view .LVU1860
 5481 211a 4F894425 		mov	QWORD PTR 0[r13+r12], r8	# *_149, _150
 5481      00
 636:sieve_extend.c ****         copy_word++;
 5482              		.loc 1 636 9 is_stmt 1 view .LVU1861
 5483              	# sieve_extend.c:636:         source_word++;
 636:sieve_extend.c ****         copy_word++;
 5484              		.loc 1 636 20 is_stmt 0 view .LVU1862
 5485 211f 4D8D6101 		lea	r12, 1[r9]	# source_word,
 5486              	.LVL262:
 637:sieve_extend.c ****     }
 5487              		.loc 1 637 9 is_stmt 1 view .LVU1863
 634:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5488              		.loc 1 634 10 view .LVU1864
 5489 2123 742A     		je	.L433	#,
 635:sieve_extend.c ****         source_word++;
 5490              		.loc 1 635 9 view .LVU1865
 5491              	# sieve_extend.c:635:         bitarray[copy_word] = bitarray[source_word];
 635:sieve_extend.c ****         source_word++;
 5492              		.loc 1 635 39 is_stmt 0 view .LVU1866
 5493 2125 4B8B4CE5 		mov	rcx, QWORD PTR 0[r13+r12*8]	# _163, *_160
 5493      00
GAS LISTING /tmp/ccjg94QQ.s 			page 158


 5494 212a 4983FF03 		cmp	r15, 3	# prolog_loop_niters.312,
 5495              	# sieve_extend.c:636:         source_word++;
 636:sieve_extend.c ****         copy_word++;
 5496              		.loc 1 636 20 view .LVU1867
 5497 212e 4D8D6102 		lea	r12, 2[r9]	# source_word,
 5498              	.LVL263:
 5499              	# sieve_extend.c:635:         bitarray[copy_word] = bitarray[source_word];
 635:sieve_extend.c ****         source_word++;
 5500              		.loc 1 635 29 view .LVU1868
 5501 2132 4B894CF5 		mov	QWORD PTR 0[r13+r14*8], rcx	# *_162, _163
 5501      00
 636:sieve_extend.c ****         copy_word++;
 5502              		.loc 1 636 9 is_stmt 1 view .LVU1869
 5503              	.LVL264:
 637:sieve_extend.c ****     }
 5504              		.loc 1 637 9 view .LVU1870
 5505              	# sieve_extend.c:637:         copy_word++;
 637:sieve_extend.c ****     }
 5506              		.loc 1 637 18 is_stmt 0 view .LVU1871
 5507 2137 4C8D7002 		lea	r14, 2[rax]	# copy_word,
 5508              	.LVL265:
 634:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5509              		.loc 1 634 10 is_stmt 1 view .LVU1872
 5510 213b 7512     		jne	.L433	#,
 635:sieve_extend.c ****         source_word++;
 5511              		.loc 1 635 9 view .LVU1873
 5512              	# sieve_extend.c:635:         bitarray[copy_word] = bitarray[source_word];
 635:sieve_extend.c ****         source_word++;
 5513              		.loc 1 635 39 is_stmt 0 view .LVU1874
 5514 213d 4F8B54E5 		mov	r10, QWORD PTR 0[r13+r12*8]	# _89, *_86
 5514      00
 5515              	# sieve_extend.c:636:         source_word++;
 636:sieve_extend.c ****         copy_word++;
 5516              		.loc 1 636 20 view .LVU1875
 5517 2142 4D8D6103 		lea	r12, 3[r9]	# source_word,
 5518              	.LVL266:
 5519              	# sieve_extend.c:635:         bitarray[copy_word] = bitarray[source_word];
 635:sieve_extend.c ****         source_word++;
 5520              		.loc 1 635 29 view .LVU1876
 5521 2146 4F8954F5 		mov	QWORD PTR 0[r13+r14*8], r10	# *_88, _89
 5521      00
 636:sieve_extend.c ****         copy_word++;
 5522              		.loc 1 636 9 is_stmt 1 view .LVU1877
 5523              	.LVL267:
 637:sieve_extend.c ****     }
 5524              		.loc 1 637 9 view .LVU1878
 5525              	# sieve_extend.c:637:         copy_word++;
 637:sieve_extend.c ****     }
 5526              		.loc 1 637 18 is_stmt 0 view .LVU1879
 5527 214b 4C8D7003 		lea	r14, 3[rax]	# copy_word,
 5528              	.LVL268:
 634:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5529              		.loc 1 634 10 is_stmt 1 view .LVU1880
 5530              	.L433:
 634:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5531              		.loc 1 634 10 is_stmt 0 view .LVU1881
 5532 214f 488B7C24 		mov	rdi, QWORD PTR 8[rsp]	# source_word, %sfp
GAS LISTING /tmp/ccjg94QQ.s 			page 159


 5532      08
 5533 2154 4989DB   		mov	r11, rbx	# tmp212, destination_stop_word
 5534 2157 4D29FB   		sub	r11, r15	# tmp212, prolog_loop_niters.312
 5535 215a 4929C3   		sub	r11, rax	# niters.313, ivtmp.344
 5536 215d 4C01F8   		add	rax, r15	# tmp215, prolog_loop_niters.312
 5537 2160 4D89D8   		mov	r8, r11	# bnd.314, niters.313
 5538 2163 4C01FF   		add	rdi, r15	# source_word, prolog_loop_niters.312
 5539 2166 49C1E802 		shr	r8, 2	# bnd.314,
 5540 216a 4D8D7CC5 		lea	r15, 0[r13+rax*8]	# vectp.322,
 5540      00
 5541 216f 49C1E005 		sal	r8, 5	# _182,
 5542              	# sieve_extend.c:624:     counter_t source_word = wordindex(source_start);
 624:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 5543              		.loc 1 624 15 view .LVU1882
 5544 2173 31C0     		xor	eax, eax	# ivtmp.335
 5545 2175 498D50E0 		lea	rdx, -32[r8]	# tmp228,
 5546 2179 498D74FD 		lea	rsi, 0[r13+rdi*8]	# vectp.319,
 5546      00
 5547 217e 48C1EA05 		shr	rdx, 5	# tmp226,
 5548 2182 4883C201 		add	rdx, 1	# tmp229,
 5549 2186 83E207   		and	edx, 7	# tmp230,
 5550 2189 0F849500 		je	.L435	#,
 5550      0000
 5551 218f 4883FA01 		cmp	rdx, 1	# tmp230,
 5552 2193 7477     		je	.L499	#,
 5553 2195 4883FA02 		cmp	rdx, 2	# tmp230,
 5554 2199 7462     		je	.L500	#,
 5555 219b 4883FA03 		cmp	rdx, 3	# tmp230,
 5556 219f 744D     		je	.L501	#,
 5557 21a1 4883FA04 		cmp	rdx, 4	# tmp230,
 5558 21a5 7438     		je	.L502	#,
 5559 21a7 4883FA05 		cmp	rdx, 5	# tmp230,
 5560 21ab 7423     		je	.L503	#,
 5561 21ad 4883FA06 		cmp	rdx, 6	# tmp230,
 5562 21b1 740E     		je	.L504	#,
 635:sieve_extend.c ****         source_word++;
 5563              		.loc 1 635 9 is_stmt 1 view .LVU1883
 5564              	# sieve_extend.c:635:         bitarray[copy_word] = bitarray[source_word];
 635:sieve_extend.c ****         source_word++;
 5565              		.loc 1 635 29 is_stmt 0 view .LVU1884
 5566 21b3 C5FD6F0E 		vmovdqa	ymm1, YMMWORD PTR [rsi]	# tmp330, MEM[base: vectp.319_119, index: ivtmp.335_180, offset: 0
 5567 21b7 B8200000 		mov	eax, 32	# ivtmp.335,
 5567      00
 5568 21bc C4C17E7F 		vmovdqu	YMMWORD PTR [r15], ymm1	# MEM[base: vectp.322_125, index: ivtmp.335_180, offset: 0B], tmp3
 5568      0F
 636:sieve_extend.c ****         copy_word++;
 5569              		.loc 1 636 9 is_stmt 1 view .LVU1885
 637:sieve_extend.c ****     }
 5570              		.loc 1 637 9 view .LVU1886
 634:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5571              		.loc 1 634 10 view .LVU1887
 5572              	.L504:
 635:sieve_extend.c ****         source_word++;
 5573              		.loc 1 635 9 view .LVU1888
 5574              	# sieve_extend.c:635:         bitarray[copy_word] = bitarray[source_word];
 635:sieve_extend.c ****         source_word++;
 5575              		.loc 1 635 29 is_stmt 0 view .LVU1889
GAS LISTING /tmp/ccjg94QQ.s 			page 160


 5576 21c1 C5FD6F3C 		vmovdqa	ymm7, YMMWORD PTR [rsi+rax]	# tmp331, MEM[base: vectp.319_119, index: ivtmp.335_180, offse
 5576      06
 5577 21c6 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm7	# MEM[base: vectp.322_125, index: ivtmp.335_180, offset: 0B], 
 5577      3C07
 636:sieve_extend.c ****         copy_word++;
 5578              		.loc 1 636 9 is_stmt 1 view .LVU1890
 637:sieve_extend.c ****     }
 5579              		.loc 1 637 9 view .LVU1891
 634:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5580              		.loc 1 634 10 view .LVU1892
 5581 21cc 4883C020 		add	rax, 32	# ivtmp.335,
 5582              	.L503:
 635:sieve_extend.c ****         source_word++;
 5583              		.loc 1 635 9 view .LVU1893
 5584              	# sieve_extend.c:635:         bitarray[copy_word] = bitarray[source_word];
 635:sieve_extend.c ****         source_word++;
 5585              		.loc 1 635 29 is_stmt 0 view .LVU1894
 5586 21d0 C5FD6F34 		vmovdqa	ymm6, YMMWORD PTR [rsi+rax]	# tmp332, MEM[base: vectp.319_119, index: ivtmp.335_180, offse
 5586      06
 5587 21d5 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm6	# MEM[base: vectp.322_125, index: ivtmp.335_180, offset: 0B], 
 5587      3407
 636:sieve_extend.c ****         copy_word++;
 5588              		.loc 1 636 9 is_stmt 1 view .LVU1895
 637:sieve_extend.c ****     }
 5589              		.loc 1 637 9 view .LVU1896
 634:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5590              		.loc 1 634 10 view .LVU1897
 5591 21db 4883C020 		add	rax, 32	# ivtmp.335,
 5592              	.L502:
 635:sieve_extend.c ****         source_word++;
 5593              		.loc 1 635 9 view .LVU1898
 5594              	# sieve_extend.c:635:         bitarray[copy_word] = bitarray[source_word];
 635:sieve_extend.c ****         source_word++;
 5595              		.loc 1 635 29 is_stmt 0 view .LVU1899
 5596 21df C5FD6F2C 		vmovdqa	ymm5, YMMWORD PTR [rsi+rax]	# tmp333, MEM[base: vectp.319_119, index: ivtmp.335_180, offse
 5596      06
 5597 21e4 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm5	# MEM[base: vectp.322_125, index: ivtmp.335_180, offset: 0B], 
 5597      2C07
 636:sieve_extend.c ****         copy_word++;
 5598              		.loc 1 636 9 is_stmt 1 view .LVU1900
 637:sieve_extend.c ****     }
 5599              		.loc 1 637 9 view .LVU1901
 634:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5600              		.loc 1 634 10 view .LVU1902
 5601 21ea 4883C020 		add	rax, 32	# ivtmp.335,
 5602              	.L501:
 635:sieve_extend.c ****         source_word++;
 5603              		.loc 1 635 9 view .LVU1903
 5604              	# sieve_extend.c:635:         bitarray[copy_word] = bitarray[source_word];
 635:sieve_extend.c ****         source_word++;
 5605              		.loc 1 635 29 is_stmt 0 view .LVU1904
 5606 21ee C5FD6F24 		vmovdqa	ymm4, YMMWORD PTR [rsi+rax]	# tmp334, MEM[base: vectp.319_119, index: ivtmp.335_180, offse
 5606      06
 5607 21f3 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm4	# MEM[base: vectp.322_125, index: ivtmp.335_180, offset: 0B], 
 5607      2407
 636:sieve_extend.c ****         copy_word++;
 5608              		.loc 1 636 9 is_stmt 1 view .LVU1905
GAS LISTING /tmp/ccjg94QQ.s 			page 161


 637:sieve_extend.c ****     }
 5609              		.loc 1 637 9 view .LVU1906
 634:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5610              		.loc 1 634 10 view .LVU1907
 5611 21f9 4883C020 		add	rax, 32	# ivtmp.335,
 5612              	.L500:
 635:sieve_extend.c ****         source_word++;
 5613              		.loc 1 635 9 view .LVU1908
 5614              	# sieve_extend.c:635:         bitarray[copy_word] = bitarray[source_word];
 635:sieve_extend.c ****         source_word++;
 5615              		.loc 1 635 29 is_stmt 0 view .LVU1909
 5616 21fd C5FD6F04 		vmovdqa	ymm0, YMMWORD PTR [rsi+rax]	# tmp335, MEM[base: vectp.319_119, index: ivtmp.335_180, offse
 5616      06
 5617 2202 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm0	# MEM[base: vectp.322_125, index: ivtmp.335_180, offset: 0B], 
 5617      0407
 636:sieve_extend.c ****         copy_word++;
 5618              		.loc 1 636 9 is_stmt 1 view .LVU1910
 637:sieve_extend.c ****     }
 5619              		.loc 1 637 9 view .LVU1911
 634:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5620              		.loc 1 634 10 view .LVU1912
 5621 2208 4883C020 		add	rax, 32	# ivtmp.335,
 5622              	.L499:
 635:sieve_extend.c ****         source_word++;
 5623              		.loc 1 635 9 view .LVU1913
 5624              	# sieve_extend.c:635:         bitarray[copy_word] = bitarray[source_word];
 635:sieve_extend.c ****         source_word++;
 5625              		.loc 1 635 29 is_stmt 0 view .LVU1914
 5626 220c C5FD6F14 		vmovdqa	ymm2, YMMWORD PTR [rsi+rax]	# tmp336, MEM[base: vectp.319_119, index: ivtmp.335_180, offse
 5626      06
 5627 2211 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm2	# MEM[base: vectp.322_125, index: ivtmp.335_180, offset: 0B], 
 5627      1407
 636:sieve_extend.c ****         copy_word++;
 5628              		.loc 1 636 9 is_stmt 1 view .LVU1915
 637:sieve_extend.c ****     }
 5629              		.loc 1 637 9 view .LVU1916
 634:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5630              		.loc 1 634 10 view .LVU1917
 5631 2217 4883C020 		add	rax, 32	# ivtmp.335,
 5632 221b 4C39C0   		cmp	rax, r8	# ivtmp.335, _182
 5633 221e 0F848D00 		je	.L536	#,
 5633      0000
 5634              	.L435:
 635:sieve_extend.c ****         source_word++;
 5635              		.loc 1 635 9 view .LVU1918
 5636              	# sieve_extend.c:635:         bitarray[copy_word] = bitarray[source_word];
 635:sieve_extend.c ****         source_word++;
 5637              		.loc 1 635 29 is_stmt 0 view .LVU1919
 5638 2224 C5FD6F1C 		vmovdqa	ymm3, YMMWORD PTR [rsi+rax]	# tmp319, MEM[base: vectp.319_119, index: ivtmp.335_180, offse
 5638      06
 5639 2229 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm3	# MEM[base: vectp.322_125, index: ivtmp.335_180, offset: 0B], 
 5639      1C07
 636:sieve_extend.c ****         copy_word++;
 5640              		.loc 1 636 9 is_stmt 1 view .LVU1920
 637:sieve_extend.c ****     }
 5641              		.loc 1 637 9 view .LVU1921
 634:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
GAS LISTING /tmp/ccjg94QQ.s 			page 162


 5642              		.loc 1 634 10 view .LVU1922
 635:sieve_extend.c ****         source_word++;
 5643              		.loc 1 635 9 view .LVU1923
 5644              	# sieve_extend.c:635:         bitarray[copy_word] = bitarray[source_word];
 635:sieve_extend.c ****         source_word++;
 5645              		.loc 1 635 29 is_stmt 0 view .LVU1924
 5646 222f C57D6F44 		vmovdqa	ymm8, YMMWORD PTR 32[rsi+rax]	# tmp320, MEM[base: vectp.319_119, index: ivtmp.335_180, off
 5646      0620
 5647 2235 C4417E7F 		vmovdqu	YMMWORD PTR 32[r15+rax], ymm8	# MEM[base: vectp.322_125, index: ivtmp.335_180, offset: 0B]
 5647      440720
 636:sieve_extend.c ****         copy_word++;
 5648              		.loc 1 636 9 is_stmt 1 view .LVU1925
 637:sieve_extend.c ****     }
 5649              		.loc 1 637 9 view .LVU1926
 634:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5650              		.loc 1 634 10 view .LVU1927
 635:sieve_extend.c ****         source_word++;
 5651              		.loc 1 635 9 view .LVU1928
 5652              	# sieve_extend.c:635:         bitarray[copy_word] = bitarray[source_word];
 635:sieve_extend.c ****         source_word++;
 5653              		.loc 1 635 29 is_stmt 0 view .LVU1929
 5654 223c C57D6F4C 		vmovdqa	ymm9, YMMWORD PTR 64[rsi+rax]	# tmp321, MEM[base: vectp.319_119, index: ivtmp.335_180, off
 5654      0640
 5655 2242 C4417E7F 		vmovdqu	YMMWORD PTR 64[r15+rax], ymm9	# MEM[base: vectp.322_125, index: ivtmp.335_180, offset: 0B]
 5655      4C0740
 636:sieve_extend.c ****         copy_word++;
 5656              		.loc 1 636 9 is_stmt 1 view .LVU1930
 637:sieve_extend.c ****     }
 5657              		.loc 1 637 9 view .LVU1931
 634:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5658              		.loc 1 634 10 view .LVU1932
 635:sieve_extend.c ****         source_word++;
 5659              		.loc 1 635 9 view .LVU1933
 5660              	# sieve_extend.c:635:         bitarray[copy_word] = bitarray[source_word];
 635:sieve_extend.c ****         source_word++;
 5661              		.loc 1 635 29 is_stmt 0 view .LVU1934
 5662 2249 C57D6F54 		vmovdqa	ymm10, YMMWORD PTR 96[rsi+rax]	# tmp322, MEM[base: vectp.319_119, index: ivtmp.335_180, of
 5662      0660
 5663 224f C4417E7F 		vmovdqu	YMMWORD PTR 96[r15+rax], ymm10	# MEM[base: vectp.322_125, index: ivtmp.335_180, offset: 0B
 5663      540760
 636:sieve_extend.c ****         copy_word++;
 5664              		.loc 1 636 9 is_stmt 1 view .LVU1935
 637:sieve_extend.c ****     }
 5665              		.loc 1 637 9 view .LVU1936
 634:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5666              		.loc 1 634 10 view .LVU1937
 635:sieve_extend.c ****         source_word++;
 5667              		.loc 1 635 9 view .LVU1938
 5668              	# sieve_extend.c:635:         bitarray[copy_word] = bitarray[source_word];
 635:sieve_extend.c ****         source_word++;
 5669              		.loc 1 635 29 is_stmt 0 view .LVU1939
 5670 2256 C57D6F9C 		vmovdqa	ymm11, YMMWORD PTR 128[rsi+rax]	# tmp323, MEM[base: vectp.319_119, index: ivtmp.335_180, o
 5670      06800000 
 5670      00
 5671 225f C4417E7F 		vmovdqu	YMMWORD PTR 128[r15+rax], ymm11	# MEM[base: vectp.322_125, index: ivtmp.335_180, offset: 0
 5671      9C078000 
 5671      0000
GAS LISTING /tmp/ccjg94QQ.s 			page 163


 636:sieve_extend.c ****         copy_word++;
 5672              		.loc 1 636 9 is_stmt 1 view .LVU1940
 637:sieve_extend.c ****     }
 5673              		.loc 1 637 9 view .LVU1941
 634:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5674              		.loc 1 634 10 view .LVU1942
 635:sieve_extend.c ****         source_word++;
 5675              		.loc 1 635 9 view .LVU1943
 5676              	# sieve_extend.c:635:         bitarray[copy_word] = bitarray[source_word];
 635:sieve_extend.c ****         source_word++;
 5677              		.loc 1 635 29 is_stmt 0 view .LVU1944
 5678 2269 C57D6FA4 		vmovdqa	ymm12, YMMWORD PTR 160[rsi+rax]	# tmp324, MEM[base: vectp.319_119, index: ivtmp.335_180, o
 5678      06A00000 
 5678      00
 5679 2272 C4417E7F 		vmovdqu	YMMWORD PTR 160[r15+rax], ymm12	# MEM[base: vectp.322_125, index: ivtmp.335_180, offset: 0
 5679      A407A000 
 5679      0000
 636:sieve_extend.c ****         copy_word++;
 5680              		.loc 1 636 9 is_stmt 1 view .LVU1945
 637:sieve_extend.c ****     }
 5681              		.loc 1 637 9 view .LVU1946
 634:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5682              		.loc 1 634 10 view .LVU1947
 635:sieve_extend.c ****         source_word++;
 5683              		.loc 1 635 9 view .LVU1948
 5684              	# sieve_extend.c:635:         bitarray[copy_word] = bitarray[source_word];
 635:sieve_extend.c ****         source_word++;
 5685              		.loc 1 635 29 is_stmt 0 view .LVU1949
 5686 227c C57D6FAC 		vmovdqa	ymm13, YMMWORD PTR 192[rsi+rax]	# tmp325, MEM[base: vectp.319_119, index: ivtmp.335_180, o
 5686      06C00000 
 5686      00
 5687 2285 C4417E7F 		vmovdqu	YMMWORD PTR 192[r15+rax], ymm13	# MEM[base: vectp.322_125, index: ivtmp.335_180, offset: 0
 5687      AC07C000 
 5687      0000
 636:sieve_extend.c ****         copy_word++;
 5688              		.loc 1 636 9 is_stmt 1 view .LVU1950
 637:sieve_extend.c ****     }
 5689              		.loc 1 637 9 view .LVU1951
 634:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5690              		.loc 1 634 10 view .LVU1952
 635:sieve_extend.c ****         source_word++;
 5691              		.loc 1 635 9 view .LVU1953
 5692              	# sieve_extend.c:635:         bitarray[copy_word] = bitarray[source_word];
 635:sieve_extend.c ****         source_word++;
 5693              		.loc 1 635 29 is_stmt 0 view .LVU1954
 5694 228f C57D6FB4 		vmovdqa	ymm14, YMMWORD PTR 224[rsi+rax]	# tmp326, MEM[base: vectp.319_119, index: ivtmp.335_180, o
 5694      06E00000 
 5694      00
 5695 2298 C4417E7F 		vmovdqu	YMMWORD PTR 224[r15+rax], ymm14	# MEM[base: vectp.322_125, index: ivtmp.335_180, offset: 0
 5695      B407E000 
 5695      0000
 636:sieve_extend.c ****         copy_word++;
 5696              		.loc 1 636 9 is_stmt 1 view .LVU1955
 637:sieve_extend.c ****     }
 5697              		.loc 1 637 9 view .LVU1956
 634:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5698              		.loc 1 634 10 view .LVU1957
GAS LISTING /tmp/ccjg94QQ.s 			page 164


 5699 22a2 48050001 		add	rax, 256	# ivtmp.335,
 5699      0000
 5700 22a8 4C39C0   		cmp	rax, r8	# ivtmp.335, _182
 5701 22ab 0F8573FF 		jne	.L435	#,
 5701      FFFF
 5702              	.L536:
 5703 22b1 4D89D9   		mov	r9, r11	# niters_vector_mult_vf.315, niters.313
 5704 22b4 4983E1FC 		and	r9, -4	# niters_vector_mult_vf.315,
 5705 22b8 4D01CC   		add	r12, r9	# tmp.316, niters_vector_mult_vf.315
 5706 22bb 4D01CE   		add	r14, r9	# tmp.317, niters_vector_mult_vf.315
 5707 22be 4D39CB   		cmp	r11, r9	# niters.313, niters_vector_mult_vf.315
 5708 22c1 7455     		je	.L539	#,
 5709              	.LVL269:
 635:sieve_extend.c ****         source_word++;
 5710              		.loc 1 635 9 view .LVU1958
 5711              	# sieve_extend.c:635:         bitarray[copy_word] = bitarray[source_word];
 635:sieve_extend.c ****         source_word++;
 5712              		.loc 1 635 39 is_stmt 0 view .LVU1959
 5713 22c3 4B8B4CE5 		mov	rcx, QWORD PTR 0[r13+r12*8]	# _37, *_21
 5713      00
 5714              	# sieve_extend.c:637:         copy_word++;
 637:sieve_extend.c ****     }
 5715              		.loc 1 637 18 view .LVU1960
 5716 22c8 4D8D5601 		lea	r10, 1[r14]	# copy_word,
 5717              	# sieve_extend.c:636:         source_word++;
 636:sieve_extend.c ****         copy_word++;
 5718              		.loc 1 636 20 view .LVU1961
 5719 22cc 4983C401 		add	r12, 1	# source_word,
 5720              	.LVL270:
 5721              	# sieve_extend.c:634:    while (copy_word < destination_stop_word) {
 634:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5722              		.loc 1 634 10 view .LVU1962
 5723 22d0 4C39D3   		cmp	rbx, r10	# destination_stop_word, copy_word
 5724              	# sieve_extend.c:635:         bitarray[copy_word] = bitarray[source_word];
 635:sieve_extend.c ****         source_word++;
 5725              		.loc 1 635 29 view .LVU1963
 5726 22d3 4B894CF5 		mov	QWORD PTR 0[r13+r14*8], rcx	# *_23, _37
 5726      00
 636:sieve_extend.c ****         copy_word++;
 5727              		.loc 1 636 9 is_stmt 1 view .LVU1964
 5728              	.LVL271:
 637:sieve_extend.c ****     }
 5729              		.loc 1 637 9 view .LVU1965
 634:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5730              		.loc 1 634 10 view .LVU1966
 5731 22d8 763E     		jbe	.L539	#,
 635:sieve_extend.c ****         source_word++;
 5732              		.loc 1 635 9 view .LVU1967
 5733              	# sieve_extend.c:635:         bitarray[copy_word] = bitarray[source_word];
 635:sieve_extend.c ****         source_word++;
 5734              		.loc 1 635 39 is_stmt 0 view .LVU1968
 5735 22da 4E8D1CE5 		lea	r11, 0[0+r12*8]	# _134,
 5735      00000000 
 5736              	# sieve_extend.c:637:         copy_word++;
 637:sieve_extend.c ****     }
 5737              		.loc 1 637 18 view .LVU1969
 5738 22e2 4983C602 		add	r14, 2	# copy_word,
GAS LISTING /tmp/ccjg94QQ.s 			page 165


 5739              	# sieve_extend.c:635:         bitarray[copy_word] = bitarray[source_word];
 635:sieve_extend.c ****         source_word++;
 5740              		.loc 1 635 39 view .LVU1970
 5741 22e6 4F8B64E5 		mov	r12, QWORD PTR 0[r13+r12*8]	# _138, *_135
 5741      00
 5742              	# sieve_extend.c:634:    while (copy_word < destination_stop_word) {
 634:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5743              		.loc 1 634 10 view .LVU1971
 5744 22eb 4C39F3   		cmp	rbx, r14	# destination_stop_word, copy_word
 5745              	# sieve_extend.c:635:         bitarray[copy_word] = bitarray[source_word];
 635:sieve_extend.c ****         source_word++;
 5746              		.loc 1 635 29 view .LVU1972
 5747 22ee 4F8964D5 		mov	QWORD PTR 0[r13+r10*8], r12	# *_137, _138
 5747      00
 636:sieve_extend.c ****         copy_word++;
 5748              		.loc 1 636 9 is_stmt 1 view .LVU1973
 637:sieve_extend.c ****     }
 5749              		.loc 1 637 9 view .LVU1974
 5750              	.LVL272:
 634:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5751              		.loc 1 634 10 view .LVU1975
 5752 22f3 7623     		jbe	.L539	#,
 635:sieve_extend.c ****         source_word++;
 5753              		.loc 1 635 9 view .LVU1976
 5754              	# sieve_extend.c:635:         bitarray[copy_word] = bitarray[source_word];
 635:sieve_extend.c ****         source_word++;
 5755              		.loc 1 635 39 is_stmt 0 view .LVU1977
 5756 22f5 4B8B5C1D 		mov	rbx, QWORD PTR 8[r13+r11]	# _109, *_106
 5756      08
 5757              	.LVL273:
 5758              	# sieve_extend.c:635:         bitarray[copy_word] = bitarray[source_word];
 635:sieve_extend.c ****         source_word++;
 5759              		.loc 1 635 29 view .LVU1978
 5760 22fa 4B895CF5 		mov	QWORD PTR 0[r13+r14*8], rbx	# *_108, _109
 5760      00
 636:sieve_extend.c ****         copy_word++;
 5761              		.loc 1 636 9 is_stmt 1 view .LVU1979
 637:sieve_extend.c ****     }
 5762              		.loc 1 637 9 view .LVU1980
 634:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5763              		.loc 1 634 10 view .LVU1981
 5764 22ff C5F877   		vzeroupper
 5765              	.LVL274:
 5766              	.L540:
 5767              	# sieve_extend.c:640: }
 640:sieve_extend.c **** 
 5768              		.loc 1 640 1 is_stmt 0 view .LVU1982
 5769 2302 488D65D8 		lea	rsp, -40[rbp]	#,
 5770 2306 5B       		pop	rbx	#
 5771 2307 415C     		pop	r12	#
 5772 2309 415D     		pop	r13	#
 5773 230b 415E     		pop	r14	#
 5774 230d 415F     		pop	r15	#
 5775 230f 5D       		pop	rbp	#
 5776              		.cfi_remember_state
 5777              		.cfi_def_cfa 7, 8
 5778 2310 C3       		ret	
GAS LISTING /tmp/ccjg94QQ.s 			page 166


 5779              	.LVL275:
 5780              		.p2align 4,,7
 5781 2311 0F1F8000 		.p2align 3
 5781      000000
 5782              	.L539:
 5783              		.cfi_restore_state
 640:sieve_extend.c **** 
 5784              		.loc 1 640 1 view .LVU1983
 5785 2318 C5F877   		vzeroupper
 5786 231b 488D65D8 		lea	rsp, -40[rbp]	#,
 5787 231f 5B       		pop	rbx	#
 5788              	.LVL276:
 640:sieve_extend.c **** 
 5789              		.loc 1 640 1 view .LVU1984
 5790 2320 415C     		pop	r12	#
 5791 2322 415D     		pop	r13	#
 5792              	.LVL277:
 640:sieve_extend.c **** 
 5793              		.loc 1 640 1 view .LVU1985
 5794 2324 415E     		pop	r14	#
 5795 2326 415F     		pop	r15	#
 5796 2328 5D       		pop	rbp	#
 5797              		.cfi_remember_state
 5798              		.cfi_def_cfa 7, 8
 5799 2329 C3       		ret	
 5800              	.LVL278:
 5801 232a 660F1F44 		.p2align 4,,7
 5801      0000
 5802              		.p2align 3
 5803              	.L432:
 5804              		.cfi_restore_state
 5805              	# sieve_extend.c:635:         bitarray[copy_word] = bitarray[source_word];
 635:sieve_extend.c ****         source_word++;
 5806              		.loc 1 635 39 view .LVU1986
 5807 2330 488B7C24 		mov	rdi, QWORD PTR 8[rsp]	# source_word, %sfp
 5807      08
 5808 2335 4F8D7425 		lea	r14, 0[r13+r12]	# ivtmp.330,
 5808      00
 5809 233a 4D8D6CDD 		lea	r13, 0[r13+rbx*8]	# _179,
 5809      00
 5810              	.LVL279:
 635:sieve_extend.c ****         source_word++;
 5811              		.loc 1 635 39 view .LVU1987
 5812 233f 4C89EE   		mov	rsi, r13	# tmp221, _179
 5813 2342 4C29F6   		sub	rsi, r14	# tmp221, ivtmp.330
 5814 2345 4829C7   		sub	rdi, rax	# source_word, ivtmp.344
 5815 2348 4883EE08 		sub	rsi, 8	# tmp222,
 5816 234c 48C1EE03 		shr	rsi, 3	# tmp220,
 5817 2350 4883C601 		add	rsi, 1	# tmp223,
 5818 2354 83E607   		and	esi, 7	# tmp224,
 5819 2357 0F848100 		je	.L437	#,
 5819      0000
 5820 235d 4883FE01 		cmp	rsi, 1	# tmp224,
 5821 2361 7466     		je	.L505	#,
 5822 2363 4883FE02 		cmp	rsi, 2	# tmp224,
 5823 2367 7454     		je	.L506	#,
 5824 2369 4883FE03 		cmp	rsi, 3	# tmp224,
GAS LISTING /tmp/ccjg94QQ.s 			page 167


 5825 236d 7442     		je	.L507	#,
 5826 236f 4883FE04 		cmp	rsi, 4	# tmp224,
 5827 2373 7430     		je	.L508	#,
 5828 2375 4883FE05 		cmp	rsi, 5	# tmp224,
 5829 2379 741E     		je	.L509	#,
 5830 237b 4883FE06 		cmp	rsi, 6	# tmp224,
 5831 237f 740C     		je	.L510	#,
 5832              	.LVL280:
 635:sieve_extend.c ****         source_word++;
 5833              		.loc 1 635 9 is_stmt 1 view .LVU1988
 5834              	# sieve_extend.c:635:         bitarray[copy_word] = bitarray[source_word];
 635:sieve_extend.c ****         source_word++;
 5835              		.loc 1 635 39 is_stmt 0 view .LVU1989
 5836 2381 4D8B3CFE 		mov	r15, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5837 2385 4983C608 		add	r14, 8	# ivtmp.330,
 5838              	# sieve_extend.c:635:         bitarray[copy_word] = bitarray[source_word];
 635:sieve_extend.c ****         source_word++;
 5839              		.loc 1 635 29 view .LVU1990
 5840 2389 4D897EF8 		mov	QWORD PTR -8[r14], r15	# MEM[base: _174, offset: 0B], _70
 636:sieve_extend.c ****         copy_word++;
 5841              		.loc 1 636 9 is_stmt 1 view .LVU1991
 637:sieve_extend.c ****     }
 5842              		.loc 1 637 9 view .LVU1992
 634:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5843              		.loc 1 634 10 view .LVU1993
 5844              	.L510:
 635:sieve_extend.c ****         source_word++;
 5845              		.loc 1 635 9 view .LVU1994
 5846              	# sieve_extend.c:635:         bitarray[copy_word] = bitarray[source_word];
 635:sieve_extend.c ****         source_word++;
 5847              		.loc 1 635 39 is_stmt 0 view .LVU1995
 5848 238d 4D8B04FE 		mov	r8, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5849 2391 4983C608 		add	r14, 8	# ivtmp.330,
 5850              	# sieve_extend.c:635:         bitarray[copy_word] = bitarray[source_word];
 635:sieve_extend.c ****         source_word++;
 5851              		.loc 1 635 29 view .LVU1996
 5852 2395 4D8946F8 		mov	QWORD PTR -8[r14], r8	# MEM[base: _174, offset: 0B], _70
 636:sieve_extend.c ****         copy_word++;
 5853              		.loc 1 636 9 is_stmt 1 view .LVU1997
 637:sieve_extend.c ****     }
 5854              		.loc 1 637 9 view .LVU1998
 634:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5855              		.loc 1 634 10 view .LVU1999
 5856              	.L509:
 635:sieve_extend.c ****         source_word++;
 5857              		.loc 1 635 9 view .LVU2000
 5858              	# sieve_extend.c:635:         bitarray[copy_word] = bitarray[source_word];
 635:sieve_extend.c ****         source_word++;
 5859              		.loc 1 635 39 is_stmt 0 view .LVU2001
 5860 2399 498B14FE 		mov	rdx, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5861 239d 4983C608 		add	r14, 8	# ivtmp.330,
 5862              	# sieve_extend.c:635:         bitarray[copy_word] = bitarray[source_word];
 635:sieve_extend.c ****         source_word++;
 5863              		.loc 1 635 29 view .LVU2002
 5864 23a1 498956F8 		mov	QWORD PTR -8[r14], rdx	# MEM[base: _174, offset: 0B], _70
 636:sieve_extend.c ****         copy_word++;
 5865              		.loc 1 636 9 is_stmt 1 view .LVU2003
GAS LISTING /tmp/ccjg94QQ.s 			page 168


 637:sieve_extend.c ****     }
 5866              		.loc 1 637 9 view .LVU2004
 634:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5867              		.loc 1 634 10 view .LVU2005
 5868              	.L508:
 635:sieve_extend.c ****         source_word++;
 5869              		.loc 1 635 9 view .LVU2006
 5870              	# sieve_extend.c:635:         bitarray[copy_word] = bitarray[source_word];
 635:sieve_extend.c ****         source_word++;
 5871              		.loc 1 635 39 is_stmt 0 view .LVU2007
 5872 23a5 498B04FE 		mov	rax, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5873 23a9 4983C608 		add	r14, 8	# ivtmp.330,
 5874              	# sieve_extend.c:635:         bitarray[copy_word] = bitarray[source_word];
 635:sieve_extend.c ****         source_word++;
 5875              		.loc 1 635 29 view .LVU2008
 5876 23ad 498946F8 		mov	QWORD PTR -8[r14], rax	# MEM[base: _174, offset: 0B], _70
 636:sieve_extend.c ****         copy_word++;
 5877              		.loc 1 636 9 is_stmt 1 view .LVU2009
 637:sieve_extend.c ****     }
 5878              		.loc 1 637 9 view .LVU2010
 634:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5879              		.loc 1 634 10 view .LVU2011
 5880              	.L507:
 635:sieve_extend.c ****         source_word++;
 5881              		.loc 1 635 9 view .LVU2012
 5882              	# sieve_extend.c:635:         bitarray[copy_word] = bitarray[source_word];
 635:sieve_extend.c ****         source_word++;
 5883              		.loc 1 635 39 is_stmt 0 view .LVU2013
 5884 23b1 4D8B0CFE 		mov	r9, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5885 23b5 4983C608 		add	r14, 8	# ivtmp.330,
 5886              	# sieve_extend.c:635:         bitarray[copy_word] = bitarray[source_word];
 635:sieve_extend.c ****         source_word++;
 5887              		.loc 1 635 29 view .LVU2014
 5888 23b9 4D894EF8 		mov	QWORD PTR -8[r14], r9	# MEM[base: _174, offset: 0B], _70
 636:sieve_extend.c ****         copy_word++;
 5889              		.loc 1 636 9 is_stmt 1 view .LVU2015
 637:sieve_extend.c ****     }
 5890              		.loc 1 637 9 view .LVU2016
 634:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5891              		.loc 1 634 10 view .LVU2017
 5892              	.L506:
 635:sieve_extend.c ****         source_word++;
 5893              		.loc 1 635 9 view .LVU2018
 5894              	# sieve_extend.c:635:         bitarray[copy_word] = bitarray[source_word];
 635:sieve_extend.c ****         source_word++;
 5895              		.loc 1 635 39 is_stmt 0 view .LVU2019
 5896 23bd 498B0CFE 		mov	rcx, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5897 23c1 4983C608 		add	r14, 8	# ivtmp.330,
 5898              	# sieve_extend.c:635:         bitarray[copy_word] = bitarray[source_word];
 635:sieve_extend.c ****         source_word++;
 5899              		.loc 1 635 29 view .LVU2020
 5900 23c5 49894EF8 		mov	QWORD PTR -8[r14], rcx	# MEM[base: _174, offset: 0B], _70
 636:sieve_extend.c ****         copy_word++;
 5901              		.loc 1 636 9 is_stmt 1 view .LVU2021
 637:sieve_extend.c ****     }
 5902              		.loc 1 637 9 view .LVU2022
 634:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
GAS LISTING /tmp/ccjg94QQ.s 			page 169


 5903              		.loc 1 634 10 view .LVU2023
 5904              	.L505:
 635:sieve_extend.c ****         source_word++;
 5905              		.loc 1 635 9 view .LVU2024
 5906              	# sieve_extend.c:635:         bitarray[copy_word] = bitarray[source_word];
 635:sieve_extend.c ****         source_word++;
 5907              		.loc 1 635 39 is_stmt 0 view .LVU2025
 5908 23c9 4D8B14FE 		mov	r10, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5909 23cd 4983C608 		add	r14, 8	# ivtmp.330,
 5910              	# sieve_extend.c:635:         bitarray[copy_word] = bitarray[source_word];
 635:sieve_extend.c ****         source_word++;
 5911              		.loc 1 635 29 view .LVU2026
 5912 23d1 4D8956F8 		mov	QWORD PTR -8[r14], r10	# MEM[base: _174, offset: 0B], _70
 636:sieve_extend.c ****         copy_word++;
 5913              		.loc 1 636 9 is_stmt 1 view .LVU2027
 637:sieve_extend.c ****     }
 5914              		.loc 1 637 9 view .LVU2028
 634:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5915              		.loc 1 634 10 view .LVU2029
 5916 23d5 4D39EE   		cmp	r14, r13	# ivtmp.330, _179
 5917 23d8 0F8424FF 		je	.L540	#,
 5917      FFFF
 5918              	.LVL281:
 5919              	.L437:
 635:sieve_extend.c ****         source_word++;
 5920              		.loc 1 635 9 view .LVU2030
 5921              	# sieve_extend.c:635:         bitarray[copy_word] = bitarray[source_word];
 635:sieve_extend.c ****         source_word++;
 5922              		.loc 1 635 39 is_stmt 0 view .LVU2031
 5923 23de 4D8B1CFE 		mov	r11, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5924              	# sieve_extend.c:635:         bitarray[copy_word] = bitarray[source_word];
 635:sieve_extend.c ****         source_word++;
 5925              		.loc 1 635 29 view .LVU2032
 5926 23e2 4D891E   		mov	QWORD PTR [r14], r11	# MEM[base: _174, offset: 0B], _70
 636:sieve_extend.c ****         copy_word++;
 5927              		.loc 1 636 9 is_stmt 1 view .LVU2033
 637:sieve_extend.c ****     }
 5928              		.loc 1 637 9 view .LVU2034
 634:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5929              		.loc 1 634 10 view .LVU2035
 635:sieve_extend.c ****         source_word++;
 5930              		.loc 1 635 9 view .LVU2036
 5931              	# sieve_extend.c:635:         bitarray[copy_word] = bitarray[source_word];
 635:sieve_extend.c ****         source_word++;
 5932              		.loc 1 635 39 is_stmt 0 view .LVU2037
 5933 23e5 4D8B64FE 		mov	r12, QWORD PTR 8[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5933      08
 5934              	# sieve_extend.c:635:         bitarray[copy_word] = bitarray[source_word];
 635:sieve_extend.c ****         source_word++;
 5935              		.loc 1 635 29 view .LVU2038
 5936 23ea 4D896608 		mov	QWORD PTR 8[r14], r12	# MEM[base: _174, offset: 0B], _70
 636:sieve_extend.c ****         copy_word++;
 5937              		.loc 1 636 9 is_stmt 1 view .LVU2039
 637:sieve_extend.c ****     }
 5938              		.loc 1 637 9 view .LVU2040
 634:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5939              		.loc 1 634 10 view .LVU2041
GAS LISTING /tmp/ccjg94QQ.s 			page 170


 635:sieve_extend.c ****         source_word++;
 5940              		.loc 1 635 9 view .LVU2042
 5941              	# sieve_extend.c:635:         bitarray[copy_word] = bitarray[source_word];
 635:sieve_extend.c ****         source_word++;
 5942              		.loc 1 635 39 is_stmt 0 view .LVU2043
 5943 23ee 498B5CFE 		mov	rbx, QWORD PTR 16[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5943      10
 5944              	# sieve_extend.c:635:         bitarray[copy_word] = bitarray[source_word];
 635:sieve_extend.c ****         source_word++;
 5945              		.loc 1 635 29 view .LVU2044
 5946 23f3 49895E10 		mov	QWORD PTR 16[r14], rbx	# MEM[base: _174, offset: 0B], _70
 636:sieve_extend.c ****         copy_word++;
 5947              		.loc 1 636 9 is_stmt 1 view .LVU2045
 637:sieve_extend.c ****     }
 5948              		.loc 1 637 9 view .LVU2046
 634:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5949              		.loc 1 634 10 view .LVU2047
 635:sieve_extend.c ****         source_word++;
 5950              		.loc 1 635 9 view .LVU2048
 5951              	# sieve_extend.c:635:         bitarray[copy_word] = bitarray[source_word];
 635:sieve_extend.c ****         source_word++;
 5952              		.loc 1 635 39 is_stmt 0 view .LVU2049
 5953 23f7 498B74FE 		mov	rsi, QWORD PTR 24[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5953      18
 5954              	# sieve_extend.c:635:         bitarray[copy_word] = bitarray[source_word];
 635:sieve_extend.c ****         source_word++;
 5955              		.loc 1 635 29 view .LVU2050
 5956 23fc 49897618 		mov	QWORD PTR 24[r14], rsi	# MEM[base: _174, offset: 0B], _70
 636:sieve_extend.c ****         copy_word++;
 5957              		.loc 1 636 9 is_stmt 1 view .LVU2051
 637:sieve_extend.c ****     }
 5958              		.loc 1 637 9 view .LVU2052
 634:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5959              		.loc 1 634 10 view .LVU2053
 635:sieve_extend.c ****         source_word++;
 5960              		.loc 1 635 9 view .LVU2054
 5961              	# sieve_extend.c:635:         bitarray[copy_word] = bitarray[source_word];
 635:sieve_extend.c ****         source_word++;
 5962              		.loc 1 635 39 is_stmt 0 view .LVU2055
 5963 2400 4D8B7CFE 		mov	r15, QWORD PTR 32[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5963      20
 5964              	# sieve_extend.c:635:         bitarray[copy_word] = bitarray[source_word];
 635:sieve_extend.c ****         source_word++;
 5965              		.loc 1 635 29 view .LVU2056
 5966 2405 4D897E20 		mov	QWORD PTR 32[r14], r15	# MEM[base: _174, offset: 0B], _70
 636:sieve_extend.c ****         copy_word++;
 5967              		.loc 1 636 9 is_stmt 1 view .LVU2057
 637:sieve_extend.c ****     }
 5968              		.loc 1 637 9 view .LVU2058
 634:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5969              		.loc 1 634 10 view .LVU2059
 635:sieve_extend.c ****         source_word++;
 5970              		.loc 1 635 9 view .LVU2060
 5971              	# sieve_extend.c:635:         bitarray[copy_word] = bitarray[source_word];
 635:sieve_extend.c ****         source_word++;
 5972              		.loc 1 635 39 is_stmt 0 view .LVU2061
 5973 2409 4D8B44FE 		mov	r8, QWORD PTR 40[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
GAS LISTING /tmp/ccjg94QQ.s 			page 171


 5973      28
 5974              	# sieve_extend.c:635:         bitarray[copy_word] = bitarray[source_word];
 635:sieve_extend.c ****         source_word++;
 5975              		.loc 1 635 29 view .LVU2062
 5976 240e 4D894628 		mov	QWORD PTR 40[r14], r8	# MEM[base: _174, offset: 0B], _70
 636:sieve_extend.c ****         copy_word++;
 5977              		.loc 1 636 9 is_stmt 1 view .LVU2063
 637:sieve_extend.c ****     }
 5978              		.loc 1 637 9 view .LVU2064
 634:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5979              		.loc 1 634 10 view .LVU2065
 635:sieve_extend.c ****         source_word++;
 5980              		.loc 1 635 9 view .LVU2066
 5981              	# sieve_extend.c:635:         bitarray[copy_word] = bitarray[source_word];
 635:sieve_extend.c ****         source_word++;
 5982              		.loc 1 635 39 is_stmt 0 view .LVU2067
 5983 2412 498B54FE 		mov	rdx, QWORD PTR 48[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5983      30
 5984              	# sieve_extend.c:635:         bitarray[copy_word] = bitarray[source_word];
 635:sieve_extend.c ****         source_word++;
 5985              		.loc 1 635 29 view .LVU2068
 5986 2417 49895630 		mov	QWORD PTR 48[r14], rdx	# MEM[base: _174, offset: 0B], _70
 636:sieve_extend.c ****         copy_word++;
 5987              		.loc 1 636 9 is_stmt 1 view .LVU2069
 637:sieve_extend.c ****     }
 5988              		.loc 1 637 9 view .LVU2070
 634:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5989              		.loc 1 634 10 view .LVU2071
 635:sieve_extend.c ****         source_word++;
 5990              		.loc 1 635 9 view .LVU2072
 5991              	# sieve_extend.c:635:         bitarray[copy_word] = bitarray[source_word];
 635:sieve_extend.c ****         source_word++;
 5992              		.loc 1 635 39 is_stmt 0 view .LVU2073
 5993 241b 498B44FE 		mov	rax, QWORD PTR 56[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5993      38
 5994 2420 4983C640 		add	r14, 64	# ivtmp.330,
 5995              	# sieve_extend.c:635:         bitarray[copy_word] = bitarray[source_word];
 635:sieve_extend.c ****         source_word++;
 5996              		.loc 1 635 29 view .LVU2074
 5997 2424 498946F8 		mov	QWORD PTR -8[r14], rax	# MEM[base: _174, offset: 0B], _70
 636:sieve_extend.c ****         copy_word++;
 5998              		.loc 1 636 9 is_stmt 1 view .LVU2075
 637:sieve_extend.c ****     }
 5999              		.loc 1 637 9 view .LVU2076
 634:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6000              		.loc 1 634 10 view .LVU2077
 6001 2428 4D39EE   		cmp	r14, r13	# ivtmp.330, _179
 6002 242b 75B1     		jne	.L437	#,
 6003 242d E9D0FEFF 		jmp	.L540	#
 6003      FF
 6004              	.LVL282:
 6005              		.p2align 4,,7
 6006 2432 660F1F44 		.p2align 3
 6006      0000
 6007              	.L439:
 6008              	# sieve_extend.c:624:     counter_t source_word = wordindex(source_start);
 624:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
GAS LISTING /tmp/ccjg94QQ.s 			page 172


 6009              		.loc 1 624 15 is_stmt 0 view .LVU2078
 6010 2438 4C8B6424 		mov	r12, QWORD PTR 8[rsp]	# source_word, %sfp
 6010      08
 6011              	# sieve_extend.c:634:    while (copy_word < destination_stop_word) {
 634:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6012              		.loc 1 634 10 view .LVU2079
 6013 243d 4989C6   		mov	r14, rax	# copy_word, ivtmp.344
 6014 2440 E90AFDFF 		jmp	.L433	#
 6014      FF
 6015              		.cfi_endproc
 6016              	.LFE66:
 6018 2445 66662E0F 		.p2align 4
 6018      1F840000 
 6018      000000
 6020              	extendSieve_shiftleft:
 6021              	.LVL283:
 6022              	.LFB72:
 880:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 6023              		.loc 1 880 142 is_stmt 1 view -0
 6024              		.cfi_startproc
 881:sieve_extend.c **** 
 6025              		.loc 1 881 5 view .LVU2081
 883:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 6026              		.loc 1 883 5 view .LVU2082
 6027              	# sieve_extend.c:880: static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source
 880:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 6028              		.loc 1 880 142 is_stmt 0 view .LVU2083
 6029 2450 55       		push	rbp	#
 6030              		.cfi_def_cfa_offset 16
 6031              		.cfi_offset 6, -16
 6032              	# sieve_extend.c:883:     const counter_t destination_stop_word = wordindex(destination_stop);
 883:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 6033              		.loc 1 883 21 view .LVU2084
 6034 2451 48C1E906 		shr	rcx, 6	# tmp1219,
 6035              	.LVL284:
 6036              	# sieve_extend.c:880: static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source
 880:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 6037              		.loc 1 880 142 view .LVU2085
 6038 2455 4989D2   		mov	r10, rdx	# size, tmp1218
 6039 2458 4889E5   		mov	rbp, rsp	#,
 6040              		.cfi_def_cfa_register 6
 6041 245b 4157     		push	r15	#
 6042 245d 4156     		push	r14	#
 6043              		.cfi_offset 15, -24
 6044              		.cfi_offset 14, -32
 6045              	# sieve_extend.c:883:     const counter_t destination_stop_word = wordindex(destination_stop);
 883:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 6046              		.loc 1 883 21 view .LVU2086
 6047 245f 4989CE   		mov	r14, rcx	# destination_stop_word, tmp1219
 6048              	# sieve_extend.c:880: static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source
 880:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 6049              		.loc 1 880 142 view .LVU2087
 6050 2462 4155     		push	r13	#
 6051 2464 4154     		push	r12	#
 6052 2466 53       		push	rbx	#
 6053              		.cfi_offset 13, -40
 6054              		.cfi_offset 12, -48
GAS LISTING /tmp/ccjg94QQ.s 			page 173


 6055              		.cfi_offset 3, -56
 6056 2467 4889FB   		mov	rbx, rdi	# bitarray, tmp1216
 6057              	# sieve_extend.c:884:     const counter_t copy_start = source_start + size;
 884:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_calc(copy_start);
 6058              		.loc 1 884 21 view .LVU2088
 6059 246a 488D3C16 		lea	rdi, [rsi+rdx]	# copy_start,
 6060              	.LVL285:
 6061              	# sieve_extend.c:880: static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source
 880:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 6062              		.loc 1 880 142 view .LVU2089
 6063 246e 4883E4E0 		and	rsp, -32	#,
 6064              	# sieve_extend.c:885:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 885:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 6065              		.loc 1 885 69 view .LVU2090
 6066 2472 4889F8   		mov	rax, rdi	# _5, copy_start
 6067              	# sieve_extend.c:880: static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source
 880:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 6068              		.loc 1 880 142 view .LVU2091
 6069 2475 488D6424 		lea	rsp, -96[rsp]	#,
 6069      A0
 6070              	# sieve_extend.c:888:     register counter_t copy_word = wordindex(copy_start);
 888:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 6071              		.loc 1 888 24 view .LVU2092
 6072 247a 4989FB   		mov	r11, rdi	# copy_word, copy_start
 6073              	# sieve_extend.c:883:     const counter_t destination_stop_word = wordindex(destination_stop);
 883:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 6074              		.loc 1 883 21 view .LVU2093
 6075 247d 48894C24 		mov	QWORD PTR 80[rsp], rcx	# %sfp, destination_stop_word
 6075      50
 6076              	.LVL286:
 884:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_calc(copy_start);
 6077              		.loc 1 884 5 is_stmt 1 view .LVU2094
 885:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 6078              		.loc 1 885 5 view .LVU2095
 6079              	# sieve_extend.c:885:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 885:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 6080              		.loc 1 885 39 is_stmt 0 view .LVU2096
 6081 2482 4889F1   		mov	rcx, rsi	# _4, source_start
 6082              	.LVL287:
 6083              	# sieve_extend.c:887:     register counter_t source_word = wordindex(source_start);
 887:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 6084              		.loc 1 887 24 view .LVU2097
 6085 2485 48C1EE06 		shr	rsi, 6	# source_start,
 6086              	.LVL288:
 6087              	# sieve_extend.c:885:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 885:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 6088              		.loc 1 885 39 view .LVU2098
 6089 2489 83E13F   		and	ecx, 63	# _4,
 6090              	.LVL289:
 6091              	# sieve_extend.c:887:     register counter_t source_word = wordindex(source_start);
 887:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 6092              		.loc 1 887 24 view .LVU2099
 6093 248c 4989F0   		mov	r8, rsi	# source_word, source_start
 6094              	# sieve_extend.c:885:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 885:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 6095              		.loc 1 885 69 view .LVU2100
 6096 248f 83E03F   		and	eax, 63	# _5,
GAS LISTING /tmp/ccjg94QQ.s 			page 174


 6097              	.LVL290:
 886:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 6098              		.loc 1 886 5 is_stmt 1 view .LVU2101
 887:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 6099              		.loc 1 887 5 view .LVU2102
 888:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 6100              		.loc 1 888 5 view .LVU2103
 6101              	# sieve_extend.c:888:     register counter_t copy_word = wordindex(copy_start);
 888:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 6102              		.loc 1 888 24 is_stmt 0 view .LVU2104
 6103 2492 49C1EB06 		shr	r11, 6	# copy_word,
 6104              	.LVL291:
 889:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 6105              		.loc 1 889 5 is_stmt 1 view .LVU2105
 6106              	# sieve_extend.c:890:                              | (bitarray[source_word+1] << shift_flipped))
 890:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 6107              		.loc 1 890 41 is_stmt 0 view .LVU2106
 6108 2496 4D8D4801 		lea	r9, 1[r8]	# _183,
 6109              	# sieve_extend.c:885:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 885:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 6110              		.loc 1 885 31 view .LVU2107
 6111 249a 4989CD   		mov	r13, rcx	# shift, _4
 6112              	# sieve_extend.c:889:     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 889:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 6113              		.loc 1 889 25 view .LVU2108
 6114 249d 4A8D34DD 		lea	rsi, 0[0+r11*8]	# _6,
 6114      00000000 
 6115              	# sieve_extend.c:890:                              | (bitarray[source_word+1] << shift_flipped))
 890:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 6116              		.loc 1 890 41 view .LVU2109
 6117 24a5 4C894C24 		mov	QWORD PTR 88[rsp], r9	# %sfp, _183
 6117      58
 6118              	# sieve_extend.c:885:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 885:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 6119              		.loc 1 885 31 view .LVU2110
 6120 24aa 4929C5   		sub	r13, rax	# shift, _5
 6121              	.LVL292:
 6122              	# sieve_extend.c:896:     const counter_t aligned_copy_word = min(source_word + size, destination_s
 896:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 6123              		.loc 1 896 41 view .LVU2111
 6124 24ad 4D01D1   		add	r9, r10	# tmp555, size
 6125              	# sieve_extend.c:886:     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 886:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 6126              		.loc 1 886 31 view .LVU2112
 6127 24b0 4829C8   		sub	rax, rcx	# tmp542, _4
 6128              	.LVL293:
 6129              	# sieve_extend.c:880: static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source
 880:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 6130              		.loc 1 880 142 view .LVU2113
 6131 24b3 48895424 		mov	QWORD PTR 24[rsp], rdx	# %sfp, size
 6131      18
 6132              	# sieve_extend.c:886:     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 886:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 6133              		.loc 1 886 31 view .LVU2114
 6134 24b8 4C8D7840 		lea	r15, 64[rax]	# shift_flipped,
 6135              	.LVL294:
 6136              	# sieve_extend.c:889:     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
GAS LISTING /tmp/ccjg94QQ.s 			page 175


 889:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 6137              		.loc 1 889 52 view .LVU2115
 6138 24bc 4A8B0CC3 		mov	rcx, QWORD PTR [rbx+r8*8]	# *_10, *_10
 6139              	# sieve_extend.c:889:     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 889:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 6140              		.loc 1 889 38 view .LVU2116
 6141 24c0 4A8D14C5 		lea	rdx, 0[0+r8*8]	# _9,
 6141      00000000 
 6142              	.LVL295:
 6143              	# sieve_extend.c:891:                              & ~chopmask(copy_start); // because this is the 
 891:sieve_extend.c **** 
 6144              		.loc 1 891 33 view .LVU2117
 6145 24c8 F7D7     		not	edi	# tmp549
 6146              	.LVL296:
 6147              	# sieve_extend.c:890:                              | (bitarray[source_word+1] << shift_flipped))
 890:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 6148              		.loc 1 890 57 view .LVU2118
 6149 24ca C4E281F7 		shlx	rax, QWORD PTR 8[rbx+rdx], r15	# tmp544, *_16, shift_flipped
 6149      441308
 6150              	# sieve_extend.c:889:     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 889:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 6151              		.loc 1 889 52 view .LVU2119
 6152 24d1 C46293F7 		shrx	r8, rcx, r13	# tmp546, *_10, shift
 6152      C1
 6153              	# sieve_extend.c:890:                              | (bitarray[source_word+1] << shift_flipped))
 890:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 6154              		.loc 1 890 30 view .LVU2120
 6155 24d6 4909C0   		or	r8, rax	# tmp548, tmp544
 6156              	# sieve_extend.c:891:                              & ~chopmask(copy_start); // because this is the 
 891:sieve_extend.c **** 
 6157              		.loc 1 891 33 view .LVU2121
 6158 24d9 48C7C0FF 		mov	rax, -1	# tmp552,
 6158      FFFFFF
 6159 24e0 C4E2C3F7 		shrx	rdi, rax, rdi	# tmp551, tmp552, tmp549
 6159      F8
 6160              	# sieve_extend.c:891:                              & ~chopmask(copy_start); // because this is the 
 891:sieve_extend.c **** 
 6161              		.loc 1 891 30 view .LVU2122
 6162 24e5 C4C2C0F2 		andn	rcx, rdi, r8	# tmp554, tmp551, tmp548
 6162      C8
 6163              	# sieve_extend.c:889:     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 889:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 6164              		.loc 1 889 25 view .LVU2123
 6165 24ea 48090C33 		or	QWORD PTR [rbx+rsi], rcx	# *_7, tmp554
 893:sieve_extend.c ****     source_word++;
 6166              		.loc 1 893 5 is_stmt 1 view .LVU2124
 6167              	# sieve_extend.c:896:     const counter_t aligned_copy_word = min(source_word + size, destination_s
 896:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 6168              		.loc 1 896 21 is_stmt 0 view .LVU2125
 6169 24ee 4D39F1   		cmp	r9, r14	# tmp555, destination_stop_word
 6170              	# sieve_extend.c:893:     copy_word++;
 893:sieve_extend.c ****     source_word++;
 6171              		.loc 1 893 14 view .LVU2126
 6172 24f1 498D4301 		lea	rax, 1[r11]	# ivtmp.428,
 6173              	.LVL297:
 894:sieve_extend.c **** 
 6174              		.loc 1 894 5 is_stmt 1 view .LVU2127
GAS LISTING /tmp/ccjg94QQ.s 			page 176


 896:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 6175              		.loc 1 896 5 view .LVU2128
 6176              	# sieve_extend.c:890:                              | (bitarray[source_word+1] << shift_flipped))
 890:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 6177              		.loc 1 890 57 is_stmt 0 view .LVU2129
 6178 24f5 44897C24 		mov	DWORD PTR 72[rsp], r15d	# %sfp, shift_flipped
 6178      48
 6179              	# sieve_extend.c:889:     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 889:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 6180              		.loc 1 889 52 view .LVU2130
 6181 24fa 4589EC   		mov	r12d, r13d	# _12, shift
 6182              	# sieve_extend.c:896:     const counter_t aligned_copy_word = min(source_word + size, destination_s
 896:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 6183              		.loc 1 896 21 view .LVU2131
 6184 24fd 4D0F47CE 		cmova	r9, r14	# tmp555,, tmp555, destination_stop_word
 6185              	.LBB357:
 6186              	.LBB358:
 6187              	# sieve_extend.c:737:     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_co
 737:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 6188              		.loc 1 737 91 view .LVU2132
 6189 2501 41BE0200 		mov	r14d, 2	# tmp556,
 6189      0000
 6190              	.LVL298:
 737:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 6191              		.loc 1 737 91 view .LVU2133
 6192              	.LBE358:
 6193              	.LBE357:
 6194              	# sieve_extend.c:896:     const counter_t aligned_copy_word = min(source_word + size, destination_s
 896:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 6195              		.loc 1 896 21 view .LVU2134
 6196 2507 4C894C24 		mov	QWORD PTR 64[rsp], r9	# %sfp, aligned_copy_word
 6196      40
 6197              	.LVL299:
 897:sieve_extend.c ****     source_word += distance;
 6198              		.loc 1 897 5 is_stmt 1 view .LVU2135
 6199              	.LBB383:
 6200              	.LBI357:
 736:sieve_extend.c ****     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_copy_word - 2) : 0; // s
 6201              		.loc 1 736 25 view .LVU2136
 6202              	.LBB380:
 737:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 6203              		.loc 1 737 5 view .LVU2137
 6204              	# sieve_extend.c:737:     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_co
 737:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 6205              		.loc 1 737 91 is_stmt 0 view .LVU2138
 6206 250c 4983F902 		cmp	r9, 2	# aligned_copy_word,
 6207 2510 4D0F43F1 		cmovnb	r14, r9	# aligned_copy_word,, _86
 6208              	# sieve_extend.c:737:     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_co
 737:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 6209              		.loc 1 737 21 view .LVU2139
 6210 2514 4D8D46FE 		lea	r8, -2[r14]	# fast_loop_stop_word,
 6211 2518 4C894424 		mov	QWORD PTR 48[rsp], r8	# %sfp, fast_loop_stop_word
 6211      30
 6212              	.LVL300:
 738:sieve_extend.c ****     counter_t distance = 0;
 6213              		.loc 1 738 5 is_stmt 1 view .LVU2140
 739:sieve_extend.c ****     while (copy_word < fast_loop_stop_word) {
GAS LISTING /tmp/ccjg94QQ.s 			page 177


 6214              		.loc 1 739 5 view .LVU2141
 740:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6215              		.loc 1 740 5 view .LVU2142
 740:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6216              		.loc 1 740 11 view .LVU2143
 6217 251d 4C39C0   		cmp	rax, r8	# ivtmp.428, fast_loop_stop_word
 6218 2520 0F83A404 		jnb	.L543	#,
 6218      0000
 6219 2526 4C8D5240 		lea	r10, 64[rdx]	# tmp559,
 6220              	.LVL301:
 740:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6221              		.loc 1 740 11 is_stmt 0 view .LVU2144
 6222 252a 4D29DE   		sub	r14, r11	# tmp557, copy_word
 6223 252d 4C8D4610 		lea	r8, 16[rsi]	# tmp560,
 6224              	.LVL302:
 740:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6225              		.loc 1 740 11 view .LVU2145
 6226 2531 498D7EFC 		lea	rdi, -4[r14]	# _332,
 6227 2535 488D4A08 		lea	rcx, 8[rdx]	# tmp796,
 6228 2539 4D39C2   		cmp	r10, r8	# tmp559, tmp560
 6229 253c 4C8D7648 		lea	r14, 72[rsi]	# tmp563,
 6230 2540 410F9EC1 		setle	r9b	#, tmp562
 6231              	.LVL303:
 740:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6232              		.loc 1 740 11 view .LVU2146
 6233 2544 48897C24 		mov	QWORD PTR 56[rsp], rdi	# %sfp, _332
 6233      38
 6234 2549 4939CE   		cmp	r14, rcx	# tmp563, tmp796
 6235 254c 400F9EC7 		setle	dil	#, tmp566
 6236 2550 4109F9   		or	r9d, edi	# tmp567, tmp566
 6237 2553 488D7A50 		lea	rdi, 80[rdx]	# tmp568,
 6238 2557 48897C24 		mov	QWORD PTR 40[rsp], rdi	# %sfp, tmp568
 6238      28
 6239 255c 4C39C7   		cmp	rdi, r8	# tmp568, tmp560
 6240 255f 0F9E4424 		setle	BYTE PTR 39[rsp]	#, %sfp
 6240      27
 6241 2564 4883C210 		add	rdx, 16	# tmp573,
 6242 2568 4939D6   		cmp	r14, rdx	# tmp563, tmp573
 6243 256b 400F9EC7 		setle	dil	#, tmp575
 6244 256f 400A7C24 		or	dil, BYTE PTR 39[rsp]	# tmp576, %sfp
 6244      27
 6245 2574 4421CF   		and	edi, r9d	# tmp577, tmp567
 6246 2577 48837C24 		cmp	QWORD PTR 56[rsp], 11	# %sfp,
 6246      380B
 6247 257d 410F97C1 		seta	r9b	#, tmp579
 6248 2581 4421CF   		and	edi, r9d	# tmp580, tmp579
 6249 2584 4C8D4E08 		lea	r9, 8[rsi]	# tmp582,
 6250 2588 4D39CA   		cmp	r10, r9	# tmp559, tmp582
 6251 258b 410F9EC2 		setle	r10b	#, tmp584
 6252 258f 4883C640 		add	rsi, 64	# tmp585,
 6253 2593 4839CE   		cmp	rsi, rcx	# tmp585, tmp796
 6254 2596 0F9E4424 		setle	BYTE PTR 39[rsp]	#, %sfp
 6254      27
 6255 259b 440A5424 		or	r10b, BYTE PTR 39[rsp]	# tmp589, %sfp
 6255      27
 6256 25a0 4421D7   		and	edi, r10d	# tmp590, tmp589
 6257 25a3 4C394C24 		cmp	QWORD PTR 40[rsp], r9	# %sfp, tmp582
GAS LISTING /tmp/ccjg94QQ.s 			page 178


 6257      28
 6258 25a8 410F9EC2 		setle	r10b	#, tmp594
 6259 25ac 4839D6   		cmp	rsi, rdx	# tmp585, tmp573
 6260 25af 0F9E4424 		setle	BYTE PTR 40[rsp]	#, %sfp
 6260      28
 6261 25b4 440A5424 		or	r10b, BYTE PTR 40[rsp]	# tmp599, %sfp
 6261      28
 6262 25b9 4484D7   		test	dil, r10b	# tmp590, tmp599
 6263 25bc 0F845E0D 		je	.L544	#,
 6263      0000
 6264 25c2 4D39CE   		cmp	r14, r9	# tmp563, tmp582
 6265 25c5 410F9EC6 		setle	r14b	#, tmp604
 6266 25c9 4C39C6   		cmp	rsi, r8	# tmp585, tmp560
 6267 25cc 400F9EC6 		setle	sil	#, tmp608
 6268 25d0 4108F6   		or	r14b, sil	# tmp604, tmp608
 6269 25d3 0F84470D 		je	.L544	#,
 6269      0000
 6270 25d9 4801D9   		add	rcx, rbx	# vectp.393, bitarray
 6271 25dc 4801DA   		add	rdx, rbx	# vectp.397, bitarray
 6272              	.LBB359:
 6273              	# sieve_extend.c:742:         bitword_t source1 = bitarray[source_word+1];
 742:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6274              		.loc 1 742 19 view .LVU2147
 6275 25df C5FE6F0A 		vmovdqu	ymm1, YMMWORD PTR [rdx]	# MEM[base: vectp.397_499, index: ivtmp.468_748, offset: 0B], MEM[
 6276 25e3 C4C1796E 		vmovd	xmm3, r13d	# _12, _12
 6276      DD
 6277 25e8 C5FE6F42 		vmovdqu	ymm0, YMMWORD PTR 32[rdx]	# MEM[base: vectp.397_499, index: ivtmp.468_748, offset: 32B], M
 6277      20
 6278 25ed C4C1796E 		vmovd	xmm4, r15d	# _18,
 6278      E7
 6279              	# sieve_extend.c:741:         bitword_t source0 = bitarray[source_word  ];
 741:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6280              		.loc 1 741 19 view .LVU2148
 6281 25f2 C5FE6F39 		vmovdqu	ymm7, YMMWORD PTR [rcx]	# tmp1315, MEM[base: vectp.393_490, index: ivtmp.468_748, offset: 
 6282              	# sieve_extend.c:742:         bitword_t source1 = bitarray[source_word+1];
 742:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6283              		.loc 1 742 19 view .LVU2149
 6284 25f6 C5F56CE8 		vpunpcklqdq	ymm5, ymm1, ymm0	# tmp616, MEM[base: vectp.397_499, index: ivtmp.468_748, offset: 0B],
 6285 25fa C5756DF0 		vpunpckhqdq	ymm14, ymm1, ymm0	# tmp634, MEM[base: vectp.397_499, index: ivtmp.468_748, offset: 0B]
 6286              	# sieve_extend.c:741:         bitword_t source0 = bitarray[source_word  ];
 741:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6287              		.loc 1 741 19 view .LVU2150
 6288 25fe C5C56C51 		vpunpcklqdq	ymm2, ymm7, YMMWORD PTR 32[rcx]	# tmp620, tmp1315, MEM[base: vectp.393_490, index: ivt
 6288      20
 6289 2603 4C8B7424 		mov	r14, QWORD PTR 56[rsp]	# _332, %sfp
 6289      38
 6290              	# sieve_extend.c:742:         bitword_t source1 = bitarray[source_word+1];
 742:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6291              		.loc 1 742 19 view .LVU2151
 6292 2608 C463FD00 		vpermq	ymm8, ymm5, 216	# vect_perm_even_507, tmp616,
 6292      C5D8
 6293              	# sieve_extend.c:741:         bitword_t source0 = bitarray[source_word  ];
 741:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6294              		.loc 1 741 19 view .LVU2152
 6295 260e C4E3FD00 		vpermq	ymm6, ymm2, 216	# tmp619, tmp620,
 6295      F2D8
 6296              	# sieve_extend.c:742:         bitword_t source1 = bitarray[source_word+1];
GAS LISTING /tmp/ccjg94QQ.s 			page 179


 742:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6297              		.loc 1 742 19 view .LVU2153
 6298 2614 C443FD00 		vpermq	ymm15, ymm14, 216	# tmp633, tmp634,
 6298      FED8
 6299              	# sieve_extend.c:743:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6300              		.loc 1 743 63 view .LVU2154
 6301 261a C53DF3D4 		vpsllq	ymm10, ymm8, xmm4	# vect__100.401, vect_perm_even_507, _18
 6302              	# sieve_extend.c:743:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6303              		.loc 1 743 42 view .LVU2155
 6304 261e C54DD3CB 		vpsrlq	ymm9, ymm6, xmm3	# vect__98.400, tmp619, _12
 6305              	# sieve_extend.c:745:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 745:sieve_extend.c ****         copy_word += 2;
 6306              		.loc 1 745 42 view .LVU2156
 6307 2622 C5BDD3C3 		vpsrlq	ymm0, ymm8, xmm3	# vect__109.403, vect_perm_even_507, _12
 6308              	# sieve_extend.c:745:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 745:sieve_extend.c ****         copy_word += 2;
 6309              		.loc 1 745 63 view .LVU2157
 6310 2626 C585F3CC 		vpsllq	ymm1, ymm15, xmm4	# vect__110.404, tmp633, _18
 6311 262a 49C1EE03 		shr	r14, 3	# _332,
 6312              	# sieve_extend.c:743:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6313              		.loc 1 743 52 view .LVU2158
 6314 262e C44135EB 		vpor	ymm11, ymm9, ymm10	# vect__104.402, vect__98.400, vect__100.401
 6314      DA
 6315              	# sieve_extend.c:745:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 745:sieve_extend.c ****         copy_word += 2;
 6316              		.loc 1 745 52 view .LVU2159
 6317 2633 C5F5EBE8 		vpor	ymm5, ymm1, ymm0	# vect__114.405, vect__110.404, vect__109.403
 6318 2637 4D8D56FF 		lea	r10, -1[r14]	# tmp828,
 6319              	# sieve_extend.c:743:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6320              		.loc 1 743 31 view .LVU2160
 6321 263b C4437D39 		vextracti128	xmm13, ymm11, 0x1	# tmp630, vect__104.402
 6321      DD01
 6322 2641 4183E201 		and	r10d, 1	# tmp830,
 6323              	.LVL304:
 741:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6324              		.loc 1 741 9 is_stmt 1 view .LVU2161
 742:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6325              		.loc 1 742 9 view .LVU2162
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6326              		.loc 1 743 9 view .LVU2163
 6327              	# sieve_extend.c:745:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 745:sieve_extend.c ****         copy_word += 2;
 6328              		.loc 1 745 31 is_stmt 0 view .LVU2164
 6329 2645 C4E37D39 		vextracti128	xmm7, ymm5, 0x1	# tmp644, vect__114.405
 6329      EF01
 6330 264b 4983FE01 		cmp	r14, 1	# bnd.386,
 6331              	# sieve_extend.c:743:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6332              		.loc 1 743 31 view .LVU2165
 6333 264f C42179D6 		vmovq	QWORD PTR [rbx+r9], xmm11	# MEM[base: _513, index: ivtmp.468_748, offset: 0B], tmp626
 6333      1C0B
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6334              		.loc 1 743 31 view .LVU2166
GAS LISTING /tmp/ccjg94QQ.s 			page 180


 6335 2655 4E8D1C0B 		lea	r11, [rbx+r9]	# _513,
 6336              	.LVL305:
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6337              		.loc 1 743 31 view .LVU2167
 6338 2659 C423F916 		vpextrq	QWORD PTR 16[rbx+r9], xmm11, 1	# MEM[base: _513, index: ivtmp.468_748, offset: 16B], tmp62
 6338      5C0B1001 
 6339 2661 4A8D3C03 		lea	rdi, [rbx+r8]	# _533,
 6340 2665 C42179D6 		vmovq	QWORD PTR 32[rbx+r9], xmm13	# MEM[base: _513, index: ivtmp.468_748, offset: 32B], tmp630
 6340      6C0B20
 6341 266c C423F916 		vpextrq	QWORD PTR 48[rbx+r9], xmm13, 1	# MEM[base: _513, index: ivtmp.468_748, offset: 48B], tmp63
 6341      6C0B3001 
 744:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6342              		.loc 1 744 9 is_stmt 1 view .LVU2168
 6343              	.LVL306:
 745:sieve_extend.c ****         copy_word += 2;
 6344              		.loc 1 745 9 view .LVU2169
 6345 2674 41B90100 		mov	r9d, 1	# ivtmp.466,
 6345      0000
 6346              	# sieve_extend.c:745:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 745:sieve_extend.c ****         copy_word += 2;
 6347              		.loc 1 745 31 is_stmt 0 view .LVU2170
 6348 267a C4A179D6 		vmovq	QWORD PTR [rbx+r8], xmm5	# MEM[base: _533, index: ivtmp.468_748, offset: 0B], tmp640
 6348      2C03
 745:sieve_extend.c ****         copy_word += 2;
 6349              		.loc 1 745 31 view .LVU2171
 6350 2680 C4A3F916 		vpextrq	QWORD PTR 16[rbx+r8], xmm5, 1	# MEM[base: _533, index: ivtmp.468_748, offset: 16B], tmp640
 6350      6C031001 
 6351 2688 C4A179D6 		vmovq	QWORD PTR 32[rbx+r8], xmm7	# MEM[base: _533, index: ivtmp.468_748, offset: 32B], tmp644
 6351      7C0320
 6352 268f C4A3F916 		vpextrq	QWORD PTR 48[rbx+r8], xmm7, 1	# MEM[base: _533, index: ivtmp.468_748, offset: 48B], tmp644
 6352      7C033001 
 746:sieve_extend.c ****         source_word += 2;
 6353              		.loc 1 746 9 is_stmt 1 view .LVU2172
 747:sieve_extend.c ****         distance += 2;
 6354              		.loc 1 747 9 view .LVU2173
 748:sieve_extend.c ****     }
 6355              		.loc 1 748 9 view .LVU2174
 748:sieve_extend.c ****     }
 6356              		.loc 1 748 9 is_stmt 0 view .LVU2175
 6357              	.LBE359:
 740:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6358              		.loc 1 740 11 is_stmt 1 view .LVU2176
 6359 2697 41B84000 		mov	r8d, 64	# ivtmp.468,
 6359      0000
 6360 269d 0F86E901 		jbe	.L774	#,
 6360      0000
 6361 26a3 4D85D2   		test	r10, r10	# tmp830
 6362 26a6 0F84A400 		je	.L545	#,
 6362      0000
 6363              	.LBB360:
 741:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6364              		.loc 1 741 9 view .LVU2177
 742:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6365              		.loc 1 742 9 view .LVU2178
 6366              	# sieve_extend.c:742:         bitword_t source1 = bitarray[source_word+1];
 742:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6367              		.loc 1 742 19 is_stmt 0 view .LVU2179
GAS LISTING /tmp/ccjg94QQ.s 			page 181


 6368 26ac C57E6F4A 		vmovdqu	ymm9, YMMWORD PTR 64[rdx]	# MEM[base: vectp.397_499, index: ivtmp.468_748, offset: 0B], ME
 6368      40
 6369 26b1 4983FE02 		cmp	r14, 2	# bnd.386,
 6370 26b5 C57E6F52 		vmovdqu	ymm10, YMMWORD PTR 96[rdx]	# MEM[base: vectp.397_499, index: ivtmp.468_748, offset: 32B], 
 6370      60
 6371 26ba 41B90200 		mov	r9d, 2	# ivtmp.466,
 6371      0000
 6372              	# sieve_extend.c:741:         bitword_t source0 = bitarray[source_word  ];
 741:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6373              		.loc 1 741 19 view .LVU2180
 6374 26c0 C5FE6F71 		vmovdqu	ymm6, YMMWORD PTR 64[rcx]	# tmp1432, MEM[base: vectp.393_490, index: ivtmp.468_748, offset
 6374      40
 6375              	# sieve_extend.c:742:         bitword_t source1 = bitarray[source_word+1];
 742:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6376              		.loc 1 742 19 view .LVU2181
 6377 26c5 C4C1356C 		vpunpcklqdq	ymm2, ymm9, ymm10	# tmp1190, MEM[base: vectp.397_499, index: ivtmp.468_748, offset: 0B
 6377      D2
 6378 26ca C441356D 		vpunpckhqdq	ymm8, ymm9, ymm10	# tmp1205, MEM[base: vectp.397_499, index: ivtmp.468_748, offset: 0B
 6378      C2
 6379              	# sieve_extend.c:741:         bitword_t source0 = bitarray[source_word  ];
 741:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6380              		.loc 1 741 19 view .LVU2182
 6381 26cf C54D6C61 		vpunpcklqdq	ymm12, ymm6, YMMWORD PTR 96[rcx]	# tmp1194, tmp1432, MEM[base: vectp.393_490, index: i
 6381      60
 6382              	# sieve_extend.c:742:         bitword_t source1 = bitarray[source_word+1];
 742:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6383              		.loc 1 742 19 view .LVU2183
 6384 26d4 C463FD00 		vpermq	ymm11, ymm2, 216	# vect_perm_even_507, tmp1190,
 6384      DAD8
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6385              		.loc 1 743 9 is_stmt 1 view .LVU2184
 6386              	# sieve_extend.c:741:         bitword_t source0 = bitarray[source_word  ];
 741:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6387              		.loc 1 741 19 is_stmt 0 view .LVU2185
 6388 26da C443FD00 		vpermq	ymm13, ymm12, 216	# tmp1195, tmp1194,
 6388      ECD8
 6389              	# sieve_extend.c:742:         bitword_t source1 = bitarray[source_word+1];
 742:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6390              		.loc 1 742 19 view .LVU2186
 6391 26e0 C4C3FD00 		vpermq	ymm7, ymm8, 216	# tmp1206, tmp1205,
 6391      F8D8
 6392 26e6 41B88000 		mov	r8d, 128	# ivtmp.468,
 6392      0000
 6393              	# sieve_extend.c:743:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6394              		.loc 1 743 42 view .LVU2187
 6395 26ec C515D3F3 		vpsrlq	ymm14, ymm13, xmm3	# vect__98.400, tmp1195, _12
 6396              	# sieve_extend.c:743:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6397              		.loc 1 743 63 view .LVU2188
 6398 26f0 C525F3FC 		vpsllq	ymm15, ymm11, xmm4	# vect__100.401, vect_perm_even_507, _18
 6399              	# sieve_extend.c:745:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 745:sieve_extend.c ****         copy_word += 2;
 6400              		.loc 1 745 42 view .LVU2189
 6401 26f4 C525D3D3 		vpsrlq	ymm10, ymm11, xmm3	# vect__109.403, vect_perm_even_507, _12
 6402              	# sieve_extend.c:745:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 745:sieve_extend.c ****         copy_word += 2;
GAS LISTING /tmp/ccjg94QQ.s 			page 182


 6403              		.loc 1 745 63 view .LVU2190
 6404 26f8 C545F3CC 		vpsllq	ymm9, ymm7, xmm4	# vect__110.404, tmp1206, _18
 6405              	# sieve_extend.c:743:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6406              		.loc 1 743 52 view .LVU2191
 6407 26fc C4C10DEB 		vpor	ymm1, ymm14, ymm15	# vect__104.402, vect__98.400, vect__100.401
 6407      CF
 6408              	# sieve_extend.c:745:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 745:sieve_extend.c ****         copy_word += 2;
 6409              		.loc 1 745 52 view .LVU2192
 6410 2701 C4C135EB 		vpor	ymm2, ymm9, ymm10	# vect__114.405, vect__110.404, vect__109.403
 6410      D2
 6411              	# sieve_extend.c:743:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6412              		.loc 1 743 31 view .LVU2193
 6413 2706 C4E37D39 		vextracti128	xmm5, ymm1, 0x1	# tmp1202, vect__104.402
 6413      CD01
 6414              	# sieve_extend.c:745:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 745:sieve_extend.c ****         copy_word += 2;
 6415              		.loc 1 745 31 view .LVU2194
 6416 270c C4E37D39 		vextracti128	xmm6, ymm2, 0x1	# tmp1213, vect__114.405
 6416      D601
 6417              	# sieve_extend.c:743:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6418              		.loc 1 743 31 view .LVU2195
 6419 2712 C4C179D6 		vmovq	QWORD PTR 64[r11], xmm1	# MEM[base: _513, index: ivtmp.468_748, offset: 0B], tmp1199
 6419      4B40
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6420              		.loc 1 743 31 view .LVU2196
 6421 2718 C4C3F916 		vpextrq	QWORD PTR 80[r11], xmm1, 1	# MEM[base: _513, index: ivtmp.468_748, offset: 16B], tmp1199
 6421      4B5001
 6422 271f C4C179D6 		vmovq	QWORD PTR 96[r11], xmm5	# MEM[base: _513, index: ivtmp.468_748, offset: 32B], tmp1202
 6422      6B60
 6423 2725 C4C3F916 		vpextrq	QWORD PTR 112[r11], xmm5, 1	# MEM[base: _513, index: ivtmp.468_748, offset: 48B], tmp1202
 6423      6B7001
 744:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6424              		.loc 1 744 9 is_stmt 1 view .LVU2197
 745:sieve_extend.c ****         copy_word += 2;
 6425              		.loc 1 745 9 view .LVU2198
 6426              	# sieve_extend.c:745:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 745:sieve_extend.c ****         copy_word += 2;
 6427              		.loc 1 745 31 is_stmt 0 view .LVU2199
 6428 272c C5F9D657 		vmovq	QWORD PTR 64[rdi], xmm2	# MEM[base: _533, index: ivtmp.468_748, offset: 0B], tmp1210
 6428      40
 745:sieve_extend.c ****         copy_word += 2;
 6429              		.loc 1 745 31 view .LVU2200
 6430 2731 C4E3F916 		vpextrq	QWORD PTR 80[rdi], xmm2, 1	# MEM[base: _533, index: ivtmp.468_748, offset: 16B], tmp1210
 6430      575001
 6431 2738 C5F9D677 		vmovq	QWORD PTR 96[rdi], xmm6	# MEM[base: _533, index: ivtmp.468_748, offset: 32B], tmp1213
 6431      60
 6432 273d C4E3F916 		vpextrq	QWORD PTR 112[rdi], xmm6, 1	# MEM[base: _533, index: ivtmp.468_748, offset: 48B], tmp1213
 6432      777001
 746:sieve_extend.c ****         source_word += 2;
 6433              		.loc 1 746 9 is_stmt 1 view .LVU2201
 747:sieve_extend.c ****         distance += 2;
 6434              		.loc 1 747 9 view .LVU2202
 748:sieve_extend.c ****     }
GAS LISTING /tmp/ccjg94QQ.s 			page 183


 6435              		.loc 1 748 9 view .LVU2203
 748:sieve_extend.c ****     }
 6436              		.loc 1 748 9 is_stmt 0 view .LVU2204
 6437              	.LBE360:
 740:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6438              		.loc 1 740 11 is_stmt 1 view .LVU2205
 6439 2744 0F864201 		jbe	.L774	#,
 6439      0000
 6440 274a 660F1F44 		.p2align 4
 6440      0000
 6441              		.p2align 3
 6442              	.L545:
 6443              	.LBB361:
 741:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6444              		.loc 1 741 9 view .LVU2206
 742:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6445              		.loc 1 742 9 view .LVU2207
 6446              	# sieve_extend.c:742:         bitword_t source1 = bitarray[source_word+1];
 742:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6447              		.loc 1 742 19 is_stmt 0 view .LVU2208
 6448 2750 C4217E6F 		vmovdqu	ymm12, YMMWORD PTR [rdx+r8]	# MEM[base: vectp.397_499, index: ivtmp.468_748, offset: 0B], 
 6448      2402
 6449 2756 4983C102 		add	r9, 2	# ivtmp.466,
 6450 275a C4217E6F 		vmovdqu	ymm13, YMMWORD PTR 32[rdx+r8]	# MEM[base: vectp.397_499, index: ivtmp.468_748, offset: 32B
 6450      6C0220
 6451              	# sieve_extend.c:741:         bitword_t source0 = bitarray[source_word  ];
 741:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6452              		.loc 1 741 19 view .LVU2209
 6453 2761 C4A17E6F 		vmovdqu	ymm1, YMMWORD PTR [rcx+r8]	# tmp1316, MEM[base: vectp.393_490, index: ivtmp.468_748, offse
 6453      0C01
 6454              	# sieve_extend.c:742:         bitword_t source1 = bitarray[source_word+1];
 742:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6455              		.loc 1 742 19 view .LVU2210
 6456 2767 C4411D6C 		vpunpcklqdq	ymm14, ymm12, ymm13	# tmp837, MEM[base: vectp.397_499, index: ivtmp.468_748, offset: 0
 6456      F5
 6457 276c C4411D6D 		vpunpckhqdq	ymm11, ymm12, ymm13	# tmp852, MEM[base: vectp.397_499, index: ivtmp.468_748, offset: 0
 6457      DD
 6458              	# sieve_extend.c:741:         bitword_t source0 = bitarray[source_word  ];
 741:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6459              		.loc 1 741 19 view .LVU2211
 6460 2771 C4A1756C 		vpunpcklqdq	ymm0, ymm1, YMMWORD PTR 32[rcx+r8]	# tmp841, tmp1316, MEM[base: vectp.393_490, index: 
 6460      440120
 6461              	# sieve_extend.c:742:         bitword_t source1 = bitarray[source_word+1];
 742:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6462              		.loc 1 742 19 view .LVU2212
 6463 2778 C443FD00 		vpermq	ymm15, ymm14, 216	# vect_perm_even_507, tmp837,
 6463      FED8
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6464              		.loc 1 743 9 is_stmt 1 view .LVU2213
 6465              	# sieve_extend.c:741:         bitword_t source0 = bitarray[source_word  ];
 741:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6466              		.loc 1 741 19 is_stmt 0 view .LVU2214
 6467 277e C4E3FD00 		vpermq	ymm5, ymm0, 216	# tmp842, tmp841,
 6467      E8D8
 6468              	# sieve_extend.c:742:         bitword_t source1 = bitarray[source_word+1];
 742:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6469              		.loc 1 742 19 view .LVU2215
GAS LISTING /tmp/ccjg94QQ.s 			page 184


 6470 2784 C4C3FD00 		vpermq	ymm6, ymm11, 216	# tmp853, tmp852,
 6470      F3D8
 6471              	# sieve_extend.c:743:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6472              		.loc 1 743 42 view .LVU2216
 6473 278a C555D3C3 		vpsrlq	ymm8, ymm5, xmm3	# vect__98.400, tmp842, _12
 6474              	# sieve_extend.c:743:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6475              		.loc 1 743 63 view .LVU2217
 6476 278e C585F3FC 		vpsllq	ymm7, ymm15, xmm4	# vect__100.401, vect_perm_even_507, _18
 6477              	# sieve_extend.c:745:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 745:sieve_extend.c ****         copy_word += 2;
 6478              		.loc 1 745 42 view .LVU2218
 6479 2792 C505D3EB 		vpsrlq	ymm13, ymm15, xmm3	# vect__109.403, vect_perm_even_507, _12
 6480              	# sieve_extend.c:745:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 745:sieve_extend.c ****         copy_word += 2;
 6481              		.loc 1 745 63 view .LVU2219
 6482 2796 C54DF3E4 		vpsllq	ymm12, ymm6, xmm4	# vect__110.404, tmp853, _18
 6483              	# sieve_extend.c:743:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6484              		.loc 1 743 52 view .LVU2220
 6485 279a C53DEBCF 		vpor	ymm9, ymm8, ymm7	# vect__104.402, vect__98.400, vect__100.401
 6486              	# sieve_extend.c:745:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 745:sieve_extend.c ****         copy_word += 2;
 6487              		.loc 1 745 52 view .LVU2221
 6488 279e C4411DEB 		vpor	ymm14, ymm12, ymm13	# vect__114.405, vect__110.404, vect__109.403
 6488      F5
 6489              	# sieve_extend.c:743:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6490              		.loc 1 743 31 view .LVU2222
 6491 27a3 C4637D39 		vextracti128	xmm2, ymm9, 0x1	# tmp849, vect__104.402
 6491      CA01
 6492              	# sieve_extend.c:745:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 745:sieve_extend.c ****         copy_word += 2;
 6493              		.loc 1 745 31 view .LVU2223
 6494 27a9 C4637D39 		vextracti128	xmm1, ymm14, 0x1	# tmp860, vect__114.405
 6494      F101
 6495              	# sieve_extend.c:743:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6496              		.loc 1 743 31 view .LVU2224
 6497 27af C40179D6 		vmovq	QWORD PTR [r11+r8], xmm9	# MEM[base: _513, index: ivtmp.468_748, offset: 0B], tmp846
 6497      0C03
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6498              		.loc 1 743 31 view .LVU2225
 6499 27b5 C403F916 		vpextrq	QWORD PTR 16[r11+r8], xmm9, 1	# MEM[base: _513, index: ivtmp.468_748, offset: 16B], tmp846
 6499      4C031001 
 6500 27bd C48179D6 		vmovq	QWORD PTR 32[r11+r8], xmm2	# MEM[base: _513, index: ivtmp.468_748, offset: 32B], tmp849
 6500      540320
 6501 27c4 C483F916 		vpextrq	QWORD PTR 48[r11+r8], xmm2, 1	# MEM[base: _513, index: ivtmp.468_748, offset: 48B], tmp849
 6501      54033001 
 744:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6502              		.loc 1 744 9 is_stmt 1 view .LVU2226
 745:sieve_extend.c ****         copy_word += 2;
 6503              		.loc 1 745 9 view .LVU2227
 6504              	# sieve_extend.c:745:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 745:sieve_extend.c ****         copy_word += 2;
 6505              		.loc 1 745 31 is_stmt 0 view .LVU2228
GAS LISTING /tmp/ccjg94QQ.s 			page 185


 6506 27cc C42179D6 		vmovq	QWORD PTR [rdi+r8], xmm14	# MEM[base: _533, index: ivtmp.468_748, offset: 0B], tmp857
 6506      3407
 745:sieve_extend.c ****         copy_word += 2;
 6507              		.loc 1 745 31 view .LVU2229
 6508 27d2 C423F916 		vpextrq	QWORD PTR 16[rdi+r8], xmm14, 1	# MEM[base: _533, index: ivtmp.468_748, offset: 16B], tmp85
 6508      74071001 
 6509 27da C4A179D6 		vmovq	QWORD PTR 32[rdi+r8], xmm1	# MEM[base: _533, index: ivtmp.468_748, offset: 32B], tmp860
 6509      4C0720
 6510 27e1 C4A3F916 		vpextrq	QWORD PTR 48[rdi+r8], xmm1, 1	# MEM[base: _533, index: ivtmp.468_748, offset: 48B], tmp860
 6510      4C073001 
 746:sieve_extend.c ****         source_word += 2;
 6511              		.loc 1 746 9 is_stmt 1 view .LVU2230
 747:sieve_extend.c ****         distance += 2;
 6512              		.loc 1 747 9 view .LVU2231
 748:sieve_extend.c ****     }
 6513              		.loc 1 748 9 view .LVU2232
 748:sieve_extend.c ****     }
 6514              		.loc 1 748 9 is_stmt 0 view .LVU2233
 6515              	.LBE361:
 740:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6516              		.loc 1 740 11 is_stmt 1 view .LVU2234
 6517              	.LBB362:
 741:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6518              		.loc 1 741 9 view .LVU2235
 742:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6519              		.loc 1 742 9 view .LVU2236
 6520              	# sieve_extend.c:742:         bitword_t source1 = bitarray[source_word+1];
 742:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6521              		.loc 1 742 19 is_stmt 0 view .LVU2237
 6522 27e9 C4217E6F 		vmovdqu	ymm8, YMMWORD PTR 64[rdx+r8]	# MEM[base: vectp.397_499, index: ivtmp.468_748, offset: 0B],
 6522      440240
 6523 27f0 C4A17E6F 		vmovdqu	ymm0, YMMWORD PTR 96[rdx+r8]	# MEM[base: vectp.397_499, index: ivtmp.468_748, offset: 32B]
 6523      440260
 6524              	# sieve_extend.c:741:         bitword_t source0 = bitarray[source_word  ];
 741:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6525              		.loc 1 741 19 view .LVU2238
 6526 27f7 C4A17E6F 		vmovdqu	ymm7, YMMWORD PTR 64[rcx+r8]	# tmp1317, MEM[base: vectp.393_490, index: ivtmp.468_748, off
 6526      7C0140
 6527              	# sieve_extend.c:742:         bitword_t source1 = bitarray[source_word+1];
 742:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6528              		.loc 1 742 19 view .LVU2239
 6529 27fe C5BD6CE8 		vpunpcklqdq	ymm5, ymm8, ymm0	# tmp867, MEM[base: vectp.397_499, index: ivtmp.468_748, offset: 0B],
 6530 2802 C53D6DF8 		vpunpckhqdq	ymm15, ymm8, ymm0	# tmp882, MEM[base: vectp.397_499, index: ivtmp.468_748, offset: 0B]
 6531              	# sieve_extend.c:741:         bitword_t source0 = bitarray[source_word  ];
 741:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6532              		.loc 1 741 19 view .LVU2240
 6533 2806 C421456C 		vpunpcklqdq	ymm10, ymm7, YMMWORD PTR 96[rcx+r8]	# tmp871, tmp1317, MEM[base: vectp.393_490, index:
 6533      540160
 6534              	# sieve_extend.c:742:         bitword_t source1 = bitarray[source_word+1];
 742:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6535              		.loc 1 742 19 view .LVU2241
 6536 280d C463FD00 		vpermq	ymm9, ymm5, 216	# vect_perm_even_507, tmp867,
 6536      CDD8
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6537              		.loc 1 743 9 is_stmt 1 view .LVU2242
 6538              	# sieve_extend.c:741:         bitword_t source0 = bitarray[source_word  ];
 741:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
GAS LISTING /tmp/ccjg94QQ.s 			page 186


 6539              		.loc 1 741 19 is_stmt 0 view .LVU2243
 6540 2813 C4C3FD00 		vpermq	ymm2, ymm10, 216	# tmp872, tmp871,
 6540      D2D8
 6541              	# sieve_extend.c:742:         bitword_t source1 = bitarray[source_word+1];
 742:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6542              		.loc 1 742 19 view .LVU2244
 6543 2819 C4C3FD00 		vpermq	ymm1, ymm15, 216	# tmp883, tmp882,
 6543      CFD8
 6544              	# sieve_extend.c:743:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6545              		.loc 1 743 42 view .LVU2245
 6546 281f C56DD3DB 		vpsrlq	ymm11, ymm2, xmm3	# vect__98.400, tmp872, _12
 6547              	# sieve_extend.c:743:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6548              		.loc 1 743 63 view .LVU2246
 6549 2823 C5B5F3F4 		vpsllq	ymm6, ymm9, xmm4	# vect__100.401, vect_perm_even_507, _18
 6550              	# sieve_extend.c:745:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 745:sieve_extend.c ****         copy_word += 2;
 6551              		.loc 1 745 42 view .LVU2247
 6552 2827 C5B5D3C3 		vpsrlq	ymm0, ymm9, xmm3	# vect__109.403, vect_perm_even_507, _12
 6553              	# sieve_extend.c:745:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 745:sieve_extend.c ****         copy_word += 2;
 6554              		.loc 1 745 63 view .LVU2248
 6555 282b C575F3C4 		vpsllq	ymm8, ymm1, xmm4	# vect__110.404, tmp883, _18
 6556              	# sieve_extend.c:743:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6557              		.loc 1 743 52 view .LVU2249
 6558 282f C525EBE6 		vpor	ymm12, ymm11, ymm6	# vect__104.402, vect__98.400, vect__100.401
 6559              	# sieve_extend.c:745:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 745:sieve_extend.c ****         copy_word += 2;
 6560              		.loc 1 745 52 view .LVU2250
 6561 2833 C5BDEBE8 		vpor	ymm5, ymm8, ymm0	# vect__114.405, vect__110.404, vect__109.403
 6562              	# sieve_extend.c:743:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6563              		.loc 1 743 31 view .LVU2251
 6564 2837 C4437D39 		vextracti128	xmm14, ymm12, 0x1	# tmp879, vect__104.402
 6564      E601
 6565              	# sieve_extend.c:745:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 745:sieve_extend.c ****         copy_word += 2;
 6566              		.loc 1 745 31 view .LVU2252
 6567 283d C4E37D39 		vextracti128	xmm7, ymm5, 0x1	# tmp890, vect__114.405
 6567      EF01
 6568              	# sieve_extend.c:743:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6569              		.loc 1 743 31 view .LVU2253
 6570 2843 C40179D6 		vmovq	QWORD PTR 64[r11+r8], xmm12	# MEM[base: _513, index: ivtmp.468_748, offset: 0B], tmp876
 6570      640340
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6571              		.loc 1 743 31 view .LVU2254
 6572 284a C403F916 		vpextrq	QWORD PTR 80[r11+r8], xmm12, 1	# MEM[base: _513, index: ivtmp.468_748, offset: 16B], tmp87
 6572      64035001 
 6573 2852 C40179D6 		vmovq	QWORD PTR 96[r11+r8], xmm14	# MEM[base: _513, index: ivtmp.468_748, offset: 32B], tmp879
 6573      740360
 6574 2859 C403F916 		vpextrq	QWORD PTR 112[r11+r8], xmm14, 1	# MEM[base: _513, index: ivtmp.468_748, offset: 48B], tmp8
 6574      74037001 
 744:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6575              		.loc 1 744 9 is_stmt 1 view .LVU2255
GAS LISTING /tmp/ccjg94QQ.s 			page 187


 745:sieve_extend.c ****         copy_word += 2;
 6576              		.loc 1 745 9 view .LVU2256
 6577              	# sieve_extend.c:745:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 745:sieve_extend.c ****         copy_word += 2;
 6578              		.loc 1 745 31 is_stmt 0 view .LVU2257
 6579 2861 C4A179D6 		vmovq	QWORD PTR 64[rdi+r8], xmm5	# MEM[base: _533, index: ivtmp.468_748, offset: 0B], tmp887
 6579      6C0740
 745:sieve_extend.c ****         copy_word += 2;
 6580              		.loc 1 745 31 view .LVU2258
 6581 2868 C4A3F916 		vpextrq	QWORD PTR 80[rdi+r8], xmm5, 1	# MEM[base: _533, index: ivtmp.468_748, offset: 16B], tmp887
 6581      6C075001 
 6582 2870 C4A179D6 		vmovq	QWORD PTR 96[rdi+r8], xmm7	# MEM[base: _533, index: ivtmp.468_748, offset: 32B], tmp890
 6582      7C0760
 6583 2877 C4A3F916 		vpextrq	QWORD PTR 112[rdi+r8], xmm7, 1	# MEM[base: _533, index: ivtmp.468_748, offset: 48B], tmp89
 6583      7C077001 
 746:sieve_extend.c ****         source_word += 2;
 6584              		.loc 1 746 9 is_stmt 1 view .LVU2259
 747:sieve_extend.c ****         distance += 2;
 6585              		.loc 1 747 9 view .LVU2260
 748:sieve_extend.c ****     }
 6586              		.loc 1 748 9 view .LVU2261
 748:sieve_extend.c ****     }
 6587              		.loc 1 748 9 is_stmt 0 view .LVU2262
 6588              	.LBE362:
 740:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6589              		.loc 1 740 11 is_stmt 1 view .LVU2263
 6590 287f 4983E880 		sub	r8, -128	# ivtmp.468,
 6591 2883 4D39CE   		cmp	r14, r9	# bnd.386, ivtmp.466
 6592 2886 0F87C4FE 		ja	.L545	#,
 6592      FFFF
 6593              	.L774:
 740:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6594              		.loc 1 740 11 is_stmt 0 view .LVU2264
 6595 288c 488B5424 		mov	rdx, QWORD PTR 88[rsp]	# _183, %sfp
 6595      58
 6596 2891 49C1E603 		sal	r14, 3	# _483,
 6597 2895 4A8D0C32 		lea	rcx, [rdx+r14]	# tmp.388,
 6598 2899 4A8D1430 		lea	rdx, [rax+r14]	# tmp.389,
 6599              	.LVL307:
 6600              	.LBB363:
 741:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6601              		.loc 1 741 9 is_stmt 1 view .LVU2265
 6602              	# sieve_extend.c:741:         bitword_t source0 = bitarray[source_word  ];
 741:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6603              		.loc 1 741 37 is_stmt 0 view .LVU2266
 6604 289d 4C8D1CCD 		lea	r11, 0[0+rcx*8]	# _605,
 6604      00000000 
 6605              	.LVL308:
 742:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6606              		.loc 1 742 9 is_stmt 1 view .LVU2267
 6607              	# sieve_extend.c:743:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6608              		.loc 1 743 42 is_stmt 0 view .LVU2268
 6609 28a5 C4E293F7 		shrx	rsi, QWORD PTR [rbx+rcx*8], r13	# tmp648, *_606, shift
 6609      34CB
 6610              	# sieve_extend.c:742:         bitword_t source1 = bitarray[source_word+1];
 742:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
GAS LISTING /tmp/ccjg94QQ.s 			page 188


 6611              		.loc 1 742 19 view .LVU2269
 6612 28ab 4A8B7C1B 		mov	rdi, QWORD PTR 8[rbx+r11]	# source1, *_610
 6612      08
 6613              	.LVL309:
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6614              		.loc 1 743 9 is_stmt 1 view .LVU2270
 6615              	# sieve_extend.c:743:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6616              		.loc 1 743 63 is_stmt 0 view .LVU2271
 6617 28b0 C46281F7 		shlx	r10, rdi, r15	# tmp650, source1, shift_flipped
 6617      D7
 6618              	# sieve_extend.c:743:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6619              		.loc 1 743 52 view .LVU2272
 6620 28b5 4C09D6   		or	rsi, r10	# tmp651, tmp650
 6621              	# sieve_extend.c:745:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 745:sieve_extend.c ****         copy_word += 2;
 6622              		.loc 1 745 42 view .LVU2273
 6623 28b8 C4E293F7 		shrx	rdi, rdi, r13	# tmp654, source1, shift
 6623      FF
 6624              	.LVL310:
 6625              	# sieve_extend.c:743:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6626              		.loc 1 743 52 view .LVU2274
 6627 28bd 488934D3 		mov	QWORD PTR [rbx+rdx*8], rsi	# *_615, tmp651
 6628              	.LVL311:
 744:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6629              		.loc 1 744 9 is_stmt 1 view .LVU2275
 6630              	# sieve_extend.c:744:         bitword_t source2 = bitarray[source_word+2];
 744:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6631              		.loc 1 744 37 is_stmt 0 view .LVU2276
 6632 28c1 4C8D4902 		lea	r9, 2[rcx]	# _618,
 6633              	.LVL312:
 745:sieve_extend.c ****         copy_word += 2;
 6634              		.loc 1 745 9 is_stmt 1 view .LVU2277
 6635              	# sieve_extend.c:745:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 745:sieve_extend.c ****         copy_word += 2;
 6636              		.loc 1 745 63 is_stmt 0 view .LVU2278
 6637 28c5 4E8B441B 		mov	r8, QWORD PTR 16[rbx+r11]	# *_620, *_620
 6637      10
 6638 28ca C44281F7 		shlx	r11, r8, r15	# tmp652, *_620, shift_flipped
 6638      D8
 6639              	.LVL313:
 6640              	# sieve_extend.c:745:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 745:sieve_extend.c ****         copy_word += 2;
 6641              		.loc 1 745 52 view .LVU2279
 6642 28cf 4C09DF   		or	rdi, r11	# tmp655, tmp652
 6643              	# sieve_extend.c:746:         copy_word += 2;
 746:sieve_extend.c ****         source_word += 2;
 6644              		.loc 1 746 19 view .LVU2280
 6645 28d2 4C8D4202 		lea	r8, 2[rdx]	# copy_word,
 6646              	.LVL314:
 746:sieve_extend.c ****         source_word += 2;
 6647              		.loc 1 746 19 view .LVU2281
 6648              	.LBE363:
 6649              	# sieve_extend.c:740:     while (copy_word < fast_loop_stop_word) {
 740:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
GAS LISTING /tmp/ccjg94QQ.s 			page 189


 6650              		.loc 1 740 11 view .LVU2282
 6651 28d6 4C8B5C24 		mov	r11, QWORD PTR 48[rsp]	# fast_loop_stop_word, %sfp
 6651      30
 6652              	.LBB364:
 6653              	# sieve_extend.c:748:         distance += 2;
 748:sieve_extend.c ****     }
 6654              		.loc 1 748 18 view .LVU2283
 6655 28db 4D8D5602 		lea	r10, 2[r14]	# distance,
 6656              	# sieve_extend.c:745:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 745:sieve_extend.c ****         copy_word += 2;
 6657              		.loc 1 745 52 view .LVU2284
 6658 28df 48897CD3 		mov	QWORD PTR 8[rbx+rdx*8], rdi	# *_626, tmp655
 6658      08
 6659              	.LVL315:
 746:sieve_extend.c ****         source_word += 2;
 6660              		.loc 1 746 9 is_stmt 1 view .LVU2285
 747:sieve_extend.c ****         distance += 2;
 6661              		.loc 1 747 9 view .LVU2286
 748:sieve_extend.c ****     }
 6662              		.loc 1 748 9 view .LVU2287
 748:sieve_extend.c ****     }
 6663              		.loc 1 748 9 is_stmt 0 view .LVU2288
 6664              	.LBE364:
 740:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6665              		.loc 1 740 11 is_stmt 1 view .LVU2289
 6666 28e4 4D39C3   		cmp	r11, r8	# fast_loop_stop_word, copy_word
 6667 28e7 0F86D500 		jbe	.L548	#,
 6667      0000
 6668              	.LBB365:
 741:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6669              		.loc 1 741 9 view .LVU2290
 6670              	# sieve_extend.c:743:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6671              		.loc 1 743 42 is_stmt 0 view .LVU2291
 6672 28ed 4A8B34CB 		mov	rsi, QWORD PTR [rbx+r9*8]	# *_636, *_636
 6673              	# sieve_extend.c:741:         bitword_t source0 = bitarray[source_word  ];
 741:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6674              		.loc 1 741 37 view .LVU2292
 6675 28f1 4E8D14CD 		lea	r10, 0[0+r9*8]	# _635,
 6675      00000000 
 6676              	.LVL316:
 742:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6677              		.loc 1 742 9 is_stmt 1 view .LVU2293
 6678              	# sieve_extend.c:742:         bitword_t source1 = bitarray[source_word+1];
 742:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6679              		.loc 1 742 19 is_stmt 0 view .LVU2294
 6680 28f9 4A8B7C13 		mov	rdi, QWORD PTR 8[rbx+r10]	# source1, *_640
 6680      08
 6681              	.LVL317:
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6682              		.loc 1 743 9 is_stmt 1 view .LVU2295
 6683              	# sieve_extend.c:743:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6684              		.loc 1 743 42 is_stmt 0 view .LVU2296
 6685 28fe C4E293F7 		shrx	rsi, rsi, r13	# tmp656, *_636, shift
 6685      F6
 6686              	.LVL318:
GAS LISTING /tmp/ccjg94QQ.s 			page 190


 6687              	# sieve_extend.c:743:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6688              		.loc 1 743 63 view .LVU2297
 6689 2903 C46281F7 		shlx	r9, rdi, r15	# tmp658, source1, shift_flipped
 6689      CF
 6690              	.LVL319:
 6691              	# sieve_extend.c:743:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6692              		.loc 1 743 52 view .LVU2298
 6693 2908 4C09CE   		or	rsi, r9	# tmp659, tmp658
 6694 290b 4A8934C3 		mov	QWORD PTR [rbx+r8*8], rsi	# *_645, tmp659
 6695              	.LVL320:
 744:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6696              		.loc 1 744 9 is_stmt 1 view .LVU2299
 6697              	# sieve_extend.c:745:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 745:sieve_extend.c ****         copy_word += 2;
 6698              		.loc 1 745 42 is_stmt 0 view .LVU2300
 6699 290f C4E293F7 		shrx	rdi, rdi, r13	# tmp662, source1, shift
 6699      FF
 6700              	.LVL321:
 6701              	# sieve_extend.c:745:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 745:sieve_extend.c ****         copy_word += 2;
 6702              		.loc 1 745 63 view .LVU2301
 6703 2914 4E8B5413 		mov	r10, QWORD PTR 16[rbx+r10]	# *_650, *_650
 6703      10
 6704 2919 C4C281F7 		shlx	rsi, r10, r15	# tmp660, *_650, shift_flipped
 6704      F2
 6705              	# sieve_extend.c:745:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 745:sieve_extend.c ****         copy_word += 2;
 6706              		.loc 1 745 52 view .LVU2302
 6707 291e 4809F7   		or	rdi, rsi	# tmp663, tmp660
 6708              	# sieve_extend.c:744:         bitword_t source2 = bitarray[source_word+2];
 744:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6709              		.loc 1 744 37 view .LVU2303
 6710 2921 4C8D4904 		lea	r9, 4[rcx]	# _648,
 745:sieve_extend.c ****         copy_word += 2;
 6711              		.loc 1 745 9 is_stmt 1 view .LVU2304
 6712              	# sieve_extend.c:745:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 745:sieve_extend.c ****         copy_word += 2;
 6713              		.loc 1 745 52 is_stmt 0 view .LVU2305
 6714 2925 4A897CC3 		mov	QWORD PTR 8[rbx+r8*8], rdi	# *_656, tmp663
 6714      08
 746:sieve_extend.c ****         source_word += 2;
 6715              		.loc 1 746 9 is_stmt 1 view .LVU2306
 6716              	# sieve_extend.c:746:         copy_word += 2;
 746:sieve_extend.c ****         source_word += 2;
 6717              		.loc 1 746 19 is_stmt 0 view .LVU2307
 6718 292a 4C8D4204 		lea	r8, 4[rdx]	# copy_word,
 6719              	.LVL322:
 747:sieve_extend.c ****         distance += 2;
 6720              		.loc 1 747 9 is_stmt 1 view .LVU2308
 748:sieve_extend.c ****     }
 6721              		.loc 1 748 9 view .LVU2309
 748:sieve_extend.c ****     }
 6722              		.loc 1 748 9 is_stmt 0 view .LVU2310
 6723              	.LBE365:
 6724              	# sieve_extend.c:740:     while (copy_word < fast_loop_stop_word) {
GAS LISTING /tmp/ccjg94QQ.s 			page 191


 740:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6725              		.loc 1 740 11 view .LVU2311
 6726 292e 4D39C3   		cmp	r11, r8	# fast_loop_stop_word, copy_word
 6727              	.LBB366:
 6728              	# sieve_extend.c:748:         distance += 2;
 748:sieve_extend.c ****     }
 6729              		.loc 1 748 18 view .LVU2312
 6730 2931 4D8D5604 		lea	r10, 4[r14]	# distance,
 6731              	.LVL323:
 748:sieve_extend.c ****     }
 6732              		.loc 1 748 18 view .LVU2313
 6733              	.LBE366:
 740:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6734              		.loc 1 740 11 is_stmt 1 view .LVU2314
 6735 2935 0F868700 		jbe	.L548	#,
 6735      0000
 6736              	.LBB367:
 741:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6737              		.loc 1 741 9 view .LVU2315
 6738              	# sieve_extend.c:741:         bitword_t source0 = bitarray[source_word  ];
 741:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6739              		.loc 1 741 37 is_stmt 0 view .LVU2316
 6740 293b 4E8D14CD 		lea	r10, 0[0+r9*8]	# _665,
 6740      00000000 
 6741              	.LVL324:
 742:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6742              		.loc 1 742 9 is_stmt 1 view .LVU2317
 6743              	# sieve_extend.c:746:         copy_word += 2;
 746:sieve_extend.c ****         source_word += 2;
 6744              		.loc 1 746 19 is_stmt 0 view .LVU2318
 6745 2943 4883C206 		add	rdx, 6	# copy_word,
 6746              	# sieve_extend.c:742:         bitword_t source1 = bitarray[source_word+1];
 742:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6747              		.loc 1 742 19 view .LVU2319
 6748 2947 4A8B7C13 		mov	rdi, QWORD PTR 8[rbx+r10]	# source1, *_670
 6748      08
 6749              	.LVL325:
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6750              		.loc 1 743 9 is_stmt 1 view .LVU2320
 6751              	# sieve_extend.c:744:         bitword_t source2 = bitarray[source_word+2];
 744:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6752              		.loc 1 744 37 is_stmt 0 view .LVU2321
 6753 294c 4883C106 		add	rcx, 6	# _678,
 6754              	# sieve_extend.c:743:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6755              		.loc 1 743 42 view .LVU2322
 6756 2950 4E8B0CCB 		mov	r9, QWORD PTR [rbx+r9*8]	# *_666, *_666
 6757              	.LVL326:
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6758              		.loc 1 743 42 view .LVU2323
 6759 2954 C4C293F7 		shrx	rsi, r9, r13	# tmp664, *_666, shift
 6759      F1
 6760              	# sieve_extend.c:743:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6761              		.loc 1 743 63 view .LVU2324
 6762 2959 C46281F7 		shlx	r9, rdi, r15	# tmp666, source1, shift_flipped
 6762      CF
GAS LISTING /tmp/ccjg94QQ.s 			page 192


 6763              	.LVL327:
 6764              	# sieve_extend.c:743:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6765              		.loc 1 743 52 view .LVU2325
 6766 295e 4C09CE   		or	rsi, r9	# tmp667, tmp666
 6767 2961 4A8934C3 		mov	QWORD PTR [rbx+r8*8], rsi	# *_675, tmp667
 6768              	.LVL328:
 744:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6769              		.loc 1 744 9 is_stmt 1 view .LVU2326
 745:sieve_extend.c ****         copy_word += 2;
 6770              		.loc 1 745 9 view .LVU2327
 6771              	# sieve_extend.c:745:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 745:sieve_extend.c ****         copy_word += 2;
 6772              		.loc 1 745 42 is_stmt 0 view .LVU2328
 6773 2965 C4E293F7 		shrx	rdi, rdi, r13	# tmp670, source1, shift
 6773      FF
 6774              	.LVL329:
 6775              	# sieve_extend.c:745:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 745:sieve_extend.c ****         copy_word += 2;
 6776              		.loc 1 745 63 view .LVU2329
 6777 296a 4E8B5413 		mov	r10, QWORD PTR 16[rbx+r10]	# *_680, *_680
 6777      10
 6778              	.LVL330:
 745:sieve_extend.c ****         copy_word += 2;
 6779              		.loc 1 745 63 view .LVU2330
 6780 296f C4C281F7 		shlx	rsi, r10, r15	# tmp668, *_680, shift_flipped
 6780      F2
 6781              	# sieve_extend.c:745:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 745:sieve_extend.c ****         copy_word += 2;
 6782              		.loc 1 745 52 view .LVU2331
 6783 2974 4809F7   		or	rdi, rsi	# tmp671, tmp668
 6784              	.LBE367:
 6785              	# sieve_extend.c:740:     while (copy_word < fast_loop_stop_word) {
 740:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6786              		.loc 1 740 11 view .LVU2332
 6787 2977 4939D3   		cmp	r11, rdx	# fast_loop_stop_word, copy_word
 6788              	.LBB368:
 6789              	# sieve_extend.c:745:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 745:sieve_extend.c ****         copy_word += 2;
 6790              		.loc 1 745 52 view .LVU2333
 6791 297a 4A897CC3 		mov	QWORD PTR 8[rbx+r8*8], rdi	# *_686, tmp671
 6791      08
 746:sieve_extend.c ****         source_word += 2;
 6792              		.loc 1 746 9 is_stmt 1 view .LVU2334
 6793              	.LVL331:
 747:sieve_extend.c ****         distance += 2;
 6794              		.loc 1 747 9 view .LVU2335
 748:sieve_extend.c ****     }
 6795              		.loc 1 748 9 view .LVU2336
 6796              	# sieve_extend.c:748:         distance += 2;
 748:sieve_extend.c ****     }
 6797              		.loc 1 748 18 is_stmt 0 view .LVU2337
 6798 297f 4D8D5606 		lea	r10, 6[r14]	# distance,
 6799              	.LVL332:
 748:sieve_extend.c ****     }
 6800              		.loc 1 748 18 view .LVU2338
 6801              	.LBE368:
GAS LISTING /tmp/ccjg94QQ.s 			page 193


 740:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6802              		.loc 1 740 11 is_stmt 1 view .LVU2339
 6803 2983 763D     		jbe	.L548	#,
 6804              	.LBB369:
 741:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6805              		.loc 1 741 9 view .LVU2340
 6806              	# sieve_extend.c:741:         bitword_t source0 = bitarray[source_word  ];
 741:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6807              		.loc 1 741 37 is_stmt 0 view .LVU2341
 6808 2985 4C8D1CCD 		lea	r11, 0[0+rcx*8]	# _452,
 6808      00000000 
 6809              	.LVL333:
 742:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6810              		.loc 1 742 9 is_stmt 1 view .LVU2342
 6811              	# sieve_extend.c:742:         bitword_t source1 = bitarray[source_word+1];
 742:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6812              		.loc 1 742 19 is_stmt 0 view .LVU2343
 6813 298d 4E8B4C1B 		mov	r9, QWORD PTR 8[rbx+r11]	# source1, *_457
 6813      08
 6814              	.LVL334:
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6815              		.loc 1 743 9 is_stmt 1 view .LVU2344
 6816              	# sieve_extend.c:743:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6817              		.loc 1 743 63 is_stmt 0 view .LVU2345
 6818 2992 C44281F7 		shlx	r8, r9, r15	# tmp674, source1, shift_flipped
 6818      C1
 6819              	# sieve_extend.c:743:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6820              		.loc 1 743 42 view .LVU2346
 6821 2997 488B0CCB 		mov	rcx, QWORD PTR [rbx+rcx*8]	# *_453, *_453
 6822              	.LVL335:
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6823              		.loc 1 743 42 view .LVU2347
 6824 299b C46293F7 		shrx	r10, rcx, r13	# tmp672, *_453, shift
 6824      D1
 6825              	.LVL336:
 6826              	# sieve_extend.c:743:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6827              		.loc 1 743 52 view .LVU2348
 6828 29a0 4D09C2   		or	r10, r8	# tmp675, tmp674
 6829 29a3 4C8914D3 		mov	QWORD PTR [rbx+rdx*8], r10	# *_462, tmp675
 744:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6830              		.loc 1 744 9 is_stmt 1 view .LVU2349
 6831              	.LVL337:
 745:sieve_extend.c ****         copy_word += 2;
 6832              		.loc 1 745 9 view .LVU2350
 6833              	# sieve_extend.c:748:         distance += 2;
 748:sieve_extend.c ****     }
 6834              		.loc 1 748 18 is_stmt 0 view .LVU2351
 6835 29a7 4D8D5608 		lea	r10, 8[r14]	# distance,
 6836              	# sieve_extend.c:745:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 745:sieve_extend.c ****         copy_word += 2;
 6837              		.loc 1 745 63 view .LVU2352
 6838 29ab 4A8B741B 		mov	rsi, QWORD PTR 16[rbx+r11]	# *_467, *_467
 6838      10
 6839              	# sieve_extend.c:745:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
GAS LISTING /tmp/ccjg94QQ.s 			page 194


 745:sieve_extend.c ****         copy_word += 2;
 6840              		.loc 1 745 42 view .LVU2353
 6841 29b0 C44293F7 		shrx	r11, r9, r13	# tmp678, source1, shift
 6841      D9
 6842              	.LVL338:
 6843              	# sieve_extend.c:745:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 745:sieve_extend.c ****         copy_word += 2;
 6844              		.loc 1 745 63 view .LVU2354
 6845 29b5 C4E281F7 		shlx	rdi, rsi, r15	# tmp676, *_467, shift_flipped
 6845      FE
 6846              	# sieve_extend.c:745:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 745:sieve_extend.c ****         copy_word += 2;
 6847              		.loc 1 745 52 view .LVU2355
 6848 29ba 4909FB   		or	r11, rdi	# tmp679, tmp676
 6849 29bd 4C895CD3 		mov	QWORD PTR 8[rbx+rdx*8], r11	# *_473, tmp679
 6849      08
 746:sieve_extend.c ****         source_word += 2;
 6850              		.loc 1 746 9 is_stmt 1 view .LVU2356
 747:sieve_extend.c ****         distance += 2;
 6851              		.loc 1 747 9 view .LVU2357
 748:sieve_extend.c ****     }
 6852              		.loc 1 748 9 view .LVU2358
 6853              	.LVL339:
 748:sieve_extend.c ****     }
 6854              		.loc 1 748 9 is_stmt 0 view .LVU2359
 6855              	.LBE369:
 740:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6856              		.loc 1 740 11 is_stmt 1 view .LVU2360
 6857              	.L548:
 740:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6858              		.loc 1 740 11 is_stmt 0 view .LVU2361
 6859 29c2 4C015424 		add	QWORD PTR 88[rsp], r10	# %sfp, distance
 6859      58
 6860 29c7 4C01D0   		add	rax, r10	# ivtmp.428, distance
 6861              	.L543:
 750:sieve_extend.c **** }
 6862              		.loc 1 750 5 is_stmt 1 view .LVU2362
 6863              	.LVL340:
 750:sieve_extend.c **** }
 6864              		.loc 1 750 5 is_stmt 0 view .LVU2363
 6865              	.LBE380:
 6866              	.LBE383:
 898:sieve_extend.c ****     copy_word += distance;
 6867              		.loc 1 898 5 is_stmt 1 view .LVU2364
 899:sieve_extend.c **** 
 6868              		.loc 1 899 5 view .LVU2365
 901:sieve_extend.c **** 
 6869              		.loc 1 901 6 view .LVU2366
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6870              		.loc 1 904 11 view .LVU2367
 6871              	# sieve_extend.c:904:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6872              		.loc 1 904 5 is_stmt 0 view .LVU2368
 6873 29ca 4C8B5424 		mov	r10, QWORD PTR 64[rsp]	# aligned_copy_word, %sfp
 6873      40
 6874 29cf 4939C2   		cmp	r10, rax	# aligned_copy_word, ivtmp.428
 6875 29d2 0F821004 		jb	.L549	#,
GAS LISTING /tmp/ccjg94QQ.s 			page 195


 6875      0000
 6876 29d8 4C8B5C24 		mov	r11, QWORD PTR 88[rsp]	# _183, %sfp
 6876      58
 6877 29dd 488D34C5 		lea	rsi, 0[0+rax*8]	# _220,
 6877      00000000 
 6878 29e5 488D7E20 		lea	rdi, 32[rsi]	# tmp691,
 6879 29e9 4A8D14DD 		lea	rdx, 0[0+r11*8]	# _226,
 6879      00000000 
 6880 29f1 4A8D0CDD 		lea	rcx, 40[0+r11*8]	# _218,
 6880      28000000 
 6881 29f9 4839D7   		cmp	rdi, rdx	# tmp691, _226
 6882 29fc 4D89DE   		mov	r14, r11	# _183, _183
 6883 29ff 410F9EC1 		setle	r9b	#, tmp693
 6884 2a03 4839F1   		cmp	rcx, rsi	# _218, _220
 6885 2a06 410F9EC0 		setle	r8b	#, tmp695
 6886 2a0a 4508C1   		or	r9b, r8b	# tmp693, tmp695
 6887 2a0d 0F84E50A 		je	.L550	#,
 6887      0000
 6888 2a13 4C89D1   		mov	rcx, r10	# tmp697, aligned_copy_word
 6889 2a16 4829C1   		sub	rcx, rax	# tmp697, ivtmp.428
 6890 2a19 4883F905 		cmp	rcx, 5	# tmp697,
 6891 2a1d 0F86D50A 		jbe	.L550	#,
 6891      0000
 6892 2a23 4801DA   		add	rdx, rbx	# vectp.366, bitarray
 6893 2a26 4983C201 		add	r10, 1	# ivtmp.428,
 6894 2a2a 48C1EA03 		shr	rdx, 3	# tmp702,
 6895 2a2e 4C89D7   		mov	rdi, r10	# niters.365, ivtmp.428
 6896 2a31 48F7DA   		neg	rdx	# tmp703
 6897 2a34 4829C7   		sub	rdi, rax	# niters.365, ivtmp.428
 6898 2a37 83E203   		and	edx, 3	# prolog_loop_niters.367,
 6899 2a3a 0F84A80A 		je	.L569	#,
 6899      0000
 6900              	.LVL341:
 905:sieve_extend.c ****     }
 6901              		.loc 1 905 9 is_stmt 1 view .LVU2369
 6902              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 6903              		.loc 1 905 77 is_stmt 0 view .LVU2370
 6904 2a40 4D8D4301 		lea	r8, 1[r11]	# tmp793,
 6905              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 6906              		.loc 1 905 94 view .LVU2371
 6907 2a44 4E8B5CDB 		mov	r11, QWORD PTR 8[rbx+r11*8]	# *_573, *_573
 6907      08
 6908              	.LVL342:
 905:sieve_extend.c ****     }
 6909              		.loc 1 905 94 view .LVU2372
 6910 2a49 C44281F7 		shlx	r9, r11, r15	# tmp704,, shift_flipped
 6910      CB
 6911              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 6912              		.loc 1 905 56 view .LVU2373
 6913 2a4e 4E8B1CF3 		mov	r11, QWORD PTR [rbx+r14*8]	# *_568, *_568
 6914              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 6915              		.loc 1 905 77 view .LVU2374
 6916 2a52 4C89C1   		mov	rcx, r8	# source_word, tmp793
GAS LISTING /tmp/ccjg94QQ.s 			page 196


 6917              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 6918              		.loc 1 905 56 view .LVU2375
 6919 2a55 4C895C24 		mov	QWORD PTR 56[rsp], r11	# %sfp, *_568
 6919      38
 6920 2a5a C44293F7 		shrx	r11, r11, r13	# tmp706,, shift
 6920      DB
 6921              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 6922              		.loc 1 905 66 view .LVU2376
 6923 2a5f 4D09D9   		or	r9, r11	# tmp708, tmp706
 6924 2a62 4883FA01 		cmp	rdx, 1	# prolog_loop_niters.367,
 6925 2a66 4C890C33 		mov	QWORD PTR [rbx+rsi], r9	# *_577, tmp708
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6926              		.loc 1 904 43 is_stmt 1 view .LVU2377
 6927              	# sieve_extend.c:904:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6928              		.loc 1 904 52 is_stmt 0 view .LVU2378
 6929 2a6a 488D7001 		lea	rsi, 1[rax]	# copy_word,
 6930              	.LVL343:
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6931              		.loc 1 904 11 is_stmt 1 view .LVU2379
 6932 2a6e 7454     		je	.L551	#,
 905:sieve_extend.c ****     }
 6933              		.loc 1 905 9 view .LVU2380
 6934              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 6935              		.loc 1 905 40 is_stmt 0 view .LVU2381
 6936 2a70 4E8D1CC5 		lea	r11, 0[0+r8*8]	# _586,
 6936      00000000 
 6937              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 6938              		.loc 1 905 94 view .LVU2382
 6939 2a78 C42281F7 		shlx	r9, QWORD PTR 8[rbx+r11], r15	# tmp709, *_592, shift_flipped
 6939      4C1B08
 6940              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 6941              		.loc 1 905 56 view .LVU2383
 6942 2a7f 4E8B1C1B 		mov	r11, QWORD PTR [rbx+r11]	# *_587, *_587
 6943 2a83 C44293F7 		shrx	r11, r11, r13	# tmp711, *_587, shift
 6943      DB
 6944              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 6945              		.loc 1 905 66 view .LVU2384
 6946 2a88 4D09D9   		or	r9, r11	# tmp713, tmp711
 6947 2a8b 4883FA03 		cmp	rdx, 3	# prolog_loop_niters.367,
 6948 2a8f 4C890CF3 		mov	QWORD PTR [rbx+rsi*8], r9	# *_596, tmp713
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6949              		.loc 1 904 43 is_stmt 1 view .LVU2385
 6950              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 6951              		.loc 1 905 77 is_stmt 0 view .LVU2386
 6952 2a93 498D4E02 		lea	rcx, 2[r14]	# source_word,
 6953              	.LVL344:
 6954              	# sieve_extend.c:904:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6955              		.loc 1 904 52 view .LVU2387
GAS LISTING /tmp/ccjg94QQ.s 			page 197


 6956 2a97 488D7002 		lea	rsi, 2[rax]	# copy_word,
 6957              	.LVL345:
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6958              		.loc 1 904 11 is_stmt 1 view .LVU2388
 6959 2a9b 7527     		jne	.L551	#,
 905:sieve_extend.c ****     }
 6960              		.loc 1 905 9 view .LVU2389
 6961              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 6962              		.loc 1 905 40 is_stmt 0 view .LVU2390
 6963 2a9d 4C8D1CCD 		lea	r11, 0[0+rcx*8]	# _261,
 6963      00000000 
 6964              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 6965              		.loc 1 905 77 view .LVU2391
 6966 2aa5 498D4E03 		lea	rcx, 3[r14]	# source_word,
 6967              	.LVL346:
 6968              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 6969              		.loc 1 905 56 view .LVU2392
 6970 2aa9 4E8B0C1B 		mov	r9, QWORD PTR [rbx+r11]	# *_262, *_262
 6971              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 6972              		.loc 1 905 94 view .LVU2393
 6973 2aad C42281F7 		shlx	r14, QWORD PTR 8[rbx+r11], r15	# tmp714, *_267, shift_flipped
 6973      741B08
 6974              	.LVL347:
 6975              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 6976              		.loc 1 905 56 view .LVU2394
 6977 2ab4 C44293F7 		shrx	r11, r9, r13	# tmp716, *_262, shift
 6977      D9
 6978              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 6979              		.loc 1 905 66 view .LVU2395
 6980 2ab9 4D09DE   		or	r14, r11	# tmp718, tmp716
 6981 2abc 4C8934F3 		mov	QWORD PTR [rbx+rsi*8], r14	# *_271, tmp718
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6982              		.loc 1 904 43 is_stmt 1 view .LVU2396
 6983              	# sieve_extend.c:904:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6984              		.loc 1 904 52 is_stmt 0 view .LVU2397
 6985 2ac0 488D7003 		lea	rsi, 3[rax]	# copy_word,
 6986              	.LVL348:
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6987              		.loc 1 904 11 is_stmt 1 view .LVU2398
 6988              	.L551:
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6989              		.loc 1 904 11 is_stmt 0 view .LVU2399
 6990 2ac4 4829D7   		sub	rdi, rdx	# niters.368, prolog_loop_niters.367
 6991 2ac7 C441796E 		vmovd	xmm10, r12d	# _12, _12
 6991      D4
 6992 2acc 4989FB   		mov	r11, rdi	# bnd.369, niters.368
 6993 2acf 4801D0   		add	rax, rdx	# tmp724, prolog_loop_niters.367
 6994 2ad2 49C1EB02 		shr	r11, 2	# bnd.369,
 6995 2ad6 4901D0   		add	r8, rdx	# tmp722, prolog_loop_niters.367
 6996 2ad9 49C1E305 		sal	r11, 5	# _733,
GAS LISTING /tmp/ccjg94QQ.s 			page 198


 6997 2add 4E8D04C3 		lea	r8, [rbx+r8*8]	# vectp.378,
 6998 2ae1 4C8B7424 		mov	r14, QWORD PTR 88[rsp]	# _183, %sfp
 6998      58
 6999 2ae6 4D8D63E0 		lea	r12, -32[r11]	# tmp818,
 7000 2aea C5F96E54 		vmovd	xmm2, DWORD PTR 72[rsp]	# _18, %sfp
 7000      2448
 7001 2af0 49C1EC05 		shr	r12, 5	# tmp816,
 7002 2af4 4983C401 		add	r12, 1	# tmp819,
 7003 2af8 4901D6   		add	r14, rdx	# _183, prolog_loop_niters.367
 7004 2afb 488D14C3 		lea	rdx, [rbx+rax*8]	# vectp.383,
 7005              	# sieve_extend.c:898:     source_word += distance;
 898:sieve_extend.c ****     copy_word += distance;
 7006              		.loc 1 898 17 view .LVU2400
 7007 2aff 31C0     		xor	eax, eax	# ivtmp.444
 7008 2b01 4183E407 		and	r12d, 7	# tmp820,
 7009 2b05 4E8D0CF3 		lea	r9, [rbx+r14*8]	# vectp.374,
 7010 2b09 0F842801 		je	.L553	#,
 7010      0000
 7011 2b0f 4983FC01 		cmp	r12, 1	# tmp820,
 7012 2b13 0F84F200 		je	.L701	#,
 7012      0000
 7013 2b19 4983FC02 		cmp	r12, 2	# tmp820,
 7014 2b1d 0F84C600 		je	.L702	#,
 7014      0000
 7015 2b23 4983FC03 		cmp	r12, 3	# tmp820,
 7016 2b27 0F849900 		je	.L703	#,
 7016      0000
 7017 2b2d 4983FC04 		cmp	r12, 4	# tmp820,
 7018 2b31 7470     		je	.L704	#,
 7019 2b33 4983FC05 		cmp	r12, 5	# tmp820,
 7020 2b37 7448     		je	.L705	#,
 7021 2b39 4983FC06 		cmp	r12, 6	# tmp820,
 7022 2b3d 7420     		je	.L706	#,
 905:sieve_extend.c ****     }
 7023              		.loc 1 905 9 is_stmt 1 view .LVU2401
 7024              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7025              		.loc 1 905 56 is_stmt 0 view .LVU2402
 7026 2b3f C4C17D6F 		vmovdqa	ymm3, YMMWORD PTR [r9]	# tmp1411, MEM[base: vectp.374_307, index: ivtmp.444_731, offset: 0
 7026      19
 7027 2b44 B8200000 		mov	eax, 32	# ivtmp.444,
 7027      00
 7028              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7029              		.loc 1 905 94 view .LVU2403
 7030 2b49 C4C17E6F 		vmovdqu	ymm4, YMMWORD PTR [r8]	# tmp1412, MEM[base: vectp.378_314, index: ivtmp.444_731, offset: 0
 7030      20
 7031              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7032              		.loc 1 905 56 view .LVU2404
 7033 2b4e C44165D3 		vpsrlq	ymm11, ymm3, xmm10	# vect__38.376, tmp1411, _12
 7033      DA
 7034              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7035              		.loc 1 905 94 view .LVU2405
 7036 2b53 C5DDF3F2 		vpsllq	ymm6, ymm4, xmm2	# vect__43.380, tmp1412, _18
 7037              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
GAS LISTING /tmp/ccjg94QQ.s 			page 199


 905:sieve_extend.c ****     }
 7038              		.loc 1 905 66 view .LVU2406
 7039 2b57 C525EBE6 		vpor	ymm12, ymm11, ymm6	# vect__46.381, vect__38.376, vect__43.380
 7040              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7041              		.loc 1 905 29 view .LVU2407
 7042 2b5b C57E7F22 		vmovdqu	YMMWORD PTR [rdx], ymm12	# MEM[base: vectp.383_323, index: ivtmp.444_731, offset: 0B], vec
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7043              		.loc 1 904 43 is_stmt 1 view .LVU2408
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7044              		.loc 1 904 11 view .LVU2409
 7045              	.L706:
 905:sieve_extend.c ****     }
 7046              		.loc 1 905 9 view .LVU2410
 7047              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7048              		.loc 1 905 56 is_stmt 0 view .LVU2411
 7049 2b5f C4417D6F 		vmovdqa	ymm13, YMMWORD PTR [r9+rax]	# tmp1413, MEM[base: vectp.374_307, index: ivtmp.444_731, offs
 7049      2C01
 7050              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7051              		.loc 1 905 94 view .LVU2412
 7052 2b65 C4417E6F 		vmovdqu	ymm15, YMMWORD PTR [r8+rax]	# tmp1414, MEM[base: vectp.378_314, index: ivtmp.444_731, offs
 7052      3C00
 7053              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7054              		.loc 1 905 56 view .LVU2413
 7055 2b6b C44115D3 		vpsrlq	ymm14, ymm13, xmm10	# vect__38.376, tmp1413, _12
 7055      F2
 7056              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7057              		.loc 1 905 94 view .LVU2414
 7058 2b70 C585F3CA 		vpsllq	ymm1, ymm15, xmm2	# vect__43.380, tmp1414, _18
 7059              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7060              		.loc 1 905 66 view .LVU2415
 7061 2b74 C50DEBC1 		vpor	ymm8, ymm14, ymm1	# vect__46.381, vect__38.376, vect__43.380
 7062              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7063              		.loc 1 905 29 view .LVU2416
 7064 2b78 C57E7F04 		vmovdqu	YMMWORD PTR [rdx+rax], ymm8	# MEM[base: vectp.383_323, index: ivtmp.444_731, offset: 0B], 
 7064      02
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7065              		.loc 1 904 43 is_stmt 1 view .LVU2417
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7066              		.loc 1 904 11 view .LVU2418
 7067 2b7d 4883C020 		add	rax, 32	# ivtmp.444,
 7068              	.L705:
 905:sieve_extend.c ****     }
 7069              		.loc 1 905 9 view .LVU2419
 7070              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7071              		.loc 1 905 56 is_stmt 0 view .LVU2420
 7072 2b81 C4C17D6F 		vmovdqa	ymm0, YMMWORD PTR [r9+rax]	# tmp1415, MEM[base: vectp.374_307, index: ivtmp.444_731, offse
 7072      0401
 7073              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
GAS LISTING /tmp/ccjg94QQ.s 			page 200


 7074              		.loc 1 905 94 view .LVU2421
 7075 2b87 C4417E6F 		vmovdqu	ymm9, YMMWORD PTR [r8+rax]	# tmp1416, MEM[base: vectp.378_314, index: ivtmp.444_731, offse
 7075      0C00
 7076              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7077              		.loc 1 905 56 view .LVU2422
 7078 2b8d C4C17DD3 		vpsrlq	ymm5, ymm0, xmm10	# vect__38.376, tmp1415, _12
 7078      EA
 7079              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7080              		.loc 1 905 94 view .LVU2423
 7081 2b92 C5B5F3FA 		vpsllq	ymm7, ymm9, xmm2	# vect__43.380, tmp1416, _18
 7082              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7083              		.loc 1 905 66 view .LVU2424
 7084 2b96 C5D5EBDF 		vpor	ymm3, ymm5, ymm7	# vect__46.381, vect__38.376, vect__43.380
 7085              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7086              		.loc 1 905 29 view .LVU2425
 7087 2b9a C5FE7F1C 		vmovdqu	YMMWORD PTR [rdx+rax], ymm3	# MEM[base: vectp.383_323, index: ivtmp.444_731, offset: 0B], 
 7087      02
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7088              		.loc 1 904 43 is_stmt 1 view .LVU2426
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7089              		.loc 1 904 11 view .LVU2427
 7090 2b9f 4883C020 		add	rax, 32	# ivtmp.444,
 7091              	.L704:
 905:sieve_extend.c ****     }
 7092              		.loc 1 905 9 view .LVU2428
 7093              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7094              		.loc 1 905 56 is_stmt 0 view .LVU2429
 7095 2ba3 C4417D6F 		vmovdqa	ymm11, YMMWORD PTR [r9+rax]	# tmp1417, MEM[base: vectp.374_307, index: ivtmp.444_731, offs
 7095      1C01
 7096              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7097              		.loc 1 905 94 view .LVU2430
 7098 2ba9 C4C17E6F 		vmovdqu	ymm6, YMMWORD PTR [r8+rax]	# tmp1418, MEM[base: vectp.378_314, index: ivtmp.444_731, offse
 7098      3400
 7099              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7100              		.loc 1 905 56 view .LVU2431
 7101 2baf C4C125D3 		vpsrlq	ymm4, ymm11, xmm10	# vect__38.376, tmp1417, _12
 7101      E2
 7102              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7103              		.loc 1 905 94 view .LVU2432
 7104 2bb4 C54DF3E2 		vpsllq	ymm12, ymm6, xmm2	# vect__43.380, tmp1418, _18
 7105              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7106              		.loc 1 905 66 view .LVU2433
 7107 2bb8 C4415DEB 		vpor	ymm13, ymm4, ymm12	# vect__46.381, vect__38.376, vect__43.380
 7107      EC
 7108              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7109              		.loc 1 905 29 view .LVU2434
 7110 2bbd C57E7F2C 		vmovdqu	YMMWORD PTR [rdx+rax], ymm13	# MEM[base: vectp.383_323, index: ivtmp.444_731, offset: 0B],
GAS LISTING /tmp/ccjg94QQ.s 			page 201


 7110      02
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7111              		.loc 1 904 43 is_stmt 1 view .LVU2435
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7112              		.loc 1 904 11 view .LVU2436
 7113 2bc2 4883C020 		add	rax, 32	# ivtmp.444,
 7114              	.L703:
 905:sieve_extend.c ****     }
 7115              		.loc 1 905 9 view .LVU2437
 7116              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7117              		.loc 1 905 56 is_stmt 0 view .LVU2438
 7118 2bc6 C4417D6F 		vmovdqa	ymm14, YMMWORD PTR [r9+rax]	# tmp1419, MEM[base: vectp.374_307, index: ivtmp.444_731, offs
 7118      3401
 7119              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7120              		.loc 1 905 94 view .LVU2439
 7121 2bcc C4C17E6F 		vmovdqu	ymm1, YMMWORD PTR [r8+rax]	# tmp1420, MEM[base: vectp.378_314, index: ivtmp.444_731, offse
 7121      0C00
 7122              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7123              		.loc 1 905 56 view .LVU2440
 7124 2bd2 C4410DD3 		vpsrlq	ymm15, ymm14, xmm10	# vect__38.376, tmp1419, _12
 7124      FA
 7125              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7126              		.loc 1 905 94 view .LVU2441
 7127 2bd7 C575F3C2 		vpsllq	ymm8, ymm1, xmm2	# vect__43.380, tmp1420, _18
 7128              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7129              		.loc 1 905 66 view .LVU2442
 7130 2bdb C4C105EB 		vpor	ymm0, ymm15, ymm8	# vect__46.381, vect__38.376, vect__43.380
 7130      C0
 7131              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7132              		.loc 1 905 29 view .LVU2443
 7133 2be0 C5FE7F04 		vmovdqu	YMMWORD PTR [rdx+rax], ymm0	# MEM[base: vectp.383_323, index: ivtmp.444_731, offset: 0B], 
 7133      02
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7134              		.loc 1 904 43 is_stmt 1 view .LVU2444
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7135              		.loc 1 904 11 view .LVU2445
 7136 2be5 4883C020 		add	rax, 32	# ivtmp.444,
 7137              	.L702:
 905:sieve_extend.c ****     }
 7138              		.loc 1 905 9 view .LVU2446
 7139              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7140              		.loc 1 905 56 is_stmt 0 view .LVU2447
 7141 2be9 C4C17D6F 		vmovdqa	ymm5, YMMWORD PTR [r9+rax]	# tmp1421, MEM[base: vectp.374_307, index: ivtmp.444_731, offse
 7141      2C01
 7142              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7143              		.loc 1 905 94 view .LVU2448
 7144 2bef C4C17E6F 		vmovdqu	ymm7, YMMWORD PTR [r8+rax]	# tmp1422, MEM[base: vectp.378_314, index: ivtmp.444_731, offse
 7144      3C00
 7145              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
GAS LISTING /tmp/ccjg94QQ.s 			page 202


 905:sieve_extend.c ****     }
 7146              		.loc 1 905 56 view .LVU2449
 7147 2bf5 C44155D3 		vpsrlq	ymm9, ymm5, xmm10	# vect__38.376, tmp1421, _12
 7147      CA
 7148              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7149              		.loc 1 905 94 view .LVU2450
 7150 2bfa C5C5F3DA 		vpsllq	ymm3, ymm7, xmm2	# vect__43.380, tmp1422, _18
 7151              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7152              		.loc 1 905 66 view .LVU2451
 7153 2bfe C535EBDB 		vpor	ymm11, ymm9, ymm3	# vect__46.381, vect__38.376, vect__43.380
 7154              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7155              		.loc 1 905 29 view .LVU2452
 7156 2c02 C57E7F1C 		vmovdqu	YMMWORD PTR [rdx+rax], ymm11	# MEM[base: vectp.383_323, index: ivtmp.444_731, offset: 0B],
 7156      02
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7157              		.loc 1 904 43 is_stmt 1 view .LVU2453
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7158              		.loc 1 904 11 view .LVU2454
 7159 2c07 4883C020 		add	rax, 32	# ivtmp.444,
 7160              	.L701:
 905:sieve_extend.c ****     }
 7161              		.loc 1 905 9 view .LVU2455
 7162              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7163              		.loc 1 905 56 is_stmt 0 view .LVU2456
 7164 2c0b C4C17D6F 		vmovdqa	ymm4, YMMWORD PTR [r9+rax]	# tmp1423, MEM[base: vectp.374_307, index: ivtmp.444_731, offse
 7164      2401
 7165              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7166              		.loc 1 905 94 view .LVU2457
 7167 2c11 C4417E6F 		vmovdqu	ymm12, YMMWORD PTR [r8+rax]	# tmp1424, MEM[base: vectp.378_314, index: ivtmp.444_731, offs
 7167      2400
 7168              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7169              		.loc 1 905 56 view .LVU2458
 7170 2c17 C4C15DD3 		vpsrlq	ymm6, ymm4, xmm10	# vect__38.376, tmp1423, _12
 7170      F2
 7171              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7172              		.loc 1 905 94 view .LVU2459
 7173 2c1c C51DF3EA 		vpsllq	ymm13, ymm12, xmm2	# vect__43.380, tmp1424, _18
 7174              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7175              		.loc 1 905 66 view .LVU2460
 7176 2c20 C4414DEB 		vpor	ymm14, ymm6, ymm13	# vect__46.381, vect__38.376, vect__43.380
 7176      F5
 7177              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7178              		.loc 1 905 29 view .LVU2461
 7179 2c25 C57E7F34 		vmovdqu	YMMWORD PTR [rdx+rax], ymm14	# MEM[base: vectp.383_323, index: ivtmp.444_731, offset: 0B],
 7179      02
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7180              		.loc 1 904 43 is_stmt 1 view .LVU2462
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
GAS LISTING /tmp/ccjg94QQ.s 			page 203


 7181              		.loc 1 904 11 view .LVU2463
 7182 2c2a 4883C020 		add	rax, 32	# ivtmp.444,
 7183 2c2e 4C39D8   		cmp	rax, r11	# ivtmp.444, _733
 7184 2c31 0F843B01 		je	.L782	#,
 7184      0000
 7185              	.L553:
 905:sieve_extend.c ****     }
 7186              		.loc 1 905 9 discriminator 2 view .LVU2464
 7187              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7188              		.loc 1 905 56 is_stmt 0 discriminator 2 view .LVU2465
 7189 2c37 C4417D6F 		vmovdqa	ymm15, YMMWORD PTR [r9+rax]	# tmp1348, MEM[base: vectp.374_307, index: ivtmp.444_731, offs
 7189      3C01
 7190              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7191              		.loc 1 905 94 discriminator 2 view .LVU2466
 7192 2c3d C4417E6F 		vmovdqu	ymm8, YMMWORD PTR [r8+rax]	# tmp1349, MEM[base: vectp.378_314, index: ivtmp.444_731, offse
 7192      0400
 7193              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7194              		.loc 1 905 56 discriminator 2 view .LVU2467
 7195 2c43 C4C105D3 		vpsrlq	ymm1, ymm15, xmm10	# vect__38.376, tmp1348, _12
 7195      CA
 7196              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7197              		.loc 1 905 94 discriminator 2 view .LVU2468
 7198 2c48 C5BDF3C2 		vpsllq	ymm0, ymm8, xmm2	# vect__43.380, tmp1349, _18
 7199              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7200              		.loc 1 905 66 discriminator 2 view .LVU2469
 7201 2c4c C5F5EBE8 		vpor	ymm5, ymm1, ymm0	# vect__46.381, vect__38.376, vect__43.380
 7202              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7203              		.loc 1 905 29 discriminator 2 view .LVU2470
 7204 2c50 C5FE7F2C 		vmovdqu	YMMWORD PTR [rdx+rax], ymm5	# MEM[base: vectp.383_323, index: ivtmp.444_731, offset: 0B], 
 7204      02
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7205              		.loc 1 904 43 is_stmt 1 discriminator 2 view .LVU2471
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7206              		.loc 1 904 11 discriminator 2 view .LVU2472
 905:sieve_extend.c ****     }
 7207              		.loc 1 905 9 discriminator 2 view .LVU2473
 7208              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7209              		.loc 1 905 56 is_stmt 0 discriminator 2 view .LVU2474
 7210 2c55 C4417D6F 		vmovdqa	ymm9, YMMWORD PTR 32[r9+rax]	# tmp1350, MEM[base: vectp.374_307, index: ivtmp.444_731, off
 7210      4C0120
 7211              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7212              		.loc 1 905 94 discriminator 2 view .LVU2475
 7213 2c5c C4C17E6F 		vmovdqu	ymm7, YMMWORD PTR 32[r8+rax]	# tmp1351, MEM[base: vectp.378_314, index: ivtmp.444_731, off
 7213      7C0020
 7214              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7215              		.loc 1 905 56 discriminator 2 view .LVU2476
 7216 2c63 C44135D3 		vpsrlq	ymm11, ymm9, xmm10	# vect__38.376, tmp1350, _12
 7216      DA
GAS LISTING /tmp/ccjg94QQ.s 			page 204


 7217              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7218              		.loc 1 905 94 discriminator 2 view .LVU2477
 7219 2c68 C5C5F3DA 		vpsllq	ymm3, ymm7, xmm2	# vect__43.380, tmp1351, _18
 7220              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7221              		.loc 1 905 66 discriminator 2 view .LVU2478
 7222 2c6c C5A5EBE3 		vpor	ymm4, ymm11, ymm3	# vect__46.381, vect__38.376, vect__43.380
 7223              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7224              		.loc 1 905 29 discriminator 2 view .LVU2479
 7225 2c70 C5FE7F64 		vmovdqu	YMMWORD PTR 32[rdx+rax], ymm4	# MEM[base: vectp.383_323, index: ivtmp.444_731, offset: 0B]
 7225      0220
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7226              		.loc 1 904 43 is_stmt 1 discriminator 2 view .LVU2480
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7227              		.loc 1 904 11 discriminator 2 view .LVU2481
 905:sieve_extend.c ****     }
 7228              		.loc 1 905 9 discriminator 2 view .LVU2482
 7229              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7230              		.loc 1 905 56 is_stmt 0 discriminator 2 view .LVU2483
 7231 2c76 C4C17D6F 		vmovdqa	ymm6, YMMWORD PTR 64[r9+rax]	# tmp1352, MEM[base: vectp.374_307, index: ivtmp.444_731, off
 7231      740140
 7232              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7233              		.loc 1 905 94 discriminator 2 view .LVU2484
 7234 2c7d C4417E6F 		vmovdqu	ymm13, YMMWORD PTR 64[r8+rax]	# tmp1353, MEM[base: vectp.378_314, index: ivtmp.444_731, of
 7234      6C0040
 7235              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7236              		.loc 1 905 56 discriminator 2 view .LVU2485
 7237 2c84 C4414DD3 		vpsrlq	ymm12, ymm6, xmm10	# vect__38.376, tmp1352, _12
 7237      E2
 7238              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7239              		.loc 1 905 94 discriminator 2 view .LVU2486
 7240 2c89 C515F3F2 		vpsllq	ymm14, ymm13, xmm2	# vect__43.380, tmp1353, _18
 7241              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7242              		.loc 1 905 66 discriminator 2 view .LVU2487
 7243 2c8d C4411DEB 		vpor	ymm15, ymm12, ymm14	# vect__46.381, vect__38.376, vect__43.380
 7243      FE
 7244              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7245              		.loc 1 905 29 discriminator 2 view .LVU2488
 7246 2c92 C57E7F7C 		vmovdqu	YMMWORD PTR 64[rdx+rax], ymm15	# MEM[base: vectp.383_323, index: ivtmp.444_731, offset: 0B
 7246      0240
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7247              		.loc 1 904 43 is_stmt 1 discriminator 2 view .LVU2489
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7248              		.loc 1 904 11 discriminator 2 view .LVU2490
 905:sieve_extend.c ****     }
 7249              		.loc 1 905 9 discriminator 2 view .LVU2491
 7250              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7251              		.loc 1 905 56 is_stmt 0 discriminator 2 view .LVU2492
GAS LISTING /tmp/ccjg94QQ.s 			page 205


 7252 2c98 C4C17D6F 		vmovdqa	ymm1, YMMWORD PTR 96[r9+rax]	# tmp1354, MEM[base: vectp.374_307, index: ivtmp.444_731, off
 7252      4C0160
 7253              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7254              		.loc 1 905 94 discriminator 2 view .LVU2493
 7255 2c9f C4C17E6F 		vmovdqu	ymm0, YMMWORD PTR 96[r8+rax]	# tmp1355, MEM[base: vectp.378_314, index: ivtmp.444_731, off
 7255      440060
 7256              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7257              		.loc 1 905 56 discriminator 2 view .LVU2494
 7258 2ca6 C44175D3 		vpsrlq	ymm8, ymm1, xmm10	# vect__38.376, tmp1354, _12
 7258      C2
 7259              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7260              		.loc 1 905 94 discriminator 2 view .LVU2495
 7261 2cab C5FDF3EA 		vpsllq	ymm5, ymm0, xmm2	# vect__43.380, tmp1355, _18
 7262              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7263              		.loc 1 905 66 discriminator 2 view .LVU2496
 7264 2caf C53DEBCD 		vpor	ymm9, ymm8, ymm5	# vect__46.381, vect__38.376, vect__43.380
 7265              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7266              		.loc 1 905 29 discriminator 2 view .LVU2497
 7267 2cb3 C57E7F4C 		vmovdqu	YMMWORD PTR 96[rdx+rax], ymm9	# MEM[base: vectp.383_323, index: ivtmp.444_731, offset: 0B]
 7267      0260
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7268              		.loc 1 904 43 is_stmt 1 discriminator 2 view .LVU2498
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7269              		.loc 1 904 11 discriminator 2 view .LVU2499
 905:sieve_extend.c ****     }
 7270              		.loc 1 905 9 discriminator 2 view .LVU2500
 7271              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7272              		.loc 1 905 56 is_stmt 0 discriminator 2 view .LVU2501
 7273 2cb9 C4417D6F 		vmovdqa	ymm11, YMMWORD PTR 128[r9+rax]	# tmp1356, MEM[base: vectp.374_307, index: ivtmp.444_731, o
 7273      9C018000 
 7273      0000
 7274              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7275              		.loc 1 905 94 discriminator 2 view .LVU2502
 7276 2cc3 C4C17E6F 		vmovdqu	ymm7, YMMWORD PTR 128[r8+rax]	# tmp1357, MEM[base: vectp.378_314, index: ivtmp.444_731, of
 7276      BC008000 
 7276      0000
 7277              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7278              		.loc 1 905 56 discriminator 2 view .LVU2503
 7279 2ccd C4C125D3 		vpsrlq	ymm4, ymm11, xmm10	# vect__38.376, tmp1356, _12
 7279      E2
 7280              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7281              		.loc 1 905 94 discriminator 2 view .LVU2504
 7282 2cd2 C5C5F3DA 		vpsllq	ymm3, ymm7, xmm2	# vect__43.380, tmp1357, _18
 7283              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7284              		.loc 1 905 66 discriminator 2 view .LVU2505
 7285 2cd6 C5DDEBF3 		vpor	ymm6, ymm4, ymm3	# vect__46.381, vect__38.376, vect__43.380
 7286              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
GAS LISTING /tmp/ccjg94QQ.s 			page 206


 905:sieve_extend.c ****     }
 7287              		.loc 1 905 29 discriminator 2 view .LVU2506
 7288 2cda C5FE7FB4 		vmovdqu	YMMWORD PTR 128[rdx+rax], ymm6	# MEM[base: vectp.383_323, index: ivtmp.444_731, offset: 0B
 7288      02800000 
 7288      00
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7289              		.loc 1 904 43 is_stmt 1 discriminator 2 view .LVU2507
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7290              		.loc 1 904 11 discriminator 2 view .LVU2508
 905:sieve_extend.c ****     }
 7291              		.loc 1 905 9 discriminator 2 view .LVU2509
 7292              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7293              		.loc 1 905 56 is_stmt 0 discriminator 2 view .LVU2510
 7294 2ce3 C4417D6F 		vmovdqa	ymm12, YMMWORD PTR 160[r9+rax]	# tmp1358, MEM[base: vectp.374_307, index: ivtmp.444_731, o
 7294      A401A000 
 7294      0000
 7295              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7296              		.loc 1 905 94 discriminator 2 view .LVU2511
 7297 2ced C4417E6F 		vmovdqu	ymm14, YMMWORD PTR 160[r8+rax]	# tmp1359, MEM[base: vectp.378_314, index: ivtmp.444_731, o
 7297      B400A000 
 7297      0000
 7298              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7299              		.loc 1 905 56 discriminator 2 view .LVU2512
 7300 2cf7 C4411DD3 		vpsrlq	ymm13, ymm12, xmm10	# vect__38.376, tmp1358, _12
 7300      EA
 7301              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7302              		.loc 1 905 94 discriminator 2 view .LVU2513
 7303 2cfc C50DF3FA 		vpsllq	ymm15, ymm14, xmm2	# vect__43.380, tmp1359, _18
 7304              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7305              		.loc 1 905 66 discriminator 2 view .LVU2514
 7306 2d00 C4C115EB 		vpor	ymm1, ymm13, ymm15	# vect__46.381, vect__38.376, vect__43.380
 7306      CF
 7307              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7308              		.loc 1 905 29 discriminator 2 view .LVU2515
 7309 2d05 C5FE7F8C 		vmovdqu	YMMWORD PTR 160[rdx+rax], ymm1	# MEM[base: vectp.383_323, index: ivtmp.444_731, offset: 0B
 7309      02A00000 
 7309      00
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7310              		.loc 1 904 43 is_stmt 1 discriminator 2 view .LVU2516
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7311              		.loc 1 904 11 discriminator 2 view .LVU2517
 905:sieve_extend.c ****     }
 7312              		.loc 1 905 9 discriminator 2 view .LVU2518
 7313              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7314              		.loc 1 905 56 is_stmt 0 discriminator 2 view .LVU2519
 7315 2d0e C4417D6F 		vmovdqa	ymm8, YMMWORD PTR 192[r9+rax]	# tmp1360, MEM[base: vectp.374_307, index: ivtmp.444_731, of
 7315      8401C000 
 7315      0000
 7316              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
GAS LISTING /tmp/ccjg94QQ.s 			page 207


 7317              		.loc 1 905 94 discriminator 2 view .LVU2520
 7318 2d18 C4C17E6F 		vmovdqu	ymm5, YMMWORD PTR 192[r8+rax]	# tmp1361, MEM[base: vectp.378_314, index: ivtmp.444_731, of
 7318      AC00C000 
 7318      0000
 7319              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7320              		.loc 1 905 56 discriminator 2 view .LVU2521
 7321 2d22 C4C13DD3 		vpsrlq	ymm0, ymm8, xmm10	# vect__38.376, tmp1360, _12
 7321      C2
 7322              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7323              		.loc 1 905 94 discriminator 2 view .LVU2522
 7324 2d27 C555F3CA 		vpsllq	ymm9, ymm5, xmm2	# vect__43.380, tmp1361, _18
 7325              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7326              		.loc 1 905 66 discriminator 2 view .LVU2523
 7327 2d2b C4417DEB 		vpor	ymm11, ymm0, ymm9	# vect__46.381, vect__38.376, vect__43.380
 7327      D9
 7328              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7329              		.loc 1 905 29 discriminator 2 view .LVU2524
 7330 2d30 C57E7F9C 		vmovdqu	YMMWORD PTR 192[rdx+rax], ymm11	# MEM[base: vectp.383_323, index: ivtmp.444_731, offset: 0
 7330      02C00000 
 7330      00
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7331              		.loc 1 904 43 is_stmt 1 discriminator 2 view .LVU2525
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7332              		.loc 1 904 11 discriminator 2 view .LVU2526
 905:sieve_extend.c ****     }
 7333              		.loc 1 905 9 discriminator 2 view .LVU2527
 7334              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7335              		.loc 1 905 56 is_stmt 0 discriminator 2 view .LVU2528
 7336 2d39 C4C17D6F 		vmovdqa	ymm4, YMMWORD PTR 224[r9+rax]	# tmp1362, MEM[base: vectp.374_307, index: ivtmp.444_731, of
 7336      A401E000 
 7336      0000
 7337              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7338              		.loc 1 905 94 discriminator 2 view .LVU2529
 7339 2d43 C4C17E6F 		vmovdqu	ymm7, YMMWORD PTR 224[r8+rax]	# tmp1363, MEM[base: vectp.378_314, index: ivtmp.444_731, of
 7339      BC00E000 
 7339      0000
 7340              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7341              		.loc 1 905 56 discriminator 2 view .LVU2530
 7342 2d4d C4C15DD3 		vpsrlq	ymm6, ymm4, xmm10	# vect__38.376, tmp1362, _12
 7342      F2
 7343              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7344              		.loc 1 905 94 discriminator 2 view .LVU2531
 7345 2d52 C5C5F3DA 		vpsllq	ymm3, ymm7, xmm2	# vect__43.380, tmp1363, _18
 7346              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7347              		.loc 1 905 66 discriminator 2 view .LVU2532
 7348 2d56 C54DEBE3 		vpor	ymm12, ymm6, ymm3	# vect__46.381, vect__38.376, vect__43.380
 7349              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
GAS LISTING /tmp/ccjg94QQ.s 			page 208


 7350              		.loc 1 905 29 discriminator 2 view .LVU2533
 7351 2d5a C57E7FA4 		vmovdqu	YMMWORD PTR 224[rdx+rax], ymm12	# MEM[base: vectp.383_323, index: ivtmp.444_731, offset: 0
 7351      02E00000 
 7351      00
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7352              		.loc 1 904 43 is_stmt 1 discriminator 2 view .LVU2534
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7353              		.loc 1 904 11 discriminator 2 view .LVU2535
 7354 2d63 48050001 		add	rax, 256	# ivtmp.444,
 7354      0000
 7355 2d69 4C39D8   		cmp	rax, r11	# ivtmp.444, _733
 7356 2d6c 0F85C5FE 		jne	.L553	#,
 7356      FFFF
 7357              	.L782:
 7358 2d72 4989FE   		mov	r14, rdi	# niters_vector_mult_vf.370, niters.368
 7359 2d75 4983E6FC 		and	r14, -4	# niters_vector_mult_vf.370,
 7360 2d79 4C01F1   		add	rcx, r14	# tmp.371, niters_vector_mult_vf.370
 7361 2d7c 4C01F6   		add	rsi, r14	# tmp.372, niters_vector_mult_vf.370
 7362 2d7f 4C39F7   		cmp	rdi, r14	# niters.368, niters_vector_mult_vf.370
 7363 2d82 7461     		je	.L556	#,
 7364              	.LVL349:
 905:sieve_extend.c ****     }
 7365              		.loc 1 905 9 view .LVU2536
 7366              	# sieve_extend.c:904:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7367              		.loc 1 904 5 is_stmt 0 view .LVU2537
 7368 2d84 4C8B5C24 		mov	r11, QWORD PTR 64[rsp]	# aligned_copy_word, %sfp
 7368      40
 7369              	# sieve_extend.c:904:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7370              		.loc 1 904 52 view .LVU2538
 7371 2d89 488D5601 		lea	rdx, 1[rsi]	# copy_word,
 7372              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7373              		.loc 1 905 94 view .LVU2539
 7374 2d8d C46281F7 		shlx	r9, QWORD PTR 8[rbx+rcx*8], r15	# tmp734, *_133, shift_flipped
 7374      4CCB08
 7375              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7376              		.loc 1 905 56 view .LVU2540
 7377 2d94 C46293F7 		shrx	r8, QWORD PTR [rbx+rcx*8], r13	# tmp736, *_82, shift
 7377      04CB
 7378              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7379              		.loc 1 905 66 view .LVU2541
 7380 2d9a 4D09C1   		or	r9, r8	# tmp738, tmp736
 7381              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7382              		.loc 1 905 77 view .LVU2542
 7383 2d9d 488D7901 		lea	rdi, 1[rcx]	# _301,
 7384              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7385              		.loc 1 905 66 view .LVU2543
 7386 2da1 4C890CF3 		mov	QWORD PTR [rbx+rsi*8], r9	# *_55, tmp738
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7387              		.loc 1 904 43 is_stmt 1 view .LVU2544
 7388              	.LVL350:
GAS LISTING /tmp/ccjg94QQ.s 			page 209


 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7389              		.loc 1 904 11 view .LVU2545
 7390              	# sieve_extend.c:904:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7391              		.loc 1 904 5 is_stmt 0 view .LVU2546
 7392 2da5 4939D3   		cmp	r11, rdx	# aligned_copy_word, copy_word
 7393 2da8 723B     		jb	.L556	#,
 905:sieve_extend.c ****     }
 7394              		.loc 1 905 9 is_stmt 1 view .LVU2547
 7395              	# sieve_extend.c:904:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7396              		.loc 1 904 52 is_stmt 0 view .LVU2548
 7397 2daa 4883C602 		add	rsi, 2	# copy_word,
 7398              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7399              		.loc 1 905 94 view .LVU2549
 7400 2dae C46281F7 		shlx	r12, QWORD PTR 8[rbx+rdi*8], r15	# tmp739, *_555, shift_flipped
 7400      64FB08
 7401              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7402              		.loc 1 905 56 view .LVU2550
 7403 2db5 488B04FB 		mov	rax, QWORD PTR [rbx+rdi*8]	# *_122, *_122
 7404              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7405              		.loc 1 905 77 view .LVU2551
 7406 2db9 4883C102 		add	rcx, 2	# _78,
 7407              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7408              		.loc 1 905 56 view .LVU2552
 7409 2dbd C46293F7 		shrx	r14, rax, r13	# tmp741, *_122, shift
 7409      F0
 7410              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7411              		.loc 1 905 66 view .LVU2553
 7412 2dc2 4D09F4   		or	r12, r14	# tmp743, tmp741
 7413 2dc5 4C8924D3 		mov	QWORD PTR [rbx+rdx*8], r12	# *_559, tmp743
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7414              		.loc 1 904 43 is_stmt 1 view .LVU2554
 7415              	.LVL351:
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7416              		.loc 1 904 11 view .LVU2555
 7417              	# sieve_extend.c:904:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7418              		.loc 1 904 5 is_stmt 0 view .LVU2556
 7419 2dc9 4939F3   		cmp	r11, rsi	# aligned_copy_word, copy_word
 7420 2dcc 7217     		jb	.L556	#,
 905:sieve_extend.c ****     }
 7421              		.loc 1 905 9 is_stmt 1 view .LVU2557
 7422              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7423              		.loc 1 905 94 is_stmt 0 view .LVU2558
 7424 2dce C46281F7 		shlx	r15, QWORD PTR 8[rbx+rcx*8], r15	# tmp744, *_293, shift_flipped
 7424      7CCB08
 7425              	.LVL352:
 7426              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7427              		.loc 1 905 56 view .LVU2559
GAS LISTING /tmp/ccjg94QQ.s 			page 210


 7428 2dd5 488B0CCB 		mov	rcx, QWORD PTR [rbx+rcx*8]	# *_288, *_288
 7429              	.LVL353:
 905:sieve_extend.c ****     }
 7430              		.loc 1 905 56 view .LVU2560
 7431 2dd9 C46293F7 		shrx	r13, rcx, r13	# tmp746, *_288, shift
 7431      E9
 7432              	.LVL354:
 7433              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 7434              		.loc 1 905 66 view .LVU2561
 7435 2dde 4D09EF   		or	r15, r13	# tmp748, tmp746
 7436 2de1 4C893CF3 		mov	QWORD PTR [rbx+rsi*8], r15	# *_297, tmp748
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7437              		.loc 1 904 43 is_stmt 1 view .LVU2562
 7438              	.LVL355:
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7439              		.loc 1 904 11 view .LVU2563
 7440              	.L556:
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7441              		.loc 1 904 11 is_stmt 0 view .LVU2564
 7442 2de5 4C89D0   		mov	rax, r10	# ivtmp.428, ivtmp.428
 7443              	.L549:
 908:sieve_extend.c **** 
 7444              		.loc 1 908 5 is_stmt 1 view .LVU2565
 7445              	# sieve_extend.c:908:     if (copy_word >= destination_stop_word) return;
 908:sieve_extend.c **** 
 7446              		.loc 1 908 8 is_stmt 0 view .LVU2566
 7447 2de8 4C8B4424 		mov	r8, QWORD PTR 80[rsp]	# destination_stop_word, %sfp
 7447      50
 7448 2ded 4939C0   		cmp	r8, rax	# destination_stop_word, ivtmp.428
 7449 2df0 0F86B304 		jbe	.L804	#,
 7449      0000
 910:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 7450              		.loc 1 910 5 is_stmt 1 view .LVU2567
 7451              	# sieve_extend.c:910:     source_word = copy_word - size; // recalibrate
 910:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 7452              		.loc 1 910 17 is_stmt 0 view .LVU2568
 7453 2df6 488B7424 		mov	rsi, QWORD PTR 24[rsp]	# size, %sfp
 7453      18
 7454 2dfb 4989C5   		mov	r13, rax	# source_word, ivtmp.428
 7455              	# sieve_extend.c:914:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 914:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7456              		.loc 1 914 21 view .LVU2569
 7457 2dfe 488D0C06 		lea	rcx, [rsi+rax]	# ivtmp.428,
 7458              	# sieve_extend.c:910:     source_word = copy_word - size; // recalibrate
 910:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 7459              		.loc 1 910 17 view .LVU2570
 7460 2e02 4929F5   		sub	r13, rsi	# source_word, size
 7461              	.LVL356:
 911:sieve_extend.c **** 
 7462              		.loc 1 911 5 is_stmt 1 view .LVU2571
 7463              	# sieve_extend.c:914:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 914:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7464              		.loc 1 914 5 is_stmt 0 view .LVU2572
 7465 2e05 4939C8   		cmp	r8, rcx	# destination_stop_word, ivtmp.428
 7466              	# sieve_extend.c:911:     const size_t memsize = (size_t)size*sizeof(bitword_t);
 911:sieve_extend.c **** 
GAS LISTING /tmp/ccjg94QQ.s 			page 211


 7467              		.loc 1 911 18 view .LVU2573
 7468 2e08 4C8D34F5 		lea	r14, 0[0+rsi*8]	# memsize,
 7468      00000000 
 7469              	.LVL357:
 914:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7470              		.loc 1 914 5 is_stmt 1 view .LVU2574
 914:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7471              		.loc 1 914 11 view .LVU2575
 7472              	# sieve_extend.c:914:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 914:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7473              		.loc 1 914 5 is_stmt 0 view .LVU2576
 7474 2e10 0F825F01 		jb	.L558	#,
 7474      0000
 7475 2e16 4C8D24C3 		lea	r12, [rbx+rax*8]	# tmp761,
 7476 2e1a 488D04CD 		lea	rax, 0[0+rcx*8]	# tmp762,
 7476      00000000 
 7477              	# sieve_extend.c:915:         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 915:sieve_extend.c **** 
 7478              		.loc 1 915 38 view .LVU2577
 7479 2e22 4E8D3CEB 		lea	r15, [rbx+r13*8]	# _48,
 7480 2e26 4929C4   		sub	r12, rax	# _711, tmp762
 7481 2e29 4C896C24 		mov	QWORD PTR 72[rsp], r13	# %sfp, source_word
 7481      48
 7482 2e2e 4989F5   		mov	r13, rsi	# size, size
 7483              	.LVL358:
 915:sieve_extend.c **** 
 7484              		.loc 1 915 38 view .LVU2578
 7485 2e31 48895C24 		mov	QWORD PTR 64[rsp], rbx	# %sfp, bitarray
 7485      40
 7486              	.LVL359:
 915:sieve_extend.c **** 
 7487              		.loc 1 915 38 view .LVU2579
 7488 2e36 4C89C3   		mov	rbx, r8	# destination_stop_word, destination_stop_word
 7489              	.LVL360:
 915:sieve_extend.c **** 
 7490              		.loc 1 915 38 view .LVU2580
 7491 2e39 C5F877   		vzeroupper
 7492              	.L559:
 915:sieve_extend.c **** 
 7493              		.loc 1 915 9 is_stmt 1 discriminator 2 view .LVU2581
 7494              	.LVL361:
 7495              	.LBB384:
 7496              	.LBI384:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7497              		.loc 2 31 1 discriminator 2 view .LVU2582
 7498              	.LBB385:
 7499              		.loc 2 34 3 discriminator 2 view .LVU2583
 7500              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 7501              		.loc 2 34 10 is_stmt 0 discriminator 2 view .LVU2584
 7502 2e3c 498D3CCC 		lea	rdi, [r12+rcx*8]	# tmp764,
 7503 2e40 4C89F2   		mov	rdx, r14	#, memsize
 7504 2e43 48894C24 		mov	QWORD PTR 88[rsp], rcx	# %sfp, ivtmp.428
 7504      58
 7505 2e48 4C89FE   		mov	rsi, r15	#, _48
 7506 2e4b E8000000 		call	memcpy@PLT	#
 7506      00
 7507              	.LVL362:
GAS LISTING /tmp/ccjg94QQ.s 			page 212


 7508              		.loc 2 34 10 discriminator 2 view .LVU2585
 7509              	.LBE385:
 7510              	.LBE384:
 914:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7511              		.loc 1 914 54 is_stmt 1 discriminator 2 view .LVU2586
 914:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7512              		.loc 1 914 11 discriminator 2 view .LVU2587
 7513 2e50 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.428, %sfp
 7513      58
 7514 2e55 4A8D0C28 		lea	rcx, [rax+r13]	# ivtmp.428,
 7515              	# sieve_extend.c:914:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 914:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7516              		.loc 1 914 5 is_stmt 0 discriminator 2 view .LVU2588
 7517 2e59 4839CB   		cmp	rbx, rcx	# destination_stop_word, ivtmp.428
 7518 2e5c 0F82FE00 		jb	.L794	#,
 7518      0000
 915:sieve_extend.c **** 
 7519              		.loc 1 915 9 is_stmt 1 view .LVU2589
 7520              	.LVL363:
 7521              	.LBB393:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7522              		.loc 2 31 1 view .LVU2590
 7523              	.LBB386:
 7524              		.loc 2 34 3 view .LVU2591
 7525              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 7526              		.loc 2 34 10 is_stmt 0 view .LVU2592
 7527 2e62 498D3CCC 		lea	rdi, [r12+rcx*8]	# tmp1070,
 7528 2e66 4C89F2   		mov	rdx, r14	#, memsize
 7529 2e69 48894C24 		mov	QWORD PTR 88[rsp], rcx	# %sfp, ivtmp.428
 7529      58
 7530              	.LVL364:
 7531              		.loc 2 34 10 view .LVU2593
 7532 2e6e 4C89FE   		mov	rsi, r15	#, _48
 7533 2e71 E8000000 		call	memcpy@PLT	#
 7533      00
 7534              	.LVL365:
 7535              		.loc 2 34 10 view .LVU2594
 7536              	.LBE386:
 7537              	.LBE393:
 914:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7538              		.loc 1 914 54 is_stmt 1 view .LVU2595
 914:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7539              		.loc 1 914 11 view .LVU2596
 7540 2e76 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.428, %sfp
 7540      58
 7541 2e7b 4E8D0C28 		lea	r9, [rax+r13]	# ivtmp.428,
 7542              	# sieve_extend.c:914:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 914:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7543              		.loc 1 914 5 is_stmt 0 view .LVU2597
 7544 2e7f 4C39CB   		cmp	rbx, r9	# destination_stop_word, ivtmp.428
 7545 2e82 0F82D800 		jb	.L794	#,
 7545      0000
 915:sieve_extend.c **** 
 7546              		.loc 1 915 9 is_stmt 1 view .LVU2598
 7547              	.LVL366:
 7548              	.LBB394:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
GAS LISTING /tmp/ccjg94QQ.s 			page 213


 7549              		.loc 2 31 1 view .LVU2599
 7550              	.LBB387:
 7551              		.loc 2 34 3 view .LVU2600
 7552              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 7553              		.loc 2 34 10 is_stmt 0 view .LVU2601
 7554 2e88 4B8D3CCC 		lea	rdi, [r12+r9*8]	# tmp1073,
 7555 2e8c 4C89F2   		mov	rdx, r14	#, memsize
 7556 2e8f 4C894C24 		mov	QWORD PTR 88[rsp], r9	# %sfp, ivtmp.428
 7556      58
 7557 2e94 4C89FE   		mov	rsi, r15	#, _48
 7558 2e97 E8000000 		call	memcpy@PLT	#
 7558      00
 7559              	.LVL367:
 7560              		.loc 2 34 10 view .LVU2602
 7561              	.LBE387:
 7562              	.LBE394:
 914:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7563              		.loc 1 914 54 is_stmt 1 view .LVU2603
 914:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7564              		.loc 1 914 11 view .LVU2604
 7565 2e9c 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.428, %sfp
 7565      58
 7566 2ea1 4E8D1C28 		lea	r11, [rax+r13]	# ivtmp.428,
 7567              	# sieve_extend.c:914:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 914:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7568              		.loc 1 914 5 is_stmt 0 view .LVU2605
 7569 2ea5 4C39DB   		cmp	rbx, r11	# destination_stop_word, ivtmp.428
 7570 2ea8 0F82B200 		jb	.L794	#,
 7570      0000
 915:sieve_extend.c **** 
 7571              		.loc 1 915 9 is_stmt 1 view .LVU2606
 7572              	.LVL368:
 7573              	.LBB395:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7574              		.loc 2 31 1 view .LVU2607
 7575              	.LBB388:
 7576              		.loc 2 34 3 view .LVU2608
 7577              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 7578              		.loc 2 34 10 is_stmt 0 view .LVU2609
 7579 2eae 4C89F2   		mov	rdx, r14	#, memsize
 7580 2eb1 4B8D3CDC 		lea	rdi, [r12+r11*8]	# tmp1076,
 7581 2eb5 4C895C24 		mov	QWORD PTR 88[rsp], r11	# %sfp, ivtmp.428
 7581      58
 7582 2eba 4C89FE   		mov	rsi, r15	#, _48
 7583 2ebd E8000000 		call	memcpy@PLT	#
 7583      00
 7584              	.LVL369:
 7585              		.loc 2 34 10 view .LVU2610
 7586              	.LBE388:
 7587              	.LBE395:
 914:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7588              		.loc 1 914 54 is_stmt 1 view .LVU2611
 914:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7589              		.loc 1 914 11 view .LVU2612
 7590 2ec2 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.428, %sfp
 7590      58
 7591 2ec7 4A8D1428 		lea	rdx, [rax+r13]	# ivtmp.428,
GAS LISTING /tmp/ccjg94QQ.s 			page 214


 7592              	# sieve_extend.c:914:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 914:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7593              		.loc 1 914 5 is_stmt 0 view .LVU2613
 7594 2ecb 4839D3   		cmp	rbx, rdx	# destination_stop_word, ivtmp.428
 7595 2ece 0F828C00 		jb	.L794	#,
 7595      0000
 915:sieve_extend.c **** 
 7596              		.loc 1 915 9 is_stmt 1 view .LVU2614
 7597              	.LVL370:
 7598              	.LBB396:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7599              		.loc 2 31 1 view .LVU2615
 7600              	.LBB389:
 7601              		.loc 2 34 3 view .LVU2616
 7602              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 7603              		.loc 2 34 10 is_stmt 0 view .LVU2617
 7604 2ed4 498D3CD4 		lea	rdi, [r12+rdx*8]	# tmp1079,
 7605 2ed8 4C89FE   		mov	rsi, r15	#, _48
 7606 2edb 48895424 		mov	QWORD PTR 88[rsp], rdx	# %sfp, ivtmp.428
 7606      58
 7607 2ee0 4C89F2   		mov	rdx, r14	#, memsize
 7608 2ee3 E8000000 		call	memcpy@PLT	#
 7608      00
 7609              	.LVL371:
 7610              		.loc 2 34 10 view .LVU2618
 7611              	.LBE389:
 7612              	.LBE396:
 914:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7613              		.loc 1 914 54 is_stmt 1 view .LVU2619
 914:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7614              		.loc 1 914 11 view .LVU2620
 7615 2ee8 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.428, %sfp
 7615      58
 7616 2eed 4E8D1428 		lea	r10, [rax+r13]	# ivtmp.428,
 7617              	# sieve_extend.c:914:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 914:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7618              		.loc 1 914 5 is_stmt 0 view .LVU2621
 7619 2ef1 4C39D3   		cmp	rbx, r10	# destination_stop_word, ivtmp.428
 7620 2ef4 726A     		jb	.L794	#,
 915:sieve_extend.c **** 
 7621              		.loc 1 915 9 is_stmt 1 view .LVU2622
 7622              	.LVL372:
 7623              	.LBB397:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7624              		.loc 2 31 1 view .LVU2623
 7625              	.LBB390:
 7626              		.loc 2 34 3 view .LVU2624
 7627              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 7628              		.loc 2 34 10 is_stmt 0 view .LVU2625
 7629 2ef6 4B8D3CD4 		lea	rdi, [r12+r10*8]	# tmp1082,
 7630 2efa 4C89F2   		mov	rdx, r14	#, memsize
 7631 2efd 4C895424 		mov	QWORD PTR 88[rsp], r10	# %sfp, ivtmp.428
 7631      58
 7632 2f02 4C89FE   		mov	rsi, r15	#, _48
 7633 2f05 E8000000 		call	memcpy@PLT	#
 7633      00
 7634              	.LVL373:
GAS LISTING /tmp/ccjg94QQ.s 			page 215


 7635              		.loc 2 34 10 view .LVU2626
 7636              	.LBE390:
 7637              	.LBE397:
 914:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7638              		.loc 1 914 54 is_stmt 1 view .LVU2627
 914:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7639              		.loc 1 914 11 view .LVU2628
 7640 2f0a 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.428, %sfp
 7640      58
 7641 2f0f 4E8D0428 		lea	r8, [rax+r13]	# ivtmp.428,
 7642              	# sieve_extend.c:914:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 914:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7643              		.loc 1 914 5 is_stmt 0 view .LVU2629
 7644 2f13 4C39C3   		cmp	rbx, r8	# destination_stop_word, ivtmp.428
 7645 2f16 7248     		jb	.L794	#,
 915:sieve_extend.c **** 
 7646              		.loc 1 915 9 is_stmt 1 view .LVU2630
 7647              	.LVL374:
 7648              	.LBB398:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7649              		.loc 2 31 1 view .LVU2631
 7650              	.LBB391:
 7651              		.loc 2 34 3 view .LVU2632
 7652              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 7653              		.loc 2 34 10 is_stmt 0 view .LVU2633
 7654 2f18 4C89FE   		mov	rsi, r15	#, _48
 7655 2f1b 4B8D3CC4 		lea	rdi, [r12+r8*8]	# tmp1085,
 7656 2f1f 4C894424 		mov	QWORD PTR 88[rsp], r8	# %sfp, ivtmp.428
 7656      58
 7657 2f24 4C89F2   		mov	rdx, r14	#, memsize
 7658 2f27 E8000000 		call	memcpy@PLT	#
 7658      00
 7659              	.LVL375:
 7660              		.loc 2 34 10 view .LVU2634
 7661              	.LBE391:
 7662              	.LBE398:
 914:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7663              		.loc 1 914 54 is_stmt 1 view .LVU2635
 914:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7664              		.loc 1 914 11 view .LVU2636
 7665 2f2c 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.428, %sfp
 7665      58
 7666 2f31 4A8D3428 		lea	rsi, [rax+r13]	# ivtmp.428,
 7667              	# sieve_extend.c:914:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 914:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7668              		.loc 1 914 5 is_stmt 0 view .LVU2637
 7669 2f35 4839F3   		cmp	rbx, rsi	# destination_stop_word, ivtmp.428
 7670 2f38 7226     		jb	.L794	#,
 915:sieve_extend.c **** 
 7671              		.loc 1 915 9 is_stmt 1 view .LVU2638
 7672              	.LVL376:
 7673              	.LBB399:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7674              		.loc 2 31 1 view .LVU2639
 7675              	.LBB392:
 7676              		.loc 2 34 3 view .LVU2640
 7677              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
GAS LISTING /tmp/ccjg94QQ.s 			page 216


 7678              		.loc 2 34 10 is_stmt 0 view .LVU2641
 7679 2f3a 498D3CF4 		lea	rdi, [r12+rsi*8]	# tmp1088,
 7680 2f3e 4C89F2   		mov	rdx, r14	#, memsize
 7681 2f41 48897424 		mov	QWORD PTR 88[rsp], rsi	# %sfp, ivtmp.428
 7681      58
 7682 2f46 4C89FE   		mov	rsi, r15	#, _48
 7683 2f49 E8000000 		call	memcpy@PLT	#
 7683      00
 7684              	.LVL377:
 7685              		.loc 2 34 10 view .LVU2642
 7686              	.LBE392:
 7687              	.LBE399:
 914:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7688              		.loc 1 914 54 is_stmt 1 view .LVU2643
 914:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7689              		.loc 1 914 11 view .LVU2644
 7690 2f4e 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.428, %sfp
 7690      58
 7691              	.LVL378:
 914:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7692              		.loc 1 914 11 is_stmt 0 view .LVU2645
 7693 2f53 4A8D0C28 		lea	rcx, [rax+r13]	# ivtmp.428,
 7694              	.LVL379:
 7695              	# sieve_extend.c:914:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 914:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7696              		.loc 1 914 5 view .LVU2646
 7697 2f57 4839CB   		cmp	rbx, rcx	# destination_stop_word, ivtmp.428
 7698 2f5a 0F83DCFE 		jnb	.L559	#,
 7698      FFFF
 7699              	.LVL380:
 7700              		.p2align 4
 7701              		.p2align 3
 7702              	.L794:
 914:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7703              		.loc 1 914 5 view .LVU2647
 7704 2f60 4C8B6C24 		mov	r13, QWORD PTR 72[rsp]	# source_word, %sfp
 7704      48
 7705              	# sieve_extend.c:918:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7706              		.loc 1 918 5 view .LVU2648
 7707 2f65 48394424 		cmp	QWORD PTR 80[rsp], rax	# %sfp, ivtmp.428
 7707      50
 7708 2f6a 488B5C24 		mov	rbx, QWORD PTR 64[rsp]	# bitarray, %sfp
 7708      40
 7709              	.LVL381:
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7710              		.loc 1 918 11 is_stmt 1 view .LVU2649
 7711              	# sieve_extend.c:918:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7712              		.loc 1 918 5 is_stmt 0 view .LVU2650
 7713 2f6f 0F826E02 		jb	.L805	#,
 7713      0000
 7714              	.LVL382:
 7715              	.L558:
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7716              		.loc 1 918 5 view .LVU2651
 7717 2f75 4C8D3CC5 		lea	r15, 0[0+rax*8]	# _195,
GAS LISTING /tmp/ccjg94QQ.s 			page 217


 7717      00000000 
 7718 2f7d 4E8D24ED 		lea	r12, 0[0+r13*8]	# _187,
 7718      00000000 
 7719 2f85 498D7F20 		lea	rdi, 32[r15]	# tmp771,
 7720 2f89 4E8D34ED 		lea	r14, 32[0+r13*8]	# _197,
 7720      20000000 
 7721              	.LVL383:
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7722              		.loc 1 918 5 view .LVU2652
 7723 2f91 4939FC   		cmp	r12, rdi	# _187, tmp771
 7724 2f94 410F9DC1 		setge	r9b	#, tmp773
 7725 2f98 4D39F7   		cmp	r15, r14	# _195, _197
 7726 2f9b 410F9DC3 		setge	r11b	#, tmp775
 7727 2f9f 4508D9   		or	r9b, r11b	# tmp773, tmp775
 7728 2fa2 0F845002 		je	.L561	#,
 7728      0000
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7729              		.loc 1 918 5 view .LVU2653
 7730 2fa8 488B5424 		mov	rdx, QWORD PTR 80[rsp]	# destination_stop_word, %sfp
 7730      50
 7731 2fad 4989D2   		mov	r10, rdx	# tmp777, destination_stop_word
 7732 2fb0 4929C2   		sub	r10, rax	# tmp777, ivtmp.428
 7733 2fb3 4983FA05 		cmp	r10, 5	# tmp777,
 7734 2fb7 0F863B02 		jbe	.L561	#,
 7734      0000
 7735 2fbd 4901DC   		add	r12, rbx	# vectp.353, bitarray
 7736 2fc0 4C8D4201 		lea	r8, 1[rdx]	# _75,
 7737 2fc4 49C1EC03 		shr	r12, 3	# tmp781,
 7738 2fc8 49F7DC   		neg	r12	# tmp782
 7739 2fcb 4183E403 		and	r12d, 3	# prolog_loop_niters.354,
 7740 2fcf 0F842B07 		je	.L570	#,
 7740      0000
 919:sieve_extend.c **** 
 7741              		.loc 1 919 9 is_stmt 1 view .LVU2654
 7742              	# sieve_extend.c:919:         bitarray[copy_word] = bitarray[source_word];
 919:sieve_extend.c **** 
 7743              		.loc 1 919 39 is_stmt 0 view .LVU2655
 7744 2fd5 4A8B0CEB 		mov	rcx, QWORD PTR [rbx+r13*8]	# _114, *_111
 7745 2fd9 4983FC01 		cmp	r12, 1	# prolog_loop_niters.354,
 7746              	# sieve_extend.c:918:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7747              		.loc 1 918 57 view .LVU2656
 7748 2fdd 488D7001 		lea	rsi, 1[rax]	# copy_word,
 7749              	# sieve_extend.c:918:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7750              		.loc 1 918 71 view .LVU2657
 7751 2fe1 4D8D7501 		lea	r14, 1[r13]	# source_word,
 7752              	# sieve_extend.c:919:         bitarray[copy_word] = bitarray[source_word];
 919:sieve_extend.c **** 
 7753              		.loc 1 919 29 view .LVU2658
 7754 2fe5 4A890C3B 		mov	QWORD PTR [rbx+r15], rcx	# *_113, _114
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7755              		.loc 1 918 48 is_stmt 1 view .LVU2659
 7756              	.LVL384:
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7757              		.loc 1 918 11 view .LVU2660
 7758 2fe9 7426     		je	.L562	#,
GAS LISTING /tmp/ccjg94QQ.s 			page 218


 919:sieve_extend.c **** 
 7759              		.loc 1 919 9 view .LVU2661
 7760              	# sieve_extend.c:919:         bitarray[copy_word] = bitarray[source_word];
 919:sieve_extend.c **** 
 7761              		.loc 1 919 39 is_stmt 0 view .LVU2662
 7762 2feb 4E8B3CF3 		mov	r15, QWORD PTR [rbx+r14*8]	# _38, *_35
 7763 2fef 4983FC03 		cmp	r12, 3	# prolog_loop_niters.354,
 7764              	# sieve_extend.c:918:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7765              		.loc 1 918 71 view .LVU2663
 7766 2ff3 4D8D7502 		lea	r14, 2[r13]	# source_word,
 7767              	.LVL385:
 7768              	# sieve_extend.c:919:         bitarray[copy_word] = bitarray[source_word];
 919:sieve_extend.c **** 
 7769              		.loc 1 919 29 view .LVU2664
 7770 2ff7 4C893CF3 		mov	QWORD PTR [rbx+rsi*8], r15	# *_37, _38
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7771              		.loc 1 918 48 is_stmt 1 view .LVU2665
 7772              	# sieve_extend.c:918:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7773              		.loc 1 918 57 is_stmt 0 view .LVU2666
 7774 2ffb 488D7002 		lea	rsi, 2[rax]	# copy_word,
 7775              	.LVL386:
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7776              		.loc 1 918 11 is_stmt 1 view .LVU2667
 7777 2fff 7510     		jne	.L562	#,
 919:sieve_extend.c **** 
 7778              		.loc 1 919 9 view .LVU2668
 7779              	# sieve_extend.c:919:         bitarray[copy_word] = bitarray[source_word];
 919:sieve_extend.c **** 
 7780              		.loc 1 919 39 is_stmt 0 view .LVU2669
 7781 3001 4A8B3CF3 		mov	rdi, QWORD PTR [rbx+r14*8]	# _150, *_153
 7782              	# sieve_extend.c:918:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7783              		.loc 1 918 71 view .LVU2670
 7784 3005 4D8D7503 		lea	r14, 3[r13]	# source_word,
 7785              	.LVL387:
 7786              	# sieve_extend.c:919:         bitarray[copy_word] = bitarray[source_word];
 919:sieve_extend.c **** 
 7787              		.loc 1 919 29 view .LVU2671
 7788 3009 48893CF3 		mov	QWORD PTR [rbx+rsi*8], rdi	# *_151, _150
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7789              		.loc 1 918 48 is_stmt 1 view .LVU2672
 7790              	# sieve_extend.c:918:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7791              		.loc 1 918 57 is_stmt 0 view .LVU2673
 7792 300d 488D7003 		lea	rsi, 3[rax]	# copy_word,
 7793              	.LVL388:
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7794              		.loc 1 918 11 is_stmt 1 view .LVU2674
 7795              	.L562:
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7796              		.loc 1 918 11 is_stmt 0 view .LVU2675
 7797 3011 4D29E0   		sub	r8, r12	# tmp783, prolog_loop_niters.354
 7798 3014 4D01E5   		add	r13, r12	# tmp784, prolog_loop_niters.354
 7799 3017 4929C0   		sub	r8, rax	# niters.355, ivtmp.428
 7800 301a 4C01E0   		add	rax, r12	# tmp786, prolog_loop_niters.354
GAS LISTING /tmp/ccjg94QQ.s 			page 219


 7801 301d 4D89C1   		mov	r9, r8	# bnd.356, niters.355
 7802 3020 4C8D24C3 		lea	r12, [rbx+rax*8]	# vectp.364,
 7803 3024 49C1E902 		shr	r9, 2	# bnd.356,
 7804              	# sieve_extend.c:910:     source_word = copy_word - size; // recalibrate
 910:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 7805              		.loc 1 910 17 view .LVU2676
 7806 3028 31C0     		xor	eax, eax	# ivtmp.419
 7807 302a 49C1E105 		sal	r9, 5	# _704,
 7808 302e 4E8D2CEB 		lea	r13, [rbx+r13*8]	# vectp.361,
 7809 3032 4D8D59E0 		lea	r11, -32[r9]	# tmp806,
 7810 3036 49C1EB05 		shr	r11, 5	# tmp804,
 7811 303a 4983C301 		add	r11, 1	# tmp807,
 7812 303e 4183E307 		and	r11d, 7	# tmp808,
 7813 3042 0F84A800 		je	.L564	#,
 7813      0000
 7814 3048 4983FB01 		cmp	r11, 1	# tmp808,
 7815 304c 0F848400 		je	.L714	#,
 7815      0000
 7816 3052 4983FB02 		cmp	r11, 2	# tmp808,
 7817 3056 746D     		je	.L715	#,
 7818 3058 4983FB03 		cmp	r11, 3	# tmp808,
 7819 305c 7456     		je	.L716	#,
 7820 305e 4983FB04 		cmp	r11, 4	# tmp808,
 7821 3062 743F     		je	.L717	#,
 7822 3064 4983FB05 		cmp	r11, 5	# tmp808,
 7823 3068 7428     		je	.L718	#,
 7824 306a 4983FB06 		cmp	r11, 6	# tmp808,
 7825 306e 7411     		je	.L719	#,
 7826              	.LVL389:
 919:sieve_extend.c **** 
 7827              		.loc 1 919 9 is_stmt 1 view .LVU2677
 7828              	# sieve_extend.c:919:         bitarray[copy_word] = bitarray[source_word];
 919:sieve_extend.c **** 
 7829              		.loc 1 919 29 is_stmt 0 view .LVU2678
 7830 3070 C4417D6F 		vmovdqa	ymm10, YMMWORD PTR 0[r13]	# tmp1397, MEM[base: vectp.361_189, index: ivtmp.419_702, offset
 7830      5500
 7831 3076 B8200000 		mov	eax, 32	# ivtmp.419,
 7831      00
 7832 307b C4417E7F 		vmovdqu	YMMWORD PTR [r12], ymm10	# MEM[base: vectp.364_207, index: ivtmp.419_702, offset: 0B], tmp
 7832      1424
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7833              		.loc 1 918 48 is_stmt 1 view .LVU2679
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7834              		.loc 1 918 11 view .LVU2680
 7835              	.L719:
 919:sieve_extend.c **** 
 7836              		.loc 1 919 9 view .LVU2681
 7837              	# sieve_extend.c:919:         bitarray[copy_word] = bitarray[source_word];
 919:sieve_extend.c **** 
 7838              		.loc 1 919 29 is_stmt 0 view .LVU2682
 7839 3081 C4C17D6F 		vmovdqa	ymm2, YMMWORD PTR 0[r13+rax]	# tmp1398, MEM[base: vectp.361_189, index: ivtmp.419_702, off
 7839      540500
 7840 3088 C4C17E7F 		vmovdqu	YMMWORD PTR [r12+rax], ymm2	# MEM[base: vectp.364_207, index: ivtmp.419_702, offset: 0B], 
 7840      1404
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7841              		.loc 1 918 48 is_stmt 1 view .LVU2683
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
GAS LISTING /tmp/ccjg94QQ.s 			page 220


 7842              		.loc 1 918 11 view .LVU2684
 7843 308e 4883C020 		add	rax, 32	# ivtmp.419,
 7844              	.L718:
 919:sieve_extend.c **** 
 7845              		.loc 1 919 9 view .LVU2685
 7846              	# sieve_extend.c:919:         bitarray[copy_word] = bitarray[source_word];
 919:sieve_extend.c **** 
 7847              		.loc 1 919 29 is_stmt 0 view .LVU2686
 7848 3092 C4417D6F 		vmovdqa	ymm13, YMMWORD PTR 0[r13+rax]	# tmp1399, MEM[base: vectp.361_189, index: ivtmp.419_702, of
 7848      6C0500
 7849 3099 C4417E7F 		vmovdqu	YMMWORD PTR [r12+rax], ymm13	# MEM[base: vectp.364_207, index: ivtmp.419_702, offset: 0B],
 7849      2C04
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7850              		.loc 1 918 48 is_stmt 1 view .LVU2687
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7851              		.loc 1 918 11 view .LVU2688
 7852 309f 4883C020 		add	rax, 32	# ivtmp.419,
 7853              	.L717:
 919:sieve_extend.c **** 
 7854              		.loc 1 919 9 view .LVU2689
 7855              	# sieve_extend.c:919:         bitarray[copy_word] = bitarray[source_word];
 919:sieve_extend.c **** 
 7856              		.loc 1 919 29 is_stmt 0 view .LVU2690
 7857 30a3 C4417D6F 		vmovdqa	ymm14, YMMWORD PTR 0[r13+rax]	# tmp1400, MEM[base: vectp.361_189, index: ivtmp.419_702, of
 7857      740500
 7858 30aa C4417E7F 		vmovdqu	YMMWORD PTR [r12+rax], ymm14	# MEM[base: vectp.364_207, index: ivtmp.419_702, offset: 0B],
 7858      3404
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7859              		.loc 1 918 48 is_stmt 1 view .LVU2691
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7860              		.loc 1 918 11 view .LVU2692
 7861 30b0 4883C020 		add	rax, 32	# ivtmp.419,
 7862              	.L716:
 919:sieve_extend.c **** 
 7863              		.loc 1 919 9 view .LVU2693
 7864              	# sieve_extend.c:919:         bitarray[copy_word] = bitarray[source_word];
 919:sieve_extend.c **** 
 7865              		.loc 1 919 29 is_stmt 0 view .LVU2694
 7866 30b4 C4417D6F 		vmovdqa	ymm15, YMMWORD PTR 0[r13+rax]	# tmp1401, MEM[base: vectp.361_189, index: ivtmp.419_702, of
 7866      7C0500
 7867 30bb C4417E7F 		vmovdqu	YMMWORD PTR [r12+rax], ymm15	# MEM[base: vectp.364_207, index: ivtmp.419_702, offset: 0B],
 7867      3C04
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7868              		.loc 1 918 48 is_stmt 1 view .LVU2695
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7869              		.loc 1 918 11 view .LVU2696
 7870 30c1 4883C020 		add	rax, 32	# ivtmp.419,
 7871              	.L715:
 919:sieve_extend.c **** 
 7872              		.loc 1 919 9 view .LVU2697
 7873              	# sieve_extend.c:919:         bitarray[copy_word] = bitarray[source_word];
 919:sieve_extend.c **** 
 7874              		.loc 1 919 29 is_stmt 0 view .LVU2698
 7875 30c5 C4C17D6F 		vmovdqa	ymm1, YMMWORD PTR 0[r13+rax]	# tmp1402, MEM[base: vectp.361_189, index: ivtmp.419_702, off
 7875      4C0500
 7876 30cc C4C17E7F 		vmovdqu	YMMWORD PTR [r12+rax], ymm1	# MEM[base: vectp.364_207, index: ivtmp.419_702, offset: 0B], 
 7876      0C04
GAS LISTING /tmp/ccjg94QQ.s 			page 221


 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7877              		.loc 1 918 48 is_stmt 1 view .LVU2699
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7878              		.loc 1 918 11 view .LVU2700
 7879 30d2 4883C020 		add	rax, 32	# ivtmp.419,
 7880              	.L714:
 919:sieve_extend.c **** 
 7881              		.loc 1 919 9 view .LVU2701
 7882              	# sieve_extend.c:919:         bitarray[copy_word] = bitarray[source_word];
 919:sieve_extend.c **** 
 7883              		.loc 1 919 29 is_stmt 0 view .LVU2702
 7884 30d6 C4417D6F 		vmovdqa	ymm8, YMMWORD PTR 0[r13+rax]	# tmp1403, MEM[base: vectp.361_189, index: ivtmp.419_702, off
 7884      440500
 7885 30dd C4417E7F 		vmovdqu	YMMWORD PTR [r12+rax], ymm8	# MEM[base: vectp.364_207, index: ivtmp.419_702, offset: 0B], 
 7885      0404
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7886              		.loc 1 918 48 is_stmt 1 view .LVU2703
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7887              		.loc 1 918 11 view .LVU2704
 7888 30e3 4883C020 		add	rax, 32	# ivtmp.419,
 7889 30e7 4C39C8   		cmp	rax, r9	# ivtmp.419, _704
 7890 30ea 0F849600 		je	.L779	#,
 7890      0000
 7891              	.L564:
 919:sieve_extend.c **** 
 7892              		.loc 1 919 9 discriminator 2 view .LVU2705
 7893              	# sieve_extend.c:919:         bitarray[copy_word] = bitarray[source_word];
 919:sieve_extend.c **** 
 7894              		.loc 1 919 29 is_stmt 0 discriminator 2 view .LVU2706
 7895 30f0 C4C17D6F 		vmovdqa	ymm0, YMMWORD PTR 0[r13+rax]	# tmp1384, MEM[base: vectp.361_189, index: ivtmp.419_702, off
 7895      440500
 7896 30f7 C4C17E7F 		vmovdqu	YMMWORD PTR [r12+rax], ymm0	# MEM[base: vectp.364_207, index: ivtmp.419_702, offset: 0B], 
 7896      0404
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7897              		.loc 1 918 48 is_stmt 1 discriminator 2 view .LVU2707
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7898              		.loc 1 918 11 discriminator 2 view .LVU2708
 919:sieve_extend.c **** 
 7899              		.loc 1 919 9 discriminator 2 view .LVU2709
 7900              	# sieve_extend.c:919:         bitarray[copy_word] = bitarray[source_word];
 919:sieve_extend.c **** 
 7901              		.loc 1 919 29 is_stmt 0 discriminator 2 view .LVU2710
 7902 30fd C4C17D6F 		vmovdqa	ymm5, YMMWORD PTR 32[r13+rax]	# tmp1385, MEM[base: vectp.361_189, index: ivtmp.419_702, of
 7902      6C0520
 7903 3104 C4C17E7F 		vmovdqu	YMMWORD PTR 32[r12+rax], ymm5	# MEM[base: vectp.364_207, index: ivtmp.419_702, offset: 0B]
 7903      6C0420
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7904              		.loc 1 918 48 is_stmt 1 discriminator 2 view .LVU2711
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7905              		.loc 1 918 11 discriminator 2 view .LVU2712
 919:sieve_extend.c **** 
 7906              		.loc 1 919 9 discriminator 2 view .LVU2713
 7907              	# sieve_extend.c:919:         bitarray[copy_word] = bitarray[source_word];
 919:sieve_extend.c **** 
 7908              		.loc 1 919 29 is_stmt 0 discriminator 2 view .LVU2714
 7909 310b C4417D6F 		vmovdqa	ymm9, YMMWORD PTR 64[r13+rax]	# tmp1386, MEM[base: vectp.361_189, index: ivtmp.419_702, of
 7909      4C0540
GAS LISTING /tmp/ccjg94QQ.s 			page 222


 7910 3112 C4417E7F 		vmovdqu	YMMWORD PTR 64[r12+rax], ymm9	# MEM[base: vectp.364_207, index: ivtmp.419_702, offset: 0B]
 7910      4C0440
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7911              		.loc 1 918 48 is_stmt 1 discriminator 2 view .LVU2715
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7912              		.loc 1 918 11 discriminator 2 view .LVU2716
 919:sieve_extend.c **** 
 7913              		.loc 1 919 9 discriminator 2 view .LVU2717
 7914              	# sieve_extend.c:919:         bitarray[copy_word] = bitarray[source_word];
 919:sieve_extend.c **** 
 7915              		.loc 1 919 29 is_stmt 0 discriminator 2 view .LVU2718
 7916 3119 C4417D6F 		vmovdqa	ymm11, YMMWORD PTR 96[r13+rax]	# tmp1387, MEM[base: vectp.361_189, index: ivtmp.419_702, o
 7916      5C0560
 7917 3120 C4417E7F 		vmovdqu	YMMWORD PTR 96[r12+rax], ymm11	# MEM[base: vectp.364_207, index: ivtmp.419_702, offset: 0B
 7917      5C0460
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7918              		.loc 1 918 48 is_stmt 1 discriminator 2 view .LVU2719
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7919              		.loc 1 918 11 discriminator 2 view .LVU2720
 919:sieve_extend.c **** 
 7920              		.loc 1 919 9 discriminator 2 view .LVU2721
 7921              	# sieve_extend.c:919:         bitarray[copy_word] = bitarray[source_word];
 919:sieve_extend.c **** 
 7922              		.loc 1 919 29 is_stmt 0 discriminator 2 view .LVU2722
 7923 3127 C4C17D6F 		vmovdqa	ymm4, YMMWORD PTR 128[r13+rax]	# tmp1388, MEM[base: vectp.361_189, index: ivtmp.419_702, o
 7923      A4058000 
 7923      0000
 7924 3131 C4C17E7F 		vmovdqu	YMMWORD PTR 128[r12+rax], ymm4	# MEM[base: vectp.364_207, index: ivtmp.419_702, offset: 0B
 7924      A4048000 
 7924      0000
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7925              		.loc 1 918 48 is_stmt 1 discriminator 2 view .LVU2723
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7926              		.loc 1 918 11 discriminator 2 view .LVU2724
 919:sieve_extend.c **** 
 7927              		.loc 1 919 9 discriminator 2 view .LVU2725
 7928              	# sieve_extend.c:919:         bitarray[copy_word] = bitarray[source_word];
 919:sieve_extend.c **** 
 7929              		.loc 1 919 29 is_stmt 0 discriminator 2 view .LVU2726
 7930 313b C4C17D6F 		vmovdqa	ymm6, YMMWORD PTR 160[r13+rax]	# tmp1389, MEM[base: vectp.361_189, index: ivtmp.419_702, o
 7930      B405A000 
 7930      0000
 7931 3145 C4C17E7F 		vmovdqu	YMMWORD PTR 160[r12+rax], ymm6	# MEM[base: vectp.364_207, index: ivtmp.419_702, offset: 0B
 7931      B404A000 
 7931      0000
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7932              		.loc 1 918 48 is_stmt 1 discriminator 2 view .LVU2727
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7933              		.loc 1 918 11 discriminator 2 view .LVU2728
 919:sieve_extend.c **** 
 7934              		.loc 1 919 9 discriminator 2 view .LVU2729
 7935              	# sieve_extend.c:919:         bitarray[copy_word] = bitarray[source_word];
 919:sieve_extend.c **** 
 7936              		.loc 1 919 29 is_stmt 0 discriminator 2 view .LVU2730
 7937 314f C4C17D6F 		vmovdqa	ymm7, YMMWORD PTR 192[r13+rax]	# tmp1390, MEM[base: vectp.361_189, index: ivtmp.419_702, o
 7937      BC05C000 
 7937      0000
GAS LISTING /tmp/ccjg94QQ.s 			page 223


 7938 3159 C4C17E7F 		vmovdqu	YMMWORD PTR 192[r12+rax], ymm7	# MEM[base: vectp.364_207, index: ivtmp.419_702, offset: 0B
 7938      BC04C000 
 7938      0000
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7939              		.loc 1 918 48 is_stmt 1 discriminator 2 view .LVU2731
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7940              		.loc 1 918 11 discriminator 2 view .LVU2732
 919:sieve_extend.c **** 
 7941              		.loc 1 919 9 discriminator 2 view .LVU2733
 7942              	# sieve_extend.c:919:         bitarray[copy_word] = bitarray[source_word];
 919:sieve_extend.c **** 
 7943              		.loc 1 919 29 is_stmt 0 discriminator 2 view .LVU2734
 7944 3163 C4C17D6F 		vmovdqa	ymm3, YMMWORD PTR 224[r13+rax]	# tmp1391, MEM[base: vectp.361_189, index: ivtmp.419_702, o
 7944      9C05E000 
 7944      0000
 7945 316d C4C17E7F 		vmovdqu	YMMWORD PTR 224[r12+rax], ymm3	# MEM[base: vectp.364_207, index: ivtmp.419_702, offset: 0B
 7945      9C04E000 
 7945      0000
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7946              		.loc 1 918 48 is_stmt 1 discriminator 2 view .LVU2735
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7947              		.loc 1 918 11 discriminator 2 view .LVU2736
 7948 3177 48050001 		add	rax, 256	# ivtmp.419,
 7948      0000
 7949 317d 4C39C8   		cmp	rax, r9	# ivtmp.419, _704
 7950 3180 0F856AFF 		jne	.L564	#,
 7950      FFFF
 7951              	.L779:
 7952 3186 4C89C2   		mov	rdx, r8	# niters_vector_mult_vf.357, niters.355
 7953 3189 4883E2FC 		and	rdx, -4	# niters_vector_mult_vf.357,
 7954 318d 4901D6   		add	r14, rdx	# tmp.358, niters_vector_mult_vf.357
 7955 3190 4801D6   		add	rsi, rdx	# tmp.359, niters_vector_mult_vf.357
 7956 3193 4C39C2   		cmp	rdx, r8	# niters_vector_mult_vf.357, niters.355
 7957 3196 0F840D01 		je	.L804	#,
 7957      0000
 7958              	.LVL390:
 919:sieve_extend.c **** 
 7959              		.loc 1 919 9 view .LVU2737
 7960              	# sieve_extend.c:918:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7961              		.loc 1 918 5 is_stmt 0 view .LVU2738
 7962 319c 4C8B7C24 		mov	r15, QWORD PTR 80[rsp]	# destination_stop_word, %sfp
 7962      50
 7963              	# sieve_extend.c:918:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7964              		.loc 1 918 57 view .LVU2739
 7965 31a1 4C8D4601 		lea	r8, 1[rsi]	# copy_word,
 7966              	# sieve_extend.c:919:         bitarray[copy_word] = bitarray[source_word];
 919:sieve_extend.c **** 
 7967              		.loc 1 919 39 view .LVU2740
 7968 31a5 4E8B14F3 		mov	r10, QWORD PTR [rbx+r14*8]	# _90, *_141
 7969              	# sieve_extend.c:918:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7970              		.loc 1 918 71 view .LVU2741
 7971 31a9 4983C601 		add	r14, 1	# source_word,
 7972              	.LVL391:
 7973              	# sieve_extend.c:918:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
GAS LISTING /tmp/ccjg94QQ.s 			page 224


 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7974              		.loc 1 918 5 view .LVU2742
 7975 31ad 4D39C7   		cmp	r15, r8	# destination_stop_word, copy_word
 7976              	# sieve_extend.c:919:         bitarray[copy_word] = bitarray[source_word];
 919:sieve_extend.c **** 
 7977              		.loc 1 919 29 view .LVU2743
 7978 31b0 4C8914F3 		mov	QWORD PTR [rbx+rsi*8], r10	# *_489, _90
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7979              		.loc 1 918 48 is_stmt 1 view .LVU2744
 7980              	.LVL392:
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7981              		.loc 1 918 11 view .LVU2745
 7982              	# sieve_extend.c:918:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7983              		.loc 1 918 5 is_stmt 0 view .LVU2746
 7984 31b4 0F82EF00 		jb	.L804	#,
 7984      0000
 919:sieve_extend.c **** 
 7985              		.loc 1 919 9 is_stmt 1 view .LVU2747
 7986              	# sieve_extend.c:919:         bitarray[copy_word] = bitarray[source_word];
 919:sieve_extend.c **** 
 7987              		.loc 1 919 39 is_stmt 0 view .LVU2748
 7988 31ba 4A8D0CF5 		lea	rcx, 0[0+r14*8]	# _96,
 7988      00000000 
 7989              	# sieve_extend.c:918:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7990              		.loc 1 918 57 view .LVU2749
 7991 31c2 4883C602 		add	rsi, 2	# copy_word,
 7992              	# sieve_extend.c:919:         bitarray[copy_word] = bitarray[source_word];
 919:sieve_extend.c **** 
 7993              		.loc 1 919 39 view .LVU2750
 7994 31c6 4E8B34F3 		mov	r14, QWORD PTR [rbx+r14*8]	# _103, *_98
 7995              	# sieve_extend.c:918:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7996              		.loc 1 918 5 view .LVU2751
 7997 31ca 4939F7   		cmp	r15, rsi	# destination_stop_word, copy_word
 7998              	# sieve_extend.c:919:         bitarray[copy_word] = bitarray[source_word];
 919:sieve_extend.c **** 
 7999              		.loc 1 919 29 view .LVU2752
 8000 31cd 4E8934C3 		mov	QWORD PTR [rbx+r8*8], r14	# *_102, _103
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8001              		.loc 1 918 48 is_stmt 1 view .LVU2753
 8002              	.LVL393:
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8003              		.loc 1 918 11 view .LVU2754
 8004              	# sieve_extend.c:918:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8005              		.loc 1 918 5 is_stmt 0 view .LVU2755
 8006 31d1 0F82D200 		jb	.L804	#,
 8006      0000
 919:sieve_extend.c **** 
 8007              		.loc 1 919 9 is_stmt 1 view .LVU2756
 8008              	# sieve_extend.c:919:         bitarray[copy_word] = bitarray[source_word];
 919:sieve_extend.c **** 
 8009              		.loc 1 919 39 is_stmt 0 view .LVU2757
 8010 31d7 488B7C0B 		mov	rdi, QWORD PTR 8[rbx+rcx]	# _34, *_83
 8010      08
GAS LISTING /tmp/ccjg94QQ.s 			page 225


 8011              	# sieve_extend.c:919:         bitarray[copy_word] = bitarray[source_word];
 919:sieve_extend.c **** 
 8012              		.loc 1 919 29 view .LVU2758
 8013 31dc 48893CF3 		mov	QWORD PTR [rbx+rsi*8], rdi	# *_72, _34
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8014              		.loc 1 918 48 is_stmt 1 view .LVU2759
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8015              		.loc 1 918 11 view .LVU2760
 8016 31e0 C5F877   		vzeroupper
 8017              	.L805:
 8018              	# sieve_extend.c:922:  }
 922:sieve_extend.c **** 
 8019              		.loc 1 922 2 is_stmt 0 view .LVU2761
 8020 31e3 488D65D8 		lea	rsp, -40[rbp]	#,
 8021              	.LVL394:
 922:sieve_extend.c **** 
 8022              		.loc 1 922 2 view .LVU2762
 8023 31e7 5B       		pop	rbx	#
 8024 31e8 415C     		pop	r12	#
 8025 31ea 415D     		pop	r13	#
 8026 31ec 415E     		pop	r14	#
 8027 31ee 415F     		pop	r15	#
 8028 31f0 5D       		pop	rbp	#
 8029              		.cfi_remember_state
 8030              		.cfi_def_cfa 7, 8
 8031              	.LVL395:
 922:sieve_extend.c **** 
 8032              		.loc 1 922 2 view .LVU2763
 8033 31f1 C3       		ret	
 8034              	.LVL396:
 8035              		.p2align 4,,7
 8036 31f2 660F1F44 		.p2align 3
 8036      0000
 8037              	.L561:
 8038              		.cfi_restore_state
 922:sieve_extend.c **** 
 8039              		.loc 1 922 2 view .LVU2764
 8040 31f8 488B7424 		mov	rsi, QWORD PTR 80[rsp]	# destination_stop_word, %sfp
 8040      50
 8041 31fd 4E8D243B 		lea	r12, [rbx+r15]	# ivtmp.414,
 8042              	# sieve_extend.c:919:         bitarray[copy_word] = bitarray[source_word];
 919:sieve_extend.c **** 
 8043              		.loc 1 919 39 view .LVU2765
 8044 3201 4929C5   		sub	r13, rax	# tmp791, ivtmp.428
 8045              	.LVL397:
 919:sieve_extend.c **** 
 8046              		.loc 1 919 39 view .LVU2766
 8047 3204 488D5CF3 		lea	rbx, 8[rbx+rsi*8]	# _701,
 8047      08
 8048 3209 4989D9   		mov	r9, rbx	# tmp799, _701
 8049 320c 4D29E1   		sub	r9, r12	# tmp799, ivtmp.414
 8050 320f 4983E908 		sub	r9, 8	# tmp800,
 8051 3213 49C1E903 		shr	r9, 3	# tmp798,
 8052 3217 4983C101 		add	r9, 1	# tmp801,
 8053 321b 4183E107 		and	r9d, 7	# tmp802,
 8054 321f 0F849B00 		je	.L567	#,
 8054      0000
GAS LISTING /tmp/ccjg94QQ.s 			page 226


 8055 3225 4983F901 		cmp	r9, 1	# tmp802,
 8056 3229 746C     		je	.L720	#,
 8057 322b 4983F902 		cmp	r9, 2	# tmp802,
 8058 322f 7459     		je	.L721	#,
 8059 3231 4983F903 		cmp	r9, 3	# tmp802,
 8060 3235 7446     		je	.L722	#,
 8061 3237 4983F904 		cmp	r9, 4	# tmp802,
 8062 323b 7433     		je	.L723	#,
 8063 323d 4983F905 		cmp	r9, 5	# tmp802,
 8064 3241 7420     		je	.L724	#,
 8065 3243 4983F906 		cmp	r9, 6	# tmp802,
 8066 3247 740D     		je	.L725	#,
 919:sieve_extend.c **** 
 8067              		.loc 1 919 9 is_stmt 1 view .LVU2767
 8068              	# sieve_extend.c:919:         bitarray[copy_word] = bitarray[source_word];
 919:sieve_extend.c **** 
 8069              		.loc 1 919 39 is_stmt 0 view .LVU2768
 8070 3249 4F8B1CEC 		mov	r11, QWORD PTR [r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 8071 324d 4983C408 		add	r12, 8	# ivtmp.414,
 8072              	# sieve_extend.c:919:         bitarray[copy_word] = bitarray[source_word];
 919:sieve_extend.c **** 
 8073              		.loc 1 919 29 view .LVU2769
 8074 3251 4D895C24 		mov	QWORD PTR -8[r12], r11	# MEM[base: _604, offset: 0B], _170
 8074      F8
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8075              		.loc 1 918 48 is_stmt 1 view .LVU2770
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8076              		.loc 1 918 11 view .LVU2771
 8077              	.L725:
 919:sieve_extend.c **** 
 8078              		.loc 1 919 9 view .LVU2772
 8079              	# sieve_extend.c:919:         bitarray[copy_word] = bitarray[source_word];
 919:sieve_extend.c **** 
 8080              		.loc 1 919 39 is_stmt 0 view .LVU2773
 8081 3256 4B8B04EC 		mov	rax, QWORD PTR [r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 8082 325a 4983C408 		add	r12, 8	# ivtmp.414,
 8083              	# sieve_extend.c:919:         bitarray[copy_word] = bitarray[source_word];
 919:sieve_extend.c **** 
 8084              		.loc 1 919 29 view .LVU2774
 8085 325e 49894424 		mov	QWORD PTR -8[r12], rax	# MEM[base: _604, offset: 0B], _170
 8085      F8
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8086              		.loc 1 918 48 is_stmt 1 view .LVU2775
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8087              		.loc 1 918 11 view .LVU2776
 8088              	.L724:
 919:sieve_extend.c **** 
 8089              		.loc 1 919 9 view .LVU2777
 8090              	# sieve_extend.c:919:         bitarray[copy_word] = bitarray[source_word];
 919:sieve_extend.c **** 
 8091              		.loc 1 919 39 is_stmt 0 view .LVU2778
 8092 3263 4B8B14EC 		mov	rdx, QWORD PTR [r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 8093 3267 4983C408 		add	r12, 8	# ivtmp.414,
 8094              	# sieve_extend.c:919:         bitarray[copy_word] = bitarray[source_word];
 919:sieve_extend.c **** 
 8095              		.loc 1 919 29 view .LVU2779
 8096 326b 49895424 		mov	QWORD PTR -8[r12], rdx	# MEM[base: _604, offset: 0B], _170
GAS LISTING /tmp/ccjg94QQ.s 			page 227


 8096      F8
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8097              		.loc 1 918 48 is_stmt 1 view .LVU2780
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8098              		.loc 1 918 11 view .LVU2781
 8099              	.L723:
 919:sieve_extend.c **** 
 8100              		.loc 1 919 9 view .LVU2782
 8101              	# sieve_extend.c:919:         bitarray[copy_word] = bitarray[source_word];
 919:sieve_extend.c **** 
 8102              		.loc 1 919 39 is_stmt 0 view .LVU2783
 8103 3270 4F8B14EC 		mov	r10, QWORD PTR [r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 8104 3274 4983C408 		add	r12, 8	# ivtmp.414,
 8105              	# sieve_extend.c:919:         bitarray[copy_word] = bitarray[source_word];
 919:sieve_extend.c **** 
 8106              		.loc 1 919 29 view .LVU2784
 8107 3278 4D895424 		mov	QWORD PTR -8[r12], r10	# MEM[base: _604, offset: 0B], _170
 8107      F8
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8108              		.loc 1 918 48 is_stmt 1 view .LVU2785
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8109              		.loc 1 918 11 view .LVU2786
 8110              	.L722:
 919:sieve_extend.c **** 
 8111              		.loc 1 919 9 view .LVU2787
 8112              	# sieve_extend.c:919:         bitarray[copy_word] = bitarray[source_word];
 919:sieve_extend.c **** 
 8113              		.loc 1 919 39 is_stmt 0 view .LVU2788
 8114 327d 4F8B04EC 		mov	r8, QWORD PTR [r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 8115 3281 4983C408 		add	r12, 8	# ivtmp.414,
 8116              	# sieve_extend.c:919:         bitarray[copy_word] = bitarray[source_word];
 919:sieve_extend.c **** 
 8117              		.loc 1 919 29 view .LVU2789
 8118 3285 4D894424 		mov	QWORD PTR -8[r12], r8	# MEM[base: _604, offset: 0B], _170
 8118      F8
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8119              		.loc 1 918 48 is_stmt 1 view .LVU2790
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8120              		.loc 1 918 11 view .LVU2791
 8121              	.L721:
 919:sieve_extend.c **** 
 8122              		.loc 1 919 9 view .LVU2792
 8123              	# sieve_extend.c:919:         bitarray[copy_word] = bitarray[source_word];
 919:sieve_extend.c **** 
 8124              		.loc 1 919 39 is_stmt 0 view .LVU2793
 8125 328a 4F8B3CEC 		mov	r15, QWORD PTR [r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 8126 328e 4983C408 		add	r12, 8	# ivtmp.414,
 8127              	# sieve_extend.c:919:         bitarray[copy_word] = bitarray[source_word];
 919:sieve_extend.c **** 
 8128              		.loc 1 919 29 view .LVU2794
 8129 3292 4D897C24 		mov	QWORD PTR -8[r12], r15	# MEM[base: _604, offset: 0B], _170
 8129      F8
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8130              		.loc 1 918 48 is_stmt 1 view .LVU2795
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8131              		.loc 1 918 11 view .LVU2796
 8132              	.L720:
GAS LISTING /tmp/ccjg94QQ.s 			page 228


 919:sieve_extend.c **** 
 8133              		.loc 1 919 9 view .LVU2797
 8134              	# sieve_extend.c:919:         bitarray[copy_word] = bitarray[source_word];
 919:sieve_extend.c **** 
 8135              		.loc 1 919 39 is_stmt 0 view .LVU2798
 8136 3297 4B8B0CEC 		mov	rcx, QWORD PTR [r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 8137 329b 4983C408 		add	r12, 8	# ivtmp.414,
 8138              	# sieve_extend.c:919:         bitarray[copy_word] = bitarray[source_word];
 919:sieve_extend.c **** 
 8139              		.loc 1 919 29 view .LVU2799
 8140 329f 49894C24 		mov	QWORD PTR -8[r12], rcx	# MEM[base: _604, offset: 0B], _170
 8140      F8
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8141              		.loc 1 918 48 is_stmt 1 view .LVU2800
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8142              		.loc 1 918 11 view .LVU2801
 8143              	# sieve_extend.c:918:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8144              		.loc 1 918 5 is_stmt 0 view .LVU2802
 8145 32a4 4939DC   		cmp	r12, rbx	# ivtmp.414, _701
 8146 32a7 7517     		jne	.L567	#,
 8147              	.LVL398:
 8148              	.L804:
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8149              		.loc 1 918 5 view .LVU2803
 8150 32a9 C5F877   		vzeroupper
 8151              	# sieve_extend.c:922:  }
 922:sieve_extend.c **** 
 8152              		.loc 1 922 2 view .LVU2804
 8153 32ac 488D65D8 		lea	rsp, -40[rbp]	#,
 8154              	.LVL399:
 922:sieve_extend.c **** 
 8155              		.loc 1 922 2 view .LVU2805
 8156 32b0 5B       		pop	rbx	#
 8157 32b1 415C     		pop	r12	#
 8158 32b3 415D     		pop	r13	#
 8159 32b5 415E     		pop	r14	#
 8160 32b7 415F     		pop	r15	#
 8161 32b9 5D       		pop	rbp	#
 8162              		.cfi_remember_state
 8163              		.cfi_def_cfa 7, 8
 8164              	.LVL400:
 922:sieve_extend.c **** 
 8165              		.loc 1 922 2 view .LVU2806
 8166 32ba C3       		ret	
 8167              	.LVL401:
 8168 32bb 0F1F4400 		.p2align 4,,7
 8168      00
 8169              		.p2align 3
 8170              	.L567:
 8171              		.cfi_restore_state
 919:sieve_extend.c **** 
 8172              		.loc 1 919 9 is_stmt 1 view .LVU2807
 8173              	# sieve_extend.c:919:         bitarray[copy_word] = bitarray[source_word];
 919:sieve_extend.c **** 
 8174              		.loc 1 919 39 is_stmt 0 view .LVU2808
 8175 32c0 4F8B34EC 		mov	r14, QWORD PTR [r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
GAS LISTING /tmp/ccjg94QQ.s 			page 229


 8176              	# sieve_extend.c:919:         bitarray[copy_word] = bitarray[source_word];
 919:sieve_extend.c **** 
 8177              		.loc 1 919 29 view .LVU2809
 8178 32c4 4D893424 		mov	QWORD PTR [r12], r14	# MEM[base: _604, offset: 0B], _170
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8179              		.loc 1 918 48 is_stmt 1 view .LVU2810
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8180              		.loc 1 918 11 view .LVU2811
 919:sieve_extend.c **** 
 8181              		.loc 1 919 9 view .LVU2812
 8182              	# sieve_extend.c:919:         bitarray[copy_word] = bitarray[source_word];
 919:sieve_extend.c **** 
 8183              		.loc 1 919 39 is_stmt 0 view .LVU2813
 8184 32c8 4B8B7CEC 		mov	rdi, QWORD PTR 8[r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 8184      08
 8185              	# sieve_extend.c:919:         bitarray[copy_word] = bitarray[source_word];
 919:sieve_extend.c **** 
 8186              		.loc 1 919 29 view .LVU2814
 8187 32cd 49897C24 		mov	QWORD PTR 8[r12], rdi	# MEM[base: _604, offset: 0B], _170
 8187      08
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8188              		.loc 1 918 48 is_stmt 1 view .LVU2815
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8189              		.loc 1 918 11 view .LVU2816
 919:sieve_extend.c **** 
 8190              		.loc 1 919 9 view .LVU2817
 8191              	# sieve_extend.c:919:         bitarray[copy_word] = bitarray[source_word];
 919:sieve_extend.c **** 
 8192              		.loc 1 919 39 is_stmt 0 view .LVU2818
 8193 32d2 4B8B74EC 		mov	rsi, QWORD PTR 16[r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 8193      10
 8194              	# sieve_extend.c:919:         bitarray[copy_word] = bitarray[source_word];
 919:sieve_extend.c **** 
 8195              		.loc 1 919 29 view .LVU2819
 8196 32d7 49897424 		mov	QWORD PTR 16[r12], rsi	# MEM[base: _604, offset: 0B], _170
 8196      10
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8197              		.loc 1 918 48 is_stmt 1 view .LVU2820
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8198              		.loc 1 918 11 view .LVU2821
 919:sieve_extend.c **** 
 8199              		.loc 1 919 9 view .LVU2822
 8200              	# sieve_extend.c:919:         bitarray[copy_word] = bitarray[source_word];
 919:sieve_extend.c **** 
 8201              		.loc 1 919 39 is_stmt 0 view .LVU2823
 8202 32dc 4F8B4CEC 		mov	r9, QWORD PTR 24[r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 8202      18
 8203              	# sieve_extend.c:919:         bitarray[copy_word] = bitarray[source_word];
 919:sieve_extend.c **** 
 8204              		.loc 1 919 29 view .LVU2824
 8205 32e1 4D894C24 		mov	QWORD PTR 24[r12], r9	# MEM[base: _604, offset: 0B], _170
 8205      18
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8206              		.loc 1 918 48 is_stmt 1 view .LVU2825
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8207              		.loc 1 918 11 view .LVU2826
 919:sieve_extend.c **** 
GAS LISTING /tmp/ccjg94QQ.s 			page 230


 8208              		.loc 1 919 9 view .LVU2827
 8209              	# sieve_extend.c:919:         bitarray[copy_word] = bitarray[source_word];
 919:sieve_extend.c **** 
 8210              		.loc 1 919 39 is_stmt 0 view .LVU2828
 8211 32e6 4F8B5CEC 		mov	r11, QWORD PTR 32[r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 8211      20
 8212              	# sieve_extend.c:919:         bitarray[copy_word] = bitarray[source_word];
 919:sieve_extend.c **** 
 8213              		.loc 1 919 29 view .LVU2829
 8214 32eb 4D895C24 		mov	QWORD PTR 32[r12], r11	# MEM[base: _604, offset: 0B], _170
 8214      20
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8215              		.loc 1 918 48 is_stmt 1 view .LVU2830
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8216              		.loc 1 918 11 view .LVU2831
 919:sieve_extend.c **** 
 8217              		.loc 1 919 9 view .LVU2832
 8218              	# sieve_extend.c:919:         bitarray[copy_word] = bitarray[source_word];
 919:sieve_extend.c **** 
 8219              		.loc 1 919 39 is_stmt 0 view .LVU2833
 8220 32f0 4B8B44EC 		mov	rax, QWORD PTR 40[r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 8220      28
 8221              	# sieve_extend.c:919:         bitarray[copy_word] = bitarray[source_word];
 919:sieve_extend.c **** 
 8222              		.loc 1 919 29 view .LVU2834
 8223 32f5 49894424 		mov	QWORD PTR 40[r12], rax	# MEM[base: _604, offset: 0B], _170
 8223      28
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8224              		.loc 1 918 48 is_stmt 1 view .LVU2835
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8225              		.loc 1 918 11 view .LVU2836
 919:sieve_extend.c **** 
 8226              		.loc 1 919 9 view .LVU2837
 8227              	# sieve_extend.c:919:         bitarray[copy_word] = bitarray[source_word];
 919:sieve_extend.c **** 
 8228              		.loc 1 919 39 is_stmt 0 view .LVU2838
 8229 32fa 4B8B54EC 		mov	rdx, QWORD PTR 48[r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 8229      30
 8230              	# sieve_extend.c:919:         bitarray[copy_word] = bitarray[source_word];
 919:sieve_extend.c **** 
 8231              		.loc 1 919 29 view .LVU2839
 8232 32ff 49895424 		mov	QWORD PTR 48[r12], rdx	# MEM[base: _604, offset: 0B], _170
 8232      30
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8233              		.loc 1 918 48 is_stmt 1 view .LVU2840
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8234              		.loc 1 918 11 view .LVU2841
 919:sieve_extend.c **** 
 8235              		.loc 1 919 9 view .LVU2842
 8236              	# sieve_extend.c:919:         bitarray[copy_word] = bitarray[source_word];
 919:sieve_extend.c **** 
 8237              		.loc 1 919 39 is_stmt 0 view .LVU2843
 8238 3304 4F8B54EC 		mov	r10, QWORD PTR 56[r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 8238      38
 8239 3309 4983C440 		add	r12, 64	# ivtmp.414,
 8240              	# sieve_extend.c:919:         bitarray[copy_word] = bitarray[source_word];
 919:sieve_extend.c **** 
GAS LISTING /tmp/ccjg94QQ.s 			page 231


 8241              		.loc 1 919 29 view .LVU2844
 8242 330d 4D895424 		mov	QWORD PTR -8[r12], r10	# MEM[base: _604, offset: 0B], _170
 8242      F8
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8243              		.loc 1 918 48 is_stmt 1 view .LVU2845
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8244              		.loc 1 918 11 view .LVU2846
 8245              	# sieve_extend.c:918:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8246              		.loc 1 918 5 is_stmt 0 view .LVU2847
 8247 3312 4939DC   		cmp	r12, rbx	# ivtmp.414, _701
 8248 3315 75A9     		jne	.L567	#,
 8249 3317 EB90     		jmp	.L804	#
 8250              	.LVL402:
 8251 3319 0F1F8000 		.p2align 4,,7
 8251      000000
 8252              		.p2align 3
 8253              	.L544:
 918:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8254              		.loc 1 918 5 view .LVU2848
 8255 3320 4C8B7424 		mov	r14, QWORD PTR 48[rsp]	# fast_loop_stop_word, %sfp
 8255      30
 8256 3325 4989C1   		mov	r9, rax	# tmp823, ivtmp.428
 8257 3328 49F7D1   		not	r9	# tmp823
 8258 332b 4801D9   		add	rcx, rbx	# ivtmp.459, bitarray
 8259              	.LBB400:
 8260              	.LBB381:
 8261              	.LBB370:
 8262              	# sieve_extend.c:743:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8263              		.loc 1 743 63 view .LVU2849
 8264 332e 4489FE   		mov	esi, r15d	# tmp1324, _18
 8265              	# sieve_extend.c:743:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8266              		.loc 1 743 42 view .LVU2850
 8267 3331 C4E29BF7 		shrx	rdx, QWORD PTR [rcx], r12	# tmp681, MEM[base: _743, offset: 0B], _12
 8267      11
 8268 3336 4D01F1   		add	r9, r14	# tmp824, fast_loop_stop_word
 8269              	# sieve_extend.c:743:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8270              		.loc 1 743 63 view .LVU2851
 8271 3339 4589FA   		mov	r10d, r15d	# _18, shift_flipped
 8272              	# sieve_extend.c:742:         bitword_t source1 = bitarray[source_word+1];
 742:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8273              		.loc 1 742 19 view .LVU2852
 8274 333c 4C8B4108 		mov	r8, QWORD PTR 8[rcx]	# source1, MEM[base: _743, offset: 8B]
 8275              	# sieve_extend.c:743:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8276              		.loc 1 743 63 view .LVU2853
 8277 3340 C4C2C9F7 		shlx	rdi, r8, rsi	# tmp683, source1, tmp1324
 8277      F8
 8278 3345 49D1E9   		shr	r9	# tmp822
 8279              	# sieve_extend.c:743:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8280              		.loc 1 743 52 view .LVU2854
 8281 3348 4809FA   		or	rdx, rdi	# tmp684, tmp683
 8282              	# sieve_extend.c:746:         copy_word += 2;
GAS LISTING /tmp/ccjg94QQ.s 			page 232


 746:sieve_extend.c ****         source_word += 2;
 8283              		.loc 1 746 19 view .LVU2855
 8284 334b 488D7802 		lea	rdi, 2[rax]	# copy_word,
 8285 334f 49F7D3   		not	r11	# tmp794
 8286              	.LVL403:
 8287              	# sieve_extend.c:743:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8288              		.loc 1 743 52 view .LVU2856
 8289 3352 488914C3 		mov	QWORD PTR [rbx+rax*8], rdx	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 
 8290 3356 4183E103 		and	r9d, 3	# tmp825,
 8291              	.LVL404:
 741:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 8292              		.loc 1 741 9 is_stmt 1 view .LVU2857
 742:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8293              		.loc 1 742 9 view .LVU2858
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8294              		.loc 1 743 9 view .LVU2859
 744:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 8295              		.loc 1 744 9 view .LVU2860
 745:sieve_extend.c ****         copy_word += 2;
 8296              		.loc 1 745 9 view .LVU2861
 8297              	# sieve_extend.c:745:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 745:sieve_extend.c ****         copy_word += 2;
 8298              		.loc 1 745 42 is_stmt 0 view .LVU2862
 8299 335a C4429BF7 		shrx	r8, r8, r12	# tmp687, source1, _12
 8299      C0
 8300              	# sieve_extend.c:745:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 745:sieve_extend.c ****         copy_word += 2;
 8301              		.loc 1 745 63 view .LVU2863
 8302 335f C4E2A9F7 		shlx	rdx, QWORD PTR 16[rcx], r10	# tmp685, MEM[base: _743, offset: 16B], tmp1325
 8302      5110
 8303              	# sieve_extend.c:745:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 745:sieve_extend.c ****         copy_word += 2;
 8304              		.loc 1 745 52 view .LVU2864
 8305 3365 4909D0   		or	r8, rdx	# tmp688, tmp685
 8306              	.LBE370:
 8307              	# sieve_extend.c:740:     while (copy_word < fast_loop_stop_word) {
 740:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8308              		.loc 1 740 11 view .LVU2865
 8309 3368 4939FE   		cmp	r14, rdi	# fast_loop_stop_word, copy_word
 8310 336b 4D8D143B 		lea	r10, [r11+rdi]	# distance,
 8311 336f 488D5110 		lea	rdx, 16[rcx]	# ivtmp.459,
 8312              	.LBB371:
 8313              	# sieve_extend.c:745:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 745:sieve_extend.c ****         copy_word += 2;
 8314              		.loc 1 745 52 view .LVU2866
 8315 3373 4C8944C3 		mov	QWORD PTR 8[rbx+rax*8], r8	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 
 8315      08
 8316              	.LVL405:
 746:sieve_extend.c ****         source_word += 2;
 8317              		.loc 1 746 9 is_stmt 1 view .LVU2867
 747:sieve_extend.c ****         distance += 2;
 8318              		.loc 1 747 9 view .LVU2868
 748:sieve_extend.c ****     }
 8319              		.loc 1 748 9 view .LVU2869
 748:sieve_extend.c ****     }
 8320              		.loc 1 748 9 is_stmt 0 view .LVU2870
GAS LISTING /tmp/ccjg94QQ.s 			page 233


 8321              	.LBE371:
 740:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8322              		.loc 1 740 11 is_stmt 1 view .LVU2871
 8323 3378 0F8644F6 		jbe	.L548	#,
 8323      FFFF
 8324 337e 4D85C9   		test	r9, r9	# tmp825
 8325 3381 0F848B00 		je	.L798	#,
 8325      0000
 8326 3387 4983F901 		cmp	r9, 1	# tmp825,
 8327 338b 7440     		je	.L732	#,
 8328 338d 4983F902 		cmp	r9, 2	# tmp825,
 8329 3391 0F857403 		jne	.L807	#,
 8329      0000
 8330              	.LVL406:
 8331              	.L733:
 8332              	.LBB372:
 741:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 8333              		.loc 1 741 9 view .LVU2872
 742:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8334              		.loc 1 742 9 view .LVU2873
 8335              	# sieve_extend.c:742:         bitword_t source1 = bitarray[source_word+1];
 742:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8336              		.loc 1 742 19 is_stmt 0 view .LVU2874
 8337 3397 488B7208 		mov	rsi, QWORD PTR 8[rdx]	# source1, MEM[base: _743, offset: 8B]
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8338              		.loc 1 743 9 is_stmt 1 view .LVU2875
 8339              	# sieve_extend.c:743:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8340              		.loc 1 743 42 is_stmt 0 view .LVU2876
 8341 339b C4E29BF7 		shrx	rcx, QWORD PTR [rdx], r12	# tmp1171, MEM[base: _743, offset: 0B], _12
 8341      0A
 8342              	.LVL407:
 8343              	# sieve_extend.c:743:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8344              		.loc 1 743 63 view .LVU2877
 8345 33a0 4589F8   		mov	r8d, r15d	# tmp1427, _18
 8346 33a3 C462B9F7 		shlx	r10, rsi, r8	# tmp1172, source1, tmp1427
 8346      D6
 8347              	# sieve_extend.c:743:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8348              		.loc 1 743 52 view .LVU2878
 8349 33a8 4C09D1   		or	rcx, r10	# tmp1173, tmp1172
 8350              	# sieve_extend.c:743:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8351              		.loc 1 743 63 view .LVU2879
 8352 33ab 4589FE   		mov	r14d, r15d	# _18, shift_flipped
 8353              	# sieve_extend.c:745:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 745:sieve_extend.c ****         copy_word += 2;
 8354              		.loc 1 745 42 view .LVU2880
 8355 33ae C4E29BF7 		shrx	rsi, rsi, r12	# tmp1176, source1, _12
 8355      F6
 8356              	# sieve_extend.c:743:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8357              		.loc 1 743 52 view .LVU2881
 8358 33b3 48890CFB 		mov	QWORD PTR [rbx+rdi*8], rcx	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 
 8359              	.LVL408:
 744:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
GAS LISTING /tmp/ccjg94QQ.s 			page 234


 8360              		.loc 1 744 9 is_stmt 1 view .LVU2882
 745:sieve_extend.c ****         copy_word += 2;
 8361              		.loc 1 745 9 view .LVU2883
 8362              	# sieve_extend.c:745:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 745:sieve_extend.c ****         copy_word += 2;
 8363              		.loc 1 745 63 is_stmt 0 view .LVU2884
 8364 33b7 C46289F7 		shlx	r9, QWORD PTR 16[rdx], r14	# tmp1175, MEM[base: _743, offset: 16B], tmp1428
 8364      4A10
 8365              	# sieve_extend.c:745:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 745:sieve_extend.c ****         copy_word += 2;
 8366              		.loc 1 745 52 view .LVU2885
 8367 33bd 4C09CE   		or	rsi, r9	# tmp1177, tmp1175
 8368 33c0 488974FB 		mov	QWORD PTR 8[rbx+rdi*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset:
 8368      08
 8369              	.LVL409:
 746:sieve_extend.c ****         source_word += 2;
 8370              		.loc 1 746 9 is_stmt 1 view .LVU2886
 8371 33c5 4883C210 		add	rdx, 16	# ivtmp.459,
 8372              	# sieve_extend.c:746:         copy_word += 2;
 746:sieve_extend.c ****         source_word += 2;
 8373              		.loc 1 746 19 is_stmt 0 view .LVU2887
 8374 33c9 4883C702 		add	rdi, 2	# copy_word,
 747:sieve_extend.c ****         distance += 2;
 8375              		.loc 1 747 9 is_stmt 1 view .LVU2888
 748:sieve_extend.c ****     }
 8376              		.loc 1 748 9 view .LVU2889
 748:sieve_extend.c ****     }
 8377              		.loc 1 748 9 is_stmt 0 view .LVU2890
 8378              	.LBE372:
 740:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8379              		.loc 1 740 11 is_stmt 1 view .LVU2891
 8380              	.LVL410:
 8381              	.L732:
 8382              	.LBB373:
 741:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 8383              		.loc 1 741 9 view .LVU2892
 742:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8384              		.loc 1 742 9 view .LVU2893
 8385              	# sieve_extend.c:742:         bitword_t source1 = bitarray[source_word+1];
 742:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8386              		.loc 1 742 19 is_stmt 0 view .LVU2894
 8387 33cd 4C8B4A08 		mov	r9, QWORD PTR 8[rdx]	# source1, MEM[base: _743, offset: 8B]
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8388              		.loc 1 743 9 is_stmt 1 view .LVU2895
 8389              	# sieve_extend.c:743:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8390              		.loc 1 743 42 is_stmt 0 view .LVU2896
 8391 33d1 C4E29BF7 		shrx	rcx, QWORD PTR [rdx], r12	# tmp1181, MEM[base: _743, offset: 0B], _12
 8391      0A
 8392              	# sieve_extend.c:743:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8393              		.loc 1 743 63 view .LVU2897
 8394 33d6 4589F8   		mov	r8d, r15d	# tmp1429, _18
 8395 33d9 C442B9F7 		shlx	r10, r9, r8	# tmp1182, source1, tmp1429
 8395      D1
 8396              	# sieve_extend.c:743:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
GAS LISTING /tmp/ccjg94QQ.s 			page 235


 8397              		.loc 1 743 52 view .LVU2898
 8398 33de 4C09D1   		or	rcx, r10	# tmp1183, tmp1182
 8399              	# sieve_extend.c:743:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8400              		.loc 1 743 63 view .LVU2899
 8401 33e1 4589FE   		mov	r14d, r15d	# _18, shift_flipped
 8402              	# sieve_extend.c:745:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 745:sieve_extend.c ****         copy_word += 2;
 8403              		.loc 1 745 42 view .LVU2900
 8404 33e4 C4C29BF7 		shrx	rsi, r9, r12	# tmp1186, source1, _12
 8404      F1
 8405              	# sieve_extend.c:743:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8406              		.loc 1 743 52 view .LVU2901
 8407 33e9 48890CFB 		mov	QWORD PTR [rbx+rdi*8], rcx	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 
 8408              	.LVL411:
 744:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 8409              		.loc 1 744 9 is_stmt 1 view .LVU2902
 745:sieve_extend.c ****         copy_word += 2;
 8410              		.loc 1 745 9 view .LVU2903
 8411              	# sieve_extend.c:745:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 745:sieve_extend.c ****         copy_word += 2;
 8412              		.loc 1 745 63 is_stmt 0 view .LVU2904
 8413 33ed C4E289F7 		shlx	rcx, QWORD PTR 16[rdx], r14	# tmp1185, MEM[base: _743, offset: 16B], tmp1430
 8413      4A10
 8414              	# sieve_extend.c:745:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 745:sieve_extend.c ****         copy_word += 2;
 8415              		.loc 1 745 52 view .LVU2905
 8416 33f3 4809CE   		or	rsi, rcx	# tmp1187, tmp1185
 8417 33f6 488974FB 		mov	QWORD PTR 8[rbx+rdi*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset:
 8417      08
 8418              	.LVL412:
 746:sieve_extend.c ****         source_word += 2;
 8419              		.loc 1 746 9 is_stmt 1 view .LVU2906
 8420              	# sieve_extend.c:746:         copy_word += 2;
 746:sieve_extend.c ****         source_word += 2;
 8421              		.loc 1 746 19 is_stmt 0 view .LVU2907
 8422 33fb 4883C702 		add	rdi, 2	# copy_word,
 747:sieve_extend.c ****         distance += 2;
 8423              		.loc 1 747 9 is_stmt 1 view .LVU2908
 748:sieve_extend.c ****     }
 8424              		.loc 1 748 9 view .LVU2909
 8425 33ff 4883C210 		add	rdx, 16	# ivtmp.459,
 8426              	.LBE373:
 8427              	# sieve_extend.c:740:     while (copy_word < fast_loop_stop_word) {
 740:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8428              		.loc 1 740 11 is_stmt 0 view .LVU2910
 8429 3403 48397C24 		cmp	QWORD PTR 48[rsp], rdi	# %sfp, copy_word
 8429      30
 8430 3408 4D8D143B 		lea	r10, [r11+rdi]	# distance,
 740:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8431              		.loc 1 740 11 is_stmt 1 view .LVU2911
 8432 340c 0F86B0F5 		jbe	.L548	#,
 8432      FFFF
 8433              	.LVL413:
 8434              	.L798:
 740:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
GAS LISTING /tmp/ccjg94QQ.s 			page 236


 8435              		.loc 1 740 11 is_stmt 0 view .LVU2912
 8436 3412 4489F9   		mov	ecx, r15d	# _18, shift_flipped
 8437              	.L547:
 8438              	.LVL414:
 8439              	.LBB374:
 741:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 8440              		.loc 1 741 9 is_stmt 1 view .LVU2913
 742:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8441              		.loc 1 742 9 view .LVU2914
 8442              	# sieve_extend.c:742:         bitword_t source1 = bitarray[source_word+1];
 742:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8443              		.loc 1 742 19 is_stmt 0 view .LVU2915
 8444 3415 4C8B4A08 		mov	r9, QWORD PTR 8[rdx]	# source1, MEM[base: _743, offset: 8B]
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8445              		.loc 1 743 9 is_stmt 1 view .LVU2916
 8446              	# sieve_extend.c:743:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8447              		.loc 1 743 42 is_stmt 0 view .LVU2917
 8448 3419 C4629BF7 		shrx	r8, QWORD PTR [rdx], r12	# tmp897, MEM[base: _743, offset: 0B], _12
 8448      02
 8449              	# sieve_extend.c:743:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8450              		.loc 1 743 63 view .LVU2918
 8451 341e C442F1F7 		shlx	r14, r9, rcx	# tmp898, source1, _18
 8451      F1
 8452              	# sieve_extend.c:743:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8453              		.loc 1 743 52 view .LVU2919
 8454 3423 4D09F0   		or	r8, r14	# tmp899, tmp898
 8455              	# sieve_extend.c:745:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 745:sieve_extend.c ****         copy_word += 2;
 8456              		.loc 1 745 42 view .LVU2920
 8457 3426 C4429BF7 		shrx	r10, r9, r12	# tmp902, source1, _12
 8457      D1
 8458              	# sieve_extend.c:743:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8459              		.loc 1 743 52 view .LVU2921
 8460 342b 4C8904FB 		mov	QWORD PTR [rbx+rdi*8], r8	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 0
 8461              	.LVL415:
 744:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 8462              		.loc 1 744 9 is_stmt 1 view .LVU2922
 745:sieve_extend.c ****         copy_word += 2;
 8463              		.loc 1 745 9 view .LVU2923
 8464              	# sieve_extend.c:745:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 745:sieve_extend.c ****         copy_word += 2;
 8465              		.loc 1 745 63 is_stmt 0 view .LVU2924
 8466 342f C4E2F1F7 		shlx	rsi, QWORD PTR 16[rdx], rcx	# tmp901, MEM[base: _743, offset: 16B], _18
 8466      7210
 8467              	# sieve_extend.c:745:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 745:sieve_extend.c ****         copy_word += 2;
 8468              		.loc 1 745 52 view .LVU2925
 8469 3435 4C09D6   		or	rsi, r10	# tmp903, tmp902
 8470 3438 488974FB 		mov	QWORD PTR 8[rbx+rdi*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset:
 8470      08
 8471              	.LVL416:
 746:sieve_extend.c ****         source_word += 2;
 8472              		.loc 1 746 9 is_stmt 1 view .LVU2926
GAS LISTING /tmp/ccjg94QQ.s 			page 237


 8473              	# sieve_extend.c:746:         copy_word += 2;
 746:sieve_extend.c ****         source_word += 2;
 8474              		.loc 1 746 19 is_stmt 0 view .LVU2927
 8475 343d 4C8D4F02 		lea	r9, 2[rdi]	# tmp826,
 747:sieve_extend.c ****         distance += 2;
 8476              		.loc 1 747 9 is_stmt 1 view .LVU2928
 748:sieve_extend.c ****     }
 8477              		.loc 1 748 9 view .LVU2929
 748:sieve_extend.c ****     }
 8478              		.loc 1 748 9 is_stmt 0 view .LVU2930
 8479              	.LBE374:
 740:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8480              		.loc 1 740 11 is_stmt 1 view .LVU2931
 8481              	.LBB375:
 741:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 8482              		.loc 1 741 9 view .LVU2932
 8483              	.LVL417:
 742:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8484              		.loc 1 742 9 view .LVU2933
 8485              	# sieve_extend.c:742:         bitword_t source1 = bitarray[source_word+1];
 742:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8486              		.loc 1 742 19 is_stmt 0 view .LVU2934
 8487 3441 4C8B4218 		mov	r8, QWORD PTR 24[rdx]	# source1, MEM[base: _743, offset: 8B]
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8488              		.loc 1 743 9 is_stmt 1 view .LVU2935
 8489              	# sieve_extend.c:743:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8490              		.loc 1 743 42 is_stmt 0 view .LVU2936
 8491 3445 C4E29BF7 		shrx	rsi, QWORD PTR 16[rdx], r12	# tmp909, MEM[base: _743, offset: 0B], _12
 8491      7210
 8492              	# sieve_extend.c:743:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8493              		.loc 1 743 63 view .LVU2937
 8494 344b C442F1F7 		shlx	r14, r8, rcx	# tmp910, source1, _18
 8494      F0
 8495              	# sieve_extend.c:743:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8496              		.loc 1 743 52 view .LVU2938
 8497 3450 4C09F6   		or	rsi, r14	# tmp911, tmp910
 8498 3453 4A8934CB 		mov	QWORD PTR [rbx+r9*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 0
 8499              	.LVL418:
 744:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 8500              		.loc 1 744 9 is_stmt 1 view .LVU2939
 745:sieve_extend.c ****         copy_word += 2;
 8501              		.loc 1 745 9 view .LVU2940
 8502              	# sieve_extend.c:745:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 745:sieve_extend.c ****         copy_word += 2;
 8503              		.loc 1 745 42 is_stmt 0 view .LVU2941
 8504 3457 C4429BF7 		shrx	r8, r8, r12	# tmp914, source1, _12
 8504      C0
 8505              	# sieve_extend.c:745:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 745:sieve_extend.c ****         copy_word += 2;
 8506              		.loc 1 745 63 view .LVU2942
 8507 345c 4C8B5220 		mov	r10, QWORD PTR 32[rdx]	# MEM[base: _743, offset: 16B], MEM[base: _743, offset: 16B]
 8508 3460 C4C2F1F7 		shlx	rsi, r10, rcx	# tmp913, MEM[base: _743, offset: 16B], _18
 8508      F2
 8509              	# sieve_extend.c:745:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
GAS LISTING /tmp/ccjg94QQ.s 			page 238


 745:sieve_extend.c ****         copy_word += 2;
 8510              		.loc 1 745 52 view .LVU2943
 8511 3465 4909F0   		or	r8, rsi	# tmp915, tmp913
 8512 3468 4883C240 		add	rdx, 64	# ivtmp.459,
 8513 346c 4E8944CB 		mov	QWORD PTR 8[rbx+r9*8], r8	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 8
 8513      08
 8514              	.LVL419:
 746:sieve_extend.c ****         source_word += 2;
 8515              		.loc 1 746 9 is_stmt 1 view .LVU2944
 8516              	# sieve_extend.c:746:         copy_word += 2;
 746:sieve_extend.c ****         source_word += 2;
 8517              		.loc 1 746 19 is_stmt 0 view .LVU2945
 8518 3471 4C8D4F04 		lea	r9, 4[rdi]	# copy_word,
 747:sieve_extend.c ****         distance += 2;
 8519              		.loc 1 747 9 is_stmt 1 view .LVU2946
 748:sieve_extend.c ****     }
 8520              		.loc 1 748 9 view .LVU2947
 748:sieve_extend.c ****     }
 8521              		.loc 1 748 9 is_stmt 0 view .LVU2948
 8522              	.LBE375:
 740:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8523              		.loc 1 740 11 is_stmt 1 view .LVU2949
 8524              	.LBB376:
 741:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 8525              		.loc 1 741 9 view .LVU2950
 8526              	.LVL420:
 742:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8527              		.loc 1 742 9 view .LVU2951
 8528              	# sieve_extend.c:742:         bitword_t source1 = bitarray[source_word+1];
 742:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8529              		.loc 1 742 19 is_stmt 0 view .LVU2952
 8530 3475 4C8B52E8 		mov	r10, QWORD PTR -24[rdx]	# source1, MEM[base: _743, offset: 8B]
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8531              		.loc 1 743 9 is_stmt 1 view .LVU2953
 8532              	# sieve_extend.c:743:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8533              		.loc 1 743 42 is_stmt 0 view .LVU2954
 8534 3479 C4E29BF7 		shrx	rsi, QWORD PTR -32[rdx], r12	# tmp921, MEM[base: _743, offset: 0B], _12
 8534      72E0
 8535              	# sieve_extend.c:743:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8536              		.loc 1 743 63 view .LVU2955
 8537 347f C442F1F7 		shlx	r14, r10, rcx	# tmp922, source1, _18
 8537      F2
 8538              	# sieve_extend.c:743:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8539              		.loc 1 743 52 view .LVU2956
 8540 3484 4C09F6   		or	rsi, r14	# tmp923, tmp922
 8541 3487 4A8934CB 		mov	QWORD PTR [rbx+r9*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 0
 8542              	.LVL421:
 744:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 8543              		.loc 1 744 9 is_stmt 1 view .LVU2957
 745:sieve_extend.c ****         copy_word += 2;
 8544              		.loc 1 745 9 view .LVU2958
 8545              	# sieve_extend.c:745:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 745:sieve_extend.c ****         copy_word += 2;
 8546              		.loc 1 745 42 is_stmt 0 view .LVU2959
GAS LISTING /tmp/ccjg94QQ.s 			page 239


 8547 348b C4429BF7 		shrx	r10, r10, r12	# tmp926, source1, _12
 8547      D2
 8548              	# sieve_extend.c:745:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 745:sieve_extend.c ****         copy_word += 2;
 8549              		.loc 1 745 63 view .LVU2960
 8550 3490 4C8B42F0 		mov	r8, QWORD PTR -16[rdx]	# MEM[base: _743, offset: 16B], MEM[base: _743, offset: 16B]
 8551 3494 C4C2F1F7 		shlx	rsi, r8, rcx	# tmp925, MEM[base: _743, offset: 16B], _18
 8551      F0
 8552              	# sieve_extend.c:745:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 745:sieve_extend.c ****         copy_word += 2;
 8553              		.loc 1 745 52 view .LVU2961
 8554 3499 4909F2   		or	r10, rsi	# tmp927, tmp925
 8555 349c 4E8954CB 		mov	QWORD PTR 8[rbx+r9*8], r10	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 
 8555      08
 8556              	.LVL422:
 746:sieve_extend.c ****         source_word += 2;
 8557              		.loc 1 746 9 is_stmt 1 view .LVU2962
 8558              	# sieve_extend.c:746:         copy_word += 2;
 746:sieve_extend.c ****         source_word += 2;
 8559              		.loc 1 746 19 is_stmt 0 view .LVU2963
 8560 34a1 4C8D4F06 		lea	r9, 6[rdi]	# copy_word,
 747:sieve_extend.c ****         distance += 2;
 8561              		.loc 1 747 9 is_stmt 1 view .LVU2964
 748:sieve_extend.c ****     }
 8562              		.loc 1 748 9 view .LVU2965
 748:sieve_extend.c ****     }
 8563              		.loc 1 748 9 is_stmt 0 view .LVU2966
 8564              	.LBE376:
 740:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8565              		.loc 1 740 11 is_stmt 1 view .LVU2967
 8566              	.LBB377:
 741:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 8567              		.loc 1 741 9 view .LVU2968
 8568              	.LVL423:
 742:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8569              		.loc 1 742 9 view .LVU2969
 8570              	# sieve_extend.c:742:         bitword_t source1 = bitarray[source_word+1];
 742:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8571              		.loc 1 742 19 is_stmt 0 view .LVU2970
 8572 34a5 4C8B42F8 		mov	r8, QWORD PTR -8[rdx]	# source1, MEM[base: _743, offset: 8B]
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8573              		.loc 1 743 9 is_stmt 1 view .LVU2971
 8574              	# sieve_extend.c:743:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8575              		.loc 1 743 42 is_stmt 0 view .LVU2972
 8576 34a9 C4E29BF7 		shrx	rsi, QWORD PTR -16[rdx], r12	# tmp933, MEM[base: _743, offset: 0B], _12
 8576      72F0
 8577              	# sieve_extend.c:743:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8578              		.loc 1 743 63 view .LVU2973
 8579 34af C442F1F7 		shlx	r14, r8, rcx	# tmp934, source1, _18
 8579      F0
 8580              	# sieve_extend.c:743:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8581              		.loc 1 743 52 view .LVU2974
 8582 34b4 4C09F6   		or	rsi, r14	# tmp935, tmp934
 8583 34b7 4A8934CB 		mov	QWORD PTR [rbx+r9*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 0
GAS LISTING /tmp/ccjg94QQ.s 			page 240


 8584              	.LVL424:
 744:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 8585              		.loc 1 744 9 is_stmt 1 view .LVU2975
 745:sieve_extend.c ****         copy_word += 2;
 8586              		.loc 1 745 9 view .LVU2976
 8587              	# sieve_extend.c:746:         copy_word += 2;
 746:sieve_extend.c ****         source_word += 2;
 8588              		.loc 1 746 19 is_stmt 0 view .LVU2977
 8589 34bb 4883C708 		add	rdi, 8	# copy_word,
 8590              	# sieve_extend.c:745:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 745:sieve_extend.c ****         copy_word += 2;
 8591              		.loc 1 745 42 view .LVU2978
 8592 34bf C4429BF7 		shrx	r8, r8, r12	# tmp938, source1, _12
 8592      C0
 8593              	# sieve_extend.c:745:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 745:sieve_extend.c ****         copy_word += 2;
 8594              		.loc 1 745 63 view .LVU2979
 8595 34c4 4C8B12   		mov	r10, QWORD PTR [rdx]	# MEM[base: _743, offset: 16B], MEM[base: _743, offset: 16B]
 8596 34c7 C4C2F1F7 		shlx	rsi, r10, rcx	# tmp937, MEM[base: _743, offset: 16B], _18
 8596      F2
 8597              	# sieve_extend.c:745:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 745:sieve_extend.c ****         copy_word += 2;
 8598              		.loc 1 745 52 view .LVU2980
 8599 34cc 4909F0   		or	r8, rsi	# tmp939, tmp937
 8600              	.LBE377:
 8601              	# sieve_extend.c:740:     while (copy_word < fast_loop_stop_word) {
 740:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8602              		.loc 1 740 11 view .LVU2981
 8603 34cf 48397C24 		cmp	QWORD PTR 48[rsp], rdi	# %sfp, copy_word
 8603      30
 8604 34d4 4D8D143B 		lea	r10, [r11+rdi]	# distance,
 8605              	.LBB378:
 8606              	# sieve_extend.c:745:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 745:sieve_extend.c ****         copy_word += 2;
 8607              		.loc 1 745 52 view .LVU2982
 8608 34d8 4E8944CB 		mov	QWORD PTR 8[rbx+r9*8], r8	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 8
 8608      08
 8609              	.LVL425:
 746:sieve_extend.c ****         source_word += 2;
 8610              		.loc 1 746 9 is_stmt 1 view .LVU2983
 747:sieve_extend.c ****         distance += 2;
 8611              		.loc 1 747 9 view .LVU2984
 748:sieve_extend.c ****     }
 8612              		.loc 1 748 9 view .LVU2985
 748:sieve_extend.c ****     }
 8613              		.loc 1 748 9 is_stmt 0 view .LVU2986
 8614              	.LBE378:
 740:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8615              		.loc 1 740 11 is_stmt 1 view .LVU2987
 8616 34dd 0F8732FF 		ja	.L547	#,
 8616      FFFF
 8617 34e3 E9DAF4FF 		jmp	.L548	#
 8617      FF
 8618              	.LVL426:
 8619              		.p2align 4,,7
 8620              		.p2align 3
 8621              	.L569:
GAS LISTING /tmp/ccjg94QQ.s 			page 241


 740:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8622              		.loc 1 740 11 is_stmt 0 view .LVU2988
 8623              	.LBE381:
 8624              	.LBE400:
 8625              	# sieve_extend.c:904:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8626              		.loc 1 904 5 view .LVU2989
 8627 34e8 4889C6   		mov	rsi, rax	# copy_word, ivtmp.428
 8628              	# sieve_extend.c:898:     source_word += distance;
 898:sieve_extend.c ****     copy_word += distance;
 8629              		.loc 1 898 17 view .LVU2990
 8630 34eb 4C89D9   		mov	rcx, r11	# source_word, _183
 8631 34ee 4D8D4301 		lea	r8, 1[r11]	# tmp793,
 8632 34f2 E9CDF5FF 		jmp	.L551	#
 8632      FF
 8633              		.p2align 4,,7
 8634 34f7 90       		.p2align 3
 8635              	.L550:
 898:sieve_extend.c ****     copy_word += distance;
 8636              		.loc 1 898 17 view .LVU2991
 8637 34f8 488B7C24 		mov	rdi, QWORD PTR 88[rsp]	# _183, %sfp
 8637      58
 8638 34fd 4801DA   		add	rdx, rbx	# ivtmp.436, bitarray
 8639 3500 4C8B5424 		mov	r10, QWORD PTR 64[rsp]	# tmp749, %sfp
 8639      40
 8640              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 8641              		.loc 1 905 29 view .LVU2992
 8642 3505 4829F8   		sub	rax, rdi	# tmp753, _183
 8643 3508 4901FA   		add	r10, rdi	# tmp749, _183
 8644 350b 4E8D4CD3 		lea	r9, 8[rbx+r10*8]	# tmp752,
 8644      08
 8645 3510 4929F1   		sub	r9, rsi	# tmp752, _220
 8646 3513 4C89CE   		mov	rsi, r9	# _729, tmp752
 8647 3516 4929D1   		sub	r9, rdx	# tmp811, ivtmp.436
 8648 3519 4983E908 		sub	r9, 8	# tmp812,
 8649 351d 49C1E903 		shr	r9, 3	# tmp810,
 8650 3521 4983C101 		add	r9, 1	# tmp813,
 8651 3525 4183E107 		and	r9d, 7	# tmp814,
 8652 3529 0F84F900 		je	.L795	#,
 8652      0000
 8653 352f 4983F901 		cmp	r9, 1	# tmp814,
 8654 3533 0F84CA00 		je	.L707	#,
 8654      0000
 8655 3539 4983F902 		cmp	r9, 2	# tmp814,
 8656 353d 0F84A500 		je	.L708	#,
 8656      0000
 8657 3543 4983F903 		cmp	r9, 3	# tmp814,
 8658 3547 0F848000 		je	.L709	#,
 8658      0000
 8659 354d 4983F904 		cmp	r9, 4	# tmp814,
 8660 3551 745E     		je	.L710	#,
 8661 3553 4983F905 		cmp	r9, 5	# tmp814,
 8662 3557 743D     		je	.L711	#,
 8663 3559 4983F906 		cmp	r9, 6	# tmp814,
 8664 355d 741C     		je	.L712	#,
 905:sieve_extend.c ****     }
GAS LISTING /tmp/ccjg94QQ.s 			page 242


 8665              		.loc 1 905 9 is_stmt 1 view .LVU2993
 8666              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 8667              		.loc 1 905 56 is_stmt 0 view .LVU2994
 8668 355f C4629BF7 		shrx	r8, QWORD PTR [rdx], r12	# tmp1090, MEM[base: _720, offset: 0B], _12
 8668      02
 8669              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 8670              		.loc 1 905 94 view .LVU2995
 8671 3564 440FB65C 		movzx	r11d, BYTE PTR 72[rsp]	# tmp1404, %sfp
 8671      2448
 8672 356a C462A1F7 		shlx	r14, QWORD PTR 8[rdx], r11	# tmp1092, MEM[base: _720, offset: 8B], tmp1404
 8672      7208
 8673              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 8674              		.loc 1 905 66 view .LVU2996
 8675 3570 4D09F0   		or	r8, r14	# tmp1093, tmp1092
 8676 3573 4C8904C2 		mov	QWORD PTR [rdx+rax*8], r8	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1093
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8677              		.loc 1 904 43 is_stmt 1 view .LVU2997
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8678              		.loc 1 904 11 view .LVU2998
 8679 3577 4883C208 		add	rdx, 8	# ivtmp.436,
 8680              	.L712:
 905:sieve_extend.c ****     }
 8681              		.loc 1 905 9 view .LVU2999
 8682              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 8683              		.loc 1 905 56 is_stmt 0 view .LVU3000
 8684 357b C4629BF7 		shrx	r15, QWORD PTR [rdx], r12	# tmp1095, MEM[base: _720, offset: 0B], _12
 8684      3A
 8685              	.LVL427:
 8686              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 8687              		.loc 1 905 94 view .LVU3001
 8688 3580 0FB64C24 		movzx	ecx, BYTE PTR 72[rsp]	# tmp1405, %sfp
 8688      48
 8689 3585 C462F1F7 		shlx	r13, QWORD PTR 8[rdx], rcx	# tmp1097, MEM[base: _720, offset: 8B], tmp1405
 8689      6A08
 8690              	.LVL428:
 8691              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 8692              		.loc 1 905 66 view .LVU3002
 8693 358b 4D09EF   		or	r15, r13	# tmp1098, tmp1097
 8694 358e 4C893CC2 		mov	QWORD PTR [rdx+rax*8], r15	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1098
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8695              		.loc 1 904 43 is_stmt 1 view .LVU3003
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8696              		.loc 1 904 11 view .LVU3004
 8697 3592 4883C208 		add	rdx, 8	# ivtmp.436,
 8698              	.L711:
 905:sieve_extend.c ****     }
 8699              		.loc 1 905 9 view .LVU3005
 8700              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 8701              		.loc 1 905 56 is_stmt 0 view .LVU3006
 8702 3596 C4629BF7 		shrx	r10, QWORD PTR [rdx], r12	# tmp1100, MEM[base: _720, offset: 0B], _12
GAS LISTING /tmp/ccjg94QQ.s 			page 243


 8702      12
 8703              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 8704              		.loc 1 905 94 view .LVU3007
 8705 359b 0FB67C24 		movzx	edi, BYTE PTR 72[rsp]	# tmp1406, %sfp
 8705      48
 8706 35a0 C462C1F7 		shlx	r9, QWORD PTR 8[rdx], rdi	# tmp1102, MEM[base: _720, offset: 8B], tmp1406
 8706      4A08
 8707              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 8708              		.loc 1 905 66 view .LVU3008
 8709 35a6 4D09CA   		or	r10, r9	# tmp1103, tmp1102
 8710 35a9 4C8914C2 		mov	QWORD PTR [rdx+rax*8], r10	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1103
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8711              		.loc 1 904 43 is_stmt 1 view .LVU3009
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8712              		.loc 1 904 11 view .LVU3010
 8713 35ad 4883C208 		add	rdx, 8	# ivtmp.436,
 8714              	.L710:
 905:sieve_extend.c ****     }
 8715              		.loc 1 905 9 view .LVU3011
 8716              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 8717              		.loc 1 905 56 is_stmt 0 view .LVU3012
 8718 35b1 C4629BF7 		shrx	r8, QWORD PTR [rdx], r12	# tmp1105, MEM[base: _720, offset: 0B], _12
 8718      02
 8719              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 8720              		.loc 1 905 94 view .LVU3013
 8721 35b6 440FB65C 		movzx	r11d, BYTE PTR 72[rsp]	# tmp1407, %sfp
 8721      2448
 8722 35bc C462A1F7 		shlx	r14, QWORD PTR 8[rdx], r11	# tmp1107, MEM[base: _720, offset: 8B], tmp1407
 8722      7208
 8723              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 8724              		.loc 1 905 66 view .LVU3014
 8725 35c2 4D09F0   		or	r8, r14	# tmp1108, tmp1107
 8726 35c5 4C8904C2 		mov	QWORD PTR [rdx+rax*8], r8	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1108
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8727              		.loc 1 904 43 is_stmt 1 view .LVU3015
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8728              		.loc 1 904 11 view .LVU3016
 8729 35c9 4883C208 		add	rdx, 8	# ivtmp.436,
 8730              	.L709:
 905:sieve_extend.c ****     }
 8731              		.loc 1 905 9 view .LVU3017
 8732              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 8733              		.loc 1 905 56 is_stmt 0 view .LVU3018
 8734 35cd C4629BF7 		shrx	r15, QWORD PTR [rdx], r12	# tmp1110, MEM[base: _720, offset: 0B], _12
 8734      3A
 8735              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 8736              		.loc 1 905 94 view .LVU3019
 8737 35d2 0FB64C24 		movzx	ecx, BYTE PTR 72[rsp]	# tmp1408, %sfp
 8737      48
 8738 35d7 C462F1F7 		shlx	r13, QWORD PTR 8[rdx], rcx	# tmp1112, MEM[base: _720, offset: 8B], tmp1408
GAS LISTING /tmp/ccjg94QQ.s 			page 244


 8738      6A08
 8739              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 8740              		.loc 1 905 66 view .LVU3020
 8741 35dd 4D09EF   		or	r15, r13	# tmp1113, tmp1112
 8742 35e0 4C893CC2 		mov	QWORD PTR [rdx+rax*8], r15	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1113
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8743              		.loc 1 904 43 is_stmt 1 view .LVU3021
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8744              		.loc 1 904 11 view .LVU3022
 8745 35e4 4883C208 		add	rdx, 8	# ivtmp.436,
 8746              	.L708:
 905:sieve_extend.c ****     }
 8747              		.loc 1 905 9 view .LVU3023
 8748              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 8749              		.loc 1 905 56 is_stmt 0 view .LVU3024
 8750 35e8 C4629BF7 		shrx	r10, QWORD PTR [rdx], r12	# tmp1115, MEM[base: _720, offset: 0B], _12
 8750      12
 8751              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 8752              		.loc 1 905 94 view .LVU3025
 8753 35ed 0FB67C24 		movzx	edi, BYTE PTR 72[rsp]	# tmp1409, %sfp
 8753      48
 8754 35f2 C462C1F7 		shlx	r9, QWORD PTR 8[rdx], rdi	# tmp1117, MEM[base: _720, offset: 8B], tmp1409
 8754      4A08
 8755              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 8756              		.loc 1 905 66 view .LVU3026
 8757 35f8 4D09CA   		or	r10, r9	# tmp1118, tmp1117
 8758 35fb 4C8914C2 		mov	QWORD PTR [rdx+rax*8], r10	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1118
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8759              		.loc 1 904 43 is_stmt 1 view .LVU3027
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8760              		.loc 1 904 11 view .LVU3028
 8761 35ff 4883C208 		add	rdx, 8	# ivtmp.436,
 8762              	.L707:
 905:sieve_extend.c ****     }
 8763              		.loc 1 905 9 view .LVU3029
 8764              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 8765              		.loc 1 905 56 is_stmt 0 view .LVU3030
 8766 3603 C4629BF7 		shrx	r8, QWORD PTR [rdx], r12	# tmp1120, MEM[base: _720, offset: 0B], _12
 8766      02
 8767              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 8768              		.loc 1 905 94 view .LVU3031
 8769 3608 440FB65C 		movzx	r11d, BYTE PTR 72[rsp]	# tmp1410, %sfp
 8769      2448
 8770 360e C462A1F7 		shlx	r14, QWORD PTR 8[rdx], r11	# tmp1122, MEM[base: _720, offset: 8B], tmp1410
 8770      7208
 8771              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 8772              		.loc 1 905 66 view .LVU3032
 8773 3614 4D09F0   		or	r8, r14	# tmp1123, tmp1122
 8774 3617 4C8904C2 		mov	QWORD PTR [rdx+rax*8], r8	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1123
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
GAS LISTING /tmp/ccjg94QQ.s 			page 245


 8775              		.loc 1 904 43 is_stmt 1 view .LVU3033
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8776              		.loc 1 904 11 view .LVU3034
 8777 361b 4883C208 		add	rdx, 8	# ivtmp.436,
 8778              	# sieve_extend.c:904:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8779              		.loc 1 904 5 is_stmt 0 view .LVU3035
 8780 361f 4839F2   		cmp	rdx, rsi	# ivtmp.436, _729
 8781 3622 0F84C600 		je	.L781	#,
 8781      0000
 8782              	.L795:
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8783              		.loc 1 904 5 view .LVU3036
 8784 3628 448B7C24 		mov	r15d, DWORD PTR 72[rsp]	# _18, %sfp
 8784      48
 8785              	.L555:
 905:sieve_extend.c ****     }
 8786              		.loc 1 905 9 is_stmt 1 view .LVU3037
 8787              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 8788              		.loc 1 905 94 is_stmt 0 view .LVU3038
 8789 362d C46281F7 		shlx	r13, QWORD PTR 8[rdx], r15	# tmp756, MEM[base: _720, offset: 8B], _18
 8789      6A08
 8790              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 8791              		.loc 1 905 56 view .LVU3039
 8792 3633 C4E29BF7 		shrx	rcx, QWORD PTR [rdx], r12	# tmp754, MEM[base: _720, offset: 0B], _12
 8792      0A
 8793              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 8794              		.loc 1 905 66 view .LVU3040
 8795 3638 4C09E9   		or	rcx, r13	# tmp758, tmp756
 8796 363b 4C8D5208 		lea	r10, 8[rdx]	# tmp815,
 8797 363f 48890CC2 		mov	QWORD PTR [rdx+rax*8], rcx	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp758
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8798              		.loc 1 904 43 is_stmt 1 view .LVU3041
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8799              		.loc 1 904 11 view .LVU3042
 905:sieve_extend.c ****     }
 8800              		.loc 1 905 9 view .LVU3043
 8801              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 8802              		.loc 1 905 94 is_stmt 0 view .LVU3044
 8803 3643 C44281F7 		shlx	r9, QWORD PTR 8[r10], r15	# tmp988, MEM[base: _720, offset: 8B], _18
 8803      4A08
 8804              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 8805              		.loc 1 905 56 view .LVU3045
 8806 3649 C4E29BF7 		shrx	rdi, QWORD PTR 8[rdx], r12	# tmp986, MEM[base: _720, offset: 0B], _12
 8806      7A08
 8807              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 8808              		.loc 1 905 66 view .LVU3046
 8809 364f 4C09CF   		or	rdi, r9	# tmp989, tmp988
 8810 3652 4C8D5A10 		lea	r11, 16[rdx]	# ivtmp.436,
 8811 3656 488D4A18 		lea	rcx, 24[rdx]	# ivtmp.436,
 8812 365a 49893CC2 		mov	QWORD PTR [r10+rax*8], rdi	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp989
GAS LISTING /tmp/ccjg94QQ.s 			page 246


 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8813              		.loc 1 904 43 is_stmt 1 view .LVU3047
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8814              		.loc 1 904 11 view .LVU3048
 905:sieve_extend.c ****     }
 8815              		.loc 1 905 9 view .LVU3049
 8816              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 8817              		.loc 1 905 56 is_stmt 0 view .LVU3050
 8818 365e C4629BF7 		shrx	r14, QWORD PTR 16[rdx], r12	# tmp992, MEM[base: _720, offset: 0B], _12
 8818      7210
 8819              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 8820              		.loc 1 905 94 view .LVU3051
 8821 3664 C44281F7 		shlx	r8, QWORD PTR 8[r11], r15	# tmp994, MEM[base: _720, offset: 8B], _18
 8821      4308
 8822              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 8823              		.loc 1 905 66 view .LVU3052
 8824 366a 4D09C6   		or	r14, r8	# tmp995, tmp994
 8825 366d 4D8934C3 		mov	QWORD PTR [r11+rax*8], r14	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp995
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8826              		.loc 1 904 43 is_stmt 1 view .LVU3053
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8827              		.loc 1 904 11 view .LVU3054
 905:sieve_extend.c ****     }
 8828              		.loc 1 905 9 view .LVU3055
 8829              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 8830              		.loc 1 905 56 is_stmt 0 view .LVU3056
 8831 3671 C4629BF7 		shrx	r13, QWORD PTR 24[rdx], r12	# tmp998, MEM[base: _720, offset: 0B], _12
 8831      6A18
 8832              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 8833              		.loc 1 905 94 view .LVU3057
 8834 3677 C46281F7 		shlx	r10, QWORD PTR 8[rcx], r15	# tmp1000, MEM[base: _720, offset: 8B], _18
 8834      5108
 8835              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 8836              		.loc 1 905 66 view .LVU3058
 8837 367d 4D09D5   		or	r13, r10	# tmp1001, tmp1000
 8838 3680 4C8D4A20 		lea	r9, 32[rdx]	# ivtmp.436,
 8839 3684 4C8D7228 		lea	r14, 40[rdx]	# ivtmp.436,
 8840 3688 4C892CC1 		mov	QWORD PTR [rcx+rax*8], r13	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1001
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8841              		.loc 1 904 43 is_stmt 1 view .LVU3059
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8842              		.loc 1 904 11 view .LVU3060
 905:sieve_extend.c ****     }
 8843              		.loc 1 905 9 view .LVU3061
 8844              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 8845              		.loc 1 905 94 is_stmt 0 view .LVU3062
 8846 368c C44281F7 		shlx	r11, QWORD PTR 8[r9], r15	# tmp1006, MEM[base: _720, offset: 8B], _18
 8846      5908
 8847              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
GAS LISTING /tmp/ccjg94QQ.s 			page 247


 8848              		.loc 1 905 56 view .LVU3063
 8849 3692 C4E29BF7 		shrx	rdi, QWORD PTR 32[rdx], r12	# tmp1004, MEM[base: _720, offset: 0B], _12
 8849      7A20
 8850              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 8851              		.loc 1 905 66 view .LVU3064
 8852 3698 4C09DF   		or	rdi, r11	# tmp1007, tmp1006
 8853 369b 49893CC1 		mov	QWORD PTR [r9+rax*8], rdi	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1007
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8854              		.loc 1 904 43 is_stmt 1 view .LVU3065
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8855              		.loc 1 904 11 view .LVU3066
 905:sieve_extend.c ****     }
 8856              		.loc 1 905 9 view .LVU3067
 8857              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 8858              		.loc 1 905 56 is_stmt 0 view .LVU3068
 8859 369f C4E29BF7 		shrx	rcx, QWORD PTR 40[rdx], r12	# tmp1010, MEM[base: _720, offset: 0B], _12
 8859      4A28
 8860              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 8861              		.loc 1 905 94 view .LVU3069
 8862 36a5 C44281F7 		shlx	r8, QWORD PTR 8[r14], r15	# tmp1012, MEM[base: _720, offset: 8B], _18
 8862      4608
 8863              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 8864              		.loc 1 905 66 view .LVU3070
 8865 36ab 4C09C1   		or	rcx, r8	# tmp1013, tmp1012
 8866 36ae 4C8D6A30 		lea	r13, 48[rdx]	# ivtmp.436,
 8867 36b2 4C8D5A38 		lea	r11, 56[rdx]	# ivtmp.436,
 8868 36b6 49890CC6 		mov	QWORD PTR [r14+rax*8], rcx	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1013
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8869              		.loc 1 904 43 is_stmt 1 view .LVU3071
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8870              		.loc 1 904 11 view .LVU3072
 905:sieve_extend.c ****     }
 8871              		.loc 1 905 9 view .LVU3073
 8872              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 8873              		.loc 1 905 56 is_stmt 0 view .LVU3074
 8874 36ba C4629BF7 		shrx	r10, QWORD PTR 48[rdx], r12	# tmp1016, MEM[base: _720, offset: 0B], _12
 8874      5230
 8875              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 8876              		.loc 1 905 94 view .LVU3075
 8877 36c0 C44281F7 		shlx	r9, QWORD PTR 8[r13], r15	# tmp1018, MEM[base: _720, offset: 8B], _18
 8877      4D08
 8878              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 8879              		.loc 1 905 66 view .LVU3076
 8880 36c6 4D09CA   		or	r10, r9	# tmp1019, tmp1018
 8881 36c9 4D8954C5 		mov	QWORD PTR 0[r13+rax*8], r10	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1019
 8881      00
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8882              		.loc 1 904 43 is_stmt 1 view .LVU3077
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8883              		.loc 1 904 11 view .LVU3078
GAS LISTING /tmp/ccjg94QQ.s 			page 248


 905:sieve_extend.c ****     }
 8884              		.loc 1 905 9 view .LVU3079
 8885 36ce 4883C240 		add	rdx, 64	# ivtmp.436,
 8886              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 8887              		.loc 1 905 56 is_stmt 0 view .LVU3080
 8888 36d2 C4E29BF7 		shrx	rdi, QWORD PTR -8[rdx], r12	# tmp1022, MEM[base: _720, offset: 0B], _12
 8888      7AF8
 8889              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 8890              		.loc 1 905 94 view .LVU3081
 8891 36d8 C44281F7 		shlx	r14, QWORD PTR 8[r11], r15	# tmp1024, MEM[base: _720, offset: 8B], _18
 8891      7308
 8892              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 8893              		.loc 1 905 66 view .LVU3082
 8894 36de 4C09F7   		or	rdi, r14	# tmp1025, tmp1024
 8895              	# sieve_extend.c:904:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8896              		.loc 1 904 5 view .LVU3083
 8897 36e1 4839F2   		cmp	rdx, rsi	# ivtmp.436, _729
 8898              	# sieve_extend.c:905:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 905:sieve_extend.c ****     }
 8899              		.loc 1 905 66 view .LVU3084
 8900 36e4 49893CC3 		mov	QWORD PTR [r11+rax*8], rdi	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1025
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8901              		.loc 1 904 43 is_stmt 1 view .LVU3085
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8902              		.loc 1 904 11 view .LVU3086
 8903              	# sieve_extend.c:904:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8904              		.loc 1 904 5 is_stmt 0 view .LVU3087
 8905 36e8 0F853FFF 		jne	.L555	#,
 8905      FFFF
 8906              	.L781:
 904:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8907              		.loc 1 904 5 view .LVU3088
 8908 36ee 488B5424 		mov	rdx, QWORD PTR 64[rsp]	# aligned_copy_word, %sfp
 8908      40
 8909 36f3 4C8D5201 		lea	r10, 1[rdx]	# ivtmp.428,
 8910 36f7 E9E9F6FF 		jmp	.L556	#
 8910      FF
 8911              	.LVL429:
 8912 36fc 0F1F4000 		.p2align 4,,7
 8913              		.p2align 3
 8914              	.L570:
 8915              	# sieve_extend.c:898:     source_word += distance;
 898:sieve_extend.c ****     copy_word += distance;
 8916              		.loc 1 898 17 view .LVU3089
 8917 3700 4889C6   		mov	rsi, rax	# copy_word, ivtmp.428
 8918              	# sieve_extend.c:910:     source_word = copy_word - size; // recalibrate
 910:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 8919              		.loc 1 910 17 view .LVU3090
 8920 3703 4D89EE   		mov	r14, r13	# source_word, source_word
 8921 3706 E906F9FF 		jmp	.L562	#
 8921      FF
 8922              	.LVL430:
GAS LISTING /tmp/ccjg94QQ.s 			page 249


 8923              	.L807:
 8924              	.LBB401:
 8925              	.LBB382:
 8926              	.LBB379:
 741:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 8927              		.loc 1 741 9 is_stmt 1 view .LVU3091
 742:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8928              		.loc 1 742 9 view .LVU3092
 8929              	# sieve_extend.c:742:         bitword_t source1 = bitarray[source_word+1];
 742:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8930              		.loc 1 742 19 is_stmt 0 view .LVU3093
 8931 370b 4C8B4A08 		mov	r9, QWORD PTR 8[rdx]	# source1, MEM[base: _743, offset: 8B]
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8932              		.loc 1 743 9 is_stmt 1 view .LVU3094
 8933              	# sieve_extend.c:743:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8934              		.loc 1 743 42 is_stmt 0 view .LVU3095
 8935 370f C4E29BF7 		shrx	rsi, QWORD PTR [rdx], r12	# tmp1161, MEM[base: _743, offset: 0B], _12
 8935      32
 8936              	# sieve_extend.c:743:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8937              		.loc 1 743 63 view .LVU3096
 8938 3714 4589FA   		mov	r10d, r15d	# tmp1425, _18
 8939 3717 C442A9F7 		shlx	r8, r9, r10	# tmp1162, source1, tmp1425
 8939      C1
 8940              	# sieve_extend.c:743:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8941              		.loc 1 743 52 view .LVU3097
 8942 371c 4C09C6   		or	rsi, r8	# tmp1163, tmp1162
 8943              	# sieve_extend.c:743:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8944              		.loc 1 743 63 view .LVU3098
 8945 371f 4589FE   		mov	r14d, r15d	# _18, shift_flipped
 8946              	# sieve_extend.c:743:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 743:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8947              		.loc 1 743 52 view .LVU3099
 8948 3722 488934FB 		mov	QWORD PTR [rbx+rdi*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 
 8949              	.LVL431:
 744:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 8950              		.loc 1 744 9 is_stmt 1 view .LVU3100
 745:sieve_extend.c ****         copy_word += 2;
 8951              		.loc 1 745 9 view .LVU3101
 8952              	# sieve_extend.c:745:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 745:sieve_extend.c ****         copy_word += 2;
 8953              		.loc 1 745 42 is_stmt 0 view .LVU3102
 8954 3726 C4429BF7 		shrx	r9, r9, r12	# tmp1166, source1, _12
 8954      C9
 8955              	# sieve_extend.c:745:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 745:sieve_extend.c ****         copy_word += 2;
 8956              		.loc 1 745 63 view .LVU3103
 8957 372b 488B5210 		mov	rdx, QWORD PTR 16[rdx]	# MEM[base: _743, offset: 16B], MEM[base: _743, offset: 16B]
 8958 372f C46289F7 		shlx	r10, rdx, r14	# tmp1165, MEM[base: _743, offset: 16B], tmp1426
 8958      D2
 8959              	# sieve_extend.c:745:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 745:sieve_extend.c ****         copy_word += 2;
 8960              		.loc 1 745 52 view .LVU3104
 8961 3734 4D09CA   		or	r10, r9	# tmp1167, tmp1166
GAS LISTING /tmp/ccjg94QQ.s 			page 250


 8962 3737 488D5120 		lea	rdx, 32[rcx]	# ivtmp.459,
 8963 373b 4C8954FB 		mov	QWORD PTR 8[rbx+rdi*8], r10	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset:
 8963      08
 8964              	.LVL432:
 746:sieve_extend.c ****         source_word += 2;
 8965              		.loc 1 746 9 is_stmt 1 view .LVU3105
 8966              	# sieve_extend.c:746:         copy_word += 2;
 746:sieve_extend.c ****         source_word += 2;
 8967              		.loc 1 746 19 is_stmt 0 view .LVU3106
 8968 3740 488D7804 		lea	rdi, 4[rax]	# copy_word,
 747:sieve_extend.c ****         distance += 2;
 8969              		.loc 1 747 9 is_stmt 1 view .LVU3107
 748:sieve_extend.c ****     }
 8970              		.loc 1 748 9 view .LVU3108
 748:sieve_extend.c ****     }
 8971              		.loc 1 748 9 is_stmt 0 view .LVU3109
 8972              	.LBE379:
 740:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8973              		.loc 1 740 11 is_stmt 1 view .LVU3110
 8974 3744 E94EFCFF 		jmp	.L733	#
 8974      FF
 8975              	.LBE382:
 8976              	.LBE401:
 8977              		.cfi_endproc
 8978              	.LFE72:
 8980              		.section	.rodata.str1.1,"aMS",@progbits,1
 8981              	.LC4:
 8982 0000 25336A75 		.string	"%3ju "
 8982      2000
 8983              	.LC5:
 8984 0006 0A466F75 		.string	"\nFound %ju primes until %ju\n"
 8984      6E642025 
 8984      6A752070 
 8984      72696D65 
 8984      7320756E 
 8985              		.text
 8986 3749 0F1F8000 		.p2align 4
 8986      000000
 8988              	show_primes.isra.0:
 8989              	.LVL433:
 8990              	.LFB87:
1081:sieve_extend.c ****     counter_t primeCount = 1;    // We already have 2
 8991              		.loc 1 1081 13 view -0
 8992              		.cfi_startproc
 8993              	.LBB402:
1083:sieve_extend.c ****         primeCount++;
 8994              		.loc 1 1083 30 view .LVU3112
 8995              	.LBE402:
 8996              	# sieve_extend.c:1081: static void show_primes(struct sieve_state *sieve, counter_t maxFactor) {
1081:sieve_extend.c ****     counter_t primeCount = 1;    // We already have 2
 8997              		.loc 1 1081 13 is_stmt 0 view .LVU3113
 8998 3750 4157     		push	r15	#
 8999              		.cfi_def_cfa_offset 16
 9000              		.cfi_offset 15, -16
 9001 3752 4156     		push	r14	#
 9002              		.cfi_def_cfa_offset 24
 9003              		.cfi_offset 14, -24
GAS LISTING /tmp/ccjg94QQ.s 			page 251


 9004 3754 4155     		push	r13	#
 9005              		.cfi_def_cfa_offset 32
 9006              		.cfi_offset 13, -32
 9007 3756 4154     		push	r12	#
 9008              		.cfi_def_cfa_offset 40
 9009              		.cfi_offset 12, -40
 9010 3758 4989F4   		mov	r12, rsi	# ISRA.74, tmp168
 9011 375b 55       		push	rbp	#
 9012              		.cfi_def_cfa_offset 48
 9013              		.cfi_offset 6, -48
 9014 375c 53       		push	rbx	#
 9015              		.cfi_def_cfa_offset 56
 9016              		.cfi_offset 3, -56
 9017 375d 488D6424 		lea	rsp, -8[rsp]	#,
 9017      F8
 9018              		.cfi_def_cfa_offset 64
 9019              	.LBB419:
 9020              	# sieve_extend.c:1083:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(s
1083:sieve_extend.c ****         primeCount++;
 9021              		.loc 1 1083 44 view .LVU3114
 9022 3762 488B36   		mov	rsi, QWORD PTR [rsi]	# prephitmp_86, *ISRA.74_32(D)
 9023              	# sieve_extend.c:1083:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(s
1083:sieve_extend.c ****         primeCount++;
 9024              		.loc 1 1083 5 view .LVU3115
 9025 3765 4883FE01 		cmp	rsi, 1	# prephitmp_86,
 9026 3769 0F867501 		jbe	.L815	#,
 9026      0000
 9027              	# sieve_extend.c:1085:         if (factor < maxFactor/2) {
1085:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 9028              		.loc 1 1085 31 view .LVU3116
 9029 376f 48D1EA   		shr	rdx	# maxFactor
 9030              	.LVL434:
1085:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 9031              		.loc 1 1085 31 view .LVU3117
 9032 3772 4989FD   		mov	r13, rdi	# ISRA.73, tmp167
 9033              	# sieve_extend.c:1083:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(s
1083:sieve_extend.c ****         primeCount++;
 9034              		.loc 1 1083 20 view .LVU3118
 9035 3775 BB010000 		mov	ebx, 1	# factor,
 9035      00
 9036              	# sieve_extend.c:1085:         if (factor < maxFactor/2) {
1085:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 9037              		.loc 1 1085 31 view .LVU3119
 9038 377a 4889D5   		mov	rbp, rdx	# _4, maxFactor
 9039              	.LBE419:
 9040              	# sieve_extend.c:1082:     counter_t primeCount = 1;    // We already have 2
1082:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitarray, factor+
 9041              		.loc 1 1082 15 view .LVU3120
 9042 377d 41BF0100 		mov	r15d, 1	# primeCount,
 9042      0000
 9043              	.LBB420:
 9044              	.LBB403:
 9045              	.LBB404:
 9046              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 9047              		.file 3 "/usr/include/x86_64-linux-gnu/bits/stdio2.h"
   1:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** /* Checking macros for stdio functions.
   2:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    Copyright (C) 2004-2020 Free Software Foundation, Inc.
GAS LISTING /tmp/ccjg94QQ.s 			page 252


   3:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    This file is part of the GNU C Library.
   4:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
   5:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    The GNU C Library is free software; you can redistribute it and/or
   6:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    modify it under the terms of the GNU Lesser General Public
   7:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    License as published by the Free Software Foundation; either
   8:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    version 2.1 of the License, or (at your option) any later version.
   9:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  10:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    The GNU C Library is distributed in the hope that it will be useful,
  11:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  13:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    Lesser General Public License for more details.
  14:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  15:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    You should have received a copy of the GNU Lesser General Public
  16:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    License along with the GNU C Library; if not, see
  17:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    <https://www.gnu.org/licenses/>.  */
  18:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  19:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #ifndef _BITS_STDIO2_H
  20:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #define _BITS_STDIO2_H 1
  21:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  22:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #ifndef _STDIO_H
  23:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # error "Never include <bits/stdio2.h> directly; use <stdio.h> instead."
  24:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
  25:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  26:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __sprintf_chk (char *__restrict __s, int __flag, size_t __slen,
  27:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  const char *__restrict __format, ...) __THROW;
  28:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vsprintf_chk (char *__restrict __s, int __flag, size_t __slen,
  29:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   const char *__restrict __format,
  30:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   __gnuc_va_list __ap) __THROW;
  31:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  32:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #ifdef __va_arg_pack
  33:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  34:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (sprintf (char *__restrict __s, const char *__restrict __fmt, ...))
  35:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  36:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___sprintf_chk (__s, __USE_FORTIFY_LEVEL - 1,
  37:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				  __bos (__s), __fmt, __va_arg_pack ());
  38:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  39:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #elif !defined __cplusplus
  40:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # define sprintf(str, ...) \
  41:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   __builtin___sprintf_chk (str, __USE_FORTIFY_LEVEL - 1, __bos (str), \
  42:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   __VA_ARGS__)
  43:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
  44:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  45:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  46:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (vsprintf (char *__restrict __s, const char *__restrict __fmt,
  47:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		 __gnuc_va_list __ap))
  48:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  49:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___vsprintf_chk (__s, __USE_FORTIFY_LEVEL - 1,
  50:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				   __bos (__s), __fmt, __ap);
  51:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  52:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  53:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #if defined __USE_ISOC99 || defined __USE_UNIX98
  54:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  55:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __snprintf_chk (char *__restrict __s, size_t __n, int __flag,
  56:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   size_t __slen, const char *__restrict __format,
  57:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   ...) __THROW;
  58:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vsnprintf_chk (char *__restrict __s, size_t __n, int __flag,
  59:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    size_t __slen, const char *__restrict __format,
GAS LISTING /tmp/ccjg94QQ.s 			page 253


  60:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    __gnuc_va_list __ap) __THROW;
  61:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  62:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # ifdef __va_arg_pack
  63:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  64:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (snprintf (char *__restrict __s, size_t __n,
  65:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		 const char *__restrict __fmt, ...))
  66:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  67:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
  68:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				   __bos (__s), __fmt, __va_arg_pack ());
  69:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  70:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # elif !defined __cplusplus
  71:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #  define snprintf(str, len, ...) \
  72:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   __builtin___snprintf_chk (str, len, __USE_FORTIFY_LEVEL - 1, __bos (str), \
  73:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    __VA_ARGS__)
  74:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # endif
  75:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  76:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  77:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (vsnprintf (char *__restrict __s, size_t __n,
  78:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		  const char *__restrict __fmt, __gnuc_va_list __ap))
  79:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  80:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___vsnprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
  81:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				    __bos (__s), __fmt, __ap);
  82:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  83:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  84:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
  85:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  86:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #if __USE_FORTIFY_LEVEL > 1
  87:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  88:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __fprintf_chk (FILE *__restrict __stream, int __flag,
  89:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  const char *__restrict __format, ...);
  90:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __printf_chk (int __flag, const char *__restrict __format, ...);
  91:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vfprintf_chk (FILE *__restrict __stream, int __flag,
  92:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   const char *__restrict __format, __gnuc_va_list __ap);
  93:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vprintf_chk (int __flag, const char *__restrict __format,
  94:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  __gnuc_va_list __ap);
  95:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  96:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # ifdef __va_arg_pack
  97:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** fprintf (FILE *__restrict __stream, const char *__restrict __fmt, ...)
  99:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt,
 101:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 102:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
 103:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
 104:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** printf (const char *__restrict __fmt, ...)
 106:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 107:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __printf_chk (__USE_FORTIFY_LEVEL - 1, __fmt, __va_arg_pack ());
 9048              		.loc 3 107 10 view .LVU3121
 9049 3783 49BECDCC 		movabs	r14, -3689348814741910323	# tmp136,
 9049      CCCCCCCC 
 9049      CCCC
 9050              	.LVL435:
 9051 378d 0F1F00   		.p2align 4
 9052              		.p2align 3
 9053              	.L814:
 9054              		.loc 3 107 10 view .LVU3122
GAS LISTING /tmp/ccjg94QQ.s 			page 254


 9055              	.LBE404:
 9056              	.LBE403:
1084:sieve_extend.c ****         if (factor < maxFactor/2) {
 9057              		.loc 1 1084 9 is_stmt 1 view .LVU3123
 9058              	# sieve_extend.c:1084:         primeCount++;
1084:sieve_extend.c ****         if (factor < maxFactor/2) {
 9059              		.loc 1 1084 19 is_stmt 0 view .LVU3124
 9060 3790 4983C701 		add	r15, 1	# primeCount,
 9061              	.LVL436:
1085:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 9062              		.loc 1 1085 9 is_stmt 1 view .LVU3125
 9063              	# sieve_extend.c:1085:         if (factor < maxFactor/2) {
1085:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 9064              		.loc 1 1085 12 is_stmt 0 view .LVU3126
 9065 3794 4839DD   		cmp	rbp, rbx	# _4, factor
 9066 3797 0F87FB00 		ja	.L838	#,
 9066      0000
 9067              	.L810:
1083:sieve_extend.c ****         primeCount++;
 9068              		.loc 1 1083 52 is_stmt 1 view .LVU3127
 9069              	.LVL437:
 9070              	# sieve_extend.c:1083:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(s
1083:sieve_extend.c ****         primeCount++;
 9071              		.loc 1 1083 61 is_stmt 0 view .LVU3128
 9072 379d 4D8B4500 		mov	r8, QWORD PTR 0[r13]	# _11, *ISRA.73_33(D)
 9073 37a1 4883C301 		add	rbx, 1	# factor,
 9074              	.LVL438:
 9075              	.L837:
 9076              	.LBB409:
 9077              	.LBI409:
 122:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 9078              		.loc 1 122 25 is_stmt 1 view .LVU3129
 9079              	.LBB410:
 123:sieve_extend.c ****     return index;
 9080              		.loc 1 123 5 view .LVU3130
 123:sieve_extend.c ****     return index;
 9081              		.loc 1 123 11 view .LVU3131
 9082              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9083              		.loc 1 123 21 is_stmt 0 view .LVU3132
 9084 37a5 4889D9   		mov	rcx, rbx	# tmp124, factor
 9085 37a8 48C1E906 		shr	rcx, 6	# tmp124,
 9086              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9087              		.loc 1 123 12 view .LVU3133
 9088 37ac 4D8B0CC8 		mov	r9, QWORD PTR [r8+rcx*8]	# *_39,* _11
 9089              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9090              		.loc 1 123 11 view .LVU3134
 9091 37b0 490FA3D9 		bt	r9, rbx	# *_39, factor
 9092 37b4 0F83A600 		jnc	.L812	#,
 9092      0000
 123:sieve_extend.c ****     return index;
 9093              		.loc 1 123 58 is_stmt 1 view .LVU3135
 9094              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9095              		.loc 1 123 63 is_stmt 0 view .LVU3136
GAS LISTING /tmp/ccjg94QQ.s 			page 255


 9096 37ba 4C8D5301 		lea	r10, 1[rbx]	# tmp138,
 9097              	.LVL439:
 9098              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9099              		.loc 1 123 21 view .LVU3137
 9100 37be 4D89D3   		mov	r11, r10	# tmp129, factor
 9101              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9102              		.loc 1 123 63 view .LVU3138
 9103 37c1 4C89D3   		mov	rbx, r10	# factor, tmp138
 123:sieve_extend.c ****     return index;
 9104              		.loc 1 123 11 is_stmt 1 view .LVU3139
 9105              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9106              		.loc 1 123 21 is_stmt 0 view .LVU3140
 9107 37c4 49C1EB06 		shr	r11, 6	# tmp129,
 9108              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9109              		.loc 1 123 12 view .LVU3141
 9110 37c8 4B8B04D8 		mov	rax, QWORD PTR [r8+r11*8]	# *_16, *_16
 9111              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9112              		.loc 1 123 11 view .LVU3142
 9113 37cc 4C0FA3D0 		bt	rax, r10	# *_16, factor
 9114 37d0 0F838A00 		jnc	.L812	#,
 9114      0000
 123:sieve_extend.c ****     return index;
 9115              		.loc 1 123 58 is_stmt 1 view .LVU3143
 9116              	.LVL440:
 9117              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9118              		.loc 1 123 63 is_stmt 0 view .LVU3144
 9119 37d6 4883C301 		add	rbx, 1	# factor,
 9120              	.LVL441:
 123:sieve_extend.c ****     return index;
 9121              		.loc 1 123 11 is_stmt 1 view .LVU3145
 9122              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9123              		.loc 1 123 21 is_stmt 0 view .LVU3146
 9124 37da 4889DA   		mov	rdx, rbx	# tmp139, factor
 9125 37dd 48C1EA06 		shr	rdx, 6	# tmp139,
 9126              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9127              		.loc 1 123 12 view .LVU3147
 9128 37e1 498B3CD0 		mov	rdi, QWORD PTR [r8+rdx*8]	# *_16, *_16
 9129              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9130              		.loc 1 123 11 view .LVU3148
 9131 37e5 480FA3DF 		bt	rdi, rbx	# *_16, factor
 9132 37e9 7375     		jnc	.L812	#,
 123:sieve_extend.c ****     return index;
 9133              		.loc 1 123 58 is_stmt 1 view .LVU3149
 9134              	.LVL442:
 9135              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9136              		.loc 1 123 63 is_stmt 0 view .LVU3150
 9137 37eb 498D5A02 		lea	rbx, 2[r10]	# factor,
GAS LISTING /tmp/ccjg94QQ.s 			page 256


 9138              	.LVL443:
 123:sieve_extend.c ****     return index;
 9139              		.loc 1 123 11 is_stmt 1 view .LVU3151
 9140              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9141              		.loc 1 123 21 is_stmt 0 view .LVU3152
 9142 37ef 4889D9   		mov	rcx, rbx	# tmp143, factor
 9143 37f2 48C1E906 		shr	rcx, 6	# tmp143,
 9144              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9145              		.loc 1 123 12 view .LVU3153
 9146 37f6 4D8B0CC8 		mov	r9, QWORD PTR [r8+rcx*8]	# *_16, *_16
 9147              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9148              		.loc 1 123 11 view .LVU3154
 9149 37fa 490FA3D9 		bt	r9, rbx	# *_16, factor
 9150 37fe 7360     		jnc	.L812	#,
 123:sieve_extend.c ****     return index;
 9151              		.loc 1 123 58 is_stmt 1 view .LVU3155
 9152              	.LVL444:
 9153              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9154              		.loc 1 123 63 is_stmt 0 view .LVU3156
 9155 3800 498D5A03 		lea	rbx, 3[r10]	# factor,
 9156              	.LVL445:
 123:sieve_extend.c ****     return index;
 9157              		.loc 1 123 11 is_stmt 1 view .LVU3157
 9158              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9159              		.loc 1 123 21 is_stmt 0 view .LVU3158
 9160 3804 4989DB   		mov	r11, rbx	# tmp147, factor
 9161 3807 49C1EB06 		shr	r11, 6	# tmp147,
 9162              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9163              		.loc 1 123 12 view .LVU3159
 9164 380b 4B8B04D8 		mov	rax, QWORD PTR [r8+r11*8]	# *_16, *_16
 9165              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9166              		.loc 1 123 11 view .LVU3160
 9167 380f 480FA3D8 		bt	rax, rbx	# *_16, factor
 9168 3813 734B     		jnc	.L812	#,
 123:sieve_extend.c ****     return index;
 9169              		.loc 1 123 58 is_stmt 1 view .LVU3161
 9170              	.LVL446:
 9171              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9172              		.loc 1 123 63 is_stmt 0 view .LVU3162
 9173 3815 498D5A04 		lea	rbx, 4[r10]	# factor,
 9174              	.LVL447:
 123:sieve_extend.c ****     return index;
 9175              		.loc 1 123 11 is_stmt 1 view .LVU3163
 9176              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9177              		.loc 1 123 21 is_stmt 0 view .LVU3164
 9178 3819 4889DA   		mov	rdx, rbx	# tmp151, factor
 9179 381c 48C1EA06 		shr	rdx, 6	# tmp151,
 9180              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
GAS LISTING /tmp/ccjg94QQ.s 			page 257


 123:sieve_extend.c ****     return index;
 9181              		.loc 1 123 12 view .LVU3165
 9182 3820 498B3CD0 		mov	rdi, QWORD PTR [r8+rdx*8]	# *_16, *_16
 9183              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9184              		.loc 1 123 11 view .LVU3166
 9185 3824 480FA3DF 		bt	rdi, rbx	# *_16, factor
 9186 3828 7336     		jnc	.L812	#,
 123:sieve_extend.c ****     return index;
 9187              		.loc 1 123 58 is_stmt 1 view .LVU3167
 9188              	.LVL448:
 9189              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9190              		.loc 1 123 63 is_stmt 0 view .LVU3168
 9191 382a 498D5A05 		lea	rbx, 5[r10]	# factor,
 9192              	.LVL449:
 123:sieve_extend.c ****     return index;
 9193              		.loc 1 123 11 is_stmt 1 view .LVU3169
 9194              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9195              		.loc 1 123 21 is_stmt 0 view .LVU3170
 9196 382e 4889D9   		mov	rcx, rbx	# tmp155, factor
 9197 3831 48C1E906 		shr	rcx, 6	# tmp155,
 9198              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9199              		.loc 1 123 12 view .LVU3171
 9200 3835 4D8B0CC8 		mov	r9, QWORD PTR [r8+rcx*8]	# *_16, *_16
 9201              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9202              		.loc 1 123 11 view .LVU3172
 9203 3839 490FA3D9 		bt	r9, rbx	# *_16, factor
 9204 383d 7321     		jnc	.L812	#,
 123:sieve_extend.c ****     return index;
 9205              		.loc 1 123 58 is_stmt 1 view .LVU3173
 9206              	.LVL450:
 9207              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9208              		.loc 1 123 63 is_stmt 0 view .LVU3174
 9209 383f 498D5A06 		lea	rbx, 6[r10]	# factor,
 9210              	.LVL451:
 123:sieve_extend.c ****     return index;
 9211              		.loc 1 123 11 is_stmt 1 view .LVU3175
 9212              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9213              		.loc 1 123 21 is_stmt 0 view .LVU3176
 9214 3843 4989DB   		mov	r11, rbx	# tmp159, factor
 9215 3846 49C1EB06 		shr	r11, 6	# tmp159,
 9216              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9217              		.loc 1 123 12 view .LVU3177
 9218 384a 4B8B04D8 		mov	rax, QWORD PTR [r8+r11*8]	# *_16, *_16
 9219              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9220              		.loc 1 123 11 view .LVU3178
 9221 384e 480FA3D8 		bt	rax, rbx	# *_16, factor
 9222 3852 730C     		jnc	.L812	#,
 123:sieve_extend.c ****     return index;
GAS LISTING /tmp/ccjg94QQ.s 			page 258


 9223              		.loc 1 123 58 is_stmt 1 view .LVU3179
 9224              	.LVL452:
 9225              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9226              		.loc 1 123 63 is_stmt 0 view .LVU3180
 9227 3854 498D5A07 		lea	rbx, 7[r10]	# factor,
 9228              	.LVL453:
 123:sieve_extend.c ****     return index;
 9229              		.loc 1 123 11 is_stmt 1 view .LVU3181
 9230 3858 E948FFFF 		jmp	.L837	#
 9230      FF
 9231 385d 0F1F00   		.p2align 4,,7
 9232              		.p2align 3
 9233              	.L812:
 9234              	.LVL454:
 123:sieve_extend.c ****     return index;
 9235              		.loc 1 123 11 is_stmt 0 view .LVU3182
 9236              	.LBE410:
 9237              	.LBE409:
1083:sieve_extend.c ****         primeCount++;
 9238              		.loc 1 1083 30 is_stmt 1 view .LVU3183
 9239              	# sieve_extend.c:1083:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(s
1083:sieve_extend.c ****         primeCount++;
 9240              		.loc 1 1083 5 is_stmt 0 view .LVU3184
 9241 3860 4839F3   		cmp	rbx, rsi	# factor, prephitmp_86
 9242 3863 0F8227FF 		jb	.L814	#,
 9242      FFFF
 9243              	.LVL455:
 9244              	.L809:
1083:sieve_extend.c ****         primeCount++;
 9245              		.loc 1 1083 5 view .LVU3185
 9246              	.LBE420:
1090:sieve_extend.c **** }
 9247              		.loc 1 1090 5 is_stmt 1 view .LVU3186
 9248              	.LBB421:
 9249              	.LBI421:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 9250              		.loc 3 105 1 view .LVU3187
 9251              	.LBB422:
 9252              		.loc 3 107 3 view .LVU3188
 9253              	.LBE422:
 9254              	.LBE421:
 9255              	# sieve_extend.c:1091: }
1091:sieve_extend.c **** 
 9256              		.loc 1 1091 1 is_stmt 0 view .LVU3189
 9257 3869 488D6424 		lea	rsp, 8[rsp]	#,
 9257      08
 9258              		.cfi_remember_state
 9259              		.cfi_def_cfa_offset 56
 9260              	.LBB426:
 9261              	.LBB423:
 9262              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 9263              		.loc 3 107 10 view .LVU3190
 9264 386e 4C89FA   		mov	rdx, r15	#, primeCount
 9265              	.LBE423:
 9266              	.LBE426:
 9267              	# sieve_extend.c:1091: }
GAS LISTING /tmp/ccjg94QQ.s 			page 259


1091:sieve_extend.c **** 
 9268              		.loc 1 1091 1 view .LVU3191
 9269 3871 5B       		pop	rbx	#
 9270              		.cfi_def_cfa_offset 48
 9271              	# sieve_extend.c:1090:     printf("\nFound %ju primes until %ju\n",(uintmax_t)primeCount, (uintmax_
1090:sieve_extend.c **** }
 9272              		.loc 1 1090 5 view .LVU3192
 9273 3872 488D4C36 		lea	rcx, 1[rsi+rsi]	# tmp135,
 9273      01
 9274              	.LBB427:
 9275              	.LBB424:
 9276              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 9277              		.loc 3 107 10 view .LVU3193
 9278 3877 BF010000 		mov	edi, 1	#,
 9278      00
 9279 387c 31C0     		xor	eax, eax	#
 9280 387e 488D3500 		lea	rsi, .LC5[rip]	#,
 9280      000000
 9281              	.LBE424:
 9282              	.LBE427:
 9283              	# sieve_extend.c:1091: }
1091:sieve_extend.c **** 
 9284              		.loc 1 1091 1 view .LVU3194
 9285 3885 5D       		pop	rbp	#
 9286              		.cfi_def_cfa_offset 40
 9287 3886 415C     		pop	r12	#
 9288              		.cfi_def_cfa_offset 32
 9289 3888 415D     		pop	r13	#
 9290              		.cfi_def_cfa_offset 24
 9291 388a 415E     		pop	r14	#
 9292              		.cfi_def_cfa_offset 16
 9293 388c 415F     		pop	r15	#
 9294              		.cfi_def_cfa_offset 8
 9295              	.LBB428:
 9296              	.LBB425:
 9297              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 9298              		.loc 3 107 10 view .LVU3195
 9299 388e E9000000 		jmp	__printf_chk@PLT	#
 9299      00
 9300              	.LVL456:
 9301              		.p2align 4,,7
 9302 3893 0F1F4400 		.p2align 3
 9302      00
 9303              	.L838:
 9304              		.cfi_restore_state
 9305              		.loc 3 107 10 view .LVU3196
 9306              	.LBE425:
 9307              	.LBE428:
 9308              	.LBB429:
1086:sieve_extend.c ****             if (primeCount % 10 == 0) printf("\n");
 9309              		.loc 1 1086 13 is_stmt 1 view .LVU3197
 9310              	.LBB411:
 9311              	.LBI403:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 9312              		.loc 3 105 1 view .LVU3198
 9313              	.LBB405:
 9314              		.loc 3 107 3 view .LVU3199
GAS LISTING /tmp/ccjg94QQ.s 			page 260


 9315              	.LBE405:
 9316              	.LBE411:
 9317              	# sieve_extend.c:1086:             printf("%3ju ",(uintmax_t)factor*2+1);
1086:sieve_extend.c ****             if (primeCount % 10 == 0) printf("\n");
 9318              		.loc 1 1086 13 is_stmt 0 view .LVU3200
 9319 3898 488D541B 		lea	rdx, 1[rbx+rbx]	# tmp111,
 9319      01
 9320              	.LBB412:
 9321              	.LBB406:
 9322              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 9323              		.loc 3 107 10 view .LVU3201
 9324 389d BF010000 		mov	edi, 1	#,
 9324      00
 9325 38a2 31C0     		xor	eax, eax	#
 9326 38a4 488D3500 		lea	rsi, .LC4[rip]	#,
 9326      000000
 9327 38ab E8000000 		call	__printf_chk@PLT	#
 9327      00
 9328              	.LVL457:
 9329              		.loc 3 107 10 view .LVU3202
 9330              	.LBE406:
 9331              	.LBE412:
1087:sieve_extend.c ****         }
 9332              		.loc 1 1087 13 is_stmt 1 view .LVU3203
 9333              	.LBB413:
 9334              	.LBB407:
 9335              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 9336              		.loc 3 107 10 is_stmt 0 view .LVU3204
 9337 38b0 4C89F8   		mov	rax, r15	# tmp120, primeCount
 9338              	.LBE407:
 9339              	.LBE413:
 9340              	# sieve_extend.c:1087:             if (primeCount % 10 == 0) printf("\n");
1087:sieve_extend.c ****         }
 9341              		.loc 1 1087 16 view .LVU3205
 9342 38b3 48BF9999 		movabs	rdi, 1844674407370955161	# tmp172,
 9342      99999999 
 9342      9919
 9343              	.LBB414:
 9344              	.LBB408:
 9345              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 9346              		.loc 3 107 10 view .LVU3206
 9347 38bd 490FAFC6 		imul	rax, r14	# tmp120, tmp136
 9348 38c1 C4E3FBF0 		rorx	rdx, rax, 1	# tmp122, tmp120,
 9348      D001
 9349              	.LBE408:
 9350              	.LBE414:
 9351              	# sieve_extend.c:1087:             if (primeCount % 10 == 0) printf("\n");
1087:sieve_extend.c ****         }
 9352              		.loc 1 1087 16 view .LVU3207
 9353 38c7 4839FA   		cmp	rdx, rdi	# tmp122, tmp172
 9354 38ca 760C     		jbe	.L811	#,
 9355              	.L836:
 9356 38cc 498B3424 		mov	rsi, QWORD PTR [r12]	# prephitmp_86, *ISRA.74_32(D)
 9357              	.LBB415:
 9358              	.LBB416:
 9359              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 9360              		.loc 3 107 10 view .LVU3208
GAS LISTING /tmp/ccjg94QQ.s 			page 261


 9361 38d0 E9C8FEFF 		jmp	.L810	#
 9361      FF
 9362              		.p2align 4,,7
 9363 38d5 0F1F00   		.p2align 3
 9364              	.L811:
 9365              	.LBE416:
 9366              	.LBE415:
1087:sieve_extend.c ****         }
 9367              		.loc 1 1087 39 is_stmt 1 view .LVU3209
 9368              	.LVL458:
 9369              	.LBB418:
 9370              	.LBI415:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 9371              		.loc 3 105 1 view .LVU3210
 9372              	.LBB417:
 9373              		.loc 3 107 3 view .LVU3211
 9374              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 9375              		.loc 3 107 10 is_stmt 0 view .LVU3212
 9376 38d8 BF0A0000 		mov	edi, 10	#,
 9376      00
 9377 38dd E8000000 		call	putchar@PLT	#
 9377      00
 9378              	.LVL459:
 9379 38e2 EBE8     		jmp	.L836	#
 9380              	.LVL460:
 9381              	.L815:
 9382              		.loc 3 107 10 view .LVU3213
 9383              	.LBE417:
 9384              	.LBE418:
 9385              	.LBE429:
 9386              	# sieve_extend.c:1082:     counter_t primeCount = 1;    // We already have 2
1082:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitarray, factor+
 9387              		.loc 1 1082 15 view .LVU3214
 9388 38e4 41BF0100 		mov	r15d, 1	# primeCount,
 9388      0000
 9389 38ea E97AFFFF 		jmp	.L809	#
 9389      FF
 9390              		.cfi_endproc
 9391              	.LFE87:
 9393 38ef 90       		.p2align 4
 9395              	sieve:
 9396              	.LVL461:
 9397              	.LFB76:
1059:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 9398              		.loc 1 1059 86 is_stmt 1 view -0
 9399              		.cfi_startproc
1060:sieve_extend.c ****     counter_t prime     = 0;
 9400              		.loc 1 1060 5 view .LVU3216
 9401              	# sieve_extend.c:1059: static struct sieve_state *sieve(const counter_t maxints, const counter_t bl
1059:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 9402              		.loc 1 1059 86 is_stmt 0 view .LVU3217
 9403 38f0 4157     		push	r15	#
 9404              		.cfi_def_cfa_offset 16
 9405              		.cfi_offset 15, -16
 9406 38f2 4156     		push	r14	#
 9407              		.cfi_def_cfa_offset 24
 9408              		.cfi_offset 14, -24
GAS LISTING /tmp/ccjg94QQ.s 			page 262


 9409 38f4 4155     		push	r13	#
 9410              		.cfi_def_cfa_offset 32
 9411              		.cfi_offset 13, -32
 9412 38f6 4154     		push	r12	#
 9413              		.cfi_def_cfa_offset 40
 9414              		.cfi_offset 12, -40
 9415 38f8 55       		push	rbp	#
 9416              		.cfi_def_cfa_offset 48
 9417              		.cfi_offset 6, -48
 9418 38f9 53       		push	rbx	#
 9419              		.cfi_def_cfa_offset 56
 9420              		.cfi_offset 3, -56
 9421 38fa 4889FB   		mov	rbx, rdi	# maxints, tmp862
 9422              	.LVL462:
 9423              	.LBB477:
 9424              	.LBI477:
 103:sieve_extend.c ****     struct sieve_state *sieve = aligned_alloc(8, sizeof(struct sieve_state));
 9425              		.loc 1 103 28 is_stmt 1 view .LVU3218
 9426              	.LBB478:
 104:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize*8) * anticiped_cache
 9427              		.loc 1 104 5 view .LVU3219
 9428              	# sieve_extend.c:104:     struct sieve_state *sieve = aligned_alloc(8, sizeof(struct sieve_state));
 104:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize*8) * anticiped_cache
 9429              		.loc 1 104 33 is_stmt 0 view .LVU3220
 9430 38fd BF080000 		mov	edi, 8	#,
 9430      00
 9431              	.LVL463:
 104:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize*8) * anticiped_cache
 9432              		.loc 1 104 33 view .LVU3221
 9433              	.LBE478:
 9434              	.LBE477:
 9435              	# sieve_extend.c:1059: static struct sieve_state *sieve(const counter_t maxints, const counter_t bl
1059:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 9436              		.loc 1 1059 86 view .LVU3222
 9437 3902 488D6424 		lea	rsp, -104[rsp]	#,
 9437      98
 9438              		.cfi_def_cfa_offset 160
 9439              	.LBB482:
 9440              	.LBB479:
 9441              	# sieve_extend.c:105:     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesiz
 105:sieve_extend.c **** 
 9442              		.loc 1 105 22 view .LVU3223
 9443 3907 4989DE   		mov	r14, rbx	# prephitmp_991, maxints
 9444 390a 49D1EE   		shr	r14	# prephitmp_991
 9445              	.LBE479:
 9446              	.LBE482:
 9447              	# sieve_extend.c:1059: static struct sieve_state *sieve(const counter_t maxints, const counter_t bl
1059:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 9448              		.loc 1 1059 86 view .LVU3224
 9449 390d 48897424 		mov	QWORD PTR 64[rsp], rsi	# %sfp, tmp863
 9449      40
 9450              	.LBB483:
 9451              	.LBB480:
 9452              	# sieve_extend.c:104:     struct sieve_state *sieve = aligned_alloc(8, sizeof(struct sieve_state));
 104:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize*8) * anticiped_cache
 9453              		.loc 1 104 33 view .LVU3225
 9454 3912 BE180000 		mov	esi, 24	#,
GAS LISTING /tmp/ccjg94QQ.s 			page 263


 9454      00
 9455              	.LVL464:
 104:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize*8) * anticiped_cache
 9456              		.loc 1 104 33 view .LVU3226
 9457 3917 E8000000 		call	aligned_alloc@PLT	#
 9457      00
 9458              	.LVL465:
 9459              	# sieve_extend.c:105:     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesiz
 105:sieve_extend.c **** 
 9460              		.loc 1 105 22 view .LVU3227
 9461 391c 498DB600 		lea	rsi, 1024[r14]	# tmp418,
 9461      040000
 9462              	# sieve_extend.c:107:     sieve->bitarray = aligned_alloc((size_t)anticiped_cache_line_bytesize, (s
 107:sieve_extend.c ****     sieve->bits     = size >> 1;
 9463              		.loc 1 107 23 view .LVU3228
 9464 3923 BF800000 		mov	edi, 128	#,
 9464      00
 9465              	# sieve_extend.c:104:     struct sieve_state *sieve = aligned_alloc(8, sizeof(struct sieve_state));
 104:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize*8) * anticiped_cache
 9466              		.loc 1 104 33 view .LVU3229
 9467 3928 48894424 		mov	QWORD PTR 48[rsp], rax	# %sfp, <retval>
 9467      30
 9468 392d 4989C7   		mov	r15, rax	# <retval>, tmp864
 9469              	.LVL466:
 105:sieve_extend.c **** 
 9470              		.loc 1 105 5 is_stmt 1 view .LVU3230
 9471              	# sieve_extend.c:105:     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesiz
 105:sieve_extend.c **** 
 9472              		.loc 1 105 22 is_stmt 0 view .LVU3231
 9473 3930 48C1EE0A 		shr	rsi, 10	# tmp419,
 9474              	# sieve_extend.c:105:     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesiz
 105:sieve_extend.c **** 
 9475              		.loc 1 105 12 view .LVU3232
 9476 3934 48C1E607 		sal	rsi, 7	# memSize,
 9477              	# sieve_extend.c:105:     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesiz
 105:sieve_extend.c **** 
 9478              		.loc 1 105 22 view .LVU3233
 9479 3938 4C897424 		mov	QWORD PTR 8[rsp], r14	# %sfp, prephitmp_991
 9479      08
 9480              	.LVL467:
 107:sieve_extend.c ****     sieve->bits     = size >> 1;
 9481              		.loc 1 107 5 is_stmt 1 view .LVU3234
 9482              	# sieve_extend.c:107:     sieve->bitarray = aligned_alloc((size_t)anticiped_cache_line_bytesize, (s
 107:sieve_extend.c ****     sieve->bits     = size >> 1;
 9483              		.loc 1 107 23 is_stmt 0 view .LVU3235
 9484 393d E8000000 		call	aligned_alloc@PLT	#
 9484      00
 9485              	.LVL468:
 107:sieve_extend.c ****     sieve->bits     = size >> 1;
 9486              		.loc 1 107 23 view .LVU3236
 9487 3942 48894424 		mov	QWORD PTR 56[rsp], rax	# %sfp, _97
 9487      38
 9488              	.LBE480:
 9489              	.LBE483:
 9490              	.LBB484:
 9491              	.LBB485:
 9492              	# sieve_extend.c:1030:     for (;range_stop < block_stop;) {
GAS LISTING /tmp/ccjg94QQ.s 			page 264


1030:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 9493              		.loc 1 1030 5 view .LVU3237
 9494 3947 4D85F6   		test	r14, r14	# prephitmp_991
 9495              	.LBE485:
 9496              	.LBE484:
 9497              	.LBB559:
 9498              	.LBB481:
 9499              	# sieve_extend.c:107:     sieve->bitarray = aligned_alloc((size_t)anticiped_cache_line_bytesize, (s
 107:sieve_extend.c ****     sieve->bits     = size >> 1;
 9500              		.loc 1 107 21 view .LVU3238
 9501 394a 498907   		mov	QWORD PTR [r15], rax	# sieve_92->bitarray, _97
 108:sieve_extend.c ****     sieve->size     = size;
 9502              		.loc 1 108 5 is_stmt 1 view .LVU3239
 9503              	# sieve_extend.c:108:     sieve->bits     = size >> 1;
 108:sieve_extend.c ****     sieve->size     = size;
 9504              		.loc 1 108 21 is_stmt 0 view .LVU3240
 9505 394d 4D897708 		mov	QWORD PTR 8[r15], r14	# sieve_92->bits, prephitmp_991
 109:sieve_extend.c **** 
 9506              		.loc 1 109 5 is_stmt 1 view .LVU3241
 9507              	# sieve_extend.c:109:     sieve->size     = size;
 109:sieve_extend.c **** 
 9508              		.loc 1 109 21 is_stmt 0 view .LVU3242
 9509 3951 49895F10 		mov	QWORD PTR 16[r15], rbx	# sieve_92->size, maxints
 113:sieve_extend.c **** }
 9510              		.loc 1 113 5 is_stmt 1 view .LVU3243
 9511              	.LVL469:
 113:sieve_extend.c **** }
 9512              		.loc 1 113 5 is_stmt 0 view .LVU3244
 9513              	.LBE481:
 9514              	.LBE559:
1061:sieve_extend.c ****     bitword_t* bitarray = sieve->bitarray;
 9515              		.loc 1 1061 5 is_stmt 1 view .LVU3245
1062:sieve_extend.c **** 
 9516              		.loc 1 1062 5 view .LVU3246
1064:sieve_extend.c **** 
 9517              		.loc 1 1064 5 view .LVU3247
1067:sieve_extend.c ****     extendSieve(bitarray, block.pattern_start, block.pattern_size, sieve->bits);
 9518              		.loc 1 1067 5 view .LVU3248
 9519              	.LBB560:
 9520              	.LBI484:
1020:sieve_extend.c ****     register counter_t prime   = 0;
 9521              		.loc 1 1020 21 view .LVU3249
 9522              	.LBB552:
1021:sieve_extend.c ****     counter_t patternsize_bits = 1;
 9523              		.loc 1 1021 5 view .LVU3250
1022:sieve_extend.c ****     counter_t pattern_start    = 0;
 9524              		.loc 1 1022 5 view .LVU3251
1023:sieve_extend.c ****     counter_t range_stop       = block_start;
 9525              		.loc 1 1023 5 view .LVU3252
1024:sieve_extend.c ****     bitword_t* bitarray        = sieve->bitarray;
 9526              		.loc 1 1024 5 view .LVU3253
1025:sieve_extend.c ****     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 };
 9527              		.loc 1 1025 5 view .LVU3254
1026:sieve_extend.c **** 
 9528              		.loc 1 1026 5 view .LVU3255
1028:sieve_extend.c ****     
 9529              		.loc 1 1028 5 view .LVU3256
GAS LISTING /tmp/ccjg94QQ.s 			page 265


 9530              	# sieve_extend.c:1028:     sieve->bitarray[0] = SAFE_ZERO; // only the first word has to be cleared
1028:sieve_extend.c ****     
 9531              		.loc 1 1028 24 is_stmt 0 view .LVU3257
 9532 3955 48C70000 		mov	QWORD PTR [rax], 0	# MEM[(uint64_t *)_97],
 9532      000000
1030:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 9533              		.loc 1 1030 5 is_stmt 1 view .LVU3258
1030:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 9534              		.loc 1 1030 11 view .LVU3259
 9535              	# sieve_extend.c:1030:     for (;range_stop < block_stop;) {
1030:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 9536              		.loc 1 1030 5 is_stmt 0 view .LVU3260
 9537 395c 0F844413 		je	.L1226	#,
 9537      0000
 9538 3962 4989C7   		mov	r15, rax	# _97, _97
 9539              	# sieve_extend.c:1026:     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0
1026:sieve_extend.c **** 
 9540              		.loc 1 1026 18 view .LVU3261
 9541 3965 31F6     		xor	esi, esi	# block$pattern_start
 9542              	# sieve_extend.c:1021:     register counter_t prime   = 0;
1021:sieve_extend.c ****     counter_t patternsize_bits = 1;
 9543              		.loc 1 1021 24 view .LVU3262
 9544 3967 31C9     		xor	ecx, ecx	# prime
 9545              	# sieve_extend.c:1026:     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0
1026:sieve_extend.c **** 
 9546              		.loc 1 1026 18 view .LVU3263
 9547 3969 31D2     		xor	edx, edx	# block$pattern_size
 9548              	# sieve_extend.c:1023:     counter_t pattern_start    = 0;
1023:sieve_extend.c ****     counter_t range_stop       = block_start;
 9549              		.loc 1 1023 15 view .LVU3264
 9550 396b 48C74424 		mov	QWORD PTR 16[rsp], 0	# %sfp,
 9550      10000000 
 9550      00
 9551              	# sieve_extend.c:1022:     counter_t patternsize_bits = 1;
1022:sieve_extend.c ****     counter_t pattern_start    = 0;
 9552              		.loc 1 1022 15 view .LVU3265
 9553 3974 41BE0100 		mov	r14d, 1	# patternsize_bits,
 9553      0000
 9554              	.LVL470:
 9555              	.LBB486:
 9556              	# sieve_extend.c:1031:         prime = searchBitFalse(bitarray, prime+1);
1031:sieve_extend.c ****         counter_t start = prime * prime * 2 + prime * 2;
 9557              		.loc 1 1031 17 view .LVU3266
 9558 397a 41BD0100 		mov	r13d, 1	# index,
 9558      0000
 9559              	.LVL471:
 9560              		.p2align 4
 9561              		.p2align 3
 9562              	.L840:
 9563              	.LBB487:
 9564              	.LBB488:
 124:sieve_extend.c **** }
 9565              		.loc 1 124 5 is_stmt 1 view .LVU3267
 124:sieve_extend.c **** }
 9566              		.loc 1 124 5 is_stmt 0 view .LVU3268
 9567              	.LBE488:
 9568              	.LBE487:
GAS LISTING /tmp/ccjg94QQ.s 			page 266


1032:sieve_extend.c ****         if unlikely(start > block_stop) break;
 9569              		.loc 1 1032 9 is_stmt 1 view .LVU3269
 9570              	# sieve_extend.c:1032:         counter_t start = prime * prime * 2 + prime * 2;
1032:sieve_extend.c ****         if unlikely(start > block_stop) break;
 9571              		.loc 1 1032 45 is_stmt 0 view .LVU3270
 9572 3980 498D5D01 		lea	rbx, 1[r13]	# index,
 9573 3984 4F8D642D 		lea	r12, [r13+r13]	# _88,
 9573      00
 9574              	# sieve_extend.c:1032:         counter_t start = prime * prime * 2 + prime * 2;
1032:sieve_extend.c ****         if unlikely(start > block_stop) break;
 9575              		.loc 1 1032 19 view .LVU3271
 9576 3989 4889DD   		mov	rbp, rbx	# index, index
 9577 398c 490FAFEC 		imul	rbp, r12	# index, _88
 9578              	.LVL472:
1033:sieve_extend.c **** 
 9579              		.loc 1 1033 9 is_stmt 1 view .LVU3272
 9580              	# sieve_extend.c:1033:         if unlikely(start > block_stop) break;
1033:sieve_extend.c **** 
 9581              		.loc 1 1033 12 is_stmt 0 view .LVU3273
 9582 3990 483B6C24 		cmp	rbp, QWORD PTR 8[rsp]	# index, %sfp
 9582      08
 9583 3995 0F87E609 		ja	.L1227	#,
 9583      0000
1035:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 9584              		.loc 1 1035 9 is_stmt 1 view .LVU3274
 9585              	# sieve_extend.c:1035:         const counter_t step  = prime * 2 + 1;
1035:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 9586              		.loc 1 1035 25 is_stmt 0 view .LVU3275
 9587 399b 4983C401 		add	r12, 1	# step,
 9588              	.LVL473:
1036:sieve_extend.c **** 
 9589              		.loc 1 1036 9 is_stmt 1 view .LVU3276
 9590              	# sieve_extend.c:1036:         if (block_start >= (prime + 1)) start = block_start + prime + prime 
1036:sieve_extend.c **** 
 9591              		.loc 1 1036 12 is_stmt 0 view .LVU3277
 9592 399f 4885DB   		test	rbx, rbx	# index
 9593 39a2 7516     		jne	.L846	#,
1036:sieve_extend.c **** 
 9594              		.loc 1 1036 41 is_stmt 1 view .LVU3278
 9595              	# sieve_extend.c:1036:         if (block_start >= (prime + 1)) start = block_start + prime + prime 
1036:sieve_extend.c **** 
 9596              		.loc 1 1036 102 is_stmt 0 view .LVU3279
 9597 39a4 48C7C0FF 		mov	rax, -1	# tmp435,
 9597      FFFFFF
 9598 39ab 31D2     		xor	edx, edx	# tmp434
 9599 39ad 49F7F4   		div	r12	# step
 9600              	# sieve_extend.c:1036:         if (block_start >= (prime + 1)) start = block_start + prime + prime 
1036:sieve_extend.c **** 
 9601              		.loc 1 1036 47 view .LVU3280
 9602 39b0 48C7C5FE 		mov	rbp, -2	# tmp436,
 9602      FFFFFF
 9603              	.LVL474:
1036:sieve_extend.c **** 
 9604              		.loc 1 1036 47 view .LVU3281
 9605 39b7 4829D5   		sub	rbp, rdx	# index, tmp434
 9606              	.LVL475:
 9607              	.L846:
GAS LISTING /tmp/ccjg94QQ.s 			page 267


1038:sieve_extend.c ****         block.pattern_size = patternsize_bits;
 9608              		.loc 1 1038 9 is_stmt 1 view .LVU3282
 9609              	# sieve_extend.c:1038:         range_stop = block_start + patternsize_bits * step * 2;  // range is
1038:sieve_extend.c ****         block.pattern_size = patternsize_bits;
 9610              		.loc 1 1038 53 is_stmt 0 view .LVU3283
 9611 39ba 4C89E6   		mov	rsi, r12	# _68, step
 9612 39bd 490FAFF6 		imul	rsi, r14	# _68, patternsize_bits
 9613 39c1 48897424 		mov	QWORD PTR 32[rsp], rsi	# %sfp, _68
 9613      20
 9614              	# sieve_extend.c:1038:         range_stop = block_start + patternsize_bits * step * 2;  // range is
1038:sieve_extend.c ****         block.pattern_size = patternsize_bits;
 9615              		.loc 1 1038 60 view .LVU3284
 9616 39c6 4C8D0436 		lea	r8, [rsi+rsi]	# _69,
 9617              	.LVL476:
1039:sieve_extend.c ****         block.pattern_start = pattern_start;
 9618              		.loc 1 1039 9 is_stmt 1 view .LVU3285
1040:sieve_extend.c ****         if (range_stop > block_stop) return block; //range_stop = block_stop;
 9619              		.loc 1 1040 9 view .LVU3286
1041:sieve_extend.c **** 
 9620              		.loc 1 1041 9 view .LVU3287
 9621              	# sieve_extend.c:1041:         if (range_stop > block_stop) return block; //range_stop = block_stop
1041:sieve_extend.c **** 
 9622              		.loc 1 1041 12 is_stmt 0 view .LVU3288
 9623 39ca 4C3B4424 		cmp	r8, QWORD PTR 8[rsp]	# _69, %sfp
 9623      08
 9624 39cf 0F87A712 		ja	.L1228	#,
 9624      0000
1043:sieve_extend.c ****             pattern_start = block_start | patternsize_bits;
 9625              		.loc 1 1043 9 is_stmt 1 view .LVU3289
 9626 39d5 488B7C24 		mov	rdi, QWORD PTR 16[rsp]	# pattern_start, %sfp
 9626      10
 9627              	# sieve_extend.c:1043:         if (patternsize_bits>1) {
1043:sieve_extend.c ****             pattern_start = block_start | patternsize_bits;
 9628              		.loc 1 1043 12 is_stmt 0 view .LVU3290
 9629 39da 4983FE01 		cmp	r14, 1	# patternsize_bits,
 9630 39de 48897C24 		mov	QWORD PTR 24[rsp], rdi	# %sfp, pattern_start
 9630      18
 9631 39e3 0F872F01 		ja	.L1229	#,
 9631      0000
 9632              	.LVL477:
 9633              	.L849:
1047:sieve_extend.c **** 
 9634              		.loc 1 1047 9 is_stmt 1 view .LVU3291
1049:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitarray, start, step, range_
 9635              		.loc 1 1049 9 view .LVU3292
 9636              	# sieve_extend.c:1049:         if      (step < SMALLSTEP_FASTER)      setBitsTrue_smallStep (bitarr
1049:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitarray, start, step, range_
 9637              		.loc 1 1049 17 is_stmt 0 view .LVU3293
 9638 39e9 4C3B2500 		cmp	r12, QWORD PTR global_SMALLSTEP_FASTER[rip]	# step, global_SMALLSTEP_FASTER
 9638      000000
 9639 39f0 0F827A01 		jb	.L1230	#,
 9639      0000
 9640              	.L853:
1050:sieve_extend.c ****         else if (step < WORD_SIZE_counter * 4) setBitsTrue_largeRange_vector(bitarray, start, step,
 9641              		.loc 1 1050 14 is_stmt 1 view .LVU3294
 9642              	# sieve_extend.c:1050:         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitarr
1050:sieve_extend.c ****         else if (step < WORD_SIZE_counter * 4) setBitsTrue_largeRange_vector(bitarray, start, step,
GAS LISTING /tmp/ccjg94QQ.s 			page 268


 9643              		.loc 1 1050 17 is_stmt 0 view .LVU3295
 9644 39f6 4C3B2500 		cmp	r12, QWORD PTR global_MEDIUMSTEP_FASTER[rip]	# step, global_MEDIUMSTEP_FASTER
 9644      000000
 9645 39fd 0F828D06 		jb	.L1231	#,
 9645      0000
1051:sieve_extend.c ****         else                                   setBitsTrue_largeRange(bitarray, start, step, range_
 9646              		.loc 1 1051 14 is_stmt 1 view .LVU3296
 9647              	# sieve_extend.c:1051:         else if (step < WORD_SIZE_counter * 4) setBitsTrue_largeRange_vector
1051:sieve_extend.c ****         else                                   setBitsTrue_largeRange(bitarray, start, step, range_
 9648              		.loc 1 1051 17 is_stmt 0 view .LVU3297
 9649 3a03 4981FCFF 		cmp	r12, 255	# step,
 9649      000000
 9650 3a0a 0F876004 		ja	.L876	#,
 9650      0000
1051:sieve_extend.c ****         else                                   setBitsTrue_largeRange(bitarray, start, step, range_
 9651              		.loc 1 1051 48 is_stmt 1 view .LVU3298
 9652 3a10 4C89C1   		mov	rcx, r8	#, _69
 9653 3a13 4C89E2   		mov	rdx, r12	#, step
 9654 3a16 4889EE   		mov	rsi, rbp	#, index
 9655 3a19 4C89FF   		mov	rdi, r15	#, _97
 9656 3a1c 4C894424 		mov	QWORD PTR 40[rsp], r8	# %sfp, _69
 9656      28
 9657 3a21 E8EADAFF 		call	setBitsTrue_largeRange_vector	#
 9657      FF
 9658              	.LVL478:
 9659 3a26 4C8B4424 		mov	r8, QWORD PTR 40[rsp]	# _69, %sfp
 9659      28
 9660              	.LVL479:
 9661              	.L857:
1051:sieve_extend.c ****         else                                   setBitsTrue_largeRange(bitarray, start, step, range_
 9662              		.loc 1 1051 48 is_stmt 0 view .LVU3299
 9663              	.LBE486:
1030:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 9664              		.loc 1 1030 11 is_stmt 1 view .LVU3300
 9665              	# sieve_extend.c:1030:     for (;range_stop < block_stop;) {
1030:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 9666              		.loc 1 1030 5 is_stmt 0 view .LVU3301
 9667 3a2b 4C3B4424 		cmp	r8, QWORD PTR 8[rsp]	# _69, %sfp
 9667      08
 9668 3a30 0F83FC03 		jnb	.L1232	#,
 9668      0000
 9669              	.LVL480:
 9670              	.L883:
 9671              	.LBB546:
1031:sieve_extend.c ****         counter_t start = prime * prime * 2 + prime * 2;
 9672              		.loc 1 1031 9 is_stmt 1 view .LVU3302
 9673              	.LBB490:
 9674              	.LBI487:
 122:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 9675              		.loc 1 122 25 view .LVU3303
 9676              	.LBB489:
 123:sieve_extend.c ****     return index;
 9677              		.loc 1 123 5 view .LVU3304
 123:sieve_extend.c ****     return index;
 9678              		.loc 1 123 11 view .LVU3305
 9679              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
GAS LISTING /tmp/ccjg94QQ.s 			page 269


 9680              		.loc 1 123 21 is_stmt 0 view .LVU3306
 9681 3a36 4889D9   		mov	rcx, rbx	# tmp422, index
 9682 3a39 48C1E906 		shr	rcx, 6	# tmp422,
 9683              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9684              		.loc 1 123 12 view .LVU3307
 9685 3a3d 4D8B14CF 		mov	r10, QWORD PTR [r15+rcx*8]	# *_669,* _97
 9686              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9687              		.loc 1 123 11 view .LVU3308
 9688 3a41 490FA3DA 		bt	r10, rbx	# *_669, index
 9689 3a45 0F83A500 		jnc	.L842	#,
 9689      0000
 123:sieve_extend.c ****     return index;
 9690              		.loc 1 123 58 is_stmt 1 view .LVU3309
 9691              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9692              		.loc 1 123 63 is_stmt 0 view .LVU3310
 9693 3a4b 4C8D4B01 		lea	r9, 1[rbx]	# tmp623,
 9694              	.LVL481:
 9695              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9696              		.loc 1 123 21 view .LVU3311
 9697 3a4f 4C89CD   		mov	rbp, r9	# tmp427, index
 9698              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9699              		.loc 1 123 63 view .LVU3312
 9700 3a52 4C89CB   		mov	rbx, r9	# index, tmp623
 123:sieve_extend.c ****     return index;
 9701              		.loc 1 123 11 is_stmt 1 view .LVU3313
 9702              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9703              		.loc 1 123 21 is_stmt 0 view .LVU3314
 9704 3a55 48C1ED06 		shr	rbp, 6	# tmp427,
 9705              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9706              		.loc 1 123 12 view .LVU3315
 9707 3a59 498B34EF 		mov	rsi, QWORD PTR [r15+rbp*8]	# *_49, *_49
 9708              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9709              		.loc 1 123 11 view .LVU3316
 9710 3a5d 4C0FA3CE 		bt	rsi, r9	# *_49, index
 9711 3a61 0F838900 		jnc	.L842	#,
 9711      0000
 123:sieve_extend.c ****     return index;
 9712              		.loc 1 123 58 is_stmt 1 view .LVU3317
 9713              	.LVL482:
 9714              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9715              		.loc 1 123 63 is_stmt 0 view .LVU3318
 9716 3a67 4883C301 		add	rbx, 1	# index,
 9717              	.LVL483:
 123:sieve_extend.c ****     return index;
 9718              		.loc 1 123 11 is_stmt 1 view .LVU3319
 9719              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9720              		.loc 1 123 21 is_stmt 0 view .LVU3320
GAS LISTING /tmp/ccjg94QQ.s 			page 270


 9721 3a6b 4889DF   		mov	rdi, rbx	# tmp760, index
 9722 3a6e 48C1EF06 		shr	rdi, 6	# tmp760,
 9723              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9724              		.loc 1 123 12 view .LVU3321
 9725 3a72 4D8B1CFF 		mov	r11, QWORD PTR [r15+rdi*8]	# *_49, *_49
 9726              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9727              		.loc 1 123 11 view .LVU3322
 9728 3a76 490FA3DB 		bt	r11, rbx	# *_49, index
 9729 3a7a 7374     		jnc	.L842	#,
 123:sieve_extend.c ****     return index;
 9730              		.loc 1 123 58 is_stmt 1 view .LVU3323
 9731              	.LVL484:
 9732              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9733              		.loc 1 123 63 is_stmt 0 view .LVU3324
 9734 3a7c 498D5902 		lea	rbx, 2[r9]	# index,
 9735              	.LVL485:
 123:sieve_extend.c ****     return index;
 9736              		.loc 1 123 11 is_stmt 1 view .LVU3325
 9737              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9738              		.loc 1 123 21 is_stmt 0 view .LVU3326
 9739 3a80 4889D8   		mov	rax, rbx	# tmp764, index
 9740 3a83 48C1E806 		shr	rax, 6	# tmp764,
 9741              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9742              		.loc 1 123 12 view .LVU3327
 9743 3a87 4D8B04C7 		mov	r8, QWORD PTR [r15+rax*8]	# *_49, *_49
 9744              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9745              		.loc 1 123 11 view .LVU3328
 9746 3a8b 490FA3D8 		bt	r8, rbx	# *_49, index
 9747 3a8f 735F     		jnc	.L842	#,
 123:sieve_extend.c ****     return index;
 9748              		.loc 1 123 58 is_stmt 1 view .LVU3329
 9749              	.LVL486:
 9750              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9751              		.loc 1 123 63 is_stmt 0 view .LVU3330
 9752 3a91 498D5903 		lea	rbx, 3[r9]	# index,
 9753              	.LVL487:
 123:sieve_extend.c ****     return index;
 9754              		.loc 1 123 11 is_stmt 1 view .LVU3331
 9755              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9756              		.loc 1 123 21 is_stmt 0 view .LVU3332
 9757 3a95 4889DA   		mov	rdx, rbx	# tmp768, index
 9758 3a98 48C1EA06 		shr	rdx, 6	# tmp768,
 9759              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9760              		.loc 1 123 12 view .LVU3333
 9761 3a9c 4D8B24D7 		mov	r12, QWORD PTR [r15+rdx*8]	# *_49, *_49
 9762              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9763              		.loc 1 123 11 view .LVU3334
GAS LISTING /tmp/ccjg94QQ.s 			page 271


 9764 3aa0 490FA3DC 		bt	r12, rbx	# *_49, index
 9765 3aa4 734A     		jnc	.L842	#,
 123:sieve_extend.c ****     return index;
 9766              		.loc 1 123 58 is_stmt 1 view .LVU3335
 9767              	.LVL488:
 9768              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9769              		.loc 1 123 63 is_stmt 0 view .LVU3336
 9770 3aa6 498D5904 		lea	rbx, 4[r9]	# index,
 9771              	.LVL489:
 123:sieve_extend.c ****     return index;
 9772              		.loc 1 123 11 is_stmt 1 view .LVU3337
 9773              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9774              		.loc 1 123 21 is_stmt 0 view .LVU3338
 9775 3aaa 4889D9   		mov	rcx, rbx	# tmp772, index
 9776 3aad 48C1E906 		shr	rcx, 6	# tmp772,
 9777              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9778              		.loc 1 123 12 view .LVU3339
 9779 3ab1 4D8B14CF 		mov	r10, QWORD PTR [r15+rcx*8]	# *_49, *_49
 9780              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9781              		.loc 1 123 11 view .LVU3340
 9782 3ab5 490FA3DA 		bt	r10, rbx	# *_49, index
 9783 3ab9 7335     		jnc	.L842	#,
 123:sieve_extend.c ****     return index;
 9784              		.loc 1 123 58 is_stmt 1 view .LVU3341
 9785              	.LVL490:
 9786              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9787              		.loc 1 123 63 is_stmt 0 view .LVU3342
 9788 3abb 498D5905 		lea	rbx, 5[r9]	# index,
 9789              	.LVL491:
 123:sieve_extend.c ****     return index;
 9790              		.loc 1 123 11 is_stmt 1 view .LVU3343
 9791              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9792              		.loc 1 123 21 is_stmt 0 view .LVU3344
 9793 3abf 4889DD   		mov	rbp, rbx	# tmp776, index
 9794 3ac2 48C1ED06 		shr	rbp, 6	# tmp776,
 9795              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9796              		.loc 1 123 12 view .LVU3345
 9797 3ac6 498B34EF 		mov	rsi, QWORD PTR [r15+rbp*8]	# *_49, *_49
 9798              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9799              		.loc 1 123 11 view .LVU3346
 9800 3aca 480FA3DE 		bt	rsi, rbx	# *_49, index
 9801 3ace 7320     		jnc	.L842	#,
 123:sieve_extend.c ****     return index;
 9802              		.loc 1 123 58 is_stmt 1 view .LVU3347
 9803              	.LVL492:
 9804              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9805              		.loc 1 123 63 is_stmt 0 view .LVU3348
 9806 3ad0 498D5906 		lea	rbx, 6[r9]	# index,
GAS LISTING /tmp/ccjg94QQ.s 			page 272


 9807              	.LVL493:
 123:sieve_extend.c ****     return index;
 9808              		.loc 1 123 11 is_stmt 1 view .LVU3349
 9809              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9810              		.loc 1 123 21 is_stmt 0 view .LVU3350
 9811 3ad4 4889DF   		mov	rdi, rbx	# tmp780, index
 9812 3ad7 48C1EF06 		shr	rdi, 6	# tmp780,
 9813              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9814              		.loc 1 123 12 view .LVU3351
 9815 3adb 4D8B1CFF 		mov	r11, QWORD PTR [r15+rdi*8]	# *_49, *_49
 9816              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9817              		.loc 1 123 11 view .LVU3352
 9818 3adf 490FA3DB 		bt	r11, rbx	# *_49, index
 9819 3ae3 730B     		jnc	.L842	#,
 123:sieve_extend.c ****     return index;
 9820              		.loc 1 123 58 is_stmt 1 view .LVU3353
 9821              	.LVL494:
 9822              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9823              		.loc 1 123 63 is_stmt 0 view .LVU3354
 9824 3ae5 498D5907 		lea	rbx, 7[r9]	# index,
 9825              	.LVL495:
 123:sieve_extend.c ****     return index;
 9826              		.loc 1 123 11 is_stmt 1 view .LVU3355
 9827 3ae9 E948FFFF 		jmp	.L883	#
 9827      FF
 9828              	.LVL496:
 9829 3aee 6690     		.p2align 4,,7
 9830              		.p2align 3
 9831              	.L842:
 123:sieve_extend.c ****     return index;
 9832              		.loc 1 123 11 is_stmt 0 view .LVU3356
 9833              	.LBE489:
 9834              	.LBE490:
 9835              	.LBE546:
 9836              	.LBE552:
 9837              	.LBE560:
 9838              	# sieve_extend.c:1059: static struct sieve_state *sieve(const counter_t maxints, const counter_t bl
1059:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 9839              		.loc 1 1059 86 view .LVU3357
 9840 3af0 4C89E9   		mov	rcx, r13	# prime, index
 9841 3af3 4C89F2   		mov	rdx, r14	# block$pattern_size, patternsize_bits
 9842 3af6 4C8B6C24 		mov	r13, QWORD PTR 24[rsp]	# pattern_start, %sfp
 9842      18
 9843              	.LVL497:
1059:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 9844              		.loc 1 1059 86 view .LVU3358
 9845 3afb 488B7424 		mov	rsi, QWORD PTR 16[rsp]	# block$pattern_start, %sfp
 9845      10
 9846              	.LVL498:
1059:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 9847              		.loc 1 1059 86 view .LVU3359
 9848 3b00 4C8B7424 		mov	r14, QWORD PTR 32[rsp]	# patternsize_bits, %sfp
 9848      20
GAS LISTING /tmp/ccjg94QQ.s 			page 273


1059:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 9849              		.loc 1 1059 86 view .LVU3360
 9850 3b05 4C896C24 		mov	QWORD PTR 16[rsp], r13	# %sfp, pattern_start
 9850      10
 9851 3b0a 4989DD   		mov	r13, rbx	# index, index
 9852              	.LVL499:
1059:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 9853              		.loc 1 1059 86 view .LVU3361
 9854 3b0d E96EFEFF 		jmp	.L840	#
 9854      FF
 9855              	.LVL500:
 9856              		.p2align 4,,7
 9857 3b12 660F1F44 		.p2align 3
 9857      0000
 9858              	.L1229:
 9859              	.LBB561:
 9860              	.LBB553:
 9861              	.LBB547:
1044:sieve_extend.c ****             extendSieve(bitarray, pattern_start, patternsize_bits, range_stop);
 9862              		.loc 1 1044 13 is_stmt 1 view .LVU3362
1045:sieve_extend.c ****         }
 9863              		.loc 1 1045 13 view .LVU3363
 9864              	.LBB491:
 9865              	.LBI491:
 924:sieve_extend.c ****     if (size < WORD_SIZE_counter)   {
 9866              		.loc 1 924 20 view .LVU3364
 9867              	.LBB492:
 925:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 9868              		.loc 1 925 5 view .LVU3365
 9869              	# sieve_extend.c:925:     if (size < WORD_SIZE_counter)   {
 925:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 9870              		.loc 1 925 8 is_stmt 0 view .LVU3366
 9871 3b18 4983FE3F 		cmp	r14, 63	# patternsize_bits,
 9872 3b1c 0F862B11 		jbe	.L1233	#,
 9872      0000
 930:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 9873              		.loc 1 930 5 is_stmt 1 view .LVU3367
 9874              	.LVL501:
 931:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 9875              		.loc 1 931 5 view .LVU3368
 9876              	# sieve_extend.c:930:     const counter_t copy_start  = source_start + size;
 930:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 9877              		.loc 1 930 21 is_stmt 0 view .LVU3369
 9878 3b22 4F8D0C36 		lea	r9, [r14+r14]	# copy_start,
 9879              	# sieve_extend.c:932:     const bitshift_t source_bit = bitindex_calc(source_start);
 932:sieve_extend.c **** 
 9880              		.loc 1 932 22 view .LVU3370
 9881 3b26 4D89F2   		mov	r10, r14	# source_bit, patternsize_bits
 9882              	# sieve_extend.c:931:     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 931:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 9883              		.loc 1 931 22 view .LVU3371
 9884 3b29 4183E13F 		and	r9d, 63	# copy_bit,
 9885              	.LVL502:
 932:sieve_extend.c **** 
 9886              		.loc 1 932 5 is_stmt 1 view .LVU3372
 9887              	# sieve_extend.c:932:     const bitshift_t source_bit = bitindex_calc(source_start);
 932:sieve_extend.c **** 
GAS LISTING /tmp/ccjg94QQ.s 			page 274


 9888              		.loc 1 932 22 is_stmt 0 view .LVU3373
 9889 3b2d 4183E23F 		and	r10d, 63	# source_bit,
 9890              	.LVL503:
 934:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 9891              		.loc 1 934 5 is_stmt 1 view .LVU3374
 9892              	# sieve_extend.c:934:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 934:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 9893              		.loc 1 934 13 is_stmt 0 view .LVU3375
 9894 3b31 4D39D1   		cmp	r9, r10	# copy_bit, source_bit
 9895              	# sieve_extend.c:934:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 934:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 9896              		.loc 1 934 37 view .LVU3376
 9897 3b34 4C89C1   		mov	rcx, r8	#, _69
 9898 3b37 4C894424 		mov	QWORD PTR 40[rsp], r8	# %sfp, _69
 9898      28
 9899 3b3c 4C89F2   		mov	rdx, r14	#, patternsize_bits
 9900 3b3f 4C89F6   		mov	rsi, r14	#, patternsize_bits
 9901 3b42 4C89FF   		mov	rdi, r15	#, _97
 9902              	# sieve_extend.c:934:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 934:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 9903              		.loc 1 934 13 view .LVU3377
 9904 3b45 0F82EB0A 		jb	.L1234	#,
 9904      0000
 9905              	.LVL504:
 935:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 9906              		.loc 1 935 10 is_stmt 1 view .LVU3378
 9907              	# sieve_extend.c:935:     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, so
 935:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 9908              		.loc 1 935 13 is_stmt 0 view .LVU3379
 9909 3b4b 0F86D10A 		jbe	.L852	#,
 9909      0000
 935:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 9910              		.loc 1 935 37 is_stmt 1 view .LVU3380
 9911 3b51 E86ACBFF 		call	extendSieve_shiftright_ivdep	#
 9911      FF
 9912              	.LVL505:
 935:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 9913              		.loc 1 935 37 is_stmt 0 view .LVU3381
 9914 3b56 4C897424 		mov	QWORD PTR 24[rsp], r14	# %sfp, patternsize_bits
 9914      18
 9915              	.LBE492:
 9916              	.LBE491:
 9917              	# sieve_extend.c:1049:         if      (step < SMALLSTEP_FASTER)      setBitsTrue_smallStep (bitarr
1049:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitarray, start, step, range_
 9918              		.loc 1 1049 17 view .LVU3382
 9919 3b5b 4C3B2500 		cmp	r12, QWORD PTR global_SMALLSTEP_FASTER[rip]	# step, global_SMALLSTEP_FASTER
 9919      000000
 9920              	.LBB496:
 9921              	.LBB493:
 9922 3b62 4C8B4424 		mov	r8, QWORD PTR 40[rsp]	# _69, %sfp
 9922      28
 9923              	.LVL506:
1049:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitarray, start, step, range_
 9924              		.loc 1 1049 17 view .LVU3383
 9925              	.LBE493:
 9926              	.LBE496:
1047:sieve_extend.c **** 
GAS LISTING /tmp/ccjg94QQ.s 			page 275


 9927              		.loc 1 1047 9 is_stmt 1 view .LVU3384
1049:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitarray, start, step, range_
 9928              		.loc 1 1049 9 view .LVU3385
 9929              	# sieve_extend.c:1049:         if      (step < SMALLSTEP_FASTER)      setBitsTrue_smallStep (bitarr
1049:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitarray, start, step, range_
 9930              		.loc 1 1049 17 is_stmt 0 view .LVU3386
 9931 3b67 0F8389FE 		jnb	.L853	#,
 9931      FFFF
 9932              	.LVL507:
 9933 3b6d 0F1F00   		.p2align 4
 9934              		.p2align 3
 9935              	.L1230:
 9936              	.LBB497:
 9937              	.LBB498:
 9938              	.LBB499:
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9939              		.loc 1 239 41 is_stmt 1 view .LVU3387
 9940              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9941              		.loc 1 239 5 is_stmt 0 view .LVU3388
 9942 3b70 4983FC40 		cmp	r12, 64	# step,
 9943 3b74 0F872211 		ja	.L923	#,
 9943      0000
 9944 3b7a 4C89E7   		mov	rdi, r12	# patternsize, step
 9945              	.LBE499:
 9946              	# sieve_extend.c:238: 	register bitword_t pattern = BITWORD_SHIFTBIT;
 238:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; patternsize += patternsi
 9947              		.loc 1 238 21 view .LVU3389
 9948 3b7d B9010000 		mov	ecx, 1	# pattern,
 9948      00
 9949              	.LVL508:
 9950              	.L855:
 9951              	.LBB500:
 240:sieve_extend.c **** 
 9952              		.loc 1 240 9 is_stmt 1 view .LVU3390
 9953              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9954              		.loc 1 239 88 is_stmt 0 view .LVU3391
 9955 3b82 4C8D1C3F 		lea	r11, [rdi+rdi]	# patternsize,
 9956              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 9957              		.loc 1 240 29 view .LVU3392
 9958 3b86 C462C1F7 		shlx	r9, rcx, rdi	# _105, pattern, patternsize
 9958      C9
 9959              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 9960              		.loc 1 240 17 view .LVU3393
 9961 3b8b 4C09C9   		or	rcx, r9	# pattern, _105
 9962              	.LVL509:
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9963              		.loc 1 239 76 is_stmt 1 view .LVU3394
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9964              		.loc 1 239 41 view .LVU3395
 9965              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9966              		.loc 1 239 5 is_stmt 0 view .LVU3396
 9967 3b8e 4983FB40 		cmp	r11, 64	# patternsize,
GAS LISTING /tmp/ccjg94QQ.s 			page 276


 9968 3b92 0F87A800 		ja	.L854	#,
 9968      0000
 240:sieve_extend.c **** 
 9969              		.loc 1 240 9 is_stmt 1 view .LVU3397
 9970              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9971              		.loc 1 239 88 is_stmt 0 view .LVU3398
 9972 3b98 488D04BD 		lea	rax, 0[0+rdi*4]	# patternsize,
 9972      00000000 
 9973              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 9974              		.loc 1 240 29 view .LVU3399
 9975 3ba0 C4E2A1F7 		shlx	rdx, rcx, r11	# _105, pattern, patternsize
 9975      D1
 9976              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 9977              		.loc 1 240 17 view .LVU3400
 9978 3ba5 4809D1   		or	rcx, rdx	# pattern, _105
 9979              	.LVL510:
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9980              		.loc 1 239 76 is_stmt 1 view .LVU3401
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9981              		.loc 1 239 41 view .LVU3402
 9982              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9983              		.loc 1 239 5 is_stmt 0 view .LVU3403
 9984 3ba8 4883F840 		cmp	rax, 64	# patternsize,
 9985 3bac 0F878E00 		ja	.L854	#,
 9985      0000
 240:sieve_extend.c **** 
 9986              		.loc 1 240 9 is_stmt 1 view .LVU3404
 9987              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9988              		.loc 1 239 88 is_stmt 0 view .LVU3405
 9989 3bb2 4C8D14FD 		lea	r10, 0[0+rdi*8]	# patternsize,
 9989      00000000 
 9990              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 9991              		.loc 1 240 29 view .LVU3406
 9992 3bba C4E2F9F7 		shlx	rsi, rcx, rax	# _105, pattern, patternsize
 9992      F1
 9993              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 9994              		.loc 1 240 17 view .LVU3407
 9995 3bbf 4809F1   		or	rcx, rsi	# pattern, _105
 9996              	.LVL511:
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9997              		.loc 1 239 76 is_stmt 1 view .LVU3408
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9998              		.loc 1 239 41 view .LVU3409
 9999              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10000              		.loc 1 239 5 is_stmt 0 view .LVU3410
 10001 3bc2 4983FA40 		cmp	r10, 64	# patternsize,
 10002 3bc6 7778     		ja	.L854	#,
 240:sieve_extend.c **** 
 10003              		.loc 1 240 9 is_stmt 1 view .LVU3411
GAS LISTING /tmp/ccjg94QQ.s 			page 277


 10004              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10005              		.loc 1 239 88 is_stmt 0 view .LVU3412
 10006 3bc8 4989FB   		mov	r11, rdi	# patternsize, patternsize
 10007              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 10008              		.loc 1 240 29 view .LVU3413
 10009 3bcb C462A9F7 		shlx	r9, rcx, r10	# _105, pattern, patternsize
 10009      C9
 10010              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10011              		.loc 1 239 88 view .LVU3414
 10012 3bd0 49C1E304 		sal	r11, 4	# patternsize,
 10013              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 10014              		.loc 1 240 17 view .LVU3415
 10015 3bd4 4C09C9   		or	rcx, r9	# pattern, _105
 10016              	.LVL512:
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10017              		.loc 1 239 76 is_stmt 1 view .LVU3416
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10018              		.loc 1 239 41 view .LVU3417
 10019              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10020              		.loc 1 239 5 is_stmt 0 view .LVU3418
 10021 3bd7 4983FB40 		cmp	r11, 64	# patternsize,
 10022 3bdb 7763     		ja	.L854	#,
 240:sieve_extend.c **** 
 10023              		.loc 1 240 9 is_stmt 1 view .LVU3419
 10024              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10025              		.loc 1 239 88 is_stmt 0 view .LVU3420
 10026 3bdd 4889F8   		mov	rax, rdi	# patternsize, patternsize
 10027              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 10028              		.loc 1 240 29 view .LVU3421
 10029 3be0 C4E2A1F7 		shlx	rdx, rcx, r11	# _105, pattern, patternsize
 10029      D1
 10030              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10031              		.loc 1 239 88 view .LVU3422
 10032 3be5 48C1E005 		sal	rax, 5	# patternsize,
 10033              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 10034              		.loc 1 240 17 view .LVU3423
 10035 3be9 4809D1   		or	rcx, rdx	# pattern, _105
 10036              	.LVL513:
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10037              		.loc 1 239 76 is_stmt 1 view .LVU3424
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10038              		.loc 1 239 41 view .LVU3425
 10039              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10040              		.loc 1 239 5 is_stmt 0 view .LVU3426
 10041 3bec 4883F840 		cmp	rax, 64	# patternsize,
 10042 3bf0 774E     		ja	.L854	#,
 240:sieve_extend.c **** 
GAS LISTING /tmp/ccjg94QQ.s 			page 278


 10043              		.loc 1 240 9 is_stmt 1 view .LVU3427
 10044              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10045              		.loc 1 239 88 is_stmt 0 view .LVU3428
 10046 3bf2 4989FA   		mov	r10, rdi	# patternsize, patternsize
 10047              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 10048              		.loc 1 240 29 view .LVU3429
 10049 3bf5 C4E2F9F7 		shlx	rsi, rcx, rax	# _105, pattern, patternsize
 10049      F1
 10050              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10051              		.loc 1 239 88 view .LVU3430
 10052 3bfa 49C1E206 		sal	r10, 6	# patternsize,
 10053              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 10054              		.loc 1 240 17 view .LVU3431
 10055 3bfe 4809F1   		or	rcx, rsi	# pattern, _105
 10056              	.LVL514:
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10057              		.loc 1 239 76 is_stmt 1 view .LVU3432
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10058              		.loc 1 239 41 view .LVU3433
 10059              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10060              		.loc 1 239 5 is_stmt 0 view .LVU3434
 10061 3c01 4983FA40 		cmp	r10, 64	# patternsize,
 10062 3c05 7739     		ja	.L854	#,
 240:sieve_extend.c **** 
 10063              		.loc 1 240 9 is_stmt 1 view .LVU3435
 10064              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10065              		.loc 1 239 88 is_stmt 0 view .LVU3436
 10066 3c07 4989FB   		mov	r11, rdi	# patternsize, patternsize
 10067              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 10068              		.loc 1 240 29 view .LVU3437
 10069 3c0a C462A9F7 		shlx	r9, rcx, r10	# _105, pattern, patternsize
 10069      C9
 10070              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10071              		.loc 1 239 88 view .LVU3438
 10072 3c0f 49C1E307 		sal	r11, 7	# patternsize,
 10073              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 10074              		.loc 1 240 17 view .LVU3439
 10075 3c13 4C09C9   		or	rcx, r9	# pattern, _105
 10076              	.LVL515:
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10077              		.loc 1 239 76 is_stmt 1 view .LVU3440
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10078              		.loc 1 239 41 view .LVU3441
 10079              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10080              		.loc 1 239 5 is_stmt 0 view .LVU3442
 10081 3c16 4983FB40 		cmp	r11, 64	# patternsize,
 10082 3c1a 7724     		ja	.L854	#,
GAS LISTING /tmp/ccjg94QQ.s 			page 279


 240:sieve_extend.c **** 
 10083              		.loc 1 240 9 is_stmt 1 view .LVU3443
 10084              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10085              		.loc 1 239 88 is_stmt 0 view .LVU3444
 10086 3c1c 48C1E708 		sal	rdi, 8	# patternsize,
 10087              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 10088              		.loc 1 240 29 view .LVU3445
 10089 3c20 C4E2A1F7 		shlx	rdx, rcx, r11	# _105, pattern, patternsize
 10089      D1
 10090              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 10091              		.loc 1 240 17 view .LVU3446
 10092 3c25 4809D1   		or	rcx, rdx	# pattern, _105
 10093              	.LVL516:
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10094              		.loc 1 239 76 is_stmt 1 view .LVU3447
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10095              		.loc 1 239 41 view .LVU3448
 10096              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10097              		.loc 1 239 5 is_stmt 0 view .LVU3449
 10098 3c28 4883FF40 		cmp	rdi, 64	# patternsize,
 10099 3c2c 0F8650FF 		jbe	.L855	#,
 10099      FFFF
 10100              	.LVL517:
 10101 3c32 66662E0F 		.p2align 4
 10101      1F840000 
 10101      0000000F 
 10101      1F00
 10102              		.p2align 3
 10103              	.L854:
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10104              		.loc 1 239 5 view .LVU3450
 10105              	.LBE500:
 245:sieve_extend.c ****     register counter_t range_start_word = wordindex(range_start);
 10106              		.loc 1 245 5 is_stmt 1 view .LVU3451
 10107              	# sieve_extend.c:245:     const counter_t range_stop_word = wordindex(range_stop);
 245:sieve_extend.c ****     register counter_t range_start_word = wordindex(range_start);
 10108              		.loc 1 245 21 is_stmt 0 view .LVU3452
 10109 3c40 4D89C2   		mov	r10, r8	# range_stop_word, _69
 10110              	# sieve_extend.c:246:     register counter_t range_start_word = wordindex(range_start);
 246:sieve_extend.c ****      if (range_start_word >= range_stop_word) { // shortcut
 10111              		.loc 1 246 24 view .LVU3453
 10112 3c43 4889EE   		mov	rsi, rbp	# range_start_word, index
 10113 3c46 48C1EE06 		shr	rsi, 6	# range_start_word,
 10114 3c4a 4489C0   		mov	eax, r8d	# tmp440, _69
 10115              	# sieve_extend.c:245:     const counter_t range_stop_word = wordindex(range_stop);
 245:sieve_extend.c ****     register counter_t range_start_word = wordindex(range_start);
 10116              		.loc 1 245 21 view .LVU3454
 10117 3c4d 49C1EA06 		shr	r10, 6	# range_stop_word,
 10118              	.LVL518:
 246:sieve_extend.c ****      if (range_start_word >= range_stop_word) { // shortcut
 10119              		.loc 1 246 5 is_stmt 1 view .LVU3455
 247:sieve_extend.c ****        bitarray[range_start_word] |= (pattern << bitindex(range_start)) & chopmask(range_stop);
 10120              		.loc 1 247 6 view .LVU3456
GAS LISTING /tmp/ccjg94QQ.s 			page 280


 10121 3c51 4D8D1CF7 		lea	r11, [r15+rsi*8]	# _860,
 10122              	# sieve_extend.c:247:      if (range_start_word >= range_stop_word) { // shortcut
 247:sieve_extend.c ****        bitarray[range_start_word] |= (pattern << bitindex(range_start)) & chopmask(range_stop);
 10123              		.loc 1 247 9 is_stmt 0 view .LVU3457
 10124 3c55 4939F2   		cmp	r10, rsi	# range_stop_word, range_start_word
 10125 3c58 F7D0     		not	eax	# tmp440
 10126 3c5a 4D8B0B   		mov	r9, QWORD PTR [r11]	# pretmp_861, MEM[(uint64_t *)_860]
 10127 3c5d 48C7C7FF 		mov	rdi, -1	# tmp1105,
 10127      FFFFFF
 10128 3c64 C4E2FBF7 		shrx	rdx, rdi, rax	# _867, tmp1105, tmp440
 10128      D7
 10129              	# sieve_extend.c:248:        bitarray[range_start_word] |= (pattern << bitindex(range_start)) & cho
 248:sieve_extend.c ****         //  debug if (step==13) { printf("After\n"); dump_bitarray(bitarray,10); }
 10130              		.loc 1 248 47 view .LVU3458
 10131 3c69 C4E2D1F7 		shlx	rax, rcx, rbp	# tmp443, pattern, index
 10131      C1
 10132 3c6e 48895424 		mov	QWORD PTR 40[rsp], rdx	# %sfp, _867
 10132      28
 10133              	# sieve_extend.c:247:      if (range_start_word >= range_stop_word) { // shortcut
 247:sieve_extend.c ****        bitarray[range_start_word] |= (pattern << bitindex(range_start)) & chopmask(range_stop);
 10134              		.loc 1 247 9 view .LVU3459
 10135 3c73 0F86A108 		jbe	.L1235	#,
 10135      0000
 253:sieve_extend.c **** 
 10136              		.loc 1 253 5 is_stmt 1 view .LVU3460
 10137              	# sieve_extend.c:253:     bitarray[range_start_word] |= (pattern << bitindex(range_start));
 253:sieve_extend.c **** 
 10138              		.loc 1 253 32 is_stmt 0 view .LVU3461
 10139 3c79 4C09C8   		or	rax, r9	# tmp447, pretmp_861
 10140              	# sieve_extend.c:257:    register bitshift_t pattern_size = WORD_SIZE_bitshift - (WORD_SIZE_bitshif
 257:sieve_extend.c ****    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 10141              		.loc 1 257 80 view .LVU3462
 10142 3c7c BF400000 		mov	edi, 64	# tmp448,
 10142      00
 10143 3c81 31D2     		xor	edx, edx	# tmp449
 10144              	# sieve_extend.c:258:    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 258:sieve_extend.c ****    register bitshift_t shift = (bitindex_calc(range_start))%step ;
 10145              		.loc 1 258 24 view .LVU3463
 10146 3c83 4D89E1   		mov	r9, r12	# pattern_shift, step
 10147              	# sieve_extend.c:253:     bitarray[range_start_word] |= (pattern << bitindex(range_start));
 253:sieve_extend.c **** 
 10148              		.loc 1 253 32 view .LVU3464
 10149 3c86 498903   		mov	QWORD PTR [r11], rax	# MEM[(uint64_t *)_860], tmp447
 257:sieve_extend.c ****    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 10150              		.loc 1 257 4 is_stmt 1 view .LVU3465
 10151              	# sieve_extend.c:257:    register bitshift_t pattern_size = WORD_SIZE_bitshift - (WORD_SIZE_bitshif
 257:sieve_extend.c ****    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 10152              		.loc 1 257 80 is_stmt 0 view .LVU3466
 10153 3c89 4889F8   		mov	rax, rdi	# tmp450, tmp448
 10154 3c8c 49F7F4   		div	r12	# step
 10155              	# sieve_extend.c:259:    register bitshift_t shift = (bitindex_calc(range_start))%step ;
 259:sieve_extend.c ****    counter_t loop_range = range_stop_word - range_start_word;
 10156              		.loc 1 259 33 view .LVU3467
 10157 3c8f 4889E8   		mov	rax, rbp	# index, index
 10158 3c92 83E03F   		and	eax, 63	# index,
 10159              	# sieve_extend.c:257:    register bitshift_t pattern_size = WORD_SIZE_bitshift - (WORD_SIZE_bitshif
 257:sieve_extend.c ****    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
GAS LISTING /tmp/ccjg94QQ.s 			page 281


 10160              		.loc 1 257 24 view .LVU3468
 10161 3c95 4829D7   		sub	rdi, rdx	# pattern_size, tmp449
 10162              	.LVL519:
 258:sieve_extend.c ****    register bitshift_t shift = (bitindex_calc(range_start))%step ;
 10163              		.loc 1 258 4 is_stmt 1 view .LVU3469
 10164              	# sieve_extend.c:258:    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 258:sieve_extend.c ****    register bitshift_t shift = (bitindex_calc(range_start))%step ;
 10165              		.loc 1 258 24 is_stmt 0 view .LVU3470
 10166 3c98 4929D1   		sub	r9, rdx	# pattern_shift, tmp449
 10167              	.LVL520:
 259:sieve_extend.c ****    counter_t loop_range = range_stop_word - range_start_word;
 10168              		.loc 1 259 4 is_stmt 1 view .LVU3471
 10169              	# sieve_extend.c:259:    register bitshift_t shift = (bitindex_calc(range_start))%step ;
 259:sieve_extend.c ****    counter_t loop_range = range_stop_word - range_start_word;
 10170              		.loc 1 259 24 is_stmt 0 view .LVU3472
 10171 3c9b 31D2     		xor	edx, edx	# tmp453
 10172 3c9d 49F7F4   		div	r12	# step
 10173              	.LVL521:
 260:sieve_extend.c ****    #pragma unroll
 10174              		.loc 1 260 4 is_stmt 1 view .LVU3473
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10175              		.loc 1 263 4 view .LVU3474
 10176              	.LBB501:
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10177              		.loc 1 263 9 view .LVU3475
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10178              		.loc 1 263 24 view .LVU3476
 10179              	# sieve_extend.c:263:    for (counter_t i=1; i <= loop_range; i++) {
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10180              		.loc 1 263 4 is_stmt 0 view .LVU3477
 10181 3ca0 4939F2   		cmp	r10, rsi	# range_stop_word, range_start_word
 10182 3ca3 0F847501 		je	.L860	#,
 10182      0000
 10183 3ca9 4B8D04D7 		lea	rax, [r15+r10*8]	# _945,
 10184 3cad 89FD     		mov	ebp, edi	# _869, pattern_size
 10185              	.LVL522:
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10186              		.loc 1 263 4 view .LVU3478
 10187 3caf 48894424 		mov	QWORD PTR 72[rsp], rax	# %sfp, _945
 10187      48
 10188 3cb4 4C29D8   		sub	rax, r11	# tmp625, ivtmp.574
 10189 3cb7 4883E808 		sub	rax, 8	# tmp626,
 10190 3cbb 498D3411 		lea	rsi, [r9+rdx]	# ivtmp.572,
 10191              	.LVL523:
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10192              		.loc 1 263 4 view .LVU3479
 10193 3cbf 48C1E803 		shr	rax, 3	# tmp624,
 10194 3cc3 4C89DF   		mov	rdi, r11	# ivtmp.574, _860
 10195              	.LVL524:
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10196              		.loc 1 263 4 view .LVU3480
 10197 3cc6 4883C001 		add	rax, 1	# tmp627,
 10198 3cca 83E003   		and	eax, 3	# tmp628,
 10199 3ccd 0F849900 		je	.L1179	#,
 10199      0000
 10200 3cd3 4883F801 		cmp	rax, 1	# tmp628,
 10201 3cd7 7460     		je	.L1056	#,
GAS LISTING /tmp/ccjg94QQ.s 			page 282


 10202 3cd9 4883F802 		cmp	rax, 2	# tmp628,
 10203 3cdd 7432     		je	.L1057	#,
 10204              	.LVL525:
 10205              	.LBB502:
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10206              		.loc 1 264 9 is_stmt 1 view .LVU3481
 265:sieve_extend.c **** 
 10207              		.loc 1 265 8 view .LVU3482
 10208              	# sieve_extend.c:264:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10209              		.loc 1 264 20 is_stmt 0 view .LVU3483
 10210 3cdf 4889F0   		mov	rax, rsi	# tmp789, ivtmp.572
 10211 3ce2 31D2     		xor	edx, edx	# totalshift
 10212              	.LVL526:
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10213              		.loc 1 264 20 view .LVU3484
 10214 3ce4 49F7F4   		div	r12	# step
 10215 3ce7 4883C708 		add	rdi, 8	# ivtmp.574,
 10216 3ceb 4C01CE   		add	rsi, r9	# ivtmp.572, pattern_shift
 10217              	.LVL527:
 10218              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10219              		.loc 1 265 91 view .LVU3485
 10220 3cee C4E2E9F7 		shlx	rax, rcx, rdx	# tmp790, pattern, totalshift
 10220      C1
 10221              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10222              		.loc 1 265 37 view .LVU3486
 10223 3cf3 490B4308 		or	rax, QWORD PTR 8[r11]	# tmp790, MEM[base: _950, offset: 8B]
 10224 3cf7 48894424 		mov	QWORD PTR 80[rsp], rax	# %sfp, tmp790
 10224      50
 10225              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10226              		.loc 1 265 66 view .LVU3487
 10227 3cfc 89E8     		mov	eax, ebp	# tmp792, _869
 10228 3cfe 29D0     		sub	eax, edx	# tmp792, totalshift
 10229              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10230              		.loc 1 265 50 view .LVU3488
 10231 3d00 C4E2FBF7 		shrx	rdx, rcx, rax	# tmp793, pattern, tmp792
 10231      D1
 10232              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10233              		.loc 1 265 37 view .LVU3489
 10234 3d05 488B4424 		mov	rax, QWORD PTR 80[rsp]	# tmp791, %sfp
 10234      50
 10235 3d0a 4809D0   		or	rax, rdx	# tmp791, tmp793
 10236 3d0d 49894308 		mov	QWORD PTR 8[r11], rax	# MEM[base: _950, offset: 8B], tmp794
 10237              	.LBE502:
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10238              		.loc 1 263 41 is_stmt 1 view .LVU3490
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10239              		.loc 1 263 24 view .LVU3491
 10240              	.L1057:
 10241              	.LBB503:
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10242              		.loc 1 264 9 view .LVU3492
GAS LISTING /tmp/ccjg94QQ.s 			page 283


 265:sieve_extend.c **** 
 10243              		.loc 1 265 8 view .LVU3493
 10244              	# sieve_extend.c:264:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10245              		.loc 1 264 20 is_stmt 0 view .LVU3494
 10246 3d11 4889F0   		mov	rax, rsi	# tmp796, ivtmp.572
 10247 3d14 31D2     		xor	edx, edx	# totalshift
 10248 3d16 49F7F4   		div	r12	# step
 10249              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10250              		.loc 1 265 66 view .LVU3495
 10251 3d19 4189EB   		mov	r11d, ebp	# tmp799, _869
 10252 3d1c 4C01CE   		add	rsi, r9	# ivtmp.572, pattern_shift
 10253 3d1f 4883C708 		add	rdi, 8	# ivtmp.574,
 10254              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10255              		.loc 1 265 91 view .LVU3496
 10256 3d23 C4E2E9F7 		shlx	rax, rcx, rdx	# tmp797, pattern, totalshift
 10256      C1
 10257              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10258              		.loc 1 265 37 view .LVU3497
 10259 3d28 480B07   		or	rax, QWORD PTR [rdi]	# tmp798, MEM[base: _950, offset: 8B]
 10260              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10261              		.loc 1 265 66 view .LVU3498
 10262 3d2b 4129D3   		sub	r11d, edx	# tmp799, totalshift
 10263              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10264              		.loc 1 265 50 view .LVU3499
 10265 3d2e C4E2A3F7 		shrx	rdx, rcx, r11	# tmp800, pattern, tmp799
 10265      D1
 10266              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10267              		.loc 1 265 37 view .LVU3500
 10268 3d33 4809D0   		or	rax, rdx	# tmp801, tmp800
 10269 3d36 488907   		mov	QWORD PTR [rdi], rax	# MEM[base: _950, offset: 8B], tmp801
 10270              	.LBE503:
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10271              		.loc 1 263 41 is_stmt 1 view .LVU3501
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10272              		.loc 1 263 24 view .LVU3502
 10273              	.L1056:
 10274              	.LBB504:
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10275              		.loc 1 264 9 view .LVU3503
 265:sieve_extend.c **** 
 10276              		.loc 1 265 8 view .LVU3504
 10277              	# sieve_extend.c:264:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10278              		.loc 1 264 20 is_stmt 0 view .LVU3505
 10279 3d39 4889F0   		mov	rax, rsi	# tmp803, ivtmp.572
 10280 3d3c 31D2     		xor	edx, edx	# totalshift
 10281 3d3e 49F7F4   		div	r12	# step
 10282              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10283              		.loc 1 265 66 view .LVU3506
GAS LISTING /tmp/ccjg94QQ.s 			page 284


 10284 3d41 4189EB   		mov	r11d, ebp	# tmp806, _869
 10285 3d44 4883C708 		add	rdi, 8	# ivtmp.574,
 10286 3d48 4C01CE   		add	rsi, r9	# ivtmp.572, pattern_shift
 10287              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10288              		.loc 1 265 91 view .LVU3507
 10289 3d4b C4E2E9F7 		shlx	rax, rcx, rdx	# tmp804, pattern, totalshift
 10289      C1
 10290              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10291              		.loc 1 265 37 view .LVU3508
 10292 3d50 480B07   		or	rax, QWORD PTR [rdi]	# tmp805, MEM[base: _950, offset: 8B]
 10293              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10294              		.loc 1 265 66 view .LVU3509
 10295 3d53 4129D3   		sub	r11d, edx	# tmp806, totalshift
 10296              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10297              		.loc 1 265 50 view .LVU3510
 10298 3d56 C4E2A3F7 		shrx	rdx, rcx, r11	# tmp807, pattern, tmp806
 10298      D1
 10299              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10300              		.loc 1 265 37 view .LVU3511
 10301 3d5b 4809D0   		or	rax, rdx	# tmp808, tmp807
 10302 3d5e 488907   		mov	QWORD PTR [rdi], rax	# MEM[base: _950, offset: 8B], tmp808
 10303              	.LBE504:
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10304              		.loc 1 263 41 is_stmt 1 view .LVU3512
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10305              		.loc 1 263 24 view .LVU3513
 10306              	# sieve_extend.c:263:    for (counter_t i=1; i <= loop_range; i++) {
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10307              		.loc 1 263 4 is_stmt 0 view .LVU3514
 10308 3d61 48397C24 		cmp	QWORD PTR 72[rsp], rdi	# %sfp, ivtmp.574
 10308      48
 10309 3d66 0F84B200 		je	.L860	#,
 10309      0000
 10310              	.L1179:
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10311              		.loc 1 263 4 view .LVU3515
 10312 3d6c 4C894424 		mov	QWORD PTR 80[rsp], r8	# %sfp, _69
 10312      50
 10313 3d71 4C8B5C24 		mov	r11, QWORD PTR 72[rsp]	# _945, %sfp
 10313      48
 10314              	.L859:
 10315              	.LBB505:
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10316              		.loc 1 264 9 is_stmt 1 view .LVU3516
 265:sieve_extend.c **** 
 10317              		.loc 1 265 8 view .LVU3517
 10318              	# sieve_extend.c:264:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10319              		.loc 1 264 20 is_stmt 0 view .LVU3518
 10320 3d76 4889F0   		mov	rax, rsi	# tmp460, ivtmp.572
 10321 3d79 31D2     		xor	edx, edx	# totalshift
 10322 3d7b 49F7F4   		div	r12	# step
GAS LISTING /tmp/ccjg94QQ.s 			page 285


 10323              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10324              		.loc 1 265 66 view .LVU3519
 10325 3d7e 4189E8   		mov	r8d, ebp	# tmp463, _869
 10326 3d81 4C01CE   		add	rsi, r9	# ivtmp.572, pattern_shift
 10327 3d84 4883C720 		add	rdi, 32	# ivtmp.574,
 10328              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10329              		.loc 1 265 91 view .LVU3520
 10330 3d88 C4E2E9F7 		shlx	rax, rcx, rdx	# tmp461, pattern, totalshift
 10330      C1
 10331              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10332              		.loc 1 265 37 view .LVU3521
 10333 3d8d 480B47E8 		or	rax, QWORD PTR -24[rdi]	# tmp462, MEM[base: _950, offset: 8B]
 10334              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10335              		.loc 1 265 66 view .LVU3522
 10336 3d91 4129D0   		sub	r8d, edx	# tmp463, totalshift
 10337              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10338              		.loc 1 265 50 view .LVU3523
 10339 3d94 C4E2BBF7 		shrx	rdx, rcx, r8	# tmp464, pattern, tmp463
 10339      D1
 10340              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10341              		.loc 1 265 66 view .LVU3524
 10342 3d99 4189E8   		mov	r8d, ebp	# tmp637, _869
 10343              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10344              		.loc 1 265 37 view .LVU3525
 10345 3d9c 4809D0   		or	rax, rdx	# tmp465, tmp464
 10346              	# sieve_extend.c:264:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10347              		.loc 1 264 20 view .LVU3526
 10348 3d9f 31D2     		xor	edx, edx	# totalshift
 10349              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10350              		.loc 1 265 37 view .LVU3527
 10351 3da1 488947E8 		mov	QWORD PTR -24[rdi], rax	# MEM[base: _950, offset: 8B], tmp465
 10352              	.LBE505:
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10353              		.loc 1 263 41 is_stmt 1 view .LVU3528
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10354              		.loc 1 263 24 view .LVU3529
 10355              	.LBB506:
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10356              		.loc 1 264 9 view .LVU3530
 265:sieve_extend.c **** 
 10357              		.loc 1 265 8 view .LVU3531
 10358              	# sieve_extend.c:264:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10359              		.loc 1 264 20 is_stmt 0 view .LVU3532
 10360 3da5 4889F0   		mov	rax, rsi	# tmp634, ivtmp.572
 10361 3da8 49F7F4   		div	r12	# step
 10362 3dab 4C01CE   		add	rsi, r9	# ivtmp.572, pattern_shift
 10363              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
GAS LISTING /tmp/ccjg94QQ.s 			page 286


 265:sieve_extend.c **** 
 10364              		.loc 1 265 91 view .LVU3533
 10365 3dae C4E2E9F7 		shlx	rax, rcx, rdx	# tmp635, pattern, totalshift
 10365      C1
 10366              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10367              		.loc 1 265 37 view .LVU3534
 10368 3db3 480B47F0 		or	rax, QWORD PTR -16[rdi]	# tmp636, MEM[base: _950, offset: 8B]
 10369              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10370              		.loc 1 265 66 view .LVU3535
 10371 3db7 4129D0   		sub	r8d, edx	# tmp637, totalshift
 10372              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10373              		.loc 1 265 50 view .LVU3536
 10374 3dba C4E2BBF7 		shrx	rdx, rcx, r8	# tmp638, pattern, tmp637
 10374      D1
 10375              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10376              		.loc 1 265 66 view .LVU3537
 10377 3dbf 4189E8   		mov	r8d, ebp	# tmp646, _869
 10378              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10379              		.loc 1 265 37 view .LVU3538
 10380 3dc2 4809D0   		or	rax, rdx	# tmp639, tmp638
 10381              	# sieve_extend.c:264:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10382              		.loc 1 264 20 view .LVU3539
 10383 3dc5 31D2     		xor	edx, edx	# totalshift
 10384              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10385              		.loc 1 265 37 view .LVU3540
 10386 3dc7 488947F0 		mov	QWORD PTR -16[rdi], rax	# MEM[base: _950, offset: 8B], tmp639
 10387              	.LBE506:
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10388              		.loc 1 263 41 is_stmt 1 view .LVU3541
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10389              		.loc 1 263 24 view .LVU3542
 10390              	.LBB507:
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10391              		.loc 1 264 9 view .LVU3543
 265:sieve_extend.c **** 
 10392              		.loc 1 265 8 view .LVU3544
 10393              	# sieve_extend.c:264:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10394              		.loc 1 264 20 is_stmt 0 view .LVU3545
 10395 3dcb 4889F0   		mov	rax, rsi	# tmp643, ivtmp.572
 10396 3dce 49F7F4   		div	r12	# step
 10397 3dd1 4C01CE   		add	rsi, r9	# ivtmp.572, pattern_shift
 10398              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10399              		.loc 1 265 91 view .LVU3546
 10400 3dd4 C4E2E9F7 		shlx	rax, rcx, rdx	# tmp644, pattern, totalshift
 10400      C1
 10401              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10402              		.loc 1 265 37 view .LVU3547
GAS LISTING /tmp/ccjg94QQ.s 			page 287


 10403 3dd9 480B47F8 		or	rax, QWORD PTR -8[rdi]	# tmp645, MEM[base: _950, offset: 8B]
 10404              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10405              		.loc 1 265 66 view .LVU3548
 10406 3ddd 4129D0   		sub	r8d, edx	# tmp646, totalshift
 10407              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10408              		.loc 1 265 50 view .LVU3549
 10409 3de0 C4E2BBF7 		shrx	rdx, rcx, r8	# tmp647, pattern, tmp646
 10409      D1
 10410              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10411              		.loc 1 265 66 view .LVU3550
 10412 3de5 4189E8   		mov	r8d, ebp	# tmp655, _869
 10413              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10414              		.loc 1 265 37 view .LVU3551
 10415 3de8 4809D0   		or	rax, rdx	# tmp648, tmp647
 10416              	# sieve_extend.c:264:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10417              		.loc 1 264 20 view .LVU3552
 10418 3deb 31D2     		xor	edx, edx	# totalshift
 10419              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10420              		.loc 1 265 37 view .LVU3553
 10421 3ded 488947F8 		mov	QWORD PTR -8[rdi], rax	# MEM[base: _950, offset: 8B], tmp648
 10422              	.LBE507:
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10423              		.loc 1 263 41 is_stmt 1 view .LVU3554
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10424              		.loc 1 263 24 view .LVU3555
 10425              	.LBB508:
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10426              		.loc 1 264 9 view .LVU3556
 265:sieve_extend.c **** 
 10427              		.loc 1 265 8 view .LVU3557
 10428              	# sieve_extend.c:264:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10429              		.loc 1 264 20 is_stmt 0 view .LVU3558
 10430 3df1 4889F0   		mov	rax, rsi	# tmp652, ivtmp.572
 10431 3df4 49F7F4   		div	r12	# step
 10432 3df7 4C01CE   		add	rsi, r9	# ivtmp.572, pattern_shift
 10433              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10434              		.loc 1 265 91 view .LVU3559
 10435 3dfa C4E2E9F7 		shlx	rax, rcx, rdx	# tmp653, pattern, totalshift
 10435      C1
 10436              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10437              		.loc 1 265 37 view .LVU3560
 10438 3dff 480B07   		or	rax, QWORD PTR [rdi]	# tmp654, MEM[base: _950, offset: 8B]
 10439              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10440              		.loc 1 265 66 view .LVU3561
 10441 3e02 4129D0   		sub	r8d, edx	# tmp655, totalshift
 10442              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
GAS LISTING /tmp/ccjg94QQ.s 			page 288


 10443              		.loc 1 265 50 view .LVU3562
 10444 3e05 C4E2BBF7 		shrx	rdx, rcx, r8	# tmp656, pattern, tmp655
 10444      D1
 10445              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10446              		.loc 1 265 37 view .LVU3563
 10447 3e0a 4809D0   		or	rax, rdx	# tmp657, tmp656
 10448 3e0d 488907   		mov	QWORD PTR [rdi], rax	# MEM[base: _950, offset: 8B], tmp657
 10449              	.LBE508:
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10450              		.loc 1 263 41 is_stmt 1 view .LVU3564
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10451              		.loc 1 263 24 view .LVU3565
 10452              	# sieve_extend.c:263:    for (counter_t i=1; i <= loop_range; i++) {
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10453              		.loc 1 263 4 is_stmt 0 view .LVU3566
 10454 3e10 4939FB   		cmp	r11, rdi	# _945, ivtmp.574
 10455 3e13 0F855DFF 		jne	.L859	#,
 10455      FFFF
 10456 3e19 4C8B4424 		mov	r8, QWORD PTR 80[rsp]	# _69, %sfp
 10456      50
 10457              	.L860:
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10458              		.loc 1 263 4 view .LVU3567
 10459              	.LBE501:
 269:sieve_extend.c **** 
 10460              		.loc 1 269 4 is_stmt 1 view .LVU3568
 10461              	# sieve_extend.c:269:    bitarray[range_stop_word] &= chopmask(range_stop);
 269:sieve_extend.c **** 
 10462              		.loc 1 269 30 is_stmt 0 view .LVU3569
 10463 3e1e 4C8B6424 		mov	r12, QWORD PTR 40[rsp]	# _867, %sfp
 10463      28
 10464              	.LVL528:
 269:sieve_extend.c **** 
 10465              		.loc 1 269 30 view .LVU3570
 10466 3e23 4F2124D7 		and	QWORD PTR [r15+r10*8], r12	# *_151, _867
 10467              	.LVL529:
 269:sieve_extend.c **** 
 10468              		.loc 1 269 30 view .LVU3571
 10469              	.LBE498:
 10470              	.LBE497:
 10471              	.LBE547:
1030:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 10472              		.loc 1 1030 11 is_stmt 1 view .LVU3572
 10473              	# sieve_extend.c:1030:     for (;range_stop < block_stop;) {
1030:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 10474              		.loc 1 1030 5 is_stmt 0 view .LVU3573
 10475 3e27 4C3B4424 		cmp	r8, QWORD PTR 8[rsp]	# _69, %sfp
 10475      08
 10476 3e2c 0F8204FC 		jb	.L883	#,
 10476      FFFF
 10477              	.L1232:
1030:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 10478              		.loc 1 1030 5 view .LVU3574
 10479 3e32 4C8B7C24 		mov	r15, QWORD PTR 48[rsp]	# <retval>, %sfp
 10479      30
 10480              	.LVL530:
GAS LISTING /tmp/ccjg94QQ.s 			page 289


1030:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 10481              		.loc 1 1030 5 view .LVU3575
 10482 3e37 4C89F2   		mov	rdx, r14	# block$pattern_size, patternsize_bits
 10483 3e3a 488B7424 		mov	rsi, QWORD PTR 16[rsp]	# block$pattern_start, %sfp
 10483      10
 10484              	.LBE553:
 10485              	.LBE561:
 10486              	.LBB562:
 10487              	.LBB563:
 10488              	# sieve_extend.c:925:     if (size < WORD_SIZE_counter)   {
 925:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 10489              		.loc 1 925 8 view .LVU3576
 10490 3e3f 4883FA3F 		cmp	rdx, 63	# block$pattern_size,
 10491              	.LBE563:
 10492              	.LBE562:
 10493              	.LBB568:
 10494              	.LBB554:
 10495              	# sieve_extend.c:1030:     for (;range_stop < block_stop;) {
1030:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 10496              		.loc 1 1030 5 view .LVU3577
 10497 3e43 4C896C24 		mov	QWORD PTR 40[rsp], r13	# %sfp, index
 10497      28
1056:sieve_extend.c **** }
 10498              		.loc 1 1056 5 is_stmt 1 view .LVU3578
 10499              	.LVL531:
1056:sieve_extend.c **** }
 10500              		.loc 1 1056 5 is_stmt 0 view .LVU3579
 10501              	.LBE554:
 10502              	.LBE568:
1068:sieve_extend.c ****     prime = block.prime;
 10503              		.loc 1 1068 5 is_stmt 1 view .LVU3580
 10504              	.LBB569:
 10505              	.LBI562:
 924:sieve_extend.c ****     if (size < WORD_SIZE_counter)   {
 10506              		.loc 1 924 20 view .LVU3581
 10507              	.LBB564:
 925:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 10508              		.loc 1 925 5 view .LVU3582
 10509 3e48 498B5F08 		mov	rbx, QWORD PTR 8[r15]	# prephitmp_991, sieve_92->bits
 10510 3e4c 48895C24 		mov	QWORD PTR 8[rsp], rbx	# %sfp, prephitmp_991
 10510      08
 10511              	# sieve_extend.c:925:     if (size < WORD_SIZE_counter)   {
 925:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 10512              		.loc 1 925 8 is_stmt 0 view .LVU3583
 10513 3e51 0F874705 		ja	.L884	#,
 10513      0000
 10514              	.LVL532:
 10515              	.L841:
 926:sieve_extend.c ****         return; // rapid exit for small sizes
 10516              		.loc 1 926 9 is_stmt 1 view .LVU3584
 10517 3e57 488B4C24 		mov	rcx, QWORD PTR 8[rsp]	#, %sfp
 10517      08
 10518 3e5c 488B7C24 		mov	rdi, QWORD PTR 56[rsp]	#, %sfp
 10518      38
 10519 3e61 E89AC1FF 		call	extendSieve_smallSize	#
 10519      FF
 10520              	.LVL533:
GAS LISTING /tmp/ccjg94QQ.s 			page 290


 927:sieve_extend.c ****     }
 10521              		.loc 1 927 9 view .LVU3585
 10522 3e66 E9600500 		jmp	.L885	#
 10522      00
 10523              	.LVL534:
 10524 3e6b 0F1F4400 		.p2align 4,,7
 10524      00
 10525              		.p2align 3
 10526              	.L876:
 927:sieve_extend.c ****     }
 10527              		.loc 1 927 9 is_stmt 0 view .LVU3586
 10528              	.LBE564:
 10529              	.LBE569:
 10530              	.LBB570:
 10531              	.LBB555:
 10532              	.LBB548:
1052:sieve_extend.c ****         block.prime = prime;
 10533              		.loc 1 1052 48 is_stmt 1 view .LVU3587
 10534              	.LBB511:
 10535              	.LBI511:
 412:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange (%ju occurances
 10536              		.loc 1 412 20 view .LVU3588
 10537              	.LBB512:
 413:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 10538              		.loc 1 413 5 view .LVU3589
 414:sieve_extend.c **** 
 10539              		.loc 1 414 5 view .LVU3590
 10540              	# sieve_extend.c:414:     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * st
 414:sieve_extend.c **** 
 10541              		.loc 1 414 74 is_stmt 0 view .LVU3591
 10542 3e70 4D89E3   		mov	r11, r12	# tmp494, step
 10543 3e73 49C1E306 		sal	r11, 6	# tmp494,
 10544              	# sieve_extend.c:414:     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * st
 414:sieve_extend.c **** 
 10545              		.loc 1 414 21 view .LVU3592
 10546 3e77 498D3C2B 		lea	rdi, [r11+rbp]	# range_stop_unique,
 10547              	.LVL535:
 418:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 10548              		.loc 1 418 5 is_stmt 1 view .LVU3593
 10549              	.LBB513:
 418:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 10550              		.loc 1 418 10 view .LVU3594
 418:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 10551              		.loc 1 418 50 view .LVU3595
 10552              	# sieve_extend.c:418:     for (register counter_t index = range_start; index < range_stop_unique; i
 418:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 10553              		.loc 1 418 5 is_stmt 0 view .LVU3596
 10554 3e7b 4839FD   		cmp	rbp, rdi	# index, range_stop_unique
 10555 3e7e 0F83A7FB 		jnb	.L857	#,
 10555      FFFF
 10556              	.LBB514:
 10557              	.LBB515:
 10558              	# sieve_extend.c:175:    const counter_t range_stop_word = wordindex(range_stop);
 175:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 10559              		.loc 1 175 20 view .LVU3597
 10560 3e84 4C89C2   		mov	rdx, r8	# range_stop_word, _69
 10561              	# sieve_extend.c:201:       *index_ptr |= (mask & chopmask(range_stop));
GAS LISTING /tmp/ccjg94QQ.s 			page 291


 201:sieve_extend.c ****    }
 10562              		.loc 1 201 29 view .LVU3598
 10563 3e87 4489C6   		mov	esi, r8d	# tmp499, _69
 10564              	# sieve_extend.c:175:    const counter_t range_stop_word = wordindex(range_stop);
 175:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 10565              		.loc 1 175 20 view .LVU3599
 10566 3e8a 48C1EA06 		shr	rdx, 6	# range_stop_word,
 10567              	# sieve_extend.c:177:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 177:sieve_extend.c **** 
 10568              		.loc 1 177 110 view .LVU3600
 10569 3e8e 4B8D04A4 		lea	rax, [r12+r12*4]	# tmp497,
 10570              	# sieve_extend.c:201:       *index_ptr |= (mask & chopmask(range_stop));
 201:sieve_extend.c ****    }
 10571              		.loc 1 201 29 view .LVU3601
 10572 3e92 49C7C2FF 		mov	r10, -1	# tmp1141,
 10572      FFFFFF
 10573 3e99 F7D6     		not	esi	# tmp499
 10574 3e9b C442CBF7 		shrx	r11, r10, rsi	# _287, tmp1141, tmp499
 10574      DA
 10575              	# sieve_extend.c:177:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 177:sieve_extend.c **** 
 10576              		.loc 1 177 133 view .LVU3602
 10577 3ea0 4889D6   		mov	rsi, rdx	# tmp503, range_stop_word
 10578 3ea3 4829C6   		sub	rsi, rax	# tmp503, tmp497
 10579              	# sieve_extend.c:177:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 177:sieve_extend.c **** 
 10580              		.loc 1 177 53 view .LVU3603
 10581 3ea6 4839C2   		cmp	rdx, rax	# range_stop_word, tmp497
 10582              	# sieve_extend.c:201:       *index_ptr |= (mask & chopmask(range_stop));
 201:sieve_extend.c ****    }
 10583              		.loc 1 201 29 view .LVU3604
 10584 3ea9 4C895C24 		mov	QWORD PTR 40[rsp], r11	# %sfp, _287
 10584      28
 10585              	# sieve_extend.c:177:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 177:sieve_extend.c **** 
 10586              		.loc 1 177 53 view .LVU3605
 10587 3eae 4D8D14F7 		lea	r10, [r15+rsi*8]	# tmp505,
 10588 3eb2 4D89E3   		mov	r11, r12	# _923, step
 10589 3eb5 4D0F46D7 		cmovbe	r10, r15	# _97,, fast_loop_ptr
 10590              	.LBE515:
 10591              	.LBE514:
 10592              	# sieve_extend.c:419:         applyMask(bitarray, step, range_stop, markmask(index), wordindex(inde
 419:sieve_extend.c ****     }
 10593              		.loc 1 419 9 view .LVU3606
 10594 3eb9 4C894424 		mov	QWORD PTR 72[rsp], r8	# %sfp, _69
 10594      48
 10595              	.LBB519:
 10596              	.LBB516:
 10597              	# sieve_extend.c:183:        index_ptr+=step;
 183:sieve_extend.c ****        *index_ptr |= mask;
 10598              		.loc 1 183 17 view .LVU3607
 10599 3ebe 4A8D0CE5 		lea	rcx, 0[0+r12*8]	# _255,
 10599      00000000 
 10600              	# sieve_extend.c:194:    const register bitword_t* __restrict range_stop_ptr = &bitarray[(range_sto
 194:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 10601              		.loc 1 194 41 view .LVU3608
 10602 3ec6 4D8D0CD7 		lea	r9, [r15+rdx*8]	# range_stop_ptr,
GAS LISTING /tmp/ccjg94QQ.s 			page 292


 10603              	.LBE516:
 10604              	.LBE519:
 10605              	# sieve_extend.c:419:         applyMask(bitarray, step, range_stop, markmask(index), wordindex(inde
 419:sieve_extend.c ****     }
 10606              		.loc 1 419 9 view .LVU3609
 10607 3eca 4989F8   		mov	r8, rdi	# range_stop_unique, range_stop_unique
 10608              	.LVL536:
 419:sieve_extend.c ****     }
 10609              		.loc 1 419 9 view .LVU3610
 10610 3ecd 48C1E003 		sal	rax, 3	# tmp509,
 10611 3ed1 49C1E304 		sal	r11, 4	# _923,
 10612              	.LVL537:
 10613 3ed5 66662E0F 		.p2align 4
 10613      1F840000 
 10613      000000
 10614              		.p2align 3
 10615              	.L882:
 419:sieve_extend.c ****     }
 10616              		.loc 1 419 9 is_stmt 1 view .LVU3611
 10617 3ee0 4889EA   		mov	rdx, rbp	# tmp512, index
 10618 3ee3 BF010000 		mov	edi, 1	# tmp1144,
 10618      00
 10619 3ee8 48C1EA06 		shr	rdx, 6	# tmp512,
 10620 3eec C4E2D1F7 		shlx	rsi, rdi, rbp	# _240, tmp1144, index
 10620      F7
 10621              	.LVL538:
 10622              	.LBB520:
 10623              	.LBI514:
 147:sieve_extend.c **** //#if __APPLE__
 10624              		.loc 1 147 20 view .LVU3612
 10625              	.LBB517:
 175:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 10626              		.loc 1 175 4 view .LVU3613
 176:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 10627              		.loc 1 176 4 view .LVU3614
 10628              	# sieve_extend.c:176:    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(
 176:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 10629              		.loc 1 176 78 is_stmt 0 view .LVU3615
 10630 3ef1 498D14D7 		lea	rdx, [r15+rdx*8]	# index_ptr,
 10631              	.LVL539:
 177:sieve_extend.c **** 
 10632              		.loc 1 177 4 is_stmt 1 view .LVU3616
 181:sieve_extend.c ****        *index_ptr |= mask;
 10633              		.loc 1 181 4 view .LVU3617
 181:sieve_extend.c ****        *index_ptr |= mask;
 10634              		.loc 1 181 10 view .LVU3618
 10635 3ef5 4C39D2   		cmp	rdx, r10	# index_ptr, fast_loop_ptr
 10636 3ef8 0F830201 		jnb	.L877	#,
 10636      0000
 181:sieve_extend.c ****        *index_ptr |= mask;
 10637              		.loc 1 181 10 is_stmt 0 view .LVU3619
 10638 3efe 4A8D3C1A 		lea	rdi, [rdx+r11]	# ivtmp.615,
 10639              	.L878:
 182:sieve_extend.c ****        index_ptr+=step;
 10640              		.loc 1 182 8 is_stmt 1 view .LVU3620
 10641              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/ccjg94QQ.s 			page 293


 10642              		.loc 1 182 19 is_stmt 0 view .LVU3621
 10643 3f02 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_644, offset: 0B], _240
 183:sieve_extend.c ****        *index_ptr |= mask;
 10644              		.loc 1 183 8 is_stmt 1 view .LVU3622
 10645              	.LVL540:
 184:sieve_extend.c ****        index_ptr+=step;
 10646              		.loc 1 184 8 view .LVU3623
 10647              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 10648              		.loc 1 184 19 is_stmt 0 view .LVU3624
 10649 3f05 4809340A 		or	QWORD PTR [rdx+rcx], rsi	# MEM[base: index_ptr_644, index: _255, offset: 0B], _240
 185:sieve_extend.c ****        *index_ptr |= mask;
 10650              		.loc 1 185 8 is_stmt 1 view .LVU3625
 10651              	.LVL541:
 186:sieve_extend.c ****        index_ptr+=step;
 10652              		.loc 1 186 8 view .LVU3626
 10653              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 10654              		.loc 1 186 19 is_stmt 0 view .LVU3627
 10655 3f09 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _917, offset: 0B], _240
 187:sieve_extend.c ****        *index_ptr |= mask;
 10656              		.loc 1 187 8 is_stmt 1 view .LVU3628
 10657              	.LVL542:
 188:sieve_extend.c ****        index_ptr+=step;
 10658              		.loc 1 188 8 view .LVU3629
 10659              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 10660              		.loc 1 188 19 is_stmt 0 view .LVU3630
 10661 3f0c 4809340F 		or	QWORD PTR [rdi+rcx], rsi	# MEM[base: _917, index: _255, offset: 0B], _240
 189:sieve_extend.c ****        *index_ptr |= mask;
 10662              		.loc 1 189 8 is_stmt 1 view .LVU3631
 10663              	.LVL543:
 190:sieve_extend.c ****        index_ptr+=step;
 10664              		.loc 1 190 8 view .LVU3632
 10665 3f10 4801C7   		add	rdi, rax	# ivtmp.615, tmp509
 10666              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 10667              		.loc 1 190 19 is_stmt 0 view .LVU3633
 10668 3f13 4809348A 		or	QWORD PTR [rdx+rcx*4], rsi	# MEM[base: index_ptr_644, index: _255, step: 4, offset: 0B], _240
 191:sieve_extend.c ****    }
 10669              		.loc 1 191 8 is_stmt 1 view .LVU3634
 10670 3f17 4801C2   		add	rdx, rax	# index_ptr, tmp509
 10671              	.LVL544:
 181:sieve_extend.c ****        *index_ptr |= mask;
 10672              		.loc 1 181 10 view .LVU3635
 10673 3f1a 4939D2   		cmp	r10, rdx	# fast_loop_ptr, index_ptr
 10674 3f1d 0F86DD00 		jbe	.L877	#,
 10674      0000
 182:sieve_extend.c ****        index_ptr+=step;
 10675              		.loc 1 182 8 view .LVU3636
 10676              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 10677              		.loc 1 182 19 is_stmt 0 view .LVU3637
 10678 3f23 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_644, offset: 0B], _240
 183:sieve_extend.c ****        *index_ptr |= mask;
 10679              		.loc 1 183 8 is_stmt 1 view .LVU3638
 10680              	.LVL545:
GAS LISTING /tmp/ccjg94QQ.s 			page 294


 184:sieve_extend.c ****        index_ptr+=step;
 10681              		.loc 1 184 8 view .LVU3639
 10682              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 10683              		.loc 1 184 19 is_stmt 0 view .LVU3640
 10684 3f26 4809340A 		or	QWORD PTR [rdx+rcx], rsi	# MEM[base: index_ptr_644, index: _255, offset: 0B], _240
 185:sieve_extend.c ****        *index_ptr |= mask;
 10685              		.loc 1 185 8 is_stmt 1 view .LVU3641
 10686              	.LVL546:
 186:sieve_extend.c ****        index_ptr+=step;
 10687              		.loc 1 186 8 view .LVU3642
 10688              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 10689              		.loc 1 186 19 is_stmt 0 view .LVU3643
 10690 3f2a 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _917, offset: 0B], _240
 187:sieve_extend.c ****        *index_ptr |= mask;
 10691              		.loc 1 187 8 is_stmt 1 view .LVU3644
 10692              	.LVL547:
 188:sieve_extend.c ****        index_ptr+=step;
 10693              		.loc 1 188 8 view .LVU3645
 10694              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 10695              		.loc 1 188 19 is_stmt 0 view .LVU3646
 10696 3f2d 4809340F 		or	QWORD PTR [rdi+rcx], rsi	# MEM[base: _917, index: _255, offset: 0B], _240
 189:sieve_extend.c ****        *index_ptr |= mask;
 10697              		.loc 1 189 8 is_stmt 1 view .LVU3647
 10698              	.LVL548:
 190:sieve_extend.c ****        index_ptr+=step;
 10699              		.loc 1 190 8 view .LVU3648
 10700 3f31 4801C7   		add	rdi, rax	# ivtmp.615, tmp509
 10701              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 10702              		.loc 1 190 19 is_stmt 0 view .LVU3649
 10703 3f34 4809348A 		or	QWORD PTR [rdx+rcx*4], rsi	# MEM[base: index_ptr_644, index: _255, step: 4, offset: 0B], _240
 191:sieve_extend.c ****    }
 10704              		.loc 1 191 8 is_stmt 1 view .LVU3650
 10705 3f38 4801C2   		add	rdx, rax	# index_ptr, tmp509
 10706              	.LVL549:
 181:sieve_extend.c ****        *index_ptr |= mask;
 10707              		.loc 1 181 10 view .LVU3651
 10708 3f3b 4939D2   		cmp	r10, rdx	# fast_loop_ptr, index_ptr
 10709 3f3e 0F86BC00 		jbe	.L877	#,
 10709      0000
 182:sieve_extend.c ****        index_ptr+=step;
 10710              		.loc 1 182 8 view .LVU3652
 10711              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 10712              		.loc 1 182 19 is_stmt 0 view .LVU3653
 10713 3f44 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_644, offset: 0B], _240
 183:sieve_extend.c ****        *index_ptr |= mask;
 10714              		.loc 1 183 8 is_stmt 1 view .LVU3654
 10715              	.LVL550:
 184:sieve_extend.c ****        index_ptr+=step;
 10716              		.loc 1 184 8 view .LVU3655
 10717              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 10718              		.loc 1 184 19 is_stmt 0 view .LVU3656
GAS LISTING /tmp/ccjg94QQ.s 			page 295


 10719 3f47 4809340A 		or	QWORD PTR [rdx+rcx], rsi	# MEM[base: index_ptr_644, index: _255, offset: 0B], _240
 185:sieve_extend.c ****        *index_ptr |= mask;
 10720              		.loc 1 185 8 is_stmt 1 view .LVU3657
 10721              	.LVL551:
 186:sieve_extend.c ****        index_ptr+=step;
 10722              		.loc 1 186 8 view .LVU3658
 10723              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 10724              		.loc 1 186 19 is_stmt 0 view .LVU3659
 10725 3f4b 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _917, offset: 0B], _240
 187:sieve_extend.c ****        *index_ptr |= mask;
 10726              		.loc 1 187 8 is_stmt 1 view .LVU3660
 10727              	.LVL552:
 188:sieve_extend.c ****        index_ptr+=step;
 10728              		.loc 1 188 8 view .LVU3661
 10729              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 10730              		.loc 1 188 19 is_stmt 0 view .LVU3662
 10731 3f4e 4809340F 		or	QWORD PTR [rdi+rcx], rsi	# MEM[base: _917, index: _255, offset: 0B], _240
 189:sieve_extend.c ****        *index_ptr |= mask;
 10732              		.loc 1 189 8 is_stmt 1 view .LVU3663
 10733              	.LVL553:
 190:sieve_extend.c ****        index_ptr+=step;
 10734              		.loc 1 190 8 view .LVU3664
 10735 3f52 4801C7   		add	rdi, rax	# ivtmp.615, tmp509
 10736              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 10737              		.loc 1 190 19 is_stmt 0 view .LVU3665
 10738 3f55 4809348A 		or	QWORD PTR [rdx+rcx*4], rsi	# MEM[base: index_ptr_644, index: _255, step: 4, offset: 0B], _240
 191:sieve_extend.c ****    }
 10739              		.loc 1 191 8 is_stmt 1 view .LVU3666
 10740 3f59 4801C2   		add	rdx, rax	# index_ptr, tmp509
 10741              	.LVL554:
 181:sieve_extend.c ****        *index_ptr |= mask;
 10742              		.loc 1 181 10 view .LVU3667
 10743 3f5c 4939D2   		cmp	r10, rdx	# fast_loop_ptr, index_ptr
 10744 3f5f 0F869B00 		jbe	.L877	#,
 10744      0000
 182:sieve_extend.c ****        index_ptr+=step;
 10745              		.loc 1 182 8 view .LVU3668
 10746              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 10747              		.loc 1 182 19 is_stmt 0 view .LVU3669
 10748 3f65 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_644, offset: 0B], _240
 183:sieve_extend.c ****        *index_ptr |= mask;
 10749              		.loc 1 183 8 is_stmt 1 view .LVU3670
 10750              	.LVL555:
 184:sieve_extend.c ****        index_ptr+=step;
 10751              		.loc 1 184 8 view .LVU3671
 10752              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 10753              		.loc 1 184 19 is_stmt 0 view .LVU3672
 10754 3f68 4809340A 		or	QWORD PTR [rdx+rcx], rsi	# MEM[base: index_ptr_644, index: _255, offset: 0B], _240
 185:sieve_extend.c ****        *index_ptr |= mask;
 10755              		.loc 1 185 8 is_stmt 1 view .LVU3673
 10756              	.LVL556:
 186:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/ccjg94QQ.s 			page 296


 10757              		.loc 1 186 8 view .LVU3674
 10758              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 10759              		.loc 1 186 19 is_stmt 0 view .LVU3675
 10760 3f6c 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _917, offset: 0B], _240
 187:sieve_extend.c ****        *index_ptr |= mask;
 10761              		.loc 1 187 8 is_stmt 1 view .LVU3676
 10762              	.LVL557:
 188:sieve_extend.c ****        index_ptr+=step;
 10763              		.loc 1 188 8 view .LVU3677
 10764              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 10765              		.loc 1 188 19 is_stmt 0 view .LVU3678
 10766 3f6f 4809340F 		or	QWORD PTR [rdi+rcx], rsi	# MEM[base: _917, index: _255, offset: 0B], _240
 189:sieve_extend.c ****        *index_ptr |= mask;
 10767              		.loc 1 189 8 is_stmt 1 view .LVU3679
 10768              	.LVL558:
 190:sieve_extend.c ****        index_ptr+=step;
 10769              		.loc 1 190 8 view .LVU3680
 10770 3f73 4801C7   		add	rdi, rax	# ivtmp.615, tmp509
 10771              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 10772              		.loc 1 190 19 is_stmt 0 view .LVU3681
 10773 3f76 4809348A 		or	QWORD PTR [rdx+rcx*4], rsi	# MEM[base: index_ptr_644, index: _255, step: 4, offset: 0B], _240
 191:sieve_extend.c ****    }
 10774              		.loc 1 191 8 is_stmt 1 view .LVU3682
 10775 3f7a 4801C2   		add	rdx, rax	# index_ptr, tmp509
 10776              	.LVL559:
 181:sieve_extend.c ****        *index_ptr |= mask;
 10777              		.loc 1 181 10 view .LVU3683
 10778 3f7d 4939D2   		cmp	r10, rdx	# fast_loop_ptr, index_ptr
 10779 3f80 767E     		jbe	.L877	#,
 182:sieve_extend.c ****        index_ptr+=step;
 10780              		.loc 1 182 8 view .LVU3684
 10781              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 10782              		.loc 1 182 19 is_stmt 0 view .LVU3685
 10783 3f82 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_644, offset: 0B], _240
 183:sieve_extend.c ****        *index_ptr |= mask;
 10784              		.loc 1 183 8 is_stmt 1 view .LVU3686
 10785              	.LVL560:
 184:sieve_extend.c ****        index_ptr+=step;
 10786              		.loc 1 184 8 view .LVU3687
 10787              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 10788              		.loc 1 184 19 is_stmt 0 view .LVU3688
 10789 3f85 4809340A 		or	QWORD PTR [rdx+rcx], rsi	# MEM[base: index_ptr_644, index: _255, offset: 0B], _240
 185:sieve_extend.c ****        *index_ptr |= mask;
 10790              		.loc 1 185 8 is_stmt 1 view .LVU3689
 10791              	.LVL561:
 186:sieve_extend.c ****        index_ptr+=step;
 10792              		.loc 1 186 8 view .LVU3690
 10793              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 10794              		.loc 1 186 19 is_stmt 0 view .LVU3691
 10795 3f89 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _917, offset: 0B], _240
 187:sieve_extend.c ****        *index_ptr |= mask;
GAS LISTING /tmp/ccjg94QQ.s 			page 297


 10796              		.loc 1 187 8 is_stmt 1 view .LVU3692
 10797              	.LVL562:
 188:sieve_extend.c ****        index_ptr+=step;
 10798              		.loc 1 188 8 view .LVU3693
 10799              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 10800              		.loc 1 188 19 is_stmt 0 view .LVU3694
 10801 3f8c 4809340F 		or	QWORD PTR [rdi+rcx], rsi	# MEM[base: _917, index: _255, offset: 0B], _240
 189:sieve_extend.c ****        *index_ptr |= mask;
 10802              		.loc 1 189 8 is_stmt 1 view .LVU3695
 10803              	.LVL563:
 190:sieve_extend.c ****        index_ptr+=step;
 10804              		.loc 1 190 8 view .LVU3696
 10805 3f90 4801C7   		add	rdi, rax	# ivtmp.615, tmp509
 10806              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 10807              		.loc 1 190 19 is_stmt 0 view .LVU3697
 10808 3f93 4809348A 		or	QWORD PTR [rdx+rcx*4], rsi	# MEM[base: index_ptr_644, index: _255, step: 4, offset: 0B], _240
 191:sieve_extend.c ****    }
 10809              		.loc 1 191 8 is_stmt 1 view .LVU3698
 10810 3f97 4801C2   		add	rdx, rax	# index_ptr, tmp509
 10811              	.LVL564:
 181:sieve_extend.c ****        *index_ptr |= mask;
 10812              		.loc 1 181 10 view .LVU3699
 10813 3f9a 4939D2   		cmp	r10, rdx	# fast_loop_ptr, index_ptr
 10814 3f9d 7661     		jbe	.L877	#,
 182:sieve_extend.c ****        index_ptr+=step;
 10815              		.loc 1 182 8 view .LVU3700
 10816              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 10817              		.loc 1 182 19 is_stmt 0 view .LVU3701
 10818 3f9f 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_644, offset: 0B], _240
 183:sieve_extend.c ****        *index_ptr |= mask;
 10819              		.loc 1 183 8 is_stmt 1 view .LVU3702
 10820              	.LVL565:
 184:sieve_extend.c ****        index_ptr+=step;
 10821              		.loc 1 184 8 view .LVU3703
 10822              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 10823              		.loc 1 184 19 is_stmt 0 view .LVU3704
 10824 3fa2 4809340A 		or	QWORD PTR [rdx+rcx], rsi	# MEM[base: index_ptr_644, index: _255, offset: 0B], _240
 185:sieve_extend.c ****        *index_ptr |= mask;
 10825              		.loc 1 185 8 is_stmt 1 view .LVU3705
 10826              	.LVL566:
 186:sieve_extend.c ****        index_ptr+=step;
 10827              		.loc 1 186 8 view .LVU3706
 10828              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 10829              		.loc 1 186 19 is_stmt 0 view .LVU3707
 10830 3fa6 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _917, offset: 0B], _240
 187:sieve_extend.c ****        *index_ptr |= mask;
 10831              		.loc 1 187 8 is_stmt 1 view .LVU3708
 10832              	.LVL567:
 188:sieve_extend.c ****        index_ptr+=step;
 10833              		.loc 1 188 8 view .LVU3709
 10834              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/ccjg94QQ.s 			page 298


 10835              		.loc 1 188 19 is_stmt 0 view .LVU3710
 10836 3fa9 4809340F 		or	QWORD PTR [rdi+rcx], rsi	# MEM[base: _917, index: _255, offset: 0B], _240
 189:sieve_extend.c ****        *index_ptr |= mask;
 10837              		.loc 1 189 8 is_stmt 1 view .LVU3711
 10838              	.LVL568:
 190:sieve_extend.c ****        index_ptr+=step;
 10839              		.loc 1 190 8 view .LVU3712
 10840 3fad 4801C7   		add	rdi, rax	# ivtmp.615, tmp509
 10841              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 10842              		.loc 1 190 19 is_stmt 0 view .LVU3713
 10843 3fb0 4809348A 		or	QWORD PTR [rdx+rcx*4], rsi	# MEM[base: index_ptr_644, index: _255, step: 4, offset: 0B], _240
 191:sieve_extend.c ****    }
 10844              		.loc 1 191 8 is_stmt 1 view .LVU3714
 10845 3fb4 4801C2   		add	rdx, rax	# index_ptr, tmp509
 10846              	.LVL569:
 181:sieve_extend.c ****        *index_ptr |= mask;
 10847              		.loc 1 181 10 view .LVU3715
 10848 3fb7 4939D2   		cmp	r10, rdx	# fast_loop_ptr, index_ptr
 10849 3fba 7644     		jbe	.L877	#,
 182:sieve_extend.c ****        index_ptr+=step;
 10850              		.loc 1 182 8 view .LVU3716
 10851              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 10852              		.loc 1 182 19 is_stmt 0 view .LVU3717
 10853 3fbc 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_644, offset: 0B], _240
 183:sieve_extend.c ****        *index_ptr |= mask;
 10854              		.loc 1 183 8 is_stmt 1 view .LVU3718
 10855              	.LVL570:
 184:sieve_extend.c ****        index_ptr+=step;
 10856              		.loc 1 184 8 view .LVU3719
 10857              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 10858              		.loc 1 184 19 is_stmt 0 view .LVU3720
 10859 3fbf 4809340A 		or	QWORD PTR [rdx+rcx], rsi	# MEM[base: index_ptr_644, index: _255, offset: 0B], _240
 185:sieve_extend.c ****        *index_ptr |= mask;
 10860              		.loc 1 185 8 is_stmt 1 view .LVU3721
 10861              	.LVL571:
 186:sieve_extend.c ****        index_ptr+=step;
 10862              		.loc 1 186 8 view .LVU3722
 10863              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 10864              		.loc 1 186 19 is_stmt 0 view .LVU3723
 10865 3fc3 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _917, offset: 0B], _240
 187:sieve_extend.c ****        *index_ptr |= mask;
 10866              		.loc 1 187 8 is_stmt 1 view .LVU3724
 10867              	.LVL572:
 188:sieve_extend.c ****        index_ptr+=step;
 10868              		.loc 1 188 8 view .LVU3725
 10869              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 10870              		.loc 1 188 19 is_stmt 0 view .LVU3726
 10871 3fc6 4809340F 		or	QWORD PTR [rdi+rcx], rsi	# MEM[base: _917, index: _255, offset: 0B], _240
 189:sieve_extend.c ****        *index_ptr |= mask;
 10872              		.loc 1 189 8 is_stmt 1 view .LVU3727
 10873              	.LVL573:
 190:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/ccjg94QQ.s 			page 299


 10874              		.loc 1 190 8 view .LVU3728
 10875 3fca 4801C7   		add	rdi, rax	# ivtmp.615, tmp509
 10876              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 10877              		.loc 1 190 19 is_stmt 0 view .LVU3729
 10878 3fcd 4809348A 		or	QWORD PTR [rdx+rcx*4], rsi	# MEM[base: index_ptr_644, index: _255, step: 4, offset: 0B], _240
 191:sieve_extend.c ****    }
 10879              		.loc 1 191 8 is_stmt 1 view .LVU3730
 10880 3fd1 4801C2   		add	rdx, rax	# index_ptr, tmp509
 10881              	.LVL574:
 181:sieve_extend.c ****        *index_ptr |= mask;
 10882              		.loc 1 181 10 view .LVU3731
 10883 3fd4 4939D2   		cmp	r10, rdx	# fast_loop_ptr, index_ptr
 10884 3fd7 7627     		jbe	.L877	#,
 182:sieve_extend.c ****        index_ptr+=step;
 10885              		.loc 1 182 8 view .LVU3732
 10886              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 10887              		.loc 1 182 19 is_stmt 0 view .LVU3733
 10888 3fd9 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_644, offset: 0B], _240
 183:sieve_extend.c ****        *index_ptr |= mask;
 10889              		.loc 1 183 8 is_stmt 1 view .LVU3734
 10890              	.LVL575:
 184:sieve_extend.c ****        index_ptr+=step;
 10891              		.loc 1 184 8 view .LVU3735
 10892              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 10893              		.loc 1 184 19 is_stmt 0 view .LVU3736
 10894 3fdc 4809340A 		or	QWORD PTR [rdx+rcx], rsi	# MEM[base: index_ptr_644, index: _255, offset: 0B], _240
 185:sieve_extend.c ****        *index_ptr |= mask;
 10895              		.loc 1 185 8 is_stmt 1 view .LVU3737
 10896              	.LVL576:
 186:sieve_extend.c ****        index_ptr+=step;
 10897              		.loc 1 186 8 view .LVU3738
 10898              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 10899              		.loc 1 186 19 is_stmt 0 view .LVU3739
 10900 3fe0 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _917, offset: 0B], _240
 187:sieve_extend.c ****        *index_ptr |= mask;
 10901              		.loc 1 187 8 is_stmt 1 view .LVU3740
 10902              	.LVL577:
 188:sieve_extend.c ****        index_ptr+=step;
 10903              		.loc 1 188 8 view .LVU3741
 10904              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 10905              		.loc 1 188 19 is_stmt 0 view .LVU3742
 10906 3fe3 4809340F 		or	QWORD PTR [rdi+rcx], rsi	# MEM[base: _917, index: _255, offset: 0B], _240
 189:sieve_extend.c ****        *index_ptr |= mask;
 10907              		.loc 1 189 8 is_stmt 1 view .LVU3743
 10908              	.LVL578:
 190:sieve_extend.c ****        index_ptr+=step;
 10909              		.loc 1 190 8 view .LVU3744
 10910 3fe7 4801C7   		add	rdi, rax	# ivtmp.615, tmp509
 10911              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 10912              		.loc 1 190 19 is_stmt 0 view .LVU3745
 10913 3fea 4809348A 		or	QWORD PTR [rdx+rcx*4], rsi	# MEM[base: index_ptr_644, index: _255, step: 4, offset: 0B], _240
GAS LISTING /tmp/ccjg94QQ.s 			page 300


 191:sieve_extend.c ****    }
 10914              		.loc 1 191 8 is_stmt 1 view .LVU3746
 10915 3fee 4801C2   		add	rdx, rax	# index_ptr, tmp509
 10916              	.LVL579:
 181:sieve_extend.c ****        *index_ptr |= mask;
 10917              		.loc 1 181 10 view .LVU3747
 10918 3ff1 4939D2   		cmp	r10, rdx	# fast_loop_ptr, index_ptr
 10919 3ff4 0F8708FF 		ja	.L878	#,
 10919      FFFF
 10920 3ffa 660F1F44 		.p2align 4
 10920      0000
 10921              		.p2align 3
 10922              	.L877:
 194:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 10923              		.loc 1 194 4 view .LVU3748
 195:sieve_extend.c ****        *index_ptr |= mask;
 10924              		.loc 1 195 4 view .LVU3749
 195:sieve_extend.c ****        *index_ptr |= mask;
 10925              		.loc 1 195 10 view .LVU3750
 10926 4000 4939D1   		cmp	r9, rdx	# range_stop_ptr, index_ptr
 10927 4003 765B     		jbe	.L879	#,
 10928              	.L880:
 196:sieve_extend.c ****        index_ptr+=step;
 10929              		.loc 1 196 8 view .LVU3751
 10930              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 10931              		.loc 1 196 19 is_stmt 0 view .LVU3752
 10932 4005 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_453, offset: 0B], _240
 197:sieve_extend.c ****    }
 10933              		.loc 1 197 8 is_stmt 1 view .LVU3753
 10934              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 10935              		.loc 1 197 17 is_stmt 0 view .LVU3754
 10936 4008 4801CA   		add	rdx, rcx	# index_ptr, _255
 10937              	.LVL580:
 195:sieve_extend.c ****        *index_ptr |= mask;
 10938              		.loc 1 195 10 is_stmt 1 view .LVU3755
 10939 400b 4939D1   		cmp	r9, rdx	# range_stop_ptr, index_ptr
 10940 400e 7650     		jbe	.L879	#,
 196:sieve_extend.c ****        index_ptr+=step;
 10941              		.loc 1 196 8 view .LVU3756
 10942              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 10943              		.loc 1 196 19 is_stmt 0 view .LVU3757
 10944 4010 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_453, offset: 0B], _240
 197:sieve_extend.c ****    }
 10945              		.loc 1 197 8 is_stmt 1 view .LVU3758
 10946              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 10947              		.loc 1 197 17 is_stmt 0 view .LVU3759
 10948 4013 4801CA   		add	rdx, rcx	# index_ptr, _255
 10949              	.LVL581:
 195:sieve_extend.c ****        *index_ptr |= mask;
 10950              		.loc 1 195 10 is_stmt 1 view .LVU3760
 10951 4016 4939D1   		cmp	r9, rdx	# range_stop_ptr, index_ptr
 10952 4019 7645     		jbe	.L879	#,
 196:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/ccjg94QQ.s 			page 301


 10953              		.loc 1 196 8 view .LVU3761
 10954              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 10955              		.loc 1 196 19 is_stmt 0 view .LVU3762
 10956 401b 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_453, offset: 0B], _240
 197:sieve_extend.c ****    }
 10957              		.loc 1 197 8 is_stmt 1 view .LVU3763
 10958              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 10959              		.loc 1 197 17 is_stmt 0 view .LVU3764
 10960 401e 4801CA   		add	rdx, rcx	# index_ptr, _255
 10961              	.LVL582:
 195:sieve_extend.c ****        *index_ptr |= mask;
 10962              		.loc 1 195 10 is_stmt 1 view .LVU3765
 10963 4021 4939D1   		cmp	r9, rdx	# range_stop_ptr, index_ptr
 10964 4024 763A     		jbe	.L879	#,
 196:sieve_extend.c ****        index_ptr+=step;
 10965              		.loc 1 196 8 view .LVU3766
 10966              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 10967              		.loc 1 196 19 is_stmt 0 view .LVU3767
 10968 4026 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_453, offset: 0B], _240
 197:sieve_extend.c ****    }
 10969              		.loc 1 197 8 is_stmt 1 view .LVU3768
 10970              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 10971              		.loc 1 197 17 is_stmt 0 view .LVU3769
 10972 4029 4801CA   		add	rdx, rcx	# index_ptr, _255
 10973              	.LVL583:
 195:sieve_extend.c ****        *index_ptr |= mask;
 10974              		.loc 1 195 10 is_stmt 1 view .LVU3770
 10975 402c 4939D1   		cmp	r9, rdx	# range_stop_ptr, index_ptr
 10976 402f 762F     		jbe	.L879	#,
 196:sieve_extend.c ****        index_ptr+=step;
 10977              		.loc 1 196 8 view .LVU3771
 10978              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 10979              		.loc 1 196 19 is_stmt 0 view .LVU3772
 10980 4031 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_453, offset: 0B], _240
 197:sieve_extend.c ****    }
 10981              		.loc 1 197 8 is_stmt 1 view .LVU3773
 10982              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 10983              		.loc 1 197 17 is_stmt 0 view .LVU3774
 10984 4034 4801CA   		add	rdx, rcx	# index_ptr, _255
 10985              	.LVL584:
 195:sieve_extend.c ****        *index_ptr |= mask;
 10986              		.loc 1 195 10 is_stmt 1 view .LVU3775
 10987 4037 4939D1   		cmp	r9, rdx	# range_stop_ptr, index_ptr
 10988 403a 7624     		jbe	.L879	#,
 196:sieve_extend.c ****        index_ptr+=step;
 10989              		.loc 1 196 8 view .LVU3776
 10990              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 10991              		.loc 1 196 19 is_stmt 0 view .LVU3777
 10992 403c 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_453, offset: 0B], _240
 197:sieve_extend.c ****    }
GAS LISTING /tmp/ccjg94QQ.s 			page 302


 10993              		.loc 1 197 8 is_stmt 1 view .LVU3778
 10994              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 10995              		.loc 1 197 17 is_stmt 0 view .LVU3779
 10996 403f 4801CA   		add	rdx, rcx	# index_ptr, _255
 10997              	.LVL585:
 195:sieve_extend.c ****        *index_ptr |= mask;
 10998              		.loc 1 195 10 is_stmt 1 view .LVU3780
 10999 4042 4939D1   		cmp	r9, rdx	# range_stop_ptr, index_ptr
 11000 4045 7619     		jbe	.L879	#,
 196:sieve_extend.c ****        index_ptr+=step;
 11001              		.loc 1 196 8 view .LVU3781
 11002              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 11003              		.loc 1 196 19 is_stmt 0 view .LVU3782
 11004 4047 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_453, offset: 0B], _240
 197:sieve_extend.c ****    }
 11005              		.loc 1 197 8 is_stmt 1 view .LVU3783
 11006              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 11007              		.loc 1 197 17 is_stmt 0 view .LVU3784
 11008 404a 4801CA   		add	rdx, rcx	# index_ptr, _255
 11009              	.LVL586:
 195:sieve_extend.c ****        *index_ptr |= mask;
 11010              		.loc 1 195 10 is_stmt 1 view .LVU3785
 11011 404d 4939D1   		cmp	r9, rdx	# range_stop_ptr, index_ptr
 11012 4050 760E     		jbe	.L879	#,
 196:sieve_extend.c ****        index_ptr+=step;
 11013              		.loc 1 196 8 view .LVU3786
 11014              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 11015              		.loc 1 196 19 is_stmt 0 view .LVU3787
 11016 4052 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_453, offset: 0B], _240
 197:sieve_extend.c ****    }
 11017              		.loc 1 197 8 is_stmt 1 view .LVU3788
 11018              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 11019              		.loc 1 197 17 is_stmt 0 view .LVU3789
 11020 4055 4801CA   		add	rdx, rcx	# index_ptr, _255
 11021              	.LVL587:
 195:sieve_extend.c ****        *index_ptr |= mask;
 11022              		.loc 1 195 10 is_stmt 1 view .LVU3790
 11023 4058 4939D1   		cmp	r9, rdx	# range_stop_ptr, index_ptr
 11024 405b 77A8     		ja	.L880	#,
 11025 405d 0F1F00   		.p2align 4
 11026              		.p2align 3
 11027              	.L879:
 200:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 11028              		.loc 1 200 4 view .LVU3791
 11029              	# sieve_extend.c:200:    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range
 200:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 11030              		.loc 1 200 7 is_stmt 0 view .LVU3792
 11031 4060 4939D1   		cmp	r9, rdx	# range_stop_ptr, index_ptr
 11032 4063 741B     		je	.L1236	#,
 11033              	.LVL588:
 11034              	.L881:
 200:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
GAS LISTING /tmp/ccjg94QQ.s 			page 303


 11035              		.loc 1 200 7 view .LVU3793
 11036              	.LBE517:
 11037              	.LBE520:
 418:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 11038              		.loc 1 418 77 is_stmt 1 view .LVU3794
 11039              	# sieve_extend.c:418:     for (register counter_t index = range_start; index < range_stop_unique; i
 418:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 11040              		.loc 1 418 83 is_stmt 0 view .LVU3795
 11041 4065 4C01E5   		add	rbp, r12	# index, step
 11042              	.LVL589:
 418:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 11043              		.loc 1 418 50 is_stmt 1 view .LVU3796
 11044              	# sieve_extend.c:418:     for (register counter_t index = range_start; index < range_stop_unique; i
 418:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 11045              		.loc 1 418 5 is_stmt 0 view .LVU3797
 11046 4068 4939E8   		cmp	r8, rbp	# range_stop_unique, index
 11047 406b 0F876FFE 		ja	.L882	#,
 11047      FFFF
 11048 4071 4C8B4424 		mov	r8, QWORD PTR 72[rsp]	# _69, %sfp
 11048      48
 11049              	.LVL590:
 418:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 11050              		.loc 1 418 5 view .LVU3798
 11051 4076 E9B0F9FF 		jmp	.L857	#
 11051      FF
 11052              	.LVL591:
 11053 407b 0F1F4400 		.p2align 4,,7
 11053      00
 11054              		.p2align 3
 11055              	.L1236:
 11056              	.LBB521:
 11057              	.LBB518:
 201:sieve_extend.c ****    }
 11058              		.loc 1 201 7 is_stmt 1 view .LVU3799
 11059              	# sieve_extend.c:201:       *index_ptr |= (mask & chopmask(range_stop));
 201:sieve_extend.c ****    }
 11060              		.loc 1 201 27 is_stmt 0 view .LVU3800
 11061 4080 48237424 		and	rsi, QWORD PTR 40[rsp]	# tmp514, %sfp
 11061      28
 11062              	.LVL592:
 11063              	# sieve_extend.c:201:       *index_ptr |= (mask & chopmask(range_stop));
 201:sieve_extend.c ****    }
 11064              		.loc 1 201 18 view .LVU3801
 11065 4085 490931   		or	QWORD PTR [r9], rsi	# *index_ptr_559, tmp514
 11066 4088 EBDB     		jmp	.L881	#
 11067              	.LVL593:
 11068 408a 660F1F44 		.p2align 4,,7
 11068      0000
 11069              		.p2align 3
 11070              	.L1231:
 201:sieve_extend.c ****    }
 11071              		.loc 1 201 18 view .LVU3802
 11072              	.LBE518:
 11073              	.LBE521:
 11074              	.LBE513:
 11075              	.LBE512:
 11076              	.LBE511:
GAS LISTING /tmp/ccjg94QQ.s 			page 304


1050:sieve_extend.c ****         else if (step < WORD_SIZE_counter * 4) setBitsTrue_largeRange_vector(bitarray, start, step,
 11077              		.loc 1 1050 48 is_stmt 1 view .LVU3803
 11078              	.LBB522:
 11079              	.LBI522:
 297:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 11080              		.loc 1 297 14 view .LVU3804
 11081              	.LBB523:
 298:sieve_extend.c **** 
 11082              		.loc 1 298 5 view .LVU3805
 11083              	# sieve_extend.c:298:     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * st
 298:sieve_extend.c **** 
 11084              		.loc 1 298 74 is_stmt 0 view .LVU3806
 11085 4090 4C89E7   		mov	rdi, r12	# tmp466, step
 11086 4093 48C1E706 		sal	rdi, 6	# tmp466,
 11087 4097 4801EF   		add	rdi, rbp	# tmp466, index
 11088 409a 48897C24 		mov	QWORD PTR 72[rsp], rdi	# %sfp, tmp467
 11088      48
 11089 409f 0F92C0   		setc	al	#, _139
 11090              	# sieve_extend.c:300:     if (range_stop_unique > range_stop) { // the range will not repeat itself
 300:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-unique (%ju
 11091              		.loc 1 300 8 view .LVU3807
 11092 40a2 4939F8   		cmp	r8, rdi	# _69, tmp467
 11093 40a5 440FB6C8 		movzx	r9d, al	# _139, _139
 11094              	.LVL594:
 300:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-unique (%ju
 11095              		.loc 1 300 5 is_stmt 1 view .LVU3808
 11096              	# sieve_extend.c:300:     if (range_stop_unique > range_stop) { // the range will not repeat itself
 300:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-unique (%ju
 11097              		.loc 1 300 8 is_stmt 0 view .LVU3809
 11098 40a9 0F827B04 		jb	.L864	#,
 11098      0000
 11099              	.LVL595:
 11100              	.LBB524:
 321:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 11101              		.loc 1 321 54 is_stmt 1 view .LVU3810
 11102              	# sieve_extend.c:321:         for (register counter_t index = range_start; index <= range_stop_uniq
 321:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 11103              		.loc 1 321 9 is_stmt 0 view .LVU3811
 11104 40af 4D85C9   		test	r9, r9	# _139
 11105 40b2 0F8573F9 		jne	.L857	#,
 11105      FFFF
 11106              	.LBB525:
 11107              	.LBB526:
 11108              	.LBB527:
 11109              	# sieve_extend.c:175:    const counter_t range_stop_word = wordindex(range_stop);
 175:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 11110              		.loc 1 175 20 view .LVU3812
 11111 40b8 4D89C3   		mov	r11, r8	# range_stop_word, _69
 11112              	# sieve_extend.c:177:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 177:sieve_extend.c **** 
 11113              		.loc 1 177 110 view .LVU3813
 11114 40bb 4B8D3CA4 		lea	rdi, [r12+r12*4]	# tmp475,
 11115              	.LVL596:
 11116              	# sieve_extend.c:175:    const counter_t range_stop_word = wordindex(range_stop);
 175:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 11117              		.loc 1 175 20 view .LVU3814
 11118 40bf 49C1EB06 		shr	r11, 6	# range_stop_word,
GAS LISTING /tmp/ccjg94QQ.s 			page 305


 11119              	# sieve_extend.c:201:       *index_ptr |= (mask & chopmask(range_stop));
 201:sieve_extend.c ****    }
 11120              		.loc 1 201 29 view .LVU3815
 11121 40c3 4589C2   		mov	r10d, r8d	# tmp477, _69
 11122              	# sieve_extend.c:177:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 177:sieve_extend.c **** 
 11123              		.loc 1 177 133 view .LVU3816
 11124 40c6 4C89D8   		mov	rax, r11	# tmp481, range_stop_word
 11125              	# sieve_extend.c:201:       *index_ptr |= (mask & chopmask(range_stop));
 201:sieve_extend.c ****    }
 11126              		.loc 1 201 29 view .LVU3817
 11127 40c9 41F7D2   		not	r10d	# tmp477
 11128              	# sieve_extend.c:177:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 177:sieve_extend.c **** 
 11129              		.loc 1 177 133 view .LVU3818
 11130 40cc 4829F8   		sub	rax, rdi	# tmp481, tmp475
 11131 40cf 4939FB   		cmp	r11, rdi	# range_stop_word, tmp475
 11132              	# sieve_extend.c:201:       *index_ptr |= (mask & chopmask(range_stop));
 201:sieve_extend.c ****    }
 11133              		.loc 1 201 29 view .LVU3819
 11134 40d2 48C7C6FF 		mov	rsi, -1	# tmp1129,
 11134      FFFFFF
 11135 40d9 C4E2ABF7 		shrx	rdx, rsi, r10	# _231, tmp1129, tmp477
 11135      D6
 11136 40de 4D8D14C7 		lea	r10, [r15+rax*8]	# tmp483,
 11137 40e2 4C89E6   		mov	rsi, r12	# _939, step
 11138 40e5 4D0F46D7 		cmovbe	r10, r15	# _97,, fast_loop_ptr
 11139              	# sieve_extend.c:194:    const register bitword_t* __restrict range_stop_ptr = &bitarray[(range_sto
 194:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 11140              		.loc 1 194 41 view .LVU3820
 11141 40e9 4F8D0CDF 		lea	r9, [r15+r11*8]	# range_stop_ptr,
 11142 40ed 48C1E604 		sal	rsi, 4	# _939,
 11143              	# sieve_extend.c:183:        index_ptr+=step;
 183:sieve_extend.c ****        *index_ptr |= mask;
 11144              		.loc 1 183 17 view .LVU3821
 11145 40f1 4A8D0CE5 		lea	rcx, 0[0+r12*8]	# _199,
 11145      00000000 
 11146              	.LBE527:
 11147              	.LBE526:
 11148              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 11149              		.loc 1 326 25 view .LVU3822
 11150 40f9 48895C24 		mov	QWORD PTR 80[rsp], rbx	# %sfp, index
 11150      50
 11151 40fe 41BB0100 		mov	r11d, 1	# tmp490,
 11151      0000
 11152 4104 4C894424 		mov	QWORD PTR 88[rsp], r8	# %sfp, _69
 11152      58
 11153 4109 4889F3   		mov	rbx, rsi	# _939, _939
 11154              	.LBB531:
 11155              	.LBB528:
 11156              	# sieve_extend.c:201:       *index_ptr |= (mask & chopmask(range_stop));
 201:sieve_extend.c ****    }
 11157              		.loc 1 201 29 view .LVU3823
 11158 410c 48895424 		mov	QWORD PTR 40[rsp], rdx	# %sfp, _231
 11158      28
 11159 4111 48C1E703 		sal	rdi, 3	# tmp487,
GAS LISTING /tmp/ccjg94QQ.s 			page 306


 11160              	.LBE528:
 11161              	.LBE531:
 11162              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 11163              		.loc 1 326 25 view .LVU3824
 11164 4115 4C8B4424 		mov	r8, QWORD PTR 72[rsp]	# tmp467, %sfp
 11164      48
 11165              	.LVL597:
 11166 411a 660F1F44 		.p2align 4
 11166      0000
 11167              		.p2align 3
 11168              	.L875:
 322:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 11169              		.loc 1 322 13 is_stmt 1 view .LVU3825
 11170              	# sieve_extend.c:322:             register counter_t index_word = wordindex(index);
 322:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 11171              		.loc 1 322 32 is_stmt 0 view .LVU3826
 11172 4120 4889E8   		mov	rax, rbp	# index_word, index
 11173              	# sieve_extend.c:323:             register bitword_t mask = SAFE_ZERO;
 323:sieve_extend.c ****             #pragma ivdep
 11174              		.loc 1 323 32 view .LVU3827
 11175 4123 31D2     		xor	edx, edx	# mask
 11176              	# sieve_extend.c:322:             register counter_t index_word = wordindex(index);
 322:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 11177              		.loc 1 322 32 view .LVU3828
 11178 4125 48C1E806 		shr	rax, 6	# index_word,
 11179              	.LVL598:
 323:sieve_extend.c ****             #pragma ivdep
 11180              		.loc 1 323 13 is_stmt 1 view .LVU3829
 11181              	.L869:
 325:sieve_extend.c ****                 mask |= markmask(index);
 11182              		.loc 1 325 13 view .LVU3830
 326:sieve_extend.c ****                 index += step;
 11183              		.loc 1 326 17 view .LVU3831
 11184              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 11185              		.loc 1 326 25 is_stmt 0 view .LVU3832
 11186 4129 C4C2D1F7 		shlx	rsi, r11, rbp	# tmp489, tmp490, index
 11186      F3
 11187              	# sieve_extend.c:327:                 index += step;
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 11188              		.loc 1 327 23 view .LVU3833
 11189 412e 4C01E5   		add	rbp, r12	# index, step
 11190              	.LVL599:
 11191              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 11192              		.loc 1 326 22 view .LVU3834
 11193 4131 4809F2   		or	rdx, rsi	# mask, tmp489
 11194              	.LVL600:
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 11195              		.loc 1 327 17 is_stmt 1 view .LVU3835
 328:sieve_extend.c ****             // #pragma ivdep
 11196              		.loc 1 328 21 view .LVU3836
 11197              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 11198              		.loc 1 328 36 is_stmt 0 view .LVU3837
 11199 4134 4889EE   		mov	rsi, rbp	# tmp491, index
GAS LISTING /tmp/ccjg94QQ.s 			page 307


 11200 4137 48C1EE06 		shr	rsi, 6	# tmp491,
 11201              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 11202              		.loc 1 328 13 view .LVU3838
 11203 413b 4839F0   		cmp	rax, rsi	# index_word, tmp491
 11204 413e 0F85AC00 		jne	.L1151	#,
 11204      0000
 325:sieve_extend.c ****                 mask |= markmask(index);
 11205              		.loc 1 325 13 is_stmt 1 view .LVU3839
 326:sieve_extend.c ****                 index += step;
 11206              		.loc 1 326 17 view .LVU3840
 11207              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 11208              		.loc 1 326 25 is_stmt 0 view .LVU3841
 11209 4144 C4C2D1F7 		shlx	rsi, r11, rbp	# tmp842, tmp490, index
 11209      F3
 11210              	# sieve_extend.c:327:                 index += step;
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 11211              		.loc 1 327 23 view .LVU3842
 11212 4149 4C01E5   		add	rbp, r12	# index, step
 11213              	.LVL601:
 11214              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 11215              		.loc 1 326 22 view .LVU3843
 11216 414c 4809F2   		or	rdx, rsi	# mask, tmp842
 11217              	.LVL602:
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 11218              		.loc 1 327 17 is_stmt 1 view .LVU3844
 328:sieve_extend.c ****             // #pragma ivdep
 11219              		.loc 1 328 21 view .LVU3845
 11220              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 11221              		.loc 1 328 36 is_stmt 0 view .LVU3846
 11222 414f 4889EE   		mov	rsi, rbp	# tmp843, index
 11223 4152 48C1EE06 		shr	rsi, 6	# tmp843,
 11224              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 11225              		.loc 1 328 13 view .LVU3847
 11226 4156 4839F0   		cmp	rax, rsi	# index_word, tmp843
 11227 4159 0F859100 		jne	.L1151	#,
 11227      0000
 325:sieve_extend.c ****                 mask |= markmask(index);
 11228              		.loc 1 325 13 is_stmt 1 view .LVU3848
 326:sieve_extend.c ****                 index += step;
 11229              		.loc 1 326 17 view .LVU3849
 11230              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 11231              		.loc 1 326 25 is_stmt 0 view .LVU3850
 11232 415f C4C2D1F7 		shlx	rsi, r11, rbp	# tmp844, tmp490, index
 11232      F3
 11233              	# sieve_extend.c:327:                 index += step;
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 11234              		.loc 1 327 23 view .LVU3851
 11235 4164 4C01E5   		add	rbp, r12	# index, step
 11236              	.LVL603:
 11237              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
GAS LISTING /tmp/ccjg94QQ.s 			page 308


 11238              		.loc 1 326 22 view .LVU3852
 11239 4167 4809F2   		or	rdx, rsi	# mask, tmp844
 11240              	.LVL604:
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 11241              		.loc 1 327 17 is_stmt 1 view .LVU3853
 328:sieve_extend.c ****             // #pragma ivdep
 11242              		.loc 1 328 21 view .LVU3854
 11243              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 11244              		.loc 1 328 36 is_stmt 0 view .LVU3855
 11245 416a 4889EE   		mov	rsi, rbp	# tmp845, index
 11246 416d 48C1EE06 		shr	rsi, 6	# tmp845,
 11247              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 11248              		.loc 1 328 13 view .LVU3856
 11249 4171 4839F0   		cmp	rax, rsi	# index_word, tmp845
 11250 4174 757A     		jne	.L1151	#,
 325:sieve_extend.c ****                 mask |= markmask(index);
 11251              		.loc 1 325 13 is_stmt 1 view .LVU3857
 326:sieve_extend.c ****                 index += step;
 11252              		.loc 1 326 17 view .LVU3858
 11253              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 11254              		.loc 1 326 25 is_stmt 0 view .LVU3859
 11255 4176 C4C2D1F7 		shlx	rsi, r11, rbp	# tmp846, tmp490, index
 11255      F3
 11256              	# sieve_extend.c:327:                 index += step;
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 11257              		.loc 1 327 23 view .LVU3860
 11258 417b 4C01E5   		add	rbp, r12	# index, step
 11259              	.LVL605:
 11260              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 11261              		.loc 1 326 22 view .LVU3861
 11262 417e 4809F2   		or	rdx, rsi	# mask, tmp846
 11263              	.LVL606:
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 11264              		.loc 1 327 17 is_stmt 1 view .LVU3862
 328:sieve_extend.c ****             // #pragma ivdep
 11265              		.loc 1 328 21 view .LVU3863
 11266              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 11267              		.loc 1 328 36 is_stmt 0 view .LVU3864
 11268 4181 4889EE   		mov	rsi, rbp	# tmp847, index
 11269 4184 48C1EE06 		shr	rsi, 6	# tmp847,
 11270              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 11271              		.loc 1 328 13 view .LVU3865
 11272 4188 4839F0   		cmp	rax, rsi	# index_word, tmp847
 11273 418b 7563     		jne	.L1151	#,
 325:sieve_extend.c ****                 mask |= markmask(index);
 11274              		.loc 1 325 13 is_stmt 1 view .LVU3866
 326:sieve_extend.c ****                 index += step;
 11275              		.loc 1 326 17 view .LVU3867
 11276              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 11277              		.loc 1 326 25 is_stmt 0 view .LVU3868
GAS LISTING /tmp/ccjg94QQ.s 			page 309


 11278 418d C4C2D1F7 		shlx	rsi, r11, rbp	# tmp848, tmp490, index
 11278      F3
 11279              	# sieve_extend.c:327:                 index += step;
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 11280              		.loc 1 327 23 view .LVU3869
 11281 4192 4C01E5   		add	rbp, r12	# index, step
 11282              	.LVL607:
 11283              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 11284              		.loc 1 326 22 view .LVU3870
 11285 4195 4809F2   		or	rdx, rsi	# mask, tmp848
 11286              	.LVL608:
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 11287              		.loc 1 327 17 is_stmt 1 view .LVU3871
 328:sieve_extend.c ****             // #pragma ivdep
 11288              		.loc 1 328 21 view .LVU3872
 11289              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 11290              		.loc 1 328 36 is_stmt 0 view .LVU3873
 11291 4198 4889EE   		mov	rsi, rbp	# tmp849, index
 11292 419b 48C1EE06 		shr	rsi, 6	# tmp849,
 11293              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 11294              		.loc 1 328 13 view .LVU3874
 11295 419f 4839F0   		cmp	rax, rsi	# index_word, tmp849
 11296 41a2 754C     		jne	.L1151	#,
 325:sieve_extend.c ****                 mask |= markmask(index);
 11297              		.loc 1 325 13 is_stmt 1 view .LVU3875
 326:sieve_extend.c ****                 index += step;
 11298              		.loc 1 326 17 view .LVU3876
 11299              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 11300              		.loc 1 326 25 is_stmt 0 view .LVU3877
 11301 41a4 C4C2D1F7 		shlx	rsi, r11, rbp	# tmp850, tmp490, index
 11301      F3
 11302              	# sieve_extend.c:327:                 index += step;
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 11303              		.loc 1 327 23 view .LVU3878
 11304 41a9 4C01E5   		add	rbp, r12	# index, step
 11305              	.LVL609:
 11306              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 11307              		.loc 1 326 22 view .LVU3879
 11308 41ac 4809F2   		or	rdx, rsi	# mask, tmp850
 11309              	.LVL610:
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 11310              		.loc 1 327 17 is_stmt 1 view .LVU3880
 328:sieve_extend.c ****             // #pragma ivdep
 11311              		.loc 1 328 21 view .LVU3881
 11312              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 11313              		.loc 1 328 36 is_stmt 0 view .LVU3882
 11314 41af 4889EE   		mov	rsi, rbp	# tmp851, index
 11315 41b2 48C1EE06 		shr	rsi, 6	# tmp851,
 11316              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 11317              		.loc 1 328 13 view .LVU3883
GAS LISTING /tmp/ccjg94QQ.s 			page 310


 11318 41b6 4839F0   		cmp	rax, rsi	# index_word, tmp851
 11319 41b9 7535     		jne	.L1151	#,
 325:sieve_extend.c ****                 mask |= markmask(index);
 11320              		.loc 1 325 13 is_stmt 1 view .LVU3884
 326:sieve_extend.c ****                 index += step;
 11321              		.loc 1 326 17 view .LVU3885
 11322              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 11323              		.loc 1 326 25 is_stmt 0 view .LVU3886
 11324 41bb C4C2D1F7 		shlx	rsi, r11, rbp	# tmp852, tmp490, index
 11324      F3
 11325              	# sieve_extend.c:327:                 index += step;
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 11326              		.loc 1 327 23 view .LVU3887
 11327 41c0 4C01E5   		add	rbp, r12	# index, step
 11328              	.LVL611:
 11329              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 11330              		.loc 1 326 22 view .LVU3888
 11331 41c3 4809F2   		or	rdx, rsi	# mask, tmp852
 11332              	.LVL612:
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 11333              		.loc 1 327 17 is_stmt 1 view .LVU3889
 328:sieve_extend.c ****             // #pragma ivdep
 11334              		.loc 1 328 21 view .LVU3890
 11335              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 11336              		.loc 1 328 36 is_stmt 0 view .LVU3891
 11337 41c6 4889EE   		mov	rsi, rbp	# tmp853, index
 11338 41c9 48C1EE06 		shr	rsi, 6	# tmp853,
 11339              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 11340              		.loc 1 328 13 view .LVU3892
 11341 41cd 4839F0   		cmp	rax, rsi	# index_word, tmp853
 11342 41d0 751E     		jne	.L1151	#,
 325:sieve_extend.c ****                 mask |= markmask(index);
 11343              		.loc 1 325 13 is_stmt 1 view .LVU3893
 326:sieve_extend.c ****                 index += step;
 11344              		.loc 1 326 17 view .LVU3894
 11345              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 11346              		.loc 1 326 25 is_stmt 0 view .LVU3895
 11347 41d2 C4C2D1F7 		shlx	rsi, r11, rbp	# tmp854, tmp490, index
 11347      F3
 11348              	# sieve_extend.c:327:                 index += step;
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 11349              		.loc 1 327 23 view .LVU3896
 11350 41d7 4C01E5   		add	rbp, r12	# index, step
 11351              	.LVL613:
 11352              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 11353              		.loc 1 326 22 view .LVU3897
 11354 41da 4809F2   		or	rdx, rsi	# mask, tmp854
 11355              	.LVL614:
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 11356              		.loc 1 327 17 is_stmt 1 view .LVU3898
 328:sieve_extend.c ****             // #pragma ivdep
GAS LISTING /tmp/ccjg94QQ.s 			page 311


 11357              		.loc 1 328 21 view .LVU3899
 11358              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 11359              		.loc 1 328 36 is_stmt 0 view .LVU3900
 11360 41dd 4889EE   		mov	rsi, rbp	# tmp855, index
 11361 41e0 48C1EE06 		shr	rsi, 6	# tmp855,
 11362              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 11363              		.loc 1 328 13 view .LVU3901
 11364 41e4 4839F0   		cmp	rax, rsi	# index_word, tmp855
 11365 41e7 0F843CFF 		je	.L869	#,
 11365      FFFF
 11366 41ed 0F1F00   		.p2align 4
 11367              		.p2align 3
 11368              	.L1151:
 332:sieve_extend.c ****         }
 11369              		.loc 1 332 13 is_stmt 1 view .LVU3902
 11370              	.LVL615:
 11371              	.LBB532:
 11372              	.LBI526:
 147:sieve_extend.c **** //#if __APPLE__
 11373              		.loc 1 147 20 view .LVU3903
 11374              	.LBB529:
 175:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 11375              		.loc 1 175 4 view .LVU3904
 176:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 11376              		.loc 1 176 4 view .LVU3905
 11377              	# sieve_extend.c:176:    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(
 176:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 11378              		.loc 1 176 78 is_stmt 0 view .LVU3906
 11379 41f0 498D04C7 		lea	rax, [r15+rax*8]	# index_ptr,
 11380              	.LVL616:
 177:sieve_extend.c **** 
 11381              		.loc 1 177 4 is_stmt 1 view .LVU3907
 181:sieve_extend.c ****        *index_ptr |= mask;
 11382              		.loc 1 181 4 view .LVU3908
 181:sieve_extend.c ****        *index_ptr |= mask;
 11383              		.loc 1 181 10 view .LVU3909
 11384 41f4 4C39D0   		cmp	rax, r10	# index_ptr, fast_loop_ptr
 11385 41f7 0F830301 		jnb	.L870	#,
 11385      0000
 181:sieve_extend.c ****        *index_ptr |= mask;
 11386              		.loc 1 181 10 is_stmt 0 view .LVU3910
 11387 41fd 488D3418 		lea	rsi, [rax+rbx]	# ivtmp.593,
 11388              	.L871:
 182:sieve_extend.c ****        index_ptr+=step;
 11389              		.loc 1 182 8 is_stmt 1 view .LVU3911
 11390              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 11391              		.loc 1 182 19 is_stmt 0 view .LVU3912
 11392 4201 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_650, offset: 0B], mask
 183:sieve_extend.c ****        *index_ptr |= mask;
 11393              		.loc 1 183 8 is_stmt 1 view .LVU3913
 11394              	.LVL617:
 184:sieve_extend.c ****        index_ptr+=step;
 11395              		.loc 1 184 8 view .LVU3914
 11396              	# sieve_extend.c:184:        *index_ptr |= mask;
GAS LISTING /tmp/ccjg94QQ.s 			page 312


 184:sieve_extend.c ****        index_ptr+=step;
 11397              		.loc 1 184 19 is_stmt 0 view .LVU3915
 11398 4204 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_650, index: _199, offset: 0B], mask
 185:sieve_extend.c ****        *index_ptr |= mask;
 11399              		.loc 1 185 8 is_stmt 1 view .LVU3916
 11400              	.LVL618:
 186:sieve_extend.c ****        index_ptr+=step;
 11401              		.loc 1 186 8 view .LVU3917
 11402              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 11403              		.loc 1 186 19 is_stmt 0 view .LVU3918
 11404 4208 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _932, offset: 0B], mask
 187:sieve_extend.c ****        *index_ptr |= mask;
 11405              		.loc 1 187 8 is_stmt 1 view .LVU3919
 11406              	.LVL619:
 188:sieve_extend.c ****        index_ptr+=step;
 11407              		.loc 1 188 8 view .LVU3920
 11408              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 11409              		.loc 1 188 19 is_stmt 0 view .LVU3921
 11410 420b 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _932, index: _199, offset: 0B], mask
 189:sieve_extend.c ****        *index_ptr |= mask;
 11411              		.loc 1 189 8 is_stmt 1 view .LVU3922
 11412              	.LVL620:
 190:sieve_extend.c ****        index_ptr+=step;
 11413              		.loc 1 190 8 view .LVU3923
 11414 420f 4801FE   		add	rsi, rdi	# ivtmp.593, tmp487
 11415              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 11416              		.loc 1 190 19 is_stmt 0 view .LVU3924
 11417 4212 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_650, index: _199, step: 4, offset: 0B], mask
 191:sieve_extend.c ****    }
 11418              		.loc 1 191 8 is_stmt 1 view .LVU3925
 11419 4216 4801F8   		add	rax, rdi	# index_ptr, tmp487
 11420              	.LVL621:
 181:sieve_extend.c ****        *index_ptr |= mask;
 11421              		.loc 1 181 10 view .LVU3926
 11422 4219 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 11423 421c 0F86DE00 		jbe	.L870	#,
 11423      0000
 182:sieve_extend.c ****        index_ptr+=step;
 11424              		.loc 1 182 8 view .LVU3927
 11425              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 11426              		.loc 1 182 19 is_stmt 0 view .LVU3928
 11427 4222 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_650, offset: 0B], mask
 183:sieve_extend.c ****        *index_ptr |= mask;
 11428              		.loc 1 183 8 is_stmt 1 view .LVU3929
 11429              	.LVL622:
 184:sieve_extend.c ****        index_ptr+=step;
 11430              		.loc 1 184 8 view .LVU3930
 11431              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 11432              		.loc 1 184 19 is_stmt 0 view .LVU3931
 11433 4225 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_650, index: _199, offset: 0B], mask
 185:sieve_extend.c ****        *index_ptr |= mask;
 11434              		.loc 1 185 8 is_stmt 1 view .LVU3932
GAS LISTING /tmp/ccjg94QQ.s 			page 313


 11435              	.LVL623:
 186:sieve_extend.c ****        index_ptr+=step;
 11436              		.loc 1 186 8 view .LVU3933
 11437              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 11438              		.loc 1 186 19 is_stmt 0 view .LVU3934
 11439 4229 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _932, offset: 0B], mask
 187:sieve_extend.c ****        *index_ptr |= mask;
 11440              		.loc 1 187 8 is_stmt 1 view .LVU3935
 11441              	.LVL624:
 188:sieve_extend.c ****        index_ptr+=step;
 11442              		.loc 1 188 8 view .LVU3936
 11443              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 11444              		.loc 1 188 19 is_stmt 0 view .LVU3937
 11445 422c 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _932, index: _199, offset: 0B], mask
 189:sieve_extend.c ****        *index_ptr |= mask;
 11446              		.loc 1 189 8 is_stmt 1 view .LVU3938
 11447              	.LVL625:
 190:sieve_extend.c ****        index_ptr+=step;
 11448              		.loc 1 190 8 view .LVU3939
 11449 4230 4801FE   		add	rsi, rdi	# ivtmp.593, tmp487
 11450              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 11451              		.loc 1 190 19 is_stmt 0 view .LVU3940
 11452 4233 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_650, index: _199, step: 4, offset: 0B], mask
 191:sieve_extend.c ****    }
 11453              		.loc 1 191 8 is_stmt 1 view .LVU3941
 11454 4237 4801F8   		add	rax, rdi	# index_ptr, tmp487
 11455              	.LVL626:
 181:sieve_extend.c ****        *index_ptr |= mask;
 11456              		.loc 1 181 10 view .LVU3942
 11457 423a 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 11458 423d 0F86BD00 		jbe	.L870	#,
 11458      0000
 182:sieve_extend.c ****        index_ptr+=step;
 11459              		.loc 1 182 8 view .LVU3943
 11460              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 11461              		.loc 1 182 19 is_stmt 0 view .LVU3944
 11462 4243 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_650, offset: 0B], mask
 183:sieve_extend.c ****        *index_ptr |= mask;
 11463              		.loc 1 183 8 is_stmt 1 view .LVU3945
 11464              	.LVL627:
 184:sieve_extend.c ****        index_ptr+=step;
 11465              		.loc 1 184 8 view .LVU3946
 11466              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 11467              		.loc 1 184 19 is_stmt 0 view .LVU3947
 11468 4246 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_650, index: _199, offset: 0B], mask
 185:sieve_extend.c ****        *index_ptr |= mask;
 11469              		.loc 1 185 8 is_stmt 1 view .LVU3948
 11470              	.LVL628:
 186:sieve_extend.c ****        index_ptr+=step;
 11471              		.loc 1 186 8 view .LVU3949
 11472              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/ccjg94QQ.s 			page 314


 11473              		.loc 1 186 19 is_stmt 0 view .LVU3950
 11474 424a 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _932, offset: 0B], mask
 187:sieve_extend.c ****        *index_ptr |= mask;
 11475              		.loc 1 187 8 is_stmt 1 view .LVU3951
 11476              	.LVL629:
 188:sieve_extend.c ****        index_ptr+=step;
 11477              		.loc 1 188 8 view .LVU3952
 11478              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 11479              		.loc 1 188 19 is_stmt 0 view .LVU3953
 11480 424d 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _932, index: _199, offset: 0B], mask
 189:sieve_extend.c ****        *index_ptr |= mask;
 11481              		.loc 1 189 8 is_stmt 1 view .LVU3954
 11482              	.LVL630:
 190:sieve_extend.c ****        index_ptr+=step;
 11483              		.loc 1 190 8 view .LVU3955
 11484 4251 4801FE   		add	rsi, rdi	# ivtmp.593, tmp487
 11485              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 11486              		.loc 1 190 19 is_stmt 0 view .LVU3956
 11487 4254 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_650, index: _199, step: 4, offset: 0B], mask
 191:sieve_extend.c ****    }
 11488              		.loc 1 191 8 is_stmt 1 view .LVU3957
 11489 4258 4801F8   		add	rax, rdi	# index_ptr, tmp487
 11490              	.LVL631:
 181:sieve_extend.c ****        *index_ptr |= mask;
 11491              		.loc 1 181 10 view .LVU3958
 11492 425b 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 11493 425e 0F869C00 		jbe	.L870	#,
 11493      0000
 182:sieve_extend.c ****        index_ptr+=step;
 11494              		.loc 1 182 8 view .LVU3959
 11495              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 11496              		.loc 1 182 19 is_stmt 0 view .LVU3960
 11497 4264 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_650, offset: 0B], mask
 183:sieve_extend.c ****        *index_ptr |= mask;
 11498              		.loc 1 183 8 is_stmt 1 view .LVU3961
 11499              	.LVL632:
 184:sieve_extend.c ****        index_ptr+=step;
 11500              		.loc 1 184 8 view .LVU3962
 11501              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 11502              		.loc 1 184 19 is_stmt 0 view .LVU3963
 11503 4267 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_650, index: _199, offset: 0B], mask
 185:sieve_extend.c ****        *index_ptr |= mask;
 11504              		.loc 1 185 8 is_stmt 1 view .LVU3964
 11505              	.LVL633:
 186:sieve_extend.c ****        index_ptr+=step;
 11506              		.loc 1 186 8 view .LVU3965
 11507              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 11508              		.loc 1 186 19 is_stmt 0 view .LVU3966
 11509 426b 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _932, offset: 0B], mask
 187:sieve_extend.c ****        *index_ptr |= mask;
 11510              		.loc 1 187 8 is_stmt 1 view .LVU3967
 11511              	.LVL634:
GAS LISTING /tmp/ccjg94QQ.s 			page 315


 188:sieve_extend.c ****        index_ptr+=step;
 11512              		.loc 1 188 8 view .LVU3968
 11513              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 11514              		.loc 1 188 19 is_stmt 0 view .LVU3969
 11515 426e 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _932, index: _199, offset: 0B], mask
 189:sieve_extend.c ****        *index_ptr |= mask;
 11516              		.loc 1 189 8 is_stmt 1 view .LVU3970
 11517              	.LVL635:
 190:sieve_extend.c ****        index_ptr+=step;
 11518              		.loc 1 190 8 view .LVU3971
 11519 4272 4801FE   		add	rsi, rdi	# ivtmp.593, tmp487
 11520              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 11521              		.loc 1 190 19 is_stmt 0 view .LVU3972
 11522 4275 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_650, index: _199, step: 4, offset: 0B], mask
 191:sieve_extend.c ****    }
 11523              		.loc 1 191 8 is_stmt 1 view .LVU3973
 11524 4279 4801F8   		add	rax, rdi	# index_ptr, tmp487
 11525              	.LVL636:
 181:sieve_extend.c ****        *index_ptr |= mask;
 11526              		.loc 1 181 10 view .LVU3974
 11527 427c 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 11528 427f 767F     		jbe	.L870	#,
 182:sieve_extend.c ****        index_ptr+=step;
 11529              		.loc 1 182 8 view .LVU3975
 11530              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 11531              		.loc 1 182 19 is_stmt 0 view .LVU3976
 11532 4281 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_650, offset: 0B], mask
 183:sieve_extend.c ****        *index_ptr |= mask;
 11533              		.loc 1 183 8 is_stmt 1 view .LVU3977
 11534              	.LVL637:
 184:sieve_extend.c ****        index_ptr+=step;
 11535              		.loc 1 184 8 view .LVU3978
 11536              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 11537              		.loc 1 184 19 is_stmt 0 view .LVU3979
 11538 4284 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_650, index: _199, offset: 0B], mask
 185:sieve_extend.c ****        *index_ptr |= mask;
 11539              		.loc 1 185 8 is_stmt 1 view .LVU3980
 11540              	.LVL638:
 186:sieve_extend.c ****        index_ptr+=step;
 11541              		.loc 1 186 8 view .LVU3981
 11542              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 11543              		.loc 1 186 19 is_stmt 0 view .LVU3982
 11544 4288 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _932, offset: 0B], mask
 187:sieve_extend.c ****        *index_ptr |= mask;
 11545              		.loc 1 187 8 is_stmt 1 view .LVU3983
 11546              	.LVL639:
 188:sieve_extend.c ****        index_ptr+=step;
 11547              		.loc 1 188 8 view .LVU3984
 11548              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 11549              		.loc 1 188 19 is_stmt 0 view .LVU3985
 11550 428b 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _932, index: _199, offset: 0B], mask
GAS LISTING /tmp/ccjg94QQ.s 			page 316


 189:sieve_extend.c ****        *index_ptr |= mask;
 11551              		.loc 1 189 8 is_stmt 1 view .LVU3986
 11552              	.LVL640:
 190:sieve_extend.c ****        index_ptr+=step;
 11553              		.loc 1 190 8 view .LVU3987
 11554 428f 4801FE   		add	rsi, rdi	# ivtmp.593, tmp487
 11555              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 11556              		.loc 1 190 19 is_stmt 0 view .LVU3988
 11557 4292 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_650, index: _199, step: 4, offset: 0B], mask
 191:sieve_extend.c ****    }
 11558              		.loc 1 191 8 is_stmt 1 view .LVU3989
 11559 4296 4801F8   		add	rax, rdi	# index_ptr, tmp487
 11560              	.LVL641:
 181:sieve_extend.c ****        *index_ptr |= mask;
 11561              		.loc 1 181 10 view .LVU3990
 11562 4299 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 11563 429c 7662     		jbe	.L870	#,
 182:sieve_extend.c ****        index_ptr+=step;
 11564              		.loc 1 182 8 view .LVU3991
 11565              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 11566              		.loc 1 182 19 is_stmt 0 view .LVU3992
 11567 429e 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_650, offset: 0B], mask
 183:sieve_extend.c ****        *index_ptr |= mask;
 11568              		.loc 1 183 8 is_stmt 1 view .LVU3993
 11569              	.LVL642:
 184:sieve_extend.c ****        index_ptr+=step;
 11570              		.loc 1 184 8 view .LVU3994
 11571              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 11572              		.loc 1 184 19 is_stmt 0 view .LVU3995
 11573 42a1 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_650, index: _199, offset: 0B], mask
 185:sieve_extend.c ****        *index_ptr |= mask;
 11574              		.loc 1 185 8 is_stmt 1 view .LVU3996
 11575              	.LVL643:
 186:sieve_extend.c ****        index_ptr+=step;
 11576              		.loc 1 186 8 view .LVU3997
 11577              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 11578              		.loc 1 186 19 is_stmt 0 view .LVU3998
 11579 42a5 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _932, offset: 0B], mask
 187:sieve_extend.c ****        *index_ptr |= mask;
 11580              		.loc 1 187 8 is_stmt 1 view .LVU3999
 11581              	.LVL644:
 188:sieve_extend.c ****        index_ptr+=step;
 11582              		.loc 1 188 8 view .LVU4000
 11583              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 11584              		.loc 1 188 19 is_stmt 0 view .LVU4001
 11585 42a8 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _932, index: _199, offset: 0B], mask
 189:sieve_extend.c ****        *index_ptr |= mask;
 11586              		.loc 1 189 8 is_stmt 1 view .LVU4002
 11587              	.LVL645:
 190:sieve_extend.c ****        index_ptr+=step;
 11588              		.loc 1 190 8 view .LVU4003
 11589 42ac 4801FE   		add	rsi, rdi	# ivtmp.593, tmp487
GAS LISTING /tmp/ccjg94QQ.s 			page 317


 11590              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 11591              		.loc 1 190 19 is_stmt 0 view .LVU4004
 11592 42af 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_650, index: _199, step: 4, offset: 0B], mask
 191:sieve_extend.c ****    }
 11593              		.loc 1 191 8 is_stmt 1 view .LVU4005
 11594 42b3 4801F8   		add	rax, rdi	# index_ptr, tmp487
 11595              	.LVL646:
 181:sieve_extend.c ****        *index_ptr |= mask;
 11596              		.loc 1 181 10 view .LVU4006
 11597 42b6 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 11598 42b9 7645     		jbe	.L870	#,
 182:sieve_extend.c ****        index_ptr+=step;
 11599              		.loc 1 182 8 view .LVU4007
 11600              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 11601              		.loc 1 182 19 is_stmt 0 view .LVU4008
 11602 42bb 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_650, offset: 0B], mask
 183:sieve_extend.c ****        *index_ptr |= mask;
 11603              		.loc 1 183 8 is_stmt 1 view .LVU4009
 11604              	.LVL647:
 184:sieve_extend.c ****        index_ptr+=step;
 11605              		.loc 1 184 8 view .LVU4010
 11606              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 11607              		.loc 1 184 19 is_stmt 0 view .LVU4011
 11608 42be 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_650, index: _199, offset: 0B], mask
 185:sieve_extend.c ****        *index_ptr |= mask;
 11609              		.loc 1 185 8 is_stmt 1 view .LVU4012
 11610              	.LVL648:
 186:sieve_extend.c ****        index_ptr+=step;
 11611              		.loc 1 186 8 view .LVU4013
 11612              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 11613              		.loc 1 186 19 is_stmt 0 view .LVU4014
 11614 42c2 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _932, offset: 0B], mask
 187:sieve_extend.c ****        *index_ptr |= mask;
 11615              		.loc 1 187 8 is_stmt 1 view .LVU4015
 11616              	.LVL649:
 188:sieve_extend.c ****        index_ptr+=step;
 11617              		.loc 1 188 8 view .LVU4016
 11618              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 11619              		.loc 1 188 19 is_stmt 0 view .LVU4017
 11620 42c5 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _932, index: _199, offset: 0B], mask
 189:sieve_extend.c ****        *index_ptr |= mask;
 11621              		.loc 1 189 8 is_stmt 1 view .LVU4018
 11622              	.LVL650:
 190:sieve_extend.c ****        index_ptr+=step;
 11623              		.loc 1 190 8 view .LVU4019
 11624 42c9 4801FE   		add	rsi, rdi	# ivtmp.593, tmp487
 11625              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 11626              		.loc 1 190 19 is_stmt 0 view .LVU4020
 11627 42cc 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_650, index: _199, step: 4, offset: 0B], mask
 191:sieve_extend.c ****    }
 11628              		.loc 1 191 8 is_stmt 1 view .LVU4021
GAS LISTING /tmp/ccjg94QQ.s 			page 318


 11629 42d0 4801F8   		add	rax, rdi	# index_ptr, tmp487
 11630              	.LVL651:
 181:sieve_extend.c ****        *index_ptr |= mask;
 11631              		.loc 1 181 10 view .LVU4022
 11632 42d3 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 11633 42d6 7628     		jbe	.L870	#,
 182:sieve_extend.c ****        index_ptr+=step;
 11634              		.loc 1 182 8 view .LVU4023
 11635              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 11636              		.loc 1 182 19 is_stmt 0 view .LVU4024
 11637 42d8 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_650, offset: 0B], mask
 183:sieve_extend.c ****        *index_ptr |= mask;
 11638              		.loc 1 183 8 is_stmt 1 view .LVU4025
 11639              	.LVL652:
 184:sieve_extend.c ****        index_ptr+=step;
 11640              		.loc 1 184 8 view .LVU4026
 11641              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 11642              		.loc 1 184 19 is_stmt 0 view .LVU4027
 11643 42db 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_650, index: _199, offset: 0B], mask
 185:sieve_extend.c ****        *index_ptr |= mask;
 11644              		.loc 1 185 8 is_stmt 1 view .LVU4028
 11645              	.LVL653:
 186:sieve_extend.c ****        index_ptr+=step;
 11646              		.loc 1 186 8 view .LVU4029
 11647              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 11648              		.loc 1 186 19 is_stmt 0 view .LVU4030
 11649 42df 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _932, offset: 0B], mask
 187:sieve_extend.c ****        *index_ptr |= mask;
 11650              		.loc 1 187 8 is_stmt 1 view .LVU4031
 11651              	.LVL654:
 188:sieve_extend.c ****        index_ptr+=step;
 11652              		.loc 1 188 8 view .LVU4032
 11653              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 11654              		.loc 1 188 19 is_stmt 0 view .LVU4033
 11655 42e2 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _932, index: _199, offset: 0B], mask
 189:sieve_extend.c ****        *index_ptr |= mask;
 11656              		.loc 1 189 8 is_stmt 1 view .LVU4034
 11657              	.LVL655:
 190:sieve_extend.c ****        index_ptr+=step;
 11658              		.loc 1 190 8 view .LVU4035
 11659 42e6 4801FE   		add	rsi, rdi	# ivtmp.593, tmp487
 11660              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 11661              		.loc 1 190 19 is_stmt 0 view .LVU4036
 11662 42e9 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_650, index: _199, step: 4, offset: 0B], mask
 191:sieve_extend.c ****    }
 11663              		.loc 1 191 8 is_stmt 1 view .LVU4037
 11664 42ed 4801F8   		add	rax, rdi	# index_ptr, tmp487
 11665              	.LVL656:
 181:sieve_extend.c ****        *index_ptr |= mask;
 11666              		.loc 1 181 10 view .LVU4038
 11667 42f0 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 11668 42f3 0F8708FF 		ja	.L871	#,
GAS LISTING /tmp/ccjg94QQ.s 			page 319


 11668      FFFF
 11669 42f9 0F1F8000 		.p2align 4
 11669      000000
 11670              		.p2align 3
 11671              	.L870:
 194:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 11672              		.loc 1 194 4 view .LVU4039
 195:sieve_extend.c ****        *index_ptr |= mask;
 11673              		.loc 1 195 4 view .LVU4040
 195:sieve_extend.c ****        *index_ptr |= mask;
 11674              		.loc 1 195 10 view .LVU4041
 11675 4300 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 11676 4303 765B     		jbe	.L872	#,
 11677              	.L873:
 196:sieve_extend.c ****        index_ptr+=step;
 11678              		.loc 1 196 8 view .LVU4042
 11679              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 11680              		.loc 1 196 19 is_stmt 0 view .LVU4043
 11681 4305 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_647, offset: 0B], mask
 197:sieve_extend.c ****    }
 11682              		.loc 1 197 8 is_stmt 1 view .LVU4044
 11683              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 11684              		.loc 1 197 17 is_stmt 0 view .LVU4045
 11685 4308 4801C8   		add	rax, rcx	# index_ptr, _199
 11686              	.LVL657:
 195:sieve_extend.c ****        *index_ptr |= mask;
 11687              		.loc 1 195 10 is_stmt 1 view .LVU4046
 11688 430b 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 11689 430e 7650     		jbe	.L872	#,
 196:sieve_extend.c ****        index_ptr+=step;
 11690              		.loc 1 196 8 view .LVU4047
 11691              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 11692              		.loc 1 196 19 is_stmt 0 view .LVU4048
 11693 4310 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_647, offset: 0B], mask
 197:sieve_extend.c ****    }
 11694              		.loc 1 197 8 is_stmt 1 view .LVU4049
 11695              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 11696              		.loc 1 197 17 is_stmt 0 view .LVU4050
 11697 4313 4801C8   		add	rax, rcx	# index_ptr, _199
 11698              	.LVL658:
 195:sieve_extend.c ****        *index_ptr |= mask;
 11699              		.loc 1 195 10 is_stmt 1 view .LVU4051
 11700 4316 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 11701 4319 7645     		jbe	.L872	#,
 196:sieve_extend.c ****        index_ptr+=step;
 11702              		.loc 1 196 8 view .LVU4052
 11703              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 11704              		.loc 1 196 19 is_stmt 0 view .LVU4053
 11705 431b 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_647, offset: 0B], mask
 197:sieve_extend.c ****    }
 11706              		.loc 1 197 8 is_stmt 1 view .LVU4054
 11707              	# sieve_extend.c:197:        index_ptr+=step;
GAS LISTING /tmp/ccjg94QQ.s 			page 320


 197:sieve_extend.c ****    }
 11708              		.loc 1 197 17 is_stmt 0 view .LVU4055
 11709 431e 4801C8   		add	rax, rcx	# index_ptr, _199
 11710              	.LVL659:
 195:sieve_extend.c ****        *index_ptr |= mask;
 11711              		.loc 1 195 10 is_stmt 1 view .LVU4056
 11712 4321 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 11713 4324 763A     		jbe	.L872	#,
 196:sieve_extend.c ****        index_ptr+=step;
 11714              		.loc 1 196 8 view .LVU4057
 11715              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 11716              		.loc 1 196 19 is_stmt 0 view .LVU4058
 11717 4326 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_647, offset: 0B], mask
 197:sieve_extend.c ****    }
 11718              		.loc 1 197 8 is_stmt 1 view .LVU4059
 11719              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 11720              		.loc 1 197 17 is_stmt 0 view .LVU4060
 11721 4329 4801C8   		add	rax, rcx	# index_ptr, _199
 11722              	.LVL660:
 195:sieve_extend.c ****        *index_ptr |= mask;
 11723              		.loc 1 195 10 is_stmt 1 view .LVU4061
 11724 432c 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 11725 432f 762F     		jbe	.L872	#,
 196:sieve_extend.c ****        index_ptr+=step;
 11726              		.loc 1 196 8 view .LVU4062
 11727              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 11728              		.loc 1 196 19 is_stmt 0 view .LVU4063
 11729 4331 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_647, offset: 0B], mask
 197:sieve_extend.c ****    }
 11730              		.loc 1 197 8 is_stmt 1 view .LVU4064
 11731              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 11732              		.loc 1 197 17 is_stmt 0 view .LVU4065
 11733 4334 4801C8   		add	rax, rcx	# index_ptr, _199
 11734              	.LVL661:
 195:sieve_extend.c ****        *index_ptr |= mask;
 11735              		.loc 1 195 10 is_stmt 1 view .LVU4066
 11736 4337 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 11737 433a 7624     		jbe	.L872	#,
 196:sieve_extend.c ****        index_ptr+=step;
 11738              		.loc 1 196 8 view .LVU4067
 11739              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 11740              		.loc 1 196 19 is_stmt 0 view .LVU4068
 11741 433c 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_647, offset: 0B], mask
 197:sieve_extend.c ****    }
 11742              		.loc 1 197 8 is_stmt 1 view .LVU4069
 11743              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 11744              		.loc 1 197 17 is_stmt 0 view .LVU4070
 11745 433f 4801C8   		add	rax, rcx	# index_ptr, _199
 11746              	.LVL662:
 195:sieve_extend.c ****        *index_ptr |= mask;
 11747              		.loc 1 195 10 is_stmt 1 view .LVU4071
GAS LISTING /tmp/ccjg94QQ.s 			page 321


 11748 4342 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 11749 4345 7619     		jbe	.L872	#,
 196:sieve_extend.c ****        index_ptr+=step;
 11750              		.loc 1 196 8 view .LVU4072
 11751              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 11752              		.loc 1 196 19 is_stmt 0 view .LVU4073
 11753 4347 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_647, offset: 0B], mask
 197:sieve_extend.c ****    }
 11754              		.loc 1 197 8 is_stmt 1 view .LVU4074
 11755              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 11756              		.loc 1 197 17 is_stmt 0 view .LVU4075
 11757 434a 4801C8   		add	rax, rcx	# index_ptr, _199
 11758              	.LVL663:
 195:sieve_extend.c ****        *index_ptr |= mask;
 11759              		.loc 1 195 10 is_stmt 1 view .LVU4076
 11760 434d 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 11761 4350 760E     		jbe	.L872	#,
 196:sieve_extend.c ****        index_ptr+=step;
 11762              		.loc 1 196 8 view .LVU4077
 11763              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 11764              		.loc 1 196 19 is_stmt 0 view .LVU4078
 11765 4352 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_647, offset: 0B], mask
 197:sieve_extend.c ****    }
 11766              		.loc 1 197 8 is_stmt 1 view .LVU4079
 11767              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 11768              		.loc 1 197 17 is_stmt 0 view .LVU4080
 11769 4355 4801C8   		add	rax, rcx	# index_ptr, _199
 11770              	.LVL664:
 195:sieve_extend.c ****        *index_ptr |= mask;
 11771              		.loc 1 195 10 is_stmt 1 view .LVU4081
 11772 4358 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 11773 435b 77A8     		ja	.L873	#,
 11774 435d 0F1F00   		.p2align 4
 11775              		.p2align 3
 11776              	.L872:
 200:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 11777              		.loc 1 200 4 view .LVU4082
 11778              	# sieve_extend.c:200:    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range
 200:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 11779              		.loc 1 200 7 is_stmt 0 view .LVU4083
 11780 4360 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 11781 4363 0F84D708 		je	.L1237	#,
 11781      0000
 11782              	.LVL665:
 11783              	.L874:
 200:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 11784              		.loc 1 200 7 view .LVU4084
 11785              	.LBE529:
 11786              	.LBE532:
 11787              	.LBE525:
 321:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 11788              		.loc 1 321 54 is_stmt 1 view .LVU4085
 11789              	# sieve_extend.c:321:         for (register counter_t index = range_start; index <= range_stop_uniq
GAS LISTING /tmp/ccjg94QQ.s 			page 322


 321:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 11790              		.loc 1 321 9 is_stmt 0 view .LVU4086
 11791 4369 4939E8   		cmp	r8, rbp	# tmp467, index
 11792 436c 0F83AEFD 		jnb	.L875	#,
 11792      FFFF
 321:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 11793              		.loc 1 321 9 view .LVU4087
 11794 4372 488B5C24 		mov	rbx, QWORD PTR 80[rsp]	# index, %sfp
 11794      50
 11795 4377 4C8B4424 		mov	r8, QWORD PTR 88[rsp]	# _69, %sfp
 11795      58
 11796 437c E9AAF6FF 		jmp	.L857	#
 11796      FF
 11797              	.LVL666:
 11798              	.L1227:
 321:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 11799              		.loc 1 321 9 view .LVU4088
 11800 4381 4C8B7424 		mov	r14, QWORD PTR 48[rsp]	# <retval>, %sfp
 11800      30
 11801 4386 48894C24 		mov	QWORD PTR 40[rsp], rcx	# %sfp, prime
 11801      28
 11802 438b 498B4608 		mov	rax, QWORD PTR 8[r14]	# prephitmp_991, sieve_92->bits
 11803 438f 48894424 		mov	QWORD PTR 8[rsp], rax	# %sfp, prephitmp_991
 11803      08
 11804              	.LVL667:
 11805              	.L848:
 321:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 11806              		.loc 1 321 9 view .LVU4089
 11807              	.LBE524:
 11808              	.LBE523:
 11809              	.LBE522:
 11810              	.LBE548:
 11811              	.LBE555:
 11812              	.LBE570:
1068:sieve_extend.c ****     prime = block.prime;
 11813              		.loc 1 1068 5 is_stmt 1 view .LVU4090
 11814              	.LBB571:
 924:sieve_extend.c ****     if (size < WORD_SIZE_counter)   {
 11815              		.loc 1 924 20 view .LVU4091
 11816              	.LBB565:
 925:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 11817              		.loc 1 925 5 view .LVU4092
 11818              	# sieve_extend.c:925:     if (size < WORD_SIZE_counter)   {
 925:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 11819              		.loc 1 925 8 is_stmt 0 view .LVU4093
 11820 4394 4883FA3F 		cmp	rdx, 63	# block$pattern_size,
 11821 4398 0F86B9FA 		jbe	.L841	#,
 11821      FFFF
 11822              	.LVL668:
 11823              	.L884:
 930:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 11824              		.loc 1 930 5 is_stmt 1 view .LVU4094
 931:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 11825              		.loc 1 931 5 view .LVU4095
 11826              	# sieve_extend.c:930:     const counter_t copy_start  = source_start + size;
 930:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 11827              		.loc 1 930 21 is_stmt 0 view .LVU4096
GAS LISTING /tmp/ccjg94QQ.s 			page 323


 11828 439e 4C8D0416 		lea	r8, [rsi+rdx]	# copy_start,
 11829              	.LVL669:
 11830              	# sieve_extend.c:932:     const bitshift_t source_bit = bitindex_calc(source_start);
 932:sieve_extend.c **** 
 11831              		.loc 1 932 22 view .LVU4097
 11832 43a2 4989F4   		mov	r12, rsi	# source_bit, block$pattern_start
 11833              	# sieve_extend.c:931:     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 931:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 11834              		.loc 1 931 22 view .LVU4098
 11835 43a5 4183E03F 		and	r8d, 63	# copy_bit,
 11836              	.LVL670:
 932:sieve_extend.c **** 
 11837              		.loc 1 932 5 is_stmt 1 view .LVU4099
 11838              	# sieve_extend.c:932:     const bitshift_t source_bit = bitindex_calc(source_start);
 932:sieve_extend.c **** 
 11839              		.loc 1 932 22 is_stmt 0 view .LVU4100
 11840 43a9 4183E43F 		and	r12d, 63	# source_bit,
 11841              	.LVL671:
 934:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 11842              		.loc 1 934 5 is_stmt 1 view .LVU4101
 11843              	# sieve_extend.c:934:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 934:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 11844              		.loc 1 934 37 is_stmt 0 view .LVU4102
 11845 43ad 488B4C24 		mov	rcx, QWORD PTR 8[rsp]	#, %sfp
 11845      08
 11846              	# sieve_extend.c:934:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 934:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 11847              		.loc 1 934 13 view .LVU4103
 11848 43b2 4D39E0   		cmp	r8, r12	# copy_bit, source_bit
 11849              	# sieve_extend.c:934:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 934:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 11850              		.loc 1 934 37 view .LVU4104
 11851 43b5 488B7C24 		mov	rdi, QWORD PTR 56[rsp]	#, %sfp
 11851      38
 11852              	# sieve_extend.c:934:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 934:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 11853              		.loc 1 934 13 view .LVU4105
 11854 43ba 0F82B208 		jb	.L1238	#,
 11854      0000
 935:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 11855              		.loc 1 935 10 is_stmt 1 view .LVU4106
 11856              	# sieve_extend.c:935:     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, so
 935:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 11857              		.loc 1 935 13 is_stmt 0 view .LVU4107
 11858 43c0 0F878402 		ja	.L1239	#,
 11858      0000
 936:sieve_extend.c **** }
 11859              		.loc 1 936 37 is_stmt 1 view .LVU4108
 11860 43c6 E805DBFF 		call	extendSieve_aligned	#
 11860      FF
 11861              	.LVL672:
 11862              	.L885:
 936:sieve_extend.c **** }
 11863              		.loc 1 936 37 is_stmt 0 view .LVU4109
 11864              	.LBE565:
 11865              	.LBE571:
1069:sieve_extend.c **** 
GAS LISTING /tmp/ccjg94QQ.s 			page 324


 11866              		.loc 1 1069 5 is_stmt 1 view .LVU4110
1072:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11867              		.loc 1 1072 5 view .LVU4111
 11868              	.LBB572:
1072:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11869              		.loc 1 1072 10 view .LVU4112
1072:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11870              		.loc 1 1072 10 is_stmt 0 view .LVU4113
 11871 43cb 4C8B5424 		mov	r10, QWORD PTR 40[rsp]	# prime, %sfp
 11871      28
 11872              	# sieve_extend.c:1072:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <=
1072:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11873              		.loc 1 1072 20 view .LVU4114
 11874 43d0 4531FF   		xor	r15d, r15d	# block_start
 11875              	# sieve_extend.c:1072:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <=
1072:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11876              		.loc 1 1072 38 view .LVU4115
 11877 43d3 488B5424 		mov	rdx, QWORD PTR 64[rsp]	# blocksize, %sfp
 11877      40
 11878              	.LBB573:
 11879              	.LBB574:
 11880              	.LBB575:
 11881              	.LBB576:
 11882              	.LBB577:
 11883              	# sieve_extend.c:419:         applyMask(bitarray, step, range_stop, markmask(index), wordindex(inde
 419:sieve_extend.c ****     }
 11884              		.loc 1 419 9 view .LVU4116
 11885 43d8 41BD0100 		mov	r13d, 1	# tmp618,
 11885      0000
 11886              	.LBE577:
 11887              	.LBE576:
 11888              	.LBE575:
 11889              	.LBE574:
 11890              	.LBE573:
 11891              	# sieve_extend.c:1072:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <=
1072:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11892              		.loc 1 1072 83 view .LVU4117
 11893 43de 488B4C24 		mov	rcx, QWORD PTR 48[rsp]	# <retval>, %sfp
 11893      30
 11894 43e3 498D7201 		lea	rsi, 1[r10]	# tmp613,
 11895 43e7 48897424 		mov	QWORD PTR 32[rsp], rsi	# %sfp, tmp613
 11895      20
 11896              	# sieve_extend.c:1072:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <=
1072:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11897              		.loc 1 1072 38 view .LVU4118
 11898 43ec 488D6AFF 		lea	rbp, -1[rdx]	# block_stop,
 11899              	.LVL673:
1072:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11900              		.loc 1 1072 63 is_stmt 1 view .LVU4119
 11901              	# sieve_extend.c:1072:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <=
1072:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11902              		.loc 1 1072 83 is_stmt 0 view .LVU4120
 11903 43f0 488B5108 		mov	rdx, QWORD PTR 8[rcx]	# _8, sieve_92->bits
 11904              	.LVL674:
 11905 43f4 66662E0F 		.p2align 4
 11905      1F840000 
 11905      00000090 
GAS LISTING /tmp/ccjg94QQ.s 			page 325


 11906              		.p2align 3
 11907              	.L891:
1073:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime);
 11908              		.loc 1 1073 9 is_stmt 1 view .LVU4121
 11909              	.LBB617:
 11910              	.LBB618:
 11911              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 11912              		.loc 1 123 21 is_stmt 0 view .LVU4122
 11913 4400 488B7C24 		mov	rdi, QWORD PTR 40[rsp]	# prime, %sfp
 11913      28
 11914 4405 4839EA   		cmp	rdx, rbp	# _8, block_stop
 11915              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 11916              		.loc 1 123 12 view .LVU4123
 11917 4408 488B5C24 		mov	rbx, QWORD PTR 56[rsp]	# _97, %sfp
 11917      38
 11918 440d 480F46EA 		cmovbe	rbp, rdx	# _8,, block_stop
 11919              	.LVL675:
 123:sieve_extend.c ****     return index;
 11920              		.loc 1 123 12 view .LVU4124
 11921              	.LBE618:
 11922              	.LBE617:
1074:sieve_extend.c ****         sieve_block_stripe(sieve, block_start, block_stop, prime);
 11923              		.loc 1 1074 9 is_stmt 1 view .LVU4125
 11924              	.LBB621:
 11925              	.LBI617:
 122:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 11926              		.loc 1 122 25 view .LVU4126
 11927              	.LBB619:
 123:sieve_extend.c ****     return index;
 11928              		.loc 1 123 5 view .LVU4127
 123:sieve_extend.c ****     return index;
 11929              		.loc 1 123 11 view .LVU4128
 11930              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 11931              		.loc 1 123 21 is_stmt 0 view .LVU4129
 11932 4411 4989FB   		mov	r11, rdi	# tmp516, prime
 11933 4414 49C1EB06 		shr	r11, 6	# tmp516,
 11934              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 11935              		.loc 1 123 12 view .LVU4130
 11936 4418 4E8B0CDB 		mov	r9, QWORD PTR [rbx+r11*8]	# *_303, *_303
 11937              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 11938              		.loc 1 123 11 view .LVU4131
 11939 441c 490FA3F9 		bt	r9, rdi	# *_303, tmp1157
 11940 4420 0F834502 		jnc	.L888	#,
 11940      0000
 11941 4426 488B4424 		mov	rax, QWORD PTR 32[rsp]	# tmp613, %sfp
 11941      20
 11942              	.L889:
 123:sieve_extend.c ****     return index;
 11943              		.loc 1 123 58 is_stmt 1 view .LVU4132
 11944              	.LVL676:
 11945              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
GAS LISTING /tmp/ccjg94QQ.s 			page 326


 11946              		.loc 1 123 21 is_stmt 0 view .LVU4133
 11947 442b 4989C6   		mov	r14, rax	# tmp521, tmp613
 11948              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 11949              		.loc 1 123 63 view .LVU4134
 11950 442e 4889C6   		mov	rsi, rax	# prime, tmp613
 123:sieve_extend.c ****     return index;
 11951              		.loc 1 123 11 is_stmt 1 view .LVU4135
 11952              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 11953              		.loc 1 123 21 is_stmt 0 view .LVU4136
 11954 4431 49C1EE06 		shr	r14, 6	# tmp521,
 11955              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 11956              		.loc 1 123 12 view .LVU4137
 11957 4435 4E8B04F3 		mov	r8, QWORD PTR [rbx+r14*8]	# *_34, *_34
 11958              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 11959              		.loc 1 123 11 view .LVU4138
 11960 4439 490FA3C0 		bt	r8, rax	# *_34, tmp613
 11961 443d 0F831502 		jnc	.L1172	#,
 11961      0000
 11962 4443 4C8D6001 		lea	r12, 1[rax]	# tmp622,
 11963              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 11964              		.loc 1 123 21 view .LVU4139
 11965 4447 4C89E1   		mov	rcx, r12	# tmp661, tmp613
 11966 444a 4C89E0   		mov	rax, r12	# tmp613, tmp622
 11967              	.LVL677:
 123:sieve_extend.c ****     return index;
 11968              		.loc 1 123 58 is_stmt 1 view .LVU4140
 11969              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 11970              		.loc 1 123 21 is_stmt 0 view .LVU4141
 11971 444d 48C1E906 		shr	rcx, 6	# tmp661,
 11972              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 11973              		.loc 1 123 63 view .LVU4142
 11974 4451 4C89E6   		mov	rsi, r12	# prime, tmp613
 123:sieve_extend.c ****     return index;
 11975              		.loc 1 123 11 is_stmt 1 view .LVU4143
 11976              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 11977              		.loc 1 123 12 is_stmt 0 view .LVU4144
 11978 4454 4C8B14CB 		mov	r10, QWORD PTR [rbx+rcx*8]	# *_34, *_34
 11979              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 11980              		.loc 1 123 11 view .LVU4145
 11981 4458 4D0FA3E2 		bt	r10, r12	# *_34, tmp613
 11982 445c 0F83F601 		jnc	.L1172	#,
 11982      0000
 11983 4462 498D4424 		lea	rax, 1[r12]	# tmp613,
 11983      01
 11984              	.LVL678:
 123:sieve_extend.c ****     return index;
 11985              		.loc 1 123 58 is_stmt 1 view .LVU4146
 11986              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
GAS LISTING /tmp/ccjg94QQ.s 			page 327


 123:sieve_extend.c ****     return index;
 11987              		.loc 1 123 21 is_stmt 0 view .LVU4147
 11988 4467 4889C7   		mov	rdi, rax	# tmp736, tmp613
 11989              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 11990              		.loc 1 123 63 view .LVU4148
 11991 446a 4889C6   		mov	rsi, rax	# prime, tmp613
 123:sieve_extend.c ****     return index;
 11992              		.loc 1 123 11 is_stmt 1 view .LVU4149
 11993              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 11994              		.loc 1 123 21 is_stmt 0 view .LVU4150
 11995 446d 48C1EF06 		shr	rdi, 6	# tmp736,
 11996              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 11997              		.loc 1 123 12 view .LVU4151
 11998 4471 4C8B1CFB 		mov	r11, QWORD PTR [rbx+rdi*8]	# *_34, *_34
 11999              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12000              		.loc 1 123 11 view .LVU4152
 12001 4475 490FA3C3 		bt	r11, rax	# *_34, tmp613
 12002 4479 0F83D901 		jnc	.L1172	#,
 12002      0000
 12003 447f 498D4424 		lea	rax, 2[r12]	# tmp613,
 12003      02
 12004              	.LVL679:
 123:sieve_extend.c ****     return index;
 12005              		.loc 1 123 58 is_stmt 1 view .LVU4153
 12006              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12007              		.loc 1 123 21 is_stmt 0 view .LVU4154
 12008 4484 4989C1   		mov	r9, rax	# tmp740, tmp613
 12009              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12010              		.loc 1 123 63 view .LVU4155
 12011 4487 4889C6   		mov	rsi, rax	# prime, tmp613
 123:sieve_extend.c ****     return index;
 12012              		.loc 1 123 11 is_stmt 1 view .LVU4156
 12013              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12014              		.loc 1 123 21 is_stmt 0 view .LVU4157
 12015 448a 49C1E906 		shr	r9, 6	# tmp740,
 12016              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12017              		.loc 1 123 12 view .LVU4158
 12018 448e 4E8B34CB 		mov	r14, QWORD PTR [rbx+r9*8]	# *_34, *_34
 12019              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12020              		.loc 1 123 11 view .LVU4159
 12021 4492 490FA3C6 		bt	r14, rax	# *_34, tmp613
 12022 4496 0F83BC01 		jnc	.L1172	#,
 12022      0000
 12023 449c 498D4424 		lea	rax, 3[r12]	# tmp613,
 12023      03
 12024              	.LVL680:
 123:sieve_extend.c ****     return index;
 12025              		.loc 1 123 58 is_stmt 1 view .LVU4160
GAS LISTING /tmp/ccjg94QQ.s 			page 328


 12026              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12027              		.loc 1 123 21 is_stmt 0 view .LVU4161
 12028 44a1 4989C0   		mov	r8, rax	# tmp744, tmp613
 12029              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12030              		.loc 1 123 63 view .LVU4162
 12031 44a4 4889C6   		mov	rsi, rax	# prime, tmp613
 123:sieve_extend.c ****     return index;
 12032              		.loc 1 123 11 is_stmt 1 view .LVU4163
 12033              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12034              		.loc 1 123 21 is_stmt 0 view .LVU4164
 12035 44a7 49C1E806 		shr	r8, 6	# tmp744,
 12036              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12037              		.loc 1 123 12 view .LVU4165
 12038 44ab 4A8B0CC3 		mov	rcx, QWORD PTR [rbx+r8*8]	# *_34, *_34
 12039              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12040              		.loc 1 123 11 view .LVU4166
 12041 44af 480FA3C1 		bt	rcx, rax	# *_34, tmp613
 12042 44b3 0F839F01 		jnc	.L1172	#,
 12042      0000
 12043 44b9 498D4424 		lea	rax, 4[r12]	# tmp613,
 12043      04
 12044              	.LVL681:
 123:sieve_extend.c ****     return index;
 12045              		.loc 1 123 58 is_stmt 1 view .LVU4167
 12046              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12047              		.loc 1 123 21 is_stmt 0 view .LVU4168
 12048 44be 4989C2   		mov	r10, rax	# tmp748, tmp613
 12049              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12050              		.loc 1 123 63 view .LVU4169
 12051 44c1 4889C6   		mov	rsi, rax	# prime, tmp613
 123:sieve_extend.c ****     return index;
 12052              		.loc 1 123 11 is_stmt 1 view .LVU4170
 12053              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12054              		.loc 1 123 21 is_stmt 0 view .LVU4171
 12055 44c4 49C1EA06 		shr	r10, 6	# tmp748,
 12056              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12057              		.loc 1 123 12 view .LVU4172
 12058 44c8 4A8B3CD3 		mov	rdi, QWORD PTR [rbx+r10*8]	# *_34, *_34
 12059              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12060              		.loc 1 123 11 view .LVU4173
 12061 44cc 480FA3C7 		bt	rdi, rax	# *_34, tmp613
 12062 44d0 0F838201 		jnc	.L1172	#,
 12062      0000
 12063 44d6 498D4424 		lea	rax, 5[r12]	# tmp613,
 12063      05
 12064              	.LVL682:
 123:sieve_extend.c ****     return index;
GAS LISTING /tmp/ccjg94QQ.s 			page 329


 12065              		.loc 1 123 58 is_stmt 1 view .LVU4174
 12066              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12067              		.loc 1 123 21 is_stmt 0 view .LVU4175
 12068 44db 4989C3   		mov	r11, rax	# tmp752, tmp613
 12069              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12070              		.loc 1 123 63 view .LVU4176
 12071 44de 4889C6   		mov	rsi, rax	# prime, tmp613
 123:sieve_extend.c ****     return index;
 12072              		.loc 1 123 11 is_stmt 1 view .LVU4177
 12073              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12074              		.loc 1 123 21 is_stmt 0 view .LVU4178
 12075 44e1 49C1EB06 		shr	r11, 6	# tmp752,
 12076              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12077              		.loc 1 123 12 view .LVU4179
 12078 44e5 4E8B0CDB 		mov	r9, QWORD PTR [rbx+r11*8]	# *_34, *_34
 12079              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12080              		.loc 1 123 11 view .LVU4180
 12081 44e9 490FA3C1 		bt	r9, rax	# *_34, tmp613
 12082 44ed 0F836501 		jnc	.L1172	#,
 12082      0000
 12083 44f3 498D4424 		lea	rax, 6[r12]	# tmp613,
 12083      06
 12084              	.LVL683:
 123:sieve_extend.c ****     return index;
 12085              		.loc 1 123 58 is_stmt 1 view .LVU4181
 12086              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12087              		.loc 1 123 21 is_stmt 0 view .LVU4182
 12088 44f8 4989C6   		mov	r14, rax	# tmp756, tmp613
 12089              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12090              		.loc 1 123 63 view .LVU4183
 12091 44fb 4889C6   		mov	rsi, rax	# prime, tmp613
 123:sieve_extend.c ****     return index;
 12092              		.loc 1 123 11 is_stmt 1 view .LVU4184
 12093              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12094              		.loc 1 123 21 is_stmt 0 view .LVU4185
 12095 44fe 49C1EE06 		shr	r14, 6	# tmp756,
 12096              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12097              		.loc 1 123 12 view .LVU4186
 12098 4502 4E8B04F3 		mov	r8, QWORD PTR [rbx+r14*8]	# *_34, *_34
 12099              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12100              		.loc 1 123 11 view .LVU4187
 12101 4506 490FA3C0 		bt	r8, rax	# *_34, tmp613
 12102 450a 0F834801 		jnc	.L1172	#,
 12102      0000
 12103 4510 498D4424 		lea	rax, 7[r12]	# tmp613,
 12103      07
 12104              	.LVL684:
GAS LISTING /tmp/ccjg94QQ.s 			page 330


 123:sieve_extend.c ****     return index;
 12105              		.loc 1 123 11 view .LVU4188
 12106 4515 E911FFFF 		jmp	.L889	#
 12106      FF
 12107              	.LVL685:
 12108              	.L1235:
 123:sieve_extend.c ****     return index;
 12109              		.loc 1 123 11 view .LVU4189
 12110              	.LBE619:
 12111              	.LBE621:
 12112              	.LBE572:
 12113              	.LBB627:
 12114              	.LBB556:
 12115              	.LBB549:
 12116              	.LBB540:
 12117              	.LBB509:
 248:sieve_extend.c ****         //  debug if (step==13) { printf("After\n"); dump_bitarray(bitarray,10); }
 12118              		.loc 1 248 8 is_stmt 1 view .LVU4190
 12119              	# sieve_extend.c:248:        bitarray[range_start_word] |= (pattern << bitindex(range_start)) & cho
 248:sieve_extend.c ****         //  debug if (step==13) { printf("After\n"); dump_bitarray(bitarray,10); }
 12120              		.loc 1 248 73 is_stmt 0 view .LVU4191
 12121 451a 48234424 		and	rax, QWORD PTR 40[rsp]	# tmp444, %sfp
 12121      28
 12122              	# sieve_extend.c:248:        bitarray[range_start_word] |= (pattern << bitindex(range_start)) & cho
 248:sieve_extend.c ****         //  debug if (step==13) { printf("After\n"); dump_bitarray(bitarray,10); }
 12123              		.loc 1 248 35 view .LVU4192
 12124 451f 4C09C8   		or	rax, r9	# tmp445, pretmp_861
 12125 4522 498903   		mov	QWORD PTR [r11], rax	# MEM[(uint64_t *)_860], tmp445
 250:sieve_extend.c ****     }
 12126              		.loc 1 250 8 is_stmt 1 view .LVU4193
 12127 4525 E901F5FF 		jmp	.L857	#
 12127      FF
 12128              	.LVL686:
 12129              	.L864:
 250:sieve_extend.c ****     }
 12130              		.loc 1 250 8 is_stmt 0 view .LVU4194
 12131              	.LBE509:
 12132              	.LBE540:
 12133              	.LBB541:
 12134              	.LBB538:
 12135              	.LBB535:
 304:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 12136              		.loc 1 304 54 is_stmt 1 view .LVU4195
 12137              	# sieve_extend.c:304:         for (register counter_t index = range_start; index <= range_stop;) {
 304:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 12138              		.loc 1 304 9 is_stmt 0 view .LVU4196
 12139 452a 4939E8   		cmp	r8, rbp	# _69, index
 12140 452d 0F82F8F4 		jb	.L857	#,
 12140      FFFF
 12141              	.LBB536:
 12142              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 12143              		.loc 1 309 25 view .LVU4197
 12144 4533 BF010000 		mov	edi, 1	# tmp470,
 12144      00
 12145              	.LVL687:
 12146 4538 0F1F8400 		.p2align 4
GAS LISTING /tmp/ccjg94QQ.s 			page 331


 12146      00000000 
 12147              		.p2align 3
 12148              	.L868:
 305:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 12149              		.loc 1 305 13 is_stmt 1 view .LVU4198
 12150              	# sieve_extend.c:305:             register counter_t index_word = wordindex(index);
 305:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 12151              		.loc 1 305 32 is_stmt 0 view .LVU4199
 12152 4540 4889E9   		mov	rcx, rbp	# index_word, index
 12153              	# sieve_extend.c:306:             register bitword_t mask = SAFE_ZERO;
 306:sieve_extend.c ****             #pragma ivdep
 12154              		.loc 1 306 32 view .LVU4200
 12155 4543 4531C9   		xor	r9d, r9d	# mask
 12156              	# sieve_extend.c:305:             register counter_t index_word = wordindex(index);
 305:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 12157              		.loc 1 305 32 view .LVU4201
 12158 4546 48C1E906 		shr	rcx, 6	# index_word,
 12159              	.LVL688:
 306:sieve_extend.c ****             #pragma ivdep
 12160              		.loc 1 306 13 is_stmt 1 view .LVU4202
 12161              	.L867:
 308:sieve_extend.c ****                 mask |= markmask(index);
 12162              		.loc 1 308 13 view .LVU4203
 309:sieve_extend.c ****                 index += step;
 12163              		.loc 1 309 17 view .LVU4204
 12164              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 12165              		.loc 1 309 25 is_stmt 0 view .LVU4205
 12166 454a C462D1F7 		shlx	r10, rdi, rbp	# tmp469, tmp470, index
 12166      D7
 12167              	# sieve_extend.c:310:                 index += step;
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 12168              		.loc 1 310 23 view .LVU4206
 12169 454f 4C01E5   		add	rbp, r12	# index, step
 12170              	.LVL689:
 12171              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12172              		.loc 1 311 36 view .LVU4207
 12173 4552 4989EB   		mov	r11, rbp	# tmp471, index
 12174              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 12175              		.loc 1 309 22 view .LVU4208
 12176 4555 4D09D1   		or	r9, r10	# mask, tmp469
 12177              	.LVL690:
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 12178              		.loc 1 310 17 is_stmt 1 view .LVU4209
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12179              		.loc 1 311 21 view .LVU4210
 12180              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12181              		.loc 1 311 36 is_stmt 0 view .LVU4211
 12182 4558 49C1EB06 		shr	r11, 6	# tmp471,
 12183              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12184              		.loc 1 311 13 view .LVU4212
 12185 455c 4C39D9   		cmp	rcx, r11	# index_word, tmp471
 12186 455f 0F85AB00 		jne	.L1150	#,
GAS LISTING /tmp/ccjg94QQ.s 			page 332


 12186      0000
 308:sieve_extend.c ****                 mask |= markmask(index);
 12187              		.loc 1 308 13 is_stmt 1 view .LVU4213
 309:sieve_extend.c ****                 index += step;
 12188              		.loc 1 309 17 view .LVU4214
 12189              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 12190              		.loc 1 309 25 is_stmt 0 view .LVU4215
 12191 4565 C4E2D1F7 		shlx	rdx, rdi, rbp	# tmp822, tmp470, index
 12191      D7
 12192              	# sieve_extend.c:310:                 index += step;
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 12193              		.loc 1 310 23 view .LVU4216
 12194 456a 4C01E5   		add	rbp, r12	# index, step
 12195              	.LVL691:
 12196              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12197              		.loc 1 311 36 view .LVU4217
 12198 456d 4889E8   		mov	rax, rbp	# tmp823, index
 12199              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 12200              		.loc 1 309 22 view .LVU4218
 12201 4570 4909D1   		or	r9, rdx	# mask, tmp822
 12202              	.LVL692:
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 12203              		.loc 1 310 17 is_stmt 1 view .LVU4219
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12204              		.loc 1 311 21 view .LVU4220
 12205              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12206              		.loc 1 311 36 is_stmt 0 view .LVU4221
 12207 4573 48C1E806 		shr	rax, 6	# tmp823,
 12208              	.LVL693:
 12209              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12210              		.loc 1 311 13 view .LVU4222
 12211 4577 4839C1   		cmp	rcx, rax	# index_word, tmp823
 12212 457a 0F859000 		jne	.L1150	#,
 12212      0000
 308:sieve_extend.c ****                 mask |= markmask(index);
 12213              		.loc 1 308 13 is_stmt 1 view .LVU4223
 309:sieve_extend.c ****                 index += step;
 12214              		.loc 1 309 17 view .LVU4224
 12215              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 12216              		.loc 1 309 25 is_stmt 0 view .LVU4225
 12217 4580 C4E2D1F7 		shlx	rsi, rdi, rbp	# tmp824, tmp470, index
 12217      F7
 12218              	# sieve_extend.c:310:                 index += step;
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 12219              		.loc 1 310 23 view .LVU4226
 12220 4585 4C01E5   		add	rbp, r12	# index, step
 12221              	.LVL694:
 12222              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12223              		.loc 1 311 36 view .LVU4227
 12224 4588 4989EA   		mov	r10, rbp	# tmp825, index
GAS LISTING /tmp/ccjg94QQ.s 			page 333


 12225              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 12226              		.loc 1 309 22 view .LVU4228
 12227 458b 4909F1   		or	r9, rsi	# mask, tmp824
 12228              	.LVL695:
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 12229              		.loc 1 310 17 is_stmt 1 view .LVU4229
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12230              		.loc 1 311 21 view .LVU4230
 12231              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12232              		.loc 1 311 36 is_stmt 0 view .LVU4231
 12233 458e 49C1EA06 		shr	r10, 6	# tmp825,
 12234              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12235              		.loc 1 311 13 view .LVU4232
 12236 4592 4C39D1   		cmp	rcx, r10	# index_word, tmp825
 12237 4595 7579     		jne	.L1150	#,
 308:sieve_extend.c ****                 mask |= markmask(index);
 12238              		.loc 1 308 13 is_stmt 1 view .LVU4233
 309:sieve_extend.c ****                 index += step;
 12239              		.loc 1 309 17 view .LVU4234
 12240              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 12241              		.loc 1 309 25 is_stmt 0 view .LVU4235
 12242 4597 C462D1F7 		shlx	r11, rdi, rbp	# tmp826, tmp470, index
 12242      DF
 12243              	# sieve_extend.c:310:                 index += step;
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 12244              		.loc 1 310 23 view .LVU4236
 12245 459c 4C01E5   		add	rbp, r12	# index, step
 12246              	.LVL696:
 12247              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12248              		.loc 1 311 36 view .LVU4237
 12249 459f 4889EA   		mov	rdx, rbp	# tmp827, index
 12250              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 12251              		.loc 1 309 22 view .LVU4238
 12252 45a2 4D09D9   		or	r9, r11	# mask, tmp826
 12253              	.LVL697:
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 12254              		.loc 1 310 17 is_stmt 1 view .LVU4239
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12255              		.loc 1 311 21 view .LVU4240
 12256              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12257              		.loc 1 311 36 is_stmt 0 view .LVU4241
 12258 45a5 48C1EA06 		shr	rdx, 6	# tmp827,
 12259              	.LVL698:
 12260              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12261              		.loc 1 311 13 view .LVU4242
 12262 45a9 4839D1   		cmp	rcx, rdx	# index_word, tmp827
 12263 45ac 7562     		jne	.L1150	#,
 308:sieve_extend.c ****                 mask |= markmask(index);
 12264              		.loc 1 308 13 is_stmt 1 view .LVU4243
GAS LISTING /tmp/ccjg94QQ.s 			page 334


 309:sieve_extend.c ****                 index += step;
 12265              		.loc 1 309 17 view .LVU4244
 12266              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 12267              		.loc 1 309 25 is_stmt 0 view .LVU4245
 12268 45ae C4E2D1F7 		shlx	rax, rdi, rbp	# tmp828, tmp470, index
 12268      C7
 12269              	# sieve_extend.c:310:                 index += step;
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 12270              		.loc 1 310 23 view .LVU4246
 12271 45b3 4C01E5   		add	rbp, r12	# index, step
 12272              	.LVL699:
 12273              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12274              		.loc 1 311 36 view .LVU4247
 12275 45b6 4889EE   		mov	rsi, rbp	# tmp829, index
 12276              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 12277              		.loc 1 309 22 view .LVU4248
 12278 45b9 4909C1   		or	r9, rax	# mask, tmp828
 12279              	.LVL700:
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 12280              		.loc 1 310 17 is_stmt 1 view .LVU4249
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12281              		.loc 1 311 21 view .LVU4250
 12282              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12283              		.loc 1 311 36 is_stmt 0 view .LVU4251
 12284 45bc 48C1EE06 		shr	rsi, 6	# tmp829,
 12285              	.LVL701:
 12286              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12287              		.loc 1 311 13 view .LVU4252
 12288 45c0 4839F1   		cmp	rcx, rsi	# index_word, tmp829
 12289 45c3 754B     		jne	.L1150	#,
 308:sieve_extend.c ****                 mask |= markmask(index);
 12290              		.loc 1 308 13 is_stmt 1 view .LVU4253
 309:sieve_extend.c ****                 index += step;
 12291              		.loc 1 309 17 view .LVU4254
 12292              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 12293              		.loc 1 309 25 is_stmt 0 view .LVU4255
 12294 45c5 C462D1F7 		shlx	r10, rdi, rbp	# tmp830, tmp470, index
 12294      D7
 12295              	# sieve_extend.c:310:                 index += step;
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 12296              		.loc 1 310 23 view .LVU4256
 12297 45ca 4C01E5   		add	rbp, r12	# index, step
 12298              	.LVL702:
 12299              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12300              		.loc 1 311 36 view .LVU4257
 12301 45cd 4989EB   		mov	r11, rbp	# tmp831, index
 12302              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 12303              		.loc 1 309 22 view .LVU4258
 12304 45d0 4D09D1   		or	r9, r10	# mask, tmp830
GAS LISTING /tmp/ccjg94QQ.s 			page 335


 12305              	.LVL703:
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 12306              		.loc 1 310 17 is_stmt 1 view .LVU4259
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12307              		.loc 1 311 21 view .LVU4260
 12308              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12309              		.loc 1 311 36 is_stmt 0 view .LVU4261
 12310 45d3 49C1EB06 		shr	r11, 6	# tmp831,
 12311              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12312              		.loc 1 311 13 view .LVU4262
 12313 45d7 4C39D9   		cmp	rcx, r11	# index_word, tmp831
 12314 45da 7534     		jne	.L1150	#,
 308:sieve_extend.c ****                 mask |= markmask(index);
 12315              		.loc 1 308 13 is_stmt 1 view .LVU4263
 309:sieve_extend.c ****                 index += step;
 12316              		.loc 1 309 17 view .LVU4264
 12317              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 12318              		.loc 1 309 25 is_stmt 0 view .LVU4265
 12319 45dc C4E2D1F7 		shlx	rdx, rdi, rbp	# tmp832, tmp470, index
 12319      D7
 12320              	# sieve_extend.c:310:                 index += step;
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 12321              		.loc 1 310 23 view .LVU4266
 12322 45e1 4C01E5   		add	rbp, r12	# index, step
 12323              	.LVL704:
 12324              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12325              		.loc 1 311 36 view .LVU4267
 12326 45e4 4889E8   		mov	rax, rbp	# tmp833, index
 12327              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 12328              		.loc 1 309 22 view .LVU4268
 12329 45e7 4909D1   		or	r9, rdx	# mask, tmp832
 12330              	.LVL705:
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 12331              		.loc 1 310 17 is_stmt 1 view .LVU4269
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12332              		.loc 1 311 21 view .LVU4270
 12333              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12334              		.loc 1 311 36 is_stmt 0 view .LVU4271
 12335 45ea 48C1E806 		shr	rax, 6	# tmp833,
 12336              	.LVL706:
 12337              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12338              		.loc 1 311 13 view .LVU4272
 12339 45ee 4839C1   		cmp	rcx, rax	# index_word, tmp833
 12340 45f1 751D     		jne	.L1150	#,
 308:sieve_extend.c ****                 mask |= markmask(index);
 12341              		.loc 1 308 13 is_stmt 1 view .LVU4273
 309:sieve_extend.c ****                 index += step;
 12342              		.loc 1 309 17 view .LVU4274
 12343              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
GAS LISTING /tmp/ccjg94QQ.s 			page 336


 12344              		.loc 1 309 25 is_stmt 0 view .LVU4275
 12345 45f3 C4E2D1F7 		shlx	rsi, rdi, rbp	# tmp834, tmp470, index
 12345      F7
 12346              	# sieve_extend.c:310:                 index += step;
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 12347              		.loc 1 310 23 view .LVU4276
 12348 45f8 4C01E5   		add	rbp, r12	# index, step
 12349              	.LVL707:
 12350              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12351              		.loc 1 311 36 view .LVU4277
 12352 45fb 4989EA   		mov	r10, rbp	# tmp835, index
 12353              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 12354              		.loc 1 309 22 view .LVU4278
 12355 45fe 4909F1   		or	r9, rsi	# mask, tmp834
 12356              	.LVL708:
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 12357              		.loc 1 310 17 is_stmt 1 view .LVU4279
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12358              		.loc 1 311 21 view .LVU4280
 12359              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12360              		.loc 1 311 36 is_stmt 0 view .LVU4281
 12361 4601 49C1EA06 		shr	r10, 6	# tmp835,
 12362              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12363              		.loc 1 311 13 view .LVU4282
 12364 4605 4C39D1   		cmp	rcx, r10	# index_word, tmp835
 12365 4608 0F843CFF 		je	.L867	#,
 12365      FFFF
 12366 460e 6690     		.p2align 4
 12367              		.p2align 3
 12368              	.L1150:
 314:sieve_extend.c ****         }
 12369              		.loc 1 314 13 is_stmt 1 view .LVU4283
 12370              	# sieve_extend.c:314:             bitarray[index_word] |= mask;
 314:sieve_extend.c ****         }
 12371              		.loc 1 314 34 is_stmt 0 view .LVU4284
 12372 4610 4D090CCF 		or	QWORD PTR [r15+rcx*8], r9	# *_170, mask
 314:sieve_extend.c ****         }
 12373              		.loc 1 314 34 view .LVU4285
 12374              	.LBE536:
 304:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 12375              		.loc 1 304 54 is_stmt 1 view .LVU4286
 12376              	# sieve_extend.c:304:         for (register counter_t index = range_start; index <= range_stop;) {
 304:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 12377              		.loc 1 304 9 is_stmt 0 view .LVU4287
 12378 4614 4939E8   		cmp	r8, rbp	# _69, index
 12379 4617 0F8323FF 		jnb	.L868	#,
 12379      FFFF
 304:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 12380              		.loc 1 304 9 view .LVU4288
 12381 461d E909F4FF 		jmp	.L857	#
 12381      FF
 12382              	.LVL709:
 12383              	.L852:
GAS LISTING /tmp/ccjg94QQ.s 			page 337


 304:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 12384              		.loc 1 304 9 view .LVU4289
 12385              	.LBE535:
 12386              	.LBE538:
 12387              	.LBE541:
 12388              	.LBB542:
 12389              	.LBB494:
 936:sieve_extend.c **** }
 12390              		.loc 1 936 37 is_stmt 1 view .LVU4290
 12391 4622 E8A9D8FF 		call	extendSieve_aligned	#
 12391      FF
 12392              	.LVL710:
 936:sieve_extend.c **** }
 12393              		.loc 1 936 37 is_stmt 0 view .LVU4291
 12394 4627 4C8B4424 		mov	r8, QWORD PTR 40[rsp]	# _69, %sfp
 12394      28
 12395 462c 4C897424 		mov	QWORD PTR 24[rsp], r14	# %sfp, patternsize_bits
 12395      18
 12396 4631 E9B3F3FF 		jmp	.L849	#
 12396      FF
 12397              	.LVL711:
 12398              	.L1234:
 934:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 12399              		.loc 1 934 37 is_stmt 1 view .LVU4292
 12400 4636 E815DEFF 		call	extendSieve_shiftleft	#
 12400      FF
 12401              	.LVL712:
 934:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 12402              		.loc 1 934 37 is_stmt 0 view .LVU4293
 12403 463b 4C8B4424 		mov	r8, QWORD PTR 40[rsp]	# _69, %sfp
 12403      28
 12404 4640 4C897424 		mov	QWORD PTR 24[rsp], r14	# %sfp, patternsize_bits
 12404      18
 12405 4645 E99FF3FF 		jmp	.L849	#
 12405      FF
 12406              	.LVL713:
 12407              	.L1239:
 934:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 12408              		.loc 1 934 37 view .LVU4294
 12409              	.LBE494:
 12410              	.LBE542:
 12411              	.LBE549:
 12412              	.LBE556:
 12413              	.LBE627:
 12414              	.LBB628:
 12415              	.LBB566:
 935:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 12416              		.loc 1 935 37 is_stmt 1 view .LVU4295
 12417 464a E871C0FF 		call	extendSieve_shiftright_ivdep	#
 12417      FF
 12418              	.LVL714:
 935:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 12419              		.loc 1 935 37 is_stmt 0 view .LVU4296
 12420 464f E977FDFF 		jmp	.L885	#
 12420      FF
 12421              	.LVL715:
 12422              		.p2align 4,,7
GAS LISTING /tmp/ccjg94QQ.s 			page 338


 12423 4654 0F1F4000 		.p2align 3
 12424              	.L1172:
 935:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 12425              		.loc 1 935 37 view .LVU4297
 12426 4658 48894424 		mov	QWORD PTR 32[rsp], rax	# %sfp, tmp613
 12426      20
 12427 465d 488D4001 		lea	rax, 1[rax]	# tmp613,
 12428              	.LVL716:
 935:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 12429              		.loc 1 935 37 view .LVU4298
 12430 4661 48897424 		mov	QWORD PTR 40[rsp], rsi	# %sfp, prime
 12430      28
 12431 4666 48894424 		mov	QWORD PTR 32[rsp], rax	# %sfp, tmp613
 12431      20
 12432              	.LVL717:
 12433              	.L888:
 935:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 12434              		.loc 1 935 37 view .LVU4299
 12435              	.LBE566:
 12436              	.LBE628:
 12437              	.LBB629:
 12438              	.LBB622:
 12439              	.LBB620:
 124:sieve_extend.c **** }
 12440              		.loc 1 124 5 is_stmt 1 view .LVU4300
 124:sieve_extend.c **** }
 12441              		.loc 1 124 5 is_stmt 0 view .LVU4301
 12442              	.LBE620:
 12443              	.LBE622:
1075:sieve_extend.c ****     } 
 12444              		.loc 1 1075 9 is_stmt 1 view .LVU4302
 12445              	.LBB623:
 12446              	.LBB613:
 12447              	# sieve_extend.c:941:     counter_t start = prime * prime * 2 + prime * 2;
 941:sieve_extend.c ****     counter_t step  = prime * 2 + 1;
 12448              		.loc 1 941 15 is_stmt 0 view .LVU4303
 12449 466b 488B7424 		mov	rsi, QWORD PTR 32[rsp]	# tmp527, %sfp
 12449      20
 12450 4670 488B4C24 		mov	rcx, QWORD PTR 40[rsp]	# prime, %sfp
 12450      28
 12451              	.LBE613:
 12452              	.LBE623:
 12453              	# sieve_extend.c:1075:         sieve_block_stripe(sieve, block_start, block_stop, prime);
1075:sieve_extend.c ****     } 
 12454              		.loc 1 1075 9 view .LVU4304
 12455 4675 488B5C24 		mov	rbx, QWORD PTR 48[rsp]	# <retval>, %sfp
 12455      30
 12456              	.LBB624:
 12457              	.LBB614:
 12458              	# sieve_extend.c:941:     counter_t start = prime * prime * 2 + prime * 2;
 941:sieve_extend.c ****     counter_t step  = prime * 2 + 1;
 12459              		.loc 1 941 15 view .LVU4305
 12460 467a 480FAFF1 		imul	rsi, rcx	# tmp527, prime
 12461              	.LBE614:
 12462              	.LBE624:
 12463              	# sieve_extend.c:1075:         sieve_block_stripe(sieve, block_start, block_stop, prime);
1075:sieve_extend.c ****     } 
GAS LISTING /tmp/ccjg94QQ.s 			page 339


 12464              		.loc 1 1075 9 view .LVU4306
 12465 467e 488B1B   		mov	rbx, QWORD PTR [rbx]	# _30, MEM[(uint64_t * *)sieve_92]
 12466              	.LVL718:
 12467              	.LBB625:
 12468              	.LBI573:
 939:sieve_extend.c ****     counter_t prime = prime_start;
 12469              		.loc 1 939 13 is_stmt 1 view .LVU4307
 12470              	.LBB615:
 940:sieve_extend.c ****     counter_t start = prime * prime * 2 + prime * 2;
 12471              		.loc 1 940 5 view .LVU4308
 941:sieve_extend.c ****     counter_t step  = prime * 2 + 1;
 12472              		.loc 1 941 5 view .LVU4309
 12473              	# sieve_extend.c:941:     counter_t start = prime * prime * 2 + prime * 2;
 941:sieve_extend.c ****     counter_t step  = prime * 2 + 1;
 12474              		.loc 1 941 15 is_stmt 0 view .LVU4310
 12475 4681 4801F6   		add	rsi, rsi	# index
 12476              	.LVL719:
 942:sieve_extend.c ****     bitword_t* bitarray = sieve->bitarray;
 12477              		.loc 1 942 5 is_stmt 1 view .LVU4311
 943:sieve_extend.c **** 
 12478              		.loc 1 943 5 view .LVU4312
 945:sieve_extend.c ****     
 12479              		.loc 1 945 5 view .LVU4313
 983:sieve_extend.c ****         step  = prime * 2 + 1;
 12480              		.loc 1 983 5 view .LVU4314
 983:sieve_extend.c ****         step  = prime * 2 + 1;
 12481              		.loc 1 983 11 view .LVU4315
 12482 4684 4839F5   		cmp	rbp, rsi	# block_stop, index
 12483 4687 0F823001 		jb	.L895	#,
 12483      0000
 12484 468d 0F1F00   		.p2align 4
 12485              		.p2align 3
 12486              	.L890:
 984:sieve_extend.c ****         if unlikely(step > VECTORSTEP_FASTER) break;
 12487              		.loc 1 984 9 view .LVU4316
 12488              	# sieve_extend.c:984:         step  = prime * 2 + 1;
 984:sieve_extend.c ****         if unlikely(step > VECTORSTEP_FASTER) break;
 12489              		.loc 1 984 15 is_stmt 0 view .LVU4317
 12490 4690 4C8D5409 		lea	r10, 1[rcx+rcx]	# step,
 12490      01
 12491              	.LVL720:
 985:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 12492              		.loc 1 985 9 is_stmt 1 view .LVU4318
 12493              	# sieve_extend.c:985:         if unlikely(step > VECTORSTEP_FASTER) break;
 985:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 12494              		.loc 1 985 12 is_stmt 0 view .LVU4319
 12495 4695 4C3B1500 		cmp	r10, QWORD PTR global_VECTORSTEP_FASTER[rip]	# step, global_VECTORSTEP_FASTER
 12495      000000
 12496 469c 0F874601 		ja	.L1240	#,
 12496      0000
 986:sieve_extend.c ****         setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
 12497              		.loc 1 986 9 is_stmt 1 view .LVU4320
 12498              	# sieve_extend.c:986:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 986:sieve_extend.c ****         setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
 12499              		.loc 1 986 12 is_stmt 0 view .LVU4321
 12500 46a2 4C8D6101 		lea	r12, 1[rcx]	# _302,
 12501 46a6 4D39FC   		cmp	r12, r15	# _302, block_start
GAS LISTING /tmp/ccjg94QQ.s 			page 340


 12502 46a9 7710     		ja	.L896	#,
 986:sieve_extend.c ****         setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
 12503              		.loc 1 986 47 is_stmt 1 view .LVU4322
 12504              	# sieve_extend.c:986:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 986:sieve_extend.c ****         setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
 12505              		.loc 1 986 67 is_stmt 0 view .LVU4323
 12506 46ab 4A8D0439 		lea	rax, [rcx+r15]	# _306,
 12507              	# sieve_extend.c:986:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 986:sieve_extend.c ****         setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
 12508              		.loc 1 986 108 view .LVU4324
 12509 46af 31D2     		xor	edx, edx	# tmp531
 12510              	# sieve_extend.c:986:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 986:sieve_extend.c ****         setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
 12511              		.loc 1 986 75 view .LVU4325
 12512 46b1 488D3408 		lea	rsi, [rax+rcx]	# tmp529,
 12513              	.LVL721:
 12514              	# sieve_extend.c:986:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 986:sieve_extend.c ****         setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
 12515              		.loc 1 986 108 view .LVU4326
 12516 46b5 49F7F2   		div	r10	# step
 12517              	.LVL722:
 12518              	# sieve_extend.c:986:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 986:sieve_extend.c ****         setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
 12519              		.loc 1 986 53 view .LVU4327
 12520 46b8 4829D6   		sub	rsi, rdx	# index, tmp531
 12521              	.LVL723:
 12522              	.L896:
 987:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1 );
 12523              		.loc 1 987 9 is_stmt 1 view .LVU4328
 12524 46bb 4889E9   		mov	rcx, rbp	#, block_stop
 12525 46be 4889DF   		mov	rdi, rbx	#, _30
 12526 46c1 4C89D2   		mov	rdx, r10	#, step
 12527 46c4 E847CEFF 		call	setBitsTrue_largeRange_vector	#
 12527      FF
 12528              	.LVL724:
 988:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 12529              		.loc 1 988 9 view .LVU4329
 12530              	.LBB594:
 12531              	.LBI594:
 122:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 12532              		.loc 1 122 25 view .LVU4330
 12533              	.LBB595:
 123:sieve_extend.c ****     return index;
 12534              		.loc 1 123 5 view .LVU4331
 123:sieve_extend.c ****     return index;
 12535              		.loc 1 123 11 view .LVU4332
 12536              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12537              		.loc 1 123 21 is_stmt 0 view .LVU4333
 12538 46c9 4C89E1   		mov	rcx, r12	# tmp533, _302
 12539 46cc 48C1E906 		shr	rcx, 6	# tmp533,
 12540              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12541              		.loc 1 123 12 view .LVU4334
 12542 46d0 488B3CCB 		mov	rdi, QWORD PTR [rbx+rcx*8]	# *_673, *_673
 12543              	.LBE595:
 12544              	.LBE594:
GAS LISTING /tmp/ccjg94QQ.s 			page 341


 12545              	# sieve_extend.c:986:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 986:sieve_extend.c ****         setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
 12546              		.loc 1 986 12 view .LVU4335
 12547 46d4 4C89E1   		mov	rcx, r12	# prime, _302
 12548              	.LBB597:
 12549              	.LBB596:
 12550              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12551              		.loc 1 123 11 view .LVU4336
 12552 46d7 4C0FA3E7 		bt	rdi, r12	# *_673, _302
 12553 46db 0F83BF00 		jnc	.L897	#,
 12553      0000
 12554              	.LVL725:
 12555              	.L898:
 123:sieve_extend.c ****     return index;
 12556              		.loc 1 123 58 is_stmt 1 view .LVU4337
 12557              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12558              		.loc 1 123 63 is_stmt 0 view .LVU4338
 12559 46e1 4C8D5901 		lea	r11, 1[rcx]	# tmp621,
 12560              	.LVL726:
 12561              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12562              		.loc 1 123 21 view .LVU4339
 12563 46e5 4D89D9   		mov	r9, r11	# tmp538, prime
 12564              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12565              		.loc 1 123 63 view .LVU4340
 12566 46e8 4C89D9   		mov	rcx, r11	# prime, tmp621
 123:sieve_extend.c ****     return index;
 12567              		.loc 1 123 11 is_stmt 1 view .LVU4341
 12568              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12569              		.loc 1 123 21 is_stmt 0 view .LVU4342
 12570 46eb 49C1E906 		shr	r9, 6	# tmp538,
 12571              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12572              		.loc 1 123 12 view .LVU4343
 12573 46ef 4A8B34CB 		mov	rsi, QWORD PTR [rbx+r9*8]	# *_315, *_315
 12574              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12575              		.loc 1 123 11 view .LVU4344
 12576 46f3 4C0FA3DE 		bt	rsi, r11	# *_315, prime
 12577 46f7 0F83A300 		jnc	.L897	#,
 12577      0000
 123:sieve_extend.c ****     return index;
 12578              		.loc 1 123 58 is_stmt 1 view .LVU4345
 12579              	.LVL727:
 12580              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12581              		.loc 1 123 63 is_stmt 0 view .LVU4346
 12582 46fd 4883C101 		add	rcx, 1	# prime,
 12583              	.LVL728:
 123:sieve_extend.c ****     return index;
 12584              		.loc 1 123 11 is_stmt 1 view .LVU4347
 12585              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
GAS LISTING /tmp/ccjg94QQ.s 			page 342


 12586              		.loc 1 123 21 is_stmt 0 view .LVU4348
 12587 4701 4989CE   		mov	r14, rcx	# tmp708, prime
 12588 4704 49C1EE06 		shr	r14, 6	# tmp708,
 12589              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12590              		.loc 1 123 12 view .LVU4349
 12591 4708 4E8B04F3 		mov	r8, QWORD PTR [rbx+r14*8]	# *_315, *_315
 12592              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12593              		.loc 1 123 11 view .LVU4350
 12594 470c 490FA3C8 		bt	r8, rcx	# *_315, prime
 12595 4710 0F838A00 		jnc	.L897	#,
 12595      0000
 123:sieve_extend.c ****     return index;
 12596              		.loc 1 123 58 is_stmt 1 view .LVU4351
 12597              	.LVL729:
 12598              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12599              		.loc 1 123 63 is_stmt 0 view .LVU4352
 12600 4716 498D4B02 		lea	rcx, 2[r11]	# prime,
 12601              	.LVL730:
 123:sieve_extend.c ****     return index;
 12602              		.loc 1 123 11 is_stmt 1 view .LVU4353
 12603              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12604              		.loc 1 123 21 is_stmt 0 view .LVU4354
 12605 471a 4989CA   		mov	r10, rcx	# tmp712, prime
 12606 471d 49C1EA06 		shr	r10, 6	# tmp712,
 12607              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12608              		.loc 1 123 12 view .LVU4355
 12609 4721 4E8B24D3 		mov	r12, QWORD PTR [rbx+r10*8]	# *_315, *_315
 12610              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12611              		.loc 1 123 11 view .LVU4356
 12612 4725 490FA3CC 		bt	r12, rcx	# *_315, prime
 12613 4729 7375     		jnc	.L897	#,
 123:sieve_extend.c ****     return index;
 12614              		.loc 1 123 58 is_stmt 1 view .LVU4357
 12615              	.LVL731:
 12616              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12617              		.loc 1 123 63 is_stmt 0 view .LVU4358
 12618 472b 498D4B03 		lea	rcx, 3[r11]	# prime,
 12619              	.LVL732:
 123:sieve_extend.c ****     return index;
 12620              		.loc 1 123 11 is_stmt 1 view .LVU4359
 12621              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12622              		.loc 1 123 21 is_stmt 0 view .LVU4360
 12623 472f 4889C8   		mov	rax, rcx	# tmp716, prime
 12624 4732 48C1E806 		shr	rax, 6	# tmp716,
 12625              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12626              		.loc 1 123 12 view .LVU4361
 12627 4736 488B14C3 		mov	rdx, QWORD PTR [rbx+rax*8]	# *_315, *_315
 12628              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
GAS LISTING /tmp/ccjg94QQ.s 			page 343


 123:sieve_extend.c ****     return index;
 12629              		.loc 1 123 11 view .LVU4362
 12630 473a 480FA3CA 		bt	rdx, rcx	# *_315, prime
 12631 473e 7360     		jnc	.L897	#,
 123:sieve_extend.c ****     return index;
 12632              		.loc 1 123 58 is_stmt 1 view .LVU4363
 12633              	.LVL733:
 12634              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12635              		.loc 1 123 63 is_stmt 0 view .LVU4364
 12636 4740 498D4B04 		lea	rcx, 4[r11]	# prime,
 12637              	.LVL734:
 123:sieve_extend.c ****     return index;
 12638              		.loc 1 123 11 is_stmt 1 view .LVU4365
 12639              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12640              		.loc 1 123 21 is_stmt 0 view .LVU4366
 12641 4744 4889CF   		mov	rdi, rcx	# tmp720, prime
 12642 4747 48C1EF06 		shr	rdi, 6	# tmp720,
 12643              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12644              		.loc 1 123 12 view .LVU4367
 12645 474b 4C8B0CFB 		mov	r9, QWORD PTR [rbx+rdi*8]	# *_315, *_315
 12646              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12647              		.loc 1 123 11 view .LVU4368
 12648 474f 490FA3C9 		bt	r9, rcx	# *_315, prime
 12649 4753 734B     		jnc	.L897	#,
 123:sieve_extend.c ****     return index;
 12650              		.loc 1 123 58 is_stmt 1 view .LVU4369
 12651              	.LVL735:
 12652              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12653              		.loc 1 123 63 is_stmt 0 view .LVU4370
 12654 4755 498D4B05 		lea	rcx, 5[r11]	# prime,
 12655              	.LVL736:
 123:sieve_extend.c ****     return index;
 12656              		.loc 1 123 11 is_stmt 1 view .LVU4371
 12657              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12658              		.loc 1 123 21 is_stmt 0 view .LVU4372
 12659 4759 4889CE   		mov	rsi, rcx	# tmp724, prime
 12660 475c 48C1EE06 		shr	rsi, 6	# tmp724,
 12661              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12662              		.loc 1 123 12 view .LVU4373
 12663 4760 4C8B34F3 		mov	r14, QWORD PTR [rbx+rsi*8]	# *_315, *_315
 12664              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12665              		.loc 1 123 11 view .LVU4374
 12666 4764 490FA3CE 		bt	r14, rcx	# *_315, prime
 12667 4768 7336     		jnc	.L897	#,
 123:sieve_extend.c ****     return index;
 12668              		.loc 1 123 58 is_stmt 1 view .LVU4375
 12669              	.LVL737:
 12670              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
GAS LISTING /tmp/ccjg94QQ.s 			page 344


 12671              		.loc 1 123 63 is_stmt 0 view .LVU4376
 12672 476a 498D4B06 		lea	rcx, 6[r11]	# prime,
 12673              	.LVL738:
 123:sieve_extend.c ****     return index;
 12674              		.loc 1 123 11 is_stmt 1 view .LVU4377
 12675              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12676              		.loc 1 123 21 is_stmt 0 view .LVU4378
 12677 476e 4989C8   		mov	r8, rcx	# tmp728, prime
 12678 4771 49C1E806 		shr	r8, 6	# tmp728,
 12679              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12680              		.loc 1 123 12 view .LVU4379
 12681 4775 4E8B14C3 		mov	r10, QWORD PTR [rbx+r8*8]	# *_315, *_315
 12682              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12683              		.loc 1 123 11 view .LVU4380
 12684 4779 490FA3CA 		bt	r10, rcx	# *_315, prime
 12685 477d 7321     		jnc	.L897	#,
 123:sieve_extend.c ****     return index;
 12686              		.loc 1 123 58 is_stmt 1 view .LVU4381
 12687              	.LVL739:
 12688              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12689              		.loc 1 123 63 is_stmt 0 view .LVU4382
 12690 477f 498D4B07 		lea	rcx, 7[r11]	# prime,
 12691              	.LVL740:
 123:sieve_extend.c ****     return index;
 12692              		.loc 1 123 11 is_stmt 1 view .LVU4383
 12693              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12694              		.loc 1 123 21 is_stmt 0 view .LVU4384
 12695 4783 4989CB   		mov	r11, rcx	# tmp732, prime
 12696 4786 49C1EB06 		shr	r11, 6	# tmp732,
 12697              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12698              		.loc 1 123 12 view .LVU4385
 12699 478a 4E8B24DB 		mov	r12, QWORD PTR [rbx+r11*8]	# *_315, *_315
 12700              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12701              		.loc 1 123 11 view .LVU4386
 12702 478e 490FA3CC 		bt	r12, rcx	# *_315, prime
 12703 4792 0F8249FF 		jc	.L898	#,
 12703      FFFF
 12704              	.LVL741:
 12705 4798 0F1F8400 		.p2align 4
 12705      00000000 
 12706              		.p2align 3
 12707              	.L897:
 124:sieve_extend.c **** }
 12708              		.loc 1 124 5 is_stmt 1 view .LVU4387
 124:sieve_extend.c **** }
 12709              		.loc 1 124 5 is_stmt 0 view .LVU4388
 12710              	.LBE596:
 12711              	.LBE597:
 989:sieve_extend.c ****     }
 12712              		.loc 1 989 9 is_stmt 1 view .LVU4389
GAS LISTING /tmp/ccjg94QQ.s 			page 345


 12713              	# sieve_extend.c:989:         start = prime * prime * 2 + prime * 2;
 989:sieve_extend.c ****     }
 12714              		.loc 1 989 35 is_stmt 0 view .LVU4390
 12715 47a0 488D7101 		lea	rsi, 1[rcx]	# _350,
 12716              	# sieve_extend.c:989:         start = prime * prime * 2 + prime * 2;
 989:sieve_extend.c ****     }
 12717              		.loc 1 989 15 view .LVU4391
 12718 47a4 480FAFF1 		imul	rsi, rcx	# tmp544, prime
 12719              	.LVL742:
 989:sieve_extend.c ****     }
 12720              		.loc 1 989 15 view .LVU4392
 12721 47a8 4801F6   		add	rsi, rsi	# index
 12722              	.LVL743:
 983:sieve_extend.c ****         step  = prime * 2 + 1;
 12723              		.loc 1 983 11 is_stmt 1 view .LVU4393
 12724 47ab 4839F5   		cmp	rbp, rsi	# block_stop, index
 12725 47ae 0F83DCFE 		jnb	.L890	#,
 12725      FFFF
 12726              	.LVL744:
 12727              	.L1224:
 983:sieve_extend.c ****         step  = prime * 2 + 1;
 12728              		.loc 1 983 11 is_stmt 0 view .LVU4394
 12729 47b4 488B5C24 		mov	rbx, QWORD PTR 48[rsp]	# <retval>, %sfp
 12729      30
 12730              	.LVL745:
 983:sieve_extend.c ****         step  = prime * 2 + 1;
 12731              		.loc 1 983 11 view .LVU4395
 12732 47b9 488B5308 		mov	rdx, QWORD PTR 8[rbx]	# _8, sieve_92->bits
 12733              	.L895:
 12734              	.LVL746:
 983:sieve_extend.c ****         step  = prime * 2 + 1;
 12735              		.loc 1 983 11 view .LVU4396
 12736              	.LBE615:
 12737              	.LBE625:
1072:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 12738              		.loc 1 1072 91 is_stmt 1 view .LVU4397
 12739              	# sieve_extend.c:1072:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <=
1072:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 12740              		.loc 1 1072 103 is_stmt 0 view .LVU4398
 12741 47bd 4C8B4C24 		mov	r9, QWORD PTR 64[rsp]	# blocksize, %sfp
 12741      40
 12742 47c2 4D01CF   		add	r15, r9	# block_start, blocksize
 12743              	.LVL747:
 12744              	# sieve_extend.c:1072:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <=
1072:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 12745              		.loc 1 1072 128 view .LVU4399
 12746 47c5 4C01CD   		add	rbp, r9	# block_stop, blocksize
 12747              	.LVL748:
1072:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 12748              		.loc 1 1072 63 is_stmt 1 view .LVU4400
 12749              	# sieve_extend.c:1072:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <=
1072:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 12750              		.loc 1 1072 5 is_stmt 0 view .LVU4401
 12751 47c8 4C39FA   		cmp	rdx, r15	# _8, block_start
 12752 47cb 0F832FFC 		jnb	.L891	#,
 12752      FFFF
 12753              	.LBE629:
GAS LISTING /tmp/ccjg94QQ.s 			page 346


 12754              	# sieve_extend.c:1079: }
1079:sieve_extend.c **** 
 12755              		.loc 1 1079 1 view .LVU4402
 12756 47d1 488B4424 		mov	rax, QWORD PTR 48[rsp]	#, %sfp
 12756      30
 12757 47d6 488D6424 		lea	rsp, 104[rsp]	#,
 12757      68
 12758              		.cfi_remember_state
 12759              		.cfi_def_cfa_offset 56
 12760 47db 5B       		pop	rbx	#
 12761              		.cfi_def_cfa_offset 48
 12762 47dc 5D       		pop	rbp	#
 12763              		.cfi_def_cfa_offset 40
 12764              	.LVL749:
1079:sieve_extend.c **** 
 12765              		.loc 1 1079 1 view .LVU4403
 12766 47dd 415C     		pop	r12	#
 12767              		.cfi_def_cfa_offset 32
 12768 47df 415D     		pop	r13	#
 12769              		.cfi_def_cfa_offset 24
 12770 47e1 415E     		pop	r14	#
 12771              		.cfi_def_cfa_offset 16
 12772 47e3 415F     		pop	r15	#
 12773              		.cfi_def_cfa_offset 8
 12774              	.LVL750:
1079:sieve_extend.c **** 
 12775              		.loc 1 1079 1 view .LVU4404
 12776 47e5 C3       		ret	
 12777              	.LVL751:
 12778              		.p2align 4,,7
 12779 47e6 6690     		.p2align 3
 12780              	.L1240:
 12781              		.cfi_restore_state
 12782              	.LBB630:
 12783              	.LBB626:
 12784              	.LBB616:
 992:sieve_extend.c ****         step  = prime * 2 + 1;
 12785              		.loc 1 992 11 is_stmt 1 view .LVU4405
 12786 47e8 4839F5   		cmp	rbp, rsi	# block_stop, index
 12787 47eb 72C7     		jb	.L1224	#,
 12788              	.LBB598:
 12789              	.LBB591:
 12790              	.LBB588:
 12791              	.LBB578:
 12792              	.LBB579:
 12793              	# sieve_extend.c:175:    const counter_t range_stop_word = wordindex(range_stop);
 175:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 12794              		.loc 1 175 20 is_stmt 0 view .LVU4406
 12795 47ed 4889E8   		mov	rax, rbp	# range_stop_word, block_stop
 12796              	# sieve_extend.c:201:       *index_ptr |= (mask & chopmask(range_stop));
 201:sieve_extend.c ****    }
 12797              		.loc 1 201 29 view .LVU4407
 12798 47f0 89EA     		mov	edx, ebp	# tmp546, block_stop
 12799              	# sieve_extend.c:175:    const counter_t range_stop_word = wordindex(range_stop);
 175:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 12800              		.loc 1 175 20 view .LVU4408
 12801 47f2 48C1E806 		shr	rax, 6	# range_stop_word,
GAS LISTING /tmp/ccjg94QQ.s 			page 347


 12802              	# sieve_extend.c:201:       *index_ptr |= (mask & chopmask(range_stop));
 201:sieve_extend.c ****    }
 12803              		.loc 1 201 29 view .LVU4409
 12804 47f6 F7D2     		not	edx	# tmp546
 12805 47f8 48C7C7FF 		mov	rdi, -1	# tmp1175,
 12805      FFFFFF
 12806              	# sieve_extend.c:194:    const register bitword_t* __restrict range_stop_ptr = &bitarray[(range_sto
 194:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 12807              		.loc 1 194 41 view .LVU4410
 12808 47ff 4C8D0CC3 		lea	r9, [rbx+rax*8]	# range_stop_ptr,
 12809              	# sieve_extend.c:175:    const counter_t range_stop_word = wordindex(range_stop);
 175:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 12810              		.loc 1 175 20 view .LVU4411
 12811 4803 48894424 		mov	QWORD PTR 24[rsp], rax	# %sfp, range_stop_word
 12811      18
 12812              	# sieve_extend.c:201:       *index_ptr |= (mask & chopmask(range_stop));
 201:sieve_extend.c ****    }
 12813              		.loc 1 201 29 view .LVU4412
 12814 4808 C462EBF7 		shrx	r14, rdi, rdx	# _459, tmp1175, tmp546
 12814      F7
 12815 480d 4C897424 		mov	QWORD PTR 16[rsp], r14	# %sfp, _459
 12815      10
 12816 4812 4C8D5901 		lea	r11, 1[rcx]	# _350,
 12817              	.LVL752:
 12818 4816 662E0F1F 		.p2align 4
 12818      84000000 
 12818      0000
 12819              		.p2align 3
 12820              	.L913:
 201:sieve_extend.c ****    }
 12821              		.loc 1 201 29 view .LVU4413
 12822              	.LBE579:
 12823              	.LBE578:
 12824              	.LBE588:
 12825              	.LBE591:
 12826              	.LBE598:
 993:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 12827              		.loc 1 993 9 is_stmt 1 view .LVU4414
 12828              	# sieve_extend.c:994:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 994:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 12829              		.loc 1 994 12 is_stmt 0 view .LVU4415
 12830 4820 4D39FB   		cmp	r11, r15	# _350, block_start
 12831              	# sieve_extend.c:993:         step  = prime * 2 + 1;
 993:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 12832              		.loc 1 993 15 view .LVU4416
 12833 4823 4C8D5409 		lea	r10, 1[rcx+rcx]	# step,
 12833      01
 12834              	.LVL753:
 994:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 12835              		.loc 1 994 9 is_stmt 1 view .LVU4417
 12836              	# sieve_extend.c:994:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 994:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 12837              		.loc 1 994 12 is_stmt 0 view .LVU4418
 12838 4828 7710     		ja	.L899	#,
 994:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 12839              		.loc 1 994 47 is_stmt 1 view .LVU4419
 12840              	# sieve_extend.c:994:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
GAS LISTING /tmp/ccjg94QQ.s 			page 348


 994:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 12841              		.loc 1 994 67 is_stmt 0 view .LVU4420
 12842 482a 4A8D0439 		lea	rax, [rcx+r15]	# _332,
 12843              	# sieve_extend.c:994:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 994:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 12844              		.loc 1 994 108 view .LVU4421
 12845 482e 31D2     		xor	edx, edx	# tmp552
 12846              	# sieve_extend.c:994:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 994:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 12847              		.loc 1 994 75 view .LVU4422
 12848 4830 488D3408 		lea	rsi, [rax+rcx]	# tmp550,
 12849              	.LVL754:
 12850              	# sieve_extend.c:994:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 994:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 12851              		.loc 1 994 108 view .LVU4423
 12852 4834 49F7F2   		div	r10	# step
 12853              	.LVL755:
 12854              	# sieve_extend.c:994:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 994:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 12855              		.loc 1 994 53 view .LVU4424
 12856 4837 4829D6   		sub	rsi, rdx	# index, tmp552
 12857              	.LVL756:
 12858              	.L899:
 995:sieve_extend.c ****         setBitsTrue_largeRange(bitarray, start, step, block_stop);
 12859              		.loc 1 995 9 is_stmt 1 view .LVU4425
 12860              	# sieve_extend.c:995:         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 995:sieve_extend.c ****         setBitsTrue_largeRange(bitarray, start, step, block_stop);
 12861              		.loc 1 995 12 is_stmt 0 view .LVU4426
 12862 483a 4D89D6   		mov	r14, r10	# tmp554, step
 12863 483d 49C1E606 		sal	r14, 6	# tmp554,
 12864 4841 4901F6   		add	r14, rsi	# _338, index
 12865 4844 4C39F5   		cmp	rbp, r14	# block_stop, _338
 12866 4847 0F828902 		jb	.L1225	#,
 12866      0000
 12867              	.LVL757:
 12868              	.LBB599:
 12869              	.LBB592:
 12870              	.LBB589:
 418:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 12871              		.loc 1 418 50 is_stmt 1 view .LVU4427
 12872              	# sieve_extend.c:418:     for (register counter_t index = range_start; index < range_stop_unique; i
 418:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 12873              		.loc 1 418 5 is_stmt 0 view .LVU4428
 12874 484d 4C39F6   		cmp	rsi, r14	# index, _338
 12875 4850 0F83CF01 		jnb	.L911	#,
 12875      0000
 12876              	.LBB584:
 12877              	.LBB580:
 12878              	# sieve_extend.c:177:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 177:sieve_extend.c **** 
 12879              		.loc 1 177 133 view .LVU4429
 12880 4856 488B4C24 		mov	rcx, QWORD PTR 24[rsp]	# range_stop_word, %sfp
 12880      18
 12881              	# sieve_extend.c:177:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 177:sieve_extend.c **** 
 12882              		.loc 1 177 110 view .LVU4430
 12883 485b 4F8D0492 		lea	r8, [r10+r10*4]	# tmp564,
GAS LISTING /tmp/ccjg94QQ.s 			page 349


 12884 485f 4C89D7   		mov	rdi, r10	# _978, step
 12885              	# sieve_extend.c:183:        index_ptr+=step;
 183:sieve_extend.c ****        *index_ptr |= mask;
 12886              		.loc 1 183 17 view .LVU4431
 12887 4862 4A8D14D5 		lea	rdx, 0[0+r10*8]	# _427,
 12887      00000000 
 12888              	# sieve_extend.c:177:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 177:sieve_extend.c **** 
 12889              		.loc 1 177 133 view .LVU4432
 12890 486a 4989CC   		mov	r12, rcx	# tmp566, range_stop_word
 12891 486d 4D29C4   		sub	r12, r8	# tmp566, tmp564
 12892              	# sieve_extend.c:177:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 177:sieve_extend.c **** 
 12893              		.loc 1 177 53 view .LVU4433
 12894 4870 4C39C1   		cmp	rcx, r8	# range_stop_word, tmp564
 12895 4873 4E8D24E3 		lea	r12, [rbx+r12*8]	# tmp568,
 12896 4877 4C0F46E3 		cmovbe	r12, rbx	# _30,, fast_loop_ptr
 12897 487b 48C1E704 		sal	rdi, 4	# _978,
 12898 487f 49C1E003 		sal	r8, 3	# tmp572,
 12899 4883 48897C24 		mov	QWORD PTR 8[rsp], rdi	# %sfp, _978
 12899      08
 12900 4888 0F1F8400 		.p2align 4
 12900      00000000 
 12901              		.p2align 3
 12902              	.L910:
 177:sieve_extend.c **** 
 12903              		.loc 1 177 53 view .LVU4434
 12904              	.LBE580:
 12905              	.LBE584:
 419:sieve_extend.c ****     }
 12906              		.loc 1 419 9 is_stmt 1 view .LVU4435
 12907 4890 4889F0   		mov	rax, rsi	# tmp575, index
 12908 4893 C4C2C9F7 		shlx	rcx, r13, rsi	# _412, tmp618, index
 12908      CD
 12909              	.LVL758:
 12910              	.LBB585:
 12911              	.LBI578:
 147:sieve_extend.c **** //#if __APPLE__
 12912              		.loc 1 147 20 view .LVU4436
 12913              	.LBB581:
 175:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 12914              		.loc 1 175 4 view .LVU4437
 176:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 12915              		.loc 1 176 4 view .LVU4438
 12916              	.LBE581:
 12917              	.LBE585:
 12918              	# sieve_extend.c:419:         applyMask(bitarray, step, range_stop, markmask(index), wordindex(inde
 419:sieve_extend.c ****     }
 12919              		.loc 1 419 9 is_stmt 0 view .LVU4439
 12920 4898 48C1E806 		shr	rax, 6	# tmp575,
 12921              	.LBB586:
 12922              	.LBB582:
 12923              	# sieve_extend.c:176:    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(
 176:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 12924              		.loc 1 176 78 view .LVU4440
 12925 489c 488D04C3 		lea	rax, [rbx+rax*8]	# index_ptr,
 12926              	.LVL759:
GAS LISTING /tmp/ccjg94QQ.s 			page 350


 177:sieve_extend.c **** 
 12927              		.loc 1 177 4 is_stmt 1 view .LVU4441
 181:sieve_extend.c ****        *index_ptr |= mask;
 12928              		.loc 1 181 4 view .LVU4442
 181:sieve_extend.c ****        *index_ptr |= mask;
 12929              		.loc 1 181 10 view .LVU4443
 12930 48a0 4C39E0   		cmp	rax, r12	# index_ptr, fast_loop_ptr
 12931 48a3 0F830701 		jnb	.L905	#,
 12931      0000
 181:sieve_extend.c ****        *index_ptr |= mask;
 12932              		.loc 1 181 10 is_stmt 0 view .LVU4444
 12933 48a9 488B7C24 		mov	rdi, QWORD PTR 8[rsp]	# _978, %sfp
 12933      08
 12934 48ae 4801C7   		add	rdi, rax	# ivtmp.537, index_ptr
 12935              	.L906:
 182:sieve_extend.c ****        index_ptr+=step;
 12936              		.loc 1 182 8 is_stmt 1 view .LVU4445
 12937              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 12938              		.loc 1 182 19 is_stmt 0 view .LVU4446
 12939 48b1 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_407, offset: 0B], _412
 183:sieve_extend.c ****        *index_ptr |= mask;
 12940              		.loc 1 183 8 is_stmt 1 view .LVU4447
 12941              	.LVL760:
 184:sieve_extend.c ****        index_ptr+=step;
 12942              		.loc 1 184 8 view .LVU4448
 12943              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 12944              		.loc 1 184 19 is_stmt 0 view .LVU4449
 12945 48b4 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_407, index: _427, offset: 0B], _412
 185:sieve_extend.c ****        *index_ptr |= mask;
 12946              		.loc 1 185 8 is_stmt 1 view .LVU4450
 12947              	.LVL761:
 186:sieve_extend.c ****        index_ptr+=step;
 12948              		.loc 1 186 8 view .LVU4451
 12949              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 12950              		.loc 1 186 19 is_stmt 0 view .LVU4452
 12951 48b8 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _969, offset: 0B], _412
 187:sieve_extend.c ****        *index_ptr |= mask;
 12952              		.loc 1 187 8 is_stmt 1 view .LVU4453
 12953              	.LVL762:
 188:sieve_extend.c ****        index_ptr+=step;
 12954              		.loc 1 188 8 view .LVU4454
 12955              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 12956              		.loc 1 188 19 is_stmt 0 view .LVU4455
 12957 48bb 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _969, index: _427, offset: 0B], _412
 189:sieve_extend.c ****        *index_ptr |= mask;
 12958              		.loc 1 189 8 is_stmt 1 view .LVU4456
 12959              	.LVL763:
 190:sieve_extend.c ****        index_ptr+=step;
 12960              		.loc 1 190 8 view .LVU4457
 12961 48bf 4C01C7   		add	rdi, r8	# ivtmp.537, tmp572
 12962              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 12963              		.loc 1 190 19 is_stmt 0 view .LVU4458
GAS LISTING /tmp/ccjg94QQ.s 			page 351


 12964 48c2 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_407, index: _427, step: 4, offset: 0B], _412
 191:sieve_extend.c ****    }
 12965              		.loc 1 191 8 is_stmt 1 view .LVU4459
 12966 48c6 4C01C0   		add	rax, r8	# index_ptr, tmp572
 12967              	.LVL764:
 181:sieve_extend.c ****        *index_ptr |= mask;
 12968              		.loc 1 181 10 view .LVU4460
 12969 48c9 4939C4   		cmp	r12, rax	# fast_loop_ptr, index_ptr
 12970 48cc 0F86DE00 		jbe	.L905	#,
 12970      0000
 182:sieve_extend.c ****        index_ptr+=step;
 12971              		.loc 1 182 8 view .LVU4461
 12972              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 12973              		.loc 1 182 19 is_stmt 0 view .LVU4462
 12974 48d2 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_407, offset: 0B], _412
 183:sieve_extend.c ****        *index_ptr |= mask;
 12975              		.loc 1 183 8 is_stmt 1 view .LVU4463
 12976              	.LVL765:
 184:sieve_extend.c ****        index_ptr+=step;
 12977              		.loc 1 184 8 view .LVU4464
 12978              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 12979              		.loc 1 184 19 is_stmt 0 view .LVU4465
 12980 48d5 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_407, index: _427, offset: 0B], _412
 185:sieve_extend.c ****        *index_ptr |= mask;
 12981              		.loc 1 185 8 is_stmt 1 view .LVU4466
 12982              	.LVL766:
 186:sieve_extend.c ****        index_ptr+=step;
 12983              		.loc 1 186 8 view .LVU4467
 12984              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 12985              		.loc 1 186 19 is_stmt 0 view .LVU4468
 12986 48d9 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _969, offset: 0B], _412
 187:sieve_extend.c ****        *index_ptr |= mask;
 12987              		.loc 1 187 8 is_stmt 1 view .LVU4469
 12988              	.LVL767:
 188:sieve_extend.c ****        index_ptr+=step;
 12989              		.loc 1 188 8 view .LVU4470
 12990              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 12991              		.loc 1 188 19 is_stmt 0 view .LVU4471
 12992 48dc 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _969, index: _427, offset: 0B], _412
 189:sieve_extend.c ****        *index_ptr |= mask;
 12993              		.loc 1 189 8 is_stmt 1 view .LVU4472
 12994              	.LVL768:
 190:sieve_extend.c ****        index_ptr+=step;
 12995              		.loc 1 190 8 view .LVU4473
 12996 48e0 4C01C7   		add	rdi, r8	# ivtmp.537, tmp572
 12997              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 12998              		.loc 1 190 19 is_stmt 0 view .LVU4474
 12999 48e3 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_407, index: _427, step: 4, offset: 0B], _412
 191:sieve_extend.c ****    }
 13000              		.loc 1 191 8 is_stmt 1 view .LVU4475
 13001 48e7 4C01C0   		add	rax, r8	# index_ptr, tmp572
 13002              	.LVL769:
GAS LISTING /tmp/ccjg94QQ.s 			page 352


 181:sieve_extend.c ****        *index_ptr |= mask;
 13003              		.loc 1 181 10 view .LVU4476
 13004 48ea 4939C4   		cmp	r12, rax	# fast_loop_ptr, index_ptr
 13005 48ed 0F86BD00 		jbe	.L905	#,
 13005      0000
 182:sieve_extend.c ****        index_ptr+=step;
 13006              		.loc 1 182 8 view .LVU4477
 13007              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 13008              		.loc 1 182 19 is_stmt 0 view .LVU4478
 13009 48f3 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_407, offset: 0B], _412
 183:sieve_extend.c ****        *index_ptr |= mask;
 13010              		.loc 1 183 8 is_stmt 1 view .LVU4479
 13011              	.LVL770:
 184:sieve_extend.c ****        index_ptr+=step;
 13012              		.loc 1 184 8 view .LVU4480
 13013              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 13014              		.loc 1 184 19 is_stmt 0 view .LVU4481
 13015 48f6 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_407, index: _427, offset: 0B], _412
 185:sieve_extend.c ****        *index_ptr |= mask;
 13016              		.loc 1 185 8 is_stmt 1 view .LVU4482
 13017              	.LVL771:
 186:sieve_extend.c ****        index_ptr+=step;
 13018              		.loc 1 186 8 view .LVU4483
 13019              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 13020              		.loc 1 186 19 is_stmt 0 view .LVU4484
 13021 48fa 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _969, offset: 0B], _412
 187:sieve_extend.c ****        *index_ptr |= mask;
 13022              		.loc 1 187 8 is_stmt 1 view .LVU4485
 13023              	.LVL772:
 188:sieve_extend.c ****        index_ptr+=step;
 13024              		.loc 1 188 8 view .LVU4486
 13025              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 13026              		.loc 1 188 19 is_stmt 0 view .LVU4487
 13027 48fd 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _969, index: _427, offset: 0B], _412
 189:sieve_extend.c ****        *index_ptr |= mask;
 13028              		.loc 1 189 8 is_stmt 1 view .LVU4488
 13029              	.LVL773:
 190:sieve_extend.c ****        index_ptr+=step;
 13030              		.loc 1 190 8 view .LVU4489
 13031 4901 4C01C7   		add	rdi, r8	# ivtmp.537, tmp572
 13032              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 13033              		.loc 1 190 19 is_stmt 0 view .LVU4490
 13034 4904 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_407, index: _427, step: 4, offset: 0B], _412
 191:sieve_extend.c ****    }
 13035              		.loc 1 191 8 is_stmt 1 view .LVU4491
 13036 4908 4C01C0   		add	rax, r8	# index_ptr, tmp572
 13037              	.LVL774:
 181:sieve_extend.c ****        *index_ptr |= mask;
 13038              		.loc 1 181 10 view .LVU4492
 13039 490b 4939C4   		cmp	r12, rax	# fast_loop_ptr, index_ptr
 13040 490e 0F869C00 		jbe	.L905	#,
 13040      0000
GAS LISTING /tmp/ccjg94QQ.s 			page 353


 182:sieve_extend.c ****        index_ptr+=step;
 13041              		.loc 1 182 8 view .LVU4493
 13042              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 13043              		.loc 1 182 19 is_stmt 0 view .LVU4494
 13044 4914 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_407, offset: 0B], _412
 183:sieve_extend.c ****        *index_ptr |= mask;
 13045              		.loc 1 183 8 is_stmt 1 view .LVU4495
 13046              	.LVL775:
 184:sieve_extend.c ****        index_ptr+=step;
 13047              		.loc 1 184 8 view .LVU4496
 13048              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 13049              		.loc 1 184 19 is_stmt 0 view .LVU4497
 13050 4917 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_407, index: _427, offset: 0B], _412
 185:sieve_extend.c ****        *index_ptr |= mask;
 13051              		.loc 1 185 8 is_stmt 1 view .LVU4498
 13052              	.LVL776:
 186:sieve_extend.c ****        index_ptr+=step;
 13053              		.loc 1 186 8 view .LVU4499
 13054              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 13055              		.loc 1 186 19 is_stmt 0 view .LVU4500
 13056 491b 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _969, offset: 0B], _412
 187:sieve_extend.c ****        *index_ptr |= mask;
 13057              		.loc 1 187 8 is_stmt 1 view .LVU4501
 13058              	.LVL777:
 188:sieve_extend.c ****        index_ptr+=step;
 13059              		.loc 1 188 8 view .LVU4502
 13060              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 13061              		.loc 1 188 19 is_stmt 0 view .LVU4503
 13062 491e 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _969, index: _427, offset: 0B], _412
 189:sieve_extend.c ****        *index_ptr |= mask;
 13063              		.loc 1 189 8 is_stmt 1 view .LVU4504
 13064              	.LVL778:
 190:sieve_extend.c ****        index_ptr+=step;
 13065              		.loc 1 190 8 view .LVU4505
 13066 4922 4C01C7   		add	rdi, r8	# ivtmp.537, tmp572
 13067              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 13068              		.loc 1 190 19 is_stmt 0 view .LVU4506
 13069 4925 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_407, index: _427, step: 4, offset: 0B], _412
 191:sieve_extend.c ****    }
 13070              		.loc 1 191 8 is_stmt 1 view .LVU4507
 13071 4929 4C01C0   		add	rax, r8	# index_ptr, tmp572
 13072              	.LVL779:
 181:sieve_extend.c ****        *index_ptr |= mask;
 13073              		.loc 1 181 10 view .LVU4508
 13074 492c 4939C4   		cmp	r12, rax	# fast_loop_ptr, index_ptr
 13075 492f 767F     		jbe	.L905	#,
 182:sieve_extend.c ****        index_ptr+=step;
 13076              		.loc 1 182 8 view .LVU4509
 13077              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 13078              		.loc 1 182 19 is_stmt 0 view .LVU4510
 13079 4931 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_407, offset: 0B], _412
GAS LISTING /tmp/ccjg94QQ.s 			page 354


 183:sieve_extend.c ****        *index_ptr |= mask;
 13080              		.loc 1 183 8 is_stmt 1 view .LVU4511
 13081              	.LVL780:
 184:sieve_extend.c ****        index_ptr+=step;
 13082              		.loc 1 184 8 view .LVU4512
 13083              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 13084              		.loc 1 184 19 is_stmt 0 view .LVU4513
 13085 4934 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_407, index: _427, offset: 0B], _412
 185:sieve_extend.c ****        *index_ptr |= mask;
 13086              		.loc 1 185 8 is_stmt 1 view .LVU4514
 13087              	.LVL781:
 186:sieve_extend.c ****        index_ptr+=step;
 13088              		.loc 1 186 8 view .LVU4515
 13089              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 13090              		.loc 1 186 19 is_stmt 0 view .LVU4516
 13091 4938 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _969, offset: 0B], _412
 187:sieve_extend.c ****        *index_ptr |= mask;
 13092              		.loc 1 187 8 is_stmt 1 view .LVU4517
 13093              	.LVL782:
 188:sieve_extend.c ****        index_ptr+=step;
 13094              		.loc 1 188 8 view .LVU4518
 13095              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 13096              		.loc 1 188 19 is_stmt 0 view .LVU4519
 13097 493b 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _969, index: _427, offset: 0B], _412
 189:sieve_extend.c ****        *index_ptr |= mask;
 13098              		.loc 1 189 8 is_stmt 1 view .LVU4520
 13099              	.LVL783:
 190:sieve_extend.c ****        index_ptr+=step;
 13100              		.loc 1 190 8 view .LVU4521
 13101 493f 4C01C7   		add	rdi, r8	# ivtmp.537, tmp572
 13102              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 13103              		.loc 1 190 19 is_stmt 0 view .LVU4522
 13104 4942 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_407, index: _427, step: 4, offset: 0B], _412
 191:sieve_extend.c ****    }
 13105              		.loc 1 191 8 is_stmt 1 view .LVU4523
 13106 4946 4C01C0   		add	rax, r8	# index_ptr, tmp572
 13107              	.LVL784:
 181:sieve_extend.c ****        *index_ptr |= mask;
 13108              		.loc 1 181 10 view .LVU4524
 13109 4949 4939C4   		cmp	r12, rax	# fast_loop_ptr, index_ptr
 13110 494c 7662     		jbe	.L905	#,
 182:sieve_extend.c ****        index_ptr+=step;
 13111              		.loc 1 182 8 view .LVU4525
 13112              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 13113              		.loc 1 182 19 is_stmt 0 view .LVU4526
 13114 494e 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_407, offset: 0B], _412
 183:sieve_extend.c ****        *index_ptr |= mask;
 13115              		.loc 1 183 8 is_stmt 1 view .LVU4527
 13116              	.LVL785:
 184:sieve_extend.c ****        index_ptr+=step;
 13117              		.loc 1 184 8 view .LVU4528
 13118              	# sieve_extend.c:184:        *index_ptr |= mask;
GAS LISTING /tmp/ccjg94QQ.s 			page 355


 184:sieve_extend.c ****        index_ptr+=step;
 13119              		.loc 1 184 19 is_stmt 0 view .LVU4529
 13120 4951 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_407, index: _427, offset: 0B], _412
 185:sieve_extend.c ****        *index_ptr |= mask;
 13121              		.loc 1 185 8 is_stmt 1 view .LVU4530
 13122              	.LVL786:
 186:sieve_extend.c ****        index_ptr+=step;
 13123              		.loc 1 186 8 view .LVU4531
 13124              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 13125              		.loc 1 186 19 is_stmt 0 view .LVU4532
 13126 4955 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _969, offset: 0B], _412
 187:sieve_extend.c ****        *index_ptr |= mask;
 13127              		.loc 1 187 8 is_stmt 1 view .LVU4533
 13128              	.LVL787:
 188:sieve_extend.c ****        index_ptr+=step;
 13129              		.loc 1 188 8 view .LVU4534
 13130              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 13131              		.loc 1 188 19 is_stmt 0 view .LVU4535
 13132 4958 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _969, index: _427, offset: 0B], _412
 189:sieve_extend.c ****        *index_ptr |= mask;
 13133              		.loc 1 189 8 is_stmt 1 view .LVU4536
 13134              	.LVL788:
 190:sieve_extend.c ****        index_ptr+=step;
 13135              		.loc 1 190 8 view .LVU4537
 13136 495c 4C01C7   		add	rdi, r8	# ivtmp.537, tmp572
 13137              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 13138              		.loc 1 190 19 is_stmt 0 view .LVU4538
 13139 495f 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_407, index: _427, step: 4, offset: 0B], _412
 191:sieve_extend.c ****    }
 13140              		.loc 1 191 8 is_stmt 1 view .LVU4539
 13141 4963 4C01C0   		add	rax, r8	# index_ptr, tmp572
 13142              	.LVL789:
 181:sieve_extend.c ****        *index_ptr |= mask;
 13143              		.loc 1 181 10 view .LVU4540
 13144 4966 4939C4   		cmp	r12, rax	# fast_loop_ptr, index_ptr
 13145 4969 7645     		jbe	.L905	#,
 182:sieve_extend.c ****        index_ptr+=step;
 13146              		.loc 1 182 8 view .LVU4541
 13147              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 13148              		.loc 1 182 19 is_stmt 0 view .LVU4542
 13149 496b 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_407, offset: 0B], _412
 183:sieve_extend.c ****        *index_ptr |= mask;
 13150              		.loc 1 183 8 is_stmt 1 view .LVU4543
 13151              	.LVL790:
 184:sieve_extend.c ****        index_ptr+=step;
 13152              		.loc 1 184 8 view .LVU4544
 13153              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 13154              		.loc 1 184 19 is_stmt 0 view .LVU4545
 13155 496e 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_407, index: _427, offset: 0B], _412
 185:sieve_extend.c ****        *index_ptr |= mask;
 13156              		.loc 1 185 8 is_stmt 1 view .LVU4546
 13157              	.LVL791:
GAS LISTING /tmp/ccjg94QQ.s 			page 356


 186:sieve_extend.c ****        index_ptr+=step;
 13158              		.loc 1 186 8 view .LVU4547
 13159              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 13160              		.loc 1 186 19 is_stmt 0 view .LVU4548
 13161 4972 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _969, offset: 0B], _412
 187:sieve_extend.c ****        *index_ptr |= mask;
 13162              		.loc 1 187 8 is_stmt 1 view .LVU4549
 13163              	.LVL792:
 188:sieve_extend.c ****        index_ptr+=step;
 13164              		.loc 1 188 8 view .LVU4550
 13165              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 13166              		.loc 1 188 19 is_stmt 0 view .LVU4551
 13167 4975 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _969, index: _427, offset: 0B], _412
 189:sieve_extend.c ****        *index_ptr |= mask;
 13168              		.loc 1 189 8 is_stmt 1 view .LVU4552
 13169              	.LVL793:
 190:sieve_extend.c ****        index_ptr+=step;
 13170              		.loc 1 190 8 view .LVU4553
 13171 4979 4C01C7   		add	rdi, r8	# ivtmp.537, tmp572
 13172              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 13173              		.loc 1 190 19 is_stmt 0 view .LVU4554
 13174 497c 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_407, index: _427, step: 4, offset: 0B], _412
 191:sieve_extend.c ****    }
 13175              		.loc 1 191 8 is_stmt 1 view .LVU4555
 13176 4980 4C01C0   		add	rax, r8	# index_ptr, tmp572
 13177              	.LVL794:
 181:sieve_extend.c ****        *index_ptr |= mask;
 13178              		.loc 1 181 10 view .LVU4556
 13179 4983 4939C4   		cmp	r12, rax	# fast_loop_ptr, index_ptr
 13180 4986 7628     		jbe	.L905	#,
 182:sieve_extend.c ****        index_ptr+=step;
 13181              		.loc 1 182 8 view .LVU4557
 13182              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 13183              		.loc 1 182 19 is_stmt 0 view .LVU4558
 13184 4988 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_407, offset: 0B], _412
 183:sieve_extend.c ****        *index_ptr |= mask;
 13185              		.loc 1 183 8 is_stmt 1 view .LVU4559
 13186              	.LVL795:
 184:sieve_extend.c ****        index_ptr+=step;
 13187              		.loc 1 184 8 view .LVU4560
 13188              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 13189              		.loc 1 184 19 is_stmt 0 view .LVU4561
 13190 498b 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_407, index: _427, offset: 0B], _412
 185:sieve_extend.c ****        *index_ptr |= mask;
 13191              		.loc 1 185 8 is_stmt 1 view .LVU4562
 13192              	.LVL796:
 186:sieve_extend.c ****        index_ptr+=step;
 13193              		.loc 1 186 8 view .LVU4563
 13194              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 13195              		.loc 1 186 19 is_stmt 0 view .LVU4564
 13196 498f 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _969, offset: 0B], _412
GAS LISTING /tmp/ccjg94QQ.s 			page 357


 187:sieve_extend.c ****        *index_ptr |= mask;
 13197              		.loc 1 187 8 is_stmt 1 view .LVU4565
 13198              	.LVL797:
 188:sieve_extend.c ****        index_ptr+=step;
 13199              		.loc 1 188 8 view .LVU4566
 13200              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 13201              		.loc 1 188 19 is_stmt 0 view .LVU4567
 13202 4992 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _969, index: _427, offset: 0B], _412
 189:sieve_extend.c ****        *index_ptr |= mask;
 13203              		.loc 1 189 8 is_stmt 1 view .LVU4568
 13204              	.LVL798:
 190:sieve_extend.c ****        index_ptr+=step;
 13205              		.loc 1 190 8 view .LVU4569
 13206 4996 4C01C7   		add	rdi, r8	# ivtmp.537, tmp572
 13207              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 13208              		.loc 1 190 19 is_stmt 0 view .LVU4570
 13209 4999 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_407, index: _427, step: 4, offset: 0B], _412
 191:sieve_extend.c ****    }
 13210              		.loc 1 191 8 is_stmt 1 view .LVU4571
 13211 499d 4C01C0   		add	rax, r8	# index_ptr, tmp572
 13212              	.LVL799:
 181:sieve_extend.c ****        *index_ptr |= mask;
 13213              		.loc 1 181 10 view .LVU4572
 13214 49a0 4939C4   		cmp	r12, rax	# fast_loop_ptr, index_ptr
 13215 49a3 0F8708FF 		ja	.L906	#,
 13215      FFFF
 13216 49a9 0F1F8000 		.p2align 4
 13216      000000
 13217              		.p2align 3
 13218              	.L905:
 194:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 13219              		.loc 1 194 4 view .LVU4573
 195:sieve_extend.c ****        *index_ptr |= mask;
 13220              		.loc 1 195 4 view .LVU4574
 195:sieve_extend.c ****        *index_ptr |= mask;
 13221              		.loc 1 195 10 view .LVU4575
 13222 49b0 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 13223 49b3 765B     		jbe	.L907	#,
 13224              	.L908:
 196:sieve_extend.c ****        index_ptr+=step;
 13225              		.loc 1 196 8 view .LVU4576
 13226              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 13227              		.loc 1 196 19 is_stmt 0 view .LVU4577
 13228 49b5 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_301, offset: 0B], _412
 197:sieve_extend.c ****    }
 13229              		.loc 1 197 8 is_stmt 1 view .LVU4578
 13230              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 13231              		.loc 1 197 17 is_stmt 0 view .LVU4579
 13232 49b8 4801D0   		add	rax, rdx	# index_ptr, _427
 13233              	.LVL800:
 195:sieve_extend.c ****        *index_ptr |= mask;
 13234              		.loc 1 195 10 is_stmt 1 view .LVU4580
 13235 49bb 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
GAS LISTING /tmp/ccjg94QQ.s 			page 358


 13236 49be 7650     		jbe	.L907	#,
 196:sieve_extend.c ****        index_ptr+=step;
 13237              		.loc 1 196 8 view .LVU4581
 13238              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 13239              		.loc 1 196 19 is_stmt 0 view .LVU4582
 13240 49c0 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_301, offset: 0B], _412
 197:sieve_extend.c ****    }
 13241              		.loc 1 197 8 is_stmt 1 view .LVU4583
 13242              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 13243              		.loc 1 197 17 is_stmt 0 view .LVU4584
 13244 49c3 4801D0   		add	rax, rdx	# index_ptr, _427
 13245              	.LVL801:
 195:sieve_extend.c ****        *index_ptr |= mask;
 13246              		.loc 1 195 10 is_stmt 1 view .LVU4585
 13247 49c6 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 13248 49c9 7645     		jbe	.L907	#,
 196:sieve_extend.c ****        index_ptr+=step;
 13249              		.loc 1 196 8 view .LVU4586
 13250              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 13251              		.loc 1 196 19 is_stmt 0 view .LVU4587
 13252 49cb 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_301, offset: 0B], _412
 197:sieve_extend.c ****    }
 13253              		.loc 1 197 8 is_stmt 1 view .LVU4588
 13254              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 13255              		.loc 1 197 17 is_stmt 0 view .LVU4589
 13256 49ce 4801D0   		add	rax, rdx	# index_ptr, _427
 13257              	.LVL802:
 195:sieve_extend.c ****        *index_ptr |= mask;
 13258              		.loc 1 195 10 is_stmt 1 view .LVU4590
 13259 49d1 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 13260 49d4 763A     		jbe	.L907	#,
 196:sieve_extend.c ****        index_ptr+=step;
 13261              		.loc 1 196 8 view .LVU4591
 13262              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 13263              		.loc 1 196 19 is_stmt 0 view .LVU4592
 13264 49d6 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_301, offset: 0B], _412
 197:sieve_extend.c ****    }
 13265              		.loc 1 197 8 is_stmt 1 view .LVU4593
 13266              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 13267              		.loc 1 197 17 is_stmt 0 view .LVU4594
 13268 49d9 4801D0   		add	rax, rdx	# index_ptr, _427
 13269              	.LVL803:
 195:sieve_extend.c ****        *index_ptr |= mask;
 13270              		.loc 1 195 10 is_stmt 1 view .LVU4595
 13271 49dc 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 13272 49df 762F     		jbe	.L907	#,
 196:sieve_extend.c ****        index_ptr+=step;
 13273              		.loc 1 196 8 view .LVU4596
 13274              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 13275              		.loc 1 196 19 is_stmt 0 view .LVU4597
GAS LISTING /tmp/ccjg94QQ.s 			page 359


 13276 49e1 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_301, offset: 0B], _412
 197:sieve_extend.c ****    }
 13277              		.loc 1 197 8 is_stmt 1 view .LVU4598
 13278              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 13279              		.loc 1 197 17 is_stmt 0 view .LVU4599
 13280 49e4 4801D0   		add	rax, rdx	# index_ptr, _427
 13281              	.LVL804:
 195:sieve_extend.c ****        *index_ptr |= mask;
 13282              		.loc 1 195 10 is_stmt 1 view .LVU4600
 13283 49e7 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 13284 49ea 7624     		jbe	.L907	#,
 196:sieve_extend.c ****        index_ptr+=step;
 13285              		.loc 1 196 8 view .LVU4601
 13286              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 13287              		.loc 1 196 19 is_stmt 0 view .LVU4602
 13288 49ec 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_301, offset: 0B], _412
 197:sieve_extend.c ****    }
 13289              		.loc 1 197 8 is_stmt 1 view .LVU4603
 13290              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 13291              		.loc 1 197 17 is_stmt 0 view .LVU4604
 13292 49ef 4801D0   		add	rax, rdx	# index_ptr, _427
 13293              	.LVL805:
 195:sieve_extend.c ****        *index_ptr |= mask;
 13294              		.loc 1 195 10 is_stmt 1 view .LVU4605
 13295 49f2 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 13296 49f5 7619     		jbe	.L907	#,
 196:sieve_extend.c ****        index_ptr+=step;
 13297              		.loc 1 196 8 view .LVU4606
 13298              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 13299              		.loc 1 196 19 is_stmt 0 view .LVU4607
 13300 49f7 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_301, offset: 0B], _412
 197:sieve_extend.c ****    }
 13301              		.loc 1 197 8 is_stmt 1 view .LVU4608
 13302              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 13303              		.loc 1 197 17 is_stmt 0 view .LVU4609
 13304 49fa 4801D0   		add	rax, rdx	# index_ptr, _427
 13305              	.LVL806:
 195:sieve_extend.c ****        *index_ptr |= mask;
 13306              		.loc 1 195 10 is_stmt 1 view .LVU4610
 13307 49fd 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 13308 4a00 760E     		jbe	.L907	#,
 196:sieve_extend.c ****        index_ptr+=step;
 13309              		.loc 1 196 8 view .LVU4611
 13310              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 13311              		.loc 1 196 19 is_stmt 0 view .LVU4612
 13312 4a02 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_301, offset: 0B], _412
 197:sieve_extend.c ****    }
 13313              		.loc 1 197 8 is_stmt 1 view .LVU4613
 13314              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 13315              		.loc 1 197 17 is_stmt 0 view .LVU4614
GAS LISTING /tmp/ccjg94QQ.s 			page 360


 13316 4a05 4801D0   		add	rax, rdx	# index_ptr, _427
 13317              	.LVL807:
 195:sieve_extend.c ****        *index_ptr |= mask;
 13318              		.loc 1 195 10 is_stmt 1 view .LVU4615
 13319 4a08 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 13320 4a0b 77A8     		ja	.L908	#,
 13321 4a0d 0F1F00   		.p2align 4
 13322              		.p2align 3
 13323              	.L907:
 200:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 13324              		.loc 1 200 4 view .LVU4616
 13325              	# sieve_extend.c:200:    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range
 200:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 13326              		.loc 1 200 7 is_stmt 0 view .LVU4617
 13327 4a10 4C39C8   		cmp	rax, r9	# index_ptr, range_stop_ptr
 13328 4a13 0F84CF01 		je	.L1241	#,
 13328      0000
 13329              	.LVL808:
 13330              	.L909:
 200:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 13331              		.loc 1 200 7 view .LVU4618
 13332              	.LBE582:
 13333              	.LBE586:
 418:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 13334              		.loc 1 418 77 is_stmt 1 view .LVU4619
 13335              	# sieve_extend.c:418:     for (register counter_t index = range_start; index < range_stop_unique; i
 418:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 13336              		.loc 1 418 83 is_stmt 0 view .LVU4620
 13337 4a19 4C01D6   		add	rsi, r10	# index, step
 13338              	.LVL809:
 418:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 13339              		.loc 1 418 50 is_stmt 1 view .LVU4621
 13340              	# sieve_extend.c:418:     for (register counter_t index = range_start; index < range_stop_unique; i
 418:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 13341              		.loc 1 418 5 is_stmt 0 view .LVU4622
 13342 4a1c 4939F6   		cmp	r14, rsi	# _338, index
 13343 4a1f 0F876BFE 		ja	.L910	#,
 13343      FFFF
 13344              	.L911:
 13345              	.LVL810:
 418:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 13346              		.loc 1 418 5 view .LVU4623
 13347              	.LBE589:
 13348              	.LBE592:
 13349              	.LBE599:
 997:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 13350              		.loc 1 997 9 is_stmt 1 view .LVU4624
 13351              	.LBB600:
 13352              	.LBI600:
 128:sieve_extend.c ****     // return searchBitFalse(bitarray, index);
 13353              		.loc 1 128 25 view .LVU4625
 13354              	.LBB601:
 131:sieve_extend.c ****    bitshift_t index_bit  = bitindex_calc(index);
 13355              		.loc 1 131 4 view .LVU4626
 132:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 13356              		.loc 1 132 4 view .LVU4627
 13357              	# sieve_extend.c:131:    register counter_t index_word = wordindex(index);
GAS LISTING /tmp/ccjg94QQ.s 			page 361


 131:sieve_extend.c ****    bitshift_t index_bit  = bitindex_calc(index);
 13358              		.loc 1 131 23 is_stmt 0 view .LVU4628
 13359 4a25 4D89DE   		mov	r14, r11	# index_word, _350
 13360              	# sieve_extend.c:132:    bitshift_t index_bit  = bitindex_calc(index);
 132:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 13361              		.loc 1 132 15 view .LVU4629
 13362 4a28 4D89DA   		mov	r10, r11	# index_bit, _350
 13363              	.LVL811:
 13364              	# sieve_extend.c:131:    register counter_t index_word = wordindex(index);
 131:sieve_extend.c ****    bitshift_t index_bit  = bitindex_calc(index);
 13365              		.loc 1 131 23 view .LVU4630
 13366 4a2b 49C1EE06 		shr	r14, 6	# index_word,
 13367              	# sieve_extend.c:132:    bitshift_t index_bit  = bitindex_calc(index);
 132:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 13368              		.loc 1 132 15 view .LVU4631
 13369 4a2f 4183E23F 		and	r10d, 63	# index_bit,
 13370              	.LVL812:
 133:sieve_extend.c ****    index += distance;
 13371              		.loc 1 133 4 is_stmt 1 view .LVU4632
 13372              	# sieve_extend.c:133:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 133:sieve_extend.c ****    index += distance;
 13373              		.loc 1 133 89 is_stmt 0 view .LVU4633
 13374 4a33 4E8B04F3 		mov	r8, QWORD PTR [rbx+r14*8]	# *_383, *_383
 13375 4a37 C4C2ABF7 		shrx	rdx, r8, r10	# tmp557, *_383, index_bit
 13375      D0
 13376              	# sieve_extend.c:133:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 133:sieve_extend.c ****    index += distance;
 13377              		.loc 1 133 66 view .LVU4634
 13378 4a3c 48F7D2   		not	rdx	# tmp559
 13379              	# sieve_extend.c:133:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 133:sieve_extend.c ****    index += distance;
 13380              		.loc 1 133 76 view .LVU4635
 13381 4a3f 4A8D34F5 		lea	rsi, 0[0+r14*8]	# _382,
 13381      00000000 
 13382              	.LVL813:
 13383              	# sieve_extend.c:133:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 133:sieve_extend.c ****    index += distance;
 13384              		.loc 1 133 25 view .LVU4636
 13385 4a47 F34C0FBC 		tzcnt	r12, rdx	# distance, tmp559
 13385      E2
 13386              	.LVL814:
 134:sieve_extend.c ****    distance += index_bit;
 13387              		.loc 1 134 4 is_stmt 1 view .LVU4637
 13388              	# sieve_extend.c:134:    index += distance;
 134:sieve_extend.c ****    distance += index_bit;
 13389              		.loc 1 134 10 is_stmt 0 view .LVU4638
 13390 4a4c 4B8D0C23 		lea	rcx, [r11+r12]	# prime,
 13391              	.LVL815:
 135:sieve_extend.c **** 
 13392              		.loc 1 135 4 is_stmt 1 view .LVU4639
 137:sieve_extend.c ****        index_word++;
 13393              		.loc 1 137 4 view .LVU4640
 137:sieve_extend.c ****        index_word++;
 13394              		.loc 1 137 10 view .LVU4641
 13395              	# sieve_extend.c:135:    distance += index_bit;
 135:sieve_extend.c **** 
 13396              		.loc 1 135 13 is_stmt 0 view .LVU4642
GAS LISTING /tmp/ccjg94QQ.s 			page 362


 13397 4a50 4D01D4   		add	r12, r10	# distance, index_bit
 13398              	.LVL816:
 13399              	# sieve_extend.c:137:    while unlikely(distance == WORD_SIZE_bitshift) { // to prevent a bug from 
 137:sieve_extend.c ****        index_word++;
 13400              		.loc 1 137 10 view .LVU4643
 13401 4a53 4983FC40 		cmp	r12, 64	# distance,
 13402 4a57 0F84CB01 		je	.L1242	#,
 13402      0000
 13403              	.LVL817:
 13404              	.L1148:
 143:sieve_extend.c **** }
 13405              		.loc 1 143 4 is_stmt 1 view .LVU4644
 143:sieve_extend.c **** }
 13406              		.loc 1 143 4 is_stmt 0 view .LVU4645
 13407              	.LBE601:
 13408              	.LBE600:
 998:sieve_extend.c ****     }
 13409              		.loc 1 998 9 is_stmt 1 view .LVU4646
 13410              	# sieve_extend.c:998:         start = prime * prime * 2 + prime * 2;
 998:sieve_extend.c ****     }
 13411              		.loc 1 998 35 is_stmt 0 view .LVU4647
 13412 4a5d 4C8D5901 		lea	r11, 1[rcx]	# _350,
 13413              	# sieve_extend.c:998:         start = prime * prime * 2 + prime * 2;
 998:sieve_extend.c ****     }
 13414              		.loc 1 998 15 view .LVU4648
 13415 4a61 4C89DE   		mov	rsi, r11	# tmp585, _350
 13416 4a64 480FAFF1 		imul	rsi, rcx	# tmp585, prime
 13417              	.LVL818:
 998:sieve_extend.c ****     }
 13418              		.loc 1 998 15 view .LVU4649
 13419 4a68 4801F6   		add	rsi, rsi	# index
 13420              	.LVL819:
 992:sieve_extend.c ****         step  = prime * 2 + 1;
 13421              		.loc 1 992 11 is_stmt 1 view .LVU4650
 13422 4a6b 4839F5   		cmp	rbp, rsi	# block_stop, index
 13423 4a6e 0F83ACFD 		jnb	.L913	#,
 13423      FFFF
 992:sieve_extend.c ****         step  = prime * 2 + 1;
 13424              		.loc 1 992 11 is_stmt 0 view .LVU4651
 13425 4a74 E93BFDFF 		jmp	.L1224	#
 13425      FF
 13426              	.LVL820:
 13427 4a79 0F1F8000 		.p2align 4,,7
 13427      000000
 13428              		.p2align 3
 13429              	.L914:
 13430              	.LBB603:
 13431              	.LBB604:
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 13432              		.loc 1 343 41 is_stmt 1 view .LVU4652
 13433              	# sieve_extend.c:343:     for (counter_t index = range_start; index <= range_stop; index += step) {
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 13434              		.loc 1 343 5 is_stmt 0 view .LVU4653
 13435 4a80 4839F5   		cmp	rbp, rsi	# block_stop, index
 13436 4a83 7379     		jnb	.L918	#,
 13437 4a85 66662E0F 		.p2align 4
 13437      1F840000 
GAS LISTING /tmp/ccjg94QQ.s 			page 363


 13437      000000
 13438              		.p2align 3
 13439              	.L919:
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 13440              		.loc 1 343 5 view .LVU4654
 13441              	.LBE604:
 13442              	.LBE603:
1006:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 13443              		.loc 1 1006 9 is_stmt 1 view .LVU4655
 13444              	.LVL821:
 13445              	.LBB606:
 13446              	.LBI606:
 128:sieve_extend.c ****     // return searchBitFalse(bitarray, index);
 13447              		.loc 1 128 25 view .LVU4656
 13448              	.LBB607:
 131:sieve_extend.c ****    bitshift_t index_bit  = bitindex_calc(index);
 13449              		.loc 1 131 4 view .LVU4657
 132:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 13450              		.loc 1 132 4 view .LVU4658
 13451              	# sieve_extend.c:131:    register counter_t index_word = wordindex(index);
 131:sieve_extend.c ****    bitshift_t index_bit  = bitindex_calc(index);
 13452              		.loc 1 131 23 is_stmt 0 view .LVU4659
 13453 4a90 4C89D9   		mov	rcx, r11	# index_word, _350
 13454              	# sieve_extend.c:132:    bitshift_t index_bit  = bitindex_calc(index);
 132:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 13455              		.loc 1 132 15 view .LVU4660
 13456 4a93 4D89D9   		mov	r9, r11	# index_bit, _350
 13457              	.LVL822:
 13458              	# sieve_extend.c:131:    register counter_t index_word = wordindex(index);
 131:sieve_extend.c ****    bitshift_t index_bit  = bitindex_calc(index);
 13459              		.loc 1 131 23 view .LVU4661
 13460 4a96 48C1E906 		shr	rcx, 6	# index_word,
 13461              	# sieve_extend.c:132:    bitshift_t index_bit  = bitindex_calc(index);
 132:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 13462              		.loc 1 132 15 view .LVU4662
 13463 4a9a 4183E13F 		and	r9d, 63	# index_bit,
 13464              	.LVL823:
 133:sieve_extend.c ****    index += distance;
 13465              		.loc 1 133 4 is_stmt 1 view .LVU4663
 13466              	# sieve_extend.c:133:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 133:sieve_extend.c ****    index += distance;
 13467              		.loc 1 133 89 is_stmt 0 view .LVU4664
 13468 4a9e 488B3CCB 		mov	rdi, QWORD PTR [rbx+rcx*8]	# *_466, *_466
 13469 4aa2 C462B3F7 		shrx	r10, rdi, r9	# tmp593, *_466, index_bit
 13469      D7
 13470              	# sieve_extend.c:133:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 133:sieve_extend.c ****    index += distance;
 13471              		.loc 1 133 66 view .LVU4665
 13472 4aa7 49F7D2   		not	r10	# tmp595
 13473              	# sieve_extend.c:133:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 133:sieve_extend.c ****    index += distance;
 13474              		.loc 1 133 76 view .LVU4666
 13475 4aaa 488D34CD 		lea	rsi, 0[0+rcx*8]	# _465,
 13475      00000000 
 13476              	# sieve_extend.c:133:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 133:sieve_extend.c ****    index += distance;
 13477              		.loc 1 133 25 view .LVU4667
GAS LISTING /tmp/ccjg94QQ.s 			page 364


 13478 4ab2 F34D0FBC 		tzcnt	r14, r10	# distance, tmp595
 13478      F2
 13479              	.LVL824:
 134:sieve_extend.c ****    distance += index_bit;
 13480              		.loc 1 134 4 is_stmt 1 view .LVU4668
 13481              	# sieve_extend.c:134:    index += distance;
 134:sieve_extend.c ****    distance += index_bit;
 13482              		.loc 1 134 10 is_stmt 0 view .LVU4669
 13483 4ab7 4B8D0C33 		lea	rcx, [r11+r14]	# prime,
 13484              	.LVL825:
 135:sieve_extend.c **** 
 13485              		.loc 1 135 4 is_stmt 1 view .LVU4670
 137:sieve_extend.c ****        index_word++;
 13486              		.loc 1 137 4 view .LVU4671
 137:sieve_extend.c ****        index_word++;
 13487              		.loc 1 137 10 view .LVU4672
 13488              	# sieve_extend.c:135:    distance += index_bit;
 135:sieve_extend.c **** 
 13489              		.loc 1 135 13 is_stmt 0 view .LVU4673
 13490 4abb 4D01CE   		add	r14, r9	# distance, index_bit
 13491              	.LVL826:
 13492              	# sieve_extend.c:137:    while unlikely(distance == WORD_SIZE_bitshift) { // to prevent a bug from 
 137:sieve_extend.c ****        index_word++;
 13493              		.loc 1 137 10 view .LVU4674
 13494 4abe 4983FE40 		cmp	r14, 64	# distance,
 13495 4ac2 0F843001 		je	.L1243	#,
 13495      0000
 143:sieve_extend.c **** }
 13496              		.loc 1 143 4 is_stmt 1 view .LVU4675
 13497              	.LVL827:
 143:sieve_extend.c **** }
 13498              		.loc 1 143 4 is_stmt 0 view .LVU4676
 13499              	.LBE607:
 13500              	.LBE606:
1007:sieve_extend.c ****     }
 13501              		.loc 1 1007 9 is_stmt 1 view .LVU4677
 13502              	# sieve_extend.c:1007:         start = prime * prime * 2 + prime * 2;
1007:sieve_extend.c ****     }
 13503              		.loc 1 1007 35 is_stmt 0 view .LVU4678
 13504 4ac8 4C8D5901 		lea	r11, 1[rcx]	# _350,
 13505              	# sieve_extend.c:1007:         start = prime * prime * 2 + prime * 2;
1007:sieve_extend.c ****     }
 13506              		.loc 1 1007 15 view .LVU4679
 13507 4acc 4C89DE   		mov	rsi, r11	# tmp610, _350
 13508 4acf 480FAFF1 		imul	rsi, rcx	# tmp610, prime
 13509 4ad3 4801F6   		add	rsi, rsi	# index
 13510              	.LVL828:
 13511              	.L1225:
1001:sieve_extend.c ****         step  = prime * 2 + 1;
 13512              		.loc 1 1001 11 is_stmt 1 view .LVU4680
 13513 4ad6 4839F5   		cmp	rbp, rsi	# block_stop, index
 13514 4ad9 0F82D5FC 		jb	.L1224	#,
 13514      FFFF
 13515              	.LVL829:
 13516              	.L904:
1002:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 13517              		.loc 1 1002 9 view .LVU4681
GAS LISTING /tmp/ccjg94QQ.s 			page 365


 13518              	# sieve_extend.c:1003:         if likely(block_start >= (prime + 1)) start = block_start + prime + 
1003:sieve_extend.c ****         if likely(start <= block_stop)
 13519              		.loc 1 1003 12 is_stmt 0 view .LVU4682
 13520 4adf 4D39FB   		cmp	r11, r15	# _350, block_start
 13521              	# sieve_extend.c:1002:         step  = prime * 2 + 1;
1002:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 13522              		.loc 1 1002 15 view .LVU4683
 13523 4ae2 4C8D4C09 		lea	r9, 1[rcx+rcx]	# step,
 13523      01
 13524              	.LVL830:
1003:sieve_extend.c ****         if likely(start <= block_stop)
 13525              		.loc 1 1003 9 is_stmt 1 view .LVU4684
 13526              	# sieve_extend.c:1003:         if likely(block_start >= (prime + 1)) start = block_start + prime + 
1003:sieve_extend.c ****         if likely(start <= block_stop)
 13527              		.loc 1 1003 12 is_stmt 0 view .LVU4685
 13528 4ae7 7797     		ja	.L914	#,
1003:sieve_extend.c ****         if likely(start <= block_stop)
 13529              		.loc 1 1003 47 is_stmt 1 view .LVU4686
 13530              	# sieve_extend.c:1003:         if likely(block_start >= (prime + 1)) start = block_start + prime + 
1003:sieve_extend.c ****         if likely(start <= block_stop)
 13531              		.loc 1 1003 67 is_stmt 0 view .LVU4687
 13532 4ae9 4A8D0439 		lea	rax, [rcx+r15]	# _354,
 13533              	# sieve_extend.c:1003:         if likely(block_start >= (prime + 1)) start = block_start + prime + 
1003:sieve_extend.c ****         if likely(start <= block_stop)
 13534              		.loc 1 1003 108 view .LVU4688
 13535 4aed 31D2     		xor	edx, edx	# tmp589
 13536              	# sieve_extend.c:1003:         if likely(block_start >= (prime + 1)) start = block_start + prime + 
1003:sieve_extend.c ****         if likely(start <= block_stop)
 13537              		.loc 1 1003 75 view .LVU4689
 13538 4aef 488D3408 		lea	rsi, [rax+rcx]	# tmp587,
 13539              	# sieve_extend.c:1003:         if likely(block_start >= (prime + 1)) start = block_start + prime + 
1003:sieve_extend.c ****         if likely(start <= block_stop)
 13540              		.loc 1 1003 108 view .LVU4690
 13541 4af3 49F7F1   		div	r9	# step
 13542              	.LVL831:
 13543              	# sieve_extend.c:1003:         if likely(block_start >= (prime + 1)) start = block_start + prime + 
1003:sieve_extend.c ****         if likely(start <= block_stop)
 13544              		.loc 1 1003 53 view .LVU4691
 13545 4af6 4829D6   		sub	rsi, rdx	# index, tmp589
 13546              	.LVL832:
1004:sieve_extend.c ****             setBitsTrue_largeSteps(bitarray, start, step, block_stop);
 13547              		.loc 1 1004 9 is_stmt 1 view .LVU4692
 13548              	# sieve_extend.c:1004:         if likely(start <= block_stop)
1004:sieve_extend.c ****             setBitsTrue_largeSteps(bitarray, start, step, block_stop);
 13549              		.loc 1 1004 12 is_stmt 0 view .LVU4693
 13550 4af9 4839F5   		cmp	rbp, rsi	# block_stop, index
 13551 4afc 7292     		jb	.L919	#,
 13552              	.LVL833:
 13553              	.L918:
 13554              	.LBB609:
 13555              	.LBB605:
 344:sieve_extend.c ****     }
 13556              		.loc 1 344 9 is_stmt 1 view .LVU4694
 13557              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 13558              		.loc 1 344 36 is_stmt 0 view .LVU4695
 13559 4afe 4889F1   		mov	rcx, rsi	# tmp598, index
GAS LISTING /tmp/ccjg94QQ.s 			page 366


 13560              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 13561              		.loc 1 344 39 view .LVU4696
 13562 4b01 C4C2C9F7 		shlx	rdi, r13, rsi	# tmp601, tmp618, index
 13562      FD
 13563              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 13564              		.loc 1 344 36 view .LVU4697
 13565 4b06 48C1E906 		shr	rcx, 6	# tmp598,
 13566              	# sieve_extend.c:343:     for (counter_t index = range_start; index <= range_stop; index += step) {
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 13567              		.loc 1 343 68 view .LVU4698
 13568 4b0a 4C01CE   		add	rsi, r9	# index, step
 13569              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 13570              		.loc 1 344 36 view .LVU4699
 13571 4b0d 48093CCB 		or	QWORD PTR [rbx+rcx*8], rdi	# *_365, tmp601
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 13572              		.loc 1 343 62 is_stmt 1 view .LVU4700
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 13573              		.loc 1 343 41 view .LVU4701
 13574              	# sieve_extend.c:343:     for (counter_t index = range_start; index <= range_stop; index += step) {
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 13575              		.loc 1 343 5 is_stmt 0 view .LVU4702
 13576 4b11 4839F5   		cmp	rbp, rsi	# block_stop, index
 13577 4b14 0F8276FF 		jb	.L919	#,
 13577      FFFF
 344:sieve_extend.c ****     }
 13578              		.loc 1 344 9 is_stmt 1 view .LVU4703
 13579              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 13580              		.loc 1 344 36 is_stmt 0 view .LVU4704
 13581 4b1a 4989F2   		mov	r10, rsi	# tmp668, index
 13582              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 13583              		.loc 1 344 39 view .LVU4705
 13584 4b1d C442C9F7 		shlx	r14, r13, rsi	# tmp671, tmp618, index
 13584      F5
 13585              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 13586              		.loc 1 344 36 view .LVU4706
 13587 4b22 49C1EA06 		shr	r10, 6	# tmp668,
 13588              	# sieve_extend.c:343:     for (counter_t index = range_start; index <= range_stop; index += step) {
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 13589              		.loc 1 343 68 view .LVU4707
 13590 4b26 4C01CE   		add	rsi, r9	# index, step
 13591              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 13592              		.loc 1 344 36 view .LVU4708
 13593 4b29 4E0934D3 		or	QWORD PTR [rbx+r10*8], r14	# *_365, tmp671
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 13594              		.loc 1 343 62 is_stmt 1 view .LVU4709
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 13595              		.loc 1 343 41 view .LVU4710
 13596              	# sieve_extend.c:343:     for (counter_t index = range_start; index <= range_stop; index += step) {
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 13597              		.loc 1 343 5 is_stmt 0 view .LVU4711
GAS LISTING /tmp/ccjg94QQ.s 			page 367


 13598 4b2d 4839F5   		cmp	rbp, rsi	# block_stop, index
 13599 4b30 0F825AFF 		jb	.L919	#,
 13599      FFFF
 344:sieve_extend.c ****     }
 13600              		.loc 1 344 9 is_stmt 1 view .LVU4712
 13601              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 13602              		.loc 1 344 36 is_stmt 0 view .LVU4713
 13603 4b36 4989F0   		mov	r8, rsi	# tmp673, index
 13604              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 13605              		.loc 1 344 39 view .LVU4714
 13606 4b39 C442C9F7 		shlx	r12, r13, rsi	# tmp676, tmp618, index
 13606      E5
 13607              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 13608              		.loc 1 344 36 view .LVU4715
 13609 4b3e 49C1E806 		shr	r8, 6	# tmp673,
 13610              	# sieve_extend.c:343:     for (counter_t index = range_start; index <= range_stop; index += step) {
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 13611              		.loc 1 343 68 view .LVU4716
 13612 4b42 4C01CE   		add	rsi, r9	# index, step
 13613              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 13614              		.loc 1 344 36 view .LVU4717
 13615 4b45 4E0924C3 		or	QWORD PTR [rbx+r8*8], r12	# *_365, tmp676
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 13616              		.loc 1 343 62 is_stmt 1 view .LVU4718
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 13617              		.loc 1 343 41 view .LVU4719
 13618              	# sieve_extend.c:343:     for (counter_t index = range_start; index <= range_stop; index += step) {
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 13619              		.loc 1 343 5 is_stmt 0 view .LVU4720
 13620 4b49 4839F5   		cmp	rbp, rsi	# block_stop, index
 13621 4b4c 0F823EFF 		jb	.L919	#,
 13621      FFFF
 344:sieve_extend.c ****     }
 13622              		.loc 1 344 9 is_stmt 1 view .LVU4721
 13623              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 13624              		.loc 1 344 36 is_stmt 0 view .LVU4722
 13625 4b52 4889F0   		mov	rax, rsi	# tmp678, index
 13626              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 13627              		.loc 1 344 39 view .LVU4723
 13628 4b55 C4C2C9F7 		shlx	rdx, r13, rsi	# tmp681, tmp618, index
 13628      D5
 13629              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 13630              		.loc 1 344 36 view .LVU4724
 13631 4b5a 48C1E806 		shr	rax, 6	# tmp678,
 13632              	# sieve_extend.c:343:     for (counter_t index = range_start; index <= range_stop; index += step) {
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 13633              		.loc 1 343 68 view .LVU4725
 13634 4b5e 4C01CE   		add	rsi, r9	# index, step
 13635              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
GAS LISTING /tmp/ccjg94QQ.s 			page 368


 13636              		.loc 1 344 36 view .LVU4726
 13637 4b61 480914C3 		or	QWORD PTR [rbx+rax*8], rdx	# *_365, tmp681
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 13638              		.loc 1 343 62 is_stmt 1 view .LVU4727
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 13639              		.loc 1 343 41 view .LVU4728
 13640              	# sieve_extend.c:343:     for (counter_t index = range_start; index <= range_stop; index += step) {
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 13641              		.loc 1 343 5 is_stmt 0 view .LVU4729
 13642 4b65 4839F5   		cmp	rbp, rsi	# block_stop, index
 13643 4b68 0F8222FF 		jb	.L919	#,
 13643      FFFF
 344:sieve_extend.c ****     }
 13644              		.loc 1 344 9 is_stmt 1 view .LVU4730
 13645              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 13646              		.loc 1 344 36 is_stmt 0 view .LVU4731
 13647 4b6e 4889F1   		mov	rcx, rsi	# tmp683, index
 13648              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 13649              		.loc 1 344 39 view .LVU4732
 13650 4b71 C4C2C9F7 		shlx	rdi, r13, rsi	# tmp686, tmp618, index
 13650      FD
 13651              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 13652              		.loc 1 344 36 view .LVU4733
 13653 4b76 48C1E906 		shr	rcx, 6	# tmp683,
 13654              	# sieve_extend.c:343:     for (counter_t index = range_start; index <= range_stop; index += step) {
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 13655              		.loc 1 343 68 view .LVU4734
 13656 4b7a 4C01CE   		add	rsi, r9	# index, step
 13657              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 13658              		.loc 1 344 36 view .LVU4735
 13659 4b7d 48093CCB 		or	QWORD PTR [rbx+rcx*8], rdi	# *_365, tmp686
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 13660              		.loc 1 343 62 is_stmt 1 view .LVU4736
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 13661              		.loc 1 343 41 view .LVU4737
 13662              	# sieve_extend.c:343:     for (counter_t index = range_start; index <= range_stop; index += step) {
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 13663              		.loc 1 343 5 is_stmt 0 view .LVU4738
 13664 4b81 4839F5   		cmp	rbp, rsi	# block_stop, index
 13665 4b84 0F8206FF 		jb	.L919	#,
 13665      FFFF
 344:sieve_extend.c ****     }
 13666              		.loc 1 344 9 is_stmt 1 view .LVU4739
 13667              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 13668              		.loc 1 344 36 is_stmt 0 view .LVU4740
 13669 4b8a 4989F2   		mov	r10, rsi	# tmp688, index
 13670              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 13671              		.loc 1 344 39 view .LVU4741
 13672 4b8d C442C9F7 		shlx	r14, r13, rsi	# tmp691, tmp618, index
 13672      F5
 13673              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
GAS LISTING /tmp/ccjg94QQ.s 			page 369


 344:sieve_extend.c ****     }
 13674              		.loc 1 344 36 view .LVU4742
 13675 4b92 49C1EA06 		shr	r10, 6	# tmp688,
 13676              	# sieve_extend.c:343:     for (counter_t index = range_start; index <= range_stop; index += step) {
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 13677              		.loc 1 343 68 view .LVU4743
 13678 4b96 4C01CE   		add	rsi, r9	# index, step
 13679              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 13680              		.loc 1 344 36 view .LVU4744
 13681 4b99 4E0934D3 		or	QWORD PTR [rbx+r10*8], r14	# *_365, tmp691
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 13682              		.loc 1 343 62 is_stmt 1 view .LVU4745
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 13683              		.loc 1 343 41 view .LVU4746
 13684              	# sieve_extend.c:343:     for (counter_t index = range_start; index <= range_stop; index += step) {
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 13685              		.loc 1 343 5 is_stmt 0 view .LVU4747
 13686 4b9d 4839F5   		cmp	rbp, rsi	# block_stop, index
 13687 4ba0 0F82EAFE 		jb	.L919	#,
 13687      FFFF
 344:sieve_extend.c ****     }
 13688              		.loc 1 344 9 is_stmt 1 view .LVU4748
 13689              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 13690              		.loc 1 344 36 is_stmt 0 view .LVU4749
 13691 4ba6 4989F0   		mov	r8, rsi	# tmp693, index
 13692              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 13693              		.loc 1 344 39 view .LVU4750
 13694 4ba9 C442C9F7 		shlx	r12, r13, rsi	# tmp696, tmp618, index
 13694      E5
 13695              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 13696              		.loc 1 344 36 view .LVU4751
 13697 4bae 49C1E806 		shr	r8, 6	# tmp693,
 13698              	# sieve_extend.c:343:     for (counter_t index = range_start; index <= range_stop; index += step) {
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 13699              		.loc 1 343 68 view .LVU4752
 13700 4bb2 4C01CE   		add	rsi, r9	# index, step
 13701              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 13702              		.loc 1 344 36 view .LVU4753
 13703 4bb5 4E0924C3 		or	QWORD PTR [rbx+r8*8], r12	# *_365, tmp696
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 13704              		.loc 1 343 62 is_stmt 1 view .LVU4754
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 13705              		.loc 1 343 41 view .LVU4755
 13706              	# sieve_extend.c:343:     for (counter_t index = range_start; index <= range_stop; index += step) {
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 13707              		.loc 1 343 5 is_stmt 0 view .LVU4756
 13708 4bb9 4839F5   		cmp	rbp, rsi	# block_stop, index
 13709 4bbc 0F82CEFE 		jb	.L919	#,
 13709      FFFF
 344:sieve_extend.c ****     }
 13710              		.loc 1 344 9 is_stmt 1 view .LVU4757
 13711              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
GAS LISTING /tmp/ccjg94QQ.s 			page 370


 344:sieve_extend.c ****     }
 13712              		.loc 1 344 36 is_stmt 0 view .LVU4758
 13713 4bc2 4889F0   		mov	rax, rsi	# tmp698, index
 13714              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 13715              		.loc 1 344 39 view .LVU4759
 13716 4bc5 C4C2C9F7 		shlx	rdx, r13, rsi	# tmp701, tmp618, index
 13716      D5
 13717              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 13718              		.loc 1 344 36 view .LVU4760
 13719 4bca 48C1E806 		shr	rax, 6	# tmp698,
 13720              	# sieve_extend.c:343:     for (counter_t index = range_start; index <= range_stop; index += step) {
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 13721              		.loc 1 343 68 view .LVU4761
 13722 4bce 4C01CE   		add	rsi, r9	# index, step
 13723              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 13724              		.loc 1 344 36 view .LVU4762
 13725 4bd1 480914C3 		or	QWORD PTR [rbx+rax*8], rdx	# *_365, tmp701
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 13726              		.loc 1 343 62 is_stmt 1 view .LVU4763
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 13727              		.loc 1 343 41 view .LVU4764
 13728              	# sieve_extend.c:343:     for (counter_t index = range_start; index <= range_stop; index += step) {
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 13729              		.loc 1 343 5 is_stmt 0 view .LVU4765
 13730 4bd5 4839F5   		cmp	rbp, rsi	# block_stop, index
 13731 4bd8 0F8320FF 		jnb	.L918	#,
 13731      FFFF
 13732 4bde E9ADFEFF 		jmp	.L919	#
 13732      FF
 13733              	.LVL834:
 13734              		.p2align 4,,7
 13735 4be3 0F1F4400 		.p2align 3
 13735      00
 13736              	.L1241:
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 13737              		.loc 1 343 5 view .LVU4766
 13738              	.LBE605:
 13739              	.LBE609:
 13740              	.LBB610:
 13741              	.LBB593:
 13742              	.LBB590:
 13743              	.LBB587:
 13744              	.LBB583:
 201:sieve_extend.c ****    }
 13745              		.loc 1 201 7 is_stmt 1 view .LVU4767
 13746              	# sieve_extend.c:201:       *index_ptr |= (mask & chopmask(range_stop));
 201:sieve_extend.c ****    }
 13747              		.loc 1 201 27 is_stmt 0 view .LVU4768
 13748 4be8 48234C24 		and	rcx, QWORD PTR 16[rsp]	# tmp577, %sfp
 13748      10
 13749              	.LVL835:
 13750              	# sieve_extend.c:201:       *index_ptr |= (mask & chopmask(range_stop));
 201:sieve_extend.c ****    }
 13751              		.loc 1 201 18 view .LVU4769
GAS LISTING /tmp/ccjg94QQ.s 			page 371


 13752 4bed 490909   		or	QWORD PTR [r9], rcx	# MEM[(uint64_t *)range_stop_ptr_445], tmp577
 13753 4bf0 E924FEFF 		jmp	.L909	#
 13753      FF
 13754              	.LVL836:
 13755              		.p2align 4,,7
 13756 4bf5 0F1F00   		.p2align 3
 13757              	.L1243:
 201:sieve_extend.c ****    }
 13758              		.loc 1 201 18 view .LVU4770
 13759              	.LBE583:
 13760              	.LBE587:
 13761              	.LBE590:
 13762              	.LBE593:
 13763              	.LBE610:
 13764              	.LBB611:
 13765              	.LBB608:
 138:sieve_extend.c ****        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 13766              		.loc 1 138 8 is_stmt 1 view .LVU4771
 139:sieve_extend.c ****        index += distance;
 13767              		.loc 1 139 8 view .LVU4772
 13768              	# sieve_extend.c:139:        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 139:sieve_extend.c ****        index += distance;
 13769              		.loc 1 139 48 is_stmt 0 view .LVU4773
 13770 4bf8 4C8B4433 		mov	r8, QWORD PTR 8[rbx+rsi]	# *_478, *_478
 13770      08
 13771 4bfd 49F7D0   		not	r8	# tmp603
 13772              	.LVL837:
 140:sieve_extend.c ****    }
 13773              		.loc 1 140 8 is_stmt 1 view .LVU4774
 13774              	# sieve_extend.c:139:        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 139:sieve_extend.c ****        index += distance;
 13775              		.loc 1 139 17 is_stmt 0 view .LVU4775
 13776 4c00 F34D0FBC 		tzcnt	r12, r8	# distance, tmp603
 13776      E0
 13777              	.LVL838:
 13778              	# sieve_extend.c:140:        index += distance;
 140:sieve_extend.c ****    }
 13779              		.loc 1 140 14 view .LVU4776
 13780 4c05 4C01E1   		add	rcx, r12	# prime, distance
 13781              	.LVL839:
 137:sieve_extend.c ****        index_word++;
 13782              		.loc 1 137 10 is_stmt 1 view .LVU4777
 143:sieve_extend.c **** }
 13783              		.loc 1 143 4 view .LVU4778
 143:sieve_extend.c **** }
 13784              		.loc 1 143 4 is_stmt 0 view .LVU4779
 13785              	.LBE608:
 13786              	.LBE611:
1007:sieve_extend.c ****     }
 13787              		.loc 1 1007 9 is_stmt 1 view .LVU4780
 13788              	# sieve_extend.c:1007:         start = prime * prime * 2 + prime * 2;
1007:sieve_extend.c ****     }
 13789              		.loc 1 1007 35 is_stmt 0 view .LVU4781
 13790 4c08 4C8D5901 		lea	r11, 1[rcx]	# _350,
 13791              	# sieve_extend.c:1007:         start = prime * prime * 2 + prime * 2;
1007:sieve_extend.c ****     }
 13792              		.loc 1 1007 15 view .LVU4782
GAS LISTING /tmp/ccjg94QQ.s 			page 372


 13793 4c0c 4C89D8   		mov	rax, r11	# tmp608, _350
 13794 4c0f 480FAFC1 		imul	rax, rcx	# tmp608, prime
 13795 4c13 488D3400 		lea	rsi, [rax+rax]	# index,
 13796              	.LVL840:
1001:sieve_extend.c ****         step  = prime * 2 + 1;
 13797              		.loc 1 1001 11 is_stmt 1 view .LVU4783
 13798 4c17 4839F5   		cmp	rbp, rsi	# block_stop, index
 13799 4c1a 0F83BFFE 		jnb	.L904	#,
 13799      FFFF
 13800 4c20 E98FFBFF 		jmp	.L1224	#
 13800      FF
 13801              	.LVL841:
 13802              		.p2align 4,,7
 13803 4c25 0F1F00   		.p2align 3
 13804              	.L1242:
 13805              	.LBB612:
 13806              	.LBB602:
 138:sieve_extend.c ****        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 13807              		.loc 1 138 8 view .LVU4784
 139:sieve_extend.c ****        index += distance;
 13808              		.loc 1 139 8 view .LVU4785
 13809              	# sieve_extend.c:139:        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 139:sieve_extend.c ****        index += distance;
 13810              		.loc 1 139 48 is_stmt 0 view .LVU4786
 13811 4c28 4C8B5C33 		mov	r11, QWORD PTR 8[rbx+rsi]	# *_395, *_395
 13811      08
 13812 4c2d 49F7D3   		not	r11	# tmp578
 13813              	.LVL842:
 140:sieve_extend.c ****    }
 13814              		.loc 1 140 8 is_stmt 1 view .LVU4787
 13815              	# sieve_extend.c:139:        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 139:sieve_extend.c ****        index += distance;
 13816              		.loc 1 139 17 is_stmt 0 view .LVU4788
 13817 4c30 F3490FBC 		tzcnt	rax, r11	# distance, tmp578
 13817      C3
 13818              	.LVL843:
 13819              	# sieve_extend.c:140:        index += distance;
 140:sieve_extend.c ****    }
 13820              		.loc 1 140 14 view .LVU4789
 13821 4c35 4801C1   		add	rcx, rax	# prime, distance
 13822              	.LVL844:
 137:sieve_extend.c ****        index_word++;
 13823              		.loc 1 137 10 is_stmt 1 view .LVU4790
 143:sieve_extend.c **** }
 13824              		.loc 1 143 4 view .LVU4791
 143:sieve_extend.c **** }
 13825              		.loc 1 143 4 is_stmt 0 view .LVU4792
 13826              	.LBE602:
 13827              	.LBE612:
 998:sieve_extend.c ****     }
 13828              		.loc 1 998 9 is_stmt 1 view .LVU4793
 13829 4c38 E920FEFF 		jmp	.L1148	#
 13829      FF
 13830              	.LVL845:
 13831 4c3d 0F1F00   		.p2align 4,,7
 13832              		.p2align 3
 13833              	.L1237:
GAS LISTING /tmp/ccjg94QQ.s 			page 373


 998:sieve_extend.c ****     }
 13834              		.loc 1 998 9 is_stmt 0 view .LVU4794
 13835              	.LBE616:
 13836              	.LBE626:
 13837              	.LBE630:
 13838              	.LBB631:
 13839              	.LBB557:
 13840              	.LBB550:
 13841              	.LBB543:
 13842              	.LBB539:
 13843              	.LBB537:
 13844              	.LBB534:
 13845              	.LBB533:
 13846              	.LBB530:
 201:sieve_extend.c ****    }
 13847              		.loc 1 201 7 is_stmt 1 view .LVU4795
 13848              	# sieve_extend.c:201:       *index_ptr |= (mask & chopmask(range_stop));
 201:sieve_extend.c ****    }
 13849              		.loc 1 201 27 is_stmt 0 view .LVU4796
 13850 4c40 48235424 		and	rdx, QWORD PTR 40[rsp]	# tmp493, %sfp
 13850      28
 13851              	.LVL846:
 13852              	# sieve_extend.c:201:       *index_ptr |= (mask & chopmask(range_stop));
 201:sieve_extend.c ****    }
 13853              		.loc 1 201 18 view .LVU4797
 13854 4c45 490911   		or	QWORD PTR [r9], rdx	# *index_ptr_645, tmp493
 13855 4c48 E91CF7FF 		jmp	.L874	#
 13855      FF
 13856              	.LVL847:
 13857              	.L1233:
 201:sieve_extend.c ****    }
 13858              		.loc 1 201 18 view .LVU4798
 13859              	.LBE530:
 13860              	.LBE533:
 13861              	.LBE534:
 13862              	.LBE537:
 13863              	.LBE539:
 13864              	.LBE543:
 13865              	.LBB544:
 13866              	.LBB495:
 926:sieve_extend.c ****         return; // rapid exit for small sizes
 13867              		.loc 1 926 9 is_stmt 1 view .LVU4799
 13868 4c4d 4C89C1   		mov	rcx, r8	#, _69
 13869 4c50 4C89F2   		mov	rdx, r14	#, patternsize_bits
 13870 4c53 4C89F6   		mov	rsi, r14	#, patternsize_bits
 13871 4c56 4C89FF   		mov	rdi, r15	#, _97
 13872 4c59 4C894424 		mov	QWORD PTR 40[rsp], r8	# %sfp, _69
 13872      28
 13873 4c5e E89DB3FF 		call	extendSieve_smallSize	#
 13873      FF
 13874              	.LVL848:
 927:sieve_extend.c ****     }
 13875              		.loc 1 927 9 view .LVU4800
 13876 4c63 4C8B4424 		mov	r8, QWORD PTR 40[rsp]	# _69, %sfp
 13876      28
 13877 4c68 4C897424 		mov	QWORD PTR 24[rsp], r14	# %sfp, patternsize_bits
 13877      18
GAS LISTING /tmp/ccjg94QQ.s 			page 374


 13878 4c6d E977EDFF 		jmp	.L849	#
 13878      FF
 13879              	.LVL849:
 13880              	.L1238:
 927:sieve_extend.c ****     }
 13881              		.loc 1 927 9 is_stmt 0 view .LVU4801
 13882              	.LBE495:
 13883              	.LBE544:
 13884              	.LBE550:
 13885              	.LBE557:
 13886              	.LBE631:
 13887              	.LBB632:
 13888              	.LBB567:
 934:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 13889              		.loc 1 934 37 is_stmt 1 view .LVU4802
 13890 4c72 E8D9D7FF 		call	extendSieve_shiftleft	#
 13890      FF
 13891              	.LVL850:
 934:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 13892              		.loc 1 934 37 is_stmt 0 view .LVU4803
 13893 4c77 E94FF7FF 		jmp	.L885	#
 13893      FF
 13894              	.LVL851:
 13895              	.L1228:
 934:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 13896              		.loc 1 934 37 view .LVU4804
 13897 4c7c 4C8B7C24 		mov	r15, QWORD PTR 48[rsp]	# <retval>, %sfp
 13897      30
 13898              	.LVL852:
 934:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 13899              		.loc 1 934 37 view .LVU4805
 13900              	.LBE567:
 13901              	.LBE632:
 13902              	.LBB633:
 13903              	.LBB558:
 13904              	.LBB551:
 13905              	# sieve_extend.c:1041:         if (range_stop > block_stop) return block; //range_stop = block_stop
1041:sieve_extend.c **** 
 13906              		.loc 1 1041 12 view .LVU4806
 13907 4c81 4C89F2   		mov	rdx, r14	# block$pattern_size, patternsize_bits
 13908 4c84 488B7424 		mov	rsi, QWORD PTR 16[rsp]	# block$pattern_start, %sfp
 13908      10
 13909 4c89 48894C24 		mov	QWORD PTR 40[rsp], rcx	# %sfp, prime
 13909      28
 13910 4c8e 4D8B4F08 		mov	r9, QWORD PTR 8[r15]	# prephitmp_991, sieve_92->bits
 13911 4c92 4C894C24 		mov	QWORD PTR 8[rsp], r9	# %sfp, prephitmp_991
 13911      08
 13912              	.LVL853:
1041:sieve_extend.c **** 
 13913              		.loc 1 1041 12 view .LVU4807
 13914 4c97 E9F8F6FF 		jmp	.L848	#
 13914      FF
 13915              	.LVL854:
 13916              	.L923:
 13917              	.LBB545:
 13918              	.LBB510:
 13919              	# sieve_extend.c:238: 	register bitword_t pattern = BITWORD_SHIFTBIT;
GAS LISTING /tmp/ccjg94QQ.s 			page 375


 238:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; patternsize += patternsi
 13920              		.loc 1 238 21 view .LVU4808
 13921 4c9c B9010000 		mov	ecx, 1	# pattern,
 13921      00
 13922 4ca1 E99AEFFF 		jmp	.L854	#
 13922      FF
 13923              	.LVL855:
 13924              	.L1226:
 238:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; patternsize += patternsi
 13925              		.loc 1 238 21 view .LVU4809
 13926              	.LBE510:
 13927              	.LBE545:
 13928              	.LBE551:
 13929              	# sieve_extend.c:1026:     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0
1026:sieve_extend.c **** 
 13930              		.loc 1 1026 18 view .LVU4810
 13931 4ca6 31D2     		xor	edx, edx	# block$pattern_size
 13932 4ca8 31F6     		xor	esi, esi	# block$pattern_start
 13933              	# sieve_extend.c:1021:     register counter_t prime   = 0;
1021:sieve_extend.c ****     counter_t patternsize_bits = 1;
 13934              		.loc 1 1021 24 view .LVU4811
 13935 4caa 48C74424 		mov	QWORD PTR 40[rsp], 0	# %sfp,
 13935      28000000 
 13935      00
 13936 4cb3 E99FF1FF 		jmp	.L841	#
 13936      FF
 13937              	.LBE558:
 13938              	.LBE633:
 13939              		.cfi_endproc
 13940              	.LFE76:
 13942 4cb8 0F1F8400 		.p2align 4
 13942      00000000 
 13944              	tune_benchmark:
 13945              	.LVL856:
 13946              	.LFB83:
1185:sieve_extend.c **** 
1186:sieve_extend.c **** static void tune_benchmark(tuning_result_type* tuning_result, counter_t tuning_result_index) {
 13947              		.loc 1 1186 94 is_stmt 1 view -0
 13948              		.cfi_startproc
 13949              		.loc 1 1186 94 is_stmt 0 view .LVU4813
 13950 4cc0 4154     		push	r12	#
 13951              		.cfi_def_cfa_offset 16
 13952              		.cfi_offset 12, -16
 13953 4cc2 4989F8   		mov	r8, rdi	# tmp149, tuning_result
 13954              	# sieve_extend.c:1192:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_f
1187:sieve_extend.c ****     counter_t passes = 0;
1188:sieve_extend.c ****     double elapsed_time = 0;
1189:sieve_extend.c ****     struct timespec start_time,end_time;
1190:sieve_extend.c ****     struct sieve_state *sieve_instance;
1191:sieve_extend.c **** 
1192:sieve_extend.c ****     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_faster;
 13955              		.loc 1 1192 44 view .LVU4814
 13956 4cc5 488D3C76 		lea	rdi, [rsi+rsi*2]	# tmp114,
 13957              	.LVL857:
 13958              	# sieve_extend.c:1186: static void tune_benchmark(tuning_result_type* tuning_result, counter_t tuni
1186:sieve_extend.c ****     counter_t passes = 0;
 13959              		.loc 1 1186 94 view .LVU4815
GAS LISTING /tmp/ccjg94QQ.s 			page 376


 13960 4cc9 55       		push	rbp	#
 13961              		.cfi_def_cfa_offset 24
 13962              		.cfi_offset 6, -24
 13963              	# sieve_extend.c:1192:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_f
 13964              		.loc 1 1192 44 view .LVU4816
 13965 4cca 48C1E705 		sal	rdi, 5	# tmp115,
 13966              	# sieve_extend.c:1187:     counter_t passes = 0;
1187:sieve_extend.c ****     counter_t passes = 0;
 13967              		.loc 1 1187 15 view .LVU4817
 13968 4cce 4531E4   		xor	r12d, r12d	# passes
 13969              	# sieve_extend.c:1186: static void tune_benchmark(tuning_result_type* tuning_result, counter_t tuni
1186:sieve_extend.c ****     counter_t passes = 0;
 13970              		.loc 1 1186 94 view .LVU4818
 13971 4cd1 53       		push	rbx	#
 13972              		.cfi_def_cfa_offset 32
 13973              		.cfi_offset 3, -32
 13974              	# sieve_extend.c:1192:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_f
 13975              		.loc 1 1192 44 view .LVU4819
 13976 4cd2 498D1C38 		lea	rbx, [r8+rdi]	# _2,
 13977              	# sieve_extend.c:1196:     clock_gettime(CLOCK_MONOTONIC,&start_time);
1193:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
1194:sieve_extend.c ****     global_VECTORSTEP_FASTER = tuning_result[tuning_result_index].vectorstep_faster;
1195:sieve_extend.c **** 
1196:sieve_extend.c ****     clock_gettime(CLOCK_MONOTONIC,&start_time);
 13978              		.loc 1 1196 5 view .LVU4820
 13979 4cd6 BF010000 		mov	edi, 1	#,
 13979      00
 13980              	# sieve_extend.c:1186: static void tune_benchmark(tuning_result_type* tuning_result, counter_t tuni
1186:sieve_extend.c ****     counter_t passes = 0;
 13981              		.loc 1 1186 94 view .LVU4821
 13982 4cdb 488D6424 		lea	rsp, -48[rsp]	#,
 13982      D0
 13983              		.cfi_def_cfa_offset 80
 13984              	# sieve_extend.c:1193:     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep
1193:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
 13985              		.loc 1 1193 30 view .LVU4822
 13986 4ce0 488B5328 		mov	rdx, QWORD PTR 40[rbx]	# _2->mediumstep_faster, _2->mediumstep_faster
 13987              	# sieve_extend.c:1196:     clock_gettime(CLOCK_MONOTONIC,&start_time);
 13988              		.loc 1 1196 5 view .LVU4823
 13989 4ce4 4889E6   		mov	rsi, rsp	# tmp119,
 13990              	.LVL858:
 13991              	# sieve_extend.c:1194:     global_VECTORSTEP_FASTER = tuning_result[tuning_result_index].vectorstep
1194:sieve_extend.c **** 
 13992              		.loc 1 1194 30 view .LVU4824
 13993 4ce7 488B4B30 		mov	rcx, QWORD PTR 48[rbx]	# _2->vectorstep_faster, _2->vectorstep_faster
 13994              	# sieve_extend.c:1186: static void tune_benchmark(tuning_result_type* tuning_result, counter_t tuni
1186:sieve_extend.c ****     counter_t passes = 0;
 13995              		.loc 1 1186 94 view .LVU4825
 13996 4ceb 64488B04 		mov	rax, QWORD PTR fs:40	# tmp160, MEM[(<address-space-1> long unsigned int *)40B]
 13996      25280000 
 13996      00
 13997 4cf4 48894424 		mov	QWORD PTR 40[rsp], rax	# D.7129, tmp160
 13997      28
 13998 4cf9 31C0     		xor	eax, eax	# tmp160
1187:sieve_extend.c ****     double elapsed_time = 0;
 13999              		.loc 1 1187 5 is_stmt 1 view .LVU4826
 14000              	.LVL859:
GAS LISTING /tmp/ccjg94QQ.s 			page 377


1188:sieve_extend.c ****     struct timespec start_time,end_time;
 14001              		.loc 1 1188 5 view .LVU4827
1189:sieve_extend.c ****     struct sieve_state *sieve_instance;
 14002              		.loc 1 1189 5 view .LVU4828
1190:sieve_extend.c **** 
 14003              		.loc 1 1190 5 view .LVU4829
1192:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
 14004              		.loc 1 1192 5 view .LVU4830
 14005              	# sieve_extend.c:1192:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_f
1192:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
 14006              		.loc 1 1192 29 is_stmt 0 view .LVU4831
 14007 4cfb 488B4320 		mov	rax, QWORD PTR 32[rbx]	# _2->smallstep_faster, _2->smallstep_faster
 14008              	# sieve_extend.c:1193:     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep
1193:sieve_extend.c ****     global_VECTORSTEP_FASTER = tuning_result[tuning_result_index].vectorstep_faster;
 14009              		.loc 1 1193 30 view .LVU4832
 14010 4cff 48891500 		mov	QWORD PTR global_MEDIUMSTEP_FASTER[rip], rdx	# global_MEDIUMSTEP_FASTER, _2->mediumstep_faster
 14010      000000
 14011              	# sieve_extend.c:1194:     global_VECTORSTEP_FASTER = tuning_result[tuning_result_index].vectorstep
1194:sieve_extend.c **** 
 14012              		.loc 1 1194 30 view .LVU4833
 14013 4d06 48890D00 		mov	QWORD PTR global_VECTORSTEP_FASTER[rip], rcx	# global_VECTORSTEP_FASTER, _2->vectorstep_faster
 14013      000000
 14014              	# sieve_extend.c:1192:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_f
1192:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
 14015              		.loc 1 1192 29 view .LVU4834
 14016 4d0d 48890500 		mov	QWORD PTR global_SMALLSTEP_FASTER[rip], rax	# global_SMALLSTEP_FASTER, _2->smallstep_faster
 14016      000000
1193:sieve_extend.c ****     global_VECTORSTEP_FASTER = tuning_result[tuning_result_index].vectorstep_faster;
 14017              		.loc 1 1193 5 is_stmt 1 view .LVU4835
1194:sieve_extend.c **** 
 14018              		.loc 1 1194 5 view .LVU4836
 14019              		.loc 1 1196 5 view .LVU4837
 14020 4d14 E8000000 		call	clock_gettime@PLT	#
 14020      00
 14021              	.LVL860:
1197:sieve_extend.c ****     while (elapsed_time <= tuning_result[tuning_result_index].sample_duration && passes < tuning_re
 14022              		.loc 1 1197 5 view .LVU4838
 14023              		.loc 1 1197 11 view .LVU4839
 14024 4d19 C5D957E4 		vxorpd	xmm4, xmm4, xmm4	# elapsed_time
 14025 4d1d C5F92F63 		vcomisd	xmm4, QWORD PTR 64[rbx]	# elapsed_time, _2->sample_duration
 14025      40
 14026 4d22 C5FB103D 		vmovsd	xmm7, QWORD PTR .LC7[rip]	# _58,
 14026      00000000 
 14027 4d2a 7676     		jbe	.L1245	#,
 14028 4d2c E99E0000 		jmp	.L1246	#
 14028      00
 14029              	.LVL861:
 14030              		.p2align 4,,7
 14031 4d31 0F1F8000 		.p2align 3
 14031      000000
 14032              	.L1249:
1198:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 14033              		.loc 1 1198 9 view .LVU4840
 14034              	# sieve_extend.c:1198:         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, t
 14035              		.loc 1 1198 26 is_stmt 0 view .LVU4841
 14036 4d38 488B7308 		mov	rsi, QWORD PTR 8[rbx]	# _2->blocksize_bits, _2->blocksize_bits
 14037              	# sieve_extend.c:1200:         passes++;
GAS LISTING /tmp/ccjg94QQ.s 			page 378


1199:sieve_extend.c ****         delete_sieve(sieve_instance);
1200:sieve_extend.c ****         passes++;
 14038              		.loc 1 1200 15 view .LVU4842
 14039 4d3c 4983C401 		add	r12, 1	# passes,
 14040              	.LVL862:
 14041              	# sieve_extend.c:1198:         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, t
1198:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 14042              		.loc 1 1198 26 view .LVU4843
 14043 4d40 488B3B   		mov	rdi, QWORD PTR [rbx]	#, _2->maxints
 14044 4d43 E8A8EBFF 		call	sieve	#
 14044      FF
 14045              	.LVL863:
 14046              	.LBB634:
 14047              	.LBB635:
 14048              	# sieve_extend.c:117:     free(sieve->bitarray);
 117:sieve_extend.c ****     free(sieve);
 14049              		.loc 1 117 5 view .LVU4844
 14050 4d48 488B38   		mov	rdi, QWORD PTR [rax]	#, sieve_instance_37->bitarray
 14051              	.LBE635:
 14052              	.LBE634:
 14053              	# sieve_extend.c:1198:         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, t
1198:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 14054              		.loc 1 1198 26 view .LVU4845
 14055 4d4b 4889C5   		mov	rbp, rax	# sieve_instance, tmp151
 14056              	.LVL864:
1199:sieve_extend.c ****         delete_sieve(sieve_instance);
 14057              		.loc 1 1199 9 is_stmt 1 view .LVU4846
 14058              	.LBB637:
 14059              	.LBI634:
 116:sieve_extend.c ****     free(sieve->bitarray);
 14060              		.loc 1 116 13 view .LVU4847
 14061              	.LBB636:
 117:sieve_extend.c ****     free(sieve);
 14062              		.loc 1 117 5 view .LVU4848
 14063 4d4e E8000000 		call	free@PLT	#
 14063      00
 14064              	.LVL865:
 118:sieve_extend.c **** }
 14065              		.loc 1 118 5 view .LVU4849
 14066 4d53 4889EF   		mov	rdi, rbp	#, sieve_instance
 14067 4d56 E8000000 		call	free@PLT	#
 14067      00
 14068              	.LVL866:
 118:sieve_extend.c **** }
 14069              		.loc 1 118 5 is_stmt 0 view .LVU4850
 14070              	.LBE636:
 14071              	.LBE637:
 14072              		.loc 1 1200 9 is_stmt 1 view .LVU4851
1201:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&end_time);
 14073              		.loc 1 1201 9 view .LVU4852
 14074 4d5b 488D7424 		lea	rsi, 16[rsp]	# tmp122,
 14074      10
 14075 4d60 BF010000 		mov	edi, 1	#,
 14075      00
 14076 4d65 E8000000 		call	clock_gettime@PLT	#
 14076      00
 14077              	.LVL867:
GAS LISTING /tmp/ccjg94QQ.s 			page 379


1202:sieve_extend.c ****         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time.tv_
 14078              		.loc 1 1202 9 view .LVU4853
 14079              	# sieve_extend.c:1202:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 14080              		.loc 1 1202 58 is_stmt 0 view .LVU4854
 14081 4d6a C4E1FB2A 		vcvtsi2sd	xmm0, xmm0, QWORD PTR 24[rsp]	# tmp123, end_time.tv_nsec
 14081      442418
 14082              	# sieve_extend.c:1202:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 14083              		.loc 1 1202 64 view .LVU4855
 14084 4d71 C4E1F32A 		vcvtsi2sd	xmm1, xmm1, QWORD PTR [rsp]	# tmp124, start_time.tv_sec
 14084      0C24
 14085              	# sieve_extend.c:1202:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 14086              		.loc 1 1202 104 view .LVU4856
 14087 4d77 C4E1E32A 		vcvtsi2sd	xmm3, xmm3, QWORD PTR 8[rsp]	# tmp126, start_time.tv_nsec
 14087      5C2408
 14088              	# sieve_extend.c:1202:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 14089              		.loc 1 1202 40 view .LVU4857
 14090 4d7e C4E1EB2A 		vcvtsi2sd	xmm2, xmm2, QWORD PTR 16[rsp]	# tmp127, end_time.tv_sec
 14090      542410
 14091 4d85 C4E2F19B 		vfmsub132sd	xmm0, xmm1, QWORD PTR .LC8[rip]	# _60, tmp124,
 14091      05000000 
 14091      00
 14092 4d8e C4E2E99D 		vfnmadd132sd	xmm3, xmm2, QWORD PTR .LC8[rip]	# _61, tmp127,
 14092      1D000000 
 14092      00
 14093              	# sieve_extend.c:1202:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 14094              		.loc 1 1202 22 view .LVU4858
 14095 4d97 C5FB58E3 		vaddsd	xmm4, xmm0, xmm3	# elapsed_time, _60, _61
 14096              	.LVL868:
1197:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 14097              		.loc 1 1197 11 is_stmt 1 view .LVU4859
 14098 4d9b C5F92F63 		vcomisd	xmm4, QWORD PTR 64[rbx]	# elapsed_time, _2->sample_duration
 14098      40
 14099 4da0 7706     		ja	.L1260	#,
 14100              	.LVL869:
 14101              	.L1245:
 14102              	# sieve_extend.c:1197:     while (elapsed_time <= tuning_result[tuning_result_index].sample_duratio
1197:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 14103              		.loc 1 1197 79 is_stmt 0 discriminator 1 view .LVU4860
 14104 4da2 4C396338 		cmp	QWORD PTR 56[rbx], r12	# _2->sample_max, passes
 14105 4da6 7790     		ja	.L1249	#,
 14106              	.L1260:
1197:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 14107              		.loc 1 1197 79 discriminator 1 view .LVU4861
 14108 4da8 C4C1CB2A 		vcvtsi2sd	xmm6, xmm6, r12	# tmp133, passes
 14108      F4
 14109 4dad 4D85E4   		test	r12, r12	# passes
 14110 4db0 7919     		jns	.L1251	#,
1197:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 14111              		.loc 1 1197 79 discriminator 1 view .LVU4862
 14112 4db2 4C89E6   		mov	rsi, r12	# tmp135, passes
 14113 4db5 4D89E1   		mov	r9, r12	# tmp136, passes
 14114 4db8 48D1EE   		shr	rsi	# tmp135
 14115 4dbb 4183E101 		and	r9d, 1	# tmp136,
 14116 4dbf 4C09CE   		or	rsi, r9	# tmp148, tmp136
 14117 4dc2 C4E1D32A 		vcvtsi2sd	xmm5, xmm5, rsi	# tmp134, tmp148
 14117      EE
 14118 4dc7 C5D358F5 		vaddsd	xmm6, xmm5, xmm5	# tmp133, tmp134, tmp134
GAS LISTING /tmp/ccjg94QQ.s 			page 380


 14119              	.L1251:
1197:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 14120              		.loc 1 1197 79 discriminator 1 view .LVU4863
 14121 4dcb C5CB5EFC 		vdivsd	xmm7, xmm6, xmm4	# _58, tmp133, elapsed_time
 14122              	.LVL870:
 14123              	.L1246:
1203:sieve_extend.c ****     }
1204:sieve_extend.c ****     tuning_result[tuning_result_index].passes = passes;
 14124              		.loc 1 1204 5 is_stmt 1 view .LVU4864
 14125              	# sieve_extend.c:1204:     tuning_result[tuning_result_index].passes = passes;
 14126              		.loc 1 1204 47 is_stmt 0 view .LVU4865
 14127 4dcf 4C896348 		mov	QWORD PTR 72[rbx], r12	# _2->passes, passes
1205:sieve_extend.c ****     tuning_result[tuning_result_index].elapsed_time = elapsed_time;
 14128              		.loc 1 1205 5 is_stmt 1 view .LVU4866
 14129              	# sieve_extend.c:1205:     tuning_result[tuning_result_index].elapsed_time = elapsed_time;
 14130              		.loc 1 1205 53 is_stmt 0 view .LVU4867
 14131 4dd3 C5FB1163 		vmovsd	QWORD PTR 80[rbx], xmm4	# _2->elapsed_time, elapsed_time
 14131      50
1206:sieve_extend.c ****     tuning_result[tuning_result_index].avg = passes/elapsed_time;
 14132              		.loc 1 1206 5 is_stmt 1 view .LVU4868
 14133              	# sieve_extend.c:1206:     tuning_result[tuning_result_index].avg = passes/elapsed_time;
 14134              		.loc 1 1206 44 is_stmt 0 view .LVU4869
 14135 4dd8 C5FB117B 		vmovsd	QWORD PTR 88[rbx], xmm7	# _2->avg, _58
 14135      58
 14136              	# sieve_extend.c:1207: }
1207:sieve_extend.c **** }
 14137              		.loc 1 1207 1 view .LVU4870
 14138 4ddd 488B4424 		mov	rax, QWORD PTR 40[rsp]	# tmp161, D.7129
 14138      28
 14139 4de2 64483304 		xor	rax, QWORD PTR fs:40	# tmp161, MEM[(<address-space-1> long unsigned int *)40B]
 14139      25280000 
 14139      00
 14140 4deb 750A     		jne	.L1261	#,
 14141 4ded 488D6424 		lea	rsp, 48[rsp]	#,
 14141      30
 14142              		.cfi_remember_state
 14143              		.cfi_def_cfa_offset 32
 14144 4df2 5B       		pop	rbx	#
 14145              		.cfi_def_cfa_offset 24
 14146 4df3 5D       		pop	rbp	#
 14147              		.cfi_def_cfa_offset 16
 14148 4df4 415C     		pop	r12	#
 14149              		.cfi_def_cfa_offset 8
 14150 4df6 C3       		ret	
 14151              	.L1261:
 14152              		.cfi_restore_state
 14153 4df7 E8000000 		call	__stack_chk_fail@PLT	#
 14153      00
 14154              	.LVL871:
 14155              		.cfi_endproc
 14156              	.LFE83:
 14158 4dfc 0F1F4000 		.p2align 4
 14159              		.globl	shiftvec
 14161              	shiftvec:
 14162              	.LVL872:
 14163              	.LFB67:
 646:sieve_extend.c ****     int i = 0;
GAS LISTING /tmp/ccjg94QQ.s 			page 381


 14164              		.loc 1 646 1 is_stmt 1 view -0
 14165              		.cfi_startproc
 646:sieve_extend.c ****     int i = 0;
 14166              		.loc 1 646 1 is_stmt 0 view .LVU4872
 14167 4e00 F30F1EFA 		endbr64	
 647:sieve_extend.c ****     // MSVC: use steps of 2 for SSE, 4 for AVX2, 8 for AVX512
 14168              		.loc 1 647 5 is_stmt 1 view .LVU4873
 14169              	.LVL873:
 649:sieve_extend.c ****     {
 14170              		.loc 1 649 5 view .LVU4874
 649:sieve_extend.c ****     {
 14171              		.loc 1 649 12 view .LVU4875
 14172              	# sieve_extend.c:649:     for (; i+4 < size; i+=4,dst+=4,src+=4)
 649:sieve_extend.c ****     {
 14173              		.loc 1 649 5 is_stmt 0 view .LVU4876
 14174 4e04 83FA04   		cmp	edx, 4	# size,
 14175 4e07 0F8E9D03 		jle	.L1307	#,
 14175      0000
 14176 4e0d 41BB4000 		mov	r11d, 64	# tmp130,
 14176      0000
 14177 4e13 448D42FB 		lea	r8d, -5[rdx]	# tmp131,
 14178 4e17 4489D8   		mov	eax, r11d	# _4, tmp130
 14179 4e1a C5F96EC9 		vmovd	xmm1, ecx	# shift, shift
 14180 4e1e 29C8     		sub	eax, ecx	# _4, shift
 14181              	.LBB638:
 14182              	# sieve_extend.c:652:             *(dst+j) = (*(src+j))<<shift;
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14183              		.loc 1 652 25 view .LVU4877
 14184 4e20 C4E3FD00 		vpermq	ymm2, YMMWORD PTR [rsi], 85	# vect__102.640, MEM[base: src_35(D), index: ivtmp.654_114, off
 14184      1655
 14185              	# sieve_extend.c:652:             *(dst+j) = (*(src+j))<<shift;
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14186              		.loc 1 652 34 view .LVU4878
 14187 4e26 C5FE6F26 		vmovdqu	ymm4, YMMWORD PTR [rsi]	# tmp269, MEM[base: src_35(D), index: ivtmp.654_114, offset: 0B]
 14188 4e2a C4E1F96E 		vmovq	xmm0, rax	# _4, _4
 14188      C0
 14189 4e2f 41C1E802 		shr	r8d, 2	# _25,
 14190 4e33 41B90100 		mov	r9d, 1	# ivtmp.651,
 14190      0000
 14191              	.LBE638:
 14192              	.LBB639:
 14193              	# sieve_extend.c:654:             *(dst+j) |= (*(src+1)>>(64-shift));
 654:sieve_extend.c ****     }
 14194              		.loc 1 654 34 view .LVU4879
 14195 4e39 C5EDD3E8 		vpsrlq	ymm5, ymm2, xmm0	# vect__57.641, vect__102.640, _4
 14196              	.LBE639:
 14197              	.LBB640:
 14198              	# sieve_extend.c:652:             *(dst+j) = (*(src+j))<<shift;
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14199              		.loc 1 652 34 view .LVU4880
 14200 4e3d C5DDF3D9 		vpsllq	ymm3, ymm4, xmm1	# vect__104.645, tmp269, shift
 14201 4e41 458D5001 		lea	r10d, 1[r8]	# tmp164,
 14202 4e45 4589C3   		mov	r11d, r8d	# tmp169, _25
 14203              	.LBE640:
 14204              	.LBB641:
 14205              	# sieve_extend.c:654:             *(dst+j) |= (*(src+1)>>(64-shift));
 654:sieve_extend.c ****     }
GAS LISTING /tmp/ccjg94QQ.s 			page 382


 14206              		.loc 1 654 22 view .LVU4881
 14207 4e48 C5D5EBF3 		vpor	ymm6, ymm5, ymm3	# vect__58.646, vect__57.641, vect__104.645
 14208 4e4c 4183E307 		and	r11d, 7	# tmp169,
 14209              	.LVL874:
 654:sieve_extend.c ****     }
 14210              		.loc 1 654 22 view .LVU4882
 14211              	.LBE641:
 14212              	.LBB642:
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14213              		.loc 1 651 25 is_stmt 1 view .LVU4883
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14214              		.loc 1 652 13 view .LVU4884
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14215              		.loc 1 651 32 view .LVU4885
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14216              		.loc 1 651 25 view .LVU4886
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14217              		.loc 1 652 13 view .LVU4887
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14218              		.loc 1 651 32 view .LVU4888
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14219              		.loc 1 651 25 view .LVU4889
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14220              		.loc 1 652 13 view .LVU4890
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14221              		.loc 1 651 32 view .LVU4891
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14222              		.loc 1 651 25 view .LVU4892
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14223              		.loc 1 652 13 view .LVU4893
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14224              		.loc 1 651 32 view .LVU4894
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14225              		.loc 1 651 25 view .LVU4895
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14226              		.loc 1 651 25 is_stmt 0 view .LVU4896
 14227              	.LBE642:
 14228              	.LBB643:
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14229              		.loc 1 653 25 is_stmt 1 view .LVU4897
 654:sieve_extend.c ****     }
 14230              		.loc 1 654 13 view .LVU4898
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14231              		.loc 1 653 32 view .LVU4899
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14232              		.loc 1 653 25 view .LVU4900
 654:sieve_extend.c ****     }
 14233              		.loc 1 654 13 view .LVU4901
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14234              		.loc 1 653 32 view .LVU4902
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14235              		.loc 1 653 25 view .LVU4903
 654:sieve_extend.c ****     }
 14236              		.loc 1 654 13 view .LVU4904
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14237              		.loc 1 653 32 view .LVU4905
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
GAS LISTING /tmp/ccjg94QQ.s 			page 383


 14238              		.loc 1 653 25 view .LVU4906
 654:sieve_extend.c ****     }
 14239              		.loc 1 654 13 view .LVU4907
 14240 4e50 4183FA01 		cmp	r10d, 1	# tmp164,
 14241 4e54 B8200000 		mov	eax, 32	# ivtmp.654,
 14241      00
 14242              	# sieve_extend.c:654:             *(dst+j) |= (*(src+1)>>(64-shift));
 654:sieve_extend.c ****     }
 14243              		.loc 1 654 22 is_stmt 0 view .LVU4908
 14244 4e59 C5FE7F37 		vmovdqu	YMMWORD PTR [rdi], ymm6	# MEM[base: dst_34(D), index: ivtmp.654_114, offset: 0B], vect__58
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14245              		.loc 1 653 32 is_stmt 1 view .LVU4909
 14246              	.LVL875:
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14247              		.loc 1 653 25 view .LVU4910
 14248              	.LBE643:
 649:sieve_extend.c ****     {
 14249              		.loc 1 649 24 view .LVU4911
 649:sieve_extend.c ****     {
 14250              		.loc 1 649 12 view .LVU4912
 14251 4e5d 0F866002 		jbe	.L1305	#,
 14251      0000
 14252 4e63 4585DB   		test	r11d, r11d	# tmp169
 14253 4e66 0F841E01 		je	.L1265	#,
 14253      0000
 14254 4e6c 4183FB01 		cmp	r11d, 1	# tmp169,
 14255 4e70 0F84E500 		je	.L1292	#,
 14255      0000
 14256 4e76 4183FB02 		cmp	r11d, 2	# tmp169,
 14257 4e7a 0F84B600 		je	.L1293	#,
 14257      0000
 14258 4e80 4183FB03 		cmp	r11d, 3	# tmp169,
 14259 4e84 0F848700 		je	.L1294	#,
 14259      0000
 14260 4e8a 4183FB04 		cmp	r11d, 4	# tmp169,
 14261 4e8e 745B     		je	.L1295	#,
 14262 4e90 4183FB05 		cmp	r11d, 5	# tmp169,
 14263 4e94 7430     		je	.L1296	#,
 14264 4e96 4183FB06 		cmp	r11d, 6	# tmp169,
 14265 4e9a 0F85DC02 		jne	.L1308	#,
 14265      0000
 14266              	.L1297:
 14267              	.LVL876:
 14268              	.LBB644:
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14269              		.loc 1 651 25 view .LVU4913
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14270              		.loc 1 652 13 view .LVU4914
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14271              		.loc 1 651 32 view .LVU4915
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14272              		.loc 1 651 25 view .LVU4916
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14273              		.loc 1 652 13 view .LVU4917
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14274              		.loc 1 651 32 view .LVU4918
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
GAS LISTING /tmp/ccjg94QQ.s 			page 384


 14275              		.loc 1 651 25 view .LVU4919
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14276              		.loc 1 652 13 view .LVU4920
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14277              		.loc 1 651 32 view .LVU4921
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14278              		.loc 1 651 25 view .LVU4922
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14279              		.loc 1 652 13 view .LVU4923
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14280              		.loc 1 651 32 view .LVU4924
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14281              		.loc 1 651 25 view .LVU4925
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14282              		.loc 1 651 25 is_stmt 0 view .LVU4926
 14283              	.LBE644:
 14284              	.LBB645:
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14285              		.loc 1 653 25 is_stmt 1 view .LVU4927
 654:sieve_extend.c ****     }
 14286              		.loc 1 654 13 view .LVU4928
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14287              		.loc 1 653 32 view .LVU4929
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14288              		.loc 1 653 25 view .LVU4930
 654:sieve_extend.c ****     }
 14289              		.loc 1 654 13 view .LVU4931
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14290              		.loc 1 653 32 view .LVU4932
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14291              		.loc 1 653 25 view .LVU4933
 654:sieve_extend.c ****     }
 14292              		.loc 1 654 13 view .LVU4934
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14293              		.loc 1 653 32 view .LVU4935
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14294              		.loc 1 653 25 view .LVU4936
 654:sieve_extend.c ****     }
 14295              		.loc 1 654 13 view .LVU4937
 14296              	.LBE645:
 14297              	.LBB646:
 14298              	# sieve_extend.c:652:             *(dst+j) = (*(src+j))<<shift;
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14299              		.loc 1 652 25 is_stmt 0 view .LVU4938
 14300 4ea0 C463FD00 		vpermq	ymm12, YMMWORD PTR [rsi+rax], 85	# vect__102.640, MEM[base: src_35(D), index: ivtmp.654_114
 14300      240655
 14301 4ea7 4183C101 		add	r9d, 1	# ivtmp.651,
 14302              	# sieve_extend.c:652:             *(dst+j) = (*(src+j))<<shift;
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14303              		.loc 1 652 34 view .LVU4939
 14304 4eab C57E6F34 		vmovdqu	ymm14, YMMWORD PTR [rsi+rax]	# tmp279, MEM[base: src_35(D), index: ivtmp.654_114, offset: 
 14304      06
 14305              	.LBE646:
 14306              	.LBB647:
 14307              	# sieve_extend.c:654:             *(dst+j) |= (*(src+1)>>(64-shift));
 654:sieve_extend.c ****     }
 14308              		.loc 1 654 34 view .LVU4940
GAS LISTING /tmp/ccjg94QQ.s 			page 385


 14309 4eb0 C51DD3E8 		vpsrlq	ymm13, ymm12, xmm0	# vect__57.641, vect__102.640, _4
 14310              	.LBE647:
 14311              	.LBB648:
 14312              	# sieve_extend.c:652:             *(dst+j) = (*(src+j))<<shift;
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14313              		.loc 1 652 34 view .LVU4941
 14314 4eb4 C50DF3F9 		vpsllq	ymm15, ymm14, xmm1	# vect__104.645, tmp279, shift
 14315              	.LBE648:
 14316              	.LBB649:
 14317              	# sieve_extend.c:654:             *(dst+j) |= (*(src+1)>>(64-shift));
 654:sieve_extend.c ****     }
 14318              		.loc 1 654 22 view .LVU4942
 14319 4eb8 C4C115EB 		vpor	ymm2, ymm13, ymm15	# vect__58.646, vect__57.641, vect__104.645
 14319      D7
 14320 4ebd C5FE7F14 		vmovdqu	YMMWORD PTR [rdi+rax], ymm2	# MEM[base: dst_34(D), index: ivtmp.654_114, offset: 0B], vect
 14320      07
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14321              		.loc 1 653 32 is_stmt 1 view .LVU4943
 14322              	.LVL877:
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14323              		.loc 1 653 25 view .LVU4944
 14324              	.LBE649:
 649:sieve_extend.c ****     {
 14325              		.loc 1 649 24 view .LVU4945
 649:sieve_extend.c ****     {
 14326              		.loc 1 649 12 view .LVU4946
 14327 4ec2 4883C020 		add	rax, 32	# ivtmp.654,
 14328              	.L1296:
 14329              	.LVL878:
 14330              	.LBB650:
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14331              		.loc 1 651 25 view .LVU4947
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14332              		.loc 1 652 13 view .LVU4948
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14333              		.loc 1 651 32 view .LVU4949
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14334              		.loc 1 651 25 view .LVU4950
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14335              		.loc 1 652 13 view .LVU4951
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14336              		.loc 1 651 32 view .LVU4952
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14337              		.loc 1 651 25 view .LVU4953
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14338              		.loc 1 652 13 view .LVU4954
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14339              		.loc 1 651 32 view .LVU4955
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14340              		.loc 1 651 25 view .LVU4956
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14341              		.loc 1 652 13 view .LVU4957
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14342              		.loc 1 651 32 view .LVU4958
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14343              		.loc 1 651 25 view .LVU4959
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
GAS LISTING /tmp/ccjg94QQ.s 			page 386


 14344              		.loc 1 651 25 is_stmt 0 view .LVU4960
 14345              	.LBE650:
 14346              	.LBB651:
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14347              		.loc 1 653 25 is_stmt 1 view .LVU4961
 654:sieve_extend.c ****     }
 14348              		.loc 1 654 13 view .LVU4962
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14349              		.loc 1 653 32 view .LVU4963
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14350              		.loc 1 653 25 view .LVU4964
 654:sieve_extend.c ****     }
 14351              		.loc 1 654 13 view .LVU4965
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14352              		.loc 1 653 32 view .LVU4966
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14353              		.loc 1 653 25 view .LVU4967
 654:sieve_extend.c ****     }
 14354              		.loc 1 654 13 view .LVU4968
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14355              		.loc 1 653 32 view .LVU4969
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14356              		.loc 1 653 25 view .LVU4970
 654:sieve_extend.c ****     }
 14357              		.loc 1 654 13 view .LVU4971
 14358              	.LBE651:
 14359              	.LBB652:
 14360              	# sieve_extend.c:652:             *(dst+j) = (*(src+j))<<shift;
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14361              		.loc 1 652 25 is_stmt 0 view .LVU4972
 14362 4ec6 C4E3FD00 		vpermq	ymm5, YMMWORD PTR [rsi+rax], 85	# vect__102.640, MEM[base: src_35(D), index: ivtmp.654_114,
 14362      2C0655
 14363 4ecd 4183C101 		add	r9d, 1	# ivtmp.651,
 14364              	# sieve_extend.c:652:             *(dst+j) = (*(src+j))<<shift;
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14365              		.loc 1 652 34 view .LVU4973
 14366 4ed1 C5FE6F1C 		vmovdqu	ymm3, YMMWORD PTR [rsi+rax]	# tmp280, MEM[base: src_35(D), index: ivtmp.654_114, offset: 0
 14366      06
 14367              	.LBE652:
 14368              	.LBB653:
 14369              	# sieve_extend.c:654:             *(dst+j) |= (*(src+1)>>(64-shift));
 654:sieve_extend.c ****     }
 14370              		.loc 1 654 34 view .LVU4974
 14371 4ed6 C5D5D3E0 		vpsrlq	ymm4, ymm5, xmm0	# vect__57.641, vect__102.640, _4
 14372              	.LBE653:
 14373              	.LBB654:
 14374              	# sieve_extend.c:652:             *(dst+j) = (*(src+j))<<shift;
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14375              		.loc 1 652 34 view .LVU4975
 14376 4eda C5E5F3F1 		vpsllq	ymm6, ymm3, xmm1	# vect__104.645, tmp280, shift
 14377              	.LBE654:
 14378              	.LBB655:
 14379              	# sieve_extend.c:654:             *(dst+j) |= (*(src+1)>>(64-shift));
 654:sieve_extend.c ****     }
 14380              		.loc 1 654 22 view .LVU4976
 14381 4ede C5DDEBFE 		vpor	ymm7, ymm4, ymm6	# vect__58.646, vect__57.641, vect__104.645
 14382 4ee2 C5FE7F3C 		vmovdqu	YMMWORD PTR [rdi+rax], ymm7	# MEM[base: dst_34(D), index: ivtmp.654_114, offset: 0B], vect
GAS LISTING /tmp/ccjg94QQ.s 			page 387


 14382      07
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14383              		.loc 1 653 32 is_stmt 1 view .LVU4977
 14384              	.LVL879:
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14385              		.loc 1 653 25 view .LVU4978
 14386              	.LBE655:
 649:sieve_extend.c ****     {
 14387              		.loc 1 649 24 view .LVU4979
 649:sieve_extend.c ****     {
 14388              		.loc 1 649 12 view .LVU4980
 14389 4ee7 4883C020 		add	rax, 32	# ivtmp.654,
 14390              	.L1295:
 14391              	.LVL880:
 14392              	.LBB656:
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14393              		.loc 1 651 25 view .LVU4981
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14394              		.loc 1 652 13 view .LVU4982
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14395              		.loc 1 651 32 view .LVU4983
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14396              		.loc 1 651 25 view .LVU4984
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14397              		.loc 1 652 13 view .LVU4985
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14398              		.loc 1 651 32 view .LVU4986
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14399              		.loc 1 651 25 view .LVU4987
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14400              		.loc 1 652 13 view .LVU4988
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14401              		.loc 1 651 32 view .LVU4989
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14402              		.loc 1 651 25 view .LVU4990
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14403              		.loc 1 652 13 view .LVU4991
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14404              		.loc 1 651 32 view .LVU4992
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14405              		.loc 1 651 25 view .LVU4993
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14406              		.loc 1 651 25 is_stmt 0 view .LVU4994
 14407              	.LBE656:
 14408              	.LBB657:
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14409              		.loc 1 653 25 is_stmt 1 view .LVU4995
 654:sieve_extend.c ****     }
 14410              		.loc 1 654 13 view .LVU4996
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14411              		.loc 1 653 32 view .LVU4997
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14412              		.loc 1 653 25 view .LVU4998
 654:sieve_extend.c ****     }
 14413              		.loc 1 654 13 view .LVU4999
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14414              		.loc 1 653 32 view .LVU5000
GAS LISTING /tmp/ccjg94QQ.s 			page 388


 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14415              		.loc 1 653 25 view .LVU5001
 654:sieve_extend.c ****     }
 14416              		.loc 1 654 13 view .LVU5002
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14417              		.loc 1 653 32 view .LVU5003
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14418              		.loc 1 653 25 view .LVU5004
 654:sieve_extend.c ****     }
 14419              		.loc 1 654 13 view .LVU5005
 14420              	.LBE657:
 14421              	.LBB658:
 14422              	# sieve_extend.c:652:             *(dst+j) = (*(src+j))<<shift;
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14423              		.loc 1 652 25 is_stmt 0 view .LVU5006
 14424 4eeb C463FD00 		vpermq	ymm8, YMMWORD PTR [rsi+rax], 85	# vect__102.640, MEM[base: src_35(D), index: ivtmp.654_114,
 14424      040655
 14425 4ef2 4183C101 		add	r9d, 1	# ivtmp.651,
 14426              	# sieve_extend.c:652:             *(dst+j) = (*(src+j))<<shift;
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14427              		.loc 1 652 34 view .LVU5007
 14428 4ef6 C57E6F14 		vmovdqu	ymm10, YMMWORD PTR [rsi+rax]	# tmp281, MEM[base: src_35(D), index: ivtmp.654_114, offset: 
 14428      06
 14429              	.LBE658:
 14430              	.LBB659:
 14431              	# sieve_extend.c:654:             *(dst+j) |= (*(src+1)>>(64-shift));
 654:sieve_extend.c ****     }
 14432              		.loc 1 654 34 view .LVU5008
 14433 4efb C53DD3C8 		vpsrlq	ymm9, ymm8, xmm0	# vect__57.641, vect__102.640, _4
 14434              	.LBE659:
 14435              	.LBB660:
 14436              	# sieve_extend.c:652:             *(dst+j) = (*(src+j))<<shift;
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14437              		.loc 1 652 34 view .LVU5009
 14438 4eff C52DF3D9 		vpsllq	ymm11, ymm10, xmm1	# vect__104.645, tmp281, shift
 14439              	.LBE660:
 14440              	.LBB661:
 14441              	# sieve_extend.c:654:             *(dst+j) |= (*(src+1)>>(64-shift));
 654:sieve_extend.c ****     }
 14442              		.loc 1 654 22 view .LVU5010
 14443 4f03 C44135EB 		vpor	ymm12, ymm9, ymm11	# vect__58.646, vect__57.641, vect__104.645
 14443      E3
 14444 4f08 C57E7F24 		vmovdqu	YMMWORD PTR [rdi+rax], ymm12	# MEM[base: dst_34(D), index: ivtmp.654_114, offset: 0B], vec
 14444      07
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14445              		.loc 1 653 32 is_stmt 1 view .LVU5011
 14446              	.LVL881:
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14447              		.loc 1 653 25 view .LVU5012
 14448              	.LBE661:
 649:sieve_extend.c ****     {
 14449              		.loc 1 649 24 view .LVU5013
 649:sieve_extend.c ****     {
 14450              		.loc 1 649 12 view .LVU5014
 14451 4f0d 4883C020 		add	rax, 32	# ivtmp.654,
 14452              	.L1294:
 14453              	.LVL882:
GAS LISTING /tmp/ccjg94QQ.s 			page 389


 14454              	.LBB662:
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14455              		.loc 1 651 25 view .LVU5015
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14456              		.loc 1 652 13 view .LVU5016
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14457              		.loc 1 651 32 view .LVU5017
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14458              		.loc 1 651 25 view .LVU5018
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14459              		.loc 1 652 13 view .LVU5019
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14460              		.loc 1 651 32 view .LVU5020
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14461              		.loc 1 651 25 view .LVU5021
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14462              		.loc 1 652 13 view .LVU5022
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14463              		.loc 1 651 32 view .LVU5023
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14464              		.loc 1 651 25 view .LVU5024
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14465              		.loc 1 652 13 view .LVU5025
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14466              		.loc 1 651 32 view .LVU5026
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14467              		.loc 1 651 25 view .LVU5027
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14468              		.loc 1 651 25 is_stmt 0 view .LVU5028
 14469              	.LBE662:
 14470              	.LBB663:
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14471              		.loc 1 653 25 is_stmt 1 view .LVU5029
 654:sieve_extend.c ****     }
 14472              		.loc 1 654 13 view .LVU5030
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14473              		.loc 1 653 32 view .LVU5031
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14474              		.loc 1 653 25 view .LVU5032
 654:sieve_extend.c ****     }
 14475              		.loc 1 654 13 view .LVU5033
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14476              		.loc 1 653 32 view .LVU5034
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14477              		.loc 1 653 25 view .LVU5035
 654:sieve_extend.c ****     }
 14478              		.loc 1 654 13 view .LVU5036
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14479              		.loc 1 653 32 view .LVU5037
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14480              		.loc 1 653 25 view .LVU5038
 654:sieve_extend.c ****     }
 14481              		.loc 1 654 13 view .LVU5039
 14482              	.LBE663:
 14483              	.LBB664:
 14484              	# sieve_extend.c:652:             *(dst+j) = (*(src+j))<<shift;
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
GAS LISTING /tmp/ccjg94QQ.s 			page 390


 14485              		.loc 1 652 25 is_stmt 0 view .LVU5040
 14486 4f11 C463FD00 		vpermq	ymm13, YMMWORD PTR [rsi+rax], 85	# vect__102.640, MEM[base: src_35(D), index: ivtmp.654_114
 14486      2C0655
 14487 4f18 4183C101 		add	r9d, 1	# ivtmp.651,
 14488              	# sieve_extend.c:652:             *(dst+j) = (*(src+j))<<shift;
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14489              		.loc 1 652 34 view .LVU5041
 14490 4f1c C57E6F3C 		vmovdqu	ymm15, YMMWORD PTR [rsi+rax]	# tmp282, MEM[base: src_35(D), index: ivtmp.654_114, offset: 
 14490      06
 14491              	.LBE664:
 14492              	.LBB665:
 14493              	# sieve_extend.c:654:             *(dst+j) |= (*(src+1)>>(64-shift));
 654:sieve_extend.c ****     }
 14494              		.loc 1 654 34 view .LVU5042
 14495 4f21 C515D3F0 		vpsrlq	ymm14, ymm13, xmm0	# vect__57.641, vect__102.640, _4
 14496              	.LBE665:
 14497              	.LBB666:
 14498              	# sieve_extend.c:652:             *(dst+j) = (*(src+j))<<shift;
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14499              		.loc 1 652 34 view .LVU5043
 14500 4f25 C585F3D1 		vpsllq	ymm2, ymm15, xmm1	# vect__104.645, tmp282, shift
 14501              	.LBE666:
 14502              	.LBB667:
 14503              	# sieve_extend.c:654:             *(dst+j) |= (*(src+1)>>(64-shift));
 654:sieve_extend.c ****     }
 14504              		.loc 1 654 22 view .LVU5044
 14505 4f29 C58DEBEA 		vpor	ymm5, ymm14, ymm2	# vect__58.646, vect__57.641, vect__104.645
 14506 4f2d C5FE7F2C 		vmovdqu	YMMWORD PTR [rdi+rax], ymm5	# MEM[base: dst_34(D), index: ivtmp.654_114, offset: 0B], vect
 14506      07
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14507              		.loc 1 653 32 is_stmt 1 view .LVU5045
 14508              	.LVL883:
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14509              		.loc 1 653 25 view .LVU5046
 14510              	.LBE667:
 649:sieve_extend.c ****     {
 14511              		.loc 1 649 24 view .LVU5047
 649:sieve_extend.c ****     {
 14512              		.loc 1 649 12 view .LVU5048
 14513 4f32 4883C020 		add	rax, 32	# ivtmp.654,
 14514              	.L1293:
 14515              	.LVL884:
 14516              	.LBB668:
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14517              		.loc 1 651 25 view .LVU5049
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14518              		.loc 1 652 13 view .LVU5050
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14519              		.loc 1 651 32 view .LVU5051
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14520              		.loc 1 651 25 view .LVU5052
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14521              		.loc 1 652 13 view .LVU5053
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14522              		.loc 1 651 32 view .LVU5054
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14523              		.loc 1 651 25 view .LVU5055
GAS LISTING /tmp/ccjg94QQ.s 			page 391


 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14524              		.loc 1 652 13 view .LVU5056
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14525              		.loc 1 651 32 view .LVU5057
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14526              		.loc 1 651 25 view .LVU5058
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14527              		.loc 1 652 13 view .LVU5059
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14528              		.loc 1 651 32 view .LVU5060
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14529              		.loc 1 651 25 view .LVU5061
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14530              		.loc 1 651 25 is_stmt 0 view .LVU5062
 14531              	.LBE668:
 14532              	.LBB669:
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14533              		.loc 1 653 25 is_stmt 1 view .LVU5063
 654:sieve_extend.c ****     }
 14534              		.loc 1 654 13 view .LVU5064
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14535              		.loc 1 653 32 view .LVU5065
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14536              		.loc 1 653 25 view .LVU5066
 654:sieve_extend.c ****     }
 14537              		.loc 1 654 13 view .LVU5067
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14538              		.loc 1 653 32 view .LVU5068
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14539              		.loc 1 653 25 view .LVU5069
 654:sieve_extend.c ****     }
 14540              		.loc 1 654 13 view .LVU5070
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14541              		.loc 1 653 32 view .LVU5071
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14542              		.loc 1 653 25 view .LVU5072
 654:sieve_extend.c ****     }
 14543              		.loc 1 654 13 view .LVU5073
 14544              	.LBE669:
 14545              	.LBB670:
 14546              	# sieve_extend.c:652:             *(dst+j) = (*(src+j))<<shift;
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14547              		.loc 1 652 25 is_stmt 0 view .LVU5074
 14548 4f36 C4E3FD00 		vpermq	ymm4, YMMWORD PTR [rsi+rax], 85	# vect__102.640, MEM[base: src_35(D), index: ivtmp.654_114,
 14548      240655
 14549 4f3d 4183C101 		add	r9d, 1	# ivtmp.651,
 14550              	# sieve_extend.c:652:             *(dst+j) = (*(src+j))<<shift;
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14551              		.loc 1 652 34 view .LVU5075
 14552 4f41 C5FE6F1C 		vmovdqu	ymm3, YMMWORD PTR [rsi+rax]	# tmp283, MEM[base: src_35(D), index: ivtmp.654_114, offset: 0
 14552      06
 14553              	.LBE670:
 14554              	.LBB671:
 14555              	# sieve_extend.c:654:             *(dst+j) |= (*(src+1)>>(64-shift));
 654:sieve_extend.c ****     }
 14556              		.loc 1 654 34 view .LVU5076
 14557 4f46 C5DDD3F0 		vpsrlq	ymm6, ymm4, xmm0	# vect__57.641, vect__102.640, _4
GAS LISTING /tmp/ccjg94QQ.s 			page 392


 14558              	.LBE671:
 14559              	.LBB672:
 14560              	# sieve_extend.c:652:             *(dst+j) = (*(src+j))<<shift;
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14561              		.loc 1 652 34 view .LVU5077
 14562 4f4a C5E5F3F9 		vpsllq	ymm7, ymm3, xmm1	# vect__104.645, tmp283, shift
 14563              	.LBE672:
 14564              	.LBB673:
 14565              	# sieve_extend.c:654:             *(dst+j) |= (*(src+1)>>(64-shift));
 654:sieve_extend.c ****     }
 14566              		.loc 1 654 22 view .LVU5078
 14567 4f4e C54DEBC7 		vpor	ymm8, ymm6, ymm7	# vect__58.646, vect__57.641, vect__104.645
 14568 4f52 C57E7F04 		vmovdqu	YMMWORD PTR [rdi+rax], ymm8	# MEM[base: dst_34(D), index: ivtmp.654_114, offset: 0B], vect
 14568      07
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14569              		.loc 1 653 32 is_stmt 1 view .LVU5079
 14570              	.LVL885:
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14571              		.loc 1 653 25 view .LVU5080
 14572              	.LBE673:
 649:sieve_extend.c ****     {
 14573              		.loc 1 649 24 view .LVU5081
 649:sieve_extend.c ****     {
 14574              		.loc 1 649 12 view .LVU5082
 14575 4f57 4883C020 		add	rax, 32	# ivtmp.654,
 14576              	.L1292:
 14577              	.LVL886:
 14578              	.LBB674:
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14579              		.loc 1 651 25 view .LVU5083
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14580              		.loc 1 652 13 view .LVU5084
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14581              		.loc 1 651 32 view .LVU5085
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14582              		.loc 1 651 25 view .LVU5086
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14583              		.loc 1 652 13 view .LVU5087
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14584              		.loc 1 651 32 view .LVU5088
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14585              		.loc 1 651 25 view .LVU5089
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14586              		.loc 1 652 13 view .LVU5090
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14587              		.loc 1 651 32 view .LVU5091
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14588              		.loc 1 651 25 view .LVU5092
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14589              		.loc 1 652 13 view .LVU5093
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14590              		.loc 1 651 32 view .LVU5094
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14591              		.loc 1 651 25 view .LVU5095
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14592              		.loc 1 651 25 is_stmt 0 view .LVU5096
 14593              	.LBE674:
GAS LISTING /tmp/ccjg94QQ.s 			page 393


 14594              	.LBB675:
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14595              		.loc 1 653 25 is_stmt 1 view .LVU5097
 654:sieve_extend.c ****     }
 14596              		.loc 1 654 13 view .LVU5098
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14597              		.loc 1 653 32 view .LVU5099
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14598              		.loc 1 653 25 view .LVU5100
 654:sieve_extend.c ****     }
 14599              		.loc 1 654 13 view .LVU5101
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14600              		.loc 1 653 32 view .LVU5102
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14601              		.loc 1 653 25 view .LVU5103
 654:sieve_extend.c ****     }
 14602              		.loc 1 654 13 view .LVU5104
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14603              		.loc 1 653 32 view .LVU5105
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14604              		.loc 1 653 25 view .LVU5106
 654:sieve_extend.c ****     }
 14605              		.loc 1 654 13 view .LVU5107
 14606              	.LBE675:
 14607              	.LBB676:
 14608              	# sieve_extend.c:652:             *(dst+j) = (*(src+j))<<shift;
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14609              		.loc 1 652 25 is_stmt 0 view .LVU5108
 14610 4f5b C463FD00 		vpermq	ymm9, YMMWORD PTR [rsi+rax], 85	# vect__102.640, MEM[base: src_35(D), index: ivtmp.654_114,
 14610      0C0655
 14611 4f62 4183C101 		add	r9d, 1	# ivtmp.651,
 14612              	# sieve_extend.c:652:             *(dst+j) = (*(src+j))<<shift;
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14613              		.loc 1 652 34 view .LVU5109
 14614 4f66 C57E6F1C 		vmovdqu	ymm11, YMMWORD PTR [rsi+rax]	# tmp284, MEM[base: src_35(D), index: ivtmp.654_114, offset: 
 14614      06
 14615              	.LBE676:
 14616              	.LBB677:
 14617              	# sieve_extend.c:654:             *(dst+j) |= (*(src+1)>>(64-shift));
 654:sieve_extend.c ****     }
 14618              		.loc 1 654 34 view .LVU5110
 14619 4f6b C535D3D0 		vpsrlq	ymm10, ymm9, xmm0	# vect__57.641, vect__102.640, _4
 14620              	.LBE677:
 14621              	.LBB678:
 14622              	# sieve_extend.c:652:             *(dst+j) = (*(src+j))<<shift;
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14623              		.loc 1 652 34 view .LVU5111
 14624 4f6f C525F3E1 		vpsllq	ymm12, ymm11, xmm1	# vect__104.645, tmp284, shift
 14625              	.LBE678:
 14626              	.LBB679:
 14627              	# sieve_extend.c:654:             *(dst+j) |= (*(src+1)>>(64-shift));
 654:sieve_extend.c ****     }
 14628              		.loc 1 654 22 view .LVU5112
 14629 4f73 C4412DEB 		vpor	ymm13, ymm10, ymm12	# vect__58.646, vect__57.641, vect__104.645
 14629      EC
 14630 4f78 C57E7F2C 		vmovdqu	YMMWORD PTR [rdi+rax], ymm13	# MEM[base: dst_34(D), index: ivtmp.654_114, offset: 0B], vec
 14630      07
GAS LISTING /tmp/ccjg94QQ.s 			page 394


 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14631              		.loc 1 653 32 is_stmt 1 view .LVU5113
 14632              	.LVL887:
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14633              		.loc 1 653 25 view .LVU5114
 14634              	.LBE679:
 649:sieve_extend.c ****     {
 14635              		.loc 1 649 24 view .LVU5115
 649:sieve_extend.c ****     {
 14636              		.loc 1 649 12 view .LVU5116
 14637 4f7d 4883C020 		add	rax, 32	# ivtmp.654,
 14638 4f81 4539CA   		cmp	r10d, r9d	# tmp164, ivtmp.651
 14639 4f84 0F863901 		jbe	.L1305	#,
 14639      0000
 14640              	.L1265:
 14641              	.LVL888:
 14642              	.LBB680:
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14643              		.loc 1 651 25 view .LVU5117
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14644              		.loc 1 652 13 view .LVU5118
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14645              		.loc 1 651 32 view .LVU5119
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14646              		.loc 1 651 25 view .LVU5120
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14647              		.loc 1 652 13 view .LVU5121
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14648              		.loc 1 651 32 view .LVU5122
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14649              		.loc 1 651 25 view .LVU5123
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14650              		.loc 1 652 13 view .LVU5124
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14651              		.loc 1 651 32 view .LVU5125
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14652              		.loc 1 651 25 view .LVU5126
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14653              		.loc 1 652 13 view .LVU5127
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14654              		.loc 1 651 32 view .LVU5128
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14655              		.loc 1 651 25 view .LVU5129
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14656              		.loc 1 651 25 is_stmt 0 view .LVU5130
 14657              	.LBE680:
 14658              	.LBB681:
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14659              		.loc 1 653 25 is_stmt 1 view .LVU5131
 654:sieve_extend.c ****     }
 14660              		.loc 1 654 13 view .LVU5132
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14661              		.loc 1 653 32 view .LVU5133
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14662              		.loc 1 653 25 view .LVU5134
 654:sieve_extend.c ****     }
 14663              		.loc 1 654 13 view .LVU5135
GAS LISTING /tmp/ccjg94QQ.s 			page 395


 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14664              		.loc 1 653 32 view .LVU5136
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14665              		.loc 1 653 25 view .LVU5137
 654:sieve_extend.c ****     }
 14666              		.loc 1 654 13 view .LVU5138
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14667              		.loc 1 653 32 view .LVU5139
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14668              		.loc 1 653 25 view .LVU5140
 654:sieve_extend.c ****     }
 14669              		.loc 1 654 13 view .LVU5141
 14670              	.LBE681:
 14671              	.LBB682:
 14672              	# sieve_extend.c:652:             *(dst+j) = (*(src+j))<<shift;
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14673              		.loc 1 652 25 is_stmt 0 view .LVU5142
 14674 4f8a C463FD00 		vpermq	ymm14, YMMWORD PTR [rsi+rax], 85	# vect__102.640, MEM[base: src_35(D), index: ivtmp.654_114
 14674      340655
 14675 4f91 C4E3FD00 		vpermq	ymm6, YMMWORD PTR 32[rsi+rax], 85	# vect__102.640, MEM[base: src_35(D), index: ivtmp.654_11
 14675      74062055 
 14676              	# sieve_extend.c:652:             *(dst+j) = (*(src+j))<<shift;
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14677              		.loc 1 652 34 view .LVU5143
 14678 4f99 C5FE6F14 		vmovdqu	ymm2, YMMWORD PTR [rsi+rax]	# tmp270, MEM[base: src_35(D), index: ivtmp.654_114, offset: 0
 14678      06
 14679              	# sieve_extend.c:652:             *(dst+j) = (*(src+j))<<shift;
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14680              		.loc 1 652 25 view .LVU5144
 14681 4f9e C463FD00 		vpermq	ymm10, YMMWORD PTR 64[rsi+rax], 85	# vect__102.640, MEM[base: src_35(D), index: ivtmp.654_1
 14681      54064055 
 14682              	# sieve_extend.c:652:             *(dst+j) = (*(src+j))<<shift;
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14683              		.loc 1 652 34 view .LVU5145
 14684 4fa6 C5FE6F5C 		vmovdqu	ymm3, YMMWORD PTR 32[rsi+rax]	# tmp271, MEM[base: src_35(D), index: ivtmp.654_114, offset:
 14684      0620
 14685 4fac 4183C108 		add	r9d, 8	# ivtmp.651,
 14686              	.LBE682:
 14687              	.LBB683:
 14688              	# sieve_extend.c:654:             *(dst+j) |= (*(src+1)>>(64-shift));
 654:sieve_extend.c ****     }
 14689              		.loc 1 654 34 view .LVU5146
 14690 4fb0 C50DD3F8 		vpsrlq	ymm15, ymm14, xmm0	# vect__57.641, vect__102.640, _4
 14691 4fb4 C5CDD3F8 		vpsrlq	ymm7, ymm6, xmm0	# vect__57.641, vect__102.640, _4
 14692              	.LBE683:
 14693              	.LBB684:
 14694              	# sieve_extend.c:652:             *(dst+j) = (*(src+j))<<shift;
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14695              		.loc 1 652 34 view .LVU5147
 14696 4fb8 C5EDF3E9 		vpsllq	ymm5, ymm2, xmm1	# vect__104.645, tmp270, shift
 14697 4fbc C565F3C1 		vpsllq	ymm8, ymm3, xmm1	# vect__104.645, tmp271, shift
 14698 4fc0 C57E6F64 		vmovdqu	ymm12, YMMWORD PTR 64[rsi+rax]	# tmp272, MEM[base: src_35(D), index: ivtmp.654_114, offset
 14698      0640
 14699              	.LBE684:
 14700              	.LBB685:
 14701              	# sieve_extend.c:654:             *(dst+j) |= (*(src+1)>>(64-shift));
 654:sieve_extend.c ****     }
GAS LISTING /tmp/ccjg94QQ.s 			page 396


 14702              		.loc 1 654 22 view .LVU5148
 14703 4fc6 C585EBE5 		vpor	ymm4, ymm15, ymm5	# vect__58.646, vect__57.641, vect__104.645
 14704              	.LBE685:
 14705              	.LBB686:
 14706              	# sieve_extend.c:652:             *(dst+j) = (*(src+j))<<shift;
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14707              		.loc 1 652 34 view .LVU5149
 14708 4fca C5FE6F9C 		vmovdqu	ymm3, YMMWORD PTR 128[rsi+rax]	# tmp274, MEM[base: src_35(D), index: ivtmp.654_114, offset
 14708      06800000 
 14708      00
 14709              	.LBE686:
 14710              	.LBB687:
 14711              	# sieve_extend.c:654:             *(dst+j) |= (*(src+1)>>(64-shift));
 654:sieve_extend.c ****     }
 14712              		.loc 1 654 22 view .LVU5150
 14713 4fd3 C44145EB 		vpor	ymm9, ymm7, ymm8	# vect__58.646, vect__57.641, vect__104.645
 14713      C8
 14714              	.LBE687:
 14715              	.LBB688:
 14716              	# sieve_extend.c:652:             *(dst+j) = (*(src+j))<<shift;
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14717              		.loc 1 652 25 view .LVU5151
 14718 4fd8 C463FD00 		vpermq	ymm15, YMMWORD PTR 96[rsi+rax], 85	# vect__102.640, MEM[base: src_35(D), index: ivtmp.654_1
 14718      7C066055 
 14719 4fe0 C4E3FD00 		vpermq	ymm7, YMMWORD PTR 128[rsi+rax], 85	# vect__102.640, MEM[base: src_35(D), index: ivtmp.654_1
 14719      BC068000 
 14719      000055
 14720              	# sieve_extend.c:652:             *(dst+j) = (*(src+j))<<shift;
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14721              		.loc 1 652 34 view .LVU5152
 14722 4feb C5FE6F6C 		vmovdqu	ymm5, YMMWORD PTR 96[rsi+rax]	# tmp273, MEM[base: src_35(D), index: ivtmp.654_114, offset:
 14722      0660
 14723              	.LBE688:
 14724              	.LBB689:
 14725              	# sieve_extend.c:654:             *(dst+j) |= (*(src+1)>>(64-shift));
 654:sieve_extend.c ****     }
 14726              		.loc 1 654 34 view .LVU5153
 14727 4ff1 C52DD3D8 		vpsrlq	ymm11, ymm10, xmm0	# vect__57.641, vect__102.640, _4
 14728              	.LBE689:
 14729              	.LBB690:
 14730              	# sieve_extend.c:652:             *(dst+j) = (*(src+j))<<shift;
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14731              		.loc 1 652 34 view .LVU5154
 14732 4ff5 C51DF3E9 		vpsllq	ymm13, ymm12, xmm1	# vect__104.645, tmp272, shift
 14733              	.LBE690:
 14734              	.LBB691:
 14735              	# sieve_extend.c:654:             *(dst+j) |= (*(src+1)>>(64-shift));
 654:sieve_extend.c ****     }
 14736              		.loc 1 654 34 view .LVU5155
 14737 4ff9 C585D3D0 		vpsrlq	ymm2, ymm15, xmm0	# vect__57.641, vect__102.640, _4
 14738              	# sieve_extend.c:654:             *(dst+j) |= (*(src+1)>>(64-shift));
 654:sieve_extend.c ****     }
 14739              		.loc 1 654 22 view .LVU5156
 14740 4ffd C5FE7F24 		vmovdqu	YMMWORD PTR [rdi+rax], ymm4	# MEM[base: dst_34(D), index: ivtmp.654_114, offset: 0B], vect
 14740      07
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14741              		.loc 1 653 32 is_stmt 1 view .LVU5157
GAS LISTING /tmp/ccjg94QQ.s 			page 397


 14742              	.LVL889:
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14743              		.loc 1 653 25 view .LVU5158
 14744              	.LBE691:
 649:sieve_extend.c ****     {
 14745              		.loc 1 649 24 view .LVU5159
 649:sieve_extend.c ****     {
 14746              		.loc 1 649 12 view .LVU5160
 14747              	.LBB692:
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14748              		.loc 1 651 25 view .LVU5161
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14749              		.loc 1 652 13 view .LVU5162
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14750              		.loc 1 651 32 view .LVU5163
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14751              		.loc 1 651 25 view .LVU5164
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14752              		.loc 1 652 13 view .LVU5165
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14753              		.loc 1 651 32 view .LVU5166
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14754              		.loc 1 651 25 view .LVU5167
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14755              		.loc 1 652 13 view .LVU5168
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14756              		.loc 1 651 32 view .LVU5169
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14757              		.loc 1 651 25 view .LVU5170
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14758              		.loc 1 652 13 view .LVU5171
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14759              		.loc 1 651 32 view .LVU5172
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14760              		.loc 1 651 25 view .LVU5173
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14761              		.loc 1 651 25 is_stmt 0 view .LVU5174
 14762              	.LBE692:
 14763              	.LBB693:
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14764              		.loc 1 653 25 is_stmt 1 view .LVU5175
 654:sieve_extend.c ****     }
 14765              		.loc 1 654 13 view .LVU5176
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14766              		.loc 1 653 32 view .LVU5177
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14767              		.loc 1 653 25 view .LVU5178
 654:sieve_extend.c ****     }
 14768              		.loc 1 654 13 view .LVU5179
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14769              		.loc 1 653 32 view .LVU5180
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14770              		.loc 1 653 25 view .LVU5181
 654:sieve_extend.c ****     }
 14771              		.loc 1 654 13 view .LVU5182
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14772              		.loc 1 653 32 view .LVU5183
GAS LISTING /tmp/ccjg94QQ.s 			page 398


 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14773              		.loc 1 653 25 view .LVU5184
 654:sieve_extend.c ****     }
 14774              		.loc 1 654 13 view .LVU5185
 14775              	# sieve_extend.c:654:             *(dst+j) |= (*(src+1)>>(64-shift));
 654:sieve_extend.c ****     }
 14776              		.loc 1 654 22 is_stmt 0 view .LVU5186
 14777 5002 C44125EB 		vpor	ymm14, ymm11, ymm13	# vect__58.646, vect__57.641, vect__104.645
 14777      F5
 14778              	# sieve_extend.c:654:             *(dst+j) |= (*(src+1)>>(64-shift));
 654:sieve_extend.c ****     }
 14779              		.loc 1 654 34 view .LVU5187
 14780 5007 C545D3C0 		vpsrlq	ymm8, ymm7, xmm0	# vect__57.641, vect__102.640, _4
 14781              	# sieve_extend.c:654:             *(dst+j) |= (*(src+1)>>(64-shift));
 654:sieve_extend.c ****     }
 14782              		.loc 1 654 22 view .LVU5188
 14783 500b C57E7F4C 		vmovdqu	YMMWORD PTR 32[rdi+rax], ymm9	# MEM[base: dst_34(D), index: ivtmp.654_114, offset: 0B], ve
 14783      0720
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14784              		.loc 1 653 32 is_stmt 1 view .LVU5189
 14785              	.LVL890:
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14786              		.loc 1 653 25 view .LVU5190
 14787              	.LBE693:
 649:sieve_extend.c ****     {
 14788              		.loc 1 649 24 view .LVU5191
 649:sieve_extend.c ****     {
 14789              		.loc 1 649 12 view .LVU5192
 14790              	.LBB694:
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14791              		.loc 1 651 25 view .LVU5193
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14792              		.loc 1 652 13 view .LVU5194
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14793              		.loc 1 651 32 view .LVU5195
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14794              		.loc 1 651 25 view .LVU5196
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14795              		.loc 1 652 13 view .LVU5197
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14796              		.loc 1 651 32 view .LVU5198
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14797              		.loc 1 651 25 view .LVU5199
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14798              		.loc 1 652 13 view .LVU5200
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14799              		.loc 1 651 32 view .LVU5201
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14800              		.loc 1 651 25 view .LVU5202
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14801              		.loc 1 652 13 view .LVU5203
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14802              		.loc 1 651 32 view .LVU5204
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14803              		.loc 1 651 25 view .LVU5205
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14804              		.loc 1 651 25 is_stmt 0 view .LVU5206
GAS LISTING /tmp/ccjg94QQ.s 			page 399


 14805              	.LBE694:
 14806              	.LBB695:
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14807              		.loc 1 653 25 is_stmt 1 view .LVU5207
 654:sieve_extend.c ****     }
 14808              		.loc 1 654 13 view .LVU5208
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14809              		.loc 1 653 32 view .LVU5209
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14810              		.loc 1 653 25 view .LVU5210
 654:sieve_extend.c ****     }
 14811              		.loc 1 654 13 view .LVU5211
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14812              		.loc 1 653 32 view .LVU5212
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14813              		.loc 1 653 25 view .LVU5213
 654:sieve_extend.c ****     }
 14814              		.loc 1 654 13 view .LVU5214
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14815              		.loc 1 653 32 view .LVU5215
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14816              		.loc 1 653 25 view .LVU5216
 654:sieve_extend.c ****     }
 14817              		.loc 1 654 13 view .LVU5217
 14818              	.LBE695:
 14819              	.LBB696:
 14820              	# sieve_extend.c:652:             *(dst+j) = (*(src+j))<<shift;
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14821              		.loc 1 652 25 is_stmt 0 view .LVU5218
 14822 5011 C463FD00 		vpermq	ymm11, YMMWORD PTR 160[rsi+rax], 85	# vect__102.640, MEM[base: src_35(D), index: ivtmp.654_
 14822      9C06A000 
 14822      000055
 14823              	# sieve_extend.c:652:             *(dst+j) = (*(src+j))<<shift;
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14824              		.loc 1 652 34 view .LVU5219
 14825 501c C5D5F3E1 		vpsllq	ymm4, ymm5, xmm1	# vect__104.645, tmp273, shift
 14826 5020 C565F3C9 		vpsllq	ymm9, ymm3, xmm1	# vect__104.645, tmp274, shift
 14827 5024 C57E6FAC 		vmovdqu	ymm13, YMMWORD PTR 160[rsi+rax]	# tmp275, MEM[base: src_35(D), index: ivtmp.654_114, offse
 14827      06A00000 
 14827      00
 14828              	.LBE696:
 14829              	.LBB697:
 14830              	# sieve_extend.c:654:             *(dst+j) |= (*(src+1)>>(64-shift));
 654:sieve_extend.c ****     }
 14831              		.loc 1 654 22 view .LVU5220
 14832 502d C5EDEBF4 		vpor	ymm6, ymm2, ymm4	# vect__58.646, vect__57.641, vect__104.645
 14833              	.LBE697:
 14834              	.LBB698:
 14835              	# sieve_extend.c:652:             *(dst+j) = (*(src+j))<<shift;
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14836              		.loc 1 652 34 view .LVU5221
 14837 5031 C5FE6F9C 		vmovdqu	ymm3, YMMWORD PTR 224[rsi+rax]	# tmp277, MEM[base: src_35(D), index: ivtmp.654_114, offset
 14837      06E00000 
 14837      00
 14838              	.LBE698:
 14839              	.LBB699:
 14840              	# sieve_extend.c:654:             *(dst+j) |= (*(src+1)>>(64-shift));
GAS LISTING /tmp/ccjg94QQ.s 			page 400


 654:sieve_extend.c ****     }
 14841              		.loc 1 654 22 view .LVU5222
 14842 503a C4413DEB 		vpor	ymm10, ymm8, ymm9	# vect__58.646, vect__57.641, vect__104.645
 14842      D1
 14843              	.LBE699:
 14844              	.LBB700:
 14845              	# sieve_extend.c:652:             *(dst+j) = (*(src+j))<<shift;
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14846              		.loc 1 652 25 view .LVU5223
 14847 503f C4E3FD00 		vpermq	ymm2, YMMWORD PTR 192[rsi+rax], 85	# vect__102.640, MEM[base: src_35(D), index: ivtmp.654_1
 14847      9406C000 
 14847      000055
 14848 504a C463FD00 		vpermq	ymm8, YMMWORD PTR 224[rsi+rax], 85	# vect__102.640, MEM[base: src_35(D), index: ivtmp.654_1
 14848      8406E000 
 14848      000055
 14849              	# sieve_extend.c:652:             *(dst+j) = (*(src+j))<<shift;
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14850              		.loc 1 652 34 view .LVU5224
 14851 5055 C5FE6FA4 		vmovdqu	ymm4, YMMWORD PTR 192[rsi+rax]	# tmp276, MEM[base: src_35(D), index: ivtmp.654_114, offset
 14851      06C00000 
 14851      00
 14852              	.LBE700:
 14853              	.LBB701:
 14854              	# sieve_extend.c:654:             *(dst+j) |= (*(src+1)>>(64-shift));
 654:sieve_extend.c ****     }
 14855              		.loc 1 654 22 view .LVU5225
 14856 505e C57E7F74 		vmovdqu	YMMWORD PTR 64[rdi+rax], ymm14	# MEM[base: dst_34(D), index: ivtmp.654_114, offset: 0B], v
 14856      0740
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14857              		.loc 1 653 32 is_stmt 1 view .LVU5226
 14858              	.LVL891:
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14859              		.loc 1 653 25 view .LVU5227
 14860              	.LBE701:
 649:sieve_extend.c ****     {
 14861              		.loc 1 649 24 view .LVU5228
 649:sieve_extend.c ****     {
 14862              		.loc 1 649 12 view .LVU5229
 14863              	.LBB702:
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14864              		.loc 1 651 25 view .LVU5230
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14865              		.loc 1 652 13 view .LVU5231
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14866              		.loc 1 651 32 view .LVU5232
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14867              		.loc 1 651 25 view .LVU5233
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14868              		.loc 1 652 13 view .LVU5234
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14869              		.loc 1 651 32 view .LVU5235
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14870              		.loc 1 651 25 view .LVU5236
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14871              		.loc 1 652 13 view .LVU5237
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14872              		.loc 1 651 32 view .LVU5238
GAS LISTING /tmp/ccjg94QQ.s 			page 401


 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14873              		.loc 1 651 25 view .LVU5239
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14874              		.loc 1 652 13 view .LVU5240
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14875              		.loc 1 651 32 view .LVU5241
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14876              		.loc 1 651 25 view .LVU5242
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14877              		.loc 1 651 25 is_stmt 0 view .LVU5243
 14878              	.LBE702:
 14879              	.LBB703:
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14880              		.loc 1 653 25 is_stmt 1 view .LVU5244
 654:sieve_extend.c ****     }
 14881              		.loc 1 654 13 view .LVU5245
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14882              		.loc 1 653 32 view .LVU5246
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14883              		.loc 1 653 25 view .LVU5247
 654:sieve_extend.c ****     }
 14884              		.loc 1 654 13 view .LVU5248
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14885              		.loc 1 653 32 view .LVU5249
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14886              		.loc 1 653 25 view .LVU5250
 654:sieve_extend.c ****     }
 14887              		.loc 1 654 13 view .LVU5251
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14888              		.loc 1 653 32 view .LVU5252
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14889              		.loc 1 653 25 view .LVU5253
 654:sieve_extend.c ****     }
 14890              		.loc 1 654 13 view .LVU5254
 14891              	# sieve_extend.c:654:             *(dst+j) |= (*(src+1)>>(64-shift));
 654:sieve_extend.c ****     }
 14892              		.loc 1 654 34 is_stmt 0 view .LVU5255
 14893 5064 C525D3E0 		vpsrlq	ymm12, ymm11, xmm0	# vect__57.641, vect__102.640, _4
 14894              	# sieve_extend.c:654:             *(dst+j) |= (*(src+1)>>(64-shift));
 654:sieve_extend.c ****     }
 14895              		.loc 1 654 22 view .LVU5256
 14896 5068 C5FE7F74 		vmovdqu	YMMWORD PTR 96[rdi+rax], ymm6	# MEM[base: dst_34(D), index: ivtmp.654_114, offset: 0B], ve
 14896      0760
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14897              		.loc 1 653 32 is_stmt 1 view .LVU5257
 14898              	.LVL892:
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14899              		.loc 1 653 25 view .LVU5258
 14900              	.LBE703:
 649:sieve_extend.c ****     {
 14901              		.loc 1 649 24 view .LVU5259
 649:sieve_extend.c ****     {
 14902              		.loc 1 649 12 view .LVU5260
 14903              	.LBB704:
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14904              		.loc 1 651 25 view .LVU5261
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
GAS LISTING /tmp/ccjg94QQ.s 			page 402


 14905              		.loc 1 652 13 view .LVU5262
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14906              		.loc 1 651 32 view .LVU5263
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14907              		.loc 1 651 25 view .LVU5264
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14908              		.loc 1 652 13 view .LVU5265
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14909              		.loc 1 651 32 view .LVU5266
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14910              		.loc 1 651 25 view .LVU5267
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14911              		.loc 1 652 13 view .LVU5268
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14912              		.loc 1 651 32 view .LVU5269
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14913              		.loc 1 651 25 view .LVU5270
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14914              		.loc 1 652 13 view .LVU5271
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14915              		.loc 1 651 32 view .LVU5272
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14916              		.loc 1 651 25 view .LVU5273
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14917              		.loc 1 651 25 is_stmt 0 view .LVU5274
 14918              	.LBE704:
 14919              	.LBB705:
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14920              		.loc 1 653 25 is_stmt 1 view .LVU5275
 654:sieve_extend.c ****     }
 14921              		.loc 1 654 13 view .LVU5276
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14922              		.loc 1 653 32 view .LVU5277
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14923              		.loc 1 653 25 view .LVU5278
 654:sieve_extend.c ****     }
 14924              		.loc 1 654 13 view .LVU5279
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14925              		.loc 1 653 32 view .LVU5280
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14926              		.loc 1 653 25 view .LVU5281
 654:sieve_extend.c ****     }
 14927              		.loc 1 654 13 view .LVU5282
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14928              		.loc 1 653 32 view .LVU5283
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14929              		.loc 1 653 25 view .LVU5284
 654:sieve_extend.c ****     }
 14930              		.loc 1 654 13 view .LVU5285
 14931              	# sieve_extend.c:654:             *(dst+j) |= (*(src+1)>>(64-shift));
 654:sieve_extend.c ****     }
 14932              		.loc 1 654 22 is_stmt 0 view .LVU5286
 14933 506e C57E7F94 		vmovdqu	YMMWORD PTR 128[rdi+rax], ymm10	# MEM[base: dst_34(D), index: ivtmp.654_114, offset: 0B], 
 14933      07800000 
 14933      00
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14934              		.loc 1 653 32 is_stmt 1 view .LVU5287
GAS LISTING /tmp/ccjg94QQ.s 			page 403


 14935              	.LVL893:
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14936              		.loc 1 653 25 view .LVU5288
 14937              	.LBE705:
 649:sieve_extend.c ****     {
 14938              		.loc 1 649 24 view .LVU5289
 649:sieve_extend.c ****     {
 14939              		.loc 1 649 12 view .LVU5290
 14940              	.LBB706:
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14941              		.loc 1 651 25 view .LVU5291
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14942              		.loc 1 652 13 view .LVU5292
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14943              		.loc 1 651 32 view .LVU5293
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14944              		.loc 1 651 25 view .LVU5294
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14945              		.loc 1 652 13 view .LVU5295
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14946              		.loc 1 651 32 view .LVU5296
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14947              		.loc 1 651 25 view .LVU5297
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14948              		.loc 1 652 13 view .LVU5298
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14949              		.loc 1 651 32 view .LVU5299
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14950              		.loc 1 651 25 view .LVU5300
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14951              		.loc 1 652 13 view .LVU5301
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14952              		.loc 1 651 32 view .LVU5302
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14953              		.loc 1 651 25 view .LVU5303
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14954              		.loc 1 651 25 is_stmt 0 view .LVU5304
 14955              	.LBE706:
 14956              	.LBB707:
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14957              		.loc 1 653 25 is_stmt 1 view .LVU5305
 654:sieve_extend.c ****     }
 14958              		.loc 1 654 13 view .LVU5306
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14959              		.loc 1 653 32 view .LVU5307
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14960              		.loc 1 653 25 view .LVU5308
 654:sieve_extend.c ****     }
 14961              		.loc 1 654 13 view .LVU5309
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14962              		.loc 1 653 32 view .LVU5310
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14963              		.loc 1 653 25 view .LVU5311
 654:sieve_extend.c ****     }
 14964              		.loc 1 654 13 view .LVU5312
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14965              		.loc 1 653 32 view .LVU5313
GAS LISTING /tmp/ccjg94QQ.s 			page 404


 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14966              		.loc 1 653 25 view .LVU5314
 654:sieve_extend.c ****     }
 14967              		.loc 1 654 13 view .LVU5315
 14968              	# sieve_extend.c:654:             *(dst+j) |= (*(src+1)>>(64-shift));
 654:sieve_extend.c ****     }
 14969              		.loc 1 654 34 is_stmt 0 view .LVU5316
 14970 5077 C5EDD3E8 		vpsrlq	ymm5, ymm2, xmm0	# vect__57.641, vect__102.640, _4
 14971              	.LBE707:
 14972              	.LBB708:
 14973              	# sieve_extend.c:652:             *(dst+j) = (*(src+j))<<shift;
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14974              		.loc 1 652 34 view .LVU5317
 14975 507b C515F3F1 		vpsllq	ymm14, ymm13, xmm1	# vect__104.645, tmp275, shift
 14976              	.LBE708:
 14977              	.LBB709:
 14978              	# sieve_extend.c:654:             *(dst+j) |= (*(src+1)>>(64-shift));
 654:sieve_extend.c ****     }
 14979              		.loc 1 654 34 view .LVU5318
 14980 507f C53DD3C8 		vpsrlq	ymm9, ymm8, xmm0	# vect__57.641, vect__102.640, _4
 14981              	.LBE709:
 14982              	.LBB710:
 14983              	# sieve_extend.c:652:             *(dst+j) = (*(src+j))<<shift;
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14984              		.loc 1 652 34 view .LVU5319
 14985 5083 C5DDF3F1 		vpsllq	ymm6, ymm4, xmm1	# vect__104.645, tmp276, shift
 14986 5087 C565F3D1 		vpsllq	ymm10, ymm3, xmm1	# vect__104.645, tmp277, shift
 14987              	.LBE710:
 14988              	.LBB711:
 14989              	# sieve_extend.c:654:             *(dst+j) |= (*(src+1)>>(64-shift));
 654:sieve_extend.c ****     }
 14990              		.loc 1 654 22 view .LVU5320
 14991 508b C4411DEB 		vpor	ymm15, ymm12, ymm14	# vect__58.646, vect__57.641, vect__104.645
 14991      FE
 14992 5090 C5D5EBFE 		vpor	ymm7, ymm5, ymm6	# vect__58.646, vect__57.641, vect__104.645
 14993 5094 C57E7FBC 		vmovdqu	YMMWORD PTR 160[rdi+rax], ymm15	# MEM[base: dst_34(D), index: ivtmp.654_114, offset: 0B], 
 14993      07A00000 
 14993      00
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14994              		.loc 1 653 32 is_stmt 1 view .LVU5321
 14995              	.LVL894:
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14996              		.loc 1 653 25 view .LVU5322
 14997              	.LBE711:
 649:sieve_extend.c ****     {
 14998              		.loc 1 649 24 view .LVU5323
 649:sieve_extend.c ****     {
 14999              		.loc 1 649 12 view .LVU5324
 15000              	.LBB712:
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15001              		.loc 1 651 25 view .LVU5325
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15002              		.loc 1 652 13 view .LVU5326
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15003              		.loc 1 651 32 view .LVU5327
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15004              		.loc 1 651 25 view .LVU5328
GAS LISTING /tmp/ccjg94QQ.s 			page 405


 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15005              		.loc 1 652 13 view .LVU5329
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15006              		.loc 1 651 32 view .LVU5330
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15007              		.loc 1 651 25 view .LVU5331
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15008              		.loc 1 652 13 view .LVU5332
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15009              		.loc 1 651 32 view .LVU5333
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15010              		.loc 1 651 25 view .LVU5334
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15011              		.loc 1 652 13 view .LVU5335
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15012              		.loc 1 651 32 view .LVU5336
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15013              		.loc 1 651 25 view .LVU5337
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15014              		.loc 1 651 25 is_stmt 0 view .LVU5338
 15015              	.LBE712:
 15016              	.LBB713:
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15017              		.loc 1 653 25 is_stmt 1 view .LVU5339
 654:sieve_extend.c ****     }
 15018              		.loc 1 654 13 view .LVU5340
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15019              		.loc 1 653 32 view .LVU5341
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15020              		.loc 1 653 25 view .LVU5342
 654:sieve_extend.c ****     }
 15021              		.loc 1 654 13 view .LVU5343
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15022              		.loc 1 653 32 view .LVU5344
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15023              		.loc 1 653 25 view .LVU5345
 654:sieve_extend.c ****     }
 15024              		.loc 1 654 13 view .LVU5346
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15025              		.loc 1 653 32 view .LVU5347
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15026              		.loc 1 653 25 view .LVU5348
 654:sieve_extend.c ****     }
 15027              		.loc 1 654 13 view .LVU5349
 15028              	# sieve_extend.c:654:             *(dst+j) |= (*(src+1)>>(64-shift));
 654:sieve_extend.c ****     }
 15029              		.loc 1 654 22 is_stmt 0 view .LVU5350
 15030 509d C44135EB 		vpor	ymm11, ymm9, ymm10	# vect__58.646, vect__57.641, vect__104.645
 15030      DA
 15031 50a2 C5FE7FBC 		vmovdqu	YMMWORD PTR 192[rdi+rax], ymm7	# MEM[base: dst_34(D), index: ivtmp.654_114, offset: 0B], v
 15031      07C00000 
 15031      00
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15032              		.loc 1 653 32 is_stmt 1 view .LVU5351
 15033              	.LVL895:
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15034              		.loc 1 653 25 view .LVU5352
GAS LISTING /tmp/ccjg94QQ.s 			page 406


 15035              	.LBE713:
 649:sieve_extend.c ****     {
 15036              		.loc 1 649 24 view .LVU5353
 649:sieve_extend.c ****     {
 15037              		.loc 1 649 12 view .LVU5354
 15038              	.LBB714:
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15039              		.loc 1 651 25 view .LVU5355
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15040              		.loc 1 652 13 view .LVU5356
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15041              		.loc 1 651 32 view .LVU5357
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15042              		.loc 1 651 25 view .LVU5358
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15043              		.loc 1 652 13 view .LVU5359
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15044              		.loc 1 651 32 view .LVU5360
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15045              		.loc 1 651 25 view .LVU5361
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15046              		.loc 1 652 13 view .LVU5362
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15047              		.loc 1 651 32 view .LVU5363
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15048              		.loc 1 651 25 view .LVU5364
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15049              		.loc 1 652 13 view .LVU5365
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15050              		.loc 1 651 32 view .LVU5366
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15051              		.loc 1 651 25 view .LVU5367
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15052              		.loc 1 651 25 is_stmt 0 view .LVU5368
 15053              	.LBE714:
 15054              	.LBB715:
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15055              		.loc 1 653 25 is_stmt 1 view .LVU5369
 654:sieve_extend.c ****     }
 15056              		.loc 1 654 13 view .LVU5370
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15057              		.loc 1 653 32 view .LVU5371
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15058              		.loc 1 653 25 view .LVU5372
 654:sieve_extend.c ****     }
 15059              		.loc 1 654 13 view .LVU5373
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15060              		.loc 1 653 32 view .LVU5374
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15061              		.loc 1 653 25 view .LVU5375
 654:sieve_extend.c ****     }
 15062              		.loc 1 654 13 view .LVU5376
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15063              		.loc 1 653 32 view .LVU5377
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15064              		.loc 1 653 25 view .LVU5378
 654:sieve_extend.c ****     }
GAS LISTING /tmp/ccjg94QQ.s 			page 407


 15065              		.loc 1 654 13 view .LVU5379
 15066              	# sieve_extend.c:654:             *(dst+j) |= (*(src+1)>>(64-shift));
 654:sieve_extend.c ****     }
 15067              		.loc 1 654 22 is_stmt 0 view .LVU5380
 15068 50ab C57E7F9C 		vmovdqu	YMMWORD PTR 224[rdi+rax], ymm11	# MEM[base: dst_34(D), index: ivtmp.654_114, offset: 0B], 
 15068      07E00000 
 15068      00
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15069              		.loc 1 653 32 is_stmt 1 view .LVU5381
 15070              	.LVL896:
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15071              		.loc 1 653 25 view .LVU5382
 15072              	.LBE715:
 649:sieve_extend.c ****     {
 15073              		.loc 1 649 24 view .LVU5383
 649:sieve_extend.c ****     {
 15074              		.loc 1 649 12 view .LVU5384
 15075 50b4 48050001 		add	rax, 256	# ivtmp.654,
 15075      0000
 15076 50ba 4539CA   		cmp	r10d, r9d	# tmp164, ivtmp.651
 15077 50bd 0F87C7FE 		ja	.L1265	#,
 15077      FFFF
 15078              	.L1305:
 15079 50c3 4589C3   		mov	r11d, r8d	# _25, _25
 15080 50c6 428D0495 		lea	eax, 0[0+r10*4]	# i,
 15080      00000000 
 15081 50ce 4983C301 		add	r11, 1	# tmp140,
 15082 50d2 49C1E305 		sal	r11, 5	# _105,
 15083 50d6 4C01DF   		add	rdi, r11	# dst, _105
 15084 50d9 4C01DE   		add	rsi, r11	# src, _105
 15085 50dc C5F877   		vzeroupper
 15086              	.LVL897:
 15087              	.L1266:
 656:sieve_extend.c ****     {
 15088              		.loc 1 656 12 view .LVU5385
 15089              	# sieve_extend.c:656:     for (; i < size; ++i,++src,++dst)
 656:sieve_extend.c ****     {
 15090              		.loc 1 656 5 is_stmt 0 view .LVU5386
 15091 50df 39C2     		cmp	edx, eax	# size, i
 15092 50e1 0F8E9400 		jle	.L1309	#,
 15092      0000
 15093              	# sieve_extend.c:658:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 658:sieve_extend.c ****     }    
 15094              		.loc 1 658 35 view .LVU5387
 15095 50e7 4C8B5608 		mov	r10, QWORD PTR 8[rsi]	# _57, MEM[(const uint64_t *)src_30 + 8B]
 15096 50eb 41B84000 		mov	r8d, 64	# tmp142,
 15096      0000
 15097              	# sieve_extend.c:658:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 658:sieve_extend.c ****     }    
 15098              		.loc 1 658 23 view .LVU5388
 15099 50f1 C462F3F7 		shrx	r9, QWORD PTR [rsi], rcx	# tmp143, *src_30, shift
 15099      0E
 15100 50f6 4129C8   		sub	r8d, ecx	# _97, shift
 658:sieve_extend.c ****     }    
 15101              		.loc 1 658 9 is_stmt 1 view .LVU5389
 15102              	# sieve_extend.c:658:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 658:sieve_extend.c ****     }    
GAS LISTING /tmp/ccjg94QQ.s 			page 408


 15103              		.loc 1 658 43 is_stmt 0 view .LVU5390
 15104 50f9 C442B9F7 		shlx	r11, r10, r8	# tmp145, _57, _97
 15104      DA
 15105              	# sieve_extend.c:658:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 658:sieve_extend.c ****     }    
 15106              		.loc 1 658 32 view .LVU5391
 15107 50fe 4D09D9   		or	r9, r11	# tmp146, tmp145
 15108 5101 4C890F   		mov	QWORD PTR [rdi], r9	# *dst_86, tmp146
 656:sieve_extend.c ****     {
 15109              		.loc 1 656 22 is_stmt 1 view .LVU5392
 15110              	.LVL898:
 656:sieve_extend.c ****     {
 15111              		.loc 1 656 12 view .LVU5393
 15112              	# sieve_extend.c:656:     for (; i < size; ++i,++src,++dst)
 656:sieve_extend.c ****     {
 15113              		.loc 1 656 22 is_stmt 0 view .LVU5394
 15114 5104 448D4801 		lea	r9d, 1[rax]	# i,
 15115              	.LVL899:
 15116              	# sieve_extend.c:656:     for (; i < size; ++i,++src,++dst)
 656:sieve_extend.c ****     {
 15117              		.loc 1 656 5 view .LVU5395
 15118 5108 4439CA   		cmp	edx, r9d	# size, i
 15119 510b 7E6D     		jle	.L1306	#,
 658:sieve_extend.c ****     }    
 15120              		.loc 1 658 9 is_stmt 1 view .LVU5396
 15121              	# sieve_extend.c:658:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 658:sieve_extend.c ****     }    
 15122              		.loc 1 658 35 is_stmt 0 view .LVU5397
 15123 510d 4C8B4E10 		mov	r9, QWORD PTR 16[rsi]	# _109, MEM[(const uint64_t *)src_30 + 16B]
 15124              	.LVL900:
 15125              	# sieve_extend.c:658:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 658:sieve_extend.c ****     }    
 15126              		.loc 1 658 23 view .LVU5398
 15127 5111 C442F3F7 		shrx	r10, r10, rcx	# tmp148, _57, shift
 15127      D2
 15128              	# sieve_extend.c:658:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 658:sieve_extend.c ****     }    
 15129              		.loc 1 658 43 view .LVU5399
 15130 5116 C442B9F7 		shlx	r11, r9, r8	# tmp149, _109, _97
 15130      D9
 15131              	# sieve_extend.c:658:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 658:sieve_extend.c ****     }    
 15132              		.loc 1 658 32 view .LVU5400
 15133 511b 4D09DA   		or	r10, r11	# tmp150, tmp149
 15134 511e 4C895708 		mov	QWORD PTR 8[rdi], r10	# MEM[(uint64_t *)dst_86 + 8B], tmp150
 656:sieve_extend.c ****     {
 15135              		.loc 1 656 22 is_stmt 1 view .LVU5401
 15136              	.LVL901:
 656:sieve_extend.c ****     {
 15137              		.loc 1 656 12 view .LVU5402
 15138              	# sieve_extend.c:656:     for (; i < size; ++i,++src,++dst)
 656:sieve_extend.c ****     {
 15139              		.loc 1 656 22 is_stmt 0 view .LVU5403
 15140 5122 448D5002 		lea	r10d, 2[rax]	# i,
 15141              	.LVL902:
 15142              	# sieve_extend.c:656:     for (; i < size; ++i,++src,++dst)
 656:sieve_extend.c ****     {
GAS LISTING /tmp/ccjg94QQ.s 			page 409


 15143              		.loc 1 656 5 view .LVU5404
 15144 5126 4439D2   		cmp	edx, r10d	# size, i
 15145 5129 7E4F     		jle	.L1306	#,
 658:sieve_extend.c ****     }    
 15146              		.loc 1 658 9 is_stmt 1 view .LVU5405
 15147              	# sieve_extend.c:658:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 658:sieve_extend.c ****     }    
 15148              		.loc 1 658 35 is_stmt 0 view .LVU5406
 15149 512b 4C8B5618 		mov	r10, QWORD PTR 24[rsi]	# _54, MEM[(const uint64_t *)src_30 + 24B]
 15150              	.LVL903:
 15151              	# sieve_extend.c:658:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 658:sieve_extend.c ****     }    
 15152              		.loc 1 658 23 view .LVU5407
 15153 512f C442F3F7 		shrx	r9, r9, rcx	# tmp152, _109, shift
 15153      C9
 15154              	# sieve_extend.c:658:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 658:sieve_extend.c ****     }    
 15155              		.loc 1 658 43 view .LVU5408
 15156 5134 C442B9F7 		shlx	r11, r10, r8	# tmp153, _54, _97
 15156      DA
 15157              	# sieve_extend.c:658:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 658:sieve_extend.c ****     }    
 15158              		.loc 1 658 32 view .LVU5409
 15159 5139 4D09D9   		or	r9, r11	# tmp154, tmp153
 15160 513c 4C894F10 		mov	QWORD PTR 16[rdi], r9	# MEM[(uint64_t *)dst_86 + 16B], tmp154
 656:sieve_extend.c ****     {
 15161              		.loc 1 656 22 is_stmt 1 view .LVU5410
 15162              	.LVL904:
 656:sieve_extend.c ****     {
 15163              		.loc 1 656 12 view .LVU5411
 15164              	# sieve_extend.c:656:     for (; i < size; ++i,++src,++dst)
 656:sieve_extend.c ****     {
 15165              		.loc 1 656 22 is_stmt 0 view .LVU5412
 15166 5140 448D4803 		lea	r9d, 3[rax]	# i,
 15167              	.LVL905:
 15168              	# sieve_extend.c:656:     for (; i < size; ++i,++src,++dst)
 656:sieve_extend.c ****     {
 15169              		.loc 1 656 5 view .LVU5413
 15170 5144 4439CA   		cmp	edx, r9d	# size, i
 15171 5147 7E31     		jle	.L1306	#,
 658:sieve_extend.c ****     }    
 15172              		.loc 1 658 9 is_stmt 1 view .LVU5414
 15173              	# sieve_extend.c:658:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 658:sieve_extend.c ****     }    
 15174              		.loc 1 658 35 is_stmt 0 view .LVU5415
 15175 5149 4C8B4E20 		mov	r9, QWORD PTR 32[rsi]	# _77, MEM[(const uint64_t *)src_30 + 32B]
 15176              	.LVL906:
 15177              	# sieve_extend.c:656:     for (; i < size; ++i,++src,++dst)
 656:sieve_extend.c ****     {
 15178              		.loc 1 656 22 view .LVU5416
 15179 514d 83C004   		add	eax, 4	# i,
 15180              	.LVL907:
 15181              	# sieve_extend.c:658:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 658:sieve_extend.c ****     }    
 15182              		.loc 1 658 23 view .LVU5417
 15183 5150 C442F3F7 		shrx	r10, r10, rcx	# tmp156, _54, shift
 15183      D2
GAS LISTING /tmp/ccjg94QQ.s 			page 410


 15184              	# sieve_extend.c:658:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 658:sieve_extend.c ****     }    
 15185              		.loc 1 658 43 view .LVU5418
 15186 5155 C442B9F7 		shlx	r11, r9, r8	# tmp157, _77, _97
 15186      D9
 15187              	# sieve_extend.c:658:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 658:sieve_extend.c ****     }    
 15188              		.loc 1 658 32 view .LVU5419
 15189 515a 4D09DA   		or	r10, r11	# tmp158, tmp157
 15190              	# sieve_extend.c:656:     for (; i < size; ++i,++src,++dst)
 656:sieve_extend.c ****     {
 15191              		.loc 1 656 5 view .LVU5420
 15192 515d 39C2     		cmp	edx, eax	# size, i
 15193              	# sieve_extend.c:658:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 658:sieve_extend.c ****     }    
 15194              		.loc 1 658 32 view .LVU5421
 15195 515f 4C895718 		mov	QWORD PTR 24[rdi], r10	# MEM[(uint64_t *)dst_86 + 24B], tmp158
 656:sieve_extend.c ****     {
 15196              		.loc 1 656 22 is_stmt 1 view .LVU5422
 15197              	.LVL908:
 656:sieve_extend.c ****     {
 15198              		.loc 1 656 12 view .LVU5423
 15199              	# sieve_extend.c:656:     for (; i < size; ++i,++src,++dst)
 656:sieve_extend.c ****     {
 15200              		.loc 1 656 5 is_stmt 0 view .LVU5424
 15201 5163 7E15     		jle	.L1306	#,
 658:sieve_extend.c ****     }    
 15202              		.loc 1 658 9 is_stmt 1 discriminator 2 view .LVU5425
 15203              	# sieve_extend.c:658:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 658:sieve_extend.c ****     }    
 15204              		.loc 1 658 43 is_stmt 0 discriminator 2 view .LVU5426
 15205 5165 488B5628 		mov	rdx, QWORD PTR 40[rsi]	# MEM[(const uint64_t *)src_30 + 40B], MEM[(const uint64_t *)src_30 + 4
 15206              	.LVL909:
 15207              	# sieve_extend.c:658:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 658:sieve_extend.c ****     }    
 15208              		.loc 1 658 23 discriminator 2 view .LVU5427
 15209 5169 C4C2F3F7 		shrx	rcx, r9, rcx	# tmp162, _77, shift
 15209      C9
 15210              	.LVL910:
 15211              	# sieve_extend.c:658:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 658:sieve_extend.c ****     }    
 15212              		.loc 1 658 43 discriminator 2 view .LVU5428
 15213 516e C4E2B9F7 		shlx	rsi, rdx, r8	# tmp160, MEM[(const uint64_t *)src_30 + 40B], _97
 15213      F2
 15214              	.LVL911:
 15215              	# sieve_extend.c:658:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 658:sieve_extend.c ****     }    
 15216              		.loc 1 658 32 discriminator 2 view .LVU5429
 15217 5173 4809F1   		or	rcx, rsi	# tmp163, tmp160
 15218 5176 48894F20 		mov	QWORD PTR 32[rdi], rcx	# MEM[(uint64_t *)dst_86 + 32B], tmp163
 656:sieve_extend.c ****     {
 15219              		.loc 1 656 22 is_stmt 1 discriminator 2 view .LVU5430
 15220              	.LVL912:
 656:sieve_extend.c ****     {
 15221              		.loc 1 656 12 discriminator 2 view .LVU5431
 15222              	.L1306:
 15223              	# sieve_extend.c:660: }
GAS LISTING /tmp/ccjg94QQ.s 			page 411


 660:sieve_extend.c **** 
 15224              		.loc 1 660 1 is_stmt 0 view .LVU5432
 15225 517a C3       		ret	
 15226              	.LVL913:
 15227              	.L1309:
 660:sieve_extend.c **** 
 15228              		.loc 1 660 1 view .LVU5433
 15229 517b C3       		ret	
 15230              	.LVL914:
 15231              	.L1308:
 15232              	.LBB716:
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15233              		.loc 1 651 25 is_stmt 1 view .LVU5434
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15234              		.loc 1 652 13 view .LVU5435
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15235              		.loc 1 651 32 view .LVU5436
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15236              		.loc 1 651 25 view .LVU5437
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15237              		.loc 1 652 13 view .LVU5438
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15238              		.loc 1 651 32 view .LVU5439
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15239              		.loc 1 651 25 view .LVU5440
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15240              		.loc 1 652 13 view .LVU5441
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15241              		.loc 1 651 32 view .LVU5442
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15242              		.loc 1 651 25 view .LVU5443
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15243              		.loc 1 652 13 view .LVU5444
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15244              		.loc 1 651 32 view .LVU5445
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15245              		.loc 1 651 25 view .LVU5446
 651:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15246              		.loc 1 651 25 is_stmt 0 view .LVU5447
 15247              	.LBE716:
 15248              	.LBB717:
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15249              		.loc 1 653 25 is_stmt 1 view .LVU5448
 654:sieve_extend.c ****     }
 15250              		.loc 1 654 13 view .LVU5449
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15251              		.loc 1 653 32 view .LVU5450
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15252              		.loc 1 653 25 view .LVU5451
 654:sieve_extend.c ****     }
 15253              		.loc 1 654 13 view .LVU5452
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15254              		.loc 1 653 32 view .LVU5453
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15255              		.loc 1 653 25 view .LVU5454
 654:sieve_extend.c ****     }
 15256              		.loc 1 654 13 view .LVU5455
GAS LISTING /tmp/ccjg94QQ.s 			page 412


 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15257              		.loc 1 653 32 view .LVU5456
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15258              		.loc 1 653 25 view .LVU5457
 654:sieve_extend.c ****     }
 15259              		.loc 1 654 13 view .LVU5458
 15260              	.LBE717:
 15261              	.LBB718:
 15262              	# sieve_extend.c:652:             *(dst+j) = (*(src+j))<<shift;
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15263              		.loc 1 652 25 is_stmt 0 view .LVU5459
 15264 517c C4E3FD00 		vpermq	ymm7, YMMWORD PTR 32[rsi], 85	# vect__102.640, MEM[base: src_35(D), index: ivtmp.654_114, o
 15264      7E2055
 15265 5183 41B90200 		mov	r9d, 2	# ivtmp.651,
 15265      0000
 15266              	# sieve_extend.c:652:             *(dst+j) = (*(src+j))<<shift;
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15267              		.loc 1 652 34 view .LVU5460
 15268 5189 C57E6F4E 		vmovdqu	ymm9, YMMWORD PTR 32[rsi]	# tmp278, MEM[base: src_35(D), index: ivtmp.654_114, offset: 0B]
 15268      20
 15269 518e B8400000 		mov	eax, 64	# ivtmp.654,
 15269      00
 15270              	.LBE718:
 15271              	.LBB719:
 15272              	# sieve_extend.c:654:             *(dst+j) |= (*(src+1)>>(64-shift));
 654:sieve_extend.c ****     }
 15273              		.loc 1 654 34 view .LVU5461
 15274 5193 C545D3C0 		vpsrlq	ymm8, ymm7, xmm0	# vect__57.641, vect__102.640, _4
 15275              	.LBE719:
 15276              	.LBB720:
 15277              	# sieve_extend.c:652:             *(dst+j) = (*(src+j))<<shift;
 652:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15278              		.loc 1 652 34 view .LVU5462
 15279 5197 C535F3D1 		vpsllq	ymm10, ymm9, xmm1	# vect__104.645, tmp278, shift
 15280              	.LBE720:
 15281              	.LBB721:
 15282              	# sieve_extend.c:654:             *(dst+j) |= (*(src+1)>>(64-shift));
 654:sieve_extend.c ****     }
 15283              		.loc 1 654 22 view .LVU5463
 15284 519b C4413DEB 		vpor	ymm11, ymm8, ymm10	# vect__58.646, vect__57.641, vect__104.645
 15284      DA
 15285 51a0 C57E7F5F 		vmovdqu	YMMWORD PTR 32[rdi], ymm11	# MEM[base: dst_34(D), index: ivtmp.654_114, offset: 0B], vect_
 15285      20
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15286              		.loc 1 653 32 is_stmt 1 view .LVU5464
 15287              	.LVL915:
 653:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15288              		.loc 1 653 25 view .LVU5465
 15289              	.LBE721:
 649:sieve_extend.c ****     {
 15290              		.loc 1 649 24 view .LVU5466
 649:sieve_extend.c ****     {
 15291              		.loc 1 649 12 view .LVU5467
 15292 51a5 E9F6FCFF 		jmp	.L1297	#
 15292      FF
 15293              	.LVL916:
 15294              	.L1307:
GAS LISTING /tmp/ccjg94QQ.s 			page 413


 15295              	# sieve_extend.c:647:     int i = 0;
 647:sieve_extend.c ****     // MSVC: use steps of 2 for SSE, 4 for AVX2, 8 for AVX512
 15296              		.loc 1 647 9 is_stmt 0 view .LVU5468
 15297 51aa 31C0     		xor	eax, eax	# i
 15298 51ac E92EFFFF 		jmp	.L1266	#
 15298      FF
 15299              		.cfi_endproc
 15300              	.LFE67:
 15302              		.section	.rodata.str1.8,"aMS",@progbits,1
 15303              		.align 8
 15304              	.LC9:
 15305 0000 52657375 		.string	"Result: Sievesize %ju is expected to have %ju primes. algorithm produced %ju primes\n"
 15305      6C743A20 
 15305      53696576 
 15305      6573697A 
 15305      6520256A 
 15306 0055 000000   		.align 8
 15307              	.LC10:
 15308 0058 4E6F2076 		.string	"No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produced %j
 15308      616C6964 
 15308      20726573 
 15308      756C742E 
 15308      20536965 
 15309              		.section	.rodata.str1.1
 15310              	.LC11:
 15311 0023 44656570 		.string	"DeepAnalyzing"
 15311      416E616C 
 15311      797A696E 
 15311      6700
 15312              		.section	.rodata.str1.8
 15313 00bb 00000000 		.align 8
 15313      00
 15314              	.LC12:
 15315 00c0 4E756D62 		.string	"Number %ju (%ju) was marked prime, but %ju * %ju = %ju\n"
 15315      65722025 
 15315      6A752028 
 15315      256A7529 
 15315      20776173 
 15316              		.align 8
 15317              	.LC13:
 15318 00f8 4E756D62 		.string	"Number %ju (%ju) was marked non-prime, but no factors found. So it is prime\n"
 15318      65722025 
 15318      6A752028 
 15318      256A7529 
 15318      20776173 
 15319              		.text
 15320 51b1 66662E0F 		.p2align 4
 15320      1F840000 
 15320      0000000F 
 15320      1F4000
 15321              		.globl	validatePrimeCount
 15323              	validatePrimeCount:
 15324              	.LVL917:
 15325              	.LFB80:
1122:sieve_extend.c **** 
 15326              		.loc 1 1122 76 is_stmt 1 view -0
 15327              		.cfi_startproc
GAS LISTING /tmp/ccjg94QQ.s 			page 414


1122:sieve_extend.c **** 
 15328              		.loc 1 1122 76 is_stmt 0 view .LVU5470
 15329 51c0 F30F1EFA 		endbr64	
1124:sieve_extend.c ****     counter_t valid_primes = 0;
 15330              		.loc 1 1124 5 is_stmt 1 view .LVU5471
 15331              	# sieve_extend.c:1122: int validatePrimeCount(struct sieve_state *sieve, int option_verboselevel) {
1122:sieve_extend.c **** 
 15332              		.loc 1 1122 76 is_stmt 0 view .LVU5472
 15333 51c4 4157     		push	r15	#
 15334              		.cfi_def_cfa_offset 16
 15335              		.cfi_offset 15, -16
 15336 51c6 4156     		push	r14	#
 15337              		.cfi_def_cfa_offset 24
 15338              		.cfi_offset 14, -24
 15339 51c8 4155     		push	r13	#
 15340              		.cfi_def_cfa_offset 32
 15341              		.cfi_offset 13, -32
 15342 51ca 4154     		push	r12	#
 15343              		.cfi_def_cfa_offset 40
 15344              		.cfi_offset 12, -40
 15345 51cc 55       		push	rbp	#
 15346              		.cfi_def_cfa_offset 48
 15347              		.cfi_offset 6, -48
 15348 51cd 4889FD   		mov	rbp, rdi	# sieve, tmp307
 15349 51d0 53       		push	rbx	#
 15350              		.cfi_def_cfa_offset 56
 15351              		.cfi_offset 3, -56
 15352 51d1 89F3     		mov	ebx, esi	# option_verboselevel, tmp308
 15353 51d3 488D6424 		lea	rsp, -56[rsp]	#,
 15353      C8
 15354              		.cfi_def_cfa_offset 112
 15355              	# sieve_extend.c:1124:     counter_t primecount = count_primes(sieve);
1124:sieve_extend.c ****     counter_t valid_primes = 0;
 15356              		.loc 1 1124 28 view .LVU5473
 15357 51d8 488B17   		mov	rdx, QWORD PTR [rdi]	# _24, MEM[(uint64_t * *)sieve_18(D)]
 15358 51db 488B7F08 		mov	rdi, QWORD PTR 8[rdi]	# _25, MEM[(long unsigned int *)sieve_18(D) + 8B]
 15359              	.LVL918:
 15360              	.LBB743:
 15361              	.LBI743:
1093:sieve_extend.c ****     counter_t primeCount = 1;
 15362              		.loc 1 1093 18 is_stmt 1 view .LVU5474
 15363              	.LBB744:
 15364              	.LBB745:
1095:sieve_extend.c ****     return primeCount;
 15365              		.loc 1 1095 30 view .LVU5475
 15366 51df 4C8B4D10 		mov	r9, QWORD PTR 16[rbp]	# pretmp_199, sieve_18(D)->size
 15367              	# sieve_extend.c:1095:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(s
1095:sieve_extend.c ****     return primeCount;
 15368              		.loc 1 1095 5 is_stmt 0 view .LVU5476
 15369 51e3 4883FF01 		cmp	rdi, 1	# _25,
 15370 51e7 0F860B05 		jbe	.L1311	#,
 15370      0000
 15371              	# sieve_extend.c:1095:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(s
1095:sieve_extend.c ****     return primeCount;
 15372              		.loc 1 1095 20 view .LVU5477
 15373 51ed B8010000 		mov	eax, 1	# factor,
 15373      00
GAS LISTING /tmp/ccjg94QQ.s 			page 415


 15374              	.LBE745:
 15375              	# sieve_extend.c:1094:     counter_t primeCount = 1;
1094:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitarray, factor+
 15376              		.loc 1 1094 15 view .LVU5478
 15377 51f2 41B80100 		mov	r8d, 1	# primeCount,
 15377      0000
 15378              	.LVL919:
 15379 51f8 0F1F8400 		.p2align 4
 15379      00000000 
 15380              		.p2align 3
 15381              	.L1314:
 15382              	.LBB748:
1095:sieve_extend.c ****     return primeCount;
 15383              		.loc 1 1095 104 is_stmt 1 view .LVU5479
 15384              	# sieve_extend.c:1095:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(s
1095:sieve_extend.c ****     return primeCount;
 15385              		.loc 1 1095 114 is_stmt 0 view .LVU5480
 15386 5200 4983C001 		add	r8, 1	# primeCount,
 15387              	.LVL920:
1095:sieve_extend.c ****     return primeCount;
 15388              		.loc 1 1095 52 is_stmt 1 view .LVU5481
 15389              	# sieve_extend.c:1095:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(s
1095:sieve_extend.c ****     return primeCount;
 15390              		.loc 1 1095 61 is_stmt 0 view .LVU5482
 15391 5204 4883C001 		add	rax, 1	# factor,
 15392              	.LVL921:
 15393              	.L1454:
 15394              	.LBB746:
 15395              	.LBI746:
 122:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 15396              		.loc 1 122 25 is_stmt 1 view .LVU5483
 15397              	.LBB747:
 123:sieve_extend.c ****     return index;
 15398              		.loc 1 123 5 view .LVU5484
 123:sieve_extend.c ****     return index;
 15399              		.loc 1 123 11 view .LVU5485
 15400              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 15401              		.loc 1 123 21 is_stmt 0 view .LVU5486
 15402 5208 4889C1   		mov	rcx, rax	# tmp162, factor
 15403 520b 48C1E906 		shr	rcx, 6	# tmp162,
 15404              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 15405              		.loc 1 123 12 view .LVU5487
 15406 520f 4C8B1CCA 		mov	r11, QWORD PTR [rdx+rcx*8]	# *_106,* _24
 15407              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 15408              		.loc 1 123 11 view .LVU5488
 15409 5213 490FA3C3 		bt	r11, rax	# *_106, factor
 15410 5217 0F83AB00 		jnc	.L1312	#,
 15410      0000
 123:sieve_extend.c ****     return index;
 15411              		.loc 1 123 58 is_stmt 1 view .LVU5489
 15412              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 15413              		.loc 1 123 63 is_stmt 0 view .LVU5490
 15414 521d 4C8D6001 		lea	r12, 1[rax]	# tmp235,
GAS LISTING /tmp/ccjg94QQ.s 			page 416


 15415              	.LVL922:
 15416              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 15417              		.loc 1 123 21 view .LVU5491
 15418 5221 4D89E5   		mov	r13, r12	# tmp167, factor
 15419              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 15420              		.loc 1 123 63 view .LVU5492
 15421 5224 4C89E0   		mov	rax, r12	# factor, tmp235
 123:sieve_extend.c ****     return index;
 15422              		.loc 1 123 11 is_stmt 1 view .LVU5493
 15423              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 15424              		.loc 1 123 21 is_stmt 0 view .LVU5494
 15425 5227 49C1ED06 		shr	r13, 6	# tmp167,
 15426              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 15427              		.loc 1 123 12 view .LVU5495
 15428 522b 4E8B3CEA 		mov	r15, QWORD PTR [rdx+r13*8]	# *_35, *_35
 15429              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 15430              		.loc 1 123 11 view .LVU5496
 15431 522f 4D0FA3E7 		bt	r15, r12	# *_35, factor
 15432 5233 0F838F00 		jnc	.L1312	#,
 15432      0000
 123:sieve_extend.c ****     return index;
 15433              		.loc 1 123 58 is_stmt 1 view .LVU5497
 15434              	.LVL923:
 15435              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 15436              		.loc 1 123 63 is_stmt 0 view .LVU5498
 15437 5239 4883C001 		add	rax, 1	# factor,
 15438              	.LVL924:
 123:sieve_extend.c ****     return index;
 15439              		.loc 1 123 11 is_stmt 1 view .LVU5499
 15440              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 15441              		.loc 1 123 21 is_stmt 0 view .LVU5500
 15442 523d 4989C6   		mov	r14, rax	# tmp279, factor
 15443 5240 49C1EE06 		shr	r14, 6	# tmp279,
 15444              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 15445              		.loc 1 123 12 view .LVU5501
 15446 5244 4A8B34F2 		mov	rsi, QWORD PTR [rdx+r14*8]	# *_35, *_35
 15447              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 15448              		.loc 1 123 11 view .LVU5502
 15449 5248 480FA3C6 		bt	rsi, rax	# *_35, factor
 15450 524c 737A     		jnc	.L1312	#,
 123:sieve_extend.c ****     return index;
 15451              		.loc 1 123 58 is_stmt 1 view .LVU5503
 15452              	.LVL925:
 15453              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 15454              		.loc 1 123 63 is_stmt 0 view .LVU5504
 15455 524e 498D4424 		lea	rax, 2[r12]	# factor,
 15455      02
GAS LISTING /tmp/ccjg94QQ.s 			page 417


 15456              	.LVL926:
 123:sieve_extend.c ****     return index;
 15457              		.loc 1 123 11 is_stmt 1 view .LVU5505
 15458              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 15459              		.loc 1 123 21 is_stmt 0 view .LVU5506
 15460 5253 4989C2   		mov	r10, rax	# tmp283, factor
 15461 5256 49C1EA06 		shr	r10, 6	# tmp283,
 15462              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 15463              		.loc 1 123 12 view .LVU5507
 15464 525a 4A8B0CD2 		mov	rcx, QWORD PTR [rdx+r10*8]	# *_35, *_35
 15465              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 15466              		.loc 1 123 11 view .LVU5508
 15467 525e 480FA3C1 		bt	rcx, rax	# *_35, factor
 15468 5262 7364     		jnc	.L1312	#,
 123:sieve_extend.c ****     return index;
 15469              		.loc 1 123 58 is_stmt 1 view .LVU5509
 15470              	.LVL927:
 15471              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 15472              		.loc 1 123 63 is_stmt 0 view .LVU5510
 15473 5264 498D4424 		lea	rax, 3[r12]	# factor,
 15473      03
 15474              	.LVL928:
 123:sieve_extend.c ****     return index;
 15475              		.loc 1 123 11 is_stmt 1 view .LVU5511
 15476              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 15477              		.loc 1 123 21 is_stmt 0 view .LVU5512
 15478 5269 4989C3   		mov	r11, rax	# tmp287, factor
 15479 526c 49C1EB06 		shr	r11, 6	# tmp287,
 15480              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 15481              		.loc 1 123 12 view .LVU5513
 15482 5270 4E8B2CDA 		mov	r13, QWORD PTR [rdx+r11*8]	# *_35, *_35
 15483              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 15484              		.loc 1 123 11 view .LVU5514
 15485 5274 490FA3C5 		bt	r13, rax	# *_35, factor
 15486 5278 734E     		jnc	.L1312	#,
 123:sieve_extend.c ****     return index;
 15487              		.loc 1 123 58 is_stmt 1 view .LVU5515
 15488              	.LVL929:
 15489              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 15490              		.loc 1 123 63 is_stmt 0 view .LVU5516
 15491 527a 498D4424 		lea	rax, 4[r12]	# factor,
 15491      04
 15492              	.LVL930:
 123:sieve_extend.c ****     return index;
 15493              		.loc 1 123 11 is_stmt 1 view .LVU5517
 15494              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 15495              		.loc 1 123 21 is_stmt 0 view .LVU5518
 15496 527f 4989C7   		mov	r15, rax	# tmp291, factor
GAS LISTING /tmp/ccjg94QQ.s 			page 418


 15497 5282 49C1EF06 		shr	r15, 6	# tmp291,
 15498              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 15499              		.loc 1 123 12 view .LVU5519
 15500 5286 4E8B34FA 		mov	r14, QWORD PTR [rdx+r15*8]	# *_35, *_35
 15501              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 15502              		.loc 1 123 11 view .LVU5520
 15503 528a 490FA3C6 		bt	r14, rax	# *_35, factor
 15504 528e 7338     		jnc	.L1312	#,
 123:sieve_extend.c ****     return index;
 15505              		.loc 1 123 58 is_stmt 1 view .LVU5521
 15506              	.LVL931:
 15507              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 15508              		.loc 1 123 63 is_stmt 0 view .LVU5522
 15509 5290 498D4424 		lea	rax, 5[r12]	# factor,
 15509      05
 15510              	.LVL932:
 123:sieve_extend.c ****     return index;
 15511              		.loc 1 123 11 is_stmt 1 view .LVU5523
 15512              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 15513              		.loc 1 123 21 is_stmt 0 view .LVU5524
 15514 5295 4889C6   		mov	rsi, rax	# tmp295, factor
 15515 5298 48C1EE06 		shr	rsi, 6	# tmp295,
 15516              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 15517              		.loc 1 123 12 view .LVU5525
 15518 529c 4C8B14F2 		mov	r10, QWORD PTR [rdx+rsi*8]	# *_35, *_35
 15519              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 15520              		.loc 1 123 11 view .LVU5526
 15521 52a0 490FA3C2 		bt	r10, rax	# *_35, factor
 15522 52a4 7322     		jnc	.L1312	#,
 123:sieve_extend.c ****     return index;
 15523              		.loc 1 123 58 is_stmt 1 view .LVU5527
 15524              	.LVL933:
 15525              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 15526              		.loc 1 123 63 is_stmt 0 view .LVU5528
 15527 52a6 498D4424 		lea	rax, 6[r12]	# factor,
 15527      06
 15528              	.LVL934:
 123:sieve_extend.c ****     return index;
 15529              		.loc 1 123 11 is_stmt 1 view .LVU5529
 15530              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 15531              		.loc 1 123 21 is_stmt 0 view .LVU5530
 15532 52ab 4889C1   		mov	rcx, rax	# tmp299, factor
 15533 52ae 48C1E906 		shr	rcx, 6	# tmp299,
 15534              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 15535              		.loc 1 123 12 view .LVU5531
 15536 52b2 4C8B1CCA 		mov	r11, QWORD PTR [rdx+rcx*8]	# *_35, *_35
 15537              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
GAS LISTING /tmp/ccjg94QQ.s 			page 419


 15538              		.loc 1 123 11 view .LVU5532
 15539 52b6 490FA3C3 		bt	r11, rax	# *_35, factor
 15540 52ba 730C     		jnc	.L1312	#,
 123:sieve_extend.c ****     return index;
 15541              		.loc 1 123 58 is_stmt 1 view .LVU5533
 15542              	.LVL935:
 15543              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 15544              		.loc 1 123 63 is_stmt 0 view .LVU5534
 15545 52bc 498D4424 		lea	rax, 7[r12]	# factor,
 15545      07
 15546              	.LVL936:
 123:sieve_extend.c ****     return index;
 15547              		.loc 1 123 11 is_stmt 1 view .LVU5535
 15548 52c1 E942FFFF 		jmp	.L1454	#
 15548      FF
 15549              		.p2align 4,,7
 15550 52c6 6690     		.p2align 3
 15551              	.L1312:
 15552              	.LVL937:
 123:sieve_extend.c ****     return index;
 15553              		.loc 1 123 11 is_stmt 0 view .LVU5536
 15554              	.LBE747:
 15555              	.LBE746:
1095:sieve_extend.c ****     return primeCount;
 15556              		.loc 1 1095 30 is_stmt 1 view .LVU5537
 15557              	# sieve_extend.c:1095:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(s
1095:sieve_extend.c ****     return primeCount;
 15558              		.loc 1 1095 5 is_stmt 0 view .LVU5538
 15559 52c8 4839C7   		cmp	rdi, rax	# _25, factor
 15560 52cb 0F872FFF 		ja	.L1314	#,
 15560      FFFF
1095:sieve_extend.c ****     return primeCount;
 15561              		.loc 1 1095 5 view .LVU5539
 15562              	.LBE748:
1096:sieve_extend.c **** }
 15563              		.loc 1 1096 5 is_stmt 1 view .LVU5540
 15564              	.LVL938:
1096:sieve_extend.c **** }
 15565              		.loc 1 1096 5 is_stmt 0 view .LVU5541
 15566              	.LBE744:
 15567              	.LBE743:
1125:sieve_extend.c ****     switch(sieve->size) {
 15568              		.loc 1 1125 5 is_stmt 1 view .LVU5542
1126:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 15569              		.loc 1 1126 5 view .LVU5543
 15570 52d1 83FB03   		cmp	ebx, 3	# option_verboselevel,
 15571 52d4 0F9FC2   		setg	dl	#, tmp172
 15572 52d7 4981F9A0 		cmp	r9, 100000	# pretmp_199,
 15572      860100
 15573 52de 0F842D06 		je	.L1315	#,
 15573      0000
 15574 52e4 0F86CC02 		jbe	.L1455	#,
 15574      0000
 15575 52ea 4981F900 		cmp	r9, 100000000	# pretmp_199,
 15575      E1F505
 15576 52f1 0F84D905 		je	.L1323	#,
GAS LISTING /tmp/ccjg94QQ.s 			page 420


 15576      0000
 15577              		.p2align 4,,4
 15578 52f7 0F863303 		jbe	.L1456	#,
 15578      0000
 15579 52fd 4981F900 		cmp	r9, 1000000000	# pretmp_199,
 15579      CA9A3B
 15580 5304 0F85EB05 		jne	.L1321	#,
 15580      0000
 15581 530a 4981F82E 		cmp	r8, 50847534	# primeCount,
 15581      DF0703
 15582              	# sieve_extend.c:1135:         case 1000000000:    valid_primes = 50847534; break;
1135:sieve_extend.c ****         default:            valid_primes= 0;
 15583              		.loc 1 1135 42 is_stmt 0 view .LVU5544
 15584 5311 B92EDF07 		mov	ecx, 50847534	# valid_primes,
 15584      03
 15585 5316 410F94C4 		sete	r12b	#, tmp189
 15586 531a 4421E2   		and	edx, r12d	# _251, tmp189
 15587 531d 4981F82E 		cmp	r8, 50847534	# primeCount,
 15587      DF0703
 15588 5324 450FB6EC 		movzx	r13d, r12b	# <retval>, tmp189
 15589 5328 410F95C6 		setne	r14b	#, _135
1135:sieve_extend.c ****         default:            valid_primes= 0;
 15590              		.loc 1 1135 29 is_stmt 1 view .LVU5545
 15591              	.LVL939:
1135:sieve_extend.c ****         default:            valid_primes= 0;
 15592              		.loc 1 1135 54 view .LVU5546
 15593 532c 0F1F4000 		.p2align 4
 15594              		.p2align 3
 15595              	.L1328:
1139:sieve_extend.c ****     if (valid  && option_verboselevel >= 4) printf("Result: Sievesize %ju is expected to have %ju p
 15596              		.loc 1 1139 5 view .LVU5547
1140:sieve_extend.c ****     if (!valid && option_verboselevel >= 1) {
 15597              		.loc 1 1140 5 view .LVU5548
 15598              	# sieve_extend.c:1140:     if (valid  && option_verboselevel >= 4) printf("Result: Sievesize %ju is
1140:sieve_extend.c ****     if (!valid && option_verboselevel >= 1) {
 15599              		.loc 1 1140 8 is_stmt 0 view .LVU5549
 15600 5330 84D2     		test	dl, dl	# _251
 15601 5332 0F841704 		je	.L1329	#,
 15601      0000
1140:sieve_extend.c ****     if (!valid && option_verboselevel >= 1) {
 15602              		.loc 1 1140 45 is_stmt 1 discriminator 1 view .LVU5550
 15603              	.LVL940:
 15604              	.LBB750:
 15605              	.LBI750:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15606              		.loc 3 105 1 discriminator 1 view .LVU5551
 15607              	.LBB751:
 15608              		.loc 3 107 3 discriminator 1 view .LVU5552
 15609              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15610              		.loc 3 107 10 is_stmt 0 discriminator 1 view .LVU5553
 15611 5338 4C89CA   		mov	rdx, r9	#, pretmp_199
 15612 533b 488D3500 		lea	rsi, .LC9[rip]	#,
 15612      000000
 15613 5342 BF010000 		mov	edi, 1	#,
 15613      00
 15614 5347 31C0     		xor	eax, eax	#
 15615 5349 E8000000 		call	__printf_chk@PLT	#
GAS LISTING /tmp/ccjg94QQ.s 			page 421


 15615      00
 15616              	.LVL941:
 15617              		.loc 3 107 10 discriminator 1 view .LVU5554
 15618              	.LBE751:
 15619              	.LBE750:
1141:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 15620              		.loc 1 1141 5 is_stmt 1 discriminator 1 view .LVU5555
 15621              	.L1330:
1145:sieve_extend.c ****     return (valid);
 15622              		.loc 1 1145 5 view .LVU5556
 15623              	# sieve_extend.c:1145:     if (!valid && option_verboselevel >= 3) deepAnalyzePrimes(sieve);
1145:sieve_extend.c ****     return (valid);
 15624              		.loc 1 1145 8 is_stmt 0 view .LVU5557
 15625 534e 83FB02   		cmp	ebx, 2	# option_verboselevel,
 15626 5351 0F8E4C02 		jle	.L1310	#,
 15626      0000
 15627 5357 4584F6   		test	r14b, r14b	# _135
 15628 535a 0F844302 		je	.L1310	#,
 15628      0000
1145:sieve_extend.c ****     return (valid);
 15629              		.loc 1 1145 45 is_stmt 1 discriminator 1 view .LVU5558
 15630              	.LBB752:
 15631              	.LBI752:
1099:sieve_extend.c ****     printf("DeepAnalyzing\n");
 15632              		.loc 1 1099 13 discriminator 1 view .LVU5559
 15633              	.LVL942:
 15634              	.LBB753:
1100:sieve_extend.c ****     counter_t warn_prime = 0;
 15635              		.loc 1 1100 5 discriminator 1 view .LVU5560
 15636              	.LBB754:
 15637              	.LBI754:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15638              		.loc 3 105 1 discriminator 1 view .LVU5561
 15639              	.LBB755:
 15640              		.loc 3 107 3 discriminator 1 view .LVU5562
 15641              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15642              		.loc 3 107 10 is_stmt 0 discriminator 1 view .LVU5563
 15643 5360 488D3D00 		lea	rdi, .LC11[rip]	#,
 15643      000000
 15644 5367 E8000000 		call	puts@PLT	#
 15644      00
 15645              	.LVL943:
 15646              		.loc 3 107 10 discriminator 1 view .LVU5564
 15647              	.LBE755:
 15648              	.LBE754:
1101:sieve_extend.c ****     counter_t warn_nonprime = 0;
 15649              		.loc 1 1101 5 is_stmt 1 discriminator 1 view .LVU5565
1102:sieve_extend.c ****     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 15650              		.loc 1 1102 5 discriminator 1 view .LVU5566
1103:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 15651              		.loc 1 1103 5 discriminator 1 view .LVU5567
 15652              	.LBB756:
1103:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 15653              		.loc 1 1103 10 discriminator 1 view .LVU5568
1103:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 15654              		.loc 1 1103 31 discriminator 1 view .LVU5569
 15655              	# sieve_extend.c:1103:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
GAS LISTING /tmp/ccjg94QQ.s 			page 422


1103:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 15656              		.loc 1 1103 44 is_stmt 0 discriminator 1 view .LVU5570
 15657 536c 488B7D08 		mov	rdi, QWORD PTR 8[rbp]	# _137, MEM[(uint64_t *)sieve_18(D) + 8B]
 15658              	# sieve_extend.c:1103:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
1103:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 15659              		.loc 1 1103 5 discriminator 1 view .LVU5571
 15660 5370 4883FF01 		cmp	rdi, 1	# _137,
 15661 5374 0F862902 		jbe	.L1310	#,
 15661      0000
 15662              	.LBB757:
 15663              	.LBB758:
 15664              	.LBB759:
 15665              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15666              		.loc 3 107 10 view .LVU5572
 15667 537a 44896C24 		mov	DWORD PTR 36[rsp], r13d	# %sfp, <retval>
 15667      24
 15668              	.LBE759:
 15669              	.LBE758:
 15670              	.LBE757:
 15671              	# sieve_extend.c:1103:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
1103:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 15672              		.loc 1 1103 5 view .LVU5573
 15673 537f 41BE0200 		mov	r14d, 2	# ivtmp.687,
 15673      0000
 15674 5385 41BC0300 		mov	r12d, 3	# ivtmp.685,
 15674      0000
 15675              	.LBE756:
 15676              	# sieve_extend.c:1101:     counter_t warn_prime = 0;
1101:sieve_extend.c ****     counter_t warn_nonprime = 0;
 15677              		.loc 1 1101 15 view .LVU5574
 15678 538b 4531C0   		xor	r8d, r8d	# warn_prime
 15679              	# sieve_extend.c:1102:     counter_t warn_nonprime = 0;
1102:sieve_extend.c ****     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 15680              		.loc 1 1102 15 view .LVU5575
 15681 538e 48C74424 		mov	QWORD PTR 24[rsp], 0	# %sfp,
 15681      18000000 
 15681      00
 15682              	.LBB778:
 15683              	# sieve_extend.c:1103:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
1103:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 15684              		.loc 1 1103 20 view .LVU5576
 15685 5397 41BF0100 		mov	r15d, 1	# prime,
 15685      0000
 15686              	.LBB766:
 15687              	.LBB763:
 15688              	.LBB760:
 15689              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15690              		.loc 3 107 10 view .LVU5577
 15691 539d 4989ED   		mov	r13, rbp	# sieve, sieve
 15692              	.LVL944:
 15693              		.p2align 4
 15694              		.p2align 3
 15695              	.L1340:
 15696              		.loc 3 107 10 view .LVU5578
 15697              	.LBE760:
 15698              	.LBE763:
 15699              	.LBE766:
GAS LISTING /tmp/ccjg94QQ.s 			page 423


1104:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 15700              		.loc 1 1104 9 is_stmt 1 view .LVU5579
 15701              	# sieve_extend.c:1104:         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) {
1104:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 15702              		.loc 1 1104 29 is_stmt 0 view .LVU5580
 15703 53a0 498B6D00 		mov	rbp, QWORD PTR 0[r13]	# MEM[(uint64_t * *)sieve_18(D)], MEM[(uint64_t * *)sieve_18(D)]
 15704              	# sieve_extend.c:1104:         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) {
1104:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 15705              		.loc 1 1104 30 view .LVU5581
 15706 53a4 4C89FB   		mov	rbx, r15	# tmp198, prime
 15707 53a7 48C1EB06 		shr	rbx, 6	# tmp198,
 15708              	# sieve_extend.c:1104:         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) {
1104:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 15709              		.loc 1 1104 71 view .LVU5582
 15710 53ab 4C8B4CDD 		mov	r9, QWORD PTR 0[rbp+rbx*8]	# *_47, *_47
 15710      00
 15711 53b0 C4C283F7 		shrx	rcx, r9, r15	# tmp201, *_47, prime
 15711      C9
 15712              	# sieve_extend.c:1104:         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) {
1104:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 15713              		.loc 1 1104 12 view .LVU5583
 15714 53b5 83E101   		and	ecx, 1	# c,
 15715 53b8 0F84BA02 		je	.L1332	#,
 15715      0000
 15716              	.LVL945:
 15717              	.LBB767:
 15718              	.LBB768:
1113:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15719              		.loc 1 1113 32 is_stmt 1 view .LVU5584
 15720              	.LBE768:
 15721              	# sieve_extend.c:1112:             counter_t c_prime = 0;
1112:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 15722              		.loc 1 1112 23 is_stmt 0 view .LVU5585
 15723 53be 31ED     		xor	ebp, ebp	# c_prime
 15724              	.LBB769:
 15725              	# sieve_extend.c:1113:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1113:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15726              		.loc 1 1113 13 view .LVU5586
 15727 53c0 4885FF   		test	rdi, rdi	# _137
 15728 53c3 BE030000 		mov	esi, 3	# ivtmp.677,
 15728      00
 15729 53c8 0F84E103 		je	.L1444	#,
 15729      0000
 15730 53ce 4989FB   		mov	r11, rdi	# tmp231, _137
 15731 53d1 4929CB   		sub	r11, rcx	# tmp231, c
 15732 53d4 4183E303 		and	r11d, 3	# tmp231,
 15733 53d8 4D89DA   		mov	r10, r11	# tmp232, tmp231
 15734 53db 0F84BF00 		je	.L1333	#,
 15734      0000
 15735              	.LVL946:
1114:sieve_extend.c ****             }
 15736              		.loc 1 1114 17 is_stmt 1 view .LVU5587
 15737              	# sieve_extend.c:1114:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1114:sieve_extend.c ****             }
 15738              		.loc 1 1114 48 is_stmt 0 view .LVU5588
 15739 53e1 488D0409 		lea	rax, [rcx+rcx]	# tmp239,
 15740 53e5 4C39F0   		cmp	rax, r14	# tmp239, ivtmp.687
GAS LISTING /tmp/ccjg94QQ.s 			page 424


 15741 53e8 7411     		je	.L1385	#,
 15742              	# sieve_extend.c:1114:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1114:sieve_extend.c ****             }
 15743              		.loc 1 1114 33 view .LVU5589
 15744 53ea 31D2     		xor	edx, edx	# tmp241
 15745 53ec 4C89E0   		mov	rax, r12	# tmp242, ivtmp.685
 15746 53ef 48F7F6   		div	rsi	# ivtmp.677
 15747              	# sieve_extend.c:1114:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1114:sieve_extend.c ****             }
 15748              		.loc 1 1114 82 view .LVU5590
 15749 53f2 31ED     		xor	ebp, ebp	# c_prime
1114:sieve_extend.c ****             }
 15750              		.loc 1 1114 82 view .LVU5591
 15751 53f4 4885D2   		test	rdx, rdx	# tmp241
 15752 53f7 400F94C5 		sete	bpl	#, c_prime
 15753              	.LVL947:
 15754              	.L1385:
1113:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15755              		.loc 1 1113 68 is_stmt 1 view .LVU5592
 15756              	# sieve_extend.c:1113:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1113:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15757              		.loc 1 1113 69 is_stmt 0 view .LVU5593
 15758 53fb 4883C101 		add	rcx, 1	# c,
 15759              	.LVL948:
1113:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15760              		.loc 1 1113 32 is_stmt 1 view .LVU5594
 15761              	# sieve_extend.c:1113:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1113:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15762              		.loc 1 1113 13 is_stmt 0 view .LVU5595
 15763 53ff 4839F9   		cmp	rcx, rdi	# c, _137
 15764 5402 0F877801 		ja	.L1339	#,
 15764      0000
 15765              	# sieve_extend.c:1113:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1113:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15766              		.loc 1 1113 51 view .LVU5596
 15767 5408 4989C9   		mov	r9, rcx	# tmp244, c
 15768 540b BE050000 		mov	esi, 5	# ivtmp.677,
 15768      00
 15769 5410 4C0FAFC9 		imul	r9, rcx	# tmp244, c
 15770              	# sieve_extend.c:1113:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1113:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15771              		.loc 1 1113 47 view .LVU5597
 15772 5414 4D39E1   		cmp	r9, r12	# tmp244, ivtmp.685
 15773 5417 0F876301 		ja	.L1339	#,
 15773      0000
 15774 541d 4983FA01 		cmp	r10, 1	# tmp232,
 15775 5421 747D     		je	.L1333	#,
 15776 5423 4983FA02 		cmp	r10, 2	# tmp232,
 15777 5427 7438     		je	.L1416	#,
1114:sieve_extend.c ****             }
 15778              		.loc 1 1114 17 is_stmt 1 view .LVU5598
 15779              	# sieve_extend.c:1114:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1114:sieve_extend.c ****             }
 15780              		.loc 1 1114 48 is_stmt 0 view .LVU5599
 15781 5429 488D1C09 		lea	rbx, [rcx+rcx]	# tmp245,
 15782 542d 4C39F3   		cmp	rbx, r14	# tmp245, ivtmp.687
 15783 5430 7417     		je	.L1387	#,
GAS LISTING /tmp/ccjg94QQ.s 			page 425


 15784              	# sieve_extend.c:1114:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1114:sieve_extend.c ****             }
 15785              		.loc 1 1114 33 view .LVU5600
 15786 5432 31D2     		xor	edx, edx	# tmp247
 15787 5434 4C89E0   		mov	rax, r12	# tmp248, ivtmp.685
 15788 5437 48F7F6   		div	rsi	# ivtmp.677
 15789              	# sieve_extend.c:1114:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1114:sieve_extend.c ****             }
 15790              		.loc 1 1114 20 view .LVU5601
 15791 543a 4885D2   		test	rdx, rdx	# tmp247
 15792 543d 410F94C3 		sete	r11b	#, tmp249
 15793              	# sieve_extend.c:1114:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1114:sieve_extend.c ****             }
 15794              		.loc 1 1114 82 view .LVU5602
 15795 5441 4180FB01 		cmp	r11b, 1	# tmp249,
 15796 5445 4883DDFF 		sbb	rbp, -1	# c_prime,
 15797              	.LVL949:
 15798              	.L1387:
1113:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15799              		.loc 1 1113 68 is_stmt 1 view .LVU5603
 15800              	# sieve_extend.c:1113:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1113:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15801              		.loc 1 1113 69 is_stmt 0 view .LVU5604
 15802 5449 4883C101 		add	rcx, 1	# c,
 15803              	.LVL950:
1113:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15804              		.loc 1 1113 32 is_stmt 1 view .LVU5605
 15805 544d 4883C602 		add	rsi, 2	# ivtmp.677,
 15806              	# sieve_extend.c:1113:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1113:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15807              		.loc 1 1113 51 is_stmt 0 view .LVU5606
 15808 5451 4989CA   		mov	r10, rcx	# tmp250, c
 15809 5454 4C0FAFD1 		imul	r10, rcx	# tmp250, c
 15810              	# sieve_extend.c:1113:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1113:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15811              		.loc 1 1113 47 view .LVU5607
 15812 5458 4D39E2   		cmp	r10, r12	# tmp250, ivtmp.685
 15813 545b 0F871F01 		ja	.L1339	#,
 15813      0000
 15814              	.L1416:
1114:sieve_extend.c ****             }
 15815              		.loc 1 1114 17 is_stmt 1 view .LVU5608
 15816              	# sieve_extend.c:1114:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1114:sieve_extend.c ****             }
 15817              		.loc 1 1114 48 is_stmt 0 view .LVU5609
 15818 5461 4C8D0C09 		lea	r9, [rcx+rcx]	# tmp251,
 15819 5465 4D39F1   		cmp	r9, r14	# tmp251, ivtmp.687
 15820 5468 7415     		je	.L1390	#,
 15821              	# sieve_extend.c:1114:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1114:sieve_extend.c ****             }
 15822              		.loc 1 1114 33 view .LVU5610
 15823 546a 31D2     		xor	edx, edx	# tmp253
 15824 546c 4C89E0   		mov	rax, r12	# tmp254, ivtmp.685
 15825 546f 48F7F6   		div	rsi	# ivtmp.677
 15826              	# sieve_extend.c:1114:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1114:sieve_extend.c ****             }
 15827              		.loc 1 1114 20 view .LVU5611
GAS LISTING /tmp/ccjg94QQ.s 			page 426


 15828 5472 4885D2   		test	rdx, rdx	# tmp253
 15829 5475 0F94C3   		sete	bl	#, tmp255
 15830              	# sieve_extend.c:1114:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1114:sieve_extend.c ****             }
 15831              		.loc 1 1114 82 view .LVU5612
 15832 5478 80FB01   		cmp	bl, 1	# tmp255,
 15833 547b 4883DDFF 		sbb	rbp, -1	# c_prime,
 15834              	.LVL951:
 15835              	.L1390:
1113:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15836              		.loc 1 1113 68 is_stmt 1 view .LVU5613
 15837              	# sieve_extend.c:1113:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1113:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15838              		.loc 1 1113 69 is_stmt 0 view .LVU5614
 15839 547f 4883C101 		add	rcx, 1	# c,
 15840              	.LVL952:
1113:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15841              		.loc 1 1113 32 is_stmt 1 view .LVU5615
 15842 5483 4883C602 		add	rsi, 2	# ivtmp.677,
 15843              	# sieve_extend.c:1113:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1113:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15844              		.loc 1 1113 51 is_stmt 0 view .LVU5616
 15845 5487 4989CB   		mov	r11, rcx	# tmp256, c
 15846 548a 4C0FAFD9 		imul	r11, rcx	# tmp256, c
 15847              	# sieve_extend.c:1113:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1113:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15848              		.loc 1 1113 47 view .LVU5617
 15849 548e 4D39E3   		cmp	r11, r12	# tmp256, ivtmp.685
 15850 5491 0F87E900 		ja	.L1339	#,
 15850      0000
 15851              	.LVL953:
 15852 5497 660F1F84 		.p2align 4
 15852      00000000 
 15852      00
 15853              		.p2align 3
 15854              	.L1333:
1114:sieve_extend.c ****             }
 15855              		.loc 1 1114 17 is_stmt 1 view .LVU5618
 15856              	# sieve_extend.c:1114:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1114:sieve_extend.c ****             }
 15857              		.loc 1 1114 48 is_stmt 0 view .LVU5619
 15858 54a0 4C8D1409 		lea	r10, [rcx+rcx]	# tmp210,
 15859 54a4 4D39F2   		cmp	r10, r14	# tmp210, ivtmp.687
 15860 54a7 7417     		je	.L1338	#,
 15861              	# sieve_extend.c:1114:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1114:sieve_extend.c ****             }
 15862              		.loc 1 1114 33 view .LVU5620
 15863 54a9 31D2     		xor	edx, edx	# tmp214
 15864 54ab 4C89E0   		mov	rax, r12	# tmp215, ivtmp.685
 15865 54ae 48F7F6   		div	rsi	# ivtmp.677
 15866              	# sieve_extend.c:1114:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1114:sieve_extend.c ****             }
 15867              		.loc 1 1114 20 view .LVU5621
 15868 54b1 4885D2   		test	rdx, rdx	# tmp214
 15869 54b4 410F94C1 		sete	r9b	#, tmp217
 15870              	# sieve_extend.c:1114:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1114:sieve_extend.c ****             }
GAS LISTING /tmp/ccjg94QQ.s 			page 427


 15871              		.loc 1 1114 82 view .LVU5622
 15872 54b8 4180F901 		cmp	r9b, 1	# tmp217,
 15873 54bc 4883DDFF 		sbb	rbp, -1	# c_prime,
 15874              	.LVL954:
 15875              	.L1338:
1113:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15876              		.loc 1 1113 68 is_stmt 1 view .LVU5623
 15877              	# sieve_extend.c:1113:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1113:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15878              		.loc 1 1113 69 is_stmt 0 view .LVU5624
 15879 54c0 4883C101 		add	rcx, 1	# tmp234,
 15880              	.LVL955:
1113:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15881              		.loc 1 1113 32 is_stmt 1 view .LVU5625
 15882              	# sieve_extend.c:1113:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1113:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15883              		.loc 1 1113 13 is_stmt 0 view .LVU5626
 15884 54c4 4839F9   		cmp	rcx, rdi	# tmp234, _137
 15885 54c7 0F87B300 		ja	.L1339	#,
 15885      0000
 15886              	# sieve_extend.c:1113:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1113:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15887              		.loc 1 1113 51 view .LVU5627
 15888 54cd 4889CB   		mov	rbx, rcx	# tmp218, tmp234
 15889 54d0 4883C602 		add	rsi, 2	# tmp233,
 15890 54d4 480FAFD9 		imul	rbx, rcx	# tmp218, tmp234
 15891              	# sieve_extend.c:1113:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1113:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15892              		.loc 1 1113 47 view .LVU5628
 15893 54d8 4C39E3   		cmp	rbx, r12	# tmp218, ivtmp.685
 15894 54db 0F879F00 		ja	.L1339	#,
 15894      0000
1114:sieve_extend.c ****             }
 15895              		.loc 1 1114 17 is_stmt 1 view .LVU5629
 15896              	# sieve_extend.c:1114:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1114:sieve_extend.c ****             }
 15897              		.loc 1 1114 48 is_stmt 0 view .LVU5630
 15898 54e1 4C8D1C09 		lea	r11, [rcx+rcx]	# tmp257,
 15899 54e5 4D39F3   		cmp	r11, r14	# tmp257, ivtmp.687
 15900 54e8 7417     		je	.L1394	#,
 15901              	# sieve_extend.c:1114:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1114:sieve_extend.c ****             }
 15902              		.loc 1 1114 33 view .LVU5631
 15903 54ea 31D2     		xor	edx, edx	# tmp259
 15904 54ec 4C89E0   		mov	rax, r12	# tmp260, ivtmp.685
 15905 54ef 48F7F6   		div	rsi	# tmp233
 15906              	# sieve_extend.c:1114:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1114:sieve_extend.c ****             }
 15907              		.loc 1 1114 20 view .LVU5632
 15908 54f2 4885D2   		test	rdx, rdx	# tmp259
 15909 54f5 410F94C2 		sete	r10b	#, tmp261
 15910              	# sieve_extend.c:1114:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1114:sieve_extend.c ****             }
 15911              		.loc 1 1114 82 view .LVU5633
 15912 54f9 4180FA01 		cmp	r10b, 1	# tmp261,
 15913 54fd 4883DDFF 		sbb	rbp, -1	# c_prime,
 15914              	.LVL956:
GAS LISTING /tmp/ccjg94QQ.s 			page 428


 15915              	.L1394:
1113:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15916              		.loc 1 1113 68 is_stmt 1 view .LVU5634
 15917              	# sieve_extend.c:1113:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1113:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15918              		.loc 1 1113 69 is_stmt 0 view .LVU5635
 15919 5501 4C8D4901 		lea	r9, 1[rcx]	# c,
1113:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15920              		.loc 1 1113 32 is_stmt 1 view .LVU5636
 15921 5505 488D5E02 		lea	rbx, 2[rsi]	# ivtmp.677,
 15922              	# sieve_extend.c:1113:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1113:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15923              		.loc 1 1113 51 is_stmt 0 view .LVU5637
 15924 5509 4D89CB   		mov	r11, r9	# tmp264, c
 15925 550c 4D0FAFD9 		imul	r11, r9	# tmp264, c
 15926              	# sieve_extend.c:1113:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1113:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15927              		.loc 1 1113 47 view .LVU5638
 15928 5510 4D39E3   		cmp	r11, r12	# tmp264, ivtmp.685
 15929 5513 776B     		ja	.L1339	#,
1114:sieve_extend.c ****             }
 15930              		.loc 1 1114 17 is_stmt 1 view .LVU5639
 15931              	# sieve_extend.c:1114:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1114:sieve_extend.c ****             }
 15932              		.loc 1 1114 48 is_stmt 0 view .LVU5640
 15933 5515 4D01C9   		add	r9, r9	# tmp265
 15934 5518 4D39F1   		cmp	r9, r14	# tmp265, ivtmp.687
 15935 551b 7417     		je	.L1396	#,
 15936              	# sieve_extend.c:1114:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1114:sieve_extend.c ****             }
 15937              		.loc 1 1114 33 view .LVU5641
 15938 551d 31D2     		xor	edx, edx	# tmp267
 15939 551f 4C89E0   		mov	rax, r12	# tmp268, ivtmp.685
 15940 5522 48F7F3   		div	rbx	# ivtmp.677
 15941              	# sieve_extend.c:1114:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1114:sieve_extend.c ****             }
 15942              		.loc 1 1114 20 view .LVU5642
 15943 5525 4885D2   		test	rdx, rdx	# tmp267
 15944 5528 410F94C2 		sete	r10b	#, tmp269
 15945              	# sieve_extend.c:1114:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1114:sieve_extend.c ****             }
 15946              		.loc 1 1114 82 view .LVU5643
 15947 552c 4180FA01 		cmp	r10b, 1	# tmp269,
 15948 5530 4883DDFF 		sbb	rbp, -1	# c_prime,
 15949              	.LVL957:
 15950              	.L1396:
1113:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15951              		.loc 1 1113 68 is_stmt 1 view .LVU5644
 15952              	# sieve_extend.c:1113:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1113:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15953              		.loc 1 1113 69 is_stmt 0 view .LVU5645
 15954 5534 4C8D4902 		lea	r9, 2[rcx]	# c,
1113:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15955              		.loc 1 1113 32 is_stmt 1 view .LVU5646
 15956 5538 488D5E04 		lea	rbx, 4[rsi]	# ivtmp.677,
 15957              	# sieve_extend.c:1113:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1113:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
GAS LISTING /tmp/ccjg94QQ.s 			page 429


 15958              		.loc 1 1113 51 is_stmt 0 view .LVU5647
 15959 553c 4D89CB   		mov	r11, r9	# tmp272, c
 15960 553f 4D0FAFD9 		imul	r11, r9	# tmp272, c
 15961              	# sieve_extend.c:1113:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1113:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15962              		.loc 1 1113 47 view .LVU5648
 15963 5543 4D39E3   		cmp	r11, r12	# tmp272, ivtmp.685
 15964 5546 7738     		ja	.L1339	#,
1114:sieve_extend.c ****             }
 15965              		.loc 1 1114 17 is_stmt 1 view .LVU5649
 15966              	# sieve_extend.c:1114:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1114:sieve_extend.c ****             }
 15967              		.loc 1 1114 48 is_stmt 0 view .LVU5650
 15968 5548 4D01C9   		add	r9, r9	# tmp273
 15969 554b 4D39F1   		cmp	r9, r14	# tmp273, ivtmp.687
 15970 554e 7417     		je	.L1398	#,
 15971              	# sieve_extend.c:1114:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1114:sieve_extend.c ****             }
 15972              		.loc 1 1114 33 view .LVU5651
 15973 5550 31D2     		xor	edx, edx	# tmp275
 15974 5552 4C89E0   		mov	rax, r12	# tmp276, ivtmp.685
 15975 5555 48F7F3   		div	rbx	# ivtmp.677
 15976              	# sieve_extend.c:1114:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1114:sieve_extend.c ****             }
 15977              		.loc 1 1114 20 view .LVU5652
 15978 5558 4885D2   		test	rdx, rdx	# tmp275
 15979 555b 410F94C2 		sete	r10b	#, tmp277
 15980              	# sieve_extend.c:1114:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1114:sieve_extend.c ****             }
 15981              		.loc 1 1114 82 view .LVU5653
 15982 555f 4180FA01 		cmp	r10b, 1	# tmp277,
 15983 5563 4883DDFF 		sbb	rbp, -1	# c_prime,
 15984              	.LVL958:
 15985              	.L1398:
1113:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15986              		.loc 1 1113 68 is_stmt 1 view .LVU5654
 15987              	# sieve_extend.c:1113:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1113:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15988              		.loc 1 1113 69 is_stmt 0 view .LVU5655
 15989 5567 4883C103 		add	rcx, 3	# c,
 15990              	.LVL959:
1113:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15991              		.loc 1 1113 32 is_stmt 1 view .LVU5656
 15992 556b 4883C606 		add	rsi, 6	# ivtmp.677,
 15993              	# sieve_extend.c:1113:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1113:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15994              		.loc 1 1113 51 is_stmt 0 view .LVU5657
 15995 556f 4989C9   		mov	r9, rcx	# tmp278, c
 15996 5572 4C0FAFC9 		imul	r9, rcx	# tmp278, c
 15997              	# sieve_extend.c:1113:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1113:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15998              		.loc 1 1113 47 view .LVU5658
 15999 5576 4D39E1   		cmp	r9, r12	# tmp278, ivtmp.685
 16000 5579 0F8621FF 		jbe	.L1333	#,
 16000      FFFF
 16001              	.LVL960:
 16002 557f 90       		.p2align 4
GAS LISTING /tmp/ccjg94QQ.s 			page 430


 16003              		.p2align 3
 16004              	.L1339:
1113:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 16005              		.loc 1 1113 47 view .LVU5659
 16006              	.LBE769:
1116:sieve_extend.c ****         }
 16007              		.loc 1 1116 13 is_stmt 1 view .LVU5660
 16008              	# sieve_extend.c:1116:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1116:sieve_extend.c ****         }
 16009              		.loc 1 1116 16 is_stmt 0 view .LVU5661
 16010 5580 4885ED   		test	rbp, rbp	# c_prime
 16011 5583 0F840D02 		je	.L1457	#,
 16011      0000
 16012              	.LVL961:
 16013              	.L1336:
1116:sieve_extend.c ****         }
 16014              		.loc 1 1116 16 view .LVU5662
 16015              	.LBE767:
1103:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 16016              		.loc 1 1103 52 is_stmt 1 view .LVU5663
 16017              	# sieve_extend.c:1103:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
1103:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 16018              		.loc 1 1103 57 is_stmt 0 view .LVU5664
 16019 5589 4983C701 		add	r15, 1	# prime,
 16020              	.LVL962:
1103:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 16021              		.loc 1 1103 31 is_stmt 1 view .LVU5665
 16022 558d 4983C402 		add	r12, 2	# ivtmp.685,
 16023 5591 4983C602 		add	r14, 2	# ivtmp.687,
 16024              	# sieve_extend.c:1103:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
1103:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 16025              		.loc 1 1103 5 is_stmt 0 view .LVU5666
 16026 5595 4939FF   		cmp	r15, rdi	# prime, _137
 16027 5598 0F8202FE 		jb	.L1340	#,
 16027      FFFF
 16028              	.LVL963:
 16029              	.L1446:
1103:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 16030              		.loc 1 1103 5 view .LVU5667
 16031 559e 448B6C24 		mov	r13d, DWORD PTR 36[rsp]	# <retval>, %sfp
 16031      24
 16032              	.LVL964:
 16033              	.L1310:
1103:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 16034              		.loc 1 1103 5 view .LVU5668
 16035              	.LBE778:
 16036              	.LBE753:
 16037              	.LBE752:
 16038              	# sieve_extend.c:1147: }
1147:sieve_extend.c **** 
 16039              		.loc 1 1147 1 view .LVU5669
 16040 55a3 488D6424 		lea	rsp, 56[rsp]	#,
 16040      38
 16041              		.cfi_remember_state
 16042              		.cfi_def_cfa_offset 56
 16043 55a8 4489E8   		mov	eax, r13d	#, <retval>
 16044 55ab 5B       		pop	rbx	#
GAS LISTING /tmp/ccjg94QQ.s 			page 431


 16045              		.cfi_def_cfa_offset 48
 16046 55ac 5D       		pop	rbp	#
 16047              		.cfi_def_cfa_offset 40
 16048 55ad 415C     		pop	r12	#
 16049              		.cfi_def_cfa_offset 32
 16050 55af 415D     		pop	r13	#
 16051              		.cfi_def_cfa_offset 24
 16052 55b1 415E     		pop	r14	#
 16053              		.cfi_def_cfa_offset 16
 16054 55b3 415F     		pop	r15	#
 16055              		.cfi_def_cfa_offset 8
 16056 55b5 C3       		ret	
 16057              	.LVL965:
 16058              	.L1455:
 16059              		.cfi_restore_state
 16060              	# sieve_extend.c:1126:     switch(sieve->size) {
1126:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 16061              		.loc 1 1126 5 view .LVU5670
 16062 55b6 4981F9E8 		cmp	r9, 1000	# pretmp_199,
 16062      030000
 16063 55bd 0F84E602 		je	.L1317	#,
 16063      0000
 16064 55c3 7633     		jbe	.L1458	#,
 16065 55c5 4981F910 		cmp	r9, 10000	# pretmp_199,
 16065      270000
 16066 55cc 0F852303 		jne	.L1321	#,
 16066      0000
 16067 55d2 4981F8CD 		cmp	r8, 1229	# primeCount,
 16067      040000
 16068              	# sieve_extend.c:1130:         case 10000:         valid_primes = 1229;     break;
1130:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 16069              		.loc 1 1130 42 view .LVU5671
 16070 55d9 B9CD0400 		mov	ecx, 1229	# valid_primes,
 16070      00
 16071 55de 400F94C6 		sete	sil	#, tmp179
 16072 55e2 21F2     		and	edx, esi	# _251, tmp179
 16073 55e4 4981F8CD 		cmp	r8, 1229	# primeCount,
 16073      040000
 16074 55eb 440FB6EE 		movzx	r13d, sil	# <retval>, tmp179
 16075 55ef 410F95C6 		setne	r14b	#, _135
1130:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 16076              		.loc 1 1130 29 is_stmt 1 view .LVU5672
 16077              	.LVL966:
1130:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 16078              		.loc 1 1130 54 view .LVU5673
 16079              	# sieve_extend.c:1130:         case 10000:         valid_primes = 1229;     break;
1130:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 16080              		.loc 1 1130 9 is_stmt 0 view .LVU5674
 16081 55f3 E938FDFF 		jmp	.L1328	#
 16081      FF
 16082              	.LVL967:
 16083              	.L1458:
 16084              	# sieve_extend.c:1126:     switch(sieve->size) {
1126:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 16085              		.loc 1 1126 5 view .LVU5675
 16086 55f8 4983F90A 		cmp	r9, 10	# pretmp_199,
 16087 55fc 0F841A02 		je	.L1319	#,
GAS LISTING /tmp/ccjg94QQ.s 			page 432


 16087      0000
 16088 5602 4983F964 		cmp	r9, 100	# pretmp_199,
 16089 5606 0F85E902 		jne	.L1321	#,
 16089      0000
 16090 560c 4983F819 		cmp	r8, 25	# primeCount,
 16091 5610 0F94C1   		sete	cl	#, tmp173
 16092 5613 21CA     		and	edx, ecx	# _251, tmp173
 16093 5615 4983F819 		cmp	r8, 25	# primeCount,
 16094 5619 440FB6E9 		movzx	r13d, cl	# <retval>, tmp173
 16095 561d 410F95C6 		setne	r14b	#, _135
 16096              	# sieve_extend.c:1128:         case 100:           valid_primes = 25;       break;
1128:sieve_extend.c ****         case 1000:          valid_primes = 168;      break;
 16097              		.loc 1 1128 42 view .LVU5676
 16098 5621 B9190000 		mov	ecx, 25	# valid_primes,
 16098      00
 16099 5626 E905FDFF 		jmp	.L1328	#
 16099      FF
 16100 562b 0F1F4400 		.p2align 4,,7
 16100      00
 16101              		.p2align 3
 16102              	.L1456:
 16103              	# sieve_extend.c:1126:     switch(sieve->size) {
1126:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 16104              		.loc 1 1126 5 view .LVU5677
 16105 5630 4981F940 		cmp	r9, 1000000	# pretmp_199,
 16105      420F00
 16106 5637 0F84B801 		je	.L1325	#,
 16106      0000
 16107 563d 4981F980 		cmp	r9, 10000000	# pretmp_199,
 16107      969800
 16108 5644 0F85AB02 		jne	.L1321	#,
 16108      0000
 16109 564a 4981F803 		cmp	r8, 664579	# primeCount,
 16109      240A00
 16110              	# sieve_extend.c:1133:         case 10000000:      valid_primes = 664579;   break;
1133:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 16111              		.loc 1 1133 42 view .LVU5678
 16112 5651 B903240A 		mov	ecx, 664579	# valid_primes,
 16112      00
 16113 5656 410F94C7 		sete	r15b	#, tmp185
 16114 565a 4421FA   		and	edx, r15d	# _251, tmp185
 16115 565d 4981F803 		cmp	r8, 664579	# primeCount,
 16115      240A00
 16116 5664 450FB6EF 		movzx	r13d, r15b	# <retval>, tmp185
 16117 5668 410F95C6 		setne	r14b	#, _135
1133:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 16118              		.loc 1 1133 29 is_stmt 1 view .LVU5679
 16119              	.LVL968:
1133:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 16120              		.loc 1 1133 54 view .LVU5680
 16121              	# sieve_extend.c:1133:         case 10000000:      valid_primes = 664579;   break;
1133:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 16122              		.loc 1 1133 9 is_stmt 0 view .LVU5681
 16123 566c E9BFFCFF 		jmp	.L1328	#
 16123      FF
 16124              	.LVL969:
 16125              		.p2align 4,,7
GAS LISTING /tmp/ccjg94QQ.s 			page 433


 16126 5671 0F1F8000 		.p2align 3
 16126      000000
 16127              	.L1332:
 16128              	.LBB783:
 16129              	.LBB781:
 16130              	.LBB779:
 16131              	.LBB776:
1105:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 16132              		.loc 1 1105 32 is_stmt 1 view .LVU5682
 16133              	# sieve_extend.c:1105:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1105:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 16134              		.loc 1 1105 13 is_stmt 0 view .LVU5683
 16135 5678 4885FF   		test	rdi, rdi	# _137
 16136 567b 0F841DFF 		je	.L1446	#,
 16136      FFFF
 16137              	# sieve_extend.c:1105:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1105:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 16138              		.loc 1 1105 27 view .LVU5684
 16139 5681 BB010000 		mov	ebx, 1	# c,
 16139      00
 16140 5686 EB20     		jmp	.L1337	#
 16141              	.LVL970:
 16142              		.p2align 4,,7
 16143              		.p2align 3
 16144              	.L1346:
 16145              	# sieve_extend.c:1107:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was mark
1107:sieve_extend.c ****                 }
 16146              		.loc 1 1107 35 view .LVU5685
 16147 5688 4989E8   		mov	r8, rbp	# warn_prime, warn_prime
 16148              	.LVL971:
 16149              	.L1335:
1105:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 16150              		.loc 1 1105 68 is_stmt 1 view .LVU5686
 16151              	# sieve_extend.c:1105:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1105:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 16152              		.loc 1 1105 69 is_stmt 0 view .LVU5687
 16153 568b 4883C301 		add	rbx, 1	# c,
 16154              	.LVL972:
1105:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 16155              		.loc 1 1105 32 is_stmt 1 view .LVU5688
 16156              	# sieve_extend.c:1105:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1105:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 16157              		.loc 1 1105 13 is_stmt 0 view .LVU5689
 16158 568f 4839FB   		cmp	rbx, rdi	# c, _137
 16159 5692 0F87F1FE 		ja	.L1336	#,
 16159      FFFF
 16160              	# sieve_extend.c:1105:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1105:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 16161              		.loc 1 1105 51 view .LVU5690
 16162 5698 4989DB   		mov	r11, rbx	# tmp209, c
 16163 569b 4C0FAFDB 		imul	r11, rbx	# tmp209, c
 16164              	# sieve_extend.c:1105:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1105:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 16165              		.loc 1 1105 47 view .LVU5691
 16166 569f 4D39E3   		cmp	r11, r12	# tmp209, ivtmp.685
 16167 56a2 0F87E1FE 		ja	.L1336	#,
 16167      FFFF
GAS LISTING /tmp/ccjg94QQ.s 			page 434


 16168              	.LVL973:
 16169              	.L1337:
1106:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 16170              		.loc 1 1106 17 is_stmt 1 view .LVU5692
 16171 56a8 488D2C1B 		lea	rbp, [rbx+rbx]	# _216,
 16172 56ac 31D2     		xor	edx, edx	# tmp204
 16173 56ae 4C89E0   		mov	rax, r12	# tmp203, ivtmp.685
 16174              	# sieve_extend.c:1106:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
1106:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 16175              		.loc 1 1106 39 is_stmt 0 view .LVU5693
 16176 56b1 488D7501 		lea	rsi, 1[rbp]	# _55,
 16177 56b5 48F7F6   		div	rsi	# _55
 16178              	# sieve_extend.c:1106:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
1106:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 16179              		.loc 1 1106 48 view .LVU5694
 16180 56b8 4885D2   		test	rdx, rdx	# tmp204
 16181 56bb 75CE     		jne	.L1335	#,
1106:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 16182              		.loc 1 1106 48 view .LVU5695
 16183 56bd 4939EE   		cmp	r14, rbp	# ivtmp.687, _216
 16184 56c0 74C9     		je	.L1335	#,
1107:sieve_extend.c ****                 }
 16185              		.loc 1 1107 21 is_stmt 1 view .LVU5696
 16186              	# sieve_extend.c:1107:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was mark
1107:sieve_extend.c ****                 }
 16187              		.loc 1 1107 24 is_stmt 0 view .LVU5697
 16188 56c2 4983F81D 		cmp	r8, 29	# warn_prime,
 16189              	# sieve_extend.c:1107:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was mark
1107:sieve_extend.c ****                 }
 16190              		.loc 1 1107 35 view .LVU5698
 16191 56c6 498D6801 		lea	rbp, 1[r8]	# warn_prime,
 16192              	.LVL974:
 16193              	# sieve_extend.c:1107:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was mark
1107:sieve_extend.c ****                 }
 16194              		.loc 1 1107 24 view .LVU5699
 16195 56ca 77BC     		ja	.L1346	#,
1107:sieve_extend.c ****                 }
 16196              		.loc 1 1107 44 is_stmt 1 view .LVU5700
 16197              	.LVL975:
 16198              	.LBB764:
 16199              	.LBI758:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16200              		.loc 3 105 1 view .LVU5701
 16201              	.LBB761:
 16202              		.loc 3 107 3 view .LVU5702
 16203              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16204              		.loc 3 107 10 is_stmt 0 view .LVU5703
 16205 56cc 4989F0   		mov	r8, rsi	#, _55
 16206 56cf 4989C1   		mov	r9, rax	#, tmp203
 16207 56d2 BF010000 		mov	edi, 1	#,
 16207      00
 16208 56d7 4C89F9   		mov	rcx, r15	#, prime
 16209 56da 4C892424 		mov	QWORD PTR [rsp], r12	#, ivtmp.685
 16210 56de 4C89E2   		mov	rdx, r12	#, ivtmp.685
 16211 56e1 488D3500 		lea	rsi, .LC12[rip]	#,
 16211      000000
 16212 56e8 31C0     		xor	eax, eax	#
GAS LISTING /tmp/ccjg94QQ.s 			page 435


 16213 56ea E8000000 		call	__printf_chk@PLT	#
 16213      00
 16214              	.LVL976:
 16215 56ef 498B7D08 		mov	rdi, QWORD PTR 8[r13]	# _137, MEM[(uint64_t *)sieve_18(D) + 8B]
 16216              	.LBE761:
 16217              	.LBE764:
 16218              	# sieve_extend.c:1107:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was mark
1107:sieve_extend.c ****                 }
 16219              		.loc 1 1107 35 view .LVU5704
 16220 56f3 4989E8   		mov	r8, rbp	# warn_prime, warn_prime
 16221              	.LBB765:
 16222              	.LBB762:
 16223              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16224              		.loc 3 107 10 view .LVU5705
 16225 56f6 EB93     		jmp	.L1335	#
 16226              	.LVL977:
 16227              	.L1311:
 16228              		.loc 3 107 10 view .LVU5706
 16229              	.LBE762:
 16230              	.LBE765:
 16231              	.LBE776:
 16232              	.LBE779:
 16233              	.LBE781:
 16234              	.LBE783:
 16235              	.LBB784:
 16236              	.LBB749:
1096:sieve_extend.c **** }
 16237              		.loc 1 1096 5 is_stmt 1 view .LVU5707
1096:sieve_extend.c **** }
 16238              		.loc 1 1096 5 is_stmt 0 view .LVU5708
 16239              	.LBE749:
 16240              	.LBE784:
1125:sieve_extend.c ****     switch(sieve->size) {
 16241              		.loc 1 1125 5 is_stmt 1 view .LVU5709
1126:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 16242              		.loc 1 1126 5 view .LVU5710
 16243 56f8 4531ED   		xor	r13d, r13d	# <retval>
 16244 56fb 4981F9A0 		cmp	r9, 100000	# pretmp_199,
 16244      860100
 16245 5702 41BE0100 		mov	r14d, 1	# _135,
 16245      0000
 16246 5708 41B80100 		mov	r8d, 1	# primeCount,
 16246      0000
 16247 570e 0F842302 		je	.L1349	#,
 16247      0000
 16248 5714 0F872301 		ja	.L1341	#,
 16248      0000
 16249 571a 4983F964 		cmp	r9, 100	# pretmp_199,
 16250 571e B9190000 		mov	ecx, 25	# valid_primes,
 16250      00
 16251 5723 742A     		je	.L1329	#,
 16252              		.p2align 4,,2
 16253 5725 0F864001 		jbe	.L1459	#,
 16253      0000
 16254 572b 4981F9E8 		cmp	r9, 1000	# pretmp_199,
 16254      030000
 16255              	# sieve_extend.c:1129:         case 1000:          valid_primes = 168;      break;
GAS LISTING /tmp/ccjg94QQ.s 			page 436


1129:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 16256              		.loc 1 1129 42 is_stmt 0 view .LVU5711
 16257 5732 B9A80000 		mov	ecx, 168	# valid_primes,
 16257      00
 16258              	# sieve_extend.c:1126:     switch(sieve->size) {
1126:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 16259              		.loc 1 1126 5 view .LVU5712
 16260 5737 7416     		je	.L1329	#,
 16261 5739 4981F910 		cmp	r9, 10000	# pretmp_199,
 16261      270000
 16262 5740 B9CD0400 		mov	ecx, 1229	# tmp223,
 16262      00
 16263 5745 41BA0000 		mov	r10d, 0	# tmp224,
 16263      0000
 16264 574b 490F45CA 		cmovne	rcx, r10	# tmp223,, valid_primes, tmp224
 16265              	.LVL978:
 16266              	.L1329:
1141:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 16267              		.loc 1 1141 5 is_stmt 1 view .LVU5713
 16268              	# sieve_extend.c:1141:     if (!valid && option_verboselevel >= 1) {
1141:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 16269              		.loc 1 1141 39 is_stmt 0 view .LVU5714
 16270 574f 85DB     		test	ebx, ebx	# option_verboselevel
 16271 5751 410F9FC4 		setg	r12b	#, tmp194
 16272              	# sieve_extend.c:1141:     if (!valid && option_verboselevel >= 1) {
1141:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 16273              		.loc 1 1141 8 view .LVU5715
 16274 5755 4520F4   		and	r12b, r14b	# _7, _135
 16275 5758 0F84F0FB 		je	.L1330	#,
 16275      FFFF
1142:sieve_extend.c ****         if (!valid && option_verboselevel >= 2) show_primes(sieve, default_show_primes_on_error);
 16276              		.loc 1 1142 9 is_stmt 1 view .LVU5716
 16277              	.LVL979:
 16278              	.LBB785:
 16279              	.LBI785:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16280              		.loc 3 105 1 view .LVU5717
 16281              	.LBB786:
 16282              		.loc 3 107 3 view .LVU5718
 16283              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16284              		.loc 3 107 10 is_stmt 0 view .LVU5719
 16285 575e 31C0     		xor	eax, eax	#
 16286 5760 4C89CA   		mov	rdx, r9	#, pretmp_199
 16287 5763 488D3500 		lea	rsi, .LC10[rip]	#,
 16287      000000
 16288 576a BF010000 		mov	edi, 1	#,
 16288      00
 16289 576f E8000000 		call	__printf_chk@PLT	#
 16289      00
 16290              	.LVL980:
 16291              		.loc 3 107 10 view .LVU5720
 16292              	.LBE786:
 16293              	.LBE785:
1143:sieve_extend.c ****     }
 16294              		.loc 1 1143 9 is_stmt 1 view .LVU5721
 16295              	# sieve_extend.c:1143:         if (!valid && option_verboselevel >= 2) show_primes(sieve, default_s
1143:sieve_extend.c ****     }
GAS LISTING /tmp/ccjg94QQ.s 			page 437


 16296              		.loc 1 1143 12 is_stmt 0 view .LVU5722
 16297 5774 83FB01   		cmp	ebx, 1	# option_verboselevel,
 16298 5777 0F8426FE 		je	.L1310	#,
 16298      FFFF
1143:sieve_extend.c ****     }
 16299              		.loc 1 1143 49 is_stmt 1 discriminator 1 view .LVU5723
 16300 577d 488D7508 		lea	rsi, 8[rbp]	# tmp195,
 16301 5781 BA640000 		mov	edx, 100	#,
 16301      00
 16302 5786 4889EF   		mov	rdi, rbp	#, sieve
 16303              	# sieve_extend.c:1141:     if (!valid && option_verboselevel >= 1) {
1141:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 16304              		.loc 1 1141 9 is_stmt 0 discriminator 1 view .LVU5724
 16305 5789 4589E6   		mov	r14d, r12d	# _135, _7
 16306              	# sieve_extend.c:1143:         if (!valid && option_verboselevel >= 2) show_primes(sieve, default_s
1143:sieve_extend.c ****     }
 16307              		.loc 1 1143 49 discriminator 1 view .LVU5725
 16308 578c E8BFDFFF 		call	show_primes.isra.0	#
 16308      FF
 16309              	.LVL981:
 16310 5791 E9B8FBFF 		jmp	.L1330	#
 16310      FF
 16311              	.LVL982:
 16312              	.L1457:
 16313              	.LBB787:
 16314              	.LBB782:
 16315              	.LBB780:
 16316              	.LBB777:
 16317              	# sieve_extend.c:1116:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1116:sieve_extend.c ****         }
 16318              		.loc 1 1116 44 view .LVU5726
 16319 5796 488B4C24 		mov	rcx, QWORD PTR 24[rsp]	# warn_nonprime, %sfp
 16319      18
 16320              	# sieve_extend.c:1116:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1116:sieve_extend.c ****         }
 16321              		.loc 1 1116 28 view .LVU5727
 16322 579b 4883F91D 		cmp	rcx, 29	# warn_nonprime,
 16323              	# sieve_extend.c:1116:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1116:sieve_extend.c ****         }
 16324              		.loc 1 1116 44 view .LVU5728
 16325 579f 488D5901 		lea	rbx, 1[rcx]	# warn_nonprime,
 16326              	.LVL983:
 16327              	# sieve_extend.c:1116:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1116:sieve_extend.c ****         }
 16328              		.loc 1 1116 28 view .LVU5729
 16329 57a3 761D     		jbe	.L1344	#,
 16330              	# sieve_extend.c:1116:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1116:sieve_extend.c ****         }
 16331              		.loc 1 1116 44 view .LVU5730
 16332 57a5 48895C24 		mov	QWORD PTR 24[rsp], rbx	# %sfp, warn_nonprime
 16332      18
 16333 57aa E9DAFDFF 		jmp	.L1336	#
 16333      FF
 16334              	.LVL984:
 16335              	.L1444:
1116:sieve_extend.c ****         }
 16336              		.loc 1 1116 44 view .LVU5731
GAS LISTING /tmp/ccjg94QQ.s 			page 438


 16337 57af 488B5424 		mov	rdx, QWORD PTR 24[rsp]	# warn_nonprime, %sfp
 16337      18
 16338              	# sieve_extend.c:1116:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1116:sieve_extend.c ****         }
 16339              		.loc 1 1116 28 view .LVU5732
 16340 57b4 4883FA1D 		cmp	rdx, 29	# warn_nonprime,
 16341              	# sieve_extend.c:1116:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1116:sieve_extend.c ****         }
 16342              		.loc 1 1116 44 view .LVU5733
 16343 57b8 488D5A01 		lea	rbx, 1[rdx]	# warn_nonprime,
 16344              	.LVL985:
 16345              	# sieve_extend.c:1116:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1116:sieve_extend.c ****         }
 16346              		.loc 1 1116 28 view .LVU5734
 16347 57bc 0F87DCFD 		ja	.L1446	#,
 16347      FFFF
 16348              	.LVL986:
 16349              	.L1344:
 16350              	.LBB770:
 16351              	.LBB771:
 16352              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16353              		.loc 3 107 10 view .LVU5735
 16354 57c2 BF010000 		mov	edi, 1	#,
 16354      00
 16355              	.LBE771:
 16356              	.LBE770:
 16357              	# sieve_extend.c:1116:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1116:sieve_extend.c ****         }
 16358              		.loc 1 1116 53 view .LVU5736
 16359 57c7 4B8D543F 		lea	rdx, 1[r15+r15]	# tmp220,
 16359      01
 16360              	.LBB774:
 16361              	.LBB772:
 16362              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16363              		.loc 3 107 10 view .LVU5737
 16364 57cc 4C89F9   		mov	rcx, r15	#, prime
 16365 57cf 488D3500 		lea	rsi, .LC13[rip]	#,
 16365      000000
 16366 57d6 4C894424 		mov	QWORD PTR 40[rsp], r8	# %sfp, warn_prime
 16366      28
 16367              	.LBE772:
 16368              	.LBE774:
1116:sieve_extend.c ****         }
 16369              		.loc 1 1116 53 is_stmt 1 view .LVU5738
 16370              	.LVL987:
 16371              	.LBB775:
 16372              	.LBI770:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16373              		.loc 3 105 1 view .LVU5739
 16374              	.LBB773:
 16375              		.loc 3 107 3 view .LVU5740
 16376              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16377              		.loc 3 107 10 is_stmt 0 view .LVU5741
 16378 57db 31C0     		xor	eax, eax	#
 16379 57dd E8000000 		call	__printf_chk@PLT	#
 16379      00
 16380              	.LVL988:
GAS LISTING /tmp/ccjg94QQ.s 			page 439


 16381              		.loc 3 107 10 view .LVU5742
 16382 57e2 498B7D08 		mov	rdi, QWORD PTR 8[r13]	# _137, MEM[(uint64_t *)sieve_18(D) + 8B]
 16383 57e6 4C8B4424 		mov	r8, QWORD PTR 40[rsp]	# warn_prime, %sfp
 16383      28
 16384 57eb 48895C24 		mov	QWORD PTR 24[rsp], rbx	# %sfp, warn_nonprime
 16384      18
 16385 57f0 E994FDFF 		jmp	.L1336	#
 16385      FF
 16386              	.LVL989:
 16387              	.L1325:
 16388              		.loc 3 107 10 view .LVU5743
 16389 57f5 4981F8A2 		cmp	r8, 78498	# primeCount,
 16389      320100
 16390              	.LBE773:
 16391              	.LBE775:
 16392              	.LBE777:
 16393              	.LBE780:
 16394              	.LBE782:
 16395              	.LBE787:
 16396              	# sieve_extend.c:1132:         case 1000000:       valid_primes = 78498;    break;
1132:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 16397              		.loc 1 1132 42 view .LVU5744
 16398 57fc B9A23201 		mov	ecx, 78498	# valid_primes,
 16398      00
 16399 5801 410F94C5 		sete	r13b	#, tmp183
 16400 5805 4421EA   		and	edx, r13d	# _251, tmp183
 16401 5808 4981F8A2 		cmp	r8, 78498	# primeCount,
 16401      320100
 16402 580f 450FB6ED 		movzx	r13d, r13b	# <retval>, tmp183
 16403 5813 410F95C6 		setne	r14b	#, _135
1132:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 16404              		.loc 1 1132 29 is_stmt 1 view .LVU5745
 16405              	.LVL990:
1132:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 16406              		.loc 1 1132 54 view .LVU5746
 16407              	# sieve_extend.c:1132:         case 1000000:       valid_primes = 78498;    break;
1132:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 16408              		.loc 1 1132 9 is_stmt 0 view .LVU5747
 16409 5817 E914FBFF 		jmp	.L1328	#
 16409      FF
 16410              	.LVL991:
 16411              	.L1319:
1132:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 16412              		.loc 1 1132 9 view .LVU5748
 16413 581c 4983F804 		cmp	r8, 4	# primeCount,
 16414              	# sieve_extend.c:1127:         case 10:            valid_primes = 4;        break;
1127:sieve_extend.c ****         case 100:           valid_primes = 25;       break;
 16415              		.loc 1 1127 42 view .LVU5749
 16416 5820 B9040000 		mov	ecx, 4	# valid_primes,
 16416      00
 16417 5825 410F94C2 		sete	r10b	#, tmp175
 16418 5829 4421D2   		and	edx, r10d	# _251, tmp175
 16419 582c 4983F804 		cmp	r8, 4	# primeCount,
 16420 5830 450FB6EA 		movzx	r13d, r10b	# <retval>, tmp175
 16421 5834 410F95C6 		setne	r14b	#, _135
 16422 5838 E9F3FAFF 		jmp	.L1328	#
 16422      FF
GAS LISTING /tmp/ccjg94QQ.s 			page 440


 16423              	.LVL992:
 16424              	.L1341:
 16425              	# sieve_extend.c:1126:     switch(sieve->size) {
1126:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 16426              		.loc 1 1126 5 view .LVU5750
 16427 583d 4981F900 		cmp	r9, 100000000	# pretmp_199,
 16427      E1F505
 16428              	# sieve_extend.c:1134:         case 100000000:     valid_primes = 5761455;  break;
1134:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 16429              		.loc 1 1134 42 view .LVU5751
 16430 5844 B9AFE957 		mov	ecx, 5761455	# valid_primes,
 16430      00
 16431              	# sieve_extend.c:1126:     switch(sieve->size) {
1126:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 16432              		.loc 1 1126 5 view .LVU5752
 16433 5849 0F8400FF 		je	.L1329	#,
 16433      FFFF
 16434 584f 762C     		jbe	.L1460	#,
 16435 5851 4981F900 		cmp	r9, 1000000000	# pretmp_199,
 16435      CA9A3B
 16436 5858 B92EDF07 		mov	ecx, 50847534	# tmp227,
 16436      03
 16437 585d B8000000 		mov	eax, 0	# tmp228,
 16437      00
 16438 5862 480F45C8 		cmovne	rcx, rax	# tmp227,, valid_primes, tmp228
 16439 5866 E9E4FEFF 		jmp	.L1329	#
 16439      FF
 16440              	.L1459:
 16441 586b 31C9     		xor	ecx, ecx	# valid_primes
 16442 586d 4983F90A 		cmp	r9, 10	# pretmp_199,
 16443 5871 0F94C1   		sete	cl	#, valid_primes
 16444 5874 48C1E102 		sal	rcx, 2	# valid_primes,
 16445 5878 E9D2FEFF 		jmp	.L1329	#
 16445      FF
 16446              	.L1460:
 16447 587d 4981F940 		cmp	r9, 1000000	# pretmp_199,
 16447      420F00
 16448              	# sieve_extend.c:1132:         case 1000000:       valid_primes = 78498;    break;
1132:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 16449              		.loc 1 1132 42 view .LVU5753
 16450 5884 B9A23201 		mov	ecx, 78498	# valid_primes,
 16450      00
 16451              	# sieve_extend.c:1126:     switch(sieve->size) {
1126:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 16452              		.loc 1 1126 5 view .LVU5754
 16453 5889 0F84C0FE 		je	.L1329	#,
 16453      FFFF
 16454 588f 4981F980 		cmp	r9, 10000000	# pretmp_199,
 16454      969800
 16455 5896 B903240A 		mov	ecx, 664579	# tmp225,
 16455      00
 16456 589b BE000000 		mov	esi, 0	# tmp226,
 16456      00
 16457 58a0 480F45CE 		cmovne	rcx, rsi	# tmp225,, valid_primes, tmp226
 16458 58a4 E9A6FEFF 		jmp	.L1329	#
 16458      FF
 16459              	.LVL993:
GAS LISTING /tmp/ccjg94QQ.s 			page 441


 16460              	.L1317:
1126:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 16461              		.loc 1 1126 5 view .LVU5755
 16462 58a9 4981F8A8 		cmp	r8, 168	# primeCount,
 16462      000000
 16463              	# sieve_extend.c:1129:         case 1000:          valid_primes = 168;      break;
1129:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 16464              		.loc 1 1129 42 view .LVU5756
 16465 58b0 B9A80000 		mov	ecx, 168	# valid_primes,
 16465      00
 16466 58b5 410F94C6 		sete	r14b	#, tmp177
 16467 58b9 4421F2   		and	edx, r14d	# _251, tmp177
 16468 58bc 4981F8A8 		cmp	r8, 168	# primeCount,
 16468      000000
 16469 58c3 450FB6EE 		movzx	r13d, r14b	# <retval>, tmp177
 16470 58c7 410F95C6 		setne	r14b	#, _135
1129:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 16471              		.loc 1 1129 29 is_stmt 1 view .LVU5757
 16472              	.LVL994:
1129:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 16473              		.loc 1 1129 54 view .LVU5758
 16474              	# sieve_extend.c:1129:         case 1000:          valid_primes = 168;      break;
1129:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 16475              		.loc 1 1129 9 is_stmt 0 view .LVU5759
 16476 58cb E960FAFF 		jmp	.L1328	#
 16476      FF
 16477              	.LVL995:
 16478              	.L1323:
1129:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 16479              		.loc 1 1129 9 view .LVU5760
 16480 58d0 4981F8AF 		cmp	r8, 5761455	# primeCount,
 16480      E95700
 16481              	# sieve_extend.c:1134:         case 100000000:     valid_primes = 5761455;  break;
1134:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 16482              		.loc 1 1134 42 view .LVU5761
 16483 58d7 B9AFE957 		mov	ecx, 5761455	# valid_primes,
 16483      00
 16484 58dc 0F94C0   		sete	al	#, tmp187
 16485 58df 21C2     		and	edx, eax	# _251, tmp187
 16486 58e1 4981F8AF 		cmp	r8, 5761455	# primeCount,
 16486      E95700
 16487 58e8 440FB6E8 		movzx	r13d, al	# <retval>, tmp187
 16488 58ec 410F95C6 		setne	r14b	#, _135
1134:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 16489              		.loc 1 1134 29 is_stmt 1 view .LVU5762
 16490              	.LVL996:
1134:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 16491              		.loc 1 1134 54 view .LVU5763
 16492              	# sieve_extend.c:1134:         case 100000000:     valid_primes = 5761455;  break;
1134:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 16493              		.loc 1 1134 9 is_stmt 0 view .LVU5764
 16494 58f0 E93BFAFF 		jmp	.L1328	#
 16494      FF
 16495              	.LVL997:
 16496              	.L1321:
1134:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 16497              		.loc 1 1134 9 view .LVU5765
GAS LISTING /tmp/ccjg94QQ.s 			page 442


 16498 58f5 4D85C0   		test	r8, r8	# primeCount
 16499 58f8 410F94C3 		sete	r11b	#, tmp191
 16500 58fc 4421DA   		and	edx, r11d	# _251, tmp191
 16501 58ff 4D85C0   		test	r8, r8	# primeCount
 16502 5902 450FB6EB 		movzx	r13d, r11b	# <retval>, tmp191
 16503 5906 410F95C6 		setne	r14b	#, _135
1136:sieve_extend.c ****     }
 16504              		.loc 1 1136 29 is_stmt 1 view .LVU5766
 16505              	# sieve_extend.c:1136:         default:            valid_primes= 0;
1136:sieve_extend.c ****     }
 16506              		.loc 1 1136 41 is_stmt 0 view .LVU5767
 16507 590a 31C9     		xor	ecx, ecx	# valid_primes
 16508 590c E91FFAFF 		jmp	.L1328	#
 16508      FF
 16509              	.L1315:
1136:sieve_extend.c ****     }
 16510              		.loc 1 1136 41 view .LVU5768
 16511 5911 4981F878 		cmp	r8, 9592	# primeCount,
 16511      250000
 16512              	# sieve_extend.c:1131:         case 100000:        valid_primes = 9592;     break;
1131:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 16513              		.loc 1 1131 42 view .LVU5769
 16514 5918 B9782500 		mov	ecx, 9592	# valid_primes,
 16514      00
 16515 591d 400F94C7 		sete	dil	#, tmp181
 16516 5921 21FA     		and	edx, edi	# _251, tmp181
 16517 5923 4981F878 		cmp	r8, 9592	# primeCount,
 16517      250000
 16518 592a 440FB6EF 		movzx	r13d, dil	# <retval>, tmp181
 16519 592e 410F95C6 		setne	r14b	#, _135
1131:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 16520              		.loc 1 1131 29 is_stmt 1 view .LVU5770
 16521              	.LVL998:
1131:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 16522              		.loc 1 1131 54 view .LVU5771
 16523              	# sieve_extend.c:1131:         case 100000:        valid_primes = 9592;     break;
1131:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 16524              		.loc 1 1131 9 is_stmt 0 view .LVU5772
 16525 5932 E9F9F9FF 		jmp	.L1328	#
 16525      FF
 16526              	.LVL999:
 16527              	.L1349:
 16528              	# sieve_extend.c:1131:         case 100000:        valid_primes = 9592;     break;
1131:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 16529              		.loc 1 1131 42 view .LVU5773
 16530 5937 B9782500 		mov	ecx, 9592	# valid_primes,
 16530      00
 16531 593c E90EFEFF 		jmp	.L1329	#
 16531      FF
 16532              		.cfi_endproc
 16533              	.LFE80:
 16535              		.section	.rodata.str1.8
 16536 0145 000000   		.align 8
 16537              	.LC14:
 16538 0148 55736167 		.string	"Usage: %s [options] [maximum]\n"
 16538      653A2025 
 16538      73205B6F 
GAS LISTING /tmp/ccjg94QQ.s 			page 443


 16538      7074696F 
 16538      6E735D20 
 16539              		.section	.rodata.str1.1
 16540              	.LC15:
 16541 0031 4F707469 		.string	"Options:\n"
 16541      6F6E733A 
 16541      0A00
 16542              		.section	.rodata.str1.8
 16543 0167 00       		.align 8
 16544              	.LC16:
 16545 0168 20202D2D 		.string	"  --verbose <level>  Show more output to a certain level:\n"
 16545      76657262 
 16545      6F736520 
 16545      3C6C6576 
 16545      656C3E20 
 16546 01a3 00000000 		.align 8
 16546      00
 16547              	.LC17:
 16548 01a8 20202020 		.string	"                     1 - show phase progress\n"
 16548      20202020 
 16548      20202020 
 16548      20202020 
 16548      20202020 
 16549 01d6 0000     		.align 8
 16550              	.LC18:
 16551 01d8 20202020 		.string	"                     2 - show general progress within the phase\n"
 16551      20202020 
 16551      20202020 
 16551      20202020 
 16551      20202020 
 16552 0219 00000000 		.align 8
 16552      000000
 16553              	.LC19:
 16554 0220 20202020 		.string	"                     3 - show actual work\n"
 16554      20202020 
 16554      20202020 
 16554      20202020 
 16554      20202020 
 16555 024b 00000000 		.align 8
 16555      00
 16556              	.LC20:
 16557 0250 20202D2D 		.string	"  --check            check the correctness of the algorithm\n"
 16557      63686563 
 16557      6B202020 
 16557      20202020 
 16557      20202020 
 16558 028d 000000   		.align 8
 16559              	.LC21:
 16560 0290 20202D2D 		.string	"  --show <maximum>   Show the primes found up to the maximum\n"
 16560      73686F77 
 16560      203C6D61 
 16560      78696D75 
 16560      6D3E2020 
 16561 02ce 0000     		.align 8
 16562              	.LC22:
 16563 02d0 20202D2D 		.string	"  --tune  <level>    find the best settings for the current os and hardware\n"
 16563      74756E65 
GAS LISTING /tmp/ccjg94QQ.s 			page 444


 16563      20203C6C 
 16563      6576656C 
 16563      3E202020 
 16564 031d 000000   		.align 8
 16565              	.LC23:
 16566 0320 20202020 		.string	"                     1 - fast tuning\n"
 16566      20202020 
 16566      20202020 
 16566      20202020 
 16566      20202020 
 16567 0346 0000     		.align 8
 16568              	.LC24:
 16569 0348 20202020 		.string	"                     2 - refined tuning\n"
 16569      20202020 
 16569      20202020 
 16569      20202020 
 16569      20202020 
 16570 0371 00000000 		.align 8
 16570      000000
 16571              	.LC25:
 16572 0378 20202020 		.string	"                     3 - maximum tuning (takes long)\n"
 16572      20202020 
 16572      20202020 
 16572      20202020 
 16572      20202020 
 16573              		.text
 16574 5941 66662E0F 		.p2align 4
 16574      1F840000 
 16574      0000000F 
 16574      1F4000
 16575              		.globl	usage
 16577              	usage:
 16578              	.LVL1000:
 16579              	.LFB81:
1149:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 16580              		.loc 1 1149 24 is_stmt 1 view -0
 16581              		.cfi_startproc
1149:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 16582              		.loc 1 1149 24 is_stmt 0 view .LVU5775
 16583 5950 F30F1EFA 		endbr64	
 16584 5954 50       		push	rax	#
 16585              		.cfi_def_cfa_offset 16
 16586 5955 58       		pop	rax	#
 16587              		.cfi_def_cfa_offset 8
1150:sieve_extend.c ****     fprintf(stderr, "Options:\n");
 16588              		.loc 1 1150 5 is_stmt 1 view .LVU5776
 16589              	.LVL1001:
 16590              	.LBB788:
 16591              	.LBI788:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16592              		.loc 3 98 1 view .LVU5777
 16593              	.LBB789:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16594              		.loc 3 100 3 view .LVU5778
 16595              	.LBE789:
 16596              	.LBE788:
 16597              	# sieve_extend.c:1149: void usage(char *name) {
GAS LISTING /tmp/ccjg94QQ.s 			page 445


1149:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 16598              		.loc 1 1149 24 is_stmt 0 view .LVU5779
 16599 5956 488D6424 		lea	rsp, -8[rsp]	#,
 16599      F8
 16600              		.cfi_def_cfa_offset 16
 16601              	# sieve_extend.c:1149: void usage(char *name) {
1149:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 16602              		.loc 1 1149 24 view .LVU5780
 16603 595b 4889F9   		mov	rcx, rdi	# name, tmp107
 16604              	.LBB791:
 16605              	.LBB790:
 16606              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16607              		.loc 3 100 10 view .LVU5781
 16608 595e 488B3D00 		mov	rdi, QWORD PTR stderr[rip]	#, stderr
 16608      000000
 16609              	.LVL1002:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16610              		.loc 3 100 10 view .LVU5782
 16611 5965 488D1500 		lea	rdx, .LC14[rip]	#,
 16611      000000
 16612 596c BE010000 		mov	esi, 1	#,
 16612      00
 16613 5971 31C0     		xor	eax, eax	#
 16614 5973 E8000000 		call	__fprintf_chk@PLT	#
 16614      00
 16615              	.LVL1003:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16616              		.loc 3 100 10 view .LVU5783
 16617              	.LBE790:
 16618              	.LBE791:
1151:sieve_extend.c ****     fprintf(stderr, "  --verbose <level>  Show more output to a certain level:\n");
 16619              		.loc 1 1151 5 is_stmt 1 view .LVU5784
 16620              	.LBB792:
 16621              	.LBI792:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16622              		.loc 3 98 1 view .LVU5785
 16623              	.LBB793:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16624              		.loc 3 100 3 view .LVU5786
 16625              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16626              		.loc 3 100 10 is_stmt 0 view .LVU5787
 16627 5978 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 16627      000000
 16628 597f BA090000 		mov	edx, 9	#,
 16628      00
 16629 5984 BE010000 		mov	esi, 1	#,
 16629      00
 16630 5989 488D3D00 		lea	rdi, .LC15[rip]	#,
 16630      000000
 16631 5990 E8000000 		call	fwrite@PLT	#
 16631      00
 16632              	.LVL1004:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16633              		.loc 3 100 10 view .LVU5788
 16634              	.LBE793:
GAS LISTING /tmp/ccjg94QQ.s 			page 446


 16635              	.LBE792:
1152:sieve_extend.c ****     fprintf(stderr, "                     1 - show phase progress\n");
 16636              		.loc 1 1152 5 is_stmt 1 view .LVU5789
 16637              	.LBB794:
 16638              	.LBI794:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16639              		.loc 3 98 1 view .LVU5790
 16640              	.LBB795:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16641              		.loc 3 100 3 view .LVU5791
 16642              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16643              		.loc 3 100 10 is_stmt 0 view .LVU5792
 16644 5995 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 16644      000000
 16645 599c BA3A0000 		mov	edx, 58	#,
 16645      00
 16646 59a1 BE010000 		mov	esi, 1	#,
 16646      00
 16647 59a6 488D3D00 		lea	rdi, .LC16[rip]	#,
 16647      000000
 16648 59ad E8000000 		call	fwrite@PLT	#
 16648      00
 16649              	.LVL1005:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16650              		.loc 3 100 10 view .LVU5793
 16651              	.LBE795:
 16652              	.LBE794:
1153:sieve_extend.c ****     fprintf(stderr, "                     2 - show general progress within the phase\n");
 16653              		.loc 1 1153 5 is_stmt 1 view .LVU5794
 16654              	.LBB796:
 16655              	.LBI796:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16656              		.loc 3 98 1 view .LVU5795
 16657              	.LBB797:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16658              		.loc 3 100 3 view .LVU5796
 16659              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16660              		.loc 3 100 10 is_stmt 0 view .LVU5797
 16661 59b2 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 16661      000000
 16662 59b9 BA2D0000 		mov	edx, 45	#,
 16662      00
 16663 59be BE010000 		mov	esi, 1	#,
 16663      00
 16664 59c3 488D3D00 		lea	rdi, .LC17[rip]	#,
 16664      000000
 16665 59ca E8000000 		call	fwrite@PLT	#
 16665      00
 16666              	.LVL1006:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16667              		.loc 3 100 10 view .LVU5798
 16668              	.LBE797:
 16669              	.LBE796:
1154:sieve_extend.c ****     fprintf(stderr, "                     3 - show actual work\n");
 16670              		.loc 1 1154 5 is_stmt 1 view .LVU5799
GAS LISTING /tmp/ccjg94QQ.s 			page 447


 16671              	.LBB798:
 16672              	.LBI798:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16673              		.loc 3 98 1 view .LVU5800
 16674              	.LBB799:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16675              		.loc 3 100 3 view .LVU5801
 16676              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16677              		.loc 3 100 10 is_stmt 0 view .LVU5802
 16678 59cf 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 16678      000000
 16679 59d6 BA400000 		mov	edx, 64	#,
 16679      00
 16680 59db BE010000 		mov	esi, 1	#,
 16680      00
 16681 59e0 488D3D00 		lea	rdi, .LC18[rip]	#,
 16681      000000
 16682 59e7 E8000000 		call	fwrite@PLT	#
 16682      00
 16683              	.LVL1007:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16684              		.loc 3 100 10 view .LVU5803
 16685              	.LBE799:
 16686              	.LBE798:
1155:sieve_extend.c ****     fprintf(stderr, "  --check            check the correctness of the algorithm\n");
 16687              		.loc 1 1155 5 is_stmt 1 view .LVU5804
 16688              	.LBB800:
 16689              	.LBI800:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16690              		.loc 3 98 1 view .LVU5805
 16691              	.LBB801:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16692              		.loc 3 100 3 view .LVU5806
 16693              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16694              		.loc 3 100 10 is_stmt 0 view .LVU5807
 16695 59ec 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 16695      000000
 16696 59f3 BA2A0000 		mov	edx, 42	#,
 16696      00
 16697 59f8 BE010000 		mov	esi, 1	#,
 16697      00
 16698 59fd 488D3D00 		lea	rdi, .LC19[rip]	#,
 16698      000000
 16699 5a04 E8000000 		call	fwrite@PLT	#
 16699      00
 16700              	.LVL1008:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16701              		.loc 3 100 10 view .LVU5808
 16702              	.LBE801:
 16703              	.LBE800:
1156:sieve_extend.c ****     fprintf(stderr, "  --show <maximum>   Show the primes found up to the maximum\n");
 16704              		.loc 1 1156 5 is_stmt 1 view .LVU5809
 16705              	.LBB802:
 16706              	.LBI802:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
GAS LISTING /tmp/ccjg94QQ.s 			page 448


 16707              		.loc 3 98 1 view .LVU5810
 16708              	.LBB803:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16709              		.loc 3 100 3 view .LVU5811
 16710              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16711              		.loc 3 100 10 is_stmt 0 view .LVU5812
 16712 5a09 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 16712      000000
 16713 5a10 BA3C0000 		mov	edx, 60	#,
 16713      00
 16714 5a15 BE010000 		mov	esi, 1	#,
 16714      00
 16715 5a1a 488D3D00 		lea	rdi, .LC20[rip]	#,
 16715      000000
 16716 5a21 E8000000 		call	fwrite@PLT	#
 16716      00
 16717              	.LVL1009:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16718              		.loc 3 100 10 view .LVU5813
 16719              	.LBE803:
 16720              	.LBE802:
1157:sieve_extend.c ****     fprintf(stderr, "  --tune  <level>    find the best settings for the current os and hardware\n"
 16721              		.loc 1 1157 5 is_stmt 1 view .LVU5814
 16722              	.LBB804:
 16723              	.LBI804:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16724              		.loc 3 98 1 view .LVU5815
 16725              	.LBB805:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16726              		.loc 3 100 3 view .LVU5816
 16727              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16728              		.loc 3 100 10 is_stmt 0 view .LVU5817
 16729 5a26 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 16729      000000
 16730 5a2d BA3D0000 		mov	edx, 61	#,
 16730      00
 16731 5a32 BE010000 		mov	esi, 1	#,
 16731      00
 16732 5a37 488D3D00 		lea	rdi, .LC21[rip]	#,
 16732      000000
 16733 5a3e E8000000 		call	fwrite@PLT	#
 16733      00
 16734              	.LVL1010:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16735              		.loc 3 100 10 view .LVU5818
 16736              	.LBE805:
 16737              	.LBE804:
1158:sieve_extend.c ****     fprintf(stderr, "                     1 - fast tuning\n");
 16738              		.loc 1 1158 5 is_stmt 1 view .LVU5819
 16739              	.LBB806:
 16740              	.LBI806:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16741              		.loc 3 98 1 view .LVU5820
 16742              	.LBB807:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
GAS LISTING /tmp/ccjg94QQ.s 			page 449


 16743              		.loc 3 100 3 view .LVU5821
 16744              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16745              		.loc 3 100 10 is_stmt 0 view .LVU5822
 16746 5a43 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 16746      000000
 16747 5a4a BA4C0000 		mov	edx, 76	#,
 16747      00
 16748 5a4f BE010000 		mov	esi, 1	#,
 16748      00
 16749 5a54 488D3D00 		lea	rdi, .LC22[rip]	#,
 16749      000000
 16750 5a5b E8000000 		call	fwrite@PLT	#
 16750      00
 16751              	.LVL1011:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16752              		.loc 3 100 10 view .LVU5823
 16753              	.LBE807:
 16754              	.LBE806:
1159:sieve_extend.c ****     fprintf(stderr, "                     2 - refined tuning\n");
 16755              		.loc 1 1159 5 is_stmt 1 view .LVU5824
 16756              	.LBB808:
 16757              	.LBI808:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16758              		.loc 3 98 1 view .LVU5825
 16759              	.LBB809:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16760              		.loc 3 100 3 view .LVU5826
 16761              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16762              		.loc 3 100 10 is_stmt 0 view .LVU5827
 16763 5a60 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 16763      000000
 16764 5a67 BA250000 		mov	edx, 37	#,
 16764      00
 16765 5a6c BE010000 		mov	esi, 1	#,
 16765      00
 16766 5a71 488D3D00 		lea	rdi, .LC23[rip]	#,
 16766      000000
 16767 5a78 E8000000 		call	fwrite@PLT	#
 16767      00
 16768              	.LVL1012:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16769              		.loc 3 100 10 view .LVU5828
 16770              	.LBE809:
 16771              	.LBE808:
1160:sieve_extend.c ****     fprintf(stderr, "                     3 - maximum tuning (takes long)\n");
 16772              		.loc 1 1160 5 is_stmt 1 view .LVU5829
 16773              	.LBB810:
 16774              	.LBI810:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16775              		.loc 3 98 1 view .LVU5830
 16776              	.LBB811:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16777              		.loc 3 100 3 view .LVU5831
 16778              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
GAS LISTING /tmp/ccjg94QQ.s 			page 450


 16779              		.loc 3 100 10 is_stmt 0 view .LVU5832
 16780 5a7d 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 16780      000000
 16781 5a84 BA280000 		mov	edx, 40	#,
 16781      00
 16782 5a89 BE010000 		mov	esi, 1	#,
 16782      00
 16783 5a8e 488D3D00 		lea	rdi, .LC24[rip]	#,
 16783      000000
 16784 5a95 E8000000 		call	fwrite@PLT	#
 16784      00
 16785              	.LVL1013:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16786              		.loc 3 100 10 view .LVU5833
 16787              	.LBE811:
 16788              	.LBE810:
1161:sieve_extend.c ****     exit(1);
 16789              		.loc 1 1161 5 is_stmt 1 view .LVU5834
 16790              	.LBB812:
 16791              	.LBI812:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16792              		.loc 3 98 1 view .LVU5835
 16793              	.LBB813:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16794              		.loc 3 100 3 view .LVU5836
 16795              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16796              		.loc 3 100 10 is_stmt 0 view .LVU5837
 16797 5a9a 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 16797      000000
 16798 5aa1 488D3D00 		lea	rdi, .LC25[rip]	#,
 16798      000000
 16799 5aa8 BA350000 		mov	edx, 53	#,
 16799      00
 16800 5aad BE010000 		mov	esi, 1	#,
 16800      00
 16801 5ab2 E8000000 		call	fwrite@PLT	#
 16801      00
 16802              	.LVL1014:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16803              		.loc 3 100 10 view .LVU5838
 16804              	.LBE813:
 16805              	.LBE812:
1162:sieve_extend.c **** }
 16806              		.loc 1 1162 5 is_stmt 1 view .LVU5839
 16807 5ab7 BF010000 		mov	edi, 1	#,
 16807      00
 16808 5abc E8000000 		call	exit@PLT	#
 16808      00
 16809              	.LVL1015:
 16810              		.cfi_endproc
 16811              	.LFE81:
 16813              		.section	.rodata.str1.1
 16814              	.LC27:
 16815 003b 56616C69 		.string	"Validating... "
 16815      64617469 
 16815      6E672E2E 
GAS LISTING /tmp/ccjg94QQ.s 			page 451


 16815      2E2000
 16816              	.LC28:
 16817 004a 2D2D6865 		.string	"--help"
 16817      6C7000
 16818              	.LC29:
 16819 0051 2D2D7665 		.string	"--verbose"
 16819      72626F73 
 16819      6500
 16820              	.LC30:
 16821 005b 4E6F2076 		.string	"No verbose level specified\n"
 16821      6572626F 
 16821      7365206C 
 16821      6576656C 
 16821      20737065 
 16822              	.LC31:
 16823 0077 256400   		.string	"%d"
 16824              		.section	.rodata.str1.8
 16825 03ae 0000     		.align 8
 16826              	.LC32:
 16827 03b0 4572726F 		.string	"Error: Invalid measurement time: %s\n"
 16827      723A2049 
 16827      6E76616C 
 16827      6964206D 
 16827      65617375 
 16828              		.section	.rodata.str1.1
 16829              	.LC33:
 16830 007a 56657262 		.string	"Verbose level set to %d\n"
 16830      6F736520 
 16830      6C657665 
 16830      6C207365 
 16830      7420746F 
 16831              	.LC34:
 16832 0093 2D2D6368 		.string	"--check"
 16832      65636B00 
 16833              	.LC35:
 16834 009b 2D2D7475 		.string	"--tune"
 16834      6E6500
 16835              	.LC36:
 16836 00a2 4E6F2074 		.string	"No tune level specified\n"
 16836      756E6520 
 16836      6C657665 
 16836      6C207370 
 16836      65636966 
 16837              		.section	.rodata.str1.8
 16838 03d5 000000   		.align 8
 16839              	.LC37:
 16840 03d8 4572726F 		.string	"Error: Invalid tune level: %s\n"
 16840      723A2049 
 16840      6E76616C 
 16840      69642074 
 16840      756E6520 
 16841              		.section	.rodata.str1.1
 16842              	.LC38:
 16843 00bb 54756E65 		.string	"Tune level set to %d\n"
 16843      206C6576 
 16843      656C2073 
 16843      65742074 
GAS LISTING /tmp/ccjg94QQ.s 			page 452


 16843      6F202564 
 16844              	.LC39:
 16845 00d1 2D2D7368 		.string	"--show"
 16845      6F7700
 16846              	.LC40:
 16847 00d8 4E6F2073 		.string	"No show maximum specified\n"
 16847      686F7720 
 16847      6D617869 
 16847      6D756D20 
 16847      73706563 
 16848              	.LC41:
 16849 00f3 256A7500 		.string	"%ju"
 16850              		.section	.rodata.str1.8
 16851 03f7 00       		.align 8
 16852              	.LC42:
 16853 03f8 4572726F 		.string	"Error: Invalid show maximum: %s\n"
 16853      723A2049 
 16853      6E76616C 
 16853      69642073 
 16853      686F7720 
 16854              		.section	.rodata.str1.1
 16855              	.LC43:
 16856 00f7 53686F77 		.string	"Show maximum set to %ju\n"
 16856      206D6178 
 16856      696D756D 
 16856      20736574 
 16856      20746F20 
 16857              	.LC44:
 16858 0110 496E7661 		.string	"Invalid size %s\n"
 16858      6C696420 
 16858      73697A65 
 16858      2025730A 
 16858      00
 16859              	.LC45:
 16860 0121 2E2E2E43 		.string	"...Checking size %ju ..."
 16860      6865636B 
 16860      696E6720 
 16860      73697A65 
 16860      20256A75 
 16861              	.LC46:
 16862 013a 2E626C6F 		.string	".blocksize %ju-"
 16862      636B7369 
 16862      7A652025 
 16862      6A752D00 
 16863              	.LC47:
 16864 014a 76616C69 		.string	"valid;"
 16864      643B00
 16865              	.LC48:
 16866 0151 2E2E2E56 		.string	"...Valid algorithm"
 16866      616C6964 
 16866      20616C67 
 16866      6F726974 
 16866      686D00
 16867              	.LC49:
 16868 0164 54756E69 		.string	"Tuning..."
 16868      6E672E2E 
 16868      2E00
GAS LISTING /tmp/ccjg94QQ.s 			page 453


 16869              	.LC50:
 16870 016e 2E283E29 		.string	".(>)"
 16870      00
 16871              		.section	.rodata.str1.8
 16872 0419 00000000 		.align 8
 16872      000000
 16873              	.LC51:
 16874 0420 626C6F63 		.string	"blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector %
 16874      6B73697A 
 16874      655F6269 
 16874      74732025 
 16874      31306A75 
 16875              		.section	.rodata.str1.1
 16876              	.LC52:
 16877 0173 2E2E2E2E 		.string	"...."
 16877      00
 16878              		.section	.rodata.str1.8
 16879 04a7 00       		.align 8
 16880              	.LC53:
 16881 04a8 256A7520 		.string	"%ju results. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju\n"
 16881      72657375 
 16881      6C74732E 
 16881      20496E69 
 16881      74616C20 
 16882              		.section	.rodata.str1.1
 16883              	.LC54:
 16884 0178 42657374 		.string	"Best options"
 16884      206F7074 
 16884      696F6E73 
 16884      00
 16885              	.LC55:
 16886 0185 28256A75 		.string	"(%ju) "
 16886      292000
 16887              	.LC56:
 16888 018c 2E2E2E00 		.string	"..."
 16889              	.LC57:
 16890 0190 2E426573 		.string	".Best result:"
 16890      74207265 
 16890      73756C74 
 16890      3A00
 16891              		.section	.rodata.str1.8
 16892 04fa 00000000 		.align 8
 16892      0000
 16893              	.LC58:
 16894 0500 42656E63 		.string	"Benchmarking... with blocksize %ju steps: %ju/%ju/%ju\n"
 16894      686D6172 
 16894      6B696E67 
 16894      2E2E2E20 
 16894      77697468 
 16895 0537 00       		.align 8
 16896              	.LC60:
 16897 0538 726F6769 		.string	"rogiervandam_extend;%ju;%f;1;algorithm=other,faithful=yes,bits=1\n"
 16897      65727661 
 16897      6E64616D 
 16897      5F657874 
 16897      656E643B 
 16898 057a 00000000 		.align 8
GAS LISTING /tmp/ccjg94QQ.s 			page 454


 16898      0000
 16899              	.LC61:
 16900 0580 50617373 		.string	"Passes - per 5 seconds: %f - per second %f\n"
 16900      6573202D 
 16900      20706572 
 16900      20352073 
 16900      65636F6E 
 16901              		.section	.rodata.str1.1
 16902              	.LC62:
 16903 019e 53686F77 		.string	"Show result set:"
 16903      20726573 
 16903      756C7420 
 16903      7365743A 
 16903      00
 16904              		.section	.text.startup,"ax",@progbits
 16905              		.p2align 4
 16906              		.globl	main
 16908              	main:
 16909              	.LVL1016:
 16910              	.LFB86:
1208:sieve_extend.c **** 
1209:sieve_extend.c **** static inline void tuning_result_print(tuning_result_type tuning_result) {
1210:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
1211:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
1212:sieve_extend.c ****                             (uintmax_t)tuning_result.smallstep_faster,(uintmax_t)tuning_result.medi
1213:sieve_extend.c ****                             (uintmax_t)tuning_result.passes, (uintmax_t) tuning_result.sample_max,
1214:sieve_extend.c ****                             tuning_result.elapsed_time, tuning_result.sample_duration, tuning_resul
1215:sieve_extend.c **** }
1216:sieve_extend.c **** 
1217:sieve_extend.c **** static tuning_result_type tune(int tune_level, counter_t maxints, int option_verboselevel) {
1218:sieve_extend.c ****     counter_t best_blocksize_bits = default_blocksize;
1219:sieve_extend.c **** 
1220:sieve_extend.c ****     double best_avg = 0;
1221:sieve_extend.c ****     best_blocksize_bits = 0;
1222:sieve_extend.c ****     counter_t best_smallstep_faster = 0;
1223:sieve_extend.c ****     counter_t best_mediumstep_faster = 0;
1224:sieve_extend.c ****     counter_t best_vectorstep_faster = 0;
1225:sieve_extend.c ****     counter_t smallstep_faster_steps = 4;
1226:sieve_extend.c ****     counter_t mediumstep_faster_steps = 4;
1227:sieve_extend.c ****     counter_t vectorstep_faster_steps = 32;
1228:sieve_extend.c ****     counter_t freebits_steps = anticiped_cache_line_bytesize;
1229:sieve_extend.c ****     counter_t sample_max = default_sample_max;
1230:sieve_extend.c ****     double sample_duration = default_sample_duration;
1231:sieve_extend.c **** 
1232:sieve_extend.c ****     // determines the size of the resultset
1233:sieve_extend.c ****     switch (tune_level) {
1234:sieve_extend.c ****         case 1:
1235:sieve_extend.c ****             smallstep_faster_steps  = WORD_SIZE/4;
1236:sieve_extend.c ****             mediumstep_faster_steps = WORD_SIZE/4;
1237:sieve_extend.c ****             vectorstep_faster_steps = WORD_SIZE/2;
1238:sieve_extend.c ****             freebits_steps = anticiped_cache_line_bytesize*8*2;
1239:sieve_extend.c ****             sample_max = 8;
1240:sieve_extend.c ****             sample_duration = 0.1;
1241:sieve_extend.c ****             break;
1242:sieve_extend.c ****         case 2:
1243:sieve_extend.c ****             smallstep_faster_steps  = WORD_SIZE/8;
1244:sieve_extend.c ****             mediumstep_faster_steps = WORD_SIZE/8;
GAS LISTING /tmp/ccjg94QQ.s 			page 455


1245:sieve_extend.c ****             vectorstep_faster_steps = WORD_SIZE/4;
1246:sieve_extend.c ****             freebits_steps = anticiped_cache_line_bytesize*8;
1247:sieve_extend.c ****             sample_max = 8;
1248:sieve_extend.c ****             sample_duration = 0.2;
1249:sieve_extend.c ****             break;
1250:sieve_extend.c ****         case 3:
1251:sieve_extend.c ****             smallstep_faster_steps  = WORD_SIZE/16;
1252:sieve_extend.c ****             mediumstep_faster_steps = WORD_SIZE/16;
1253:sieve_extend.c ****             vectorstep_faster_steps = WORD_SIZE/16;
1254:sieve_extend.c ****             freebits_steps = anticiped_cache_line_bytesize/2;
1255:sieve_extend.c ****             sample_max = 8;
1256:sieve_extend.c ****             sample_duration = 0.2;
1257:sieve_extend.c ****             break;
1258:sieve_extend.c ****     }
1259:sieve_extend.c ****     
1260:sieve_extend.c ****     if (option_verboselevel >= 1) printf("Tuning..."); if (option_verboselevel >= 2) printf("\n");
1261:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
1262:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
1263:sieve_extend.c ****     counter_t tuning_results=0;
1264:sieve_extend.c ****     counter_t tuning_result_index=0;
1265:sieve_extend.c ****     
1266:sieve_extend.c ****     for (counter_t smallstep_faster = 0; smallstep_faster <= WORD_SIZE/2; smallstep_faster += small
1267:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
1268:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE;
1269:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
1270:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
1271:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
1272:sieve_extend.c **** 
1273:sieve_extend.c ****                         // set variables
1274:sieve_extend.c ****                         tuning_results++;
1275:sieve_extend.c ****                         tuning_result[tuning_result_index].maxints = maxints;
1276:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_duration = sample_duration;
1277:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_max = sample_max;
1278:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_kb = blocksize_kb;
1279:sieve_extend.c ****                         tuning_result[tuning_result_index].free_bits = free_bits;
1280:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_bits = blocksize_bits;
1281:sieve_extend.c ****                         tuning_result[tuning_result_index].smallstep_faster = smallstep_faster;
1282:sieve_extend.c ****                         tuning_result[tuning_result_index].mediumstep_faster = mediumstep_faster;
1283:sieve_extend.c ****                         tuning_result[tuning_result_index].vectorstep_faster = vectorstep_faster;
1284:sieve_extend.c ****                         tune_benchmark(tuning_result, tuning_result_index);
1285:sieve_extend.c **** 
1286:sieve_extend.c ****                         if ( tuning_result[tuning_result_index].avg > best_avg) {
1287:sieve_extend.c ****                             best_avg = tuning_result[tuning_result_index].avg;
1288:sieve_extend.c ****                             best_blocksize_bits = blocksize_bits;
1289:sieve_extend.c ****                             best_smallstep_faster = smallstep_faster;
1290:sieve_extend.c ****                             best_mediumstep_faster = mediumstep_faster;
1291:sieve_extend.c ****                             best_vectorstep_faster = vectorstep_faster;
1292:sieve_extend.c ****                             if (option_verboselevel >=2) { printf(".(>)"); tuning_result_print(tuni
1293:sieve_extend.c ****                         }
1294:sieve_extend.c ****                         if (option_verboselevel >= 3) { printf("...."); tuning_result_print(tuning_
1295:sieve_extend.c ****                         tuning_result_index++;
1296:sieve_extend.c ****                     }
1297:sieve_extend.c ****                 }
1298:sieve_extend.c ****             }
1299:sieve_extend.c ****         }
1300:sieve_extend.c ****     }
1301:sieve_extend.c ****     if (option_verboselevel >= 2) {
GAS LISTING /tmp/ccjg94QQ.s 			page 456


1302:sieve_extend.c ****         printf("%ju results. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju\n"
1303:sieve_extend.c ****         printf("Best options\n");
1304:sieve_extend.c ****     }
1305:sieve_extend.c ****     counter_t step=0;
1306:sieve_extend.c ****     while (tuning_results>4) {
1307:sieve_extend.c ****         qsort(tuning_result, (size_t)tuning_results, sizeof(tuning_result_type), compare_tuning_res
1308:sieve_extend.c ****         step++;
1309:sieve_extend.c ****         if (option_verboselevel >= 2) {
1310:sieve_extend.c ****             tuning_result_index = 0;
1311:sieve_extend.c ****             printf("(%ju) ",(uintmax_t)step); tuning_result_print(tuning_result[tuning_result_index
1312:sieve_extend.c ****             if (option_verboselevel >= 3) {
1313:sieve_extend.c ****                 for (counter_t tuning_result_index=0; tuning_result_index<min(10,tuning_results); t
1314:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
1315:sieve_extend.c ****                 }
1316:sieve_extend.c ****             }
1317:sieve_extend.c ****         }
1318:sieve_extend.c **** 
1319:sieve_extend.c ****         tuning_results = tuning_results / 2;
1320:sieve_extend.c **** 
1321:sieve_extend.c ****         for (counter_t i=0; i<tuning_results; i++) {
1322:sieve_extend.c ****             tune_benchmark(tuning_result, i);
1323:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
1324:sieve_extend.c ****         }
1325:sieve_extend.c ****         
1326:sieve_extend.c ****     }
1327:sieve_extend.c ****     tuning_result_type best_result = tuning_result[0];
1328:sieve_extend.c ****     if (option_verboselevel >= 1) {
1329:sieve_extend.c ****         tuning_result_index = 0;
1330:sieve_extend.c ****         printf(".Best result:"); tuning_result_print(tuning_result[tuning_result_index]);
1331:sieve_extend.c ****     }
1332:sieve_extend.c **** 
1333:sieve_extend.c ****     free(tuning_result);
1334:sieve_extend.c ****     return best_result;
1335:sieve_extend.c **** }
1336:sieve_extend.c **** 
1337:sieve_extend.c **** int main(int argc, char *argv[]) {
 16911              		.loc 1 1337 34 view -0
 16912              		.cfi_startproc
 16913              		.loc 1 1337 34 is_stmt 0 view .LVU5841
 16914 0000 F30F1EFA 		endbr64	
 16915 0004 4157     		push	r15	#
 16916              		.cfi_def_cfa_offset 16
 16917              		.cfi_offset 15, -16
 16918 0006 4156     		push	r14	#
 16919              		.cfi_def_cfa_offset 24
 16920              		.cfi_offset 14, -24
 16921 0008 4155     		push	r13	#
 16922              		.cfi_def_cfa_offset 32
 16923              		.cfi_offset 13, -32
 16924 000a 4154     		push	r12	#
 16925              		.cfi_def_cfa_offset 40
 16926              		.cfi_offset 12, -40
 16927 000c 55       		push	rbp	#
 16928              		.cfi_def_cfa_offset 48
 16929              		.cfi_offset 6, -48
 16930 000d 53       		push	rbx	#
 16931              		.cfi_def_cfa_offset 56
GAS LISTING /tmp/ccjg94QQ.s 			page 457


 16932              		.cfi_offset 3, -56
 16933 000e 488DA424 		lea	rsp, -232[rsp]	#,
 16933      18FFFFFF 
 16934              		.cfi_def_cfa_offset 288
 16935              	# sieve_extend.c:1337: int main(int argc, char *argv[]) {
 16936              		.loc 1 1337 34 view .LVU5842
 16937 0016 64488B04 		mov	rax, QWORD PTR fs:40	# tmp570, MEM[(<address-space-1> long unsigned int *)40B]
 16937      25280000 
 16937      00
 16938 001f 48898424 		mov	QWORD PTR 216[rsp], rax	# D.7395, tmp570
 16938      D8000000 
 16939 0027 31C0     		xor	eax, eax	# tmp570
1338:sieve_extend.c **** 
1339:sieve_extend.c ****     
1340:sieve_extend.c ****     counter_t option_maxFactor  = default_sieve_limit;
 16940              		.loc 1 1340 5 is_stmt 1 view .LVU5843
 16941              	# sieve_extend.c:1340:     counter_t option_maxFactor  = default_sieve_limit;
 16942              		.loc 1 1340 15 is_stmt 0 view .LVU5844
 16943 0029 48C78424 		mov	QWORD PTR 160[rsp], 1000000	# option_maxFactor,
 16943      A0000000 
 16943      40420F00 
1341:sieve_extend.c ****     counter_t option_showMaxFactor = default_showMaxFactor;
 16944              		.loc 1 1341 5 is_stmt 1 view .LVU5845
 16945              	.LBB920:
 16946              	# sieve_extend.c:1346:     for (int arg=1; arg < argc; arg++) {
1342:sieve_extend.c ****     int option_verboselevel = default_verbose_level;
1343:sieve_extend.c ****     int option_check = default_check_level;
1344:sieve_extend.c ****     int option_tunelevel = default_tune_level;
1345:sieve_extend.c **** 
1346:sieve_extend.c ****     for (int arg=1; arg < argc; arg++) {
 16947              		.loc 1 1346 5 is_stmt 0 view .LVU5846
 16948 0035 83FF01   		cmp	edi, 1	# argc,
 16949              	.LBE920:
 16950              	# sieve_extend.c:1341:     counter_t option_showMaxFactor = default_showMaxFactor;
1341:sieve_extend.c ****     counter_t option_showMaxFactor = default_showMaxFactor;
 16951              		.loc 1 1341 15 view .LVU5847
 16952 0038 48C78424 		mov	QWORD PTR 168[rsp], 0	# option_showMaxFactor,
 16952      A8000000 
 16952      00000000 
1342:sieve_extend.c ****     int option_verboselevel = default_verbose_level;
 16953              		.loc 1 1342 5 is_stmt 1 view .LVU5848
 16954              	# sieve_extend.c:1342:     int option_verboselevel = default_verbose_level;
1342:sieve_extend.c ****     int option_verboselevel = default_verbose_level;
 16955              		.loc 1 1342 9 is_stmt 0 view .LVU5849
 16956 0044 C7842498 		mov	DWORD PTR 152[rsp], 1	# option_verboselevel,
 16956      00000001 
 16956      000000
1343:sieve_extend.c ****     int option_tunelevel = default_tune_level;
 16957              		.loc 1 1343 5 is_stmt 1 view .LVU5850
 16958              	.LVL1017:
1344:sieve_extend.c **** 
 16959              		.loc 1 1344 5 view .LVU5851
 16960              	# sieve_extend.c:1344:     int option_tunelevel = default_tune_level;
1344:sieve_extend.c **** 
 16961              		.loc 1 1344 9 is_stmt 0 view .LVU5852
 16962 004f C784249C 		mov	DWORD PTR 156[rsp], 0	# option_tunelevel,
 16962      00000000 
GAS LISTING /tmp/ccjg94QQ.s 			page 458


 16962      000000
 16963              		.loc 1 1346 5 is_stmt 1 view .LVU5853
 16964              	.LBB945:
 16965              		.loc 1 1346 10 view .LVU5854
 16966              	.LVL1018:
 16967              		.loc 1 1346 21 view .LVU5855
 16968              	# sieve_extend.c:1346:     for (int arg=1; arg < argc; arg++) {
 16969              		.loc 1 1346 5 is_stmt 0 view .LVU5856
 16970 005a 0F8E1C05 		jle	.L1480	#,
 16970      0000
 16971 0060 89FD     		mov	ebp, edi	# argc, tmp524
 16972 0062 4989F4   		mov	r12, rsi	# argv, tmp525
 16973              	# sieve_extend.c:1346:     for (int arg=1; arg < argc; arg++) {
 16974              		.loc 1 1346 14 view .LVU5857
 16975 0065 BB010000 		mov	ebx, 1	# arg,
 16975      00
 16976 006a 4C8D2D00 		lea	r13, .LC28[rip]	# tmp464,
 16976      000000
 16977              	# sieve_extend.c:1348:         else if (strcmp(argv[arg], "--verbose")==0) {
1347:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1348:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 16978              		.loc 1 1348 18 view .LVU5858
 16979 0071 4C8D3500 		lea	r14, .LC29[rip]	# tmp479,
 16979      000000
 16980 0078 EB66     		jmp	.L1464	#
 16981              	.LVL1019:
 16982 007a 660F1F44 		.p2align 4,,7
 16982      0000
 16983              		.p2align 3
 16984              	.L1598:
1349:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\n"); usage(argv[0]); }
 16985              		.loc 1 1349 13 is_stmt 1 view .LVU5859
 16986              	# sieve_extend.c:1349:             if (++arg >= argc) { fprintf(stderr, "No verbose level specified
 16987              		.loc 1 1349 16 is_stmt 0 view .LVU5860
 16988 0080 83C301   		add	ebx, 1	# arg,
 16989              	.LVL1020:
 16990              		.loc 1 1349 16 view .LVU5861
 16991 0083 39DD     		cmp	ebp, ebx	# argc, arg
 16992 0085 0F8E9D0E 		jle	.L1596	#,
 16992      0000
1350:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option_verboselevel > 4) {
 16993              		.loc 1 1350 13 is_stmt 1 view .LVU5862
 16994              	# sieve_extend.c:1350:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option
 16995              		.loc 1 1350 28 is_stmt 0 view .LVU5863
 16996 008b 4D8D7C04 		lea	r15, 8[r12+rax]	# _16,
 16996      08
 16997              	# sieve_extend.c:1350:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option
 16998              		.loc 1 1350 17 view .LVU5864
 16999 0090 488D9424 		lea	rdx, 152[rsp]	# tmp301,
 16999      98000000 
 17000 0098 498B3F   		mov	rdi, QWORD PTR [r15]	#, *_16
 17001 009b 31C0     		xor	eax, eax	#
 17002 009d 488D3500 		lea	rsi, .LC31[rip]	#,
 17002      000000
 17003 00a4 E8000000 		call	__isoc99_sscanf@PLT	#
 17003      00
 17004              	.LVL1021:
GAS LISTING /tmp/ccjg94QQ.s 			page 459


 17005              	# sieve_extend.c:1350:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option
 17006              		.loc 1 1350 16 view .LVU5865
 17007 00a9 83F801   		cmp	eax, 1	# tmp526,
 17008 00ac 0F85E204 		jne	.L1469	#,
 17008      0000
 17009              	# sieve_extend.c:1350:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option
 17010              		.loc 1 1350 91 discriminator 1 view .LVU5866
 17011 00b2 8B942498 		mov	edx, DWORD PTR 152[rsp]	# option_verboselevel.16_19, option_verboselevel
 17011      000000
 17012              	# sieve_extend.c:1350:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option
 17013              		.loc 1 1350 68 discriminator 1 view .LVU5867
 17014 00b9 83FA04   		cmp	edx, 4	# option_verboselevel.16_19,
 17015 00bc 0F8FD204 		jg	.L1469	#,
 17015      0000
1351:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid measurement time: %s\n", argv[arg]); usage(argv[0])
1352:sieve_extend.c ****             }
1353:sieve_extend.c ****             printf("Verbose level set to %d\n",option_verboselevel);
 17016              		.loc 1 1353 13 is_stmt 1 view .LVU5868
 17017              	.LVL1022:
 17018              	.LBB921:
 17019              	.LBI921:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17020              		.loc 3 105 1 view .LVU5869
 17021              	.LBB922:
 17022              		.loc 3 107 3 view .LVU5870
 17023              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17024              		.loc 3 107 10 is_stmt 0 view .LVU5871
 17025 00c2 488D3500 		lea	rsi, .LC33[rip]	#,
 17025      000000
 17026 00c9 BF010000 		mov	edi, 1	#,
 17026      00
 17027 00ce 31C0     		xor	eax, eax	#
 17028 00d0 E8000000 		call	__printf_chk@PLT	#
 17028      00
 17029              	.LVL1023:
 17030              	.L1471:
 17031              		.loc 3 107 10 view .LVU5872
 17032              	.LBE922:
 17033              	.LBE921:
1346:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 17034              		.loc 1 1346 33 is_stmt 1 discriminator 2 view .LVU5873
 17035              	# sieve_extend.c:1346:     for (int arg=1; arg < argc; arg++) {
1346:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 17036              		.loc 1 1346 36 is_stmt 0 discriminator 2 view .LVU5874
 17037 00d5 83C301   		add	ebx, 1	# arg,
 17038              	.LVL1024:
1346:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 17039              		.loc 1 1346 21 is_stmt 1 discriminator 2 view .LVU5875
 17040              	# sieve_extend.c:1346:     for (int arg=1; arg < argc; arg++) {
1346:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 17041              		.loc 1 1346 5 is_stmt 0 discriminator 2 view .LVU5876
 17042 00d8 39DD     		cmp	ebp, ebx	# argc, arg
 17043 00da 0F8E0001 		jle	.L1597	#,
 17043      0000
 17044              	.LVL1025:
 17045              	.L1464:
1347:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
GAS LISTING /tmp/ccjg94QQ.s 			page 460


 17046              		.loc 1 1347 9 is_stmt 1 view .LVU5877
 17047              	# sieve_extend.c:1347:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1347:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 17048              		.loc 1 1347 24 is_stmt 0 view .LVU5878
 17049 00e0 4863C3   		movsx	rax, ebx	# arg, arg
 17050              	# sieve_extend.c:1347:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1347:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 17051              		.loc 1 1347 13 view .LVU5879
 17052 00e3 41B90700 		mov	r9d, 7	# tmp290,
 17052      0000
 17053              	# sieve_extend.c:1347:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1347:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 17054              		.loc 1 1347 24 view .LVU5880
 17055 00e9 48C1E003 		sal	rax, 3	# _2,
 17056              	# sieve_extend.c:1347:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1347:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 17057              		.loc 1 1347 13 view .LVU5881
 17058 00ed 4C89EF   		mov	rdi, r13	# tmp289, tmp464
 17059              	# sieve_extend.c:1347:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1347:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 17060              		.loc 1 1347 24 view .LVU5882
 17061 00f0 4D8D3C04 		lea	r15, [r12+rax]	# _3,
 17062              	# sieve_extend.c:1347:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1347:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 17063              		.loc 1 1347 13 view .LVU5883
 17064 00f4 4C89C9   		mov	rcx, r9	# tmp490, tmp290
 17065 00f7 4D8B07   		mov	r8, QWORD PTR [r15]	# _4, *_3
 17066 00fa 4C89C6   		mov	rsi, r8	# _4, _4
 17067 00fd F3A6     		repz cmpsb
 17068 00ff 0F97C2   		seta	dl	#, tmp291
 17069 0102 80DA00   		sbb	dl, 0	# _5
 17070              	# sieve_extend.c:1347:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1347:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 17071              		.loc 1 1347 12 view .LVU5884
 17072 0105 84D2     		test	dl, dl	# _5
 17073 0107 0F84A404 		je	.L1594	#,
 17073      0000
1348:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\n"); usage(argv[0]); }
 17074              		.loc 1 1348 14 is_stmt 1 view .LVU5885
 17075              	# sieve_extend.c:1348:         else if (strcmp(argv[arg], "--verbose")==0) {
1348:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\n"); usage(argv[0]); }
 17076              		.loc 1 1348 18 is_stmt 0 view .LVU5886
 17077 010d B90A0000 		mov	ecx, 10	# tmp296,
 17077      00
 17078 0112 4C89C6   		mov	rsi, r8	# _4, _4
 17079 0115 4C89F7   		mov	rdi, r14	# tmp295, tmp479
 17080 0118 F3A6     		repz cmpsb
 17081 011a 410F97C2 		seta	r10b	#, tmp297
 17082 011e 4180DA00 		sbb	r10b, 0	# _11
 17083              	# sieve_extend.c:1348:         else if (strcmp(argv[arg], "--verbose")==0) {
1348:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\n"); usage(argv[0]); }
 17084              		.loc 1 1348 17 view .LVU5887
 17085 0122 4584D2   		test	r10b, r10b	# _11
 17086 0125 0F8455FF 		je	.L1598	#,
 17086      FFFF
1354:sieve_extend.c ****         } 
1355:sieve_extend.c ****         else if (strcmp(argv[arg], "--check")==0) { option_check=1; }
GAS LISTING /tmp/ccjg94QQ.s 			page 461


 17087              		.loc 1 1355 14 is_stmt 1 view .LVU5888
 17088              	# sieve_extend.c:1355:         else if (strcmp(argv[arg], "--check")==0) { option_check=1; }
 17089              		.loc 1 1355 18 is_stmt 0 view .LVU5889
 17090 012b B9080000 		mov	ecx, 8	# tmp306,
 17090      00
 17091 0130 4C89C6   		mov	rsi, r8	# _4, _4
 17092 0133 488D3D00 		lea	rdi, .LC34[rip]	# tmp305,
 17092      000000
 17093 013a F3A6     		repz cmpsb
 17094 013c 410F97C3 		seta	r11b	#, tmp307
 17095 0140 4180DB00 		sbb	r11b, 0	# _23
 17096              	# sieve_extend.c:1355:         else if (strcmp(argv[arg], "--check")==0) { option_check=1; }
 17097              		.loc 1 1355 17 view .LVU5890
 17098 0144 4584DB   		test	r11b, r11b	# _23
 17099 0147 748C     		je	.L1471	#,
1356:sieve_extend.c ****         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
 17100              		.loc 1 1356 14 is_stmt 1 view .LVU5891
 17101              	# sieve_extend.c:1356:         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
 17102              		.loc 1 1356 18 is_stmt 0 view .LVU5892
 17103 0149 4C89C6   		mov	rsi, r8	# _4, _4
 17104 014c 488D3D00 		lea	rdi, .LC35[rip]	# tmp311,
 17104      000000
 17105 0153 4C89C9   		mov	rcx, r9	# tmp496, tmp290
 17106 0156 F3A6     		repz cmpsb
 17107 0158 0F97C2   		seta	dl	#, tmp313
 17108 015b 80DA00   		sbb	dl, 0	# _24
 17109              	# sieve_extend.c:1356:         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
 17110              		.loc 1 1356 17 view .LVU5893
 17111 015e 84D2     		test	dl, dl	# _24
 17112 0160 0F855A01 		jne	.L1472	#,
 17112      0000
 17113              		.loc 1 1356 52 is_stmt 1 discriminator 1 view .LVU5894
 17114              	# sieve_extend.c:1356:         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
 17115              		.loc 1 1356 68 is_stmt 0 discriminator 1 view .LVU5895
 17116 0166 C784249C 		mov	DWORD PTR 156[rsp], 0	# option_tunelevel,
 17116      00000000 
 17116      000000
1357:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No tune level specified\n"); usage(argv[0]); }
 17117              		.loc 1 1357 13 is_stmt 1 discriminator 1 view .LVU5896
 17118              	# sieve_extend.c:1357:             if (++arg >= argc) { fprintf(stderr, "No tune level specified\n"
 17119              		.loc 1 1357 16 is_stmt 0 discriminator 1 view .LVU5897
 17120 0171 83C301   		add	ebx, 1	# arg,
 17121              	.LVL1026:
 17122              		.loc 1 1357 16 discriminator 1 view .LVU5898
 17123 0174 39DD     		cmp	ebp, ebx	# argc, arg
 17124 0176 0F8EEC0D 		jle	.L1599	#,
 17124      0000
1358:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tunelevel > 4) {
 17125              		.loc 1 1358 13 is_stmt 1 view .LVU5899
 17126              	# sieve_extend.c:1358:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tu
 17127              		.loc 1 1358 28 is_stmt 0 view .LVU5900
 17128 017c 4D8D7C04 		lea	r15, 8[r12+rax]	# _29,
 17128      08
 17129              	# sieve_extend.c:1358:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tu
 17130              		.loc 1 1358 17 view .LVU5901
 17131 0181 488D9424 		lea	rdx, 156[rsp]	# tmp317,
 17131      9C000000 
GAS LISTING /tmp/ccjg94QQ.s 			page 462


 17132 0189 498B3F   		mov	rdi, QWORD PTR [r15]	#, *_29
 17133 018c 31C0     		xor	eax, eax	#
 17134 018e 488D3500 		lea	rsi, .LC31[rip]	#,
 17134      000000
 17135 0195 E8000000 		call	__isoc99_sscanf@PLT	#
 17135      00
 17136              	.LVL1027:
 17137              	# sieve_extend.c:1358:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tu
 17138              		.loc 1 1358 16 view .LVU5902
 17139 019a 83F801   		cmp	eax, 1	# tmp527,
 17140 019d 0F85A70D 		jne	.L1474	#,
 17140      0000
 17141              	# sieve_extend.c:1358:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tu
 17142              		.loc 1 1358 85 discriminator 1 view .LVU5903
 17143 01a3 8B94249C 		mov	edx, DWORD PTR 156[rsp]	# option_tunelevel.20_32, option_tunelevel
 17143      000000
 17144              	# sieve_extend.c:1358:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tu
 17145              		.loc 1 1358 65 discriminator 1 view .LVU5904
 17146 01aa 83FA04   		cmp	edx, 4	# option_tunelevel.20_32,
 17147 01ad 0F8F970D 		jg	.L1474	#,
 17147      0000
1359:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid tune level: %s\n", argv[arg]); usage(argv[0]);
1360:sieve_extend.c ****             }
1361:sieve_extend.c ****             printf("Tune level set to %d\n",option_tunelevel);
 17148              		.loc 1 1361 13 is_stmt 1 view .LVU5905
 17149              	.LVL1028:
 17150              	.LBB923:
 17151              	.LBI923:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17152              		.loc 3 105 1 view .LVU5906
 17153              	.LBB924:
 17154              		.loc 3 107 3 view .LVU5907
 17155              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17156              		.loc 3 107 10 is_stmt 0 view .LVU5908
 17157 01b3 31C0     		xor	eax, eax	#
 17158 01b5 488D3500 		lea	rsi, .LC38[rip]	#,
 17158      000000
 17159 01bc BF010000 		mov	edi, 1	#,
 17159      00
 17160              	.LBE924:
 17161              	.LBE923:
 17162              	# sieve_extend.c:1346:     for (int arg=1; arg < argc; arg++) {
1346:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 17163              		.loc 1 1346 36 view .LVU5909
 17164 01c1 83C301   		add	ebx, 1	# arg,
 17165              	.LVL1029:
 17166              	.LBB926:
 17167              	.LBB925:
 17168              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17169              		.loc 3 107 10 view .LVU5910
 17170 01c4 E8000000 		call	__printf_chk@PLT	#
 17170      00
 17171              	.LVL1030:
 17172              		.loc 3 107 10 view .LVU5911
 17173              	.LBE925:
 17174              	.LBE926:
1346:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
GAS LISTING /tmp/ccjg94QQ.s 			page 463


 17175              		.loc 1 1346 33 is_stmt 1 view .LVU5912
1346:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 17176              		.loc 1 1346 21 view .LVU5913
 17177              	# sieve_extend.c:1346:     for (int arg=1; arg < argc; arg++) {
1346:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 17178              		.loc 1 1346 5 is_stmt 0 view .LVU5914
 17179 01c9 39DD     		cmp	ebp, ebx	# argc, arg
 17180 01cb 0F8F0FFF 		jg	.L1464	#,
 17180      FFFF
 17181 01d1 66662E0F 		.p2align 4
 17181      1F840000 
 17181      0000000F 
 17181      1F4000
 17182              		.p2align 3
 17183              	.L1597:
1346:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 17184              		.loc 1 1346 5 view .LVU5915
 17185              	.LBE945:
1362:sieve_extend.c ****         }
1363:sieve_extend.c ****         else if (strcmp(argv[arg], "--show")==0) { option_showMaxFactor=0;
1364:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
1365:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
1366:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
1367:sieve_extend.c ****             }
1368:sieve_extend.c ****             printf("Show maximum set to %ju\n",(uintmax_t)option_showMaxFactor);
1369:sieve_extend.c ****         }
1370:sieve_extend.c ****         else if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_maxFactor) != 1) {
1371:sieve_extend.c ****             fprintf(stderr, "Invalid size %s\n",argv[arg]); usage(argv[0]); 
1372:sieve_extend.c ****             printf("Maximum set to %ju\n",(uintmax_t)option_maxFactor);
1373:sieve_extend.c ****         }
1374:sieve_extend.c ****     }
1375:sieve_extend.c **** 
1376:sieve_extend.c ****     if (option_runonce) { // used for stats and debugging
 17186              		.loc 1 1376 5 is_stmt 1 view .LVU5916
1377:sieve_extend.c ****         struct sieve_state* sieve_instance = sieve(option_maxFactor, default_blocksize);
1378:sieve_extend.c ****         printf("\nResult set:\n");
1379:sieve_extend.c ****         show_primes(sieve_instance, option_showMaxFactor);
1380:sieve_extend.c ****         int valid = validatePrimeCount(sieve_instance,3);
1381:sieve_extend.c ****         if (!valid) printf("The sieve is NOT valid\n");
1382:sieve_extend.c ****         else printf("The sieve is VALID\n");
1383:sieve_extend.c ****         delete_sieve(sieve_instance);
1384:sieve_extend.c ****         exit(0);
1385:sieve_extend.c ****     }
1386:sieve_extend.c **** 
1387:sieve_extend.c ****     struct timespec start_time,end_time;
 17187              		.loc 1 1387 5 view .LVU5917
1388:sieve_extend.c **** 
1389:sieve_extend.c ****     if (option_check) {
 17188              		.loc 1 1389 5 view .LVU5918
1390:sieve_extend.c ****         // Count the number of primes and validate the result
1391:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Validating... ");
 17189              		.loc 1 1391 9 view .LVU5919
 17190              	# sieve_extend.c:1391:         if (option_verboselevel >= 1) printf("Validating... ");
 17191              		.loc 1 1391 12 is_stmt 0 view .LVU5920
 17192 01e0 8BAC2498 		mov	ebp, DWORD PTR 152[rsp]	#, option_verboselevel
 17192      000000
 17193              	.LVL1031:
GAS LISTING /tmp/ccjg94QQ.s 			page 464


 17194              		.loc 1 1391 12 view .LVU5921
 17195 01e7 85ED     		test	ebp, ebp	#
 17196 01e9 0F8F8D03 		jg	.L1480	#,
 17196      0000
 17197              	.LVL1032:
 17198              	.L1465:
1392:sieve_extend.c ****         if (option_verboselevel >= 2) printf("\n");
 17199              		.loc 1 1392 9 is_stmt 1 view .LVU5922
 17200              	# sieve_extend.c:1392:         if (option_verboselevel >= 2) printf("\n");
 17201              		.loc 1 1392 12 is_stmt 0 view .LVU5923
 17202 01ef 83BC2498 		cmp	DWORD PTR 152[rsp], 1	# option_verboselevel,
 17202      00000001 
 17203 01f7 7E0A     		jle	.L1481	#,
 17204              		.loc 1 1392 39 is_stmt 1 view .LVU5924
 17205              	.LVL1033:
 17206              	.LBB946:
 17207              	.LBI946:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17208              		.loc 3 105 1 view .LVU5925
 17209              	.LBB947:
 17210              		.loc 3 107 3 view .LVU5926
 17211              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17212              		.loc 3 107 10 is_stmt 0 view .LVU5927
 17213 01f9 BF0A0000 		mov	edi, 10	#,
 17213      00
 17214 01fe E8000000 		call	putchar@PLT	#
 17214      00
 17215              	.LVL1034:
 17216              	.L1481:
 17217              		.loc 3 107 10 view .LVU5928
 17218              	.LBE947:
 17219              	.LBE946:
 17220              	.LBB948:
 17221              	# sieve_extend.c:1346:     for (int arg=1; arg < argc; arg++) {
1346:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 17222              		.loc 1 1346 14 view .LVU5929
 17223 0203 C7442420 		mov	DWORD PTR 32[rsp], 7	# %sfp,
 17223      07000000 
 17224 020b 41BD6400 		mov	r13d, 100	# sieveSize_check,
 17224      0000
 17225              	.LBE948:
 17226              	.LBB949:
 17227              	.LBB950:
 17228              	.LBB951:
 17229              	.LBB952:
 17230              	.LBB953:
 17231              	.LBB954:
 17232              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17233              		.loc 3 107 10 view .LVU5930
 17234 0211 4C8D3500 		lea	r14, .LC46[rip]	# tmp478,
 17234      000000
 17235              	.L1488:
 17236              	.LVL1035:
 17237              		.loc 3 107 10 view .LVU5931
 17238              	.LBE954:
 17239              	.LBE953:
 17240              	.LBE952:
GAS LISTING /tmp/ccjg94QQ.s 			page 465


 17241              	.LBE951:
1393:sieve_extend.c **** 
1394:sieve_extend.c ****         // validate algorithm - run one time for all sizes
1395:sieve_extend.c ****         for (counter_t sieveSize_check = 100; sieveSize_check <= 100000000; sieveSize_check *=10) {
1396:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 17242              		.loc 1 1396 13 is_stmt 1 view .LVU5932
 17243              	# sieve_extend.c:1396:             if (option_verboselevel >= 2) printf("...Checking size %ju ...",
 17244              		.loc 1 1396 37 is_stmt 0 view .LVU5933
 17245 0218 8B842498 		mov	eax, DWORD PTR 152[rsp]	# prephitmp_326, option_verboselevel
 17245      000000
 17246              	# sieve_extend.c:1396:             if (option_verboselevel >= 2) printf("...Checking size %ju ...",
 17247              		.loc 1 1396 16 view .LVU5934
 17248 021f 83F801   		cmp	eax, 1	# prephitmp_326,
 17249 0222 7E1D     		jle	.L1482	#,
 17250              		.loc 1 1396 43 is_stmt 1 view .LVU5935
 17251              	.LVL1036:
 17252              	.LBB970:
 17253              	.LBI970:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17254              		.loc 3 105 1 view .LVU5936
 17255              	.LBB971:
 17256              		.loc 3 107 3 view .LVU5937
 17257              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17258              		.loc 3 107 10 is_stmt 0 view .LVU5938
 17259 0224 4C89EA   		mov	rdx, r13	#, sieveSize_check
 17260 0227 488D3500 		lea	rsi, .LC45[rip]	#,
 17260      000000
 17261 022e BF010000 		mov	edi, 1	#,
 17261      00
 17262 0233 31C0     		xor	eax, eax	#
 17263 0235 E8000000 		call	__printf_chk@PLT	#
 17263      00
 17264              	.LVL1037:
 17265 023a 8B842498 		mov	eax, DWORD PTR 152[rsp]	# prephitmp_326, option_verboselevel
 17265      000000
 17266              	.LVL1038:
 17267              	.L1482:
 17268              		.loc 3 107 10 view .LVU5939
 17269              	.LBE971:
 17270              	.LBE970:
 17271              	.LBE950:
 17272              	.LBE949:
 17273              	.LBB980:
 17274              	# sieve_extend.c:1346:     for (int arg=1; arg < argc; arg++) {
1346:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 17275              		.loc 1 1346 14 view .LVU5940
 17276 0241 41BC0500 		mov	r12d, 5	# ivtmp_106,
 17276      0000
 17277 0247 BD000400 		mov	ebp, 1024	# blocksize_bits,
 17277      00
 17278 024c EB56     		jmp	.L1486	#
 17279              	.LVL1039:
 17280 024e 6690     		.p2align 4,,7
 17281              		.p2align 3
 17282              	.L1483:
1346:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 17283              		.loc 1 1346 14 view .LVU5941
GAS LISTING /tmp/ccjg94QQ.s 			page 466


 17284              	.LBE980:
 17285              	.LBB981:
 17286              	.LBB977:
 17287              	.LBB972:
 17288              	.LBB965:
1397:sieve_extend.c ****             struct sieve_state *sieve_instance_check;
1398:sieve_extend.c ****             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; blocksize_bits *= 2) {
1399:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
1400:sieve_extend.c ****                 sieve_instance_check = sieve(sieveSize_check, blocksize_bits);
 17289              		.loc 1 1400 17 is_stmt 1 view .LVU5942
 17290              	# sieve_extend.c:1400:                 sieve_instance_check = sieve(sieveSize_check, blocksize_bits
 17291              		.loc 1 1400 40 is_stmt 0 view .LVU5943
 17292 0250 4889EE   		mov	rsi, rbp	#, blocksize_bits
 17293 0253 4C89EF   		mov	rdi, r13	#, sieveSize_check
 17294 0256 E8000000 		call	sieve	#
 17294      00
 17295              	.LVL1040:
 17296              	# sieve_extend.c:1401:                 int valid = validatePrimeCount(sieve_instance_check,option_v
1401:sieve_extend.c ****                 int valid = validatePrimeCount(sieve_instance_check,option_verboselevel);
 17297              		.loc 1 1401 29 view .LVU5944
 17298 025b 8BB42498 		mov	esi, DWORD PTR 152[rsp]	#, option_verboselevel
 17298      000000
 17299              	# sieve_extend.c:1400:                 sieve_instance_check = sieve(sieveSize_check, blocksize_bits
1400:sieve_extend.c ****                 int valid = validatePrimeCount(sieve_instance_check,option_verboselevel);
 17300              		.loc 1 1400 40 view .LVU5945
 17301 0262 4989C7   		mov	r15, rax	# sieve_instance_check, tmp530
 17302              	.LVL1041:
 17303              		.loc 1 1401 17 is_stmt 1 view .LVU5946
 17304              	# sieve_extend.c:1401:                 int valid = validatePrimeCount(sieve_instance_check,option_v
 17305              		.loc 1 1401 29 is_stmt 0 view .LVU5947
 17306 0265 4889C7   		mov	rdi, rax	#, sieve_instance_check
 17307 0268 E8000000 		call	validatePrimeCount	#
 17307      00
 17308              	.LVL1042:
 17309              	.LBB956:
 17310              	.LBB957:
 17311              	# sieve_extend.c:117:     free(sieve->bitarray);
 117:sieve_extend.c ****     free(sieve);
 17312              		.loc 1 117 5 view .LVU5948
 17313 026d 498B3F   		mov	rdi, QWORD PTR [r15]	#, sieve_instance_check_128->bitarray
 17314              	.LBE957:
 17315              	.LBE956:
 17316              	# sieve_extend.c:1401:                 int valid = validatePrimeCount(sieve_instance_check,option_v
 17317              		.loc 1 1401 29 view .LVU5949
 17318 0270 89C3     		mov	ebx, eax	# valid, tmp531
 17319              	.LVL1043:
1402:sieve_extend.c ****                 delete_sieve(sieve_instance_check);
 17320              		.loc 1 1402 17 is_stmt 1 view .LVU5950
 17321              	.LBB959:
 17322              	.LBI956:
 116:sieve_extend.c ****     free(sieve->bitarray);
 17323              		.loc 1 116 13 view .LVU5951
 17324              	.LBB958:
 117:sieve_extend.c ****     free(sieve);
 17325              		.loc 1 117 5 view .LVU5952
 17326 0272 E8000000 		call	free@PLT	#
 17326      00
GAS LISTING /tmp/ccjg94QQ.s 			page 467


 17327              	.LVL1044:
 118:sieve_extend.c **** }
 17328              		.loc 1 118 5 view .LVU5953
 17329 0277 4C89FF   		mov	rdi, r15	#, sieve_instance_check
 17330 027a E8000000 		call	free@PLT	#
 17330      00
 17331              	.LVL1045:
 118:sieve_extend.c **** }
 17332              		.loc 1 118 5 is_stmt 0 view .LVU5954
 17333              	.LBE958:
 17334              	.LBE959:
1403:sieve_extend.c ****                 if (!valid) return 0; else if (option_verboselevel >= 3) printf("valid;");
 17335              		.loc 1 1403 17 is_stmt 1 view .LVU5955
 17336              	# sieve_extend.c:1403:                 if (!valid) return 0; else if (option_verboselevel >= 3) pri
 17337              		.loc 1 1403 20 is_stmt 0 view .LVU5956
 17338 027f 85DB     		test	ebx, ebx	# valid
 17339 0281 0F84C902 		je	.L1524	#,
 17339      0000
 17340              		.loc 1 1403 44 is_stmt 1 discriminator 2 view .LVU5957
 17341              	# sieve_extend.c:1403:                 if (!valid) return 0; else if (option_verboselevel >= 3) pri
 17342              		.loc 1 1403 68 is_stmt 0 discriminator 2 view .LVU5958
 17343 0287 8B842498 		mov	eax, DWORD PTR 152[rsp]	# prephitmp_326, option_verboselevel
 17343      000000
 17344              	# sieve_extend.c:1403:                 if (!valid) return 0; else if (option_verboselevel >= 3) pri
 17345              		.loc 1 1403 47 discriminator 2 view .LVU5959
 17346 028e 83F802   		cmp	eax, 2	# prephitmp_326,
 17347 0291 0F8FE900 		jg	.L1600	#,
 17347      0000
 17348              	.LBE965:
1398:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 17349              		.loc 1 1398 75 is_stmt 1 discriminator 2 view .LVU5960
 17350              	# sieve_extend.c:1398:             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; bl
1398:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 17351              		.loc 1 1398 90 is_stmt 0 discriminator 2 view .LVU5961
 17352 0297 4801ED   		add	rbp, rbp	# blocksize_bits
 17353              	.LVL1046:
1398:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 17354              		.loc 1 1398 49 is_stmt 1 discriminator 2 view .LVU5962
 17355              	# sieve_extend.c:1398:             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; bl
1398:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 17356              		.loc 1 1398 13 is_stmt 0 discriminator 2 view .LVU5963
 17357 029a 4183EC01 		sub	r12d, 1	# ivtmp_106,
 17358 029e 0F840301 		je	.L1601	#,
 17358      0000
 17359              	.LVL1047:
 17360              	.L1486:
 17361              	.LBB966:
1399:sieve_extend.c ****                 sieve_instance_check = sieve(sieveSize_check, blocksize_bits);
 17362              		.loc 1 1399 17 is_stmt 1 view .LVU5964
 17363              	# sieve_extend.c:1399:                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uint
1399:sieve_extend.c ****                 sieve_instance_check = sieve(sieveSize_check, blocksize_bits);
 17364              		.loc 1 1399 20 is_stmt 0 view .LVU5965
 17365 02a4 83F802   		cmp	eax, 2	# prephitmp_326,
 17366 02a7 7EA7     		jle	.L1483	#,
1399:sieve_extend.c ****                 sieve_instance_check = sieve(sieveSize_check, blocksize_bits);
 17367              		.loc 1 1399 47 is_stmt 1 view .LVU5966
 17368              	.LVL1048:
GAS LISTING /tmp/ccjg94QQ.s 			page 468


 17369              	.LBB960:
 17370              	.LBI953:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17371              		.loc 3 105 1 view .LVU5967
 17372              	.LBB955:
 17373              		.loc 3 107 3 view .LVU5968
 17374              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17375              		.loc 3 107 10 is_stmt 0 view .LVU5969
 17376 02a9 4889EA   		mov	rdx, rbp	#, blocksize_bits
 17377 02ac 4C89F6   		mov	rsi, r14	#, tmp478
 17378 02af BF010000 		mov	edi, 1	#,
 17378      00
 17379 02b4 31C0     		xor	eax, eax	#
 17380 02b6 E8000000 		call	__printf_chk@PLT	#
 17380      00
 17381              	.LVL1049:
 17382 02bb EB93     		jmp	.L1483	#
 17383              	.LVL1050:
 17384 02bd 0F1F00   		.p2align 4,,7
 17385              		.p2align 3
 17386              	.L1472:
 17387              		.loc 3 107 10 view .LVU5970
 17388              	.LBE955:
 17389              	.LBE960:
 17390              	.LBE966:
 17391              	.LBE972:
 17392              	.LBE977:
 17393              	.LBE981:
 17394              	.LBB982:
1363:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 17395              		.loc 1 1363 14 is_stmt 1 view .LVU5971
 17396              	# sieve_extend.c:1363:         else if (strcmp(argv[arg], "--show")==0) { option_showMaxFactor=0;
1363:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 17397              		.loc 1 1363 18 is_stmt 0 view .LVU5972
 17398 02c0 4C89C9   		mov	rcx, r9	# tmp290, tmp290
 17399 02c3 4C89C6   		mov	rsi, r8	# _4, _4
 17400 02c6 488D3D00 		lea	rdi, .LC39[rip]	# tmp321,
 17400      000000
 17401 02cd F3A6     		repz cmpsb
 17402 02cf 410F97C1 		seta	r9b	#, tmp323
 17403 02d3 4180D900 		sbb	r9b, 0	# _36
 17404              	# sieve_extend.c:1363:         else if (strcmp(argv[arg], "--show")==0) { option_showMaxFactor=0;
1363:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 17405              		.loc 1 1363 17 view .LVU5973
 17406 02d7 4584C9   		test	r9b, r9b	# _36
 17407 02da 756C     		jne	.L1476	#,
1363:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 17408              		.loc 1 1363 52 is_stmt 1 discriminator 1 view .LVU5974
 17409              	# sieve_extend.c:1363:         else if (strcmp(argv[arg], "--show")==0) { option_showMaxFactor=0;
1363:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 17410              		.loc 1 1363 72 is_stmt 0 discriminator 1 view .LVU5975
 17411 02dc 48C78424 		mov	QWORD PTR 168[rsp], 0	# option_showMaxFactor,
 17411      A8000000 
 17411      00000000 
1364:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 17412              		.loc 1 1364 13 is_stmt 1 discriminator 1 view .LVU5976
 17413              	# sieve_extend.c:1364:             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\
GAS LISTING /tmp/ccjg94QQ.s 			page 469


1364:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 17414              		.loc 1 1364 16 is_stmt 0 discriminator 1 view .LVU5977
 17415 02e8 83C301   		add	ebx, 1	# arg,
 17416              	.LVL1051:
1364:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 17417              		.loc 1 1364 16 discriminator 1 view .LVU5978
 17418 02eb 39DD     		cmp	ebp, ebx	# argc, arg
 17419 02ed 0F8EA00C 		jle	.L1602	#,
 17419      0000
1365:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 17420              		.loc 1 1365 13 is_stmt 1 view .LVU5979
 17421              	# sieve_extend.c:1365:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) 
1365:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 17422              		.loc 1 1365 28 is_stmt 0 view .LVU5980
 17423 02f3 4D8D7C04 		lea	r15, 8[r12+rax]	# _41,
 17423      08
 17424              	# sieve_extend.c:1365:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) 
1365:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 17425              		.loc 1 1365 17 view .LVU5981
 17426 02f8 488D9424 		lea	rdx, 168[rsp]	# tmp327,
 17426      A8000000 
 17427 0300 498B3F   		mov	rdi, QWORD PTR [r15]	#, *_41
 17428 0303 31C0     		xor	eax, eax	#
 17429 0305 488D3500 		lea	rsi, .LC41[rip]	#,
 17429      000000
 17430 030c E8000000 		call	__isoc99_sscanf@PLT	#
 17430      00
 17431              	.LVL1052:
 17432              	# sieve_extend.c:1365:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) 
1365:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 17433              		.loc 1 1365 16 view .LVU5982
 17434 0311 83F801   		cmp	eax, 1	# tmp528,
 17435 0314 0F853F0C 		jne	.L1478	#,
 17435      0000
 17436              	# sieve_extend.c:1365:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) 
1365:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 17437              		.loc 1 1365 106 discriminator 1 view .LVU5983
 17438 031a 488B9424 		mov	rdx, QWORD PTR 168[rsp]	# option_showMaxFactor.24_44, option_showMaxFactor
 17438      A8000000 
 17439              	# sieve_extend.c:1365:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) 
1365:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 17440              		.loc 1 1365 82 discriminator 1 view .LVU5984
 17441 0322 483B9424 		cmp	rdx, QWORD PTR 160[rsp]	# option_showMaxFactor.24_44, option_maxFactor
 17441      A0000000 
 17442 032a 0F87290C 		ja	.L1478	#,
 17442      0000
1368:sieve_extend.c ****         }
 17443              		.loc 1 1368 13 is_stmt 1 view .LVU5985
 17444              	.LVL1053:
 17445              	.LBB927:
 17446              	.LBI927:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17447              		.loc 3 105 1 view .LVU5986
 17448              	.LBB928:
 17449              		.loc 3 107 3 view .LVU5987
 17450              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17451              		.loc 3 107 10 is_stmt 0 view .LVU5988
GAS LISTING /tmp/ccjg94QQ.s 			page 470


 17452 0330 488D3500 		lea	rsi, .LC43[rip]	#,
 17452      000000
 17453 0337 BF010000 		mov	edi, 1	#,
 17453      00
 17454 033c 31C0     		xor	eax, eax	#
 17455 033e E8000000 		call	__printf_chk@PLT	#
 17455      00
 17456              	.LVL1054:
 17457 0343 E98DFDFF 		jmp	.L1471	#
 17457      FF
 17458              	.LVL1055:
 17459              		.p2align 4,,7
 17460              		.p2align 3
 17461              	.L1476:
 17462              		.loc 3 107 10 view .LVU5989
 17463              	.LBE928:
 17464              	.LBE927:
1370:sieve_extend.c ****             fprintf(stderr, "Invalid size %s\n",argv[arg]); usage(argv[0]); 
 17465              		.loc 1 1370 14 is_stmt 1 view .LVU5990
 17466              	# sieve_extend.c:1370:         else if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_maxFactor) != 
1370:sieve_extend.c ****             fprintf(stderr, "Invalid size %s\n",argv[arg]); usage(argv[0]); 
 17467              		.loc 1 1370 18 is_stmt 0 view .LVU5991
 17468 0348 31C0     		xor	eax, eax	#
 17469 034a 488D9424 		lea	rdx, 160[rsp]	# tmp329,
 17469      A0000000 
 17470 0352 488D3500 		lea	rsi, .LC41[rip]	#,
 17470      000000
 17471 0359 4C89C7   		mov	rdi, r8	#, _4
 17472 035c E8000000 		call	__isoc99_sscanf@PLT	#
 17472      00
 17473              	.LVL1056:
 17474              	# sieve_extend.c:1370:         else if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_maxFactor) != 
1370:sieve_extend.c ****             fprintf(stderr, "Invalid size %s\n",argv[arg]); usage(argv[0]); 
 17475              		.loc 1 1370 17 view .LVU5992
 17476 0361 83F801   		cmp	eax, 1	# tmp529,
 17477 0364 0F846BFD 		je	.L1471	#,
 17477      FFFF
1371:sieve_extend.c ****             printf("Maximum set to %ju\n",(uintmax_t)option_maxFactor);
 17478              		.loc 1 1371 13 is_stmt 1 view .LVU5993
 17479              	.LVL1057:
 17480              	.LBB929:
 17481              	.LBI929:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17482              		.loc 3 98 1 view .LVU5994
 17483              	.LBB930:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17484              		.loc 3 100 3 view .LVU5995
 17485              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17486              		.loc 3 100 10 is_stmt 0 view .LVU5996
 17487 036a 498B0F   		mov	rcx, QWORD PTR [r15]	#, *_3
 17488 036d 488D1500 		lea	rdx, .LC44[rip]	#,
 17488      000000
 17489 0374 E9250200 		jmp	.L1593	#
 17489      00
 17490              	.LVL1058:
 17491 0379 0F1F8000 		.p2align 4,,7
GAS LISTING /tmp/ccjg94QQ.s 			page 471


 17491      000000
 17492              		.p2align 3
 17493              	.L1600:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17494              		.loc 3 100 10 view .LVU5997
 17495              	.LBE930:
 17496              	.LBE929:
 17497              	.LBE982:
 17498              	.LBB983:
 17499              	.LBB978:
 17500              	.LBB973:
 17501              	.LBB967:
 17502              		.loc 1 1403 74 is_stmt 1 view .LVU5998
 17503              	.LBB961:
 17504              	.LBI961:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17505              		.loc 3 105 1 view .LVU5999
 17506              	.LBB962:
 17507              		.loc 3 107 3 view .LVU6000
 17508              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17509              		.loc 3 107 10 is_stmt 0 view .LVU6001
 17510 0380 31C0     		xor	eax, eax	#
 17511 0382 488D3500 		lea	rsi, .LC47[rip]	#,
 17511      000000
 17512 0389 BF010000 		mov	edi, 1	#,
 17512      00
 17513              	.LBE962:
 17514              	.LBE961:
 17515              	.LBE967:
 17516              	# sieve_extend.c:1398:             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; bl
1398:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 17517              		.loc 1 1398 90 view .LVU6002
 17518 038e 4801ED   		add	rbp, rbp	# blocksize_bits
 17519              	.LVL1059:
 17520              	.LBB968:
 17521              	.LBB964:
 17522              	.LBB963:
 17523              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17524              		.loc 3 107 10 view .LVU6003
 17525 0391 E8000000 		call	__printf_chk@PLT	#
 17525      00
 17526              	.LVL1060:
 17527 0396 8B842498 		mov	eax, DWORD PTR 152[rsp]	# prephitmp_326, option_verboselevel
 17527      000000
 17528              	.LVL1061:
 17529              		.loc 3 107 10 view .LVU6004
 17530              	.LBE963:
 17531              	.LBE964:
 17532              	.LBE968:
1398:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 17533              		.loc 1 1398 75 is_stmt 1 view .LVU6005
1398:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 17534              		.loc 1 1398 49 view .LVU6006
 17535              	# sieve_extend.c:1398:             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; bl
1398:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 17536              		.loc 1 1398 13 is_stmt 0 view .LVU6007
 17537 039d 4183EC01 		sub	r12d, 1	# ivtmp_106,
GAS LISTING /tmp/ccjg94QQ.s 			page 472


 17538 03a1 0F85FDFE 		jne	.L1486	#,
 17538      FFFF
 17539              	.L1601:
1398:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 17540              		.loc 1 1398 13 view .LVU6008
 17541              	.LBE973:
1404:sieve_extend.c ****             }
1405:sieve_extend.c ****             if (option_verboselevel >= 2) printf("\n");
 17542              		.loc 1 1405 13 is_stmt 1 view .LVU6009
 17543              	# sieve_extend.c:1405:             if (option_verboselevel >= 2) printf("\n");
 17544              		.loc 1 1405 16 is_stmt 0 view .LVU6010
 17545 03a7 83F801   		cmp	eax, 1	# prephitmp_326,
 17546 03aa 7E0A     		jle	.L1487	#,
 17547              		.loc 1 1405 43 is_stmt 1 view .LVU6011
 17548              	.LVL1062:
 17549              	.LBB974:
 17550              	.LBI974:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17551              		.loc 3 105 1 view .LVU6012
 17552              	.LBB975:
 17553              		.loc 3 107 3 view .LVU6013
 17554              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17555              		.loc 3 107 10 is_stmt 0 view .LVU6014
 17556 03ac BF0A0000 		mov	edi, 10	#,
 17556      00
 17557 03b1 E8000000 		call	putchar@PLT	#
 17557      00
 17558              	.LVL1063:
 17559              	.L1487:
 17560              		.loc 3 107 10 view .LVU6015
 17561              	.LBE975:
 17562              	.LBE974:
 17563              	.LBE978:
1395:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 17564              		.loc 1 1395 77 is_stmt 1 discriminator 2 view .LVU6016
 17565              	# sieve_extend.c:1395:         for (counter_t sieveSize_check = 100; sieveSize_check <= 100000000; 
1395:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 17566              		.loc 1 1395 93 is_stmt 0 discriminator 2 view .LVU6017
 17567 03b6 4F8D6CAD 		lea	r13, 0[r13+r13*4]	# tmp335,
 17567      00
 17568              	.LVL1064:
1395:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 17569              		.loc 1 1395 93 discriminator 2 view .LVU6018
 17570 03bb 4D01ED   		add	r13, r13	# sieveSize_check
 17571              	.LVL1065:
1395:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 17572              		.loc 1 1395 47 is_stmt 1 discriminator 2 view .LVU6019
 17573              	# sieve_extend.c:1395:         for (counter_t sieveSize_check = 100; sieveSize_check <= 100000000; 
1395:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 17574              		.loc 1 1395 9 is_stmt 0 discriminator 2 view .LVU6020
 17575 03be 836C2420 		sub	DWORD PTR 32[rsp], 1	# %sfp,
 17575      01
 17576 03c3 0F854FFE 		jne	.L1488	#,
 17576      FFFF
 17577              	.LBE983:
1406:sieve_extend.c ****         }
1407:sieve_extend.c ****         if (option_verboselevel >= 1) printf("...Valid algorithm\n");
GAS LISTING /tmp/ccjg94QQ.s 			page 473


 17578              		.loc 1 1407 9 is_stmt 1 view .LVU6021
 17579              	# sieve_extend.c:1407:         if (option_verboselevel >= 1) printf("...Valid algorithm\n");
 17580              		.loc 1 1407 12 is_stmt 0 view .LVU6022
 17581 03c9 83BC2498 		cmp	DWORD PTR 152[rsp], 0	# option_verboselevel,
 17581      00000000 
 17582 03d1 0F8F4E09 		jg	.L1603	#,
 17582      0000
1408:sieve_extend.c ****     }
1409:sieve_extend.c ****     
1410:sieve_extend.c ****     counter_t best_blocksize_bits = default_blocksize;
 17583              		.loc 1 1410 5 is_stmt 1 view .LVU6023
 17584              	.LVL1066:
1411:sieve_extend.c ****     if (option_tunelevel) {
 17585              		.loc 1 1411 5 view .LVU6024
 17586              	# sieve_extend.c:1411:     if (option_tunelevel) {
 17587              		.loc 1 1411 9 is_stmt 0 view .LVU6025
 17588 03d7 448B8424 		mov	r8d, DWORD PTR 156[rsp]	# option_tunelevel.40_380, option_tunelevel
 17588      9C000000 
 17589              	# sieve_extend.c:1410:     counter_t best_blocksize_bits = default_blocksize;
1410:sieve_extend.c ****     if (option_tunelevel) {
 17590              		.loc 1 1410 15 view .LVU6026
 17591 03df 41BE00FC 		mov	r14d, 261120	# best_result$blocksize_bits,
 17591      0300
 17592              	# sieve_extend.c:1411:     if (option_tunelevel) {
 17593              		.loc 1 1411 8 view .LVU6027
 17594 03e5 4585C0   		test	r8d, r8d	# option_tunelevel.40_380
 17595 03e8 0F858C02 		jne	.L1604	#,
 17595      0000
 17596              	.LVL1067:
 17597              	.L1517:
 17598              	.LBB984:
1412:sieve_extend.c ****         tuning_result_type tuning_result = tune(option_tunelevel, option_maxFactor, option_verbosel
1413:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
1414:sieve_extend.c ****         global_MEDIUMSTEP_FASTER = tuning_result.mediumstep_faster;
1415:sieve_extend.c ****         global_VECTORSTEP_FASTER = tuning_result.vectorstep_faster;
1416:sieve_extend.c ****         best_blocksize_bits = tuning_result.blocksize_bits;
1417:sieve_extend.c ****     }
1418:sieve_extend.c **** 
1419:sieve_extend.c ****     double max_time = default_sieve_duration;
1420:sieve_extend.c ****     if (best_blocksize_bits > 0) {
1421:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
1422:sieve_extend.c ****         counter_t passes = 0;
 17599              		.loc 1 1422 9 is_stmt 1 view .LVU6028
1423:sieve_extend.c ****         counter_t blocksize_bits = best_blocksize_bits;
 17600              		.loc 1 1423 9 view .LVU6029
1424:sieve_extend.c ****         double elapsed_time = 0;
 17601              		.loc 1 1424 9 view .LVU6030
1425:sieve_extend.c ****         struct sieve_state *sieve_instance;
 17602              		.loc 1 1425 9 view .LVU6031
1426:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&start_time);
 17603              		.loc 1 1426 9 view .LVU6032
 17604 03ee 488DB424 		lea	rsi, 176[rsp]	# tmp438,
 17604      B0000000 
 17605 03f6 BF010000 		mov	edi, 1	#,
 17605      00
 17606 03fb E8000000 		call	clock_gettime@PLT	#
 17606      00
GAS LISTING /tmp/ccjg94QQ.s 			page 474


 17607              	.LVL1068:
1427:sieve_extend.c ****         while (elapsed_time <= max_time) {
 17608              		.loc 1 1427 9 view .LVU6033
 17609              		.loc 1 1427 15 view .LVU6034
 17610              	# sieve_extend.c:1422:         counter_t passes = 0;
1422:sieve_extend.c ****         counter_t blocksize_bits = best_blocksize_bits;
 17611              		.loc 1 1422 19 is_stmt 0 view .LVU6035
 17612 0400 4531FF   		xor	r15d, r15d	# passes
 17613 0403 4C8DA424 		lea	r12, 192[rsp]	# tmp465,
 17613      C0000000 
 17614              	.LVL1069:
 17615              	.L1518:
1428:sieve_extend.c ****             sieve_instance = sieve(option_maxFactor, blocksize_bits);//blocksize_bits);
 17616              		.loc 1 1428 13 is_stmt 1 view .LVU6036
 17617              	# sieve_extend.c:1428:             sieve_instance = sieve(option_maxFactor, blocksize_bits);//block
 17618              		.loc 1 1428 30 is_stmt 0 view .LVU6037
 17619 040b 488BBC24 		mov	rdi, QWORD PTR 160[rsp]	#, option_maxFactor
 17619      A0000000 
 17620 0413 4C89F6   		mov	rsi, r14	#, best_result$blocksize_bits
 17621              	# sieve_extend.c:1430:             passes++;
1429:sieve_extend.c ****             delete_sieve(sieve_instance);
1430:sieve_extend.c ****             passes++;
 17622              		.loc 1 1430 19 view .LVU6038
 17623 0416 4983C701 		add	r15, 1	# passes,
 17624              	# sieve_extend.c:1428:             sieve_instance = sieve(option_maxFactor, blocksize_bits);//block
1428:sieve_extend.c ****             sieve_instance = sieve(option_maxFactor, blocksize_bits);//blocksize_bits);
 17625              		.loc 1 1428 30 view .LVU6039
 17626 041a E8000000 		call	sieve	#
 17626      00
 17627              	.LVL1070:
 17628              	.LBB985:
 17629              	.LBB986:
 17630              	# sieve_extend.c:117:     free(sieve->bitarray);
 117:sieve_extend.c ****     free(sieve);
 17631              		.loc 1 117 5 view .LVU6040
 17632 041f 488B38   		mov	rdi, QWORD PTR [rax]	#, sieve_instance_146->bitarray
 17633              	.LBE986:
 17634              	.LBE985:
 17635              	# sieve_extend.c:1428:             sieve_instance = sieve(option_maxFactor, blocksize_bits);//block
1428:sieve_extend.c ****             sieve_instance = sieve(option_maxFactor, blocksize_bits);//blocksize_bits);
 17636              		.loc 1 1428 30 view .LVU6041
 17637 0422 4989C5   		mov	r13, rax	# sieve_instance, tmp533
 17638              	.LVL1071:
1429:sieve_extend.c ****             delete_sieve(sieve_instance);
 17639              		.loc 1 1429 13 is_stmt 1 view .LVU6042
 17640              	.LBB990:
 17641              	.LBI985:
 116:sieve_extend.c ****     free(sieve->bitarray);
 17642              		.loc 1 116 13 view .LVU6043
 17643              	.LBB987:
 117:sieve_extend.c ****     free(sieve);
 17644              		.loc 1 117 5 view .LVU6044
 17645 0425 E8000000 		call	free@PLT	#
 17645      00
 17646              	.LVL1072:
 118:sieve_extend.c **** }
 17647              		.loc 1 118 5 view .LVU6045
GAS LISTING /tmp/ccjg94QQ.s 			page 475


 17648 042a 4C89EF   		mov	rdi, r13	#, sieve_instance
 17649 042d E8000000 		call	free@PLT	#
 17649      00
 17650              	.LVL1073:
 118:sieve_extend.c **** }
 17651              		.loc 1 118 5 is_stmt 0 view .LVU6046
 17652              	.LBE987:
 17653              	.LBE990:
 17654              		.loc 1 1430 13 is_stmt 1 view .LVU6047
1431:sieve_extend.c ****             clock_gettime(CLOCK_MONOTONIC,&end_time);
 17655              		.loc 1 1431 13 view .LVU6048
 17656 0432 4C89E6   		mov	rsi, r12	#, tmp465
 17657 0435 BF010000 		mov	edi, 1	#,
 17657      00
 17658 043a E8000000 		call	clock_gettime@PLT	#
 17658      00
 17659              	.LVL1074:
1432:sieve_extend.c ****             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time
 17660              		.loc 1 1432 13 view .LVU6049
 17661              	# sieve_extend.c:1432:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 17662              		.loc 1 1432 62 is_stmt 0 view .LVU6050
 17663 043f C4E1D32A 		vcvtsi2sd	xmm5, xmm5, QWORD PTR 200[rsp]	# tmp441, end_time.tv_nsec
 17663      AC24C800 
 17663      0000
 17664              	# sieve_extend.c:1432:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 17665              		.loc 1 1432 68 view .LVU6051
 17666 0449 C4E1EB2A 		vcvtsi2sd	xmm2, xmm2, QWORD PTR 176[rsp]	# tmp442, start_time.tv_sec
 17666      9424B000 
 17666      0000
 17667              	# sieve_extend.c:1432:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 17668              		.loc 1 1432 108 view .LVU6052
 17669 0453 C461BB2A 		vcvtsi2sd	xmm8, xmm8, QWORD PTR 184[rsp]	# tmp444, start_time.tv_nsec
 17669      8424B800 
 17669      0000
 17670              	# sieve_extend.c:1432:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 17671              		.loc 1 1432 44 view .LVU6053
 17672 045d C461B32A 		vcvtsi2sd	xmm9, xmm9, QWORD PTR 192[rsp]	# tmp445, end_time.tv_sec
 17672      8C24C000 
 17672      0000
 17673              	# sieve_extend.c:1427:         while (elapsed_time <= max_time) {
1427:sieve_extend.c ****             sieve_instance = sieve(option_maxFactor, blocksize_bits);//blocksize_bits);
 17674              		.loc 1 1427 15 view .LVU6054
 17675 0467 C57B1015 		vmovsd	xmm10, QWORD PTR .LC59[rip]	# tmp628,
 17675      00000000 
 17676 046f C4E2E99B 		vfmsub132sd	xmm5, xmm2, QWORD PTR .LC8[rip]	# _301, tmp442,
 17676      2D000000 
 17676      00
 17677 0478 C462B19D 		vfnmadd132sd	xmm8, xmm9, QWORD PTR .LC8[rip]	# _302, tmp445,
 17677      05000000 
 17677      00
 17678              	# sieve_extend.c:1432:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 17679              		.loc 1 1432 26 view .LVU6055
 17680 0481 C4C15358 		vaddsd	xmm0, xmm5, xmm8	# elapsed_time, _301, _302
 17680      C0
 17681              	.LVL1075:
1427:sieve_extend.c ****             sieve_instance = sieve(option_maxFactor, blocksize_bits);//blocksize_bits);
 17682              		.loc 1 1427 15 is_stmt 1 view .LVU6056
GAS LISTING /tmp/ccjg94QQ.s 			page 476


 17683 0486 C5792FD0 		vcomisd	xmm10, xmm0	# tmp628, elapsed_time
 17684 048a 0F828500 		jb	.L1590	#,
 17684      0000
 17685              	.LVL1076:
1428:sieve_extend.c ****             delete_sieve(sieve_instance);
 17686              		.loc 1 1428 13 view .LVU6057
 17687              	# sieve_extend.c:1428:             sieve_instance = sieve(option_maxFactor, blocksize_bits);//block
1428:sieve_extend.c ****             delete_sieve(sieve_instance);
 17688              		.loc 1 1428 30 is_stmt 0 view .LVU6058
 17689 0490 488BBC24 		mov	rdi, QWORD PTR 160[rsp]	#, option_maxFactor
 17689      A0000000 
 17690 0498 4C89F6   		mov	rsi, r14	#, best_result$blocksize_bits
 17691              	# sieve_extend.c:1430:             passes++;
1430:sieve_extend.c ****             clock_gettime(CLOCK_MONOTONIC,&end_time);
 17692              		.loc 1 1430 19 view .LVU6059
 17693 049b 4983C701 		add	r15, 1	# passes,
 17694              	# sieve_extend.c:1428:             sieve_instance = sieve(option_maxFactor, blocksize_bits);//block
1428:sieve_extend.c ****             delete_sieve(sieve_instance);
 17695              		.loc 1 1428 30 view .LVU6060
 17696 049f E8000000 		call	sieve	#
 17696      00
 17697              	.LVL1077:
 17698              	.LBB991:
 17699              	.LBB988:
 17700              	# sieve_extend.c:117:     free(sieve->bitarray);
 117:sieve_extend.c ****     free(sieve);
 17701              		.loc 1 117 5 view .LVU6061
 17702 04a4 488B38   		mov	rdi, QWORD PTR [rax]	#, sieve_instance_146->bitarray
 17703              	.LBE988:
 17704              	.LBE991:
 17705              	# sieve_extend.c:1428:             sieve_instance = sieve(option_maxFactor, blocksize_bits);//block
1428:sieve_extend.c ****             delete_sieve(sieve_instance);
 17706              		.loc 1 1428 30 view .LVU6062
 17707 04a7 4889C5   		mov	rbp, rax	# sieve_instance, tmp535
1429:sieve_extend.c ****             passes++;
 17708              		.loc 1 1429 13 is_stmt 1 view .LVU6063
 17709              	.LVL1078:
 17710              	.LBB992:
 116:sieve_extend.c ****     free(sieve->bitarray);
 17711              		.loc 1 116 13 view .LVU6064
 17712              	.LBB989:
 117:sieve_extend.c ****     free(sieve);
 17713              		.loc 1 117 5 view .LVU6065
 17714 04aa E8000000 		call	free@PLT	#
 17714      00
 17715              	.LVL1079:
 118:sieve_extend.c **** }
 17716              		.loc 1 118 5 view .LVU6066
 17717 04af 4889EF   		mov	rdi, rbp	#, sieve_instance
 17718 04b2 E8000000 		call	free@PLT	#
 17718      00
 17719              	.LVL1080:
 118:sieve_extend.c **** }
 17720              		.loc 1 118 5 is_stmt 0 view .LVU6067
 17721              	.LBE989:
 17722              	.LBE992:
1430:sieve_extend.c ****             clock_gettime(CLOCK_MONOTONIC,&end_time);
GAS LISTING /tmp/ccjg94QQ.s 			page 477


 17723              		.loc 1 1430 13 is_stmt 1 view .LVU6068
1431:sieve_extend.c ****             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time
 17724              		.loc 1 1431 13 view .LVU6069
 17725 04b7 4C89E6   		mov	rsi, r12	#, tmp465
 17726 04ba BF010000 		mov	edi, 1	#,
 17726      00
 17727 04bf E8000000 		call	clock_gettime@PLT	#
 17727      00
 17728              	.LVL1081:
 17729              		.loc 1 1432 13 view .LVU6070
 17730              	# sieve_extend.c:1432:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 17731              		.loc 1 1432 62 is_stmt 0 view .LVU6071
 17732 04c4 C461A32A 		vcvtsi2sd	xmm11, xmm11, QWORD PTR 200[rsp]	# tmp518, end_time.tv_nsec
 17732      9C24C800 
 17732      0000
 17733              	# sieve_extend.c:1432:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 17734              		.loc 1 1432 68 view .LVU6072
 17735 04ce C4619B2A 		vcvtsi2sd	xmm12, xmm12, QWORD PTR 176[rsp]	# tmp519, start_time.tv_sec
 17735      A424B000 
 17735      0000
 17736              	# sieve_extend.c:1432:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 17737              		.loc 1 1432 108 view .LVU6073
 17738 04d8 C461932A 		vcvtsi2sd	xmm13, xmm13, QWORD PTR 184[rsp]	# tmp521, start_time.tv_nsec
 17738      AC24B800 
 17738      0000
 17739              	# sieve_extend.c:1432:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 17740              		.loc 1 1432 44 view .LVU6074
 17741 04e2 C4618B2A 		vcvtsi2sd	xmm14, xmm14, QWORD PTR 192[rsp]	# tmp522, end_time.tv_sec
 17741      B424C000 
 17741      0000
 17742              	# sieve_extend.c:1427:         while (elapsed_time <= max_time) {
1427:sieve_extend.c ****             sieve_instance = sieve(option_maxFactor, blocksize_bits);//blocksize_bits);
 17743              		.loc 1 1427 15 view .LVU6075
 17744 04ec C57B103D 		vmovsd	xmm15, QWORD PTR .LC59[rip]	# tmp635,
 17744      00000000 
 17745 04f4 C462999B 		vfmsub132sd	xmm11, xmm12, QWORD PTR .LC8[rip]	# _301, tmp519,
 17745      1D000000 
 17745      00
 17746 04fd C462899D 		vfnmadd132sd	xmm13, xmm14, QWORD PTR .LC8[rip]	# _302, tmp522,
 17746      2D000000 
 17746      00
 17747              	# sieve_extend.c:1432:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 17748              		.loc 1 1432 26 view .LVU6076
 17749 0506 C4C12358 		vaddsd	xmm0, xmm11, xmm13	# elapsed_time, _301, _302
 17749      C5
 17750              	.LVL1082:
1427:sieve_extend.c ****             sieve_instance = sieve(option_maxFactor, blocksize_bits);//blocksize_bits);
 17751              		.loc 1 1427 15 is_stmt 1 view .LVU6077
 17752 050b C5792FF8 		vcomisd	xmm15, xmm0	# tmp635, elapsed_time
 17753 050f 0F83F6FE 		jnb	.L1518	#,
 17753      FFFF
 17754              	.L1590:
1433:sieve_extend.c ****         }
1434:sieve_extend.c ****         printf("rogiervandam_extend;%ju;%f;1;algorithm=other,faithful=yes,bits=1\n", (uintmax_t)pas
 17755              		.loc 1 1434 9 view .LVU6078
 17756              	.LVL1083:
 17757              	.LBB993:
GAS LISTING /tmp/ccjg94QQ.s 			page 478


 17758              	.LBI993:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17759              		.loc 3 105 1 view .LVU6079
 17760              	.LBB994:
 17761              		.loc 3 107 3 view .LVU6080
 17762              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17763              		.loc 3 107 10 is_stmt 0 view .LVU6081
 17764 0515 4C89FA   		mov	rdx, r15	#, passes
 17765 0518 488D3500 		lea	rsi, .LC60[rip]	#,
 17765      000000
 17766 051f BF010000 		mov	edi, 1	#,
 17766      00
 17767 0524 B8010000 		mov	eax, 1	#,
 17767      00
 17768 0529 C5FB1144 		vmovsd	QWORD PTR 32[rsp], xmm0	# %sfp, elapsed_time
 17768      2420
 17769 052f E8000000 		call	__printf_chk@PLT	#
 17769      00
 17770              	.LVL1084:
 17771              		.loc 3 107 10 view .LVU6082
 17772              	.LBE994:
 17773              	.LBE993:
1435:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - per second %f\n", 5*pass
 17774              		.loc 1 1435 9 is_stmt 1 view .LVU6083
 17775              	# sieve_extend.c:1435:         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - p
 17776              		.loc 1 1435 12 is_stmt 0 view .LVU6084
 17777 0534 83BC2498 		cmp	DWORD PTR 152[rsp], 0	# option_verboselevel,
 17777      00000000 
 17778 053c 0F8FCA00 		jg	.L1605	#,
 17778      0000
 17779              	.LVL1085:
 17780              	.L1516:
 17781              		.loc 1 1435 12 view .LVU6085
 17782              	.LBE984:
1436:sieve_extend.c ****     }
1437:sieve_extend.c ****     
1438:sieve_extend.c ****     if (option_showMaxFactor > 0) {
 17783              		.loc 1 1438 5 is_stmt 1 view .LVU6086
 17784              	# sieve_extend.c:1438:     if (option_showMaxFactor > 0) {
 17785              		.loc 1 1438 8 is_stmt 0 view .LVU6087
 17786 0542 4883BC24 		cmp	QWORD PTR 168[rsp], 0	# option_showMaxFactor,
 17786      A8000000 
 17786      00
 17787 054b 756D     		jne	.L1606	#,
 17788 054d 0F1F00   		.p2align 4
 17789              		.p2align 3
 17790              	.L1524:
 17791              	.LBB1001:
 17792              	.LBB979:
 17793              	.LBB976:
 17794              	.LBB969:
1403:sieve_extend.c ****             }
 17795              		.loc 1 1403 29 is_stmt 1 discriminator 1 view .LVU6088
 17796              	.LBE969:
 17797              	.LBE976:
 17798              	.LBE979:
 17799              	.LBE1001:
GAS LISTING /tmp/ccjg94QQ.s 			page 479


 17800              	# sieve_extend.c:1445: }
1439:sieve_extend.c ****         printf("Show result set:\n");
1440:sieve_extend.c ****         struct sieve_state* sieve_instance = sieve(option_maxFactor, option_maxFactor);
1441:sieve_extend.c ****         show_primes(sieve_instance, option_showMaxFactor);
1442:sieve_extend.c ****         delete_sieve(sieve_instance);
1443:sieve_extend.c ****         printf("\n");
1444:sieve_extend.c ****     }
1445:sieve_extend.c **** }
 17801              		.loc 1 1445 1 is_stmt 0 discriminator 1 view .LVU6089
 17802 0550 488B8424 		mov	rax, QWORD PTR 216[rsp]	# tmp571, D.7395
 17802      D8000000 
 17803 0558 64483304 		xor	rax, QWORD PTR fs:40	# tmp571, MEM[(<address-space-1> long unsigned int *)40B]
 17803      25280000 
 17803      00
 17804 0561 0F85270A 		jne	.L1607	#,
 17804      0000
 17805              	# sieve_extend.c:1445: }
 17806              		.loc 1 1445 1 view .LVU6090
 17807 0567 488DA424 		lea	rsp, 232[rsp]	#,
 17807      E8000000 
 17808              		.cfi_remember_state
 17809              		.cfi_def_cfa_offset 56
 17810 056f 31C0     		xor	eax, eax	#
 17811 0571 5B       		pop	rbx	#
 17812              		.cfi_def_cfa_offset 48
 17813 0572 5D       		pop	rbp	#
 17814              		.cfi_def_cfa_offset 40
 17815 0573 415C     		pop	r12	#
 17816              		.cfi_def_cfa_offset 32
 17817 0575 415D     		pop	r13	#
 17818              		.cfi_def_cfa_offset 24
 17819 0577 415E     		pop	r14	#
 17820              		.cfi_def_cfa_offset 16
 17821 0579 415F     		pop	r15	#
 17822              		.cfi_def_cfa_offset 8
 17823 057b C3       		ret	
 17824              	.L1480:
 17825              		.cfi_restore_state
1391:sieve_extend.c ****         if (option_verboselevel >= 2) printf("\n");
 17826              		.loc 1 1391 39 is_stmt 1 view .LVU6091
 17827              	.LVL1086:
 17828              	.LBB1002:
 17829              	.LBI1002:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17830              		.loc 3 105 1 view .LVU6092
 17831              	.LBB1003:
 17832              		.loc 3 107 3 view .LVU6093
 17833              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17834              		.loc 3 107 10 is_stmt 0 view .LVU6094
 17835 057c 488D3500 		lea	rsi, .LC27[rip]	#,
 17835      000000
 17836 0583 BF010000 		mov	edi, 1	#,
 17836      00
 17837 0588 31C0     		xor	eax, eax	#
 17838 058a E8000000 		call	__printf_chk@PLT	#
 17838      00
 17839              	.LVL1087:
GAS LISTING /tmp/ccjg94QQ.s 			page 480


 17840 058f E95BFCFF 		jmp	.L1465	#
 17840      FF
 17841              	.LVL1088:
 17842              	.L1469:
 17843              		.loc 3 107 10 view .LVU6095
 17844              	.LBE1003:
 17845              	.LBE1002:
 17846              	.LBB1004:
1351:sieve_extend.c ****             }
 17847              		.loc 1 1351 17 is_stmt 1 view .LVU6096
 17848              	.LBB931:
 17849              	.LBI931:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17850              		.loc 3 98 1 view .LVU6097
 17851              	.LBB932:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17852              		.loc 3 100 3 view .LVU6098
 17853              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17854              		.loc 3 100 10 is_stmt 0 view .LVU6099
 17855 0594 498B0F   		mov	rcx, QWORD PTR [r15]	#, *_16
 17856 0597 488D1500 		lea	rdx, .LC32[rip]	#,
 17856      000000
 17857              	.LVL1089:
 17858              	.L1593:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17859              		.loc 3 100 10 view .LVU6100
 17860              	.LBE932:
 17861              	.LBE931:
 17862              	.LBB933:
 17863              	.LBB934:
 17864 059e 488B3D00 		mov	rdi, QWORD PTR stderr[rip]	#, stderr
 17864      000000
 17865 05a5 BE010000 		mov	esi, 1	#,
 17865      00
 17866 05aa 31C0     		xor	eax, eax	#
 17867 05ac E8000000 		call	__fprintf_chk@PLT	#
 17867      00
 17868              	.LVL1090:
 17869              	.L1594:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17870              		.loc 3 100 10 view .LVU6101
 17871              	.LBE934:
 17872              	.LBE933:
1359:sieve_extend.c ****             }
 17873              		.loc 1 1359 80 is_stmt 1 view .LVU6102
 17874 05b1 498B3C24 		mov	rdi, QWORD PTR [r12]	#, *argv_159(D)
 17875 05b5 E8000000 		call	usage	#
 17875      00
 17876              	.LVL1091:
 17877              	.L1606:
1359:sieve_extend.c ****             }
 17878              		.loc 1 1359 80 is_stmt 0 view .LVU6103
 17879              	.LBE1004:
 17880              	.LBB1005:
1439:sieve_extend.c ****         struct sieve_state* sieve_instance = sieve(option_maxFactor, option_maxFactor);
 17881              		.loc 1 1439 9 is_stmt 1 view .LVU6104
GAS LISTING /tmp/ccjg94QQ.s 			page 481


 17882              	.LBB1006:
 17883              	.LBI1006:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17884              		.loc 3 105 1 view .LVU6105
 17885              	.LBB1007:
 17886              		.loc 3 107 3 view .LVU6106
 17887              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17888              		.loc 3 107 10 is_stmt 0 view .LVU6107
 17889 05ba 488D3D00 		lea	rdi, .LC62[rip]	#,
 17889      000000
 17890 05c1 E8000000 		call	puts@PLT	#
 17890      00
 17891              	.LVL1092:
 17892              		.loc 3 107 10 view .LVU6108
 17893              	.LBE1007:
 17894              	.LBE1006:
1440:sieve_extend.c ****         show_primes(sieve_instance, option_showMaxFactor);
 17895              		.loc 1 1440 9 is_stmt 1 view .LVU6109
 17896              	# sieve_extend.c:1440:         struct sieve_state* sieve_instance = sieve(option_maxFactor, option_
1440:sieve_extend.c ****         show_primes(sieve_instance, option_showMaxFactor);
 17897              		.loc 1 1440 46 is_stmt 0 view .LVU6110
 17898 05c6 488BBC24 		mov	rdi, QWORD PTR 160[rsp]	# option_maxFactor.51_93, option_maxFactor
 17898      A0000000 
 17899 05ce 4889FE   		mov	rsi, rdi	#, option_maxFactor.51_93
 17900 05d1 E8000000 		call	sieve	#
 17900      00
 17901              	.LVL1093:
 17902              	# sieve_extend.c:1441:         show_primes(sieve_instance, option_showMaxFactor);
1441:sieve_extend.c ****         delete_sieve(sieve_instance);
 17903              		.loc 1 1441 9 view .LVU6111
 17904 05d6 488B9424 		mov	rdx, QWORD PTR 168[rsp]	#, option_showMaxFactor
 17904      A8000000 
 17905              	# sieve_extend.c:1440:         struct sieve_state* sieve_instance = sieve(option_maxFactor, option_
1440:sieve_extend.c ****         show_primes(sieve_instance, option_showMaxFactor);
 17906              		.loc 1 1440 46 view .LVU6112
 17907 05de 4989C6   		mov	r14, rax	# sieve_instance, tmp534
 17908              	.LVL1094:
1441:sieve_extend.c ****         delete_sieve(sieve_instance);
 17909              		.loc 1 1441 9 is_stmt 1 view .LVU6113
 17910 05e1 488D7008 		lea	rsi, 8[rax]	# tmp460,
 17911 05e5 4889C7   		mov	rdi, rax	#, sieve_instance
 17912 05e8 E8000000 		call	show_primes.isra.0	#
 17912      00
 17913              	.LVL1095:
1442:sieve_extend.c ****         printf("\n");
 17914              		.loc 1 1442 9 view .LVU6114
 17915              	.LBB1008:
 17916              	.LBI1008:
 116:sieve_extend.c ****     free(sieve->bitarray);
 17917              		.loc 1 116 13 view .LVU6115
 17918              	.LBB1009:
 117:sieve_extend.c ****     free(sieve);
 17919              		.loc 1 117 5 view .LVU6116
 17920 05ed 498B3E   		mov	rdi, QWORD PTR [r14]	#, sieve_instance_151->bitarray
 17921 05f0 E8000000 		call	free@PLT	#
 17921      00
 17922              	.LVL1096:
GAS LISTING /tmp/ccjg94QQ.s 			page 482


 118:sieve_extend.c **** }
 17923              		.loc 1 118 5 view .LVU6117
 17924 05f5 4C89F7   		mov	rdi, r14	#, sieve_instance
 17925 05f8 E8000000 		call	free@PLT	#
 17925      00
 17926              	.LVL1097:
 118:sieve_extend.c **** }
 17927              		.loc 1 118 5 is_stmt 0 view .LVU6118
 17928              	.LBE1009:
 17929              	.LBE1008:
1443:sieve_extend.c ****     }
 17930              		.loc 1 1443 9 is_stmt 1 view .LVU6119
 17931              	.LBB1010:
 17932              	.LBI1010:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17933              		.loc 3 105 1 view .LVU6120
 17934              	.LBB1011:
 17935              		.loc 3 107 3 view .LVU6121
 17936              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17937              		.loc 3 107 10 is_stmt 0 view .LVU6122
 17938 05fd BF0A0000 		mov	edi, 10	#,
 17938      00
 17939 0602 E8000000 		call	putchar@PLT	#
 17939      00
 17940              	.LVL1098:
 17941 0607 E944FFFF 		jmp	.L1524	#
 17941      FF
 17942              	.LVL1099:
 17943              	.L1605:
 17944              		.loc 3 107 10 view .LVU6123
 17945              	.LBE1011:
 17946              	.LBE1010:
 17947              	.LBE1005:
 17948              	.LBB1012:
1435:sieve_extend.c ****     }
 17949              		.loc 1 1435 39 is_stmt 1 discriminator 1 view .LVU6124
 17950              	.LBB995:
 17951              	.LBI995:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17952              		.loc 3 105 1 discriminator 1 view .LVU6125
 17953              	.LBB996:
 17954              		.loc 3 107 3 discriminator 1 view .LVU6126
 17955              	.LBE996:
 17956              	.LBE995:
 17957              	# sieve_extend.c:1435:         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - p
1435:sieve_extend.c ****     }
 17958              		.loc 1 1435 39 is_stmt 0 discriminator 1 view .LVU6127
 17959 060c C4C1FB2A 		vcvtsi2sd	xmm0, xmm0, r15	# tmp448, passes
 17959      C7
 17960 0611 4D85FF   		test	r15, r15	# passes
 17961 0614 C5FB1074 		vmovsd	xmm6, QWORD PTR 32[rsp]	# elapsed_time, %sfp
 17961      2420
 17962 061a 7918     		jns	.L1521	#,
 17963 061c 4C89F8   		mov	rax, r15	# tmp450, passes
 17964 061f 4C89FA   		mov	rdx, r15	# tmp451, passes
 17965 0622 48D1E8   		shr	rax	# tmp450
 17966 0625 83E201   		and	edx, 1	# tmp451,
GAS LISTING /tmp/ccjg94QQ.s 			page 483


 17967 0628 4809D0   		or	rax, rdx	# tmp514, tmp451
 17968 062b C4E1C32A 		vcvtsi2sd	xmm7, xmm7, rax	# tmp449, tmp514
 17968      F8
 17969 0630 C5C358C7 		vaddsd	xmm0, xmm7, xmm7	# tmp448, tmp449, tmp449
 17970              	.L1521:
1435:sieve_extend.c ****     }
 17971              		.loc 1 1435 39 discriminator 1 view .LVU6128
 17972 0634 C5FB5ECE 		vdivsd	xmm1, xmm0, xmm6	# tmp452, tmp448, elapsed_time
 17973              	# sieve_extend.c:1435:         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - p
1435:sieve_extend.c ****     }
 17974              		.loc 1 1435 95 discriminator 1 view .LVU6129
 17975 0638 4B8D34BF 		lea	rsi, [r15+r15*4]	# tmp453,
 17976              	# sieve_extend.c:1435:         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - p
1435:sieve_extend.c ****     }
 17977              		.loc 1 1435 39 discriminator 1 view .LVU6130
 17978 063c 4885F6   		test	rsi, rsi	# tmp453
 17979 063f C4E1E32A 		vcvtsi2sd	xmm3, xmm3, rsi	# tmp454, tmp453
 17979      DE
 17980 0644 7915     		jns	.L1523	#,
 17981 0646 4989F0   		mov	r8, rsi	# tmp456, tmp453
 17982 0649 83E601   		and	esi, 1	# tmp457,
 17983 064c 49D1E8   		shr	r8	# tmp456
 17984 064f 4909F0   		or	r8, rsi	# tmp515, tmp457
 17985 0652 C4C1DB2A 		vcvtsi2sd	xmm4, xmm4, r8	# tmp455, tmp515
 17985      E0
 17986 0657 C5DB58DC 		vaddsd	xmm3, xmm4, xmm4	# tmp454, tmp455, tmp455
 17987              	.L1523:
 17988 065b C5E35EC6 		vdivsd	xmm0, xmm3, xmm6	# tmp458, tmp454, elapsed_time
 17989              	.LBB998:
 17990              	.LBB997:
 17991              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17992              		.loc 3 107 10 discriminator 1 view .LVU6131
 17993 065f 488D3500 		lea	rsi, .LC61[rip]	#,
 17993      000000
 17994 0666 BF010000 		mov	edi, 1	#,
 17994      00
 17995 066b B8020000 		mov	eax, 2	#,
 17995      00
 17996 0670 E8000000 		call	__printf_chk@PLT	#
 17996      00
 17997              	.LVL1100:
 17998 0675 E9C8FEFF 		jmp	.L1516	#
 17998      FF
 17999              	.LVL1101:
 18000              	.L1604:
 18001              		.loc 3 107 10 discriminator 1 view .LVU6132
 18002              	.LBE997:
 18003              	.LBE998:
 18004              	.LBE1012:
 18005              	.LBB1013:
1412:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
 18006              		.loc 1 1412 9 is_stmt 1 view .LVU6133
 18007              	# sieve_extend.c:1412:         tuning_result_type tuning_result = tune(option_tunelevel, option_max
1412:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
 18008              		.loc 1 1412 44 is_stmt 0 view .LVU6134
 18009 067a 448B9424 		mov	r10d, DWORD PTR 152[rsp]	# option_verboselevel.41_63, option_verboselevel
 18009      98000000 
GAS LISTING /tmp/ccjg94QQ.s 			page 484


 18010 0682 4183E801 		sub	r8d, 1	#,
 18011 0686 4C8B9C24 		mov	r11, QWORD PTR 160[rsp]	# option_maxFactor.42_64, option_maxFactor
 18011      A0000000 
 18012 068e 4183F802 		cmp	r8d, 2	# _212,
 18013 0692 44895424 		mov	DWORD PTR 88[rsp], r10d	# %sfp, option_verboselevel.41_63
 18013      58
 18014 0697 4C895C24 		mov	QWORD PTR 120[rsp], r11	# %sfp, option_maxFactor.42_64
 18014      78
 18015              	.LVL1102:
 18016              	.LBB1014:
 18017              	.LBI1014:
1217:sieve_extend.c ****     counter_t best_blocksize_bits = default_blocksize;
 18018              		.loc 1 1217 27 is_stmt 1 view .LVU6135
 18019              	.LBB1015:
1218:sieve_extend.c **** 
 18020              		.loc 1 1218 5 view .LVU6136
1220:sieve_extend.c ****     best_blocksize_bits = 0;
 18021              		.loc 1 1220 5 view .LVU6137
1221:sieve_extend.c ****     counter_t best_smallstep_faster = 0;
 18022              		.loc 1 1221 5 view .LVU6138
1222:sieve_extend.c ****     counter_t best_mediumstep_faster = 0;
 18023              		.loc 1 1222 5 view .LVU6139
1223:sieve_extend.c ****     counter_t best_vectorstep_faster = 0;
 18024              		.loc 1 1223 5 view .LVU6140
1224:sieve_extend.c ****     counter_t smallstep_faster_steps = 4;
 18025              		.loc 1 1224 5 view .LVU6141
1225:sieve_extend.c ****     counter_t mediumstep_faster_steps = 4;
 18026              		.loc 1 1225 5 view .LVU6142
1226:sieve_extend.c ****     counter_t vectorstep_faster_steps = 32;
 18027              		.loc 1 1226 5 view .LVU6143
1227:sieve_extend.c ****     counter_t freebits_steps = anticiped_cache_line_bytesize;
 18028              		.loc 1 1227 5 view .LVU6144
1228:sieve_extend.c ****     counter_t sample_max = default_sample_max;
 18029              		.loc 1 1228 5 view .LVU6145
1229:sieve_extend.c ****     double sample_duration = default_sample_duration;
 18030              		.loc 1 1229 5 view .LVU6146
1230:sieve_extend.c **** 
 18031              		.loc 1 1230 5 view .LVU6147
1233:sieve_extend.c ****         case 1:
 18032              		.loc 1 1233 5 view .LVU6148
 18033 069c 0F869407 		jbe	.L1525	#,
 18033      0000
 18034 06a2 C5FB1035 		vmovsd	xmm6, QWORD PTR .LC26[rip]	# sample_duration,
 18034      00000000 
 18035 06aa 48C74424 		mov	QWORD PTR 104[rsp], 5	# %sfp,
 18035      68050000 
 18035      00
 18036 06b3 48C74424 		mov	QWORD PTR 96[rsp], 128	# %sfp,
 18036      60800000 
 18036      00
 18037 06bc 48C78424 		mov	QWORD PTR 128[rsp], 32	# %sfp,
 18037      80000000 
 18037      20000000 
 18038 06c8 48C78424 		mov	QWORD PTR 136[rsp], 4	# %sfp,
 18038      88000000 
 18038      04000000 
 18039 06d4 C5FB1174 		vmovsd	QWORD PTR 112[rsp], xmm6	# %sfp, sample_duration
GAS LISTING /tmp/ccjg94QQ.s 			page 485


 18039      2470
 18040              	.LVL1103:
 18041              	.L1493:
1261:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 18042              		.loc 1 1261 5 view .LVU6149
 18043              	# sieve_extend.c:1261:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1261:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 18044              		.loc 1 1261 33 is_stmt 0 view .LVU6150
 18045 06da B8400000 		mov	eax, 64	# tmp348,
 18045      00
 18046 06df 31D2     		xor	edx, edx	# tmp347
 18047 06e1 48F7B424 		div	QWORD PTR 136[rsp]	# %sfp
 18047      88000000 
 18048              	# sieve_extend.c:1261:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1261:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 18049              		.loc 1 1261 254 view .LVU6151
 18050 06e9 31D2     		xor	edx, edx	# tmp355
 18051              	# sieve_extend.c:1263:     counter_t tuning_results=0;
1263:sieve_extend.c ****     counter_t tuning_result_index=0;
 18052              		.loc 1 1263 15 view .LVU6152
 18053 06eb 4531ED   		xor	r13d, r13d	# tuning_results
 18054              	# sieve_extend.c:1261:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1261:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 18055              		.loc 1 1261 83 view .LVU6153
 18056 06ee 488D7801 		lea	rdi, 1[rax]	# _229,
 18057              	.LVL1104:
1262:sieve_extend.c ****     counter_t tuning_results=0;
 18058              		.loc 1 1262 5 is_stmt 1 view .LVU6154
 18059              	# sieve_extend.c:1261:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1261:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 18060              		.loc 1 1261 254 is_stmt 0 view .LVU6155
 18061 06f2 B8001000 		mov	eax, 4096	# tmp356,
 18061      00
 18062 06f7 48F77424 		div	QWORD PTR 96[rsp]	# %sfp
 18062      60
 18063              	.LVL1105:
 18064              	# sieve_extend.c:1261:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1261:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 18065              		.loc 1 1261 148 view .LVU6156
 18066 06fc 31D2     		xor	edx, edx	# tmp365
 18067              	# sieve_extend.c:1262:     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_r
1262:sieve_extend.c ****     counter_t tuning_results=0;
 18068              		.loc 1 1262 41 view .LVU6157
 18069 06fe 480FAFC7 		imul	rax, rdi	# tmp361, _229
 18070              	.LVL1106:
1262:sieve_extend.c ****     counter_t tuning_results=0;
 18071              		.loc 1 1262 41 view .LVU6158
 18072 0702 480FAFF8 		imul	rdi, rax	# tmp362, tmp361
 18073              	.LVL1107:
 18074              	# sieve_extend.c:1261:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1261:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 18075              		.loc 1 1261 148 view .LVU6159
 18076 0706 B8000100 		mov	eax, 256	# tmp366,
 18076      00
 18077 070b 48F7B424 		div	QWORD PTR 128[rsp]	# %sfp
 18077      80000000 
 18078              	# sieve_extend.c:1261:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
GAS LISTING /tmp/ccjg94QQ.s 			page 486


1261:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 18079              		.loc 1 1261 201 view .LVU6160
 18080 0713 4883C001 		add	rax, 1	# tmp371,
 18081              	# sieve_extend.c:1262:     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_r
1262:sieve_extend.c ****     counter_t tuning_results=0;
 18082              		.loc 1 1262 41 view .LVU6161
 18083 0717 480FAFF8 		imul	rdi, rax	# tmp372, tmp371
 18084 071b 48C1E708 		sal	rdi, 8	# tmp372,
 18085 071f E8000000 		call	malloc@PLT	#
 18085      00
 18086              	.LVL1108:
1263:sieve_extend.c ****     counter_t tuning_result_index=0;
 18087              		.loc 1 1263 5 is_stmt 1 view .LVU6162
1264:sieve_extend.c ****     
 18088              		.loc 1 1264 5 view .LVU6163
1266:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 18089              		.loc 1 1266 5 view .LVU6164
 18090              	.LBB1016:
1266:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 18091              		.loc 1 1266 10 view .LVU6165
1266:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 18092              		.loc 1 1266 42 view .LVU6166
 18093              	.LBE1016:
 18094              	# sieve_extend.c:1220:     double best_avg = 0;
1220:sieve_extend.c ****     best_blocksize_bits = 0;
 18095              		.loc 1 1220 12 is_stmt 0 view .LVU6167
 18096 0724 C5F157C9 		vxorpd	xmm1, xmm1, xmm1	# best_avg
 18097              	# sieve_extend.c:1223:     counter_t best_mediumstep_faster = 0;
1223:sieve_extend.c ****     counter_t best_vectorstep_faster = 0;
 18098              		.loc 1 1223 15 view .LVU6168
 18099 0728 48C74424 		mov	QWORD PTR 72[rsp], 0	# %sfp,
 18099      48000000 
 18099      00
 18100              	# sieve_extend.c:1222:     counter_t best_smallstep_faster = 0;
1222:sieve_extend.c ****     counter_t best_mediumstep_faster = 0;
 18101              		.loc 1 1222 15 view .LVU6169
 18102 0731 48C74424 		mov	QWORD PTR 64[rsp], 0	# %sfp,
 18102      40000000 
 18102      00
 18103              	# sieve_extend.c:1221:     best_blocksize_bits = 0;
1221:sieve_extend.c ****     counter_t best_smallstep_faster = 0;
 18104              		.loc 1 1221 25 view .LVU6170
 18105 073a 48C74424 		mov	QWORD PTR 56[rsp], 0	# %sfp,
 18105      38000000 
 18105      00
 18106              	.LBB1046:
 18107              	# sieve_extend.c:1266:     for (counter_t smallstep_faster = 0; smallstep_faster <= WORD_SIZE/2; sm
1266:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 18108              		.loc 1 1266 20 view .LVU6171
 18109 0743 48C74424 		mov	QWORD PTR 32[rsp], 0	# %sfp,
 18109      20000000 
 18109      00
 18110 074c 48894424 		mov	QWORD PTR 80[rsp], rax	# %sfp, tuning_result
 18110      50
 18111              	.LBE1046:
 18112              	# sieve_extend.c:1220:     double best_avg = 0;
1220:sieve_extend.c ****     best_blocksize_bits = 0;
GAS LISTING /tmp/ccjg94QQ.s 			page 487


 18113              		.loc 1 1220 12 view .LVU6172
 18114 0751 C5FB114C 		vmovsd	QWORD PTR 40[rsp], xmm1	# %sfp, best_avg
 18114      2428
 18115              	.LVL1109:
 18116              	.L1495:
 18117              	.LBB1047:
 18118              	.LBB1017:
1267:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE;
 18119              		.loc 1 1267 62 is_stmt 1 view .LVU6173
 18120              	.LBB1018:
 18121              	.LBB1019:
 18122              	# sieve_extend.c:1269:                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_
1269:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 18123              		.loc 1 1269 32 is_stmt 0 view .LVU6174
 18124 0757 4C8B7424 		mov	r14, QWORD PTR 32[rsp]	# mediumstep_faster, %sfp
 18124      20
 18125              	.LVL1110:
 18126 075c 0F1F4000 		.p2align 4
 18127              		.p2align 3
 18128              	.L1507:
1269:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 18129              		.loc 1 1269 32 view .LVU6175
 18130              	.LBE1019:
1268:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 18131              		.loc 1 1268 67 is_stmt 1 view .LVU6176
 18132              	.LBB1042:
 18133              	# sieve_extend.c:1269:                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_
1269:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 18134              		.loc 1 1269 32 is_stmt 0 view .LVU6177
 18135 0760 4C897424 		mov	QWORD PTR 48[rsp], r14	# %sfp, mediumstep_faster
 18135      30
 18136              	.LVL1111:
 18137 0765 66662E0F 		.p2align 4
 18137      1F840000 
 18137      000000
 18138              		.p2align 3
 18139              	.L1505:
1269:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 18140              		.loc 1 1269 50 is_stmt 1 view .LVU6178
 18141              	.LBB1020:
 18142              	# sieve_extend.c:1270:                     for (counter_t free_bits=0; (free_bits < (anticiped_cach
1270:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 18143              		.loc 1 1270 36 is_stmt 0 view .LVU6179
 18144 0770 C744245C 		mov	DWORD PTR 92[rsp], 6	# %sfp,
 18144      06000000 
 18145              	.LBE1020:
 18146              	# sieve_extend.c:1269:                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_
1269:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 18147              		.loc 1 1269 32 view .LVU6180
 18148 0778 41BC0001 		mov	r12d, 256	# blocksize_kb,
 18148      0000
 18149              	.LVL1112:
 18150 077e 6690     		.p2align 4
 18151              		.p2align 3
 18152              	.L1503:
 18153              	.LBB1040:
1270:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
GAS LISTING /tmp/ccjg94QQ.s 			page 488


 18154              		.loc 1 1270 49 is_stmt 1 view .LVU6181
 18155 0780 4F8D546D 		lea	r10, 0[r13+r13*2]	# tmp399,
 18155      00
 18156              	# sieve_extend.c:1270:                     for (counter_t free_bits=0; (free_bits < (anticiped_cach
1270:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 18157              		.loc 1 1270 134 is_stmt 0 view .LVU6182
 18158 0785 4C89E3   		mov	rbx, r12	# ivtmp.728, blocksize_kb
 18159 0788 4C8B5C24 		mov	r11, QWORD PTR 80[rsp]	# tuning_result, %sfp
 18159      50
 18160              	# sieve_extend.c:1270:                     for (counter_t free_bits=0; (free_bits < (anticiped_cach
1270:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 18161              		.loc 1 1270 36 view .LVU6183
 18162 078d 31ED     		xor	ebp, ebp	# free_bits
 18163 078f 49C1E205 		sal	r10, 5	# tmp400,
 18164              	# sieve_extend.c:1270:                     for (counter_t free_bits=0; (free_bits < (anticiped_cach
1270:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 18165              		.loc 1 1270 134 view .LVU6184
 18166 0793 48C1E30D 		sal	rbx, 13	# ivtmp.728,
 18167 0797 4F8D3C13 		lea	r15, [r11+r10]	# ivtmp.727,
 18168 079b EB44     		jmp	.L1501	#
 18169              	.LVL1113:
 18170 079d 0F1F00   		.p2align 4,,7
 18171              		.p2align 3
 18172              	.L1498:
 18173              	.LBB1021:
1287:sieve_extend.c ****                             best_blocksize_bits = blocksize_bits;
 18174              		.loc 1 1287 29 is_stmt 1 view .LVU6185
1288:sieve_extend.c ****                             best_smallstep_faster = smallstep_faster;
 18175              		.loc 1 1288 29 view .LVU6186
1289:sieve_extend.c ****                             best_mediumstep_faster = mediumstep_faster;
 18176              		.loc 1 1289 29 view .LVU6187
1290:sieve_extend.c ****                             best_vectorstep_faster = vectorstep_faster;
 18177              		.loc 1 1290 29 view .LVU6188
1291:sieve_extend.c ****                             if (option_verboselevel >=2) { printf(".(>)"); tuning_result_print(tuni
 18178              		.loc 1 1291 29 view .LVU6189
1292:sieve_extend.c ****                         }
 18179              		.loc 1 1292 29 view .LVU6190
 18180              	# sieve_extend.c:1292:                             if (option_verboselevel >=2) { printf(".(>)"); t
1292:sieve_extend.c ****                         }
 18181              		.loc 1 1292 32 is_stmt 0 view .LVU6191
 18182 07a0 837C2458 		cmp	DWORD PTR 88[rsp], 1	# %sfp,
 18182      01
 18183 07a5 0F8FDD03 		jg	.L1608	#,
 18183      0000
1292:sieve_extend.c ****                         }
 18184              		.loc 1 1292 32 view .LVU6192
 18185 07ab 488B7424 		mov	rsi, QWORD PTR 32[rsp]	# smallstep_faster, %sfp
 18185      20
 18186 07b0 4C897424 		mov	QWORD PTR 72[rsp], r14	# %sfp, mediumstep_faster
 18186      48
 18187              	# sieve_extend.c:1287:                             best_avg = tuning_result[tuning_result_index].av
1287:sieve_extend.c ****                             best_blocksize_bits = blocksize_bits;
 18188              		.loc 1 1287 38 view .LVU6193
 18189 07b5 C5FB115C 		vmovsd	QWORD PTR 40[rsp], xmm3	# %sfp, _253
 18189      2428
 18190              	# sieve_extend.c:1288:                             best_blocksize_bits = blocksize_bits;
1288:sieve_extend.c ****                             best_smallstep_faster = smallstep_faster;
GAS LISTING /tmp/ccjg94QQ.s 			page 489


 18191              		.loc 1 1288 49 view .LVU6194
 18192 07bb 48895C24 		mov	QWORD PTR 56[rsp], rbx	# %sfp, ivtmp.728
 18192      38
 18193 07c0 48897424 		mov	QWORD PTR 64[rsp], rsi	# %sfp, smallstep_faster
 18193      40
 18194              	.LVL1114:
 18195              	.L1496:
1295:sieve_extend.c ****                     }
 18196              		.loc 1 1295 25 is_stmt 1 view .LVU6195
1295:sieve_extend.c ****                     }
 18197              		.loc 1 1295 25 is_stmt 0 view .LVU6196
 18198              	.LBE1021:
1270:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 18199              		.loc 1 1270 141 is_stmt 1 view .LVU6197
 18200              	# sieve_extend.c:1270:                     for (counter_t free_bits=0; (free_bits < (anticiped_cach
1270:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 18201              		.loc 1 1270 151 is_stmt 0 view .LVU6198
 18202 07c5 488B4C24 		mov	rcx, QWORD PTR 96[rsp]	# freebits_steps, %sfp
 18202      60
 18203 07ca 4983C760 		add	r15, 96	# ivtmp.727,
 18204 07ce 4801CD   		add	rbp, rcx	# free_bits, freebits_steps
 18205              	.LVL1115:
1270:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 18206              		.loc 1 1270 49 is_stmt 1 view .LVU6199
 18207 07d1 4829CB   		sub	rbx, rcx	# ivtmp.728, freebits_steps
 18208              	.LVL1116:
 18209              	# sieve_extend.c:1270:                     for (counter_t free_bits=0; (free_bits < (anticiped_cach
1270:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 18210              		.loc 1 1270 21 is_stmt 0 view .LVU6200
 18211 07d4 4881FDFF 		cmp	rbp, 4095	# free_bits,
 18211      0F0000
 18212 07db 0F87E700 		ja	.L1497	#,
 18212      0000
 18213              	.LVL1117:
 18214              	.L1501:
 18215              	.LBB1038:
1271:sieve_extend.c **** 
 18216              		.loc 1 1271 25 is_stmt 1 view .LVU6201
1274:sieve_extend.c ****                         tuning_result[tuning_result_index].maxints = maxints;
 18217              		.loc 1 1274 25 view .LVU6202
 18218              	# sieve_extend.c:1281:                         tuning_result[tuning_result_index].smallstep_faster 
1281:sieve_extend.c ****                         tuning_result[tuning_result_index].mediumstep_faster = mediumstep_faster;
 18219              		.loc 1 1281 77 is_stmt 0 view .LVU6203
 18220 07e1 488B7C24 		mov	rdi, QWORD PTR 32[rsp]	# smallstep_faster, %sfp
 18220      20
 18221 07e6 4C89EE   		mov	rsi, r13	# tuning_results, tuning_results
 18222              	# sieve_extend.c:1275:                         tuning_result[tuning_result_index].maxints = maxints
1275:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_duration = sample_duration;
 18223              		.loc 1 1275 68 view .LVU6204
 18224 07e9 488B4C24 		mov	rcx, QWORD PTR 120[rsp]	# option_maxFactor.42_64, %sfp
 18224      78
 18225              	# sieve_extend.c:1274:                         tuning_results++;
1274:sieve_extend.c ****                         tuning_result[tuning_result_index].maxints = maxints;
 18226              		.loc 1 1274 39 view .LVU6205
 18227 07ee 4983C501 		add	r13, 1	# tuning_results,
 18228              	.LVL1118:
1275:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_duration = sample_duration;
GAS LISTING /tmp/ccjg94QQ.s 			page 490


 18229              		.loc 1 1275 25 is_stmt 1 view .LVU6206
 18230              	# sieve_extend.c:1277:                         tuning_result[tuning_result_index].sample_max = samp
1277:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_kb = blocksize_kb;
 18231              		.loc 1 1277 71 is_stmt 0 view .LVU6207
 18232 07f2 4C8B4C24 		mov	r9, QWORD PTR 104[rsp]	# sample_max, %sfp
 18232      68
 18233              	# sieve_extend.c:1283:                         tuning_result[tuning_result_index].vectorstep_faster
1283:sieve_extend.c ****                         tune_benchmark(tuning_result, tuning_result_index);
 18234              		.loc 1 1283 78 view .LVU6208
 18235 07f7 488B4424 		mov	rax, QWORD PTR 48[rsp]	# vectorstep_faster, %sfp
 18235      30
 18236              	# sieve_extend.c:1281:                         tuning_result[tuning_result_index].smallstep_faster 
1281:sieve_extend.c ****                         tuning_result[tuning_result_index].mediumstep_faster = mediumstep_faster;
 18237              		.loc 1 1281 77 view .LVU6209
 18238 07fc 49897F20 		mov	QWORD PTR 32[r15], rdi	# MEM[base: _500, offset: 32B], smallstep_faster
 18239              	# sieve_extend.c:1284:                         tune_benchmark(tuning_result, tuning_result_index);
1284:sieve_extend.c **** 
 18240              		.loc 1 1284 25 view .LVU6210
 18241 0800 488B7C24 		mov	rdi, QWORD PTR 80[rsp]	#, %sfp
 18241      50
 18242              	# sieve_extend.c:1276:                         tuning_result[tuning_result_index].sample_duration =
1276:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_max = sample_max;
 18243              		.loc 1 1276 76 view .LVU6211
 18244 0805 C5FB1064 		vmovsd	xmm4, QWORD PTR 112[rsp]	# sample_duration, %sfp
 18244      2470
 18245              	# sieve_extend.c:1275:                         tuning_result[tuning_result_index].maxints = maxints
1275:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_duration = sample_duration;
 18246              		.loc 1 1275 68 view .LVU6212
 18247 080b 49890F   		mov	QWORD PTR [r15], rcx	# MEM[base: _500, offset: 0B], option_maxFactor.42_64
1276:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_max = sample_max;
 18248              		.loc 1 1276 25 is_stmt 1 view .LVU6213
 18249              	# sieve_extend.c:1277:                         tuning_result[tuning_result_index].sample_max = samp
1277:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_kb = blocksize_kb;
 18250              		.loc 1 1277 71 is_stmt 0 view .LVU6214
 18251 080e 4D894F38 		mov	QWORD PTR 56[r15], r9	# MEM[base: _500, offset: 56B], sample_max
 18252              	# sieve_extend.c:1278:                         tuning_result[tuning_result_index].blocksize_kb = bl
1278:sieve_extend.c ****                         tuning_result[tuning_result_index].free_bits = free_bits;
 18253              		.loc 1 1278 73 view .LVU6215
 18254 0812 4D896710 		mov	QWORD PTR 16[r15], r12	# MEM[base: _500, offset: 16B], blocksize_kb
 18255              	# sieve_extend.c:1279:                         tuning_result[tuning_result_index].free_bits = free_
1279:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_bits = blocksize_bits;
 18256              		.loc 1 1279 70 view .LVU6216
 18257 0816 49896F18 		mov	QWORD PTR 24[r15], rbp	# MEM[base: _500, offset: 24B], free_bits
 18258              	# sieve_extend.c:1280:                         tuning_result[tuning_result_index].blocksize_bits = 
1280:sieve_extend.c ****                         tuning_result[tuning_result_index].smallstep_faster = smallstep_faster;
 18259              		.loc 1 1280 75 view .LVU6217
 18260 081a 49895F08 		mov	QWORD PTR 8[r15], rbx	# MEM[base: _500, offset: 8B], ivtmp.728
 18261              	# sieve_extend.c:1282:                         tuning_result[tuning_result_index].mediumstep_faster
1282:sieve_extend.c ****                         tuning_result[tuning_result_index].vectorstep_faster = vectorstep_faster;
 18262              		.loc 1 1282 78 view .LVU6218
 18263 081e 4D897728 		mov	QWORD PTR 40[r15], r14	# MEM[base: _500, offset: 40B], mediumstep_faster
 18264              	# sieve_extend.c:1283:                         tuning_result[tuning_result_index].vectorstep_faster
1283:sieve_extend.c ****                         tune_benchmark(tuning_result, tuning_result_index);
 18265              		.loc 1 1283 78 view .LVU6219
 18266 0822 49894730 		mov	QWORD PTR 48[r15], rax	# MEM[base: _500, offset: 48B], vectorstep_faster
 18267              	# sieve_extend.c:1276:                         tuning_result[tuning_result_index].sample_duration =
1276:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_max = sample_max;
GAS LISTING /tmp/ccjg94QQ.s 			page 491


 18268              		.loc 1 1276 76 view .LVU6220
 18269 0826 C4C17B11 		vmovsd	QWORD PTR 64[r15], xmm4	# MEM[base: _500, offset: 64B], sample_duration
 18269      6740
1277:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_kb = blocksize_kb;
 18270              		.loc 1 1277 25 is_stmt 1 view .LVU6221
1278:sieve_extend.c ****                         tuning_result[tuning_result_index].free_bits = free_bits;
 18271              		.loc 1 1278 25 view .LVU6222
1279:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_bits = blocksize_bits;
 18272              		.loc 1 1279 25 view .LVU6223
1280:sieve_extend.c ****                         tuning_result[tuning_result_index].smallstep_faster = smallstep_faster;
 18273              		.loc 1 1280 25 view .LVU6224
1281:sieve_extend.c ****                         tuning_result[tuning_result_index].mediumstep_faster = mediumstep_faster;
 18274              		.loc 1 1281 25 view .LVU6225
1282:sieve_extend.c ****                         tuning_result[tuning_result_index].vectorstep_faster = vectorstep_faster;
 18275              		.loc 1 1282 25 view .LVU6226
1283:sieve_extend.c ****                         tune_benchmark(tuning_result, tuning_result_index);
 18276              		.loc 1 1283 25 view .LVU6227
1284:sieve_extend.c **** 
 18277              		.loc 1 1284 25 view .LVU6228
 18278 082c E8000000 		call	tune_benchmark	#
 18278      00
 18279              	.LVL1119:
1286:sieve_extend.c ****                             best_avg = tuning_result[tuning_result_index].avg;
 18280              		.loc 1 1286 25 view .LVU6229
 18281              	# sieve_extend.c:1286:                         if ( tuning_result[tuning_result_index].avg > best_a
1286:sieve_extend.c ****                             best_avg = tuning_result[tuning_result_index].avg;
 18282              		.loc 1 1286 64 is_stmt 0 view .LVU6230
 18283 0831 C4C17B10 		vmovsd	xmm3, QWORD PTR 88[r15]	# _253, MEM[base: _500, offset: 88B]
 18283      5F58
 18284              	# sieve_extend.c:1286:                         if ( tuning_result[tuning_result_index].avg > best_a
1286:sieve_extend.c ****                             best_avg = tuning_result[tuning_result_index].avg;
 18285              		.loc 1 1286 28 view .LVU6231
 18286 0837 C5F92F5C 		vcomisd	xmm3, QWORD PTR 40[rsp]	# _253, %sfp
 18286      2428
 18287 083d 0F875DFF 		ja	.L1498	#,
 18287      FFFF
 18288              	.L1499:
1294:sieve_extend.c ****                         tuning_result_index++;
 18289              		.loc 1 1294 25 is_stmt 1 view .LVU6232
 18290              	# sieve_extend.c:1294:                         if (option_verboselevel >= 3) { printf("...."); tuni
1294:sieve_extend.c ****                         tuning_result_index++;
 18291              		.loc 1 1294 28 is_stmt 0 view .LVU6233
 18292 0843 837C2458 		cmp	DWORD PTR 88[rsp], 2	# %sfp,
 18292      02
 18293 0848 0F8E77FF 		jle	.L1496	#,
 18293      FFFF
1294:sieve_extend.c ****                         tuning_result_index++;
 18294              		.loc 1 1294 57 is_stmt 1 view .LVU6234
 18295              	.LVL1120:
 18296              	.LBB1022:
 18297              	.LBI1022:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18298              		.loc 3 105 1 view .LVU6235
 18299              	.LBB1023:
 18300              		.loc 3 107 3 view .LVU6236
 18301              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18302              		.loc 3 107 10 is_stmt 0 view .LVU6237
GAS LISTING /tmp/ccjg94QQ.s 			page 492


 18303 084e 488D3500 		lea	rsi, .LC52[rip]	#,
 18303      000000
 18304 0855 BF010000 		mov	edi, 1	#,
 18304      00
 18305 085a 31C0     		xor	eax, eax	#
 18306 085c E8000000 		call	__printf_chk@PLT	#
 18306      00
 18307              	.LVL1121:
 18308              		.loc 3 107 10 view .LVU6238
 18309              	.LBE1023:
 18310              	.LBE1022:
1294:sieve_extend.c ****                         tuning_result_index++;
 18311              		.loc 1 1294 73 is_stmt 1 view .LVU6239
 18312              	.LBB1024:
 18313              	.LBI1024:
1209:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
 18314              		.loc 1 1209 20 view .LVU6240
 18315              	.LBB1025:
1210:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
 18316              		.loc 1 1210 5 view .LVU6241
 18317              	.LBB1026:
 18318              	.LBI1026:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18319              		.loc 3 105 1 view .LVU6242
 18320              	.LBB1027:
 18321              		.loc 3 107 3 view .LVU6243
 18322              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18323              		.loc 3 107 10 is_stmt 0 view .LVU6244
 18324 0861 498B7F38 		mov	rdi, QWORD PTR 56[r15]	# MEM[base: _500, offset: 56B], MEM[base: _500, offset: 56B]
 18325 0865 C4C17B10 		vmovsd	xmm0, QWORD PTR 80[r15]	# MEM[base: _500, offset: 80B], MEM[base: _500, offset: 80B]
 18325      4750
 18326 086b 498B4F10 		mov	rcx, QWORD PTR 16[r15]	# MEM[base: _500, offset: 16B], MEM[base: _500, offset: 16B]
 18327 086f 498B5708 		mov	rdx, QWORD PTR 8[r15]	# MEM[base: _500, offset: 8B], MEM[base: _500, offset: 8B]
 18328 0873 48897C24 		mov	QWORD PTR 24[rsp], rdi	#, MEM[base: _500, offset: 56B]
 18328      18
 18329 0878 BF010000 		mov	edi, 1	#,
 18329      00
 18330 087d 498B4748 		mov	rax, QWORD PTR 72[r15]	# MEM[base: _500, offset: 72B], MEM[base: _500, offset: 72B]
 18331 0881 48894424 		mov	QWORD PTR 16[rsp], rax	#, MEM[base: _500, offset: 72B]
 18331      10
 18332 0886 B8030000 		mov	eax, 3	#,
 18332      00
 18333 088b 498B7730 		mov	rsi, QWORD PTR 48[r15]	# MEM[base: _500, offset: 48B], MEM[base: _500, offset: 48B]
 18334 088f 48897424 		mov	QWORD PTR 8[rsp], rsi	#, MEM[base: _500, offset: 48B]
 18334      08
 18335 0894 488D3500 		lea	rsi, .LC51[rip]	#,
 18335      000000
 18336 089b 4D8B4728 		mov	r8, QWORD PTR 40[r15]	# MEM[base: _500, offset: 40B], MEM[base: _500, offset: 40B]
 18337 089f 4C890424 		mov	QWORD PTR [rsp], r8	#, MEM[base: _500, offset: 40B]
 18338 08a3 4D8B4F20 		mov	r9, QWORD PTR 32[r15]	#, MEM[base: _500, offset: 32B]
 18339 08a7 4D8B4718 		mov	r8, QWORD PTR 24[r15]	#, MEM[base: _500, offset: 24B]
 18340 08ab C4C17B10 		vmovsd	xmm2, QWORD PTR 88[r15]	#, MEM[base: _500, offset: 88B]
 18340      5758
 18341 08b1 C4C17B10 		vmovsd	xmm1, QWORD PTR 64[r15]	#, MEM[base: _500, offset: 64B]
 18341      4F40
 18342 08b7 E8000000 		call	__printf_chk@PLT	#
 18342      00
GAS LISTING /tmp/ccjg94QQ.s 			page 493


 18343              	.LVL1122:
 18344              		.loc 3 107 10 view .LVU6245
 18345              	.LBE1027:
 18346              	.LBE1026:
 18347              	# sieve_extend.c:1215: }
1215:sieve_extend.c **** 
 18348              		.loc 1 1215 1 view .LVU6246
 18349 08bc E904FFFF 		jmp	.L1496	#
 18349      FF
 18350              	.LVL1123:
 18351              		.p2align 4,,7
 18352 08c1 0F1F8000 		.p2align 3
 18352      000000
 18353              	.L1497:
1215:sieve_extend.c **** 
 18354              		.loc 1 1215 1 view .LVU6247
 18355              	.LBE1025:
 18356              	.LBE1024:
 18357              	.LBE1038:
 18358              	.LBE1040:
1269:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 18359              		.loc 1 1269 67 is_stmt 1 view .LVU6248
 18360              	# sieve_extend.c:1269:                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_
1269:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 18361              		.loc 1 1269 80 is_stmt 0 view .LVU6249
 18362 08c8 49D1EC   		shr	r12	# blocksize_kb
 18363              	.LVL1124:
1269:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 18364              		.loc 1 1269 50 is_stmt 1 view .LVU6250
 18365              	# sieve_extend.c:1269:                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_
1269:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 18366              		.loc 1 1269 17 is_stmt 0 view .LVU6251
 18367 08cb 836C245C 		sub	DWORD PTR 92[rsp], 1	# %sfp,
 18367      01
 18368 08d0 0F85AAFE 		jne	.L1503	#,
 18368      FFFF
 18369              	.LBE1042:
1268:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 18370              		.loc 1 1268 101 is_stmt 1 view .LVU6252
 18371              	# sieve_extend.c:1268:             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep
1268:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 18372              		.loc 1 1268 119 is_stmt 0 view .LVU6253
 18373 08d6 4C8BA424 		mov	r12, QWORD PTR 128[rsp]	# vectorstep_faster_steps, %sfp
 18373      80000000 
 18374              	.LVL1125:
1268:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 18375              		.loc 1 1268 119 view .LVU6254
 18376 08de 4C016424 		add	QWORD PTR 48[rsp], r12	# %sfp, vectorstep_faster_steps
 18376      30
 18377              	.LVL1126:
1268:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 18378              		.loc 1 1268 119 view .LVU6255
 18379 08e3 488B5C24 		mov	rbx, QWORD PTR 48[rsp]	# vectorstep_faster, %sfp
 18379      30
 18380              	.LVL1127:
1268:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 18381              		.loc 1 1268 67 is_stmt 1 view .LVU6256
GAS LISTING /tmp/ccjg94QQ.s 			page 494


 18382              	# sieve_extend.c:1268:             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep
1268:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 18383              		.loc 1 1268 13 is_stmt 0 view .LVU6257
 18384 08e8 4881FB00 		cmp	rbx, 256	# vectorstep_faster,
 18384      010000
 18385 08ef 0F867BFE 		jbe	.L1505	#,
 18385      FFFF
 18386              	.LBE1018:
1267:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE;
 18387              		.loc 1 1267 94 is_stmt 1 view .LVU6258
 18388              	# sieve_extend.c:1267:         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_fast
1267:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE;
 18389              		.loc 1 1267 112 is_stmt 0 view .LVU6259
 18390 08f5 4C03B424 		add	r14, QWORD PTR 136[rsp]	# mediumstep_faster, %sfp
 18390      88000000 
 18391              	.LVL1128:
1267:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE;
 18392              		.loc 1 1267 62 is_stmt 1 view .LVU6260
 18393              	# sieve_extend.c:1267:         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_fast
1267:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE;
 18394              		.loc 1 1267 9 is_stmt 0 view .LVU6261
 18395 08fd 4983FE40 		cmp	r14, 64	# mediumstep_faster,
 18396 0901 0F8659FE 		jbe	.L1507	#,
 18396      FFFF
 18397              	.LBE1017:
1266:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 18398              		.loc 1 1266 75 is_stmt 1 view .LVU6262
 18399              	# sieve_extend.c:1266:     for (counter_t smallstep_faster = 0; smallstep_faster <= WORD_SIZE/2; sm
1266:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 18400              		.loc 1 1266 92 is_stmt 0 view .LVU6263
 18401 0907 4C8BB424 		mov	r14, QWORD PTR 136[rsp]	# smallstep_faster_steps, %sfp
 18401      88000000 
 18402              	.LVL1129:
1266:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 18403              		.loc 1 1266 92 view .LVU6264
 18404 090f 4C017424 		add	QWORD PTR 32[rsp], r14	# %sfp, smallstep_faster_steps
 18404      20
 18405              	.LVL1130:
1266:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 18406              		.loc 1 1266 92 view .LVU6265
 18407 0914 4C8B7C24 		mov	r15, QWORD PTR 32[rsp]	# smallstep_faster, %sfp
 18407      20
 18408              	.LVL1131:
1266:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 18409              		.loc 1 1266 42 is_stmt 1 view .LVU6266
 18410              	# sieve_extend.c:1266:     for (counter_t smallstep_faster = 0; smallstep_faster <= WORD_SIZE/2; sm
1266:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 18411              		.loc 1 1266 5 is_stmt 0 view .LVU6267
 18412 0919 4983FF20 		cmp	r15, 32	# smallstep_faster,
 18413 091d 0F8634FE 		jbe	.L1495	#,
 18413      FFFF
 18414 0923 4C8B7C24 		mov	r15, QWORD PTR 80[rsp]	# tuning_result, %sfp
 18414      50
 18415              	.LVL1132:
1266:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 18416              		.loc 1 1266 5 view .LVU6268
 18417              	.LBE1047:
GAS LISTING /tmp/ccjg94QQ.s 			page 495


1301:sieve_extend.c ****         printf("%ju results. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju\n"
 18418              		.loc 1 1301 5 is_stmt 1 view .LVU6269
 18419              	# sieve_extend.c:1301:     if (option_verboselevel >= 2) {
1301:sieve_extend.c ****         printf("%ju results. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju\n"
 18420              		.loc 1 1301 8 is_stmt 0 view .LVU6270
 18421 0928 837C2458 		cmp	DWORD PTR 88[rsp], 1	# %sfp,
 18421      01
 18422 092d 7E31     		jle	.L1508	#,
1302:sieve_extend.c ****         printf("Best options\n");
 18423              		.loc 1 1302 9 is_stmt 1 view .LVU6271
 18424              	.LVL1133:
 18425              	.LBB1048:
 18426              	.LBI1048:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18427              		.loc 3 105 1 view .LVU6272
 18428              	.LBB1049:
 18429              		.loc 3 107 3 view .LVU6273
 18430              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18431              		.loc 3 107 10 is_stmt 0 view .LVU6274
 18432 092f 4C8B4C24 		mov	r9, QWORD PTR 72[rsp]	#, %sfp
 18432      48
 18433 0934 BF010000 		mov	edi, 1	#,
 18433      00
 18434 0939 4C8B4424 		mov	r8, QWORD PTR 64[rsp]	#, %sfp
 18434      40
 18435 093e 4C89EA   		mov	rdx, r13	#, tuning_results
 18436 0941 488B4C24 		mov	rcx, QWORD PTR 56[rsp]	#, %sfp
 18436      38
 18437 0946 488D3500 		lea	rsi, .LC53[rip]	#,
 18437      000000
 18438 094d 31C0     		xor	eax, eax	#
 18439 094f E8000000 		call	__printf_chk@PLT	#
 18439      00
 18440              	.LVL1134:
 18441              		.loc 3 107 10 view .LVU6275
 18442              	.LBE1049:
 18443              	.LBE1048:
1303:sieve_extend.c ****     }
 18444              		.loc 1 1303 9 is_stmt 1 view .LVU6276
 18445              	.LBB1050:
 18446              	.LBI1050:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18447              		.loc 3 105 1 view .LVU6277
 18448              	.LBB1051:
 18449              		.loc 3 107 3 view .LVU6278
 18450              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18451              		.loc 3 107 10 is_stmt 0 view .LVU6279
 18452 0954 488D3D00 		lea	rdi, .LC54[rip]	#,
 18452      000000
 18453 095b E8000000 		call	puts@PLT	#
 18453      00
 18454              	.LVL1135:
 18455              	.L1508:
 18456              		.loc 3 107 10 view .LVU6280
 18457              	.LBE1051:
 18458              	.LBE1050:
 18459              	.LBB1052:
GAS LISTING /tmp/ccjg94QQ.s 			page 496


 18460              	# sieve_extend.c:1313:                 for (counter_t tuning_result_index=0; tuning_result_index<mi
1313:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 18461              		.loc 1 1313 75 view .LVU6281
 18462 0960 4C8B7424 		mov	r14, QWORD PTR 104[rsp]	# sample_max, %sfp
 18462      68
 18463              	.LBE1052:
 18464              	.LBB1061:
 18465              	# sieve_extend.c:1321:         for (counter_t i=0; i<tuning_results; i++) {
1321:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18466              		.loc 1 1321 24 view .LVU6282
 18467 0965 4531E4   		xor	r12d, r12d	# step
 18468              	.LVL1136:
 18469              	.L1513:
1321:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18470              		.loc 1 1321 24 view .LVU6283
 18471              	.LBE1061:
1306:sieve_extend.c ****         qsort(tuning_result, (size_t)tuning_results, sizeof(tuning_result_type), compare_tuning_res
 18472              		.loc 1 1306 11 is_stmt 1 view .LVU6284
 18473 0968 4983FD04 		cmp	r13, 4	# tuning_results,
 18474 096c 0F861404 		jbe	.L1609	#,
 18474      0000
1307:sieve_extend.c ****         step++;
 18475              		.loc 1 1307 9 view .LVU6285
 18476 0972 488D0D00 		lea	rcx, compare_tuning_result[rip]	#,
 18476      000000
 18477 0979 BA600000 		mov	edx, 96	#,
 18477      00
 18478 097e 4C89EE   		mov	rsi, r13	#, tuning_results
 18479 0981 4C89FF   		mov	rdi, r15	#, tuning_result
 18480 0984 E8000000 		call	qsort@PLT	#
 18480      00
 18481              	.LVL1137:
1308:sieve_extend.c ****         if (option_verboselevel >= 2) {
 18482              		.loc 1 1308 9 view .LVU6286
 18483              	# sieve_extend.c:1308:         step++;
1308:sieve_extend.c ****         if (option_verboselevel >= 2) {
 18484              		.loc 1 1308 13 is_stmt 0 view .LVU6287
 18485 0989 4983C401 		add	r12, 1	# step,
 18486              	.LVL1138:
1309:sieve_extend.c ****             tuning_result_index = 0;
 18487              		.loc 1 1309 9 is_stmt 1 view .LVU6288
 18488              	# sieve_extend.c:1309:         if (option_verboselevel >= 2) {
1309:sieve_extend.c ****             tuning_result_index = 0;
 18489              		.loc 1 1309 12 is_stmt 0 view .LVU6289
 18490 098d 837C2458 		cmp	DWORD PTR 88[rsp], 1	# %sfp,
 18490      01
 18491 0992 0F8F7D02 		jg	.L1509	#,
 18491      0000
 18492              	.L1511:
1319:sieve_extend.c **** 
 18493              		.loc 1 1319 9 is_stmt 1 view .LVU6290
 18494              	# sieve_extend.c:1319:         tuning_results = tuning_results / 2;
1319:sieve_extend.c **** 
 18495              		.loc 1 1319 24 is_stmt 0 view .LVU6291
 18496 0998 49D1ED   		shr	r13	# tuning_results
 18497              	.LVL1139:
1321:sieve_extend.c ****             tune_benchmark(tuning_result, i);
GAS LISTING /tmp/ccjg94QQ.s 			page 497


 18498              		.loc 1 1321 9 is_stmt 1 view .LVU6292
 18499              	.LBB1062:
1321:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18500              		.loc 1 1321 14 view .LVU6293
1321:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18501              		.loc 1 1321 29 view .LVU6294
 18502              	# sieve_extend.c:1321:         for (counter_t i=0; i<tuning_results; i++) {
1321:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18503              		.loc 1 1321 24 is_stmt 0 view .LVU6295
 18504 099b 31ED     		xor	ebp, ebp	# i
 18505 099d 4D89E8   		mov	r8, r13	# tmp487, tuning_results
 18506 09a0 498D5F38 		lea	rbx, 56[r15]	# ivtmp.709,
 18507 09a4 4183E007 		and	r8d, 7	# tmp487,
 18508 09a8 0F84D200 		je	.L1510	#,
 18508      0000
 18509 09ae 4983F801 		cmp	r8, 1	# tmp487,
 18510 09b2 0F84A900 		je	.L1568	#,
 18510      0000
 18511 09b8 4983F802 		cmp	r8, 2	# tmp487,
 18512 09bc 0F848900 		je	.L1569	#,
 18512      0000
 18513 09c2 4983F803 		cmp	r8, 3	# tmp487,
 18514 09c6 746D     		je	.L1570	#,
 18515 09c8 4983F804 		cmp	r8, 4	# tmp487,
 18516 09cc 7451     		je	.L1571	#,
 18517 09ce 4983F805 		cmp	r8, 5	# tmp487,
 18518 09d2 7435     		je	.L1572	#,
 18519 09d4 4983F806 		cmp	r8, 6	# tmp487,
 18520 09d8 7419     		je	.L1573	#,
1322:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18521              		.loc 1 1322 13 is_stmt 1 view .LVU6296
 18522 09da 31F6     		xor	esi, esi	#
 18523 09dc 4C89FF   		mov	rdi, r15	#, tuning_result
 18524 09df E8000000 		call	tune_benchmark	#
 18524      00
 18525              	.LVL1140:
1323:sieve_extend.c ****         }
 18526              		.loc 1 1323 13 view .LVU6297
 18527              	# sieve_extend.c:1321:         for (counter_t i=0; i<tuning_results; i++) {
1321:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18528              		.loc 1 1321 48 is_stmt 0 view .LVU6298
 18529 09e4 BD010000 		mov	ebp, 1	# i,
 18529      00
 18530              	# sieve_extend.c:1323:             tuning_result[i].sample_max += sample_max;
1323:sieve_extend.c ****         }
 18531              		.loc 1 1323 41 view .LVU6299
 18532 09e9 4C0133   		add	QWORD PTR [rbx], r14	# MEM[base: _116, offset: 0B], sample_max
1321:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18533              		.loc 1 1321 47 is_stmt 1 view .LVU6300
 18534              	.LVL1141:
1321:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18535              		.loc 1 1321 29 view .LVU6301
 18536 09ec 498D9F98 		lea	rbx, 152[r15]	# ivtmp.709,
 18536      000000
 18537              	.L1573:
1322:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18538              		.loc 1 1322 13 view .LVU6302
GAS LISTING /tmp/ccjg94QQ.s 			page 498


 18539 09f3 4889EE   		mov	rsi, rbp	#, i
 18540 09f6 4C89FF   		mov	rdi, r15	#, tuning_result
 18541 09f9 E8000000 		call	tune_benchmark	#
 18541      00
 18542              	.LVL1142:
1323:sieve_extend.c ****         }
 18543              		.loc 1 1323 13 view .LVU6303
 18544              	# sieve_extend.c:1321:         for (counter_t i=0; i<tuning_results; i++) {
1321:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18545              		.loc 1 1321 48 is_stmt 0 view .LVU6304
 18546 09fe 4883C501 		add	rbp, 1	# i,
 18547              	# sieve_extend.c:1323:             tuning_result[i].sample_max += sample_max;
1323:sieve_extend.c ****         }
 18548              		.loc 1 1323 41 view .LVU6305
 18549 0a02 4C0133   		add	QWORD PTR [rbx], r14	# MEM[base: _116, offset: 0B], sample_max
1321:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18550              		.loc 1 1321 47 is_stmt 1 view .LVU6306
1321:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18551              		.loc 1 1321 29 view .LVU6307
 18552 0a05 4883C360 		add	rbx, 96	# ivtmp.709,
 18553              	.L1572:
1322:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18554              		.loc 1 1322 13 view .LVU6308
 18555 0a09 4889EE   		mov	rsi, rbp	#, i
 18556 0a0c 4C89FF   		mov	rdi, r15	#, tuning_result
 18557 0a0f E8000000 		call	tune_benchmark	#
 18557      00
 18558              	.LVL1143:
1323:sieve_extend.c ****         }
 18559              		.loc 1 1323 13 view .LVU6309
 18560              	# sieve_extend.c:1321:         for (counter_t i=0; i<tuning_results; i++) {
1321:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18561              		.loc 1 1321 48 is_stmt 0 view .LVU6310
 18562 0a14 4883C501 		add	rbp, 1	# i,
 18563              	# sieve_extend.c:1323:             tuning_result[i].sample_max += sample_max;
1323:sieve_extend.c ****         }
 18564              		.loc 1 1323 41 view .LVU6311
 18565 0a18 4C0133   		add	QWORD PTR [rbx], r14	# MEM[base: _116, offset: 0B], sample_max
1321:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18566              		.loc 1 1321 47 is_stmt 1 view .LVU6312
1321:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18567              		.loc 1 1321 29 view .LVU6313
 18568 0a1b 4883C360 		add	rbx, 96	# ivtmp.709,
 18569              	.L1571:
1322:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18570              		.loc 1 1322 13 view .LVU6314
 18571 0a1f 4889EE   		mov	rsi, rbp	#, i
 18572 0a22 4C89FF   		mov	rdi, r15	#, tuning_result
 18573 0a25 E8000000 		call	tune_benchmark	#
 18573      00
 18574              	.LVL1144:
1323:sieve_extend.c ****         }
 18575              		.loc 1 1323 13 view .LVU6315
 18576              	# sieve_extend.c:1321:         for (counter_t i=0; i<tuning_results; i++) {
1321:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18577              		.loc 1 1321 48 is_stmt 0 view .LVU6316
 18578 0a2a 4883C501 		add	rbp, 1	# i,
GAS LISTING /tmp/ccjg94QQ.s 			page 499


 18579              	# sieve_extend.c:1323:             tuning_result[i].sample_max += sample_max;
1323:sieve_extend.c ****         }
 18580              		.loc 1 1323 41 view .LVU6317
 18581 0a2e 4C0133   		add	QWORD PTR [rbx], r14	# MEM[base: _116, offset: 0B], sample_max
1321:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18582              		.loc 1 1321 47 is_stmt 1 view .LVU6318
1321:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18583              		.loc 1 1321 29 view .LVU6319
 18584 0a31 4883C360 		add	rbx, 96	# ivtmp.709,
 18585              	.L1570:
1322:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18586              		.loc 1 1322 13 view .LVU6320
 18587 0a35 4889EE   		mov	rsi, rbp	#, i
 18588 0a38 4C89FF   		mov	rdi, r15	#, tuning_result
 18589 0a3b E8000000 		call	tune_benchmark	#
 18589      00
 18590              	.LVL1145:
1323:sieve_extend.c ****         }
 18591              		.loc 1 1323 13 view .LVU6321
 18592              	# sieve_extend.c:1321:         for (counter_t i=0; i<tuning_results; i++) {
1321:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18593              		.loc 1 1321 48 is_stmt 0 view .LVU6322
 18594 0a40 4883C501 		add	rbp, 1	# i,
 18595              	# sieve_extend.c:1323:             tuning_result[i].sample_max += sample_max;
1323:sieve_extend.c ****         }
 18596              		.loc 1 1323 41 view .LVU6323
 18597 0a44 4C0133   		add	QWORD PTR [rbx], r14	# MEM[base: _116, offset: 0B], sample_max
1321:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18598              		.loc 1 1321 47 is_stmt 1 view .LVU6324
1321:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18599              		.loc 1 1321 29 view .LVU6325
 18600 0a47 4883C360 		add	rbx, 96	# ivtmp.709,
 18601              	.L1569:
1322:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18602              		.loc 1 1322 13 view .LVU6326
 18603 0a4b 4889EE   		mov	rsi, rbp	#, i
 18604 0a4e 4C89FF   		mov	rdi, r15	#, tuning_result
 18605 0a51 E8000000 		call	tune_benchmark	#
 18605      00
 18606              	.LVL1146:
1323:sieve_extend.c ****         }
 18607              		.loc 1 1323 13 view .LVU6327
 18608              	# sieve_extend.c:1321:         for (counter_t i=0; i<tuning_results; i++) {
1321:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18609              		.loc 1 1321 48 is_stmt 0 view .LVU6328
 18610 0a56 4883C501 		add	rbp, 1	# i,
 18611              	# sieve_extend.c:1323:             tuning_result[i].sample_max += sample_max;
1323:sieve_extend.c ****         }
 18612              		.loc 1 1323 41 view .LVU6329
 18613 0a5a 4C0133   		add	QWORD PTR [rbx], r14	# MEM[base: _116, offset: 0B], sample_max
1321:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18614              		.loc 1 1321 47 is_stmt 1 view .LVU6330
1321:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18615              		.loc 1 1321 29 view .LVU6331
 18616 0a5d 4883C360 		add	rbx, 96	# ivtmp.709,
 18617              	.L1568:
1322:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
GAS LISTING /tmp/ccjg94QQ.s 			page 500


 18618              		.loc 1 1322 13 view .LVU6332
 18619 0a61 4889EE   		mov	rsi, rbp	#, i
 18620 0a64 4C89FF   		mov	rdi, r15	#, tuning_result
 18621              	# sieve_extend.c:1321:         for (counter_t i=0; i<tuning_results; i++) {
1321:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18622              		.loc 1 1321 48 is_stmt 0 view .LVU6333
 18623 0a67 4883C501 		add	rbp, 1	# i,
 18624              	# sieve_extend.c:1322:             tune_benchmark(tuning_result, i);
1322:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18625              		.loc 1 1322 13 view .LVU6334
 18626 0a6b E8000000 		call	tune_benchmark	#
 18626      00
 18627              	.LVL1147:
1323:sieve_extend.c ****         }
 18628              		.loc 1 1323 13 is_stmt 1 view .LVU6335
 18629              	# sieve_extend.c:1323:             tuning_result[i].sample_max += sample_max;
1323:sieve_extend.c ****         }
 18630              		.loc 1 1323 41 is_stmt 0 view .LVU6336
 18631 0a70 4C0133   		add	QWORD PTR [rbx], r14	# MEM[base: _116, offset: 0B], sample_max
1321:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18632              		.loc 1 1321 47 is_stmt 1 view .LVU6337
1321:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18633              		.loc 1 1321 29 view .LVU6338
 18634 0a73 4883C360 		add	rbx, 96	# ivtmp.709,
 18635              	# sieve_extend.c:1321:         for (counter_t i=0; i<tuning_results; i++) {
1321:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18636              		.loc 1 1321 9 is_stmt 0 view .LVU6339
 18637 0a77 4939ED   		cmp	r13, rbp	# tuning_results, i
 18638 0a7a 0F84E8FE 		je	.L1513	#,
 18638      FFFF
 18639              	.L1510:
1322:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18640              		.loc 1 1322 13 is_stmt 1 view .LVU6340
 18641 0a80 4889EE   		mov	rsi, rbp	#, i
 18642 0a83 4C89FF   		mov	rdi, r15	#, tuning_result
 18643 0a86 E8000000 		call	tune_benchmark	#
 18643      00
 18644              	.LVL1148:
1323:sieve_extend.c ****         }
 18645              		.loc 1 1323 13 view .LVU6341
 18646 0a8b 4C8D5360 		lea	r10, 96[rbx]	# tmp489,
 18647              	# sieve_extend.c:1323:             tuning_result[i].sample_max += sample_max;
1323:sieve_extend.c ****         }
 18648              		.loc 1 1323 41 is_stmt 0 view .LVU6342
 18649 0a8f 4C0133   		add	QWORD PTR [rbx], r14	# MEM[base: _116, offset: 0B], sample_max
1321:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18650              		.loc 1 1321 47 is_stmt 1 view .LVU6343
 18651              	# sieve_extend.c:1321:         for (counter_t i=0; i<tuning_results; i++) {
1321:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18652              		.loc 1 1321 48 is_stmt 0 view .LVU6344
 18653 0a92 488D7501 		lea	rsi, 1[rbp]	# tmp488,
1321:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18654              		.loc 1 1321 29 is_stmt 1 view .LVU6345
 18655              	# sieve_extend.c:1322:             tune_benchmark(tuning_result, i);
1322:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18656              		.loc 1 1322 13 is_stmt 0 view .LVU6346
 18657 0a96 4C89FF   		mov	rdi, r15	#, tuning_result
GAS LISTING /tmp/ccjg94QQ.s 			page 501


 18658 0a99 4C895424 		mov	QWORD PTR 32[rsp], r10	# %sfp, tmp489
 18658      20
1322:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18659              		.loc 1 1322 13 is_stmt 1 view .LVU6347
 18660 0a9e E8000000 		call	tune_benchmark	#
 18660      00
 18661              	.LVL1149:
1323:sieve_extend.c ****         }
 18662              		.loc 1 1323 13 view .LVU6348
 18663              	# sieve_extend.c:1323:             tuning_result[i].sample_max += sample_max;
1323:sieve_extend.c ****         }
 18664              		.loc 1 1323 41 is_stmt 0 view .LVU6349
 18665 0aa3 4C8B5C24 		mov	r11, QWORD PTR 32[rsp]	# tmp489, %sfp
 18665      20
 18666 0aa8 4C8D8BC0 		lea	r9, 192[rbx]	# ivtmp.709,
 18666      000000
 18667              	# sieve_extend.c:1321:         for (counter_t i=0; i<tuning_results; i++) {
1321:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18668              		.loc 1 1321 48 view .LVU6350
 18669 0aaf 488D7502 		lea	rsi, 2[rbp]	# i,
 18670              	# sieve_extend.c:1322:             tune_benchmark(tuning_result, i);
1322:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18671              		.loc 1 1322 13 view .LVU6351
 18672 0ab3 4C89FF   		mov	rdi, r15	#, tuning_result
 18673 0ab6 4C894C24 		mov	QWORD PTR 32[rsp], r9	# %sfp, ivtmp.709
 18673      20
 18674              	# sieve_extend.c:1323:             tuning_result[i].sample_max += sample_max;
1323:sieve_extend.c ****         }
 18675              		.loc 1 1323 41 view .LVU6352
 18676 0abb 4D0133   		add	QWORD PTR [r11], r14	# MEM[base: _116, offset: 0B], sample_max
1321:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18677              		.loc 1 1321 47 is_stmt 1 view .LVU6353
1321:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18678              		.loc 1 1321 29 view .LVU6354
1322:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18679              		.loc 1 1322 13 view .LVU6355
 18680 0abe E8000000 		call	tune_benchmark	#
 18680      00
 18681              	.LVL1150:
1323:sieve_extend.c ****         }
 18682              		.loc 1 1323 13 view .LVU6356
 18683              	# sieve_extend.c:1323:             tuning_result[i].sample_max += sample_max;
1323:sieve_extend.c ****         }
 18684              		.loc 1 1323 41 is_stmt 0 view .LVU6357
 18685 0ac3 488B7C24 		mov	rdi, QWORD PTR 32[rsp]	# ivtmp.709, %sfp
 18685      20
 18686 0ac8 488D8320 		lea	rax, 288[rbx]	# ivtmp.709,
 18686      010000
 18687 0acf 48894424 		mov	QWORD PTR 32[rsp], rax	# %sfp, ivtmp.709
 18687      20
 18688              	# sieve_extend.c:1321:         for (counter_t i=0; i<tuning_results; i++) {
1321:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18689              		.loc 1 1321 48 view .LVU6358
 18690 0ad4 488D7503 		lea	rsi, 3[rbp]	# i,
 18691              	# sieve_extend.c:1323:             tuning_result[i].sample_max += sample_max;
1323:sieve_extend.c ****         }
 18692              		.loc 1 1323 41 view .LVU6359
GAS LISTING /tmp/ccjg94QQ.s 			page 502


 18693 0ad8 4C0137   		add	QWORD PTR [rdi], r14	# MEM[base: _116, offset: 0B], sample_max
1321:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18694              		.loc 1 1321 47 is_stmt 1 view .LVU6360
1321:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18695              		.loc 1 1321 29 view .LVU6361
1322:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18696              		.loc 1 1322 13 view .LVU6362
 18697 0adb 4C89FF   		mov	rdi, r15	#, tuning_result
 18698 0ade E8000000 		call	tune_benchmark	#
 18698      00
 18699              	.LVL1151:
1323:sieve_extend.c ****         }
 18700              		.loc 1 1323 13 view .LVU6363
 18701              	# sieve_extend.c:1323:             tuning_result[i].sample_max += sample_max;
1323:sieve_extend.c ****         }
 18702              		.loc 1 1323 41 is_stmt 0 view .LVU6364
 18703 0ae3 488B5424 		mov	rdx, QWORD PTR 32[rsp]	# ivtmp.709, %sfp
 18703      20
 18704 0ae8 488D8B80 		lea	rcx, 384[rbx]	# ivtmp.709,
 18704      010000
 18705              	# sieve_extend.c:1321:         for (counter_t i=0; i<tuning_results; i++) {
1321:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18706              		.loc 1 1321 48 view .LVU6365
 18707 0aef 488D7504 		lea	rsi, 4[rbp]	# i,
 18708              	# sieve_extend.c:1322:             tune_benchmark(tuning_result, i);
1322:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18709              		.loc 1 1322 13 view .LVU6366
 18710 0af3 4C89FF   		mov	rdi, r15	#, tuning_result
 18711 0af6 48894C24 		mov	QWORD PTR 32[rsp], rcx	# %sfp, ivtmp.709
 18711      20
 18712              	# sieve_extend.c:1323:             tuning_result[i].sample_max += sample_max;
1323:sieve_extend.c ****         }
 18713              		.loc 1 1323 41 view .LVU6367
 18714 0afb 4C0132   		add	QWORD PTR [rdx], r14	# MEM[base: _116, offset: 0B], sample_max
1321:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18715              		.loc 1 1321 47 is_stmt 1 view .LVU6368
1321:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18716              		.loc 1 1321 29 view .LVU6369
1322:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18717              		.loc 1 1322 13 view .LVU6370
 18718 0afe E8000000 		call	tune_benchmark	#
 18718      00
 18719              	.LVL1152:
1323:sieve_extend.c ****         }
 18720              		.loc 1 1323 13 view .LVU6371
 18721              	# sieve_extend.c:1323:             tuning_result[i].sample_max += sample_max;
1323:sieve_extend.c ****         }
 18722              		.loc 1 1323 41 is_stmt 0 view .LVU6372
 18723 0b03 488B7424 		mov	rsi, QWORD PTR 32[rsp]	# ivtmp.709, %sfp
 18723      20
 18724 0b08 4C8D83E0 		lea	r8, 480[rbx]	# ivtmp.709,
 18724      010000
 18725 0b0f 4C894424 		mov	QWORD PTR 32[rsp], r8	# %sfp, ivtmp.709
 18725      20
 18726              	# sieve_extend.c:1322:             tune_benchmark(tuning_result, i);
1322:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18727              		.loc 1 1322 13 view .LVU6373
GAS LISTING /tmp/ccjg94QQ.s 			page 503


 18728 0b14 4C89FF   		mov	rdi, r15	#, tuning_result
 18729              	# sieve_extend.c:1323:             tuning_result[i].sample_max += sample_max;
1323:sieve_extend.c ****         }
 18730              		.loc 1 1323 41 view .LVU6374
 18731 0b17 4C0136   		add	QWORD PTR [rsi], r14	# MEM[base: _116, offset: 0B], sample_max
1321:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18732              		.loc 1 1321 47 is_stmt 1 view .LVU6375
 18733              	# sieve_extend.c:1321:         for (counter_t i=0; i<tuning_results; i++) {
1321:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18734              		.loc 1 1321 48 is_stmt 0 view .LVU6376
 18735 0b1a 488D7505 		lea	rsi, 5[rbp]	# i,
1321:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18736              		.loc 1 1321 29 is_stmt 1 view .LVU6377
1322:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18737              		.loc 1 1322 13 view .LVU6378
 18738 0b1e E8000000 		call	tune_benchmark	#
 18738      00
 18739              	.LVL1153:
1323:sieve_extend.c ****         }
 18740              		.loc 1 1323 13 view .LVU6379
 18741              	# sieve_extend.c:1323:             tuning_result[i].sample_max += sample_max;
1323:sieve_extend.c ****         }
 18742              		.loc 1 1323 41 is_stmt 0 view .LVU6380
 18743 0b23 4C8B5424 		mov	r10, QWORD PTR 32[rsp]	# ivtmp.709, %sfp
 18743      20
 18744 0b28 4C8D9B40 		lea	r11, 576[rbx]	# ivtmp.709,
 18744      020000
 18745              	# sieve_extend.c:1321:         for (counter_t i=0; i<tuning_results; i++) {
1321:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18746              		.loc 1 1321 48 view .LVU6381
 18747 0b2f 488D7506 		lea	rsi, 6[rbp]	# i,
 18748              	# sieve_extend.c:1322:             tune_benchmark(tuning_result, i);
1322:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18749              		.loc 1 1322 13 view .LVU6382
 18750 0b33 4C89FF   		mov	rdi, r15	#, tuning_result
 18751 0b36 4C895C24 		mov	QWORD PTR 32[rsp], r11	# %sfp, ivtmp.709
 18751      20
 18752              	# sieve_extend.c:1323:             tuning_result[i].sample_max += sample_max;
1323:sieve_extend.c ****         }
 18753              		.loc 1 1323 41 view .LVU6383
 18754 0b3b 4D0132   		add	QWORD PTR [r10], r14	# MEM[base: _116, offset: 0B], sample_max
1321:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18755              		.loc 1 1321 47 is_stmt 1 view .LVU6384
1321:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18756              		.loc 1 1321 29 view .LVU6385
1322:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18757              		.loc 1 1322 13 view .LVU6386
 18758 0b3e E8000000 		call	tune_benchmark	#
 18758      00
 18759              	.LVL1154:
1323:sieve_extend.c ****         }
 18760              		.loc 1 1323 13 view .LVU6387
 18761              	# sieve_extend.c:1323:             tuning_result[i].sample_max += sample_max;
1323:sieve_extend.c ****         }
 18762              		.loc 1 1323 41 is_stmt 0 view .LVU6388
 18763 0b43 4C8B4C24 		mov	r9, QWORD PTR 32[rsp]	# ivtmp.709, %sfp
 18763      20
GAS LISTING /tmp/ccjg94QQ.s 			page 504


 18764 0b48 488DBBA0 		lea	rdi, 672[rbx]	# ivtmp.709,
 18764      020000
 18765              	# sieve_extend.c:1321:         for (counter_t i=0; i<tuning_results; i++) {
1321:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18766              		.loc 1 1321 48 view .LVU6389
 18767 0b4f 488D7507 		lea	rsi, 7[rbp]	# i,
 18768 0b53 4883C508 		add	rbp, 8	# i,
 18769 0b57 48897C24 		mov	QWORD PTR 32[rsp], rdi	# %sfp, ivtmp.709
 18769      20
 18770              	# sieve_extend.c:1322:             tune_benchmark(tuning_result, i);
1322:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18771              		.loc 1 1322 13 view .LVU6390
 18772 0b5c 4C89FF   		mov	rdi, r15	#, tuning_result
 18773              	# sieve_extend.c:1323:             tuning_result[i].sample_max += sample_max;
1323:sieve_extend.c ****         }
 18774              		.loc 1 1323 41 view .LVU6391
 18775 0b5f 4D0131   		add	QWORD PTR [r9], r14	# MEM[base: _116, offset: 0B], sample_max
1321:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18776              		.loc 1 1321 47 is_stmt 1 view .LVU6392
1321:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18777              		.loc 1 1321 29 view .LVU6393
1322:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18778              		.loc 1 1322 13 view .LVU6394
 18779 0b62 4881C300 		add	rbx, 768	# ivtmp.709,
 18779      030000
 18780 0b69 E8000000 		call	tune_benchmark	#
 18780      00
 18781              	.LVL1155:
1323:sieve_extend.c ****         }
 18782              		.loc 1 1323 13 view .LVU6395
 18783              	# sieve_extend.c:1323:             tuning_result[i].sample_max += sample_max;
1323:sieve_extend.c ****         }
 18784              		.loc 1 1323 41 is_stmt 0 view .LVU6396
 18785 0b6e 488B4424 		mov	rax, QWORD PTR 32[rsp]	# ivtmp.709, %sfp
 18785      20
 18786 0b73 4C0130   		add	QWORD PTR [rax], r14	# MEM[base: _116, offset: 0B], sample_max
1321:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18787              		.loc 1 1321 47 is_stmt 1 view .LVU6397
 18788              	.LVL1156:
1321:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18789              		.loc 1 1321 29 view .LVU6398
 18790              	# sieve_extend.c:1321:         for (counter_t i=0; i<tuning_results; i++) {
1321:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18791              		.loc 1 1321 9 is_stmt 0 view .LVU6399
 18792 0b76 4939ED   		cmp	r13, rbp	# tuning_results, i
 18793 0b79 0F8501FF 		jne	.L1510	#,
 18793      FFFF
 18794 0b7f E9E4FDFF 		jmp	.L1513	#
 18794      FF
 18795              	.LVL1157:
 18796              		.p2align 4,,7
 18797 0b84 0F1F4000 		.p2align 3
 18798              	.L1608:
1321:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18799              		.loc 1 1321 9 view .LVU6400
 18800              	.LBE1062:
 18801              	.LBB1063:
GAS LISTING /tmp/ccjg94QQ.s 			page 505


 18802              	.LBB1045:
 18803              	.LBB1044:
 18804              	.LBB1043:
 18805              	.LBB1041:
 18806              	.LBB1039:
 18807              	.LBB1028:
 18808              	.LBB1029:
 18809              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18810              		.loc 3 107 10 view .LVU6401
 18811 0b88 488D3500 		lea	rsi, .LC50[rip]	#,
 18811      000000
 18812 0b8f BF010000 		mov	edi, 1	#,
 18812      00
 18813 0b94 C5FB115C 		vmovsd	QWORD PTR 40[rsp], xmm3	# %sfp, _253
 18813      2428
 18814              	.LBE1029:
 18815              	.LBE1028:
1292:sieve_extend.c ****                         }
 18816              		.loc 1 1292 60 is_stmt 1 view .LVU6402
 18817              	.LVL1158:
 18818              	.LBB1031:
 18819              	.LBI1028:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18820              		.loc 3 105 1 view .LVU6403
 18821              	.LBB1030:
 18822              		.loc 3 107 3 view .LVU6404
 18823              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18824              		.loc 3 107 10 is_stmt 0 view .LVU6405
 18825 0b9a 31C0     		xor	eax, eax	#
 18826 0b9c E8000000 		call	__printf_chk@PLT	#
 18826      00
 18827              	.LVL1159:
 18828              		.loc 3 107 10 view .LVU6406
 18829              	.LBE1030:
 18830              	.LBE1031:
1292:sieve_extend.c ****                         }
 18831              		.loc 1 1292 76 is_stmt 1 view .LVU6407
 18832              	.LBB1032:
 18833              	.LBI1032:
1209:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
 18834              		.loc 1 1209 20 view .LVU6408
 18835              	.LBB1033:
1210:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
 18836              		.loc 1 1210 5 view .LVU6409
 18837              	.LBB1034:
 18838              	.LBI1034:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18839              		.loc 3 105 1 view .LVU6410
 18840              	.LBB1035:
 18841              		.loc 3 107 3 view .LVU6411
 18842              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18843              		.loc 3 107 10 is_stmt 0 view .LVU6412
 18844 0ba1 4D8B4738 		mov	r8, QWORD PTR 56[r15]	# MEM[base: _500, offset: 56B], MEM[base: _500, offset: 56B]
 18845 0ba5 488D3500 		lea	rsi, .LC51[rip]	#,
 18845      000000
 18846 0bac 498B5708 		mov	rdx, QWORD PTR 8[r15]	# MEM[base: _500, offset: 8B], MEM[base: _500, offset: 8B]
 18847 0bb0 BF010000 		mov	edi, 1	#,
GAS LISTING /tmp/ccjg94QQ.s 			page 506


 18847      00
 18848 0bb5 C4C17B10 		vmovsd	xmm0, QWORD PTR 80[r15]	# MEM[base: _500, offset: 80B], MEM[base: _500, offset: 80B]
 18848      4750
 18849 0bbb B8030000 		mov	eax, 3	#,
 18849      00
 18850 0bc0 498B4F10 		mov	rcx, QWORD PTR 16[r15]	# MEM[base: _500, offset: 16B], MEM[base: _500, offset: 16B]
 18851 0bc4 4C894424 		mov	QWORD PTR 24[rsp], r8	#, MEM[base: _500, offset: 56B]
 18851      18
 18852 0bc9 4D8B5748 		mov	r10, QWORD PTR 72[r15]	# MEM[base: _500, offset: 72B], MEM[base: _500, offset: 72B]
 18853 0bcd 4C895424 		mov	QWORD PTR 16[rsp], r10	#, MEM[base: _500, offset: 72B]
 18853      10
 18854 0bd2 4D8B5F30 		mov	r11, QWORD PTR 48[r15]	# MEM[base: _500, offset: 48B], MEM[base: _500, offset: 48B]
 18855 0bd6 4C895C24 		mov	QWORD PTR 8[rsp], r11	#, MEM[base: _500, offset: 48B]
 18855      08
 18856 0bdb 4D8B4F28 		mov	r9, QWORD PTR 40[r15]	# MEM[base: _500, offset: 40B], MEM[base: _500, offset: 40B]
 18857 0bdf 4C890C24 		mov	QWORD PTR [rsp], r9	#, MEM[base: _500, offset: 40B]
 18858 0be3 4D8B4F20 		mov	r9, QWORD PTR 32[r15]	#, MEM[base: _500, offset: 32B]
 18859 0be7 4D8B4718 		mov	r8, QWORD PTR 24[r15]	#, MEM[base: _500, offset: 24B]
 18860 0beb C4C17B10 		vmovsd	xmm2, QWORD PTR 88[r15]	#, MEM[base: _500, offset: 88B]
 18860      5758
 18861 0bf1 C4C17B10 		vmovsd	xmm1, QWORD PTR 64[r15]	#, MEM[base: _500, offset: 64B]
 18861      4F40
 18862 0bf7 E8000000 		call	__printf_chk@PLT	#
 18862      00
 18863              	.LVL1160:
 18864              		.loc 3 107 10 view .LVU6413
 18865              	.LBE1035:
 18866              	.LBE1034:
 18867              	# sieve_extend.c:1215: }
1215:sieve_extend.c **** 
 18868              		.loc 1 1215 1 view .LVU6414
 18869 0bfc 488B5424 		mov	rdx, QWORD PTR 32[rsp]	# smallstep_faster, %sfp
 18869      20
 18870 0c01 4C897424 		mov	QWORD PTR 72[rsp], r14	# %sfp, mediumstep_faster
 18870      48
 18871              	.LBE1033:
 18872              	.LBE1032:
 18873              	# sieve_extend.c:1288:                             best_blocksize_bits = blocksize_bits;
1288:sieve_extend.c ****                             best_smallstep_faster = smallstep_faster;
 18874              		.loc 1 1288 49 view .LVU6415
 18875 0c06 48895C24 		mov	QWORD PTR 56[rsp], rbx	# %sfp, ivtmp.728
 18875      38
 18876              	.LBB1037:
 18877              	.LBB1036:
 18878              	# sieve_extend.c:1215: }
1215:sieve_extend.c **** 
 18879              		.loc 1 1215 1 view .LVU6416
 18880 0c0b 48895424 		mov	QWORD PTR 64[rsp], rdx	# %sfp, smallstep_faster
 18880      40
 18881 0c10 E92EFCFF 		jmp	.L1499	#
 18881      FF
 18882              	.LVL1161:
 18883              	.L1509:
1215:sieve_extend.c **** 
 18884              		.loc 1 1215 1 view .LVU6417
 18885              	.LBE1036:
 18886              	.LBE1037:
GAS LISTING /tmp/ccjg94QQ.s 			page 507


 18887              	.LBE1039:
 18888              	.LBE1041:
 18889              	.LBE1043:
 18890              	.LBE1044:
 18891              	.LBE1045:
 18892              	.LBE1063:
1310:sieve_extend.c ****             printf("(%ju) ",(uintmax_t)step); tuning_result_print(tuning_result[tuning_result_index
 18893              		.loc 1 1310 13 is_stmt 1 view .LVU6418
1311:sieve_extend.c ****             if (option_verboselevel >= 3) {
 18894              		.loc 1 1311 13 view .LVU6419
 18895              	.LBB1064:
 18896              	.LBI1064:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18897              		.loc 3 105 1 view .LVU6420
 18898              	.LBB1065:
 18899              		.loc 3 107 3 view .LVU6421
 18900              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18901              		.loc 3 107 10 is_stmt 0 view .LVU6422
 18902 0c15 4C89E2   		mov	rdx, r12	#, step
 18903 0c18 488D3500 		lea	rsi, .LC55[rip]	#,
 18903      000000
 18904 0c1f BF010000 		mov	edi, 1	#,
 18904      00
 18905 0c24 31C0     		xor	eax, eax	#
 18906 0c26 E8000000 		call	__printf_chk@PLT	#
 18906      00
 18907              	.LVL1162:
 18908              		.loc 3 107 10 view .LVU6423
 18909              	.LBE1065:
 18910              	.LBE1064:
1311:sieve_extend.c ****             if (option_verboselevel >= 3) {
 18911              		.loc 1 1311 47 is_stmt 1 view .LVU6424
 18912              	.LBB1066:
 18913              	.LBI1066:
1209:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
 18914              		.loc 1 1209 20 view .LVU6425
 18915              	.LBB1067:
1210:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
 18916              		.loc 1 1210 5 view .LVU6426
 18917              	.LBB1068:
 18918              	.LBI1068:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18919              		.loc 3 105 1 view .LVU6427
 18920              	.LBB1069:
 18921              		.loc 3 107 3 view .LVU6428
 18922              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18923              		.loc 3 107 10 is_stmt 0 view .LVU6429
 18924 0c2b 498B5F38 		mov	rbx, QWORD PTR 56[r15]	# MEM[(struct tuning_result_type *)tuning_result_239 + 56B], MEM[(struc
 18925 0c2f 488D3500 		lea	rsi, .LC51[rip]	#,
 18925      000000
 18926 0c36 C4C17B10 		vmovsd	xmm0, QWORD PTR 80[r15]	# MEM[(struct tuning_result_type *)tuning_result_239 + 80B], MEM[(s
 18926      4750
 18927 0c3c BF010000 		mov	edi, 1	#,
 18927      00
 18928 0c41 498B4F10 		mov	rcx, QWORD PTR 16[r15]	# MEM[(struct tuning_result_type *)tuning_result_239 + 16B], MEM[(struc
 18929 0c45 B8030000 		mov	eax, 3	#,
 18929      00
GAS LISTING /tmp/ccjg94QQ.s 			page 508


 18930 0c4a 498B5708 		mov	rdx, QWORD PTR 8[r15]	# MEM[(struct tuning_result_type *)tuning_result_239 + 8B], MEM[(struct 
 18931 0c4e 48895C24 		mov	QWORD PTR 24[rsp], rbx	#, MEM[(struct tuning_result_type *)tuning_result_239 + 56B]
 18931      18
 18932 0c53 4D8B5748 		mov	r10, QWORD PTR 72[r15]	# MEM[(struct tuning_result_type *)tuning_result_239 + 72B], MEM[(struc
 18933 0c57 4C895424 		mov	QWORD PTR 16[rsp], r10	#, MEM[(struct tuning_result_type *)tuning_result_239 + 72B]
 18933      10
 18934 0c5c 4D8B5F30 		mov	r11, QWORD PTR 48[r15]	# MEM[(struct tuning_result_type *)tuning_result_239 + 48B], MEM[(struc
 18935 0c60 4C895C24 		mov	QWORD PTR 8[rsp], r11	#, MEM[(struct tuning_result_type *)tuning_result_239 + 48B]
 18935      08
 18936 0c65 4D8B4F28 		mov	r9, QWORD PTR 40[r15]	# MEM[(struct tuning_result_type *)tuning_result_239 + 40B], MEM[(struct
 18937 0c69 4C890C24 		mov	QWORD PTR [rsp], r9	#, MEM[(struct tuning_result_type *)tuning_result_239 + 40B]
 18938 0c6d 4D8B4F20 		mov	r9, QWORD PTR 32[r15]	#, MEM[(struct tuning_result_type *)tuning_result_239 + 32B]
 18939 0c71 4D8B4718 		mov	r8, QWORD PTR 24[r15]	#, MEM[(struct tuning_result_type *)tuning_result_239 + 24B]
 18940 0c75 C4C17B10 		vmovsd	xmm2, QWORD PTR 88[r15]	#, MEM[(struct tuning_result_type *)tuning_result_239 + 88B]
 18940      5758
 18941 0c7b C4C17B10 		vmovsd	xmm1, QWORD PTR 64[r15]	#, MEM[(struct tuning_result_type *)tuning_result_239 + 64B]
 18941      4F40
 18942 0c81 E8000000 		call	__printf_chk@PLT	#
 18942      00
 18943              	.LVL1163:
 18944              		.loc 3 107 10 view .LVU6430
 18945              	.LBE1069:
 18946              	.LBE1068:
 18947              	.LBE1067:
 18948              	.LBE1066:
1312:sieve_extend.c ****                 for (counter_t tuning_result_index=0; tuning_result_index<min(10,tuning_results); t
 18949              		.loc 1 1312 13 is_stmt 1 view .LVU6431
 18950              	# sieve_extend.c:1312:             if (option_verboselevel >= 3) {
1312:sieve_extend.c ****                 for (counter_t tuning_result_index=0; tuning_result_index<min(10,tuning_results); t
 18951              		.loc 1 1312 16 is_stmt 0 view .LVU6432
 18952 0c86 837C2458 		cmp	DWORD PTR 88[rsp], 2	# %sfp,
 18952      02
 18953 0c8b 0F8407FD 		je	.L1511	#,
 18953      FFFF
 18954 0c91 498D5F08 		lea	rbx, 8[r15]	# ivtmp.715,
 18955              	.LBB1070:
 18956              	# sieve_extend.c:1313:                 for (counter_t tuning_result_index=0; tuning_result_index<mi
1313:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 18957              		.loc 1 1313 32 view .LVU6433
 18958 0c95 31ED     		xor	ebp, ebp	# tuning_result_index
 18959              	.L1512:
 18960              	.LVL1164:
1314:sieve_extend.c ****                 }
 18961              		.loc 1 1314 21 is_stmt 1 view .LVU6434
 18962              	.LBB1053:
 18963              	.LBI1053:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18964              		.loc 3 105 1 view .LVU6435
 18965              	.LBB1054:
 18966              		.loc 3 107 3 view .LVU6436
 18967              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18968              		.loc 3 107 10 is_stmt 0 view .LVU6437
 18969 0c97 488D3500 		lea	rsi, .LC56[rip]	#,
 18969      000000
 18970 0c9e BF010000 		mov	edi, 1	#,
 18970      00
 18971 0ca3 31C0     		xor	eax, eax	#
GAS LISTING /tmp/ccjg94QQ.s 			page 509


 18972              	.LBE1054:
 18973              	.LBE1053:
 18974              	# sieve_extend.c:1313:                 for (counter_t tuning_result_index=0; tuning_result_index<mi
1313:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 18975              		.loc 1 1313 118 view .LVU6438
 18976 0ca5 4883C501 		add	rbp, 1	# tuning_result_index,
 18977              	.LVL1165:
 18978              	.LBB1056:
 18979              	.LBB1055:
 18980              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18981              		.loc 3 107 10 view .LVU6439
 18982 0ca9 E8000000 		call	__printf_chk@PLT	#
 18982      00
 18983              	.LVL1166:
 18984              		.loc 3 107 10 view .LVU6440
 18985              	.LBE1055:
 18986              	.LBE1056:
1314:sieve_extend.c ****                 }
 18987              		.loc 1 1314 36 is_stmt 1 view .LVU6441
 18988              	.LBB1057:
 18989              	.LBI1057:
1209:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
 18990              		.loc 1 1209 20 view .LVU6442
 18991              	.LBB1058:
1210:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
 18992              		.loc 1 1210 5 view .LVU6443
 18993              	.LBB1059:
 18994              	.LBI1059:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18995              		.loc 3 105 1 view .LVU6444
 18996              	.LBB1060:
 18997              		.loc 3 107 3 view .LVU6445
 18998              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18999              		.loc 3 107 10 is_stmt 0 view .LVU6446
 19000 0cae 488B7B30 		mov	rdi, QWORD PTR 48[rbx]	# MEM[base: _158, offset: 48B], MEM[base: _158, offset: 48B]
 19001 0cb2 4883C360 		add	rbx, 96	# ivtmp.715,
 19002 0cb6 488B4BA8 		mov	rcx, QWORD PTR -88[rbx]	# MEM[base: _158, offset: 8B], MEM[base: _158, offset: 8B]
 19003 0cba C5FB1043 		vmovsd	xmm0, QWORD PTR -24[rbx]	# MEM[base: _158, offset: 72B], MEM[base: _158, offset: 72B]
 19003      E8
 19004 0cbf 48897C24 		mov	QWORD PTR 24[rsp], rdi	#, MEM[base: _158, offset: 48B]
 19004      18
 19005 0cc4 BF010000 		mov	edi, 1	#,
 19005      00
 19006 0cc9 488B43E0 		mov	rax, QWORD PTR -32[rbx]	# MEM[base: _158, offset: 64B], MEM[base: _158, offset: 64B]
 19007 0ccd 48894424 		mov	QWORD PTR 16[rsp], rax	#, MEM[base: _158, offset: 64B]
 19007      10
 19008 0cd2 B8030000 		mov	eax, 3	#,
 19008      00
 19009 0cd7 488B53C8 		mov	rdx, QWORD PTR -56[rbx]	# MEM[base: _158, offset: 40B], MEM[base: _158, offset: 40B]
 19010 0cdb 48895424 		mov	QWORD PTR 8[rsp], rdx	#, MEM[base: _158, offset: 40B]
 19010      08
 19011 0ce0 488B73C0 		mov	rsi, QWORD PTR -64[rbx]	# MEM[base: _158, offset: 32B], MEM[base: _158, offset: 32B]
 19012 0ce4 48893424 		mov	QWORD PTR [rsp], rsi	#, MEM[base: _158, offset: 32B]
 19013 0ce8 488D3500 		lea	rsi, .LC51[rip]	#,
 19013      000000
 19014 0cef 4C8B4BB8 		mov	r9, QWORD PTR -72[rbx]	#, MEM[base: _158, offset: 24B]
 19015 0cf3 4C8B43B0 		mov	r8, QWORD PTR -80[rbx]	#, MEM[base: _158, offset: 16B]
GAS LISTING /tmp/ccjg94QQ.s 			page 510


 19016 0cf7 488B53A0 		mov	rdx, QWORD PTR -96[rbx]	#, MEM[base: _158, offset: 0B]
 19017 0cfb C5FB1053 		vmovsd	xmm2, QWORD PTR -16[rbx]	#, MEM[base: _158, offset: 80B]
 19017      F0
 19018 0d00 C5FB104B 		vmovsd	xmm1, QWORD PTR -40[rbx]	#, MEM[base: _158, offset: 56B]
 19018      D8
 19019 0d05 E8000000 		call	__printf_chk@PLT	#
 19019      00
 19020              	.LVL1167:
 19021              		.loc 3 107 10 view .LVU6447
 19022              	.LBE1060:
 19023              	.LBE1059:
 19024              	.LBE1058:
 19025              	.LBE1057:
1313:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 19026              		.loc 1 1313 99 is_stmt 1 view .LVU6448
1313:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 19027              		.loc 1 1313 55 view .LVU6449
 19028              	# sieve_extend.c:1313:                 for (counter_t tuning_result_index=0; tuning_result_index<mi
1313:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 19029              		.loc 1 1313 75 is_stmt 0 view .LVU6450
 19030 0d0a 4983FD0A 		cmp	r13, 10	# tuning_results,
 19031 0d0e B90A0000 		mov	ecx, 10	# tmp422,
 19031      00
 19032 0d13 490F46CD 		cmovbe	rcx, r13	# tuning_results,, tmp422
 19033              	# sieve_extend.c:1313:                 for (counter_t tuning_result_index=0; tuning_result_index<mi
1313:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 19034              		.loc 1 1313 17 view .LVU6451
 19035 0d17 4839CD   		cmp	rbp, rcx	# tuning_result_index, tmp422
 19036 0d1a 0F8277FF 		jb	.L1512	#,
 19036      FFFF
 19037 0d20 E973FCFF 		jmp	.L1511	#
 19037      FF
 19038              	.LVL1168:
 19039              	.L1603:
1313:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 19040              		.loc 1 1313 17 view .LVU6452
 19041              	.LBE1070:
 19042              	.LBE1015:
 19043              	.LBE1014:
 19044              	.LBE1013:
1407:sieve_extend.c ****     }
 19045              		.loc 1 1407 39 is_stmt 1 view .LVU6453
 19046              	.LBB1089:
 19047              	.LBI1089:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19048              		.loc 3 105 1 view .LVU6454
 19049              	.LBB1090:
 19050              		.loc 3 107 3 view .LVU6455
 19051              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19052              		.loc 3 107 10 is_stmt 0 view .LVU6456
 19053 0d25 488D3D00 		lea	rdi, .LC48[rip]	#,
 19053      000000
 19054              	.LBE1090:
 19055              	.LBE1089:
 19056              	# sieve_extend.c:1410:     counter_t best_blocksize_bits = default_blocksize;
1410:sieve_extend.c ****     if (option_tunelevel) {
 19057              		.loc 1 1410 15 view .LVU6457
GAS LISTING /tmp/ccjg94QQ.s 			page 511


 19058 0d2c 41BE00FC 		mov	r14d, 261120	# best_result$blocksize_bits,
 19058      0300
 19059              	.LBB1092:
 19060              	.LBB1091:
 19061              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19062              		.loc 3 107 10 view .LVU6458
 19063 0d32 E8000000 		call	puts@PLT	#
 19063      00
 19064              	.LVL1169:
 19065              		.loc 3 107 10 view .LVU6459
 19066              	.LBE1091:
 19067              	.LBE1092:
1410:sieve_extend.c ****     if (option_tunelevel) {
 19068              		.loc 1 1410 5 is_stmt 1 view .LVU6460
1411:sieve_extend.c ****         tuning_result_type tuning_result = tune(option_tunelevel, option_maxFactor, option_verbosel
 19069              		.loc 1 1411 5 view .LVU6461
 19070              	# sieve_extend.c:1411:     if (option_tunelevel) {
1411:sieve_extend.c ****         tuning_result_type tuning_result = tune(option_tunelevel, option_maxFactor, option_verbosel
 19071              		.loc 1 1411 9 is_stmt 0 view .LVU6462
 19072 0d37 448B8424 		mov	r8d, DWORD PTR 156[rsp]	# option_tunelevel.40_62, option_tunelevel
 19072      9C000000 
 19073              	# sieve_extend.c:1411:     if (option_tunelevel) {
1411:sieve_extend.c ****         tuning_result_type tuning_result = tune(option_tunelevel, option_maxFactor, option_verbosel
 19074              		.loc 1 1411 8 view .LVU6463
 19075 0d3f 4585C0   		test	r8d, r8d	# option_tunelevel.40_62
 19076 0d42 0F857D01 		jne	.L1610	#,
 19076      0000
 19077              	.LVL1170:
 19078              	.L1490:
 19079              	.LBB1093:
1421:sieve_extend.c ****         counter_t passes = 0;
 19080              		.loc 1 1421 9 is_stmt 1 view .LVU6464
 19081              	# sieve_extend.c:1421:         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize
1421:sieve_extend.c ****         counter_t passes = 0;
 19082              		.loc 1 1421 12 is_stmt 0 view .LVU6465
 19083 0d48 83BC2498 		cmp	DWORD PTR 152[rsp], 0	# option_verboselevel,
 19083      00000000 
 19084 0d50 0F8E98F6 		jle	.L1517	#,
 19084      FFFF
1421:sieve_extend.c ****         counter_t passes = 0;
 19085              		.loc 1 1421 39 is_stmt 1 discriminator 1 view .LVU6466
 19086              	.LVL1171:
 19087              	.LBB999:
 19088              	.LBI999:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19089              		.loc 3 105 1 discriminator 1 view .LVU6467
 19090              	.LBB1000:
 19091              		.loc 3 107 3 discriminator 1 view .LVU6468
 19092              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19093              		.loc 3 107 10 is_stmt 0 discriminator 1 view .LVU6469
 19094 0d56 4C8B0D00 		mov	r9, QWORD PTR global_VECTORSTEP_FASTER[rip]	#, global_VECTORSTEP_FASTER
 19094      000000
 19095 0d5d 4C89F2   		mov	rdx, r14	#, best_result$blocksize_bits
 19096 0d60 4C8B0500 		mov	r8, QWORD PTR global_MEDIUMSTEP_FASTER[rip]	#, global_MEDIUMSTEP_FASTER
 19096      000000
 19097 0d67 488D3500 		lea	rsi, .LC58[rip]	#,
 19097      000000
GAS LISTING /tmp/ccjg94QQ.s 			page 512


 19098 0d6e 488B0D00 		mov	rcx, QWORD PTR global_SMALLSTEP_FASTER[rip]	#, global_SMALLSTEP_FASTER
 19098      000000
 19099 0d75 BF010000 		mov	edi, 1	#,
 19099      00
 19100 0d7a 31C0     		xor	eax, eax	#
 19101 0d7c E8000000 		call	__printf_chk@PLT	#
 19101      00
 19102              	.LVL1172:
 19103 0d81 E968F6FF 		jmp	.L1517	#
 19103      FF
 19104              	.LVL1173:
 19105              	.L1609:
 19106              		.loc 3 107 10 discriminator 1 view .LVU6470
 19107              	.LBE1000:
 19108              	.LBE999:
 19109              	.LBE1093:
 19110              	.LBB1094:
 19111              	.LBB1086:
 19112              	.LBB1083:
1327:sieve_extend.c ****     if (option_verboselevel >= 1) {
 19113              		.loc 1 1327 5 is_stmt 1 view .LVU6471
 19114              	# sieve_extend.c:1327:     tuning_result_type best_result = tuning_result[0];
1327:sieve_extend.c ****     if (option_verboselevel >= 1) {
 19115              		.loc 1 1327 24 is_stmt 0 view .LVU6472
 19116 0d86 4D8B7708 		mov	r14, QWORD PTR 8[r15]	# best_result$blocksize_bits, MEM[(struct tuning_result_type *)tuning_re
 19117              	.LVL1174:
 19118              	# sieve_extend.c:1328:     if (option_verboselevel >= 1) {
1328:sieve_extend.c ****         tuning_result_index = 0;
 19119              		.loc 1 1328 8 view .LVU6473
 19120 0d8a 837C2458 		cmp	DWORD PTR 88[rsp], 0	# %sfp,
 19120      00
 19121              	# sieve_extend.c:1327:     tuning_result_type best_result = tuning_result[0];
1327:sieve_extend.c ****     if (option_verboselevel >= 1) {
 19122              		.loc 1 1327 24 view .LVU6474
 19123 0d8f 4D8B6F20 		mov	r13, QWORD PTR 32[r15]	# best_result$smallstep_faster, MEM[(struct tuning_result_type *)tuning
 19124              	.LVL1175:
1327:sieve_extend.c ****     if (option_verboselevel >= 1) {
 19125              		.loc 1 1327 24 view .LVU6475
 19126 0d93 498B6F28 		mov	rbp, QWORD PTR 40[r15]	# best_result$mediumstep_faster, MEM[(struct tuning_result_type *)tunin
 19127 0d97 498B5F30 		mov	rbx, QWORD PTR 48[r15]	# best_result$vectorstep_faster, MEM[(struct tuning_result_type *)tunin
1328:sieve_extend.c ****         tuning_result_index = 0;
 19128              		.loc 1 1328 5 is_stmt 1 view .LVU6476
 19129              	# sieve_extend.c:1328:     if (option_verboselevel >= 1) {
1328:sieve_extend.c ****         tuning_result_index = 0;
 19130              		.loc 1 1328 8 is_stmt 0 view .LVU6477
 19131 0d9b 7E6E     		jle	.L1515	#,
1329:sieve_extend.c ****         printf(".Best result:"); tuning_result_print(tuning_result[tuning_result_index]);
 19132              		.loc 1 1329 9 is_stmt 1 view .LVU6478
 19133              	.LVL1176:
1330:sieve_extend.c ****     }
 19134              		.loc 1 1330 9 view .LVU6479
 19135              	.LBB1071:
 19136              	.LBI1071:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19137              		.loc 3 105 1 view .LVU6480
 19138              	.LBB1072:
 19139              		.loc 3 107 3 view .LVU6481
GAS LISTING /tmp/ccjg94QQ.s 			page 513


 19140              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19141              		.loc 3 107 10 is_stmt 0 view .LVU6482
 19142 0d9d 488D3500 		lea	rsi, .LC57[rip]	#,
 19142      000000
 19143 0da4 BF010000 		mov	edi, 1	#,
 19143      00
 19144 0da9 31C0     		xor	eax, eax	#
 19145 0dab E8000000 		call	__printf_chk@PLT	#
 19145      00
 19146              	.LVL1177:
 19147              		.loc 3 107 10 view .LVU6483
 19148              	.LBE1072:
 19149              	.LBE1071:
1330:sieve_extend.c ****     }
 19150              		.loc 1 1330 34 is_stmt 1 view .LVU6484
 19151              	.LBB1073:
 19152              	.LBI1073:
1209:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
 19153              		.loc 1 1209 20 view .LVU6485
 19154              	.LBB1074:
1210:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
 19155              		.loc 1 1210 5 view .LVU6486
 19156              	.LBB1075:
 19157              	.LBI1075:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19158              		.loc 3 105 1 view .LVU6487
 19159              	.LBB1076:
 19160              		.loc 3 107 3 view .LVU6488
 19161              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19162              		.loc 3 107 10 is_stmt 0 view .LVU6489
 19163 0db0 4D8B5738 		mov	r10, QWORD PTR 56[r15]	# MEM[(struct tuning_result_type *)tuning_result_239 + 56B], MEM[(struc
 19164 0db4 488D3500 		lea	rsi, .LC51[rip]	#,
 19164      000000
 19165 0dbb C4C17B10 		vmovsd	xmm0, QWORD PTR 80[r15]	# MEM[(struct tuning_result_type *)tuning_result_239 + 80B], MEM[(s
 19165      4750
 19166 0dc1 B8030000 		mov	eax, 3	#,
 19166      00
 19167 0dc6 498B4F10 		mov	rcx, QWORD PTR 16[r15]	# MEM[(struct tuning_result_type *)tuning_result_239 + 16B], MEM[(struc
 19168 0dca 498B5708 		mov	rdx, QWORD PTR 8[r15]	# MEM[(struct tuning_result_type *)tuning_result_239 + 8B], MEM[(struct 
 19169 0dce 4C895424 		mov	QWORD PTR 24[rsp], r10	#, MEM[(struct tuning_result_type *)tuning_result_239 + 56B]
 19169      18
 19170 0dd3 4D8B5F48 		mov	r11, QWORD PTR 72[r15]	# MEM[(struct tuning_result_type *)tuning_result_239 + 72B], MEM[(struc
 19171 0dd7 4C895C24 		mov	QWORD PTR 16[rsp], r11	#, MEM[(struct tuning_result_type *)tuning_result_239 + 72B]
 19171      10
 19172 0ddc 4D8B4F30 		mov	r9, QWORD PTR 48[r15]	# MEM[(struct tuning_result_type *)tuning_result_239 + 48B], MEM[(struct
 19173 0de0 4C894C24 		mov	QWORD PTR 8[rsp], r9	#, MEM[(struct tuning_result_type *)tuning_result_239 + 48B]
 19173      08
 19174 0de5 498B7F28 		mov	rdi, QWORD PTR 40[r15]	# MEM[(struct tuning_result_type *)tuning_result_239 + 40B], MEM[(struc
 19175 0de9 48893C24 		mov	QWORD PTR [rsp], rdi	#, MEM[(struct tuning_result_type *)tuning_result_239 + 40B]
 19176 0ded BF010000 		mov	edi, 1	#,
 19176      00
 19177 0df2 4D8B4F20 		mov	r9, QWORD PTR 32[r15]	#, MEM[(struct tuning_result_type *)tuning_result_239 + 32B]
 19178 0df6 4D8B4718 		mov	r8, QWORD PTR 24[r15]	#, MEM[(struct tuning_result_type *)tuning_result_239 + 24B]
 19179 0dfa C4C17B10 		vmovsd	xmm2, QWORD PTR 88[r15]	#, MEM[(struct tuning_result_type *)tuning_result_239 + 88B]
 19179      5758
 19180 0e00 C4C17B10 		vmovsd	xmm1, QWORD PTR 64[r15]	#, MEM[(struct tuning_result_type *)tuning_result_239 + 64B]
 19180      4F40
GAS LISTING /tmp/ccjg94QQ.s 			page 514


 19181 0e06 E8000000 		call	__printf_chk@PLT	#
 19181      00
 19182              	.LVL1178:
 19183              	.L1515:
 19184              		.loc 3 107 10 view .LVU6490
 19185              	.LBE1076:
 19186              	.LBE1075:
 19187              	.LBE1074:
 19188              	.LBE1073:
1333:sieve_extend.c ****     return best_result;
 19189              		.loc 1 1333 5 is_stmt 1 view .LVU6491
 19190 0e0b 4C89FF   		mov	rdi, r15	#, tuning_result
 19191 0e0e E8000000 		call	free@PLT	#
 19191      00
 19192              	.LVL1179:
1334:sieve_extend.c **** }
 19193              		.loc 1 1334 5 view .LVU6492
1334:sieve_extend.c **** }
 19194              		.loc 1 1334 5 is_stmt 0 view .LVU6493
 19195              	.LBE1083:
 19196              	.LBE1086:
1413:sieve_extend.c ****         global_MEDIUMSTEP_FASTER = tuning_result.mediumstep_faster;
 19197              		.loc 1 1413 9 is_stmt 1 view .LVU6494
 19198              	# sieve_extend.c:1413:         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
1413:sieve_extend.c ****         global_MEDIUMSTEP_FASTER = tuning_result.mediumstep_faster;
 19199              		.loc 1 1413 33 is_stmt 0 view .LVU6495
 19200 0e13 4C892D00 		mov	QWORD PTR global_SMALLSTEP_FASTER[rip], r13	# global_SMALLSTEP_FASTER, best_result$smallstep_f
 19200      000000
1414:sieve_extend.c ****         global_VECTORSTEP_FASTER = tuning_result.vectorstep_faster;
 19201              		.loc 1 1414 9 is_stmt 1 view .LVU6496
 19202              	.LBE1094:
 19203              	# sieve_extend.c:1420:     if (best_blocksize_bits > 0) {
1420:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 19204              		.loc 1 1420 8 is_stmt 0 view .LVU6497
 19205 0e1a 4D85F6   		test	r14, r14	# best_result$blocksize_bits
 19206              	.LBB1095:
 19207              	# sieve_extend.c:1414:         global_MEDIUMSTEP_FASTER = tuning_result.mediumstep_faster;
1414:sieve_extend.c ****         global_VECTORSTEP_FASTER = tuning_result.vectorstep_faster;
 19208              		.loc 1 1414 34 view .LVU6498
 19209 0e1d 48892D00 		mov	QWORD PTR global_MEDIUMSTEP_FASTER[rip], rbp	# global_MEDIUMSTEP_FASTER, best_result$mediumste
 19209      000000
1415:sieve_extend.c ****         best_blocksize_bits = tuning_result.blocksize_bits;
 19210              		.loc 1 1415 9 is_stmt 1 view .LVU6499
 19211              	# sieve_extend.c:1415:         global_VECTORSTEP_FASTER = tuning_result.vectorstep_faster;
1415:sieve_extend.c ****         best_blocksize_bits = tuning_result.blocksize_bits;
 19212              		.loc 1 1415 34 is_stmt 0 view .LVU6500
 19213 0e24 48891D00 		mov	QWORD PTR global_VECTORSTEP_FASTER[rip], rbx	# global_VECTORSTEP_FASTER, best_result$vectorste
 19213      000000
1416:sieve_extend.c ****     }
 19214              		.loc 1 1416 9 is_stmt 1 view .LVU6501
 19215              	.LVL1180:
1416:sieve_extend.c ****     }
 19216              		.loc 1 1416 9 is_stmt 0 view .LVU6502
 19217              	.LBE1095:
1419:sieve_extend.c ****     if (best_blocksize_bits > 0) {
 19218              		.loc 1 1419 5 is_stmt 1 view .LVU6503
1420:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
GAS LISTING /tmp/ccjg94QQ.s 			page 515


 19219              		.loc 1 1420 5 view .LVU6504
 19220              	# sieve_extend.c:1420:     if (best_blocksize_bits > 0) {
1420:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 19221              		.loc 1 1420 8 is_stmt 0 view .LVU6505
 19222 0e2b 0F8411F7 		je	.L1516	#,
 19222      FFFF
 19223 0e31 E912FFFF 		jmp	.L1490	#
 19223      FF
 19224              	.LVL1181:
 19225              	.L1525:
1420:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 19226              		.loc 1 1420 8 view .LVU6506
 19227 0e36 488D3D00 		lea	rdi, CSWTCH.124[rip]	# tmp337,
 19227      000000
 19228 0e3d 4C8D0D00 		lea	r9, CSWTCH.125[rip]	# tmp339,
 19228      000000
 19229 0e44 488D2D00 		lea	rbp, CSWTCH.126[rip]	# tmp341,
 19229      000000
 19230              	.LVL1182:
1420:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 19231              		.loc 1 1420 8 view .LVU6507
 19232 0e4b 488D1D00 		lea	rbx, CSWTCH.127[rip]	# tmp343,
 19232      000000
 19233              	.LVL1183:
1420:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 19234              		.loc 1 1420 8 view .LVU6508
 19235 0e52 4A8B0CC7 		mov	rcx, QWORD PTR [rdi+r8*8]	# smallstep_faster_steps, CSWTCH.124
 19236 0e56 4F8B24C1 		mov	r12, QWORD PTR [r9+r8*8]	# vectorstep_faster_steps, CSWTCH.125
 19237 0e5a 4E8B7CC5 		mov	r15, QWORD PTR 0[rbp+r8*8]	# freebits_steps, CSWTCH.126
 19237      00
 19238              	.LVL1184:
1420:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 19239              		.loc 1 1420 8 view .LVU6509
 19240 0e5f C4A17B10 		vmovsd	xmm7, QWORD PTR [rbx+r8*8]	# sample_duration, CSWTCH.127
 19240      3CC3
 19241 0e65 48898C24 		mov	QWORD PTR 136[rsp], rcx	# %sfp, smallstep_faster_steps
 19241      88000000 
 19242 0e6d 4C89A424 		mov	QWORD PTR 128[rsp], r12	# %sfp, vectorstep_faster_steps
 19242      80000000 
 19243 0e75 4C897C24 		mov	QWORD PTR 96[rsp], r15	# %sfp, freebits_steps
 19243      60
 19244              	.LBB1096:
 19245              	# sieve_extend.c:1346:     for (int arg=1; arg < argc; arg++) {
1346:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 19246              		.loc 1 1346 14 view .LVU6510
 19247 0e7a 48C74424 		mov	QWORD PTR 104[rsp], 8	# %sfp,
 19247      68080000 
 19247      00
 19248 0e83 C5FB117C 		vmovsd	QWORD PTR 112[rsp], xmm7	# %sfp, sample_duration
 19248      2470
 19249              	.L1491:
 19250              	.LVL1185:
1346:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 19251              		.loc 1 1346 14 view .LVU6511
 19252              	.LBE1096:
 19253              	.LBB1097:
 19254              	.LBB1087:
GAS LISTING /tmp/ccjg94QQ.s 			page 516


 19255              	.LBB1084:
1260:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 19256              		.loc 1 1260 5 is_stmt 1 view .LVU6512
 19257              	# sieve_extend.c:1260:     if (option_verboselevel >= 1) printf("Tuning..."); if (option_verboselev
1260:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 19258              		.loc 1 1260 8 is_stmt 0 view .LVU6513
 19259 0e89 448B6C24 		mov	r13d, DWORD PTR 88[rsp]	# option_verboselevel.41_63, %sfp
 19259      58
 19260              	.LVL1186:
1260:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 19261              		.loc 1 1260 8 view .LVU6514
 19262 0e8e 4585ED   		test	r13d, r13d	# option_verboselevel.41_63
 19263 0e91 0F8E43F8 		jle	.L1493	#,
 19263      FFFF
1260:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 19264              		.loc 1 1260 35 is_stmt 1 view .LVU6515
 19265              	.LVL1187:
 19266              	.LBB1077:
 19267              	.LBI1077:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19268              		.loc 3 105 1 view .LVU6516
 19269              	.LBB1078:
 19270              		.loc 3 107 3 view .LVU6517
 19271              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19272              		.loc 3 107 10 is_stmt 0 view .LVU6518
 19273 0e97 31C0     		xor	eax, eax	#
 19274 0e99 488D3500 		lea	rsi, .LC49[rip]	#,
 19274      000000
 19275 0ea0 BF010000 		mov	edi, 1	#,
 19275      00
 19276              	.LBE1078:
 19277              	.LBE1077:
 19278              	# sieve_extend.c:1260:     if (option_verboselevel >= 1) printf("Tuning..."); if (option_verboselev
1260:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 19279              		.loc 1 1260 59 view .LVU6519
 19280 0ea5 4489EB   		mov	ebx, r13d	# option_verboselevel.41_63, option_verboselevel.41_63
 19281              	.LBB1080:
 19282              	.LBB1079:
 19283              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19284              		.loc 3 107 10 view .LVU6520
 19285 0ea8 E8000000 		call	__printf_chk@PLT	#
 19285      00
 19286              	.LVL1188:
 19287              		.loc 3 107 10 view .LVU6521
 19288              	.LBE1079:
 19289              	.LBE1080:
1260:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 19290              		.loc 1 1260 56 is_stmt 1 view .LVU6522
 19291              	# sieve_extend.c:1260:     if (option_verboselevel >= 1) printf("Tuning..."); if (option_verboselev
1260:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 19292              		.loc 1 1260 59 is_stmt 0 view .LVU6523
 19293 0ead 83EB01   		sub	ebx, 1	# option_verboselevel.41_63,
 19294 0eb0 0F8424F8 		je	.L1493	#,
 19294      FFFF
1260:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 19295              		.loc 1 1260 86 is_stmt 1 view .LVU6524
 19296              	.LVL1189:
GAS LISTING /tmp/ccjg94QQ.s 			page 517


 19297              	.LBB1081:
 19298              	.LBI1081:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19299              		.loc 3 105 1 view .LVU6525
 19300              	.LBB1082:
 19301              		.loc 3 107 3 view .LVU6526
 19302              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19303              		.loc 3 107 10 is_stmt 0 view .LVU6527
 19304 0eb6 BF0A0000 		mov	edi, 10	#,
 19304      00
 19305 0ebb E8000000 		call	putchar@PLT	#
 19305      00
 19306              	.LVL1190:
 19307 0ec0 E915F8FF 		jmp	.L1493	#
 19307      FF
 19308              	.LVL1191:
 19309              	.L1610:
 19310              		.loc 3 107 10 view .LVU6528
 19311              	.LBE1082:
 19312              	.LBE1081:
 19313              	.LBE1084:
 19314              	.LBE1087:
1412:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
 19315              		.loc 1 1412 9 is_stmt 1 view .LVU6529
 19316              	# sieve_extend.c:1412:         tuning_result_type tuning_result = tune(option_tunelevel, option_max
1412:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
 19317              		.loc 1 1412 44 is_stmt 0 view .LVU6530
 19318 0ec5 8B942498 		mov	edx, DWORD PTR 152[rsp]	# option_verboselevel.41_63, option_verboselevel
 19318      000000
 19319 0ecc 4183E801 		sub	r8d, 1	#,
 19320 0ed0 488BB424 		mov	rsi, QWORD PTR 160[rsp]	# option_maxFactor.42_64, option_maxFactor
 19320      A0000000 
 19321 0ed8 4183F802 		cmp	r8d, 2	# _212,
 19322 0edc 89542458 		mov	DWORD PTR 88[rsp], edx	# %sfp, option_verboselevel.41_63
 19323 0ee0 48897424 		mov	QWORD PTR 120[rsp], rsi	# %sfp, option_maxFactor.42_64
 19323      78
 19324              	.LVL1192:
 19325              	.LBB1088:
1217:sieve_extend.c ****     counter_t best_blocksize_bits = default_blocksize;
 19326              		.loc 1 1217 27 is_stmt 1 view .LVU6531
 19327              	.LBB1085:
1218:sieve_extend.c **** 
 19328              		.loc 1 1218 5 view .LVU6532
1220:sieve_extend.c ****     best_blocksize_bits = 0;
 19329              		.loc 1 1220 5 view .LVU6533
1221:sieve_extend.c ****     counter_t best_smallstep_faster = 0;
 19330              		.loc 1 1221 5 view .LVU6534
1222:sieve_extend.c ****     counter_t best_mediumstep_faster = 0;
 19331              		.loc 1 1222 5 view .LVU6535
1223:sieve_extend.c ****     counter_t best_vectorstep_faster = 0;
 19332              		.loc 1 1223 5 view .LVU6536
1224:sieve_extend.c ****     counter_t smallstep_faster_steps = 4;
 19333              		.loc 1 1224 5 view .LVU6537
1225:sieve_extend.c ****     counter_t mediumstep_faster_steps = 4;
 19334              		.loc 1 1225 5 view .LVU6538
1226:sieve_extend.c ****     counter_t vectorstep_faster_steps = 32;
 19335              		.loc 1 1226 5 view .LVU6539
GAS LISTING /tmp/ccjg94QQ.s 			page 518


1227:sieve_extend.c ****     counter_t freebits_steps = anticiped_cache_line_bytesize;
 19336              		.loc 1 1227 5 view .LVU6540
1228:sieve_extend.c ****     counter_t sample_max = default_sample_max;
 19337              		.loc 1 1228 5 view .LVU6541
1229:sieve_extend.c ****     double sample_duration = default_sample_duration;
 19338              		.loc 1 1229 5 view .LVU6542
1230:sieve_extend.c **** 
 19339              		.loc 1 1230 5 view .LVU6543
1233:sieve_extend.c ****         case 1:
 19340              		.loc 1 1233 5 view .LVU6544
 19341 0ee5 0F864BFF 		jbe	.L1525	#,
 19341      FFFF
 19342 0eeb C5FB1005 		vmovsd	xmm0, QWORD PTR .LC26[rip]	# sample_duration,
 19342      00000000 
 19343 0ef3 48C74424 		mov	QWORD PTR 104[rsp], 5	# %sfp,
 19343      68050000 
 19343      00
 19344 0efc 48C74424 		mov	QWORD PTR 96[rsp], 128	# %sfp,
 19344      60800000 
 19344      00
 19345 0f05 48C78424 		mov	QWORD PTR 128[rsp], 32	# %sfp,
 19345      80000000 
 19345      20000000 
 19346 0f11 48C78424 		mov	QWORD PTR 136[rsp], 4	# %sfp,
 19346      88000000 
 19346      04000000 
 19347 0f1d C5FB1144 		vmovsd	QWORD PTR 112[rsp], xmm0	# %sfp, sample_duration
 19347      2470
 19348 0f23 E961FFFF 		jmp	.L1491	#
 19348      FF
 19349              	.LVL1193:
 19350              	.L1596:
1233:sieve_extend.c ****         case 1:
 19351              		.loc 1 1233 5 is_stmt 0 view .LVU6545
 19352              	.LBE1085:
 19353              	.LBE1088:
 19354              	.LBE1097:
 19355              	.LBB1098:
1349:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option_verboselevel > 4) {
 19356              		.loc 1 1349 34 is_stmt 1 discriminator 1 view .LVU6546
 19357              	.LBB936:
 19358              	.LBI936:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19359              		.loc 3 98 1 discriminator 1 view .LVU6547
 19360              	.LBB937:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19361              		.loc 3 100 3 discriminator 1 view .LVU6548
 19362              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19363              		.loc 3 100 10 is_stmt 0 discriminator 1 view .LVU6549
 19364 0f28 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 19364      000000
 19365 0f2f BA1B0000 		mov	edx, 27	#,
 19365      00
 19366 0f34 BE010000 		mov	esi, 1	#,
 19366      00
 19367 0f39 488D3D00 		lea	rdi, .LC30[rip]	#,
GAS LISTING /tmp/ccjg94QQ.s 			page 519


 19367      000000
 19368 0f40 E8000000 		call	fwrite@PLT	#
 19368      00
 19369              	.LVL1194:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19370              		.loc 3 100 10 discriminator 1 view .LVU6550
 19371              	.LBE937:
 19372              	.LBE936:
1349:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option_verboselevel > 4) {
 19373              		.loc 1 1349 83 is_stmt 1 discriminator 1 view .LVU6551
 19374 0f45 E967F6FF 		jmp	.L1594	#
 19374      FF
 19375              	.L1474:
1359:sieve_extend.c ****             }
 19376              		.loc 1 1359 17 view .LVU6552
 19377              	.LVL1195:
 19378              	.LBB938:
 19379              	.LBI933:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19380              		.loc 3 98 1 view .LVU6553
 19381              	.LBB935:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19382              		.loc 3 100 3 view .LVU6554
 19383              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19384              		.loc 3 100 10 is_stmt 0 view .LVU6555
 19385 0f4a 498B0F   		mov	rcx, QWORD PTR [r15]	#, *_29
 19386 0f4d 488D1500 		lea	rdx, .LC37[rip]	#,
 19386      000000
 19387 0f54 E945F6FF 		jmp	.L1593	#
 19387      FF
 19388              	.LVL1196:
 19389              	.L1478:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19390              		.loc 3 100 10 view .LVU6556
 19391              	.LBE935:
 19392              	.LBE938:
1366:sieve_extend.c ****             }
 19393              		.loc 1 1366 17 is_stmt 1 view .LVU6557
 19394              	.LBB939:
 19395              	.LBI939:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19396              		.loc 3 98 1 view .LVU6558
 19397              	.LBB940:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19398              		.loc 3 100 3 view .LVU6559
 19399              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19400              		.loc 3 100 10 is_stmt 0 view .LVU6560
 19401 0f59 498B0F   		mov	rcx, QWORD PTR [r15]	#, *_41
 19402 0f5c 488D1500 		lea	rdx, .LC42[rip]	#,
 19402      000000
 19403 0f63 E936F6FF 		jmp	.L1593	#
 19403      FF
 19404              	.LVL1197:
 19405              	.L1599:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
GAS LISTING /tmp/ccjg94QQ.s 			page 520


 19406              		.loc 3 100 10 view .LVU6561
 19407              	.LBE940:
 19408              	.LBE939:
1357:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tunelevel > 4) {
 19409              		.loc 1 1357 34 is_stmt 1 discriminator 1 view .LVU6562
 19410              	.LBB941:
 19411              	.LBI941:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19412              		.loc 3 98 1 discriminator 1 view .LVU6563
 19413              	.LBB942:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19414              		.loc 3 100 3 discriminator 1 view .LVU6564
 19415              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19416              		.loc 3 100 10 is_stmt 0 discriminator 1 view .LVU6565
 19417 0f68 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 19417      000000
 19418 0f6f 488D3D00 		lea	rdi, .LC36[rip]	#,
 19418      000000
 19419 0f76 BA180000 		mov	edx, 24	#,
 19419      00
 19420 0f7b BE010000 		mov	esi, 1	#,
 19420      00
 19421 0f80 E8000000 		call	fwrite@PLT	#
 19421      00
 19422              	.LVL1198:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19423              		.loc 3 100 10 discriminator 1 view .LVU6566
 19424              	.LBE942:
 19425              	.LBE941:
1357:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tunelevel > 4) {
 19426              		.loc 1 1357 80 is_stmt 1 discriminator 1 view .LVU6567
 19427 0f85 498B3C24 		mov	rdi, QWORD PTR [r12]	#, *argv_159(D)
 19428 0f89 E8000000 		call	usage	#
 19428      00
 19429              	.LVL1199:
 19430              	.L1607:
1357:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tunelevel > 4) {
 19431              		.loc 1 1357 80 is_stmt 0 discriminator 1 view .LVU6568
 19432              	.LBE1098:
 19433              	# sieve_extend.c:1445: }
 19434              		.loc 1 1445 1 view .LVU6569
 19435 0f8e E8000000 		call	__stack_chk_fail@PLT	#
 19435      00
 19436              	.LVL1200:
 19437              	.L1602:
 19438              	.LBB1099:
1364:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 19439              		.loc 1 1364 34 is_stmt 1 discriminator 1 view .LVU6570
 19440              	.LBB943:
 19441              	.LBI943:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19442              		.loc 3 98 1 discriminator 1 view .LVU6571
 19443              	.LBB944:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19444              		.loc 3 100 3 discriminator 1 view .LVU6572
 19445              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
GAS LISTING /tmp/ccjg94QQ.s 			page 521


 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19446              		.loc 3 100 10 is_stmt 0 discriminator 1 view .LVU6573
 19447 0f93 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 19447      000000
 19448 0f9a 488D3D00 		lea	rdi, .LC40[rip]	#,
 19448      000000
 19449 0fa1 BA1A0000 		mov	edx, 26	#,
 19449      00
 19450 0fa6 BE010000 		mov	esi, 1	#,
 19450      00
 19451 0fab E8000000 		call	fwrite@PLT	#
 19451      00
 19452              	.LVL1201:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19453              		.loc 3 100 10 discriminator 1 view .LVU6574
 19454              	.LBE944:
 19455              	.LBE943:
1364:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 19456              		.loc 1 1364 82 is_stmt 1 discriminator 1 view .LVU6575
 19457 0fb0 498B3C24 		mov	rdi, QWORD PTR [r12]	#, *argv_159(D)
 19458 0fb4 E8000000 		call	usage	#
 19458      00
 19459              	.LVL1202:
 19460              	.LBE1099:
 19461              		.cfi_endproc
 19462              	.LFE86:
 19464              		.section	.rodata
 19465              		.align 16
 19468              	CSWTCH.127:
 19469 0000 9A999999 		.long	2576980378
 19470 0004 9999B93F 		.long	1069128089
 19471 0008 9A999999 		.long	2576980378
 19472 000c 9999C93F 		.long	1070176665
 19473 0010 9A999999 		.long	2576980378
 19474 0014 9999C93F 		.long	1070176665
 19475 0018 00000000 		.align 16
 19475      00000000 
 19478              	CSWTCH.126:
 19479 0020 00080000 		.quad	2048
 19479      00000000 
 19480 0028 00040000 		.quad	1024
 19480      00000000 
 19481 0030 40000000 		.quad	64
 19481      00000000 
 19482 0038 00000000 		.align 16
 19482      00000000 
 19485              	CSWTCH.125:
 19486 0040 20000000 		.quad	32
 19486      00000000 
 19487 0048 10000000 		.quad	16
 19487      00000000 
 19488 0050 04000000 		.quad	4
 19488      00000000 
 19489 0058 00000000 		.align 16
 19489      00000000 
 19492              	CSWTCH.124:
 19493 0060 10000000 		.quad	16
GAS LISTING /tmp/ccjg94QQ.s 			page 522


 19493      00000000 
 19494 0068 08000000 		.quad	8
 19494      00000000 
 19495 0070 04000000 		.quad	4
 19495      00000000 
 19496              		.globl	debug_hitpoint
 19497              		.bss
 19498              		.align 32
 19501              	debug_hitpoint:
 19502 0000 00000000 		.zero	40
 19502      00000000 
 19502      00000000 
 19502      00000000 
 19502      00000000 
 19503              		.globl	global_VECTORSTEP_FASTER
 19504              		.data
 19505              		.align 8
 19508              	global_VECTORSTEP_FASTER:
 19509 0000 80000000 		.quad	128
 19509      00000000 
 19510              		.globl	global_MEDIUMSTEP_FASTER
 19511              		.bss
 19512              		.align 8
 19515              	global_MEDIUMSTEP_FASTER:
 19516 0028 00000000 		.zero	8
 19516      00000000 
 19517              		.globl	global_SMALLSTEP_FASTER
 19518              		.align 8
 19521              	global_SMALLSTEP_FASTER:
 19522 0030 00000000 		.zero	8
 19522      00000000 
 19523              		.section	.rodata.cst32,"aM",@progbits,32
 19524              		.align 32
 19525              	.LC0:
 19526 0000 00000000 		.quad	0
 19526      00000000 
 19527 0008 01000000 		.quad	1
 19527      00000000 
 19528 0010 02000000 		.quad	2
 19528      00000000 
 19529 0018 03000000 		.quad	3
 19529      00000000 
 19530              		.align 32
 19531              	.LC1:
 19532 0020 08000000 		.quad	8
 19532      00000000 
 19533 0028 08000000 		.quad	8
 19533      00000000 
 19534 0030 08000000 		.quad	8
 19534      00000000 
 19535 0038 08000000 		.quad	8
 19535      00000000 
 19536              		.align 32
 19537              	.LC2:
 19538 0040 04000000 		.quad	4
 19538      00000000 
 19539 0048 04000000 		.quad	4
GAS LISTING /tmp/ccjg94QQ.s 			page 523


 19539      00000000 
 19540 0050 04000000 		.quad	4
 19540      00000000 
 19541 0058 04000000 		.quad	4
 19541      00000000 
 19542              		.align 32
 19543              	.LC3:
 19544 0060 3F000000 		.long	63
 19545 0064 3F000000 		.long	63
 19546 0068 3F000000 		.long	63
 19547 006c 3F000000 		.long	63
 19548 0070 3F000000 		.long	63
 19549 0074 3F000000 		.long	63
 19550 0078 3F000000 		.long	63
 19551 007c 3F000000 		.long	63
 19552              		.section	.rodata.cst8,"aM",@progbits,8
 19553              		.align 8
 19554              	.LC7:
 19555 0000 00000000 		.long	0
 19556 0004 0000F87F 		.long	2146959360
 19557              		.align 8
 19558              	.LC8:
 19559 0008 95D626E8 		.long	3894859413
 19560 000c 0B2E113E 		.long	1041313291
 19561              		.align 8
 19562              	.LC26:
 19563 0010 9A999999 		.long	2576980378
 19564 0014 9999B93F 		.long	1069128089
 19565              		.align 8
 19566              	.LC59:
 19567 0018 00000000 		.long	0
 19568 001c 00001440 		.long	1075052544
 19569              		.text
 19570              	.Letext0:
 19571              		.file 4 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h"
 19572              		.file 5 "/usr/include/x86_64-linux-gnu/bits/types.h"
 19573              		.file 6 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h"
 19574              		.file 7 "/usr/include/x86_64-linux-gnu/bits/types/FILE.h"
 19575              		.file 8 "/usr/include/stdio.h"
 19576              		.file 9 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h"
 19577              		.file 10 "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h"
 19578              		.file 11 "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h"
 19579              		.file 12 "/usr/include/stdint.h"
 19580              		.file 13 "/usr/include/time.h"
 19581              		.file 14 "/usr/include/math.h"
 19582              		.file 15 "/usr/include/stdlib.h"
 19583              		.file 16 "<built-in>"
 46062              		.section	.note.gnu.property,"a"
 46063              		.align 8
 46064 0000 04000000 		.long	 1f - 0f
 46065 0004 10000000 		.long	 4f - 1f
 46066 0008 05000000 		.long	 5
 46067              	0:
 46068 000c 474E5500 		.string	 "GNU"
 46069              	1:
 46070              		.align 8
 46071 0010 020000C0 		.long	 0xc0000002
GAS LISTING /tmp/ccjg94QQ.s 			page 524


 46072 0014 04000000 		.long	 3f - 2f
 46073              	2:
 46074 0018 03000000 		.long	 0x3
 46075              	3:
 46076 001c 00000000 		.align 8
 46077              	4:
GAS LISTING /tmp/ccjg94QQ.s 			page 525


DEFINED SYMBOLS
                            *ABS*:0000000000000000 sieve_extend.c
     /tmp/ccjg94QQ.s:86     .text:0000000000000000 extendSieve_smallSize
     /tmp/ccjg94QQ.s:19525  .rodata.cst32:0000000000000000 .LC0
     /tmp/ccjg94QQ.s:19531  .rodata.cst32:0000000000000020 .LC1
     /tmp/ccjg94QQ.s:19537  .rodata.cst32:0000000000000040 .LC2
     /tmp/ccjg94QQ.s:19543  .rodata.cst32:0000000000000060 .LC3
     /tmp/ccjg94QQ.s:1228   .text:00000000000006c0 extendSieve_shiftright_ivdep
     /tmp/ccjg94QQ.s:3232   .text:00000000000014f0 compare_tuning_result
     /tmp/ccjg94QQ.s:3258   .text:0000000000001510 setBitsTrue_largeRange_vector
     /tmp/ccjg94QQ.s:5131   .text:0000000000001ed0 extendSieve_aligned
     /tmp/ccjg94QQ.s:6020   .text:0000000000002450 extendSieve_shiftleft
     /tmp/ccjg94QQ.s:8988   .text:0000000000003750 show_primes.isra.0
     /tmp/ccjg94QQ.s:8983   .rodata.str1.1:0000000000000006 .LC5
     /tmp/ccjg94QQ.s:8981   .rodata.str1.1:0000000000000000 .LC4
     /tmp/ccjg94QQ.s:9395   .text:00000000000038f0 sieve
     /tmp/ccjg94QQ.s:19521  .bss:0000000000000030 global_SMALLSTEP_FASTER
     /tmp/ccjg94QQ.s:19515  .bss:0000000000000028 global_MEDIUMSTEP_FASTER
     /tmp/ccjg94QQ.s:19508  .data:0000000000000000 global_VECTORSTEP_FASTER
     /tmp/ccjg94QQ.s:13944  .text:0000000000004cc0 tune_benchmark
     /tmp/ccjg94QQ.s:19554  .rodata.cst8:0000000000000000 .LC7
     /tmp/ccjg94QQ.s:19558  .rodata.cst8:0000000000000008 .LC8
     /tmp/ccjg94QQ.s:14161  .text:0000000000004e00 shiftvec
     /tmp/ccjg94QQ.s:15323  .text:00000000000051c0 validatePrimeCount
     /tmp/ccjg94QQ.s:15304  .rodata.str1.8:0000000000000000 .LC9
     /tmp/ccjg94QQ.s:15310  .rodata.str1.1:0000000000000023 .LC11
     /tmp/ccjg94QQ.s:15314  .rodata.str1.8:00000000000000c0 .LC12
     /tmp/ccjg94QQ.s:15307  .rodata.str1.8:0000000000000058 .LC10
     /tmp/ccjg94QQ.s:15317  .rodata.str1.8:00000000000000f8 .LC13
     /tmp/ccjg94QQ.s:16577  .text:0000000000005950 usage
     /tmp/ccjg94QQ.s:16537  .rodata.str1.8:0000000000000148 .LC14
     /tmp/ccjg94QQ.s:16540  .rodata.str1.1:0000000000000031 .LC15
     /tmp/ccjg94QQ.s:16544  .rodata.str1.8:0000000000000168 .LC16
     /tmp/ccjg94QQ.s:16547  .rodata.str1.8:00000000000001a8 .LC17
     /tmp/ccjg94QQ.s:16550  .rodata.str1.8:00000000000001d8 .LC18
     /tmp/ccjg94QQ.s:16553  .rodata.str1.8:0000000000000220 .LC19
     /tmp/ccjg94QQ.s:16556  .rodata.str1.8:0000000000000250 .LC20
     /tmp/ccjg94QQ.s:16559  .rodata.str1.8:0000000000000290 .LC21
     /tmp/ccjg94QQ.s:16562  .rodata.str1.8:00000000000002d0 .LC22
     /tmp/ccjg94QQ.s:16565  .rodata.str1.8:0000000000000320 .LC23
     /tmp/ccjg94QQ.s:16568  .rodata.str1.8:0000000000000348 .LC24
     /tmp/ccjg94QQ.s:16571  .rodata.str1.8:0000000000000378 .LC25
     /tmp/ccjg94QQ.s:16908  .text.startup:0000000000000000 main
     /tmp/ccjg94QQ.s:16816  .rodata.str1.1:000000000000004a .LC28
     /tmp/ccjg94QQ.s:16818  .rodata.str1.1:0000000000000051 .LC29
     /tmp/ccjg94QQ.s:16822  .rodata.str1.1:0000000000000077 .LC31
     /tmp/ccjg94QQ.s:16829  .rodata.str1.1:000000000000007a .LC33
     /tmp/ccjg94QQ.s:16831  .rodata.str1.1:0000000000000093 .LC34
     /tmp/ccjg94QQ.s:16833  .rodata.str1.1:000000000000009b .LC35
     /tmp/ccjg94QQ.s:16842  .rodata.str1.1:00000000000000bb .LC38
     /tmp/ccjg94QQ.s:16861  .rodata.str1.1:000000000000013a .LC46
     /tmp/ccjg94QQ.s:16859  .rodata.str1.1:0000000000000121 .LC45
     /tmp/ccjg94QQ.s:16844  .rodata.str1.1:00000000000000d1 .LC39
     /tmp/ccjg94QQ.s:16848  .rodata.str1.1:00000000000000f3 .LC41
     /tmp/ccjg94QQ.s:16855  .rodata.str1.1:00000000000000f7 .LC43
     /tmp/ccjg94QQ.s:16857  .rodata.str1.1:0000000000000110 .LC44
     /tmp/ccjg94QQ.s:16863  .rodata.str1.1:000000000000014a .LC47
GAS LISTING /tmp/ccjg94QQ.s 			page 526


     /tmp/ccjg94QQ.s:19566  .rodata.cst8:0000000000000018 .LC59
     /tmp/ccjg94QQ.s:16896  .rodata.str1.8:0000000000000538 .LC60
     /tmp/ccjg94QQ.s:16814  .rodata.str1.1:000000000000003b .LC27
     /tmp/ccjg94QQ.s:16826  .rodata.str1.8:00000000000003b0 .LC32
     /tmp/ccjg94QQ.s:16902  .rodata.str1.1:000000000000019e .LC62
     /tmp/ccjg94QQ.s:16899  .rodata.str1.8:0000000000000580 .LC61
     /tmp/ccjg94QQ.s:19562  .rodata.cst8:0000000000000010 .LC26
     /tmp/ccjg94QQ.s:16876  .rodata.str1.1:0000000000000173 .LC52
     /tmp/ccjg94QQ.s:16873  .rodata.str1.8:0000000000000420 .LC51
     /tmp/ccjg94QQ.s:16880  .rodata.str1.8:00000000000004a8 .LC53
     /tmp/ccjg94QQ.s:16883  .rodata.str1.1:0000000000000178 .LC54
     /tmp/ccjg94QQ.s:16869  .rodata.str1.1:000000000000016e .LC50
     /tmp/ccjg94QQ.s:16885  .rodata.str1.1:0000000000000185 .LC55
     /tmp/ccjg94QQ.s:16887  .rodata.str1.1:000000000000018c .LC56
     /tmp/ccjg94QQ.s:16865  .rodata.str1.1:0000000000000151 .LC48
     /tmp/ccjg94QQ.s:16893  .rodata.str1.8:0000000000000500 .LC58
     /tmp/ccjg94QQ.s:16889  .rodata.str1.1:0000000000000190 .LC57
     /tmp/ccjg94QQ.s:19492  .rodata:0000000000000060 CSWTCH.124
     /tmp/ccjg94QQ.s:19485  .rodata:0000000000000040 CSWTCH.125
     /tmp/ccjg94QQ.s:19478  .rodata:0000000000000020 CSWTCH.126
     /tmp/ccjg94QQ.s:19468  .rodata:0000000000000000 CSWTCH.127
     /tmp/ccjg94QQ.s:16867  .rodata.str1.1:0000000000000164 .LC49
     /tmp/ccjg94QQ.s:16820  .rodata.str1.1:000000000000005b .LC30
     /tmp/ccjg94QQ.s:16839  .rodata.str1.8:00000000000003d8 .LC37
     /tmp/ccjg94QQ.s:16852  .rodata.str1.8:00000000000003f8 .LC42
     /tmp/ccjg94QQ.s:16835  .rodata.str1.1:00000000000000a2 .LC36
     /tmp/ccjg94QQ.s:16846  .rodata.str1.1:00000000000000d8 .LC40
     /tmp/ccjg94QQ.s:19501  .bss:0000000000000000 debug_hitpoint

UNDEFINED SYMBOLS
__stack_chk_fail
_GLOBAL_OFFSET_TABLE_
memcpy
__printf_chk
putchar
aligned_alloc
clock_gettime
free
puts
stderr
__fprintf_chk
fwrite
exit
__isoc99_sscanf
malloc
qsort
