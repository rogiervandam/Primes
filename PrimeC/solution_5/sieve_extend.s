GAS LISTING /tmp/ccr2dACi.s 			page 1


   1              		.file	"sieve_extend.c"
   2              		.intel_syntax noprefix
   3              	# GNU C17 (Ubuntu 9.4.0-1ubuntu1~20.04.1) version 9.4.0 (x86_64-linux-gnu)
   4              	#	compiled by GNU C version 9.4.0, GMP version 6.2.0, MPFR version 4.0.2, MPC version 1.1.0, isl ve
   5              	
   6              	# GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
   7              	# options passed:  -imultiarch x86_64-linux-gnu sieve_extend.c
   8              	# -march=skylake -mmmx -mno-3dnow -msse -msse2 -msse3 -mssse3 -mno-sse4a
   9              	# -mcx16 -msahf -mmovbe -maes -mno-sha -mpclmul -mpopcnt -mabm -mno-lwp
  10              	# -mfma -mno-fma4 -mno-xop -mbmi -mno-sgx -mbmi2 -mno-pconfig -mno-wbnoinvd
  11              	# -mno-tbm -mavx2 -msse4.2 -msse4.1 -mlzcnt -mrtm -mhle -mrdrnd -mf16c
  12              	# -mfsgsbase -mrdseed -mprfchw -madx -mfxsr -mxsave -mxsaveopt -mno-avx512f
  13              	# -mno-avx512er -mno-avx512cd -mno-avx512pf -mno-prefetchwt1 -mclflushopt
  14              	# -mxsavec -mxsaves -mno-avx512dq -mno-avx512bw -mno-avx512vl
  15              	# -mno-avx512ifma -mno-avx512vbmi -mno-avx5124fmaps -mno-avx5124vnniw
  16              	# -mno-clwb -mno-mwaitx -mno-clzero -mno-pku -mno-rdpid -mno-gfni
  17              	# -mno-shstk -mno-avx512vbmi2 -mno-avx512vnni -mno-vaes -mno-vpclmulqdq
  18              	# -mno-avx512bitalg -mno-avx512vpopcntdq -mno-movdiri -mno-movdir64b
  19              	# -mno-waitpkg -mno-cldemote -mno-ptwrite -mtune=intel -masm=intel
  20              	# -malign-data=cacheline -mavx -g -Ofast -funroll-all-loops
  21              	# -fno-asynchronous-unwind-tables -fno-exceptions -fverbose-asm
  22              	# -fstack-protector-strong -Wformat -Wformat-security
  23              	# -fstack-clash-protection -fcf-protection
  24              	# options enabled:  -fPIC -fPIE -faggressive-loop-optimizations
  25              	# -falign-functions -falign-jumps -falign-labels -falign-loops
  26              	# -fassociative-math -fassume-phsa -fauto-inc-dec -fbranch-count-reg
  27              	# -fcaller-saves -fcode-hoisting -fcombine-stack-adjustments -fcommon
  28              	# -fcompare-elim -fcprop-registers -fcrossjumping -fcse-follow-jumps
  29              	# -fcx-limited-range -fdefer-pop -fdelete-null-pointer-checks
  30              	# -fdevirtualize -fdevirtualize-speculatively -fdwarf2-cfi-asm
  31              	# -fearly-inlining -feliminate-unused-debug-types -fexpensive-optimizations
  32              	# -ffinite-math-only -fforward-propagate -ffp-int-builtin-inexact
  33              	# -ffunction-cse -fgcse -fgcse-after-reload -fgcse-lm -fgnu-runtime
  34              	# -fgnu-unique -fguess-branch-probability -fhoist-adjacent-loads -fident
  35              	# -fif-conversion -fif-conversion2 -findirect-inlining -finline
  36              	# -finline-atomics -finline-functions -finline-functions-called-once
  37              	# -finline-small-functions -fipa-bit-cp -fipa-cp -fipa-cp-clone -fipa-icf
  38              	# -fipa-icf-functions -fipa-icf-variables -fipa-profile -fipa-pure-const
  39              	# -fipa-ra -fipa-reference -fipa-reference-addressable -fipa-sra
  40              	# -fipa-stack-alignment -fipa-vrp -fira-hoist-pressure
  41              	# -fira-share-save-slots -fira-share-spill-slots
  42              	# -fisolate-erroneous-paths-dereference -fivopts -fkeep-static-consts
  43              	# -fleading-underscore -flifetime-dse -floop-interchange
  44              	# -floop-unroll-and-jam -flra-remat -flto-odr-type-merging
  45              	# -fmerge-constants -fmerge-debug-strings -fmove-loop-invariants
  46              	# -fomit-frame-pointer -foptimize-sibling-calls -foptimize-strlen
  47              	# -fpartial-inlining -fpeel-loops -fpeephole -fpeephole2 -fplt
  48              	# -fpredictive-commoning -fprefetch-loop-arrays -freciprocal-math -free
  49              	# -freg-struct-return -frename-registers -freorder-blocks
  50              	# -freorder-blocks-and-partition -freorder-functions -frerun-cse-after-loop
  51              	# -fsched-critical-path-heuristic -fsched-dep-count-heuristic
  52              	# -fsched-group-heuristic -fsched-interblock -fsched-last-insn-heuristic
  53              	# -fsched-rank-heuristic -fsched-spec -fsched-spec-insn-heuristic
  54              	# -fsched-stalled-insns-dep -fschedule-fusion -fschedule-insns2
  55              	# -fsemantic-interposition -fshow-column -fshrink-wrap
  56              	# -fshrink-wrap-separate -fsplit-ivs-in-unroller -fsplit-loops
  57              	# -fsplit-paths -fsplit-wide-types -fssa-backprop -fssa-phiopt
GAS LISTING /tmp/ccr2dACi.s 			page 2


  58              	# -fstack-clash-protection -fstack-protector-strong -fstdarg-opt
  59              	# -fstore-merging -fstrict-aliasing -fstrict-volatile-bitfields
  60              	# -fsync-libcalls -fthread-jumps -ftoplevel-reorder -ftree-bit-ccp
  61              	# -ftree-builtin-call-dce -ftree-ccp -ftree-ch -ftree-coalesce-vars
  62              	# -ftree-copy-prop -ftree-cselim -ftree-dce -ftree-dominator-opts
  63              	# -ftree-dse -ftree-forwprop -ftree-fre -ftree-loop-distribute-patterns
  64              	# -ftree-loop-distribution -ftree-loop-if-convert -ftree-loop-im
  65              	# -ftree-loop-ivcanon -ftree-loop-optimize -ftree-loop-vectorize
  66              	# -ftree-parallelize-loops= -ftree-partial-pre -ftree-phiprop -ftree-pre
  67              	# -ftree-pta -ftree-reassoc -ftree-scev-cprop -ftree-sink
  68              	# -ftree-slp-vectorize -ftree-slsr -ftree-sra -ftree-switch-conversion
  69              	# -ftree-tail-merge -ftree-ter -ftree-vrp -funit-at-a-time
  70              	# -funroll-all-loops -funroll-loops -funsafe-math-optimizations
  71              	# -funswitch-loops -fvar-tracking -fvar-tracking-assignments -fverbose-asm
  72              	# -fversion-loops-for-strides -fweb -fzero-initialized-in-bss
  73              	# -m128bit-long-double -m64 -m80387 -mabm -maccumulate-outgoing-args -madx
  74              	# -maes -malign-stringops -mavx -mavx2 -mbmi -mbmi2 -mclflushopt -mcx16
  75              	# -mf16c -mfancy-math-387 -mfma -mfp-ret-in-387 -mfsgsbase -mfxsr -mglibc
  76              	# -mhle -mlong-double-80 -mlzcnt -mmmx -mmovbe -mpclmul -mpopcnt -mprfchw
  77              	# -mpush-args -mrdrnd -mrdseed -mred-zone -mrtm -msahf -msse -msse2 -msse3
  78              	# -msse4 -msse4.1 -msse4.2 -mssse3 -mstv -mtls-direct-seg-refs -mvzeroupper
  79              	# -mxsave -mxsavec -mxsaveopt -mxsaves
  80              	
  81              		.text
  82              	.Ltext0:
  83              		.cfi_sections	.debug_frame
  84              		.p2align 4
  86              	extendSieve_smallSize:
  87              	.LVL0:
  88              	.LFB65:
  89              		.file 1 "sieve_extend.c"
   1:sieve_extend.c **** #include <stdio.h>
   2:sieve_extend.c **** #include <stdlib.h>
   3:sieve_extend.c **** #include <stdint.h>
   4:sieve_extend.c **** #include <time.h>
   5:sieve_extend.c **** #include <math.h>
   6:sieve_extend.c **** #include <string.h>
   7:sieve_extend.c **** 
   8:sieve_extend.c **** //add debug in front of a line to only compile it if the value below is set to 1 (or !=0)
   9:sieve_extend.c **** #define option_runonce 0
  10:sieve_extend.c **** #define debug if (option_runonce)
  11:sieve_extend.c **** #define debug2 if (option_runonce>=2)
  12:sieve_extend.c **** 
  13:sieve_extend.c **** #define default_sieve_limit 1000000
  14:sieve_extend.c **** #define default_blocksize (32*1024*8-1024)
  15:sieve_extend.c **** #define default_sieve_duration 5
  16:sieve_extend.c **** #define default_sample_duration 0.1
  17:sieve_extend.c **** #define default_sample_max 5
  18:sieve_extend.c **** #define default_verbose_level 1
  19:sieve_extend.c **** #define default_tune_level 0
  20:sieve_extend.c **** #define default_check_level 1
  21:sieve_extend.c **** #define default_show_primes_on_error 100
  22:sieve_extend.c **** #define default_showMaxFactor (0 || option_runonce?100:0)
  23:sieve_extend.c **** #define anticiped_cache_line_bytesize 128
  24:sieve_extend.c **** 
  25:sieve_extend.c **** // 64 bit
  26:sieve_extend.c **** #define TYPE uint64_t
GAS LISTING /tmp/ccr2dACi.s 			page 3


  27:sieve_extend.c **** 
  28:sieve_extend.c **** // calculate the rest dynamically
  29:sieve_extend.c **** #define counter_t TYPE
  30:sieve_extend.c **** #define bitshift_t TYPE
  31:sieve_extend.c **** #define bitword_t uint64_t
  32:sieve_extend.c **** 
  33:sieve_extend.c **** #define WORD_SIZE (sizeof(bitword_t)*8)
  34:sieve_extend.c **** #define WORD_SIZE_counter ((counter_t)WORD_SIZE)
  35:sieve_extend.c **** #define WORD_SIZE_bitshift ((bitshift_t)WORD_SIZE)
  36:sieve_extend.c **** #define pow(base,pow) (pow*((base>>pow)&1U))
  37:sieve_extend.c **** //#define SHIFT ((bitshift_t)(pow(WORD_SIZE,1)+pow(WORD_SIZE,2)+pow(WORD_SIZE,3)+pow(WORD_SIZE,4)+p
  38:sieve_extend.c **** #define SHIFT_WORD ((bitshift_t)(pow(WORD_SIZE,1)+pow(WORD_SIZE,2)+pow(WORD_SIZE,3)+pow(WORD_SIZE,4
  39:sieve_extend.c **** 
  40:sieve_extend.c **** #define VECTOR_ELEMENTS 4
  41:sieve_extend.c **** #define VECTOR_SIZE_bytes (sizeof(bitword_t)*VECTOR_ELEMENTS)
  42:sieve_extend.c **** #define VECTOR_SIZE_counter (VECTOR_SIZE_bytes*8)
  43:sieve_extend.c **** #define VECTOR_SIZE (VECTOR_SIZE_bytes*8)
  44:sieve_extend.c **** #define SHIFT_VECTOR ((bitshift_t)(pow(VECTOR_SIZE,1)+pow(VECTOR_SIZE,2)+pow(VECTOR_SIZE,3)+pow(VEC
  45:sieve_extend.c **** 
  46:sieve_extend.c **** typedef bitword_t bitvector_t __attribute__ ((vector_size(VECTOR_SIZE_bytes)));
  47:sieve_extend.c **** 
  48:sieve_extend.c **** // globals for tuning
  49:sieve_extend.c **** counter_t global_SMALLSTEP_FASTER = 0;
  50:sieve_extend.c **** counter_t global_MEDIUMSTEP_FASTER = 0;
  51:sieve_extend.c **** counter_t global_VECTORSTEP_FASTER = 128;
  52:sieve_extend.c **** 
  53:sieve_extend.c **** #define SAFE_SHIFTBIT (bitshift_t)1U
  54:sieve_extend.c **** #define SAFE_ZERO  (bitword_t)0U
  55:sieve_extend.c **** #define BITWORD_SHIFTBIT (bitword_t)1U
  56:sieve_extend.c **** #define WORDMASK ((~SAFE_ZERO)>>(WORD_SIZE_bitshift-SHIFT_WORD))
  57:sieve_extend.c **** #define VECTORMASK ((~SAFE_ZERO)>>(WORD_SIZE_bitshift-SHIFT_VECTOR))
  58:sieve_extend.c **** // #define SMALLSTEP_FASTER ((counter_t)0)
  59:sieve_extend.c **** // #define MEDIUMSTEP_FASTER ((counter_t)16)
  60:sieve_extend.c **** // #define VECTORSTEP_FASTER ((counter_t)96)
  61:sieve_extend.c **** 
  62:sieve_extend.c **** #define SMALLSTEP_FASTER ((counter_t)global_SMALLSTEP_FASTER)
  63:sieve_extend.c **** #define MEDIUMSTEP_FASTER ((counter_t)global_MEDIUMSTEP_FASTER)
  64:sieve_extend.c **** #define VECTORSTEP_FASTER ((counter_t)global_VECTORSTEP_FASTER)
  65:sieve_extend.c **** 
  66:sieve_extend.c **** #define wordindex(index) (((counter_t)index) >> (bitshift_t)SHIFT_WORD)
  67:sieve_extend.c **** #define wordend(index) ((counter_t)index|WORDMASK)
  68:sieve_extend.c **** #define vectorindex(index) (((counter_t)index) >> (bitshift_t)SHIFT_VECTOR)
  69:sieve_extend.c **** #define vectorstart(index) (((counter_t)index) & (counter_t)~VECTORMASK)
  70:sieve_extend.c **** 
  71:sieve_extend.c **** // modern processors do a & over the shiftssize, so we only have to do that ourselve when using the
  72:sieve_extend.c **** #define bitindex(index) ((bitshift_t)(index))
  73:sieve_extend.c **** // #define bitindex(index) ((bitshift_t)(index)&((bitword_t)(WORD_SIZE-1)))
  74:sieve_extend.c **** //#define bitindex_calc(index) ((bitshift_t)(index)&((bitshift_t)(WORD_SIZE_bitshift-SAFE_SHIFTBIT)
  75:sieve_extend.c **** #define bitindex_calc(index) ((bitshift_t)(index)&((bitshift_t)(WORDMASK)))
  76:sieve_extend.c **** #define  markmask(index) (BITWORD_SHIFTBIT << bitindex(index))
  77:sieve_extend.c **** #define  markmask_calc(index) (BITWORD_SHIFTBIT << bitindex_calc(index))
  78:sieve_extend.c **** // #define chopmask(index) ((SAFE_SHIFTBIT << bitindex(index))-SAFE_SHIFTBIT)
  79:sieve_extend.c **** // #define chopmask2(index) (((bitword_t)2U << bitindex(index))-SAFE_SHIFTBIT)
  80:sieve_extend.c **** #define chopmask(index) (~SAFE_ZERO >> (WORD_SIZE-1-bitindex_calc(index)))
  81:sieve_extend.c **** #define keepmask(index) (~SAFE_ZERO << (bitindex_calc(index)))
  82:sieve_extend.c **** #define chopmask2(index) chopmask(index)
  83:sieve_extend.c **** #define real(bit) (bit*2+1)
GAS LISTING /tmp/ccr2dACi.s 			page 4


  84:sieve_extend.c **** 
  85:sieve_extend.c **** #define min(a,b) ((a<b) ? a : b)
  86:sieve_extend.c **** #define uintsafeminus(a,b) ((a>b)?(a-b):0)
  87:sieve_extend.c **** 
  88:sieve_extend.c **** #define likely(x)       (__builtin_expect((x),1))
  89:sieve_extend.c **** #define unlikely(x)     (__builtin_expect((x),0))
  90:sieve_extend.c **** 
  91:sieve_extend.c **** counter_t debug_hitpoint[5] = { 0,0,0,0,0};
  92:sieve_extend.c **** 
  93:sieve_extend.c **** struct sieve_state {
  94:sieve_extend.c ****     bitword_t* bitarray;
  95:sieve_extend.c ****     counter_t  bits;
  96:sieve_extend.c ****     counter_t  size;
  97:sieve_extend.c **** };
  98:sieve_extend.c **** 
  99:sieve_extend.c **** #include "debugtools.h"
 100:sieve_extend.c **** 
 101:sieve_extend.c **** // use cache lines as much as possible - alignment might be key
 102:sieve_extend.c **** #define ceiling(x,y) (((x) + (y) - 1) / (y)) // Return the smallest multiple N of y such that:  x <
 103:sieve_extend.c **** static struct sieve_state *create_sieve(counter_t size) {
 104:sieve_extend.c ****     struct sieve_state *sieve = aligned_alloc(8, sizeof(struct sieve_state));
 105:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize*8) * anticiped_cache
 106:sieve_extend.c **** 
 107:sieve_extend.c ****     sieve->bitarray = aligned_alloc((size_t)anticiped_cache_line_bytesize, (size_t)memSize );
 108:sieve_extend.c ****     sieve->bits     = size >> 1;
 109:sieve_extend.c ****     sieve->size     = size;
 110:sieve_extend.c **** 
 111:sieve_extend.c ****     // moved clearing the sieve with 0 to the sieve_block_extend
 112:sieve_extend.c ****     // it gave weird malloc problems at this point
 113:sieve_extend.c ****     return sieve;
 114:sieve_extend.c **** }
 115:sieve_extend.c **** 
 116:sieve_extend.c **** static void delete_sieve(struct sieve_state *sieve) {
 117:sieve_extend.c ****     free(sieve->bitarray);
 118:sieve_extend.c ****     free(sieve);
 119:sieve_extend.c **** }
 120:sieve_extend.c **** 
 121:sieve_extend.c **** // not much performance gain at smaller sieves, but its's nice to have an implementation
 122:sieve_extend.c **** static inline counter_t searchBitFalse(bitword_t* bitarray, register counter_t index) {
 123:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 125:sieve_extend.c **** }
 126:sieve_extend.c **** 
 127:sieve_extend.c **** // not much performance gain at smaller sieves, but its's nice to have an implementation
 128:sieve_extend.c **** static inline counter_t searchBitFalse_longRange(bitword_t* bitarray, register counter_t index) {
 129:sieve_extend.c ****     // return searchBitFalse(bitarray, index);
 130:sieve_extend.c **** 
 131:sieve_extend.c ****    register counter_t index_word = wordindex(index);
 132:sieve_extend.c ****    bitshift_t index_bit  = bitindex_calc(index);
 133:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 134:sieve_extend.c ****    index += distance;
 135:sieve_extend.c ****    distance += index_bit;
 136:sieve_extend.c **** 
 137:sieve_extend.c ****    while unlikely(distance == WORD_SIZE_bitshift) { // to prevent a bug from optimzer
 138:sieve_extend.c ****        index_word++;
 139:sieve_extend.c ****        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 140:sieve_extend.c ****        index += distance;
GAS LISTING /tmp/ccr2dACi.s 			page 5


 141:sieve_extend.c ****    }
 142:sieve_extend.c **** 
 143:sieve_extend.c ****    return index;
 144:sieve_extend.c **** }
 145:sieve_extend.c **** 
 146:sieve_extend.c **** 
 147:sieve_extend.c **** static void inline applyMask(bitword_t* __restrict bitarray, const counter_t step, const counter_t 
 148:sieve_extend.c **** //#if __APPLE__
 149:sieve_extend.c **** //   register const counter_t step_2 = step * 2;
 150:sieve_extend.c **** //   register const counter_t step_3 = step * 3;
 151:sieve_extend.c **** //   register const counter_t step_4 = step * 4;
 152:sieve_extend.c **** //   register const counter_t range_stop_word = wordindex(range_stop);
 153:sieve_extend.c **** //   const counter_t loop_stop_word = (range_stop_word > step_3) ? (range_stop_word - step_3) : (co
 154:sieve_extend.c **** //
 155:sieve_extend.c **** //   #pragma ivdep
 156:sieve_extend.c **** //   for (;index_word < loop_stop_word;  index_word += step_4) {
 157:sieve_extend.c **** //       bitarray[index_word         ] |= mask;
 158:sieve_extend.c **** //       bitarray[index_word + step  ] |= mask;
 159:sieve_extend.c **** //       bitarray[index_word + step_2] |= mask;
 160:sieve_extend.c **** //       bitarray[index_word + step_3] |= mask;
 161:sieve_extend.c **** //   }
 162:sieve_extend.c **** //
 163:sieve_extend.c **** //   #pragma ivdep
 164:sieve_extend.c **** //   while (index_word < range_stop_word) {
 165:sieve_extend.c **** //       bitarray[index_word] |= mask;
 166:sieve_extend.c **** //       index_word += step;
 167:sieve_extend.c **** //   }
 168:sieve_extend.c **** //
 169:sieve_extend.c **** //   if (index_word == wordindex(range_stop)) {
 170:sieve_extend.c **** //       bitarray[wordindex(range_stop)] |= (mask & chopmask2(range_stop));
 171:sieve_extend.c **** //   }
 172:sieve_extend.c **** //#endif
 173:sieve_extend.c **** //    ALTERNATIVE using pointers is faster in gcc
 174:sieve_extend.c **** //#if __linux__
 175:sieve_extend.c ****    const counter_t range_stop_word = wordindex(range_stop);
 176:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 177:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 178:sieve_extend.c **** 
 179:sieve_extend.c ****   #pragma unroll
 180:sieve_extend.c ****    #pragma ivdep
 181:sieve_extend.c ****    while likely(index_ptr < fast_loop_ptr) {
 182:sieve_extend.c ****        *index_ptr |= mask;
 183:sieve_extend.c ****        index_ptr+=step;
 184:sieve_extend.c ****        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 186:sieve_extend.c ****        *index_ptr |= mask;
 187:sieve_extend.c ****        index_ptr+=step;
 188:sieve_extend.c ****        *index_ptr |= mask;
 189:sieve_extend.c ****        index_ptr+=step;
 190:sieve_extend.c ****        *index_ptr |= mask;
 191:sieve_extend.c ****        index_ptr+=step;
 192:sieve_extend.c ****    }
 193:sieve_extend.c **** 
 194:sieve_extend.c ****    const register bitword_t* __restrict range_stop_ptr = &bitarray[(range_stop_word)];
 195:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 196:sieve_extend.c ****        *index_ptr |= mask;
 197:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/ccr2dACi.s 			page 6


 198:sieve_extend.c ****    }
 199:sieve_extend.c **** 
 200:sieve_extend.c ****    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range_stop_ptr, depending o
 201:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 202:sieve_extend.c ****    }
 203:sieve_extend.c **** 
 204:sieve_extend.c **** //    const counter_t range_stop_word = wordindex(range_stop);
 205:sieve_extend.c **** //    bitword_t* __restrict index_ptr = &bitarray[index_word];
 206:sieve_extend.c **** //    bitword_t* __restrict fast_loop_ptr = &bitarray[((range_stop_word>step*4) ? (range_stop_word 
 207:sieve_extend.c **** //    bitword_t* __restrict range_stop_ptr = &bitarray[(range_stop_word)];//>step_4) ? (range_stop_
 208:sieve_extend.c **** //    const int loop_iterations = ((range_stop_word - index_word) / (step*4));
 209:sieve_extend.c **** 
 210:sieve_extend.c **** //      debug printf("..%ju loop iterations for step %ju range in words (%ju - %ju)\n",(uintmax_t)l
 211:sieve_extend.c **** 
 212:sieve_extend.c **** //     #pragma unroll 1
 213:sieve_extend.c **** //    #pragma ivdep
 214:sieve_extend.c **** //    for ( int i=0; i < loop_iterations; i++) {
 215:sieve_extend.c **** //        *(index_ptr) |= mask;
 216:sieve_extend.c **** //        *(index_ptr+step) |= mask;
 217:sieve_extend.c **** //        *(index_ptr+2*step) |= mask;
 218:sieve_extend.c **** //        *(index_ptr+3*step) |= mask;
 219:sieve_extend.c **** //        index_ptr += 4*step;
 220:sieve_extend.c **** //    }
 221:sieve_extend.c **** 
 222:sieve_extend.c **** //    while ( index_ptr < range_stop_ptr) {
 223:sieve_extend.c **** //        *index_ptr |= mask;
 224:sieve_extend.c **** //        index_ptr+=step;
 225:sieve_extend.c **** //    }
 226:sieve_extend.c **** 
 227:sieve_extend.c **** //    if (index_ptr == range_stop_ptr) {
 228:sieve_extend.c **** //       *range_stop_ptr |= (mask & chopmask(range_stop));
 229:sieve_extend.c **** //    }
 230:sieve_extend.c **** //#endif
 231:sieve_extend.c **** }
 232:sieve_extend.c **** 
 233:sieve_extend.c **** // set bits by creating a pattern and then extending it to word and range size
 234:sieve_extend.c **** static void inline setBitsTrue_smallStep(bitword_t* __restrict bitarray, const counter_t range_star
 235:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using smallstep (%ju occurances)
 236:sieve_extend.c **** 
 237:sieve_extend.c ****     // build the pattern in a word
 238:sieve_extend.c **** 	register bitword_t pattern = BITWORD_SHIFTBIT;
 239:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; patternsize += patternsi
 240:sieve_extend.c ****         pattern |= (pattern << patternsize);
 241:sieve_extend.c **** 
 242:sieve_extend.c ****     // debug if (step==13) { printf("Before\n"); dump_bitarray(bitarray,10); }
 243:sieve_extend.c ****     
 244:sieve_extend.c ****     // initialize loop variables and stop if this is it
 245:sieve_extend.c ****     const counter_t range_stop_word = wordindex(range_stop);
 246:sieve_extend.c ****     register counter_t range_start_word = wordindex(range_start);
 247:sieve_extend.c ****      if (range_start_word >= range_stop_word) { // shortcut
 248:sieve_extend.c ****        bitarray[range_start_word] |= (pattern << bitindex(range_start)) & chopmask(range_stop);
 249:sieve_extend.c ****         //  debug if (step==13) { printf("After\n"); dump_bitarray(bitarray,10); }
 250:sieve_extend.c ****        return;
 251:sieve_extend.c ****     }
 252:sieve_extend.c ****     
 253:sieve_extend.c ****     bitarray[range_start_word] |= (pattern << bitindex(range_start));
 254:sieve_extend.c **** 
GAS LISTING /tmp/ccr2dACi.s 			page 7


 255:sieve_extend.c ****    // from now on, we are before range_stop_word
 256:sieve_extend.c ****    // first word is special, because it should not set bits before the range_start_bit
 257:sieve_extend.c ****    register bitshift_t pattern_size = WORD_SIZE_bitshift - (WORD_SIZE_bitshift % step);
 258:sieve_extend.c ****    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 259:sieve_extend.c ****    register bitshift_t shift = (bitindex_calc(range_start))%step ;
 260:sieve_extend.c ****    counter_t loop_range = range_stop_word - range_start_word;
 261:sieve_extend.c ****    #pragma unroll
 262:sieve_extend.c ****    #pragma ivdep
 263:sieve_extend.c ****    for (counter_t i=1; i <= loop_range; i++) {
 264:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 265:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 266:sieve_extend.c **** 
 267:sieve_extend.c ****         // bitarray[range_start_word+i] |=  (pattern >> (pattern_size-((shift+i*pattern_shift) % st
 268:sieve_extend.c ****    }
 269:sieve_extend.c ****    bitarray[range_stop_word] &= chopmask(range_stop);
 270:sieve_extend.c **** 
 271:sieve_extend.c **** //    for(counter_t check=range_start; check<=range_stop; check+=step) {
 272:sieve_extend.c **** //         if (!(bitarray[wordindex(check)] & markmask(check))) {
 273:sieve_extend.c **** //             printf("Bit %ju not set\n",check);
 274:sieve_extend.c **** //             dump_bitarray(bitarray,4);
 275:sieve_extend.c **** //             printWord(pattern); printf("\n");
 276:sieve_extend.c **** //             exit(0);
 277:sieve_extend.c **** //         }
 278:sieve_extend.c **** //    }
 279:sieve_extend.c **** 
 280:sieve_extend.c ****     // pattern = (pattern << (bitindex_calc(range_start) % step)); // correct for inital offset
 281:sieve_extend.c ****     // const register bitshift_t pattern_shift = WORD_SIZE_bitshift % step;
 282:sieve_extend.c ****     // const register bitshift_t pattern_shift_flipped = WORD_SIZE_bitshift - pattern_shift - patte
 283:sieve_extend.c ****     // const register counter_t loop_range = range_stop_word - range_start_word;
 284:sieve_extend.c ****     // #pragma unroll
 285:sieve_extend.c ****     // #pragma ivdep
 286:sieve_extend.c ****     // for (counter_t i=1; i <= loop_range; i++) {
 287:sieve_extend.c ****     //     pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 288:sieve_extend.c ****     //     bitarray[range_start_word+i] |= pattern;
 289:sieve_extend.c ****     // }
 290:sieve_extend.c ****     // bitarray[range_stop_word] &= chopmask(range_stop);
 291:sieve_extend.c **** }
 292:sieve_extend.c **** 
 293:sieve_extend.c **** // Medium steps could be within the same word (e.g. less than 64 bits apart).
 294:sieve_extend.c **** // By joining the masks and then writing to memory, we might save some time.
 295:sieve_extend.c **** // This is especially true for small steps over long ranges
 296:sieve_extend.c **** // but it needs tuning, because there is some overhead of checking if the next step is in the same 
 297:sieve_extend.c **** static void  setBitsTrue_mediumStep(bitword_t* __restrict bitarray, const counter_t range_start, co
 298:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 299:sieve_extend.c **** 
 300:sieve_extend.c ****     if (range_stop_unique > range_stop) { // the range will not repeat itself; no need to try to re
 301:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-unique (%ju
 302:sieve_extend.c **** 
 303:sieve_extend.c ****         #pragma ivdep
 304:sieve_extend.c ****         for (register counter_t index = range_start; index <= range_stop;) {
 305:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 306:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 307:sieve_extend.c ****             #pragma ivdep
 308:sieve_extend.c ****             do {
 309:sieve_extend.c ****                 mask |= markmask(index);
 310:sieve_extend.c ****                 index += step;
 311:sieve_extend.c ****             } while (index_word == wordindex(index));
GAS LISTING /tmp/ccr2dACi.s 			page 8


 312:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 313:sieve_extend.c ****             //     mask |= markmask(index);
 314:sieve_extend.c ****             bitarray[index_word] |= mask;
 315:sieve_extend.c ****         }
 316:sieve_extend.c ****     }
 317:sieve_extend.c ****     else { // this mask will reoccur at a interval of step words -> fill mask and reapply as a inte
 318:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-repeat (%ju
 319:sieve_extend.c ****         
 320:sieve_extend.c ****         #pragma ivdep
 321:sieve_extend.c ****         for (register counter_t index = range_start; index <= range_stop_unique;) {
 322:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 323:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 324:sieve_extend.c ****             #pragma ivdep
 325:sieve_extend.c ****             do {
 326:sieve_extend.c ****                 mask |= markmask(index);
 327:sieve_extend.c ****                 index += step;
 328:sieve_extend.c ****             } while (index_word == wordindex(index));
 329:sieve_extend.c ****             // #pragma ivdep
 330:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 331:sieve_extend.c ****             //     mask |= markmask(index);
 332:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 333:sieve_extend.c ****         }
 334:sieve_extend.c ****     }
 335:sieve_extend.c **** }
 336:sieve_extend.c **** 
 337:sieve_extend.c **** // small ranges (< WORD_SIZE * step) mean the mask is unique
 338:sieve_extend.c **** static inline void setBitsTrue_largeSteps(bitword_t* __restrict bitarray, const counter_t range_sta
 339:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largesteps (%ju occurances
 340:sieve_extend.c ****     
 341:sieve_extend.c ****     #pragma unroll
 342:sieve_extend.c ****     #pragma ivdep
 343:sieve_extend.c ****     for (counter_t index = range_start; index <= range_stop; index += step) {
 344:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 345:sieve_extend.c ****     }
 346:sieve_extend.c **** 
 347:sieve_extend.c **** //    counter_t loop_iterations = (range_stop - range_start) / step;
 348:sieve_extend.c **** //    #pragma unroll
 349:sieve_extend.c **** //     #pragma ivdep
 350:sieve_extend.c **** //     for (register counter_t i = 0; i <= loop_iterations; i++) {
 351:sieve_extend.c **** //         bitarray[wordindex(range_start+i*step)] |= markmask(range_start+i*step);
 352:sieve_extend.c **** //     }
 353:sieve_extend.c **** }
 354:sieve_extend.c **** 
 355:sieve_extend.c **** // small ranges (< WORD_SIZE * step) mean the mask is unique
 356:sieve_extend.c **** static void setBitsTrue_race(bitword_t* bitarray, counter_t index1, counter_t index2, const counter
 357:sieve_extend.c ****     debug printf("Setting bits step %ju and %ju in %ju bit range (%ju-%ju) using race (%ju occuranc
 358:sieve_extend.c **** 
 359:sieve_extend.c ****     counter_t index1_word = wordindex(index1);
 360:sieve_extend.c ****     counter_t index2_word = wordindex(index2);
 361:sieve_extend.c ****     
 362:sieve_extend.c ****     while (1) {
 363:sieve_extend.c ****         if (index1_word == index2_word) {
 364:sieve_extend.c ****             bitword_t mask = SAFE_ZERO;
 365:sieve_extend.c ****             counter_t index_word = index1_word;
 366:sieve_extend.c ****             do {
 367:sieve_extend.c ****                 mask |= markmask(index1);
 368:sieve_extend.c ****                 index1 += step1;
GAS LISTING /tmp/ccr2dACi.s 			page 9


 369:sieve_extend.c ****                 index1_word = wordindex(index1);
 370:sieve_extend.c ****             } while (index1_word == index_word);
 371:sieve_extend.c ****             do {
 372:sieve_extend.c ****                 mask |= markmask(index2);
 373:sieve_extend.c ****                 index2 += step2;
 374:sieve_extend.c ****                 index2_word = wordindex(index2);
 375:sieve_extend.c ****             } while (index2_word == index_word);
 376:sieve_extend.c ****             bitarray[index_word] |= mask;
 377:sieve_extend.c ****         }
 378:sieve_extend.c **** 
 379:sieve_extend.c ****         // because step is larger, index2 is the most likely to get out of bounds first
 380:sieve_extend.c ****         if (index2 > range_stop) {
 381:sieve_extend.c ****             while (index1 <= range_stop) {
 382:sieve_extend.c ****                 bitarray[wordindex(index1)] |= markmask(index1);
 383:sieve_extend.c ****                 index1 += step1;
 384:sieve_extend.c ****             }
 385:sieve_extend.c ****             return;
 386:sieve_extend.c ****         }
 387:sieve_extend.c **** 
 388:sieve_extend.c ****         if (index1 > range_stop) {
 389:sieve_extend.c ****             while (index2 <= range_stop) {
 390:sieve_extend.c ****                 bitarray[wordindex(index2)] |= markmask(index2);
 391:sieve_extend.c ****                 index2 += step2;
 392:sieve_extend.c ****             }
 393:sieve_extend.c ****             return;
 394:sieve_extend.c ****         }
 395:sieve_extend.c **** 
 396:sieve_extend.c ****         while (index1_word < index2_word) {
 397:sieve_extend.c ****             bitarray[index1_word] |= markmask(index1);
 398:sieve_extend.c ****             index1 += step1;
 399:sieve_extend.c ****             index1_word = wordindex(index1);
 400:sieve_extend.c ****         }
 401:sieve_extend.c ****         
 402:sieve_extend.c ****         while (index2_word < index1_word){
 403:sieve_extend.c ****             bitarray[index2_word] |= markmask(index2);
 404:sieve_extend.c ****             index2 += step2;
 405:sieve_extend.c ****             index2_word = wordindex(index2);
 406:sieve_extend.c ****         }
 407:sieve_extend.c **** 
 408:sieve_extend.c ****     }
 409:sieve_extend.c **** }
 410:sieve_extend.c **** 
 411:sieve_extend.c **** // Large ranges (> WORD_SIZE * step) mean the same mask can be reused
 412:sieve_extend.c **** static inline void setBitsTrue_largeRange(bitword_t* __restrict bitarray, const counter_t range_sta
 413:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange (%ju occurances
 414:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 415:sieve_extend.c **** 
 416:sieve_extend.c **** //    #pragma unroll
 417:sieve_extend.c ****     #pragma ivdep
 418:sieve_extend.c ****     for (register counter_t index = range_start; index < range_stop_unique; index += step) {
 419:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 420:sieve_extend.c ****     }
 421:sieve_extend.c **** }
 422:sieve_extend.c **** 
 423:sieve_extend.c **** 
 424:sieve_extend.c **** static void inline applyMask_vector(bitvector_t* __restrict bitarray, const counter_t step, const c
 425:sieve_extend.c ****    const counter_t range_stop_vector = vectorindex(range_stop);
GAS LISTING /tmp/ccr2dACi.s 			page 10


 426:sieve_extend.c ****    register bitvector_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_vect
 427:sieve_extend.c ****    register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_st
 428:sieve_extend.c **** 
 429:sieve_extend.c ****    #pragma unroll
 430:sieve_extend.c ****    #pragma ivdep
 431:sieve_extend.c ****    while likely(index_ptr < fast_loop_ptr) {
 432:sieve_extend.c ****        *index_ptr |= mask;
 433:sieve_extend.c ****        index_ptr+=step;
 434:sieve_extend.c ****        *index_ptr |= mask;
 435:sieve_extend.c ****        index_ptr+=step;
 436:sieve_extend.c ****        *index_ptr |= mask;
 437:sieve_extend.c ****        index_ptr+=step;
 438:sieve_extend.c ****        *index_ptr |= mask;
 439:sieve_extend.c ****        index_ptr+=step;
 440:sieve_extend.c ****        *index_ptr |= mask;
 441:sieve_extend.c ****        index_ptr+=step;
 442:sieve_extend.c ****    }
 443:sieve_extend.c **** 
 444:sieve_extend.c ****    const register bitvector_t* __restrict range_stop_ptr = &bitarray[(range_stop_vector)];
 445:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 446:sieve_extend.c ****        *index_ptr |= mask;
 447:sieve_extend.c ****        index_ptr+=step;
 448:sieve_extend.c ****    }
 449:sieve_extend.c **** 
 450:sieve_extend.c ****    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range_stop_ptr, depending o
 451:sieve_extend.c ****        *index_ptr |= mask;
 452:sieve_extend.c ****    }
 453:sieve_extend.c **** }
 454:sieve_extend.c **** 
 455:sieve_extend.c **** static void setBitsTrue_largeRange_vector(bitword_t* __restrict bitarray_word, counter_t range_star
 456:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 457:sieve_extend.c **** 
 458:sieve_extend.c ****     // const counter_t range_stop_unique_oneword =  min(range_start + WORD_SIZE_counter * step, ran
 459:sieve_extend.c ****     // for (counter_t index = range_start; index <= range_stop_unique_oneword; index += step) {
 460:sieve_extend.c ****     //     applyMask(bitarray_word, step, range_stop, markmask(index), wordindex(index));
 461:sieve_extend.c ****     // }
 462:sieve_extend.c ****     // return;
 463:sieve_extend.c **** 
 464:sieve_extend.c ****     bitvector_t* __restrict bitarray_vector = __builtin_assume_aligned( (bitvector_t*) bitarray_wor
 465:sieve_extend.c ****     
 466:sieve_extend.c ****     // find out where the first complete vector is
 467:sieve_extend.c ****     // printWord(range_start); printf("\n");
 468:sieve_extend.c ****     // printWord(~VECTORMASK); printf("\n");
 469:sieve_extend.c ****     // printWord(vectorstart(range_start)); printf("\n\n");
 470:sieve_extend.c ****     counter_t range_start_atvector = vectorstart(range_start);
 471:sieve_extend.c ****     if likely((range_start_atvector + step) < range_start) { // not the first step possible in this
 472:sieve_extend.c ****         debug { printf("Range start+step %ju not at start of vector %ju\n",range_start+step, range_
 473:sieve_extend.c **** 
 474:sieve_extend.c ****         range_start_atvector += VECTOR_SIZE; // find next vector
 475:sieve_extend.c ****         if (unlikely(range_start_atvector > range_stop)) { // we should not be here; just handle wi
 476:sieve_extend.c ****             debug2 printf("..Marking and returning without vector\n");
 477:sieve_extend.c **** 
 478:sieve_extend.c ****             for (counter_t index = range_start; index <= range_stop; index += step) 
 479:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 480:sieve_extend.c ****             return;                 
 481:sieve_extend.c ****         }
 482:sieve_extend.c **** 
GAS LISTING /tmp/ccr2dACi.s 			page 11


 483:sieve_extend.c ****         debug2 printf("..Marking without vector until %ju\n",range_start_atvector);
 484:sieve_extend.c ****         register counter_t index = range_start; // outside to later adjust range_start
 485:sieve_extend.c **** 
 486:sieve_extend.c ****         // #pragma ivdep unroll
 487:sieve_extend.c ****         // for (; index < range_start_atvector; index += step) 
 488:sieve_extend.c ****         //     bitarray_word[wordindex(index)] |= markmask(index);
 489:sieve_extend.c ****         // range_start = index;
 490:sieve_extend.c **** 
 491:sieve_extend.c ****         #pragma ivdep unroll
 492:sieve_extend.c ****         for (; range_start < range_start_atvector;) {
 493:sieve_extend.c ****             register counter_t index_word = wordindex(range_start);
 494:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 495:sieve_extend.c ****             do {
 496:sieve_extend.c ****                 mask |= markmask(range_start);
 497:sieve_extend.c ****                 range_start += step;
 498:sieve_extend.c ****             } while (wordindex(range_start) == index_word);
 499:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 500:sieve_extend.c ****         }
 501:sieve_extend.c ****     }
 502:sieve_extend.c ****     
 503:sieve_extend.c ****     const counter_t range_stop_unique =  min(range_start + VECTOR_SIZE_counter * step, range_stop);
 504:sieve_extend.c ****     
 505:sieve_extend.c ****     // const counter_t step_2 = step * 2;
 506:sieve_extend.c ****     // const counter_t step_3 = step * 3;
 507:sieve_extend.c ****     // const counter_t step_4 = step * 4;
 508:sieve_extend.c **** 
 509:sieve_extend.c ****     #pragma ivdep unroll
 510:sieve_extend.c ****     for (counter_t index = range_start; index < range_stop_unique;) {
 511:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 512:sieve_extend.c ****         register bitvector_t quadmask = { };
 513:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 514:sieve_extend.c ****         
 515:sieve_extend.c ****         // build a quadmask
 516:sieve_extend.c ****         #pragma ivdep unroll
 517:sieve_extend.c ****         do {
 518:sieve_extend.c ****             quadmask[word] |= markmask(index);
 519:sieve_extend.c ****             index += step;
 520:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 521:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 522:sieve_extend.c ****         
 523:sieve_extend.c ****         // use mask on all n*step multiples
 524:sieve_extend.c ****         register counter_t current_vector = current_vector_start_word >> (SHIFT_VECTOR - SHIFT_WORD
 525:sieve_extend.c ****         const counter_t range_stop_vector = vectorindex(range_stop);
 526:sieve_extend.c **** 
 527:sieve_extend.c ****         applyMask_vector(bitarray_vector, step, range_stop, quadmask, current_vector);
 528:sieve_extend.c **** 
 529:sieve_extend.c ****         // if (current_vector+step_4 <= range_stop_vector) {
 530:sieve_extend.c ****         //     register const counter_t loop_stop_vector = (range_stop_vector > step_4) ? (range_st
 531:sieve_extend.c ****         //     #pragma ivdep unroll
 532:sieve_extend.c ****         //     for(; current_vector <= loop_stop_vector; current_vector += step_4) {
 533:sieve_extend.c ****         //         bitarray_vector[current_vector       ] |= quadmask;
 534:sieve_extend.c ****         //         bitarray_vector[current_vector+step  ] |= quadmask;
 535:sieve_extend.c ****         //         bitarray_vector[current_vector+step_2] |= quadmask;
 536:sieve_extend.c ****         //         bitarray_vector[current_vector+step_3] |= quadmask;
 537:sieve_extend.c ****         //     }
 538:sieve_extend.c ****         // }
 539:sieve_extend.c **** 
GAS LISTING /tmp/ccr2dACi.s 			page 12


 540:sieve_extend.c **** 
 541:sieve_extend.c ****         // #pragma ivdep unroll
 542:sieve_extend.c ****         // for(; current_vector+step_4 < range_stop_vector; current_vector += step_4) {
 543:sieve_extend.c ****         //     bitarray_vector[current_vector       ] |= quadmask;
 544:sieve_extend.c ****         //     bitarray_vector[current_vector+step  ] |= quadmask;
 545:sieve_extend.c ****         //     bitarray_vector[current_vector+step_2] |= quadmask;
 546:sieve_extend.c ****         //     bitarray_vector[current_vector+step_3] |= quadmask;
 547:sieve_extend.c ****         // }
 548:sieve_extend.c **** 
 549:sieve_extend.c ****         // #pragma ivdep unroll
 550:sieve_extend.c ****         // for(; current_vector < range_stop_vector; current_vector += step) {
 551:sieve_extend.c ****         //     bitarray_vector[current_vector] |= quadmask;
 552:sieve_extend.c ****         // }
 553:sieve_extend.c ****         
 554:sieve_extend.c ****         // if unlikely(current_vector == range_stop_vector) {
 555:sieve_extend.c ****         //     counter_t index_word = current_vector * VECTOR_ELEMENTS;
 556:sieve_extend.c ****         //     counter_t range_stop_word = wordindex(range_stop);
 557:sieve_extend.c ****         //     if likely(index_word <= range_stop_word) {
 558:sieve_extend.c ****         //         #pragma ivdep
 559:sieve_extend.c ****         //         for (word =0; word < VECTOR_ELEMENTS; word++) {
 560:sieve_extend.c ****         //             if unlikely(index_word+word <= range_stop_word)
 561:sieve_extend.c ****         //                 bitarray_word[index_word+word] |= quadmask[word];
 562:sieve_extend.c ****         //         }
 563:sieve_extend.c ****         //     }
 564:sieve_extend.c **** 
 565:sieve_extend.c ****         // }
 566:sieve_extend.c ****     }
 567:sieve_extend.c **** }
 568:sieve_extend.c **** 
 569:sieve_extend.c **** static void extendSieve_smallSize(bitword_t* __restrict bitarray, const counter_t source_start, con
  90              		.loc 1 569 153 view -0
  91              		.cfi_startproc
 570:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
  92              		.loc 1 570 5 view .LVU1
 571:sieve_extend.c ****     // debug { printf("...At start. "); dump_bitarray(bitarray, 4); }
 572:sieve_extend.c **** 
 573:sieve_extend.c ****     const counter_t source_word = wordindex(source_start);
  93              		.loc 1 573 5 view .LVU2
 574:sieve_extend.c ****     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_start)) | (bitarray[sou
  94              		.loc 1 574 5 view .LVU3
  95              	# sieve_extend.c:569: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 569:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
  96              		.loc 1 569 153 is_stmt 0 view .LVU4
  97 0000 55       		push	rbp	#
  98              		.cfi_def_cfa_offset 16
  99              		.cfi_offset 6, -16
 100 0001 4989D1   		mov	r9, rdx	# size, tmp576
 101              	# sieve_extend.c:573:     const counter_t source_word = wordindex(source_start);
 573:sieve_extend.c ****     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_start)) | (bitarray[sou
 102              		.loc 1 573 21 view .LVU5
 103 0004 4889F0   		mov	rax, rsi	# source_word, source_start
 104              	# sieve_extend.c:569: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 569:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 105              		.loc 1 569 153 view .LVU6
 106 0007 4889E5   		mov	rbp, rsp	#,
 107              		.cfi_def_cfa_register 6
 108              	# sieve_extend.c:574:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
GAS LISTING /tmp/ccr2dACi.s 			page 13


 109              		.loc 1 574 134 view .LVU7
 110 000a 89F2     		mov	edx, esi	# tmp334, source_start
 111              	.LVL1:
 112              	# sieve_extend.c:569: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 569:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 113              		.loc 1 569 153 view .LVU8
 114 000c 4157     		push	r15	#
 115              	# sieve_extend.c:573:     const counter_t source_word = wordindex(source_start);
 573:sieve_extend.c ****     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_start)) | (bitarray[sou
 116              		.loc 1 573 21 view .LVU9
 117 000e 48C1E806 		shr	rax, 6	# source_word,
 118              	.LVL2:
 119              	# sieve_extend.c:574:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 120              		.loc 1 574 134 view .LVU10
 121 0012 83E23F   		and	edx, 63	# tmp334,
 122              	# sieve_extend.c:569: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 569:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 123              		.loc 1 569 153 view .LVU11
 124 0015 4156     		push	r14	#
 125              	# sieve_extend.c:574:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 126              		.loc 1 574 133 view .LVU12
 127 0017 41B84000 		mov	r8d, 64	# tmp336,
 127      0000
 128              	# sieve_extend.c:574:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 129              		.loc 1 574 167 view .LVU13
 130 001d 4589CB   		mov	r11d, r9d	# tmp342, size
 131              	# sieve_extend.c:569: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 569:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 132              		.loc 1 569 153 view .LVU14
 133 0020 4155     		push	r13	#
 134              	# sieve_extend.c:574:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 135              		.loc 1 574 133 view .LVU15
 136 0022 4129D0   		sub	r8d, edx	# tmp335, tmp334
 137              	# sieve_extend.c:574:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 138              		.loc 1 574 167 view .LVU16
 139 0025 41F7D3   		not	r11d	# tmp342
 140              	# sieve_extend.c:569: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 569:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 141              		.loc 1 569 153 view .LVU17
 142 0028 4154     		push	r12	#
 143              		.cfi_offset 15, -24
 144              		.cfi_offset 14, -32
 145              		.cfi_offset 13, -40
 146              		.cfi_offset 12, -48
 147              	# sieve_extend.c:574:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 148              		.loc 1 574 167 view .LVU18
 149 002a 49C7C4FF 		mov	r12, -1	# tmp345,
 149      FFFFFF
 150 0031 C442A3F7 		shrx	r13, r12, r11	# tmp344, tmp345, tmp342
 150      EC
 151              	# sieve_extend.c:569: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 569:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 152              		.loc 1 569 153 view .LVU19
 153 0036 53       		push	rbx	#
 154              		.cfi_offset 3, -56
 155 0037 4889CB   		mov	rbx, rcx	# destination_stop, tmp577
 156              	# sieve_extend.c:574:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
GAS LISTING /tmp/ccr2dACi.s 			page 14


 157              		.loc 1 574 58 view .LVU20
 158 003a 488B0CC7 		mov	rcx, QWORD PTR [rdi+rax*8]	# *_5, *_5
 159              	.LVL3:
 160              	# sieve_extend.c:574:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 161              		.loc 1 574 112 view .LVU21
 162 003e C462B9F7 		shlx	r8, QWORD PTR 8[rdi+rax*8], r8	# tmp337, *_11, tmp335
 162      44C708
 163              	# sieve_extend.c:574:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 164              		.loc 1 574 58 view .LVU22
 165 0045 C462CBF7 		shrx	r10, rcx, rsi	# tmp339, *_5, source_start
 165      D1
 166              	# sieve_extend.c:574:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 167              		.loc 1 574 85 view .LVU23
 168 004a 4D09D0   		or	r8, r10	# tmp341, tmp339
 169              	# sieve_extend.c:569: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 569:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 170              		.loc 1 569 153 view .LVU24
 171 004d 4883E4E0 		and	rsp, -32	#,
 172              	# sieve_extend.c:574:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 173              		.loc 1 574 24 view .LVU25
 174 0051 4D21E8   		and	r8, r13	# pattern, tmp344
 175              	.LVL4:
 575:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 176              		.loc 1 575 5 is_stmt 1 view .LVU26
 177              	.LBB315:
 178              		.loc 1 575 10 view .LVU27
 179              		.loc 1 575 54 view .LVU28
 180              	# sieve_extend.c:575:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 181              		.loc 1 575 5 is_stmt 0 view .LVU29
 182 0054 4983F940 		cmp	r9, 64	# size,
 183 0058 0F87C200 		ja	.L2	#,
 183      0000
 184 005e 4D89CE   		mov	r14, r9	# pattern_size, size
 185              	.LVL5:
 186              	.L3:
 576:sieve_extend.c ****         pattern |= (pattern << pattern_size);
 187              		.loc 1 576 9 is_stmt 1 discriminator 3 view .LVU30
 188              	# sieve_extend.c:575:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 575:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 189              		.loc 1 575 103 is_stmt 0 discriminator 3 view .LVU31
 190 0061 4B8D0436 		lea	rax, [r14+r14]	# pattern_size,
 191              	# sieve_extend.c:576:         pattern |= (pattern << pattern_size);
 192              		.loc 1 576 29 discriminator 3 view .LVU32
 193 0065 C44289F7 		shlx	r15, r8, r14	# _23, pattern, pattern_size
 193      F8
 194              	# sieve_extend.c:576:         pattern |= (pattern << pattern_size);
 195              		.loc 1 576 17 discriminator 3 view .LVU33
 196 006a 4D09F8   		or	r8, r15	# pattern, _23
 197              	.LVL6:
 575:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 198              		.loc 1 575 90 is_stmt 1 discriminator 3 view .LVU34
 575:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 199              		.loc 1 575 54 discriminator 3 view .LVU35
 200              	# sieve_extend.c:575:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 575:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 201              		.loc 1 575 5 is_stmt 0 discriminator 3 view .LVU36
 202 006d 4883F840 		cmp	rax, 64	# pattern_size,
GAS LISTING /tmp/ccr2dACi.s 			page 15


 203 0071 0F87A900 		ja	.L2	#,
 203      0000
 204              		.loc 1 576 9 is_stmt 1 view .LVU37
 205              	# sieve_extend.c:575:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 575:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 206              		.loc 1 575 103 is_stmt 0 view .LVU38
 207 0077 4A8D0CB5 		lea	rcx, 0[0+r14*4]	# pattern_size,
 207      00000000 
 208              	# sieve_extend.c:576:         pattern |= (pattern << pattern_size);
 209              		.loc 1 576 29 view .LVU39
 210 007f C4C2F9F7 		shlx	rdx, r8, rax	# _23, pattern, pattern_size
 210      D0
 211              	# sieve_extend.c:576:         pattern |= (pattern << pattern_size);
 212              		.loc 1 576 17 view .LVU40
 213 0084 4909D0   		or	r8, rdx	# pattern, _23
 214              	.LVL7:
 575:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 215              		.loc 1 575 90 is_stmt 1 view .LVU41
 575:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 216              		.loc 1 575 54 view .LVU42
 217              	# sieve_extend.c:575:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 575:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 218              		.loc 1 575 5 is_stmt 0 view .LVU43
 219 0087 4883F940 		cmp	rcx, 64	# pattern_size,
 220 008b 0F878F00 		ja	.L2	#,
 220      0000
 221              		.loc 1 576 9 is_stmt 1 view .LVU44
 222              	# sieve_extend.c:575:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 575:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 223              		.loc 1 575 103 is_stmt 0 view .LVU45
 224 0091 4E8D1CF5 		lea	r11, 0[0+r14*8]	# pattern_size,
 224      00000000 
 225              	# sieve_extend.c:576:         pattern |= (pattern << pattern_size);
 226              		.loc 1 576 29 view .LVU46
 227 0099 C442F1F7 		shlx	r10, r8, rcx	# _23, pattern, pattern_size
 227      D0
 228              	# sieve_extend.c:576:         pattern |= (pattern << pattern_size);
 229              		.loc 1 576 17 view .LVU47
 230 009e 4D09D0   		or	r8, r10	# pattern, _23
 231              	.LVL8:
 575:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 232              		.loc 1 575 90 is_stmt 1 view .LVU48
 575:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 233              		.loc 1 575 54 view .LVU49
 234              	# sieve_extend.c:575:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 575:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 235              		.loc 1 575 5 is_stmt 0 view .LVU50
 236 00a1 4983FB40 		cmp	r11, 64	# pattern_size,
 237 00a5 7779     		ja	.L2	#,
 238              		.loc 1 576 9 is_stmt 1 view .LVU51
 239              	# sieve_extend.c:575:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 575:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 240              		.loc 1 575 103 is_stmt 0 view .LVU52
 241 00a7 4D89F5   		mov	r13, r14	# pattern_size, pattern_size
 242              	# sieve_extend.c:576:         pattern |= (pattern << pattern_size);
 243              		.loc 1 576 29 view .LVU53
 244 00aa C442A1F7 		shlx	r12, r8, r11	# _23, pattern, pattern_size
GAS LISTING /tmp/ccr2dACi.s 			page 16


 244      E0
 245              	# sieve_extend.c:575:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 575:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 246              		.loc 1 575 103 view .LVU54
 247 00af 49C1E504 		sal	r13, 4	# pattern_size,
 248              	# sieve_extend.c:576:         pattern |= (pattern << pattern_size);
 249              		.loc 1 576 17 view .LVU55
 250 00b3 4D09E0   		or	r8, r12	# pattern, _23
 251              	.LVL9:
 575:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 252              		.loc 1 575 90 is_stmt 1 view .LVU56
 575:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 253              		.loc 1 575 54 view .LVU57
 254              	# sieve_extend.c:575:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 575:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 255              		.loc 1 575 5 is_stmt 0 view .LVU58
 256 00b6 4983FD40 		cmp	r13, 64	# pattern_size,
 257 00ba 7764     		ja	.L2	#,
 258              		.loc 1 576 9 is_stmt 1 view .LVU59
 259              	# sieve_extend.c:575:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 575:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 260              		.loc 1 575 103 is_stmt 0 view .LVU60
 261 00bc 4C89F0   		mov	rax, r14	# pattern_size, pattern_size
 262              	# sieve_extend.c:576:         pattern |= (pattern << pattern_size);
 263              		.loc 1 576 29 view .LVU61
 264 00bf C44291F7 		shlx	r15, r8, r13	# _23, pattern, pattern_size
 264      F8
 265              	# sieve_extend.c:575:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 575:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 266              		.loc 1 575 103 view .LVU62
 267 00c4 48C1E005 		sal	rax, 5	# pattern_size,
 268              	# sieve_extend.c:576:         pattern |= (pattern << pattern_size);
 269              		.loc 1 576 17 view .LVU63
 270 00c8 4D09F8   		or	r8, r15	# pattern, _23
 271              	.LVL10:
 575:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 272              		.loc 1 575 90 is_stmt 1 view .LVU64
 575:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 273              		.loc 1 575 54 view .LVU65
 274              	# sieve_extend.c:575:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 575:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 275              		.loc 1 575 5 is_stmt 0 view .LVU66
 276 00cb 4883F840 		cmp	rax, 64	# pattern_size,
 277 00cf 774F     		ja	.L2	#,
 278              		.loc 1 576 9 is_stmt 1 view .LVU67
 279              	# sieve_extend.c:575:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 575:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 280              		.loc 1 575 103 is_stmt 0 view .LVU68
 281 00d1 4C89F1   		mov	rcx, r14	# pattern_size, pattern_size
 282              	# sieve_extend.c:576:         pattern |= (pattern << pattern_size);
 283              		.loc 1 576 29 view .LVU69
 284 00d4 C4C2F9F7 		shlx	rdx, r8, rax	# _23, pattern, pattern_size
 284      D0
 285              	# sieve_extend.c:575:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 575:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 286              		.loc 1 575 103 view .LVU70
 287 00d9 48C1E106 		sal	rcx, 6	# pattern_size,
GAS LISTING /tmp/ccr2dACi.s 			page 17


 288              	# sieve_extend.c:576:         pattern |= (pattern << pattern_size);
 289              		.loc 1 576 17 view .LVU71
 290 00dd 4909D0   		or	r8, rdx	# pattern, _23
 291              	.LVL11:
 575:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 292              		.loc 1 575 90 is_stmt 1 view .LVU72
 575:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 293              		.loc 1 575 54 view .LVU73
 294              	# sieve_extend.c:575:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 575:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 295              		.loc 1 575 5 is_stmt 0 view .LVU74
 296 00e0 4883F940 		cmp	rcx, 64	# pattern_size,
 297 00e4 773A     		ja	.L2	#,
 298              		.loc 1 576 9 is_stmt 1 view .LVU75
 299              	# sieve_extend.c:575:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 575:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 300              		.loc 1 575 103 is_stmt 0 view .LVU76
 301 00e6 4D89F3   		mov	r11, r14	# pattern_size, pattern_size
 302              	# sieve_extend.c:576:         pattern |= (pattern << pattern_size);
 303              		.loc 1 576 29 view .LVU77
 304 00e9 C442F1F7 		shlx	r10, r8, rcx	# _23, pattern, pattern_size
 304      D0
 305              	# sieve_extend.c:575:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 575:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 306              		.loc 1 575 103 view .LVU78
 307 00ee 49C1E307 		sal	r11, 7	# pattern_size,
 308              	# sieve_extend.c:576:         pattern |= (pattern << pattern_size);
 309              		.loc 1 576 17 view .LVU79
 310 00f2 4D09D0   		or	r8, r10	# pattern, _23
 311              	.LVL12:
 575:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 312              		.loc 1 575 90 is_stmt 1 view .LVU80
 575:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 313              		.loc 1 575 54 view .LVU81
 314              	# sieve_extend.c:575:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 575:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 315              		.loc 1 575 5 is_stmt 0 view .LVU82
 316 00f5 4983FB40 		cmp	r11, 64	# pattern_size,
 317 00f9 7725     		ja	.L2	#,
 318              		.loc 1 576 9 is_stmt 1 view .LVU83
 319              	# sieve_extend.c:575:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 575:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 320              		.loc 1 575 103 is_stmt 0 view .LVU84
 321 00fb 49C1E608 		sal	r14, 8	# pattern_size,
 322              	# sieve_extend.c:576:         pattern |= (pattern << pattern_size);
 323              		.loc 1 576 29 view .LVU85
 324 00ff C442A1F7 		shlx	r12, r8, r11	# _23, pattern, pattern_size
 324      E0
 325              	# sieve_extend.c:576:         pattern |= (pattern << pattern_size);
 326              		.loc 1 576 17 view .LVU86
 327 0104 4D09E0   		or	r8, r12	# pattern, _23
 328              	.LVL13:
 575:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 329              		.loc 1 575 90 is_stmt 1 view .LVU87
 575:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 330              		.loc 1 575 54 view .LVU88
 331              	# sieve_extend.c:575:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
GAS LISTING /tmp/ccr2dACi.s 			page 18


 575:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 332              		.loc 1 575 5 is_stmt 0 view .LVU89
 333 0107 4983FE40 		cmp	r14, 64	# pattern_size,
 334 010b 0F8650FF 		jbe	.L3	#,
 334      FFFF
 335              	.LVL14:
 336 0111 66662E0F 		.p2align 4
 336      1F840000 
 336      0000000F 
 336      1F4000
 337              		.p2align 3
 338              	.L2:
 575:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 339              		.loc 1 575 5 view .LVU90
 340              	.LBE315:
 577:sieve_extend.c **** 
 578:sieve_extend.c ****     const counter_t destination_start = source_start + size;
 341              		.loc 1 578 5 is_stmt 1 view .LVU91
 342              	# sieve_extend.c:578:     const counter_t destination_start = source_start + size;
 343              		.loc 1 578 21 is_stmt 0 view .LVU92
 344 0120 4A8D0C0E 		lea	rcx, [rsi+r9]	# destination_start,
 345              	.LVL15:
 579:sieve_extend.c ****     counter_t destination_start_word = wordindex(destination_start);
 346              		.loc 1 579 5 is_stmt 1 view .LVU93
 347              	# sieve_extend.c:580:     counter_t destination_stop_word = wordindex(destination_stop);
 580:sieve_extend.c ****     counter_t destination_stop_word = wordindex(destination_stop);
 348              		.loc 1 580 15 is_stmt 0 view .LVU94
 349 0124 4989DC   		mov	r12, rbx	# destination_stop_word, destination_stop
 350              	# sieve_extend.c:579:     counter_t destination_start_word = wordindex(destination_start);
 579:sieve_extend.c ****     counter_t destination_start_word = wordindex(destination_start);
 351              		.loc 1 579 15 view .LVU95
 352 0127 4989CB   		mov	r11, rcx	# destination_start_word, destination_start
 353 012a F7D3     		not	ebx	# tmp348
 354              	.LVL16:
 579:sieve_extend.c ****     counter_t destination_start_word = wordindex(destination_start);
 355              		.loc 1 579 15 view .LVU96
 356 012c 49C1EB06 		shr	r11, 6	# destination_start_word,
 357              	.LVL17:
 358              		.loc 1 580 5 is_stmt 1 view .LVU97
 359 0130 49C7C5FF 		mov	r13, -1	# tmp350,
 359      FFFFFF
 360              	# sieve_extend.c:580:     counter_t destination_stop_word = wordindex(destination_stop);
 361              		.loc 1 580 15 is_stmt 0 view .LVU98
 362 0137 49C1EC06 		shr	r12, 6	# destination_stop_word,
 363              	.LVL18:
 581:sieve_extend.c ****     if (destination_start_word >= destination_stop_word) {
 364              		.loc 1 581 5 is_stmt 1 view .LVU99
 365 013b 4A8D34DD 		lea	rsi, 0[0+r11*8]	# _116,
 365      00000000 
 366              	.LVL19:
 367              		.loc 1 581 5 is_stmt 0 view .LVU100
 368 0143 4C8D3437 		lea	r14, [rdi+rsi]	# _117,
 369              	# sieve_extend.c:581:     if (destination_start_word >= destination_stop_word) {
 370              		.loc 1 581 8 view .LVU101
 371 0147 4D39E3   		cmp	r11, r12	# destination_start_word, destination_stop_word
 372 014a C4C2F1F7 		shlx	rax, r8, rcx	# _120, pattern, destination_start
 372      C0
GAS LISTING /tmp/ccr2dACi.s 			page 19


 373 014f 4D8B3E   		mov	r15, QWORD PTR [r14]	# pretmp_118, *_117
 374 0152 C4C2E3F7 		shrx	rbx, r13, rbx	# _124, tmp350, tmp348
 374      DD
 375 0157 0F833305 		jnb	.L49	#,
 375      0000
 582:sieve_extend.c ****         bitarray[destination_start_word] |= (pattern << bitindex(destination_start)) & chopmask(des
 583:sieve_extend.c ****         return;
 584:sieve_extend.c ****     }
 585:sieve_extend.c **** 
 586:sieve_extend.c ****     bitarray[destination_start_word] |= (pattern << bitindex(destination_start));
 376              		.loc 1 586 5 is_stmt 1 view .LVU102
 377              	# sieve_extend.c:586:     bitarray[destination_start_word] |= (pattern << bitindex(destination_star
 378              		.loc 1 586 38 is_stmt 0 view .LVU103
 379 015d 4C09F8   		or	rax, r15	# tmp353, pretmp_118
 380              	# sieve_extend.c:589:     register const bitshift_t pattern_shift = WORD_SIZE_counter % size;
 587:sieve_extend.c **** 
 588:sieve_extend.c ****     // TODO: refactor according to smallstep
 589:sieve_extend.c ****     register const bitshift_t pattern_shift = WORD_SIZE_counter % size;
 381              		.loc 1 589 31 view .LVU104
 382 0160 31D2     		xor	edx, edx	# tmp355
 383              	# sieve_extend.c:586:     bitarray[destination_start_word] |= (pattern << bitindex(destination_star
 586:sieve_extend.c **** 
 384              		.loc 1 586 38 view .LVU105
 385 0162 498906   		mov	QWORD PTR [r14], rax	# *_117, tmp353
 386              		.loc 1 589 5 is_stmt 1 view .LVU106
 387              	# sieve_extend.c:589:     register const bitshift_t pattern_shift = WORD_SIZE_counter % size;
 388              		.loc 1 589 31 is_stmt 0 view .LVU107
 389 0165 41BE4000 		mov	r14d, 64	# tmp354,
 389      0000
 390 016b 4C89F0   		mov	rax, r14	# tmp356, tmp354
 391 016e 488D7437 		lea	rsi, 8[rdi+rsi]	# vectp.138,
 391      08
 392 0173 49F7F1   		div	r9	# size
 393              	.LVL20:
 590:sieve_extend.c ****     register const bitshift_t pattern_size = WORD_SIZE_bitshift - pattern_shift;
 394              		.loc 1 590 5 is_stmt 1 view .LVU108
 591:sieve_extend.c ****     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destination_start)) & WORDMASK;
 395              		.loc 1 591 5 view .LVU109
 592:sieve_extend.c ****     register counter_t loop_range = destination_stop_word - destination_start_word;
 396              		.loc 1 592 5 view .LVU110
 397 0176 48C1EE03 		shr	rsi, 3	# tmp363,
 398              	# sieve_extend.c:592:     register counter_t loop_range = destination_stop_word - destination_start
 399              		.loc 1 592 24 is_stmt 0 view .LVU111
 400 017a 4D89E1   		mov	r9, r12	# loop_range, destination_stop_word
 401              	.LVL21:
 402              	# sieve_extend.c:591:     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destinati
 591:sieve_extend.c ****     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destination_start)) & WORDMASK;
 403              		.loc 1 591 89 view .LVU112
 404 017d 48F7D9   		neg	rcx	# tmp359
 405              	.LVL22:
 406              	# sieve_extend.c:592:     register counter_t loop_range = destination_stop_word - destination_start
 407              		.loc 1 592 24 view .LVU113
 408 0180 4D29D9   		sub	r9, r11	# loop_range, destination_start_word
 409              	.LVL23:
 593:sieve_extend.c ****     destination_start_word++;
 410              		.loc 1 593 5 is_stmt 1 view .LVU114
 411              	# sieve_extend.c:590:     register const bitshift_t pattern_size = WORD_SIZE_bitshift - pattern_shi
GAS LISTING /tmp/ccr2dACi.s 			page 20


 590:sieve_extend.c ****     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destination_start)) & WORDMASK;
 412              		.loc 1 590 31 is_stmt 0 view .LVU115
 413 0183 4C89F0   		mov	rax, r14	# tmp354, tmp354
 414 0186 48F7DE   		neg	rsi	# tmp364
 415              	# sieve_extend.c:591:     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destinati
 591:sieve_extend.c ****     register counter_t loop_range = destination_stop_word - destination_start_word;
 416              		.loc 1 591 25 view .LVU116
 417 0189 83E13F   		and	ecx, 63	# shift,
 418              	.LVL24:
 591:sieve_extend.c ****     register counter_t loop_range = destination_stop_word - destination_start_word;
 419              		.loc 1 591 25 view .LVU117
 420 018c 83E603   		and	esi, 3	# prolog_loop_niters.139,
 421              	# sieve_extend.c:593:     destination_start_word++;
 422              		.loc 1 593 27 view .LVU118
 423 018f 4D8D5301 		lea	r10, 1[r11]	# destination_start_word,
 424              	.LVL25:
 594:sieve_extend.c ****     
 595:sieve_extend.c ****     #pragma unroll
 596:sieve_extend.c ****     #pragma ivdep
 597:sieve_extend.c ****     for (counter_t i=0; i<=loop_range; ++i ) {
 425              		.loc 1 597 5 is_stmt 1 view .LVU119
 426              	.LBB316:
 427              		.loc 1 597 10 view .LVU120
 428              		.loc 1 597 25 view .LVU121
 429 0193 4D8D6901 		lea	r13, 1[r9]	# niters.137,
 430 0197 894C24F4 		mov	DWORD PTR -12[rsp], ecx	# %sfp, shift
 431 019b 895424F8 		mov	DWORD PTR -8[rsp], edx	# %sfp, tmp355
 432              	.LBE316:
 433              	# sieve_extend.c:590:     register const bitshift_t pattern_size = WORD_SIZE_bitshift - pattern_shi
 590:sieve_extend.c ****     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destination_start)) & WORDMASK;
 434              		.loc 1 590 31 is_stmt 0 view .LVU122
 435 019f 4829D0   		sub	rax, rdx	# tmp354, tmp355
 436              	.LVL26:
 590:sieve_extend.c ****     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destination_start)) & WORDMASK;
 437              		.loc 1 590 31 view .LVU123
 438 01a2 894424FC 		mov	DWORD PTR -4[rsp], eax	# %sfp, pattern_size
 439 01a6 4983F90A 		cmp	r9, 10	# loop_range,
 440 01aa 0F860505 		jbe	.L11	#,
 440      0000
 441 01b0 4885F6   		test	rsi, rsi	# prolog_loop_niters.139
 442 01b3 0F84F404 		je	.L12	#,
 442      0000
 443              	.LBB317:
 598:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 444              		.loc 1 598 9 is_stmt 1 view .LVU124
 445              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 446              		.loc 1 598 72 is_stmt 0 view .LVU125
 447 01b9 4189C7   		mov	r15d, eax	# tmp365, pattern_size
 448 01bc 4129CF   		sub	r15d, ecx	# tmp365, shift
 449              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 450              		.loc 1 598 55 view .LVU126
 451 01bf C44281F7 		shlx	r14, r8, r15	# tmp366, pattern, tmp365
 451      F0
 452              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 453              		.loc 1 598 127 view .LVU127
 454 01c4 C442F3F7 		shrx	r15, r8, rcx	# tmp367, pattern, shift
 454      F8
GAS LISTING /tmp/ccr2dACi.s 			page 21


 455              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 456              		.loc 1 598 116 view .LVU128
 457 01c9 4D09FE   		or	r14, r15	# tmp368, tmp367
 458 01cc 4E8934D7 		mov	QWORD PTR [rdi+r10*8], r14	# *_317, tmp368
 597:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 459              		.loc 1 597 40 is_stmt 1 view .LVU129
 460              	.LVL27:
 597:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 461              		.loc 1 597 25 view .LVU130
 462 01d0 4883FE01 		cmp	rsi, 1	# prolog_loop_niters.139,
 463              	# sieve_extend.c:597:     for (counter_t i=0; i<=loop_range; ++i ) {
 597:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 464              		.loc 1 597 40 is_stmt 0 view .LVU131
 465 01d4 41BE0100 		mov	r14d, 1	# i,
 465      0000
 466 01da 7452     		je	.L7	#,
 467              		.loc 1 598 9 is_stmt 1 view .LVU132
 468              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 469              		.loc 1 598 81 is_stmt 0 view .LVU133
 470 01dc 448D3411 		lea	r14d, [rcx+rdx]	# tmp369,
 471              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 472              		.loc 1 598 72 view .LVU134
 473 01e0 4189C7   		mov	r15d, eax	# tmp371, pattern_size
 474              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 475              		.loc 1 598 99 view .LVU135
 476 01e3 4183E63F 		and	r14d, 63	# _328,
 477              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 478              		.loc 1 598 72 view .LVU136
 479 01e7 4529F7   		sub	r15d, r14d	# tmp371, _328
 480              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 481              		.loc 1 598 127 view .LVU137
 482 01ea C4428BF7 		shrx	r14, r8, r14	# tmp373, pattern, _328
 482      F0
 483              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 484              		.loc 1 598 55 view .LVU138
 485 01ef C44281F7 		shlx	r15, r8, r15	# tmp372, pattern, tmp371
 485      F8
 486              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 487              		.loc 1 598 116 view .LVU139
 488 01f4 4D09FE   		or	r14, r15	# tmp374, tmp372
 489 01f7 4E8974DF 		mov	QWORD PTR 16[rdi+r11*8], r14	# *_334, tmp374
 489      10
 597:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 490              		.loc 1 597 40 is_stmt 1 view .LVU140
 491              	.LVL28:
 597:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 492              		.loc 1 597 25 view .LVU141
 493 01fc 4883FE03 		cmp	rsi, 3	# prolog_loop_niters.139,
 494              	# sieve_extend.c:597:     for (counter_t i=0; i<=loop_range; ++i ) {
 597:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 495              		.loc 1 597 40 is_stmt 0 view .LVU142
 496 0200 41BE0200 		mov	r14d, 2	# i,
 496      0000
 497 0206 7526     		jne	.L7	#,
 498              		.loc 1 598 9 is_stmt 1 view .LVU143
 499              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 500              		.loc 1 598 81 is_stmt 0 view .LVU144
GAS LISTING /tmp/ccr2dACi.s 			page 22


 501 0208 448D3451 		lea	r14d, [rcx+rdx*2]	# tmp376,
 502              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 503              		.loc 1 598 72 view .LVU145
 504 020c 4189C7   		mov	r15d, eax	# tmp378, pattern_size
 505              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 506              		.loc 1 598 99 view .LVU146
 507 020f 4183E63F 		and	r14d, 63	# _104,
 508              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 509              		.loc 1 598 72 view .LVU147
 510 0213 4529F7   		sub	r15d, r14d	# tmp378, _104
 511              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 512              		.loc 1 598 127 view .LVU148
 513 0216 C4428BF7 		shrx	r14, r8, r14	# tmp380, pattern, _104
 513      F0
 514              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 515              		.loc 1 598 55 view .LVU149
 516 021b C44281F7 		shlx	r15, r8, r15	# tmp379, pattern, tmp378
 516      F8
 517              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 518              		.loc 1 598 116 view .LVU150
 519 0220 4D09FE   		or	r14, r15	# tmp381, tmp379
 520 0223 4E8974DF 		mov	QWORD PTR 24[rdi+r11*8], r14	# *_94, tmp381
 520      18
 597:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 521              		.loc 1 597 40 is_stmt 1 view .LVU151
 522              	.LVL29:
 597:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 523              		.loc 1 597 25 view .LVU152
 524              	# sieve_extend.c:597:     for (counter_t i=0; i<=loop_range; ++i ) {
 597:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 525              		.loc 1 597 40 is_stmt 0 view .LVU153
 526 0228 41BE0300 		mov	r14d, 3	# i,
 526      0000
 527              	.LVL30:
 528              	.L7:
 597:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 529              		.loc 1 597 40 view .LVU154
 530 022e 4929F5   		sub	r13, rsi	# niters.140, prolog_loop_niters.139
 531 0231 4C01D6   		add	rsi, r10	# tmp388, destination_start_word
 532 0234 4D89EB   		mov	r11, r13	# bnd.141, niters.140
 533 0237 C4C1F96E 		vmovq	xmm3, r14	# i, i
 533      DE
 534 023c 49C1EB03 		shr	r11, 3	# bnd.141,
 535 0240 488D34F7 		lea	rsi, [rdi+rsi*8]	# ivtmp.159,
 536 0244 49C1E306 		sal	r11, 6	# tmp391,
 537 0248 C4627D59 		vpbroadcastq	ymm9, xmm3	# tmp382, i
 537      CB
 538 024d C4C1F96E 		vmovq	xmm4, r8	# pattern, pattern
 538      E0
 539 0252 4D8D3C33 		lea	r15, [r11+rsi]	# _344,
 540 0256 4183E340 		and	r11d, 64	# tmp391,
 541 025a C535D435 		vpaddq	ymm14, ymm9, YMMWORD PTR .LC0[rip]	# vect_vec_iv_.144, tmp382,
 541      00000000 
 542 0262 C4E27D58 		vpbroadcastd	ymm6, DWORD PTR -8[rsp]	# vect_cst__146, %sfp
 542      7424F8
 543 0269 C4E27D59 		vpbroadcastq	ymm2, xmm4	# vect_cst__156, pattern
 543      D4
GAS LISTING /tmp/ccr2dACi.s 			page 23


 544 026e C4E27D58 		vpbroadcastd	ymm5, DWORD PTR -12[rsp]	# vect_cst__148, %sfp
 544      6C24F4
 545 0275 C4627D58 		vpbroadcastd	ymm12, DWORD PTR -4[rsp]	# vect_cst__152, %sfp
 545      6424FC
 546 027c C57D6F05 		vmovdqa	ymm8, YMMWORD PTR .LC1[rip]	# tmp496,
 546      00000000 
 547 0284 C5FD6F3D 		vmovdqa	ymm7, YMMWORD PTR .LC2[rip]	# tmp497,
 547      00000000 
 548 028c C57D6F2D 		vmovdqa	ymm13, YMMWORD PTR .LC3[rip]	# tmp498,
 548      00000000 
 549 0294 0F849600 		je	.L9	#,
 549      0000
 550              	.LVL31:
 597:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 551              		.loc 1 597 40 view .LVU155
 552 029a C57D7FF1 		vmovdqa	ymm1, ymm14	# vect_vec_iv_.144, vect_vec_iv_.144
 553 029e 4883C640 		add	rsi, 64	# ivtmp.159,
 554              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 555              		.loc 1 598 81 view .LVU156
 556 02a2 C575D4D7 		vpaddq	ymm10, ymm1, ymm7	# vect_vec_iv_.144, vect_vec_iv_.144, tmp497
 557 02a6 C4410DD4 		vpaddq	ymm14, ymm14, ymm8	# vect_vec_iv_.144, vect_vec_iv_.144, tmp496
 557      F0
 558              		.loc 1 598 9 is_stmt 1 view .LVU157
 559              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 560              		.loc 1 598 81 is_stmt 0 view .LVU158
 561 02ab C4C37546 		vperm2i128	ymm0, ymm1, ymm10, 32	# tmp538, vect_vec_iv_.144, vect_vec_iv_.144,
 561      C220
 562 02b1 C4437546 		vperm2i128	ymm11, ymm1, ymm10, 49	# tmp539, vect_vec_iv_.144, vect_vec_iv_.144,
 562      DA31
 563 02b7 C57D70F8 		vpshufd	ymm15, ymm0, 216	# tmp540, tmp538,
 563      D8
 564 02bc C4C17D70 		vpshufd	ymm3, ymm11, 216	# tmp541, tmp539,
 564      DBD8
 565 02c2 C5056CCB 		vpunpcklqdq	ymm9, ymm15, ymm3	# tmp542, tmp540, tmp541
 566 02c6 C4C24D40 		vpmulld	ymm4, ymm6, ymm9	# vect__45.146, vect_cst__146, tmp542
 566      E1
 567              	.LVL32:
 568              		.loc 1 598 81 view .LVU159
 569 02cb C5DDFECD 		vpaddd	ymm1, ymm4, ymm5	# vect__47.147, vect__45.146, vect_cst__148
 570              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 571              		.loc 1 598 99 view .LVU160
 572 02cf C4C175DB 		vpand	ymm0, ymm1, ymm13	# vect__48.148, vect__47.147, tmp498
 572      C5
 573              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 574              		.loc 1 598 72 view .LVU161
 575 02d4 C51DFAF8 		vpsubd	ymm15, ymm12, ymm0	# vect__49.149, vect_cst__152, vect__48.148
 576              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 577              		.loc 1 598 116 view .LVU162
 578 02d8 C4627D35 		vpmovzxdq	ymm11, xmm0	#, vect__48.148
 578      D8
 579 02dd C4427D35 		vpmovzxdq	ymm10, xmm15	#, vect__49.149
 579      D7
 580 02e2 C442ED45 		vpsrlvq	ymm9, ymm2, ymm11	# vect_patt_136.153, vect_cst__156, vect_patt_137.152
 580      CB
 581 02e7 C4C2ED47 		vpsllvq	ymm3, ymm2, ymm10	# vect_patt_138.151, vect_cst__156, vect_patt_139.150
 581      DA
 582 02ec C4637D39 		vextracti128	xmm1, ymm15, 0x1	# tmp554, vect__49.149
GAS LISTING /tmp/ccr2dACi.s 			page 24


 582      F901
 583 02f2 C4C165EB 		vpor	ymm4, ymm3, ymm9	# vect__55.154, vect_patt_138.151, vect_patt_136.153
 583      E1
 584 02f7 C4E37D39 		vextracti128	xmm0, ymm0, 0x1	# tmp557, vect__48.148
 584      C001
 585 02fd C4627D35 		vpmovzxdq	ymm15, xmm1	# vect_patt_139.150, tmp554
 585      F9
 586 0302 C4E27D35 		vpmovzxdq	ymm3, xmm0	# vect_patt_137.152, tmp557
 586      D8
 587 0307 C442ED47 		vpsllvq	ymm10, ymm2, ymm15	# vect_patt_138.151, vect_cst__156, vect_patt_139.150
 587      D7
 588 030c C462ED45 		vpsrlvq	ymm11, ymm2, ymm3	# vect_patt_136.153, vect_cst__156, vect_patt_137.152
 588      DB
 589              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 590              		.loc 1 598 44 view .LVU163
 591 0311 C5FD7F66 		vmovdqa	YMMWORD PTR -64[rsi], ymm4	# MEM[base: _341, offset: 0B], vect__55.154
 591      C0
 592              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 593              		.loc 1 598 116 view .LVU164
 594 0316 C4412DEB 		vpor	ymm9, ymm10, ymm11	# vect__55.154, vect_patt_138.151, vect_patt_136.153
 594      CB
 595              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 596              		.loc 1 598 44 view .LVU165
 597 031b C57D7F4E 		vmovdqa	YMMWORD PTR -32[rsi], ymm9	# MEM[base: _341, offset: 32B], vect__55.154
 597      E0
 597:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 598              		.loc 1 597 40 is_stmt 1 view .LVU166
 597:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 599              		.loc 1 597 25 view .LVU167
 600 0320 4C39FE   		cmp	rsi, r15	# ivtmp.159, _344
 601 0323 0F841201 		je	.L37	#,
 601      0000
 602 0329 0F1F8000 		.p2align 4
 602      000000
 603              		.p2align 3
 604              	.L9:
 605              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 606              		.loc 1 598 81 is_stmt 0 discriminator 3 view .LVU168
 607 0330 C58DD4CF 		vpaddq	ymm1, ymm14, ymm7	# vect_vec_iv_.144, vect_vec_iv_.144, tmp497
 608 0334 C4C10DD4 		vpaddq	ymm4, ymm14, ymm8	# vect_vec_iv_.144, vect_vec_iv_.144, tmp496
 608      E0
 609              		.loc 1 598 9 is_stmt 1 discriminator 3 view .LVU169
 610              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 611              		.loc 1 598 81 is_stmt 0 discriminator 3 view .LVU170
 612 0339 C4630D46 		vperm2i128	ymm15, ymm14, ymm1, 32	# tmp398, vect_vec_iv_.144, vect_vec_iv_.144,
 612      F920
 613 033f C4630D46 		vperm2i128	ymm14, ymm14, ymm1, 49	# tmp399, vect_vec_iv_.144, vect_vec_iv_.144,
 613      F131
 614 0345 C4417D70 		vpshufd	ymm10, ymm15, 216	# tmp396, tmp398,
 614      D7D8
 615 034b 4883EE80 		sub	rsi, -128	# ivtmp.159,
 616 034f C4C17D70 		vpshufd	ymm0, ymm14, 216	# tmp397, tmp399,
 616      C6D8
 617 0355 C5AD6CD8 		vpunpcklqdq	ymm3, ymm10, ymm0	# tmp400, tmp396, tmp397
 618 0359 C4624D40 		vpmulld	ymm11, ymm6, ymm3	# vect__45.146, vect_cst__146, tmp400
 618      DB
 619 035e C525FECD 		vpaddd	ymm9, ymm11, ymm5	# vect__47.147, vect__45.146, vect_cst__148
GAS LISTING /tmp/ccr2dACi.s 			page 25


 620              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 621              		.loc 1 598 99 discriminator 3 view .LVU171
 622 0362 C44135DB 		vpand	ymm15, ymm9, ymm13	# vect__48.148, vect__47.147, tmp498
 622      FD
 623              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 624              		.loc 1 598 72 discriminator 3 view .LVU172
 625 0367 C4C11DFA 		vpsubd	ymm1, ymm12, ymm15	# vect__49.149, vect_cst__152, vect__48.148
 625      CF
 626              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 627              		.loc 1 598 116 discriminator 3 view .LVU173
 628 036c C4C27D35 		vpmovzxdq	ymm0, xmm15	#, vect__48.148
 628      C7
 629 0371 C4627D35 		vpmovzxdq	ymm14, xmm1	#, vect__49.149
 629      F1
 630 0376 C4E2ED45 		vpsrlvq	ymm3, ymm2, ymm0	# vect_patt_136.153, vect_cst__156, vect_patt_137.152
 630      D8
 631 037b C442ED47 		vpsllvq	ymm10, ymm2, ymm14	# vect_patt_138.151, vect_cst__156, vect_patt_139.150
 631      D6
 632 0380 C4C37D39 		vextracti128	xmm9, ymm1, 0x1	# tmp412, vect__49.149
 632      C901
 633 0386 C52DEBDB 		vpor	ymm11, ymm10, ymm3	# vect__55.154, vect_patt_138.151, vect_patt_136.153
 634 038a C4437D39 		vextracti128	xmm15, ymm15, 0x1	# tmp415, vect__48.148
 634      FF01
 635 0390 C4C27D35 		vpmovzxdq	ymm1, xmm9	# vect_patt_139.150, tmp412
 635      C9
 636 0395 C4427D35 		vpmovzxdq	ymm10, xmm15	# vect_patt_137.152, tmp415
 636      D7
 637 039a C462ED47 		vpsllvq	ymm14, ymm2, ymm1	# vect_patt_138.151, vect_cst__156, vect_patt_139.150
 637      F1
 638 039f C4C2ED45 		vpsrlvq	ymm0, ymm2, ymm10	# vect_patt_136.153, vect_cst__156, vect_patt_137.152
 638      C2
 639              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 640              		.loc 1 598 44 discriminator 3 view .LVU174
 641 03a4 C57D7F5E 		vmovdqa	YMMWORD PTR -128[rsi], ymm11	# MEM[base: _341, offset: 0B], vect__55.154
 641      80
 642              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 643              		.loc 1 598 81 discriminator 3 view .LVU175
 644 03a9 C55DD4DF 		vpaddq	ymm11, ymm4, ymm7	# vect_vec_iv_.144, vect_vec_iv_.144, tmp497
 645              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 646              		.loc 1 598 116 discriminator 3 view .LVU176
 647 03ad C58DEBD8 		vpor	ymm3, ymm14, ymm0	# vect__55.154, vect_patt_138.151, vect_patt_136.153
 648              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 649              		.loc 1 598 81 discriminator 3 view .LVU177
 650 03b1 C4435D46 		vperm2i128	ymm9, ymm4, ymm11, 32	# tmp513, vect_vec_iv_.144, vect_vec_iv_.144,
 650      CB20
 651 03b7 C4C17D70 		vpshufd	ymm1, ymm9, 216	# tmp515, tmp513,
 651      C9D8
 652 03bd C4415DD4 		vpaddq	ymm14, ymm4, ymm8	# vect_vec_iv_.144, vect_vec_iv_.144, tmp496
 652      F0
 653              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 654              		.loc 1 598 44 discriminator 3 view .LVU178
 655 03c2 C5FD7F5E 		vmovdqa	YMMWORD PTR -96[rsi], ymm3	# MEM[base: _341, offset: 32B], vect__55.154
 655      A0
 597:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 656              		.loc 1 597 40 is_stmt 1 discriminator 3 view .LVU179
 597:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 657              		.loc 1 597 25 discriminator 3 view .LVU180
GAS LISTING /tmp/ccr2dACi.s 			page 26


 658              		.loc 1 598 9 discriminator 3 view .LVU181
 659              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 660              		.loc 1 598 81 is_stmt 0 discriminator 3 view .LVU182
 661 03c7 C4C35D46 		vperm2i128	ymm4, ymm4, ymm11, 49	# tmp514, vect_vec_iv_.144, vect_vec_iv_.144,
 661      E331
 662 03cd C57D70FC 		vpshufd	ymm15, ymm4, 216	# tmp516, tmp514,
 662      D8
 663 03d2 C441756C 		vpunpcklqdq	ymm10, ymm1, ymm15	# tmp517, tmp515, tmp516
 663      D7
 664 03d7 C4C24D40 		vpmulld	ymm0, ymm6, ymm10	# vect__45.146, vect_cst__146, tmp517
 664      C2
 665 03dc C5FDFEDD 		vpaddd	ymm3, ymm0, ymm5	# vect__47.147, vect__45.146, vect_cst__148
 666              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 667              		.loc 1 598 99 discriminator 3 view .LVU183
 668 03e0 C44165DB 		vpand	ymm9, ymm3, ymm13	# vect__48.148, vect__47.147, tmp498
 668      CD
 669              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 670              		.loc 1 598 72 discriminator 3 view .LVU184
 671 03e5 C4C11DFA 		vpsubd	ymm4, ymm12, ymm9	# vect__49.149, vect_cst__152, vect__48.148
 671      E1
 672              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 673              		.loc 1 598 116 discriminator 3 view .LVU185
 674 03ea C4427D35 		vpmovzxdq	ymm15, xmm9	#, vect__48.148
 674      F9
 675 03ef C4627D35 		vpmovzxdq	ymm11, xmm4	#, vect__49.149
 675      DC
 676 03f4 C442ED45 		vpsrlvq	ymm10, ymm2, ymm15	# vect_patt_136.153, vect_cst__156, vect_patt_137.152
 676      D7
 677 03f9 C4C2ED47 		vpsllvq	ymm1, ymm2, ymm11	# vect_patt_138.151, vect_cst__156, vect_patt_139.150
 677      CB
 678 03fe C4E37D39 		vextracti128	xmm3, ymm4, 0x1	# tmp529, vect__49.149
 678      E301
 679 0404 C4C175EB 		vpor	ymm0, ymm1, ymm10	# vect__55.154, vect_patt_138.151, vect_patt_136.153
 679      C2
 680 0409 C4437D39 		vextracti128	xmm9, ymm9, 0x1	# tmp532, vect__48.148
 680      C901
 681 040f C4E27D35 		vpmovzxdq	ymm4, xmm3	# vect_patt_139.150, tmp529
 681      E3
 682 0414 C4C27D35 		vpmovzxdq	ymm1, xmm9	# vect_patt_137.152, tmp532
 682      C9
 683 0419 C462ED47 		vpsllvq	ymm11, ymm2, ymm4	# vect_patt_138.151, vect_cst__156, vect_patt_139.150
 683      DC
 684 041e C462ED45 		vpsrlvq	ymm15, ymm2, ymm1	# vect_patt_136.153, vect_cst__156, vect_patt_137.152
 684      F9
 685              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 686              		.loc 1 598 44 discriminator 3 view .LVU186
 687 0423 C5FD7F46 		vmovdqa	YMMWORD PTR -64[rsi], ymm0	# MEM[base: _341, offset: 0B], vect__55.154
 687      C0
 688              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 689              		.loc 1 598 116 discriminator 3 view .LVU187
 690 0428 C44125EB 		vpor	ymm10, ymm11, ymm15	# vect__55.154, vect_patt_138.151, vect_patt_136.153
 690      D7
 691              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 692              		.loc 1 598 44 discriminator 3 view .LVU188
 693 042d C57D7F56 		vmovdqa	YMMWORD PTR -32[rsi], ymm10	# MEM[base: _341, offset: 32B], vect__55.154
 693      E0
 597:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
GAS LISTING /tmp/ccr2dACi.s 			page 27


 694              		.loc 1 597 40 is_stmt 1 discriminator 3 view .LVU189
 597:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 695              		.loc 1 597 25 discriminator 3 view .LVU190
 696 0432 4C39FE   		cmp	rsi, r15	# ivtmp.159, _344
 697 0435 0F85F5FE 		jne	.L9	#,
 697      FFFF
 698              	.L37:
 699 043b 4C89EE   		mov	rsi, r13	# niters_vector_mult_vf.142, niters.140
 700 043e 4883E6F8 		and	rsi, -8	# niters_vector_mult_vf.142,
 701 0442 4901F6   		add	r14, rsi	# tmp.143, niters_vector_mult_vf.142
 702 0445 4939F5   		cmp	r13, rsi	# niters.140, niters_vector_mult_vf.142
 703 0448 0F845A02 		je	.L50	#,
 703      0000
 704 044e C5F877   		vzeroupper
 705              	.L6:
 706              	.LVL33:
 707              		.loc 1 598 9 view .LVU191
 708              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 709              		.loc 1 598 81 is_stmt 0 view .LVU192
 710 0451 4189D7   		mov	r15d, edx	# tmp418, tmp355
 711              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 712              		.loc 1 598 72 view .LVU193
 713 0454 4189C5   		mov	r13d, eax	# tmp421, pattern_size
 714              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 715              		.loc 1 598 81 view .LVU194
 716 0457 450FAFFE 		imul	r15d, r14d	# tmp418, tmp.143
 717              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 718              		.loc 1 598 17 view .LVU195
 719 045b 4F8D1C16 		lea	r11, [r14+r10]	# tmp420,
 720              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 721              		.loc 1 598 81 view .LVU196
 722 045f 4101CF   		add	r15d, ecx	# tmp419, shift
 723              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 724              		.loc 1 598 99 view .LVU197
 725 0462 4183E73F 		and	r15d, 63	# _49,
 726              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 727              		.loc 1 598 127 view .LVU198
 728 0466 C4C283F7 		shrx	rsi, r8, r15	# tmp423, pattern, _49
 728      F0
 729              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 730              		.loc 1 598 72 view .LVU199
 731 046b 4529FD   		sub	r13d, r15d	# tmp421, _49
 732              	# sieve_extend.c:597:     for (counter_t i=0; i<=loop_range; ++i ) {
 597:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 733              		.loc 1 597 40 view .LVU200
 734 046e 4D8D7E01 		lea	r15, 1[r14]	# i,
 735              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 736              		.loc 1 598 55 view .LVU201
 737 0472 C44291F7 		shlx	r13, r8, r13	# tmp422, pattern, tmp421
 737      E8
 738              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 739              		.loc 1 598 116 view .LVU202
 740 0477 4C09EE   		or	rsi, r13	# tmp424, tmp422
 741 047a 4A8934DF 		mov	QWORD PTR [rdi+r11*8], rsi	# *_55, tmp424
 597:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 742              		.loc 1 597 40 is_stmt 1 view .LVU203
 743              	.LVL34:
GAS LISTING /tmp/ccr2dACi.s 			page 28


 597:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 744              		.loc 1 597 25 view .LVU204
 745              	# sieve_extend.c:597:     for (counter_t i=0; i<=loop_range; ++i ) {
 597:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 746              		.loc 1 597 5 is_stmt 0 view .LVU205
 747 047e 4D39CF   		cmp	r15, r9	# i, loop_range
 748 0481 0F87F101 		ja	.L10	#,
 748      0000
 749              		.loc 1 598 9 is_stmt 1 view .LVU206
 750              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 751              		.loc 1 598 81 is_stmt 0 view .LVU207
 752 0487 4189D3   		mov	r11d, edx	# tmp425, tmp355
 753              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 754              		.loc 1 598 72 view .LVU208
 755 048a 4189C5   		mov	r13d, eax	# tmp428, pattern_size
 756              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 757              		.loc 1 598 81 view .LVU209
 758 048d 450FAFDF 		imul	r11d, r15d	# tmp425, i
 759              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 760              		.loc 1 598 17 view .LVU210
 761 0491 4D01D7   		add	r15, r10	# tmp427, destination_start_word
 762              	.LVL35:
 763              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 764              		.loc 1 598 81 view .LVU211
 765 0494 4101CB   		add	r11d, ecx	# tmp426, shift
 766              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 767              		.loc 1 598 99 view .LVU212
 768 0497 4183E33F 		and	r11d, 63	# _83,
 769              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 770              		.loc 1 598 72 view .LVU213
 771 049b 4529DD   		sub	r13d, r11d	# tmp428, _83
 772              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 773              		.loc 1 598 127 view .LVU214
 774 049e C442A3F7 		shrx	r11, r8, r11	# tmp430, pattern, _83
 774      D8
 775              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 776              		.loc 1 598 55 view .LVU215
 777 04a3 C4C291F7 		shlx	rsi, r8, r13	# tmp429, pattern, tmp428
 777      F0
 778              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 779              		.loc 1 598 116 view .LVU216
 780 04a8 4C09DE   		or	rsi, r11	# tmp431, tmp430
 781 04ab 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_181, tmp431
 597:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 782              		.loc 1 597 40 is_stmt 1 view .LVU217
 783 04af 4D8D7E02 		lea	r15, 2[r14]	# i,
 784              	.LVL36:
 597:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 785              		.loc 1 597 25 view .LVU218
 786              	# sieve_extend.c:597:     for (counter_t i=0; i<=loop_range; ++i ) {
 597:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 787              		.loc 1 597 5 is_stmt 0 view .LVU219
 788 04b3 4D39F9   		cmp	r9, r15	# loop_range, i
 789 04b6 0F82BC01 		jb	.L10	#,
 789      0000
 790              		.loc 1 598 9 is_stmt 1 view .LVU220
 791              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
GAS LISTING /tmp/ccr2dACi.s 			page 29


 792              		.loc 1 598 81 is_stmt 0 view .LVU221
 793 04bc 89D6     		mov	esi, edx	# tmp432, tmp355
 794              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 795              		.loc 1 598 72 view .LVU222
 796 04be 4189C5   		mov	r13d, eax	# tmp435, pattern_size
 797              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 798              		.loc 1 598 81 view .LVU223
 799 04c1 410FAFF7 		imul	esi, r15d	# tmp432, i
 800              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 801              		.loc 1 598 17 view .LVU224
 802 04c5 4D01D7   		add	r15, r10	# tmp434, destination_start_word
 803              	.LVL37:
 804              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 805              		.loc 1 598 81 view .LVU225
 806 04c8 01CE     		add	esi, ecx	# tmp433, shift
 807              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 808              		.loc 1 598 99 view .LVU226
 809 04ca 83E63F   		and	esi, 63	# _190,
 810              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 811              		.loc 1 598 72 view .LVU227
 812 04cd 4129F5   		sub	r13d, esi	# tmp435, _190
 813              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 814              		.loc 1 598 127 view .LVU228
 815 04d0 C4C2CBF7 		shrx	rsi, r8, rsi	# tmp437, pattern, _190
 815      F0
 816              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 817              		.loc 1 598 55 view .LVU229
 818 04d5 C44291F7 		shlx	r11, r8, r13	# tmp436, pattern, tmp435
 818      D8
 819              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 820              		.loc 1 598 116 view .LVU230
 821 04da 4C09DE   		or	rsi, r11	# tmp438, tmp436
 822 04dd 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_196, tmp438
 597:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 823              		.loc 1 597 40 is_stmt 1 view .LVU231
 824 04e1 4D8D7E03 		lea	r15, 3[r14]	# i,
 825              	.LVL38:
 597:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 826              		.loc 1 597 25 view .LVU232
 827              	# sieve_extend.c:597:     for (counter_t i=0; i<=loop_range; ++i ) {
 597:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 828              		.loc 1 597 5 is_stmt 0 view .LVU233
 829 04e5 4D39F9   		cmp	r9, r15	# loop_range, i
 830 04e8 0F828A01 		jb	.L10	#,
 830      0000
 831              		.loc 1 598 9 is_stmt 1 view .LVU234
 832              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 833              		.loc 1 598 81 is_stmt 0 view .LVU235
 834 04ee 4189D3   		mov	r11d, edx	# tmp439, tmp355
 835              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 836              		.loc 1 598 72 view .LVU236
 837 04f1 4189C5   		mov	r13d, eax	# tmp442, pattern_size
 838              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 839              		.loc 1 598 81 view .LVU237
 840 04f4 450FAFDF 		imul	r11d, r15d	# tmp439, i
 841              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 842              		.loc 1 598 17 view .LVU238
GAS LISTING /tmp/ccr2dACi.s 			page 30


 843 04f8 4D01D7   		add	r15, r10	# tmp441, destination_start_word
 844              	.LVL39:
 845              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 846              		.loc 1 598 81 view .LVU239
 847 04fb 4101CB   		add	r11d, ecx	# tmp440, shift
 848              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 849              		.loc 1 598 99 view .LVU240
 850 04fe 4183E33F 		and	r11d, 63	# _205,
 851              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 852              		.loc 1 598 127 view .LVU241
 853 0502 C4C2A3F7 		shrx	rsi, r8, r11	# tmp444, pattern, _205
 853      F0
 854              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 855              		.loc 1 598 72 view .LVU242
 856 0507 4529DD   		sub	r13d, r11d	# tmp442, _205
 857              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 858              		.loc 1 598 55 view .LVU243
 859 050a C44291F7 		shlx	r13, r8, r13	# tmp443, pattern, tmp442
 859      E8
 860              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 861              		.loc 1 598 116 view .LVU244
 862 050f 4C09EE   		or	rsi, r13	# tmp445, tmp443
 863 0512 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_211, tmp445
 597:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 864              		.loc 1 597 40 is_stmt 1 view .LVU245
 865 0516 4D8D7E04 		lea	r15, 4[r14]	# i,
 866              	.LVL40:
 597:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 867              		.loc 1 597 25 view .LVU246
 868              	# sieve_extend.c:597:     for (counter_t i=0; i<=loop_range; ++i ) {
 597:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 869              		.loc 1 597 5 is_stmt 0 view .LVU247
 870 051a 4D39F9   		cmp	r9, r15	# loop_range, i
 871 051d 0F825501 		jb	.L10	#,
 871      0000
 872              		.loc 1 598 9 is_stmt 1 view .LVU248
 873              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 874              		.loc 1 598 81 is_stmt 0 view .LVU249
 875 0523 4189D3   		mov	r11d, edx	# tmp446, tmp355
 876              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 877              		.loc 1 598 72 view .LVU250
 878 0526 4189C5   		mov	r13d, eax	# tmp449, pattern_size
 879              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 880              		.loc 1 598 81 view .LVU251
 881 0529 450FAFDF 		imul	r11d, r15d	# tmp446, i
 882              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 883              		.loc 1 598 17 view .LVU252
 884 052d 4D01D7   		add	r15, r10	# tmp448, destination_start_word
 885              	.LVL41:
 886              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 887              		.loc 1 598 81 view .LVU253
 888 0530 4101CB   		add	r11d, ecx	# tmp447, shift
 889              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 890              		.loc 1 598 99 view .LVU254
 891 0533 4183E33F 		and	r11d, 63	# _220,
 892              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 893              		.loc 1 598 127 view .LVU255
GAS LISTING /tmp/ccr2dACi.s 			page 31


 894 0537 C4C2A3F7 		shrx	rsi, r8, r11	# tmp451, pattern, _220
 894      F0
 895              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 896              		.loc 1 598 72 view .LVU256
 897 053c 4529DD   		sub	r13d, r11d	# tmp449, _220
 898              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 899              		.loc 1 598 55 view .LVU257
 900 053f C44291F7 		shlx	r13, r8, r13	# tmp450, pattern, tmp449
 900      E8
 901              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 902              		.loc 1 598 116 view .LVU258
 903 0544 4C09EE   		or	rsi, r13	# tmp452, tmp450
 904 0547 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_226, tmp452
 597:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 905              		.loc 1 597 40 is_stmt 1 view .LVU259
 906 054b 4D8D7E05 		lea	r15, 5[r14]	# i,
 907              	.LVL42:
 597:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 908              		.loc 1 597 25 view .LVU260
 909              	# sieve_extend.c:597:     for (counter_t i=0; i<=loop_range; ++i ) {
 597:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 910              		.loc 1 597 5 is_stmt 0 view .LVU261
 911 054f 4D39F9   		cmp	r9, r15	# loop_range, i
 912 0552 0F822001 		jb	.L10	#,
 912      0000
 913              		.loc 1 598 9 is_stmt 1 view .LVU262
 914              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 915              		.loc 1 598 81 is_stmt 0 view .LVU263
 916 0558 4189D3   		mov	r11d, edx	# tmp453, tmp355
 917              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 918              		.loc 1 598 72 view .LVU264
 919 055b 4189C5   		mov	r13d, eax	# tmp456, pattern_size
 920              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 921              		.loc 1 598 81 view .LVU265
 922 055e 450FAFDF 		imul	r11d, r15d	# tmp453, i
 923              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 924              		.loc 1 598 17 view .LVU266
 925 0562 4D01D7   		add	r15, r10	# tmp455, destination_start_word
 926              	.LVL43:
 927              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 928              		.loc 1 598 81 view .LVU267
 929 0565 4101CB   		add	r11d, ecx	# tmp454, shift
 930              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 931              		.loc 1 598 99 view .LVU268
 932 0568 4183E33F 		and	r11d, 63	# _235,
 933              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 934              		.loc 1 598 127 view .LVU269
 935 056c C4C2A3F7 		shrx	rsi, r8, r11	# tmp458, pattern, _235
 935      F0
 936              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 937              		.loc 1 598 72 view .LVU270
 938 0571 4529DD   		sub	r13d, r11d	# tmp456, _235
 939              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 940              		.loc 1 598 55 view .LVU271
 941 0574 C44291F7 		shlx	r13, r8, r13	# tmp457, pattern, tmp456
 941      E8
 942              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
GAS LISTING /tmp/ccr2dACi.s 			page 32


 943              		.loc 1 598 116 view .LVU272
 944 0579 4C09EE   		or	rsi, r13	# tmp459, tmp457
 945 057c 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_241, tmp459
 597:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 946              		.loc 1 597 40 is_stmt 1 view .LVU273
 947 0580 4D8D7E06 		lea	r15, 6[r14]	# i,
 948              	.LVL44:
 597:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 949              		.loc 1 597 25 view .LVU274
 950              	# sieve_extend.c:597:     for (counter_t i=0; i<=loop_range; ++i ) {
 597:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 951              		.loc 1 597 5 is_stmt 0 view .LVU275
 952 0584 4D39F9   		cmp	r9, r15	# loop_range, i
 953 0587 0F82EB00 		jb	.L10	#,
 953      0000
 954              		.loc 1 598 9 is_stmt 1 view .LVU276
 955              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 956              		.loc 1 598 81 is_stmt 0 view .LVU277
 957 058d 4189D3   		mov	r11d, edx	# tmp460, tmp355
 958              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 959              		.loc 1 598 72 view .LVU278
 960 0590 4189C5   		mov	r13d, eax	# tmp463, pattern_size
 961              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 962              		.loc 1 598 81 view .LVU279
 963 0593 450FAFDF 		imul	r11d, r15d	# tmp460, i
 964              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 965              		.loc 1 598 17 view .LVU280
 966 0597 4D01D7   		add	r15, r10	# tmp462, destination_start_word
 967              	.LVL45:
 968              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 969              		.loc 1 598 81 view .LVU281
 970 059a 4101CB   		add	r11d, ecx	# tmp461, shift
 971              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 972              		.loc 1 598 99 view .LVU282
 973 059d 4183E33F 		and	r11d, 63	# _250,
 974              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 975              		.loc 1 598 127 view .LVU283
 976 05a1 C4C2A3F7 		shrx	rsi, r8, r11	# tmp465, pattern, _250
 976      F0
 977              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 978              		.loc 1 598 72 view .LVU284
 979 05a6 4529DD   		sub	r13d, r11d	# tmp463, _250
 980              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 981              		.loc 1 598 55 view .LVU285
 982 05a9 C44291F7 		shlx	r13, r8, r13	# tmp464, pattern, tmp463
 982      E8
 983              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 984              		.loc 1 598 116 view .LVU286
 985 05ae 4C09EE   		or	rsi, r13	# tmp466, tmp464
 986 05b1 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_256, tmp466
 597:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 987              		.loc 1 597 40 is_stmt 1 view .LVU287
 988 05b5 4D8D7E07 		lea	r15, 7[r14]	# i,
 989              	.LVL46:
 597:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 990              		.loc 1 597 25 view .LVU288
 991              	# sieve_extend.c:597:     for (counter_t i=0; i<=loop_range; ++i ) {
GAS LISTING /tmp/ccr2dACi.s 			page 33


 597:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 992              		.loc 1 597 5 is_stmt 0 view .LVU289
 993 05b9 4D39F9   		cmp	r9, r15	# loop_range, i
 994 05bc 0F82B600 		jb	.L10	#,
 994      0000
 995              		.loc 1 598 9 is_stmt 1 view .LVU290
 996              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 997              		.loc 1 598 81 is_stmt 0 view .LVU291
 998 05c2 4189D3   		mov	r11d, edx	# tmp467, tmp355
 999              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1000              		.loc 1 598 72 view .LVU292
 1001 05c5 4189C5   		mov	r13d, eax	# tmp470, pattern_size
 1002              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1003              		.loc 1 598 81 view .LVU293
 1004 05c8 450FAFDF 		imul	r11d, r15d	# tmp467, i
 1005              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1006              		.loc 1 598 17 view .LVU294
 1007 05cc 4D01D7   		add	r15, r10	# tmp469, destination_start_word
 1008              	.LVL47:
 1009              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1010              		.loc 1 598 81 view .LVU295
 1011 05cf 4101CB   		add	r11d, ecx	# tmp468, shift
 1012              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1013              		.loc 1 598 99 view .LVU296
 1014 05d2 4183E33F 		and	r11d, 63	# _265,
 1015              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1016              		.loc 1 598 127 view .LVU297
 1017 05d6 C4C2A3F7 		shrx	rsi, r8, r11	# tmp472, pattern, _265
 1017      F0
 1018              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1019              		.loc 1 598 72 view .LVU298
 1020 05db 4529DD   		sub	r13d, r11d	# tmp470, _265
 1021              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1022              		.loc 1 598 55 view .LVU299
 1023 05de C44291F7 		shlx	r13, r8, r13	# tmp471, pattern, tmp470
 1023      E8
 1024              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1025              		.loc 1 598 116 view .LVU300
 1026 05e3 4C09EE   		or	rsi, r13	# tmp473, tmp471
 1027 05e6 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_271, tmp473
 597:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1028              		.loc 1 597 40 is_stmt 1 view .LVU301
 1029 05ea 4D8D7E08 		lea	r15, 8[r14]	# i,
 1030              	.LVL48:
 597:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1031              		.loc 1 597 25 view .LVU302
 1032              	# sieve_extend.c:597:     for (counter_t i=0; i<=loop_range; ++i ) {
 597:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1033              		.loc 1 597 5 is_stmt 0 view .LVU303
 1034 05ee 4D39F9   		cmp	r9, r15	# loop_range, i
 1035 05f1 0F828100 		jb	.L10	#,
 1035      0000
 1036              		.loc 1 598 9 is_stmt 1 view .LVU304
 1037              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1038              		.loc 1 598 81 is_stmt 0 view .LVU305
 1039 05f7 4189D3   		mov	r11d, edx	# tmp474, tmp355
 1040              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
GAS LISTING /tmp/ccr2dACi.s 			page 34


 1041              		.loc 1 598 72 view .LVU306
 1042 05fa 4189C5   		mov	r13d, eax	# tmp477, pattern_size
 1043              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1044              		.loc 1 598 81 view .LVU307
 1045 05fd 450FAFDF 		imul	r11d, r15d	# tmp474, i
 1046              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1047              		.loc 1 598 17 view .LVU308
 1048 0601 4D01D7   		add	r15, r10	# tmp476, destination_start_word
 1049              	.LVL49:
 1050              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1051              		.loc 1 598 81 view .LVU309
 1052 0604 4101CB   		add	r11d, ecx	# tmp475, shift
 1053              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1054              		.loc 1 598 99 view .LVU310
 1055 0607 4183E33F 		and	r11d, 63	# _280,
 1056              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1057              		.loc 1 598 127 view .LVU311
 1058 060b C4C2A3F7 		shrx	rsi, r8, r11	# tmp479, pattern, _280
 1058      F0
 1059              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1060              		.loc 1 598 72 view .LVU312
 1061 0610 4529DD   		sub	r13d, r11d	# tmp477, _280
 1062              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1063              		.loc 1 598 55 view .LVU313
 1064 0613 C44291F7 		shlx	r13, r8, r13	# tmp478, pattern, tmp477
 1064      E8
 1065              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1066              		.loc 1 598 116 view .LVU314
 1067 0618 4C09EE   		or	rsi, r13	# tmp480, tmp478
 1068 061b 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_286, tmp480
 597:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1069              		.loc 1 597 40 is_stmt 1 view .LVU315
 1070 061f 4D8D7E09 		lea	r15, 9[r14]	# i,
 1071              	.LVL50:
 597:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1072              		.loc 1 597 25 view .LVU316
 1073              	# sieve_extend.c:597:     for (counter_t i=0; i<=loop_range; ++i ) {
 597:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1074              		.loc 1 597 5 is_stmt 0 view .LVU317
 1075 0623 4D39F9   		cmp	r9, r15	# loop_range, i
 1076 0626 7250     		jb	.L10	#,
 1077              		.loc 1 598 9 is_stmt 1 view .LVU318
 1078              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1079              		.loc 1 598 81 is_stmt 0 view .LVU319
 1080 0628 4189D3   		mov	r11d, edx	# tmp481, tmp355
 1081              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1082              		.loc 1 598 72 view .LVU320
 1083 062b 4189C5   		mov	r13d, eax	# tmp484, pattern_size
 1084              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1085              		.loc 1 598 81 view .LVU321
 1086 062e 450FAFDF 		imul	r11d, r15d	# tmp481, i
 1087              	# sieve_extend.c:597:     for (counter_t i=0; i<=loop_range; ++i ) {
 597:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1088              		.loc 1 597 40 view .LVU322
 1089 0632 4983C60A 		add	r14, 10	# i,
 1090              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1091              		.loc 1 598 17 view .LVU323
GAS LISTING /tmp/ccr2dACi.s 			page 35


 1092 0636 4D01D7   		add	r15, r10	# tmp483, destination_start_word
 1093              	.LVL51:
 1094              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1095              		.loc 1 598 81 view .LVU324
 1096 0639 4101CB   		add	r11d, ecx	# tmp482, shift
 1097              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1098              		.loc 1 598 99 view .LVU325
 1099 063c 4183E33F 		and	r11d, 63	# _295,
 1100              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1101              		.loc 1 598 127 view .LVU326
 1102 0640 C4C2A3F7 		shrx	rsi, r8, r11	# tmp486, pattern, _295
 1102      F0
 1103              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1104              		.loc 1 598 72 view .LVU327
 1105 0645 4529DD   		sub	r13d, r11d	# tmp484, _295
 1106              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1107              		.loc 1 598 55 view .LVU328
 1108 0648 C44291F7 		shlx	r13, r8, r13	# tmp485, pattern, tmp484
 1108      E8
 1109              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1110              		.loc 1 598 116 view .LVU329
 1111 064d 4C09EE   		or	rsi, r13	# tmp487, tmp485
 1112              	# sieve_extend.c:597:     for (counter_t i=0; i<=loop_range; ++i ) {
 597:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1113              		.loc 1 597 5 view .LVU330
 1114 0650 4D39F1   		cmp	r9, r14	# loop_range, i
 1115              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1116              		.loc 1 598 116 view .LVU331
 1117 0653 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_301, tmp487
 597:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1118              		.loc 1 597 40 is_stmt 1 view .LVU332
 1119              	.LVL52:
 597:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1120              		.loc 1 597 25 view .LVU333
 1121              	# sieve_extend.c:597:     for (counter_t i=0; i<=loop_range; ++i ) {
 597:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1122              		.loc 1 597 5 is_stmt 0 view .LVU334
 1123 0657 721F     		jb	.L10	#,
 1124              		.loc 1 598 9 is_stmt 1 view .LVU335
 1125              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1126              		.loc 1 598 81 is_stmt 0 view .LVU336
 1127 0659 410FAFD6 		imul	edx, r14d	# tmp488, i
 1128              	.LVL53:
 1129              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1130              		.loc 1 598 17 view .LVU337
 1131 065d 4D01D6   		add	r14, r10	# tmp490, destination_start_word
 1132              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1133              		.loc 1 598 81 view .LVU338
 1134 0660 01D1     		add	ecx, edx	# tmp489, tmp488
 1135              	.LVL54:
 1136              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1137              		.loc 1 598 99 view .LVU339
 1138 0662 83E13F   		and	ecx, 63	# _108,
 1139              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1140              		.loc 1 598 72 view .LVU340
 1141 0665 29C8     		sub	eax, ecx	# tmp491, _108
 1142              	.LVL55:
GAS LISTING /tmp/ccr2dACi.s 			page 36


 1143              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1144              		.loc 1 598 55 view .LVU341
 1145 0667 C4C2F9F7 		shlx	rdx, r8, rax	# tmp492, pattern, tmp491
 1145      D0
 1146              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1147              		.loc 1 598 127 view .LVU342
 1148 066c C442F3F7 		shrx	r8, r8, rcx	# tmp493, pattern, _108
 1148      C0
 1149              	.LVL56:
 1150              	# sieve_extend.c:598:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1151              		.loc 1 598 116 view .LVU343
 1152 0671 4909D0   		or	r8, rdx	# tmp494, tmp492
 1153 0674 4E8904F7 		mov	QWORD PTR [rdi+r14*8], r8	# *_42, tmp494
 597:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1154              		.loc 1 597 40 is_stmt 1 view .LVU344
 597:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1155              		.loc 1 597 25 view .LVU345
 1156              	.L10:
 597:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1157              		.loc 1 597 25 is_stmt 0 view .LVU346
 1158              	.LBE317:
 599:sieve_extend.c ****     }
 600:sieve_extend.c ****     bitarray[destination_stop_word] &= chopmask(destination_stop);
 1159              		.loc 1 600 5 is_stmt 1 view .LVU347
 1160              	# sieve_extend.c:600:     bitarray[destination_stop_word] &= chopmask(destination_stop);
 1161              		.loc 1 600 37 is_stmt 0 view .LVU348
 1162 0678 4A211CE7 		and	QWORD PTR [rdi+r12*8], rbx	# *_57, _124
 1163              	# sieve_extend.c:601: }
 601:sieve_extend.c **** }
 1164              		.loc 1 601 1 view .LVU349
 1165 067c 488D65D8 		lea	rsp, -40[rbp]	#,
 1166 0680 5B       		pop	rbx	#
 1167 0681 415C     		pop	r12	#
 1168              	.LVL57:
 1169              		.loc 1 601 1 view .LVU350
 1170 0683 415D     		pop	r13	#
 1171 0685 415E     		pop	r14	#
 1172 0687 415F     		pop	r15	#
 1173 0689 5D       		pop	rbp	#
 1174              		.cfi_remember_state
 1175              		.cfi_def_cfa 7, 8
 1176 068a C3       		ret	
 1177              	.LVL58:
 1178 068b 0F1F4400 		.p2align 4,,7
 1178      00
 1179              		.p2align 3
 1180              	.L49:
 1181              		.cfi_restore_state
 582:sieve_extend.c ****         return;
 1182              		.loc 1 582 9 is_stmt 1 view .LVU351
 1183              	# sieve_extend.c:582:         bitarray[destination_start_word] |= (pattern << bitindex(destination_
 582:sieve_extend.c ****         return;
 1184              		.loc 1 582 86 is_stmt 0 view .LVU352
 1185 0690 4821D8   		and	rax, rbx	# tmp351, _124
 1186              	# sieve_extend.c:582:         bitarray[destination_start_word] |= (pattern << bitindex(destination_
 582:sieve_extend.c ****         return;
 1187              		.loc 1 582 42 view .LVU353
GAS LISTING /tmp/ccr2dACi.s 			page 37


 1188 0693 4C09F8   		or	rax, r15	# tmp352, pretmp_118
 1189 0696 498906   		mov	QWORD PTR [r14], rax	# *_117, tmp352
 583:sieve_extend.c ****     }
 1190              		.loc 1 583 9 is_stmt 1 view .LVU354
 1191              	# sieve_extend.c:601: }
 1192              		.loc 1 601 1 is_stmt 0 view .LVU355
 1193 0699 488D65D8 		lea	rsp, -40[rbp]	#,
 1194 069d 5B       		pop	rbx	#
 1195 069e 415C     		pop	r12	#
 1196              	.LVL59:
 1197              		.loc 1 601 1 view .LVU356
 1198 06a0 415D     		pop	r13	#
 1199 06a2 415E     		pop	r14	#
 1200 06a4 415F     		pop	r15	#
 1201 06a6 5D       		pop	rbp	#
 1202              		.cfi_remember_state
 1203              		.cfi_def_cfa 7, 8
 1204 06a7 C3       		ret	
 1205              	.LVL60:
 1206              	.L50:
 1207              		.cfi_restore_state
 1208              		.loc 1 601 1 view .LVU357
 1209 06a8 C5F877   		vzeroupper
 1210 06ab EBCB     		jmp	.L10	#
 1211              	.LVL61:
 1212              	.L12:
 1213              	.LBB318:
 1214              	# sieve_extend.c:597:     for (counter_t i=0; i<=loop_range; ++i ) {
 597:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1215              		.loc 1 597 20 view .LVU358
 1216 06ad 4531F6   		xor	r14d, r14d	# i
 1217 06b0 E979FBFF 		jmp	.L7	#
 1217      FF
 1218              	.L11:
 1219 06b5 4531F6   		xor	r14d, r14d	# tmp.143
 1220              		.p2align 4,,2
 1221 06b8 E994FDFF 		jmp	.L6	#
 1221      FF
 1222              	.LBE318:
 1223              		.cfi_endproc
 1224              	.LFE65:
 1226 06bd 0F1F00   		.p2align 4
 1228              	extendSieve_shiftright_ivdep:
 1229              	.LVL62:
 1230              	.LFB70:
 602:sieve_extend.c **** 
 603:sieve_extend.c **** static void extendSieve_aligned(bitword_t* bitarray, const counter_t source_start, const counter_t 
 604:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 605:sieve_extend.c **** 
 606:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 607:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 608:sieve_extend.c ****     counter_t source_word = wordindex(source_start);
 609:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 610:sieve_extend.c ****     
 611:sieve_extend.c ****     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 612:sieve_extend.c **** 
 613:sieve_extend.c ****     while (copy_word + size <= destination_stop_word) {
GAS LISTING /tmp/ccr2dACi.s 			page 38


 614:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 615:sieve_extend.c ****         copy_word += size;
 616:sieve_extend.c ****     }
 617:sieve_extend.c **** 
 618:sieve_extend.c ****    while (copy_word < destination_stop_word) {
 619:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 620:sieve_extend.c ****         source_word++;
 621:sieve_extend.c ****         copy_word++;
 622:sieve_extend.c ****     }
 623:sieve_extend.c **** 
 624:sieve_extend.c **** }
 625:sieve_extend.c **** 
 626:sieve_extend.c **** //https://stackoverflow.com/questions/1898153/how-to-determine-if-memory-is-aligned
 627:sieve_extend.c **** #define is_unaligned(POINTER, BYTE_COUNT) (((uintptr_t)(const void *)(POINTER)) % (BYTE_COUNT))
 628:sieve_extend.c **** 
 629:sieve_extend.c **** void shiftvec(uint64_t* __restrict dst, const uint64_t* __restrict src, int size, int shift)
 630:sieve_extend.c **** {
 631:sieve_extend.c ****     int i = 0;
 632:sieve_extend.c ****     // MSVC: use steps of 2 for SSE, 4 for AVX2, 8 for AVX512
 633:sieve_extend.c ****     for (; i+4 < size; i+=4,dst+=4,src+=4)
 634:sieve_extend.c ****     {
 635:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 636:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 637:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 638:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 639:sieve_extend.c ****     }
 640:sieve_extend.c ****     for (; i < size; ++i,++src,++dst)
 641:sieve_extend.c ****     {
 642:sieve_extend.c ****         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 643:sieve_extend.c ****     }    
 644:sieve_extend.c **** }
 645:sieve_extend.c **** 
 646:sieve_extend.c **** #define forward_distance 3
 647:sieve_extend.c **** static void extendSieve_shiftright_ptr(bitword_t* bitarray, const counter_t source_start, const cou
 648:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 649:sieve_extend.c ****    
 650:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 651:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 652:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_calc(source_start);
 653:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 654:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 655:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 656:sieve_extend.c **** 
 657:sieve_extend.c ****     if (copy_word >= destination_stop_word) { 
 658:sieve_extend.c ****         bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose da
 659:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 660:sieve_extend.c ****                                 & keepmask(copy_start) & chopmask(destination_stop);
 661:sieve_extend.c ****         return; // rapid exit for one word variant
 662:sieve_extend.c ****     }
 663:sieve_extend.c **** 
 664:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose data
 665:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 666:sieve_extend.c ****                                 & keepmask(copy_start);
 667:sieve_extend.c **** 
 668:sieve_extend.c ****     copy_word++;
 669:sieve_extend.c **** 
 670:sieve_extend.c ****     debug printf("..copy distance %ju\n",(uintmax_t) copy_word - (uintmax_t) source_word);
GAS LISTING /tmp/ccr2dACi.s 			page 39


 671:sieve_extend.c ****     if (((copy_word - source_word) > forward_distance)) {
 672:sieve_extend.c ****         // shiftvec(&bitarray[copy_word], &bitarray[source_word],size_word,shift );
 673:sieve_extend.c ****         
 674:sieve_extend.c ****         bitword_t* __restrict copy_ptr   = &bitarray[copy_word];
 675:sieve_extend.c ****         bitword_t* __restrict source_ptr = &bitarray[source_word];
 676:sieve_extend.c ****         // bitword_t* copy_ptr   = &bitarray[copy_word];
 677:sieve_extend.c ****         // bitword_t* source_ptr = &bitarray[source_word];
 678:sieve_extend.c ****         bitword_t* __restrict dest_ptr   = &bitarray[destination_stop_word];
 679:sieve_extend.c ****         long size_word_ptr   = dest_ptr - copy_ptr;
 680:sieve_extend.c **** 
 681:sieve_extend.c ****         #pragma ivdep 
 682:sieve_extend.c ****         for (long i = 0; (i+forward_distance) < size_word_ptr; i+=forward_distance, copy_ptr+=forwa
 683:sieve_extend.c ****             #pragma ivdep
 684:sieve_extend.c ****             for (counter_t j = 0; j < forward_distance; ++j) 
 685:sieve_extend.c ****                 *(copy_ptr+j)  = (*(source_ptr+j  ) >> shift_flipped); 
 686:sieve_extend.c ****             #pragma ivdep
 687:sieve_extend.c ****             for (counter_t j = 0; j < forward_distance; ++j) 
 688:sieve_extend.c ****                 *(copy_ptr+j) |= (*(source_ptr+j+1) << shift);
 689:sieve_extend.c ****         }
 690:sieve_extend.c **** 
 691:sieve_extend.c ****         size_word_ptr = dest_ptr - copy_ptr;
 692:sieve_extend.c ****         #pragma ivdep 
 693:sieve_extend.c ****         for (counter_t i=0; i <= size_word_ptr; i++)
 694:sieve_extend.c ****             *(copy_ptr+i) = (*(source_ptr+i) >> shift_flipped) | (*(source_ptr+i+1) << shift);
 695:sieve_extend.c **** 
 696:sieve_extend.c ****         // #pragma GCC ivdep
 697:sieve_extend.c ****         // for (; i <= size_word; i++) 
 698:sieve_extend.c ****         //     *(copy_ptr+i) = (*(source_ptr+i) >> shift_flipped) | (*(source_ptr+i+1) << shift);
 699:sieve_extend.c ****     }
 700:sieve_extend.c ****     else {
 701:sieve_extend.c ****         register counter_t i = 0;
 702:sieve_extend.c ****         bitword_t* copy_ptr   = &bitarray[copy_word];
 703:sieve_extend.c ****         bitword_t* source_ptr = &bitarray[source_word];
 704:sieve_extend.c ****         bitword_t* dest_ptr   = &bitarray[destination_stop_word];
 705:sieve_extend.c ****         long size_word_ptr   = dest_ptr - copy_ptr;
 706:sieve_extend.c ****         for (; i <= size_word_ptr; i++)
 707:sieve_extend.c ****             *(copy_ptr+i) = (*(source_ptr+i) >> shift_flipped) | (*(source_ptr+i+1) << shift);
 708:sieve_extend.c ****     }
 709:sieve_extend.c **** 
 710:sieve_extend.c ****     // for (; i <= size_word; i++) 
 711:sieve_extend.c ****     //     *(copy_ptr+i) = (*(source_ptr+i) >> shift_flipped) | (*(source_ptr+i+1) << shift);
 712:sieve_extend.c **** 
 713:sieve_extend.c ****     // for (; i <= size_word; i++) 
 714:sieve_extend.c ****     //     bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_wo
 715:sieve_extend.c **** 
 716:sieve_extend.c ****     // for (; copy_word <= destination_stop_word; copy_word++, source_word++ ) 
 717:sieve_extend.c ****     //     bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1
 718:sieve_extend.c **** }
 719:sieve_extend.c **** 
 720:sieve_extend.c **** static inline counter_t extendSieve_shiftleft_unrolled(bitword_t* bitarray, const counter_t aligned
 721:sieve_extend.c ****     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_copy_word - 2) : 0; // s
 722:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 723:sieve_extend.c ****     counter_t distance = 0;
 724:sieve_extend.c ****     while (copy_word < fast_loop_stop_word) {
 725:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 726:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 727:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
GAS LISTING /tmp/ccr2dACi.s 			page 40


 728:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 729:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 730:sieve_extend.c ****         copy_word += 2;
 731:sieve_extend.c ****         source_word += 2;
 732:sieve_extend.c ****         distance += 2;
 733:sieve_extend.c ****     }
 734:sieve_extend.c ****     return distance;
 735:sieve_extend.c **** }
 736:sieve_extend.c **** 
 737:sieve_extend.c **** //static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source_start, const counte
 738:sieve_extend.c **** //    const bitword_t* destination_stop_ptr = &bitarray[wordindex(destination_stop)];
 739:sieve_extend.c **** //    const counter_t copy_start = source_start + size;
 740:sieve_extend.c **** //    register const bitshift_t shift = bitindex_calc(source_start) - bitindex_calc(copy_start);
 741:sieve_extend.c **** //    register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 742:sieve_extend.c **** //    register bitword_t* source_ptr = &bitarray[wordindex(source_start)];
 743:sieve_extend.c **** //    register bitword_t* copy_ptr = &bitarray[wordindex(copy_start)];
 744:sieve_extend.c **** //    const bitword_t* aligned_copy_ptr = min(source_ptr + size, destination_stop_ptr); // after <<
 745:sieve_extend.c **** //
 746:sieve_extend.c **** //    *copy_ptr |= ((*source_ptr >> shift) | (*(source_ptr+1) << shift_flipped)) & ~chopmask2(copy_
 747:sieve_extend.c **** //    copy_ptr++;
 748:sieve_extend.c **** //    source_ptr++;
 749:sieve_extend.c **** //
 750:sieve_extend.c **** //    while (copy_ptr+3 <= aligned_copy_ptr) {
 751:sieve_extend.c **** //        bitword_t source0 = *source_ptr >> shift;
 752:sieve_extend.c **** //        bitword_t source1 = *(source_ptr+1);
 753:sieve_extend.c **** //        *copy_ptr = (source0) | (source1 << shift_flipped);
 754:sieve_extend.c **** //        bitword_t source2 = *(source_ptr+2);
 755:sieve_extend.c **** //        *(copy_ptr+1) = (source1 >> shift) | (source2 << shift_flipped);
 756:sieve_extend.c **** //        bitword_t source3 = *(source_ptr+3);
 757:sieve_extend.c **** //        *(copy_ptr+2) = (source2 >> shift) | (source3 << shift_flipped);
 758:sieve_extend.c **** //
 759:sieve_extend.c **** //        copy_ptr+=3;
 760:sieve_extend.c **** //        source_ptr+=3;
 761:sieve_extend.c **** //    }
 762:sieve_extend.c **** //
 763:sieve_extend.c **** //    while (copy_ptr <= aligned_copy_ptr) {
 764:sieve_extend.c **** //        register bitword_t source0 = *source_ptr >> shift;
 765:sieve_extend.c **** //        source_ptr++;
 766:sieve_extend.c **** //        register bitword_t source1 = *source_ptr << shift_flipped;
 767:sieve_extend.c **** //        *copy_ptr = source0 | source1;
 768:sieve_extend.c **** //        copy_ptr++;
 769:sieve_extend.c **** //    }
 770:sieve_extend.c **** //
 771:sieve_extend.c **** //    if (copy_ptr >= destination_stop_ptr) return;
 772:sieve_extend.c **** //
 773:sieve_extend.c **** //    source_ptr = copy_ptr - size; // recalibrate
 774:sieve_extend.c **** //    const size_t memsize = (size_t)size*sizeof(bitword_t);
 775:sieve_extend.c **** //     while (copy_ptr + size <= destination_stop_ptr) {
 776:sieve_extend.c **** //         memcpy(copy_ptr, source_ptr, memsize );
 777:sieve_extend.c **** //         copy_ptr += size;
 778:sieve_extend.c **** //     }
 779:sieve_extend.c **** //
 780:sieve_extend.c **** //    while (copy_ptr <= destination_stop_ptr) {
 781:sieve_extend.c **** //        // *copy_ptr++ = *source_ptr++;
 782:sieve_extend.c **** //        *copy_ptr = *source_ptr;
 783:sieve_extend.c **** //        copy_ptr++;
 784:sieve_extend.c **** //        source_ptr++;
GAS LISTING /tmp/ccr2dACi.s 			page 41


 785:sieve_extend.c **** //    }
 786:sieve_extend.c **** //
 787:sieve_extend.c **** //}
 788:sieve_extend.c **** 
 789:sieve_extend.c **** 
 790:sieve_extend.c **** static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t source_start, const c
 1231              		.loc 1 790 149 is_stmt 1 view -0
 1232              		.cfi_startproc
 791:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1233              		.loc 1 791 5 view .LVU360
 792:sieve_extend.c ****    
 793:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 1234              		.loc 1 793 5 view .LVU361
 1235              	# sieve_extend.c:790: static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t
 790:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1236              		.loc 1 790 149 is_stmt 0 view .LVU362
 1237 06c0 55       		push	rbp	#
 1238              		.cfi_def_cfa_offset 16
 1239              		.cfi_offset 6, -16
 1240              	# sieve_extend.c:794:     const counter_t copy_start = source_start + size;
 794:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 1241              		.loc 1 794 21 view .LVU363
 1242 06c1 4C8D0416 		lea	r8, [rsi+rdx]	# copy_start,
 1243              	# sieve_extend.c:793:     const counter_t destination_stop_word = wordindex(destination_stop);
 793:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 1244              		.loc 1 793 21 view .LVU364
 1245 06c5 4889C8   		mov	rax, rcx	# destination_stop_word, destination_stop
 1246              	# sieve_extend.c:790: static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t
 790:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1247              		.loc 1 790 149 view .LVU365
 1248 06c8 4889E5   		mov	rbp, rsp	#,
 1249              		.cfi_def_cfa_register 6
 1250              	# sieve_extend.c:795:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 795:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_calc(source_start);
 1251              		.loc 1 795 39 view .LVU366
 1252 06cb 4D89C2   		mov	r10, r8	# _4, copy_start
 1253              	# sieve_extend.c:790: static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t
 790:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1254              		.loc 1 790 149 view .LVU367
 1255 06ce 4157     		push	r15	#
 1256              	# sieve_extend.c:798:     register counter_t copy_word = wordindex(copy_start);
 796:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 797:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 798:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 1257              		.loc 1 798 24 view .LVU368
 1258 06d0 49C1E806 		shr	r8, 6	# copy_word,
 1259              	# sieve_extend.c:795:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 795:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1260              		.loc 1 795 39 view .LVU369
 1261 06d4 4183E23F 		and	r10d, 63	# _4,
 1262              	# sieve_extend.c:790: static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t
 790:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1263              		.loc 1 790 149 view .LVU370
 1264 06d8 4156     		push	r14	#
 1265              	# sieve_extend.c:793:     const counter_t destination_stop_word = wordindex(destination_stop);
 793:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 1266              		.loc 1 793 21 view .LVU371
GAS LISTING /tmp/ccr2dACi.s 			page 42


 1267 06da 48C1E806 		shr	rax, 6	# destination_stop_word,
 1268              		.cfi_offset 15, -24
 1269              		.cfi_offset 14, -32
 1270              	# sieve_extend.c:795:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 795:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1271              		.loc 1 795 31 view .LVU372
 1272 06de 4D89D6   		mov	r14, r10	# shift, _4
 1273              	# sieve_extend.c:790: static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t
 790:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1274              		.loc 1 790 149 view .LVU373
 1275 06e1 4155     		push	r13	#
 1276 06e3 F7D1     		not	ecx	# tmp401
 1277              	.LVL63:
 790:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1278              		.loc 1 790 149 view .LVU374
 1279 06e5 4154     		push	r12	#
 1280              		.cfi_offset 13, -40
 1281              		.cfi_offset 12, -48
 1282 06e7 4E8D24C5 		lea	r12, 0[0+r8*8]	# _176,
 1282      00000000 
 1283 06ef 53       		push	rbx	#
 1284 06f0 4E8D2C27 		lea	r13, [rdi+r12]	# _177,
 1285 06f4 4D8B7D00 		mov	r15, QWORD PTR 0[r13]	# pretmp_178, *_177
 1286 06f8 4883E4E0 		and	rsp, -32	#,
 1287              		.cfi_offset 3, -56
 1288              	.LVL64:
 794:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_calc(source_start);
 1289              		.loc 1 794 5 is_stmt 1 view .LVU375
 795:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1290              		.loc 1 795 5 view .LVU376
 1291              	# sieve_extend.c:793:     const counter_t destination_stop_word = wordindex(destination_stop);
 793:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 1292              		.loc 1 793 21 is_stmt 0 view .LVU377
 1293 06fc 48894424 		mov	QWORD PTR -8[rsp], rax	# %sfp, destination_stop_word
 1293      F8
 1294              	.LVL65:
 1295              	# sieve_extend.c:795:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 795:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1296              		.loc 1 795 67 view .LVU378
 1297 0701 4889F0   		mov	rax, rsi	# _5, source_start
 1298              	# sieve_extend.c:797:     register counter_t source_word = wordindex(source_start);
 797:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 1299              		.loc 1 797 24 view .LVU379
 1300 0704 48C1EE06 		shr	rsi, 6	# source_word,
 1301              	.LVL66:
 1302              	# sieve_extend.c:795:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 795:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1303              		.loc 1 795 67 view .LVU380
 1304 0708 83E03F   		and	eax, 63	# _5,
 1305              	.LVL67:
 796:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 1306              		.loc 1 796 5 is_stmt 1 view .LVU381
 797:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 1307              		.loc 1 797 5 view .LVU382
 1308              		.loc 1 798 5 view .LVU383
 799:sieve_extend.c **** 
 800:sieve_extend.c ****     if (copy_word >= destination_stop_word) { 
GAS LISTING /tmp/ccr2dACi.s 			page 43


 1309              		.loc 1 800 5 view .LVU384
 1310              	# sieve_extend.c:795:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 795:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1311              		.loc 1 795 31 is_stmt 0 view .LVU385
 1312 070b 4929C6   		sub	r14, rax	# shift, _5
 1313              	.LVL68:
 795:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1314              		.loc 1 795 31 view .LVU386
 1315 070e 488D1CF5 		lea	rbx, 0[0+rsi*8]	# _179,
 1315      00000000 
 1316              	# sieve_extend.c:796:     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 796:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 1317              		.loc 1 796 31 view .LVU387
 1318 0716 4883C040 		add	rax, 64	# tmp394,
 1319              	.LVL69:
 796:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 1320              		.loc 1 796 31 view .LVU388
 1321 071a 4C8D1C1F 		lea	r11, [rdi+rbx]	# _180,
 1322 071e 4C897C24 		mov	QWORD PTR -24[rsp], r15	# %sfp, pretmp_178
 1322      E8
 1323 0723 4C29D0   		sub	rax, r10	# shift_flipped, _4
 1324              	.LVL70:
 796:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 1325              		.loc 1 796 31 view .LVU389
 1326 0726 C44289F7 		shlx	r9, QWORD PTR [r11], r14	# tmp396, *_180, shift
 1326      0B
 1327 072b C442FBF7 		shrx	r15, r15, rax	# tmp398, pretmp_178, shift_flipped
 1327      FF
 1328 0730 44897424 		mov	DWORD PTR -12[rsp], r14d	# %sfp, shift
 1328      F4
 1329 0735 4D09F9   		or	r9, r15	# _186, tmp398
 1330              	# sieve_extend.c:800:     if (copy_word >= destination_stop_word) { 
 1331              		.loc 1 800 8 view .LVU390
 1332 0738 4C394424 		cmp	QWORD PTR -8[rsp], r8	# %sfp, copy_word
 1332      F8
 1333 073d 49C7C7FF 		mov	r15, -1	# tmp400,
 1333      FFFFFF
 1334 0744 894424F0 		mov	DWORD PTR -16[rsp], eax	# %sfp, shift_flipped
 1335 0748 C442A9F7 		shlx	r10, r15, r10	# _189, tmp400, _4
 1335      D7
 1336              	.LVL71:
 1337              		.loc 1 800 8 view .LVU391
 1338 074d C442F3F7 		shrx	r15, r15, rcx	# _193, tmp400, tmp401
 1338      FF
 1339 0752 0F86F80A 		jbe	.L260	#,
 1339      0000
 801:sieve_extend.c ****         bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose da
 802:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 803:sieve_extend.c ****                                 & keepmask(copy_start) & chopmask(destination_stop);
 804:sieve_extend.c ****         return; // rapid exit for one word variant
 805:sieve_extend.c ****     }
 806:sieve_extend.c **** 
 807:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose data
 1340              		.loc 1 807 5 is_stmt 1 view .LVU392
 1341              	# sieve_extend.c:809:                                 & keepmask(copy_start);
 808:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 809:sieve_extend.c ****                                 & keepmask(copy_start);
GAS LISTING /tmp/ccr2dACi.s 			page 44


 1342              		.loc 1 809 33 is_stmt 0 view .LVU393
 1343 0758 4D21D1   		and	r9, r10	# tmp407, _189
 1344              	# sieve_extend.c:811:     copy_word++;
 810:sieve_extend.c **** 
 811:sieve_extend.c ****     copy_word++;
 1345              		.loc 1 811 14 view .LVU394
 1346 075b 498D4801 		lea	rcx, 1[r8]	# copy_word,
 1347              	# sieve_extend.c:807:     bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start
 807:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 1348              		.loc 1 807 25 view .LVU395
 1349 075f 4C0B4C24 		or	r9, QWORD PTR -24[rsp]	# tmp408, %sfp
 1349      E8
 1350              	# sieve_extend.c:815:     if (size >= WORD_SIZE_counter) {
 812:sieve_extend.c **** 
 813:sieve_extend.c ****     debug { printf("...start - %ju - %ju - end\n",(uintmax_t)wordindex(copy_start), (uintmax_t)dest
 814:sieve_extend.c **** 
 815:sieve_extend.c ****     if (size >= WORD_SIZE_counter) {
 1351              		.loc 1 815 8 view .LVU396
 1352 0764 4883FA3F 		cmp	rdx, 63	# size,
 1353              	# sieve_extend.c:807:     bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start
 807:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 1354              		.loc 1 807 25 view .LVU397
 1355 0768 4D894D00 		mov	QWORD PTR 0[r13], r9	# *_177, tmp408
 811:sieve_extend.c **** 
 1356              		.loc 1 811 5 is_stmt 1 view .LVU398
 1357              	.LVL72:
 813:sieve_extend.c **** 
 1358              		.loc 1 813 5 view .LVU399
 1359              		.loc 1 815 5 view .LVU400
 1360              	# sieve_extend.c:815:     if (size >= WORD_SIZE_counter) {
 1361              		.loc 1 815 8 is_stmt 0 view .LVU401
 1362 076c 0F876604 		ja	.L261	#,
 1362      0000
 816:sieve_extend.c ****         register const counter_t loop_distance = destination_stop_word - copy_word;
 817:sieve_extend.c **** 
 818:sieve_extend.c ****         #pragma unroll
 819:sieve_extend.c ****         #pragma ivdep
 820:sieve_extend.c ****         for (register counter_t i = 0; i <loop_distance; i++) {
 821:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 822:sieve_extend.c ****         }
 823:sieve_extend.c ****         source_word += loop_distance; copy_word+= loop_distance;
 824:sieve_extend.c ****     }
 825:sieve_extend.c **** 
 826:sieve_extend.c ****     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 1363              		.loc 1 826 12 is_stmt 1 discriminator 1 view .LVU402
 1364              	# sieve_extend.c:826:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 1365              		.loc 1 826 5 is_stmt 0 discriminator 1 view .LVU403
 1366 0772 4C8B5C24 		mov	r11, QWORD PTR -8[rsp]	# destination_stop_word, %sfp
 1366      F8
 1367 0777 4939CB   		cmp	r11, rcx	# destination_stop_word, copy_word
 1368 077a 0F824104 		jb	.L66	#,
 1368      0000
 1369 0780 4D89DC   		mov	r12, r11	# _173, destination_stop_word
 1370 0783 498D5301 		lea	rdx, 1[r11]	# _198,
 1371              	.LVL73:
 1372              		.loc 1 826 5 discriminator 1 view .LVU404
 1373 0787 4929CC   		sub	r12, rcx	# _173, copy_word
GAS LISTING /tmp/ccr2dACi.s 			page 45


 1374 078a 4C8D0CF5 		lea	r9, 40[0+rsi*8]	# _168,
 1374      28000000 
 1375 0792 4C896424 		mov	QWORD PTR -32[rsp], r12	# %sfp, _173
 1375      E0
 1376 0797 4C8D24CD 		lea	r12, 0[0+rcx*8]	# _166,
 1376      00000000 
 1377 079f 48895424 		mov	QWORD PTR -24[rsp], rdx	# %sfp, _198
 1377      E8
 1378 07a4 4D8D5424 		lea	r10, 32[r12]	# tmp497,
 1378      20
 1379 07a9 488D14F5 		lea	rdx, 0[0+rsi*8]	# _260,
 1379      00000000 
 1380 07b1 4D8D6802 		lea	r13, 2[r8]	# _175,
 1381 07b5 4C39D2   		cmp	rdx, r10	# _260, tmp497
 1382 07b8 410F9DC2 		setge	r10b	#, tmp499
 1383 07bc 4D39CC   		cmp	r12, r9	# _166, _168
 1384 07bf 410F9DC1 		setge	r9b	#, tmp501
 1385 07c3 4508CA   		or	r10b, r9b	# tmp499, tmp501
 1386 07c6 0F843808 		je	.L56	#,
 1386      0000
 1387 07cc 48837C24 		cmp	QWORD PTR -32[rsp], 5	# %sfp,
 1387      E005
 1388 07d2 410F97C2 		seta	r10b	#, tmp504
 1389 07d6 4C3B6C24 		cmp	r13, QWORD PTR -24[rsp]	# _175, %sfp
 1389      E8
 1390 07db 410F96C1 		setbe	r9b	#, tmp506
 1391 07df 4584CA   		test	r10b, r9b	# tmp504, tmp506
 1392 07e2 0F841C08 		je	.L56	#,
 1392      0000
 1393 07e8 4D29C3   		sub	r11, r8	# tmp508, copy_word
 1394 07eb 4C3B6C24 		cmp	r13, QWORD PTR -24[rsp]	# _175, %sfp
 1394      E8
 1395 07f0 41B90100 		mov	r9d, 1	# tmp509,
 1395      0000
 1396 07f6 4D0F46CB 		cmovbe	r9, r11	# tmp508,, niters.169
 1397 07fa 4801FA   		add	rdx, rdi	# vectp.170, bitarray
 1398 07fd 48C1EA03 		shr	rdx, 3	# tmp511,
 1399 0801 48F7DA   		neg	rdx	# tmp512
 1400 0804 83E203   		and	edx, 3	# prolog_loop_niters.171,
 1401 0807 0F847B0A 		je	.L77	#,
 1401      0000
 827:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1402              		.loc 1 827 9 is_stmt 1 view .LVU405
 1403              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1404              		.loc 1 827 99 is_stmt 0 view .LVU406
 1405 080d 488B5C1F 		mov	rbx, QWORD PTR 8[rdi+rbx]	# *_354, *_354
 1405      08
 1406              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1407              		.loc 1 827 83 view .LVU407
 1408 0812 4C8D5601 		lea	r10, 1[rsi]	# tmp566,
 1409              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1410              		.loc 1 827 99 view .LVU408
 1411 0816 C46289F7 		shlx	r11, rbx, r14	# tmp513, *_354, shift
 1411      DB
 1412              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1413              		.loc 1 827 54 view .LVU409
 1414 081b C4E2FBF7 		shrx	rbx, QWORD PTR [rdi+rsi*8], rax	# tmp515, *_349, shift_flipped
GAS LISTING /tmp/ccr2dACi.s 			page 46


 1414      1CF7
 1415              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1416              		.loc 1 827 83 view .LVU410
 1417 0821 4C895424 		mov	QWORD PTR -40[rsp], r10	# %sfp, tmp566
 1417      D8
 1418              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1419              		.loc 1 827 72 view .LVU411
 1420 0826 4909DB   		or	r11, rbx	# tmp517, tmp515
 1421 0829 4E891C27 		mov	QWORD PTR [rdi+r12], r11	# *_358, tmp517
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1422              		.loc 1 826 48 is_stmt 1 view .LVU412
 1423              	.LVL74:
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1424              		.loc 1 826 12 view .LVU413
 1425 082d 4883FA01 		cmp	rdx, 1	# prolog_loop_niters.171,
 1426              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1427              		.loc 1 827 29 is_stmt 0 view .LVU414
 1428 0831 4D89EC   		mov	r12, r13	# copy_word, _175
 1429 0834 745E     		je	.L67	#,
 1430              		.loc 1 827 9 is_stmt 1 view .LVU415
 1431              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1432              		.loc 1 827 40 is_stmt 0 view .LVU416
 1433 0836 4E8D24D5 		lea	r12, 0[0+r10*8]	# _367,
 1433      00000000 
 1434              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1435              		.loc 1 827 83 view .LVU417
 1436 083e 4C8D5E02 		lea	r11, 2[rsi]	# source_word,
 1437              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1438              		.loc 1 827 54 view .LVU418
 1439 0842 4A8B1C27 		mov	rbx, QWORD PTR [rdi+r12]	# *_368, *_368
 1440              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1441              		.loc 1 827 83 view .LVU419
 1442 0846 4C895C24 		mov	QWORD PTR -40[rsp], r11	# %sfp, source_word
 1442      D8
 1443              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1444              		.loc 1 827 99 view .LVU420
 1445 084b C42289F7 		shlx	r11, QWORD PTR 8[rdi+r12], r14	# tmp518, *_373, shift
 1445      5C2708
 1446              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1447              		.loc 1 827 54 view .LVU421
 1448 0852 C462FBF7 		shrx	r12, rbx, rax	# tmp520, *_368, shift_flipped
 1448      E3
 1449              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1450              		.loc 1 827 72 view .LVU422
 1451 0857 4D09E3   		or	r11, r12	# tmp522, tmp520
 1452 085a 4883FA03 		cmp	rdx, 3	# prolog_loop_niters.171,
 1453              	# sieve_extend.c:826:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1454              		.loc 1 826 57 view .LVU423
 1455 085e 4D8D6003 		lea	r12, 3[r8]	# copy_word,
 1456              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1457              		.loc 1 827 72 view .LVU424
 1458 0862 4E891CEF 		mov	QWORD PTR [rdi+r13*8], r11	# *_377, tmp522
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1459              		.loc 1 826 48 is_stmt 1 view .LVU425
 1460              	.LVL75:
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
GAS LISTING /tmp/ccr2dACi.s 			page 47


 1461              		.loc 1 826 12 view .LVU426
 1462 0866 752C     		jne	.L67	#,
 1463              		.loc 1 827 9 view .LVU427
 1464              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1465              		.loc 1 827 40 is_stmt 0 view .LVU428
 1466 0868 488D5E02 		lea	rbx, 2[rsi]	# source_word,
 1467              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1468              		.loc 1 827 83 view .LVU429
 1469 086c 4C8D5E03 		lea	r11, 3[rsi]	# source_word,
 1470 0870 4C895C24 		mov	QWORD PTR -40[rsp], r11	# %sfp, source_word
 1470      D8
 1471              	.LVL76:
 1472              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1473              		.loc 1 827 40 view .LVU430
 1474 0875 48C1E303 		sal	rbx, 3	# source_word,
 1475              	.LVL77:
 1476              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1477              		.loc 1 827 99 view .LVU431
 1478 0879 C46289F7 		shlx	r11, QWORD PTR 8[rdi+rbx], r14	# tmp523, *_111, shift
 1478      5C1F08
 1479              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1480              		.loc 1 827 54 view .LVU432
 1481 0880 488B1C1F 		mov	rbx, QWORD PTR [rdi+rbx]	# *_121, *_121
 1482 0884 C4E2FBF7 		shrx	rbx, rbx, rax	# tmp525, *_121, shift_flipped
 1482      DB
 1483              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1484              		.loc 1 827 72 view .LVU433
 1485 0889 4909DB   		or	r11, rbx	# tmp527, tmp525
 1486 088c 4E891CE7 		mov	QWORD PTR [rdi+r12*8], r11	# *_103, tmp527
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1487              		.loc 1 826 48 is_stmt 1 view .LVU434
 1488              	# sieve_extend.c:826:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1489              		.loc 1 826 57 is_stmt 0 view .LVU435
 1490 0890 4D8D6004 		lea	r12, 4[r8]	# copy_word,
 1491              	.LVL78:
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1492              		.loc 1 826 12 is_stmt 1 view .LVU436
 1493              	.L67:
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1494              		.loc 1 826 12 is_stmt 0 view .LVU437
 1495 0894 4901D2   		add	r10, rdx	# tmp531, prolog_loop_niters.171
 1496 0897 4929D1   		sub	r9, rdx	# niters.172, prolog_loop_niters.171
 1497 089a 4E8D04D7 		lea	r8, [rdi+r10*8]	# vectp.182,
 1498 089e 4D89CA   		mov	r10, r9	# bnd.173, niters.172
 1499 08a1 49C1EA02 		shr	r10, 2	# bnd.173,
 1500 08a5 4801D6   		add	rsi, rdx	# tmp528, prolog_loop_niters.171
 1501 08a8 49C1E205 		sal	r10, 5	# _469,
 1502 08ac 4801D1   		add	rcx, rdx	# tmp533, prolog_loop_niters.171
 1503 08af 4D8D5AE0 		lea	r11, -32[r10]	# tmp588,
 1504              	# sieve_extend.c:811:     copy_word++;
 811:sieve_extend.c **** 
 1505              		.loc 1 811 14 view .LVU438
 1506 08b3 31D2     		xor	edx, edx	# ivtmp.220
 1507 08b5 488D34F7 		lea	rsi, [rdi+rsi*8]	# vectp.178,
 1508 08b9 488D0CCF 		lea	rcx, [rdi+rcx*8]	# vectp.187,
 1509 08bd 49C1EB05 		shr	r11, 5	# tmp586,
GAS LISTING /tmp/ccr2dACi.s 			page 48


 1510 08c1 C5F96E4C 		vmovd	xmm1, DWORD PTR -16[rsp]	# _184, %sfp
 1510      24F0
 1511 08c7 4983C301 		add	r11, 1	# tmp589,
 1512 08cb C5F96E44 		vmovd	xmm0, DWORD PTR -12[rsp]	# _182, %sfp
 1512      24F4
 1513 08d1 4183E307 		and	r11d, 7	# tmp590,
 1514 08d5 0F841A01 		je	.L69	#,
 1514      0000
 1515 08db 4983FB01 		cmp	r11, 1	# tmp590,
 1516 08df 0F84E700 		je	.L191	#,
 1516      0000
 1517 08e5 4983FB02 		cmp	r11, 2	# tmp590,
 1518 08e9 0F84BD00 		je	.L192	#,
 1518      0000
 1519 08ef 4983FB03 		cmp	r11, 3	# tmp590,
 1520 08f3 0F849200 		je	.L193	#,
 1520      0000
 1521 08f9 4983FB04 		cmp	r11, 4	# tmp590,
 1522 08fd 746C     		je	.L194	#,
 1523 08ff 4983FB05 		cmp	r11, 5	# tmp590,
 1524 0903 7445     		je	.L195	#,
 1525 0905 4983FB06 		cmp	r11, 6	# tmp590,
 1526 0909 741E     		je	.L196	#,
 1527              		.loc 1 827 9 is_stmt 1 view .LVU439
 1528              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1529              		.loc 1 827 54 is_stmt 0 view .LVU440
 1530 090b C5FD6F36 		vmovdqa	ymm6, YMMWORD PTR [rsi]	# tmp1085, MEM[base: vectp.178_10, index: ivtmp.220_467, offset: 0
 1531 090f BA200000 		mov	edx, 32	# ivtmp.220,
 1531      00
 1532              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1533              		.loc 1 827 99 view .LVU441
 1534 0914 C4C17E6F 		vmovdqu	ymm7, YMMWORD PTR [r8]	# tmp1086, MEM[base: vectp.182_17, index: ivtmp.220_467, offset: 0B
 1534      38
 1535              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1536              		.loc 1 827 54 view .LVU442
 1537 0919 C5CDD3D1 		vpsrlq	ymm2, ymm6, xmm1	# vect__62.180, tmp1085, _184
 1538              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1539              		.loc 1 827 99 view .LVU443
 1540 091d C5C5F3D8 		vpsllq	ymm3, ymm7, xmm0	# vect__67.184, tmp1086, _182
 1541              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1542              		.loc 1 827 72 view .LVU444
 1543 0921 C5EDEBE3 		vpor	ymm4, ymm2, ymm3	# vect__70.185, vect__62.180, vect__67.184
 1544              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1545              		.loc 1 827 29 view .LVU445
 1546 0925 C5FE7F21 		vmovdqu	YMMWORD PTR [rcx], ymm4	# MEM[base: vectp.187_212, index: ivtmp.220_467, offset: 0B], vect
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1547              		.loc 1 826 48 is_stmt 1 view .LVU446
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1548              		.loc 1 826 12 view .LVU447
 1549              	.L196:
 1550              		.loc 1 827 9 view .LVU448
 1551              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1552              		.loc 1 827 54 is_stmt 0 view .LVU449
 1553 0929 C5FD6F2C 		vmovdqa	ymm5, YMMWORD PTR [rsi+rdx]	# tmp1087, MEM[base: vectp.178_10, index: ivtmp.220_467, offse
 1553      16
 1554              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1555              		.loc 1 827 99 view .LVU450
GAS LISTING /tmp/ccr2dACi.s 			page 49


 1556 092e C4417E6F 		vmovdqu	ymm9, YMMWORD PTR [r8+rdx]	# tmp1088, MEM[base: vectp.182_17, index: ivtmp.220_467, offset
 1556      0C10
 1557              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1558              		.loc 1 827 54 view .LVU451
 1559 0934 C555D3C1 		vpsrlq	ymm8, ymm5, xmm1	# vect__62.180, tmp1087, _184
 1560              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1561              		.loc 1 827 99 view .LVU452
 1562 0938 C535F3D0 		vpsllq	ymm10, ymm9, xmm0	# vect__67.184, tmp1088, _182
 1563              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1564              		.loc 1 827 72 view .LVU453
 1565 093c C4413DEB 		vpor	ymm11, ymm8, ymm10	# vect__70.185, vect__62.180, vect__67.184
 1565      DA
 1566              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1567              		.loc 1 827 29 view .LVU454
 1568 0941 C57E7F1C 		vmovdqu	YMMWORD PTR [rcx+rdx], ymm11	# MEM[base: vectp.187_212, index: ivtmp.220_467, offset: 0B],
 1568      11
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1569              		.loc 1 826 48 is_stmt 1 view .LVU455
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1570              		.loc 1 826 12 view .LVU456
 1571 0946 4883C220 		add	rdx, 32	# ivtmp.220,
 1572              	.L195:
 1573              		.loc 1 827 9 view .LVU457
 1574              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1575              		.loc 1 827 54 is_stmt 0 view .LVU458
 1576 094a C57D6F24 		vmovdqa	ymm12, YMMWORD PTR [rsi+rdx]	# tmp1089, MEM[base: vectp.178_10, index: ivtmp.220_467, offs
 1576      16
 1577              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1578              		.loc 1 827 99 view .LVU459
 1579 094f C4417E6F 		vmovdqu	ymm14, YMMWORD PTR [r8+rdx]	# tmp1090, MEM[base: vectp.182_17, index: ivtmp.220_467, offse
 1579      3410
 1580              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1581              		.loc 1 827 54 view .LVU460
 1582 0955 C51DD3E9 		vpsrlq	ymm13, ymm12, xmm1	# vect__62.180, tmp1089, _184
 1583              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1584              		.loc 1 827 99 view .LVU461
 1585 0959 C50DF3F8 		vpsllq	ymm15, ymm14, xmm0	# vect__67.184, tmp1090, _182
 1586              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1587              		.loc 1 827 72 view .LVU462
 1588 095d C4C115EB 		vpor	ymm6, ymm13, ymm15	# vect__70.185, vect__62.180, vect__67.184
 1588      F7
 1589              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1590              		.loc 1 827 29 view .LVU463
 1591 0962 C5FE7F34 		vmovdqu	YMMWORD PTR [rcx+rdx], ymm6	# MEM[base: vectp.187_212, index: ivtmp.220_467, offset: 0B], 
 1591      11
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1592              		.loc 1 826 48 is_stmt 1 view .LVU464
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1593              		.loc 1 826 12 view .LVU465
 1594 0967 4883C220 		add	rdx, 32	# ivtmp.220,
 1595              	.L194:
 1596              		.loc 1 827 9 view .LVU466
 1597              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1598              		.loc 1 827 54 is_stmt 0 view .LVU467
 1599 096b C5FD6F14 		vmovdqa	ymm2, YMMWORD PTR [rsi+rdx]	# tmp1091, MEM[base: vectp.178_10, index: ivtmp.220_467, offse
 1599      16
 1600              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
GAS LISTING /tmp/ccr2dACi.s 			page 50


 1601              		.loc 1 827 99 view .LVU468
 1602 0970 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR [r8+rdx]	# tmp1092, MEM[base: vectp.182_17, index: ivtmp.220_467, offset
 1602      1C10
 1603              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1604              		.loc 1 827 54 view .LVU469
 1605 0976 C5EDD3F9 		vpsrlq	ymm7, ymm2, xmm1	# vect__62.180, tmp1091, _184
 1606              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1607              		.loc 1 827 99 view .LVU470
 1608 097a C5E5F3E0 		vpsllq	ymm4, ymm3, xmm0	# vect__67.184, tmp1092, _182
 1609              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1610              		.loc 1 827 72 view .LVU471
 1611 097e C5C5EBEC 		vpor	ymm5, ymm7, ymm4	# vect__70.185, vect__62.180, vect__67.184
 1612              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1613              		.loc 1 827 29 view .LVU472
 1614 0982 C5FE7F2C 		vmovdqu	YMMWORD PTR [rcx+rdx], ymm5	# MEM[base: vectp.187_212, index: ivtmp.220_467, offset: 0B], 
 1614      11
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1615              		.loc 1 826 48 is_stmt 1 view .LVU473
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1616              		.loc 1 826 12 view .LVU474
 1617 0987 4883C220 		add	rdx, 32	# ivtmp.220,
 1618              	.L193:
 1619              		.loc 1 827 9 view .LVU475
 1620              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1621              		.loc 1 827 54 is_stmt 0 view .LVU476
 1622 098b C57D6F04 		vmovdqa	ymm8, YMMWORD PTR [rsi+rdx]	# tmp1093, MEM[base: vectp.178_10, index: ivtmp.220_467, offse
 1622      16
 1623              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1624              		.loc 1 827 99 view .LVU477
 1625 0990 C4417E6F 		vmovdqu	ymm10, YMMWORD PTR [r8+rdx]	# tmp1094, MEM[base: vectp.182_17, index: ivtmp.220_467, offse
 1625      1410
 1626              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1627              		.loc 1 827 54 view .LVU478
 1628 0996 C53DD3C9 		vpsrlq	ymm9, ymm8, xmm1	# vect__62.180, tmp1093, _184
 1629              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1630              		.loc 1 827 99 view .LVU479
 1631 099a C52DF3D8 		vpsllq	ymm11, ymm10, xmm0	# vect__67.184, tmp1094, _182
 1632              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1633              		.loc 1 827 72 view .LVU480
 1634 099e C44135EB 		vpor	ymm12, ymm9, ymm11	# vect__70.185, vect__62.180, vect__67.184
 1634      E3
 1635              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1636              		.loc 1 827 29 view .LVU481
 1637 09a3 C57E7F24 		vmovdqu	YMMWORD PTR [rcx+rdx], ymm12	# MEM[base: vectp.187_212, index: ivtmp.220_467, offset: 0B],
 1637      11
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1638              		.loc 1 826 48 is_stmt 1 view .LVU482
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1639              		.loc 1 826 12 view .LVU483
 1640 09a8 4883C220 		add	rdx, 32	# ivtmp.220,
 1641              	.L192:
 1642              		.loc 1 827 9 view .LVU484
 1643              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1644              		.loc 1 827 54 is_stmt 0 view .LVU485
 1645 09ac C57D6F2C 		vmovdqa	ymm13, YMMWORD PTR [rsi+rdx]	# tmp1095, MEM[base: vectp.178_10, index: ivtmp.220_467, offs
 1645      16
 1646              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
GAS LISTING /tmp/ccr2dACi.s 			page 51


 1647              		.loc 1 827 99 view .LVU486
 1648 09b1 C4417E6F 		vmovdqu	ymm15, YMMWORD PTR [r8+rdx]	# tmp1096, MEM[base: vectp.182_17, index: ivtmp.220_467, offse
 1648      3C10
 1649              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1650              		.loc 1 827 54 view .LVU487
 1651 09b7 C515D3F1 		vpsrlq	ymm14, ymm13, xmm1	# vect__62.180, tmp1095, _184
 1652              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1653              		.loc 1 827 99 view .LVU488
 1654 09bb C585F3F0 		vpsllq	ymm6, ymm15, xmm0	# vect__67.184, tmp1096, _182
 1655              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1656              		.loc 1 827 72 view .LVU489
 1657 09bf C58DEBD6 		vpor	ymm2, ymm14, ymm6	# vect__70.185, vect__62.180, vect__67.184
 1658              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1659              		.loc 1 827 29 view .LVU490
 1660 09c3 C5FE7F14 		vmovdqu	YMMWORD PTR [rcx+rdx], ymm2	# MEM[base: vectp.187_212, index: ivtmp.220_467, offset: 0B], 
 1660      11
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1661              		.loc 1 826 48 is_stmt 1 view .LVU491
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1662              		.loc 1 826 12 view .LVU492
 1663 09c8 4883C220 		add	rdx, 32	# ivtmp.220,
 1664              	.L191:
 1665              		.loc 1 827 9 view .LVU493
 1666              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1667              		.loc 1 827 54 is_stmt 0 view .LVU494
 1668 09cc C5FD6F3C 		vmovdqa	ymm7, YMMWORD PTR [rsi+rdx]	# tmp1097, MEM[base: vectp.178_10, index: ivtmp.220_467, offse
 1668      16
 1669              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1670              		.loc 1 827 99 view .LVU495
 1671 09d1 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR [r8+rdx]	# tmp1098, MEM[base: vectp.182_17, index: ivtmp.220_467, offset
 1671      1C10
 1672              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1673              		.loc 1 827 54 view .LVU496
 1674 09d7 C5C5D3E1 		vpsrlq	ymm4, ymm7, xmm1	# vect__62.180, tmp1097, _184
 1675              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1676              		.loc 1 827 99 view .LVU497
 1677 09db C5E5F3E8 		vpsllq	ymm5, ymm3, xmm0	# vect__67.184, tmp1098, _182
 1678              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1679              		.loc 1 827 72 view .LVU498
 1680 09df C55DEBC5 		vpor	ymm8, ymm4, ymm5	# vect__70.185, vect__62.180, vect__67.184
 1681              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1682              		.loc 1 827 29 view .LVU499
 1683 09e3 C57E7F04 		vmovdqu	YMMWORD PTR [rcx+rdx], ymm8	# MEM[base: vectp.187_212, index: ivtmp.220_467, offset: 0B], 
 1683      11
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1684              		.loc 1 826 48 is_stmt 1 view .LVU500
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1685              		.loc 1 826 12 view .LVU501
 1686 09e8 4883C220 		add	rdx, 32	# ivtmp.220,
 1687 09ec 4C39D2   		cmp	rdx, r10	# ivtmp.220, _469
 1688 09ef 0F842E01 		je	.L244	#,
 1688      0000
 1689              	.L69:
 1690              		.loc 1 827 9 discriminator 2 view .LVU502
 1691              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1692              		.loc 1 827 54 is_stmt 0 discriminator 2 view .LVU503
 1693 09f5 C57D6F0C 		vmovdqa	ymm9, YMMWORD PTR [rsi+rdx]	# tmp1015, MEM[base: vectp.178_10, index: ivtmp.220_467, offse
GAS LISTING /tmp/ccr2dACi.s 			page 52


 1693      16
 1694              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1695              		.loc 1 827 99 discriminator 2 view .LVU504
 1696 09fa C4417E6F 		vmovdqu	ymm11, YMMWORD PTR [r8+rdx]	# tmp1016, MEM[base: vectp.182_17, index: ivtmp.220_467, offse
 1696      1C10
 1697              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1698              		.loc 1 827 54 discriminator 2 view .LVU505
 1699 0a00 C535D3D1 		vpsrlq	ymm10, ymm9, xmm1	# vect__62.180, tmp1015, _184
 1700              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1701              		.loc 1 827 99 discriminator 2 view .LVU506
 1702 0a04 C525F3E0 		vpsllq	ymm12, ymm11, xmm0	# vect__67.184, tmp1016, _182
 1703              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1704              		.loc 1 827 72 discriminator 2 view .LVU507
 1705 0a08 C4412DEB 		vpor	ymm13, ymm10, ymm12	# vect__70.185, vect__62.180, vect__67.184
 1705      EC
 1706              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1707              		.loc 1 827 29 discriminator 2 view .LVU508
 1708 0a0d C57E7F2C 		vmovdqu	YMMWORD PTR [rcx+rdx], ymm13	# MEM[base: vectp.187_212, index: ivtmp.220_467, offset: 0B],
 1708      11
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1709              		.loc 1 826 48 is_stmt 1 discriminator 2 view .LVU509
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1710              		.loc 1 826 12 discriminator 2 view .LVU510
 1711              		.loc 1 827 9 discriminator 2 view .LVU511
 1712              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1713              		.loc 1 827 54 is_stmt 0 discriminator 2 view .LVU512
 1714 0a12 C57D6F74 		vmovdqa	ymm14, YMMWORD PTR 32[rsi+rdx]	# tmp1017, MEM[base: vectp.178_10, index: ivtmp.220_467, of
 1714      1620
 1715              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1716              		.loc 1 827 99 discriminator 2 view .LVU513
 1717 0a18 C4C17E6F 		vmovdqu	ymm6, YMMWORD PTR 32[r8+rdx]	# tmp1018, MEM[base: vectp.182_17, index: ivtmp.220_467, offs
 1717      741020
 1718              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1719              		.loc 1 827 54 discriminator 2 view .LVU514
 1720 0a1f C50DD3F9 		vpsrlq	ymm15, ymm14, xmm1	# vect__62.180, tmp1017, _184
 1721              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1722              		.loc 1 827 99 discriminator 2 view .LVU515
 1723 0a23 C5CDF3D0 		vpsllq	ymm2, ymm6, xmm0	# vect__67.184, tmp1018, _182
 1724              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1725              		.loc 1 827 72 discriminator 2 view .LVU516
 1726 0a27 C585EBFA 		vpor	ymm7, ymm15, ymm2	# vect__70.185, vect__62.180, vect__67.184
 1727              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1728              		.loc 1 827 29 discriminator 2 view .LVU517
 1729 0a2b C5FE7F7C 		vmovdqu	YMMWORD PTR 32[rcx+rdx], ymm7	# MEM[base: vectp.187_212, index: ivtmp.220_467, offset: 0B]
 1729      1120
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1730              		.loc 1 826 48 is_stmt 1 discriminator 2 view .LVU518
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1731              		.loc 1 826 12 discriminator 2 view .LVU519
 1732              		.loc 1 827 9 discriminator 2 view .LVU520
 1733              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1734              		.loc 1 827 54 is_stmt 0 discriminator 2 view .LVU521
 1735 0a31 C5FD6F64 		vmovdqa	ymm4, YMMWORD PTR 64[rsi+rdx]	# tmp1019, MEM[base: vectp.178_10, index: ivtmp.220_467, off
 1735      1640
 1736              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1737              		.loc 1 827 99 discriminator 2 view .LVU522
 1738 0a37 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR 64[r8+rdx]	# tmp1020, MEM[base: vectp.182_17, index: ivtmp.220_467, offs
GAS LISTING /tmp/ccr2dACi.s 			page 53


 1738      5C1040
 1739              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1740              		.loc 1 827 54 discriminator 2 view .LVU523
 1741 0a3e C5DDD3E9 		vpsrlq	ymm5, ymm4, xmm1	# vect__62.180, tmp1019, _184
 1742              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1743              		.loc 1 827 99 discriminator 2 view .LVU524
 1744 0a42 C565F3C0 		vpsllq	ymm8, ymm3, xmm0	# vect__67.184, tmp1020, _182
 1745              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1746              		.loc 1 827 72 discriminator 2 view .LVU525
 1747 0a46 C44155EB 		vpor	ymm9, ymm5, ymm8	# vect__70.185, vect__62.180, vect__67.184
 1747      C8
 1748              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1749              		.loc 1 827 29 discriminator 2 view .LVU526
 1750 0a4b C57E7F4C 		vmovdqu	YMMWORD PTR 64[rcx+rdx], ymm9	# MEM[base: vectp.187_212, index: ivtmp.220_467, offset: 0B]
 1750      1140
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1751              		.loc 1 826 48 is_stmt 1 discriminator 2 view .LVU527
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1752              		.loc 1 826 12 discriminator 2 view .LVU528
 1753              		.loc 1 827 9 discriminator 2 view .LVU529
 1754              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1755              		.loc 1 827 54 is_stmt 0 discriminator 2 view .LVU530
 1756 0a51 C57D6F54 		vmovdqa	ymm10, YMMWORD PTR 96[rsi+rdx]	# tmp1021, MEM[base: vectp.178_10, index: ivtmp.220_467, of
 1756      1660
 1757              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1758              		.loc 1 827 99 discriminator 2 view .LVU531
 1759 0a57 C4417E6F 		vmovdqu	ymm12, YMMWORD PTR 96[r8+rdx]	# tmp1022, MEM[base: vectp.182_17, index: ivtmp.220_467, off
 1759      641060
 1760              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1761              		.loc 1 827 54 discriminator 2 view .LVU532
 1762 0a5e C52DD3D9 		vpsrlq	ymm11, ymm10, xmm1	# vect__62.180, tmp1021, _184
 1763              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1764              		.loc 1 827 99 discriminator 2 view .LVU533
 1765 0a62 C51DF3E8 		vpsllq	ymm13, ymm12, xmm0	# vect__67.184, tmp1022, _182
 1766              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1767              		.loc 1 827 72 discriminator 2 view .LVU534
 1768 0a66 C44125EB 		vpor	ymm14, ymm11, ymm13	# vect__70.185, vect__62.180, vect__67.184
 1768      F5
 1769              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1770              		.loc 1 827 29 discriminator 2 view .LVU535
 1771 0a6b C57E7F74 		vmovdqu	YMMWORD PTR 96[rcx+rdx], ymm14	# MEM[base: vectp.187_212, index: ivtmp.220_467, offset: 0B
 1771      1160
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1772              		.loc 1 826 48 is_stmt 1 discriminator 2 view .LVU536
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1773              		.loc 1 826 12 discriminator 2 view .LVU537
 1774              		.loc 1 827 9 discriminator 2 view .LVU538
 1775              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1776              		.loc 1 827 54 is_stmt 0 discriminator 2 view .LVU539
 1777 0a71 C57D6FBC 		vmovdqa	ymm15, YMMWORD PTR 128[rsi+rdx]	# tmp1023, MEM[base: vectp.178_10, index: ivtmp.220_467, o
 1777      16800000 
 1777      00
 1778              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1779              		.loc 1 827 99 discriminator 2 view .LVU540
 1780 0a7a C4C17E6F 		vmovdqu	ymm2, YMMWORD PTR 128[r8+rdx]	# tmp1024, MEM[base: vectp.182_17, index: ivtmp.220_467, off
 1780      94108000 
 1780      0000
GAS LISTING /tmp/ccr2dACi.s 			page 54


 1781              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1782              		.loc 1 827 54 discriminator 2 view .LVU541
 1783 0a84 C585D3F1 		vpsrlq	ymm6, ymm15, xmm1	# vect__62.180, tmp1023, _184
 1784              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1785              		.loc 1 827 99 discriminator 2 view .LVU542
 1786 0a88 C5EDF3F8 		vpsllq	ymm7, ymm2, xmm0	# vect__67.184, tmp1024, _182
 1787              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1788              		.loc 1 827 72 discriminator 2 view .LVU543
 1789 0a8c C5CDEBE7 		vpor	ymm4, ymm6, ymm7	# vect__70.185, vect__62.180, vect__67.184
 1790              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1791              		.loc 1 827 29 discriminator 2 view .LVU544
 1792 0a90 C5FE7FA4 		vmovdqu	YMMWORD PTR 128[rcx+rdx], ymm4	# MEM[base: vectp.187_212, index: ivtmp.220_467, offset: 0B
 1792      11800000 
 1792      00
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1793              		.loc 1 826 48 is_stmt 1 discriminator 2 view .LVU545
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1794              		.loc 1 826 12 discriminator 2 view .LVU546
 1795              		.loc 1 827 9 discriminator 2 view .LVU547
 1796              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1797              		.loc 1 827 54 is_stmt 0 discriminator 2 view .LVU548
 1798 0a99 C5FD6FAC 		vmovdqa	ymm5, YMMWORD PTR 160[rsi+rdx]	# tmp1025, MEM[base: vectp.178_10, index: ivtmp.220_467, of
 1798      16A00000 
 1798      00
 1799              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1800              		.loc 1 827 99 discriminator 2 view .LVU549
 1801 0aa2 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR 160[r8+rdx]	# tmp1026, MEM[base: vectp.182_17, index: ivtmp.220_467, off
 1801      9C10A000 
 1801      0000
 1802              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1803              		.loc 1 827 54 discriminator 2 view .LVU550
 1804 0aac C555D3C1 		vpsrlq	ymm8, ymm5, xmm1	# vect__62.180, tmp1025, _184
 1805              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1806              		.loc 1 827 99 discriminator 2 view .LVU551
 1807 0ab0 C565F3C8 		vpsllq	ymm9, ymm3, xmm0	# vect__67.184, tmp1026, _182
 1808              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1809              		.loc 1 827 72 discriminator 2 view .LVU552
 1810 0ab4 C4413DEB 		vpor	ymm10, ymm8, ymm9	# vect__70.185, vect__62.180, vect__67.184
 1810      D1
 1811              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1812              		.loc 1 827 29 discriminator 2 view .LVU553
 1813 0ab9 C57E7F94 		vmovdqu	YMMWORD PTR 160[rcx+rdx], ymm10	# MEM[base: vectp.187_212, index: ivtmp.220_467, offset: 0
 1813      11A00000 
 1813      00
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1814              		.loc 1 826 48 is_stmt 1 discriminator 2 view .LVU554
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1815              		.loc 1 826 12 discriminator 2 view .LVU555
 1816              		.loc 1 827 9 discriminator 2 view .LVU556
 1817              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1818              		.loc 1 827 54 is_stmt 0 discriminator 2 view .LVU557
 1819 0ac2 C57D6F9C 		vmovdqa	ymm11, YMMWORD PTR 192[rsi+rdx]	# tmp1027, MEM[base: vectp.178_10, index: ivtmp.220_467, o
 1819      16C00000 
 1819      00
 1820              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1821              		.loc 1 827 99 discriminator 2 view .LVU558
 1822 0acb C4417E6F 		vmovdqu	ymm13, YMMWORD PTR 192[r8+rdx]	# tmp1028, MEM[base: vectp.182_17, index: ivtmp.220_467, of
GAS LISTING /tmp/ccr2dACi.s 			page 55


 1822      AC10C000 
 1822      0000
 1823              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1824              		.loc 1 827 54 discriminator 2 view .LVU559
 1825 0ad5 C525D3E1 		vpsrlq	ymm12, ymm11, xmm1	# vect__62.180, tmp1027, _184
 1826              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1827              		.loc 1 827 99 discriminator 2 view .LVU560
 1828 0ad9 C515F3F0 		vpsllq	ymm14, ymm13, xmm0	# vect__67.184, tmp1028, _182
 1829              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1830              		.loc 1 827 72 discriminator 2 view .LVU561
 1831 0add C4411DEB 		vpor	ymm15, ymm12, ymm14	# vect__70.185, vect__62.180, vect__67.184
 1831      FE
 1832              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1833              		.loc 1 827 29 discriminator 2 view .LVU562
 1834 0ae2 C57E7FBC 		vmovdqu	YMMWORD PTR 192[rcx+rdx], ymm15	# MEM[base: vectp.187_212, index: ivtmp.220_467, offset: 0
 1834      11C00000 
 1834      00
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1835              		.loc 1 826 48 is_stmt 1 discriminator 2 view .LVU563
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1836              		.loc 1 826 12 discriminator 2 view .LVU564
 1837              		.loc 1 827 9 discriminator 2 view .LVU565
 1838              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1839              		.loc 1 827 54 is_stmt 0 discriminator 2 view .LVU566
 1840 0aeb C5FD6FB4 		vmovdqa	ymm6, YMMWORD PTR 224[rsi+rdx]	# tmp1029, MEM[base: vectp.178_10, index: ivtmp.220_467, of
 1840      16E00000 
 1840      00
 1841              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1842              		.loc 1 827 99 discriminator 2 view .LVU567
 1843 0af4 C4C17E6F 		vmovdqu	ymm7, YMMWORD PTR 224[r8+rdx]	# tmp1030, MEM[base: vectp.182_17, index: ivtmp.220_467, off
 1843      BC10E000 
 1843      0000
 1844              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1845              		.loc 1 827 54 discriminator 2 view .LVU568
 1846 0afe C5CDD3D1 		vpsrlq	ymm2, ymm6, xmm1	# vect__62.180, tmp1029, _184
 1847              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1848              		.loc 1 827 99 discriminator 2 view .LVU569
 1849 0b02 C5C5F3E0 		vpsllq	ymm4, ymm7, xmm0	# vect__67.184, tmp1030, _182
 1850              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1851              		.loc 1 827 72 discriminator 2 view .LVU570
 1852 0b06 C5EDEBEC 		vpor	ymm5, ymm2, ymm4	# vect__70.185, vect__62.180, vect__67.184
 1853              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1854              		.loc 1 827 29 discriminator 2 view .LVU571
 1855 0b0a C5FE7FAC 		vmovdqu	YMMWORD PTR 224[rcx+rdx], ymm5	# MEM[base: vectp.187_212, index: ivtmp.220_467, offset: 0B
 1855      11E00000 
 1855      00
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1856              		.loc 1 826 48 is_stmt 1 discriminator 2 view .LVU572
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1857              		.loc 1 826 12 discriminator 2 view .LVU573
 1858 0b13 4881C200 		add	rdx, 256	# ivtmp.220,
 1858      010000
 1859 0b1a 4C39D2   		cmp	rdx, r10	# ivtmp.220, _469
 1860 0b1d 0F85D2FE 		jne	.L69	#,
 1860      FFFF
 1861              	.L244:
 1862 0b23 4C8B5424 		mov	r10, QWORD PTR -40[rsp]	# source_word, %sfp
GAS LISTING /tmp/ccr2dACi.s 			page 56


 1862      D8
 1863 0b28 4C89CB   		mov	rbx, r9	# niters_vector_mult_vf.174, niters.172
 1864 0b2b 4883E3FC 		and	rbx, -4	# niters_vector_mult_vf.174,
 1865 0b2f 4901DC   		add	r12, rbx	# tmp.175, niters_vector_mult_vf.174
 1866 0b32 4901DA   		add	r10, rbx	# source_word, niters_vector_mult_vf.174
 1867 0b35 4C39CB   		cmp	rbx, r9	# niters_vector_mult_vf.174, niters.172
 1868 0b38 0F844207 		je	.L257	#,
 1868      0000
 1869              	.LVL79:
 1870              		.loc 1 827 9 view .LVU574
 1871              	# sieve_extend.c:826:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1872              		.loc 1 826 5 is_stmt 0 view .LVU575
 1873 0b3e 488B5424 		mov	rdx, QWORD PTR -8[rsp]	# destination_stop_word, %sfp
 1873      F8
 1874              	# sieve_extend.c:826:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1875              		.loc 1 826 57 view .LVU576
 1876 0b43 4D8D5C24 		lea	r11, 1[r12]	# copy_word,
 1876      01
 1877              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1878              		.loc 1 827 99 view .LVU577
 1879 0b48 C42289F7 		shlx	r8, QWORD PTR 8[rdi+r10*8], r14	# tmp545, *_66, shift
 1879      44D708
 1880              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1881              		.loc 1 827 54 view .LVU578
 1882 0b4f C4A2FBF7 		shrx	rsi, QWORD PTR [rdi+r10*8], rax	# tmp547, *_61, shift_flipped
 1882      34D7
 1883              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1884              		.loc 1 827 72 view .LVU579
 1885 0b55 4909F0   		or	r8, rsi	# tmp549, tmp547
 1886              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1887              		.loc 1 827 83 view .LVU580
 1888 0b58 4D8D4A01 		lea	r9, 1[r10]	# _64,
 1889              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1890              		.loc 1 827 72 view .LVU581
 1891 0b5c 4E8904E7 		mov	QWORD PTR [rdi+r12*8], r8	# *_70, tmp549
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1892              		.loc 1 826 48 is_stmt 1 view .LVU582
 1893              	.LVL80:
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1894              		.loc 1 826 12 view .LVU583
 1895              	# sieve_extend.c:826:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1896              		.loc 1 826 5 is_stmt 0 view .LVU584
 1897 0b60 4939D3   		cmp	r11, rdx	# copy_word, destination_stop_word
 1898 0b63 0F871707 		ja	.L257	#,
 1898      0000
 1899              		.loc 1 827 9 is_stmt 1 view .LVU585
 1900              	# sieve_extend.c:826:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1901              		.loc 1 826 57 is_stmt 0 view .LVU586
 1902 0b69 4983C402 		add	r12, 2	# copy_word,
 1903              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1904              		.loc 1 827 99 view .LVU587
 1905 0b6d C4A289F7 		shlx	rcx, QWORD PTR 8[rdi+r9*8], r14	# tmp550, *_53, shift
 1905      4CCF08
GAS LISTING /tmp/ccr2dACi.s 			page 57


 1906              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1907              		.loc 1 827 54 view .LVU588
 1908 0b74 4A8B1CCF 		mov	rbx, QWORD PTR [rdi+r9*8]	# *_48, *_48
 1909              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1910              		.loc 1 827 83 view .LVU589
 1911 0b78 4983C202 		add	r10, 2	# _51,
 1912              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1913              		.loc 1 827 54 view .LVU590
 1914 0b7c C462FBF7 		shrx	r9, rbx, rax	# tmp552, *_48, shift_flipped
 1914      CB
 1915              	.LVL81:
 1916              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1917              		.loc 1 827 72 view .LVU591
 1918 0b81 4C09C9   		or	rcx, r9	# tmp554, tmp552
 1919 0b84 4A890CDF 		mov	QWORD PTR [rdi+r11*8], rcx	# *_57, tmp554
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1920              		.loc 1 826 48 is_stmt 1 view .LVU592
 1921              	.LVL82:
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1922              		.loc 1 826 12 view .LVU593
 1923              	# sieve_extend.c:826:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1924              		.loc 1 826 5 is_stmt 0 view .LVU594
 1925 0b88 4C39E2   		cmp	rdx, r12	# destination_stop_word, copy_word
 1926 0b8b 0F82EF06 		jb	.L257	#,
 1926      0000
 1927              		.loc 1 827 9 is_stmt 1 view .LVU595
 1928              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1929              		.loc 1 827 99 is_stmt 0 view .LVU596
 1930 0b91 C42289F7 		shlx	r14, QWORD PTR 8[rdi+r10*8], r14	# tmp555, *_36, shift
 1930      74D708
 1931              	.LVL83:
 1932              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1933              		.loc 1 827 54 view .LVU597
 1934 0b98 4E8B14D7 		mov	r10, QWORD PTR [rdi+r10*8]	# *_30, *_30
 1935              	.LVL84:
 1936              		.loc 1 827 54 view .LVU598
 1937 0b9c C4C2FBF7 		shrx	rax, r10, rax	# tmp557, *_30, shift_flipped
 1937      C2
 1938              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1939              		.loc 1 827 72 view .LVU599
 1940 0ba1 4C09F0   		or	rax, r14	# tmp559, tmp555
 1941 0ba4 4A8904E7 		mov	QWORD PTR [rdi+r12*8], rax	# *_40, tmp559
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1942              		.loc 1 826 48 is_stmt 1 view .LVU600
 1943              	.LVL85:
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1944              		.loc 1 826 12 view .LVU601
 1945 0ba8 C5F877   		vzeroupper
 1946              	.LVL86:
 1947              	.L73:
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1948              		.loc 1 826 12 is_stmt 0 view .LVU602
 1949 0bab 4C3B6C24 		cmp	r13, QWORD PTR -24[rsp]	# _175, %sfp
 1949      E8
 1950 0bb0 B9000000 		mov	ecx, 0	# tmp544,
 1950      00
GAS LISTING /tmp/ccr2dACi.s 			page 58


 1951 0bb5 4C8B6424 		mov	r12, QWORD PTR -32[rsp]	#, %sfp
 1951      E0
 1952 0bba 490F46CC 		cmovbe	rcx, r12	#,, tmp543
 1953 0bbe 4C01E9   		add	rcx, r13	# copy_word, _175
 1954              	.L66:
 828:sieve_extend.c ****     }
 829:sieve_extend.c ****     bitarray[copy_word] &= chopmask(destination_stop);
 1955              		.loc 1 829 5 is_stmt 1 view .LVU603
 1956              	# sieve_extend.c:829:     bitarray[copy_word] &= chopmask(destination_stop);
 1957              		.loc 1 829 25 is_stmt 0 view .LVU604
 1958 0bc1 4C213CCF 		and	QWORD PTR [rdi+rcx*8], r15	# *_72, _193
 1959              	# sieve_extend.c:831: }
 830:sieve_extend.c **** 
 831:sieve_extend.c **** }
 1960              		.loc 1 831 1 view .LVU605
 1961 0bc5 488D65D8 		lea	rsp, -40[rbp]	#,
 1962 0bc9 5B       		pop	rbx	#
 1963 0bca 415C     		pop	r12	#
 1964 0bcc 415D     		pop	r13	#
 1965 0bce 415E     		pop	r14	#
 1966 0bd0 415F     		pop	r15	#
 1967 0bd2 5D       		pop	rbp	#
 1968              		.cfi_remember_state
 1969              		.cfi_def_cfa 7, 8
 1970 0bd3 C3       		ret	
 1971              	.LVL87:
 1972              		.p2align 4,,7
 1973 0bd4 0F1F4000 		.p2align 3
 1974              	.L261:
 1975              		.cfi_restore_state
 1976              	.LBB319:
 816:sieve_extend.c **** 
 1977              		.loc 1 816 9 is_stmt 1 view .LVU606
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1978              		.loc 1 820 9 view .LVU607
 1979              	.LBB320:
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1980              		.loc 1 820 14 view .LVU608
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1981              		.loc 1 820 40 view .LVU609
 1982              	# sieve_extend.c:820:         for (register counter_t i = 0; i <loop_distance; i++) {
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1983              		.loc 1 820 9 is_stmt 0 view .LVU610
 1984 0bd8 4C8B6C24 		mov	r13, QWORD PTR -8[rsp]	# loop_distance, %sfp
 1984      F8
 1985 0bdd 4889F2   		mov	rdx, rsi	# source_word, source_word
 1986              	.LVL88:
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1987              		.loc 1 820 9 view .LVU611
 1988 0be0 4929CD   		sub	r13, rcx	# loop_distance, copy_word
 1989 0be3 4C896C24 		mov	QWORD PTR -24[rsp], r13	# %sfp, loop_distance
 1989      E8
 1990 0be8 0F84FB03 		je	.L62	#,
 1990      0000
 1991 0bee 4D8D5424 		lea	r10, 8[r12]	# tmp413,
 1991      08
 1992 0bf3 4C8D4B28 		lea	r9, 40[rbx]	# tmp412,
GAS LISTING /tmp/ccr2dACi.s 			page 59


 1993 0bf7 4D39D1   		cmp	r9, r10	# tmp412, tmp413
 1994 0bfa 4C8D6B08 		lea	r13, 8[rbx]	# tmp417,
 1995 0bfe 410F9EC1 		setle	r9b	#, tmp415
 1996 0c02 4983C428 		add	r12, 40	# tmp416,
 1997 0c06 4D39EC   		cmp	r12, r13	# tmp416, tmp417
 1998 0c09 488D5601 		lea	rdx, 1[rsi]	# _232,
 1999 0c0d 410F9EC5 		setle	r13b	#, tmp419
 2000 0c11 4509E9   		or	r9d, r13d	# tmp420, tmp419
 2001 0c14 4C8D6B20 		lea	r13, 32[rbx]	# tmp421,
 2002 0c18 4D39D5   		cmp	r13, r10	# tmp421, tmp413
 2003 0c1b 410F9EC2 		setle	r10b	#, tmp424
 2004 0c1f 4939DC   		cmp	r12, rbx	# tmp416, _179
 2005 0c22 410F9EC4 		setle	r12b	#, tmp427
 2006 0c26 4509E2   		or	r10d, r12d	# tmp428, tmp427
 2007 0c29 4584D1   		test	r9b, r10b	# tmp420, tmp428
 2008 0c2c 0F846706 		je	.L57	#,
 2008      0000
 2009 0c32 4C8B4C24 		mov	r9, QWORD PTR -24[rsp]	# loop_distance, %sfp
 2009      E8
 2010 0c37 4D8D69FF 		lea	r13, -1[r9]	# tmp430,
 2011 0c3b 4983FD05 		cmp	r13, 5	# tmp430,
 2012 0c3f 0F865406 		jbe	.L57	#,
 2012      0000
 2013 0c45 4D89D9   		mov	r9, r11	# tmp433, _180
 2014              	# sieve_extend.c:820:         for (register counter_t i = 0; i <loop_distance; i++) {
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2015              		.loc 1 820 33 view .LVU612
 2016 0c48 4531E4   		xor	r12d, r12d	# i
 2017 0c4b 49C1E903 		shr	r9, 3	# tmp433,
 2018 0c4f 49F7D9   		neg	r9	# tmp434
 2019 0c52 4183E103 		and	r9d, 3	# prolog_loop_niters.190,
 2020 0c56 7468     		je	.L58	#,
 821:sieve_extend.c ****         }
 2021              		.loc 1 821 13 is_stmt 1 view .LVU613
 2022              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2023              		.loc 1 821 109 is_stmt 0 view .LVU614
 2024 0c58 488B5C1F 		mov	rbx, QWORD PTR 8[rdi+rbx]	# *_428, *_428
 2024      08
 2025 0c5d C46289F7 		shlx	r10, rbx, r14	# tmp435, *_428, shift
 2025      D3
 2026              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2027              		.loc 1 821 62 view .LVU615
 2028 0c62 4D8B1B   		mov	r11, QWORD PTR [r11]	# *_180, *_180
 2029 0c65 C442FBF7 		shrx	r12, r11, rax	# tmp437, *_180, shift_flipped
 2029      E3
 2030              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2031              		.loc 1 821 80 view .LVU616
 2032 0c6a 4D09E2   		or	r10, r12	# tmp439, tmp437
 2033 0c6d 4983F901 		cmp	r9, 1	# prolog_loop_niters.190,
 2034 0c71 4C8914CF 		mov	QWORD PTR [rdi+rcx*8], r10	# *_433, tmp439
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2035              		.loc 1 820 58 is_stmt 1 view .LVU617
 2036              	.LVL89:
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
GAS LISTING /tmp/ccr2dACi.s 			page 60


 2037              		.loc 1 820 40 view .LVU618
 2038              	# sieve_extend.c:820:         for (register counter_t i = 0; i <loop_distance; i++) {
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2039              		.loc 1 820 59 is_stmt 0 view .LVU619
 2040 0c75 41BC0100 		mov	r12d, 1	# i,
 2040      0000
 2041 0c7b 7443     		je	.L58	#,
 821:sieve_extend.c ****         }
 2042              		.loc 1 821 13 is_stmt 1 view .LVU620
 2043              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2044              		.loc 1 821 109 is_stmt 0 view .LVU621
 2045 0c7d C46289F7 		shlx	r13, QWORD PTR 8[rdi+rdx*8], r14	# tmp441, *_448, shift
 2045      6CD708
 2046              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2047              		.loc 1 821 62 view .LVU622
 2048 0c84 C4E2FBF7 		shrx	rbx, QWORD PTR [rdi+rdx*8], rax	# tmp443, *_443, shift_flipped
 2048      1CD7
 2049              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2050              		.loc 1 821 80 view .LVU623
 2051 0c8a 4909DD   		or	r13, rbx	# tmp445, tmp443
 2052 0c8d 4983F903 		cmp	r9, 3	# prolog_loop_niters.190,
 2053 0c91 4E896CC7 		mov	QWORD PTR 16[rdi+r8*8], r13	# *_453, tmp445
 2053      10
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2054              		.loc 1 820 58 is_stmt 1 view .LVU624
 2055              	.LVL90:
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2056              		.loc 1 820 40 view .LVU625
 2057              	# sieve_extend.c:820:         for (register counter_t i = 0; i <loop_distance; i++) {
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2058              		.loc 1 820 59 is_stmt 0 view .LVU626
 2059 0c96 41BC0200 		mov	r12d, 2	# i,
 2059      0000
 2060 0c9c 7522     		jne	.L58	#,
 821:sieve_extend.c ****         }
 2061              		.loc 1 821 13 is_stmt 1 view .LVU627
 2062              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2063              		.loc 1 821 58 is_stmt 0 view .LVU628
 2064 0c9e 4C8D5E02 		lea	r11, 2[rsi]	# tmp446,
 2065              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2066              		.loc 1 821 109 view .LVU629
 2067 0ca2 C42289F7 		shlx	r10, QWORD PTR 8[rdi+r11*8], r14	# tmp448, *_286, shift
 2067      54DF08
 2068              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2069              		.loc 1 821 62 view .LVU630
 2070 0ca9 4E8B24DF 		mov	r12, QWORD PTR [rdi+r11*8]	# *_281, *_281
 2071 0cad C442FBF7 		shrx	r13, r12, rax	# tmp450, *_281, shift_flipped
 2071      EC
 2072              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2073              		.loc 1 821 80 view .LVU631
GAS LISTING /tmp/ccr2dACi.s 			page 61


 2074 0cb2 4D09EA   		or	r10, r13	# tmp452, tmp450
 2075              	# sieve_extend.c:820:         for (register counter_t i = 0; i <loop_distance; i++) {
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2076              		.loc 1 820 59 view .LVU632
 2077 0cb5 41BC0300 		mov	r12d, 3	# i,
 2077      0000
 2078              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2079              		.loc 1 821 80 view .LVU633
 2080 0cbb 4E8954C7 		mov	QWORD PTR 24[rdi+r8*8], r10	# *_291, tmp452
 2080      18
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2081              		.loc 1 820 58 is_stmt 1 view .LVU634
 2082              	.LVL91:
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2083              		.loc 1 820 40 view .LVU635
 2084              	.L58:
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2085              		.loc 1 820 40 is_stmt 0 view .LVU636
 2086 0cc0 488B5C24 		mov	rbx, QWORD PTR -24[rsp]	# niters.191, %sfp
 2086      E8
 2087 0cc5 4E8D040E 		lea	r8, [rsi+r9]	# tmp453,
 2088 0cc9 4E8D14C7 		lea	r10, [rdi+r8*8]	# vectp.196,
 2089 0ccd 4C01CA   		add	rdx, r9	# tmp455, prolog_loop_niters.190
 2090 0cd0 C5F96E4C 		vmovd	xmm1, DWORD PTR -16[rsp]	# _184, %sfp
 2090      24F0
 2091 0cd6 4C8D1CD7 		lea	r11, [rdi+rdx*8]	# vectp.200,
 2092 0cda 4C29CB   		sub	rbx, r9	# niters.191, prolog_loop_niters.190
 2093              	# sieve_extend.c:820:         for (register counter_t i = 0; i <loop_distance; i++) {
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2094              		.loc 1 820 33 view .LVU637
 2095 0cdd 31D2     		xor	edx, edx	# ivtmp.239
 2096 0cdf 4989DD   		mov	r13, rbx	# bnd.192, niters.191
 2097 0ce2 4901C9   		add	r9, rcx	# tmp457, copy_word
 2098 0ce5 49C1ED02 		shr	r13, 2	# bnd.192,
 2099 0ce9 4E8D0CCF 		lea	r9, [rdi+r9*8]	# vectp.205,
 2100 0ced 49C1E505 		sal	r13, 5	# bnd.192,
 2101 0cf1 C5F96E44 		vmovd	xmm0, DWORD PTR -12[rsp]	# _182, %sfp
 2101      24F4
 2102 0cf7 4D8D45E0 		lea	r8, -32[r13]	# tmp582,
 2103 0cfb 49C1E805 		shr	r8, 5	# tmp580,
 2104 0cff 4983C001 		add	r8, 1	# tmp583,
 2105 0d03 4183E007 		and	r8d, 7	# tmp584,
 2106 0d07 0F840901 		je	.L60	#,
 2106      0000
 2107 0d0d 4983F801 		cmp	r8, 1	# tmp584,
 2108 0d11 0F84D300 		je	.L179	#,
 2108      0000
 2109 0d17 4983F802 		cmp	r8, 2	# tmp584,
 2110 0d1b 0F84A600 		je	.L180	#,
 2110      0000
 2111 0d21 4983F803 		cmp	r8, 3	# tmp584,
 2112 0d25 747E     		je	.L181	#,
 2113 0d27 4983F804 		cmp	r8, 4	# tmp584,
 2114 0d2b 7455     		je	.L182	#,
 2115 0d2d 4983F805 		cmp	r8, 5	# tmp584,
 2116 0d31 742D     		je	.L183	#,
GAS LISTING /tmp/ccr2dACi.s 			page 62


 2117 0d33 4983F806 		cmp	r8, 6	# tmp584,
 2118 0d37 0F858007 		jne	.L262	#,
 2118      0000
 2119              	.L184:
 821:sieve_extend.c ****         }
 2120              		.loc 1 821 13 is_stmt 1 view .LVU638
 2121              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2122              		.loc 1 821 62 is_stmt 0 view .LVU639
 2123 0d3d C4417D6F 		vmovdqa	ymm12, YMMWORD PTR [r10+rdx]	# tmp1073, MEM[base: vectp.196_325, index: ivtmp.239_483, off
 2123      2412
 2124              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2125              		.loc 1 821 109 view .LVU640
 2126 0d43 C4417E6F 		vmovdqu	ymm14, YMMWORD PTR [r11+rdx]	# tmp1074, MEM[base: vectp.200_332, index: ivtmp.239_483, off
 2126      3413
 2127              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2128              		.loc 1 821 62 view .LVU641
 2129 0d49 C51DD3E9 		vpsrlq	ymm13, ymm12, xmm1	# vect__49.198, tmp1073, _184
 2130              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2131              		.loc 1 821 109 view .LVU642
 2132 0d4d C50DF3F8 		vpsllq	ymm15, ymm14, xmm0	# vect__54.202, tmp1074, _182
 2133              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2134              		.loc 1 821 80 view .LVU643
 2135 0d51 C4C115EB 		vpor	ymm6, ymm13, ymm15	# vect__58.203, vect__49.198, vect__54.202
 2135      F7
 2136              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2137              		.loc 1 821 35 view .LVU644
 2138 0d56 C4C17E7F 		vmovdqu	YMMWORD PTR [r9+rdx], ymm6	# MEM[base: vectp.205_341, index: ivtmp.239_483, offset: 0B], v
 2138      3411
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2139              		.loc 1 820 58 is_stmt 1 view .LVU645
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2140              		.loc 1 820 40 view .LVU646
 2141 0d5c 4883C220 		add	rdx, 32	# ivtmp.239,
 2142              	.L183:
 821:sieve_extend.c ****         }
 2143              		.loc 1 821 13 view .LVU647
 2144              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2145              		.loc 1 821 62 is_stmt 0 view .LVU648
 2146 0d60 C4C17D6F 		vmovdqa	ymm2, YMMWORD PTR [r10+rdx]	# tmp1075, MEM[base: vectp.196_325, index: ivtmp.239_483, offs
 2146      1412
 2147              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2148              		.loc 1 821 109 view .LVU649
 2149 0d66 C4C17E6F 		vmovdqu	ymm4, YMMWORD PTR [r11+rdx]	# tmp1076, MEM[base: vectp.200_332, index: ivtmp.239_483, offs
 2149      2413
 2150              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2151              		.loc 1 821 62 view .LVU650
 2152 0d6c C5EDD3F9 		vpsrlq	ymm7, ymm2, xmm1	# vect__49.198, tmp1075, _184
 2153              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
GAS LISTING /tmp/ccr2dACi.s 			page 63


 821:sieve_extend.c ****         }
 2154              		.loc 1 821 109 view .LVU651
 2155 0d70 C5DDF3E8 		vpsllq	ymm5, ymm4, xmm0	# vect__54.202, tmp1076, _182
 2156              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2157              		.loc 1 821 80 view .LVU652
 2158 0d74 C545EBC5 		vpor	ymm8, ymm7, ymm5	# vect__58.203, vect__49.198, vect__54.202
 2159              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2160              		.loc 1 821 35 view .LVU653
 2161 0d78 C4417E7F 		vmovdqu	YMMWORD PTR [r9+rdx], ymm8	# MEM[base: vectp.205_341, index: ivtmp.239_483, offset: 0B], v
 2161      0411
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2162              		.loc 1 820 58 is_stmt 1 view .LVU654
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2163              		.loc 1 820 40 view .LVU655
 2164 0d7e 4883C220 		add	rdx, 32	# ivtmp.239,
 2165              	.L182:
 821:sieve_extend.c ****         }
 2166              		.loc 1 821 13 view .LVU656
 2167              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2168              		.loc 1 821 62 is_stmt 0 view .LVU657
 2169 0d82 C4417D6F 		vmovdqa	ymm9, YMMWORD PTR [r10+rdx]	# tmp1077, MEM[base: vectp.196_325, index: ivtmp.239_483, offs
 2169      0C12
 2170              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2171              		.loc 1 821 109 view .LVU658
 2172 0d88 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR [r11+rdx]	# tmp1078, MEM[base: vectp.200_332, index: ivtmp.239_483, offs
 2172      1C13
 2173              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2174              		.loc 1 821 62 view .LVU659
 2175 0d8e C535D3D1 		vpsrlq	ymm10, ymm9, xmm1	# vect__49.198, tmp1077, _184
 2176              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2177              		.loc 1 821 109 view .LVU660
 2178 0d92 C565F3D8 		vpsllq	ymm11, ymm3, xmm0	# vect__54.202, tmp1078, _182
 2179              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2180              		.loc 1 821 80 view .LVU661
 2181 0d96 C4412DEB 		vpor	ymm12, ymm10, ymm11	# vect__58.203, vect__49.198, vect__54.202
 2181      E3
 2182              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2183              		.loc 1 821 35 view .LVU662
 2184 0d9b C4417E7F 		vmovdqu	YMMWORD PTR [r9+rdx], ymm12	# MEM[base: vectp.205_341, index: ivtmp.239_483, offset: 0B], 
 2184      2411
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2185              		.loc 1 820 58 is_stmt 1 view .LVU663
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2186              		.loc 1 820 40 view .LVU664
 2187 0da1 4883C220 		add	rdx, 32	# ivtmp.239,
 2188              	.L181:
 821:sieve_extend.c ****         }
 2189              		.loc 1 821 13 view .LVU665
 2190              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
GAS LISTING /tmp/ccr2dACi.s 			page 64


 821:sieve_extend.c ****         }
 2191              		.loc 1 821 62 is_stmt 0 view .LVU666
 2192 0da5 C4417D6F 		vmovdqa	ymm13, YMMWORD PTR [r10+rdx]	# tmp1079, MEM[base: vectp.196_325, index: ivtmp.239_483, off
 2192      2C12
 2193              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2194              		.loc 1 821 109 view .LVU667
 2195 0dab C4417E6F 		vmovdqu	ymm15, YMMWORD PTR [r11+rdx]	# tmp1080, MEM[base: vectp.200_332, index: ivtmp.239_483, off
 2195      3C13
 2196              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2197              		.loc 1 821 62 view .LVU668
 2198 0db1 C515D3F1 		vpsrlq	ymm14, ymm13, xmm1	# vect__49.198, tmp1079, _184
 2199              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2200              		.loc 1 821 109 view .LVU669
 2201 0db5 C585F3F0 		vpsllq	ymm6, ymm15, xmm0	# vect__54.202, tmp1080, _182
 2202              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2203              		.loc 1 821 80 view .LVU670
 2204 0db9 C58DEBD6 		vpor	ymm2, ymm14, ymm6	# vect__58.203, vect__49.198, vect__54.202
 2205              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2206              		.loc 1 821 35 view .LVU671
 2207 0dbd C4C17E7F 		vmovdqu	YMMWORD PTR [r9+rdx], ymm2	# MEM[base: vectp.205_341, index: ivtmp.239_483, offset: 0B], v
 2207      1411
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2208              		.loc 1 820 58 is_stmt 1 view .LVU672
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2209              		.loc 1 820 40 view .LVU673
 2210 0dc3 4883C220 		add	rdx, 32	# ivtmp.239,
 2211              	.L180:
 821:sieve_extend.c ****         }
 2212              		.loc 1 821 13 view .LVU674
 2213              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2214              		.loc 1 821 62 is_stmt 0 view .LVU675
 2215 0dc7 C4C17D6F 		vmovdqa	ymm7, YMMWORD PTR [r10+rdx]	# tmp1081, MEM[base: vectp.196_325, index: ivtmp.239_483, offs
 2215      3C12
 2216              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2217              		.loc 1 821 109 view .LVU676
 2218 0dcd C4C17E6F 		vmovdqu	ymm5, YMMWORD PTR [r11+rdx]	# tmp1082, MEM[base: vectp.200_332, index: ivtmp.239_483, offs
 2218      2C13
 2219              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2220              		.loc 1 821 62 view .LVU677
 2221 0dd3 C5C5D3E1 		vpsrlq	ymm4, ymm7, xmm1	# vect__49.198, tmp1081, _184
 2222              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2223              		.loc 1 821 109 view .LVU678
 2224 0dd7 C555F3C0 		vpsllq	ymm8, ymm5, xmm0	# vect__54.202, tmp1082, _182
 2225              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2226              		.loc 1 821 80 view .LVU679
 2227 0ddb C4415DEB 		vpor	ymm9, ymm4, ymm8	# vect__58.203, vect__49.198, vect__54.202
 2227      C8
GAS LISTING /tmp/ccr2dACi.s 			page 65


 2228              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2229              		.loc 1 821 35 view .LVU680
 2230 0de0 C4417E7F 		vmovdqu	YMMWORD PTR [r9+rdx], ymm9	# MEM[base: vectp.205_341, index: ivtmp.239_483, offset: 0B], v
 2230      0C11
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2231              		.loc 1 820 58 is_stmt 1 view .LVU681
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2232              		.loc 1 820 40 view .LVU682
 2233 0de6 4883C220 		add	rdx, 32	# ivtmp.239,
 2234              	.L179:
 821:sieve_extend.c ****         }
 2235              		.loc 1 821 13 view .LVU683
 2236              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2237              		.loc 1 821 62 is_stmt 0 view .LVU684
 2238 0dea C4417D6F 		vmovdqa	ymm10, YMMWORD PTR [r10+rdx]	# tmp1083, MEM[base: vectp.196_325, index: ivtmp.239_483, off
 2238      1412
 2239              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2240              		.loc 1 821 109 view .LVU685
 2241 0df0 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR [r11+rdx]	# tmp1084, MEM[base: vectp.200_332, index: ivtmp.239_483, offs
 2241      1C13
 2242              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2243              		.loc 1 821 62 view .LVU686
 2244 0df6 C52DD3D9 		vpsrlq	ymm11, ymm10, xmm1	# vect__49.198, tmp1083, _184
 2245              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2246              		.loc 1 821 109 view .LVU687
 2247 0dfa C565F3E0 		vpsllq	ymm12, ymm3, xmm0	# vect__54.202, tmp1084, _182
 2248              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2249              		.loc 1 821 80 view .LVU688
 2250 0dfe C44125EB 		vpor	ymm13, ymm11, ymm12	# vect__58.203, vect__49.198, vect__54.202
 2250      EC
 2251              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2252              		.loc 1 821 35 view .LVU689
 2253 0e03 C4417E7F 		vmovdqu	YMMWORD PTR [r9+rdx], ymm13	# MEM[base: vectp.205_341, index: ivtmp.239_483, offset: 0B], 
 2253      2C11
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2254              		.loc 1 820 58 is_stmt 1 view .LVU690
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2255              		.loc 1 820 40 view .LVU691
 2256 0e09 4883C220 		add	rdx, 32	# ivtmp.239,
 2257 0e0d 4C39EA   		cmp	rdx, r13	# ivtmp.239, _485
 2258 0e10 0F843E01 		je	.L243	#,
 2258      0000
 2259              	.L60:
 821:sieve_extend.c ****         }
 2260              		.loc 1 821 13 discriminator 3 view .LVU692
 2261              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2262              		.loc 1 821 62 is_stmt 0 discriminator 3 view .LVU693
 2263 0e16 C4417D6F 		vmovdqa	ymm14, YMMWORD PTR [r10+rdx]	# tmp980, MEM[base: vectp.196_325, index: ivtmp.239_483, offs
 2263      3412
GAS LISTING /tmp/ccr2dACi.s 			page 66


 2264              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2265              		.loc 1 821 109 discriminator 3 view .LVU694
 2266 0e1c C4C17E6F 		vmovdqu	ymm6, YMMWORD PTR [r11+rdx]	# tmp981, MEM[base: vectp.200_332, index: ivtmp.239_483, offse
 2266      3413
 2267              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2268              		.loc 1 821 62 discriminator 3 view .LVU695
 2269 0e22 C50DD3F9 		vpsrlq	ymm15, ymm14, xmm1	# vect__49.198, tmp980, _184
 2270              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2271              		.loc 1 821 109 discriminator 3 view .LVU696
 2272 0e26 C5CDF3D0 		vpsllq	ymm2, ymm6, xmm0	# vect__54.202, tmp981, _182
 2273              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2274              		.loc 1 821 80 discriminator 3 view .LVU697
 2275 0e2a C585EBFA 		vpor	ymm7, ymm15, ymm2	# vect__58.203, vect__49.198, vect__54.202
 2276              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2277              		.loc 1 821 35 discriminator 3 view .LVU698
 2278 0e2e C4C17E7F 		vmovdqu	YMMWORD PTR [r9+rdx], ymm7	# MEM[base: vectp.205_341, index: ivtmp.239_483, offset: 0B], v
 2278      3C11
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2279              		.loc 1 820 58 is_stmt 1 discriminator 3 view .LVU699
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2280              		.loc 1 820 40 discriminator 3 view .LVU700
 821:sieve_extend.c ****         }
 2281              		.loc 1 821 13 discriminator 3 view .LVU701
 2282              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2283              		.loc 1 821 62 is_stmt 0 discriminator 3 view .LVU702
 2284 0e34 C4C17D6F 		vmovdqa	ymm4, YMMWORD PTR 32[r10+rdx]	# tmp982, MEM[base: vectp.196_325, index: ivtmp.239_483, off
 2284      641220
 2285              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2286              		.loc 1 821 109 discriminator 3 view .LVU703
 2287 0e3b C4C17E6F 		vmovdqu	ymm5, YMMWORD PTR 32[r11+rdx]	# tmp983, MEM[base: vectp.200_332, index: ivtmp.239_483, off
 2287      6C1320
 2288              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2289              		.loc 1 821 62 discriminator 3 view .LVU704
 2290 0e42 C55DD3C1 		vpsrlq	ymm8, ymm4, xmm1	# vect__49.198, tmp982, _184
 2291              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2292              		.loc 1 821 109 discriminator 3 view .LVU705
 2293 0e46 C555F3C8 		vpsllq	ymm9, ymm5, xmm0	# vect__54.202, tmp983, _182
 2294              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2295              		.loc 1 821 80 discriminator 3 view .LVU706
 2296 0e4a C4413DEB 		vpor	ymm10, ymm8, ymm9	# vect__58.203, vect__49.198, vect__54.202
 2296      D1
 2297              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2298              		.loc 1 821 35 discriminator 3 view .LVU707
 2299 0e4f C4417E7F 		vmovdqu	YMMWORD PTR 32[r9+rdx], ymm10	# MEM[base: vectp.205_341, index: ivtmp.239_483, offset: 0B]
 2299      541120
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
GAS LISTING /tmp/ccr2dACi.s 			page 67


 2300              		.loc 1 820 58 is_stmt 1 discriminator 3 view .LVU708
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2301              		.loc 1 820 40 discriminator 3 view .LVU709
 821:sieve_extend.c ****         }
 2302              		.loc 1 821 13 discriminator 3 view .LVU710
 2303              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2304              		.loc 1 821 62 is_stmt 0 discriminator 3 view .LVU711
 2305 0e56 C4417D6F 		vmovdqa	ymm11, YMMWORD PTR 64[r10+rdx]	# tmp984, MEM[base: vectp.196_325, index: ivtmp.239_483, of
 2305      5C1240
 2306              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2307              		.loc 1 821 109 discriminator 3 view .LVU712
 2308 0e5d C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR 64[r11+rdx]	# tmp985, MEM[base: vectp.200_332, index: ivtmp.239_483, off
 2308      5C1340
 2309              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2310              		.loc 1 821 62 discriminator 3 view .LVU713
 2311 0e64 C525D3E1 		vpsrlq	ymm12, ymm11, xmm1	# vect__49.198, tmp984, _184
 2312              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2313              		.loc 1 821 109 discriminator 3 view .LVU714
 2314 0e68 C565F3E8 		vpsllq	ymm13, ymm3, xmm0	# vect__54.202, tmp985, _182
 2315              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2316              		.loc 1 821 80 discriminator 3 view .LVU715
 2317 0e6c C4411DEB 		vpor	ymm14, ymm12, ymm13	# vect__58.203, vect__49.198, vect__54.202
 2317      F5
 2318              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2319              		.loc 1 821 35 discriminator 3 view .LVU716
 2320 0e71 C4417E7F 		vmovdqu	YMMWORD PTR 64[r9+rdx], ymm14	# MEM[base: vectp.205_341, index: ivtmp.239_483, offset: 0B]
 2320      741140
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2321              		.loc 1 820 58 is_stmt 1 discriminator 3 view .LVU717
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2322              		.loc 1 820 40 discriminator 3 view .LVU718
 821:sieve_extend.c ****         }
 2323              		.loc 1 821 13 discriminator 3 view .LVU719
 2324              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2325              		.loc 1 821 62 is_stmt 0 discriminator 3 view .LVU720
 2326 0e78 C4417D6F 		vmovdqa	ymm15, YMMWORD PTR 96[r10+rdx]	# tmp986, MEM[base: vectp.196_325, index: ivtmp.239_483, of
 2326      7C1260
 2327              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2328              		.loc 1 821 109 discriminator 3 view .LVU721
 2329 0e7f C4C17E6F 		vmovdqu	ymm2, YMMWORD PTR 96[r11+rdx]	# tmp987, MEM[base: vectp.200_332, index: ivtmp.239_483, off
 2329      541360
 2330              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2331              		.loc 1 821 62 discriminator 3 view .LVU722
 2332 0e86 C585D3F1 		vpsrlq	ymm6, ymm15, xmm1	# vect__49.198, tmp986, _184
 2333              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2334              		.loc 1 821 109 discriminator 3 view .LVU723
 2335 0e8a C5EDF3F8 		vpsllq	ymm7, ymm2, xmm0	# vect__54.202, tmp987, _182
GAS LISTING /tmp/ccr2dACi.s 			page 68


 2336              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2337              		.loc 1 821 80 discriminator 3 view .LVU724
 2338 0e8e C5CDEBE7 		vpor	ymm4, ymm6, ymm7	# vect__58.203, vect__49.198, vect__54.202
 2339              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2340              		.loc 1 821 35 discriminator 3 view .LVU725
 2341 0e92 C4C17E7F 		vmovdqu	YMMWORD PTR 96[r9+rdx], ymm4	# MEM[base: vectp.205_341, index: ivtmp.239_483, offset: 0B],
 2341      641160
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2342              		.loc 1 820 58 is_stmt 1 discriminator 3 view .LVU726
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2343              		.loc 1 820 40 discriminator 3 view .LVU727
 821:sieve_extend.c ****         }
 2344              		.loc 1 821 13 discriminator 3 view .LVU728
 2345              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2346              		.loc 1 821 62 is_stmt 0 discriminator 3 view .LVU729
 2347 0e99 C4417D6F 		vmovdqa	ymm8, YMMWORD PTR 128[r10+rdx]	# tmp988, MEM[base: vectp.196_325, index: ivtmp.239_483, of
 2347      84128000 
 2347      0000
 2348              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2349              		.loc 1 821 109 discriminator 3 view .LVU730
 2350 0ea3 C4417E6F 		vmovdqu	ymm9, YMMWORD PTR 128[r11+rdx]	# tmp989, MEM[base: vectp.200_332, index: ivtmp.239_483, of
 2350      8C138000 
 2350      0000
 2351              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2352              		.loc 1 821 62 discriminator 3 view .LVU731
 2353 0ead C5BDD3E9 		vpsrlq	ymm5, ymm8, xmm1	# vect__49.198, tmp988, _184
 2354              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2355              		.loc 1 821 109 discriminator 3 view .LVU732
 2356 0eb1 C535F3D0 		vpsllq	ymm10, ymm9, xmm0	# vect__54.202, tmp989, _182
 2357              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2358              		.loc 1 821 80 discriminator 3 view .LVU733
 2359 0eb5 C44155EB 		vpor	ymm11, ymm5, ymm10	# vect__58.203, vect__49.198, vect__54.202
 2359      DA
 2360              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2361              		.loc 1 821 35 discriminator 3 view .LVU734
 2362 0eba C4417E7F 		vmovdqu	YMMWORD PTR 128[r9+rdx], ymm11	# MEM[base: vectp.205_341, index: ivtmp.239_483, offset: 0B
 2362      9C118000 
 2362      0000
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2363              		.loc 1 820 58 is_stmt 1 discriminator 3 view .LVU735
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2364              		.loc 1 820 40 discriminator 3 view .LVU736
 821:sieve_extend.c ****         }
 2365              		.loc 1 821 13 discriminator 3 view .LVU737
 2366              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2367              		.loc 1 821 62 is_stmt 0 discriminator 3 view .LVU738
 2368 0ec4 C4417D6F 		vmovdqa	ymm12, YMMWORD PTR 160[r10+rdx]	# tmp990, MEM[base: vectp.196_325, index: ivtmp.239_483, o
 2368      A412A000 
GAS LISTING /tmp/ccr2dACi.s 			page 69


 2368      0000
 2369              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2370              		.loc 1 821 109 discriminator 3 view .LVU739
 2371 0ece C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR 160[r11+rdx]	# tmp991, MEM[base: vectp.200_332, index: ivtmp.239_483, of
 2371      9C13A000 
 2371      0000
 2372              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2373              		.loc 1 821 62 discriminator 3 view .LVU740
 2374 0ed8 C51DD3E9 		vpsrlq	ymm13, ymm12, xmm1	# vect__49.198, tmp990, _184
 2375              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2376              		.loc 1 821 109 discriminator 3 view .LVU741
 2377 0edc C565F3F0 		vpsllq	ymm14, ymm3, xmm0	# vect__54.202, tmp991, _182
 2378              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2379              		.loc 1 821 80 discriminator 3 view .LVU742
 2380 0ee0 C44115EB 		vpor	ymm15, ymm13, ymm14	# vect__58.203, vect__49.198, vect__54.202
 2380      FE
 2381              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2382              		.loc 1 821 35 discriminator 3 view .LVU743
 2383 0ee5 C4417E7F 		vmovdqu	YMMWORD PTR 160[r9+rdx], ymm15	# MEM[base: vectp.205_341, index: ivtmp.239_483, offset: 0B
 2383      BC11A000 
 2383      0000
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2384              		.loc 1 820 58 is_stmt 1 discriminator 3 view .LVU744
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2385              		.loc 1 820 40 discriminator 3 view .LVU745
 821:sieve_extend.c ****         }
 2386              		.loc 1 821 13 discriminator 3 view .LVU746
 2387              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2388              		.loc 1 821 62 is_stmt 0 discriminator 3 view .LVU747
 2389 0eef C4C17D6F 		vmovdqa	ymm6, YMMWORD PTR 192[r10+rdx]	# tmp992, MEM[base: vectp.196_325, index: ivtmp.239_483, of
 2389      B412C000 
 2389      0000
 2390              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2391              		.loc 1 821 109 discriminator 3 view .LVU748
 2392 0ef9 C4C17E6F 		vmovdqu	ymm7, YMMWORD PTR 192[r11+rdx]	# tmp993, MEM[base: vectp.200_332, index: ivtmp.239_483, of
 2392      BC13C000 
 2392      0000
 2393              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2394              		.loc 1 821 62 discriminator 3 view .LVU749
 2395 0f03 C5CDD3D1 		vpsrlq	ymm2, ymm6, xmm1	# vect__49.198, tmp992, _184
 2396              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2397              		.loc 1 821 109 discriminator 3 view .LVU750
 2398 0f07 C5C5F3E0 		vpsllq	ymm4, ymm7, xmm0	# vect__54.202, tmp993, _182
 2399              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2400              		.loc 1 821 80 discriminator 3 view .LVU751
 2401 0f0b C56DEBC4 		vpor	ymm8, ymm2, ymm4	# vect__58.203, vect__49.198, vect__54.202
 2402              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
GAS LISTING /tmp/ccr2dACi.s 			page 70


 821:sieve_extend.c ****         }
 2403              		.loc 1 821 35 discriminator 3 view .LVU752
 2404 0f0f C4417E7F 		vmovdqu	YMMWORD PTR 192[r9+rdx], ymm8	# MEM[base: vectp.205_341, index: ivtmp.239_483, offset: 0B]
 2404      8411C000 
 2404      0000
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2405              		.loc 1 820 58 is_stmt 1 discriminator 3 view .LVU753
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2406              		.loc 1 820 40 discriminator 3 view .LVU754
 821:sieve_extend.c ****         }
 2407              		.loc 1 821 13 discriminator 3 view .LVU755
 2408              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2409              		.loc 1 821 62 is_stmt 0 discriminator 3 view .LVU756
 2410 0f19 C4C17D6F 		vmovdqa	ymm5, YMMWORD PTR 224[r10+rdx]	# tmp994, MEM[base: vectp.196_325, index: ivtmp.239_483, of
 2410      AC12E000 
 2410      0000
 2411              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2412              		.loc 1 821 109 discriminator 3 view .LVU757
 2413 0f23 C4417E6F 		vmovdqu	ymm10, YMMWORD PTR 224[r11+rdx]	# tmp995, MEM[base: vectp.200_332, index: ivtmp.239_483, o
 2413      9413E000 
 2413      0000
 2414              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2415              		.loc 1 821 62 discriminator 3 view .LVU758
 2416 0f2d C555D3C9 		vpsrlq	ymm9, ymm5, xmm1	# vect__49.198, tmp994, _184
 2417              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2418              		.loc 1 821 109 discriminator 3 view .LVU759
 2419 0f31 C52DF3D8 		vpsllq	ymm11, ymm10, xmm0	# vect__54.202, tmp995, _182
 2420              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2421              		.loc 1 821 80 discriminator 3 view .LVU760
 2422 0f35 C44135EB 		vpor	ymm12, ymm9, ymm11	# vect__58.203, vect__49.198, vect__54.202
 2422      E3
 2423              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2424              		.loc 1 821 35 discriminator 3 view .LVU761
 2425 0f3a C4417E7F 		vmovdqu	YMMWORD PTR 224[r9+rdx], ymm12	# MEM[base: vectp.205_341, index: ivtmp.239_483, offset: 0B
 2425      A411E000 
 2425      0000
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2426              		.loc 1 820 58 is_stmt 1 discriminator 3 view .LVU762
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2427              		.loc 1 820 40 discriminator 3 view .LVU763
 2428 0f44 4881C200 		add	rdx, 256	# ivtmp.239,
 2428      010000
 2429 0f4b 4C39EA   		cmp	rdx, r13	# ivtmp.239, _485
 2430 0f4e 0F85C2FE 		jne	.L60	#,
 2430      FFFF
 2431              	.L243:
 2432 0f54 4C8B6C24 		mov	r13, QWORD PTR -24[rsp]	# loop_distance, %sfp
 2432      E8
 2433 0f59 4989DA   		mov	r10, rbx	# niters_vector_mult_vf.193, niters.191
 2434 0f5c 4983E2FC 		and	r10, -4	# niters_vector_mult_vf.193,
 2435 0f60 4C39D3   		cmp	rbx, r10	# niters.191, niters_vector_mult_vf.193
GAS LISTING /tmp/ccr2dACi.s 			page 71


 2436 0f63 4F8D2414 		lea	r12, [r12+r10]	# tmp.194,
 2437 0f67 4A8D142E 		lea	rdx, [rsi+r13]	# source_word,
 2438 0f6b 0F840703 		je	.L255	#,
 2438      0000
 2439              	.LVL92:
 821:sieve_extend.c ****         }
 2440              		.loc 1 821 13 view .LVU764
 2441              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2442              		.loc 1 821 58 is_stmt 0 view .LVU765
 2443 0f71 4A8D1C26 		lea	rbx, [rsi+r12]	# tmp467,
 2444              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2445              		.loc 1 821 21 view .LVU766
 2446 0f75 4E8D1C21 		lea	r11, [rcx+r12]	# tmp468,
 2447              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2448              		.loc 1 821 62 view .LVU767
 2449 0f79 4C8B04DF 		mov	r8, QWORD PTR [rdi+rbx*8]	# *_386, *_386
 2450              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2451              		.loc 1 821 109 view .LVU768
 2452 0f7d C46289F7 		shlx	r9, QWORD PTR 8[rdi+rbx*8], r14	# tmp469, *_391, shift
 2452      4CDF08
 2453              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2454              		.loc 1 821 62 view .LVU769
 2455 0f84 C442FBF7 		shrx	r10, r8, rax	# tmp471, *_386, shift_flipped
 2455      D0
 2456              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2457              		.loc 1 821 80 view .LVU770
 2458 0f89 4D09D1   		or	r9, r10	# tmp473, tmp471
 2459 0f8c 4E890CDF 		mov	QWORD PTR [rdi+r11*8], r9	# *_396, tmp473
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2460              		.loc 1 820 58 is_stmt 1 view .LVU771
 2461              	# sieve_extend.c:820:         for (register counter_t i = 0; i <loop_distance; i++) {
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2462              		.loc 1 820 59 is_stmt 0 view .LVU772
 2463 0f90 4D8D4C24 		lea	r9, 1[r12]	# i,
 2463      01
 2464              	.LVL93:
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2465              		.loc 1 820 40 is_stmt 1 view .LVU773
 2466              	# sieve_extend.c:820:         for (register counter_t i = 0; i <loop_distance; i++) {
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2467              		.loc 1 820 9 is_stmt 0 view .LVU774
 2468 0f95 4D39CD   		cmp	r13, r9	# loop_distance, i
 2469 0f98 0F86DA02 		jbe	.L255	#,
 2469      0000
 821:sieve_extend.c ****         }
 2470              		.loc 1 821 13 is_stmt 1 view .LVU775
 2471              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2472              		.loc 1 821 58 is_stmt 0 view .LVU776
 2473 0f9e 4A8D1C0E 		lea	rbx, [rsi+r9]	# tmp474,
 2474              	# sieve_extend.c:820:         for (register counter_t i = 0; i <loop_distance; i++) {
GAS LISTING /tmp/ccr2dACi.s 			page 72


 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2475              		.loc 1 820 59 view .LVU777
 2476 0fa2 4983C402 		add	r12, 2	# i,
 2477              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2478              		.loc 1 821 62 view .LVU778
 2479 0fa6 4C8B1CDF 		mov	r11, QWORD PTR [rdi+rbx*8]	# *_404, *_404
 2480              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2481              		.loc 1 821 21 view .LVU779
 2482 0faa 4901C9   		add	r9, rcx	# tmp475, copy_word
 2483              	.LVL94:
 2484              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2485              		.loc 1 821 109 view .LVU780
 2486 0fad C46289F7 		shlx	r8, QWORD PTR 8[rdi+rbx*8], r14	# tmp476, *_409, shift
 2486      44DF08
 2487              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2488              		.loc 1 821 62 view .LVU781
 2489 0fb4 C442FBF7 		shrx	r10, r11, rax	# tmp478, *_404, shift_flipped
 2489      D3
 2490              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2491              		.loc 1 821 80 view .LVU782
 2492 0fb9 4D09D0   		or	r8, r10	# tmp480, tmp478
 2493              	# sieve_extend.c:820:         for (register counter_t i = 0; i <loop_distance; i++) {
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2494              		.loc 1 820 9 view .LVU783
 2495 0fbc 4D39E5   		cmp	r13, r12	# loop_distance, i
 2496              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2497              		.loc 1 821 80 view .LVU784
 2498 0fbf 4E8904CF 		mov	QWORD PTR [rdi+r9*8], r8	# *_414, tmp480
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2499              		.loc 1 820 58 is_stmt 1 view .LVU785
 2500              	.LVL95:
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2501              		.loc 1 820 40 view .LVU786
 2502              	# sieve_extend.c:820:         for (register counter_t i = 0; i <loop_distance; i++) {
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2503              		.loc 1 820 9 is_stmt 0 view .LVU787
 2504 0fc3 0F86AF02 		jbe	.L255	#,
 2504      0000
 821:sieve_extend.c ****         }
 2505              		.loc 1 821 13 is_stmt 1 view .LVU788
 2506              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2507              		.loc 1 821 58 is_stmt 0 view .LVU789
 2508 0fc9 4C01E6   		add	rsi, r12	# tmp481, i
 2509              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2510              		.loc 1 821 21 view .LVU790
 2511 0fcc 4901CC   		add	r12, rcx	# tmp482, copy_word
 2512              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2513              		.loc 1 821 109 view .LVU791
GAS LISTING /tmp/ccr2dACi.s 			page 73


 2514 0fcf C4E289F7 		shlx	rcx, QWORD PTR 8[rdi+rsi*8], r14	# tmp483, *_311, shift
 2514      4CF708
 2515              	.LVL96:
 2516              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2517              		.loc 1 821 62 view .LVU792
 2518 0fd6 488B34F7 		mov	rsi, QWORD PTR [rdi+rsi*8]	# *_306, *_306
 2519 0fda C462FBF7 		shrx	r14, rsi, rax	# tmp485, *_306, shift_flipped
 2519      F6
 2520              	.LVL97:
 2521              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2522              		.loc 1 821 80 view .LVU793
 2523 0fdf 4909CE   		or	r14, rcx	# tmp487, tmp483
 2524 0fe2 4E8934E7 		mov	QWORD PTR [rdi+r12*8], r14	# *_316, tmp487
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2525              		.loc 1 820 58 is_stmt 1 view .LVU794
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2526              		.loc 1 820 40 view .LVU795
 2527 0fe6 C5F877   		vzeroupper
 2528              	.L62:
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2529              		.loc 1 820 40 is_stmt 0 view .LVU796
 2530              	.LBE320:
 823:sieve_extend.c ****     }
 2531              		.loc 1 823 9 is_stmt 1 view .LVU797
 823:sieve_extend.c ****     }
 2532              		.loc 1 823 39 view .LVU798
 2533              	.LVL98:
 823:sieve_extend.c ****     }
 2534              		.loc 1 823 39 is_stmt 0 view .LVU799
 2535              	.LBE319:
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2536              		.loc 1 826 12 is_stmt 1 view .LVU800
 2537 0fe9 488B4C24 		mov	rcx, QWORD PTR -8[rsp]	# destination_stop_word, %sfp
 2537      F8
 2538 0fee 48C1E203 		sal	rdx, 3	# _260,
 2539              	.LVL99:
 2540              	.LBB322:
 2541              	# sieve_extend.c:823:         source_word += loop_distance; copy_word+= loop_distance;
 823:sieve_extend.c ****     }
 2542              		.loc 1 823 21 is_stmt 0 view .LVU801
 2543 0ff2 48C74424 		mov	QWORD PTR -32[rsp], 0	# %sfp,
 2543      E0000000 
 2543      00
 2544 0ffb 4C8D6901 		lea	r13, 1[rcx]	# _198,
 2545 0fff 4C896C24 		mov	QWORD PTR -24[rsp], r13	# %sfp, _198
 2545      E8
 2546              	.LVL100:
 2547              	.L56:
 823:sieve_extend.c ****     }
 2548              		.loc 1 823 21 view .LVU802
 2549 1004 4C8B5C24 		mov	r11, QWORD PTR -8[rsp]	# destination_stop_word, %sfp
 2549      F8
 2550 1009 4801FA   		add	rdx, rdi	# ivtmp.212, bitarray
 2551              	.LBE322:
 2552              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
GAS LISTING /tmp/ccr2dACi.s 			page 74


 827:sieve_extend.c ****     }
 2553              		.loc 1 827 99 view .LVU803
 2554 100c 440FB664 		movzx	r12d, BYTE PTR -12[rsp]	# tmp1038, %sfp
 2554      24F4
 2555 1012 C46299F7 		shlx	r14, QWORD PTR 8[rdx], r12	# tmp560, MEM[base: _465, offset: 8B], tmp1038
 2555      7208
 2556              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 827:sieve_extend.c ****     }
 2557              		.loc 1 827 54 view .LVU804
 2558 1018 440FB654 		movzx	r10d, BYTE PTR -16[rsp]	# tmp1039, %sfp
 2558      24F0
 2559              	# sieve_extend.c:826:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2560              		.loc 1 826 57 view .LVU805
 2561 101e 4C8D6101 		lea	r12, 1[rcx]	# copy_word,
 2562 1022 4D89D8   		mov	r8, r11	# tmp570, destination_stop_word
 2563              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 827:sieve_extend.c ****     }
 2564              		.loc 1 827 54 view .LVU806
 2565 1025 C4E2ABF7 		shrx	rsi, QWORD PTR [rdx], r10	# tmp562, MEM[base: _465, offset: 0B], tmp1039
 2565      32
 2566 102a 4929C8   		sub	r8, rcx	# tmp570, copy_word
 2567              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 827:sieve_extend.c ****     }
 2568              		.loc 1 827 72 view .LVU807
 2569 102d 4909F6   		or	r14, rsi	# tmp564, tmp562
 2570 1030 4C8934CF 		mov	QWORD PTR [rdi+rcx*8], r14	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 
 2571 1034 4183E007 		and	r8d, 7	# tmp571,
 2572              	.LVL101:
 827:sieve_extend.c ****     }
 2573              		.loc 1 827 9 is_stmt 1 view .LVU808
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2574              		.loc 1 826 48 view .LVU809
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2575              		.loc 1 826 12 view .LVU810
 2576              	# sieve_extend.c:826:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2577              		.loc 1 826 5 is_stmt 0 view .LVU811
 2578 1038 4D39E3   		cmp	r11, r12	# destination_stop_word, copy_word
 2579 103b 4C8D7208 		lea	r14, 8[rdx]	# ivtmp.212,
 2580 103f 0F8266FB 		jb	.L73	#,
 2580      FFFF
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2581              		.loc 1 826 5 view .LVU812
 2582 1045 4D85C0   		test	r8, r8	# tmp571
 2583 1048 0F844001 		je	.L249	#,
 2583      0000
 2584 104e 4983F801 		cmp	r8, 1	# tmp571,
 2585 1052 0F840601 		je	.L198	#,
 2585      0000
 2586 1058 4983F802 		cmp	r8, 2	# tmp571,
 2587 105c 0F84D800 		je	.L199	#,
 2587      0000
 2588 1062 4983F803 		cmp	r8, 3	# tmp571,
 2589 1066 0F84A900 		je	.L200	#,
 2589      0000
 2590 106c 4983F804 		cmp	r8, 4	# tmp571,
GAS LISTING /tmp/ccr2dACi.s 			page 75


 2591 1070 747D     		je	.L201	#,
 2592 1072 4983F805 		cmp	r8, 5	# tmp571,
 2593 1076 7452     		je	.L202	#,
 2594 1078 4983F806 		cmp	r8, 6	# tmp571,
 2595 107c 7428     		je	.L203	#,
 827:sieve_extend.c ****     }
 2596              		.loc 1 827 9 is_stmt 1 view .LVU813
 2597              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 827:sieve_extend.c ****     }
 2598              		.loc 1 827 54 is_stmt 0 view .LVU814
 2599 107e 498B06   		mov	rax, QWORD PTR [r14]	# MEM[base: _465, offset: 0B], MEM[base: _465, offset: 0B]
 2600              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 827:sieve_extend.c ****     }
 2601              		.loc 1 827 99 view .LVU815
 2602 1081 440FB64C 		movzx	r9d, BYTE PTR -12[rsp]	# tmp1042, %sfp
 2602      24F4
 2603 1087 C442B1F7 		shlx	r11, QWORD PTR 8[r14], r9	# tmp777, MEM[base: _465, offset: 8B], tmp1042
 2603      5E08
 2604              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 827:sieve_extend.c ****     }
 2605              		.loc 1 827 54 view .LVU816
 2606 108d 0FB65C24 		movzx	ebx, BYTE PTR -16[rsp]	# tmp1043, %sfp
 2606      F0
 2607 1092 C462E3F7 		shrx	r8, rax, rbx	# tmp779, MEM[base: _465, offset: 0B], tmp1043
 2607      C0
 2608              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 827:sieve_extend.c ****     }
 2609              		.loc 1 827 72 view .LVU817
 2610 1097 4D09D8   		or	r8, r11	# tmp780, tmp777
 2611 109a 4C8D7210 		lea	r14, 16[rdx]	# ivtmp.212,
 2612 109e 4E8904E7 		mov	QWORD PTR [rdi+r12*8], r8	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 0
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2613              		.loc 1 826 48 is_stmt 1 view .LVU818
 2614              	# sieve_extend.c:826:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2615              		.loc 1 826 57 is_stmt 0 view .LVU819
 2616 10a2 4C8D6102 		lea	r12, 2[rcx]	# copy_word,
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2617              		.loc 1 826 12 is_stmt 1 view .LVU820
 2618              	.L203:
 827:sieve_extend.c ****     }
 2619              		.loc 1 827 9 view .LVU821
 2620              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 827:sieve_extend.c ****     }
 2621              		.loc 1 827 99 is_stmt 0 view .LVU822
 2622 10a6 0FB65424 		movzx	edx, BYTE PTR -12[rsp]	# tmp1044, %sfp
 2622      F4
 2623 10ab C442E9F7 		shlx	r10, QWORD PTR 8[r14], rdx	# tmp782, MEM[base: _465, offset: 8B], tmp1044
 2623      5608
 2624              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 827:sieve_extend.c ****     }
 2625              		.loc 1 827 54 view .LVU823
 2626 10b1 0FB64C24 		movzx	ecx, BYTE PTR -16[rsp]	# tmp1045, %sfp
 2626      F0
 2627              	.LVL102:
 827:sieve_extend.c ****     }
 2628              		.loc 1 827 54 view .LVU824
GAS LISTING /tmp/ccr2dACi.s 			page 76


 2629 10b6 C4C2F3F7 		shrx	rsi, QWORD PTR [r14], rcx	# tmp784, MEM[base: _465, offset: 0B], tmp1045
 2629      36
 2630              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 827:sieve_extend.c ****     }
 2631              		.loc 1 827 72 view .LVU825
 2632 10bb 4909F2   		or	r10, rsi	# tmp785, tmp784
 2633 10be 4983C608 		add	r14, 8	# ivtmp.212,
 2634 10c2 4E8914E7 		mov	QWORD PTR [rdi+r12*8], r10	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2635              		.loc 1 826 48 is_stmt 1 view .LVU826
 2636              	# sieve_extend.c:826:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2637              		.loc 1 826 57 is_stmt 0 view .LVU827
 2638 10c6 4983C401 		add	r12, 1	# copy_word,
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2639              		.loc 1 826 12 is_stmt 1 view .LVU828
 2640              	.L202:
 827:sieve_extend.c ****     }
 2641              		.loc 1 827 9 view .LVU829
 2642              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 827:sieve_extend.c ****     }
 2643              		.loc 1 827 99 is_stmt 0 view .LVU830
 2644 10ca 440FB64C 		movzx	r9d, BYTE PTR -12[rsp]	# tmp1046, %sfp
 2644      24F4
 2645 10d0 C442B1F7 		shlx	r11, QWORD PTR 8[r14], r9	# tmp787, MEM[base: _465, offset: 8B], tmp1046
 2645      5E08
 2646              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 827:sieve_extend.c ****     }
 2647              		.loc 1 827 54 view .LVU831
 2648 10d6 0FB64424 		movzx	eax, BYTE PTR -16[rsp]	# tmp1047, %sfp
 2648      F0
 2649 10db C4C2FBF7 		shrx	rbx, QWORD PTR [r14], rax	# tmp789, MEM[base: _465, offset: 0B], tmp1047
 2649      1E
 2650              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 827:sieve_extend.c ****     }
 2651              		.loc 1 827 72 view .LVU832
 2652 10e0 4909DB   		or	r11, rbx	# tmp790, tmp789
 2653 10e3 4983C608 		add	r14, 8	# ivtmp.212,
 2654 10e7 4E891CE7 		mov	QWORD PTR [rdi+r12*8], r11	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2655              		.loc 1 826 48 is_stmt 1 view .LVU833
 2656              	# sieve_extend.c:826:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2657              		.loc 1 826 57 is_stmt 0 view .LVU834
 2658 10eb 4983C401 		add	r12, 1	# copy_word,
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2659              		.loc 1 826 12 is_stmt 1 view .LVU835
 2660              	.L201:
 827:sieve_extend.c ****     }
 2661              		.loc 1 827 9 view .LVU836
 2662              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 827:sieve_extend.c ****     }
 2663              		.loc 1 827 99 is_stmt 0 view .LVU837
 2664 10ef 440FB644 		movzx	r8d, BYTE PTR -12[rsp]	# tmp1048, %sfp
 2664      24F4
 2665 10f5 C4C2B9F7 		shlx	rdx, QWORD PTR 8[r14], r8	# tmp792, MEM[base: _465, offset: 8B], tmp1048
 2665      5608
GAS LISTING /tmp/ccr2dACi.s 			page 77


 2666              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 827:sieve_extend.c ****     }
 2667              		.loc 1 827 54 view .LVU838
 2668 10fb 440FB654 		movzx	r10d, BYTE PTR -16[rsp]	# tmp1049, %sfp
 2668      24F0
 2669 1101 C4C2ABF7 		shrx	rcx, QWORD PTR [r14], r10	# tmp794, MEM[base: _465, offset: 0B], tmp1049
 2669      0E
 2670              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 827:sieve_extend.c ****     }
 2671              		.loc 1 827 72 view .LVU839
 2672 1106 4809CA   		or	rdx, rcx	# tmp795, tmp794
 2673 1109 4983C608 		add	r14, 8	# ivtmp.212,
 2674 110d 4A8914E7 		mov	QWORD PTR [rdi+r12*8], rdx	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2675              		.loc 1 826 48 is_stmt 1 view .LVU840
 2676              	# sieve_extend.c:826:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2677              		.loc 1 826 57 is_stmt 0 view .LVU841
 2678 1111 4983C401 		add	r12, 1	# copy_word,
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2679              		.loc 1 826 12 is_stmt 1 view .LVU842
 2680              	.L200:
 827:sieve_extend.c ****     }
 2681              		.loc 1 827 9 view .LVU843
 2682              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 827:sieve_extend.c ****     }
 2683              		.loc 1 827 99 is_stmt 0 view .LVU844
 2684 1115 0FB67424 		movzx	esi, BYTE PTR -12[rsp]	# tmp1050, %sfp
 2684      F4
 2685 111a C442C9F7 		shlx	r9, QWORD PTR 8[r14], rsi	# tmp797, MEM[base: _465, offset: 8B], tmp1050
 2685      4E08
 2686              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 827:sieve_extend.c ****     }
 2687              		.loc 1 827 54 view .LVU845
 2688 1120 440FB65C 		movzx	r11d, BYTE PTR -16[rsp]	# tmp1051, %sfp
 2688      24F0
 2689 1126 C4C2A3F7 		shrx	rax, QWORD PTR [r14], r11	# tmp799, MEM[base: _465, offset: 0B], tmp1051
 2689      06
 2690              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 827:sieve_extend.c ****     }
 2691              		.loc 1 827 72 view .LVU846
 2692 112b 4909C1   		or	r9, rax	# tmp800, tmp799
 2693 112e 4983C608 		add	r14, 8	# ivtmp.212,
 2694 1132 4E890CE7 		mov	QWORD PTR [rdi+r12*8], r9	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 0
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2695              		.loc 1 826 48 is_stmt 1 view .LVU847
 2696              	# sieve_extend.c:826:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2697              		.loc 1 826 57 is_stmt 0 view .LVU848
 2698 1136 4983C401 		add	r12, 1	# copy_word,
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2699              		.loc 1 826 12 is_stmt 1 view .LVU849
 2700              	.L199:
 827:sieve_extend.c ****     }
 2701              		.loc 1 827 9 view .LVU850
 2702              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 827:sieve_extend.c ****     }
GAS LISTING /tmp/ccr2dACi.s 			page 78


 2703              		.loc 1 827 99 is_stmt 0 view .LVU851
 2704 113a 0FB65C24 		movzx	ebx, BYTE PTR -12[rsp]	# tmp1052, %sfp
 2704      F4
 2705 113f C442E1F7 		shlx	r8, QWORD PTR 8[r14], rbx	# tmp802, MEM[base: _465, offset: 8B], tmp1052
 2705      4608
 2706              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 827:sieve_extend.c ****     }
 2707              		.loc 1 827 54 view .LVU852
 2708 1145 0FB65424 		movzx	edx, BYTE PTR -16[rsp]	# tmp1053, %sfp
 2708      F0
 2709 114a C442EBF7 		shrx	r10, QWORD PTR [r14], rdx	# tmp804, MEM[base: _465, offset: 0B], tmp1053
 2709      16
 2710              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 827:sieve_extend.c ****     }
 2711              		.loc 1 827 72 view .LVU853
 2712 114f 4D09D0   		or	r8, r10	# tmp805, tmp804
 2713 1152 4983C608 		add	r14, 8	# ivtmp.212,
 2714 1156 4E8904E7 		mov	QWORD PTR [rdi+r12*8], r8	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 0
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2715              		.loc 1 826 48 is_stmt 1 view .LVU854
 2716              	# sieve_extend.c:826:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2717              		.loc 1 826 57 is_stmt 0 view .LVU855
 2718 115a 4983C401 		add	r12, 1	# copy_word,
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2719              		.loc 1 826 12 is_stmt 1 view .LVU856
 2720              	.L198:
 827:sieve_extend.c ****     }
 2721              		.loc 1 827 9 view .LVU857
 2722              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 827:sieve_extend.c ****     }
 2723              		.loc 1 827 99 is_stmt 0 view .LVU858
 2724 115e 0FB64C24 		movzx	ecx, BYTE PTR -12[rsp]	# tmp1054, %sfp
 2724      F4
 2725 1163 C4C2F1F7 		shlx	rsi, QWORD PTR 8[r14], rcx	# tmp807, MEM[base: _465, offset: 8B], tmp1054
 2725      7608
 2726              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 827:sieve_extend.c ****     }
 2727              		.loc 1 827 54 view .LVU859
 2728 1169 440FB64C 		movzx	r9d, BYTE PTR -16[rsp]	# tmp1055, %sfp
 2728      24F0
 2729 116f C442B3F7 		shrx	r11, QWORD PTR [r14], r9	# tmp809, MEM[base: _465, offset: 0B], tmp1055
 2729      1E
 2730              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 827:sieve_extend.c ****     }
 2731              		.loc 1 827 72 view .LVU860
 2732 1174 4C09DE   		or	rsi, r11	# tmp810, tmp809
 2733 1177 4983C608 		add	r14, 8	# ivtmp.212,
 2734 117b 4A8934E7 		mov	QWORD PTR [rdi+r12*8], rsi	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2735              		.loc 1 826 48 is_stmt 1 view .LVU861
 2736              	# sieve_extend.c:826:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2737              		.loc 1 826 57 is_stmt 0 view .LVU862
 2738 117f 4983C401 		add	r12, 1	# copy_word,
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2739              		.loc 1 826 12 is_stmt 1 view .LVU863
GAS LISTING /tmp/ccr2dACi.s 			page 79


 2740              	# sieve_extend.c:826:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2741              		.loc 1 826 5 is_stmt 0 view .LVU864
 2742 1183 4C396424 		cmp	QWORD PTR -8[rsp], r12	# %sfp, copy_word
 2742      F8
 2743 1188 0F821DFA 		jb	.L73	#,
 2743      FFFF
 2744              	.L249:
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2745              		.loc 1 826 5 view .LVU865
 2746 118e 8B4424F4 		mov	eax, DWORD PTR -12[rsp]	# _182, %sfp
 2747 1192 8B5C24F0 		mov	ebx, DWORD PTR -16[rsp]	# _184, %sfp
 2748              	.L72:
 827:sieve_extend.c ****     }
 2749              		.loc 1 827 9 is_stmt 1 view .LVU866
 2750              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 827:sieve_extend.c ****     }
 2751              		.loc 1 827 54 is_stmt 0 view .LVU867
 2752 1196 C4C2E3F7 		shrx	rdx, QWORD PTR [r14], rbx	# tmp725, MEM[base: _465, offset: 0B], _184
 2752      16
 2753              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 827:sieve_extend.c ****     }
 2754              		.loc 1 827 99 view .LVU868
 2755 119b C442F9F7 		shlx	r8, QWORD PTR 8[r14], rax	# tmp723, MEM[base: _465, offset: 8B], _182
 2755      4608
 2756              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 827:sieve_extend.c ****     }
 2757              		.loc 1 827 72 view .LVU869
 2758 11a1 4909D0   		or	r8, rdx	# tmp726, tmp725
 2759 11a4 4983C640 		add	r14, 64	# ivtmp.212,
 2760 11a8 4E8904E7 		mov	QWORD PTR [rdi+r12*8], r8	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 0
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2761              		.loc 1 826 48 is_stmt 1 view .LVU870
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2762              		.loc 1 826 12 view .LVU871
 827:sieve_extend.c ****     }
 2763              		.loc 1 827 9 view .LVU872
 2764              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 827:sieve_extend.c ****     }
 2765              		.loc 1 827 54 is_stmt 0 view .LVU873
 2766 11ac C4C2E3F7 		shrx	rcx, QWORD PTR -56[r14], rbx	# tmp732, MEM[base: _465, offset: 0B], _184
 2766      4EC8
 2767              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 827:sieve_extend.c ****     }
 2768              		.loc 1 827 99 view .LVU874
 2769 11b2 C442F9F7 		shlx	r10, QWORD PTR -48[r14], rax	# tmp730, MEM[base: _465, offset: 8B], _182
 2769      56D0
 2770              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 827:sieve_extend.c ****     }
 2771              		.loc 1 827 72 view .LVU875
 2772 11b8 4909CA   		or	r10, rcx	# tmp733, tmp732
 2773 11bb 4E8954E7 		mov	QWORD PTR 8[rdi+r12*8], r10	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset:
 2773      08
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2774              		.loc 1 826 48 is_stmt 1 view .LVU876
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2775              		.loc 1 826 12 view .LVU877
GAS LISTING /tmp/ccr2dACi.s 			page 80


 827:sieve_extend.c ****     }
 2776              		.loc 1 827 9 view .LVU878
 2777              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 827:sieve_extend.c ****     }
 2778              		.loc 1 827 54 is_stmt 0 view .LVU879
 2779 11c0 C442E3F7 		shrx	r9, QWORD PTR -48[r14], rbx	# tmp739, MEM[base: _465, offset: 0B], _184
 2779      4ED0
 2780              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 827:sieve_extend.c ****     }
 2781              		.loc 1 827 99 view .LVU880
 2782 11c6 C4C2F9F7 		shlx	rsi, QWORD PTR -40[r14], rax	# tmp737, MEM[base: _465, offset: 8B], _182
 2782      76D8
 2783              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 827:sieve_extend.c ****     }
 2784              		.loc 1 827 72 view .LVU881
 2785 11cc 4C09CE   		or	rsi, r9	# tmp740, tmp739
 2786 11cf 4A8974E7 		mov	QWORD PTR 16[rdi+r12*8], rsi	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset
 2786      10
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2787              		.loc 1 826 48 is_stmt 1 view .LVU882
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2788              		.loc 1 826 12 view .LVU883
 827:sieve_extend.c ****     }
 2789              		.loc 1 827 9 view .LVU884
 2790              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 827:sieve_extend.c ****     }
 2791              		.loc 1 827 54 is_stmt 0 view .LVU885
 2792 11d4 C442E3F7 		shrx	r8, QWORD PTR -40[r14], rbx	# tmp746, MEM[base: _465, offset: 0B], _184
 2792      46D8
 2793              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 827:sieve_extend.c ****     }
 2794              		.loc 1 827 99 view .LVU886
 2795 11da C442F9F7 		shlx	r11, QWORD PTR -32[r14], rax	# tmp744, MEM[base: _465, offset: 8B], _182
 2795      5EE0
 2796              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 827:sieve_extend.c ****     }
 2797              		.loc 1 827 72 view .LVU887
 2798 11e0 4D09C3   		or	r11, r8	# tmp747, tmp746
 2799 11e3 4E895CE7 		mov	QWORD PTR 24[rdi+r12*8], r11	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset
 2799      18
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2800              		.loc 1 826 48 is_stmt 1 view .LVU888
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2801              		.loc 1 826 12 view .LVU889
 827:sieve_extend.c ****     }
 2802              		.loc 1 827 9 view .LVU890
 2803              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 827:sieve_extend.c ****     }
 2804              		.loc 1 827 99 is_stmt 0 view .LVU891
 2805 11e8 C4C2F9F7 		shlx	rdx, QWORD PTR -24[r14], rax	# tmp751, MEM[base: _465, offset: 8B], _182
 2805      56E8
 2806              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 827:sieve_extend.c ****     }
 2807              		.loc 1 827 54 view .LVU892
 2808 11ee C442E3F7 		shrx	r10, QWORD PTR -32[r14], rbx	# tmp753, MEM[base: _465, offset: 0B], _184
 2808      56E0
 2809              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
GAS LISTING /tmp/ccr2dACi.s 			page 81


 827:sieve_extend.c ****     }
 2810              		.loc 1 827 72 view .LVU893
 2811 11f4 4C09D2   		or	rdx, r10	# tmp754, tmp753
 2812 11f7 4A8954E7 		mov	QWORD PTR 32[rdi+r12*8], rdx	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset
 2812      20
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2813              		.loc 1 826 48 is_stmt 1 view .LVU894
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2814              		.loc 1 826 12 view .LVU895
 827:sieve_extend.c ****     }
 2815              		.loc 1 827 9 view .LVU896
 2816              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 827:sieve_extend.c ****     }
 2817              		.loc 1 827 99 is_stmt 0 view .LVU897
 2818 11fc C4C2F9F7 		shlx	rcx, QWORD PTR -16[r14], rax	# tmp758, MEM[base: _465, offset: 8B], _182
 2818      4EF0
 2819              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 827:sieve_extend.c ****     }
 2820              		.loc 1 827 54 view .LVU898
 2821 1202 C4C2E3F7 		shrx	rsi, QWORD PTR -24[r14], rbx	# tmp760, MEM[base: _465, offset: 0B], _184
 2821      76E8
 2822              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 827:sieve_extend.c ****     }
 2823              		.loc 1 827 72 view .LVU899
 2824 1208 4809F1   		or	rcx, rsi	# tmp761, tmp760
 2825 120b 4A894CE7 		mov	QWORD PTR 40[rdi+r12*8], rcx	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset
 2825      28
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2826              		.loc 1 826 48 is_stmt 1 view .LVU900
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2827              		.loc 1 826 12 view .LVU901
 827:sieve_extend.c ****     }
 2828              		.loc 1 827 9 view .LVU902
 2829              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 827:sieve_extend.c ****     }
 2830              		.loc 1 827 99 is_stmt 0 view .LVU903
 2831 1210 C442F9F7 		shlx	r11, QWORD PTR -8[r14], rax	# tmp765, MEM[base: _465, offset: 8B], _182
 2831      5EF8
 2832              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 827:sieve_extend.c ****     }
 2833              		.loc 1 827 54 view .LVU904
 2834 1216 C442E3F7 		shrx	r9, QWORD PTR -16[r14], rbx	# tmp767, MEM[base: _465, offset: 0B], _184
 2834      4EF0
 2835              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 827:sieve_extend.c ****     }
 2836              		.loc 1 827 72 view .LVU905
 2837 121c 4D09CB   		or	r11, r9	# tmp768, tmp767
 2838 121f 4E895CE7 		mov	QWORD PTR 48[rdi+r12*8], r11	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset
 2838      30
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2839              		.loc 1 826 48 is_stmt 1 view .LVU906
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2840              		.loc 1 826 12 view .LVU907
 827:sieve_extend.c ****     }
 2841              		.loc 1 827 9 view .LVU908
 2842              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 827:sieve_extend.c ****     }
GAS LISTING /tmp/ccr2dACi.s 			page 82


 2843              		.loc 1 827 99 is_stmt 0 view .LVU909
 2844 1224 C442F9F7 		shlx	r8, QWORD PTR [r14], rax	# tmp772, MEM[base: _465, offset: 8B], _182
 2844      06
 2845              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 827:sieve_extend.c ****     }
 2846              		.loc 1 827 54 view .LVU910
 2847 1229 C4C2E3F7 		shrx	rdx, QWORD PTR -8[r14], rbx	# tmp774, MEM[base: _465, offset: 0B], _184
 2847      56F8
 2848              	# sieve_extend.c:827:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 827:sieve_extend.c ****     }
 2849              		.loc 1 827 72 view .LVU911
 2850 122f 4909D0   		or	r8, rdx	# tmp775, tmp774
 2851 1232 4E8944E7 		mov	QWORD PTR 56[rdi+r12*8], r8	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset:
 2851      38
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2852              		.loc 1 826 48 is_stmt 1 view .LVU912
 2853              	# sieve_extend.c:826:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2854              		.loc 1 826 57 is_stmt 0 view .LVU913
 2855 1237 4983C408 		add	r12, 8	# copy_word,
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2856              		.loc 1 826 12 is_stmt 1 view .LVU914
 2857              	# sieve_extend.c:826:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 826:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2858              		.loc 1 826 5 is_stmt 0 view .LVU915
 2859 123b 4C396424 		cmp	QWORD PTR -8[rsp], r12	# %sfp, copy_word
 2859      F8
 2860 1240 0F8350FF 		jnb	.L72	#,
 2860      FFFF
 2861 1246 E960F9FF 		jmp	.L73	#
 2861      FF
 2862              	.LVL103:
 2863 124b 0F1F4400 		.p2align 4,,7
 2863      00
 2864              		.p2align 3
 2865              	.L260:
 801:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 2866              		.loc 1 801 9 is_stmt 1 view .LVU916
 2867              	# sieve_extend.c:801:         bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the s
 801:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 2868              		.loc 1 801 29 is_stmt 0 view .LVU917
 2869 1250 488B7C24 		mov	rdi, QWORD PTR -24[rsp]	# pretmp_178, %sfp
 2869      E8
 2870              	.LVL104:
 2871              	# sieve_extend.c:803:                                 & keepmask(copy_start) & chopmask(destination
 803:sieve_extend.c ****         return; // rapid exit for one word variant
 2872              		.loc 1 803 56 view .LVU918
 2873 1255 4D21FA   		and	r10, r15	# _189, _193
 2874 1258 4D21D1   		and	r9, r10	# tmp405, tmp404
 2875              	# sieve_extend.c:801:         bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the s
 801:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 2876              		.loc 1 801 29 view .LVU919
 2877 125b 4C09CF   		or	rdi, r9	# pretmp_178, tmp405
 2878 125e 49897D00 		mov	QWORD PTR 0[r13], rdi	# *_177, tmp406
 804:sieve_extend.c ****     }
 2879              		.loc 1 804 9 is_stmt 1 view .LVU920
 2880              	# sieve_extend.c:831: }
GAS LISTING /tmp/ccr2dACi.s 			page 83


 2881              		.loc 1 831 1 is_stmt 0 view .LVU921
 2882 1262 488D65D8 		lea	rsp, -40[rbp]	#,
 2883 1266 5B       		pop	rbx	#
 2884 1267 415C     		pop	r12	#
 2885 1269 415D     		pop	r13	#
 2886 126b 415E     		pop	r14	#
 2887              	.LVL105:
 2888              		.loc 1 831 1 view .LVU922
 2889 126d 415F     		pop	r15	#
 2890 126f 5D       		pop	rbp	#
 2891              		.cfi_remember_state
 2892              		.cfi_def_cfa 7, 8
 2893 1270 C3       		ret	
 2894              	.LVL106:
 2895              		.p2align 4,,7
 2896 1271 0F1F8000 		.p2align 3
 2896      000000
 2897              	.L255:
 2898              		.cfi_restore_state
 2899              		.loc 1 831 1 view .LVU923
 2900 1278 C5F877   		vzeroupper
 2901 127b E969FDFF 		jmp	.L62	#
 2901      FF
 2902              	.LVL107:
 2903              		.p2align 4,,7
 2904              		.p2align 3
 2905              	.L257:
 2906              		.loc 1 831 1 view .LVU924
 2907 1280 C5F877   		vzeroupper
 2908 1283 E923F9FF 		jmp	.L73	#
 2908      FF
 2909              	.LVL108:
 2910              		.p2align 4,,7
 2911              		.p2align 3
 2912              	.L77:
 2913              	# sieve_extend.c:797:     register counter_t source_word = wordindex(source_start);
 797:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 2914              		.loc 1 797 24 view .LVU925
 2915 1288 48897424 		mov	QWORD PTR -40[rsp], rsi	# %sfp, source_word
 2915      D8
 2916              	# sieve_extend.c:811:     copy_word++;
 811:sieve_extend.c **** 
 2917              		.loc 1 811 14 view .LVU926
 2918 128d 4989CC   		mov	r12, rcx	# copy_word, copy_word
 2919 1290 4C8D5601 		lea	r10, 1[rsi]	# tmp566,
 2920 1294 E9FBF5FF 		jmp	.L67	#
 2920      FF
 2921              	.LVL109:
 2922              	.L57:
 811:sieve_extend.c **** 
 2923              		.loc 1 811 14 view .LVU927
 2924 1299 488B5424 		mov	rdx, QWORD PTR -24[rsp]	# loop_distance, %sfp
 2924      E8
 2925              	.LBB323:
 2926              	.LBB321:
 2927              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
GAS LISTING /tmp/ccr2dACi.s 			page 84


 2928              		.loc 1 821 35 view .LVU928
 2929 129e 4929F0   		sub	r8, rsi	# tmp490, source_word
 2930 12a1 4801F2   		add	rdx, rsi	# loop_distance, source_word
 2931 12a4 4C8D24D7 		lea	r12, [rdi+rdx*8]	# _481,
 2932 12a8 4C89E0   		mov	rax, r12	# tmp575, _481
 2933 12ab 4C29D8   		sub	rax, r11	# tmp575, ivtmp.230
 2934 12ae 4883E808 		sub	rax, 8	# tmp576,
 2935 12b2 48C1E803 		shr	rax, 3	# tmp574,
 2936 12b6 4883C001 		add	rax, 1	# tmp577,
 2937 12ba 83E007   		and	eax, 7	# tmp578,
 2938 12bd 0F842401 		je	.L250	#,
 2938      0000
 2939 12c3 4883F801 		cmp	rax, 1	# tmp578,
 2940 12c7 0F84EF00 		je	.L185	#,
 2940      0000
 2941 12cd 4883F802 		cmp	rax, 2	# tmp578,
 2942 12d1 0F84C400 		je	.L186	#,
 2942      0000
 2943 12d7 4883F803 		cmp	rax, 3	# tmp578,
 2944 12db 0F849800 		je	.L187	#,
 2944      0000
 2945 12e1 4883F804 		cmp	rax, 4	# tmp578,
 2946 12e5 7471     		je	.L188	#,
 2947 12e7 4883F805 		cmp	rax, 5	# tmp578,
 2948 12eb 7449     		je	.L189	#,
 2949 12ed 4883F806 		cmp	rax, 6	# tmp578,
 2950 12f1 7422     		je	.L190	#,
 2951              	.LVL110:
 821:sieve_extend.c ****         }
 2952              		.loc 1 821 13 is_stmt 1 view .LVU929
 2953              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2954              		.loc 1 821 62 is_stmt 0 view .LVU930
 2955 12f3 440FB64C 		movzx	r9d, BYTE PTR -16[rsp]	# tmp1057, %sfp
 2955      24F0
 2956 12f9 C442B3F7 		shrx	r13, QWORD PTR [r11], r9	# tmp812, MEM[base: _475, offset: 0B], tmp1057
 2956      2B
 2957              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2958              		.loc 1 821 109 view .LVU931
 2959 12fe 0FB65C24 		movzx	ebx, BYTE PTR -12[rsp]	# tmp1058, %sfp
 2959      F4
 2960 1303 C442E1F7 		shlx	r10, QWORD PTR 8[r11], rbx	# tmp814, MEM[base: _475, offset: 8B], tmp1058
 2960      5308
 2961              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2962              		.loc 1 821 80 view .LVU932
 2963 1309 4D09D5   		or	r13, r10	# tmp815, tmp814
 2964 130c 4F896CC3 		mov	QWORD PTR 8[r11+r8*8], r13	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp815
 2964      08
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2965              		.loc 1 820 58 is_stmt 1 view .LVU933
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2966              		.loc 1 820 40 view .LVU934
 2967 1311 4983C308 		add	r11, 8	# ivtmp.230,
 2968              	.L190:
 821:sieve_extend.c ****         }
GAS LISTING /tmp/ccr2dACi.s 			page 85


 2969              		.loc 1 821 13 view .LVU935
 2970              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2971              		.loc 1 821 62 is_stmt 0 view .LVU936
 2972 1315 0FB64C24 		movzx	ecx, BYTE PTR -16[rsp]	# tmp1059, %sfp
 2972      F0
 2973              	.LVL111:
 821:sieve_extend.c ****         }
 2974              		.loc 1 821 62 view .LVU937
 2975 131a C442F3F7 		shrx	r14, QWORD PTR [r11], rcx	# tmp817, MEM[base: _475, offset: 0B], tmp1059
 2975      33
 2976              	.LVL112:
 2977              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2978              		.loc 1 821 109 view .LVU938
 2979 131f 0FB67424 		movzx	esi, BYTE PTR -12[rsp]	# tmp1060, %sfp
 2979      F4
 2980 1324 C4C2C9F7 		shlx	rax, QWORD PTR 8[r11], rsi	# tmp819, MEM[base: _475, offset: 8B], tmp1060
 2980      4308
 2981              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2982              		.loc 1 821 80 view .LVU939
 2983 132a 4909C6   		or	r14, rax	# tmp820, tmp819
 2984 132d 4F8974C3 		mov	QWORD PTR 8[r11+r8*8], r14	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp820
 2984      08
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2985              		.loc 1 820 58 is_stmt 1 view .LVU940
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2986              		.loc 1 820 40 view .LVU941
 2987 1332 4983C308 		add	r11, 8	# ivtmp.230,
 2988              	.L189:
 821:sieve_extend.c ****         }
 2989              		.loc 1 821 13 view .LVU942
 2990              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2991              		.loc 1 821 62 is_stmt 0 view .LVU943
 2992 1336 440FB64C 		movzx	r9d, BYTE PTR -16[rsp]	# tmp1061, %sfp
 2992      24F0
 2993 133c C442B3F7 		shrx	r13, QWORD PTR [r11], r9	# tmp822, MEM[base: _475, offset: 0B], tmp1061
 2993      2B
 2994              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2995              		.loc 1 821 109 view .LVU944
 2996 1341 0FB65C24 		movzx	ebx, BYTE PTR -12[rsp]	# tmp1062, %sfp
 2996      F4
 2997 1346 C442E1F7 		shlx	r10, QWORD PTR 8[r11], rbx	# tmp824, MEM[base: _475, offset: 8B], tmp1062
 2997      5308
 2998              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 2999              		.loc 1 821 80 view .LVU945
 3000 134c 4D09D5   		or	r13, r10	# tmp825, tmp824
 3001 134f 4F896CC3 		mov	QWORD PTR 8[r11+r8*8], r13	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp825
 3001      08
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3002              		.loc 1 820 58 is_stmt 1 view .LVU946
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3003              		.loc 1 820 40 view .LVU947
GAS LISTING /tmp/ccr2dACi.s 			page 86


 3004 1354 4983C308 		add	r11, 8	# ivtmp.230,
 3005              	.L188:
 821:sieve_extend.c ****         }
 3006              		.loc 1 821 13 view .LVU948
 3007              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 3008              		.loc 1 821 62 is_stmt 0 view .LVU949
 3009 1358 0FB64C24 		movzx	ecx, BYTE PTR -16[rsp]	# tmp1063, %sfp
 3009      F0
 3010 135d C442F3F7 		shrx	r14, QWORD PTR [r11], rcx	# tmp827, MEM[base: _475, offset: 0B], tmp1063
 3010      33
 3011              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 3012              		.loc 1 821 109 view .LVU950
 3013 1362 0FB67424 		movzx	esi, BYTE PTR -12[rsp]	# tmp1064, %sfp
 3013      F4
 3014 1367 C4C2C9F7 		shlx	rax, QWORD PTR 8[r11], rsi	# tmp829, MEM[base: _475, offset: 8B], tmp1064
 3014      4308
 3015              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 3016              		.loc 1 821 80 view .LVU951
 3017 136d 4909C6   		or	r14, rax	# tmp830, tmp829
 3018 1370 4F8974C3 		mov	QWORD PTR 8[r11+r8*8], r14	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp830
 3018      08
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3019              		.loc 1 820 58 is_stmt 1 view .LVU952
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3020              		.loc 1 820 40 view .LVU953
 3021 1375 4983C308 		add	r11, 8	# ivtmp.230,
 3022              	.L187:
 821:sieve_extend.c ****         }
 3023              		.loc 1 821 13 view .LVU954
 3024              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 3025              		.loc 1 821 62 is_stmt 0 view .LVU955
 3026 1379 440FB64C 		movzx	r9d, BYTE PTR -16[rsp]	# tmp1065, %sfp
 3026      24F0
 3027 137f C442B3F7 		shrx	r13, QWORD PTR [r11], r9	# tmp832, MEM[base: _475, offset: 0B], tmp1065
 3027      2B
 3028              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 3029              		.loc 1 821 109 view .LVU956
 3030 1384 0FB65C24 		movzx	ebx, BYTE PTR -12[rsp]	# tmp1066, %sfp
 3030      F4
 3031 1389 C442E1F7 		shlx	r10, QWORD PTR 8[r11], rbx	# tmp834, MEM[base: _475, offset: 8B], tmp1066
 3031      5308
 3032              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 3033              		.loc 1 821 80 view .LVU957
 3034 138f 4D09D5   		or	r13, r10	# tmp835, tmp834
 3035 1392 4F896CC3 		mov	QWORD PTR 8[r11+r8*8], r13	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp835
 3035      08
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3036              		.loc 1 820 58 is_stmt 1 view .LVU958
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3037              		.loc 1 820 40 view .LVU959
 3038 1397 4983C308 		add	r11, 8	# ivtmp.230,
GAS LISTING /tmp/ccr2dACi.s 			page 87


 3039              	.L186:
 821:sieve_extend.c ****         }
 3040              		.loc 1 821 13 view .LVU960
 3041              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 3042              		.loc 1 821 62 is_stmt 0 view .LVU961
 3043 139b 0FB64C24 		movzx	ecx, BYTE PTR -16[rsp]	# tmp1067, %sfp
 3043      F0
 3044 13a0 C442F3F7 		shrx	r14, QWORD PTR [r11], rcx	# tmp837, MEM[base: _475, offset: 0B], tmp1067
 3044      33
 3045              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 3046              		.loc 1 821 109 view .LVU962
 3047 13a5 0FB67424 		movzx	esi, BYTE PTR -12[rsp]	# tmp1068, %sfp
 3047      F4
 3048 13aa C4C2C9F7 		shlx	rax, QWORD PTR 8[r11], rsi	# tmp839, MEM[base: _475, offset: 8B], tmp1068
 3048      4308
 3049              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 3050              		.loc 1 821 80 view .LVU963
 3051 13b0 4909C6   		or	r14, rax	# tmp840, tmp839
 3052 13b3 4F8974C3 		mov	QWORD PTR 8[r11+r8*8], r14	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp840
 3052      08
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3053              		.loc 1 820 58 is_stmt 1 view .LVU964
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3054              		.loc 1 820 40 view .LVU965
 3055 13b8 4983C308 		add	r11, 8	# ivtmp.230,
 3056              	.L185:
 821:sieve_extend.c ****         }
 3057              		.loc 1 821 13 view .LVU966
 3058              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 3059              		.loc 1 821 62 is_stmt 0 view .LVU967
 3060 13bc 440FB64C 		movzx	r9d, BYTE PTR -16[rsp]	# tmp1069, %sfp
 3060      24F0
 3061 13c2 C442B3F7 		shrx	r13, QWORD PTR [r11], r9	# tmp842, MEM[base: _475, offset: 0B], tmp1069
 3061      2B
 3062              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 3063              		.loc 1 821 109 view .LVU968
 3064 13c7 0FB65C24 		movzx	ebx, BYTE PTR -12[rsp]	# tmp1070, %sfp
 3064      F4
 3065 13cc C442E1F7 		shlx	r10, QWORD PTR 8[r11], rbx	# tmp844, MEM[base: _475, offset: 8B], tmp1070
 3065      5308
 3066              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 3067              		.loc 1 821 80 view .LVU969
 3068 13d2 4D09D5   		or	r13, r10	# tmp845, tmp844
 3069 13d5 4F896CC3 		mov	QWORD PTR 8[r11+r8*8], r13	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp845
 3069      08
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3070              		.loc 1 820 58 is_stmt 1 view .LVU970
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3071              		.loc 1 820 40 view .LVU971
 3072 13da 4983C308 		add	r11, 8	# ivtmp.230,
 3073              	# sieve_extend.c:820:         for (register counter_t i = 0; i <loop_distance; i++) {
GAS LISTING /tmp/ccr2dACi.s 			page 88


 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3074              		.loc 1 820 9 is_stmt 0 view .LVU972
 3075 13de 4D39E3   		cmp	r11, r12	# ivtmp.230, _481
 3076 13e1 0F8402FC 		je	.L62	#,
 3076      FFFF
 3077              	.L250:
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3078              		.loc 1 820 9 view .LVU973
 3079 13e7 8B4C24F4 		mov	ecx, DWORD PTR -12[rsp]	# _182, %sfp
 3080 13eb 448B7424 		mov	r14d, DWORD PTR -16[rsp]	# _184, %sfp
 3080      F0
 3081              	.L64:
 821:sieve_extend.c ****         }
 3082              		.loc 1 821 13 is_stmt 1 view .LVU974
 3083              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 3084              		.loc 1 821 109 is_stmt 0 view .LVU975
 3085 13f0 C4C2F1F7 		shlx	rax, QWORD PTR 8[r11], rcx	# tmp493, MEM[base: _475, offset: 8B], _182
 3085      4308
 3086              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 3087              		.loc 1 821 62 view .LVU976
 3088 13f6 C4C28BF7 		shrx	rsi, QWORD PTR [r11], r14	# tmp491, MEM[base: _475, offset: 0B], _184
 3088      33
 3089              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 3090              		.loc 1 821 80 view .LVU977
 3091 13fb 4809C6   		or	rsi, rax	# tmp495, tmp493
 3092 13fe 4D8D6B08 		lea	r13, 8[r11]	# tmp579,
 3093 1402 4B8974C3 		mov	QWORD PTR 8[r11+r8*8], rsi	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp495
 3093      08
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3094              		.loc 1 820 58 is_stmt 1 view .LVU978
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3095              		.loc 1 820 40 view .LVU979
 821:sieve_extend.c ****         }
 3096              		.loc 1 821 13 view .LVU980
 3097              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 3098              		.loc 1 821 62 is_stmt 0 view .LVU981
 3099 1407 C4428BF7 		shrx	r9, QWORD PTR 8[r11], r14	# tmp636, MEM[base: _475, offset: 0B], _184
 3099      4B08
 3100              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 3101              		.loc 1 821 109 view .LVU982
 3102 140d C4C2F1F7 		shlx	rbx, QWORD PTR 8[r13], rcx	# tmp638, MEM[base: _475, offset: 8B], _182
 3102      5D08
 3103              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 3104              		.loc 1 821 80 view .LVU983
 3105 1413 4909D9   		or	r9, rbx	# tmp639, tmp638
 3106 1416 4D8D5310 		lea	r10, 16[r11]	# ivtmp.230,
 3107 141a 4D8D6B18 		lea	r13, 24[r11]	# ivtmp.230,
 3108 141e 4F894CC3 		mov	QWORD PTR 16[r11+r8*8], r9	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp639
 3108      10
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3109              		.loc 1 820 58 is_stmt 1 view .LVU984
GAS LISTING /tmp/ccr2dACi.s 			page 89


 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3110              		.loc 1 820 40 view .LVU985
 821:sieve_extend.c ****         }
 3111              		.loc 1 821 13 view .LVU986
 3112              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 3113              		.loc 1 821 62 is_stmt 0 view .LVU987
 3114 1423 C4C28BF7 		shrx	rsi, QWORD PTR 16[r11], r14	# tmp642, MEM[base: _475, offset: 0B], _184
 3114      7310
 3115              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 3116              		.loc 1 821 109 view .LVU988
 3117 1429 C4C2F1F7 		shlx	rax, QWORD PTR 8[r10], rcx	# tmp644, MEM[base: _475, offset: 8B], _182
 3117      4208
 3118              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 3119              		.loc 1 821 80 view .LVU989
 3120 142f 4809C6   		or	rsi, rax	# tmp645, tmp644
 3121 1432 4B8974C3 		mov	QWORD PTR 24[r11+r8*8], rsi	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp645
 3121      18
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3122              		.loc 1 820 58 is_stmt 1 view .LVU990
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3123              		.loc 1 820 40 view .LVU991
 821:sieve_extend.c ****         }
 3124              		.loc 1 821 13 view .LVU992
 3125              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 3126              		.loc 1 821 62 is_stmt 0 view .LVU993
 3127 1437 C4428BF7 		shrx	r9, QWORD PTR 24[r11], r14	# tmp648, MEM[base: _475, offset: 0B], _184
 3127      4B18
 3128              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 3129              		.loc 1 821 109 view .LVU994
 3130 143d C4C2F1F7 		shlx	rbx, QWORD PTR 8[r13], rcx	# tmp650, MEM[base: _475, offset: 8B], _182
 3130      5D08
 3131              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 3132              		.loc 1 821 80 view .LVU995
 3133 1443 4909D9   		or	r9, rbx	# tmp651, tmp650
 3134 1446 4D8D5320 		lea	r10, 32[r11]	# ivtmp.230,
 3135 144a 4D8D6B28 		lea	r13, 40[r11]	# ivtmp.230,
 3136 144e 4F894CC3 		mov	QWORD PTR 32[r11+r8*8], r9	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp651
 3136      20
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3137              		.loc 1 820 58 is_stmt 1 view .LVU996
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3138              		.loc 1 820 40 view .LVU997
 821:sieve_extend.c ****         }
 3139              		.loc 1 821 13 view .LVU998
 3140              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 3141              		.loc 1 821 62 is_stmt 0 view .LVU999
 3142 1453 C4C28BF7 		shrx	rsi, QWORD PTR 32[r11], r14	# tmp654, MEM[base: _475, offset: 0B], _184
 3142      7320
 3143              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
GAS LISTING /tmp/ccr2dACi.s 			page 90


 3144              		.loc 1 821 109 view .LVU1000
 3145 1459 C4C2F1F7 		shlx	rax, QWORD PTR 8[r10], rcx	# tmp656, MEM[base: _475, offset: 8B], _182
 3145      4208
 3146              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 3147              		.loc 1 821 80 view .LVU1001
 3148 145f 4809C6   		or	rsi, rax	# tmp657, tmp656
 3149 1462 4B8974C3 		mov	QWORD PTR 40[r11+r8*8], rsi	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp657
 3149      28
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3150              		.loc 1 820 58 is_stmt 1 view .LVU1002
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3151              		.loc 1 820 40 view .LVU1003
 821:sieve_extend.c ****         }
 3152              		.loc 1 821 13 view .LVU1004
 3153              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 3154              		.loc 1 821 62 is_stmt 0 view .LVU1005
 3155 1467 C4428BF7 		shrx	r9, QWORD PTR 40[r11], r14	# tmp660, MEM[base: _475, offset: 0B], _184
 3155      4B28
 3156              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 3157              		.loc 1 821 109 view .LVU1006
 3158 146d C4C2F1F7 		shlx	rbx, QWORD PTR 8[r13], rcx	# tmp662, MEM[base: _475, offset: 8B], _182
 3158      5D08
 3159              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 3160              		.loc 1 821 80 view .LVU1007
 3161 1473 4909D9   		or	r9, rbx	# tmp663, tmp662
 3162 1476 4D8D5330 		lea	r10, 48[r11]	# ivtmp.230,
 3163 147a 4D8D6B38 		lea	r13, 56[r11]	# ivtmp.230,
 3164 147e 4F894CC3 		mov	QWORD PTR 48[r11+r8*8], r9	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp663
 3164      30
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3165              		.loc 1 820 58 is_stmt 1 view .LVU1008
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3166              		.loc 1 820 40 view .LVU1009
 821:sieve_extend.c ****         }
 3167              		.loc 1 821 13 view .LVU1010
 3168              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 3169              		.loc 1 821 62 is_stmt 0 view .LVU1011
 3170 1483 C4C28BF7 		shrx	rsi, QWORD PTR 48[r11], r14	# tmp666, MEM[base: _475, offset: 0B], _184
 3170      7330
 3171              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 3172              		.loc 1 821 109 view .LVU1012
 3173 1489 C4C2F1F7 		shlx	rax, QWORD PTR 8[r10], rcx	# tmp668, MEM[base: _475, offset: 8B], _182
 3173      4208
 3174              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 3175              		.loc 1 821 80 view .LVU1013
 3176 148f 4809C6   		or	rsi, rax	# tmp669, tmp668
 3177 1492 4B8974C3 		mov	QWORD PTR 56[r11+r8*8], rsi	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp669
 3177      38
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3178              		.loc 1 820 58 is_stmt 1 view .LVU1014
GAS LISTING /tmp/ccr2dACi.s 			page 91


 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3179              		.loc 1 820 40 view .LVU1015
 821:sieve_extend.c ****         }
 3180              		.loc 1 821 13 view .LVU1016
 3181              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 3182              		.loc 1 821 62 is_stmt 0 view .LVU1017
 3183 1497 C4428BF7 		shrx	r9, QWORD PTR 56[r11], r14	# tmp672, MEM[base: _475, offset: 0B], _184
 3183      4B38
 3184              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 3185              		.loc 1 821 109 view .LVU1018
 3186 149d C4C2F1F7 		shlx	rbx, QWORD PTR 8[r13], rcx	# tmp674, MEM[base: _475, offset: 8B], _182
 3186      5D08
 3187              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 3188              		.loc 1 821 80 view .LVU1019
 3189 14a3 4909D9   		or	r9, rbx	# tmp675, tmp674
 3190 14a6 4F894CC3 		mov	QWORD PTR 64[r11+r8*8], r9	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp675
 3190      40
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3191              		.loc 1 820 58 is_stmt 1 view .LVU1020
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3192              		.loc 1 820 40 view .LVU1021
 3193 14ab 4983C340 		add	r11, 64	# ivtmp.230,
 3194              	# sieve_extend.c:820:         for (register counter_t i = 0; i <loop_distance; i++) {
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3195              		.loc 1 820 9 is_stmt 0 view .LVU1022
 3196 14af 4D39E3   		cmp	r11, r12	# ivtmp.230, _481
 3197 14b2 0F8538FF 		jne	.L64	#,
 3197      FFFF
 3198 14b8 E92CFBFF 		jmp	.L62	#
 3198      FF
 3199              	.LVL113:
 3200              	.L262:
 821:sieve_extend.c ****         }
 3201              		.loc 1 821 13 is_stmt 1 view .LVU1023
 3202              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 3203              		.loc 1 821 62 is_stmt 0 view .LVU1024
 3204 14bd C4417D6F 		vmovdqa	ymm8, YMMWORD PTR [r10]	# tmp1071, MEM[base: vectp.196_325, index: ivtmp.239_483, offset: 
 3204      02
 3205 14c2 BA200000 		mov	edx, 32	# ivtmp.239,
 3205      00
 3206              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 3207              		.loc 1 821 109 view .LVU1025
 3208 14c7 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR [r11]	# tmp1072, MEM[base: vectp.200_332, index: ivtmp.239_483, offset: 
 3208      1B
 3209              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 3210              		.loc 1 821 62 view .LVU1026
 3211 14cc C53DD3C9 		vpsrlq	ymm9, ymm8, xmm1	# vect__49.198, tmp1071, _184
 3212              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 3213              		.loc 1 821 109 view .LVU1027
 3214 14d0 C565F3D0 		vpsllq	ymm10, ymm3, xmm0	# vect__54.202, tmp1072, _182
GAS LISTING /tmp/ccr2dACi.s 			page 92


 3215              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 3216              		.loc 1 821 80 view .LVU1028
 3217 14d4 C44135EB 		vpor	ymm11, ymm9, ymm10	# vect__58.203, vect__49.198, vect__54.202
 3217      DA
 3218              	# sieve_extend.c:821:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 821:sieve_extend.c ****         }
 3219              		.loc 1 821 35 view .LVU1029
 3220 14d9 C4417E7F 		vmovdqu	YMMWORD PTR [r9], ymm11	# MEM[base: vectp.205_341, index: ivtmp.239_483, offset: 0B], vect
 3220      19
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3221              		.loc 1 820 58 is_stmt 1 view .LVU1030
 820:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3222              		.loc 1 820 40 view .LVU1031
 3223 14de E95AF8FF 		jmp	.L184	#
 3223      FF
 3224              	.LBE321:
 3225              	.LBE323:
 3226              		.cfi_endproc
 3227              	.LFE70:
 3229 14e3 66662E0F 		.p2align 4
 3229      1F840000 
 3229      00000066 
 3229      90
 3230              		.globl	compare_tuning_result
 3232              	compare_tuning_result:
 3233              	.LVL114:
 3234              	.LFB82:
 832:sieve_extend.c **** 
 833:sieve_extend.c **** static void extendSieve_shiftright_base(bitword_t* bitarray, const counter_t source_start, const co
 834:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 835:sieve_extend.c ****    
 836:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 837:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 838:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_calc(source_start);
 839:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 840:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 841:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 842:sieve_extend.c **** 
 843:sieve_extend.c ****     if (copy_word >= destination_stop_word) { 
 844:sieve_extend.c ****         bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose da
 845:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 846:sieve_extend.c ****                                 & keepmask(copy_start) & chopmask(destination_stop);
 847:sieve_extend.c ****         return; // rapid exit for one word variant
 848:sieve_extend.c ****     }
 849:sieve_extend.c **** 
 850:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose data
 851:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 852:sieve_extend.c ****                                 & keepmask(copy_start);
 853:sieve_extend.c ****     
 854:sieve_extend.c ****     copy_word++;
 855:sieve_extend.c **** 
 856:sieve_extend.c ****     debug { printf("...start - %ju - %ju - end\n",(uintmax_t)wordindex(copy_start), (uintmax_t)dest
 857:sieve_extend.c **** 
 858:sieve_extend.c ****     for (; copy_word <= destination_stop_word; copy_word++, source_word++ ) 
 859:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 860:sieve_extend.c ****     // bitarray[copy_word] &= chopmask(destination_stop);
GAS LISTING /tmp/ccr2dACi.s 			page 93


 861:sieve_extend.c **** 
 862:sieve_extend.c **** }
 863:sieve_extend.c **** 
 864:sieve_extend.c **** static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source_start, const counter_
 865:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 866:sieve_extend.c **** 
 867:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 868:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 869:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_calc(copy_start);
 870:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 871:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 872:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 873:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 874:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 875:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 876:sieve_extend.c **** 
 877:sieve_extend.c ****     copy_word++;
 878:sieve_extend.c ****     source_word++;
 879:sieve_extend.c **** 
 880:sieve_extend.c ****     const counter_t aligned_copy_word = min(source_word + size, destination_stop_word); // after <<
 881:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 882:sieve_extend.c ****     source_word += distance;
 883:sieve_extend.c ****     copy_word += distance;
 884:sieve_extend.c **** 
 885:sieve_extend.c ****      debug { counter_t fast_loop_stop_word = uintsafeminus(aligned_copy_word,2); printf("...start -
 886:sieve_extend.c **** 
 887:sieve_extend.c ****     #pragma ivdep
 888:sieve_extend.c ****     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 889:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 890:sieve_extend.c ****     }
 891:sieve_extend.c **** 
 892:sieve_extend.c ****     if (copy_word >= destination_stop_word) return;
 893:sieve_extend.c **** 
 894:sieve_extend.c ****     source_word = copy_word - size; // recalibrate
 895:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 896:sieve_extend.c **** 
 897:sieve_extend.c ****     #pragma ivdep
 898:sieve_extend.c ****     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 899:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 900:sieve_extend.c **** 
 901:sieve_extend.c ****     #pragma ivdep
 902:sieve_extend.c ****     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 903:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 904:sieve_extend.c **** 
 905:sieve_extend.c **** 
 906:sieve_extend.c ****  }
 907:sieve_extend.c **** 
 908:sieve_extend.c **** static inline void extendSieve(bitword_t* bitarray, const counter_t source_start, const counter_t s
 909:sieve_extend.c ****     if (size < WORD_SIZE_counter)   {
 910:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 911:sieve_extend.c ****         return; // rapid exit for small sizes
 912:sieve_extend.c ****     }
 913:sieve_extend.c **** 
 914:sieve_extend.c ****     const counter_t copy_start  = source_start + size;
 915:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 916:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 917:sieve_extend.c **** 
GAS LISTING /tmp/ccr2dACi.s 			page 94


 918:sieve_extend.c ****     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_start, size, destinatio
 919:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 920:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 921:sieve_extend.c **** }
 922:sieve_extend.c **** 
 923:sieve_extend.c **** static void sieve_block_stripe(struct sieve_state *sieve, const counter_t block_start, const counte
 924:sieve_extend.c ****     counter_t prime = prime_start;
 925:sieve_extend.c ****     counter_t start = prime * prime * 2 + prime * 2;
 926:sieve_extend.c ****     counter_t step  = prime * 2 + 1;
 927:sieve_extend.c ****     bitword_t* bitarray = sieve->bitarray;
 928:sieve_extend.c **** 
 929:sieve_extend.c ****     debug printf("Block strip for block %ju - %ju\n",(uintmax_t)block_start,(uintmax_t)block_stop);
 930:sieve_extend.c ****     
 931:sieve_extend.c ****     while (start <= block_stop) {
 932:sieve_extend.c ****         step  = prime * 2 + 1;
 933:sieve_extend.c ****         if unlikely(step > SMALLSTEP_FASTER) break;
 934:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 935:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 936:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1 );
 937:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 938:sieve_extend.c ****     }
 939:sieve_extend.c ****     
 940:sieve_extend.c ****     while (start <= block_stop) {
 941:sieve_extend.c ****         step  = prime * 2 + 1;
 942:sieve_extend.c ****         if unlikely(step > MEDIUMSTEP_FASTER) break;
 943:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 944:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 945:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1 );
 946:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 947:sieve_extend.c ****     }
 948:sieve_extend.c **** 
 949:sieve_extend.c **** //     counter_t start1 = 0; // save value
 950:sieve_extend.c **** //     counter_t step1 = 0; // save value
 951:sieve_extend.c **** //     while (start <= block_stop) {
 952:sieve_extend.c **** //         step  = prime * 2 + 1;
 953:sieve_extend.c **** //         if (step > 64) break;
 954:sieve_extend.c **** //         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_star
 955:sieve_extend.c **** //         start1 = start; // save value
 956:sieve_extend.c **** //         step1 = step; // save value
 957:sieve_extend.c **** //         prime = searchBitFalse(bitarray, prime+1 );
 958:sieve_extend.c **** //         start = prime * prime * 2 + prime * 2;
 959:sieve_extend.c **** //         step  = prime * 2 + 1;
 960:sieve_extend.c **** //         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + pr
 961:sieve_extend.c **** //         if (start <= block_stop) setBitsTrue_race(bitarray, start1, start, step1, step, block_st
 962:sieve_extend.c **** // //        else                     setBitsTrue_largeSteps(bitarray, start1, step1, block_stop);
 963:sieve_extend.c **** //         prime = searchBitFalse(bitarray, prime+1 );
 964:sieve_extend.c **** //         start = prime * prime * 2 + prime * 2;
 965:sieve_extend.c **** //     }
 966:sieve_extend.c **** 
 967:sieve_extend.c ****     while (start <= block_stop) {
 968:sieve_extend.c ****         step  = prime * 2 + 1;
 969:sieve_extend.c ****         if unlikely(step > VECTORSTEP_FASTER) break;
 970:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 971:sieve_extend.c ****         setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
 972:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1 );
 973:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 974:sieve_extend.c ****     }
GAS LISTING /tmp/ccr2dACi.s 			page 95


 975:sieve_extend.c **** 
 976:sieve_extend.c ****     while (start <= block_stop) {
 977:sieve_extend.c ****         step  = prime * 2 + 1;
 978:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 979:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 980:sieve_extend.c ****         setBitsTrue_largeRange(bitarray, start, step, block_stop);
 981:sieve_extend.c ****         prime = searchBitFalse_longRange(bitarray, prime+1 );
 982:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 983:sieve_extend.c ****     }
 984:sieve_extend.c **** 
 985:sieve_extend.c ****     while (start <= block_stop) {
 986:sieve_extend.c ****         step  = prime * 2 + 1;
 987:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 988:sieve_extend.c ****         if likely(start <= block_stop)
 989:sieve_extend.c ****             setBitsTrue_largeSteps(bitarray, start, step, block_stop);
 990:sieve_extend.c ****         prime = searchBitFalse_longRange(bitarray, prime+1 );
 991:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 992:sieve_extend.c ****     }
 993:sieve_extend.c **** }
 994:sieve_extend.c **** 
 995:sieve_extend.c **** struct block {
 996:sieve_extend.c ****     counter_t pattern_size; // size of pattern applied 
 997:sieve_extend.c ****     counter_t pattern_start; // start of pattern
 998:sieve_extend.c ****     counter_t prime; // next prime to be striped
 999:sieve_extend.c **** };
1000:sieve_extend.c **** 
1001:sieve_extend.c **** // returns prime that could not be handled:
1002:sieve_extend.c **** // start is too large
1003:sieve_extend.c **** // range is too big
1004:sieve_extend.c **** static struct block sieve_block_extend(struct sieve_state *sieve, const counter_t block_start, cons
1005:sieve_extend.c ****     register counter_t prime   = 0;
1006:sieve_extend.c ****     counter_t patternsize_bits = 1;
1007:sieve_extend.c ****     counter_t pattern_start    = 0;
1008:sieve_extend.c ****     counter_t range_stop       = block_start;
1009:sieve_extend.c ****     bitword_t* bitarray        = sieve->bitarray;
1010:sieve_extend.c ****     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 };
1011:sieve_extend.c **** 
1012:sieve_extend.c ****     sieve->bitarray[0] = SAFE_ZERO; // only the first word has to be cleared; the rest is populated
1013:sieve_extend.c ****     
1014:sieve_extend.c ****     for (;range_stop < block_stop;) {
1015:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
1016:sieve_extend.c ****         counter_t start = prime * prime * 2 + prime * 2;
1017:sieve_extend.c ****         if unlikely(start > block_stop) break;
1018:sieve_extend.c **** 
1019:sieve_extend.c ****         const counter_t step  = prime * 2 + 1;
1020:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
1021:sieve_extend.c **** 
1022:sieve_extend.c ****         range_stop = block_start + patternsize_bits * step * 2;  // range is x2 so the second block
1023:sieve_extend.c ****         block.pattern_size = patternsize_bits;
1024:sieve_extend.c ****         block.pattern_start = pattern_start;
1025:sieve_extend.c ****         if (range_stop > block_stop) return block; //range_stop = block_stop;
1026:sieve_extend.c **** 
1027:sieve_extend.c ****         if (patternsize_bits>1) {
1028:sieve_extend.c ****             pattern_start = block_start | patternsize_bits;
1029:sieve_extend.c ****             extendSieve(bitarray, pattern_start, patternsize_bits, range_stop);
1030:sieve_extend.c ****         }
1031:sieve_extend.c ****         patternsize_bits *= step;
GAS LISTING /tmp/ccr2dACi.s 			page 96


1032:sieve_extend.c **** 
1033:sieve_extend.c ****         if      (step < SMALLSTEP_FASTER)      setBitsTrue_smallStep (bitarray, start, (bitshift_t)
1034:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitarray, start, step, range_
1035:sieve_extend.c ****         else if (step < WORD_SIZE_counter * 4) setBitsTrue_largeRange_vector(bitarray, start, step,
1036:sieve_extend.c ****         else                                   setBitsTrue_largeRange(bitarray, start, step, range_
1037:sieve_extend.c ****         block.prime = prime;
1038:sieve_extend.c ****     } 
1039:sieve_extend.c **** 
1040:sieve_extend.c ****     return block;
1041:sieve_extend.c **** }
1042:sieve_extend.c **** 
1043:sieve_extend.c **** static struct sieve_state *sieve(const counter_t maxints, const counter_t blocksize) {
1044:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
1045:sieve_extend.c ****     counter_t prime     = 0;
1046:sieve_extend.c ****     bitword_t* bitarray = sieve->bitarray;
1047:sieve_extend.c **** 
1048:sieve_extend.c ****     debug printf("Running sieve to find all primes up to %ju with blocksize %ju\n",(uintmax_t)maxin
1049:sieve_extend.c **** 
1050:sieve_extend.c ****     // fill the whole sieve bij adding en copying incrementally
1051:sieve_extend.c ****     struct block block = sieve_block_extend(sieve, 0, sieve->bits);
1052:sieve_extend.c ****     extendSieve(bitarray, block.pattern_start, block.pattern_size, sieve->bits);
1053:sieve_extend.c ****     prime = block.prime;
1054:sieve_extend.c **** 
1055:sieve_extend.c ****     // #pragma unroll 8
1056:sieve_extend.c ****     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= sieve->bits; block_sta
1057:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
1058:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime);
1059:sieve_extend.c ****         sieve_block_stripe(sieve, block_start, block_stop, prime);
1060:sieve_extend.c ****     } 
1061:sieve_extend.c **** 
1062:sieve_extend.c ****     return sieve;
1063:sieve_extend.c **** }
1064:sieve_extend.c **** 
1065:sieve_extend.c **** static void show_primes(struct sieve_state *sieve, counter_t maxFactor) {
1066:sieve_extend.c ****     counter_t primeCount = 1;    // We already have 2
1067:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitarray, factor+
1068:sieve_extend.c ****         primeCount++;
1069:sieve_extend.c ****         if (factor < maxFactor/2) {
1070:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
1071:sieve_extend.c ****             if (primeCount % 10 == 0) printf("\n");
1072:sieve_extend.c ****         }
1073:sieve_extend.c ****     }
1074:sieve_extend.c ****     printf("\nFound %ju primes until %ju\n",(uintmax_t)primeCount, (uintmax_t)sieve->bits*2+1);
1075:sieve_extend.c **** }
1076:sieve_extend.c **** 
1077:sieve_extend.c **** static counter_t count_primes(struct sieve_state *sieve) {
1078:sieve_extend.c ****     counter_t primeCount = 1;
1079:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitarray, factor+
1080:sieve_extend.c ****     return primeCount;
1081:sieve_extend.c **** }
1082:sieve_extend.c **** 
1083:sieve_extend.c **** static void deepAnalyzePrimes(struct sieve_state *sieve) {
1084:sieve_extend.c ****     printf("DeepAnalyzing\n");
1085:sieve_extend.c ****     counter_t warn_prime = 0;
1086:sieve_extend.c ****     counter_t warn_nonprime = 0;
1087:sieve_extend.c ****     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
1088:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
GAS LISTING /tmp/ccr2dACi.s 			page 97


1089:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1090:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
1091:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
1092:sieve_extend.c ****                 }
1093:sieve_extend.c ****             }
1094:sieve_extend.c ****         }
1095:sieve_extend.c ****         else {
1096:sieve_extend.c ****             counter_t c_prime = 0;
1097:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1098:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
1099:sieve_extend.c ****             }
1100:sieve_extend.c ****             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) was marked non-prime, 
1101:sieve_extend.c ****         }
1102:sieve_extend.c ****     }
1103:sieve_extend.c **** }
1104:sieve_extend.c **** 
1105:sieve_extend.c **** 
1106:sieve_extend.c **** int validatePrimeCount(struct sieve_state *sieve, int option_verboselevel) {
1107:sieve_extend.c **** 
1108:sieve_extend.c ****     counter_t primecount = count_primes(sieve);
1109:sieve_extend.c ****     counter_t valid_primes = 0;
1110:sieve_extend.c ****     switch(sieve->size) {
1111:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
1112:sieve_extend.c ****         case 100:           valid_primes = 25;       break;
1113:sieve_extend.c ****         case 1000:          valid_primes = 168;      break;
1114:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
1115:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
1116:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
1117:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
1118:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
1119:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
1120:sieve_extend.c ****         default:            valid_primes= 0;
1121:sieve_extend.c ****     }
1122:sieve_extend.c **** 
1123:sieve_extend.c ****     int valid = (valid_primes == primecount);
1124:sieve_extend.c ****     if (valid  && option_verboselevel >= 4) printf("Result: Sievesize %ju is expected to have %ju p
1125:sieve_extend.c ****     if (!valid && option_verboselevel >= 1) {
1126:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
1127:sieve_extend.c ****         if (!valid && option_verboselevel >= 2) show_primes(sieve, default_show_primes_on_error);
1128:sieve_extend.c ****     }
1129:sieve_extend.c ****     if (!valid && option_verboselevel >= 3) deepAnalyzePrimes(sieve);
1130:sieve_extend.c ****     return (valid);
1131:sieve_extend.c **** }
1132:sieve_extend.c **** 
1133:sieve_extend.c **** void usage(char *name) {
1134:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
1135:sieve_extend.c ****     fprintf(stderr, "Options:\n");
1136:sieve_extend.c ****     fprintf(stderr, "  --verbose <level>  Show more output to a certain level:\n");
1137:sieve_extend.c ****     fprintf(stderr, "                     1 - show phase progress\n");
1138:sieve_extend.c ****     fprintf(stderr, "                     2 - show general progress within the phase\n");
1139:sieve_extend.c ****     fprintf(stderr, "                     3 - show actual work\n");
1140:sieve_extend.c ****     fprintf(stderr, "  --check            check the correctness of the algorithm\n");
1141:sieve_extend.c ****     fprintf(stderr, "  --show <maximum>   Show the primes found up to the maximum\n");
1142:sieve_extend.c ****     fprintf(stderr, "  --tune  <level>    find the best settings for the current os and hardware\n"
1143:sieve_extend.c ****     fprintf(stderr, "                     1 - fast tuning\n");
1144:sieve_extend.c ****     fprintf(stderr, "                     2 - refined tuning\n");
1145:sieve_extend.c ****     fprintf(stderr, "                     3 - maximum tuning (takes long)\n");
GAS LISTING /tmp/ccr2dACi.s 			page 98


1146:sieve_extend.c ****     exit(1);
1147:sieve_extend.c **** }
1148:sieve_extend.c **** 
1149:sieve_extend.c **** typedef struct  {
1150:sieve_extend.c ****     counter_t maxints;
1151:sieve_extend.c ****     counter_t blocksize_bits;
1152:sieve_extend.c ****     counter_t blocksize_kb;
1153:sieve_extend.c ****     counter_t free_bits;
1154:sieve_extend.c ****     counter_t smallstep_faster;
1155:sieve_extend.c ****     counter_t mediumstep_faster;
1156:sieve_extend.c ****     counter_t vectorstep_faster;
1157:sieve_extend.c ****     counter_t sample_max;
1158:sieve_extend.c ****     double    sample_duration;
1159:sieve_extend.c ****     counter_t passes;
1160:sieve_extend.c ****     double    elapsed_time;
1161:sieve_extend.c ****     double    avg;
1162:sieve_extend.c **** } tuning_result_type;
1163:sieve_extend.c **** 
1164:sieve_extend.c **** int compare_tuning_result(const void *a, const void *b) {
 3235              		.loc 1 1164 57 view -0
 3236              		.cfi_startproc
 3237              		.loc 1 1164 57 is_stmt 0 view .LVU1033
 3238 14f0 F30F1EFA 		endbr64	
1165:sieve_extend.c ****     tuning_result_type *resultA = (tuning_result_type *)a;
 3239              		.loc 1 1165 5 is_stmt 1 view .LVU1034
 3240              	.LVL115:
1166:sieve_extend.c ****     tuning_result_type *resultB = (tuning_result_type *)b;
 3241              		.loc 1 1166 5 view .LVU1035
1167:sieve_extend.c ****     return (resultB->avg > resultA->avg ? 1 : -1);
 3242              		.loc 1 1167 5 view .LVU1036
 3243              	# sieve_extend.c:1167:     return (resultB->avg > resultA->avg ? 1 : -1);
 3244              		.loc 1 1167 45 is_stmt 0 view .LVU1037
 3245 14f4 C5FB1046 		vmovsd	xmm0, QWORD PTR 88[rsi]	# MEM[(struct tuning_result_type *)b_5(D)].avg, MEM[(struct tuning_
 3245      58
 3246 14f9 31C0     		xor	eax, eax	# <retval>
 3247 14fb C5F92F47 		vcomisd	xmm0, QWORD PTR 88[rdi]	# MEM[(struct tuning_result_type *)b_5(D)].avg, MEM[(struct tuning
 3247      58
 3248 1500 0F97C0   		seta	al	#, <retval>
 3249 1503 8D4400FF 		lea	eax, -1[rax+rax]	# <retval>,
 3250              	# sieve_extend.c:1168: }
1168:sieve_extend.c **** }
 3251              		.loc 1 1168 1 view .LVU1038
 3252 1507 C3       		ret	
 3253              		.cfi_endproc
 3254              	.LFE82:
 3256 1508 0F1F8400 		.p2align 4
 3256      00000000 
 3258              	setBitsTrue_largeRange_vector:
 3259              	.LVL116:
 3260              	.LFB64:
 455:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 3261              		.loc 1 455 153 is_stmt 1 view -0
 3262              		.cfi_startproc
 455:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 3263              		.loc 1 455 153 is_stmt 0 view .LVU1040
 3264 1510 55       		push	rbp	#
 3265              		.cfi_def_cfa_offset 16
GAS LISTING /tmp/ccr2dACi.s 			page 99


 3266              		.cfi_offset 6, -16
 3267              	# sieve_extend.c:470:     counter_t range_start_atvector = vectorstart(range_start);
 470:sieve_extend.c ****     if likely((range_start_atvector + step) < range_start) { // not the first step possible in this
 3268              		.loc 1 470 15 view .LVU1041
 3269 1511 4989F3   		mov	r11, rsi	# range_start_atvector, range_start
 3270              	# sieve_extend.c:455: static void setBitsTrue_largeRange_vector(bitword_t* __restrict bitarray_word
 455:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 3271              		.loc 1 455 153 view .LVU1042
 3272 1514 4889E5   		mov	rbp, rsp	#,
 3273              		.cfi_def_cfa_register 6
 3274              	# sieve_extend.c:470:     counter_t range_start_atvector = vectorstart(range_start);
 470:sieve_extend.c ****     if likely((range_start_atvector + step) < range_start) { // not the first step possible in this
 3275              		.loc 1 470 15 view .LVU1043
 3276 1517 4530DB   		xor	r11b, r11b	# range_start_atvector
 3277              	# sieve_extend.c:455: static void setBitsTrue_largeRange_vector(bitword_t* __restrict bitarray_word
 455:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 3278              		.loc 1 455 153 view .LVU1044
 3279 151a 4157     		push	r15	#
 3280 151c 4156     		push	r14	#
 3281 151e 4155     		push	r13	#
 3282 1520 4154     		push	r12	#
 3283 1522 53       		push	rbx	#
 3284 1523 4883E4E0 		and	rsp, -32	#,
 3285 1527 488D6424 		lea	rsp, -64[rsp]	#,
 3285      C0
 3286              		.cfi_offset 15, -24
 3287              		.cfi_offset 14, -32
 3288              		.cfi_offset 13, -40
 3289              		.cfi_offset 12, -48
 3290              		.cfi_offset 3, -56
 3291              	# sieve_extend.c:455: static void setBitsTrue_largeRange_vector(bitword_t* __restrict bitarray_word
 455:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 3292              		.loc 1 455 153 view .LVU1045
 3293 152c 64488B04 		mov	rax, QWORD PTR fs:40	# tmp407, MEM[(<address-space-1> long unsigned int *)40B]
 3293      25280000 
 3293      00
 3294 1535 48894424 		mov	QWORD PTR 56[rsp], rax	# D.6690, tmp407
 3294      38
 3295 153a 31C0     		xor	eax, eax	# tmp407
 456:sieve_extend.c **** 
 3296              		.loc 1 456 5 is_stmt 1 view .LVU1046
 464:sieve_extend.c ****     
 3297              		.loc 1 464 5 view .LVU1047
 3298              	.LVL117:
 470:sieve_extend.c ****     if likely((range_start_atvector + step) < range_start) { // not the first step possible in this
 3299              		.loc 1 470 5 view .LVU1048
 471:sieve_extend.c ****         debug { printf("Range start+step %ju not at start of vector %ju\n",range_start+step, range_
 3300              		.loc 1 471 5 view .LVU1049
 3301              	# sieve_extend.c:471:     if likely((range_start_atvector + step) < range_start) { // not the first
 471:sieve_extend.c ****         debug { printf("Range start+step %ju not at start of vector %ju\n",range_start+step, range_
 3302              		.loc 1 471 8 is_stmt 0 view .LVU1050
 3303 153c 498D0413 		lea	rax, [r11+rdx]	# tmp184,
 3304 1540 4839F0   		cmp	rax, rsi	# tmp184, range_start
 3305 1543 0F830401 		jnb	.L267	#,
 3305      0000
 3306              	.LBB331:
 472:sieve_extend.c **** 
GAS LISTING /tmp/ccr2dACi.s 			page 100


 3307              		.loc 1 472 9 is_stmt 1 view .LVU1051
 474:sieve_extend.c ****         if (unlikely(range_start_atvector > range_stop)) { // we should not be here; just handle wi
 3308              		.loc 1 474 9 view .LVU1052
 3309              	# sieve_extend.c:474:         range_start_atvector += VECTOR_SIZE; // find next vector
 474:sieve_extend.c ****         if (unlikely(range_start_atvector > range_stop)) { // we should not be here; just handle wi
 3310              		.loc 1 474 30 is_stmt 0 view .LVU1053
 3311 1549 4981C300 		add	r11, 256	# range_start_atvector,
 3311      010000
 3312              	.LVL118:
 475:sieve_extend.c ****             debug2 printf("..Marking and returning without vector\n");
 3313              		.loc 1 475 9 is_stmt 1 view .LVU1054
 3314              	# sieve_extend.c:475:         if (unlikely(range_start_atvector > range_stop)) { // we should not b
 475:sieve_extend.c ****             debug2 printf("..Marking and returning without vector\n");
 3315              		.loc 1 475 12 is_stmt 0 view .LVU1055
 3316 1550 4939CB   		cmp	r11, rcx	# range_start_atvector, range_stop
 3317 1553 0F87B408 		ja	.L268	#,
 3317      0000
 492:sieve_extend.c ****             register counter_t index_word = wordindex(range_start);
 3318              		.loc 1 492 16 is_stmt 1 view .LVU1056
 3319              	# sieve_extend.c:492:         for (; range_start < range_start_atvector;) {
 492:sieve_extend.c ****             register counter_t index_word = wordindex(range_start);
 3320              		.loc 1 492 9 is_stmt 0 view .LVU1057
 3321 1559 4C39DE   		cmp	rsi, r11	# range_start, range_start_atvector
 3322              	.LBB332:
 3323              	# sieve_extend.c:496:                 mask |= markmask(range_start);
 496:sieve_extend.c ****                 range_start += step;
 3324              		.loc 1 496 25 view .LVU1058
 3325 155c 41B90100 		mov	r9d, 1	# tmp192,
 3325      0000
 3326              	.LBE332:
 3327              	# sieve_extend.c:492:         for (; range_start < range_start_atvector;) {
 492:sieve_extend.c ****             register counter_t index_word = wordindex(range_start);
 3328              		.loc 1 492 9 view .LVU1059
 3329 1562 0F83E500 		jnb	.L267	#,
 3329      0000
 3330              	.LVL119:
 3331 1568 0F1F8400 		.p2align 4
 3331      00000000 
 3332              		.p2align 3
 3333              	.L269:
 3334              	.LBB333:
 493:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 3335              		.loc 1 493 13 is_stmt 1 view .LVU1060
 3336              	# sieve_extend.c:493:             register counter_t index_word = wordindex(range_start);
 493:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 3337              		.loc 1 493 32 is_stmt 0 view .LVU1061
 3338 1570 4989F0   		mov	r8, rsi	# index_word, range_start
 3339              	# sieve_extend.c:494:             register bitword_t mask = SAFE_ZERO;
 494:sieve_extend.c ****             do {
 3340              		.loc 1 494 32 view .LVU1062
 3341 1573 31DB     		xor	ebx, ebx	# mask
 3342              	# sieve_extend.c:493:             register counter_t index_word = wordindex(range_start);
 493:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 3343              		.loc 1 493 32 view .LVU1063
 3344 1575 49C1E806 		shr	r8, 6	# index_word,
 3345              	.LVL120:
 494:sieve_extend.c ****             do {
GAS LISTING /tmp/ccr2dACi.s 			page 101


 3346              		.loc 1 494 13 is_stmt 1 view .LVU1064
 3347              	.L272:
 495:sieve_extend.c ****                 mask |= markmask(range_start);
 3348              		.loc 1 495 13 discriminator 1 view .LVU1065
 496:sieve_extend.c ****                 range_start += step;
 3349              		.loc 1 496 17 discriminator 1 view .LVU1066
 3350              	# sieve_extend.c:496:                 mask |= markmask(range_start);
 496:sieve_extend.c ****                 range_start += step;
 3351              		.loc 1 496 25 is_stmt 0 discriminator 1 view .LVU1067
 3352 1579 C442C9F7 		shlx	r10, r9, rsi	# tmp191, tmp192, range_start
 3352      D1
 3353              	# sieve_extend.c:497:                 range_start += step;
 497:sieve_extend.c ****             } while (wordindex(range_start) == index_word);
 3354              		.loc 1 497 29 discriminator 1 view .LVU1068
 3355 157e 4801D6   		add	rsi, rdx	# range_start, step
 3356              	# sieve_extend.c:498:             } while (wordindex(range_start) == index_word);
 498:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3357              		.loc 1 498 22 discriminator 1 view .LVU1069
 3358 1581 4989F4   		mov	r12, rsi	# tmp193, range_start
 3359              	# sieve_extend.c:496:                 mask |= markmask(range_start);
 496:sieve_extend.c ****                 range_start += step;
 3360              		.loc 1 496 22 discriminator 1 view .LVU1070
 3361 1584 4C09D3   		or	rbx, r10	# mask, tmp191
 3362              	.LVL121:
 497:sieve_extend.c ****             } while (wordindex(range_start) == index_word);
 3363              		.loc 1 497 17 is_stmt 1 discriminator 1 view .LVU1071
 498:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3364              		.loc 1 498 21 discriminator 1 view .LVU1072
 3365              	# sieve_extend.c:498:             } while (wordindex(range_start) == index_word);
 498:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3366              		.loc 1 498 22 is_stmt 0 discriminator 1 view .LVU1073
 3367 1587 49C1EC06 		shr	r12, 6	# tmp193,
 3368              	# sieve_extend.c:498:             } while (wordindex(range_start) == index_word);
 498:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3369              		.loc 1 498 13 discriminator 1 view .LVU1074
 3370 158b 4D39C4   		cmp	r12, r8	# tmp193, index_word
 3371 158e 0F85AC00 		jne	.L422	#,
 3371      0000
 495:sieve_extend.c ****                 mask |= markmask(range_start);
 3372              		.loc 1 495 13 is_stmt 1 view .LVU1075
 496:sieve_extend.c ****                 range_start += step;
 3373              		.loc 1 496 17 view .LVU1076
 3374              	# sieve_extend.c:496:                 mask |= markmask(range_start);
 496:sieve_extend.c ****                 range_start += step;
 3375              		.loc 1 496 25 is_stmt 0 view .LVU1077
 3376 1594 C442C9F7 		shlx	r13, r9, rsi	# tmp389, tmp192, range_start
 3376      E9
 3377              	# sieve_extend.c:497:                 range_start += step;
 497:sieve_extend.c ****             } while (wordindex(range_start) == index_word);
 3378              		.loc 1 497 29 view .LVU1078
 3379 1599 4801D6   		add	rsi, rdx	# range_start, step
 3380              	# sieve_extend.c:498:             } while (wordindex(range_start) == index_word);
 498:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3381              		.loc 1 498 22 view .LVU1079
 3382 159c 4989F6   		mov	r14, rsi	# tmp390, range_start
 3383              	# sieve_extend.c:496:                 mask |= markmask(range_start);
 496:sieve_extend.c ****                 range_start += step;
GAS LISTING /tmp/ccr2dACi.s 			page 102


 3384              		.loc 1 496 22 view .LVU1080
 3385 159f 4C09EB   		or	rbx, r13	# mask, tmp389
 3386              	.LVL122:
 497:sieve_extend.c ****             } while (wordindex(range_start) == index_word);
 3387              		.loc 1 497 17 is_stmt 1 view .LVU1081
 498:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3388              		.loc 1 498 21 view .LVU1082
 3389              	# sieve_extend.c:498:             } while (wordindex(range_start) == index_word);
 498:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3390              		.loc 1 498 22 is_stmt 0 view .LVU1083
 3391 15a2 49C1EE06 		shr	r14, 6	# tmp390,
 3392              	# sieve_extend.c:498:             } while (wordindex(range_start) == index_word);
 498:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3393              		.loc 1 498 13 view .LVU1084
 3394 15a6 4D39C6   		cmp	r14, r8	# tmp390, index_word
 3395 15a9 0F859100 		jne	.L422	#,
 3395      0000
 495:sieve_extend.c ****                 mask |= markmask(range_start);
 3396              		.loc 1 495 13 is_stmt 1 view .LVU1085
 496:sieve_extend.c ****                 range_start += step;
 3397              		.loc 1 496 17 view .LVU1086
 3398              	# sieve_extend.c:496:                 mask |= markmask(range_start);
 496:sieve_extend.c ****                 range_start += step;
 3399              		.loc 1 496 25 is_stmt 0 view .LVU1087
 3400 15af C442C9F7 		shlx	r15, r9, rsi	# tmp391, tmp192, range_start
 3400      F9
 3401              	# sieve_extend.c:497:                 range_start += step;
 497:sieve_extend.c ****             } while (wordindex(range_start) == index_word);
 3402              		.loc 1 497 29 view .LVU1088
 3403 15b4 4801D6   		add	rsi, rdx	# range_start, step
 3404              	# sieve_extend.c:498:             } while (wordindex(range_start) == index_word);
 498:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3405              		.loc 1 498 22 view .LVU1089
 3406 15b7 4889F0   		mov	rax, rsi	# tmp392, range_start
 3407              	# sieve_extend.c:496:                 mask |= markmask(range_start);
 496:sieve_extend.c ****                 range_start += step;
 3408              		.loc 1 496 22 view .LVU1090
 3409 15ba 4C09FB   		or	rbx, r15	# mask, tmp391
 3410              	.LVL123:
 497:sieve_extend.c ****             } while (wordindex(range_start) == index_word);
 3411              		.loc 1 497 17 is_stmt 1 view .LVU1091
 498:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3412              		.loc 1 498 21 view .LVU1092
 3413              	# sieve_extend.c:498:             } while (wordindex(range_start) == index_word);
 498:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3414              		.loc 1 498 22 is_stmt 0 view .LVU1093
 3415 15bd 48C1E806 		shr	rax, 6	# tmp392,
 3416              	# sieve_extend.c:498:             } while (wordindex(range_start) == index_word);
 498:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3417              		.loc 1 498 13 view .LVU1094
 3418 15c1 4C39C0   		cmp	rax, r8	# tmp392, index_word
 3419 15c4 757A     		jne	.L422	#,
 495:sieve_extend.c ****                 mask |= markmask(range_start);
 3420              		.loc 1 495 13 is_stmt 1 view .LVU1095
 496:sieve_extend.c ****                 range_start += step;
 3421              		.loc 1 496 17 view .LVU1096
 3422              	# sieve_extend.c:496:                 mask |= markmask(range_start);
GAS LISTING /tmp/ccr2dACi.s 			page 103


 496:sieve_extend.c ****                 range_start += step;
 3423              		.loc 1 496 25 is_stmt 0 view .LVU1097
 3424 15c6 C442C9F7 		shlx	r10, r9, rsi	# tmp393, tmp192, range_start
 3424      D1
 3425              	# sieve_extend.c:497:                 range_start += step;
 497:sieve_extend.c ****             } while (wordindex(range_start) == index_word);
 3426              		.loc 1 497 29 view .LVU1098
 3427 15cb 4801D6   		add	rsi, rdx	# range_start, step
 3428              	# sieve_extend.c:498:             } while (wordindex(range_start) == index_word);
 498:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3429              		.loc 1 498 22 view .LVU1099
 3430 15ce 4989F4   		mov	r12, rsi	# tmp394, range_start
 3431              	# sieve_extend.c:496:                 mask |= markmask(range_start);
 496:sieve_extend.c ****                 range_start += step;
 3432              		.loc 1 496 22 view .LVU1100
 3433 15d1 4C09D3   		or	rbx, r10	# mask, tmp393
 3434              	.LVL124:
 497:sieve_extend.c ****             } while (wordindex(range_start) == index_word);
 3435              		.loc 1 497 17 is_stmt 1 view .LVU1101
 498:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3436              		.loc 1 498 21 view .LVU1102
 3437              	# sieve_extend.c:498:             } while (wordindex(range_start) == index_word);
 498:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3438              		.loc 1 498 22 is_stmt 0 view .LVU1103
 3439 15d4 49C1EC06 		shr	r12, 6	# tmp394,
 3440              	# sieve_extend.c:498:             } while (wordindex(range_start) == index_word);
 498:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3441              		.loc 1 498 13 view .LVU1104
 3442 15d8 4D39C4   		cmp	r12, r8	# tmp394, index_word
 3443 15db 7563     		jne	.L422	#,
 495:sieve_extend.c ****                 mask |= markmask(range_start);
 3444              		.loc 1 495 13 is_stmt 1 view .LVU1105
 496:sieve_extend.c ****                 range_start += step;
 3445              		.loc 1 496 17 view .LVU1106
 3446              	# sieve_extend.c:496:                 mask |= markmask(range_start);
 496:sieve_extend.c ****                 range_start += step;
 3447              		.loc 1 496 25 is_stmt 0 view .LVU1107
 3448 15dd C442C9F7 		shlx	r13, r9, rsi	# tmp395, tmp192, range_start
 3448      E9
 3449              	# sieve_extend.c:497:                 range_start += step;
 497:sieve_extend.c ****             } while (wordindex(range_start) == index_word);
 3450              		.loc 1 497 29 view .LVU1108
 3451 15e2 4801D6   		add	rsi, rdx	# range_start, step
 3452              	# sieve_extend.c:498:             } while (wordindex(range_start) == index_word);
 498:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3453              		.loc 1 498 22 view .LVU1109
 3454 15e5 4989F6   		mov	r14, rsi	# tmp396, range_start
 3455              	# sieve_extend.c:496:                 mask |= markmask(range_start);
 496:sieve_extend.c ****                 range_start += step;
 3456              		.loc 1 496 22 view .LVU1110
 3457 15e8 4C09EB   		or	rbx, r13	# mask, tmp395
 3458              	.LVL125:
 497:sieve_extend.c ****             } while (wordindex(range_start) == index_word);
 3459              		.loc 1 497 17 is_stmt 1 view .LVU1111
 498:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3460              		.loc 1 498 21 view .LVU1112
 3461              	# sieve_extend.c:498:             } while (wordindex(range_start) == index_word);
GAS LISTING /tmp/ccr2dACi.s 			page 104


 498:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3462              		.loc 1 498 22 is_stmt 0 view .LVU1113
 3463 15eb 49C1EE06 		shr	r14, 6	# tmp396,
 3464              	# sieve_extend.c:498:             } while (wordindex(range_start) == index_word);
 498:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3465              		.loc 1 498 13 view .LVU1114
 3466 15ef 4D39C6   		cmp	r14, r8	# tmp396, index_word
 3467 15f2 754C     		jne	.L422	#,
 495:sieve_extend.c ****                 mask |= markmask(range_start);
 3468              		.loc 1 495 13 is_stmt 1 view .LVU1115
 496:sieve_extend.c ****                 range_start += step;
 3469              		.loc 1 496 17 view .LVU1116
 3470              	# sieve_extend.c:496:                 mask |= markmask(range_start);
 496:sieve_extend.c ****                 range_start += step;
 3471              		.loc 1 496 25 is_stmt 0 view .LVU1117
 3472 15f4 C442C9F7 		shlx	r15, r9, rsi	# tmp397, tmp192, range_start
 3472      F9
 3473              	# sieve_extend.c:497:                 range_start += step;
 497:sieve_extend.c ****             } while (wordindex(range_start) == index_word);
 3474              		.loc 1 497 29 view .LVU1118
 3475 15f9 4801D6   		add	rsi, rdx	# range_start, step
 3476              	# sieve_extend.c:498:             } while (wordindex(range_start) == index_word);
 498:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3477              		.loc 1 498 22 view .LVU1119
 3478 15fc 4889F0   		mov	rax, rsi	# tmp398, range_start
 3479              	# sieve_extend.c:496:                 mask |= markmask(range_start);
 496:sieve_extend.c ****                 range_start += step;
 3480              		.loc 1 496 22 view .LVU1120
 3481 15ff 4C09FB   		or	rbx, r15	# mask, tmp397
 3482              	.LVL126:
 497:sieve_extend.c ****             } while (wordindex(range_start) == index_word);
 3483              		.loc 1 497 17 is_stmt 1 view .LVU1121
 498:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3484              		.loc 1 498 21 view .LVU1122
 3485              	# sieve_extend.c:498:             } while (wordindex(range_start) == index_word);
 498:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3486              		.loc 1 498 22 is_stmt 0 view .LVU1123
 3487 1602 48C1E806 		shr	rax, 6	# tmp398,
 3488              	# sieve_extend.c:498:             } while (wordindex(range_start) == index_word);
 498:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3489              		.loc 1 498 13 view .LVU1124
 3490 1606 4C39C0   		cmp	rax, r8	# tmp398, index_word
 3491 1609 7535     		jne	.L422	#,
 495:sieve_extend.c ****                 mask |= markmask(range_start);
 3492              		.loc 1 495 13 is_stmt 1 view .LVU1125
 496:sieve_extend.c ****                 range_start += step;
 3493              		.loc 1 496 17 view .LVU1126
 3494              	# sieve_extend.c:496:                 mask |= markmask(range_start);
 496:sieve_extend.c ****                 range_start += step;
 3495              		.loc 1 496 25 is_stmt 0 view .LVU1127
 3496 160b C442C9F7 		shlx	r10, r9, rsi	# tmp399, tmp192, range_start
 3496      D1
 3497              	# sieve_extend.c:497:                 range_start += step;
 497:sieve_extend.c ****             } while (wordindex(range_start) == index_word);
 3498              		.loc 1 497 29 view .LVU1128
 3499 1610 4801D6   		add	rsi, rdx	# range_start, step
 3500              	# sieve_extend.c:498:             } while (wordindex(range_start) == index_word);
GAS LISTING /tmp/ccr2dACi.s 			page 105


 498:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3501              		.loc 1 498 22 view .LVU1129
 3502 1613 4989F4   		mov	r12, rsi	# tmp400, range_start
 3503              	# sieve_extend.c:496:                 mask |= markmask(range_start);
 496:sieve_extend.c ****                 range_start += step;
 3504              		.loc 1 496 22 view .LVU1130
 3505 1616 4C09D3   		or	rbx, r10	# mask, tmp399
 3506              	.LVL127:
 497:sieve_extend.c ****             } while (wordindex(range_start) == index_word);
 3507              		.loc 1 497 17 is_stmt 1 view .LVU1131
 498:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3508              		.loc 1 498 21 view .LVU1132
 3509              	# sieve_extend.c:498:             } while (wordindex(range_start) == index_word);
 498:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3510              		.loc 1 498 22 is_stmt 0 view .LVU1133
 3511 1619 49C1EC06 		shr	r12, 6	# tmp400,
 3512              	# sieve_extend.c:498:             } while (wordindex(range_start) == index_word);
 498:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3513              		.loc 1 498 13 view .LVU1134
 3514 161d 4D39C4   		cmp	r12, r8	# tmp400, index_word
 3515 1620 751E     		jne	.L422	#,
 495:sieve_extend.c ****                 mask |= markmask(range_start);
 3516              		.loc 1 495 13 is_stmt 1 view .LVU1135
 496:sieve_extend.c ****                 range_start += step;
 3517              		.loc 1 496 17 view .LVU1136
 3518              	# sieve_extend.c:496:                 mask |= markmask(range_start);
 496:sieve_extend.c ****                 range_start += step;
 3519              		.loc 1 496 25 is_stmt 0 view .LVU1137
 3520 1622 C442C9F7 		shlx	r13, r9, rsi	# tmp401, tmp192, range_start
 3520      E9
 3521              	# sieve_extend.c:497:                 range_start += step;
 497:sieve_extend.c ****             } while (wordindex(range_start) == index_word);
 3522              		.loc 1 497 29 view .LVU1138
 3523 1627 4801D6   		add	rsi, rdx	# range_start, step
 3524              	# sieve_extend.c:498:             } while (wordindex(range_start) == index_word);
 498:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3525              		.loc 1 498 22 view .LVU1139
 3526 162a 4989F6   		mov	r14, rsi	# tmp402, range_start
 3527              	# sieve_extend.c:496:                 mask |= markmask(range_start);
 496:sieve_extend.c ****                 range_start += step;
 3528              		.loc 1 496 22 view .LVU1140
 3529 162d 4C09EB   		or	rbx, r13	# mask, tmp401
 3530              	.LVL128:
 497:sieve_extend.c ****             } while (wordindex(range_start) == index_word);
 3531              		.loc 1 497 17 is_stmt 1 view .LVU1141
 498:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3532              		.loc 1 498 21 view .LVU1142
 3533              	# sieve_extend.c:498:             } while (wordindex(range_start) == index_word);
 498:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3534              		.loc 1 498 22 is_stmt 0 view .LVU1143
 3535 1630 49C1EE06 		shr	r14, 6	# tmp402,
 3536              	# sieve_extend.c:498:             } while (wordindex(range_start) == index_word);
 498:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3537              		.loc 1 498 13 view .LVU1144
 3538 1634 4D39C6   		cmp	r14, r8	# tmp402, index_word
 3539 1637 0F843CFF 		je	.L272	#,
 3539      FFFF
GAS LISTING /tmp/ccr2dACi.s 			page 106


 3540 163d 0F1F00   		.p2align 4
 3541              		.p2align 3
 3542              	.L422:
 499:sieve_extend.c ****         }
 3543              		.loc 1 499 13 is_stmt 1 view .LVU1145
 3544              	# sieve_extend.c:499:             bitarray_word[index_word] |= mask;
 499:sieve_extend.c ****         }
 3545              		.loc 1 499 39 is_stmt 0 view .LVU1146
 3546 1640 4A091CC7 		or	QWORD PTR [rdi+r8*8], rbx	# *_24, mask
 499:sieve_extend.c ****         }
 3547              		.loc 1 499 39 view .LVU1147
 3548              	.LBE333:
 492:sieve_extend.c ****             register counter_t index_word = wordindex(range_start);
 3549              		.loc 1 492 16 is_stmt 1 view .LVU1148
 3550              	# sieve_extend.c:492:         for (; range_start < range_start_atvector;) {
 492:sieve_extend.c ****             register counter_t index_word = wordindex(range_start);
 3551              		.loc 1 492 9 is_stmt 0 view .LVU1149
 3552 1644 4939F3   		cmp	r11, rsi	# range_start_atvector, range_start
 3553 1647 0F8723FF 		ja	.L269	#,
 3553      FFFF
 3554              	.LVL129:
 3555              	.L267:
 492:sieve_extend.c ****             register counter_t index_word = wordindex(range_start);
 3556              		.loc 1 492 9 view .LVU1150
 3557              	.LBE331:
 503:sieve_extend.c ****     
 3558              		.loc 1 503 5 is_stmt 1 view .LVU1151
 3559              	# sieve_extend.c:503:     const counter_t range_stop_unique =  min(range_start + VECTOR_SIZE_counte
 503:sieve_extend.c ****     
 3560              		.loc 1 503 42 is_stmt 0 view .LVU1152
 3561 164d 4989D2   		mov	r10, rdx	# tmp195, step
 3562 1650 49C1E208 		sal	r10, 8	# tmp195,
 3563 1654 4901F2   		add	r10, rsi	# tmp196, range_start
 3564              	# sieve_extend.c:503:     const counter_t range_stop_unique =  min(range_start + VECTOR_SIZE_counte
 503:sieve_extend.c ****     
 3565              		.loc 1 503 21 view .LVU1153
 3566 1657 4939CA   		cmp	r10, rcx	# tmp196, range_stop
 3567 165a 4C0F47D1 		cmova	r10, rcx	# tmp196,, range_stop_unique, range_stop
 3568              	.LVL130:
 510:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 3569              		.loc 1 510 5 is_stmt 1 view .LVU1154
 3570              	.LBB335:
 510:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 3571              		.loc 1 510 10 view .LVU1155
 510:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 3572              		.loc 1 510 41 view .LVU1156
 3573              	# sieve_extend.c:510:     for (counter_t index = range_start; index < range_stop_unique;) {
 510:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 3574              		.loc 1 510 5 is_stmt 0 view .LVU1157
 3575 165e 4C39D6   		cmp	rsi, r10	# range_start, range_stop_unique
 3576 1661 0F831404 		jnb	.L266	#,
 3576      0000
 3577              	.LBB336:
 3578              	.LBB337:
 3579              	.LBB338:
 3580              	# sieve_extend.c:425:    const counter_t range_stop_vector = vectorindex(range_stop);
 425:sieve_extend.c ****    register bitvector_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_vect
GAS LISTING /tmp/ccr2dACi.s 			page 107


 3581              		.loc 1 425 20 view .LVU1158
 3582 1667 4989CB   		mov	r11, rcx	# range_stop, range_stop
 3583              	.LVL131:
 3584              	# sieve_extend.c:427:    register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_aligne
 427:sieve_extend.c **** 
 3585              		.loc 1 427 114 view .LVU1159
 3586 166a 488D1C92 		lea	rbx, [rdx+rdx*4]	# tmp199,
 3587              	# sieve_extend.c:425:    const counter_t range_stop_vector = vectorindex(range_stop);
 425:sieve_extend.c ****    register bitvector_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_vect
 3588              		.loc 1 425 20 view .LVU1160
 3589 166e 49C1EB08 		shr	r11, 8	# range_stop,
 3590              	# sieve_extend.c:433:        index_ptr+=step;
 433:sieve_extend.c ****        *index_ptr |= mask;
 3591              		.loc 1 433 17 view .LVU1161
 3592 1672 4889D1   		mov	rcx, rdx	# _85, step
 3593              	.LVL132:
 3594              	# sieve_extend.c:427:    register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_aligne
 427:sieve_extend.c **** 
 3595              		.loc 1 427 139 view .LVU1162
 3596 1675 4D89D8   		mov	r8, r11	# tmp200, range_stop_vector
 3597              	# sieve_extend.c:444:    const register bitvector_t* __restrict range_stop_ptr = &bitarray[(range_s
 444:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 3598              		.loc 1 444 69 view .LVU1163
 3599 1678 4D89D9   		mov	r9, r11	# tmp201, range_stop_vector
 3600 167b 49C1E105 		sal	r9, 5	# tmp201,
 3601              	# sieve_extend.c:427:    register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_aligne
 427:sieve_extend.c **** 
 3602              		.loc 1 427 139 view .LVU1164
 3603 167f 4929D8   		sub	r8, rbx	# tmp200, tmp199
 3604              	# sieve_extend.c:427:    register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_aligne
 427:sieve_extend.c **** 
 3605              		.loc 1 427 89 view .LVU1165
 3606 1682 49C1E005 		sal	r8, 5	# tmp200,
 3607              	# sieve_extend.c:444:    const register bitvector_t* __restrict range_stop_ptr = &bitarray[(range_s
 444:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 3608              		.loc 1 444 43 view .LVU1166
 3609 1686 4901F9   		add	r9, rdi	# range_stop_ptr, bitarray_word
 3610              	# sieve_extend.c:433:        index_ptr+=step;
 433:sieve_extend.c ****        *index_ptr |= mask;
 3611              		.loc 1 433 17 view .LVU1167
 3612 1689 48C1E105 		sal	rcx, 5	# _85,
 3613 168d 4901F8   		add	r8, rdi	# tmp223, bitarray_word
 3614 1690 4883FA01 		cmp	rdx, 1	# step,
 3615 1694 0F851B04 		jne	.L426	#,
 3615      0000
 3616              	.LBE338:
 3617              	.LBE337:
 3618              	# sieve_extend.c:512:         register bitvector_t quadmask = { };
 512:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 3619              		.loc 1 512 30 view .LVU1168
 3620 169a C5E9EFD2 		vpxor	xmm2, xmm2, xmm2	# tmp224
 3621 169e 4983FB05 		cmp	r11, 5	# range_stop_vector,
 3622              	# sieve_extend.c:518:             quadmask[word] |= markmask(index);
 518:sieve_extend.c ****             index += step;
 3623              		.loc 1 518 31 view .LVU1169
 3624 16a2 41BB0100 		mov	r11d, 1	# tmp228,
 3624      0000
GAS LISTING /tmp/ccr2dACi.s 			page 108


 3625 16a8 4C0F46C7 		cmovbe	r8, rdi	# bitarray_word,, fast_loop_ptr
 3626              	.LVL133:
 3627 16ac 0F1F4000 		.p2align 4
 3628              		.p2align 3
 3629              	.L289:
 511:sieve_extend.c ****         register bitvector_t quadmask = { };
 3630              		.loc 1 511 9 is_stmt 1 view .LVU1170
 3631              	# sieve_extend.c:511:         const counter_t current_vector_start_word =  vectorindex(index) << (S
 511:sieve_extend.c ****         register bitvector_t quadmask = { };
 3632              		.loc 1 511 54 is_stmt 0 view .LVU1171
 3633 16b0 4889F0   		mov	rax, rsi	# _196, range_start
 3634              	# sieve_extend.c:513:         register counter_t word = wordindex(index) - current_vector_start_wor
 513:sieve_extend.c ****         
 3635              		.loc 1 513 35 view .LVU1172
 3636 16b3 4989F5   		mov	r13, rsi	# tmp225, range_start
 3637              	# sieve_extend.c:511:         const counter_t current_vector_start_word =  vectorindex(index) << (S
 511:sieve_extend.c ****         register bitvector_t quadmask = { };
 3638              		.loc 1 511 54 view .LVU1173
 3639 16b6 48C1E808 		shr	rax, 8	# _196,
 3640              	# sieve_extend.c:513:         register counter_t word = wordindex(index) - current_vector_start_wor
 513:sieve_extend.c ****         
 3641              		.loc 1 513 35 view .LVU1174
 3642 16ba 49C1ED06 		shr	r13, 6	# tmp225,
 3643              	# sieve_extend.c:511:         const counter_t current_vector_start_word =  vectorindex(index) << (S
 511:sieve_extend.c ****         register bitvector_t quadmask = { };
 3644              		.loc 1 511 25 view .LVU1175
 3645 16be 488D1485 		lea	rdx, 0[0+rax*4]	# current_vector_start_word,
 3645      00000000 
 3646              	.LVL134:
 512:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 3647              		.loc 1 512 9 is_stmt 1 view .LVU1176
 3648              	# sieve_extend.c:512:         register bitvector_t quadmask = { };
 512:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 3649              		.loc 1 512 30 is_stmt 0 view .LVU1177
 3650 16c6 C5FD7F14 		vmovdqa	YMMWORD PTR [rsp], ymm2	# quadmask, tmp224
 3650      24
 513:sieve_extend.c ****         
 3651              		.loc 1 513 9 is_stmt 1 view .LVU1178
 3652              	# sieve_extend.c:513:         register counter_t word = wordindex(index) - current_vector_start_wor
 513:sieve_extend.c ****         
 3653              		.loc 1 513 28 is_stmt 0 view .LVU1179
 3654 16cb 4929D5   		sub	r13, rdx	# word, current_vector_start_word
 3655              	.LVL135:
 3656              	.L282:
 517:sieve_extend.c ****             quadmask[word] |= markmask(index);
 3657              		.loc 1 517 9 is_stmt 1 view .LVU1180
 518:sieve_extend.c ****             index += step;
 3658              		.loc 1 518 13 view .LVU1181
 3659              	# sieve_extend.c:518:             quadmask[word] |= markmask(index);
 518:sieve_extend.c ****             index += step;
 3660              		.loc 1 518 31 is_stmt 0 view .LVU1182
 3661 16ce C4C2C9F7 		shlx	rbx, r11, rsi	# tmp227, tmp228, range_start
 3661      DB
 3662              	# sieve_extend.c:518:             quadmask[word] |= markmask(index);
 518:sieve_extend.c ****             index += step;
 3663              		.loc 1 518 28 view .LVU1183
 3664 16d3 4A091CEC 		or	QWORD PTR [rsp+r13*8], rbx	# quadmask, tmp227
GAS LISTING /tmp/ccr2dACi.s 			page 109


 519:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3665              		.loc 1 519 13 is_stmt 1 view .LVU1184
 3666              	# sieve_extend.c:519:             index += step;
 519:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3667              		.loc 1 519 19 is_stmt 0 view .LVU1185
 3668 16d7 4C8D6E01 		lea	r13, 1[rsi]	# tmp246,
 3669              	.LVL136:
 3670              	# sieve_extend.c:520:             word = wordindex(index) - current_vector_start_word;
 520:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3671              		.loc 1 520 20 view .LVU1186
 3672 16db 4C89E9   		mov	rcx, r13	# tmp229, range_start
 3673              	# sieve_extend.c:519:             index += step;
 519:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3674              		.loc 1 519 19 view .LVU1187
 3675 16de 4C89EE   		mov	rsi, r13	# range_start, tmp246
 520:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3676              		.loc 1 520 13 is_stmt 1 view .LVU1188
 3677              	# sieve_extend.c:520:             word = wordindex(index) - current_vector_start_word;
 520:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3678              		.loc 1 520 20 is_stmt 0 view .LVU1189
 3679 16e1 48C1E906 		shr	rcx, 6	# tmp229,
 3680              	# sieve_extend.c:520:             word = wordindex(index) - current_vector_start_word;
 520:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3681              		.loc 1 520 18 view .LVU1190
 3682 16e5 4829D1   		sub	rcx, rdx	# word, current_vector_start_word
 521:sieve_extend.c ****         
 3683              		.loc 1 521 17 is_stmt 1 view .LVU1191
 3684              	# sieve_extend.c:521:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 521:sieve_extend.c ****         
 3685              		.loc 1 521 9 is_stmt 0 view .LVU1192
 3686 16e8 4883F903 		cmp	rcx, 3	# word,
 3687 16ec 0F87DE00 		ja	.L420	#,
 3687      0000
 517:sieve_extend.c ****             quadmask[word] |= markmask(index);
 3688              		.loc 1 517 9 is_stmt 1 view .LVU1193
 518:sieve_extend.c ****             index += step;
 3689              		.loc 1 518 13 view .LVU1194
 3690              	# sieve_extend.c:519:             index += step;
 519:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3691              		.loc 1 519 19 is_stmt 0 view .LVU1195
 3692 16f2 4883C601 		add	rsi, 1	# range_start,
 3693              	# sieve_extend.c:518:             quadmask[word] |= markmask(index);
 518:sieve_extend.c ****             index += step;
 3694              		.loc 1 518 31 view .LVU1196
 3695 16f6 C44291F7 		shlx	r12, r11, r13	# tmp325, tmp228, range_start
 3695      E3
 3696              	# sieve_extend.c:520:             word = wordindex(index) - current_vector_start_word;
 520:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3697              		.loc 1 520 20 view .LVU1197
 3698 16fb 4989F7   		mov	r15, rsi	# tmp326, range_start
 3699              	# sieve_extend.c:518:             quadmask[word] |= markmask(index);
 518:sieve_extend.c ****             index += step;
 3700              		.loc 1 518 28 view .LVU1198
 3701 16fe 4C0924CC 		or	QWORD PTR [rsp+rcx*8], r12	# quadmask, tmp325
 519:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3702              		.loc 1 519 13 is_stmt 1 view .LVU1199
 3703              	.LVL137:
GAS LISTING /tmp/ccr2dACi.s 			page 110


 520:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3704              		.loc 1 520 13 view .LVU1200
 3705              	# sieve_extend.c:520:             word = wordindex(index) - current_vector_start_word;
 520:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3706              		.loc 1 520 20 is_stmt 0 view .LVU1201
 3707 1702 49C1EF06 		shr	r15, 6	# tmp326,
 3708              	# sieve_extend.c:520:             word = wordindex(index) - current_vector_start_word;
 520:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3709              		.loc 1 520 18 view .LVU1202
 3710 1706 4929D7   		sub	r15, rdx	# word, current_vector_start_word
 521:sieve_extend.c ****         
 3711              		.loc 1 521 17 is_stmt 1 view .LVU1203
 3712              	# sieve_extend.c:521:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 521:sieve_extend.c ****         
 3713              		.loc 1 521 9 is_stmt 0 view .LVU1204
 3714 1709 4983FF03 		cmp	r15, 3	# word,
 3715 170d 0F87BD00 		ja	.L420	#,
 3715      0000
 517:sieve_extend.c ****             quadmask[word] |= markmask(index);
 3716              		.loc 1 517 9 is_stmt 1 view .LVU1205
 518:sieve_extend.c ****             index += step;
 3717              		.loc 1 518 13 view .LVU1206
 3718              	# sieve_extend.c:518:             quadmask[word] |= markmask(index);
 518:sieve_extend.c ****             index += step;
 3719              		.loc 1 518 31 is_stmt 0 view .LVU1207
 3720 1713 C4C2C9F7 		shlx	rsi, r11, rsi	# tmp328, tmp228, range_start
 3720      F3
 3721              	.LVL138:
 3722              	# sieve_extend.c:518:             quadmask[word] |= markmask(index);
 518:sieve_extend.c ****             index += step;
 3723              		.loc 1 518 28 view .LVU1208
 3724 1718 4A0934FC 		or	QWORD PTR [rsp+r15*8], rsi	# quadmask, tmp328
 519:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3725              		.loc 1 519 13 is_stmt 1 view .LVU1209
 3726              	.LVL139:
 3727              	# sieve_extend.c:519:             index += step;
 519:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3728              		.loc 1 519 19 is_stmt 0 view .LVU1210
 3729 171c 498D7502 		lea	rsi, 2[r13]	# range_start,
 3730              	.LVL140:
 520:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3731              		.loc 1 520 13 is_stmt 1 view .LVU1211
 3732              	# sieve_extend.c:520:             word = wordindex(index) - current_vector_start_word;
 520:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3733              		.loc 1 520 20 is_stmt 0 view .LVU1212
 3734 1720 4989F6   		mov	r14, rsi	# tmp329, range_start
 3735 1723 49C1EE06 		shr	r14, 6	# tmp329,
 3736              	# sieve_extend.c:520:             word = wordindex(index) - current_vector_start_word;
 520:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3737              		.loc 1 520 18 view .LVU1213
 3738 1727 4929D6   		sub	r14, rdx	# word, current_vector_start_word
 521:sieve_extend.c ****         
 3739              		.loc 1 521 17 is_stmt 1 view .LVU1214
 3740              	# sieve_extend.c:521:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 521:sieve_extend.c ****         
 3741              		.loc 1 521 9 is_stmt 0 view .LVU1215
 3742 172a 4983FE03 		cmp	r14, 3	# word,
GAS LISTING /tmp/ccr2dACi.s 			page 111


 3743 172e 0F879C00 		ja	.L420	#,
 3743      0000
 517:sieve_extend.c ****             quadmask[word] |= markmask(index);
 3744              		.loc 1 517 9 is_stmt 1 view .LVU1216
 518:sieve_extend.c ****             index += step;
 3745              		.loc 1 518 13 view .LVU1217
 3746              	# sieve_extend.c:518:             quadmask[word] |= markmask(index);
 518:sieve_extend.c ****             index += step;
 3747              		.loc 1 518 31 is_stmt 0 view .LVU1218
 3748 1734 C4C2C9F7 		shlx	rbx, r11, rsi	# tmp331, tmp228, range_start
 3748      DB
 3749              	# sieve_extend.c:519:             index += step;
 519:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3750              		.loc 1 519 19 view .LVU1219
 3751 1739 498D7503 		lea	rsi, 3[r13]	# range_start,
 3752              	.LVL141:
 3753              	# sieve_extend.c:520:             word = wordindex(index) - current_vector_start_word;
 520:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3754              		.loc 1 520 20 view .LVU1220
 3755 173d 4889F1   		mov	rcx, rsi	# tmp332, range_start
 3756              	# sieve_extend.c:518:             quadmask[word] |= markmask(index);
 518:sieve_extend.c ****             index += step;
 3757              		.loc 1 518 28 view .LVU1221
 3758 1740 4A091CF4 		or	QWORD PTR [rsp+r14*8], rbx	# quadmask, tmp331
 519:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3759              		.loc 1 519 13 is_stmt 1 view .LVU1222
 3760              	.LVL142:
 520:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3761              		.loc 1 520 13 view .LVU1223
 3762              	# sieve_extend.c:520:             word = wordindex(index) - current_vector_start_word;
 520:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3763              		.loc 1 520 20 is_stmt 0 view .LVU1224
 3764 1744 48C1E906 		shr	rcx, 6	# tmp332,
 3765              	.LVL143:
 3766              	# sieve_extend.c:520:             word = wordindex(index) - current_vector_start_word;
 520:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3767              		.loc 1 520 18 view .LVU1225
 3768 1748 4829D1   		sub	rcx, rdx	# word, current_vector_start_word
 521:sieve_extend.c ****         
 3769              		.loc 1 521 17 is_stmt 1 view .LVU1226
 3770              	# sieve_extend.c:521:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 521:sieve_extend.c ****         
 3771              		.loc 1 521 9 is_stmt 0 view .LVU1227
 3772 174b 4883F903 		cmp	rcx, 3	# word,
 3773 174f 777F     		ja	.L420	#,
 517:sieve_extend.c ****             quadmask[word] |= markmask(index);
 3774              		.loc 1 517 9 is_stmt 1 view .LVU1228
 518:sieve_extend.c ****             index += step;
 3775              		.loc 1 518 13 view .LVU1229
 3776              	# sieve_extend.c:518:             quadmask[word] |= markmask(index);
 518:sieve_extend.c ****             index += step;
 3777              		.loc 1 518 31 is_stmt 0 view .LVU1230
 3778 1751 C442C9F7 		shlx	r12, r11, rsi	# tmp334, tmp228, range_start
 3778      E3
 3779              	# sieve_extend.c:519:             index += step;
 519:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3780              		.loc 1 519 19 view .LVU1231
GAS LISTING /tmp/ccr2dACi.s 			page 112


 3781 1756 498D7504 		lea	rsi, 4[r13]	# range_start,
 3782              	.LVL144:
 3783              	# sieve_extend.c:520:             word = wordindex(index) - current_vector_start_word;
 520:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3784              		.loc 1 520 20 view .LVU1232
 3785 175a 4989F7   		mov	r15, rsi	# tmp335, range_start
 3786              	# sieve_extend.c:518:             quadmask[word] |= markmask(index);
 518:sieve_extend.c ****             index += step;
 3787              		.loc 1 518 28 view .LVU1233
 3788 175d 4C0924CC 		or	QWORD PTR [rsp+rcx*8], r12	# quadmask, tmp334
 519:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3789              		.loc 1 519 13 is_stmt 1 view .LVU1234
 3790              	.LVL145:
 520:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3791              		.loc 1 520 13 view .LVU1235
 3792              	# sieve_extend.c:520:             word = wordindex(index) - current_vector_start_word;
 520:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3793              		.loc 1 520 20 is_stmt 0 view .LVU1236
 3794 1761 49C1EF06 		shr	r15, 6	# tmp335,
 3795              	# sieve_extend.c:520:             word = wordindex(index) - current_vector_start_word;
 520:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3796              		.loc 1 520 18 view .LVU1237
 3797 1765 4929D7   		sub	r15, rdx	# word, current_vector_start_word
 521:sieve_extend.c ****         
 3798              		.loc 1 521 17 is_stmt 1 view .LVU1238
 3799              	# sieve_extend.c:521:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 521:sieve_extend.c ****         
 3800              		.loc 1 521 9 is_stmt 0 view .LVU1239
 3801 1768 4983FF03 		cmp	r15, 3	# word,
 3802 176c 7762     		ja	.L420	#,
 517:sieve_extend.c ****             quadmask[word] |= markmask(index);
 3803              		.loc 1 517 9 is_stmt 1 view .LVU1240
 518:sieve_extend.c ****             index += step;
 3804              		.loc 1 518 13 view .LVU1241
 3805              	# sieve_extend.c:518:             quadmask[word] |= markmask(index);
 518:sieve_extend.c ****             index += step;
 3806              		.loc 1 518 31 is_stmt 0 view .LVU1242
 3807 176e C4C2C9F7 		shlx	rsi, r11, rsi	# tmp337, tmp228, range_start
 3807      F3
 3808              	.LVL146:
 3809              	# sieve_extend.c:518:             quadmask[word] |= markmask(index);
 518:sieve_extend.c ****             index += step;
 3810              		.loc 1 518 28 view .LVU1243
 3811 1773 4A0934FC 		or	QWORD PTR [rsp+r15*8], rsi	# quadmask, tmp337
 519:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3812              		.loc 1 519 13 is_stmt 1 view .LVU1244
 3813              	.LVL147:
 3814              	# sieve_extend.c:519:             index += step;
 519:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3815              		.loc 1 519 19 is_stmt 0 view .LVU1245
 3816 1777 498D7505 		lea	rsi, 5[r13]	# range_start,
 3817              	.LVL148:
 520:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3818              		.loc 1 520 13 is_stmt 1 view .LVU1246
 3819              	# sieve_extend.c:520:             word = wordindex(index) - current_vector_start_word;
 520:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3820              		.loc 1 520 20 is_stmt 0 view .LVU1247
GAS LISTING /tmp/ccr2dACi.s 			page 113


 3821 177b 4989F6   		mov	r14, rsi	# tmp338, range_start
 3822 177e 49C1EE06 		shr	r14, 6	# tmp338,
 3823              	# sieve_extend.c:520:             word = wordindex(index) - current_vector_start_word;
 520:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3824              		.loc 1 520 18 view .LVU1248
 3825 1782 4929D6   		sub	r14, rdx	# word, current_vector_start_word
 521:sieve_extend.c ****         
 3826              		.loc 1 521 17 is_stmt 1 view .LVU1249
 3827              	# sieve_extend.c:521:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 521:sieve_extend.c ****         
 3828              		.loc 1 521 9 is_stmt 0 view .LVU1250
 3829 1785 4983FE03 		cmp	r14, 3	# word,
 3830 1789 7745     		ja	.L420	#,
 517:sieve_extend.c ****             quadmask[word] |= markmask(index);
 3831              		.loc 1 517 9 is_stmt 1 view .LVU1251
 518:sieve_extend.c ****             index += step;
 3832              		.loc 1 518 13 view .LVU1252
 3833              	# sieve_extend.c:518:             quadmask[word] |= markmask(index);
 518:sieve_extend.c ****             index += step;
 3834              		.loc 1 518 31 is_stmt 0 view .LVU1253
 3835 178b C4C2C9F7 		shlx	rbx, r11, rsi	# tmp340, tmp228, range_start
 3835      DB
 3836              	# sieve_extend.c:519:             index += step;
 519:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3837              		.loc 1 519 19 view .LVU1254
 3838 1790 498D7506 		lea	rsi, 6[r13]	# range_start,
 3839              	.LVL149:
 3840              	# sieve_extend.c:520:             word = wordindex(index) - current_vector_start_word;
 520:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3841              		.loc 1 520 20 view .LVU1255
 3842 1794 4889F1   		mov	rcx, rsi	# tmp341, range_start
 3843              	# sieve_extend.c:518:             quadmask[word] |= markmask(index);
 518:sieve_extend.c ****             index += step;
 3844              		.loc 1 518 28 view .LVU1256
 3845 1797 4A091CF4 		or	QWORD PTR [rsp+r14*8], rbx	# quadmask, tmp340
 519:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3846              		.loc 1 519 13 is_stmt 1 view .LVU1257
 3847              	.LVL150:
 520:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3848              		.loc 1 520 13 view .LVU1258
 3849              	# sieve_extend.c:520:             word = wordindex(index) - current_vector_start_word;
 520:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3850              		.loc 1 520 20 is_stmt 0 view .LVU1259
 3851 179b 48C1E906 		shr	rcx, 6	# tmp341,
 3852              	.LVL151:
 3853              	# sieve_extend.c:520:             word = wordindex(index) - current_vector_start_word;
 520:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3854              		.loc 1 520 18 view .LVU1260
 3855 179f 4829D1   		sub	rcx, rdx	# word, current_vector_start_word
 521:sieve_extend.c ****         
 3856              		.loc 1 521 17 is_stmt 1 view .LVU1261
 3857              	# sieve_extend.c:521:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 521:sieve_extend.c ****         
 3858              		.loc 1 521 9 is_stmt 0 view .LVU1262
 3859 17a2 4883F903 		cmp	rcx, 3	# word,
 3860 17a6 7728     		ja	.L420	#,
 517:sieve_extend.c ****             quadmask[word] |= markmask(index);
GAS LISTING /tmp/ccr2dACi.s 			page 114


 3861              		.loc 1 517 9 is_stmt 1 view .LVU1263
 518:sieve_extend.c ****             index += step;
 3862              		.loc 1 518 13 view .LVU1264
 3863              	# sieve_extend.c:518:             quadmask[word] |= markmask(index);
 518:sieve_extend.c ****             index += step;
 3864              		.loc 1 518 31 is_stmt 0 view .LVU1265
 3865 17a8 C442C9F7 		shlx	r12, r11, rsi	# tmp343, tmp228, range_start
 3865      E3
 3866              	# sieve_extend.c:519:             index += step;
 519:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3867              		.loc 1 519 19 view .LVU1266
 3868 17ad 498D7507 		lea	rsi, 7[r13]	# range_start,
 3869              	.LVL152:
 3870              	# sieve_extend.c:520:             word = wordindex(index) - current_vector_start_word;
 520:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3871              		.loc 1 520 20 view .LVU1267
 3872 17b1 4989F5   		mov	r13, rsi	# tmp344, range_start
 3873              	.LVL153:
 3874              	# sieve_extend.c:518:             quadmask[word] |= markmask(index);
 518:sieve_extend.c ****             index += step;
 3875              		.loc 1 518 28 view .LVU1268
 3876 17b4 4C0924CC 		or	QWORD PTR [rsp+rcx*8], r12	# quadmask, tmp343
 519:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3877              		.loc 1 519 13 is_stmt 1 view .LVU1269
 3878              	.LVL154:
 520:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3879              		.loc 1 520 13 view .LVU1270
 3880              	# sieve_extend.c:520:             word = wordindex(index) - current_vector_start_word;
 520:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3881              		.loc 1 520 20 is_stmt 0 view .LVU1271
 3882 17b8 49C1ED06 		shr	r13, 6	# tmp344,
 3883              	.LVL155:
 3884              	# sieve_extend.c:520:             word = wordindex(index) - current_vector_start_word;
 520:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3885              		.loc 1 520 18 view .LVU1272
 3886 17bc 4929D5   		sub	r13, rdx	# word, current_vector_start_word
 3887              	.LVL156:
 521:sieve_extend.c ****         
 3888              		.loc 1 521 17 is_stmt 1 view .LVU1273
 3889              	# sieve_extend.c:521:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 521:sieve_extend.c ****         
 3890              		.loc 1 521 9 is_stmt 0 view .LVU1274
 3891 17bf 4983FD03 		cmp	r13, 3	# word,
 3892 17c3 0F8605FF 		jbe	.L282	#,
 3892      FFFF
 3893              	.LVL157:
 3894 17c9 0F1F8000 		.p2align 4
 3894      000000
 3895              		.p2align 3
 3896              	.L420:
 524:sieve_extend.c ****         const counter_t range_stop_vector = vectorindex(range_stop);
 3897              		.loc 1 524 9 is_stmt 1 view .LVU1275
 525:sieve_extend.c **** 
 3898              		.loc 1 525 9 view .LVU1276
 527:sieve_extend.c **** 
 3899              		.loc 1 527 9 view .LVU1277
 3900              	.LBB347:
GAS LISTING /tmp/ccr2dACi.s 			page 115


 3901              	.LBB339:
 3902              	# sieve_extend.c:426:    register bitvector_t* __restrict index_ptr      =  __builtin_assume_aligne
 426:sieve_extend.c ****    register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_st
 3903              		.loc 1 426 89 is_stmt 0 view .LVU1278
 3904 17d0 48C1E005 		sal	rax, 5	# tmp230,
 3905              	.LVL158:
 426:sieve_extend.c ****    register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_st
 3906              		.loc 1 426 89 view .LVU1279
 3907              	.LBE339:
 3908              	.LBE347:
 3909              	# sieve_extend.c:527:         applyMask_vector(bitarray_vector, step, range_stop, quadmask, current
 527:sieve_extend.c **** 
 3910              		.loc 1 527 9 view .LVU1280
 3911 17d4 C5FD6F04 		vmovdqa	ymm0, YMMWORD PTR [rsp]	# quadmask.57_175, quadmask
 3911      24
 3912              	.LVL159:
 3913              	.LBB348:
 3914              	.LBI337:
 424:sieve_extend.c ****    const counter_t range_stop_vector = vectorindex(range_stop);
 3915              		.loc 1 424 20 is_stmt 1 view .LVU1281
 3916              	.LBB340:
 425:sieve_extend.c ****    register bitvector_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_vect
 3917              		.loc 1 425 4 view .LVU1282
 426:sieve_extend.c ****    register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_st
 3918              		.loc 1 426 4 view .LVU1283
 3919              	# sieve_extend.c:426:    register bitvector_t* __restrict index_ptr      =  __builtin_assume_aligne
 426:sieve_extend.c ****    register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_st
 3920              		.loc 1 426 80 is_stmt 0 view .LVU1284
 3921 17d9 4801F8   		add	rax, rdi	# _26, bitarray_word
 3922              	.LVL160:
 427:sieve_extend.c **** 
 3923              		.loc 1 427 4 is_stmt 1 view .LVU1285
 431:sieve_extend.c ****        *index_ptr |= mask;
 3924              		.loc 1 431 4 view .LVU1286
 431:sieve_extend.c ****        *index_ptr |= mask;
 3925              		.loc 1 431 10 view .LVU1287
 3926 17dc 4939C0   		cmp	r8, rax	# fast_loop_ptr, _26
 3927 17df 0F865B01 		jbe	.L283	#,
 3927      0000
 3928 17e5 488D5040 		lea	rdx, 64[rax]	# ivtmp.266,
 3929              	.LVL161:
 3930              	.L284:
 432:sieve_extend.c ****        index_ptr+=step;
 3931              		.loc 1 432 8 view .LVU1288
 3932              	# sieve_extend.c:432:        *index_ptr |= mask;
 432:sieve_extend.c ****        index_ptr+=step;
 3933              		.loc 1 432 19 is_stmt 0 view .LVU1289
 3934 17e9 C5FDEB08 		vpor	ymm1, ymm0, YMMWORD PTR [rax]	# tmp231, quadmask.57_175, MEM[base: index_ptr_168, offset: 0B]
 3935              	# sieve_extend.c:434:        *index_ptr |= mask;
 434:sieve_extend.c ****        index_ptr+=step;
 3936              		.loc 1 434 19 view .LVU1290
 3937 17ed C5FDEB58 		vpor	ymm3, ymm0, YMMWORD PTR 32[rax]	# tmp232, quadmask.57_175, MEM[base: index_ptr_168, offset: 3
 3937      20
 3938              	# sieve_extend.c:432:        *index_ptr |= mask;
 432:sieve_extend.c ****        index_ptr+=step;
 3939              		.loc 1 432 19 view .LVU1291
 3940 17f2 C5FD7F08 		vmovdqa	YMMWORD PTR [rax], ymm1	# MEM[base: index_ptr_168, offset: 0B], tmp231
GAS LISTING /tmp/ccr2dACi.s 			page 116


 433:sieve_extend.c ****        *index_ptr |= mask;
 3941              		.loc 1 433 8 is_stmt 1 view .LVU1292
 3942              	.LVL162:
 434:sieve_extend.c ****        index_ptr+=step;
 3943              		.loc 1 434 8 view .LVU1293
 3944 17f6 4C8DB8A0 		lea	r15, 160[rax]	# tmp244,
 3944      000000
 3945              	# sieve_extend.c:434:        *index_ptr |= mask;
 434:sieve_extend.c ****        index_ptr+=step;
 3946              		.loc 1 434 19 is_stmt 0 view .LVU1294
 3947 17fd C5FD7F58 		vmovdqa	YMMWORD PTR 32[rax], ymm3	# MEM[base: index_ptr_168, offset: 32B], tmp232
 3947      20
 435:sieve_extend.c ****        *index_ptr |= mask;
 3948              		.loc 1 435 8 is_stmt 1 view .LVU1295
 3949              	.LVL163:
 436:sieve_extend.c ****        index_ptr+=step;
 3950              		.loc 1 436 8 view .LVU1296
 3951              	# sieve_extend.c:431:    while likely(index_ptr < fast_loop_ptr) {
 431:sieve_extend.c ****        *index_ptr |= mask;
 3952              		.loc 1 431 10 is_stmt 0 view .LVU1297
 3953 1802 4D39C7   		cmp	r15, r8	# _26, fast_loop_ptr
 3954              	# sieve_extend.c:436:        *index_ptr |= mask;
 436:sieve_extend.c ****        index_ptr+=step;
 3955              		.loc 1 436 19 view .LVU1298
 3956 1805 C5FDEB22 		vpor	ymm4, ymm0, YMMWORD PTR [rdx]	# tmp233, quadmask.57_175, MEM[base: _18, offset: 0B]
 3957              	# sieve_extend.c:438:        *index_ptr |= mask;
 438:sieve_extend.c ****        index_ptr+=step;
 3958              		.loc 1 438 19 view .LVU1299
 3959 1809 C5FDEB6A 		vpor	ymm5, ymm0, YMMWORD PTR 32[rdx]	# tmp234, quadmask.57_175, MEM[base: _18, offset: 32B]
 3959      20
 3960              	# sieve_extend.c:436:        *index_ptr |= mask;
 436:sieve_extend.c ****        index_ptr+=step;
 3961              		.loc 1 436 19 view .LVU1300
 3962 180e C5FD7F22 		vmovdqa	YMMWORD PTR [rdx], ymm4	# MEM[base: _18, offset: 0B], tmp233
 437:sieve_extend.c ****        *index_ptr |= mask;
 3963              		.loc 1 437 8 is_stmt 1 view .LVU1301
 3964              	.LVL164:
 438:sieve_extend.c ****        index_ptr+=step;
 3965              		.loc 1 438 8 view .LVU1302
 3966 1812 4C8DB2A0 		lea	r14, 160[rdx]	# tmp245,
 3966      000000
 3967              	# sieve_extend.c:438:        *index_ptr |= mask;
 438:sieve_extend.c ****        index_ptr+=step;
 3968              		.loc 1 438 19 is_stmt 0 view .LVU1303
 3969 1819 C5FD7F6A 		vmovdqa	YMMWORD PTR 32[rdx], ymm5	# MEM[base: _18, offset: 32B], tmp234
 3969      20
 439:sieve_extend.c ****        *index_ptr |= mask;
 3970              		.loc 1 439 8 is_stmt 1 view .LVU1304
 3971              	.LVL165:
 440:sieve_extend.c ****        index_ptr+=step;
 3972              		.loc 1 440 8 view .LVU1305
 3973              	# sieve_extend.c:440:        *index_ptr |= mask;
 440:sieve_extend.c ****        index_ptr+=step;
 3974              		.loc 1 440 19 is_stmt 0 view .LVU1306
 3975 181e C5FDEBB0 		vpor	ymm6, ymm0, YMMWORD PTR 128[rax]	# tmp235, quadmask.57_175, MEM[base: index_ptr_168, offset: 
 3975      80000000 
 3976 1826 C5FD7FB0 		vmovdqa	YMMWORD PTR 128[rax], ymm6	# MEM[base: index_ptr_168, offset: 128B], tmp235
GAS LISTING /tmp/ccr2dACi.s 			page 117


 3976      80000000 
 441:sieve_extend.c ****    }
 3977              		.loc 1 441 8 is_stmt 1 view .LVU1307
 3978              	.LVL166:
 441:sieve_extend.c ****    }
 3979              		.loc 1 441 8 is_stmt 0 view .LVU1308
 3980 182e 4C89F8   		mov	rax, r15	# _26, tmp244
 3981              	.LVL167:
 431:sieve_extend.c ****        *index_ptr |= mask;
 3982              		.loc 1 431 10 is_stmt 1 view .LVU1309
 3983 1831 0F830901 		jnb	.L283	#,
 3983      0000
 432:sieve_extend.c ****        index_ptr+=step;
 3984              		.loc 1 432 8 view .LVU1310
 3985              	# sieve_extend.c:432:        *index_ptr |= mask;
 432:sieve_extend.c ****        index_ptr+=step;
 3986              		.loc 1 432 19 is_stmt 0 view .LVU1311
 3987 1837 C4C17DEB 		vpor	ymm7, ymm0, YMMWORD PTR [r15]	# tmp308, quadmask.57_175, MEM[base: index_ptr_168, offset: 0B]
 3987      3F
 3988              	# sieve_extend.c:434:        *index_ptr |= mask;
 434:sieve_extend.c ****        index_ptr+=step;
 3989              		.loc 1 434 19 view .LVU1312
 3990 183c C4417DEB 		vpor	ymm8, ymm0, YMMWORD PTR 32[r15]	# tmp309, quadmask.57_175, MEM[base: index_ptr_168, offset: 3
 3990      4720
 3991              	# sieve_extend.c:432:        *index_ptr |= mask;
 432:sieve_extend.c ****        index_ptr+=step;
 3992              		.loc 1 432 19 view .LVU1313
 3993 1842 C4C17D7F 		vmovdqa	YMMWORD PTR [r15], ymm7	# MEM[base: index_ptr_168, offset: 0B], tmp308
 3993      3F
 433:sieve_extend.c ****        *index_ptr |= mask;
 3994              		.loc 1 433 8 is_stmt 1 view .LVU1314
 3995              	.LVL168:
 434:sieve_extend.c ****        index_ptr+=step;
 3996              		.loc 1 434 8 view .LVU1315
 3997 1847 4805A000 		add	rax, 160	# _26,
 3997      0000
 3998              	# sieve_extend.c:434:        *index_ptr |= mask;
 434:sieve_extend.c ****        index_ptr+=step;
 3999              		.loc 1 434 19 is_stmt 0 view .LVU1316
 4000 184d C4417D7F 		vmovdqa	YMMWORD PTR 32[r15], ymm8	# MEM[base: index_ptr_168, offset: 32B], tmp309
 4000      4720
 435:sieve_extend.c ****        *index_ptr |= mask;
 4001              		.loc 1 435 8 is_stmt 1 view .LVU1317
 4002              	.LVL169:
 436:sieve_extend.c ****        index_ptr+=step;
 4003              		.loc 1 436 8 view .LVU1318
 4004              	# sieve_extend.c:431:    while likely(index_ptr < fast_loop_ptr) {
 431:sieve_extend.c ****        *index_ptr |= mask;
 4005              		.loc 1 431 10 is_stmt 0 view .LVU1319
 4006 1853 4C39C0   		cmp	rax, r8	# _26, fast_loop_ptr
 4007              	# sieve_extend.c:436:        *index_ptr |= mask;
 436:sieve_extend.c ****        index_ptr+=step;
 4008              		.loc 1 436 19 view .LVU1320
 4009 1856 C57DEB8A 		vpor	ymm9, ymm0, YMMWORD PTR 160[rdx]	# tmp310, quadmask.57_175, MEM[base: _18, offset: 0B]
 4009      A0000000 
 4010 185e C57D7F8A 		vmovdqa	YMMWORD PTR 160[rdx], ymm9	# MEM[base: _18, offset: 0B], tmp310
 4010      A0000000 
GAS LISTING /tmp/ccr2dACi.s 			page 118


 437:sieve_extend.c ****        *index_ptr |= mask;
 4011              		.loc 1 437 8 is_stmt 1 view .LVU1321
 4012              	.LVL170:
 438:sieve_extend.c ****        index_ptr+=step;
 4013              		.loc 1 438 8 view .LVU1322
 4014              	# sieve_extend.c:438:        *index_ptr |= mask;
 438:sieve_extend.c ****        index_ptr+=step;
 4015              		.loc 1 438 19 is_stmt 0 view .LVU1323
 4016 1866 C4417DEB 		vpor	ymm10, ymm0, YMMWORD PTR 32[r14]	# tmp311, quadmask.57_175, MEM[base: _18, offset: 32B]
 4016      5620
 4017 186c C4417D7F 		vmovdqa	YMMWORD PTR 32[r14], ymm10	# MEM[base: _18, offset: 32B], tmp311
 4017      5620
 439:sieve_extend.c ****        *index_ptr |= mask;
 4018              		.loc 1 439 8 is_stmt 1 view .LVU1324
 4019              	.LVL171:
 440:sieve_extend.c ****        index_ptr+=step;
 4020              		.loc 1 440 8 view .LVU1325
 4021              	# sieve_extend.c:440:        *index_ptr |= mask;
 440:sieve_extend.c ****        index_ptr+=step;
 4022              		.loc 1 440 19 is_stmt 0 view .LVU1326
 4023 1872 C4417DEB 		vpor	ymm11, ymm0, YMMWORD PTR 128[r15]	# tmp312, quadmask.57_175, MEM[base: index_ptr_168, offset:
 4023      9F800000 
 4023      00
 4024 187b C4417D7F 		vmovdqa	YMMWORD PTR 128[r15], ymm11	# MEM[base: index_ptr_168, offset: 128B], tmp312
 4024      9F800000 
 4024      00
 441:sieve_extend.c ****    }
 4025              		.loc 1 441 8 is_stmt 1 view .LVU1327
 4026              	.LVL172:
 431:sieve_extend.c ****        *index_ptr |= mask;
 4027              		.loc 1 431 10 view .LVU1328
 4028 1884 0F83B600 		jnb	.L283	#,
 4028      0000
 432:sieve_extend.c ****        index_ptr+=step;
 4029              		.loc 1 432 8 view .LVU1329
 4030              	# sieve_extend.c:432:        *index_ptr |= mask;
 432:sieve_extend.c ****        index_ptr+=step;
 4031              		.loc 1 432 19 is_stmt 0 view .LVU1330
 4032 188a C57DEB20 		vpor	ymm12, ymm0, YMMWORD PTR [rax]	# tmp314, quadmask.57_175, MEM[base: index_ptr_168, offset: 0B
 4033              	# sieve_extend.c:434:        *index_ptr |= mask;
 434:sieve_extend.c ****        index_ptr+=step;
 4034              		.loc 1 434 19 view .LVU1331
 4035 188e C57DEB68 		vpor	ymm13, ymm0, YMMWORD PTR 32[rax]	# tmp315, quadmask.57_175, MEM[base: index_ptr_168, offset: 
 4035      20
 4036              	# sieve_extend.c:432:        *index_ptr |= mask;
 432:sieve_extend.c ****        index_ptr+=step;
 4037              		.loc 1 432 19 view .LVU1332
 4038 1893 C57D7F20 		vmovdqa	YMMWORD PTR [rax], ymm12	# MEM[base: index_ptr_168, offset: 0B], tmp314
 433:sieve_extend.c ****        *index_ptr |= mask;
 4039              		.loc 1 433 8 is_stmt 1 view .LVU1333
 4040              	.LVL173:
 434:sieve_extend.c ****        index_ptr+=step;
 4041              		.loc 1 434 8 view .LVU1334
 4042              	# sieve_extend.c:434:        *index_ptr |= mask;
 434:sieve_extend.c ****        index_ptr+=step;
 4043              		.loc 1 434 19 is_stmt 0 view .LVU1335
 4044 1897 C57D7F68 		vmovdqa	YMMWORD PTR 32[rax], ymm13	# MEM[base: index_ptr_168, offset: 32B], tmp315
GAS LISTING /tmp/ccr2dACi.s 			page 119


 4044      20
 435:sieve_extend.c ****        *index_ptr |= mask;
 4045              		.loc 1 435 8 is_stmt 1 view .LVU1336
 4046              	.LVL174:
 436:sieve_extend.c ****        index_ptr+=step;
 4047              		.loc 1 436 8 view .LVU1337
 4048              	# sieve_extend.c:436:        *index_ptr |= mask;
 436:sieve_extend.c ****        index_ptr+=step;
 4049              		.loc 1 436 19 is_stmt 0 view .LVU1338
 4050 189c C57DEBB2 		vpor	ymm14, ymm0, YMMWORD PTR 320[rdx]	# tmp316, quadmask.57_175, MEM[base: _18, offset: 0B]
 4050      40010000 
 4051              	# sieve_extend.c:438:        *index_ptr |= mask;
 438:sieve_extend.c ****        index_ptr+=step;
 4052              		.loc 1 438 19 view .LVU1339
 4053 18a4 C57DEBBA 		vpor	ymm15, ymm0, YMMWORD PTR 352[rdx]	# tmp317, quadmask.57_175, MEM[base: _18, offset: 32B]
 4053      60010000 
 4054              	# sieve_extend.c:436:        *index_ptr |= mask;
 436:sieve_extend.c ****        index_ptr+=step;
 4055              		.loc 1 436 19 view .LVU1340
 4056 18ac C57D7FB2 		vmovdqa	YMMWORD PTR 320[rdx], ymm14	# MEM[base: _18, offset: 0B], tmp316
 4056      40010000 
 437:sieve_extend.c ****        *index_ptr |= mask;
 4057              		.loc 1 437 8 is_stmt 1 view .LVU1341
 4058              	.LVL175:
 438:sieve_extend.c ****        index_ptr+=step;
 4059              		.loc 1 438 8 view .LVU1342
 4060              	# sieve_extend.c:438:        *index_ptr |= mask;
 438:sieve_extend.c ****        index_ptr+=step;
 4061              		.loc 1 438 19 is_stmt 0 view .LVU1343
 4062 18b4 C57D7FBA 		vmovdqa	YMMWORD PTR 352[rdx], ymm15	# MEM[base: _18, offset: 32B], tmp317
 4062      60010000 
 439:sieve_extend.c ****        *index_ptr |= mask;
 4063              		.loc 1 439 8 is_stmt 1 view .LVU1344
 4064              	.LVL176:
 440:sieve_extend.c ****        index_ptr+=step;
 4065              		.loc 1 440 8 view .LVU1345
 4066              	# sieve_extend.c:440:        *index_ptr |= mask;
 440:sieve_extend.c ****        index_ptr+=step;
 4067              		.loc 1 440 19 is_stmt 0 view .LVU1346
 4068 18bc C5FDEB88 		vpor	ymm1, ymm0, YMMWORD PTR 128[rax]	# tmp318, quadmask.57_175, MEM[base: index_ptr_168, offset: 
 4068      80000000 
 4069 18c4 C5FD7F88 		vmovdqa	YMMWORD PTR 128[rax], ymm1	# MEM[base: index_ptr_168, offset: 128B], tmp318
 4069      80000000 
 441:sieve_extend.c ****    }
 4070              		.loc 1 441 8 is_stmt 1 view .LVU1347
 4071              	.LVL177:
 441:sieve_extend.c ****    }
 4072              		.loc 1 441 8 is_stmt 0 view .LVU1348
 4073 18cc 498D8740 		lea	rax, 320[r15]	# _26,
 4073      010000
 4074              	.LVL178:
 431:sieve_extend.c ****        *index_ptr |= mask;
 4075              		.loc 1 431 10 is_stmt 1 view .LVU1349
 4076 18d3 4C39C0   		cmp	rax, r8	# _26, fast_loop_ptr
 4077 18d6 7368     		jnb	.L283	#,
 432:sieve_extend.c ****        index_ptr+=step;
 4078              		.loc 1 432 8 view .LVU1350
GAS LISTING /tmp/ccr2dACi.s 			page 120


 4079              	# sieve_extend.c:432:        *index_ptr |= mask;
 432:sieve_extend.c ****        index_ptr+=step;
 4080              		.loc 1 432 19 is_stmt 0 view .LVU1351
 4081 18d8 C4C17DEB 		vpor	ymm3, ymm0, YMMWORD PTR 320[r15]	# tmp320, quadmask.57_175, MEM[base: index_ptr_168, offset: 
 4081      9F400100 
 4081      00
 4082 18e1 4881C280 		add	rdx, 640	# ivtmp.266,
 4082      020000
 4083 18e8 C4C17D7F 		vmovdqa	YMMWORD PTR 320[r15], ymm3	# MEM[base: index_ptr_168, offset: 0B], tmp320
 4083      9F400100 
 4083      00
 433:sieve_extend.c ****        *index_ptr |= mask;
 4084              		.loc 1 433 8 is_stmt 1 view .LVU1352
 4085              	.LVL179:
 434:sieve_extend.c ****        index_ptr+=step;
 4086              		.loc 1 434 8 view .LVU1353
 4087              	# sieve_extend.c:434:        *index_ptr |= mask;
 434:sieve_extend.c ****        index_ptr+=step;
 4088              		.loc 1 434 19 is_stmt 0 view .LVU1354
 4089 18f1 C5FDEB60 		vpor	ymm4, ymm0, YMMWORD PTR 32[rax]	# tmp321, quadmask.57_175, MEM[base: index_ptr_168, offset: 3
 4089      20
 4090 18f6 C5FD7F60 		vmovdqa	YMMWORD PTR 32[rax], ymm4	# MEM[base: index_ptr_168, offset: 32B], tmp321
 4090      20
 435:sieve_extend.c ****        *index_ptr |= mask;
 4091              		.loc 1 435 8 is_stmt 1 view .LVU1355
 4092              	.LVL180:
 436:sieve_extend.c ****        index_ptr+=step;
 4093              		.loc 1 436 8 view .LVU1356
 4094              	# sieve_extend.c:436:        *index_ptr |= mask;
 436:sieve_extend.c ****        index_ptr+=step;
 4095              		.loc 1 436 19 is_stmt 0 view .LVU1357
 4096 18fb C5FDEBAA 		vpor	ymm5, ymm0, YMMWORD PTR -160[rdx]	# tmp322, quadmask.57_175, MEM[base: _18, offset: 0B]
 4096      60FFFFFF 
 4097              	# sieve_extend.c:438:        *index_ptr |= mask;
 438:sieve_extend.c ****        index_ptr+=step;
 4098              		.loc 1 438 19 view .LVU1358
 4099 1903 C5FDEB72 		vpor	ymm6, ymm0, YMMWORD PTR -128[rdx]	# tmp323, quadmask.57_175, MEM[base: _18, offset: 32B]
 4099      80
 4100              	# sieve_extend.c:436:        *index_ptr |= mask;
 436:sieve_extend.c ****        index_ptr+=step;
 4101              		.loc 1 436 19 view .LVU1359
 4102 1908 C5FD7FAA 		vmovdqa	YMMWORD PTR -160[rdx], ymm5	# MEM[base: _18, offset: 0B], tmp322
 4102      60FFFFFF 
 437:sieve_extend.c ****        *index_ptr |= mask;
 4103              		.loc 1 437 8 is_stmt 1 view .LVU1360
 4104              	.LVL181:
 438:sieve_extend.c ****        index_ptr+=step;
 4105              		.loc 1 438 8 view .LVU1361
 4106              	# sieve_extend.c:438:        *index_ptr |= mask;
 438:sieve_extend.c ****        index_ptr+=step;
 4107              		.loc 1 438 19 is_stmt 0 view .LVU1362
 4108 1910 C5FD7F72 		vmovdqa	YMMWORD PTR -128[rdx], ymm6	# MEM[base: _18, offset: 32B], tmp323
 4108      80
 439:sieve_extend.c ****        *index_ptr |= mask;
 4109              		.loc 1 439 8 is_stmt 1 view .LVU1363
 4110              	.LVL182:
 440:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/ccr2dACi.s 			page 121


 4111              		.loc 1 440 8 view .LVU1364
 4112              	# sieve_extend.c:440:        *index_ptr |= mask;
 440:sieve_extend.c ****        index_ptr+=step;
 4113              		.loc 1 440 19 is_stmt 0 view .LVU1365
 4114 1915 C5FDEBB8 		vpor	ymm7, ymm0, YMMWORD PTR 128[rax]	# tmp324, quadmask.57_175, MEM[base: index_ptr_168, offset: 
 4114      80000000 
 4115 191d C5FD7FB8 		vmovdqa	YMMWORD PTR 128[rax], ymm7	# MEM[base: index_ptr_168, offset: 128B], tmp324
 4115      80000000 
 441:sieve_extend.c ****    }
 4116              		.loc 1 441 8 is_stmt 1 view .LVU1366
 4117              	.LVL183:
 441:sieve_extend.c ****    }
 4118              		.loc 1 441 8 is_stmt 0 view .LVU1367
 4119 1925 498D87E0 		lea	rax, 480[r15]	# _26,
 4119      010000
 4120              	.LVL184:
 431:sieve_extend.c ****        *index_ptr |= mask;
 4121              		.loc 1 431 10 is_stmt 1 view .LVU1368
 4122 192c 4C39C0   		cmp	rax, r8	# _26, fast_loop_ptr
 4123 192f 0F82B4FE 		jb	.L284	#,
 4123      FFFF
 4124 1935 66662E0F 		.p2align 4
 4124      1F840000 
 4124      000000
 4125              		.p2align 3
 4126              	.L283:
 444:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 4127              		.loc 1 444 4 view .LVU1369
 445:sieve_extend.c ****        *index_ptr |= mask;
 4128              		.loc 1 445 4 view .LVU1370
 445:sieve_extend.c ****        *index_ptr |= mask;
 4129              		.loc 1 445 10 view .LVU1371
 4130 1940 4939C1   		cmp	r9, rax	# range_stop_ptr, _26
 4131 1943 0F862101 		jbe	.L285	#,
 4131      0000
 445:sieve_extend.c ****        *index_ptr |= mask;
 4132              		.loc 1 445 10 is_stmt 0 view .LVU1372
 4133 1949 4889C3   		mov	rbx, rax	# tmp240, _26
 4134              	# sieve_extend.c:446:        *index_ptr |= mask;
 446:sieve_extend.c ****        index_ptr+=step;
 4135              		.loc 1 446 19 view .LVU1373
 4136 194c C57DEB00 		vpor	ymm8, ymm0, YMMWORD PTR [rax]	# tmp236, quadmask.57_175, MEM[base: index_ptr_133, offset: 0B]
 4137 1950 48F7D3   		not	rbx	# tmp240
 4138              	# sieve_extend.c:447:        index_ptr+=step;
 447:sieve_extend.c ****    }
 4139              		.loc 1 447 17 view .LVU1374
 4140 1953 4883C020 		add	rax, 32	# _26,
 4141              	.LVL185:
 4142              	# sieve_extend.c:446:        *index_ptr |= mask;
 446:sieve_extend.c ****        index_ptr+=step;
 4143              		.loc 1 446 19 view .LVU1375
 4144 1957 C57D7F40 		vmovdqa	YMMWORD PTR -32[rax], ymm8	# MEM[base: index_ptr_133, offset: 0B], tmp236
 4144      E0
 4145 195c 4C01CB   		add	rbx, r9	# tmp241, range_stop_ptr
 4146 195f 48C1EB05 		shr	rbx, 5	# tmp239,
 4147 1963 83E307   		and	ebx, 7	# tmp242,
 446:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/ccr2dACi.s 			page 122


 4148              		.loc 1 446 8 is_stmt 1 view .LVU1376
 447:sieve_extend.c ****    }
 4149              		.loc 1 447 8 view .LVU1377
 4150              	.LVL186:
 445:sieve_extend.c ****        *index_ptr |= mask;
 4151              		.loc 1 445 10 view .LVU1378
 4152 1966 4939C1   		cmp	r9, rax	# range_stop_ptr, _26
 4153 1969 0F86FB00 		jbe	.L285	#,
 4153      0000
 4154 196f 4885DB   		test	rbx, rbx	# tmp242
 4155 1972 0F848400 		je	.L286	#,
 4155      0000
 4156 1978 4883FB01 		cmp	rbx, 1	# tmp242,
 4157 197c 746C     		je	.L379	#,
 4158 197e 4883FB02 		cmp	rbx, 2	# tmp242,
 4159 1982 7459     		je	.L380	#,
 4160 1984 4883FB03 		cmp	rbx, 3	# tmp242,
 4161 1988 7446     		je	.L381	#,
 4162 198a 4883FB04 		cmp	rbx, 4	# tmp242,
 4163 198e 7433     		je	.L382	#,
 4164 1990 4883FB05 		cmp	rbx, 5	# tmp242,
 4165 1994 7420     		je	.L383	#,
 4166 1996 4883FB06 		cmp	rbx, 6	# tmp242,
 4167 199a 740D     		je	.L384	#,
 446:sieve_extend.c ****        index_ptr+=step;
 4168              		.loc 1 446 8 view .LVU1379
 4169              	# sieve_extend.c:446:        *index_ptr |= mask;
 446:sieve_extend.c ****        index_ptr+=step;
 4170              		.loc 1 446 19 is_stmt 0 view .LVU1380
 4171 199c C57DEB08 		vpor	ymm9, ymm0, YMMWORD PTR [rax]	# tmp301, quadmask.57_175, MEM[base: index_ptr_133, offset: 0B]
 4172              	# sieve_extend.c:447:        index_ptr+=step;
 447:sieve_extend.c ****    }
 4173              		.loc 1 447 17 view .LVU1381
 4174 19a0 4883C020 		add	rax, 32	# _26,
 4175              	# sieve_extend.c:446:        *index_ptr |= mask;
 446:sieve_extend.c ****        index_ptr+=step;
 4176              		.loc 1 446 19 view .LVU1382
 4177 19a4 C57D7F48 		vmovdqa	YMMWORD PTR -32[rax], ymm9	# MEM[base: index_ptr_133, offset: 0B], tmp301
 4177      E0
 447:sieve_extend.c ****    }
 4178              		.loc 1 447 8 is_stmt 1 view .LVU1383
 445:sieve_extend.c ****        *index_ptr |= mask;
 4179              		.loc 1 445 10 view .LVU1384
 4180              	.L384:
 446:sieve_extend.c ****        index_ptr+=step;
 4181              		.loc 1 446 8 view .LVU1385
 4182              	# sieve_extend.c:446:        *index_ptr |= mask;
 446:sieve_extend.c ****        index_ptr+=step;
 4183              		.loc 1 446 19 is_stmt 0 view .LVU1386
 4184 19a9 C57DEB10 		vpor	ymm10, ymm0, YMMWORD PTR [rax]	# tmp302, quadmask.57_175, MEM[base: index_ptr_133, offset: 0B
 4185              	# sieve_extend.c:447:        index_ptr+=step;
 447:sieve_extend.c ****    }
 4186              		.loc 1 447 17 view .LVU1387
 4187 19ad 4883C020 		add	rax, 32	# _26,
 4188              	# sieve_extend.c:446:        *index_ptr |= mask;
 446:sieve_extend.c ****        index_ptr+=step;
 4189              		.loc 1 446 19 view .LVU1388
GAS LISTING /tmp/ccr2dACi.s 			page 123


 4190 19b1 C57D7F50 		vmovdqa	YMMWORD PTR -32[rax], ymm10	# MEM[base: index_ptr_133, offset: 0B], tmp302
 4190      E0
 447:sieve_extend.c ****    }
 4191              		.loc 1 447 8 is_stmt 1 view .LVU1389
 445:sieve_extend.c ****        *index_ptr |= mask;
 4192              		.loc 1 445 10 view .LVU1390
 4193              	.L383:
 446:sieve_extend.c ****        index_ptr+=step;
 4194              		.loc 1 446 8 view .LVU1391
 4195              	# sieve_extend.c:446:        *index_ptr |= mask;
 446:sieve_extend.c ****        index_ptr+=step;
 4196              		.loc 1 446 19 is_stmt 0 view .LVU1392
 4197 19b6 C57DEB18 		vpor	ymm11, ymm0, YMMWORD PTR [rax]	# tmp303, quadmask.57_175, MEM[base: index_ptr_133, offset: 0B
 4198              	# sieve_extend.c:447:        index_ptr+=step;
 447:sieve_extend.c ****    }
 4199              		.loc 1 447 17 view .LVU1393
 4200 19ba 4883C020 		add	rax, 32	# _26,
 4201              	# sieve_extend.c:446:        *index_ptr |= mask;
 446:sieve_extend.c ****        index_ptr+=step;
 4202              		.loc 1 446 19 view .LVU1394
 4203 19be C57D7F58 		vmovdqa	YMMWORD PTR -32[rax], ymm11	# MEM[base: index_ptr_133, offset: 0B], tmp303
 4203      E0
 447:sieve_extend.c ****    }
 4204              		.loc 1 447 8 is_stmt 1 view .LVU1395
 445:sieve_extend.c ****        *index_ptr |= mask;
 4205              		.loc 1 445 10 view .LVU1396
 4206              	.L382:
 446:sieve_extend.c ****        index_ptr+=step;
 4207              		.loc 1 446 8 view .LVU1397
 4208              	# sieve_extend.c:446:        *index_ptr |= mask;
 446:sieve_extend.c ****        index_ptr+=step;
 4209              		.loc 1 446 19 is_stmt 0 view .LVU1398
 4210 19c3 C57DEB20 		vpor	ymm12, ymm0, YMMWORD PTR [rax]	# tmp304, quadmask.57_175, MEM[base: index_ptr_133, offset: 0B
 4211              	# sieve_extend.c:447:        index_ptr+=step;
 447:sieve_extend.c ****    }
 4212              		.loc 1 447 17 view .LVU1399
 4213 19c7 4883C020 		add	rax, 32	# _26,
 4214              	# sieve_extend.c:446:        *index_ptr |= mask;
 446:sieve_extend.c ****        index_ptr+=step;
 4215              		.loc 1 446 19 view .LVU1400
 4216 19cb C57D7F60 		vmovdqa	YMMWORD PTR -32[rax], ymm12	# MEM[base: index_ptr_133, offset: 0B], tmp304
 4216      E0
 447:sieve_extend.c ****    }
 4217              		.loc 1 447 8 is_stmt 1 view .LVU1401
 445:sieve_extend.c ****        *index_ptr |= mask;
 4218              		.loc 1 445 10 view .LVU1402
 4219              	.L381:
 446:sieve_extend.c ****        index_ptr+=step;
 4220              		.loc 1 446 8 view .LVU1403
 4221              	# sieve_extend.c:446:        *index_ptr |= mask;
 446:sieve_extend.c ****        index_ptr+=step;
 4222              		.loc 1 446 19 is_stmt 0 view .LVU1404
 4223 19d0 C57DEB28 		vpor	ymm13, ymm0, YMMWORD PTR [rax]	# tmp305, quadmask.57_175, MEM[base: index_ptr_133, offset: 0B
 4224              	# sieve_extend.c:447:        index_ptr+=step;
 447:sieve_extend.c ****    }
 4225              		.loc 1 447 17 view .LVU1405
 4226 19d4 4883C020 		add	rax, 32	# _26,
GAS LISTING /tmp/ccr2dACi.s 			page 124


 4227              	# sieve_extend.c:446:        *index_ptr |= mask;
 446:sieve_extend.c ****        index_ptr+=step;
 4228              		.loc 1 446 19 view .LVU1406
 4229 19d8 C57D7F68 		vmovdqa	YMMWORD PTR -32[rax], ymm13	# MEM[base: index_ptr_133, offset: 0B], tmp305
 4229      E0
 447:sieve_extend.c ****    }
 4230              		.loc 1 447 8 is_stmt 1 view .LVU1407
 445:sieve_extend.c ****        *index_ptr |= mask;
 4231              		.loc 1 445 10 view .LVU1408
 4232              	.L380:
 446:sieve_extend.c ****        index_ptr+=step;
 4233              		.loc 1 446 8 view .LVU1409
 4234              	# sieve_extend.c:446:        *index_ptr |= mask;
 446:sieve_extend.c ****        index_ptr+=step;
 4235              		.loc 1 446 19 is_stmt 0 view .LVU1410
 4236 19dd C57DEB30 		vpor	ymm14, ymm0, YMMWORD PTR [rax]	# tmp306, quadmask.57_175, MEM[base: index_ptr_133, offset: 0B
 4237              	# sieve_extend.c:447:        index_ptr+=step;
 447:sieve_extend.c ****    }
 4238              		.loc 1 447 17 view .LVU1411
 4239 19e1 4883C020 		add	rax, 32	# _26,
 4240              	# sieve_extend.c:446:        *index_ptr |= mask;
 446:sieve_extend.c ****        index_ptr+=step;
 4241              		.loc 1 446 19 view .LVU1412
 4242 19e5 C57D7F70 		vmovdqa	YMMWORD PTR -32[rax], ymm14	# MEM[base: index_ptr_133, offset: 0B], tmp306
 4242      E0
 447:sieve_extend.c ****    }
 4243              		.loc 1 447 8 is_stmt 1 view .LVU1413
 445:sieve_extend.c ****        *index_ptr |= mask;
 4244              		.loc 1 445 10 view .LVU1414
 4245              	.L379:
 446:sieve_extend.c ****        index_ptr+=step;
 4246              		.loc 1 446 8 view .LVU1415
 4247              	# sieve_extend.c:446:        *index_ptr |= mask;
 446:sieve_extend.c ****        index_ptr+=step;
 4248              		.loc 1 446 19 is_stmt 0 view .LVU1416
 4249 19ea C57DEB38 		vpor	ymm15, ymm0, YMMWORD PTR [rax]	# tmp307, quadmask.57_175, MEM[base: index_ptr_133, offset: 0B
 4250              	# sieve_extend.c:447:        index_ptr+=step;
 447:sieve_extend.c ****    }
 4251              		.loc 1 447 17 view .LVU1417
 4252 19ee 4883C020 		add	rax, 32	# _26,
 4253              	# sieve_extend.c:446:        *index_ptr |= mask;
 446:sieve_extend.c ****        index_ptr+=step;
 4254              		.loc 1 446 19 view .LVU1418
 4255 19f2 C57D7F78 		vmovdqa	YMMWORD PTR -32[rax], ymm15	# MEM[base: index_ptr_133, offset: 0B], tmp307
 4255      E0
 447:sieve_extend.c ****    }
 4256              		.loc 1 447 8 is_stmt 1 view .LVU1419
 445:sieve_extend.c ****        *index_ptr |= mask;
 4257              		.loc 1 445 10 view .LVU1420
 4258 19f7 4939C1   		cmp	r9, rax	# range_stop_ptr, _26
 4259 19fa 766E     		jbe	.L285	#,
 4260              	.L286:
 446:sieve_extend.c ****        index_ptr+=step;
 4261              		.loc 1 446 8 view .LVU1421
 4262              	# sieve_extend.c:446:        *index_ptr |= mask;
 446:sieve_extend.c ****        index_ptr+=step;
 4263              		.loc 1 446 19 is_stmt 0 view .LVU1422
GAS LISTING /tmp/ccr2dACi.s 			page 125


 4264 19fc C5FDEB08 		vpor	ymm1, ymm0, YMMWORD PTR [rax]	# tmp252, quadmask.57_175, MEM[base: index_ptr_133, offset: 0B]
 4265 1a00 C5FDEB58 		vpor	ymm3, ymm0, YMMWORD PTR 32[rax]	# tmp254, quadmask.57_175, MEM[base: index_ptr_133, offset: 0
 4265      20
 4266 1a05 C5FDEB60 		vpor	ymm4, ymm0, YMMWORD PTR 64[rax]	# tmp256, quadmask.57_175, MEM[base: index_ptr_133, offset: 0
 4266      40
 4267 1a0a C5FDEB68 		vpor	ymm5, ymm0, YMMWORD PTR 96[rax]	# tmp258, quadmask.57_175, MEM[base: index_ptr_133, offset: 0
 4267      60
 4268 1a0f C5FDEBB0 		vpor	ymm6, ymm0, YMMWORD PTR 128[rax]	# tmp260, quadmask.57_175, MEM[base: index_ptr_133, offset: 
 4268      80000000 
 4269 1a17 C5FDEBB8 		vpor	ymm7, ymm0, YMMWORD PTR 160[rax]	# tmp262, quadmask.57_175, MEM[base: index_ptr_133, offset: 
 4269      A0000000 
 4270 1a1f C57DEB80 		vpor	ymm8, ymm0, YMMWORD PTR 192[rax]	# tmp264, quadmask.57_175, MEM[base: index_ptr_133, offset: 
 4270      C0000000 
 4271 1a27 C57DEB88 		vpor	ymm9, ymm0, YMMWORD PTR 224[rax]	# tmp266, quadmask.57_175, MEM[base: index_ptr_133, offset: 
 4271      E0000000 
 4272 1a2f C5FD7F08 		vmovdqa	YMMWORD PTR [rax], ymm1	# MEM[base: index_ptr_133, offset: 0B], tmp252
 447:sieve_extend.c ****    }
 4273              		.loc 1 447 8 is_stmt 1 view .LVU1423
 445:sieve_extend.c ****        *index_ptr |= mask;
 4274              		.loc 1 445 10 view .LVU1424
 446:sieve_extend.c ****        index_ptr+=step;
 4275              		.loc 1 446 8 view .LVU1425
 4276              	# sieve_extend.c:447:        index_ptr+=step;
 447:sieve_extend.c ****    }
 4277              		.loc 1 447 17 is_stmt 0 view .LVU1426
 4278 1a33 48050001 		add	rax, 256	# _26,
 4278      0000
 4279              	# sieve_extend.c:446:        *index_ptr |= mask;
 446:sieve_extend.c ****        index_ptr+=step;
 4280              		.loc 1 446 19 view .LVU1427
 4281 1a39 C5FD7F98 		vmovdqa	YMMWORD PTR -224[rax], ymm3	# MEM[base: index_ptr_133, offset: 0B], tmp254
 4281      20FFFFFF 
 447:sieve_extend.c ****    }
 4282              		.loc 1 447 8 is_stmt 1 view .LVU1428
 445:sieve_extend.c ****        *index_ptr |= mask;
 4283              		.loc 1 445 10 view .LVU1429
 446:sieve_extend.c ****        index_ptr+=step;
 4284              		.loc 1 446 8 view .LVU1430
 4285              	# sieve_extend.c:446:        *index_ptr |= mask;
 446:sieve_extend.c ****        index_ptr+=step;
 4286              		.loc 1 446 19 is_stmt 0 view .LVU1431
 4287 1a41 C5FD7FA0 		vmovdqa	YMMWORD PTR -192[rax], ymm4	# MEM[base: index_ptr_133, offset: 0B], tmp256
 4287      40FFFFFF 
 447:sieve_extend.c ****    }
 4288              		.loc 1 447 8 is_stmt 1 view .LVU1432
 445:sieve_extend.c ****        *index_ptr |= mask;
 4289              		.loc 1 445 10 view .LVU1433
 446:sieve_extend.c ****        index_ptr+=step;
 4290              		.loc 1 446 8 view .LVU1434
 4291              	# sieve_extend.c:446:        *index_ptr |= mask;
 446:sieve_extend.c ****        index_ptr+=step;
 4292              		.loc 1 446 19 is_stmt 0 view .LVU1435
 4293 1a49 C5FD7FA8 		vmovdqa	YMMWORD PTR -160[rax], ymm5	# MEM[base: index_ptr_133, offset: 0B], tmp258
 4293      60FFFFFF 
 447:sieve_extend.c ****    }
 4294              		.loc 1 447 8 is_stmt 1 view .LVU1436
 445:sieve_extend.c ****        *index_ptr |= mask;
GAS LISTING /tmp/ccr2dACi.s 			page 126


 4295              		.loc 1 445 10 view .LVU1437
 446:sieve_extend.c ****        index_ptr+=step;
 4296              		.loc 1 446 8 view .LVU1438
 4297              	# sieve_extend.c:446:        *index_ptr |= mask;
 446:sieve_extend.c ****        index_ptr+=step;
 4298              		.loc 1 446 19 is_stmt 0 view .LVU1439
 4299 1a51 C5FD7F70 		vmovdqa	YMMWORD PTR -128[rax], ymm6	# MEM[base: index_ptr_133, offset: 0B], tmp260
 4299      80
 447:sieve_extend.c ****    }
 4300              		.loc 1 447 8 is_stmt 1 view .LVU1440
 445:sieve_extend.c ****        *index_ptr |= mask;
 4301              		.loc 1 445 10 view .LVU1441
 446:sieve_extend.c ****        index_ptr+=step;
 4302              		.loc 1 446 8 view .LVU1442
 4303              	# sieve_extend.c:446:        *index_ptr |= mask;
 446:sieve_extend.c ****        index_ptr+=step;
 4304              		.loc 1 446 19 is_stmt 0 view .LVU1443
 4305 1a56 C5FD7F78 		vmovdqa	YMMWORD PTR -96[rax], ymm7	# MEM[base: index_ptr_133, offset: 0B], tmp262
 4305      A0
 447:sieve_extend.c ****    }
 4306              		.loc 1 447 8 is_stmt 1 view .LVU1444
 445:sieve_extend.c ****        *index_ptr |= mask;
 4307              		.loc 1 445 10 view .LVU1445
 446:sieve_extend.c ****        index_ptr+=step;
 4308              		.loc 1 446 8 view .LVU1446
 4309              	# sieve_extend.c:446:        *index_ptr |= mask;
 446:sieve_extend.c ****        index_ptr+=step;
 4310              		.loc 1 446 19 is_stmt 0 view .LVU1447
 4311 1a5b C57D7F40 		vmovdqa	YMMWORD PTR -64[rax], ymm8	# MEM[base: index_ptr_133, offset: 0B], tmp264
 4311      C0
 447:sieve_extend.c ****    }
 4312              		.loc 1 447 8 is_stmt 1 view .LVU1448
 445:sieve_extend.c ****        *index_ptr |= mask;
 4313              		.loc 1 445 10 view .LVU1449
 446:sieve_extend.c ****        index_ptr+=step;
 4314              		.loc 1 446 8 view .LVU1450
 4315              	# sieve_extend.c:446:        *index_ptr |= mask;
 446:sieve_extend.c ****        index_ptr+=step;
 4316              		.loc 1 446 19 is_stmt 0 view .LVU1451
 4317 1a60 C57D7F48 		vmovdqa	YMMWORD PTR -32[rax], ymm9	# MEM[base: index_ptr_133, offset: 0B], tmp266
 4317      E0
 447:sieve_extend.c ****    }
 4318              		.loc 1 447 8 is_stmt 1 view .LVU1452
 4319              	.LVL187:
 445:sieve_extend.c ****        *index_ptr |= mask;
 4320              		.loc 1 445 10 view .LVU1453
 4321 1a65 4939C1   		cmp	r9, rax	# range_stop_ptr, _26
 4322 1a68 7792     		ja	.L286	#,
 4323              	.LVL188:
 4324              	.L285:
 450:sieve_extend.c ****        *index_ptr |= mask;
 4325              		.loc 1 450 4 view .LVU1454
 4326              	# sieve_extend.c:450:    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range
 450:sieve_extend.c ****        *index_ptr |= mask;
 4327              		.loc 1 450 7 is_stmt 0 view .LVU1455
 4328 1a6a 4939C1   		cmp	r9, rax	# range_stop_ptr, _26
 4329 1a6d 7431     		je	.L427	#,
GAS LISTING /tmp/ccr2dACi.s 			page 127


 4330              	.LVL189:
 450:sieve_extend.c ****        *index_ptr |= mask;
 4331              		.loc 1 450 7 view .LVU1456
 4332              	.LBE340:
 4333              	.LBE348:
 4334              	.LBE336:
 510:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 4335              		.loc 1 510 41 is_stmt 1 view .LVU1457
 4336              	# sieve_extend.c:510:     for (counter_t index = range_start; index < range_stop_unique;) {
 510:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 4337              		.loc 1 510 5 is_stmt 0 view .LVU1458
 4338 1a6f 4939F2   		cmp	r10, rsi	# range_stop_unique, range_start
 4339 1a72 0F8738FC 		ja	.L289	#,
 4339      FFFF
 4340              	.LVL190:
 4341              	.L425:
 510:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 4342              		.loc 1 510 5 view .LVU1459
 4343 1a78 C5F877   		vzeroupper
 4344              	.LVL191:
 4345              	.L266:
 510:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 4346              		.loc 1 510 5 view .LVU1460
 4347              	.LBE335:
 4348              	# sieve_extend.c:567: }
 567:sieve_extend.c **** 
 4349              		.loc 1 567 1 view .LVU1461
 4350 1a7b 488B4424 		mov	rax, QWORD PTR 56[rsp]	# tmp408, D.6690
 4350      38
 4351 1a80 64483304 		xor	rax, QWORD PTR fs:40	# tmp408, MEM[(<address-space-1> long unsigned int *)40B]
 4351      25280000 
 4351      00
 4352 1a89 0F857204 		jne	.L428	#,
 4352      0000
 4353 1a8f 488D65D8 		lea	rsp, -40[rbp]	#,
 4354 1a93 5B       		pop	rbx	#
 4355 1a94 415C     		pop	r12	#
 4356 1a96 415D     		pop	r13	#
 4357 1a98 415E     		pop	r14	#
 4358 1a9a 415F     		pop	r15	#
 4359 1a9c 5D       		pop	rbp	#
 4360              		.cfi_remember_state
 4361              		.cfi_def_cfa 7, 8
 4362 1a9d C3       		ret	
 4363              	.LVL192:
 4364 1a9e 6690     		.p2align 4,,7
 4365              		.p2align 3
 4366              	.L427:
 4367              		.cfi_restore_state
 4368              	.LBB360:
 4369              	.LBB355:
 4370              	.LBB349:
 4371              	.LBB341:
 451:sieve_extend.c ****    }
 4372              		.loc 1 451 8 is_stmt 1 view .LVU1462
 4373              	# sieve_extend.c:451:        *index_ptr |= mask;
 451:sieve_extend.c ****    }
GAS LISTING /tmp/ccr2dACi.s 			page 128


 4374              		.loc 1 451 19 is_stmt 0 view .LVU1463
 4375 1aa0 C4417DEB 		vpor	ymm10, ymm0, YMMWORD PTR [r9]	# tmp237, quadmask.57_175, *index_ptr_127
 4375      11
 4376              	.LBE341:
 4377              	.LBE349:
 4378              	.LBE355:
 4379              	# sieve_extend.c:510:     for (counter_t index = range_start; index < range_stop_unique;) {
 510:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 4380              		.loc 1 510 5 view .LVU1464
 4381 1aa5 4939F2   		cmp	r10, rsi	# range_stop_unique, range_start
 4382              	.LBB356:
 4383              	.LBB350:
 4384              	.LBB342:
 4385              	# sieve_extend.c:451:        *index_ptr |= mask;
 451:sieve_extend.c ****    }
 4386              		.loc 1 451 19 view .LVU1465
 4387 1aa8 C4417D7F 		vmovdqa	YMMWORD PTR [r9], ymm10	# *index_ptr_127, tmp237
 4387      11
 4388              	.LVL193:
 451:sieve_extend.c ****    }
 4389              		.loc 1 451 19 view .LVU1466
 4390              	.LBE342:
 4391              	.LBE350:
 4392              	.LBE356:
 510:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 4393              		.loc 1 510 41 is_stmt 1 view .LVU1467
 4394              	# sieve_extend.c:510:     for (counter_t index = range_start; index < range_stop_unique;) {
 510:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 4395              		.loc 1 510 5 is_stmt 0 view .LVU1468
 4396 1aad 0F87FDFB 		ja	.L289	#,
 4396      FFFF
 4397 1ab3 EBC3     		jmp	.L425	#
 4398              	.LVL194:
 4399              	.L426:
 510:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 4400              		.loc 1 510 5 view .LVU1469
 4401 1ab5 4939DB   		cmp	r11, rbx	# range_stop_vector, tmp199
 4402 1ab8 4989D5   		mov	r13, rdx	# _194, step
 4403 1abb 4D89C3   		mov	r11, r8	# tmp203, tmp203
 4404              	.LBB357:
 4405              	# sieve_extend.c:518:             quadmask[word] |= markmask(index);
 518:sieve_extend.c ****             index += step;
 4406              		.loc 1 518 31 view .LVU1470
 4407 1abe 41BC0100 		mov	r12d, 1	# tmp212,
 4407      0000
 4408              	# sieve_extend.c:512:         register bitvector_t quadmask = { };
 512:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 4409              		.loc 1 512 30 view .LVU1471
 4410 1ac4 C5E9EFD2 		vpxor	xmm2, xmm2, xmm2	# tmp208
 4411 1ac8 4C0F46DF 		cmovbe	r11, rdi	# bitarray_word,, tmp203
 4412 1acc 48C1E305 		sal	rbx, 5	# tmp207,
 4413 1ad0 49C1E506 		sal	r13, 6	# _194,
 4414 1ad4 66662E0F 		.p2align 4
 4414      1F840000 
 4414      00000090 
 4415              		.p2align 3
 4416              	.L281:
GAS LISTING /tmp/ccr2dACi.s 			page 129


 511:sieve_extend.c ****         register bitvector_t quadmask = { };
 4417              		.loc 1 511 9 is_stmt 1 view .LVU1472
 4418              	# sieve_extend.c:511:         const counter_t current_vector_start_word =  vectorindex(index) << (S
 511:sieve_extend.c ****         register bitvector_t quadmask = { };
 4419              		.loc 1 511 54 is_stmt 0 view .LVU1473
 4420 1ae0 4989F6   		mov	r14, rsi	# _31, range_start
 4421              	# sieve_extend.c:513:         register counter_t word = wordindex(index) - current_vector_start_wor
 513:sieve_extend.c ****         
 4422              		.loc 1 513 35 view .LVU1474
 4423 1ae3 4889F0   		mov	rax, rsi	# tmp209, range_start
 4424              	# sieve_extend.c:511:         const counter_t current_vector_start_word =  vectorindex(index) << (S
 511:sieve_extend.c ****         register bitvector_t quadmask = { };
 4425              		.loc 1 511 54 view .LVU1475
 4426 1ae6 49C1EE08 		shr	r14, 8	# _31,
 4427              	# sieve_extend.c:513:         register counter_t word = wordindex(index) - current_vector_start_wor
 513:sieve_extend.c ****         
 4428              		.loc 1 513 35 view .LVU1476
 4429 1aea 48C1E806 		shr	rax, 6	# tmp209,
 4430              	# sieve_extend.c:511:         const counter_t current_vector_start_word =  vectorindex(index) << (S
 511:sieve_extend.c ****         register bitvector_t quadmask = { };
 4431              		.loc 1 511 25 view .LVU1477
 4432 1aee 4E8D04B5 		lea	r8, 0[0+r14*4]	# current_vector_start_word,
 4432      00000000 
 4433              	.LVL195:
 512:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 4434              		.loc 1 512 9 is_stmt 1 view .LVU1478
 4435              	# sieve_extend.c:512:         register bitvector_t quadmask = { };
 512:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 4436              		.loc 1 512 30 is_stmt 0 view .LVU1479
 4437 1af6 C5FD7F14 		vmovdqa	YMMWORD PTR [rsp], ymm2	# quadmask, tmp208
 4437      24
 513:sieve_extend.c ****         
 4438              		.loc 1 513 9 is_stmt 1 view .LVU1480
 4439              	# sieve_extend.c:513:         register counter_t word = wordindex(index) - current_vector_start_wor
 513:sieve_extend.c ****         
 4440              		.loc 1 513 28 is_stmt 0 view .LVU1481
 4441 1afb 4C29C0   		sub	rax, r8	# word, current_vector_start_word
 4442              	.LVL196:
 4443              	.L274:
 517:sieve_extend.c ****             quadmask[word] |= markmask(index);
 4444              		.loc 1 517 9 is_stmt 1 discriminator 1 view .LVU1482
 518:sieve_extend.c ****             index += step;
 4445              		.loc 1 518 13 discriminator 1 view .LVU1483
 4446              	# sieve_extend.c:518:             quadmask[word] |= markmask(index);
 518:sieve_extend.c ****             index += step;
 4447              		.loc 1 518 31 is_stmt 0 discriminator 1 view .LVU1484
 4448 1afe C442C9F7 		shlx	r15, r12, rsi	# tmp211, tmp212, range_start
 4448      FC
 4449              	# sieve_extend.c:519:             index += step;
 519:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4450              		.loc 1 519 19 discriminator 1 view .LVU1485
 4451 1b03 4801D6   		add	rsi, rdx	# range_start, step
 4452              	# sieve_extend.c:518:             quadmask[word] |= markmask(index);
 518:sieve_extend.c ****             index += step;
 4453              		.loc 1 518 28 discriminator 1 view .LVU1486
 4454 1b06 4C093CC4 		or	QWORD PTR [rsp+rax*8], r15	# quadmask, tmp211
 519:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
GAS LISTING /tmp/ccr2dACi.s 			page 130


 4455              		.loc 1 519 13 is_stmt 1 discriminator 1 view .LVU1487
 520:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4456              		.loc 1 520 13 discriminator 1 view .LVU1488
 4457              	# sieve_extend.c:520:             word = wordindex(index) - current_vector_start_word;
 520:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4458              		.loc 1 520 20 is_stmt 0 discriminator 1 view .LVU1489
 4459 1b0a 4889F0   		mov	rax, rsi	# tmp213, range_start
 4460              	.LVL197:
 520:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4461              		.loc 1 520 20 discriminator 1 view .LVU1490
 4462 1b0d 48C1E806 		shr	rax, 6	# tmp213,
 4463              	# sieve_extend.c:520:             word = wordindex(index) - current_vector_start_word;
 520:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4464              		.loc 1 520 18 discriminator 1 view .LVU1491
 4465 1b11 4C29C0   		sub	rax, r8	# word, current_vector_start_word
 521:sieve_extend.c ****         
 4466              		.loc 1 521 17 is_stmt 1 discriminator 1 view .LVU1492
 4467              	# sieve_extend.c:521:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 521:sieve_extend.c ****         
 4468              		.loc 1 521 9 is_stmt 0 discriminator 1 view .LVU1493
 4469 1b14 4883F803 		cmp	rax, 3	# word,
 4470 1b18 0F87D200 		ja	.L421	#,
 4470      0000
 517:sieve_extend.c ****             quadmask[word] |= markmask(index);
 4471              		.loc 1 517 9 is_stmt 1 view .LVU1494
 518:sieve_extend.c ****             index += step;
 4472              		.loc 1 518 13 view .LVU1495
 4473              	# sieve_extend.c:518:             quadmask[word] |= markmask(index);
 518:sieve_extend.c ****             index += step;
 4474              		.loc 1 518 31 is_stmt 0 view .LVU1496
 4475 1b1e C442C9F7 		shlx	r15, r12, rsi	# tmp369, tmp212, range_start
 4475      FC
 4476              	# sieve_extend.c:519:             index += step;
 519:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4477              		.loc 1 519 19 view .LVU1497
 4478 1b23 4801D6   		add	rsi, rdx	# range_start, step
 4479              	# sieve_extend.c:518:             quadmask[word] |= markmask(index);
 518:sieve_extend.c ****             index += step;
 4480              		.loc 1 518 28 view .LVU1498
 4481 1b26 4C093CC4 		or	QWORD PTR [rsp+rax*8], r15	# quadmask, tmp369
 519:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4482              		.loc 1 519 13 is_stmt 1 view .LVU1499
 520:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4483              		.loc 1 520 13 view .LVU1500
 4484              	# sieve_extend.c:520:             word = wordindex(index) - current_vector_start_word;
 520:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4485              		.loc 1 520 20 is_stmt 0 view .LVU1501
 4486 1b2a 4889F0   		mov	rax, rsi	# tmp370, range_start
 4487 1b2d 48C1E806 		shr	rax, 6	# tmp370,
 4488              	# sieve_extend.c:520:             word = wordindex(index) - current_vector_start_word;
 520:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4489              		.loc 1 520 18 view .LVU1502
 4490 1b31 4C29C0   		sub	rax, r8	# word, current_vector_start_word
 521:sieve_extend.c ****         
 4491              		.loc 1 521 17 is_stmt 1 view .LVU1503
 4492              	# sieve_extend.c:521:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 521:sieve_extend.c ****         
GAS LISTING /tmp/ccr2dACi.s 			page 131


 4493              		.loc 1 521 9 is_stmt 0 view .LVU1504
 4494 1b34 4883F803 		cmp	rax, 3	# word,
 4495 1b38 0F87B200 		ja	.L421	#,
 4495      0000
 517:sieve_extend.c ****             quadmask[word] |= markmask(index);
 4496              		.loc 1 517 9 is_stmt 1 view .LVU1505
 518:sieve_extend.c ****             index += step;
 4497              		.loc 1 518 13 view .LVU1506
 4498              	# sieve_extend.c:518:             quadmask[word] |= markmask(index);
 518:sieve_extend.c ****             index += step;
 4499              		.loc 1 518 31 is_stmt 0 view .LVU1507
 4500 1b3e C442C9F7 		shlx	r15, r12, rsi	# tmp372, tmp212, range_start
 4500      FC
 4501              	# sieve_extend.c:519:             index += step;
 519:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4502              		.loc 1 519 19 view .LVU1508
 4503 1b43 4801D6   		add	rsi, rdx	# range_start, step
 4504              	# sieve_extend.c:518:             quadmask[word] |= markmask(index);
 518:sieve_extend.c ****             index += step;
 4505              		.loc 1 518 28 view .LVU1509
 4506 1b46 4C093CC4 		or	QWORD PTR [rsp+rax*8], r15	# quadmask, tmp372
 519:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4507              		.loc 1 519 13 is_stmt 1 view .LVU1510
 520:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4508              		.loc 1 520 13 view .LVU1511
 4509              	# sieve_extend.c:520:             word = wordindex(index) - current_vector_start_word;
 520:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4510              		.loc 1 520 20 is_stmt 0 view .LVU1512
 4511 1b4a 4889F0   		mov	rax, rsi	# tmp373, range_start
 4512 1b4d 48C1E806 		shr	rax, 6	# tmp373,
 4513              	# sieve_extend.c:520:             word = wordindex(index) - current_vector_start_word;
 520:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4514              		.loc 1 520 18 view .LVU1513
 4515 1b51 4C29C0   		sub	rax, r8	# word, current_vector_start_word
 521:sieve_extend.c ****         
 4516              		.loc 1 521 17 is_stmt 1 view .LVU1514
 4517              	# sieve_extend.c:521:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 521:sieve_extend.c ****         
 4518              		.loc 1 521 9 is_stmt 0 view .LVU1515
 4519 1b54 4883F803 		cmp	rax, 3	# word,
 4520 1b58 0F879200 		ja	.L421	#,
 4520      0000
 517:sieve_extend.c ****             quadmask[word] |= markmask(index);
 4521              		.loc 1 517 9 is_stmt 1 view .LVU1516
 518:sieve_extend.c ****             index += step;
 4522              		.loc 1 518 13 view .LVU1517
 4523              	# sieve_extend.c:518:             quadmask[word] |= markmask(index);
 518:sieve_extend.c ****             index += step;
 4524              		.loc 1 518 31 is_stmt 0 view .LVU1518
 4525 1b5e C442C9F7 		shlx	r15, r12, rsi	# tmp375, tmp212, range_start
 4525      FC
 4526              	# sieve_extend.c:519:             index += step;
 519:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4527              		.loc 1 519 19 view .LVU1519
 4528 1b63 4801D6   		add	rsi, rdx	# range_start, step
 4529              	# sieve_extend.c:518:             quadmask[word] |= markmask(index);
 518:sieve_extend.c ****             index += step;
GAS LISTING /tmp/ccr2dACi.s 			page 132


 4530              		.loc 1 518 28 view .LVU1520
 4531 1b66 4C093CC4 		or	QWORD PTR [rsp+rax*8], r15	# quadmask, tmp375
 519:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4532              		.loc 1 519 13 is_stmt 1 view .LVU1521
 520:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4533              		.loc 1 520 13 view .LVU1522
 4534              	# sieve_extend.c:520:             word = wordindex(index) - current_vector_start_word;
 520:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4535              		.loc 1 520 20 is_stmt 0 view .LVU1523
 4536 1b6a 4889F0   		mov	rax, rsi	# tmp376, range_start
 4537 1b6d 48C1E806 		shr	rax, 6	# tmp376,
 4538              	# sieve_extend.c:520:             word = wordindex(index) - current_vector_start_word;
 520:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4539              		.loc 1 520 18 view .LVU1524
 4540 1b71 4C29C0   		sub	rax, r8	# word, current_vector_start_word
 521:sieve_extend.c ****         
 4541              		.loc 1 521 17 is_stmt 1 view .LVU1525
 4542              	# sieve_extend.c:521:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 521:sieve_extend.c ****         
 4543              		.loc 1 521 9 is_stmt 0 view .LVU1526
 4544 1b74 4883F803 		cmp	rax, 3	# word,
 4545 1b78 7776     		ja	.L421	#,
 517:sieve_extend.c ****             quadmask[word] |= markmask(index);
 4546              		.loc 1 517 9 is_stmt 1 view .LVU1527
 518:sieve_extend.c ****             index += step;
 4547              		.loc 1 518 13 view .LVU1528
 4548              	# sieve_extend.c:518:             quadmask[word] |= markmask(index);
 518:sieve_extend.c ****             index += step;
 4549              		.loc 1 518 31 is_stmt 0 view .LVU1529
 4550 1b7a C442C9F7 		shlx	r15, r12, rsi	# tmp378, tmp212, range_start
 4550      FC
 4551              	# sieve_extend.c:519:             index += step;
 519:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4552              		.loc 1 519 19 view .LVU1530
 4553 1b7f 4801D6   		add	rsi, rdx	# range_start, step
 4554              	# sieve_extend.c:518:             quadmask[word] |= markmask(index);
 518:sieve_extend.c ****             index += step;
 4555              		.loc 1 518 28 view .LVU1531
 4556 1b82 4C093CC4 		or	QWORD PTR [rsp+rax*8], r15	# quadmask, tmp378
 519:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4557              		.loc 1 519 13 is_stmt 1 view .LVU1532
 520:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4558              		.loc 1 520 13 view .LVU1533
 4559              	# sieve_extend.c:520:             word = wordindex(index) - current_vector_start_word;
 520:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4560              		.loc 1 520 20 is_stmt 0 view .LVU1534
 4561 1b86 4889F0   		mov	rax, rsi	# tmp379, range_start
 4562 1b89 48C1E806 		shr	rax, 6	# tmp379,
 4563              	# sieve_extend.c:520:             word = wordindex(index) - current_vector_start_word;
 520:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4564              		.loc 1 520 18 view .LVU1535
 4565 1b8d 4C29C0   		sub	rax, r8	# word, current_vector_start_word
 521:sieve_extend.c ****         
 4566              		.loc 1 521 17 is_stmt 1 view .LVU1536
 4567              	# sieve_extend.c:521:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 521:sieve_extend.c ****         
 4568              		.loc 1 521 9 is_stmt 0 view .LVU1537
GAS LISTING /tmp/ccr2dACi.s 			page 133


 4569 1b90 4883F803 		cmp	rax, 3	# word,
 4570 1b94 775A     		ja	.L421	#,
 517:sieve_extend.c ****             quadmask[word] |= markmask(index);
 4571              		.loc 1 517 9 is_stmt 1 view .LVU1538
 518:sieve_extend.c ****             index += step;
 4572              		.loc 1 518 13 view .LVU1539
 4573              	# sieve_extend.c:518:             quadmask[word] |= markmask(index);
 518:sieve_extend.c ****             index += step;
 4574              		.loc 1 518 31 is_stmt 0 view .LVU1540
 4575 1b96 C442C9F7 		shlx	r15, r12, rsi	# tmp381, tmp212, range_start
 4575      FC
 4576              	# sieve_extend.c:519:             index += step;
 519:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4577              		.loc 1 519 19 view .LVU1541
 4578 1b9b 4801D6   		add	rsi, rdx	# range_start, step
 4579              	# sieve_extend.c:518:             quadmask[word] |= markmask(index);
 518:sieve_extend.c ****             index += step;
 4580              		.loc 1 518 28 view .LVU1542
 4581 1b9e 4C093CC4 		or	QWORD PTR [rsp+rax*8], r15	# quadmask, tmp381
 519:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4582              		.loc 1 519 13 is_stmt 1 view .LVU1543
 520:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4583              		.loc 1 520 13 view .LVU1544
 4584              	# sieve_extend.c:520:             word = wordindex(index) - current_vector_start_word;
 520:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4585              		.loc 1 520 20 is_stmt 0 view .LVU1545
 4586 1ba2 4889F0   		mov	rax, rsi	# tmp382, range_start
 4587 1ba5 48C1E806 		shr	rax, 6	# tmp382,
 4588              	# sieve_extend.c:520:             word = wordindex(index) - current_vector_start_word;
 520:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4589              		.loc 1 520 18 view .LVU1546
 4590 1ba9 4C29C0   		sub	rax, r8	# word, current_vector_start_word
 521:sieve_extend.c ****         
 4591              		.loc 1 521 17 is_stmt 1 view .LVU1547
 4592              	# sieve_extend.c:521:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 521:sieve_extend.c ****         
 4593              		.loc 1 521 9 is_stmt 0 view .LVU1548
 4594 1bac 4883F803 		cmp	rax, 3	# word,
 4595 1bb0 773E     		ja	.L421	#,
 517:sieve_extend.c ****             quadmask[word] |= markmask(index);
 4596              		.loc 1 517 9 is_stmt 1 view .LVU1549
 518:sieve_extend.c ****             index += step;
 4597              		.loc 1 518 13 view .LVU1550
 4598              	# sieve_extend.c:518:             quadmask[word] |= markmask(index);
 518:sieve_extend.c ****             index += step;
 4599              		.loc 1 518 31 is_stmt 0 view .LVU1551
 4600 1bb2 C442C9F7 		shlx	r15, r12, rsi	# tmp384, tmp212, range_start
 4600      FC
 4601              	# sieve_extend.c:519:             index += step;
 519:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4602              		.loc 1 519 19 view .LVU1552
 4603 1bb7 4801D6   		add	rsi, rdx	# range_start, step
 4604              	# sieve_extend.c:518:             quadmask[word] |= markmask(index);
 518:sieve_extend.c ****             index += step;
 4605              		.loc 1 518 28 view .LVU1553
 4606 1bba 4C093CC4 		or	QWORD PTR [rsp+rax*8], r15	# quadmask, tmp384
 519:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
GAS LISTING /tmp/ccr2dACi.s 			page 134


 4607              		.loc 1 519 13 is_stmt 1 view .LVU1554
 520:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4608              		.loc 1 520 13 view .LVU1555
 4609              	# sieve_extend.c:520:             word = wordindex(index) - current_vector_start_word;
 520:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4610              		.loc 1 520 20 is_stmt 0 view .LVU1556
 4611 1bbe 4889F0   		mov	rax, rsi	# tmp385, range_start
 4612 1bc1 48C1E806 		shr	rax, 6	# tmp385,
 4613              	# sieve_extend.c:520:             word = wordindex(index) - current_vector_start_word;
 520:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4614              		.loc 1 520 18 view .LVU1557
 4615 1bc5 4C29C0   		sub	rax, r8	# word, current_vector_start_word
 521:sieve_extend.c ****         
 4616              		.loc 1 521 17 is_stmt 1 view .LVU1558
 4617              	# sieve_extend.c:521:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 521:sieve_extend.c ****         
 4618              		.loc 1 521 9 is_stmt 0 view .LVU1559
 4619 1bc8 4883F803 		cmp	rax, 3	# word,
 4620 1bcc 7722     		ja	.L421	#,
 517:sieve_extend.c ****             quadmask[word] |= markmask(index);
 4621              		.loc 1 517 9 is_stmt 1 view .LVU1560
 518:sieve_extend.c ****             index += step;
 4622              		.loc 1 518 13 view .LVU1561
 4623              	# sieve_extend.c:518:             quadmask[word] |= markmask(index);
 518:sieve_extend.c ****             index += step;
 4624              		.loc 1 518 31 is_stmt 0 view .LVU1562
 4625 1bce C442C9F7 		shlx	r15, r12, rsi	# tmp387, tmp212, range_start
 4625      FC
 4626              	# sieve_extend.c:519:             index += step;
 519:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4627              		.loc 1 519 19 view .LVU1563
 4628 1bd3 4801D6   		add	rsi, rdx	# range_start, step
 4629              	# sieve_extend.c:518:             quadmask[word] |= markmask(index);
 518:sieve_extend.c ****             index += step;
 4630              		.loc 1 518 28 view .LVU1564
 4631 1bd6 4C093CC4 		or	QWORD PTR [rsp+rax*8], r15	# quadmask, tmp387
 519:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4632              		.loc 1 519 13 is_stmt 1 view .LVU1565
 520:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4633              		.loc 1 520 13 view .LVU1566
 4634              	# sieve_extend.c:520:             word = wordindex(index) - current_vector_start_word;
 520:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4635              		.loc 1 520 20 is_stmt 0 view .LVU1567
 4636 1bda 4889F0   		mov	rax, rsi	# tmp388, range_start
 4637 1bdd 48C1E806 		shr	rax, 6	# tmp388,
 4638              	.LVL198:
 4639              	# sieve_extend.c:520:             word = wordindex(index) - current_vector_start_word;
 520:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4640              		.loc 1 520 18 view .LVU1568
 4641 1be1 4C29C0   		sub	rax, r8	# word, current_vector_start_word
 4642              	.LVL199:
 521:sieve_extend.c ****         
 4643              		.loc 1 521 17 is_stmt 1 view .LVU1569
 4644              	# sieve_extend.c:521:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 521:sieve_extend.c ****         
 4645              		.loc 1 521 9 is_stmt 0 view .LVU1570
 4646 1be4 4883F803 		cmp	rax, 3	# word,
GAS LISTING /tmp/ccr2dACi.s 			page 135


 4647 1be8 0F8610FF 		jbe	.L274	#,
 4647      FFFF
 4648              	.LVL200:
 4649 1bee 6690     		.p2align 4
 4650              		.p2align 3
 4651              	.L421:
 524:sieve_extend.c ****         const counter_t range_stop_vector = vectorindex(range_stop);
 4652              		.loc 1 524 9 is_stmt 1 view .LVU1571
 525:sieve_extend.c **** 
 4653              		.loc 1 525 9 view .LVU1572
 527:sieve_extend.c **** 
 4654              		.loc 1 527 9 view .LVU1573
 4655              	.LBB351:
 4656              	.LBB343:
 4657              	# sieve_extend.c:426:    register bitvector_t* __restrict index_ptr      =  __builtin_assume_aligne
 426:sieve_extend.c ****    register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_st
 4658              		.loc 1 426 89 is_stmt 0 view .LVU1574
 4659 1bf0 49C1E605 		sal	r14, 5	# _31,
 4660              	.LVL201:
 426:sieve_extend.c ****    register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_st
 4661              		.loc 1 426 89 view .LVU1575
 4662              	.LBE343:
 4663              	.LBE351:
 4664              	# sieve_extend.c:527:         applyMask_vector(bitarray_vector, step, range_stop, quadmask, current
 527:sieve_extend.c **** 
 4665              		.loc 1 527 9 view .LVU1576
 4666 1bf4 C5FD6F04 		vmovdqa	ymm0, YMMWORD PTR [rsp]	# quadmask.57_38, quadmask
 4666      24
 4667              	.LVL202:
 4668              	.LBB352:
 424:sieve_extend.c ****    const counter_t range_stop_vector = vectorindex(range_stop);
 4669              		.loc 1 424 20 is_stmt 1 view .LVU1577
 4670              	.LBB344:
 425:sieve_extend.c ****    register bitvector_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_vect
 4671              		.loc 1 425 4 view .LVU1578
 426:sieve_extend.c ****    register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_st
 4672              		.loc 1 426 4 view .LVU1579
 4673              	# sieve_extend.c:426:    register bitvector_t* __restrict index_ptr      =  __builtin_assume_aligne
 426:sieve_extend.c ****    register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_st
 4674              		.loc 1 426 80 is_stmt 0 view .LVU1580
 4675 1bf9 4901FE   		add	r14, rdi	# index_ptr, bitarray_word
 4676              	.LVL203:
 427:sieve_extend.c **** 
 4677              		.loc 1 427 4 is_stmt 1 view .LVU1581
 431:sieve_extend.c ****        *index_ptr |= mask;
 4678              		.loc 1 431 4 view .LVU1582
 431:sieve_extend.c ****        *index_ptr |= mask;
 4679              		.loc 1 431 10 view .LVU1583
 4680 1bfc 4D39DE   		cmp	r14, r11	# index_ptr, fast_loop_ptr
 4681 1bff 0F832B01 		jnb	.L275	#,
 4681      0000
 4682 1c05 4F8D042E 		lea	r8, [r14+r13]	# ivtmp.294,
 4683              	.LVL204:
 4684              	.L276:
 432:sieve_extend.c ****        index_ptr+=step;
 4685              		.loc 1 432 8 view .LVU1584
 4686              	# sieve_extend.c:432:        *index_ptr |= mask;
GAS LISTING /tmp/ccr2dACi.s 			page 136


 432:sieve_extend.c ****        index_ptr+=step;
 4687              		.loc 1 432 19 is_stmt 0 view .LVU1585
 4688 1c09 C4C17DEB 		vpor	ymm1, ymm0, YMMWORD PTR [r14]	# tmp215, quadmask.57_38, MEM[base: index_ptr_144, offset: 0B]
 4688      0E
 4689 1c0e C4C17D7F 		vmovdqa	YMMWORD PTR [r14], ymm1	# MEM[base: index_ptr_144, offset: 0B], tmp215
 4689      0E
 433:sieve_extend.c ****        *index_ptr |= mask;
 4690              		.loc 1 433 8 is_stmt 1 view .LVU1586
 4691              	.LVL205:
 434:sieve_extend.c ****        index_ptr+=step;
 4692              		.loc 1 434 8 view .LVU1587
 4693              	# sieve_extend.c:434:        *index_ptr |= mask;
 434:sieve_extend.c ****        index_ptr+=step;
 4694              		.loc 1 434 19 is_stmt 0 view .LVU1588
 4695 1c13 C4C17DEB 		vpor	ymm3, ymm0, YMMWORD PTR [r14+rcx]	# tmp216, quadmask.57_38, MEM[base: index_ptr_144, index: _
 4695      1C0E
 4696 1c19 C4C17D7F 		vmovdqa	YMMWORD PTR [r14+rcx], ymm3	# MEM[base: index_ptr_144, index: _85, offset: 0B], tmp216
 4696      1C0E
 435:sieve_extend.c ****        *index_ptr |= mask;
 4697              		.loc 1 435 8 is_stmt 1 view .LVU1589
 4698              	.LVL206:
 436:sieve_extend.c ****        index_ptr+=step;
 4699              		.loc 1 436 8 view .LVU1590
 4700              	# sieve_extend.c:436:        *index_ptr |= mask;
 436:sieve_extend.c ****        index_ptr+=step;
 4701              		.loc 1 436 19 is_stmt 0 view .LVU1591
 4702 1c1f C4C17DEB 		vpor	ymm4, ymm0, YMMWORD PTR [r8]	# tmp217, quadmask.57_38, MEM[base: _203, offset: 0B]
 4702      20
 4703 1c24 C4C17D7F 		vmovdqa	YMMWORD PTR [r8], ymm4	# MEM[base: _203, offset: 0B], tmp217
 4703      20
 437:sieve_extend.c ****        *index_ptr |= mask;
 4704              		.loc 1 437 8 is_stmt 1 view .LVU1592
 4705              	.LVL207:
 438:sieve_extend.c ****        index_ptr+=step;
 4706              		.loc 1 438 8 view .LVU1593
 4707              	# sieve_extend.c:438:        *index_ptr |= mask;
 438:sieve_extend.c ****        index_ptr+=step;
 4708              		.loc 1 438 19 is_stmt 0 view .LVU1594
 4709 1c29 C4C17DEB 		vpor	ymm5, ymm0, YMMWORD PTR [r8+rcx]	# tmp218, quadmask.57_38, MEM[base: _203, index: _85, offset
 4709      2C08
 4710 1c2f C4C17D7F 		vmovdqa	YMMWORD PTR [r8+rcx], ymm5	# MEM[base: _203, index: _85, offset: 0B], tmp218
 4710      2C08
 439:sieve_extend.c ****        *index_ptr |= mask;
 4711              		.loc 1 439 8 is_stmt 1 view .LVU1595
 4712              	.LVL208:
 440:sieve_extend.c ****        index_ptr+=step;
 4713              		.loc 1 440 8 view .LVU1596
 4714 1c35 4901D8   		add	r8, rbx	# ivtmp.294, tmp207
 4715              	# sieve_extend.c:440:        *index_ptr |= mask;
 440:sieve_extend.c ****        index_ptr+=step;
 4716              		.loc 1 440 19 is_stmt 0 view .LVU1597
 4717 1c38 C4C17DEB 		vpor	ymm6, ymm0, YMMWORD PTR [r14+rcx*4]	# tmp219, quadmask.57_38, MEM[base: index_ptr_144, index:
 4717      348E
 4718 1c3e C4C17D7F 		vmovdqa	YMMWORD PTR [r14+rcx*4], ymm6	# MEM[base: index_ptr_144, index: _85, step: 4, offset: 0B],
 4718      348E
 441:sieve_extend.c ****    }
 4719              		.loc 1 441 8 is_stmt 1 view .LVU1598
GAS LISTING /tmp/ccr2dACi.s 			page 137


 4720 1c44 4901DE   		add	r14, rbx	# index_ptr, tmp207
 4721              	.LVL209:
 431:sieve_extend.c ****        *index_ptr |= mask;
 4722              		.loc 1 431 10 view .LVU1599
 4723 1c47 4D39F3   		cmp	r11, r14	# fast_loop_ptr, index_ptr
 4724 1c4a 0F86E000 		jbe	.L275	#,
 4724      0000
 432:sieve_extend.c ****        index_ptr+=step;
 4725              		.loc 1 432 8 view .LVU1600
 4726              	# sieve_extend.c:432:        *index_ptr |= mask;
 432:sieve_extend.c ****        index_ptr+=step;
 4727              		.loc 1 432 19 is_stmt 0 view .LVU1601
 4728 1c50 C4C17DEB 		vpor	ymm7, ymm0, YMMWORD PTR [r14]	# tmp352, quadmask.57_38, MEM[base: index_ptr_144, offset: 0B]
 4728      3E
 4729 1c55 C4C17D7F 		vmovdqa	YMMWORD PTR [r14], ymm7	# MEM[base: index_ptr_144, offset: 0B], tmp352
 4729      3E
 433:sieve_extend.c ****        *index_ptr |= mask;
 4730              		.loc 1 433 8 is_stmt 1 view .LVU1602
 4731              	.LVL210:
 434:sieve_extend.c ****        index_ptr+=step;
 4732              		.loc 1 434 8 view .LVU1603
 4733              	# sieve_extend.c:434:        *index_ptr |= mask;
 434:sieve_extend.c ****        index_ptr+=step;
 4734              		.loc 1 434 19 is_stmt 0 view .LVU1604
 4735 1c5a C4417DEB 		vpor	ymm8, ymm0, YMMWORD PTR [r14+rcx]	# tmp353, quadmask.57_38, MEM[base: index_ptr_144, index: _
 4735      040E
 4736 1c60 C4417D7F 		vmovdqa	YMMWORD PTR [r14+rcx], ymm8	# MEM[base: index_ptr_144, index: _85, offset: 0B], tmp353
 4736      040E
 435:sieve_extend.c ****        *index_ptr |= mask;
 4737              		.loc 1 435 8 is_stmt 1 view .LVU1605
 4738              	.LVL211:
 436:sieve_extend.c ****        index_ptr+=step;
 4739              		.loc 1 436 8 view .LVU1606
 4740              	# sieve_extend.c:436:        *index_ptr |= mask;
 436:sieve_extend.c ****        index_ptr+=step;
 4741              		.loc 1 436 19 is_stmt 0 view .LVU1607
 4742 1c66 C4417DEB 		vpor	ymm9, ymm0, YMMWORD PTR [r8]	# tmp354, quadmask.57_38, MEM[base: _203, offset: 0B]
 4742      08
 4743 1c6b C4417D7F 		vmovdqa	YMMWORD PTR [r8], ymm9	# MEM[base: _203, offset: 0B], tmp354
 4743      08
 437:sieve_extend.c ****        *index_ptr |= mask;
 4744              		.loc 1 437 8 is_stmt 1 view .LVU1608
 4745              	.LVL212:
 438:sieve_extend.c ****        index_ptr+=step;
 4746              		.loc 1 438 8 view .LVU1609
 4747              	# sieve_extend.c:438:        *index_ptr |= mask;
 438:sieve_extend.c ****        index_ptr+=step;
 4748              		.loc 1 438 19 is_stmt 0 view .LVU1610
 4749 1c70 C4417DEB 		vpor	ymm10, ymm0, YMMWORD PTR [r8+rcx]	# tmp355, quadmask.57_38, MEM[base: _203, index: _85, offse
 4749      1408
 4750 1c76 C4417D7F 		vmovdqa	YMMWORD PTR [r8+rcx], ymm10	# MEM[base: _203, index: _85, offset: 0B], tmp355
 4750      1408
 439:sieve_extend.c ****        *index_ptr |= mask;
 4751              		.loc 1 439 8 is_stmt 1 view .LVU1611
 4752              	.LVL213:
 440:sieve_extend.c ****        index_ptr+=step;
 4753              		.loc 1 440 8 view .LVU1612
GAS LISTING /tmp/ccr2dACi.s 			page 138


 4754 1c7c 4901D8   		add	r8, rbx	# ivtmp.294, tmp207
 4755              	# sieve_extend.c:440:        *index_ptr |= mask;
 440:sieve_extend.c ****        index_ptr+=step;
 4756              		.loc 1 440 19 is_stmt 0 view .LVU1613
 4757 1c7f C4417DEB 		vpor	ymm11, ymm0, YMMWORD PTR [r14+rcx*4]	# tmp356, quadmask.57_38, MEM[base: index_ptr_144, index
 4757      1C8E
 4758 1c85 C4417D7F 		vmovdqa	YMMWORD PTR [r14+rcx*4], ymm11	# MEM[base: index_ptr_144, index: _85, step: 4, offset: 0B]
 4758      1C8E
 441:sieve_extend.c ****    }
 4759              		.loc 1 441 8 is_stmt 1 view .LVU1614
 4760 1c8b 4901DE   		add	r14, rbx	# index_ptr, tmp207
 4761              	.LVL214:
 431:sieve_extend.c ****        *index_ptr |= mask;
 4762              		.loc 1 431 10 view .LVU1615
 4763 1c8e 4D39F3   		cmp	r11, r14	# fast_loop_ptr, index_ptr
 4764 1c91 0F869900 		jbe	.L275	#,
 4764      0000
 432:sieve_extend.c ****        index_ptr+=step;
 4765              		.loc 1 432 8 view .LVU1616
 4766              	# sieve_extend.c:432:        *index_ptr |= mask;
 432:sieve_extend.c ****        index_ptr+=step;
 4767              		.loc 1 432 19 is_stmt 0 view .LVU1617
 4768 1c97 C4417DEB 		vpor	ymm12, ymm0, YMMWORD PTR [r14]	# tmp358, quadmask.57_38, MEM[base: index_ptr_144, offset: 0B]
 4768      26
 4769 1c9c C4417D7F 		vmovdqa	YMMWORD PTR [r14], ymm12	# MEM[base: index_ptr_144, offset: 0B], tmp358
 4769      26
 433:sieve_extend.c ****        *index_ptr |= mask;
 4770              		.loc 1 433 8 is_stmt 1 view .LVU1618
 4771              	.LVL215:
 434:sieve_extend.c ****        index_ptr+=step;
 4772              		.loc 1 434 8 view .LVU1619
 4773              	# sieve_extend.c:434:        *index_ptr |= mask;
 434:sieve_extend.c ****        index_ptr+=step;
 4774              		.loc 1 434 19 is_stmt 0 view .LVU1620
 4775 1ca1 C4417DEB 		vpor	ymm13, ymm0, YMMWORD PTR [r14+rcx]	# tmp359, quadmask.57_38, MEM[base: index_ptr_144, index: 
 4775      2C0E
 4776 1ca7 C4417D7F 		vmovdqa	YMMWORD PTR [r14+rcx], ymm13	# MEM[base: index_ptr_144, index: _85, offset: 0B], tmp359
 4776      2C0E
 435:sieve_extend.c ****        *index_ptr |= mask;
 4777              		.loc 1 435 8 is_stmt 1 view .LVU1621
 4778              	.LVL216:
 436:sieve_extend.c ****        index_ptr+=step;
 4779              		.loc 1 436 8 view .LVU1622
 4780              	# sieve_extend.c:436:        *index_ptr |= mask;
 436:sieve_extend.c ****        index_ptr+=step;
 4781              		.loc 1 436 19 is_stmt 0 view .LVU1623
 4782 1cad C4417DEB 		vpor	ymm14, ymm0, YMMWORD PTR [r8]	# tmp360, quadmask.57_38, MEM[base: _203, offset: 0B]
 4782      30
 4783 1cb2 C4417D7F 		vmovdqa	YMMWORD PTR [r8], ymm14	# MEM[base: _203, offset: 0B], tmp360
 4783      30
 437:sieve_extend.c ****        *index_ptr |= mask;
 4784              		.loc 1 437 8 is_stmt 1 view .LVU1624
 4785              	.LVL217:
 438:sieve_extend.c ****        index_ptr+=step;
 4786              		.loc 1 438 8 view .LVU1625
 4787              	# sieve_extend.c:438:        *index_ptr |= mask;
 438:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/ccr2dACi.s 			page 139


 4788              		.loc 1 438 19 is_stmt 0 view .LVU1626
 4789 1cb7 C4417DEB 		vpor	ymm15, ymm0, YMMWORD PTR [r8+rcx]	# tmp361, quadmask.57_38, MEM[base: _203, index: _85, offse
 4789      3C08
 4790 1cbd C4417D7F 		vmovdqa	YMMWORD PTR [r8+rcx], ymm15	# MEM[base: _203, index: _85, offset: 0B], tmp361
 4790      3C08
 439:sieve_extend.c ****        *index_ptr |= mask;
 4791              		.loc 1 439 8 is_stmt 1 view .LVU1627
 4792              	.LVL218:
 440:sieve_extend.c ****        index_ptr+=step;
 4793              		.loc 1 440 8 view .LVU1628
 4794 1cc3 4901D8   		add	r8, rbx	# ivtmp.294, tmp207
 4795              	# sieve_extend.c:440:        *index_ptr |= mask;
 440:sieve_extend.c ****        index_ptr+=step;
 4796              		.loc 1 440 19 is_stmt 0 view .LVU1629
 4797 1cc6 C4C17DEB 		vpor	ymm1, ymm0, YMMWORD PTR [r14+rcx*4]	# tmp362, quadmask.57_38, MEM[base: index_ptr_144, index:
 4797      0C8E
 4798 1ccc C4C17D7F 		vmovdqa	YMMWORD PTR [r14+rcx*4], ymm1	# MEM[base: index_ptr_144, index: _85, step: 4, offset: 0B],
 4798      0C8E
 441:sieve_extend.c ****    }
 4799              		.loc 1 441 8 is_stmt 1 view .LVU1630
 4800 1cd2 4901DE   		add	r14, rbx	# index_ptr, tmp207
 4801              	.LVL219:
 431:sieve_extend.c ****        *index_ptr |= mask;
 4802              		.loc 1 431 10 view .LVU1631
 4803 1cd5 4D39F3   		cmp	r11, r14	# fast_loop_ptr, index_ptr
 4804 1cd8 7656     		jbe	.L275	#,
 432:sieve_extend.c ****        index_ptr+=step;
 4805              		.loc 1 432 8 view .LVU1632
 4806              	# sieve_extend.c:432:        *index_ptr |= mask;
 432:sieve_extend.c ****        index_ptr+=step;
 4807              		.loc 1 432 19 is_stmt 0 view .LVU1633
 4808 1cda C4C17DEB 		vpor	ymm3, ymm0, YMMWORD PTR [r14]	# tmp364, quadmask.57_38, MEM[base: index_ptr_144, offset: 0B]
 4808      1E
 4809 1cdf C4C17D7F 		vmovdqa	YMMWORD PTR [r14], ymm3	# MEM[base: index_ptr_144, offset: 0B], tmp364
 4809      1E
 433:sieve_extend.c ****        *index_ptr |= mask;
 4810              		.loc 1 433 8 is_stmt 1 view .LVU1634
 4811              	.LVL220:
 434:sieve_extend.c ****        index_ptr+=step;
 4812              		.loc 1 434 8 view .LVU1635
 4813              	# sieve_extend.c:434:        *index_ptr |= mask;
 434:sieve_extend.c ****        index_ptr+=step;
 4814              		.loc 1 434 19 is_stmt 0 view .LVU1636
 4815 1ce4 C4C17DEB 		vpor	ymm4, ymm0, YMMWORD PTR [r14+rcx]	# tmp365, quadmask.57_38, MEM[base: index_ptr_144, index: _
 4815      240E
 4816 1cea C4C17D7F 		vmovdqa	YMMWORD PTR [r14+rcx], ymm4	# MEM[base: index_ptr_144, index: _85, offset: 0B], tmp365
 4816      240E
 435:sieve_extend.c ****        *index_ptr |= mask;
 4817              		.loc 1 435 8 is_stmt 1 view .LVU1637
 4818              	.LVL221:
 436:sieve_extend.c ****        index_ptr+=step;
 4819              		.loc 1 436 8 view .LVU1638
 4820              	# sieve_extend.c:436:        *index_ptr |= mask;
 436:sieve_extend.c ****        index_ptr+=step;
 4821              		.loc 1 436 19 is_stmt 0 view .LVU1639
 4822 1cf0 C4C17DEB 		vpor	ymm5, ymm0, YMMWORD PTR [r8]	# tmp366, quadmask.57_38, MEM[base: _203, offset: 0B]
 4822      28
GAS LISTING /tmp/ccr2dACi.s 			page 140


 4823 1cf5 C4C17D7F 		vmovdqa	YMMWORD PTR [r8], ymm5	# MEM[base: _203, offset: 0B], tmp366
 4823      28
 437:sieve_extend.c ****        *index_ptr |= mask;
 4824              		.loc 1 437 8 is_stmt 1 view .LVU1640
 4825              	.LVL222:
 438:sieve_extend.c ****        index_ptr+=step;
 4826              		.loc 1 438 8 view .LVU1641
 4827              	# sieve_extend.c:438:        *index_ptr |= mask;
 438:sieve_extend.c ****        index_ptr+=step;
 4828              		.loc 1 438 19 is_stmt 0 view .LVU1642
 4829 1cfa C4C17DEB 		vpor	ymm6, ymm0, YMMWORD PTR [r8+rcx]	# tmp367, quadmask.57_38, MEM[base: _203, index: _85, offset
 4829      3408
 4830 1d00 C4C17D7F 		vmovdqa	YMMWORD PTR [r8+rcx], ymm6	# MEM[base: _203, index: _85, offset: 0B], tmp367
 4830      3408
 439:sieve_extend.c ****        *index_ptr |= mask;
 4831              		.loc 1 439 8 is_stmt 1 view .LVU1643
 4832              	.LVL223:
 440:sieve_extend.c ****        index_ptr+=step;
 4833              		.loc 1 440 8 view .LVU1644
 4834 1d06 4901D8   		add	r8, rbx	# ivtmp.294, tmp207
 4835              	# sieve_extend.c:440:        *index_ptr |= mask;
 440:sieve_extend.c ****        index_ptr+=step;
 4836              		.loc 1 440 19 is_stmt 0 view .LVU1645
 4837 1d09 C4C17DEB 		vpor	ymm7, ymm0, YMMWORD PTR [r14+rcx*4]	# tmp368, quadmask.57_38, MEM[base: index_ptr_144, index:
 4837      3C8E
 4838 1d0f C4C17D7F 		vmovdqa	YMMWORD PTR [r14+rcx*4], ymm7	# MEM[base: index_ptr_144, index: _85, step: 4, offset: 0B],
 4838      3C8E
 441:sieve_extend.c ****    }
 4839              		.loc 1 441 8 is_stmt 1 view .LVU1646
 4840 1d15 4901DE   		add	r14, rbx	# index_ptr, tmp207
 4841              	.LVL224:
 431:sieve_extend.c ****        *index_ptr |= mask;
 4842              		.loc 1 431 10 view .LVU1647
 4843 1d18 4D39F3   		cmp	r11, r14	# fast_loop_ptr, index_ptr
 4844 1d1b 0F87E8FE 		ja	.L276	#,
 4844      FFFF
 4845 1d21 66662E0F 		.p2align 4
 4845      1F840000 
 4845      0000000F 
 4845      1F4000
 4846              		.p2align 3
 4847              	.L275:
 444:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 4848              		.loc 1 444 4 view .LVU1648
 445:sieve_extend.c ****        *index_ptr |= mask;
 4849              		.loc 1 445 4 view .LVU1649
 445:sieve_extend.c ****        *index_ptr |= mask;
 4850              		.loc 1 445 10 view .LVU1650
 4851 1d30 4D39F1   		cmp	r9, r14	# range_stop_ptr, index_ptr
 4852 1d33 0F86A700 		jbe	.L277	#,
 4852      0000
 4853              	.L278:
 446:sieve_extend.c ****        index_ptr+=step;
 4854              		.loc 1 446 8 view .LVU1651
 4855              	# sieve_extend.c:446:        *index_ptr |= mask;
 446:sieve_extend.c ****        index_ptr+=step;
 4856              		.loc 1 446 19 is_stmt 0 view .LVU1652
GAS LISTING /tmp/ccr2dACi.s 			page 141


 4857 1d39 C4417DEB 		vpor	ymm8, ymm0, YMMWORD PTR [r14]	# tmp220, quadmask.57_38, MEM[base: index_ptr_145, offset: 0B]
 4857      06
 4858 1d3e C4417D7F 		vmovdqa	YMMWORD PTR [r14], ymm8	# MEM[base: index_ptr_145, offset: 0B], tmp220
 4858      06
 447:sieve_extend.c ****    }
 4859              		.loc 1 447 8 is_stmt 1 view .LVU1653
 4860              	# sieve_extend.c:447:        index_ptr+=step;
 447:sieve_extend.c ****    }
 4861              		.loc 1 447 17 is_stmt 0 view .LVU1654
 4862 1d43 4901CE   		add	r14, rcx	# index_ptr, _85
 4863              	.LVL225:
 445:sieve_extend.c ****        *index_ptr |= mask;
 4864              		.loc 1 445 10 is_stmt 1 view .LVU1655
 4865 1d46 4D39F1   		cmp	r9, r14	# range_stop_ptr, index_ptr
 4866 1d49 0F869100 		jbe	.L277	#,
 4866      0000
 446:sieve_extend.c ****        index_ptr+=step;
 4867              		.loc 1 446 8 view .LVU1656
 4868              	# sieve_extend.c:446:        *index_ptr |= mask;
 446:sieve_extend.c ****        index_ptr+=step;
 4869              		.loc 1 446 19 is_stmt 0 view .LVU1657
 4870 1d4f C4417DEB 		vpor	ymm9, ymm0, YMMWORD PTR [r14]	# tmp345, quadmask.57_38, MEM[base: index_ptr_145, offset: 0B]
 4870      0E
 4871 1d54 C4417D7F 		vmovdqa	YMMWORD PTR [r14], ymm9	# MEM[base: index_ptr_145, offset: 0B], tmp345
 4871      0E
 447:sieve_extend.c ****    }
 4872              		.loc 1 447 8 is_stmt 1 view .LVU1658
 4873              	# sieve_extend.c:447:        index_ptr+=step;
 447:sieve_extend.c ****    }
 4874              		.loc 1 447 17 is_stmt 0 view .LVU1659
 4875 1d59 4901CE   		add	r14, rcx	# index_ptr, _85
 4876              	.LVL226:
 445:sieve_extend.c ****        *index_ptr |= mask;
 4877              		.loc 1 445 10 is_stmt 1 view .LVU1660
 4878 1d5c 4D39F1   		cmp	r9, r14	# range_stop_ptr, index_ptr
 4879 1d5f 767F     		jbe	.L277	#,
 446:sieve_extend.c ****        index_ptr+=step;
 4880              		.loc 1 446 8 view .LVU1661
 4881              	# sieve_extend.c:446:        *index_ptr |= mask;
 446:sieve_extend.c ****        index_ptr+=step;
 4882              		.loc 1 446 19 is_stmt 0 view .LVU1662
 4883 1d61 C4417DEB 		vpor	ymm10, ymm0, YMMWORD PTR [r14]	# tmp346, quadmask.57_38, MEM[base: index_ptr_145, offset: 0B]
 4883      16
 4884 1d66 C4417D7F 		vmovdqa	YMMWORD PTR [r14], ymm10	# MEM[base: index_ptr_145, offset: 0B], tmp346
 4884      16
 447:sieve_extend.c ****    }
 4885              		.loc 1 447 8 is_stmt 1 view .LVU1663
 4886              	# sieve_extend.c:447:        index_ptr+=step;
 447:sieve_extend.c ****    }
 4887              		.loc 1 447 17 is_stmt 0 view .LVU1664
 4888 1d6b 4901CE   		add	r14, rcx	# index_ptr, _85
 4889              	.LVL227:
 445:sieve_extend.c ****        *index_ptr |= mask;
 4890              		.loc 1 445 10 is_stmt 1 view .LVU1665
 4891 1d6e 4D39F1   		cmp	r9, r14	# range_stop_ptr, index_ptr
 4892 1d71 766D     		jbe	.L277	#,
 446:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/ccr2dACi.s 			page 142


 4893              		.loc 1 446 8 view .LVU1666
 4894              	# sieve_extend.c:446:        *index_ptr |= mask;
 446:sieve_extend.c ****        index_ptr+=step;
 4895              		.loc 1 446 19 is_stmt 0 view .LVU1667
 4896 1d73 C4417DEB 		vpor	ymm11, ymm0, YMMWORD PTR [r14]	# tmp347, quadmask.57_38, MEM[base: index_ptr_145, offset: 0B]
 4896      1E
 4897 1d78 C4417D7F 		vmovdqa	YMMWORD PTR [r14], ymm11	# MEM[base: index_ptr_145, offset: 0B], tmp347
 4897      1E
 447:sieve_extend.c ****    }
 4898              		.loc 1 447 8 is_stmt 1 view .LVU1668
 4899              	# sieve_extend.c:447:        index_ptr+=step;
 447:sieve_extend.c ****    }
 4900              		.loc 1 447 17 is_stmt 0 view .LVU1669
 4901 1d7d 4901CE   		add	r14, rcx	# index_ptr, _85
 4902              	.LVL228:
 445:sieve_extend.c ****        *index_ptr |= mask;
 4903              		.loc 1 445 10 is_stmt 1 view .LVU1670
 4904 1d80 4D39F1   		cmp	r9, r14	# range_stop_ptr, index_ptr
 4905 1d83 765B     		jbe	.L277	#,
 446:sieve_extend.c ****        index_ptr+=step;
 4906              		.loc 1 446 8 view .LVU1671
 4907              	# sieve_extend.c:446:        *index_ptr |= mask;
 446:sieve_extend.c ****        index_ptr+=step;
 4908              		.loc 1 446 19 is_stmt 0 view .LVU1672
 4909 1d85 C4417DEB 		vpor	ymm12, ymm0, YMMWORD PTR [r14]	# tmp348, quadmask.57_38, MEM[base: index_ptr_145, offset: 0B]
 4909      26
 4910 1d8a C4417D7F 		vmovdqa	YMMWORD PTR [r14], ymm12	# MEM[base: index_ptr_145, offset: 0B], tmp348
 4910      26
 447:sieve_extend.c ****    }
 4911              		.loc 1 447 8 is_stmt 1 view .LVU1673
 4912              	# sieve_extend.c:447:        index_ptr+=step;
 447:sieve_extend.c ****    }
 4913              		.loc 1 447 17 is_stmt 0 view .LVU1674
 4914 1d8f 4901CE   		add	r14, rcx	# index_ptr, _85
 4915              	.LVL229:
 445:sieve_extend.c ****        *index_ptr |= mask;
 4916              		.loc 1 445 10 is_stmt 1 view .LVU1675
 4917 1d92 4D39F1   		cmp	r9, r14	# range_stop_ptr, index_ptr
 4918 1d95 7649     		jbe	.L277	#,
 446:sieve_extend.c ****        index_ptr+=step;
 4919              		.loc 1 446 8 view .LVU1676
 4920              	# sieve_extend.c:446:        *index_ptr |= mask;
 446:sieve_extend.c ****        index_ptr+=step;
 4921              		.loc 1 446 19 is_stmt 0 view .LVU1677
 4922 1d97 C4417DEB 		vpor	ymm13, ymm0, YMMWORD PTR [r14]	# tmp349, quadmask.57_38, MEM[base: index_ptr_145, offset: 0B]
 4922      2E
 4923 1d9c C4417D7F 		vmovdqa	YMMWORD PTR [r14], ymm13	# MEM[base: index_ptr_145, offset: 0B], tmp349
 4923      2E
 447:sieve_extend.c ****    }
 4924              		.loc 1 447 8 is_stmt 1 view .LVU1678
 4925              	# sieve_extend.c:447:        index_ptr+=step;
 447:sieve_extend.c ****    }
 4926              		.loc 1 447 17 is_stmt 0 view .LVU1679
 4927 1da1 4901CE   		add	r14, rcx	# index_ptr, _85
 4928              	.LVL230:
 445:sieve_extend.c ****        *index_ptr |= mask;
 4929              		.loc 1 445 10 is_stmt 1 view .LVU1680
GAS LISTING /tmp/ccr2dACi.s 			page 143


 4930 1da4 4D39F1   		cmp	r9, r14	# range_stop_ptr, index_ptr
 4931 1da7 7637     		jbe	.L277	#,
 446:sieve_extend.c ****        index_ptr+=step;
 4932              		.loc 1 446 8 view .LVU1681
 4933              	# sieve_extend.c:446:        *index_ptr |= mask;
 446:sieve_extend.c ****        index_ptr+=step;
 4934              		.loc 1 446 19 is_stmt 0 view .LVU1682
 4935 1da9 C4417DEB 		vpor	ymm14, ymm0, YMMWORD PTR [r14]	# tmp350, quadmask.57_38, MEM[base: index_ptr_145, offset: 0B]
 4935      36
 4936 1dae C4417D7F 		vmovdqa	YMMWORD PTR [r14], ymm14	# MEM[base: index_ptr_145, offset: 0B], tmp350
 4936      36
 447:sieve_extend.c ****    }
 4937              		.loc 1 447 8 is_stmt 1 view .LVU1683
 4938              	# sieve_extend.c:447:        index_ptr+=step;
 447:sieve_extend.c ****    }
 4939              		.loc 1 447 17 is_stmt 0 view .LVU1684
 4940 1db3 4901CE   		add	r14, rcx	# index_ptr, _85
 4941              	.LVL231:
 445:sieve_extend.c ****        *index_ptr |= mask;
 4942              		.loc 1 445 10 is_stmt 1 view .LVU1685
 4943 1db6 4D39F1   		cmp	r9, r14	# range_stop_ptr, index_ptr
 4944 1db9 7625     		jbe	.L277	#,
 446:sieve_extend.c ****        index_ptr+=step;
 4945              		.loc 1 446 8 view .LVU1686
 4946              	# sieve_extend.c:446:        *index_ptr |= mask;
 446:sieve_extend.c ****        index_ptr+=step;
 4947              		.loc 1 446 19 is_stmt 0 view .LVU1687
 4948 1dbb C4417DEB 		vpor	ymm15, ymm0, YMMWORD PTR [r14]	# tmp351, quadmask.57_38, MEM[base: index_ptr_145, offset: 0B]
 4948      3E
 4949 1dc0 C4417D7F 		vmovdqa	YMMWORD PTR [r14], ymm15	# MEM[base: index_ptr_145, offset: 0B], tmp351
 4949      3E
 447:sieve_extend.c ****    }
 4950              		.loc 1 447 8 is_stmt 1 view .LVU1688
 4951              	# sieve_extend.c:447:        index_ptr+=step;
 447:sieve_extend.c ****    }
 4952              		.loc 1 447 17 is_stmt 0 view .LVU1689
 4953 1dc5 4901CE   		add	r14, rcx	# index_ptr, _85
 4954              	.LVL232:
 445:sieve_extend.c ****        *index_ptr |= mask;
 4955              		.loc 1 445 10 is_stmt 1 view .LVU1690
 4956 1dc8 4D39F1   		cmp	r9, r14	# range_stop_ptr, index_ptr
 4957 1dcb 0F8768FF 		ja	.L278	#,
 4957      FFFF
 4958 1dd1 66662E0F 		.p2align 4
 4958      1F840000 
 4958      0000000F 
 4958      1F4000
 4959              		.p2align 3
 4960              	.L277:
 450:sieve_extend.c ****        *index_ptr |= mask;
 4961              		.loc 1 450 4 view .LVU1691
 4962              	# sieve_extend.c:450:    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range
 450:sieve_extend.c ****        *index_ptr |= mask;
 4963              		.loc 1 450 7 is_stmt 0 view .LVU1692
 4964 1de0 4D39F1   		cmp	r9, r14	# range_stop_ptr, index_ptr
 4965 1de3 7410     		je	.L429	#,
 4966              	.LVL233:
GAS LISTING /tmp/ccr2dACi.s 			page 144


 450:sieve_extend.c ****        *index_ptr |= mask;
 4967              		.loc 1 450 7 view .LVU1693
 4968              	.LBE344:
 4969              	.LBE352:
 4970              	.LBE357:
 510:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 4971              		.loc 1 510 41 is_stmt 1 view .LVU1694
 4972              	# sieve_extend.c:510:     for (counter_t index = range_start; index < range_stop_unique;) {
 510:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 4973              		.loc 1 510 5 is_stmt 0 view .LVU1695
 4974 1de5 4939F2   		cmp	r10, rsi	# range_stop_unique, range_start
 4975 1de8 0F87F2FC 		ja	.L281	#,
 4975      FFFF
 4976 1dee 6690     		.p2align 4,,5
 4977 1df0 E983FCFF 		jmp	.L425	#
 4977      FF
 4978              	.LVL234:
 4979              	.L429:
 4980              	.LBB358:
 4981              	.LBB353:
 4982              	.LBB345:
 451:sieve_extend.c ****    }
 4983              		.loc 1 451 8 is_stmt 1 view .LVU1696
 4984              	# sieve_extend.c:451:        *index_ptr |= mask;
 451:sieve_extend.c ****    }
 4985              		.loc 1 451 19 is_stmt 0 view .LVU1697
 4986 1df5 C4C17DEB 		vpor	ymm0, ymm0, YMMWORD PTR [r9]	# tmp221, quadmask.57_38, *index_ptr_138
 4986      01
 4987              	.LVL235:
 451:sieve_extend.c ****    }
 4988              		.loc 1 451 19 view .LVU1698
 4989              	.LBE345:
 4990              	.LBE353:
 4991              	.LBE358:
 4992              	# sieve_extend.c:510:     for (counter_t index = range_start; index < range_stop_unique;) {
 510:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 4993              		.loc 1 510 5 view .LVU1699
 4994 1dfa 4939F2   		cmp	r10, rsi	# range_stop_unique, range_start
 4995              	.LBB359:
 4996              	.LBB354:
 4997              	.LBB346:
 4998              	# sieve_extend.c:451:        *index_ptr |= mask;
 451:sieve_extend.c ****    }
 4999              		.loc 1 451 19 view .LVU1700
 5000 1dfd C4C17D7F 		vmovdqa	YMMWORD PTR [r9], ymm0	# *index_ptr_138, tmp221
 5000      01
 5001              	.LVL236:
 451:sieve_extend.c ****    }
 5002              		.loc 1 451 19 view .LVU1701
 5003              	.LBE346:
 5004              	.LBE354:
 5005              	.LBE359:
 510:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 5006              		.loc 1 510 41 is_stmt 1 view .LVU1702
 5007              	# sieve_extend.c:510:     for (counter_t index = range_start; index < range_stop_unique;) {
 510:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 5008              		.loc 1 510 5 is_stmt 0 view .LVU1703
GAS LISTING /tmp/ccr2dACi.s 			page 145


 5009 1e02 0F87D8FC 		ja	.L281	#,
 5009      FFFF
 5010 1e08 E96BFCFF 		jmp	.L425	#
 5010      FF
 5011              	.LVL237:
 5012              	.L268:
 510:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 5013              		.loc 1 510 5 view .LVU1704
 5014              	.LBE360:
 5015              	.LBB361:
 5016              	.LBB334:
 478:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5017              		.loc 1 478 49 is_stmt 1 view .LVU1705
 5018              	# sieve_extend.c:478:             for (counter_t index = range_start; index <= range_stop; index +=
 478:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5019              		.loc 1 478 13 is_stmt 0 view .LVU1706
 5020 1e0d 4839CE   		cmp	rsi, rcx	# range_start, range_stop
 5021              	# sieve_extend.c:479:                 bitarray_word[wordindex(index)] |= markmask(index);
 479:sieve_extend.c ****             return;                 
 5022              		.loc 1 479 52 view .LVU1707
 5023 1e10 41BC0100 		mov	r12d, 1	# tmp189,
 5023      0000
 5024              	# sieve_extend.c:478:             for (counter_t index = range_start; index <= range_stop; index +=
 478:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5025              		.loc 1 478 13 view .LVU1708
 5026 1e16 0F875FFC 		ja	.L266	#,
 5026      FFFF
 5027              	.LVL238:
 5028              	.L270:
 479:sieve_extend.c ****             return;                 
 5029              		.loc 1 479 17 is_stmt 1 discriminator 3 view .LVU1709
 5030              	# sieve_extend.c:479:                 bitarray_word[wordindex(index)] |= markmask(index);
 479:sieve_extend.c ****             return;                 
 5031              		.loc 1 479 49 is_stmt 0 discriminator 3 view .LVU1710
 5032 1e1c 4989F5   		mov	r13, rsi	# tmp185, range_start
 5033              	# sieve_extend.c:479:                 bitarray_word[wordindex(index)] |= markmask(index);
 479:sieve_extend.c ****             return;                 
 5034              		.loc 1 479 52 discriminator 3 view .LVU1711
 5035 1e1f C442C9F7 		shlx	r15, r12, rsi	# tmp188, tmp189, range_start
 5035      FC
 5036              	# sieve_extend.c:479:                 bitarray_word[wordindex(index)] |= markmask(index);
 479:sieve_extend.c ****             return;                 
 5037              		.loc 1 479 49 discriminator 3 view .LVU1712
 5038 1e24 49C1ED06 		shr	r13, 6	# tmp185,
 5039              	# sieve_extend.c:478:             for (counter_t index = range_start; index <= range_stop; index +=
 478:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5040              		.loc 1 478 76 discriminator 3 view .LVU1713
 5041 1e28 4801D6   		add	rsi, rdx	# range_start, step
 5042              	# sieve_extend.c:479:                 bitarray_word[wordindex(index)] |= markmask(index);
 479:sieve_extend.c ****             return;                 
 5043              		.loc 1 479 49 discriminator 3 view .LVU1714
 5044 1e2b 4E093CEF 		or	QWORD PTR [rdi+r13*8], r15	# *_14, tmp188
 478:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5045              		.loc 1 478 70 is_stmt 1 discriminator 3 view .LVU1715
 478:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5046              		.loc 1 478 49 discriminator 3 view .LVU1716
 5047              	# sieve_extend.c:478:             for (counter_t index = range_start; index <= range_stop; index +=
GAS LISTING /tmp/ccr2dACi.s 			page 146


 478:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5048              		.loc 1 478 13 is_stmt 0 discriminator 3 view .LVU1717
 5049 1e2f 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 5050 1e32 0F8243FC 		jb	.L266	#,
 5050      FFFF
 479:sieve_extend.c ****             return;                 
 5051              		.loc 1 479 17 is_stmt 1 view .LVU1718
 5052              	# sieve_extend.c:479:                 bitarray_word[wordindex(index)] |= markmask(index);
 479:sieve_extend.c ****             return;                 
 5053              		.loc 1 479 49 is_stmt 0 view .LVU1719
 5054 1e38 4989F6   		mov	r14, rsi	# tmp267, range_start
 5055              	# sieve_extend.c:479:                 bitarray_word[wordindex(index)] |= markmask(index);
 479:sieve_extend.c ****             return;                 
 5056              		.loc 1 479 52 view .LVU1720
 5057 1e3b C4C2C9F7 		shlx	rax, r12, rsi	# tmp270, tmp189, range_start
 5057      C4
 5058              	# sieve_extend.c:479:                 bitarray_word[wordindex(index)] |= markmask(index);
 479:sieve_extend.c ****             return;                 
 5059              		.loc 1 479 49 view .LVU1721
 5060 1e40 49C1EE06 		shr	r14, 6	# tmp267,
 5061              	# sieve_extend.c:478:             for (counter_t index = range_start; index <= range_stop; index +=
 478:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5062              		.loc 1 478 76 view .LVU1722
 5063 1e44 4801D6   		add	rsi, rdx	# range_start, step
 5064              	# sieve_extend.c:479:                 bitarray_word[wordindex(index)] |= markmask(index);
 479:sieve_extend.c ****             return;                 
 5065              		.loc 1 479 49 view .LVU1723
 5066 1e47 4A0904F7 		or	QWORD PTR [rdi+r14*8], rax	# *_14, tmp270
 478:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5067              		.loc 1 478 70 is_stmt 1 view .LVU1724
 478:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5068              		.loc 1 478 49 view .LVU1725
 5069              	# sieve_extend.c:478:             for (counter_t index = range_start; index <= range_stop; index +=
 478:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5070              		.loc 1 478 13 is_stmt 0 view .LVU1726
 5071 1e4b 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 5072 1e4e 0F8227FC 		jb	.L266	#,
 5072      FFFF
 479:sieve_extend.c ****             return;                 
 5073              		.loc 1 479 17 is_stmt 1 view .LVU1727
 5074              	# sieve_extend.c:479:                 bitarray_word[wordindex(index)] |= markmask(index);
 479:sieve_extend.c ****             return;                 
 5075              		.loc 1 479 49 is_stmt 0 view .LVU1728
 5076 1e54 4889F3   		mov	rbx, rsi	# tmp272, range_start
 5077              	# sieve_extend.c:479:                 bitarray_word[wordindex(index)] |= markmask(index);
 479:sieve_extend.c ****             return;                 
 5078              		.loc 1 479 52 view .LVU1729
 5079 1e57 C442C9F7 		shlx	r8, r12, rsi	# tmp275, tmp189, range_start
 5079      C4
 5080              	# sieve_extend.c:479:                 bitarray_word[wordindex(index)] |= markmask(index);
 479:sieve_extend.c ****             return;                 
 5081              		.loc 1 479 49 view .LVU1730
 5082 1e5c 48C1EB06 		shr	rbx, 6	# tmp272,
 5083              	# sieve_extend.c:478:             for (counter_t index = range_start; index <= range_stop; index +=
 478:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5084              		.loc 1 478 76 view .LVU1731
 5085 1e60 4801D6   		add	rsi, rdx	# range_start, step
GAS LISTING /tmp/ccr2dACi.s 			page 147


 5086              	# sieve_extend.c:479:                 bitarray_word[wordindex(index)] |= markmask(index);
 479:sieve_extend.c ****             return;                 
 5087              		.loc 1 479 49 view .LVU1732
 5088 1e63 4C0904DF 		or	QWORD PTR [rdi+rbx*8], r8	# *_14, tmp275
 478:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5089              		.loc 1 478 70 is_stmt 1 view .LVU1733
 478:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5090              		.loc 1 478 49 view .LVU1734
 5091              	# sieve_extend.c:478:             for (counter_t index = range_start; index <= range_stop; index +=
 478:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5092              		.loc 1 478 13 is_stmt 0 view .LVU1735
 5093 1e67 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 5094 1e6a 0F820BFC 		jb	.L266	#,
 5094      FFFF
 479:sieve_extend.c ****             return;                 
 5095              		.loc 1 479 17 is_stmt 1 view .LVU1736
 5096              	# sieve_extend.c:479:                 bitarray_word[wordindex(index)] |= markmask(index);
 479:sieve_extend.c ****             return;                 
 5097              		.loc 1 479 49 is_stmt 0 view .LVU1737
 5098 1e70 4989F2   		mov	r10, rsi	# tmp277, range_start
 5099              	# sieve_extend.c:479:                 bitarray_word[wordindex(index)] |= markmask(index);
 479:sieve_extend.c ****             return;                 
 5100              		.loc 1 479 52 view .LVU1738
 5101 1e73 C442C9F7 		shlx	r9, r12, rsi	# tmp280, tmp189, range_start
 5101      CC
 5102              	# sieve_extend.c:479:                 bitarray_word[wordindex(index)] |= markmask(index);
 479:sieve_extend.c ****             return;                 
 5103              		.loc 1 479 49 view .LVU1739
 5104 1e78 49C1EA06 		shr	r10, 6	# tmp277,
 5105              	# sieve_extend.c:478:             for (counter_t index = range_start; index <= range_stop; index +=
 478:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5106              		.loc 1 478 76 view .LVU1740
 5107 1e7c 4801D6   		add	rsi, rdx	# range_start, step
 5108              	# sieve_extend.c:479:                 bitarray_word[wordindex(index)] |= markmask(index);
 479:sieve_extend.c ****             return;                 
 5109              		.loc 1 479 49 view .LVU1741
 5110 1e7f 4E090CD7 		or	QWORD PTR [rdi+r10*8], r9	# *_14, tmp280
 478:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5111              		.loc 1 478 70 is_stmt 1 view .LVU1742
 478:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5112              		.loc 1 478 49 view .LVU1743
 5113              	# sieve_extend.c:478:             for (counter_t index = range_start; index <= range_stop; index +=
 478:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5114              		.loc 1 478 13 is_stmt 0 view .LVU1744
 5115 1e83 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 5116 1e86 0F82EFFB 		jb	.L266	#,
 5116      FFFF
 479:sieve_extend.c ****             return;                 
 5117              		.loc 1 479 17 is_stmt 1 view .LVU1745
 5118              	# sieve_extend.c:479:                 bitarray_word[wordindex(index)] |= markmask(index);
 479:sieve_extend.c ****             return;                 
 5119              		.loc 1 479 49 is_stmt 0 view .LVU1746
 5120 1e8c 4989F3   		mov	r11, rsi	# tmp282, range_start
 5121              	# sieve_extend.c:479:                 bitarray_word[wordindex(index)] |= markmask(index);
 479:sieve_extend.c ****             return;                 
 5122              		.loc 1 479 52 view .LVU1747
 5123 1e8f C442C9F7 		shlx	r13, r12, rsi	# tmp285, tmp189, range_start
GAS LISTING /tmp/ccr2dACi.s 			page 148


 5123      EC
 5124              	# sieve_extend.c:479:                 bitarray_word[wordindex(index)] |= markmask(index);
 479:sieve_extend.c ****             return;                 
 5125              		.loc 1 479 49 view .LVU1748
 5126 1e94 49C1EB06 		shr	r11, 6	# tmp282,
 5127              	# sieve_extend.c:478:             for (counter_t index = range_start; index <= range_stop; index +=
 478:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5128              		.loc 1 478 76 view .LVU1749
 5129 1e98 4801D6   		add	rsi, rdx	# range_start, step
 5130              	# sieve_extend.c:479:                 bitarray_word[wordindex(index)] |= markmask(index);
 479:sieve_extend.c ****             return;                 
 5131              		.loc 1 479 49 view .LVU1750
 5132 1e9b 4E092CDF 		or	QWORD PTR [rdi+r11*8], r13	# *_14, tmp285
 478:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5133              		.loc 1 478 70 is_stmt 1 view .LVU1751
 478:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5134              		.loc 1 478 49 view .LVU1752
 5135              	# sieve_extend.c:478:             for (counter_t index = range_start; index <= range_stop; index +=
 478:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5136              		.loc 1 478 13 is_stmt 0 view .LVU1753
 5137 1e9f 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 5138 1ea2 0F82D3FB 		jb	.L266	#,
 5138      FFFF
 479:sieve_extend.c ****             return;                 
 5139              		.loc 1 479 17 is_stmt 1 view .LVU1754
 5140              	# sieve_extend.c:479:                 bitarray_word[wordindex(index)] |= markmask(index);
 479:sieve_extend.c ****             return;                 
 5141              		.loc 1 479 49 is_stmt 0 view .LVU1755
 5142 1ea8 4989F7   		mov	r15, rsi	# tmp287, range_start
 5143              	# sieve_extend.c:479:                 bitarray_word[wordindex(index)] |= markmask(index);
 479:sieve_extend.c ****             return;                 
 5144              		.loc 1 479 52 view .LVU1756
 5145 1eab C442C9F7 		shlx	r14, r12, rsi	# tmp290, tmp189, range_start
 5145      F4
 5146              	# sieve_extend.c:479:                 bitarray_word[wordindex(index)] |= markmask(index);
 479:sieve_extend.c ****             return;                 
 5147              		.loc 1 479 49 view .LVU1757
 5148 1eb0 49C1EF06 		shr	r15, 6	# tmp287,
 5149              	# sieve_extend.c:478:             for (counter_t index = range_start; index <= range_stop; index +=
 478:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5150              		.loc 1 478 76 view .LVU1758
 5151 1eb4 4801D6   		add	rsi, rdx	# range_start, step
 5152              	# sieve_extend.c:479:                 bitarray_word[wordindex(index)] |= markmask(index);
 479:sieve_extend.c ****             return;                 
 5153              		.loc 1 479 49 view .LVU1759
 5154 1eb7 4E0934FF 		or	QWORD PTR [rdi+r15*8], r14	# *_14, tmp290
 478:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5155              		.loc 1 478 70 is_stmt 1 view .LVU1760
 478:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5156              		.loc 1 478 49 view .LVU1761
 5157              	# sieve_extend.c:478:             for (counter_t index = range_start; index <= range_stop; index +=
 478:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5158              		.loc 1 478 13 is_stmt 0 view .LVU1762
 5159 1ebb 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 5160 1ebe 0F82B7FB 		jb	.L266	#,
 5160      FFFF
 479:sieve_extend.c ****             return;                 
GAS LISTING /tmp/ccr2dACi.s 			page 149


 5161              		.loc 1 479 17 is_stmt 1 view .LVU1763
 5162              	# sieve_extend.c:479:                 bitarray_word[wordindex(index)] |= markmask(index);
 479:sieve_extend.c ****             return;                 
 5163              		.loc 1 479 49 is_stmt 0 view .LVU1764
 5164 1ec4 4889F0   		mov	rax, rsi	# tmp292, range_start
 5165              	# sieve_extend.c:479:                 bitarray_word[wordindex(index)] |= markmask(index);
 479:sieve_extend.c ****             return;                 
 5166              		.loc 1 479 52 view .LVU1765
 5167 1ec7 C4C2C9F7 		shlx	rbx, r12, rsi	# tmp295, tmp189, range_start
 5167      DC
 5168              	# sieve_extend.c:479:                 bitarray_word[wordindex(index)] |= markmask(index);
 479:sieve_extend.c ****             return;                 
 5169              		.loc 1 479 49 view .LVU1766
 5170 1ecc 48C1E806 		shr	rax, 6	# tmp292,
 5171              	# sieve_extend.c:478:             for (counter_t index = range_start; index <= range_stop; index +=
 478:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5172              		.loc 1 478 76 view .LVU1767
 5173 1ed0 4801D6   		add	rsi, rdx	# range_start, step
 5174              	# sieve_extend.c:479:                 bitarray_word[wordindex(index)] |= markmask(index);
 479:sieve_extend.c ****             return;                 
 5175              		.loc 1 479 49 view .LVU1768
 5176 1ed3 48091CC7 		or	QWORD PTR [rdi+rax*8], rbx	# *_14, tmp295
 478:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5177              		.loc 1 478 70 is_stmt 1 view .LVU1769
 478:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5178              		.loc 1 478 49 view .LVU1770
 5179              	# sieve_extend.c:478:             for (counter_t index = range_start; index <= range_stop; index +=
 478:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5180              		.loc 1 478 13 is_stmt 0 view .LVU1771
 5181 1ed7 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 5182 1eda 0F829BFB 		jb	.L266	#,
 5182      FFFF
 479:sieve_extend.c ****             return;                 
 5183              		.loc 1 479 17 is_stmt 1 view .LVU1772
 5184              	# sieve_extend.c:479:                 bitarray_word[wordindex(index)] |= markmask(index);
 479:sieve_extend.c ****             return;                 
 5185              		.loc 1 479 49 is_stmt 0 view .LVU1773
 5186 1ee0 4989F0   		mov	r8, rsi	# tmp297, range_start
 5187              	# sieve_extend.c:479:                 bitarray_word[wordindex(index)] |= markmask(index);
 479:sieve_extend.c ****             return;                 
 5188              		.loc 1 479 52 view .LVU1774
 5189 1ee3 C442C9F7 		shlx	r10, r12, rsi	# tmp300, tmp189, range_start
 5189      D4
 5190              	# sieve_extend.c:479:                 bitarray_word[wordindex(index)] |= markmask(index);
 479:sieve_extend.c ****             return;                 
 5191              		.loc 1 479 49 view .LVU1775
 5192 1ee8 49C1E806 		shr	r8, 6	# tmp297,
 5193              	# sieve_extend.c:478:             for (counter_t index = range_start; index <= range_stop; index +=
 478:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5194              		.loc 1 478 76 view .LVU1776
 5195 1eec 4801D6   		add	rsi, rdx	# range_start, step
 5196              	# sieve_extend.c:479:                 bitarray_word[wordindex(index)] |= markmask(index);
 479:sieve_extend.c ****             return;                 
 5197              		.loc 1 479 49 view .LVU1777
 5198 1eef 4E0914C7 		or	QWORD PTR [rdi+r8*8], r10	# *_14, tmp300
 478:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5199              		.loc 1 478 70 is_stmt 1 view .LVU1778
GAS LISTING /tmp/ccr2dACi.s 			page 150


 478:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5200              		.loc 1 478 49 view .LVU1779
 5201              	# sieve_extend.c:478:             for (counter_t index = range_start; index <= range_stop; index +=
 478:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5202              		.loc 1 478 13 is_stmt 0 view .LVU1780
 5203 1ef3 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 5204 1ef6 0F8320FF 		jnb	.L270	#,
 5204      FFFF
 5205 1efc E97AFBFF 		jmp	.L266	#
 5205      FF
 5206              	.LVL239:
 5207              	.L428:
 478:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5208              		.loc 1 478 13 view .LVU1781
 5209              	.LBE334:
 5210              	.LBE361:
 5211              	# sieve_extend.c:567: }
 567:sieve_extend.c **** 
 5212              		.loc 1 567 1 view .LVU1782
 5213 1f01 E8000000 		call	__stack_chk_fail@PLT	#
 5213      00
 5214              	.LVL240:
 567:sieve_extend.c **** 
 5215              		.loc 1 567 1 view .LVU1783
 5216              		.cfi_endproc
 5217              	.LFE64:
 5219 1f06 662E0F1F 		.p2align 4
 5219      84000000 
 5219      0000
 5221              	extendSieve_aligned:
 5222              	.LVL241:
 5223              	.LFB66:
 603:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 5224              		.loc 1 603 140 is_stmt 1 view -0
 5225              		.cfi_startproc
 604:sieve_extend.c **** 
 5226              		.loc 1 604 5 view .LVU1785
 606:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 5227              		.loc 1 606 5 view .LVU1786
 5228              	# sieve_extend.c:603: static void extendSieve_aligned(bitword_t* bitarray, const counter_t source_s
 603:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 5229              		.loc 1 603 140 is_stmt 0 view .LVU1787
 5230 1f10 55       		push	rbp	#
 5231              		.cfi_def_cfa_offset 16
 5232              		.cfi_offset 6, -16
 5233 1f11 4889E5   		mov	rbp, rsp	#,
 5234              		.cfi_def_cfa_register 6
 5235 1f14 4157     		push	r15	#
 5236 1f16 4156     		push	r14	#
 5237 1f18 4155     		push	r13	#
 5238              		.cfi_offset 15, -24
 5239              		.cfi_offset 14, -32
 5240              		.cfi_offset 13, -40
 5241 1f1a 4989FD   		mov	r13, rdi	# bitarray, tmp295
 5242 1f1d 4154     		push	r12	#
 5243              		.cfi_offset 12, -48
 5244 1f1f 4989D4   		mov	r12, rdx	# size, tmp297
GAS LISTING /tmp/ccr2dACi.s 			page 151


 5245 1f22 53       		push	rbx	#
 5246              		.cfi_offset 3, -56
 5247              	# sieve_extend.c:606:     const counter_t destination_stop_word = wordindex(destination_stop);
 606:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 5248              		.loc 1 606 21 view .LVU1788
 5249 1f23 4889CB   		mov	rbx, rcx	# tmp298, tmp298
 5250              	# sieve_extend.c:607:     const counter_t copy_start = source_start + size;
 607:sieve_extend.c ****     counter_t source_word = wordindex(source_start);
 5251              		.loc 1 607 21 view .LVU1789
 5252 1f26 488D0C16 		lea	rcx, [rsi+rdx]	# copy_start,
 5253              	.LVL242:
 5254              	# sieve_extend.c:603: static void extendSieve_aligned(bitword_t* bitarray, const counter_t source_s
 603:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 5255              		.loc 1 603 140 view .LVU1790
 5256 1f2a 4883E4E0 		and	rsp, -32	#,
 5257              	# sieve_extend.c:609:     counter_t copy_word = wordindex(copy_start);
 609:sieve_extend.c ****     
 5258              		.loc 1 609 15 view .LVU1791
 5259 1f2e 4889C8   		mov	rax, rcx	# ivtmp.348, copy_start
 5260              	# sieve_extend.c:608:     counter_t source_word = wordindex(source_start);
 608:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 5261              		.loc 1 608 15 view .LVU1792
 5262 1f31 48C1EE06 		shr	rsi, 6	# source_start,
 5263              	.LVL243:
 5264              	# sieve_extend.c:603: static void extendSieve_aligned(bitword_t* bitarray, const counter_t source_s
 603:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 5265              		.loc 1 603 140 view .LVU1793
 5266 1f35 488D6424 		lea	rsp, -32[rsp]	#,
 5266      E0
 5267              	# sieve_extend.c:609:     counter_t copy_word = wordindex(copy_start);
 609:sieve_extend.c ****     
 5268              		.loc 1 609 15 view .LVU1794
 5269 1f3a 48C1E806 		shr	rax, 6	# ivtmp.348,
 5270              	# sieve_extend.c:611:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 611:sieve_extend.c **** 
 5271              		.loc 1 611 35 view .LVU1795
 5272 1f3e 488D3CF5 		lea	rdi, 0[0+rsi*8]	# _4,
 5272      00000000 
 5273              	.LVL244:
 5274              	# sieve_extend.c:606:     const counter_t destination_stop_word = wordindex(destination_stop);
 606:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 5275              		.loc 1 606 21 view .LVU1796
 5276 1f46 48C1EB06 		shr	rbx, 6	# tmp298,
 5277              	.LVL245:
 607:sieve_extend.c ****     counter_t source_word = wordindex(source_start);
 5278              		.loc 1 607 5 is_stmt 1 view .LVU1797
 608:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 5279              		.loc 1 608 5 view .LVU1798
 5280              	# sieve_extend.c:611:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 611:sieve_extend.c **** 
 5281              		.loc 1 611 35 is_stmt 0 view .LVU1799
 5282 1f4a 4D8D743D 		lea	r14, 0[r13+rdi]	# _5,
 5282      00
 5283              	# sieve_extend.c:608:     counter_t source_word = wordindex(source_start);
 608:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 5284              		.loc 1 608 15 view .LVU1800
 5285 1f4f 48897424 		mov	QWORD PTR 8[rsp], rsi	# %sfp, source_word
GAS LISTING /tmp/ccr2dACi.s 			page 152


 5285      08
 5286              	.LVL246:
 609:sieve_extend.c ****     
 5287              		.loc 1 609 5 is_stmt 1 view .LVU1801
 611:sieve_extend.c **** 
 5288              		.loc 1 611 5 view .LVU1802
 5289              	# sieve_extend.c:611:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 611:sieve_extend.c **** 
 5290              		.loc 1 611 52 is_stmt 0 view .LVU1803
 5291 1f54 89CE     		mov	esi, ecx	# tmp183, copy_start
 5292              	.LVL247:
 5293              	# sieve_extend.c:613:     while (copy_word + size <= destination_stop_word) {
 613:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5294              		.loc 1 613 22 view .LVU1804
 5295 1f56 498D0C04 		lea	rcx, [r12+rax]	# ivtmp.348,
 5296              	.LVL248:
 5297              	# sieve_extend.c:611:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 611:sieve_extend.c **** 
 5298              		.loc 1 611 52 view .LVU1805
 5299 1f5a F7D6     		not	esi	# tmp183
 5300              	# sieve_extend.c:611:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 611:sieve_extend.c **** 
 5301              		.loc 1 611 35 view .LVU1806
 5302 1f5c 48893C24 		mov	QWORD PTR [rsp], rdi	# %sfp, _4
 5303              	# sieve_extend.c:611:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 611:sieve_extend.c **** 
 5304              		.loc 1 611 52 view .LVU1807
 5305 1f60 48C7C2FF 		mov	rdx, -1	# tmp186,
 5305      FFFFFF
 5306              	.LVL249:
 611:sieve_extend.c **** 
 5307              		.loc 1 611 52 view .LVU1808
 5308 1f67 C462CBF7 		shrx	r8, rdx, rsi	# tmp185, tmp186, tmp183
 5308      C2
 5309              	# sieve_extend.c:611:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 611:sieve_extend.c **** 
 5310              		.loc 1 611 49 view .LVU1809
 5311 1f6c C442B8F2 		andn	r9, r8, QWORD PTR [r14]	# tmp189, tmp185, *_5
 5311      0E
 5312              	# sieve_extend.c:611:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 611:sieve_extend.c **** 
 5313              		.loc 1 611 25 view .LVU1810
 5314 1f71 4D894CC5 		mov	QWORD PTR 0[r13+rax*8], r9	# *_13, tmp189
 5314      00
 613:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5315              		.loc 1 613 5 is_stmt 1 view .LVU1811
 613:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5316              		.loc 1 613 11 view .LVU1812
 5317 1f76 4839CB   		cmp	rbx, rcx	# destination_stop_word, ivtmp.348
 5318 1f79 0F827101 		jb	.L431	#,
 5318      0000
 5319 1f7f 4C8D14C5 		lea	r10, 0[0+rax*8]	# _12,
 5319      00000000 
 5320 1f87 488D04CD 		lea	rax, 0[0+rcx*8]	# tmp191,
 5320      00000000 
 5321              	.LVL250:
 613:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
GAS LISTING /tmp/ccr2dACi.s 			page 153


 5322              		.loc 1 613 11 is_stmt 0 view .LVU1813
 5323 1f8f 4D01EA   		add	r10, r13	# tmp190, bitarray
 5324              	# sieve_extend.c:614:         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*
 614:sieve_extend.c ****         copy_word += size;
 5325              		.loc 1 614 9 view .LVU1814
 5326 1f92 4E8D3CE5 		lea	r15, 0[0+r12*8]	# _15,
 5326      00000000 
 5327 1f9a 4929C2   		sub	r10, rax	# tmp190, tmp191
 5328 1f9d 4C895424 		mov	QWORD PTR 24[rsp], r10	# %sfp, tmp190
 5328      18
 5329              	.LVL251:
 5330              	.L432:
 614:sieve_extend.c ****         copy_word += size;
 5331              		.loc 1 614 9 is_stmt 1 view .LVU1815
 5332              	.LBB362:
 5333              	.LBI362:
 5334              		.file 2 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h"
   1:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** /* Copyright (C) 2004-2020 Free Software Foundation, Inc.
   2:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    This file is part of the GNU C Library.
   3:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
   4:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    The GNU C Library is free software; you can redistribute it and/or
   5:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    modify it under the terms of the GNU Lesser General Public
   6:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    License as published by the Free Software Foundation; either
   7:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    version 2.1 of the License, or (at your option) any later version.
   8:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
   9:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    The GNU C Library is distributed in the hope that it will be useful,
  10:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  12:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    Lesser General Public License for more details.
  13:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  14:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    You should have received a copy of the GNU Lesser General Public
  15:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    License along with the GNU C Library; if not, see
  16:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    <https://www.gnu.org/licenses/>.  */
  17:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  18:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #ifndef _BITS_STRING_FORTIFIED_H
  19:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #define _BITS_STRING_FORTIFIED_H 1
  20:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  21:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #ifndef _STRING_H
  22:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** # error "Never use <bits/string_fortified.h> directly; include <string.h> instead."
  23:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  24:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  25:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #if !__GNUC_PREREQ (5,0)
  26:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __warndecl (__warn_memset_zero_len,
  27:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	    "memset used with constant zero length parameter; this could be due to transposed parameters")
  28:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  29:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  30:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __fortify_function void *
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __NTH (memcpy (void *__restrict __dest, const void *__restrict __src,
 5335              		.loc 2 31 1 view .LVU1816
 5336              	.LBB363:
  32:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
  33:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
 5337              		.loc 2 34 3 view .LVU1817
 5338              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5339              		.loc 2 34 10 is_stmt 0 view .LVU1818
 5340 1fa2 4C8B5C24 		mov	r11, QWORD PTR 24[rsp]	# _189, %sfp
GAS LISTING /tmp/ccr2dACi.s 			page 154


 5340      18
 5341 1fa7 4C89FA   		mov	rdx, r15	#, _15
 5342 1faa 48894C24 		mov	QWORD PTR 16[rsp], rcx	# %sfp, ivtmp.348
 5342      10
 5343 1faf 4C89F6   		mov	rsi, r14	#, _5
 5344 1fb2 498D3CCB 		lea	rdi, [r11+rcx*8]	# tmp193,
 5345 1fb6 E8000000 		call	memcpy@PLT	#
 5345      00
 5346              	.LVL252:
 5347              		.loc 2 34 10 view .LVU1819
 5348              	.LBE363:
 5349              	.LBE362:
 615:sieve_extend.c ****     }
 5350              		.loc 1 615 9 is_stmt 1 view .LVU1820
 613:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5351              		.loc 1 613 11 view .LVU1821
 5352 1fbb 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.348, %sfp
 5352      10
 5353 1fc0 4A8D0C20 		lea	rcx, [rax+r12]	# ivtmp.348,
 5354 1fc4 4839CB   		cmp	rbx, rcx	# destination_stop_word, ivtmp.348
 5355 1fc7 0F822301 		jb	.L431	#,
 5355      0000
 614:sieve_extend.c ****         copy_word += size;
 5356              		.loc 1 614 9 view .LVU1822
 5357              	.LVL253:
 5358              	.LBB371:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5359              		.loc 2 31 1 view .LVU1823
 5360              	.LBB364:
 5361              		.loc 2 34 3 view .LVU1824
 5362              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5363              		.loc 2 34 10 is_stmt 0 view .LVU1825
 5364 1fcd 488B7C24 		mov	rdi, QWORD PTR 24[rsp]	# _189, %sfp
 5364      18
 5365 1fd2 4C89F6   		mov	rsi, r14	#, _5
 5366 1fd5 48894C24 		mov	QWORD PTR 16[rsp], rcx	# %sfp, ivtmp.348
 5366      10
 5367              	.LVL254:
 5368              		.loc 2 34 10 view .LVU1826
 5369 1fda 4C89FA   		mov	rdx, r15	#, _15
 5370 1fdd 488D3CCF 		lea	rdi, [rdi+rcx*8]	# tmp276,
 5371 1fe1 E8000000 		call	memcpy@PLT	#
 5371      00
 5372              	.LVL255:
 5373              		.loc 2 34 10 view .LVU1827
 5374              	.LBE364:
 5375              	.LBE371:
 615:sieve_extend.c ****     }
 5376              		.loc 1 615 9 is_stmt 1 view .LVU1828
 613:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5377              		.loc 1 613 11 view .LVU1829
 5378 1fe6 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.348, %sfp
 5378      10
 5379 1feb 4A8D3420 		lea	rsi, [rax+r12]	# ivtmp.348,
 5380 1fef 4839F3   		cmp	rbx, rsi	# destination_stop_word, ivtmp.348
 5381 1ff2 0F82F800 		jb	.L431	#,
 5381      0000
GAS LISTING /tmp/ccr2dACi.s 			page 155


 614:sieve_extend.c ****         copy_word += size;
 5382              		.loc 1 614 9 view .LVU1830
 5383              	.LVL256:
 5384              	.LBB372:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5385              		.loc 2 31 1 view .LVU1831
 5386              	.LBB365:
 5387              		.loc 2 34 3 view .LVU1832
 5388              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5389              		.loc 2 34 10 is_stmt 0 view .LVU1833
 5390 1ff8 488B5424 		mov	rdx, QWORD PTR 24[rsp]	# _189, %sfp
 5390      18
 5391 1ffd 48897424 		mov	QWORD PTR 16[rsp], rsi	# %sfp, ivtmp.348
 5391      10
 5392 2002 488D3CF2 		lea	rdi, [rdx+rsi*8]	# tmp279,
 5393 2006 4C89FA   		mov	rdx, r15	#, _15
 5394 2009 4C89F6   		mov	rsi, r14	#, _5
 5395 200c E8000000 		call	memcpy@PLT	#
 5395      00
 5396              	.LVL257:
 5397              		.loc 2 34 10 view .LVU1834
 5398              	.LBE365:
 5399              	.LBE372:
 615:sieve_extend.c ****     }
 5400              		.loc 1 615 9 is_stmt 1 view .LVU1835
 613:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5401              		.loc 1 613 11 view .LVU1836
 5402 2011 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.348, %sfp
 5402      10
 5403 2016 4E8D0420 		lea	r8, [rax+r12]	# ivtmp.348,
 5404 201a 4C39C3   		cmp	rbx, r8	# destination_stop_word, ivtmp.348
 5405 201d 0F82CD00 		jb	.L431	#,
 5405      0000
 614:sieve_extend.c ****         copy_word += size;
 5406              		.loc 1 614 9 view .LVU1837
 5407              	.LVL258:
 5408              	.LBB373:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5409              		.loc 2 31 1 view .LVU1838
 5410              	.LBB366:
 5411              		.loc 2 34 3 view .LVU1839
 5412              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5413              		.loc 2 34 10 is_stmt 0 view .LVU1840
 5414 2023 4C8B4C24 		mov	r9, QWORD PTR 24[rsp]	# _189, %sfp
 5414      18
 5415 2028 4C89FA   		mov	rdx, r15	#, _15
 5416 202b 4C894424 		mov	QWORD PTR 16[rsp], r8	# %sfp, ivtmp.348
 5416      10
 5417 2030 4C89F6   		mov	rsi, r14	#, _5
 5418 2033 4B8D3CC1 		lea	rdi, [r9+r8*8]	# tmp282,
 5419 2037 E8000000 		call	memcpy@PLT	#
 5419      00
 5420              	.LVL259:
 5421              		.loc 2 34 10 view .LVU1841
 5422              	.LBE366:
 5423              	.LBE373:
 615:sieve_extend.c ****     }
GAS LISTING /tmp/ccr2dACi.s 			page 156


 5424              		.loc 1 615 9 is_stmt 1 view .LVU1842
 613:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5425              		.loc 1 613 11 view .LVU1843
 5426 203c 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.348, %sfp
 5426      10
 5427 2041 4E8D1420 		lea	r10, [rax+r12]	# ivtmp.348,
 5428 2045 4C39D3   		cmp	rbx, r10	# destination_stop_word, ivtmp.348
 5429 2048 0F82A200 		jb	.L431	#,
 5429      0000
 614:sieve_extend.c ****         copy_word += size;
 5430              		.loc 1 614 9 view .LVU1844
 5431              	.LVL260:
 5432              	.LBB374:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5433              		.loc 2 31 1 view .LVU1845
 5434              	.LBB367:
 5435              		.loc 2 34 3 view .LVU1846
 5436              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5437              		.loc 2 34 10 is_stmt 0 view .LVU1847
 5438 204e 4C8B5C24 		mov	r11, QWORD PTR 24[rsp]	# _189, %sfp
 5438      18
 5439 2053 4C89FA   		mov	rdx, r15	#, _15
 5440 2056 4C895424 		mov	QWORD PTR 16[rsp], r10	# %sfp, ivtmp.348
 5440      10
 5441 205b 4C89F6   		mov	rsi, r14	#, _5
 5442 205e 4B8D3CD3 		lea	rdi, [r11+r10*8]	# tmp285,
 5443 2062 E8000000 		call	memcpy@PLT	#
 5443      00
 5444              	.LVL261:
 5445              		.loc 2 34 10 view .LVU1848
 5446              	.LBE367:
 5447              	.LBE374:
 615:sieve_extend.c ****     }
 5448              		.loc 1 615 9 is_stmt 1 view .LVU1849
 613:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5449              		.loc 1 613 11 view .LVU1850
 5450 2067 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.348, %sfp
 5450      10
 5451 206c 4A8D0C20 		lea	rcx, [rax+r12]	# ivtmp.348,
 5452 2070 4839CB   		cmp	rbx, rcx	# destination_stop_word, ivtmp.348
 5453 2073 727B     		jb	.L431	#,
 614:sieve_extend.c ****         copy_word += size;
 5454              		.loc 1 614 9 view .LVU1851
 5455              	.LVL262:
 5456              	.LBB375:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5457              		.loc 2 31 1 view .LVU1852
 5458              	.LBB368:
 5459              		.loc 2 34 3 view .LVU1853
 5460              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5461              		.loc 2 34 10 is_stmt 0 view .LVU1854
 5462 2075 488B7C24 		mov	rdi, QWORD PTR 24[rsp]	# _189, %sfp
 5462      18
 5463 207a 4C89F6   		mov	rsi, r14	#, _5
 5464 207d 48894C24 		mov	QWORD PTR 16[rsp], rcx	# %sfp, ivtmp.348
 5464      10
 5465 2082 4C89FA   		mov	rdx, r15	#, _15
GAS LISTING /tmp/ccr2dACi.s 			page 157


 5466 2085 488D3CCF 		lea	rdi, [rdi+rcx*8]	# tmp288,
 5467 2089 E8000000 		call	memcpy@PLT	#
 5467      00
 5468              	.LVL263:
 5469              		.loc 2 34 10 view .LVU1855
 5470              	.LBE368:
 5471              	.LBE375:
 615:sieve_extend.c ****     }
 5472              		.loc 1 615 9 is_stmt 1 view .LVU1856
 613:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5473              		.loc 1 613 11 view .LVU1857
 5474 208e 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.348, %sfp
 5474      10
 5475 2093 4A8D3420 		lea	rsi, [rax+r12]	# ivtmp.348,
 5476 2097 4839F3   		cmp	rbx, rsi	# destination_stop_word, ivtmp.348
 5477 209a 7254     		jb	.L431	#,
 614:sieve_extend.c ****         copy_word += size;
 5478              		.loc 1 614 9 view .LVU1858
 5479              	.LVL264:
 5480              	.LBB376:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5481              		.loc 2 31 1 view .LVU1859
 5482              	.LBB369:
 5483              		.loc 2 34 3 view .LVU1860
 5484              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5485              		.loc 2 34 10 is_stmt 0 view .LVU1861
 5486 209c 488B5424 		mov	rdx, QWORD PTR 24[rsp]	# _189, %sfp
 5486      18
 5487 20a1 48897424 		mov	QWORD PTR 16[rsp], rsi	# %sfp, ivtmp.348
 5487      10
 5488 20a6 488D3CF2 		lea	rdi, [rdx+rsi*8]	# tmp291,
 5489 20aa 4C89FA   		mov	rdx, r15	#, _15
 5490 20ad 4C89F6   		mov	rsi, r14	#, _5
 5491 20b0 E8000000 		call	memcpy@PLT	#
 5491      00
 5492              	.LVL265:
 5493              		.loc 2 34 10 view .LVU1862
 5494              	.LBE369:
 5495              	.LBE376:
 615:sieve_extend.c ****     }
 5496              		.loc 1 615 9 is_stmt 1 view .LVU1863
 613:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5497              		.loc 1 613 11 view .LVU1864
 5498 20b5 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.348, %sfp
 5498      10
 5499 20ba 4E8D0420 		lea	r8, [rax+r12]	# ivtmp.348,
 5500 20be 4C39C3   		cmp	rbx, r8	# destination_stop_word, ivtmp.348
 5501 20c1 722D     		jb	.L431	#,
 614:sieve_extend.c ****         copy_word += size;
 5502              		.loc 1 614 9 view .LVU1865
 5503              	.LVL266:
 5504              	.LBB377:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5505              		.loc 2 31 1 view .LVU1866
 5506              	.LBB370:
 5507              		.loc 2 34 3 view .LVU1867
 5508              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
GAS LISTING /tmp/ccr2dACi.s 			page 158


 5509              		.loc 2 34 10 is_stmt 0 view .LVU1868
 5510 20c3 4C8B4C24 		mov	r9, QWORD PTR 24[rsp]	# _189, %sfp
 5510      18
 5511 20c8 4C89FA   		mov	rdx, r15	#, _15
 5512 20cb 4C894424 		mov	QWORD PTR 16[rsp], r8	# %sfp, ivtmp.348
 5512      10
 5513 20d0 4C89F6   		mov	rsi, r14	#, _5
 5514 20d3 4B8D3CC1 		lea	rdi, [r9+r8*8]	# tmp294,
 5515 20d7 E8000000 		call	memcpy@PLT	#
 5515      00
 5516              	.LVL267:
 5517              		.loc 2 34 10 view .LVU1869
 5518              	.LBE370:
 5519              	.LBE377:
 615:sieve_extend.c ****     }
 5520              		.loc 1 615 9 is_stmt 1 view .LVU1870
 613:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5521              		.loc 1 613 11 view .LVU1871
 5522 20dc 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.348, %sfp
 5522      10
 5523              	.LVL268:
 613:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5524              		.loc 1 613 11 is_stmt 0 view .LVU1872
 5525 20e1 4A8D0C20 		lea	rcx, [rax+r12]	# ivtmp.348,
 5526              	.LVL269:
 613:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5527              		.loc 1 613 11 view .LVU1873
 5528 20e5 4839CB   		cmp	rbx, rcx	# destination_stop_word, ivtmp.348
 5529 20e8 0F83B4FE 		jnb	.L432	#,
 5529      FFFF
 5530              	.LVL270:
 5531 20ee 6690     		.p2align 4
 5532              		.p2align 3
 5533              	.L431:
 618:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5534              		.loc 1 618 10 is_stmt 1 view .LVU1874
 5535 20f0 4839C3   		cmp	rbx, rax	# destination_stop_word, ivtmp.348
 5536 20f3 0F864902 		jbe	.L542	#,
 5536      0000
 5537 20f9 4C8B1424 		mov	r10, QWORD PTR [rsp]	# _4, %sfp
 5538 20fd 4C8D24C5 		lea	r12, 0[0+rax*8]	# _41,
 5538      00000000 
 5539              	.LVL271:
 618:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5540              		.loc 1 618 10 is_stmt 0 view .LVU1875
 5541 2105 4D8D7C24 		lea	r15, 32[r12]	# tmp199,
 5541      20
 5542 210a 498D7A20 		lea	rdi, 32[r10]	# tmp202,
 5543 210e 4D39FA   		cmp	r10, r15	# _4, tmp199
 5544 2111 410F9DC3 		setge	r11b	#, tmp201
 5545 2115 4939FC   		cmp	r12, rdi	# _41, tmp202
 5546 2118 400F9DC6 		setge	sil	#, tmp204
 5547 211c 4108F3   		or	r11b, sil	# tmp201, tmp204
 5548 211f 0F844B02 		je	.L434	#,
 5548      0000
 5549 2125 488D53FF 		lea	rdx, -1[rbx]	# tmp206,
 5550 2129 4829C2   		sub	rdx, rax	# tmp207, ivtmp.348
GAS LISTING /tmp/ccr2dACi.s 			page 159


 5551 212c 4883FA05 		cmp	rdx, 5	# tmp207,
 5552 2130 0F863A02 		jbe	.L434	#,
 5552      0000
 5553 2136 4D89F7   		mov	r15, r14	# tmp210, _5
 5554 2139 49C1EF03 		shr	r15, 3	# tmp210,
 5555 213d 49F7DF   		neg	r15	# tmp211
 5556 2140 4183E703 		and	r15d, 3	# prolog_loop_niters.316,
 5557 2144 0F842E03 		je	.L441	#,
 5557      0000
 619:sieve_extend.c ****         source_word++;
 5558              		.loc 1 619 9 is_stmt 1 view .LVU1876
 5559              	# sieve_extend.c:619:         bitarray[copy_word] = bitarray[source_word];
 619:sieve_extend.c ****         source_word++;
 5560              		.loc 1 619 39 is_stmt 0 view .LVU1877
 5561 214a 4D8B06   		mov	r8, QWORD PTR [r14]	# _150, *_5
 5562 214d 4983FF01 		cmp	r15, 1	# prolog_loop_niters.316,
 5563              	# sieve_extend.c:620:         source_word++;
 620:sieve_extend.c ****         copy_word++;
 5564              		.loc 1 620 20 view .LVU1878
 5565 2151 4C8B4C24 		mov	r9, QWORD PTR 8[rsp]	# source_word, %sfp
 5565      08
 5566              	# sieve_extend.c:621:         copy_word++;
 621:sieve_extend.c ****     }
 5567              		.loc 1 621 18 view .LVU1879
 5568 2156 4C8D7001 		lea	r14, 1[rax]	# copy_word,
 5569              	# sieve_extend.c:619:         bitarray[copy_word] = bitarray[source_word];
 619:sieve_extend.c ****         source_word++;
 5570              		.loc 1 619 29 view .LVU1880
 5571 215a 4F894425 		mov	QWORD PTR 0[r13+r12], r8	# *_149, _150
 5571      00
 620:sieve_extend.c ****         copy_word++;
 5572              		.loc 1 620 9 is_stmt 1 view .LVU1881
 5573              	# sieve_extend.c:620:         source_word++;
 620:sieve_extend.c ****         copy_word++;
 5574              		.loc 1 620 20 is_stmt 0 view .LVU1882
 5575 215f 4D8D6101 		lea	r12, 1[r9]	# source_word,
 5576              	.LVL272:
 621:sieve_extend.c ****     }
 5577              		.loc 1 621 9 is_stmt 1 view .LVU1883
 618:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5578              		.loc 1 618 10 view .LVU1884
 5579 2163 742A     		je	.L435	#,
 619:sieve_extend.c ****         source_word++;
 5580              		.loc 1 619 9 view .LVU1885
 5581              	# sieve_extend.c:619:         bitarray[copy_word] = bitarray[source_word];
 619:sieve_extend.c ****         source_word++;
 5582              		.loc 1 619 39 is_stmt 0 view .LVU1886
 5583 2165 4B8B4CE5 		mov	rcx, QWORD PTR 0[r13+r12*8]	# _163, *_160
 5583      00
 5584 216a 4983FF03 		cmp	r15, 3	# prolog_loop_niters.316,
 5585              	# sieve_extend.c:620:         source_word++;
 620:sieve_extend.c ****         copy_word++;
 5586              		.loc 1 620 20 view .LVU1887
 5587 216e 4D8D6102 		lea	r12, 2[r9]	# source_word,
 5588              	.LVL273:
 5589              	# sieve_extend.c:619:         bitarray[copy_word] = bitarray[source_word];
 619:sieve_extend.c ****         source_word++;
GAS LISTING /tmp/ccr2dACi.s 			page 160


 5590              		.loc 1 619 29 view .LVU1888
 5591 2172 4B894CF5 		mov	QWORD PTR 0[r13+r14*8], rcx	# *_162, _163
 5591      00
 620:sieve_extend.c ****         copy_word++;
 5592              		.loc 1 620 9 is_stmt 1 view .LVU1889
 5593              	.LVL274:
 621:sieve_extend.c ****     }
 5594              		.loc 1 621 9 view .LVU1890
 5595              	# sieve_extend.c:621:         copy_word++;
 621:sieve_extend.c ****     }
 5596              		.loc 1 621 18 is_stmt 0 view .LVU1891
 5597 2177 4C8D7002 		lea	r14, 2[rax]	# copy_word,
 5598              	.LVL275:
 618:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5599              		.loc 1 618 10 is_stmt 1 view .LVU1892
 5600 217b 7512     		jne	.L435	#,
 619:sieve_extend.c ****         source_word++;
 5601              		.loc 1 619 9 view .LVU1893
 5602              	# sieve_extend.c:619:         bitarray[copy_word] = bitarray[source_word];
 619:sieve_extend.c ****         source_word++;
 5603              		.loc 1 619 39 is_stmt 0 view .LVU1894
 5604 217d 4F8B54E5 		mov	r10, QWORD PTR 0[r13+r12*8]	# _89, *_86
 5604      00
 5605              	# sieve_extend.c:620:         source_word++;
 620:sieve_extend.c ****         copy_word++;
 5606              		.loc 1 620 20 view .LVU1895
 5607 2182 4D8D6103 		lea	r12, 3[r9]	# source_word,
 5608              	.LVL276:
 5609              	# sieve_extend.c:619:         bitarray[copy_word] = bitarray[source_word];
 619:sieve_extend.c ****         source_word++;
 5610              		.loc 1 619 29 view .LVU1896
 5611 2186 4F8954F5 		mov	QWORD PTR 0[r13+r14*8], r10	# *_88, _89
 5611      00
 620:sieve_extend.c ****         copy_word++;
 5612              		.loc 1 620 9 is_stmt 1 view .LVU1897
 5613              	.LVL277:
 621:sieve_extend.c ****     }
 5614              		.loc 1 621 9 view .LVU1898
 5615              	# sieve_extend.c:621:         copy_word++;
 621:sieve_extend.c ****     }
 5616              		.loc 1 621 18 is_stmt 0 view .LVU1899
 5617 218b 4C8D7003 		lea	r14, 3[rax]	# copy_word,
 5618              	.LVL278:
 618:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5619              		.loc 1 618 10 is_stmt 1 view .LVU1900
 5620              	.L435:
 618:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5621              		.loc 1 618 10 is_stmt 0 view .LVU1901
 5622 218f 488B7C24 		mov	rdi, QWORD PTR 8[rsp]	# source_word, %sfp
 5622      08
 5623 2194 4989DB   		mov	r11, rbx	# tmp212, destination_stop_word
 5624 2197 4D29FB   		sub	r11, r15	# tmp212, prolog_loop_niters.316
 5625 219a 4929C3   		sub	r11, rax	# niters.317, ivtmp.348
 5626 219d 4C01F8   		add	rax, r15	# tmp215, prolog_loop_niters.316
 5627 21a0 4D89D8   		mov	r8, r11	# bnd.318, niters.317
 5628 21a3 4C01FF   		add	rdi, r15	# source_word, prolog_loop_niters.316
 5629 21a6 49C1E802 		shr	r8, 2	# bnd.318,
GAS LISTING /tmp/ccr2dACi.s 			page 161


 5630 21aa 4D8D7CC5 		lea	r15, 0[r13+rax*8]	# vectp.326,
 5630      00
 5631 21af 49C1E005 		sal	r8, 5	# _182,
 5632              	# sieve_extend.c:608:     counter_t source_word = wordindex(source_start);
 608:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 5633              		.loc 1 608 15 view .LVU1902
 5634 21b3 31C0     		xor	eax, eax	# ivtmp.339
 5635 21b5 498D50E0 		lea	rdx, -32[r8]	# tmp228,
 5636 21b9 498D74FD 		lea	rsi, 0[r13+rdi*8]	# vectp.323,
 5636      00
 5637 21be 48C1EA05 		shr	rdx, 5	# tmp226,
 5638 21c2 4883C201 		add	rdx, 1	# tmp229,
 5639 21c6 83E207   		and	edx, 7	# tmp230,
 5640 21c9 0F849500 		je	.L437	#,
 5640      0000
 5641 21cf 4883FA01 		cmp	rdx, 1	# tmp230,
 5642 21d3 7477     		je	.L501	#,
 5643 21d5 4883FA02 		cmp	rdx, 2	# tmp230,
 5644 21d9 7462     		je	.L502	#,
 5645 21db 4883FA03 		cmp	rdx, 3	# tmp230,
 5646 21df 744D     		je	.L503	#,
 5647 21e1 4883FA04 		cmp	rdx, 4	# tmp230,
 5648 21e5 7438     		je	.L504	#,
 5649 21e7 4883FA05 		cmp	rdx, 5	# tmp230,
 5650 21eb 7423     		je	.L505	#,
 5651 21ed 4883FA06 		cmp	rdx, 6	# tmp230,
 5652 21f1 740E     		je	.L506	#,
 619:sieve_extend.c ****         source_word++;
 5653              		.loc 1 619 9 is_stmt 1 view .LVU1903
 5654              	# sieve_extend.c:619:         bitarray[copy_word] = bitarray[source_word];
 619:sieve_extend.c ****         source_word++;
 5655              		.loc 1 619 29 is_stmt 0 view .LVU1904
 5656 21f3 C5FD6F0E 		vmovdqa	ymm1, YMMWORD PTR [rsi]	# tmp330, MEM[base: vectp.323_119, index: ivtmp.339_180, offset: 0
 5657 21f7 B8200000 		mov	eax, 32	# ivtmp.339,
 5657      00
 5658 21fc C4C17E7F 		vmovdqu	YMMWORD PTR [r15], ymm1	# MEM[base: vectp.326_125, index: ivtmp.339_180, offset: 0B], tmp3
 5658      0F
 620:sieve_extend.c ****         copy_word++;
 5659              		.loc 1 620 9 is_stmt 1 view .LVU1905
 621:sieve_extend.c ****     }
 5660              		.loc 1 621 9 view .LVU1906
 618:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5661              		.loc 1 618 10 view .LVU1907
 5662              	.L506:
 619:sieve_extend.c ****         source_word++;
 5663              		.loc 1 619 9 view .LVU1908
 5664              	# sieve_extend.c:619:         bitarray[copy_word] = bitarray[source_word];
 619:sieve_extend.c ****         source_word++;
 5665              		.loc 1 619 29 is_stmt 0 view .LVU1909
 5666 2201 C5FD6F3C 		vmovdqa	ymm7, YMMWORD PTR [rsi+rax]	# tmp331, MEM[base: vectp.323_119, index: ivtmp.339_180, offse
 5666      06
 5667 2206 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm7	# MEM[base: vectp.326_125, index: ivtmp.339_180, offset: 0B], 
 5667      3C07
 620:sieve_extend.c ****         copy_word++;
 5668              		.loc 1 620 9 is_stmt 1 view .LVU1910
 621:sieve_extend.c ****     }
 5669              		.loc 1 621 9 view .LVU1911
GAS LISTING /tmp/ccr2dACi.s 			page 162


 618:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5670              		.loc 1 618 10 view .LVU1912
 5671 220c 4883C020 		add	rax, 32	# ivtmp.339,
 5672              	.L505:
 619:sieve_extend.c ****         source_word++;
 5673              		.loc 1 619 9 view .LVU1913
 5674              	# sieve_extend.c:619:         bitarray[copy_word] = bitarray[source_word];
 619:sieve_extend.c ****         source_word++;
 5675              		.loc 1 619 29 is_stmt 0 view .LVU1914
 5676 2210 C5FD6F34 		vmovdqa	ymm6, YMMWORD PTR [rsi+rax]	# tmp332, MEM[base: vectp.323_119, index: ivtmp.339_180, offse
 5676      06
 5677 2215 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm6	# MEM[base: vectp.326_125, index: ivtmp.339_180, offset: 0B], 
 5677      3407
 620:sieve_extend.c ****         copy_word++;
 5678              		.loc 1 620 9 is_stmt 1 view .LVU1915
 621:sieve_extend.c ****     }
 5679              		.loc 1 621 9 view .LVU1916
 618:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5680              		.loc 1 618 10 view .LVU1917
 5681 221b 4883C020 		add	rax, 32	# ivtmp.339,
 5682              	.L504:
 619:sieve_extend.c ****         source_word++;
 5683              		.loc 1 619 9 view .LVU1918
 5684              	# sieve_extend.c:619:         bitarray[copy_word] = bitarray[source_word];
 619:sieve_extend.c ****         source_word++;
 5685              		.loc 1 619 29 is_stmt 0 view .LVU1919
 5686 221f C5FD6F2C 		vmovdqa	ymm5, YMMWORD PTR [rsi+rax]	# tmp333, MEM[base: vectp.323_119, index: ivtmp.339_180, offse
 5686      06
 5687 2224 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm5	# MEM[base: vectp.326_125, index: ivtmp.339_180, offset: 0B], 
 5687      2C07
 620:sieve_extend.c ****         copy_word++;
 5688              		.loc 1 620 9 is_stmt 1 view .LVU1920
 621:sieve_extend.c ****     }
 5689              		.loc 1 621 9 view .LVU1921
 618:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5690              		.loc 1 618 10 view .LVU1922
 5691 222a 4883C020 		add	rax, 32	# ivtmp.339,
 5692              	.L503:
 619:sieve_extend.c ****         source_word++;
 5693              		.loc 1 619 9 view .LVU1923
 5694              	# sieve_extend.c:619:         bitarray[copy_word] = bitarray[source_word];
 619:sieve_extend.c ****         source_word++;
 5695              		.loc 1 619 29 is_stmt 0 view .LVU1924
 5696 222e C5FD6F24 		vmovdqa	ymm4, YMMWORD PTR [rsi+rax]	# tmp334, MEM[base: vectp.323_119, index: ivtmp.339_180, offse
 5696      06
 5697 2233 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm4	# MEM[base: vectp.326_125, index: ivtmp.339_180, offset: 0B], 
 5697      2407
 620:sieve_extend.c ****         copy_word++;
 5698              		.loc 1 620 9 is_stmt 1 view .LVU1925
 621:sieve_extend.c ****     }
 5699              		.loc 1 621 9 view .LVU1926
 618:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5700              		.loc 1 618 10 view .LVU1927
 5701 2239 4883C020 		add	rax, 32	# ivtmp.339,
 5702              	.L502:
 619:sieve_extend.c ****         source_word++;
 5703              		.loc 1 619 9 view .LVU1928
GAS LISTING /tmp/ccr2dACi.s 			page 163


 5704              	# sieve_extend.c:619:         bitarray[copy_word] = bitarray[source_word];
 619:sieve_extend.c ****         source_word++;
 5705              		.loc 1 619 29 is_stmt 0 view .LVU1929
 5706 223d C5FD6F04 		vmovdqa	ymm0, YMMWORD PTR [rsi+rax]	# tmp335, MEM[base: vectp.323_119, index: ivtmp.339_180, offse
 5706      06
 5707 2242 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm0	# MEM[base: vectp.326_125, index: ivtmp.339_180, offset: 0B], 
 5707      0407
 620:sieve_extend.c ****         copy_word++;
 5708              		.loc 1 620 9 is_stmt 1 view .LVU1930
 621:sieve_extend.c ****     }
 5709              		.loc 1 621 9 view .LVU1931
 618:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5710              		.loc 1 618 10 view .LVU1932
 5711 2248 4883C020 		add	rax, 32	# ivtmp.339,
 5712              	.L501:
 619:sieve_extend.c ****         source_word++;
 5713              		.loc 1 619 9 view .LVU1933
 5714              	# sieve_extend.c:619:         bitarray[copy_word] = bitarray[source_word];
 619:sieve_extend.c ****         source_word++;
 5715              		.loc 1 619 29 is_stmt 0 view .LVU1934
 5716 224c C5FD6F14 		vmovdqa	ymm2, YMMWORD PTR [rsi+rax]	# tmp336, MEM[base: vectp.323_119, index: ivtmp.339_180, offse
 5716      06
 5717 2251 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm2	# MEM[base: vectp.326_125, index: ivtmp.339_180, offset: 0B], 
 5717      1407
 620:sieve_extend.c ****         copy_word++;
 5718              		.loc 1 620 9 is_stmt 1 view .LVU1935
 621:sieve_extend.c ****     }
 5719              		.loc 1 621 9 view .LVU1936
 618:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5720              		.loc 1 618 10 view .LVU1937
 5721 2257 4883C020 		add	rax, 32	# ivtmp.339,
 5722 225b 4C39C0   		cmp	rax, r8	# ivtmp.339, _182
 5723 225e 0F848D00 		je	.L538	#,
 5723      0000
 5724              	.L437:
 619:sieve_extend.c ****         source_word++;
 5725              		.loc 1 619 9 view .LVU1938
 5726              	# sieve_extend.c:619:         bitarray[copy_word] = bitarray[source_word];
 619:sieve_extend.c ****         source_word++;
 5727              		.loc 1 619 29 is_stmt 0 view .LVU1939
 5728 2264 C5FD6F1C 		vmovdqa	ymm3, YMMWORD PTR [rsi+rax]	# tmp319, MEM[base: vectp.323_119, index: ivtmp.339_180, offse
 5728      06
 5729 2269 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm3	# MEM[base: vectp.326_125, index: ivtmp.339_180, offset: 0B], 
 5729      1C07
 620:sieve_extend.c ****         copy_word++;
 5730              		.loc 1 620 9 is_stmt 1 view .LVU1940
 621:sieve_extend.c ****     }
 5731              		.loc 1 621 9 view .LVU1941
 618:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5732              		.loc 1 618 10 view .LVU1942
 619:sieve_extend.c ****         source_word++;
 5733              		.loc 1 619 9 view .LVU1943
 5734              	# sieve_extend.c:619:         bitarray[copy_word] = bitarray[source_word];
 619:sieve_extend.c ****         source_word++;
 5735              		.loc 1 619 29 is_stmt 0 view .LVU1944
 5736 226f C57D6F44 		vmovdqa	ymm8, YMMWORD PTR 32[rsi+rax]	# tmp320, MEM[base: vectp.323_119, index: ivtmp.339_180, off
 5736      0620
GAS LISTING /tmp/ccr2dACi.s 			page 164


 5737 2275 C4417E7F 		vmovdqu	YMMWORD PTR 32[r15+rax], ymm8	# MEM[base: vectp.326_125, index: ivtmp.339_180, offset: 0B]
 5737      440720
 620:sieve_extend.c ****         copy_word++;
 5738              		.loc 1 620 9 is_stmt 1 view .LVU1945
 621:sieve_extend.c ****     }
 5739              		.loc 1 621 9 view .LVU1946
 618:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5740              		.loc 1 618 10 view .LVU1947
 619:sieve_extend.c ****         source_word++;
 5741              		.loc 1 619 9 view .LVU1948
 5742              	# sieve_extend.c:619:         bitarray[copy_word] = bitarray[source_word];
 619:sieve_extend.c ****         source_word++;
 5743              		.loc 1 619 29 is_stmt 0 view .LVU1949
 5744 227c C57D6F4C 		vmovdqa	ymm9, YMMWORD PTR 64[rsi+rax]	# tmp321, MEM[base: vectp.323_119, index: ivtmp.339_180, off
 5744      0640
 5745 2282 C4417E7F 		vmovdqu	YMMWORD PTR 64[r15+rax], ymm9	# MEM[base: vectp.326_125, index: ivtmp.339_180, offset: 0B]
 5745      4C0740
 620:sieve_extend.c ****         copy_word++;
 5746              		.loc 1 620 9 is_stmt 1 view .LVU1950
 621:sieve_extend.c ****     }
 5747              		.loc 1 621 9 view .LVU1951
 618:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5748              		.loc 1 618 10 view .LVU1952
 619:sieve_extend.c ****         source_word++;
 5749              		.loc 1 619 9 view .LVU1953
 5750              	# sieve_extend.c:619:         bitarray[copy_word] = bitarray[source_word];
 619:sieve_extend.c ****         source_word++;
 5751              		.loc 1 619 29 is_stmt 0 view .LVU1954
 5752 2289 C57D6F54 		vmovdqa	ymm10, YMMWORD PTR 96[rsi+rax]	# tmp322, MEM[base: vectp.323_119, index: ivtmp.339_180, of
 5752      0660
 5753 228f C4417E7F 		vmovdqu	YMMWORD PTR 96[r15+rax], ymm10	# MEM[base: vectp.326_125, index: ivtmp.339_180, offset: 0B
 5753      540760
 620:sieve_extend.c ****         copy_word++;
 5754              		.loc 1 620 9 is_stmt 1 view .LVU1955
 621:sieve_extend.c ****     }
 5755              		.loc 1 621 9 view .LVU1956
 618:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5756              		.loc 1 618 10 view .LVU1957
 619:sieve_extend.c ****         source_word++;
 5757              		.loc 1 619 9 view .LVU1958
 5758              	# sieve_extend.c:619:         bitarray[copy_word] = bitarray[source_word];
 619:sieve_extend.c ****         source_word++;
 5759              		.loc 1 619 29 is_stmt 0 view .LVU1959
 5760 2296 C57D6F9C 		vmovdqa	ymm11, YMMWORD PTR 128[rsi+rax]	# tmp323, MEM[base: vectp.323_119, index: ivtmp.339_180, o
 5760      06800000 
 5760      00
 5761 229f C4417E7F 		vmovdqu	YMMWORD PTR 128[r15+rax], ymm11	# MEM[base: vectp.326_125, index: ivtmp.339_180, offset: 0
 5761      9C078000 
 5761      0000
 620:sieve_extend.c ****         copy_word++;
 5762              		.loc 1 620 9 is_stmt 1 view .LVU1960
 621:sieve_extend.c ****     }
 5763              		.loc 1 621 9 view .LVU1961
 618:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5764              		.loc 1 618 10 view .LVU1962
 619:sieve_extend.c ****         source_word++;
 5765              		.loc 1 619 9 view .LVU1963
GAS LISTING /tmp/ccr2dACi.s 			page 165


 5766              	# sieve_extend.c:619:         bitarray[copy_word] = bitarray[source_word];
 619:sieve_extend.c ****         source_word++;
 5767              		.loc 1 619 29 is_stmt 0 view .LVU1964
 5768 22a9 C57D6FA4 		vmovdqa	ymm12, YMMWORD PTR 160[rsi+rax]	# tmp324, MEM[base: vectp.323_119, index: ivtmp.339_180, o
 5768      06A00000 
 5768      00
 5769 22b2 C4417E7F 		vmovdqu	YMMWORD PTR 160[r15+rax], ymm12	# MEM[base: vectp.326_125, index: ivtmp.339_180, offset: 0
 5769      A407A000 
 5769      0000
 620:sieve_extend.c ****         copy_word++;
 5770              		.loc 1 620 9 is_stmt 1 view .LVU1965
 621:sieve_extend.c ****     }
 5771              		.loc 1 621 9 view .LVU1966
 618:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5772              		.loc 1 618 10 view .LVU1967
 619:sieve_extend.c ****         source_word++;
 5773              		.loc 1 619 9 view .LVU1968
 5774              	# sieve_extend.c:619:         bitarray[copy_word] = bitarray[source_word];
 619:sieve_extend.c ****         source_word++;
 5775              		.loc 1 619 29 is_stmt 0 view .LVU1969
 5776 22bc C57D6FAC 		vmovdqa	ymm13, YMMWORD PTR 192[rsi+rax]	# tmp325, MEM[base: vectp.323_119, index: ivtmp.339_180, o
 5776      06C00000 
 5776      00
 5777 22c5 C4417E7F 		vmovdqu	YMMWORD PTR 192[r15+rax], ymm13	# MEM[base: vectp.326_125, index: ivtmp.339_180, offset: 0
 5777      AC07C000 
 5777      0000
 620:sieve_extend.c ****         copy_word++;
 5778              		.loc 1 620 9 is_stmt 1 view .LVU1970
 621:sieve_extend.c ****     }
 5779              		.loc 1 621 9 view .LVU1971
 618:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5780              		.loc 1 618 10 view .LVU1972
 619:sieve_extend.c ****         source_word++;
 5781              		.loc 1 619 9 view .LVU1973
 5782              	# sieve_extend.c:619:         bitarray[copy_word] = bitarray[source_word];
 619:sieve_extend.c ****         source_word++;
 5783              		.loc 1 619 29 is_stmt 0 view .LVU1974
 5784 22cf C57D6FB4 		vmovdqa	ymm14, YMMWORD PTR 224[rsi+rax]	# tmp326, MEM[base: vectp.323_119, index: ivtmp.339_180, o
 5784      06E00000 
 5784      00
 5785 22d8 C4417E7F 		vmovdqu	YMMWORD PTR 224[r15+rax], ymm14	# MEM[base: vectp.326_125, index: ivtmp.339_180, offset: 0
 5785      B407E000 
 5785      0000
 620:sieve_extend.c ****         copy_word++;
 5786              		.loc 1 620 9 is_stmt 1 view .LVU1975
 621:sieve_extend.c ****     }
 5787              		.loc 1 621 9 view .LVU1976
 618:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5788              		.loc 1 618 10 view .LVU1977
 5789 22e2 48050001 		add	rax, 256	# ivtmp.339,
 5789      0000
 5790 22e8 4C39C0   		cmp	rax, r8	# ivtmp.339, _182
 5791 22eb 0F8573FF 		jne	.L437	#,
 5791      FFFF
 5792              	.L538:
 5793 22f1 4D89D9   		mov	r9, r11	# niters_vector_mult_vf.319, niters.317
 5794 22f4 4983E1FC 		and	r9, -4	# niters_vector_mult_vf.319,
GAS LISTING /tmp/ccr2dACi.s 			page 166


 5795 22f8 4D01CC   		add	r12, r9	# tmp.320, niters_vector_mult_vf.319
 5796 22fb 4D01CE   		add	r14, r9	# tmp.321, niters_vector_mult_vf.319
 5797 22fe 4D39CB   		cmp	r11, r9	# niters.317, niters_vector_mult_vf.319
 5798 2301 7455     		je	.L541	#,
 5799              	.LVL279:
 619:sieve_extend.c ****         source_word++;
 5800              		.loc 1 619 9 view .LVU1978
 5801              	# sieve_extend.c:619:         bitarray[copy_word] = bitarray[source_word];
 619:sieve_extend.c ****         source_word++;
 5802              		.loc 1 619 39 is_stmt 0 view .LVU1979
 5803 2303 4B8B4CE5 		mov	rcx, QWORD PTR 0[r13+r12*8]	# _37, *_21
 5803      00
 5804              	# sieve_extend.c:621:         copy_word++;
 621:sieve_extend.c ****     }
 5805              		.loc 1 621 18 view .LVU1980
 5806 2308 4D8D5601 		lea	r10, 1[r14]	# copy_word,
 5807              	# sieve_extend.c:620:         source_word++;
 620:sieve_extend.c ****         copy_word++;
 5808              		.loc 1 620 20 view .LVU1981
 5809 230c 4983C401 		add	r12, 1	# source_word,
 5810              	.LVL280:
 5811              	# sieve_extend.c:618:    while (copy_word < destination_stop_word) {
 618:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5812              		.loc 1 618 10 view .LVU1982
 5813 2310 4C39D3   		cmp	rbx, r10	# destination_stop_word, copy_word
 5814              	# sieve_extend.c:619:         bitarray[copy_word] = bitarray[source_word];
 619:sieve_extend.c ****         source_word++;
 5815              		.loc 1 619 29 view .LVU1983
 5816 2313 4B894CF5 		mov	QWORD PTR 0[r13+r14*8], rcx	# *_23, _37
 5816      00
 620:sieve_extend.c ****         copy_word++;
 5817              		.loc 1 620 9 is_stmt 1 view .LVU1984
 5818              	.LVL281:
 621:sieve_extend.c ****     }
 5819              		.loc 1 621 9 view .LVU1985
 618:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5820              		.loc 1 618 10 view .LVU1986
 5821 2318 763E     		jbe	.L541	#,
 619:sieve_extend.c ****         source_word++;
 5822              		.loc 1 619 9 view .LVU1987
 5823              	# sieve_extend.c:619:         bitarray[copy_word] = bitarray[source_word];
 619:sieve_extend.c ****         source_word++;
 5824              		.loc 1 619 39 is_stmt 0 view .LVU1988
 5825 231a 4E8D1CE5 		lea	r11, 0[0+r12*8]	# _134,
 5825      00000000 
 5826              	# sieve_extend.c:621:         copy_word++;
 621:sieve_extend.c ****     }
 5827              		.loc 1 621 18 view .LVU1989
 5828 2322 4983C602 		add	r14, 2	# copy_word,
 5829              	# sieve_extend.c:619:         bitarray[copy_word] = bitarray[source_word];
 619:sieve_extend.c ****         source_word++;
 5830              		.loc 1 619 39 view .LVU1990
 5831 2326 4F8B64E5 		mov	r12, QWORD PTR 0[r13+r12*8]	# _138, *_135
 5831      00
 5832              	# sieve_extend.c:618:    while (copy_word < destination_stop_word) {
 618:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5833              		.loc 1 618 10 view .LVU1991
GAS LISTING /tmp/ccr2dACi.s 			page 167


 5834 232b 4C39F3   		cmp	rbx, r14	# destination_stop_word, copy_word
 5835              	# sieve_extend.c:619:         bitarray[copy_word] = bitarray[source_word];
 619:sieve_extend.c ****         source_word++;
 5836              		.loc 1 619 29 view .LVU1992
 5837 232e 4F8964D5 		mov	QWORD PTR 0[r13+r10*8], r12	# *_137, _138
 5837      00
 620:sieve_extend.c ****         copy_word++;
 5838              		.loc 1 620 9 is_stmt 1 view .LVU1993
 621:sieve_extend.c ****     }
 5839              		.loc 1 621 9 view .LVU1994
 5840              	.LVL282:
 618:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5841              		.loc 1 618 10 view .LVU1995
 5842 2333 7623     		jbe	.L541	#,
 619:sieve_extend.c ****         source_word++;
 5843              		.loc 1 619 9 view .LVU1996
 5844              	# sieve_extend.c:619:         bitarray[copy_word] = bitarray[source_word];
 619:sieve_extend.c ****         source_word++;
 5845              		.loc 1 619 39 is_stmt 0 view .LVU1997
 5846 2335 4B8B5C1D 		mov	rbx, QWORD PTR 8[r13+r11]	# _109, *_106
 5846      08
 5847              	.LVL283:
 5848              	# sieve_extend.c:619:         bitarray[copy_word] = bitarray[source_word];
 619:sieve_extend.c ****         source_word++;
 5849              		.loc 1 619 29 view .LVU1998
 5850 233a 4B895CF5 		mov	QWORD PTR 0[r13+r14*8], rbx	# *_108, _109
 5850      00
 620:sieve_extend.c ****         copy_word++;
 5851              		.loc 1 620 9 is_stmt 1 view .LVU1999
 621:sieve_extend.c ****     }
 5852              		.loc 1 621 9 view .LVU2000
 618:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5853              		.loc 1 618 10 view .LVU2001
 5854 233f C5F877   		vzeroupper
 5855              	.LVL284:
 5856              	.L542:
 5857              	# sieve_extend.c:624: }
 624:sieve_extend.c **** 
 5858              		.loc 1 624 1 is_stmt 0 view .LVU2002
 5859 2342 488D65D8 		lea	rsp, -40[rbp]	#,
 5860 2346 5B       		pop	rbx	#
 5861 2347 415C     		pop	r12	#
 5862 2349 415D     		pop	r13	#
 5863 234b 415E     		pop	r14	#
 5864 234d 415F     		pop	r15	#
 5865 234f 5D       		pop	rbp	#
 5866              		.cfi_remember_state
 5867              		.cfi_def_cfa 7, 8
 5868 2350 C3       		ret	
 5869              	.LVL285:
 5870              		.p2align 4,,7
 5871 2351 0F1F8000 		.p2align 3
 5871      000000
 5872              	.L541:
 5873              		.cfi_restore_state
 624:sieve_extend.c **** 
 5874              		.loc 1 624 1 view .LVU2003
GAS LISTING /tmp/ccr2dACi.s 			page 168


 5875 2358 C5F877   		vzeroupper
 5876 235b 488D65D8 		lea	rsp, -40[rbp]	#,
 5877 235f 5B       		pop	rbx	#
 5878              	.LVL286:
 624:sieve_extend.c **** 
 5879              		.loc 1 624 1 view .LVU2004
 5880 2360 415C     		pop	r12	#
 5881 2362 415D     		pop	r13	#
 5882              	.LVL287:
 624:sieve_extend.c **** 
 5883              		.loc 1 624 1 view .LVU2005
 5884 2364 415E     		pop	r14	#
 5885 2366 415F     		pop	r15	#
 5886 2368 5D       		pop	rbp	#
 5887              		.cfi_remember_state
 5888              		.cfi_def_cfa 7, 8
 5889 2369 C3       		ret	
 5890              	.LVL288:
 5891 236a 660F1F44 		.p2align 4,,7
 5891      0000
 5892              		.p2align 3
 5893              	.L434:
 5894              		.cfi_restore_state
 5895              	# sieve_extend.c:619:         bitarray[copy_word] = bitarray[source_word];
 619:sieve_extend.c ****         source_word++;
 5896              		.loc 1 619 39 view .LVU2006
 5897 2370 488B7C24 		mov	rdi, QWORD PTR 8[rsp]	# source_word, %sfp
 5897      08
 5898 2375 4F8D7425 		lea	r14, 0[r13+r12]	# ivtmp.334,
 5898      00
 5899 237a 4D8D6CDD 		lea	r13, 0[r13+rbx*8]	# _179,
 5899      00
 5900              	.LVL289:
 619:sieve_extend.c ****         source_word++;
 5901              		.loc 1 619 39 view .LVU2007
 5902 237f 4C89EE   		mov	rsi, r13	# tmp221, _179
 5903 2382 4C29F6   		sub	rsi, r14	# tmp221, ivtmp.334
 5904 2385 4829C7   		sub	rdi, rax	# source_word, ivtmp.348
 5905 2388 4883EE08 		sub	rsi, 8	# tmp222,
 5906 238c 48C1EE03 		shr	rsi, 3	# tmp220,
 5907 2390 4883C601 		add	rsi, 1	# tmp223,
 5908 2394 83E607   		and	esi, 7	# tmp224,
 5909 2397 0F848100 		je	.L439	#,
 5909      0000
 5910 239d 4883FE01 		cmp	rsi, 1	# tmp224,
 5911 23a1 7466     		je	.L507	#,
 5912 23a3 4883FE02 		cmp	rsi, 2	# tmp224,
 5913 23a7 7454     		je	.L508	#,
 5914 23a9 4883FE03 		cmp	rsi, 3	# tmp224,
 5915 23ad 7442     		je	.L509	#,
 5916 23af 4883FE04 		cmp	rsi, 4	# tmp224,
 5917 23b3 7430     		je	.L510	#,
 5918 23b5 4883FE05 		cmp	rsi, 5	# tmp224,
 5919 23b9 741E     		je	.L511	#,
 5920 23bb 4883FE06 		cmp	rsi, 6	# tmp224,
 5921 23bf 740C     		je	.L512	#,
 5922              	.LVL290:
GAS LISTING /tmp/ccr2dACi.s 			page 169


 619:sieve_extend.c ****         source_word++;
 5923              		.loc 1 619 9 is_stmt 1 view .LVU2008
 5924              	# sieve_extend.c:619:         bitarray[copy_word] = bitarray[source_word];
 619:sieve_extend.c ****         source_word++;
 5925              		.loc 1 619 39 is_stmt 0 view .LVU2009
 5926 23c1 4D8B3CFE 		mov	r15, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5927 23c5 4983C608 		add	r14, 8	# ivtmp.334,
 5928              	# sieve_extend.c:619:         bitarray[copy_word] = bitarray[source_word];
 619:sieve_extend.c ****         source_word++;
 5929              		.loc 1 619 29 view .LVU2010
 5930 23c9 4D897EF8 		mov	QWORD PTR -8[r14], r15	# MEM[base: _174, offset: 0B], _70
 620:sieve_extend.c ****         copy_word++;
 5931              		.loc 1 620 9 is_stmt 1 view .LVU2011
 621:sieve_extend.c ****     }
 5932              		.loc 1 621 9 view .LVU2012
 618:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5933              		.loc 1 618 10 view .LVU2013
 5934              	.L512:
 619:sieve_extend.c ****         source_word++;
 5935              		.loc 1 619 9 view .LVU2014
 5936              	# sieve_extend.c:619:         bitarray[copy_word] = bitarray[source_word];
 619:sieve_extend.c ****         source_word++;
 5937              		.loc 1 619 39 is_stmt 0 view .LVU2015
 5938 23cd 4D8B04FE 		mov	r8, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5939 23d1 4983C608 		add	r14, 8	# ivtmp.334,
 5940              	# sieve_extend.c:619:         bitarray[copy_word] = bitarray[source_word];
 619:sieve_extend.c ****         source_word++;
 5941              		.loc 1 619 29 view .LVU2016
 5942 23d5 4D8946F8 		mov	QWORD PTR -8[r14], r8	# MEM[base: _174, offset: 0B], _70
 620:sieve_extend.c ****         copy_word++;
 5943              		.loc 1 620 9 is_stmt 1 view .LVU2017
 621:sieve_extend.c ****     }
 5944              		.loc 1 621 9 view .LVU2018
 618:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5945              		.loc 1 618 10 view .LVU2019
 5946              	.L511:
 619:sieve_extend.c ****         source_word++;
 5947              		.loc 1 619 9 view .LVU2020
 5948              	# sieve_extend.c:619:         bitarray[copy_word] = bitarray[source_word];
 619:sieve_extend.c ****         source_word++;
 5949              		.loc 1 619 39 is_stmt 0 view .LVU2021
 5950 23d9 498B14FE 		mov	rdx, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5951 23dd 4983C608 		add	r14, 8	# ivtmp.334,
 5952              	# sieve_extend.c:619:         bitarray[copy_word] = bitarray[source_word];
 619:sieve_extend.c ****         source_word++;
 5953              		.loc 1 619 29 view .LVU2022
 5954 23e1 498956F8 		mov	QWORD PTR -8[r14], rdx	# MEM[base: _174, offset: 0B], _70
 620:sieve_extend.c ****         copy_word++;
 5955              		.loc 1 620 9 is_stmt 1 view .LVU2023
 621:sieve_extend.c ****     }
 5956              		.loc 1 621 9 view .LVU2024
 618:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5957              		.loc 1 618 10 view .LVU2025
 5958              	.L510:
 619:sieve_extend.c ****         source_word++;
 5959              		.loc 1 619 9 view .LVU2026
 5960              	# sieve_extend.c:619:         bitarray[copy_word] = bitarray[source_word];
GAS LISTING /tmp/ccr2dACi.s 			page 170


 619:sieve_extend.c ****         source_word++;
 5961              		.loc 1 619 39 is_stmt 0 view .LVU2027
 5962 23e5 498B04FE 		mov	rax, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5963 23e9 4983C608 		add	r14, 8	# ivtmp.334,
 5964              	# sieve_extend.c:619:         bitarray[copy_word] = bitarray[source_word];
 619:sieve_extend.c ****         source_word++;
 5965              		.loc 1 619 29 view .LVU2028
 5966 23ed 498946F8 		mov	QWORD PTR -8[r14], rax	# MEM[base: _174, offset: 0B], _70
 620:sieve_extend.c ****         copy_word++;
 5967              		.loc 1 620 9 is_stmt 1 view .LVU2029
 621:sieve_extend.c ****     }
 5968              		.loc 1 621 9 view .LVU2030
 618:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5969              		.loc 1 618 10 view .LVU2031
 5970              	.L509:
 619:sieve_extend.c ****         source_word++;
 5971              		.loc 1 619 9 view .LVU2032
 5972              	# sieve_extend.c:619:         bitarray[copy_word] = bitarray[source_word];
 619:sieve_extend.c ****         source_word++;
 5973              		.loc 1 619 39 is_stmt 0 view .LVU2033
 5974 23f1 4D8B0CFE 		mov	r9, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5975 23f5 4983C608 		add	r14, 8	# ivtmp.334,
 5976              	# sieve_extend.c:619:         bitarray[copy_word] = bitarray[source_word];
 619:sieve_extend.c ****         source_word++;
 5977              		.loc 1 619 29 view .LVU2034
 5978 23f9 4D894EF8 		mov	QWORD PTR -8[r14], r9	# MEM[base: _174, offset: 0B], _70
 620:sieve_extend.c ****         copy_word++;
 5979              		.loc 1 620 9 is_stmt 1 view .LVU2035
 621:sieve_extend.c ****     }
 5980              		.loc 1 621 9 view .LVU2036
 618:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5981              		.loc 1 618 10 view .LVU2037
 5982              	.L508:
 619:sieve_extend.c ****         source_word++;
 5983              		.loc 1 619 9 view .LVU2038
 5984              	# sieve_extend.c:619:         bitarray[copy_word] = bitarray[source_word];
 619:sieve_extend.c ****         source_word++;
 5985              		.loc 1 619 39 is_stmt 0 view .LVU2039
 5986 23fd 498B0CFE 		mov	rcx, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5987 2401 4983C608 		add	r14, 8	# ivtmp.334,
 5988              	# sieve_extend.c:619:         bitarray[copy_word] = bitarray[source_word];
 619:sieve_extend.c ****         source_word++;
 5989              		.loc 1 619 29 view .LVU2040
 5990 2405 49894EF8 		mov	QWORD PTR -8[r14], rcx	# MEM[base: _174, offset: 0B], _70
 620:sieve_extend.c ****         copy_word++;
 5991              		.loc 1 620 9 is_stmt 1 view .LVU2041
 621:sieve_extend.c ****     }
 5992              		.loc 1 621 9 view .LVU2042
 618:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5993              		.loc 1 618 10 view .LVU2043
 5994              	.L507:
 619:sieve_extend.c ****         source_word++;
 5995              		.loc 1 619 9 view .LVU2044
 5996              	# sieve_extend.c:619:         bitarray[copy_word] = bitarray[source_word];
 619:sieve_extend.c ****         source_word++;
 5997              		.loc 1 619 39 is_stmt 0 view .LVU2045
 5998 2409 4D8B14FE 		mov	r10, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
GAS LISTING /tmp/ccr2dACi.s 			page 171


 5999 240d 4983C608 		add	r14, 8	# ivtmp.334,
 6000              	# sieve_extend.c:619:         bitarray[copy_word] = bitarray[source_word];
 619:sieve_extend.c ****         source_word++;
 6001              		.loc 1 619 29 view .LVU2046
 6002 2411 4D8956F8 		mov	QWORD PTR -8[r14], r10	# MEM[base: _174, offset: 0B], _70
 620:sieve_extend.c ****         copy_word++;
 6003              		.loc 1 620 9 is_stmt 1 view .LVU2047
 621:sieve_extend.c ****     }
 6004              		.loc 1 621 9 view .LVU2048
 618:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6005              		.loc 1 618 10 view .LVU2049
 6006 2415 4D39EE   		cmp	r14, r13	# ivtmp.334, _179
 6007 2418 0F8424FF 		je	.L542	#,
 6007      FFFF
 6008              	.LVL291:
 6009              	.L439:
 619:sieve_extend.c ****         source_word++;
 6010              		.loc 1 619 9 view .LVU2050
 6011              	# sieve_extend.c:619:         bitarray[copy_word] = bitarray[source_word];
 619:sieve_extend.c ****         source_word++;
 6012              		.loc 1 619 39 is_stmt 0 view .LVU2051
 6013 241e 4D8B1CFE 		mov	r11, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 6014              	# sieve_extend.c:619:         bitarray[copy_word] = bitarray[source_word];
 619:sieve_extend.c ****         source_word++;
 6015              		.loc 1 619 29 view .LVU2052
 6016 2422 4D891E   		mov	QWORD PTR [r14], r11	# MEM[base: _174, offset: 0B], _70
 620:sieve_extend.c ****         copy_word++;
 6017              		.loc 1 620 9 is_stmt 1 view .LVU2053
 621:sieve_extend.c ****     }
 6018              		.loc 1 621 9 view .LVU2054
 618:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6019              		.loc 1 618 10 view .LVU2055
 619:sieve_extend.c ****         source_word++;
 6020              		.loc 1 619 9 view .LVU2056
 6021              	# sieve_extend.c:619:         bitarray[copy_word] = bitarray[source_word];
 619:sieve_extend.c ****         source_word++;
 6022              		.loc 1 619 39 is_stmt 0 view .LVU2057
 6023 2425 4D8B64FE 		mov	r12, QWORD PTR 8[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 6023      08
 6024              	# sieve_extend.c:619:         bitarray[copy_word] = bitarray[source_word];
 619:sieve_extend.c ****         source_word++;
 6025              		.loc 1 619 29 view .LVU2058
 6026 242a 4D896608 		mov	QWORD PTR 8[r14], r12	# MEM[base: _174, offset: 0B], _70
 620:sieve_extend.c ****         copy_word++;
 6027              		.loc 1 620 9 is_stmt 1 view .LVU2059
 621:sieve_extend.c ****     }
 6028              		.loc 1 621 9 view .LVU2060
 618:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6029              		.loc 1 618 10 view .LVU2061
 619:sieve_extend.c ****         source_word++;
 6030              		.loc 1 619 9 view .LVU2062
 6031              	# sieve_extend.c:619:         bitarray[copy_word] = bitarray[source_word];
 619:sieve_extend.c ****         source_word++;
 6032              		.loc 1 619 39 is_stmt 0 view .LVU2063
 6033 242e 498B5CFE 		mov	rbx, QWORD PTR 16[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 6033      10
 6034              	# sieve_extend.c:619:         bitarray[copy_word] = bitarray[source_word];
GAS LISTING /tmp/ccr2dACi.s 			page 172


 619:sieve_extend.c ****         source_word++;
 6035              		.loc 1 619 29 view .LVU2064
 6036 2433 49895E10 		mov	QWORD PTR 16[r14], rbx	# MEM[base: _174, offset: 0B], _70
 620:sieve_extend.c ****         copy_word++;
 6037              		.loc 1 620 9 is_stmt 1 view .LVU2065
 621:sieve_extend.c ****     }
 6038              		.loc 1 621 9 view .LVU2066
 618:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6039              		.loc 1 618 10 view .LVU2067
 619:sieve_extend.c ****         source_word++;
 6040              		.loc 1 619 9 view .LVU2068
 6041              	# sieve_extend.c:619:         bitarray[copy_word] = bitarray[source_word];
 619:sieve_extend.c ****         source_word++;
 6042              		.loc 1 619 39 is_stmt 0 view .LVU2069
 6043 2437 498B74FE 		mov	rsi, QWORD PTR 24[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 6043      18
 6044              	# sieve_extend.c:619:         bitarray[copy_word] = bitarray[source_word];
 619:sieve_extend.c ****         source_word++;
 6045              		.loc 1 619 29 view .LVU2070
 6046 243c 49897618 		mov	QWORD PTR 24[r14], rsi	# MEM[base: _174, offset: 0B], _70
 620:sieve_extend.c ****         copy_word++;
 6047              		.loc 1 620 9 is_stmt 1 view .LVU2071
 621:sieve_extend.c ****     }
 6048              		.loc 1 621 9 view .LVU2072
 618:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6049              		.loc 1 618 10 view .LVU2073
 619:sieve_extend.c ****         source_word++;
 6050              		.loc 1 619 9 view .LVU2074
 6051              	# sieve_extend.c:619:         bitarray[copy_word] = bitarray[source_word];
 619:sieve_extend.c ****         source_word++;
 6052              		.loc 1 619 39 is_stmt 0 view .LVU2075
 6053 2440 4D8B7CFE 		mov	r15, QWORD PTR 32[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 6053      20
 6054              	# sieve_extend.c:619:         bitarray[copy_word] = bitarray[source_word];
 619:sieve_extend.c ****         source_word++;
 6055              		.loc 1 619 29 view .LVU2076
 6056 2445 4D897E20 		mov	QWORD PTR 32[r14], r15	# MEM[base: _174, offset: 0B], _70
 620:sieve_extend.c ****         copy_word++;
 6057              		.loc 1 620 9 is_stmt 1 view .LVU2077
 621:sieve_extend.c ****     }
 6058              		.loc 1 621 9 view .LVU2078
 618:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6059              		.loc 1 618 10 view .LVU2079
 619:sieve_extend.c ****         source_word++;
 6060              		.loc 1 619 9 view .LVU2080
 6061              	# sieve_extend.c:619:         bitarray[copy_word] = bitarray[source_word];
 619:sieve_extend.c ****         source_word++;
 6062              		.loc 1 619 39 is_stmt 0 view .LVU2081
 6063 2449 4D8B44FE 		mov	r8, QWORD PTR 40[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 6063      28
 6064              	# sieve_extend.c:619:         bitarray[copy_word] = bitarray[source_word];
 619:sieve_extend.c ****         source_word++;
 6065              		.loc 1 619 29 view .LVU2082
 6066 244e 4D894628 		mov	QWORD PTR 40[r14], r8	# MEM[base: _174, offset: 0B], _70
 620:sieve_extend.c ****         copy_word++;
 6067              		.loc 1 620 9 is_stmt 1 view .LVU2083
 621:sieve_extend.c ****     }
GAS LISTING /tmp/ccr2dACi.s 			page 173


 6068              		.loc 1 621 9 view .LVU2084
 618:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6069              		.loc 1 618 10 view .LVU2085
 619:sieve_extend.c ****         source_word++;
 6070              		.loc 1 619 9 view .LVU2086
 6071              	# sieve_extend.c:619:         bitarray[copy_word] = bitarray[source_word];
 619:sieve_extend.c ****         source_word++;
 6072              		.loc 1 619 39 is_stmt 0 view .LVU2087
 6073 2452 498B54FE 		mov	rdx, QWORD PTR 48[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 6073      30
 6074              	# sieve_extend.c:619:         bitarray[copy_word] = bitarray[source_word];
 619:sieve_extend.c ****         source_word++;
 6075              		.loc 1 619 29 view .LVU2088
 6076 2457 49895630 		mov	QWORD PTR 48[r14], rdx	# MEM[base: _174, offset: 0B], _70
 620:sieve_extend.c ****         copy_word++;
 6077              		.loc 1 620 9 is_stmt 1 view .LVU2089
 621:sieve_extend.c ****     }
 6078              		.loc 1 621 9 view .LVU2090
 618:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6079              		.loc 1 618 10 view .LVU2091
 619:sieve_extend.c ****         source_word++;
 6080              		.loc 1 619 9 view .LVU2092
 6081              	# sieve_extend.c:619:         bitarray[copy_word] = bitarray[source_word];
 619:sieve_extend.c ****         source_word++;
 6082              		.loc 1 619 39 is_stmt 0 view .LVU2093
 6083 245b 498B44FE 		mov	rax, QWORD PTR 56[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 6083      38
 6084 2460 4983C640 		add	r14, 64	# ivtmp.334,
 6085              	# sieve_extend.c:619:         bitarray[copy_word] = bitarray[source_word];
 619:sieve_extend.c ****         source_word++;
 6086              		.loc 1 619 29 view .LVU2094
 6087 2464 498946F8 		mov	QWORD PTR -8[r14], rax	# MEM[base: _174, offset: 0B], _70
 620:sieve_extend.c ****         copy_word++;
 6088              		.loc 1 620 9 is_stmt 1 view .LVU2095
 621:sieve_extend.c ****     }
 6089              		.loc 1 621 9 view .LVU2096
 618:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6090              		.loc 1 618 10 view .LVU2097
 6091 2468 4D39EE   		cmp	r14, r13	# ivtmp.334, _179
 6092 246b 75B1     		jne	.L439	#,
 6093 246d E9D0FEFF 		jmp	.L542	#
 6093      FF
 6094              	.LVL292:
 6095              		.p2align 4,,7
 6096 2472 660F1F44 		.p2align 3
 6096      0000
 6097              	.L441:
 6098              	# sieve_extend.c:608:     counter_t source_word = wordindex(source_start);
 608:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 6099              		.loc 1 608 15 is_stmt 0 view .LVU2098
 6100 2478 4C8B6424 		mov	r12, QWORD PTR 8[rsp]	# source_word, %sfp
 6100      08
 6101              	# sieve_extend.c:618:    while (copy_word < destination_stop_word) {
 618:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6102              		.loc 1 618 10 view .LVU2099
 6103 247d 4989C6   		mov	r14, rax	# copy_word, ivtmp.348
 6104 2480 E90AFDFF 		jmp	.L435	#
GAS LISTING /tmp/ccr2dACi.s 			page 174


 6104      FF
 6105              		.cfi_endproc
 6106              	.LFE66:
 6108 2485 66662E0F 		.p2align 4
 6108      1F840000 
 6108      000000
 6110              	extendSieve_shiftleft:
 6111              	.LVL293:
 6112              	.LFB72:
 864:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 6113              		.loc 1 864 142 is_stmt 1 view -0
 6114              		.cfi_startproc
 865:sieve_extend.c **** 
 6115              		.loc 1 865 5 view .LVU2101
 867:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 6116              		.loc 1 867 5 view .LVU2102
 6117              	# sieve_extend.c:864: static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source
 864:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 6118              		.loc 1 864 142 is_stmt 0 view .LVU2103
 6119 2490 55       		push	rbp	#
 6120              		.cfi_def_cfa_offset 16
 6121              		.cfi_offset 6, -16
 6122              	# sieve_extend.c:867:     const counter_t destination_stop_word = wordindex(destination_stop);
 867:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 6123              		.loc 1 867 21 view .LVU2104
 6124 2491 48C1E906 		shr	rcx, 6	# tmp1219,
 6125              	.LVL294:
 6126              	# sieve_extend.c:864: static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source
 864:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 6127              		.loc 1 864 142 view .LVU2105
 6128 2495 4989D2   		mov	r10, rdx	# size, tmp1218
 6129 2498 4889E5   		mov	rbp, rsp	#,
 6130              		.cfi_def_cfa_register 6
 6131 249b 4157     		push	r15	#
 6132 249d 4156     		push	r14	#
 6133              		.cfi_offset 15, -24
 6134              		.cfi_offset 14, -32
 6135              	# sieve_extend.c:867:     const counter_t destination_stop_word = wordindex(destination_stop);
 867:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 6136              		.loc 1 867 21 view .LVU2106
 6137 249f 4989CE   		mov	r14, rcx	# destination_stop_word, tmp1219
 6138              	# sieve_extend.c:864: static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source
 864:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 6139              		.loc 1 864 142 view .LVU2107
 6140 24a2 4155     		push	r13	#
 6141 24a4 4154     		push	r12	#
 6142 24a6 53       		push	rbx	#
 6143              		.cfi_offset 13, -40
 6144              		.cfi_offset 12, -48
 6145              		.cfi_offset 3, -56
 6146 24a7 4889FB   		mov	rbx, rdi	# bitarray, tmp1216
 6147              	# sieve_extend.c:868:     const counter_t copy_start = source_start + size;
 868:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_calc(copy_start);
 6148              		.loc 1 868 21 view .LVU2108
 6149 24aa 488D3C16 		lea	rdi, [rsi+rdx]	# copy_start,
 6150              	.LVL295:
 6151              	# sieve_extend.c:864: static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source
GAS LISTING /tmp/ccr2dACi.s 			page 175


 864:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 6152              		.loc 1 864 142 view .LVU2109
 6153 24ae 4883E4E0 		and	rsp, -32	#,
 6154              	# sieve_extend.c:869:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 869:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 6155              		.loc 1 869 69 view .LVU2110
 6156 24b2 4889F8   		mov	rax, rdi	# _5, copy_start
 6157              	# sieve_extend.c:864: static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source
 864:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 6158              		.loc 1 864 142 view .LVU2111
 6159 24b5 488D6424 		lea	rsp, -96[rsp]	#,
 6159      A0
 6160              	# sieve_extend.c:872:     register counter_t copy_word = wordindex(copy_start);
 872:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 6161              		.loc 1 872 24 view .LVU2112
 6162 24ba 4989FB   		mov	r11, rdi	# copy_word, copy_start
 6163              	# sieve_extend.c:867:     const counter_t destination_stop_word = wordindex(destination_stop);
 867:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 6164              		.loc 1 867 21 view .LVU2113
 6165 24bd 48894C24 		mov	QWORD PTR 80[rsp], rcx	# %sfp, destination_stop_word
 6165      50
 6166              	.LVL296:
 868:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_calc(copy_start);
 6167              		.loc 1 868 5 is_stmt 1 view .LVU2114
 869:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 6168              		.loc 1 869 5 view .LVU2115
 6169              	# sieve_extend.c:869:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 869:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 6170              		.loc 1 869 39 is_stmt 0 view .LVU2116
 6171 24c2 4889F1   		mov	rcx, rsi	# _4, source_start
 6172              	.LVL297:
 6173              	# sieve_extend.c:871:     register counter_t source_word = wordindex(source_start);
 871:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 6174              		.loc 1 871 24 view .LVU2117
 6175 24c5 48C1EE06 		shr	rsi, 6	# source_start,
 6176              	.LVL298:
 6177              	# sieve_extend.c:869:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 869:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 6178              		.loc 1 869 39 view .LVU2118
 6179 24c9 83E13F   		and	ecx, 63	# _4,
 6180              	.LVL299:
 6181              	# sieve_extend.c:871:     register counter_t source_word = wordindex(source_start);
 871:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 6182              		.loc 1 871 24 view .LVU2119
 6183 24cc 4989F0   		mov	r8, rsi	# source_word, source_start
 6184              	# sieve_extend.c:869:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 869:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 6185              		.loc 1 869 69 view .LVU2120
 6186 24cf 83E03F   		and	eax, 63	# _5,
 6187              	.LVL300:
 870:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 6188              		.loc 1 870 5 is_stmt 1 view .LVU2121
 871:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 6189              		.loc 1 871 5 view .LVU2122
 872:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 6190              		.loc 1 872 5 view .LVU2123
 6191              	# sieve_extend.c:872:     register counter_t copy_word = wordindex(copy_start);
GAS LISTING /tmp/ccr2dACi.s 			page 176


 872:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 6192              		.loc 1 872 24 is_stmt 0 view .LVU2124
 6193 24d2 49C1EB06 		shr	r11, 6	# copy_word,
 6194              	.LVL301:
 873:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 6195              		.loc 1 873 5 is_stmt 1 view .LVU2125
 6196              	# sieve_extend.c:874:                              | (bitarray[source_word+1] << shift_flipped))
 874:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 6197              		.loc 1 874 41 is_stmt 0 view .LVU2126
 6198 24d6 4D8D4801 		lea	r9, 1[r8]	# _183,
 6199              	# sieve_extend.c:869:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 869:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 6200              		.loc 1 869 31 view .LVU2127
 6201 24da 4989CD   		mov	r13, rcx	# shift, _4
 6202              	# sieve_extend.c:873:     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 873:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 6203              		.loc 1 873 25 view .LVU2128
 6204 24dd 4A8D34DD 		lea	rsi, 0[0+r11*8]	# _6,
 6204      00000000 
 6205              	# sieve_extend.c:874:                              | (bitarray[source_word+1] << shift_flipped))
 874:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 6206              		.loc 1 874 41 view .LVU2129
 6207 24e5 4C894C24 		mov	QWORD PTR 88[rsp], r9	# %sfp, _183
 6207      58
 6208              	# sieve_extend.c:869:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 869:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 6209              		.loc 1 869 31 view .LVU2130
 6210 24ea 4929C5   		sub	r13, rax	# shift, _5
 6211              	.LVL302:
 6212              	# sieve_extend.c:880:     const counter_t aligned_copy_word = min(source_word + size, destination_s
 880:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 6213              		.loc 1 880 41 view .LVU2131
 6214 24ed 4D01D1   		add	r9, r10	# tmp555, size
 6215              	# sieve_extend.c:870:     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 870:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 6216              		.loc 1 870 31 view .LVU2132
 6217 24f0 4829C8   		sub	rax, rcx	# tmp542, _4
 6218              	.LVL303:
 6219              	# sieve_extend.c:864: static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source
 864:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 6220              		.loc 1 864 142 view .LVU2133
 6221 24f3 48895424 		mov	QWORD PTR 24[rsp], rdx	# %sfp, size
 6221      18
 6222              	# sieve_extend.c:870:     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 870:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 6223              		.loc 1 870 31 view .LVU2134
 6224 24f8 4C8D7840 		lea	r15, 64[rax]	# shift_flipped,
 6225              	.LVL304:
 6226              	# sieve_extend.c:873:     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 873:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 6227              		.loc 1 873 52 view .LVU2135
 6228 24fc 4A8B0CC3 		mov	rcx, QWORD PTR [rbx+r8*8]	# *_10, *_10
 6229              	# sieve_extend.c:873:     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 873:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 6230              		.loc 1 873 38 view .LVU2136
 6231 2500 4A8D14C5 		lea	rdx, 0[0+r8*8]	# _9,
 6231      00000000 
GAS LISTING /tmp/ccr2dACi.s 			page 177


 6232              	.LVL305:
 6233              	# sieve_extend.c:875:                              & ~chopmask(copy_start); // because this is the 
 875:sieve_extend.c **** 
 6234              		.loc 1 875 33 view .LVU2137
 6235 2508 F7D7     		not	edi	# tmp549
 6236              	.LVL306:
 6237              	# sieve_extend.c:874:                              | (bitarray[source_word+1] << shift_flipped))
 874:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 6238              		.loc 1 874 57 view .LVU2138
 6239 250a C4E281F7 		shlx	rax, QWORD PTR 8[rbx+rdx], r15	# tmp544, *_16, shift_flipped
 6239      441308
 6240              	# sieve_extend.c:873:     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 873:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 6241              		.loc 1 873 52 view .LVU2139
 6242 2511 C46293F7 		shrx	r8, rcx, r13	# tmp546, *_10, shift
 6242      C1
 6243              	# sieve_extend.c:874:                              | (bitarray[source_word+1] << shift_flipped))
 874:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 6244              		.loc 1 874 30 view .LVU2140
 6245 2516 4909C0   		or	r8, rax	# tmp548, tmp544
 6246              	# sieve_extend.c:875:                              & ~chopmask(copy_start); // because this is the 
 875:sieve_extend.c **** 
 6247              		.loc 1 875 33 view .LVU2141
 6248 2519 48C7C0FF 		mov	rax, -1	# tmp552,
 6248      FFFFFF
 6249 2520 C4E2C3F7 		shrx	rdi, rax, rdi	# tmp551, tmp552, tmp549
 6249      F8
 6250              	# sieve_extend.c:875:                              & ~chopmask(copy_start); // because this is the 
 875:sieve_extend.c **** 
 6251              		.loc 1 875 30 view .LVU2142
 6252 2525 C4C2C0F2 		andn	rcx, rdi, r8	# tmp554, tmp551, tmp548
 6252      C8
 6253              	# sieve_extend.c:873:     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 873:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 6254              		.loc 1 873 25 view .LVU2143
 6255 252a 48090C33 		or	QWORD PTR [rbx+rsi], rcx	# *_7, tmp554
 877:sieve_extend.c ****     source_word++;
 6256              		.loc 1 877 5 is_stmt 1 view .LVU2144
 6257              	# sieve_extend.c:880:     const counter_t aligned_copy_word = min(source_word + size, destination_s
 880:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 6258              		.loc 1 880 21 is_stmt 0 view .LVU2145
 6259 252e 4D39F1   		cmp	r9, r14	# tmp555, destination_stop_word
 6260              	# sieve_extend.c:877:     copy_word++;
 877:sieve_extend.c ****     source_word++;
 6261              		.loc 1 877 14 view .LVU2146
 6262 2531 498D4301 		lea	rax, 1[r11]	# ivtmp.432,
 6263              	.LVL307:
 878:sieve_extend.c **** 
 6264              		.loc 1 878 5 is_stmt 1 view .LVU2147
 880:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 6265              		.loc 1 880 5 view .LVU2148
 6266              	# sieve_extend.c:874:                              | (bitarray[source_word+1] << shift_flipped))
 874:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 6267              		.loc 1 874 57 is_stmt 0 view .LVU2149
 6268 2535 44897C24 		mov	DWORD PTR 72[rsp], r15d	# %sfp, shift_flipped
 6268      48
 6269              	# sieve_extend.c:873:     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
GAS LISTING /tmp/ccr2dACi.s 			page 178


 873:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 6270              		.loc 1 873 52 view .LVU2150
 6271 253a 4589EC   		mov	r12d, r13d	# _12, shift
 6272              	# sieve_extend.c:880:     const counter_t aligned_copy_word = min(source_word + size, destination_s
 880:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 6273              		.loc 1 880 21 view .LVU2151
 6274 253d 4D0F47CE 		cmova	r9, r14	# tmp555,, tmp555, destination_stop_word
 6275              	.LBB383:
 6276              	.LBB384:
 6277              	# sieve_extend.c:721:     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_co
 721:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 6278              		.loc 1 721 91 view .LVU2152
 6279 2541 41BE0200 		mov	r14d, 2	# tmp556,
 6279      0000
 6280              	.LVL308:
 721:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 6281              		.loc 1 721 91 view .LVU2153
 6282              	.LBE384:
 6283              	.LBE383:
 6284              	# sieve_extend.c:880:     const counter_t aligned_copy_word = min(source_word + size, destination_s
 880:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 6285              		.loc 1 880 21 view .LVU2154
 6286 2547 4C894C24 		mov	QWORD PTR 64[rsp], r9	# %sfp, aligned_copy_word
 6286      40
 6287              	.LVL309:
 881:sieve_extend.c ****     source_word += distance;
 6288              		.loc 1 881 5 is_stmt 1 view .LVU2155
 6289              	.LBB409:
 6290              	.LBI383:
 720:sieve_extend.c ****     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_copy_word - 2) : 0; // s
 6291              		.loc 1 720 25 view .LVU2156
 6292              	.LBB406:
 721:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 6293              		.loc 1 721 5 view .LVU2157
 6294              	# sieve_extend.c:721:     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_co
 721:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 6295              		.loc 1 721 91 is_stmt 0 view .LVU2158
 6296 254c 4983F902 		cmp	r9, 2	# aligned_copy_word,
 6297 2550 4D0F43F1 		cmovnb	r14, r9	# aligned_copy_word,, _86
 6298              	# sieve_extend.c:721:     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_co
 721:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 6299              		.loc 1 721 21 view .LVU2159
 6300 2554 4D8D46FE 		lea	r8, -2[r14]	# fast_loop_stop_word,
 6301 2558 4C894424 		mov	QWORD PTR 48[rsp], r8	# %sfp, fast_loop_stop_word
 6301      30
 6302              	.LVL310:
 722:sieve_extend.c ****     counter_t distance = 0;
 6303              		.loc 1 722 5 is_stmt 1 view .LVU2160
 723:sieve_extend.c ****     while (copy_word < fast_loop_stop_word) {
 6304              		.loc 1 723 5 view .LVU2161
 724:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6305              		.loc 1 724 5 view .LVU2162
 724:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6306              		.loc 1 724 11 view .LVU2163
 6307 255d 4C39C0   		cmp	rax, r8	# ivtmp.432, fast_loop_stop_word
 6308 2560 0F83A404 		jnb	.L545	#,
 6308      0000
GAS LISTING /tmp/ccr2dACi.s 			page 179


 6309 2566 4C8D5240 		lea	r10, 64[rdx]	# tmp559,
 6310              	.LVL311:
 724:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6311              		.loc 1 724 11 is_stmt 0 view .LVU2164
 6312 256a 4D29DE   		sub	r14, r11	# tmp557, copy_word
 6313 256d 4C8D4610 		lea	r8, 16[rsi]	# tmp560,
 6314              	.LVL312:
 724:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6315              		.loc 1 724 11 view .LVU2165
 6316 2571 498D7EFC 		lea	rdi, -4[r14]	# _332,
 6317 2575 488D4A08 		lea	rcx, 8[rdx]	# tmp796,
 6318 2579 4D39C2   		cmp	r10, r8	# tmp559, tmp560
 6319 257c 4C8D7648 		lea	r14, 72[rsi]	# tmp563,
 6320 2580 410F9EC1 		setle	r9b	#, tmp562
 6321              	.LVL313:
 724:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6322              		.loc 1 724 11 view .LVU2166
 6323 2584 48897C24 		mov	QWORD PTR 56[rsp], rdi	# %sfp, _332
 6323      38
 6324 2589 4939CE   		cmp	r14, rcx	# tmp563, tmp796
 6325 258c 400F9EC7 		setle	dil	#, tmp566
 6326 2590 4109F9   		or	r9d, edi	# tmp567, tmp566
 6327 2593 488D7A50 		lea	rdi, 80[rdx]	# tmp568,
 6328 2597 48897C24 		mov	QWORD PTR 40[rsp], rdi	# %sfp, tmp568
 6328      28
 6329 259c 4C39C7   		cmp	rdi, r8	# tmp568, tmp560
 6330 259f 0F9E4424 		setle	BYTE PTR 39[rsp]	#, %sfp
 6330      27
 6331 25a4 4883C210 		add	rdx, 16	# tmp573,
 6332 25a8 4939D6   		cmp	r14, rdx	# tmp563, tmp573
 6333 25ab 400F9EC7 		setle	dil	#, tmp575
 6334 25af 400A7C24 		or	dil, BYTE PTR 39[rsp]	# tmp576, %sfp
 6334      27
 6335 25b4 4421CF   		and	edi, r9d	# tmp577, tmp567
 6336 25b7 48837C24 		cmp	QWORD PTR 56[rsp], 11	# %sfp,
 6336      380B
 6337 25bd 410F97C1 		seta	r9b	#, tmp579
 6338 25c1 4421CF   		and	edi, r9d	# tmp580, tmp579
 6339 25c4 4C8D4E08 		lea	r9, 8[rsi]	# tmp582,
 6340 25c8 4D39CA   		cmp	r10, r9	# tmp559, tmp582
 6341 25cb 410F9EC2 		setle	r10b	#, tmp584
 6342 25cf 4883C640 		add	rsi, 64	# tmp585,
 6343 25d3 4839CE   		cmp	rsi, rcx	# tmp585, tmp796
 6344 25d6 0F9E4424 		setle	BYTE PTR 39[rsp]	#, %sfp
 6344      27
 6345 25db 440A5424 		or	r10b, BYTE PTR 39[rsp]	# tmp589, %sfp
 6345      27
 6346 25e0 4421D7   		and	edi, r10d	# tmp590, tmp589
 6347 25e3 4C394C24 		cmp	QWORD PTR 40[rsp], r9	# %sfp, tmp582
 6347      28
 6348 25e8 410F9EC2 		setle	r10b	#, tmp594
 6349 25ec 4839D6   		cmp	rsi, rdx	# tmp585, tmp573
 6350 25ef 0F9E4424 		setle	BYTE PTR 40[rsp]	#, %sfp
 6350      28
 6351 25f4 440A5424 		or	r10b, BYTE PTR 40[rsp]	# tmp599, %sfp
 6351      28
 6352 25f9 4484D7   		test	dil, r10b	# tmp590, tmp599
GAS LISTING /tmp/ccr2dACi.s 			page 180


 6353 25fc 0F845E0D 		je	.L546	#,
 6353      0000
 6354 2602 4D39CE   		cmp	r14, r9	# tmp563, tmp582
 6355 2605 410F9EC6 		setle	r14b	#, tmp604
 6356 2609 4C39C6   		cmp	rsi, r8	# tmp585, tmp560
 6357 260c 400F9EC6 		setle	sil	#, tmp608
 6358 2610 4108F6   		or	r14b, sil	# tmp604, tmp608
 6359 2613 0F84470D 		je	.L546	#,
 6359      0000
 6360 2619 4801D9   		add	rcx, rbx	# vectp.397, bitarray
 6361 261c 4801DA   		add	rdx, rbx	# vectp.401, bitarray
 6362              	.LBB385:
 6363              	# sieve_extend.c:726:         bitword_t source1 = bitarray[source_word+1];
 726:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6364              		.loc 1 726 19 view .LVU2167
 6365 261f C5FE6F0A 		vmovdqu	ymm1, YMMWORD PTR [rdx]	# MEM[base: vectp.401_499, index: ivtmp.472_748, offset: 0B], MEM[
 6366 2623 C4C1796E 		vmovd	xmm3, r13d	# _12, _12
 6366      DD
 6367 2628 C5FE6F42 		vmovdqu	ymm0, YMMWORD PTR 32[rdx]	# MEM[base: vectp.401_499, index: ivtmp.472_748, offset: 32B], M
 6367      20
 6368 262d C4C1796E 		vmovd	xmm4, r15d	# _18,
 6368      E7
 6369              	# sieve_extend.c:725:         bitword_t source0 = bitarray[source_word  ];
 725:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6370              		.loc 1 725 19 view .LVU2168
 6371 2632 C5FE6F39 		vmovdqu	ymm7, YMMWORD PTR [rcx]	# tmp1315, MEM[base: vectp.397_490, index: ivtmp.472_748, offset: 
 6372              	# sieve_extend.c:726:         bitword_t source1 = bitarray[source_word+1];
 726:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6373              		.loc 1 726 19 view .LVU2169
 6374 2636 C5F56CE8 		vpunpcklqdq	ymm5, ymm1, ymm0	# tmp616, MEM[base: vectp.401_499, index: ivtmp.472_748, offset: 0B],
 6375 263a C5756DF0 		vpunpckhqdq	ymm14, ymm1, ymm0	# tmp634, MEM[base: vectp.401_499, index: ivtmp.472_748, offset: 0B]
 6376              	# sieve_extend.c:725:         bitword_t source0 = bitarray[source_word  ];
 725:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6377              		.loc 1 725 19 view .LVU2170
 6378 263e C5C56C51 		vpunpcklqdq	ymm2, ymm7, YMMWORD PTR 32[rcx]	# tmp620, tmp1315, MEM[base: vectp.397_490, index: ivt
 6378      20
 6379 2643 4C8B7424 		mov	r14, QWORD PTR 56[rsp]	# _332, %sfp
 6379      38
 6380              	# sieve_extend.c:726:         bitword_t source1 = bitarray[source_word+1];
 726:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6381              		.loc 1 726 19 view .LVU2171
 6382 2648 C463FD00 		vpermq	ymm8, ymm5, 216	# vect_perm_even_507, tmp616,
 6382      C5D8
 6383              	# sieve_extend.c:725:         bitword_t source0 = bitarray[source_word  ];
 725:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6384              		.loc 1 725 19 view .LVU2172
 6385 264e C4E3FD00 		vpermq	ymm6, ymm2, 216	# tmp619, tmp620,
 6385      F2D8
 6386              	# sieve_extend.c:726:         bitword_t source1 = bitarray[source_word+1];
 726:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6387              		.loc 1 726 19 view .LVU2173
 6388 2654 C443FD00 		vpermq	ymm15, ymm14, 216	# tmp633, tmp634,
 6388      FED8
 6389              	# sieve_extend.c:727:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6390              		.loc 1 727 63 view .LVU2174
 6391 265a C53DF3D4 		vpsllq	ymm10, ymm8, xmm4	# vect__100.405, vect_perm_even_507, _18
GAS LISTING /tmp/ccr2dACi.s 			page 181


 6392              	# sieve_extend.c:727:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6393              		.loc 1 727 42 view .LVU2175
 6394 265e C54DD3CB 		vpsrlq	ymm9, ymm6, xmm3	# vect__98.404, tmp619, _12
 6395              	# sieve_extend.c:729:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 729:sieve_extend.c ****         copy_word += 2;
 6396              		.loc 1 729 42 view .LVU2176
 6397 2662 C5BDD3C3 		vpsrlq	ymm0, ymm8, xmm3	# vect__109.407, vect_perm_even_507, _12
 6398              	# sieve_extend.c:729:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 729:sieve_extend.c ****         copy_word += 2;
 6399              		.loc 1 729 63 view .LVU2177
 6400 2666 C585F3CC 		vpsllq	ymm1, ymm15, xmm4	# vect__110.408, tmp633, _18
 6401 266a 49C1EE03 		shr	r14, 3	# _332,
 6402              	# sieve_extend.c:727:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6403              		.loc 1 727 52 view .LVU2178
 6404 266e C44135EB 		vpor	ymm11, ymm9, ymm10	# vect__104.406, vect__98.404, vect__100.405
 6404      DA
 6405              	# sieve_extend.c:729:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 729:sieve_extend.c ****         copy_word += 2;
 6406              		.loc 1 729 52 view .LVU2179
 6407 2673 C5F5EBE8 		vpor	ymm5, ymm1, ymm0	# vect__114.409, vect__110.408, vect__109.407
 6408 2677 4D8D56FF 		lea	r10, -1[r14]	# tmp828,
 6409              	# sieve_extend.c:727:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6410              		.loc 1 727 31 view .LVU2180
 6411 267b C4437D39 		vextracti128	xmm13, ymm11, 0x1	# tmp630, vect__104.406
 6411      DD01
 6412 2681 4183E201 		and	r10d, 1	# tmp830,
 6413              	.LVL314:
 725:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6414              		.loc 1 725 9 is_stmt 1 view .LVU2181
 726:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6415              		.loc 1 726 9 view .LVU2182
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6416              		.loc 1 727 9 view .LVU2183
 6417              	# sieve_extend.c:729:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 729:sieve_extend.c ****         copy_word += 2;
 6418              		.loc 1 729 31 is_stmt 0 view .LVU2184
 6419 2685 C4E37D39 		vextracti128	xmm7, ymm5, 0x1	# tmp644, vect__114.409
 6419      EF01
 6420 268b 4983FE01 		cmp	r14, 1	# bnd.390,
 6421              	# sieve_extend.c:727:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6422              		.loc 1 727 31 view .LVU2185
 6423 268f C42179D6 		vmovq	QWORD PTR [rbx+r9], xmm11	# MEM[base: _513, index: ivtmp.472_748, offset: 0B], tmp626
 6423      1C0B
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6424              		.loc 1 727 31 view .LVU2186
 6425 2695 4E8D1C0B 		lea	r11, [rbx+r9]	# _513,
 6426              	.LVL315:
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6427              		.loc 1 727 31 view .LVU2187
 6428 2699 C423F916 		vpextrq	QWORD PTR 16[rbx+r9], xmm11, 1	# MEM[base: _513, index: ivtmp.472_748, offset: 16B], tmp62
 6428      5C0B1001 
 6429 26a1 4A8D3C03 		lea	rdi, [rbx+r8]	# _533,
 6430 26a5 C42179D6 		vmovq	QWORD PTR 32[rbx+r9], xmm13	# MEM[base: _513, index: ivtmp.472_748, offset: 32B], tmp630
GAS LISTING /tmp/ccr2dACi.s 			page 182


 6430      6C0B20
 6431 26ac C423F916 		vpextrq	QWORD PTR 48[rbx+r9], xmm13, 1	# MEM[base: _513, index: ivtmp.472_748, offset: 48B], tmp63
 6431      6C0B3001 
 728:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6432              		.loc 1 728 9 is_stmt 1 view .LVU2188
 6433              	.LVL316:
 729:sieve_extend.c ****         copy_word += 2;
 6434              		.loc 1 729 9 view .LVU2189
 6435 26b4 41B90100 		mov	r9d, 1	# ivtmp.470,
 6435      0000
 6436              	# sieve_extend.c:729:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 729:sieve_extend.c ****         copy_word += 2;
 6437              		.loc 1 729 31 is_stmt 0 view .LVU2190
 6438 26ba C4A179D6 		vmovq	QWORD PTR [rbx+r8], xmm5	# MEM[base: _533, index: ivtmp.472_748, offset: 0B], tmp640
 6438      2C03
 729:sieve_extend.c ****         copy_word += 2;
 6439              		.loc 1 729 31 view .LVU2191
 6440 26c0 C4A3F916 		vpextrq	QWORD PTR 16[rbx+r8], xmm5, 1	# MEM[base: _533, index: ivtmp.472_748, offset: 16B], tmp640
 6440      6C031001 
 6441 26c8 C4A179D6 		vmovq	QWORD PTR 32[rbx+r8], xmm7	# MEM[base: _533, index: ivtmp.472_748, offset: 32B], tmp644
 6441      7C0320
 6442 26cf C4A3F916 		vpextrq	QWORD PTR 48[rbx+r8], xmm7, 1	# MEM[base: _533, index: ivtmp.472_748, offset: 48B], tmp644
 6442      7C033001 
 730:sieve_extend.c ****         source_word += 2;
 6443              		.loc 1 730 9 is_stmt 1 view .LVU2192
 731:sieve_extend.c ****         distance += 2;
 6444              		.loc 1 731 9 view .LVU2193
 732:sieve_extend.c ****     }
 6445              		.loc 1 732 9 view .LVU2194
 732:sieve_extend.c ****     }
 6446              		.loc 1 732 9 is_stmt 0 view .LVU2195
 6447              	.LBE385:
 724:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6448              		.loc 1 724 11 is_stmt 1 view .LVU2196
 6449 26d7 41B84000 		mov	r8d, 64	# ivtmp.472,
 6449      0000
 6450 26dd 0F86E901 		jbe	.L776	#,
 6450      0000
 6451 26e3 4D85D2   		test	r10, r10	# tmp830
 6452 26e6 0F84A400 		je	.L547	#,
 6452      0000
 6453              	.LBB386:
 725:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6454              		.loc 1 725 9 view .LVU2197
 726:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6455              		.loc 1 726 9 view .LVU2198
 6456              	# sieve_extend.c:726:         bitword_t source1 = bitarray[source_word+1];
 726:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6457              		.loc 1 726 19 is_stmt 0 view .LVU2199
 6458 26ec C57E6F4A 		vmovdqu	ymm9, YMMWORD PTR 64[rdx]	# MEM[base: vectp.401_499, index: ivtmp.472_748, offset: 0B], ME
 6458      40
 6459 26f1 4983FE02 		cmp	r14, 2	# bnd.390,
 6460 26f5 C57E6F52 		vmovdqu	ymm10, YMMWORD PTR 96[rdx]	# MEM[base: vectp.401_499, index: ivtmp.472_748, offset: 32B], 
 6460      60
 6461 26fa 41B90200 		mov	r9d, 2	# ivtmp.470,
 6461      0000
 6462              	# sieve_extend.c:725:         bitword_t source0 = bitarray[source_word  ];
GAS LISTING /tmp/ccr2dACi.s 			page 183


 725:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6463              		.loc 1 725 19 view .LVU2200
 6464 2700 C5FE6F71 		vmovdqu	ymm6, YMMWORD PTR 64[rcx]	# tmp1432, MEM[base: vectp.397_490, index: ivtmp.472_748, offset
 6464      40
 6465              	# sieve_extend.c:726:         bitword_t source1 = bitarray[source_word+1];
 726:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6466              		.loc 1 726 19 view .LVU2201
 6467 2705 C4C1356C 		vpunpcklqdq	ymm2, ymm9, ymm10	# tmp1190, MEM[base: vectp.401_499, index: ivtmp.472_748, offset: 0B
 6467      D2
 6468 270a C441356D 		vpunpckhqdq	ymm8, ymm9, ymm10	# tmp1205, MEM[base: vectp.401_499, index: ivtmp.472_748, offset: 0B
 6468      C2
 6469              	# sieve_extend.c:725:         bitword_t source0 = bitarray[source_word  ];
 725:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6470              		.loc 1 725 19 view .LVU2202
 6471 270f C54D6C61 		vpunpcklqdq	ymm12, ymm6, YMMWORD PTR 96[rcx]	# tmp1194, tmp1432, MEM[base: vectp.397_490, index: i
 6471      60
 6472              	# sieve_extend.c:726:         bitword_t source1 = bitarray[source_word+1];
 726:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6473              		.loc 1 726 19 view .LVU2203
 6474 2714 C463FD00 		vpermq	ymm11, ymm2, 216	# vect_perm_even_507, tmp1190,
 6474      DAD8
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6475              		.loc 1 727 9 is_stmt 1 view .LVU2204
 6476              	# sieve_extend.c:725:         bitword_t source0 = bitarray[source_word  ];
 725:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6477              		.loc 1 725 19 is_stmt 0 view .LVU2205
 6478 271a C443FD00 		vpermq	ymm13, ymm12, 216	# tmp1195, tmp1194,
 6478      ECD8
 6479              	# sieve_extend.c:726:         bitword_t source1 = bitarray[source_word+1];
 726:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6480              		.loc 1 726 19 view .LVU2206
 6481 2720 C4C3FD00 		vpermq	ymm7, ymm8, 216	# tmp1206, tmp1205,
 6481      F8D8
 6482 2726 41B88000 		mov	r8d, 128	# ivtmp.472,
 6482      0000
 6483              	# sieve_extend.c:727:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6484              		.loc 1 727 42 view .LVU2207
 6485 272c C515D3F3 		vpsrlq	ymm14, ymm13, xmm3	# vect__98.404, tmp1195, _12
 6486              	# sieve_extend.c:727:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6487              		.loc 1 727 63 view .LVU2208
 6488 2730 C525F3FC 		vpsllq	ymm15, ymm11, xmm4	# vect__100.405, vect_perm_even_507, _18
 6489              	# sieve_extend.c:729:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 729:sieve_extend.c ****         copy_word += 2;
 6490              		.loc 1 729 42 view .LVU2209
 6491 2734 C525D3D3 		vpsrlq	ymm10, ymm11, xmm3	# vect__109.407, vect_perm_even_507, _12
 6492              	# sieve_extend.c:729:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 729:sieve_extend.c ****         copy_word += 2;
 6493              		.loc 1 729 63 view .LVU2210
 6494 2738 C545F3CC 		vpsllq	ymm9, ymm7, xmm4	# vect__110.408, tmp1206, _18
 6495              	# sieve_extend.c:727:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6496              		.loc 1 727 52 view .LVU2211
 6497 273c C4C10DEB 		vpor	ymm1, ymm14, ymm15	# vect__104.406, vect__98.404, vect__100.405
 6497      CF
 6498              	# sieve_extend.c:729:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
GAS LISTING /tmp/ccr2dACi.s 			page 184


 729:sieve_extend.c ****         copy_word += 2;
 6499              		.loc 1 729 52 view .LVU2212
 6500 2741 C4C135EB 		vpor	ymm2, ymm9, ymm10	# vect__114.409, vect__110.408, vect__109.407
 6500      D2
 6501              	# sieve_extend.c:727:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6502              		.loc 1 727 31 view .LVU2213
 6503 2746 C4E37D39 		vextracti128	xmm5, ymm1, 0x1	# tmp1202, vect__104.406
 6503      CD01
 6504              	# sieve_extend.c:729:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 729:sieve_extend.c ****         copy_word += 2;
 6505              		.loc 1 729 31 view .LVU2214
 6506 274c C4E37D39 		vextracti128	xmm6, ymm2, 0x1	# tmp1213, vect__114.409
 6506      D601
 6507              	# sieve_extend.c:727:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6508              		.loc 1 727 31 view .LVU2215
 6509 2752 C4C179D6 		vmovq	QWORD PTR 64[r11], xmm1	# MEM[base: _513, index: ivtmp.472_748, offset: 0B], tmp1199
 6509      4B40
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6510              		.loc 1 727 31 view .LVU2216
 6511 2758 C4C3F916 		vpextrq	QWORD PTR 80[r11], xmm1, 1	# MEM[base: _513, index: ivtmp.472_748, offset: 16B], tmp1199
 6511      4B5001
 6512 275f C4C179D6 		vmovq	QWORD PTR 96[r11], xmm5	# MEM[base: _513, index: ivtmp.472_748, offset: 32B], tmp1202
 6512      6B60
 6513 2765 C4C3F916 		vpextrq	QWORD PTR 112[r11], xmm5, 1	# MEM[base: _513, index: ivtmp.472_748, offset: 48B], tmp1202
 6513      6B7001
 728:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6514              		.loc 1 728 9 is_stmt 1 view .LVU2217
 729:sieve_extend.c ****         copy_word += 2;
 6515              		.loc 1 729 9 view .LVU2218
 6516              	# sieve_extend.c:729:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 729:sieve_extend.c ****         copy_word += 2;
 6517              		.loc 1 729 31 is_stmt 0 view .LVU2219
 6518 276c C5F9D657 		vmovq	QWORD PTR 64[rdi], xmm2	# MEM[base: _533, index: ivtmp.472_748, offset: 0B], tmp1210
 6518      40
 729:sieve_extend.c ****         copy_word += 2;
 6519              		.loc 1 729 31 view .LVU2220
 6520 2771 C4E3F916 		vpextrq	QWORD PTR 80[rdi], xmm2, 1	# MEM[base: _533, index: ivtmp.472_748, offset: 16B], tmp1210
 6520      575001
 6521 2778 C5F9D677 		vmovq	QWORD PTR 96[rdi], xmm6	# MEM[base: _533, index: ivtmp.472_748, offset: 32B], tmp1213
 6521      60
 6522 277d C4E3F916 		vpextrq	QWORD PTR 112[rdi], xmm6, 1	# MEM[base: _533, index: ivtmp.472_748, offset: 48B], tmp1213
 6522      777001
 730:sieve_extend.c ****         source_word += 2;
 6523              		.loc 1 730 9 is_stmt 1 view .LVU2221
 731:sieve_extend.c ****         distance += 2;
 6524              		.loc 1 731 9 view .LVU2222
 732:sieve_extend.c ****     }
 6525              		.loc 1 732 9 view .LVU2223
 732:sieve_extend.c ****     }
 6526              		.loc 1 732 9 is_stmt 0 view .LVU2224
 6527              	.LBE386:
 724:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6528              		.loc 1 724 11 is_stmt 1 view .LVU2225
 6529 2784 0F864201 		jbe	.L776	#,
 6529      0000
GAS LISTING /tmp/ccr2dACi.s 			page 185


 6530 278a 660F1F44 		.p2align 4
 6530      0000
 6531              		.p2align 3
 6532              	.L547:
 6533              	.LBB387:
 725:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6534              		.loc 1 725 9 view .LVU2226
 726:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6535              		.loc 1 726 9 view .LVU2227
 6536              	# sieve_extend.c:726:         bitword_t source1 = bitarray[source_word+1];
 726:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6537              		.loc 1 726 19 is_stmt 0 view .LVU2228
 6538 2790 C4217E6F 		vmovdqu	ymm12, YMMWORD PTR [rdx+r8]	# MEM[base: vectp.401_499, index: ivtmp.472_748, offset: 0B], 
 6538      2402
 6539 2796 4983C102 		add	r9, 2	# ivtmp.470,
 6540 279a C4217E6F 		vmovdqu	ymm13, YMMWORD PTR 32[rdx+r8]	# MEM[base: vectp.401_499, index: ivtmp.472_748, offset: 32B
 6540      6C0220
 6541              	# sieve_extend.c:725:         bitword_t source0 = bitarray[source_word  ];
 725:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6542              		.loc 1 725 19 view .LVU2229
 6543 27a1 C4A17E6F 		vmovdqu	ymm1, YMMWORD PTR [rcx+r8]	# tmp1316, MEM[base: vectp.397_490, index: ivtmp.472_748, offse
 6543      0C01
 6544              	# sieve_extend.c:726:         bitword_t source1 = bitarray[source_word+1];
 726:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6545              		.loc 1 726 19 view .LVU2230
 6546 27a7 C4411D6C 		vpunpcklqdq	ymm14, ymm12, ymm13	# tmp837, MEM[base: vectp.401_499, index: ivtmp.472_748, offset: 0
 6546      F5
 6547 27ac C4411D6D 		vpunpckhqdq	ymm11, ymm12, ymm13	# tmp852, MEM[base: vectp.401_499, index: ivtmp.472_748, offset: 0
 6547      DD
 6548              	# sieve_extend.c:725:         bitword_t source0 = bitarray[source_word  ];
 725:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6549              		.loc 1 725 19 view .LVU2231
 6550 27b1 C4A1756C 		vpunpcklqdq	ymm0, ymm1, YMMWORD PTR 32[rcx+r8]	# tmp841, tmp1316, MEM[base: vectp.397_490, index: 
 6550      440120
 6551              	# sieve_extend.c:726:         bitword_t source1 = bitarray[source_word+1];
 726:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6552              		.loc 1 726 19 view .LVU2232
 6553 27b8 C443FD00 		vpermq	ymm15, ymm14, 216	# vect_perm_even_507, tmp837,
 6553      FED8
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6554              		.loc 1 727 9 is_stmt 1 view .LVU2233
 6555              	# sieve_extend.c:725:         bitword_t source0 = bitarray[source_word  ];
 725:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6556              		.loc 1 725 19 is_stmt 0 view .LVU2234
 6557 27be C4E3FD00 		vpermq	ymm5, ymm0, 216	# tmp842, tmp841,
 6557      E8D8
 6558              	# sieve_extend.c:726:         bitword_t source1 = bitarray[source_word+1];
 726:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6559              		.loc 1 726 19 view .LVU2235
 6560 27c4 C4C3FD00 		vpermq	ymm6, ymm11, 216	# tmp853, tmp852,
 6560      F3D8
 6561              	# sieve_extend.c:727:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6562              		.loc 1 727 42 view .LVU2236
 6563 27ca C555D3C3 		vpsrlq	ymm8, ymm5, xmm3	# vect__98.404, tmp842, _12
 6564              	# sieve_extend.c:727:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
GAS LISTING /tmp/ccr2dACi.s 			page 186


 6565              		.loc 1 727 63 view .LVU2237
 6566 27ce C585F3FC 		vpsllq	ymm7, ymm15, xmm4	# vect__100.405, vect_perm_even_507, _18
 6567              	# sieve_extend.c:729:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 729:sieve_extend.c ****         copy_word += 2;
 6568              		.loc 1 729 42 view .LVU2238
 6569 27d2 C505D3EB 		vpsrlq	ymm13, ymm15, xmm3	# vect__109.407, vect_perm_even_507, _12
 6570              	# sieve_extend.c:729:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 729:sieve_extend.c ****         copy_word += 2;
 6571              		.loc 1 729 63 view .LVU2239
 6572 27d6 C54DF3E4 		vpsllq	ymm12, ymm6, xmm4	# vect__110.408, tmp853, _18
 6573              	# sieve_extend.c:727:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6574              		.loc 1 727 52 view .LVU2240
 6575 27da C53DEBCF 		vpor	ymm9, ymm8, ymm7	# vect__104.406, vect__98.404, vect__100.405
 6576              	# sieve_extend.c:729:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 729:sieve_extend.c ****         copy_word += 2;
 6577              		.loc 1 729 52 view .LVU2241
 6578 27de C4411DEB 		vpor	ymm14, ymm12, ymm13	# vect__114.409, vect__110.408, vect__109.407
 6578      F5
 6579              	# sieve_extend.c:727:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6580              		.loc 1 727 31 view .LVU2242
 6581 27e3 C4637D39 		vextracti128	xmm2, ymm9, 0x1	# tmp849, vect__104.406
 6581      CA01
 6582              	# sieve_extend.c:729:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 729:sieve_extend.c ****         copy_word += 2;
 6583              		.loc 1 729 31 view .LVU2243
 6584 27e9 C4637D39 		vextracti128	xmm1, ymm14, 0x1	# tmp860, vect__114.409
 6584      F101
 6585              	# sieve_extend.c:727:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6586              		.loc 1 727 31 view .LVU2244
 6587 27ef C40179D6 		vmovq	QWORD PTR [r11+r8], xmm9	# MEM[base: _513, index: ivtmp.472_748, offset: 0B], tmp846
 6587      0C03
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6588              		.loc 1 727 31 view .LVU2245
 6589 27f5 C403F916 		vpextrq	QWORD PTR 16[r11+r8], xmm9, 1	# MEM[base: _513, index: ivtmp.472_748, offset: 16B], tmp846
 6589      4C031001 
 6590 27fd C48179D6 		vmovq	QWORD PTR 32[r11+r8], xmm2	# MEM[base: _513, index: ivtmp.472_748, offset: 32B], tmp849
 6590      540320
 6591 2804 C483F916 		vpextrq	QWORD PTR 48[r11+r8], xmm2, 1	# MEM[base: _513, index: ivtmp.472_748, offset: 48B], tmp849
 6591      54033001 
 728:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6592              		.loc 1 728 9 is_stmt 1 view .LVU2246
 729:sieve_extend.c ****         copy_word += 2;
 6593              		.loc 1 729 9 view .LVU2247
 6594              	# sieve_extend.c:729:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 729:sieve_extend.c ****         copy_word += 2;
 6595              		.loc 1 729 31 is_stmt 0 view .LVU2248
 6596 280c C42179D6 		vmovq	QWORD PTR [rdi+r8], xmm14	# MEM[base: _533, index: ivtmp.472_748, offset: 0B], tmp857
 6596      3407
 729:sieve_extend.c ****         copy_word += 2;
 6597              		.loc 1 729 31 view .LVU2249
 6598 2812 C423F916 		vpextrq	QWORD PTR 16[rdi+r8], xmm14, 1	# MEM[base: _533, index: ivtmp.472_748, offset: 16B], tmp85
 6598      74071001 
 6599 281a C4A179D6 		vmovq	QWORD PTR 32[rdi+r8], xmm1	# MEM[base: _533, index: ivtmp.472_748, offset: 32B], tmp860
 6599      4C0720
GAS LISTING /tmp/ccr2dACi.s 			page 187


 6600 2821 C4A3F916 		vpextrq	QWORD PTR 48[rdi+r8], xmm1, 1	# MEM[base: _533, index: ivtmp.472_748, offset: 48B], tmp860
 6600      4C073001 
 730:sieve_extend.c ****         source_word += 2;
 6601              		.loc 1 730 9 is_stmt 1 view .LVU2250
 731:sieve_extend.c ****         distance += 2;
 6602              		.loc 1 731 9 view .LVU2251
 732:sieve_extend.c ****     }
 6603              		.loc 1 732 9 view .LVU2252
 732:sieve_extend.c ****     }
 6604              		.loc 1 732 9 is_stmt 0 view .LVU2253
 6605              	.LBE387:
 724:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6606              		.loc 1 724 11 is_stmt 1 view .LVU2254
 6607              	.LBB388:
 725:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6608              		.loc 1 725 9 view .LVU2255
 726:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6609              		.loc 1 726 9 view .LVU2256
 6610              	# sieve_extend.c:726:         bitword_t source1 = bitarray[source_word+1];
 726:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6611              		.loc 1 726 19 is_stmt 0 view .LVU2257
 6612 2829 C4217E6F 		vmovdqu	ymm8, YMMWORD PTR 64[rdx+r8]	# MEM[base: vectp.401_499, index: ivtmp.472_748, offset: 0B],
 6612      440240
 6613 2830 C4A17E6F 		vmovdqu	ymm0, YMMWORD PTR 96[rdx+r8]	# MEM[base: vectp.401_499, index: ivtmp.472_748, offset: 32B]
 6613      440260
 6614              	# sieve_extend.c:725:         bitword_t source0 = bitarray[source_word  ];
 725:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6615              		.loc 1 725 19 view .LVU2258
 6616 2837 C4A17E6F 		vmovdqu	ymm7, YMMWORD PTR 64[rcx+r8]	# tmp1317, MEM[base: vectp.397_490, index: ivtmp.472_748, off
 6616      7C0140
 6617              	# sieve_extend.c:726:         bitword_t source1 = bitarray[source_word+1];
 726:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6618              		.loc 1 726 19 view .LVU2259
 6619 283e C5BD6CE8 		vpunpcklqdq	ymm5, ymm8, ymm0	# tmp867, MEM[base: vectp.401_499, index: ivtmp.472_748, offset: 0B],
 6620 2842 C53D6DF8 		vpunpckhqdq	ymm15, ymm8, ymm0	# tmp882, MEM[base: vectp.401_499, index: ivtmp.472_748, offset: 0B]
 6621              	# sieve_extend.c:725:         bitword_t source0 = bitarray[source_word  ];
 725:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6622              		.loc 1 725 19 view .LVU2260
 6623 2846 C421456C 		vpunpcklqdq	ymm10, ymm7, YMMWORD PTR 96[rcx+r8]	# tmp871, tmp1317, MEM[base: vectp.397_490, index:
 6623      540160
 6624              	# sieve_extend.c:726:         bitword_t source1 = bitarray[source_word+1];
 726:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6625              		.loc 1 726 19 view .LVU2261
 6626 284d C463FD00 		vpermq	ymm9, ymm5, 216	# vect_perm_even_507, tmp867,
 6626      CDD8
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6627              		.loc 1 727 9 is_stmt 1 view .LVU2262
 6628              	# sieve_extend.c:725:         bitword_t source0 = bitarray[source_word  ];
 725:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6629              		.loc 1 725 19 is_stmt 0 view .LVU2263
 6630 2853 C4C3FD00 		vpermq	ymm2, ymm10, 216	# tmp872, tmp871,
 6630      D2D8
 6631              	# sieve_extend.c:726:         bitword_t source1 = bitarray[source_word+1];
 726:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6632              		.loc 1 726 19 view .LVU2264
 6633 2859 C4C3FD00 		vpermq	ymm1, ymm15, 216	# tmp883, tmp882,
 6633      CFD8
GAS LISTING /tmp/ccr2dACi.s 			page 188


 6634              	# sieve_extend.c:727:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6635              		.loc 1 727 42 view .LVU2265
 6636 285f C56DD3DB 		vpsrlq	ymm11, ymm2, xmm3	# vect__98.404, tmp872, _12
 6637              	# sieve_extend.c:727:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6638              		.loc 1 727 63 view .LVU2266
 6639 2863 C5B5F3F4 		vpsllq	ymm6, ymm9, xmm4	# vect__100.405, vect_perm_even_507, _18
 6640              	# sieve_extend.c:729:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 729:sieve_extend.c ****         copy_word += 2;
 6641              		.loc 1 729 42 view .LVU2267
 6642 2867 C5B5D3C3 		vpsrlq	ymm0, ymm9, xmm3	# vect__109.407, vect_perm_even_507, _12
 6643              	# sieve_extend.c:729:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 729:sieve_extend.c ****         copy_word += 2;
 6644              		.loc 1 729 63 view .LVU2268
 6645 286b C575F3C4 		vpsllq	ymm8, ymm1, xmm4	# vect__110.408, tmp883, _18
 6646              	# sieve_extend.c:727:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6647              		.loc 1 727 52 view .LVU2269
 6648 286f C525EBE6 		vpor	ymm12, ymm11, ymm6	# vect__104.406, vect__98.404, vect__100.405
 6649              	# sieve_extend.c:729:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 729:sieve_extend.c ****         copy_word += 2;
 6650              		.loc 1 729 52 view .LVU2270
 6651 2873 C5BDEBE8 		vpor	ymm5, ymm8, ymm0	# vect__114.409, vect__110.408, vect__109.407
 6652              	# sieve_extend.c:727:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6653              		.loc 1 727 31 view .LVU2271
 6654 2877 C4437D39 		vextracti128	xmm14, ymm12, 0x1	# tmp879, vect__104.406
 6654      E601
 6655              	# sieve_extend.c:729:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 729:sieve_extend.c ****         copy_word += 2;
 6656              		.loc 1 729 31 view .LVU2272
 6657 287d C4E37D39 		vextracti128	xmm7, ymm5, 0x1	# tmp890, vect__114.409
 6657      EF01
 6658              	# sieve_extend.c:727:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6659              		.loc 1 727 31 view .LVU2273
 6660 2883 C40179D6 		vmovq	QWORD PTR 64[r11+r8], xmm12	# MEM[base: _513, index: ivtmp.472_748, offset: 0B], tmp876
 6660      640340
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6661              		.loc 1 727 31 view .LVU2274
 6662 288a C403F916 		vpextrq	QWORD PTR 80[r11+r8], xmm12, 1	# MEM[base: _513, index: ivtmp.472_748, offset: 16B], tmp87
 6662      64035001 
 6663 2892 C40179D6 		vmovq	QWORD PTR 96[r11+r8], xmm14	# MEM[base: _513, index: ivtmp.472_748, offset: 32B], tmp879
 6663      740360
 6664 2899 C403F916 		vpextrq	QWORD PTR 112[r11+r8], xmm14, 1	# MEM[base: _513, index: ivtmp.472_748, offset: 48B], tmp8
 6664      74037001 
 728:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6665              		.loc 1 728 9 is_stmt 1 view .LVU2275
 729:sieve_extend.c ****         copy_word += 2;
 6666              		.loc 1 729 9 view .LVU2276
 6667              	# sieve_extend.c:729:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 729:sieve_extend.c ****         copy_word += 2;
 6668              		.loc 1 729 31 is_stmt 0 view .LVU2277
 6669 28a1 C4A179D6 		vmovq	QWORD PTR 64[rdi+r8], xmm5	# MEM[base: _533, index: ivtmp.472_748, offset: 0B], tmp887
 6669      6C0740
 729:sieve_extend.c ****         copy_word += 2;
GAS LISTING /tmp/ccr2dACi.s 			page 189


 6670              		.loc 1 729 31 view .LVU2278
 6671 28a8 C4A3F916 		vpextrq	QWORD PTR 80[rdi+r8], xmm5, 1	# MEM[base: _533, index: ivtmp.472_748, offset: 16B], tmp887
 6671      6C075001 
 6672 28b0 C4A179D6 		vmovq	QWORD PTR 96[rdi+r8], xmm7	# MEM[base: _533, index: ivtmp.472_748, offset: 32B], tmp890
 6672      7C0760
 6673 28b7 C4A3F916 		vpextrq	QWORD PTR 112[rdi+r8], xmm7, 1	# MEM[base: _533, index: ivtmp.472_748, offset: 48B], tmp89
 6673      7C077001 
 730:sieve_extend.c ****         source_word += 2;
 6674              		.loc 1 730 9 is_stmt 1 view .LVU2279
 731:sieve_extend.c ****         distance += 2;
 6675              		.loc 1 731 9 view .LVU2280
 732:sieve_extend.c ****     }
 6676              		.loc 1 732 9 view .LVU2281
 732:sieve_extend.c ****     }
 6677              		.loc 1 732 9 is_stmt 0 view .LVU2282
 6678              	.LBE388:
 724:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6679              		.loc 1 724 11 is_stmt 1 view .LVU2283
 6680 28bf 4983E880 		sub	r8, -128	# ivtmp.472,
 6681 28c3 4D39CE   		cmp	r14, r9	# bnd.390, ivtmp.470
 6682 28c6 0F87C4FE 		ja	.L547	#,
 6682      FFFF
 6683              	.L776:
 724:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6684              		.loc 1 724 11 is_stmt 0 view .LVU2284
 6685 28cc 488B5424 		mov	rdx, QWORD PTR 88[rsp]	# _183, %sfp
 6685      58
 6686 28d1 49C1E603 		sal	r14, 3	# _483,
 6687 28d5 4A8D0C32 		lea	rcx, [rdx+r14]	# tmp.392,
 6688 28d9 4A8D1430 		lea	rdx, [rax+r14]	# tmp.393,
 6689              	.LVL317:
 6690              	.LBB389:
 725:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6691              		.loc 1 725 9 is_stmt 1 view .LVU2285
 6692              	# sieve_extend.c:725:         bitword_t source0 = bitarray[source_word  ];
 725:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6693              		.loc 1 725 37 is_stmt 0 view .LVU2286
 6694 28dd 4C8D1CCD 		lea	r11, 0[0+rcx*8]	# _605,
 6694      00000000 
 6695              	.LVL318:
 726:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6696              		.loc 1 726 9 is_stmt 1 view .LVU2287
 6697              	# sieve_extend.c:727:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6698              		.loc 1 727 42 is_stmt 0 view .LVU2288
 6699 28e5 C4E293F7 		shrx	rsi, QWORD PTR [rbx+rcx*8], r13	# tmp648, *_606, shift
 6699      34CB
 6700              	# sieve_extend.c:726:         bitword_t source1 = bitarray[source_word+1];
 726:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6701              		.loc 1 726 19 view .LVU2289
 6702 28eb 4A8B7C1B 		mov	rdi, QWORD PTR 8[rbx+r11]	# source1, *_610
 6702      08
 6703              	.LVL319:
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6704              		.loc 1 727 9 is_stmt 1 view .LVU2290
 6705              	# sieve_extend.c:727:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
GAS LISTING /tmp/ccr2dACi.s 			page 190


 6706              		.loc 1 727 63 is_stmt 0 view .LVU2291
 6707 28f0 C46281F7 		shlx	r10, rdi, r15	# tmp650, source1, shift_flipped
 6707      D7
 6708              	# sieve_extend.c:727:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6709              		.loc 1 727 52 view .LVU2292
 6710 28f5 4C09D6   		or	rsi, r10	# tmp651, tmp650
 6711              	# sieve_extend.c:729:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 729:sieve_extend.c ****         copy_word += 2;
 6712              		.loc 1 729 42 view .LVU2293
 6713 28f8 C4E293F7 		shrx	rdi, rdi, r13	# tmp654, source1, shift
 6713      FF
 6714              	.LVL320:
 6715              	# sieve_extend.c:727:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6716              		.loc 1 727 52 view .LVU2294
 6717 28fd 488934D3 		mov	QWORD PTR [rbx+rdx*8], rsi	# *_615, tmp651
 6718              	.LVL321:
 728:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6719              		.loc 1 728 9 is_stmt 1 view .LVU2295
 6720              	# sieve_extend.c:728:         bitword_t source2 = bitarray[source_word+2];
 728:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6721              		.loc 1 728 37 is_stmt 0 view .LVU2296
 6722 2901 4C8D4902 		lea	r9, 2[rcx]	# _618,
 6723              	.LVL322:
 729:sieve_extend.c ****         copy_word += 2;
 6724              		.loc 1 729 9 is_stmt 1 view .LVU2297
 6725              	# sieve_extend.c:729:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 729:sieve_extend.c ****         copy_word += 2;
 6726              		.loc 1 729 63 is_stmt 0 view .LVU2298
 6727 2905 4E8B441B 		mov	r8, QWORD PTR 16[rbx+r11]	# *_620, *_620
 6727      10
 6728 290a C44281F7 		shlx	r11, r8, r15	# tmp652, *_620, shift_flipped
 6728      D8
 6729              	.LVL323:
 6730              	# sieve_extend.c:729:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 729:sieve_extend.c ****         copy_word += 2;
 6731              		.loc 1 729 52 view .LVU2299
 6732 290f 4C09DF   		or	rdi, r11	# tmp655, tmp652
 6733              	# sieve_extend.c:730:         copy_word += 2;
 730:sieve_extend.c ****         source_word += 2;
 6734              		.loc 1 730 19 view .LVU2300
 6735 2912 4C8D4202 		lea	r8, 2[rdx]	# copy_word,
 6736              	.LVL324:
 730:sieve_extend.c ****         source_word += 2;
 6737              		.loc 1 730 19 view .LVU2301
 6738              	.LBE389:
 6739              	# sieve_extend.c:724:     while (copy_word < fast_loop_stop_word) {
 724:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6740              		.loc 1 724 11 view .LVU2302
 6741 2916 4C8B5C24 		mov	r11, QWORD PTR 48[rsp]	# fast_loop_stop_word, %sfp
 6741      30
 6742              	.LBB390:
 6743              	# sieve_extend.c:732:         distance += 2;
 732:sieve_extend.c ****     }
 6744              		.loc 1 732 18 view .LVU2303
 6745 291b 4D8D5602 		lea	r10, 2[r14]	# distance,
GAS LISTING /tmp/ccr2dACi.s 			page 191


 6746              	# sieve_extend.c:729:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 729:sieve_extend.c ****         copy_word += 2;
 6747              		.loc 1 729 52 view .LVU2304
 6748 291f 48897CD3 		mov	QWORD PTR 8[rbx+rdx*8], rdi	# *_626, tmp655
 6748      08
 6749              	.LVL325:
 730:sieve_extend.c ****         source_word += 2;
 6750              		.loc 1 730 9 is_stmt 1 view .LVU2305
 731:sieve_extend.c ****         distance += 2;
 6751              		.loc 1 731 9 view .LVU2306
 732:sieve_extend.c ****     }
 6752              		.loc 1 732 9 view .LVU2307
 732:sieve_extend.c ****     }
 6753              		.loc 1 732 9 is_stmt 0 view .LVU2308
 6754              	.LBE390:
 724:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6755              		.loc 1 724 11 is_stmt 1 view .LVU2309
 6756 2924 4D39C3   		cmp	r11, r8	# fast_loop_stop_word, copy_word
 6757 2927 0F86D500 		jbe	.L550	#,
 6757      0000
 6758              	.LBB391:
 725:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6759              		.loc 1 725 9 view .LVU2310
 6760              	# sieve_extend.c:727:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6761              		.loc 1 727 42 is_stmt 0 view .LVU2311
 6762 292d 4A8B34CB 		mov	rsi, QWORD PTR [rbx+r9*8]	# *_636, *_636
 6763              	# sieve_extend.c:725:         bitword_t source0 = bitarray[source_word  ];
 725:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6764              		.loc 1 725 37 view .LVU2312
 6765 2931 4E8D14CD 		lea	r10, 0[0+r9*8]	# _635,
 6765      00000000 
 6766              	.LVL326:
 726:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6767              		.loc 1 726 9 is_stmt 1 view .LVU2313
 6768              	# sieve_extend.c:726:         bitword_t source1 = bitarray[source_word+1];
 726:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6769              		.loc 1 726 19 is_stmt 0 view .LVU2314
 6770 2939 4A8B7C13 		mov	rdi, QWORD PTR 8[rbx+r10]	# source1, *_640
 6770      08
 6771              	.LVL327:
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6772              		.loc 1 727 9 is_stmt 1 view .LVU2315
 6773              	# sieve_extend.c:727:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6774              		.loc 1 727 42 is_stmt 0 view .LVU2316
 6775 293e C4E293F7 		shrx	rsi, rsi, r13	# tmp656, *_636, shift
 6775      F6
 6776              	.LVL328:
 6777              	# sieve_extend.c:727:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6778              		.loc 1 727 63 view .LVU2317
 6779 2943 C46281F7 		shlx	r9, rdi, r15	# tmp658, source1, shift_flipped
 6779      CF
 6780              	.LVL329:
 6781              	# sieve_extend.c:727:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
GAS LISTING /tmp/ccr2dACi.s 			page 192


 6782              		.loc 1 727 52 view .LVU2318
 6783 2948 4C09CE   		or	rsi, r9	# tmp659, tmp658
 6784 294b 4A8934C3 		mov	QWORD PTR [rbx+r8*8], rsi	# *_645, tmp659
 6785              	.LVL330:
 728:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6786              		.loc 1 728 9 is_stmt 1 view .LVU2319
 6787              	# sieve_extend.c:729:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 729:sieve_extend.c ****         copy_word += 2;
 6788              		.loc 1 729 42 is_stmt 0 view .LVU2320
 6789 294f C4E293F7 		shrx	rdi, rdi, r13	# tmp662, source1, shift
 6789      FF
 6790              	.LVL331:
 6791              	# sieve_extend.c:729:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 729:sieve_extend.c ****         copy_word += 2;
 6792              		.loc 1 729 63 view .LVU2321
 6793 2954 4E8B5413 		mov	r10, QWORD PTR 16[rbx+r10]	# *_650, *_650
 6793      10
 6794 2959 C4C281F7 		shlx	rsi, r10, r15	# tmp660, *_650, shift_flipped
 6794      F2
 6795              	# sieve_extend.c:729:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 729:sieve_extend.c ****         copy_word += 2;
 6796              		.loc 1 729 52 view .LVU2322
 6797 295e 4809F7   		or	rdi, rsi	# tmp663, tmp660
 6798              	# sieve_extend.c:728:         bitword_t source2 = bitarray[source_word+2];
 728:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6799              		.loc 1 728 37 view .LVU2323
 6800 2961 4C8D4904 		lea	r9, 4[rcx]	# _648,
 729:sieve_extend.c ****         copy_word += 2;
 6801              		.loc 1 729 9 is_stmt 1 view .LVU2324
 6802              	# sieve_extend.c:729:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 729:sieve_extend.c ****         copy_word += 2;
 6803              		.loc 1 729 52 is_stmt 0 view .LVU2325
 6804 2965 4A897CC3 		mov	QWORD PTR 8[rbx+r8*8], rdi	# *_656, tmp663
 6804      08
 730:sieve_extend.c ****         source_word += 2;
 6805              		.loc 1 730 9 is_stmt 1 view .LVU2326
 6806              	# sieve_extend.c:730:         copy_word += 2;
 730:sieve_extend.c ****         source_word += 2;
 6807              		.loc 1 730 19 is_stmt 0 view .LVU2327
 6808 296a 4C8D4204 		lea	r8, 4[rdx]	# copy_word,
 6809              	.LVL332:
 731:sieve_extend.c ****         distance += 2;
 6810              		.loc 1 731 9 is_stmt 1 view .LVU2328
 732:sieve_extend.c ****     }
 6811              		.loc 1 732 9 view .LVU2329
 732:sieve_extend.c ****     }
 6812              		.loc 1 732 9 is_stmt 0 view .LVU2330
 6813              	.LBE391:
 6814              	# sieve_extend.c:724:     while (copy_word < fast_loop_stop_word) {
 724:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6815              		.loc 1 724 11 view .LVU2331
 6816 296e 4D39C3   		cmp	r11, r8	# fast_loop_stop_word, copy_word
 6817              	.LBB392:
 6818              	# sieve_extend.c:732:         distance += 2;
 732:sieve_extend.c ****     }
 6819              		.loc 1 732 18 view .LVU2332
 6820 2971 4D8D5604 		lea	r10, 4[r14]	# distance,
GAS LISTING /tmp/ccr2dACi.s 			page 193


 6821              	.LVL333:
 732:sieve_extend.c ****     }
 6822              		.loc 1 732 18 view .LVU2333
 6823              	.LBE392:
 724:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6824              		.loc 1 724 11 is_stmt 1 view .LVU2334
 6825 2975 0F868700 		jbe	.L550	#,
 6825      0000
 6826              	.LBB393:
 725:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6827              		.loc 1 725 9 view .LVU2335
 6828              	# sieve_extend.c:725:         bitword_t source0 = bitarray[source_word  ];
 725:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6829              		.loc 1 725 37 is_stmt 0 view .LVU2336
 6830 297b 4E8D14CD 		lea	r10, 0[0+r9*8]	# _665,
 6830      00000000 
 6831              	.LVL334:
 726:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6832              		.loc 1 726 9 is_stmt 1 view .LVU2337
 6833              	# sieve_extend.c:730:         copy_word += 2;
 730:sieve_extend.c ****         source_word += 2;
 6834              		.loc 1 730 19 is_stmt 0 view .LVU2338
 6835 2983 4883C206 		add	rdx, 6	# copy_word,
 6836              	# sieve_extend.c:726:         bitword_t source1 = bitarray[source_word+1];
 726:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6837              		.loc 1 726 19 view .LVU2339
 6838 2987 4A8B7C13 		mov	rdi, QWORD PTR 8[rbx+r10]	# source1, *_670
 6838      08
 6839              	.LVL335:
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6840              		.loc 1 727 9 is_stmt 1 view .LVU2340
 6841              	# sieve_extend.c:728:         bitword_t source2 = bitarray[source_word+2];
 728:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6842              		.loc 1 728 37 is_stmt 0 view .LVU2341
 6843 298c 4883C106 		add	rcx, 6	# _678,
 6844              	# sieve_extend.c:727:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6845              		.loc 1 727 42 view .LVU2342
 6846 2990 4E8B0CCB 		mov	r9, QWORD PTR [rbx+r9*8]	# *_666, *_666
 6847              	.LVL336:
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6848              		.loc 1 727 42 view .LVU2343
 6849 2994 C4C293F7 		shrx	rsi, r9, r13	# tmp664, *_666, shift
 6849      F1
 6850              	# sieve_extend.c:727:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6851              		.loc 1 727 63 view .LVU2344
 6852 2999 C46281F7 		shlx	r9, rdi, r15	# tmp666, source1, shift_flipped
 6852      CF
 6853              	.LVL337:
 6854              	# sieve_extend.c:727:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6855              		.loc 1 727 52 view .LVU2345
 6856 299e 4C09CE   		or	rsi, r9	# tmp667, tmp666
 6857 29a1 4A8934C3 		mov	QWORD PTR [rbx+r8*8], rsi	# *_675, tmp667
 6858              	.LVL338:
 728:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
GAS LISTING /tmp/ccr2dACi.s 			page 194


 6859              		.loc 1 728 9 is_stmt 1 view .LVU2346
 729:sieve_extend.c ****         copy_word += 2;
 6860              		.loc 1 729 9 view .LVU2347
 6861              	# sieve_extend.c:729:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 729:sieve_extend.c ****         copy_word += 2;
 6862              		.loc 1 729 42 is_stmt 0 view .LVU2348
 6863 29a5 C4E293F7 		shrx	rdi, rdi, r13	# tmp670, source1, shift
 6863      FF
 6864              	.LVL339:
 6865              	# sieve_extend.c:729:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 729:sieve_extend.c ****         copy_word += 2;
 6866              		.loc 1 729 63 view .LVU2349
 6867 29aa 4E8B5413 		mov	r10, QWORD PTR 16[rbx+r10]	# *_680, *_680
 6867      10
 6868              	.LVL340:
 729:sieve_extend.c ****         copy_word += 2;
 6869              		.loc 1 729 63 view .LVU2350
 6870 29af C4C281F7 		shlx	rsi, r10, r15	# tmp668, *_680, shift_flipped
 6870      F2
 6871              	# sieve_extend.c:729:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 729:sieve_extend.c ****         copy_word += 2;
 6872              		.loc 1 729 52 view .LVU2351
 6873 29b4 4809F7   		or	rdi, rsi	# tmp671, tmp668
 6874              	.LBE393:
 6875              	# sieve_extend.c:724:     while (copy_word < fast_loop_stop_word) {
 724:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6876              		.loc 1 724 11 view .LVU2352
 6877 29b7 4939D3   		cmp	r11, rdx	# fast_loop_stop_word, copy_word
 6878              	.LBB394:
 6879              	# sieve_extend.c:729:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 729:sieve_extend.c ****         copy_word += 2;
 6880              		.loc 1 729 52 view .LVU2353
 6881 29ba 4A897CC3 		mov	QWORD PTR 8[rbx+r8*8], rdi	# *_686, tmp671
 6881      08
 730:sieve_extend.c ****         source_word += 2;
 6882              		.loc 1 730 9 is_stmt 1 view .LVU2354
 6883              	.LVL341:
 731:sieve_extend.c ****         distance += 2;
 6884              		.loc 1 731 9 view .LVU2355
 732:sieve_extend.c ****     }
 6885              		.loc 1 732 9 view .LVU2356
 6886              	# sieve_extend.c:732:         distance += 2;
 732:sieve_extend.c ****     }
 6887              		.loc 1 732 18 is_stmt 0 view .LVU2357
 6888 29bf 4D8D5606 		lea	r10, 6[r14]	# distance,
 6889              	.LVL342:
 732:sieve_extend.c ****     }
 6890              		.loc 1 732 18 view .LVU2358
 6891              	.LBE394:
 724:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6892              		.loc 1 724 11 is_stmt 1 view .LVU2359
 6893 29c3 763D     		jbe	.L550	#,
 6894              	.LBB395:
 725:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6895              		.loc 1 725 9 view .LVU2360
 6896              	# sieve_extend.c:725:         bitword_t source0 = bitarray[source_word  ];
 725:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
GAS LISTING /tmp/ccr2dACi.s 			page 195


 6897              		.loc 1 725 37 is_stmt 0 view .LVU2361
 6898 29c5 4C8D1CCD 		lea	r11, 0[0+rcx*8]	# _452,
 6898      00000000 
 6899              	.LVL343:
 726:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6900              		.loc 1 726 9 is_stmt 1 view .LVU2362
 6901              	# sieve_extend.c:726:         bitword_t source1 = bitarray[source_word+1];
 726:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6902              		.loc 1 726 19 is_stmt 0 view .LVU2363
 6903 29cd 4E8B4C1B 		mov	r9, QWORD PTR 8[rbx+r11]	# source1, *_457
 6903      08
 6904              	.LVL344:
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6905              		.loc 1 727 9 is_stmt 1 view .LVU2364
 6906              	# sieve_extend.c:727:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6907              		.loc 1 727 63 is_stmt 0 view .LVU2365
 6908 29d2 C44281F7 		shlx	r8, r9, r15	# tmp674, source1, shift_flipped
 6908      C1
 6909              	# sieve_extend.c:727:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6910              		.loc 1 727 42 view .LVU2366
 6911 29d7 488B0CCB 		mov	rcx, QWORD PTR [rbx+rcx*8]	# *_453, *_453
 6912              	.LVL345:
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6913              		.loc 1 727 42 view .LVU2367
 6914 29db C46293F7 		shrx	r10, rcx, r13	# tmp672, *_453, shift
 6914      D1
 6915              	.LVL346:
 6916              	# sieve_extend.c:727:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6917              		.loc 1 727 52 view .LVU2368
 6918 29e0 4D09C2   		or	r10, r8	# tmp675, tmp674
 6919 29e3 4C8914D3 		mov	QWORD PTR [rbx+rdx*8], r10	# *_462, tmp675
 728:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6920              		.loc 1 728 9 is_stmt 1 view .LVU2369
 6921              	.LVL347:
 729:sieve_extend.c ****         copy_word += 2;
 6922              		.loc 1 729 9 view .LVU2370
 6923              	# sieve_extend.c:732:         distance += 2;
 732:sieve_extend.c ****     }
 6924              		.loc 1 732 18 is_stmt 0 view .LVU2371
 6925 29e7 4D8D5608 		lea	r10, 8[r14]	# distance,
 6926              	# sieve_extend.c:729:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 729:sieve_extend.c ****         copy_word += 2;
 6927              		.loc 1 729 63 view .LVU2372
 6928 29eb 4A8B741B 		mov	rsi, QWORD PTR 16[rbx+r11]	# *_467, *_467
 6928      10
 6929              	# sieve_extend.c:729:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 729:sieve_extend.c ****         copy_word += 2;
 6930              		.loc 1 729 42 view .LVU2373
 6931 29f0 C44293F7 		shrx	r11, r9, r13	# tmp678, source1, shift
 6931      D9
 6932              	.LVL348:
 6933              	# sieve_extend.c:729:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 729:sieve_extend.c ****         copy_word += 2;
 6934              		.loc 1 729 63 view .LVU2374
GAS LISTING /tmp/ccr2dACi.s 			page 196


 6935 29f5 C4E281F7 		shlx	rdi, rsi, r15	# tmp676, *_467, shift_flipped
 6935      FE
 6936              	# sieve_extend.c:729:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 729:sieve_extend.c ****         copy_word += 2;
 6937              		.loc 1 729 52 view .LVU2375
 6938 29fa 4909FB   		or	r11, rdi	# tmp679, tmp676
 6939 29fd 4C895CD3 		mov	QWORD PTR 8[rbx+rdx*8], r11	# *_473, tmp679
 6939      08
 730:sieve_extend.c ****         source_word += 2;
 6940              		.loc 1 730 9 is_stmt 1 view .LVU2376
 731:sieve_extend.c ****         distance += 2;
 6941              		.loc 1 731 9 view .LVU2377
 732:sieve_extend.c ****     }
 6942              		.loc 1 732 9 view .LVU2378
 6943              	.LVL349:
 732:sieve_extend.c ****     }
 6944              		.loc 1 732 9 is_stmt 0 view .LVU2379
 6945              	.LBE395:
 724:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6946              		.loc 1 724 11 is_stmt 1 view .LVU2380
 6947              	.L550:
 724:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6948              		.loc 1 724 11 is_stmt 0 view .LVU2381
 6949 2a02 4C015424 		add	QWORD PTR 88[rsp], r10	# %sfp, distance
 6949      58
 6950 2a07 4C01D0   		add	rax, r10	# ivtmp.432, distance
 6951              	.L545:
 734:sieve_extend.c **** }
 6952              		.loc 1 734 5 is_stmt 1 view .LVU2382
 6953              	.LVL350:
 734:sieve_extend.c **** }
 6954              		.loc 1 734 5 is_stmt 0 view .LVU2383
 6955              	.LBE406:
 6956              	.LBE409:
 882:sieve_extend.c ****     copy_word += distance;
 6957              		.loc 1 882 5 is_stmt 1 view .LVU2384
 883:sieve_extend.c **** 
 6958              		.loc 1 883 5 view .LVU2385
 885:sieve_extend.c **** 
 6959              		.loc 1 885 6 view .LVU2386
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6960              		.loc 1 888 11 view .LVU2387
 6961              	# sieve_extend.c:888:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6962              		.loc 1 888 5 is_stmt 0 view .LVU2388
 6963 2a0a 4C8B5424 		mov	r10, QWORD PTR 64[rsp]	# aligned_copy_word, %sfp
 6963      40
 6964 2a0f 4939C2   		cmp	r10, rax	# aligned_copy_word, ivtmp.432
 6965 2a12 0F821004 		jb	.L551	#,
 6965      0000
 6966 2a18 4C8B5C24 		mov	r11, QWORD PTR 88[rsp]	# _183, %sfp
 6966      58
 6967 2a1d 488D34C5 		lea	rsi, 0[0+rax*8]	# _220,
 6967      00000000 
 6968 2a25 488D7E20 		lea	rdi, 32[rsi]	# tmp691,
 6969 2a29 4A8D14DD 		lea	rdx, 0[0+r11*8]	# _226,
 6969      00000000 
GAS LISTING /tmp/ccr2dACi.s 			page 197


 6970 2a31 4A8D0CDD 		lea	rcx, 40[0+r11*8]	# _218,
 6970      28000000 
 6971 2a39 4839D7   		cmp	rdi, rdx	# tmp691, _226
 6972 2a3c 4D89DE   		mov	r14, r11	# _183, _183
 6973 2a3f 410F9EC1 		setle	r9b	#, tmp693
 6974 2a43 4839F1   		cmp	rcx, rsi	# _218, _220
 6975 2a46 410F9EC0 		setle	r8b	#, tmp695
 6976 2a4a 4508C1   		or	r9b, r8b	# tmp693, tmp695
 6977 2a4d 0F84E50A 		je	.L552	#,
 6977      0000
 6978 2a53 4C89D1   		mov	rcx, r10	# tmp697, aligned_copy_word
 6979 2a56 4829C1   		sub	rcx, rax	# tmp697, ivtmp.432
 6980 2a59 4883F905 		cmp	rcx, 5	# tmp697,
 6981 2a5d 0F86D50A 		jbe	.L552	#,
 6981      0000
 6982 2a63 4801DA   		add	rdx, rbx	# vectp.370, bitarray
 6983 2a66 4983C201 		add	r10, 1	# ivtmp.432,
 6984 2a6a 48C1EA03 		shr	rdx, 3	# tmp702,
 6985 2a6e 4C89D7   		mov	rdi, r10	# niters.369, ivtmp.432
 6986 2a71 48F7DA   		neg	rdx	# tmp703
 6987 2a74 4829C7   		sub	rdi, rax	# niters.369, ivtmp.432
 6988 2a77 83E203   		and	edx, 3	# prolog_loop_niters.371,
 6989 2a7a 0F84A80A 		je	.L571	#,
 6989      0000
 6990              	.LVL351:
 889:sieve_extend.c ****     }
 6991              		.loc 1 889 9 is_stmt 1 view .LVU2389
 6992              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 6993              		.loc 1 889 77 is_stmt 0 view .LVU2390
 6994 2a80 4D8D4301 		lea	r8, 1[r11]	# tmp793,
 6995              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 6996              		.loc 1 889 94 view .LVU2391
 6997 2a84 4E8B5CDB 		mov	r11, QWORD PTR 8[rbx+r11*8]	# *_573, *_573
 6997      08
 6998              	.LVL352:
 889:sieve_extend.c ****     }
 6999              		.loc 1 889 94 view .LVU2392
 7000 2a89 C44281F7 		shlx	r9, r11, r15	# tmp704,, shift_flipped
 7000      CB
 7001              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7002              		.loc 1 889 56 view .LVU2393
 7003 2a8e 4E8B1CF3 		mov	r11, QWORD PTR [rbx+r14*8]	# *_568, *_568
 7004              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7005              		.loc 1 889 77 view .LVU2394
 7006 2a92 4C89C1   		mov	rcx, r8	# source_word, tmp793
 7007              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7008              		.loc 1 889 56 view .LVU2395
 7009 2a95 4C895C24 		mov	QWORD PTR 56[rsp], r11	# %sfp, *_568
 7009      38
 7010 2a9a C44293F7 		shrx	r11, r11, r13	# tmp706,, shift
 7010      DB
 7011              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
GAS LISTING /tmp/ccr2dACi.s 			page 198


 889:sieve_extend.c ****     }
 7012              		.loc 1 889 66 view .LVU2396
 7013 2a9f 4D09D9   		or	r9, r11	# tmp708, tmp706
 7014 2aa2 4883FA01 		cmp	rdx, 1	# prolog_loop_niters.371,
 7015 2aa6 4C890C33 		mov	QWORD PTR [rbx+rsi], r9	# *_577, tmp708
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7016              		.loc 1 888 43 is_stmt 1 view .LVU2397
 7017              	# sieve_extend.c:888:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7018              		.loc 1 888 52 is_stmt 0 view .LVU2398
 7019 2aaa 488D7001 		lea	rsi, 1[rax]	# copy_word,
 7020              	.LVL353:
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7021              		.loc 1 888 11 is_stmt 1 view .LVU2399
 7022 2aae 7454     		je	.L553	#,
 889:sieve_extend.c ****     }
 7023              		.loc 1 889 9 view .LVU2400
 7024              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7025              		.loc 1 889 40 is_stmt 0 view .LVU2401
 7026 2ab0 4E8D1CC5 		lea	r11, 0[0+r8*8]	# _586,
 7026      00000000 
 7027              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7028              		.loc 1 889 94 view .LVU2402
 7029 2ab8 C42281F7 		shlx	r9, QWORD PTR 8[rbx+r11], r15	# tmp709, *_592, shift_flipped
 7029      4C1B08
 7030              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7031              		.loc 1 889 56 view .LVU2403
 7032 2abf 4E8B1C1B 		mov	r11, QWORD PTR [rbx+r11]	# *_587, *_587
 7033 2ac3 C44293F7 		shrx	r11, r11, r13	# tmp711, *_587, shift
 7033      DB
 7034              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7035              		.loc 1 889 66 view .LVU2404
 7036 2ac8 4D09D9   		or	r9, r11	# tmp713, tmp711
 7037 2acb 4883FA03 		cmp	rdx, 3	# prolog_loop_niters.371,
 7038 2acf 4C890CF3 		mov	QWORD PTR [rbx+rsi*8], r9	# *_596, tmp713
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7039              		.loc 1 888 43 is_stmt 1 view .LVU2405
 7040              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7041              		.loc 1 889 77 is_stmt 0 view .LVU2406
 7042 2ad3 498D4E02 		lea	rcx, 2[r14]	# source_word,
 7043              	.LVL354:
 7044              	# sieve_extend.c:888:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7045              		.loc 1 888 52 view .LVU2407
 7046 2ad7 488D7002 		lea	rsi, 2[rax]	# copy_word,
 7047              	.LVL355:
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7048              		.loc 1 888 11 is_stmt 1 view .LVU2408
 7049 2adb 7527     		jne	.L553	#,
 889:sieve_extend.c ****     }
 7050              		.loc 1 889 9 view .LVU2409
 7051              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
GAS LISTING /tmp/ccr2dACi.s 			page 199


 889:sieve_extend.c ****     }
 7052              		.loc 1 889 40 is_stmt 0 view .LVU2410
 7053 2add 4C8D1CCD 		lea	r11, 0[0+rcx*8]	# _261,
 7053      00000000 
 7054              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7055              		.loc 1 889 77 view .LVU2411
 7056 2ae5 498D4E03 		lea	rcx, 3[r14]	# source_word,
 7057              	.LVL356:
 7058              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7059              		.loc 1 889 56 view .LVU2412
 7060 2ae9 4E8B0C1B 		mov	r9, QWORD PTR [rbx+r11]	# *_262, *_262
 7061              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7062              		.loc 1 889 94 view .LVU2413
 7063 2aed C42281F7 		shlx	r14, QWORD PTR 8[rbx+r11], r15	# tmp714, *_267, shift_flipped
 7063      741B08
 7064              	.LVL357:
 7065              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7066              		.loc 1 889 56 view .LVU2414
 7067 2af4 C44293F7 		shrx	r11, r9, r13	# tmp716, *_262, shift
 7067      D9
 7068              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7069              		.loc 1 889 66 view .LVU2415
 7070 2af9 4D09DE   		or	r14, r11	# tmp718, tmp716
 7071 2afc 4C8934F3 		mov	QWORD PTR [rbx+rsi*8], r14	# *_271, tmp718
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7072              		.loc 1 888 43 is_stmt 1 view .LVU2416
 7073              	# sieve_extend.c:888:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7074              		.loc 1 888 52 is_stmt 0 view .LVU2417
 7075 2b00 488D7003 		lea	rsi, 3[rax]	# copy_word,
 7076              	.LVL358:
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7077              		.loc 1 888 11 is_stmt 1 view .LVU2418
 7078              	.L553:
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7079              		.loc 1 888 11 is_stmt 0 view .LVU2419
 7080 2b04 4829D7   		sub	rdi, rdx	# niters.372, prolog_loop_niters.371
 7081 2b07 C441796E 		vmovd	xmm10, r12d	# _12, _12
 7081      D4
 7082 2b0c 4989FB   		mov	r11, rdi	# bnd.373, niters.372
 7083 2b0f 4801D0   		add	rax, rdx	# tmp724, prolog_loop_niters.371
 7084 2b12 49C1EB02 		shr	r11, 2	# bnd.373,
 7085 2b16 4901D0   		add	r8, rdx	# tmp722, prolog_loop_niters.371
 7086 2b19 49C1E305 		sal	r11, 5	# _733,
 7087 2b1d 4E8D04C3 		lea	r8, [rbx+r8*8]	# vectp.382,
 7088 2b21 4C8B7424 		mov	r14, QWORD PTR 88[rsp]	# _183, %sfp
 7088      58
 7089 2b26 4D8D63E0 		lea	r12, -32[r11]	# tmp818,
 7090 2b2a C5F96E54 		vmovd	xmm2, DWORD PTR 72[rsp]	# _18, %sfp
 7090      2448
 7091 2b30 49C1EC05 		shr	r12, 5	# tmp816,
 7092 2b34 4983C401 		add	r12, 1	# tmp819,
GAS LISTING /tmp/ccr2dACi.s 			page 200


 7093 2b38 4901D6   		add	r14, rdx	# _183, prolog_loop_niters.371
 7094 2b3b 488D14C3 		lea	rdx, [rbx+rax*8]	# vectp.387,
 7095              	# sieve_extend.c:882:     source_word += distance;
 882:sieve_extend.c ****     copy_word += distance;
 7096              		.loc 1 882 17 view .LVU2420
 7097 2b3f 31C0     		xor	eax, eax	# ivtmp.448
 7098 2b41 4183E407 		and	r12d, 7	# tmp820,
 7099 2b45 4E8D0CF3 		lea	r9, [rbx+r14*8]	# vectp.378,
 7100 2b49 0F842801 		je	.L555	#,
 7100      0000
 7101 2b4f 4983FC01 		cmp	r12, 1	# tmp820,
 7102 2b53 0F84F200 		je	.L703	#,
 7102      0000
 7103 2b59 4983FC02 		cmp	r12, 2	# tmp820,
 7104 2b5d 0F84C600 		je	.L704	#,
 7104      0000
 7105 2b63 4983FC03 		cmp	r12, 3	# tmp820,
 7106 2b67 0F849900 		je	.L705	#,
 7106      0000
 7107 2b6d 4983FC04 		cmp	r12, 4	# tmp820,
 7108 2b71 7470     		je	.L706	#,
 7109 2b73 4983FC05 		cmp	r12, 5	# tmp820,
 7110 2b77 7448     		je	.L707	#,
 7111 2b79 4983FC06 		cmp	r12, 6	# tmp820,
 7112 2b7d 7420     		je	.L708	#,
 889:sieve_extend.c ****     }
 7113              		.loc 1 889 9 is_stmt 1 view .LVU2421
 7114              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7115              		.loc 1 889 56 is_stmt 0 view .LVU2422
 7116 2b7f C4C17D6F 		vmovdqa	ymm3, YMMWORD PTR [r9]	# tmp1411, MEM[base: vectp.378_307, index: ivtmp.448_731, offset: 0
 7116      19
 7117 2b84 B8200000 		mov	eax, 32	# ivtmp.448,
 7117      00
 7118              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7119              		.loc 1 889 94 view .LVU2423
 7120 2b89 C4C17E6F 		vmovdqu	ymm4, YMMWORD PTR [r8]	# tmp1412, MEM[base: vectp.382_314, index: ivtmp.448_731, offset: 0
 7120      20
 7121              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7122              		.loc 1 889 56 view .LVU2424
 7123 2b8e C44165D3 		vpsrlq	ymm11, ymm3, xmm10	# vect__38.380, tmp1411, _12
 7123      DA
 7124              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7125              		.loc 1 889 94 view .LVU2425
 7126 2b93 C5DDF3F2 		vpsllq	ymm6, ymm4, xmm2	# vect__43.384, tmp1412, _18
 7127              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7128              		.loc 1 889 66 view .LVU2426
 7129 2b97 C525EBE6 		vpor	ymm12, ymm11, ymm6	# vect__46.385, vect__38.380, vect__43.384
 7130              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7131              		.loc 1 889 29 view .LVU2427
 7132 2b9b C57E7F22 		vmovdqu	YMMWORD PTR [rdx], ymm12	# MEM[base: vectp.387_323, index: ivtmp.448_731, offset: 0B], vec
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
GAS LISTING /tmp/ccr2dACi.s 			page 201


 7133              		.loc 1 888 43 is_stmt 1 view .LVU2428
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7134              		.loc 1 888 11 view .LVU2429
 7135              	.L708:
 889:sieve_extend.c ****     }
 7136              		.loc 1 889 9 view .LVU2430
 7137              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7138              		.loc 1 889 56 is_stmt 0 view .LVU2431
 7139 2b9f C4417D6F 		vmovdqa	ymm13, YMMWORD PTR [r9+rax]	# tmp1413, MEM[base: vectp.378_307, index: ivtmp.448_731, offs
 7139      2C01
 7140              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7141              		.loc 1 889 94 view .LVU2432
 7142 2ba5 C4417E6F 		vmovdqu	ymm15, YMMWORD PTR [r8+rax]	# tmp1414, MEM[base: vectp.382_314, index: ivtmp.448_731, offs
 7142      3C00
 7143              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7144              		.loc 1 889 56 view .LVU2433
 7145 2bab C44115D3 		vpsrlq	ymm14, ymm13, xmm10	# vect__38.380, tmp1413, _12
 7145      F2
 7146              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7147              		.loc 1 889 94 view .LVU2434
 7148 2bb0 C585F3CA 		vpsllq	ymm1, ymm15, xmm2	# vect__43.384, tmp1414, _18
 7149              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7150              		.loc 1 889 66 view .LVU2435
 7151 2bb4 C50DEBC1 		vpor	ymm8, ymm14, ymm1	# vect__46.385, vect__38.380, vect__43.384
 7152              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7153              		.loc 1 889 29 view .LVU2436
 7154 2bb8 C57E7F04 		vmovdqu	YMMWORD PTR [rdx+rax], ymm8	# MEM[base: vectp.387_323, index: ivtmp.448_731, offset: 0B], 
 7154      02
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7155              		.loc 1 888 43 is_stmt 1 view .LVU2437
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7156              		.loc 1 888 11 view .LVU2438
 7157 2bbd 4883C020 		add	rax, 32	# ivtmp.448,
 7158              	.L707:
 889:sieve_extend.c ****     }
 7159              		.loc 1 889 9 view .LVU2439
 7160              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7161              		.loc 1 889 56 is_stmt 0 view .LVU2440
 7162 2bc1 C4C17D6F 		vmovdqa	ymm0, YMMWORD PTR [r9+rax]	# tmp1415, MEM[base: vectp.378_307, index: ivtmp.448_731, offse
 7162      0401
 7163              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7164              		.loc 1 889 94 view .LVU2441
 7165 2bc7 C4417E6F 		vmovdqu	ymm9, YMMWORD PTR [r8+rax]	# tmp1416, MEM[base: vectp.382_314, index: ivtmp.448_731, offse
 7165      0C00
 7166              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7167              		.loc 1 889 56 view .LVU2442
 7168 2bcd C4C17DD3 		vpsrlq	ymm5, ymm0, xmm10	# vect__38.380, tmp1415, _12
 7168      EA
GAS LISTING /tmp/ccr2dACi.s 			page 202


 7169              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7170              		.loc 1 889 94 view .LVU2443
 7171 2bd2 C5B5F3FA 		vpsllq	ymm7, ymm9, xmm2	# vect__43.384, tmp1416, _18
 7172              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7173              		.loc 1 889 66 view .LVU2444
 7174 2bd6 C5D5EBDF 		vpor	ymm3, ymm5, ymm7	# vect__46.385, vect__38.380, vect__43.384
 7175              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7176              		.loc 1 889 29 view .LVU2445
 7177 2bda C5FE7F1C 		vmovdqu	YMMWORD PTR [rdx+rax], ymm3	# MEM[base: vectp.387_323, index: ivtmp.448_731, offset: 0B], 
 7177      02
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7178              		.loc 1 888 43 is_stmt 1 view .LVU2446
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7179              		.loc 1 888 11 view .LVU2447
 7180 2bdf 4883C020 		add	rax, 32	# ivtmp.448,
 7181              	.L706:
 889:sieve_extend.c ****     }
 7182              		.loc 1 889 9 view .LVU2448
 7183              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7184              		.loc 1 889 56 is_stmt 0 view .LVU2449
 7185 2be3 C4417D6F 		vmovdqa	ymm11, YMMWORD PTR [r9+rax]	# tmp1417, MEM[base: vectp.378_307, index: ivtmp.448_731, offs
 7185      1C01
 7186              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7187              		.loc 1 889 94 view .LVU2450
 7188 2be9 C4C17E6F 		vmovdqu	ymm6, YMMWORD PTR [r8+rax]	# tmp1418, MEM[base: vectp.382_314, index: ivtmp.448_731, offse
 7188      3400
 7189              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7190              		.loc 1 889 56 view .LVU2451
 7191 2bef C4C125D3 		vpsrlq	ymm4, ymm11, xmm10	# vect__38.380, tmp1417, _12
 7191      E2
 7192              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7193              		.loc 1 889 94 view .LVU2452
 7194 2bf4 C54DF3E2 		vpsllq	ymm12, ymm6, xmm2	# vect__43.384, tmp1418, _18
 7195              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7196              		.loc 1 889 66 view .LVU2453
 7197 2bf8 C4415DEB 		vpor	ymm13, ymm4, ymm12	# vect__46.385, vect__38.380, vect__43.384
 7197      EC
 7198              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7199              		.loc 1 889 29 view .LVU2454
 7200 2bfd C57E7F2C 		vmovdqu	YMMWORD PTR [rdx+rax], ymm13	# MEM[base: vectp.387_323, index: ivtmp.448_731, offset: 0B],
 7200      02
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7201              		.loc 1 888 43 is_stmt 1 view .LVU2455
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7202              		.loc 1 888 11 view .LVU2456
 7203 2c02 4883C020 		add	rax, 32	# ivtmp.448,
 7204              	.L705:
 889:sieve_extend.c ****     }
GAS LISTING /tmp/ccr2dACi.s 			page 203


 7205              		.loc 1 889 9 view .LVU2457
 7206              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7207              		.loc 1 889 56 is_stmt 0 view .LVU2458
 7208 2c06 C4417D6F 		vmovdqa	ymm14, YMMWORD PTR [r9+rax]	# tmp1419, MEM[base: vectp.378_307, index: ivtmp.448_731, offs
 7208      3401
 7209              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7210              		.loc 1 889 94 view .LVU2459
 7211 2c0c C4C17E6F 		vmovdqu	ymm1, YMMWORD PTR [r8+rax]	# tmp1420, MEM[base: vectp.382_314, index: ivtmp.448_731, offse
 7211      0C00
 7212              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7213              		.loc 1 889 56 view .LVU2460
 7214 2c12 C4410DD3 		vpsrlq	ymm15, ymm14, xmm10	# vect__38.380, tmp1419, _12
 7214      FA
 7215              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7216              		.loc 1 889 94 view .LVU2461
 7217 2c17 C575F3C2 		vpsllq	ymm8, ymm1, xmm2	# vect__43.384, tmp1420, _18
 7218              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7219              		.loc 1 889 66 view .LVU2462
 7220 2c1b C4C105EB 		vpor	ymm0, ymm15, ymm8	# vect__46.385, vect__38.380, vect__43.384
 7220      C0
 7221              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7222              		.loc 1 889 29 view .LVU2463
 7223 2c20 C5FE7F04 		vmovdqu	YMMWORD PTR [rdx+rax], ymm0	# MEM[base: vectp.387_323, index: ivtmp.448_731, offset: 0B], 
 7223      02
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7224              		.loc 1 888 43 is_stmt 1 view .LVU2464
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7225              		.loc 1 888 11 view .LVU2465
 7226 2c25 4883C020 		add	rax, 32	# ivtmp.448,
 7227              	.L704:
 889:sieve_extend.c ****     }
 7228              		.loc 1 889 9 view .LVU2466
 7229              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7230              		.loc 1 889 56 is_stmt 0 view .LVU2467
 7231 2c29 C4C17D6F 		vmovdqa	ymm5, YMMWORD PTR [r9+rax]	# tmp1421, MEM[base: vectp.378_307, index: ivtmp.448_731, offse
 7231      2C01
 7232              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7233              		.loc 1 889 94 view .LVU2468
 7234 2c2f C4C17E6F 		vmovdqu	ymm7, YMMWORD PTR [r8+rax]	# tmp1422, MEM[base: vectp.382_314, index: ivtmp.448_731, offse
 7234      3C00
 7235              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7236              		.loc 1 889 56 view .LVU2469
 7237 2c35 C44155D3 		vpsrlq	ymm9, ymm5, xmm10	# vect__38.380, tmp1421, _12
 7237      CA
 7238              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7239              		.loc 1 889 94 view .LVU2470
 7240 2c3a C5C5F3DA 		vpsllq	ymm3, ymm7, xmm2	# vect__43.384, tmp1422, _18
GAS LISTING /tmp/ccr2dACi.s 			page 204


 7241              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7242              		.loc 1 889 66 view .LVU2471
 7243 2c3e C535EBDB 		vpor	ymm11, ymm9, ymm3	# vect__46.385, vect__38.380, vect__43.384
 7244              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7245              		.loc 1 889 29 view .LVU2472
 7246 2c42 C57E7F1C 		vmovdqu	YMMWORD PTR [rdx+rax], ymm11	# MEM[base: vectp.387_323, index: ivtmp.448_731, offset: 0B],
 7246      02
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7247              		.loc 1 888 43 is_stmt 1 view .LVU2473
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7248              		.loc 1 888 11 view .LVU2474
 7249 2c47 4883C020 		add	rax, 32	# ivtmp.448,
 7250              	.L703:
 889:sieve_extend.c ****     }
 7251              		.loc 1 889 9 view .LVU2475
 7252              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7253              		.loc 1 889 56 is_stmt 0 view .LVU2476
 7254 2c4b C4C17D6F 		vmovdqa	ymm4, YMMWORD PTR [r9+rax]	# tmp1423, MEM[base: vectp.378_307, index: ivtmp.448_731, offse
 7254      2401
 7255              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7256              		.loc 1 889 94 view .LVU2477
 7257 2c51 C4417E6F 		vmovdqu	ymm12, YMMWORD PTR [r8+rax]	# tmp1424, MEM[base: vectp.382_314, index: ivtmp.448_731, offs
 7257      2400
 7258              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7259              		.loc 1 889 56 view .LVU2478
 7260 2c57 C4C15DD3 		vpsrlq	ymm6, ymm4, xmm10	# vect__38.380, tmp1423, _12
 7260      F2
 7261              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7262              		.loc 1 889 94 view .LVU2479
 7263 2c5c C51DF3EA 		vpsllq	ymm13, ymm12, xmm2	# vect__43.384, tmp1424, _18
 7264              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7265              		.loc 1 889 66 view .LVU2480
 7266 2c60 C4414DEB 		vpor	ymm14, ymm6, ymm13	# vect__46.385, vect__38.380, vect__43.384
 7266      F5
 7267              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7268              		.loc 1 889 29 view .LVU2481
 7269 2c65 C57E7F34 		vmovdqu	YMMWORD PTR [rdx+rax], ymm14	# MEM[base: vectp.387_323, index: ivtmp.448_731, offset: 0B],
 7269      02
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7270              		.loc 1 888 43 is_stmt 1 view .LVU2482
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7271              		.loc 1 888 11 view .LVU2483
 7272 2c6a 4883C020 		add	rax, 32	# ivtmp.448,
 7273 2c6e 4C39D8   		cmp	rax, r11	# ivtmp.448, _733
 7274 2c71 0F843B01 		je	.L784	#,
 7274      0000
 7275              	.L555:
 889:sieve_extend.c ****     }
 7276              		.loc 1 889 9 discriminator 2 view .LVU2484
GAS LISTING /tmp/ccr2dACi.s 			page 205


 7277              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7278              		.loc 1 889 56 is_stmt 0 discriminator 2 view .LVU2485
 7279 2c77 C4417D6F 		vmovdqa	ymm15, YMMWORD PTR [r9+rax]	# tmp1348, MEM[base: vectp.378_307, index: ivtmp.448_731, offs
 7279      3C01
 7280              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7281              		.loc 1 889 94 discriminator 2 view .LVU2486
 7282 2c7d C4417E6F 		vmovdqu	ymm8, YMMWORD PTR [r8+rax]	# tmp1349, MEM[base: vectp.382_314, index: ivtmp.448_731, offse
 7282      0400
 7283              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7284              		.loc 1 889 56 discriminator 2 view .LVU2487
 7285 2c83 C4C105D3 		vpsrlq	ymm1, ymm15, xmm10	# vect__38.380, tmp1348, _12
 7285      CA
 7286              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7287              		.loc 1 889 94 discriminator 2 view .LVU2488
 7288 2c88 C5BDF3C2 		vpsllq	ymm0, ymm8, xmm2	# vect__43.384, tmp1349, _18
 7289              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7290              		.loc 1 889 66 discriminator 2 view .LVU2489
 7291 2c8c C5F5EBE8 		vpor	ymm5, ymm1, ymm0	# vect__46.385, vect__38.380, vect__43.384
 7292              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7293              		.loc 1 889 29 discriminator 2 view .LVU2490
 7294 2c90 C5FE7F2C 		vmovdqu	YMMWORD PTR [rdx+rax], ymm5	# MEM[base: vectp.387_323, index: ivtmp.448_731, offset: 0B], 
 7294      02
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7295              		.loc 1 888 43 is_stmt 1 discriminator 2 view .LVU2491
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7296              		.loc 1 888 11 discriminator 2 view .LVU2492
 889:sieve_extend.c ****     }
 7297              		.loc 1 889 9 discriminator 2 view .LVU2493
 7298              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7299              		.loc 1 889 56 is_stmt 0 discriminator 2 view .LVU2494
 7300 2c95 C4417D6F 		vmovdqa	ymm9, YMMWORD PTR 32[r9+rax]	# tmp1350, MEM[base: vectp.378_307, index: ivtmp.448_731, off
 7300      4C0120
 7301              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7302              		.loc 1 889 94 discriminator 2 view .LVU2495
 7303 2c9c C4C17E6F 		vmovdqu	ymm7, YMMWORD PTR 32[r8+rax]	# tmp1351, MEM[base: vectp.382_314, index: ivtmp.448_731, off
 7303      7C0020
 7304              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7305              		.loc 1 889 56 discriminator 2 view .LVU2496
 7306 2ca3 C44135D3 		vpsrlq	ymm11, ymm9, xmm10	# vect__38.380, tmp1350, _12
 7306      DA
 7307              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7308              		.loc 1 889 94 discriminator 2 view .LVU2497
 7309 2ca8 C5C5F3DA 		vpsllq	ymm3, ymm7, xmm2	# vect__43.384, tmp1351, _18
 7310              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7311              		.loc 1 889 66 discriminator 2 view .LVU2498
 7312 2cac C5A5EBE3 		vpor	ymm4, ymm11, ymm3	# vect__46.385, vect__38.380, vect__43.384
GAS LISTING /tmp/ccr2dACi.s 			page 206


 7313              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7314              		.loc 1 889 29 discriminator 2 view .LVU2499
 7315 2cb0 C5FE7F64 		vmovdqu	YMMWORD PTR 32[rdx+rax], ymm4	# MEM[base: vectp.387_323, index: ivtmp.448_731, offset: 0B]
 7315      0220
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7316              		.loc 1 888 43 is_stmt 1 discriminator 2 view .LVU2500
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7317              		.loc 1 888 11 discriminator 2 view .LVU2501
 889:sieve_extend.c ****     }
 7318              		.loc 1 889 9 discriminator 2 view .LVU2502
 7319              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7320              		.loc 1 889 56 is_stmt 0 discriminator 2 view .LVU2503
 7321 2cb6 C4C17D6F 		vmovdqa	ymm6, YMMWORD PTR 64[r9+rax]	# tmp1352, MEM[base: vectp.378_307, index: ivtmp.448_731, off
 7321      740140
 7322              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7323              		.loc 1 889 94 discriminator 2 view .LVU2504
 7324 2cbd C4417E6F 		vmovdqu	ymm13, YMMWORD PTR 64[r8+rax]	# tmp1353, MEM[base: vectp.382_314, index: ivtmp.448_731, of
 7324      6C0040
 7325              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7326              		.loc 1 889 56 discriminator 2 view .LVU2505
 7327 2cc4 C4414DD3 		vpsrlq	ymm12, ymm6, xmm10	# vect__38.380, tmp1352, _12
 7327      E2
 7328              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7329              		.loc 1 889 94 discriminator 2 view .LVU2506
 7330 2cc9 C515F3F2 		vpsllq	ymm14, ymm13, xmm2	# vect__43.384, tmp1353, _18
 7331              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7332              		.loc 1 889 66 discriminator 2 view .LVU2507
 7333 2ccd C4411DEB 		vpor	ymm15, ymm12, ymm14	# vect__46.385, vect__38.380, vect__43.384
 7333      FE
 7334              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7335              		.loc 1 889 29 discriminator 2 view .LVU2508
 7336 2cd2 C57E7F7C 		vmovdqu	YMMWORD PTR 64[rdx+rax], ymm15	# MEM[base: vectp.387_323, index: ivtmp.448_731, offset: 0B
 7336      0240
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7337              		.loc 1 888 43 is_stmt 1 discriminator 2 view .LVU2509
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7338              		.loc 1 888 11 discriminator 2 view .LVU2510
 889:sieve_extend.c ****     }
 7339              		.loc 1 889 9 discriminator 2 view .LVU2511
 7340              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7341              		.loc 1 889 56 is_stmt 0 discriminator 2 view .LVU2512
 7342 2cd8 C4C17D6F 		vmovdqa	ymm1, YMMWORD PTR 96[r9+rax]	# tmp1354, MEM[base: vectp.378_307, index: ivtmp.448_731, off
 7342      4C0160
 7343              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7344              		.loc 1 889 94 discriminator 2 view .LVU2513
 7345 2cdf C4C17E6F 		vmovdqu	ymm0, YMMWORD PTR 96[r8+rax]	# tmp1355, MEM[base: vectp.382_314, index: ivtmp.448_731, off
 7345      440060
 7346              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
GAS LISTING /tmp/ccr2dACi.s 			page 207


 889:sieve_extend.c ****     }
 7347              		.loc 1 889 56 discriminator 2 view .LVU2514
 7348 2ce6 C44175D3 		vpsrlq	ymm8, ymm1, xmm10	# vect__38.380, tmp1354, _12
 7348      C2
 7349              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7350              		.loc 1 889 94 discriminator 2 view .LVU2515
 7351 2ceb C5FDF3EA 		vpsllq	ymm5, ymm0, xmm2	# vect__43.384, tmp1355, _18
 7352              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7353              		.loc 1 889 66 discriminator 2 view .LVU2516
 7354 2cef C53DEBCD 		vpor	ymm9, ymm8, ymm5	# vect__46.385, vect__38.380, vect__43.384
 7355              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7356              		.loc 1 889 29 discriminator 2 view .LVU2517
 7357 2cf3 C57E7F4C 		vmovdqu	YMMWORD PTR 96[rdx+rax], ymm9	# MEM[base: vectp.387_323, index: ivtmp.448_731, offset: 0B]
 7357      0260
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7358              		.loc 1 888 43 is_stmt 1 discriminator 2 view .LVU2518
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7359              		.loc 1 888 11 discriminator 2 view .LVU2519
 889:sieve_extend.c ****     }
 7360              		.loc 1 889 9 discriminator 2 view .LVU2520
 7361              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7362              		.loc 1 889 56 is_stmt 0 discriminator 2 view .LVU2521
 7363 2cf9 C4417D6F 		vmovdqa	ymm11, YMMWORD PTR 128[r9+rax]	# tmp1356, MEM[base: vectp.378_307, index: ivtmp.448_731, o
 7363      9C018000 
 7363      0000
 7364              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7365              		.loc 1 889 94 discriminator 2 view .LVU2522
 7366 2d03 C4C17E6F 		vmovdqu	ymm7, YMMWORD PTR 128[r8+rax]	# tmp1357, MEM[base: vectp.382_314, index: ivtmp.448_731, of
 7366      BC008000 
 7366      0000
 7367              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7368              		.loc 1 889 56 discriminator 2 view .LVU2523
 7369 2d0d C4C125D3 		vpsrlq	ymm4, ymm11, xmm10	# vect__38.380, tmp1356, _12
 7369      E2
 7370              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7371              		.loc 1 889 94 discriminator 2 view .LVU2524
 7372 2d12 C5C5F3DA 		vpsllq	ymm3, ymm7, xmm2	# vect__43.384, tmp1357, _18
 7373              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7374              		.loc 1 889 66 discriminator 2 view .LVU2525
 7375 2d16 C5DDEBF3 		vpor	ymm6, ymm4, ymm3	# vect__46.385, vect__38.380, vect__43.384
 7376              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7377              		.loc 1 889 29 discriminator 2 view .LVU2526
 7378 2d1a C5FE7FB4 		vmovdqu	YMMWORD PTR 128[rdx+rax], ymm6	# MEM[base: vectp.387_323, index: ivtmp.448_731, offset: 0B
 7378      02800000 
 7378      00
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7379              		.loc 1 888 43 is_stmt 1 discriminator 2 view .LVU2527
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
GAS LISTING /tmp/ccr2dACi.s 			page 208


 7380              		.loc 1 888 11 discriminator 2 view .LVU2528
 889:sieve_extend.c ****     }
 7381              		.loc 1 889 9 discriminator 2 view .LVU2529
 7382              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7383              		.loc 1 889 56 is_stmt 0 discriminator 2 view .LVU2530
 7384 2d23 C4417D6F 		vmovdqa	ymm12, YMMWORD PTR 160[r9+rax]	# tmp1358, MEM[base: vectp.378_307, index: ivtmp.448_731, o
 7384      A401A000 
 7384      0000
 7385              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7386              		.loc 1 889 94 discriminator 2 view .LVU2531
 7387 2d2d C4417E6F 		vmovdqu	ymm14, YMMWORD PTR 160[r8+rax]	# tmp1359, MEM[base: vectp.382_314, index: ivtmp.448_731, o
 7387      B400A000 
 7387      0000
 7388              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7389              		.loc 1 889 56 discriminator 2 view .LVU2532
 7390 2d37 C4411DD3 		vpsrlq	ymm13, ymm12, xmm10	# vect__38.380, tmp1358, _12
 7390      EA
 7391              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7392              		.loc 1 889 94 discriminator 2 view .LVU2533
 7393 2d3c C50DF3FA 		vpsllq	ymm15, ymm14, xmm2	# vect__43.384, tmp1359, _18
 7394              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7395              		.loc 1 889 66 discriminator 2 view .LVU2534
 7396 2d40 C4C115EB 		vpor	ymm1, ymm13, ymm15	# vect__46.385, vect__38.380, vect__43.384
 7396      CF
 7397              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7398              		.loc 1 889 29 discriminator 2 view .LVU2535
 7399 2d45 C5FE7F8C 		vmovdqu	YMMWORD PTR 160[rdx+rax], ymm1	# MEM[base: vectp.387_323, index: ivtmp.448_731, offset: 0B
 7399      02A00000 
 7399      00
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7400              		.loc 1 888 43 is_stmt 1 discriminator 2 view .LVU2536
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7401              		.loc 1 888 11 discriminator 2 view .LVU2537
 889:sieve_extend.c ****     }
 7402              		.loc 1 889 9 discriminator 2 view .LVU2538
 7403              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7404              		.loc 1 889 56 is_stmt 0 discriminator 2 view .LVU2539
 7405 2d4e C4417D6F 		vmovdqa	ymm8, YMMWORD PTR 192[r9+rax]	# tmp1360, MEM[base: vectp.378_307, index: ivtmp.448_731, of
 7405      8401C000 
 7405      0000
 7406              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7407              		.loc 1 889 94 discriminator 2 view .LVU2540
 7408 2d58 C4C17E6F 		vmovdqu	ymm5, YMMWORD PTR 192[r8+rax]	# tmp1361, MEM[base: vectp.382_314, index: ivtmp.448_731, of
 7408      AC00C000 
 7408      0000
 7409              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7410              		.loc 1 889 56 discriminator 2 view .LVU2541
 7411 2d62 C4C13DD3 		vpsrlq	ymm0, ymm8, xmm10	# vect__38.380, tmp1360, _12
GAS LISTING /tmp/ccr2dACi.s 			page 209


 7411      C2
 7412              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7413              		.loc 1 889 94 discriminator 2 view .LVU2542
 7414 2d67 C555F3CA 		vpsllq	ymm9, ymm5, xmm2	# vect__43.384, tmp1361, _18
 7415              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7416              		.loc 1 889 66 discriminator 2 view .LVU2543
 7417 2d6b C4417DEB 		vpor	ymm11, ymm0, ymm9	# vect__46.385, vect__38.380, vect__43.384
 7417      D9
 7418              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7419              		.loc 1 889 29 discriminator 2 view .LVU2544
 7420 2d70 C57E7F9C 		vmovdqu	YMMWORD PTR 192[rdx+rax], ymm11	# MEM[base: vectp.387_323, index: ivtmp.448_731, offset: 0
 7420      02C00000 
 7420      00
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7421              		.loc 1 888 43 is_stmt 1 discriminator 2 view .LVU2545
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7422              		.loc 1 888 11 discriminator 2 view .LVU2546
 889:sieve_extend.c ****     }
 7423              		.loc 1 889 9 discriminator 2 view .LVU2547
 7424              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7425              		.loc 1 889 56 is_stmt 0 discriminator 2 view .LVU2548
 7426 2d79 C4C17D6F 		vmovdqa	ymm4, YMMWORD PTR 224[r9+rax]	# tmp1362, MEM[base: vectp.378_307, index: ivtmp.448_731, of
 7426      A401E000 
 7426      0000
 7427              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7428              		.loc 1 889 94 discriminator 2 view .LVU2549
 7429 2d83 C4C17E6F 		vmovdqu	ymm7, YMMWORD PTR 224[r8+rax]	# tmp1363, MEM[base: vectp.382_314, index: ivtmp.448_731, of
 7429      BC00E000 
 7429      0000
 7430              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7431              		.loc 1 889 56 discriminator 2 view .LVU2550
 7432 2d8d C4C15DD3 		vpsrlq	ymm6, ymm4, xmm10	# vect__38.380, tmp1362, _12
 7432      F2
 7433              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7434              		.loc 1 889 94 discriminator 2 view .LVU2551
 7435 2d92 C5C5F3DA 		vpsllq	ymm3, ymm7, xmm2	# vect__43.384, tmp1363, _18
 7436              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7437              		.loc 1 889 66 discriminator 2 view .LVU2552
 7438 2d96 C54DEBE3 		vpor	ymm12, ymm6, ymm3	# vect__46.385, vect__38.380, vect__43.384
 7439              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7440              		.loc 1 889 29 discriminator 2 view .LVU2553
 7441 2d9a C57E7FA4 		vmovdqu	YMMWORD PTR 224[rdx+rax], ymm12	# MEM[base: vectp.387_323, index: ivtmp.448_731, offset: 0
 7441      02E00000 
 7441      00
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7442              		.loc 1 888 43 is_stmt 1 discriminator 2 view .LVU2554
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7443              		.loc 1 888 11 discriminator 2 view .LVU2555
GAS LISTING /tmp/ccr2dACi.s 			page 210


 7444 2da3 48050001 		add	rax, 256	# ivtmp.448,
 7444      0000
 7445 2da9 4C39D8   		cmp	rax, r11	# ivtmp.448, _733
 7446 2dac 0F85C5FE 		jne	.L555	#,
 7446      FFFF
 7447              	.L784:
 7448 2db2 4989FE   		mov	r14, rdi	# niters_vector_mult_vf.374, niters.372
 7449 2db5 4983E6FC 		and	r14, -4	# niters_vector_mult_vf.374,
 7450 2db9 4C01F1   		add	rcx, r14	# tmp.375, niters_vector_mult_vf.374
 7451 2dbc 4C01F6   		add	rsi, r14	# tmp.376, niters_vector_mult_vf.374
 7452 2dbf 4C39F7   		cmp	rdi, r14	# niters.372, niters_vector_mult_vf.374
 7453 2dc2 7461     		je	.L558	#,
 7454              	.LVL359:
 889:sieve_extend.c ****     }
 7455              		.loc 1 889 9 view .LVU2556
 7456              	# sieve_extend.c:888:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7457              		.loc 1 888 5 is_stmt 0 view .LVU2557
 7458 2dc4 4C8B5C24 		mov	r11, QWORD PTR 64[rsp]	# aligned_copy_word, %sfp
 7458      40
 7459              	# sieve_extend.c:888:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7460              		.loc 1 888 52 view .LVU2558
 7461 2dc9 488D5601 		lea	rdx, 1[rsi]	# copy_word,
 7462              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7463              		.loc 1 889 94 view .LVU2559
 7464 2dcd C46281F7 		shlx	r9, QWORD PTR 8[rbx+rcx*8], r15	# tmp734, *_133, shift_flipped
 7464      4CCB08
 7465              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7466              		.loc 1 889 56 view .LVU2560
 7467 2dd4 C46293F7 		shrx	r8, QWORD PTR [rbx+rcx*8], r13	# tmp736, *_82, shift
 7467      04CB
 7468              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7469              		.loc 1 889 66 view .LVU2561
 7470 2dda 4D09C1   		or	r9, r8	# tmp738, tmp736
 7471              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7472              		.loc 1 889 77 view .LVU2562
 7473 2ddd 488D7901 		lea	rdi, 1[rcx]	# _301,
 7474              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7475              		.loc 1 889 66 view .LVU2563
 7476 2de1 4C890CF3 		mov	QWORD PTR [rbx+rsi*8], r9	# *_55, tmp738
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7477              		.loc 1 888 43 is_stmt 1 view .LVU2564
 7478              	.LVL360:
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7479              		.loc 1 888 11 view .LVU2565
 7480              	# sieve_extend.c:888:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7481              		.loc 1 888 5 is_stmt 0 view .LVU2566
 7482 2de5 4939D3   		cmp	r11, rdx	# aligned_copy_word, copy_word
 7483 2de8 723B     		jb	.L558	#,
 889:sieve_extend.c ****     }
GAS LISTING /tmp/ccr2dACi.s 			page 211


 7484              		.loc 1 889 9 is_stmt 1 view .LVU2567
 7485              	# sieve_extend.c:888:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7486              		.loc 1 888 52 is_stmt 0 view .LVU2568
 7487 2dea 4883C602 		add	rsi, 2	# copy_word,
 7488              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7489              		.loc 1 889 94 view .LVU2569
 7490 2dee C46281F7 		shlx	r12, QWORD PTR 8[rbx+rdi*8], r15	# tmp739, *_555, shift_flipped
 7490      64FB08
 7491              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7492              		.loc 1 889 56 view .LVU2570
 7493 2df5 488B04FB 		mov	rax, QWORD PTR [rbx+rdi*8]	# *_122, *_122
 7494              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7495              		.loc 1 889 77 view .LVU2571
 7496 2df9 4883C102 		add	rcx, 2	# _78,
 7497              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7498              		.loc 1 889 56 view .LVU2572
 7499 2dfd C46293F7 		shrx	r14, rax, r13	# tmp741, *_122, shift
 7499      F0
 7500              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7501              		.loc 1 889 66 view .LVU2573
 7502 2e02 4D09F4   		or	r12, r14	# tmp743, tmp741
 7503 2e05 4C8924D3 		mov	QWORD PTR [rbx+rdx*8], r12	# *_559, tmp743
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7504              		.loc 1 888 43 is_stmt 1 view .LVU2574
 7505              	.LVL361:
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7506              		.loc 1 888 11 view .LVU2575
 7507              	# sieve_extend.c:888:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7508              		.loc 1 888 5 is_stmt 0 view .LVU2576
 7509 2e09 4939F3   		cmp	r11, rsi	# aligned_copy_word, copy_word
 7510 2e0c 7217     		jb	.L558	#,
 889:sieve_extend.c ****     }
 7511              		.loc 1 889 9 is_stmt 1 view .LVU2577
 7512              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7513              		.loc 1 889 94 is_stmt 0 view .LVU2578
 7514 2e0e C46281F7 		shlx	r15, QWORD PTR 8[rbx+rcx*8], r15	# tmp744, *_293, shift_flipped
 7514      7CCB08
 7515              	.LVL362:
 7516              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 7517              		.loc 1 889 56 view .LVU2579
 7518 2e15 488B0CCB 		mov	rcx, QWORD PTR [rbx+rcx*8]	# *_288, *_288
 7519              	.LVL363:
 889:sieve_extend.c ****     }
 7520              		.loc 1 889 56 view .LVU2580
 7521 2e19 C46293F7 		shrx	r13, rcx, r13	# tmp746, *_288, shift
 7521      E9
 7522              	.LVL364:
 7523              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
GAS LISTING /tmp/ccr2dACi.s 			page 212


 889:sieve_extend.c ****     }
 7524              		.loc 1 889 66 view .LVU2581
 7525 2e1e 4D09EF   		or	r15, r13	# tmp748, tmp746
 7526 2e21 4C893CF3 		mov	QWORD PTR [rbx+rsi*8], r15	# *_297, tmp748
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7527              		.loc 1 888 43 is_stmt 1 view .LVU2582
 7528              	.LVL365:
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7529              		.loc 1 888 11 view .LVU2583
 7530              	.L558:
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7531              		.loc 1 888 11 is_stmt 0 view .LVU2584
 7532 2e25 4C89D0   		mov	rax, r10	# ivtmp.432, ivtmp.432
 7533              	.L551:
 892:sieve_extend.c **** 
 7534              		.loc 1 892 5 is_stmt 1 view .LVU2585
 7535              	# sieve_extend.c:892:     if (copy_word >= destination_stop_word) return;
 892:sieve_extend.c **** 
 7536              		.loc 1 892 8 is_stmt 0 view .LVU2586
 7537 2e28 4C8B4424 		mov	r8, QWORD PTR 80[rsp]	# destination_stop_word, %sfp
 7537      50
 7538 2e2d 4939C0   		cmp	r8, rax	# destination_stop_word, ivtmp.432
 7539 2e30 0F86B304 		jbe	.L806	#,
 7539      0000
 894:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 7540              		.loc 1 894 5 is_stmt 1 view .LVU2587
 7541              	# sieve_extend.c:894:     source_word = copy_word - size; // recalibrate
 894:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 7542              		.loc 1 894 17 is_stmt 0 view .LVU2588
 7543 2e36 488B7424 		mov	rsi, QWORD PTR 24[rsp]	# size, %sfp
 7543      18
 7544 2e3b 4989C5   		mov	r13, rax	# source_word, ivtmp.432
 7545              	# sieve_extend.c:898:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 898:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7546              		.loc 1 898 21 view .LVU2589
 7547 2e3e 488D0C06 		lea	rcx, [rsi+rax]	# ivtmp.432,
 7548              	# sieve_extend.c:894:     source_word = copy_word - size; // recalibrate
 894:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 7549              		.loc 1 894 17 view .LVU2590
 7550 2e42 4929F5   		sub	r13, rsi	# source_word, size
 7551              	.LVL366:
 895:sieve_extend.c **** 
 7552              		.loc 1 895 5 is_stmt 1 view .LVU2591
 7553              	# sieve_extend.c:898:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 898:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7554              		.loc 1 898 5 is_stmt 0 view .LVU2592
 7555 2e45 4939C8   		cmp	r8, rcx	# destination_stop_word, ivtmp.432
 7556              	# sieve_extend.c:895:     const size_t memsize = (size_t)size*sizeof(bitword_t);
 895:sieve_extend.c **** 
 7557              		.loc 1 895 18 view .LVU2593
 7558 2e48 4C8D34F5 		lea	r14, 0[0+rsi*8]	# memsize,
 7558      00000000 
 7559              	.LVL367:
 898:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7560              		.loc 1 898 5 is_stmt 1 view .LVU2594
 898:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7561              		.loc 1 898 11 view .LVU2595
GAS LISTING /tmp/ccr2dACi.s 			page 213


 7562              	# sieve_extend.c:898:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 898:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7563              		.loc 1 898 5 is_stmt 0 view .LVU2596
 7564 2e50 0F825F01 		jb	.L560	#,
 7564      0000
 7565 2e56 4C8D24C3 		lea	r12, [rbx+rax*8]	# tmp761,
 7566 2e5a 488D04CD 		lea	rax, 0[0+rcx*8]	# tmp762,
 7566      00000000 
 7567              	# sieve_extend.c:899:         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 899:sieve_extend.c **** 
 7568              		.loc 1 899 38 view .LVU2597
 7569 2e62 4E8D3CEB 		lea	r15, [rbx+r13*8]	# _48,
 7570 2e66 4929C4   		sub	r12, rax	# _711, tmp762
 7571 2e69 4C896C24 		mov	QWORD PTR 72[rsp], r13	# %sfp, source_word
 7571      48
 7572 2e6e 4989F5   		mov	r13, rsi	# size, size
 7573              	.LVL368:
 899:sieve_extend.c **** 
 7574              		.loc 1 899 38 view .LVU2598
 7575 2e71 48895C24 		mov	QWORD PTR 64[rsp], rbx	# %sfp, bitarray
 7575      40
 7576              	.LVL369:
 899:sieve_extend.c **** 
 7577              		.loc 1 899 38 view .LVU2599
 7578 2e76 4C89C3   		mov	rbx, r8	# destination_stop_word, destination_stop_word
 7579              	.LVL370:
 899:sieve_extend.c **** 
 7580              		.loc 1 899 38 view .LVU2600
 7581 2e79 C5F877   		vzeroupper
 7582              	.L561:
 899:sieve_extend.c **** 
 7583              		.loc 1 899 9 is_stmt 1 discriminator 2 view .LVU2601
 7584              	.LVL371:
 7585              	.LBB410:
 7586              	.LBI410:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7587              		.loc 2 31 1 discriminator 2 view .LVU2602
 7588              	.LBB411:
 7589              		.loc 2 34 3 discriminator 2 view .LVU2603
 7590              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 7591              		.loc 2 34 10 is_stmt 0 discriminator 2 view .LVU2604
 7592 2e7c 498D3CCC 		lea	rdi, [r12+rcx*8]	# tmp764,
 7593 2e80 4C89F2   		mov	rdx, r14	#, memsize
 7594 2e83 48894C24 		mov	QWORD PTR 88[rsp], rcx	# %sfp, ivtmp.432
 7594      58
 7595 2e88 4C89FE   		mov	rsi, r15	#, _48
 7596 2e8b E8000000 		call	memcpy@PLT	#
 7596      00
 7597              	.LVL372:
 7598              		.loc 2 34 10 discriminator 2 view .LVU2605
 7599              	.LBE411:
 7600              	.LBE410:
 898:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7601              		.loc 1 898 54 is_stmt 1 discriminator 2 view .LVU2606
 898:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7602              		.loc 1 898 11 discriminator 2 view .LVU2607
 7603 2e90 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.432, %sfp
GAS LISTING /tmp/ccr2dACi.s 			page 214


 7603      58
 7604 2e95 4A8D0C28 		lea	rcx, [rax+r13]	# ivtmp.432,
 7605              	# sieve_extend.c:898:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 898:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7606              		.loc 1 898 5 is_stmt 0 discriminator 2 view .LVU2608
 7607 2e99 4839CB   		cmp	rbx, rcx	# destination_stop_word, ivtmp.432
 7608 2e9c 0F82FE00 		jb	.L796	#,
 7608      0000
 899:sieve_extend.c **** 
 7609              		.loc 1 899 9 is_stmt 1 view .LVU2609
 7610              	.LVL373:
 7611              	.LBB419:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7612              		.loc 2 31 1 view .LVU2610
 7613              	.LBB412:
 7614              		.loc 2 34 3 view .LVU2611
 7615              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 7616              		.loc 2 34 10 is_stmt 0 view .LVU2612
 7617 2ea2 498D3CCC 		lea	rdi, [r12+rcx*8]	# tmp1070,
 7618 2ea6 4C89F2   		mov	rdx, r14	#, memsize
 7619 2ea9 48894C24 		mov	QWORD PTR 88[rsp], rcx	# %sfp, ivtmp.432
 7619      58
 7620              	.LVL374:
 7621              		.loc 2 34 10 view .LVU2613
 7622 2eae 4C89FE   		mov	rsi, r15	#, _48
 7623 2eb1 E8000000 		call	memcpy@PLT	#
 7623      00
 7624              	.LVL375:
 7625              		.loc 2 34 10 view .LVU2614
 7626              	.LBE412:
 7627              	.LBE419:
 898:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7628              		.loc 1 898 54 is_stmt 1 view .LVU2615
 898:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7629              		.loc 1 898 11 view .LVU2616
 7630 2eb6 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.432, %sfp
 7630      58
 7631 2ebb 4E8D0C28 		lea	r9, [rax+r13]	# ivtmp.432,
 7632              	# sieve_extend.c:898:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 898:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7633              		.loc 1 898 5 is_stmt 0 view .LVU2617
 7634 2ebf 4C39CB   		cmp	rbx, r9	# destination_stop_word, ivtmp.432
 7635 2ec2 0F82D800 		jb	.L796	#,
 7635      0000
 899:sieve_extend.c **** 
 7636              		.loc 1 899 9 is_stmt 1 view .LVU2618
 7637              	.LVL376:
 7638              	.LBB420:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7639              		.loc 2 31 1 view .LVU2619
 7640              	.LBB413:
 7641              		.loc 2 34 3 view .LVU2620
 7642              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 7643              		.loc 2 34 10 is_stmt 0 view .LVU2621
 7644 2ec8 4B8D3CCC 		lea	rdi, [r12+r9*8]	# tmp1073,
 7645 2ecc 4C89F2   		mov	rdx, r14	#, memsize
 7646 2ecf 4C894C24 		mov	QWORD PTR 88[rsp], r9	# %sfp, ivtmp.432
GAS LISTING /tmp/ccr2dACi.s 			page 215


 7646      58
 7647 2ed4 4C89FE   		mov	rsi, r15	#, _48
 7648 2ed7 E8000000 		call	memcpy@PLT	#
 7648      00
 7649              	.LVL377:
 7650              		.loc 2 34 10 view .LVU2622
 7651              	.LBE413:
 7652              	.LBE420:
 898:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7653              		.loc 1 898 54 is_stmt 1 view .LVU2623
 898:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7654              		.loc 1 898 11 view .LVU2624
 7655 2edc 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.432, %sfp
 7655      58
 7656 2ee1 4E8D1C28 		lea	r11, [rax+r13]	# ivtmp.432,
 7657              	# sieve_extend.c:898:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 898:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7658              		.loc 1 898 5 is_stmt 0 view .LVU2625
 7659 2ee5 4C39DB   		cmp	rbx, r11	# destination_stop_word, ivtmp.432
 7660 2ee8 0F82B200 		jb	.L796	#,
 7660      0000
 899:sieve_extend.c **** 
 7661              		.loc 1 899 9 is_stmt 1 view .LVU2626
 7662              	.LVL378:
 7663              	.LBB421:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7664              		.loc 2 31 1 view .LVU2627
 7665              	.LBB414:
 7666              		.loc 2 34 3 view .LVU2628
 7667              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 7668              		.loc 2 34 10 is_stmt 0 view .LVU2629
 7669 2eee 4C89F2   		mov	rdx, r14	#, memsize
 7670 2ef1 4B8D3CDC 		lea	rdi, [r12+r11*8]	# tmp1076,
 7671 2ef5 4C895C24 		mov	QWORD PTR 88[rsp], r11	# %sfp, ivtmp.432
 7671      58
 7672 2efa 4C89FE   		mov	rsi, r15	#, _48
 7673 2efd E8000000 		call	memcpy@PLT	#
 7673      00
 7674              	.LVL379:
 7675              		.loc 2 34 10 view .LVU2630
 7676              	.LBE414:
 7677              	.LBE421:
 898:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7678              		.loc 1 898 54 is_stmt 1 view .LVU2631
 898:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7679              		.loc 1 898 11 view .LVU2632
 7680 2f02 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.432, %sfp
 7680      58
 7681 2f07 4A8D1428 		lea	rdx, [rax+r13]	# ivtmp.432,
 7682              	# sieve_extend.c:898:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 898:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7683              		.loc 1 898 5 is_stmt 0 view .LVU2633
 7684 2f0b 4839D3   		cmp	rbx, rdx	# destination_stop_word, ivtmp.432
 7685 2f0e 0F828C00 		jb	.L796	#,
 7685      0000
 899:sieve_extend.c **** 
 7686              		.loc 1 899 9 is_stmt 1 view .LVU2634
GAS LISTING /tmp/ccr2dACi.s 			page 216


 7687              	.LVL380:
 7688              	.LBB422:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7689              		.loc 2 31 1 view .LVU2635
 7690              	.LBB415:
 7691              		.loc 2 34 3 view .LVU2636
 7692              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 7693              		.loc 2 34 10 is_stmt 0 view .LVU2637
 7694 2f14 498D3CD4 		lea	rdi, [r12+rdx*8]	# tmp1079,
 7695 2f18 4C89FE   		mov	rsi, r15	#, _48
 7696 2f1b 48895424 		mov	QWORD PTR 88[rsp], rdx	# %sfp, ivtmp.432
 7696      58
 7697 2f20 4C89F2   		mov	rdx, r14	#, memsize
 7698 2f23 E8000000 		call	memcpy@PLT	#
 7698      00
 7699              	.LVL381:
 7700              		.loc 2 34 10 view .LVU2638
 7701              	.LBE415:
 7702              	.LBE422:
 898:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7703              		.loc 1 898 54 is_stmt 1 view .LVU2639
 898:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7704              		.loc 1 898 11 view .LVU2640
 7705 2f28 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.432, %sfp
 7705      58
 7706 2f2d 4E8D1428 		lea	r10, [rax+r13]	# ivtmp.432,
 7707              	# sieve_extend.c:898:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 898:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7708              		.loc 1 898 5 is_stmt 0 view .LVU2641
 7709 2f31 4C39D3   		cmp	rbx, r10	# destination_stop_word, ivtmp.432
 7710 2f34 726A     		jb	.L796	#,
 899:sieve_extend.c **** 
 7711              		.loc 1 899 9 is_stmt 1 view .LVU2642
 7712              	.LVL382:
 7713              	.LBB423:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7714              		.loc 2 31 1 view .LVU2643
 7715              	.LBB416:
 7716              		.loc 2 34 3 view .LVU2644
 7717              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 7718              		.loc 2 34 10 is_stmt 0 view .LVU2645
 7719 2f36 4B8D3CD4 		lea	rdi, [r12+r10*8]	# tmp1082,
 7720 2f3a 4C89F2   		mov	rdx, r14	#, memsize
 7721 2f3d 4C895424 		mov	QWORD PTR 88[rsp], r10	# %sfp, ivtmp.432
 7721      58
 7722 2f42 4C89FE   		mov	rsi, r15	#, _48
 7723 2f45 E8000000 		call	memcpy@PLT	#
 7723      00
 7724              	.LVL383:
 7725              		.loc 2 34 10 view .LVU2646
 7726              	.LBE416:
 7727              	.LBE423:
 898:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7728              		.loc 1 898 54 is_stmt 1 view .LVU2647
 898:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7729              		.loc 1 898 11 view .LVU2648
 7730 2f4a 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.432, %sfp
GAS LISTING /tmp/ccr2dACi.s 			page 217


 7730      58
 7731 2f4f 4E8D0428 		lea	r8, [rax+r13]	# ivtmp.432,
 7732              	# sieve_extend.c:898:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 898:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7733              		.loc 1 898 5 is_stmt 0 view .LVU2649
 7734 2f53 4C39C3   		cmp	rbx, r8	# destination_stop_word, ivtmp.432
 7735 2f56 7248     		jb	.L796	#,
 899:sieve_extend.c **** 
 7736              		.loc 1 899 9 is_stmt 1 view .LVU2650
 7737              	.LVL384:
 7738              	.LBB424:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7739              		.loc 2 31 1 view .LVU2651
 7740              	.LBB417:
 7741              		.loc 2 34 3 view .LVU2652
 7742              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 7743              		.loc 2 34 10 is_stmt 0 view .LVU2653
 7744 2f58 4C89FE   		mov	rsi, r15	#, _48
 7745 2f5b 4B8D3CC4 		lea	rdi, [r12+r8*8]	# tmp1085,
 7746 2f5f 4C894424 		mov	QWORD PTR 88[rsp], r8	# %sfp, ivtmp.432
 7746      58
 7747 2f64 4C89F2   		mov	rdx, r14	#, memsize
 7748 2f67 E8000000 		call	memcpy@PLT	#
 7748      00
 7749              	.LVL385:
 7750              		.loc 2 34 10 view .LVU2654
 7751              	.LBE417:
 7752              	.LBE424:
 898:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7753              		.loc 1 898 54 is_stmt 1 view .LVU2655
 898:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7754              		.loc 1 898 11 view .LVU2656
 7755 2f6c 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.432, %sfp
 7755      58
 7756 2f71 4A8D3428 		lea	rsi, [rax+r13]	# ivtmp.432,
 7757              	# sieve_extend.c:898:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 898:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7758              		.loc 1 898 5 is_stmt 0 view .LVU2657
 7759 2f75 4839F3   		cmp	rbx, rsi	# destination_stop_word, ivtmp.432
 7760 2f78 7226     		jb	.L796	#,
 899:sieve_extend.c **** 
 7761              		.loc 1 899 9 is_stmt 1 view .LVU2658
 7762              	.LVL386:
 7763              	.LBB425:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7764              		.loc 2 31 1 view .LVU2659
 7765              	.LBB418:
 7766              		.loc 2 34 3 view .LVU2660
 7767              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 7768              		.loc 2 34 10 is_stmt 0 view .LVU2661
 7769 2f7a 498D3CF4 		lea	rdi, [r12+rsi*8]	# tmp1088,
 7770 2f7e 4C89F2   		mov	rdx, r14	#, memsize
 7771 2f81 48897424 		mov	QWORD PTR 88[rsp], rsi	# %sfp, ivtmp.432
 7771      58
 7772 2f86 4C89FE   		mov	rsi, r15	#, _48
 7773 2f89 E8000000 		call	memcpy@PLT	#
 7773      00
GAS LISTING /tmp/ccr2dACi.s 			page 218


 7774              	.LVL387:
 7775              		.loc 2 34 10 view .LVU2662
 7776              	.LBE418:
 7777              	.LBE425:
 898:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7778              		.loc 1 898 54 is_stmt 1 view .LVU2663
 898:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7779              		.loc 1 898 11 view .LVU2664
 7780 2f8e 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.432, %sfp
 7780      58
 7781              	.LVL388:
 898:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7782              		.loc 1 898 11 is_stmt 0 view .LVU2665
 7783 2f93 4A8D0C28 		lea	rcx, [rax+r13]	# ivtmp.432,
 7784              	.LVL389:
 7785              	# sieve_extend.c:898:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 898:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7786              		.loc 1 898 5 view .LVU2666
 7787 2f97 4839CB   		cmp	rbx, rcx	# destination_stop_word, ivtmp.432
 7788 2f9a 0F83DCFE 		jnb	.L561	#,
 7788      FFFF
 7789              	.LVL390:
 7790              		.p2align 4
 7791              		.p2align 3
 7792              	.L796:
 898:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7793              		.loc 1 898 5 view .LVU2667
 7794 2fa0 4C8B6C24 		mov	r13, QWORD PTR 72[rsp]	# source_word, %sfp
 7794      48
 7795              	# sieve_extend.c:902:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7796              		.loc 1 902 5 view .LVU2668
 7797 2fa5 48394424 		cmp	QWORD PTR 80[rsp], rax	# %sfp, ivtmp.432
 7797      50
 7798 2faa 488B5C24 		mov	rbx, QWORD PTR 64[rsp]	# bitarray, %sfp
 7798      40
 7799              	.LVL391:
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7800              		.loc 1 902 11 is_stmt 1 view .LVU2669
 7801              	# sieve_extend.c:902:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7802              		.loc 1 902 5 is_stmt 0 view .LVU2670
 7803 2faf 0F826E02 		jb	.L807	#,
 7803      0000
 7804              	.LVL392:
 7805              	.L560:
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7806              		.loc 1 902 5 view .LVU2671
 7807 2fb5 4C8D3CC5 		lea	r15, 0[0+rax*8]	# _195,
 7807      00000000 
 7808 2fbd 4E8D24ED 		lea	r12, 0[0+r13*8]	# _187,
 7808      00000000 
 7809 2fc5 498D7F20 		lea	rdi, 32[r15]	# tmp771,
 7810 2fc9 4E8D34ED 		lea	r14, 32[0+r13*8]	# _197,
 7810      20000000 
 7811              	.LVL393:
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
GAS LISTING /tmp/ccr2dACi.s 			page 219


 7812              		.loc 1 902 5 view .LVU2672
 7813 2fd1 4939FC   		cmp	r12, rdi	# _187, tmp771
 7814 2fd4 410F9DC1 		setge	r9b	#, tmp773
 7815 2fd8 4D39F7   		cmp	r15, r14	# _195, _197
 7816 2fdb 410F9DC3 		setge	r11b	#, tmp775
 7817 2fdf 4508D9   		or	r9b, r11b	# tmp773, tmp775
 7818 2fe2 0F845002 		je	.L563	#,
 7818      0000
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7819              		.loc 1 902 5 view .LVU2673
 7820 2fe8 488B5424 		mov	rdx, QWORD PTR 80[rsp]	# destination_stop_word, %sfp
 7820      50
 7821 2fed 4989D2   		mov	r10, rdx	# tmp777, destination_stop_word
 7822 2ff0 4929C2   		sub	r10, rax	# tmp777, ivtmp.432
 7823 2ff3 4983FA05 		cmp	r10, 5	# tmp777,
 7824 2ff7 0F863B02 		jbe	.L563	#,
 7824      0000
 7825 2ffd 4901DC   		add	r12, rbx	# vectp.357, bitarray
 7826 3000 4C8D4201 		lea	r8, 1[rdx]	# _75,
 7827 3004 49C1EC03 		shr	r12, 3	# tmp781,
 7828 3008 49F7DC   		neg	r12	# tmp782
 7829 300b 4183E403 		and	r12d, 3	# prolog_loop_niters.358,
 7830 300f 0F842B07 		je	.L572	#,
 7830      0000
 903:sieve_extend.c **** 
 7831              		.loc 1 903 9 is_stmt 1 view .LVU2674
 7832              	# sieve_extend.c:903:         bitarray[copy_word] = bitarray[source_word];
 903:sieve_extend.c **** 
 7833              		.loc 1 903 39 is_stmt 0 view .LVU2675
 7834 3015 4A8B0CEB 		mov	rcx, QWORD PTR [rbx+r13*8]	# _114, *_111
 7835 3019 4983FC01 		cmp	r12, 1	# prolog_loop_niters.358,
 7836              	# sieve_extend.c:902:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7837              		.loc 1 902 57 view .LVU2676
 7838 301d 488D7001 		lea	rsi, 1[rax]	# copy_word,
 7839              	# sieve_extend.c:902:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7840              		.loc 1 902 71 view .LVU2677
 7841 3021 4D8D7501 		lea	r14, 1[r13]	# source_word,
 7842              	# sieve_extend.c:903:         bitarray[copy_word] = bitarray[source_word];
 903:sieve_extend.c **** 
 7843              		.loc 1 903 29 view .LVU2678
 7844 3025 4A890C3B 		mov	QWORD PTR [rbx+r15], rcx	# *_113, _114
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7845              		.loc 1 902 48 is_stmt 1 view .LVU2679
 7846              	.LVL394:
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7847              		.loc 1 902 11 view .LVU2680
 7848 3029 7426     		je	.L564	#,
 903:sieve_extend.c **** 
 7849              		.loc 1 903 9 view .LVU2681
 7850              	# sieve_extend.c:903:         bitarray[copy_word] = bitarray[source_word];
 903:sieve_extend.c **** 
 7851              		.loc 1 903 39 is_stmt 0 view .LVU2682
 7852 302b 4E8B3CF3 		mov	r15, QWORD PTR [rbx+r14*8]	# _38, *_35
 7853 302f 4983FC03 		cmp	r12, 3	# prolog_loop_niters.358,
 7854              	# sieve_extend.c:902:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
GAS LISTING /tmp/ccr2dACi.s 			page 220


 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7855              		.loc 1 902 71 view .LVU2683
 7856 3033 4D8D7502 		lea	r14, 2[r13]	# source_word,
 7857              	.LVL395:
 7858              	# sieve_extend.c:903:         bitarray[copy_word] = bitarray[source_word];
 903:sieve_extend.c **** 
 7859              		.loc 1 903 29 view .LVU2684
 7860 3037 4C893CF3 		mov	QWORD PTR [rbx+rsi*8], r15	# *_37, _38
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7861              		.loc 1 902 48 is_stmt 1 view .LVU2685
 7862              	# sieve_extend.c:902:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7863              		.loc 1 902 57 is_stmt 0 view .LVU2686
 7864 303b 488D7002 		lea	rsi, 2[rax]	# copy_word,
 7865              	.LVL396:
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7866              		.loc 1 902 11 is_stmt 1 view .LVU2687
 7867 303f 7510     		jne	.L564	#,
 903:sieve_extend.c **** 
 7868              		.loc 1 903 9 view .LVU2688
 7869              	# sieve_extend.c:903:         bitarray[copy_word] = bitarray[source_word];
 903:sieve_extend.c **** 
 7870              		.loc 1 903 39 is_stmt 0 view .LVU2689
 7871 3041 4A8B3CF3 		mov	rdi, QWORD PTR [rbx+r14*8]	# _150, *_153
 7872              	# sieve_extend.c:902:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7873              		.loc 1 902 71 view .LVU2690
 7874 3045 4D8D7503 		lea	r14, 3[r13]	# source_word,
 7875              	.LVL397:
 7876              	# sieve_extend.c:903:         bitarray[copy_word] = bitarray[source_word];
 903:sieve_extend.c **** 
 7877              		.loc 1 903 29 view .LVU2691
 7878 3049 48893CF3 		mov	QWORD PTR [rbx+rsi*8], rdi	# *_151, _150
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7879              		.loc 1 902 48 is_stmt 1 view .LVU2692
 7880              	# sieve_extend.c:902:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7881              		.loc 1 902 57 is_stmt 0 view .LVU2693
 7882 304d 488D7003 		lea	rsi, 3[rax]	# copy_word,
 7883              	.LVL398:
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7884              		.loc 1 902 11 is_stmt 1 view .LVU2694
 7885              	.L564:
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7886              		.loc 1 902 11 is_stmt 0 view .LVU2695
 7887 3051 4D29E0   		sub	r8, r12	# tmp783, prolog_loop_niters.358
 7888 3054 4D01E5   		add	r13, r12	# tmp784, prolog_loop_niters.358
 7889 3057 4929C0   		sub	r8, rax	# niters.359, ivtmp.432
 7890 305a 4C01E0   		add	rax, r12	# tmp786, prolog_loop_niters.358
 7891 305d 4D89C1   		mov	r9, r8	# bnd.360, niters.359
 7892 3060 4C8D24C3 		lea	r12, [rbx+rax*8]	# vectp.368,
 7893 3064 49C1E902 		shr	r9, 2	# bnd.360,
 7894              	# sieve_extend.c:894:     source_word = copy_word - size; // recalibrate
 894:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 7895              		.loc 1 894 17 view .LVU2696
 7896 3068 31C0     		xor	eax, eax	# ivtmp.423
 7897 306a 49C1E105 		sal	r9, 5	# _704,
GAS LISTING /tmp/ccr2dACi.s 			page 221


 7898 306e 4E8D2CEB 		lea	r13, [rbx+r13*8]	# vectp.365,
 7899 3072 4D8D59E0 		lea	r11, -32[r9]	# tmp806,
 7900 3076 49C1EB05 		shr	r11, 5	# tmp804,
 7901 307a 4983C301 		add	r11, 1	# tmp807,
 7902 307e 4183E307 		and	r11d, 7	# tmp808,
 7903 3082 0F84A800 		je	.L566	#,
 7903      0000
 7904 3088 4983FB01 		cmp	r11, 1	# tmp808,
 7905 308c 0F848400 		je	.L716	#,
 7905      0000
 7906 3092 4983FB02 		cmp	r11, 2	# tmp808,
 7907 3096 746D     		je	.L717	#,
 7908 3098 4983FB03 		cmp	r11, 3	# tmp808,
 7909 309c 7456     		je	.L718	#,
 7910 309e 4983FB04 		cmp	r11, 4	# tmp808,
 7911 30a2 743F     		je	.L719	#,
 7912 30a4 4983FB05 		cmp	r11, 5	# tmp808,
 7913 30a8 7428     		je	.L720	#,
 7914 30aa 4983FB06 		cmp	r11, 6	# tmp808,
 7915 30ae 7411     		je	.L721	#,
 7916              	.LVL399:
 903:sieve_extend.c **** 
 7917              		.loc 1 903 9 is_stmt 1 view .LVU2697
 7918              	# sieve_extend.c:903:         bitarray[copy_word] = bitarray[source_word];
 903:sieve_extend.c **** 
 7919              		.loc 1 903 29 is_stmt 0 view .LVU2698
 7920 30b0 C4417D6F 		vmovdqa	ymm10, YMMWORD PTR 0[r13]	# tmp1397, MEM[base: vectp.365_189, index: ivtmp.423_702, offset
 7920      5500
 7921 30b6 B8200000 		mov	eax, 32	# ivtmp.423,
 7921      00
 7922 30bb C4417E7F 		vmovdqu	YMMWORD PTR [r12], ymm10	# MEM[base: vectp.368_207, index: ivtmp.423_702, offset: 0B], tmp
 7922      1424
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7923              		.loc 1 902 48 is_stmt 1 view .LVU2699
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7924              		.loc 1 902 11 view .LVU2700
 7925              	.L721:
 903:sieve_extend.c **** 
 7926              		.loc 1 903 9 view .LVU2701
 7927              	# sieve_extend.c:903:         bitarray[copy_word] = bitarray[source_word];
 903:sieve_extend.c **** 
 7928              		.loc 1 903 29 is_stmt 0 view .LVU2702
 7929 30c1 C4C17D6F 		vmovdqa	ymm2, YMMWORD PTR 0[r13+rax]	# tmp1398, MEM[base: vectp.365_189, index: ivtmp.423_702, off
 7929      540500
 7930 30c8 C4C17E7F 		vmovdqu	YMMWORD PTR [r12+rax], ymm2	# MEM[base: vectp.368_207, index: ivtmp.423_702, offset: 0B], 
 7930      1404
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7931              		.loc 1 902 48 is_stmt 1 view .LVU2703
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7932              		.loc 1 902 11 view .LVU2704
 7933 30ce 4883C020 		add	rax, 32	# ivtmp.423,
 7934              	.L720:
 903:sieve_extend.c **** 
 7935              		.loc 1 903 9 view .LVU2705
 7936              	# sieve_extend.c:903:         bitarray[copy_word] = bitarray[source_word];
 903:sieve_extend.c **** 
 7937              		.loc 1 903 29 is_stmt 0 view .LVU2706
GAS LISTING /tmp/ccr2dACi.s 			page 222


 7938 30d2 C4417D6F 		vmovdqa	ymm13, YMMWORD PTR 0[r13+rax]	# tmp1399, MEM[base: vectp.365_189, index: ivtmp.423_702, of
 7938      6C0500
 7939 30d9 C4417E7F 		vmovdqu	YMMWORD PTR [r12+rax], ymm13	# MEM[base: vectp.368_207, index: ivtmp.423_702, offset: 0B],
 7939      2C04
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7940              		.loc 1 902 48 is_stmt 1 view .LVU2707
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7941              		.loc 1 902 11 view .LVU2708
 7942 30df 4883C020 		add	rax, 32	# ivtmp.423,
 7943              	.L719:
 903:sieve_extend.c **** 
 7944              		.loc 1 903 9 view .LVU2709
 7945              	# sieve_extend.c:903:         bitarray[copy_word] = bitarray[source_word];
 903:sieve_extend.c **** 
 7946              		.loc 1 903 29 is_stmt 0 view .LVU2710
 7947 30e3 C4417D6F 		vmovdqa	ymm14, YMMWORD PTR 0[r13+rax]	# tmp1400, MEM[base: vectp.365_189, index: ivtmp.423_702, of
 7947      740500
 7948 30ea C4417E7F 		vmovdqu	YMMWORD PTR [r12+rax], ymm14	# MEM[base: vectp.368_207, index: ivtmp.423_702, offset: 0B],
 7948      3404
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7949              		.loc 1 902 48 is_stmt 1 view .LVU2711
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7950              		.loc 1 902 11 view .LVU2712
 7951 30f0 4883C020 		add	rax, 32	# ivtmp.423,
 7952              	.L718:
 903:sieve_extend.c **** 
 7953              		.loc 1 903 9 view .LVU2713
 7954              	# sieve_extend.c:903:         bitarray[copy_word] = bitarray[source_word];
 903:sieve_extend.c **** 
 7955              		.loc 1 903 29 is_stmt 0 view .LVU2714
 7956 30f4 C4417D6F 		vmovdqa	ymm15, YMMWORD PTR 0[r13+rax]	# tmp1401, MEM[base: vectp.365_189, index: ivtmp.423_702, of
 7956      7C0500
 7957 30fb C4417E7F 		vmovdqu	YMMWORD PTR [r12+rax], ymm15	# MEM[base: vectp.368_207, index: ivtmp.423_702, offset: 0B],
 7957      3C04
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7958              		.loc 1 902 48 is_stmt 1 view .LVU2715
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7959              		.loc 1 902 11 view .LVU2716
 7960 3101 4883C020 		add	rax, 32	# ivtmp.423,
 7961              	.L717:
 903:sieve_extend.c **** 
 7962              		.loc 1 903 9 view .LVU2717
 7963              	# sieve_extend.c:903:         bitarray[copy_word] = bitarray[source_word];
 903:sieve_extend.c **** 
 7964              		.loc 1 903 29 is_stmt 0 view .LVU2718
 7965 3105 C4C17D6F 		vmovdqa	ymm1, YMMWORD PTR 0[r13+rax]	# tmp1402, MEM[base: vectp.365_189, index: ivtmp.423_702, off
 7965      4C0500
 7966 310c C4C17E7F 		vmovdqu	YMMWORD PTR [r12+rax], ymm1	# MEM[base: vectp.368_207, index: ivtmp.423_702, offset: 0B], 
 7966      0C04
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7967              		.loc 1 902 48 is_stmt 1 view .LVU2719
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7968              		.loc 1 902 11 view .LVU2720
 7969 3112 4883C020 		add	rax, 32	# ivtmp.423,
 7970              	.L716:
 903:sieve_extend.c **** 
 7971              		.loc 1 903 9 view .LVU2721
GAS LISTING /tmp/ccr2dACi.s 			page 223


 7972              	# sieve_extend.c:903:         bitarray[copy_word] = bitarray[source_word];
 903:sieve_extend.c **** 
 7973              		.loc 1 903 29 is_stmt 0 view .LVU2722
 7974 3116 C4417D6F 		vmovdqa	ymm8, YMMWORD PTR 0[r13+rax]	# tmp1403, MEM[base: vectp.365_189, index: ivtmp.423_702, off
 7974      440500
 7975 311d C4417E7F 		vmovdqu	YMMWORD PTR [r12+rax], ymm8	# MEM[base: vectp.368_207, index: ivtmp.423_702, offset: 0B], 
 7975      0404
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7976              		.loc 1 902 48 is_stmt 1 view .LVU2723
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7977              		.loc 1 902 11 view .LVU2724
 7978 3123 4883C020 		add	rax, 32	# ivtmp.423,
 7979 3127 4C39C8   		cmp	rax, r9	# ivtmp.423, _704
 7980 312a 0F849600 		je	.L781	#,
 7980      0000
 7981              	.L566:
 903:sieve_extend.c **** 
 7982              		.loc 1 903 9 discriminator 2 view .LVU2725
 7983              	# sieve_extend.c:903:         bitarray[copy_word] = bitarray[source_word];
 903:sieve_extend.c **** 
 7984              		.loc 1 903 29 is_stmt 0 discriminator 2 view .LVU2726
 7985 3130 C4C17D6F 		vmovdqa	ymm0, YMMWORD PTR 0[r13+rax]	# tmp1384, MEM[base: vectp.365_189, index: ivtmp.423_702, off
 7985      440500
 7986 3137 C4C17E7F 		vmovdqu	YMMWORD PTR [r12+rax], ymm0	# MEM[base: vectp.368_207, index: ivtmp.423_702, offset: 0B], 
 7986      0404
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7987              		.loc 1 902 48 is_stmt 1 discriminator 2 view .LVU2727
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7988              		.loc 1 902 11 discriminator 2 view .LVU2728
 903:sieve_extend.c **** 
 7989              		.loc 1 903 9 discriminator 2 view .LVU2729
 7990              	# sieve_extend.c:903:         bitarray[copy_word] = bitarray[source_word];
 903:sieve_extend.c **** 
 7991              		.loc 1 903 29 is_stmt 0 discriminator 2 view .LVU2730
 7992 313d C4C17D6F 		vmovdqa	ymm5, YMMWORD PTR 32[r13+rax]	# tmp1385, MEM[base: vectp.365_189, index: ivtmp.423_702, of
 7992      6C0520
 7993 3144 C4C17E7F 		vmovdqu	YMMWORD PTR 32[r12+rax], ymm5	# MEM[base: vectp.368_207, index: ivtmp.423_702, offset: 0B]
 7993      6C0420
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7994              		.loc 1 902 48 is_stmt 1 discriminator 2 view .LVU2731
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7995              		.loc 1 902 11 discriminator 2 view .LVU2732
 903:sieve_extend.c **** 
 7996              		.loc 1 903 9 discriminator 2 view .LVU2733
 7997              	# sieve_extend.c:903:         bitarray[copy_word] = bitarray[source_word];
 903:sieve_extend.c **** 
 7998              		.loc 1 903 29 is_stmt 0 discriminator 2 view .LVU2734
 7999 314b C4417D6F 		vmovdqa	ymm9, YMMWORD PTR 64[r13+rax]	# tmp1386, MEM[base: vectp.365_189, index: ivtmp.423_702, of
 7999      4C0540
 8000 3152 C4417E7F 		vmovdqu	YMMWORD PTR 64[r12+rax], ymm9	# MEM[base: vectp.368_207, index: ivtmp.423_702, offset: 0B]
 8000      4C0440
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8001              		.loc 1 902 48 is_stmt 1 discriminator 2 view .LVU2735
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8002              		.loc 1 902 11 discriminator 2 view .LVU2736
 903:sieve_extend.c **** 
 8003              		.loc 1 903 9 discriminator 2 view .LVU2737
GAS LISTING /tmp/ccr2dACi.s 			page 224


 8004              	# sieve_extend.c:903:         bitarray[copy_word] = bitarray[source_word];
 903:sieve_extend.c **** 
 8005              		.loc 1 903 29 is_stmt 0 discriminator 2 view .LVU2738
 8006 3159 C4417D6F 		vmovdqa	ymm11, YMMWORD PTR 96[r13+rax]	# tmp1387, MEM[base: vectp.365_189, index: ivtmp.423_702, o
 8006      5C0560
 8007 3160 C4417E7F 		vmovdqu	YMMWORD PTR 96[r12+rax], ymm11	# MEM[base: vectp.368_207, index: ivtmp.423_702, offset: 0B
 8007      5C0460
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8008              		.loc 1 902 48 is_stmt 1 discriminator 2 view .LVU2739
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8009              		.loc 1 902 11 discriminator 2 view .LVU2740
 903:sieve_extend.c **** 
 8010              		.loc 1 903 9 discriminator 2 view .LVU2741
 8011              	# sieve_extend.c:903:         bitarray[copy_word] = bitarray[source_word];
 903:sieve_extend.c **** 
 8012              		.loc 1 903 29 is_stmt 0 discriminator 2 view .LVU2742
 8013 3167 C4C17D6F 		vmovdqa	ymm4, YMMWORD PTR 128[r13+rax]	# tmp1388, MEM[base: vectp.365_189, index: ivtmp.423_702, o
 8013      A4058000 
 8013      0000
 8014 3171 C4C17E7F 		vmovdqu	YMMWORD PTR 128[r12+rax], ymm4	# MEM[base: vectp.368_207, index: ivtmp.423_702, offset: 0B
 8014      A4048000 
 8014      0000
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8015              		.loc 1 902 48 is_stmt 1 discriminator 2 view .LVU2743
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8016              		.loc 1 902 11 discriminator 2 view .LVU2744
 903:sieve_extend.c **** 
 8017              		.loc 1 903 9 discriminator 2 view .LVU2745
 8018              	# sieve_extend.c:903:         bitarray[copy_word] = bitarray[source_word];
 903:sieve_extend.c **** 
 8019              		.loc 1 903 29 is_stmt 0 discriminator 2 view .LVU2746
 8020 317b C4C17D6F 		vmovdqa	ymm6, YMMWORD PTR 160[r13+rax]	# tmp1389, MEM[base: vectp.365_189, index: ivtmp.423_702, o
 8020      B405A000 
 8020      0000
 8021 3185 C4C17E7F 		vmovdqu	YMMWORD PTR 160[r12+rax], ymm6	# MEM[base: vectp.368_207, index: ivtmp.423_702, offset: 0B
 8021      B404A000 
 8021      0000
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8022              		.loc 1 902 48 is_stmt 1 discriminator 2 view .LVU2747
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8023              		.loc 1 902 11 discriminator 2 view .LVU2748
 903:sieve_extend.c **** 
 8024              		.loc 1 903 9 discriminator 2 view .LVU2749
 8025              	# sieve_extend.c:903:         bitarray[copy_word] = bitarray[source_word];
 903:sieve_extend.c **** 
 8026              		.loc 1 903 29 is_stmt 0 discriminator 2 view .LVU2750
 8027 318f C4C17D6F 		vmovdqa	ymm7, YMMWORD PTR 192[r13+rax]	# tmp1390, MEM[base: vectp.365_189, index: ivtmp.423_702, o
 8027      BC05C000 
 8027      0000
 8028 3199 C4C17E7F 		vmovdqu	YMMWORD PTR 192[r12+rax], ymm7	# MEM[base: vectp.368_207, index: ivtmp.423_702, offset: 0B
 8028      BC04C000 
 8028      0000
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8029              		.loc 1 902 48 is_stmt 1 discriminator 2 view .LVU2751
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8030              		.loc 1 902 11 discriminator 2 view .LVU2752
 903:sieve_extend.c **** 
GAS LISTING /tmp/ccr2dACi.s 			page 225


 8031              		.loc 1 903 9 discriminator 2 view .LVU2753
 8032              	# sieve_extend.c:903:         bitarray[copy_word] = bitarray[source_word];
 903:sieve_extend.c **** 
 8033              		.loc 1 903 29 is_stmt 0 discriminator 2 view .LVU2754
 8034 31a3 C4C17D6F 		vmovdqa	ymm3, YMMWORD PTR 224[r13+rax]	# tmp1391, MEM[base: vectp.365_189, index: ivtmp.423_702, o
 8034      9C05E000 
 8034      0000
 8035 31ad C4C17E7F 		vmovdqu	YMMWORD PTR 224[r12+rax], ymm3	# MEM[base: vectp.368_207, index: ivtmp.423_702, offset: 0B
 8035      9C04E000 
 8035      0000
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8036              		.loc 1 902 48 is_stmt 1 discriminator 2 view .LVU2755
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8037              		.loc 1 902 11 discriminator 2 view .LVU2756
 8038 31b7 48050001 		add	rax, 256	# ivtmp.423,
 8038      0000
 8039 31bd 4C39C8   		cmp	rax, r9	# ivtmp.423, _704
 8040 31c0 0F856AFF 		jne	.L566	#,
 8040      FFFF
 8041              	.L781:
 8042 31c6 4C89C2   		mov	rdx, r8	# niters_vector_mult_vf.361, niters.359
 8043 31c9 4883E2FC 		and	rdx, -4	# niters_vector_mult_vf.361,
 8044 31cd 4901D6   		add	r14, rdx	# tmp.362, niters_vector_mult_vf.361
 8045 31d0 4801D6   		add	rsi, rdx	# tmp.363, niters_vector_mult_vf.361
 8046 31d3 4C39C2   		cmp	rdx, r8	# niters_vector_mult_vf.361, niters.359
 8047 31d6 0F840D01 		je	.L806	#,
 8047      0000
 8048              	.LVL400:
 903:sieve_extend.c **** 
 8049              		.loc 1 903 9 view .LVU2757
 8050              	# sieve_extend.c:902:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8051              		.loc 1 902 5 is_stmt 0 view .LVU2758
 8052 31dc 4C8B7C24 		mov	r15, QWORD PTR 80[rsp]	# destination_stop_word, %sfp
 8052      50
 8053              	# sieve_extend.c:902:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8054              		.loc 1 902 57 view .LVU2759
 8055 31e1 4C8D4601 		lea	r8, 1[rsi]	# copy_word,
 8056              	# sieve_extend.c:903:         bitarray[copy_word] = bitarray[source_word];
 903:sieve_extend.c **** 
 8057              		.loc 1 903 39 view .LVU2760
 8058 31e5 4E8B14F3 		mov	r10, QWORD PTR [rbx+r14*8]	# _90, *_141
 8059              	# sieve_extend.c:902:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8060              		.loc 1 902 71 view .LVU2761
 8061 31e9 4983C601 		add	r14, 1	# source_word,
 8062              	.LVL401:
 8063              	# sieve_extend.c:902:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8064              		.loc 1 902 5 view .LVU2762
 8065 31ed 4D39C7   		cmp	r15, r8	# destination_stop_word, copy_word
 8066              	# sieve_extend.c:903:         bitarray[copy_word] = bitarray[source_word];
 903:sieve_extend.c **** 
 8067              		.loc 1 903 29 view .LVU2763
 8068 31f0 4C8914F3 		mov	QWORD PTR [rbx+rsi*8], r10	# *_489, _90
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
GAS LISTING /tmp/ccr2dACi.s 			page 226


 8069              		.loc 1 902 48 is_stmt 1 view .LVU2764
 8070              	.LVL402:
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8071              		.loc 1 902 11 view .LVU2765
 8072              	# sieve_extend.c:902:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8073              		.loc 1 902 5 is_stmt 0 view .LVU2766
 8074 31f4 0F82EF00 		jb	.L806	#,
 8074      0000
 903:sieve_extend.c **** 
 8075              		.loc 1 903 9 is_stmt 1 view .LVU2767
 8076              	# sieve_extend.c:903:         bitarray[copy_word] = bitarray[source_word];
 903:sieve_extend.c **** 
 8077              		.loc 1 903 39 is_stmt 0 view .LVU2768
 8078 31fa 4A8D0CF5 		lea	rcx, 0[0+r14*8]	# _96,
 8078      00000000 
 8079              	# sieve_extend.c:902:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8080              		.loc 1 902 57 view .LVU2769
 8081 3202 4883C602 		add	rsi, 2	# copy_word,
 8082              	# sieve_extend.c:903:         bitarray[copy_word] = bitarray[source_word];
 903:sieve_extend.c **** 
 8083              		.loc 1 903 39 view .LVU2770
 8084 3206 4E8B34F3 		mov	r14, QWORD PTR [rbx+r14*8]	# _103, *_98
 8085              	# sieve_extend.c:902:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8086              		.loc 1 902 5 view .LVU2771
 8087 320a 4939F7   		cmp	r15, rsi	# destination_stop_word, copy_word
 8088              	# sieve_extend.c:903:         bitarray[copy_word] = bitarray[source_word];
 903:sieve_extend.c **** 
 8089              		.loc 1 903 29 view .LVU2772
 8090 320d 4E8934C3 		mov	QWORD PTR [rbx+r8*8], r14	# *_102, _103
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8091              		.loc 1 902 48 is_stmt 1 view .LVU2773
 8092              	.LVL403:
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8093              		.loc 1 902 11 view .LVU2774
 8094              	# sieve_extend.c:902:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8095              		.loc 1 902 5 is_stmt 0 view .LVU2775
 8096 3211 0F82D200 		jb	.L806	#,
 8096      0000
 903:sieve_extend.c **** 
 8097              		.loc 1 903 9 is_stmt 1 view .LVU2776
 8098              	# sieve_extend.c:903:         bitarray[copy_word] = bitarray[source_word];
 903:sieve_extend.c **** 
 8099              		.loc 1 903 39 is_stmt 0 view .LVU2777
 8100 3217 488B7C0B 		mov	rdi, QWORD PTR 8[rbx+rcx]	# _34, *_83
 8100      08
 8101              	# sieve_extend.c:903:         bitarray[copy_word] = bitarray[source_word];
 903:sieve_extend.c **** 
 8102              		.loc 1 903 29 view .LVU2778
 8103 321c 48893CF3 		mov	QWORD PTR [rbx+rsi*8], rdi	# *_72, _34
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8104              		.loc 1 902 48 is_stmt 1 view .LVU2779
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8105              		.loc 1 902 11 view .LVU2780
GAS LISTING /tmp/ccr2dACi.s 			page 227


 8106 3220 C5F877   		vzeroupper
 8107              	.L807:
 8108              	# sieve_extend.c:906:  }
 906:sieve_extend.c **** 
 8109              		.loc 1 906 2 is_stmt 0 view .LVU2781
 8110 3223 488D65D8 		lea	rsp, -40[rbp]	#,
 8111              	.LVL404:
 906:sieve_extend.c **** 
 8112              		.loc 1 906 2 view .LVU2782
 8113 3227 5B       		pop	rbx	#
 8114 3228 415C     		pop	r12	#
 8115 322a 415D     		pop	r13	#
 8116 322c 415E     		pop	r14	#
 8117 322e 415F     		pop	r15	#
 8118 3230 5D       		pop	rbp	#
 8119              		.cfi_remember_state
 8120              		.cfi_def_cfa 7, 8
 8121              	.LVL405:
 906:sieve_extend.c **** 
 8122              		.loc 1 906 2 view .LVU2783
 8123 3231 C3       		ret	
 8124              	.LVL406:
 8125              		.p2align 4,,7
 8126 3232 660F1F44 		.p2align 3
 8126      0000
 8127              	.L563:
 8128              		.cfi_restore_state
 906:sieve_extend.c **** 
 8129              		.loc 1 906 2 view .LVU2784
 8130 3238 488B7424 		mov	rsi, QWORD PTR 80[rsp]	# destination_stop_word, %sfp
 8130      50
 8131 323d 4E8D243B 		lea	r12, [rbx+r15]	# ivtmp.418,
 8132              	# sieve_extend.c:903:         bitarray[copy_word] = bitarray[source_word];
 903:sieve_extend.c **** 
 8133              		.loc 1 903 39 view .LVU2785
 8134 3241 4929C5   		sub	r13, rax	# tmp791, ivtmp.432
 8135              	.LVL407:
 903:sieve_extend.c **** 
 8136              		.loc 1 903 39 view .LVU2786
 8137 3244 488D5CF3 		lea	rbx, 8[rbx+rsi*8]	# _701,
 8137      08
 8138 3249 4989D9   		mov	r9, rbx	# tmp799, _701
 8139 324c 4D29E1   		sub	r9, r12	# tmp799, ivtmp.418
 8140 324f 4983E908 		sub	r9, 8	# tmp800,
 8141 3253 49C1E903 		shr	r9, 3	# tmp798,
 8142 3257 4983C101 		add	r9, 1	# tmp801,
 8143 325b 4183E107 		and	r9d, 7	# tmp802,
 8144 325f 0F849B00 		je	.L569	#,
 8144      0000
 8145 3265 4983F901 		cmp	r9, 1	# tmp802,
 8146 3269 746C     		je	.L722	#,
 8147 326b 4983F902 		cmp	r9, 2	# tmp802,
 8148 326f 7459     		je	.L723	#,
 8149 3271 4983F903 		cmp	r9, 3	# tmp802,
 8150 3275 7446     		je	.L724	#,
 8151 3277 4983F904 		cmp	r9, 4	# tmp802,
 8152 327b 7433     		je	.L725	#,
GAS LISTING /tmp/ccr2dACi.s 			page 228


 8153 327d 4983F905 		cmp	r9, 5	# tmp802,
 8154 3281 7420     		je	.L726	#,
 8155 3283 4983F906 		cmp	r9, 6	# tmp802,
 8156 3287 740D     		je	.L727	#,
 903:sieve_extend.c **** 
 8157              		.loc 1 903 9 is_stmt 1 view .LVU2787
 8158              	# sieve_extend.c:903:         bitarray[copy_word] = bitarray[source_word];
 903:sieve_extend.c **** 
 8159              		.loc 1 903 39 is_stmt 0 view .LVU2788
 8160 3289 4F8B1CEC 		mov	r11, QWORD PTR [r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 8161 328d 4983C408 		add	r12, 8	# ivtmp.418,
 8162              	# sieve_extend.c:903:         bitarray[copy_word] = bitarray[source_word];
 903:sieve_extend.c **** 
 8163              		.loc 1 903 29 view .LVU2789
 8164 3291 4D895C24 		mov	QWORD PTR -8[r12], r11	# MEM[base: _604, offset: 0B], _170
 8164      F8
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8165              		.loc 1 902 48 is_stmt 1 view .LVU2790
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8166              		.loc 1 902 11 view .LVU2791
 8167              	.L727:
 903:sieve_extend.c **** 
 8168              		.loc 1 903 9 view .LVU2792
 8169              	# sieve_extend.c:903:         bitarray[copy_word] = bitarray[source_word];
 903:sieve_extend.c **** 
 8170              		.loc 1 903 39 is_stmt 0 view .LVU2793
 8171 3296 4B8B04EC 		mov	rax, QWORD PTR [r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 8172 329a 4983C408 		add	r12, 8	# ivtmp.418,
 8173              	# sieve_extend.c:903:         bitarray[copy_word] = bitarray[source_word];
 903:sieve_extend.c **** 
 8174              		.loc 1 903 29 view .LVU2794
 8175 329e 49894424 		mov	QWORD PTR -8[r12], rax	# MEM[base: _604, offset: 0B], _170
 8175      F8
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8176              		.loc 1 902 48 is_stmt 1 view .LVU2795
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8177              		.loc 1 902 11 view .LVU2796
 8178              	.L726:
 903:sieve_extend.c **** 
 8179              		.loc 1 903 9 view .LVU2797
 8180              	# sieve_extend.c:903:         bitarray[copy_word] = bitarray[source_word];
 903:sieve_extend.c **** 
 8181              		.loc 1 903 39 is_stmt 0 view .LVU2798
 8182 32a3 4B8B14EC 		mov	rdx, QWORD PTR [r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 8183 32a7 4983C408 		add	r12, 8	# ivtmp.418,
 8184              	# sieve_extend.c:903:         bitarray[copy_word] = bitarray[source_word];
 903:sieve_extend.c **** 
 8185              		.loc 1 903 29 view .LVU2799
 8186 32ab 49895424 		mov	QWORD PTR -8[r12], rdx	# MEM[base: _604, offset: 0B], _170
 8186      F8
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8187              		.loc 1 902 48 is_stmt 1 view .LVU2800
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8188              		.loc 1 902 11 view .LVU2801
 8189              	.L725:
 903:sieve_extend.c **** 
 8190              		.loc 1 903 9 view .LVU2802
GAS LISTING /tmp/ccr2dACi.s 			page 229


 8191              	# sieve_extend.c:903:         bitarray[copy_word] = bitarray[source_word];
 903:sieve_extend.c **** 
 8192              		.loc 1 903 39 is_stmt 0 view .LVU2803
 8193 32b0 4F8B14EC 		mov	r10, QWORD PTR [r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 8194 32b4 4983C408 		add	r12, 8	# ivtmp.418,
 8195              	# sieve_extend.c:903:         bitarray[copy_word] = bitarray[source_word];
 903:sieve_extend.c **** 
 8196              		.loc 1 903 29 view .LVU2804
 8197 32b8 4D895424 		mov	QWORD PTR -8[r12], r10	# MEM[base: _604, offset: 0B], _170
 8197      F8
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8198              		.loc 1 902 48 is_stmt 1 view .LVU2805
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8199              		.loc 1 902 11 view .LVU2806
 8200              	.L724:
 903:sieve_extend.c **** 
 8201              		.loc 1 903 9 view .LVU2807
 8202              	# sieve_extend.c:903:         bitarray[copy_word] = bitarray[source_word];
 903:sieve_extend.c **** 
 8203              		.loc 1 903 39 is_stmt 0 view .LVU2808
 8204 32bd 4F8B04EC 		mov	r8, QWORD PTR [r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 8205 32c1 4983C408 		add	r12, 8	# ivtmp.418,
 8206              	# sieve_extend.c:903:         bitarray[copy_word] = bitarray[source_word];
 903:sieve_extend.c **** 
 8207              		.loc 1 903 29 view .LVU2809
 8208 32c5 4D894424 		mov	QWORD PTR -8[r12], r8	# MEM[base: _604, offset: 0B], _170
 8208      F8
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8209              		.loc 1 902 48 is_stmt 1 view .LVU2810
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8210              		.loc 1 902 11 view .LVU2811
 8211              	.L723:
 903:sieve_extend.c **** 
 8212              		.loc 1 903 9 view .LVU2812
 8213              	# sieve_extend.c:903:         bitarray[copy_word] = bitarray[source_word];
 903:sieve_extend.c **** 
 8214              		.loc 1 903 39 is_stmt 0 view .LVU2813
 8215 32ca 4F8B3CEC 		mov	r15, QWORD PTR [r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 8216 32ce 4983C408 		add	r12, 8	# ivtmp.418,
 8217              	# sieve_extend.c:903:         bitarray[copy_word] = bitarray[source_word];
 903:sieve_extend.c **** 
 8218              		.loc 1 903 29 view .LVU2814
 8219 32d2 4D897C24 		mov	QWORD PTR -8[r12], r15	# MEM[base: _604, offset: 0B], _170
 8219      F8
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8220              		.loc 1 902 48 is_stmt 1 view .LVU2815
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8221              		.loc 1 902 11 view .LVU2816
 8222              	.L722:
 903:sieve_extend.c **** 
 8223              		.loc 1 903 9 view .LVU2817
 8224              	# sieve_extend.c:903:         bitarray[copy_word] = bitarray[source_word];
 903:sieve_extend.c **** 
 8225              		.loc 1 903 39 is_stmt 0 view .LVU2818
 8226 32d7 4B8B0CEC 		mov	rcx, QWORD PTR [r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 8227 32db 4983C408 		add	r12, 8	# ivtmp.418,
 8228              	# sieve_extend.c:903:         bitarray[copy_word] = bitarray[source_word];
GAS LISTING /tmp/ccr2dACi.s 			page 230


 903:sieve_extend.c **** 
 8229              		.loc 1 903 29 view .LVU2819
 8230 32df 49894C24 		mov	QWORD PTR -8[r12], rcx	# MEM[base: _604, offset: 0B], _170
 8230      F8
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8231              		.loc 1 902 48 is_stmt 1 view .LVU2820
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8232              		.loc 1 902 11 view .LVU2821
 8233              	# sieve_extend.c:902:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8234              		.loc 1 902 5 is_stmt 0 view .LVU2822
 8235 32e4 4939DC   		cmp	r12, rbx	# ivtmp.418, _701
 8236 32e7 7517     		jne	.L569	#,
 8237              	.LVL408:
 8238              	.L806:
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8239              		.loc 1 902 5 view .LVU2823
 8240 32e9 C5F877   		vzeroupper
 8241              	# sieve_extend.c:906:  }
 906:sieve_extend.c **** 
 8242              		.loc 1 906 2 view .LVU2824
 8243 32ec 488D65D8 		lea	rsp, -40[rbp]	#,
 8244              	.LVL409:
 906:sieve_extend.c **** 
 8245              		.loc 1 906 2 view .LVU2825
 8246 32f0 5B       		pop	rbx	#
 8247 32f1 415C     		pop	r12	#
 8248 32f3 415D     		pop	r13	#
 8249 32f5 415E     		pop	r14	#
 8250 32f7 415F     		pop	r15	#
 8251 32f9 5D       		pop	rbp	#
 8252              		.cfi_remember_state
 8253              		.cfi_def_cfa 7, 8
 8254              	.LVL410:
 906:sieve_extend.c **** 
 8255              		.loc 1 906 2 view .LVU2826
 8256 32fa C3       		ret	
 8257              	.LVL411:
 8258 32fb 0F1F4400 		.p2align 4,,7
 8258      00
 8259              		.p2align 3
 8260              	.L569:
 8261              		.cfi_restore_state
 903:sieve_extend.c **** 
 8262              		.loc 1 903 9 is_stmt 1 view .LVU2827
 8263              	# sieve_extend.c:903:         bitarray[copy_word] = bitarray[source_word];
 903:sieve_extend.c **** 
 8264              		.loc 1 903 39 is_stmt 0 view .LVU2828
 8265 3300 4F8B34EC 		mov	r14, QWORD PTR [r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 8266              	# sieve_extend.c:903:         bitarray[copy_word] = bitarray[source_word];
 903:sieve_extend.c **** 
 8267              		.loc 1 903 29 view .LVU2829
 8268 3304 4D893424 		mov	QWORD PTR [r12], r14	# MEM[base: _604, offset: 0B], _170
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8269              		.loc 1 902 48 is_stmt 1 view .LVU2830
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8270              		.loc 1 902 11 view .LVU2831
GAS LISTING /tmp/ccr2dACi.s 			page 231


 903:sieve_extend.c **** 
 8271              		.loc 1 903 9 view .LVU2832
 8272              	# sieve_extend.c:903:         bitarray[copy_word] = bitarray[source_word];
 903:sieve_extend.c **** 
 8273              		.loc 1 903 39 is_stmt 0 view .LVU2833
 8274 3308 4B8B7CEC 		mov	rdi, QWORD PTR 8[r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 8274      08
 8275              	# sieve_extend.c:903:         bitarray[copy_word] = bitarray[source_word];
 903:sieve_extend.c **** 
 8276              		.loc 1 903 29 view .LVU2834
 8277 330d 49897C24 		mov	QWORD PTR 8[r12], rdi	# MEM[base: _604, offset: 0B], _170
 8277      08
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8278              		.loc 1 902 48 is_stmt 1 view .LVU2835
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8279              		.loc 1 902 11 view .LVU2836
 903:sieve_extend.c **** 
 8280              		.loc 1 903 9 view .LVU2837
 8281              	# sieve_extend.c:903:         bitarray[copy_word] = bitarray[source_word];
 903:sieve_extend.c **** 
 8282              		.loc 1 903 39 is_stmt 0 view .LVU2838
 8283 3312 4B8B74EC 		mov	rsi, QWORD PTR 16[r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 8283      10
 8284              	# sieve_extend.c:903:         bitarray[copy_word] = bitarray[source_word];
 903:sieve_extend.c **** 
 8285              		.loc 1 903 29 view .LVU2839
 8286 3317 49897424 		mov	QWORD PTR 16[r12], rsi	# MEM[base: _604, offset: 0B], _170
 8286      10
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8287              		.loc 1 902 48 is_stmt 1 view .LVU2840
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8288              		.loc 1 902 11 view .LVU2841
 903:sieve_extend.c **** 
 8289              		.loc 1 903 9 view .LVU2842
 8290              	# sieve_extend.c:903:         bitarray[copy_word] = bitarray[source_word];
 903:sieve_extend.c **** 
 8291              		.loc 1 903 39 is_stmt 0 view .LVU2843
 8292 331c 4F8B4CEC 		mov	r9, QWORD PTR 24[r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 8292      18
 8293              	# sieve_extend.c:903:         bitarray[copy_word] = bitarray[source_word];
 903:sieve_extend.c **** 
 8294              		.loc 1 903 29 view .LVU2844
 8295 3321 4D894C24 		mov	QWORD PTR 24[r12], r9	# MEM[base: _604, offset: 0B], _170
 8295      18
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8296              		.loc 1 902 48 is_stmt 1 view .LVU2845
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8297              		.loc 1 902 11 view .LVU2846
 903:sieve_extend.c **** 
 8298              		.loc 1 903 9 view .LVU2847
 8299              	# sieve_extend.c:903:         bitarray[copy_word] = bitarray[source_word];
 903:sieve_extend.c **** 
 8300              		.loc 1 903 39 is_stmt 0 view .LVU2848
 8301 3326 4F8B5CEC 		mov	r11, QWORD PTR 32[r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 8301      20
 8302              	# sieve_extend.c:903:         bitarray[copy_word] = bitarray[source_word];
 903:sieve_extend.c **** 
GAS LISTING /tmp/ccr2dACi.s 			page 232


 8303              		.loc 1 903 29 view .LVU2849
 8304 332b 4D895C24 		mov	QWORD PTR 32[r12], r11	# MEM[base: _604, offset: 0B], _170
 8304      20
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8305              		.loc 1 902 48 is_stmt 1 view .LVU2850
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8306              		.loc 1 902 11 view .LVU2851
 903:sieve_extend.c **** 
 8307              		.loc 1 903 9 view .LVU2852
 8308              	# sieve_extend.c:903:         bitarray[copy_word] = bitarray[source_word];
 903:sieve_extend.c **** 
 8309              		.loc 1 903 39 is_stmt 0 view .LVU2853
 8310 3330 4B8B44EC 		mov	rax, QWORD PTR 40[r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 8310      28
 8311              	# sieve_extend.c:903:         bitarray[copy_word] = bitarray[source_word];
 903:sieve_extend.c **** 
 8312              		.loc 1 903 29 view .LVU2854
 8313 3335 49894424 		mov	QWORD PTR 40[r12], rax	# MEM[base: _604, offset: 0B], _170
 8313      28
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8314              		.loc 1 902 48 is_stmt 1 view .LVU2855
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8315              		.loc 1 902 11 view .LVU2856
 903:sieve_extend.c **** 
 8316              		.loc 1 903 9 view .LVU2857
 8317              	# sieve_extend.c:903:         bitarray[copy_word] = bitarray[source_word];
 903:sieve_extend.c **** 
 8318              		.loc 1 903 39 is_stmt 0 view .LVU2858
 8319 333a 4B8B54EC 		mov	rdx, QWORD PTR 48[r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 8319      30
 8320              	# sieve_extend.c:903:         bitarray[copy_word] = bitarray[source_word];
 903:sieve_extend.c **** 
 8321              		.loc 1 903 29 view .LVU2859
 8322 333f 49895424 		mov	QWORD PTR 48[r12], rdx	# MEM[base: _604, offset: 0B], _170
 8322      30
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8323              		.loc 1 902 48 is_stmt 1 view .LVU2860
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8324              		.loc 1 902 11 view .LVU2861
 903:sieve_extend.c **** 
 8325              		.loc 1 903 9 view .LVU2862
 8326              	# sieve_extend.c:903:         bitarray[copy_word] = bitarray[source_word];
 903:sieve_extend.c **** 
 8327              		.loc 1 903 39 is_stmt 0 view .LVU2863
 8328 3344 4F8B54EC 		mov	r10, QWORD PTR 56[r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 8328      38
 8329 3349 4983C440 		add	r12, 64	# ivtmp.418,
 8330              	# sieve_extend.c:903:         bitarray[copy_word] = bitarray[source_word];
 903:sieve_extend.c **** 
 8331              		.loc 1 903 29 view .LVU2864
 8332 334d 4D895424 		mov	QWORD PTR -8[r12], r10	# MEM[base: _604, offset: 0B], _170
 8332      F8
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8333              		.loc 1 902 48 is_stmt 1 view .LVU2865
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8334              		.loc 1 902 11 view .LVU2866
 8335              	# sieve_extend.c:902:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
GAS LISTING /tmp/ccr2dACi.s 			page 233


 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8336              		.loc 1 902 5 is_stmt 0 view .LVU2867
 8337 3352 4939DC   		cmp	r12, rbx	# ivtmp.418, _701
 8338 3355 75A9     		jne	.L569	#,
 8339 3357 EB90     		jmp	.L806	#
 8340              	.LVL412:
 8341 3359 0F1F8000 		.p2align 4,,7
 8341      000000
 8342              		.p2align 3
 8343              	.L546:
 902:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8344              		.loc 1 902 5 view .LVU2868
 8345 3360 4C8B7424 		mov	r14, QWORD PTR 48[rsp]	# fast_loop_stop_word, %sfp
 8345      30
 8346 3365 4989C1   		mov	r9, rax	# tmp823, ivtmp.432
 8347 3368 49F7D1   		not	r9	# tmp823
 8348 336b 4801D9   		add	rcx, rbx	# ivtmp.463, bitarray
 8349              	.LBB426:
 8350              	.LBB407:
 8351              	.LBB396:
 8352              	# sieve_extend.c:727:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8353              		.loc 1 727 63 view .LVU2869
 8354 336e 4489FE   		mov	esi, r15d	# tmp1324, _18
 8355              	# sieve_extend.c:727:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8356              		.loc 1 727 42 view .LVU2870
 8357 3371 C4E29BF7 		shrx	rdx, QWORD PTR [rcx], r12	# tmp681, MEM[base: _743, offset: 0B], _12
 8357      11
 8358 3376 4D01F1   		add	r9, r14	# tmp824, fast_loop_stop_word
 8359              	# sieve_extend.c:727:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8360              		.loc 1 727 63 view .LVU2871
 8361 3379 4589FA   		mov	r10d, r15d	# _18, shift_flipped
 8362              	# sieve_extend.c:726:         bitword_t source1 = bitarray[source_word+1];
 726:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8363              		.loc 1 726 19 view .LVU2872
 8364 337c 4C8B4108 		mov	r8, QWORD PTR 8[rcx]	# source1, MEM[base: _743, offset: 8B]
 8365              	# sieve_extend.c:727:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8366              		.loc 1 727 63 view .LVU2873
 8367 3380 C4C2C9F7 		shlx	rdi, r8, rsi	# tmp683, source1, tmp1324
 8367      F8
 8368 3385 49D1E9   		shr	r9	# tmp822
 8369              	# sieve_extend.c:727:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8370              		.loc 1 727 52 view .LVU2874
 8371 3388 4809FA   		or	rdx, rdi	# tmp684, tmp683
 8372              	# sieve_extend.c:730:         copy_word += 2;
 730:sieve_extend.c ****         source_word += 2;
 8373              		.loc 1 730 19 view .LVU2875
 8374 338b 488D7802 		lea	rdi, 2[rax]	# copy_word,
 8375 338f 49F7D3   		not	r11	# tmp794
 8376              	.LVL413:
 8377              	# sieve_extend.c:727:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8378              		.loc 1 727 52 view .LVU2876
GAS LISTING /tmp/ccr2dACi.s 			page 234


 8379 3392 488914C3 		mov	QWORD PTR [rbx+rax*8], rdx	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 
 8380 3396 4183E103 		and	r9d, 3	# tmp825,
 8381              	.LVL414:
 725:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 8382              		.loc 1 725 9 is_stmt 1 view .LVU2877
 726:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8383              		.loc 1 726 9 view .LVU2878
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8384              		.loc 1 727 9 view .LVU2879
 728:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 8385              		.loc 1 728 9 view .LVU2880
 729:sieve_extend.c ****         copy_word += 2;
 8386              		.loc 1 729 9 view .LVU2881
 8387              	# sieve_extend.c:729:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 729:sieve_extend.c ****         copy_word += 2;
 8388              		.loc 1 729 42 is_stmt 0 view .LVU2882
 8389 339a C4429BF7 		shrx	r8, r8, r12	# tmp687, source1, _12
 8389      C0
 8390              	# sieve_extend.c:729:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 729:sieve_extend.c ****         copy_word += 2;
 8391              		.loc 1 729 63 view .LVU2883
 8392 339f C4E2A9F7 		shlx	rdx, QWORD PTR 16[rcx], r10	# tmp685, MEM[base: _743, offset: 16B], tmp1325
 8392      5110
 8393              	# sieve_extend.c:729:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 729:sieve_extend.c ****         copy_word += 2;
 8394              		.loc 1 729 52 view .LVU2884
 8395 33a5 4909D0   		or	r8, rdx	# tmp688, tmp685
 8396              	.LBE396:
 8397              	# sieve_extend.c:724:     while (copy_word < fast_loop_stop_word) {
 724:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8398              		.loc 1 724 11 view .LVU2885
 8399 33a8 4939FE   		cmp	r14, rdi	# fast_loop_stop_word, copy_word
 8400 33ab 4D8D143B 		lea	r10, [r11+rdi]	# distance,
 8401 33af 488D5110 		lea	rdx, 16[rcx]	# ivtmp.463,
 8402              	.LBB397:
 8403              	# sieve_extend.c:729:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 729:sieve_extend.c ****         copy_word += 2;
 8404              		.loc 1 729 52 view .LVU2886
 8405 33b3 4C8944C3 		mov	QWORD PTR 8[rbx+rax*8], r8	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 
 8405      08
 8406              	.LVL415:
 730:sieve_extend.c ****         source_word += 2;
 8407              		.loc 1 730 9 is_stmt 1 view .LVU2887
 731:sieve_extend.c ****         distance += 2;
 8408              		.loc 1 731 9 view .LVU2888
 732:sieve_extend.c ****     }
 8409              		.loc 1 732 9 view .LVU2889
 732:sieve_extend.c ****     }
 8410              		.loc 1 732 9 is_stmt 0 view .LVU2890
 8411              	.LBE397:
 724:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8412              		.loc 1 724 11 is_stmt 1 view .LVU2891
 8413 33b8 0F8644F6 		jbe	.L550	#,
 8413      FFFF
 8414 33be 4D85C9   		test	r9, r9	# tmp825
 8415 33c1 0F848B00 		je	.L800	#,
 8415      0000
GAS LISTING /tmp/ccr2dACi.s 			page 235


 8416 33c7 4983F901 		cmp	r9, 1	# tmp825,
 8417 33cb 7440     		je	.L734	#,
 8418 33cd 4983F902 		cmp	r9, 2	# tmp825,
 8419 33d1 0F857403 		jne	.L809	#,
 8419      0000
 8420              	.LVL416:
 8421              	.L735:
 8422              	.LBB398:
 725:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 8423              		.loc 1 725 9 view .LVU2892
 726:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8424              		.loc 1 726 9 view .LVU2893
 8425              	# sieve_extend.c:726:         bitword_t source1 = bitarray[source_word+1];
 726:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8426              		.loc 1 726 19 is_stmt 0 view .LVU2894
 8427 33d7 488B7208 		mov	rsi, QWORD PTR 8[rdx]	# source1, MEM[base: _743, offset: 8B]
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8428              		.loc 1 727 9 is_stmt 1 view .LVU2895
 8429              	# sieve_extend.c:727:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8430              		.loc 1 727 42 is_stmt 0 view .LVU2896
 8431 33db C4E29BF7 		shrx	rcx, QWORD PTR [rdx], r12	# tmp1171, MEM[base: _743, offset: 0B], _12
 8431      0A
 8432              	.LVL417:
 8433              	# sieve_extend.c:727:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8434              		.loc 1 727 63 view .LVU2897
 8435 33e0 4589F8   		mov	r8d, r15d	# tmp1427, _18
 8436 33e3 C462B9F7 		shlx	r10, rsi, r8	# tmp1172, source1, tmp1427
 8436      D6
 8437              	# sieve_extend.c:727:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8438              		.loc 1 727 52 view .LVU2898
 8439 33e8 4C09D1   		or	rcx, r10	# tmp1173, tmp1172
 8440              	# sieve_extend.c:727:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8441              		.loc 1 727 63 view .LVU2899
 8442 33eb 4589FE   		mov	r14d, r15d	# _18, shift_flipped
 8443              	# sieve_extend.c:729:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 729:sieve_extend.c ****         copy_word += 2;
 8444              		.loc 1 729 42 view .LVU2900
 8445 33ee C4E29BF7 		shrx	rsi, rsi, r12	# tmp1176, source1, _12
 8445      F6
 8446              	# sieve_extend.c:727:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8447              		.loc 1 727 52 view .LVU2901
 8448 33f3 48890CFB 		mov	QWORD PTR [rbx+rdi*8], rcx	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 
 8449              	.LVL418:
 728:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 8450              		.loc 1 728 9 is_stmt 1 view .LVU2902
 729:sieve_extend.c ****         copy_word += 2;
 8451              		.loc 1 729 9 view .LVU2903
 8452              	# sieve_extend.c:729:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 729:sieve_extend.c ****         copy_word += 2;
 8453              		.loc 1 729 63 is_stmt 0 view .LVU2904
 8454 33f7 C46289F7 		shlx	r9, QWORD PTR 16[rdx], r14	# tmp1175, MEM[base: _743, offset: 16B], tmp1428
 8454      4A10
GAS LISTING /tmp/ccr2dACi.s 			page 236


 8455              	# sieve_extend.c:729:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 729:sieve_extend.c ****         copy_word += 2;
 8456              		.loc 1 729 52 view .LVU2905
 8457 33fd 4C09CE   		or	rsi, r9	# tmp1177, tmp1175
 8458 3400 488974FB 		mov	QWORD PTR 8[rbx+rdi*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset:
 8458      08
 8459              	.LVL419:
 730:sieve_extend.c ****         source_word += 2;
 8460              		.loc 1 730 9 is_stmt 1 view .LVU2906
 8461 3405 4883C210 		add	rdx, 16	# ivtmp.463,
 8462              	# sieve_extend.c:730:         copy_word += 2;
 730:sieve_extend.c ****         source_word += 2;
 8463              		.loc 1 730 19 is_stmt 0 view .LVU2907
 8464 3409 4883C702 		add	rdi, 2	# copy_word,
 731:sieve_extend.c ****         distance += 2;
 8465              		.loc 1 731 9 is_stmt 1 view .LVU2908
 732:sieve_extend.c ****     }
 8466              		.loc 1 732 9 view .LVU2909
 732:sieve_extend.c ****     }
 8467              		.loc 1 732 9 is_stmt 0 view .LVU2910
 8468              	.LBE398:
 724:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8469              		.loc 1 724 11 is_stmt 1 view .LVU2911
 8470              	.LVL420:
 8471              	.L734:
 8472              	.LBB399:
 725:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 8473              		.loc 1 725 9 view .LVU2912
 726:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8474              		.loc 1 726 9 view .LVU2913
 8475              	# sieve_extend.c:726:         bitword_t source1 = bitarray[source_word+1];
 726:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8476              		.loc 1 726 19 is_stmt 0 view .LVU2914
 8477 340d 4C8B4A08 		mov	r9, QWORD PTR 8[rdx]	# source1, MEM[base: _743, offset: 8B]
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8478              		.loc 1 727 9 is_stmt 1 view .LVU2915
 8479              	# sieve_extend.c:727:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8480              		.loc 1 727 42 is_stmt 0 view .LVU2916
 8481 3411 C4E29BF7 		shrx	rcx, QWORD PTR [rdx], r12	# tmp1181, MEM[base: _743, offset: 0B], _12
 8481      0A
 8482              	# sieve_extend.c:727:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8483              		.loc 1 727 63 view .LVU2917
 8484 3416 4589F8   		mov	r8d, r15d	# tmp1429, _18
 8485 3419 C442B9F7 		shlx	r10, r9, r8	# tmp1182, source1, tmp1429
 8485      D1
 8486              	# sieve_extend.c:727:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8487              		.loc 1 727 52 view .LVU2918
 8488 341e 4C09D1   		or	rcx, r10	# tmp1183, tmp1182
 8489              	# sieve_extend.c:727:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8490              		.loc 1 727 63 view .LVU2919
 8491 3421 4589FE   		mov	r14d, r15d	# _18, shift_flipped
 8492              	# sieve_extend.c:729:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 729:sieve_extend.c ****         copy_word += 2;
GAS LISTING /tmp/ccr2dACi.s 			page 237


 8493              		.loc 1 729 42 view .LVU2920
 8494 3424 C4C29BF7 		shrx	rsi, r9, r12	# tmp1186, source1, _12
 8494      F1
 8495              	# sieve_extend.c:727:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8496              		.loc 1 727 52 view .LVU2921
 8497 3429 48890CFB 		mov	QWORD PTR [rbx+rdi*8], rcx	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 
 8498              	.LVL421:
 728:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 8499              		.loc 1 728 9 is_stmt 1 view .LVU2922
 729:sieve_extend.c ****         copy_word += 2;
 8500              		.loc 1 729 9 view .LVU2923
 8501              	# sieve_extend.c:729:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 729:sieve_extend.c ****         copy_word += 2;
 8502              		.loc 1 729 63 is_stmt 0 view .LVU2924
 8503 342d C4E289F7 		shlx	rcx, QWORD PTR 16[rdx], r14	# tmp1185, MEM[base: _743, offset: 16B], tmp1430
 8503      4A10
 8504              	# sieve_extend.c:729:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 729:sieve_extend.c ****         copy_word += 2;
 8505              		.loc 1 729 52 view .LVU2925
 8506 3433 4809CE   		or	rsi, rcx	# tmp1187, tmp1185
 8507 3436 488974FB 		mov	QWORD PTR 8[rbx+rdi*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset:
 8507      08
 8508              	.LVL422:
 730:sieve_extend.c ****         source_word += 2;
 8509              		.loc 1 730 9 is_stmt 1 view .LVU2926
 8510              	# sieve_extend.c:730:         copy_word += 2;
 730:sieve_extend.c ****         source_word += 2;
 8511              		.loc 1 730 19 is_stmt 0 view .LVU2927
 8512 343b 4883C702 		add	rdi, 2	# copy_word,
 731:sieve_extend.c ****         distance += 2;
 8513              		.loc 1 731 9 is_stmt 1 view .LVU2928
 732:sieve_extend.c ****     }
 8514              		.loc 1 732 9 view .LVU2929
 8515 343f 4883C210 		add	rdx, 16	# ivtmp.463,
 8516              	.LBE399:
 8517              	# sieve_extend.c:724:     while (copy_word < fast_loop_stop_word) {
 724:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8518              		.loc 1 724 11 is_stmt 0 view .LVU2930
 8519 3443 48397C24 		cmp	QWORD PTR 48[rsp], rdi	# %sfp, copy_word
 8519      30
 8520 3448 4D8D143B 		lea	r10, [r11+rdi]	# distance,
 724:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8521              		.loc 1 724 11 is_stmt 1 view .LVU2931
 8522 344c 0F86B0F5 		jbe	.L550	#,
 8522      FFFF
 8523              	.LVL423:
 8524              	.L800:
 724:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8525              		.loc 1 724 11 is_stmt 0 view .LVU2932
 8526 3452 4489F9   		mov	ecx, r15d	# _18, shift_flipped
 8527              	.L549:
 8528              	.LVL424:
 8529              	.LBB400:
 725:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 8530              		.loc 1 725 9 is_stmt 1 view .LVU2933
 726:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
GAS LISTING /tmp/ccr2dACi.s 			page 238


 8531              		.loc 1 726 9 view .LVU2934
 8532              	# sieve_extend.c:726:         bitword_t source1 = bitarray[source_word+1];
 726:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8533              		.loc 1 726 19 is_stmt 0 view .LVU2935
 8534 3455 4C8B4A08 		mov	r9, QWORD PTR 8[rdx]	# source1, MEM[base: _743, offset: 8B]
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8535              		.loc 1 727 9 is_stmt 1 view .LVU2936
 8536              	# sieve_extend.c:727:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8537              		.loc 1 727 42 is_stmt 0 view .LVU2937
 8538 3459 C4629BF7 		shrx	r8, QWORD PTR [rdx], r12	# tmp897, MEM[base: _743, offset: 0B], _12
 8538      02
 8539              	# sieve_extend.c:727:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8540              		.loc 1 727 63 view .LVU2938
 8541 345e C442F1F7 		shlx	r14, r9, rcx	# tmp898, source1, _18
 8541      F1
 8542              	# sieve_extend.c:727:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8543              		.loc 1 727 52 view .LVU2939
 8544 3463 4D09F0   		or	r8, r14	# tmp899, tmp898
 8545              	# sieve_extend.c:729:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 729:sieve_extend.c ****         copy_word += 2;
 8546              		.loc 1 729 42 view .LVU2940
 8547 3466 C4429BF7 		shrx	r10, r9, r12	# tmp902, source1, _12
 8547      D1
 8548              	# sieve_extend.c:727:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8549              		.loc 1 727 52 view .LVU2941
 8550 346b 4C8904FB 		mov	QWORD PTR [rbx+rdi*8], r8	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 0
 8551              	.LVL425:
 728:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 8552              		.loc 1 728 9 is_stmt 1 view .LVU2942
 729:sieve_extend.c ****         copy_word += 2;
 8553              		.loc 1 729 9 view .LVU2943
 8554              	# sieve_extend.c:729:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 729:sieve_extend.c ****         copy_word += 2;
 8555              		.loc 1 729 63 is_stmt 0 view .LVU2944
 8556 346f C4E2F1F7 		shlx	rsi, QWORD PTR 16[rdx], rcx	# tmp901, MEM[base: _743, offset: 16B], _18
 8556      7210
 8557              	# sieve_extend.c:729:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 729:sieve_extend.c ****         copy_word += 2;
 8558              		.loc 1 729 52 view .LVU2945
 8559 3475 4C09D6   		or	rsi, r10	# tmp903, tmp902
 8560 3478 488974FB 		mov	QWORD PTR 8[rbx+rdi*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset:
 8560      08
 8561              	.LVL426:
 730:sieve_extend.c ****         source_word += 2;
 8562              		.loc 1 730 9 is_stmt 1 view .LVU2946
 8563              	# sieve_extend.c:730:         copy_word += 2;
 730:sieve_extend.c ****         source_word += 2;
 8564              		.loc 1 730 19 is_stmt 0 view .LVU2947
 8565 347d 4C8D4F02 		lea	r9, 2[rdi]	# tmp826,
 731:sieve_extend.c ****         distance += 2;
 8566              		.loc 1 731 9 is_stmt 1 view .LVU2948
 732:sieve_extend.c ****     }
 8567              		.loc 1 732 9 view .LVU2949
GAS LISTING /tmp/ccr2dACi.s 			page 239


 732:sieve_extend.c ****     }
 8568              		.loc 1 732 9 is_stmt 0 view .LVU2950
 8569              	.LBE400:
 724:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8570              		.loc 1 724 11 is_stmt 1 view .LVU2951
 8571              	.LBB401:
 725:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 8572              		.loc 1 725 9 view .LVU2952
 8573              	.LVL427:
 726:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8574              		.loc 1 726 9 view .LVU2953
 8575              	# sieve_extend.c:726:         bitword_t source1 = bitarray[source_word+1];
 726:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8576              		.loc 1 726 19 is_stmt 0 view .LVU2954
 8577 3481 4C8B4218 		mov	r8, QWORD PTR 24[rdx]	# source1, MEM[base: _743, offset: 8B]
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8578              		.loc 1 727 9 is_stmt 1 view .LVU2955
 8579              	# sieve_extend.c:727:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8580              		.loc 1 727 42 is_stmt 0 view .LVU2956
 8581 3485 C4E29BF7 		shrx	rsi, QWORD PTR 16[rdx], r12	# tmp909, MEM[base: _743, offset: 0B], _12
 8581      7210
 8582              	# sieve_extend.c:727:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8583              		.loc 1 727 63 view .LVU2957
 8584 348b C442F1F7 		shlx	r14, r8, rcx	# tmp910, source1, _18
 8584      F0
 8585              	# sieve_extend.c:727:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8586              		.loc 1 727 52 view .LVU2958
 8587 3490 4C09F6   		or	rsi, r14	# tmp911, tmp910
 8588 3493 4A8934CB 		mov	QWORD PTR [rbx+r9*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 0
 8589              	.LVL428:
 728:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 8590              		.loc 1 728 9 is_stmt 1 view .LVU2959
 729:sieve_extend.c ****         copy_word += 2;
 8591              		.loc 1 729 9 view .LVU2960
 8592              	# sieve_extend.c:729:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 729:sieve_extend.c ****         copy_word += 2;
 8593              		.loc 1 729 42 is_stmt 0 view .LVU2961
 8594 3497 C4429BF7 		shrx	r8, r8, r12	# tmp914, source1, _12
 8594      C0
 8595              	# sieve_extend.c:729:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 729:sieve_extend.c ****         copy_word += 2;
 8596              		.loc 1 729 63 view .LVU2962
 8597 349c 4C8B5220 		mov	r10, QWORD PTR 32[rdx]	# MEM[base: _743, offset: 16B], MEM[base: _743, offset: 16B]
 8598 34a0 C4C2F1F7 		shlx	rsi, r10, rcx	# tmp913, MEM[base: _743, offset: 16B], _18
 8598      F2
 8599              	# sieve_extend.c:729:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 729:sieve_extend.c ****         copy_word += 2;
 8600              		.loc 1 729 52 view .LVU2963
 8601 34a5 4909F0   		or	r8, rsi	# tmp915, tmp913
 8602 34a8 4883C240 		add	rdx, 64	# ivtmp.463,
 8603 34ac 4E8944CB 		mov	QWORD PTR 8[rbx+r9*8], r8	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 8
 8603      08
 8604              	.LVL429:
 730:sieve_extend.c ****         source_word += 2;
GAS LISTING /tmp/ccr2dACi.s 			page 240


 8605              		.loc 1 730 9 is_stmt 1 view .LVU2964
 8606              	# sieve_extend.c:730:         copy_word += 2;
 730:sieve_extend.c ****         source_word += 2;
 8607              		.loc 1 730 19 is_stmt 0 view .LVU2965
 8608 34b1 4C8D4F04 		lea	r9, 4[rdi]	# copy_word,
 731:sieve_extend.c ****         distance += 2;
 8609              		.loc 1 731 9 is_stmt 1 view .LVU2966
 732:sieve_extend.c ****     }
 8610              		.loc 1 732 9 view .LVU2967
 732:sieve_extend.c ****     }
 8611              		.loc 1 732 9 is_stmt 0 view .LVU2968
 8612              	.LBE401:
 724:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8613              		.loc 1 724 11 is_stmt 1 view .LVU2969
 8614              	.LBB402:
 725:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 8615              		.loc 1 725 9 view .LVU2970
 8616              	.LVL430:
 726:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8617              		.loc 1 726 9 view .LVU2971
 8618              	# sieve_extend.c:726:         bitword_t source1 = bitarray[source_word+1];
 726:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8619              		.loc 1 726 19 is_stmt 0 view .LVU2972
 8620 34b5 4C8B52E8 		mov	r10, QWORD PTR -24[rdx]	# source1, MEM[base: _743, offset: 8B]
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8621              		.loc 1 727 9 is_stmt 1 view .LVU2973
 8622              	# sieve_extend.c:727:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8623              		.loc 1 727 42 is_stmt 0 view .LVU2974
 8624 34b9 C4E29BF7 		shrx	rsi, QWORD PTR -32[rdx], r12	# tmp921, MEM[base: _743, offset: 0B], _12
 8624      72E0
 8625              	# sieve_extend.c:727:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8626              		.loc 1 727 63 view .LVU2975
 8627 34bf C442F1F7 		shlx	r14, r10, rcx	# tmp922, source1, _18
 8627      F2
 8628              	# sieve_extend.c:727:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8629              		.loc 1 727 52 view .LVU2976
 8630 34c4 4C09F6   		or	rsi, r14	# tmp923, tmp922
 8631 34c7 4A8934CB 		mov	QWORD PTR [rbx+r9*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 0
 8632              	.LVL431:
 728:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 8633              		.loc 1 728 9 is_stmt 1 view .LVU2977
 729:sieve_extend.c ****         copy_word += 2;
 8634              		.loc 1 729 9 view .LVU2978
 8635              	# sieve_extend.c:729:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 729:sieve_extend.c ****         copy_word += 2;
 8636              		.loc 1 729 42 is_stmt 0 view .LVU2979
 8637 34cb C4429BF7 		shrx	r10, r10, r12	# tmp926, source1, _12
 8637      D2
 8638              	# sieve_extend.c:729:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 729:sieve_extend.c ****         copy_word += 2;
 8639              		.loc 1 729 63 view .LVU2980
 8640 34d0 4C8B42F0 		mov	r8, QWORD PTR -16[rdx]	# MEM[base: _743, offset: 16B], MEM[base: _743, offset: 16B]
 8641 34d4 C4C2F1F7 		shlx	rsi, r8, rcx	# tmp925, MEM[base: _743, offset: 16B], _18
 8641      F0
GAS LISTING /tmp/ccr2dACi.s 			page 241


 8642              	# sieve_extend.c:729:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 729:sieve_extend.c ****         copy_word += 2;
 8643              		.loc 1 729 52 view .LVU2981
 8644 34d9 4909F2   		or	r10, rsi	# tmp927, tmp925
 8645 34dc 4E8954CB 		mov	QWORD PTR 8[rbx+r9*8], r10	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 
 8645      08
 8646              	.LVL432:
 730:sieve_extend.c ****         source_word += 2;
 8647              		.loc 1 730 9 is_stmt 1 view .LVU2982
 8648              	# sieve_extend.c:730:         copy_word += 2;
 730:sieve_extend.c ****         source_word += 2;
 8649              		.loc 1 730 19 is_stmt 0 view .LVU2983
 8650 34e1 4C8D4F06 		lea	r9, 6[rdi]	# copy_word,
 731:sieve_extend.c ****         distance += 2;
 8651              		.loc 1 731 9 is_stmt 1 view .LVU2984
 732:sieve_extend.c ****     }
 8652              		.loc 1 732 9 view .LVU2985
 732:sieve_extend.c ****     }
 8653              		.loc 1 732 9 is_stmt 0 view .LVU2986
 8654              	.LBE402:
 724:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8655              		.loc 1 724 11 is_stmt 1 view .LVU2987
 8656              	.LBB403:
 725:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 8657              		.loc 1 725 9 view .LVU2988
 8658              	.LVL433:
 726:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8659              		.loc 1 726 9 view .LVU2989
 8660              	# sieve_extend.c:726:         bitword_t source1 = bitarray[source_word+1];
 726:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8661              		.loc 1 726 19 is_stmt 0 view .LVU2990
 8662 34e5 4C8B42F8 		mov	r8, QWORD PTR -8[rdx]	# source1, MEM[base: _743, offset: 8B]
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8663              		.loc 1 727 9 is_stmt 1 view .LVU2991
 8664              	# sieve_extend.c:727:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8665              		.loc 1 727 42 is_stmt 0 view .LVU2992
 8666 34e9 C4E29BF7 		shrx	rsi, QWORD PTR -16[rdx], r12	# tmp933, MEM[base: _743, offset: 0B], _12
 8666      72F0
 8667              	# sieve_extend.c:727:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8668              		.loc 1 727 63 view .LVU2993
 8669 34ef C442F1F7 		shlx	r14, r8, rcx	# tmp934, source1, _18
 8669      F0
 8670              	# sieve_extend.c:727:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8671              		.loc 1 727 52 view .LVU2994
 8672 34f4 4C09F6   		or	rsi, r14	# tmp935, tmp934
 8673 34f7 4A8934CB 		mov	QWORD PTR [rbx+r9*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 0
 8674              	.LVL434:
 728:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 8675              		.loc 1 728 9 is_stmt 1 view .LVU2995
 729:sieve_extend.c ****         copy_word += 2;
 8676              		.loc 1 729 9 view .LVU2996
 8677              	# sieve_extend.c:730:         copy_word += 2;
 730:sieve_extend.c ****         source_word += 2;
 8678              		.loc 1 730 19 is_stmt 0 view .LVU2997
GAS LISTING /tmp/ccr2dACi.s 			page 242


 8679 34fb 4883C708 		add	rdi, 8	# copy_word,
 8680              	# sieve_extend.c:729:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 729:sieve_extend.c ****         copy_word += 2;
 8681              		.loc 1 729 42 view .LVU2998
 8682 34ff C4429BF7 		shrx	r8, r8, r12	# tmp938, source1, _12
 8682      C0
 8683              	# sieve_extend.c:729:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 729:sieve_extend.c ****         copy_word += 2;
 8684              		.loc 1 729 63 view .LVU2999
 8685 3504 4C8B12   		mov	r10, QWORD PTR [rdx]	# MEM[base: _743, offset: 16B], MEM[base: _743, offset: 16B]
 8686 3507 C4C2F1F7 		shlx	rsi, r10, rcx	# tmp937, MEM[base: _743, offset: 16B], _18
 8686      F2
 8687              	# sieve_extend.c:729:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 729:sieve_extend.c ****         copy_word += 2;
 8688              		.loc 1 729 52 view .LVU3000
 8689 350c 4909F0   		or	r8, rsi	# tmp939, tmp937
 8690              	.LBE403:
 8691              	# sieve_extend.c:724:     while (copy_word < fast_loop_stop_word) {
 724:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8692              		.loc 1 724 11 view .LVU3001
 8693 350f 48397C24 		cmp	QWORD PTR 48[rsp], rdi	# %sfp, copy_word
 8693      30
 8694 3514 4D8D143B 		lea	r10, [r11+rdi]	# distance,
 8695              	.LBB404:
 8696              	# sieve_extend.c:729:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 729:sieve_extend.c ****         copy_word += 2;
 8697              		.loc 1 729 52 view .LVU3002
 8698 3518 4E8944CB 		mov	QWORD PTR 8[rbx+r9*8], r8	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 8
 8698      08
 8699              	.LVL435:
 730:sieve_extend.c ****         source_word += 2;
 8700              		.loc 1 730 9 is_stmt 1 view .LVU3003
 731:sieve_extend.c ****         distance += 2;
 8701              		.loc 1 731 9 view .LVU3004
 732:sieve_extend.c ****     }
 8702              		.loc 1 732 9 view .LVU3005
 732:sieve_extend.c ****     }
 8703              		.loc 1 732 9 is_stmt 0 view .LVU3006
 8704              	.LBE404:
 724:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8705              		.loc 1 724 11 is_stmt 1 view .LVU3007
 8706 351d 0F8732FF 		ja	.L549	#,
 8706      FFFF
 8707 3523 E9DAF4FF 		jmp	.L550	#
 8707      FF
 8708              	.LVL436:
 8709              		.p2align 4,,7
 8710              		.p2align 3
 8711              	.L571:
 724:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8712              		.loc 1 724 11 is_stmt 0 view .LVU3008
 8713              	.LBE407:
 8714              	.LBE426:
 8715              	# sieve_extend.c:888:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8716              		.loc 1 888 5 view .LVU3009
 8717 3528 4889C6   		mov	rsi, rax	# copy_word, ivtmp.432
GAS LISTING /tmp/ccr2dACi.s 			page 243


 8718              	# sieve_extend.c:882:     source_word += distance;
 882:sieve_extend.c ****     copy_word += distance;
 8719              		.loc 1 882 17 view .LVU3010
 8720 352b 4C89D9   		mov	rcx, r11	# source_word, _183
 8721 352e 4D8D4301 		lea	r8, 1[r11]	# tmp793,
 8722 3532 E9CDF5FF 		jmp	.L553	#
 8722      FF
 8723              		.p2align 4,,7
 8724 3537 90       		.p2align 3
 8725              	.L552:
 882:sieve_extend.c ****     copy_word += distance;
 8726              		.loc 1 882 17 view .LVU3011
 8727 3538 488B7C24 		mov	rdi, QWORD PTR 88[rsp]	# _183, %sfp
 8727      58
 8728 353d 4801DA   		add	rdx, rbx	# ivtmp.440, bitarray
 8729 3540 4C8B5424 		mov	r10, QWORD PTR 64[rsp]	# tmp749, %sfp
 8729      40
 8730              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 8731              		.loc 1 889 29 view .LVU3012
 8732 3545 4829F8   		sub	rax, rdi	# tmp753, _183
 8733 3548 4901FA   		add	r10, rdi	# tmp749, _183
 8734 354b 4E8D4CD3 		lea	r9, 8[rbx+r10*8]	# tmp752,
 8734      08
 8735 3550 4929F1   		sub	r9, rsi	# tmp752, _220
 8736 3553 4C89CE   		mov	rsi, r9	# _729, tmp752
 8737 3556 4929D1   		sub	r9, rdx	# tmp811, ivtmp.440
 8738 3559 4983E908 		sub	r9, 8	# tmp812,
 8739 355d 49C1E903 		shr	r9, 3	# tmp810,
 8740 3561 4983C101 		add	r9, 1	# tmp813,
 8741 3565 4183E107 		and	r9d, 7	# tmp814,
 8742 3569 0F84F900 		je	.L797	#,
 8742      0000
 8743 356f 4983F901 		cmp	r9, 1	# tmp814,
 8744 3573 0F84CA00 		je	.L709	#,
 8744      0000
 8745 3579 4983F902 		cmp	r9, 2	# tmp814,
 8746 357d 0F84A500 		je	.L710	#,
 8746      0000
 8747 3583 4983F903 		cmp	r9, 3	# tmp814,
 8748 3587 0F848000 		je	.L711	#,
 8748      0000
 8749 358d 4983F904 		cmp	r9, 4	# tmp814,
 8750 3591 745E     		je	.L712	#,
 8751 3593 4983F905 		cmp	r9, 5	# tmp814,
 8752 3597 743D     		je	.L713	#,
 8753 3599 4983F906 		cmp	r9, 6	# tmp814,
 8754 359d 741C     		je	.L714	#,
 889:sieve_extend.c ****     }
 8755              		.loc 1 889 9 is_stmt 1 view .LVU3013
 8756              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 8757              		.loc 1 889 56 is_stmt 0 view .LVU3014
 8758 359f C4629BF7 		shrx	r8, QWORD PTR [rdx], r12	# tmp1090, MEM[base: _720, offset: 0B], _12
 8758      02
 8759              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
GAS LISTING /tmp/ccr2dACi.s 			page 244


 8760              		.loc 1 889 94 view .LVU3015
 8761 35a4 440FB65C 		movzx	r11d, BYTE PTR 72[rsp]	# tmp1404, %sfp
 8761      2448
 8762 35aa C462A1F7 		shlx	r14, QWORD PTR 8[rdx], r11	# tmp1092, MEM[base: _720, offset: 8B], tmp1404
 8762      7208
 8763              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 8764              		.loc 1 889 66 view .LVU3016
 8765 35b0 4D09F0   		or	r8, r14	# tmp1093, tmp1092
 8766 35b3 4C8904C2 		mov	QWORD PTR [rdx+rax*8], r8	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1093
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8767              		.loc 1 888 43 is_stmt 1 view .LVU3017
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8768              		.loc 1 888 11 view .LVU3018
 8769 35b7 4883C208 		add	rdx, 8	# ivtmp.440,
 8770              	.L714:
 889:sieve_extend.c ****     }
 8771              		.loc 1 889 9 view .LVU3019
 8772              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 8773              		.loc 1 889 56 is_stmt 0 view .LVU3020
 8774 35bb C4629BF7 		shrx	r15, QWORD PTR [rdx], r12	# tmp1095, MEM[base: _720, offset: 0B], _12
 8774      3A
 8775              	.LVL437:
 8776              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 8777              		.loc 1 889 94 view .LVU3021
 8778 35c0 0FB64C24 		movzx	ecx, BYTE PTR 72[rsp]	# tmp1405, %sfp
 8778      48
 8779 35c5 C462F1F7 		shlx	r13, QWORD PTR 8[rdx], rcx	# tmp1097, MEM[base: _720, offset: 8B], tmp1405
 8779      6A08
 8780              	.LVL438:
 8781              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 8782              		.loc 1 889 66 view .LVU3022
 8783 35cb 4D09EF   		or	r15, r13	# tmp1098, tmp1097
 8784 35ce 4C893CC2 		mov	QWORD PTR [rdx+rax*8], r15	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1098
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8785              		.loc 1 888 43 is_stmt 1 view .LVU3023
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8786              		.loc 1 888 11 view .LVU3024
 8787 35d2 4883C208 		add	rdx, 8	# ivtmp.440,
 8788              	.L713:
 889:sieve_extend.c ****     }
 8789              		.loc 1 889 9 view .LVU3025
 8790              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 8791              		.loc 1 889 56 is_stmt 0 view .LVU3026
 8792 35d6 C4629BF7 		shrx	r10, QWORD PTR [rdx], r12	# tmp1100, MEM[base: _720, offset: 0B], _12
 8792      12
 8793              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 8794              		.loc 1 889 94 view .LVU3027
 8795 35db 0FB67C24 		movzx	edi, BYTE PTR 72[rsp]	# tmp1406, %sfp
 8795      48
 8796 35e0 C462C1F7 		shlx	r9, QWORD PTR 8[rdx], rdi	# tmp1102, MEM[base: _720, offset: 8B], tmp1406
 8796      4A08
GAS LISTING /tmp/ccr2dACi.s 			page 245


 8797              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 8798              		.loc 1 889 66 view .LVU3028
 8799 35e6 4D09CA   		or	r10, r9	# tmp1103, tmp1102
 8800 35e9 4C8914C2 		mov	QWORD PTR [rdx+rax*8], r10	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1103
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8801              		.loc 1 888 43 is_stmt 1 view .LVU3029
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8802              		.loc 1 888 11 view .LVU3030
 8803 35ed 4883C208 		add	rdx, 8	# ivtmp.440,
 8804              	.L712:
 889:sieve_extend.c ****     }
 8805              		.loc 1 889 9 view .LVU3031
 8806              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 8807              		.loc 1 889 56 is_stmt 0 view .LVU3032
 8808 35f1 C4629BF7 		shrx	r8, QWORD PTR [rdx], r12	# tmp1105, MEM[base: _720, offset: 0B], _12
 8808      02
 8809              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 8810              		.loc 1 889 94 view .LVU3033
 8811 35f6 440FB65C 		movzx	r11d, BYTE PTR 72[rsp]	# tmp1407, %sfp
 8811      2448
 8812 35fc C462A1F7 		shlx	r14, QWORD PTR 8[rdx], r11	# tmp1107, MEM[base: _720, offset: 8B], tmp1407
 8812      7208
 8813              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 8814              		.loc 1 889 66 view .LVU3034
 8815 3602 4D09F0   		or	r8, r14	# tmp1108, tmp1107
 8816 3605 4C8904C2 		mov	QWORD PTR [rdx+rax*8], r8	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1108
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8817              		.loc 1 888 43 is_stmt 1 view .LVU3035
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8818              		.loc 1 888 11 view .LVU3036
 8819 3609 4883C208 		add	rdx, 8	# ivtmp.440,
 8820              	.L711:
 889:sieve_extend.c ****     }
 8821              		.loc 1 889 9 view .LVU3037
 8822              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 8823              		.loc 1 889 56 is_stmt 0 view .LVU3038
 8824 360d C4629BF7 		shrx	r15, QWORD PTR [rdx], r12	# tmp1110, MEM[base: _720, offset: 0B], _12
 8824      3A
 8825              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 8826              		.loc 1 889 94 view .LVU3039
 8827 3612 0FB64C24 		movzx	ecx, BYTE PTR 72[rsp]	# tmp1408, %sfp
 8827      48
 8828 3617 C462F1F7 		shlx	r13, QWORD PTR 8[rdx], rcx	# tmp1112, MEM[base: _720, offset: 8B], tmp1408
 8828      6A08
 8829              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 8830              		.loc 1 889 66 view .LVU3040
 8831 361d 4D09EF   		or	r15, r13	# tmp1113, tmp1112
 8832 3620 4C893CC2 		mov	QWORD PTR [rdx+rax*8], r15	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1113
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8833              		.loc 1 888 43 is_stmt 1 view .LVU3041
GAS LISTING /tmp/ccr2dACi.s 			page 246


 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8834              		.loc 1 888 11 view .LVU3042
 8835 3624 4883C208 		add	rdx, 8	# ivtmp.440,
 8836              	.L710:
 889:sieve_extend.c ****     }
 8837              		.loc 1 889 9 view .LVU3043
 8838              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 8839              		.loc 1 889 56 is_stmt 0 view .LVU3044
 8840 3628 C4629BF7 		shrx	r10, QWORD PTR [rdx], r12	# tmp1115, MEM[base: _720, offset: 0B], _12
 8840      12
 8841              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 8842              		.loc 1 889 94 view .LVU3045
 8843 362d 0FB67C24 		movzx	edi, BYTE PTR 72[rsp]	# tmp1409, %sfp
 8843      48
 8844 3632 C462C1F7 		shlx	r9, QWORD PTR 8[rdx], rdi	# tmp1117, MEM[base: _720, offset: 8B], tmp1409
 8844      4A08
 8845              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 8846              		.loc 1 889 66 view .LVU3046
 8847 3638 4D09CA   		or	r10, r9	# tmp1118, tmp1117
 8848 363b 4C8914C2 		mov	QWORD PTR [rdx+rax*8], r10	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1118
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8849              		.loc 1 888 43 is_stmt 1 view .LVU3047
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8850              		.loc 1 888 11 view .LVU3048
 8851 363f 4883C208 		add	rdx, 8	# ivtmp.440,
 8852              	.L709:
 889:sieve_extend.c ****     }
 8853              		.loc 1 889 9 view .LVU3049
 8854              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 8855              		.loc 1 889 56 is_stmt 0 view .LVU3050
 8856 3643 C4629BF7 		shrx	r8, QWORD PTR [rdx], r12	# tmp1120, MEM[base: _720, offset: 0B], _12
 8856      02
 8857              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 8858              		.loc 1 889 94 view .LVU3051
 8859 3648 440FB65C 		movzx	r11d, BYTE PTR 72[rsp]	# tmp1410, %sfp
 8859      2448
 8860 364e C462A1F7 		shlx	r14, QWORD PTR 8[rdx], r11	# tmp1122, MEM[base: _720, offset: 8B], tmp1410
 8860      7208
 8861              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 8862              		.loc 1 889 66 view .LVU3052
 8863 3654 4D09F0   		or	r8, r14	# tmp1123, tmp1122
 8864 3657 4C8904C2 		mov	QWORD PTR [rdx+rax*8], r8	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1123
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8865              		.loc 1 888 43 is_stmt 1 view .LVU3053
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8866              		.loc 1 888 11 view .LVU3054
 8867 365b 4883C208 		add	rdx, 8	# ivtmp.440,
 8868              	# sieve_extend.c:888:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8869              		.loc 1 888 5 is_stmt 0 view .LVU3055
 8870 365f 4839F2   		cmp	rdx, rsi	# ivtmp.440, _729
GAS LISTING /tmp/ccr2dACi.s 			page 247


 8871 3662 0F84C600 		je	.L783	#,
 8871      0000
 8872              	.L797:
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8873              		.loc 1 888 5 view .LVU3056
 8874 3668 448B7C24 		mov	r15d, DWORD PTR 72[rsp]	# _18, %sfp
 8874      48
 8875              	.L557:
 889:sieve_extend.c ****     }
 8876              		.loc 1 889 9 is_stmt 1 view .LVU3057
 8877              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 8878              		.loc 1 889 94 is_stmt 0 view .LVU3058
 8879 366d C46281F7 		shlx	r13, QWORD PTR 8[rdx], r15	# tmp756, MEM[base: _720, offset: 8B], _18
 8879      6A08
 8880              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 8881              		.loc 1 889 56 view .LVU3059
 8882 3673 C4E29BF7 		shrx	rcx, QWORD PTR [rdx], r12	# tmp754, MEM[base: _720, offset: 0B], _12
 8882      0A
 8883              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 8884              		.loc 1 889 66 view .LVU3060
 8885 3678 4C09E9   		or	rcx, r13	# tmp758, tmp756
 8886 367b 4C8D5208 		lea	r10, 8[rdx]	# tmp815,
 8887 367f 48890CC2 		mov	QWORD PTR [rdx+rax*8], rcx	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp758
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8888              		.loc 1 888 43 is_stmt 1 view .LVU3061
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8889              		.loc 1 888 11 view .LVU3062
 889:sieve_extend.c ****     }
 8890              		.loc 1 889 9 view .LVU3063
 8891              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 8892              		.loc 1 889 94 is_stmt 0 view .LVU3064
 8893 3683 C44281F7 		shlx	r9, QWORD PTR 8[r10], r15	# tmp988, MEM[base: _720, offset: 8B], _18
 8893      4A08
 8894              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 8895              		.loc 1 889 56 view .LVU3065
 8896 3689 C4E29BF7 		shrx	rdi, QWORD PTR 8[rdx], r12	# tmp986, MEM[base: _720, offset: 0B], _12
 8896      7A08
 8897              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 8898              		.loc 1 889 66 view .LVU3066
 8899 368f 4C09CF   		or	rdi, r9	# tmp989, tmp988
 8900 3692 4C8D5A10 		lea	r11, 16[rdx]	# ivtmp.440,
 8901 3696 488D4A18 		lea	rcx, 24[rdx]	# ivtmp.440,
 8902 369a 49893CC2 		mov	QWORD PTR [r10+rax*8], rdi	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp989
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8903              		.loc 1 888 43 is_stmt 1 view .LVU3067
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8904              		.loc 1 888 11 view .LVU3068
 889:sieve_extend.c ****     }
 8905              		.loc 1 889 9 view .LVU3069
 8906              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
GAS LISTING /tmp/ccr2dACi.s 			page 248


 8907              		.loc 1 889 56 is_stmt 0 view .LVU3070
 8908 369e C4629BF7 		shrx	r14, QWORD PTR 16[rdx], r12	# tmp992, MEM[base: _720, offset: 0B], _12
 8908      7210
 8909              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 8910              		.loc 1 889 94 view .LVU3071
 8911 36a4 C44281F7 		shlx	r8, QWORD PTR 8[r11], r15	# tmp994, MEM[base: _720, offset: 8B], _18
 8911      4308
 8912              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 8913              		.loc 1 889 66 view .LVU3072
 8914 36aa 4D09C6   		or	r14, r8	# tmp995, tmp994
 8915 36ad 4D8934C3 		mov	QWORD PTR [r11+rax*8], r14	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp995
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8916              		.loc 1 888 43 is_stmt 1 view .LVU3073
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8917              		.loc 1 888 11 view .LVU3074
 889:sieve_extend.c ****     }
 8918              		.loc 1 889 9 view .LVU3075
 8919              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 8920              		.loc 1 889 56 is_stmt 0 view .LVU3076
 8921 36b1 C4629BF7 		shrx	r13, QWORD PTR 24[rdx], r12	# tmp998, MEM[base: _720, offset: 0B], _12
 8921      6A18
 8922              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 8923              		.loc 1 889 94 view .LVU3077
 8924 36b7 C46281F7 		shlx	r10, QWORD PTR 8[rcx], r15	# tmp1000, MEM[base: _720, offset: 8B], _18
 8924      5108
 8925              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 8926              		.loc 1 889 66 view .LVU3078
 8927 36bd 4D09D5   		or	r13, r10	# tmp1001, tmp1000
 8928 36c0 4C8D4A20 		lea	r9, 32[rdx]	# ivtmp.440,
 8929 36c4 4C8D7228 		lea	r14, 40[rdx]	# ivtmp.440,
 8930 36c8 4C892CC1 		mov	QWORD PTR [rcx+rax*8], r13	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1001
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8931              		.loc 1 888 43 is_stmt 1 view .LVU3079
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8932              		.loc 1 888 11 view .LVU3080
 889:sieve_extend.c ****     }
 8933              		.loc 1 889 9 view .LVU3081
 8934              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 8935              		.loc 1 889 94 is_stmt 0 view .LVU3082
 8936 36cc C44281F7 		shlx	r11, QWORD PTR 8[r9], r15	# tmp1006, MEM[base: _720, offset: 8B], _18
 8936      5908
 8937              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 8938              		.loc 1 889 56 view .LVU3083
 8939 36d2 C4E29BF7 		shrx	rdi, QWORD PTR 32[rdx], r12	# tmp1004, MEM[base: _720, offset: 0B], _12
 8939      7A20
 8940              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 8941              		.loc 1 889 66 view .LVU3084
 8942 36d8 4C09DF   		or	rdi, r11	# tmp1007, tmp1006
 8943 36db 49893CC1 		mov	QWORD PTR [r9+rax*8], rdi	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1007
GAS LISTING /tmp/ccr2dACi.s 			page 249


 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8944              		.loc 1 888 43 is_stmt 1 view .LVU3085
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8945              		.loc 1 888 11 view .LVU3086
 889:sieve_extend.c ****     }
 8946              		.loc 1 889 9 view .LVU3087
 8947              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 8948              		.loc 1 889 56 is_stmt 0 view .LVU3088
 8949 36df C4E29BF7 		shrx	rcx, QWORD PTR 40[rdx], r12	# tmp1010, MEM[base: _720, offset: 0B], _12
 8949      4A28
 8950              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 8951              		.loc 1 889 94 view .LVU3089
 8952 36e5 C44281F7 		shlx	r8, QWORD PTR 8[r14], r15	# tmp1012, MEM[base: _720, offset: 8B], _18
 8952      4608
 8953              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 8954              		.loc 1 889 66 view .LVU3090
 8955 36eb 4C09C1   		or	rcx, r8	# tmp1013, tmp1012
 8956 36ee 4C8D6A30 		lea	r13, 48[rdx]	# ivtmp.440,
 8957 36f2 4C8D5A38 		lea	r11, 56[rdx]	# ivtmp.440,
 8958 36f6 49890CC6 		mov	QWORD PTR [r14+rax*8], rcx	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1013
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8959              		.loc 1 888 43 is_stmt 1 view .LVU3091
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8960              		.loc 1 888 11 view .LVU3092
 889:sieve_extend.c ****     }
 8961              		.loc 1 889 9 view .LVU3093
 8962              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 8963              		.loc 1 889 56 is_stmt 0 view .LVU3094
 8964 36fa C4629BF7 		shrx	r10, QWORD PTR 48[rdx], r12	# tmp1016, MEM[base: _720, offset: 0B], _12
 8964      5230
 8965              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 8966              		.loc 1 889 94 view .LVU3095
 8967 3700 C44281F7 		shlx	r9, QWORD PTR 8[r13], r15	# tmp1018, MEM[base: _720, offset: 8B], _18
 8967      4D08
 8968              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 8969              		.loc 1 889 66 view .LVU3096
 8970 3706 4D09CA   		or	r10, r9	# tmp1019, tmp1018
 8971 3709 4D8954C5 		mov	QWORD PTR 0[r13+rax*8], r10	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1019
 8971      00
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8972              		.loc 1 888 43 is_stmt 1 view .LVU3097
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8973              		.loc 1 888 11 view .LVU3098
 889:sieve_extend.c ****     }
 8974              		.loc 1 889 9 view .LVU3099
 8975 370e 4883C240 		add	rdx, 64	# ivtmp.440,
 8976              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 8977              		.loc 1 889 56 is_stmt 0 view .LVU3100
 8978 3712 C4E29BF7 		shrx	rdi, QWORD PTR -8[rdx], r12	# tmp1022, MEM[base: _720, offset: 0B], _12
 8978      7AF8
GAS LISTING /tmp/ccr2dACi.s 			page 250


 8979              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 8980              		.loc 1 889 94 view .LVU3101
 8981 3718 C44281F7 		shlx	r14, QWORD PTR 8[r11], r15	# tmp1024, MEM[base: _720, offset: 8B], _18
 8981      7308
 8982              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 8983              		.loc 1 889 66 view .LVU3102
 8984 371e 4C09F7   		or	rdi, r14	# tmp1025, tmp1024
 8985              	# sieve_extend.c:888:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8986              		.loc 1 888 5 view .LVU3103
 8987 3721 4839F2   		cmp	rdx, rsi	# ivtmp.440, _729
 8988              	# sieve_extend.c:889:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 889:sieve_extend.c ****     }
 8989              		.loc 1 889 66 view .LVU3104
 8990 3724 49893CC3 		mov	QWORD PTR [r11+rax*8], rdi	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1025
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8991              		.loc 1 888 43 is_stmt 1 view .LVU3105
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8992              		.loc 1 888 11 view .LVU3106
 8993              	# sieve_extend.c:888:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8994              		.loc 1 888 5 is_stmt 0 view .LVU3107
 8995 3728 0F853FFF 		jne	.L557	#,
 8995      FFFF
 8996              	.L783:
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8997              		.loc 1 888 5 view .LVU3108
 8998 372e 488B5424 		mov	rdx, QWORD PTR 64[rsp]	# aligned_copy_word, %sfp
 8998      40
 8999 3733 4C8D5201 		lea	r10, 1[rdx]	# ivtmp.432,
 9000 3737 E9E9F6FF 		jmp	.L558	#
 9000      FF
 9001              	.LVL439:
 9002 373c 0F1F4000 		.p2align 4,,7
 9003              		.p2align 3
 9004              	.L572:
 9005              	# sieve_extend.c:882:     source_word += distance;
 882:sieve_extend.c ****     copy_word += distance;
 9006              		.loc 1 882 17 view .LVU3109
 9007 3740 4889C6   		mov	rsi, rax	# copy_word, ivtmp.432
 9008              	# sieve_extend.c:894:     source_word = copy_word - size; // recalibrate
 894:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 9009              		.loc 1 894 17 view .LVU3110
 9010 3743 4D89EE   		mov	r14, r13	# source_word, source_word
 9011 3746 E906F9FF 		jmp	.L564	#
 9011      FF
 9012              	.LVL440:
 9013              	.L809:
 9014              	.LBB427:
 9015              	.LBB408:
 9016              	.LBB405:
 725:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 9017              		.loc 1 725 9 is_stmt 1 view .LVU3111
 726:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 9018              		.loc 1 726 9 view .LVU3112
GAS LISTING /tmp/ccr2dACi.s 			page 251


 9019              	# sieve_extend.c:726:         bitword_t source1 = bitarray[source_word+1];
 726:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 9020              		.loc 1 726 19 is_stmt 0 view .LVU3113
 9021 374b 4C8B4A08 		mov	r9, QWORD PTR 8[rdx]	# source1, MEM[base: _743, offset: 8B]
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 9022              		.loc 1 727 9 is_stmt 1 view .LVU3114
 9023              	# sieve_extend.c:727:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 9024              		.loc 1 727 42 is_stmt 0 view .LVU3115
 9025 374f C4E29BF7 		shrx	rsi, QWORD PTR [rdx], r12	# tmp1161, MEM[base: _743, offset: 0B], _12
 9025      32
 9026              	# sieve_extend.c:727:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 9027              		.loc 1 727 63 view .LVU3116
 9028 3754 4589FA   		mov	r10d, r15d	# tmp1425, _18
 9029 3757 C442A9F7 		shlx	r8, r9, r10	# tmp1162, source1, tmp1425
 9029      C1
 9030              	# sieve_extend.c:727:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 9031              		.loc 1 727 52 view .LVU3117
 9032 375c 4C09C6   		or	rsi, r8	# tmp1163, tmp1162
 9033              	# sieve_extend.c:727:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 9034              		.loc 1 727 63 view .LVU3118
 9035 375f 4589FE   		mov	r14d, r15d	# _18, shift_flipped
 9036              	# sieve_extend.c:727:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 727:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 9037              		.loc 1 727 52 view .LVU3119
 9038 3762 488934FB 		mov	QWORD PTR [rbx+rdi*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 
 9039              	.LVL441:
 728:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 9040              		.loc 1 728 9 is_stmt 1 view .LVU3120
 729:sieve_extend.c ****         copy_word += 2;
 9041              		.loc 1 729 9 view .LVU3121
 9042              	# sieve_extend.c:729:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 729:sieve_extend.c ****         copy_word += 2;
 9043              		.loc 1 729 42 is_stmt 0 view .LVU3122
 9044 3766 C4429BF7 		shrx	r9, r9, r12	# tmp1166, source1, _12
 9044      C9
 9045              	# sieve_extend.c:729:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 729:sieve_extend.c ****         copy_word += 2;
 9046              		.loc 1 729 63 view .LVU3123
 9047 376b 488B5210 		mov	rdx, QWORD PTR 16[rdx]	# MEM[base: _743, offset: 16B], MEM[base: _743, offset: 16B]
 9048 376f C46289F7 		shlx	r10, rdx, r14	# tmp1165, MEM[base: _743, offset: 16B], tmp1426
 9048      D2
 9049              	# sieve_extend.c:729:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 729:sieve_extend.c ****         copy_word += 2;
 9050              		.loc 1 729 52 view .LVU3124
 9051 3774 4D09CA   		or	r10, r9	# tmp1167, tmp1166
 9052 3777 488D5120 		lea	rdx, 32[rcx]	# ivtmp.463,
 9053 377b 4C8954FB 		mov	QWORD PTR 8[rbx+rdi*8], r10	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset:
 9053      08
 9054              	.LVL442:
 730:sieve_extend.c ****         source_word += 2;
 9055              		.loc 1 730 9 is_stmt 1 view .LVU3125
 9056              	# sieve_extend.c:730:         copy_word += 2;
 730:sieve_extend.c ****         source_word += 2;
GAS LISTING /tmp/ccr2dACi.s 			page 252


 9057              		.loc 1 730 19 is_stmt 0 view .LVU3126
 9058 3780 488D7804 		lea	rdi, 4[rax]	# copy_word,
 731:sieve_extend.c ****         distance += 2;
 9059              		.loc 1 731 9 is_stmt 1 view .LVU3127
 732:sieve_extend.c ****     }
 9060              		.loc 1 732 9 view .LVU3128
 732:sieve_extend.c ****     }
 9061              		.loc 1 732 9 is_stmt 0 view .LVU3129
 9062              	.LBE405:
 724:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 9063              		.loc 1 724 11 is_stmt 1 view .LVU3130
 9064 3784 E94EFCFF 		jmp	.L735	#
 9064      FF
 9065              	.LBE408:
 9066              	.LBE427:
 9067              		.cfi_endproc
 9068              	.LFE72:
 9070              		.section	.rodata.str1.1,"aMS",@progbits,1
 9071              	.LC4:
 9072 0000 25336A75 		.string	"%3ju "
 9072      2000
 9073              	.LC5:
 9074 0006 0A466F75 		.string	"\nFound %ju primes until %ju\n"
 9074      6E642025 
 9074      6A752070 
 9074      72696D65 
 9074      7320756E 
 9075              		.text
 9076 3789 0F1F8000 		.p2align 4
 9076      000000
 9078              	show_primes.isra.0:
 9079              	.LVL443:
 9080              	.LFB87:
1065:sieve_extend.c ****     counter_t primeCount = 1;    // We already have 2
 9081              		.loc 1 1065 13 view -0
 9082              		.cfi_startproc
 9083              	.LBB428:
1067:sieve_extend.c ****         primeCount++;
 9084              		.loc 1 1067 30 view .LVU3132
 9085              	.LBE428:
 9086              	# sieve_extend.c:1065: static void show_primes(struct sieve_state *sieve, counter_t maxFactor) {
1065:sieve_extend.c ****     counter_t primeCount = 1;    // We already have 2
 9087              		.loc 1 1065 13 is_stmt 0 view .LVU3133
 9088 3790 4157     		push	r15	#
 9089              		.cfi_def_cfa_offset 16
 9090              		.cfi_offset 15, -16
 9091 3792 4156     		push	r14	#
 9092              		.cfi_def_cfa_offset 24
 9093              		.cfi_offset 14, -24
 9094 3794 4155     		push	r13	#
 9095              		.cfi_def_cfa_offset 32
 9096              		.cfi_offset 13, -32
 9097 3796 4154     		push	r12	#
 9098              		.cfi_def_cfa_offset 40
 9099              		.cfi_offset 12, -40
 9100 3798 4989F4   		mov	r12, rsi	# ISRA.76, tmp168
 9101 379b 55       		push	rbp	#
GAS LISTING /tmp/ccr2dACi.s 			page 253


 9102              		.cfi_def_cfa_offset 48
 9103              		.cfi_offset 6, -48
 9104 379c 53       		push	rbx	#
 9105              		.cfi_def_cfa_offset 56
 9106              		.cfi_offset 3, -56
 9107 379d 488D6424 		lea	rsp, -8[rsp]	#,
 9107      F8
 9108              		.cfi_def_cfa_offset 64
 9109              	.LBB445:
 9110              	# sieve_extend.c:1067:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(s
1067:sieve_extend.c ****         primeCount++;
 9111              		.loc 1 1067 44 view .LVU3134
 9112 37a2 488B36   		mov	rsi, QWORD PTR [rsi]	# prephitmp_86, *ISRA.76_32(D)
 9113              	# sieve_extend.c:1067:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(s
1067:sieve_extend.c ****         primeCount++;
 9114              		.loc 1 1067 5 view .LVU3135
 9115 37a5 4883FE01 		cmp	rsi, 1	# prephitmp_86,
 9116 37a9 0F867501 		jbe	.L817	#,
 9116      0000
 9117              	# sieve_extend.c:1069:         if (factor < maxFactor/2) {
1069:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 9118              		.loc 1 1069 31 view .LVU3136
 9119 37af 48D1EA   		shr	rdx	# maxFactor
 9120              	.LVL444:
1069:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 9121              		.loc 1 1069 31 view .LVU3137
 9122 37b2 4989FD   		mov	r13, rdi	# ISRA.75, tmp167
 9123              	# sieve_extend.c:1067:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(s
1067:sieve_extend.c ****         primeCount++;
 9124              		.loc 1 1067 20 view .LVU3138
 9125 37b5 BB010000 		mov	ebx, 1	# factor,
 9125      00
 9126              	# sieve_extend.c:1069:         if (factor < maxFactor/2) {
1069:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 9127              		.loc 1 1069 31 view .LVU3139
 9128 37ba 4889D5   		mov	rbp, rdx	# _4, maxFactor
 9129              	.LBE445:
 9130              	# sieve_extend.c:1066:     counter_t primeCount = 1;    // We already have 2
1066:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitarray, factor+
 9131              		.loc 1 1066 15 view .LVU3140
 9132 37bd 41BF0100 		mov	r15d, 1	# primeCount,
 9132      0000
 9133              	.LBB446:
 9134              	.LBB429:
 9135              	.LBB430:
 9136              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 9137              		.file 3 "/usr/include/x86_64-linux-gnu/bits/stdio2.h"
   1:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** /* Checking macros for stdio functions.
   2:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    Copyright (C) 2004-2020 Free Software Foundation, Inc.
   3:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    This file is part of the GNU C Library.
   4:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
   5:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    The GNU C Library is free software; you can redistribute it and/or
   6:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    modify it under the terms of the GNU Lesser General Public
   7:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    License as published by the Free Software Foundation; either
   8:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    version 2.1 of the License, or (at your option) any later version.
   9:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  10:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    The GNU C Library is distributed in the hope that it will be useful,
GAS LISTING /tmp/ccr2dACi.s 			page 254


  11:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  13:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    Lesser General Public License for more details.
  14:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  15:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    You should have received a copy of the GNU Lesser General Public
  16:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    License along with the GNU C Library; if not, see
  17:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    <https://www.gnu.org/licenses/>.  */
  18:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  19:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #ifndef _BITS_STDIO2_H
  20:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #define _BITS_STDIO2_H 1
  21:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  22:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #ifndef _STDIO_H
  23:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # error "Never include <bits/stdio2.h> directly; use <stdio.h> instead."
  24:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
  25:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  26:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __sprintf_chk (char *__restrict __s, int __flag, size_t __slen,
  27:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  const char *__restrict __format, ...) __THROW;
  28:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vsprintf_chk (char *__restrict __s, int __flag, size_t __slen,
  29:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   const char *__restrict __format,
  30:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   __gnuc_va_list __ap) __THROW;
  31:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  32:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #ifdef __va_arg_pack
  33:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  34:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (sprintf (char *__restrict __s, const char *__restrict __fmt, ...))
  35:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  36:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___sprintf_chk (__s, __USE_FORTIFY_LEVEL - 1,
  37:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				  __bos (__s), __fmt, __va_arg_pack ());
  38:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  39:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #elif !defined __cplusplus
  40:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # define sprintf(str, ...) \
  41:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   __builtin___sprintf_chk (str, __USE_FORTIFY_LEVEL - 1, __bos (str), \
  42:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   __VA_ARGS__)
  43:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
  44:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  45:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  46:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (vsprintf (char *__restrict __s, const char *__restrict __fmt,
  47:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		 __gnuc_va_list __ap))
  48:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  49:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___vsprintf_chk (__s, __USE_FORTIFY_LEVEL - 1,
  50:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				   __bos (__s), __fmt, __ap);
  51:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  52:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  53:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #if defined __USE_ISOC99 || defined __USE_UNIX98
  54:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  55:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __snprintf_chk (char *__restrict __s, size_t __n, int __flag,
  56:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   size_t __slen, const char *__restrict __format,
  57:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   ...) __THROW;
  58:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vsnprintf_chk (char *__restrict __s, size_t __n, int __flag,
  59:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    size_t __slen, const char *__restrict __format,
  60:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    __gnuc_va_list __ap) __THROW;
  61:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  62:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # ifdef __va_arg_pack
  63:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  64:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (snprintf (char *__restrict __s, size_t __n,
  65:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		 const char *__restrict __fmt, ...))
  66:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  67:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
GAS LISTING /tmp/ccr2dACi.s 			page 255


  68:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				   __bos (__s), __fmt, __va_arg_pack ());
  69:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  70:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # elif !defined __cplusplus
  71:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #  define snprintf(str, len, ...) \
  72:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   __builtin___snprintf_chk (str, len, __USE_FORTIFY_LEVEL - 1, __bos (str), \
  73:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    __VA_ARGS__)
  74:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # endif
  75:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  76:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  77:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (vsnprintf (char *__restrict __s, size_t __n,
  78:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		  const char *__restrict __fmt, __gnuc_va_list __ap))
  79:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  80:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___vsnprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
  81:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				    __bos (__s), __fmt, __ap);
  82:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  83:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  84:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
  85:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  86:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #if __USE_FORTIFY_LEVEL > 1
  87:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  88:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __fprintf_chk (FILE *__restrict __stream, int __flag,
  89:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  const char *__restrict __format, ...);
  90:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __printf_chk (int __flag, const char *__restrict __format, ...);
  91:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vfprintf_chk (FILE *__restrict __stream, int __flag,
  92:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   const char *__restrict __format, __gnuc_va_list __ap);
  93:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vprintf_chk (int __flag, const char *__restrict __format,
  94:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  __gnuc_va_list __ap);
  95:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  96:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # ifdef __va_arg_pack
  97:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** fprintf (FILE *__restrict __stream, const char *__restrict __fmt, ...)
  99:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt,
 101:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 102:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
 103:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
 104:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** printf (const char *__restrict __fmt, ...)
 106:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 107:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __printf_chk (__USE_FORTIFY_LEVEL - 1, __fmt, __va_arg_pack ());
 9138              		.loc 3 107 10 view .LVU3141
 9139 37c3 49BECDCC 		movabs	r14, -3689348814741910323	# tmp136,
 9139      CCCCCCCC 
 9139      CCCC
 9140              	.LVL445:
 9141 37cd 0F1F00   		.p2align 4
 9142              		.p2align 3
 9143              	.L816:
 9144              		.loc 3 107 10 view .LVU3142
 9145              	.LBE430:
 9146              	.LBE429:
1068:sieve_extend.c ****         if (factor < maxFactor/2) {
 9147              		.loc 1 1068 9 is_stmt 1 view .LVU3143
 9148              	# sieve_extend.c:1068:         primeCount++;
1068:sieve_extend.c ****         if (factor < maxFactor/2) {
 9149              		.loc 1 1068 19 is_stmt 0 view .LVU3144
 9150 37d0 4983C701 		add	r15, 1	# primeCount,
GAS LISTING /tmp/ccr2dACi.s 			page 256


 9151              	.LVL446:
1069:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 9152              		.loc 1 1069 9 is_stmt 1 view .LVU3145
 9153              	# sieve_extend.c:1069:         if (factor < maxFactor/2) {
1069:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 9154              		.loc 1 1069 12 is_stmt 0 view .LVU3146
 9155 37d4 4839DD   		cmp	rbp, rbx	# _4, factor
 9156 37d7 0F87FB00 		ja	.L840	#,
 9156      0000
 9157              	.L812:
1067:sieve_extend.c ****         primeCount++;
 9158              		.loc 1 1067 52 is_stmt 1 view .LVU3147
 9159              	.LVL447:
 9160              	# sieve_extend.c:1067:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(s
1067:sieve_extend.c ****         primeCount++;
 9161              		.loc 1 1067 61 is_stmt 0 view .LVU3148
 9162 37dd 4D8B4500 		mov	r8, QWORD PTR 0[r13]	# _11, *ISRA.75_33(D)
 9163 37e1 4883C301 		add	rbx, 1	# factor,
 9164              	.LVL448:
 9165              	.L839:
 9166              	.LBB435:
 9167              	.LBI435:
 122:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 9168              		.loc 1 122 25 is_stmt 1 view .LVU3149
 9169              	.LBB436:
 123:sieve_extend.c ****     return index;
 9170              		.loc 1 123 5 view .LVU3150
 123:sieve_extend.c ****     return index;
 9171              		.loc 1 123 11 view .LVU3151
 9172              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9173              		.loc 1 123 21 is_stmt 0 view .LVU3152
 9174 37e5 4889D9   		mov	rcx, rbx	# tmp124, factor
 9175 37e8 48C1E906 		shr	rcx, 6	# tmp124,
 9176              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9177              		.loc 1 123 12 view .LVU3153
 9178 37ec 4D8B0CC8 		mov	r9, QWORD PTR [r8+rcx*8]	# *_39,* _11
 9179              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9180              		.loc 1 123 11 view .LVU3154
 9181 37f0 490FA3D9 		bt	r9, rbx	# *_39, factor
 9182 37f4 0F83A600 		jnc	.L814	#,
 9182      0000
 123:sieve_extend.c ****     return index;
 9183              		.loc 1 123 58 is_stmt 1 view .LVU3155
 9184              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9185              		.loc 1 123 63 is_stmt 0 view .LVU3156
 9186 37fa 4C8D5301 		lea	r10, 1[rbx]	# tmp138,
 9187              	.LVL449:
 9188              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9189              		.loc 1 123 21 view .LVU3157
 9190 37fe 4D89D3   		mov	r11, r10	# tmp129, factor
 9191              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
GAS LISTING /tmp/ccr2dACi.s 			page 257


 9192              		.loc 1 123 63 view .LVU3158
 9193 3801 4C89D3   		mov	rbx, r10	# factor, tmp138
 123:sieve_extend.c ****     return index;
 9194              		.loc 1 123 11 is_stmt 1 view .LVU3159
 9195              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9196              		.loc 1 123 21 is_stmt 0 view .LVU3160
 9197 3804 49C1EB06 		shr	r11, 6	# tmp129,
 9198              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9199              		.loc 1 123 12 view .LVU3161
 9200 3808 4B8B04D8 		mov	rax, QWORD PTR [r8+r11*8]	# *_16, *_16
 9201              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9202              		.loc 1 123 11 view .LVU3162
 9203 380c 4C0FA3D0 		bt	rax, r10	# *_16, factor
 9204 3810 0F838A00 		jnc	.L814	#,
 9204      0000
 123:sieve_extend.c ****     return index;
 9205              		.loc 1 123 58 is_stmt 1 view .LVU3163
 9206              	.LVL450:
 9207              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9208              		.loc 1 123 63 is_stmt 0 view .LVU3164
 9209 3816 4883C301 		add	rbx, 1	# factor,
 9210              	.LVL451:
 123:sieve_extend.c ****     return index;
 9211              		.loc 1 123 11 is_stmt 1 view .LVU3165
 9212              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9213              		.loc 1 123 21 is_stmt 0 view .LVU3166
 9214 381a 4889DA   		mov	rdx, rbx	# tmp139, factor
 9215 381d 48C1EA06 		shr	rdx, 6	# tmp139,
 9216              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9217              		.loc 1 123 12 view .LVU3167
 9218 3821 498B3CD0 		mov	rdi, QWORD PTR [r8+rdx*8]	# *_16, *_16
 9219              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9220              		.loc 1 123 11 view .LVU3168
 9221 3825 480FA3DF 		bt	rdi, rbx	# *_16, factor
 9222 3829 7375     		jnc	.L814	#,
 123:sieve_extend.c ****     return index;
 9223              		.loc 1 123 58 is_stmt 1 view .LVU3169
 9224              	.LVL452:
 9225              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9226              		.loc 1 123 63 is_stmt 0 view .LVU3170
 9227 382b 498D5A02 		lea	rbx, 2[r10]	# factor,
 9228              	.LVL453:
 123:sieve_extend.c ****     return index;
 9229              		.loc 1 123 11 is_stmt 1 view .LVU3171
 9230              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9231              		.loc 1 123 21 is_stmt 0 view .LVU3172
 9232 382f 4889D9   		mov	rcx, rbx	# tmp143, factor
 9233 3832 48C1E906 		shr	rcx, 6	# tmp143,
GAS LISTING /tmp/ccr2dACi.s 			page 258


 9234              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9235              		.loc 1 123 12 view .LVU3173
 9236 3836 4D8B0CC8 		mov	r9, QWORD PTR [r8+rcx*8]	# *_16, *_16
 9237              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9238              		.loc 1 123 11 view .LVU3174
 9239 383a 490FA3D9 		bt	r9, rbx	# *_16, factor
 9240 383e 7360     		jnc	.L814	#,
 123:sieve_extend.c ****     return index;
 9241              		.loc 1 123 58 is_stmt 1 view .LVU3175
 9242              	.LVL454:
 9243              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9244              		.loc 1 123 63 is_stmt 0 view .LVU3176
 9245 3840 498D5A03 		lea	rbx, 3[r10]	# factor,
 9246              	.LVL455:
 123:sieve_extend.c ****     return index;
 9247              		.loc 1 123 11 is_stmt 1 view .LVU3177
 9248              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9249              		.loc 1 123 21 is_stmt 0 view .LVU3178
 9250 3844 4989DB   		mov	r11, rbx	# tmp147, factor
 9251 3847 49C1EB06 		shr	r11, 6	# tmp147,
 9252              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9253              		.loc 1 123 12 view .LVU3179
 9254 384b 4B8B04D8 		mov	rax, QWORD PTR [r8+r11*8]	# *_16, *_16
 9255              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9256              		.loc 1 123 11 view .LVU3180
 9257 384f 480FA3D8 		bt	rax, rbx	# *_16, factor
 9258 3853 734B     		jnc	.L814	#,
 123:sieve_extend.c ****     return index;
 9259              		.loc 1 123 58 is_stmt 1 view .LVU3181
 9260              	.LVL456:
 9261              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9262              		.loc 1 123 63 is_stmt 0 view .LVU3182
 9263 3855 498D5A04 		lea	rbx, 4[r10]	# factor,
 9264              	.LVL457:
 123:sieve_extend.c ****     return index;
 9265              		.loc 1 123 11 is_stmt 1 view .LVU3183
 9266              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9267              		.loc 1 123 21 is_stmt 0 view .LVU3184
 9268 3859 4889DA   		mov	rdx, rbx	# tmp151, factor
 9269 385c 48C1EA06 		shr	rdx, 6	# tmp151,
 9270              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9271              		.loc 1 123 12 view .LVU3185
 9272 3860 498B3CD0 		mov	rdi, QWORD PTR [r8+rdx*8]	# *_16, *_16
 9273              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9274              		.loc 1 123 11 view .LVU3186
 9275 3864 480FA3DF 		bt	rdi, rbx	# *_16, factor
 9276 3868 7336     		jnc	.L814	#,
GAS LISTING /tmp/ccr2dACi.s 			page 259


 123:sieve_extend.c ****     return index;
 9277              		.loc 1 123 58 is_stmt 1 view .LVU3187
 9278              	.LVL458:
 9279              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9280              		.loc 1 123 63 is_stmt 0 view .LVU3188
 9281 386a 498D5A05 		lea	rbx, 5[r10]	# factor,
 9282              	.LVL459:
 123:sieve_extend.c ****     return index;
 9283              		.loc 1 123 11 is_stmt 1 view .LVU3189
 9284              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9285              		.loc 1 123 21 is_stmt 0 view .LVU3190
 9286 386e 4889D9   		mov	rcx, rbx	# tmp155, factor
 9287 3871 48C1E906 		shr	rcx, 6	# tmp155,
 9288              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9289              		.loc 1 123 12 view .LVU3191
 9290 3875 4D8B0CC8 		mov	r9, QWORD PTR [r8+rcx*8]	# *_16, *_16
 9291              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9292              		.loc 1 123 11 view .LVU3192
 9293 3879 490FA3D9 		bt	r9, rbx	# *_16, factor
 9294 387d 7321     		jnc	.L814	#,
 123:sieve_extend.c ****     return index;
 9295              		.loc 1 123 58 is_stmt 1 view .LVU3193
 9296              	.LVL460:
 9297              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9298              		.loc 1 123 63 is_stmt 0 view .LVU3194
 9299 387f 498D5A06 		lea	rbx, 6[r10]	# factor,
 9300              	.LVL461:
 123:sieve_extend.c ****     return index;
 9301              		.loc 1 123 11 is_stmt 1 view .LVU3195
 9302              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9303              		.loc 1 123 21 is_stmt 0 view .LVU3196
 9304 3883 4989DB   		mov	r11, rbx	# tmp159, factor
 9305 3886 49C1EB06 		shr	r11, 6	# tmp159,
 9306              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9307              		.loc 1 123 12 view .LVU3197
 9308 388a 4B8B04D8 		mov	rax, QWORD PTR [r8+r11*8]	# *_16, *_16
 9309              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9310              		.loc 1 123 11 view .LVU3198
 9311 388e 480FA3D8 		bt	rax, rbx	# *_16, factor
 9312 3892 730C     		jnc	.L814	#,
 123:sieve_extend.c ****     return index;
 9313              		.loc 1 123 58 is_stmt 1 view .LVU3199
 9314              	.LVL462:
 9315              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9316              		.loc 1 123 63 is_stmt 0 view .LVU3200
 9317 3894 498D5A07 		lea	rbx, 7[r10]	# factor,
 9318              	.LVL463:
 123:sieve_extend.c ****     return index;
GAS LISTING /tmp/ccr2dACi.s 			page 260


 9319              		.loc 1 123 11 is_stmt 1 view .LVU3201
 9320 3898 E948FFFF 		jmp	.L839	#
 9320      FF
 9321 389d 0F1F00   		.p2align 4,,7
 9322              		.p2align 3
 9323              	.L814:
 9324              	.LVL464:
 123:sieve_extend.c ****     return index;
 9325              		.loc 1 123 11 is_stmt 0 view .LVU3202
 9326              	.LBE436:
 9327              	.LBE435:
1067:sieve_extend.c ****         primeCount++;
 9328              		.loc 1 1067 30 is_stmt 1 view .LVU3203
 9329              	# sieve_extend.c:1067:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(s
1067:sieve_extend.c ****         primeCount++;
 9330              		.loc 1 1067 5 is_stmt 0 view .LVU3204
 9331 38a0 4839F3   		cmp	rbx, rsi	# factor, prephitmp_86
 9332 38a3 0F8227FF 		jb	.L816	#,
 9332      FFFF
 9333              	.LVL465:
 9334              	.L811:
1067:sieve_extend.c ****         primeCount++;
 9335              		.loc 1 1067 5 view .LVU3205
 9336              	.LBE446:
1074:sieve_extend.c **** }
 9337              		.loc 1 1074 5 is_stmt 1 view .LVU3206
 9338              	.LBB447:
 9339              	.LBI447:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 9340              		.loc 3 105 1 view .LVU3207
 9341              	.LBB448:
 9342              		.loc 3 107 3 view .LVU3208
 9343              	.LBE448:
 9344              	.LBE447:
 9345              	# sieve_extend.c:1075: }
1075:sieve_extend.c **** 
 9346              		.loc 1 1075 1 is_stmt 0 view .LVU3209
 9347 38a9 488D6424 		lea	rsp, 8[rsp]	#,
 9347      08
 9348              		.cfi_remember_state
 9349              		.cfi_def_cfa_offset 56
 9350              	.LBB452:
 9351              	.LBB449:
 9352              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 9353              		.loc 3 107 10 view .LVU3210
 9354 38ae 4C89FA   		mov	rdx, r15	#, primeCount
 9355              	.LBE449:
 9356              	.LBE452:
 9357              	# sieve_extend.c:1075: }
1075:sieve_extend.c **** 
 9358              		.loc 1 1075 1 view .LVU3211
 9359 38b1 5B       		pop	rbx	#
 9360              		.cfi_def_cfa_offset 48
 9361              	# sieve_extend.c:1074:     printf("\nFound %ju primes until %ju\n",(uintmax_t)primeCount, (uintmax_
1074:sieve_extend.c **** }
 9362              		.loc 1 1074 5 view .LVU3212
 9363 38b2 488D4C36 		lea	rcx, 1[rsi+rsi]	# tmp135,
GAS LISTING /tmp/ccr2dACi.s 			page 261


 9363      01
 9364              	.LBB453:
 9365              	.LBB450:
 9366              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 9367              		.loc 3 107 10 view .LVU3213
 9368 38b7 BF010000 		mov	edi, 1	#,
 9368      00
 9369 38bc 31C0     		xor	eax, eax	#
 9370 38be 488D3500 		lea	rsi, .LC5[rip]	#,
 9370      000000
 9371              	.LBE450:
 9372              	.LBE453:
 9373              	# sieve_extend.c:1075: }
1075:sieve_extend.c **** 
 9374              		.loc 1 1075 1 view .LVU3214
 9375 38c5 5D       		pop	rbp	#
 9376              		.cfi_def_cfa_offset 40
 9377 38c6 415C     		pop	r12	#
 9378              		.cfi_def_cfa_offset 32
 9379 38c8 415D     		pop	r13	#
 9380              		.cfi_def_cfa_offset 24
 9381 38ca 415E     		pop	r14	#
 9382              		.cfi_def_cfa_offset 16
 9383 38cc 415F     		pop	r15	#
 9384              		.cfi_def_cfa_offset 8
 9385              	.LBB454:
 9386              	.LBB451:
 9387              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 9388              		.loc 3 107 10 view .LVU3215
 9389 38ce E9000000 		jmp	__printf_chk@PLT	#
 9389      00
 9390              	.LVL466:
 9391              		.p2align 4,,7
 9392 38d3 0F1F4400 		.p2align 3
 9392      00
 9393              	.L840:
 9394              		.cfi_restore_state
 9395              		.loc 3 107 10 view .LVU3216
 9396              	.LBE451:
 9397              	.LBE454:
 9398              	.LBB455:
1070:sieve_extend.c ****             if (primeCount % 10 == 0) printf("\n");
 9399              		.loc 1 1070 13 is_stmt 1 view .LVU3217
 9400              	.LBB437:
 9401              	.LBI429:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 9402              		.loc 3 105 1 view .LVU3218
 9403              	.LBB431:
 9404              		.loc 3 107 3 view .LVU3219
 9405              	.LBE431:
 9406              	.LBE437:
 9407              	# sieve_extend.c:1070:             printf("%3ju ",(uintmax_t)factor*2+1);
1070:sieve_extend.c ****             if (primeCount % 10 == 0) printf("\n");
 9408              		.loc 1 1070 13 is_stmt 0 view .LVU3220
 9409 38d8 488D541B 		lea	rdx, 1[rbx+rbx]	# tmp111,
 9409      01
 9410              	.LBB438:
GAS LISTING /tmp/ccr2dACi.s 			page 262


 9411              	.LBB432:
 9412              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 9413              		.loc 3 107 10 view .LVU3221
 9414 38dd BF010000 		mov	edi, 1	#,
 9414      00
 9415 38e2 31C0     		xor	eax, eax	#
 9416 38e4 488D3500 		lea	rsi, .LC4[rip]	#,
 9416      000000
 9417 38eb E8000000 		call	__printf_chk@PLT	#
 9417      00
 9418              	.LVL467:
 9419              		.loc 3 107 10 view .LVU3222
 9420              	.LBE432:
 9421              	.LBE438:
1071:sieve_extend.c ****         }
 9422              		.loc 1 1071 13 is_stmt 1 view .LVU3223
 9423              	.LBB439:
 9424              	.LBB433:
 9425              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 9426              		.loc 3 107 10 is_stmt 0 view .LVU3224
 9427 38f0 4C89F8   		mov	rax, r15	# tmp120, primeCount
 9428              	.LBE433:
 9429              	.LBE439:
 9430              	# sieve_extend.c:1071:             if (primeCount % 10 == 0) printf("\n");
1071:sieve_extend.c ****         }
 9431              		.loc 1 1071 16 view .LVU3225
 9432 38f3 48BF9999 		movabs	rdi, 1844674407370955161	# tmp172,
 9432      99999999 
 9432      9919
 9433              	.LBB440:
 9434              	.LBB434:
 9435              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 9436              		.loc 3 107 10 view .LVU3226
 9437 38fd 490FAFC6 		imul	rax, r14	# tmp120, tmp136
 9438 3901 C4E3FBF0 		rorx	rdx, rax, 1	# tmp122, tmp120,
 9438      D001
 9439              	.LBE434:
 9440              	.LBE440:
 9441              	# sieve_extend.c:1071:             if (primeCount % 10 == 0) printf("\n");
1071:sieve_extend.c ****         }
 9442              		.loc 1 1071 16 view .LVU3227
 9443 3907 4839FA   		cmp	rdx, rdi	# tmp122, tmp172
 9444 390a 760C     		jbe	.L813	#,
 9445              	.L838:
 9446 390c 498B3424 		mov	rsi, QWORD PTR [r12]	# prephitmp_86, *ISRA.76_32(D)
 9447              	.LBB441:
 9448              	.LBB442:
 9449              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 9450              		.loc 3 107 10 view .LVU3228
 9451 3910 E9C8FEFF 		jmp	.L812	#
 9451      FF
 9452              		.p2align 4,,7
 9453 3915 0F1F00   		.p2align 3
 9454              	.L813:
 9455              	.LBE442:
 9456              	.LBE441:
1071:sieve_extend.c ****         }
GAS LISTING /tmp/ccr2dACi.s 			page 263


 9457              		.loc 1 1071 39 is_stmt 1 view .LVU3229
 9458              	.LVL468:
 9459              	.LBB444:
 9460              	.LBI441:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 9461              		.loc 3 105 1 view .LVU3230
 9462              	.LBB443:
 9463              		.loc 3 107 3 view .LVU3231
 9464              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 9465              		.loc 3 107 10 is_stmt 0 view .LVU3232
 9466 3918 BF0A0000 		mov	edi, 10	#,
 9466      00
 9467 391d E8000000 		call	putchar@PLT	#
 9467      00
 9468              	.LVL469:
 9469 3922 EBE8     		jmp	.L838	#
 9470              	.LVL470:
 9471              	.L817:
 9472              		.loc 3 107 10 view .LVU3233
 9473              	.LBE443:
 9474              	.LBE444:
 9475              	.LBE455:
 9476              	# sieve_extend.c:1066:     counter_t primeCount = 1;    // We already have 2
1066:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitarray, factor+
 9477              		.loc 1 1066 15 view .LVU3234
 9478 3924 41BF0100 		mov	r15d, 1	# primeCount,
 9478      0000
 9479 392a E97AFFFF 		jmp	.L811	#
 9479      FF
 9480              		.cfi_endproc
 9481              	.LFE87:
 9483 392f 90       		.p2align 4
 9485              	sieve:
 9486              	.LVL471:
 9487              	.LFB76:
1043:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 9488              		.loc 1 1043 86 is_stmt 1 view -0
 9489              		.cfi_startproc
1044:sieve_extend.c ****     counter_t prime     = 0;
 9490              		.loc 1 1044 5 view .LVU3236
 9491              	# sieve_extend.c:1043: static struct sieve_state *sieve(const counter_t maxints, const counter_t bl
1043:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 9492              		.loc 1 1043 86 is_stmt 0 view .LVU3237
 9493 3930 4157     		push	r15	#
 9494              		.cfi_def_cfa_offset 16
 9495              		.cfi_offset 15, -16
 9496 3932 4156     		push	r14	#
 9497              		.cfi_def_cfa_offset 24
 9498              		.cfi_offset 14, -24
 9499 3934 4155     		push	r13	#
 9500              		.cfi_def_cfa_offset 32
 9501              		.cfi_offset 13, -32
 9502 3936 4154     		push	r12	#
 9503              		.cfi_def_cfa_offset 40
 9504              		.cfi_offset 12, -40
 9505 3938 55       		push	rbp	#
 9506              		.cfi_def_cfa_offset 48
GAS LISTING /tmp/ccr2dACi.s 			page 264


 9507              		.cfi_offset 6, -48
 9508 3939 53       		push	rbx	#
 9509              		.cfi_def_cfa_offset 56
 9510              		.cfi_offset 3, -56
 9511 393a 4889FB   		mov	rbx, rdi	# maxints, tmp1244
 9512              	.LVL472:
 9513              	.LBB530:
 9514              	.LBI530:
 103:sieve_extend.c ****     struct sieve_state *sieve = aligned_alloc(8, sizeof(struct sieve_state));
 9515              		.loc 1 103 28 is_stmt 1 view .LVU3238
 9516              	.LBB531:
 104:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize*8) * anticiped_cache
 9517              		.loc 1 104 5 view .LVU3239
 9518              	# sieve_extend.c:104:     struct sieve_state *sieve = aligned_alloc(8, sizeof(struct sieve_state));
 104:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize*8) * anticiped_cache
 9519              		.loc 1 104 33 is_stmt 0 view .LVU3240
 9520 393d BF080000 		mov	edi, 8	#,
 9520      00
 9521              	.LVL473:
 104:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize*8) * anticiped_cache
 9522              		.loc 1 104 33 view .LVU3241
 9523              	.LBE531:
 9524              	.LBE530:
 9525              	# sieve_extend.c:1043: static struct sieve_state *sieve(const counter_t maxints, const counter_t bl
1043:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 9526              		.loc 1 1043 86 view .LVU3242
 9527 3942 488D6424 		lea	rsp, -104[rsp]	#,
 9527      98
 9528              		.cfi_def_cfa_offset 160
 9529              	.LBB535:
 9530              	.LBB532:
 9531              	# sieve_extend.c:105:     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesiz
 105:sieve_extend.c **** 
 9532              		.loc 1 105 22 view .LVU3243
 9533 3947 4989DE   		mov	r14, rbx	# prephitmp_1432, maxints
 9534 394a 49D1EE   		shr	r14	# prephitmp_1432
 9535              	.LBE532:
 9536              	.LBE535:
 9537              	# sieve_extend.c:1043: static struct sieve_state *sieve(const counter_t maxints, const counter_t bl
1043:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 9538              		.loc 1 1043 86 view .LVU3244
 9539 394d 48897424 		mov	QWORD PTR 64[rsp], rsi	# %sfp, tmp1245
 9539      40
 9540              	.LBB536:
 9541              	.LBB533:
 9542              	# sieve_extend.c:104:     struct sieve_state *sieve = aligned_alloc(8, sizeof(struct sieve_state));
 104:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize*8) * anticiped_cache
 9543              		.loc 1 104 33 view .LVU3245
 9544 3952 BE180000 		mov	esi, 24	#,
 9544      00
 9545              	.LVL474:
 104:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize*8) * anticiped_cache
 9546              		.loc 1 104 33 view .LVU3246
 9547 3957 E8000000 		call	aligned_alloc@PLT	#
 9547      00
 9548              	.LVL475:
 9549              	# sieve_extend.c:105:     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesiz
GAS LISTING /tmp/ccr2dACi.s 			page 265


 105:sieve_extend.c **** 
 9550              		.loc 1 105 22 view .LVU3247
 9551 395c 498DB600 		lea	rsi, 1024[r14]	# tmp549,
 9551      040000
 9552              	# sieve_extend.c:107:     sieve->bitarray = aligned_alloc((size_t)anticiped_cache_line_bytesize, (s
 107:sieve_extend.c ****     sieve->bits     = size >> 1;
 9553              		.loc 1 107 23 view .LVU3248
 9554 3963 BF800000 		mov	edi, 128	#,
 9554      00
 9555              	# sieve_extend.c:104:     struct sieve_state *sieve = aligned_alloc(8, sizeof(struct sieve_state));
 104:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize*8) * anticiped_cache
 9556              		.loc 1 104 33 view .LVU3249
 9557 3968 48894424 		mov	QWORD PTR 48[rsp], rax	# %sfp, <retval>
 9557      30
 9558 396d 4989C7   		mov	r15, rax	# <retval>, tmp1246
 9559              	.LVL476:
 105:sieve_extend.c **** 
 9560              		.loc 1 105 5 is_stmt 1 view .LVU3250
 9561              	# sieve_extend.c:105:     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesiz
 105:sieve_extend.c **** 
 9562              		.loc 1 105 22 is_stmt 0 view .LVU3251
 9563 3970 48C1EE0A 		shr	rsi, 10	# tmp550,
 9564              	# sieve_extend.c:105:     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesiz
 105:sieve_extend.c **** 
 9565              		.loc 1 105 12 view .LVU3252
 9566 3974 48C1E607 		sal	rsi, 7	# memSize,
 9567              	# sieve_extend.c:105:     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesiz
 105:sieve_extend.c **** 
 9568              		.loc 1 105 22 view .LVU3253
 9569 3978 4C897424 		mov	QWORD PTR 8[rsp], r14	# %sfp, prephitmp_1432
 9569      08
 9570              	.LVL477:
 107:sieve_extend.c ****     sieve->bits     = size >> 1;
 9571              		.loc 1 107 5 is_stmt 1 view .LVU3254
 9572              	# sieve_extend.c:107:     sieve->bitarray = aligned_alloc((size_t)anticiped_cache_line_bytesize, (s
 107:sieve_extend.c ****     sieve->bits     = size >> 1;
 9573              		.loc 1 107 23 is_stmt 0 view .LVU3255
 9574 397d E8000000 		call	aligned_alloc@PLT	#
 9574      00
 9575              	.LVL478:
 107:sieve_extend.c ****     sieve->bits     = size >> 1;
 9576              		.loc 1 107 23 view .LVU3256
 9577 3982 48894424 		mov	QWORD PTR 56[rsp], rax	# %sfp, _97
 9577      38
 9578              	.LBE533:
 9579              	.LBE536:
 9580              	.LBB537:
 9581              	.LBB538:
 9582              	# sieve_extend.c:1014:     for (;range_stop < block_stop;) {
1014:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 9583              		.loc 1 1014 5 view .LVU3257
 9584 3987 4D85F6   		test	r14, r14	# prephitmp_1432
 9585              	.LBE538:
 9586              	.LBE537:
 9587              	.LBB614:
 9588              	.LBB534:
 9589              	# sieve_extend.c:107:     sieve->bitarray = aligned_alloc((size_t)anticiped_cache_line_bytesize, (s
GAS LISTING /tmp/ccr2dACi.s 			page 266


 107:sieve_extend.c ****     sieve->bits     = size >> 1;
 9590              		.loc 1 107 21 view .LVU3258
 9591 398a 498907   		mov	QWORD PTR [r15], rax	# sieve_92->bitarray, _97
 108:sieve_extend.c ****     sieve->size     = size;
 9592              		.loc 1 108 5 is_stmt 1 view .LVU3259
 9593              	# sieve_extend.c:108:     sieve->bits     = size >> 1;
 108:sieve_extend.c ****     sieve->size     = size;
 9594              		.loc 1 108 21 is_stmt 0 view .LVU3260
 9595 398d 4D897708 		mov	QWORD PTR 8[r15], r14	# sieve_92->bits, prephitmp_1432
 109:sieve_extend.c **** 
 9596              		.loc 1 109 5 is_stmt 1 view .LVU3261
 9597              	# sieve_extend.c:109:     sieve->size     = size;
 109:sieve_extend.c **** 
 9598              		.loc 1 109 21 is_stmt 0 view .LVU3262
 9599 3991 49895F10 		mov	QWORD PTR 16[r15], rbx	# sieve_92->size, maxints
 113:sieve_extend.c **** }
 9600              		.loc 1 113 5 is_stmt 1 view .LVU3263
 9601              	.LVL479:
 113:sieve_extend.c **** }
 9602              		.loc 1 113 5 is_stmt 0 view .LVU3264
 9603              	.LBE534:
 9604              	.LBE614:
1045:sieve_extend.c ****     bitword_t* bitarray = sieve->bitarray;
 9605              		.loc 1 1045 5 is_stmt 1 view .LVU3265
1046:sieve_extend.c **** 
 9606              		.loc 1 1046 5 view .LVU3266
1048:sieve_extend.c **** 
 9607              		.loc 1 1048 5 view .LVU3267
1051:sieve_extend.c ****     extendSieve(bitarray, block.pattern_start, block.pattern_size, sieve->bits);
 9608              		.loc 1 1051 5 view .LVU3268
 9609              	.LBB615:
 9610              	.LBI537:
1004:sieve_extend.c ****     register counter_t prime   = 0;
 9611              		.loc 1 1004 21 view .LVU3269
 9612              	.LBB607:
1005:sieve_extend.c ****     counter_t patternsize_bits = 1;
 9613              		.loc 1 1005 5 view .LVU3270
1006:sieve_extend.c ****     counter_t pattern_start    = 0;
 9614              		.loc 1 1006 5 view .LVU3271
1007:sieve_extend.c ****     counter_t range_stop       = block_start;
 9615              		.loc 1 1007 5 view .LVU3272
1008:sieve_extend.c ****     bitword_t* bitarray        = sieve->bitarray;
 9616              		.loc 1 1008 5 view .LVU3273
1009:sieve_extend.c ****     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 };
 9617              		.loc 1 1009 5 view .LVU3274
1010:sieve_extend.c **** 
 9618              		.loc 1 1010 5 view .LVU3275
1012:sieve_extend.c ****     
 9619              		.loc 1 1012 5 view .LVU3276
 9620              	# sieve_extend.c:1012:     sieve->bitarray[0] = SAFE_ZERO; // only the first word has to be cleared
1012:sieve_extend.c ****     
 9621              		.loc 1 1012 24 is_stmt 0 view .LVU3277
 9622 3995 48C70000 		mov	QWORD PTR [rax], 0	# MEM[(uint64_t *)_97],
 9622      000000
1014:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 9623              		.loc 1 1014 5 is_stmt 1 view .LVU3278
1014:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
GAS LISTING /tmp/ccr2dACi.s 			page 267


 9624              		.loc 1 1014 11 view .LVU3279
 9625              	# sieve_extend.c:1014:     for (;range_stop < block_stop;) {
1014:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 9626              		.loc 1 1014 5 is_stmt 0 view .LVU3280
 9627 399c 0F843C1C 		je	.L1451	#,
 9627      0000
 9628 39a2 4989C7   		mov	r15, rax	# _97, _97
 9629              	# sieve_extend.c:1005:     register counter_t prime   = 0;
1005:sieve_extend.c ****     counter_t patternsize_bits = 1;
 9630              		.loc 1 1005 24 view .LVU3281
 9631 39a5 31C9     		xor	ecx, ecx	# prime
 9632              	# sieve_extend.c:1007:     counter_t pattern_start    = 0;
1007:sieve_extend.c ****     counter_t range_stop       = block_start;
 9633              		.loc 1 1007 15 view .LVU3282
 9634 39a7 48C74424 		mov	QWORD PTR 16[rsp], 0	# %sfp,
 9634      10000000 
 9634      00
 9635              	# sieve_extend.c:1010:     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0
1010:sieve_extend.c **** 
 9636              		.loc 1 1010 18 view .LVU3283
 9637 39b0 31D2     		xor	edx, edx	# block$pattern_size
 9638 39b2 31F6     		xor	esi, esi	# block$pattern_start
 9639              	# sieve_extend.c:1006:     counter_t patternsize_bits = 1;
1006:sieve_extend.c ****     counter_t pattern_start    = 0;
 9640              		.loc 1 1006 15 view .LVU3284
 9641 39b4 41BE0100 		mov	r14d, 1	# patternsize_bits,
 9641      0000
 9642              	.LVL480:
 9643              	.LBB539:
 9644              	# sieve_extend.c:1015:         prime = searchBitFalse(bitarray, prime+1);
1015:sieve_extend.c ****         counter_t start = prime * prime * 2 + prime * 2;
 9645              		.loc 1 1015 17 view .LVU3285
 9646 39ba 41BD0100 		mov	r13d, 1	# index,
 9646      0000
 9647              	.LVL481:
 9648              		.p2align 4
 9649              		.p2align 3
 9650              	.L842:
 9651              	.LBB540:
 9652              	.LBB541:
 124:sieve_extend.c **** }
 9653              		.loc 1 124 5 is_stmt 1 view .LVU3286
 124:sieve_extend.c **** }
 9654              		.loc 1 124 5 is_stmt 0 view .LVU3287
 9655              	.LBE541:
 9656              	.LBE540:
1016:sieve_extend.c ****         if unlikely(start > block_stop) break;
 9657              		.loc 1 1016 9 is_stmt 1 view .LVU3288
 9658              	# sieve_extend.c:1016:         counter_t start = prime * prime * 2 + prime * 2;
1016:sieve_extend.c ****         if unlikely(start > block_stop) break;
 9659              		.loc 1 1016 45 is_stmt 0 view .LVU3289
 9660 39c0 498D5D01 		lea	rbx, 1[r13]	# index,
 9661 39c4 4F8D642D 		lea	r12, [r13+r13]	# _687,
 9661      00
 9662              	# sieve_extend.c:1016:         counter_t start = prime * prime * 2 + prime * 2;
1016:sieve_extend.c ****         if unlikely(start > block_stop) break;
 9663              		.loc 1 1016 19 view .LVU3290
GAS LISTING /tmp/ccr2dACi.s 			page 268


 9664 39c9 4889DD   		mov	rbp, rbx	# index, index
 9665 39cc 490FAFEC 		imul	rbp, r12	# index, _687
 9666              	.LVL482:
1017:sieve_extend.c **** 
 9667              		.loc 1 1017 9 is_stmt 1 view .LVU3291
 9668              	# sieve_extend.c:1017:         if unlikely(start > block_stop) break;
1017:sieve_extend.c **** 
 9669              		.loc 1 1017 12 is_stmt 0 view .LVU3292
 9670 39d0 483B6C24 		cmp	rbp, QWORD PTR 8[rsp]	# index, %sfp
 9670      08
 9671 39d5 0F87E609 		ja	.L1452	#,
 9671      0000
1019:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 9672              		.loc 1 1019 9 is_stmt 1 view .LVU3293
 9673              	# sieve_extend.c:1019:         const counter_t step  = prime * 2 + 1;
1019:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 9674              		.loc 1 1019 25 is_stmt 0 view .LVU3294
 9675 39db 4983C401 		add	r12, 1	# step,
 9676              	.LVL483:
1020:sieve_extend.c **** 
 9677              		.loc 1 1020 9 is_stmt 1 view .LVU3295
 9678              	# sieve_extend.c:1020:         if (block_start >= (prime + 1)) start = block_start + prime + prime 
1020:sieve_extend.c **** 
 9679              		.loc 1 1020 12 is_stmt 0 view .LVU3296
 9680 39df 4885DB   		test	rbx, rbx	# index
 9681 39e2 7516     		jne	.L848	#,
1020:sieve_extend.c **** 
 9682              		.loc 1 1020 41 is_stmt 1 view .LVU3297
 9683              	# sieve_extend.c:1020:         if (block_start >= (prime + 1)) start = block_start + prime + prime 
1020:sieve_extend.c **** 
 9684              		.loc 1 1020 102 is_stmt 0 view .LVU3298
 9685 39e4 48C7C0FF 		mov	rax, -1	# tmp566,
 9685      FFFFFF
 9686 39eb 31D2     		xor	edx, edx	# tmp565
 9687 39ed 49F7F4   		div	r12	# step
 9688              	# sieve_extend.c:1020:         if (block_start >= (prime + 1)) start = block_start + prime + prime 
1020:sieve_extend.c **** 
 9689              		.loc 1 1020 47 view .LVU3299
 9690 39f0 48C7C5FE 		mov	rbp, -2	# tmp567,
 9690      FFFFFF
 9691              	.LVL484:
1020:sieve_extend.c **** 
 9692              		.loc 1 1020 47 view .LVU3300
 9693 39f7 4829D5   		sub	rbp, rdx	# index, tmp565
 9694              	.LVL485:
 9695              	.L848:
1022:sieve_extend.c ****         block.pattern_size = patternsize_bits;
 9696              		.loc 1 1022 9 is_stmt 1 view .LVU3301
 9697              	# sieve_extend.c:1022:         range_stop = block_start + patternsize_bits * step * 2;  // range is
1022:sieve_extend.c ****         block.pattern_size = patternsize_bits;
 9698              		.loc 1 1022 53 is_stmt 0 view .LVU3302
 9699 39fa 4C89E6   		mov	rsi, r12	# _68, step
 9700 39fd 490FAFF6 		imul	rsi, r14	# _68, patternsize_bits
 9701 3a01 48897424 		mov	QWORD PTR 32[rsp], rsi	# %sfp, _68
 9701      20
 9702              	# sieve_extend.c:1022:         range_stop = block_start + patternsize_bits * step * 2;  // range is
1022:sieve_extend.c ****         block.pattern_size = patternsize_bits;
GAS LISTING /tmp/ccr2dACi.s 			page 269


 9703              		.loc 1 1022 60 view .LVU3303
 9704 3a06 4C8D0436 		lea	r8, [rsi+rsi]	# _69,
 9705              	.LVL486:
1023:sieve_extend.c ****         block.pattern_start = pattern_start;
 9706              		.loc 1 1023 9 is_stmt 1 view .LVU3304
1024:sieve_extend.c ****         if (range_stop > block_stop) return block; //range_stop = block_stop;
 9707              		.loc 1 1024 9 view .LVU3305
1025:sieve_extend.c **** 
 9708              		.loc 1 1025 9 view .LVU3306
 9709              	# sieve_extend.c:1025:         if (range_stop > block_stop) return block; //range_stop = block_stop
1025:sieve_extend.c **** 
 9710              		.loc 1 1025 12 is_stmt 0 view .LVU3307
 9711 3a0a 4C3B4424 		cmp	r8, QWORD PTR 8[rsp]	# _69, %sfp
 9711      08
 9712 3a0f 0F879F1B 		ja	.L1453	#,
 9712      0000
1027:sieve_extend.c ****             pattern_start = block_start | patternsize_bits;
 9713              		.loc 1 1027 9 is_stmt 1 view .LVU3308
 9714 3a15 488B7C24 		mov	rdi, QWORD PTR 16[rsp]	# pattern_start, %sfp
 9714      10
 9715              	# sieve_extend.c:1027:         if (patternsize_bits>1) {
1027:sieve_extend.c ****             pattern_start = block_start | patternsize_bits;
 9716              		.loc 1 1027 12 is_stmt 0 view .LVU3309
 9717 3a1a 4983FE01 		cmp	r14, 1	# patternsize_bits,
 9718 3a1e 48897C24 		mov	QWORD PTR 24[rsp], rdi	# %sfp, pattern_start
 9718      18
 9719 3a23 0F872F01 		ja	.L1454	#,
 9719      0000
 9720              	.LVL487:
 9721              	.L851:
1031:sieve_extend.c **** 
 9722              		.loc 1 1031 9 is_stmt 1 view .LVU3310
1033:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitarray, start, step, range_
 9723              		.loc 1 1033 9 view .LVU3311
 9724              	# sieve_extend.c:1033:         if      (step < SMALLSTEP_FASTER)      setBitsTrue_smallStep (bitarr
1033:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitarray, start, step, range_
 9725              		.loc 1 1033 17 is_stmt 0 view .LVU3312
 9726 3a29 4C3B2500 		cmp	r12, QWORD PTR global_SMALLSTEP_FASTER[rip]	# step, global_SMALLSTEP_FASTER
 9726      000000
 9727 3a30 0F827A01 		jb	.L1455	#,
 9727      0000
 9728              	.L855:
1034:sieve_extend.c ****         else if (step < WORD_SIZE_counter * 4) setBitsTrue_largeRange_vector(bitarray, start, step,
 9729              		.loc 1 1034 14 is_stmt 1 view .LVU3313
 9730              	# sieve_extend.c:1034:         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitarr
1034:sieve_extend.c ****         else if (step < WORD_SIZE_counter * 4) setBitsTrue_largeRange_vector(bitarray, start, step,
 9731              		.loc 1 1034 17 is_stmt 0 view .LVU3314
 9732 3a36 4C3B2500 		cmp	r12, QWORD PTR global_MEDIUMSTEP_FASTER[rip]	# step, global_MEDIUMSTEP_FASTER
 9732      000000
 9733 3a3d 0F828D06 		jb	.L1456	#,
 9733      0000
1035:sieve_extend.c ****         else                                   setBitsTrue_largeRange(bitarray, start, step, range_
 9734              		.loc 1 1035 14 is_stmt 1 view .LVU3315
 9735              	# sieve_extend.c:1035:         else if (step < WORD_SIZE_counter * 4) setBitsTrue_largeRange_vector
1035:sieve_extend.c ****         else                                   setBitsTrue_largeRange(bitarray, start, step, range_
 9736              		.loc 1 1035 17 is_stmt 0 view .LVU3316
 9737 3a43 4981FCFF 		cmp	r12, 255	# step,
GAS LISTING /tmp/ccr2dACi.s 			page 270


 9737      000000
 9738 3a4a 0F876004 		ja	.L878	#,
 9738      0000
1035:sieve_extend.c ****         else                                   setBitsTrue_largeRange(bitarray, start, step, range_
 9739              		.loc 1 1035 48 is_stmt 1 view .LVU3317
 9740 3a50 4C89C1   		mov	rcx, r8	#, _69
 9741 3a53 4C89E2   		mov	rdx, r12	#, step
 9742 3a56 4889EE   		mov	rsi, rbp	#, index
 9743 3a59 4C89FF   		mov	rdi, r15	#, _97
 9744 3a5c 4C894424 		mov	QWORD PTR 40[rsp], r8	# %sfp, _69
 9744      28
 9745 3a61 E8AADAFF 		call	setBitsTrue_largeRange_vector	#
 9745      FF
 9746              	.LVL488:
 9747 3a66 4C8B4424 		mov	r8, QWORD PTR 40[rsp]	# _69, %sfp
 9747      28
 9748              	.LVL489:
 9749              	.L859:
1035:sieve_extend.c ****         else                                   setBitsTrue_largeRange(bitarray, start, step, range_
 9750              		.loc 1 1035 48 is_stmt 0 view .LVU3318
 9751              	.LBE539:
1014:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 9752              		.loc 1 1014 11 is_stmt 1 view .LVU3319
 9753              	# sieve_extend.c:1014:     for (;range_stop < block_stop;) {
1014:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 9754              		.loc 1 1014 5 is_stmt 0 view .LVU3320
 9755 3a6b 4C3B4424 		cmp	r8, QWORD PTR 8[rsp]	# _69, %sfp
 9755      08
 9756 3a70 0F83FC03 		jnb	.L1457	#,
 9756      0000
 9757              	.LVL490:
 9758              	.L885:
 9759              	.LBB601:
1015:sieve_extend.c ****         counter_t start = prime * prime * 2 + prime * 2;
 9760              		.loc 1 1015 9 is_stmt 1 view .LVU3321
 9761              	.LBB543:
 9762              	.LBI540:
 122:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 9763              		.loc 1 122 25 view .LVU3322
 9764              	.LBB542:
 123:sieve_extend.c ****     return index;
 9765              		.loc 1 123 5 view .LVU3323
 123:sieve_extend.c ****     return index;
 9766              		.loc 1 123 11 view .LVU3324
 9767              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9768              		.loc 1 123 21 is_stmt 0 view .LVU3325
 9769 3a76 4889D9   		mov	rcx, rbx	# tmp553, index
 9770 3a79 48C1E906 		shr	rcx, 6	# tmp553,
 9771              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9772              		.loc 1 123 12 view .LVU3326
 9773 3a7d 4D8B14CF 		mov	r10, QWORD PTR [r15+rcx*8]	# *_933,* _97
 9774              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9775              		.loc 1 123 11 view .LVU3327
 9776 3a81 490FA3DA 		bt	r10, rbx	# *_933, index
GAS LISTING /tmp/ccr2dACi.s 			page 271


 9777 3a85 0F83A500 		jnc	.L844	#,
 9777      0000
 123:sieve_extend.c ****     return index;
 9778              		.loc 1 123 58 is_stmt 1 view .LVU3328
 9779              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9780              		.loc 1 123 63 is_stmt 0 view .LVU3329
 9781 3a8b 4C8D4B01 		lea	r9, 1[rbx]	# tmp849,
 9782              	.LVL491:
 9783              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9784              		.loc 1 123 21 view .LVU3330
 9785 3a8f 4C89CD   		mov	rbp, r9	# tmp558, index
 9786              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9787              		.loc 1 123 63 view .LVU3331
 9788 3a92 4C89CB   		mov	rbx, r9	# index, tmp849
 123:sieve_extend.c ****     return index;
 9789              		.loc 1 123 11 is_stmt 1 view .LVU3332
 9790              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9791              		.loc 1 123 21 is_stmt 0 view .LVU3333
 9792 3a95 48C1ED06 		shr	rbp, 6	# tmp558,
 9793              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9794              		.loc 1 123 12 view .LVU3334
 9795 3a99 498B34EF 		mov	rsi, QWORD PTR [r15+rbp*8]	# *_49, *_49
 9796              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9797              		.loc 1 123 11 view .LVU3335
 9798 3a9d 4C0FA3CE 		bt	rsi, r9	# *_49, index
 9799 3aa1 0F838900 		jnc	.L844	#,
 9799      0000
 123:sieve_extend.c ****     return index;
 9800              		.loc 1 123 58 is_stmt 1 view .LVU3336
 9801              	.LVL492:
 9802              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9803              		.loc 1 123 63 is_stmt 0 view .LVU3337
 9804 3aa7 4883C301 		add	rbx, 1	# index,
 9805              	.LVL493:
 123:sieve_extend.c ****     return index;
 9806              		.loc 1 123 11 is_stmt 1 view .LVU3338
 9807              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9808              		.loc 1 123 21 is_stmt 0 view .LVU3339
 9809 3aab 4889DF   		mov	rdi, rbx	# tmp1142, index
 9810 3aae 48C1EF06 		shr	rdi, 6	# tmp1142,
 9811              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9812              		.loc 1 123 12 view .LVU3340
 9813 3ab2 4D8B1CFF 		mov	r11, QWORD PTR [r15+rdi*8]	# *_49, *_49
 9814              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9815              		.loc 1 123 11 view .LVU3341
 9816 3ab6 490FA3DB 		bt	r11, rbx	# *_49, index
 9817 3aba 7374     		jnc	.L844	#,
GAS LISTING /tmp/ccr2dACi.s 			page 272


 123:sieve_extend.c ****     return index;
 9818              		.loc 1 123 58 is_stmt 1 view .LVU3342
 9819              	.LVL494:
 9820              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9821              		.loc 1 123 63 is_stmt 0 view .LVU3343
 9822 3abc 498D5902 		lea	rbx, 2[r9]	# index,
 9823              	.LVL495:
 123:sieve_extend.c ****     return index;
 9824              		.loc 1 123 11 is_stmt 1 view .LVU3344
 9825              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9826              		.loc 1 123 21 is_stmt 0 view .LVU3345
 9827 3ac0 4889D8   		mov	rax, rbx	# tmp1146, index
 9828 3ac3 48C1E806 		shr	rax, 6	# tmp1146,
 9829              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9830              		.loc 1 123 12 view .LVU3346
 9831 3ac7 4D8B04C7 		mov	r8, QWORD PTR [r15+rax*8]	# *_49, *_49
 9832              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9833              		.loc 1 123 11 view .LVU3347
 9834 3acb 490FA3D8 		bt	r8, rbx	# *_49, index
 9835 3acf 735F     		jnc	.L844	#,
 123:sieve_extend.c ****     return index;
 9836              		.loc 1 123 58 is_stmt 1 view .LVU3348
 9837              	.LVL496:
 9838              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9839              		.loc 1 123 63 is_stmt 0 view .LVU3349
 9840 3ad1 498D5903 		lea	rbx, 3[r9]	# index,
 9841              	.LVL497:
 123:sieve_extend.c ****     return index;
 9842              		.loc 1 123 11 is_stmt 1 view .LVU3350
 9843              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9844              		.loc 1 123 21 is_stmt 0 view .LVU3351
 9845 3ad5 4889DA   		mov	rdx, rbx	# tmp1150, index
 9846 3ad8 48C1EA06 		shr	rdx, 6	# tmp1150,
 9847              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9848              		.loc 1 123 12 view .LVU3352
 9849 3adc 4D8B24D7 		mov	r12, QWORD PTR [r15+rdx*8]	# *_49, *_49
 9850              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9851              		.loc 1 123 11 view .LVU3353
 9852 3ae0 490FA3DC 		bt	r12, rbx	# *_49, index
 9853 3ae4 734A     		jnc	.L844	#,
 123:sieve_extend.c ****     return index;
 9854              		.loc 1 123 58 is_stmt 1 view .LVU3354
 9855              	.LVL498:
 9856              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9857              		.loc 1 123 63 is_stmt 0 view .LVU3355
 9858 3ae6 498D5904 		lea	rbx, 4[r9]	# index,
 9859              	.LVL499:
 123:sieve_extend.c ****     return index;
GAS LISTING /tmp/ccr2dACi.s 			page 273


 9860              		.loc 1 123 11 is_stmt 1 view .LVU3356
 9861              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9862              		.loc 1 123 21 is_stmt 0 view .LVU3357
 9863 3aea 4889D9   		mov	rcx, rbx	# tmp1154, index
 9864 3aed 48C1E906 		shr	rcx, 6	# tmp1154,
 9865              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9866              		.loc 1 123 12 view .LVU3358
 9867 3af1 4D8B14CF 		mov	r10, QWORD PTR [r15+rcx*8]	# *_49, *_49
 9868              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9869              		.loc 1 123 11 view .LVU3359
 9870 3af5 490FA3DA 		bt	r10, rbx	# *_49, index
 9871 3af9 7335     		jnc	.L844	#,
 123:sieve_extend.c ****     return index;
 9872              		.loc 1 123 58 is_stmt 1 view .LVU3360
 9873              	.LVL500:
 9874              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9875              		.loc 1 123 63 is_stmt 0 view .LVU3361
 9876 3afb 498D5905 		lea	rbx, 5[r9]	# index,
 9877              	.LVL501:
 123:sieve_extend.c ****     return index;
 9878              		.loc 1 123 11 is_stmt 1 view .LVU3362
 9879              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9880              		.loc 1 123 21 is_stmt 0 view .LVU3363
 9881 3aff 4889DD   		mov	rbp, rbx	# tmp1158, index
 9882 3b02 48C1ED06 		shr	rbp, 6	# tmp1158,
 9883              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9884              		.loc 1 123 12 view .LVU3364
 9885 3b06 498B34EF 		mov	rsi, QWORD PTR [r15+rbp*8]	# *_49, *_49
 9886              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9887              		.loc 1 123 11 view .LVU3365
 9888 3b0a 480FA3DE 		bt	rsi, rbx	# *_49, index
 9889 3b0e 7320     		jnc	.L844	#,
 123:sieve_extend.c ****     return index;
 9890              		.loc 1 123 58 is_stmt 1 view .LVU3366
 9891              	.LVL502:
 9892              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9893              		.loc 1 123 63 is_stmt 0 view .LVU3367
 9894 3b10 498D5906 		lea	rbx, 6[r9]	# index,
 9895              	.LVL503:
 123:sieve_extend.c ****     return index;
 9896              		.loc 1 123 11 is_stmt 1 view .LVU3368
 9897              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9898              		.loc 1 123 21 is_stmt 0 view .LVU3369
 9899 3b14 4889DF   		mov	rdi, rbx	# tmp1162, index
 9900 3b17 48C1EF06 		shr	rdi, 6	# tmp1162,
 9901              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9902              		.loc 1 123 12 view .LVU3370
GAS LISTING /tmp/ccr2dACi.s 			page 274


 9903 3b1b 4D8B1CFF 		mov	r11, QWORD PTR [r15+rdi*8]	# *_49, *_49
 9904              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9905              		.loc 1 123 11 view .LVU3371
 9906 3b1f 490FA3DB 		bt	r11, rbx	# *_49, index
 9907 3b23 730B     		jnc	.L844	#,
 123:sieve_extend.c ****     return index;
 9908              		.loc 1 123 58 is_stmt 1 view .LVU3372
 9909              	.LVL504:
 9910              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9911              		.loc 1 123 63 is_stmt 0 view .LVU3373
 9912 3b25 498D5907 		lea	rbx, 7[r9]	# index,
 9913              	.LVL505:
 123:sieve_extend.c ****     return index;
 9914              		.loc 1 123 11 is_stmt 1 view .LVU3374
 9915 3b29 E948FFFF 		jmp	.L885	#
 9915      FF
 9916              	.LVL506:
 9917 3b2e 6690     		.p2align 4,,7
 9918              		.p2align 3
 9919              	.L844:
 123:sieve_extend.c ****     return index;
 9920              		.loc 1 123 11 is_stmt 0 view .LVU3375
 9921              	.LBE542:
 9922              	.LBE543:
 9923              	.LBE601:
 9924              	.LBE607:
 9925              	.LBE615:
 9926              	# sieve_extend.c:1043: static struct sieve_state *sieve(const counter_t maxints, const counter_t bl
1043:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 9927              		.loc 1 1043 86 view .LVU3376
 9928 3b30 4C89F2   		mov	rdx, r14	# block$pattern_size, patternsize_bits
 9929 3b33 4C89E9   		mov	rcx, r13	# prime, index
 9930 3b36 4C8B7424 		mov	r14, QWORD PTR 24[rsp]	# pattern_start, %sfp
 9930      18
 9931 3b3b 4989DD   		mov	r13, rbx	# index, index
 9932              	.LVL507:
1043:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 9933              		.loc 1 1043 86 view .LVU3377
 9934 3b3e 488B7424 		mov	rsi, QWORD PTR 16[rsp]	# block$pattern_start, %sfp
 9934      10
 9935              	.LVL508:
1043:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 9936              		.loc 1 1043 86 view .LVU3378
 9937 3b43 4C897424 		mov	QWORD PTR 16[rsp], r14	# %sfp, pattern_start
 9937      10
 9938              	.LVL509:
1043:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 9939              		.loc 1 1043 86 view .LVU3379
 9940 3b48 4C8B7424 		mov	r14, QWORD PTR 32[rsp]	# patternsize_bits, %sfp
 9940      20
 9941              	.LVL510:
1043:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 9942              		.loc 1 1043 86 view .LVU3380
 9943 3b4d E96EFEFF 		jmp	.L842	#
 9943      FF
GAS LISTING /tmp/ccr2dACi.s 			page 275


 9944              	.LVL511:
 9945              		.p2align 4,,7
 9946 3b52 660F1F44 		.p2align 3
 9946      0000
 9947              	.L1454:
 9948              	.LBB616:
 9949              	.LBB608:
 9950              	.LBB602:
1028:sieve_extend.c ****             extendSieve(bitarray, pattern_start, patternsize_bits, range_stop);
 9951              		.loc 1 1028 13 is_stmt 1 view .LVU3381
1029:sieve_extend.c ****         }
 9952              		.loc 1 1029 13 view .LVU3382
 9953              	.LBB544:
 9954              	.LBI544:
 908:sieve_extend.c ****     if (size < WORD_SIZE_counter)   {
 9955              		.loc 1 908 20 view .LVU3383
 9956              	.LBB545:
 909:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 9957              		.loc 1 909 5 view .LVU3384
 9958              	# sieve_extend.c:909:     if (size < WORD_SIZE_counter)   {
 909:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 9959              		.loc 1 909 8 is_stmt 0 view .LVU3385
 9960 3b58 4983FE3F 		cmp	r14, 63	# patternsize_bits,
 9961 3b5c 0F86231A 		jbe	.L1458	#,
 9961      0000
 914:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 9962              		.loc 1 914 5 is_stmt 1 view .LVU3386
 9963              	.LVL512:
 915:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 9964              		.loc 1 915 5 view .LVU3387
 9965              	# sieve_extend.c:914:     const counter_t copy_start  = source_start + size;
 914:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 9966              		.loc 1 914 21 is_stmt 0 view .LVU3388
 9967 3b62 4F8D0C36 		lea	r9, [r14+r14]	# copy_start,
 9968              	# sieve_extend.c:916:     const bitshift_t source_bit = bitindex_calc(source_start);
 916:sieve_extend.c **** 
 9969              		.loc 1 916 22 view .LVU3389
 9970 3b66 4D89F2   		mov	r10, r14	# source_bit, patternsize_bits
 9971              	# sieve_extend.c:915:     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 915:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 9972              		.loc 1 915 22 view .LVU3390
 9973 3b69 4183E13F 		and	r9d, 63	# copy_bit,
 9974              	.LVL513:
 916:sieve_extend.c **** 
 9975              		.loc 1 916 5 is_stmt 1 view .LVU3391
 9976              	# sieve_extend.c:916:     const bitshift_t source_bit = bitindex_calc(source_start);
 916:sieve_extend.c **** 
 9977              		.loc 1 916 22 is_stmt 0 view .LVU3392
 9978 3b6d 4183E23F 		and	r10d, 63	# source_bit,
 9979              	.LVL514:
 918:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 9980              		.loc 1 918 5 is_stmt 1 view .LVU3393
 9981              	# sieve_extend.c:918:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 918:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 9982              		.loc 1 918 13 is_stmt 0 view .LVU3394
 9983 3b71 4D39D1   		cmp	r9, r10	# copy_bit, source_bit
 9984              	# sieve_extend.c:918:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
GAS LISTING /tmp/ccr2dACi.s 			page 276


 918:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 9985              		.loc 1 918 37 view .LVU3395
 9986 3b74 4C89C1   		mov	rcx, r8	#, _69
 9987 3b77 4C894424 		mov	QWORD PTR 40[rsp], r8	# %sfp, _69
 9987      28
 9988 3b7c 4C89F2   		mov	rdx, r14	#, patternsize_bits
 9989 3b7f 4C89F6   		mov	rsi, r14	#, patternsize_bits
 9990 3b82 4C89FF   		mov	rdi, r15	#, _97
 9991              	# sieve_extend.c:918:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 918:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 9992              		.loc 1 918 13 view .LVU3396
 9993 3b85 0F82EB0A 		jb	.L1459	#,
 9993      0000
 9994              	.LVL515:
 919:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 9995              		.loc 1 919 10 is_stmt 1 view .LVU3397
 9996              	# sieve_extend.c:919:     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, so
 919:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 9997              		.loc 1 919 13 is_stmt 0 view .LVU3398
 9998 3b8b 0F86D10A 		jbe	.L854	#,
 9998      0000
 919:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 9999              		.loc 1 919 37 is_stmt 1 view .LVU3399
 10000 3b91 E82ACBFF 		call	extendSieve_shiftright_ivdep	#
 10000      FF
 10001              	.LVL516:
 919:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 10002              		.loc 1 919 37 is_stmt 0 view .LVU3400
 10003 3b96 4C897424 		mov	QWORD PTR 24[rsp], r14	# %sfp, patternsize_bits
 10003      18
 10004              	.LBE545:
 10005              	.LBE544:
 10006              	# sieve_extend.c:1033:         if      (step < SMALLSTEP_FASTER)      setBitsTrue_smallStep (bitarr
1033:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitarray, start, step, range_
 10007              		.loc 1 1033 17 view .LVU3401
 10008 3b9b 4C3B2500 		cmp	r12, QWORD PTR global_SMALLSTEP_FASTER[rip]	# step, global_SMALLSTEP_FASTER
 10008      000000
 10009              	.LBB549:
 10010              	.LBB546:
 10011 3ba2 4C8B4424 		mov	r8, QWORD PTR 40[rsp]	# _69, %sfp
 10011      28
 10012              	.LVL517:
1033:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitarray, start, step, range_
 10013              		.loc 1 1033 17 view .LVU3402
 10014              	.LBE546:
 10015              	.LBE549:
1031:sieve_extend.c **** 
 10016              		.loc 1 1031 9 is_stmt 1 view .LVU3403
1033:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitarray, start, step, range_
 10017              		.loc 1 1033 9 view .LVU3404
 10018              	# sieve_extend.c:1033:         if      (step < SMALLSTEP_FASTER)      setBitsTrue_smallStep (bitarr
1033:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitarray, start, step, range_
 10019              		.loc 1 1033 17 is_stmt 0 view .LVU3405
 10020 3ba7 0F8389FE 		jnb	.L855	#,
 10020      FFFF
 10021              	.LVL518:
 10022 3bad 0F1F00   		.p2align 4
GAS LISTING /tmp/ccr2dACi.s 			page 277


 10023              		.p2align 3
 10024              	.L1455:
 10025              	.LBB550:
 10026              	.LBB551:
 10027              	.LBB552:
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10028              		.loc 1 239 41 is_stmt 1 view .LVU3406
 10029              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10030              		.loc 1 239 5 is_stmt 0 view .LVU3407
 10031 3bb0 4983FC40 		cmp	r12, 64	# step,
 10032 3bb4 0F871A1A 		ja	.L956	#,
 10032      0000
 10033 3bba 4C89E7   		mov	rdi, r12	# patternsize, step
 10034              	.LBE552:
 10035              	# sieve_extend.c:238: 	register bitword_t pattern = BITWORD_SHIFTBIT;
 238:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; patternsize += patternsi
 10036              		.loc 1 238 21 view .LVU3408
 10037 3bbd B9010000 		mov	ecx, 1	# pattern,
 10037      00
 10038              	.LVL519:
 10039              	.L857:
 10040              	.LBB553:
 240:sieve_extend.c **** 
 10041              		.loc 1 240 9 is_stmt 1 view .LVU3409
 10042              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10043              		.loc 1 239 88 is_stmt 0 view .LVU3410
 10044 3bc2 4C8D1C3F 		lea	r11, [rdi+rdi]	# patternsize,
 10045              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 10046              		.loc 1 240 29 view .LVU3411
 10047 3bc6 C462C1F7 		shlx	r9, rcx, rdi	# _105, pattern, patternsize
 10047      C9
 10048              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 10049              		.loc 1 240 17 view .LVU3412
 10050 3bcb 4C09C9   		or	rcx, r9	# pattern, _105
 10051              	.LVL520:
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10052              		.loc 1 239 76 is_stmt 1 view .LVU3413
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10053              		.loc 1 239 41 view .LVU3414
 10054              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10055              		.loc 1 239 5 is_stmt 0 view .LVU3415
 10056 3bce 4983FB40 		cmp	r11, 64	# patternsize,
 10057 3bd2 0F87A800 		ja	.L856	#,
 10057      0000
 240:sieve_extend.c **** 
 10058              		.loc 1 240 9 is_stmt 1 view .LVU3416
 10059              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10060              		.loc 1 239 88 is_stmt 0 view .LVU3417
 10061 3bd8 488D04BD 		lea	rax, 0[0+rdi*4]	# patternsize,
 10061      00000000 
 10062              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
GAS LISTING /tmp/ccr2dACi.s 			page 278


 240:sieve_extend.c **** 
 10063              		.loc 1 240 29 view .LVU3418
 10064 3be0 C4E2A1F7 		shlx	rdx, rcx, r11	# _105, pattern, patternsize
 10064      D1
 10065              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 10066              		.loc 1 240 17 view .LVU3419
 10067 3be5 4809D1   		or	rcx, rdx	# pattern, _105
 10068              	.LVL521:
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10069              		.loc 1 239 76 is_stmt 1 view .LVU3420
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10070              		.loc 1 239 41 view .LVU3421
 10071              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10072              		.loc 1 239 5 is_stmt 0 view .LVU3422
 10073 3be8 4883F840 		cmp	rax, 64	# patternsize,
 10074 3bec 0F878E00 		ja	.L856	#,
 10074      0000
 240:sieve_extend.c **** 
 10075              		.loc 1 240 9 is_stmt 1 view .LVU3423
 10076              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10077              		.loc 1 239 88 is_stmt 0 view .LVU3424
 10078 3bf2 4C8D14FD 		lea	r10, 0[0+rdi*8]	# patternsize,
 10078      00000000 
 10079              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 10080              		.loc 1 240 29 view .LVU3425
 10081 3bfa C4E2F9F7 		shlx	rsi, rcx, rax	# _105, pattern, patternsize
 10081      F1
 10082              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 10083              		.loc 1 240 17 view .LVU3426
 10084 3bff 4809F1   		or	rcx, rsi	# pattern, _105
 10085              	.LVL522:
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10086              		.loc 1 239 76 is_stmt 1 view .LVU3427
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10087              		.loc 1 239 41 view .LVU3428
 10088              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10089              		.loc 1 239 5 is_stmt 0 view .LVU3429
 10090 3c02 4983FA40 		cmp	r10, 64	# patternsize,
 10091 3c06 7778     		ja	.L856	#,
 240:sieve_extend.c **** 
 10092              		.loc 1 240 9 is_stmt 1 view .LVU3430
 10093              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10094              		.loc 1 239 88 is_stmt 0 view .LVU3431
 10095 3c08 4989FB   		mov	r11, rdi	# patternsize, patternsize
 10096              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 10097              		.loc 1 240 29 view .LVU3432
 10098 3c0b C462A9F7 		shlx	r9, rcx, r10	# _105, pattern, patternsize
 10098      C9
 10099              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
GAS LISTING /tmp/ccr2dACi.s 			page 279


 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10100              		.loc 1 239 88 view .LVU3433
 10101 3c10 49C1E304 		sal	r11, 4	# patternsize,
 10102              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 10103              		.loc 1 240 17 view .LVU3434
 10104 3c14 4C09C9   		or	rcx, r9	# pattern, _105
 10105              	.LVL523:
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10106              		.loc 1 239 76 is_stmt 1 view .LVU3435
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10107              		.loc 1 239 41 view .LVU3436
 10108              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10109              		.loc 1 239 5 is_stmt 0 view .LVU3437
 10110 3c17 4983FB40 		cmp	r11, 64	# patternsize,
 10111 3c1b 7763     		ja	.L856	#,
 240:sieve_extend.c **** 
 10112              		.loc 1 240 9 is_stmt 1 view .LVU3438
 10113              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10114              		.loc 1 239 88 is_stmt 0 view .LVU3439
 10115 3c1d 4889F8   		mov	rax, rdi	# patternsize, patternsize
 10116              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 10117              		.loc 1 240 29 view .LVU3440
 10118 3c20 C4E2A1F7 		shlx	rdx, rcx, r11	# _105, pattern, patternsize
 10118      D1
 10119              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10120              		.loc 1 239 88 view .LVU3441
 10121 3c25 48C1E005 		sal	rax, 5	# patternsize,
 10122              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 10123              		.loc 1 240 17 view .LVU3442
 10124 3c29 4809D1   		or	rcx, rdx	# pattern, _105
 10125              	.LVL524:
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10126              		.loc 1 239 76 is_stmt 1 view .LVU3443
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10127              		.loc 1 239 41 view .LVU3444
 10128              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10129              		.loc 1 239 5 is_stmt 0 view .LVU3445
 10130 3c2c 4883F840 		cmp	rax, 64	# patternsize,
 10131 3c30 774E     		ja	.L856	#,
 240:sieve_extend.c **** 
 10132              		.loc 1 240 9 is_stmt 1 view .LVU3446
 10133              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10134              		.loc 1 239 88 is_stmt 0 view .LVU3447
 10135 3c32 4989FA   		mov	r10, rdi	# patternsize, patternsize
 10136              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 10137              		.loc 1 240 29 view .LVU3448
 10138 3c35 C4E2F9F7 		shlx	rsi, rcx, rax	# _105, pattern, patternsize
 10138      F1
GAS LISTING /tmp/ccr2dACi.s 			page 280


 10139              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10140              		.loc 1 239 88 view .LVU3449
 10141 3c3a 49C1E206 		sal	r10, 6	# patternsize,
 10142              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 10143              		.loc 1 240 17 view .LVU3450
 10144 3c3e 4809F1   		or	rcx, rsi	# pattern, _105
 10145              	.LVL525:
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10146              		.loc 1 239 76 is_stmt 1 view .LVU3451
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10147              		.loc 1 239 41 view .LVU3452
 10148              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10149              		.loc 1 239 5 is_stmt 0 view .LVU3453
 10150 3c41 4983FA40 		cmp	r10, 64	# patternsize,
 10151 3c45 7739     		ja	.L856	#,
 240:sieve_extend.c **** 
 10152              		.loc 1 240 9 is_stmt 1 view .LVU3454
 10153              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10154              		.loc 1 239 88 is_stmt 0 view .LVU3455
 10155 3c47 4989FB   		mov	r11, rdi	# patternsize, patternsize
 10156              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 10157              		.loc 1 240 29 view .LVU3456
 10158 3c4a C462A9F7 		shlx	r9, rcx, r10	# _105, pattern, patternsize
 10158      C9
 10159              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10160              		.loc 1 239 88 view .LVU3457
 10161 3c4f 49C1E307 		sal	r11, 7	# patternsize,
 10162              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 10163              		.loc 1 240 17 view .LVU3458
 10164 3c53 4C09C9   		or	rcx, r9	# pattern, _105
 10165              	.LVL526:
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10166              		.loc 1 239 76 is_stmt 1 view .LVU3459
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10167              		.loc 1 239 41 view .LVU3460
 10168              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10169              		.loc 1 239 5 is_stmt 0 view .LVU3461
 10170 3c56 4983FB40 		cmp	r11, 64	# patternsize,
 10171 3c5a 7724     		ja	.L856	#,
 240:sieve_extend.c **** 
 10172              		.loc 1 240 9 is_stmt 1 view .LVU3462
 10173              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10174              		.loc 1 239 88 is_stmt 0 view .LVU3463
 10175 3c5c 48C1E708 		sal	rdi, 8	# patternsize,
 10176              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 10177              		.loc 1 240 29 view .LVU3464
 10178 3c60 C4E2A1F7 		shlx	rdx, rcx, r11	# _105, pattern, patternsize
GAS LISTING /tmp/ccr2dACi.s 			page 281


 10178      D1
 10179              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 10180              		.loc 1 240 17 view .LVU3465
 10181 3c65 4809D1   		or	rcx, rdx	# pattern, _105
 10182              	.LVL527:
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10183              		.loc 1 239 76 is_stmt 1 view .LVU3466
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10184              		.loc 1 239 41 view .LVU3467
 10185              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10186              		.loc 1 239 5 is_stmt 0 view .LVU3468
 10187 3c68 4883FF40 		cmp	rdi, 64	# patternsize,
 10188 3c6c 0F8650FF 		jbe	.L857	#,
 10188      FFFF
 10189              	.LVL528:
 10190 3c72 66662E0F 		.p2align 4
 10190      1F840000 
 10190      0000000F 
 10190      1F00
 10191              		.p2align 3
 10192              	.L856:
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10193              		.loc 1 239 5 view .LVU3469
 10194              	.LBE553:
 245:sieve_extend.c ****     register counter_t range_start_word = wordindex(range_start);
 10195              		.loc 1 245 5 is_stmt 1 view .LVU3470
 10196              	# sieve_extend.c:245:     const counter_t range_stop_word = wordindex(range_stop);
 245:sieve_extend.c ****     register counter_t range_start_word = wordindex(range_start);
 10197              		.loc 1 245 21 is_stmt 0 view .LVU3471
 10198 3c80 4D89C2   		mov	r10, r8	# range_stop_word, _69
 10199              	# sieve_extend.c:246:     register counter_t range_start_word = wordindex(range_start);
 246:sieve_extend.c ****      if (range_start_word >= range_stop_word) { // shortcut
 10200              		.loc 1 246 24 view .LVU3472
 10201 3c83 4889EE   		mov	rsi, rbp	# range_start_word, index
 10202 3c86 48C1EE06 		shr	rsi, 6	# range_start_word,
 10203 3c8a 4489C0   		mov	eax, r8d	# tmp571, _69
 10204              	# sieve_extend.c:245:     const counter_t range_stop_word = wordindex(range_stop);
 245:sieve_extend.c ****     register counter_t range_start_word = wordindex(range_start);
 10205              		.loc 1 245 21 view .LVU3473
 10206 3c8d 49C1EA06 		shr	r10, 6	# range_stop_word,
 10207              	.LVL529:
 246:sieve_extend.c ****      if (range_start_word >= range_stop_word) { // shortcut
 10208              		.loc 1 246 5 is_stmt 1 view .LVU3474
 247:sieve_extend.c ****        bitarray[range_start_word] |= (pattern << bitindex(range_start)) & chopmask(range_stop);
 10209              		.loc 1 247 6 view .LVU3475
 10210 3c91 4D8D1CF7 		lea	r11, [r15+rsi*8]	# _1228,
 10211              	# sieve_extend.c:247:      if (range_start_word >= range_stop_word) { // shortcut
 247:sieve_extend.c ****        bitarray[range_start_word] |= (pattern << bitindex(range_start)) & chopmask(range_stop);
 10212              		.loc 1 247 9 is_stmt 0 view .LVU3476
 10213 3c95 4939F2   		cmp	r10, rsi	# range_stop_word, range_start_word
 10214 3c98 F7D0     		not	eax	# tmp571
 10215 3c9a 4D8B0B   		mov	r9, QWORD PTR [r11]	# pretmp_1229, MEM[(uint64_t *)_1228]
 10216 3c9d 48C7C7FF 		mov	rdi, -1	# tmp1614,
 10216      FFFFFF
 10217 3ca4 C4E2FBF7 		shrx	rdx, rdi, rax	# _1235, tmp1614, tmp571
GAS LISTING /tmp/ccr2dACi.s 			page 282


 10217      D7
 10218              	# sieve_extend.c:248:        bitarray[range_start_word] |= (pattern << bitindex(range_start)) & cho
 248:sieve_extend.c ****         //  debug if (step==13) { printf("After\n"); dump_bitarray(bitarray,10); }
 10219              		.loc 1 248 47 view .LVU3477
 10220 3ca9 C4E2D1F7 		shlx	rax, rcx, rbp	# tmp574, pattern, index
 10220      C1
 10221 3cae 48895424 		mov	QWORD PTR 40[rsp], rdx	# %sfp, _1235
 10221      28
 10222              	# sieve_extend.c:247:      if (range_start_word >= range_stop_word) { // shortcut
 247:sieve_extend.c ****        bitarray[range_start_word] |= (pattern << bitindex(range_start)) & chopmask(range_stop);
 10223              		.loc 1 247 9 view .LVU3478
 10224 3cb3 0F869A08 		jbe	.L1460	#,
 10224      0000
 253:sieve_extend.c **** 
 10225              		.loc 1 253 5 is_stmt 1 view .LVU3479
 10226              	# sieve_extend.c:253:     bitarray[range_start_word] |= (pattern << bitindex(range_start));
 253:sieve_extend.c **** 
 10227              		.loc 1 253 32 is_stmt 0 view .LVU3480
 10228 3cb9 4C09C8   		or	rax, r9	# tmp578, pretmp_1229
 10229              	# sieve_extend.c:257:    register bitshift_t pattern_size = WORD_SIZE_bitshift - (WORD_SIZE_bitshif
 257:sieve_extend.c ****    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 10230              		.loc 1 257 80 view .LVU3481
 10231 3cbc BF400000 		mov	edi, 64	# tmp579,
 10231      00
 10232 3cc1 31D2     		xor	edx, edx	# tmp580
 10233              	# sieve_extend.c:258:    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 258:sieve_extend.c ****    register bitshift_t shift = (bitindex_calc(range_start))%step ;
 10234              		.loc 1 258 24 view .LVU3482
 10235 3cc3 4D89E1   		mov	r9, r12	# pattern_shift, step
 10236              	# sieve_extend.c:253:     bitarray[range_start_word] |= (pattern << bitindex(range_start));
 253:sieve_extend.c **** 
 10237              		.loc 1 253 32 view .LVU3483
 10238 3cc6 498903   		mov	QWORD PTR [r11], rax	# MEM[(uint64_t *)_1228], tmp578
 257:sieve_extend.c ****    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 10239              		.loc 1 257 4 is_stmt 1 view .LVU3484
 10240              	# sieve_extend.c:257:    register bitshift_t pattern_size = WORD_SIZE_bitshift - (WORD_SIZE_bitshif
 257:sieve_extend.c ****    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 10241              		.loc 1 257 80 is_stmt 0 view .LVU3485
 10242 3cc9 4889F8   		mov	rax, rdi	# tmp581, tmp579
 10243 3ccc 49F7F4   		div	r12	# step
 10244              	# sieve_extend.c:259:    register bitshift_t shift = (bitindex_calc(range_start))%step ;
 259:sieve_extend.c ****    counter_t loop_range = range_stop_word - range_start_word;
 10245              		.loc 1 259 33 view .LVU3486
 10246 3ccf 4889E8   		mov	rax, rbp	# index, index
 10247 3cd2 83E03F   		and	eax, 63	# index,
 10248              	# sieve_extend.c:257:    register bitshift_t pattern_size = WORD_SIZE_bitshift - (WORD_SIZE_bitshif
 257:sieve_extend.c ****    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 10249              		.loc 1 257 24 view .LVU3487
 10250 3cd5 4829D7   		sub	rdi, rdx	# pattern_size, tmp580
 10251              	.LVL530:
 258:sieve_extend.c ****    register bitshift_t shift = (bitindex_calc(range_start))%step ;
 10252              		.loc 1 258 4 is_stmt 1 view .LVU3488
 10253              	# sieve_extend.c:258:    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 258:sieve_extend.c ****    register bitshift_t shift = (bitindex_calc(range_start))%step ;
 10254              		.loc 1 258 24 is_stmt 0 view .LVU3489
 10255 3cd8 4929D1   		sub	r9, rdx	# pattern_shift, tmp580
 10256              	.LVL531:
GAS LISTING /tmp/ccr2dACi.s 			page 283


 259:sieve_extend.c ****    counter_t loop_range = range_stop_word - range_start_word;
 10257              		.loc 1 259 4 is_stmt 1 view .LVU3490
 10258              	# sieve_extend.c:259:    register bitshift_t shift = (bitindex_calc(range_start))%step ;
 259:sieve_extend.c ****    counter_t loop_range = range_stop_word - range_start_word;
 10259              		.loc 1 259 24 is_stmt 0 view .LVU3491
 10260 3cdb 31D2     		xor	edx, edx	# tmp584
 10261 3cdd 49F7F4   		div	r12	# step
 10262              	.LVL532:
 260:sieve_extend.c ****    #pragma unroll
 10263              		.loc 1 260 4 is_stmt 1 view .LVU3492
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10264              		.loc 1 263 4 view .LVU3493
 10265              	.LBB554:
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10266              		.loc 1 263 9 view .LVU3494
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10267              		.loc 1 263 24 view .LVU3495
 10268              	# sieve_extend.c:263:    for (counter_t i=1; i <= loop_range; i++) {
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10269              		.loc 1 263 4 is_stmt 0 view .LVU3496
 10270 3ce0 4939F2   		cmp	r10, rsi	# range_stop_word, range_start_word
 10271 3ce3 0F847501 		je	.L862	#,
 10271      0000
 10272 3ce9 4B8D04D7 		lea	rax, [r15+r10*8]	# _1346,
 10273 3ced 89FD     		mov	ebp, edi	# _1237, pattern_size
 10274              	.LVL533:
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10275              		.loc 1 263 4 view .LVU3497
 10276 3cef 48894424 		mov	QWORD PTR 72[rsp], rax	# %sfp, _1346
 10276      48
 10277 3cf4 4C29D8   		sub	rax, r11	# tmp851, ivtmp.635
 10278 3cf7 4883E808 		sub	rax, 8	# tmp852,
 10279 3cfb 498D3411 		lea	rsi, [r9+rdx]	# ivtmp.633,
 10280              	.LVL534:
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10281              		.loc 1 263 4 view .LVU3498
 10282 3cff 48C1E803 		shr	rax, 3	# tmp850,
 10283 3d03 4C89DF   		mov	rdi, r11	# ivtmp.635, _1228
 10284              	.LVL535:
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10285              		.loc 1 263 4 view .LVU3499
 10286 3d06 4883C001 		add	rax, 1	# tmp853,
 10287 3d0a 83E003   		and	eax, 3	# tmp854,
 10288 3d0d 0F849900 		je	.L1403	#,
 10288      0000
 10289 3d13 4883F801 		cmp	rax, 1	# tmp854,
 10290 3d17 7460     		je	.L1164	#,
 10291 3d19 4883F802 		cmp	rax, 2	# tmp854,
 10292 3d1d 7432     		je	.L1165	#,
 10293              	.LVL536:
 10294              	.LBB555:
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10295              		.loc 1 264 9 is_stmt 1 view .LVU3500
 265:sieve_extend.c **** 
 10296              		.loc 1 265 8 view .LVU3501
 10297              	# sieve_extend.c:264:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
GAS LISTING /tmp/ccr2dACi.s 			page 284


 10298              		.loc 1 264 20 is_stmt 0 view .LVU3502
 10299 3d1f 4889F0   		mov	rax, rsi	# tmp1171, ivtmp.633
 10300 3d22 31D2     		xor	edx, edx	# totalshift
 10301              	.LVL537:
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10302              		.loc 1 264 20 view .LVU3503
 10303 3d24 49F7F4   		div	r12	# step
 10304 3d27 4883C708 		add	rdi, 8	# ivtmp.635,
 10305 3d2b 4C01CE   		add	rsi, r9	# ivtmp.633, pattern_shift
 10306              	.LVL538:
 10307              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10308              		.loc 1 265 91 view .LVU3504
 10309 3d2e C4E2E9F7 		shlx	rax, rcx, rdx	# tmp1172, pattern, totalshift
 10309      C1
 10310              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10311              		.loc 1 265 37 view .LVU3505
 10312 3d33 490B4308 		or	rax, QWORD PTR 8[r11]	# tmp1172, MEM[base: _1351, offset: 8B]
 10313 3d37 48894424 		mov	QWORD PTR 80[rsp], rax	# %sfp, tmp1172
 10313      50
 10314              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10315              		.loc 1 265 66 view .LVU3506
 10316 3d3c 89E8     		mov	eax, ebp	# tmp1174, _1237
 10317 3d3e 29D0     		sub	eax, edx	# tmp1174, totalshift
 10318              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10319              		.loc 1 265 50 view .LVU3507
 10320 3d40 C4E2FBF7 		shrx	rdx, rcx, rax	# tmp1175, pattern, tmp1174
 10320      D1
 10321              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10322              		.loc 1 265 37 view .LVU3508
 10323 3d45 488B4424 		mov	rax, QWORD PTR 80[rsp]	# tmp1173, %sfp
 10323      50
 10324 3d4a 4809D0   		or	rax, rdx	# tmp1173, tmp1175
 10325 3d4d 49894308 		mov	QWORD PTR 8[r11], rax	# MEM[base: _1351, offset: 8B], tmp1176
 10326              	.LBE555:
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10327              		.loc 1 263 41 is_stmt 1 view .LVU3509
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10328              		.loc 1 263 24 view .LVU3510
 10329              	.L1165:
 10330              	.LBB556:
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10331              		.loc 1 264 9 view .LVU3511
 265:sieve_extend.c **** 
 10332              		.loc 1 265 8 view .LVU3512
 10333              	# sieve_extend.c:264:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10334              		.loc 1 264 20 is_stmt 0 view .LVU3513
 10335 3d51 4889F0   		mov	rax, rsi	# tmp1178, ivtmp.633
 10336 3d54 31D2     		xor	edx, edx	# totalshift
 10337 3d56 49F7F4   		div	r12	# step
 10338              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
GAS LISTING /tmp/ccr2dACi.s 			page 285


 10339              		.loc 1 265 66 view .LVU3514
 10340 3d59 4189EB   		mov	r11d, ebp	# tmp1181, _1237
 10341 3d5c 4C01CE   		add	rsi, r9	# ivtmp.633, pattern_shift
 10342 3d5f 4883C708 		add	rdi, 8	# ivtmp.635,
 10343              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10344              		.loc 1 265 91 view .LVU3515
 10345 3d63 C4E2E9F7 		shlx	rax, rcx, rdx	# tmp1179, pattern, totalshift
 10345      C1
 10346              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10347              		.loc 1 265 37 view .LVU3516
 10348 3d68 480B07   		or	rax, QWORD PTR [rdi]	# tmp1180, MEM[base: _1351, offset: 8B]
 10349              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10350              		.loc 1 265 66 view .LVU3517
 10351 3d6b 4129D3   		sub	r11d, edx	# tmp1181, totalshift
 10352              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10353              		.loc 1 265 50 view .LVU3518
 10354 3d6e C4E2A3F7 		shrx	rdx, rcx, r11	# tmp1182, pattern, tmp1181
 10354      D1
 10355              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10356              		.loc 1 265 37 view .LVU3519
 10357 3d73 4809D0   		or	rax, rdx	# tmp1183, tmp1182
 10358 3d76 488907   		mov	QWORD PTR [rdi], rax	# MEM[base: _1351, offset: 8B], tmp1183
 10359              	.LBE556:
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10360              		.loc 1 263 41 is_stmt 1 view .LVU3520
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10361              		.loc 1 263 24 view .LVU3521
 10362              	.L1164:
 10363              	.LBB557:
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10364              		.loc 1 264 9 view .LVU3522
 265:sieve_extend.c **** 
 10365              		.loc 1 265 8 view .LVU3523
 10366              	# sieve_extend.c:264:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10367              		.loc 1 264 20 is_stmt 0 view .LVU3524
 10368 3d79 4889F0   		mov	rax, rsi	# tmp1185, ivtmp.633
 10369 3d7c 31D2     		xor	edx, edx	# totalshift
 10370 3d7e 49F7F4   		div	r12	# step
 10371              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10372              		.loc 1 265 66 view .LVU3525
 10373 3d81 4189EB   		mov	r11d, ebp	# tmp1188, _1237
 10374 3d84 4883C708 		add	rdi, 8	# ivtmp.635,
 10375 3d88 4C01CE   		add	rsi, r9	# ivtmp.633, pattern_shift
 10376              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10377              		.loc 1 265 91 view .LVU3526
 10378 3d8b C4E2E9F7 		shlx	rax, rcx, rdx	# tmp1186, pattern, totalshift
 10378      C1
 10379              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
GAS LISTING /tmp/ccr2dACi.s 			page 286


 10380              		.loc 1 265 37 view .LVU3527
 10381 3d90 480B07   		or	rax, QWORD PTR [rdi]	# tmp1187, MEM[base: _1351, offset: 8B]
 10382              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10383              		.loc 1 265 66 view .LVU3528
 10384 3d93 4129D3   		sub	r11d, edx	# tmp1188, totalshift
 10385              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10386              		.loc 1 265 50 view .LVU3529
 10387 3d96 C4E2A3F7 		shrx	rdx, rcx, r11	# tmp1189, pattern, tmp1188
 10387      D1
 10388              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10389              		.loc 1 265 37 view .LVU3530
 10390 3d9b 4809D0   		or	rax, rdx	# tmp1190, tmp1189
 10391 3d9e 488907   		mov	QWORD PTR [rdi], rax	# MEM[base: _1351, offset: 8B], tmp1190
 10392              	.LBE557:
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10393              		.loc 1 263 41 is_stmt 1 view .LVU3531
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10394              		.loc 1 263 24 view .LVU3532
 10395              	# sieve_extend.c:263:    for (counter_t i=1; i <= loop_range; i++) {
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10396              		.loc 1 263 4 is_stmt 0 view .LVU3533
 10397 3da1 48397C24 		cmp	QWORD PTR 72[rsp], rdi	# %sfp, ivtmp.635
 10397      48
 10398 3da6 0F84B200 		je	.L862	#,
 10398      0000
 10399              	.L1403:
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10400              		.loc 1 263 4 view .LVU3534
 10401 3dac 4C894424 		mov	QWORD PTR 80[rsp], r8	# %sfp, _69
 10401      50
 10402 3db1 4C8B5C24 		mov	r11, QWORD PTR 72[rsp]	# _1346, %sfp
 10402      48
 10403              	.L861:
 10404              	.LBB558:
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10405              		.loc 1 264 9 is_stmt 1 view .LVU3535
 265:sieve_extend.c **** 
 10406              		.loc 1 265 8 view .LVU3536
 10407              	# sieve_extend.c:264:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10408              		.loc 1 264 20 is_stmt 0 view .LVU3537
 10409 3db6 4889F0   		mov	rax, rsi	# tmp591, ivtmp.633
 10410 3db9 31D2     		xor	edx, edx	# totalshift
 10411 3dbb 49F7F4   		div	r12	# step
 10412              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10413              		.loc 1 265 66 view .LVU3538
 10414 3dbe 4189E8   		mov	r8d, ebp	# tmp594, _1237
 10415 3dc1 4C01CE   		add	rsi, r9	# ivtmp.633, pattern_shift
 10416 3dc4 4883C720 		add	rdi, 32	# ivtmp.635,
 10417              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10418              		.loc 1 265 91 view .LVU3539
 10419 3dc8 C4E2E9F7 		shlx	rax, rcx, rdx	# tmp592, pattern, totalshift
GAS LISTING /tmp/ccr2dACi.s 			page 287


 10419      C1
 10420              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10421              		.loc 1 265 37 view .LVU3540
 10422 3dcd 480B47E8 		or	rax, QWORD PTR -24[rdi]	# tmp593, MEM[base: _1351, offset: 8B]
 10423              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10424              		.loc 1 265 66 view .LVU3541
 10425 3dd1 4129D0   		sub	r8d, edx	# tmp594, totalshift
 10426              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10427              		.loc 1 265 50 view .LVU3542
 10428 3dd4 C4E2BBF7 		shrx	rdx, rcx, r8	# tmp595, pattern, tmp594
 10428      D1
 10429              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10430              		.loc 1 265 66 view .LVU3543
 10431 3dd9 4189E8   		mov	r8d, ebp	# tmp863, _1237
 10432              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10433              		.loc 1 265 37 view .LVU3544
 10434 3ddc 4809D0   		or	rax, rdx	# tmp596, tmp595
 10435              	# sieve_extend.c:264:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10436              		.loc 1 264 20 view .LVU3545
 10437 3ddf 31D2     		xor	edx, edx	# totalshift
 10438              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10439              		.loc 1 265 37 view .LVU3546
 10440 3de1 488947E8 		mov	QWORD PTR -24[rdi], rax	# MEM[base: _1351, offset: 8B], tmp596
 10441              	.LBE558:
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10442              		.loc 1 263 41 is_stmt 1 view .LVU3547
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10443              		.loc 1 263 24 view .LVU3548
 10444              	.LBB559:
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10445              		.loc 1 264 9 view .LVU3549
 265:sieve_extend.c **** 
 10446              		.loc 1 265 8 view .LVU3550
 10447              	# sieve_extend.c:264:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10448              		.loc 1 264 20 is_stmt 0 view .LVU3551
 10449 3de5 4889F0   		mov	rax, rsi	# tmp860, ivtmp.633
 10450 3de8 49F7F4   		div	r12	# step
 10451 3deb 4C01CE   		add	rsi, r9	# ivtmp.633, pattern_shift
 10452              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10453              		.loc 1 265 91 view .LVU3552
 10454 3dee C4E2E9F7 		shlx	rax, rcx, rdx	# tmp861, pattern, totalshift
 10454      C1
 10455              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10456              		.loc 1 265 37 view .LVU3553
 10457 3df3 480B47F0 		or	rax, QWORD PTR -16[rdi]	# tmp862, MEM[base: _1351, offset: 8B]
 10458              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
GAS LISTING /tmp/ccr2dACi.s 			page 288


 10459              		.loc 1 265 66 view .LVU3554
 10460 3df7 4129D0   		sub	r8d, edx	# tmp863, totalshift
 10461              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10462              		.loc 1 265 50 view .LVU3555
 10463 3dfa C4E2BBF7 		shrx	rdx, rcx, r8	# tmp864, pattern, tmp863
 10463      D1
 10464              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10465              		.loc 1 265 66 view .LVU3556
 10466 3dff 4189E8   		mov	r8d, ebp	# tmp872, _1237
 10467              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10468              		.loc 1 265 37 view .LVU3557
 10469 3e02 4809D0   		or	rax, rdx	# tmp865, tmp864
 10470              	# sieve_extend.c:264:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10471              		.loc 1 264 20 view .LVU3558
 10472 3e05 31D2     		xor	edx, edx	# totalshift
 10473              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10474              		.loc 1 265 37 view .LVU3559
 10475 3e07 488947F0 		mov	QWORD PTR -16[rdi], rax	# MEM[base: _1351, offset: 8B], tmp865
 10476              	.LBE559:
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10477              		.loc 1 263 41 is_stmt 1 view .LVU3560
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10478              		.loc 1 263 24 view .LVU3561
 10479              	.LBB560:
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10480              		.loc 1 264 9 view .LVU3562
 265:sieve_extend.c **** 
 10481              		.loc 1 265 8 view .LVU3563
 10482              	# sieve_extend.c:264:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10483              		.loc 1 264 20 is_stmt 0 view .LVU3564
 10484 3e0b 4889F0   		mov	rax, rsi	# tmp869, ivtmp.633
 10485 3e0e 49F7F4   		div	r12	# step
 10486 3e11 4C01CE   		add	rsi, r9	# ivtmp.633, pattern_shift
 10487              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10488              		.loc 1 265 91 view .LVU3565
 10489 3e14 C4E2E9F7 		shlx	rax, rcx, rdx	# tmp870, pattern, totalshift
 10489      C1
 10490              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10491              		.loc 1 265 37 view .LVU3566
 10492 3e19 480B47F8 		or	rax, QWORD PTR -8[rdi]	# tmp871, MEM[base: _1351, offset: 8B]
 10493              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10494              		.loc 1 265 66 view .LVU3567
 10495 3e1d 4129D0   		sub	r8d, edx	# tmp872, totalshift
 10496              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10497              		.loc 1 265 50 view .LVU3568
 10498 3e20 C4E2BBF7 		shrx	rdx, rcx, r8	# tmp873, pattern, tmp872
 10498      D1
GAS LISTING /tmp/ccr2dACi.s 			page 289


 10499              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10500              		.loc 1 265 66 view .LVU3569
 10501 3e25 4189E8   		mov	r8d, ebp	# tmp881, _1237
 10502              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10503              		.loc 1 265 37 view .LVU3570
 10504 3e28 4809D0   		or	rax, rdx	# tmp874, tmp873
 10505              	# sieve_extend.c:264:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10506              		.loc 1 264 20 view .LVU3571
 10507 3e2b 31D2     		xor	edx, edx	# totalshift
 10508              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10509              		.loc 1 265 37 view .LVU3572
 10510 3e2d 488947F8 		mov	QWORD PTR -8[rdi], rax	# MEM[base: _1351, offset: 8B], tmp874
 10511              	.LBE560:
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10512              		.loc 1 263 41 is_stmt 1 view .LVU3573
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10513              		.loc 1 263 24 view .LVU3574
 10514              	.LBB561:
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10515              		.loc 1 264 9 view .LVU3575
 265:sieve_extend.c **** 
 10516              		.loc 1 265 8 view .LVU3576
 10517              	# sieve_extend.c:264:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10518              		.loc 1 264 20 is_stmt 0 view .LVU3577
 10519 3e31 4889F0   		mov	rax, rsi	# tmp878, ivtmp.633
 10520 3e34 49F7F4   		div	r12	# step
 10521 3e37 4C01CE   		add	rsi, r9	# ivtmp.633, pattern_shift
 10522              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10523              		.loc 1 265 91 view .LVU3578
 10524 3e3a C4E2E9F7 		shlx	rax, rcx, rdx	# tmp879, pattern, totalshift
 10524      C1
 10525              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10526              		.loc 1 265 37 view .LVU3579
 10527 3e3f 480B07   		or	rax, QWORD PTR [rdi]	# tmp880, MEM[base: _1351, offset: 8B]
 10528              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10529              		.loc 1 265 66 view .LVU3580
 10530 3e42 4129D0   		sub	r8d, edx	# tmp881, totalshift
 10531              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10532              		.loc 1 265 50 view .LVU3581
 10533 3e45 C4E2BBF7 		shrx	rdx, rcx, r8	# tmp882, pattern, tmp881
 10533      D1
 10534              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10535              		.loc 1 265 37 view .LVU3582
 10536 3e4a 4809D0   		or	rax, rdx	# tmp883, tmp882
 10537 3e4d 488907   		mov	QWORD PTR [rdi], rax	# MEM[base: _1351, offset: 8B], tmp883
 10538              	.LBE561:
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
GAS LISTING /tmp/ccr2dACi.s 			page 290


 10539              		.loc 1 263 41 is_stmt 1 view .LVU3583
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10540              		.loc 1 263 24 view .LVU3584
 10541              	# sieve_extend.c:263:    for (counter_t i=1; i <= loop_range; i++) {
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10542              		.loc 1 263 4 is_stmt 0 view .LVU3585
 10543 3e50 4939FB   		cmp	r11, rdi	# _1346, ivtmp.635
 10544 3e53 0F855DFF 		jne	.L861	#,
 10544      FFFF
 10545 3e59 4C8B4424 		mov	r8, QWORD PTR 80[rsp]	# _69, %sfp
 10545      50
 10546              	.L862:
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10547              		.loc 1 263 4 view .LVU3586
 10548              	.LBE554:
 269:sieve_extend.c **** 
 10549              		.loc 1 269 4 is_stmt 1 view .LVU3587
 10550              	# sieve_extend.c:269:    bitarray[range_stop_word] &= chopmask(range_stop);
 269:sieve_extend.c **** 
 10551              		.loc 1 269 30 is_stmt 0 view .LVU3588
 10552 3e5e 4C8B6424 		mov	r12, QWORD PTR 40[rsp]	# _1235, %sfp
 10552      28
 10553              	.LVL539:
 269:sieve_extend.c **** 
 10554              		.loc 1 269 30 view .LVU3589
 10555 3e63 4F2124D7 		and	QWORD PTR [r15+r10*8], r12	# *_151, _1235
 10556              	.LVL540:
 269:sieve_extend.c **** 
 10557              		.loc 1 269 30 view .LVU3590
 10558              	.LBE551:
 10559              	.LBE550:
 10560              	.LBE602:
1014:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 10561              		.loc 1 1014 11 is_stmt 1 view .LVU3591
 10562              	# sieve_extend.c:1014:     for (;range_stop < block_stop;) {
1014:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 10563              		.loc 1 1014 5 is_stmt 0 view .LVU3592
 10564 3e67 4C3B4424 		cmp	r8, QWORD PTR 8[rsp]	# _69, %sfp
 10564      08
 10565 3e6c 0F8204FC 		jb	.L885	#,
 10565      FFFF
 10566              	.L1457:
1014:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 10567              		.loc 1 1014 5 view .LVU3593
 10568 3e72 4C8B7C24 		mov	r15, QWORD PTR 48[rsp]	# <retval>, %sfp
 10568      30
 10569              	.LVL541:
1014:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 10570              		.loc 1 1014 5 view .LVU3594
 10571 3e77 4C89F2   		mov	rdx, r14	# block$pattern_size, patternsize_bits
 10572 3e7a 488B7424 		mov	rsi, QWORD PTR 16[rsp]	# block$pattern_start, %sfp
 10572      10
 10573              	.LBE608:
 10574              	.LBE616:
 10575              	.LBB617:
 10576              	.LBB618:
 10577              	# sieve_extend.c:909:     if (size < WORD_SIZE_counter)   {
GAS LISTING /tmp/ccr2dACi.s 			page 291


 909:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 10578              		.loc 1 909 8 view .LVU3595
 10579 3e7f 4883FA3F 		cmp	rdx, 63	# block$pattern_size,
 10580              	.LBE618:
 10581              	.LBE617:
 10582              	.LBB623:
 10583              	.LBB609:
 10584              	# sieve_extend.c:1014:     for (;range_stop < block_stop;) {
1014:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 10585              		.loc 1 1014 5 view .LVU3596
 10586 3e83 4C896C24 		mov	QWORD PTR 40[rsp], r13	# %sfp, index
 10586      28
1040:sieve_extend.c **** }
 10587              		.loc 1 1040 5 is_stmt 1 view .LVU3597
 10588              	.LVL542:
1040:sieve_extend.c **** }
 10589              		.loc 1 1040 5 is_stmt 0 view .LVU3598
 10590              	.LBE609:
 10591              	.LBE623:
1052:sieve_extend.c ****     prime = block.prime;
 10592              		.loc 1 1052 5 is_stmt 1 view .LVU3599
 10593              	.LBB624:
 10594              	.LBI617:
 908:sieve_extend.c ****     if (size < WORD_SIZE_counter)   {
 10595              		.loc 1 908 20 view .LVU3600
 10596              	.LBB619:
 909:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 10597              		.loc 1 909 5 view .LVU3601
 10598 3e88 498B5F08 		mov	rbx, QWORD PTR 8[r15]	# prephitmp_1432, sieve_92->bits
 10599 3e8c 48895C24 		mov	QWORD PTR 8[rsp], rbx	# %sfp, prephitmp_1432
 10599      08
 10600              	# sieve_extend.c:909:     if (size < WORD_SIZE_counter)   {
 909:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 10601              		.loc 1 909 8 is_stmt 0 view .LVU3602
 10602 3e91 0F874705 		ja	.L886	#,
 10602      0000
 10603              	.LVL543:
 10604              	.L843:
 910:sieve_extend.c ****         return; // rapid exit for small sizes
 10605              		.loc 1 910 9 is_stmt 1 view .LVU3603
 10606 3e97 488B4C24 		mov	rcx, QWORD PTR 8[rsp]	#, %sfp
 10606      08
 10607 3e9c 488B7C24 		mov	rdi, QWORD PTR 56[rsp]	#, %sfp
 10607      38
 10608 3ea1 E85AC1FF 		call	extendSieve_smallSize	#
 10608      FF
 10609              	.LVL544:
 911:sieve_extend.c ****     }
 10610              		.loc 1 911 9 view .LVU3604
 10611 3ea6 E9600500 		jmp	.L887	#
 10611      00
 10612              	.LVL545:
 10613 3eab 0F1F4400 		.p2align 4,,7
 10613      00
 10614              		.p2align 3
 10615              	.L878:
 911:sieve_extend.c ****     }
GAS LISTING /tmp/ccr2dACi.s 			page 292


 10616              		.loc 1 911 9 is_stmt 0 view .LVU3605
 10617              	.LBE619:
 10618              	.LBE624:
 10619              	.LBB625:
 10620              	.LBB610:
 10621              	.LBB603:
1036:sieve_extend.c ****         block.prime = prime;
 10622              		.loc 1 1036 48 is_stmt 1 view .LVU3606
 10623              	.LBB564:
 10624              	.LBI564:
 412:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange (%ju occurances
 10625              		.loc 1 412 20 view .LVU3607
 10626              	.LBB565:
 413:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 10627              		.loc 1 413 5 view .LVU3608
 414:sieve_extend.c **** 
 10628              		.loc 1 414 5 view .LVU3609
 10629              	# sieve_extend.c:414:     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * st
 414:sieve_extend.c **** 
 10630              		.loc 1 414 74 is_stmt 0 view .LVU3610
 10631 3eb0 4D89E3   		mov	r11, r12	# tmp625, step
 10632 3eb3 49C1E306 		sal	r11, 6	# tmp625,
 10633              	# sieve_extend.c:414:     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * st
 414:sieve_extend.c **** 
 10634              		.loc 1 414 21 view .LVU3611
 10635 3eb7 498D3C2B 		lea	rdi, [r11+rbp]	# range_stop_unique,
 10636              	.LVL546:
 418:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 10637              		.loc 1 418 5 is_stmt 1 view .LVU3612
 10638              	.LBB566:
 418:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 10639              		.loc 1 418 10 view .LVU3613
 418:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 10640              		.loc 1 418 50 view .LVU3614
 10641              	# sieve_extend.c:418:     for (register counter_t index = range_start; index < range_stop_unique; i
 418:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 10642              		.loc 1 418 5 is_stmt 0 view .LVU3615
 10643 3ebb 4839FD   		cmp	rbp, rdi	# index, range_stop_unique
 10644 3ebe 0F83A7FB 		jnb	.L859	#,
 10644      FFFF
 10645              	.LBB567:
 10646              	.LBB568:
 10647              	# sieve_extend.c:175:    const counter_t range_stop_word = wordindex(range_stop);
 175:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 10648              		.loc 1 175 20 view .LVU3616
 10649 3ec4 4C89C2   		mov	rdx, r8	# range_stop_word, _69
 10650              	# sieve_extend.c:201:       *index_ptr |= (mask & chopmask(range_stop));
 201:sieve_extend.c ****    }
 10651              		.loc 1 201 29 view .LVU3617
 10652 3ec7 4489C6   		mov	esi, r8d	# tmp630, _69
 10653              	# sieve_extend.c:175:    const counter_t range_stop_word = wordindex(range_stop);
 175:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 10654              		.loc 1 175 20 view .LVU3618
 10655 3eca 48C1EA06 		shr	rdx, 6	# range_stop_word,
 10656              	# sieve_extend.c:177:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 177:sieve_extend.c **** 
 10657              		.loc 1 177 110 view .LVU3619
GAS LISTING /tmp/ccr2dACi.s 			page 293


 10658 3ece 4B8D04A4 		lea	rax, [r12+r12*4]	# tmp628,
 10659              	# sieve_extend.c:201:       *index_ptr |= (mask & chopmask(range_stop));
 201:sieve_extend.c ****    }
 10660              		.loc 1 201 29 view .LVU3620
 10661 3ed2 49C7C2FF 		mov	r10, -1	# tmp1650,
 10661      FFFFFF
 10662 3ed9 F7D6     		not	esi	# tmp630
 10663 3edb C442CBF7 		shrx	r11, r10, rsi	# _288, tmp1650, tmp630
 10663      DA
 10664              	# sieve_extend.c:177:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 177:sieve_extend.c **** 
 10665              		.loc 1 177 133 view .LVU3621
 10666 3ee0 4889D6   		mov	rsi, rdx	# tmp634, range_stop_word
 10667 3ee3 4829C6   		sub	rsi, rax	# tmp634, tmp628
 10668              	# sieve_extend.c:177:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 177:sieve_extend.c **** 
 10669              		.loc 1 177 53 view .LVU3622
 10670 3ee6 4839C2   		cmp	rdx, rax	# range_stop_word, tmp628
 10671              	# sieve_extend.c:201:       *index_ptr |= (mask & chopmask(range_stop));
 201:sieve_extend.c ****    }
 10672              		.loc 1 201 29 view .LVU3623
 10673 3ee9 4C895C24 		mov	QWORD PTR 40[rsp], r11	# %sfp, _288
 10673      28
 10674              	# sieve_extend.c:177:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 177:sieve_extend.c **** 
 10675              		.loc 1 177 53 view .LVU3624
 10676 3eee 4D8D14F7 		lea	r10, [r15+rsi*8]	# tmp636,
 10677 3ef2 4D89E3   		mov	r11, r12	# _1320, step
 10678 3ef5 4D0F46D7 		cmovbe	r10, r15	# _97,, fast_loop_ptr
 10679              	.LBE568:
 10680              	.LBE567:
 10681              	# sieve_extend.c:419:         applyMask(bitarray, step, range_stop, markmask(index), wordindex(inde
 419:sieve_extend.c ****     }
 10682              		.loc 1 419 9 view .LVU3625
 10683 3ef9 4C894424 		mov	QWORD PTR 72[rsp], r8	# %sfp, _69
 10683      48
 10684              	.LBB572:
 10685              	.LBB569:
 10686              	# sieve_extend.c:183:        index_ptr+=step;
 183:sieve_extend.c ****        *index_ptr |= mask;
 10687              		.loc 1 183 17 view .LVU3626
 10688 3efe 4A8D0CE5 		lea	rcx, 0[0+r12*8]	# _256,
 10688      00000000 
 10689              	# sieve_extend.c:194:    const register bitword_t* __restrict range_stop_ptr = &bitarray[(range_sto
 194:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 10690              		.loc 1 194 41 view .LVU3627
 10691 3f06 4D8D0CD7 		lea	r9, [r15+rdx*8]	# range_stop_ptr,
 10692              	.LBE569:
 10693              	.LBE572:
 10694              	# sieve_extend.c:419:         applyMask(bitarray, step, range_stop, markmask(index), wordindex(inde
 419:sieve_extend.c ****     }
 10695              		.loc 1 419 9 view .LVU3628
 10696 3f0a 4989F8   		mov	r8, rdi	# range_stop_unique, range_stop_unique
 10697              	.LVL547:
 419:sieve_extend.c ****     }
 10698              		.loc 1 419 9 view .LVU3629
 10699 3f0d 48C1E003 		sal	rax, 3	# tmp640,
GAS LISTING /tmp/ccr2dACi.s 			page 294


 10700 3f11 49C1E304 		sal	r11, 4	# _1320,
 10701              	.LVL548:
 10702 3f15 66662E0F 		.p2align 4
 10702      1F840000 
 10702      000000
 10703              		.p2align 3
 10704              	.L884:
 419:sieve_extend.c ****     }
 10705              		.loc 1 419 9 is_stmt 1 view .LVU3630
 10706 3f20 4889EA   		mov	rdx, rbp	# tmp643, index
 10707 3f23 BF010000 		mov	edi, 1	# tmp1653,
 10707      00
 10708 3f28 48C1EA06 		shr	rdx, 6	# tmp643,
 10709 3f2c C4E2D1F7 		shlx	rsi, rdi, rbp	# _241, tmp1653, index
 10709      F7
 10710              	.LVL549:
 10711              	.LBB573:
 10712              	.LBI567:
 147:sieve_extend.c **** //#if __APPLE__
 10713              		.loc 1 147 20 view .LVU3631
 10714              	.LBB570:
 175:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 10715              		.loc 1 175 4 view .LVU3632
 176:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 10716              		.loc 1 176 4 view .LVU3633
 10717              	# sieve_extend.c:176:    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(
 176:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 10718              		.loc 1 176 78 is_stmt 0 view .LVU3634
 10719 3f31 498D14D7 		lea	rdx, [r15+rdx*8]	# index_ptr,
 10720              	.LVL550:
 177:sieve_extend.c **** 
 10721              		.loc 1 177 4 is_stmt 1 view .LVU3635
 181:sieve_extend.c ****        *index_ptr |= mask;
 10722              		.loc 1 181 4 view .LVU3636
 181:sieve_extend.c ****        *index_ptr |= mask;
 10723              		.loc 1 181 10 view .LVU3637
 10724 3f35 4C39D2   		cmp	rdx, r10	# index_ptr, fast_loop_ptr
 10725 3f38 0F830201 		jnb	.L879	#,
 10725      0000
 181:sieve_extend.c ****        *index_ptr |= mask;
 10726              		.loc 1 181 10 is_stmt 0 view .LVU3638
 10727 3f3e 4A8D3C1A 		lea	rdi, [rdx+r11]	# ivtmp.676,
 10728              	.L880:
 182:sieve_extend.c ****        index_ptr+=step;
 10729              		.loc 1 182 8 is_stmt 1 view .LVU3639
 10730              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 10731              		.loc 1 182 19 is_stmt 0 view .LVU3640
 10732 3f42 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_921, offset: 0B], _241
 183:sieve_extend.c ****        *index_ptr |= mask;
 10733              		.loc 1 183 8 is_stmt 1 view .LVU3641
 10734              	.LVL551:
 184:sieve_extend.c ****        index_ptr+=step;
 10735              		.loc 1 184 8 view .LVU3642
 10736              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 10737              		.loc 1 184 19 is_stmt 0 view .LVU3643
GAS LISTING /tmp/ccr2dACi.s 			page 295


 10738 3f45 4809340A 		or	QWORD PTR [rdx+rcx], rsi	# MEM[base: index_ptr_921, index: _256, offset: 0B], _241
 185:sieve_extend.c ****        *index_ptr |= mask;
 10739              		.loc 1 185 8 is_stmt 1 view .LVU3644
 10740              	.LVL552:
 186:sieve_extend.c ****        index_ptr+=step;
 10741              		.loc 1 186 8 view .LVU3645
 10742              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 10743              		.loc 1 186 19 is_stmt 0 view .LVU3646
 10744 3f49 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _1314, offset: 0B], _241
 187:sieve_extend.c ****        *index_ptr |= mask;
 10745              		.loc 1 187 8 is_stmt 1 view .LVU3647
 10746              	.LVL553:
 188:sieve_extend.c ****        index_ptr+=step;
 10747              		.loc 1 188 8 view .LVU3648
 10748              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 10749              		.loc 1 188 19 is_stmt 0 view .LVU3649
 10750 3f4c 4809340F 		or	QWORD PTR [rdi+rcx], rsi	# MEM[base: _1314, index: _256, offset: 0B], _241
 189:sieve_extend.c ****        *index_ptr |= mask;
 10751              		.loc 1 189 8 is_stmt 1 view .LVU3650
 10752              	.LVL554:
 190:sieve_extend.c ****        index_ptr+=step;
 10753              		.loc 1 190 8 view .LVU3651
 10754 3f50 4801C7   		add	rdi, rax	# ivtmp.676, tmp640
 10755              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 10756              		.loc 1 190 19 is_stmt 0 view .LVU3652
 10757 3f53 4809348A 		or	QWORD PTR [rdx+rcx*4], rsi	# MEM[base: index_ptr_921, index: _256, step: 4, offset: 0B], _241
 191:sieve_extend.c ****    }
 10758              		.loc 1 191 8 is_stmt 1 view .LVU3653
 10759 3f57 4801C2   		add	rdx, rax	# index_ptr, tmp640
 10760              	.LVL555:
 181:sieve_extend.c ****        *index_ptr |= mask;
 10761              		.loc 1 181 10 view .LVU3654
 10762 3f5a 4939D2   		cmp	r10, rdx	# fast_loop_ptr, index_ptr
 10763 3f5d 0F86DD00 		jbe	.L879	#,
 10763      0000
 182:sieve_extend.c ****        index_ptr+=step;
 10764              		.loc 1 182 8 view .LVU3655
 10765              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 10766              		.loc 1 182 19 is_stmt 0 view .LVU3656
 10767 3f63 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_921, offset: 0B], _241
 183:sieve_extend.c ****        *index_ptr |= mask;
 10768              		.loc 1 183 8 is_stmt 1 view .LVU3657
 10769              	.LVL556:
 184:sieve_extend.c ****        index_ptr+=step;
 10770              		.loc 1 184 8 view .LVU3658
 10771              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 10772              		.loc 1 184 19 is_stmt 0 view .LVU3659
 10773 3f66 4809340A 		or	QWORD PTR [rdx+rcx], rsi	# MEM[base: index_ptr_921, index: _256, offset: 0B], _241
 185:sieve_extend.c ****        *index_ptr |= mask;
 10774              		.loc 1 185 8 is_stmt 1 view .LVU3660
 10775              	.LVL557:
 186:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/ccr2dACi.s 			page 296


 10776              		.loc 1 186 8 view .LVU3661
 10777              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 10778              		.loc 1 186 19 is_stmt 0 view .LVU3662
 10779 3f6a 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _1314, offset: 0B], _241
 187:sieve_extend.c ****        *index_ptr |= mask;
 10780              		.loc 1 187 8 is_stmt 1 view .LVU3663
 10781              	.LVL558:
 188:sieve_extend.c ****        index_ptr+=step;
 10782              		.loc 1 188 8 view .LVU3664
 10783              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 10784              		.loc 1 188 19 is_stmt 0 view .LVU3665
 10785 3f6d 4809340F 		or	QWORD PTR [rdi+rcx], rsi	# MEM[base: _1314, index: _256, offset: 0B], _241
 189:sieve_extend.c ****        *index_ptr |= mask;
 10786              		.loc 1 189 8 is_stmt 1 view .LVU3666
 10787              	.LVL559:
 190:sieve_extend.c ****        index_ptr+=step;
 10788              		.loc 1 190 8 view .LVU3667
 10789 3f71 4801C7   		add	rdi, rax	# ivtmp.676, tmp640
 10790              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 10791              		.loc 1 190 19 is_stmt 0 view .LVU3668
 10792 3f74 4809348A 		or	QWORD PTR [rdx+rcx*4], rsi	# MEM[base: index_ptr_921, index: _256, step: 4, offset: 0B], _241
 191:sieve_extend.c ****    }
 10793              		.loc 1 191 8 is_stmt 1 view .LVU3669
 10794 3f78 4801C2   		add	rdx, rax	# index_ptr, tmp640
 10795              	.LVL560:
 181:sieve_extend.c ****        *index_ptr |= mask;
 10796              		.loc 1 181 10 view .LVU3670
 10797 3f7b 4939D2   		cmp	r10, rdx	# fast_loop_ptr, index_ptr
 10798 3f7e 0F86BC00 		jbe	.L879	#,
 10798      0000
 182:sieve_extend.c ****        index_ptr+=step;
 10799              		.loc 1 182 8 view .LVU3671
 10800              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 10801              		.loc 1 182 19 is_stmt 0 view .LVU3672
 10802 3f84 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_921, offset: 0B], _241
 183:sieve_extend.c ****        *index_ptr |= mask;
 10803              		.loc 1 183 8 is_stmt 1 view .LVU3673
 10804              	.LVL561:
 184:sieve_extend.c ****        index_ptr+=step;
 10805              		.loc 1 184 8 view .LVU3674
 10806              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 10807              		.loc 1 184 19 is_stmt 0 view .LVU3675
 10808 3f87 4809340A 		or	QWORD PTR [rdx+rcx], rsi	# MEM[base: index_ptr_921, index: _256, offset: 0B], _241
 185:sieve_extend.c ****        *index_ptr |= mask;
 10809              		.loc 1 185 8 is_stmt 1 view .LVU3676
 10810              	.LVL562:
 186:sieve_extend.c ****        index_ptr+=step;
 10811              		.loc 1 186 8 view .LVU3677
 10812              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 10813              		.loc 1 186 19 is_stmt 0 view .LVU3678
 10814 3f8b 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _1314, offset: 0B], _241
GAS LISTING /tmp/ccr2dACi.s 			page 297


 187:sieve_extend.c ****        *index_ptr |= mask;
 10815              		.loc 1 187 8 is_stmt 1 view .LVU3679
 10816              	.LVL563:
 188:sieve_extend.c ****        index_ptr+=step;
 10817              		.loc 1 188 8 view .LVU3680
 10818              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 10819              		.loc 1 188 19 is_stmt 0 view .LVU3681
 10820 3f8e 4809340F 		or	QWORD PTR [rdi+rcx], rsi	# MEM[base: _1314, index: _256, offset: 0B], _241
 189:sieve_extend.c ****        *index_ptr |= mask;
 10821              		.loc 1 189 8 is_stmt 1 view .LVU3682
 10822              	.LVL564:
 190:sieve_extend.c ****        index_ptr+=step;
 10823              		.loc 1 190 8 view .LVU3683
 10824 3f92 4801C7   		add	rdi, rax	# ivtmp.676, tmp640
 10825              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 10826              		.loc 1 190 19 is_stmt 0 view .LVU3684
 10827 3f95 4809348A 		or	QWORD PTR [rdx+rcx*4], rsi	# MEM[base: index_ptr_921, index: _256, step: 4, offset: 0B], _241
 191:sieve_extend.c ****    }
 10828              		.loc 1 191 8 is_stmt 1 view .LVU3685
 10829 3f99 4801C2   		add	rdx, rax	# index_ptr, tmp640
 10830              	.LVL565:
 181:sieve_extend.c ****        *index_ptr |= mask;
 10831              		.loc 1 181 10 view .LVU3686
 10832 3f9c 4939D2   		cmp	r10, rdx	# fast_loop_ptr, index_ptr
 10833 3f9f 0F869B00 		jbe	.L879	#,
 10833      0000
 182:sieve_extend.c ****        index_ptr+=step;
 10834              		.loc 1 182 8 view .LVU3687
 10835              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 10836              		.loc 1 182 19 is_stmt 0 view .LVU3688
 10837 3fa5 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_921, offset: 0B], _241
 183:sieve_extend.c ****        *index_ptr |= mask;
 10838              		.loc 1 183 8 is_stmt 1 view .LVU3689
 10839              	.LVL566:
 184:sieve_extend.c ****        index_ptr+=step;
 10840              		.loc 1 184 8 view .LVU3690
 10841              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 10842              		.loc 1 184 19 is_stmt 0 view .LVU3691
 10843 3fa8 4809340A 		or	QWORD PTR [rdx+rcx], rsi	# MEM[base: index_ptr_921, index: _256, offset: 0B], _241
 185:sieve_extend.c ****        *index_ptr |= mask;
 10844              		.loc 1 185 8 is_stmt 1 view .LVU3692
 10845              	.LVL567:
 186:sieve_extend.c ****        index_ptr+=step;
 10846              		.loc 1 186 8 view .LVU3693
 10847              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 10848              		.loc 1 186 19 is_stmt 0 view .LVU3694
 10849 3fac 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _1314, offset: 0B], _241
 187:sieve_extend.c ****        *index_ptr |= mask;
 10850              		.loc 1 187 8 is_stmt 1 view .LVU3695
 10851              	.LVL568:
 188:sieve_extend.c ****        index_ptr+=step;
 10852              		.loc 1 188 8 view .LVU3696
GAS LISTING /tmp/ccr2dACi.s 			page 298


 10853              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 10854              		.loc 1 188 19 is_stmt 0 view .LVU3697
 10855 3faf 4809340F 		or	QWORD PTR [rdi+rcx], rsi	# MEM[base: _1314, index: _256, offset: 0B], _241
 189:sieve_extend.c ****        *index_ptr |= mask;
 10856              		.loc 1 189 8 is_stmt 1 view .LVU3698
 10857              	.LVL569:
 190:sieve_extend.c ****        index_ptr+=step;
 10858              		.loc 1 190 8 view .LVU3699
 10859 3fb3 4801C7   		add	rdi, rax	# ivtmp.676, tmp640
 10860              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 10861              		.loc 1 190 19 is_stmt 0 view .LVU3700
 10862 3fb6 4809348A 		or	QWORD PTR [rdx+rcx*4], rsi	# MEM[base: index_ptr_921, index: _256, step: 4, offset: 0B], _241
 191:sieve_extend.c ****    }
 10863              		.loc 1 191 8 is_stmt 1 view .LVU3701
 10864 3fba 4801C2   		add	rdx, rax	# index_ptr, tmp640
 10865              	.LVL570:
 181:sieve_extend.c ****        *index_ptr |= mask;
 10866              		.loc 1 181 10 view .LVU3702
 10867 3fbd 4939D2   		cmp	r10, rdx	# fast_loop_ptr, index_ptr
 10868 3fc0 767E     		jbe	.L879	#,
 182:sieve_extend.c ****        index_ptr+=step;
 10869              		.loc 1 182 8 view .LVU3703
 10870              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 10871              		.loc 1 182 19 is_stmt 0 view .LVU3704
 10872 3fc2 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_921, offset: 0B], _241
 183:sieve_extend.c ****        *index_ptr |= mask;
 10873              		.loc 1 183 8 is_stmt 1 view .LVU3705
 10874              	.LVL571:
 184:sieve_extend.c ****        index_ptr+=step;
 10875              		.loc 1 184 8 view .LVU3706
 10876              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 10877              		.loc 1 184 19 is_stmt 0 view .LVU3707
 10878 3fc5 4809340A 		or	QWORD PTR [rdx+rcx], rsi	# MEM[base: index_ptr_921, index: _256, offset: 0B], _241
 185:sieve_extend.c ****        *index_ptr |= mask;
 10879              		.loc 1 185 8 is_stmt 1 view .LVU3708
 10880              	.LVL572:
 186:sieve_extend.c ****        index_ptr+=step;
 10881              		.loc 1 186 8 view .LVU3709
 10882              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 10883              		.loc 1 186 19 is_stmt 0 view .LVU3710
 10884 3fc9 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _1314, offset: 0B], _241
 187:sieve_extend.c ****        *index_ptr |= mask;
 10885              		.loc 1 187 8 is_stmt 1 view .LVU3711
 10886              	.LVL573:
 188:sieve_extend.c ****        index_ptr+=step;
 10887              		.loc 1 188 8 view .LVU3712
 10888              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 10889              		.loc 1 188 19 is_stmt 0 view .LVU3713
 10890 3fcc 4809340F 		or	QWORD PTR [rdi+rcx], rsi	# MEM[base: _1314, index: _256, offset: 0B], _241
 189:sieve_extend.c ****        *index_ptr |= mask;
 10891              		.loc 1 189 8 is_stmt 1 view .LVU3714
GAS LISTING /tmp/ccr2dACi.s 			page 299


 10892              	.LVL574:
 190:sieve_extend.c ****        index_ptr+=step;
 10893              		.loc 1 190 8 view .LVU3715
 10894 3fd0 4801C7   		add	rdi, rax	# ivtmp.676, tmp640
 10895              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 10896              		.loc 1 190 19 is_stmt 0 view .LVU3716
 10897 3fd3 4809348A 		or	QWORD PTR [rdx+rcx*4], rsi	# MEM[base: index_ptr_921, index: _256, step: 4, offset: 0B], _241
 191:sieve_extend.c ****    }
 10898              		.loc 1 191 8 is_stmt 1 view .LVU3717
 10899 3fd7 4801C2   		add	rdx, rax	# index_ptr, tmp640
 10900              	.LVL575:
 181:sieve_extend.c ****        *index_ptr |= mask;
 10901              		.loc 1 181 10 view .LVU3718
 10902 3fda 4939D2   		cmp	r10, rdx	# fast_loop_ptr, index_ptr
 10903 3fdd 7661     		jbe	.L879	#,
 182:sieve_extend.c ****        index_ptr+=step;
 10904              		.loc 1 182 8 view .LVU3719
 10905              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 10906              		.loc 1 182 19 is_stmt 0 view .LVU3720
 10907 3fdf 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_921, offset: 0B], _241
 183:sieve_extend.c ****        *index_ptr |= mask;
 10908              		.loc 1 183 8 is_stmt 1 view .LVU3721
 10909              	.LVL576:
 184:sieve_extend.c ****        index_ptr+=step;
 10910              		.loc 1 184 8 view .LVU3722
 10911              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 10912              		.loc 1 184 19 is_stmt 0 view .LVU3723
 10913 3fe2 4809340A 		or	QWORD PTR [rdx+rcx], rsi	# MEM[base: index_ptr_921, index: _256, offset: 0B], _241
 185:sieve_extend.c ****        *index_ptr |= mask;
 10914              		.loc 1 185 8 is_stmt 1 view .LVU3724
 10915              	.LVL577:
 186:sieve_extend.c ****        index_ptr+=step;
 10916              		.loc 1 186 8 view .LVU3725
 10917              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 10918              		.loc 1 186 19 is_stmt 0 view .LVU3726
 10919 3fe6 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _1314, offset: 0B], _241
 187:sieve_extend.c ****        *index_ptr |= mask;
 10920              		.loc 1 187 8 is_stmt 1 view .LVU3727
 10921              	.LVL578:
 188:sieve_extend.c ****        index_ptr+=step;
 10922              		.loc 1 188 8 view .LVU3728
 10923              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 10924              		.loc 1 188 19 is_stmt 0 view .LVU3729
 10925 3fe9 4809340F 		or	QWORD PTR [rdi+rcx], rsi	# MEM[base: _1314, index: _256, offset: 0B], _241
 189:sieve_extend.c ****        *index_ptr |= mask;
 10926              		.loc 1 189 8 is_stmt 1 view .LVU3730
 10927              	.LVL579:
 190:sieve_extend.c ****        index_ptr+=step;
 10928              		.loc 1 190 8 view .LVU3731
 10929 3fed 4801C7   		add	rdi, rax	# ivtmp.676, tmp640
 10930              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/ccr2dACi.s 			page 300


 10931              		.loc 1 190 19 is_stmt 0 view .LVU3732
 10932 3ff0 4809348A 		or	QWORD PTR [rdx+rcx*4], rsi	# MEM[base: index_ptr_921, index: _256, step: 4, offset: 0B], _241
 191:sieve_extend.c ****    }
 10933              		.loc 1 191 8 is_stmt 1 view .LVU3733
 10934 3ff4 4801C2   		add	rdx, rax	# index_ptr, tmp640
 10935              	.LVL580:
 181:sieve_extend.c ****        *index_ptr |= mask;
 10936              		.loc 1 181 10 view .LVU3734
 10937 3ff7 4939D2   		cmp	r10, rdx	# fast_loop_ptr, index_ptr
 10938 3ffa 7644     		jbe	.L879	#,
 182:sieve_extend.c ****        index_ptr+=step;
 10939              		.loc 1 182 8 view .LVU3735
 10940              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 10941              		.loc 1 182 19 is_stmt 0 view .LVU3736
 10942 3ffc 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_921, offset: 0B], _241
 183:sieve_extend.c ****        *index_ptr |= mask;
 10943              		.loc 1 183 8 is_stmt 1 view .LVU3737
 10944              	.LVL581:
 184:sieve_extend.c ****        index_ptr+=step;
 10945              		.loc 1 184 8 view .LVU3738
 10946              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 10947              		.loc 1 184 19 is_stmt 0 view .LVU3739
 10948 3fff 4809340A 		or	QWORD PTR [rdx+rcx], rsi	# MEM[base: index_ptr_921, index: _256, offset: 0B], _241
 185:sieve_extend.c ****        *index_ptr |= mask;
 10949              		.loc 1 185 8 is_stmt 1 view .LVU3740
 10950              	.LVL582:
 186:sieve_extend.c ****        index_ptr+=step;
 10951              		.loc 1 186 8 view .LVU3741
 10952              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 10953              		.loc 1 186 19 is_stmt 0 view .LVU3742
 10954 4003 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _1314, offset: 0B], _241
 187:sieve_extend.c ****        *index_ptr |= mask;
 10955              		.loc 1 187 8 is_stmt 1 view .LVU3743
 10956              	.LVL583:
 188:sieve_extend.c ****        index_ptr+=step;
 10957              		.loc 1 188 8 view .LVU3744
 10958              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 10959              		.loc 1 188 19 is_stmt 0 view .LVU3745
 10960 4006 4809340F 		or	QWORD PTR [rdi+rcx], rsi	# MEM[base: _1314, index: _256, offset: 0B], _241
 189:sieve_extend.c ****        *index_ptr |= mask;
 10961              		.loc 1 189 8 is_stmt 1 view .LVU3746
 10962              	.LVL584:
 190:sieve_extend.c ****        index_ptr+=step;
 10963              		.loc 1 190 8 view .LVU3747
 10964 400a 4801C7   		add	rdi, rax	# ivtmp.676, tmp640
 10965              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 10966              		.loc 1 190 19 is_stmt 0 view .LVU3748
 10967 400d 4809348A 		or	QWORD PTR [rdx+rcx*4], rsi	# MEM[base: index_ptr_921, index: _256, step: 4, offset: 0B], _241
 191:sieve_extend.c ****    }
 10968              		.loc 1 191 8 is_stmt 1 view .LVU3749
 10969 4011 4801C2   		add	rdx, rax	# index_ptr, tmp640
 10970              	.LVL585:
GAS LISTING /tmp/ccr2dACi.s 			page 301


 181:sieve_extend.c ****        *index_ptr |= mask;
 10971              		.loc 1 181 10 view .LVU3750
 10972 4014 4939D2   		cmp	r10, rdx	# fast_loop_ptr, index_ptr
 10973 4017 7627     		jbe	.L879	#,
 182:sieve_extend.c ****        index_ptr+=step;
 10974              		.loc 1 182 8 view .LVU3751
 10975              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 10976              		.loc 1 182 19 is_stmt 0 view .LVU3752
 10977 4019 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_921, offset: 0B], _241
 183:sieve_extend.c ****        *index_ptr |= mask;
 10978              		.loc 1 183 8 is_stmt 1 view .LVU3753
 10979              	.LVL586:
 184:sieve_extend.c ****        index_ptr+=step;
 10980              		.loc 1 184 8 view .LVU3754
 10981              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 10982              		.loc 1 184 19 is_stmt 0 view .LVU3755
 10983 401c 4809340A 		or	QWORD PTR [rdx+rcx], rsi	# MEM[base: index_ptr_921, index: _256, offset: 0B], _241
 185:sieve_extend.c ****        *index_ptr |= mask;
 10984              		.loc 1 185 8 is_stmt 1 view .LVU3756
 10985              	.LVL587:
 186:sieve_extend.c ****        index_ptr+=step;
 10986              		.loc 1 186 8 view .LVU3757
 10987              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 10988              		.loc 1 186 19 is_stmt 0 view .LVU3758
 10989 4020 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _1314, offset: 0B], _241
 187:sieve_extend.c ****        *index_ptr |= mask;
 10990              		.loc 1 187 8 is_stmt 1 view .LVU3759
 10991              	.LVL588:
 188:sieve_extend.c ****        index_ptr+=step;
 10992              		.loc 1 188 8 view .LVU3760
 10993              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 10994              		.loc 1 188 19 is_stmt 0 view .LVU3761
 10995 4023 4809340F 		or	QWORD PTR [rdi+rcx], rsi	# MEM[base: _1314, index: _256, offset: 0B], _241
 189:sieve_extend.c ****        *index_ptr |= mask;
 10996              		.loc 1 189 8 is_stmt 1 view .LVU3762
 10997              	.LVL589:
 190:sieve_extend.c ****        index_ptr+=step;
 10998              		.loc 1 190 8 view .LVU3763
 10999 4027 4801C7   		add	rdi, rax	# ivtmp.676, tmp640
 11000              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 11001              		.loc 1 190 19 is_stmt 0 view .LVU3764
 11002 402a 4809348A 		or	QWORD PTR [rdx+rcx*4], rsi	# MEM[base: index_ptr_921, index: _256, step: 4, offset: 0B], _241
 191:sieve_extend.c ****    }
 11003              		.loc 1 191 8 is_stmt 1 view .LVU3765
 11004 402e 4801C2   		add	rdx, rax	# index_ptr, tmp640
 11005              	.LVL590:
 181:sieve_extend.c ****        *index_ptr |= mask;
 11006              		.loc 1 181 10 view .LVU3766
 11007 4031 4939D2   		cmp	r10, rdx	# fast_loop_ptr, index_ptr
 11008 4034 0F8708FF 		ja	.L880	#,
 11008      FFFF
 11009 403a 660F1F44 		.p2align 4
GAS LISTING /tmp/ccr2dACi.s 			page 302


 11009      0000
 11010              		.p2align 3
 11011              	.L879:
 194:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 11012              		.loc 1 194 4 view .LVU3767
 195:sieve_extend.c ****        *index_ptr |= mask;
 11013              		.loc 1 195 4 view .LVU3768
 195:sieve_extend.c ****        *index_ptr |= mask;
 11014              		.loc 1 195 10 view .LVU3769
 11015 4040 4939D1   		cmp	r9, rdx	# range_stop_ptr, index_ptr
 11016 4043 765B     		jbe	.L881	#,
 11017              	.L882:
 196:sieve_extend.c ****        index_ptr+=step;
 11018              		.loc 1 196 8 view .LVU3770
 11019              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 11020              		.loc 1 196 19 is_stmt 0 view .LVU3771
 11021 4045 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_919, offset: 0B], _241
 197:sieve_extend.c ****    }
 11022              		.loc 1 197 8 is_stmt 1 view .LVU3772
 11023              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 11024              		.loc 1 197 17 is_stmt 0 view .LVU3773
 11025 4048 4801CA   		add	rdx, rcx	# index_ptr, _256
 11026              	.LVL591:
 195:sieve_extend.c ****        *index_ptr |= mask;
 11027              		.loc 1 195 10 is_stmt 1 view .LVU3774
 11028 404b 4939D1   		cmp	r9, rdx	# range_stop_ptr, index_ptr
 11029 404e 7650     		jbe	.L881	#,
 196:sieve_extend.c ****        index_ptr+=step;
 11030              		.loc 1 196 8 view .LVU3775
 11031              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 11032              		.loc 1 196 19 is_stmt 0 view .LVU3776
 11033 4050 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_919, offset: 0B], _241
 197:sieve_extend.c ****    }
 11034              		.loc 1 197 8 is_stmt 1 view .LVU3777
 11035              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 11036              		.loc 1 197 17 is_stmt 0 view .LVU3778
 11037 4053 4801CA   		add	rdx, rcx	# index_ptr, _256
 11038              	.LVL592:
 195:sieve_extend.c ****        *index_ptr |= mask;
 11039              		.loc 1 195 10 is_stmt 1 view .LVU3779
 11040 4056 4939D1   		cmp	r9, rdx	# range_stop_ptr, index_ptr
 11041 4059 7645     		jbe	.L881	#,
 196:sieve_extend.c ****        index_ptr+=step;
 11042              		.loc 1 196 8 view .LVU3780
 11043              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 11044              		.loc 1 196 19 is_stmt 0 view .LVU3781
 11045 405b 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_919, offset: 0B], _241
 197:sieve_extend.c ****    }
 11046              		.loc 1 197 8 is_stmt 1 view .LVU3782
 11047              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 11048              		.loc 1 197 17 is_stmt 0 view .LVU3783
GAS LISTING /tmp/ccr2dACi.s 			page 303


 11049 405e 4801CA   		add	rdx, rcx	# index_ptr, _256
 11050              	.LVL593:
 195:sieve_extend.c ****        *index_ptr |= mask;
 11051              		.loc 1 195 10 is_stmt 1 view .LVU3784
 11052 4061 4939D1   		cmp	r9, rdx	# range_stop_ptr, index_ptr
 11053 4064 763A     		jbe	.L881	#,
 196:sieve_extend.c ****        index_ptr+=step;
 11054              		.loc 1 196 8 view .LVU3785
 11055              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 11056              		.loc 1 196 19 is_stmt 0 view .LVU3786
 11057 4066 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_919, offset: 0B], _241
 197:sieve_extend.c ****    }
 11058              		.loc 1 197 8 is_stmt 1 view .LVU3787
 11059              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 11060              		.loc 1 197 17 is_stmt 0 view .LVU3788
 11061 4069 4801CA   		add	rdx, rcx	# index_ptr, _256
 11062              	.LVL594:
 195:sieve_extend.c ****        *index_ptr |= mask;
 11063              		.loc 1 195 10 is_stmt 1 view .LVU3789
 11064 406c 4939D1   		cmp	r9, rdx	# range_stop_ptr, index_ptr
 11065 406f 762F     		jbe	.L881	#,
 196:sieve_extend.c ****        index_ptr+=step;
 11066              		.loc 1 196 8 view .LVU3790
 11067              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 11068              		.loc 1 196 19 is_stmt 0 view .LVU3791
 11069 4071 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_919, offset: 0B], _241
 197:sieve_extend.c ****    }
 11070              		.loc 1 197 8 is_stmt 1 view .LVU3792
 11071              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 11072              		.loc 1 197 17 is_stmt 0 view .LVU3793
 11073 4074 4801CA   		add	rdx, rcx	# index_ptr, _256
 11074              	.LVL595:
 195:sieve_extend.c ****        *index_ptr |= mask;
 11075              		.loc 1 195 10 is_stmt 1 view .LVU3794
 11076 4077 4939D1   		cmp	r9, rdx	# range_stop_ptr, index_ptr
 11077 407a 7624     		jbe	.L881	#,
 196:sieve_extend.c ****        index_ptr+=step;
 11078              		.loc 1 196 8 view .LVU3795
 11079              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 11080              		.loc 1 196 19 is_stmt 0 view .LVU3796
 11081 407c 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_919, offset: 0B], _241
 197:sieve_extend.c ****    }
 11082              		.loc 1 197 8 is_stmt 1 view .LVU3797
 11083              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 11084              		.loc 1 197 17 is_stmt 0 view .LVU3798
 11085 407f 4801CA   		add	rdx, rcx	# index_ptr, _256
 11086              	.LVL596:
 195:sieve_extend.c ****        *index_ptr |= mask;
 11087              		.loc 1 195 10 is_stmt 1 view .LVU3799
 11088 4082 4939D1   		cmp	r9, rdx	# range_stop_ptr, index_ptr
 11089 4085 7619     		jbe	.L881	#,
GAS LISTING /tmp/ccr2dACi.s 			page 304


 196:sieve_extend.c ****        index_ptr+=step;
 11090              		.loc 1 196 8 view .LVU3800
 11091              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 11092              		.loc 1 196 19 is_stmt 0 view .LVU3801
 11093 4087 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_919, offset: 0B], _241
 197:sieve_extend.c ****    }
 11094              		.loc 1 197 8 is_stmt 1 view .LVU3802
 11095              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 11096              		.loc 1 197 17 is_stmt 0 view .LVU3803
 11097 408a 4801CA   		add	rdx, rcx	# index_ptr, _256
 11098              	.LVL597:
 195:sieve_extend.c ****        *index_ptr |= mask;
 11099              		.loc 1 195 10 is_stmt 1 view .LVU3804
 11100 408d 4939D1   		cmp	r9, rdx	# range_stop_ptr, index_ptr
 11101 4090 760E     		jbe	.L881	#,
 196:sieve_extend.c ****        index_ptr+=step;
 11102              		.loc 1 196 8 view .LVU3805
 11103              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 11104              		.loc 1 196 19 is_stmt 0 view .LVU3806
 11105 4092 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_919, offset: 0B], _241
 197:sieve_extend.c ****    }
 11106              		.loc 1 197 8 is_stmt 1 view .LVU3807
 11107              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 11108              		.loc 1 197 17 is_stmt 0 view .LVU3808
 11109 4095 4801CA   		add	rdx, rcx	# index_ptr, _256
 11110              	.LVL598:
 195:sieve_extend.c ****        *index_ptr |= mask;
 11111              		.loc 1 195 10 is_stmt 1 view .LVU3809
 11112 4098 4939D1   		cmp	r9, rdx	# range_stop_ptr, index_ptr
 11113 409b 77A8     		ja	.L882	#,
 11114 409d 0F1F00   		.p2align 4
 11115              		.p2align 3
 11116              	.L881:
 200:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 11117              		.loc 1 200 4 view .LVU3810
 11118              	# sieve_extend.c:200:    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range
 200:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 11119              		.loc 1 200 7 is_stmt 0 view .LVU3811
 11120 40a0 4939D1   		cmp	r9, rdx	# range_stop_ptr, index_ptr
 11121 40a3 741B     		je	.L1461	#,
 11122              	.LVL599:
 11123              	.L883:
 200:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 11124              		.loc 1 200 7 view .LVU3812
 11125              	.LBE570:
 11126              	.LBE573:
 418:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 11127              		.loc 1 418 77 is_stmt 1 view .LVU3813
 11128              	# sieve_extend.c:418:     for (register counter_t index = range_start; index < range_stop_unique; i
 418:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 11129              		.loc 1 418 83 is_stmt 0 view .LVU3814
 11130 40a5 4C01E5   		add	rbp, r12	# index, step
 11131              	.LVL600:
GAS LISTING /tmp/ccr2dACi.s 			page 305


 418:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 11132              		.loc 1 418 50 is_stmt 1 view .LVU3815
 11133              	# sieve_extend.c:418:     for (register counter_t index = range_start; index < range_stop_unique; i
 418:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 11134              		.loc 1 418 5 is_stmt 0 view .LVU3816
 11135 40a8 4939E8   		cmp	r8, rbp	# range_stop_unique, index
 11136 40ab 0F876FFE 		ja	.L884	#,
 11136      FFFF
 11137 40b1 4C8B4424 		mov	r8, QWORD PTR 72[rsp]	# _69, %sfp
 11137      48
 11138              	.LVL601:
 418:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 11139              		.loc 1 418 5 view .LVU3817
 11140 40b6 E9B0F9FF 		jmp	.L859	#
 11140      FF
 11141              	.LVL602:
 11142 40bb 0F1F4400 		.p2align 4,,7
 11142      00
 11143              		.p2align 3
 11144              	.L1461:
 11145              	.LBB574:
 11146              	.LBB571:
 201:sieve_extend.c ****    }
 11147              		.loc 1 201 7 is_stmt 1 view .LVU3818
 11148              	# sieve_extend.c:201:       *index_ptr |= (mask & chopmask(range_stop));
 201:sieve_extend.c ****    }
 11149              		.loc 1 201 27 is_stmt 0 view .LVU3819
 11150 40c0 48237424 		and	rsi, QWORD PTR 40[rsp]	# tmp645, %sfp
 11150      28
 11151              	.LVL603:
 11152              	# sieve_extend.c:201:       *index_ptr |= (mask & chopmask(range_stop));
 201:sieve_extend.c ****    }
 11153              		.loc 1 201 18 view .LVU3820
 11154 40c5 490931   		or	QWORD PTR [r9], rsi	# *index_ptr_918, tmp645
 11155 40c8 EBDB     		jmp	.L883	#
 11156              	.LVL604:
 11157 40ca 660F1F44 		.p2align 4,,7
 11157      0000
 11158              		.p2align 3
 11159              	.L1456:
 201:sieve_extend.c ****    }
 11160              		.loc 1 201 18 view .LVU3821
 11161              	.LBE571:
 11162              	.LBE574:
 11163              	.LBE566:
 11164              	.LBE565:
 11165              	.LBE564:
1034:sieve_extend.c ****         else if (step < WORD_SIZE_counter * 4) setBitsTrue_largeRange_vector(bitarray, start, step,
 11166              		.loc 1 1034 48 is_stmt 1 view .LVU3822
 11167              	.LBB575:
 11168              	.LBI575:
 297:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 11169              		.loc 1 297 14 view .LVU3823
 11170              	.LBB576:
 298:sieve_extend.c **** 
 11171              		.loc 1 298 5 view .LVU3824
 11172              	# sieve_extend.c:298:     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * st
GAS LISTING /tmp/ccr2dACi.s 			page 306


 298:sieve_extend.c **** 
 11173              		.loc 1 298 74 is_stmt 0 view .LVU3825
 11174 40d0 4C89E7   		mov	rdi, r12	# tmp597, step
 11175 40d3 48C1E706 		sal	rdi, 6	# tmp597,
 11176 40d7 4801EF   		add	rdi, rbp	# tmp597, index
 11177 40da 48897C24 		mov	QWORD PTR 72[rsp], rdi	# %sfp, tmp598
 11177      48
 11178 40df 0F92C0   		setc	al	#, _592
 11179              	# sieve_extend.c:300:     if (range_stop_unique > range_stop) { // the range will not repeat itself
 300:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-unique (%ju
 11180              		.loc 1 300 8 view .LVU3826
 11181 40e2 4939F8   		cmp	r8, rdi	# _69, tmp598
 11182 40e5 440FB6C8 		movzx	r9d, al	# _592, _592
 11183              	.LVL605:
 300:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-unique (%ju
 11184              		.loc 1 300 5 is_stmt 1 view .LVU3827
 11185              	# sieve_extend.c:300:     if (range_stop_unique > range_stop) { // the range will not repeat itself
 300:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-unique (%ju
 11186              		.loc 1 300 8 is_stmt 0 view .LVU3828
 11187 40e9 0F827404 		jb	.L866	#,
 11187      0000
 11188              	.LVL606:
 11189              	.LBB577:
 321:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 11190              		.loc 1 321 54 is_stmt 1 view .LVU3829
 11191              	# sieve_extend.c:321:         for (register counter_t index = range_start; index <= range_stop_uniq
 321:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 11192              		.loc 1 321 9 is_stmt 0 view .LVU3830
 11193 40ef 4D85C9   		test	r9, r9	# _592
 11194 40f2 0F8573F9 		jne	.L859	#,
 11194      FFFF
 11195              	.LBB578:
 11196              	.LBB579:
 11197              	.LBB580:
 11198              	# sieve_extend.c:175:    const counter_t range_stop_word = wordindex(range_stop);
 175:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 11199              		.loc 1 175 20 view .LVU3831
 11200 40f8 4D89C3   		mov	r11, r8	# range_stop_word, _69
 11201              	# sieve_extend.c:177:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 177:sieve_extend.c **** 
 11202              		.loc 1 177 110 view .LVU3832
 11203 40fb 4B8D3CA4 		lea	rdi, [r12+r12*4]	# tmp606,
 11204              	.LVL607:
 11205              	# sieve_extend.c:175:    const counter_t range_stop_word = wordindex(range_stop);
 175:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 11206              		.loc 1 175 20 view .LVU3833
 11207 40ff 49C1EB06 		shr	r11, 6	# range_stop_word,
 11208              	# sieve_extend.c:201:       *index_ptr |= (mask & chopmask(range_stop));
 201:sieve_extend.c ****    }
 11209              		.loc 1 201 29 view .LVU3834
 11210 4103 4589C2   		mov	r10d, r8d	# tmp608, _69
 11211              	# sieve_extend.c:177:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 177:sieve_extend.c **** 
 11212              		.loc 1 177 133 view .LVU3835
 11213 4106 4C89D8   		mov	rax, r11	# tmp612, range_stop_word
 11214              	# sieve_extend.c:201:       *index_ptr |= (mask & chopmask(range_stop));
 201:sieve_extend.c ****    }
GAS LISTING /tmp/ccr2dACi.s 			page 307


 11215              		.loc 1 201 29 view .LVU3836
 11216 4109 41F7D2   		not	r10d	# tmp608
 11217              	# sieve_extend.c:177:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 177:sieve_extend.c **** 
 11218              		.loc 1 177 133 view .LVU3837
 11219 410c 4829F8   		sub	rax, rdi	# tmp612, tmp606
 11220 410f 4939FB   		cmp	r11, rdi	# range_stop_word, tmp606
 11221              	# sieve_extend.c:201:       *index_ptr |= (mask & chopmask(range_stop));
 201:sieve_extend.c ****    }
 11222              		.loc 1 201 29 view .LVU3838
 11223 4112 48C7C6FF 		mov	rsi, -1	# tmp1638,
 11223      FFFFFF
 11224 4119 C4E2ABF7 		shrx	rdx, rsi, r10	# _232, tmp1638, tmp608
 11224      D6
 11225 411e 4D8D14C7 		lea	r10, [r15+rax*8]	# tmp614,
 11226 4122 4C89E6   		mov	rsi, r12	# _1339, step
 11227 4125 4D0F46D7 		cmovbe	r10, r15	# _97,, fast_loop_ptr
 11228              	# sieve_extend.c:194:    const register bitword_t* __restrict range_stop_ptr = &bitarray[(range_sto
 194:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 11229              		.loc 1 194 41 view .LVU3839
 11230 4129 4F8D0CDF 		lea	r9, [r15+r11*8]	# range_stop_ptr,
 11231 412d 48C1E604 		sal	rsi, 4	# _1339,
 11232              	# sieve_extend.c:183:        index_ptr+=step;
 183:sieve_extend.c ****        *index_ptr |= mask;
 11233              		.loc 1 183 17 view .LVU3840
 11234 4131 4A8D0CE5 		lea	rcx, 0[0+r12*8]	# _200,
 11234      00000000 
 11235              	.LBE580:
 11236              	.LBE579:
 11237              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 11238              		.loc 1 326 25 view .LVU3841
 11239 4139 48895C24 		mov	QWORD PTR 80[rsp], rbx	# %sfp, index
 11239      50
 11240 413e 41BB0100 		mov	r11d, 1	# tmp621,
 11240      0000
 11241 4144 4C894424 		mov	QWORD PTR 88[rsp], r8	# %sfp, _69
 11241      58
 11242 4149 4889F3   		mov	rbx, rsi	# _1339, _1339
 11243              	.LBB584:
 11244              	.LBB581:
 11245              	# sieve_extend.c:201:       *index_ptr |= (mask & chopmask(range_stop));
 201:sieve_extend.c ****    }
 11246              		.loc 1 201 29 view .LVU3842
 11247 414c 48895424 		mov	QWORD PTR 40[rsp], rdx	# %sfp, _232
 11247      28
 11248 4151 48C1E703 		sal	rdi, 3	# tmp618,
 11249              	.LBE581:
 11250              	.LBE584:
 11251              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 11252              		.loc 1 326 25 view .LVU3843
 11253 4155 4C8B4424 		mov	r8, QWORD PTR 72[rsp]	# tmp598, %sfp
 11253      48
 11254              	.LVL608:
 11255 415a 660F1F44 		.p2align 4
 11255      0000
GAS LISTING /tmp/ccr2dACi.s 			page 308


 11256              		.p2align 3
 11257              	.L877:
 322:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 11258              		.loc 1 322 13 is_stmt 1 view .LVU3844
 11259              	# sieve_extend.c:322:             register counter_t index_word = wordindex(index);
 322:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 11260              		.loc 1 322 32 is_stmt 0 view .LVU3845
 11261 4160 4889E8   		mov	rax, rbp	# index_word, index
 11262              	# sieve_extend.c:323:             register bitword_t mask = SAFE_ZERO;
 323:sieve_extend.c ****             #pragma ivdep
 11263              		.loc 1 323 32 view .LVU3846
 11264 4163 31D2     		xor	edx, edx	# mask
 11265              	# sieve_extend.c:322:             register counter_t index_word = wordindex(index);
 322:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 11266              		.loc 1 322 32 view .LVU3847
 11267 4165 48C1E806 		shr	rax, 6	# index_word,
 11268              	.LVL609:
 323:sieve_extend.c ****             #pragma ivdep
 11269              		.loc 1 323 13 is_stmt 1 view .LVU3848
 11270              	.L871:
 325:sieve_extend.c ****                 mask |= markmask(index);
 11271              		.loc 1 325 13 view .LVU3849
 326:sieve_extend.c ****                 index += step;
 11272              		.loc 1 326 17 view .LVU3850
 11273              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 11274              		.loc 1 326 25 is_stmt 0 view .LVU3851
 11275 4169 C4C2D1F7 		shlx	rsi, r11, rbp	# tmp620, tmp621, index
 11275      F3
 11276              	# sieve_extend.c:327:                 index += step;
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 11277              		.loc 1 327 23 view .LVU3852
 11278 416e 4C01E5   		add	rbp, r12	# index, step
 11279              	.LVL610:
 11280              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 11281              		.loc 1 326 22 view .LVU3853
 11282 4171 4809F2   		or	rdx, rsi	# mask, tmp620
 11283              	.LVL611:
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 11284              		.loc 1 327 17 is_stmt 1 view .LVU3854
 328:sieve_extend.c ****             // #pragma ivdep
 11285              		.loc 1 328 21 view .LVU3855
 11286              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 11287              		.loc 1 328 36 is_stmt 0 view .LVU3856
 11288 4174 4889EE   		mov	rsi, rbp	# tmp622, index
 11289 4177 48C1EE06 		shr	rsi, 6	# tmp622,
 11290              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 11291              		.loc 1 328 13 view .LVU3857
 11292 417b 4839F0   		cmp	rax, rsi	# index_word, tmp622
 11293 417e 0F85AC00 		jne	.L1317	#,
 11293      0000
 325:sieve_extend.c ****                 mask |= markmask(index);
 11294              		.loc 1 325 13 is_stmt 1 view .LVU3858
 326:sieve_extend.c ****                 index += step;
GAS LISTING /tmp/ccr2dACi.s 			page 309


 11295              		.loc 1 326 17 view .LVU3859
 11296              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 11297              		.loc 1 326 25 is_stmt 0 view .LVU3860
 11298 4184 C4C2D1F7 		shlx	rsi, r11, rbp	# tmp1224, tmp621, index
 11298      F3
 11299              	# sieve_extend.c:327:                 index += step;
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 11300              		.loc 1 327 23 view .LVU3861
 11301 4189 4C01E5   		add	rbp, r12	# index, step
 11302              	.LVL612:
 11303              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 11304              		.loc 1 326 22 view .LVU3862
 11305 418c 4809F2   		or	rdx, rsi	# mask, tmp1224
 11306              	.LVL613:
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 11307              		.loc 1 327 17 is_stmt 1 view .LVU3863
 328:sieve_extend.c ****             // #pragma ivdep
 11308              		.loc 1 328 21 view .LVU3864
 11309              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 11310              		.loc 1 328 36 is_stmt 0 view .LVU3865
 11311 418f 4889EE   		mov	rsi, rbp	# tmp1225, index
 11312 4192 48C1EE06 		shr	rsi, 6	# tmp1225,
 11313              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 11314              		.loc 1 328 13 view .LVU3866
 11315 4196 4839F0   		cmp	rax, rsi	# index_word, tmp1225
 11316 4199 0F859100 		jne	.L1317	#,
 11316      0000
 325:sieve_extend.c ****                 mask |= markmask(index);
 11317              		.loc 1 325 13 is_stmt 1 view .LVU3867
 326:sieve_extend.c ****                 index += step;
 11318              		.loc 1 326 17 view .LVU3868
 11319              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 11320              		.loc 1 326 25 is_stmt 0 view .LVU3869
 11321 419f C4C2D1F7 		shlx	rsi, r11, rbp	# tmp1226, tmp621, index
 11321      F3
 11322              	# sieve_extend.c:327:                 index += step;
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 11323              		.loc 1 327 23 view .LVU3870
 11324 41a4 4C01E5   		add	rbp, r12	# index, step
 11325              	.LVL614:
 11326              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 11327              		.loc 1 326 22 view .LVU3871
 11328 41a7 4809F2   		or	rdx, rsi	# mask, tmp1226
 11329              	.LVL615:
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 11330              		.loc 1 327 17 is_stmt 1 view .LVU3872
 328:sieve_extend.c ****             // #pragma ivdep
 11331              		.loc 1 328 21 view .LVU3873
 11332              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 11333              		.loc 1 328 36 is_stmt 0 view .LVU3874
GAS LISTING /tmp/ccr2dACi.s 			page 310


 11334 41aa 4889EE   		mov	rsi, rbp	# tmp1227, index
 11335 41ad 48C1EE06 		shr	rsi, 6	# tmp1227,
 11336              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 11337              		.loc 1 328 13 view .LVU3875
 11338 41b1 4839F0   		cmp	rax, rsi	# index_word, tmp1227
 11339 41b4 757A     		jne	.L1317	#,
 325:sieve_extend.c ****                 mask |= markmask(index);
 11340              		.loc 1 325 13 is_stmt 1 view .LVU3876
 326:sieve_extend.c ****                 index += step;
 11341              		.loc 1 326 17 view .LVU3877
 11342              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 11343              		.loc 1 326 25 is_stmt 0 view .LVU3878
 11344 41b6 C4C2D1F7 		shlx	rsi, r11, rbp	# tmp1228, tmp621, index
 11344      F3
 11345              	# sieve_extend.c:327:                 index += step;
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 11346              		.loc 1 327 23 view .LVU3879
 11347 41bb 4C01E5   		add	rbp, r12	# index, step
 11348              	.LVL616:
 11349              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 11350              		.loc 1 326 22 view .LVU3880
 11351 41be 4809F2   		or	rdx, rsi	# mask, tmp1228
 11352              	.LVL617:
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 11353              		.loc 1 327 17 is_stmt 1 view .LVU3881
 328:sieve_extend.c ****             // #pragma ivdep
 11354              		.loc 1 328 21 view .LVU3882
 11355              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 11356              		.loc 1 328 36 is_stmt 0 view .LVU3883
 11357 41c1 4889EE   		mov	rsi, rbp	# tmp1229, index
 11358 41c4 48C1EE06 		shr	rsi, 6	# tmp1229,
 11359              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 11360              		.loc 1 328 13 view .LVU3884
 11361 41c8 4839F0   		cmp	rax, rsi	# index_word, tmp1229
 11362 41cb 7563     		jne	.L1317	#,
 325:sieve_extend.c ****                 mask |= markmask(index);
 11363              		.loc 1 325 13 is_stmt 1 view .LVU3885
 326:sieve_extend.c ****                 index += step;
 11364              		.loc 1 326 17 view .LVU3886
 11365              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 11366              		.loc 1 326 25 is_stmt 0 view .LVU3887
 11367 41cd C4C2D1F7 		shlx	rsi, r11, rbp	# tmp1230, tmp621, index
 11367      F3
 11368              	# sieve_extend.c:327:                 index += step;
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 11369              		.loc 1 327 23 view .LVU3888
 11370 41d2 4C01E5   		add	rbp, r12	# index, step
 11371              	.LVL618:
 11372              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 11373              		.loc 1 326 22 view .LVU3889
GAS LISTING /tmp/ccr2dACi.s 			page 311


 11374 41d5 4809F2   		or	rdx, rsi	# mask, tmp1230
 11375              	.LVL619:
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 11376              		.loc 1 327 17 is_stmt 1 view .LVU3890
 328:sieve_extend.c ****             // #pragma ivdep
 11377              		.loc 1 328 21 view .LVU3891
 11378              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 11379              		.loc 1 328 36 is_stmt 0 view .LVU3892
 11380 41d8 4889EE   		mov	rsi, rbp	# tmp1231, index
 11381 41db 48C1EE06 		shr	rsi, 6	# tmp1231,
 11382              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 11383              		.loc 1 328 13 view .LVU3893
 11384 41df 4839F0   		cmp	rax, rsi	# index_word, tmp1231
 11385 41e2 754C     		jne	.L1317	#,
 325:sieve_extend.c ****                 mask |= markmask(index);
 11386              		.loc 1 325 13 is_stmt 1 view .LVU3894
 326:sieve_extend.c ****                 index += step;
 11387              		.loc 1 326 17 view .LVU3895
 11388              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 11389              		.loc 1 326 25 is_stmt 0 view .LVU3896
 11390 41e4 C4C2D1F7 		shlx	rsi, r11, rbp	# tmp1232, tmp621, index
 11390      F3
 11391              	# sieve_extend.c:327:                 index += step;
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 11392              		.loc 1 327 23 view .LVU3897
 11393 41e9 4C01E5   		add	rbp, r12	# index, step
 11394              	.LVL620:
 11395              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 11396              		.loc 1 326 22 view .LVU3898
 11397 41ec 4809F2   		or	rdx, rsi	# mask, tmp1232
 11398              	.LVL621:
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 11399              		.loc 1 327 17 is_stmt 1 view .LVU3899
 328:sieve_extend.c ****             // #pragma ivdep
 11400              		.loc 1 328 21 view .LVU3900
 11401              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 11402              		.loc 1 328 36 is_stmt 0 view .LVU3901
 11403 41ef 4889EE   		mov	rsi, rbp	# tmp1233, index
 11404 41f2 48C1EE06 		shr	rsi, 6	# tmp1233,
 11405              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 11406              		.loc 1 328 13 view .LVU3902
 11407 41f6 4839F0   		cmp	rax, rsi	# index_word, tmp1233
 11408 41f9 7535     		jne	.L1317	#,
 325:sieve_extend.c ****                 mask |= markmask(index);
 11409              		.loc 1 325 13 is_stmt 1 view .LVU3903
 326:sieve_extend.c ****                 index += step;
 11410              		.loc 1 326 17 view .LVU3904
 11411              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 11412              		.loc 1 326 25 is_stmt 0 view .LVU3905
 11413 41fb C4C2D1F7 		shlx	rsi, r11, rbp	# tmp1234, tmp621, index
GAS LISTING /tmp/ccr2dACi.s 			page 312


 11413      F3
 11414              	# sieve_extend.c:327:                 index += step;
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 11415              		.loc 1 327 23 view .LVU3906
 11416 4200 4C01E5   		add	rbp, r12	# index, step
 11417              	.LVL622:
 11418              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 11419              		.loc 1 326 22 view .LVU3907
 11420 4203 4809F2   		or	rdx, rsi	# mask, tmp1234
 11421              	.LVL623:
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 11422              		.loc 1 327 17 is_stmt 1 view .LVU3908
 328:sieve_extend.c ****             // #pragma ivdep
 11423              		.loc 1 328 21 view .LVU3909
 11424              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 11425              		.loc 1 328 36 is_stmt 0 view .LVU3910
 11426 4206 4889EE   		mov	rsi, rbp	# tmp1235, index
 11427 4209 48C1EE06 		shr	rsi, 6	# tmp1235,
 11428              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 11429              		.loc 1 328 13 view .LVU3911
 11430 420d 4839F0   		cmp	rax, rsi	# index_word, tmp1235
 11431 4210 751E     		jne	.L1317	#,
 325:sieve_extend.c ****                 mask |= markmask(index);
 11432              		.loc 1 325 13 is_stmt 1 view .LVU3912
 326:sieve_extend.c ****                 index += step;
 11433              		.loc 1 326 17 view .LVU3913
 11434              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 11435              		.loc 1 326 25 is_stmt 0 view .LVU3914
 11436 4212 C4C2D1F7 		shlx	rsi, r11, rbp	# tmp1236, tmp621, index
 11436      F3
 11437              	# sieve_extend.c:327:                 index += step;
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 11438              		.loc 1 327 23 view .LVU3915
 11439 4217 4C01E5   		add	rbp, r12	# index, step
 11440              	.LVL624:
 11441              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 11442              		.loc 1 326 22 view .LVU3916
 11443 421a 4809F2   		or	rdx, rsi	# mask, tmp1236
 11444              	.LVL625:
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 11445              		.loc 1 327 17 is_stmt 1 view .LVU3917
 328:sieve_extend.c ****             // #pragma ivdep
 11446              		.loc 1 328 21 view .LVU3918
 11447              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 11448              		.loc 1 328 36 is_stmt 0 view .LVU3919
 11449 421d 4889EE   		mov	rsi, rbp	# tmp1237, index
 11450 4220 48C1EE06 		shr	rsi, 6	# tmp1237,
 11451              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 11452              		.loc 1 328 13 view .LVU3920
 11453 4224 4839F0   		cmp	rax, rsi	# index_word, tmp1237
GAS LISTING /tmp/ccr2dACi.s 			page 313


 11454 4227 0F843CFF 		je	.L871	#,
 11454      FFFF
 11455 422d 0F1F00   		.p2align 4
 11456              		.p2align 3
 11457              	.L1317:
 332:sieve_extend.c ****         }
 11458              		.loc 1 332 13 is_stmt 1 view .LVU3921
 11459              	.LVL626:
 11460              	.LBB585:
 11461              	.LBI579:
 147:sieve_extend.c **** //#if __APPLE__
 11462              		.loc 1 147 20 view .LVU3922
 11463              	.LBB582:
 175:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 11464              		.loc 1 175 4 view .LVU3923
 176:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 11465              		.loc 1 176 4 view .LVU3924
 11466              	# sieve_extend.c:176:    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(
 176:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 11467              		.loc 1 176 78 is_stmt 0 view .LVU3925
 11468 4230 498D04C7 		lea	rax, [r15+rax*8]	# index_ptr,
 11469              	.LVL627:
 177:sieve_extend.c **** 
 11470              		.loc 1 177 4 is_stmt 1 view .LVU3926
 181:sieve_extend.c ****        *index_ptr |= mask;
 11471              		.loc 1 181 4 view .LVU3927
 181:sieve_extend.c ****        *index_ptr |= mask;
 11472              		.loc 1 181 10 view .LVU3928
 11473 4234 4C39D0   		cmp	rax, r10	# index_ptr, fast_loop_ptr
 11474 4237 0F830301 		jnb	.L872	#,
 11474      0000
 181:sieve_extend.c ****        *index_ptr |= mask;
 11475              		.loc 1 181 10 is_stmt 0 view .LVU3929
 11476 423d 488D3418 		lea	rsi, [rax+rbx]	# ivtmp.654,
 11477              	.L873:
 182:sieve_extend.c ****        index_ptr+=step;
 11478              		.loc 1 182 8 is_stmt 1 view .LVU3930
 11479              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 11480              		.loc 1 182 19 is_stmt 0 view .LVU3931
 11481 4241 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_908, offset: 0B], mask
 183:sieve_extend.c ****        *index_ptr |= mask;
 11482              		.loc 1 183 8 is_stmt 1 view .LVU3932
 11483              	.LVL628:
 184:sieve_extend.c ****        index_ptr+=step;
 11484              		.loc 1 184 8 view .LVU3933
 11485              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 11486              		.loc 1 184 19 is_stmt 0 view .LVU3934
 11487 4244 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_908, index: _200, offset: 0B], mask
 185:sieve_extend.c ****        *index_ptr |= mask;
 11488              		.loc 1 185 8 is_stmt 1 view .LVU3935
 11489              	.LVL629:
 186:sieve_extend.c ****        index_ptr+=step;
 11490              		.loc 1 186 8 view .LVU3936
 11491              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/ccr2dACi.s 			page 314


 11492              		.loc 1 186 19 is_stmt 0 view .LVU3937
 11493 4248 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1331, offset: 0B], mask
 187:sieve_extend.c ****        *index_ptr |= mask;
 11494              		.loc 1 187 8 is_stmt 1 view .LVU3938
 11495              	.LVL630:
 188:sieve_extend.c ****        index_ptr+=step;
 11496              		.loc 1 188 8 view .LVU3939
 11497              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 11498              		.loc 1 188 19 is_stmt 0 view .LVU3940
 11499 424b 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1331, index: _200, offset: 0B], mask
 189:sieve_extend.c ****        *index_ptr |= mask;
 11500              		.loc 1 189 8 is_stmt 1 view .LVU3941
 11501              	.LVL631:
 190:sieve_extend.c ****        index_ptr+=step;
 11502              		.loc 1 190 8 view .LVU3942
 11503 424f 4801FE   		add	rsi, rdi	# ivtmp.654, tmp618
 11504              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 11505              		.loc 1 190 19 is_stmt 0 view .LVU3943
 11506 4252 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_908, index: _200, step: 4, offset: 0B], mask
 191:sieve_extend.c ****    }
 11507              		.loc 1 191 8 is_stmt 1 view .LVU3944
 11508 4256 4801F8   		add	rax, rdi	# index_ptr, tmp618
 11509              	.LVL632:
 181:sieve_extend.c ****        *index_ptr |= mask;
 11510              		.loc 1 181 10 view .LVU3945
 11511 4259 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 11512 425c 0F86DE00 		jbe	.L872	#,
 11512      0000
 182:sieve_extend.c ****        index_ptr+=step;
 11513              		.loc 1 182 8 view .LVU3946
 11514              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 11515              		.loc 1 182 19 is_stmt 0 view .LVU3947
 11516 4262 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_908, offset: 0B], mask
 183:sieve_extend.c ****        *index_ptr |= mask;
 11517              		.loc 1 183 8 is_stmt 1 view .LVU3948
 11518              	.LVL633:
 184:sieve_extend.c ****        index_ptr+=step;
 11519              		.loc 1 184 8 view .LVU3949
 11520              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 11521              		.loc 1 184 19 is_stmt 0 view .LVU3950
 11522 4265 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_908, index: _200, offset: 0B], mask
 185:sieve_extend.c ****        *index_ptr |= mask;
 11523              		.loc 1 185 8 is_stmt 1 view .LVU3951
 11524              	.LVL634:
 186:sieve_extend.c ****        index_ptr+=step;
 11525              		.loc 1 186 8 view .LVU3952
 11526              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 11527              		.loc 1 186 19 is_stmt 0 view .LVU3953
 11528 4269 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1331, offset: 0B], mask
 187:sieve_extend.c ****        *index_ptr |= mask;
 11529              		.loc 1 187 8 is_stmt 1 view .LVU3954
 11530              	.LVL635:
GAS LISTING /tmp/ccr2dACi.s 			page 315


 188:sieve_extend.c ****        index_ptr+=step;
 11531              		.loc 1 188 8 view .LVU3955
 11532              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 11533              		.loc 1 188 19 is_stmt 0 view .LVU3956
 11534 426c 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1331, index: _200, offset: 0B], mask
 189:sieve_extend.c ****        *index_ptr |= mask;
 11535              		.loc 1 189 8 is_stmt 1 view .LVU3957
 11536              	.LVL636:
 190:sieve_extend.c ****        index_ptr+=step;
 11537              		.loc 1 190 8 view .LVU3958
 11538 4270 4801FE   		add	rsi, rdi	# ivtmp.654, tmp618
 11539              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 11540              		.loc 1 190 19 is_stmt 0 view .LVU3959
 11541 4273 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_908, index: _200, step: 4, offset: 0B], mask
 191:sieve_extend.c ****    }
 11542              		.loc 1 191 8 is_stmt 1 view .LVU3960
 11543 4277 4801F8   		add	rax, rdi	# index_ptr, tmp618
 11544              	.LVL637:
 181:sieve_extend.c ****        *index_ptr |= mask;
 11545              		.loc 1 181 10 view .LVU3961
 11546 427a 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 11547 427d 0F86BD00 		jbe	.L872	#,
 11547      0000
 182:sieve_extend.c ****        index_ptr+=step;
 11548              		.loc 1 182 8 view .LVU3962
 11549              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 11550              		.loc 1 182 19 is_stmt 0 view .LVU3963
 11551 4283 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_908, offset: 0B], mask
 183:sieve_extend.c ****        *index_ptr |= mask;
 11552              		.loc 1 183 8 is_stmt 1 view .LVU3964
 11553              	.LVL638:
 184:sieve_extend.c ****        index_ptr+=step;
 11554              		.loc 1 184 8 view .LVU3965
 11555              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 11556              		.loc 1 184 19 is_stmt 0 view .LVU3966
 11557 4286 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_908, index: _200, offset: 0B], mask
 185:sieve_extend.c ****        *index_ptr |= mask;
 11558              		.loc 1 185 8 is_stmt 1 view .LVU3967
 11559              	.LVL639:
 186:sieve_extend.c ****        index_ptr+=step;
 11560              		.loc 1 186 8 view .LVU3968
 11561              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 11562              		.loc 1 186 19 is_stmt 0 view .LVU3969
 11563 428a 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1331, offset: 0B], mask
 187:sieve_extend.c ****        *index_ptr |= mask;
 11564              		.loc 1 187 8 is_stmt 1 view .LVU3970
 11565              	.LVL640:
 188:sieve_extend.c ****        index_ptr+=step;
 11566              		.loc 1 188 8 view .LVU3971
 11567              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 11568              		.loc 1 188 19 is_stmt 0 view .LVU3972
GAS LISTING /tmp/ccr2dACi.s 			page 316


 11569 428d 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1331, index: _200, offset: 0B], mask
 189:sieve_extend.c ****        *index_ptr |= mask;
 11570              		.loc 1 189 8 is_stmt 1 view .LVU3973
 11571              	.LVL641:
 190:sieve_extend.c ****        index_ptr+=step;
 11572              		.loc 1 190 8 view .LVU3974
 11573 4291 4801FE   		add	rsi, rdi	# ivtmp.654, tmp618
 11574              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 11575              		.loc 1 190 19 is_stmt 0 view .LVU3975
 11576 4294 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_908, index: _200, step: 4, offset: 0B], mask
 191:sieve_extend.c ****    }
 11577              		.loc 1 191 8 is_stmt 1 view .LVU3976
 11578 4298 4801F8   		add	rax, rdi	# index_ptr, tmp618
 11579              	.LVL642:
 181:sieve_extend.c ****        *index_ptr |= mask;
 11580              		.loc 1 181 10 view .LVU3977
 11581 429b 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 11582 429e 0F869C00 		jbe	.L872	#,
 11582      0000
 182:sieve_extend.c ****        index_ptr+=step;
 11583              		.loc 1 182 8 view .LVU3978
 11584              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 11585              		.loc 1 182 19 is_stmt 0 view .LVU3979
 11586 42a4 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_908, offset: 0B], mask
 183:sieve_extend.c ****        *index_ptr |= mask;
 11587              		.loc 1 183 8 is_stmt 1 view .LVU3980
 11588              	.LVL643:
 184:sieve_extend.c ****        index_ptr+=step;
 11589              		.loc 1 184 8 view .LVU3981
 11590              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 11591              		.loc 1 184 19 is_stmt 0 view .LVU3982
 11592 42a7 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_908, index: _200, offset: 0B], mask
 185:sieve_extend.c ****        *index_ptr |= mask;
 11593              		.loc 1 185 8 is_stmt 1 view .LVU3983
 11594              	.LVL644:
 186:sieve_extend.c ****        index_ptr+=step;
 11595              		.loc 1 186 8 view .LVU3984
 11596              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 11597              		.loc 1 186 19 is_stmt 0 view .LVU3985
 11598 42ab 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1331, offset: 0B], mask
 187:sieve_extend.c ****        *index_ptr |= mask;
 11599              		.loc 1 187 8 is_stmt 1 view .LVU3986
 11600              	.LVL645:
 188:sieve_extend.c ****        index_ptr+=step;
 11601              		.loc 1 188 8 view .LVU3987
 11602              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 11603              		.loc 1 188 19 is_stmt 0 view .LVU3988
 11604 42ae 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1331, index: _200, offset: 0B], mask
 189:sieve_extend.c ****        *index_ptr |= mask;
 11605              		.loc 1 189 8 is_stmt 1 view .LVU3989
 11606              	.LVL646:
 190:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/ccr2dACi.s 			page 317


 11607              		.loc 1 190 8 view .LVU3990
 11608 42b2 4801FE   		add	rsi, rdi	# ivtmp.654, tmp618
 11609              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 11610              		.loc 1 190 19 is_stmt 0 view .LVU3991
 11611 42b5 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_908, index: _200, step: 4, offset: 0B], mask
 191:sieve_extend.c ****    }
 11612              		.loc 1 191 8 is_stmt 1 view .LVU3992
 11613 42b9 4801F8   		add	rax, rdi	# index_ptr, tmp618
 11614              	.LVL647:
 181:sieve_extend.c ****        *index_ptr |= mask;
 11615              		.loc 1 181 10 view .LVU3993
 11616 42bc 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 11617 42bf 767F     		jbe	.L872	#,
 182:sieve_extend.c ****        index_ptr+=step;
 11618              		.loc 1 182 8 view .LVU3994
 11619              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 11620              		.loc 1 182 19 is_stmt 0 view .LVU3995
 11621 42c1 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_908, offset: 0B], mask
 183:sieve_extend.c ****        *index_ptr |= mask;
 11622              		.loc 1 183 8 is_stmt 1 view .LVU3996
 11623              	.LVL648:
 184:sieve_extend.c ****        index_ptr+=step;
 11624              		.loc 1 184 8 view .LVU3997
 11625              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 11626              		.loc 1 184 19 is_stmt 0 view .LVU3998
 11627 42c4 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_908, index: _200, offset: 0B], mask
 185:sieve_extend.c ****        *index_ptr |= mask;
 11628              		.loc 1 185 8 is_stmt 1 view .LVU3999
 11629              	.LVL649:
 186:sieve_extend.c ****        index_ptr+=step;
 11630              		.loc 1 186 8 view .LVU4000
 11631              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 11632              		.loc 1 186 19 is_stmt 0 view .LVU4001
 11633 42c8 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1331, offset: 0B], mask
 187:sieve_extend.c ****        *index_ptr |= mask;
 11634              		.loc 1 187 8 is_stmt 1 view .LVU4002
 11635              	.LVL650:
 188:sieve_extend.c ****        index_ptr+=step;
 11636              		.loc 1 188 8 view .LVU4003
 11637              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 11638              		.loc 1 188 19 is_stmt 0 view .LVU4004
 11639 42cb 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1331, index: _200, offset: 0B], mask
 189:sieve_extend.c ****        *index_ptr |= mask;
 11640              		.loc 1 189 8 is_stmt 1 view .LVU4005
 11641              	.LVL651:
 190:sieve_extend.c ****        index_ptr+=step;
 11642              		.loc 1 190 8 view .LVU4006
 11643 42cf 4801FE   		add	rsi, rdi	# ivtmp.654, tmp618
 11644              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 11645              		.loc 1 190 19 is_stmt 0 view .LVU4007
 11646 42d2 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_908, index: _200, step: 4, offset: 0B], mask
GAS LISTING /tmp/ccr2dACi.s 			page 318


 191:sieve_extend.c ****    }
 11647              		.loc 1 191 8 is_stmt 1 view .LVU4008
 11648 42d6 4801F8   		add	rax, rdi	# index_ptr, tmp618
 11649              	.LVL652:
 181:sieve_extend.c ****        *index_ptr |= mask;
 11650              		.loc 1 181 10 view .LVU4009
 11651 42d9 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 11652 42dc 7662     		jbe	.L872	#,
 182:sieve_extend.c ****        index_ptr+=step;
 11653              		.loc 1 182 8 view .LVU4010
 11654              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 11655              		.loc 1 182 19 is_stmt 0 view .LVU4011
 11656 42de 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_908, offset: 0B], mask
 183:sieve_extend.c ****        *index_ptr |= mask;
 11657              		.loc 1 183 8 is_stmt 1 view .LVU4012
 11658              	.LVL653:
 184:sieve_extend.c ****        index_ptr+=step;
 11659              		.loc 1 184 8 view .LVU4013
 11660              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 11661              		.loc 1 184 19 is_stmt 0 view .LVU4014
 11662 42e1 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_908, index: _200, offset: 0B], mask
 185:sieve_extend.c ****        *index_ptr |= mask;
 11663              		.loc 1 185 8 is_stmt 1 view .LVU4015
 11664              	.LVL654:
 186:sieve_extend.c ****        index_ptr+=step;
 11665              		.loc 1 186 8 view .LVU4016
 11666              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 11667              		.loc 1 186 19 is_stmt 0 view .LVU4017
 11668 42e5 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1331, offset: 0B], mask
 187:sieve_extend.c ****        *index_ptr |= mask;
 11669              		.loc 1 187 8 is_stmt 1 view .LVU4018
 11670              	.LVL655:
 188:sieve_extend.c ****        index_ptr+=step;
 11671              		.loc 1 188 8 view .LVU4019
 11672              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 11673              		.loc 1 188 19 is_stmt 0 view .LVU4020
 11674 42e8 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1331, index: _200, offset: 0B], mask
 189:sieve_extend.c ****        *index_ptr |= mask;
 11675              		.loc 1 189 8 is_stmt 1 view .LVU4021
 11676              	.LVL656:
 190:sieve_extend.c ****        index_ptr+=step;
 11677              		.loc 1 190 8 view .LVU4022
 11678 42ec 4801FE   		add	rsi, rdi	# ivtmp.654, tmp618
 11679              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 11680              		.loc 1 190 19 is_stmt 0 view .LVU4023
 11681 42ef 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_908, index: _200, step: 4, offset: 0B], mask
 191:sieve_extend.c ****    }
 11682              		.loc 1 191 8 is_stmt 1 view .LVU4024
 11683 42f3 4801F8   		add	rax, rdi	# index_ptr, tmp618
 11684              	.LVL657:
 181:sieve_extend.c ****        *index_ptr |= mask;
 11685              		.loc 1 181 10 view .LVU4025
GAS LISTING /tmp/ccr2dACi.s 			page 319


 11686 42f6 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 11687 42f9 7645     		jbe	.L872	#,
 182:sieve_extend.c ****        index_ptr+=step;
 11688              		.loc 1 182 8 view .LVU4026
 11689              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 11690              		.loc 1 182 19 is_stmt 0 view .LVU4027
 11691 42fb 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_908, offset: 0B], mask
 183:sieve_extend.c ****        *index_ptr |= mask;
 11692              		.loc 1 183 8 is_stmt 1 view .LVU4028
 11693              	.LVL658:
 184:sieve_extend.c ****        index_ptr+=step;
 11694              		.loc 1 184 8 view .LVU4029
 11695              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 11696              		.loc 1 184 19 is_stmt 0 view .LVU4030
 11697 42fe 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_908, index: _200, offset: 0B], mask
 185:sieve_extend.c ****        *index_ptr |= mask;
 11698              		.loc 1 185 8 is_stmt 1 view .LVU4031
 11699              	.LVL659:
 186:sieve_extend.c ****        index_ptr+=step;
 11700              		.loc 1 186 8 view .LVU4032
 11701              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 11702              		.loc 1 186 19 is_stmt 0 view .LVU4033
 11703 4302 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1331, offset: 0B], mask
 187:sieve_extend.c ****        *index_ptr |= mask;
 11704              		.loc 1 187 8 is_stmt 1 view .LVU4034
 11705              	.LVL660:
 188:sieve_extend.c ****        index_ptr+=step;
 11706              		.loc 1 188 8 view .LVU4035
 11707              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 11708              		.loc 1 188 19 is_stmt 0 view .LVU4036
 11709 4305 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1331, index: _200, offset: 0B], mask
 189:sieve_extend.c ****        *index_ptr |= mask;
 11710              		.loc 1 189 8 is_stmt 1 view .LVU4037
 11711              	.LVL661:
 190:sieve_extend.c ****        index_ptr+=step;
 11712              		.loc 1 190 8 view .LVU4038
 11713 4309 4801FE   		add	rsi, rdi	# ivtmp.654, tmp618
 11714              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 11715              		.loc 1 190 19 is_stmt 0 view .LVU4039
 11716 430c 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_908, index: _200, step: 4, offset: 0B], mask
 191:sieve_extend.c ****    }
 11717              		.loc 1 191 8 is_stmt 1 view .LVU4040
 11718 4310 4801F8   		add	rax, rdi	# index_ptr, tmp618
 11719              	.LVL662:
 181:sieve_extend.c ****        *index_ptr |= mask;
 11720              		.loc 1 181 10 view .LVU4041
 11721 4313 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 11722 4316 7628     		jbe	.L872	#,
 182:sieve_extend.c ****        index_ptr+=step;
 11723              		.loc 1 182 8 view .LVU4042
 11724              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/ccr2dACi.s 			page 320


 11725              		.loc 1 182 19 is_stmt 0 view .LVU4043
 11726 4318 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_908, offset: 0B], mask
 183:sieve_extend.c ****        *index_ptr |= mask;
 11727              		.loc 1 183 8 is_stmt 1 view .LVU4044
 11728              	.LVL663:
 184:sieve_extend.c ****        index_ptr+=step;
 11729              		.loc 1 184 8 view .LVU4045
 11730              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 11731              		.loc 1 184 19 is_stmt 0 view .LVU4046
 11732 431b 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_908, index: _200, offset: 0B], mask
 185:sieve_extend.c ****        *index_ptr |= mask;
 11733              		.loc 1 185 8 is_stmt 1 view .LVU4047
 11734              	.LVL664:
 186:sieve_extend.c ****        index_ptr+=step;
 11735              		.loc 1 186 8 view .LVU4048
 11736              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 11737              		.loc 1 186 19 is_stmt 0 view .LVU4049
 11738 431f 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1331, offset: 0B], mask
 187:sieve_extend.c ****        *index_ptr |= mask;
 11739              		.loc 1 187 8 is_stmt 1 view .LVU4050
 11740              	.LVL665:
 188:sieve_extend.c ****        index_ptr+=step;
 11741              		.loc 1 188 8 view .LVU4051
 11742              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 11743              		.loc 1 188 19 is_stmt 0 view .LVU4052
 11744 4322 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1331, index: _200, offset: 0B], mask
 189:sieve_extend.c ****        *index_ptr |= mask;
 11745              		.loc 1 189 8 is_stmt 1 view .LVU4053
 11746              	.LVL666:
 190:sieve_extend.c ****        index_ptr+=step;
 11747              		.loc 1 190 8 view .LVU4054
 11748 4326 4801FE   		add	rsi, rdi	# ivtmp.654, tmp618
 11749              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 11750              		.loc 1 190 19 is_stmt 0 view .LVU4055
 11751 4329 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_908, index: _200, step: 4, offset: 0B], mask
 191:sieve_extend.c ****    }
 11752              		.loc 1 191 8 is_stmt 1 view .LVU4056
 11753 432d 4801F8   		add	rax, rdi	# index_ptr, tmp618
 11754              	.LVL667:
 181:sieve_extend.c ****        *index_ptr |= mask;
 11755              		.loc 1 181 10 view .LVU4057
 11756 4330 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 11757 4333 0F8708FF 		ja	.L873	#,
 11757      FFFF
 11758 4339 0F1F8000 		.p2align 4
 11758      000000
 11759              		.p2align 3
 11760              	.L872:
 194:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 11761              		.loc 1 194 4 view .LVU4058
 195:sieve_extend.c ****        *index_ptr |= mask;
 11762              		.loc 1 195 4 view .LVU4059
 195:sieve_extend.c ****        *index_ptr |= mask;
GAS LISTING /tmp/ccr2dACi.s 			page 321


 11763              		.loc 1 195 10 view .LVU4060
 11764 4340 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 11765 4343 765B     		jbe	.L874	#,
 11766              	.L875:
 196:sieve_extend.c ****        index_ptr+=step;
 11767              		.loc 1 196 8 view .LVU4061
 11768              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 11769              		.loc 1 196 19 is_stmt 0 view .LVU4062
 11770 4345 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_922, offset: 0B], mask
 197:sieve_extend.c ****    }
 11771              		.loc 1 197 8 is_stmt 1 view .LVU4063
 11772              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 11773              		.loc 1 197 17 is_stmt 0 view .LVU4064
 11774 4348 4801C8   		add	rax, rcx	# index_ptr, _200
 11775              	.LVL668:
 195:sieve_extend.c ****        *index_ptr |= mask;
 11776              		.loc 1 195 10 is_stmt 1 view .LVU4065
 11777 434b 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 11778 434e 7650     		jbe	.L874	#,
 196:sieve_extend.c ****        index_ptr+=step;
 11779              		.loc 1 196 8 view .LVU4066
 11780              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 11781              		.loc 1 196 19 is_stmt 0 view .LVU4067
 11782 4350 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_922, offset: 0B], mask
 197:sieve_extend.c ****    }
 11783              		.loc 1 197 8 is_stmt 1 view .LVU4068
 11784              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 11785              		.loc 1 197 17 is_stmt 0 view .LVU4069
 11786 4353 4801C8   		add	rax, rcx	# index_ptr, _200
 11787              	.LVL669:
 195:sieve_extend.c ****        *index_ptr |= mask;
 11788              		.loc 1 195 10 is_stmt 1 view .LVU4070
 11789 4356 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 11790 4359 7645     		jbe	.L874	#,
 196:sieve_extend.c ****        index_ptr+=step;
 11791              		.loc 1 196 8 view .LVU4071
 11792              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 11793              		.loc 1 196 19 is_stmt 0 view .LVU4072
 11794 435b 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_922, offset: 0B], mask
 197:sieve_extend.c ****    }
 11795              		.loc 1 197 8 is_stmt 1 view .LVU4073
 11796              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 11797              		.loc 1 197 17 is_stmt 0 view .LVU4074
 11798 435e 4801C8   		add	rax, rcx	# index_ptr, _200
 11799              	.LVL670:
 195:sieve_extend.c ****        *index_ptr |= mask;
 11800              		.loc 1 195 10 is_stmt 1 view .LVU4075
 11801 4361 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 11802 4364 763A     		jbe	.L874	#,
 196:sieve_extend.c ****        index_ptr+=step;
 11803              		.loc 1 196 8 view .LVU4076
GAS LISTING /tmp/ccr2dACi.s 			page 322


 11804              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 11805              		.loc 1 196 19 is_stmt 0 view .LVU4077
 11806 4366 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_922, offset: 0B], mask
 197:sieve_extend.c ****    }
 11807              		.loc 1 197 8 is_stmt 1 view .LVU4078
 11808              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 11809              		.loc 1 197 17 is_stmt 0 view .LVU4079
 11810 4369 4801C8   		add	rax, rcx	# index_ptr, _200
 11811              	.LVL671:
 195:sieve_extend.c ****        *index_ptr |= mask;
 11812              		.loc 1 195 10 is_stmt 1 view .LVU4080
 11813 436c 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 11814 436f 762F     		jbe	.L874	#,
 196:sieve_extend.c ****        index_ptr+=step;
 11815              		.loc 1 196 8 view .LVU4081
 11816              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 11817              		.loc 1 196 19 is_stmt 0 view .LVU4082
 11818 4371 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_922, offset: 0B], mask
 197:sieve_extend.c ****    }
 11819              		.loc 1 197 8 is_stmt 1 view .LVU4083
 11820              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 11821              		.loc 1 197 17 is_stmt 0 view .LVU4084
 11822 4374 4801C8   		add	rax, rcx	# index_ptr, _200
 11823              	.LVL672:
 195:sieve_extend.c ****        *index_ptr |= mask;
 11824              		.loc 1 195 10 is_stmt 1 view .LVU4085
 11825 4377 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 11826 437a 7624     		jbe	.L874	#,
 196:sieve_extend.c ****        index_ptr+=step;
 11827              		.loc 1 196 8 view .LVU4086
 11828              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 11829              		.loc 1 196 19 is_stmt 0 view .LVU4087
 11830 437c 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_922, offset: 0B], mask
 197:sieve_extend.c ****    }
 11831              		.loc 1 197 8 is_stmt 1 view .LVU4088
 11832              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 11833              		.loc 1 197 17 is_stmt 0 view .LVU4089
 11834 437f 4801C8   		add	rax, rcx	# index_ptr, _200
 11835              	.LVL673:
 195:sieve_extend.c ****        *index_ptr |= mask;
 11836              		.loc 1 195 10 is_stmt 1 view .LVU4090
 11837 4382 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 11838 4385 7619     		jbe	.L874	#,
 196:sieve_extend.c ****        index_ptr+=step;
 11839              		.loc 1 196 8 view .LVU4091
 11840              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 11841              		.loc 1 196 19 is_stmt 0 view .LVU4092
 11842 4387 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_922, offset: 0B], mask
 197:sieve_extend.c ****    }
 11843              		.loc 1 197 8 is_stmt 1 view .LVU4093
GAS LISTING /tmp/ccr2dACi.s 			page 323


 11844              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 11845              		.loc 1 197 17 is_stmt 0 view .LVU4094
 11846 438a 4801C8   		add	rax, rcx	# index_ptr, _200
 11847              	.LVL674:
 195:sieve_extend.c ****        *index_ptr |= mask;
 11848              		.loc 1 195 10 is_stmt 1 view .LVU4095
 11849 438d 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 11850 4390 760E     		jbe	.L874	#,
 196:sieve_extend.c ****        index_ptr+=step;
 11851              		.loc 1 196 8 view .LVU4096
 11852              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 11853              		.loc 1 196 19 is_stmt 0 view .LVU4097
 11854 4392 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_922, offset: 0B], mask
 197:sieve_extend.c ****    }
 11855              		.loc 1 197 8 is_stmt 1 view .LVU4098
 11856              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 11857              		.loc 1 197 17 is_stmt 0 view .LVU4099
 11858 4395 4801C8   		add	rax, rcx	# index_ptr, _200
 11859              	.LVL675:
 195:sieve_extend.c ****        *index_ptr |= mask;
 11860              		.loc 1 195 10 is_stmt 1 view .LVU4100
 11861 4398 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 11862 439b 77A8     		ja	.L875	#,
 11863 439d 0F1F00   		.p2align 4
 11864              		.p2align 3
 11865              	.L874:
 200:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 11866              		.loc 1 200 4 view .LVU4101
 11867              	# sieve_extend.c:200:    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range
 200:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 11868              		.loc 1 200 7 is_stmt 0 view .LVU4102
 11869 43a0 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 11870 43a3 0F84CF11 		je	.L1462	#,
 11870      0000
 11871              	.LVL676:
 11872              	.L876:
 200:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 11873              		.loc 1 200 7 view .LVU4103
 11874              	.LBE582:
 11875              	.LBE585:
 11876              	.LBE578:
 321:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 11877              		.loc 1 321 54 is_stmt 1 view .LVU4104
 11878              	# sieve_extend.c:321:         for (register counter_t index = range_start; index <= range_stop_uniq
 321:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 11879              		.loc 1 321 9 is_stmt 0 view .LVU4105
 11880 43a9 4939E8   		cmp	r8, rbp	# tmp598, index
 11881 43ac 0F83AEFD 		jnb	.L877	#,
 11881      FFFF
 321:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 11882              		.loc 1 321 9 view .LVU4106
 11883 43b2 488B5C24 		mov	rbx, QWORD PTR 80[rsp]	# index, %sfp
 11883      50
 11884 43b7 4C8B4424 		mov	r8, QWORD PTR 88[rsp]	# _69, %sfp
GAS LISTING /tmp/ccr2dACi.s 			page 324


 11884      58
 11885 43bc E9AAF6FF 		jmp	.L859	#
 11885      FF
 11886              	.LVL677:
 11887              	.L1452:
 321:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 11888              		.loc 1 321 9 view .LVU4107
 11889 43c1 4C8B4C24 		mov	r9, QWORD PTR 48[rsp]	# <retval>, %sfp
 11889      30
 11890 43c6 48894C24 		mov	QWORD PTR 40[rsp], rcx	# %sfp, prime
 11890      28
 11891 43cb 498B4108 		mov	rax, QWORD PTR 8[r9]	# prephitmp_1432, sieve_92->bits
 11892 43cf 48894424 		mov	QWORD PTR 8[rsp], rax	# %sfp, prephitmp_1432
 11892      08
 11893              	.LVL678:
 11894              	.L850:
 321:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 11895              		.loc 1 321 9 view .LVU4108
 11896              	.LBE577:
 11897              	.LBE576:
 11898              	.LBE575:
 11899              	.LBE603:
 11900              	.LBE610:
 11901              	.LBE625:
1052:sieve_extend.c ****     prime = block.prime;
 11902              		.loc 1 1052 5 is_stmt 1 view .LVU4109
 11903              	.LBB626:
 908:sieve_extend.c ****     if (size < WORD_SIZE_counter)   {
 11904              		.loc 1 908 20 view .LVU4110
 11905              	.LBB620:
 909:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 11906              		.loc 1 909 5 view .LVU4111
 11907              	# sieve_extend.c:909:     if (size < WORD_SIZE_counter)   {
 909:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 11908              		.loc 1 909 8 is_stmt 0 view .LVU4112
 11909 43d4 4883FA3F 		cmp	rdx, 63	# block$pattern_size,
 11910 43d8 0F86B9FA 		jbe	.L843	#,
 11910      FFFF
 11911              	.LVL679:
 11912              	.L886:
 914:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 11913              		.loc 1 914 5 is_stmt 1 view .LVU4113
 915:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 11914              		.loc 1 915 5 view .LVU4114
 11915              	# sieve_extend.c:914:     const counter_t copy_start  = source_start + size;
 914:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 11916              		.loc 1 914 21 is_stmt 0 view .LVU4115
 11917 43de 4C8D0416 		lea	r8, [rsi+rdx]	# copy_start,
 11918              	.LVL680:
 11919              	# sieve_extend.c:916:     const bitshift_t source_bit = bitindex_calc(source_start);
 916:sieve_extend.c **** 
 11920              		.loc 1 916 22 view .LVU4116
 11921 43e2 4989F4   		mov	r12, rsi	# source_bit, block$pattern_start
 11922              	# sieve_extend.c:915:     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 915:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 11923              		.loc 1 915 22 view .LVU4117
 11924 43e5 4183E03F 		and	r8d, 63	# copy_bit,
GAS LISTING /tmp/ccr2dACi.s 			page 325


 11925              	.LVL681:
 916:sieve_extend.c **** 
 11926              		.loc 1 916 5 is_stmt 1 view .LVU4118
 11927              	# sieve_extend.c:916:     const bitshift_t source_bit = bitindex_calc(source_start);
 916:sieve_extend.c **** 
 11928              		.loc 1 916 22 is_stmt 0 view .LVU4119
 11929 43e9 4183E43F 		and	r12d, 63	# source_bit,
 11930              	.LVL682:
 918:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 11931              		.loc 1 918 5 is_stmt 1 view .LVU4120
 11932              	# sieve_extend.c:918:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 918:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 11933              		.loc 1 918 37 is_stmt 0 view .LVU4121
 11934 43ed 488B4C24 		mov	rcx, QWORD PTR 8[rsp]	#, %sfp
 11934      08
 11935              	# sieve_extend.c:918:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 918:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 11936              		.loc 1 918 13 view .LVU4122
 11937 43f2 4D39E0   		cmp	r8, r12	# copy_bit, source_bit
 11938              	# sieve_extend.c:918:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 918:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 11939              		.loc 1 918 37 view .LVU4123
 11940 43f5 488B7C24 		mov	rdi, QWORD PTR 56[rsp]	#, %sfp
 11940      38
 11941              	# sieve_extend.c:918:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 918:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 11942              		.loc 1 918 13 view .LVU4124
 11943 43fa 0F82AA11 		jb	.L1463	#,
 11943      0000
 919:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 11944              		.loc 1 919 10 is_stmt 1 view .LVU4125
 11945              	# sieve_extend.c:919:     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, so
 919:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 11946              		.loc 1 919 13 is_stmt 0 view .LVU4126
 11947 4400 0F878402 		ja	.L1464	#,
 11947      0000
 920:sieve_extend.c **** }
 11948              		.loc 1 920 37 is_stmt 1 view .LVU4127
 11949 4406 E805DBFF 		call	extendSieve_aligned	#
 11949      FF
 11950              	.LVL683:
 11951              	.L887:
 920:sieve_extend.c **** }
 11952              		.loc 1 920 37 is_stmt 0 view .LVU4128
 11953              	.LBE620:
 11954              	.LBE626:
1053:sieve_extend.c **** 
 11955              		.loc 1 1053 5 is_stmt 1 view .LVU4129
1056:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11956              		.loc 1 1056 5 view .LVU4130
 11957              	.LBB627:
1056:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11958              		.loc 1 1056 10 view .LVU4131
 11959              	# sieve_extend.c:1056:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <=
1056:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11960              		.loc 1 1056 38 is_stmt 0 view .LVU4132
 11961 440b 488B5424 		mov	rdx, QWORD PTR 64[rsp]	# blocksize, %sfp
GAS LISTING /tmp/ccr2dACi.s 			page 326


 11961      40
 11962              	# sieve_extend.c:1056:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <=
1056:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11963              		.loc 1 1056 20 view .LVU4133
 11964 4410 4531FF   		xor	r15d, r15d	# block_start
 11965 4413 488B6C24 		mov	rbp, QWORD PTR 40[rsp]	# prime, %sfp
 11965      28
 11966              	# sieve_extend.c:1056:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <=
1056:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11967              		.loc 1 1056 83 view .LVU4134
 11968 4418 4C8B5424 		mov	r10, QWORD PTR 48[rsp]	# <retval>, %sfp
 11968      30
 11969              	# sieve_extend.c:1056:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <=
1056:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11970              		.loc 1 1056 38 view .LVU4135
 11971 441d 488D4AFF 		lea	rcx, -1[rdx]	# block_stop,
 11972              	.LVL684:
1056:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11973              		.loc 1 1056 63 is_stmt 1 view .LVU4136
 11974 4421 488D7501 		lea	rsi, 1[rbp]	# tmp824,
 11975              	.LBB628:
 11976              	.LBB629:
 11977              	.LBB630:
 11978              	.LBB631:
 11979              	# sieve_extend.c:257:    register bitshift_t pattern_size = WORD_SIZE_bitshift - (WORD_SIZE_bitshif
 257:sieve_extend.c ****    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 11980              		.loc 1 257 80 is_stmt 0 view .LVU4137
 11981 4425 4989CC   		mov	r12, rcx	# block_stop, block_stop
 11982              	.LBE631:
 11983              	.LBE630:
 11984              	.LBE629:
 11985              	.LBE628:
 11986              	# sieve_extend.c:1056:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <=
1056:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11987              		.loc 1 1056 83 view .LVU4138
 11988 4428 498B5208 		mov	rdx, QWORD PTR 8[r10]	# _8, sieve_92->bits
 11989              	.LBB719:
 11990              	.LBB714:
 11991              	.LBB647:
 11992              	.LBB642:
 11993              	# sieve_extend.c:257:    register bitshift_t pattern_size = WORD_SIZE_bitshift - (WORD_SIZE_bitshif
 257:sieve_extend.c ****    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 11994              		.loc 1 257 80 view .LVU4139
 11995 442c 48897424 		mov	QWORD PTR 32[rsp], rsi	# %sfp, tmp824
 11995      20
 11996              	.LVL685:
 11997 4431 66662E0F 		.p2align 4
 11997      1F840000 
 11997      0000000F 
 11997      1F4000
 11998              		.p2align 3
 11999              	.L893:
 257:sieve_extend.c ****    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 12000              		.loc 1 257 80 view .LVU4140
 12001              	.LBE642:
 12002              	.LBE647:
 12003              	.LBE714:
GAS LISTING /tmp/ccr2dACi.s 			page 327


 12004              	.LBE719:
1057:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime);
 12005              		.loc 1 1057 9 is_stmt 1 view .LVU4141
 12006              	.LBB720:
 12007              	.LBB721:
 12008              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12009              		.loc 1 123 21 is_stmt 0 view .LVU4142
 12010 4440 488B7C24 		mov	rdi, QWORD PTR 40[rsp]	# prime, %sfp
 12010      28
 12011 4445 4939D4   		cmp	r12, rdx	# block_stop, _8
 12012              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12013              		.loc 1 123 12 view .LVU4143
 12014 4448 4C8B7424 		mov	r14, QWORD PTR 56[rsp]	# _97, %sfp
 12014      38
 12015 444d 4C0F47E2 		cmova	r12, rdx	# block_stop,, block_stop, _8
 12016              	.LVL686:
 123:sieve_extend.c ****     return index;
 12017              		.loc 1 123 12 view .LVU4144
 12018              	.LBE721:
 12019              	.LBE720:
1058:sieve_extend.c ****         sieve_block_stripe(sieve, block_start, block_stop, prime);
 12020              		.loc 1 1058 9 is_stmt 1 view .LVU4145
 12021              	.LBB724:
 12022              	.LBI720:
 122:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 12023              		.loc 1 122 25 view .LVU4146
 12024              	.LBB722:
 123:sieve_extend.c ****     return index;
 12025              		.loc 1 123 5 view .LVU4147
 123:sieve_extend.c ****     return index;
 12026              		.loc 1 123 11 view .LVU4148
 12027              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12028              		.loc 1 123 21 is_stmt 0 view .LVU4149
 12029 4451 4989FB   		mov	r11, rdi	# tmp647, prime
 12030 4454 49C1EB06 		shr	r11, 6	# tmp647,
 12031              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12032              		.loc 1 123 12 view .LVU4150
 12033 4458 4B8B1CDE 		mov	rbx, QWORD PTR [r14+r11*8]	# *_365, *_365
 12034              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12035              		.loc 1 123 11 view .LVU4151
 12036 445c 480FA3FB 		bt	rbx, rdi	# *_365, tmp1665
 12037 4460 0F834502 		jnc	.L890	#,
 12037      0000
 12038 4466 488B4424 		mov	rax, QWORD PTR 32[rsp]	# tmp824, %sfp
 12038      20
 12039              	.L891:
 123:sieve_extend.c ****     return index;
 12040              		.loc 1 123 58 is_stmt 1 view .LVU4152
 12041              	.LVL687:
 12042              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12043              		.loc 1 123 21 is_stmt 0 view .LVU4153
GAS LISTING /tmp/ccr2dACi.s 			page 328


 12044 446b 4989C5   		mov	r13, rax	# tmp652, tmp824
 12045              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12046              		.loc 1 123 63 view .LVU4154
 12047 446e 4889C6   		mov	rsi, rax	# prime, tmp824
 123:sieve_extend.c ****     return index;
 12048              		.loc 1 123 11 is_stmt 1 view .LVU4155
 12049              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12050              		.loc 1 123 21 is_stmt 0 view .LVU4156
 12051 4471 49C1ED06 		shr	r13, 6	# tmp652,
 12052              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12053              		.loc 1 123 12 view .LVU4157
 12054 4475 4F8B0CEE 		mov	r9, QWORD PTR [r14+r13*8]	# *_34, *_34
 12055              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12056              		.loc 1 123 11 view .LVU4158
 12057 4479 490FA3C1 		bt	r9, rax	# *_34, tmp824
 12058 447d 0F831502 		jnc	.L1396	#,
 12058      0000
 12059 4483 488D4801 		lea	rcx, 1[rax]	# tmp848,
 12060              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12061              		.loc 1 123 21 view .LVU4159
 12062 4487 4989C8   		mov	r8, rcx	# tmp887, tmp824
 12063 448a 4889C8   		mov	rax, rcx	# tmp824, tmp848
 12064              	.LVL688:
 123:sieve_extend.c ****     return index;
 12065              		.loc 1 123 58 is_stmt 1 view .LVU4160
 12066              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12067              		.loc 1 123 21 is_stmt 0 view .LVU4161
 12068 448d 49C1E806 		shr	r8, 6	# tmp887,
 12069              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12070              		.loc 1 123 63 view .LVU4162
 12071 4491 4889CE   		mov	rsi, rcx	# prime, tmp824
 123:sieve_extend.c ****     return index;
 12072              		.loc 1 123 11 is_stmt 1 view .LVU4163
 12073              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12074              		.loc 1 123 12 is_stmt 0 view .LVU4164
 12075 4494 4F8B14C6 		mov	r10, QWORD PTR [r14+r8*8]	# *_34, *_34
 12076              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12077              		.loc 1 123 11 view .LVU4165
 12078 4498 490FA3CA 		bt	r10, rcx	# *_34, tmp824
 12079 449c 0F83F601 		jnc	.L1396	#,
 12079      0000
 12080 44a2 488D4101 		lea	rax, 1[rcx]	# tmp824,
 12081              	.LVL689:
 123:sieve_extend.c ****     return index;
 12082              		.loc 1 123 58 is_stmt 1 view .LVU4166
 12083              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12084              		.loc 1 123 21 is_stmt 0 view .LVU4167
GAS LISTING /tmp/ccr2dACi.s 			page 329


 12085 44a6 4889C5   		mov	rbp, rax	# tmp1118, tmp824
 12086              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12087              		.loc 1 123 63 view .LVU4168
 12088 44a9 4889C6   		mov	rsi, rax	# prime, tmp824
 123:sieve_extend.c ****     return index;
 12089              		.loc 1 123 11 is_stmt 1 view .LVU4169
 12090              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12091              		.loc 1 123 21 is_stmt 0 view .LVU4170
 12092 44ac 48C1ED06 		shr	rbp, 6	# tmp1118,
 12093              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12094              		.loc 1 123 12 view .LVU4171
 12095 44b0 498B3CEE 		mov	rdi, QWORD PTR [r14+rbp*8]	# *_34, *_34
 12096              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12097              		.loc 1 123 11 view .LVU4172
 12098 44b4 480FA3C7 		bt	rdi, rax	# *_34, tmp824
 12099 44b8 0F83DA01 		jnc	.L1396	#,
 12099      0000
 12100 44be 488D4102 		lea	rax, 2[rcx]	# tmp824,
 12101              	.LVL690:
 123:sieve_extend.c ****     return index;
 12102              		.loc 1 123 58 is_stmt 1 view .LVU4173
 12103              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12104              		.loc 1 123 21 is_stmt 0 view .LVU4174
 12105 44c2 4989C3   		mov	r11, rax	# tmp1122, tmp824
 12106              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12107              		.loc 1 123 63 view .LVU4175
 12108 44c5 4889C6   		mov	rsi, rax	# prime, tmp824
 123:sieve_extend.c ****     return index;
 12109              		.loc 1 123 11 is_stmt 1 view .LVU4176
 12110              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12111              		.loc 1 123 21 is_stmt 0 view .LVU4177
 12112 44c8 49C1EB06 		shr	r11, 6	# tmp1122,
 12113              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12114              		.loc 1 123 12 view .LVU4178
 12115 44cc 4B8B1CDE 		mov	rbx, QWORD PTR [r14+r11*8]	# *_34, *_34
 12116              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12117              		.loc 1 123 11 view .LVU4179
 12118 44d0 480FA3C3 		bt	rbx, rax	# *_34, tmp824
 12119 44d4 0F83BE01 		jnc	.L1396	#,
 12119      0000
 12120 44da 488D4103 		lea	rax, 3[rcx]	# tmp824,
 12121              	.LVL691:
 123:sieve_extend.c ****     return index;
 12122              		.loc 1 123 58 is_stmt 1 view .LVU4180
 12123              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12124              		.loc 1 123 21 is_stmt 0 view .LVU4181
 12125 44de 4989C5   		mov	r13, rax	# tmp1126, tmp824
GAS LISTING /tmp/ccr2dACi.s 			page 330


 12126              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12127              		.loc 1 123 63 view .LVU4182
 12128 44e1 4889C6   		mov	rsi, rax	# prime, tmp824
 123:sieve_extend.c ****     return index;
 12129              		.loc 1 123 11 is_stmt 1 view .LVU4183
 12130              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12131              		.loc 1 123 21 is_stmt 0 view .LVU4184
 12132 44e4 49C1ED06 		shr	r13, 6	# tmp1126,
 12133              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12134              		.loc 1 123 12 view .LVU4185
 12135 44e8 4F8B0CEE 		mov	r9, QWORD PTR [r14+r13*8]	# *_34, *_34
 12136              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12137              		.loc 1 123 11 view .LVU4186
 12138 44ec 490FA3C1 		bt	r9, rax	# *_34, tmp824
 12139 44f0 0F83A201 		jnc	.L1396	#,
 12139      0000
 12140 44f6 488D4104 		lea	rax, 4[rcx]	# tmp824,
 12141              	.LVL692:
 123:sieve_extend.c ****     return index;
 12142              		.loc 1 123 58 is_stmt 1 view .LVU4187
 12143              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12144              		.loc 1 123 21 is_stmt 0 view .LVU4188
 12145 44fa 4989C0   		mov	r8, rax	# tmp1130, tmp824
 12146              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12147              		.loc 1 123 63 view .LVU4189
 12148 44fd 4889C6   		mov	rsi, rax	# prime, tmp824
 123:sieve_extend.c ****     return index;
 12149              		.loc 1 123 11 is_stmt 1 view .LVU4190
 12150              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12151              		.loc 1 123 21 is_stmt 0 view .LVU4191
 12152 4500 49C1E806 		shr	r8, 6	# tmp1130,
 12153              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12154              		.loc 1 123 12 view .LVU4192
 12155 4504 4F8B14C6 		mov	r10, QWORD PTR [r14+r8*8]	# *_34, *_34
 12156              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12157              		.loc 1 123 11 view .LVU4193
 12158 4508 490FA3C2 		bt	r10, rax	# *_34, tmp824
 12159 450c 0F838601 		jnc	.L1396	#,
 12159      0000
 12160 4512 488D4105 		lea	rax, 5[rcx]	# tmp824,
 12161              	.LVL693:
 123:sieve_extend.c ****     return index;
 12162              		.loc 1 123 58 is_stmt 1 view .LVU4194
 12163              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12164              		.loc 1 123 21 is_stmt 0 view .LVU4195
 12165 4516 4889C5   		mov	rbp, rax	# tmp1134, tmp824
 12166              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
GAS LISTING /tmp/ccr2dACi.s 			page 331


 123:sieve_extend.c ****     return index;
 12167              		.loc 1 123 63 view .LVU4196
 12168 4519 4889C6   		mov	rsi, rax	# prime, tmp824
 123:sieve_extend.c ****     return index;
 12169              		.loc 1 123 11 is_stmt 1 view .LVU4197
 12170              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12171              		.loc 1 123 21 is_stmt 0 view .LVU4198
 12172 451c 48C1ED06 		shr	rbp, 6	# tmp1134,
 12173              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12174              		.loc 1 123 12 view .LVU4199
 12175 4520 498B3CEE 		mov	rdi, QWORD PTR [r14+rbp*8]	# *_34, *_34
 12176              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12177              		.loc 1 123 11 view .LVU4200
 12178 4524 480FA3C7 		bt	rdi, rax	# *_34, tmp824
 12179 4528 0F836A01 		jnc	.L1396	#,
 12179      0000
 12180 452e 488D4106 		lea	rax, 6[rcx]	# tmp824,
 12181              	.LVL694:
 123:sieve_extend.c ****     return index;
 12182              		.loc 1 123 58 is_stmt 1 view .LVU4201
 12183              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12184              		.loc 1 123 21 is_stmt 0 view .LVU4202
 12185 4532 4989C3   		mov	r11, rax	# tmp1138, tmp824
 12186              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12187              		.loc 1 123 63 view .LVU4203
 12188 4535 4889C6   		mov	rsi, rax	# prime, tmp824
 123:sieve_extend.c ****     return index;
 12189              		.loc 1 123 11 is_stmt 1 view .LVU4204
 12190              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12191              		.loc 1 123 21 is_stmt 0 view .LVU4205
 12192 4538 49C1EB06 		shr	r11, 6	# tmp1138,
 12193              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12194              		.loc 1 123 12 view .LVU4206
 12195 453c 4B8B1CDE 		mov	rbx, QWORD PTR [r14+r11*8]	# *_34, *_34
 12196              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12197              		.loc 1 123 11 view .LVU4207
 12198 4540 480FA3C3 		bt	rbx, rax	# *_34, tmp824
 12199 4544 0F834E01 		jnc	.L1396	#,
 12199      0000
 12200 454a 488D4107 		lea	rax, 7[rcx]	# tmp824,
 12201              	.LVL695:
 123:sieve_extend.c ****     return index;
 12202              		.loc 1 123 11 view .LVU4208
 12203 454e E918FFFF 		jmp	.L891	#
 12203      FF
 12204              	.LVL696:
 12205              	.L1460:
 123:sieve_extend.c ****     return index;
 12206              		.loc 1 123 11 view .LVU4209
GAS LISTING /tmp/ccr2dACi.s 			page 332


 12207              	.LBE722:
 12208              	.LBE724:
 12209              	.LBE627:
 12210              	.LBB730:
 12211              	.LBB611:
 12212              	.LBB604:
 12213              	.LBB595:
 12214              	.LBB562:
 248:sieve_extend.c ****         //  debug if (step==13) { printf("After\n"); dump_bitarray(bitarray,10); }
 12215              		.loc 1 248 8 is_stmt 1 view .LVU4210
 12216              	# sieve_extend.c:248:        bitarray[range_start_word] |= (pattern << bitindex(range_start)) & cho
 248:sieve_extend.c ****         //  debug if (step==13) { printf("After\n"); dump_bitarray(bitarray,10); }
 12217              		.loc 1 248 73 is_stmt 0 view .LVU4211
 12218 4553 48234424 		and	rax, QWORD PTR 40[rsp]	# tmp575, %sfp
 12218      28
 12219              	# sieve_extend.c:248:        bitarray[range_start_word] |= (pattern << bitindex(range_start)) & cho
 248:sieve_extend.c ****         //  debug if (step==13) { printf("After\n"); dump_bitarray(bitarray,10); }
 12220              		.loc 1 248 35 view .LVU4212
 12221 4558 4C09C8   		or	rax, r9	# tmp576, pretmp_1229
 12222 455b 498903   		mov	QWORD PTR [r11], rax	# MEM[(uint64_t *)_1228], tmp576
 250:sieve_extend.c ****     }
 12223              		.loc 1 250 8 is_stmt 1 view .LVU4213
 12224 455e E908F5FF 		jmp	.L859	#
 12224      FF
 12225              	.LVL697:
 12226              	.L866:
 250:sieve_extend.c ****     }
 12227              		.loc 1 250 8 is_stmt 0 view .LVU4214
 12228              	.LBE562:
 12229              	.LBE595:
 12230              	.LBB596:
 12231              	.LBB593:
 12232              	.LBB588:
 12233              	.LBB589:
 12234              	.LBB590:
 304:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 12235              		.loc 1 304 54 is_stmt 1 view .LVU4215
 12236              	# sieve_extend.c:304:         for (register counter_t index = range_start; index <= range_stop;) {
 304:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 12237              		.loc 1 304 9 is_stmt 0 view .LVU4216
 12238 4563 4939E8   		cmp	r8, rbp	# _69, index
 12239 4566 0F82FFF4 		jb	.L859	#,
 12239      FFFF
 12240              	.LBB591:
 12241              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 12242              		.loc 1 309 25 view .LVU4217
 12243 456c BF010000 		mov	edi, 1	# tmp601,
 12243      00
 12244              	.LVL698:
 12245 4571 66662E0F 		.p2align 4
 12245      1F840000 
 12245      0000000F 
 12245      1F4000
 12246              		.p2align 3
 12247              	.L870:
 305:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
GAS LISTING /tmp/ccr2dACi.s 			page 333


 12248              		.loc 1 305 13 is_stmt 1 view .LVU4218
 12249              	# sieve_extend.c:305:             register counter_t index_word = wordindex(index);
 305:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 12250              		.loc 1 305 32 is_stmt 0 view .LVU4219
 12251 4580 4889E9   		mov	rcx, rbp	# index_word, index
 12252              	# sieve_extend.c:306:             register bitword_t mask = SAFE_ZERO;
 306:sieve_extend.c ****             #pragma ivdep
 12253              		.loc 1 306 32 view .LVU4220
 12254 4583 4531C9   		xor	r9d, r9d	# mask
 12255              	# sieve_extend.c:305:             register counter_t index_word = wordindex(index);
 305:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 12256              		.loc 1 305 32 view .LVU4221
 12257 4586 48C1E906 		shr	rcx, 6	# index_word,
 12258              	.LVL699:
 306:sieve_extend.c ****             #pragma ivdep
 12259              		.loc 1 306 13 is_stmt 1 view .LVU4222
 12260              	.L869:
 308:sieve_extend.c ****                 mask |= markmask(index);
 12261              		.loc 1 308 13 view .LVU4223
 309:sieve_extend.c ****                 index += step;
 12262              		.loc 1 309 17 view .LVU4224
 12263              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 12264              		.loc 1 309 25 is_stmt 0 view .LVU4225
 12265 458a C462D1F7 		shlx	r10, rdi, rbp	# tmp600, tmp601, index
 12265      D7
 12266              	# sieve_extend.c:310:                 index += step;
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 12267              		.loc 1 310 23 view .LVU4226
 12268 458f 4C01E5   		add	rbp, r12	# index, step
 12269              	.LVL700:
 12270              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12271              		.loc 1 311 36 view .LVU4227
 12272 4592 4989EB   		mov	r11, rbp	# tmp602, index
 12273              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 12274              		.loc 1 309 22 view .LVU4228
 12275 4595 4D09D1   		or	r9, r10	# mask, tmp600
 12276              	.LVL701:
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 12277              		.loc 1 310 17 is_stmt 1 view .LVU4229
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12278              		.loc 1 311 21 view .LVU4230
 12279              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12280              		.loc 1 311 36 is_stmt 0 view .LVU4231
 12281 4598 49C1EB06 		shr	r11, 6	# tmp602,
 12282              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12283              		.loc 1 311 13 view .LVU4232
 12284 459c 4C39D9   		cmp	rcx, r11	# index_word, tmp602
 12285 459f 0F85AB00 		jne	.L1316	#,
 12285      0000
 308:sieve_extend.c ****                 mask |= markmask(index);
 12286              		.loc 1 308 13 is_stmt 1 view .LVU4233
 309:sieve_extend.c ****                 index += step;
GAS LISTING /tmp/ccr2dACi.s 			page 334


 12287              		.loc 1 309 17 view .LVU4234
 12288              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 12289              		.loc 1 309 25 is_stmt 0 view .LVU4235
 12290 45a5 C4E2D1F7 		shlx	rdx, rdi, rbp	# tmp1204, tmp601, index
 12290      D7
 12291              	# sieve_extend.c:310:                 index += step;
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 12292              		.loc 1 310 23 view .LVU4236
 12293 45aa 4C01E5   		add	rbp, r12	# index, step
 12294              	.LVL702:
 12295              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12296              		.loc 1 311 36 view .LVU4237
 12297 45ad 4889E8   		mov	rax, rbp	# tmp1205, index
 12298              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 12299              		.loc 1 309 22 view .LVU4238
 12300 45b0 4909D1   		or	r9, rdx	# mask, tmp1204
 12301              	.LVL703:
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 12302              		.loc 1 310 17 is_stmt 1 view .LVU4239
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12303              		.loc 1 311 21 view .LVU4240
 12304              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12305              		.loc 1 311 36 is_stmt 0 view .LVU4241
 12306 45b3 48C1E806 		shr	rax, 6	# tmp1205,
 12307              	.LVL704:
 12308              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12309              		.loc 1 311 13 view .LVU4242
 12310 45b7 4839C1   		cmp	rcx, rax	# index_word, tmp1205
 12311 45ba 0F859000 		jne	.L1316	#,
 12311      0000
 308:sieve_extend.c ****                 mask |= markmask(index);
 12312              		.loc 1 308 13 is_stmt 1 view .LVU4243
 309:sieve_extend.c ****                 index += step;
 12313              		.loc 1 309 17 view .LVU4244
 12314              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 12315              		.loc 1 309 25 is_stmt 0 view .LVU4245
 12316 45c0 C4E2D1F7 		shlx	rsi, rdi, rbp	# tmp1206, tmp601, index
 12316      F7
 12317              	# sieve_extend.c:310:                 index += step;
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 12318              		.loc 1 310 23 view .LVU4246
 12319 45c5 4C01E5   		add	rbp, r12	# index, step
 12320              	.LVL705:
 12321              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12322              		.loc 1 311 36 view .LVU4247
 12323 45c8 4989EA   		mov	r10, rbp	# tmp1207, index
 12324              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 12325              		.loc 1 309 22 view .LVU4248
 12326 45cb 4909F1   		or	r9, rsi	# mask, tmp1206
GAS LISTING /tmp/ccr2dACi.s 			page 335


 12327              	.LVL706:
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 12328              		.loc 1 310 17 is_stmt 1 view .LVU4249
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12329              		.loc 1 311 21 view .LVU4250
 12330              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12331              		.loc 1 311 36 is_stmt 0 view .LVU4251
 12332 45ce 49C1EA06 		shr	r10, 6	# tmp1207,
 12333              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12334              		.loc 1 311 13 view .LVU4252
 12335 45d2 4C39D1   		cmp	rcx, r10	# index_word, tmp1207
 12336 45d5 7579     		jne	.L1316	#,
 308:sieve_extend.c ****                 mask |= markmask(index);
 12337              		.loc 1 308 13 is_stmt 1 view .LVU4253
 309:sieve_extend.c ****                 index += step;
 12338              		.loc 1 309 17 view .LVU4254
 12339              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 12340              		.loc 1 309 25 is_stmt 0 view .LVU4255
 12341 45d7 C462D1F7 		shlx	r11, rdi, rbp	# tmp1208, tmp601, index
 12341      DF
 12342              	# sieve_extend.c:310:                 index += step;
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 12343              		.loc 1 310 23 view .LVU4256
 12344 45dc 4C01E5   		add	rbp, r12	# index, step
 12345              	.LVL707:
 12346              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12347              		.loc 1 311 36 view .LVU4257
 12348 45df 4889EA   		mov	rdx, rbp	# tmp1209, index
 12349              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 12350              		.loc 1 309 22 view .LVU4258
 12351 45e2 4D09D9   		or	r9, r11	# mask, tmp1208
 12352              	.LVL708:
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 12353              		.loc 1 310 17 is_stmt 1 view .LVU4259
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12354              		.loc 1 311 21 view .LVU4260
 12355              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12356              		.loc 1 311 36 is_stmt 0 view .LVU4261
 12357 45e5 48C1EA06 		shr	rdx, 6	# tmp1209,
 12358              	.LVL709:
 12359              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12360              		.loc 1 311 13 view .LVU4262
 12361 45e9 4839D1   		cmp	rcx, rdx	# index_word, tmp1209
 12362 45ec 7562     		jne	.L1316	#,
 308:sieve_extend.c ****                 mask |= markmask(index);
 12363              		.loc 1 308 13 is_stmt 1 view .LVU4263
 309:sieve_extend.c ****                 index += step;
 12364              		.loc 1 309 17 view .LVU4264
 12365              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
GAS LISTING /tmp/ccr2dACi.s 			page 336


 12366              		.loc 1 309 25 is_stmt 0 view .LVU4265
 12367 45ee C4E2D1F7 		shlx	rax, rdi, rbp	# tmp1210, tmp601, index
 12367      C7
 12368              	# sieve_extend.c:310:                 index += step;
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 12369              		.loc 1 310 23 view .LVU4266
 12370 45f3 4C01E5   		add	rbp, r12	# index, step
 12371              	.LVL710:
 12372              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12373              		.loc 1 311 36 view .LVU4267
 12374 45f6 4889EE   		mov	rsi, rbp	# tmp1211, index
 12375              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 12376              		.loc 1 309 22 view .LVU4268
 12377 45f9 4909C1   		or	r9, rax	# mask, tmp1210
 12378              	.LVL711:
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 12379              		.loc 1 310 17 is_stmt 1 view .LVU4269
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12380              		.loc 1 311 21 view .LVU4270
 12381              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12382              		.loc 1 311 36 is_stmt 0 view .LVU4271
 12383 45fc 48C1EE06 		shr	rsi, 6	# tmp1211,
 12384              	.LVL712:
 12385              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12386              		.loc 1 311 13 view .LVU4272
 12387 4600 4839F1   		cmp	rcx, rsi	# index_word, tmp1211
 12388 4603 754B     		jne	.L1316	#,
 308:sieve_extend.c ****                 mask |= markmask(index);
 12389              		.loc 1 308 13 is_stmt 1 view .LVU4273
 309:sieve_extend.c ****                 index += step;
 12390              		.loc 1 309 17 view .LVU4274
 12391              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 12392              		.loc 1 309 25 is_stmt 0 view .LVU4275
 12393 4605 C462D1F7 		shlx	r10, rdi, rbp	# tmp1212, tmp601, index
 12393      D7
 12394              	# sieve_extend.c:310:                 index += step;
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 12395              		.loc 1 310 23 view .LVU4276
 12396 460a 4C01E5   		add	rbp, r12	# index, step
 12397              	.LVL713:
 12398              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12399              		.loc 1 311 36 view .LVU4277
 12400 460d 4989EB   		mov	r11, rbp	# tmp1213, index
 12401              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 12402              		.loc 1 309 22 view .LVU4278
 12403 4610 4D09D1   		or	r9, r10	# mask, tmp1212
 12404              	.LVL714:
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 12405              		.loc 1 310 17 is_stmt 1 view .LVU4279
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
GAS LISTING /tmp/ccr2dACi.s 			page 337


 12406              		.loc 1 311 21 view .LVU4280
 12407              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12408              		.loc 1 311 36 is_stmt 0 view .LVU4281
 12409 4613 49C1EB06 		shr	r11, 6	# tmp1213,
 12410              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12411              		.loc 1 311 13 view .LVU4282
 12412 4617 4C39D9   		cmp	rcx, r11	# index_word, tmp1213
 12413 461a 7534     		jne	.L1316	#,
 308:sieve_extend.c ****                 mask |= markmask(index);
 12414              		.loc 1 308 13 is_stmt 1 view .LVU4283
 309:sieve_extend.c ****                 index += step;
 12415              		.loc 1 309 17 view .LVU4284
 12416              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 12417              		.loc 1 309 25 is_stmt 0 view .LVU4285
 12418 461c C4E2D1F7 		shlx	rdx, rdi, rbp	# tmp1214, tmp601, index
 12418      D7
 12419              	# sieve_extend.c:310:                 index += step;
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 12420              		.loc 1 310 23 view .LVU4286
 12421 4621 4C01E5   		add	rbp, r12	# index, step
 12422              	.LVL715:
 12423              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12424              		.loc 1 311 36 view .LVU4287
 12425 4624 4889E8   		mov	rax, rbp	# tmp1215, index
 12426              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 12427              		.loc 1 309 22 view .LVU4288
 12428 4627 4909D1   		or	r9, rdx	# mask, tmp1214
 12429              	.LVL716:
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 12430              		.loc 1 310 17 is_stmt 1 view .LVU4289
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12431              		.loc 1 311 21 view .LVU4290
 12432              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12433              		.loc 1 311 36 is_stmt 0 view .LVU4291
 12434 462a 48C1E806 		shr	rax, 6	# tmp1215,
 12435              	.LVL717:
 12436              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12437              		.loc 1 311 13 view .LVU4292
 12438 462e 4839C1   		cmp	rcx, rax	# index_word, tmp1215
 12439 4631 751D     		jne	.L1316	#,
 308:sieve_extend.c ****                 mask |= markmask(index);
 12440              		.loc 1 308 13 is_stmt 1 view .LVU4293
 309:sieve_extend.c ****                 index += step;
 12441              		.loc 1 309 17 view .LVU4294
 12442              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 12443              		.loc 1 309 25 is_stmt 0 view .LVU4295
 12444 4633 C4E2D1F7 		shlx	rsi, rdi, rbp	# tmp1216, tmp601, index
 12444      F7
 12445              	# sieve_extend.c:310:                 index += step;
GAS LISTING /tmp/ccr2dACi.s 			page 338


 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 12446              		.loc 1 310 23 view .LVU4296
 12447 4638 4C01E5   		add	rbp, r12	# index, step
 12448              	.LVL718:
 12449              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12450              		.loc 1 311 36 view .LVU4297
 12451 463b 4989EA   		mov	r10, rbp	# tmp1217, index
 12452              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 12453              		.loc 1 309 22 view .LVU4298
 12454 463e 4909F1   		or	r9, rsi	# mask, tmp1216
 12455              	.LVL719:
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 12456              		.loc 1 310 17 is_stmt 1 view .LVU4299
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12457              		.loc 1 311 21 view .LVU4300
 12458              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12459              		.loc 1 311 36 is_stmt 0 view .LVU4301
 12460 4641 49C1EA06 		shr	r10, 6	# tmp1217,
 12461              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12462              		.loc 1 311 13 view .LVU4302
 12463 4645 4C39D1   		cmp	rcx, r10	# index_word, tmp1217
 12464 4648 0F843CFF 		je	.L869	#,
 12464      FFFF
 12465 464e 6690     		.p2align 4
 12466              		.p2align 3
 12467              	.L1316:
 314:sieve_extend.c ****         }
 12468              		.loc 1 314 13 is_stmt 1 view .LVU4303
 12469              	# sieve_extend.c:314:             bitarray[index_word] |= mask;
 314:sieve_extend.c ****         }
 12470              		.loc 1 314 34 is_stmt 0 view .LVU4304
 12471 4650 4D090CCF 		or	QWORD PTR [r15+rcx*8], r9	# *_182, mask
 314:sieve_extend.c ****         }
 12472              		.loc 1 314 34 view .LVU4305
 12473              	.LBE591:
 304:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 12474              		.loc 1 304 54 is_stmt 1 view .LVU4306
 12475              	# sieve_extend.c:304:         for (register counter_t index = range_start; index <= range_stop;) {
 304:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 12476              		.loc 1 304 9 is_stmt 0 view .LVU4307
 12477 4654 4939E8   		cmp	r8, rbp	# _69, index
 12478 4657 0F8323FF 		jnb	.L870	#,
 12478      FFFF
 304:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 12479              		.loc 1 304 9 view .LVU4308
 12480 465d E909F4FF 		jmp	.L859	#
 12480      FF
 12481              	.LVL720:
 12482              	.L854:
 304:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 12483              		.loc 1 304 9 view .LVU4309
 12484              	.LBE590:
 12485              	.LBE589:
GAS LISTING /tmp/ccr2dACi.s 			page 339


 12486              	.LBE588:
 12487              	.LBE593:
 12488              	.LBE596:
 12489              	.LBB597:
 12490              	.LBB547:
 920:sieve_extend.c **** }
 12491              		.loc 1 920 37 is_stmt 1 view .LVU4310
 12492 4662 E8A9D8FF 		call	extendSieve_aligned	#
 12492      FF
 12493              	.LVL721:
 920:sieve_extend.c **** }
 12494              		.loc 1 920 37 is_stmt 0 view .LVU4311
 12495 4667 4C8B4424 		mov	r8, QWORD PTR 40[rsp]	# _69, %sfp
 12495      28
 12496 466c 4C897424 		mov	QWORD PTR 24[rsp], r14	# %sfp, patternsize_bits
 12496      18
 12497 4671 E9B3F3FF 		jmp	.L851	#
 12497      FF
 12498              	.LVL722:
 12499              	.L1459:
 918:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 12500              		.loc 1 918 37 is_stmt 1 view .LVU4312
 12501 4676 E815DEFF 		call	extendSieve_shiftleft	#
 12501      FF
 12502              	.LVL723:
 918:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 12503              		.loc 1 918 37 is_stmt 0 view .LVU4313
 12504 467b 4C8B4424 		mov	r8, QWORD PTR 40[rsp]	# _69, %sfp
 12504      28
 12505 4680 4C897424 		mov	QWORD PTR 24[rsp], r14	# %sfp, patternsize_bits
 12505      18
 12506 4685 E99FF3FF 		jmp	.L851	#
 12506      FF
 12507              	.LVL724:
 12508              	.L1464:
 918:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 12509              		.loc 1 918 37 view .LVU4314
 12510              	.LBE547:
 12511              	.LBE597:
 12512              	.LBE604:
 12513              	.LBE611:
 12514              	.LBE730:
 12515              	.LBB731:
 12516              	.LBB621:
 919:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 12517              		.loc 1 919 37 is_stmt 1 view .LVU4315
 12518 468a E831C0FF 		call	extendSieve_shiftright_ivdep	#
 12518      FF
 12519              	.LVL725:
 919:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 12520              		.loc 1 919 37 is_stmt 0 view .LVU4316
 12521 468f E977FDFF 		jmp	.L887	#
 12521      FF
 12522              	.LVL726:
 12523              		.p2align 4,,7
 12524 4694 0F1F4000 		.p2align 3
 12525              	.L1396:
GAS LISTING /tmp/ccr2dACi.s 			page 340


 919:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 12526              		.loc 1 919 37 view .LVU4317
 12527 4698 48894424 		mov	QWORD PTR 32[rsp], rax	# %sfp, tmp824
 12527      20
 12528 469d 488D4001 		lea	rax, 1[rax]	# tmp824,
 12529              	.LVL727:
 919:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 12530              		.loc 1 919 37 view .LVU4318
 12531 46a1 48897424 		mov	QWORD PTR 40[rsp], rsi	# %sfp, prime
 12531      28
 12532 46a6 48894424 		mov	QWORD PTR 32[rsp], rax	# %sfp, tmp824
 12532      20
 12533              	.LVL728:
 12534              	.L890:
 919:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 12535              		.loc 1 919 37 view .LVU4319
 12536              	.LBE621:
 12537              	.LBE731:
 12538              	.LBB732:
 12539              	.LBB725:
 12540              	.LBB723:
 124:sieve_extend.c **** }
 12541              		.loc 1 124 5 is_stmt 1 view .LVU4320
 124:sieve_extend.c **** }
 12542              		.loc 1 124 5 is_stmt 0 view .LVU4321
 12543              	.LBE723:
 12544              	.LBE725:
1059:sieve_extend.c ****     } 
 12545              		.loc 1 1059 9 is_stmt 1 view .LVU4322
 12546              	.LBB726:
 12547              	.LBB715:
 12548              	# sieve_extend.c:925:     counter_t start = prime * prime * 2 + prime * 2;
 925:sieve_extend.c ****     counter_t step  = prime * 2 + 1;
 12549              		.loc 1 925 15 is_stmt 0 view .LVU4323
 12550 46ab 488B7424 		mov	rsi, QWORD PTR 32[rsp]	# tmp658, %sfp
 12550      20
 12551              	.LBE715:
 12552              	.LBE726:
 12553              	# sieve_extend.c:1059:         sieve_block_stripe(sieve, block_start, block_stop, prime);
1059:sieve_extend.c ****     } 
 12554              		.loc 1 1059 9 view .LVU4324
 12555 46b0 4C8B7424 		mov	r14, QWORD PTR 48[rsp]	# <retval>, %sfp
 12555      30
 12556              	.LBB727:
 12557              	.LBB716:
 12558              	# sieve_extend.c:925:     counter_t start = prime * prime * 2 + prime * 2;
 925:sieve_extend.c ****     counter_t step  = prime * 2 + 1;
 12559              		.loc 1 925 15 view .LVU4325
 12560 46b5 480FAF74 		imul	rsi, QWORD PTR 40[rsp]	# tmp658, %sfp
 12560      2428
 12561              	.LBE716:
 12562              	.LBE727:
 12563              	# sieve_extend.c:1059:         sieve_block_stripe(sieve, block_start, block_stop, prime);
1059:sieve_extend.c ****     } 
 12564              		.loc 1 1059 9 view .LVU4326
 12565 46bb 498B1E   		mov	rbx, QWORD PTR [r14]	# _30, MEM[(uint64_t * *)sieve_92]
 12566              	.LVL729:
GAS LISTING /tmp/ccr2dACi.s 			page 341


 12567              	.LBB728:
 12568              	.LBI628:
 923:sieve_extend.c ****     counter_t prime = prime_start;
 12569              		.loc 1 923 13 is_stmt 1 view .LVU4327
 12570              	.LBB717:
 924:sieve_extend.c ****     counter_t start = prime * prime * 2 + prime * 2;
 12571              		.loc 1 924 5 view .LVU4328
 925:sieve_extend.c ****     counter_t step  = prime * 2 + 1;
 12572              		.loc 1 925 5 view .LVU4329
 12573              	# sieve_extend.c:925:     counter_t start = prime * prime * 2 + prime * 2;
 925:sieve_extend.c ****     counter_t step  = prime * 2 + 1;
 12574              		.loc 1 925 15 is_stmt 0 view .LVU4330
 12575 46be 4801F6   		add	rsi, rsi	# index
 12576              	.LVL730:
 926:sieve_extend.c ****     bitword_t* bitarray = sieve->bitarray;
 12577              		.loc 1 926 5 is_stmt 1 view .LVU4331
 927:sieve_extend.c **** 
 12578              		.loc 1 927 5 view .LVU4332
 929:sieve_extend.c ****     
 12579              		.loc 1 929 5 view .LVU4333
 931:sieve_extend.c ****         step  = prime * 2 + 1;
 12580              		.loc 1 931 5 view .LVU4334
 931:sieve_extend.c ****         step  = prime * 2 + 1;
 12581              		.loc 1 931 11 view .LVU4335
 12582 46c1 4939F4   		cmp	r12, rsi	# block_stop, index
 12583 46c4 0F82D303 		jb	.L897	#,
 12583      0000
 12584              	.LBB648:
 12585              	.LBB643:
 12586              	# sieve_extend.c:245:     const counter_t range_stop_word = wordindex(range_stop);
 245:sieve_extend.c ****     register counter_t range_start_word = wordindex(range_start);
 12587              		.loc 1 245 21 is_stmt 0 view .LVU4336
 12588 46ca 4C89E2   		mov	rdx, r12	# range_stop_word, block_stop
 12589              	# sieve_extend.c:269:    bitarray[range_stop_word] &= chopmask(range_stop);
 269:sieve_extend.c **** 
 12590              		.loc 1 269 33 view .LVU4337
 12591 46cd 4489E1   		mov	ecx, r12d	# tmp660, block_stop
 12592              	# sieve_extend.c:245:     const counter_t range_stop_word = wordindex(range_stop);
 245:sieve_extend.c ****     register counter_t range_start_word = wordindex(range_start);
 12593              		.loc 1 245 21 view .LVU4338
 12594 46d0 48C1EA06 		shr	rdx, 6	# range_stop_word,
 12595              	# sieve_extend.c:269:    bitarray[range_stop_word] &= chopmask(range_stop);
 269:sieve_extend.c **** 
 12596              		.loc 1 269 33 view .LVU4339
 12597 46d4 F7D1     		not	ecx	# tmp660
 12598              	# sieve_extend.c:269:    bitarray[range_stop_word] &= chopmask(range_stop);
 269:sieve_extend.c **** 
 12599              		.loc 1 269 30 view .LVU4340
 12600 46d6 488D2CD3 		lea	rbp, [rbx+rdx*8]	# _494,
 12601              	# sieve_extend.c:269:    bitarray[range_stop_word] &= chopmask(range_stop);
 269:sieve_extend.c **** 
 12602              		.loc 1 269 33 view .LVU4341
 12603 46da 49C7C5FF 		mov	r13, -1	# tmp1679,
 12603      FFFFFF
 12604              	# sieve_extend.c:245:     const counter_t range_stop_word = wordindex(range_stop);
 245:sieve_extend.c ****     register counter_t range_start_word = wordindex(range_start);
 12605              		.loc 1 245 21 view .LVU4342
GAS LISTING /tmp/ccr2dACi.s 			page 342


 12606 46e1 48895424 		mov	QWORD PTR 16[rsp], rdx	# %sfp, range_stop_word
 12606      10
 12607              	# sieve_extend.c:269:    bitarray[range_stop_word] &= chopmask(range_stop);
 269:sieve_extend.c **** 
 12608              		.loc 1 269 33 view .LVU4343
 12609 46e6 C442F3F7 		shrx	r9, r13, rcx	# _499, tmp1679, tmp660
 12609      CD
 12610 46eb 488B4C24 		mov	rcx, QWORD PTR 40[rsp]	# index, %sfp
 12610      28
 12611 46f0 4989EE   		mov	r14, rbp	# _1365, _494
 12612              	.LVL731:
 269:sieve_extend.c **** 
 12613              		.loc 1 269 33 view .LVU4344
 12614 46f3 4C894C24 		mov	QWORD PTR 8[rsp], r9	# %sfp, _499
 12614      08
 12615 46f8 0F1F8400 		.p2align 4
 12615      00000000 
 12616              		.p2align 3
 12617              	.L908:
 269:sieve_extend.c **** 
 12618              		.loc 1 269 33 view .LVU4345
 12619              	.LBE643:
 12620              	.LBE648:
 932:sieve_extend.c ****         if unlikely(step > SMALLSTEP_FASTER) break;
 12621              		.loc 1 932 9 is_stmt 1 view .LVU4346
 12622              	# sieve_extend.c:932:         step  = prime * 2 + 1;
 932:sieve_extend.c ****         if unlikely(step > SMALLSTEP_FASTER) break;
 12623              		.loc 1 932 15 is_stmt 0 view .LVU4347
 12624 4700 488D7C09 		lea	rdi, 1[rcx+rcx]	# step,
 12624      01
 12625              	.LVL732:
 933:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 12626              		.loc 1 933 9 is_stmt 1 view .LVU4348
 12627              	# sieve_extend.c:933:         if unlikely(step > SMALLSTEP_FASTER) break;
 933:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 12628              		.loc 1 933 12 is_stmt 0 view .LVU4349
 12629 4705 483B3D00 		cmp	rdi, QWORD PTR global_SMALLSTEP_FASTER[rip]	# step, global_SMALLSTEP_FASTER
 12629      000000
 12630 470c 0F87C603 		ja	.L1465	#,
 12630      0000
 934:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 12631              		.loc 1 934 9 is_stmt 1 view .LVU4350
 12632              	# sieve_extend.c:934:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 934:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 12633              		.loc 1 934 12 is_stmt 0 view .LVU4351
 12634 4712 4C8D5101 		lea	r10, 1[rcx]	# _303,
 12635 4716 4D39FA   		cmp	r10, r15	# _303, block_start
 12636 4719 7710     		ja	.L898	#,
 934:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 12637              		.loc 1 934 47 is_stmt 1 view .LVU4352
 12638              	# sieve_extend.c:934:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 934:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 12639              		.loc 1 934 67 is_stmt 0 view .LVU4353
 12640 471b 4A8D0439 		lea	rax, [rcx+r15]	# _307,
 12641              	# sieve_extend.c:934:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 934:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 12642              		.loc 1 934 108 view .LVU4354
GAS LISTING /tmp/ccr2dACi.s 			page 343


 12643 471f 31D2     		xor	edx, edx	# tmp666
 12644              	# sieve_extend.c:934:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 934:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 12645              		.loc 1 934 75 view .LVU4355
 12646 4721 488D3408 		lea	rsi, [rax+rcx]	# tmp664,
 12647              	.LVL733:
 12648              	# sieve_extend.c:934:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 934:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 12649              		.loc 1 934 108 view .LVU4356
 12650 4725 48F7F7   		div	rdi	# step
 12651              	.LVL734:
 12652              	# sieve_extend.c:934:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 934:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 12653              		.loc 1 934 53 view .LVU4357
 12654 4728 4829D6   		sub	rsi, rdx	# index, tmp666
 12655              	.LVL735:
 12656              	.L898:
 935:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1 );
 12657              		.loc 1 935 9 is_stmt 1 view .LVU4358
 12658              	.LBB649:
 12659              	.LBI630:
 234:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using smallstep (%ju occurances)
 12660              		.loc 1 234 20 view .LVU4359
 12661              	.LBB644:
 235:sieve_extend.c **** 
 12662              		.loc 1 235 5 view .LVU4360
 238:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; patternsize += patternsi
 12663              		.loc 1 238 2 view .LVU4361
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12664              		.loc 1 239 5 view .LVU4362
 12665              	.LBB632:
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12666              		.loc 1 239 10 view .LVU4363
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12667              		.loc 1 239 41 view .LVU4364
 12668              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12669              		.loc 1 239 5 is_stmt 0 view .LVU4365
 12670 472b 4883FF40 		cmp	rdi, 64	# step,
 12671 472f 0F87330E 		ja	.L957	#,
 12671      0000
 12672 4735 4989F8   		mov	r8, rdi	# patternsize, step
 12673              	.LBE632:
 12674              	# sieve_extend.c:238: 	register bitword_t pattern = BITWORD_SHIFTBIT;
 238:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; patternsize += patternsi
 12675              		.loc 1 238 21 view .LVU4366
 12676 4738 B9010000 		mov	ecx, 1	# pattern,
 12676      00
 12677              	.LVL736:
 12678              	.L900:
 12679              	.LBB633:
 240:sieve_extend.c **** 
 12680              		.loc 1 240 9 is_stmt 1 view .LVU4367
 12681              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12682              		.loc 1 239 88 is_stmt 0 view .LVU4368
 12683 473d 4F8D2C00 		lea	r13, [r8+r8]	# patternsize,
GAS LISTING /tmp/ccr2dACi.s 			page 344


 12684              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 12685              		.loc 1 240 29 view .LVU4369
 12686 4741 C462B9F7 		shlx	r11, rcx, r8	# _448, pattern, patternsize
 12686      D9
 12687              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 12688              		.loc 1 240 17 view .LVU4370
 12689 4746 4C09D9   		or	rcx, r11	# pattern, _448
 12690              	.LVL737:
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12691              		.loc 1 239 76 is_stmt 1 view .LVU4371
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12692              		.loc 1 239 41 view .LVU4372
 12693              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12694              		.loc 1 239 5 is_stmt 0 view .LVU4373
 12695 4749 4983FD40 		cmp	r13, 64	# patternsize,
 12696 474d 0F879D00 		ja	.L899	#,
 12696      0000
 240:sieve_extend.c **** 
 12697              		.loc 1 240 9 is_stmt 1 view .LVU4374
 12698              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12699              		.loc 1 239 88 is_stmt 0 view .LVU4375
 12700 4753 4A8D0485 		lea	rax, 0[0+r8*4]	# patternsize,
 12700      00000000 
 12701              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 12702              		.loc 1 240 29 view .LVU4376
 12703 475b C46291F7 		shlx	r9, rcx, r13	# _448, pattern, patternsize
 12703      C9
 12704              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 12705              		.loc 1 240 17 view .LVU4377
 12706 4760 4C09C9   		or	rcx, r9	# pattern, _448
 12707              	.LVL738:
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12708              		.loc 1 239 76 is_stmt 1 view .LVU4378
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12709              		.loc 1 239 41 view .LVU4379
 12710              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12711              		.loc 1 239 5 is_stmt 0 view .LVU4380
 12712 4763 4883F840 		cmp	rax, 64	# patternsize,
 12713 4767 0F878300 		ja	.L899	#,
 12713      0000
 240:sieve_extend.c **** 
 12714              		.loc 1 240 9 is_stmt 1 view .LVU4381
 12715              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12716              		.loc 1 239 88 is_stmt 0 view .LVU4382
 12717 476d 4E8D1CC5 		lea	r11, 0[0+r8*8]	# patternsize,
 12717      00000000 
 12718              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 12719              		.loc 1 240 29 view .LVU4383
GAS LISTING /tmp/ccr2dACi.s 			page 345


 12720 4775 C4E2F9F7 		shlx	rdx, rcx, rax	# _448, pattern, patternsize
 12720      D1
 12721              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 12722              		.loc 1 240 17 view .LVU4384
 12723 477a 4809D1   		or	rcx, rdx	# pattern, _448
 12724              	.LVL739:
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12725              		.loc 1 239 76 is_stmt 1 view .LVU4385
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12726              		.loc 1 239 41 view .LVU4386
 12727              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12728              		.loc 1 239 5 is_stmt 0 view .LVU4387
 12729 477d 4983FB40 		cmp	r11, 64	# patternsize,
 12730 4781 776D     		ja	.L899	#,
 240:sieve_extend.c **** 
 12731              		.loc 1 240 9 is_stmt 1 view .LVU4388
 12732              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12733              		.loc 1 239 88 is_stmt 0 view .LVU4389
 12734 4783 4D89C1   		mov	r9, r8	# patternsize, patternsize
 12735              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 12736              		.loc 1 240 29 view .LVU4390
 12737 4786 C462A1F7 		shlx	r13, rcx, r11	# _448, pattern, patternsize
 12737      E9
 12738              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12739              		.loc 1 239 88 view .LVU4391
 12740 478b 49C1E104 		sal	r9, 4	# patternsize,
 12741              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 12742              		.loc 1 240 17 view .LVU4392
 12743 478f 4C09E9   		or	rcx, r13	# pattern, _448
 12744              	.LVL740:
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12745              		.loc 1 239 76 is_stmt 1 view .LVU4393
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12746              		.loc 1 239 41 view .LVU4394
 12747              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12748              		.loc 1 239 5 is_stmt 0 view .LVU4395
 12749 4792 4983F940 		cmp	r9, 64	# patternsize,
 12750 4796 7758     		ja	.L899	#,
 240:sieve_extend.c **** 
 12751              		.loc 1 240 9 is_stmt 1 view .LVU4396
 12752              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12753              		.loc 1 239 88 is_stmt 0 view .LVU4397
 12754 4798 4C89C2   		mov	rdx, r8	# patternsize, patternsize
 12755              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 12756              		.loc 1 240 29 view .LVU4398
 12757 479b C4E2B1F7 		shlx	rax, rcx, r9	# _448, pattern, patternsize
 12757      C1
 12758              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
GAS LISTING /tmp/ccr2dACi.s 			page 346


 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12759              		.loc 1 239 88 view .LVU4399
 12760 47a0 48C1E205 		sal	rdx, 5	# patternsize,
 12761              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 12762              		.loc 1 240 17 view .LVU4400
 12763 47a4 4809C1   		or	rcx, rax	# pattern, _448
 12764              	.LVL741:
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12765              		.loc 1 239 76 is_stmt 1 view .LVU4401
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12766              		.loc 1 239 41 view .LVU4402
 12767              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12768              		.loc 1 239 5 is_stmt 0 view .LVU4403
 12769 47a7 4883FA40 		cmp	rdx, 64	# patternsize,
 12770 47ab 7743     		ja	.L899	#,
 240:sieve_extend.c **** 
 12771              		.loc 1 240 9 is_stmt 1 view .LVU4404
 12772              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12773              		.loc 1 239 88 is_stmt 0 view .LVU4405
 12774 47ad 4D89C5   		mov	r13, r8	# patternsize, patternsize
 12775              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 12776              		.loc 1 240 29 view .LVU4406
 12777 47b0 C462E9F7 		shlx	r11, rcx, rdx	# _448, pattern, patternsize
 12777      D9
 12778              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12779              		.loc 1 239 88 view .LVU4407
 12780 47b5 49C1E506 		sal	r13, 6	# patternsize,
 12781              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 12782              		.loc 1 240 17 view .LVU4408
 12783 47b9 4C09D9   		or	rcx, r11	# pattern, _448
 12784              	.LVL742:
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12785              		.loc 1 239 76 is_stmt 1 view .LVU4409
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12786              		.loc 1 239 41 view .LVU4410
 12787              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12788              		.loc 1 239 5 is_stmt 0 view .LVU4411
 12789 47bc 4983FD40 		cmp	r13, 64	# patternsize,
 12790 47c0 772E     		ja	.L899	#,
 240:sieve_extend.c **** 
 12791              		.loc 1 240 9 is_stmt 1 view .LVU4412
 12792              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12793              		.loc 1 239 88 is_stmt 0 view .LVU4413
 12794 47c2 4C89C0   		mov	rax, r8	# patternsize, patternsize
 12795              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 12796              		.loc 1 240 29 view .LVU4414
 12797 47c5 C46291F7 		shlx	r9, rcx, r13	# _448, pattern, patternsize
 12797      C9
GAS LISTING /tmp/ccr2dACi.s 			page 347


 12798              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12799              		.loc 1 239 88 view .LVU4415
 12800 47ca 48C1E007 		sal	rax, 7	# patternsize,
 12801              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 12802              		.loc 1 240 17 view .LVU4416
 12803 47ce 4C09C9   		or	rcx, r9	# pattern, _448
 12804              	.LVL743:
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12805              		.loc 1 239 76 is_stmt 1 view .LVU4417
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12806              		.loc 1 239 41 view .LVU4418
 12807              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12808              		.loc 1 239 5 is_stmt 0 view .LVU4419
 12809 47d1 4883F840 		cmp	rax, 64	# patternsize,
 12810 47d5 7719     		ja	.L899	#,
 240:sieve_extend.c **** 
 12811              		.loc 1 240 9 is_stmt 1 view .LVU4420
 12812              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12813              		.loc 1 239 88 is_stmt 0 view .LVU4421
 12814 47d7 49C1E008 		sal	r8, 8	# patternsize,
 12815              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 12816              		.loc 1 240 29 view .LVU4422
 12817 47db C4E2F9F7 		shlx	rdx, rcx, rax	# _448, pattern, patternsize
 12817      D1
 12818              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 12819              		.loc 1 240 17 view .LVU4423
 12820 47e0 4809D1   		or	rcx, rdx	# pattern, _448
 12821              	.LVL744:
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12822              		.loc 1 239 76 is_stmt 1 view .LVU4424
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12823              		.loc 1 239 41 view .LVU4425
 12824              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12825              		.loc 1 239 5 is_stmt 0 view .LVU4426
 12826 47e3 4983F840 		cmp	r8, 64	# patternsize,
 12827 47e7 0F8650FF 		jbe	.L900	#,
 12827      FFFF
 12828              	.LVL745:
 12829 47ed 0F1F00   		.p2align 4
 12830              		.p2align 3
 12831              	.L899:
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12832              		.loc 1 239 5 view .LVU4427
 12833              	.LBE633:
 245:sieve_extend.c ****     register counter_t range_start_word = wordindex(range_start);
 12834              		.loc 1 245 5 is_stmt 1 view .LVU4428
 246:sieve_extend.c ****      if (range_start_word >= range_stop_word) { // shortcut
 12835              		.loc 1 246 5 view .LVU4429
 12836              	# sieve_extend.c:246:     register counter_t range_start_word = wordindex(range_start);
 246:sieve_extend.c ****      if (range_start_word >= range_stop_word) { // shortcut
GAS LISTING /tmp/ccr2dACi.s 			page 348


 12837              		.loc 1 246 24 is_stmt 0 view .LVU4430
 12838 47f0 4989F0   		mov	r8, rsi	# range_start_word, index
 12839 47f3 C462C9F7 		shlx	r9, rcx, rsi	# _1284, pattern, index
 12839      C9
 12840 47f8 49C1E806 		shr	r8, 6	# range_start_word,
 12841              	.LVL746:
 247:sieve_extend.c ****        bitarray[range_start_word] |= (pattern << bitindex(range_start)) & chopmask(range_stop);
 12842              		.loc 1 247 6 is_stmt 1 view .LVU4431
 12843              	# sieve_extend.c:247:      if (range_start_word >= range_stop_word) { // shortcut
 247:sieve_extend.c ****        bitarray[range_start_word] |= (pattern << bitindex(range_start)) & chopmask(range_stop);
 12844              		.loc 1 247 9 is_stmt 0 view .LVU4432
 12845 47fc 4C394424 		cmp	QWORD PTR 16[rsp], r8	# %sfp, range_start_word
 12845      10
 12846 4801 4E8D1CC3 		lea	r11, [rbx+r8*8]	# _1281,
 12847 4805 4D8B2B   		mov	r13, QWORD PTR [r11]	# pretmp_1282, *_1281
 12848 4808 0F86BA02 		jbe	.L1466	#,
 12848      0000
 253:sieve_extend.c **** 
 12849              		.loc 1 253 5 is_stmt 1 view .LVU4433
 12850              	# sieve_extend.c:257:    register bitshift_t pattern_size = WORD_SIZE_bitshift - (WORD_SIZE_bitshif
 257:sieve_extend.c ****    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 12851              		.loc 1 257 80 is_stmt 0 view .LVU4434
 12852 480e 31D2     		xor	edx, edx	# tmp675
 12853 4810 B8400000 		mov	eax, 64	# tmp676,
 12853      00
 12854 4815 48F7F7   		div	rdi	# step
 12855              	# sieve_extend.c:253:     bitarray[range_start_word] |= (pattern << bitindex(range_start));
 253:sieve_extend.c **** 
 12856              		.loc 1 253 32 view .LVU4435
 12857 4818 4D09E9   		or	r9, r13	# tmp673, pretmp_1282
 12858              	# sieve_extend.c:259:    register bitshift_t shift = (bitindex_calc(range_start))%step ;
 259:sieve_extend.c ****    counter_t loop_range = range_stop_word - range_start_word;
 12859              		.loc 1 259 33 view .LVU4436
 12860 481b 4889F0   		mov	rax, rsi	# index, index
 12861              	# sieve_extend.c:253:     bitarray[range_start_word] |= (pattern << bitindex(range_start));
 253:sieve_extend.c **** 
 12862              		.loc 1 253 32 view .LVU4437
 12863 481e 4D890B   		mov	QWORD PTR [r11], r9	# *_1281, tmp673
 257:sieve_extend.c ****    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 12864              		.loc 1 257 4 is_stmt 1 view .LVU4438
 12865              	# sieve_extend.c:257:    register bitshift_t pattern_size = WORD_SIZE_bitshift - (WORD_SIZE_bitshif
 257:sieve_extend.c ****    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 12866              		.loc 1 257 24 is_stmt 0 view .LVU4439
 12867 4821 41BD4000 		mov	r13d, 64	# pattern_size,
 12867      0000
 12868              	# sieve_extend.c:258:    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 258:sieve_extend.c ****    register bitshift_t shift = (bitindex_calc(range_start))%step ;
 12869              		.loc 1 258 24 view .LVU4440
 12870 4827 4989F9   		mov	r9, rdi	# pattern_shift, step
 12871              	# sieve_extend.c:259:    register bitshift_t shift = (bitindex_calc(range_start))%step ;
 259:sieve_extend.c ****    counter_t loop_range = range_stop_word - range_start_word;
 12872              		.loc 1 259 33 view .LVU4441
 12873 482a 83E03F   		and	eax, 63	# index,
 12874              	# sieve_extend.c:257:    register bitshift_t pattern_size = WORD_SIZE_bitshift - (WORD_SIZE_bitshif
 257:sieve_extend.c ****    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 12875              		.loc 1 257 24 view .LVU4442
 12876 482d 4929D5   		sub	r13, rdx	# pattern_size, tmp675
GAS LISTING /tmp/ccr2dACi.s 			page 349


 12877              	.LVL747:
 258:sieve_extend.c ****    register bitshift_t shift = (bitindex_calc(range_start))%step ;
 12878              		.loc 1 258 4 is_stmt 1 view .LVU4443
 12879              	# sieve_extend.c:258:    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 258:sieve_extend.c ****    register bitshift_t shift = (bitindex_calc(range_start))%step ;
 12880              		.loc 1 258 24 is_stmt 0 view .LVU4444
 12881 4830 4929D1   		sub	r9, rdx	# pattern_shift, tmp675
 12882              	.LVL748:
 259:sieve_extend.c ****    counter_t loop_range = range_stop_word - range_start_word;
 12883              		.loc 1 259 4 is_stmt 1 view .LVU4445
 12884              	# sieve_extend.c:259:    register bitshift_t shift = (bitindex_calc(range_start))%step ;
 259:sieve_extend.c ****    counter_t loop_range = range_stop_word - range_start_word;
 12885              		.loc 1 259 24 is_stmt 0 view .LVU4446
 12886 4833 31D2     		xor	edx, edx	# tmp679
 12887 4835 48F7F7   		div	rdi	# step
 12888              	.LVL749:
 260:sieve_extend.c ****    #pragma unroll
 12889              		.loc 1 260 4 is_stmt 1 view .LVU4447
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 12890              		.loc 1 263 4 view .LVU4448
 12891              	.LBB634:
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 12892              		.loc 1 263 9 view .LVU4449
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 12893              		.loc 1 263 24 view .LVU4450
 12894              	# sieve_extend.c:263:    for (counter_t i=1; i <= loop_range; i++) {
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 12895              		.loc 1 263 4 is_stmt 0 view .LVU4451
 12896 4838 4C394424 		cmp	QWORD PTR 16[rsp], r8	# %sfp, range_start_word
 12896      10
 12897 483d 0F845D01 		je	.L905	#,
 12897      0000
 12898 4843 4C89F0   		mov	rax, r14	# tmp843, _1365
 12899 4846 498D3411 		lea	rsi, [r9+rdx]	# ivtmp.611,
 12900              	.LVL750:
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 12901              		.loc 1 263 4 view .LVU4452
 12902 484a 4C29D8   		sub	rax, r11	# tmp843, ivtmp.613
 12903 484d 4D89D8   		mov	r8, r11	# ivtmp.613, _1281
 12904              	.LVL751:
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 12905              		.loc 1 263 4 view .LVU4453
 12906 4850 4883E808 		sub	rax, 8	# tmp844,
 12907 4854 48C1E803 		shr	rax, 3	# tmp842,
 12908 4858 4883C001 		add	rax, 1	# tmp845,
 12909 485c 83E003   		and	eax, 3	# tmp846,
 12910 485f 0F849800 		je	.L904	#,
 12910      0000
 12911 4865 4883F801 		cmp	rax, 1	# tmp846,
 12912 4869 7461     		je	.L1173	#,
 12913 486b 4883F802 		cmp	rax, 2	# tmp846,
 12914 486f 7433     		je	.L1174	#,
 12915              	.LVL752:
 12916              	.LBB635:
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 12917              		.loc 1 264 9 is_stmt 1 view .LVU4454
 265:sieve_extend.c **** 
GAS LISTING /tmp/ccr2dACi.s 			page 350


 12918              		.loc 1 265 8 view .LVU4455
 12919              	# sieve_extend.c:264:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 12920              		.loc 1 264 20 is_stmt 0 view .LVU4456
 12921 4871 4889F0   		mov	rax, rsi	# tmp1085, ivtmp.611
 12922 4874 31D2     		xor	edx, edx	# totalshift
 12923              	.LVL753:
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 12924              		.loc 1 264 20 view .LVU4457
 12925 4876 48F7F7   		div	rdi	# step
 12926 4879 4983C008 		add	r8, 8	# ivtmp.613,
 12927 487d 4C01CE   		add	rsi, r9	# ivtmp.611, pattern_shift
 12928              	.LVL754:
 12929              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 12930              		.loc 1 265 91 view .LVU4458
 12931 4880 C4E2E9F7 		shlx	rax, rcx, rdx	# tmp1086, pattern, totalshift
 12931      C1
 12932              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 12933              		.loc 1 265 37 view .LVU4459
 12934 4885 490B4308 		or	rax, QWORD PTR 8[r11]	# tmp1086, MEM[base: _1370, offset: 8B]
 12935 4889 48894424 		mov	QWORD PTR 24[rsp], rax	# %sfp, tmp1086
 12935      18
 12936              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 12937              		.loc 1 265 66 view .LVU4460
 12938 488e 4489E8   		mov	eax, r13d	# tmp1088, _1295
 12939 4891 29D0     		sub	eax, edx	# tmp1088, totalshift
 12940              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 12941              		.loc 1 265 50 view .LVU4461
 12942 4893 C4E2FBF7 		shrx	rdx, rcx, rax	# tmp1089, pattern, tmp1088
 12942      D1
 12943              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 12944              		.loc 1 265 37 view .LVU4462
 12945 4898 488B4424 		mov	rax, QWORD PTR 24[rsp]	# tmp1087, %sfp
 12945      18
 12946 489d 4809D0   		or	rax, rdx	# tmp1087, tmp1089
 12947 48a0 49894308 		mov	QWORD PTR 8[r11], rax	# MEM[base: _1370, offset: 8B], tmp1090
 12948              	.LBE635:
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 12949              		.loc 1 263 41 is_stmt 1 view .LVU4463
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 12950              		.loc 1 263 24 view .LVU4464
 12951              	.L1174:
 12952              	.LBB636:
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 12953              		.loc 1 264 9 view .LVU4465
 265:sieve_extend.c **** 
 12954              		.loc 1 265 8 view .LVU4466
 12955              	# sieve_extend.c:264:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 12956              		.loc 1 264 20 is_stmt 0 view .LVU4467
 12957 48a4 4889F0   		mov	rax, rsi	# tmp1092, ivtmp.611
 12958 48a7 31D2     		xor	edx, edx	# totalshift
GAS LISTING /tmp/ccr2dACi.s 			page 351


 12959 48a9 48F7F7   		div	rdi	# step
 12960              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 12961              		.loc 1 265 66 view .LVU4468
 12962 48ac 4589EB   		mov	r11d, r13d	# tmp1095, _1295
 12963 48af 4C01CE   		add	rsi, r9	# ivtmp.611, pattern_shift
 12964 48b2 4983C008 		add	r8, 8	# ivtmp.613,
 12965              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 12966              		.loc 1 265 91 view .LVU4469
 12967 48b6 C4E2E9F7 		shlx	rax, rcx, rdx	# tmp1093, pattern, totalshift
 12967      C1
 12968              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 12969              		.loc 1 265 37 view .LVU4470
 12970 48bb 490B00   		or	rax, QWORD PTR [r8]	# tmp1094, MEM[base: _1370, offset: 8B]
 12971              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 12972              		.loc 1 265 66 view .LVU4471
 12973 48be 4129D3   		sub	r11d, edx	# tmp1095, totalshift
 12974              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 12975              		.loc 1 265 50 view .LVU4472
 12976 48c1 C4E2A3F7 		shrx	rdx, rcx, r11	# tmp1096, pattern, tmp1095
 12976      D1
 12977              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 12978              		.loc 1 265 37 view .LVU4473
 12979 48c6 4809D0   		or	rax, rdx	# tmp1097, tmp1096
 12980 48c9 498900   		mov	QWORD PTR [r8], rax	# MEM[base: _1370, offset: 8B], tmp1097
 12981              	.LBE636:
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 12982              		.loc 1 263 41 is_stmt 1 view .LVU4474
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 12983              		.loc 1 263 24 view .LVU4475
 12984              	.L1173:
 12985              	.LBB637:
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 12986              		.loc 1 264 9 view .LVU4476
 265:sieve_extend.c **** 
 12987              		.loc 1 265 8 view .LVU4477
 12988              	# sieve_extend.c:264:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 12989              		.loc 1 264 20 is_stmt 0 view .LVU4478
 12990 48cc 4889F0   		mov	rax, rsi	# tmp1099, ivtmp.611
 12991 48cf 31D2     		xor	edx, edx	# totalshift
 12992 48d1 48F7F7   		div	rdi	# step
 12993              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 12994              		.loc 1 265 66 view .LVU4479
 12995 48d4 4589EB   		mov	r11d, r13d	# tmp1102, _1295
 12996 48d7 4983C008 		add	r8, 8	# ivtmp.613,
 12997 48db 4C01CE   		add	rsi, r9	# ivtmp.611, pattern_shift
 12998              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 12999              		.loc 1 265 91 view .LVU4480
 13000 48de C4E2E9F7 		shlx	rax, rcx, rdx	# tmp1100, pattern, totalshift
GAS LISTING /tmp/ccr2dACi.s 			page 352


 13000      C1
 13001              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 13002              		.loc 1 265 37 view .LVU4481
 13003 48e3 490B00   		or	rax, QWORD PTR [r8]	# tmp1101, MEM[base: _1370, offset: 8B]
 13004              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 13005              		.loc 1 265 66 view .LVU4482
 13006 48e6 4129D3   		sub	r11d, edx	# tmp1102, totalshift
 13007              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 13008              		.loc 1 265 50 view .LVU4483
 13009 48e9 C4E2A3F7 		shrx	rdx, rcx, r11	# tmp1103, pattern, tmp1102
 13009      D1
 13010              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 13011              		.loc 1 265 37 view .LVU4484
 13012 48ee 4809D0   		or	rax, rdx	# tmp1104, tmp1103
 13013 48f1 498900   		mov	QWORD PTR [r8], rax	# MEM[base: _1370, offset: 8B], tmp1104
 13014              	.LBE637:
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 13015              		.loc 1 263 41 is_stmt 1 view .LVU4485
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 13016              		.loc 1 263 24 view .LVU4486
 13017              	# sieve_extend.c:263:    for (counter_t i=1; i <= loop_range; i++) {
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 13018              		.loc 1 263 4 is_stmt 0 view .LVU4487
 13019 48f4 4D39C6   		cmp	r14, r8	# _1365, ivtmp.613
 13020 48f7 0F84A300 		je	.L905	#,
 13020      0000
 13021              	.L904:
 13022              	.LBB638:
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 13023              		.loc 1 264 9 is_stmt 1 view .LVU4488
 265:sieve_extend.c **** 
 13024              		.loc 1 265 8 view .LVU4489
 13025              	# sieve_extend.c:264:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 13026              		.loc 1 264 20 is_stmt 0 view .LVU4490
 13027 48fd 4889F0   		mov	rax, rsi	# tmp685, ivtmp.611
 13028 4900 31D2     		xor	edx, edx	# totalshift
 13029 4902 48F7F7   		div	rdi	# step
 13030              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 13031              		.loc 1 265 66 view .LVU4491
 13032 4905 4589EB   		mov	r11d, r13d	# tmp688, _1295
 13033 4908 4C01CE   		add	rsi, r9	# ivtmp.611, pattern_shift
 13034 490b 4983C020 		add	r8, 32	# ivtmp.613,
 13035              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 13036              		.loc 1 265 91 view .LVU4492
 13037 490f C4E2E9F7 		shlx	rax, rcx, rdx	# tmp686, pattern, totalshift
 13037      C1
 13038              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 13039              		.loc 1 265 37 view .LVU4493
 13040 4914 490B40E8 		or	rax, QWORD PTR -24[r8]	# tmp687, MEM[base: _1370, offset: 8B]
GAS LISTING /tmp/ccr2dACi.s 			page 353


 13041              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 13042              		.loc 1 265 66 view .LVU4494
 13043 4918 4129D3   		sub	r11d, edx	# tmp688, totalshift
 13044              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 13045              		.loc 1 265 50 view .LVU4495
 13046 491b C4E2A3F7 		shrx	rdx, rcx, r11	# tmp689, pattern, tmp688
 13046      D1
 13047              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 13048              		.loc 1 265 66 view .LVU4496
 13049 4920 4589EB   		mov	r11d, r13d	# tmp898, _1295
 13050              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 13051              		.loc 1 265 37 view .LVU4497
 13052 4923 4809D0   		or	rax, rdx	# tmp690, tmp689
 13053              	# sieve_extend.c:264:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 13054              		.loc 1 264 20 view .LVU4498
 13055 4926 31D2     		xor	edx, edx	# totalshift
 13056              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 13057              		.loc 1 265 37 view .LVU4499
 13058 4928 498940E8 		mov	QWORD PTR -24[r8], rax	# MEM[base: _1370, offset: 8B], tmp690
 13059              	.LBE638:
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 13060              		.loc 1 263 41 is_stmt 1 view .LVU4500
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 13061              		.loc 1 263 24 view .LVU4501
 13062              	.LBB639:
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 13063              		.loc 1 264 9 view .LVU4502
 265:sieve_extend.c **** 
 13064              		.loc 1 265 8 view .LVU4503
 13065              	# sieve_extend.c:264:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 13066              		.loc 1 264 20 is_stmt 0 view .LVU4504
 13067 492c 4889F0   		mov	rax, rsi	# tmp895, ivtmp.611
 13068 492f 48F7F7   		div	rdi	# step
 13069 4932 4C01CE   		add	rsi, r9	# ivtmp.611, pattern_shift
 13070              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 13071              		.loc 1 265 91 view .LVU4505
 13072 4935 C4E2E9F7 		shlx	rax, rcx, rdx	# tmp896, pattern, totalshift
 13072      C1
 13073              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 13074              		.loc 1 265 37 view .LVU4506
 13075 493a 490B40F0 		or	rax, QWORD PTR -16[r8]	# tmp897, MEM[base: _1370, offset: 8B]
 13076              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 13077              		.loc 1 265 66 view .LVU4507
 13078 493e 4129D3   		sub	r11d, edx	# tmp898, totalshift
 13079              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 13080              		.loc 1 265 50 view .LVU4508
GAS LISTING /tmp/ccr2dACi.s 			page 354


 13081 4941 C4E2A3F7 		shrx	rdx, rcx, r11	# tmp899, pattern, tmp898
 13081      D1
 13082              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 13083              		.loc 1 265 66 view .LVU4509
 13084 4946 4589EB   		mov	r11d, r13d	# tmp907, _1295
 13085              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 13086              		.loc 1 265 37 view .LVU4510
 13087 4949 4809D0   		or	rax, rdx	# tmp900, tmp899
 13088              	# sieve_extend.c:264:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 13089              		.loc 1 264 20 view .LVU4511
 13090 494c 31D2     		xor	edx, edx	# totalshift
 13091              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 13092              		.loc 1 265 37 view .LVU4512
 13093 494e 498940F0 		mov	QWORD PTR -16[r8], rax	# MEM[base: _1370, offset: 8B], tmp900
 13094              	.LBE639:
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 13095              		.loc 1 263 41 is_stmt 1 view .LVU4513
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 13096              		.loc 1 263 24 view .LVU4514
 13097              	.LBB640:
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 13098              		.loc 1 264 9 view .LVU4515
 265:sieve_extend.c **** 
 13099              		.loc 1 265 8 view .LVU4516
 13100              	# sieve_extend.c:264:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 13101              		.loc 1 264 20 is_stmt 0 view .LVU4517
 13102 4952 4889F0   		mov	rax, rsi	# tmp904, ivtmp.611
 13103 4955 48F7F7   		div	rdi	# step
 13104 4958 4C01CE   		add	rsi, r9	# ivtmp.611, pattern_shift
 13105              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 13106              		.loc 1 265 91 view .LVU4518
 13107 495b C4E2E9F7 		shlx	rax, rcx, rdx	# tmp905, pattern, totalshift
 13107      C1
 13108              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 13109              		.loc 1 265 37 view .LVU4519
 13110 4960 490B40F8 		or	rax, QWORD PTR -8[r8]	# tmp906, MEM[base: _1370, offset: 8B]
 13111              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 13112              		.loc 1 265 66 view .LVU4520
 13113 4964 4129D3   		sub	r11d, edx	# tmp907, totalshift
 13114              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 13115              		.loc 1 265 50 view .LVU4521
 13116 4967 C4E2A3F7 		shrx	rdx, rcx, r11	# tmp908, pattern, tmp907
 13116      D1
 13117              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 13118              		.loc 1 265 66 view .LVU4522
 13119 496c 4589EB   		mov	r11d, r13d	# tmp916, _1295
 13120              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
GAS LISTING /tmp/ccr2dACi.s 			page 355


 265:sieve_extend.c **** 
 13121              		.loc 1 265 37 view .LVU4523
 13122 496f 4809D0   		or	rax, rdx	# tmp909, tmp908
 13123              	# sieve_extend.c:264:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 13124              		.loc 1 264 20 view .LVU4524
 13125 4972 31D2     		xor	edx, edx	# totalshift
 13126              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 13127              		.loc 1 265 37 view .LVU4525
 13128 4974 498940F8 		mov	QWORD PTR -8[r8], rax	# MEM[base: _1370, offset: 8B], tmp909
 13129              	.LBE640:
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 13130              		.loc 1 263 41 is_stmt 1 view .LVU4526
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 13131              		.loc 1 263 24 view .LVU4527
 13132              	.LBB641:
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 13133              		.loc 1 264 9 view .LVU4528
 265:sieve_extend.c **** 
 13134              		.loc 1 265 8 view .LVU4529
 13135              	# sieve_extend.c:264:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 13136              		.loc 1 264 20 is_stmt 0 view .LVU4530
 13137 4978 4889F0   		mov	rax, rsi	# tmp913, ivtmp.611
 13138 497b 48F7F7   		div	rdi	# step
 13139 497e 4C01CE   		add	rsi, r9	# ivtmp.611, pattern_shift
 13140              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 13141              		.loc 1 265 91 view .LVU4531
 13142 4981 C4E2E9F7 		shlx	rax, rcx, rdx	# tmp914, pattern, totalshift
 13142      C1
 13143              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 13144              		.loc 1 265 37 view .LVU4532
 13145 4986 490B00   		or	rax, QWORD PTR [r8]	# tmp915, MEM[base: _1370, offset: 8B]
 13146              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 13147              		.loc 1 265 66 view .LVU4533
 13148 4989 4129D3   		sub	r11d, edx	# tmp916, totalshift
 13149              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 13150              		.loc 1 265 50 view .LVU4534
 13151 498c C4E2A3F7 		shrx	rdx, rcx, r11	# tmp917, pattern, tmp916
 13151      D1
 13152              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 13153              		.loc 1 265 37 view .LVU4535
 13154 4991 4809D0   		or	rax, rdx	# tmp918, tmp917
 13155 4994 498900   		mov	QWORD PTR [r8], rax	# MEM[base: _1370, offset: 8B], tmp918
 13156              	.LBE641:
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 13157              		.loc 1 263 41 is_stmt 1 view .LVU4536
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 13158              		.loc 1 263 24 view .LVU4537
 13159              	# sieve_extend.c:263:    for (counter_t i=1; i <= loop_range; i++) {
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
GAS LISTING /tmp/ccr2dACi.s 			page 356


 13160              		.loc 1 263 4 is_stmt 0 view .LVU4538
 13161 4997 4D39C6   		cmp	r14, r8	# _1365, ivtmp.613
 13162 499a 0F855DFF 		jne	.L904	#,
 13162      FFFF
 13163              	.L905:
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 13164              		.loc 1 263 4 view .LVU4539
 13165              	.LBE634:
 269:sieve_extend.c **** 
 13166              		.loc 1 269 4 is_stmt 1 view .LVU4540
 13167              	# sieve_extend.c:269:    bitarray[range_stop_word] &= chopmask(range_stop);
 269:sieve_extend.c **** 
 13168              		.loc 1 269 30 is_stmt 0 view .LVU4541
 13169 49a0 488B7C24 		mov	rdi, QWORD PTR 8[rsp]	# _499, %sfp
 13169      08
 13170              	.LVL755:
 269:sieve_extend.c **** 
 13171              		.loc 1 269 30 view .LVU4542
 13172 49a5 48217D00 		and	QWORD PTR 0[rbp], rdi	# *_494, _499
 13173              	.LVL756:
 13174              	.L902:
 269:sieve_extend.c **** 
 13175              		.loc 1 269 30 view .LVU4543
 13176              	.LBE644:
 13177              	.LBE649:
 936:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 13178              		.loc 1 936 9 is_stmt 1 view .LVU4544
 13179              	.LBB650:
 13180              	.LBI650:
 122:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 13181              		.loc 1 122 25 view .LVU4545
 13182              	.LBB651:
 123:sieve_extend.c ****     return index;
 13183              		.loc 1 123 5 view .LVU4546
 123:sieve_extend.c ****     return index;
 13184              		.loc 1 123 11 view .LVU4547
 13185              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 13186              		.loc 1 123 21 is_stmt 0 view .LVU4548
 13187 49a9 4C89D1   		mov	rcx, r10	# tmp691, _303
 13188 49ac 48C1E906 		shr	rcx, 6	# tmp691,
 13189              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 13190              		.loc 1 123 12 view .LVU4549
 13191 49b0 4C8B2CCB 		mov	r13, QWORD PTR [rbx+rcx*8]	# *_331, *_331
 13192              	.LBE651:
 13193              	.LBE650:
 13194              	# sieve_extend.c:934:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 934:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 13195              		.loc 1 934 12 view .LVU4550
 13196 49b4 4C89D1   		mov	rcx, r10	# index, _303
 13197              	.LBB653:
 13198              	.LBB652:
 13199              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 13200              		.loc 1 123 11 view .LVU4551
 13201 49b7 4D0FA3D5 		bt	r13, r10	# *_331, _303
GAS LISTING /tmp/ccr2dACi.s 			page 357


 13202 49bb 0F83BF00 		jnc	.L906	#,
 13202      0000
 13203              	.LVL757:
 13204              	.L907:
 123:sieve_extend.c ****     return index;
 13205              		.loc 1 123 58 is_stmt 1 view .LVU4552
 13206              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 13207              		.loc 1 123 63 is_stmt 0 view .LVU4553
 13208 49c1 4C8D5101 		lea	r10, 1[rcx]	# tmp841,
 13209              	.LVL758:
 13210              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 13211              		.loc 1 123 21 view .LVU4554
 13212 49c5 4D89D1   		mov	r9, r10	# tmp696, index
 13213              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 13214              		.loc 1 123 63 view .LVU4555
 13215 49c8 4C89D1   		mov	rcx, r10	# index, tmp841
 123:sieve_extend.c ****     return index;
 13216              		.loc 1 123 11 is_stmt 1 view .LVU4556
 13217              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 13218              		.loc 1 123 21 is_stmt 0 view .LVU4557
 13219 49cb 49C1E906 		shr	r9, 6	# tmp696,
 13220              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 13221              		.loc 1 123 12 view .LVU4558
 13222 49cf 4A8B34CB 		mov	rsi, QWORD PTR [rbx+r9*8]	# *_316, *_316
 13223              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 13224              		.loc 1 123 11 view .LVU4559
 13225 49d3 4C0FA3D6 		bt	rsi, r10	# *_316, index
 13226 49d7 0F83A300 		jnc	.L906	#,
 13226      0000
 123:sieve_extend.c ****     return index;
 13227              		.loc 1 123 58 is_stmt 1 view .LVU4560
 13228              	.LVL759:
 13229              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 13230              		.loc 1 123 63 is_stmt 0 view .LVU4561
 13231 49dd 4883C101 		add	rcx, 1	# index,
 13232              	.LVL760:
 123:sieve_extend.c ****     return index;
 13233              		.loc 1 123 11 is_stmt 1 view .LVU4562
 13234              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 13235              		.loc 1 123 21 is_stmt 0 view .LVU4563
 13236 49e1 4989C8   		mov	r8, rcx	# tmp1056, index
 13237 49e4 49C1E806 		shr	r8, 6	# tmp1056,
 13238              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 13239              		.loc 1 123 12 view .LVU4564
 13240 49e8 4A8B04C3 		mov	rax, QWORD PTR [rbx+r8*8]	# *_316, *_316
 13241              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 13242              		.loc 1 123 11 view .LVU4565
GAS LISTING /tmp/ccr2dACi.s 			page 358


 13243 49ec 480FA3C8 		bt	rax, rcx	# *_316, index
 13244 49f0 0F838A00 		jnc	.L906	#,
 13244      0000
 123:sieve_extend.c ****     return index;
 13245              		.loc 1 123 58 is_stmt 1 view .LVU4566
 13246              	.LVL761:
 13247              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 13248              		.loc 1 123 63 is_stmt 0 view .LVU4567
 13249 49f6 498D4A02 		lea	rcx, 2[r10]	# index,
 13250              	.LVL762:
 123:sieve_extend.c ****     return index;
 13251              		.loc 1 123 11 is_stmt 1 view .LVU4568
 13252              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 13253              		.loc 1 123 21 is_stmt 0 view .LVU4569
 13254 49fa 4989CB   		mov	r11, rcx	# tmp1060, index
 13255 49fd 49C1EB06 		shr	r11, 6	# tmp1060,
 13256              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 13257              		.loc 1 123 12 view .LVU4570
 13258 4a01 4A8B14DB 		mov	rdx, QWORD PTR [rbx+r11*8]	# *_316, *_316
 13259              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 13260              		.loc 1 123 11 view .LVU4571
 13261 4a05 480FA3CA 		bt	rdx, rcx	# *_316, index
 13262 4a09 7375     		jnc	.L906	#,
 123:sieve_extend.c ****     return index;
 13263              		.loc 1 123 58 is_stmt 1 view .LVU4572
 13264              	.LVL763:
 13265              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 13266              		.loc 1 123 63 is_stmt 0 view .LVU4573
 13267 4a0b 498D4A03 		lea	rcx, 3[r10]	# index,
 13268              	.LVL764:
 123:sieve_extend.c ****     return index;
 13269              		.loc 1 123 11 is_stmt 1 view .LVU4574
 13270              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 13271              		.loc 1 123 21 is_stmt 0 view .LVU4575
 13272 4a0f 4889CF   		mov	rdi, rcx	# tmp1064, index
 13273 4a12 48C1EF06 		shr	rdi, 6	# tmp1064,
 13274              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 13275              		.loc 1 123 12 view .LVU4576
 13276 4a16 4C8B2CFB 		mov	r13, QWORD PTR [rbx+rdi*8]	# *_316, *_316
 13277              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 13278              		.loc 1 123 11 view .LVU4577
 13279 4a1a 490FA3CD 		bt	r13, rcx	# *_316, index
 13280 4a1e 7360     		jnc	.L906	#,
 123:sieve_extend.c ****     return index;
 13281              		.loc 1 123 58 is_stmt 1 view .LVU4578
 13282              	.LVL765:
 13283              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 13284              		.loc 1 123 63 is_stmt 0 view .LVU4579
GAS LISTING /tmp/ccr2dACi.s 			page 359


 13285 4a20 498D4A04 		lea	rcx, 4[r10]	# index,
 13286              	.LVL766:
 123:sieve_extend.c ****     return index;
 13287              		.loc 1 123 11 is_stmt 1 view .LVU4580
 13288              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 13289              		.loc 1 123 21 is_stmt 0 view .LVU4581
 13290 4a24 4989C9   		mov	r9, rcx	# tmp1068, index
 13291 4a27 49C1E906 		shr	r9, 6	# tmp1068,
 13292              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 13293              		.loc 1 123 12 view .LVU4582
 13294 4a2b 4A8B34CB 		mov	rsi, QWORD PTR [rbx+r9*8]	# *_316, *_316
 13295              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 13296              		.loc 1 123 11 view .LVU4583
 13297 4a2f 480FA3CE 		bt	rsi, rcx	# *_316, index
 13298 4a33 734B     		jnc	.L906	#,
 123:sieve_extend.c ****     return index;
 13299              		.loc 1 123 58 is_stmt 1 view .LVU4584
 13300              	.LVL767:
 13301              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 13302              		.loc 1 123 63 is_stmt 0 view .LVU4585
 13303 4a35 498D4A05 		lea	rcx, 5[r10]	# index,
 13304              	.LVL768:
 123:sieve_extend.c ****     return index;
 13305              		.loc 1 123 11 is_stmt 1 view .LVU4586
 13306              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 13307              		.loc 1 123 21 is_stmt 0 view .LVU4587
 13308 4a39 4989C8   		mov	r8, rcx	# tmp1072, index
 13309 4a3c 49C1E806 		shr	r8, 6	# tmp1072,
 13310              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 13311              		.loc 1 123 12 view .LVU4588
 13312 4a40 4A8B04C3 		mov	rax, QWORD PTR [rbx+r8*8]	# *_316, *_316
 13313              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 13314              		.loc 1 123 11 view .LVU4589
 13315 4a44 480FA3C8 		bt	rax, rcx	# *_316, index
 13316 4a48 7336     		jnc	.L906	#,
 123:sieve_extend.c ****     return index;
 13317              		.loc 1 123 58 is_stmt 1 view .LVU4590
 13318              	.LVL769:
 13319              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 13320              		.loc 1 123 63 is_stmt 0 view .LVU4591
 13321 4a4a 498D4A06 		lea	rcx, 6[r10]	# index,
 13322              	.LVL770:
 123:sieve_extend.c ****     return index;
 13323              		.loc 1 123 11 is_stmt 1 view .LVU4592
 13324              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 13325              		.loc 1 123 21 is_stmt 0 view .LVU4593
 13326 4a4e 4989CB   		mov	r11, rcx	# tmp1076, index
 13327 4a51 49C1EB06 		shr	r11, 6	# tmp1076,
GAS LISTING /tmp/ccr2dACi.s 			page 360


 13328              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 13329              		.loc 1 123 12 view .LVU4594
 13330 4a55 4A8B14DB 		mov	rdx, QWORD PTR [rbx+r11*8]	# *_316, *_316
 13331              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 13332              		.loc 1 123 11 view .LVU4595
 13333 4a59 480FA3CA 		bt	rdx, rcx	# *_316, index
 13334 4a5d 7321     		jnc	.L906	#,
 123:sieve_extend.c ****     return index;
 13335              		.loc 1 123 58 is_stmt 1 view .LVU4596
 13336              	.LVL771:
 13337              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 13338              		.loc 1 123 63 is_stmt 0 view .LVU4597
 13339 4a5f 498D4A07 		lea	rcx, 7[r10]	# index,
 13340              	.LVL772:
 123:sieve_extend.c ****     return index;
 13341              		.loc 1 123 11 is_stmt 1 view .LVU4598
 13342              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 13343              		.loc 1 123 21 is_stmt 0 view .LVU4599
 13344 4a63 4989CA   		mov	r10, rcx	# tmp1080, index
 13345 4a66 49C1EA06 		shr	r10, 6	# tmp1080,
 13346              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 13347              		.loc 1 123 12 view .LVU4600
 13348 4a6a 4A8B3CD3 		mov	rdi, QWORD PTR [rbx+r10*8]	# *_316, *_316
 13349              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 13350              		.loc 1 123 11 view .LVU4601
 13351 4a6e 480FA3CF 		bt	rdi, rcx	# *_316, index
 13352 4a72 0F8249FF 		jc	.L907	#,
 13352      FFFF
 13353              	.LVL773:
 13354 4a78 0F1F8400 		.p2align 4
 13354      00000000 
 13355              		.p2align 3
 13356              	.L906:
 124:sieve_extend.c **** }
 13357              		.loc 1 124 5 is_stmt 1 view .LVU4602
 124:sieve_extend.c **** }
 13358              		.loc 1 124 5 is_stmt 0 view .LVU4603
 13359              	.LBE652:
 13360              	.LBE653:
 937:sieve_extend.c ****     }
 13361              		.loc 1 937 9 is_stmt 1 view .LVU4604
 13362              	# sieve_extend.c:937:         start = prime * prime * 2 + prime * 2;
 937:sieve_extend.c ****     }
 13363              		.loc 1 937 35 is_stmt 0 view .LVU4605
 13364 4a80 488D7101 		lea	rsi, 1[rcx]	# _411,
 13365              	# sieve_extend.c:937:         start = prime * prime * 2 + prime * 2;
 937:sieve_extend.c ****     }
 13366              		.loc 1 937 15 view .LVU4606
 13367 4a84 480FAFF1 		imul	rsi, rcx	# tmp702, index
 13368              	.LVL774:
 937:sieve_extend.c ****     }
GAS LISTING /tmp/ccr2dACi.s 			page 361


 13369              		.loc 1 937 15 view .LVU4607
 13370 4a88 4801F6   		add	rsi, rsi	# index
 13371              	.LVL775:
 931:sieve_extend.c ****         step  = prime * 2 + 1;
 13372              		.loc 1 931 11 is_stmt 1 view .LVU4608
 13373 4a8b 4939F4   		cmp	r12, rsi	# block_stop, index
 13374 4a8e 0F836CFC 		jnb	.L908	#,
 13374      FFFF
 13375              	.LVL776:
 13376              	.L1448:
 931:sieve_extend.c ****         step  = prime * 2 + 1;
 13377              		.loc 1 931 11 is_stmt 0 view .LVU4609
 13378 4a94 488B5C24 		mov	rbx, QWORD PTR 48[rsp]	# <retval>, %sfp
 13378      30
 13379              	.LVL777:
 931:sieve_extend.c ****         step  = prime * 2 + 1;
 13380              		.loc 1 931 11 view .LVU4610
 13381 4a99 488B5308 		mov	rdx, QWORD PTR 8[rbx]	# _8, sieve_92->bits
 13382              	.L897:
 13383              	.LVL778:
 931:sieve_extend.c ****         step  = prime * 2 + 1;
 13384              		.loc 1 931 11 view .LVU4611
 13385              	.LBE717:
 13386              	.LBE728:
1056:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 13387              		.loc 1 1056 91 is_stmt 1 view .LVU4612
 13388              	# sieve_extend.c:1056:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <=
1056:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 13389              		.loc 1 1056 103 is_stmt 0 view .LVU4613
 13390 4a9d 488B6C24 		mov	rbp, QWORD PTR 64[rsp]	# blocksize, %sfp
 13390      40
 13391 4aa2 4901EF   		add	r15, rbp	# block_start, blocksize
 13392              	.LVL779:
 13393              	# sieve_extend.c:1056:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <=
1056:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 13394              		.loc 1 1056 128 view .LVU4614
 13395 4aa5 4901EC   		add	r12, rbp	# block_stop, blocksize
 13396              	.LVL780:
1056:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 13397              		.loc 1 1056 63 is_stmt 1 view .LVU4615
 13398              	# sieve_extend.c:1056:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <=
1056:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 13399              		.loc 1 1056 5 is_stmt 0 view .LVU4616
 13400 4aa8 4C39FA   		cmp	rdx, r15	# _8, block_start
 13401 4aab 0F838FF9 		jnb	.L893	#,
 13401      FFFF
 13402              	.LBE732:
 13403              	# sieve_extend.c:1063: }
1063:sieve_extend.c **** 
 13404              		.loc 1 1063 1 view .LVU4617
 13405 4ab1 488B4424 		mov	rax, QWORD PTR 48[rsp]	#, %sfp
 13405      30
 13406 4ab6 488D6424 		lea	rsp, 104[rsp]	#,
 13406      68
 13407              		.cfi_remember_state
 13408              		.cfi_def_cfa_offset 56
 13409 4abb 5B       		pop	rbx	#
GAS LISTING /tmp/ccr2dACi.s 			page 362


 13410              		.cfi_def_cfa_offset 48
 13411 4abc 5D       		pop	rbp	#
 13412              		.cfi_def_cfa_offset 40
 13413 4abd 415C     		pop	r12	#
 13414              		.cfi_def_cfa_offset 32
 13415              	.LVL781:
1063:sieve_extend.c **** 
 13416              		.loc 1 1063 1 view .LVU4618
 13417 4abf 415D     		pop	r13	#
 13418              		.cfi_def_cfa_offset 24
 13419 4ac1 415E     		pop	r14	#
 13420              		.cfi_def_cfa_offset 16
 13421 4ac3 415F     		pop	r15	#
 13422              		.cfi_def_cfa_offset 8
 13423              	.LVL782:
1063:sieve_extend.c **** 
 13424              		.loc 1 1063 1 view .LVU4619
 13425 4ac5 C3       		ret	
 13426              	.LVL783:
 13427              		.p2align 4,,7
 13428 4ac6 6690     		.p2align 3
 13429              	.L1466:
 13430              		.cfi_restore_state
 13431              	.LBB733:
 13432              	.LBB729:
 13433              	.LBB718:
 13434              	.LBB654:
 13435              	.LBB645:
 248:sieve_extend.c ****         //  debug if (step==13) { printf("After\n"); dump_bitarray(bitarray,10); }
 13436              		.loc 1 248 8 is_stmt 1 view .LVU4620
 13437              	# sieve_extend.c:248:        bitarray[range_start_word] |= (pattern << bitindex(range_start)) & cho
 248:sieve_extend.c ****         //  debug if (step==13) { printf("After\n"); dump_bitarray(bitarray,10); }
 13438              		.loc 1 248 73 is_stmt 0 view .LVU4621
 13439 4ac8 4C234C24 		and	r9, QWORD PTR 8[rsp]	# tmp671, %sfp
 13439      08
 13440              	# sieve_extend.c:248:        bitarray[range_start_word] |= (pattern << bitindex(range_start)) & cho
 248:sieve_extend.c ****         //  debug if (step==13) { printf("After\n"); dump_bitarray(bitarray,10); }
 13441              		.loc 1 248 35 view .LVU4622
 13442 4acd 4D09E9   		or	r9, r13	# tmp672, pretmp_1282
 13443 4ad0 4D890B   		mov	QWORD PTR [r11], r9	# *_1281, tmp672
 250:sieve_extend.c ****     }
 13444              		.loc 1 250 8 is_stmt 1 view .LVU4623
 13445 4ad3 E9D1FEFF 		jmp	.L902	#
 13445      FF
 13446              	.LVL784:
 13447              		.p2align 4,,7
 13448              		.p2align 3
 13449              	.L1465:
 250:sieve_extend.c ****     }
 13450              		.loc 1 250 8 is_stmt 0 view .LVU4624
 13451              	.LBE645:
 13452              	.LBE654:
 940:sieve_extend.c ****         step  = prime * 2 + 1;
 13453              		.loc 1 940 11 is_stmt 1 view .LVU4625
 13454 4ad8 4939F4   		cmp	r12, rsi	# block_stop, index
 13455 4adb 72B7     		jb	.L1448	#,
 940:sieve_extend.c ****         step  = prime * 2 + 1;
GAS LISTING /tmp/ccr2dACi.s 			page 363


 13456              		.loc 1 940 11 is_stmt 0 view .LVU4626
 13457 4add 4C897C24 		mov	QWORD PTR 24[rsp], r15	# %sfp, block_start
 13457      18
 13458              	.LBB655:
 13459              	.LBB656:
 13460              	.LBB657:
 13461              	.LBB658:
 13462              	.LBB659:
 13463              	.LBB660:
 13464              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 13465              		.loc 1 309 25 view .LVU4627
 13466 4ae2 41BA0100 		mov	r10d, 1	# tmp830,
 13466      0000
 13467              	.LVL785:
 13468 4ae8 0F1F8400 		.p2align 4
 13468      00000000 
 13469              		.p2align 3
 13470              	.L896:
 309:sieve_extend.c ****                 index += step;
 13471              		.loc 1 309 25 view .LVU4628
 13472              	.LBE660:
 13473              	.LBE659:
 13474              	.LBE658:
 13475              	.LBE657:
 13476              	.LBE656:
 13477              	.LBE655:
 941:sieve_extend.c ****         if unlikely(step > MEDIUMSTEP_FASTER) break;
 13478              		.loc 1 941 9 is_stmt 1 view .LVU4629
 13479              	# sieve_extend.c:941:         step  = prime * 2 + 1;
 941:sieve_extend.c ****         if unlikely(step > MEDIUMSTEP_FASTER) break;
 13480              		.loc 1 941 15 is_stmt 0 view .LVU4630
 13481 4af0 4C8D4409 		lea	r8, 1[rcx+rcx]	# step,
 13481      01
 13482              	.LVL786:
 942:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 13483              		.loc 1 942 9 is_stmt 1 view .LVU4631
 13484              	# sieve_extend.c:942:         if unlikely(step > MEDIUMSTEP_FASTER) break;
 942:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 13485              		.loc 1 942 12 is_stmt 0 view .LVU4632
 13486 4af5 4C3B0500 		cmp	r8, QWORD PTR global_MEDIUMSTEP_FASTER[rip]	# step, global_MEDIUMSTEP_FASTER
 13486      000000
 13487 4afc 0F87D604 		ja	.L1467	#,
 13487      0000
 943:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 13488              		.loc 1 943 9 is_stmt 1 view .LVU4633
 13489              	# sieve_extend.c:943:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 943:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 13490              		.loc 1 943 12 is_stmt 0 view .LVU4634
 13491 4b02 488B4424 		mov	rax, QWORD PTR 24[rsp]	# block_start, %sfp
 13491      18
 13492 4b07 4C8D6901 		lea	r13, 1[rcx]	# _333,
 13493 4b0b 4939C5   		cmp	r13, rax	# _333, block_start
 13494 4b0e 770F     		ja	.L911	#,
 943:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 13495              		.loc 1 943 47 is_stmt 1 view .LVU4635
 13496              	# sieve_extend.c:943:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
GAS LISTING /tmp/ccr2dACi.s 			page 364


 943:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 13497              		.loc 1 943 67 is_stmt 0 view .LVU4636
 13498 4b10 4801C8   		add	rax, rcx	# _337, index
 13499              	# sieve_extend.c:943:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 943:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 13500              		.loc 1 943 108 view .LVU4637
 13501 4b13 31D2     		xor	edx, edx	# tmp706
 13502              	# sieve_extend.c:943:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 943:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 13503              		.loc 1 943 75 view .LVU4638
 13504 4b15 488D3408 		lea	rsi, [rax+rcx]	# tmp704,
 13505              	.LVL787:
 13506              	# sieve_extend.c:943:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 943:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 13507              		.loc 1 943 108 view .LVU4639
 13508 4b19 49F7F0   		div	r8	# step
 13509              	.LVL788:
 13510              	# sieve_extend.c:943:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 943:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 13511              		.loc 1 943 53 view .LVU4640
 13512 4b1c 4829D6   		sub	rsi, rdx	# index, tmp706
 13513              	.LVL789:
 13514              	.L911:
 944:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1 );
 13515              		.loc 1 944 9 is_stmt 1 view .LVU4641
 13516              	.LBB677:
 13517              	.LBI655:
 297:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 13518              		.loc 1 297 14 view .LVU4642
 13519              	.LBB675:
 298:sieve_extend.c **** 
 13520              		.loc 1 298 5 view .LVU4643
 13521              	# sieve_extend.c:298:     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * st
 298:sieve_extend.c **** 
 13522              		.loc 1 298 74 is_stmt 0 view .LVU4644
 13523 4b1f 4D89C6   		mov	r14, r8	# tmp708, step
 13524 4b22 4531FF   		xor	r15d, r15d	# _675
 13525 4b25 49C1E606 		sal	r14, 6	# tmp708,
 13526 4b29 4901F6   		add	r14, rsi	# tmp709, index
 13527 4b2c 410F92C7 		setc	r15b	#, _675
 13528              	.LVL790:
 300:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-unique (%ju
 13529              		.loc 1 300 5 is_stmt 1 view .LVU4645
 13530              	# sieve_extend.c:300:     if (range_stop_unique > range_stop) { // the range will not repeat itself
 300:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-unique (%ju
 13531              		.loc 1 300 8 is_stmt 0 view .LVU4646
 13532 4b30 4D39F4   		cmp	r12, r14	# block_stop, tmp709
 13533 4b33 0F829F03 		jb	.L914	#,
 13533      0000
 13534              	.LVL791:
 13535              	.LBB664:
 321:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 13536              		.loc 1 321 54 is_stmt 1 view .LVU4647
 13537              	# sieve_extend.c:321:         for (register counter_t index = range_start; index <= range_stop_uniq
 321:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 13538              		.loc 1 321 9 is_stmt 0 view .LVU4648
 13539 4b39 4D85FF   		test	r15, r15	# _675
GAS LISTING /tmp/ccr2dACi.s 			page 365


 13540 4b3c 0F858002 		jne	.L918	#,
 13540      0000
 13541              	.LBB665:
 13542              	.LBB666:
 13543              	.LBB667:
 13544              	# sieve_extend.c:177:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 177:sieve_extend.c **** 
 13545              		.loc 1 177 133 view .LVU4649
 13546 4b42 488B7C24 		mov	rdi, QWORD PTR 16[rsp]	# range_stop_word, %sfp
 13546      10
 13547              	# sieve_extend.c:177:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 177:sieve_extend.c **** 
 13548              		.loc 1 177 110 view .LVU4650
 13549 4b47 4F8D0C80 		lea	r9, [r8+r8*4]	# tmp722,
 13550 4b4b 4D89C7   		mov	r15, r8	# _1391, step
 13551              	# sieve_extend.c:183:        index_ptr+=step;
 183:sieve_extend.c ****        *index_ptr |= mask;
 13552              		.loc 1 183 17 view .LVU4651
 13553 4b4e 4A8D0CC5 		lea	rcx, 0[0+r8*8]	# _543,
 13553      00000000 
 13554              	# sieve_extend.c:177:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 177:sieve_extend.c **** 
 13555              		.loc 1 177 133 view .LVU4652
 13556 4b56 4989FB   		mov	r11, rdi	# tmp724, range_stop_word
 13557 4b59 4D29CB   		sub	r11, r9	# tmp724, tmp722
 13558 4b5c 4C39CF   		cmp	rdi, r9	# range_stop_word, tmp722
 13559 4b5f 4E8D1CDB 		lea	r11, [rbx+r11*8]	# tmp726,
 13560 4b63 4C0F46DB 		cmovbe	r11, rbx	# _30,, fast_loop_ptr
 13561 4b67 49C1E103 		sal	r9, 3	# tmp730,
 13562 4b6b 49C1E704 		sal	r15, 4	# _1391,
 13563              	.LVL792:
 13564 4b6f 90       		.p2align 4
 13565              		.p2align 3
 13566              	.L927:
 177:sieve_extend.c **** 
 13567              		.loc 1 177 133 view .LVU4653
 13568              	.LBE667:
 13569              	.LBE666:
 322:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 13570              		.loc 1 322 13 is_stmt 1 view .LVU4654
 13571              	# sieve_extend.c:322:             register counter_t index_word = wordindex(index);
 322:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 13572              		.loc 1 322 32 is_stmt 0 view .LVU4655
 13573 4b70 4889F0   		mov	rax, rsi	# index_word, index
 13574              	# sieve_extend.c:323:             register bitword_t mask = SAFE_ZERO;
 323:sieve_extend.c ****             #pragma ivdep
 13575              		.loc 1 323 32 view .LVU4656
 13576 4b73 31D2     		xor	edx, edx	# mask
 13577              	# sieve_extend.c:322:             register counter_t index_word = wordindex(index);
 322:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 13578              		.loc 1 322 32 view .LVU4657
 13579 4b75 48C1E806 		shr	rax, 6	# index_word,
 13580              	.LVL793:
 323:sieve_extend.c ****             #pragma ivdep
 13581              		.loc 1 323 13 is_stmt 1 view .LVU4658
 13582              	.L921:
 325:sieve_extend.c ****                 mask |= markmask(index);
GAS LISTING /tmp/ccr2dACi.s 			page 366


 13583              		.loc 1 325 13 view .LVU4659
 326:sieve_extend.c ****                 index += step;
 13584              		.loc 1 326 17 view .LVU4660
 13585              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 13586              		.loc 1 326 25 is_stmt 0 view .LVU4661
 13587 4b79 C4C2C9F7 		shlx	rdi, r10, rsi	# tmp732, tmp830, index
 13587      FA
 13588              	# sieve_extend.c:327:                 index += step;
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 13589              		.loc 1 327 23 view .LVU4662
 13590 4b7e 4C01C6   		add	rsi, r8	# index, step
 13591              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 13592              		.loc 1 326 22 view .LVU4663
 13593 4b81 4809FA   		or	rdx, rdi	# mask, tmp732
 13594              	.LVL794:
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 13595              		.loc 1 327 17 is_stmt 1 view .LVU4664
 328:sieve_extend.c ****             // #pragma ivdep
 13596              		.loc 1 328 21 view .LVU4665
 13597              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 13598              		.loc 1 328 36 is_stmt 0 view .LVU4666
 13599 4b84 4889F7   		mov	rdi, rsi	# tmp734, index
 13600 4b87 48C1EF06 		shr	rdi, 6	# tmp734,
 13601              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 13602              		.loc 1 328 13 view .LVU4667
 13603 4b8b 4839F8   		cmp	rax, rdi	# index_word, tmp734
 13604 4b8e 0F85AC00 		jne	.L1315	#,
 13604      0000
 325:sieve_extend.c ****                 mask |= markmask(index);
 13605              		.loc 1 325 13 is_stmt 1 view .LVU4668
 326:sieve_extend.c ****                 index += step;
 13606              		.loc 1 326 17 view .LVU4669
 13607              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 13608              		.loc 1 326 25 is_stmt 0 view .LVU4670
 13609 4b94 C4C2C9F7 		shlx	rdi, r10, rsi	# tmp1042, tmp830, index
 13609      FA
 13610              	# sieve_extend.c:327:                 index += step;
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 13611              		.loc 1 327 23 view .LVU4671
 13612 4b99 4C01C6   		add	rsi, r8	# index, step
 13613              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 13614              		.loc 1 326 22 view .LVU4672
 13615 4b9c 4809FA   		or	rdx, rdi	# mask, tmp1042
 13616              	.LVL795:
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 13617              		.loc 1 327 17 is_stmt 1 view .LVU4673
 328:sieve_extend.c ****             // #pragma ivdep
 13618              		.loc 1 328 21 view .LVU4674
 13619              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 13620              		.loc 1 328 36 is_stmt 0 view .LVU4675
GAS LISTING /tmp/ccr2dACi.s 			page 367


 13621 4b9f 4889F7   		mov	rdi, rsi	# tmp1043, index
 13622 4ba2 48C1EF06 		shr	rdi, 6	# tmp1043,
 13623              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 13624              		.loc 1 328 13 view .LVU4676
 13625 4ba6 4839F8   		cmp	rax, rdi	# index_word, tmp1043
 13626 4ba9 0F859100 		jne	.L1315	#,
 13626      0000
 325:sieve_extend.c ****                 mask |= markmask(index);
 13627              		.loc 1 325 13 is_stmt 1 view .LVU4677
 326:sieve_extend.c ****                 index += step;
 13628              		.loc 1 326 17 view .LVU4678
 13629              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 13630              		.loc 1 326 25 is_stmt 0 view .LVU4679
 13631 4baf C4C2C9F7 		shlx	rdi, r10, rsi	# tmp1044, tmp830, index
 13631      FA
 13632              	# sieve_extend.c:327:                 index += step;
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 13633              		.loc 1 327 23 view .LVU4680
 13634 4bb4 4C01C6   		add	rsi, r8	# index, step
 13635              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 13636              		.loc 1 326 22 view .LVU4681
 13637 4bb7 4809FA   		or	rdx, rdi	# mask, tmp1044
 13638              	.LVL796:
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 13639              		.loc 1 327 17 is_stmt 1 view .LVU4682
 328:sieve_extend.c ****             // #pragma ivdep
 13640              		.loc 1 328 21 view .LVU4683
 13641              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 13642              		.loc 1 328 36 is_stmt 0 view .LVU4684
 13643 4bba 4889F7   		mov	rdi, rsi	# tmp1045, index
 13644 4bbd 48C1EF06 		shr	rdi, 6	# tmp1045,
 13645              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 13646              		.loc 1 328 13 view .LVU4685
 13647 4bc1 4839F8   		cmp	rax, rdi	# index_word, tmp1045
 13648 4bc4 757A     		jne	.L1315	#,
 325:sieve_extend.c ****                 mask |= markmask(index);
 13649              		.loc 1 325 13 is_stmt 1 view .LVU4686
 326:sieve_extend.c ****                 index += step;
 13650              		.loc 1 326 17 view .LVU4687
 13651              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 13652              		.loc 1 326 25 is_stmt 0 view .LVU4688
 13653 4bc6 C4C2C9F7 		shlx	rdi, r10, rsi	# tmp1046, tmp830, index
 13653      FA
 13654              	# sieve_extend.c:327:                 index += step;
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 13655              		.loc 1 327 23 view .LVU4689
 13656 4bcb 4C01C6   		add	rsi, r8	# index, step
 13657              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 13658              		.loc 1 326 22 view .LVU4690
 13659 4bce 4809FA   		or	rdx, rdi	# mask, tmp1046
GAS LISTING /tmp/ccr2dACi.s 			page 368


 13660              	.LVL797:
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 13661              		.loc 1 327 17 is_stmt 1 view .LVU4691
 328:sieve_extend.c ****             // #pragma ivdep
 13662              		.loc 1 328 21 view .LVU4692
 13663              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 13664              		.loc 1 328 36 is_stmt 0 view .LVU4693
 13665 4bd1 4889F7   		mov	rdi, rsi	# tmp1047, index
 13666 4bd4 48C1EF06 		shr	rdi, 6	# tmp1047,
 13667              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 13668              		.loc 1 328 13 view .LVU4694
 13669 4bd8 4839F8   		cmp	rax, rdi	# index_word, tmp1047
 13670 4bdb 7563     		jne	.L1315	#,
 325:sieve_extend.c ****                 mask |= markmask(index);
 13671              		.loc 1 325 13 is_stmt 1 view .LVU4695
 326:sieve_extend.c ****                 index += step;
 13672              		.loc 1 326 17 view .LVU4696
 13673              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 13674              		.loc 1 326 25 is_stmt 0 view .LVU4697
 13675 4bdd C4C2C9F7 		shlx	rdi, r10, rsi	# tmp1048, tmp830, index
 13675      FA
 13676              	# sieve_extend.c:327:                 index += step;
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 13677              		.loc 1 327 23 view .LVU4698
 13678 4be2 4C01C6   		add	rsi, r8	# index, step
 13679              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 13680              		.loc 1 326 22 view .LVU4699
 13681 4be5 4809FA   		or	rdx, rdi	# mask, tmp1048
 13682              	.LVL798:
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 13683              		.loc 1 327 17 is_stmt 1 view .LVU4700
 328:sieve_extend.c ****             // #pragma ivdep
 13684              		.loc 1 328 21 view .LVU4701
 13685              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 13686              		.loc 1 328 36 is_stmt 0 view .LVU4702
 13687 4be8 4889F7   		mov	rdi, rsi	# tmp1049, index
 13688 4beb 48C1EF06 		shr	rdi, 6	# tmp1049,
 13689              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 13690              		.loc 1 328 13 view .LVU4703
 13691 4bef 4839F8   		cmp	rax, rdi	# index_word, tmp1049
 13692 4bf2 754C     		jne	.L1315	#,
 325:sieve_extend.c ****                 mask |= markmask(index);
 13693              		.loc 1 325 13 is_stmt 1 view .LVU4704
 326:sieve_extend.c ****                 index += step;
 13694              		.loc 1 326 17 view .LVU4705
 13695              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 13696              		.loc 1 326 25 is_stmt 0 view .LVU4706
 13697 4bf4 C4C2C9F7 		shlx	rdi, r10, rsi	# tmp1050, tmp830, index
 13697      FA
 13698              	# sieve_extend.c:327:                 index += step;
GAS LISTING /tmp/ccr2dACi.s 			page 369


 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 13699              		.loc 1 327 23 view .LVU4707
 13700 4bf9 4C01C6   		add	rsi, r8	# index, step
 13701              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 13702              		.loc 1 326 22 view .LVU4708
 13703 4bfc 4809FA   		or	rdx, rdi	# mask, tmp1050
 13704              	.LVL799:
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 13705              		.loc 1 327 17 is_stmt 1 view .LVU4709
 328:sieve_extend.c ****             // #pragma ivdep
 13706              		.loc 1 328 21 view .LVU4710
 13707              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 13708              		.loc 1 328 36 is_stmt 0 view .LVU4711
 13709 4bff 4889F7   		mov	rdi, rsi	# tmp1051, index
 13710 4c02 48C1EF06 		shr	rdi, 6	# tmp1051,
 13711              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 13712              		.loc 1 328 13 view .LVU4712
 13713 4c06 4839F8   		cmp	rax, rdi	# index_word, tmp1051
 13714 4c09 7535     		jne	.L1315	#,
 325:sieve_extend.c ****                 mask |= markmask(index);
 13715              		.loc 1 325 13 is_stmt 1 view .LVU4713
 326:sieve_extend.c ****                 index += step;
 13716              		.loc 1 326 17 view .LVU4714
 13717              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 13718              		.loc 1 326 25 is_stmt 0 view .LVU4715
 13719 4c0b C4C2C9F7 		shlx	rdi, r10, rsi	# tmp1052, tmp830, index
 13719      FA
 13720              	# sieve_extend.c:327:                 index += step;
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 13721              		.loc 1 327 23 view .LVU4716
 13722 4c10 4C01C6   		add	rsi, r8	# index, step
 13723              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 13724              		.loc 1 326 22 view .LVU4717
 13725 4c13 4809FA   		or	rdx, rdi	# mask, tmp1052
 13726              	.LVL800:
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 13727              		.loc 1 327 17 is_stmt 1 view .LVU4718
 328:sieve_extend.c ****             // #pragma ivdep
 13728              		.loc 1 328 21 view .LVU4719
 13729              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 13730              		.loc 1 328 36 is_stmt 0 view .LVU4720
 13731 4c16 4889F7   		mov	rdi, rsi	# tmp1053, index
 13732 4c19 48C1EF06 		shr	rdi, 6	# tmp1053,
 13733              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 13734              		.loc 1 328 13 view .LVU4721
 13735 4c1d 4839F8   		cmp	rax, rdi	# index_word, tmp1053
 13736 4c20 751E     		jne	.L1315	#,
 325:sieve_extend.c ****                 mask |= markmask(index);
 13737              		.loc 1 325 13 is_stmt 1 view .LVU4722
 326:sieve_extend.c ****                 index += step;
GAS LISTING /tmp/ccr2dACi.s 			page 370


 13738              		.loc 1 326 17 view .LVU4723
 13739              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 13740              		.loc 1 326 25 is_stmt 0 view .LVU4724
 13741 4c22 C4C2C9F7 		shlx	rdi, r10, rsi	# tmp1054, tmp830, index
 13741      FA
 13742              	# sieve_extend.c:327:                 index += step;
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 13743              		.loc 1 327 23 view .LVU4725
 13744 4c27 4C01C6   		add	rsi, r8	# index, step
 13745              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 13746              		.loc 1 326 22 view .LVU4726
 13747 4c2a 4809FA   		or	rdx, rdi	# mask, tmp1054
 13748              	.LVL801:
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 13749              		.loc 1 327 17 is_stmt 1 view .LVU4727
 328:sieve_extend.c ****             // #pragma ivdep
 13750              		.loc 1 328 21 view .LVU4728
 13751              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 13752              		.loc 1 328 36 is_stmt 0 view .LVU4729
 13753 4c2d 4889F7   		mov	rdi, rsi	# tmp1055, index
 13754 4c30 48C1EF06 		shr	rdi, 6	# tmp1055,
 13755              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 13756              		.loc 1 328 13 view .LVU4730
 13757 4c34 4839F8   		cmp	rax, rdi	# index_word, tmp1055
 13758 4c37 0F843CFF 		je	.L921	#,
 13758      FFFF
 13759 4c3d 0F1F00   		.p2align 4
 13760              		.p2align 3
 13761              	.L1315:
 332:sieve_extend.c ****         }
 13762              		.loc 1 332 13 is_stmt 1 view .LVU4731
 13763              	.LVL802:
 13764              	.LBB670:
 13765              	.LBI666:
 147:sieve_extend.c **** //#if __APPLE__
 13766              		.loc 1 147 20 view .LVU4732
 13767              	.LBB668:
 175:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 13768              		.loc 1 175 4 view .LVU4733
 176:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 13769              		.loc 1 176 4 view .LVU4734
 13770              	# sieve_extend.c:176:    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(
 176:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 13771              		.loc 1 176 78 is_stmt 0 view .LVU4735
 13772 4c40 488D04C3 		lea	rax, [rbx+rax*8]	# index_ptr,
 13773              	.LVL803:
 177:sieve_extend.c **** 
 13774              		.loc 1 177 4 is_stmt 1 view .LVU4736
 181:sieve_extend.c ****        *index_ptr |= mask;
 13775              		.loc 1 181 4 view .LVU4737
 181:sieve_extend.c ****        *index_ptr |= mask;
 13776              		.loc 1 181 10 view .LVU4738
 13777 4c44 4C39D8   		cmp	rax, r11	# index_ptr, fast_loop_ptr
GAS LISTING /tmp/ccr2dACi.s 			page 371


 13778 4c47 0F830301 		jnb	.L922	#,
 13778      0000
 181:sieve_extend.c ****        *index_ptr |= mask;
 13779              		.loc 1 181 10 is_stmt 0 view .LVU4739
 13780 4c4d 4A8D3C38 		lea	rdi, [rax+r15]	# ivtmp.591,
 13781              	.L923:
 182:sieve_extend.c ****        index_ptr+=step;
 13782              		.loc 1 182 8 is_stmt 1 view .LVU4740
 13783              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 13784              		.loc 1 182 19 is_stmt 0 view .LVU4741
 13785 4c51 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_865, offset: 0B], mask
 183:sieve_extend.c ****        *index_ptr |= mask;
 13786              		.loc 1 183 8 is_stmt 1 view .LVU4742
 13787              	.LVL804:
 184:sieve_extend.c ****        index_ptr+=step;
 13788              		.loc 1 184 8 view .LVU4743
 13789              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 13790              		.loc 1 184 19 is_stmt 0 view .LVU4744
 13791 4c54 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_865, index: _543, offset: 0B], mask
 185:sieve_extend.c ****        *index_ptr |= mask;
 13792              		.loc 1 185 8 is_stmt 1 view .LVU4745
 13793              	.LVL805:
 186:sieve_extend.c ****        index_ptr+=step;
 13794              		.loc 1 186 8 view .LVU4746
 13795              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 13796              		.loc 1 186 19 is_stmt 0 view .LVU4747
 13797 4c58 480917   		or	QWORD PTR [rdi], rdx	# MEM[base: _1385, offset: 0B], mask
 187:sieve_extend.c ****        *index_ptr |= mask;
 13798              		.loc 1 187 8 is_stmt 1 view .LVU4748
 13799              	.LVL806:
 188:sieve_extend.c ****        index_ptr+=step;
 13800              		.loc 1 188 8 view .LVU4749
 13801              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 13802              		.loc 1 188 19 is_stmt 0 view .LVU4750
 13803 4c5b 4809140F 		or	QWORD PTR [rdi+rcx], rdx	# MEM[base: _1385, index: _543, offset: 0B], mask
 189:sieve_extend.c ****        *index_ptr |= mask;
 13804              		.loc 1 189 8 is_stmt 1 view .LVU4751
 13805              	.LVL807:
 190:sieve_extend.c ****        index_ptr+=step;
 13806              		.loc 1 190 8 view .LVU4752
 13807 4c5f 4C01CF   		add	rdi, r9	# ivtmp.591, tmp730
 13808              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 13809              		.loc 1 190 19 is_stmt 0 view .LVU4753
 13810 4c62 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_865, index: _543, step: 4, offset: 0B], mask
 191:sieve_extend.c ****    }
 13811              		.loc 1 191 8 is_stmt 1 view .LVU4754
 13812 4c66 4C01C8   		add	rax, r9	# index_ptr, tmp730
 13813              	.LVL808:
 181:sieve_extend.c ****        *index_ptr |= mask;
 13814              		.loc 1 181 10 view .LVU4755
 13815 4c69 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 13816 4c6c 0F86DE00 		jbe	.L922	#,
GAS LISTING /tmp/ccr2dACi.s 			page 372


 13816      0000
 182:sieve_extend.c ****        index_ptr+=step;
 13817              		.loc 1 182 8 view .LVU4756
 13818              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 13819              		.loc 1 182 19 is_stmt 0 view .LVU4757
 13820 4c72 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_865, offset: 0B], mask
 183:sieve_extend.c ****        *index_ptr |= mask;
 13821              		.loc 1 183 8 is_stmt 1 view .LVU4758
 13822              	.LVL809:
 184:sieve_extend.c ****        index_ptr+=step;
 13823              		.loc 1 184 8 view .LVU4759
 13824              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 13825              		.loc 1 184 19 is_stmt 0 view .LVU4760
 13826 4c75 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_865, index: _543, offset: 0B], mask
 185:sieve_extend.c ****        *index_ptr |= mask;
 13827              		.loc 1 185 8 is_stmt 1 view .LVU4761
 13828              	.LVL810:
 186:sieve_extend.c ****        index_ptr+=step;
 13829              		.loc 1 186 8 view .LVU4762
 13830              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 13831              		.loc 1 186 19 is_stmt 0 view .LVU4763
 13832 4c79 480917   		or	QWORD PTR [rdi], rdx	# MEM[base: _1385, offset: 0B], mask
 187:sieve_extend.c ****        *index_ptr |= mask;
 13833              		.loc 1 187 8 is_stmt 1 view .LVU4764
 13834              	.LVL811:
 188:sieve_extend.c ****        index_ptr+=step;
 13835              		.loc 1 188 8 view .LVU4765
 13836              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 13837              		.loc 1 188 19 is_stmt 0 view .LVU4766
 13838 4c7c 4809140F 		or	QWORD PTR [rdi+rcx], rdx	# MEM[base: _1385, index: _543, offset: 0B], mask
 189:sieve_extend.c ****        *index_ptr |= mask;
 13839              		.loc 1 189 8 is_stmt 1 view .LVU4767
 13840              	.LVL812:
 190:sieve_extend.c ****        index_ptr+=step;
 13841              		.loc 1 190 8 view .LVU4768
 13842 4c80 4C01CF   		add	rdi, r9	# ivtmp.591, tmp730
 13843              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 13844              		.loc 1 190 19 is_stmt 0 view .LVU4769
 13845 4c83 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_865, index: _543, step: 4, offset: 0B], mask
 191:sieve_extend.c ****    }
 13846              		.loc 1 191 8 is_stmt 1 view .LVU4770
 13847 4c87 4C01C8   		add	rax, r9	# index_ptr, tmp730
 13848              	.LVL813:
 181:sieve_extend.c ****        *index_ptr |= mask;
 13849              		.loc 1 181 10 view .LVU4771
 13850 4c8a 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 13851 4c8d 0F86BD00 		jbe	.L922	#,
 13851      0000
 182:sieve_extend.c ****        index_ptr+=step;
 13852              		.loc 1 182 8 view .LVU4772
 13853              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/ccr2dACi.s 			page 373


 13854              		.loc 1 182 19 is_stmt 0 view .LVU4773
 13855 4c93 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_865, offset: 0B], mask
 183:sieve_extend.c ****        *index_ptr |= mask;
 13856              		.loc 1 183 8 is_stmt 1 view .LVU4774
 13857              	.LVL814:
 184:sieve_extend.c ****        index_ptr+=step;
 13858              		.loc 1 184 8 view .LVU4775
 13859              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 13860              		.loc 1 184 19 is_stmt 0 view .LVU4776
 13861 4c96 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_865, index: _543, offset: 0B], mask
 185:sieve_extend.c ****        *index_ptr |= mask;
 13862              		.loc 1 185 8 is_stmt 1 view .LVU4777
 13863              	.LVL815:
 186:sieve_extend.c ****        index_ptr+=step;
 13864              		.loc 1 186 8 view .LVU4778
 13865              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 13866              		.loc 1 186 19 is_stmt 0 view .LVU4779
 13867 4c9a 480917   		or	QWORD PTR [rdi], rdx	# MEM[base: _1385, offset: 0B], mask
 187:sieve_extend.c ****        *index_ptr |= mask;
 13868              		.loc 1 187 8 is_stmt 1 view .LVU4780
 13869              	.LVL816:
 188:sieve_extend.c ****        index_ptr+=step;
 13870              		.loc 1 188 8 view .LVU4781
 13871              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 13872              		.loc 1 188 19 is_stmt 0 view .LVU4782
 13873 4c9d 4809140F 		or	QWORD PTR [rdi+rcx], rdx	# MEM[base: _1385, index: _543, offset: 0B], mask
 189:sieve_extend.c ****        *index_ptr |= mask;
 13874              		.loc 1 189 8 is_stmt 1 view .LVU4783
 13875              	.LVL817:
 190:sieve_extend.c ****        index_ptr+=step;
 13876              		.loc 1 190 8 view .LVU4784
 13877 4ca1 4C01CF   		add	rdi, r9	# ivtmp.591, tmp730
 13878              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 13879              		.loc 1 190 19 is_stmt 0 view .LVU4785
 13880 4ca4 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_865, index: _543, step: 4, offset: 0B], mask
 191:sieve_extend.c ****    }
 13881              		.loc 1 191 8 is_stmt 1 view .LVU4786
 13882 4ca8 4C01C8   		add	rax, r9	# index_ptr, tmp730
 13883              	.LVL818:
 181:sieve_extend.c ****        *index_ptr |= mask;
 13884              		.loc 1 181 10 view .LVU4787
 13885 4cab 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 13886 4cae 0F869C00 		jbe	.L922	#,
 13886      0000
 182:sieve_extend.c ****        index_ptr+=step;
 13887              		.loc 1 182 8 view .LVU4788
 13888              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 13889              		.loc 1 182 19 is_stmt 0 view .LVU4789
 13890 4cb4 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_865, offset: 0B], mask
 183:sieve_extend.c ****        *index_ptr |= mask;
 13891              		.loc 1 183 8 is_stmt 1 view .LVU4790
 13892              	.LVL819:
GAS LISTING /tmp/ccr2dACi.s 			page 374


 184:sieve_extend.c ****        index_ptr+=step;
 13893              		.loc 1 184 8 view .LVU4791
 13894              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 13895              		.loc 1 184 19 is_stmt 0 view .LVU4792
 13896 4cb7 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_865, index: _543, offset: 0B], mask
 185:sieve_extend.c ****        *index_ptr |= mask;
 13897              		.loc 1 185 8 is_stmt 1 view .LVU4793
 13898              	.LVL820:
 186:sieve_extend.c ****        index_ptr+=step;
 13899              		.loc 1 186 8 view .LVU4794
 13900              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 13901              		.loc 1 186 19 is_stmt 0 view .LVU4795
 13902 4cbb 480917   		or	QWORD PTR [rdi], rdx	# MEM[base: _1385, offset: 0B], mask
 187:sieve_extend.c ****        *index_ptr |= mask;
 13903              		.loc 1 187 8 is_stmt 1 view .LVU4796
 13904              	.LVL821:
 188:sieve_extend.c ****        index_ptr+=step;
 13905              		.loc 1 188 8 view .LVU4797
 13906              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 13907              		.loc 1 188 19 is_stmt 0 view .LVU4798
 13908 4cbe 4809140F 		or	QWORD PTR [rdi+rcx], rdx	# MEM[base: _1385, index: _543, offset: 0B], mask
 189:sieve_extend.c ****        *index_ptr |= mask;
 13909              		.loc 1 189 8 is_stmt 1 view .LVU4799
 13910              	.LVL822:
 190:sieve_extend.c ****        index_ptr+=step;
 13911              		.loc 1 190 8 view .LVU4800
 13912 4cc2 4C01CF   		add	rdi, r9	# ivtmp.591, tmp730
 13913              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 13914              		.loc 1 190 19 is_stmt 0 view .LVU4801
 13915 4cc5 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_865, index: _543, step: 4, offset: 0B], mask
 191:sieve_extend.c ****    }
 13916              		.loc 1 191 8 is_stmt 1 view .LVU4802
 13917 4cc9 4C01C8   		add	rax, r9	# index_ptr, tmp730
 13918              	.LVL823:
 181:sieve_extend.c ****        *index_ptr |= mask;
 13919              		.loc 1 181 10 view .LVU4803
 13920 4ccc 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 13921 4ccf 767F     		jbe	.L922	#,
 182:sieve_extend.c ****        index_ptr+=step;
 13922              		.loc 1 182 8 view .LVU4804
 13923              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 13924              		.loc 1 182 19 is_stmt 0 view .LVU4805
 13925 4cd1 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_865, offset: 0B], mask
 183:sieve_extend.c ****        *index_ptr |= mask;
 13926              		.loc 1 183 8 is_stmt 1 view .LVU4806
 13927              	.LVL824:
 184:sieve_extend.c ****        index_ptr+=step;
 13928              		.loc 1 184 8 view .LVU4807
 13929              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 13930              		.loc 1 184 19 is_stmt 0 view .LVU4808
 13931 4cd4 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_865, index: _543, offset: 0B], mask
GAS LISTING /tmp/ccr2dACi.s 			page 375


 185:sieve_extend.c ****        *index_ptr |= mask;
 13932              		.loc 1 185 8 is_stmt 1 view .LVU4809
 13933              	.LVL825:
 186:sieve_extend.c ****        index_ptr+=step;
 13934              		.loc 1 186 8 view .LVU4810
 13935              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 13936              		.loc 1 186 19 is_stmt 0 view .LVU4811
 13937 4cd8 480917   		or	QWORD PTR [rdi], rdx	# MEM[base: _1385, offset: 0B], mask
 187:sieve_extend.c ****        *index_ptr |= mask;
 13938              		.loc 1 187 8 is_stmt 1 view .LVU4812
 13939              	.LVL826:
 188:sieve_extend.c ****        index_ptr+=step;
 13940              		.loc 1 188 8 view .LVU4813
 13941              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 13942              		.loc 1 188 19 is_stmt 0 view .LVU4814
 13943 4cdb 4809140F 		or	QWORD PTR [rdi+rcx], rdx	# MEM[base: _1385, index: _543, offset: 0B], mask
 189:sieve_extend.c ****        *index_ptr |= mask;
 13944              		.loc 1 189 8 is_stmt 1 view .LVU4815
 13945              	.LVL827:
 190:sieve_extend.c ****        index_ptr+=step;
 13946              		.loc 1 190 8 view .LVU4816
 13947 4cdf 4C01CF   		add	rdi, r9	# ivtmp.591, tmp730
 13948              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 13949              		.loc 1 190 19 is_stmt 0 view .LVU4817
 13950 4ce2 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_865, index: _543, step: 4, offset: 0B], mask
 191:sieve_extend.c ****    }
 13951              		.loc 1 191 8 is_stmt 1 view .LVU4818
 13952 4ce6 4C01C8   		add	rax, r9	# index_ptr, tmp730
 13953              	.LVL828:
 181:sieve_extend.c ****        *index_ptr |= mask;
 13954              		.loc 1 181 10 view .LVU4819
 13955 4ce9 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 13956 4cec 7662     		jbe	.L922	#,
 182:sieve_extend.c ****        index_ptr+=step;
 13957              		.loc 1 182 8 view .LVU4820
 13958              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 13959              		.loc 1 182 19 is_stmt 0 view .LVU4821
 13960 4cee 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_865, offset: 0B], mask
 183:sieve_extend.c ****        *index_ptr |= mask;
 13961              		.loc 1 183 8 is_stmt 1 view .LVU4822
 13962              	.LVL829:
 184:sieve_extend.c ****        index_ptr+=step;
 13963              		.loc 1 184 8 view .LVU4823
 13964              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 13965              		.loc 1 184 19 is_stmt 0 view .LVU4824
 13966 4cf1 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_865, index: _543, offset: 0B], mask
 185:sieve_extend.c ****        *index_ptr |= mask;
 13967              		.loc 1 185 8 is_stmt 1 view .LVU4825
 13968              	.LVL830:
 186:sieve_extend.c ****        index_ptr+=step;
 13969              		.loc 1 186 8 view .LVU4826
 13970              	# sieve_extend.c:186:        *index_ptr |= mask;
GAS LISTING /tmp/ccr2dACi.s 			page 376


 186:sieve_extend.c ****        index_ptr+=step;
 13971              		.loc 1 186 19 is_stmt 0 view .LVU4827
 13972 4cf5 480917   		or	QWORD PTR [rdi], rdx	# MEM[base: _1385, offset: 0B], mask
 187:sieve_extend.c ****        *index_ptr |= mask;
 13973              		.loc 1 187 8 is_stmt 1 view .LVU4828
 13974              	.LVL831:
 188:sieve_extend.c ****        index_ptr+=step;
 13975              		.loc 1 188 8 view .LVU4829
 13976              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 13977              		.loc 1 188 19 is_stmt 0 view .LVU4830
 13978 4cf8 4809140F 		or	QWORD PTR [rdi+rcx], rdx	# MEM[base: _1385, index: _543, offset: 0B], mask
 189:sieve_extend.c ****        *index_ptr |= mask;
 13979              		.loc 1 189 8 is_stmt 1 view .LVU4831
 13980              	.LVL832:
 190:sieve_extend.c ****        index_ptr+=step;
 13981              		.loc 1 190 8 view .LVU4832
 13982 4cfc 4C01CF   		add	rdi, r9	# ivtmp.591, tmp730
 13983              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 13984              		.loc 1 190 19 is_stmt 0 view .LVU4833
 13985 4cff 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_865, index: _543, step: 4, offset: 0B], mask
 191:sieve_extend.c ****    }
 13986              		.loc 1 191 8 is_stmt 1 view .LVU4834
 13987 4d03 4C01C8   		add	rax, r9	# index_ptr, tmp730
 13988              	.LVL833:
 181:sieve_extend.c ****        *index_ptr |= mask;
 13989              		.loc 1 181 10 view .LVU4835
 13990 4d06 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 13991 4d09 7645     		jbe	.L922	#,
 182:sieve_extend.c ****        index_ptr+=step;
 13992              		.loc 1 182 8 view .LVU4836
 13993              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 13994              		.loc 1 182 19 is_stmt 0 view .LVU4837
 13995 4d0b 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_865, offset: 0B], mask
 183:sieve_extend.c ****        *index_ptr |= mask;
 13996              		.loc 1 183 8 is_stmt 1 view .LVU4838
 13997              	.LVL834:
 184:sieve_extend.c ****        index_ptr+=step;
 13998              		.loc 1 184 8 view .LVU4839
 13999              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 14000              		.loc 1 184 19 is_stmt 0 view .LVU4840
 14001 4d0e 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_865, index: _543, offset: 0B], mask
 185:sieve_extend.c ****        *index_ptr |= mask;
 14002              		.loc 1 185 8 is_stmt 1 view .LVU4841
 14003              	.LVL835:
 186:sieve_extend.c ****        index_ptr+=step;
 14004              		.loc 1 186 8 view .LVU4842
 14005              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 14006              		.loc 1 186 19 is_stmt 0 view .LVU4843
 14007 4d12 480917   		or	QWORD PTR [rdi], rdx	# MEM[base: _1385, offset: 0B], mask
 187:sieve_extend.c ****        *index_ptr |= mask;
 14008              		.loc 1 187 8 is_stmt 1 view .LVU4844
 14009              	.LVL836:
GAS LISTING /tmp/ccr2dACi.s 			page 377


 188:sieve_extend.c ****        index_ptr+=step;
 14010              		.loc 1 188 8 view .LVU4845
 14011              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 14012              		.loc 1 188 19 is_stmt 0 view .LVU4846
 14013 4d15 4809140F 		or	QWORD PTR [rdi+rcx], rdx	# MEM[base: _1385, index: _543, offset: 0B], mask
 189:sieve_extend.c ****        *index_ptr |= mask;
 14014              		.loc 1 189 8 is_stmt 1 view .LVU4847
 14015              	.LVL837:
 190:sieve_extend.c ****        index_ptr+=step;
 14016              		.loc 1 190 8 view .LVU4848
 14017 4d19 4C01CF   		add	rdi, r9	# ivtmp.591, tmp730
 14018              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 14019              		.loc 1 190 19 is_stmt 0 view .LVU4849
 14020 4d1c 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_865, index: _543, step: 4, offset: 0B], mask
 191:sieve_extend.c ****    }
 14021              		.loc 1 191 8 is_stmt 1 view .LVU4850
 14022 4d20 4C01C8   		add	rax, r9	# index_ptr, tmp730
 14023              	.LVL838:
 181:sieve_extend.c ****        *index_ptr |= mask;
 14024              		.loc 1 181 10 view .LVU4851
 14025 4d23 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 14026 4d26 7628     		jbe	.L922	#,
 182:sieve_extend.c ****        index_ptr+=step;
 14027              		.loc 1 182 8 view .LVU4852
 14028              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 14029              		.loc 1 182 19 is_stmt 0 view .LVU4853
 14030 4d28 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_865, offset: 0B], mask
 183:sieve_extend.c ****        *index_ptr |= mask;
 14031              		.loc 1 183 8 is_stmt 1 view .LVU4854
 14032              	.LVL839:
 184:sieve_extend.c ****        index_ptr+=step;
 14033              		.loc 1 184 8 view .LVU4855
 14034              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 14035              		.loc 1 184 19 is_stmt 0 view .LVU4856
 14036 4d2b 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_865, index: _543, offset: 0B], mask
 185:sieve_extend.c ****        *index_ptr |= mask;
 14037              		.loc 1 185 8 is_stmt 1 view .LVU4857
 14038              	.LVL840:
 186:sieve_extend.c ****        index_ptr+=step;
 14039              		.loc 1 186 8 view .LVU4858
 14040              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 14041              		.loc 1 186 19 is_stmt 0 view .LVU4859
 14042 4d2f 480917   		or	QWORD PTR [rdi], rdx	# MEM[base: _1385, offset: 0B], mask
 187:sieve_extend.c ****        *index_ptr |= mask;
 14043              		.loc 1 187 8 is_stmt 1 view .LVU4860
 14044              	.LVL841:
 188:sieve_extend.c ****        index_ptr+=step;
 14045              		.loc 1 188 8 view .LVU4861
 14046              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 14047              		.loc 1 188 19 is_stmt 0 view .LVU4862
 14048 4d32 4809140F 		or	QWORD PTR [rdi+rcx], rdx	# MEM[base: _1385, index: _543, offset: 0B], mask
GAS LISTING /tmp/ccr2dACi.s 			page 378


 189:sieve_extend.c ****        *index_ptr |= mask;
 14049              		.loc 1 189 8 is_stmt 1 view .LVU4863
 14050              	.LVL842:
 190:sieve_extend.c ****        index_ptr+=step;
 14051              		.loc 1 190 8 view .LVU4864
 14052 4d36 4C01CF   		add	rdi, r9	# ivtmp.591, tmp730
 14053              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 14054              		.loc 1 190 19 is_stmt 0 view .LVU4865
 14055 4d39 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_865, index: _543, step: 4, offset: 0B], mask
 191:sieve_extend.c ****    }
 14056              		.loc 1 191 8 is_stmt 1 view .LVU4866
 14057 4d3d 4C01C8   		add	rax, r9	# index_ptr, tmp730
 14058              	.LVL843:
 181:sieve_extend.c ****        *index_ptr |= mask;
 14059              		.loc 1 181 10 view .LVU4867
 14060 4d40 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 14061 4d43 0F8708FF 		ja	.L923	#,
 14061      FFFF
 14062 4d49 0F1F8000 		.p2align 4
 14062      000000
 14063              		.p2align 3
 14064              	.L922:
 194:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 14065              		.loc 1 194 4 view .LVU4868
 195:sieve_extend.c ****        *index_ptr |= mask;
 14066              		.loc 1 195 4 view .LVU4869
 195:sieve_extend.c ****        *index_ptr |= mask;
 14067              		.loc 1 195 10 view .LVU4870
 14068 4d50 4839E8   		cmp	rax, rbp	# index_ptr, _494
 14069 4d53 735B     		jnb	.L924	#,
 14070              	.L925:
 196:sieve_extend.c ****        index_ptr+=step;
 14071              		.loc 1 196 8 view .LVU4871
 14072              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 14073              		.loc 1 196 19 is_stmt 0 view .LVU4872
 14074 4d55 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_861, offset: 0B], mask
 197:sieve_extend.c ****    }
 14075              		.loc 1 197 8 is_stmt 1 view .LVU4873
 14076              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 14077              		.loc 1 197 17 is_stmt 0 view .LVU4874
 14078 4d58 4801C8   		add	rax, rcx	# index_ptr, _543
 14079              	.LVL844:
 195:sieve_extend.c ****        *index_ptr |= mask;
 14080              		.loc 1 195 10 is_stmt 1 view .LVU4875
 14081 4d5b 4839C5   		cmp	rbp, rax	# _494, index_ptr
 14082 4d5e 7650     		jbe	.L924	#,
 196:sieve_extend.c ****        index_ptr+=step;
 14083              		.loc 1 196 8 view .LVU4876
 14084              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 14085              		.loc 1 196 19 is_stmt 0 view .LVU4877
 14086 4d60 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_861, offset: 0B], mask
 197:sieve_extend.c ****    }
 14087              		.loc 1 197 8 is_stmt 1 view .LVU4878
GAS LISTING /tmp/ccr2dACi.s 			page 379


 14088              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 14089              		.loc 1 197 17 is_stmt 0 view .LVU4879
 14090 4d63 4801C8   		add	rax, rcx	# index_ptr, _543
 14091              	.LVL845:
 195:sieve_extend.c ****        *index_ptr |= mask;
 14092              		.loc 1 195 10 is_stmt 1 view .LVU4880
 14093 4d66 4839C5   		cmp	rbp, rax	# _494, index_ptr
 14094 4d69 7645     		jbe	.L924	#,
 196:sieve_extend.c ****        index_ptr+=step;
 14095              		.loc 1 196 8 view .LVU4881
 14096              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 14097              		.loc 1 196 19 is_stmt 0 view .LVU4882
 14098 4d6b 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_861, offset: 0B], mask
 197:sieve_extend.c ****    }
 14099              		.loc 1 197 8 is_stmt 1 view .LVU4883
 14100              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 14101              		.loc 1 197 17 is_stmt 0 view .LVU4884
 14102 4d6e 4801C8   		add	rax, rcx	# index_ptr, _543
 14103              	.LVL846:
 195:sieve_extend.c ****        *index_ptr |= mask;
 14104              		.loc 1 195 10 is_stmt 1 view .LVU4885
 14105 4d71 4839C5   		cmp	rbp, rax	# _494, index_ptr
 14106 4d74 763A     		jbe	.L924	#,
 196:sieve_extend.c ****        index_ptr+=step;
 14107              		.loc 1 196 8 view .LVU4886
 14108              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 14109              		.loc 1 196 19 is_stmt 0 view .LVU4887
 14110 4d76 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_861, offset: 0B], mask
 197:sieve_extend.c ****    }
 14111              		.loc 1 197 8 is_stmt 1 view .LVU4888
 14112              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 14113              		.loc 1 197 17 is_stmt 0 view .LVU4889
 14114 4d79 4801C8   		add	rax, rcx	# index_ptr, _543
 14115              	.LVL847:
 195:sieve_extend.c ****        *index_ptr |= mask;
 14116              		.loc 1 195 10 is_stmt 1 view .LVU4890
 14117 4d7c 4839C5   		cmp	rbp, rax	# _494, index_ptr
 14118 4d7f 762F     		jbe	.L924	#,
 196:sieve_extend.c ****        index_ptr+=step;
 14119              		.loc 1 196 8 view .LVU4891
 14120              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 14121              		.loc 1 196 19 is_stmt 0 view .LVU4892
 14122 4d81 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_861, offset: 0B], mask
 197:sieve_extend.c ****    }
 14123              		.loc 1 197 8 is_stmt 1 view .LVU4893
 14124              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 14125              		.loc 1 197 17 is_stmt 0 view .LVU4894
 14126 4d84 4801C8   		add	rax, rcx	# index_ptr, _543
 14127              	.LVL848:
 195:sieve_extend.c ****        *index_ptr |= mask;
GAS LISTING /tmp/ccr2dACi.s 			page 380


 14128              		.loc 1 195 10 is_stmt 1 view .LVU4895
 14129 4d87 4839C5   		cmp	rbp, rax	# _494, index_ptr
 14130 4d8a 7624     		jbe	.L924	#,
 196:sieve_extend.c ****        index_ptr+=step;
 14131              		.loc 1 196 8 view .LVU4896
 14132              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 14133              		.loc 1 196 19 is_stmt 0 view .LVU4897
 14134 4d8c 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_861, offset: 0B], mask
 197:sieve_extend.c ****    }
 14135              		.loc 1 197 8 is_stmt 1 view .LVU4898
 14136              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 14137              		.loc 1 197 17 is_stmt 0 view .LVU4899
 14138 4d8f 4801C8   		add	rax, rcx	# index_ptr, _543
 14139              	.LVL849:
 195:sieve_extend.c ****        *index_ptr |= mask;
 14140              		.loc 1 195 10 is_stmt 1 view .LVU4900
 14141 4d92 4839C5   		cmp	rbp, rax	# _494, index_ptr
 14142 4d95 7619     		jbe	.L924	#,
 196:sieve_extend.c ****        index_ptr+=step;
 14143              		.loc 1 196 8 view .LVU4901
 14144              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 14145              		.loc 1 196 19 is_stmt 0 view .LVU4902
 14146 4d97 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_861, offset: 0B], mask
 197:sieve_extend.c ****    }
 14147              		.loc 1 197 8 is_stmt 1 view .LVU4903
 14148              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 14149              		.loc 1 197 17 is_stmt 0 view .LVU4904
 14150 4d9a 4801C8   		add	rax, rcx	# index_ptr, _543
 14151              	.LVL850:
 195:sieve_extend.c ****        *index_ptr |= mask;
 14152              		.loc 1 195 10 is_stmt 1 view .LVU4905
 14153 4d9d 4839C5   		cmp	rbp, rax	# _494, index_ptr
 14154 4da0 760E     		jbe	.L924	#,
 196:sieve_extend.c ****        index_ptr+=step;
 14155              		.loc 1 196 8 view .LVU4906
 14156              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 14157              		.loc 1 196 19 is_stmt 0 view .LVU4907
 14158 4da2 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_861, offset: 0B], mask
 197:sieve_extend.c ****    }
 14159              		.loc 1 197 8 is_stmt 1 view .LVU4908
 14160              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 14161              		.loc 1 197 17 is_stmt 0 view .LVU4909
 14162 4da5 4801C8   		add	rax, rcx	# index_ptr, _543
 14163              	.LVL851:
 195:sieve_extend.c ****        *index_ptr |= mask;
 14164              		.loc 1 195 10 is_stmt 1 view .LVU4910
 14165 4da8 4839C5   		cmp	rbp, rax	# _494, index_ptr
 14166 4dab 77A8     		ja	.L925	#,
 14167 4dad 0F1F00   		.p2align 4
 14168              		.p2align 3
 14169              	.L924:
GAS LISTING /tmp/ccr2dACi.s 			page 381


 200:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 14170              		.loc 1 200 4 view .LVU4911
 14171              	# sieve_extend.c:200:    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range
 200:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 14172              		.loc 1 200 7 is_stmt 0 view .LVU4912
 14173 4db0 4839C5   		cmp	rbp, rax	# _494, index_ptr
 14174 4db3 0F840F01 		je	.L1468	#,
 14174      0000
 14175              	.LVL852:
 14176              	.L926:
 200:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 14177              		.loc 1 200 7 view .LVU4913
 14178              	.LBE668:
 14179              	.LBE670:
 14180              	.LBE665:
 321:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 14181              		.loc 1 321 54 is_stmt 1 view .LVU4914
 14182              	# sieve_extend.c:321:         for (register counter_t index = range_start; index <= range_stop_uniq
 321:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 14183              		.loc 1 321 9 is_stmt 0 view .LVU4915
 14184 4db9 4939F6   		cmp	r14, rsi	# tmp709, index
 14185 4dbc 0F83AEFD 		jnb	.L927	#,
 14185      FFFF
 14186              	.LVL853:
 14187              	.L918:
 321:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 14188              		.loc 1 321 9 view .LVU4916
 14189              	.LBE664:
 14190              	.LBE675:
 14191              	.LBE677:
 945:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 14192              		.loc 1 945 9 is_stmt 1 view .LVU4917
 14193              	.LBB678:
 14194              	.LBI678:
 122:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 14195              		.loc 1 122 25 view .LVU4918
 14196              	.LBB679:
 123:sieve_extend.c ****     return index;
 14197              		.loc 1 123 5 view .LVU4919
 123:sieve_extend.c ****     return index;
 14198              		.loc 1 123 11 view .LVU4920
 14199              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14200              		.loc 1 123 21 is_stmt 0 view .LVU4921
 14201 4dc2 4C89EE   		mov	rsi, r13	# tmp710, _333
 14202              	.LBE679:
 14203              	.LBE678:
 14204              	# sieve_extend.c:943:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 943:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 14205              		.loc 1 943 12 view .LVU4922
 14206 4dc5 4C89E9   		mov	rcx, r13	# index, _333
 14207              	.LBB681:
 14208              	.LBB680:
 14209              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14210              		.loc 1 123 21 view .LVU4923
 14211 4dc8 48C1EE06 		shr	rsi, 6	# tmp710,
GAS LISTING /tmp/ccr2dACi.s 			page 382


 14212              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14213              		.loc 1 123 12 view .LVU4924
 14214 4dcc 4C8B04F3 		mov	r8, QWORD PTR [rbx+rsi*8]	# *_58, *_58
 14215              	.LVL854:
 14216              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14217              		.loc 1 123 11 view .LVU4925
 14218 4dd0 4D0FA3E8 		bt	r8, r13	# *_58, _333
 14219 4dd4 0F83C600 		jnc	.L917	#,
 14219      0000
 14220              	.LVL855:
 14221              	.L916:
 123:sieve_extend.c ****     return index;
 14222              		.loc 1 123 58 is_stmt 1 view .LVU4926
 14223              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14224              		.loc 1 123 63 is_stmt 0 view .LVU4927
 14225 4dda 4C8D6901 		lea	r13, 1[rcx]	# tmp840,
 14226              	.LVL856:
 14227              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14228              		.loc 1 123 21 view .LVU4928
 14229 4dde 4D89EE   		mov	r14, r13	# tmp737, index
 14230              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14231              		.loc 1 123 63 view .LVU4929
 14232 4de1 4C89E9   		mov	rcx, r13	# index, tmp840
 123:sieve_extend.c ****     return index;
 14233              		.loc 1 123 11 is_stmt 1 view .LVU4930
 14234              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14235              		.loc 1 123 21 is_stmt 0 view .LVU4931
 14236 4de4 49C1EE06 		shr	r14, 6	# tmp737,
 14237              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14238              		.loc 1 123 12 view .LVU4932
 14239 4de8 4E8B0CF3 		mov	r9, QWORD PTR [rbx+r14*8]	# *_346, *_346
 14240              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14241              		.loc 1 123 11 view .LVU4933
 14242 4dec 4D0FA3E9 		bt	r9, r13	# *_346, index
 14243 4df0 0F83AA00 		jnc	.L917	#,
 14243      0000
 123:sieve_extend.c ****     return index;
 14244              		.loc 1 123 58 is_stmt 1 view .LVU4934
 14245              	.LVL857:
 14246              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14247              		.loc 1 123 63 is_stmt 0 view .LVU4935
 14248 4df6 4883C101 		add	rcx, 1	# index,
 14249              	.LVL858:
 123:sieve_extend.c ****     return index;
 14250              		.loc 1 123 11 is_stmt 1 view .LVU4936
 14251              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14252              		.loc 1 123 21 is_stmt 0 view .LVU4937
GAS LISTING /tmp/ccr2dACi.s 			page 383


 14253 4dfa 4889C8   		mov	rax, rcx	# tmp994, index
 14254 4dfd 48C1E806 		shr	rax, 6	# tmp994,
 14255              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14256              		.loc 1 123 12 view .LVU4938
 14257 4e01 488B3CC3 		mov	rdi, QWORD PTR [rbx+rax*8]	# *_346, *_346
 14258              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14259              		.loc 1 123 11 view .LVU4939
 14260 4e05 480FA3CF 		bt	rdi, rcx	# *_346, index
 14261 4e09 0F839100 		jnc	.L917	#,
 14261      0000
 123:sieve_extend.c ****     return index;
 14262              		.loc 1 123 58 is_stmt 1 view .LVU4940
 14263              	.LVL859:
 14264              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14265              		.loc 1 123 63 is_stmt 0 view .LVU4941
 14266 4e0f 498D4D02 		lea	rcx, 2[r13]	# index,
 14267              	.LVL860:
 123:sieve_extend.c ****     return index;
 14268              		.loc 1 123 11 is_stmt 1 view .LVU4942
 14269              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14270              		.loc 1 123 21 is_stmt 0 view .LVU4943
 14271 4e13 4989CB   		mov	r11, rcx	# tmp998, index
 14272 4e16 49C1EB06 		shr	r11, 6	# tmp998,
 14273              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14274              		.loc 1 123 12 view .LVU4944
 14275 4e1a 4E8B3CDB 		mov	r15, QWORD PTR [rbx+r11*8]	# *_346, *_346
 14276              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14277              		.loc 1 123 11 view .LVU4945
 14278 4e1e 490FA3CF 		bt	r15, rcx	# *_346, index
 14279 4e22 737C     		jnc	.L917	#,
 123:sieve_extend.c ****     return index;
 14280              		.loc 1 123 58 is_stmt 1 view .LVU4946
 14281              	.LVL861:
 14282              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14283              		.loc 1 123 63 is_stmt 0 view .LVU4947
 14284 4e24 498D4D03 		lea	rcx, 3[r13]	# index,
 14285              	.LVL862:
 123:sieve_extend.c ****     return index;
 14286              		.loc 1 123 11 is_stmt 1 view .LVU4948
 14287              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14288              		.loc 1 123 21 is_stmt 0 view .LVU4949
 14289 4e28 4889CA   		mov	rdx, rcx	# tmp1002, index
 14290 4e2b 48C1EA06 		shr	rdx, 6	# tmp1002,
 14291              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14292              		.loc 1 123 12 view .LVU4950
 14293 4e2f 488B34D3 		mov	rsi, QWORD PTR [rbx+rdx*8]	# *_346, *_346
 14294              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
GAS LISTING /tmp/ccr2dACi.s 			page 384


 14295              		.loc 1 123 11 view .LVU4951
 14296 4e33 480FA3CE 		bt	rsi, rcx	# *_346, index
 14297 4e37 7367     		jnc	.L917	#,
 123:sieve_extend.c ****     return index;
 14298              		.loc 1 123 58 is_stmt 1 view .LVU4952
 14299              	.LVL863:
 14300              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14301              		.loc 1 123 63 is_stmt 0 view .LVU4953
 14302 4e39 498D4D04 		lea	rcx, 4[r13]	# index,
 14303              	.LVL864:
 123:sieve_extend.c ****     return index;
 14304              		.loc 1 123 11 is_stmt 1 view .LVU4954
 14305              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14306              		.loc 1 123 21 is_stmt 0 view .LVU4955
 14307 4e3d 4989C8   		mov	r8, rcx	# tmp1006, index
 14308 4e40 49C1E806 		shr	r8, 6	# tmp1006,
 14309              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14310              		.loc 1 123 12 view .LVU4956
 14311 4e44 4E8B34C3 		mov	r14, QWORD PTR [rbx+r8*8]	# *_346, *_346
 14312              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14313              		.loc 1 123 11 view .LVU4957
 14314 4e48 490FA3CE 		bt	r14, rcx	# *_346, index
 14315 4e4c 7352     		jnc	.L917	#,
 123:sieve_extend.c ****     return index;
 14316              		.loc 1 123 58 is_stmt 1 view .LVU4958
 14317              	.LVL865:
 14318              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14319              		.loc 1 123 63 is_stmt 0 view .LVU4959
 14320 4e4e 498D4D05 		lea	rcx, 5[r13]	# index,
 14321              	.LVL866:
 123:sieve_extend.c ****     return index;
 14322              		.loc 1 123 11 is_stmt 1 view .LVU4960
 14323              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14324              		.loc 1 123 21 is_stmt 0 view .LVU4961
 14325 4e52 4989C9   		mov	r9, rcx	# tmp1010, index
 14326 4e55 49C1E906 		shr	r9, 6	# tmp1010,
 14327              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14328              		.loc 1 123 12 view .LVU4962
 14329 4e59 4A8B04CB 		mov	rax, QWORD PTR [rbx+r9*8]	# *_346, *_346
 14330              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14331              		.loc 1 123 11 view .LVU4963
 14332 4e5d 480FA3C8 		bt	rax, rcx	# *_346, index
 14333 4e61 733D     		jnc	.L917	#,
 123:sieve_extend.c ****     return index;
 14334              		.loc 1 123 58 is_stmt 1 view .LVU4964
 14335              	.LVL867:
 14336              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14337              		.loc 1 123 63 is_stmt 0 view .LVU4965
GAS LISTING /tmp/ccr2dACi.s 			page 385


 14338 4e63 498D4D06 		lea	rcx, 6[r13]	# index,
 14339              	.LVL868:
 123:sieve_extend.c ****     return index;
 14340              		.loc 1 123 11 is_stmt 1 view .LVU4966
 14341              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14342              		.loc 1 123 21 is_stmt 0 view .LVU4967
 14343 4e67 4889CF   		mov	rdi, rcx	# tmp1014, index
 14344 4e6a 48C1EF06 		shr	rdi, 6	# tmp1014,
 14345              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14346              		.loc 1 123 12 view .LVU4968
 14347 4e6e 4C8B1CFB 		mov	r11, QWORD PTR [rbx+rdi*8]	# *_346, *_346
 14348              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14349              		.loc 1 123 11 view .LVU4969
 14350 4e72 490FA3CB 		bt	r11, rcx	# *_346, index
 14351 4e76 7328     		jnc	.L917	#,
 123:sieve_extend.c ****     return index;
 14352              		.loc 1 123 58 is_stmt 1 view .LVU4970
 14353              	.LVL869:
 14354              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14355              		.loc 1 123 63 is_stmt 0 view .LVU4971
 14356 4e78 498D4D07 		lea	rcx, 7[r13]	# index,
 14357              	.LVL870:
 123:sieve_extend.c ****     return index;
 14358              		.loc 1 123 11 is_stmt 1 view .LVU4972
 14359              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14360              		.loc 1 123 21 is_stmt 0 view .LVU4973
 14361 4e7c 4989CD   		mov	r13, rcx	# tmp1018, index
 14362 4e7f 49C1ED06 		shr	r13, 6	# tmp1018,
 14363              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14364              		.loc 1 123 12 view .LVU4974
 14365 4e83 4E8B3CEB 		mov	r15, QWORD PTR [rbx+r13*8]	# *_346, *_346
 14366              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14367              		.loc 1 123 11 view .LVU4975
 14368 4e87 490FA3CF 		bt	r15, rcx	# *_346, index
 14369 4e8b 0F8249FF 		jc	.L916	#,
 14369      FFFF
 14370              	.LVL871:
 14371 4e91 66662E0F 		.p2align 4
 14371      1F840000 
 14371      0000000F 
 14371      1F4000
 14372              		.p2align 3
 14373              	.L917:
 124:sieve_extend.c **** }
 14374              		.loc 1 124 5 is_stmt 1 view .LVU4976
 124:sieve_extend.c **** }
 14375              		.loc 1 124 5 is_stmt 0 view .LVU4977
 14376              	.LBE680:
 14377              	.LBE681:
 946:sieve_extend.c ****     }
GAS LISTING /tmp/ccr2dACi.s 			page 386


 14378              		.loc 1 946 9 is_stmt 1 view .LVU4978
 14379              	# sieve_extend.c:946:         start = prime * prime * 2 + prime * 2;
 946:sieve_extend.c ****     }
 14380              		.loc 1 946 35 is_stmt 0 view .LVU4979
 14381 4ea0 488D7101 		lea	rsi, 1[rcx]	# _411,
 14382              	# sieve_extend.c:946:         start = prime * prime * 2 + prime * 2;
 946:sieve_extend.c ****     }
 14383              		.loc 1 946 15 view .LVU4980
 14384 4ea4 480FAFF1 		imul	rsi, rcx	# tmp743, index
 14385              	.LVL872:
 946:sieve_extend.c ****     }
 14386              		.loc 1 946 15 view .LVU4981
 14387 4ea8 4801F6   		add	rsi, rsi	# index
 14388              	.LVL873:
 940:sieve_extend.c ****         step  = prime * 2 + 1;
 14389              		.loc 1 940 11 is_stmt 1 view .LVU4982
 14390 4eab 4939F4   		cmp	r12, rsi	# block_stop, index
 14391 4eae 0F833CFC 		jnb	.L896	#,
 14391      FFFF
 940:sieve_extend.c ****         step  = prime * 2 + 1;
 14392              		.loc 1 940 11 is_stmt 0 view .LVU4983
 14393 4eb4 488B5C24 		mov	rbx, QWORD PTR 48[rsp]	# <retval>, %sfp
 14393      30
 14394              	.LVL874:
 940:sieve_extend.c ****         step  = prime * 2 + 1;
 14395              		.loc 1 940 11 view .LVU4984
 14396 4eb9 4C8B7C24 		mov	r15, QWORD PTR 24[rsp]	# block_start, %sfp
 14396      18
 14397 4ebe 488B5308 		mov	rdx, QWORD PTR 8[rbx]	# _8, sieve_92->bits
 14398 4ec2 E9D6FBFF 		jmp	.L897	#
 14398      FF
 14399              	.LVL875:
 14400              		.p2align 4,,7
 14401 4ec7 90       		.p2align 3
 14402              	.L1468:
 14403              	.LBB682:
 14404              	.LBB676:
 14405              	.LBB673:
 14406              	.LBB672:
 14407              	.LBB671:
 14408              	.LBB669:
 201:sieve_extend.c ****    }
 14409              		.loc 1 201 7 is_stmt 1 view .LVU4985
 14410              	# sieve_extend.c:201:       *index_ptr |= (mask & chopmask(range_stop));
 201:sieve_extend.c ****    }
 14411              		.loc 1 201 27 is_stmt 0 view .LVU4986
 14412 4ec8 48235424 		and	rdx, QWORD PTR 8[rsp]	# tmp736, %sfp
 14412      08
 14413              	.LVL876:
 14414              	# sieve_extend.c:201:       *index_ptr |= (mask & chopmask(range_stop));
 201:sieve_extend.c ****    }
 14415              		.loc 1 201 18 view .LVU4987
 14416 4ecd 48095500 		or	QWORD PTR 0[rbp], rdx	# *index_ptr_642, tmp736
 14417 4ed1 E9E3FEFF 		jmp	.L926	#
 14417      FF
 14418              	.LVL877:
 14419              		.p2align 4,,7
GAS LISTING /tmp/ccr2dACi.s 			page 387


 14420 4ed6 6690     		.p2align 3
 14421              	.L914:
 201:sieve_extend.c ****    }
 14422              		.loc 1 201 18 view .LVU4988
 14423              	.LBE669:
 14424              	.LBE671:
 14425              	.LBE672:
 14426              	.LBE673:
 14427              	.LBB674:
 14428              	.LBB663:
 14429              	.LBB662:
 304:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 14430              		.loc 1 304 54 is_stmt 1 view .LVU4989
 14431              	# sieve_extend.c:304:         for (register counter_t index = range_start; index <= range_stop;) {
 304:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 14432              		.loc 1 304 9 is_stmt 0 view .LVU4990
 14433 4ed8 4939F4   		cmp	r12, rsi	# block_stop, index
 14434 4edb 0F82E1FE 		jb	.L918	#,
 14434      FFFF
 14435              	.LVL878:
 14436 4ee1 66662E0F 		.p2align 4
 14436      1F840000 
 14436      0000000F 
 14436      1F4000
 14437              		.p2align 3
 14438              	.L920:
 14439              	.LBB661:
 305:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 14440              		.loc 1 305 13 is_stmt 1 view .LVU4991
 14441              	# sieve_extend.c:305:             register counter_t index_word = wordindex(index);
 305:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 14442              		.loc 1 305 32 is_stmt 0 view .LVU4992
 14443 4ef0 4989F6   		mov	r14, rsi	# index_word, index
 14444              	# sieve_extend.c:306:             register bitword_t mask = SAFE_ZERO;
 306:sieve_extend.c ****             #pragma ivdep
 14445              		.loc 1 306 32 view .LVU4993
 14446 4ef3 4531C9   		xor	r9d, r9d	# mask
 14447              	# sieve_extend.c:305:             register counter_t index_word = wordindex(index);
 305:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 14448              		.loc 1 305 32 view .LVU4994
 14449 4ef6 49C1EE06 		shr	r14, 6	# index_word,
 14450              	.LVL879:
 306:sieve_extend.c ****             #pragma ivdep
 14451              		.loc 1 306 13 is_stmt 1 view .LVU4995
 14452              	.L919:
 308:sieve_extend.c ****                 mask |= markmask(index);
 14453              		.loc 1 308 13 view .LVU4996
 309:sieve_extend.c ****                 index += step;
 14454              		.loc 1 309 17 view .LVU4997
 14455              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 14456              		.loc 1 309 25 is_stmt 0 view .LVU4998
 14457 4efa C4C2C9F7 		shlx	rcx, r10, rsi	# tmp716, tmp830, index
 14457      CA
 14458              	# sieve_extend.c:310:                 index += step;
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 14459              		.loc 1 310 23 view .LVU4999
GAS LISTING /tmp/ccr2dACi.s 			page 388


 14460 4eff 4C01C6   		add	rsi, r8	# index, step
 14461              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14462              		.loc 1 311 36 view .LVU5000
 14463 4f02 4989F3   		mov	r11, rsi	# tmp718, index
 14464              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 14465              		.loc 1 309 22 view .LVU5001
 14466 4f05 4909C9   		or	r9, rcx	# mask, tmp716
 14467              	.LVL880:
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 14468              		.loc 1 310 17 is_stmt 1 view .LVU5002
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14469              		.loc 1 311 21 view .LVU5003
 14470              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14471              		.loc 1 311 36 is_stmt 0 view .LVU5004
 14472 4f08 49C1EB06 		shr	r11, 6	# tmp718,
 14473              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14474              		.loc 1 311 13 view .LVU5005
 14475 4f0c 4D39DE   		cmp	r14, r11	# index_word, tmp718
 14476 4f0f 0F85AB00 		jne	.L1314	#,
 14476      0000
 308:sieve_extend.c ****                 mask |= markmask(index);
 14477              		.loc 1 308 13 is_stmt 1 view .LVU5006
 309:sieve_extend.c ****                 index += step;
 14478              		.loc 1 309 17 view .LVU5007
 14479              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 14480              		.loc 1 309 25 is_stmt 0 view .LVU5008
 14481 4f15 C442C9F7 		shlx	r15, r10, rsi	# tmp1022, tmp830, index
 14481      FA
 14482              	# sieve_extend.c:310:                 index += step;
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 14483              		.loc 1 310 23 view .LVU5009
 14484 4f1a 4C01C6   		add	rsi, r8	# index, step
 14485              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14486              		.loc 1 311 36 view .LVU5010
 14487 4f1d 4889F2   		mov	rdx, rsi	# tmp1023, index
 14488              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 14489              		.loc 1 309 22 view .LVU5011
 14490 4f20 4D09F9   		or	r9, r15	# mask, tmp1022
 14491              	.LVL881:
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 14492              		.loc 1 310 17 is_stmt 1 view .LVU5012
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14493              		.loc 1 311 21 view .LVU5013
 14494              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14495              		.loc 1 311 36 is_stmt 0 view .LVU5014
 14496 4f23 48C1EA06 		shr	rdx, 6	# tmp1023,
 14497              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14498              		.loc 1 311 13 view .LVU5015
GAS LISTING /tmp/ccr2dACi.s 			page 389


 14499 4f27 4939D6   		cmp	r14, rdx	# index_word, tmp1023
 14500 4f2a 0F859000 		jne	.L1314	#,
 14500      0000
 308:sieve_extend.c ****                 mask |= markmask(index);
 14501              		.loc 1 308 13 is_stmt 1 view .LVU5016
 309:sieve_extend.c ****                 index += step;
 14502              		.loc 1 309 17 view .LVU5017
 14503              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 14504              		.loc 1 309 25 is_stmt 0 view .LVU5018
 14505 4f30 C4C2C9F7 		shlx	rax, r10, rsi	# tmp1024, tmp830, index
 14505      C2
 14506              	# sieve_extend.c:310:                 index += step;
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 14507              		.loc 1 310 23 view .LVU5019
 14508 4f35 4C01C6   		add	rsi, r8	# index, step
 14509              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14510              		.loc 1 311 36 view .LVU5020
 14511 4f38 4889F7   		mov	rdi, rsi	# tmp1025, index
 14512              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 14513              		.loc 1 309 22 view .LVU5021
 14514 4f3b 4909C1   		or	r9, rax	# mask, tmp1024
 14515              	.LVL882:
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 14516              		.loc 1 310 17 is_stmt 1 view .LVU5022
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14517              		.loc 1 311 21 view .LVU5023
 14518              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14519              		.loc 1 311 36 is_stmt 0 view .LVU5024
 14520 4f3e 48C1EF06 		shr	rdi, 6	# tmp1025,
 14521              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14522              		.loc 1 311 13 view .LVU5025
 14523 4f42 4939FE   		cmp	r14, rdi	# index_word, tmp1025
 14524 4f45 7579     		jne	.L1314	#,
 308:sieve_extend.c ****                 mask |= markmask(index);
 14525              		.loc 1 308 13 is_stmt 1 view .LVU5026
 309:sieve_extend.c ****                 index += step;
 14526              		.loc 1 309 17 view .LVU5027
 14527              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 14528              		.loc 1 309 25 is_stmt 0 view .LVU5028
 14529 4f47 C4C2C9F7 		shlx	rcx, r10, rsi	# tmp1026, tmp830, index
 14529      CA
 14530              	# sieve_extend.c:310:                 index += step;
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 14531              		.loc 1 310 23 view .LVU5029
 14532 4f4c 4C01C6   		add	rsi, r8	# index, step
 14533              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14534              		.loc 1 311 36 view .LVU5030
 14535 4f4f 4989F3   		mov	r11, rsi	# tmp1027, index
 14536              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
GAS LISTING /tmp/ccr2dACi.s 			page 390


 14537              		.loc 1 309 22 view .LVU5031
 14538 4f52 4909C9   		or	r9, rcx	# mask, tmp1026
 14539              	.LVL883:
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 14540              		.loc 1 310 17 is_stmt 1 view .LVU5032
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14541              		.loc 1 311 21 view .LVU5033
 14542              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14543              		.loc 1 311 36 is_stmt 0 view .LVU5034
 14544 4f55 49C1EB06 		shr	r11, 6	# tmp1027,
 14545              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14546              		.loc 1 311 13 view .LVU5035
 14547 4f59 4D39DE   		cmp	r14, r11	# index_word, tmp1027
 14548 4f5c 7562     		jne	.L1314	#,
 308:sieve_extend.c ****                 mask |= markmask(index);
 14549              		.loc 1 308 13 is_stmt 1 view .LVU5036
 309:sieve_extend.c ****                 index += step;
 14550              		.loc 1 309 17 view .LVU5037
 14551              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 14552              		.loc 1 309 25 is_stmt 0 view .LVU5038
 14553 4f5e C442C9F7 		shlx	r15, r10, rsi	# tmp1028, tmp830, index
 14553      FA
 14554              	# sieve_extend.c:310:                 index += step;
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 14555              		.loc 1 310 23 view .LVU5039
 14556 4f63 4C01C6   		add	rsi, r8	# index, step
 14557              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14558              		.loc 1 311 36 view .LVU5040
 14559 4f66 4889F2   		mov	rdx, rsi	# tmp1029, index
 14560              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 14561              		.loc 1 309 22 view .LVU5041
 14562 4f69 4D09F9   		or	r9, r15	# mask, tmp1028
 14563              	.LVL884:
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 14564              		.loc 1 310 17 is_stmt 1 view .LVU5042
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14565              		.loc 1 311 21 view .LVU5043
 14566              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14567              		.loc 1 311 36 is_stmt 0 view .LVU5044
 14568 4f6c 48C1EA06 		shr	rdx, 6	# tmp1029,
 14569              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14570              		.loc 1 311 13 view .LVU5045
 14571 4f70 4939D6   		cmp	r14, rdx	# index_word, tmp1029
 14572 4f73 754B     		jne	.L1314	#,
 308:sieve_extend.c ****                 mask |= markmask(index);
 14573              		.loc 1 308 13 is_stmt 1 view .LVU5046
 309:sieve_extend.c ****                 index += step;
 14574              		.loc 1 309 17 view .LVU5047
 14575              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
GAS LISTING /tmp/ccr2dACi.s 			page 391


 14576              		.loc 1 309 25 is_stmt 0 view .LVU5048
 14577 4f75 C4C2C9F7 		shlx	rax, r10, rsi	# tmp1030, tmp830, index
 14577      C2
 14578              	# sieve_extend.c:310:                 index += step;
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 14579              		.loc 1 310 23 view .LVU5049
 14580 4f7a 4C01C6   		add	rsi, r8	# index, step
 14581              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14582              		.loc 1 311 36 view .LVU5050
 14583 4f7d 4889F7   		mov	rdi, rsi	# tmp1031, index
 14584              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 14585              		.loc 1 309 22 view .LVU5051
 14586 4f80 4909C1   		or	r9, rax	# mask, tmp1030
 14587              	.LVL885:
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 14588              		.loc 1 310 17 is_stmt 1 view .LVU5052
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14589              		.loc 1 311 21 view .LVU5053
 14590              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14591              		.loc 1 311 36 is_stmt 0 view .LVU5054
 14592 4f83 48C1EF06 		shr	rdi, 6	# tmp1031,
 14593              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14594              		.loc 1 311 13 view .LVU5055
 14595 4f87 4939FE   		cmp	r14, rdi	# index_word, tmp1031
 14596 4f8a 7534     		jne	.L1314	#,
 308:sieve_extend.c ****                 mask |= markmask(index);
 14597              		.loc 1 308 13 is_stmt 1 view .LVU5056
 309:sieve_extend.c ****                 index += step;
 14598              		.loc 1 309 17 view .LVU5057
 14599              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 14600              		.loc 1 309 25 is_stmt 0 view .LVU5058
 14601 4f8c C4C2C9F7 		shlx	rcx, r10, rsi	# tmp1032, tmp830, index
 14601      CA
 14602              	# sieve_extend.c:310:                 index += step;
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 14603              		.loc 1 310 23 view .LVU5059
 14604 4f91 4C01C6   		add	rsi, r8	# index, step
 14605              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14606              		.loc 1 311 36 view .LVU5060
 14607 4f94 4989F3   		mov	r11, rsi	# tmp1033, index
 14608              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 14609              		.loc 1 309 22 view .LVU5061
 14610 4f97 4909C9   		or	r9, rcx	# mask, tmp1032
 14611              	.LVL886:
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 14612              		.loc 1 310 17 is_stmt 1 view .LVU5062
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14613              		.loc 1 311 21 view .LVU5063
 14614              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
GAS LISTING /tmp/ccr2dACi.s 			page 392


 14615              		.loc 1 311 36 is_stmt 0 view .LVU5064
 14616 4f9a 49C1EB06 		shr	r11, 6	# tmp1033,
 14617              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14618              		.loc 1 311 13 view .LVU5065
 14619 4f9e 4D39DE   		cmp	r14, r11	# index_word, tmp1033
 14620 4fa1 751D     		jne	.L1314	#,
 308:sieve_extend.c ****                 mask |= markmask(index);
 14621              		.loc 1 308 13 is_stmt 1 view .LVU5066
 309:sieve_extend.c ****                 index += step;
 14622              		.loc 1 309 17 view .LVU5067
 14623              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 14624              		.loc 1 309 25 is_stmt 0 view .LVU5068
 14625 4fa3 C442C9F7 		shlx	r15, r10, rsi	# tmp1034, tmp830, index
 14625      FA
 14626              	# sieve_extend.c:310:                 index += step;
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 14627              		.loc 1 310 23 view .LVU5069
 14628 4fa8 4C01C6   		add	rsi, r8	# index, step
 14629              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14630              		.loc 1 311 36 view .LVU5070
 14631 4fab 4889F2   		mov	rdx, rsi	# tmp1035, index
 14632              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 14633              		.loc 1 309 22 view .LVU5071
 14634 4fae 4D09F9   		or	r9, r15	# mask, tmp1034
 14635              	.LVL887:
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 14636              		.loc 1 310 17 is_stmt 1 view .LVU5072
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14637              		.loc 1 311 21 view .LVU5073
 14638              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14639              		.loc 1 311 36 is_stmt 0 view .LVU5074
 14640 4fb1 48C1EA06 		shr	rdx, 6	# tmp1035,
 14641              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14642              		.loc 1 311 13 view .LVU5075
 14643 4fb5 4939D6   		cmp	r14, rdx	# index_word, tmp1035
 14644 4fb8 0F843CFF 		je	.L919	#,
 14644      FFFF
 14645 4fbe 6690     		.p2align 4
 14646              		.p2align 3
 14647              	.L1314:
 314:sieve_extend.c ****         }
 14648              		.loc 1 314 13 is_stmt 1 view .LVU5076
 14649              	# sieve_extend.c:314:             bitarray[index_word] |= mask;
 314:sieve_extend.c ****         }
 14650              		.loc 1 314 34 is_stmt 0 view .LVU5077
 14651 4fc0 4E090CF3 		or	QWORD PTR [rbx+r14*8], r9	# *_525, mask
 314:sieve_extend.c ****         }
 14652              		.loc 1 314 34 view .LVU5078
 14653              	.LBE661:
 304:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 14654              		.loc 1 304 54 is_stmt 1 view .LVU5079
GAS LISTING /tmp/ccr2dACi.s 			page 393


 14655              	# sieve_extend.c:304:         for (register counter_t index = range_start; index <= range_stop;) {
 304:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 14656              		.loc 1 304 9 is_stmt 0 view .LVU5080
 14657 4fc4 4939F4   		cmp	r12, rsi	# block_stop, index
 14658 4fc7 0F8323FF 		jnb	.L920	#,
 14658      FFFF
 304:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 14659              		.loc 1 304 9 view .LVU5081
 14660 4fcd E9F0FDFF 		jmp	.L918	#
 14660      FF
 14661              	.LVL888:
 14662              		.p2align 4,,7
 14663 4fd2 660F1F44 		.p2align 3
 14663      0000
 14664              	.L1467:
 304:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 14665              		.loc 1 304 9 view .LVU5082
 14666 4fd8 4C8B7C24 		mov	r15, QWORD PTR 24[rsp]	# block_start, %sfp
 14666      18
 304:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 14667              		.loc 1 304 9 view .LVU5083
 14668              	.LBE662:
 14669              	.LBE663:
 14670              	.LBE674:
 14671              	.LBE676:
 14672              	.LBE682:
 967:sieve_extend.c ****         step  = prime * 2 + 1;
 14673              		.loc 1 967 11 is_stmt 1 view .LVU5084
 14674 4fdd 4939F4   		cmp	r12, rsi	# block_stop, index
 14675 4fe0 0F82AEFA 		jb	.L1448	#,
 14675      FFFF
 968:sieve_extend.c ****         if unlikely(step > VECTORSTEP_FASTER) break;
 14676              		.loc 1 968 9 view .LVU5085
 14677              	# sieve_extend.c:968:         step  = prime * 2 + 1;
 968:sieve_extend.c ****         if unlikely(step > VECTORSTEP_FASTER) break;
 14678              		.loc 1 968 15 is_stmt 0 view .LVU5086
 14679 4fe6 4C8D5409 		lea	r10, 1[rcx+rcx]	# step,
 14679      01
 14680              	.LVL889:
 969:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 14681              		.loc 1 969 9 is_stmt 1 view .LVU5087
 14682              	# sieve_extend.c:969:         if unlikely(step > VECTORSTEP_FASTER) break;
 969:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 14683              		.loc 1 969 12 is_stmt 0 view .LVU5088
 14684 4feb 4C3B1500 		cmp	r10, QWORD PTR global_VECTORSTEP_FASTER[rip]	# step, global_VECTORSTEP_FASTER
 14684      000000
 14685 4ff2 0F872E01 		ja	.L1469	#,
 14685      0000
 14686 4ff8 0F1F8400 		.p2align 4
 14686      00000000 
 14687              		.p2align 3
 14688              	.L928:
 970:sieve_extend.c ****         setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
 14689              		.loc 1 970 9 is_stmt 1 view .LVU5089
 14690              	# sieve_extend.c:970:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 970:sieve_extend.c ****         setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
 14691              		.loc 1 970 12 is_stmt 0 view .LVU5090
GAS LISTING /tmp/ccr2dACi.s 			page 394


 14692 5000 4C8D7101 		lea	r14, 1[rcx]	# _363,
 14693 5004 4D39FE   		cmp	r14, r15	# _363, block_start
 14694 5007 7710     		ja	.L930	#,
 970:sieve_extend.c ****         setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
 14695              		.loc 1 970 47 is_stmt 1 view .LVU5091
 14696              	# sieve_extend.c:970:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 970:sieve_extend.c ****         setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
 14697              		.loc 1 970 67 is_stmt 0 view .LVU5092
 14698 5009 4A8D0439 		lea	rax, [rcx+r15]	# _367,
 14699              	# sieve_extend.c:970:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 970:sieve_extend.c ****         setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
 14700              		.loc 1 970 108 view .LVU5093
 14701 500d 31D2     		xor	edx, edx	# tmp747
 14702              	# sieve_extend.c:970:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 970:sieve_extend.c ****         setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
 14703              		.loc 1 970 75 view .LVU5094
 14704 500f 488D3408 		lea	rsi, [rax+rcx]	# tmp745,
 14705              	.LVL890:
 14706              	# sieve_extend.c:970:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 970:sieve_extend.c ****         setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
 14707              		.loc 1 970 108 view .LVU5095
 14708 5013 49F7F2   		div	r10	# step
 14709              	.LVL891:
 14710              	# sieve_extend.c:970:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 970:sieve_extend.c ****         setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
 14711              		.loc 1 970 53 view .LVU5096
 14712 5016 4829D6   		sub	rsi, rdx	# index, tmp747
 14713              	.LVL892:
 14714              	.L930:
 971:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1 );
 14715              		.loc 1 971 9 is_stmt 1 view .LVU5097
 14716 5019 4C89E1   		mov	rcx, r12	#, block_stop
 14717 501c 4C89D2   		mov	rdx, r10	#, step
 14718 501f 4889DF   		mov	rdi, rbx	#, _30
 14719 5022 E8E9C4FF 		call	setBitsTrue_largeRange_vector	#
 14719      FF
 14720              	.LVL893:
 972:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 14721              		.loc 1 972 9 view .LVU5098
 14722              	.LBB683:
 14723              	.LBI683:
 122:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 14724              		.loc 1 122 25 view .LVU5099
 14725              	.LBB684:
 123:sieve_extend.c ****     return index;
 14726              		.loc 1 123 5 view .LVU5100
 123:sieve_extend.c ****     return index;
 14727              		.loc 1 123 11 view .LVU5101
 14728              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14729              		.loc 1 123 21 is_stmt 0 view .LVU5102
 14730 5027 4C89F1   		mov	rcx, r14	# tmp749, _363
 14731 502a 48C1E906 		shr	rcx, 6	# tmp749,
 14732              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14733              		.loc 1 123 12 view .LVU5103
 14734 502e 488B34CB 		mov	rsi, QWORD PTR [rbx+rcx*8]	# *_272, *_272
GAS LISTING /tmp/ccr2dACi.s 			page 395


 14735              	.LBE684:
 14736              	.LBE683:
 14737              	# sieve_extend.c:970:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 970:sieve_extend.c ****         setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
 14738              		.loc 1 970 12 view .LVU5104
 14739 5032 4C89F1   		mov	rcx, r14	# index, _363
 14740              	.LBB686:
 14741              	.LBB685:
 14742              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14743              		.loc 1 123 11 view .LVU5105
 14744 5035 4C0FA3F6 		bt	rsi, r14	# *_272, _363
 14745 5039 0F83C100 		jnc	.L931	#,
 14745      0000
 14746              	.LVL894:
 14747              	.L932:
 123:sieve_extend.c ****     return index;
 14748              		.loc 1 123 58 is_stmt 1 view .LVU5106
 14749              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14750              		.loc 1 123 63 is_stmt 0 view .LVU5107
 14751 503f 4C8D4101 		lea	r8, 1[rcx]	# tmp839,
 14752              	.LVL895:
 14753              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14754              		.loc 1 123 21 view .LVU5108
 14755 5043 4D89C1   		mov	r9, r8	# tmp754, index
 14756              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14757              		.loc 1 123 63 view .LVU5109
 14758 5046 4C89C1   		mov	rcx, r8	# index, tmp839
 123:sieve_extend.c ****     return index;
 14759              		.loc 1 123 11 is_stmt 1 view .LVU5110
 14760              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14761              		.loc 1 123 21 is_stmt 0 view .LVU5111
 14762 5049 49C1E906 		shr	r9, 6	# tmp754,
 14763              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14764              		.loc 1 123 12 view .LVU5112
 14765 504d 4A8B3CCB 		mov	rdi, QWORD PTR [rbx+r9*8]	# *_376, *_376
 14766              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14767              		.loc 1 123 11 view .LVU5113
 14768 5051 4C0FA3C7 		bt	rdi, r8	# *_376, index
 14769 5055 0F83A500 		jnc	.L931	#,
 14769      0000
 123:sieve_extend.c ****     return index;
 14770              		.loc 1 123 58 is_stmt 1 view .LVU5114
 14771              	.LVL896:
 14772              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14773              		.loc 1 123 63 is_stmt 0 view .LVU5115
 14774 505b 4883C101 		add	rcx, 1	# index,
 14775              	.LVL897:
 123:sieve_extend.c ****     return index;
 14776              		.loc 1 123 11 is_stmt 1 view .LVU5116
GAS LISTING /tmp/ccr2dACi.s 			page 396


 14777              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14778              		.loc 1 123 21 is_stmt 0 view .LVU5117
 14779 505f 4989CB   		mov	r11, rcx	# tmp966, index
 14780 5062 49C1EB06 		shr	r11, 6	# tmp966,
 14781              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14782              		.loc 1 123 12 view .LVU5118
 14783 5066 4E8B2CDB 		mov	r13, QWORD PTR [rbx+r11*8]	# *_376, *_376
 14784              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14785              		.loc 1 123 11 view .LVU5119
 14786 506a 490FA3CD 		bt	r13, rcx	# *_376, index
 14787 506e 0F838C00 		jnc	.L931	#,
 14787      0000
 123:sieve_extend.c ****     return index;
 14788              		.loc 1 123 58 is_stmt 1 view .LVU5120
 14789              	.LVL898:
 14790              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14791              		.loc 1 123 63 is_stmt 0 view .LVU5121
 14792 5074 498D4802 		lea	rcx, 2[r8]	# index,
 14793              	.LVL899:
 123:sieve_extend.c ****     return index;
 14794              		.loc 1 123 11 is_stmt 1 view .LVU5122
 14795              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14796              		.loc 1 123 21 is_stmt 0 view .LVU5123
 14797 5078 4989CA   		mov	r10, rcx	# tmp970, index
 14798 507b 49C1EA06 		shr	r10, 6	# tmp970,
 14799              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14800              		.loc 1 123 12 view .LVU5124
 14801 507f 4E8B34D3 		mov	r14, QWORD PTR [rbx+r10*8]	# *_376, *_376
 14802              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14803              		.loc 1 123 11 view .LVU5125
 14804 5083 490FA3CE 		bt	r14, rcx	# *_376, index
 14805 5087 7377     		jnc	.L931	#,
 123:sieve_extend.c ****     return index;
 14806              		.loc 1 123 58 is_stmt 1 view .LVU5126
 14807              	.LVL900:
 14808              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14809              		.loc 1 123 63 is_stmt 0 view .LVU5127
 14810 5089 498D4803 		lea	rcx, 3[r8]	# index,
 14811              	.LVL901:
 123:sieve_extend.c ****     return index;
 14812              		.loc 1 123 11 is_stmt 1 view .LVU5128
 14813              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14814              		.loc 1 123 21 is_stmt 0 view .LVU5129
 14815 508d 4889C8   		mov	rax, rcx	# tmp974, index
 14816 5090 48C1E806 		shr	rax, 6	# tmp974,
 14817              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14818              		.loc 1 123 12 view .LVU5130
GAS LISTING /tmp/ccr2dACi.s 			page 397


 14819 5094 488B14C3 		mov	rdx, QWORD PTR [rbx+rax*8]	# *_376, *_376
 14820              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14821              		.loc 1 123 11 view .LVU5131
 14822 5098 480FA3CA 		bt	rdx, rcx	# *_376, index
 14823 509c 7362     		jnc	.L931	#,
 123:sieve_extend.c ****     return index;
 14824              		.loc 1 123 58 is_stmt 1 view .LVU5132
 14825              	.LVL902:
 14826              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14827              		.loc 1 123 63 is_stmt 0 view .LVU5133
 14828 509e 498D4804 		lea	rcx, 4[r8]	# index,
 14829              	.LVL903:
 123:sieve_extend.c ****     return index;
 14830              		.loc 1 123 11 is_stmt 1 view .LVU5134
 14831              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14832              		.loc 1 123 21 is_stmt 0 view .LVU5135
 14833 50a2 4889CE   		mov	rsi, rcx	# tmp978, index
 14834 50a5 48C1EE06 		shr	rsi, 6	# tmp978,
 14835              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14836              		.loc 1 123 12 view .LVU5136
 14837 50a9 4C8B0CF3 		mov	r9, QWORD PTR [rbx+rsi*8]	# *_376, *_376
 14838              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14839              		.loc 1 123 11 view .LVU5137
 14840 50ad 490FA3C9 		bt	r9, rcx	# *_376, index
 14841 50b1 734D     		jnc	.L931	#,
 123:sieve_extend.c ****     return index;
 14842              		.loc 1 123 58 is_stmt 1 view .LVU5138
 14843              	.LVL904:
 14844              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14845              		.loc 1 123 63 is_stmt 0 view .LVU5139
 14846 50b3 498D4805 		lea	rcx, 5[r8]	# index,
 14847              	.LVL905:
 123:sieve_extend.c ****     return index;
 14848              		.loc 1 123 11 is_stmt 1 view .LVU5140
 14849              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14850              		.loc 1 123 21 is_stmt 0 view .LVU5141
 14851 50b7 4889CF   		mov	rdi, rcx	# tmp982, index
 14852 50ba 48C1EF06 		shr	rdi, 6	# tmp982,
 14853              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14854              		.loc 1 123 12 view .LVU5142
 14855 50be 4C8B1CFB 		mov	r11, QWORD PTR [rbx+rdi*8]	# *_376, *_376
 14856              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14857              		.loc 1 123 11 view .LVU5143
 14858 50c2 490FA3CB 		bt	r11, rcx	# *_376, index
 14859 50c6 7338     		jnc	.L931	#,
 123:sieve_extend.c ****     return index;
 14860              		.loc 1 123 58 is_stmt 1 view .LVU5144
 14861              	.LVL906:
GAS LISTING /tmp/ccr2dACi.s 			page 398


 14862              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14863              		.loc 1 123 63 is_stmt 0 view .LVU5145
 14864 50c8 498D4806 		lea	rcx, 6[r8]	# index,
 14865              	.LVL907:
 123:sieve_extend.c ****     return index;
 14866              		.loc 1 123 11 is_stmt 1 view .LVU5146
 14867              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14868              		.loc 1 123 21 is_stmt 0 view .LVU5147
 14869 50cc 4989CD   		mov	r13, rcx	# tmp986, index
 14870 50cf 49C1ED06 		shr	r13, 6	# tmp986,
 14871              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14872              		.loc 1 123 12 view .LVU5148
 14873 50d3 4E8B14EB 		mov	r10, QWORD PTR [rbx+r13*8]	# *_376, *_376
 14874              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14875              		.loc 1 123 11 view .LVU5149
 14876 50d7 490FA3CA 		bt	r10, rcx	# *_376, index
 14877 50db 7323     		jnc	.L931	#,
 123:sieve_extend.c ****     return index;
 14878              		.loc 1 123 58 is_stmt 1 view .LVU5150
 14879              	.LVL908:
 14880              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14881              		.loc 1 123 63 is_stmt 0 view .LVU5151
 14882 50dd 498D4807 		lea	rcx, 7[r8]	# index,
 14883              	.LVL909:
 123:sieve_extend.c ****     return index;
 14884              		.loc 1 123 11 is_stmt 1 view .LVU5152
 14885              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14886              		.loc 1 123 21 is_stmt 0 view .LVU5153
 14887 50e1 4989C8   		mov	r8, rcx	# tmp990, index
 14888 50e4 49C1E806 		shr	r8, 6	# tmp990,
 14889              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14890              		.loc 1 123 12 view .LVU5154
 14891 50e8 4E8B34C3 		mov	r14, QWORD PTR [rbx+r8*8]	# *_376, *_376
 14892              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14893              		.loc 1 123 11 view .LVU5155
 14894 50ec 490FA3CE 		bt	r14, rcx	# *_376, index
 14895 50f0 0F8249FF 		jc	.L932	#,
 14895      FFFF
 14896              	.LVL910:
 14897 50f6 662E0F1F 		.p2align 4
 14897      84000000 
 14897      0000
 14898              		.p2align 3
 14899              	.L931:
 124:sieve_extend.c **** }
 14900              		.loc 1 124 5 is_stmt 1 view .LVU5156
 124:sieve_extend.c **** }
 14901              		.loc 1 124 5 is_stmt 0 view .LVU5157
 14902              	.LBE685:
GAS LISTING /tmp/ccr2dACi.s 			page 399


 14903              	.LBE686:
 973:sieve_extend.c ****     }
 14904              		.loc 1 973 9 is_stmt 1 view .LVU5158
 14905              	# sieve_extend.c:973:         start = prime * prime * 2 + prime * 2;
 973:sieve_extend.c ****     }
 14906              		.loc 1 973 35 is_stmt 0 view .LVU5159
 14907 5100 488D7101 		lea	rsi, 1[rcx]	# _411,
 14908              	# sieve_extend.c:973:         start = prime * prime * 2 + prime * 2;
 973:sieve_extend.c ****     }
 14909              		.loc 1 973 15 view .LVU5160
 14910 5104 480FAFF1 		imul	rsi, rcx	# tmp760, index
 14911              	.LVL911:
 973:sieve_extend.c ****     }
 14912              		.loc 1 973 15 view .LVU5161
 14913 5108 4801F6   		add	rsi, rsi	# index
 14914              	.LVL912:
 967:sieve_extend.c ****         step  = prime * 2 + 1;
 14915              		.loc 1 967 11 is_stmt 1 view .LVU5162
 14916 510b 4939F4   		cmp	r12, rsi	# block_stop, index
 14917 510e 0F8280F9 		jb	.L1448	#,
 14917      FFFF
 968:sieve_extend.c ****         if unlikely(step > VECTORSTEP_FASTER) break;
 14918              		.loc 1 968 9 view .LVU5163
 14919              	# sieve_extend.c:968:         step  = prime * 2 + 1;
 968:sieve_extend.c ****         if unlikely(step > VECTORSTEP_FASTER) break;
 14920              		.loc 1 968 15 is_stmt 0 view .LVU5164
 14921 5114 4C8D5409 		lea	r10, 1[rcx+rcx]	# step,
 14921      01
 14922              	.LVL913:
 969:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 14923              		.loc 1 969 9 is_stmt 1 view .LVU5165
 14924              	# sieve_extend.c:969:         if unlikely(step > VECTORSTEP_FASTER) break;
 969:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 14925              		.loc 1 969 12 is_stmt 0 view .LVU5166
 14926 5119 4C3B1500 		cmp	r10, QWORD PTR global_VECTORSTEP_FASTER[rip]	# step, global_VECTORSTEP_FASTER
 14926      000000
 14927 5120 0F86DAFE 		jbe	.L928	#,
 14927      FFFF
 14928              	.L1469:
 976:sieve_extend.c ****         step  = prime * 2 + 1;
 14929              		.loc 1 976 11 is_stmt 1 view .LVU5167
 14930 5126 4939F4   		cmp	r12, rsi	# block_stop, index
 14931 5129 0F8265F9 		jb	.L1448	#,
 14931      FFFF
 976:sieve_extend.c ****         step  = prime * 2 + 1;
 14932              		.loc 1 976 11 is_stmt 0 view .LVU5168
 14933 512f 4C8D5101 		lea	r10, 1[rcx]	# _411,
 14934              	.LVL914:
 14935 5133 66662E0F 		.p2align 4
 14935      1F840000 
 14935      00000066 
 14935      90
 14936              		.p2align 3
 14937              	.L929:
 977:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 14938              		.loc 1 977 9 is_stmt 1 view .LVU5169
 14939              	# sieve_extend.c:978:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
GAS LISTING /tmp/ccr2dACi.s 			page 400


 978:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 14940              		.loc 1 978 12 is_stmt 0 view .LVU5170
 14941 5140 4D39FA   		cmp	r10, r15	# _411, block_start
 14942              	# sieve_extend.c:977:         step  = prime * 2 + 1;
 977:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 14943              		.loc 1 977 15 view .LVU5171
 14944 5143 4C8D5C09 		lea	r11, 1[rcx+rcx]	# step,
 14944      01
 14945              	.LVL915:
 978:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 14946              		.loc 1 978 9 is_stmt 1 view .LVU5172
 14947              	# sieve_extend.c:978:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 978:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 14948              		.loc 1 978 12 is_stmt 0 view .LVU5173
 14949 5148 7710     		ja	.L933	#,
 978:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 14950              		.loc 1 978 47 is_stmt 1 view .LVU5174
 14951              	# sieve_extend.c:978:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 978:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 14952              		.loc 1 978 67 is_stmt 0 view .LVU5175
 14953 514a 4A8D0439 		lea	rax, [rcx+r15]	# _393,
 14954              	# sieve_extend.c:978:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 978:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 14955              		.loc 1 978 108 view .LVU5176
 14956 514e 31D2     		xor	edx, edx	# tmp764
 14957              	# sieve_extend.c:978:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 978:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 14958              		.loc 1 978 75 view .LVU5177
 14959 5150 488D3408 		lea	rsi, [rax+rcx]	# tmp762,
 14960              	.LVL916:
 14961              	# sieve_extend.c:978:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 978:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 14962              		.loc 1 978 108 view .LVU5178
 14963 5154 49F7F3   		div	r11	# step
 14964              	.LVL917:
 14965              	# sieve_extend.c:978:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 978:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 14966              		.loc 1 978 53 view .LVU5179
 14967 5157 4829D6   		sub	rsi, rdx	# index, tmp764
 14968              	.LVL918:
 14969              	.L933:
 979:sieve_extend.c ****         setBitsTrue_largeRange(bitarray, start, step, block_stop);
 14970              		.loc 1 979 9 is_stmt 1 view .LVU5180
 14971              	# sieve_extend.c:979:         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 979:sieve_extend.c ****         setBitsTrue_largeRange(bitarray, start, step, block_stop);
 14972              		.loc 1 979 12 is_stmt 0 view .LVU5181
 14973 515a 4D89DD   		mov	r13, r11	# tmp766, step
 14974 515d 49C1E506 		sal	r13, 6	# tmp766,
 14975 5161 4901F5   		add	r13, rsi	# _399, index
 14976 5164 4D39EC   		cmp	r12, r13	# block_stop, _399
 14977 5167 0F825302 		jb	.L934	#,
 14977      0000
 14978              	.LVL919:
 14979              	.LBB687:
 14980              	.LBB688:
 14981              	.LBB689:
 418:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
GAS LISTING /tmp/ccr2dACi.s 			page 401


 14982              		.loc 1 418 50 is_stmt 1 view .LVU5182
 14983              	# sieve_extend.c:418:     for (register counter_t index = range_start; index < range_stop_unique; i
 418:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 14984              		.loc 1 418 5 is_stmt 0 view .LVU5183
 14985 516d 4C39EE   		cmp	rsi, r13	# index, _399
 14986 5170 0F83CB01 		jnb	.L945	#,
 14986      0000
 14987              	.LBB690:
 14988              	.LBB691:
 14989              	# sieve_extend.c:177:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 177:sieve_extend.c **** 
 14990              		.loc 1 177 133 view .LVU5184
 14991 5176 488B4C24 		mov	rcx, QWORD PTR 16[rsp]	# range_stop_word, %sfp
 14991      10
 14992              	# sieve_extend.c:177:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 177:sieve_extend.c **** 
 14993              		.loc 1 177 110 view .LVU5185
 14994 517b 4F8D049B 		lea	r8, [r11+r11*4]	# tmp776,
 14995 517f 4D89DE   		mov	r14, r11	# _1406, step
 14996              	# sieve_extend.c:183:        index_ptr+=step;
 183:sieve_extend.c ****        *index_ptr |= mask;
 14997              		.loc 1 183 17 view .LVU5186
 14998 5182 4A8D14DD 		lea	rdx, 0[0+r11*8]	# _626,
 14998      00000000 
 14999              	# sieve_extend.c:177:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 177:sieve_extend.c **** 
 15000              		.loc 1 177 133 view .LVU5187
 15001 518a 4989C9   		mov	r9, rcx	# tmp778, range_stop_word
 15002 518d 4D29C1   		sub	r9, r8	# tmp778, tmp776
 15003              	# sieve_extend.c:177:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 177:sieve_extend.c **** 
 15004              		.loc 1 177 53 view .LVU5188
 15005 5190 4C39C1   		cmp	rcx, r8	# range_stop_word, tmp776
 15006 5193 4E8D0CCB 		lea	r9, [rbx+r9*8]	# tmp780,
 15007 5197 4C0F46CB 		cmovbe	r9, rbx	# _30,, fast_loop_ptr
 15008 519b 49C1E003 		sal	r8, 3	# tmp784,
 15009 519f 49C1E604 		sal	r14, 4	# _1406,
 15010 51a3 66662E0F 		.p2align 4
 15010      1F840000 
 15010      00000066 
 15010      90
 15011              		.p2align 3
 15012              	.L944:
 177:sieve_extend.c **** 
 15013              		.loc 1 177 53 view .LVU5189
 15014              	.LBE691:
 15015              	.LBE690:
 419:sieve_extend.c ****     }
 15016              		.loc 1 419 9 is_stmt 1 view .LVU5190
 15017 51b0 4889F0   		mov	rax, rsi	# tmp787, index
 15018 51b3 BF010000 		mov	edi, 1	# tmp1728,
 15018      00
 15019 51b8 48C1E806 		shr	rax, 6	# tmp787,
 15020 51bc C4E2C9F7 		shlx	rcx, rdi, rsi	# _611, tmp1728, index
 15020      CF
 15021              	.LVL920:
 15022              	.LBB694:
GAS LISTING /tmp/ccr2dACi.s 			page 402


 15023              	.LBI690:
 147:sieve_extend.c **** //#if __APPLE__
 15024              		.loc 1 147 20 view .LVU5191
 15025              	.LBB692:
 175:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 15026              		.loc 1 175 4 view .LVU5192
 176:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 15027              		.loc 1 176 4 view .LVU5193
 15028              	# sieve_extend.c:176:    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(
 176:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 15029              		.loc 1 176 78 is_stmt 0 view .LVU5194
 15030 51c1 488D04C3 		lea	rax, [rbx+rax*8]	# index_ptr,
 15031              	.LVL921:
 177:sieve_extend.c **** 
 15032              		.loc 1 177 4 is_stmt 1 view .LVU5195
 181:sieve_extend.c ****        *index_ptr |= mask;
 15033              		.loc 1 181 4 view .LVU5196
 181:sieve_extend.c ****        *index_ptr |= mask;
 15034              		.loc 1 181 10 view .LVU5197
 15035 51c5 4C39C8   		cmp	rax, r9	# index_ptr, fast_loop_ptr
 15036 51c8 0F830201 		jnb	.L939	#,
 15036      0000
 181:sieve_extend.c ****        *index_ptr |= mask;
 15037              		.loc 1 181 10 is_stmt 0 view .LVU5198
 15038 51ce 4A8D3C30 		lea	rdi, [rax+r14]	# ivtmp.551,
 15039              	.L940:
 182:sieve_extend.c ****        index_ptr+=step;
 15040              		.loc 1 182 8 is_stmt 1 view .LVU5199
 15041              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 15042              		.loc 1 182 19 is_stmt 0 view .LVU5200
 15043 51d2 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_906, offset: 0B], _611
 183:sieve_extend.c ****        *index_ptr |= mask;
 15044              		.loc 1 183 8 is_stmt 1 view .LVU5201
 15045              	.LVL922:
 184:sieve_extend.c ****        index_ptr+=step;
 15046              		.loc 1 184 8 view .LVU5202
 15047              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 15048              		.loc 1 184 19 is_stmt 0 view .LVU5203
 15049 51d5 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_906, index: _626, offset: 0B], _611
 185:sieve_extend.c ****        *index_ptr |= mask;
 15050              		.loc 1 185 8 is_stmt 1 view .LVU5204
 15051              	.LVL923:
 186:sieve_extend.c ****        index_ptr+=step;
 15052              		.loc 1 186 8 view .LVU5205
 15053              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 15054              		.loc 1 186 19 is_stmt 0 view .LVU5206
 15055 51d9 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _1412, offset: 0B], _611
 187:sieve_extend.c ****        *index_ptr |= mask;
 15056              		.loc 1 187 8 is_stmt 1 view .LVU5207
 15057              	.LVL924:
 188:sieve_extend.c ****        index_ptr+=step;
 15058              		.loc 1 188 8 view .LVU5208
 15059              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/ccr2dACi.s 			page 403


 15060              		.loc 1 188 19 is_stmt 0 view .LVU5209
 15061 51dc 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _1412, index: _626, offset: 0B], _611
 189:sieve_extend.c ****        *index_ptr |= mask;
 15062              		.loc 1 189 8 is_stmt 1 view .LVU5210
 15063              	.LVL925:
 190:sieve_extend.c ****        index_ptr+=step;
 15064              		.loc 1 190 8 view .LVU5211
 15065 51e0 4C01C7   		add	rdi, r8	# ivtmp.551, tmp784
 15066              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 15067              		.loc 1 190 19 is_stmt 0 view .LVU5212
 15068 51e3 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_906, index: _626, step: 4, offset: 0B], _611
 191:sieve_extend.c ****    }
 15069              		.loc 1 191 8 is_stmt 1 view .LVU5213
 15070 51e7 4C01C0   		add	rax, r8	# index_ptr, tmp784
 15071              	.LVL926:
 181:sieve_extend.c ****        *index_ptr |= mask;
 15072              		.loc 1 181 10 view .LVU5214
 15073 51ea 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 15074 51ed 0F86DD00 		jbe	.L939	#,
 15074      0000
 182:sieve_extend.c ****        index_ptr+=step;
 15075              		.loc 1 182 8 view .LVU5215
 15076              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 15077              		.loc 1 182 19 is_stmt 0 view .LVU5216
 15078 51f3 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_906, offset: 0B], _611
 183:sieve_extend.c ****        *index_ptr |= mask;
 15079              		.loc 1 183 8 is_stmt 1 view .LVU5217
 15080              	.LVL927:
 184:sieve_extend.c ****        index_ptr+=step;
 15081              		.loc 1 184 8 view .LVU5218
 15082              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 15083              		.loc 1 184 19 is_stmt 0 view .LVU5219
 15084 51f6 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_906, index: _626, offset: 0B], _611
 185:sieve_extend.c ****        *index_ptr |= mask;
 15085              		.loc 1 185 8 is_stmt 1 view .LVU5220
 15086              	.LVL928:
 186:sieve_extend.c ****        index_ptr+=step;
 15087              		.loc 1 186 8 view .LVU5221
 15088              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 15089              		.loc 1 186 19 is_stmt 0 view .LVU5222
 15090 51fa 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _1412, offset: 0B], _611
 187:sieve_extend.c ****        *index_ptr |= mask;
 15091              		.loc 1 187 8 is_stmt 1 view .LVU5223
 15092              	.LVL929:
 188:sieve_extend.c ****        index_ptr+=step;
 15093              		.loc 1 188 8 view .LVU5224
 15094              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 15095              		.loc 1 188 19 is_stmt 0 view .LVU5225
 15096 51fd 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _1412, index: _626, offset: 0B], _611
 189:sieve_extend.c ****        *index_ptr |= mask;
 15097              		.loc 1 189 8 is_stmt 1 view .LVU5226
 15098              	.LVL930:
GAS LISTING /tmp/ccr2dACi.s 			page 404


 190:sieve_extend.c ****        index_ptr+=step;
 15099              		.loc 1 190 8 view .LVU5227
 15100 5201 4C01C7   		add	rdi, r8	# ivtmp.551, tmp784
 15101              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 15102              		.loc 1 190 19 is_stmt 0 view .LVU5228
 15103 5204 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_906, index: _626, step: 4, offset: 0B], _611
 191:sieve_extend.c ****    }
 15104              		.loc 1 191 8 is_stmt 1 view .LVU5229
 15105 5208 4C01C0   		add	rax, r8	# index_ptr, tmp784
 15106              	.LVL931:
 181:sieve_extend.c ****        *index_ptr |= mask;
 15107              		.loc 1 181 10 view .LVU5230
 15108 520b 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 15109 520e 0F86BC00 		jbe	.L939	#,
 15109      0000
 182:sieve_extend.c ****        index_ptr+=step;
 15110              		.loc 1 182 8 view .LVU5231
 15111              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 15112              		.loc 1 182 19 is_stmt 0 view .LVU5232
 15113 5214 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_906, offset: 0B], _611
 183:sieve_extend.c ****        *index_ptr |= mask;
 15114              		.loc 1 183 8 is_stmt 1 view .LVU5233
 15115              	.LVL932:
 184:sieve_extend.c ****        index_ptr+=step;
 15116              		.loc 1 184 8 view .LVU5234
 15117              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 15118              		.loc 1 184 19 is_stmt 0 view .LVU5235
 15119 5217 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_906, index: _626, offset: 0B], _611
 185:sieve_extend.c ****        *index_ptr |= mask;
 15120              		.loc 1 185 8 is_stmt 1 view .LVU5236
 15121              	.LVL933:
 186:sieve_extend.c ****        index_ptr+=step;
 15122              		.loc 1 186 8 view .LVU5237
 15123              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 15124              		.loc 1 186 19 is_stmt 0 view .LVU5238
 15125 521b 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _1412, offset: 0B], _611
 187:sieve_extend.c ****        *index_ptr |= mask;
 15126              		.loc 1 187 8 is_stmt 1 view .LVU5239
 15127              	.LVL934:
 188:sieve_extend.c ****        index_ptr+=step;
 15128              		.loc 1 188 8 view .LVU5240
 15129              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 15130              		.loc 1 188 19 is_stmt 0 view .LVU5241
 15131 521e 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _1412, index: _626, offset: 0B], _611
 189:sieve_extend.c ****        *index_ptr |= mask;
 15132              		.loc 1 189 8 is_stmt 1 view .LVU5242
 15133              	.LVL935:
 190:sieve_extend.c ****        index_ptr+=step;
 15134              		.loc 1 190 8 view .LVU5243
 15135 5222 4C01C7   		add	rdi, r8	# ivtmp.551, tmp784
 15136              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/ccr2dACi.s 			page 405


 15137              		.loc 1 190 19 is_stmt 0 view .LVU5244
 15138 5225 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_906, index: _626, step: 4, offset: 0B], _611
 191:sieve_extend.c ****    }
 15139              		.loc 1 191 8 is_stmt 1 view .LVU5245
 15140 5229 4C01C0   		add	rax, r8	# index_ptr, tmp784
 15141              	.LVL936:
 181:sieve_extend.c ****        *index_ptr |= mask;
 15142              		.loc 1 181 10 view .LVU5246
 15143 522c 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 15144 522f 0F869B00 		jbe	.L939	#,
 15144      0000
 182:sieve_extend.c ****        index_ptr+=step;
 15145              		.loc 1 182 8 view .LVU5247
 15146              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 15147              		.loc 1 182 19 is_stmt 0 view .LVU5248
 15148 5235 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_906, offset: 0B], _611
 183:sieve_extend.c ****        *index_ptr |= mask;
 15149              		.loc 1 183 8 is_stmt 1 view .LVU5249
 15150              	.LVL937:
 184:sieve_extend.c ****        index_ptr+=step;
 15151              		.loc 1 184 8 view .LVU5250
 15152              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 15153              		.loc 1 184 19 is_stmt 0 view .LVU5251
 15154 5238 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_906, index: _626, offset: 0B], _611
 185:sieve_extend.c ****        *index_ptr |= mask;
 15155              		.loc 1 185 8 is_stmt 1 view .LVU5252
 15156              	.LVL938:
 186:sieve_extend.c ****        index_ptr+=step;
 15157              		.loc 1 186 8 view .LVU5253
 15158              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 15159              		.loc 1 186 19 is_stmt 0 view .LVU5254
 15160 523c 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _1412, offset: 0B], _611
 187:sieve_extend.c ****        *index_ptr |= mask;
 15161              		.loc 1 187 8 is_stmt 1 view .LVU5255
 15162              	.LVL939:
 188:sieve_extend.c ****        index_ptr+=step;
 15163              		.loc 1 188 8 view .LVU5256
 15164              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 15165              		.loc 1 188 19 is_stmt 0 view .LVU5257
 15166 523f 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _1412, index: _626, offset: 0B], _611
 189:sieve_extend.c ****        *index_ptr |= mask;
 15167              		.loc 1 189 8 is_stmt 1 view .LVU5258
 15168              	.LVL940:
 190:sieve_extend.c ****        index_ptr+=step;
 15169              		.loc 1 190 8 view .LVU5259
 15170 5243 4C01C7   		add	rdi, r8	# ivtmp.551, tmp784
 15171              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 15172              		.loc 1 190 19 is_stmt 0 view .LVU5260
 15173 5246 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_906, index: _626, step: 4, offset: 0B], _611
 191:sieve_extend.c ****    }
 15174              		.loc 1 191 8 is_stmt 1 view .LVU5261
 15175 524a 4C01C0   		add	rax, r8	# index_ptr, tmp784
GAS LISTING /tmp/ccr2dACi.s 			page 406


 15176              	.LVL941:
 181:sieve_extend.c ****        *index_ptr |= mask;
 15177              		.loc 1 181 10 view .LVU5262
 15178 524d 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 15179 5250 767E     		jbe	.L939	#,
 182:sieve_extend.c ****        index_ptr+=step;
 15180              		.loc 1 182 8 view .LVU5263
 15181              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 15182              		.loc 1 182 19 is_stmt 0 view .LVU5264
 15183 5252 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_906, offset: 0B], _611
 183:sieve_extend.c ****        *index_ptr |= mask;
 15184              		.loc 1 183 8 is_stmt 1 view .LVU5265
 15185              	.LVL942:
 184:sieve_extend.c ****        index_ptr+=step;
 15186              		.loc 1 184 8 view .LVU5266
 15187              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 15188              		.loc 1 184 19 is_stmt 0 view .LVU5267
 15189 5255 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_906, index: _626, offset: 0B], _611
 185:sieve_extend.c ****        *index_ptr |= mask;
 15190              		.loc 1 185 8 is_stmt 1 view .LVU5268
 15191              	.LVL943:
 186:sieve_extend.c ****        index_ptr+=step;
 15192              		.loc 1 186 8 view .LVU5269
 15193              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 15194              		.loc 1 186 19 is_stmt 0 view .LVU5270
 15195 5259 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _1412, offset: 0B], _611
 187:sieve_extend.c ****        *index_ptr |= mask;
 15196              		.loc 1 187 8 is_stmt 1 view .LVU5271
 15197              	.LVL944:
 188:sieve_extend.c ****        index_ptr+=step;
 15198              		.loc 1 188 8 view .LVU5272
 15199              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 15200              		.loc 1 188 19 is_stmt 0 view .LVU5273
 15201 525c 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _1412, index: _626, offset: 0B], _611
 189:sieve_extend.c ****        *index_ptr |= mask;
 15202              		.loc 1 189 8 is_stmt 1 view .LVU5274
 15203              	.LVL945:
 190:sieve_extend.c ****        index_ptr+=step;
 15204              		.loc 1 190 8 view .LVU5275
 15205 5260 4C01C7   		add	rdi, r8	# ivtmp.551, tmp784
 15206              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 15207              		.loc 1 190 19 is_stmt 0 view .LVU5276
 15208 5263 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_906, index: _626, step: 4, offset: 0B], _611
 191:sieve_extend.c ****    }
 15209              		.loc 1 191 8 is_stmt 1 view .LVU5277
 15210 5267 4C01C0   		add	rax, r8	# index_ptr, tmp784
 15211              	.LVL946:
 181:sieve_extend.c ****        *index_ptr |= mask;
 15212              		.loc 1 181 10 view .LVU5278
 15213 526a 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 15214 526d 7661     		jbe	.L939	#,
 182:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/ccr2dACi.s 			page 407


 15215              		.loc 1 182 8 view .LVU5279
 15216              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 15217              		.loc 1 182 19 is_stmt 0 view .LVU5280
 15218 526f 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_906, offset: 0B], _611
 183:sieve_extend.c ****        *index_ptr |= mask;
 15219              		.loc 1 183 8 is_stmt 1 view .LVU5281
 15220              	.LVL947:
 184:sieve_extend.c ****        index_ptr+=step;
 15221              		.loc 1 184 8 view .LVU5282
 15222              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 15223              		.loc 1 184 19 is_stmt 0 view .LVU5283
 15224 5272 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_906, index: _626, offset: 0B], _611
 185:sieve_extend.c ****        *index_ptr |= mask;
 15225              		.loc 1 185 8 is_stmt 1 view .LVU5284
 15226              	.LVL948:
 186:sieve_extend.c ****        index_ptr+=step;
 15227              		.loc 1 186 8 view .LVU5285
 15228              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 15229              		.loc 1 186 19 is_stmt 0 view .LVU5286
 15230 5276 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _1412, offset: 0B], _611
 187:sieve_extend.c ****        *index_ptr |= mask;
 15231              		.loc 1 187 8 is_stmt 1 view .LVU5287
 15232              	.LVL949:
 188:sieve_extend.c ****        index_ptr+=step;
 15233              		.loc 1 188 8 view .LVU5288
 15234              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 15235              		.loc 1 188 19 is_stmt 0 view .LVU5289
 15236 5279 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _1412, index: _626, offset: 0B], _611
 189:sieve_extend.c ****        *index_ptr |= mask;
 15237              		.loc 1 189 8 is_stmt 1 view .LVU5290
 15238              	.LVL950:
 190:sieve_extend.c ****        index_ptr+=step;
 15239              		.loc 1 190 8 view .LVU5291
 15240 527d 4C01C7   		add	rdi, r8	# ivtmp.551, tmp784
 15241              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 15242              		.loc 1 190 19 is_stmt 0 view .LVU5292
 15243 5280 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_906, index: _626, step: 4, offset: 0B], _611
 191:sieve_extend.c ****    }
 15244              		.loc 1 191 8 is_stmt 1 view .LVU5293
 15245 5284 4C01C0   		add	rax, r8	# index_ptr, tmp784
 15246              	.LVL951:
 181:sieve_extend.c ****        *index_ptr |= mask;
 15247              		.loc 1 181 10 view .LVU5294
 15248 5287 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 15249 528a 7644     		jbe	.L939	#,
 182:sieve_extend.c ****        index_ptr+=step;
 15250              		.loc 1 182 8 view .LVU5295
 15251              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 15252              		.loc 1 182 19 is_stmt 0 view .LVU5296
 15253 528c 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_906, offset: 0B], _611
 183:sieve_extend.c ****        *index_ptr |= mask;
GAS LISTING /tmp/ccr2dACi.s 			page 408


 15254              		.loc 1 183 8 is_stmt 1 view .LVU5297
 15255              	.LVL952:
 184:sieve_extend.c ****        index_ptr+=step;
 15256              		.loc 1 184 8 view .LVU5298
 15257              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 15258              		.loc 1 184 19 is_stmt 0 view .LVU5299
 15259 528f 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_906, index: _626, offset: 0B], _611
 185:sieve_extend.c ****        *index_ptr |= mask;
 15260              		.loc 1 185 8 is_stmt 1 view .LVU5300
 15261              	.LVL953:
 186:sieve_extend.c ****        index_ptr+=step;
 15262              		.loc 1 186 8 view .LVU5301
 15263              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 15264              		.loc 1 186 19 is_stmt 0 view .LVU5302
 15265 5293 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _1412, offset: 0B], _611
 187:sieve_extend.c ****        *index_ptr |= mask;
 15266              		.loc 1 187 8 is_stmt 1 view .LVU5303
 15267              	.LVL954:
 188:sieve_extend.c ****        index_ptr+=step;
 15268              		.loc 1 188 8 view .LVU5304
 15269              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 15270              		.loc 1 188 19 is_stmt 0 view .LVU5305
 15271 5296 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _1412, index: _626, offset: 0B], _611
 189:sieve_extend.c ****        *index_ptr |= mask;
 15272              		.loc 1 189 8 is_stmt 1 view .LVU5306
 15273              	.LVL955:
 190:sieve_extend.c ****        index_ptr+=step;
 15274              		.loc 1 190 8 view .LVU5307
 15275 529a 4C01C7   		add	rdi, r8	# ivtmp.551, tmp784
 15276              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 15277              		.loc 1 190 19 is_stmt 0 view .LVU5308
 15278 529d 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_906, index: _626, step: 4, offset: 0B], _611
 191:sieve_extend.c ****    }
 15279              		.loc 1 191 8 is_stmt 1 view .LVU5309
 15280 52a1 4C01C0   		add	rax, r8	# index_ptr, tmp784
 15281              	.LVL956:
 181:sieve_extend.c ****        *index_ptr |= mask;
 15282              		.loc 1 181 10 view .LVU5310
 15283 52a4 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 15284 52a7 7627     		jbe	.L939	#,
 182:sieve_extend.c ****        index_ptr+=step;
 15285              		.loc 1 182 8 view .LVU5311
 15286              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 15287              		.loc 1 182 19 is_stmt 0 view .LVU5312
 15288 52a9 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_906, offset: 0B], _611
 183:sieve_extend.c ****        *index_ptr |= mask;
 15289              		.loc 1 183 8 is_stmt 1 view .LVU5313
 15290              	.LVL957:
 184:sieve_extend.c ****        index_ptr+=step;
 15291              		.loc 1 184 8 view .LVU5314
 15292              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/ccr2dACi.s 			page 409


 15293              		.loc 1 184 19 is_stmt 0 view .LVU5315
 15294 52ac 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_906, index: _626, offset: 0B], _611
 185:sieve_extend.c ****        *index_ptr |= mask;
 15295              		.loc 1 185 8 is_stmt 1 view .LVU5316
 15296              	.LVL958:
 186:sieve_extend.c ****        index_ptr+=step;
 15297              		.loc 1 186 8 view .LVU5317
 15298              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 15299              		.loc 1 186 19 is_stmt 0 view .LVU5318
 15300 52b0 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _1412, offset: 0B], _611
 187:sieve_extend.c ****        *index_ptr |= mask;
 15301              		.loc 1 187 8 is_stmt 1 view .LVU5319
 15302              	.LVL959:
 188:sieve_extend.c ****        index_ptr+=step;
 15303              		.loc 1 188 8 view .LVU5320
 15304              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 15305              		.loc 1 188 19 is_stmt 0 view .LVU5321
 15306 52b3 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _1412, index: _626, offset: 0B], _611
 189:sieve_extend.c ****        *index_ptr |= mask;
 15307              		.loc 1 189 8 is_stmt 1 view .LVU5322
 15308              	.LVL960:
 190:sieve_extend.c ****        index_ptr+=step;
 15309              		.loc 1 190 8 view .LVU5323
 15310 52b7 4C01C7   		add	rdi, r8	# ivtmp.551, tmp784
 15311              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 15312              		.loc 1 190 19 is_stmt 0 view .LVU5324
 15313 52ba 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_906, index: _626, step: 4, offset: 0B], _611
 191:sieve_extend.c ****    }
 15314              		.loc 1 191 8 is_stmt 1 view .LVU5325
 15315 52be 4C01C0   		add	rax, r8	# index_ptr, tmp784
 15316              	.LVL961:
 181:sieve_extend.c ****        *index_ptr |= mask;
 15317              		.loc 1 181 10 view .LVU5326
 15318 52c1 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 15319 52c4 0F8708FF 		ja	.L940	#,
 15319      FFFF
 15320 52ca 660F1F44 		.p2align 4
 15320      0000
 15321              		.p2align 3
 15322              	.L939:
 194:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 15323              		.loc 1 194 4 view .LVU5327
 195:sieve_extend.c ****        *index_ptr |= mask;
 15324              		.loc 1 195 4 view .LVU5328
 195:sieve_extend.c ****        *index_ptr |= mask;
 15325              		.loc 1 195 10 view .LVU5329
 15326 52d0 4839C5   		cmp	rbp, rax	# _494, index_ptr
 15327 52d3 765B     		jbe	.L941	#,
 15328              	.L942:
 196:sieve_extend.c ****        index_ptr+=step;
 15329              		.loc 1 196 8 view .LVU5330
 15330              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 15331              		.loc 1 196 19 is_stmt 0 view .LVU5331
GAS LISTING /tmp/ccr2dACi.s 			page 410


 15332 52d5 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_897, offset: 0B], _611
 197:sieve_extend.c ****    }
 15333              		.loc 1 197 8 is_stmt 1 view .LVU5332
 15334              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 15335              		.loc 1 197 17 is_stmt 0 view .LVU5333
 15336 52d8 4801D0   		add	rax, rdx	# index_ptr, _626
 15337              	.LVL962:
 195:sieve_extend.c ****        *index_ptr |= mask;
 15338              		.loc 1 195 10 is_stmt 1 view .LVU5334
 15339 52db 4839C5   		cmp	rbp, rax	# _494, index_ptr
 15340 52de 7650     		jbe	.L941	#,
 196:sieve_extend.c ****        index_ptr+=step;
 15341              		.loc 1 196 8 view .LVU5335
 15342              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 15343              		.loc 1 196 19 is_stmt 0 view .LVU5336
 15344 52e0 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_897, offset: 0B], _611
 197:sieve_extend.c ****    }
 15345              		.loc 1 197 8 is_stmt 1 view .LVU5337
 15346              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 15347              		.loc 1 197 17 is_stmt 0 view .LVU5338
 15348 52e3 4801D0   		add	rax, rdx	# index_ptr, _626
 15349              	.LVL963:
 195:sieve_extend.c ****        *index_ptr |= mask;
 15350              		.loc 1 195 10 is_stmt 1 view .LVU5339
 15351 52e6 4839C5   		cmp	rbp, rax	# _494, index_ptr
 15352 52e9 7645     		jbe	.L941	#,
 196:sieve_extend.c ****        index_ptr+=step;
 15353              		.loc 1 196 8 view .LVU5340
 15354              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 15355              		.loc 1 196 19 is_stmt 0 view .LVU5341
 15356 52eb 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_897, offset: 0B], _611
 197:sieve_extend.c ****    }
 15357              		.loc 1 197 8 is_stmt 1 view .LVU5342
 15358              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 15359              		.loc 1 197 17 is_stmt 0 view .LVU5343
 15360 52ee 4801D0   		add	rax, rdx	# index_ptr, _626
 15361              	.LVL964:
 195:sieve_extend.c ****        *index_ptr |= mask;
 15362              		.loc 1 195 10 is_stmt 1 view .LVU5344
 15363 52f1 4839C5   		cmp	rbp, rax	# _494, index_ptr
 15364 52f4 763A     		jbe	.L941	#,
 196:sieve_extend.c ****        index_ptr+=step;
 15365              		.loc 1 196 8 view .LVU5345
 15366              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 15367              		.loc 1 196 19 is_stmt 0 view .LVU5346
 15368 52f6 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_897, offset: 0B], _611
 197:sieve_extend.c ****    }
 15369              		.loc 1 197 8 is_stmt 1 view .LVU5347
 15370              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 15371              		.loc 1 197 17 is_stmt 0 view .LVU5348
GAS LISTING /tmp/ccr2dACi.s 			page 411


 15372 52f9 4801D0   		add	rax, rdx	# index_ptr, _626
 15373              	.LVL965:
 195:sieve_extend.c ****        *index_ptr |= mask;
 15374              		.loc 1 195 10 is_stmt 1 view .LVU5349
 15375 52fc 4839C5   		cmp	rbp, rax	# _494, index_ptr
 15376 52ff 762F     		jbe	.L941	#,
 196:sieve_extend.c ****        index_ptr+=step;
 15377              		.loc 1 196 8 view .LVU5350
 15378              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 15379              		.loc 1 196 19 is_stmt 0 view .LVU5351
 15380 5301 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_897, offset: 0B], _611
 197:sieve_extend.c ****    }
 15381              		.loc 1 197 8 is_stmt 1 view .LVU5352
 15382              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 15383              		.loc 1 197 17 is_stmt 0 view .LVU5353
 15384 5304 4801D0   		add	rax, rdx	# index_ptr, _626
 15385              	.LVL966:
 195:sieve_extend.c ****        *index_ptr |= mask;
 15386              		.loc 1 195 10 is_stmt 1 view .LVU5354
 15387 5307 4839C5   		cmp	rbp, rax	# _494, index_ptr
 15388 530a 7624     		jbe	.L941	#,
 196:sieve_extend.c ****        index_ptr+=step;
 15389              		.loc 1 196 8 view .LVU5355
 15390              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 15391              		.loc 1 196 19 is_stmt 0 view .LVU5356
 15392 530c 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_897, offset: 0B], _611
 197:sieve_extend.c ****    }
 15393              		.loc 1 197 8 is_stmt 1 view .LVU5357
 15394              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 15395              		.loc 1 197 17 is_stmt 0 view .LVU5358
 15396 530f 4801D0   		add	rax, rdx	# index_ptr, _626
 15397              	.LVL967:
 195:sieve_extend.c ****        *index_ptr |= mask;
 15398              		.loc 1 195 10 is_stmt 1 view .LVU5359
 15399 5312 4839C5   		cmp	rbp, rax	# _494, index_ptr
 15400 5315 7619     		jbe	.L941	#,
 196:sieve_extend.c ****        index_ptr+=step;
 15401              		.loc 1 196 8 view .LVU5360
 15402              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 15403              		.loc 1 196 19 is_stmt 0 view .LVU5361
 15404 5317 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_897, offset: 0B], _611
 197:sieve_extend.c ****    }
 15405              		.loc 1 197 8 is_stmt 1 view .LVU5362
 15406              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 15407              		.loc 1 197 17 is_stmt 0 view .LVU5363
 15408 531a 4801D0   		add	rax, rdx	# index_ptr, _626
 15409              	.LVL968:
 195:sieve_extend.c ****        *index_ptr |= mask;
 15410              		.loc 1 195 10 is_stmt 1 view .LVU5364
 15411 531d 4839C5   		cmp	rbp, rax	# _494, index_ptr
 15412 5320 760E     		jbe	.L941	#,
GAS LISTING /tmp/ccr2dACi.s 			page 412


 196:sieve_extend.c ****        index_ptr+=step;
 15413              		.loc 1 196 8 view .LVU5365
 15414              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 15415              		.loc 1 196 19 is_stmt 0 view .LVU5366
 15416 5322 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_897, offset: 0B], _611
 197:sieve_extend.c ****    }
 15417              		.loc 1 197 8 is_stmt 1 view .LVU5367
 15418              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 15419              		.loc 1 197 17 is_stmt 0 view .LVU5368
 15420 5325 4801D0   		add	rax, rdx	# index_ptr, _626
 15421              	.LVL969:
 195:sieve_extend.c ****        *index_ptr |= mask;
 15422              		.loc 1 195 10 is_stmt 1 view .LVU5369
 15423 5328 4839C5   		cmp	rbp, rax	# _494, index_ptr
 15424 532b 77A8     		ja	.L942	#,
 15425 532d 0F1F00   		.p2align 4
 15426              		.p2align 3
 15427              	.L941:
 200:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 15428              		.loc 1 200 4 view .LVU5370
 15429              	# sieve_extend.c:200:    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range
 200:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 15430              		.loc 1 200 7 is_stmt 0 view .LVU5371
 15431 5330 4839C5   		cmp	rbp, rax	# _494, index_ptr
 15432 5333 7463     		je	.L1470	#,
 15433              	.LVL970:
 15434              	.L943:
 200:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 15435              		.loc 1 200 7 view .LVU5372
 15436              	.LBE692:
 15437              	.LBE694:
 418:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 15438              		.loc 1 418 77 is_stmt 1 view .LVU5373
 15439              	# sieve_extend.c:418:     for (register counter_t index = range_start; index < range_stop_unique; i
 418:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 15440              		.loc 1 418 83 is_stmt 0 view .LVU5374
 15441 5335 4C01DE   		add	rsi, r11	# index, step
 15442              	.LVL971:
 418:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 15443              		.loc 1 418 50 is_stmt 1 view .LVU5375
 15444              	# sieve_extend.c:418:     for (register counter_t index = range_start; index < range_stop_unique; i
 418:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 15445              		.loc 1 418 5 is_stmt 0 view .LVU5376
 15446 5338 4939F5   		cmp	r13, rsi	# _399, index
 15447 533b 0F876FFE 		ja	.L944	#,
 15447      FFFF
 15448              	.L945:
 15449              	.LVL972:
 418:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 15450              		.loc 1 418 5 view .LVU5377
 15451              	.LBE689:
 15452              	.LBE688:
 15453              	.LBE687:
 981:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 15454              		.loc 1 981 9 is_stmt 1 view .LVU5378
GAS LISTING /tmp/ccr2dACi.s 			page 413


 15455              	.LBB698:
 15456              	.LBI698:
 128:sieve_extend.c ****     // return searchBitFalse(bitarray, index);
 15457              		.loc 1 128 25 view .LVU5379
 15458              	.LBB699:
 131:sieve_extend.c ****    bitshift_t index_bit  = bitindex_calc(index);
 15459              		.loc 1 131 4 view .LVU5380
 132:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 15460              		.loc 1 132 4 view .LVU5381
 15461              	# sieve_extend.c:131:    register counter_t index_word = wordindex(index);
 131:sieve_extend.c ****    bitshift_t index_bit  = bitindex_calc(index);
 15462              		.loc 1 131 23 is_stmt 0 view .LVU5382
 15463 5341 4D89D5   		mov	r13, r10	# index_word, _411
 15464              	# sieve_extend.c:132:    bitshift_t index_bit  = bitindex_calc(index);
 132:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 15465              		.loc 1 132 15 view .LVU5383
 15466 5344 4D89D3   		mov	r11, r10	# index_bit, _411
 15467              	.LVL973:
 15468              	# sieve_extend.c:131:    register counter_t index_word = wordindex(index);
 131:sieve_extend.c ****    bitshift_t index_bit  = bitindex_calc(index);
 15469              		.loc 1 131 23 view .LVU5384
 15470 5347 49C1ED06 		shr	r13, 6	# index_word,
 15471              	# sieve_extend.c:132:    bitshift_t index_bit  = bitindex_calc(index);
 132:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 15472              		.loc 1 132 15 view .LVU5385
 15473 534b 4183E33F 		and	r11d, 63	# index_bit,
 15474              	.LVL974:
 133:sieve_extend.c ****    index += distance;
 15475              		.loc 1 133 4 is_stmt 1 view .LVU5386
 15476              	# sieve_extend.c:133:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 133:sieve_extend.c ****    index += distance;
 15477              		.loc 1 133 89 is_stmt 0 view .LVU5387
 15478 534f 4E8B04EB 		mov	r8, QWORD PTR [rbx+r13*8]	# *_582, *_582
 15479 5353 C4C2A3F7 		shrx	rdx, r8, r11	# tmp769, *_582, index_bit
 15479      D0
 15480              	# sieve_extend.c:133:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 133:sieve_extend.c ****    index += distance;
 15481              		.loc 1 133 66 view .LVU5388
 15482 5358 48F7D2   		not	rdx	# tmp771
 15483              	# sieve_extend.c:133:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 133:sieve_extend.c ****    index += distance;
 15484              		.loc 1 133 76 view .LVU5389
 15485 535b 4A8D34ED 		lea	rsi, 0[0+r13*8]	# _581,
 15485      00000000 
 15486              	.LVL975:
 15487              	# sieve_extend.c:133:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 133:sieve_extend.c ****    index += distance;
 15488              		.loc 1 133 25 view .LVU5390
 15489 5363 F34C0FBC 		tzcnt	r9, rdx	# distance, tmp771
 15489      CA
 15490              	.LVL976:
 134:sieve_extend.c ****    distance += index_bit;
 15491              		.loc 1 134 4 is_stmt 1 view .LVU5391
 15492              	# sieve_extend.c:134:    index += distance;
 134:sieve_extend.c ****    distance += index_bit;
 15493              		.loc 1 134 10 is_stmt 0 view .LVU5392
 15494 5368 4B8D0C0A 		lea	rcx, [r10+r9]	# index,
GAS LISTING /tmp/ccr2dACi.s 			page 414


 15495              	.LVL977:
 135:sieve_extend.c **** 
 15496              		.loc 1 135 4 is_stmt 1 view .LVU5393
 137:sieve_extend.c ****        index_word++;
 15497              		.loc 1 137 4 view .LVU5394
 137:sieve_extend.c ****        index_word++;
 15498              		.loc 1 137 10 view .LVU5395
 15499              	# sieve_extend.c:135:    distance += index_bit;
 135:sieve_extend.c **** 
 15500              		.loc 1 135 13 is_stmt 0 view .LVU5396
 15501 536c 4D01D9   		add	r9, r11	# distance, index_bit
 15502              	.LVL978:
 15503              	# sieve_extend.c:137:    while unlikely(distance == WORD_SIZE_bitshift) { // to prevent a bug from 
 137:sieve_extend.c ****        index_word++;
 15504              		.loc 1 137 10 view .LVU5397
 15505 536f 4983F940 		cmp	r9, 64	# distance,
 15506 5373 7433     		je	.L1471	#,
 15507              	.LVL979:
 15508              	.L1312:
 143:sieve_extend.c **** }
 15509              		.loc 1 143 4 is_stmt 1 view .LVU5398
 143:sieve_extend.c **** }
 15510              		.loc 1 143 4 is_stmt 0 view .LVU5399
 15511              	.LBE699:
 15512              	.LBE698:
 982:sieve_extend.c ****     }
 15513              		.loc 1 982 9 is_stmt 1 view .LVU5400
 15514              	# sieve_extend.c:982:         start = prime * prime * 2 + prime * 2;
 982:sieve_extend.c ****     }
 15515              		.loc 1 982 35 is_stmt 0 view .LVU5401
 15516 5375 4C8D5101 		lea	r10, 1[rcx]	# _411,
 15517              	# sieve_extend.c:982:         start = prime * prime * 2 + prime * 2;
 982:sieve_extend.c ****     }
 15518              		.loc 1 982 15 view .LVU5402
 15519 5379 4C89D6   		mov	rsi, r10	# tmp797, _411
 15520 537c 480FAFF1 		imul	rsi, rcx	# tmp797, index
 15521              	.LVL980:
 982:sieve_extend.c ****     }
 15522              		.loc 1 982 15 view .LVU5403
 15523 5380 4801F6   		add	rsi, rsi	# index
 15524              	.LVL981:
 976:sieve_extend.c ****         step  = prime * 2 + 1;
 15525              		.loc 1 976 11 is_stmt 1 view .LVU5404
 15526 5383 4939F4   		cmp	r12, rsi	# block_stop, index
 15527 5386 0F83B4FD 		jnb	.L929	#,
 15527      FFFF
 976:sieve_extend.c ****         step  = prime * 2 + 1;
 15528              		.loc 1 976 11 is_stmt 0 view .LVU5405
 15529 538c E903F7FF 		jmp	.L1448	#
 15529      FF
 15530              	.LVL982:
 15531              		.p2align 4,,7
 15532 5391 0F1F8000 		.p2align 3
 15532      000000
 15533              	.L1470:
 15534              	.LBB701:
 15535              	.LBB697:
GAS LISTING /tmp/ccr2dACi.s 			page 415


 15536              	.LBB696:
 15537              	.LBB695:
 15538              	.LBB693:
 201:sieve_extend.c ****    }
 15539              		.loc 1 201 7 is_stmt 1 view .LVU5406
 15540              	# sieve_extend.c:201:       *index_ptr |= (mask & chopmask(range_stop));
 201:sieve_extend.c ****    }
 15541              		.loc 1 201 27 is_stmt 0 view .LVU5407
 15542 5398 48234C24 		and	rcx, QWORD PTR 8[rsp]	# tmp789, %sfp
 15542      08
 15543              	.LVL983:
 15544              	# sieve_extend.c:201:       *index_ptr |= (mask & chopmask(range_stop));
 201:sieve_extend.c ****    }
 15545              		.loc 1 201 18 view .LVU5408
 15546 539d 48094D00 		or	QWORD PTR 0[rbp], rcx	# *index_ptr_902, tmp789
 15547 53a1 EB92     		jmp	.L943	#
 15548              	.LVL984:
 15549              		.p2align 4,,7
 15550 53a3 0F1F4400 		.p2align 3
 15550      00
 15551              	.L1471:
 201:sieve_extend.c ****    }
 15552              		.loc 1 201 18 view .LVU5409
 15553              	.LBE693:
 15554              	.LBE695:
 15555              	.LBE696:
 15556              	.LBE697:
 15557              	.LBE701:
 15558              	.LBB702:
 15559              	.LBB700:
 138:sieve_extend.c ****        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 15560              		.loc 1 138 8 is_stmt 1 view .LVU5410
 139:sieve_extend.c ****        index += distance;
 15561              		.loc 1 139 8 view .LVU5411
 15562              	# sieve_extend.c:139:        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 139:sieve_extend.c ****        index += distance;
 15563              		.loc 1 139 48 is_stmt 0 view .LVU5412
 15564 53a8 4C8B5433 		mov	r10, QWORD PTR 8[rbx+rsi]	# *_594, *_594
 15564      08
 15565 53ad 49F7D2   		not	r10	# tmp790
 15566              	.LVL985:
 140:sieve_extend.c ****    }
 15567              		.loc 1 140 8 is_stmt 1 view .LVU5413
 15568              	# sieve_extend.c:139:        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 139:sieve_extend.c ****        index += distance;
 15569              		.loc 1 139 17 is_stmt 0 view .LVU5414
 15570 53b0 F34D0FBC 		tzcnt	r14, r10	# distance, tmp790
 15570      F2
 15571              	.LVL986:
 15572              	# sieve_extend.c:140:        index += distance;
 140:sieve_extend.c ****    }
 15573              		.loc 1 140 14 view .LVU5415
 15574 53b5 4C01F1   		add	rcx, r14	# index, distance
 15575              	.LVL987:
 137:sieve_extend.c ****        index_word++;
 15576              		.loc 1 137 10 is_stmt 1 view .LVU5416
 143:sieve_extend.c **** }
GAS LISTING /tmp/ccr2dACi.s 			page 416


 15577              		.loc 1 143 4 view .LVU5417
 143:sieve_extend.c **** }
 15578              		.loc 1 143 4 is_stmt 0 view .LVU5418
 15579              	.LBE700:
 15580              	.LBE702:
 982:sieve_extend.c ****     }
 15581              		.loc 1 982 9 is_stmt 1 view .LVU5419
 15582 53b8 EBBB     		jmp	.L1312	#
 15583              	.LVL988:
 15584 53ba 660F1F44 		.p2align 4,,7
 15584      0000
 15585              		.p2align 3
 15586              	.L934:
 985:sieve_extend.c ****         step  = prime * 2 + 1;
 15587              		.loc 1 985 11 view .LVU5420
 15588 53c0 4939F4   		cmp	r12, rsi	# block_stop, index
 15589              	.LBB703:
 15590              	.LBB704:
 15591              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 15592              		.loc 1 344 39 is_stmt 0 view .LVU5421
 15593 53c3 BD010000 		mov	ebp, 1	# tmp827,
 15593      00
 15594              	.LBE704:
 15595              	.LBE703:
 15596              	# sieve_extend.c:985:     while (start <= block_stop) {
 985:sieve_extend.c ****         step  = prime * 2 + 1;
 15597              		.loc 1 985 11 view .LVU5422
 15598 53c8 0F82C6F6 		jb	.L1448	#,
 15598      FFFF
 15599              	.LVL989:
 15600              	.L938:
 986:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 15601              		.loc 1 986 9 is_stmt 1 view .LVU5423
 15602              	# sieve_extend.c:987:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 987:sieve_extend.c ****         if likely(start <= block_stop)
 15603              		.loc 1 987 12 is_stmt 0 view .LVU5424
 15604 53ce 4D39FA   		cmp	r10, r15	# _411, block_start
 15605              	# sieve_extend.c:986:         step  = prime * 2 + 1;
 986:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 15606              		.loc 1 986 15 view .LVU5425
 15607 53d1 488D7C09 		lea	rdi, 1[rcx+rcx]	# step,
 15607      01
 15608              	.LVL990:
 987:sieve_extend.c ****         if likely(start <= block_stop)
 15609              		.loc 1 987 9 is_stmt 1 view .LVU5426
 15610              	# sieve_extend.c:987:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 987:sieve_extend.c ****         if likely(start <= block_stop)
 15611              		.loc 1 987 12 is_stmt 0 view .LVU5427
 15612 53d6 0F874C01 		ja	.L947	#,
 15612      0000
 15613 53dc 0F1F4000 		.p2align 4
 15614              		.p2align 3
 15615              	.L1473:
 987:sieve_extend.c ****         if likely(start <= block_stop)
 15616              		.loc 1 987 47 is_stmt 1 view .LVU5428
 15617              	# sieve_extend.c:987:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
GAS LISTING /tmp/ccr2dACi.s 			page 417


 987:sieve_extend.c ****         if likely(start <= block_stop)
 15618              		.loc 1 987 67 is_stmt 0 view .LVU5429
 15619 53e0 4A8D0439 		lea	rax, [rcx+r15]	# _415,
 15620              	# sieve_extend.c:987:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 987:sieve_extend.c ****         if likely(start <= block_stop)
 15621              		.loc 1 987 108 view .LVU5430
 15622 53e4 31D2     		xor	edx, edx	# tmp801
 15623              	# sieve_extend.c:987:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 987:sieve_extend.c ****         if likely(start <= block_stop)
 15624              		.loc 1 987 75 view .LVU5431
 15625 53e6 488D3408 		lea	rsi, [rax+rcx]	# tmp799,
 15626              	# sieve_extend.c:987:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 987:sieve_extend.c ****         if likely(start <= block_stop)
 15627              		.loc 1 987 108 view .LVU5432
 15628 53ea 48F7F7   		div	rdi	# step
 15629              	.LVL991:
 15630              	# sieve_extend.c:987:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 987:sieve_extend.c ****         if likely(start <= block_stop)
 15631              		.loc 1 987 53 view .LVU5433
 15632 53ed 4829D6   		sub	rsi, rdx	# index, tmp801
 15633              	.LVL992:
 988:sieve_extend.c ****             setBitsTrue_largeSteps(bitarray, start, step, block_stop);
 15634              		.loc 1 988 9 is_stmt 1 view .LVU5434
 15635              	# sieve_extend.c:988:         if likely(start <= block_stop)
 988:sieve_extend.c ****             setBitsTrue_largeSteps(bitarray, start, step, block_stop);
 15636              		.loc 1 988 12 is_stmt 0 view .LVU5435
 15637 53f0 4939F4   		cmp	r12, rsi	# block_stop, index
 15638 53f3 0F82D700 		jb	.L952	#,
 15638      0000
 15639              	.LVL993:
 15640              	.L951:
 15641              	.LBB707:
 15642              	.LBB705:
 344:sieve_extend.c ****     }
 15643              		.loc 1 344 9 is_stmt 1 view .LVU5436
 15644              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 15645              		.loc 1 344 36 is_stmt 0 view .LVU5437
 15646 53f9 4889F1   		mov	rcx, rsi	# tmp810, index
 15647              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 15648              		.loc 1 344 39 view .LVU5438
 15649 53fc C462C9F7 		shlx	r11, rbp, rsi	# tmp813, tmp827, index
 15649      DD
 15650              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 15651              		.loc 1 344 36 view .LVU5439
 15652 5401 48C1E906 		shr	rcx, 6	# tmp810,
 15653              	# sieve_extend.c:343:     for (counter_t index = range_start; index <= range_stop; index += step) {
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15654              		.loc 1 343 68 view .LVU5440
 15655 5405 4801FE   		add	rsi, rdi	# index, step
 15656              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 15657              		.loc 1 344 36 view .LVU5441
 15658 5408 4C091CCB 		or	QWORD PTR [rbx+rcx*8], r11	# *_426, tmp813
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
GAS LISTING /tmp/ccr2dACi.s 			page 418


 15659              		.loc 1 343 62 is_stmt 1 view .LVU5442
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15660              		.loc 1 343 41 view .LVU5443
 15661              	# sieve_extend.c:343:     for (counter_t index = range_start; index <= range_stop; index += step) {
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15662              		.loc 1 343 5 is_stmt 0 view .LVU5444
 15663 540c 4939F4   		cmp	r12, rsi	# block_stop, index
 15664 540f 0F82BB00 		jb	.L952	#,
 15664      0000
 344:sieve_extend.c ****     }
 15665              		.loc 1 344 9 is_stmt 1 view .LVU5445
 15666              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 15667              		.loc 1 344 36 is_stmt 0 view .LVU5446
 15668 5415 4989F5   		mov	r13, rsi	# tmp926, index
 15669              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 15670              		.loc 1 344 39 view .LVU5447
 15671 5418 C462C9F7 		shlx	r8, rbp, rsi	# tmp929, tmp827, index
 15671      C5
 15672              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 15673              		.loc 1 344 36 view .LVU5448
 15674 541d 49C1ED06 		shr	r13, 6	# tmp926,
 15675              	# sieve_extend.c:343:     for (counter_t index = range_start; index <= range_stop; index += step) {
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15676              		.loc 1 343 68 view .LVU5449
 15677 5421 4801FE   		add	rsi, rdi	# index, step
 15678              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 15679              		.loc 1 344 36 view .LVU5450
 15680 5424 4E0904EB 		or	QWORD PTR [rbx+r13*8], r8	# *_426, tmp929
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15681              		.loc 1 343 62 is_stmt 1 view .LVU5451
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15682              		.loc 1 343 41 view .LVU5452
 15683              	# sieve_extend.c:343:     for (counter_t index = range_start; index <= range_stop; index += step) {
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15684              		.loc 1 343 5 is_stmt 0 view .LVU5453
 15685 5428 4939F4   		cmp	r12, rsi	# block_stop, index
 15686 542b 0F829F00 		jb	.L952	#,
 15686      0000
 344:sieve_extend.c ****     }
 15687              		.loc 1 344 9 is_stmt 1 view .LVU5454
 15688              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 15689              		.loc 1 344 36 is_stmt 0 view .LVU5455
 15690 5431 4989F1   		mov	r9, rsi	# tmp931, index
 15691              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 15692              		.loc 1 344 39 view .LVU5456
 15693 5434 C462C9F7 		shlx	r14, rbp, rsi	# tmp934, tmp827, index
 15693      F5
 15694              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 15695              		.loc 1 344 36 view .LVU5457
 15696 5439 49C1E906 		shr	r9, 6	# tmp931,
GAS LISTING /tmp/ccr2dACi.s 			page 419


 15697              	# sieve_extend.c:343:     for (counter_t index = range_start; index <= range_stop; index += step) {
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15698              		.loc 1 343 68 view .LVU5458
 15699 543d 4801FE   		add	rsi, rdi	# index, step
 15700              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 15701              		.loc 1 344 36 view .LVU5459
 15702 5440 4E0934CB 		or	QWORD PTR [rbx+r9*8], r14	# *_426, tmp934
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15703              		.loc 1 343 62 is_stmt 1 view .LVU5460
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15704              		.loc 1 343 41 view .LVU5461
 15705              	# sieve_extend.c:343:     for (counter_t index = range_start; index <= range_stop; index += step) {
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15706              		.loc 1 343 5 is_stmt 0 view .LVU5462
 15707 5444 4939F4   		cmp	r12, rsi	# block_stop, index
 15708 5447 0F828300 		jb	.L952	#,
 15708      0000
 344:sieve_extend.c ****     }
 15709              		.loc 1 344 9 is_stmt 1 view .LVU5463
 15710              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 15711              		.loc 1 344 36 is_stmt 0 view .LVU5464
 15712 544d 4889F0   		mov	rax, rsi	# tmp936, index
 15713              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 15714              		.loc 1 344 39 view .LVU5465
 15715 5450 C4E2C9F7 		shlx	rdx, rbp, rsi	# tmp939, tmp827, index
 15715      D5
 15716              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 15717              		.loc 1 344 36 view .LVU5466
 15718 5455 48C1E806 		shr	rax, 6	# tmp936,
 15719              	# sieve_extend.c:343:     for (counter_t index = range_start; index <= range_stop; index += step) {
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15720              		.loc 1 343 68 view .LVU5467
 15721 5459 4801FE   		add	rsi, rdi	# index, step
 15722              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 15723              		.loc 1 344 36 view .LVU5468
 15724 545c 480914C3 		or	QWORD PTR [rbx+rax*8], rdx	# *_426, tmp939
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15725              		.loc 1 343 62 is_stmt 1 view .LVU5469
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15726              		.loc 1 343 41 view .LVU5470
 15727              	# sieve_extend.c:343:     for (counter_t index = range_start; index <= range_stop; index += step) {
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15728              		.loc 1 343 5 is_stmt 0 view .LVU5471
 15729 5460 4939F4   		cmp	r12, rsi	# block_stop, index
 15730 5463 726B     		jb	.L952	#,
 344:sieve_extend.c ****     }
 15731              		.loc 1 344 9 is_stmt 1 view .LVU5472
 15732              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 15733              		.loc 1 344 36 is_stmt 0 view .LVU5473
 15734 5465 4889F1   		mov	rcx, rsi	# tmp941, index
 15735              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
GAS LISTING /tmp/ccr2dACi.s 			page 420


 344:sieve_extend.c ****     }
 15736              		.loc 1 344 39 view .LVU5474
 15737 5468 C462C9F7 		shlx	r11, rbp, rsi	# tmp944, tmp827, index
 15737      DD
 15738              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 15739              		.loc 1 344 36 view .LVU5475
 15740 546d 48C1E906 		shr	rcx, 6	# tmp941,
 15741              	# sieve_extend.c:343:     for (counter_t index = range_start; index <= range_stop; index += step) {
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15742              		.loc 1 343 68 view .LVU5476
 15743 5471 4801FE   		add	rsi, rdi	# index, step
 15744              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 15745              		.loc 1 344 36 view .LVU5477
 15746 5474 4C091CCB 		or	QWORD PTR [rbx+rcx*8], r11	# *_426, tmp944
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15747              		.loc 1 343 62 is_stmt 1 view .LVU5478
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15748              		.loc 1 343 41 view .LVU5479
 15749              	# sieve_extend.c:343:     for (counter_t index = range_start; index <= range_stop; index += step) {
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15750              		.loc 1 343 5 is_stmt 0 view .LVU5480
 15751 5478 4939F4   		cmp	r12, rsi	# block_stop, index
 15752 547b 7253     		jb	.L952	#,
 344:sieve_extend.c ****     }
 15753              		.loc 1 344 9 is_stmt 1 view .LVU5481
 15754              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 15755              		.loc 1 344 36 is_stmt 0 view .LVU5482
 15756 547d 4989F5   		mov	r13, rsi	# tmp946, index
 15757              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 15758              		.loc 1 344 39 view .LVU5483
 15759 5480 C462C9F7 		shlx	r8, rbp, rsi	# tmp949, tmp827, index
 15759      C5
 15760              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 15761              		.loc 1 344 36 view .LVU5484
 15762 5485 49C1ED06 		shr	r13, 6	# tmp946,
 15763              	# sieve_extend.c:343:     for (counter_t index = range_start; index <= range_stop; index += step) {
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15764              		.loc 1 343 68 view .LVU5485
 15765 5489 4801FE   		add	rsi, rdi	# index, step
 15766              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 15767              		.loc 1 344 36 view .LVU5486
 15768 548c 4E0904EB 		or	QWORD PTR [rbx+r13*8], r8	# *_426, tmp949
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15769              		.loc 1 343 62 is_stmt 1 view .LVU5487
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15770              		.loc 1 343 41 view .LVU5488
 15771              	# sieve_extend.c:343:     for (counter_t index = range_start; index <= range_stop; index += step) {
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15772              		.loc 1 343 5 is_stmt 0 view .LVU5489
 15773 5490 4939F4   		cmp	r12, rsi	# block_stop, index
 15774 5493 723B     		jb	.L952	#,
GAS LISTING /tmp/ccr2dACi.s 			page 421


 344:sieve_extend.c ****     }
 15775              		.loc 1 344 9 is_stmt 1 view .LVU5490
 15776              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 15777              		.loc 1 344 36 is_stmt 0 view .LVU5491
 15778 5495 4989F1   		mov	r9, rsi	# tmp951, index
 15779              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 15780              		.loc 1 344 39 view .LVU5492
 15781 5498 C462C9F7 		shlx	r14, rbp, rsi	# tmp954, tmp827, index
 15781      F5
 15782              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 15783              		.loc 1 344 36 view .LVU5493
 15784 549d 49C1E906 		shr	r9, 6	# tmp951,
 15785              	# sieve_extend.c:343:     for (counter_t index = range_start; index <= range_stop; index += step) {
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15786              		.loc 1 343 68 view .LVU5494
 15787 54a1 4801FE   		add	rsi, rdi	# index, step
 15788              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 15789              		.loc 1 344 36 view .LVU5495
 15790 54a4 4E0934CB 		or	QWORD PTR [rbx+r9*8], r14	# *_426, tmp954
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15791              		.loc 1 343 62 is_stmt 1 view .LVU5496
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15792              		.loc 1 343 41 view .LVU5497
 15793              	# sieve_extend.c:343:     for (counter_t index = range_start; index <= range_stop; index += step) {
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15794              		.loc 1 343 5 is_stmt 0 view .LVU5498
 15795 54a8 4939F4   		cmp	r12, rsi	# block_stop, index
 15796 54ab 7223     		jb	.L952	#,
 344:sieve_extend.c ****     }
 15797              		.loc 1 344 9 is_stmt 1 view .LVU5499
 15798              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 15799              		.loc 1 344 36 is_stmt 0 view .LVU5500
 15800 54ad 4889F0   		mov	rax, rsi	# tmp956, index
 15801              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 15802              		.loc 1 344 39 view .LVU5501
 15803 54b0 C4E2C9F7 		shlx	rdx, rbp, rsi	# tmp959, tmp827, index
 15803      D5
 15804              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 15805              		.loc 1 344 36 view .LVU5502
 15806 54b5 48C1E806 		shr	rax, 6	# tmp956,
 15807              	# sieve_extend.c:343:     for (counter_t index = range_start; index <= range_stop; index += step) {
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15808              		.loc 1 343 68 view .LVU5503
 15809 54b9 4801FE   		add	rsi, rdi	# index, step
 15810              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 15811              		.loc 1 344 36 view .LVU5504
 15812 54bc 480914C3 		or	QWORD PTR [rbx+rax*8], rdx	# *_426, tmp959
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15813              		.loc 1 343 62 is_stmt 1 view .LVU5505
GAS LISTING /tmp/ccr2dACi.s 			page 422


 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15814              		.loc 1 343 41 view .LVU5506
 15815              	# sieve_extend.c:343:     for (counter_t index = range_start; index <= range_stop; index += step) {
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15816              		.loc 1 343 5 is_stmt 0 view .LVU5507
 15817 54c0 4939F4   		cmp	r12, rsi	# block_stop, index
 15818 54c3 0F8330FF 		jnb	.L951	#,
 15818      FFFF
 15819 54c9 0F1F8000 		.p2align 4
 15819      000000
 15820              		.p2align 3
 15821              	.L952:
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15822              		.loc 1 343 5 view .LVU5508
 15823              	.LBE705:
 15824              	.LBE707:
 990:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 15825              		.loc 1 990 9 is_stmt 1 view .LVU5509
 15826              	.LVL994:
 15827              	.LBB708:
 15828              	.LBI708:
 128:sieve_extend.c ****     // return searchBitFalse(bitarray, index);
 15829              		.loc 1 128 25 view .LVU5510
 15830              	.LBB709:
 131:sieve_extend.c ****    bitshift_t index_bit  = bitindex_calc(index);
 15831              		.loc 1 131 4 view .LVU5511
 132:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 15832              		.loc 1 132 4 view .LVU5512
 15833              	# sieve_extend.c:131:    register counter_t index_word = wordindex(index);
 131:sieve_extend.c ****    bitshift_t index_bit  = bitindex_calc(index);
 15834              		.loc 1 131 23 is_stmt 0 view .LVU5513
 15835 54d0 4C89D1   		mov	rcx, r10	# index_word, _411
 15836              	# sieve_extend.c:132:    bitshift_t index_bit  = bitindex_calc(index);
 132:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 15837              		.loc 1 132 15 view .LVU5514
 15838 54d3 4C89D7   		mov	rdi, r10	# index_bit, _411
 15839              	.LVL995:
 15840              	# sieve_extend.c:131:    register counter_t index_word = wordindex(index);
 131:sieve_extend.c ****    bitshift_t index_bit  = bitindex_calc(index);
 15841              		.loc 1 131 23 view .LVU5515
 15842 54d6 48C1E906 		shr	rcx, 6	# index_word,
 15843              	# sieve_extend.c:132:    bitshift_t index_bit  = bitindex_calc(index);
 132:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 15844              		.loc 1 132 15 view .LVU5516
 15845 54da 83E73F   		and	edi, 63	# index_bit,
 15846              	.LVL996:
 133:sieve_extend.c ****    index += distance;
 15847              		.loc 1 133 4 is_stmt 1 view .LVU5517
 15848              	# sieve_extend.c:133:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 133:sieve_extend.c ****    index += distance;
 15849              		.loc 1 133 89 is_stmt 0 view .LVU5518
 15850 54dd 4C8B1CCB 		mov	r11, QWORD PTR [rbx+rcx*8]	# *_665, *_665
 15851 54e1 C442C3F7 		shrx	r13, r11, rdi	# tmp805, *_665, index_bit
 15851      EB
 15852              	# sieve_extend.c:133:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 133:sieve_extend.c ****    index += distance;
 15853              		.loc 1 133 66 view .LVU5519
GAS LISTING /tmp/ccr2dACi.s 			page 423


 15854 54e6 49F7D5   		not	r13	# tmp807
 15855              	# sieve_extend.c:133:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 133:sieve_extend.c ****    index += distance;
 15856              		.loc 1 133 76 view .LVU5520
 15857 54e9 488D34CD 		lea	rsi, 0[0+rcx*8]	# _664,
 15857      00000000 
 15858              	# sieve_extend.c:133:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 133:sieve_extend.c ****    index += distance;
 15859              		.loc 1 133 25 view .LVU5521
 15860 54f1 F34D0FBC 		tzcnt	r8, r13	# distance, tmp807
 15860      C5
 15861              	.LVL997:
 134:sieve_extend.c ****    distance += index_bit;
 15862              		.loc 1 134 4 is_stmt 1 view .LVU5522
 15863              	# sieve_extend.c:134:    index += distance;
 134:sieve_extend.c ****    distance += index_bit;
 15864              		.loc 1 134 10 is_stmt 0 view .LVU5523
 15865 54f6 4B8D0C02 		lea	rcx, [r10+r8]	# index,
 15866              	.LVL998:
 135:sieve_extend.c **** 
 15867              		.loc 1 135 4 is_stmt 1 view .LVU5524
 137:sieve_extend.c ****        index_word++;
 15868              		.loc 1 137 4 view .LVU5525
 137:sieve_extend.c ****        index_word++;
 15869              		.loc 1 137 10 view .LVU5526
 15870              	# sieve_extend.c:135:    distance += index_bit;
 135:sieve_extend.c **** 
 15871              		.loc 1 135 13 is_stmt 0 view .LVU5527
 15872 54fa 4901F8   		add	r8, rdi	# distance, index_bit
 15873              	.LVL999:
 15874              	# sieve_extend.c:137:    while unlikely(distance == WORD_SIZE_bitshift) { // to prevent a bug from 
 137:sieve_extend.c ****        index_word++;
 15875              		.loc 1 137 10 view .LVU5528
 15876 54fd 4983F840 		cmp	r8, 64	# distance,
 15877 5501 7435     		je	.L1472	#,
 143:sieve_extend.c **** }
 15878              		.loc 1 143 4 is_stmt 1 view .LVU5529
 15879              	.LVL1000:
 143:sieve_extend.c **** }
 15880              		.loc 1 143 4 is_stmt 0 view .LVU5530
 15881              	.LBE709:
 15882              	.LBE708:
 991:sieve_extend.c ****     }
 15883              		.loc 1 991 9 is_stmt 1 view .LVU5531
 15884              	# sieve_extend.c:991:         start = prime * prime * 2 + prime * 2;
 991:sieve_extend.c ****     }
 15885              		.loc 1 991 35 is_stmt 0 view .LVU5532
 15886 5503 4C8D5101 		lea	r10, 1[rcx]	# _411,
 15887              	# sieve_extend.c:991:         start = prime * prime * 2 + prime * 2;
 991:sieve_extend.c ****     }
 15888              		.loc 1 991 15 view .LVU5533
 15889 5507 4C89D6   		mov	rsi, r10	# tmp822, _411
 15890 550a 480FAFF1 		imul	rsi, rcx	# tmp822, index
 15891 550e 4801F6   		add	rsi, rsi	# index
 15892              	.LVL1001:
 985:sieve_extend.c ****         step  = prime * 2 + 1;
 15893              		.loc 1 985 11 is_stmt 1 view .LVU5534
GAS LISTING /tmp/ccr2dACi.s 			page 424


 15894 5511 4939F4   		cmp	r12, rsi	# block_stop, index
 15895 5514 0F827AF5 		jb	.L1448	#,
 15895      FFFF
 986:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 15896              		.loc 1 986 9 view .LVU5535
 15897              	# sieve_extend.c:987:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 987:sieve_extend.c ****         if likely(start <= block_stop)
 15898              		.loc 1 987 12 is_stmt 0 view .LVU5536
 15899 551a 4D39FA   		cmp	r10, r15	# _411, block_start
 15900              	# sieve_extend.c:986:         step  = prime * 2 + 1;
 986:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 15901              		.loc 1 986 15 view .LVU5537
 15902 551d 488D7C09 		lea	rdi, 1[rcx+rcx]	# step,
 15902      01
 15903              	.LVL1002:
 987:sieve_extend.c ****         if likely(start <= block_stop)
 15904              		.loc 1 987 9 is_stmt 1 view .LVU5538
 15905              	# sieve_extend.c:987:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 987:sieve_extend.c ****         if likely(start <= block_stop)
 15906              		.loc 1 987 12 is_stmt 0 view .LVU5539
 15907 5522 0F86B8FE 		jbe	.L1473	#,
 15907      FFFF
 15908              	.LVL1003:
 15909              	.L947:
 15910              	.LBB711:
 15911              	.LBB706:
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15912              		.loc 1 343 41 is_stmt 1 view .LVU5540
 15913              	# sieve_extend.c:343:     for (counter_t index = range_start; index <= range_stop; index += step) {
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15914              		.loc 1 343 5 is_stmt 0 view .LVU5541
 15915 5528 4939F4   		cmp	r12, rsi	# block_stop, index
 15916 552b 72A3     		jb	.L952	#,
 15917 552d E9C7FEFF 		jmp	.L951	#
 15917      FF
 15918              	.LVL1004:
 15919              		.p2align 4,,7
 15920 5532 660F1F44 		.p2align 3
 15920      0000
 15921              	.L1472:
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15922              		.loc 1 343 5 view .LVU5542
 15923              	.LBE706:
 15924              	.LBE711:
 15925              	.LBB712:
 15926              	.LBB710:
 138:sieve_extend.c ****        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 15927              		.loc 1 138 8 is_stmt 1 view .LVU5543
 139:sieve_extend.c ****        index += distance;
 15928              		.loc 1 139 8 view .LVU5544
 15929              	# sieve_extend.c:139:        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 139:sieve_extend.c ****        index += distance;
 15930              		.loc 1 139 48 is_stmt 0 view .LVU5545
 15931 5538 4C8B4C33 		mov	r9, QWORD PTR 8[rbx+rsi]	# *_677, *_677
 15931      08
 15932 553d 49F7D1   		not	r9	# tmp815
 15933              	.LVL1005:
GAS LISTING /tmp/ccr2dACi.s 			page 425


 140:sieve_extend.c ****    }
 15934              		.loc 1 140 8 is_stmt 1 view .LVU5546
 15935              	# sieve_extend.c:139:        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 139:sieve_extend.c ****        index += distance;
 15936              		.loc 1 139 17 is_stmt 0 view .LVU5547
 15937 5540 F34D0FBC 		tzcnt	r14, r9	# distance, tmp815
 15937      F1
 15938              	.LVL1006:
 15939              	# sieve_extend.c:140:        index += distance;
 140:sieve_extend.c ****    }
 15940              		.loc 1 140 14 view .LVU5548
 15941 5545 4C01F1   		add	rcx, r14	# index, distance
 15942              	.LVL1007:
 137:sieve_extend.c ****        index_word++;
 15943              		.loc 1 137 10 is_stmt 1 view .LVU5549
 143:sieve_extend.c **** }
 15944              		.loc 1 143 4 view .LVU5550
 143:sieve_extend.c **** }
 15945              		.loc 1 143 4 is_stmt 0 view .LVU5551
 15946              	.LBE710:
 15947              	.LBE712:
 991:sieve_extend.c ****     }
 15948              		.loc 1 991 9 is_stmt 1 view .LVU5552
 15949              	# sieve_extend.c:991:         start = prime * prime * 2 + prime * 2;
 991:sieve_extend.c ****     }
 15950              		.loc 1 991 35 is_stmt 0 view .LVU5553
 15951 5548 4C8D5101 		lea	r10, 1[rcx]	# _411,
 15952              	# sieve_extend.c:991:         start = prime * prime * 2 + prime * 2;
 991:sieve_extend.c ****     }
 15953              		.loc 1 991 15 view .LVU5554
 15954 554c 4C89D0   		mov	rax, r10	# tmp820, _411
 15955 554f 480FAFC1 		imul	rax, rcx	# tmp820, index
 15956 5553 488D3400 		lea	rsi, [rax+rax]	# index,
 15957              	.LVL1008:
 985:sieve_extend.c ****         step  = prime * 2 + 1;
 15958              		.loc 1 985 11 is_stmt 1 view .LVU5555
 15959 5557 4939F4   		cmp	r12, rsi	# block_stop, index
 15960 555a 0F836EFE 		jnb	.L938	#,
 15960      FFFF
 15961 5560 E92FF5FF 		jmp	.L1448	#
 15961      FF
 15962              	.LVL1009:
 15963              		.p2align 4,,7
 15964 5565 0F1F00   		.p2align 3
 15965              	.L957:
 15966              	.LBB713:
 15967              	.LBB646:
 15968              	# sieve_extend.c:238: 	register bitword_t pattern = BITWORD_SHIFTBIT;
 238:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; patternsize += patternsi
 15969              		.loc 1 238 21 is_stmt 0 view .LVU5556
 15970 5568 B9010000 		mov	ecx, 1	# pattern,
 15970      00
 15971 556d E97EF2FF 		jmp	.L899	#
 15971      FF
 15972              	.LVL1010:
 15973              		.p2align 4,,7
 15974 5572 660F1F44 		.p2align 3
GAS LISTING /tmp/ccr2dACi.s 			page 426


 15974      0000
 15975              	.L1462:
 238:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; patternsize += patternsi
 15976              		.loc 1 238 21 view .LVU5557
 15977              	.LBE646:
 15978              	.LBE713:
 15979              	.LBE718:
 15980              	.LBE729:
 15981              	.LBE733:
 15982              	.LBB734:
 15983              	.LBB612:
 15984              	.LBB605:
 15985              	.LBB598:
 15986              	.LBB594:
 15987              	.LBB592:
 15988              	.LBB587:
 15989              	.LBB586:
 15990              	.LBB583:
 201:sieve_extend.c ****    }
 15991              		.loc 1 201 7 is_stmt 1 view .LVU5558
 15992              	# sieve_extend.c:201:       *index_ptr |= (mask & chopmask(range_stop));
 201:sieve_extend.c ****    }
 15993              		.loc 1 201 27 is_stmt 0 view .LVU5559
 15994 5578 48235424 		and	rdx, QWORD PTR 40[rsp]	# tmp624, %sfp
 15994      28
 15995              	.LVL1011:
 15996              	# sieve_extend.c:201:       *index_ptr |= (mask & chopmask(range_stop));
 201:sieve_extend.c ****    }
 15997              		.loc 1 201 18 view .LVU5560
 15998 557d 490911   		or	QWORD PTR [r9], rdx	# *index_ptr_920, tmp624
 15999 5580 E924EEFF 		jmp	.L876	#
 15999      FF
 16000              	.LVL1012:
 16001              	.L1458:
 201:sieve_extend.c ****    }
 16002              		.loc 1 201 18 view .LVU5561
 16003              	.LBE583:
 16004              	.LBE586:
 16005              	.LBE587:
 16006              	.LBE592:
 16007              	.LBE594:
 16008              	.LBE598:
 16009              	.LBB599:
 16010              	.LBB548:
 910:sieve_extend.c ****         return; // rapid exit for small sizes
 16011              		.loc 1 910 9 is_stmt 1 view .LVU5562
 16012 5585 4C89C1   		mov	rcx, r8	#, _69
 16013 5588 4C89F2   		mov	rdx, r14	#, patternsize_bits
 16014 558b 4C89F6   		mov	rsi, r14	#, patternsize_bits
 16015 558e 4C89FF   		mov	rdi, r15	#, _97
 16016 5591 4C894424 		mov	QWORD PTR 40[rsp], r8	# %sfp, _69
 16016      28
 16017 5596 E865AAFF 		call	extendSieve_smallSize	#
 16017      FF
 16018              	.LVL1013:
 911:sieve_extend.c ****     }
 16019              		.loc 1 911 9 view .LVU5563
GAS LISTING /tmp/ccr2dACi.s 			page 427


 16020 559b 4C8B4424 		mov	r8, QWORD PTR 40[rsp]	# _69, %sfp
 16020      28
 16021 55a0 4C897424 		mov	QWORD PTR 24[rsp], r14	# %sfp, patternsize_bits
 16021      18
 16022 55a5 E97FE4FF 		jmp	.L851	#
 16022      FF
 16023              	.LVL1014:
 16024              	.L1463:
 911:sieve_extend.c ****     }
 16025              		.loc 1 911 9 is_stmt 0 view .LVU5564
 16026              	.LBE548:
 16027              	.LBE599:
 16028              	.LBE605:
 16029              	.LBE612:
 16030              	.LBE734:
 16031              	.LBB735:
 16032              	.LBB622:
 918:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 16033              		.loc 1 918 37 is_stmt 1 view .LVU5565
 16034 55aa E8E1CEFF 		call	extendSieve_shiftleft	#
 16034      FF
 16035              	.LVL1015:
 918:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 16036              		.loc 1 918 37 is_stmt 0 view .LVU5566
 16037 55af E957EEFF 		jmp	.L887	#
 16037      FF
 16038              	.LVL1016:
 16039              	.L1453:
 918:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 16040              		.loc 1 918 37 view .LVU5567
 16041 55b4 4C8B6C24 		mov	r13, QWORD PTR 48[rsp]	# <retval>, %sfp
 16041      30
 16042              	.LBE622:
 16043              	.LBE735:
 16044              	.LBB736:
 16045              	.LBB613:
 16046              	.LBB606:
 16047              	# sieve_extend.c:1025:         if (range_stop > block_stop) return block; //range_stop = block_stop
1025:sieve_extend.c **** 
 16048              		.loc 1 1025 12 view .LVU5568
 16049 55b9 4C89F2   		mov	rdx, r14	# block$pattern_size, patternsize_bits
 16050 55bc 488B7424 		mov	rsi, QWORD PTR 16[rsp]	# block$pattern_start, %sfp
 16050      10
 16051 55c1 48894C24 		mov	QWORD PTR 40[rsp], rcx	# %sfp, prime
 16051      28
 16052 55c6 4D8B7D08 		mov	r15, QWORD PTR 8[r13]	# prephitmp_1432, sieve_92->bits
 16053              	.LVL1017:
1025:sieve_extend.c **** 
 16054              		.loc 1 1025 12 view .LVU5569
 16055 55ca 4C897C24 		mov	QWORD PTR 8[rsp], r15	# %sfp, prephitmp_1432
 16055      08
 16056              	.LVL1018:
1025:sieve_extend.c **** 
 16057              		.loc 1 1025 12 view .LVU5570
 16058 55cf E900EEFF 		jmp	.L850	#
 16058      FF
 16059              	.LVL1019:
GAS LISTING /tmp/ccr2dACi.s 			page 428


 16060              	.L956:
 16061              	.LBB600:
 16062              	.LBB563:
 16063              	# sieve_extend.c:238: 	register bitword_t pattern = BITWORD_SHIFTBIT;
 238:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; patternsize += patternsi
 16064              		.loc 1 238 21 view .LVU5571
 16065 55d4 B9010000 		mov	ecx, 1	# pattern,
 16065      00
 16066 55d9 E9A2E6FF 		jmp	.L856	#
 16066      FF
 16067              	.LVL1020:
 16068              	.L1451:
 238:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; patternsize += patternsi
 16069              		.loc 1 238 21 view .LVU5572
 16070              	.LBE563:
 16071              	.LBE600:
 16072              	.LBE606:
 16073              	# sieve_extend.c:1010:     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0
1010:sieve_extend.c **** 
 16074              		.loc 1 1010 18 view .LVU5573
 16075 55de 31D2     		xor	edx, edx	# block$pattern_size
 16076 55e0 31F6     		xor	esi, esi	# block$pattern_start
 16077              	# sieve_extend.c:1005:     register counter_t prime   = 0;
1005:sieve_extend.c ****     counter_t patternsize_bits = 1;
 16078              		.loc 1 1005 24 view .LVU5574
 16079 55e2 48C74424 		mov	QWORD PTR 40[rsp], 0	# %sfp,
 16079      28000000 
 16079      00
 16080 55eb E9A7E8FF 		jmp	.L843	#
 16080      FF
 16081              	.LBE613:
 16082              	.LBE736:
 16083              		.cfi_endproc
 16084              	.LFE76:
 16086              		.p2align 4
 16088              	tune_benchmark:
 16089              	.LVL1021:
 16090              	.LFB83:
1169:sieve_extend.c **** 
1170:sieve_extend.c **** static void tune_benchmark(tuning_result_type* tuning_result, counter_t tuning_result_index) {
 16091              		.loc 1 1170 94 is_stmt 1 view -0
 16092              		.cfi_startproc
 16093              		.loc 1 1170 94 is_stmt 0 view .LVU5576
 16094 55f0 4154     		push	r12	#
 16095              		.cfi_def_cfa_offset 16
 16096              		.cfi_offset 12, -16
 16097 55f2 4989F8   		mov	r8, rdi	# tmp149, tuning_result
 16098              	# sieve_extend.c:1176:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_f
1171:sieve_extend.c ****     counter_t passes = 0;
1172:sieve_extend.c ****     double elapsed_time = 0;
1173:sieve_extend.c ****     struct timespec start_time,end_time;
1174:sieve_extend.c ****     struct sieve_state *sieve_instance;
1175:sieve_extend.c **** 
1176:sieve_extend.c ****     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_faster;
 16099              		.loc 1 1176 44 view .LVU5577
 16100 55f5 488D3C76 		lea	rdi, [rsi+rsi*2]	# tmp114,
 16101              	.LVL1022:
GAS LISTING /tmp/ccr2dACi.s 			page 429


 16102              	# sieve_extend.c:1170: static void tune_benchmark(tuning_result_type* tuning_result, counter_t tuni
1170:sieve_extend.c ****     counter_t passes = 0;
 16103              		.loc 1 1170 94 view .LVU5578
 16104 55f9 55       		push	rbp	#
 16105              		.cfi_def_cfa_offset 24
 16106              		.cfi_offset 6, -24
 16107              	# sieve_extend.c:1176:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_f
 16108              		.loc 1 1176 44 view .LVU5579
 16109 55fa 48C1E705 		sal	rdi, 5	# tmp115,
 16110              	# sieve_extend.c:1171:     counter_t passes = 0;
1171:sieve_extend.c ****     counter_t passes = 0;
 16111              		.loc 1 1171 15 view .LVU5580
 16112 55fe 4531E4   		xor	r12d, r12d	# passes
 16113              	# sieve_extend.c:1170: static void tune_benchmark(tuning_result_type* tuning_result, counter_t tuni
1170:sieve_extend.c ****     counter_t passes = 0;
 16114              		.loc 1 1170 94 view .LVU5581
 16115 5601 53       		push	rbx	#
 16116              		.cfi_def_cfa_offset 32
 16117              		.cfi_offset 3, -32
 16118              	# sieve_extend.c:1176:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_f
 16119              		.loc 1 1176 44 view .LVU5582
 16120 5602 498D1C38 		lea	rbx, [r8+rdi]	# _2,
 16121              	# sieve_extend.c:1180:     clock_gettime(CLOCK_MONOTONIC,&start_time);
1177:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
1178:sieve_extend.c ****     global_VECTORSTEP_FASTER = tuning_result[tuning_result_index].vectorstep_faster;
1179:sieve_extend.c **** 
1180:sieve_extend.c ****     clock_gettime(CLOCK_MONOTONIC,&start_time);
 16122              		.loc 1 1180 5 view .LVU5583
 16123 5606 BF010000 		mov	edi, 1	#,
 16123      00
 16124              	# sieve_extend.c:1170: static void tune_benchmark(tuning_result_type* tuning_result, counter_t tuni
1170:sieve_extend.c ****     counter_t passes = 0;
 16125              		.loc 1 1170 94 view .LVU5584
 16126 560b 488D6424 		lea	rsp, -48[rsp]	#,
 16126      D0
 16127              		.cfi_def_cfa_offset 80
 16128              	# sieve_extend.c:1177:     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep
1177:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
 16129              		.loc 1 1177 30 view .LVU5585
 16130 5610 488B5328 		mov	rdx, QWORD PTR 40[rbx]	# _2->mediumstep_faster, _2->mediumstep_faster
 16131              	# sieve_extend.c:1180:     clock_gettime(CLOCK_MONOTONIC,&start_time);
 16132              		.loc 1 1180 5 view .LVU5586
 16133 5614 4889E6   		mov	rsi, rsp	# tmp119,
 16134              	.LVL1023:
 16135              	# sieve_extend.c:1178:     global_VECTORSTEP_FASTER = tuning_result[tuning_result_index].vectorstep
1178:sieve_extend.c **** 
 16136              		.loc 1 1178 30 view .LVU5587
 16137 5617 488B4B30 		mov	rcx, QWORD PTR 48[rbx]	# _2->vectorstep_faster, _2->vectorstep_faster
 16138              	# sieve_extend.c:1170: static void tune_benchmark(tuning_result_type* tuning_result, counter_t tuni
1170:sieve_extend.c ****     counter_t passes = 0;
 16139              		.loc 1 1170 94 view .LVU5588
 16140 561b 64488B04 		mov	rax, QWORD PTR fs:40	# tmp160, MEM[(<address-space-1> long unsigned int *)40B]
 16140      25280000 
 16140      00
 16141 5624 48894424 		mov	QWORD PTR 40[rsp], rax	# D.7284, tmp160
 16141      28
 16142 5629 31C0     		xor	eax, eax	# tmp160
GAS LISTING /tmp/ccr2dACi.s 			page 430


1171:sieve_extend.c ****     double elapsed_time = 0;
 16143              		.loc 1 1171 5 is_stmt 1 view .LVU5589
 16144              	.LVL1024:
1172:sieve_extend.c ****     struct timespec start_time,end_time;
 16145              		.loc 1 1172 5 view .LVU5590
1173:sieve_extend.c ****     struct sieve_state *sieve_instance;
 16146              		.loc 1 1173 5 view .LVU5591
1174:sieve_extend.c **** 
 16147              		.loc 1 1174 5 view .LVU5592
1176:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
 16148              		.loc 1 1176 5 view .LVU5593
 16149              	# sieve_extend.c:1176:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_f
1176:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
 16150              		.loc 1 1176 29 is_stmt 0 view .LVU5594
 16151 562b 488B4320 		mov	rax, QWORD PTR 32[rbx]	# _2->smallstep_faster, _2->smallstep_faster
 16152              	# sieve_extend.c:1177:     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep
1177:sieve_extend.c ****     global_VECTORSTEP_FASTER = tuning_result[tuning_result_index].vectorstep_faster;
 16153              		.loc 1 1177 30 view .LVU5595
 16154 562f 48891500 		mov	QWORD PTR global_MEDIUMSTEP_FASTER[rip], rdx	# global_MEDIUMSTEP_FASTER, _2->mediumstep_faster
 16154      000000
 16155              	# sieve_extend.c:1178:     global_VECTORSTEP_FASTER = tuning_result[tuning_result_index].vectorstep
1178:sieve_extend.c **** 
 16156              		.loc 1 1178 30 view .LVU5596
 16157 5636 48890D00 		mov	QWORD PTR global_VECTORSTEP_FASTER[rip], rcx	# global_VECTORSTEP_FASTER, _2->vectorstep_faster
 16157      000000
 16158              	# sieve_extend.c:1176:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_f
1176:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
 16159              		.loc 1 1176 29 view .LVU5597
 16160 563d 48890500 		mov	QWORD PTR global_SMALLSTEP_FASTER[rip], rax	# global_SMALLSTEP_FASTER, _2->smallstep_faster
 16160      000000
1177:sieve_extend.c ****     global_VECTORSTEP_FASTER = tuning_result[tuning_result_index].vectorstep_faster;
 16161              		.loc 1 1177 5 is_stmt 1 view .LVU5598
1178:sieve_extend.c **** 
 16162              		.loc 1 1178 5 view .LVU5599
 16163              		.loc 1 1180 5 view .LVU5600
 16164 5644 E8000000 		call	clock_gettime@PLT	#
 16164      00
 16165              	.LVL1025:
1181:sieve_extend.c ****     while (elapsed_time <= tuning_result[tuning_result_index].sample_duration && passes < tuning_re
 16166              		.loc 1 1181 5 view .LVU5601
 16167              		.loc 1 1181 11 view .LVU5602
 16168 5649 C5D957E4 		vxorpd	xmm4, xmm4, xmm4	# elapsed_time
 16169 564d C5F92F63 		vcomisd	xmm4, QWORD PTR 64[rbx]	# elapsed_time, _2->sample_duration
 16169      40
 16170 5652 C5FB103D 		vmovsd	xmm7, QWORD PTR .LC7[rip]	# _58,
 16170      00000000 
 16171 565a 7676     		jbe	.L1475	#,
 16172 565c E99E0000 		jmp	.L1476	#
 16172      00
 16173              	.LVL1026:
 16174              		.p2align 4,,7
 16175 5661 0F1F8000 		.p2align 3
 16175      000000
 16176              	.L1479:
1182:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 16177              		.loc 1 1182 9 view .LVU5603
 16178              	# sieve_extend.c:1182:         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, t
GAS LISTING /tmp/ccr2dACi.s 			page 431


 16179              		.loc 1 1182 26 is_stmt 0 view .LVU5604
 16180 5668 488B7308 		mov	rsi, QWORD PTR 8[rbx]	# _2->blocksize_bits, _2->blocksize_bits
 16181              	# sieve_extend.c:1184:         passes++;
1183:sieve_extend.c ****         delete_sieve(sieve_instance);
1184:sieve_extend.c ****         passes++;
 16182              		.loc 1 1184 15 view .LVU5605
 16183 566c 4983C401 		add	r12, 1	# passes,
 16184              	.LVL1027:
 16185              	# sieve_extend.c:1182:         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, t
1182:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 16186              		.loc 1 1182 26 view .LVU5606
 16187 5670 488B3B   		mov	rdi, QWORD PTR [rbx]	#, _2->maxints
 16188 5673 E8B8E2FF 		call	sieve	#
 16188      FF
 16189              	.LVL1028:
 16190              	.LBB737:
 16191              	.LBB738:
 16192              	# sieve_extend.c:117:     free(sieve->bitarray);
 117:sieve_extend.c ****     free(sieve);
 16193              		.loc 1 117 5 view .LVU5607
 16194 5678 488B38   		mov	rdi, QWORD PTR [rax]	#, sieve_instance_37->bitarray
 16195              	.LBE738:
 16196              	.LBE737:
 16197              	# sieve_extend.c:1182:         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, t
1182:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 16198              		.loc 1 1182 26 view .LVU5608
 16199 567b 4889C5   		mov	rbp, rax	# sieve_instance, tmp151
 16200              	.LVL1029:
1183:sieve_extend.c ****         delete_sieve(sieve_instance);
 16201              		.loc 1 1183 9 is_stmt 1 view .LVU5609
 16202              	.LBB740:
 16203              	.LBI737:
 116:sieve_extend.c ****     free(sieve->bitarray);
 16204              		.loc 1 116 13 view .LVU5610
 16205              	.LBB739:
 117:sieve_extend.c ****     free(sieve);
 16206              		.loc 1 117 5 view .LVU5611
 16207 567e E8000000 		call	free@PLT	#
 16207      00
 16208              	.LVL1030:
 118:sieve_extend.c **** }
 16209              		.loc 1 118 5 view .LVU5612
 16210 5683 4889EF   		mov	rdi, rbp	#, sieve_instance
 16211 5686 E8000000 		call	free@PLT	#
 16211      00
 16212              	.LVL1031:
 118:sieve_extend.c **** }
 16213              		.loc 1 118 5 is_stmt 0 view .LVU5613
 16214              	.LBE739:
 16215              	.LBE740:
 16216              		.loc 1 1184 9 is_stmt 1 view .LVU5614
1185:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&end_time);
 16217              		.loc 1 1185 9 view .LVU5615
 16218 568b 488D7424 		lea	rsi, 16[rsp]	# tmp122,
 16218      10
 16219 5690 BF010000 		mov	edi, 1	#,
 16219      00
GAS LISTING /tmp/ccr2dACi.s 			page 432


 16220 5695 E8000000 		call	clock_gettime@PLT	#
 16220      00
 16221              	.LVL1032:
1186:sieve_extend.c ****         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time.tv_
 16222              		.loc 1 1186 9 view .LVU5616
 16223              	# sieve_extend.c:1186:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 16224              		.loc 1 1186 58 is_stmt 0 view .LVU5617
 16225 569a C4E1FB2A 		vcvtsi2sd	xmm0, xmm0, QWORD PTR 24[rsp]	# tmp123, end_time.tv_nsec
 16225      442418
 16226              	# sieve_extend.c:1186:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 16227              		.loc 1 1186 64 view .LVU5618
 16228 56a1 C4E1F32A 		vcvtsi2sd	xmm1, xmm1, QWORD PTR [rsp]	# tmp124, start_time.tv_sec
 16228      0C24
 16229              	# sieve_extend.c:1186:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 16230              		.loc 1 1186 104 view .LVU5619
 16231 56a7 C4E1E32A 		vcvtsi2sd	xmm3, xmm3, QWORD PTR 8[rsp]	# tmp126, start_time.tv_nsec
 16231      5C2408
 16232              	# sieve_extend.c:1186:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 16233              		.loc 1 1186 40 view .LVU5620
 16234 56ae C4E1EB2A 		vcvtsi2sd	xmm2, xmm2, QWORD PTR 16[rsp]	# tmp127, end_time.tv_sec
 16234      542410
 16235 56b5 C4E2F19B 		vfmsub132sd	xmm0, xmm1, QWORD PTR .LC8[rip]	# _60, tmp124,
 16235      05000000 
 16235      00
 16236 56be C4E2E99D 		vfnmadd132sd	xmm3, xmm2, QWORD PTR .LC8[rip]	# _61, tmp127,
 16236      1D000000 
 16236      00
 16237              	# sieve_extend.c:1186:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 16238              		.loc 1 1186 22 view .LVU5621
 16239 56c7 C5FB58E3 		vaddsd	xmm4, xmm0, xmm3	# elapsed_time, _60, _61
 16240              	.LVL1033:
1181:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 16241              		.loc 1 1181 11 is_stmt 1 view .LVU5622
 16242 56cb C5F92F63 		vcomisd	xmm4, QWORD PTR 64[rbx]	# elapsed_time, _2->sample_duration
 16242      40
 16243 56d0 7706     		ja	.L1490	#,
 16244              	.LVL1034:
 16245              	.L1475:
 16246              	# sieve_extend.c:1181:     while (elapsed_time <= tuning_result[tuning_result_index].sample_duratio
1181:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 16247              		.loc 1 1181 79 is_stmt 0 discriminator 1 view .LVU5623
 16248 56d2 4C396338 		cmp	QWORD PTR 56[rbx], r12	# _2->sample_max, passes
 16249 56d6 7790     		ja	.L1479	#,
 16250              	.L1490:
1181:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 16251              		.loc 1 1181 79 discriminator 1 view .LVU5624
 16252 56d8 C4C1CB2A 		vcvtsi2sd	xmm6, xmm6, r12	# tmp133, passes
 16252      F4
 16253 56dd 4D85E4   		test	r12, r12	# passes
 16254 56e0 7919     		jns	.L1481	#,
1181:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 16255              		.loc 1 1181 79 discriminator 1 view .LVU5625
 16256 56e2 4C89E6   		mov	rsi, r12	# tmp135, passes
 16257 56e5 4D89E1   		mov	r9, r12	# tmp136, passes
 16258 56e8 48D1EE   		shr	rsi	# tmp135
 16259 56eb 4183E101 		and	r9d, 1	# tmp136,
 16260 56ef 4C09CE   		or	rsi, r9	# tmp148, tmp136
GAS LISTING /tmp/ccr2dACi.s 			page 433


 16261 56f2 C4E1D32A 		vcvtsi2sd	xmm5, xmm5, rsi	# tmp134, tmp148
 16261      EE
 16262 56f7 C5D358F5 		vaddsd	xmm6, xmm5, xmm5	# tmp133, tmp134, tmp134
 16263              	.L1481:
1181:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 16264              		.loc 1 1181 79 discriminator 1 view .LVU5626
 16265 56fb C5CB5EFC 		vdivsd	xmm7, xmm6, xmm4	# _58, tmp133, elapsed_time
 16266              	.LVL1035:
 16267              	.L1476:
1187:sieve_extend.c ****     }
1188:sieve_extend.c ****     tuning_result[tuning_result_index].passes = passes;
 16268              		.loc 1 1188 5 is_stmt 1 view .LVU5627
 16269              	# sieve_extend.c:1188:     tuning_result[tuning_result_index].passes = passes;
 16270              		.loc 1 1188 47 is_stmt 0 view .LVU5628
 16271 56ff 4C896348 		mov	QWORD PTR 72[rbx], r12	# _2->passes, passes
1189:sieve_extend.c ****     tuning_result[tuning_result_index].elapsed_time = elapsed_time;
 16272              		.loc 1 1189 5 is_stmt 1 view .LVU5629
 16273              	# sieve_extend.c:1189:     tuning_result[tuning_result_index].elapsed_time = elapsed_time;
 16274              		.loc 1 1189 53 is_stmt 0 view .LVU5630
 16275 5703 C5FB1163 		vmovsd	QWORD PTR 80[rbx], xmm4	# _2->elapsed_time, elapsed_time
 16275      50
1190:sieve_extend.c ****     tuning_result[tuning_result_index].avg = passes/elapsed_time;
 16276              		.loc 1 1190 5 is_stmt 1 view .LVU5631
 16277              	# sieve_extend.c:1190:     tuning_result[tuning_result_index].avg = passes/elapsed_time;
 16278              		.loc 1 1190 44 is_stmt 0 view .LVU5632
 16279 5708 C5FB117B 		vmovsd	QWORD PTR 88[rbx], xmm7	# _2->avg, _58
 16279      58
 16280              	# sieve_extend.c:1191: }
1191:sieve_extend.c **** }
 16281              		.loc 1 1191 1 view .LVU5633
 16282 570d 488B4424 		mov	rax, QWORD PTR 40[rsp]	# tmp161, D.7284
 16282      28
 16283 5712 64483304 		xor	rax, QWORD PTR fs:40	# tmp161, MEM[(<address-space-1> long unsigned int *)40B]
 16283      25280000 
 16283      00
 16284 571b 750A     		jne	.L1491	#,
 16285 571d 488D6424 		lea	rsp, 48[rsp]	#,
 16285      30
 16286              		.cfi_remember_state
 16287              		.cfi_def_cfa_offset 32
 16288 5722 5B       		pop	rbx	#
 16289              		.cfi_def_cfa_offset 24
 16290 5723 5D       		pop	rbp	#
 16291              		.cfi_def_cfa_offset 16
 16292 5724 415C     		pop	r12	#
 16293              		.cfi_def_cfa_offset 8
 16294 5726 C3       		ret	
 16295              	.L1491:
 16296              		.cfi_restore_state
 16297 5727 E8000000 		call	__stack_chk_fail@PLT	#
 16297      00
 16298              	.LVL1036:
 16299              		.cfi_endproc
 16300              	.LFE83:
 16302 572c 0F1F4000 		.p2align 4
 16303              		.globl	shiftvec
 16305              	shiftvec:
GAS LISTING /tmp/ccr2dACi.s 			page 434


 16306              	.LVL1037:
 16307              	.LFB67:
 630:sieve_extend.c ****     int i = 0;
 16308              		.loc 1 630 1 is_stmt 1 view -0
 16309              		.cfi_startproc
 630:sieve_extend.c ****     int i = 0;
 16310              		.loc 1 630 1 is_stmt 0 view .LVU5635
 16311 5730 F30F1EFA 		endbr64	
 631:sieve_extend.c ****     // MSVC: use steps of 2 for SSE, 4 for AVX2, 8 for AVX512
 16312              		.loc 1 631 5 is_stmt 1 view .LVU5636
 16313              	.LVL1038:
 633:sieve_extend.c ****     {
 16314              		.loc 1 633 5 view .LVU5637
 633:sieve_extend.c ****     {
 16315              		.loc 1 633 12 view .LVU5638
 16316              	# sieve_extend.c:633:     for (; i+4 < size; i+=4,dst+=4,src+=4)
 633:sieve_extend.c ****     {
 16317              		.loc 1 633 5 is_stmt 0 view .LVU5639
 16318 5734 83FA04   		cmp	edx, 4	# size,
 16319 5737 0F8E9D03 		jle	.L1537	#,
 16319      0000
 16320 573d 41BB4000 		mov	r11d, 64	# tmp130,
 16320      0000
 16321 5743 448D42FB 		lea	r8d, -5[rdx]	# tmp131,
 16322 5747 4489D8   		mov	eax, r11d	# _4, tmp130
 16323 574a C5F96EC9 		vmovd	xmm1, ecx	# shift, shift
 16324 574e 29C8     		sub	eax, ecx	# _4, shift
 16325              	.LBB741:
 16326              	# sieve_extend.c:636:             *(dst+j) = (*(src+j))<<shift;
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16327              		.loc 1 636 25 view .LVU5640
 16328 5750 C4E3FD00 		vpermq	ymm2, YMMWORD PTR [rsi], 85	# vect__102.701, MEM[base: src_35(D), index: ivtmp.715_114, off
 16328      1655
 16329              	# sieve_extend.c:636:             *(dst+j) = (*(src+j))<<shift;
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16330              		.loc 1 636 34 view .LVU5641
 16331 5756 C5FE6F26 		vmovdqu	ymm4, YMMWORD PTR [rsi]	# tmp269, MEM[base: src_35(D), index: ivtmp.715_114, offset: 0B]
 16332 575a C4E1F96E 		vmovq	xmm0, rax	# _4, _4
 16332      C0
 16333 575f 41C1E802 		shr	r8d, 2	# _25,
 16334 5763 41B90100 		mov	r9d, 1	# ivtmp.712,
 16334      0000
 16335              	.LBE741:
 16336              	.LBB742:
 16337              	# sieve_extend.c:638:             *(dst+j) |= (*(src+1)>>(64-shift));
 638:sieve_extend.c ****     }
 16338              		.loc 1 638 34 view .LVU5642
 16339 5769 C5EDD3E8 		vpsrlq	ymm5, ymm2, xmm0	# vect__57.702, vect__102.701, _4
 16340              	.LBE742:
 16341              	.LBB743:
 16342              	# sieve_extend.c:636:             *(dst+j) = (*(src+j))<<shift;
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16343              		.loc 1 636 34 view .LVU5643
 16344 576d C5DDF3D9 		vpsllq	ymm3, ymm4, xmm1	# vect__104.706, tmp269, shift
 16345 5771 458D5001 		lea	r10d, 1[r8]	# tmp164,
 16346 5775 4589C3   		mov	r11d, r8d	# tmp169, _25
 16347              	.LBE743:
GAS LISTING /tmp/ccr2dACi.s 			page 435


 16348              	.LBB744:
 16349              	# sieve_extend.c:638:             *(dst+j) |= (*(src+1)>>(64-shift));
 638:sieve_extend.c ****     }
 16350              		.loc 1 638 22 view .LVU5644
 16351 5778 C5D5EBF3 		vpor	ymm6, ymm5, ymm3	# vect__58.707, vect__57.702, vect__104.706
 16352 577c 4183E307 		and	r11d, 7	# tmp169,
 16353              	.LVL1039:
 638:sieve_extend.c ****     }
 16354              		.loc 1 638 22 view .LVU5645
 16355              	.LBE744:
 16356              	.LBB745:
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16357              		.loc 1 635 25 is_stmt 1 view .LVU5646
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16358              		.loc 1 636 13 view .LVU5647
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16359              		.loc 1 635 32 view .LVU5648
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16360              		.loc 1 635 25 view .LVU5649
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16361              		.loc 1 636 13 view .LVU5650
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16362              		.loc 1 635 32 view .LVU5651
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16363              		.loc 1 635 25 view .LVU5652
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16364              		.loc 1 636 13 view .LVU5653
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16365              		.loc 1 635 32 view .LVU5654
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16366              		.loc 1 635 25 view .LVU5655
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16367              		.loc 1 636 13 view .LVU5656
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16368              		.loc 1 635 32 view .LVU5657
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16369              		.loc 1 635 25 view .LVU5658
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16370              		.loc 1 635 25 is_stmt 0 view .LVU5659
 16371              	.LBE745:
 16372              	.LBB746:
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16373              		.loc 1 637 25 is_stmt 1 view .LVU5660
 638:sieve_extend.c ****     }
 16374              		.loc 1 638 13 view .LVU5661
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16375              		.loc 1 637 32 view .LVU5662
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16376              		.loc 1 637 25 view .LVU5663
 638:sieve_extend.c ****     }
 16377              		.loc 1 638 13 view .LVU5664
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16378              		.loc 1 637 32 view .LVU5665
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16379              		.loc 1 637 25 view .LVU5666
 638:sieve_extend.c ****     }
 16380              		.loc 1 638 13 view .LVU5667
GAS LISTING /tmp/ccr2dACi.s 			page 436


 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16381              		.loc 1 637 32 view .LVU5668
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16382              		.loc 1 637 25 view .LVU5669
 638:sieve_extend.c ****     }
 16383              		.loc 1 638 13 view .LVU5670
 16384 5780 4183FA01 		cmp	r10d, 1	# tmp164,
 16385 5784 B8200000 		mov	eax, 32	# ivtmp.715,
 16385      00
 16386              	# sieve_extend.c:638:             *(dst+j) |= (*(src+1)>>(64-shift));
 638:sieve_extend.c ****     }
 16387              		.loc 1 638 22 is_stmt 0 view .LVU5671
 16388 5789 C5FE7F37 		vmovdqu	YMMWORD PTR [rdi], ymm6	# MEM[base: dst_34(D), index: ivtmp.715_114, offset: 0B], vect__58
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16389              		.loc 1 637 32 is_stmt 1 view .LVU5672
 16390              	.LVL1040:
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16391              		.loc 1 637 25 view .LVU5673
 16392              	.LBE746:
 633:sieve_extend.c ****     {
 16393              		.loc 1 633 24 view .LVU5674
 633:sieve_extend.c ****     {
 16394              		.loc 1 633 12 view .LVU5675
 16395 578d 0F866002 		jbe	.L1535	#,
 16395      0000
 16396 5793 4585DB   		test	r11d, r11d	# tmp169
 16397 5796 0F841E01 		je	.L1495	#,
 16397      0000
 16398 579c 4183FB01 		cmp	r11d, 1	# tmp169,
 16399 57a0 0F84E500 		je	.L1522	#,
 16399      0000
 16400 57a6 4183FB02 		cmp	r11d, 2	# tmp169,
 16401 57aa 0F84B600 		je	.L1523	#,
 16401      0000
 16402 57b0 4183FB03 		cmp	r11d, 3	# tmp169,
 16403 57b4 0F848700 		je	.L1524	#,
 16403      0000
 16404 57ba 4183FB04 		cmp	r11d, 4	# tmp169,
 16405 57be 745B     		je	.L1525	#,
 16406 57c0 4183FB05 		cmp	r11d, 5	# tmp169,
 16407 57c4 7430     		je	.L1526	#,
 16408 57c6 4183FB06 		cmp	r11d, 6	# tmp169,
 16409 57ca 0F85DC02 		jne	.L1538	#,
 16409      0000
 16410              	.L1527:
 16411              	.LVL1041:
 16412              	.LBB747:
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16413              		.loc 1 635 25 view .LVU5676
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16414              		.loc 1 636 13 view .LVU5677
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16415              		.loc 1 635 32 view .LVU5678
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16416              		.loc 1 635 25 view .LVU5679
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16417              		.loc 1 636 13 view .LVU5680
GAS LISTING /tmp/ccr2dACi.s 			page 437


 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16418              		.loc 1 635 32 view .LVU5681
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16419              		.loc 1 635 25 view .LVU5682
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16420              		.loc 1 636 13 view .LVU5683
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16421              		.loc 1 635 32 view .LVU5684
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16422              		.loc 1 635 25 view .LVU5685
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16423              		.loc 1 636 13 view .LVU5686
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16424              		.loc 1 635 32 view .LVU5687
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16425              		.loc 1 635 25 view .LVU5688
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16426              		.loc 1 635 25 is_stmt 0 view .LVU5689
 16427              	.LBE747:
 16428              	.LBB748:
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16429              		.loc 1 637 25 is_stmt 1 view .LVU5690
 638:sieve_extend.c ****     }
 16430              		.loc 1 638 13 view .LVU5691
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16431              		.loc 1 637 32 view .LVU5692
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16432              		.loc 1 637 25 view .LVU5693
 638:sieve_extend.c ****     }
 16433              		.loc 1 638 13 view .LVU5694
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16434              		.loc 1 637 32 view .LVU5695
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16435              		.loc 1 637 25 view .LVU5696
 638:sieve_extend.c ****     }
 16436              		.loc 1 638 13 view .LVU5697
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16437              		.loc 1 637 32 view .LVU5698
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16438              		.loc 1 637 25 view .LVU5699
 638:sieve_extend.c ****     }
 16439              		.loc 1 638 13 view .LVU5700
 16440              	.LBE748:
 16441              	.LBB749:
 16442              	# sieve_extend.c:636:             *(dst+j) = (*(src+j))<<shift;
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16443              		.loc 1 636 25 is_stmt 0 view .LVU5701
 16444 57d0 C463FD00 		vpermq	ymm12, YMMWORD PTR [rsi+rax], 85	# vect__102.701, MEM[base: src_35(D), index: ivtmp.715_114
 16444      240655
 16445 57d7 4183C101 		add	r9d, 1	# ivtmp.712,
 16446              	# sieve_extend.c:636:             *(dst+j) = (*(src+j))<<shift;
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16447              		.loc 1 636 34 view .LVU5702
 16448 57db C57E6F34 		vmovdqu	ymm14, YMMWORD PTR [rsi+rax]	# tmp279, MEM[base: src_35(D), index: ivtmp.715_114, offset: 
 16448      06
 16449              	.LBE749:
 16450              	.LBB750:
GAS LISTING /tmp/ccr2dACi.s 			page 438


 16451              	# sieve_extend.c:638:             *(dst+j) |= (*(src+1)>>(64-shift));
 638:sieve_extend.c ****     }
 16452              		.loc 1 638 34 view .LVU5703
 16453 57e0 C51DD3E8 		vpsrlq	ymm13, ymm12, xmm0	# vect__57.702, vect__102.701, _4
 16454              	.LBE750:
 16455              	.LBB751:
 16456              	# sieve_extend.c:636:             *(dst+j) = (*(src+j))<<shift;
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16457              		.loc 1 636 34 view .LVU5704
 16458 57e4 C50DF3F9 		vpsllq	ymm15, ymm14, xmm1	# vect__104.706, tmp279, shift
 16459              	.LBE751:
 16460              	.LBB752:
 16461              	# sieve_extend.c:638:             *(dst+j) |= (*(src+1)>>(64-shift));
 638:sieve_extend.c ****     }
 16462              		.loc 1 638 22 view .LVU5705
 16463 57e8 C4C115EB 		vpor	ymm2, ymm13, ymm15	# vect__58.707, vect__57.702, vect__104.706
 16463      D7
 16464 57ed C5FE7F14 		vmovdqu	YMMWORD PTR [rdi+rax], ymm2	# MEM[base: dst_34(D), index: ivtmp.715_114, offset: 0B], vect
 16464      07
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16465              		.loc 1 637 32 is_stmt 1 view .LVU5706
 16466              	.LVL1042:
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16467              		.loc 1 637 25 view .LVU5707
 16468              	.LBE752:
 633:sieve_extend.c ****     {
 16469              		.loc 1 633 24 view .LVU5708
 633:sieve_extend.c ****     {
 16470              		.loc 1 633 12 view .LVU5709
 16471 57f2 4883C020 		add	rax, 32	# ivtmp.715,
 16472              	.L1526:
 16473              	.LVL1043:
 16474              	.LBB753:
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16475              		.loc 1 635 25 view .LVU5710
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16476              		.loc 1 636 13 view .LVU5711
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16477              		.loc 1 635 32 view .LVU5712
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16478              		.loc 1 635 25 view .LVU5713
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16479              		.loc 1 636 13 view .LVU5714
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16480              		.loc 1 635 32 view .LVU5715
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16481              		.loc 1 635 25 view .LVU5716
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16482              		.loc 1 636 13 view .LVU5717
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16483              		.loc 1 635 32 view .LVU5718
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16484              		.loc 1 635 25 view .LVU5719
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16485              		.loc 1 636 13 view .LVU5720
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16486              		.loc 1 635 32 view .LVU5721
GAS LISTING /tmp/ccr2dACi.s 			page 439


 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16487              		.loc 1 635 25 view .LVU5722
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16488              		.loc 1 635 25 is_stmt 0 view .LVU5723
 16489              	.LBE753:
 16490              	.LBB754:
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16491              		.loc 1 637 25 is_stmt 1 view .LVU5724
 638:sieve_extend.c ****     }
 16492              		.loc 1 638 13 view .LVU5725
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16493              		.loc 1 637 32 view .LVU5726
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16494              		.loc 1 637 25 view .LVU5727
 638:sieve_extend.c ****     }
 16495              		.loc 1 638 13 view .LVU5728
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16496              		.loc 1 637 32 view .LVU5729
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16497              		.loc 1 637 25 view .LVU5730
 638:sieve_extend.c ****     }
 16498              		.loc 1 638 13 view .LVU5731
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16499              		.loc 1 637 32 view .LVU5732
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16500              		.loc 1 637 25 view .LVU5733
 638:sieve_extend.c ****     }
 16501              		.loc 1 638 13 view .LVU5734
 16502              	.LBE754:
 16503              	.LBB755:
 16504              	# sieve_extend.c:636:             *(dst+j) = (*(src+j))<<shift;
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16505              		.loc 1 636 25 is_stmt 0 view .LVU5735
 16506 57f6 C4E3FD00 		vpermq	ymm5, YMMWORD PTR [rsi+rax], 85	# vect__102.701, MEM[base: src_35(D), index: ivtmp.715_114,
 16506      2C0655
 16507 57fd 4183C101 		add	r9d, 1	# ivtmp.712,
 16508              	# sieve_extend.c:636:             *(dst+j) = (*(src+j))<<shift;
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16509              		.loc 1 636 34 view .LVU5736
 16510 5801 C5FE6F1C 		vmovdqu	ymm3, YMMWORD PTR [rsi+rax]	# tmp280, MEM[base: src_35(D), index: ivtmp.715_114, offset: 0
 16510      06
 16511              	.LBE755:
 16512              	.LBB756:
 16513              	# sieve_extend.c:638:             *(dst+j) |= (*(src+1)>>(64-shift));
 638:sieve_extend.c ****     }
 16514              		.loc 1 638 34 view .LVU5737
 16515 5806 C5D5D3E0 		vpsrlq	ymm4, ymm5, xmm0	# vect__57.702, vect__102.701, _4
 16516              	.LBE756:
 16517              	.LBB757:
 16518              	# sieve_extend.c:636:             *(dst+j) = (*(src+j))<<shift;
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16519              		.loc 1 636 34 view .LVU5738
 16520 580a C5E5F3F1 		vpsllq	ymm6, ymm3, xmm1	# vect__104.706, tmp280, shift
 16521              	.LBE757:
 16522              	.LBB758:
 16523              	# sieve_extend.c:638:             *(dst+j) |= (*(src+1)>>(64-shift));
 638:sieve_extend.c ****     }
GAS LISTING /tmp/ccr2dACi.s 			page 440


 16524              		.loc 1 638 22 view .LVU5739
 16525 580e C5DDEBFE 		vpor	ymm7, ymm4, ymm6	# vect__58.707, vect__57.702, vect__104.706
 16526 5812 C5FE7F3C 		vmovdqu	YMMWORD PTR [rdi+rax], ymm7	# MEM[base: dst_34(D), index: ivtmp.715_114, offset: 0B], vect
 16526      07
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16527              		.loc 1 637 32 is_stmt 1 view .LVU5740
 16528              	.LVL1044:
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16529              		.loc 1 637 25 view .LVU5741
 16530              	.LBE758:
 633:sieve_extend.c ****     {
 16531              		.loc 1 633 24 view .LVU5742
 633:sieve_extend.c ****     {
 16532              		.loc 1 633 12 view .LVU5743
 16533 5817 4883C020 		add	rax, 32	# ivtmp.715,
 16534              	.L1525:
 16535              	.LVL1045:
 16536              	.LBB759:
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16537              		.loc 1 635 25 view .LVU5744
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16538              		.loc 1 636 13 view .LVU5745
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16539              		.loc 1 635 32 view .LVU5746
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16540              		.loc 1 635 25 view .LVU5747
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16541              		.loc 1 636 13 view .LVU5748
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16542              		.loc 1 635 32 view .LVU5749
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16543              		.loc 1 635 25 view .LVU5750
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16544              		.loc 1 636 13 view .LVU5751
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16545              		.loc 1 635 32 view .LVU5752
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16546              		.loc 1 635 25 view .LVU5753
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16547              		.loc 1 636 13 view .LVU5754
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16548              		.loc 1 635 32 view .LVU5755
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16549              		.loc 1 635 25 view .LVU5756
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16550              		.loc 1 635 25 is_stmt 0 view .LVU5757
 16551              	.LBE759:
 16552              	.LBB760:
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16553              		.loc 1 637 25 is_stmt 1 view .LVU5758
 638:sieve_extend.c ****     }
 16554              		.loc 1 638 13 view .LVU5759
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16555              		.loc 1 637 32 view .LVU5760
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16556              		.loc 1 637 25 view .LVU5761
 638:sieve_extend.c ****     }
GAS LISTING /tmp/ccr2dACi.s 			page 441


 16557              		.loc 1 638 13 view .LVU5762
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16558              		.loc 1 637 32 view .LVU5763
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16559              		.loc 1 637 25 view .LVU5764
 638:sieve_extend.c ****     }
 16560              		.loc 1 638 13 view .LVU5765
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16561              		.loc 1 637 32 view .LVU5766
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16562              		.loc 1 637 25 view .LVU5767
 638:sieve_extend.c ****     }
 16563              		.loc 1 638 13 view .LVU5768
 16564              	.LBE760:
 16565              	.LBB761:
 16566              	# sieve_extend.c:636:             *(dst+j) = (*(src+j))<<shift;
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16567              		.loc 1 636 25 is_stmt 0 view .LVU5769
 16568 581b C463FD00 		vpermq	ymm8, YMMWORD PTR [rsi+rax], 85	# vect__102.701, MEM[base: src_35(D), index: ivtmp.715_114,
 16568      040655
 16569 5822 4183C101 		add	r9d, 1	# ivtmp.712,
 16570              	# sieve_extend.c:636:             *(dst+j) = (*(src+j))<<shift;
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16571              		.loc 1 636 34 view .LVU5770
 16572 5826 C57E6F14 		vmovdqu	ymm10, YMMWORD PTR [rsi+rax]	# tmp281, MEM[base: src_35(D), index: ivtmp.715_114, offset: 
 16572      06
 16573              	.LBE761:
 16574              	.LBB762:
 16575              	# sieve_extend.c:638:             *(dst+j) |= (*(src+1)>>(64-shift));
 638:sieve_extend.c ****     }
 16576              		.loc 1 638 34 view .LVU5771
 16577 582b C53DD3C8 		vpsrlq	ymm9, ymm8, xmm0	# vect__57.702, vect__102.701, _4
 16578              	.LBE762:
 16579              	.LBB763:
 16580              	# sieve_extend.c:636:             *(dst+j) = (*(src+j))<<shift;
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16581              		.loc 1 636 34 view .LVU5772
 16582 582f C52DF3D9 		vpsllq	ymm11, ymm10, xmm1	# vect__104.706, tmp281, shift
 16583              	.LBE763:
 16584              	.LBB764:
 16585              	# sieve_extend.c:638:             *(dst+j) |= (*(src+1)>>(64-shift));
 638:sieve_extend.c ****     }
 16586              		.loc 1 638 22 view .LVU5773
 16587 5833 C44135EB 		vpor	ymm12, ymm9, ymm11	# vect__58.707, vect__57.702, vect__104.706
 16587      E3
 16588 5838 C57E7F24 		vmovdqu	YMMWORD PTR [rdi+rax], ymm12	# MEM[base: dst_34(D), index: ivtmp.715_114, offset: 0B], vec
 16588      07
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16589              		.loc 1 637 32 is_stmt 1 view .LVU5774
 16590              	.LVL1046:
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16591              		.loc 1 637 25 view .LVU5775
 16592              	.LBE764:
 633:sieve_extend.c ****     {
 16593              		.loc 1 633 24 view .LVU5776
 633:sieve_extend.c ****     {
 16594              		.loc 1 633 12 view .LVU5777
GAS LISTING /tmp/ccr2dACi.s 			page 442


 16595 583d 4883C020 		add	rax, 32	# ivtmp.715,
 16596              	.L1524:
 16597              	.LVL1047:
 16598              	.LBB765:
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16599              		.loc 1 635 25 view .LVU5778
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16600              		.loc 1 636 13 view .LVU5779
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16601              		.loc 1 635 32 view .LVU5780
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16602              		.loc 1 635 25 view .LVU5781
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16603              		.loc 1 636 13 view .LVU5782
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16604              		.loc 1 635 32 view .LVU5783
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16605              		.loc 1 635 25 view .LVU5784
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16606              		.loc 1 636 13 view .LVU5785
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16607              		.loc 1 635 32 view .LVU5786
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16608              		.loc 1 635 25 view .LVU5787
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16609              		.loc 1 636 13 view .LVU5788
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16610              		.loc 1 635 32 view .LVU5789
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16611              		.loc 1 635 25 view .LVU5790
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16612              		.loc 1 635 25 is_stmt 0 view .LVU5791
 16613              	.LBE765:
 16614              	.LBB766:
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16615              		.loc 1 637 25 is_stmt 1 view .LVU5792
 638:sieve_extend.c ****     }
 16616              		.loc 1 638 13 view .LVU5793
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16617              		.loc 1 637 32 view .LVU5794
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16618              		.loc 1 637 25 view .LVU5795
 638:sieve_extend.c ****     }
 16619              		.loc 1 638 13 view .LVU5796
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16620              		.loc 1 637 32 view .LVU5797
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16621              		.loc 1 637 25 view .LVU5798
 638:sieve_extend.c ****     }
 16622              		.loc 1 638 13 view .LVU5799
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16623              		.loc 1 637 32 view .LVU5800
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16624              		.loc 1 637 25 view .LVU5801
 638:sieve_extend.c ****     }
 16625              		.loc 1 638 13 view .LVU5802
 16626              	.LBE766:
GAS LISTING /tmp/ccr2dACi.s 			page 443


 16627              	.LBB767:
 16628              	# sieve_extend.c:636:             *(dst+j) = (*(src+j))<<shift;
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16629              		.loc 1 636 25 is_stmt 0 view .LVU5803
 16630 5841 C463FD00 		vpermq	ymm13, YMMWORD PTR [rsi+rax], 85	# vect__102.701, MEM[base: src_35(D), index: ivtmp.715_114
 16630      2C0655
 16631 5848 4183C101 		add	r9d, 1	# ivtmp.712,
 16632              	# sieve_extend.c:636:             *(dst+j) = (*(src+j))<<shift;
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16633              		.loc 1 636 34 view .LVU5804
 16634 584c C57E6F3C 		vmovdqu	ymm15, YMMWORD PTR [rsi+rax]	# tmp282, MEM[base: src_35(D), index: ivtmp.715_114, offset: 
 16634      06
 16635              	.LBE767:
 16636              	.LBB768:
 16637              	# sieve_extend.c:638:             *(dst+j) |= (*(src+1)>>(64-shift));
 638:sieve_extend.c ****     }
 16638              		.loc 1 638 34 view .LVU5805
 16639 5851 C515D3F0 		vpsrlq	ymm14, ymm13, xmm0	# vect__57.702, vect__102.701, _4
 16640              	.LBE768:
 16641              	.LBB769:
 16642              	# sieve_extend.c:636:             *(dst+j) = (*(src+j))<<shift;
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16643              		.loc 1 636 34 view .LVU5806
 16644 5855 C585F3D1 		vpsllq	ymm2, ymm15, xmm1	# vect__104.706, tmp282, shift
 16645              	.LBE769:
 16646              	.LBB770:
 16647              	# sieve_extend.c:638:             *(dst+j) |= (*(src+1)>>(64-shift));
 638:sieve_extend.c ****     }
 16648              		.loc 1 638 22 view .LVU5807
 16649 5859 C58DEBEA 		vpor	ymm5, ymm14, ymm2	# vect__58.707, vect__57.702, vect__104.706
 16650 585d C5FE7F2C 		vmovdqu	YMMWORD PTR [rdi+rax], ymm5	# MEM[base: dst_34(D), index: ivtmp.715_114, offset: 0B], vect
 16650      07
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16651              		.loc 1 637 32 is_stmt 1 view .LVU5808
 16652              	.LVL1048:
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16653              		.loc 1 637 25 view .LVU5809
 16654              	.LBE770:
 633:sieve_extend.c ****     {
 16655              		.loc 1 633 24 view .LVU5810
 633:sieve_extend.c ****     {
 16656              		.loc 1 633 12 view .LVU5811
 16657 5862 4883C020 		add	rax, 32	# ivtmp.715,
 16658              	.L1523:
 16659              	.LVL1049:
 16660              	.LBB771:
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16661              		.loc 1 635 25 view .LVU5812
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16662              		.loc 1 636 13 view .LVU5813
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16663              		.loc 1 635 32 view .LVU5814
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16664              		.loc 1 635 25 view .LVU5815
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16665              		.loc 1 636 13 view .LVU5816
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
GAS LISTING /tmp/ccr2dACi.s 			page 444


 16666              		.loc 1 635 32 view .LVU5817
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16667              		.loc 1 635 25 view .LVU5818
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16668              		.loc 1 636 13 view .LVU5819
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16669              		.loc 1 635 32 view .LVU5820
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16670              		.loc 1 635 25 view .LVU5821
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16671              		.loc 1 636 13 view .LVU5822
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16672              		.loc 1 635 32 view .LVU5823
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16673              		.loc 1 635 25 view .LVU5824
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16674              		.loc 1 635 25 is_stmt 0 view .LVU5825
 16675              	.LBE771:
 16676              	.LBB772:
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16677              		.loc 1 637 25 is_stmt 1 view .LVU5826
 638:sieve_extend.c ****     }
 16678              		.loc 1 638 13 view .LVU5827
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16679              		.loc 1 637 32 view .LVU5828
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16680              		.loc 1 637 25 view .LVU5829
 638:sieve_extend.c ****     }
 16681              		.loc 1 638 13 view .LVU5830
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16682              		.loc 1 637 32 view .LVU5831
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16683              		.loc 1 637 25 view .LVU5832
 638:sieve_extend.c ****     }
 16684              		.loc 1 638 13 view .LVU5833
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16685              		.loc 1 637 32 view .LVU5834
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16686              		.loc 1 637 25 view .LVU5835
 638:sieve_extend.c ****     }
 16687              		.loc 1 638 13 view .LVU5836
 16688              	.LBE772:
 16689              	.LBB773:
 16690              	# sieve_extend.c:636:             *(dst+j) = (*(src+j))<<shift;
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16691              		.loc 1 636 25 is_stmt 0 view .LVU5837
 16692 5866 C4E3FD00 		vpermq	ymm4, YMMWORD PTR [rsi+rax], 85	# vect__102.701, MEM[base: src_35(D), index: ivtmp.715_114,
 16692      240655
 16693 586d 4183C101 		add	r9d, 1	# ivtmp.712,
 16694              	# sieve_extend.c:636:             *(dst+j) = (*(src+j))<<shift;
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16695              		.loc 1 636 34 view .LVU5838
 16696 5871 C5FE6F1C 		vmovdqu	ymm3, YMMWORD PTR [rsi+rax]	# tmp283, MEM[base: src_35(D), index: ivtmp.715_114, offset: 0
 16696      06
 16697              	.LBE773:
 16698              	.LBB774:
 16699              	# sieve_extend.c:638:             *(dst+j) |= (*(src+1)>>(64-shift));
GAS LISTING /tmp/ccr2dACi.s 			page 445


 638:sieve_extend.c ****     }
 16700              		.loc 1 638 34 view .LVU5839
 16701 5876 C5DDD3F0 		vpsrlq	ymm6, ymm4, xmm0	# vect__57.702, vect__102.701, _4
 16702              	.LBE774:
 16703              	.LBB775:
 16704              	# sieve_extend.c:636:             *(dst+j) = (*(src+j))<<shift;
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16705              		.loc 1 636 34 view .LVU5840
 16706 587a C5E5F3F9 		vpsllq	ymm7, ymm3, xmm1	# vect__104.706, tmp283, shift
 16707              	.LBE775:
 16708              	.LBB776:
 16709              	# sieve_extend.c:638:             *(dst+j) |= (*(src+1)>>(64-shift));
 638:sieve_extend.c ****     }
 16710              		.loc 1 638 22 view .LVU5841
 16711 587e C54DEBC7 		vpor	ymm8, ymm6, ymm7	# vect__58.707, vect__57.702, vect__104.706
 16712 5882 C57E7F04 		vmovdqu	YMMWORD PTR [rdi+rax], ymm8	# MEM[base: dst_34(D), index: ivtmp.715_114, offset: 0B], vect
 16712      07
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16713              		.loc 1 637 32 is_stmt 1 view .LVU5842
 16714              	.LVL1050:
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16715              		.loc 1 637 25 view .LVU5843
 16716              	.LBE776:
 633:sieve_extend.c ****     {
 16717              		.loc 1 633 24 view .LVU5844
 633:sieve_extend.c ****     {
 16718              		.loc 1 633 12 view .LVU5845
 16719 5887 4883C020 		add	rax, 32	# ivtmp.715,
 16720              	.L1522:
 16721              	.LVL1051:
 16722              	.LBB777:
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16723              		.loc 1 635 25 view .LVU5846
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16724              		.loc 1 636 13 view .LVU5847
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16725              		.loc 1 635 32 view .LVU5848
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16726              		.loc 1 635 25 view .LVU5849
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16727              		.loc 1 636 13 view .LVU5850
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16728              		.loc 1 635 32 view .LVU5851
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16729              		.loc 1 635 25 view .LVU5852
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16730              		.loc 1 636 13 view .LVU5853
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16731              		.loc 1 635 32 view .LVU5854
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16732              		.loc 1 635 25 view .LVU5855
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16733              		.loc 1 636 13 view .LVU5856
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16734              		.loc 1 635 32 view .LVU5857
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16735              		.loc 1 635 25 view .LVU5858
GAS LISTING /tmp/ccr2dACi.s 			page 446


 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16736              		.loc 1 635 25 is_stmt 0 view .LVU5859
 16737              	.LBE777:
 16738              	.LBB778:
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16739              		.loc 1 637 25 is_stmt 1 view .LVU5860
 638:sieve_extend.c ****     }
 16740              		.loc 1 638 13 view .LVU5861
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16741              		.loc 1 637 32 view .LVU5862
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16742              		.loc 1 637 25 view .LVU5863
 638:sieve_extend.c ****     }
 16743              		.loc 1 638 13 view .LVU5864
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16744              		.loc 1 637 32 view .LVU5865
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16745              		.loc 1 637 25 view .LVU5866
 638:sieve_extend.c ****     }
 16746              		.loc 1 638 13 view .LVU5867
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16747              		.loc 1 637 32 view .LVU5868
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16748              		.loc 1 637 25 view .LVU5869
 638:sieve_extend.c ****     }
 16749              		.loc 1 638 13 view .LVU5870
 16750              	.LBE778:
 16751              	.LBB779:
 16752              	# sieve_extend.c:636:             *(dst+j) = (*(src+j))<<shift;
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16753              		.loc 1 636 25 is_stmt 0 view .LVU5871
 16754 588b C463FD00 		vpermq	ymm9, YMMWORD PTR [rsi+rax], 85	# vect__102.701, MEM[base: src_35(D), index: ivtmp.715_114,
 16754      0C0655
 16755 5892 4183C101 		add	r9d, 1	# ivtmp.712,
 16756              	# sieve_extend.c:636:             *(dst+j) = (*(src+j))<<shift;
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16757              		.loc 1 636 34 view .LVU5872
 16758 5896 C57E6F1C 		vmovdqu	ymm11, YMMWORD PTR [rsi+rax]	# tmp284, MEM[base: src_35(D), index: ivtmp.715_114, offset: 
 16758      06
 16759              	.LBE779:
 16760              	.LBB780:
 16761              	# sieve_extend.c:638:             *(dst+j) |= (*(src+1)>>(64-shift));
 638:sieve_extend.c ****     }
 16762              		.loc 1 638 34 view .LVU5873
 16763 589b C535D3D0 		vpsrlq	ymm10, ymm9, xmm0	# vect__57.702, vect__102.701, _4
 16764              	.LBE780:
 16765              	.LBB781:
 16766              	# sieve_extend.c:636:             *(dst+j) = (*(src+j))<<shift;
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16767              		.loc 1 636 34 view .LVU5874
 16768 589f C525F3E1 		vpsllq	ymm12, ymm11, xmm1	# vect__104.706, tmp284, shift
 16769              	.LBE781:
 16770              	.LBB782:
 16771              	# sieve_extend.c:638:             *(dst+j) |= (*(src+1)>>(64-shift));
 638:sieve_extend.c ****     }
 16772              		.loc 1 638 22 view .LVU5875
 16773 58a3 C4412DEB 		vpor	ymm13, ymm10, ymm12	# vect__58.707, vect__57.702, vect__104.706
GAS LISTING /tmp/ccr2dACi.s 			page 447


 16773      EC
 16774 58a8 C57E7F2C 		vmovdqu	YMMWORD PTR [rdi+rax], ymm13	# MEM[base: dst_34(D), index: ivtmp.715_114, offset: 0B], vec
 16774      07
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16775              		.loc 1 637 32 is_stmt 1 view .LVU5876
 16776              	.LVL1052:
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16777              		.loc 1 637 25 view .LVU5877
 16778              	.LBE782:
 633:sieve_extend.c ****     {
 16779              		.loc 1 633 24 view .LVU5878
 633:sieve_extend.c ****     {
 16780              		.loc 1 633 12 view .LVU5879
 16781 58ad 4883C020 		add	rax, 32	# ivtmp.715,
 16782 58b1 4539CA   		cmp	r10d, r9d	# tmp164, ivtmp.712
 16783 58b4 0F863901 		jbe	.L1535	#,
 16783      0000
 16784              	.L1495:
 16785              	.LVL1053:
 16786              	.LBB783:
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16787              		.loc 1 635 25 view .LVU5880
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16788              		.loc 1 636 13 view .LVU5881
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16789              		.loc 1 635 32 view .LVU5882
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16790              		.loc 1 635 25 view .LVU5883
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16791              		.loc 1 636 13 view .LVU5884
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16792              		.loc 1 635 32 view .LVU5885
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16793              		.loc 1 635 25 view .LVU5886
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16794              		.loc 1 636 13 view .LVU5887
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16795              		.loc 1 635 32 view .LVU5888
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16796              		.loc 1 635 25 view .LVU5889
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16797              		.loc 1 636 13 view .LVU5890
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16798              		.loc 1 635 32 view .LVU5891
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16799              		.loc 1 635 25 view .LVU5892
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16800              		.loc 1 635 25 is_stmt 0 view .LVU5893
 16801              	.LBE783:
 16802              	.LBB784:
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16803              		.loc 1 637 25 is_stmt 1 view .LVU5894
 638:sieve_extend.c ****     }
 16804              		.loc 1 638 13 view .LVU5895
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16805              		.loc 1 637 32 view .LVU5896
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
GAS LISTING /tmp/ccr2dACi.s 			page 448


 16806              		.loc 1 637 25 view .LVU5897
 638:sieve_extend.c ****     }
 16807              		.loc 1 638 13 view .LVU5898
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16808              		.loc 1 637 32 view .LVU5899
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16809              		.loc 1 637 25 view .LVU5900
 638:sieve_extend.c ****     }
 16810              		.loc 1 638 13 view .LVU5901
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16811              		.loc 1 637 32 view .LVU5902
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16812              		.loc 1 637 25 view .LVU5903
 638:sieve_extend.c ****     }
 16813              		.loc 1 638 13 view .LVU5904
 16814              	.LBE784:
 16815              	.LBB785:
 16816              	# sieve_extend.c:636:             *(dst+j) = (*(src+j))<<shift;
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16817              		.loc 1 636 25 is_stmt 0 view .LVU5905
 16818 58ba C463FD00 		vpermq	ymm14, YMMWORD PTR [rsi+rax], 85	# vect__102.701, MEM[base: src_35(D), index: ivtmp.715_114
 16818      340655
 16819 58c1 C4E3FD00 		vpermq	ymm6, YMMWORD PTR 32[rsi+rax], 85	# vect__102.701, MEM[base: src_35(D), index: ivtmp.715_11
 16819      74062055 
 16820              	# sieve_extend.c:636:             *(dst+j) = (*(src+j))<<shift;
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16821              		.loc 1 636 34 view .LVU5906
 16822 58c9 C5FE6F14 		vmovdqu	ymm2, YMMWORD PTR [rsi+rax]	# tmp270, MEM[base: src_35(D), index: ivtmp.715_114, offset: 0
 16822      06
 16823              	# sieve_extend.c:636:             *(dst+j) = (*(src+j))<<shift;
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16824              		.loc 1 636 25 view .LVU5907
 16825 58ce C463FD00 		vpermq	ymm10, YMMWORD PTR 64[rsi+rax], 85	# vect__102.701, MEM[base: src_35(D), index: ivtmp.715_1
 16825      54064055 
 16826              	# sieve_extend.c:636:             *(dst+j) = (*(src+j))<<shift;
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16827              		.loc 1 636 34 view .LVU5908
 16828 58d6 C5FE6F5C 		vmovdqu	ymm3, YMMWORD PTR 32[rsi+rax]	# tmp271, MEM[base: src_35(D), index: ivtmp.715_114, offset:
 16828      0620
 16829 58dc 4183C108 		add	r9d, 8	# ivtmp.712,
 16830              	.LBE785:
 16831              	.LBB786:
 16832              	# sieve_extend.c:638:             *(dst+j) |= (*(src+1)>>(64-shift));
 638:sieve_extend.c ****     }
 16833              		.loc 1 638 34 view .LVU5909
 16834 58e0 C50DD3F8 		vpsrlq	ymm15, ymm14, xmm0	# vect__57.702, vect__102.701, _4
 16835 58e4 C5CDD3F8 		vpsrlq	ymm7, ymm6, xmm0	# vect__57.702, vect__102.701, _4
 16836              	.LBE786:
 16837              	.LBB787:
 16838              	# sieve_extend.c:636:             *(dst+j) = (*(src+j))<<shift;
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16839              		.loc 1 636 34 view .LVU5910
 16840 58e8 C5EDF3E9 		vpsllq	ymm5, ymm2, xmm1	# vect__104.706, tmp270, shift
 16841 58ec C565F3C1 		vpsllq	ymm8, ymm3, xmm1	# vect__104.706, tmp271, shift
 16842 58f0 C57E6F64 		vmovdqu	ymm12, YMMWORD PTR 64[rsi+rax]	# tmp272, MEM[base: src_35(D), index: ivtmp.715_114, offset
 16842      0640
 16843              	.LBE787:
GAS LISTING /tmp/ccr2dACi.s 			page 449


 16844              	.LBB788:
 16845              	# sieve_extend.c:638:             *(dst+j) |= (*(src+1)>>(64-shift));
 638:sieve_extend.c ****     }
 16846              		.loc 1 638 22 view .LVU5911
 16847 58f6 C585EBE5 		vpor	ymm4, ymm15, ymm5	# vect__58.707, vect__57.702, vect__104.706
 16848              	.LBE788:
 16849              	.LBB789:
 16850              	# sieve_extend.c:636:             *(dst+j) = (*(src+j))<<shift;
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16851              		.loc 1 636 34 view .LVU5912
 16852 58fa C5FE6F9C 		vmovdqu	ymm3, YMMWORD PTR 128[rsi+rax]	# tmp274, MEM[base: src_35(D), index: ivtmp.715_114, offset
 16852      06800000 
 16852      00
 16853              	.LBE789:
 16854              	.LBB790:
 16855              	# sieve_extend.c:638:             *(dst+j) |= (*(src+1)>>(64-shift));
 638:sieve_extend.c ****     }
 16856              		.loc 1 638 22 view .LVU5913
 16857 5903 C44145EB 		vpor	ymm9, ymm7, ymm8	# vect__58.707, vect__57.702, vect__104.706
 16857      C8
 16858              	.LBE790:
 16859              	.LBB791:
 16860              	# sieve_extend.c:636:             *(dst+j) = (*(src+j))<<shift;
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16861              		.loc 1 636 25 view .LVU5914
 16862 5908 C463FD00 		vpermq	ymm15, YMMWORD PTR 96[rsi+rax], 85	# vect__102.701, MEM[base: src_35(D), index: ivtmp.715_1
 16862      7C066055 
 16863 5910 C4E3FD00 		vpermq	ymm7, YMMWORD PTR 128[rsi+rax], 85	# vect__102.701, MEM[base: src_35(D), index: ivtmp.715_1
 16863      BC068000 
 16863      000055
 16864              	# sieve_extend.c:636:             *(dst+j) = (*(src+j))<<shift;
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16865              		.loc 1 636 34 view .LVU5915
 16866 591b C5FE6F6C 		vmovdqu	ymm5, YMMWORD PTR 96[rsi+rax]	# tmp273, MEM[base: src_35(D), index: ivtmp.715_114, offset:
 16866      0660
 16867              	.LBE791:
 16868              	.LBB792:
 16869              	# sieve_extend.c:638:             *(dst+j) |= (*(src+1)>>(64-shift));
 638:sieve_extend.c ****     }
 16870              		.loc 1 638 34 view .LVU5916
 16871 5921 C52DD3D8 		vpsrlq	ymm11, ymm10, xmm0	# vect__57.702, vect__102.701, _4
 16872              	.LBE792:
 16873              	.LBB793:
 16874              	# sieve_extend.c:636:             *(dst+j) = (*(src+j))<<shift;
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16875              		.loc 1 636 34 view .LVU5917
 16876 5925 C51DF3E9 		vpsllq	ymm13, ymm12, xmm1	# vect__104.706, tmp272, shift
 16877              	.LBE793:
 16878              	.LBB794:
 16879              	# sieve_extend.c:638:             *(dst+j) |= (*(src+1)>>(64-shift));
 638:sieve_extend.c ****     }
 16880              		.loc 1 638 34 view .LVU5918
 16881 5929 C585D3D0 		vpsrlq	ymm2, ymm15, xmm0	# vect__57.702, vect__102.701, _4
 16882              	# sieve_extend.c:638:             *(dst+j) |= (*(src+1)>>(64-shift));
 638:sieve_extend.c ****     }
 16883              		.loc 1 638 22 view .LVU5919
 16884 592d C5FE7F24 		vmovdqu	YMMWORD PTR [rdi+rax], ymm4	# MEM[base: dst_34(D), index: ivtmp.715_114, offset: 0B], vect
GAS LISTING /tmp/ccr2dACi.s 			page 450


 16884      07
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16885              		.loc 1 637 32 is_stmt 1 view .LVU5920
 16886              	.LVL1054:
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16887              		.loc 1 637 25 view .LVU5921
 16888              	.LBE794:
 633:sieve_extend.c ****     {
 16889              		.loc 1 633 24 view .LVU5922
 633:sieve_extend.c ****     {
 16890              		.loc 1 633 12 view .LVU5923
 16891              	.LBB795:
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16892              		.loc 1 635 25 view .LVU5924
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16893              		.loc 1 636 13 view .LVU5925
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16894              		.loc 1 635 32 view .LVU5926
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16895              		.loc 1 635 25 view .LVU5927
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16896              		.loc 1 636 13 view .LVU5928
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16897              		.loc 1 635 32 view .LVU5929
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16898              		.loc 1 635 25 view .LVU5930
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16899              		.loc 1 636 13 view .LVU5931
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16900              		.loc 1 635 32 view .LVU5932
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16901              		.loc 1 635 25 view .LVU5933
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16902              		.loc 1 636 13 view .LVU5934
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16903              		.loc 1 635 32 view .LVU5935
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16904              		.loc 1 635 25 view .LVU5936
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16905              		.loc 1 635 25 is_stmt 0 view .LVU5937
 16906              	.LBE795:
 16907              	.LBB796:
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16908              		.loc 1 637 25 is_stmt 1 view .LVU5938
 638:sieve_extend.c ****     }
 16909              		.loc 1 638 13 view .LVU5939
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16910              		.loc 1 637 32 view .LVU5940
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16911              		.loc 1 637 25 view .LVU5941
 638:sieve_extend.c ****     }
 16912              		.loc 1 638 13 view .LVU5942
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16913              		.loc 1 637 32 view .LVU5943
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16914              		.loc 1 637 25 view .LVU5944
 638:sieve_extend.c ****     }
GAS LISTING /tmp/ccr2dACi.s 			page 451


 16915              		.loc 1 638 13 view .LVU5945
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16916              		.loc 1 637 32 view .LVU5946
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16917              		.loc 1 637 25 view .LVU5947
 638:sieve_extend.c ****     }
 16918              		.loc 1 638 13 view .LVU5948
 16919              	# sieve_extend.c:638:             *(dst+j) |= (*(src+1)>>(64-shift));
 638:sieve_extend.c ****     }
 16920              		.loc 1 638 22 is_stmt 0 view .LVU5949
 16921 5932 C44125EB 		vpor	ymm14, ymm11, ymm13	# vect__58.707, vect__57.702, vect__104.706
 16921      F5
 16922              	# sieve_extend.c:638:             *(dst+j) |= (*(src+1)>>(64-shift));
 638:sieve_extend.c ****     }
 16923              		.loc 1 638 34 view .LVU5950
 16924 5937 C545D3C0 		vpsrlq	ymm8, ymm7, xmm0	# vect__57.702, vect__102.701, _4
 16925              	# sieve_extend.c:638:             *(dst+j) |= (*(src+1)>>(64-shift));
 638:sieve_extend.c ****     }
 16926              		.loc 1 638 22 view .LVU5951
 16927 593b C57E7F4C 		vmovdqu	YMMWORD PTR 32[rdi+rax], ymm9	# MEM[base: dst_34(D), index: ivtmp.715_114, offset: 0B], ve
 16927      0720
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16928              		.loc 1 637 32 is_stmt 1 view .LVU5952
 16929              	.LVL1055:
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16930              		.loc 1 637 25 view .LVU5953
 16931              	.LBE796:
 633:sieve_extend.c ****     {
 16932              		.loc 1 633 24 view .LVU5954
 633:sieve_extend.c ****     {
 16933              		.loc 1 633 12 view .LVU5955
 16934              	.LBB797:
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16935              		.loc 1 635 25 view .LVU5956
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16936              		.loc 1 636 13 view .LVU5957
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16937              		.loc 1 635 32 view .LVU5958
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16938              		.loc 1 635 25 view .LVU5959
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16939              		.loc 1 636 13 view .LVU5960
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16940              		.loc 1 635 32 view .LVU5961
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16941              		.loc 1 635 25 view .LVU5962
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16942              		.loc 1 636 13 view .LVU5963
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16943              		.loc 1 635 32 view .LVU5964
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16944              		.loc 1 635 25 view .LVU5965
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16945              		.loc 1 636 13 view .LVU5966
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16946              		.loc 1 635 32 view .LVU5967
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
GAS LISTING /tmp/ccr2dACi.s 			page 452


 16947              		.loc 1 635 25 view .LVU5968
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16948              		.loc 1 635 25 is_stmt 0 view .LVU5969
 16949              	.LBE797:
 16950              	.LBB798:
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16951              		.loc 1 637 25 is_stmt 1 view .LVU5970
 638:sieve_extend.c ****     }
 16952              		.loc 1 638 13 view .LVU5971
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16953              		.loc 1 637 32 view .LVU5972
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16954              		.loc 1 637 25 view .LVU5973
 638:sieve_extend.c ****     }
 16955              		.loc 1 638 13 view .LVU5974
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16956              		.loc 1 637 32 view .LVU5975
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16957              		.loc 1 637 25 view .LVU5976
 638:sieve_extend.c ****     }
 16958              		.loc 1 638 13 view .LVU5977
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16959              		.loc 1 637 32 view .LVU5978
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16960              		.loc 1 637 25 view .LVU5979
 638:sieve_extend.c ****     }
 16961              		.loc 1 638 13 view .LVU5980
 16962              	.LBE798:
 16963              	.LBB799:
 16964              	# sieve_extend.c:636:             *(dst+j) = (*(src+j))<<shift;
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16965              		.loc 1 636 25 is_stmt 0 view .LVU5981
 16966 5941 C463FD00 		vpermq	ymm11, YMMWORD PTR 160[rsi+rax], 85	# vect__102.701, MEM[base: src_35(D), index: ivtmp.715_
 16966      9C06A000 
 16966      000055
 16967              	# sieve_extend.c:636:             *(dst+j) = (*(src+j))<<shift;
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16968              		.loc 1 636 34 view .LVU5982
 16969 594c C5D5F3E1 		vpsllq	ymm4, ymm5, xmm1	# vect__104.706, tmp273, shift
 16970 5950 C565F3C9 		vpsllq	ymm9, ymm3, xmm1	# vect__104.706, tmp274, shift
 16971 5954 C57E6FAC 		vmovdqu	ymm13, YMMWORD PTR 160[rsi+rax]	# tmp275, MEM[base: src_35(D), index: ivtmp.715_114, offse
 16971      06A00000 
 16971      00
 16972              	.LBE799:
 16973              	.LBB800:
 16974              	# sieve_extend.c:638:             *(dst+j) |= (*(src+1)>>(64-shift));
 638:sieve_extend.c ****     }
 16975              		.loc 1 638 22 view .LVU5983
 16976 595d C5EDEBF4 		vpor	ymm6, ymm2, ymm4	# vect__58.707, vect__57.702, vect__104.706
 16977              	.LBE800:
 16978              	.LBB801:
 16979              	# sieve_extend.c:636:             *(dst+j) = (*(src+j))<<shift;
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16980              		.loc 1 636 34 view .LVU5984
 16981 5961 C5FE6F9C 		vmovdqu	ymm3, YMMWORD PTR 224[rsi+rax]	# tmp277, MEM[base: src_35(D), index: ivtmp.715_114, offset
 16981      06E00000 
 16981      00
GAS LISTING /tmp/ccr2dACi.s 			page 453


 16982              	.LBE801:
 16983              	.LBB802:
 16984              	# sieve_extend.c:638:             *(dst+j) |= (*(src+1)>>(64-shift));
 638:sieve_extend.c ****     }
 16985              		.loc 1 638 22 view .LVU5985
 16986 596a C4413DEB 		vpor	ymm10, ymm8, ymm9	# vect__58.707, vect__57.702, vect__104.706
 16986      D1
 16987              	.LBE802:
 16988              	.LBB803:
 16989              	# sieve_extend.c:636:             *(dst+j) = (*(src+j))<<shift;
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16990              		.loc 1 636 25 view .LVU5986
 16991 596f C4E3FD00 		vpermq	ymm2, YMMWORD PTR 192[rsi+rax], 85	# vect__102.701, MEM[base: src_35(D), index: ivtmp.715_1
 16991      9406C000 
 16991      000055
 16992 597a C463FD00 		vpermq	ymm8, YMMWORD PTR 224[rsi+rax], 85	# vect__102.701, MEM[base: src_35(D), index: ivtmp.715_1
 16992      8406E000 
 16992      000055
 16993              	# sieve_extend.c:636:             *(dst+j) = (*(src+j))<<shift;
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16994              		.loc 1 636 34 view .LVU5987
 16995 5985 C5FE6FA4 		vmovdqu	ymm4, YMMWORD PTR 192[rsi+rax]	# tmp276, MEM[base: src_35(D), index: ivtmp.715_114, offset
 16995      06C00000 
 16995      00
 16996              	.LBE803:
 16997              	.LBB804:
 16998              	# sieve_extend.c:638:             *(dst+j) |= (*(src+1)>>(64-shift));
 638:sieve_extend.c ****     }
 16999              		.loc 1 638 22 view .LVU5988
 17000 598e C57E7F74 		vmovdqu	YMMWORD PTR 64[rdi+rax], ymm14	# MEM[base: dst_34(D), index: ivtmp.715_114, offset: 0B], v
 17000      0740
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17001              		.loc 1 637 32 is_stmt 1 view .LVU5989
 17002              	.LVL1056:
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17003              		.loc 1 637 25 view .LVU5990
 17004              	.LBE804:
 633:sieve_extend.c ****     {
 17005              		.loc 1 633 24 view .LVU5991
 633:sieve_extend.c ****     {
 17006              		.loc 1 633 12 view .LVU5992
 17007              	.LBB805:
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17008              		.loc 1 635 25 view .LVU5993
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17009              		.loc 1 636 13 view .LVU5994
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17010              		.loc 1 635 32 view .LVU5995
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17011              		.loc 1 635 25 view .LVU5996
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17012              		.loc 1 636 13 view .LVU5997
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17013              		.loc 1 635 32 view .LVU5998
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17014              		.loc 1 635 25 view .LVU5999
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
GAS LISTING /tmp/ccr2dACi.s 			page 454


 17015              		.loc 1 636 13 view .LVU6000
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17016              		.loc 1 635 32 view .LVU6001
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17017              		.loc 1 635 25 view .LVU6002
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17018              		.loc 1 636 13 view .LVU6003
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17019              		.loc 1 635 32 view .LVU6004
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17020              		.loc 1 635 25 view .LVU6005
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17021              		.loc 1 635 25 is_stmt 0 view .LVU6006
 17022              	.LBE805:
 17023              	.LBB806:
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17024              		.loc 1 637 25 is_stmt 1 view .LVU6007
 638:sieve_extend.c ****     }
 17025              		.loc 1 638 13 view .LVU6008
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17026              		.loc 1 637 32 view .LVU6009
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17027              		.loc 1 637 25 view .LVU6010
 638:sieve_extend.c ****     }
 17028              		.loc 1 638 13 view .LVU6011
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17029              		.loc 1 637 32 view .LVU6012
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17030              		.loc 1 637 25 view .LVU6013
 638:sieve_extend.c ****     }
 17031              		.loc 1 638 13 view .LVU6014
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17032              		.loc 1 637 32 view .LVU6015
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17033              		.loc 1 637 25 view .LVU6016
 638:sieve_extend.c ****     }
 17034              		.loc 1 638 13 view .LVU6017
 17035              	# sieve_extend.c:638:             *(dst+j) |= (*(src+1)>>(64-shift));
 638:sieve_extend.c ****     }
 17036              		.loc 1 638 34 is_stmt 0 view .LVU6018
 17037 5994 C525D3E0 		vpsrlq	ymm12, ymm11, xmm0	# vect__57.702, vect__102.701, _4
 17038              	# sieve_extend.c:638:             *(dst+j) |= (*(src+1)>>(64-shift));
 638:sieve_extend.c ****     }
 17039              		.loc 1 638 22 view .LVU6019
 17040 5998 C5FE7F74 		vmovdqu	YMMWORD PTR 96[rdi+rax], ymm6	# MEM[base: dst_34(D), index: ivtmp.715_114, offset: 0B], ve
 17040      0760
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17041              		.loc 1 637 32 is_stmt 1 view .LVU6020
 17042              	.LVL1057:
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17043              		.loc 1 637 25 view .LVU6021
 17044              	.LBE806:
 633:sieve_extend.c ****     {
 17045              		.loc 1 633 24 view .LVU6022
 633:sieve_extend.c ****     {
 17046              		.loc 1 633 12 view .LVU6023
 17047              	.LBB807:
GAS LISTING /tmp/ccr2dACi.s 			page 455


 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17048              		.loc 1 635 25 view .LVU6024
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17049              		.loc 1 636 13 view .LVU6025
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17050              		.loc 1 635 32 view .LVU6026
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17051              		.loc 1 635 25 view .LVU6027
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17052              		.loc 1 636 13 view .LVU6028
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17053              		.loc 1 635 32 view .LVU6029
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17054              		.loc 1 635 25 view .LVU6030
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17055              		.loc 1 636 13 view .LVU6031
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17056              		.loc 1 635 32 view .LVU6032
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17057              		.loc 1 635 25 view .LVU6033
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17058              		.loc 1 636 13 view .LVU6034
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17059              		.loc 1 635 32 view .LVU6035
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17060              		.loc 1 635 25 view .LVU6036
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17061              		.loc 1 635 25 is_stmt 0 view .LVU6037
 17062              	.LBE807:
 17063              	.LBB808:
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17064              		.loc 1 637 25 is_stmt 1 view .LVU6038
 638:sieve_extend.c ****     }
 17065              		.loc 1 638 13 view .LVU6039
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17066              		.loc 1 637 32 view .LVU6040
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17067              		.loc 1 637 25 view .LVU6041
 638:sieve_extend.c ****     }
 17068              		.loc 1 638 13 view .LVU6042
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17069              		.loc 1 637 32 view .LVU6043
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17070              		.loc 1 637 25 view .LVU6044
 638:sieve_extend.c ****     }
 17071              		.loc 1 638 13 view .LVU6045
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17072              		.loc 1 637 32 view .LVU6046
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17073              		.loc 1 637 25 view .LVU6047
 638:sieve_extend.c ****     }
 17074              		.loc 1 638 13 view .LVU6048
 17075              	# sieve_extend.c:638:             *(dst+j) |= (*(src+1)>>(64-shift));
 638:sieve_extend.c ****     }
 17076              		.loc 1 638 22 is_stmt 0 view .LVU6049
 17077 599e C57E7F94 		vmovdqu	YMMWORD PTR 128[rdi+rax], ymm10	# MEM[base: dst_34(D), index: ivtmp.715_114, offset: 0B], 
 17077      07800000 
GAS LISTING /tmp/ccr2dACi.s 			page 456


 17077      00
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17078              		.loc 1 637 32 is_stmt 1 view .LVU6050
 17079              	.LVL1058:
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17080              		.loc 1 637 25 view .LVU6051
 17081              	.LBE808:
 633:sieve_extend.c ****     {
 17082              		.loc 1 633 24 view .LVU6052
 633:sieve_extend.c ****     {
 17083              		.loc 1 633 12 view .LVU6053
 17084              	.LBB809:
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17085              		.loc 1 635 25 view .LVU6054
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17086              		.loc 1 636 13 view .LVU6055
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17087              		.loc 1 635 32 view .LVU6056
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17088              		.loc 1 635 25 view .LVU6057
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17089              		.loc 1 636 13 view .LVU6058
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17090              		.loc 1 635 32 view .LVU6059
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17091              		.loc 1 635 25 view .LVU6060
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17092              		.loc 1 636 13 view .LVU6061
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17093              		.loc 1 635 32 view .LVU6062
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17094              		.loc 1 635 25 view .LVU6063
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17095              		.loc 1 636 13 view .LVU6064
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17096              		.loc 1 635 32 view .LVU6065
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17097              		.loc 1 635 25 view .LVU6066
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17098              		.loc 1 635 25 is_stmt 0 view .LVU6067
 17099              	.LBE809:
 17100              	.LBB810:
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17101              		.loc 1 637 25 is_stmt 1 view .LVU6068
 638:sieve_extend.c ****     }
 17102              		.loc 1 638 13 view .LVU6069
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17103              		.loc 1 637 32 view .LVU6070
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17104              		.loc 1 637 25 view .LVU6071
 638:sieve_extend.c ****     }
 17105              		.loc 1 638 13 view .LVU6072
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17106              		.loc 1 637 32 view .LVU6073
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17107              		.loc 1 637 25 view .LVU6074
 638:sieve_extend.c ****     }
GAS LISTING /tmp/ccr2dACi.s 			page 457


 17108              		.loc 1 638 13 view .LVU6075
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17109              		.loc 1 637 32 view .LVU6076
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17110              		.loc 1 637 25 view .LVU6077
 638:sieve_extend.c ****     }
 17111              		.loc 1 638 13 view .LVU6078
 17112              	# sieve_extend.c:638:             *(dst+j) |= (*(src+1)>>(64-shift));
 638:sieve_extend.c ****     }
 17113              		.loc 1 638 34 is_stmt 0 view .LVU6079
 17114 59a7 C5EDD3E8 		vpsrlq	ymm5, ymm2, xmm0	# vect__57.702, vect__102.701, _4
 17115              	.LBE810:
 17116              	.LBB811:
 17117              	# sieve_extend.c:636:             *(dst+j) = (*(src+j))<<shift;
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17118              		.loc 1 636 34 view .LVU6080
 17119 59ab C515F3F1 		vpsllq	ymm14, ymm13, xmm1	# vect__104.706, tmp275, shift
 17120              	.LBE811:
 17121              	.LBB812:
 17122              	# sieve_extend.c:638:             *(dst+j) |= (*(src+1)>>(64-shift));
 638:sieve_extend.c ****     }
 17123              		.loc 1 638 34 view .LVU6081
 17124 59af C53DD3C8 		vpsrlq	ymm9, ymm8, xmm0	# vect__57.702, vect__102.701, _4
 17125              	.LBE812:
 17126              	.LBB813:
 17127              	# sieve_extend.c:636:             *(dst+j) = (*(src+j))<<shift;
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17128              		.loc 1 636 34 view .LVU6082
 17129 59b3 C5DDF3F1 		vpsllq	ymm6, ymm4, xmm1	# vect__104.706, tmp276, shift
 17130 59b7 C565F3D1 		vpsllq	ymm10, ymm3, xmm1	# vect__104.706, tmp277, shift
 17131              	.LBE813:
 17132              	.LBB814:
 17133              	# sieve_extend.c:638:             *(dst+j) |= (*(src+1)>>(64-shift));
 638:sieve_extend.c ****     }
 17134              		.loc 1 638 22 view .LVU6083
 17135 59bb C4411DEB 		vpor	ymm15, ymm12, ymm14	# vect__58.707, vect__57.702, vect__104.706
 17135      FE
 17136 59c0 C5D5EBFE 		vpor	ymm7, ymm5, ymm6	# vect__58.707, vect__57.702, vect__104.706
 17137 59c4 C57E7FBC 		vmovdqu	YMMWORD PTR 160[rdi+rax], ymm15	# MEM[base: dst_34(D), index: ivtmp.715_114, offset: 0B], 
 17137      07A00000 
 17137      00
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17138              		.loc 1 637 32 is_stmt 1 view .LVU6084
 17139              	.LVL1059:
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17140              		.loc 1 637 25 view .LVU6085
 17141              	.LBE814:
 633:sieve_extend.c ****     {
 17142              		.loc 1 633 24 view .LVU6086
 633:sieve_extend.c ****     {
 17143              		.loc 1 633 12 view .LVU6087
 17144              	.LBB815:
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17145              		.loc 1 635 25 view .LVU6088
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17146              		.loc 1 636 13 view .LVU6089
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
GAS LISTING /tmp/ccr2dACi.s 			page 458


 17147              		.loc 1 635 32 view .LVU6090
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17148              		.loc 1 635 25 view .LVU6091
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17149              		.loc 1 636 13 view .LVU6092
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17150              		.loc 1 635 32 view .LVU6093
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17151              		.loc 1 635 25 view .LVU6094
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17152              		.loc 1 636 13 view .LVU6095
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17153              		.loc 1 635 32 view .LVU6096
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17154              		.loc 1 635 25 view .LVU6097
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17155              		.loc 1 636 13 view .LVU6098
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17156              		.loc 1 635 32 view .LVU6099
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17157              		.loc 1 635 25 view .LVU6100
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17158              		.loc 1 635 25 is_stmt 0 view .LVU6101
 17159              	.LBE815:
 17160              	.LBB816:
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17161              		.loc 1 637 25 is_stmt 1 view .LVU6102
 638:sieve_extend.c ****     }
 17162              		.loc 1 638 13 view .LVU6103
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17163              		.loc 1 637 32 view .LVU6104
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17164              		.loc 1 637 25 view .LVU6105
 638:sieve_extend.c ****     }
 17165              		.loc 1 638 13 view .LVU6106
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17166              		.loc 1 637 32 view .LVU6107
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17167              		.loc 1 637 25 view .LVU6108
 638:sieve_extend.c ****     }
 17168              		.loc 1 638 13 view .LVU6109
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17169              		.loc 1 637 32 view .LVU6110
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17170              		.loc 1 637 25 view .LVU6111
 638:sieve_extend.c ****     }
 17171              		.loc 1 638 13 view .LVU6112
 17172              	# sieve_extend.c:638:             *(dst+j) |= (*(src+1)>>(64-shift));
 638:sieve_extend.c ****     }
 17173              		.loc 1 638 22 is_stmt 0 view .LVU6113
 17174 59cd C44135EB 		vpor	ymm11, ymm9, ymm10	# vect__58.707, vect__57.702, vect__104.706
 17174      DA
 17175 59d2 C5FE7FBC 		vmovdqu	YMMWORD PTR 192[rdi+rax], ymm7	# MEM[base: dst_34(D), index: ivtmp.715_114, offset: 0B], v
 17175      07C00000 
 17175      00
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17176              		.loc 1 637 32 is_stmt 1 view .LVU6114
GAS LISTING /tmp/ccr2dACi.s 			page 459


 17177              	.LVL1060:
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17178              		.loc 1 637 25 view .LVU6115
 17179              	.LBE816:
 633:sieve_extend.c ****     {
 17180              		.loc 1 633 24 view .LVU6116
 633:sieve_extend.c ****     {
 17181              		.loc 1 633 12 view .LVU6117
 17182              	.LBB817:
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17183              		.loc 1 635 25 view .LVU6118
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17184              		.loc 1 636 13 view .LVU6119
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17185              		.loc 1 635 32 view .LVU6120
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17186              		.loc 1 635 25 view .LVU6121
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17187              		.loc 1 636 13 view .LVU6122
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17188              		.loc 1 635 32 view .LVU6123
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17189              		.loc 1 635 25 view .LVU6124
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17190              		.loc 1 636 13 view .LVU6125
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17191              		.loc 1 635 32 view .LVU6126
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17192              		.loc 1 635 25 view .LVU6127
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17193              		.loc 1 636 13 view .LVU6128
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17194              		.loc 1 635 32 view .LVU6129
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17195              		.loc 1 635 25 view .LVU6130
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17196              		.loc 1 635 25 is_stmt 0 view .LVU6131
 17197              	.LBE817:
 17198              	.LBB818:
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17199              		.loc 1 637 25 is_stmt 1 view .LVU6132
 638:sieve_extend.c ****     }
 17200              		.loc 1 638 13 view .LVU6133
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17201              		.loc 1 637 32 view .LVU6134
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17202              		.loc 1 637 25 view .LVU6135
 638:sieve_extend.c ****     }
 17203              		.loc 1 638 13 view .LVU6136
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17204              		.loc 1 637 32 view .LVU6137
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17205              		.loc 1 637 25 view .LVU6138
 638:sieve_extend.c ****     }
 17206              		.loc 1 638 13 view .LVU6139
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17207              		.loc 1 637 32 view .LVU6140
GAS LISTING /tmp/ccr2dACi.s 			page 460


 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17208              		.loc 1 637 25 view .LVU6141
 638:sieve_extend.c ****     }
 17209              		.loc 1 638 13 view .LVU6142
 17210              	# sieve_extend.c:638:             *(dst+j) |= (*(src+1)>>(64-shift));
 638:sieve_extend.c ****     }
 17211              		.loc 1 638 22 is_stmt 0 view .LVU6143
 17212 59db C57E7F9C 		vmovdqu	YMMWORD PTR 224[rdi+rax], ymm11	# MEM[base: dst_34(D), index: ivtmp.715_114, offset: 0B], 
 17212      07E00000 
 17212      00
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17213              		.loc 1 637 32 is_stmt 1 view .LVU6144
 17214              	.LVL1061:
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17215              		.loc 1 637 25 view .LVU6145
 17216              	.LBE818:
 633:sieve_extend.c ****     {
 17217              		.loc 1 633 24 view .LVU6146
 633:sieve_extend.c ****     {
 17218              		.loc 1 633 12 view .LVU6147
 17219 59e4 48050001 		add	rax, 256	# ivtmp.715,
 17219      0000
 17220 59ea 4539CA   		cmp	r10d, r9d	# tmp164, ivtmp.712
 17221 59ed 0F87C7FE 		ja	.L1495	#,
 17221      FFFF
 17222              	.L1535:
 17223 59f3 4589C3   		mov	r11d, r8d	# _25, _25
 17224 59f6 428D0495 		lea	eax, 0[0+r10*4]	# i,
 17224      00000000 
 17225 59fe 4983C301 		add	r11, 1	# tmp140,
 17226 5a02 49C1E305 		sal	r11, 5	# _105,
 17227 5a06 4C01DF   		add	rdi, r11	# dst, _105
 17228 5a09 4C01DE   		add	rsi, r11	# src, _105
 17229 5a0c C5F877   		vzeroupper
 17230              	.LVL1062:
 17231              	.L1496:
 640:sieve_extend.c ****     {
 17232              		.loc 1 640 12 view .LVU6148
 17233              	# sieve_extend.c:640:     for (; i < size; ++i,++src,++dst)
 640:sieve_extend.c ****     {
 17234              		.loc 1 640 5 is_stmt 0 view .LVU6149
 17235 5a0f 39C2     		cmp	edx, eax	# size, i
 17236 5a11 0F8E9400 		jle	.L1539	#,
 17236      0000
 17237              	# sieve_extend.c:642:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 642:sieve_extend.c ****     }    
 17238              		.loc 1 642 35 view .LVU6150
 17239 5a17 4C8B5608 		mov	r10, QWORD PTR 8[rsi]	# _57, MEM[(const uint64_t *)src_30 + 8B]
 17240 5a1b 41B84000 		mov	r8d, 64	# tmp142,
 17240      0000
 17241              	# sieve_extend.c:642:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 642:sieve_extend.c ****     }    
 17242              		.loc 1 642 23 view .LVU6151
 17243 5a21 C462F3F7 		shrx	r9, QWORD PTR [rsi], rcx	# tmp143, *src_30, shift
 17243      0E
 17244 5a26 4129C8   		sub	r8d, ecx	# _97, shift
 642:sieve_extend.c ****     }    
GAS LISTING /tmp/ccr2dACi.s 			page 461


 17245              		.loc 1 642 9 is_stmt 1 view .LVU6152
 17246              	# sieve_extend.c:642:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 642:sieve_extend.c ****     }    
 17247              		.loc 1 642 43 is_stmt 0 view .LVU6153
 17248 5a29 C442B9F7 		shlx	r11, r10, r8	# tmp145, _57, _97
 17248      DA
 17249              	# sieve_extend.c:642:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 642:sieve_extend.c ****     }    
 17250              		.loc 1 642 32 view .LVU6154
 17251 5a2e 4D09D9   		or	r9, r11	# tmp146, tmp145
 17252 5a31 4C890F   		mov	QWORD PTR [rdi], r9	# *dst_86, tmp146
 640:sieve_extend.c ****     {
 17253              		.loc 1 640 22 is_stmt 1 view .LVU6155
 17254              	.LVL1063:
 640:sieve_extend.c ****     {
 17255              		.loc 1 640 12 view .LVU6156
 17256              	# sieve_extend.c:640:     for (; i < size; ++i,++src,++dst)
 640:sieve_extend.c ****     {
 17257              		.loc 1 640 22 is_stmt 0 view .LVU6157
 17258 5a34 448D4801 		lea	r9d, 1[rax]	# i,
 17259              	.LVL1064:
 17260              	# sieve_extend.c:640:     for (; i < size; ++i,++src,++dst)
 640:sieve_extend.c ****     {
 17261              		.loc 1 640 5 view .LVU6158
 17262 5a38 4439CA   		cmp	edx, r9d	# size, i
 17263 5a3b 7E6D     		jle	.L1536	#,
 642:sieve_extend.c ****     }    
 17264              		.loc 1 642 9 is_stmt 1 view .LVU6159
 17265              	# sieve_extend.c:642:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 642:sieve_extend.c ****     }    
 17266              		.loc 1 642 35 is_stmt 0 view .LVU6160
 17267 5a3d 4C8B4E10 		mov	r9, QWORD PTR 16[rsi]	# _109, MEM[(const uint64_t *)src_30 + 16B]
 17268              	.LVL1065:
 17269              	# sieve_extend.c:642:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 642:sieve_extend.c ****     }    
 17270              		.loc 1 642 23 view .LVU6161
 17271 5a41 C442F3F7 		shrx	r10, r10, rcx	# tmp148, _57, shift
 17271      D2
 17272              	# sieve_extend.c:642:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 642:sieve_extend.c ****     }    
 17273              		.loc 1 642 43 view .LVU6162
 17274 5a46 C442B9F7 		shlx	r11, r9, r8	# tmp149, _109, _97
 17274      D9
 17275              	# sieve_extend.c:642:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 642:sieve_extend.c ****     }    
 17276              		.loc 1 642 32 view .LVU6163
 17277 5a4b 4D09DA   		or	r10, r11	# tmp150, tmp149
 17278 5a4e 4C895708 		mov	QWORD PTR 8[rdi], r10	# MEM[(uint64_t *)dst_86 + 8B], tmp150
 640:sieve_extend.c ****     {
 17279              		.loc 1 640 22 is_stmt 1 view .LVU6164
 17280              	.LVL1066:
 640:sieve_extend.c ****     {
 17281              		.loc 1 640 12 view .LVU6165
 17282              	# sieve_extend.c:640:     for (; i < size; ++i,++src,++dst)
 640:sieve_extend.c ****     {
 17283              		.loc 1 640 22 is_stmt 0 view .LVU6166
 17284 5a52 448D5002 		lea	r10d, 2[rax]	# i,
GAS LISTING /tmp/ccr2dACi.s 			page 462


 17285              	.LVL1067:
 17286              	# sieve_extend.c:640:     for (; i < size; ++i,++src,++dst)
 640:sieve_extend.c ****     {
 17287              		.loc 1 640 5 view .LVU6167
 17288 5a56 4439D2   		cmp	edx, r10d	# size, i
 17289 5a59 7E4F     		jle	.L1536	#,
 642:sieve_extend.c ****     }    
 17290              		.loc 1 642 9 is_stmt 1 view .LVU6168
 17291              	# sieve_extend.c:642:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 642:sieve_extend.c ****     }    
 17292              		.loc 1 642 35 is_stmt 0 view .LVU6169
 17293 5a5b 4C8B5618 		mov	r10, QWORD PTR 24[rsi]	# _54, MEM[(const uint64_t *)src_30 + 24B]
 17294              	.LVL1068:
 17295              	# sieve_extend.c:642:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 642:sieve_extend.c ****     }    
 17296              		.loc 1 642 23 view .LVU6170
 17297 5a5f C442F3F7 		shrx	r9, r9, rcx	# tmp152, _109, shift
 17297      C9
 17298              	# sieve_extend.c:642:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 642:sieve_extend.c ****     }    
 17299              		.loc 1 642 43 view .LVU6171
 17300 5a64 C442B9F7 		shlx	r11, r10, r8	# tmp153, _54, _97
 17300      DA
 17301              	# sieve_extend.c:642:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 642:sieve_extend.c ****     }    
 17302              		.loc 1 642 32 view .LVU6172
 17303 5a69 4D09D9   		or	r9, r11	# tmp154, tmp153
 17304 5a6c 4C894F10 		mov	QWORD PTR 16[rdi], r9	# MEM[(uint64_t *)dst_86 + 16B], tmp154
 640:sieve_extend.c ****     {
 17305              		.loc 1 640 22 is_stmt 1 view .LVU6173
 17306              	.LVL1069:
 640:sieve_extend.c ****     {
 17307              		.loc 1 640 12 view .LVU6174
 17308              	# sieve_extend.c:640:     for (; i < size; ++i,++src,++dst)
 640:sieve_extend.c ****     {
 17309              		.loc 1 640 22 is_stmt 0 view .LVU6175
 17310 5a70 448D4803 		lea	r9d, 3[rax]	# i,
 17311              	.LVL1070:
 17312              	# sieve_extend.c:640:     for (; i < size; ++i,++src,++dst)
 640:sieve_extend.c ****     {
 17313              		.loc 1 640 5 view .LVU6176
 17314 5a74 4439CA   		cmp	edx, r9d	# size, i
 17315 5a77 7E31     		jle	.L1536	#,
 642:sieve_extend.c ****     }    
 17316              		.loc 1 642 9 is_stmt 1 view .LVU6177
 17317              	# sieve_extend.c:642:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 642:sieve_extend.c ****     }    
 17318              		.loc 1 642 35 is_stmt 0 view .LVU6178
 17319 5a79 4C8B4E20 		mov	r9, QWORD PTR 32[rsi]	# _77, MEM[(const uint64_t *)src_30 + 32B]
 17320              	.LVL1071:
 17321              	# sieve_extend.c:640:     for (; i < size; ++i,++src,++dst)
 640:sieve_extend.c ****     {
 17322              		.loc 1 640 22 view .LVU6179
 17323 5a7d 83C004   		add	eax, 4	# i,
 17324              	.LVL1072:
 17325              	# sieve_extend.c:642:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 642:sieve_extend.c ****     }    
GAS LISTING /tmp/ccr2dACi.s 			page 463


 17326              		.loc 1 642 23 view .LVU6180
 17327 5a80 C442F3F7 		shrx	r10, r10, rcx	# tmp156, _54, shift
 17327      D2
 17328              	# sieve_extend.c:642:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 642:sieve_extend.c ****     }    
 17329              		.loc 1 642 43 view .LVU6181
 17330 5a85 C442B9F7 		shlx	r11, r9, r8	# tmp157, _77, _97
 17330      D9
 17331              	# sieve_extend.c:642:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 642:sieve_extend.c ****     }    
 17332              		.loc 1 642 32 view .LVU6182
 17333 5a8a 4D09DA   		or	r10, r11	# tmp158, tmp157
 17334              	# sieve_extend.c:640:     for (; i < size; ++i,++src,++dst)
 640:sieve_extend.c ****     {
 17335              		.loc 1 640 5 view .LVU6183
 17336 5a8d 39C2     		cmp	edx, eax	# size, i
 17337              	# sieve_extend.c:642:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 642:sieve_extend.c ****     }    
 17338              		.loc 1 642 32 view .LVU6184
 17339 5a8f 4C895718 		mov	QWORD PTR 24[rdi], r10	# MEM[(uint64_t *)dst_86 + 24B], tmp158
 640:sieve_extend.c ****     {
 17340              		.loc 1 640 22 is_stmt 1 view .LVU6185
 17341              	.LVL1073:
 640:sieve_extend.c ****     {
 17342              		.loc 1 640 12 view .LVU6186
 17343              	# sieve_extend.c:640:     for (; i < size; ++i,++src,++dst)
 640:sieve_extend.c ****     {
 17344              		.loc 1 640 5 is_stmt 0 view .LVU6187
 17345 5a93 7E15     		jle	.L1536	#,
 642:sieve_extend.c ****     }    
 17346              		.loc 1 642 9 is_stmt 1 discriminator 2 view .LVU6188
 17347              	# sieve_extend.c:642:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 642:sieve_extend.c ****     }    
 17348              		.loc 1 642 43 is_stmt 0 discriminator 2 view .LVU6189
 17349 5a95 488B5628 		mov	rdx, QWORD PTR 40[rsi]	# MEM[(const uint64_t *)src_30 + 40B], MEM[(const uint64_t *)src_30 + 4
 17350              	.LVL1074:
 17351              	# sieve_extend.c:642:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 642:sieve_extend.c ****     }    
 17352              		.loc 1 642 23 discriminator 2 view .LVU6190
 17353 5a99 C4C2F3F7 		shrx	rcx, r9, rcx	# tmp162, _77, shift
 17353      C9
 17354              	.LVL1075:
 17355              	# sieve_extend.c:642:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 642:sieve_extend.c ****     }    
 17356              		.loc 1 642 43 discriminator 2 view .LVU6191
 17357 5a9e C4E2B9F7 		shlx	rsi, rdx, r8	# tmp160, MEM[(const uint64_t *)src_30 + 40B], _97
 17357      F2
 17358              	.LVL1076:
 17359              	# sieve_extend.c:642:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 642:sieve_extend.c ****     }    
 17360              		.loc 1 642 32 discriminator 2 view .LVU6192
 17361 5aa3 4809F1   		or	rcx, rsi	# tmp163, tmp160
 17362 5aa6 48894F20 		mov	QWORD PTR 32[rdi], rcx	# MEM[(uint64_t *)dst_86 + 32B], tmp163
 640:sieve_extend.c ****     {
 17363              		.loc 1 640 22 is_stmt 1 discriminator 2 view .LVU6193
 17364              	.LVL1077:
 640:sieve_extend.c ****     {
GAS LISTING /tmp/ccr2dACi.s 			page 464


 17365              		.loc 1 640 12 discriminator 2 view .LVU6194
 17366              	.L1536:
 17367              	# sieve_extend.c:644: }
 644:sieve_extend.c **** 
 17368              		.loc 1 644 1 is_stmt 0 view .LVU6195
 17369 5aaa C3       		ret	
 17370              	.LVL1078:
 17371              	.L1539:
 644:sieve_extend.c **** 
 17372              		.loc 1 644 1 view .LVU6196
 17373 5aab C3       		ret	
 17374              	.LVL1079:
 17375              	.L1538:
 17376              	.LBB819:
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17377              		.loc 1 635 25 is_stmt 1 view .LVU6197
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17378              		.loc 1 636 13 view .LVU6198
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17379              		.loc 1 635 32 view .LVU6199
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17380              		.loc 1 635 25 view .LVU6200
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17381              		.loc 1 636 13 view .LVU6201
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17382              		.loc 1 635 32 view .LVU6202
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17383              		.loc 1 635 25 view .LVU6203
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17384              		.loc 1 636 13 view .LVU6204
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17385              		.loc 1 635 32 view .LVU6205
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17386              		.loc 1 635 25 view .LVU6206
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17387              		.loc 1 636 13 view .LVU6207
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17388              		.loc 1 635 32 view .LVU6208
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17389              		.loc 1 635 25 view .LVU6209
 635:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17390              		.loc 1 635 25 is_stmt 0 view .LVU6210
 17391              	.LBE819:
 17392              	.LBB820:
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17393              		.loc 1 637 25 is_stmt 1 view .LVU6211
 638:sieve_extend.c ****     }
 17394              		.loc 1 638 13 view .LVU6212
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17395              		.loc 1 637 32 view .LVU6213
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17396              		.loc 1 637 25 view .LVU6214
 638:sieve_extend.c ****     }
 17397              		.loc 1 638 13 view .LVU6215
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17398              		.loc 1 637 32 view .LVU6216
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
GAS LISTING /tmp/ccr2dACi.s 			page 465


 17399              		.loc 1 637 25 view .LVU6217
 638:sieve_extend.c ****     }
 17400              		.loc 1 638 13 view .LVU6218
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17401              		.loc 1 637 32 view .LVU6219
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17402              		.loc 1 637 25 view .LVU6220
 638:sieve_extend.c ****     }
 17403              		.loc 1 638 13 view .LVU6221
 17404              	.LBE820:
 17405              	.LBB821:
 17406              	# sieve_extend.c:636:             *(dst+j) = (*(src+j))<<shift;
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17407              		.loc 1 636 25 is_stmt 0 view .LVU6222
 17408 5aac C4E3FD00 		vpermq	ymm7, YMMWORD PTR 32[rsi], 85	# vect__102.701, MEM[base: src_35(D), index: ivtmp.715_114, o
 17408      7E2055
 17409 5ab3 41B90200 		mov	r9d, 2	# ivtmp.712,
 17409      0000
 17410              	# sieve_extend.c:636:             *(dst+j) = (*(src+j))<<shift;
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17411              		.loc 1 636 34 view .LVU6223
 17412 5ab9 C57E6F4E 		vmovdqu	ymm9, YMMWORD PTR 32[rsi]	# tmp278, MEM[base: src_35(D), index: ivtmp.715_114, offset: 0B]
 17412      20
 17413 5abe B8400000 		mov	eax, 64	# ivtmp.715,
 17413      00
 17414              	.LBE821:
 17415              	.LBB822:
 17416              	# sieve_extend.c:638:             *(dst+j) |= (*(src+1)>>(64-shift));
 638:sieve_extend.c ****     }
 17417              		.loc 1 638 34 view .LVU6224
 17418 5ac3 C545D3C0 		vpsrlq	ymm8, ymm7, xmm0	# vect__57.702, vect__102.701, _4
 17419              	.LBE822:
 17420              	.LBB823:
 17421              	# sieve_extend.c:636:             *(dst+j) = (*(src+j))<<shift;
 636:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17422              		.loc 1 636 34 view .LVU6225
 17423 5ac7 C535F3D1 		vpsllq	ymm10, ymm9, xmm1	# vect__104.706, tmp278, shift
 17424              	.LBE823:
 17425              	.LBB824:
 17426              	# sieve_extend.c:638:             *(dst+j) |= (*(src+1)>>(64-shift));
 638:sieve_extend.c ****     }
 17427              		.loc 1 638 22 view .LVU6226
 17428 5acb C4413DEB 		vpor	ymm11, ymm8, ymm10	# vect__58.707, vect__57.702, vect__104.706
 17428      DA
 17429 5ad0 C57E7F5F 		vmovdqu	YMMWORD PTR 32[rdi], ymm11	# MEM[base: dst_34(D), index: ivtmp.715_114, offset: 0B], vect_
 17429      20
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17430              		.loc 1 637 32 is_stmt 1 view .LVU6227
 17431              	.LVL1080:
 637:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17432              		.loc 1 637 25 view .LVU6228
 17433              	.LBE824:
 633:sieve_extend.c ****     {
 17434              		.loc 1 633 24 view .LVU6229
 633:sieve_extend.c ****     {
 17435              		.loc 1 633 12 view .LVU6230
 17436 5ad5 E9F6FCFF 		jmp	.L1527	#
GAS LISTING /tmp/ccr2dACi.s 			page 466


 17436      FF
 17437              	.LVL1081:
 17438              	.L1537:
 17439              	# sieve_extend.c:631:     int i = 0;
 631:sieve_extend.c ****     // MSVC: use steps of 2 for SSE, 4 for AVX2, 8 for AVX512
 17440              		.loc 1 631 9 is_stmt 0 view .LVU6231
 17441 5ada 31C0     		xor	eax, eax	# i
 17442 5adc E92EFFFF 		jmp	.L1496	#
 17442      FF
 17443              		.cfi_endproc
 17444              	.LFE67:
 17446              		.section	.rodata.str1.8,"aMS",@progbits,1
 17447              		.align 8
 17448              	.LC9:
 17449 0000 52657375 		.string	"Result: Sievesize %ju is expected to have %ju primes. algorithm produced %ju primes\n"
 17449      6C743A20 
 17449      53696576 
 17449      6573697A 
 17449      6520256A 
 17450 0055 000000   		.align 8
 17451              	.LC10:
 17452 0058 4E6F2076 		.string	"No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produced %j
 17452      616C6964 
 17452      20726573 
 17452      756C742E 
 17452      20536965 
 17453              		.section	.rodata.str1.1
 17454              	.LC11:
 17455 0023 44656570 		.string	"DeepAnalyzing"
 17455      416E616C 
 17455      797A696E 
 17455      6700
 17456              		.section	.rodata.str1.8
 17457 00bb 00000000 		.align 8
 17457      00
 17458              	.LC12:
 17459 00c0 4E756D62 		.string	"Number %ju (%ju) was marked prime, but %ju * %ju = %ju\n"
 17459      65722025 
 17459      6A752028 
 17459      256A7529 
 17459      20776173 
 17460              		.align 8
 17461              	.LC13:
 17462 00f8 4E756D62 		.string	"Number %ju (%ju) was marked non-prime, but no factors found. So it is prime\n"
 17462      65722025 
 17462      6A752028 
 17462      256A7529 
 17462      20776173 
 17463              		.text
 17464 5ae1 66662E0F 		.p2align 4
 17464      1F840000 
 17464      0000000F 
 17464      1F4000
 17465              		.globl	validatePrimeCount
 17467              	validatePrimeCount:
 17468              	.LVL1082:
 17469              	.LFB80:
GAS LISTING /tmp/ccr2dACi.s 			page 467


1106:sieve_extend.c **** 
 17470              		.loc 1 1106 76 is_stmt 1 view -0
 17471              		.cfi_startproc
1106:sieve_extend.c **** 
 17472              		.loc 1 1106 76 is_stmt 0 view .LVU6233
 17473 5af0 F30F1EFA 		endbr64	
1108:sieve_extend.c ****     counter_t valid_primes = 0;
 17474              		.loc 1 1108 5 is_stmt 1 view .LVU6234
 17475              	# sieve_extend.c:1106: int validatePrimeCount(struct sieve_state *sieve, int option_verboselevel) {
1106:sieve_extend.c **** 
 17476              		.loc 1 1106 76 is_stmt 0 view .LVU6235
 17477 5af4 4157     		push	r15	#
 17478              		.cfi_def_cfa_offset 16
 17479              		.cfi_offset 15, -16
 17480 5af6 4156     		push	r14	#
 17481              		.cfi_def_cfa_offset 24
 17482              		.cfi_offset 14, -24
 17483 5af8 4155     		push	r13	#
 17484              		.cfi_def_cfa_offset 32
 17485              		.cfi_offset 13, -32
 17486 5afa 4154     		push	r12	#
 17487              		.cfi_def_cfa_offset 40
 17488              		.cfi_offset 12, -40
 17489 5afc 55       		push	rbp	#
 17490              		.cfi_def_cfa_offset 48
 17491              		.cfi_offset 6, -48
 17492 5afd 4889FD   		mov	rbp, rdi	# sieve, tmp307
 17493 5b00 53       		push	rbx	#
 17494              		.cfi_def_cfa_offset 56
 17495              		.cfi_offset 3, -56
 17496 5b01 89F3     		mov	ebx, esi	# option_verboselevel, tmp308
 17497 5b03 488D6424 		lea	rsp, -56[rsp]	#,
 17497      C8
 17498              		.cfi_def_cfa_offset 112
 17499              	# sieve_extend.c:1108:     counter_t primecount = count_primes(sieve);
1108:sieve_extend.c ****     counter_t valid_primes = 0;
 17500              		.loc 1 1108 28 view .LVU6236
 17501 5b08 488B17   		mov	rdx, QWORD PTR [rdi]	# _24, MEM[(uint64_t * *)sieve_18(D)]
 17502 5b0b 488B7F08 		mov	rdi, QWORD PTR 8[rdi]	# _25, MEM[(long unsigned int *)sieve_18(D) + 8B]
 17503              	.LVL1083:
 17504              	.LBB846:
 17505              	.LBI846:
1077:sieve_extend.c ****     counter_t primeCount = 1;
 17506              		.loc 1 1077 18 is_stmt 1 view .LVU6237
 17507              	.LBB847:
 17508              	.LBB848:
1079:sieve_extend.c ****     return primeCount;
 17509              		.loc 1 1079 30 view .LVU6238
 17510 5b0f 4C8B4D10 		mov	r9, QWORD PTR 16[rbp]	# pretmp_199, sieve_18(D)->size
 17511              	# sieve_extend.c:1079:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(s
1079:sieve_extend.c ****     return primeCount;
 17512              		.loc 1 1079 5 is_stmt 0 view .LVU6239
 17513 5b13 4883FF01 		cmp	rdi, 1	# _25,
 17514 5b17 0F860B05 		jbe	.L1541	#,
 17514      0000
 17515              	# sieve_extend.c:1079:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(s
1079:sieve_extend.c ****     return primeCount;
GAS LISTING /tmp/ccr2dACi.s 			page 468


 17516              		.loc 1 1079 20 view .LVU6240
 17517 5b1d B8010000 		mov	eax, 1	# factor,
 17517      00
 17518              	.LBE848:
 17519              	# sieve_extend.c:1078:     counter_t primeCount = 1;
1078:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitarray, factor+
 17520              		.loc 1 1078 15 view .LVU6241
 17521 5b22 41B80100 		mov	r8d, 1	# primeCount,
 17521      0000
 17522              	.LVL1084:
 17523 5b28 0F1F8400 		.p2align 4
 17523      00000000 
 17524              		.p2align 3
 17525              	.L1544:
 17526              	.LBB851:
1079:sieve_extend.c ****     return primeCount;
 17527              		.loc 1 1079 104 is_stmt 1 view .LVU6242
 17528              	# sieve_extend.c:1079:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(s
1079:sieve_extend.c ****     return primeCount;
 17529              		.loc 1 1079 114 is_stmt 0 view .LVU6243
 17530 5b30 4983C001 		add	r8, 1	# primeCount,
 17531              	.LVL1085:
1079:sieve_extend.c ****     return primeCount;
 17532              		.loc 1 1079 52 is_stmt 1 view .LVU6244
 17533              	# sieve_extend.c:1079:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(s
1079:sieve_extend.c ****     return primeCount;
 17534              		.loc 1 1079 61 is_stmt 0 view .LVU6245
 17535 5b34 4883C001 		add	rax, 1	# factor,
 17536              	.LVL1086:
 17537              	.L1684:
 17538              	.LBB849:
 17539              	.LBI849:
 122:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 17540              		.loc 1 122 25 is_stmt 1 view .LVU6246
 17541              	.LBB850:
 123:sieve_extend.c ****     return index;
 17542              		.loc 1 123 5 view .LVU6247
 123:sieve_extend.c ****     return index;
 17543              		.loc 1 123 11 view .LVU6248
 17544              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 17545              		.loc 1 123 21 is_stmt 0 view .LVU6249
 17546 5b38 4889C1   		mov	rcx, rax	# tmp162, factor
 17547 5b3b 48C1E906 		shr	rcx, 6	# tmp162,
 17548              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 17549              		.loc 1 123 12 view .LVU6250
 17550 5b3f 4C8B1CCA 		mov	r11, QWORD PTR [rdx+rcx*8]	# *_106,* _24
 17551              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 17552              		.loc 1 123 11 view .LVU6251
 17553 5b43 490FA3C3 		bt	r11, rax	# *_106, factor
 17554 5b47 0F83AB00 		jnc	.L1542	#,
 17554      0000
 123:sieve_extend.c ****     return index;
 17555              		.loc 1 123 58 is_stmt 1 view .LVU6252
 17556              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
GAS LISTING /tmp/ccr2dACi.s 			page 469


 123:sieve_extend.c ****     return index;
 17557              		.loc 1 123 63 is_stmt 0 view .LVU6253
 17558 5b4d 4C8D6001 		lea	r12, 1[rax]	# tmp235,
 17559              	.LVL1087:
 17560              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 17561              		.loc 1 123 21 view .LVU6254
 17562 5b51 4D89E5   		mov	r13, r12	# tmp167, factor
 17563              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 17564              		.loc 1 123 63 view .LVU6255
 17565 5b54 4C89E0   		mov	rax, r12	# factor, tmp235
 123:sieve_extend.c ****     return index;
 17566              		.loc 1 123 11 is_stmt 1 view .LVU6256
 17567              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 17568              		.loc 1 123 21 is_stmt 0 view .LVU6257
 17569 5b57 49C1ED06 		shr	r13, 6	# tmp167,
 17570              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 17571              		.loc 1 123 12 view .LVU6258
 17572 5b5b 4E8B3CEA 		mov	r15, QWORD PTR [rdx+r13*8]	# *_35, *_35
 17573              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 17574              		.loc 1 123 11 view .LVU6259
 17575 5b5f 4D0FA3E7 		bt	r15, r12	# *_35, factor
 17576 5b63 0F838F00 		jnc	.L1542	#,
 17576      0000
 123:sieve_extend.c ****     return index;
 17577              		.loc 1 123 58 is_stmt 1 view .LVU6260
 17578              	.LVL1088:
 17579              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 17580              		.loc 1 123 63 is_stmt 0 view .LVU6261
 17581 5b69 4883C001 		add	rax, 1	# factor,
 17582              	.LVL1089:
 123:sieve_extend.c ****     return index;
 17583              		.loc 1 123 11 is_stmt 1 view .LVU6262
 17584              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 17585              		.loc 1 123 21 is_stmt 0 view .LVU6263
 17586 5b6d 4989C6   		mov	r14, rax	# tmp279, factor
 17587 5b70 49C1EE06 		shr	r14, 6	# tmp279,
 17588              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 17589              		.loc 1 123 12 view .LVU6264
 17590 5b74 4A8B34F2 		mov	rsi, QWORD PTR [rdx+r14*8]	# *_35, *_35
 17591              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 17592              		.loc 1 123 11 view .LVU6265
 17593 5b78 480FA3C6 		bt	rsi, rax	# *_35, factor
 17594 5b7c 737A     		jnc	.L1542	#,
 123:sieve_extend.c ****     return index;
 17595              		.loc 1 123 58 is_stmt 1 view .LVU6266
 17596              	.LVL1090:
 17597              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
GAS LISTING /tmp/ccr2dACi.s 			page 470


 17598              		.loc 1 123 63 is_stmt 0 view .LVU6267
 17599 5b7e 498D4424 		lea	rax, 2[r12]	# factor,
 17599      02
 17600              	.LVL1091:
 123:sieve_extend.c ****     return index;
 17601              		.loc 1 123 11 is_stmt 1 view .LVU6268
 17602              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 17603              		.loc 1 123 21 is_stmt 0 view .LVU6269
 17604 5b83 4989C2   		mov	r10, rax	# tmp283, factor
 17605 5b86 49C1EA06 		shr	r10, 6	# tmp283,
 17606              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 17607              		.loc 1 123 12 view .LVU6270
 17608 5b8a 4A8B0CD2 		mov	rcx, QWORD PTR [rdx+r10*8]	# *_35, *_35
 17609              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 17610              		.loc 1 123 11 view .LVU6271
 17611 5b8e 480FA3C1 		bt	rcx, rax	# *_35, factor
 17612 5b92 7364     		jnc	.L1542	#,
 123:sieve_extend.c ****     return index;
 17613              		.loc 1 123 58 is_stmt 1 view .LVU6272
 17614              	.LVL1092:
 17615              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 17616              		.loc 1 123 63 is_stmt 0 view .LVU6273
 17617 5b94 498D4424 		lea	rax, 3[r12]	# factor,
 17617      03
 17618              	.LVL1093:
 123:sieve_extend.c ****     return index;
 17619              		.loc 1 123 11 is_stmt 1 view .LVU6274
 17620              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 17621              		.loc 1 123 21 is_stmt 0 view .LVU6275
 17622 5b99 4989C3   		mov	r11, rax	# tmp287, factor
 17623 5b9c 49C1EB06 		shr	r11, 6	# tmp287,
 17624              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 17625              		.loc 1 123 12 view .LVU6276
 17626 5ba0 4E8B2CDA 		mov	r13, QWORD PTR [rdx+r11*8]	# *_35, *_35
 17627              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 17628              		.loc 1 123 11 view .LVU6277
 17629 5ba4 490FA3C5 		bt	r13, rax	# *_35, factor
 17630 5ba8 734E     		jnc	.L1542	#,
 123:sieve_extend.c ****     return index;
 17631              		.loc 1 123 58 is_stmt 1 view .LVU6278
 17632              	.LVL1094:
 17633              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 17634              		.loc 1 123 63 is_stmt 0 view .LVU6279
 17635 5baa 498D4424 		lea	rax, 4[r12]	# factor,
 17635      04
 17636              	.LVL1095:
 123:sieve_extend.c ****     return index;
 17637              		.loc 1 123 11 is_stmt 1 view .LVU6280
 17638              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
GAS LISTING /tmp/ccr2dACi.s 			page 471


 123:sieve_extend.c ****     return index;
 17639              		.loc 1 123 21 is_stmt 0 view .LVU6281
 17640 5baf 4989C7   		mov	r15, rax	# tmp291, factor
 17641 5bb2 49C1EF06 		shr	r15, 6	# tmp291,
 17642              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 17643              		.loc 1 123 12 view .LVU6282
 17644 5bb6 4E8B34FA 		mov	r14, QWORD PTR [rdx+r15*8]	# *_35, *_35
 17645              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 17646              		.loc 1 123 11 view .LVU6283
 17647 5bba 490FA3C6 		bt	r14, rax	# *_35, factor
 17648 5bbe 7338     		jnc	.L1542	#,
 123:sieve_extend.c ****     return index;
 17649              		.loc 1 123 58 is_stmt 1 view .LVU6284
 17650              	.LVL1096:
 17651              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 17652              		.loc 1 123 63 is_stmt 0 view .LVU6285
 17653 5bc0 498D4424 		lea	rax, 5[r12]	# factor,
 17653      05
 17654              	.LVL1097:
 123:sieve_extend.c ****     return index;
 17655              		.loc 1 123 11 is_stmt 1 view .LVU6286
 17656              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 17657              		.loc 1 123 21 is_stmt 0 view .LVU6287
 17658 5bc5 4889C6   		mov	rsi, rax	# tmp295, factor
 17659 5bc8 48C1EE06 		shr	rsi, 6	# tmp295,
 17660              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 17661              		.loc 1 123 12 view .LVU6288
 17662 5bcc 4C8B14F2 		mov	r10, QWORD PTR [rdx+rsi*8]	# *_35, *_35
 17663              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 17664              		.loc 1 123 11 view .LVU6289
 17665 5bd0 490FA3C2 		bt	r10, rax	# *_35, factor
 17666 5bd4 7322     		jnc	.L1542	#,
 123:sieve_extend.c ****     return index;
 17667              		.loc 1 123 58 is_stmt 1 view .LVU6290
 17668              	.LVL1098:
 17669              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 17670              		.loc 1 123 63 is_stmt 0 view .LVU6291
 17671 5bd6 498D4424 		lea	rax, 6[r12]	# factor,
 17671      06
 17672              	.LVL1099:
 123:sieve_extend.c ****     return index;
 17673              		.loc 1 123 11 is_stmt 1 view .LVU6292
 17674              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 17675              		.loc 1 123 21 is_stmt 0 view .LVU6293
 17676 5bdb 4889C1   		mov	rcx, rax	# tmp299, factor
 17677 5bde 48C1E906 		shr	rcx, 6	# tmp299,
 17678              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 17679              		.loc 1 123 12 view .LVU6294
GAS LISTING /tmp/ccr2dACi.s 			page 472


 17680 5be2 4C8B1CCA 		mov	r11, QWORD PTR [rdx+rcx*8]	# *_35, *_35
 17681              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 17682              		.loc 1 123 11 view .LVU6295
 17683 5be6 490FA3C3 		bt	r11, rax	# *_35, factor
 17684 5bea 730C     		jnc	.L1542	#,
 123:sieve_extend.c ****     return index;
 17685              		.loc 1 123 58 is_stmt 1 view .LVU6296
 17686              	.LVL1100:
 17687              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 17688              		.loc 1 123 63 is_stmt 0 view .LVU6297
 17689 5bec 498D4424 		lea	rax, 7[r12]	# factor,
 17689      07
 17690              	.LVL1101:
 123:sieve_extend.c ****     return index;
 17691              		.loc 1 123 11 is_stmt 1 view .LVU6298
 17692 5bf1 E942FFFF 		jmp	.L1684	#
 17692      FF
 17693              		.p2align 4,,7
 17694 5bf6 6690     		.p2align 3
 17695              	.L1542:
 17696              	.LVL1102:
 123:sieve_extend.c ****     return index;
 17697              		.loc 1 123 11 is_stmt 0 view .LVU6299
 17698              	.LBE850:
 17699              	.LBE849:
1079:sieve_extend.c ****     return primeCount;
 17700              		.loc 1 1079 30 is_stmt 1 view .LVU6300
 17701              	# sieve_extend.c:1079:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(s
1079:sieve_extend.c ****     return primeCount;
 17702              		.loc 1 1079 5 is_stmt 0 view .LVU6301
 17703 5bf8 4839C7   		cmp	rdi, rax	# _25, factor
 17704 5bfb 0F872FFF 		ja	.L1544	#,
 17704      FFFF
1079:sieve_extend.c ****     return primeCount;
 17705              		.loc 1 1079 5 view .LVU6302
 17706              	.LBE851:
1080:sieve_extend.c **** }
 17707              		.loc 1 1080 5 is_stmt 1 view .LVU6303
 17708              	.LVL1103:
1080:sieve_extend.c **** }
 17709              		.loc 1 1080 5 is_stmt 0 view .LVU6304
 17710              	.LBE847:
 17711              	.LBE846:
1109:sieve_extend.c ****     switch(sieve->size) {
 17712              		.loc 1 1109 5 is_stmt 1 view .LVU6305
1110:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 17713              		.loc 1 1110 5 view .LVU6306
 17714 5c01 83FB03   		cmp	ebx, 3	# option_verboselevel,
 17715 5c04 0F9FC2   		setg	dl	#, tmp172
 17716 5c07 4981F9A0 		cmp	r9, 100000	# pretmp_199,
 17716      860100
 17717 5c0e 0F842D06 		je	.L1545	#,
 17717      0000
 17718 5c14 0F86CC02 		jbe	.L1685	#,
 17718      0000
GAS LISTING /tmp/ccr2dACi.s 			page 473


 17719 5c1a 4981F900 		cmp	r9, 100000000	# pretmp_199,
 17719      E1F505
 17720 5c21 0F84D905 		je	.L1553	#,
 17720      0000
 17721              		.p2align 4,,4
 17722 5c27 0F863303 		jbe	.L1686	#,
 17722      0000
 17723 5c2d 4981F900 		cmp	r9, 1000000000	# pretmp_199,
 17723      CA9A3B
 17724 5c34 0F85EB05 		jne	.L1551	#,
 17724      0000
 17725 5c3a 4981F82E 		cmp	r8, 50847534	# primeCount,
 17725      DF0703
 17726              	# sieve_extend.c:1119:         case 1000000000:    valid_primes = 50847534; break;
1119:sieve_extend.c ****         default:            valid_primes= 0;
 17727              		.loc 1 1119 42 is_stmt 0 view .LVU6307
 17728 5c41 B92EDF07 		mov	ecx, 50847534	# valid_primes,
 17728      03
 17729 5c46 410F94C4 		sete	r12b	#, tmp189
 17730 5c4a 4421E2   		and	edx, r12d	# _251, tmp189
 17731 5c4d 4981F82E 		cmp	r8, 50847534	# primeCount,
 17731      DF0703
 17732 5c54 450FB6EC 		movzx	r13d, r12b	# <retval>, tmp189
 17733 5c58 410F95C6 		setne	r14b	#, _135
1119:sieve_extend.c ****         default:            valid_primes= 0;
 17734              		.loc 1 1119 29 is_stmt 1 view .LVU6308
 17735              	.LVL1104:
1119:sieve_extend.c ****         default:            valid_primes= 0;
 17736              		.loc 1 1119 54 view .LVU6309
 17737 5c5c 0F1F4000 		.p2align 4
 17738              		.p2align 3
 17739              	.L1558:
1123:sieve_extend.c ****     if (valid  && option_verboselevel >= 4) printf("Result: Sievesize %ju is expected to have %ju p
 17740              		.loc 1 1123 5 view .LVU6310
1124:sieve_extend.c ****     if (!valid && option_verboselevel >= 1) {
 17741              		.loc 1 1124 5 view .LVU6311
 17742              	# sieve_extend.c:1124:     if (valid  && option_verboselevel >= 4) printf("Result: Sievesize %ju is
1124:sieve_extend.c ****     if (!valid && option_verboselevel >= 1) {
 17743              		.loc 1 1124 8 is_stmt 0 view .LVU6312
 17744 5c60 84D2     		test	dl, dl	# _251
 17745 5c62 0F841704 		je	.L1559	#,
 17745      0000
1124:sieve_extend.c ****     if (!valid && option_verboselevel >= 1) {
 17746              		.loc 1 1124 45 is_stmt 1 discriminator 1 view .LVU6313
 17747              	.LVL1105:
 17748              	.LBB853:
 17749              	.LBI853:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17750              		.loc 3 105 1 discriminator 1 view .LVU6314
 17751              	.LBB854:
 17752              		.loc 3 107 3 discriminator 1 view .LVU6315
 17753              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17754              		.loc 3 107 10 is_stmt 0 discriminator 1 view .LVU6316
 17755 5c68 4C89CA   		mov	rdx, r9	#, pretmp_199
 17756 5c6b 488D3500 		lea	rsi, .LC9[rip]	#,
 17756      000000
 17757 5c72 BF010000 		mov	edi, 1	#,
GAS LISTING /tmp/ccr2dACi.s 			page 474


 17757      00
 17758 5c77 31C0     		xor	eax, eax	#
 17759 5c79 E8000000 		call	__printf_chk@PLT	#
 17759      00
 17760              	.LVL1106:
 17761              		.loc 3 107 10 discriminator 1 view .LVU6317
 17762              	.LBE854:
 17763              	.LBE853:
1125:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 17764              		.loc 1 1125 5 is_stmt 1 discriminator 1 view .LVU6318
 17765              	.L1560:
1129:sieve_extend.c ****     return (valid);
 17766              		.loc 1 1129 5 view .LVU6319
 17767              	# sieve_extend.c:1129:     if (!valid && option_verboselevel >= 3) deepAnalyzePrimes(sieve);
1129:sieve_extend.c ****     return (valid);
 17768              		.loc 1 1129 8 is_stmt 0 view .LVU6320
 17769 5c7e 83FB02   		cmp	ebx, 2	# option_verboselevel,
 17770 5c81 0F8E4C02 		jle	.L1540	#,
 17770      0000
 17771 5c87 4584F6   		test	r14b, r14b	# _135
 17772 5c8a 0F844302 		je	.L1540	#,
 17772      0000
1129:sieve_extend.c ****     return (valid);
 17773              		.loc 1 1129 45 is_stmt 1 discriminator 1 view .LVU6321
 17774              	.LBB855:
 17775              	.LBI855:
1083:sieve_extend.c ****     printf("DeepAnalyzing\n");
 17776              		.loc 1 1083 13 discriminator 1 view .LVU6322
 17777              	.LVL1107:
 17778              	.LBB856:
1084:sieve_extend.c ****     counter_t warn_prime = 0;
 17779              		.loc 1 1084 5 discriminator 1 view .LVU6323
 17780              	.LBB857:
 17781              	.LBI857:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17782              		.loc 3 105 1 discriminator 1 view .LVU6324
 17783              	.LBB858:
 17784              		.loc 3 107 3 discriminator 1 view .LVU6325
 17785              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17786              		.loc 3 107 10 is_stmt 0 discriminator 1 view .LVU6326
 17787 5c90 488D3D00 		lea	rdi, .LC11[rip]	#,
 17787      000000
 17788 5c97 E8000000 		call	puts@PLT	#
 17788      00
 17789              	.LVL1108:
 17790              		.loc 3 107 10 discriminator 1 view .LVU6327
 17791              	.LBE858:
 17792              	.LBE857:
1085:sieve_extend.c ****     counter_t warn_nonprime = 0;
 17793              		.loc 1 1085 5 is_stmt 1 discriminator 1 view .LVU6328
1086:sieve_extend.c ****     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 17794              		.loc 1 1086 5 discriminator 1 view .LVU6329
1087:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 17795              		.loc 1 1087 5 discriminator 1 view .LVU6330
 17796              	.LBB859:
1087:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 17797              		.loc 1 1087 10 discriminator 1 view .LVU6331
GAS LISTING /tmp/ccr2dACi.s 			page 475


1087:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 17798              		.loc 1 1087 31 discriminator 1 view .LVU6332
 17799              	# sieve_extend.c:1087:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
1087:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 17800              		.loc 1 1087 44 is_stmt 0 discriminator 1 view .LVU6333
 17801 5c9c 488B7D08 		mov	rdi, QWORD PTR 8[rbp]	# _137, MEM[(uint64_t *)sieve_18(D) + 8B]
 17802              	# sieve_extend.c:1087:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
1087:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 17803              		.loc 1 1087 5 discriminator 1 view .LVU6334
 17804 5ca0 4883FF01 		cmp	rdi, 1	# _137,
 17805 5ca4 0F862902 		jbe	.L1540	#,
 17805      0000
 17806              	.LBB860:
 17807              	.LBB861:
 17808              	.LBB862:
 17809              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17810              		.loc 3 107 10 view .LVU6335
 17811 5caa 44896C24 		mov	DWORD PTR 36[rsp], r13d	# %sfp, <retval>
 17811      24
 17812              	.LBE862:
 17813              	.LBE861:
 17814              	.LBE860:
 17815              	# sieve_extend.c:1087:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
1087:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 17816              		.loc 1 1087 5 view .LVU6336
 17817 5caf 41BE0200 		mov	r14d, 2	# ivtmp.748,
 17817      0000
 17818 5cb5 41BC0300 		mov	r12d, 3	# ivtmp.746,
 17818      0000
 17819              	.LBE859:
 17820              	# sieve_extend.c:1085:     counter_t warn_prime = 0;
1085:sieve_extend.c ****     counter_t warn_nonprime = 0;
 17821              		.loc 1 1085 15 view .LVU6337
 17822 5cbb 4531C0   		xor	r8d, r8d	# warn_prime
 17823              	# sieve_extend.c:1086:     counter_t warn_nonprime = 0;
1086:sieve_extend.c ****     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 17824              		.loc 1 1086 15 view .LVU6338
 17825 5cbe 48C74424 		mov	QWORD PTR 24[rsp], 0	# %sfp,
 17825      18000000 
 17825      00
 17826              	.LBB881:
 17827              	# sieve_extend.c:1087:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
1087:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 17828              		.loc 1 1087 20 view .LVU6339
 17829 5cc7 41BF0100 		mov	r15d, 1	# prime,
 17829      0000
 17830              	.LBB869:
 17831              	.LBB866:
 17832              	.LBB863:
 17833              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17834              		.loc 3 107 10 view .LVU6340
 17835 5ccd 4989ED   		mov	r13, rbp	# sieve, sieve
 17836              	.LVL1109:
 17837              		.p2align 4
 17838              		.p2align 3
 17839              	.L1570:
 17840              		.loc 3 107 10 view .LVU6341
GAS LISTING /tmp/ccr2dACi.s 			page 476


 17841              	.LBE863:
 17842              	.LBE866:
 17843              	.LBE869:
1088:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 17844              		.loc 1 1088 9 is_stmt 1 view .LVU6342
 17845              	# sieve_extend.c:1088:         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) {
1088:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 17846              		.loc 1 1088 29 is_stmt 0 view .LVU6343
 17847 5cd0 498B6D00 		mov	rbp, QWORD PTR 0[r13]	# MEM[(uint64_t * *)sieve_18(D)], MEM[(uint64_t * *)sieve_18(D)]
 17848              	# sieve_extend.c:1088:         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) {
1088:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 17849              		.loc 1 1088 30 view .LVU6344
 17850 5cd4 4C89FB   		mov	rbx, r15	# tmp198, prime
 17851 5cd7 48C1EB06 		shr	rbx, 6	# tmp198,
 17852              	# sieve_extend.c:1088:         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) {
1088:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 17853              		.loc 1 1088 71 view .LVU6345
 17854 5cdb 4C8B4CDD 		mov	r9, QWORD PTR 0[rbp+rbx*8]	# *_47, *_47
 17854      00
 17855 5ce0 C4C283F7 		shrx	rcx, r9, r15	# tmp201, *_47, prime
 17855      C9
 17856              	# sieve_extend.c:1088:         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) {
1088:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 17857              		.loc 1 1088 12 view .LVU6346
 17858 5ce5 83E101   		and	ecx, 1	# c,
 17859 5ce8 0F84BA02 		je	.L1562	#,
 17859      0000
 17860              	.LVL1110:
 17861              	.LBB870:
 17862              	.LBB871:
1097:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17863              		.loc 1 1097 32 is_stmt 1 view .LVU6347
 17864              	.LBE871:
 17865              	# sieve_extend.c:1096:             counter_t c_prime = 0;
1096:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 17866              		.loc 1 1096 23 is_stmt 0 view .LVU6348
 17867 5cee 31ED     		xor	ebp, ebp	# c_prime
 17868              	.LBB872:
 17869              	# sieve_extend.c:1097:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1097:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17870              		.loc 1 1097 13 view .LVU6349
 17871 5cf0 4885FF   		test	rdi, rdi	# _137
 17872 5cf3 BE030000 		mov	esi, 3	# ivtmp.738,
 17872      00
 17873 5cf8 0F84E103 		je	.L1674	#,
 17873      0000
 17874 5cfe 4989FB   		mov	r11, rdi	# tmp231, _137
 17875 5d01 4929CB   		sub	r11, rcx	# tmp231, c
 17876 5d04 4183E303 		and	r11d, 3	# tmp231,
 17877 5d08 4D89DA   		mov	r10, r11	# tmp232, tmp231
 17878 5d0b 0F84BF00 		je	.L1563	#,
 17878      0000
 17879              	.LVL1111:
1098:sieve_extend.c ****             }
 17880              		.loc 1 1098 17 is_stmt 1 view .LVU6350
 17881              	# sieve_extend.c:1098:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1098:sieve_extend.c ****             }
GAS LISTING /tmp/ccr2dACi.s 			page 477


 17882              		.loc 1 1098 48 is_stmt 0 view .LVU6351
 17883 5d11 488D0409 		lea	rax, [rcx+rcx]	# tmp239,
 17884 5d15 4C39F0   		cmp	rax, r14	# tmp239, ivtmp.748
 17885 5d18 7411     		je	.L1615	#,
 17886              	# sieve_extend.c:1098:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1098:sieve_extend.c ****             }
 17887              		.loc 1 1098 33 view .LVU6352
 17888 5d1a 31D2     		xor	edx, edx	# tmp241
 17889 5d1c 4C89E0   		mov	rax, r12	# tmp242, ivtmp.746
 17890 5d1f 48F7F6   		div	rsi	# ivtmp.738
 17891              	# sieve_extend.c:1098:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1098:sieve_extend.c ****             }
 17892              		.loc 1 1098 82 view .LVU6353
 17893 5d22 31ED     		xor	ebp, ebp	# c_prime
1098:sieve_extend.c ****             }
 17894              		.loc 1 1098 82 view .LVU6354
 17895 5d24 4885D2   		test	rdx, rdx	# tmp241
 17896 5d27 400F94C5 		sete	bpl	#, c_prime
 17897              	.LVL1112:
 17898              	.L1615:
1097:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17899              		.loc 1 1097 68 is_stmt 1 view .LVU6355
 17900              	# sieve_extend.c:1097:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1097:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17901              		.loc 1 1097 69 is_stmt 0 view .LVU6356
 17902 5d2b 4883C101 		add	rcx, 1	# c,
 17903              	.LVL1113:
1097:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17904              		.loc 1 1097 32 is_stmt 1 view .LVU6357
 17905              	# sieve_extend.c:1097:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1097:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17906              		.loc 1 1097 13 is_stmt 0 view .LVU6358
 17907 5d2f 4839F9   		cmp	rcx, rdi	# c, _137
 17908 5d32 0F877801 		ja	.L1569	#,
 17908      0000
 17909              	# sieve_extend.c:1097:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1097:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17910              		.loc 1 1097 51 view .LVU6359
 17911 5d38 4989C9   		mov	r9, rcx	# tmp244, c
 17912 5d3b BE050000 		mov	esi, 5	# ivtmp.738,
 17912      00
 17913 5d40 4C0FAFC9 		imul	r9, rcx	# tmp244, c
 17914              	# sieve_extend.c:1097:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1097:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17915              		.loc 1 1097 47 view .LVU6360
 17916 5d44 4D39E1   		cmp	r9, r12	# tmp244, ivtmp.746
 17917 5d47 0F876301 		ja	.L1569	#,
 17917      0000
 17918 5d4d 4983FA01 		cmp	r10, 1	# tmp232,
 17919 5d51 747D     		je	.L1563	#,
 17920 5d53 4983FA02 		cmp	r10, 2	# tmp232,
 17921 5d57 7438     		je	.L1646	#,
1098:sieve_extend.c ****             }
 17922              		.loc 1 1098 17 is_stmt 1 view .LVU6361
 17923              	# sieve_extend.c:1098:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1098:sieve_extend.c ****             }
 17924              		.loc 1 1098 48 is_stmt 0 view .LVU6362
GAS LISTING /tmp/ccr2dACi.s 			page 478


 17925 5d59 488D1C09 		lea	rbx, [rcx+rcx]	# tmp245,
 17926 5d5d 4C39F3   		cmp	rbx, r14	# tmp245, ivtmp.748
 17927 5d60 7417     		je	.L1617	#,
 17928              	# sieve_extend.c:1098:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1098:sieve_extend.c ****             }
 17929              		.loc 1 1098 33 view .LVU6363
 17930 5d62 31D2     		xor	edx, edx	# tmp247
 17931 5d64 4C89E0   		mov	rax, r12	# tmp248, ivtmp.746
 17932 5d67 48F7F6   		div	rsi	# ivtmp.738
 17933              	# sieve_extend.c:1098:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1098:sieve_extend.c ****             }
 17934              		.loc 1 1098 20 view .LVU6364
 17935 5d6a 4885D2   		test	rdx, rdx	# tmp247
 17936 5d6d 410F94C3 		sete	r11b	#, tmp249
 17937              	# sieve_extend.c:1098:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1098:sieve_extend.c ****             }
 17938              		.loc 1 1098 82 view .LVU6365
 17939 5d71 4180FB01 		cmp	r11b, 1	# tmp249,
 17940 5d75 4883DDFF 		sbb	rbp, -1	# c_prime,
 17941              	.LVL1114:
 17942              	.L1617:
1097:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17943              		.loc 1 1097 68 is_stmt 1 view .LVU6366
 17944              	# sieve_extend.c:1097:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1097:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17945              		.loc 1 1097 69 is_stmt 0 view .LVU6367
 17946 5d79 4883C101 		add	rcx, 1	# c,
 17947              	.LVL1115:
1097:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17948              		.loc 1 1097 32 is_stmt 1 view .LVU6368
 17949 5d7d 4883C602 		add	rsi, 2	# ivtmp.738,
 17950              	# sieve_extend.c:1097:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1097:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17951              		.loc 1 1097 51 is_stmt 0 view .LVU6369
 17952 5d81 4989CA   		mov	r10, rcx	# tmp250, c
 17953 5d84 4C0FAFD1 		imul	r10, rcx	# tmp250, c
 17954              	# sieve_extend.c:1097:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1097:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17955              		.loc 1 1097 47 view .LVU6370
 17956 5d88 4D39E2   		cmp	r10, r12	# tmp250, ivtmp.746
 17957 5d8b 0F871F01 		ja	.L1569	#,
 17957      0000
 17958              	.L1646:
1098:sieve_extend.c ****             }
 17959              		.loc 1 1098 17 is_stmt 1 view .LVU6371
 17960              	# sieve_extend.c:1098:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1098:sieve_extend.c ****             }
 17961              		.loc 1 1098 48 is_stmt 0 view .LVU6372
 17962 5d91 4C8D0C09 		lea	r9, [rcx+rcx]	# tmp251,
 17963 5d95 4D39F1   		cmp	r9, r14	# tmp251, ivtmp.748
 17964 5d98 7415     		je	.L1620	#,
 17965              	# sieve_extend.c:1098:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1098:sieve_extend.c ****             }
 17966              		.loc 1 1098 33 view .LVU6373
 17967 5d9a 31D2     		xor	edx, edx	# tmp253
 17968 5d9c 4C89E0   		mov	rax, r12	# tmp254, ivtmp.746
 17969 5d9f 48F7F6   		div	rsi	# ivtmp.738
GAS LISTING /tmp/ccr2dACi.s 			page 479


 17970              	# sieve_extend.c:1098:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1098:sieve_extend.c ****             }
 17971              		.loc 1 1098 20 view .LVU6374
 17972 5da2 4885D2   		test	rdx, rdx	# tmp253
 17973 5da5 0F94C3   		sete	bl	#, tmp255
 17974              	# sieve_extend.c:1098:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1098:sieve_extend.c ****             }
 17975              		.loc 1 1098 82 view .LVU6375
 17976 5da8 80FB01   		cmp	bl, 1	# tmp255,
 17977 5dab 4883DDFF 		sbb	rbp, -1	# c_prime,
 17978              	.LVL1116:
 17979              	.L1620:
1097:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17980              		.loc 1 1097 68 is_stmt 1 view .LVU6376
 17981              	# sieve_extend.c:1097:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1097:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17982              		.loc 1 1097 69 is_stmt 0 view .LVU6377
 17983 5daf 4883C101 		add	rcx, 1	# c,
 17984              	.LVL1117:
1097:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17985              		.loc 1 1097 32 is_stmt 1 view .LVU6378
 17986 5db3 4883C602 		add	rsi, 2	# ivtmp.738,
 17987              	# sieve_extend.c:1097:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1097:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17988              		.loc 1 1097 51 is_stmt 0 view .LVU6379
 17989 5db7 4989CB   		mov	r11, rcx	# tmp256, c
 17990 5dba 4C0FAFD9 		imul	r11, rcx	# tmp256, c
 17991              	# sieve_extend.c:1097:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1097:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17992              		.loc 1 1097 47 view .LVU6380
 17993 5dbe 4D39E3   		cmp	r11, r12	# tmp256, ivtmp.746
 17994 5dc1 0F87E900 		ja	.L1569	#,
 17994      0000
 17995              	.LVL1118:
 17996 5dc7 660F1F84 		.p2align 4
 17996      00000000 
 17996      00
 17997              		.p2align 3
 17998              	.L1563:
1098:sieve_extend.c ****             }
 17999              		.loc 1 1098 17 is_stmt 1 view .LVU6381
 18000              	# sieve_extend.c:1098:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1098:sieve_extend.c ****             }
 18001              		.loc 1 1098 48 is_stmt 0 view .LVU6382
 18002 5dd0 4C8D1409 		lea	r10, [rcx+rcx]	# tmp210,
 18003 5dd4 4D39F2   		cmp	r10, r14	# tmp210, ivtmp.748
 18004 5dd7 7417     		je	.L1568	#,
 18005              	# sieve_extend.c:1098:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1098:sieve_extend.c ****             }
 18006              		.loc 1 1098 33 view .LVU6383
 18007 5dd9 31D2     		xor	edx, edx	# tmp214
 18008 5ddb 4C89E0   		mov	rax, r12	# tmp215, ivtmp.746
 18009 5dde 48F7F6   		div	rsi	# ivtmp.738
 18010              	# sieve_extend.c:1098:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1098:sieve_extend.c ****             }
 18011              		.loc 1 1098 20 view .LVU6384
 18012 5de1 4885D2   		test	rdx, rdx	# tmp214
GAS LISTING /tmp/ccr2dACi.s 			page 480


 18013 5de4 410F94C1 		sete	r9b	#, tmp217
 18014              	# sieve_extend.c:1098:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1098:sieve_extend.c ****             }
 18015              		.loc 1 1098 82 view .LVU6385
 18016 5de8 4180F901 		cmp	r9b, 1	# tmp217,
 18017 5dec 4883DDFF 		sbb	rbp, -1	# c_prime,
 18018              	.LVL1119:
 18019              	.L1568:
1097:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18020              		.loc 1 1097 68 is_stmt 1 view .LVU6386
 18021              	# sieve_extend.c:1097:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1097:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18022              		.loc 1 1097 69 is_stmt 0 view .LVU6387
 18023 5df0 4883C101 		add	rcx, 1	# tmp234,
 18024              	.LVL1120:
1097:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18025              		.loc 1 1097 32 is_stmt 1 view .LVU6388
 18026              	# sieve_extend.c:1097:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1097:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18027              		.loc 1 1097 13 is_stmt 0 view .LVU6389
 18028 5df4 4839F9   		cmp	rcx, rdi	# tmp234, _137
 18029 5df7 0F87B300 		ja	.L1569	#,
 18029      0000
 18030              	# sieve_extend.c:1097:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1097:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18031              		.loc 1 1097 51 view .LVU6390
 18032 5dfd 4889CB   		mov	rbx, rcx	# tmp218, tmp234
 18033 5e00 4883C602 		add	rsi, 2	# tmp233,
 18034 5e04 480FAFD9 		imul	rbx, rcx	# tmp218, tmp234
 18035              	# sieve_extend.c:1097:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1097:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18036              		.loc 1 1097 47 view .LVU6391
 18037 5e08 4C39E3   		cmp	rbx, r12	# tmp218, ivtmp.746
 18038 5e0b 0F879F00 		ja	.L1569	#,
 18038      0000
1098:sieve_extend.c ****             }
 18039              		.loc 1 1098 17 is_stmt 1 view .LVU6392
 18040              	# sieve_extend.c:1098:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1098:sieve_extend.c ****             }
 18041              		.loc 1 1098 48 is_stmt 0 view .LVU6393
 18042 5e11 4C8D1C09 		lea	r11, [rcx+rcx]	# tmp257,
 18043 5e15 4D39F3   		cmp	r11, r14	# tmp257, ivtmp.748
 18044 5e18 7417     		je	.L1624	#,
 18045              	# sieve_extend.c:1098:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1098:sieve_extend.c ****             }
 18046              		.loc 1 1098 33 view .LVU6394
 18047 5e1a 31D2     		xor	edx, edx	# tmp259
 18048 5e1c 4C89E0   		mov	rax, r12	# tmp260, ivtmp.746
 18049 5e1f 48F7F6   		div	rsi	# tmp233
 18050              	# sieve_extend.c:1098:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1098:sieve_extend.c ****             }
 18051              		.loc 1 1098 20 view .LVU6395
 18052 5e22 4885D2   		test	rdx, rdx	# tmp259
 18053 5e25 410F94C2 		sete	r10b	#, tmp261
 18054              	# sieve_extend.c:1098:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1098:sieve_extend.c ****             }
 18055              		.loc 1 1098 82 view .LVU6396
GAS LISTING /tmp/ccr2dACi.s 			page 481


 18056 5e29 4180FA01 		cmp	r10b, 1	# tmp261,
 18057 5e2d 4883DDFF 		sbb	rbp, -1	# c_prime,
 18058              	.LVL1121:
 18059              	.L1624:
1097:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18060              		.loc 1 1097 68 is_stmt 1 view .LVU6397
 18061              	# sieve_extend.c:1097:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1097:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18062              		.loc 1 1097 69 is_stmt 0 view .LVU6398
 18063 5e31 4C8D4901 		lea	r9, 1[rcx]	# c,
1097:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18064              		.loc 1 1097 32 is_stmt 1 view .LVU6399
 18065 5e35 488D5E02 		lea	rbx, 2[rsi]	# ivtmp.738,
 18066              	# sieve_extend.c:1097:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1097:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18067              		.loc 1 1097 51 is_stmt 0 view .LVU6400
 18068 5e39 4D89CB   		mov	r11, r9	# tmp264, c
 18069 5e3c 4D0FAFD9 		imul	r11, r9	# tmp264, c
 18070              	# sieve_extend.c:1097:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1097:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18071              		.loc 1 1097 47 view .LVU6401
 18072 5e40 4D39E3   		cmp	r11, r12	# tmp264, ivtmp.746
 18073 5e43 776B     		ja	.L1569	#,
1098:sieve_extend.c ****             }
 18074              		.loc 1 1098 17 is_stmt 1 view .LVU6402
 18075              	# sieve_extend.c:1098:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1098:sieve_extend.c ****             }
 18076              		.loc 1 1098 48 is_stmt 0 view .LVU6403
 18077 5e45 4D01C9   		add	r9, r9	# tmp265
 18078 5e48 4D39F1   		cmp	r9, r14	# tmp265, ivtmp.748
 18079 5e4b 7417     		je	.L1626	#,
 18080              	# sieve_extend.c:1098:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1098:sieve_extend.c ****             }
 18081              		.loc 1 1098 33 view .LVU6404
 18082 5e4d 31D2     		xor	edx, edx	# tmp267
 18083 5e4f 4C89E0   		mov	rax, r12	# tmp268, ivtmp.746
 18084 5e52 48F7F3   		div	rbx	# ivtmp.738
 18085              	# sieve_extend.c:1098:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1098:sieve_extend.c ****             }
 18086              		.loc 1 1098 20 view .LVU6405
 18087 5e55 4885D2   		test	rdx, rdx	# tmp267
 18088 5e58 410F94C2 		sete	r10b	#, tmp269
 18089              	# sieve_extend.c:1098:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1098:sieve_extend.c ****             }
 18090              		.loc 1 1098 82 view .LVU6406
 18091 5e5c 4180FA01 		cmp	r10b, 1	# tmp269,
 18092 5e60 4883DDFF 		sbb	rbp, -1	# c_prime,
 18093              	.LVL1122:
 18094              	.L1626:
1097:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18095              		.loc 1 1097 68 is_stmt 1 view .LVU6407
 18096              	# sieve_extend.c:1097:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1097:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18097              		.loc 1 1097 69 is_stmt 0 view .LVU6408
 18098 5e64 4C8D4902 		lea	r9, 2[rcx]	# c,
1097:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18099              		.loc 1 1097 32 is_stmt 1 view .LVU6409
GAS LISTING /tmp/ccr2dACi.s 			page 482


 18100 5e68 488D5E04 		lea	rbx, 4[rsi]	# ivtmp.738,
 18101              	# sieve_extend.c:1097:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1097:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18102              		.loc 1 1097 51 is_stmt 0 view .LVU6410
 18103 5e6c 4D89CB   		mov	r11, r9	# tmp272, c
 18104 5e6f 4D0FAFD9 		imul	r11, r9	# tmp272, c
 18105              	# sieve_extend.c:1097:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1097:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18106              		.loc 1 1097 47 view .LVU6411
 18107 5e73 4D39E3   		cmp	r11, r12	# tmp272, ivtmp.746
 18108 5e76 7738     		ja	.L1569	#,
1098:sieve_extend.c ****             }
 18109              		.loc 1 1098 17 is_stmt 1 view .LVU6412
 18110              	# sieve_extend.c:1098:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1098:sieve_extend.c ****             }
 18111              		.loc 1 1098 48 is_stmt 0 view .LVU6413
 18112 5e78 4D01C9   		add	r9, r9	# tmp273
 18113 5e7b 4D39F1   		cmp	r9, r14	# tmp273, ivtmp.748
 18114 5e7e 7417     		je	.L1628	#,
 18115              	# sieve_extend.c:1098:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1098:sieve_extend.c ****             }
 18116              		.loc 1 1098 33 view .LVU6414
 18117 5e80 31D2     		xor	edx, edx	# tmp275
 18118 5e82 4C89E0   		mov	rax, r12	# tmp276, ivtmp.746
 18119 5e85 48F7F3   		div	rbx	# ivtmp.738
 18120              	# sieve_extend.c:1098:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1098:sieve_extend.c ****             }
 18121              		.loc 1 1098 20 view .LVU6415
 18122 5e88 4885D2   		test	rdx, rdx	# tmp275
 18123 5e8b 410F94C2 		sete	r10b	#, tmp277
 18124              	# sieve_extend.c:1098:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1098:sieve_extend.c ****             }
 18125              		.loc 1 1098 82 view .LVU6416
 18126 5e8f 4180FA01 		cmp	r10b, 1	# tmp277,
 18127 5e93 4883DDFF 		sbb	rbp, -1	# c_prime,
 18128              	.LVL1123:
 18129              	.L1628:
1097:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18130              		.loc 1 1097 68 is_stmt 1 view .LVU6417
 18131              	# sieve_extend.c:1097:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1097:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18132              		.loc 1 1097 69 is_stmt 0 view .LVU6418
 18133 5e97 4883C103 		add	rcx, 3	# c,
 18134              	.LVL1124:
1097:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18135              		.loc 1 1097 32 is_stmt 1 view .LVU6419
 18136 5e9b 4883C606 		add	rsi, 6	# ivtmp.738,
 18137              	# sieve_extend.c:1097:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1097:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18138              		.loc 1 1097 51 is_stmt 0 view .LVU6420
 18139 5e9f 4989C9   		mov	r9, rcx	# tmp278, c
 18140 5ea2 4C0FAFC9 		imul	r9, rcx	# tmp278, c
 18141              	# sieve_extend.c:1097:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1097:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18142              		.loc 1 1097 47 view .LVU6421
 18143 5ea6 4D39E1   		cmp	r9, r12	# tmp278, ivtmp.746
 18144 5ea9 0F8621FF 		jbe	.L1563	#,
GAS LISTING /tmp/ccr2dACi.s 			page 483


 18144      FFFF
 18145              	.LVL1125:
 18146 5eaf 90       		.p2align 4
 18147              		.p2align 3
 18148              	.L1569:
1097:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18149              		.loc 1 1097 47 view .LVU6422
 18150              	.LBE872:
1100:sieve_extend.c ****         }
 18151              		.loc 1 1100 13 is_stmt 1 view .LVU6423
 18152              	# sieve_extend.c:1100:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1100:sieve_extend.c ****         }
 18153              		.loc 1 1100 16 is_stmt 0 view .LVU6424
 18154 5eb0 4885ED   		test	rbp, rbp	# c_prime
 18155 5eb3 0F840D02 		je	.L1687	#,
 18155      0000
 18156              	.LVL1126:
 18157              	.L1566:
1100:sieve_extend.c ****         }
 18158              		.loc 1 1100 16 view .LVU6425
 18159              	.LBE870:
1087:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 18160              		.loc 1 1087 52 is_stmt 1 view .LVU6426
 18161              	# sieve_extend.c:1087:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
1087:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 18162              		.loc 1 1087 57 is_stmt 0 view .LVU6427
 18163 5eb9 4983C701 		add	r15, 1	# prime,
 18164              	.LVL1127:
1087:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 18165              		.loc 1 1087 31 is_stmt 1 view .LVU6428
 18166 5ebd 4983C402 		add	r12, 2	# ivtmp.746,
 18167 5ec1 4983C602 		add	r14, 2	# ivtmp.748,
 18168              	# sieve_extend.c:1087:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
1087:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 18169              		.loc 1 1087 5 is_stmt 0 view .LVU6429
 18170 5ec5 4939FF   		cmp	r15, rdi	# prime, _137
 18171 5ec8 0F8202FE 		jb	.L1570	#,
 18171      FFFF
 18172              	.LVL1128:
 18173              	.L1676:
1087:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 18174              		.loc 1 1087 5 view .LVU6430
 18175 5ece 448B6C24 		mov	r13d, DWORD PTR 36[rsp]	# <retval>, %sfp
 18175      24
 18176              	.LVL1129:
 18177              	.L1540:
1087:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 18178              		.loc 1 1087 5 view .LVU6431
 18179              	.LBE881:
 18180              	.LBE856:
 18181              	.LBE855:
 18182              	# sieve_extend.c:1131: }
1131:sieve_extend.c **** 
 18183              		.loc 1 1131 1 view .LVU6432
 18184 5ed3 488D6424 		lea	rsp, 56[rsp]	#,
 18184      38
 18185              		.cfi_remember_state
GAS LISTING /tmp/ccr2dACi.s 			page 484


 18186              		.cfi_def_cfa_offset 56
 18187 5ed8 4489E8   		mov	eax, r13d	#, <retval>
 18188 5edb 5B       		pop	rbx	#
 18189              		.cfi_def_cfa_offset 48
 18190 5edc 5D       		pop	rbp	#
 18191              		.cfi_def_cfa_offset 40
 18192 5edd 415C     		pop	r12	#
 18193              		.cfi_def_cfa_offset 32
 18194 5edf 415D     		pop	r13	#
 18195              		.cfi_def_cfa_offset 24
 18196 5ee1 415E     		pop	r14	#
 18197              		.cfi_def_cfa_offset 16
 18198 5ee3 415F     		pop	r15	#
 18199              		.cfi_def_cfa_offset 8
 18200 5ee5 C3       		ret	
 18201              	.LVL1130:
 18202              	.L1685:
 18203              		.cfi_restore_state
 18204              	# sieve_extend.c:1110:     switch(sieve->size) {
1110:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 18205              		.loc 1 1110 5 view .LVU6433
 18206 5ee6 4981F9E8 		cmp	r9, 1000	# pretmp_199,
 18206      030000
 18207 5eed 0F84E602 		je	.L1547	#,
 18207      0000
 18208 5ef3 7633     		jbe	.L1688	#,
 18209 5ef5 4981F910 		cmp	r9, 10000	# pretmp_199,
 18209      270000
 18210 5efc 0F852303 		jne	.L1551	#,
 18210      0000
 18211 5f02 4981F8CD 		cmp	r8, 1229	# primeCount,
 18211      040000
 18212              	# sieve_extend.c:1114:         case 10000:         valid_primes = 1229;     break;
1114:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 18213              		.loc 1 1114 42 view .LVU6434
 18214 5f09 B9CD0400 		mov	ecx, 1229	# valid_primes,
 18214      00
 18215 5f0e 400F94C6 		sete	sil	#, tmp179
 18216 5f12 21F2     		and	edx, esi	# _251, tmp179
 18217 5f14 4981F8CD 		cmp	r8, 1229	# primeCount,
 18217      040000
 18218 5f1b 440FB6EE 		movzx	r13d, sil	# <retval>, tmp179
 18219 5f1f 410F95C6 		setne	r14b	#, _135
1114:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 18220              		.loc 1 1114 29 is_stmt 1 view .LVU6435
 18221              	.LVL1131:
1114:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 18222              		.loc 1 1114 54 view .LVU6436
 18223              	# sieve_extend.c:1114:         case 10000:         valid_primes = 1229;     break;
1114:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 18224              		.loc 1 1114 9 is_stmt 0 view .LVU6437
 18225 5f23 E938FDFF 		jmp	.L1558	#
 18225      FF
 18226              	.LVL1132:
 18227              	.L1688:
 18228              	# sieve_extend.c:1110:     switch(sieve->size) {
1110:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
GAS LISTING /tmp/ccr2dACi.s 			page 485


 18229              		.loc 1 1110 5 view .LVU6438
 18230 5f28 4983F90A 		cmp	r9, 10	# pretmp_199,
 18231 5f2c 0F841A02 		je	.L1549	#,
 18231      0000
 18232 5f32 4983F964 		cmp	r9, 100	# pretmp_199,
 18233 5f36 0F85E902 		jne	.L1551	#,
 18233      0000
 18234 5f3c 4983F819 		cmp	r8, 25	# primeCount,
 18235 5f40 0F94C1   		sete	cl	#, tmp173
 18236 5f43 21CA     		and	edx, ecx	# _251, tmp173
 18237 5f45 4983F819 		cmp	r8, 25	# primeCount,
 18238 5f49 440FB6E9 		movzx	r13d, cl	# <retval>, tmp173
 18239 5f4d 410F95C6 		setne	r14b	#, _135
 18240              	# sieve_extend.c:1112:         case 100:           valid_primes = 25;       break;
1112:sieve_extend.c ****         case 1000:          valid_primes = 168;      break;
 18241              		.loc 1 1112 42 view .LVU6439
 18242 5f51 B9190000 		mov	ecx, 25	# valid_primes,
 18242      00
 18243 5f56 E905FDFF 		jmp	.L1558	#
 18243      FF
 18244 5f5b 0F1F4400 		.p2align 4,,7
 18244      00
 18245              		.p2align 3
 18246              	.L1686:
 18247              	# sieve_extend.c:1110:     switch(sieve->size) {
1110:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 18248              		.loc 1 1110 5 view .LVU6440
 18249 5f60 4981F940 		cmp	r9, 1000000	# pretmp_199,
 18249      420F00
 18250 5f67 0F84B801 		je	.L1555	#,
 18250      0000
 18251 5f6d 4981F980 		cmp	r9, 10000000	# pretmp_199,
 18251      969800
 18252 5f74 0F85AB02 		jne	.L1551	#,
 18252      0000
 18253 5f7a 4981F803 		cmp	r8, 664579	# primeCount,
 18253      240A00
 18254              	# sieve_extend.c:1117:         case 10000000:      valid_primes = 664579;   break;
1117:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 18255              		.loc 1 1117 42 view .LVU6441
 18256 5f81 B903240A 		mov	ecx, 664579	# valid_primes,
 18256      00
 18257 5f86 410F94C7 		sete	r15b	#, tmp185
 18258 5f8a 4421FA   		and	edx, r15d	# _251, tmp185
 18259 5f8d 4981F803 		cmp	r8, 664579	# primeCount,
 18259      240A00
 18260 5f94 450FB6EF 		movzx	r13d, r15b	# <retval>, tmp185
 18261 5f98 410F95C6 		setne	r14b	#, _135
1117:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 18262              		.loc 1 1117 29 is_stmt 1 view .LVU6442
 18263              	.LVL1133:
1117:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 18264              		.loc 1 1117 54 view .LVU6443
 18265              	# sieve_extend.c:1117:         case 10000000:      valid_primes = 664579;   break;
1117:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 18266              		.loc 1 1117 9 is_stmt 0 view .LVU6444
 18267 5f9c E9BFFCFF 		jmp	.L1558	#
GAS LISTING /tmp/ccr2dACi.s 			page 486


 18267      FF
 18268              	.LVL1134:
 18269              		.p2align 4,,7
 18270 5fa1 0F1F8000 		.p2align 3
 18270      000000
 18271              	.L1562:
 18272              	.LBB886:
 18273              	.LBB884:
 18274              	.LBB882:
 18275              	.LBB879:
1089:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 18276              		.loc 1 1089 32 is_stmt 1 view .LVU6445
 18277              	# sieve_extend.c:1089:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1089:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 18278              		.loc 1 1089 13 is_stmt 0 view .LVU6446
 18279 5fa8 4885FF   		test	rdi, rdi	# _137
 18280 5fab 0F841DFF 		je	.L1676	#,
 18280      FFFF
 18281              	# sieve_extend.c:1089:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1089:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 18282              		.loc 1 1089 27 view .LVU6447
 18283 5fb1 BB010000 		mov	ebx, 1	# c,
 18283      00
 18284 5fb6 EB20     		jmp	.L1567	#
 18285              	.LVL1135:
 18286              		.p2align 4,,7
 18287              		.p2align 3
 18288              	.L1576:
 18289              	# sieve_extend.c:1091:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was mark
1091:sieve_extend.c ****                 }
 18290              		.loc 1 1091 35 view .LVU6448
 18291 5fb8 4989E8   		mov	r8, rbp	# warn_prime, warn_prime
 18292              	.LVL1136:
 18293              	.L1565:
1089:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 18294              		.loc 1 1089 68 is_stmt 1 view .LVU6449
 18295              	# sieve_extend.c:1089:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1089:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 18296              		.loc 1 1089 69 is_stmt 0 view .LVU6450
 18297 5fbb 4883C301 		add	rbx, 1	# c,
 18298              	.LVL1137:
1089:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 18299              		.loc 1 1089 32 is_stmt 1 view .LVU6451
 18300              	# sieve_extend.c:1089:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1089:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 18301              		.loc 1 1089 13 is_stmt 0 view .LVU6452
 18302 5fbf 4839FB   		cmp	rbx, rdi	# c, _137
 18303 5fc2 0F87F1FE 		ja	.L1566	#,
 18303      FFFF
 18304              	# sieve_extend.c:1089:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1089:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 18305              		.loc 1 1089 51 view .LVU6453
 18306 5fc8 4989DB   		mov	r11, rbx	# tmp209, c
 18307 5fcb 4C0FAFDB 		imul	r11, rbx	# tmp209, c
 18308              	# sieve_extend.c:1089:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1089:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 18309              		.loc 1 1089 47 view .LVU6454
GAS LISTING /tmp/ccr2dACi.s 			page 487


 18310 5fcf 4D39E3   		cmp	r11, r12	# tmp209, ivtmp.746
 18311 5fd2 0F87E1FE 		ja	.L1566	#,
 18311      FFFF
 18312              	.LVL1138:
 18313              	.L1567:
1090:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 18314              		.loc 1 1090 17 is_stmt 1 view .LVU6455
 18315 5fd8 488D2C1B 		lea	rbp, [rbx+rbx]	# _216,
 18316 5fdc 31D2     		xor	edx, edx	# tmp204
 18317 5fde 4C89E0   		mov	rax, r12	# tmp203, ivtmp.746
 18318              	# sieve_extend.c:1090:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
1090:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 18319              		.loc 1 1090 39 is_stmt 0 view .LVU6456
 18320 5fe1 488D7501 		lea	rsi, 1[rbp]	# _55,
 18321 5fe5 48F7F6   		div	rsi	# _55
 18322              	# sieve_extend.c:1090:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
1090:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 18323              		.loc 1 1090 48 view .LVU6457
 18324 5fe8 4885D2   		test	rdx, rdx	# tmp204
 18325 5feb 75CE     		jne	.L1565	#,
1090:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 18326              		.loc 1 1090 48 view .LVU6458
 18327 5fed 4939EE   		cmp	r14, rbp	# ivtmp.748, _216
 18328 5ff0 74C9     		je	.L1565	#,
1091:sieve_extend.c ****                 }
 18329              		.loc 1 1091 21 is_stmt 1 view .LVU6459
 18330              	# sieve_extend.c:1091:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was mark
1091:sieve_extend.c ****                 }
 18331              		.loc 1 1091 24 is_stmt 0 view .LVU6460
 18332 5ff2 4983F81D 		cmp	r8, 29	# warn_prime,
 18333              	# sieve_extend.c:1091:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was mark
1091:sieve_extend.c ****                 }
 18334              		.loc 1 1091 35 view .LVU6461
 18335 5ff6 498D6801 		lea	rbp, 1[r8]	# warn_prime,
 18336              	.LVL1139:
 18337              	# sieve_extend.c:1091:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was mark
1091:sieve_extend.c ****                 }
 18338              		.loc 1 1091 24 view .LVU6462
 18339 5ffa 77BC     		ja	.L1576	#,
1091:sieve_extend.c ****                 }
 18340              		.loc 1 1091 44 is_stmt 1 view .LVU6463
 18341              	.LVL1140:
 18342              	.LBB867:
 18343              	.LBI861:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18344              		.loc 3 105 1 view .LVU6464
 18345              	.LBB864:
 18346              		.loc 3 107 3 view .LVU6465
 18347              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18348              		.loc 3 107 10 is_stmt 0 view .LVU6466
 18349 5ffc 4989F0   		mov	r8, rsi	#, _55
 18350 5fff 4989C1   		mov	r9, rax	#, tmp203
 18351 6002 BF010000 		mov	edi, 1	#,
 18351      00
 18352 6007 4C89F9   		mov	rcx, r15	#, prime
 18353 600a 4C892424 		mov	QWORD PTR [rsp], r12	#, ivtmp.746
 18354 600e 4C89E2   		mov	rdx, r12	#, ivtmp.746
GAS LISTING /tmp/ccr2dACi.s 			page 488


 18355 6011 488D3500 		lea	rsi, .LC12[rip]	#,
 18355      000000
 18356 6018 31C0     		xor	eax, eax	#
 18357 601a E8000000 		call	__printf_chk@PLT	#
 18357      00
 18358              	.LVL1141:
 18359 601f 498B7D08 		mov	rdi, QWORD PTR 8[r13]	# _137, MEM[(uint64_t *)sieve_18(D) + 8B]
 18360              	.LBE864:
 18361              	.LBE867:
 18362              	# sieve_extend.c:1091:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was mark
1091:sieve_extend.c ****                 }
 18363              		.loc 1 1091 35 view .LVU6467
 18364 6023 4989E8   		mov	r8, rbp	# warn_prime, warn_prime
 18365              	.LBB868:
 18366              	.LBB865:
 18367              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18368              		.loc 3 107 10 view .LVU6468
 18369 6026 EB93     		jmp	.L1565	#
 18370              	.LVL1142:
 18371              	.L1541:
 18372              		.loc 3 107 10 view .LVU6469
 18373              	.LBE865:
 18374              	.LBE868:
 18375              	.LBE879:
 18376              	.LBE882:
 18377              	.LBE884:
 18378              	.LBE886:
 18379              	.LBB887:
 18380              	.LBB852:
1080:sieve_extend.c **** }
 18381              		.loc 1 1080 5 is_stmt 1 view .LVU6470
1080:sieve_extend.c **** }
 18382              		.loc 1 1080 5 is_stmt 0 view .LVU6471
 18383              	.LBE852:
 18384              	.LBE887:
1109:sieve_extend.c ****     switch(sieve->size) {
 18385              		.loc 1 1109 5 is_stmt 1 view .LVU6472
1110:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 18386              		.loc 1 1110 5 view .LVU6473
 18387 6028 4531ED   		xor	r13d, r13d	# <retval>
 18388 602b 4981F9A0 		cmp	r9, 100000	# pretmp_199,
 18388      860100
 18389 6032 41BE0100 		mov	r14d, 1	# _135,
 18389      0000
 18390 6038 41B80100 		mov	r8d, 1	# primeCount,
 18390      0000
 18391 603e 0F842302 		je	.L1579	#,
 18391      0000
 18392 6044 0F872301 		ja	.L1571	#,
 18392      0000
 18393 604a 4983F964 		cmp	r9, 100	# pretmp_199,
 18394 604e B9190000 		mov	ecx, 25	# valid_primes,
 18394      00
 18395 6053 742A     		je	.L1559	#,
 18396              		.p2align 4,,2
 18397 6055 0F864001 		jbe	.L1689	#,
 18397      0000
GAS LISTING /tmp/ccr2dACi.s 			page 489


 18398 605b 4981F9E8 		cmp	r9, 1000	# pretmp_199,
 18398      030000
 18399              	# sieve_extend.c:1113:         case 1000:          valid_primes = 168;      break;
1113:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 18400              		.loc 1 1113 42 is_stmt 0 view .LVU6474
 18401 6062 B9A80000 		mov	ecx, 168	# valid_primes,
 18401      00
 18402              	# sieve_extend.c:1110:     switch(sieve->size) {
1110:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 18403              		.loc 1 1110 5 view .LVU6475
 18404 6067 7416     		je	.L1559	#,
 18405 6069 4981F910 		cmp	r9, 10000	# pretmp_199,
 18405      270000
 18406 6070 B9CD0400 		mov	ecx, 1229	# tmp223,
 18406      00
 18407 6075 41BA0000 		mov	r10d, 0	# tmp224,
 18407      0000
 18408 607b 490F45CA 		cmovne	rcx, r10	# tmp223,, valid_primes, tmp224
 18409              	.LVL1143:
 18410              	.L1559:
1125:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 18411              		.loc 1 1125 5 is_stmt 1 view .LVU6476
 18412              	# sieve_extend.c:1125:     if (!valid && option_verboselevel >= 1) {
1125:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 18413              		.loc 1 1125 39 is_stmt 0 view .LVU6477
 18414 607f 85DB     		test	ebx, ebx	# option_verboselevel
 18415 6081 410F9FC4 		setg	r12b	#, tmp194
 18416              	# sieve_extend.c:1125:     if (!valid && option_verboselevel >= 1) {
1125:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 18417              		.loc 1 1125 8 view .LVU6478
 18418 6085 4520F4   		and	r12b, r14b	# _7, _135
 18419 6088 0F84F0FB 		je	.L1560	#,
 18419      FFFF
1126:sieve_extend.c ****         if (!valid && option_verboselevel >= 2) show_primes(sieve, default_show_primes_on_error);
 18420              		.loc 1 1126 9 is_stmt 1 view .LVU6479
 18421              	.LVL1144:
 18422              	.LBB888:
 18423              	.LBI888:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18424              		.loc 3 105 1 view .LVU6480
 18425              	.LBB889:
 18426              		.loc 3 107 3 view .LVU6481
 18427              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18428              		.loc 3 107 10 is_stmt 0 view .LVU6482
 18429 608e 31C0     		xor	eax, eax	#
 18430 6090 4C89CA   		mov	rdx, r9	#, pretmp_199
 18431 6093 488D3500 		lea	rsi, .LC10[rip]	#,
 18431      000000
 18432 609a BF010000 		mov	edi, 1	#,
 18432      00
 18433 609f E8000000 		call	__printf_chk@PLT	#
 18433      00
 18434              	.LVL1145:
 18435              		.loc 3 107 10 view .LVU6483
 18436              	.LBE889:
 18437              	.LBE888:
1127:sieve_extend.c ****     }
GAS LISTING /tmp/ccr2dACi.s 			page 490


 18438              		.loc 1 1127 9 is_stmt 1 view .LVU6484
 18439              	# sieve_extend.c:1127:         if (!valid && option_verboselevel >= 2) show_primes(sieve, default_s
1127:sieve_extend.c ****     }
 18440              		.loc 1 1127 12 is_stmt 0 view .LVU6485
 18441 60a4 83FB01   		cmp	ebx, 1	# option_verboselevel,
 18442 60a7 0F8426FE 		je	.L1540	#,
 18442      FFFF
1127:sieve_extend.c ****     }
 18443              		.loc 1 1127 49 is_stmt 1 discriminator 1 view .LVU6486
 18444 60ad 488D7508 		lea	rsi, 8[rbp]	# tmp195,
 18445 60b1 BA640000 		mov	edx, 100	#,
 18445      00
 18446 60b6 4889EF   		mov	rdi, rbp	#, sieve
 18447              	# sieve_extend.c:1125:     if (!valid && option_verboselevel >= 1) {
1125:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 18448              		.loc 1 1125 9 is_stmt 0 discriminator 1 view .LVU6487
 18449 60b9 4589E6   		mov	r14d, r12d	# _135, _7
 18450              	# sieve_extend.c:1127:         if (!valid && option_verboselevel >= 2) show_primes(sieve, default_s
1127:sieve_extend.c ****     }
 18451              		.loc 1 1127 49 discriminator 1 view .LVU6488
 18452 60bc E8CFD6FF 		call	show_primes.isra.0	#
 18452      FF
 18453              	.LVL1146:
 18454 60c1 E9B8FBFF 		jmp	.L1560	#
 18454      FF
 18455              	.LVL1147:
 18456              	.L1687:
 18457              	.LBB890:
 18458              	.LBB885:
 18459              	.LBB883:
 18460              	.LBB880:
 18461              	# sieve_extend.c:1100:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1100:sieve_extend.c ****         }
 18462              		.loc 1 1100 44 view .LVU6489
 18463 60c6 488B4C24 		mov	rcx, QWORD PTR 24[rsp]	# warn_nonprime, %sfp
 18463      18
 18464              	# sieve_extend.c:1100:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1100:sieve_extend.c ****         }
 18465              		.loc 1 1100 28 view .LVU6490
 18466 60cb 4883F91D 		cmp	rcx, 29	# warn_nonprime,
 18467              	# sieve_extend.c:1100:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1100:sieve_extend.c ****         }
 18468              		.loc 1 1100 44 view .LVU6491
 18469 60cf 488D5901 		lea	rbx, 1[rcx]	# warn_nonprime,
 18470              	.LVL1148:
 18471              	# sieve_extend.c:1100:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1100:sieve_extend.c ****         }
 18472              		.loc 1 1100 28 view .LVU6492
 18473 60d3 761D     		jbe	.L1574	#,
 18474              	# sieve_extend.c:1100:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1100:sieve_extend.c ****         }
 18475              		.loc 1 1100 44 view .LVU6493
 18476 60d5 48895C24 		mov	QWORD PTR 24[rsp], rbx	# %sfp, warn_nonprime
 18476      18
 18477 60da E9DAFDFF 		jmp	.L1566	#
 18477      FF
 18478              	.LVL1149:
GAS LISTING /tmp/ccr2dACi.s 			page 491


 18479              	.L1674:
1100:sieve_extend.c ****         }
 18480              		.loc 1 1100 44 view .LVU6494
 18481 60df 488B5424 		mov	rdx, QWORD PTR 24[rsp]	# warn_nonprime, %sfp
 18481      18
 18482              	# sieve_extend.c:1100:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1100:sieve_extend.c ****         }
 18483              		.loc 1 1100 28 view .LVU6495
 18484 60e4 4883FA1D 		cmp	rdx, 29	# warn_nonprime,
 18485              	# sieve_extend.c:1100:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1100:sieve_extend.c ****         }
 18486              		.loc 1 1100 44 view .LVU6496
 18487 60e8 488D5A01 		lea	rbx, 1[rdx]	# warn_nonprime,
 18488              	.LVL1150:
 18489              	# sieve_extend.c:1100:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1100:sieve_extend.c ****         }
 18490              		.loc 1 1100 28 view .LVU6497
 18491 60ec 0F87DCFD 		ja	.L1676	#,
 18491      FFFF
 18492              	.LVL1151:
 18493              	.L1574:
 18494              	.LBB873:
 18495              	.LBB874:
 18496              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18497              		.loc 3 107 10 view .LVU6498
 18498 60f2 BF010000 		mov	edi, 1	#,
 18498      00
 18499              	.LBE874:
 18500              	.LBE873:
 18501              	# sieve_extend.c:1100:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1100:sieve_extend.c ****         }
 18502              		.loc 1 1100 53 view .LVU6499
 18503 60f7 4B8D543F 		lea	rdx, 1[r15+r15]	# tmp220,
 18503      01
 18504              	.LBB877:
 18505              	.LBB875:
 18506              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18507              		.loc 3 107 10 view .LVU6500
 18508 60fc 4C89F9   		mov	rcx, r15	#, prime
 18509 60ff 488D3500 		lea	rsi, .LC13[rip]	#,
 18509      000000
 18510 6106 4C894424 		mov	QWORD PTR 40[rsp], r8	# %sfp, warn_prime
 18510      28
 18511              	.LBE875:
 18512              	.LBE877:
1100:sieve_extend.c ****         }
 18513              		.loc 1 1100 53 is_stmt 1 view .LVU6501
 18514              	.LVL1152:
 18515              	.LBB878:
 18516              	.LBI873:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18517              		.loc 3 105 1 view .LVU6502
 18518              	.LBB876:
 18519              		.loc 3 107 3 view .LVU6503
 18520              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18521              		.loc 3 107 10 is_stmt 0 view .LVU6504
 18522 610b 31C0     		xor	eax, eax	#
GAS LISTING /tmp/ccr2dACi.s 			page 492


 18523 610d E8000000 		call	__printf_chk@PLT	#
 18523      00
 18524              	.LVL1153:
 18525              		.loc 3 107 10 view .LVU6505
 18526 6112 498B7D08 		mov	rdi, QWORD PTR 8[r13]	# _137, MEM[(uint64_t *)sieve_18(D) + 8B]
 18527 6116 4C8B4424 		mov	r8, QWORD PTR 40[rsp]	# warn_prime, %sfp
 18527      28
 18528 611b 48895C24 		mov	QWORD PTR 24[rsp], rbx	# %sfp, warn_nonprime
 18528      18
 18529 6120 E994FDFF 		jmp	.L1566	#
 18529      FF
 18530              	.LVL1154:
 18531              	.L1555:
 18532              		.loc 3 107 10 view .LVU6506
 18533 6125 4981F8A2 		cmp	r8, 78498	# primeCount,
 18533      320100
 18534              	.LBE876:
 18535              	.LBE878:
 18536              	.LBE880:
 18537              	.LBE883:
 18538              	.LBE885:
 18539              	.LBE890:
 18540              	# sieve_extend.c:1116:         case 1000000:       valid_primes = 78498;    break;
1116:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 18541              		.loc 1 1116 42 view .LVU6507
 18542 612c B9A23201 		mov	ecx, 78498	# valid_primes,
 18542      00
 18543 6131 410F94C5 		sete	r13b	#, tmp183
 18544 6135 4421EA   		and	edx, r13d	# _251, tmp183
 18545 6138 4981F8A2 		cmp	r8, 78498	# primeCount,
 18545      320100
 18546 613f 450FB6ED 		movzx	r13d, r13b	# <retval>, tmp183
 18547 6143 410F95C6 		setne	r14b	#, _135
1116:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 18548              		.loc 1 1116 29 is_stmt 1 view .LVU6508
 18549              	.LVL1155:
1116:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 18550              		.loc 1 1116 54 view .LVU6509
 18551              	# sieve_extend.c:1116:         case 1000000:       valid_primes = 78498;    break;
1116:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 18552              		.loc 1 1116 9 is_stmt 0 view .LVU6510
 18553 6147 E914FBFF 		jmp	.L1558	#
 18553      FF
 18554              	.LVL1156:
 18555              	.L1549:
1116:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 18556              		.loc 1 1116 9 view .LVU6511
 18557 614c 4983F804 		cmp	r8, 4	# primeCount,
 18558              	# sieve_extend.c:1111:         case 10:            valid_primes = 4;        break;
1111:sieve_extend.c ****         case 100:           valid_primes = 25;       break;
 18559              		.loc 1 1111 42 view .LVU6512
 18560 6150 B9040000 		mov	ecx, 4	# valid_primes,
 18560      00
 18561 6155 410F94C2 		sete	r10b	#, tmp175
 18562 6159 4421D2   		and	edx, r10d	# _251, tmp175
 18563 615c 4983F804 		cmp	r8, 4	# primeCount,
 18564 6160 450FB6EA 		movzx	r13d, r10b	# <retval>, tmp175
GAS LISTING /tmp/ccr2dACi.s 			page 493


 18565 6164 410F95C6 		setne	r14b	#, _135
 18566 6168 E9F3FAFF 		jmp	.L1558	#
 18566      FF
 18567              	.LVL1157:
 18568              	.L1571:
 18569              	# sieve_extend.c:1110:     switch(sieve->size) {
1110:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 18570              		.loc 1 1110 5 view .LVU6513
 18571 616d 4981F900 		cmp	r9, 100000000	# pretmp_199,
 18571      E1F505
 18572              	# sieve_extend.c:1118:         case 100000000:     valid_primes = 5761455;  break;
1118:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 18573              		.loc 1 1118 42 view .LVU6514
 18574 6174 B9AFE957 		mov	ecx, 5761455	# valid_primes,
 18574      00
 18575              	# sieve_extend.c:1110:     switch(sieve->size) {
1110:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 18576              		.loc 1 1110 5 view .LVU6515
 18577 6179 0F8400FF 		je	.L1559	#,
 18577      FFFF
 18578 617f 762C     		jbe	.L1690	#,
 18579 6181 4981F900 		cmp	r9, 1000000000	# pretmp_199,
 18579      CA9A3B
 18580 6188 B92EDF07 		mov	ecx, 50847534	# tmp227,
 18580      03
 18581 618d B8000000 		mov	eax, 0	# tmp228,
 18581      00
 18582 6192 480F45C8 		cmovne	rcx, rax	# tmp227,, valid_primes, tmp228
 18583 6196 E9E4FEFF 		jmp	.L1559	#
 18583      FF
 18584              	.L1689:
 18585 619b 31C9     		xor	ecx, ecx	# valid_primes
 18586 619d 4983F90A 		cmp	r9, 10	# pretmp_199,
 18587 61a1 0F94C1   		sete	cl	#, valid_primes
 18588 61a4 48C1E102 		sal	rcx, 2	# valid_primes,
 18589 61a8 E9D2FEFF 		jmp	.L1559	#
 18589      FF
 18590              	.L1690:
 18591 61ad 4981F940 		cmp	r9, 1000000	# pretmp_199,
 18591      420F00
 18592              	# sieve_extend.c:1116:         case 1000000:       valid_primes = 78498;    break;
1116:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 18593              		.loc 1 1116 42 view .LVU6516
 18594 61b4 B9A23201 		mov	ecx, 78498	# valid_primes,
 18594      00
 18595              	# sieve_extend.c:1110:     switch(sieve->size) {
1110:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 18596              		.loc 1 1110 5 view .LVU6517
 18597 61b9 0F84C0FE 		je	.L1559	#,
 18597      FFFF
 18598 61bf 4981F980 		cmp	r9, 10000000	# pretmp_199,
 18598      969800
 18599 61c6 B903240A 		mov	ecx, 664579	# tmp225,
 18599      00
 18600 61cb BE000000 		mov	esi, 0	# tmp226,
 18600      00
 18601 61d0 480F45CE 		cmovne	rcx, rsi	# tmp225,, valid_primes, tmp226
GAS LISTING /tmp/ccr2dACi.s 			page 494


 18602 61d4 E9A6FEFF 		jmp	.L1559	#
 18602      FF
 18603              	.LVL1158:
 18604              	.L1547:
1110:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 18605              		.loc 1 1110 5 view .LVU6518
 18606 61d9 4981F8A8 		cmp	r8, 168	# primeCount,
 18606      000000
 18607              	# sieve_extend.c:1113:         case 1000:          valid_primes = 168;      break;
1113:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 18608              		.loc 1 1113 42 view .LVU6519
 18609 61e0 B9A80000 		mov	ecx, 168	# valid_primes,
 18609      00
 18610 61e5 410F94C6 		sete	r14b	#, tmp177
 18611 61e9 4421F2   		and	edx, r14d	# _251, tmp177
 18612 61ec 4981F8A8 		cmp	r8, 168	# primeCount,
 18612      000000
 18613 61f3 450FB6EE 		movzx	r13d, r14b	# <retval>, tmp177
 18614 61f7 410F95C6 		setne	r14b	#, _135
1113:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 18615              		.loc 1 1113 29 is_stmt 1 view .LVU6520
 18616              	.LVL1159:
1113:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 18617              		.loc 1 1113 54 view .LVU6521
 18618              	# sieve_extend.c:1113:         case 1000:          valid_primes = 168;      break;
1113:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 18619              		.loc 1 1113 9 is_stmt 0 view .LVU6522
 18620 61fb E960FAFF 		jmp	.L1558	#
 18620      FF
 18621              	.LVL1160:
 18622              	.L1553:
1113:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 18623              		.loc 1 1113 9 view .LVU6523
 18624 6200 4981F8AF 		cmp	r8, 5761455	# primeCount,
 18624      E95700
 18625              	# sieve_extend.c:1118:         case 100000000:     valid_primes = 5761455;  break;
1118:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 18626              		.loc 1 1118 42 view .LVU6524
 18627 6207 B9AFE957 		mov	ecx, 5761455	# valid_primes,
 18627      00
 18628 620c 0F94C0   		sete	al	#, tmp187
 18629 620f 21C2     		and	edx, eax	# _251, tmp187
 18630 6211 4981F8AF 		cmp	r8, 5761455	# primeCount,
 18630      E95700
 18631 6218 440FB6E8 		movzx	r13d, al	# <retval>, tmp187
 18632 621c 410F95C6 		setne	r14b	#, _135
1118:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 18633              		.loc 1 1118 29 is_stmt 1 view .LVU6525
 18634              	.LVL1161:
1118:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 18635              		.loc 1 1118 54 view .LVU6526
 18636              	# sieve_extend.c:1118:         case 100000000:     valid_primes = 5761455;  break;
1118:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 18637              		.loc 1 1118 9 is_stmt 0 view .LVU6527
 18638 6220 E93BFAFF 		jmp	.L1558	#
 18638      FF
 18639              	.LVL1162:
GAS LISTING /tmp/ccr2dACi.s 			page 495


 18640              	.L1551:
1118:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 18641              		.loc 1 1118 9 view .LVU6528
 18642 6225 4D85C0   		test	r8, r8	# primeCount
 18643 6228 410F94C3 		sete	r11b	#, tmp191
 18644 622c 4421DA   		and	edx, r11d	# _251, tmp191
 18645 622f 4D85C0   		test	r8, r8	# primeCount
 18646 6232 450FB6EB 		movzx	r13d, r11b	# <retval>, tmp191
 18647 6236 410F95C6 		setne	r14b	#, _135
1120:sieve_extend.c ****     }
 18648              		.loc 1 1120 29 is_stmt 1 view .LVU6529
 18649              	# sieve_extend.c:1120:         default:            valid_primes= 0;
1120:sieve_extend.c ****     }
 18650              		.loc 1 1120 41 is_stmt 0 view .LVU6530
 18651 623a 31C9     		xor	ecx, ecx	# valid_primes
 18652 623c E91FFAFF 		jmp	.L1558	#
 18652      FF
 18653              	.L1545:
1120:sieve_extend.c ****     }
 18654              		.loc 1 1120 41 view .LVU6531
 18655 6241 4981F878 		cmp	r8, 9592	# primeCount,
 18655      250000
 18656              	# sieve_extend.c:1115:         case 100000:        valid_primes = 9592;     break;
1115:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 18657              		.loc 1 1115 42 view .LVU6532
 18658 6248 B9782500 		mov	ecx, 9592	# valid_primes,
 18658      00
 18659 624d 400F94C7 		sete	dil	#, tmp181
 18660 6251 21FA     		and	edx, edi	# _251, tmp181
 18661 6253 4981F878 		cmp	r8, 9592	# primeCount,
 18661      250000
 18662 625a 440FB6EF 		movzx	r13d, dil	# <retval>, tmp181
 18663 625e 410F95C6 		setne	r14b	#, _135
1115:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 18664              		.loc 1 1115 29 is_stmt 1 view .LVU6533
 18665              	.LVL1163:
1115:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 18666              		.loc 1 1115 54 view .LVU6534
 18667              	# sieve_extend.c:1115:         case 100000:        valid_primes = 9592;     break;
1115:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 18668              		.loc 1 1115 9 is_stmt 0 view .LVU6535
 18669 6262 E9F9F9FF 		jmp	.L1558	#
 18669      FF
 18670              	.LVL1164:
 18671              	.L1579:
 18672              	# sieve_extend.c:1115:         case 100000:        valid_primes = 9592;     break;
1115:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 18673              		.loc 1 1115 42 view .LVU6536
 18674 6267 B9782500 		mov	ecx, 9592	# valid_primes,
 18674      00
 18675 626c E90EFEFF 		jmp	.L1559	#
 18675      FF
 18676              		.cfi_endproc
 18677              	.LFE80:
 18679              		.section	.rodata.str1.8
 18680 0145 000000   		.align 8
 18681              	.LC14:
GAS LISTING /tmp/ccr2dACi.s 			page 496


 18682 0148 55736167 		.string	"Usage: %s [options] [maximum]\n"
 18682      653A2025 
 18682      73205B6F 
 18682      7074696F 
 18682      6E735D20 
 18683              		.section	.rodata.str1.1
 18684              	.LC15:
 18685 0031 4F707469 		.string	"Options:\n"
 18685      6F6E733A 
 18685      0A00
 18686              		.section	.rodata.str1.8
 18687 0167 00       		.align 8
 18688              	.LC16:
 18689 0168 20202D2D 		.string	"  --verbose <level>  Show more output to a certain level:\n"
 18689      76657262 
 18689      6F736520 
 18689      3C6C6576 
 18689      656C3E20 
 18690 01a3 00000000 		.align 8
 18690      00
 18691              	.LC17:
 18692 01a8 20202020 		.string	"                     1 - show phase progress\n"
 18692      20202020 
 18692      20202020 
 18692      20202020 
 18692      20202020 
 18693 01d6 0000     		.align 8
 18694              	.LC18:
 18695 01d8 20202020 		.string	"                     2 - show general progress within the phase\n"
 18695      20202020 
 18695      20202020 
 18695      20202020 
 18695      20202020 
 18696 0219 00000000 		.align 8
 18696      000000
 18697              	.LC19:
 18698 0220 20202020 		.string	"                     3 - show actual work\n"
 18698      20202020 
 18698      20202020 
 18698      20202020 
 18698      20202020 
 18699 024b 00000000 		.align 8
 18699      00
 18700              	.LC20:
 18701 0250 20202D2D 		.string	"  --check            check the correctness of the algorithm\n"
 18701      63686563 
 18701      6B202020 
 18701      20202020 
 18701      20202020 
 18702 028d 000000   		.align 8
 18703              	.LC21:
 18704 0290 20202D2D 		.string	"  --show <maximum>   Show the primes found up to the maximum\n"
 18704      73686F77 
 18704      203C6D61 
 18704      78696D75 
 18704      6D3E2020 
 18705 02ce 0000     		.align 8
GAS LISTING /tmp/ccr2dACi.s 			page 497


 18706              	.LC22:
 18707 02d0 20202D2D 		.string	"  --tune  <level>    find the best settings for the current os and hardware\n"
 18707      74756E65 
 18707      20203C6C 
 18707      6576656C 
 18707      3E202020 
 18708 031d 000000   		.align 8
 18709              	.LC23:
 18710 0320 20202020 		.string	"                     1 - fast tuning\n"
 18710      20202020 
 18710      20202020 
 18710      20202020 
 18710      20202020 
 18711 0346 0000     		.align 8
 18712              	.LC24:
 18713 0348 20202020 		.string	"                     2 - refined tuning\n"
 18713      20202020 
 18713      20202020 
 18713      20202020 
 18713      20202020 
 18714 0371 00000000 		.align 8
 18714      000000
 18715              	.LC25:
 18716 0378 20202020 		.string	"                     3 - maximum tuning (takes long)\n"
 18716      20202020 
 18716      20202020 
 18716      20202020 
 18716      20202020 
 18717              		.text
 18718 6271 66662E0F 		.p2align 4
 18718      1F840000 
 18718      0000000F 
 18718      1F4000
 18719              		.globl	usage
 18721              	usage:
 18722              	.LVL1165:
 18723              	.LFB81:
1133:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 18724              		.loc 1 1133 24 is_stmt 1 view -0
 18725              		.cfi_startproc
1133:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 18726              		.loc 1 1133 24 is_stmt 0 view .LVU6538
 18727 6280 F30F1EFA 		endbr64	
 18728 6284 50       		push	rax	#
 18729              		.cfi_def_cfa_offset 16
 18730 6285 58       		pop	rax	#
 18731              		.cfi_def_cfa_offset 8
1134:sieve_extend.c ****     fprintf(stderr, "Options:\n");
 18732              		.loc 1 1134 5 is_stmt 1 view .LVU6539
 18733              	.LVL1166:
 18734              	.LBB891:
 18735              	.LBI891:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18736              		.loc 3 98 1 view .LVU6540
 18737              	.LBB892:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18738              		.loc 3 100 3 view .LVU6541
GAS LISTING /tmp/ccr2dACi.s 			page 498


 18739              	.LBE892:
 18740              	.LBE891:
 18741              	# sieve_extend.c:1133: void usage(char *name) {
1133:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 18742              		.loc 1 1133 24 is_stmt 0 view .LVU6542
 18743 6286 488D6424 		lea	rsp, -8[rsp]	#,
 18743      F8
 18744              		.cfi_def_cfa_offset 16
 18745              	# sieve_extend.c:1133: void usage(char *name) {
1133:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 18746              		.loc 1 1133 24 view .LVU6543
 18747 628b 4889F9   		mov	rcx, rdi	# name, tmp107
 18748              	.LBB894:
 18749              	.LBB893:
 18750              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18751              		.loc 3 100 10 view .LVU6544
 18752 628e 488B3D00 		mov	rdi, QWORD PTR stderr[rip]	#, stderr
 18752      000000
 18753              	.LVL1167:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18754              		.loc 3 100 10 view .LVU6545
 18755 6295 488D1500 		lea	rdx, .LC14[rip]	#,
 18755      000000
 18756 629c BE010000 		mov	esi, 1	#,
 18756      00
 18757 62a1 31C0     		xor	eax, eax	#
 18758 62a3 E8000000 		call	__fprintf_chk@PLT	#
 18758      00
 18759              	.LVL1168:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18760              		.loc 3 100 10 view .LVU6546
 18761              	.LBE893:
 18762              	.LBE894:
1135:sieve_extend.c ****     fprintf(stderr, "  --verbose <level>  Show more output to a certain level:\n");
 18763              		.loc 1 1135 5 is_stmt 1 view .LVU6547
 18764              	.LBB895:
 18765              	.LBI895:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18766              		.loc 3 98 1 view .LVU6548
 18767              	.LBB896:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18768              		.loc 3 100 3 view .LVU6549
 18769              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18770              		.loc 3 100 10 is_stmt 0 view .LVU6550
 18771 62a8 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 18771      000000
 18772 62af BA090000 		mov	edx, 9	#,
 18772      00
 18773 62b4 BE010000 		mov	esi, 1	#,
 18773      00
 18774 62b9 488D3D00 		lea	rdi, .LC15[rip]	#,
 18774      000000
 18775 62c0 E8000000 		call	fwrite@PLT	#
 18775      00
 18776              	.LVL1169:
GAS LISTING /tmp/ccr2dACi.s 			page 499


 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18777              		.loc 3 100 10 view .LVU6551
 18778              	.LBE896:
 18779              	.LBE895:
1136:sieve_extend.c ****     fprintf(stderr, "                     1 - show phase progress\n");
 18780              		.loc 1 1136 5 is_stmt 1 view .LVU6552
 18781              	.LBB897:
 18782              	.LBI897:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18783              		.loc 3 98 1 view .LVU6553
 18784              	.LBB898:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18785              		.loc 3 100 3 view .LVU6554
 18786              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18787              		.loc 3 100 10 is_stmt 0 view .LVU6555
 18788 62c5 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 18788      000000
 18789 62cc BA3A0000 		mov	edx, 58	#,
 18789      00
 18790 62d1 BE010000 		mov	esi, 1	#,
 18790      00
 18791 62d6 488D3D00 		lea	rdi, .LC16[rip]	#,
 18791      000000
 18792 62dd E8000000 		call	fwrite@PLT	#
 18792      00
 18793              	.LVL1170:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18794              		.loc 3 100 10 view .LVU6556
 18795              	.LBE898:
 18796              	.LBE897:
1137:sieve_extend.c ****     fprintf(stderr, "                     2 - show general progress within the phase\n");
 18797              		.loc 1 1137 5 is_stmt 1 view .LVU6557
 18798              	.LBB899:
 18799              	.LBI899:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18800              		.loc 3 98 1 view .LVU6558
 18801              	.LBB900:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18802              		.loc 3 100 3 view .LVU6559
 18803              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18804              		.loc 3 100 10 is_stmt 0 view .LVU6560
 18805 62e2 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 18805      000000
 18806 62e9 BA2D0000 		mov	edx, 45	#,
 18806      00
 18807 62ee BE010000 		mov	esi, 1	#,
 18807      00
 18808 62f3 488D3D00 		lea	rdi, .LC17[rip]	#,
 18808      000000
 18809 62fa E8000000 		call	fwrite@PLT	#
 18809      00
 18810              	.LVL1171:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18811              		.loc 3 100 10 view .LVU6561
 18812              	.LBE900:
GAS LISTING /tmp/ccr2dACi.s 			page 500


 18813              	.LBE899:
1138:sieve_extend.c ****     fprintf(stderr, "                     3 - show actual work\n");
 18814              		.loc 1 1138 5 is_stmt 1 view .LVU6562
 18815              	.LBB901:
 18816              	.LBI901:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18817              		.loc 3 98 1 view .LVU6563
 18818              	.LBB902:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18819              		.loc 3 100 3 view .LVU6564
 18820              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18821              		.loc 3 100 10 is_stmt 0 view .LVU6565
 18822 62ff 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 18822      000000
 18823 6306 BA400000 		mov	edx, 64	#,
 18823      00
 18824 630b BE010000 		mov	esi, 1	#,
 18824      00
 18825 6310 488D3D00 		lea	rdi, .LC18[rip]	#,
 18825      000000
 18826 6317 E8000000 		call	fwrite@PLT	#
 18826      00
 18827              	.LVL1172:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18828              		.loc 3 100 10 view .LVU6566
 18829              	.LBE902:
 18830              	.LBE901:
1139:sieve_extend.c ****     fprintf(stderr, "  --check            check the correctness of the algorithm\n");
 18831              		.loc 1 1139 5 is_stmt 1 view .LVU6567
 18832              	.LBB903:
 18833              	.LBI903:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18834              		.loc 3 98 1 view .LVU6568
 18835              	.LBB904:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18836              		.loc 3 100 3 view .LVU6569
 18837              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18838              		.loc 3 100 10 is_stmt 0 view .LVU6570
 18839 631c 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 18839      000000
 18840 6323 BA2A0000 		mov	edx, 42	#,
 18840      00
 18841 6328 BE010000 		mov	esi, 1	#,
 18841      00
 18842 632d 488D3D00 		lea	rdi, .LC19[rip]	#,
 18842      000000
 18843 6334 E8000000 		call	fwrite@PLT	#
 18843      00
 18844              	.LVL1173:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18845              		.loc 3 100 10 view .LVU6571
 18846              	.LBE904:
 18847              	.LBE903:
1140:sieve_extend.c ****     fprintf(stderr, "  --show <maximum>   Show the primes found up to the maximum\n");
 18848              		.loc 1 1140 5 is_stmt 1 view .LVU6572
GAS LISTING /tmp/ccr2dACi.s 			page 501


 18849              	.LBB905:
 18850              	.LBI905:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18851              		.loc 3 98 1 view .LVU6573
 18852              	.LBB906:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18853              		.loc 3 100 3 view .LVU6574
 18854              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18855              		.loc 3 100 10 is_stmt 0 view .LVU6575
 18856 6339 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 18856      000000
 18857 6340 BA3C0000 		mov	edx, 60	#,
 18857      00
 18858 6345 BE010000 		mov	esi, 1	#,
 18858      00
 18859 634a 488D3D00 		lea	rdi, .LC20[rip]	#,
 18859      000000
 18860 6351 E8000000 		call	fwrite@PLT	#
 18860      00
 18861              	.LVL1174:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18862              		.loc 3 100 10 view .LVU6576
 18863              	.LBE906:
 18864              	.LBE905:
1141:sieve_extend.c ****     fprintf(stderr, "  --tune  <level>    find the best settings for the current os and hardware\n"
 18865              		.loc 1 1141 5 is_stmt 1 view .LVU6577
 18866              	.LBB907:
 18867              	.LBI907:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18868              		.loc 3 98 1 view .LVU6578
 18869              	.LBB908:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18870              		.loc 3 100 3 view .LVU6579
 18871              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18872              		.loc 3 100 10 is_stmt 0 view .LVU6580
 18873 6356 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 18873      000000
 18874 635d BA3D0000 		mov	edx, 61	#,
 18874      00
 18875 6362 BE010000 		mov	esi, 1	#,
 18875      00
 18876 6367 488D3D00 		lea	rdi, .LC21[rip]	#,
 18876      000000
 18877 636e E8000000 		call	fwrite@PLT	#
 18877      00
 18878              	.LVL1175:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18879              		.loc 3 100 10 view .LVU6581
 18880              	.LBE908:
 18881              	.LBE907:
1142:sieve_extend.c ****     fprintf(stderr, "                     1 - fast tuning\n");
 18882              		.loc 1 1142 5 is_stmt 1 view .LVU6582
 18883              	.LBB909:
 18884              	.LBI909:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
GAS LISTING /tmp/ccr2dACi.s 			page 502


 18885              		.loc 3 98 1 view .LVU6583
 18886              	.LBB910:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18887              		.loc 3 100 3 view .LVU6584
 18888              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18889              		.loc 3 100 10 is_stmt 0 view .LVU6585
 18890 6373 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 18890      000000
 18891 637a BA4C0000 		mov	edx, 76	#,
 18891      00
 18892 637f BE010000 		mov	esi, 1	#,
 18892      00
 18893 6384 488D3D00 		lea	rdi, .LC22[rip]	#,
 18893      000000
 18894 638b E8000000 		call	fwrite@PLT	#
 18894      00
 18895              	.LVL1176:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18896              		.loc 3 100 10 view .LVU6586
 18897              	.LBE910:
 18898              	.LBE909:
1143:sieve_extend.c ****     fprintf(stderr, "                     2 - refined tuning\n");
 18899              		.loc 1 1143 5 is_stmt 1 view .LVU6587
 18900              	.LBB911:
 18901              	.LBI911:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18902              		.loc 3 98 1 view .LVU6588
 18903              	.LBB912:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18904              		.loc 3 100 3 view .LVU6589
 18905              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18906              		.loc 3 100 10 is_stmt 0 view .LVU6590
 18907 6390 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 18907      000000
 18908 6397 BA250000 		mov	edx, 37	#,
 18908      00
 18909 639c BE010000 		mov	esi, 1	#,
 18909      00
 18910 63a1 488D3D00 		lea	rdi, .LC23[rip]	#,
 18910      000000
 18911 63a8 E8000000 		call	fwrite@PLT	#
 18911      00
 18912              	.LVL1177:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18913              		.loc 3 100 10 view .LVU6591
 18914              	.LBE912:
 18915              	.LBE911:
1144:sieve_extend.c ****     fprintf(stderr, "                     3 - maximum tuning (takes long)\n");
 18916              		.loc 1 1144 5 is_stmt 1 view .LVU6592
 18917              	.LBB913:
 18918              	.LBI913:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18919              		.loc 3 98 1 view .LVU6593
 18920              	.LBB914:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
GAS LISTING /tmp/ccr2dACi.s 			page 503


 18921              		.loc 3 100 3 view .LVU6594
 18922              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18923              		.loc 3 100 10 is_stmt 0 view .LVU6595
 18924 63ad 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 18924      000000
 18925 63b4 BA280000 		mov	edx, 40	#,
 18925      00
 18926 63b9 BE010000 		mov	esi, 1	#,
 18926      00
 18927 63be 488D3D00 		lea	rdi, .LC24[rip]	#,
 18927      000000
 18928 63c5 E8000000 		call	fwrite@PLT	#
 18928      00
 18929              	.LVL1178:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18930              		.loc 3 100 10 view .LVU6596
 18931              	.LBE914:
 18932              	.LBE913:
1145:sieve_extend.c ****     exit(1);
 18933              		.loc 1 1145 5 is_stmt 1 view .LVU6597
 18934              	.LBB915:
 18935              	.LBI915:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18936              		.loc 3 98 1 view .LVU6598
 18937              	.LBB916:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18938              		.loc 3 100 3 view .LVU6599
 18939              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18940              		.loc 3 100 10 is_stmt 0 view .LVU6600
 18941 63ca 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 18941      000000
 18942 63d1 488D3D00 		lea	rdi, .LC25[rip]	#,
 18942      000000
 18943 63d8 BA350000 		mov	edx, 53	#,
 18943      00
 18944 63dd BE010000 		mov	esi, 1	#,
 18944      00
 18945 63e2 E8000000 		call	fwrite@PLT	#
 18945      00
 18946              	.LVL1179:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18947              		.loc 3 100 10 view .LVU6601
 18948              	.LBE916:
 18949              	.LBE915:
1146:sieve_extend.c **** }
 18950              		.loc 1 1146 5 is_stmt 1 view .LVU6602
 18951 63e7 BF010000 		mov	edi, 1	#,
 18951      00
 18952 63ec E8000000 		call	exit@PLT	#
 18952      00
 18953              	.LVL1180:
 18954              		.cfi_endproc
 18955              	.LFE81:
 18957              		.section	.rodata.str1.1
 18958              	.LC27:
GAS LISTING /tmp/ccr2dACi.s 			page 504


 18959 003b 56616C69 		.string	"Validating... "
 18959      64617469 
 18959      6E672E2E 
 18959      2E2000
 18960              	.LC28:
 18961 004a 2D2D6865 		.string	"--help"
 18961      6C7000
 18962              	.LC29:
 18963 0051 2D2D7665 		.string	"--verbose"
 18963      72626F73 
 18963      6500
 18964              	.LC30:
 18965 005b 4E6F2076 		.string	"No verbose level specified\n"
 18965      6572626F 
 18965      7365206C 
 18965      6576656C 
 18965      20737065 
 18966              	.LC31:
 18967 0077 256400   		.string	"%d"
 18968              		.section	.rodata.str1.8
 18969 03ae 0000     		.align 8
 18970              	.LC32:
 18971 03b0 4572726F 		.string	"Error: Invalid measurement time: %s\n"
 18971      723A2049 
 18971      6E76616C 
 18971      6964206D 
 18971      65617375 
 18972              		.section	.rodata.str1.1
 18973              	.LC33:
 18974 007a 56657262 		.string	"Verbose level set to %d\n"
 18974      6F736520 
 18974      6C657665 
 18974      6C207365 
 18974      7420746F 
 18975              	.LC34:
 18976 0093 2D2D6368 		.string	"--check"
 18976      65636B00 
 18977              	.LC35:
 18978 009b 2D2D7475 		.string	"--tune"
 18978      6E6500
 18979              	.LC36:
 18980 00a2 4E6F2074 		.string	"No tune level specified\n"
 18980      756E6520 
 18980      6C657665 
 18980      6C207370 
 18980      65636966 
 18981              		.section	.rodata.str1.8
 18982 03d5 000000   		.align 8
 18983              	.LC37:
 18984 03d8 4572726F 		.string	"Error: Invalid tune level: %s\n"
 18984      723A2049 
 18984      6E76616C 
 18984      69642074 
 18984      756E6520 
 18985              		.section	.rodata.str1.1
 18986              	.LC38:
 18987 00bb 54756E65 		.string	"Tune level set to %d\n"
GAS LISTING /tmp/ccr2dACi.s 			page 505


 18987      206C6576 
 18987      656C2073 
 18987      65742074 
 18987      6F202564 
 18988              	.LC39:
 18989 00d1 2D2D7368 		.string	"--show"
 18989      6F7700
 18990              	.LC40:
 18991 00d8 4E6F2073 		.string	"No show maximum specified\n"
 18991      686F7720 
 18991      6D617869 
 18991      6D756D20 
 18991      73706563 
 18992              	.LC41:
 18993 00f3 256A7500 		.string	"%ju"
 18994              		.section	.rodata.str1.8
 18995 03f7 00       		.align 8
 18996              	.LC42:
 18997 03f8 4572726F 		.string	"Error: Invalid show maximum: %s\n"
 18997      723A2049 
 18997      6E76616C 
 18997      69642073 
 18997      686F7720 
 18998              		.section	.rodata.str1.1
 18999              	.LC43:
 19000 00f7 53686F77 		.string	"Show maximum set to %ju\n"
 19000      206D6178 
 19000      696D756D 
 19000      20736574 
 19000      20746F20 
 19001              	.LC44:
 19002 0110 496E7661 		.string	"Invalid size %s\n"
 19002      6C696420 
 19002      73697A65 
 19002      2025730A 
 19002      00
 19003              	.LC45:
 19004 0121 2E2E2E43 		.string	"...Checking size %ju ..."
 19004      6865636B 
 19004      696E6720 
 19004      73697A65 
 19004      20256A75 
 19005              	.LC46:
 19006 013a 2E626C6F 		.string	".blocksize %ju-"
 19006      636B7369 
 19006      7A652025 
 19006      6A752D00 
 19007              	.LC47:
 19008 014a 76616C69 		.string	"valid;"
 19008      643B00
 19009              	.LC48:
 19010 0151 2E2E2E56 		.string	"...Valid algorithm"
 19010      616C6964 
 19010      20616C67 
 19010      6F726974 
 19010      686D00
 19011              	.LC49:
GAS LISTING /tmp/ccr2dACi.s 			page 506


 19012 0164 54756E69 		.string	"Tuning..."
 19012      6E672E2E 
 19012      2E00
 19013              	.LC50:
 19014 016e 2E283E29 		.string	".(>)"
 19014      00
 19015              		.section	.rodata.str1.8
 19016 0419 00000000 		.align 8
 19016      000000
 19017              	.LC51:
 19018 0420 626C6F63 		.string	"blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector %
 19018      6B73697A 
 19018      655F6269 
 19018      74732025 
 19018      31306A75 
 19019              		.section	.rodata.str1.1
 19020              	.LC52:
 19021 0173 2E2E2E2E 		.string	"...."
 19021      00
 19022              		.section	.rodata.str1.8
 19023 04a7 00       		.align 8
 19024              	.LC53:
 19025 04a8 256A7520 		.string	"%ju results. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju\n"
 19025      72657375 
 19025      6C74732E 
 19025      20496E69 
 19025      74616C20 
 19026              		.section	.rodata.str1.1
 19027              	.LC54:
 19028 0178 42657374 		.string	"Best options"
 19028      206F7074 
 19028      696F6E73 
 19028      00
 19029              	.LC55:
 19030 0185 28256A75 		.string	"(%ju) "
 19030      292000
 19031              	.LC56:
 19032 018c 2E2E2E00 		.string	"..."
 19033              	.LC57:
 19034 0190 2E426573 		.string	".Best result:"
 19034      74207265 
 19034      73756C74 
 19034      3A00
 19035              		.section	.rodata.str1.8
 19036 04fa 00000000 		.align 8
 19036      0000
 19037              	.LC58:
 19038 0500 42656E63 		.string	"Benchmarking... with blocksize %ju steps: %ju/%ju/%ju\n"
 19038      686D6172 
 19038      6B696E67 
 19038      2E2E2E20 
 19038      77697468 
 19039 0537 00       		.align 8
 19040              	.LC60:
 19041 0538 726F6769 		.string	"rogiervandam_extend;%ju;%f;1;algorithm=other,faithful=yes,bits=1\n"
 19041      65727661 
 19041      6E64616D 
GAS LISTING /tmp/ccr2dACi.s 			page 507


 19041      5F657874 
 19041      656E643B 
 19042 057a 00000000 		.align 8
 19042      0000
 19043              	.LC61:
 19044 0580 50617373 		.string	"Passes - per 5 seconds: %f - per second %f\n"
 19044      6573202D 
 19044      20706572 
 19044      20352073 
 19044      65636F6E 
 19045              		.section	.rodata.str1.1
 19046              	.LC62:
 19047 019e 53686F77 		.string	"Show result set:"
 19047      20726573 
 19047      756C7420 
 19047      7365743A 
 19047      00
 19048              		.section	.text.startup,"ax",@progbits
 19049              		.p2align 4
 19050              		.globl	main
 19052              	main:
 19053              	.LVL1181:
 19054              	.LFB86:
1192:sieve_extend.c **** 
1193:sieve_extend.c **** static inline void tuning_result_print(tuning_result_type tuning_result) {
1194:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
1195:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
1196:sieve_extend.c ****                             (uintmax_t)tuning_result.smallstep_faster,(uintmax_t)tuning_result.medi
1197:sieve_extend.c ****                             (uintmax_t)tuning_result.passes, (uintmax_t) tuning_result.sample_max,
1198:sieve_extend.c ****                             tuning_result.elapsed_time, tuning_result.sample_duration, tuning_resul
1199:sieve_extend.c **** }
1200:sieve_extend.c **** 
1201:sieve_extend.c **** static tuning_result_type tune(int tune_level, counter_t maxints, int option_verboselevel) {
1202:sieve_extend.c ****     counter_t best_blocksize_bits = default_blocksize;
1203:sieve_extend.c **** 
1204:sieve_extend.c ****     double best_avg = 0;
1205:sieve_extend.c ****     best_blocksize_bits = 0;
1206:sieve_extend.c ****     counter_t best_smallstep_faster = 0;
1207:sieve_extend.c ****     counter_t best_mediumstep_faster = 0;
1208:sieve_extend.c ****     counter_t best_vectorstep_faster = 0;
1209:sieve_extend.c ****     counter_t smallstep_faster_steps = 4;
1210:sieve_extend.c ****     counter_t mediumstep_faster_steps = 4;
1211:sieve_extend.c ****     counter_t vectorstep_faster_steps = 32;
1212:sieve_extend.c ****     counter_t freebits_steps = anticiped_cache_line_bytesize;
1213:sieve_extend.c ****     counter_t sample_max = default_sample_max;
1214:sieve_extend.c ****     double sample_duration = default_sample_duration;
1215:sieve_extend.c **** 
1216:sieve_extend.c ****     // determines the size of the resultset
1217:sieve_extend.c ****     switch (tune_level) {
1218:sieve_extend.c ****         case 1:
1219:sieve_extend.c ****             smallstep_faster_steps  = WORD_SIZE/4;
1220:sieve_extend.c ****             mediumstep_faster_steps = WORD_SIZE/4;
1221:sieve_extend.c ****             vectorstep_faster_steps = WORD_SIZE/2;
1222:sieve_extend.c ****             freebits_steps = anticiped_cache_line_bytesize*8*2;
1223:sieve_extend.c ****             sample_max = 8;
1224:sieve_extend.c ****             sample_duration = 0.1;
1225:sieve_extend.c ****             break;
GAS LISTING /tmp/ccr2dACi.s 			page 508


1226:sieve_extend.c ****         case 2:
1227:sieve_extend.c ****             smallstep_faster_steps  = WORD_SIZE/8;
1228:sieve_extend.c ****             mediumstep_faster_steps = WORD_SIZE/8;
1229:sieve_extend.c ****             vectorstep_faster_steps = WORD_SIZE/4;
1230:sieve_extend.c ****             freebits_steps = anticiped_cache_line_bytesize*8;
1231:sieve_extend.c ****             sample_max = 8;
1232:sieve_extend.c ****             sample_duration = 0.2;
1233:sieve_extend.c ****             break;
1234:sieve_extend.c ****         case 3:
1235:sieve_extend.c ****             smallstep_faster_steps  = WORD_SIZE/16;
1236:sieve_extend.c ****             mediumstep_faster_steps = WORD_SIZE/16;
1237:sieve_extend.c ****             vectorstep_faster_steps = WORD_SIZE/16;
1238:sieve_extend.c ****             freebits_steps = anticiped_cache_line_bytesize/2;
1239:sieve_extend.c ****             sample_max = 8;
1240:sieve_extend.c ****             sample_duration = 0.2;
1241:sieve_extend.c ****             break;
1242:sieve_extend.c ****     }
1243:sieve_extend.c ****     
1244:sieve_extend.c ****     if (option_verboselevel >= 1) printf("Tuning..."); if (option_verboselevel >= 2) printf("\n");
1245:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
1246:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
1247:sieve_extend.c ****     counter_t tuning_results=0;
1248:sieve_extend.c ****     counter_t tuning_result_index=0;
1249:sieve_extend.c ****     
1250:sieve_extend.c ****     for (counter_t smallstep_faster = 0; smallstep_faster <= WORD_SIZE/2; smallstep_faster += small
1251:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
1252:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE;
1253:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
1254:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
1255:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
1256:sieve_extend.c **** 
1257:sieve_extend.c ****                         // set variables
1258:sieve_extend.c ****                         tuning_results++;
1259:sieve_extend.c ****                         tuning_result[tuning_result_index].maxints = maxints;
1260:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_duration = sample_duration;
1261:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_max = sample_max;
1262:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_kb = blocksize_kb;
1263:sieve_extend.c ****                         tuning_result[tuning_result_index].free_bits = free_bits;
1264:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_bits = blocksize_bits;
1265:sieve_extend.c ****                         tuning_result[tuning_result_index].smallstep_faster = smallstep_faster;
1266:sieve_extend.c ****                         tuning_result[tuning_result_index].mediumstep_faster = mediumstep_faster;
1267:sieve_extend.c ****                         tuning_result[tuning_result_index].vectorstep_faster = vectorstep_faster;
1268:sieve_extend.c ****                         tune_benchmark(tuning_result, tuning_result_index);
1269:sieve_extend.c **** 
1270:sieve_extend.c ****                         if ( tuning_result[tuning_result_index].avg > best_avg) {
1271:sieve_extend.c ****                             best_avg = tuning_result[tuning_result_index].avg;
1272:sieve_extend.c ****                             best_blocksize_bits = blocksize_bits;
1273:sieve_extend.c ****                             best_smallstep_faster = smallstep_faster;
1274:sieve_extend.c ****                             best_mediumstep_faster = mediumstep_faster;
1275:sieve_extend.c ****                             best_vectorstep_faster = vectorstep_faster;
1276:sieve_extend.c ****                             if (option_verboselevel >=2) { printf(".(>)"); tuning_result_print(tuni
1277:sieve_extend.c ****                         }
1278:sieve_extend.c ****                         if (option_verboselevel >= 3) { printf("...."); tuning_result_print(tuning_
1279:sieve_extend.c ****                         tuning_result_index++;
1280:sieve_extend.c ****                     }
1281:sieve_extend.c ****                 }
1282:sieve_extend.c ****             }
GAS LISTING /tmp/ccr2dACi.s 			page 509


1283:sieve_extend.c ****         }
1284:sieve_extend.c ****     }
1285:sieve_extend.c ****     if (option_verboselevel >= 2) {
1286:sieve_extend.c ****         printf("%ju results. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju\n"
1287:sieve_extend.c ****         printf("Best options\n");
1288:sieve_extend.c ****     }
1289:sieve_extend.c ****     counter_t step=0;
1290:sieve_extend.c ****     while (tuning_results>4) {
1291:sieve_extend.c ****         qsort(tuning_result, (size_t)tuning_results, sizeof(tuning_result_type), compare_tuning_res
1292:sieve_extend.c ****         step++;
1293:sieve_extend.c ****         if (option_verboselevel >= 2) {
1294:sieve_extend.c ****             tuning_result_index = 0;
1295:sieve_extend.c ****             printf("(%ju) ",(uintmax_t)step); tuning_result_print(tuning_result[tuning_result_index
1296:sieve_extend.c ****             if (option_verboselevel >= 3) {
1297:sieve_extend.c ****                 for (counter_t tuning_result_index=0; tuning_result_index<min(10,tuning_results); t
1298:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
1299:sieve_extend.c ****                 }
1300:sieve_extend.c ****             }
1301:sieve_extend.c ****         }
1302:sieve_extend.c **** 
1303:sieve_extend.c ****         tuning_results = tuning_results / 2;
1304:sieve_extend.c **** 
1305:sieve_extend.c ****         for (counter_t i=0; i<tuning_results; i++) {
1306:sieve_extend.c ****             tune_benchmark(tuning_result, i);
1307:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
1308:sieve_extend.c ****         }
1309:sieve_extend.c ****         
1310:sieve_extend.c ****     }
1311:sieve_extend.c ****     tuning_result_type best_result = tuning_result[0];
1312:sieve_extend.c ****     if (option_verboselevel >= 1) {
1313:sieve_extend.c ****         tuning_result_index = 0;
1314:sieve_extend.c ****         printf(".Best result:"); tuning_result_print(tuning_result[tuning_result_index]);
1315:sieve_extend.c ****     }
1316:sieve_extend.c **** 
1317:sieve_extend.c ****     free(tuning_result);
1318:sieve_extend.c ****     return best_result;
1319:sieve_extend.c **** }
1320:sieve_extend.c **** 
1321:sieve_extend.c **** int main(int argc, char *argv[]) {
 19055              		.loc 1 1321 34 view -0
 19056              		.cfi_startproc
 19057              		.loc 1 1321 34 is_stmt 0 view .LVU6604
 19058 0000 F30F1EFA 		endbr64	
 19059 0004 4157     		push	r15	#
 19060              		.cfi_def_cfa_offset 16
 19061              		.cfi_offset 15, -16
 19062 0006 4156     		push	r14	#
 19063              		.cfi_def_cfa_offset 24
 19064              		.cfi_offset 14, -24
 19065 0008 4155     		push	r13	#
 19066              		.cfi_def_cfa_offset 32
 19067              		.cfi_offset 13, -32
 19068 000a 4154     		push	r12	#
 19069              		.cfi_def_cfa_offset 40
 19070              		.cfi_offset 12, -40
 19071 000c 55       		push	rbp	#
 19072              		.cfi_def_cfa_offset 48
GAS LISTING /tmp/ccr2dACi.s 			page 510


 19073              		.cfi_offset 6, -48
 19074 000d 53       		push	rbx	#
 19075              		.cfi_def_cfa_offset 56
 19076              		.cfi_offset 3, -56
 19077 000e 488DA424 		lea	rsp, -232[rsp]	#,
 19077      18FFFFFF 
 19078              		.cfi_def_cfa_offset 288
 19079              	# sieve_extend.c:1321: int main(int argc, char *argv[]) {
 19080              		.loc 1 1321 34 view .LVU6605
 19081 0016 64488B04 		mov	rax, QWORD PTR fs:40	# tmp570, MEM[(<address-space-1> long unsigned int *)40B]
 19081      25280000 
 19081      00
 19082 001f 48898424 		mov	QWORD PTR 216[rsp], rax	# D.7550, tmp570
 19082      D8000000 
 19083 0027 31C0     		xor	eax, eax	# tmp570
1322:sieve_extend.c **** 
1323:sieve_extend.c ****     
1324:sieve_extend.c ****     counter_t option_maxFactor  = default_sieve_limit;
 19084              		.loc 1 1324 5 is_stmt 1 view .LVU6606
 19085              	# sieve_extend.c:1324:     counter_t option_maxFactor  = default_sieve_limit;
 19086              		.loc 1 1324 15 is_stmt 0 view .LVU6607
 19087 0029 48C78424 		mov	QWORD PTR 160[rsp], 1000000	# option_maxFactor,
 19087      A0000000 
 19087      40420F00 
1325:sieve_extend.c ****     counter_t option_showMaxFactor = default_showMaxFactor;
 19088              		.loc 1 1325 5 is_stmt 1 view .LVU6608
 19089              	.LBB1023:
 19090              	# sieve_extend.c:1330:     for (int arg=1; arg < argc; arg++) {
1326:sieve_extend.c ****     int option_verboselevel = default_verbose_level;
1327:sieve_extend.c ****     int option_check = default_check_level;
1328:sieve_extend.c ****     int option_tunelevel = default_tune_level;
1329:sieve_extend.c **** 
1330:sieve_extend.c ****     for (int arg=1; arg < argc; arg++) {
 19091              		.loc 1 1330 5 is_stmt 0 view .LVU6609
 19092 0035 83FF01   		cmp	edi, 1	# argc,
 19093              	.LBE1023:
 19094              	# sieve_extend.c:1325:     counter_t option_showMaxFactor = default_showMaxFactor;
1325:sieve_extend.c ****     counter_t option_showMaxFactor = default_showMaxFactor;
 19095              		.loc 1 1325 15 view .LVU6610
 19096 0038 48C78424 		mov	QWORD PTR 168[rsp], 0	# option_showMaxFactor,
 19096      A8000000 
 19096      00000000 
1326:sieve_extend.c ****     int option_verboselevel = default_verbose_level;
 19097              		.loc 1 1326 5 is_stmt 1 view .LVU6611
 19098              	# sieve_extend.c:1326:     int option_verboselevel = default_verbose_level;
1326:sieve_extend.c ****     int option_verboselevel = default_verbose_level;
 19099              		.loc 1 1326 9 is_stmt 0 view .LVU6612
 19100 0044 C7842498 		mov	DWORD PTR 152[rsp], 1	# option_verboselevel,
 19100      00000001 
 19100      000000
1327:sieve_extend.c ****     int option_tunelevel = default_tune_level;
 19101              		.loc 1 1327 5 is_stmt 1 view .LVU6613
 19102              	.LVL1182:
1328:sieve_extend.c **** 
 19103              		.loc 1 1328 5 view .LVU6614
 19104              	# sieve_extend.c:1328:     int option_tunelevel = default_tune_level;
1328:sieve_extend.c **** 
GAS LISTING /tmp/ccr2dACi.s 			page 511


 19105              		.loc 1 1328 9 is_stmt 0 view .LVU6615
 19106 004f C784249C 		mov	DWORD PTR 156[rsp], 0	# option_tunelevel,
 19106      00000000 
 19106      000000
 19107              		.loc 1 1330 5 is_stmt 1 view .LVU6616
 19108              	.LBB1048:
 19109              		.loc 1 1330 10 view .LVU6617
 19110              	.LVL1183:
 19111              		.loc 1 1330 21 view .LVU6618
 19112              	# sieve_extend.c:1330:     for (int arg=1; arg < argc; arg++) {
 19113              		.loc 1 1330 5 is_stmt 0 view .LVU6619
 19114 005a 0F8E1C05 		jle	.L1710	#,
 19114      0000
 19115 0060 89FD     		mov	ebp, edi	# argc, tmp524
 19116 0062 4989F4   		mov	r12, rsi	# argv, tmp525
 19117              	# sieve_extend.c:1330:     for (int arg=1; arg < argc; arg++) {
 19118              		.loc 1 1330 14 view .LVU6620
 19119 0065 BB010000 		mov	ebx, 1	# arg,
 19119      00
 19120 006a 4C8D2D00 		lea	r13, .LC28[rip]	# tmp464,
 19120      000000
 19121              	# sieve_extend.c:1332:         else if (strcmp(argv[arg], "--verbose")==0) {
1331:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1332:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 19122              		.loc 1 1332 18 view .LVU6621
 19123 0071 4C8D3500 		lea	r14, .LC29[rip]	# tmp479,
 19123      000000
 19124 0078 EB66     		jmp	.L1694	#
 19125              	.LVL1184:
 19126 007a 660F1F44 		.p2align 4,,7
 19126      0000
 19127              		.p2align 3
 19128              	.L1828:
1333:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\n"); usage(argv[0]); }
 19129              		.loc 1 1333 13 is_stmt 1 view .LVU6622
 19130              	# sieve_extend.c:1333:             if (++arg >= argc) { fprintf(stderr, "No verbose level specified
 19131              		.loc 1 1333 16 is_stmt 0 view .LVU6623
 19132 0080 83C301   		add	ebx, 1	# arg,
 19133              	.LVL1185:
 19134              		.loc 1 1333 16 view .LVU6624
 19135 0083 39DD     		cmp	ebp, ebx	# argc, arg
 19136 0085 0F8E9D0E 		jle	.L1826	#,
 19136      0000
1334:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option_verboselevel > 4) {
 19137              		.loc 1 1334 13 is_stmt 1 view .LVU6625
 19138              	# sieve_extend.c:1334:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option
 19139              		.loc 1 1334 28 is_stmt 0 view .LVU6626
 19140 008b 4D8D7C04 		lea	r15, 8[r12+rax]	# _16,
 19140      08
 19141              	# sieve_extend.c:1334:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option
 19142              		.loc 1 1334 17 view .LVU6627
 19143 0090 488D9424 		lea	rdx, 152[rsp]	# tmp301,
 19143      98000000 
 19144 0098 498B3F   		mov	rdi, QWORD PTR [r15]	#, *_16
 19145 009b 31C0     		xor	eax, eax	#
 19146 009d 488D3500 		lea	rsi, .LC31[rip]	#,
 19146      000000
GAS LISTING /tmp/ccr2dACi.s 			page 512


 19147 00a4 E8000000 		call	__isoc99_sscanf@PLT	#
 19147      00
 19148              	.LVL1186:
 19149              	# sieve_extend.c:1334:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option
 19150              		.loc 1 1334 16 view .LVU6628
 19151 00a9 83F801   		cmp	eax, 1	# tmp526,
 19152 00ac 0F85E204 		jne	.L1699	#,
 19152      0000
 19153              	# sieve_extend.c:1334:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option
 19154              		.loc 1 1334 91 discriminator 1 view .LVU6629
 19155 00b2 8B942498 		mov	edx, DWORD PTR 152[rsp]	# option_verboselevel.16_19, option_verboselevel
 19155      000000
 19156              	# sieve_extend.c:1334:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option
 19157              		.loc 1 1334 68 discriminator 1 view .LVU6630
 19158 00b9 83FA04   		cmp	edx, 4	# option_verboselevel.16_19,
 19159 00bc 0F8FD204 		jg	.L1699	#,
 19159      0000
1335:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid measurement time: %s\n", argv[arg]); usage(argv[0])
1336:sieve_extend.c ****             }
1337:sieve_extend.c ****             printf("Verbose level set to %d\n",option_verboselevel);
 19160              		.loc 1 1337 13 is_stmt 1 view .LVU6631
 19161              	.LVL1187:
 19162              	.LBB1024:
 19163              	.LBI1024:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19164              		.loc 3 105 1 view .LVU6632
 19165              	.LBB1025:
 19166              		.loc 3 107 3 view .LVU6633
 19167              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19168              		.loc 3 107 10 is_stmt 0 view .LVU6634
 19169 00c2 488D3500 		lea	rsi, .LC33[rip]	#,
 19169      000000
 19170 00c9 BF010000 		mov	edi, 1	#,
 19170      00
 19171 00ce 31C0     		xor	eax, eax	#
 19172 00d0 E8000000 		call	__printf_chk@PLT	#
 19172      00
 19173              	.LVL1188:
 19174              	.L1701:
 19175              		.loc 3 107 10 view .LVU6635
 19176              	.LBE1025:
 19177              	.LBE1024:
1330:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 19178              		.loc 1 1330 33 is_stmt 1 discriminator 2 view .LVU6636
 19179              	# sieve_extend.c:1330:     for (int arg=1; arg < argc; arg++) {
1330:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 19180              		.loc 1 1330 36 is_stmt 0 discriminator 2 view .LVU6637
 19181 00d5 83C301   		add	ebx, 1	# arg,
 19182              	.LVL1189:
1330:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 19183              		.loc 1 1330 21 is_stmt 1 discriminator 2 view .LVU6638
 19184              	# sieve_extend.c:1330:     for (int arg=1; arg < argc; arg++) {
1330:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 19185              		.loc 1 1330 5 is_stmt 0 discriminator 2 view .LVU6639
 19186 00d8 39DD     		cmp	ebp, ebx	# argc, arg
 19187 00da 0F8E0001 		jle	.L1827	#,
 19187      0000
GAS LISTING /tmp/ccr2dACi.s 			page 513


 19188              	.LVL1190:
 19189              	.L1694:
1331:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 19190              		.loc 1 1331 9 is_stmt 1 view .LVU6640
 19191              	# sieve_extend.c:1331:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1331:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 19192              		.loc 1 1331 24 is_stmt 0 view .LVU6641
 19193 00e0 4863C3   		movsx	rax, ebx	# arg, arg
 19194              	# sieve_extend.c:1331:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1331:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 19195              		.loc 1 1331 13 view .LVU6642
 19196 00e3 41B90700 		mov	r9d, 7	# tmp290,
 19196      0000
 19197              	# sieve_extend.c:1331:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1331:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 19198              		.loc 1 1331 24 view .LVU6643
 19199 00e9 48C1E003 		sal	rax, 3	# _2,
 19200              	# sieve_extend.c:1331:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1331:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 19201              		.loc 1 1331 13 view .LVU6644
 19202 00ed 4C89EF   		mov	rdi, r13	# tmp289, tmp464
 19203              	# sieve_extend.c:1331:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1331:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 19204              		.loc 1 1331 24 view .LVU6645
 19205 00f0 4D8D3C04 		lea	r15, [r12+rax]	# _3,
 19206              	# sieve_extend.c:1331:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1331:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 19207              		.loc 1 1331 13 view .LVU6646
 19208 00f4 4C89C9   		mov	rcx, r9	# tmp490, tmp290
 19209 00f7 4D8B07   		mov	r8, QWORD PTR [r15]	# _4, *_3
 19210 00fa 4C89C6   		mov	rsi, r8	# _4, _4
 19211 00fd F3A6     		repz cmpsb
 19212 00ff 0F97C2   		seta	dl	#, tmp291
 19213 0102 80DA00   		sbb	dl, 0	# _5
 19214              	# sieve_extend.c:1331:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1331:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 19215              		.loc 1 1331 12 view .LVU6647
 19216 0105 84D2     		test	dl, dl	# _5
 19217 0107 0F84A404 		je	.L1824	#,
 19217      0000
1332:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\n"); usage(argv[0]); }
 19218              		.loc 1 1332 14 is_stmt 1 view .LVU6648
 19219              	# sieve_extend.c:1332:         else if (strcmp(argv[arg], "--verbose")==0) {
1332:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\n"); usage(argv[0]); }
 19220              		.loc 1 1332 18 is_stmt 0 view .LVU6649
 19221 010d B90A0000 		mov	ecx, 10	# tmp296,
 19221      00
 19222 0112 4C89C6   		mov	rsi, r8	# _4, _4
 19223 0115 4C89F7   		mov	rdi, r14	# tmp295, tmp479
 19224 0118 F3A6     		repz cmpsb
 19225 011a 410F97C2 		seta	r10b	#, tmp297
 19226 011e 4180DA00 		sbb	r10b, 0	# _11
 19227              	# sieve_extend.c:1332:         else if (strcmp(argv[arg], "--verbose")==0) {
1332:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\n"); usage(argv[0]); }
 19228              		.loc 1 1332 17 view .LVU6650
 19229 0122 4584D2   		test	r10b, r10b	# _11
 19230 0125 0F8455FF 		je	.L1828	#,
GAS LISTING /tmp/ccr2dACi.s 			page 514


 19230      FFFF
1338:sieve_extend.c ****         } 
1339:sieve_extend.c ****         else if (strcmp(argv[arg], "--check")==0) { option_check=1; }
 19231              		.loc 1 1339 14 is_stmt 1 view .LVU6651
 19232              	# sieve_extend.c:1339:         else if (strcmp(argv[arg], "--check")==0) { option_check=1; }
 19233              		.loc 1 1339 18 is_stmt 0 view .LVU6652
 19234 012b B9080000 		mov	ecx, 8	# tmp306,
 19234      00
 19235 0130 4C89C6   		mov	rsi, r8	# _4, _4
 19236 0133 488D3D00 		lea	rdi, .LC34[rip]	# tmp305,
 19236      000000
 19237 013a F3A6     		repz cmpsb
 19238 013c 410F97C3 		seta	r11b	#, tmp307
 19239 0140 4180DB00 		sbb	r11b, 0	# _23
 19240              	# sieve_extend.c:1339:         else if (strcmp(argv[arg], "--check")==0) { option_check=1; }
 19241              		.loc 1 1339 17 view .LVU6653
 19242 0144 4584DB   		test	r11b, r11b	# _23
 19243 0147 748C     		je	.L1701	#,
1340:sieve_extend.c ****         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
 19244              		.loc 1 1340 14 is_stmt 1 view .LVU6654
 19245              	# sieve_extend.c:1340:         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
 19246              		.loc 1 1340 18 is_stmt 0 view .LVU6655
 19247 0149 4C89C6   		mov	rsi, r8	# _4, _4
 19248 014c 488D3D00 		lea	rdi, .LC35[rip]	# tmp311,
 19248      000000
 19249 0153 4C89C9   		mov	rcx, r9	# tmp496, tmp290
 19250 0156 F3A6     		repz cmpsb
 19251 0158 0F97C2   		seta	dl	#, tmp313
 19252 015b 80DA00   		sbb	dl, 0	# _24
 19253              	# sieve_extend.c:1340:         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
 19254              		.loc 1 1340 17 view .LVU6656
 19255 015e 84D2     		test	dl, dl	# _24
 19256 0160 0F855A01 		jne	.L1702	#,
 19256      0000
 19257              		.loc 1 1340 52 is_stmt 1 discriminator 1 view .LVU6657
 19258              	# sieve_extend.c:1340:         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
 19259              		.loc 1 1340 68 is_stmt 0 discriminator 1 view .LVU6658
 19260 0166 C784249C 		mov	DWORD PTR 156[rsp], 0	# option_tunelevel,
 19260      00000000 
 19260      000000
1341:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No tune level specified\n"); usage(argv[0]); }
 19261              		.loc 1 1341 13 is_stmt 1 discriminator 1 view .LVU6659
 19262              	# sieve_extend.c:1341:             if (++arg >= argc) { fprintf(stderr, "No tune level specified\n"
 19263              		.loc 1 1341 16 is_stmt 0 discriminator 1 view .LVU6660
 19264 0171 83C301   		add	ebx, 1	# arg,
 19265              	.LVL1191:
 19266              		.loc 1 1341 16 discriminator 1 view .LVU6661
 19267 0174 39DD     		cmp	ebp, ebx	# argc, arg
 19268 0176 0F8EEC0D 		jle	.L1829	#,
 19268      0000
1342:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tunelevel > 4) {
 19269              		.loc 1 1342 13 is_stmt 1 view .LVU6662
 19270              	# sieve_extend.c:1342:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tu
 19271              		.loc 1 1342 28 is_stmt 0 view .LVU6663
 19272 017c 4D8D7C04 		lea	r15, 8[r12+rax]	# _29,
 19272      08
 19273              	# sieve_extend.c:1342:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tu
GAS LISTING /tmp/ccr2dACi.s 			page 515


 19274              		.loc 1 1342 17 view .LVU6664
 19275 0181 488D9424 		lea	rdx, 156[rsp]	# tmp317,
 19275      9C000000 
 19276 0189 498B3F   		mov	rdi, QWORD PTR [r15]	#, *_29
 19277 018c 31C0     		xor	eax, eax	#
 19278 018e 488D3500 		lea	rsi, .LC31[rip]	#,
 19278      000000
 19279 0195 E8000000 		call	__isoc99_sscanf@PLT	#
 19279      00
 19280              	.LVL1192:
 19281              	# sieve_extend.c:1342:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tu
 19282              		.loc 1 1342 16 view .LVU6665
 19283 019a 83F801   		cmp	eax, 1	# tmp527,
 19284 019d 0F85A70D 		jne	.L1704	#,
 19284      0000
 19285              	# sieve_extend.c:1342:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tu
 19286              		.loc 1 1342 85 discriminator 1 view .LVU6666
 19287 01a3 8B94249C 		mov	edx, DWORD PTR 156[rsp]	# option_tunelevel.20_32, option_tunelevel
 19287      000000
 19288              	# sieve_extend.c:1342:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tu
 19289              		.loc 1 1342 65 discriminator 1 view .LVU6667
 19290 01aa 83FA04   		cmp	edx, 4	# option_tunelevel.20_32,
 19291 01ad 0F8F970D 		jg	.L1704	#,
 19291      0000
1343:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid tune level: %s\n", argv[arg]); usage(argv[0]);
1344:sieve_extend.c ****             }
1345:sieve_extend.c ****             printf("Tune level set to %d\n",option_tunelevel);
 19292              		.loc 1 1345 13 is_stmt 1 view .LVU6668
 19293              	.LVL1193:
 19294              	.LBB1026:
 19295              	.LBI1026:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19296              		.loc 3 105 1 view .LVU6669
 19297              	.LBB1027:
 19298              		.loc 3 107 3 view .LVU6670
 19299              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19300              		.loc 3 107 10 is_stmt 0 view .LVU6671
 19301 01b3 31C0     		xor	eax, eax	#
 19302 01b5 488D3500 		lea	rsi, .LC38[rip]	#,
 19302      000000
 19303 01bc BF010000 		mov	edi, 1	#,
 19303      00
 19304              	.LBE1027:
 19305              	.LBE1026:
 19306              	# sieve_extend.c:1330:     for (int arg=1; arg < argc; arg++) {
1330:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 19307              		.loc 1 1330 36 view .LVU6672
 19308 01c1 83C301   		add	ebx, 1	# arg,
 19309              	.LVL1194:
 19310              	.LBB1029:
 19311              	.LBB1028:
 19312              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19313              		.loc 3 107 10 view .LVU6673
 19314 01c4 E8000000 		call	__printf_chk@PLT	#
 19314      00
 19315              	.LVL1195:
 19316              		.loc 3 107 10 view .LVU6674
GAS LISTING /tmp/ccr2dACi.s 			page 516


 19317              	.LBE1028:
 19318              	.LBE1029:
1330:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 19319              		.loc 1 1330 33 is_stmt 1 view .LVU6675
1330:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 19320              		.loc 1 1330 21 view .LVU6676
 19321              	# sieve_extend.c:1330:     for (int arg=1; arg < argc; arg++) {
1330:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 19322              		.loc 1 1330 5 is_stmt 0 view .LVU6677
 19323 01c9 39DD     		cmp	ebp, ebx	# argc, arg
 19324 01cb 0F8F0FFF 		jg	.L1694	#,
 19324      FFFF
 19325 01d1 66662E0F 		.p2align 4
 19325      1F840000 
 19325      0000000F 
 19325      1F4000
 19326              		.p2align 3
 19327              	.L1827:
1330:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 19328              		.loc 1 1330 5 view .LVU6678
 19329              	.LBE1048:
1346:sieve_extend.c ****         }
1347:sieve_extend.c ****         else if (strcmp(argv[arg], "--show")==0) { option_showMaxFactor=0;
1348:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
1349:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
1350:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
1351:sieve_extend.c ****             }
1352:sieve_extend.c ****             printf("Show maximum set to %ju\n",(uintmax_t)option_showMaxFactor);
1353:sieve_extend.c ****         }
1354:sieve_extend.c ****         else if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_maxFactor) != 1) {
1355:sieve_extend.c ****             fprintf(stderr, "Invalid size %s\n",argv[arg]); usage(argv[0]); 
1356:sieve_extend.c ****             printf("Maximum set to %ju\n",(uintmax_t)option_maxFactor);
1357:sieve_extend.c ****         }
1358:sieve_extend.c ****     }
1359:sieve_extend.c **** 
1360:sieve_extend.c ****     if (option_runonce) { // used for stats and debugging
 19330              		.loc 1 1360 5 is_stmt 1 view .LVU6679
1361:sieve_extend.c ****         struct sieve_state* sieve_instance = sieve(option_maxFactor, default_blocksize);
1362:sieve_extend.c ****         printf("\nResult set:\n");
1363:sieve_extend.c ****         show_primes(sieve_instance, option_showMaxFactor);
1364:sieve_extend.c ****         int valid = validatePrimeCount(sieve_instance,3);
1365:sieve_extend.c ****         if (!valid) printf("The sieve is NOT valid\n");
1366:sieve_extend.c ****         else printf("The sieve is VALID\n");
1367:sieve_extend.c ****         delete_sieve(sieve_instance);
1368:sieve_extend.c ****         exit(0);
1369:sieve_extend.c ****     }
1370:sieve_extend.c **** 
1371:sieve_extend.c ****     struct timespec start_time,end_time;
 19331              		.loc 1 1371 5 view .LVU6680
1372:sieve_extend.c **** 
1373:sieve_extend.c ****     if (option_check) {
 19332              		.loc 1 1373 5 view .LVU6681
1374:sieve_extend.c ****         // Count the number of primes and validate the result
1375:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Validating... ");
 19333              		.loc 1 1375 9 view .LVU6682
 19334              	# sieve_extend.c:1375:         if (option_verboselevel >= 1) printf("Validating... ");
 19335              		.loc 1 1375 12 is_stmt 0 view .LVU6683
GAS LISTING /tmp/ccr2dACi.s 			page 517


 19336 01e0 8BAC2498 		mov	ebp, DWORD PTR 152[rsp]	#, option_verboselevel
 19336      000000
 19337              	.LVL1196:
 19338              		.loc 1 1375 12 view .LVU6684
 19339 01e7 85ED     		test	ebp, ebp	#
 19340 01e9 0F8F8D03 		jg	.L1710	#,
 19340      0000
 19341              	.LVL1197:
 19342              	.L1695:
1376:sieve_extend.c ****         if (option_verboselevel >= 2) printf("\n");
 19343              		.loc 1 1376 9 is_stmt 1 view .LVU6685
 19344              	# sieve_extend.c:1376:         if (option_verboselevel >= 2) printf("\n");
 19345              		.loc 1 1376 12 is_stmt 0 view .LVU6686
 19346 01ef 83BC2498 		cmp	DWORD PTR 152[rsp], 1	# option_verboselevel,
 19346      00000001 
 19347 01f7 7E0A     		jle	.L1711	#,
 19348              		.loc 1 1376 39 is_stmt 1 view .LVU6687
 19349              	.LVL1198:
 19350              	.LBB1049:
 19351              	.LBI1049:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19352              		.loc 3 105 1 view .LVU6688
 19353              	.LBB1050:
 19354              		.loc 3 107 3 view .LVU6689
 19355              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19356              		.loc 3 107 10 is_stmt 0 view .LVU6690
 19357 01f9 BF0A0000 		mov	edi, 10	#,
 19357      00
 19358 01fe E8000000 		call	putchar@PLT	#
 19358      00
 19359              	.LVL1199:
 19360              	.L1711:
 19361              		.loc 3 107 10 view .LVU6691
 19362              	.LBE1050:
 19363              	.LBE1049:
 19364              	.LBB1051:
 19365              	# sieve_extend.c:1330:     for (int arg=1; arg < argc; arg++) {
1330:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 19366              		.loc 1 1330 14 view .LVU6692
 19367 0203 C7442420 		mov	DWORD PTR 32[rsp], 7	# %sfp,
 19367      07000000 
 19368 020b 41BD6400 		mov	r13d, 100	# sieveSize_check,
 19368      0000
 19369              	.LBE1051:
 19370              	.LBB1052:
 19371              	.LBB1053:
 19372              	.LBB1054:
 19373              	.LBB1055:
 19374              	.LBB1056:
 19375              	.LBB1057:
 19376              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19377              		.loc 3 107 10 view .LVU6693
 19378 0211 4C8D3500 		lea	r14, .LC46[rip]	# tmp478,
 19378      000000
 19379              	.L1718:
 19380              	.LVL1200:
 19381              		.loc 3 107 10 view .LVU6694
GAS LISTING /tmp/ccr2dACi.s 			page 518


 19382              	.LBE1057:
 19383              	.LBE1056:
 19384              	.LBE1055:
 19385              	.LBE1054:
1377:sieve_extend.c **** 
1378:sieve_extend.c ****         // validate algorithm - run one time for all sizes
1379:sieve_extend.c ****         for (counter_t sieveSize_check = 100; sieveSize_check <= 100000000; sieveSize_check *=10) {
1380:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 19386              		.loc 1 1380 13 is_stmt 1 view .LVU6695
 19387              	# sieve_extend.c:1380:             if (option_verboselevel >= 2) printf("...Checking size %ju ...",
 19388              		.loc 1 1380 37 is_stmt 0 view .LVU6696
 19389 0218 8B842498 		mov	eax, DWORD PTR 152[rsp]	# prephitmp_326, option_verboselevel
 19389      000000
 19390              	# sieve_extend.c:1380:             if (option_verboselevel >= 2) printf("...Checking size %ju ...",
 19391              		.loc 1 1380 16 view .LVU6697
 19392 021f 83F801   		cmp	eax, 1	# prephitmp_326,
 19393 0222 7E1D     		jle	.L1712	#,
 19394              		.loc 1 1380 43 is_stmt 1 view .LVU6698
 19395              	.LVL1201:
 19396              	.LBB1073:
 19397              	.LBI1073:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19398              		.loc 3 105 1 view .LVU6699
 19399              	.LBB1074:
 19400              		.loc 3 107 3 view .LVU6700
 19401              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19402              		.loc 3 107 10 is_stmt 0 view .LVU6701
 19403 0224 4C89EA   		mov	rdx, r13	#, sieveSize_check
 19404 0227 488D3500 		lea	rsi, .LC45[rip]	#,
 19404      000000
 19405 022e BF010000 		mov	edi, 1	#,
 19405      00
 19406 0233 31C0     		xor	eax, eax	#
 19407 0235 E8000000 		call	__printf_chk@PLT	#
 19407      00
 19408              	.LVL1202:
 19409 023a 8B842498 		mov	eax, DWORD PTR 152[rsp]	# prephitmp_326, option_verboselevel
 19409      000000
 19410              	.LVL1203:
 19411              	.L1712:
 19412              		.loc 3 107 10 view .LVU6702
 19413              	.LBE1074:
 19414              	.LBE1073:
 19415              	.LBE1053:
 19416              	.LBE1052:
 19417              	.LBB1083:
 19418              	# sieve_extend.c:1330:     for (int arg=1; arg < argc; arg++) {
1330:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 19419              		.loc 1 1330 14 view .LVU6703
 19420 0241 41BC0500 		mov	r12d, 5	# ivtmp_106,
 19420      0000
 19421 0247 BD000400 		mov	ebp, 1024	# blocksize_bits,
 19421      00
 19422 024c EB56     		jmp	.L1716	#
 19423              	.LVL1204:
 19424 024e 6690     		.p2align 4,,7
 19425              		.p2align 3
GAS LISTING /tmp/ccr2dACi.s 			page 519


 19426              	.L1713:
1330:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 19427              		.loc 1 1330 14 view .LVU6704
 19428              	.LBE1083:
 19429              	.LBB1084:
 19430              	.LBB1080:
 19431              	.LBB1075:
 19432              	.LBB1068:
1381:sieve_extend.c ****             struct sieve_state *sieve_instance_check;
1382:sieve_extend.c ****             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; blocksize_bits *= 2) {
1383:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
1384:sieve_extend.c ****                 sieve_instance_check = sieve(sieveSize_check, blocksize_bits);
 19433              		.loc 1 1384 17 is_stmt 1 view .LVU6705
 19434              	# sieve_extend.c:1384:                 sieve_instance_check = sieve(sieveSize_check, blocksize_bits
 19435              		.loc 1 1384 40 is_stmt 0 view .LVU6706
 19436 0250 4889EE   		mov	rsi, rbp	#, blocksize_bits
 19437 0253 4C89EF   		mov	rdi, r13	#, sieveSize_check
 19438 0256 E8000000 		call	sieve	#
 19438      00
 19439              	.LVL1205:
 19440              	# sieve_extend.c:1385:                 int valid = validatePrimeCount(sieve_instance_check,option_v
1385:sieve_extend.c ****                 int valid = validatePrimeCount(sieve_instance_check,option_verboselevel);
 19441              		.loc 1 1385 29 view .LVU6707
 19442 025b 8BB42498 		mov	esi, DWORD PTR 152[rsp]	#, option_verboselevel
 19442      000000
 19443              	# sieve_extend.c:1384:                 sieve_instance_check = sieve(sieveSize_check, blocksize_bits
1384:sieve_extend.c ****                 int valid = validatePrimeCount(sieve_instance_check,option_verboselevel);
 19444              		.loc 1 1384 40 view .LVU6708
 19445 0262 4989C7   		mov	r15, rax	# sieve_instance_check, tmp530
 19446              	.LVL1206:
 19447              		.loc 1 1385 17 is_stmt 1 view .LVU6709
 19448              	# sieve_extend.c:1385:                 int valid = validatePrimeCount(sieve_instance_check,option_v
 19449              		.loc 1 1385 29 is_stmt 0 view .LVU6710
 19450 0265 4889C7   		mov	rdi, rax	#, sieve_instance_check
 19451 0268 E8000000 		call	validatePrimeCount	#
 19451      00
 19452              	.LVL1207:
 19453              	.LBB1059:
 19454              	.LBB1060:
 19455              	# sieve_extend.c:117:     free(sieve->bitarray);
 117:sieve_extend.c ****     free(sieve);
 19456              		.loc 1 117 5 view .LVU6711
 19457 026d 498B3F   		mov	rdi, QWORD PTR [r15]	#, sieve_instance_check_128->bitarray
 19458              	.LBE1060:
 19459              	.LBE1059:
 19460              	# sieve_extend.c:1385:                 int valid = validatePrimeCount(sieve_instance_check,option_v
 19461              		.loc 1 1385 29 view .LVU6712
 19462 0270 89C3     		mov	ebx, eax	# valid, tmp531
 19463              	.LVL1208:
1386:sieve_extend.c ****                 delete_sieve(sieve_instance_check);
 19464              		.loc 1 1386 17 is_stmt 1 view .LVU6713
 19465              	.LBB1062:
 19466              	.LBI1059:
 116:sieve_extend.c ****     free(sieve->bitarray);
 19467              		.loc 1 116 13 view .LVU6714
 19468              	.LBB1061:
 117:sieve_extend.c ****     free(sieve);
GAS LISTING /tmp/ccr2dACi.s 			page 520


 19469              		.loc 1 117 5 view .LVU6715
 19470 0272 E8000000 		call	free@PLT	#
 19470      00
 19471              	.LVL1209:
 118:sieve_extend.c **** }
 19472              		.loc 1 118 5 view .LVU6716
 19473 0277 4C89FF   		mov	rdi, r15	#, sieve_instance_check
 19474 027a E8000000 		call	free@PLT	#
 19474      00
 19475              	.LVL1210:
 118:sieve_extend.c **** }
 19476              		.loc 1 118 5 is_stmt 0 view .LVU6717
 19477              	.LBE1061:
 19478              	.LBE1062:
1387:sieve_extend.c ****                 if (!valid) return 0; else if (option_verboselevel >= 3) printf("valid;");
 19479              		.loc 1 1387 17 is_stmt 1 view .LVU6718
 19480              	# sieve_extend.c:1387:                 if (!valid) return 0; else if (option_verboselevel >= 3) pri
 19481              		.loc 1 1387 20 is_stmt 0 view .LVU6719
 19482 027f 85DB     		test	ebx, ebx	# valid
 19483 0281 0F84C902 		je	.L1754	#,
 19483      0000
 19484              		.loc 1 1387 44 is_stmt 1 discriminator 2 view .LVU6720
 19485              	# sieve_extend.c:1387:                 if (!valid) return 0; else if (option_verboselevel >= 3) pri
 19486              		.loc 1 1387 68 is_stmt 0 discriminator 2 view .LVU6721
 19487 0287 8B842498 		mov	eax, DWORD PTR 152[rsp]	# prephitmp_326, option_verboselevel
 19487      000000
 19488              	# sieve_extend.c:1387:                 if (!valid) return 0; else if (option_verboselevel >= 3) pri
 19489              		.loc 1 1387 47 discriminator 2 view .LVU6722
 19490 028e 83F802   		cmp	eax, 2	# prephitmp_326,
 19491 0291 0F8FE900 		jg	.L1830	#,
 19491      0000
 19492              	.LBE1068:
1382:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 19493              		.loc 1 1382 75 is_stmt 1 discriminator 2 view .LVU6723
 19494              	# sieve_extend.c:1382:             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; bl
1382:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 19495              		.loc 1 1382 90 is_stmt 0 discriminator 2 view .LVU6724
 19496 0297 4801ED   		add	rbp, rbp	# blocksize_bits
 19497              	.LVL1211:
1382:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 19498              		.loc 1 1382 49 is_stmt 1 discriminator 2 view .LVU6725
 19499              	# sieve_extend.c:1382:             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; bl
1382:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 19500              		.loc 1 1382 13 is_stmt 0 discriminator 2 view .LVU6726
 19501 029a 4183EC01 		sub	r12d, 1	# ivtmp_106,
 19502 029e 0F840301 		je	.L1831	#,
 19502      0000
 19503              	.LVL1212:
 19504              	.L1716:
 19505              	.LBB1069:
1383:sieve_extend.c ****                 sieve_instance_check = sieve(sieveSize_check, blocksize_bits);
 19506              		.loc 1 1383 17 is_stmt 1 view .LVU6727
 19507              	# sieve_extend.c:1383:                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uint
1383:sieve_extend.c ****                 sieve_instance_check = sieve(sieveSize_check, blocksize_bits);
 19508              		.loc 1 1383 20 is_stmt 0 view .LVU6728
 19509 02a4 83F802   		cmp	eax, 2	# prephitmp_326,
 19510 02a7 7EA7     		jle	.L1713	#,
GAS LISTING /tmp/ccr2dACi.s 			page 521


1383:sieve_extend.c ****                 sieve_instance_check = sieve(sieveSize_check, blocksize_bits);
 19511              		.loc 1 1383 47 is_stmt 1 view .LVU6729
 19512              	.LVL1213:
 19513              	.LBB1063:
 19514              	.LBI1056:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19515              		.loc 3 105 1 view .LVU6730
 19516              	.LBB1058:
 19517              		.loc 3 107 3 view .LVU6731
 19518              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19519              		.loc 3 107 10 is_stmt 0 view .LVU6732
 19520 02a9 4889EA   		mov	rdx, rbp	#, blocksize_bits
 19521 02ac 4C89F6   		mov	rsi, r14	#, tmp478
 19522 02af BF010000 		mov	edi, 1	#,
 19522      00
 19523 02b4 31C0     		xor	eax, eax	#
 19524 02b6 E8000000 		call	__printf_chk@PLT	#
 19524      00
 19525              	.LVL1214:
 19526 02bb EB93     		jmp	.L1713	#
 19527              	.LVL1215:
 19528 02bd 0F1F00   		.p2align 4,,7
 19529              		.p2align 3
 19530              	.L1702:
 19531              		.loc 3 107 10 view .LVU6733
 19532              	.LBE1058:
 19533              	.LBE1063:
 19534              	.LBE1069:
 19535              	.LBE1075:
 19536              	.LBE1080:
 19537              	.LBE1084:
 19538              	.LBB1085:
1347:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 19539              		.loc 1 1347 14 is_stmt 1 view .LVU6734
 19540              	# sieve_extend.c:1347:         else if (strcmp(argv[arg], "--show")==0) { option_showMaxFactor=0;
1347:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 19541              		.loc 1 1347 18 is_stmt 0 view .LVU6735
 19542 02c0 4C89C9   		mov	rcx, r9	# tmp290, tmp290
 19543 02c3 4C89C6   		mov	rsi, r8	# _4, _4
 19544 02c6 488D3D00 		lea	rdi, .LC39[rip]	# tmp321,
 19544      000000
 19545 02cd F3A6     		repz cmpsb
 19546 02cf 410F97C1 		seta	r9b	#, tmp323
 19547 02d3 4180D900 		sbb	r9b, 0	# _36
 19548              	# sieve_extend.c:1347:         else if (strcmp(argv[arg], "--show")==0) { option_showMaxFactor=0;
1347:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 19549              		.loc 1 1347 17 view .LVU6736
 19550 02d7 4584C9   		test	r9b, r9b	# _36
 19551 02da 756C     		jne	.L1706	#,
1347:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 19552              		.loc 1 1347 52 is_stmt 1 discriminator 1 view .LVU6737
 19553              	# sieve_extend.c:1347:         else if (strcmp(argv[arg], "--show")==0) { option_showMaxFactor=0;
1347:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 19554              		.loc 1 1347 72 is_stmt 0 discriminator 1 view .LVU6738
 19555 02dc 48C78424 		mov	QWORD PTR 168[rsp], 0	# option_showMaxFactor,
 19555      A8000000 
 19555      00000000 
GAS LISTING /tmp/ccr2dACi.s 			page 522


1348:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 19556              		.loc 1 1348 13 is_stmt 1 discriminator 1 view .LVU6739
 19557              	# sieve_extend.c:1348:             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\
1348:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 19558              		.loc 1 1348 16 is_stmt 0 discriminator 1 view .LVU6740
 19559 02e8 83C301   		add	ebx, 1	# arg,
 19560              	.LVL1216:
1348:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 19561              		.loc 1 1348 16 discriminator 1 view .LVU6741
 19562 02eb 39DD     		cmp	ebp, ebx	# argc, arg
 19563 02ed 0F8EA00C 		jle	.L1832	#,
 19563      0000
1349:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 19564              		.loc 1 1349 13 is_stmt 1 view .LVU6742
 19565              	# sieve_extend.c:1349:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) 
1349:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 19566              		.loc 1 1349 28 is_stmt 0 view .LVU6743
 19567 02f3 4D8D7C04 		lea	r15, 8[r12+rax]	# _41,
 19567      08
 19568              	# sieve_extend.c:1349:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) 
1349:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 19569              		.loc 1 1349 17 view .LVU6744
 19570 02f8 488D9424 		lea	rdx, 168[rsp]	# tmp327,
 19570      A8000000 
 19571 0300 498B3F   		mov	rdi, QWORD PTR [r15]	#, *_41
 19572 0303 31C0     		xor	eax, eax	#
 19573 0305 488D3500 		lea	rsi, .LC41[rip]	#,
 19573      000000
 19574 030c E8000000 		call	__isoc99_sscanf@PLT	#
 19574      00
 19575              	.LVL1217:
 19576              	# sieve_extend.c:1349:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) 
1349:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 19577              		.loc 1 1349 16 view .LVU6745
 19578 0311 83F801   		cmp	eax, 1	# tmp528,
 19579 0314 0F853F0C 		jne	.L1708	#,
 19579      0000
 19580              	# sieve_extend.c:1349:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) 
1349:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 19581              		.loc 1 1349 106 discriminator 1 view .LVU6746
 19582 031a 488B9424 		mov	rdx, QWORD PTR 168[rsp]	# option_showMaxFactor.24_44, option_showMaxFactor
 19582      A8000000 
 19583              	# sieve_extend.c:1349:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) 
1349:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 19584              		.loc 1 1349 82 discriminator 1 view .LVU6747
 19585 0322 483B9424 		cmp	rdx, QWORD PTR 160[rsp]	# option_showMaxFactor.24_44, option_maxFactor
 19585      A0000000 
 19586 032a 0F87290C 		ja	.L1708	#,
 19586      0000
1352:sieve_extend.c ****         }
 19587              		.loc 1 1352 13 is_stmt 1 view .LVU6748
 19588              	.LVL1218:
 19589              	.LBB1030:
 19590              	.LBI1030:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19591              		.loc 3 105 1 view .LVU6749
 19592              	.LBB1031:
GAS LISTING /tmp/ccr2dACi.s 			page 523


 19593              		.loc 3 107 3 view .LVU6750
 19594              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19595              		.loc 3 107 10 is_stmt 0 view .LVU6751
 19596 0330 488D3500 		lea	rsi, .LC43[rip]	#,
 19596      000000
 19597 0337 BF010000 		mov	edi, 1	#,
 19597      00
 19598 033c 31C0     		xor	eax, eax	#
 19599 033e E8000000 		call	__printf_chk@PLT	#
 19599      00
 19600              	.LVL1219:
 19601 0343 E98DFDFF 		jmp	.L1701	#
 19601      FF
 19602              	.LVL1220:
 19603              		.p2align 4,,7
 19604              		.p2align 3
 19605              	.L1706:
 19606              		.loc 3 107 10 view .LVU6752
 19607              	.LBE1031:
 19608              	.LBE1030:
1354:sieve_extend.c ****             fprintf(stderr, "Invalid size %s\n",argv[arg]); usage(argv[0]); 
 19609              		.loc 1 1354 14 is_stmt 1 view .LVU6753
 19610              	# sieve_extend.c:1354:         else if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_maxFactor) != 
1354:sieve_extend.c ****             fprintf(stderr, "Invalid size %s\n",argv[arg]); usage(argv[0]); 
 19611              		.loc 1 1354 18 is_stmt 0 view .LVU6754
 19612 0348 31C0     		xor	eax, eax	#
 19613 034a 488D9424 		lea	rdx, 160[rsp]	# tmp329,
 19613      A0000000 
 19614 0352 488D3500 		lea	rsi, .LC41[rip]	#,
 19614      000000
 19615 0359 4C89C7   		mov	rdi, r8	#, _4
 19616 035c E8000000 		call	__isoc99_sscanf@PLT	#
 19616      00
 19617              	.LVL1221:
 19618              	# sieve_extend.c:1354:         else if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_maxFactor) != 
1354:sieve_extend.c ****             fprintf(stderr, "Invalid size %s\n",argv[arg]); usage(argv[0]); 
 19619              		.loc 1 1354 17 view .LVU6755
 19620 0361 83F801   		cmp	eax, 1	# tmp529,
 19621 0364 0F846BFD 		je	.L1701	#,
 19621      FFFF
1355:sieve_extend.c ****             printf("Maximum set to %ju\n",(uintmax_t)option_maxFactor);
 19622              		.loc 1 1355 13 is_stmt 1 view .LVU6756
 19623              	.LVL1222:
 19624              	.LBB1032:
 19625              	.LBI1032:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19626              		.loc 3 98 1 view .LVU6757
 19627              	.LBB1033:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19628              		.loc 3 100 3 view .LVU6758
 19629              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19630              		.loc 3 100 10 is_stmt 0 view .LVU6759
 19631 036a 498B0F   		mov	rcx, QWORD PTR [r15]	#, *_3
 19632 036d 488D1500 		lea	rdx, .LC44[rip]	#,
 19632      000000
 19633 0374 E9250200 		jmp	.L1823	#
GAS LISTING /tmp/ccr2dACi.s 			page 524


 19633      00
 19634              	.LVL1223:
 19635 0379 0F1F8000 		.p2align 4,,7
 19635      000000
 19636              		.p2align 3
 19637              	.L1830:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19638              		.loc 3 100 10 view .LVU6760
 19639              	.LBE1033:
 19640              	.LBE1032:
 19641              	.LBE1085:
 19642              	.LBB1086:
 19643              	.LBB1081:
 19644              	.LBB1076:
 19645              	.LBB1070:
 19646              		.loc 1 1387 74 is_stmt 1 view .LVU6761
 19647              	.LBB1064:
 19648              	.LBI1064:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19649              		.loc 3 105 1 view .LVU6762
 19650              	.LBB1065:
 19651              		.loc 3 107 3 view .LVU6763
 19652              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19653              		.loc 3 107 10 is_stmt 0 view .LVU6764
 19654 0380 31C0     		xor	eax, eax	#
 19655 0382 488D3500 		lea	rsi, .LC47[rip]	#,
 19655      000000
 19656 0389 BF010000 		mov	edi, 1	#,
 19656      00
 19657              	.LBE1065:
 19658              	.LBE1064:
 19659              	.LBE1070:
 19660              	# sieve_extend.c:1382:             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; bl
1382:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 19661              		.loc 1 1382 90 view .LVU6765
 19662 038e 4801ED   		add	rbp, rbp	# blocksize_bits
 19663              	.LVL1224:
 19664              	.LBB1071:
 19665              	.LBB1067:
 19666              	.LBB1066:
 19667              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19668              		.loc 3 107 10 view .LVU6766
 19669 0391 E8000000 		call	__printf_chk@PLT	#
 19669      00
 19670              	.LVL1225:
 19671 0396 8B842498 		mov	eax, DWORD PTR 152[rsp]	# prephitmp_326, option_verboselevel
 19671      000000
 19672              	.LVL1226:
 19673              		.loc 3 107 10 view .LVU6767
 19674              	.LBE1066:
 19675              	.LBE1067:
 19676              	.LBE1071:
1382:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 19677              		.loc 1 1382 75 is_stmt 1 view .LVU6768
1382:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 19678              		.loc 1 1382 49 view .LVU6769
 19679              	# sieve_extend.c:1382:             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; bl
GAS LISTING /tmp/ccr2dACi.s 			page 525


1382:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 19680              		.loc 1 1382 13 is_stmt 0 view .LVU6770
 19681 039d 4183EC01 		sub	r12d, 1	# ivtmp_106,
 19682 03a1 0F85FDFE 		jne	.L1716	#,
 19682      FFFF
 19683              	.L1831:
1382:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 19684              		.loc 1 1382 13 view .LVU6771
 19685              	.LBE1076:
1388:sieve_extend.c ****             }
1389:sieve_extend.c ****             if (option_verboselevel >= 2) printf("\n");
 19686              		.loc 1 1389 13 is_stmt 1 view .LVU6772
 19687              	# sieve_extend.c:1389:             if (option_verboselevel >= 2) printf("\n");
 19688              		.loc 1 1389 16 is_stmt 0 view .LVU6773
 19689 03a7 83F801   		cmp	eax, 1	# prephitmp_326,
 19690 03aa 7E0A     		jle	.L1717	#,
 19691              		.loc 1 1389 43 is_stmt 1 view .LVU6774
 19692              	.LVL1227:
 19693              	.LBB1077:
 19694              	.LBI1077:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19695              		.loc 3 105 1 view .LVU6775
 19696              	.LBB1078:
 19697              		.loc 3 107 3 view .LVU6776
 19698              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19699              		.loc 3 107 10 is_stmt 0 view .LVU6777
 19700 03ac BF0A0000 		mov	edi, 10	#,
 19700      00
 19701 03b1 E8000000 		call	putchar@PLT	#
 19701      00
 19702              	.LVL1228:
 19703              	.L1717:
 19704              		.loc 3 107 10 view .LVU6778
 19705              	.LBE1078:
 19706              	.LBE1077:
 19707              	.LBE1081:
1379:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 19708              		.loc 1 1379 77 is_stmt 1 discriminator 2 view .LVU6779
 19709              	# sieve_extend.c:1379:         for (counter_t sieveSize_check = 100; sieveSize_check <= 100000000; 
1379:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 19710              		.loc 1 1379 93 is_stmt 0 discriminator 2 view .LVU6780
 19711 03b6 4F8D6CAD 		lea	r13, 0[r13+r13*4]	# tmp335,
 19711      00
 19712              	.LVL1229:
1379:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 19713              		.loc 1 1379 93 discriminator 2 view .LVU6781
 19714 03bb 4D01ED   		add	r13, r13	# sieveSize_check
 19715              	.LVL1230:
1379:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 19716              		.loc 1 1379 47 is_stmt 1 discriminator 2 view .LVU6782
 19717              	# sieve_extend.c:1379:         for (counter_t sieveSize_check = 100; sieveSize_check <= 100000000; 
1379:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 19718              		.loc 1 1379 9 is_stmt 0 discriminator 2 view .LVU6783
 19719 03be 836C2420 		sub	DWORD PTR 32[rsp], 1	# %sfp,
 19719      01
 19720 03c3 0F854FFE 		jne	.L1718	#,
 19720      FFFF
GAS LISTING /tmp/ccr2dACi.s 			page 526


 19721              	.LBE1086:
1390:sieve_extend.c ****         }
1391:sieve_extend.c ****         if (option_verboselevel >= 1) printf("...Valid algorithm\n");
 19722              		.loc 1 1391 9 is_stmt 1 view .LVU6784
 19723              	# sieve_extend.c:1391:         if (option_verboselevel >= 1) printf("...Valid algorithm\n");
 19724              		.loc 1 1391 12 is_stmt 0 view .LVU6785
 19725 03c9 83BC2498 		cmp	DWORD PTR 152[rsp], 0	# option_verboselevel,
 19725      00000000 
 19726 03d1 0F8F4E09 		jg	.L1833	#,
 19726      0000
1392:sieve_extend.c ****     }
1393:sieve_extend.c ****     
1394:sieve_extend.c ****     counter_t best_blocksize_bits = default_blocksize;
 19727              		.loc 1 1394 5 is_stmt 1 view .LVU6786
 19728              	.LVL1231:
1395:sieve_extend.c ****     if (option_tunelevel) {
 19729              		.loc 1 1395 5 view .LVU6787
 19730              	# sieve_extend.c:1395:     if (option_tunelevel) {
 19731              		.loc 1 1395 9 is_stmt 0 view .LVU6788
 19732 03d7 448B8424 		mov	r8d, DWORD PTR 156[rsp]	# option_tunelevel.40_380, option_tunelevel
 19732      9C000000 
 19733              	# sieve_extend.c:1394:     counter_t best_blocksize_bits = default_blocksize;
1394:sieve_extend.c ****     if (option_tunelevel) {
 19734              		.loc 1 1394 15 view .LVU6789
 19735 03df 41BE00FC 		mov	r14d, 261120	# best_result$blocksize_bits,
 19735      0300
 19736              	# sieve_extend.c:1395:     if (option_tunelevel) {
 19737              		.loc 1 1395 8 view .LVU6790
 19738 03e5 4585C0   		test	r8d, r8d	# option_tunelevel.40_380
 19739 03e8 0F858C02 		jne	.L1834	#,
 19739      0000
 19740              	.LVL1232:
 19741              	.L1747:
 19742              	.LBB1087:
1396:sieve_extend.c ****         tuning_result_type tuning_result = tune(option_tunelevel, option_maxFactor, option_verbosel
1397:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
1398:sieve_extend.c ****         global_MEDIUMSTEP_FASTER = tuning_result.mediumstep_faster;
1399:sieve_extend.c ****         global_VECTORSTEP_FASTER = tuning_result.vectorstep_faster;
1400:sieve_extend.c ****         best_blocksize_bits = tuning_result.blocksize_bits;
1401:sieve_extend.c ****     }
1402:sieve_extend.c **** 
1403:sieve_extend.c ****     double max_time = default_sieve_duration;
1404:sieve_extend.c ****     if (best_blocksize_bits > 0) {
1405:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
1406:sieve_extend.c ****         counter_t passes = 0;
 19743              		.loc 1 1406 9 is_stmt 1 view .LVU6791
1407:sieve_extend.c ****         counter_t blocksize_bits = best_blocksize_bits;
 19744              		.loc 1 1407 9 view .LVU6792
1408:sieve_extend.c ****         double elapsed_time = 0;
 19745              		.loc 1 1408 9 view .LVU6793
1409:sieve_extend.c ****         struct sieve_state *sieve_instance;
 19746              		.loc 1 1409 9 view .LVU6794
1410:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&start_time);
 19747              		.loc 1 1410 9 view .LVU6795
 19748 03ee 488DB424 		lea	rsi, 176[rsp]	# tmp438,
 19748      B0000000 
 19749 03f6 BF010000 		mov	edi, 1	#,
GAS LISTING /tmp/ccr2dACi.s 			page 527


 19749      00
 19750 03fb E8000000 		call	clock_gettime@PLT	#
 19750      00
 19751              	.LVL1233:
1411:sieve_extend.c ****         while (elapsed_time <= max_time) {
 19752              		.loc 1 1411 9 view .LVU6796
 19753              		.loc 1 1411 15 view .LVU6797
 19754              	# sieve_extend.c:1406:         counter_t passes = 0;
1406:sieve_extend.c ****         counter_t blocksize_bits = best_blocksize_bits;
 19755              		.loc 1 1406 19 is_stmt 0 view .LVU6798
 19756 0400 4531FF   		xor	r15d, r15d	# passes
 19757 0403 4C8DA424 		lea	r12, 192[rsp]	# tmp465,
 19757      C0000000 
 19758              	.LVL1234:
 19759              	.L1748:
1412:sieve_extend.c ****             sieve_instance = sieve(option_maxFactor, blocksize_bits);//blocksize_bits);
 19760              		.loc 1 1412 13 is_stmt 1 view .LVU6799
 19761              	# sieve_extend.c:1412:             sieve_instance = sieve(option_maxFactor, blocksize_bits);//block
 19762              		.loc 1 1412 30 is_stmt 0 view .LVU6800
 19763 040b 488BBC24 		mov	rdi, QWORD PTR 160[rsp]	#, option_maxFactor
 19763      A0000000 
 19764 0413 4C89F6   		mov	rsi, r14	#, best_result$blocksize_bits
 19765              	# sieve_extend.c:1414:             passes++;
1413:sieve_extend.c ****             delete_sieve(sieve_instance);
1414:sieve_extend.c ****             passes++;
 19766              		.loc 1 1414 19 view .LVU6801
 19767 0416 4983C701 		add	r15, 1	# passes,
 19768              	# sieve_extend.c:1412:             sieve_instance = sieve(option_maxFactor, blocksize_bits);//block
1412:sieve_extend.c ****             sieve_instance = sieve(option_maxFactor, blocksize_bits);//blocksize_bits);
 19769              		.loc 1 1412 30 view .LVU6802
 19770 041a E8000000 		call	sieve	#
 19770      00
 19771              	.LVL1235:
 19772              	.LBB1088:
 19773              	.LBB1089:
 19774              	# sieve_extend.c:117:     free(sieve->bitarray);
 117:sieve_extend.c ****     free(sieve);
 19775              		.loc 1 117 5 view .LVU6803
 19776 041f 488B38   		mov	rdi, QWORD PTR [rax]	#, sieve_instance_146->bitarray
 19777              	.LBE1089:
 19778              	.LBE1088:
 19779              	# sieve_extend.c:1412:             sieve_instance = sieve(option_maxFactor, blocksize_bits);//block
1412:sieve_extend.c ****             sieve_instance = sieve(option_maxFactor, blocksize_bits);//blocksize_bits);
 19780              		.loc 1 1412 30 view .LVU6804
 19781 0422 4989C5   		mov	r13, rax	# sieve_instance, tmp533
 19782              	.LVL1236:
1413:sieve_extend.c ****             delete_sieve(sieve_instance);
 19783              		.loc 1 1413 13 is_stmt 1 view .LVU6805
 19784              	.LBB1093:
 19785              	.LBI1088:
 116:sieve_extend.c ****     free(sieve->bitarray);
 19786              		.loc 1 116 13 view .LVU6806
 19787              	.LBB1090:
 117:sieve_extend.c ****     free(sieve);
 19788              		.loc 1 117 5 view .LVU6807
 19789 0425 E8000000 		call	free@PLT	#
 19789      00
GAS LISTING /tmp/ccr2dACi.s 			page 528


 19790              	.LVL1237:
 118:sieve_extend.c **** }
 19791              		.loc 1 118 5 view .LVU6808
 19792 042a 4C89EF   		mov	rdi, r13	#, sieve_instance
 19793 042d E8000000 		call	free@PLT	#
 19793      00
 19794              	.LVL1238:
 118:sieve_extend.c **** }
 19795              		.loc 1 118 5 is_stmt 0 view .LVU6809
 19796              	.LBE1090:
 19797              	.LBE1093:
 19798              		.loc 1 1414 13 is_stmt 1 view .LVU6810
1415:sieve_extend.c ****             clock_gettime(CLOCK_MONOTONIC,&end_time);
 19799              		.loc 1 1415 13 view .LVU6811
 19800 0432 4C89E6   		mov	rsi, r12	#, tmp465
 19801 0435 BF010000 		mov	edi, 1	#,
 19801      00
 19802 043a E8000000 		call	clock_gettime@PLT	#
 19802      00
 19803              	.LVL1239:
1416:sieve_extend.c ****             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time
 19804              		.loc 1 1416 13 view .LVU6812
 19805              	# sieve_extend.c:1416:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 19806              		.loc 1 1416 62 is_stmt 0 view .LVU6813
 19807 043f C4E1D32A 		vcvtsi2sd	xmm5, xmm5, QWORD PTR 200[rsp]	# tmp441, end_time.tv_nsec
 19807      AC24C800 
 19807      0000
 19808              	# sieve_extend.c:1416:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 19809              		.loc 1 1416 68 view .LVU6814
 19810 0449 C4E1EB2A 		vcvtsi2sd	xmm2, xmm2, QWORD PTR 176[rsp]	# tmp442, start_time.tv_sec
 19810      9424B000 
 19810      0000
 19811              	# sieve_extend.c:1416:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 19812              		.loc 1 1416 108 view .LVU6815
 19813 0453 C461BB2A 		vcvtsi2sd	xmm8, xmm8, QWORD PTR 184[rsp]	# tmp444, start_time.tv_nsec
 19813      8424B800 
 19813      0000
 19814              	# sieve_extend.c:1416:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 19815              		.loc 1 1416 44 view .LVU6816
 19816 045d C461B32A 		vcvtsi2sd	xmm9, xmm9, QWORD PTR 192[rsp]	# tmp445, end_time.tv_sec
 19816      8C24C000 
 19816      0000
 19817              	# sieve_extend.c:1411:         while (elapsed_time <= max_time) {
1411:sieve_extend.c ****             sieve_instance = sieve(option_maxFactor, blocksize_bits);//blocksize_bits);
 19818              		.loc 1 1411 15 view .LVU6817
 19819 0467 C57B1015 		vmovsd	xmm10, QWORD PTR .LC59[rip]	# tmp628,
 19819      00000000 
 19820 046f C4E2E99B 		vfmsub132sd	xmm5, xmm2, QWORD PTR .LC8[rip]	# _301, tmp442,
 19820      2D000000 
 19820      00
 19821 0478 C462B19D 		vfnmadd132sd	xmm8, xmm9, QWORD PTR .LC8[rip]	# _302, tmp445,
 19821      05000000 
 19821      00
 19822              	# sieve_extend.c:1416:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 19823              		.loc 1 1416 26 view .LVU6818
 19824 0481 C4C15358 		vaddsd	xmm0, xmm5, xmm8	# elapsed_time, _301, _302
 19824      C0
GAS LISTING /tmp/ccr2dACi.s 			page 529


 19825              	.LVL1240:
1411:sieve_extend.c ****             sieve_instance = sieve(option_maxFactor, blocksize_bits);//blocksize_bits);
 19826              		.loc 1 1411 15 is_stmt 1 view .LVU6819
 19827 0486 C5792FD0 		vcomisd	xmm10, xmm0	# tmp628, elapsed_time
 19828 048a 0F828500 		jb	.L1820	#,
 19828      0000
 19829              	.LVL1241:
1412:sieve_extend.c ****             delete_sieve(sieve_instance);
 19830              		.loc 1 1412 13 view .LVU6820
 19831              	# sieve_extend.c:1412:             sieve_instance = sieve(option_maxFactor, blocksize_bits);//block
1412:sieve_extend.c ****             delete_sieve(sieve_instance);
 19832              		.loc 1 1412 30 is_stmt 0 view .LVU6821
 19833 0490 488BBC24 		mov	rdi, QWORD PTR 160[rsp]	#, option_maxFactor
 19833      A0000000 
 19834 0498 4C89F6   		mov	rsi, r14	#, best_result$blocksize_bits
 19835              	# sieve_extend.c:1414:             passes++;
1414:sieve_extend.c ****             clock_gettime(CLOCK_MONOTONIC,&end_time);
 19836              		.loc 1 1414 19 view .LVU6822
 19837 049b 4983C701 		add	r15, 1	# passes,
 19838              	# sieve_extend.c:1412:             sieve_instance = sieve(option_maxFactor, blocksize_bits);//block
1412:sieve_extend.c ****             delete_sieve(sieve_instance);
 19839              		.loc 1 1412 30 view .LVU6823
 19840 049f E8000000 		call	sieve	#
 19840      00
 19841              	.LVL1242:
 19842              	.LBB1094:
 19843              	.LBB1091:
 19844              	# sieve_extend.c:117:     free(sieve->bitarray);
 117:sieve_extend.c ****     free(sieve);
 19845              		.loc 1 117 5 view .LVU6824
 19846 04a4 488B38   		mov	rdi, QWORD PTR [rax]	#, sieve_instance_146->bitarray
 19847              	.LBE1091:
 19848              	.LBE1094:
 19849              	# sieve_extend.c:1412:             sieve_instance = sieve(option_maxFactor, blocksize_bits);//block
1412:sieve_extend.c ****             delete_sieve(sieve_instance);
 19850              		.loc 1 1412 30 view .LVU6825
 19851 04a7 4889C5   		mov	rbp, rax	# sieve_instance, tmp535
1413:sieve_extend.c ****             passes++;
 19852              		.loc 1 1413 13 is_stmt 1 view .LVU6826
 19853              	.LVL1243:
 19854              	.LBB1095:
 116:sieve_extend.c ****     free(sieve->bitarray);
 19855              		.loc 1 116 13 view .LVU6827
 19856              	.LBB1092:
 117:sieve_extend.c ****     free(sieve);
 19857              		.loc 1 117 5 view .LVU6828
 19858 04aa E8000000 		call	free@PLT	#
 19858      00
 19859              	.LVL1244:
 118:sieve_extend.c **** }
 19860              		.loc 1 118 5 view .LVU6829
 19861 04af 4889EF   		mov	rdi, rbp	#, sieve_instance
 19862 04b2 E8000000 		call	free@PLT	#
 19862      00
 19863              	.LVL1245:
 118:sieve_extend.c **** }
 19864              		.loc 1 118 5 is_stmt 0 view .LVU6830
GAS LISTING /tmp/ccr2dACi.s 			page 530


 19865              	.LBE1092:
 19866              	.LBE1095:
1414:sieve_extend.c ****             clock_gettime(CLOCK_MONOTONIC,&end_time);
 19867              		.loc 1 1414 13 is_stmt 1 view .LVU6831
1415:sieve_extend.c ****             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time
 19868              		.loc 1 1415 13 view .LVU6832
 19869 04b7 4C89E6   		mov	rsi, r12	#, tmp465
 19870 04ba BF010000 		mov	edi, 1	#,
 19870      00
 19871 04bf E8000000 		call	clock_gettime@PLT	#
 19871      00
 19872              	.LVL1246:
 19873              		.loc 1 1416 13 view .LVU6833
 19874              	# sieve_extend.c:1416:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 19875              		.loc 1 1416 62 is_stmt 0 view .LVU6834
 19876 04c4 C461A32A 		vcvtsi2sd	xmm11, xmm11, QWORD PTR 200[rsp]	# tmp518, end_time.tv_nsec
 19876      9C24C800 
 19876      0000
 19877              	# sieve_extend.c:1416:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 19878              		.loc 1 1416 68 view .LVU6835
 19879 04ce C4619B2A 		vcvtsi2sd	xmm12, xmm12, QWORD PTR 176[rsp]	# tmp519, start_time.tv_sec
 19879      A424B000 
 19879      0000
 19880              	# sieve_extend.c:1416:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 19881              		.loc 1 1416 108 view .LVU6836
 19882 04d8 C461932A 		vcvtsi2sd	xmm13, xmm13, QWORD PTR 184[rsp]	# tmp521, start_time.tv_nsec
 19882      AC24B800 
 19882      0000
 19883              	# sieve_extend.c:1416:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 19884              		.loc 1 1416 44 view .LVU6837
 19885 04e2 C4618B2A 		vcvtsi2sd	xmm14, xmm14, QWORD PTR 192[rsp]	# tmp522, end_time.tv_sec
 19885      B424C000 
 19885      0000
 19886              	# sieve_extend.c:1411:         while (elapsed_time <= max_time) {
1411:sieve_extend.c ****             sieve_instance = sieve(option_maxFactor, blocksize_bits);//blocksize_bits);
 19887              		.loc 1 1411 15 view .LVU6838
 19888 04ec C57B103D 		vmovsd	xmm15, QWORD PTR .LC59[rip]	# tmp635,
 19888      00000000 
 19889 04f4 C462999B 		vfmsub132sd	xmm11, xmm12, QWORD PTR .LC8[rip]	# _301, tmp519,
 19889      1D000000 
 19889      00
 19890 04fd C462899D 		vfnmadd132sd	xmm13, xmm14, QWORD PTR .LC8[rip]	# _302, tmp522,
 19890      2D000000 
 19890      00
 19891              	# sieve_extend.c:1416:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 19892              		.loc 1 1416 26 view .LVU6839
 19893 0506 C4C12358 		vaddsd	xmm0, xmm11, xmm13	# elapsed_time, _301, _302
 19893      C5
 19894              	.LVL1247:
1411:sieve_extend.c ****             sieve_instance = sieve(option_maxFactor, blocksize_bits);//blocksize_bits);
 19895              		.loc 1 1411 15 is_stmt 1 view .LVU6840
 19896 050b C5792FF8 		vcomisd	xmm15, xmm0	# tmp635, elapsed_time
 19897 050f 0F83F6FE 		jnb	.L1748	#,
 19897      FFFF
 19898              	.L1820:
1417:sieve_extend.c ****         }
1418:sieve_extend.c ****         printf("rogiervandam_extend;%ju;%f;1;algorithm=other,faithful=yes,bits=1\n", (uintmax_t)pas
GAS LISTING /tmp/ccr2dACi.s 			page 531


 19899              		.loc 1 1418 9 view .LVU6841
 19900              	.LVL1248:
 19901              	.LBB1096:
 19902              	.LBI1096:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19903              		.loc 3 105 1 view .LVU6842
 19904              	.LBB1097:
 19905              		.loc 3 107 3 view .LVU6843
 19906              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19907              		.loc 3 107 10 is_stmt 0 view .LVU6844
 19908 0515 4C89FA   		mov	rdx, r15	#, passes
 19909 0518 488D3500 		lea	rsi, .LC60[rip]	#,
 19909      000000
 19910 051f BF010000 		mov	edi, 1	#,
 19910      00
 19911 0524 B8010000 		mov	eax, 1	#,
 19911      00
 19912 0529 C5FB1144 		vmovsd	QWORD PTR 32[rsp], xmm0	# %sfp, elapsed_time
 19912      2420
 19913 052f E8000000 		call	__printf_chk@PLT	#
 19913      00
 19914              	.LVL1249:
 19915              		.loc 3 107 10 view .LVU6845
 19916              	.LBE1097:
 19917              	.LBE1096:
1419:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - per second %f\n", 5*pass
 19918              		.loc 1 1419 9 is_stmt 1 view .LVU6846
 19919              	# sieve_extend.c:1419:         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - p
 19920              		.loc 1 1419 12 is_stmt 0 view .LVU6847
 19921 0534 83BC2498 		cmp	DWORD PTR 152[rsp], 0	# option_verboselevel,
 19921      00000000 
 19922 053c 0F8FCA00 		jg	.L1835	#,
 19922      0000
 19923              	.LVL1250:
 19924              	.L1746:
 19925              		.loc 1 1419 12 view .LVU6848
 19926              	.LBE1087:
1420:sieve_extend.c ****     }
1421:sieve_extend.c ****     
1422:sieve_extend.c ****     if (option_showMaxFactor > 0) {
 19927              		.loc 1 1422 5 is_stmt 1 view .LVU6849
 19928              	# sieve_extend.c:1422:     if (option_showMaxFactor > 0) {
 19929              		.loc 1 1422 8 is_stmt 0 view .LVU6850
 19930 0542 4883BC24 		cmp	QWORD PTR 168[rsp], 0	# option_showMaxFactor,
 19930      A8000000 
 19930      00
 19931 054b 756D     		jne	.L1836	#,
 19932 054d 0F1F00   		.p2align 4
 19933              		.p2align 3
 19934              	.L1754:
 19935              	.LBB1104:
 19936              	.LBB1082:
 19937              	.LBB1079:
 19938              	.LBB1072:
1387:sieve_extend.c ****             }
 19939              		.loc 1 1387 29 is_stmt 1 discriminator 1 view .LVU6851
 19940              	.LBE1072:
GAS LISTING /tmp/ccr2dACi.s 			page 532


 19941              	.LBE1079:
 19942              	.LBE1082:
 19943              	.LBE1104:
 19944              	# sieve_extend.c:1429: }
1423:sieve_extend.c ****         printf("Show result set:\n");
1424:sieve_extend.c ****         struct sieve_state* sieve_instance = sieve(option_maxFactor, option_maxFactor);
1425:sieve_extend.c ****         show_primes(sieve_instance, option_showMaxFactor);
1426:sieve_extend.c ****         delete_sieve(sieve_instance);
1427:sieve_extend.c ****         printf("\n");
1428:sieve_extend.c ****     }
1429:sieve_extend.c **** }
 19945              		.loc 1 1429 1 is_stmt 0 discriminator 1 view .LVU6852
 19946 0550 488B8424 		mov	rax, QWORD PTR 216[rsp]	# tmp571, D.7550
 19946      D8000000 
 19947 0558 64483304 		xor	rax, QWORD PTR fs:40	# tmp571, MEM[(<address-space-1> long unsigned int *)40B]
 19947      25280000 
 19947      00
 19948 0561 0F85270A 		jne	.L1837	#,
 19948      0000
 19949              	# sieve_extend.c:1429: }
 19950              		.loc 1 1429 1 view .LVU6853
 19951 0567 488DA424 		lea	rsp, 232[rsp]	#,
 19951      E8000000 
 19952              		.cfi_remember_state
 19953              		.cfi_def_cfa_offset 56
 19954 056f 31C0     		xor	eax, eax	#
 19955 0571 5B       		pop	rbx	#
 19956              		.cfi_def_cfa_offset 48
 19957 0572 5D       		pop	rbp	#
 19958              		.cfi_def_cfa_offset 40
 19959 0573 415C     		pop	r12	#
 19960              		.cfi_def_cfa_offset 32
 19961 0575 415D     		pop	r13	#
 19962              		.cfi_def_cfa_offset 24
 19963 0577 415E     		pop	r14	#
 19964              		.cfi_def_cfa_offset 16
 19965 0579 415F     		pop	r15	#
 19966              		.cfi_def_cfa_offset 8
 19967 057b C3       		ret	
 19968              	.L1710:
 19969              		.cfi_restore_state
1375:sieve_extend.c ****         if (option_verboselevel >= 2) printf("\n");
 19970              		.loc 1 1375 39 is_stmt 1 view .LVU6854
 19971              	.LVL1251:
 19972              	.LBB1105:
 19973              	.LBI1105:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19974              		.loc 3 105 1 view .LVU6855
 19975              	.LBB1106:
 19976              		.loc 3 107 3 view .LVU6856
 19977              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19978              		.loc 3 107 10 is_stmt 0 view .LVU6857
 19979 057c 488D3500 		lea	rsi, .LC27[rip]	#,
 19979      000000
 19980 0583 BF010000 		mov	edi, 1	#,
 19980      00
 19981 0588 31C0     		xor	eax, eax	#
GAS LISTING /tmp/ccr2dACi.s 			page 533


 19982 058a E8000000 		call	__printf_chk@PLT	#
 19982      00
 19983              	.LVL1252:
 19984 058f E95BFCFF 		jmp	.L1695	#
 19984      FF
 19985              	.LVL1253:
 19986              	.L1699:
 19987              		.loc 3 107 10 view .LVU6858
 19988              	.LBE1106:
 19989              	.LBE1105:
 19990              	.LBB1107:
1335:sieve_extend.c ****             }
 19991              		.loc 1 1335 17 is_stmt 1 view .LVU6859
 19992              	.LBB1034:
 19993              	.LBI1034:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19994              		.loc 3 98 1 view .LVU6860
 19995              	.LBB1035:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19996              		.loc 3 100 3 view .LVU6861
 19997              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19998              		.loc 3 100 10 is_stmt 0 view .LVU6862
 19999 0594 498B0F   		mov	rcx, QWORD PTR [r15]	#, *_16
 20000 0597 488D1500 		lea	rdx, .LC32[rip]	#,
 20000      000000
 20001              	.LVL1254:
 20002              	.L1823:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 20003              		.loc 3 100 10 view .LVU6863
 20004              	.LBE1035:
 20005              	.LBE1034:
 20006              	.LBB1036:
 20007              	.LBB1037:
 20008 059e 488B3D00 		mov	rdi, QWORD PTR stderr[rip]	#, stderr
 20008      000000
 20009 05a5 BE010000 		mov	esi, 1	#,
 20009      00
 20010 05aa 31C0     		xor	eax, eax	#
 20011 05ac E8000000 		call	__fprintf_chk@PLT	#
 20011      00
 20012              	.LVL1255:
 20013              	.L1824:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 20014              		.loc 3 100 10 view .LVU6864
 20015              	.LBE1037:
 20016              	.LBE1036:
1343:sieve_extend.c ****             }
 20017              		.loc 1 1343 80 is_stmt 1 view .LVU6865
 20018 05b1 498B3C24 		mov	rdi, QWORD PTR [r12]	#, *argv_159(D)
 20019 05b5 E8000000 		call	usage	#
 20019      00
 20020              	.LVL1256:
 20021              	.L1836:
1343:sieve_extend.c ****             }
 20022              		.loc 1 1343 80 is_stmt 0 view .LVU6866
 20023              	.LBE1107:
GAS LISTING /tmp/ccr2dACi.s 			page 534


 20024              	.LBB1108:
1423:sieve_extend.c ****         struct sieve_state* sieve_instance = sieve(option_maxFactor, option_maxFactor);
 20025              		.loc 1 1423 9 is_stmt 1 view .LVU6867
 20026              	.LBB1109:
 20027              	.LBI1109:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20028              		.loc 3 105 1 view .LVU6868
 20029              	.LBB1110:
 20030              		.loc 3 107 3 view .LVU6869
 20031              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 20032              		.loc 3 107 10 is_stmt 0 view .LVU6870
 20033 05ba 488D3D00 		lea	rdi, .LC62[rip]	#,
 20033      000000
 20034 05c1 E8000000 		call	puts@PLT	#
 20034      00
 20035              	.LVL1257:
 20036              		.loc 3 107 10 view .LVU6871
 20037              	.LBE1110:
 20038              	.LBE1109:
1424:sieve_extend.c ****         show_primes(sieve_instance, option_showMaxFactor);
 20039              		.loc 1 1424 9 is_stmt 1 view .LVU6872
 20040              	# sieve_extend.c:1424:         struct sieve_state* sieve_instance = sieve(option_maxFactor, option_
1424:sieve_extend.c ****         show_primes(sieve_instance, option_showMaxFactor);
 20041              		.loc 1 1424 46 is_stmt 0 view .LVU6873
 20042 05c6 488BBC24 		mov	rdi, QWORD PTR 160[rsp]	# option_maxFactor.51_93, option_maxFactor
 20042      A0000000 
 20043 05ce 4889FE   		mov	rsi, rdi	#, option_maxFactor.51_93
 20044 05d1 E8000000 		call	sieve	#
 20044      00
 20045              	.LVL1258:
 20046              	# sieve_extend.c:1425:         show_primes(sieve_instance, option_showMaxFactor);
1425:sieve_extend.c ****         delete_sieve(sieve_instance);
 20047              		.loc 1 1425 9 view .LVU6874
 20048 05d6 488B9424 		mov	rdx, QWORD PTR 168[rsp]	#, option_showMaxFactor
 20048      A8000000 
 20049              	# sieve_extend.c:1424:         struct sieve_state* sieve_instance = sieve(option_maxFactor, option_
1424:sieve_extend.c ****         show_primes(sieve_instance, option_showMaxFactor);
 20050              		.loc 1 1424 46 view .LVU6875
 20051 05de 4989C6   		mov	r14, rax	# sieve_instance, tmp534
 20052              	.LVL1259:
1425:sieve_extend.c ****         delete_sieve(sieve_instance);
 20053              		.loc 1 1425 9 is_stmt 1 view .LVU6876
 20054 05e1 488D7008 		lea	rsi, 8[rax]	# tmp460,
 20055 05e5 4889C7   		mov	rdi, rax	#, sieve_instance
 20056 05e8 E8000000 		call	show_primes.isra.0	#
 20056      00
 20057              	.LVL1260:
1426:sieve_extend.c ****         printf("\n");
 20058              		.loc 1 1426 9 view .LVU6877
 20059              	.LBB1111:
 20060              	.LBI1111:
 116:sieve_extend.c ****     free(sieve->bitarray);
 20061              		.loc 1 116 13 view .LVU6878
 20062              	.LBB1112:
 117:sieve_extend.c ****     free(sieve);
 20063              		.loc 1 117 5 view .LVU6879
 20064 05ed 498B3E   		mov	rdi, QWORD PTR [r14]	#, sieve_instance_151->bitarray
GAS LISTING /tmp/ccr2dACi.s 			page 535


 20065 05f0 E8000000 		call	free@PLT	#
 20065      00
 20066              	.LVL1261:
 118:sieve_extend.c **** }
 20067              		.loc 1 118 5 view .LVU6880
 20068 05f5 4C89F7   		mov	rdi, r14	#, sieve_instance
 20069 05f8 E8000000 		call	free@PLT	#
 20069      00
 20070              	.LVL1262:
 118:sieve_extend.c **** }
 20071              		.loc 1 118 5 is_stmt 0 view .LVU6881
 20072              	.LBE1112:
 20073              	.LBE1111:
1427:sieve_extend.c ****     }
 20074              		.loc 1 1427 9 is_stmt 1 view .LVU6882
 20075              	.LBB1113:
 20076              	.LBI1113:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20077              		.loc 3 105 1 view .LVU6883
 20078              	.LBB1114:
 20079              		.loc 3 107 3 view .LVU6884
 20080              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 20081              		.loc 3 107 10 is_stmt 0 view .LVU6885
 20082 05fd BF0A0000 		mov	edi, 10	#,
 20082      00
 20083 0602 E8000000 		call	putchar@PLT	#
 20083      00
 20084              	.LVL1263:
 20085 0607 E944FFFF 		jmp	.L1754	#
 20085      FF
 20086              	.LVL1264:
 20087              	.L1835:
 20088              		.loc 3 107 10 view .LVU6886
 20089              	.LBE1114:
 20090              	.LBE1113:
 20091              	.LBE1108:
 20092              	.LBB1115:
1419:sieve_extend.c ****     }
 20093              		.loc 1 1419 39 is_stmt 1 discriminator 1 view .LVU6887
 20094              	.LBB1098:
 20095              	.LBI1098:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20096              		.loc 3 105 1 discriminator 1 view .LVU6888
 20097              	.LBB1099:
 20098              		.loc 3 107 3 discriminator 1 view .LVU6889
 20099              	.LBE1099:
 20100              	.LBE1098:
 20101              	# sieve_extend.c:1419:         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - p
1419:sieve_extend.c ****     }
 20102              		.loc 1 1419 39 is_stmt 0 discriminator 1 view .LVU6890
 20103 060c C4C1FB2A 		vcvtsi2sd	xmm0, xmm0, r15	# tmp448, passes
 20103      C7
 20104 0611 4D85FF   		test	r15, r15	# passes
 20105 0614 C5FB1074 		vmovsd	xmm6, QWORD PTR 32[rsp]	# elapsed_time, %sfp
 20105      2420
 20106 061a 7918     		jns	.L1751	#,
 20107 061c 4C89F8   		mov	rax, r15	# tmp450, passes
GAS LISTING /tmp/ccr2dACi.s 			page 536


 20108 061f 4C89FA   		mov	rdx, r15	# tmp451, passes
 20109 0622 48D1E8   		shr	rax	# tmp450
 20110 0625 83E201   		and	edx, 1	# tmp451,
 20111 0628 4809D0   		or	rax, rdx	# tmp514, tmp451
 20112 062b C4E1C32A 		vcvtsi2sd	xmm7, xmm7, rax	# tmp449, tmp514
 20112      F8
 20113 0630 C5C358C7 		vaddsd	xmm0, xmm7, xmm7	# tmp448, tmp449, tmp449
 20114              	.L1751:
1419:sieve_extend.c ****     }
 20115              		.loc 1 1419 39 discriminator 1 view .LVU6891
 20116 0634 C5FB5ECE 		vdivsd	xmm1, xmm0, xmm6	# tmp452, tmp448, elapsed_time
 20117              	# sieve_extend.c:1419:         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - p
1419:sieve_extend.c ****     }
 20118              		.loc 1 1419 95 discriminator 1 view .LVU6892
 20119 0638 4B8D34BF 		lea	rsi, [r15+r15*4]	# tmp453,
 20120              	# sieve_extend.c:1419:         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - p
1419:sieve_extend.c ****     }
 20121              		.loc 1 1419 39 discriminator 1 view .LVU6893
 20122 063c 4885F6   		test	rsi, rsi	# tmp453
 20123 063f C4E1E32A 		vcvtsi2sd	xmm3, xmm3, rsi	# tmp454, tmp453
 20123      DE
 20124 0644 7915     		jns	.L1753	#,
 20125 0646 4989F0   		mov	r8, rsi	# tmp456, tmp453
 20126 0649 83E601   		and	esi, 1	# tmp457,
 20127 064c 49D1E8   		shr	r8	# tmp456
 20128 064f 4909F0   		or	r8, rsi	# tmp515, tmp457
 20129 0652 C4C1DB2A 		vcvtsi2sd	xmm4, xmm4, r8	# tmp455, tmp515
 20129      E0
 20130 0657 C5DB58DC 		vaddsd	xmm3, xmm4, xmm4	# tmp454, tmp455, tmp455
 20131              	.L1753:
 20132 065b C5E35EC6 		vdivsd	xmm0, xmm3, xmm6	# tmp458, tmp454, elapsed_time
 20133              	.LBB1101:
 20134              	.LBB1100:
 20135              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 20136              		.loc 3 107 10 discriminator 1 view .LVU6894
 20137 065f 488D3500 		lea	rsi, .LC61[rip]	#,
 20137      000000
 20138 0666 BF010000 		mov	edi, 1	#,
 20138      00
 20139 066b B8020000 		mov	eax, 2	#,
 20139      00
 20140 0670 E8000000 		call	__printf_chk@PLT	#
 20140      00
 20141              	.LVL1265:
 20142 0675 E9C8FEFF 		jmp	.L1746	#
 20142      FF
 20143              	.LVL1266:
 20144              	.L1834:
 20145              		.loc 3 107 10 discriminator 1 view .LVU6895
 20146              	.LBE1100:
 20147              	.LBE1101:
 20148              	.LBE1115:
 20149              	.LBB1116:
1396:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
 20150              		.loc 1 1396 9 is_stmt 1 view .LVU6896
 20151              	# sieve_extend.c:1396:         tuning_result_type tuning_result = tune(option_tunelevel, option_max
1396:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
GAS LISTING /tmp/ccr2dACi.s 			page 537


 20152              		.loc 1 1396 44 is_stmt 0 view .LVU6897
 20153 067a 448B9424 		mov	r10d, DWORD PTR 152[rsp]	# option_verboselevel.41_63, option_verboselevel
 20153      98000000 
 20154 0682 4183E801 		sub	r8d, 1	#,
 20155 0686 4C8B9C24 		mov	r11, QWORD PTR 160[rsp]	# option_maxFactor.42_64, option_maxFactor
 20155      A0000000 
 20156 068e 4183F802 		cmp	r8d, 2	# _212,
 20157 0692 44895424 		mov	DWORD PTR 88[rsp], r10d	# %sfp, option_verboselevel.41_63
 20157      58
 20158 0697 4C895C24 		mov	QWORD PTR 120[rsp], r11	# %sfp, option_maxFactor.42_64
 20158      78
 20159              	.LVL1267:
 20160              	.LBB1117:
 20161              	.LBI1117:
1201:sieve_extend.c ****     counter_t best_blocksize_bits = default_blocksize;
 20162              		.loc 1 1201 27 is_stmt 1 view .LVU6898
 20163              	.LBB1118:
1202:sieve_extend.c **** 
 20164              		.loc 1 1202 5 view .LVU6899
1204:sieve_extend.c ****     best_blocksize_bits = 0;
 20165              		.loc 1 1204 5 view .LVU6900
1205:sieve_extend.c ****     counter_t best_smallstep_faster = 0;
 20166              		.loc 1 1205 5 view .LVU6901
1206:sieve_extend.c ****     counter_t best_mediumstep_faster = 0;
 20167              		.loc 1 1206 5 view .LVU6902
1207:sieve_extend.c ****     counter_t best_vectorstep_faster = 0;
 20168              		.loc 1 1207 5 view .LVU6903
1208:sieve_extend.c ****     counter_t smallstep_faster_steps = 4;
 20169              		.loc 1 1208 5 view .LVU6904
1209:sieve_extend.c ****     counter_t mediumstep_faster_steps = 4;
 20170              		.loc 1 1209 5 view .LVU6905
1210:sieve_extend.c ****     counter_t vectorstep_faster_steps = 32;
 20171              		.loc 1 1210 5 view .LVU6906
1211:sieve_extend.c ****     counter_t freebits_steps = anticiped_cache_line_bytesize;
 20172              		.loc 1 1211 5 view .LVU6907
1212:sieve_extend.c ****     counter_t sample_max = default_sample_max;
 20173              		.loc 1 1212 5 view .LVU6908
1213:sieve_extend.c ****     double sample_duration = default_sample_duration;
 20174              		.loc 1 1213 5 view .LVU6909
1214:sieve_extend.c **** 
 20175              		.loc 1 1214 5 view .LVU6910
1217:sieve_extend.c ****         case 1:
 20176              		.loc 1 1217 5 view .LVU6911
 20177 069c 0F869407 		jbe	.L1755	#,
 20177      0000
 20178 06a2 C5FB1035 		vmovsd	xmm6, QWORD PTR .LC26[rip]	# sample_duration,
 20178      00000000 
 20179 06aa 48C74424 		mov	QWORD PTR 104[rsp], 5	# %sfp,
 20179      68050000 
 20179      00
 20180 06b3 48C74424 		mov	QWORD PTR 96[rsp], 128	# %sfp,
 20180      60800000 
 20180      00
 20181 06bc 48C78424 		mov	QWORD PTR 128[rsp], 32	# %sfp,
 20181      80000000 
 20181      20000000 
 20182 06c8 48C78424 		mov	QWORD PTR 136[rsp], 4	# %sfp,
GAS LISTING /tmp/ccr2dACi.s 			page 538


 20182      88000000 
 20182      04000000 
 20183 06d4 C5FB1174 		vmovsd	QWORD PTR 112[rsp], xmm6	# %sfp, sample_duration
 20183      2470
 20184              	.LVL1268:
 20185              	.L1723:
1245:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 20186              		.loc 1 1245 5 view .LVU6912
 20187              	# sieve_extend.c:1245:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1245:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 20188              		.loc 1 1245 33 is_stmt 0 view .LVU6913
 20189 06da B8400000 		mov	eax, 64	# tmp348,
 20189      00
 20190 06df 31D2     		xor	edx, edx	# tmp347
 20191 06e1 48F7B424 		div	QWORD PTR 136[rsp]	# %sfp
 20191      88000000 
 20192              	# sieve_extend.c:1245:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1245:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 20193              		.loc 1 1245 254 view .LVU6914
 20194 06e9 31D2     		xor	edx, edx	# tmp355
 20195              	# sieve_extend.c:1247:     counter_t tuning_results=0;
1247:sieve_extend.c ****     counter_t tuning_result_index=0;
 20196              		.loc 1 1247 15 view .LVU6915
 20197 06eb 4531ED   		xor	r13d, r13d	# tuning_results
 20198              	# sieve_extend.c:1245:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1245:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 20199              		.loc 1 1245 83 view .LVU6916
 20200 06ee 488D7801 		lea	rdi, 1[rax]	# _229,
 20201              	.LVL1269:
1246:sieve_extend.c ****     counter_t tuning_results=0;
 20202              		.loc 1 1246 5 is_stmt 1 view .LVU6917
 20203              	# sieve_extend.c:1245:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1245:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 20204              		.loc 1 1245 254 is_stmt 0 view .LVU6918
 20205 06f2 B8001000 		mov	eax, 4096	# tmp356,
 20205      00
 20206 06f7 48F77424 		div	QWORD PTR 96[rsp]	# %sfp
 20206      60
 20207              	.LVL1270:
 20208              	# sieve_extend.c:1245:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1245:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 20209              		.loc 1 1245 148 view .LVU6919
 20210 06fc 31D2     		xor	edx, edx	# tmp365
 20211              	# sieve_extend.c:1246:     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_r
1246:sieve_extend.c ****     counter_t tuning_results=0;
 20212              		.loc 1 1246 41 view .LVU6920
 20213 06fe 480FAFC7 		imul	rax, rdi	# tmp361, _229
 20214              	.LVL1271:
1246:sieve_extend.c ****     counter_t tuning_results=0;
 20215              		.loc 1 1246 41 view .LVU6921
 20216 0702 480FAFF8 		imul	rdi, rax	# tmp362, tmp361
 20217              	.LVL1272:
 20218              	# sieve_extend.c:1245:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1245:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 20219              		.loc 1 1245 148 view .LVU6922
 20220 0706 B8000100 		mov	eax, 256	# tmp366,
 20220      00
GAS LISTING /tmp/ccr2dACi.s 			page 539


 20221 070b 48F7B424 		div	QWORD PTR 128[rsp]	# %sfp
 20221      80000000 
 20222              	# sieve_extend.c:1245:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1245:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 20223              		.loc 1 1245 201 view .LVU6923
 20224 0713 4883C001 		add	rax, 1	# tmp371,
 20225              	# sieve_extend.c:1246:     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_r
1246:sieve_extend.c ****     counter_t tuning_results=0;
 20226              		.loc 1 1246 41 view .LVU6924
 20227 0717 480FAFF8 		imul	rdi, rax	# tmp372, tmp371
 20228 071b 48C1E708 		sal	rdi, 8	# tmp372,
 20229 071f E8000000 		call	malloc@PLT	#
 20229      00
 20230              	.LVL1273:
1247:sieve_extend.c ****     counter_t tuning_result_index=0;
 20231              		.loc 1 1247 5 is_stmt 1 view .LVU6925
1248:sieve_extend.c ****     
 20232              		.loc 1 1248 5 view .LVU6926
1250:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 20233              		.loc 1 1250 5 view .LVU6927
 20234              	.LBB1119:
1250:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 20235              		.loc 1 1250 10 view .LVU6928
1250:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 20236              		.loc 1 1250 42 view .LVU6929
 20237              	.LBE1119:
 20238              	# sieve_extend.c:1204:     double best_avg = 0;
1204:sieve_extend.c ****     best_blocksize_bits = 0;
 20239              		.loc 1 1204 12 is_stmt 0 view .LVU6930
 20240 0724 C5F157C9 		vxorpd	xmm1, xmm1, xmm1	# best_avg
 20241              	# sieve_extend.c:1207:     counter_t best_mediumstep_faster = 0;
1207:sieve_extend.c ****     counter_t best_vectorstep_faster = 0;
 20242              		.loc 1 1207 15 view .LVU6931
 20243 0728 48C74424 		mov	QWORD PTR 72[rsp], 0	# %sfp,
 20243      48000000 
 20243      00
 20244              	# sieve_extend.c:1206:     counter_t best_smallstep_faster = 0;
1206:sieve_extend.c ****     counter_t best_mediumstep_faster = 0;
 20245              		.loc 1 1206 15 view .LVU6932
 20246 0731 48C74424 		mov	QWORD PTR 64[rsp], 0	# %sfp,
 20246      40000000 
 20246      00
 20247              	# sieve_extend.c:1205:     best_blocksize_bits = 0;
1205:sieve_extend.c ****     counter_t best_smallstep_faster = 0;
 20248              		.loc 1 1205 25 view .LVU6933
 20249 073a 48C74424 		mov	QWORD PTR 56[rsp], 0	# %sfp,
 20249      38000000 
 20249      00
 20250              	.LBB1149:
 20251              	# sieve_extend.c:1250:     for (counter_t smallstep_faster = 0; smallstep_faster <= WORD_SIZE/2; sm
1250:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 20252              		.loc 1 1250 20 view .LVU6934
 20253 0743 48C74424 		mov	QWORD PTR 32[rsp], 0	# %sfp,
 20253      20000000 
 20253      00
 20254 074c 48894424 		mov	QWORD PTR 80[rsp], rax	# %sfp, tuning_result
 20254      50
GAS LISTING /tmp/ccr2dACi.s 			page 540


 20255              	.LBE1149:
 20256              	# sieve_extend.c:1204:     double best_avg = 0;
1204:sieve_extend.c ****     best_blocksize_bits = 0;
 20257              		.loc 1 1204 12 view .LVU6935
 20258 0751 C5FB114C 		vmovsd	QWORD PTR 40[rsp], xmm1	# %sfp, best_avg
 20258      2428
 20259              	.LVL1274:
 20260              	.L1725:
 20261              	.LBB1150:
 20262              	.LBB1120:
1251:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE;
 20263              		.loc 1 1251 62 is_stmt 1 view .LVU6936
 20264              	.LBB1121:
 20265              	.LBB1122:
 20266              	# sieve_extend.c:1253:                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_
1253:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 20267              		.loc 1 1253 32 is_stmt 0 view .LVU6937
 20268 0757 4C8B7424 		mov	r14, QWORD PTR 32[rsp]	# mediumstep_faster, %sfp
 20268      20
 20269              	.LVL1275:
 20270 075c 0F1F4000 		.p2align 4
 20271              		.p2align 3
 20272              	.L1737:
1253:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 20273              		.loc 1 1253 32 view .LVU6938
 20274              	.LBE1122:
1252:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 20275              		.loc 1 1252 67 is_stmt 1 view .LVU6939
 20276              	.LBB1145:
 20277              	# sieve_extend.c:1253:                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_
1253:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 20278              		.loc 1 1253 32 is_stmt 0 view .LVU6940
 20279 0760 4C897424 		mov	QWORD PTR 48[rsp], r14	# %sfp, mediumstep_faster
 20279      30
 20280              	.LVL1276:
 20281 0765 66662E0F 		.p2align 4
 20281      1F840000 
 20281      000000
 20282              		.p2align 3
 20283              	.L1735:
1253:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 20284              		.loc 1 1253 50 is_stmt 1 view .LVU6941
 20285              	.LBB1123:
 20286              	# sieve_extend.c:1254:                     for (counter_t free_bits=0; (free_bits < (anticiped_cach
1254:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 20287              		.loc 1 1254 36 is_stmt 0 view .LVU6942
 20288 0770 C744245C 		mov	DWORD PTR 92[rsp], 6	# %sfp,
 20288      06000000 
 20289              	.LBE1123:
 20290              	# sieve_extend.c:1253:                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_
1253:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 20291              		.loc 1 1253 32 view .LVU6943
 20292 0778 41BC0001 		mov	r12d, 256	# blocksize_kb,
 20292      0000
 20293              	.LVL1277:
 20294 077e 6690     		.p2align 4
 20295              		.p2align 3
GAS LISTING /tmp/ccr2dACi.s 			page 541


 20296              	.L1733:
 20297              	.LBB1143:
1254:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 20298              		.loc 1 1254 49 is_stmt 1 view .LVU6944
 20299 0780 4F8D546D 		lea	r10, 0[r13+r13*2]	# tmp399,
 20299      00
 20300              	# sieve_extend.c:1254:                     for (counter_t free_bits=0; (free_bits < (anticiped_cach
1254:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 20301              		.loc 1 1254 134 is_stmt 0 view .LVU6945
 20302 0785 4C89E3   		mov	rbx, r12	# ivtmp.789, blocksize_kb
 20303 0788 4C8B5C24 		mov	r11, QWORD PTR 80[rsp]	# tuning_result, %sfp
 20303      50
 20304              	# sieve_extend.c:1254:                     for (counter_t free_bits=0; (free_bits < (anticiped_cach
1254:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 20305              		.loc 1 1254 36 view .LVU6946
 20306 078d 31ED     		xor	ebp, ebp	# free_bits
 20307 078f 49C1E205 		sal	r10, 5	# tmp400,
 20308              	# sieve_extend.c:1254:                     for (counter_t free_bits=0; (free_bits < (anticiped_cach
1254:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 20309              		.loc 1 1254 134 view .LVU6947
 20310 0793 48C1E30D 		sal	rbx, 13	# ivtmp.789,
 20311 0797 4F8D3C13 		lea	r15, [r11+r10]	# ivtmp.788,
 20312 079b EB44     		jmp	.L1731	#
 20313              	.LVL1278:
 20314 079d 0F1F00   		.p2align 4,,7
 20315              		.p2align 3
 20316              	.L1728:
 20317              	.LBB1124:
1271:sieve_extend.c ****                             best_blocksize_bits = blocksize_bits;
 20318              		.loc 1 1271 29 is_stmt 1 view .LVU6948
1272:sieve_extend.c ****                             best_smallstep_faster = smallstep_faster;
 20319              		.loc 1 1272 29 view .LVU6949
1273:sieve_extend.c ****                             best_mediumstep_faster = mediumstep_faster;
 20320              		.loc 1 1273 29 view .LVU6950
1274:sieve_extend.c ****                             best_vectorstep_faster = vectorstep_faster;
 20321              		.loc 1 1274 29 view .LVU6951
1275:sieve_extend.c ****                             if (option_verboselevel >=2) { printf(".(>)"); tuning_result_print(tuni
 20322              		.loc 1 1275 29 view .LVU6952
1276:sieve_extend.c ****                         }
 20323              		.loc 1 1276 29 view .LVU6953
 20324              	# sieve_extend.c:1276:                             if (option_verboselevel >=2) { printf(".(>)"); t
1276:sieve_extend.c ****                         }
 20325              		.loc 1 1276 32 is_stmt 0 view .LVU6954
 20326 07a0 837C2458 		cmp	DWORD PTR 88[rsp], 1	# %sfp,
 20326      01
 20327 07a5 0F8FDD03 		jg	.L1838	#,
 20327      0000
1276:sieve_extend.c ****                         }
 20328              		.loc 1 1276 32 view .LVU6955
 20329 07ab 488B7424 		mov	rsi, QWORD PTR 32[rsp]	# smallstep_faster, %sfp
 20329      20
 20330 07b0 4C897424 		mov	QWORD PTR 72[rsp], r14	# %sfp, mediumstep_faster
 20330      48
 20331              	# sieve_extend.c:1271:                             best_avg = tuning_result[tuning_result_index].av
1271:sieve_extend.c ****                             best_blocksize_bits = blocksize_bits;
 20332              		.loc 1 1271 38 view .LVU6956
 20333 07b5 C5FB115C 		vmovsd	QWORD PTR 40[rsp], xmm3	# %sfp, _253
GAS LISTING /tmp/ccr2dACi.s 			page 542


 20333      2428
 20334              	# sieve_extend.c:1272:                             best_blocksize_bits = blocksize_bits;
1272:sieve_extend.c ****                             best_smallstep_faster = smallstep_faster;
 20335              		.loc 1 1272 49 view .LVU6957
 20336 07bb 48895C24 		mov	QWORD PTR 56[rsp], rbx	# %sfp, ivtmp.789
 20336      38
 20337 07c0 48897424 		mov	QWORD PTR 64[rsp], rsi	# %sfp, smallstep_faster
 20337      40
 20338              	.LVL1279:
 20339              	.L1726:
1279:sieve_extend.c ****                     }
 20340              		.loc 1 1279 25 is_stmt 1 view .LVU6958
1279:sieve_extend.c ****                     }
 20341              		.loc 1 1279 25 is_stmt 0 view .LVU6959
 20342              	.LBE1124:
1254:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 20343              		.loc 1 1254 141 is_stmt 1 view .LVU6960
 20344              	# sieve_extend.c:1254:                     for (counter_t free_bits=0; (free_bits < (anticiped_cach
1254:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 20345              		.loc 1 1254 151 is_stmt 0 view .LVU6961
 20346 07c5 488B4C24 		mov	rcx, QWORD PTR 96[rsp]	# freebits_steps, %sfp
 20346      60
 20347 07ca 4983C760 		add	r15, 96	# ivtmp.788,
 20348 07ce 4801CD   		add	rbp, rcx	# free_bits, freebits_steps
 20349              	.LVL1280:
1254:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 20350              		.loc 1 1254 49 is_stmt 1 view .LVU6962
 20351 07d1 4829CB   		sub	rbx, rcx	# ivtmp.789, freebits_steps
 20352              	.LVL1281:
 20353              	# sieve_extend.c:1254:                     for (counter_t free_bits=0; (free_bits < (anticiped_cach
1254:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 20354              		.loc 1 1254 21 is_stmt 0 view .LVU6963
 20355 07d4 4881FDFF 		cmp	rbp, 4095	# free_bits,
 20355      0F0000
 20356 07db 0F87E700 		ja	.L1727	#,
 20356      0000
 20357              	.LVL1282:
 20358              	.L1731:
 20359              	.LBB1141:
1255:sieve_extend.c **** 
 20360              		.loc 1 1255 25 is_stmt 1 view .LVU6964
1258:sieve_extend.c ****                         tuning_result[tuning_result_index].maxints = maxints;
 20361              		.loc 1 1258 25 view .LVU6965
 20362              	# sieve_extend.c:1265:                         tuning_result[tuning_result_index].smallstep_faster 
1265:sieve_extend.c ****                         tuning_result[tuning_result_index].mediumstep_faster = mediumstep_faster;
 20363              		.loc 1 1265 77 is_stmt 0 view .LVU6966
 20364 07e1 488B7C24 		mov	rdi, QWORD PTR 32[rsp]	# smallstep_faster, %sfp
 20364      20
 20365 07e6 4C89EE   		mov	rsi, r13	# tuning_results, tuning_results
 20366              	# sieve_extend.c:1259:                         tuning_result[tuning_result_index].maxints = maxints
1259:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_duration = sample_duration;
 20367              		.loc 1 1259 68 view .LVU6967
 20368 07e9 488B4C24 		mov	rcx, QWORD PTR 120[rsp]	# option_maxFactor.42_64, %sfp
 20368      78
 20369              	# sieve_extend.c:1258:                         tuning_results++;
1258:sieve_extend.c ****                         tuning_result[tuning_result_index].maxints = maxints;
 20370              		.loc 1 1258 39 view .LVU6968
GAS LISTING /tmp/ccr2dACi.s 			page 543


 20371 07ee 4983C501 		add	r13, 1	# tuning_results,
 20372              	.LVL1283:
1259:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_duration = sample_duration;
 20373              		.loc 1 1259 25 is_stmt 1 view .LVU6969
 20374              	# sieve_extend.c:1261:                         tuning_result[tuning_result_index].sample_max = samp
1261:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_kb = blocksize_kb;
 20375              		.loc 1 1261 71 is_stmt 0 view .LVU6970
 20376 07f2 4C8B4C24 		mov	r9, QWORD PTR 104[rsp]	# sample_max, %sfp
 20376      68
 20377              	# sieve_extend.c:1267:                         tuning_result[tuning_result_index].vectorstep_faster
1267:sieve_extend.c ****                         tune_benchmark(tuning_result, tuning_result_index);
 20378              		.loc 1 1267 78 view .LVU6971
 20379 07f7 488B4424 		mov	rax, QWORD PTR 48[rsp]	# vectorstep_faster, %sfp
 20379      30
 20380              	# sieve_extend.c:1265:                         tuning_result[tuning_result_index].smallstep_faster 
1265:sieve_extend.c ****                         tuning_result[tuning_result_index].mediumstep_faster = mediumstep_faster;
 20381              		.loc 1 1265 77 view .LVU6972
 20382 07fc 49897F20 		mov	QWORD PTR 32[r15], rdi	# MEM[base: _500, offset: 32B], smallstep_faster
 20383              	# sieve_extend.c:1268:                         tune_benchmark(tuning_result, tuning_result_index);
1268:sieve_extend.c **** 
 20384              		.loc 1 1268 25 view .LVU6973
 20385 0800 488B7C24 		mov	rdi, QWORD PTR 80[rsp]	#, %sfp
 20385      50
 20386              	# sieve_extend.c:1260:                         tuning_result[tuning_result_index].sample_duration =
1260:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_max = sample_max;
 20387              		.loc 1 1260 76 view .LVU6974
 20388 0805 C5FB1064 		vmovsd	xmm4, QWORD PTR 112[rsp]	# sample_duration, %sfp
 20388      2470
 20389              	# sieve_extend.c:1259:                         tuning_result[tuning_result_index].maxints = maxints
1259:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_duration = sample_duration;
 20390              		.loc 1 1259 68 view .LVU6975
 20391 080b 49890F   		mov	QWORD PTR [r15], rcx	# MEM[base: _500, offset: 0B], option_maxFactor.42_64
1260:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_max = sample_max;
 20392              		.loc 1 1260 25 is_stmt 1 view .LVU6976
 20393              	# sieve_extend.c:1261:                         tuning_result[tuning_result_index].sample_max = samp
1261:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_kb = blocksize_kb;
 20394              		.loc 1 1261 71 is_stmt 0 view .LVU6977
 20395 080e 4D894F38 		mov	QWORD PTR 56[r15], r9	# MEM[base: _500, offset: 56B], sample_max
 20396              	# sieve_extend.c:1262:                         tuning_result[tuning_result_index].blocksize_kb = bl
1262:sieve_extend.c ****                         tuning_result[tuning_result_index].free_bits = free_bits;
 20397              		.loc 1 1262 73 view .LVU6978
 20398 0812 4D896710 		mov	QWORD PTR 16[r15], r12	# MEM[base: _500, offset: 16B], blocksize_kb
 20399              	# sieve_extend.c:1263:                         tuning_result[tuning_result_index].free_bits = free_
1263:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_bits = blocksize_bits;
 20400              		.loc 1 1263 70 view .LVU6979
 20401 0816 49896F18 		mov	QWORD PTR 24[r15], rbp	# MEM[base: _500, offset: 24B], free_bits
 20402              	# sieve_extend.c:1264:                         tuning_result[tuning_result_index].blocksize_bits = 
1264:sieve_extend.c ****                         tuning_result[tuning_result_index].smallstep_faster = smallstep_faster;
 20403              		.loc 1 1264 75 view .LVU6980
 20404 081a 49895F08 		mov	QWORD PTR 8[r15], rbx	# MEM[base: _500, offset: 8B], ivtmp.789
 20405              	# sieve_extend.c:1266:                         tuning_result[tuning_result_index].mediumstep_faster
1266:sieve_extend.c ****                         tuning_result[tuning_result_index].vectorstep_faster = vectorstep_faster;
 20406              		.loc 1 1266 78 view .LVU6981
 20407 081e 4D897728 		mov	QWORD PTR 40[r15], r14	# MEM[base: _500, offset: 40B], mediumstep_faster
 20408              	# sieve_extend.c:1267:                         tuning_result[tuning_result_index].vectorstep_faster
1267:sieve_extend.c ****                         tune_benchmark(tuning_result, tuning_result_index);
 20409              		.loc 1 1267 78 view .LVU6982
GAS LISTING /tmp/ccr2dACi.s 			page 544


 20410 0822 49894730 		mov	QWORD PTR 48[r15], rax	# MEM[base: _500, offset: 48B], vectorstep_faster
 20411              	# sieve_extend.c:1260:                         tuning_result[tuning_result_index].sample_duration =
1260:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_max = sample_max;
 20412              		.loc 1 1260 76 view .LVU6983
 20413 0826 C4C17B11 		vmovsd	QWORD PTR 64[r15], xmm4	# MEM[base: _500, offset: 64B], sample_duration
 20413      6740
1261:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_kb = blocksize_kb;
 20414              		.loc 1 1261 25 is_stmt 1 view .LVU6984
1262:sieve_extend.c ****                         tuning_result[tuning_result_index].free_bits = free_bits;
 20415              		.loc 1 1262 25 view .LVU6985
1263:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_bits = blocksize_bits;
 20416              		.loc 1 1263 25 view .LVU6986
1264:sieve_extend.c ****                         tuning_result[tuning_result_index].smallstep_faster = smallstep_faster;
 20417              		.loc 1 1264 25 view .LVU6987
1265:sieve_extend.c ****                         tuning_result[tuning_result_index].mediumstep_faster = mediumstep_faster;
 20418              		.loc 1 1265 25 view .LVU6988
1266:sieve_extend.c ****                         tuning_result[tuning_result_index].vectorstep_faster = vectorstep_faster;
 20419              		.loc 1 1266 25 view .LVU6989
1267:sieve_extend.c ****                         tune_benchmark(tuning_result, tuning_result_index);
 20420              		.loc 1 1267 25 view .LVU6990
1268:sieve_extend.c **** 
 20421              		.loc 1 1268 25 view .LVU6991
 20422 082c E8000000 		call	tune_benchmark	#
 20422      00
 20423              	.LVL1284:
1270:sieve_extend.c ****                             best_avg = tuning_result[tuning_result_index].avg;
 20424              		.loc 1 1270 25 view .LVU6992
 20425              	# sieve_extend.c:1270:                         if ( tuning_result[tuning_result_index].avg > best_a
1270:sieve_extend.c ****                             best_avg = tuning_result[tuning_result_index].avg;
 20426              		.loc 1 1270 64 is_stmt 0 view .LVU6993
 20427 0831 C4C17B10 		vmovsd	xmm3, QWORD PTR 88[r15]	# _253, MEM[base: _500, offset: 88B]
 20427      5F58
 20428              	# sieve_extend.c:1270:                         if ( tuning_result[tuning_result_index].avg > best_a
1270:sieve_extend.c ****                             best_avg = tuning_result[tuning_result_index].avg;
 20429              		.loc 1 1270 28 view .LVU6994
 20430 0837 C5F92F5C 		vcomisd	xmm3, QWORD PTR 40[rsp]	# _253, %sfp
 20430      2428
 20431 083d 0F875DFF 		ja	.L1728	#,
 20431      FFFF
 20432              	.L1729:
1278:sieve_extend.c ****                         tuning_result_index++;
 20433              		.loc 1 1278 25 is_stmt 1 view .LVU6995
 20434              	# sieve_extend.c:1278:                         if (option_verboselevel >= 3) { printf("...."); tuni
1278:sieve_extend.c ****                         tuning_result_index++;
 20435              		.loc 1 1278 28 is_stmt 0 view .LVU6996
 20436 0843 837C2458 		cmp	DWORD PTR 88[rsp], 2	# %sfp,
 20436      02
 20437 0848 0F8E77FF 		jle	.L1726	#,
 20437      FFFF
1278:sieve_extend.c ****                         tuning_result_index++;
 20438              		.loc 1 1278 57 is_stmt 1 view .LVU6997
 20439              	.LVL1285:
 20440              	.LBB1125:
 20441              	.LBI1125:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20442              		.loc 3 105 1 view .LVU6998
 20443              	.LBB1126:
GAS LISTING /tmp/ccr2dACi.s 			page 545


 20444              		.loc 3 107 3 view .LVU6999
 20445              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 20446              		.loc 3 107 10 is_stmt 0 view .LVU7000
 20447 084e 488D3500 		lea	rsi, .LC52[rip]	#,
 20447      000000
 20448 0855 BF010000 		mov	edi, 1	#,
 20448      00
 20449 085a 31C0     		xor	eax, eax	#
 20450 085c E8000000 		call	__printf_chk@PLT	#
 20450      00
 20451              	.LVL1286:
 20452              		.loc 3 107 10 view .LVU7001
 20453              	.LBE1126:
 20454              	.LBE1125:
1278:sieve_extend.c ****                         tuning_result_index++;
 20455              		.loc 1 1278 73 is_stmt 1 view .LVU7002
 20456              	.LBB1127:
 20457              	.LBI1127:
1193:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
 20458              		.loc 1 1193 20 view .LVU7003
 20459              	.LBB1128:
1194:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
 20460              		.loc 1 1194 5 view .LVU7004
 20461              	.LBB1129:
 20462              	.LBI1129:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20463              		.loc 3 105 1 view .LVU7005
 20464              	.LBB1130:
 20465              		.loc 3 107 3 view .LVU7006
 20466              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 20467              		.loc 3 107 10 is_stmt 0 view .LVU7007
 20468 0861 498B7F38 		mov	rdi, QWORD PTR 56[r15]	# MEM[base: _500, offset: 56B], MEM[base: _500, offset: 56B]
 20469 0865 C4C17B10 		vmovsd	xmm0, QWORD PTR 80[r15]	# MEM[base: _500, offset: 80B], MEM[base: _500, offset: 80B]
 20469      4750
 20470 086b 498B4F10 		mov	rcx, QWORD PTR 16[r15]	# MEM[base: _500, offset: 16B], MEM[base: _500, offset: 16B]
 20471 086f 498B5708 		mov	rdx, QWORD PTR 8[r15]	# MEM[base: _500, offset: 8B], MEM[base: _500, offset: 8B]
 20472 0873 48897C24 		mov	QWORD PTR 24[rsp], rdi	#, MEM[base: _500, offset: 56B]
 20472      18
 20473 0878 BF010000 		mov	edi, 1	#,
 20473      00
 20474 087d 498B4748 		mov	rax, QWORD PTR 72[r15]	# MEM[base: _500, offset: 72B], MEM[base: _500, offset: 72B]
 20475 0881 48894424 		mov	QWORD PTR 16[rsp], rax	#, MEM[base: _500, offset: 72B]
 20475      10
 20476 0886 B8030000 		mov	eax, 3	#,
 20476      00
 20477 088b 498B7730 		mov	rsi, QWORD PTR 48[r15]	# MEM[base: _500, offset: 48B], MEM[base: _500, offset: 48B]
 20478 088f 48897424 		mov	QWORD PTR 8[rsp], rsi	#, MEM[base: _500, offset: 48B]
 20478      08
 20479 0894 488D3500 		lea	rsi, .LC51[rip]	#,
 20479      000000
 20480 089b 4D8B4728 		mov	r8, QWORD PTR 40[r15]	# MEM[base: _500, offset: 40B], MEM[base: _500, offset: 40B]
 20481 089f 4C890424 		mov	QWORD PTR [rsp], r8	#, MEM[base: _500, offset: 40B]
 20482 08a3 4D8B4F20 		mov	r9, QWORD PTR 32[r15]	#, MEM[base: _500, offset: 32B]
 20483 08a7 4D8B4718 		mov	r8, QWORD PTR 24[r15]	#, MEM[base: _500, offset: 24B]
 20484 08ab C4C17B10 		vmovsd	xmm2, QWORD PTR 88[r15]	#, MEM[base: _500, offset: 88B]
 20484      5758
 20485 08b1 C4C17B10 		vmovsd	xmm1, QWORD PTR 64[r15]	#, MEM[base: _500, offset: 64B]
GAS LISTING /tmp/ccr2dACi.s 			page 546


 20485      4F40
 20486 08b7 E8000000 		call	__printf_chk@PLT	#
 20486      00
 20487              	.LVL1287:
 20488              		.loc 3 107 10 view .LVU7008
 20489              	.LBE1130:
 20490              	.LBE1129:
 20491              	# sieve_extend.c:1199: }
1199:sieve_extend.c **** 
 20492              		.loc 1 1199 1 view .LVU7009
 20493 08bc E904FFFF 		jmp	.L1726	#
 20493      FF
 20494              	.LVL1288:
 20495              		.p2align 4,,7
 20496 08c1 0F1F8000 		.p2align 3
 20496      000000
 20497              	.L1727:
1199:sieve_extend.c **** 
 20498              		.loc 1 1199 1 view .LVU7010
 20499              	.LBE1128:
 20500              	.LBE1127:
 20501              	.LBE1141:
 20502              	.LBE1143:
1253:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 20503              		.loc 1 1253 67 is_stmt 1 view .LVU7011
 20504              	# sieve_extend.c:1253:                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_
1253:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 20505              		.loc 1 1253 80 is_stmt 0 view .LVU7012
 20506 08c8 49D1EC   		shr	r12	# blocksize_kb
 20507              	.LVL1289:
1253:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 20508              		.loc 1 1253 50 is_stmt 1 view .LVU7013
 20509              	# sieve_extend.c:1253:                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_
1253:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 20510              		.loc 1 1253 17 is_stmt 0 view .LVU7014
 20511 08cb 836C245C 		sub	DWORD PTR 92[rsp], 1	# %sfp,
 20511      01
 20512 08d0 0F85AAFE 		jne	.L1733	#,
 20512      FFFF
 20513              	.LBE1145:
1252:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 20514              		.loc 1 1252 101 is_stmt 1 view .LVU7015
 20515              	# sieve_extend.c:1252:             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep
1252:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 20516              		.loc 1 1252 119 is_stmt 0 view .LVU7016
 20517 08d6 4C8BA424 		mov	r12, QWORD PTR 128[rsp]	# vectorstep_faster_steps, %sfp
 20517      80000000 
 20518              	.LVL1290:
1252:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 20519              		.loc 1 1252 119 view .LVU7017
 20520 08de 4C016424 		add	QWORD PTR 48[rsp], r12	# %sfp, vectorstep_faster_steps
 20520      30
 20521              	.LVL1291:
1252:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 20522              		.loc 1 1252 119 view .LVU7018
 20523 08e3 488B5C24 		mov	rbx, QWORD PTR 48[rsp]	# vectorstep_faster, %sfp
 20523      30
GAS LISTING /tmp/ccr2dACi.s 			page 547


 20524              	.LVL1292:
1252:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 20525              		.loc 1 1252 67 is_stmt 1 view .LVU7019
 20526              	# sieve_extend.c:1252:             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep
1252:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 20527              		.loc 1 1252 13 is_stmt 0 view .LVU7020
 20528 08e8 4881FB00 		cmp	rbx, 256	# vectorstep_faster,
 20528      010000
 20529 08ef 0F867BFE 		jbe	.L1735	#,
 20529      FFFF
 20530              	.LBE1121:
1251:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE;
 20531              		.loc 1 1251 94 is_stmt 1 view .LVU7021
 20532              	# sieve_extend.c:1251:         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_fast
1251:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE;
 20533              		.loc 1 1251 112 is_stmt 0 view .LVU7022
 20534 08f5 4C03B424 		add	r14, QWORD PTR 136[rsp]	# mediumstep_faster, %sfp
 20534      88000000 
 20535              	.LVL1293:
1251:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE;
 20536              		.loc 1 1251 62 is_stmt 1 view .LVU7023
 20537              	# sieve_extend.c:1251:         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_fast
1251:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE;
 20538              		.loc 1 1251 9 is_stmt 0 view .LVU7024
 20539 08fd 4983FE40 		cmp	r14, 64	# mediumstep_faster,
 20540 0901 0F8659FE 		jbe	.L1737	#,
 20540      FFFF
 20541              	.LBE1120:
1250:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 20542              		.loc 1 1250 75 is_stmt 1 view .LVU7025
 20543              	# sieve_extend.c:1250:     for (counter_t smallstep_faster = 0; smallstep_faster <= WORD_SIZE/2; sm
1250:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 20544              		.loc 1 1250 92 is_stmt 0 view .LVU7026
 20545 0907 4C8BB424 		mov	r14, QWORD PTR 136[rsp]	# smallstep_faster_steps, %sfp
 20545      88000000 
 20546              	.LVL1294:
1250:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 20547              		.loc 1 1250 92 view .LVU7027
 20548 090f 4C017424 		add	QWORD PTR 32[rsp], r14	# %sfp, smallstep_faster_steps
 20548      20
 20549              	.LVL1295:
1250:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 20550              		.loc 1 1250 92 view .LVU7028
 20551 0914 4C8B7C24 		mov	r15, QWORD PTR 32[rsp]	# smallstep_faster, %sfp
 20551      20
 20552              	.LVL1296:
1250:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 20553              		.loc 1 1250 42 is_stmt 1 view .LVU7029
 20554              	# sieve_extend.c:1250:     for (counter_t smallstep_faster = 0; smallstep_faster <= WORD_SIZE/2; sm
1250:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 20555              		.loc 1 1250 5 is_stmt 0 view .LVU7030
 20556 0919 4983FF20 		cmp	r15, 32	# smallstep_faster,
 20557 091d 0F8634FE 		jbe	.L1725	#,
 20557      FFFF
 20558 0923 4C8B7C24 		mov	r15, QWORD PTR 80[rsp]	# tuning_result, %sfp
 20558      50
 20559              	.LVL1297:
GAS LISTING /tmp/ccr2dACi.s 			page 548


1250:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 20560              		.loc 1 1250 5 view .LVU7031
 20561              	.LBE1150:
1285:sieve_extend.c ****         printf("%ju results. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju\n"
 20562              		.loc 1 1285 5 is_stmt 1 view .LVU7032
 20563              	# sieve_extend.c:1285:     if (option_verboselevel >= 2) {
1285:sieve_extend.c ****         printf("%ju results. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju\n"
 20564              		.loc 1 1285 8 is_stmt 0 view .LVU7033
 20565 0928 837C2458 		cmp	DWORD PTR 88[rsp], 1	# %sfp,
 20565      01
 20566 092d 7E31     		jle	.L1738	#,
1286:sieve_extend.c ****         printf("Best options\n");
 20567              		.loc 1 1286 9 is_stmt 1 view .LVU7034
 20568              	.LVL1298:
 20569              	.LBB1151:
 20570              	.LBI1151:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20571              		.loc 3 105 1 view .LVU7035
 20572              	.LBB1152:
 20573              		.loc 3 107 3 view .LVU7036
 20574              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 20575              		.loc 3 107 10 is_stmt 0 view .LVU7037
 20576 092f 4C8B4C24 		mov	r9, QWORD PTR 72[rsp]	#, %sfp
 20576      48
 20577 0934 BF010000 		mov	edi, 1	#,
 20577      00
 20578 0939 4C8B4424 		mov	r8, QWORD PTR 64[rsp]	#, %sfp
 20578      40
 20579 093e 4C89EA   		mov	rdx, r13	#, tuning_results
 20580 0941 488B4C24 		mov	rcx, QWORD PTR 56[rsp]	#, %sfp
 20580      38
 20581 0946 488D3500 		lea	rsi, .LC53[rip]	#,
 20581      000000
 20582 094d 31C0     		xor	eax, eax	#
 20583 094f E8000000 		call	__printf_chk@PLT	#
 20583      00
 20584              	.LVL1299:
 20585              		.loc 3 107 10 view .LVU7038
 20586              	.LBE1152:
 20587              	.LBE1151:
1287:sieve_extend.c ****     }
 20588              		.loc 1 1287 9 is_stmt 1 view .LVU7039
 20589              	.LBB1153:
 20590              	.LBI1153:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20591              		.loc 3 105 1 view .LVU7040
 20592              	.LBB1154:
 20593              		.loc 3 107 3 view .LVU7041
 20594              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 20595              		.loc 3 107 10 is_stmt 0 view .LVU7042
 20596 0954 488D3D00 		lea	rdi, .LC54[rip]	#,
 20596      000000
 20597 095b E8000000 		call	puts@PLT	#
 20597      00
 20598              	.LVL1300:
 20599              	.L1738:
 20600              		.loc 3 107 10 view .LVU7043
GAS LISTING /tmp/ccr2dACi.s 			page 549


 20601              	.LBE1154:
 20602              	.LBE1153:
 20603              	.LBB1155:
 20604              	# sieve_extend.c:1297:                 for (counter_t tuning_result_index=0; tuning_result_index<mi
1297:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 20605              		.loc 1 1297 75 view .LVU7044
 20606 0960 4C8B7424 		mov	r14, QWORD PTR 104[rsp]	# sample_max, %sfp
 20606      68
 20607              	.LBE1155:
 20608              	.LBB1164:
 20609              	# sieve_extend.c:1305:         for (counter_t i=0; i<tuning_results; i++) {
1305:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20610              		.loc 1 1305 24 view .LVU7045
 20611 0965 4531E4   		xor	r12d, r12d	# step
 20612              	.LVL1301:
 20613              	.L1743:
1305:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20614              		.loc 1 1305 24 view .LVU7046
 20615              	.LBE1164:
1290:sieve_extend.c ****         qsort(tuning_result, (size_t)tuning_results, sizeof(tuning_result_type), compare_tuning_res
 20616              		.loc 1 1290 11 is_stmt 1 view .LVU7047
 20617 0968 4983FD04 		cmp	r13, 4	# tuning_results,
 20618 096c 0F861404 		jbe	.L1839	#,
 20618      0000
1291:sieve_extend.c ****         step++;
 20619              		.loc 1 1291 9 view .LVU7048
 20620 0972 488D0D00 		lea	rcx, compare_tuning_result[rip]	#,
 20620      000000
 20621 0979 BA600000 		mov	edx, 96	#,
 20621      00
 20622 097e 4C89EE   		mov	rsi, r13	#, tuning_results
 20623 0981 4C89FF   		mov	rdi, r15	#, tuning_result
 20624 0984 E8000000 		call	qsort@PLT	#
 20624      00
 20625              	.LVL1302:
1292:sieve_extend.c ****         if (option_verboselevel >= 2) {
 20626              		.loc 1 1292 9 view .LVU7049
 20627              	# sieve_extend.c:1292:         step++;
1292:sieve_extend.c ****         if (option_verboselevel >= 2) {
 20628              		.loc 1 1292 13 is_stmt 0 view .LVU7050
 20629 0989 4983C401 		add	r12, 1	# step,
 20630              	.LVL1303:
1293:sieve_extend.c ****             tuning_result_index = 0;
 20631              		.loc 1 1293 9 is_stmt 1 view .LVU7051
 20632              	# sieve_extend.c:1293:         if (option_verboselevel >= 2) {
1293:sieve_extend.c ****             tuning_result_index = 0;
 20633              		.loc 1 1293 12 is_stmt 0 view .LVU7052
 20634 098d 837C2458 		cmp	DWORD PTR 88[rsp], 1	# %sfp,
 20634      01
 20635 0992 0F8F7D02 		jg	.L1739	#,
 20635      0000
 20636              	.L1741:
1303:sieve_extend.c **** 
 20637              		.loc 1 1303 9 is_stmt 1 view .LVU7053
 20638              	# sieve_extend.c:1303:         tuning_results = tuning_results / 2;
1303:sieve_extend.c **** 
 20639              		.loc 1 1303 24 is_stmt 0 view .LVU7054
GAS LISTING /tmp/ccr2dACi.s 			page 550


 20640 0998 49D1ED   		shr	r13	# tuning_results
 20641              	.LVL1304:
1305:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20642              		.loc 1 1305 9 is_stmt 1 view .LVU7055
 20643              	.LBB1165:
1305:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20644              		.loc 1 1305 14 view .LVU7056
1305:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20645              		.loc 1 1305 29 view .LVU7057
 20646              	# sieve_extend.c:1305:         for (counter_t i=0; i<tuning_results; i++) {
1305:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20647              		.loc 1 1305 24 is_stmt 0 view .LVU7058
 20648 099b 31ED     		xor	ebp, ebp	# i
 20649 099d 4D89E8   		mov	r8, r13	# tmp487, tuning_results
 20650 09a0 498D5F38 		lea	rbx, 56[r15]	# ivtmp.770,
 20651 09a4 4183E007 		and	r8d, 7	# tmp487,
 20652 09a8 0F84D200 		je	.L1740	#,
 20652      0000
 20653 09ae 4983F801 		cmp	r8, 1	# tmp487,
 20654 09b2 0F84A900 		je	.L1798	#,
 20654      0000
 20655 09b8 4983F802 		cmp	r8, 2	# tmp487,
 20656 09bc 0F848900 		je	.L1799	#,
 20656      0000
 20657 09c2 4983F803 		cmp	r8, 3	# tmp487,
 20658 09c6 746D     		je	.L1800	#,
 20659 09c8 4983F804 		cmp	r8, 4	# tmp487,
 20660 09cc 7451     		je	.L1801	#,
 20661 09ce 4983F805 		cmp	r8, 5	# tmp487,
 20662 09d2 7435     		je	.L1802	#,
 20663 09d4 4983F806 		cmp	r8, 6	# tmp487,
 20664 09d8 7419     		je	.L1803	#,
1306:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20665              		.loc 1 1306 13 is_stmt 1 view .LVU7059
 20666 09da 31F6     		xor	esi, esi	#
 20667 09dc 4C89FF   		mov	rdi, r15	#, tuning_result
 20668 09df E8000000 		call	tune_benchmark	#
 20668      00
 20669              	.LVL1305:
1307:sieve_extend.c ****         }
 20670              		.loc 1 1307 13 view .LVU7060
 20671              	# sieve_extend.c:1305:         for (counter_t i=0; i<tuning_results; i++) {
1305:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20672              		.loc 1 1305 48 is_stmt 0 view .LVU7061
 20673 09e4 BD010000 		mov	ebp, 1	# i,
 20673      00
 20674              	# sieve_extend.c:1307:             tuning_result[i].sample_max += sample_max;
1307:sieve_extend.c ****         }
 20675              		.loc 1 1307 41 view .LVU7062
 20676 09e9 4C0133   		add	QWORD PTR [rbx], r14	# MEM[base: _116, offset: 0B], sample_max
1305:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20677              		.loc 1 1305 47 is_stmt 1 view .LVU7063
 20678              	.LVL1306:
1305:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20679              		.loc 1 1305 29 view .LVU7064
 20680 09ec 498D9F98 		lea	rbx, 152[r15]	# ivtmp.770,
 20680      000000
GAS LISTING /tmp/ccr2dACi.s 			page 551


 20681              	.L1803:
1306:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20682              		.loc 1 1306 13 view .LVU7065
 20683 09f3 4889EE   		mov	rsi, rbp	#, i
 20684 09f6 4C89FF   		mov	rdi, r15	#, tuning_result
 20685 09f9 E8000000 		call	tune_benchmark	#
 20685      00
 20686              	.LVL1307:
1307:sieve_extend.c ****         }
 20687              		.loc 1 1307 13 view .LVU7066
 20688              	# sieve_extend.c:1305:         for (counter_t i=0; i<tuning_results; i++) {
1305:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20689              		.loc 1 1305 48 is_stmt 0 view .LVU7067
 20690 09fe 4883C501 		add	rbp, 1	# i,
 20691              	# sieve_extend.c:1307:             tuning_result[i].sample_max += sample_max;
1307:sieve_extend.c ****         }
 20692              		.loc 1 1307 41 view .LVU7068
 20693 0a02 4C0133   		add	QWORD PTR [rbx], r14	# MEM[base: _116, offset: 0B], sample_max
1305:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20694              		.loc 1 1305 47 is_stmt 1 view .LVU7069
1305:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20695              		.loc 1 1305 29 view .LVU7070
 20696 0a05 4883C360 		add	rbx, 96	# ivtmp.770,
 20697              	.L1802:
1306:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20698              		.loc 1 1306 13 view .LVU7071
 20699 0a09 4889EE   		mov	rsi, rbp	#, i
 20700 0a0c 4C89FF   		mov	rdi, r15	#, tuning_result
 20701 0a0f E8000000 		call	tune_benchmark	#
 20701      00
 20702              	.LVL1308:
1307:sieve_extend.c ****         }
 20703              		.loc 1 1307 13 view .LVU7072
 20704              	# sieve_extend.c:1305:         for (counter_t i=0; i<tuning_results; i++) {
1305:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20705              		.loc 1 1305 48 is_stmt 0 view .LVU7073
 20706 0a14 4883C501 		add	rbp, 1	# i,
 20707              	# sieve_extend.c:1307:             tuning_result[i].sample_max += sample_max;
1307:sieve_extend.c ****         }
 20708              		.loc 1 1307 41 view .LVU7074
 20709 0a18 4C0133   		add	QWORD PTR [rbx], r14	# MEM[base: _116, offset: 0B], sample_max
1305:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20710              		.loc 1 1305 47 is_stmt 1 view .LVU7075
1305:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20711              		.loc 1 1305 29 view .LVU7076
 20712 0a1b 4883C360 		add	rbx, 96	# ivtmp.770,
 20713              	.L1801:
1306:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20714              		.loc 1 1306 13 view .LVU7077
 20715 0a1f 4889EE   		mov	rsi, rbp	#, i
 20716 0a22 4C89FF   		mov	rdi, r15	#, tuning_result
 20717 0a25 E8000000 		call	tune_benchmark	#
 20717      00
 20718              	.LVL1309:
1307:sieve_extend.c ****         }
 20719              		.loc 1 1307 13 view .LVU7078
 20720              	# sieve_extend.c:1305:         for (counter_t i=0; i<tuning_results; i++) {
GAS LISTING /tmp/ccr2dACi.s 			page 552


1305:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20721              		.loc 1 1305 48 is_stmt 0 view .LVU7079
 20722 0a2a 4883C501 		add	rbp, 1	# i,
 20723              	# sieve_extend.c:1307:             tuning_result[i].sample_max += sample_max;
1307:sieve_extend.c ****         }
 20724              		.loc 1 1307 41 view .LVU7080
 20725 0a2e 4C0133   		add	QWORD PTR [rbx], r14	# MEM[base: _116, offset: 0B], sample_max
1305:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20726              		.loc 1 1305 47 is_stmt 1 view .LVU7081
1305:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20727              		.loc 1 1305 29 view .LVU7082
 20728 0a31 4883C360 		add	rbx, 96	# ivtmp.770,
 20729              	.L1800:
1306:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20730              		.loc 1 1306 13 view .LVU7083
 20731 0a35 4889EE   		mov	rsi, rbp	#, i
 20732 0a38 4C89FF   		mov	rdi, r15	#, tuning_result
 20733 0a3b E8000000 		call	tune_benchmark	#
 20733      00
 20734              	.LVL1310:
1307:sieve_extend.c ****         }
 20735              		.loc 1 1307 13 view .LVU7084
 20736              	# sieve_extend.c:1305:         for (counter_t i=0; i<tuning_results; i++) {
1305:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20737              		.loc 1 1305 48 is_stmt 0 view .LVU7085
 20738 0a40 4883C501 		add	rbp, 1	# i,
 20739              	# sieve_extend.c:1307:             tuning_result[i].sample_max += sample_max;
1307:sieve_extend.c ****         }
 20740              		.loc 1 1307 41 view .LVU7086
 20741 0a44 4C0133   		add	QWORD PTR [rbx], r14	# MEM[base: _116, offset: 0B], sample_max
1305:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20742              		.loc 1 1305 47 is_stmt 1 view .LVU7087
1305:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20743              		.loc 1 1305 29 view .LVU7088
 20744 0a47 4883C360 		add	rbx, 96	# ivtmp.770,
 20745              	.L1799:
1306:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20746              		.loc 1 1306 13 view .LVU7089
 20747 0a4b 4889EE   		mov	rsi, rbp	#, i
 20748 0a4e 4C89FF   		mov	rdi, r15	#, tuning_result
 20749 0a51 E8000000 		call	tune_benchmark	#
 20749      00
 20750              	.LVL1311:
1307:sieve_extend.c ****         }
 20751              		.loc 1 1307 13 view .LVU7090
 20752              	# sieve_extend.c:1305:         for (counter_t i=0; i<tuning_results; i++) {
1305:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20753              		.loc 1 1305 48 is_stmt 0 view .LVU7091
 20754 0a56 4883C501 		add	rbp, 1	# i,
 20755              	# sieve_extend.c:1307:             tuning_result[i].sample_max += sample_max;
1307:sieve_extend.c ****         }
 20756              		.loc 1 1307 41 view .LVU7092
 20757 0a5a 4C0133   		add	QWORD PTR [rbx], r14	# MEM[base: _116, offset: 0B], sample_max
1305:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20758              		.loc 1 1305 47 is_stmt 1 view .LVU7093
1305:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20759              		.loc 1 1305 29 view .LVU7094
GAS LISTING /tmp/ccr2dACi.s 			page 553


 20760 0a5d 4883C360 		add	rbx, 96	# ivtmp.770,
 20761              	.L1798:
1306:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20762              		.loc 1 1306 13 view .LVU7095
 20763 0a61 4889EE   		mov	rsi, rbp	#, i
 20764 0a64 4C89FF   		mov	rdi, r15	#, tuning_result
 20765              	# sieve_extend.c:1305:         for (counter_t i=0; i<tuning_results; i++) {
1305:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20766              		.loc 1 1305 48 is_stmt 0 view .LVU7096
 20767 0a67 4883C501 		add	rbp, 1	# i,
 20768              	# sieve_extend.c:1306:             tune_benchmark(tuning_result, i);
1306:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20769              		.loc 1 1306 13 view .LVU7097
 20770 0a6b E8000000 		call	tune_benchmark	#
 20770      00
 20771              	.LVL1312:
1307:sieve_extend.c ****         }
 20772              		.loc 1 1307 13 is_stmt 1 view .LVU7098
 20773              	# sieve_extend.c:1307:             tuning_result[i].sample_max += sample_max;
1307:sieve_extend.c ****         }
 20774              		.loc 1 1307 41 is_stmt 0 view .LVU7099
 20775 0a70 4C0133   		add	QWORD PTR [rbx], r14	# MEM[base: _116, offset: 0B], sample_max
1305:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20776              		.loc 1 1305 47 is_stmt 1 view .LVU7100
1305:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20777              		.loc 1 1305 29 view .LVU7101
 20778 0a73 4883C360 		add	rbx, 96	# ivtmp.770,
 20779              	# sieve_extend.c:1305:         for (counter_t i=0; i<tuning_results; i++) {
1305:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20780              		.loc 1 1305 9 is_stmt 0 view .LVU7102
 20781 0a77 4939ED   		cmp	r13, rbp	# tuning_results, i
 20782 0a7a 0F84E8FE 		je	.L1743	#,
 20782      FFFF
 20783              	.L1740:
1306:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20784              		.loc 1 1306 13 is_stmt 1 view .LVU7103
 20785 0a80 4889EE   		mov	rsi, rbp	#, i
 20786 0a83 4C89FF   		mov	rdi, r15	#, tuning_result
 20787 0a86 E8000000 		call	tune_benchmark	#
 20787      00
 20788              	.LVL1313:
1307:sieve_extend.c ****         }
 20789              		.loc 1 1307 13 view .LVU7104
 20790 0a8b 4C8D5360 		lea	r10, 96[rbx]	# tmp489,
 20791              	# sieve_extend.c:1307:             tuning_result[i].sample_max += sample_max;
1307:sieve_extend.c ****         }
 20792              		.loc 1 1307 41 is_stmt 0 view .LVU7105
 20793 0a8f 4C0133   		add	QWORD PTR [rbx], r14	# MEM[base: _116, offset: 0B], sample_max
1305:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20794              		.loc 1 1305 47 is_stmt 1 view .LVU7106
 20795              	# sieve_extend.c:1305:         for (counter_t i=0; i<tuning_results; i++) {
1305:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20796              		.loc 1 1305 48 is_stmt 0 view .LVU7107
 20797 0a92 488D7501 		lea	rsi, 1[rbp]	# tmp488,
1305:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20798              		.loc 1 1305 29 is_stmt 1 view .LVU7108
 20799              	# sieve_extend.c:1306:             tune_benchmark(tuning_result, i);
GAS LISTING /tmp/ccr2dACi.s 			page 554


1306:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20800              		.loc 1 1306 13 is_stmt 0 view .LVU7109
 20801 0a96 4C89FF   		mov	rdi, r15	#, tuning_result
 20802 0a99 4C895424 		mov	QWORD PTR 32[rsp], r10	# %sfp, tmp489
 20802      20
1306:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20803              		.loc 1 1306 13 is_stmt 1 view .LVU7110
 20804 0a9e E8000000 		call	tune_benchmark	#
 20804      00
 20805              	.LVL1314:
1307:sieve_extend.c ****         }
 20806              		.loc 1 1307 13 view .LVU7111
 20807              	# sieve_extend.c:1307:             tuning_result[i].sample_max += sample_max;
1307:sieve_extend.c ****         }
 20808              		.loc 1 1307 41 is_stmt 0 view .LVU7112
 20809 0aa3 4C8B5C24 		mov	r11, QWORD PTR 32[rsp]	# tmp489, %sfp
 20809      20
 20810 0aa8 4C8D8BC0 		lea	r9, 192[rbx]	# ivtmp.770,
 20810      000000
 20811              	# sieve_extend.c:1305:         for (counter_t i=0; i<tuning_results; i++) {
1305:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20812              		.loc 1 1305 48 view .LVU7113
 20813 0aaf 488D7502 		lea	rsi, 2[rbp]	# i,
 20814              	# sieve_extend.c:1306:             tune_benchmark(tuning_result, i);
1306:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20815              		.loc 1 1306 13 view .LVU7114
 20816 0ab3 4C89FF   		mov	rdi, r15	#, tuning_result
 20817 0ab6 4C894C24 		mov	QWORD PTR 32[rsp], r9	# %sfp, ivtmp.770
 20817      20
 20818              	# sieve_extend.c:1307:             tuning_result[i].sample_max += sample_max;
1307:sieve_extend.c ****         }
 20819              		.loc 1 1307 41 view .LVU7115
 20820 0abb 4D0133   		add	QWORD PTR [r11], r14	# MEM[base: _116, offset: 0B], sample_max
1305:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20821              		.loc 1 1305 47 is_stmt 1 view .LVU7116
1305:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20822              		.loc 1 1305 29 view .LVU7117
1306:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20823              		.loc 1 1306 13 view .LVU7118
 20824 0abe E8000000 		call	tune_benchmark	#
 20824      00
 20825              	.LVL1315:
1307:sieve_extend.c ****         }
 20826              		.loc 1 1307 13 view .LVU7119
 20827              	# sieve_extend.c:1307:             tuning_result[i].sample_max += sample_max;
1307:sieve_extend.c ****         }
 20828              		.loc 1 1307 41 is_stmt 0 view .LVU7120
 20829 0ac3 488B7C24 		mov	rdi, QWORD PTR 32[rsp]	# ivtmp.770, %sfp
 20829      20
 20830 0ac8 488D8320 		lea	rax, 288[rbx]	# ivtmp.770,
 20830      010000
 20831 0acf 48894424 		mov	QWORD PTR 32[rsp], rax	# %sfp, ivtmp.770
 20831      20
 20832              	# sieve_extend.c:1305:         for (counter_t i=0; i<tuning_results; i++) {
1305:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20833              		.loc 1 1305 48 view .LVU7121
 20834 0ad4 488D7503 		lea	rsi, 3[rbp]	# i,
GAS LISTING /tmp/ccr2dACi.s 			page 555


 20835              	# sieve_extend.c:1307:             tuning_result[i].sample_max += sample_max;
1307:sieve_extend.c ****         }
 20836              		.loc 1 1307 41 view .LVU7122
 20837 0ad8 4C0137   		add	QWORD PTR [rdi], r14	# MEM[base: _116, offset: 0B], sample_max
1305:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20838              		.loc 1 1305 47 is_stmt 1 view .LVU7123
1305:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20839              		.loc 1 1305 29 view .LVU7124
1306:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20840              		.loc 1 1306 13 view .LVU7125
 20841 0adb 4C89FF   		mov	rdi, r15	#, tuning_result
 20842 0ade E8000000 		call	tune_benchmark	#
 20842      00
 20843              	.LVL1316:
1307:sieve_extend.c ****         }
 20844              		.loc 1 1307 13 view .LVU7126
 20845              	# sieve_extend.c:1307:             tuning_result[i].sample_max += sample_max;
1307:sieve_extend.c ****         }
 20846              		.loc 1 1307 41 is_stmt 0 view .LVU7127
 20847 0ae3 488B5424 		mov	rdx, QWORD PTR 32[rsp]	# ivtmp.770, %sfp
 20847      20
 20848 0ae8 488D8B80 		lea	rcx, 384[rbx]	# ivtmp.770,
 20848      010000
 20849              	# sieve_extend.c:1305:         for (counter_t i=0; i<tuning_results; i++) {
1305:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20850              		.loc 1 1305 48 view .LVU7128
 20851 0aef 488D7504 		lea	rsi, 4[rbp]	# i,
 20852              	# sieve_extend.c:1306:             tune_benchmark(tuning_result, i);
1306:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20853              		.loc 1 1306 13 view .LVU7129
 20854 0af3 4C89FF   		mov	rdi, r15	#, tuning_result
 20855 0af6 48894C24 		mov	QWORD PTR 32[rsp], rcx	# %sfp, ivtmp.770
 20855      20
 20856              	# sieve_extend.c:1307:             tuning_result[i].sample_max += sample_max;
1307:sieve_extend.c ****         }
 20857              		.loc 1 1307 41 view .LVU7130
 20858 0afb 4C0132   		add	QWORD PTR [rdx], r14	# MEM[base: _116, offset: 0B], sample_max
1305:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20859              		.loc 1 1305 47 is_stmt 1 view .LVU7131
1305:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20860              		.loc 1 1305 29 view .LVU7132
1306:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20861              		.loc 1 1306 13 view .LVU7133
 20862 0afe E8000000 		call	tune_benchmark	#
 20862      00
 20863              	.LVL1317:
1307:sieve_extend.c ****         }
 20864              		.loc 1 1307 13 view .LVU7134
 20865              	# sieve_extend.c:1307:             tuning_result[i].sample_max += sample_max;
1307:sieve_extend.c ****         }
 20866              		.loc 1 1307 41 is_stmt 0 view .LVU7135
 20867 0b03 488B7424 		mov	rsi, QWORD PTR 32[rsp]	# ivtmp.770, %sfp
 20867      20
 20868 0b08 4C8D83E0 		lea	r8, 480[rbx]	# ivtmp.770,
 20868      010000
 20869 0b0f 4C894424 		mov	QWORD PTR 32[rsp], r8	# %sfp, ivtmp.770
 20869      20
GAS LISTING /tmp/ccr2dACi.s 			page 556


 20870              	# sieve_extend.c:1306:             tune_benchmark(tuning_result, i);
1306:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20871              		.loc 1 1306 13 view .LVU7136
 20872 0b14 4C89FF   		mov	rdi, r15	#, tuning_result
 20873              	# sieve_extend.c:1307:             tuning_result[i].sample_max += sample_max;
1307:sieve_extend.c ****         }
 20874              		.loc 1 1307 41 view .LVU7137
 20875 0b17 4C0136   		add	QWORD PTR [rsi], r14	# MEM[base: _116, offset: 0B], sample_max
1305:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20876              		.loc 1 1305 47 is_stmt 1 view .LVU7138
 20877              	# sieve_extend.c:1305:         for (counter_t i=0; i<tuning_results; i++) {
1305:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20878              		.loc 1 1305 48 is_stmt 0 view .LVU7139
 20879 0b1a 488D7505 		lea	rsi, 5[rbp]	# i,
1305:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20880              		.loc 1 1305 29 is_stmt 1 view .LVU7140
1306:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20881              		.loc 1 1306 13 view .LVU7141
 20882 0b1e E8000000 		call	tune_benchmark	#
 20882      00
 20883              	.LVL1318:
1307:sieve_extend.c ****         }
 20884              		.loc 1 1307 13 view .LVU7142
 20885              	# sieve_extend.c:1307:             tuning_result[i].sample_max += sample_max;
1307:sieve_extend.c ****         }
 20886              		.loc 1 1307 41 is_stmt 0 view .LVU7143
 20887 0b23 4C8B5424 		mov	r10, QWORD PTR 32[rsp]	# ivtmp.770, %sfp
 20887      20
 20888 0b28 4C8D9B40 		lea	r11, 576[rbx]	# ivtmp.770,
 20888      020000
 20889              	# sieve_extend.c:1305:         for (counter_t i=0; i<tuning_results; i++) {
1305:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20890              		.loc 1 1305 48 view .LVU7144
 20891 0b2f 488D7506 		lea	rsi, 6[rbp]	# i,
 20892              	# sieve_extend.c:1306:             tune_benchmark(tuning_result, i);
1306:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20893              		.loc 1 1306 13 view .LVU7145
 20894 0b33 4C89FF   		mov	rdi, r15	#, tuning_result
 20895 0b36 4C895C24 		mov	QWORD PTR 32[rsp], r11	# %sfp, ivtmp.770
 20895      20
 20896              	# sieve_extend.c:1307:             tuning_result[i].sample_max += sample_max;
1307:sieve_extend.c ****         }
 20897              		.loc 1 1307 41 view .LVU7146
 20898 0b3b 4D0132   		add	QWORD PTR [r10], r14	# MEM[base: _116, offset: 0B], sample_max
1305:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20899              		.loc 1 1305 47 is_stmt 1 view .LVU7147
1305:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20900              		.loc 1 1305 29 view .LVU7148
1306:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20901              		.loc 1 1306 13 view .LVU7149
 20902 0b3e E8000000 		call	tune_benchmark	#
 20902      00
 20903              	.LVL1319:
1307:sieve_extend.c ****         }
 20904              		.loc 1 1307 13 view .LVU7150
 20905              	# sieve_extend.c:1307:             tuning_result[i].sample_max += sample_max;
1307:sieve_extend.c ****         }
GAS LISTING /tmp/ccr2dACi.s 			page 557


 20906              		.loc 1 1307 41 is_stmt 0 view .LVU7151
 20907 0b43 4C8B4C24 		mov	r9, QWORD PTR 32[rsp]	# ivtmp.770, %sfp
 20907      20
 20908 0b48 488DBBA0 		lea	rdi, 672[rbx]	# ivtmp.770,
 20908      020000
 20909              	# sieve_extend.c:1305:         for (counter_t i=0; i<tuning_results; i++) {
1305:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20910              		.loc 1 1305 48 view .LVU7152
 20911 0b4f 488D7507 		lea	rsi, 7[rbp]	# i,
 20912 0b53 4883C508 		add	rbp, 8	# i,
 20913 0b57 48897C24 		mov	QWORD PTR 32[rsp], rdi	# %sfp, ivtmp.770
 20913      20
 20914              	# sieve_extend.c:1306:             tune_benchmark(tuning_result, i);
1306:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20915              		.loc 1 1306 13 view .LVU7153
 20916 0b5c 4C89FF   		mov	rdi, r15	#, tuning_result
 20917              	# sieve_extend.c:1307:             tuning_result[i].sample_max += sample_max;
1307:sieve_extend.c ****         }
 20918              		.loc 1 1307 41 view .LVU7154
 20919 0b5f 4D0131   		add	QWORD PTR [r9], r14	# MEM[base: _116, offset: 0B], sample_max
1305:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20920              		.loc 1 1305 47 is_stmt 1 view .LVU7155
1305:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20921              		.loc 1 1305 29 view .LVU7156
1306:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20922              		.loc 1 1306 13 view .LVU7157
 20923 0b62 4881C300 		add	rbx, 768	# ivtmp.770,
 20923      030000
 20924 0b69 E8000000 		call	tune_benchmark	#
 20924      00
 20925              	.LVL1320:
1307:sieve_extend.c ****         }
 20926              		.loc 1 1307 13 view .LVU7158
 20927              	# sieve_extend.c:1307:             tuning_result[i].sample_max += sample_max;
1307:sieve_extend.c ****         }
 20928              		.loc 1 1307 41 is_stmt 0 view .LVU7159
 20929 0b6e 488B4424 		mov	rax, QWORD PTR 32[rsp]	# ivtmp.770, %sfp
 20929      20
 20930 0b73 4C0130   		add	QWORD PTR [rax], r14	# MEM[base: _116, offset: 0B], sample_max
1305:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20931              		.loc 1 1305 47 is_stmt 1 view .LVU7160
 20932              	.LVL1321:
1305:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20933              		.loc 1 1305 29 view .LVU7161
 20934              	# sieve_extend.c:1305:         for (counter_t i=0; i<tuning_results; i++) {
1305:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20935              		.loc 1 1305 9 is_stmt 0 view .LVU7162
 20936 0b76 4939ED   		cmp	r13, rbp	# tuning_results, i
 20937 0b79 0F8501FF 		jne	.L1740	#,
 20937      FFFF
 20938 0b7f E9E4FDFF 		jmp	.L1743	#
 20938      FF
 20939              	.LVL1322:
 20940              		.p2align 4,,7
 20941 0b84 0F1F4000 		.p2align 3
 20942              	.L1838:
1305:sieve_extend.c ****             tune_benchmark(tuning_result, i);
GAS LISTING /tmp/ccr2dACi.s 			page 558


 20943              		.loc 1 1305 9 view .LVU7163
 20944              	.LBE1165:
 20945              	.LBB1166:
 20946              	.LBB1148:
 20947              	.LBB1147:
 20948              	.LBB1146:
 20949              	.LBB1144:
 20950              	.LBB1142:
 20951              	.LBB1131:
 20952              	.LBB1132:
 20953              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 20954              		.loc 3 107 10 view .LVU7164
 20955 0b88 488D3500 		lea	rsi, .LC50[rip]	#,
 20955      000000
 20956 0b8f BF010000 		mov	edi, 1	#,
 20956      00
 20957 0b94 C5FB115C 		vmovsd	QWORD PTR 40[rsp], xmm3	# %sfp, _253
 20957      2428
 20958              	.LBE1132:
 20959              	.LBE1131:
1276:sieve_extend.c ****                         }
 20960              		.loc 1 1276 60 is_stmt 1 view .LVU7165
 20961              	.LVL1323:
 20962              	.LBB1134:
 20963              	.LBI1131:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20964              		.loc 3 105 1 view .LVU7166
 20965              	.LBB1133:
 20966              		.loc 3 107 3 view .LVU7167
 20967              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 20968              		.loc 3 107 10 is_stmt 0 view .LVU7168
 20969 0b9a 31C0     		xor	eax, eax	#
 20970 0b9c E8000000 		call	__printf_chk@PLT	#
 20970      00
 20971              	.LVL1324:
 20972              		.loc 3 107 10 view .LVU7169
 20973              	.LBE1133:
 20974              	.LBE1134:
1276:sieve_extend.c ****                         }
 20975              		.loc 1 1276 76 is_stmt 1 view .LVU7170
 20976              	.LBB1135:
 20977              	.LBI1135:
1193:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
 20978              		.loc 1 1193 20 view .LVU7171
 20979              	.LBB1136:
1194:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
 20980              		.loc 1 1194 5 view .LVU7172
 20981              	.LBB1137:
 20982              	.LBI1137:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20983              		.loc 3 105 1 view .LVU7173
 20984              	.LBB1138:
 20985              		.loc 3 107 3 view .LVU7174
 20986              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 20987              		.loc 3 107 10 is_stmt 0 view .LVU7175
 20988 0ba1 4D8B4738 		mov	r8, QWORD PTR 56[r15]	# MEM[base: _500, offset: 56B], MEM[base: _500, offset: 56B]
 20989 0ba5 488D3500 		lea	rsi, .LC51[rip]	#,
GAS LISTING /tmp/ccr2dACi.s 			page 559


 20989      000000
 20990 0bac 498B5708 		mov	rdx, QWORD PTR 8[r15]	# MEM[base: _500, offset: 8B], MEM[base: _500, offset: 8B]
 20991 0bb0 BF010000 		mov	edi, 1	#,
 20991      00
 20992 0bb5 C4C17B10 		vmovsd	xmm0, QWORD PTR 80[r15]	# MEM[base: _500, offset: 80B], MEM[base: _500, offset: 80B]
 20992      4750
 20993 0bbb B8030000 		mov	eax, 3	#,
 20993      00
 20994 0bc0 498B4F10 		mov	rcx, QWORD PTR 16[r15]	# MEM[base: _500, offset: 16B], MEM[base: _500, offset: 16B]
 20995 0bc4 4C894424 		mov	QWORD PTR 24[rsp], r8	#, MEM[base: _500, offset: 56B]
 20995      18
 20996 0bc9 4D8B5748 		mov	r10, QWORD PTR 72[r15]	# MEM[base: _500, offset: 72B], MEM[base: _500, offset: 72B]
 20997 0bcd 4C895424 		mov	QWORD PTR 16[rsp], r10	#, MEM[base: _500, offset: 72B]
 20997      10
 20998 0bd2 4D8B5F30 		mov	r11, QWORD PTR 48[r15]	# MEM[base: _500, offset: 48B], MEM[base: _500, offset: 48B]
 20999 0bd6 4C895C24 		mov	QWORD PTR 8[rsp], r11	#, MEM[base: _500, offset: 48B]
 20999      08
 21000 0bdb 4D8B4F28 		mov	r9, QWORD PTR 40[r15]	# MEM[base: _500, offset: 40B], MEM[base: _500, offset: 40B]
 21001 0bdf 4C890C24 		mov	QWORD PTR [rsp], r9	#, MEM[base: _500, offset: 40B]
 21002 0be3 4D8B4F20 		mov	r9, QWORD PTR 32[r15]	#, MEM[base: _500, offset: 32B]
 21003 0be7 4D8B4718 		mov	r8, QWORD PTR 24[r15]	#, MEM[base: _500, offset: 24B]
 21004 0beb C4C17B10 		vmovsd	xmm2, QWORD PTR 88[r15]	#, MEM[base: _500, offset: 88B]
 21004      5758
 21005 0bf1 C4C17B10 		vmovsd	xmm1, QWORD PTR 64[r15]	#, MEM[base: _500, offset: 64B]
 21005      4F40
 21006 0bf7 E8000000 		call	__printf_chk@PLT	#
 21006      00
 21007              	.LVL1325:
 21008              		.loc 3 107 10 view .LVU7176
 21009              	.LBE1138:
 21010              	.LBE1137:
 21011              	# sieve_extend.c:1199: }
1199:sieve_extend.c **** 
 21012              		.loc 1 1199 1 view .LVU7177
 21013 0bfc 488B5424 		mov	rdx, QWORD PTR 32[rsp]	# smallstep_faster, %sfp
 21013      20
 21014 0c01 4C897424 		mov	QWORD PTR 72[rsp], r14	# %sfp, mediumstep_faster
 21014      48
 21015              	.LBE1136:
 21016              	.LBE1135:
 21017              	# sieve_extend.c:1272:                             best_blocksize_bits = blocksize_bits;
1272:sieve_extend.c ****                             best_smallstep_faster = smallstep_faster;
 21018              		.loc 1 1272 49 view .LVU7178
 21019 0c06 48895C24 		mov	QWORD PTR 56[rsp], rbx	# %sfp, ivtmp.789
 21019      38
 21020              	.LBB1140:
 21021              	.LBB1139:
 21022              	# sieve_extend.c:1199: }
1199:sieve_extend.c **** 
 21023              		.loc 1 1199 1 view .LVU7179
 21024 0c0b 48895424 		mov	QWORD PTR 64[rsp], rdx	# %sfp, smallstep_faster
 21024      40
 21025 0c10 E92EFCFF 		jmp	.L1729	#
 21025      FF
 21026              	.LVL1326:
 21027              	.L1739:
1199:sieve_extend.c **** 
GAS LISTING /tmp/ccr2dACi.s 			page 560


 21028              		.loc 1 1199 1 view .LVU7180
 21029              	.LBE1139:
 21030              	.LBE1140:
 21031              	.LBE1142:
 21032              	.LBE1144:
 21033              	.LBE1146:
 21034              	.LBE1147:
 21035              	.LBE1148:
 21036              	.LBE1166:
1294:sieve_extend.c ****             printf("(%ju) ",(uintmax_t)step); tuning_result_print(tuning_result[tuning_result_index
 21037              		.loc 1 1294 13 is_stmt 1 view .LVU7181
1295:sieve_extend.c ****             if (option_verboselevel >= 3) {
 21038              		.loc 1 1295 13 view .LVU7182
 21039              	.LBB1167:
 21040              	.LBI1167:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 21041              		.loc 3 105 1 view .LVU7183
 21042              	.LBB1168:
 21043              		.loc 3 107 3 view .LVU7184
 21044              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 21045              		.loc 3 107 10 is_stmt 0 view .LVU7185
 21046 0c15 4C89E2   		mov	rdx, r12	#, step
 21047 0c18 488D3500 		lea	rsi, .LC55[rip]	#,
 21047      000000
 21048 0c1f BF010000 		mov	edi, 1	#,
 21048      00
 21049 0c24 31C0     		xor	eax, eax	#
 21050 0c26 E8000000 		call	__printf_chk@PLT	#
 21050      00
 21051              	.LVL1327:
 21052              		.loc 3 107 10 view .LVU7186
 21053              	.LBE1168:
 21054              	.LBE1167:
1295:sieve_extend.c ****             if (option_verboselevel >= 3) {
 21055              		.loc 1 1295 47 is_stmt 1 view .LVU7187
 21056              	.LBB1169:
 21057              	.LBI1169:
1193:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
 21058              		.loc 1 1193 20 view .LVU7188
 21059              	.LBB1170:
1194:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
 21060              		.loc 1 1194 5 view .LVU7189
 21061              	.LBB1171:
 21062              	.LBI1171:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 21063              		.loc 3 105 1 view .LVU7190
 21064              	.LBB1172:
 21065              		.loc 3 107 3 view .LVU7191
 21066              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 21067              		.loc 3 107 10 is_stmt 0 view .LVU7192
 21068 0c2b 498B5F38 		mov	rbx, QWORD PTR 56[r15]	# MEM[(struct tuning_result_type *)tuning_result_239 + 56B], MEM[(struc
 21069 0c2f 488D3500 		lea	rsi, .LC51[rip]	#,
 21069      000000
 21070 0c36 C4C17B10 		vmovsd	xmm0, QWORD PTR 80[r15]	# MEM[(struct tuning_result_type *)tuning_result_239 + 80B], MEM[(s
 21070      4750
 21071 0c3c BF010000 		mov	edi, 1	#,
 21071      00
GAS LISTING /tmp/ccr2dACi.s 			page 561


 21072 0c41 498B4F10 		mov	rcx, QWORD PTR 16[r15]	# MEM[(struct tuning_result_type *)tuning_result_239 + 16B], MEM[(struc
 21073 0c45 B8030000 		mov	eax, 3	#,
 21073      00
 21074 0c4a 498B5708 		mov	rdx, QWORD PTR 8[r15]	# MEM[(struct tuning_result_type *)tuning_result_239 + 8B], MEM[(struct 
 21075 0c4e 48895C24 		mov	QWORD PTR 24[rsp], rbx	#, MEM[(struct tuning_result_type *)tuning_result_239 + 56B]
 21075      18
 21076 0c53 4D8B5748 		mov	r10, QWORD PTR 72[r15]	# MEM[(struct tuning_result_type *)tuning_result_239 + 72B], MEM[(struc
 21077 0c57 4C895424 		mov	QWORD PTR 16[rsp], r10	#, MEM[(struct tuning_result_type *)tuning_result_239 + 72B]
 21077      10
 21078 0c5c 4D8B5F30 		mov	r11, QWORD PTR 48[r15]	# MEM[(struct tuning_result_type *)tuning_result_239 + 48B], MEM[(struc
 21079 0c60 4C895C24 		mov	QWORD PTR 8[rsp], r11	#, MEM[(struct tuning_result_type *)tuning_result_239 + 48B]
 21079      08
 21080 0c65 4D8B4F28 		mov	r9, QWORD PTR 40[r15]	# MEM[(struct tuning_result_type *)tuning_result_239 + 40B], MEM[(struct
 21081 0c69 4C890C24 		mov	QWORD PTR [rsp], r9	#, MEM[(struct tuning_result_type *)tuning_result_239 + 40B]
 21082 0c6d 4D8B4F20 		mov	r9, QWORD PTR 32[r15]	#, MEM[(struct tuning_result_type *)tuning_result_239 + 32B]
 21083 0c71 4D8B4718 		mov	r8, QWORD PTR 24[r15]	#, MEM[(struct tuning_result_type *)tuning_result_239 + 24B]
 21084 0c75 C4C17B10 		vmovsd	xmm2, QWORD PTR 88[r15]	#, MEM[(struct tuning_result_type *)tuning_result_239 + 88B]
 21084      5758
 21085 0c7b C4C17B10 		vmovsd	xmm1, QWORD PTR 64[r15]	#, MEM[(struct tuning_result_type *)tuning_result_239 + 64B]
 21085      4F40
 21086 0c81 E8000000 		call	__printf_chk@PLT	#
 21086      00
 21087              	.LVL1328:
 21088              		.loc 3 107 10 view .LVU7193
 21089              	.LBE1172:
 21090              	.LBE1171:
 21091              	.LBE1170:
 21092              	.LBE1169:
1296:sieve_extend.c ****                 for (counter_t tuning_result_index=0; tuning_result_index<min(10,tuning_results); t
 21093              		.loc 1 1296 13 is_stmt 1 view .LVU7194
 21094              	# sieve_extend.c:1296:             if (option_verboselevel >= 3) {
1296:sieve_extend.c ****                 for (counter_t tuning_result_index=0; tuning_result_index<min(10,tuning_results); t
 21095              		.loc 1 1296 16 is_stmt 0 view .LVU7195
 21096 0c86 837C2458 		cmp	DWORD PTR 88[rsp], 2	# %sfp,
 21096      02
 21097 0c8b 0F8407FD 		je	.L1741	#,
 21097      FFFF
 21098 0c91 498D5F08 		lea	rbx, 8[r15]	# ivtmp.776,
 21099              	.LBB1173:
 21100              	# sieve_extend.c:1297:                 for (counter_t tuning_result_index=0; tuning_result_index<mi
1297:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 21101              		.loc 1 1297 32 view .LVU7196
 21102 0c95 31ED     		xor	ebp, ebp	# tuning_result_index
 21103              	.L1742:
 21104              	.LVL1329:
1298:sieve_extend.c ****                 }
 21105              		.loc 1 1298 21 is_stmt 1 view .LVU7197
 21106              	.LBB1156:
 21107              	.LBI1156:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 21108              		.loc 3 105 1 view .LVU7198
 21109              	.LBB1157:
 21110              		.loc 3 107 3 view .LVU7199
 21111              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 21112              		.loc 3 107 10 is_stmt 0 view .LVU7200
 21113 0c97 488D3500 		lea	rsi, .LC56[rip]	#,
 21113      000000
GAS LISTING /tmp/ccr2dACi.s 			page 562


 21114 0c9e BF010000 		mov	edi, 1	#,
 21114      00
 21115 0ca3 31C0     		xor	eax, eax	#
 21116              	.LBE1157:
 21117              	.LBE1156:
 21118              	# sieve_extend.c:1297:                 for (counter_t tuning_result_index=0; tuning_result_index<mi
1297:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 21119              		.loc 1 1297 118 view .LVU7201
 21120 0ca5 4883C501 		add	rbp, 1	# tuning_result_index,
 21121              	.LVL1330:
 21122              	.LBB1159:
 21123              	.LBB1158:
 21124              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 21125              		.loc 3 107 10 view .LVU7202
 21126 0ca9 E8000000 		call	__printf_chk@PLT	#
 21126      00
 21127              	.LVL1331:
 21128              		.loc 3 107 10 view .LVU7203
 21129              	.LBE1158:
 21130              	.LBE1159:
1298:sieve_extend.c ****                 }
 21131              		.loc 1 1298 36 is_stmt 1 view .LVU7204
 21132              	.LBB1160:
 21133              	.LBI1160:
1193:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
 21134              		.loc 1 1193 20 view .LVU7205
 21135              	.LBB1161:
1194:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
 21136              		.loc 1 1194 5 view .LVU7206
 21137              	.LBB1162:
 21138              	.LBI1162:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 21139              		.loc 3 105 1 view .LVU7207
 21140              	.LBB1163:
 21141              		.loc 3 107 3 view .LVU7208
 21142              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 21143              		.loc 3 107 10 is_stmt 0 view .LVU7209
 21144 0cae 488B7B30 		mov	rdi, QWORD PTR 48[rbx]	# MEM[base: _158, offset: 48B], MEM[base: _158, offset: 48B]
 21145 0cb2 4883C360 		add	rbx, 96	# ivtmp.776,
 21146 0cb6 488B4BA8 		mov	rcx, QWORD PTR -88[rbx]	# MEM[base: _158, offset: 8B], MEM[base: _158, offset: 8B]
 21147 0cba C5FB1043 		vmovsd	xmm0, QWORD PTR -24[rbx]	# MEM[base: _158, offset: 72B], MEM[base: _158, offset: 72B]
 21147      E8
 21148 0cbf 48897C24 		mov	QWORD PTR 24[rsp], rdi	#, MEM[base: _158, offset: 48B]
 21148      18
 21149 0cc4 BF010000 		mov	edi, 1	#,
 21149      00
 21150 0cc9 488B43E0 		mov	rax, QWORD PTR -32[rbx]	# MEM[base: _158, offset: 64B], MEM[base: _158, offset: 64B]
 21151 0ccd 48894424 		mov	QWORD PTR 16[rsp], rax	#, MEM[base: _158, offset: 64B]
 21151      10
 21152 0cd2 B8030000 		mov	eax, 3	#,
 21152      00
 21153 0cd7 488B53C8 		mov	rdx, QWORD PTR -56[rbx]	# MEM[base: _158, offset: 40B], MEM[base: _158, offset: 40B]
 21154 0cdb 48895424 		mov	QWORD PTR 8[rsp], rdx	#, MEM[base: _158, offset: 40B]
 21154      08
 21155 0ce0 488B73C0 		mov	rsi, QWORD PTR -64[rbx]	# MEM[base: _158, offset: 32B], MEM[base: _158, offset: 32B]
 21156 0ce4 48893424 		mov	QWORD PTR [rsp], rsi	#, MEM[base: _158, offset: 32B]
 21157 0ce8 488D3500 		lea	rsi, .LC51[rip]	#,
GAS LISTING /tmp/ccr2dACi.s 			page 563


 21157      000000
 21158 0cef 4C8B4BB8 		mov	r9, QWORD PTR -72[rbx]	#, MEM[base: _158, offset: 24B]
 21159 0cf3 4C8B43B0 		mov	r8, QWORD PTR -80[rbx]	#, MEM[base: _158, offset: 16B]
 21160 0cf7 488B53A0 		mov	rdx, QWORD PTR -96[rbx]	#, MEM[base: _158, offset: 0B]
 21161 0cfb C5FB1053 		vmovsd	xmm2, QWORD PTR -16[rbx]	#, MEM[base: _158, offset: 80B]
 21161      F0
 21162 0d00 C5FB104B 		vmovsd	xmm1, QWORD PTR -40[rbx]	#, MEM[base: _158, offset: 56B]
 21162      D8
 21163 0d05 E8000000 		call	__printf_chk@PLT	#
 21163      00
 21164              	.LVL1332:
 21165              		.loc 3 107 10 view .LVU7210
 21166              	.LBE1163:
 21167              	.LBE1162:
 21168              	.LBE1161:
 21169              	.LBE1160:
1297:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 21170              		.loc 1 1297 99 is_stmt 1 view .LVU7211
1297:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 21171              		.loc 1 1297 55 view .LVU7212
 21172              	# sieve_extend.c:1297:                 for (counter_t tuning_result_index=0; tuning_result_index<mi
1297:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 21173              		.loc 1 1297 75 is_stmt 0 view .LVU7213
 21174 0d0a 4983FD0A 		cmp	r13, 10	# tuning_results,
 21175 0d0e B90A0000 		mov	ecx, 10	# tmp422,
 21175      00
 21176 0d13 490F46CD 		cmovbe	rcx, r13	# tuning_results,, tmp422
 21177              	# sieve_extend.c:1297:                 for (counter_t tuning_result_index=0; tuning_result_index<mi
1297:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 21178              		.loc 1 1297 17 view .LVU7214
 21179 0d17 4839CD   		cmp	rbp, rcx	# tuning_result_index, tmp422
 21180 0d1a 0F8277FF 		jb	.L1742	#,
 21180      FFFF
 21181 0d20 E973FCFF 		jmp	.L1741	#
 21181      FF
 21182              	.LVL1333:
 21183              	.L1833:
1297:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 21184              		.loc 1 1297 17 view .LVU7215
 21185              	.LBE1173:
 21186              	.LBE1118:
 21187              	.LBE1117:
 21188              	.LBE1116:
1391:sieve_extend.c ****     }
 21189              		.loc 1 1391 39 is_stmt 1 view .LVU7216
 21190              	.LBB1192:
 21191              	.LBI1192:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 21192              		.loc 3 105 1 view .LVU7217
 21193              	.LBB1193:
 21194              		.loc 3 107 3 view .LVU7218
 21195              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 21196              		.loc 3 107 10 is_stmt 0 view .LVU7219
 21197 0d25 488D3D00 		lea	rdi, .LC48[rip]	#,
 21197      000000
 21198              	.LBE1193:
 21199              	.LBE1192:
GAS LISTING /tmp/ccr2dACi.s 			page 564


 21200              	# sieve_extend.c:1394:     counter_t best_blocksize_bits = default_blocksize;
1394:sieve_extend.c ****     if (option_tunelevel) {
 21201              		.loc 1 1394 15 view .LVU7220
 21202 0d2c 41BE00FC 		mov	r14d, 261120	# best_result$blocksize_bits,
 21202      0300
 21203              	.LBB1195:
 21204              	.LBB1194:
 21205              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 21206              		.loc 3 107 10 view .LVU7221
 21207 0d32 E8000000 		call	puts@PLT	#
 21207      00
 21208              	.LVL1334:
 21209              		.loc 3 107 10 view .LVU7222
 21210              	.LBE1194:
 21211              	.LBE1195:
1394:sieve_extend.c ****     if (option_tunelevel) {
 21212              		.loc 1 1394 5 is_stmt 1 view .LVU7223
1395:sieve_extend.c ****         tuning_result_type tuning_result = tune(option_tunelevel, option_maxFactor, option_verbosel
 21213              		.loc 1 1395 5 view .LVU7224
 21214              	# sieve_extend.c:1395:     if (option_tunelevel) {
1395:sieve_extend.c ****         tuning_result_type tuning_result = tune(option_tunelevel, option_maxFactor, option_verbosel
 21215              		.loc 1 1395 9 is_stmt 0 view .LVU7225
 21216 0d37 448B8424 		mov	r8d, DWORD PTR 156[rsp]	# option_tunelevel.40_62, option_tunelevel
 21216      9C000000 
 21217              	# sieve_extend.c:1395:     if (option_tunelevel) {
1395:sieve_extend.c ****         tuning_result_type tuning_result = tune(option_tunelevel, option_maxFactor, option_verbosel
 21218              		.loc 1 1395 8 view .LVU7226
 21219 0d3f 4585C0   		test	r8d, r8d	# option_tunelevel.40_62
 21220 0d42 0F857D01 		jne	.L1840	#,
 21220      0000
 21221              	.LVL1335:
 21222              	.L1720:
 21223              	.LBB1196:
1405:sieve_extend.c ****         counter_t passes = 0;
 21224              		.loc 1 1405 9 is_stmt 1 view .LVU7227
 21225              	# sieve_extend.c:1405:         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize
1405:sieve_extend.c ****         counter_t passes = 0;
 21226              		.loc 1 1405 12 is_stmt 0 view .LVU7228
 21227 0d48 83BC2498 		cmp	DWORD PTR 152[rsp], 0	# option_verboselevel,
 21227      00000000 
 21228 0d50 0F8E98F6 		jle	.L1747	#,
 21228      FFFF
1405:sieve_extend.c ****         counter_t passes = 0;
 21229              		.loc 1 1405 39 is_stmt 1 discriminator 1 view .LVU7229
 21230              	.LVL1336:
 21231              	.LBB1102:
 21232              	.LBI1102:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 21233              		.loc 3 105 1 discriminator 1 view .LVU7230
 21234              	.LBB1103:
 21235              		.loc 3 107 3 discriminator 1 view .LVU7231
 21236              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 21237              		.loc 3 107 10 is_stmt 0 discriminator 1 view .LVU7232
 21238 0d56 4C8B0D00 		mov	r9, QWORD PTR global_VECTORSTEP_FASTER[rip]	#, global_VECTORSTEP_FASTER
 21238      000000
 21239 0d5d 4C89F2   		mov	rdx, r14	#, best_result$blocksize_bits
 21240 0d60 4C8B0500 		mov	r8, QWORD PTR global_MEDIUMSTEP_FASTER[rip]	#, global_MEDIUMSTEP_FASTER
GAS LISTING /tmp/ccr2dACi.s 			page 565


 21240      000000
 21241 0d67 488D3500 		lea	rsi, .LC58[rip]	#,
 21241      000000
 21242 0d6e 488B0D00 		mov	rcx, QWORD PTR global_SMALLSTEP_FASTER[rip]	#, global_SMALLSTEP_FASTER
 21242      000000
 21243 0d75 BF010000 		mov	edi, 1	#,
 21243      00
 21244 0d7a 31C0     		xor	eax, eax	#
 21245 0d7c E8000000 		call	__printf_chk@PLT	#
 21245      00
 21246              	.LVL1337:
 21247 0d81 E968F6FF 		jmp	.L1747	#
 21247      FF
 21248              	.LVL1338:
 21249              	.L1839:
 21250              		.loc 3 107 10 discriminator 1 view .LVU7233
 21251              	.LBE1103:
 21252              	.LBE1102:
 21253              	.LBE1196:
 21254              	.LBB1197:
 21255              	.LBB1189:
 21256              	.LBB1186:
1311:sieve_extend.c ****     if (option_verboselevel >= 1) {
 21257              		.loc 1 1311 5 is_stmt 1 view .LVU7234
 21258              	# sieve_extend.c:1311:     tuning_result_type best_result = tuning_result[0];
1311:sieve_extend.c ****     if (option_verboselevel >= 1) {
 21259              		.loc 1 1311 24 is_stmt 0 view .LVU7235
 21260 0d86 4D8B7708 		mov	r14, QWORD PTR 8[r15]	# best_result$blocksize_bits, MEM[(struct tuning_result_type *)tuning_re
 21261              	.LVL1339:
 21262              	# sieve_extend.c:1312:     if (option_verboselevel >= 1) {
1312:sieve_extend.c ****         tuning_result_index = 0;
 21263              		.loc 1 1312 8 view .LVU7236
 21264 0d8a 837C2458 		cmp	DWORD PTR 88[rsp], 0	# %sfp,
 21264      00
 21265              	# sieve_extend.c:1311:     tuning_result_type best_result = tuning_result[0];
1311:sieve_extend.c ****     if (option_verboselevel >= 1) {
 21266              		.loc 1 1311 24 view .LVU7237
 21267 0d8f 4D8B6F20 		mov	r13, QWORD PTR 32[r15]	# best_result$smallstep_faster, MEM[(struct tuning_result_type *)tuning
 21268              	.LVL1340:
1311:sieve_extend.c ****     if (option_verboselevel >= 1) {
 21269              		.loc 1 1311 24 view .LVU7238
 21270 0d93 498B6F28 		mov	rbp, QWORD PTR 40[r15]	# best_result$mediumstep_faster, MEM[(struct tuning_result_type *)tunin
 21271 0d97 498B5F30 		mov	rbx, QWORD PTR 48[r15]	# best_result$vectorstep_faster, MEM[(struct tuning_result_type *)tunin
1312:sieve_extend.c ****         tuning_result_index = 0;
 21272              		.loc 1 1312 5 is_stmt 1 view .LVU7239
 21273              	# sieve_extend.c:1312:     if (option_verboselevel >= 1) {
1312:sieve_extend.c ****         tuning_result_index = 0;
 21274              		.loc 1 1312 8 is_stmt 0 view .LVU7240
 21275 0d9b 7E6E     		jle	.L1745	#,
1313:sieve_extend.c ****         printf(".Best result:"); tuning_result_print(tuning_result[tuning_result_index]);
 21276              		.loc 1 1313 9 is_stmt 1 view .LVU7241
 21277              	.LVL1341:
1314:sieve_extend.c ****     }
 21278              		.loc 1 1314 9 view .LVU7242
 21279              	.LBB1174:
 21280              	.LBI1174:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
GAS LISTING /tmp/ccr2dACi.s 			page 566


 21281              		.loc 3 105 1 view .LVU7243
 21282              	.LBB1175:
 21283              		.loc 3 107 3 view .LVU7244
 21284              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 21285              		.loc 3 107 10 is_stmt 0 view .LVU7245
 21286 0d9d 488D3500 		lea	rsi, .LC57[rip]	#,
 21286      000000
 21287 0da4 BF010000 		mov	edi, 1	#,
 21287      00
 21288 0da9 31C0     		xor	eax, eax	#
 21289 0dab E8000000 		call	__printf_chk@PLT	#
 21289      00
 21290              	.LVL1342:
 21291              		.loc 3 107 10 view .LVU7246
 21292              	.LBE1175:
 21293              	.LBE1174:
1314:sieve_extend.c ****     }
 21294              		.loc 1 1314 34 is_stmt 1 view .LVU7247
 21295              	.LBB1176:
 21296              	.LBI1176:
1193:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
 21297              		.loc 1 1193 20 view .LVU7248
 21298              	.LBB1177:
1194:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
 21299              		.loc 1 1194 5 view .LVU7249
 21300              	.LBB1178:
 21301              	.LBI1178:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 21302              		.loc 3 105 1 view .LVU7250
 21303              	.LBB1179:
 21304              		.loc 3 107 3 view .LVU7251
 21305              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 21306              		.loc 3 107 10 is_stmt 0 view .LVU7252
 21307 0db0 4D8B5738 		mov	r10, QWORD PTR 56[r15]	# MEM[(struct tuning_result_type *)tuning_result_239 + 56B], MEM[(struc
 21308 0db4 488D3500 		lea	rsi, .LC51[rip]	#,
 21308      000000
 21309 0dbb C4C17B10 		vmovsd	xmm0, QWORD PTR 80[r15]	# MEM[(struct tuning_result_type *)tuning_result_239 + 80B], MEM[(s
 21309      4750
 21310 0dc1 B8030000 		mov	eax, 3	#,
 21310      00
 21311 0dc6 498B4F10 		mov	rcx, QWORD PTR 16[r15]	# MEM[(struct tuning_result_type *)tuning_result_239 + 16B], MEM[(struc
 21312 0dca 498B5708 		mov	rdx, QWORD PTR 8[r15]	# MEM[(struct tuning_result_type *)tuning_result_239 + 8B], MEM[(struct 
 21313 0dce 4C895424 		mov	QWORD PTR 24[rsp], r10	#, MEM[(struct tuning_result_type *)tuning_result_239 + 56B]
 21313      18
 21314 0dd3 4D8B5F48 		mov	r11, QWORD PTR 72[r15]	# MEM[(struct tuning_result_type *)tuning_result_239 + 72B], MEM[(struc
 21315 0dd7 4C895C24 		mov	QWORD PTR 16[rsp], r11	#, MEM[(struct tuning_result_type *)tuning_result_239 + 72B]
 21315      10
 21316 0ddc 4D8B4F30 		mov	r9, QWORD PTR 48[r15]	# MEM[(struct tuning_result_type *)tuning_result_239 + 48B], MEM[(struct
 21317 0de0 4C894C24 		mov	QWORD PTR 8[rsp], r9	#, MEM[(struct tuning_result_type *)tuning_result_239 + 48B]
 21317      08
 21318 0de5 498B7F28 		mov	rdi, QWORD PTR 40[r15]	# MEM[(struct tuning_result_type *)tuning_result_239 + 40B], MEM[(struc
 21319 0de9 48893C24 		mov	QWORD PTR [rsp], rdi	#, MEM[(struct tuning_result_type *)tuning_result_239 + 40B]
 21320 0ded BF010000 		mov	edi, 1	#,
 21320      00
 21321 0df2 4D8B4F20 		mov	r9, QWORD PTR 32[r15]	#, MEM[(struct tuning_result_type *)tuning_result_239 + 32B]
 21322 0df6 4D8B4718 		mov	r8, QWORD PTR 24[r15]	#, MEM[(struct tuning_result_type *)tuning_result_239 + 24B]
 21323 0dfa C4C17B10 		vmovsd	xmm2, QWORD PTR 88[r15]	#, MEM[(struct tuning_result_type *)tuning_result_239 + 88B]
GAS LISTING /tmp/ccr2dACi.s 			page 567


 21323      5758
 21324 0e00 C4C17B10 		vmovsd	xmm1, QWORD PTR 64[r15]	#, MEM[(struct tuning_result_type *)tuning_result_239 + 64B]
 21324      4F40
 21325 0e06 E8000000 		call	__printf_chk@PLT	#
 21325      00
 21326              	.LVL1343:
 21327              	.L1745:
 21328              		.loc 3 107 10 view .LVU7253
 21329              	.LBE1179:
 21330              	.LBE1178:
 21331              	.LBE1177:
 21332              	.LBE1176:
1317:sieve_extend.c ****     return best_result;
 21333              		.loc 1 1317 5 is_stmt 1 view .LVU7254
 21334 0e0b 4C89FF   		mov	rdi, r15	#, tuning_result
 21335 0e0e E8000000 		call	free@PLT	#
 21335      00
 21336              	.LVL1344:
1318:sieve_extend.c **** }
 21337              		.loc 1 1318 5 view .LVU7255
1318:sieve_extend.c **** }
 21338              		.loc 1 1318 5 is_stmt 0 view .LVU7256
 21339              	.LBE1186:
 21340              	.LBE1189:
1397:sieve_extend.c ****         global_MEDIUMSTEP_FASTER = tuning_result.mediumstep_faster;
 21341              		.loc 1 1397 9 is_stmt 1 view .LVU7257
 21342              	# sieve_extend.c:1397:         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
1397:sieve_extend.c ****         global_MEDIUMSTEP_FASTER = tuning_result.mediumstep_faster;
 21343              		.loc 1 1397 33 is_stmt 0 view .LVU7258
 21344 0e13 4C892D00 		mov	QWORD PTR global_SMALLSTEP_FASTER[rip], r13	# global_SMALLSTEP_FASTER, best_result$smallstep_f
 21344      000000
1398:sieve_extend.c ****         global_VECTORSTEP_FASTER = tuning_result.vectorstep_faster;
 21345              		.loc 1 1398 9 is_stmt 1 view .LVU7259
 21346              	.LBE1197:
 21347              	# sieve_extend.c:1404:     if (best_blocksize_bits > 0) {
1404:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 21348              		.loc 1 1404 8 is_stmt 0 view .LVU7260
 21349 0e1a 4D85F6   		test	r14, r14	# best_result$blocksize_bits
 21350              	.LBB1198:
 21351              	# sieve_extend.c:1398:         global_MEDIUMSTEP_FASTER = tuning_result.mediumstep_faster;
1398:sieve_extend.c ****         global_VECTORSTEP_FASTER = tuning_result.vectorstep_faster;
 21352              		.loc 1 1398 34 view .LVU7261
 21353 0e1d 48892D00 		mov	QWORD PTR global_MEDIUMSTEP_FASTER[rip], rbp	# global_MEDIUMSTEP_FASTER, best_result$mediumste
 21353      000000
1399:sieve_extend.c ****         best_blocksize_bits = tuning_result.blocksize_bits;
 21354              		.loc 1 1399 9 is_stmt 1 view .LVU7262
 21355              	# sieve_extend.c:1399:         global_VECTORSTEP_FASTER = tuning_result.vectorstep_faster;
1399:sieve_extend.c ****         best_blocksize_bits = tuning_result.blocksize_bits;
 21356              		.loc 1 1399 34 is_stmt 0 view .LVU7263
 21357 0e24 48891D00 		mov	QWORD PTR global_VECTORSTEP_FASTER[rip], rbx	# global_VECTORSTEP_FASTER, best_result$vectorste
 21357      000000
1400:sieve_extend.c ****     }
 21358              		.loc 1 1400 9 is_stmt 1 view .LVU7264
 21359              	.LVL1345:
1400:sieve_extend.c ****     }
 21360              		.loc 1 1400 9 is_stmt 0 view .LVU7265
 21361              	.LBE1198:
GAS LISTING /tmp/ccr2dACi.s 			page 568


1403:sieve_extend.c ****     if (best_blocksize_bits > 0) {
 21362              		.loc 1 1403 5 is_stmt 1 view .LVU7266
1404:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 21363              		.loc 1 1404 5 view .LVU7267
 21364              	# sieve_extend.c:1404:     if (best_blocksize_bits > 0) {
1404:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 21365              		.loc 1 1404 8 is_stmt 0 view .LVU7268
 21366 0e2b 0F8411F7 		je	.L1746	#,
 21366      FFFF
 21367 0e31 E912FFFF 		jmp	.L1720	#
 21367      FF
 21368              	.LVL1346:
 21369              	.L1755:
1404:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 21370              		.loc 1 1404 8 view .LVU7269
 21371 0e36 488D3D00 		lea	rdi, CSWTCH.126[rip]	# tmp337,
 21371      000000
 21372 0e3d 4C8D0D00 		lea	r9, CSWTCH.127[rip]	# tmp339,
 21372      000000
 21373 0e44 488D2D00 		lea	rbp, CSWTCH.128[rip]	# tmp341,
 21373      000000
 21374              	.LVL1347:
1404:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 21375              		.loc 1 1404 8 view .LVU7270
 21376 0e4b 488D1D00 		lea	rbx, CSWTCH.129[rip]	# tmp343,
 21376      000000
 21377              	.LVL1348:
1404:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 21378              		.loc 1 1404 8 view .LVU7271
 21379 0e52 4A8B0CC7 		mov	rcx, QWORD PTR [rdi+r8*8]	# smallstep_faster_steps, CSWTCH.126
 21380 0e56 4F8B24C1 		mov	r12, QWORD PTR [r9+r8*8]	# vectorstep_faster_steps, CSWTCH.127
 21381 0e5a 4E8B7CC5 		mov	r15, QWORD PTR 0[rbp+r8*8]	# freebits_steps, CSWTCH.128
 21381      00
 21382              	.LVL1349:
1404:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 21383              		.loc 1 1404 8 view .LVU7272
 21384 0e5f C4A17B10 		vmovsd	xmm7, QWORD PTR [rbx+r8*8]	# sample_duration, CSWTCH.129
 21384      3CC3
 21385 0e65 48898C24 		mov	QWORD PTR 136[rsp], rcx	# %sfp, smallstep_faster_steps
 21385      88000000 
 21386 0e6d 4C89A424 		mov	QWORD PTR 128[rsp], r12	# %sfp, vectorstep_faster_steps
 21386      80000000 
 21387 0e75 4C897C24 		mov	QWORD PTR 96[rsp], r15	# %sfp, freebits_steps
 21387      60
 21388              	.LBB1199:
 21389              	# sieve_extend.c:1330:     for (int arg=1; arg < argc; arg++) {
1330:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 21390              		.loc 1 1330 14 view .LVU7273
 21391 0e7a 48C74424 		mov	QWORD PTR 104[rsp], 8	# %sfp,
 21391      68080000 
 21391      00
 21392 0e83 C5FB117C 		vmovsd	QWORD PTR 112[rsp], xmm7	# %sfp, sample_duration
 21392      2470
 21393              	.L1721:
 21394              	.LVL1350:
1330:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 21395              		.loc 1 1330 14 view .LVU7274
GAS LISTING /tmp/ccr2dACi.s 			page 569


 21396              	.LBE1199:
 21397              	.LBB1200:
 21398              	.LBB1190:
 21399              	.LBB1187:
1244:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 21400              		.loc 1 1244 5 is_stmt 1 view .LVU7275
 21401              	# sieve_extend.c:1244:     if (option_verboselevel >= 1) printf("Tuning..."); if (option_verboselev
1244:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 21402              		.loc 1 1244 8 is_stmt 0 view .LVU7276
 21403 0e89 448B6C24 		mov	r13d, DWORD PTR 88[rsp]	# option_verboselevel.41_63, %sfp
 21403      58
 21404              	.LVL1351:
1244:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 21405              		.loc 1 1244 8 view .LVU7277
 21406 0e8e 4585ED   		test	r13d, r13d	# option_verboselevel.41_63
 21407 0e91 0F8E43F8 		jle	.L1723	#,
 21407      FFFF
1244:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 21408              		.loc 1 1244 35 is_stmt 1 view .LVU7278
 21409              	.LVL1352:
 21410              	.LBB1180:
 21411              	.LBI1180:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 21412              		.loc 3 105 1 view .LVU7279
 21413              	.LBB1181:
 21414              		.loc 3 107 3 view .LVU7280
 21415              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 21416              		.loc 3 107 10 is_stmt 0 view .LVU7281
 21417 0e97 31C0     		xor	eax, eax	#
 21418 0e99 488D3500 		lea	rsi, .LC49[rip]	#,
 21418      000000
 21419 0ea0 BF010000 		mov	edi, 1	#,
 21419      00
 21420              	.LBE1181:
 21421              	.LBE1180:
 21422              	# sieve_extend.c:1244:     if (option_verboselevel >= 1) printf("Tuning..."); if (option_verboselev
1244:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 21423              		.loc 1 1244 59 view .LVU7282
 21424 0ea5 4489EB   		mov	ebx, r13d	# option_verboselevel.41_63, option_verboselevel.41_63
 21425              	.LBB1183:
 21426              	.LBB1182:
 21427              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 21428              		.loc 3 107 10 view .LVU7283
 21429 0ea8 E8000000 		call	__printf_chk@PLT	#
 21429      00
 21430              	.LVL1353:
 21431              		.loc 3 107 10 view .LVU7284
 21432              	.LBE1182:
 21433              	.LBE1183:
1244:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 21434              		.loc 1 1244 56 is_stmt 1 view .LVU7285
 21435              	# sieve_extend.c:1244:     if (option_verboselevel >= 1) printf("Tuning..."); if (option_verboselev
1244:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 21436              		.loc 1 1244 59 is_stmt 0 view .LVU7286
 21437 0ead 83EB01   		sub	ebx, 1	# option_verboselevel.41_63,
 21438 0eb0 0F8424F8 		je	.L1723	#,
 21438      FFFF
GAS LISTING /tmp/ccr2dACi.s 			page 570


1244:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 21439              		.loc 1 1244 86 is_stmt 1 view .LVU7287
 21440              	.LVL1354:
 21441              	.LBB1184:
 21442              	.LBI1184:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 21443              		.loc 3 105 1 view .LVU7288
 21444              	.LBB1185:
 21445              		.loc 3 107 3 view .LVU7289
 21446              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 21447              		.loc 3 107 10 is_stmt 0 view .LVU7290
 21448 0eb6 BF0A0000 		mov	edi, 10	#,
 21448      00
 21449 0ebb E8000000 		call	putchar@PLT	#
 21449      00
 21450              	.LVL1355:
 21451 0ec0 E915F8FF 		jmp	.L1723	#
 21451      FF
 21452              	.LVL1356:
 21453              	.L1840:
 21454              		.loc 3 107 10 view .LVU7291
 21455              	.LBE1185:
 21456              	.LBE1184:
 21457              	.LBE1187:
 21458              	.LBE1190:
1396:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
 21459              		.loc 1 1396 9 is_stmt 1 view .LVU7292
 21460              	# sieve_extend.c:1396:         tuning_result_type tuning_result = tune(option_tunelevel, option_max
1396:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
 21461              		.loc 1 1396 44 is_stmt 0 view .LVU7293
 21462 0ec5 8B942498 		mov	edx, DWORD PTR 152[rsp]	# option_verboselevel.41_63, option_verboselevel
 21462      000000
 21463 0ecc 4183E801 		sub	r8d, 1	#,
 21464 0ed0 488BB424 		mov	rsi, QWORD PTR 160[rsp]	# option_maxFactor.42_64, option_maxFactor
 21464      A0000000 
 21465 0ed8 4183F802 		cmp	r8d, 2	# _212,
 21466 0edc 89542458 		mov	DWORD PTR 88[rsp], edx	# %sfp, option_verboselevel.41_63
 21467 0ee0 48897424 		mov	QWORD PTR 120[rsp], rsi	# %sfp, option_maxFactor.42_64
 21467      78
 21468              	.LVL1357:
 21469              	.LBB1191:
1201:sieve_extend.c ****     counter_t best_blocksize_bits = default_blocksize;
 21470              		.loc 1 1201 27 is_stmt 1 view .LVU7294
 21471              	.LBB1188:
1202:sieve_extend.c **** 
 21472              		.loc 1 1202 5 view .LVU7295
1204:sieve_extend.c ****     best_blocksize_bits = 0;
 21473              		.loc 1 1204 5 view .LVU7296
1205:sieve_extend.c ****     counter_t best_smallstep_faster = 0;
 21474              		.loc 1 1205 5 view .LVU7297
1206:sieve_extend.c ****     counter_t best_mediumstep_faster = 0;
 21475              		.loc 1 1206 5 view .LVU7298
1207:sieve_extend.c ****     counter_t best_vectorstep_faster = 0;
 21476              		.loc 1 1207 5 view .LVU7299
1208:sieve_extend.c ****     counter_t smallstep_faster_steps = 4;
 21477              		.loc 1 1208 5 view .LVU7300
1209:sieve_extend.c ****     counter_t mediumstep_faster_steps = 4;
GAS LISTING /tmp/ccr2dACi.s 			page 571


 21478              		.loc 1 1209 5 view .LVU7301
1210:sieve_extend.c ****     counter_t vectorstep_faster_steps = 32;
 21479              		.loc 1 1210 5 view .LVU7302
1211:sieve_extend.c ****     counter_t freebits_steps = anticiped_cache_line_bytesize;
 21480              		.loc 1 1211 5 view .LVU7303
1212:sieve_extend.c ****     counter_t sample_max = default_sample_max;
 21481              		.loc 1 1212 5 view .LVU7304
1213:sieve_extend.c ****     double sample_duration = default_sample_duration;
 21482              		.loc 1 1213 5 view .LVU7305
1214:sieve_extend.c **** 
 21483              		.loc 1 1214 5 view .LVU7306
1217:sieve_extend.c ****         case 1:
 21484              		.loc 1 1217 5 view .LVU7307
 21485 0ee5 0F864BFF 		jbe	.L1755	#,
 21485      FFFF
 21486 0eeb C5FB1005 		vmovsd	xmm0, QWORD PTR .LC26[rip]	# sample_duration,
 21486      00000000 
 21487 0ef3 48C74424 		mov	QWORD PTR 104[rsp], 5	# %sfp,
 21487      68050000 
 21487      00
 21488 0efc 48C74424 		mov	QWORD PTR 96[rsp], 128	# %sfp,
 21488      60800000 
 21488      00
 21489 0f05 48C78424 		mov	QWORD PTR 128[rsp], 32	# %sfp,
 21489      80000000 
 21489      20000000 
 21490 0f11 48C78424 		mov	QWORD PTR 136[rsp], 4	# %sfp,
 21490      88000000 
 21490      04000000 
 21491 0f1d C5FB1144 		vmovsd	QWORD PTR 112[rsp], xmm0	# %sfp, sample_duration
 21491      2470
 21492 0f23 E961FFFF 		jmp	.L1721	#
 21492      FF
 21493              	.LVL1358:
 21494              	.L1826:
1217:sieve_extend.c ****         case 1:
 21495              		.loc 1 1217 5 is_stmt 0 view .LVU7308
 21496              	.LBE1188:
 21497              	.LBE1191:
 21498              	.LBE1200:
 21499              	.LBB1201:
1333:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option_verboselevel > 4) {
 21500              		.loc 1 1333 34 is_stmt 1 discriminator 1 view .LVU7309
 21501              	.LBB1039:
 21502              	.LBI1039:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 21503              		.loc 3 98 1 discriminator 1 view .LVU7310
 21504              	.LBB1040:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 21505              		.loc 3 100 3 discriminator 1 view .LVU7311
 21506              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 21507              		.loc 3 100 10 is_stmt 0 discriminator 1 view .LVU7312
 21508 0f28 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 21508      000000
 21509 0f2f BA1B0000 		mov	edx, 27	#,
 21509      00
GAS LISTING /tmp/ccr2dACi.s 			page 572


 21510 0f34 BE010000 		mov	esi, 1	#,
 21510      00
 21511 0f39 488D3D00 		lea	rdi, .LC30[rip]	#,
 21511      000000
 21512 0f40 E8000000 		call	fwrite@PLT	#
 21512      00
 21513              	.LVL1359:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 21514              		.loc 3 100 10 discriminator 1 view .LVU7313
 21515              	.LBE1040:
 21516              	.LBE1039:
1333:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option_verboselevel > 4) {
 21517              		.loc 1 1333 83 is_stmt 1 discriminator 1 view .LVU7314
 21518 0f45 E967F6FF 		jmp	.L1824	#
 21518      FF
 21519              	.L1704:
1343:sieve_extend.c ****             }
 21520              		.loc 1 1343 17 view .LVU7315
 21521              	.LVL1360:
 21522              	.LBB1041:
 21523              	.LBI1036:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 21524              		.loc 3 98 1 view .LVU7316
 21525              	.LBB1038:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 21526              		.loc 3 100 3 view .LVU7317
 21527              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 21528              		.loc 3 100 10 is_stmt 0 view .LVU7318
 21529 0f4a 498B0F   		mov	rcx, QWORD PTR [r15]	#, *_29
 21530 0f4d 488D1500 		lea	rdx, .LC37[rip]	#,
 21530      000000
 21531 0f54 E945F6FF 		jmp	.L1823	#
 21531      FF
 21532              	.LVL1361:
 21533              	.L1708:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 21534              		.loc 3 100 10 view .LVU7319
 21535              	.LBE1038:
 21536              	.LBE1041:
1350:sieve_extend.c ****             }
 21537              		.loc 1 1350 17 is_stmt 1 view .LVU7320
 21538              	.LBB1042:
 21539              	.LBI1042:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 21540              		.loc 3 98 1 view .LVU7321
 21541              	.LBB1043:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 21542              		.loc 3 100 3 view .LVU7322
 21543              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 21544              		.loc 3 100 10 is_stmt 0 view .LVU7323
 21545 0f59 498B0F   		mov	rcx, QWORD PTR [r15]	#, *_41
 21546 0f5c 488D1500 		lea	rdx, .LC42[rip]	#,
 21546      000000
 21547 0f63 E936F6FF 		jmp	.L1823	#
 21547      FF
GAS LISTING /tmp/ccr2dACi.s 			page 573


 21548              	.LVL1362:
 21549              	.L1829:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 21550              		.loc 3 100 10 view .LVU7324
 21551              	.LBE1043:
 21552              	.LBE1042:
1341:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tunelevel > 4) {
 21553              		.loc 1 1341 34 is_stmt 1 discriminator 1 view .LVU7325
 21554              	.LBB1044:
 21555              	.LBI1044:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 21556              		.loc 3 98 1 discriminator 1 view .LVU7326
 21557              	.LBB1045:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 21558              		.loc 3 100 3 discriminator 1 view .LVU7327
 21559              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 21560              		.loc 3 100 10 is_stmt 0 discriminator 1 view .LVU7328
 21561 0f68 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 21561      000000
 21562 0f6f 488D3D00 		lea	rdi, .LC36[rip]	#,
 21562      000000
 21563 0f76 BA180000 		mov	edx, 24	#,
 21563      00
 21564 0f7b BE010000 		mov	esi, 1	#,
 21564      00
 21565 0f80 E8000000 		call	fwrite@PLT	#
 21565      00
 21566              	.LVL1363:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 21567              		.loc 3 100 10 discriminator 1 view .LVU7329
 21568              	.LBE1045:
 21569              	.LBE1044:
1341:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tunelevel > 4) {
 21570              		.loc 1 1341 80 is_stmt 1 discriminator 1 view .LVU7330
 21571 0f85 498B3C24 		mov	rdi, QWORD PTR [r12]	#, *argv_159(D)
 21572 0f89 E8000000 		call	usage	#
 21572      00
 21573              	.LVL1364:
 21574              	.L1837:
1341:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tunelevel > 4) {
 21575              		.loc 1 1341 80 is_stmt 0 discriminator 1 view .LVU7331
 21576              	.LBE1201:
 21577              	# sieve_extend.c:1429: }
 21578              		.loc 1 1429 1 view .LVU7332
 21579 0f8e E8000000 		call	__stack_chk_fail@PLT	#
 21579      00
 21580              	.LVL1365:
 21581              	.L1832:
 21582              	.LBB1202:
1348:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 21583              		.loc 1 1348 34 is_stmt 1 discriminator 1 view .LVU7333
 21584              	.LBB1046:
 21585              	.LBI1046:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 21586              		.loc 3 98 1 discriminator 1 view .LVU7334
 21587              	.LBB1047:
GAS LISTING /tmp/ccr2dACi.s 			page 574


 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 21588              		.loc 3 100 3 discriminator 1 view .LVU7335
 21589              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 21590              		.loc 3 100 10 is_stmt 0 discriminator 1 view .LVU7336
 21591 0f93 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 21591      000000
 21592 0f9a 488D3D00 		lea	rdi, .LC40[rip]	#,
 21592      000000
 21593 0fa1 BA1A0000 		mov	edx, 26	#,
 21593      00
 21594 0fa6 BE010000 		mov	esi, 1	#,
 21594      00
 21595 0fab E8000000 		call	fwrite@PLT	#
 21595      00
 21596              	.LVL1366:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 21597              		.loc 3 100 10 discriminator 1 view .LVU7337
 21598              	.LBE1047:
 21599              	.LBE1046:
1348:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 21600              		.loc 1 1348 82 is_stmt 1 discriminator 1 view .LVU7338
 21601 0fb0 498B3C24 		mov	rdi, QWORD PTR [r12]	#, *argv_159(D)
 21602 0fb4 E8000000 		call	usage	#
 21602      00
 21603              	.LVL1367:
 21604              	.LBE1202:
 21605              		.cfi_endproc
 21606              	.LFE86:
 21608              		.section	.rodata
 21609              		.align 16
 21612              	CSWTCH.129:
 21613 0000 9A999999 		.long	2576980378
 21614 0004 9999B93F 		.long	1069128089
 21615 0008 9A999999 		.long	2576980378
 21616 000c 9999C93F 		.long	1070176665
 21617 0010 9A999999 		.long	2576980378
 21618 0014 9999C93F 		.long	1070176665
 21619 0018 00000000 		.align 16
 21619      00000000 
 21622              	CSWTCH.128:
 21623 0020 00080000 		.quad	2048
 21623      00000000 
 21624 0028 00040000 		.quad	1024
 21624      00000000 
 21625 0030 40000000 		.quad	64
 21625      00000000 
 21626 0038 00000000 		.align 16
 21626      00000000 
 21629              	CSWTCH.127:
 21630 0040 20000000 		.quad	32
 21630      00000000 
 21631 0048 10000000 		.quad	16
 21631      00000000 
 21632 0050 04000000 		.quad	4
 21632      00000000 
 21633 0058 00000000 		.align 16
GAS LISTING /tmp/ccr2dACi.s 			page 575


 21633      00000000 
 21636              	CSWTCH.126:
 21637 0060 10000000 		.quad	16
 21637      00000000 
 21638 0068 08000000 		.quad	8
 21638      00000000 
 21639 0070 04000000 		.quad	4
 21639      00000000 
 21640              		.globl	debug_hitpoint
 21641              		.bss
 21642              		.align 32
 21645              	debug_hitpoint:
 21646 0000 00000000 		.zero	40
 21646      00000000 
 21646      00000000 
 21646      00000000 
 21646      00000000 
 21647              		.globl	global_VECTORSTEP_FASTER
 21648              		.data
 21649              		.align 8
 21652              	global_VECTORSTEP_FASTER:
 21653 0000 80000000 		.quad	128
 21653      00000000 
 21654              		.globl	global_MEDIUMSTEP_FASTER
 21655              		.bss
 21656              		.align 8
 21659              	global_MEDIUMSTEP_FASTER:
 21660 0028 00000000 		.zero	8
 21660      00000000 
 21661              		.globl	global_SMALLSTEP_FASTER
 21662              		.align 8
 21665              	global_SMALLSTEP_FASTER:
 21666 0030 00000000 		.zero	8
 21666      00000000 
 21667              		.section	.rodata.cst32,"aM",@progbits,32
 21668              		.align 32
 21669              	.LC0:
 21670 0000 00000000 		.quad	0
 21670      00000000 
 21671 0008 01000000 		.quad	1
 21671      00000000 
 21672 0010 02000000 		.quad	2
 21672      00000000 
 21673 0018 03000000 		.quad	3
 21673      00000000 
 21674              		.align 32
 21675              	.LC1:
 21676 0020 08000000 		.quad	8
 21676      00000000 
 21677 0028 08000000 		.quad	8
 21677      00000000 
 21678 0030 08000000 		.quad	8
 21678      00000000 
 21679 0038 08000000 		.quad	8
 21679      00000000 
 21680              		.align 32
 21681              	.LC2:
GAS LISTING /tmp/ccr2dACi.s 			page 576


 21682 0040 04000000 		.quad	4
 21682      00000000 
 21683 0048 04000000 		.quad	4
 21683      00000000 
 21684 0050 04000000 		.quad	4
 21684      00000000 
 21685 0058 04000000 		.quad	4
 21685      00000000 
 21686              		.align 32
 21687              	.LC3:
 21688 0060 3F000000 		.long	63
 21689 0064 3F000000 		.long	63
 21690 0068 3F000000 		.long	63
 21691 006c 3F000000 		.long	63
 21692 0070 3F000000 		.long	63
 21693 0074 3F000000 		.long	63
 21694 0078 3F000000 		.long	63
 21695 007c 3F000000 		.long	63
 21696              		.section	.rodata.cst8,"aM",@progbits,8
 21697              		.align 8
 21698              	.LC7:
 21699 0000 00000000 		.long	0
 21700 0004 0000F87F 		.long	2146959360
 21701              		.align 8
 21702              	.LC8:
 21703 0008 95D626E8 		.long	3894859413
 21704 000c 0B2E113E 		.long	1041313291
 21705              		.align 8
 21706              	.LC26:
 21707 0010 9A999999 		.long	2576980378
 21708 0014 9999B93F 		.long	1069128089
 21709              		.align 8
 21710              	.LC59:
 21711 0018 00000000 		.long	0
 21712 001c 00001440 		.long	1075052544
 21713              		.text
 21714              	.Letext0:
 21715              		.file 4 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h"
 21716              		.file 5 "/usr/include/x86_64-linux-gnu/bits/types.h"
 21717              		.file 6 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h"
 21718              		.file 7 "/usr/include/x86_64-linux-gnu/bits/types/FILE.h"
 21719              		.file 8 "/usr/include/stdio.h"
 21720              		.file 9 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h"
 21721              		.file 10 "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h"
 21722              		.file 11 "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h"
 21723              		.file 12 "/usr/include/stdint.h"
 21724              		.file 13 "/usr/include/time.h"
 21725              		.file 14 "/usr/include/math.h"
 21726              		.file 15 "/usr/include/stdlib.h"
 21727              		.file 16 "<built-in>"
 50121              		.section	.note.gnu.property,"a"
 50122              		.align 8
 50123 0000 04000000 		.long	 1f - 0f
 50124 0004 10000000 		.long	 4f - 1f
 50125 0008 05000000 		.long	 5
 50126              	0:
 50127 000c 474E5500 		.string	 "GNU"
GAS LISTING /tmp/ccr2dACi.s 			page 577


 50128              	1:
 50129              		.align 8
 50130 0010 020000C0 		.long	 0xc0000002
 50131 0014 04000000 		.long	 3f - 2f
 50132              	2:
 50133 0018 03000000 		.long	 0x3
 50134              	3:
 50135 001c 00000000 		.align 8
 50136              	4:
GAS LISTING /tmp/ccr2dACi.s 			page 578


DEFINED SYMBOLS
                            *ABS*:0000000000000000 sieve_extend.c
     /tmp/ccr2dACi.s:86     .text:0000000000000000 extendSieve_smallSize
     /tmp/ccr2dACi.s:21669  .rodata.cst32:0000000000000000 .LC0
     /tmp/ccr2dACi.s:21675  .rodata.cst32:0000000000000020 .LC1
     /tmp/ccr2dACi.s:21681  .rodata.cst32:0000000000000040 .LC2
     /tmp/ccr2dACi.s:21687  .rodata.cst32:0000000000000060 .LC3
     /tmp/ccr2dACi.s:1228   .text:00000000000006c0 extendSieve_shiftright_ivdep
     /tmp/ccr2dACi.s:3232   .text:00000000000014f0 compare_tuning_result
     /tmp/ccr2dACi.s:3258   .text:0000000000001510 setBitsTrue_largeRange_vector
     /tmp/ccr2dACi.s:5221   .text:0000000000001f10 extendSieve_aligned
     /tmp/ccr2dACi.s:6110   .text:0000000000002490 extendSieve_shiftleft
     /tmp/ccr2dACi.s:9078   .text:0000000000003790 show_primes.isra.0
     /tmp/ccr2dACi.s:9073   .rodata.str1.1:0000000000000006 .LC5
     /tmp/ccr2dACi.s:9071   .rodata.str1.1:0000000000000000 .LC4
     /tmp/ccr2dACi.s:9485   .text:0000000000003930 sieve
     /tmp/ccr2dACi.s:21665  .bss:0000000000000030 global_SMALLSTEP_FASTER
     /tmp/ccr2dACi.s:21659  .bss:0000000000000028 global_MEDIUMSTEP_FASTER
     /tmp/ccr2dACi.s:21652  .data:0000000000000000 global_VECTORSTEP_FASTER
     /tmp/ccr2dACi.s:16088  .text:00000000000055f0 tune_benchmark
     /tmp/ccr2dACi.s:21698  .rodata.cst8:0000000000000000 .LC7
     /tmp/ccr2dACi.s:21702  .rodata.cst8:0000000000000008 .LC8
     /tmp/ccr2dACi.s:16305  .text:0000000000005730 shiftvec
     /tmp/ccr2dACi.s:17467  .text:0000000000005af0 validatePrimeCount
     /tmp/ccr2dACi.s:17448  .rodata.str1.8:0000000000000000 .LC9
     /tmp/ccr2dACi.s:17454  .rodata.str1.1:0000000000000023 .LC11
     /tmp/ccr2dACi.s:17458  .rodata.str1.8:00000000000000c0 .LC12
     /tmp/ccr2dACi.s:17451  .rodata.str1.8:0000000000000058 .LC10
     /tmp/ccr2dACi.s:17461  .rodata.str1.8:00000000000000f8 .LC13
     /tmp/ccr2dACi.s:18721  .text:0000000000006280 usage
     /tmp/ccr2dACi.s:18681  .rodata.str1.8:0000000000000148 .LC14
     /tmp/ccr2dACi.s:18684  .rodata.str1.1:0000000000000031 .LC15
     /tmp/ccr2dACi.s:18688  .rodata.str1.8:0000000000000168 .LC16
     /tmp/ccr2dACi.s:18691  .rodata.str1.8:00000000000001a8 .LC17
     /tmp/ccr2dACi.s:18694  .rodata.str1.8:00000000000001d8 .LC18
     /tmp/ccr2dACi.s:18697  .rodata.str1.8:0000000000000220 .LC19
     /tmp/ccr2dACi.s:18700  .rodata.str1.8:0000000000000250 .LC20
     /tmp/ccr2dACi.s:18703  .rodata.str1.8:0000000000000290 .LC21
     /tmp/ccr2dACi.s:18706  .rodata.str1.8:00000000000002d0 .LC22
     /tmp/ccr2dACi.s:18709  .rodata.str1.8:0000000000000320 .LC23
     /tmp/ccr2dACi.s:18712  .rodata.str1.8:0000000000000348 .LC24
     /tmp/ccr2dACi.s:18715  .rodata.str1.8:0000000000000378 .LC25
     /tmp/ccr2dACi.s:19052  .text.startup:0000000000000000 main
     /tmp/ccr2dACi.s:18960  .rodata.str1.1:000000000000004a .LC28
     /tmp/ccr2dACi.s:18962  .rodata.str1.1:0000000000000051 .LC29
     /tmp/ccr2dACi.s:18966  .rodata.str1.1:0000000000000077 .LC31
     /tmp/ccr2dACi.s:18973  .rodata.str1.1:000000000000007a .LC33
     /tmp/ccr2dACi.s:18975  .rodata.str1.1:0000000000000093 .LC34
     /tmp/ccr2dACi.s:18977  .rodata.str1.1:000000000000009b .LC35
     /tmp/ccr2dACi.s:18986  .rodata.str1.1:00000000000000bb .LC38
     /tmp/ccr2dACi.s:19005  .rodata.str1.1:000000000000013a .LC46
     /tmp/ccr2dACi.s:19003  .rodata.str1.1:0000000000000121 .LC45
     /tmp/ccr2dACi.s:18988  .rodata.str1.1:00000000000000d1 .LC39
     /tmp/ccr2dACi.s:18992  .rodata.str1.1:00000000000000f3 .LC41
     /tmp/ccr2dACi.s:18999  .rodata.str1.1:00000000000000f7 .LC43
     /tmp/ccr2dACi.s:19001  .rodata.str1.1:0000000000000110 .LC44
     /tmp/ccr2dACi.s:19007  .rodata.str1.1:000000000000014a .LC47
GAS LISTING /tmp/ccr2dACi.s 			page 579


     /tmp/ccr2dACi.s:21710  .rodata.cst8:0000000000000018 .LC59
     /tmp/ccr2dACi.s:19040  .rodata.str1.8:0000000000000538 .LC60
     /tmp/ccr2dACi.s:18958  .rodata.str1.1:000000000000003b .LC27
     /tmp/ccr2dACi.s:18970  .rodata.str1.8:00000000000003b0 .LC32
     /tmp/ccr2dACi.s:19046  .rodata.str1.1:000000000000019e .LC62
     /tmp/ccr2dACi.s:19043  .rodata.str1.8:0000000000000580 .LC61
     /tmp/ccr2dACi.s:21706  .rodata.cst8:0000000000000010 .LC26
     /tmp/ccr2dACi.s:19020  .rodata.str1.1:0000000000000173 .LC52
     /tmp/ccr2dACi.s:19017  .rodata.str1.8:0000000000000420 .LC51
     /tmp/ccr2dACi.s:19024  .rodata.str1.8:00000000000004a8 .LC53
     /tmp/ccr2dACi.s:19027  .rodata.str1.1:0000000000000178 .LC54
     /tmp/ccr2dACi.s:19013  .rodata.str1.1:000000000000016e .LC50
     /tmp/ccr2dACi.s:19029  .rodata.str1.1:0000000000000185 .LC55
     /tmp/ccr2dACi.s:19031  .rodata.str1.1:000000000000018c .LC56
     /tmp/ccr2dACi.s:19009  .rodata.str1.1:0000000000000151 .LC48
     /tmp/ccr2dACi.s:19037  .rodata.str1.8:0000000000000500 .LC58
     /tmp/ccr2dACi.s:19033  .rodata.str1.1:0000000000000190 .LC57
     /tmp/ccr2dACi.s:21636  .rodata:0000000000000060 CSWTCH.126
     /tmp/ccr2dACi.s:21629  .rodata:0000000000000040 CSWTCH.127
     /tmp/ccr2dACi.s:21622  .rodata:0000000000000020 CSWTCH.128
     /tmp/ccr2dACi.s:21612  .rodata:0000000000000000 CSWTCH.129
     /tmp/ccr2dACi.s:19011  .rodata.str1.1:0000000000000164 .LC49
     /tmp/ccr2dACi.s:18964  .rodata.str1.1:000000000000005b .LC30
     /tmp/ccr2dACi.s:18983  .rodata.str1.8:00000000000003d8 .LC37
     /tmp/ccr2dACi.s:18996  .rodata.str1.8:00000000000003f8 .LC42
     /tmp/ccr2dACi.s:18979  .rodata.str1.1:00000000000000a2 .LC36
     /tmp/ccr2dACi.s:18990  .rodata.str1.1:00000000000000d8 .LC40
     /tmp/ccr2dACi.s:21645  .bss:0000000000000000 debug_hitpoint

UNDEFINED SYMBOLS
__stack_chk_fail
_GLOBAL_OFFSET_TABLE_
memcpy
__printf_chk
putchar
aligned_alloc
clock_gettime
free
puts
stderr
__fprintf_chk
fwrite
exit
__isoc99_sscanf
malloc
qsort
