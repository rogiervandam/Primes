GAS LISTING /tmp/cctyCFAS.s 			page 1


   1              		.file	"sieve_extend.c"
   2              		.intel_syntax noprefix
   3              	# GNU C17 (Ubuntu 9.4.0-1ubuntu1~20.04.1) version 9.4.0 (x86_64-linux-gnu)
   4              	#	compiled by GNU C version 9.4.0, GMP version 6.2.0, MPFR version 4.0.2, MPC version 1.1.0, isl ve
   5              	
   6              	# GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
   7              	# options passed:  -imultiarch x86_64-linux-gnu sieve_extend.c
   8              	# -march=skylake -mmmx -mno-3dnow -msse -msse2 -msse3 -mssse3 -mno-sse4a
   9              	# -mcx16 -msahf -mmovbe -maes -mno-sha -mpclmul -mpopcnt -mabm -mno-lwp
  10              	# -mfma -mno-fma4 -mno-xop -mbmi -mno-sgx -mbmi2 -mno-pconfig -mno-wbnoinvd
  11              	# -mno-tbm -mavx -mavx2 -msse4.2 -msse4.1 -mlzcnt -mrtm -mhle -mrdrnd
  12              	# -mf16c -mfsgsbase -mrdseed -mprfchw -madx -mfxsr -mxsave -mxsaveopt
  13              	# -mno-avx512f -mno-avx512er -mno-avx512cd -mno-avx512pf -mno-prefetchwt1
  14              	# -mclflushopt -mxsavec -mxsaves -mno-avx512dq -mno-avx512bw -mno-avx512vl
  15              	# -mno-avx512ifma -mno-avx512vbmi -mno-avx5124fmaps -mno-avx5124vnniw
  16              	# -mno-clwb -mno-mwaitx -mno-clzero -mno-pku -mno-rdpid -mno-gfni
  17              	# -mno-shstk -mno-avx512vbmi2 -mno-avx512vnni -mno-vaes -mno-vpclmulqdq
  18              	# -mno-avx512bitalg -mno-avx512vpopcntdq -mno-movdiri -mno-movdir64b
  19              	# -mno-waitpkg -mno-cldemote -mno-ptwrite --param l1-cache-size=32
  20              	# --param l1-cache-line-size=64 --param l2-cache-size=12288 -mtune=skylake
  21              	# -masm=intel -g -Ofast -funroll-all-loops -fno-asynchronous-unwind-tables
  22              	# -fno-exceptions -fverbose-asm -fstack-protector-strong -Wformat
  23              	# -Wformat-security -fstack-clash-protection -fcf-protection
  24              	# options enabled:  -fPIC -fPIE -faggressive-loop-optimizations
  25              	# -falign-functions -falign-jumps -falign-labels -falign-loops
  26              	# -fassociative-math -fassume-phsa -fauto-inc-dec -fbranch-count-reg
  27              	# -fcaller-saves -fcode-hoisting -fcombine-stack-adjustments -fcommon
  28              	# -fcompare-elim -fcprop-registers -fcrossjumping -fcse-follow-jumps
  29              	# -fcx-limited-range -fdefer-pop -fdelete-null-pointer-checks
  30              	# -fdevirtualize -fdevirtualize-speculatively -fdwarf2-cfi-asm
  31              	# -fearly-inlining -feliminate-unused-debug-types -fexpensive-optimizations
  32              	# -ffinite-math-only -fforward-propagate -ffp-int-builtin-inexact
  33              	# -ffunction-cse -fgcse -fgcse-after-reload -fgcse-lm -fgnu-runtime
  34              	# -fgnu-unique -fguess-branch-probability -fhoist-adjacent-loads -fident
  35              	# -fif-conversion -fif-conversion2 -findirect-inlining -finline
  36              	# -finline-atomics -finline-functions -finline-functions-called-once
  37              	# -finline-small-functions -fipa-bit-cp -fipa-cp -fipa-cp-clone -fipa-icf
  38              	# -fipa-icf-functions -fipa-icf-variables -fipa-profile -fipa-pure-const
  39              	# -fipa-ra -fipa-reference -fipa-reference-addressable -fipa-sra
  40              	# -fipa-stack-alignment -fipa-vrp -fira-hoist-pressure
  41              	# -fira-share-save-slots -fira-share-spill-slots
  42              	# -fisolate-erroneous-paths-dereference -fivopts -fkeep-static-consts
  43              	# -fleading-underscore -flifetime-dse -floop-interchange
  44              	# -floop-unroll-and-jam -flra-remat -flto-odr-type-merging
  45              	# -fmerge-constants -fmerge-debug-strings -fmove-loop-invariants
  46              	# -fomit-frame-pointer -foptimize-sibling-calls -foptimize-strlen
  47              	# -fpartial-inlining -fpeel-loops -fpeephole -fpeephole2 -fplt
  48              	# -fpredictive-commoning -fprefetch-loop-arrays -freciprocal-math -free
  49              	# -freg-struct-return -frename-registers -freorder-blocks
  50              	# -freorder-blocks-and-partition -freorder-functions -frerun-cse-after-loop
  51              	# -fsched-critical-path-heuristic -fsched-dep-count-heuristic
  52              	# -fsched-group-heuristic -fsched-interblock -fsched-last-insn-heuristic
  53              	# -fsched-rank-heuristic -fsched-spec -fsched-spec-insn-heuristic
  54              	# -fsched-stalled-insns-dep -fschedule-fusion -fschedule-insns2
  55              	# -fsemantic-interposition -fshow-column -fshrink-wrap
  56              	# -fshrink-wrap-separate -fsplit-ivs-in-unroller -fsplit-loops
  57              	# -fsplit-paths -fsplit-wide-types -fssa-backprop -fssa-phiopt
GAS LISTING /tmp/cctyCFAS.s 			page 2


  58              	# -fstack-clash-protection -fstack-protector-strong -fstdarg-opt
  59              	# -fstore-merging -fstrict-aliasing -fstrict-volatile-bitfields
  60              	# -fsync-libcalls -fthread-jumps -ftoplevel-reorder -ftree-bit-ccp
  61              	# -ftree-builtin-call-dce -ftree-ccp -ftree-ch -ftree-coalesce-vars
  62              	# -ftree-copy-prop -ftree-cselim -ftree-dce -ftree-dominator-opts
  63              	# -ftree-dse -ftree-forwprop -ftree-fre -ftree-loop-distribute-patterns
  64              	# -ftree-loop-distribution -ftree-loop-if-convert -ftree-loop-im
  65              	# -ftree-loop-ivcanon -ftree-loop-optimize -ftree-loop-vectorize
  66              	# -ftree-parallelize-loops= -ftree-partial-pre -ftree-phiprop -ftree-pre
  67              	# -ftree-pta -ftree-reassoc -ftree-scev-cprop -ftree-sink
  68              	# -ftree-slp-vectorize -ftree-slsr -ftree-sra -ftree-switch-conversion
  69              	# -ftree-tail-merge -ftree-ter -ftree-vrp -funit-at-a-time
  70              	# -funroll-all-loops -funroll-loops -funsafe-math-optimizations
  71              	# -funswitch-loops -fvar-tracking -fvar-tracking-assignments -fverbose-asm
  72              	# -fversion-loops-for-strides -fweb -fzero-initialized-in-bss
  73              	# -m128bit-long-double -m64 -m80387 -mabm -madx -maes -malign-stringops
  74              	# -mavx -mavx2 -mbmi -mbmi2 -mclflushopt -mcx16 -mf16c -mfancy-math-387
  75              	# -mfma -mfp-ret-in-387 -mfsgsbase -mfxsr -mglibc -mhle -mlong-double-80
  76              	# -mlzcnt -mmmx -mmovbe -mpclmul -mpopcnt -mprfchw -mpush-args -mrdrnd
  77              	# -mrdseed -mred-zone -mrtm -msahf -msse -msse2 -msse3 -msse4 -msse4.1
  78              	# -msse4.2 -mssse3 -mstv -mtls-direct-seg-refs -mvzeroupper -mxsave
  79              	# -mxsavec -mxsaveopt -mxsaves
  80              	
  81              		.text
  82              	.Ltext0:
  83              		.cfi_sections	.debug_frame
  84              		.p2align 4
  86              	extendSieve_smallSize:
  87              	.LVL0:
  88              	.LFB66:
  89              		.file 1 "sieve_extend.c"
   1:sieve_extend.c **** #include <stdio.h>
   2:sieve_extend.c **** #include <stdlib.h>
   3:sieve_extend.c **** #include <stdint.h>
   4:sieve_extend.c **** #include <time.h>
   5:sieve_extend.c **** #include <math.h>
   6:sieve_extend.c **** #include <string.h>
   7:sieve_extend.c **** 
   8:sieve_extend.c **** //add debug in front of a line to only compile it if the value below is set to 1 (or !=0)
   9:sieve_extend.c **** #define option_runonce 0
  10:sieve_extend.c **** #define debug if (option_runonce)
  11:sieve_extend.c **** 
  12:sieve_extend.c **** #define default_sieve_limit 1000000
  13:sieve_extend.c **** #define default_blocksize (32*1024*8-1024)
  14:sieve_extend.c **** #define default_sieve_duration 5
  15:sieve_extend.c **** #define default_sample_duration 0.1
  16:sieve_extend.c **** #define default_sample_max 5
  17:sieve_extend.c **** #define default_verbose_level 1
  18:sieve_extend.c **** #define default_tune_level 0
  19:sieve_extend.c **** #define default_check_level 1
  20:sieve_extend.c **** #define default_show_primes_on_error 100
  21:sieve_extend.c **** #define default_showMaxFactor (0 || option_runonce?100:0)
  22:sieve_extend.c **** #define anticiped_cache_line_bytesize 128
  23:sieve_extend.c **** 
  24:sieve_extend.c **** // 64 bit
  25:sieve_extend.c **** #define TYPE uint64_t
  26:sieve_extend.c **** 
GAS LISTING /tmp/cctyCFAS.s 			page 3


  27:sieve_extend.c **** // calculate the rest dynamically
  28:sieve_extend.c **** #define counter_t TYPE
  29:sieve_extend.c **** #define bitshift_t TYPE
  30:sieve_extend.c **** #define bitword_t TYPE
  31:sieve_extend.c **** 
  32:sieve_extend.c **** #define WORD_SIZE (sizeof(bitword_t)*8)
  33:sieve_extend.c **** #define WORD_SIZE_counter ((counter_t)(sizeof(bitword_t)*8))
  34:sieve_extend.c **** #define WORD_SIZE_bitshift ((bitshift_t)(sizeof(bitword_t)*8))
  35:sieve_extend.c **** #define pow(base,pow) (pow*((base>>pow)&1U))
  36:sieve_extend.c **** #define SHIFT ((bitshift_t)(pow(WORD_SIZE,1)+pow(WORD_SIZE,2)+pow(WORD_SIZE,3)+pow(WORD_SIZE,4)+pow
  37:sieve_extend.c **** #define SHIFT_VECTOR (SHIFT+2);
  38:sieve_extend.c **** 
  39:sieve_extend.c **** typedef uint64_t bitvector_t __attribute__ ((vector_size(sizeof(bitword_t)*8)));
  40:sieve_extend.c **** 
  41:sieve_extend.c **** // globals for tuning
  42:sieve_extend.c **** counter_t global_SMALLSTEP_FASTER = 16;
  43:sieve_extend.c **** counter_t global_MEDIUMSTEP_FASTER = WORD_SIZE;
  44:sieve_extend.c **** 
  45:sieve_extend.c **** #define SAFE_SHIFTBIT (bitshift_t)1U
  46:sieve_extend.c **** #define SAFE_ZERO  (bitshift_t)0U
  47:sieve_extend.c **** #define BITWORD_SHIFTBIT (bitword_t)1U
  48:sieve_extend.c **** #define SMALLSTEP_FASTER ((counter_t)global_SMALLSTEP_FASTER)
  49:sieve_extend.c **** #define MEDIUMSTEP_FASTER ((counter_t)global_MEDIUMSTEP_FASTER)
  50:sieve_extend.c **** #define wordindex(index) (((counter_t)index) >> (bitshift_t)SHIFT)
  51:sieve_extend.c **** #define vectorindex(index) (((counter_t)index) >> (bitshift_t)SHIFT_VECTOR)
  52:sieve_extend.c **** // modern processors do a & over the shiftssize, so we only have to do that ourselve when using the
  53:sieve_extend.c **** #define bitindex(index) ((bitshift_t)(index))
  54:sieve_extend.c **** // #define bitindex(index) ((bitshift_t)(index)&((bitword_t)(WORD_SIZE-1)))
  55:sieve_extend.c **** #define bitindex_calc(index) ((bitshift_t)(index)&((bitshift_t)(WORD_SIZE_bitshift-SAFE_SHIFTBIT)))
  56:sieve_extend.c **** #define  markmask(index) (BITWORD_SHIFTBIT << bitindex(index))
  57:sieve_extend.c **** #define  markmask_calc(index) (SAFE_SHIFTBIT << bitindex_calc(index))
  58:sieve_extend.c **** // #define chopmask(index) ((SAFE_SHIFTBIT << bitindex(index))-SAFE_SHIFTBIT)
  59:sieve_extend.c **** // #define chopmask2(index) (((bitword_t)2U << bitindex(index))-SAFE_SHIFTBIT)
  60:sieve_extend.c **** #define chopmask(index) (~SAFE_ZERO >> (WORD_SIZE-1-bitindex_calc(index)))
  61:sieve_extend.c **** #define keepmask(index) (~SAFE_ZERO << (bitindex_calc(index)))
  62:sieve_extend.c **** #define chopmask2(index) chopmask(index)
  63:sieve_extend.c **** #define real(bit) (bit*2+1)
  64:sieve_extend.c **** 
  65:sieve_extend.c **** #define min(a,b) ((a<b) ? a : b)
  66:sieve_extend.c **** #define uintsafeminus(a,b) ((a>b)?(a-b):0)
  67:sieve_extend.c **** 
  68:sieve_extend.c **** #define likely(x)       (__builtin_expect((x),1))
  69:sieve_extend.c **** #define unlikely(x)     (__builtin_expect((x),0))
  70:sieve_extend.c **** 
  71:sieve_extend.c **** counter_t debug_hitpoint[5] = { 0,0,0,0,0};
  72:sieve_extend.c **** 
  73:sieve_extend.c **** struct sieve_state {
  74:sieve_extend.c ****     bitword_t* bitarray;
  75:sieve_extend.c ****     counter_t  bits;
  76:sieve_extend.c ****     counter_t  size;
  77:sieve_extend.c **** };
  78:sieve_extend.c **** 
  79:sieve_extend.c **** #include "debugtools.h"
  80:sieve_extend.c **** 
  81:sieve_extend.c **** // use cache lines as much as possible - alignment might be key
  82:sieve_extend.c **** #define ceiling(x,y) (((x) + (y) - 1) / (y)) // Return the smallest multiple N of y such that:  x <
  83:sieve_extend.c **** static struct sieve_state *create_sieve(counter_t maxints) {
GAS LISTING /tmp/cctyCFAS.s 			page 4


  84:sieve_extend.c ****     struct sieve_state *sieve = aligned_alloc(8, sizeof(struct sieve_state));
  85:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)maxints/2), anticiped_cache_line_bytesize*8) * anticiped_ca
  86:sieve_extend.c **** 
  87:sieve_extend.c ****     sieve->bitarray = aligned_alloc((size_t)anticiped_cache_line_bytesize, (size_t)memSize );
  88:sieve_extend.c ****     sieve->bits     = maxints >> 1;
  89:sieve_extend.c ****     sieve->size     = maxints;
  90:sieve_extend.c **** 
  91:sieve_extend.c ****     // moved clearing the sieve with 0 to the sieve_block_extend
  92:sieve_extend.c ****     // it gave weird malloc problems at this point
  93:sieve_extend.c ****     return sieve;
  94:sieve_extend.c **** }
  95:sieve_extend.c **** 
  96:sieve_extend.c **** static void delete_sieve(struct sieve_state *sieve) {
  97:sieve_extend.c ****     free(sieve->bitarray);
  98:sieve_extend.c ****     free(sieve);
  99:sieve_extend.c **** }
 100:sieve_extend.c **** 
 101:sieve_extend.c **** // not much performance gain at smaller sieves, but its's nice to have an implementation
 102:sieve_extend.c **** static inline counter_t searchBitFalse_longRange(bitword_t* bitarray, register counter_t index) {
 103:sieve_extend.c ****     // #pragma ivdep
 104:sieve_extend.c ****     // while (bitarray[wordindex(index)] & markmask(index)) index++;
 105:sieve_extend.c ****     // return index;
 106:sieve_extend.c ****     
 107:sieve_extend.c ****    register counter_t index_word = wordindex(index);
 108:sieve_extend.c ****    bitshift_t index_bit  = bitindex_calc(index);
 109:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 110:sieve_extend.c ****    index += distance;
 111:sieve_extend.c ****    distance += index_bit;
 112:sieve_extend.c **** 
 113:sieve_extend.c ****    while (distance == WORD_SIZE_bitshift) { // to prevent a bug from optimzer
 114:sieve_extend.c ****        index_word++;
 115:sieve_extend.c ****        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 116:sieve_extend.c ****        index += distance;
 117:sieve_extend.c ****    }
 118:sieve_extend.c **** 
 119:sieve_extend.c ****    return index;
 120:sieve_extend.c **** }
 121:sieve_extend.c **** 
 122:sieve_extend.c **** // not much performance gain at smaller sieves, but its's nice to have an implementation
 123:sieve_extend.c **** static inline counter_t searchBitFalse(bitword_t* bitarray, register counter_t index) {
 124:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 125:sieve_extend.c ****     return index;
 126:sieve_extend.c **** }
 127:sieve_extend.c **** 
 128:sieve_extend.c **** static void inline applyMask_fast(bitword_t* __restrict bitarray, const counter_t step, const count
 129:sieve_extend.c ****    const counter_t range_stop_word = wordindex(range_stop);
 130:sieve_extend.c ****    register bitword_t* __restrict index_ptr = &bitarray[index_word];
 131:sieve_extend.c ****    bitword_t* __restrict fast_loop_ptr = &bitarray[((range_stop_word>step*5) ? (range_stop_word - s
 132:sieve_extend.c ****    bitword_t* __restrict range_stop_ptr = &bitarray[(range_stop_word)];//>step_4) ? (range_stop_wor
 133:sieve_extend.c **** 
 134:sieve_extend.c ****     counter_t size_word = fast_loop_ptr - index_ptr;
 135:sieve_extend.c **** 
 136:sieve_extend.c **** //    #pragma ivdep
 137:sieve_extend.c ****    for (counter_t i=0; i < size_word; i++) {
 138:sieve_extend.c ****        *(index_ptr+i*step) |= mask;
 139:sieve_extend.c ****    }
 140:sieve_extend.c ****    index_ptr += size_word * step;
GAS LISTING /tmp/cctyCFAS.s 			page 5


 141:sieve_extend.c **** 
 142:sieve_extend.c ****    while ( index_ptr < range_stop_ptr) {
 143:sieve_extend.c ****        *index_ptr |= mask;
 144:sieve_extend.c ****        index_ptr+=step;
 145:sieve_extend.c ****    }
 146:sieve_extend.c **** 
 147:sieve_extend.c ****    if (index_ptr == range_stop_ptr) {
 148:sieve_extend.c ****       *range_stop_ptr |= (mask & chopmask2(range_stop));
 149:sieve_extend.c ****    }
 150:sieve_extend.c **** 
 151:sieve_extend.c **** // #endif
 152:sieve_extend.c **** }
 153:sieve_extend.c **** 
 154:sieve_extend.c **** static void inline applyMask(bitword_t* __restrict bitarray, const counter_t step, const counter_t 
 155:sieve_extend.c **** // #if __APPLE__
 156:sieve_extend.c ****     // register const counter_t step_2 = step * 2;
 157:sieve_extend.c ****     // register const counter_t step_3 = step * 3;
 158:sieve_extend.c ****     // register const counter_t step_4 = step * 4;
 159:sieve_extend.c ****     // register const counter_t range_stop_word = wordindex(range_stop);
 160:sieve_extend.c ****     // const counter_t loop_stop_word = (range_stop_word > step_3) ? (range_stop_word - step_3) : (
 161:sieve_extend.c **** 
 162:sieve_extend.c ****     // #pragma ivdep
 163:sieve_extend.c ****     // for (;index_word < loop_stop_word;  index_word += step_4) {
 164:sieve_extend.c ****     //     bitarray[index_word         ] |= mask;
 165:sieve_extend.c ****     //     bitarray[index_word + step  ] |= mask;
 166:sieve_extend.c ****     //     bitarray[index_word + step_2] |= mask;
 167:sieve_extend.c ****     //     bitarray[index_word + step_3] |= mask;
 168:sieve_extend.c ****     // }
 169:sieve_extend.c ****  
 170:sieve_extend.c ****     // #pragma ivdep
 171:sieve_extend.c ****     // while (index_word < range_stop_word) {
 172:sieve_extend.c ****     //     bitarray[index_word] |= mask;
 173:sieve_extend.c ****     //     index_word += step;
 174:sieve_extend.c ****     // }
 175:sieve_extend.c **** 
 176:sieve_extend.c ****     // if (index_word == wordindex(range_stop)) {
 177:sieve_extend.c ****     //     bitarray[wordindex(range_stop)] |= (mask & chopmask2(range_stop));
 178:sieve_extend.c ****     // }
 179:sieve_extend.c **** // #endif
 180:sieve_extend.c **** //    ALTERNATIVE using pointers is faster in gcc
 181:sieve_extend.c **** // #if __linux__
 182:sieve_extend.c **** //    const counter_t range_stop_word = wordindex(range_stop);
 183:sieve_extend.c **** //    register bitword_t* __restrict index_ptr      = &bitarray[index_word];
 184:sieve_extend.c **** //    register bitword_t* __restrict fast_loop_ptr  = &bitarray[((range_stop_word>step*5) ? (range_
 185:sieve_extend.c **** 
 186:sieve_extend.c ****    const counter_t range_stop_word = wordindex(range_stop);
 187:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 188:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  = &bitarray[((range_stop_word>step*5) ? (range_sto
 189:sieve_extend.c **** 
 190:sieve_extend.c ****    #pragma unroll
 191:sieve_extend.c ****    #pragma ivdep
 192:sieve_extend.c ****    while likely(index_ptr < fast_loop_ptr) {
 193:sieve_extend.c ****        *index_ptr |= mask;
 194:sieve_extend.c ****        index_ptr+=step;
 195:sieve_extend.c ****        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 197:sieve_extend.c ****        *index_ptr |= mask;
GAS LISTING /tmp/cctyCFAS.s 			page 6


 198:sieve_extend.c ****        index_ptr+=step;
 199:sieve_extend.c ****        *index_ptr |= mask;
 200:sieve_extend.c ****        index_ptr+=step;
 201:sieve_extend.c ****        *index_ptr |= mask;
 202:sieve_extend.c ****        index_ptr+=step;
 203:sieve_extend.c ****    }
 204:sieve_extend.c **** 
 205:sieve_extend.c ****    const register bitword_t* __restrict range_stop_ptr = &bitarray[(range_stop_word)];
 206:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 207:sieve_extend.c ****        *index_ptr |= mask;
 208:sieve_extend.c ****        index_ptr+=step;
 209:sieve_extend.c ****    }
 210:sieve_extend.c **** 
 211:sieve_extend.c ****    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range_stop_ptr, depending o
 212:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 213:sieve_extend.c ****    }
 214:sieve_extend.c **** 
 215:sieve_extend.c **** //    const counter_t range_stop_word = wordindex(range_stop);
 216:sieve_extend.c **** //    bitword_t* __restrict index_ptr = &bitarray[index_word];
 217:sieve_extend.c **** //    bitword_t* __restrict fast_loop_ptr = &bitarray[((range_stop_word>step*4) ? (range_stop_word 
 218:sieve_extend.c **** //    bitword_t* __restrict range_stop_ptr = &bitarray[(range_stop_word)];//>step_4) ? (range_stop_
 219:sieve_extend.c **** //    const int loop_iterations = ((range_stop_word - index_word) / (step*4));
 220:sieve_extend.c **** 
 221:sieve_extend.c **** //      debug printf("..%ju loop iterations for step %ju range in words (%ju - %ju)\n",(uintmax_t)l
 222:sieve_extend.c **** 
 223:sieve_extend.c **** //     #pragma unroll 1
 224:sieve_extend.c **** //    #pragma ivdep
 225:sieve_extend.c **** //    for ( int i=0; i < loop_iterations; i++) {
 226:sieve_extend.c **** //        *(index_ptr) |= mask;
 227:sieve_extend.c **** //        *(index_ptr+step) |= mask;
 228:sieve_extend.c **** //        *(index_ptr+2*step) |= mask;
 229:sieve_extend.c **** //        *(index_ptr+3*step) |= mask;
 230:sieve_extend.c **** //        index_ptr += 4*step;
 231:sieve_extend.c **** //    }
 232:sieve_extend.c **** 
 233:sieve_extend.c **** //    while ( index_ptr < range_stop_ptr) {
 234:sieve_extend.c **** //        *index_ptr |= mask;
 235:sieve_extend.c **** //        index_ptr+=step;
 236:sieve_extend.c **** //    }
 237:sieve_extend.c **** 
 238:sieve_extend.c **** //    if (index_ptr == range_stop_ptr) {
 239:sieve_extend.c **** //       *range_stop_ptr |= (mask & chopmask(range_stop));
 240:sieve_extend.c **** //    }
 241:sieve_extend.c **** // #endif
 242:sieve_extend.c **** }
 243:sieve_extend.c **** 
 244:sieve_extend.c **** // set bits by creating a pattern and then extending it to word and range size
 245:sieve_extend.c **** static void inline setBitsTrue_smallStep(bitword_t* bitarray, const counter_t range_start, const bi
 246:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using smallstep (%ju occurances)
 247:sieve_extend.c **** 
 248:sieve_extend.c ****     // build the pattern in a word
 249:sieve_extend.c **** 	register bitword_t pattern = SAFE_SHIFTBIT;
 250:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize += patternsize) patte
 251:sieve_extend.c **** 
 252:sieve_extend.c ****     // initialize loop variables and stop if this is it
 253:sieve_extend.c ****     const counter_t range_stop_word = wordindex(range_stop);
 254:sieve_extend.c ****     register counter_t copy_word = wordindex(range_start);
GAS LISTING /tmp/cctyCFAS.s 			page 7


 255:sieve_extend.c ****      if (copy_word == range_stop_word) { // shortcut
 256:sieve_extend.c ****        bitarray[copy_word] |= ((pattern << bitindex(range_start)) & chopmask(range_stop));
 257:sieve_extend.c ****        return;
 258:sieve_extend.c ****     }
 259:sieve_extend.c ****     
 260:sieve_extend.c ****     bitarray[copy_word++] |= (pattern << bitindex(range_start));
 261:sieve_extend.c **** 
 262:sieve_extend.c ****     // from now on, we are before range_stop_word
 263:sieve_extend.c ****     // first word is special, because it should not set bits before the range_start_bit
 264:sieve_extend.c ****     pattern = (pattern << (bitindex_calc(range_start) % step)); // correct for inital offset  
 265:sieve_extend.c ****     register bitshift_t pattern_shift = WORD_SIZE_bitshift % step;
 266:sieve_extend.c ****     register bitshift_t pattern_shift_flipped = WORD_SIZE_bitshift - pattern_shift - pattern_shift;
 267:sieve_extend.c ****     // copy_word++;
 268:sieve_extend.c **** 
 269:sieve_extend.c ****     #pragma ivdep
 270:sieve_extend.c ****     for (;copy_word < range_stop_word; copy_word++) {
 271:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 272:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 273:sieve_extend.c ****     } 
 274:sieve_extend.c **** 
 275:sieve_extend.c ****     pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 276:sieve_extend.c ****     bitarray[copy_word] |= pattern & chopmask(range_stop);
 277:sieve_extend.c **** }
 278:sieve_extend.c **** 
 279:sieve_extend.c **** 
 280:sieve_extend.c **** // Medium steps could be within the same word (e.g. less than 64 bits apart).
 281:sieve_extend.c **** // By joining the masks and then writing to memory, we might save some time.
 282:sieve_extend.c **** // This is especially true for small steps over long ranges
 283:sieve_extend.c **** // but it needs tuning, because there is some overhead of checking if the next step is in the same 
 284:sieve_extend.c **** static void inline setBitsTrue_mediumStep(bitword_t* bitarray, const counter_t range_start, const c
 285:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 286:sieve_extend.c **** 
 287:sieve_extend.c ****     if (range_stop_unique > range_stop) { // the range will not repeat itself; no need to try to re
 288:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-unique (%ju
 289:sieve_extend.c **** 
 290:sieve_extend.c ****         #pragma ivdep
 291:sieve_extend.c ****         for (register counter_t index = range_start; index <= range_stop;) {
 292:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 293:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 294:sieve_extend.c ****             for (; index_word == wordindex(index);  index += step) 
 295:sieve_extend.c ****                 mask |= markmask(index);
 296:sieve_extend.c ****             bitarray[index_word] |= mask;
 297:sieve_extend.c ****         }
 298:sieve_extend.c ****     }
 299:sieve_extend.c ****     else { // this mask will reoccur at a interval of step words -> fill mask and reapply as a inte
 300:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-repeat (%ju
 301:sieve_extend.c ****         
 302:sieve_extend.c ****         #pragma ivdep
 303:sieve_extend.c ****         for (register counter_t index = range_start; index <= range_stop_unique;) {
 304:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 305:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 306:sieve_extend.c ****             do {
 307:sieve_extend.c ****                 mask |= markmask(index);
 308:sieve_extend.c ****                 index += step;
 309:sieve_extend.c ****             } while (index_word == wordindex(index));
 310:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 311:sieve_extend.c ****         }
GAS LISTING /tmp/cctyCFAS.s 			page 8


 312:sieve_extend.c ****     }
 313:sieve_extend.c **** }
 314:sieve_extend.c **** 
 315:sieve_extend.c **** // small ranges (< WORD_SIZE * step) mean the mask is unique
 316:sieve_extend.c **** static inline void setBitsTrue_smallRange(bitword_t* bitarray, const counter_t range_start, const c
 317:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using smallrange (%ju occurances
 318:sieve_extend.c ****     
 319:sieve_extend.c ****     #pragma unroll
 320:sieve_extend.c ****     #pragma ivdep
 321:sieve_extend.c ****     for (register counter_t index = range_start; index <= range_stop; index += step) {
 322:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 323:sieve_extend.c ****     }
 324:sieve_extend.c **** }
 325:sieve_extend.c **** 
 326:sieve_extend.c **** // small ranges (< WORD_SIZE * step) mean the mask is unique
 327:sieve_extend.c **** static void setBitsTrue_race(bitword_t* bitarray, counter_t index1, counter_t index2, const counter
 328:sieve_extend.c ****     debug printf("Setting bits step %ju and %ju in %ju bit range (%ju-%ju) using race (%ju occuranc
 329:sieve_extend.c **** 
 330:sieve_extend.c ****     counter_t index1_word = wordindex(index1);
 331:sieve_extend.c ****     counter_t index2_word = wordindex(index2);
 332:sieve_extend.c ****     
 333:sieve_extend.c ****     while (1) {
 334:sieve_extend.c ****         if (index1_word == index2_word) {
 335:sieve_extend.c ****             bitword_t mask = SAFE_ZERO;
 336:sieve_extend.c ****             counter_t index_word = index1_word;
 337:sieve_extend.c ****             do {
 338:sieve_extend.c ****                 mask |= markmask(index1);
 339:sieve_extend.c ****                 index1 += step1;
 340:sieve_extend.c ****                 index1_word = wordindex(index1);
 341:sieve_extend.c ****             } while (index1_word == index_word);
 342:sieve_extend.c ****             do {
 343:sieve_extend.c ****                 mask |= markmask(index2);
 344:sieve_extend.c ****                 index2 += step2;
 345:sieve_extend.c ****                 index2_word = wordindex(index2);
 346:sieve_extend.c ****             } while (index2_word == index_word);
 347:sieve_extend.c ****             bitarray[index_word] |= mask;
 348:sieve_extend.c ****         }
 349:sieve_extend.c **** 
 350:sieve_extend.c ****         // because step is larger, index2 is the most likely to get out of bounds first
 351:sieve_extend.c ****         if (index2 > range_stop) {
 352:sieve_extend.c ****             while (index1 <= range_stop) {
 353:sieve_extend.c ****                 bitarray[wordindex(index1)] |= markmask(index1);
 354:sieve_extend.c ****                 index1 += step1;
 355:sieve_extend.c ****             }
 356:sieve_extend.c ****             return;
 357:sieve_extend.c ****         }
 358:sieve_extend.c **** 
 359:sieve_extend.c ****         if (index1 > range_stop) {
 360:sieve_extend.c ****             while (index2 <= range_stop) {
 361:sieve_extend.c ****                 bitarray[wordindex(index2)] |= markmask(index2);
 362:sieve_extend.c ****                 index2 += step2;
 363:sieve_extend.c ****             }
 364:sieve_extend.c ****             return;
 365:sieve_extend.c ****         }
 366:sieve_extend.c **** 
 367:sieve_extend.c ****         while (index1_word < index2_word) {
 368:sieve_extend.c ****             bitarray[index1_word] |= markmask(index1);
GAS LISTING /tmp/cctyCFAS.s 			page 9


 369:sieve_extend.c ****             index1 += step1;
 370:sieve_extend.c ****             index1_word = wordindex(index1);
 371:sieve_extend.c ****         }
 372:sieve_extend.c ****         
 373:sieve_extend.c ****         while (index2_word < index1_word){
 374:sieve_extend.c ****             bitarray[index2_word] |= markmask(index2);
 375:sieve_extend.c ****             index2 += step2;
 376:sieve_extend.c ****             index2_word = wordindex(index2);
 377:sieve_extend.c ****         }
 378:sieve_extend.c **** 
 379:sieve_extend.c ****     }
 380:sieve_extend.c **** }
 381:sieve_extend.c **** 
 382:sieve_extend.c **** // Large ranges (> WORD_SIZE * step) mean the same mask can be reused
 383:sieve_extend.c **** static void setBitsTrue_largeRange(bitword_t* __restrict bitarray, const counter_t range_start, con
 384:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange (%ju occurances
 385:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 386:sieve_extend.c **** 
 387:sieve_extend.c ****     #pragma unroll
 388:sieve_extend.c ****     #pragma ivdep
 389:sieve_extend.c ****     for (register counter_t index = range_start; index <= range_stop_unique; index += step) {
 390:sieve_extend.c ****         register bitword_t mask = markmask(index);
 391:sieve_extend.c ****         applyMask(bitarray, step, range_stop, mask, wordindex(index));
 392:sieve_extend.c ****     }
 393:sieve_extend.c **** }
 394:sieve_extend.c **** 
 395:sieve_extend.c **** static void setBitsTrue_largeRange_vector(bitword_t* bitarray_word, const counter_t range_start, co
 396:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 397:sieve_extend.c **** 
 398:sieve_extend.c ****     counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 399:sieve_extend.c ****     // for (counter_t index = range_start; index <= range_stop_unique; index += step) {
 400:sieve_extend.c ****     //     bitword_t mask = markmask(index);
 401:sieve_extend.c ****     //     applyMask(bitarray, step, range_stop, mask, wordindex(index));
 402:sieve_extend.c ****     // }
 403:sieve_extend.c ****     // return;
 404:sieve_extend.c **** 
 405:sieve_extend.c ****     debug { counter_t repeats = (range_stop - range_start)/(WORD_SIZE_counter * step); if ( repeats
 406:sieve_extend.c ****     bitvector_t mask = { SAFE_ZERO,SAFE_ZERO,SAFE_ZERO,SAFE_ZERO };
 407:sieve_extend.c ****     bitword_t* bitarray = bitarray_word;
 408:sieve_extend.c ****     bitvector_t* bitarray_vector = (bitvector_t*)bitarray_word;
 409:sieve_extend.c **** 
 410:sieve_extend.c ****     if (step < WORD_SIZE_counter*4) {
 411:sieve_extend.c ****         for (counter_t index = range_start; index <= range_stop_unique; ) {
 412:sieve_extend.c ****             // debug printf("..Processing index %ju for step %ju (stop at %ju)\n",index, step, rang
 413:sieve_extend.c ****             counter_t start_word = wordindex(index);
 414:sieve_extend.c ****             register counter_t index_word = start_word;
 415:sieve_extend.c ****             int word = 0;
 416:sieve_extend.c ****             mask[0] = SAFE_ZERO;
 417:sieve_extend.c ****             mask[1] = SAFE_ZERO;
 418:sieve_extend.c ****             mask[2] = SAFE_ZERO;
 419:sieve_extend.c ****             mask[3] = SAFE_ZERO;
 420:sieve_extend.c ****             do {
 421:sieve_extend.c ****                 mask[word] |= markmask(index);
 422:sieve_extend.c ****                 index += step;
 423:sieve_extend.c ****                 index_word = wordindex(index);
 424:sieve_extend.c ****                 word = index_word - start_word;
 425:sieve_extend.c ****             } while (word < 4 );
GAS LISTING /tmp/cctyCFAS.s 			page 10


 426:sieve_extend.c **** 
 427:sieve_extend.c ****             counter_t range_stop_word = wordindex(range_stop);
 428:sieve_extend.c ****             index_word = start_word;
 429:sieve_extend.c **** 
 430:sieve_extend.c ****             #pragma ivdep
 431:sieve_extend.c ****             while ((index_word)+4 < range_stop_word) {
 432:sieve_extend.c ****                 // debug printf("..handling word %ju (range_stop %ju)\n",index_word,range_stop_word
 433:sieve_extend.c ****                 bitarray[index_word  ] |= mask[0];
 434:sieve_extend.c ****                 bitarray[index_word+1] |= mask[1];
 435:sieve_extend.c ****                 bitarray[index_word+2] |= mask[2];
 436:sieve_extend.c ****                 bitarray[index_word+3] |= mask[3];
 437:sieve_extend.c ****                 index_word += step;
 438:sieve_extend.c ****             }
 439:sieve_extend.c ****             if (index_word <= range_stop_word) { bitarray[index_word] |= mask[0]; index_word++; }
 440:sieve_extend.c ****             if (index_word <= range_stop_word) { bitarray[index_word] |= mask[1]; index_word++; }
 441:sieve_extend.c ****             if (index_word <= range_stop_word) { bitarray[index_word] |= mask[2]; index_word++; }
 442:sieve_extend.c ****             if (index_word <= range_stop_word) { bitarray[index_word] |= mask[3]; index_word++; }
 443:sieve_extend.c ****         }
 444:sieve_extend.c ****     }
 445:sieve_extend.c **** }
 446:sieve_extend.c **** 
 447:sieve_extend.c **** static void setBitsTrue_largeRange_mmx(bitword_t* __restrict bitarray, const counter_t range_start,
 448:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange (%ju occurances
 449:sieve_extend.c **** 
 450:sieve_extend.c ****     counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 451:sieve_extend.c **** 
 452:sieve_extend.c ****     debug { counter_t repeats = (range_stop - range_start)/(WORD_SIZE_counter * step); if ( repeats
 453:sieve_extend.c ****     bitword_t mask[4] = { SAFE_ZERO,SAFE_ZERO,SAFE_ZERO,SAFE_ZERO };
 454:sieve_extend.c **** 
 455:sieve_extend.c ****     if (step < WORD_SIZE_counter*4) {
 456:sieve_extend.c ****         for (counter_t index = range_start; index <= range_stop_unique; ) {
 457:sieve_extend.c ****             // debug printf("..Processing index %ju for step %ju (stop at %ju)\n",index, step, rang
 458:sieve_extend.c ****             counter_t start_word = wordindex(index);
 459:sieve_extend.c ****             register counter_t index_word = start_word;
 460:sieve_extend.c ****             int word = 0;
 461:sieve_extend.c ****             mask[0] = SAFE_ZERO;
 462:sieve_extend.c ****             mask[1] = SAFE_ZERO;
 463:sieve_extend.c ****             mask[2] = SAFE_ZERO;
 464:sieve_extend.c ****             mask[3] = SAFE_ZERO;
 465:sieve_extend.c ****             do {
 466:sieve_extend.c ****                 mask[word] |= markmask(index);
 467:sieve_extend.c ****                 index += step;
 468:sieve_extend.c ****                 index_word = wordindex(index);
 469:sieve_extend.c ****                 word = index_word - start_word;
 470:sieve_extend.c ****             } while (word < 4 );
 471:sieve_extend.c **** 
 472:sieve_extend.c ****             counter_t range_stop_word = wordindex(range_stop);
 473:sieve_extend.c ****             index_word = start_word;
 474:sieve_extend.c **** 
 475:sieve_extend.c ****             #pragma ivdep
 476:sieve_extend.c ****             while ((index_word)+4 < range_stop_word) {
 477:sieve_extend.c ****                 // debug printf("..handling word %ju (range_stop %ju)\n",index_word,range_stop_word
 478:sieve_extend.c ****                 bitarray[index_word  ] |= mask[0];
 479:sieve_extend.c ****                 bitarray[index_word+1] |= mask[1];
 480:sieve_extend.c ****                 bitarray[index_word+2] |= mask[2];
 481:sieve_extend.c ****                 bitarray[index_word+3] |= mask[3];
 482:sieve_extend.c ****                 index_word += step;
GAS LISTING /tmp/cctyCFAS.s 			page 11


 483:sieve_extend.c ****             }
 484:sieve_extend.c ****             if (index_word <= range_stop_word) { bitarray[index_word] |= mask[0]; index_word++; }
 485:sieve_extend.c ****             if (index_word <= range_stop_word) { bitarray[index_word] |= mask[1]; index_word++; }
 486:sieve_extend.c ****             if (index_word <= range_stop_word) { bitarray[index_word] |= mask[2]; index_word++; }
 487:sieve_extend.c ****             if (index_word <= range_stop_word) { bitarray[index_word] |= mask[3]; index_word++; }
 488:sieve_extend.c ****         }
 489:sieve_extend.c ****     }
 490:sieve_extend.c ****     else {
 491:sieve_extend.c ****         for (counter_t index = range_start; index <= range_stop_unique; index += step) {
 492:sieve_extend.c ****             bitword_t mask = markmask(index);
 493:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, wordindex(index));
 494:sieve_extend.c ****         }
 495:sieve_extend.c ****     } 
 496:sieve_extend.c **** }
 497:sieve_extend.c **** 
 498:sieve_extend.c **** static void extendSieve_smallSize(bitword_t* bitarray, const counter_t source_start, const counter_
  90              		.loc 1 498 142 view -0
  91              		.cfi_startproc
 499:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
  92              		.loc 1 499 5 view .LVU1
 500:sieve_extend.c ****     // debug { printf("...At start. "); dump_bitarray(bitarray, 4); }
 501:sieve_extend.c **** 
 502:sieve_extend.c ****     counter_t source_word = wordindex(source_start);
  93              		.loc 1 502 5 view .LVU2
 503:sieve_extend.c ****     bitword_t pattern = ((bitarray[source_word] >> bitindex(source_start)) | (bitarray[source_word+
  94              		.loc 1 503 5 view .LVU3
  95              	# sieve_extend.c:498: static void extendSieve_smallSize(bitword_t* bitarray, const counter_t source
 498:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
  96              		.loc 1 498 142 is_stmt 0 view .LVU4
  97 0000 4156     		push	r14	#
  98              		.cfi_def_cfa_offset 16
  99              		.cfi_offset 14, -16
 100              	# sieve_extend.c:502:     counter_t source_word = wordindex(source_start);
 502:sieve_extend.c ****     bitword_t pattern = ((bitarray[source_word] >> bitindex(source_start)) | (bitarray[source_word+
 101              		.loc 1 502 15 view .LVU5
 102 0002 4889F0   		mov	rax, rsi	# source_word, source_start
 103              	# sieve_extend.c:498: static void extendSieve_smallSize(bitword_t* bitarray, const counter_t source
 498:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 104              		.loc 1 498 142 view .LVU6
 105 0005 4989D2   		mov	r10, rdx	# size, tmp279
 106 0008 4155     		push	r13	#
 107              		.cfi_def_cfa_offset 24
 108              		.cfi_offset 13, -24
 109              	# sieve_extend.c:502:     counter_t source_word = wordindex(source_start);
 502:sieve_extend.c ****     bitword_t pattern = ((bitarray[source_word] >> bitindex(source_start)) | (bitarray[source_word+
 110              		.loc 1 502 15 view .LVU7
 111 000a 48C1E806 		shr	rax, 6	# source_word,
 112              	.LVL1:
 113              	# sieve_extend.c:503:     bitword_t pattern = ((bitarray[source_word] >> bitindex(source_start)) | 
 114              		.loc 1 503 125 view .LVU8
 115 000e 89F2     		mov	edx, esi	# tmp142, source_start
 116              	.LVL2:
 117              	# sieve_extend.c:498: static void extendSieve_smallSize(bitword_t* bitarray, const counter_t source
 498:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 118              		.loc 1 498 142 view .LVU9
 119 0010 4154     		push	r12	#
 120              		.cfi_def_cfa_offset 32
GAS LISTING /tmp/cctyCFAS.s 			page 12


 121              		.cfi_offset 12, -32
 122              	# sieve_extend.c:503:     bitword_t pattern = ((bitarray[source_word] >> bitindex(source_start)) | 
 123              		.loc 1 503 125 view .LVU10
 124 0012 83E23F   		and	edx, 63	# tmp142,
 125              	# sieve_extend.c:503:     bitword_t pattern = ((bitarray[source_word] >> bitindex(source_start)) | 
 126              		.loc 1 503 124 view .LVU11
 127 0015 41B84000 		mov	r8d, 64	# tmp144,
 127      0000
 128              	# sieve_extend.c:498: static void extendSieve_smallSize(bitword_t* bitarray, const counter_t source
 498:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 129              		.loc 1 498 142 view .LVU12
 130 001b 55       		push	rbp	#
 131              		.cfi_def_cfa_offset 40
 132              		.cfi_offset 6, -40
 133              	# sieve_extend.c:503:     bitword_t pattern = ((bitarray[source_word] >> bitindex(source_start)) | 
 134              		.loc 1 503 124 view .LVU13
 135 001c 4129D0   		sub	r8d, edx	# tmp143, tmp142
 136              	# sieve_extend.c:503:     bitword_t pattern = ((bitarray[source_word] >> bitindex(source_start)) | 
 137              		.loc 1 503 158 view .LVU14
 138 001f 4589D1   		mov	r9d, r10d	# tmp150, size
 139              	# sieve_extend.c:498: static void extendSieve_smallSize(bitword_t* bitarray, const counter_t source
 498:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 140              		.loc 1 498 142 view .LVU15
 141 0022 53       		push	rbx	#
 142              		.cfi_def_cfa_offset 48
 143              		.cfi_offset 3, -48
 144              	# sieve_extend.c:503:     bitword_t pattern = ((bitarray[source_word] >> bitindex(source_start)) | 
 145              		.loc 1 503 49 view .LVU16
 146 0023 488B1CC7 		mov	rbx, QWORD PTR [rdi+rax*8]	# *_5, *_5
 147              	# sieve_extend.c:503:     bitword_t pattern = ((bitarray[source_word] >> bitindex(source_start)) | 
 148              		.loc 1 503 158 view .LVU17
 149 0027 41F7D1   		not	r9d	# tmp150
 150 002a 49C7C3FF 		mov	r11, -1	# tmp153,
 150      FFFFFF
 151              	# sieve_extend.c:503:     bitword_t pattern = ((bitarray[source_word] >> bitindex(source_start)) | 
 152              		.loc 1 503 103 view .LVU18
 153 0031 C462B9F7 		shlx	r8, QWORD PTR 8[rdi+rax*8], r8	# tmp145, *_11, tmp143
 153      44C708
 154              	# sieve_extend.c:503:     bitword_t pattern = ((bitarray[source_word] >> bitindex(source_start)) | 
 155              		.loc 1 503 49 view .LVU19
 156 0038 C4E2CBF7 		shrx	rbp, rbx, rsi	# tmp147, *_5, source_start
 156      EB
 157              	# sieve_extend.c:503:     bitword_t pattern = ((bitarray[source_word] >> bitindex(source_start)) | 
 158              		.loc 1 503 76 view .LVU20
 159 003d 4909E8   		or	r8, rbp	# tmp149, tmp147
 160              	# sieve_extend.c:503:     bitword_t pattern = ((bitarray[source_word] >> bitindex(source_start)) | 
 161              		.loc 1 503 158 view .LVU21
 162 0040 C442B3F7 		shrx	r12, r11, r9	# tmp152, tmp153, tmp150
 162      E3
 163              	# sieve_extend.c:503:     bitword_t pattern = ((bitarray[source_word] >> bitindex(source_start)) | 
 164              		.loc 1 503 15 view .LVU22
 165 0045 4D21E0   		and	r8, r12	# pattern, tmp152
 166              	.LVL3:
 504:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 167              		.loc 1 504 5 is_stmt 1 view .LVU23
 168              	.LBB272:
 169              		.loc 1 504 10 view .LVU24
GAS LISTING /tmp/cctyCFAS.s 			page 13


 170              		.loc 1 504 54 view .LVU25
 171              	# sieve_extend.c:504:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 172              		.loc 1 504 5 is_stmt 0 view .LVU26
 173 0048 4983FA40 		cmp	r10, 64	# size,
 174 004c 0F87BE00 		ja	.L2	#,
 174      0000
 175 0052 4D89D5   		mov	r13, r10	# pattern_size, size
 176              	.LVL4:
 177              	.L3:
 178              		.loc 1 504 120 is_stmt 1 discriminator 3 view .LVU27
 179              	# sieve_extend.c:504:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 180              		.loc 1 504 103 is_stmt 0 discriminator 3 view .LVU28
 181 0055 4B8D442D 		lea	rax, [r13+r13]	# pattern_size,
 181      00
 182              	# sieve_extend.c:504:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 183              		.loc 1 504 140 discriminator 3 view .LVU29
 184 005a C44291F7 		shlx	r14, r8, r13	# _23, pattern, pattern_size
 184      F0
 185              	# sieve_extend.c:504:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 186              		.loc 1 504 128 discriminator 3 view .LVU30
 187 005f 4D09F0   		or	r8, r14	# pattern, _23
 188              	.LVL5:
 189              		.loc 1 504 90 is_stmt 1 discriminator 3 view .LVU31
 190              		.loc 1 504 54 discriminator 3 view .LVU32
 191              	# sieve_extend.c:504:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 192              		.loc 1 504 5 is_stmt 0 discriminator 3 view .LVU33
 193 0062 4883F840 		cmp	rax, 64	# pattern_size,
 194 0066 0F87A400 		ja	.L2	#,
 194      0000
 195              		.loc 1 504 120 is_stmt 1 view .LVU34
 196              	# sieve_extend.c:504:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 197              		.loc 1 504 103 is_stmt 0 view .LVU35
 198 006c 4A8D1CAD 		lea	rbx, 0[0+r13*4]	# pattern_size,
 198      00000000 
 199              	# sieve_extend.c:504:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 200              		.loc 1 504 140 view .LVU36
 201 0074 C4C2F9F7 		shlx	rdx, r8, rax	# _23, pattern, pattern_size
 201      D0
 202              	# sieve_extend.c:504:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 203              		.loc 1 504 128 view .LVU37
 204 0079 4909D0   		or	r8, rdx	# pattern, _23
 205              	.LVL6:
 206              		.loc 1 504 90 is_stmt 1 view .LVU38
 207              		.loc 1 504 54 view .LVU39
 208              	# sieve_extend.c:504:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 209              		.loc 1 504 5 is_stmt 0 view .LVU40
 210 007c 4883FB40 		cmp	rbx, 64	# pattern_size,
 211 0080 0F878A00 		ja	.L2	#,
 211      0000
 212              		.loc 1 504 120 is_stmt 1 view .LVU41
 213              	# sieve_extend.c:504:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 214              		.loc 1 504 103 is_stmt 0 view .LVU42
 215 0086 4E8D0CED 		lea	r9, 0[0+r13*8]	# pattern_size,
 215      00000000 
 216              	# sieve_extend.c:504:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 217              		.loc 1 504 140 view .LVU43
 218 008e C4C2E1F7 		shlx	rbp, r8, rbx	# _23, pattern, pattern_size
GAS LISTING /tmp/cctyCFAS.s 			page 14


 218      E8
 219              	# sieve_extend.c:504:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 220              		.loc 1 504 128 view .LVU44
 221 0093 4909E8   		or	r8, rbp	# pattern, _23
 222              	.LVL7:
 223              		.loc 1 504 90 is_stmt 1 view .LVU45
 224              		.loc 1 504 54 view .LVU46
 225              	# sieve_extend.c:504:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 226              		.loc 1 504 5 is_stmt 0 view .LVU47
 227 0096 4983F940 		cmp	r9, 64	# pattern_size,
 228 009a 7774     		ja	.L2	#,
 229              		.loc 1 504 120 is_stmt 1 view .LVU48
 230              	# sieve_extend.c:504:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 231              		.loc 1 504 103 is_stmt 0 view .LVU49
 232 009c 4D89EC   		mov	r12, r13	# pattern_size, pattern_size
 233 009f 49C1E404 		sal	r12, 4	# pattern_size,
 234              	# sieve_extend.c:504:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 235              		.loc 1 504 140 view .LVU50
 236 00a3 C442B1F7 		shlx	r11, r8, r9	# _23, pattern, pattern_size
 236      D8
 237              	# sieve_extend.c:504:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 238              		.loc 1 504 128 view .LVU51
 239 00a8 4D09D8   		or	r8, r11	# pattern, _23
 240              	.LVL8:
 241              		.loc 1 504 90 is_stmt 1 view .LVU52
 242              		.loc 1 504 54 view .LVU53
 243              	# sieve_extend.c:504:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 244              		.loc 1 504 5 is_stmt 0 view .LVU54
 245 00ab 4983FC40 		cmp	r12, 64	# pattern_size,
 246 00af 775F     		ja	.L2	#,
 247              		.loc 1 504 120 is_stmt 1 view .LVU55
 248              	# sieve_extend.c:504:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 249              		.loc 1 504 103 is_stmt 0 view .LVU56
 250 00b1 4C89E8   		mov	rax, r13	# pattern_size, pattern_size
 251 00b4 48C1E005 		sal	rax, 5	# pattern_size,
 252              	# sieve_extend.c:504:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 253              		.loc 1 504 140 view .LVU57
 254 00b8 C44299F7 		shlx	r14, r8, r12	# _23, pattern, pattern_size
 254      F0
 255              	# sieve_extend.c:504:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 256              		.loc 1 504 128 view .LVU58
 257 00bd 4D09F0   		or	r8, r14	# pattern, _23
 258              	.LVL9:
 259              		.loc 1 504 90 is_stmt 1 view .LVU59
 260              		.loc 1 504 54 view .LVU60
 261              	# sieve_extend.c:504:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 262              		.loc 1 504 5 is_stmt 0 view .LVU61
 263 00c0 4883F840 		cmp	rax, 64	# pattern_size,
 264 00c4 774A     		ja	.L2	#,
 265              		.loc 1 504 120 is_stmt 1 view .LVU62
 266              	# sieve_extend.c:504:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 267              		.loc 1 504 103 is_stmt 0 view .LVU63
 268 00c6 4C89EB   		mov	rbx, r13	# pattern_size, pattern_size
 269 00c9 48C1E306 		sal	rbx, 6	# pattern_size,
 270              	# sieve_extend.c:504:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 271              		.loc 1 504 140 view .LVU64
 272 00cd C4C2F9F7 		shlx	rdx, r8, rax	# _23, pattern, pattern_size
GAS LISTING /tmp/cctyCFAS.s 			page 15


 272      D0
 273              	# sieve_extend.c:504:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 274              		.loc 1 504 128 view .LVU65
 275 00d2 4909D0   		or	r8, rdx	# pattern, _23
 276              	.LVL10:
 277              		.loc 1 504 90 is_stmt 1 view .LVU66
 278              		.loc 1 504 54 view .LVU67
 279              	# sieve_extend.c:504:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 280              		.loc 1 504 5 is_stmt 0 view .LVU68
 281 00d5 4883FB40 		cmp	rbx, 64	# pattern_size,
 282 00d9 7735     		ja	.L2	#,
 283              		.loc 1 504 120 is_stmt 1 view .LVU69
 284              	# sieve_extend.c:504:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 285              		.loc 1 504 103 is_stmt 0 view .LVU70
 286 00db 4D89E9   		mov	r9, r13	# pattern_size, pattern_size
 287 00de 49C1E107 		sal	r9, 7	# pattern_size,
 288              	# sieve_extend.c:504:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 289              		.loc 1 504 140 view .LVU71
 290 00e2 C4C2E1F7 		shlx	rbp, r8, rbx	# _23, pattern, pattern_size
 290      E8
 291              	# sieve_extend.c:504:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 292              		.loc 1 504 128 view .LVU72
 293 00e7 4909E8   		or	r8, rbp	# pattern, _23
 294              	.LVL11:
 295              		.loc 1 504 90 is_stmt 1 view .LVU73
 296              		.loc 1 504 54 view .LVU74
 297              	# sieve_extend.c:504:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 298              		.loc 1 504 5 is_stmt 0 view .LVU75
 299 00ea 4983F940 		cmp	r9, 64	# pattern_size,
 300 00ee 7720     		ja	.L2	#,
 301              		.loc 1 504 120 is_stmt 1 view .LVU76
 302              	# sieve_extend.c:504:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 303              		.loc 1 504 103 is_stmt 0 view .LVU77
 304 00f0 49C1E508 		sal	r13, 8	# pattern_size,
 305              	# sieve_extend.c:504:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 306              		.loc 1 504 140 view .LVU78
 307 00f4 C442B1F7 		shlx	r11, r8, r9	# _23, pattern, pattern_size
 307      D8
 308              	# sieve_extend.c:504:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 309              		.loc 1 504 128 view .LVU79
 310 00f9 4D09D8   		or	r8, r11	# pattern, _23
 311              	.LVL12:
 312              		.loc 1 504 90 is_stmt 1 view .LVU80
 313              		.loc 1 504 54 view .LVU81
 314              	# sieve_extend.c:504:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 315              		.loc 1 504 5 is_stmt 0 view .LVU82
 316 00fc 4983FD40 		cmp	r13, 64	# pattern_size,
 317 0100 0F864FFF 		jbe	.L3	#,
 317      FFFF
 318              	.LVL13:
 319 0106 662E0F1F 		.p2align 4,,10
 319      84000000 
 319      0000
 320              		.p2align 3
 321              	.L2:
 322              		.loc 1 504 5 view .LVU83
 323              	.LBE272:
GAS LISTING /tmp/cctyCFAS.s 			page 16


 505:sieve_extend.c **** 
 506:sieve_extend.c ****     counter_t copy_start = source_start + size;
 324              		.loc 1 506 5 is_stmt 1 view .LVU84
 325              	# sieve_extend.c:506:     counter_t copy_start = source_start + size;
 326              		.loc 1 506 15 is_stmt 0 view .LVU85
 327 0110 4E8D1C16 		lea	r11, [rsi+r10]	# copy_start,
 328              	.LVL14:
 507:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 329              		.loc 1 507 5 is_stmt 1 view .LVU86
 330              	# sieve_extend.c:507:     register counter_t copy_word = wordindex(copy_start);
 331              		.loc 1 507 24 is_stmt 0 view .LVU87
 332 0114 4D89DE   		mov	r14, r11	# copy_word, copy_start
 333 0117 49C1EE06 		shr	r14, 6	# copy_word,
 334              	.LVL15:
 508:sieve_extend.c ****     bitarray[copy_word] |= (pattern << bitindex(copy_start));
 335              		.loc 1 508 5 is_stmt 1 view .LVU88
 336              	# sieve_extend.c:508:     bitarray[copy_word] |= (pattern << bitindex(copy_start));
 337              		.loc 1 508 25 is_stmt 0 view .LVU89
 338 011b 4E8D2CF5 		lea	r13, 0[0+r14*8]	# _24,
 338      00000000 
 339 0123 4A8D2C2F 		lea	rbp, [rdi+r13]	# prephitmp_124,
 340              	# sieve_extend.c:510:     counter_t destination_stop_word = wordindex(destination_stop);
 509:sieve_extend.c **** 
 510:sieve_extend.c ****     counter_t destination_stop_word = wordindex(destination_stop);
 341              		.loc 1 510 15 view .LVU90
 342 0127 4989CC   		mov	r12, rcx	# destination_stop_word, destination_stop
 343 012a 48C7C6FF 		mov	rsi, -1	# tmp159,
 343      FFFFFF
 344              	.LVL16:
 345              		.loc 1 510 15 view .LVU91
 346 0131 F7D1     		not	ecx	# tmp157
 347              	.LVL17:
 348              	# sieve_extend.c:508:     bitarray[copy_word] |= (pattern << bitindex(copy_start));
 508:sieve_extend.c ****     bitarray[copy_word] |= (pattern << bitindex(copy_start));
 349              		.loc 1 508 37 view .LVU92
 350 0133 C4C2A1F7 		shlx	rbx, r8, r11	# tmp156, pattern, copy_start
 350      D8
 351              	# sieve_extend.c:510:     counter_t destination_stop_word = wordindex(destination_stop);
 352              		.loc 1 510 15 view .LVU93
 353 0138 49C1EC06 		shr	r12, 6	# destination_stop_word,
 354              	.LVL18:
 355              	# sieve_extend.c:508:     bitarray[copy_word] |= (pattern << bitindex(copy_start));
 508:sieve_extend.c ****     bitarray[copy_word] |= (pattern << bitindex(copy_start));
 356              		.loc 1 508 25 view .LVU94
 357 013c 480B5D00 		or	rbx, QWORD PTR 0[rbp]	# _44, *_25
 358 0140 48895D00 		mov	QWORD PTR 0[rbp], rbx	# *_25, _44
 359              		.loc 1 510 5 is_stmt 1 view .LVU95
 360              	.LVL19:
 511:sieve_extend.c ****     // debug { printf("...After first word. "); dump_bitarray(bitarray, 4); }
 512:sieve_extend.c ****     if (copy_word == destination_stop_word) {
 361              		.loc 1 512 5 view .LVU96
 362 0144 C462F3F7 		shrx	r9, rsi, rcx	# _115, tmp159, tmp157
 362      CE
 363              	# sieve_extend.c:512:     if (copy_word == destination_stop_word) {
 364              		.loc 1 512 8 is_stmt 0 view .LVU97
 365 0149 4D39E6   		cmp	r14, r12	# copy_word, destination_stop_word
 366 014c 0F845302 		je	.L6	#,
GAS LISTING /tmp/cctyCFAS.s 			page 17


 366      0000
 513:sieve_extend.c ****         bitarray[copy_word] &= chopmask(destination_stop);
 514:sieve_extend.c ****         // debug { printf("...Returning after first word. "); dump_bitarray(bitarray, 4); }
 515:sieve_extend.c ****         return;
 516:sieve_extend.c ****     }
 517:sieve_extend.c **** 
 518:sieve_extend.c ****     register const bitshift_t pattern_shift = WORD_SIZE_counter % size;
 367              		.loc 1 518 5 is_stmt 1 view .LVU98
 368              	# sieve_extend.c:518:     register const bitshift_t pattern_shift = WORD_SIZE_counter % size;
 369              		.loc 1 518 31 is_stmt 0 view .LVU99
 370 0152 B9400000 		mov	ecx, 64	# tmp161,
 370      00
 371 0157 4889C8   		mov	rax, rcx	# tmp163, tmp161
 372 015a 31D2     		xor	edx, edx	# tmp162
 373 015c 49F7F2   		div	r10	# size
 374              	.LVL20:
 519:sieve_extend.c ****     register const bitshift_t pattern_size = WORD_SIZE_bitshift - pattern_shift;
 375              		.loc 1 519 5 is_stmt 1 view .LVU100
 376              	# sieve_extend.c:519:     register const bitshift_t pattern_size = WORD_SIZE_bitshift - pattern_shi
 377              		.loc 1 519 31 is_stmt 0 view .LVU101
 378 015f 4889CE   		mov	rsi, rcx	# pattern_size, tmp161
 379              	# sieve_extend.c:520:     register bitshift_t shift = WORD_SIZE_bitshift - bitindex_calc(copy_start
 520:sieve_extend.c ****     register bitshift_t shift = WORD_SIZE_bitshift - bitindex_calc(copy_start);
 380              		.loc 1 520 54 view .LVU102
 381 0162 4183E33F 		and	r11d, 63	# tmp165,
 382              	.LVL21:
 383              	# sieve_extend.c:520:     register bitshift_t shift = WORD_SIZE_bitshift - bitindex_calc(copy_start
 384              		.loc 1 520 25 view .LVU103
 385 0166 4889C8   		mov	rax, rcx	# tmp161, tmp161
 386 0169 4C29D8   		sub	rax, r11	# tmp161, tmp165
 387              	# sieve_extend.c:519:     register const bitshift_t pattern_size = WORD_SIZE_bitshift - pattern_shi
 519:sieve_extend.c ****     register const bitshift_t pattern_size = WORD_SIZE_bitshift - pattern_shift;
 388              		.loc 1 519 31 view .LVU104
 389 016c 4829D6   		sub	rsi, rdx	# pattern_size, tmp162
 390              	.LVL22:
 391              		.loc 1 520 5 is_stmt 1 view .LVU105
 521:sieve_extend.c **** 
 522:sieve_extend.c ****     #pragma ivdep
 523:sieve_extend.c ****     while (copy_word < destination_stop_word) { // = will be handled as well because increment is a
 392              		.loc 1 523 5 view .LVU106
 393              		.loc 1 523 11 view .LVU107
 394 016f 4D39E6   		cmp	r14, r12	# copy_word, destination_stop_word
 395 0172 0F832D02 		jnb	.L6	#,
 395      0000
 396 0178 4E8D1CE5 		lea	r11, 8[0+r12*8]	# _72,
 396      08000000 
 397 0180 4E8D141F 		lea	r10, [rdi+r11]	# _105,
 398              	.LVL23:
 399              		.loc 1 523 11 is_stmt 0 view .LVU108
 400 0184 4E8D742F 		lea	r14, 8[rdi+r13]	# ivtmp.126,
 400      08
 401              	.LVL24:
 402              		.loc 1 523 11 view .LVU109
 403 0189 4C89D3   		mov	rbx, r10	# tmp175, _105
 404 018c 4C29F3   		sub	rbx, r14	# tmp175, ivtmp.126
 405 018f 4883EB08 		sub	rbx, 8	# tmp176,
 406 0193 48C1EB03 		shr	rbx, 3	# tmp174,
GAS LISTING /tmp/cctyCFAS.s 			page 18


 407 0197 48FFC3   		inc	rbx	# tmp177
 408 019a 83E307   		and	ebx, 7	# tmp178,
 409 019d 0F841101 		je	.L7	#,
 409      0000
 410 01a3 4883FB01 		cmp	rbx, 1	# tmp178,
 411 01a7 0F84E000 		je	.L39	#,
 411      0000
 412 01ad 4883FB02 		cmp	rbx, 2	# tmp178,
 413 01b1 0F84B600 		je	.L40	#,
 413      0000
 414 01b7 4883FB03 		cmp	rbx, 3	# tmp178,
 415 01bb 0F848C00 		je	.L41	#,
 415      0000
 416 01c1 4883FB04 		cmp	rbx, 4	# tmp178,
 417 01c5 7468     		je	.L42	#,
 418 01c7 4883FB05 		cmp	rbx, 5	# tmp178,
 419 01cb 7442     		je	.L43	#,
 420 01cd 4883FB06 		cmp	rbx, 6	# tmp178,
 421 01d1 741E     		je	.L44	#,
 422              	.LVL25:
 524:sieve_extend.c ****         copy_word++;
 423              		.loc 1 524 9 is_stmt 1 view .LVU110
 525:sieve_extend.c ****         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >> shift);
 424              		.loc 1 525 9 view .LVU111
 425              	# sieve_extend.c:525:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 426              		.loc 1 525 56 is_stmt 0 view .LVU112
 427 01d3 89F5     		mov	ebp, esi	# tmp230, _116
 428 01d5 29C5     		sub	ebp, eax	# tmp230, shift
 429              	# sieve_extend.c:525:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 430              		.loc 1 525 76 view .LVU113
 431 01d7 C442FBF7 		shrx	r12, r8, rax	# tmp232, pattern, shift
 431      E0
 432              	.LVL26:
 433              	# sieve_extend.c:525:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 434              		.loc 1 525 40 view .LVU114
 435 01dc C442D1F7 		shlx	r13, r8, rbp	# tmp231, pattern, tmp230
 435      E8
 436              	# sieve_extend.c:526:         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alter
 526:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 437              		.loc 1 526 24 view .LVU115
 438 01e1 4801D0   		add	rax, rdx	# _45, tmp162
 439              	.LVL27:
 440              	# sieve_extend.c:525:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 525:sieve_extend.c ****         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >> shift);
 441              		.loc 1 525 65 view .LVU116
 442 01e4 4D09E5   		or	r13, r12	# _44, tmp232
 443              	# sieve_extend.c:525:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 525:sieve_extend.c ****         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >> shift);
 444              		.loc 1 525 29 view .LVU117
 445 01e7 4D892E   		mov	QWORD PTR [r14], r13	# MEM[base: _109, offset: 0B], _44
 446              		.loc 1 526 9 is_stmt 1 view .LVU118
 447              	.LVL28:
 448              	# sieve_extend.c:526:         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alter
 449              		.loc 1 526 15 is_stmt 0 view .LVU119
 450 01ea 83E03F   		and	eax, 63	# shift,
 451              	.LVL29:
 523:sieve_extend.c ****         copy_word++;
GAS LISTING /tmp/cctyCFAS.s 			page 19


 452              		.loc 1 523 11 is_stmt 1 view .LVU120
 453 01ed 4983C608 		add	r14, 8	# ivtmp.126,
 454              	.L44:
 524:sieve_extend.c ****         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >> shift);
 455              		.loc 1 524 9 view .LVU121
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 456              		.loc 1 525 9 view .LVU122
 457              	# sieve_extend.c:525:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 458              		.loc 1 525 56 is_stmt 0 view .LVU123
 459 01f1 89F1     		mov	ecx, esi	# tmp235, _116
 460 01f3 29C1     		sub	ecx, eax	# tmp235, shift
 461              	# sieve_extend.c:525:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 462              		.loc 1 525 76 view .LVU124
 463 01f5 C4C2FBF7 		shrx	rbp, r8, rax	# tmp237, pattern, shift
 463      E8
 464              	# sieve_extend.c:525:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 465              		.loc 1 525 40 view .LVU125
 466 01fa C4C2F1F7 		shlx	rbx, r8, rcx	# tmp236, pattern, tmp235
 466      D8
 467              	# sieve_extend.c:526:         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alter
 468              		.loc 1 526 24 view .LVU126
 469 01ff 4801D0   		add	rax, rdx	# _45, tmp162
 470              	.LVL30:
 471              	# sieve_extend.c:525:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 472              		.loc 1 525 65 view .LVU127
 473 0202 4809EB   		or	rbx, rbp	# _44, tmp237
 474              	# sieve_extend.c:525:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 475              		.loc 1 525 29 view .LVU128
 476 0205 49891E   		mov	QWORD PTR [r14], rbx	# MEM[base: _109, offset: 0B], _44
 477              		.loc 1 526 9 is_stmt 1 view .LVU129
 478              	.LVL31:
 479              	# sieve_extend.c:526:         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alter
 480              		.loc 1 526 15 is_stmt 0 view .LVU130
 481 0208 83E03F   		and	eax, 63	# shift,
 482              	.LVL32:
 523:sieve_extend.c ****         copy_word++;
 483              		.loc 1 523 11 is_stmt 1 view .LVU131
 484 020b 4983C608 		add	r14, 8	# ivtmp.126,
 485              	.L43:
 524:sieve_extend.c ****         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >> shift);
 486              		.loc 1 524 9 view .LVU132
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 487              		.loc 1 525 9 view .LVU133
 488              	# sieve_extend.c:525:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 489              		.loc 1 525 56 is_stmt 0 view .LVU134
 490 020f 4189F5   		mov	r13d, esi	# tmp240, _116
 491 0212 4129C5   		sub	r13d, eax	# tmp240, shift
 492              	# sieve_extend.c:525:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 493              		.loc 1 525 76 view .LVU135
 494 0215 C4C2FBF7 		shrx	rcx, r8, rax	# tmp242, pattern, shift
GAS LISTING /tmp/cctyCFAS.s 			page 20


 494      C8
 495              	# sieve_extend.c:525:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 496              		.loc 1 525 40 view .LVU136
 497 021a C44291F7 		shlx	r12, r8, r13	# tmp241, pattern, tmp240
 497      E0
 498              	# sieve_extend.c:526:         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alter
 499              		.loc 1 526 24 view .LVU137
 500 021f 4801D0   		add	rax, rdx	# _45, tmp162
 501              	.LVL33:
 502              	# sieve_extend.c:525:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 503              		.loc 1 525 65 view .LVU138
 504 0222 4909CC   		or	r12, rcx	# _44, tmp242
 505              	# sieve_extend.c:525:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 506              		.loc 1 525 29 view .LVU139
 507 0225 4D8926   		mov	QWORD PTR [r14], r12	# MEM[base: _109, offset: 0B], _44
 508              		.loc 1 526 9 is_stmt 1 view .LVU140
 509              	.LVL34:
 510              	# sieve_extend.c:526:         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alter
 511              		.loc 1 526 15 is_stmt 0 view .LVU141
 512 0228 83E03F   		and	eax, 63	# shift,
 513              	.LVL35:
 523:sieve_extend.c ****         copy_word++;
 514              		.loc 1 523 11 is_stmt 1 view .LVU142
 515 022b 4983C608 		add	r14, 8	# ivtmp.126,
 516              	.L42:
 524:sieve_extend.c ****         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >> shift);
 517              		.loc 1 524 9 view .LVU143
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 518              		.loc 1 525 9 view .LVU144
 519              	# sieve_extend.c:525:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 520              		.loc 1 525 56 is_stmt 0 view .LVU145
 521 022f 89F3     		mov	ebx, esi	# tmp245, _116
 522 0231 29C3     		sub	ebx, eax	# tmp245, shift
 523              	# sieve_extend.c:525:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 524              		.loc 1 525 76 view .LVU146
 525 0233 C4C2FBF7 		shrx	rbp, r8, rax	# tmp247, pattern, shift
 525      E8
 526              	# sieve_extend.c:525:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 527              		.loc 1 525 40 view .LVU147
 528 0238 C442E1F7 		shlx	r13, r8, rbx	# tmp246, pattern, tmp245
 528      E8
 529              	# sieve_extend.c:526:         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alter
 530              		.loc 1 526 24 view .LVU148
 531 023d 4801D0   		add	rax, rdx	# _45, tmp162
 532              	.LVL36:
 533              	# sieve_extend.c:525:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 534              		.loc 1 525 65 view .LVU149
 535 0240 4909ED   		or	r13, rbp	# _44, tmp247
 536              	# sieve_extend.c:525:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
GAS LISTING /tmp/cctyCFAS.s 			page 21


 537              		.loc 1 525 29 view .LVU150
 538 0243 4D892E   		mov	QWORD PTR [r14], r13	# MEM[base: _109, offset: 0B], _44
 539              		.loc 1 526 9 is_stmt 1 view .LVU151
 540              	.LVL37:
 541              	# sieve_extend.c:526:         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alter
 542              		.loc 1 526 15 is_stmt 0 view .LVU152
 543 0246 83E03F   		and	eax, 63	# shift,
 544              	.LVL38:
 523:sieve_extend.c ****         copy_word++;
 545              		.loc 1 523 11 is_stmt 1 view .LVU153
 546 0249 4983C608 		add	r14, 8	# ivtmp.126,
 547              	.L41:
 524:sieve_extend.c ****         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >> shift);
 548              		.loc 1 524 9 view .LVU154
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 549              		.loc 1 525 9 view .LVU155
 550              	# sieve_extend.c:525:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 551              		.loc 1 525 56 is_stmt 0 view .LVU156
 552 024d 4189F4   		mov	r12d, esi	# tmp250, _116
 553 0250 4129C4   		sub	r12d, eax	# tmp250, shift
 554              	# sieve_extend.c:525:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 555              		.loc 1 525 76 view .LVU157
 556 0253 C4C2FBF7 		shrx	rbx, r8, rax	# tmp252, pattern, shift
 556      D8
 557              	# sieve_extend.c:525:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 558              		.loc 1 525 40 view .LVU158
 559 0258 C4C299F7 		shlx	rcx, r8, r12	# tmp251, pattern, tmp250
 559      C8
 560              	# sieve_extend.c:526:         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alter
 561              		.loc 1 526 24 view .LVU159
 562 025d 4801D0   		add	rax, rdx	# _45, tmp162
 563              	.LVL39:
 564              	# sieve_extend.c:525:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 565              		.loc 1 525 65 view .LVU160
 566 0260 4809D9   		or	rcx, rbx	# _44, tmp252
 567              	# sieve_extend.c:525:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 568              		.loc 1 525 29 view .LVU161
 569 0263 49890E   		mov	QWORD PTR [r14], rcx	# MEM[base: _109, offset: 0B], _44
 570              		.loc 1 526 9 is_stmt 1 view .LVU162
 571              	.LVL40:
 572              	# sieve_extend.c:526:         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alter
 573              		.loc 1 526 15 is_stmt 0 view .LVU163
 574 0266 83E03F   		and	eax, 63	# shift,
 575              	.LVL41:
 523:sieve_extend.c ****         copy_word++;
 576              		.loc 1 523 11 is_stmt 1 view .LVU164
 577 0269 4983C608 		add	r14, 8	# ivtmp.126,
 578              	.L40:
 524:sieve_extend.c ****         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >> shift);
 579              		.loc 1 524 9 view .LVU165
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 580              		.loc 1 525 9 view .LVU166
GAS LISTING /tmp/cctyCFAS.s 			page 22


 581              	# sieve_extend.c:525:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 582              		.loc 1 525 56 is_stmt 0 view .LVU167
 583 026d 4189F5   		mov	r13d, esi	# tmp255, _116
 584 0270 4129C5   		sub	r13d, eax	# tmp255, shift
 585              	# sieve_extend.c:525:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 586              		.loc 1 525 76 view .LVU168
 587 0273 C4C2FBF7 		shrx	rbp, r8, rax	# tmp257, pattern, shift
 587      E8
 588              	# sieve_extend.c:525:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 589              		.loc 1 525 40 view .LVU169
 590 0278 C44291F7 		shlx	r12, r8, r13	# tmp256, pattern, tmp255
 590      E0
 591              	# sieve_extend.c:526:         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alter
 592              		.loc 1 526 24 view .LVU170
 593 027d 4801D0   		add	rax, rdx	# _45, tmp162
 594              	.LVL42:
 595              	# sieve_extend.c:525:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 596              		.loc 1 525 65 view .LVU171
 597 0280 4909EC   		or	r12, rbp	# _44, tmp257
 598              	# sieve_extend.c:525:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 599              		.loc 1 525 29 view .LVU172
 600 0283 4D8926   		mov	QWORD PTR [r14], r12	# MEM[base: _109, offset: 0B], _44
 601              		.loc 1 526 9 is_stmt 1 view .LVU173
 602              	.LVL43:
 603              	# sieve_extend.c:526:         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alter
 604              		.loc 1 526 15 is_stmt 0 view .LVU174
 605 0286 83E03F   		and	eax, 63	# shift,
 606              	.LVL44:
 523:sieve_extend.c ****         copy_word++;
 607              		.loc 1 523 11 is_stmt 1 view .LVU175
 608 0289 4983C608 		add	r14, 8	# ivtmp.126,
 609              	.L39:
 524:sieve_extend.c ****         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >> shift);
 610              		.loc 1 524 9 view .LVU176
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 611              		.loc 1 525 9 view .LVU177
 612              	# sieve_extend.c:525:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 613              		.loc 1 525 56 is_stmt 0 view .LVU178
 614 028d 89F1     		mov	ecx, esi	# tmp260, _116
 615 028f 29C1     		sub	ecx, eax	# tmp260, shift
 616              	# sieve_extend.c:525:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 617              		.loc 1 525 76 view .LVU179
 618 0291 C442FBF7 		shrx	r13, r8, rax	# tmp262, pattern, shift
 618      E8
 619              	# sieve_extend.c:525:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 620              		.loc 1 525 40 view .LVU180
 621 0296 C4C2F1F7 		shlx	rbx, r8, rcx	# tmp261, pattern, tmp260
 621      D8
 622              	# sieve_extend.c:525:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
GAS LISTING /tmp/cctyCFAS.s 			page 23


 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 623              		.loc 1 525 65 view .LVU181
 624 029b 4C09EB   		or	rbx, r13	# _44, tmp262
 625              	# sieve_extend.c:525:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 626              		.loc 1 525 29 view .LVU182
 627 029e 49891E   		mov	QWORD PTR [r14], rbx	# MEM[base: _109, offset: 0B], _44
 628              		.loc 1 526 9 is_stmt 1 view .LVU183
 629              	# sieve_extend.c:526:         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alter
 630              		.loc 1 526 24 is_stmt 0 view .LVU184
 631 02a1 4801D0   		add	rax, rdx	# _45, tmp162
 632              	.LVL45:
 633              		.loc 1 526 24 view .LVU185
 634 02a4 4983C608 		add	r14, 8	# ivtmp.126,
 635              	# sieve_extend.c:526:         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alter
 636              		.loc 1 526 15 view .LVU186
 637 02a8 83E03F   		and	eax, 63	# shift,
 638              	.LVL46:
 523:sieve_extend.c ****         copy_word++;
 639              		.loc 1 523 11 is_stmt 1 view .LVU187
 640 02ab 4D39F2   		cmp	r10, r14	# _105, ivtmp.126
 641 02ae 0F84EC00 		je	.L59	#,
 641      0000
 642              	.L7:
 524:sieve_extend.c ****         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >> shift);
 643              		.loc 1 524 9 view .LVU188
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 644              		.loc 1 525 9 view .LVU189
 645              	# sieve_extend.c:525:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 646              		.loc 1 525 56 is_stmt 0 view .LVU190
 647 02b4 4189F4   		mov	r12d, esi	# tmp169, _116
 648 02b7 4129C4   		sub	r12d, eax	# tmp169, shift
 649              	# sieve_extend.c:525:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 650              		.loc 1 525 76 view .LVU191
 651 02ba C4C2FBF7 		shrx	rbp, r8, rax	# tmp171, pattern, shift
 651      E8
 652              	# sieve_extend.c:526:         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alter
 653              		.loc 1 526 24 view .LVU192
 654 02bf 4801D0   		add	rax, rdx	# _45, tmp162
 655              	.LVL47:
 656              	# sieve_extend.c:526:         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alter
 657              		.loc 1 526 15 view .LVU193
 658 02c2 83E03F   		and	eax, 63	# shift,
 659              	# sieve_extend.c:525:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 660              		.loc 1 525 56 view .LVU194
 661 02c5 89F3     		mov	ebx, esi	# tmp184, _116
 662 02c7 29C3     		sub	ebx, eax	# tmp184, shift
 663              	# sieve_extend.c:525:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 664              		.loc 1 525 40 view .LVU195
 665 02c9 C4C299F7 		shlx	rcx, r8, r12	# tmp170, pattern, tmp169
 665      C8
 666              	# sieve_extend.c:525:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
GAS LISTING /tmp/cctyCFAS.s 			page 24


 667              		.loc 1 525 76 view .LVU196
 668 02ce C442FBF7 		shrx	r12, r8, rax	# tmp186, pattern, shift
 668      E0
 669              	# sieve_extend.c:525:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 670              		.loc 1 525 65 view .LVU197
 671 02d3 4809E9   		or	rcx, rbp	# _44, tmp171
 672              	# sieve_extend.c:526:         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alter
 673              		.loc 1 526 24 view .LVU198
 674 02d6 4801D0   		add	rax, rdx	# _45, tmp162
 675              	# sieve_extend.c:526:         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alter
 676              		.loc 1 526 15 view .LVU199
 677 02d9 83E03F   		and	eax, 63	# shift,
 678              	# sieve_extend.c:525:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 679              		.loc 1 525 29 view .LVU200
 680 02dc 49890E   		mov	QWORD PTR [r14], rcx	# MEM[base: _109, offset: 0B], _44
 681              		.loc 1 526 9 is_stmt 1 view .LVU201
 523:sieve_extend.c ****         copy_word++;
 682              		.loc 1 523 11 view .LVU202
 524:sieve_extend.c ****         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >> shift);
 683              		.loc 1 524 9 view .LVU203
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 684              		.loc 1 525 9 view .LVU204
 685              	# sieve_extend.c:525:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 686              		.loc 1 525 56 is_stmt 0 view .LVU205
 687 02df 89F1     		mov	ecx, esi	# tmp191, _116
 688 02e1 29C1     		sub	ecx, eax	# tmp191, shift
 689              	# sieve_extend.c:525:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 690              		.loc 1 525 76 view .LVU206
 691 02e3 C4C2FBF7 		shrx	rbp, r8, rax	# tmp193, pattern, shift
 691      E8
 692              	# sieve_extend.c:525:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 693              		.loc 1 525 40 view .LVU207
 694 02e8 C442E1F7 		shlx	r13, r8, rbx	# tmp185, pattern, tmp184
 694      E8
 695              	# sieve_extend.c:526:         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alter
 696              		.loc 1 526 24 view .LVU208
 697 02ed 4801D0   		add	rax, rdx	# _45, tmp162
 698              	# sieve_extend.c:525:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 699              		.loc 1 525 65 view .LVU209
 700 02f0 4D09E5   		or	r13, r12	# _44, tmp186
 701              	# sieve_extend.c:526:         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alter
 702              		.loc 1 526 15 view .LVU210
 703 02f3 83E03F   		and	eax, 63	# shift,
 704              	# sieve_extend.c:525:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 705              		.loc 1 525 29 view .LVU211
 706 02f6 4D896E08 		mov	QWORD PTR 8[r14], r13	# MEM[base: _109, offset: 0B], _44
 707              		.loc 1 526 9 is_stmt 1 view .LVU212
 523:sieve_extend.c ****         copy_word++;
 708              		.loc 1 523 11 view .LVU213
 524:sieve_extend.c ****         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >> shift);
GAS LISTING /tmp/cctyCFAS.s 			page 25


 709              		.loc 1 524 9 view .LVU214
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 710              		.loc 1 525 9 view .LVU215
 711              	# sieve_extend.c:525:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 712              		.loc 1 525 56 is_stmt 0 view .LVU216
 713 02fa 4189F5   		mov	r13d, esi	# tmp198, _116
 714 02fd 4129C5   		sub	r13d, eax	# tmp198, shift
 715              	# sieve_extend.c:525:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 716              		.loc 1 525 40 view .LVU217
 717 0300 C4C2F1F7 		shlx	rbx, r8, rcx	# tmp192, pattern, tmp191
 717      D8
 718              	# sieve_extend.c:525:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 719              		.loc 1 525 76 view .LVU218
 720 0305 C4C2FBF7 		shrx	rcx, r8, rax	# tmp200, pattern, shift
 720      C8
 721              	# sieve_extend.c:525:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 722              		.loc 1 525 65 view .LVU219
 723 030a 4809EB   		or	rbx, rbp	# _44, tmp193
 724              	# sieve_extend.c:526:         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alter
 725              		.loc 1 526 24 view .LVU220
 726 030d 4801D0   		add	rax, rdx	# _45, tmp162
 727              	# sieve_extend.c:526:         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alter
 728              		.loc 1 526 15 view .LVU221
 729 0310 83E03F   		and	eax, 63	# shift,
 730              	# sieve_extend.c:525:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 731              		.loc 1 525 29 view .LVU222
 732 0313 49895E10 		mov	QWORD PTR 16[r14], rbx	# MEM[base: _109, offset: 0B], _44
 733              		.loc 1 526 9 is_stmt 1 view .LVU223
 523:sieve_extend.c ****         copy_word++;
 734              		.loc 1 523 11 view .LVU224
 524:sieve_extend.c ****         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >> shift);
 735              		.loc 1 524 9 view .LVU225
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 736              		.loc 1 525 9 view .LVU226
 737              	# sieve_extend.c:525:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 738              		.loc 1 525 56 is_stmt 0 view .LVU227
 739 0317 89F3     		mov	ebx, esi	# tmp205, _116
 740 0319 29C3     		sub	ebx, eax	# tmp205, shift
 741              	# sieve_extend.c:525:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 742              		.loc 1 525 76 view .LVU228
 743 031b C4C2FBF7 		shrx	rbp, r8, rax	# tmp207, pattern, shift
 743      E8
 744              	# sieve_extend.c:525:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 745              		.loc 1 525 40 view .LVU229
 746 0320 C44291F7 		shlx	r12, r8, r13	# tmp199, pattern, tmp198
 746      E0
 747              	# sieve_extend.c:526:         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alter
 748              		.loc 1 526 24 view .LVU230
 749 0325 4801D0   		add	rax, rdx	# _45, tmp162
GAS LISTING /tmp/cctyCFAS.s 			page 26


 750              	# sieve_extend.c:525:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 751              		.loc 1 525 65 view .LVU231
 752 0328 4909CC   		or	r12, rcx	# _44, tmp200
 753              	# sieve_extend.c:526:         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alter
 754              		.loc 1 526 15 view .LVU232
 755 032b 83E03F   		and	eax, 63	# shift,
 756              	# sieve_extend.c:525:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 757              		.loc 1 525 29 view .LVU233
 758 032e 4D896618 		mov	QWORD PTR 24[r14], r12	# MEM[base: _109, offset: 0B], _44
 759              		.loc 1 526 9 is_stmt 1 view .LVU234
 523:sieve_extend.c ****         copy_word++;
 760              		.loc 1 523 11 view .LVU235
 524:sieve_extend.c ****         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >> shift);
 761              		.loc 1 524 9 view .LVU236
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 762              		.loc 1 525 9 view .LVU237
 763              	# sieve_extend.c:525:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 764              		.loc 1 525 56 is_stmt 0 view .LVU238
 765 0332 4189F4   		mov	r12d, esi	# tmp212, _116
 766 0335 4129C4   		sub	r12d, eax	# tmp212, shift
 767              	# sieve_extend.c:525:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 768              		.loc 1 525 40 view .LVU239
 769 0338 C442E1F7 		shlx	r13, r8, rbx	# tmp206, pattern, tmp205
 769      E8
 770              	# sieve_extend.c:525:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 771              		.loc 1 525 76 view .LVU240
 772 033d C4C2FBF7 		shrx	rbx, r8, rax	# tmp214, pattern, shift
 772      D8
 773              	# sieve_extend.c:525:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 774              		.loc 1 525 65 view .LVU241
 775 0342 4909ED   		or	r13, rbp	# _44, tmp207
 776              	# sieve_extend.c:526:         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alter
 777              		.loc 1 526 24 view .LVU242
 778 0345 4801D0   		add	rax, rdx	# _45, tmp162
 779              	# sieve_extend.c:526:         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alter
 780              		.loc 1 526 15 view .LVU243
 781 0348 83E03F   		and	eax, 63	# shift,
 782              	# sieve_extend.c:525:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 783              		.loc 1 525 29 view .LVU244
 784 034b 4D896E20 		mov	QWORD PTR 32[r14], r13	# MEM[base: _109, offset: 0B], _44
 785              		.loc 1 526 9 is_stmt 1 view .LVU245
 523:sieve_extend.c ****         copy_word++;
 786              		.loc 1 523 11 view .LVU246
 524:sieve_extend.c ****         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >> shift);
 787              		.loc 1 524 9 view .LVU247
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 788              		.loc 1 525 9 view .LVU248
 789              	# sieve_extend.c:525:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 790              		.loc 1 525 56 is_stmt 0 view .LVU249
GAS LISTING /tmp/cctyCFAS.s 			page 27


 791 034f 4189F5   		mov	r13d, esi	# tmp219, _116
 792 0352 4129C5   		sub	r13d, eax	# tmp219, shift
 793              	# sieve_extend.c:525:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 794              		.loc 1 525 40 view .LVU250
 795 0355 C4C299F7 		shlx	rcx, r8, r12	# tmp213, pattern, tmp212
 795      C8
 796              	# sieve_extend.c:525:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 797              		.loc 1 525 76 view .LVU251
 798 035a C4C2FBF7 		shrx	rbp, r8, rax	# tmp221, pattern, shift
 798      E8
 799              	# sieve_extend.c:525:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 800              		.loc 1 525 65 view .LVU252
 801 035f 4809D9   		or	rcx, rbx	# _44, tmp214
 802              	# sieve_extend.c:526:         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alter
 803              		.loc 1 526 24 view .LVU253
 804 0362 4801D0   		add	rax, rdx	# _45, tmp162
 805              	# sieve_extend.c:526:         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alter
 806              		.loc 1 526 15 view .LVU254
 807 0365 83E03F   		and	eax, 63	# shift,
 808              	# sieve_extend.c:525:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 809              		.loc 1 525 29 view .LVU255
 810 0368 49894E28 		mov	QWORD PTR 40[r14], rcx	# MEM[base: _109, offset: 0B], _44
 811              		.loc 1 526 9 is_stmt 1 view .LVU256
 523:sieve_extend.c ****         copy_word++;
 812              		.loc 1 523 11 view .LVU257
 524:sieve_extend.c ****         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >> shift);
 813              		.loc 1 524 9 view .LVU258
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 814              		.loc 1 525 9 view .LVU259
 815              	# sieve_extend.c:525:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 816              		.loc 1 525 56 is_stmt 0 view .LVU260
 817 036c 89F1     		mov	ecx, esi	# tmp226, _116
 818 036e 29C1     		sub	ecx, eax	# tmp226, shift
 819              	# sieve_extend.c:525:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 820              		.loc 1 525 40 view .LVU261
 821 0370 C44291F7 		shlx	r12, r8, r13	# tmp220, pattern, tmp219
 821      E0
 822 0375 C4C2F1F7 		shlx	rbx, r8, rcx	# tmp227, pattern, tmp226
 822      D8
 823              	# sieve_extend.c:525:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 824              		.loc 1 525 65 view .LVU262
 825 037a 4909EC   		or	r12, rbp	# _44, tmp221
 826              	# sieve_extend.c:525:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 827              		.loc 1 525 76 view .LVU263
 828 037d C442FBF7 		shrx	r13, r8, rax	# tmp228, pattern, shift
 828      E8
 829              	# sieve_extend.c:526:         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alter
 830              		.loc 1 526 24 view .LVU264
 831 0382 4801D0   		add	rax, rdx	# _45, tmp162
GAS LISTING /tmp/cctyCFAS.s 			page 28


 832              	# sieve_extend.c:525:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 833              		.loc 1 525 65 view .LVU265
 834 0385 4C09EB   		or	rbx, r13	# _44, tmp228
 835              	# sieve_extend.c:525:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 836              		.loc 1 525 29 view .LVU266
 837 0388 4D896630 		mov	QWORD PTR 48[r14], r12	# MEM[base: _109, offset: 0B], _44
 838              		.loc 1 526 9 is_stmt 1 view .LVU267
 523:sieve_extend.c ****         copy_word++;
 839              		.loc 1 523 11 view .LVU268
 524:sieve_extend.c ****         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >> shift);
 840              		.loc 1 524 9 view .LVU269
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 841              		.loc 1 525 9 view .LVU270
 842              	# sieve_extend.c:525:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 525:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 843              		.loc 1 525 29 is_stmt 0 view .LVU271
 844 038c 49895E38 		mov	QWORD PTR 56[r14], rbx	# MEM[base: _109, offset: 0B], _44
 845              		.loc 1 526 9 is_stmt 1 view .LVU272
 846              	.LVL48:
 847              	# sieve_extend.c:526:         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alter
 848              		.loc 1 526 15 is_stmt 0 view .LVU273
 849 0390 83E03F   		and	eax, 63	# shift,
 850              	.LVL49:
 523:sieve_extend.c ****         copy_word++;
 851              		.loc 1 523 11 is_stmt 1 view .LVU274
 852 0393 4983C640 		add	r14, 64	# ivtmp.126,
 853 0397 4D39F2   		cmp	r10, r14	# _105, ivtmp.126
 854 039a 0F8514FF 		jne	.L7	#,
 854      FFFF
 855              	.L59:
 523:sieve_extend.c ****         copy_word++;
 856              		.loc 1 523 11 is_stmt 0 view .LVU275
 857 03a0 4A8D6C1F 		lea	rbp, -8[rdi+r11]	# prephitmp_124,
 857      F8
 858              	.LVL50:
 859              	.L6:
 527:sieve_extend.c ****     }
 528:sieve_extend.c ****     bitarray[copy_word] &= chopmask(destination_stop);
 860              		.loc 1 528 5 is_stmt 1 view .LVU276
 861              	# sieve_extend.c:528:     bitarray[copy_word] &= chopmask(destination_stop);
 862              		.loc 1 528 25 is_stmt 0 view .LVU277
 863 03a5 4921D9   		and	r9, rbx	# tmp173, _44
 864 03a8 4C894D00 		mov	QWORD PTR 0[rbp], r9	#* prephitmp_124, tmp173
 865              	# sieve_extend.c:530: }
 529:sieve_extend.c ****     // debug { printf("...After copies. "); dump_bitarray(bitarray, 4); }
 530:sieve_extend.c **** }
 866              		.loc 1 530 1 view .LVU278
 867 03ac 5B       		pop	rbx	#
 868              		.cfi_def_cfa_offset 40
 869 03ad 5D       		pop	rbp	#
 870              		.cfi_def_cfa_offset 32
 871 03ae 415C     		pop	r12	#
 872              		.cfi_def_cfa_offset 24
 873 03b0 415D     		pop	r13	#
 874              		.cfi_def_cfa_offset 16
GAS LISTING /tmp/cctyCFAS.s 			page 29


 875 03b2 415E     		pop	r14	#
 876              		.cfi_def_cfa_offset 8
 877 03b4 C3       		ret	
 878              		.cfi_endproc
 879              	.LFE66:
 881 03b5 66662E0F 		.p2align 4
 881      1F840000 
 881      000000
 883              	extendSieve_shiftright_ivdep:
 884              	.LVL51:
 885              	.LFB71:
 531:sieve_extend.c **** 
 532:sieve_extend.c **** static void extendSieve_aligned(bitword_t* bitarray, const counter_t source_start, const counter_t 
 533:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 534:sieve_extend.c **** 
 535:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 536:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 537:sieve_extend.c ****     counter_t source_word = wordindex(source_start);
 538:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 539:sieve_extend.c ****     
 540:sieve_extend.c ****     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 541:sieve_extend.c **** 
 542:sieve_extend.c ****     while (copy_word + size <= destination_stop_word) {
 543:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 544:sieve_extend.c ****         copy_word += size;
 545:sieve_extend.c ****     }
 546:sieve_extend.c **** 
 547:sieve_extend.c ****    while (copy_word < destination_stop_word) {
 548:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 549:sieve_extend.c ****         source_word++;
 550:sieve_extend.c ****         copy_word++;
 551:sieve_extend.c ****     }
 552:sieve_extend.c **** 
 553:sieve_extend.c **** }
 554:sieve_extend.c **** 
 555:sieve_extend.c **** //https://stackoverflow.com/questions/1898153/how-to-determine-if-memory-is-aligned
 556:sieve_extend.c **** #define is_unaligned(POINTER, BYTE_COUNT) (((uintptr_t)(const void *)(POINTER)) % (BYTE_COUNT))
 557:sieve_extend.c **** 
 558:sieve_extend.c **** void shiftvec(uint64_t* __restrict dst, const uint64_t* __restrict src, int size, int shift)
 559:sieve_extend.c **** {
 560:sieve_extend.c ****     int i = 0;
 561:sieve_extend.c ****     // MSVC: use steps of 2 for SSE, 4 for AVX2, 8 for AVX512
 562:sieve_extend.c ****     for (; i+4 < size; i+=4,dst+=4,src+=4)
 563:sieve_extend.c ****     {
 564:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 565:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 566:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 567:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 568:sieve_extend.c ****     }
 569:sieve_extend.c ****     for (; i < size; ++i,++src,++dst)
 570:sieve_extend.c ****     {
 571:sieve_extend.c ****         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 572:sieve_extend.c ****     }    
 573:sieve_extend.c **** }
 574:sieve_extend.c **** 
 575:sieve_extend.c **** #define forward_distance 3
 576:sieve_extend.c **** static void extendSieve_shiftright_ptr(bitword_t* bitarray, const counter_t source_start, const cou
GAS LISTING /tmp/cctyCFAS.s 			page 30


 577:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 578:sieve_extend.c ****    
 579:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 580:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 581:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_calc(source_start);
 582:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 583:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 584:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 585:sieve_extend.c **** 
 586:sieve_extend.c ****     if (copy_word >= destination_stop_word) { 
 587:sieve_extend.c ****         bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose da
 588:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 589:sieve_extend.c ****                                 & keepmask(copy_start) & chopmask(destination_stop);
 590:sieve_extend.c ****         return; // rapid exit for one word variant
 591:sieve_extend.c ****     }
 592:sieve_extend.c **** 
 593:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose data
 594:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 595:sieve_extend.c ****                                 & keepmask(copy_start);
 596:sieve_extend.c **** 
 597:sieve_extend.c ****     copy_word++;
 598:sieve_extend.c **** 
 599:sieve_extend.c ****     debug printf("..copy distance %ju\n",copy_word - source_word);
 600:sieve_extend.c ****     if (((copy_word - source_word) > forward_distance)) {
 601:sieve_extend.c ****         // shiftvec(&bitarray[copy_word], &bitarray[source_word],size_word,shift );
 602:sieve_extend.c ****         
 603:sieve_extend.c ****         bitword_t* __restrict copy_ptr   = &bitarray[copy_word];
 604:sieve_extend.c ****         bitword_t* __restrict source_ptr = &bitarray[source_word];
 605:sieve_extend.c ****         // bitword_t* copy_ptr   = &bitarray[copy_word];
 606:sieve_extend.c ****         // bitword_t* source_ptr = &bitarray[source_word];
 607:sieve_extend.c ****         bitword_t* __restrict dest_ptr   = &bitarray[destination_stop_word];
 608:sieve_extend.c ****         counter_t size_word   = dest_ptr - copy_ptr;
 609:sieve_extend.c **** 
 610:sieve_extend.c ****         #pragma ivdep 
 611:sieve_extend.c ****         for (counter_t i = 0; (i+forward_distance) < size_word; i+=forward_distance, copy_ptr+=forw
 612:sieve_extend.c ****             #pragma ivdep
 613:sieve_extend.c ****             for (counter_t j = 0; j < forward_distance; ++j) 
 614:sieve_extend.c ****                 *(copy_ptr+j)  = (*(source_ptr+j  ) >> shift_flipped); 
 615:sieve_extend.c ****             #pragma ivdep
 616:sieve_extend.c ****             for (counter_t j = 0; j < forward_distance; ++j) 
 617:sieve_extend.c ****                 *(copy_ptr+j) |= (*(source_ptr+j+1) << shift);
 618:sieve_extend.c ****         }
 619:sieve_extend.c **** 
 620:sieve_extend.c ****         size_word = dest_ptr - copy_ptr;
 621:sieve_extend.c ****         #pragma ivdep 
 622:sieve_extend.c ****         for (counter_t i=0; i <= size_word; i++) 
 623:sieve_extend.c ****             *(copy_ptr+i) = (*(source_ptr+i) >> shift_flipped) | (*(source_ptr+i+1) << shift);
 624:sieve_extend.c **** 
 625:sieve_extend.c ****         // #pragma GCC ivdep
 626:sieve_extend.c ****         // for (; i <= size_word; i++) 
 627:sieve_extend.c ****         //     *(copy_ptr+i) = (*(source_ptr+i) >> shift_flipped) | (*(source_ptr+i+1) << shift);
 628:sieve_extend.c ****     }
 629:sieve_extend.c ****     else {
 630:sieve_extend.c ****         register counter_t i = 0;
 631:sieve_extend.c ****         bitword_t* copy_ptr   = &bitarray[copy_word];
 632:sieve_extend.c ****         bitword_t* source_ptr = &bitarray[source_word];
 633:sieve_extend.c ****         bitword_t* dest_ptr   = &bitarray[destination_stop_word];
GAS LISTING /tmp/cctyCFAS.s 			page 31


 634:sieve_extend.c ****         counter_t size_word   = dest_ptr - copy_ptr;
 635:sieve_extend.c ****         for (; i <= size_word; i++) 
 636:sieve_extend.c ****             *(copy_ptr+i) = (*(source_ptr+i) >> shift_flipped) | (*(source_ptr+i+1) << shift);
 637:sieve_extend.c ****     }
 638:sieve_extend.c **** 
 639:sieve_extend.c ****     // for (; i <= size_word; i++) 
 640:sieve_extend.c ****     //     *(copy_ptr+i) = (*(source_ptr+i) >> shift_flipped) | (*(source_ptr+i+1) << shift);
 641:sieve_extend.c **** 
 642:sieve_extend.c ****     // for (; i <= size_word; i++) 
 643:sieve_extend.c ****     //     bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_wo
 644:sieve_extend.c **** 
 645:sieve_extend.c ****     // for (; copy_word <= destination_stop_word; copy_word++, source_word++ ) 
 646:sieve_extend.c ****     //     bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1
 647:sieve_extend.c **** }
 648:sieve_extend.c **** 
 649:sieve_extend.c **** static inline counter_t extendSieve_shiftleft_unrolled(bitword_t* bitarray, const counter_t aligned
 650:sieve_extend.c ****     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_copy_word - 2) : 0; // s
 651:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 652:sieve_extend.c ****     counter_t distance = 0;
 653:sieve_extend.c ****     while (copy_word < fast_loop_stop_word) {
 654:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 655:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 656:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 657:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 658:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 659:sieve_extend.c ****         copy_word += 2;
 660:sieve_extend.c ****         source_word += 2;
 661:sieve_extend.c ****         distance += 2;
 662:sieve_extend.c ****     }
 663:sieve_extend.c ****     return distance;
 664:sieve_extend.c **** }
 665:sieve_extend.c **** 
 666:sieve_extend.c **** //static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source_start, const counte
 667:sieve_extend.c **** //    const bitword_t* destination_stop_ptr = &bitarray[wordindex(destination_stop)];
 668:sieve_extend.c **** //    const counter_t copy_start = source_start + size;
 669:sieve_extend.c **** //    register const bitshift_t shift = bitindex_calc(source_start) - bitindex_calc(copy_start);
 670:sieve_extend.c **** //    register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 671:sieve_extend.c **** //    register bitword_t* source_ptr = &bitarray[wordindex(source_start)];
 672:sieve_extend.c **** //    register bitword_t* copy_ptr = &bitarray[wordindex(copy_start)];
 673:sieve_extend.c **** //    const bitword_t* aligned_copy_ptr = min(source_ptr + size, destination_stop_ptr); // after <<
 674:sieve_extend.c **** //
 675:sieve_extend.c **** //    *copy_ptr |= ((*source_ptr >> shift) | (*(source_ptr+1) << shift_flipped)) & ~chopmask2(copy_
 676:sieve_extend.c **** //    copy_ptr++;
 677:sieve_extend.c **** //    source_ptr++;
 678:sieve_extend.c **** //
 679:sieve_extend.c **** //    while (copy_ptr+3 <= aligned_copy_ptr) {
 680:sieve_extend.c **** //        bitword_t source0 = *source_ptr >> shift;
 681:sieve_extend.c **** //        bitword_t source1 = *(source_ptr+1);
 682:sieve_extend.c **** //        *copy_ptr = (source0) | (source1 << shift_flipped);
 683:sieve_extend.c **** //        bitword_t source2 = *(source_ptr+2);
 684:sieve_extend.c **** //        *(copy_ptr+1) = (source1 >> shift) | (source2 << shift_flipped);
 685:sieve_extend.c **** //        bitword_t source3 = *(source_ptr+3);
 686:sieve_extend.c **** //        *(copy_ptr+2) = (source2 >> shift) | (source3 << shift_flipped);
 687:sieve_extend.c **** //
 688:sieve_extend.c **** //        copy_ptr+=3;
 689:sieve_extend.c **** //        source_ptr+=3;
 690:sieve_extend.c **** //    }
GAS LISTING /tmp/cctyCFAS.s 			page 32


 691:sieve_extend.c **** //
 692:sieve_extend.c **** //    while (copy_ptr <= aligned_copy_ptr) {
 693:sieve_extend.c **** //        register bitword_t source0 = *source_ptr >> shift;
 694:sieve_extend.c **** //        source_ptr++;
 695:sieve_extend.c **** //        register bitword_t source1 = *source_ptr << shift_flipped;
 696:sieve_extend.c **** //        *copy_ptr = source0 | source1;
 697:sieve_extend.c **** //        copy_ptr++;
 698:sieve_extend.c **** //    }
 699:sieve_extend.c **** //
 700:sieve_extend.c **** //    if (copy_ptr >= destination_stop_ptr) return;
 701:sieve_extend.c **** //
 702:sieve_extend.c **** //    source_ptr = copy_ptr - size; // recalibrate
 703:sieve_extend.c **** //    const size_t memsize = (size_t)size*sizeof(bitword_t);
 704:sieve_extend.c **** //     while (copy_ptr + size <= destination_stop_ptr) {
 705:sieve_extend.c **** //         memcpy(copy_ptr, source_ptr, memsize );
 706:sieve_extend.c **** //         copy_ptr += size;
 707:sieve_extend.c **** //     }
 708:sieve_extend.c **** //
 709:sieve_extend.c **** //    while (copy_ptr <= destination_stop_ptr) {
 710:sieve_extend.c **** //        // *copy_ptr++ = *source_ptr++;
 711:sieve_extend.c **** //        *copy_ptr = *source_ptr;
 712:sieve_extend.c **** //        copy_ptr++;
 713:sieve_extend.c **** //        source_ptr++;
 714:sieve_extend.c **** //    }
 715:sieve_extend.c **** //
 716:sieve_extend.c **** //}
 717:sieve_extend.c **** 
 718:sieve_extend.c **** 
 719:sieve_extend.c **** static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t source_start, const c
 886              		.loc 1 719 149 is_stmt 1 view -0
 887              		.cfi_startproc
 720:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 888              		.loc 1 720 5 view .LVU280
 721:sieve_extend.c ****    
 722:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 889              		.loc 1 722 5 view .LVU281
 890              	# sieve_extend.c:719: static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t
 719:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 891              		.loc 1 719 149 is_stmt 0 view .LVU282
 892 03c0 55       		push	rbp	#
 893              		.cfi_def_cfa_offset 16
 894              		.cfi_offset 6, -16
 895              	# sieve_extend.c:723:     const counter_t copy_start = source_start + size;
 723:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 896              		.loc 1 723 21 view .LVU283
 897 03c1 4C8D0416 		lea	r8, [rsi+rdx]	# copy_start,
 898              	# sieve_extend.c:722:     const counter_t destination_stop_word = wordindex(destination_stop);
 722:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 899              		.loc 1 722 21 view .LVU284
 900 03c5 4889C8   		mov	rax, rcx	# destination_stop_word, destination_stop
 901              	# sieve_extend.c:719: static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t
 719:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 902              		.loc 1 719 149 view .LVU285
 903 03c8 4889E5   		mov	rbp, rsp	#,
 904              		.cfi_def_cfa_register 6
 905 03cb 4157     		push	r15	#
 906              	# sieve_extend.c:724:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
GAS LISTING /tmp/cctyCFAS.s 			page 33


 724:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_calc(source_start);
 907              		.loc 1 724 39 view .LVU286
 908 03cd 4D89C2   		mov	r10, r8	# _4, copy_start
 909 03d0 4183E23F 		and	r10d, 63	# _4,
 910              	# sieve_extend.c:719: static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t
 719:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 911              		.loc 1 719 149 view .LVU287
 912 03d4 4156     		push	r14	#
 913              	# sieve_extend.c:722:     const counter_t destination_stop_word = wordindex(destination_stop);
 722:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 914              		.loc 1 722 21 view .LVU288
 915 03d6 48C1E806 		shr	rax, 6	# destination_stop_word,
 916 03da F7D1     		not	ecx	# tmp308
 917              	.LVL52:
 918              	# sieve_extend.c:719: static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t
 719:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 919              		.loc 1 719 149 view .LVU289
 920 03dc 4155     		push	r13	#
 921 03de 4154     		push	r12	#
 922              		.cfi_offset 15, -24
 923              		.cfi_offset 14, -32
 924              		.cfi_offset 13, -40
 925              		.cfi_offset 12, -48
 926              	# sieve_extend.c:724:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 927              		.loc 1 724 67 view .LVU290
 928 03e0 4989F4   		mov	r12, rsi	# _5, source_start
 929              	# sieve_extend.c:726:     register counter_t source_word = wordindex(source_start);
 725:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 726:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 930              		.loc 1 726 24 view .LVU291
 931 03e3 48C1EE06 		shr	rsi, 6	# source_start,
 932              	.LVL53:
 933              	# sieve_extend.c:719: static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t
 719:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 934              		.loc 1 719 149 view .LVU292
 935 03e7 53       		push	rbx	#
 936              	# sieve_extend.c:726:     register counter_t source_word = wordindex(source_start);
 937              		.loc 1 726 24 view .LVU293
 938 03e8 4989F1   		mov	r9, rsi	# source_word, source_start
 939 03eb 4E8D3CCD 		lea	r15, 0[0+r9*8]	# _179,
 939      00000000 
 940              	# sieve_extend.c:719: static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t
 719:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 941              		.loc 1 719 149 view .LVU294
 942 03f3 4883E4E0 		and	rsp, -32	#,
 943              		.cfi_offset 3, -56
 944              	.LVL54:
 723:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_calc(source_start);
 945              		.loc 1 723 5 is_stmt 1 view .LVU295
 724:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 946              		.loc 1 724 5 view .LVU296
 947              	# sieve_extend.c:726:     register counter_t source_word = wordindex(source_start);
 948              		.loc 1 726 24 is_stmt 0 view .LVU297
 949 03f7 48897424 		mov	QWORD PTR -32[rsp], rsi	# %sfp, source_word
 949      E0
 950              	# sieve_extend.c:727:     register counter_t copy_word = wordindex(copy_start);
 727:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
GAS LISTING /tmp/cctyCFAS.s 			page 34


 951              		.loc 1 727 24 view .LVU298
 952 03fc 4C89C6   		mov	rsi, r8	# copy_start, copy_start
 953 03ff 48C1EE06 		shr	rsi, 6	# copy_start,
 954 0403 488D1CF5 		lea	rbx, 0[0+rsi*8]	# _176,
 954      00000000 
 955              	# sieve_extend.c:724:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 724:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 956              		.loc 1 724 67 view .LVU299
 957 040b 4183E43F 		and	r12d, 63	# _5,
 958              	.LVL55:
 725:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 959              		.loc 1 725 5 is_stmt 1 view .LVU300
 726:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 960              		.loc 1 726 5 view .LVU301
 961              		.loc 1 727 5 view .LVU302
 728:sieve_extend.c **** 
 729:sieve_extend.c ****     if (copy_word >= destination_stop_word) { 
 962              		.loc 1 729 5 view .LVU303
 963              	# sieve_extend.c:724:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 724:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 964              		.loc 1 724 31 is_stmt 0 view .LVU304
 965 040f 4D89D1   		mov	r9, r10	# shift, _4
 966              	# sieve_extend.c:722:     const counter_t destination_stop_word = wordindex(destination_stop);
 722:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 967              		.loc 1 722 21 view .LVU305
 968 0412 48894424 		mov	QWORD PTR -8[rsp], rax	# %sfp, destination_stop_word
 968      F8
 969              	.LVL56:
 722:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 970              		.loc 1 722 21 view .LVU306
 971 0417 4C8D2C1F 		lea	r13, [rdi+rbx]	# _177,
 972              	# sieve_extend.c:724:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 724:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 973              		.loc 1 724 31 view .LVU307
 974 041b 4D29E1   		sub	r9, r12	# shift, _5
 975              	.LVL57:
 724:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 976              		.loc 1 724 31 view .LVU308
 977 041e 4D8B7500 		mov	r14, QWORD PTR 0[r13]	# pretmp_178, *_177
 978              	# sieve_extend.c:725:     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 725:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 979              		.loc 1 725 31 view .LVU309
 980 0422 4983C440 		add	r12, 64	# tmp301,
 981              	.LVL58:
 725:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 982              		.loc 1 725 31 view .LVU310
 983 0426 4E8D1C3F 		lea	r11, [rdi+r15]	# _180,
 984 042a 4D29D4   		sub	r12, r10	# tmp301, _4
 985              	.LVL59:
 725:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 986              		.loc 1 725 31 view .LVU311
 987 042d 4C897C24 		mov	QWORD PTR -24[rsp], r15	# %sfp, _179
 987      E8
 988 0432 49C7C7FF 		mov	r15, -1	# tmp307,
 988      FFFFFF
 989 0439 C4C2B1F7 		shlx	rax, QWORD PTR [r11], r9	# tmp303, *_180, shift
 989      03
GAS LISTING /tmp/cctyCFAS.s 			page 35


 990 043e C4429BF7 		shrx	r8, r14, r12	# tmp305, pretmp_178, shift_flipped
 990      C6
 991              	.LVL60:
 725:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 992              		.loc 1 725 31 view .LVU312
 993 0443 C442A9F7 		shlx	r10, r15, r10	# _189, tmp307, _4
 993      D7
 994              	.LVL61:
 725:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 995              		.loc 1 725 31 view .LVU313
 996 0448 44894C24 		mov	DWORD PTR -12[rsp], r9d	# %sfp, shift
 996      F4
 997 044d 4C09C0   		or	rax, r8	# _186, tmp305
 998 0450 C442F3F7 		shrx	r15, r15, rcx	# _193, tmp307, tmp308
 998      FF
 999              	# sieve_extend.c:729:     if (copy_word >= destination_stop_word) { 
 1000              		.loc 1 729 8 view .LVU314
 1001 0455 48397424 		cmp	QWORD PTR -8[rsp], rsi	# %sfp, copy_word
 1001      F8
 1002 045a 0F865009 		jbe	.L260	#,
 1002      0000
 1003              	# sieve_extend.c:738:                                 & keepmask(copy_start);
 730:sieve_extend.c ****         bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose da
 731:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 732:sieve_extend.c ****                                 & keepmask(copy_start) & chopmask(destination_stop);
 733:sieve_extend.c ****         return; // rapid exit for one word variant
 734:sieve_extend.c ****     }
 735:sieve_extend.c **** 
 736:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose data
 737:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 738:sieve_extend.c ****                                 & keepmask(copy_start);
 1004              		.loc 1 738 33 view .LVU315
 1005 0460 4C21D0   		and	rax, r10	# tmp314, _189
 1006              	# sieve_extend.c:736:     bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start
 736:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 1007              		.loc 1 736 25 view .LVU316
 1008 0463 4C09F0   		or	rax, r14	# tmp315, pretmp_178
 1009 0466 49894500 		mov	QWORD PTR 0[r13], rax	# *_177, tmp315
 1010 046a 4589E0   		mov	r8d, r12d	# _184, shift_flipped
 736:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 1011              		.loc 1 736 5 is_stmt 1 view .LVU317
 739:sieve_extend.c **** 
 740:sieve_extend.c ****     copy_word++;
 1012              		.loc 1 740 5 view .LVU318
 1013              	# sieve_extend.c:740:     copy_word++;
 1014              		.loc 1 740 14 is_stmt 0 view .LVU319
 1015 046d 4C8D7601 		lea	r14, 1[rsi]	# copy_word,
 1016              	.LVL62:
 741:sieve_extend.c **** 
 742:sieve_extend.c ****     debug { printf("...start - %ju - %ju - end\n",(uintmax_t)wordindex(copy_start), (uintmax_t)dest
 1017              		.loc 1 742 5 is_stmt 1 view .LVU320
 743:sieve_extend.c **** 
 744:sieve_extend.c ****     if (size >= WORD_SIZE_counter) {
 1018              		.loc 1 744 5 view .LVU321
 1019              	# sieve_extend.c:744:     if (size >= WORD_SIZE_counter) {
 1020              		.loc 1 744 8 is_stmt 0 view .LVU322
 1021 0471 4883FA3F 		cmp	rdx, 63	# size,
GAS LISTING /tmp/cctyCFAS.s 			page 36


 1022 0475 0F87AD03 		ja	.L261	#,
 1022      0000
 745:sieve_extend.c ****         register const counter_t loop_distance = destination_stop_word - copy_word;
 746:sieve_extend.c ****         #pragma ivdep
 747:sieve_extend.c ****         for (register counter_t i = 0; i <loop_distance; i++) {
 748:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 749:sieve_extend.c ****         }
 750:sieve_extend.c ****         source_word += loop_distance; copy_word+= loop_distance;
 751:sieve_extend.c ****     }
 752:sieve_extend.c **** 
 753:sieve_extend.c ****     #pragma ivdep
 754:sieve_extend.c ****     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 1023              		.loc 1 754 12 is_stmt 1 discriminator 1 view .LVU323
 1024              	# sieve_extend.c:754:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 1025              		.loc 1 754 5 is_stmt 0 discriminator 1 view .LVU324
 1026 047b 488B5424 		mov	rdx, QWORD PTR -8[rsp]	# destination_stop_word, %sfp
 1026      F8
 1027              	.LVL63:
 1028              		.loc 1 754 5 discriminator 1 view .LVU325
 1029 0480 4C39F2   		cmp	rdx, r14	# destination_stop_word, copy_word
 1030 0483 0F828503 		jb	.L76	#,
 1030      0000
 1031 0489 4C8B5C24 		mov	r11, QWORD PTR -32[rsp]	# source_word, %sfp
 1031      E0
 1032 048e 488D4A01 		lea	rcx, 1[rdx]	# _198,
 1033 0492 4989D5   		mov	r13, rdx	# _173, destination_stop_word
 1034 0495 4A8D14F5 		lea	rdx, 0[0+r14*8]	# _166,
 1034      00000000 
 1035 049d 4A8D04DD 		lea	rax, 0[0+r11*8]	# _225,
 1035      00000000 
 1036 04a5 4C8D5220 		lea	r10, 32[rdx]	# tmp380,
 1037 04a9 48894C24 		mov	QWORD PTR -24[rsp], rcx	# %sfp, _198
 1037      E8
 1038 04ae 4D29F5   		sub	r13, r14	# _173, copy_word
 1039 04b1 4A8D0CDD 		lea	rcx, 40[0+r11*8]	# _168,
 1039      28000000 
 1040 04b9 4C39D0   		cmp	rax, r10	# _225, tmp380
 1041 04bc 410F9DC3 		setge	r11b	#, tmp382
 1042 04c0 4839CA   		cmp	rdx, rcx	# _166, _168
 1043 04c3 410F9DC2 		setge	r10b	#, tmp384
 1044 04c7 4508D3   		or	r11b, r10b	# tmp382, tmp384
 1045 04ca 488D5E02 		lea	rbx, 2[rsi]	# _175,
 1046 04ce 0F84C506 		je	.L68	#,
 1046      0000
 1047 04d4 4983FD03 		cmp	r13, 3	# _173,
 1048 04d8 410F97C3 		seta	r11b	#, tmp387
 1049 04dc 483B5C24 		cmp	rbx, QWORD PTR -24[rsp]	# _175, %sfp
 1049      E8
 1050 04e1 410F96C2 		setbe	r10b	#, tmp389
 1051 04e5 4584D3   		test	r11b, r10b	# tmp387, tmp389
 1052 04e8 0F84AB06 		je	.L68	#,
 1052      0000
 1053 04ee 4C8B5424 		mov	r10, QWORD PTR -8[rsp]	# tmp391, %sfp
 1053      F8
 1054 04f3 C5F96E4C 		vmovd	xmm1, DWORD PTR -12[rsp]	# _182, %sfp
 1054      24F4
 1055 04f9 4929F2   		sub	r10, rsi	# tmp391, copy_word
GAS LISTING /tmp/cctyCFAS.s 			page 37


 1056 04fc 483B5C24 		cmp	rbx, QWORD PTR -24[rsp]	# _175, %sfp
 1056      E8
 1057 0501 BE010000 		mov	esi, 1	# tmp392,
 1057      00
 1058 0506 4C0F47D6 		cmova	r10, rsi	# tmp391,, niters.133, tmp392
 1059 050a C4C1796E 		vmovd	xmm0, r12d	# _184, _184
 1059      C4
 1060 050f 4D89D3   		mov	r11, r10	# bnd.134, niters.133
 1061 0512 49C1EB02 		shr	r11, 2	# bnd.134,
 1062 0516 49C1E305 		sal	r11, 5	# bnd.134,
 1063 051a 4D8D43E0 		lea	r8, -32[r11]	# tmp446,
 1064 051e 49C1E805 		shr	r8, 5	# tmp444,
 1065 0522 49FFC0   		inc	r8	# tmp447
 1066 0525 488D740F 		lea	rsi, -32[rdi+rcx]	# vectp.143,
 1066      E0
 1067 052a 4801F8   		add	rax, rdi	# vectp.139, bitarray
 1068 052d 4801FA   		add	rdx, rdi	# vectp.148, bitarray
 1069              	# sieve_extend.c:754:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 1070              		.loc 1 754 5 view .LVU326
 1071 0530 31C9     		xor	ecx, ecx	# ivtmp.178
 1072 0532 4183E007 		and	r8d, 7	# tmp448,
 1073 0536 0F841301 		je	.L77	#,
 1073      0000
 1074 053c 4983F801 		cmp	r8, 1	# tmp448,
 1075 0540 0F84E100 		je	.L194	#,
 1075      0000
 1076 0546 4983F802 		cmp	r8, 2	# tmp448,
 1077 054a 0F84B800 		je	.L195	#,
 1077      0000
 1078 0550 4983F803 		cmp	r8, 3	# tmp448,
 1079 0554 0F848E00 		je	.L196	#,
 1079      0000
 1080 055a 4983F804 		cmp	r8, 4	# tmp448,
 1081 055e 7469     		je	.L197	#,
 1082 0560 4983F805 		cmp	r8, 5	# tmp448,
 1083 0564 7443     		je	.L198	#,
 1084 0566 4983F806 		cmp	r8, 6	# tmp448,
 1085 056a 741D     		je	.L199	#,
 1086              	.LVL64:
 755:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1087              		.loc 1 755 9 is_stmt 1 view .LVU327
 1088              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1089              		.loc 1 755 99 is_stmt 0 view .LVU328
 1090 056c C5FE6F36 		vmovdqu	ymm6, YMMWORD PTR [rsi]	# tmp929, MEM[base: vectp.143_194, index: ivtmp.178_320, offset: 0
 1091              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1092              		.loc 1 755 54 view .LVU329
 1093 0570 C5FE6F38 		vmovdqu	ymm7, YMMWORD PTR [rax]	# tmp930, MEM[base: vectp.139_2, index: ivtmp.178_320, offset: 0B]
 1094              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1095              		.loc 1 755 99 view .LVU330
 1096 0574 C5CDF3D1 		vpsllq	ymm2, ymm6, xmm1	# vect__67.145, tmp929, _182
 1097              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1098              		.loc 1 755 54 view .LVU331
 1099 0578 C5C5D3D8 		vpsrlq	ymm3, ymm7, xmm0	# vect__62.141, tmp930, _184
 1100 057c B9200000 		mov	ecx, 32	# ivtmp.178,
 1100      00
 1101              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1102              		.loc 1 755 72 view .LVU332
GAS LISTING /tmp/cctyCFAS.s 			page 38


 1103 0581 C5EDEBE3 		vpor	ymm4, ymm2, ymm3	# vect__70.146, vect__67.145, vect__62.141
 1104              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1105              		.loc 1 755 29 view .LVU333
 1106 0585 C5FE7F22 		vmovdqu	YMMWORD PTR [rdx], ymm4	# MEM[base: vectp.148_31, index: ivtmp.178_320, offset: 0B], vect_
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1107              		.loc 1 754 48 is_stmt 1 view .LVU334
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1108              		.loc 1 754 12 view .LVU335
 1109              	.L199:
 1110              		.loc 1 755 9 view .LVU336
 1111              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1112              		.loc 1 755 99 is_stmt 0 view .LVU337
 1113 0589 C5FE6F2C 		vmovdqu	ymm5, YMMWORD PTR [rsi+rcx]	# tmp931, MEM[base: vectp.143_194, index: ivtmp.178_320, offse
 1113      0E
 1114              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1115              		.loc 1 755 54 view .LVU338
 1116 058e C57E6F0C 		vmovdqu	ymm9, YMMWORD PTR [rax+rcx]	# tmp932, MEM[base: vectp.139_2, index: ivtmp.178_320, offset:
 1116      08
 1117              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1118              		.loc 1 755 99 view .LVU339
 1119 0593 C555F3C1 		vpsllq	ymm8, ymm5, xmm1	# vect__67.145, tmp931, _182
 1120              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1121              		.loc 1 755 54 view .LVU340
 1122 0597 C535D3D0 		vpsrlq	ymm10, ymm9, xmm0	# vect__62.141, tmp932, _184
 1123              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1124              		.loc 1 755 72 view .LVU341
 1125 059b C4413DEB 		vpor	ymm11, ymm8, ymm10	# vect__70.146, vect__67.145, vect__62.141
 1125      DA
 1126              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1127              		.loc 1 755 29 view .LVU342
 1128 05a0 C57E7F1C 		vmovdqu	YMMWORD PTR [rdx+rcx], ymm11	# MEM[base: vectp.148_31, index: ivtmp.178_320, offset: 0B], 
 1128      0A
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1129              		.loc 1 754 48 is_stmt 1 view .LVU343
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1130              		.loc 1 754 12 view .LVU344
 1131 05a5 4883C120 		add	rcx, 32	# ivtmp.178,
 1132              	.L198:
 1133              		.loc 1 755 9 view .LVU345
 1134              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1135              		.loc 1 755 99 is_stmt 0 view .LVU346
 1136 05a9 C57E6F24 		vmovdqu	ymm12, YMMWORD PTR [rsi+rcx]	# tmp933, MEM[base: vectp.143_194, index: ivtmp.178_320, offs
 1136      0E
 1137              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1138              		.loc 1 755 54 view .LVU347
 1139 05ae C57E6F34 		vmovdqu	ymm14, YMMWORD PTR [rax+rcx]	# tmp934, MEM[base: vectp.139_2, index: ivtmp.178_320, offset
 1139      08
 1140              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1141              		.loc 1 755 99 view .LVU348
 1142 05b3 C51DF3E9 		vpsllq	ymm13, ymm12, xmm1	# vect__67.145, tmp933, _182
 1143              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1144              		.loc 1 755 54 view .LVU349
 1145 05b7 C50DD3F8 		vpsrlq	ymm15, ymm14, xmm0	# vect__62.141, tmp934, _184
 1146              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1147              		.loc 1 755 72 view .LVU350
 1148 05bb C4C115EB 		vpor	ymm6, ymm13, ymm15	# vect__70.146, vect__67.145, vect__62.141
 1148      F7
GAS LISTING /tmp/cctyCFAS.s 			page 39


 1149              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1150              		.loc 1 755 29 view .LVU351
 1151 05c0 C5FE7F34 		vmovdqu	YMMWORD PTR [rdx+rcx], ymm6	# MEM[base: vectp.148_31, index: ivtmp.178_320, offset: 0B], v
 1151      0A
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1152              		.loc 1 754 48 is_stmt 1 view .LVU352
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1153              		.loc 1 754 12 view .LVU353
 1154 05c5 4883C120 		add	rcx, 32	# ivtmp.178,
 1155              	.L197:
 1156              		.loc 1 755 9 view .LVU354
 1157              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1158              		.loc 1 755 99 is_stmt 0 view .LVU355
 1159 05c9 C5FE6F14 		vmovdqu	ymm2, YMMWORD PTR [rsi+rcx]	# tmp935, MEM[base: vectp.143_194, index: ivtmp.178_320, offse
 1159      0E
 1160              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1161              		.loc 1 755 54 view .LVU356
 1162 05ce C5FE6F1C 		vmovdqu	ymm3, YMMWORD PTR [rax+rcx]	# tmp936, MEM[base: vectp.139_2, index: ivtmp.178_320, offset:
 1162      08
 1163              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1164              		.loc 1 755 99 view .LVU357
 1165 05d3 C5EDF3F9 		vpsllq	ymm7, ymm2, xmm1	# vect__67.145, tmp935, _182
 1166              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1167              		.loc 1 755 54 view .LVU358
 1168 05d7 C5E5D3E0 		vpsrlq	ymm4, ymm3, xmm0	# vect__62.141, tmp936, _184
 1169              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1170              		.loc 1 755 72 view .LVU359
 1171 05db C5C5EBEC 		vpor	ymm5, ymm7, ymm4	# vect__70.146, vect__67.145, vect__62.141
 1172              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1173              		.loc 1 755 29 view .LVU360
 1174 05df C5FE7F2C 		vmovdqu	YMMWORD PTR [rdx+rcx], ymm5	# MEM[base: vectp.148_31, index: ivtmp.178_320, offset: 0B], v
 1174      0A
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1175              		.loc 1 754 48 is_stmt 1 view .LVU361
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1176              		.loc 1 754 12 view .LVU362
 1177 05e4 4883C120 		add	rcx, 32	# ivtmp.178,
 1178              	.L196:
 1179              		.loc 1 755 9 view .LVU363
 1180              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1181              		.loc 1 755 99 is_stmt 0 view .LVU364
 1182 05e8 C57E6F04 		vmovdqu	ymm8, YMMWORD PTR [rsi+rcx]	# tmp937, MEM[base: vectp.143_194, index: ivtmp.178_320, offse
 1182      0E
 1183              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1184              		.loc 1 755 54 view .LVU365
 1185 05ed C57E6F14 		vmovdqu	ymm10, YMMWORD PTR [rax+rcx]	# tmp938, MEM[base: vectp.139_2, index: ivtmp.178_320, offset
 1185      08
 1186              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1187              		.loc 1 755 99 view .LVU366
 1188 05f2 C53DF3C9 		vpsllq	ymm9, ymm8, xmm1	# vect__67.145, tmp937, _182
 1189              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1190              		.loc 1 755 54 view .LVU367
 1191 05f6 C52DD3D8 		vpsrlq	ymm11, ymm10, xmm0	# vect__62.141, tmp938, _184
 1192              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1193              		.loc 1 755 72 view .LVU368
 1194 05fa C44135EB 		vpor	ymm12, ymm9, ymm11	# vect__70.146, vect__67.145, vect__62.141
 1194      E3
GAS LISTING /tmp/cctyCFAS.s 			page 40


 1195              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1196              		.loc 1 755 29 view .LVU369
 1197 05ff C57E7F24 		vmovdqu	YMMWORD PTR [rdx+rcx], ymm12	# MEM[base: vectp.148_31, index: ivtmp.178_320, offset: 0B], 
 1197      0A
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1198              		.loc 1 754 48 is_stmt 1 view .LVU370
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1199              		.loc 1 754 12 view .LVU371
 1200 0604 4883C120 		add	rcx, 32	# ivtmp.178,
 1201              	.L195:
 1202              		.loc 1 755 9 view .LVU372
 1203              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1204              		.loc 1 755 99 is_stmt 0 view .LVU373
 1205 0608 C57E6F2C 		vmovdqu	ymm13, YMMWORD PTR [rsi+rcx]	# tmp939, MEM[base: vectp.143_194, index: ivtmp.178_320, offs
 1205      0E
 1206              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1207              		.loc 1 755 54 view .LVU374
 1208 060d C57E6F3C 		vmovdqu	ymm15, YMMWORD PTR [rax+rcx]	# tmp940, MEM[base: vectp.139_2, index: ivtmp.178_320, offset
 1208      08
 1209              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1210              		.loc 1 755 99 view .LVU375
 1211 0612 C515F3F1 		vpsllq	ymm14, ymm13, xmm1	# vect__67.145, tmp939, _182
 1212              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1213              		.loc 1 755 54 view .LVU376
 1214 0616 C585D3F0 		vpsrlq	ymm6, ymm15, xmm0	# vect__62.141, tmp940, _184
 1215              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1216              		.loc 1 755 72 view .LVU377
 1217 061a C58DEBD6 		vpor	ymm2, ymm14, ymm6	# vect__70.146, vect__67.145, vect__62.141
 1218              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1219              		.loc 1 755 29 view .LVU378
 1220 061e C5FE7F14 		vmovdqu	YMMWORD PTR [rdx+rcx], ymm2	# MEM[base: vectp.148_31, index: ivtmp.178_320, offset: 0B], v
 1220      0A
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1221              		.loc 1 754 48 is_stmt 1 view .LVU379
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1222              		.loc 1 754 12 view .LVU380
 1223 0623 4883C120 		add	rcx, 32	# ivtmp.178,
 1224              	.L194:
 1225              		.loc 1 755 9 view .LVU381
 1226              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1227              		.loc 1 755 99 is_stmt 0 view .LVU382
 1228 0627 C5FE6F3C 		vmovdqu	ymm7, YMMWORD PTR [rsi+rcx]	# tmp941, MEM[base: vectp.143_194, index: ivtmp.178_320, offse
 1228      0E
 1229              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1230              		.loc 1 755 54 view .LVU383
 1231 062c C5FE6F1C 		vmovdqu	ymm3, YMMWORD PTR [rax+rcx]	# tmp942, MEM[base: vectp.139_2, index: ivtmp.178_320, offset:
 1231      08
 1232              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1233              		.loc 1 755 99 view .LVU384
 1234 0631 C5C5F3E1 		vpsllq	ymm4, ymm7, xmm1	# vect__67.145, tmp941, _182
 1235              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1236              		.loc 1 755 54 view .LVU385
 1237 0635 C5E5D3E8 		vpsrlq	ymm5, ymm3, xmm0	# vect__62.141, tmp942, _184
 1238              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1239              		.loc 1 755 72 view .LVU386
 1240 0639 C55DEBC5 		vpor	ymm8, ymm4, ymm5	# vect__70.146, vect__67.145, vect__62.141
 1241              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
GAS LISTING /tmp/cctyCFAS.s 			page 41


 1242              		.loc 1 755 29 view .LVU387
 1243 063d C57E7F04 		vmovdqu	YMMWORD PTR [rdx+rcx], ymm8	# MEM[base: vectp.148_31, index: ivtmp.178_320, offset: 0B], v
 1243      0A
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1244              		.loc 1 754 48 is_stmt 1 view .LVU388
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1245              		.loc 1 754 12 view .LVU389
 1246 0642 4883C120 		add	rcx, 32	# ivtmp.178,
 1247 0646 4C39D9   		cmp	rcx, r11	# ivtmp.178, _322
 1248 0649 0F842601 		je	.L244	#,
 1248      0000
 1249              	.L77:
 1250              		.loc 1 755 9 discriminator 2 view .LVU390
 1251              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1252              		.loc 1 755 99 is_stmt 0 discriminator 2 view .LVU391
 1253 064f C57E6F0C 		vmovdqu	ymm9, YMMWORD PTR [rsi+rcx]	# tmp875, MEM[base: vectp.143_194, index: ivtmp.178_320, offse
 1253      0E
 1254              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1255              		.loc 1 755 54 discriminator 2 view .LVU392
 1256 0654 C57E6F1C 		vmovdqu	ymm11, YMMWORD PTR [rax+rcx]	# tmp876, MEM[base: vectp.139_2, index: ivtmp.178_320, offset
 1256      08
 1257              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1258              		.loc 1 755 99 discriminator 2 view .LVU393
 1259 0659 C535F3D1 		vpsllq	ymm10, ymm9, xmm1	# vect__67.145, tmp875, _182
 1260              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1261              		.loc 1 755 54 discriminator 2 view .LVU394
 1262 065d C525D3E0 		vpsrlq	ymm12, ymm11, xmm0	# vect__62.141, tmp876, _184
 1263              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1264              		.loc 1 755 72 discriminator 2 view .LVU395
 1265 0661 C4412DEB 		vpor	ymm13, ymm10, ymm12	# vect__70.146, vect__67.145, vect__62.141
 1265      EC
 1266              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1267              		.loc 1 755 29 discriminator 2 view .LVU396
 1268 0666 C57E7F2C 		vmovdqu	YMMWORD PTR [rdx+rcx], ymm13	# MEM[base: vectp.148_31, index: ivtmp.178_320, offset: 0B], 
 1268      0A
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1269              		.loc 1 754 48 is_stmt 1 discriminator 2 view .LVU397
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1270              		.loc 1 754 12 discriminator 2 view .LVU398
 1271              		.loc 1 755 9 discriminator 2 view .LVU399
 1272              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1273              		.loc 1 755 99 is_stmt 0 discriminator 2 view .LVU400
 1274 066b C57E6F74 		vmovdqu	ymm14, YMMWORD PTR 32[rsi+rcx]	# tmp877, MEM[base: vectp.143_194, index: ivtmp.178_320, of
 1274      0E20
 1275              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1276              		.loc 1 755 54 discriminator 2 view .LVU401
 1277 0671 C5FE6F74 		vmovdqu	ymm6, YMMWORD PTR 32[rax+rcx]	# tmp878, MEM[base: vectp.139_2, index: ivtmp.178_320, offse
 1277      0820
 1278              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1279              		.loc 1 755 99 discriminator 2 view .LVU402
 1280 0677 C50DF3F9 		vpsllq	ymm15, ymm14, xmm1	# vect__67.145, tmp877, _182
 1281              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1282              		.loc 1 755 54 discriminator 2 view .LVU403
 1283 067b C5CDD3D0 		vpsrlq	ymm2, ymm6, xmm0	# vect__62.141, tmp878, _184
 1284              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1285              		.loc 1 755 72 discriminator 2 view .LVU404
 1286 067f C585EBFA 		vpor	ymm7, ymm15, ymm2	# vect__70.146, vect__67.145, vect__62.141
GAS LISTING /tmp/cctyCFAS.s 			page 42


 1287              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1288              		.loc 1 755 29 discriminator 2 view .LVU405
 1289 0683 C5FE7F7C 		vmovdqu	YMMWORD PTR 32[rdx+rcx], ymm7	# MEM[base: vectp.148_31, index: ivtmp.178_320, offset: 0B],
 1289      0A20
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1290              		.loc 1 754 48 is_stmt 1 discriminator 2 view .LVU406
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1291              		.loc 1 754 12 discriminator 2 view .LVU407
 1292              		.loc 1 755 9 discriminator 2 view .LVU408
 1293              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1294              		.loc 1 755 99 is_stmt 0 discriminator 2 view .LVU409
 1295 0689 C5FE6F64 		vmovdqu	ymm4, YMMWORD PTR 64[rsi+rcx]	# tmp879, MEM[base: vectp.143_194, index: ivtmp.178_320, off
 1295      0E40
 1296              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1297              		.loc 1 755 54 discriminator 2 view .LVU410
 1298 068f C5FE6F5C 		vmovdqu	ymm3, YMMWORD PTR 64[rax+rcx]	# tmp880, MEM[base: vectp.139_2, index: ivtmp.178_320, offse
 1298      0840
 1299              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1300              		.loc 1 755 99 discriminator 2 view .LVU411
 1301 0695 C5DDF3E9 		vpsllq	ymm5, ymm4, xmm1	# vect__67.145, tmp879, _182
 1302              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1303              		.loc 1 755 54 discriminator 2 view .LVU412
 1304 0699 C565D3C0 		vpsrlq	ymm8, ymm3, xmm0	# vect__62.141, tmp880, _184
 1305              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1306              		.loc 1 755 72 discriminator 2 view .LVU413
 1307 069d C44155EB 		vpor	ymm9, ymm5, ymm8	# vect__70.146, vect__67.145, vect__62.141
 1307      C8
 1308              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1309              		.loc 1 755 29 discriminator 2 view .LVU414
 1310 06a2 C57E7F4C 		vmovdqu	YMMWORD PTR 64[rdx+rcx], ymm9	# MEM[base: vectp.148_31, index: ivtmp.178_320, offset: 0B],
 1310      0A40
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1311              		.loc 1 754 48 is_stmt 1 discriminator 2 view .LVU415
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1312              		.loc 1 754 12 discriminator 2 view .LVU416
 1313              		.loc 1 755 9 discriminator 2 view .LVU417
 1314              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1315              		.loc 1 755 99 is_stmt 0 discriminator 2 view .LVU418
 1316 06a8 C57E6F54 		vmovdqu	ymm10, YMMWORD PTR 96[rsi+rcx]	# tmp881, MEM[base: vectp.143_194, index: ivtmp.178_320, of
 1316      0E60
 1317              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1318              		.loc 1 755 54 discriminator 2 view .LVU419
 1319 06ae C57E6F64 		vmovdqu	ymm12, YMMWORD PTR 96[rax+rcx]	# tmp882, MEM[base: vectp.139_2, index: ivtmp.178_320, offs
 1319      0860
 1320              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1321              		.loc 1 755 99 discriminator 2 view .LVU420
 1322 06b4 C52DF3D9 		vpsllq	ymm11, ymm10, xmm1	# vect__67.145, tmp881, _182
 1323              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1324              		.loc 1 755 54 discriminator 2 view .LVU421
 1325 06b8 C51DD3E8 		vpsrlq	ymm13, ymm12, xmm0	# vect__62.141, tmp882, _184
 1326              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1327              		.loc 1 755 72 discriminator 2 view .LVU422
 1328 06bc C44125EB 		vpor	ymm14, ymm11, ymm13	# vect__70.146, vect__67.145, vect__62.141
 1328      F5
 1329              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1330              		.loc 1 755 29 discriminator 2 view .LVU423
 1331 06c1 C57E7F74 		vmovdqu	YMMWORD PTR 96[rdx+rcx], ymm14	# MEM[base: vectp.148_31, index: ivtmp.178_320, offset: 0B]
GAS LISTING /tmp/cctyCFAS.s 			page 43


 1331      0A60
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1332              		.loc 1 754 48 is_stmt 1 discriminator 2 view .LVU424
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1333              		.loc 1 754 12 discriminator 2 view .LVU425
 1334              		.loc 1 755 9 discriminator 2 view .LVU426
 1335              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1336              		.loc 1 755 99 is_stmt 0 discriminator 2 view .LVU427
 1337 06c7 C57E6FBC 		vmovdqu	ymm15, YMMWORD PTR 128[rsi+rcx]	# tmp883, MEM[base: vectp.143_194, index: ivtmp.178_320, o
 1337      0E800000 
 1337      00
 1338              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1339              		.loc 1 755 54 discriminator 2 view .LVU428
 1340 06d0 C5FE6F94 		vmovdqu	ymm2, YMMWORD PTR 128[rax+rcx]	# tmp884, MEM[base: vectp.139_2, index: ivtmp.178_320, offs
 1340      08800000 
 1340      00
 1341              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1342              		.loc 1 755 99 discriminator 2 view .LVU429
 1343 06d9 C585F3F1 		vpsllq	ymm6, ymm15, xmm1	# vect__67.145, tmp883, _182
 1344              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1345              		.loc 1 755 54 discriminator 2 view .LVU430
 1346 06dd C5EDD3F8 		vpsrlq	ymm7, ymm2, xmm0	# vect__62.141, tmp884, _184
 1347              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1348              		.loc 1 755 72 discriminator 2 view .LVU431
 1349 06e1 C5CDEBE7 		vpor	ymm4, ymm6, ymm7	# vect__70.146, vect__67.145, vect__62.141
 1350              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1351              		.loc 1 755 29 discriminator 2 view .LVU432
 1352 06e5 C5FE7FA4 		vmovdqu	YMMWORD PTR 128[rdx+rcx], ymm4	# MEM[base: vectp.148_31, index: ivtmp.178_320, offset: 0B]
 1352      0A800000 
 1352      00
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1353              		.loc 1 754 48 is_stmt 1 discriminator 2 view .LVU433
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1354              		.loc 1 754 12 discriminator 2 view .LVU434
 1355              		.loc 1 755 9 discriminator 2 view .LVU435
 1356              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1357              		.loc 1 755 99 is_stmt 0 discriminator 2 view .LVU436
 1358 06ee C5FE6FAC 		vmovdqu	ymm5, YMMWORD PTR 160[rsi+rcx]	# tmp885, MEM[base: vectp.143_194, index: ivtmp.178_320, of
 1358      0EA00000 
 1358      00
 1359              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1360              		.loc 1 755 54 discriminator 2 view .LVU437
 1361 06f7 C5FE6F9C 		vmovdqu	ymm3, YMMWORD PTR 160[rax+rcx]	# tmp886, MEM[base: vectp.139_2, index: ivtmp.178_320, offs
 1361      08A00000 
 1361      00
 1362              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1363              		.loc 1 755 99 discriminator 2 view .LVU438
 1364 0700 C555F3C1 		vpsllq	ymm8, ymm5, xmm1	# vect__67.145, tmp885, _182
 1365              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1366              		.loc 1 755 54 discriminator 2 view .LVU439
 1367 0704 C565D3C8 		vpsrlq	ymm9, ymm3, xmm0	# vect__62.141, tmp886, _184
 1368              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1369              		.loc 1 755 72 discriminator 2 view .LVU440
 1370 0708 C4413DEB 		vpor	ymm10, ymm8, ymm9	# vect__70.146, vect__67.145, vect__62.141
 1370      D1
 1371              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1372              		.loc 1 755 29 discriminator 2 view .LVU441
GAS LISTING /tmp/cctyCFAS.s 			page 44


 1373 070d C57E7F94 		vmovdqu	YMMWORD PTR 160[rdx+rcx], ymm10	# MEM[base: vectp.148_31, index: ivtmp.178_320, offset: 0B
 1373      0AA00000 
 1373      00
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1374              		.loc 1 754 48 is_stmt 1 discriminator 2 view .LVU442
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1375              		.loc 1 754 12 discriminator 2 view .LVU443
 1376              		.loc 1 755 9 discriminator 2 view .LVU444
 1377              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1378              		.loc 1 755 99 is_stmt 0 discriminator 2 view .LVU445
 1379 0716 C57E6F9C 		vmovdqu	ymm11, YMMWORD PTR 192[rsi+rcx]	# tmp887, MEM[base: vectp.143_194, index: ivtmp.178_320, o
 1379      0EC00000 
 1379      00
 1380              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1381              		.loc 1 755 54 discriminator 2 view .LVU446
 1382 071f C57E6FAC 		vmovdqu	ymm13, YMMWORD PTR 192[rax+rcx]	# tmp888, MEM[base: vectp.139_2, index: ivtmp.178_320, off
 1382      08C00000 
 1382      00
 1383              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1384              		.loc 1 755 99 discriminator 2 view .LVU447
 1385 0728 C525F3E1 		vpsllq	ymm12, ymm11, xmm1	# vect__67.145, tmp887, _182
 1386              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1387              		.loc 1 755 54 discriminator 2 view .LVU448
 1388 072c C515D3F0 		vpsrlq	ymm14, ymm13, xmm0	# vect__62.141, tmp888, _184
 1389              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1390              		.loc 1 755 72 discriminator 2 view .LVU449
 1391 0730 C4411DEB 		vpor	ymm15, ymm12, ymm14	# vect__70.146, vect__67.145, vect__62.141
 1391      FE
 1392              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1393              		.loc 1 755 29 discriminator 2 view .LVU450
 1394 0735 C57E7FBC 		vmovdqu	YMMWORD PTR 192[rdx+rcx], ymm15	# MEM[base: vectp.148_31, index: ivtmp.178_320, offset: 0B
 1394      0AC00000 
 1394      00
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1395              		.loc 1 754 48 is_stmt 1 discriminator 2 view .LVU451
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1396              		.loc 1 754 12 discriminator 2 view .LVU452
 1397              		.loc 1 755 9 discriminator 2 view .LVU453
 1398              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1399              		.loc 1 755 99 is_stmt 0 discriminator 2 view .LVU454
 1400 073e C5FE6FB4 		vmovdqu	ymm6, YMMWORD PTR 224[rsi+rcx]	# tmp889, MEM[base: vectp.143_194, index: ivtmp.178_320, of
 1400      0EE00000 
 1400      00
 1401              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1402              		.loc 1 755 54 discriminator 2 view .LVU455
 1403 0747 C5FE6FBC 		vmovdqu	ymm7, YMMWORD PTR 224[rax+rcx]	# tmp890, MEM[base: vectp.139_2, index: ivtmp.178_320, offs
 1403      08E00000 
 1403      00
 1404              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1405              		.loc 1 755 99 discriminator 2 view .LVU456
 1406 0750 C5CDF3D1 		vpsllq	ymm2, ymm6, xmm1	# vect__67.145, tmp889, _182
 1407              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1408              		.loc 1 755 54 discriminator 2 view .LVU457
 1409 0754 C5C5D3E0 		vpsrlq	ymm4, ymm7, xmm0	# vect__62.141, tmp890, _184
 1410              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1411              		.loc 1 755 72 discriminator 2 view .LVU458
 1412 0758 C5EDEBEC 		vpor	ymm5, ymm2, ymm4	# vect__70.146, vect__67.145, vect__62.141
GAS LISTING /tmp/cctyCFAS.s 			page 45


 1413              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1414              		.loc 1 755 29 discriminator 2 view .LVU459
 1415 075c C5FE7FAC 		vmovdqu	YMMWORD PTR 224[rdx+rcx], ymm5	# MEM[base: vectp.148_31, index: ivtmp.178_320, offset: 0B]
 1415      0AE00000 
 1415      00
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1416              		.loc 1 754 48 is_stmt 1 discriminator 2 view .LVU460
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1417              		.loc 1 754 12 discriminator 2 view .LVU461
 1418 0765 4881C100 		add	rcx, 256	# ivtmp.178,
 1418      010000
 1419 076c 4C39D9   		cmp	rcx, r11	# ivtmp.178, _322
 1420 076f 0F85DAFE 		jne	.L77	#,
 1420      FFFF
 1421              	.L244:
 1422 0775 488B7424 		mov	rsi, QWORD PTR -32[rsp]	# source_word, %sfp
 1422      E0
 1423 077a 4C89D2   		mov	rdx, r10	# niters_vector_mult_vf.135, niters.133
 1424 077d 4883E2FC 		and	rdx, -4	# niters_vector_mult_vf.135,
 1425 0781 4901D6   		add	r14, rdx	# tmp.136, niters_vector_mult_vf.135
 1426 0784 4801D6   		add	rsi, rdx	# source_word, niters_vector_mult_vf.135
 1427 0787 4C39D2   		cmp	rdx, r10	# niters_vector_mult_vf.135, niters.133
 1428 078a 0F845006 		je	.L257	#,
 1428      0000
 1429              	.LVL65:
 1430              		.loc 1 755 9 view .LVU462
 1431              	# sieve_extend.c:754:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1432              		.loc 1 754 5 is_stmt 0 view .LVU463
 1433 0790 4C8B4424 		mov	r8, QWORD PTR -8[rsp]	# destination_stop_word, %sfp
 1433      F8
 1434              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1435              		.loc 1 755 99 view .LVU464
 1436 0795 C4E2B1F7 		shlx	rax, QWORD PTR 8[rdi+rsi*8], r9	# tmp404, *_66, shift
 1436      44F708
 1437              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1438              		.loc 1 755 54 view .LVU465
 1439 079c C4629BF7 		shrx	r11, QWORD PTR [rdi+rsi*8], r12	# tmp406, *_61, shift_flipped
 1439      1CF7
 1440              	# sieve_extend.c:754:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1441              		.loc 1 754 57 view .LVU466
 1442 07a2 498D5601 		lea	rdx, 1[r14]	# copy_word,
 1443              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1444              		.loc 1 755 72 view .LVU467
 1445 07a6 4C09D8   		or	rax, r11	# tmp408, tmp406
 1446 07a9 4A8904F7 		mov	QWORD PTR [rdi+r14*8], rax	# *_70, tmp408
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1447              		.loc 1 754 48 is_stmt 1 view .LVU468
 1448              	.LVL66:
 1449              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1450              		.loc 1 755 83 is_stmt 0 view .LVU469
 1451 07ad 4C8D5601 		lea	r10, 1[rsi]	# _64,
 1452              	.LVL67:
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1453              		.loc 1 754 12 is_stmt 1 view .LVU470
 1454              	# sieve_extend.c:754:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
GAS LISTING /tmp/cctyCFAS.s 			page 46


 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1455              		.loc 1 754 5 is_stmt 0 view .LVU471
 1456 07b1 4939D0   		cmp	r8, rdx	# destination_stop_word, copy_word
 1457 07b4 0F822606 		jb	.L257	#,
 1457      0000
 1458              		.loc 1 755 9 is_stmt 1 view .LVU472
 1459              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1460              		.loc 1 755 54 is_stmt 0 view .LVU473
 1461 07ba 4A8B0CD7 		mov	rcx, QWORD PTR [rdi+r10*8]	# *_49, *_49
 1462              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1463              		.loc 1 755 99 view .LVU474
 1464 07be C4A2B1F7 		shlx	rax, QWORD PTR 8[rdi+r10*8], r9	# tmp409, *_54, shift
 1464      44D708
 1465              	# sieve_extend.c:754:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1466              		.loc 1 754 57 view .LVU475
 1467 07c5 4983C602 		add	r14, 2	# copy_word,
 1468              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1469              		.loc 1 755 54 view .LVU476
 1470 07c9 C4629BF7 		shrx	r10, rcx, r12	# tmp411, *_49, shift_flipped
 1470      D1
 1471              	.LVL68:
 1472              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1473              		.loc 1 755 72 view .LVU477
 1474 07ce 4C09D0   		or	rax, r10	# tmp413, tmp411
 1475 07d1 488904D7 		mov	QWORD PTR [rdi+rdx*8], rax	# *_58, tmp413
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1476              		.loc 1 754 48 is_stmt 1 view .LVU478
 1477              	.LVL69:
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1478              		.loc 1 754 12 view .LVU479
 1479              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1480              		.loc 1 755 83 is_stmt 0 view .LVU480
 1481 07d5 4883C602 		add	rsi, 2	# _52,
 1482              	.LVL70:
 1483              	# sieve_extend.c:754:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1484              		.loc 1 754 5 view .LVU481
 1485 07d9 4D39F0   		cmp	r8, r14	# destination_stop_word, copy_word
 1486 07dc 0F82FE05 		jb	.L257	#,
 1486      0000
 1487              		.loc 1 755 9 is_stmt 1 view .LVU482
 1488              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1489              		.loc 1 755 99 is_stmt 0 view .LVU483
 1490 07e2 C462B1F7 		shlx	r9, QWORD PTR 8[rdi+rsi*8], r9	# tmp414, *_122, shift
 1490      4CF708
 1491              	.LVL71:
 1492              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1493              		.loc 1 755 54 view .LVU484
 1494 07e9 488B34F7 		mov	rsi, QWORD PTR [rdi+rsi*8]	# *_127, *_127
 1495              	.LVL72:
 1496              		.loc 1 755 54 view .LVU485
 1497 07ed C4629BF7 		shrx	r12, rsi, r12	# tmp416, *_127, shift_flipped
 1497      E6
 1498              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1499              		.loc 1 755 72 view .LVU486
 1500 07f2 4D09E1   		or	r9, r12	# tmp418, tmp416
GAS LISTING /tmp/cctyCFAS.s 			page 47


 1501 07f5 4E890CF7 		mov	QWORD PTR [rdi+r14*8], r9	# *_118, tmp418
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1502              		.loc 1 754 48 is_stmt 1 view .LVU487
 1503              	.LVL73:
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1504              		.loc 1 754 12 view .LVU488
 1505 07f9 C5F877   		vzeroupper
 1506              	.LVL74:
 1507              	.L81:
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1508              		.loc 1 754 12 is_stmt 0 view .LVU489
 1509 07fc 483B5C24 		cmp	rbx, QWORD PTR -24[rsp]	# _175, %sfp
 1509      E8
 1510 0801 41BE0000 		mov	r14d, 0	# tmp403,
 1510      0000
 1511 0807 4D0F46F5 		cmovbe	r14, r13	# _173,, tmp402
 1512 080b 4901DE   		add	r14, rbx	# copy_word, _175
 1513              	.L76:
 756:sieve_extend.c ****     }
 757:sieve_extend.c ****     bitarray[copy_word] &= chopmask(destination_stop);
 1514              		.loc 1 757 5 is_stmt 1 view .LVU490
 1515              	# sieve_extend.c:757:     bitarray[copy_word] &= chopmask(destination_stop);
 1516              		.loc 1 757 25 is_stmt 0 view .LVU491
 1517 080e 4E213CF7 		and	QWORD PTR [rdi+r14*8], r15	# *_72, _193
 1518              	# sieve_extend.c:759: }
 758:sieve_extend.c **** 
 759:sieve_extend.c **** }
 1519              		.loc 1 759 1 view .LVU492
 1520 0812 488D65D8 		lea	rsp, -40[rbp]	#,
 1521 0816 5B       		pop	rbx	#
 1522 0817 415C     		pop	r12	#
 1523 0819 415D     		pop	r13	#
 1524 081b 415E     		pop	r14	#
 1525 081d 415F     		pop	r15	#
 1526 081f 5D       		pop	rbp	#
 1527              		.cfi_remember_state
 1528              		.cfi_def_cfa 7, 8
 1529 0820 C3       		ret	
 1530              	.LVL75:
 1531              		.p2align 4,,10
 1532 0821 0F1F8000 		.p2align 3
 1532      000000
 1533              	.L261:
 1534              		.cfi_restore_state
 1535              	.LBB273:
 745:sieve_extend.c ****         #pragma ivdep
 1536              		.loc 1 745 9 is_stmt 1 view .LVU493
 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1537              		.loc 1 747 9 view .LVU494
 1538              	.LBB274:
 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1539              		.loc 1 747 14 view .LVU495
 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1540              		.loc 1 747 40 view .LVU496
 1541              	# sieve_extend.c:747:         for (register counter_t i = 0; i <loop_distance; i++) {
 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1542              		.loc 1 747 9 is_stmt 0 view .LVU497
GAS LISTING /tmp/cctyCFAS.s 			page 48


 1543 0828 488B4C24 		mov	rcx, QWORD PTR -8[rsp]	# loop_distance, %sfp
 1543      F8
 1544 082d 488B4424 		mov	rax, QWORD PTR -32[rsp]	# source_word, %sfp
 1544      E0
 1545 0832 4C29F1   		sub	rcx, r14	# loop_distance, copy_word
 1546 0835 0F844903 		je	.L72	#,
 1546      0000
 1547 083b 4C8B5424 		mov	r10, QWORD PTR -24[rsp]	# _179, %sfp
 1547      E8
 1548 0840 488D4308 		lea	rax, 8[rbx]	# tmp319,
 1549 0844 4D8D6A28 		lea	r13, 40[r10]	# tmp320,
 1550 0848 4C39E8   		cmp	rax, r13	# tmp319, tmp320
 1551 084b 410F9DC5 		setge	r13b	#, tmp322
 1552 084f 498D5208 		lea	rdx, 8[r10]	# tmp324,
 1553              	.LVL76:
 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1554              		.loc 1 747 9 view .LVU498
 1555 0853 4883C328 		add	rbx, 40	# tmp323,
 1556 0857 4839D3   		cmp	rbx, rdx	# tmp323, tmp324
 1557 085a 410F9EC2 		setle	r10b	#, tmp326
 1558 085e 4509D5   		or	r13d, r10d	# tmp327, tmp326
 1559 0861 4C8B5424 		mov	r10, QWORD PTR -24[rsp]	# _179, %sfp
 1559      E8
 1560 0866 4983C220 		add	r10, 32	# tmp328,
 1561 086a 4939C2   		cmp	r10, rax	# tmp328, tmp319
 1562 086d 410F9EC2 		setle	r10b	#, tmp331
 1563 0871 483B5C24 		cmp	rbx, QWORD PTR -24[rsp]	# tmp323, %sfp
 1563      E8
 1564 0876 0F9EC3   		setle	bl	#, tmp334
 1565 0879 4109DA   		or	r10d, ebx	# tmp335, tmp334
 1566 087c 4584D5   		test	r13b, r10b	# tmp327, tmp335
 1567 087f 0F846305 		je	.L69	#,
 1567      0000
 1568 0885 4C8D69FF 		lea	r13, -1[rcx]	# tmp337,
 1569 0889 4983FD03 		cmp	r13, 3	# tmp337,
 1570 088d 0F865505 		jbe	.L69	#,
 1570      0000
 1571 0893 4889CB   		mov	rbx, rcx	# bnd.150, loop_distance
 1572 0896 48C1EB02 		shr	rbx, 2	# bnd.150,
 1573 089a 48C1E305 		sal	rbx, 5	# _338,
 1574 089e 4C8D53E0 		lea	r10, -32[rbx]	# tmp440,
 1575 08a2 49C1EA05 		shr	r10, 5	# tmp438,
 1576 08a6 49FFC2   		inc	r10	# tmp441
 1577 08a9 C5F96E44 		vmovd	xmm0, DWORD PTR -12[rsp]	# _182, %sfp
 1577      24F4
 1578 08af 4801FA   		add	rdx, rdi	# vectp.158, bitarray
 1579 08b2 4801F8   		add	rax, rdi	# vectp.163, bitarray
 1580 08b5 31F6     		xor	esi, esi	# ivtmp.197
 1581 08b7 C4C1796E 		vmovd	xmm1, r12d	# _184, _184
 1581      CC
 1582 08bc 4183E207 		and	r10d, 7	# tmp442,
 1583 08c0 0F84FD00 		je	.L70	#,
 1583      0000
 1584 08c6 4983FA01 		cmp	r10, 1	# tmp442,
 1585 08ca 0F84C900 		je	.L182	#,
 1585      0000
 1586 08d0 4983FA02 		cmp	r10, 2	# tmp442,
GAS LISTING /tmp/cctyCFAS.s 			page 49


 1587 08d4 0F849E00 		je	.L183	#,
 1587      0000
 1588 08da 4983FA03 		cmp	r10, 3	# tmp442,
 1589 08de 7478     		je	.L184	#,
 1590 08e0 4983FA04 		cmp	r10, 4	# tmp442,
 1591 08e4 7451     		je	.L185	#,
 1592 08e6 4983FA05 		cmp	r10, 5	# tmp442,
 1593 08ea 742B     		je	.L186	#,
 1594 08ec 4983FA06 		cmp	r10, 6	# tmp442,
 1595 08f0 0F85F106 		jne	.L262	#,
 1595      0000
 1596              	.LVL77:
 1597              	.L187:
 748:sieve_extend.c ****         }
 1598              		.loc 1 748 13 is_stmt 1 view .LVU499
 1599              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1600              		.loc 1 748 62 is_stmt 0 view .LVU500
 1601 08f6 C4417E6F 		vmovdqu	ymm12, YMMWORD PTR [r11+rsi]	# tmp917, MEM[base: _180, index: ivtmp.197_336, offset: 0B]
 1601      2433
 1602              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1603              		.loc 1 748 109 view .LVU501
 1604 08fc C57E6F34 		vmovdqu	ymm14, YMMWORD PTR [rdx+rsi]	# tmp918, MEM[base: vectp.158_265, index: ivtmp.197_336, offs
 1604      32
 1605              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1606              		.loc 1 748 62 view .LVU502
 1607 0901 C51DD3E9 		vpsrlq	ymm13, ymm12, xmm1	# vect__49.156, tmp917, _184
 1608              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1609              		.loc 1 748 109 view .LVU503
 1610 0905 C50DF3F8 		vpsllq	ymm15, ymm14, xmm0	# vect__54.160, tmp918, _182
 1611              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1612              		.loc 1 748 80 view .LVU504
 1613 0909 C4C115EB 		vpor	ymm6, ymm13, ymm15	# vect__58.161, vect__49.156, vect__54.160
 1613      F7
 1614              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1615              		.loc 1 748 35 view .LVU505
 1616 090e C5FE7F34 		vmovdqu	YMMWORD PTR [rax+rsi], ymm6	# MEM[base: vectp.163_273, index: ivtmp.197_336, offset: 0B], 
 1616      30
 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1617              		.loc 1 747 58 is_stmt 1 view .LVU506
 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1618              		.loc 1 747 40 view .LVU507
 1619 0913 4883C620 		add	rsi, 32	# ivtmp.197,
 1620              	.L186:
 748:sieve_extend.c ****         }
 1621              		.loc 1 748 13 view .LVU508
 1622              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1623              		.loc 1 748 62 is_stmt 0 view .LVU509
 1624 0917 C4C17E6F 		vmovdqu	ymm2, YMMWORD PTR [r11+rsi]	# tmp919, MEM[base: _180, index: ivtmp.197_336, offset: 0B]
 1624      1433
 1625              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
GAS LISTING /tmp/cctyCFAS.s 			page 50


 748:sieve_extend.c ****         }
 1626              		.loc 1 748 109 view .LVU510
 1627 091d C5FE6F24 		vmovdqu	ymm4, YMMWORD PTR [rdx+rsi]	# tmp920, MEM[base: vectp.158_265, index: ivtmp.197_336, offse
 1627      32
 1628              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1629              		.loc 1 748 62 view .LVU511
 1630 0922 C5EDD3F9 		vpsrlq	ymm7, ymm2, xmm1	# vect__49.156, tmp919, _184
 1631              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1632              		.loc 1 748 109 view .LVU512
 1633 0926 C5DDF3E8 		vpsllq	ymm5, ymm4, xmm0	# vect__54.160, tmp920, _182
 1634              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1635              		.loc 1 748 80 view .LVU513
 1636 092a C545EBC5 		vpor	ymm8, ymm7, ymm5	# vect__58.161, vect__49.156, vect__54.160
 1637              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1638              		.loc 1 748 35 view .LVU514
 1639 092e C57E7F04 		vmovdqu	YMMWORD PTR [rax+rsi], ymm8	# MEM[base: vectp.163_273, index: ivtmp.197_336, offset: 0B], 
 1639      30
 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1640              		.loc 1 747 58 is_stmt 1 view .LVU515
 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1641              		.loc 1 747 40 view .LVU516
 1642 0933 4883C620 		add	rsi, 32	# ivtmp.197,
 1643              	.L185:
 748:sieve_extend.c ****         }
 1644              		.loc 1 748 13 view .LVU517
 1645              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1646              		.loc 1 748 62 is_stmt 0 view .LVU518
 1647 0937 C4417E6F 		vmovdqu	ymm9, YMMWORD PTR [r11+rsi]	# tmp921, MEM[base: _180, index: ivtmp.197_336, offset: 0B]
 1647      0C33
 1648              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1649              		.loc 1 748 109 view .LVU519
 1650 093d C5FE6F1C 		vmovdqu	ymm3, YMMWORD PTR [rdx+rsi]	# tmp922, MEM[base: vectp.158_265, index: ivtmp.197_336, offse
 1650      32
 1651              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1652              		.loc 1 748 62 view .LVU520
 1653 0942 C535D3D1 		vpsrlq	ymm10, ymm9, xmm1	# vect__49.156, tmp921, _184
 1654              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1655              		.loc 1 748 109 view .LVU521
 1656 0946 C565F3D8 		vpsllq	ymm11, ymm3, xmm0	# vect__54.160, tmp922, _182
 1657              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1658              		.loc 1 748 80 view .LVU522
 1659 094a C4412DEB 		vpor	ymm12, ymm10, ymm11	# vect__58.161, vect__49.156, vect__54.160
 1659      E3
 1660              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1661              		.loc 1 748 35 view .LVU523
 1662 094f C57E7F24 		vmovdqu	YMMWORD PTR [rax+rsi], ymm12	# MEM[base: vectp.163_273, index: ivtmp.197_336, offset: 0B],
 1662      30
GAS LISTING /tmp/cctyCFAS.s 			page 51


 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1663              		.loc 1 747 58 is_stmt 1 view .LVU524
 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1664              		.loc 1 747 40 view .LVU525
 1665 0954 4883C620 		add	rsi, 32	# ivtmp.197,
 1666              	.L184:
 748:sieve_extend.c ****         }
 1667              		.loc 1 748 13 view .LVU526
 1668              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1669              		.loc 1 748 62 is_stmt 0 view .LVU527
 1670 0958 C4417E6F 		vmovdqu	ymm13, YMMWORD PTR [r11+rsi]	# tmp923, MEM[base: _180, index: ivtmp.197_336, offset: 0B]
 1670      2C33
 1671              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1672              		.loc 1 748 109 view .LVU528
 1673 095e C57E6F3C 		vmovdqu	ymm15, YMMWORD PTR [rdx+rsi]	# tmp924, MEM[base: vectp.158_265, index: ivtmp.197_336, offs
 1673      32
 1674              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1675              		.loc 1 748 62 view .LVU529
 1676 0963 C515D3F1 		vpsrlq	ymm14, ymm13, xmm1	# vect__49.156, tmp923, _184
 1677              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1678              		.loc 1 748 109 view .LVU530
 1679 0967 C585F3F0 		vpsllq	ymm6, ymm15, xmm0	# vect__54.160, tmp924, _182
 1680              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1681              		.loc 1 748 80 view .LVU531
 1682 096b C58DEBD6 		vpor	ymm2, ymm14, ymm6	# vect__58.161, vect__49.156, vect__54.160
 1683              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1684              		.loc 1 748 35 view .LVU532
 1685 096f C5FE7F14 		vmovdqu	YMMWORD PTR [rax+rsi], ymm2	# MEM[base: vectp.163_273, index: ivtmp.197_336, offset: 0B], 
 1685      30
 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1686              		.loc 1 747 58 is_stmt 1 view .LVU533
 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1687              		.loc 1 747 40 view .LVU534
 1688 0974 4883C620 		add	rsi, 32	# ivtmp.197,
 1689              	.L183:
 748:sieve_extend.c ****         }
 1690              		.loc 1 748 13 view .LVU535
 1691              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1692              		.loc 1 748 62 is_stmt 0 view .LVU536
 1693 0978 C4C17E6F 		vmovdqu	ymm7, YMMWORD PTR [r11+rsi]	# tmp925, MEM[base: _180, index: ivtmp.197_336, offset: 0B]
 1693      3C33
 1694              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1695              		.loc 1 748 109 view .LVU537
 1696 097e C5FE6F2C 		vmovdqu	ymm5, YMMWORD PTR [rdx+rsi]	# tmp926, MEM[base: vectp.158_265, index: ivtmp.197_336, offse
 1696      32
 1697              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1698              		.loc 1 748 62 view .LVU538
 1699 0983 C5C5D3E1 		vpsrlq	ymm4, ymm7, xmm1	# vect__49.156, tmp925, _184
GAS LISTING /tmp/cctyCFAS.s 			page 52


 1700              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1701              		.loc 1 748 109 view .LVU539
 1702 0987 C555F3C0 		vpsllq	ymm8, ymm5, xmm0	# vect__54.160, tmp926, _182
 1703              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1704              		.loc 1 748 80 view .LVU540
 1705 098b C4415DEB 		vpor	ymm9, ymm4, ymm8	# vect__58.161, vect__49.156, vect__54.160
 1705      C8
 1706              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1707              		.loc 1 748 35 view .LVU541
 1708 0990 C57E7F0C 		vmovdqu	YMMWORD PTR [rax+rsi], ymm9	# MEM[base: vectp.163_273, index: ivtmp.197_336, offset: 0B], 
 1708      30
 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1709              		.loc 1 747 58 is_stmt 1 view .LVU542
 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1710              		.loc 1 747 40 view .LVU543
 1711 0995 4883C620 		add	rsi, 32	# ivtmp.197,
 1712              	.L182:
 748:sieve_extend.c ****         }
 1713              		.loc 1 748 13 view .LVU544
 1714              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1715              		.loc 1 748 62 is_stmt 0 view .LVU545
 1716 0999 C4417E6F 		vmovdqu	ymm10, YMMWORD PTR [r11+rsi]	# tmp927, MEM[base: _180, index: ivtmp.197_336, offset: 0B]
 1716      1433
 1717              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1718              		.loc 1 748 109 view .LVU546
 1719 099f C5FE6F1C 		vmovdqu	ymm3, YMMWORD PTR [rdx+rsi]	# tmp928, MEM[base: vectp.158_265, index: ivtmp.197_336, offse
 1719      32
 1720              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1721              		.loc 1 748 62 view .LVU547
 1722 09a4 C52DD3D9 		vpsrlq	ymm11, ymm10, xmm1	# vect__49.156, tmp927, _184
 1723              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1724              		.loc 1 748 109 view .LVU548
 1725 09a8 C565F3E0 		vpsllq	ymm12, ymm3, xmm0	# vect__54.160, tmp928, _182
 1726              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1727              		.loc 1 748 80 view .LVU549
 1728 09ac C44125EB 		vpor	ymm13, ymm11, ymm12	# vect__58.161, vect__49.156, vect__54.160
 1728      EC
 1729              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1730              		.loc 1 748 35 view .LVU550
 1731 09b1 C57E7F2C 		vmovdqu	YMMWORD PTR [rax+rsi], ymm13	# MEM[base: vectp.163_273, index: ivtmp.197_336, offset: 0B],
 1731      30
 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1732              		.loc 1 747 58 is_stmt 1 view .LVU551
 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1733              		.loc 1 747 40 view .LVU552
 1734 09b6 4883C620 		add	rsi, 32	# ivtmp.197,
 1735 09ba 4839DE   		cmp	rsi, rbx	# ivtmp.197, _338
 1736 09bd 0F842E01 		je	.L243	#,
GAS LISTING /tmp/cctyCFAS.s 			page 53


 1736      0000
 1737              	.L70:
 748:sieve_extend.c ****         }
 1738              		.loc 1 748 13 discriminator 3 view .LVU553
 1739              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1740              		.loc 1 748 62 is_stmt 0 discriminator 3 view .LVU554
 1741 09c3 C4417E6F 		vmovdqu	ymm14, YMMWORD PTR [r11+rsi]	# tmp839, MEM[base: _180, index: ivtmp.197_336, offset: 0B]
 1741      3433
 1742              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1743              		.loc 1 748 109 discriminator 3 view .LVU555
 1744 09c9 C5FE6F34 		vmovdqu	ymm6, YMMWORD PTR [rdx+rsi]	# tmp840, MEM[base: vectp.158_265, index: ivtmp.197_336, offse
 1744      32
 1745              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1746              		.loc 1 748 62 discriminator 3 view .LVU556
 1747 09ce C50DD3F9 		vpsrlq	ymm15, ymm14, xmm1	# vect__49.156, tmp839, _184
 1748              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1749              		.loc 1 748 109 discriminator 3 view .LVU557
 1750 09d2 C5CDF3D0 		vpsllq	ymm2, ymm6, xmm0	# vect__54.160, tmp840, _182
 1751              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1752              		.loc 1 748 80 discriminator 3 view .LVU558
 1753 09d6 C585EBFA 		vpor	ymm7, ymm15, ymm2	# vect__58.161, vect__49.156, vect__54.160
 1754              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1755              		.loc 1 748 35 discriminator 3 view .LVU559
 1756 09da C5FE7F3C 		vmovdqu	YMMWORD PTR [rax+rsi], ymm7	# MEM[base: vectp.163_273, index: ivtmp.197_336, offset: 0B], 
 1756      30
 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1757              		.loc 1 747 58 is_stmt 1 discriminator 3 view .LVU560
 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1758              		.loc 1 747 40 discriminator 3 view .LVU561
 748:sieve_extend.c ****         }
 1759              		.loc 1 748 13 discriminator 3 view .LVU562
 1760              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1761              		.loc 1 748 62 is_stmt 0 discriminator 3 view .LVU563
 1762 09df C4C17E6F 		vmovdqu	ymm4, YMMWORD PTR 32[r11+rsi]	# tmp841, MEM[base: _180, index: ivtmp.197_336, offset: 0B]
 1762      643320
 1763              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1764              		.loc 1 748 109 discriminator 3 view .LVU564
 1765 09e6 C5FE6F6C 		vmovdqu	ymm5, YMMWORD PTR 32[rdx+rsi]	# tmp842, MEM[base: vectp.158_265, index: ivtmp.197_336, off
 1765      3220
 1766              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1767              		.loc 1 748 62 discriminator 3 view .LVU565
 1768 09ec C55DD3C1 		vpsrlq	ymm8, ymm4, xmm1	# vect__49.156, tmp841, _184
 1769              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1770              		.loc 1 748 109 discriminator 3 view .LVU566
 1771 09f0 C555F3C8 		vpsllq	ymm9, ymm5, xmm0	# vect__54.160, tmp842, _182
 1772              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
GAS LISTING /tmp/cctyCFAS.s 			page 54


 1773              		.loc 1 748 80 discriminator 3 view .LVU567
 1774 09f4 C4413DEB 		vpor	ymm10, ymm8, ymm9	# vect__58.161, vect__49.156, vect__54.160
 1774      D1
 1775              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1776              		.loc 1 748 35 discriminator 3 view .LVU568
 1777 09f9 C57E7F54 		vmovdqu	YMMWORD PTR 32[rax+rsi], ymm10	# MEM[base: vectp.163_273, index: ivtmp.197_336, offset: 0B
 1777      3020
 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1778              		.loc 1 747 58 is_stmt 1 discriminator 3 view .LVU569
 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1779              		.loc 1 747 40 discriminator 3 view .LVU570
 748:sieve_extend.c ****         }
 1780              		.loc 1 748 13 discriminator 3 view .LVU571
 1781              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1782              		.loc 1 748 62 is_stmt 0 discriminator 3 view .LVU572
 1783 09ff C4417E6F 		vmovdqu	ymm11, YMMWORD PTR 64[r11+rsi]	# tmp843, MEM[base: _180, index: ivtmp.197_336, offset: 0B]
 1783      5C3340
 1784              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1785              		.loc 1 748 109 discriminator 3 view .LVU573
 1786 0a06 C5FE6F5C 		vmovdqu	ymm3, YMMWORD PTR 64[rdx+rsi]	# tmp844, MEM[base: vectp.158_265, index: ivtmp.197_336, off
 1786      3240
 1787              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1788              		.loc 1 748 62 discriminator 3 view .LVU574
 1789 0a0c C525D3E1 		vpsrlq	ymm12, ymm11, xmm1	# vect__49.156, tmp843, _184
 1790              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1791              		.loc 1 748 109 discriminator 3 view .LVU575
 1792 0a10 C565F3E8 		vpsllq	ymm13, ymm3, xmm0	# vect__54.160, tmp844, _182
 1793              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1794              		.loc 1 748 80 discriminator 3 view .LVU576
 1795 0a14 C4411DEB 		vpor	ymm14, ymm12, ymm13	# vect__58.161, vect__49.156, vect__54.160
 1795      F5
 1796              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1797              		.loc 1 748 35 discriminator 3 view .LVU577
 1798 0a19 C57E7F74 		vmovdqu	YMMWORD PTR 64[rax+rsi], ymm14	# MEM[base: vectp.163_273, index: ivtmp.197_336, offset: 0B
 1798      3040
 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1799              		.loc 1 747 58 is_stmt 1 discriminator 3 view .LVU578
 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1800              		.loc 1 747 40 discriminator 3 view .LVU579
 748:sieve_extend.c ****         }
 1801              		.loc 1 748 13 discriminator 3 view .LVU580
 1802              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1803              		.loc 1 748 62 is_stmt 0 discriminator 3 view .LVU581
 1804 0a1f C4417E6F 		vmovdqu	ymm15, YMMWORD PTR 96[r11+rsi]	# tmp845, MEM[base: _180, index: ivtmp.197_336, offset: 0B]
 1804      7C3360
 1805              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1806              		.loc 1 748 109 discriminator 3 view .LVU582
 1807 0a26 C5FE6F54 		vmovdqu	ymm2, YMMWORD PTR 96[rdx+rsi]	# tmp846, MEM[base: vectp.158_265, index: ivtmp.197_336, off
GAS LISTING /tmp/cctyCFAS.s 			page 55


 1807      3260
 1808              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1809              		.loc 1 748 62 discriminator 3 view .LVU583
 1810 0a2c C585D3F1 		vpsrlq	ymm6, ymm15, xmm1	# vect__49.156, tmp845, _184
 1811              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1812              		.loc 1 748 109 discriminator 3 view .LVU584
 1813 0a30 C5EDF3F8 		vpsllq	ymm7, ymm2, xmm0	# vect__54.160, tmp846, _182
 1814              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1815              		.loc 1 748 80 discriminator 3 view .LVU585
 1816 0a34 C5CDEBE7 		vpor	ymm4, ymm6, ymm7	# vect__58.161, vect__49.156, vect__54.160
 1817              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1818              		.loc 1 748 35 discriminator 3 view .LVU586
 1819 0a38 C5FE7F64 		vmovdqu	YMMWORD PTR 96[rax+rsi], ymm4	# MEM[base: vectp.163_273, index: ivtmp.197_336, offset: 0B]
 1819      3060
 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1820              		.loc 1 747 58 is_stmt 1 discriminator 3 view .LVU587
 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1821              		.loc 1 747 40 discriminator 3 view .LVU588
 748:sieve_extend.c ****         }
 1822              		.loc 1 748 13 discriminator 3 view .LVU589
 1823              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1824              		.loc 1 748 62 is_stmt 0 discriminator 3 view .LVU590
 1825 0a3e C4417E6F 		vmovdqu	ymm8, YMMWORD PTR 128[r11+rsi]	# tmp847, MEM[base: _180, index: ivtmp.197_336, offset: 0B]
 1825      84338000 
 1825      0000
 1826              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1827              		.loc 1 748 109 discriminator 3 view .LVU591
 1828 0a48 C57E6F8C 		vmovdqu	ymm9, YMMWORD PTR 128[rdx+rsi]	# tmp848, MEM[base: vectp.158_265, index: ivtmp.197_336, of
 1828      32800000 
 1828      00
 1829              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1830              		.loc 1 748 62 discriminator 3 view .LVU592
 1831 0a51 C5BDD3E9 		vpsrlq	ymm5, ymm8, xmm1	# vect__49.156, tmp847, _184
 1832              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1833              		.loc 1 748 109 discriminator 3 view .LVU593
 1834 0a55 C535F3D0 		vpsllq	ymm10, ymm9, xmm0	# vect__54.160, tmp848, _182
 1835              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1836              		.loc 1 748 80 discriminator 3 view .LVU594
 1837 0a59 C44155EB 		vpor	ymm11, ymm5, ymm10	# vect__58.161, vect__49.156, vect__54.160
 1837      DA
 1838              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1839              		.loc 1 748 35 discriminator 3 view .LVU595
 1840 0a5e C57E7F9C 		vmovdqu	YMMWORD PTR 128[rax+rsi], ymm11	# MEM[base: vectp.163_273, index: ivtmp.197_336, offset: 0
 1840      30800000 
 1840      00
 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1841              		.loc 1 747 58 is_stmt 1 discriminator 3 view .LVU596
GAS LISTING /tmp/cctyCFAS.s 			page 56


 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1842              		.loc 1 747 40 discriminator 3 view .LVU597
 748:sieve_extend.c ****         }
 1843              		.loc 1 748 13 discriminator 3 view .LVU598
 1844              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1845              		.loc 1 748 62 is_stmt 0 discriminator 3 view .LVU599
 1846 0a67 C4417E6F 		vmovdqu	ymm12, YMMWORD PTR 160[r11+rsi]	# tmp849, MEM[base: _180, index: ivtmp.197_336, offset: 0B
 1846      A433A000 
 1846      0000
 1847              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1848              		.loc 1 748 109 discriminator 3 view .LVU600
 1849 0a71 C5FE6F9C 		vmovdqu	ymm3, YMMWORD PTR 160[rdx+rsi]	# tmp850, MEM[base: vectp.158_265, index: ivtmp.197_336, of
 1849      32A00000 
 1849      00
 1850              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1851              		.loc 1 748 62 discriminator 3 view .LVU601
 1852 0a7a C51DD3E9 		vpsrlq	ymm13, ymm12, xmm1	# vect__49.156, tmp849, _184
 1853              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1854              		.loc 1 748 109 discriminator 3 view .LVU602
 1855 0a7e C565F3F0 		vpsllq	ymm14, ymm3, xmm0	# vect__54.160, tmp850, _182
 1856              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1857              		.loc 1 748 80 discriminator 3 view .LVU603
 1858 0a82 C44115EB 		vpor	ymm15, ymm13, ymm14	# vect__58.161, vect__49.156, vect__54.160
 1858      FE
 1859              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1860              		.loc 1 748 35 discriminator 3 view .LVU604
 1861 0a87 C57E7FBC 		vmovdqu	YMMWORD PTR 160[rax+rsi], ymm15	# MEM[base: vectp.163_273, index: ivtmp.197_336, offset: 0
 1861      30A00000 
 1861      00
 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1862              		.loc 1 747 58 is_stmt 1 discriminator 3 view .LVU605
 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1863              		.loc 1 747 40 discriminator 3 view .LVU606
 748:sieve_extend.c ****         }
 1864              		.loc 1 748 13 discriminator 3 view .LVU607
 1865              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1866              		.loc 1 748 62 is_stmt 0 discriminator 3 view .LVU608
 1867 0a90 C4C17E6F 		vmovdqu	ymm6, YMMWORD PTR 192[r11+rsi]	# tmp851, MEM[base: _180, index: ivtmp.197_336, offset: 0B]
 1867      B433C000 
 1867      0000
 1868              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1869              		.loc 1 748 109 discriminator 3 view .LVU609
 1870 0a9a C5FE6FBC 		vmovdqu	ymm7, YMMWORD PTR 192[rdx+rsi]	# tmp852, MEM[base: vectp.158_265, index: ivtmp.197_336, of
 1870      32C00000 
 1870      00
 1871              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1872              		.loc 1 748 62 discriminator 3 view .LVU610
 1873 0aa3 C5CDD3D1 		vpsrlq	ymm2, ymm6, xmm1	# vect__49.156, tmp851, _184
GAS LISTING /tmp/cctyCFAS.s 			page 57


 1874              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1875              		.loc 1 748 109 discriminator 3 view .LVU611
 1876 0aa7 C5C5F3E0 		vpsllq	ymm4, ymm7, xmm0	# vect__54.160, tmp852, _182
 1877              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1878              		.loc 1 748 80 discriminator 3 view .LVU612
 1879 0aab C56DEBC4 		vpor	ymm8, ymm2, ymm4	# vect__58.161, vect__49.156, vect__54.160
 1880              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1881              		.loc 1 748 35 discriminator 3 view .LVU613
 1882 0aaf C57E7F84 		vmovdqu	YMMWORD PTR 192[rax+rsi], ymm8	# MEM[base: vectp.163_273, index: ivtmp.197_336, offset: 0B
 1882      30C00000 
 1882      00
 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1883              		.loc 1 747 58 is_stmt 1 discriminator 3 view .LVU614
 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1884              		.loc 1 747 40 discriminator 3 view .LVU615
 748:sieve_extend.c ****         }
 1885              		.loc 1 748 13 discriminator 3 view .LVU616
 1886              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1887              		.loc 1 748 62 is_stmt 0 discriminator 3 view .LVU617
 1888 0ab8 C4C17E6F 		vmovdqu	ymm5, YMMWORD PTR 224[r11+rsi]	# tmp853, MEM[base: _180, index: ivtmp.197_336, offset: 0B]
 1888      AC33E000 
 1888      0000
 1889              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1890              		.loc 1 748 109 discriminator 3 view .LVU618
 1891 0ac2 C57E6F94 		vmovdqu	ymm10, YMMWORD PTR 224[rdx+rsi]	# tmp854, MEM[base: vectp.158_265, index: ivtmp.197_336, o
 1891      32E00000 
 1891      00
 1892              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1893              		.loc 1 748 62 discriminator 3 view .LVU619
 1894 0acb C555D3C9 		vpsrlq	ymm9, ymm5, xmm1	# vect__49.156, tmp853, _184
 1895              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1896              		.loc 1 748 109 discriminator 3 view .LVU620
 1897 0acf C52DF3D8 		vpsllq	ymm11, ymm10, xmm0	# vect__54.160, tmp854, _182
 1898              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1899              		.loc 1 748 80 discriminator 3 view .LVU621
 1900 0ad3 C44135EB 		vpor	ymm12, ymm9, ymm11	# vect__58.161, vect__49.156, vect__54.160
 1900      E3
 1901              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1902              		.loc 1 748 35 discriminator 3 view .LVU622
 1903 0ad8 C57E7FA4 		vmovdqu	YMMWORD PTR 224[rax+rsi], ymm12	# MEM[base: vectp.163_273, index: ivtmp.197_336, offset: 0
 1903      30E00000 
 1903      00
 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1904              		.loc 1 747 58 is_stmt 1 discriminator 3 view .LVU623
 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1905              		.loc 1 747 40 discriminator 3 view .LVU624
 1906 0ae1 4881C600 		add	rsi, 256	# ivtmp.197,
 1906      010000
GAS LISTING /tmp/cctyCFAS.s 			page 58


 1907 0ae8 4839DE   		cmp	rsi, rbx	# ivtmp.197, _338
 1908 0aeb 0F85D2FE 		jne	.L70	#,
 1908      FFFF
 1909              	.L243:
 1910 0af1 4C8B6C24 		mov	r13, QWORD PTR -32[rsp]	# source_word, %sfp
 1910      E0
 1911 0af6 4889CA   		mov	rdx, rcx	# niters_vector_mult_vf.151, loop_distance
 1912 0af9 4883E2FC 		and	rdx, -4	# niters_vector_mult_vf.151,
 1913 0afd 498D440D 		lea	rax, 0[r13+rcx]	# source_word,
 1913      00
 1914 0b02 F6C103   		test	cl, 3	# loop_distance,
 1915 0b05 0F84C502 		je	.L255	#,
 1915      0000
 1916              	.LVL78:
 748:sieve_extend.c ****         }
 1917              		.loc 1 748 13 view .LVU625
 1918              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1919              		.loc 1 748 58 is_stmt 0 view .LVU626
 1920 0b0b 498D5C15 		lea	rbx, 0[r13+rdx]	# tmp350,
 1920      00
 1921              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1922              		.loc 1 748 62 view .LVU627
 1923 0b10 4C8B14DF 		mov	r10, QWORD PTR [rdi+rbx*8]	# *_281, *_281
 1924              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1925              		.loc 1 748 109 view .LVU628
 1926 0b14 C4E2B1F7 		shlx	rsi, QWORD PTR 8[rdi+rbx*8], r9	# tmp352, *_286, shift
 1926      74DF08
 1927              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1928              		.loc 1 748 21 view .LVU629
 1929 0b1b 4D8D1C16 		lea	r11, [r14+rdx]	# tmp351,
 1930              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1931              		.loc 1 748 62 view .LVU630
 1932 0b1f C4C29BF7 		shrx	rbx, r10, r12	# tmp354, *_281, shift_flipped
 1932      DA
 1933              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1934              		.loc 1 748 80 view .LVU631
 1935 0b24 4809DE   		or	rsi, rbx	# tmp356, tmp354
 1936 0b27 4A8934DF 		mov	QWORD PTR [rdi+r11*8], rsi	# *_291, tmp356
 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1937              		.loc 1 747 58 is_stmt 1 view .LVU632
 1938              	# sieve_extend.c:747:         for (register counter_t i = 0; i <loop_distance; i++) {
 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1939              		.loc 1 747 59 is_stmt 0 view .LVU633
 1940 0b2b 488D7201 		lea	rsi, 1[rdx]	# i,
 1941              	.LVL79:
 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1942              		.loc 1 747 40 is_stmt 1 view .LVU634
 1943              	# sieve_extend.c:747:         for (register counter_t i = 0; i <loop_distance; i++) {
 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1944              		.loc 1 747 9 is_stmt 0 view .LVU635
 1945 0b2f 4839F1   		cmp	rcx, rsi	# loop_distance, i
GAS LISTING /tmp/cctyCFAS.s 			page 59


 1946 0b32 0F869802 		jbe	.L255	#,
 1946      0000
 748:sieve_extend.c ****         }
 1947              		.loc 1 748 13 is_stmt 1 view .LVU636
 1948              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1949              		.loc 1 748 58 is_stmt 0 view .LVU637
 1950 0b38 4D8D5C35 		lea	r11, 0[r13+rsi]	# tmp357,
 1950      00
 1951              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1952              		.loc 1 748 62 view .LVU638
 1953 0b3d 4A8B1CDF 		mov	rbx, QWORD PTR [rdi+r11*8]	# *_299, *_299
 1954              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1955              		.loc 1 748 109 view .LVU639
 1956 0b41 C422B1F7 		shlx	r10, QWORD PTR 8[rdi+r11*8], r9	# tmp359, *_304, shift
 1956      54DF08
 1957              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1958              		.loc 1 748 21 view .LVU640
 1959 0b48 4C01F6   		add	rsi, r14	# tmp358, copy_word
 1960              	.LVL80:
 1961              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1962              		.loc 1 748 62 view .LVU641
 1963 0b4b C4629BF7 		shrx	r11, rbx, r12	# tmp361, *_299, shift_flipped
 1963      DB
 1964              	# sieve_extend.c:747:         for (register counter_t i = 0; i <loop_distance; i++) {
 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1965              		.loc 1 747 59 view .LVU642
 1966 0b50 4883C202 		add	rdx, 2	# i,
 1967              	.LVL81:
 1968              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1969              		.loc 1 748 80 view .LVU643
 1970 0b54 4D09DA   		or	r10, r11	# tmp363, tmp361
 1971 0b57 4C8914F7 		mov	QWORD PTR [rdi+rsi*8], r10	# *_309, tmp363
 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1972              		.loc 1 747 58 is_stmt 1 view .LVU644
 1973              	.LVL82:
 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1974              		.loc 1 747 40 view .LVU645
 1975              	# sieve_extend.c:747:         for (register counter_t i = 0; i <loop_distance; i++) {
 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1976              		.loc 1 747 9 is_stmt 0 view .LVU646
 1977 0b5b 4839D1   		cmp	rcx, rdx	# loop_distance, i
 1978 0b5e 0F866C02 		jbe	.L255	#,
 1978      0000
 748:sieve_extend.c ****         }
 1979              		.loc 1 748 13 is_stmt 1 view .LVU647
 1980              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1981              		.loc 1 748 58 is_stmt 0 view .LVU648
 1982 0b64 4901D5   		add	r13, rdx	# source_word, i
 1983              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
GAS LISTING /tmp/cctyCFAS.s 			page 60


 1984              		.loc 1 748 21 view .LVU649
 1985 0b67 4C01F2   		add	rdx, r14	# tmp365, copy_word
 1986              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1987              		.loc 1 748 109 view .LVU650
 1988 0b6a C422B1F7 		shlx	r14, QWORD PTR 8[rdi+r13*8], r9	# tmp366, *_245, shift
 1988      74EF08
 1989              	.LVL83:
 1990              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1991              		.loc 1 748 62 view .LVU651
 1992 0b71 4E8B0CEF 		mov	r9, QWORD PTR [rdi+r13*8]	# *_240, *_240
 1993              	.LVL84:
 748:sieve_extend.c ****         }
 1994              		.loc 1 748 62 view .LVU652
 1995 0b75 C4429BF7 		shrx	r12, r9, r12	# tmp368, *_240, shift_flipped
 1995      E1
 1996              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 1997              		.loc 1 748 80 view .LVU653
 1998 0b7a 4D09E6   		or	r14, r12	# tmp370, tmp368
 1999 0b7d 4C8934D7 		mov	QWORD PTR [rdi+rdx*8], r14	# *_250, tmp370
 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2000              		.loc 1 747 58 is_stmt 1 view .LVU654
 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2001              		.loc 1 747 40 view .LVU655
 2002 0b81 C5F877   		vzeroupper
 2003              	.L72:
 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2004              		.loc 1 747 40 is_stmt 0 view .LVU656
 2005              	.LBE274:
 750:sieve_extend.c ****     }
 2006              		.loc 1 750 9 is_stmt 1 view .LVU657
 750:sieve_extend.c ****     }
 2007              		.loc 1 750 39 view .LVU658
 2008              	.LVL85:
 750:sieve_extend.c ****     }
 2009              		.loc 1 750 39 is_stmt 0 view .LVU659
 2010              	.LBE273:
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2011              		.loc 1 754 12 is_stmt 1 view .LVU660
 2012 0b84 4C8B7424 		mov	r14, QWORD PTR -8[rsp]	# destination_stop_word, %sfp
 2012      F8
 2013 0b89 48C1E003 		sal	rax, 3	# _225,
 2014              	.LVL86:
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2015              		.loc 1 754 12 is_stmt 0 view .LVU661
 2016 0b8d 498D5E01 		lea	rbx, 1[r14]	# _198,
 2017 0b91 48895C24 		mov	QWORD PTR -24[rsp], rbx	# %sfp, _198
 2017      E8
 2018              	.LBB276:
 2019              	# sieve_extend.c:750:         source_word += loop_distance; copy_word+= loop_distance;
 750:sieve_extend.c ****     }
 2020              		.loc 1 750 21 view .LVU662
 2021 0b96 4531ED   		xor	r13d, r13d	# _173
 2022              	.LVL87:
 2023              	.L68:
GAS LISTING /tmp/cctyCFAS.s 			page 61


 750:sieve_extend.c ****     }
 2024              		.loc 1 750 21 view .LVU663
 2025 0b99 4C8B5C24 		mov	r11, QWORD PTR -8[rsp]	# destination_stop_word, %sfp
 2025      F8
 2026              	.LBE276:
 2027              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 755:sieve_extend.c ****     }
 2028              		.loc 1 755 99 view .LVU664
 2029 0b9e 0FB64C24 		movzx	ecx, BYTE PTR -12[rsp]	# tmp897, %sfp
 2029      F4
 2030 0ba3 4801F8   		add	rax, rdi	# ivtmp.170, bitarray
 2031 0ba6 4C89DE   		mov	rsi, r11	# tmp428, destination_stop_word
 2032 0ba9 C462F1F7 		shlx	r9, QWORD PTR 8[rax], rcx	# tmp419, MEM[base: _318, offset: 8B], tmp897
 2032      4808
 2033              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 755:sieve_extend.c ****     }
 2034              		.loc 1 755 54 view .LVU665
 2035 0baf C462BBF7 		shrx	r10, QWORD PTR [rax], r8	# tmp421, MEM[base: _318, offset: 0B], _184
 2035      10
 2036 0bb4 4C29F6   		sub	rsi, r14	# tmp428, copy_word
 2037              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 755:sieve_extend.c ****     }
 2038              		.loc 1 755 72 view .LVU666
 2039 0bb7 4D09D1   		or	r9, r10	# tmp423, tmp421
 2040              	# sieve_extend.c:754:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2041              		.loc 1 754 57 view .LVU667
 2042 0bba 498D4E01 		lea	rcx, 1[r14]	# copy_word,
 2043              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 755:sieve_extend.c ****     }
 2044              		.loc 1 755 72 view .LVU668
 2045 0bbe 4E890CF7 		mov	QWORD PTR [rdi+r14*8], r9	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 0
 2046 0bc2 83E607   		and	esi, 7	# tmp429,
 2047              	.LVL88:
 755:sieve_extend.c ****     }
 2048              		.loc 1 755 9 is_stmt 1 view .LVU669
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2049              		.loc 1 754 48 view .LVU670
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2050              		.loc 1 754 12 view .LVU671
 2051 0bc5 4C8D5008 		lea	r10, 8[rax]	# ivtmp.170,
 2052              	# sieve_extend.c:754:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2053              		.loc 1 754 5 is_stmt 0 view .LVU672
 2054 0bc9 4939CB   		cmp	r11, rcx	# destination_stop_word, copy_word
 2055 0bcc 0F822AFC 		jb	.L81	#,
 2055      FFFF
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2056              		.loc 1 754 5 view .LVU673
 2057 0bd2 4885F6   		test	rsi, rsi	# tmp429
 2058 0bd5 0F841501 		je	.L249	#,
 2058      0000
 2059 0bdb 4883FE01 		cmp	rsi, 1	# tmp429,
 2060 0bdf 0F84E100 		je	.L201	#,
 2060      0000
 2061 0be5 4883FE02 		cmp	rsi, 2	# tmp429,
 2062 0be9 0F84B900 		je	.L202	#,
GAS LISTING /tmp/cctyCFAS.s 			page 62


 2062      0000
 2063 0bef 4883FE03 		cmp	rsi, 3	# tmp429,
 2064 0bf3 0F849000 		je	.L203	#,
 2064      0000
 2065 0bf9 4883FE04 		cmp	rsi, 4	# tmp429,
 2066 0bfd 746C     		je	.L204	#,
 2067 0bff 4883FE05 		cmp	rsi, 5	# tmp429,
 2068 0c03 7447     		je	.L205	#,
 2069 0c05 4883FE06 		cmp	rsi, 6	# tmp429,
 2070 0c09 7423     		je	.L206	#,
 755:sieve_extend.c ****     }
 2071              		.loc 1 755 9 is_stmt 1 view .LVU674
 2072              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 755:sieve_extend.c ****     }
 2073              		.loc 1 755 54 is_stmt 0 view .LVU675
 2074 0c0b 498B12   		mov	rdx, QWORD PTR [r10]	# MEM[base: _318, offset: 0B], MEM[base: _318, offset: 0B]
 2075              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 755:sieve_extend.c ****     }
 2076              		.loc 1 755 99 view .LVU676
 2077 0c0e 440FB664 		movzx	r12d, BYTE PTR -12[rsp]	# tmp900, %sfp
 2077      24F4
 2078              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 755:sieve_extend.c ****     }
 2079              		.loc 1 755 54 view .LVU677
 2080 0c14 C4E2BBF7 		shrx	rsi, rdx, r8	# tmp637, MEM[base: _318, offset: 0B], _184
 2080      F2
 2081              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 755:sieve_extend.c ****     }
 2082              		.loc 1 755 99 view .LVU678
 2083 0c19 C44299F7 		shlx	r11, QWORD PTR 8[r10], r12	# tmp635, MEM[base: _318, offset: 8B], tmp900
 2083      5A08
 2084              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 755:sieve_extend.c ****     }
 2085              		.loc 1 755 72 view .LVU679
 2086 0c1f 4C09DE   		or	rsi, r11	# tmp638, tmp635
 2087 0c22 488934CF 		mov	QWORD PTR [rdi+rcx*8], rsi	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2088              		.loc 1 754 48 is_stmt 1 view .LVU680
 2089 0c26 4C8D5010 		lea	r10, 16[rax]	# ivtmp.170,
 2090              	# sieve_extend.c:754:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2091              		.loc 1 754 57 is_stmt 0 view .LVU681
 2092 0c2a 498D4E02 		lea	rcx, 2[r14]	# copy_word,
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2093              		.loc 1 754 12 is_stmt 1 view .LVU682
 2094              	.L206:
 755:sieve_extend.c ****     }
 2095              		.loc 1 755 9 view .LVU683
 2096              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 755:sieve_extend.c ****     }
 2097              		.loc 1 755 99 is_stmt 0 view .LVU684
 2098 0c2e 0FB64424 		movzx	eax, BYTE PTR -12[rsp]	# tmp901, %sfp
 2098      F4
 2099              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 755:sieve_extend.c ****     }
 2100              		.loc 1 755 54 view .LVU685
 2101 0c33 C442BBF7 		shrx	r9, QWORD PTR [r10], r8	# tmp642, MEM[base: _318, offset: 0B], _184
GAS LISTING /tmp/cctyCFAS.s 			page 63


 2101      0A
 2102              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 755:sieve_extend.c ****     }
 2103              		.loc 1 755 99 view .LVU686
 2104 0c38 C442F9F7 		shlx	r14, QWORD PTR 8[r10], rax	# tmp640, MEM[base: _318, offset: 8B], tmp901
 2104      7208
 2105              	.LVL89:
 2106              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 755:sieve_extend.c ****     }
 2107              		.loc 1 755 72 view .LVU687
 2108 0c3e 4D09CE   		or	r14, r9	# tmp643, tmp642
 2109 0c41 4C8934CF 		mov	QWORD PTR [rdi+rcx*8], r14	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2110              		.loc 1 754 48 is_stmt 1 view .LVU688
 2111 0c45 4983C208 		add	r10, 8	# ivtmp.170,
 2112              	# sieve_extend.c:754:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2113              		.loc 1 754 57 is_stmt 0 view .LVU689
 2114 0c49 48FFC1   		inc	rcx	# copy_word
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2115              		.loc 1 754 12 is_stmt 1 view .LVU690
 2116              	.L205:
 755:sieve_extend.c ****     }
 2117              		.loc 1 755 9 view .LVU691
 2118              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 755:sieve_extend.c ****     }
 2119              		.loc 1 755 99 is_stmt 0 view .LVU692
 2120 0c4c 440FB664 		movzx	r12d, BYTE PTR -12[rsp]	# tmp902, %sfp
 2120      24F4
 2121              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 755:sieve_extend.c ****     }
 2122              		.loc 1 755 54 view .LVU693
 2123 0c52 C4C2BBF7 		shrx	rdx, QWORD PTR [r10], r8	# tmp647, MEM[base: _318, offset: 0B], _184
 2123      12
 2124              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 755:sieve_extend.c ****     }
 2125              		.loc 1 755 99 view .LVU694
 2126 0c57 C44299F7 		shlx	r11, QWORD PTR 8[r10], r12	# tmp645, MEM[base: _318, offset: 8B], tmp902
 2126      5A08
 2127              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 755:sieve_extend.c ****     }
 2128              		.loc 1 755 72 view .LVU695
 2129 0c5d 4909D3   		or	r11, rdx	# tmp648, tmp647
 2130 0c60 4C891CCF 		mov	QWORD PTR [rdi+rcx*8], r11	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2131              		.loc 1 754 48 is_stmt 1 view .LVU696
 2132 0c64 4983C208 		add	r10, 8	# ivtmp.170,
 2133              	# sieve_extend.c:754:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2134              		.loc 1 754 57 is_stmt 0 view .LVU697
 2135 0c68 48FFC1   		inc	rcx	# copy_word
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2136              		.loc 1 754 12 is_stmt 1 view .LVU698
 2137              	.L204:
 755:sieve_extend.c ****     }
 2138              		.loc 1 755 9 view .LVU699
 2139              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
GAS LISTING /tmp/cctyCFAS.s 			page 64


 755:sieve_extend.c ****     }
 2140              		.loc 1 755 99 is_stmt 0 view .LVU700
 2141 0c6b 0FB67424 		movzx	esi, BYTE PTR -12[rsp]	# tmp903, %sfp
 2141      F4
 2142              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 755:sieve_extend.c ****     }
 2143              		.loc 1 755 54 view .LVU701
 2144 0c70 C442BBF7 		shrx	r14, QWORD PTR [r10], r8	# tmp652, MEM[base: _318, offset: 0B], _184
 2144      32
 2145              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 755:sieve_extend.c ****     }
 2146              		.loc 1 755 99 view .LVU702
 2147 0c75 C4C2C9F7 		shlx	rax, QWORD PTR 8[r10], rsi	# tmp650, MEM[base: _318, offset: 8B], tmp903
 2147      4208
 2148              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 755:sieve_extend.c ****     }
 2149              		.loc 1 755 72 view .LVU703
 2150 0c7b 4C09F0   		or	rax, r14	# tmp653, tmp652
 2151 0c7e 488904CF 		mov	QWORD PTR [rdi+rcx*8], rax	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2152              		.loc 1 754 48 is_stmt 1 view .LVU704
 2153 0c82 4983C208 		add	r10, 8	# ivtmp.170,
 2154              	# sieve_extend.c:754:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2155              		.loc 1 754 57 is_stmt 0 view .LVU705
 2156 0c86 48FFC1   		inc	rcx	# copy_word
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2157              		.loc 1 754 12 is_stmt 1 view .LVU706
 2158              	.L203:
 755:sieve_extend.c ****     }
 2159              		.loc 1 755 9 view .LVU707
 2160              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 755:sieve_extend.c ****     }
 2161              		.loc 1 755 99 is_stmt 0 view .LVU708
 2162 0c89 440FB64C 		movzx	r9d, BYTE PTR -12[rsp]	# tmp904, %sfp
 2162      24F4
 2163              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 755:sieve_extend.c ****     }
 2164              		.loc 1 755 54 view .LVU709
 2165 0c8f C442BBF7 		shrx	r11, QWORD PTR [r10], r8	# tmp657, MEM[base: _318, offset: 0B], _184
 2165      1A
 2166              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 755:sieve_extend.c ****     }
 2167              		.loc 1 755 99 view .LVU710
 2168 0c94 C442B1F7 		shlx	r12, QWORD PTR 8[r10], r9	# tmp655, MEM[base: _318, offset: 8B], tmp904
 2168      6208
 2169              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 755:sieve_extend.c ****     }
 2170              		.loc 1 755 72 view .LVU711
 2171 0c9a 4D09DC   		or	r12, r11	# tmp658, tmp657
 2172 0c9d 4C8924CF 		mov	QWORD PTR [rdi+rcx*8], r12	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2173              		.loc 1 754 48 is_stmt 1 view .LVU712
 2174 0ca1 4983C208 		add	r10, 8	# ivtmp.170,
 2175              	# sieve_extend.c:754:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2176              		.loc 1 754 57 is_stmt 0 view .LVU713
GAS LISTING /tmp/cctyCFAS.s 			page 65


 2177 0ca5 48FFC1   		inc	rcx	# copy_word
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2178              		.loc 1 754 12 is_stmt 1 view .LVU714
 2179              	.L202:
 755:sieve_extend.c ****     }
 2180              		.loc 1 755 9 view .LVU715
 2181              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 755:sieve_extend.c ****     }
 2182              		.loc 1 755 99 is_stmt 0 view .LVU716
 2183 0ca8 0FB65424 		movzx	edx, BYTE PTR -12[rsp]	# tmp905, %sfp
 2183      F4
 2184              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 755:sieve_extend.c ****     }
 2185              		.loc 1 755 54 view .LVU717
 2186 0cad C4C2BBF7 		shrx	rsi, QWORD PTR [r10], r8	# tmp662, MEM[base: _318, offset: 0B], _184
 2186      32
 2187              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 755:sieve_extend.c ****     }
 2188              		.loc 1 755 99 view .LVU718
 2189 0cb2 C4C2E9F7 		shlx	rax, QWORD PTR 8[r10], rdx	# tmp660, MEM[base: _318, offset: 8B], tmp905
 2189      4208
 2190              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 755:sieve_extend.c ****     }
 2191              		.loc 1 755 72 view .LVU719
 2192 0cb8 4809F0   		or	rax, rsi	# tmp663, tmp662
 2193 0cbb 488904CF 		mov	QWORD PTR [rdi+rcx*8], rax	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2194              		.loc 1 754 48 is_stmt 1 view .LVU720
 2195 0cbf 4983C208 		add	r10, 8	# ivtmp.170,
 2196              	# sieve_extend.c:754:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2197              		.loc 1 754 57 is_stmt 0 view .LVU721
 2198 0cc3 48FFC1   		inc	rcx	# copy_word
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2199              		.loc 1 754 12 is_stmt 1 view .LVU722
 2200              	.L201:
 755:sieve_extend.c ****     }
 2201              		.loc 1 755 9 view .LVU723
 2202              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 755:sieve_extend.c ****     }
 2203              		.loc 1 755 99 is_stmt 0 view .LVU724
 2204 0cc6 440FB674 		movzx	r14d, BYTE PTR -12[rsp]	# tmp906, %sfp
 2204      24F4
 2205              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 755:sieve_extend.c ****     }
 2206              		.loc 1 755 54 view .LVU725
 2207 0ccc C442BBF7 		shrx	r12, QWORD PTR [r10], r8	# tmp667, MEM[base: _318, offset: 0B], _184
 2207      22
 2208              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 755:sieve_extend.c ****     }
 2209              		.loc 1 755 99 view .LVU726
 2210 0cd1 C44289F7 		shlx	r9, QWORD PTR 8[r10], r14	# tmp665, MEM[base: _318, offset: 8B], tmp906
 2210      4A08
 2211              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 755:sieve_extend.c ****     }
 2212              		.loc 1 755 72 view .LVU727
 2213 0cd7 4D09E1   		or	r9, r12	# tmp668, tmp667
GAS LISTING /tmp/cctyCFAS.s 			page 66


 2214 0cda 4C890CCF 		mov	QWORD PTR [rdi+rcx*8], r9	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 0
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2215              		.loc 1 754 48 is_stmt 1 view .LVU728
 2216              	# sieve_extend.c:754:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2217              		.loc 1 754 57 is_stmt 0 view .LVU729
 2218 0cde 48FFC1   		inc	rcx	# copy_word
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2219              		.loc 1 754 12 is_stmt 1 view .LVU730
 2220 0ce1 4983C208 		add	r10, 8	# ivtmp.170,
 2221              	# sieve_extend.c:754:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2222              		.loc 1 754 5 is_stmt 0 view .LVU731
 2223 0ce5 48394C24 		cmp	QWORD PTR -8[rsp], rcx	# %sfp, copy_word
 2223      F8
 2224 0cea 0F820CFB 		jb	.L81	#,
 2224      FFFF
 2225              	.L249:
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2226              		.loc 1 754 5 view .LVU732
 2227 0cf0 448B5C24 		mov	r11d, DWORD PTR -12[rsp]	# _182, %sfp
 2227      F4
 2228              	.L80:
 755:sieve_extend.c ****     }
 2229              		.loc 1 755 9 is_stmt 1 view .LVU733
 2230              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 755:sieve_extend.c ****     }
 2231              		.loc 1 755 54 is_stmt 0 view .LVU734
 2232 0cf5 C4C2BBF7 		shrx	rax, QWORD PTR [r10], r8	# tmp583, MEM[base: _318, offset: 0B], _184
 2232      02
 2233              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 755:sieve_extend.c ****     }
 2234              		.loc 1 755 99 view .LVU735
 2235 0cfa C4C2A1F7 		shlx	rdx, QWORD PTR 8[r10], r11	# tmp581, MEM[base: _318, offset: 8B], _182
 2235      5208
 2236              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 755:sieve_extend.c ****     }
 2237              		.loc 1 755 72 view .LVU736
 2238 0d00 4809C2   		or	rdx, rax	# tmp584, tmp583
 2239 0d03 488914CF 		mov	QWORD PTR [rdi+rcx*8], rdx	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2240              		.loc 1 754 48 is_stmt 1 view .LVU737
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2241              		.loc 1 754 12 view .LVU738
 755:sieve_extend.c ****     }
 2242              		.loc 1 755 9 view .LVU739
 2243 0d07 4983C240 		add	r10, 64	# ivtmp.170,
 2244              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 755:sieve_extend.c ****     }
 2245              		.loc 1 755 54 is_stmt 0 view .LVU740
 2246 0d0b C442BBF7 		shrx	r14, QWORD PTR -56[r10], r8	# tmp590, MEM[base: _318, offset: 0B], _184
 2246      72C8
 2247              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 755:sieve_extend.c ****     }
 2248              		.loc 1 755 99 view .LVU741
 2249 0d11 C4C2A1F7 		shlx	rsi, QWORD PTR -48[r10], r11	# tmp588, MEM[base: _318, offset: 8B], _182
 2249      72D0
GAS LISTING /tmp/cctyCFAS.s 			page 67


 2250              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 755:sieve_extend.c ****     }
 2251              		.loc 1 755 72 view .LVU742
 2252 0d17 4C09F6   		or	rsi, r14	# tmp591, tmp590
 2253 0d1a 488974CF 		mov	QWORD PTR 8[rdi+rcx*8], rsi	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset:
 2253      08
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2254              		.loc 1 754 48 is_stmt 1 view .LVU743
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2255              		.loc 1 754 12 view .LVU744
 755:sieve_extend.c ****     }
 2256              		.loc 1 755 9 view .LVU745
 2257              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 755:sieve_extend.c ****     }
 2258              		.loc 1 755 54 is_stmt 0 view .LVU746
 2259 0d1f C442BBF7 		shrx	r9, QWORD PTR -48[r10], r8	# tmp597, MEM[base: _318, offset: 0B], _184
 2259      4AD0
 2260              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 755:sieve_extend.c ****     }
 2261              		.loc 1 755 99 view .LVU747
 2262 0d25 C442A1F7 		shlx	r12, QWORD PTR -40[r10], r11	# tmp595, MEM[base: _318, offset: 8B], _182
 2262      62D8
 2263              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 755:sieve_extend.c ****     }
 2264              		.loc 1 755 72 view .LVU748
 2265 0d2b 4D09CC   		or	r12, r9	# tmp598, tmp597
 2266 0d2e 4C8964CF 		mov	QWORD PTR 16[rdi+rcx*8], r12	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset
 2266      10
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2267              		.loc 1 754 48 is_stmt 1 view .LVU749
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2268              		.loc 1 754 12 view .LVU750
 755:sieve_extend.c ****     }
 2269              		.loc 1 755 9 view .LVU751
 2270              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 755:sieve_extend.c ****     }
 2271              		.loc 1 755 54 is_stmt 0 view .LVU752
 2272 0d33 C4C2BBF7 		shrx	rax, QWORD PTR -40[r10], r8	# tmp604, MEM[base: _318, offset: 0B], _184
 2272      42D8
 2273              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 755:sieve_extend.c ****     }
 2274              		.loc 1 755 99 view .LVU753
 2275 0d39 C4C2A1F7 		shlx	rdx, QWORD PTR -32[r10], r11	# tmp602, MEM[base: _318, offset: 8B], _182
 2275      52E0
 2276              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 755:sieve_extend.c ****     }
 2277              		.loc 1 755 72 view .LVU754
 2278 0d3f 4809C2   		or	rdx, rax	# tmp605, tmp604
 2279 0d42 488954CF 		mov	QWORD PTR 24[rdi+rcx*8], rdx	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset
 2279      18
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2280              		.loc 1 754 48 is_stmt 1 view .LVU755
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2281              		.loc 1 754 12 view .LVU756
 755:sieve_extend.c ****     }
 2282              		.loc 1 755 9 view .LVU757
 2283              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
GAS LISTING /tmp/cctyCFAS.s 			page 68


 755:sieve_extend.c ****     }
 2284              		.loc 1 755 54 is_stmt 0 view .LVU758
 2285 0d47 C442BBF7 		shrx	r14, QWORD PTR -32[r10], r8	# tmp611, MEM[base: _318, offset: 0B], _184
 2285      72E0
 2286              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 755:sieve_extend.c ****     }
 2287              		.loc 1 755 99 view .LVU759
 2288 0d4d C4C2A1F7 		shlx	rsi, QWORD PTR -24[r10], r11	# tmp609, MEM[base: _318, offset: 8B], _182
 2288      72E8
 2289              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 755:sieve_extend.c ****     }
 2290              		.loc 1 755 72 view .LVU760
 2291 0d53 4C09F6   		or	rsi, r14	# tmp612, tmp611
 2292 0d56 488974CF 		mov	QWORD PTR 32[rdi+rcx*8], rsi	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset
 2292      20
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2293              		.loc 1 754 48 is_stmt 1 view .LVU761
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2294              		.loc 1 754 12 view .LVU762
 755:sieve_extend.c ****     }
 2295              		.loc 1 755 9 view .LVU763
 2296              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 755:sieve_extend.c ****     }
 2297              		.loc 1 755 99 is_stmt 0 view .LVU764
 2298 0d5b C442A1F7 		shlx	r12, QWORD PTR -16[r10], r11	# tmp616, MEM[base: _318, offset: 8B], _182
 2298      62F0
 2299              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 755:sieve_extend.c ****     }
 2300              		.loc 1 755 54 view .LVU765
 2301 0d61 C442BBF7 		shrx	r9, QWORD PTR -24[r10], r8	# tmp618, MEM[base: _318, offset: 0B], _184
 2301      4AE8
 2302              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 755:sieve_extend.c ****     }
 2303              		.loc 1 755 72 view .LVU766
 2304 0d67 4D09CC   		or	r12, r9	# tmp619, tmp618
 2305 0d6a 4C8964CF 		mov	QWORD PTR 40[rdi+rcx*8], r12	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset
 2305      28
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2306              		.loc 1 754 48 is_stmt 1 view .LVU767
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2307              		.loc 1 754 12 view .LVU768
 755:sieve_extend.c ****     }
 2308              		.loc 1 755 9 view .LVU769
 2309              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 755:sieve_extend.c ****     }
 2310              		.loc 1 755 99 is_stmt 0 view .LVU770
 2311 0d6f C4C2A1F7 		shlx	rdx, QWORD PTR -8[r10], r11	# tmp623, MEM[base: _318, offset: 8B], _182
 2311      52F8
 2312              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 755:sieve_extend.c ****     }
 2313              		.loc 1 755 54 view .LVU771
 2314 0d75 C4C2BBF7 		shrx	rax, QWORD PTR -16[r10], r8	# tmp625, MEM[base: _318, offset: 0B], _184
 2314      42F0
 2315              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 755:sieve_extend.c ****     }
 2316              		.loc 1 755 72 view .LVU772
 2317 0d7b 4809C2   		or	rdx, rax	# tmp626, tmp625
GAS LISTING /tmp/cctyCFAS.s 			page 69


 2318 0d7e 488954CF 		mov	QWORD PTR 48[rdi+rcx*8], rdx	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset
 2318      30
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2319              		.loc 1 754 48 is_stmt 1 view .LVU773
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2320              		.loc 1 754 12 view .LVU774
 755:sieve_extend.c ****     }
 2321              		.loc 1 755 9 view .LVU775
 2322              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 755:sieve_extend.c ****     }
 2323              		.loc 1 755 99 is_stmt 0 view .LVU776
 2324 0d83 C4C2A1F7 		shlx	rsi, QWORD PTR [r10], r11	# tmp630, MEM[base: _318, offset: 8B], _182
 2324      32
 2325              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 755:sieve_extend.c ****     }
 2326              		.loc 1 755 54 view .LVU777
 2327 0d88 C442BBF7 		shrx	r14, QWORD PTR -8[r10], r8	# tmp632, MEM[base: _318, offset: 0B], _184
 2327      72F8
 2328              	# sieve_extend.c:755:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 755:sieve_extend.c ****     }
 2329              		.loc 1 755 72 view .LVU778
 2330 0d8e 4C09F6   		or	rsi, r14	# tmp633, tmp632
 2331 0d91 488974CF 		mov	QWORD PTR 56[rdi+rcx*8], rsi	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset
 2331      38
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2332              		.loc 1 754 48 is_stmt 1 view .LVU779
 2333              	# sieve_extend.c:754:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2334              		.loc 1 754 57 is_stmt 0 view .LVU780
 2335 0d96 4883C108 		add	rcx, 8	# copy_word,
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2336              		.loc 1 754 12 is_stmt 1 view .LVU781
 2337              	# sieve_extend.c:754:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 754:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2338              		.loc 1 754 5 is_stmt 0 view .LVU782
 2339 0d9a 48394C24 		cmp	QWORD PTR -8[rsp], rcx	# %sfp, copy_word
 2339      F8
 2340 0d9f 0F8350FF 		jnb	.L80	#,
 2340      FFFF
 2341 0da5 E952FAFF 		jmp	.L81	#
 2341      FF
 2342              	.LVL90:
 2343 0daa 660F1F44 		.p2align 4,,10
 2343      0000
 2344              		.p2align 3
 2345              	.L260:
 730:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 2346              		.loc 1 730 9 is_stmt 1 view .LVU783
 2347              	# sieve_extend.c:732:                                 & keepmask(copy_start) & chopmask(destination
 732:sieve_extend.c ****         return; // rapid exit for one word variant
 2348              		.loc 1 732 56 is_stmt 0 view .LVU784
 2349 0db0 4D21D7   		and	r15, r10	# tmp311, _189
 2350 0db3 4C21F8   		and	rax, r15	# tmp312, tmp311
 2351              	# sieve_extend.c:730:         bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the s
 730:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 2352              		.loc 1 730 29 view .LVU785
 2353 0db6 4909C6   		or	r14, rax	# tmp313, tmp312
GAS LISTING /tmp/cctyCFAS.s 			page 70


 2354 0db9 4D897500 		mov	QWORD PTR 0[r13], r14	# *_177, tmp313
 733:sieve_extend.c ****     }
 2355              		.loc 1 733 9 is_stmt 1 view .LVU786
 2356              	# sieve_extend.c:759: }
 2357              		.loc 1 759 1 is_stmt 0 view .LVU787
 2358 0dbd 488D65D8 		lea	rsp, -40[rbp]	#,
 2359 0dc1 5B       		pop	rbx	#
 2360 0dc2 415C     		pop	r12	#
 2361 0dc4 415D     		pop	r13	#
 2362 0dc6 415E     		pop	r14	#
 2363 0dc8 415F     		pop	r15	#
 2364 0dca 5D       		pop	rbp	#
 2365              		.cfi_remember_state
 2366              		.cfi_def_cfa 7, 8
 2367 0dcb C3       		ret	
 2368              	.LVL91:
 2369 0dcc 0F1F4000 		.p2align 4,,10
 2370              		.p2align 3
 2371              	.L255:
 2372              		.cfi_restore_state
 2373              		.loc 1 759 1 view .LVU788
 2374 0dd0 C5F877   		vzeroupper
 2375 0dd3 E9ACFDFF 		jmp	.L72	#
 2375      FF
 2376              	.LVL92:
 2377 0dd8 0F1F8400 		.p2align 4,,10
 2377      00000000 
 2378              		.p2align 3
 2379              	.L257:
 2380              		.loc 1 759 1 view .LVU789
 2381 0de0 C5F877   		vzeroupper
 2382 0de3 E914FAFF 		jmp	.L81	#
 2382      FF
 2383              	.LVL93:
 2384              	.L69:
 2385              		.loc 1 759 1 view .LVU790
 2386 0de8 488B5424 		mov	rdx, QWORD PTR -32[rsp]	# source_word, %sfp
 2386      E0
 2387 0ded 488D040A 		lea	rax, [rdx+rcx]	# source_word,
 2388 0df1 488D0CC7 		lea	rcx, [rdi+rax*8]	# _334,
 2389 0df5 4989CD   		mov	r13, rcx	# tmp433, _334
 2390 0df8 4D29DD   		sub	r13, r11	# tmp433, ivtmp.188
 2391 0dfb 4983ED08 		sub	r13, 8	# tmp434,
 2392 0dff 49C1ED03 		shr	r13, 3	# tmp432,
 2393 0e03 49FFC5   		inc	r13	# tmp435
 2394              	.LBB277:
 2395              	.LBB275:
 2396              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 2397              		.loc 1 748 35 view .LVU791
 2398 0e06 4829D6   		sub	rsi, rdx	# tmp373, source_word
 2399 0e09 4183E507 		and	r13d, 7	# tmp436,
 2400 0e0d 0F840201 		je	.L250	#,
 2400      0000
 2401 0e13 4983FD01 		cmp	r13, 1	# tmp436,
 2402 0e17 0F84D300 		je	.L188	#,
 2402      0000
GAS LISTING /tmp/cctyCFAS.s 			page 71


 2403 0e1d 4983FD02 		cmp	r13, 2	# tmp436,
 2404 0e21 0F84AC00 		je	.L189	#,
 2404      0000
 2405 0e27 4983FD03 		cmp	r13, 3	# tmp436,
 2406 0e2b 0F848500 		je	.L190	#,
 2406      0000
 2407 0e31 4983FD04 		cmp	r13, 4	# tmp436,
 2408 0e35 7463     		je	.L191	#,
 2409 0e37 4983FD05 		cmp	r13, 5	# tmp436,
 2410 0e3b 7440     		je	.L192	#,
 2411 0e3d 4983FD06 		cmp	r13, 6	# tmp436,
 2412 0e41 741D     		je	.L193	#,
 2413              	.LVL94:
 748:sieve_extend.c ****         }
 2414              		.loc 1 748 13 is_stmt 1 view .LVU792
 2415              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 2416              		.loc 1 748 109 is_stmt 0 view .LVU793
 2417 0e43 440FB654 		movzx	r10d, BYTE PTR -12[rsp]	# tmp908, %sfp
 2417      24F4
 2418              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 2419              		.loc 1 748 62 view .LVU794
 2420 0e49 C442BBF7 		shrx	r14, QWORD PTR [r11], r8	# tmp670, MEM[base: _328, offset: 0B], _184
 2420      33
 2421              	.LVL95:
 2422              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 2423              		.loc 1 748 109 view .LVU795
 2424 0e4e C4C2A9F7 		shlx	rbx, QWORD PTR 8[r11], r10	# tmp672, MEM[base: _328, offset: 8B], tmp908
 2424      5B08
 2425              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 2426              		.loc 1 748 80 view .LVU796
 2427 0e54 4909DE   		or	r14, rbx	# tmp673, tmp672
 2428 0e57 4D8974F3 		mov	QWORD PTR 8[r11+rsi*8], r14	# MEM[base: _328, index: _330, step: 8, offset: 8B], tmp673
 2428      08
 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2429              		.loc 1 747 58 is_stmt 1 view .LVU797
 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2430              		.loc 1 747 40 view .LVU798
 2431 0e5c 4983C308 		add	r11, 8	# ivtmp.188,
 2432              	.L193:
 748:sieve_extend.c ****         }
 2433              		.loc 1 748 13 view .LVU799
 2434              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 2435              		.loc 1 748 109 is_stmt 0 view .LVU800
 2436 0e60 440FB664 		movzx	r12d, BYTE PTR -12[rsp]	# tmp909, %sfp
 2436      24F4
 2437              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 2438              		.loc 1 748 62 view .LVU801
 2439 0e66 C442BBF7 		shrx	r9, QWORD PTR [r11], r8	# tmp675, MEM[base: _328, offset: 0B], _184
 2439      0B
 2440              	.LVL96:
 2441              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
GAS LISTING /tmp/cctyCFAS.s 			page 72


 748:sieve_extend.c ****         }
 2442              		.loc 1 748 109 view .LVU802
 2443 0e6b C4C299F7 		shlx	rdx, QWORD PTR 8[r11], r12	# tmp677, MEM[base: _328, offset: 8B], tmp909
 2443      5308
 2444              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 2445              		.loc 1 748 80 view .LVU803
 2446 0e71 4909D1   		or	r9, rdx	# tmp678, tmp677
 2447 0e74 4D894CF3 		mov	QWORD PTR 8[r11+rsi*8], r9	# MEM[base: _328, index: _330, step: 8, offset: 8B], tmp678
 2447      08
 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2448              		.loc 1 747 58 is_stmt 1 view .LVU804
 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2449              		.loc 1 747 40 view .LVU805
 2450 0e79 4983C308 		add	r11, 8	# ivtmp.188,
 2451              	.L192:
 748:sieve_extend.c ****         }
 2452              		.loc 1 748 13 view .LVU806
 2453              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 2454              		.loc 1 748 109 is_stmt 0 view .LVU807
 2455 0e7d 440FB674 		movzx	r14d, BYTE PTR -12[rsp]	# tmp910, %sfp
 2455      24F4
 2456              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 2457              		.loc 1 748 62 view .LVU808
 2458 0e83 C442BBF7 		shrx	r13, QWORD PTR [r11], r8	# tmp680, MEM[base: _328, offset: 0B], _184
 2458      2B
 2459              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 2460              		.loc 1 748 109 view .LVU809
 2461 0e88 C44289F7 		shlx	r10, QWORD PTR 8[r11], r14	# tmp682, MEM[base: _328, offset: 8B], tmp910
 2461      5308
 2462              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 2463              		.loc 1 748 80 view .LVU810
 2464 0e8e 4D09D5   		or	r13, r10	# tmp683, tmp682
 2465 0e91 4D896CF3 		mov	QWORD PTR 8[r11+rsi*8], r13	# MEM[base: _328, index: _330, step: 8, offset: 8B], tmp683
 2465      08
 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2466              		.loc 1 747 58 is_stmt 1 view .LVU811
 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2467              		.loc 1 747 40 view .LVU812
 2468 0e96 4983C308 		add	r11, 8	# ivtmp.188,
 2469              	.L191:
 748:sieve_extend.c ****         }
 2470              		.loc 1 748 13 view .LVU813
 2471              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 2472              		.loc 1 748 109 is_stmt 0 view .LVU814
 2473 0e9a 0FB65C24 		movzx	ebx, BYTE PTR -12[rsp]	# tmp911, %sfp
 2473      F4
 2474              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 2475              		.loc 1 748 62 view .LVU815
 2476 0e9f C442BBF7 		shrx	r9, QWORD PTR [r11], r8	# tmp685, MEM[base: _328, offset: 0B], _184
 2476      0B
GAS LISTING /tmp/cctyCFAS.s 			page 73


 2477              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 2478              		.loc 1 748 109 view .LVU816
 2479 0ea4 C442E1F7 		shlx	r12, QWORD PTR 8[r11], rbx	# tmp687, MEM[base: _328, offset: 8B], tmp911
 2479      6308
 2480              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 2481              		.loc 1 748 80 view .LVU817
 2482 0eaa 4D09E1   		or	r9, r12	# tmp688, tmp687
 2483 0ead 4D894CF3 		mov	QWORD PTR 8[r11+rsi*8], r9	# MEM[base: _328, index: _330, step: 8, offset: 8B], tmp688
 2483      08
 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2484              		.loc 1 747 58 is_stmt 1 view .LVU818
 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2485              		.loc 1 747 40 view .LVU819
 2486 0eb2 4983C308 		add	r11, 8	# ivtmp.188,
 2487              	.L190:
 748:sieve_extend.c ****         }
 2488              		.loc 1 748 13 view .LVU820
 2489              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 2490              		.loc 1 748 109 is_stmt 0 view .LVU821
 2491 0eb6 440FB66C 		movzx	r13d, BYTE PTR -12[rsp]	# tmp912, %sfp
 2491      24F4
 2492              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 2493              		.loc 1 748 62 view .LVU822
 2494 0ebc C4C2BBF7 		shrx	rdx, QWORD PTR [r11], r8	# tmp690, MEM[base: _328, offset: 0B], _184
 2494      13
 2495              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 2496              		.loc 1 748 109 view .LVU823
 2497 0ec1 C44291F7 		shlx	r14, QWORD PTR 8[r11], r13	# tmp692, MEM[base: _328, offset: 8B], tmp912
 2497      7308
 2498              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 2499              		.loc 1 748 80 view .LVU824
 2500 0ec7 4C09F2   		or	rdx, r14	# tmp693, tmp692
 2501 0eca 498954F3 		mov	QWORD PTR 8[r11+rsi*8], rdx	# MEM[base: _328, index: _330, step: 8, offset: 8B], tmp693
 2501      08
 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2502              		.loc 1 747 58 is_stmt 1 view .LVU825
 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2503              		.loc 1 747 40 view .LVU826
 2504 0ecf 4983C308 		add	r11, 8	# ivtmp.188,
 2505              	.L189:
 748:sieve_extend.c ****         }
 2506              		.loc 1 748 13 view .LVU827
 2507              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 2508              		.loc 1 748 109 is_stmt 0 view .LVU828
 2509 0ed3 440FB654 		movzx	r10d, BYTE PTR -12[rsp]	# tmp913, %sfp
 2509      24F4
 2510              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 2511              		.loc 1 748 62 view .LVU829
 2512 0ed9 C442BBF7 		shrx	r9, QWORD PTR [r11], r8	# tmp695, MEM[base: _328, offset: 0B], _184
GAS LISTING /tmp/cctyCFAS.s 			page 74


 2512      0B
 2513              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 2514              		.loc 1 748 109 view .LVU830
 2515 0ede C4C2A9F7 		shlx	rbx, QWORD PTR 8[r11], r10	# tmp697, MEM[base: _328, offset: 8B], tmp913
 2515      5B08
 2516              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 2517              		.loc 1 748 80 view .LVU831
 2518 0ee4 4909D9   		or	r9, rbx	# tmp698, tmp697
 2519 0ee7 4D894CF3 		mov	QWORD PTR 8[r11+rsi*8], r9	# MEM[base: _328, index: _330, step: 8, offset: 8B], tmp698
 2519      08
 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2520              		.loc 1 747 58 is_stmt 1 view .LVU832
 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2521              		.loc 1 747 40 view .LVU833
 2522 0eec 4983C308 		add	r11, 8	# ivtmp.188,
 2523              	.L188:
 748:sieve_extend.c ****         }
 2524              		.loc 1 748 13 view .LVU834
 2525              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 2526              		.loc 1 748 109 is_stmt 0 view .LVU835
 2527 0ef0 0FB65424 		movzx	edx, BYTE PTR -12[rsp]	# tmp914, %sfp
 2527      F4
 2528              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 2529              		.loc 1 748 62 view .LVU836
 2530 0ef5 C442BBF7 		shrx	r12, QWORD PTR [r11], r8	# tmp700, MEM[base: _328, offset: 0B], _184
 2530      23
 2531              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 2532              		.loc 1 748 109 view .LVU837
 2533 0efa C442E9F7 		shlx	r13, QWORD PTR 8[r11], rdx	# tmp702, MEM[base: _328, offset: 8B], tmp914
 2533      6B08
 2534              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 2535              		.loc 1 748 80 view .LVU838
 2536 0f00 4D09EC   		or	r12, r13	# tmp703, tmp702
 2537 0f03 4D8964F3 		mov	QWORD PTR 8[r11+rsi*8], r12	# MEM[base: _328, index: _330, step: 8, offset: 8B], tmp703
 2537      08
 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2538              		.loc 1 747 58 is_stmt 1 view .LVU839
 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2539              		.loc 1 747 40 view .LVU840
 2540 0f08 4983C308 		add	r11, 8	# ivtmp.188,
 2541              	# sieve_extend.c:747:         for (register counter_t i = 0; i <loop_distance; i++) {
 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2542              		.loc 1 747 9 is_stmt 0 view .LVU841
 2543 0f0c 4939CB   		cmp	r11, rcx	# ivtmp.188, _334
 2544 0f0f 0F846FFC 		je	.L72	#,
 2544      FFFF
 2545              	.L250:
 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2546              		.loc 1 747 9 view .LVU842
 2547 0f15 448B7424 		mov	r14d, DWORD PTR -12[rsp]	# _182, %sfp
 2547      F4
GAS LISTING /tmp/cctyCFAS.s 			page 75


 2548              	.L74:
 748:sieve_extend.c ****         }
 2549              		.loc 1 748 13 is_stmt 1 view .LVU843
 2550              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 2551              		.loc 1 748 109 is_stmt 0 view .LVU844
 2552 0f1a C44289F7 		shlx	r10, QWORD PTR 8[r11], r14	# tmp376, MEM[base: _328, offset: 8B], _182
 2552      5308
 2553              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 2554              		.loc 1 748 62 view .LVU845
 2555 0f20 C442BBF7 		shrx	r9, QWORD PTR [r11], r8	# tmp374, MEM[base: _328, offset: 0B], _184
 2555      0B
 2556              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 2557              		.loc 1 748 80 view .LVU846
 2558 0f25 4D09D1   		or	r9, r10	# tmp378, tmp376
 2559 0f28 4D894CF3 		mov	QWORD PTR 8[r11+rsi*8], r9	# MEM[base: _328, index: _330, step: 8, offset: 8B], tmp378
 2559      08
 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2560              		.loc 1 747 58 is_stmt 1 view .LVU847
 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2561              		.loc 1 747 40 view .LVU848
 2562 0f2d 4D8D6B10 		lea	r13, 16[r11]	# ivtmp.188,
 2563 0f31 498D5B08 		lea	rbx, 8[r11]	# tmp437,
 748:sieve_extend.c ****         }
 2564              		.loc 1 748 13 view .LVU849
 2565              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 2566              		.loc 1 748 109 is_stmt 0 view .LVU850
 2567 0f35 C4E289F7 		shlx	rdx, QWORD PTR 8[rbx], r14	# tmp496, MEM[base: _328, offset: 8B], _182
 2567      5308
 2568              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 2569              		.loc 1 748 62 view .LVU851
 2570 0f3b C442BBF7 		shrx	r12, QWORD PTR 8[r11], r8	# tmp494, MEM[base: _328, offset: 0B], _184
 2570      6308
 2571              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 2572              		.loc 1 748 80 view .LVU852
 2573 0f41 4909D4   		or	r12, rdx	# tmp497, tmp496
 2574 0f44 4D8964F3 		mov	QWORD PTR 16[r11+rsi*8], r12	# MEM[base: _328, index: _330, step: 8, offset: 8B], tmp497
 2574      10
 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2575              		.loc 1 747 58 is_stmt 1 view .LVU853
 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2576              		.loc 1 747 40 view .LVU854
 748:sieve_extend.c ****         }
 2577              		.loc 1 748 13 view .LVU855
 2578 0f49 498D5B18 		lea	rbx, 24[r11]	# ivtmp.188,
 2579              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 2580              		.loc 1 748 109 is_stmt 0 view .LVU856
 2581 0f4d C44289F7 		shlx	r10, QWORD PTR 8[r13], r14	# tmp502, MEM[base: _328, offset: 8B], _182
 2581      5508
 2582              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
GAS LISTING /tmp/cctyCFAS.s 			page 76


 2583              		.loc 1 748 62 view .LVU857
 2584 0f53 C442BBF7 		shrx	r9, QWORD PTR 16[r11], r8	# tmp500, MEM[base: _328, offset: 0B], _184
 2584      4B10
 2585              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 2586              		.loc 1 748 80 view .LVU858
 2587 0f59 4D09D1   		or	r9, r10	# tmp503, tmp502
 2588 0f5c 4D894CF3 		mov	QWORD PTR 24[r11+rsi*8], r9	# MEM[base: _328, index: _330, step: 8, offset: 8B], tmp503
 2588      18
 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2589              		.loc 1 747 58 is_stmt 1 view .LVU859
 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2590              		.loc 1 747 40 view .LVU860
 748:sieve_extend.c ****         }
 2591              		.loc 1 748 13 view .LVU861
 2592 0f61 4D8D6B20 		lea	r13, 32[r11]	# ivtmp.188,
 2593              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 2594              		.loc 1 748 109 is_stmt 0 view .LVU862
 2595 0f65 C4E289F7 		shlx	rdx, QWORD PTR 8[rbx], r14	# tmp508, MEM[base: _328, offset: 8B], _182
 2595      5308
 2596              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 2597              		.loc 1 748 62 view .LVU863
 2598 0f6b C442BBF7 		shrx	r12, QWORD PTR 24[r11], r8	# tmp506, MEM[base: _328, offset: 0B], _184
 2598      6318
 2599              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 2600              		.loc 1 748 80 view .LVU864
 2601 0f71 4909D4   		or	r12, rdx	# tmp509, tmp508
 2602 0f74 4D8964F3 		mov	QWORD PTR 32[r11+rsi*8], r12	# MEM[base: _328, index: _330, step: 8, offset: 8B], tmp509
 2602      20
 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2603              		.loc 1 747 58 is_stmt 1 view .LVU865
 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2604              		.loc 1 747 40 view .LVU866
 748:sieve_extend.c ****         }
 2605              		.loc 1 748 13 view .LVU867
 2606 0f79 498D5B28 		lea	rbx, 40[r11]	# ivtmp.188,
 2607              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 2608              		.loc 1 748 109 is_stmt 0 view .LVU868
 2609 0f7d C44289F7 		shlx	r10, QWORD PTR 8[r13], r14	# tmp514, MEM[base: _328, offset: 8B], _182
 2609      5508
 2610              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 2611              		.loc 1 748 62 view .LVU869
 2612 0f83 C442BBF7 		shrx	r9, QWORD PTR 32[r11], r8	# tmp512, MEM[base: _328, offset: 0B], _184
 2612      4B20
 2613              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 2614              		.loc 1 748 80 view .LVU870
 2615 0f89 4D09D1   		or	r9, r10	# tmp515, tmp514
 2616 0f8c 4D894CF3 		mov	QWORD PTR 40[r11+rsi*8], r9	# MEM[base: _328, index: _330, step: 8, offset: 8B], tmp515
 2616      28
 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2617              		.loc 1 747 58 is_stmt 1 view .LVU871
GAS LISTING /tmp/cctyCFAS.s 			page 77


 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2618              		.loc 1 747 40 view .LVU872
 748:sieve_extend.c ****         }
 2619              		.loc 1 748 13 view .LVU873
 2620 0f91 4D8D6B30 		lea	r13, 48[r11]	# ivtmp.188,
 2621              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 2622              		.loc 1 748 109 is_stmt 0 view .LVU874
 2623 0f95 C4E289F7 		shlx	rdx, QWORD PTR 8[rbx], r14	# tmp520, MEM[base: _328, offset: 8B], _182
 2623      5308
 2624              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 2625              		.loc 1 748 62 view .LVU875
 2626 0f9b C442BBF7 		shrx	r12, QWORD PTR 40[r11], r8	# tmp518, MEM[base: _328, offset: 0B], _184
 2626      6328
 2627              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 2628              		.loc 1 748 80 view .LVU876
 2629 0fa1 4909D4   		or	r12, rdx	# tmp521, tmp520
 2630 0fa4 4D8964F3 		mov	QWORD PTR 48[r11+rsi*8], r12	# MEM[base: _328, index: _330, step: 8, offset: 8B], tmp521
 2630      30
 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2631              		.loc 1 747 58 is_stmt 1 view .LVU877
 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2632              		.loc 1 747 40 view .LVU878
 748:sieve_extend.c ****         }
 2633              		.loc 1 748 13 view .LVU879
 2634 0fa9 498D5B38 		lea	rbx, 56[r11]	# ivtmp.188,
 2635              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 2636              		.loc 1 748 62 is_stmt 0 view .LVU880
 2637 0fad C442BBF7 		shrx	r9, QWORD PTR 48[r11], r8	# tmp524, MEM[base: _328, offset: 0B], _184
 2637      4B30
 2638              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 2639              		.loc 1 748 109 view .LVU881
 2640 0fb3 C44289F7 		shlx	r10, QWORD PTR 8[r13], r14	# tmp526, MEM[base: _328, offset: 8B], _182
 2640      5508
 2641              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 2642              		.loc 1 748 80 view .LVU882
 2643 0fb9 4D09D1   		or	r9, r10	# tmp527, tmp526
 2644 0fbc 4D894CF3 		mov	QWORD PTR 56[r11+rsi*8], r9	# MEM[base: _328, index: _330, step: 8, offset: 8B], tmp527
 2644      38
 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2645              		.loc 1 747 58 is_stmt 1 view .LVU883
 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2646              		.loc 1 747 40 view .LVU884
 748:sieve_extend.c ****         }
 2647              		.loc 1 748 13 view .LVU885
 2648              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 2649              		.loc 1 748 62 is_stmt 0 view .LVU886
 2650 0fc1 C442BBF7 		shrx	r12, QWORD PTR 56[r11], r8	# tmp530, MEM[base: _328, offset: 0B], _184
 2650      6338
 2651              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
GAS LISTING /tmp/cctyCFAS.s 			page 78


 2652              		.loc 1 748 109 view .LVU887
 2653 0fc7 C4E289F7 		shlx	rdx, QWORD PTR 8[rbx], r14	# tmp532, MEM[base: _328, offset: 8B], _182
 2653      5308
 2654              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 2655              		.loc 1 748 80 view .LVU888
 2656 0fcd 4909D4   		or	r12, rdx	# tmp533, tmp532
 2657 0fd0 4D8964F3 		mov	QWORD PTR 64[r11+rsi*8], r12	# MEM[base: _328, index: _330, step: 8, offset: 8B], tmp533
 2657      40
 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2658              		.loc 1 747 58 is_stmt 1 view .LVU889
 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2659              		.loc 1 747 40 view .LVU890
 2660 0fd5 4983C340 		add	r11, 64	# ivtmp.188,
 2661              	# sieve_extend.c:747:         for (register counter_t i = 0; i <loop_distance; i++) {
 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2662              		.loc 1 747 9 is_stmt 0 view .LVU891
 2663 0fd9 4939CB   		cmp	r11, rcx	# ivtmp.188, _334
 2664 0fdc 0F8538FF 		jne	.L74	#,
 2664      FFFF
 2665 0fe2 E99DFBFF 		jmp	.L72	#
 2665      FF
 2666              	.LVL97:
 2667              	.L262:
 748:sieve_extend.c ****         }
 2668              		.loc 1 748 13 is_stmt 1 view .LVU892
 2669              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 2670              		.loc 1 748 62 is_stmt 0 view .LVU893
 2671 0fe7 C4417E6F 		vmovdqu	ymm8, YMMWORD PTR [r11]	# tmp915, MEM[base: _180, index: ivtmp.197_336, offset: 0B]
 2671      03
 2672              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 2673              		.loc 1 748 109 view .LVU894
 2674 0fec C5FE6F1A 		vmovdqu	ymm3, YMMWORD PTR [rdx]	# tmp916, MEM[base: vectp.158_265, index: ivtmp.197_336, offset: 0
 2675              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 2676              		.loc 1 748 62 view .LVU895
 2677 0ff0 C53DD3C9 		vpsrlq	ymm9, ymm8, xmm1	# vect__49.156, tmp915, _184
 2678              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 2679              		.loc 1 748 109 view .LVU896
 2680 0ff4 C565F3D0 		vpsllq	ymm10, ymm3, xmm0	# vect__54.160, tmp916, _182
 2681 0ff8 BE200000 		mov	esi, 32	# ivtmp.197,
 2681      00
 2682              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 2683              		.loc 1 748 80 view .LVU897
 2684 0ffd C44135EB 		vpor	ymm11, ymm9, ymm10	# vect__58.161, vect__49.156, vect__54.160
 2684      DA
 2685              	# sieve_extend.c:748:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 748:sieve_extend.c ****         }
 2686              		.loc 1 748 35 view .LVU898
 2687 1002 C57E7F18 		vmovdqu	YMMWORD PTR [rax], ymm11	# MEM[base: vectp.163_273, index: ivtmp.197_336, offset: 0B], vec
 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2688              		.loc 1 747 58 is_stmt 1 view .LVU899
 747:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
GAS LISTING /tmp/cctyCFAS.s 			page 79


 2689              		.loc 1 747 40 view .LVU900
 2690 1006 E9EBF8FF 		jmp	.L187	#
 2690      FF
 2691              	.LBE275:
 2692              	.LBE277:
 2693              		.cfi_endproc
 2694              	.LFE71:
 2696 100b 0F1F4400 		.p2align 4
 2696      00
 2697              		.globl	compare_tuning_result
 2699              	compare_tuning_result:
 2700              	.LVL98:
 2701              	.LFB83:
 760:sieve_extend.c **** 
 761:sieve_extend.c **** static void extendSieve_shiftright_base(bitword_t* bitarray, const counter_t source_start, const co
 762:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 763:sieve_extend.c ****    
 764:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 765:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 766:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_calc(source_start);
 767:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 768:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 769:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 770:sieve_extend.c **** 
 771:sieve_extend.c ****     if (copy_word >= destination_stop_word) { 
 772:sieve_extend.c ****         bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose da
 773:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 774:sieve_extend.c ****                                 & keepmask(copy_start) & chopmask(destination_stop);
 775:sieve_extend.c ****         return; // rapid exit for one word variant
 776:sieve_extend.c ****     }
 777:sieve_extend.c **** 
 778:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose data
 779:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 780:sieve_extend.c ****                                 & keepmask(copy_start);
 781:sieve_extend.c ****     
 782:sieve_extend.c ****     copy_word++;
 783:sieve_extend.c **** 
 784:sieve_extend.c ****     debug { printf("...start - %ju - %ju - end\n",(uintmax_t)wordindex(copy_start), (uintmax_t)dest
 785:sieve_extend.c **** 
 786:sieve_extend.c ****     for (; copy_word <= destination_stop_word; copy_word++, source_word++ ) 
 787:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 788:sieve_extend.c ****     // bitarray[copy_word] &= chopmask(destination_stop);
 789:sieve_extend.c **** 
 790:sieve_extend.c **** }
 791:sieve_extend.c **** 
 792:sieve_extend.c **** static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source_start, const counter_
 793:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 794:sieve_extend.c **** 
 795:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 796:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 797:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_calc(copy_start);
 798:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 799:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 800:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 801:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 802:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 803:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
GAS LISTING /tmp/cctyCFAS.s 			page 80


 804:sieve_extend.c **** 
 805:sieve_extend.c ****     copy_word++;
 806:sieve_extend.c ****     source_word++;
 807:sieve_extend.c **** 
 808:sieve_extend.c ****     const counter_t aligned_copy_word = min(source_word + size, destination_stop_word); // after <<
 809:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 810:sieve_extend.c ****     source_word += distance;
 811:sieve_extend.c ****     copy_word += distance;
 812:sieve_extend.c **** 
 813:sieve_extend.c ****      debug { counter_t fast_loop_stop_word = uintsafeminus(aligned_copy_word,2); printf("...start -
 814:sieve_extend.c **** 
 815:sieve_extend.c ****     #pragma ivdep
 816:sieve_extend.c ****     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 817:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 818:sieve_extend.c ****     }
 819:sieve_extend.c **** 
 820:sieve_extend.c ****     if (copy_word >= destination_stop_word) return;
 821:sieve_extend.c **** 
 822:sieve_extend.c ****     source_word = copy_word - size; // recalibrate
 823:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 824:sieve_extend.c **** 
 825:sieve_extend.c ****     #pragma ivdep
 826:sieve_extend.c ****     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 827:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 828:sieve_extend.c **** 
 829:sieve_extend.c ****     #pragma ivdep
 830:sieve_extend.c ****     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 831:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 832:sieve_extend.c **** 
 833:sieve_extend.c **** 
 834:sieve_extend.c ****  }
 835:sieve_extend.c **** 
 836:sieve_extend.c **** static inline void extendSieve(bitword_t* bitarray, const counter_t source_start, const counter_t s
 837:sieve_extend.c ****     if (size < WORD_SIZE_counter)   {
 838:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 839:sieve_extend.c ****         return; // rapid exit for small sizes
 840:sieve_extend.c ****     }
 841:sieve_extend.c **** 
 842:sieve_extend.c ****     const counter_t copy_start  = source_start + size;
 843:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 844:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 845:sieve_extend.c **** 
 846:sieve_extend.c ****     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_start, size, destinatio
 847:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 848:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 849:sieve_extend.c **** }
 850:sieve_extend.c **** 
 851:sieve_extend.c **** static void sieve_block_stripe(struct sieve_state *sieve, const counter_t block_start, const counte
 852:sieve_extend.c ****     counter_t prime = prime_start;
 853:sieve_extend.c ****     counter_t start = prime * prime * 2 + prime * 2;
 854:sieve_extend.c ****     counter_t step  = prime * 2 + 1;
 855:sieve_extend.c ****     bitword_t* bitarray = sieve->bitarray;
 856:sieve_extend.c **** 
 857:sieve_extend.c ****     debug printf("Block strip for block %ju - %ju\n",(uintmax_t)block_start,(uintmax_t)block_stop);
 858:sieve_extend.c ****     
 859:sieve_extend.c ****     while (start <= block_stop) {
 860:sieve_extend.c ****         step  = prime * 2 + 1;
GAS LISTING /tmp/cctyCFAS.s 			page 81


 861:sieve_extend.c ****         if (step > SMALLSTEP_FASTER) break;
 862:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 863:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 864:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1 );
 865:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 866:sieve_extend.c ****     }
 867:sieve_extend.c ****     
 868:sieve_extend.c ****     while (start <= block_stop) {
 869:sieve_extend.c ****         step  = prime * 2 + 1;
 870:sieve_extend.c ****         if (step > MEDIUMSTEP_FASTER) break;
 871:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 872:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 873:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1 );
 874:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 875:sieve_extend.c ****     }
 876:sieve_extend.c **** 
 877:sieve_extend.c ****     counter_t start1 = 0; // save value
 878:sieve_extend.c ****     counter_t step1 = 0; // save value
 879:sieve_extend.c ****     while (start <= block_stop) {
 880:sieve_extend.c ****         step  = prime * 2 + 1;
 881:sieve_extend.c ****         if (step > 64) break;
 882:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 883:sieve_extend.c ****         start1 = start; // save value
 884:sieve_extend.c ****         step1 = step; // save value
 885:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1 );
 886:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 887:sieve_extend.c ****         step  = prime * 2 + 1;
 888:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 889:sieve_extend.c ****         if (start <= block_stop) setBitsTrue_race(bitarray, start1, start, step1, step, block_stop)
 890:sieve_extend.c ****         else                     setBitsTrue_smallRange(bitarray, start1, step1, block_stop);
 891:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1 );
 892:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 893:sieve_extend.c ****     }
 894:sieve_extend.c **** 
 895:sieve_extend.c ****     // while (start <= block_stop) {
 896:sieve_extend.c ****     //     step  = prime * 2 + 1;
 897:sieve_extend.c ****     //     if (step > WORD_SIZE_counter * 4) break;
 898:sieve_extend.c ****     //     if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + pr
 899:sieve_extend.c ****     //     setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
 900:sieve_extend.c ****     //     prime = searchBitFalse(bitarray, prime+1 );
 901:sieve_extend.c ****     //     start = prime * prime * 2 + prime * 2;
 902:sieve_extend.c ****     // }
 903:sieve_extend.c **** 
 904:sieve_extend.c ****     while (start <= block_stop) {
 905:sieve_extend.c ****         step  = prime * 2 + 1;
 906:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 907:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 908:sieve_extend.c ****         setBitsTrue_largeRange(bitarray, start, step, block_stop);
 909:sieve_extend.c ****         prime = searchBitFalse_longRange(bitarray, prime+1 );
 910:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 911:sieve_extend.c ****     }
 912:sieve_extend.c **** 
 913:sieve_extend.c ****     while (start <= block_stop) {
 914:sieve_extend.c ****         step  = prime * 2 + 1;
 915:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 916:sieve_extend.c ****         setBitsTrue_smallRange(bitarray, start, step, block_stop);
 917:sieve_extend.c ****         prime = searchBitFalse_longRange(bitarray, prime+1 );
GAS LISTING /tmp/cctyCFAS.s 			page 82


 918:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 919:sieve_extend.c ****     }
 920:sieve_extend.c **** }
 921:sieve_extend.c **** 
 922:sieve_extend.c **** struct block {
 923:sieve_extend.c ****     counter_t pattern_size; // size of pattern applied 
 924:sieve_extend.c ****     counter_t pattern_start; // start of pattern
 925:sieve_extend.c ****     counter_t prime; // next prime to be striped
 926:sieve_extend.c **** };
 927:sieve_extend.c **** 
 928:sieve_extend.c **** // returns prime that could not be handled:
 929:sieve_extend.c **** // start is too large
 930:sieve_extend.c **** // range is too big
 931:sieve_extend.c **** static struct block sieve_block_extend(struct sieve_state *sieve, const counter_t block_start, cons
 932:sieve_extend.c ****     register counter_t prime   = 0;
 933:sieve_extend.c ****     counter_t patternsize_bits = 1;
 934:sieve_extend.c ****     counter_t pattern_start    = 0;
 935:sieve_extend.c ****     counter_t range_stop       = block_start;
 936:sieve_extend.c ****     bitword_t* bitarray        = sieve->bitarray;
 937:sieve_extend.c ****     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 };
 938:sieve_extend.c **** 
 939:sieve_extend.c ****     sieve->bitarray[0] = SAFE_ZERO; // only the first word has to be cleared; the rest is populated
 940:sieve_extend.c ****     
 941:sieve_extend.c ****     for (;range_stop < block_stop;) {
 942:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 943:sieve_extend.c ****         counter_t start = prime * prime * 2 + prime * 2;
 944:sieve_extend.c ****         if (start > block_stop) break;
 945:sieve_extend.c **** 
 946:sieve_extend.c ****         const counter_t step  = prime * 2 + 1;
 947:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 948:sieve_extend.c **** 
 949:sieve_extend.c ****         range_stop = block_start + patternsize_bits * step * 2;  // range is x2 so the second block
 950:sieve_extend.c ****         block.pattern_size = patternsize_bits;
 951:sieve_extend.c ****         block.pattern_start = pattern_start;
 952:sieve_extend.c ****         if (range_stop > block_stop) return block; //range_stop = block_stop;
 953:sieve_extend.c **** 
 954:sieve_extend.c ****         if (patternsize_bits>1) {
 955:sieve_extend.c ****             pattern_start = block_start | patternsize_bits;
 956:sieve_extend.c ****             extendSieve(bitarray, pattern_start, patternsize_bits, range_stop);
 957:sieve_extend.c ****         }
 958:sieve_extend.c ****         patternsize_bits *= step;
 959:sieve_extend.c **** 
 960:sieve_extend.c ****         if      (step < SMALLSTEP_FASTER)      setBitsTrue_smallStep (bitarray, start, (bitshift_t)
 961:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitarray, start, step, range_
 962:sieve_extend.c ****         else if (step < WORD_SIZE_counter * 4) setBitsTrue_largeRange_vector(bitarray, start, step,
 963:sieve_extend.c ****         else                                   setBitsTrue_largeRange(bitarray, start, step, range_
 964:sieve_extend.c ****         block.prime = prime;
 965:sieve_extend.c ****     } 
 966:sieve_extend.c **** 
 967:sieve_extend.c ****     return block;
 968:sieve_extend.c **** }
 969:sieve_extend.c **** 
 970:sieve_extend.c **** static struct sieve_state *sieve(const counter_t maxints, const counter_t blocksize) {
 971:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 972:sieve_extend.c ****     counter_t prime         = 0;
 973:sieve_extend.c ****     counter_t block_start   = 0;
 974:sieve_extend.c ****     counter_t block_stop    = blocksize-1;
GAS LISTING /tmp/cctyCFAS.s 			page 83


 975:sieve_extend.c ****     bitword_t* bitarray        = sieve->bitarray;
 976:sieve_extend.c **** 
 977:sieve_extend.c ****     debug printf("Running sieve to find all primes up to %ju with blocksize %ju\n",maxints,blocksiz
 978:sieve_extend.c **** 
 979:sieve_extend.c ****     // fill the whole sieve bij adding en copying incrementally
 980:sieve_extend.c ****     struct block block = sieve_block_extend(sieve, 0, sieve->bits);
 981:sieve_extend.c ****     extendSieve(bitarray, block.pattern_start, block.pattern_size, sieve->bits);
 982:sieve_extend.c ****     prime = block.prime;
 983:sieve_extend.c **** 
 984:sieve_extend.c ****     // #pragma unroll 8
 985:sieve_extend.c ****     for (;block_start <= sieve->bits; block_start += blocksize, block_stop += blocksize) {
 986:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 987:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime);
 988:sieve_extend.c ****         sieve_block_stripe(sieve, block_start, block_stop, prime);
 989:sieve_extend.c ****     } 
 990:sieve_extend.c **** 
 991:sieve_extend.c ****     return sieve;
 992:sieve_extend.c **** }
 993:sieve_extend.c **** 
 994:sieve_extend.c **** static void show_primes(struct sieve_state *sieve, counter_t maxFactor) {
 995:sieve_extend.c ****     counter_t primeCount = 1;    // We already have 2
 996:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitarray, factor+
 997:sieve_extend.c ****         primeCount++;
 998:sieve_extend.c ****         if (factor < maxFactor/2) {
 999:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
1000:sieve_extend.c ****             if (primeCount % 10 == 0) printf("\n");
1001:sieve_extend.c ****         }
1002:sieve_extend.c ****     }
1003:sieve_extend.c ****     printf("\nFound %ju primes until %ju\n",(uintmax_t)primeCount, (uintmax_t)sieve->bits*2+1);
1004:sieve_extend.c **** }
1005:sieve_extend.c **** 
1006:sieve_extend.c **** static counter_t count_primes(struct sieve_state *sieve) {
1007:sieve_extend.c ****     counter_t primeCount = 1;
1008:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitarray, factor+
1009:sieve_extend.c ****     return primeCount;
1010:sieve_extend.c **** }
1011:sieve_extend.c **** 
1012:sieve_extend.c **** static void deepAnalyzePrimes(struct sieve_state *sieve) {
1013:sieve_extend.c ****     printf("DeepAnalyzing\n");
1014:sieve_extend.c ****     counter_t warn_prime = 0;
1015:sieve_extend.c ****     counter_t warn_nonprime = 0;
1016:sieve_extend.c ****     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
1017:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
1018:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1019:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
1020:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
1021:sieve_extend.c ****                 }
1022:sieve_extend.c ****             }
1023:sieve_extend.c ****         }
1024:sieve_extend.c ****         else {
1025:sieve_extend.c ****             counter_t c_prime = 0;
1026:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1027:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
1028:sieve_extend.c ****             }
1029:sieve_extend.c ****             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) was marked non-prime, 
1030:sieve_extend.c ****         }
1031:sieve_extend.c ****     }
GAS LISTING /tmp/cctyCFAS.s 			page 84


1032:sieve_extend.c **** }
1033:sieve_extend.c **** 
1034:sieve_extend.c **** 
1035:sieve_extend.c **** int validatePrimeCount(struct sieve_state *sieve, int option_verboselevel) {
1036:sieve_extend.c **** 
1037:sieve_extend.c ****     counter_t primecount = count_primes(sieve);
1038:sieve_extend.c ****     counter_t valid_primes = 0;
1039:sieve_extend.c ****     switch(sieve->size) {
1040:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
1041:sieve_extend.c ****         case 100:           valid_primes = 25;       break;
1042:sieve_extend.c ****         case 1000:          valid_primes = 168;      break;
1043:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
1044:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
1045:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
1046:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
1047:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
1048:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
1049:sieve_extend.c ****         default:            valid_primes= 0;
1050:sieve_extend.c ****     }
1051:sieve_extend.c **** 
1052:sieve_extend.c ****     int valid = (valid_primes == primecount);
1053:sieve_extend.c ****     if (valid  && option_verboselevel >= 4) printf("Result: Sievesize %ju is expected to have %ju p
1054:sieve_extend.c ****     if (!valid && option_verboselevel >= 1) {
1055:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
1056:sieve_extend.c ****         if (!valid && option_verboselevel >= 2) show_primes(sieve, default_show_primes_on_error);
1057:sieve_extend.c ****     }
1058:sieve_extend.c ****     if (!valid && option_verboselevel >= 3) deepAnalyzePrimes(sieve);
1059:sieve_extend.c ****     return (valid);
1060:sieve_extend.c **** }
1061:sieve_extend.c **** 
1062:sieve_extend.c **** void usage(char *name) {
1063:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
1064:sieve_extend.c ****     fprintf(stderr, "Options:\n");
1065:sieve_extend.c ****     fprintf(stderr, "  --verbose <level>  Show more output to a certain level:\n");
1066:sieve_extend.c ****     fprintf(stderr, "                     1 - show phase progress\n");
1067:sieve_extend.c ****     fprintf(stderr, "                     2 - show general progress within the phase\n");
1068:sieve_extend.c ****     fprintf(stderr, "                     3 - show actual work\n");
1069:sieve_extend.c ****     fprintf(stderr, "  --check            check the correctness of the algorithm\n");
1070:sieve_extend.c ****     fprintf(stderr, "  --show <maximum>   Show the primes found up to the maximum\n");
1071:sieve_extend.c ****     fprintf(stderr, "  --tune  <level>    find the best settings for the current os and hardware\n"
1072:sieve_extend.c ****     fprintf(stderr, "                     1 - fast tuning\n");
1073:sieve_extend.c ****     fprintf(stderr, "                     2 - refined tuning\n");
1074:sieve_extend.c ****     fprintf(stderr, "                     3 - maximum tuning (takes long)\n");
1075:sieve_extend.c ****     exit(1);
1076:sieve_extend.c **** }
1077:sieve_extend.c **** 
1078:sieve_extend.c **** typedef struct  {
1079:sieve_extend.c ****     counter_t maxints;
1080:sieve_extend.c ****     counter_t blocksize_bits;
1081:sieve_extend.c ****     counter_t blocksize_kb;
1082:sieve_extend.c ****     counter_t free_bits;
1083:sieve_extend.c ****     counter_t smallstep_faster;
1084:sieve_extend.c ****     counter_t mediumstep_faster;
1085:sieve_extend.c ****     counter_t sample_max;
1086:sieve_extend.c ****     double    sample_duration;
1087:sieve_extend.c ****     counter_t passes;
1088:sieve_extend.c ****     double    elapsed_time;
GAS LISTING /tmp/cctyCFAS.s 			page 85


1089:sieve_extend.c ****     double    avg;
1090:sieve_extend.c **** } tuning_result_type;
1091:sieve_extend.c **** 
1092:sieve_extend.c **** int compare_tuning_result(const void *a, const void *b) {
 2702              		.loc 1 1092 57 view -0
 2703              		.cfi_startproc
 2704              		.loc 1 1092 57 is_stmt 0 view .LVU902
 2705 1010 F30F1EFA 		endbr64	
1093:sieve_extend.c ****     tuning_result_type *resultA = (tuning_result_type *)a;
 2706              		.loc 1 1093 5 is_stmt 1 view .LVU903
 2707              	.LVL99:
1094:sieve_extend.c ****     tuning_result_type *resultB = (tuning_result_type *)b;
 2708              		.loc 1 1094 5 view .LVU904
1095:sieve_extend.c ****     return (resultB->avg > resultA->avg ? 1 : -1);
 2709              		.loc 1 1095 5 view .LVU905
 2710              	# sieve_extend.c:1095:     return (resultB->avg > resultA->avg ? 1 : -1);
 2711              		.loc 1 1095 45 is_stmt 0 view .LVU906
 2712 1014 C5FB1046 		vmovsd	xmm0, QWORD PTR 80[rsi]	# MEM[(struct tuning_result_type *)b_5(D)].avg, MEM[(struct tuning_
 2712      50
 2713 1019 31C0     		xor	eax, eax	# <retval>
 2714 101b C5F92F47 		vcomisd	xmm0, QWORD PTR 80[rdi]	# MEM[(struct tuning_result_type *)b_5(D)].avg, MEM[(struct tuning
 2714      50
 2715 1020 0F97C0   		seta	al	#, <retval>
 2716 1023 8D4400FF 		lea	eax, -1[rax+rax]	# <retval>,
 2717              	# sieve_extend.c:1096: }
1096:sieve_extend.c **** }
 2718              		.loc 1 1096 1 view .LVU907
 2719 1027 C3       		ret	
 2720              		.cfi_endproc
 2721              	.LFE83:
 2723 1028 0F1F8400 		.p2align 4
 2723      00000000 
 2725              	extendSieve_aligned:
 2726              	.LVL100:
 2727              	.LFB67:
 532:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 2728              		.loc 1 532 140 is_stmt 1 view -0
 2729              		.cfi_startproc
 533:sieve_extend.c **** 
 2730              		.loc 1 533 5 view .LVU909
 535:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 2731              		.loc 1 535 5 view .LVU910
 2732              	# sieve_extend.c:532: static void extendSieve_aligned(bitword_t* bitarray, const counter_t source_s
 532:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 2733              		.loc 1 532 140 is_stmt 0 view .LVU911
 2734 1030 55       		push	rbp	#
 2735              		.cfi_def_cfa_offset 16
 2736              		.cfi_offset 6, -16
 2737 1031 4889E5   		mov	rbp, rsp	#,
 2738              		.cfi_def_cfa_register 6
 2739 1034 4157     		push	r15	#
 2740 1036 4156     		push	r14	#
 2741              		.cfi_offset 15, -24
 2742              		.cfi_offset 14, -32
 2743              	# sieve_extend.c:540:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 540:sieve_extend.c **** 
 2744              		.loc 1 540 35 view .LVU912
GAS LISTING /tmp/cctyCFAS.s 			page 86


 2745 1038 4989FE   		mov	r14, rdi	# _5, bitarray
 2746              	# sieve_extend.c:532: static void extendSieve_aligned(bitword_t* bitarray, const counter_t source_s
 532:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 2747              		.loc 1 532 140 view .LVU913
 2748 103b 4155     		push	r13	#
 2749 103d 4154     		push	r12	#
 2750              		.cfi_offset 13, -40
 2751              		.cfi_offset 12, -48
 2752 103f 4989D4   		mov	r12, rdx	# size, tmp267
 2753              	# sieve_extend.c:536:     const counter_t copy_start = source_start + size;
 536:sieve_extend.c ****     counter_t source_word = wordindex(source_start);
 2754              		.loc 1 536 21 view .LVU914
 2755 1042 4801F2   		add	rdx, rsi	# copy_start, source_start
 2756              	.LVL101:
 2757              	# sieve_extend.c:532: static void extendSieve_aligned(bitword_t* bitarray, const counter_t source_s
 532:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 2758              		.loc 1 532 140 view .LVU915
 2759 1045 53       		push	rbx	#
 2760              	# sieve_extend.c:537:     counter_t source_word = wordindex(source_start);
 537:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 2761              		.loc 1 537 15 view .LVU916
 2762 1046 48C1EE06 		shr	rsi, 6	# source_start,
 2763              	.LVL102:
 2764              	# sieve_extend.c:538:     counter_t copy_word = wordindex(copy_start);
 538:sieve_extend.c ****     
 2765              		.loc 1 538 15 view .LVU917
 2766 104a 4889D0   		mov	rax, rdx	# ivtmp.241, copy_start
 2767              	# sieve_extend.c:532: static void extendSieve_aligned(bitword_t* bitarray, const counter_t source_s
 532:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 2768              		.loc 1 532 140 view .LVU918
 2769 104d 4883E4E0 		and	rsp, -32	#,
 2770 1051 4883EC20 		sub	rsp, 32	#,
 2771              		.cfi_offset 3, -56
 2772              	# sieve_extend.c:535:     const counter_t destination_stop_word = wordindex(destination_stop);
 535:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 2773              		.loc 1 535 21 view .LVU919
 2774 1055 4889CB   		mov	rbx, rcx	# tmp268, tmp268
 2775              	# sieve_extend.c:538:     counter_t copy_word = wordindex(copy_start);
 538:sieve_extend.c ****     
 2776              		.loc 1 538 15 view .LVU920
 2777 1058 48C1E806 		shr	rax, 6	# ivtmp.241,
 2778              	# sieve_extend.c:540:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 540:sieve_extend.c **** 
 2779              		.loc 1 540 52 view .LVU921
 2780 105c 89D1     		mov	ecx, edx	# tmp159, copy_start
 2781              	.LVL103:
 2782              	# sieve_extend.c:537:     counter_t source_word = wordindex(source_start);
 537:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 2783              		.loc 1 537 15 view .LVU922
 2784 105e 48893424 		mov	QWORD PTR [rsp], rsi	# %sfp, source_word
 2785              	# sieve_extend.c:540:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 540:sieve_extend.c **** 
 2786              		.loc 1 540 35 view .LVU923
 2787 1062 48C1E603 		sal	rsi, 3	# _4,
 2788 1066 4901F6   		add	r14, rsi	# _5, _4
 2789              	# sieve_extend.c:540:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 540:sieve_extend.c **** 
GAS LISTING /tmp/cctyCFAS.s 			page 87


 2790              		.loc 1 540 52 view .LVU924
 2791 1069 F7D1     		not	ecx	# tmp159
 2792 106b 48C7C2FF 		mov	rdx, -1	# tmp162,
 2792      FFFFFF
 2793              	# sieve_extend.c:535:     const counter_t destination_stop_word = wordindex(destination_stop);
 535:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 2794              		.loc 1 535 21 view .LVU925
 2795 1072 48C1EB06 		shr	rbx, 6	# tmp268,
 2796              	.LVL104:
 536:sieve_extend.c ****     counter_t source_word = wordindex(source_start);
 2797              		.loc 1 536 5 is_stmt 1 view .LVU926
 537:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 2798              		.loc 1 537 5 view .LVU927
 538:sieve_extend.c ****     
 2799              		.loc 1 538 5 view .LVU928
 540:sieve_extend.c **** 
 2800              		.loc 1 540 5 view .LVU929
 2801              	# sieve_extend.c:542:     while (copy_word + size <= destination_stop_word) {
 542:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 2802              		.loc 1 542 22 is_stmt 0 view .LVU930
 2803 1076 4D8D0C04 		lea	r9, [r12+rax]	# ivtmp.241,
 2804              	# sieve_extend.c:540:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 540:sieve_extend.c **** 
 2805              		.loc 1 540 35 view .LVU931
 2806 107a 48897424 		mov	QWORD PTR 8[rsp], rsi	# %sfp, _4
 2806      08
 2807              	# sieve_extend.c:532: static void extendSieve_aligned(bitword_t* bitarray, const counter_t source_s
 532:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 2808              		.loc 1 532 140 view .LVU932
 2809 107f 48897C24 		mov	QWORD PTR 16[rsp], rdi	# %sfp, bitarray
 2809      10
 2810              	# sieve_extend.c:540:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 540:sieve_extend.c **** 
 2811              		.loc 1 540 52 view .LVU933
 2812 1084 C4E2F3F7 		shrx	rsi, rdx, rcx	# tmp161, tmp162, tmp159
 2812      F2
 2813              	# sieve_extend.c:540:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 540:sieve_extend.c **** 
 2814              		.loc 1 540 49 view .LVU934
 2815 1089 C442C8F2 		andn	r8, rsi, QWORD PTR [r14]	# tmp165, tmp161, *_5
 2815      06
 2816              	# sieve_extend.c:540:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 540:sieve_extend.c **** 
 2817              		.loc 1 540 25 view .LVU935
 2818 108e 4C8904C7 		mov	QWORD PTR [rdi+rax*8], r8	# *_13, tmp165
 542:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 2819              		.loc 1 542 5 is_stmt 1 view .LVU936
 542:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 2820              		.loc 1 542 11 view .LVU937
 2821 1092 4C39CB   		cmp	rbx, r9	# destination_stop_word, ivtmp.241
 2822 1095 0F824D01 		jb	.L267	#,
 2822      0000
 2823 109b 4C8D2CC5 		lea	r13, 0[0+rax*8]	# _12,
 2823      00000000 
 2824 10a3 4901FD   		add	r13, rdi	# tmp166, bitarray
 2825 10a6 4A8D04CD 		lea	rax, 0[0+r9*8]	# tmp167,
 2825      00000000 
GAS LISTING /tmp/cctyCFAS.s 			page 88


 2826              	# sieve_extend.c:543:         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*
 543:sieve_extend.c ****         copy_word += size;
 2827              		.loc 1 543 9 is_stmt 0 view .LVU938
 2828 10ae 4E8D3CE5 		lea	r15, 0[0+r12*8]	# _15,
 2828      00000000 
 2829 10b6 4929C5   		sub	r13, rax	# _135, tmp167
 2830              	.LVL105:
 2831              	.L268:
 543:sieve_extend.c ****         copy_word += size;
 2832              		.loc 1 543 9 is_stmt 1 view .LVU939
 2833              	.LBB278:
 2834              	.LBI278:
 2835              		.file 2 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h"
   1:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** /* Copyright (C) 2004-2020 Free Software Foundation, Inc.
   2:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    This file is part of the GNU C Library.
   3:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
   4:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    The GNU C Library is free software; you can redistribute it and/or
   5:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    modify it under the terms of the GNU Lesser General Public
   6:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    License as published by the Free Software Foundation; either
   7:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    version 2.1 of the License, or (at your option) any later version.
   8:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
   9:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    The GNU C Library is distributed in the hope that it will be useful,
  10:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  12:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    Lesser General Public License for more details.
  13:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  14:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    You should have received a copy of the GNU Lesser General Public
  15:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    License along with the GNU C Library; if not, see
  16:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    <https://www.gnu.org/licenses/>.  */
  17:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  18:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #ifndef _BITS_STRING_FORTIFIED_H
  19:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #define _BITS_STRING_FORTIFIED_H 1
  20:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  21:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #ifndef _STRING_H
  22:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** # error "Never use <bits/string_fortified.h> directly; include <string.h> instead."
  23:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  24:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  25:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #if !__GNUC_PREREQ (5,0)
  26:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __warndecl (__warn_memset_zero_len,
  27:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	    "memset used with constant zero length parameter; this could be due to transposed parameters")
  28:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  29:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  30:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __fortify_function void *
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __NTH (memcpy (void *__restrict __dest, const void *__restrict __src,
 2836              		.loc 2 31 1 view .LVU940
 2837              	.LBB279:
  32:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
  33:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
 2838              		.loc 2 34 3 view .LVU941
 2839              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 2840              		.loc 2 34 10 is_stmt 0 view .LVU942
 2841 10b9 4B8D7CCD 		lea	rdi, 0[r13+r9*8]	# tmp169,
 2841      00
 2842 10be 4C89FA   		mov	rdx, r15	#, _15
 2843 10c1 4C89F6   		mov	rsi, r14	#, _5
 2844 10c4 4C894C24 		mov	QWORD PTR 24[rsp], r9	# %sfp, ivtmp.241
GAS LISTING /tmp/cctyCFAS.s 			page 89


 2844      18
 2845 10c9 E8000000 		call	memcpy@PLT	#
 2845      00
 2846              	.LVL106:
 2847              		.loc 2 34 10 view .LVU943
 2848              	.LBE279:
 2849              	.LBE278:
 544:sieve_extend.c ****     }
 2850              		.loc 1 544 9 is_stmt 1 view .LVU944
 542:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 2851              		.loc 1 542 11 view .LVU945
 2852 10ce 488B4424 		mov	rax, QWORD PTR 24[rsp]	# ivtmp.241, %sfp
 2852      18
 2853 10d3 4E8D0C20 		lea	r9, [rax+r12]	# ivtmp.241,
 2854 10d7 4C39CB   		cmp	rbx, r9	# destination_stop_word, ivtmp.241
 2855 10da 0F820801 		jb	.L267	#,
 2855      0000
 543:sieve_extend.c ****         copy_word += size;
 2856              		.loc 1 543 9 view .LVU946
 2857              	.LVL107:
 2858              	.LBB287:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 2859              		.loc 2 31 1 view .LVU947
 2860              	.LBB280:
 2861              		.loc 2 34 3 view .LVU948
 2862              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 2863              		.loc 2 34 10 is_stmt 0 view .LVU949
 2864 10e0 4B8D7CCD 		lea	rdi, 0[r13+r9*8]	# tmp246,
 2864      00
 2865 10e5 4C89FA   		mov	rdx, r15	#, _15
 2866 10e8 4C89F6   		mov	rsi, r14	#, _5
 2867 10eb 4C894C24 		mov	QWORD PTR 24[rsp], r9	# %sfp, ivtmp.241
 2867      18
 2868              	.LVL108:
 2869              		.loc 2 34 10 view .LVU950
 2870 10f0 E8000000 		call	memcpy@PLT	#
 2870      00
 2871              	.LVL109:
 2872              		.loc 2 34 10 view .LVU951
 2873              	.LBE280:
 2874              	.LBE287:
 544:sieve_extend.c ****     }
 2875              		.loc 1 544 9 is_stmt 1 view .LVU952
 542:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 2876              		.loc 1 542 11 view .LVU953
 2877 10f5 488B4424 		mov	rax, QWORD PTR 24[rsp]	# ivtmp.241, %sfp
 2877      18
 2878 10fa 4E8D1420 		lea	r10, [rax+r12]	# ivtmp.241,
 2879 10fe 4C39D3   		cmp	rbx, r10	# destination_stop_word, ivtmp.241
 2880 1101 0F82E100 		jb	.L267	#,
 2880      0000
 543:sieve_extend.c ****         copy_word += size;
 2881              		.loc 1 543 9 view .LVU954
 2882              	.LVL110:
 2883              	.LBB288:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 2884              		.loc 2 31 1 view .LVU955
GAS LISTING /tmp/cctyCFAS.s 			page 90


 2885              	.LBB281:
 2886              		.loc 2 34 3 view .LVU956
 2887              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 2888              		.loc 2 34 10 is_stmt 0 view .LVU957
 2889 1107 4B8D7CD5 		lea	rdi, 0[r13+r10*8]	# tmp249,
 2889      00
 2890 110c 4C89FA   		mov	rdx, r15	#, _15
 2891 110f 4C89F6   		mov	rsi, r14	#, _5
 2892 1112 4C895424 		mov	QWORD PTR 24[rsp], r10	# %sfp, ivtmp.241
 2892      18
 2893 1117 E8000000 		call	memcpy@PLT	#
 2893      00
 2894              	.LVL111:
 2895              		.loc 2 34 10 view .LVU958
 2896              	.LBE281:
 2897              	.LBE288:
 544:sieve_extend.c ****     }
 2898              		.loc 1 544 9 is_stmt 1 view .LVU959
 542:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 2899              		.loc 1 542 11 view .LVU960
 2900 111c 488B4424 		mov	rax, QWORD PTR 24[rsp]	# ivtmp.241, %sfp
 2900      18
 2901 1121 4E8D1C20 		lea	r11, [rax+r12]	# ivtmp.241,
 2902 1125 4C39DB   		cmp	rbx, r11	# destination_stop_word, ivtmp.241
 2903 1128 0F82BA00 		jb	.L267	#,
 2903      0000
 543:sieve_extend.c ****         copy_word += size;
 2904              		.loc 1 543 9 view .LVU961
 2905              	.LVL112:
 2906              	.LBB289:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 2907              		.loc 2 31 1 view .LVU962
 2908              	.LBB282:
 2909              		.loc 2 34 3 view .LVU963
 2910              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 2911              		.loc 2 34 10 is_stmt 0 view .LVU964
 2912 112e 4B8D7CDD 		lea	rdi, 0[r13+r11*8]	# tmp252,
 2912      00
 2913 1133 4C89FA   		mov	rdx, r15	#, _15
 2914 1136 4C89F6   		mov	rsi, r14	#, _5
 2915 1139 4C895C24 		mov	QWORD PTR 24[rsp], r11	# %sfp, ivtmp.241
 2915      18
 2916 113e E8000000 		call	memcpy@PLT	#
 2916      00
 2917              	.LVL113:
 2918              		.loc 2 34 10 view .LVU965
 2919              	.LBE282:
 2920              	.LBE289:
 544:sieve_extend.c ****     }
 2921              		.loc 1 544 9 is_stmt 1 view .LVU966
 542:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 2922              		.loc 1 542 11 view .LVU967
 2923 1143 488B4424 		mov	rax, QWORD PTR 24[rsp]	# ivtmp.241, %sfp
 2923      18
 2924 1148 4A8D0C20 		lea	rcx, [rax+r12]	# ivtmp.241,
 2925 114c 4839CB   		cmp	rbx, rcx	# destination_stop_word, ivtmp.241
 2926 114f 0F829300 		jb	.L267	#,
GAS LISTING /tmp/cctyCFAS.s 			page 91


 2926      0000
 543:sieve_extend.c ****         copy_word += size;
 2927              		.loc 1 543 9 view .LVU968
 2928              	.LVL114:
 2929              	.LBB290:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 2930              		.loc 2 31 1 view .LVU969
 2931              	.LBB283:
 2932              		.loc 2 34 3 view .LVU970
 2933              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 2934              		.loc 2 34 10 is_stmt 0 view .LVU971
 2935 1155 4C89FA   		mov	rdx, r15	#, _15
 2936 1158 498D7CCD 		lea	rdi, 0[r13+rcx*8]	# tmp255,
 2936      00
 2937 115d 4C89F6   		mov	rsi, r14	#, _5
 2938 1160 48894C24 		mov	QWORD PTR 24[rsp], rcx	# %sfp, ivtmp.241
 2938      18
 2939 1165 E8000000 		call	memcpy@PLT	#
 2939      00
 2940              	.LVL115:
 2941              		.loc 2 34 10 view .LVU972
 2942              	.LBE283:
 2943              	.LBE290:
 544:sieve_extend.c ****     }
 2944              		.loc 1 544 9 is_stmt 1 view .LVU973
 542:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 2945              		.loc 1 542 11 view .LVU974
 2946 116a 488B4424 		mov	rax, QWORD PTR 24[rsp]	# ivtmp.241, %sfp
 2946      18
 2947 116f 4A8D1420 		lea	rdx, [rax+r12]	# ivtmp.241,
 2948 1173 4839D3   		cmp	rbx, rdx	# destination_stop_word, ivtmp.241
 2949 1176 7270     		jb	.L267	#,
 543:sieve_extend.c ****         copy_word += size;
 2950              		.loc 1 543 9 view .LVU975
 2951              	.LVL116:
 2952              	.LBB291:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 2953              		.loc 2 31 1 view .LVU976
 2954              	.LBB284:
 2955              		.loc 2 34 3 view .LVU977
 2956              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 2957              		.loc 2 34 10 is_stmt 0 view .LVU978
 2958 1178 48895424 		mov	QWORD PTR 24[rsp], rdx	# %sfp, ivtmp.241
 2958      18
 2959 117d 498D7CD5 		lea	rdi, 0[r13+rdx*8]	# tmp258,
 2959      00
 2960 1182 4C89F6   		mov	rsi, r14	#, _5
 2961 1185 4C89FA   		mov	rdx, r15	#, _15
 2962 1188 E8000000 		call	memcpy@PLT	#
 2962      00
 2963              	.LVL117:
 2964              		.loc 2 34 10 view .LVU979
 2965              	.LBE284:
 2966              	.LBE291:
 544:sieve_extend.c ****     }
 2967              		.loc 1 544 9 is_stmt 1 view .LVU980
 542:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
GAS LISTING /tmp/cctyCFAS.s 			page 92


 2968              		.loc 1 542 11 view .LVU981
 2969 118d 488B4424 		mov	rax, QWORD PTR 24[rsp]	# ivtmp.241, %sfp
 2969      18
 2970 1192 4A8D3420 		lea	rsi, [rax+r12]	# ivtmp.241,
 2971 1196 4839F3   		cmp	rbx, rsi	# destination_stop_word, ivtmp.241
 2972 1199 724D     		jb	.L267	#,
 543:sieve_extend.c ****         copy_word += size;
 2973              		.loc 1 543 9 view .LVU982
 2974              	.LVL118:
 2975              	.LBB292:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 2976              		.loc 2 31 1 view .LVU983
 2977              	.LBB285:
 2978              		.loc 2 34 3 view .LVU984
 2979              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 2980              		.loc 2 34 10 is_stmt 0 view .LVU985
 2981 119b 48897424 		mov	QWORD PTR 24[rsp], rsi	# %sfp, ivtmp.241
 2981      18
 2982 11a0 498D7CF5 		lea	rdi, 0[r13+rsi*8]	# tmp261,
 2982      00
 2983 11a5 4C89FA   		mov	rdx, r15	#, _15
 2984 11a8 4C89F6   		mov	rsi, r14	#, _5
 2985 11ab E8000000 		call	memcpy@PLT	#
 2985      00
 2986              	.LVL119:
 2987              		.loc 2 34 10 view .LVU986
 2988              	.LBE285:
 2989              	.LBE292:
 544:sieve_extend.c ****     }
 2990              		.loc 1 544 9 is_stmt 1 view .LVU987
 542:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 2991              		.loc 1 542 11 view .LVU988
 2992 11b0 488B4424 		mov	rax, QWORD PTR 24[rsp]	# ivtmp.241, %sfp
 2992      18
 2993 11b5 4E8D0420 		lea	r8, [rax+r12]	# ivtmp.241,
 2994 11b9 4C39C3   		cmp	rbx, r8	# destination_stop_word, ivtmp.241
 2995 11bc 722A     		jb	.L267	#,
 543:sieve_extend.c ****         copy_word += size;
 2996              		.loc 1 543 9 view .LVU989
 2997              	.LVL120:
 2998              	.LBB293:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 2999              		.loc 2 31 1 view .LVU990
 3000              	.LBB286:
 3001              		.loc 2 34 3 view .LVU991
 3002              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 3003              		.loc 2 34 10 is_stmt 0 view .LVU992
 3004 11be 4B8D7CC5 		lea	rdi, 0[r13+r8*8]	# tmp264,
 3004      00
 3005 11c3 4C89FA   		mov	rdx, r15	#, _15
 3006 11c6 4C89F6   		mov	rsi, r14	#, _5
 3007 11c9 4C894424 		mov	QWORD PTR 24[rsp], r8	# %sfp, ivtmp.241
 3007      18
 3008 11ce E8000000 		call	memcpy@PLT	#
 3008      00
 3009              	.LVL121:
 3010              		.loc 2 34 10 view .LVU993
GAS LISTING /tmp/cctyCFAS.s 			page 93


 3011              	.LBE286:
 3012              	.LBE293:
 544:sieve_extend.c ****     }
 3013              		.loc 1 544 9 is_stmt 1 view .LVU994
 542:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 3014              		.loc 1 542 11 view .LVU995
 3015 11d3 488B4424 		mov	rax, QWORD PTR 24[rsp]	# ivtmp.241, %sfp
 3015      18
 3016              	.LVL122:
 542:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 3017              		.loc 1 542 11 is_stmt 0 view .LVU996
 3018 11d8 4E8D0C20 		lea	r9, [rax+r12]	# ivtmp.241,
 3019              	.LVL123:
 542:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 3020              		.loc 1 542 11 view .LVU997
 3021 11dc 4C39CB   		cmp	rbx, r9	# destination_stop_word, ivtmp.241
 3022 11df 0F83D4FE 		jnb	.L268	#,
 3022      FFFF
 3023              	.LVL124:
 3024              		.p2align 4,,10
 3025 11e5 0F1F00   		.p2align 3
 3026              	.L267:
 547:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 3027              		.loc 1 547 10 is_stmt 1 view .LVU998
 3028 11e8 4839C3   		cmp	rbx, rax	# destination_stop_word, ivtmp.241
 3029 11eb 0F86F701 		jbe	.L372	#,
 3029      0000
 3030 11f1 4C8B6C24 		mov	r13, QWORD PTR 8[rsp]	# _4, %sfp
 3030      08
 3031 11f6 4C8D24C5 		lea	r12, 0[0+rax*8]	# _41,
 3031      00000000 
 3032              	.LVL125:
 547:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 3033              		.loc 1 547 10 is_stmt 0 view .LVU999
 3034 11fe 498D7C24 		lea	rdi, 32[r12]	# tmp175,
 3034      20
 3035 1203 4939FD   		cmp	r13, rdi	# _4, tmp175
 3036 1206 4D8D5520 		lea	r10, 32[r13]	# tmp178,
 3037 120a 410F9DC7 		setge	r15b	#, tmp177
 3038 120e 4D39D4   		cmp	r12, r10	# _41, tmp178
 3039 1211 410F9DC3 		setge	r11b	#, tmp180
 3040 1215 4508DF   		or	r15b, r11b	# tmp177, tmp180
 3041 1218 0F84FA01 		je	.L270	#,
 3041      0000
 3042 121e 488D4BFF 		lea	rcx, -1[rbx]	# tmp182,
 3043 1222 4829C1   		sub	rcx, rax	# tmp183, ivtmp.241
 3044 1225 4883F908 		cmp	rcx, 8	# tmp183,
 3045 1229 0F86E901 		jbe	.L270	#,
 3045      0000
 3046 122f 4989D9   		mov	r9, rbx	# niters.210, destination_stop_word
 3047 1232 4929C1   		sub	r9, rax	# niters.210, ivtmp.241
 3048 1235 4C89CE   		mov	rsi, r9	# bnd.211, niters.210
 3049 1238 48C1EE02 		shr	rsi, 2	# bnd.211,
 3050 123c 48C1E605 		sal	rsi, 5	# _128,
 3051 1240 4C8D46E0 		lea	r8, -32[rsi]	# tmp198,
 3052 1244 49C1E805 		shr	r8, 5	# tmp196,
 3053 1248 49FFC0   		inc	r8	# tmp199
GAS LISTING /tmp/cctyCFAS.s 			page 94


 3054 124b 4C036424 		add	r12, QWORD PTR 16[rsp]	# vectp.219, %sfp
 3054      10
 3055 1250 31D2     		xor	edx, edx	# ivtmp.232
 3056 1252 4183E007 		and	r8d, 7	# tmp200,
 3057 1256 0F849D00 		je	.L271	#,
 3057      0000
 3058 125c 4983F801 		cmp	r8, 1	# tmp200,
 3059 1260 747E     		je	.L332	#,
 3060 1262 4983F802 		cmp	r8, 2	# tmp200,
 3061 1266 7468     		je	.L333	#,
 3062 1268 4983F803 		cmp	r8, 3	# tmp200,
 3063 126c 7452     		je	.L334	#,
 3064 126e 4983F804 		cmp	r8, 4	# tmp200,
 3065 1272 743C     		je	.L335	#,
 3066 1274 4983F805 		cmp	r8, 5	# tmp200,
 3067 1278 7426     		je	.L336	#,
 3068 127a 4983F806 		cmp	r8, 6	# tmp200,
 3069 127e 7410     		je	.L337	#,
 3070              	.LVL126:
 548:sieve_extend.c ****         source_word++;
 3071              		.loc 1 548 9 is_stmt 1 view .LVU1000
 3072              	# sieve_extend.c:548:         bitarray[copy_word] = bitarray[source_word];
 548:sieve_extend.c ****         source_word++;
 3073              		.loc 1 548 29 is_stmt 0 view .LVU1001
 3074 1280 C4C17E6F 		vmovdqu	ymm1, YMMWORD PTR [r14]	# tmp306, MEM[base: _5, index: ivtmp.232_126, offset: 0B]
 3074      0E
 3075 1285 BA200000 		mov	edx, 32	# ivtmp.232,
 3075      00
 3076 128a C4C17E7F 		vmovdqu	YMMWORD PTR [r12], ymm1	# MEM[base: vectp.219_98, index: ivtmp.232_126, offset: 0B], tmp30
 3076      0C24
 549:sieve_extend.c ****         copy_word++;
 3077              		.loc 1 549 9 is_stmt 1 view .LVU1002
 550:sieve_extend.c ****     }
 3078              		.loc 1 550 9 view .LVU1003
 547:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 3079              		.loc 1 547 10 view .LVU1004
 3080              	.L337:
 548:sieve_extend.c ****         source_word++;
 3081              		.loc 1 548 9 view .LVU1005
 3082              	# sieve_extend.c:548:         bitarray[copy_word] = bitarray[source_word];
 548:sieve_extend.c ****         source_word++;
 3083              		.loc 1 548 29 is_stmt 0 view .LVU1006
 3084 1290 C4C17E6F 		vmovdqu	ymm7, YMMWORD PTR [r14+rdx]	# tmp307, MEM[base: _5, index: ivtmp.232_126, offset: 0B]
 3084      3C16
 3085 1296 C4C17E7F 		vmovdqu	YMMWORD PTR [r12+rdx], ymm7	# MEM[base: vectp.219_98, index: ivtmp.232_126, offset: 0B], t
 3085      3C14
 549:sieve_extend.c ****         copy_word++;
 3086              		.loc 1 549 9 is_stmt 1 view .LVU1007
 550:sieve_extend.c ****     }
 3087              		.loc 1 550 9 view .LVU1008
 547:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 3088              		.loc 1 547 10 view .LVU1009
 3089 129c 4883C220 		add	rdx, 32	# ivtmp.232,
 3090              	.L336:
 548:sieve_extend.c ****         source_word++;
 3091              		.loc 1 548 9 view .LVU1010
 3092              	# sieve_extend.c:548:         bitarray[copy_word] = bitarray[source_word];
GAS LISTING /tmp/cctyCFAS.s 			page 95


 548:sieve_extend.c ****         source_word++;
 3093              		.loc 1 548 29 is_stmt 0 view .LVU1011
 3094 12a0 C4C17E6F 		vmovdqu	ymm6, YMMWORD PTR [r14+rdx]	# tmp308, MEM[base: _5, index: ivtmp.232_126, offset: 0B]
 3094      3416
 3095 12a6 C4C17E7F 		vmovdqu	YMMWORD PTR [r12+rdx], ymm6	# MEM[base: vectp.219_98, index: ivtmp.232_126, offset: 0B], t
 3095      3414
 549:sieve_extend.c ****         copy_word++;
 3096              		.loc 1 549 9 is_stmt 1 view .LVU1012
 550:sieve_extend.c ****     }
 3097              		.loc 1 550 9 view .LVU1013
 547:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 3098              		.loc 1 547 10 view .LVU1014
 3099 12ac 4883C220 		add	rdx, 32	# ivtmp.232,
 3100              	.L335:
 548:sieve_extend.c ****         source_word++;
 3101              		.loc 1 548 9 view .LVU1015
 3102              	# sieve_extend.c:548:         bitarray[copy_word] = bitarray[source_word];
 548:sieve_extend.c ****         source_word++;
 3103              		.loc 1 548 29 is_stmt 0 view .LVU1016
 3104 12b0 C4C17E6F 		vmovdqu	ymm5, YMMWORD PTR [r14+rdx]	# tmp309, MEM[base: _5, index: ivtmp.232_126, offset: 0B]
 3104      2C16
 3105 12b6 C4C17E7F 		vmovdqu	YMMWORD PTR [r12+rdx], ymm5	# MEM[base: vectp.219_98, index: ivtmp.232_126, offset: 0B], t
 3105      2C14
 549:sieve_extend.c ****         copy_word++;
 3106              		.loc 1 549 9 is_stmt 1 view .LVU1017
 550:sieve_extend.c ****     }
 3107              		.loc 1 550 9 view .LVU1018
 547:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 3108              		.loc 1 547 10 view .LVU1019
 3109 12bc 4883C220 		add	rdx, 32	# ivtmp.232,
 3110              	.L334:
 548:sieve_extend.c ****         source_word++;
 3111              		.loc 1 548 9 view .LVU1020
 3112              	# sieve_extend.c:548:         bitarray[copy_word] = bitarray[source_word];
 548:sieve_extend.c ****         source_word++;
 3113              		.loc 1 548 29 is_stmt 0 view .LVU1021
 3114 12c0 C4C17E6F 		vmovdqu	ymm4, YMMWORD PTR [r14+rdx]	# tmp310, MEM[base: _5, index: ivtmp.232_126, offset: 0B]
 3114      2416
 3115 12c6 C4C17E7F 		vmovdqu	YMMWORD PTR [r12+rdx], ymm4	# MEM[base: vectp.219_98, index: ivtmp.232_126, offset: 0B], t
 3115      2414
 549:sieve_extend.c ****         copy_word++;
 3116              		.loc 1 549 9 is_stmt 1 view .LVU1022
 550:sieve_extend.c ****     }
 3117              		.loc 1 550 9 view .LVU1023
 547:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 3118              		.loc 1 547 10 view .LVU1024
 3119 12cc 4883C220 		add	rdx, 32	# ivtmp.232,
 3120              	.L333:
 548:sieve_extend.c ****         source_word++;
 3121              		.loc 1 548 9 view .LVU1025
 3122              	# sieve_extend.c:548:         bitarray[copy_word] = bitarray[source_word];
 548:sieve_extend.c ****         source_word++;
 3123              		.loc 1 548 29 is_stmt 0 view .LVU1026
 3124 12d0 C4C17E6F 		vmovdqu	ymm0, YMMWORD PTR [r14+rdx]	# tmp311, MEM[base: _5, index: ivtmp.232_126, offset: 0B]
 3124      0416
 3125 12d6 C4C17E7F 		vmovdqu	YMMWORD PTR [r12+rdx], ymm0	# MEM[base: vectp.219_98, index: ivtmp.232_126, offset: 0B], t
 3125      0414
GAS LISTING /tmp/cctyCFAS.s 			page 96


 549:sieve_extend.c ****         copy_word++;
 3126              		.loc 1 549 9 is_stmt 1 view .LVU1027
 550:sieve_extend.c ****     }
 3127              		.loc 1 550 9 view .LVU1028
 547:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 3128              		.loc 1 547 10 view .LVU1029
 3129 12dc 4883C220 		add	rdx, 32	# ivtmp.232,
 3130              	.L332:
 548:sieve_extend.c ****         source_word++;
 3131              		.loc 1 548 9 view .LVU1030
 3132              	# sieve_extend.c:548:         bitarray[copy_word] = bitarray[source_word];
 548:sieve_extend.c ****         source_word++;
 3133              		.loc 1 548 29 is_stmt 0 view .LVU1031
 3134 12e0 C4C17E6F 		vmovdqu	ymm2, YMMWORD PTR [r14+rdx]	# tmp312, MEM[base: _5, index: ivtmp.232_126, offset: 0B]
 3134      1416
 3135 12e6 C4C17E7F 		vmovdqu	YMMWORD PTR [r12+rdx], ymm2	# MEM[base: vectp.219_98, index: ivtmp.232_126, offset: 0B], t
 3135      1414
 549:sieve_extend.c ****         copy_word++;
 3136              		.loc 1 549 9 is_stmt 1 view .LVU1032
 550:sieve_extend.c ****     }
 3137              		.loc 1 550 9 view .LVU1033
 547:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 3138              		.loc 1 547 10 view .LVU1034
 3139 12ec 4883C220 		add	rdx, 32	# ivtmp.232,
 3140 12f0 4839F2   		cmp	rdx, rsi	# ivtmp.232, _128
 3141 12f3 0F849600 		je	.L368	#,
 3141      0000
 3142              	.L271:
 548:sieve_extend.c ****         source_word++;
 3143              		.loc 1 548 9 view .LVU1035
 3144              	# sieve_extend.c:548:         bitarray[copy_word] = bitarray[source_word];
 548:sieve_extend.c ****         source_word++;
 3145              		.loc 1 548 29 is_stmt 0 view .LVU1036
 3146 12f9 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR [r14+rdx]	# tmp286, MEM[base: _5, index: ivtmp.232_126, offset: 0B]
 3146      1C16
 3147 12ff C4C17E7F 		vmovdqu	YMMWORD PTR [r12+rdx], ymm3	# MEM[base: vectp.219_98, index: ivtmp.232_126, offset: 0B], t
 3147      1C14
 549:sieve_extend.c ****         copy_word++;
 3148              		.loc 1 549 9 is_stmt 1 view .LVU1037
 550:sieve_extend.c ****     }
 3149              		.loc 1 550 9 view .LVU1038
 547:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 3150              		.loc 1 547 10 view .LVU1039
 548:sieve_extend.c ****         source_word++;
 3151              		.loc 1 548 9 view .LVU1040
 3152              	# sieve_extend.c:548:         bitarray[copy_word] = bitarray[source_word];
 548:sieve_extend.c ****         source_word++;
 3153              		.loc 1 548 29 is_stmt 0 view .LVU1041
 3154 1305 C4417E6F 		vmovdqu	ymm8, YMMWORD PTR 32[r14+rdx]	# tmp287, MEM[base: _5, index: ivtmp.232_126, offset: 0B]
 3154      441620
 3155 130c C4417E7F 		vmovdqu	YMMWORD PTR 32[r12+rdx], ymm8	# MEM[base: vectp.219_98, index: ivtmp.232_126, offset: 0B],
 3155      441420
 549:sieve_extend.c ****         copy_word++;
 3156              		.loc 1 549 9 is_stmt 1 view .LVU1042
 550:sieve_extend.c ****     }
 3157              		.loc 1 550 9 view .LVU1043
 547:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
GAS LISTING /tmp/cctyCFAS.s 			page 97


 3158              		.loc 1 547 10 view .LVU1044
 548:sieve_extend.c ****         source_word++;
 3159              		.loc 1 548 9 view .LVU1045
 3160              	# sieve_extend.c:548:         bitarray[copy_word] = bitarray[source_word];
 548:sieve_extend.c ****         source_word++;
 3161              		.loc 1 548 29 is_stmt 0 view .LVU1046
 3162 1313 C4417E6F 		vmovdqu	ymm9, YMMWORD PTR 64[r14+rdx]	# tmp288, MEM[base: _5, index: ivtmp.232_126, offset: 0B]
 3162      4C1640
 3163 131a C4417E7F 		vmovdqu	YMMWORD PTR 64[r12+rdx], ymm9	# MEM[base: vectp.219_98, index: ivtmp.232_126, offset: 0B],
 3163      4C1440
 549:sieve_extend.c ****         copy_word++;
 3164              		.loc 1 549 9 is_stmt 1 view .LVU1047
 550:sieve_extend.c ****     }
 3165              		.loc 1 550 9 view .LVU1048
 547:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 3166              		.loc 1 547 10 view .LVU1049
 548:sieve_extend.c ****         source_word++;
 3167              		.loc 1 548 9 view .LVU1050
 3168              	# sieve_extend.c:548:         bitarray[copy_word] = bitarray[source_word];
 548:sieve_extend.c ****         source_word++;
 3169              		.loc 1 548 29 is_stmt 0 view .LVU1051
 3170 1321 C4417E6F 		vmovdqu	ymm10, YMMWORD PTR 96[r14+rdx]	# tmp289, MEM[base: _5, index: ivtmp.232_126, offset: 0B]
 3170      541660
 3171 1328 C4417E7F 		vmovdqu	YMMWORD PTR 96[r12+rdx], ymm10	# MEM[base: vectp.219_98, index: ivtmp.232_126, offset: 0B]
 3171      541460
 549:sieve_extend.c ****         copy_word++;
 3172              		.loc 1 549 9 is_stmt 1 view .LVU1052
 550:sieve_extend.c ****     }
 3173              		.loc 1 550 9 view .LVU1053
 547:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 3174              		.loc 1 547 10 view .LVU1054
 548:sieve_extend.c ****         source_word++;
 3175              		.loc 1 548 9 view .LVU1055
 3176              	# sieve_extend.c:548:         bitarray[copy_word] = bitarray[source_word];
 548:sieve_extend.c ****         source_word++;
 3177              		.loc 1 548 29 is_stmt 0 view .LVU1056
 3178 132f C4417E6F 		vmovdqu	ymm11, YMMWORD PTR 128[r14+rdx]	# tmp290, MEM[base: _5, index: ivtmp.232_126, offset: 0B]
 3178      9C168000 
 3178      0000
 3179 1339 C4417E7F 		vmovdqu	YMMWORD PTR 128[r12+rdx], ymm11	# MEM[base: vectp.219_98, index: ivtmp.232_126, offset: 0B
 3179      9C148000 
 3179      0000
 549:sieve_extend.c ****         copy_word++;
 3180              		.loc 1 549 9 is_stmt 1 view .LVU1057
 550:sieve_extend.c ****     }
 3181              		.loc 1 550 9 view .LVU1058
 547:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 3182              		.loc 1 547 10 view .LVU1059
 548:sieve_extend.c ****         source_word++;
 3183              		.loc 1 548 9 view .LVU1060
 3184              	# sieve_extend.c:548:         bitarray[copy_word] = bitarray[source_word];
 548:sieve_extend.c ****         source_word++;
 3185              		.loc 1 548 29 is_stmt 0 view .LVU1061
 3186 1343 C4417E6F 		vmovdqu	ymm12, YMMWORD PTR 160[r14+rdx]	# tmp291, MEM[base: _5, index: ivtmp.232_126, offset: 0B]
 3186      A416A000 
 3186      0000
 3187 134d C4417E7F 		vmovdqu	YMMWORD PTR 160[r12+rdx], ymm12	# MEM[base: vectp.219_98, index: ivtmp.232_126, offset: 0B
GAS LISTING /tmp/cctyCFAS.s 			page 98


 3187      A414A000 
 3187      0000
 549:sieve_extend.c ****         copy_word++;
 3188              		.loc 1 549 9 is_stmt 1 view .LVU1062
 550:sieve_extend.c ****     }
 3189              		.loc 1 550 9 view .LVU1063
 547:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 3190              		.loc 1 547 10 view .LVU1064
 548:sieve_extend.c ****         source_word++;
 3191              		.loc 1 548 9 view .LVU1065
 3192              	# sieve_extend.c:548:         bitarray[copy_word] = bitarray[source_word];
 548:sieve_extend.c ****         source_word++;
 3193              		.loc 1 548 29 is_stmt 0 view .LVU1066
 3194 1357 C4417E6F 		vmovdqu	ymm13, YMMWORD PTR 192[r14+rdx]	# tmp292, MEM[base: _5, index: ivtmp.232_126, offset: 0B]
 3194      AC16C000 
 3194      0000
 3195 1361 C4417E7F 		vmovdqu	YMMWORD PTR 192[r12+rdx], ymm13	# MEM[base: vectp.219_98, index: ivtmp.232_126, offset: 0B
 3195      AC14C000 
 3195      0000
 549:sieve_extend.c ****         copy_word++;
 3196              		.loc 1 549 9 is_stmt 1 view .LVU1067
 550:sieve_extend.c ****     }
 3197              		.loc 1 550 9 view .LVU1068
 547:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 3198              		.loc 1 547 10 view .LVU1069
 548:sieve_extend.c ****         source_word++;
 3199              		.loc 1 548 9 view .LVU1070
 3200              	# sieve_extend.c:548:         bitarray[copy_word] = bitarray[source_word];
 548:sieve_extend.c ****         source_word++;
 3201              		.loc 1 548 29 is_stmt 0 view .LVU1071
 3202 136b C4417E6F 		vmovdqu	ymm14, YMMWORD PTR 224[r14+rdx]	# tmp293, MEM[base: _5, index: ivtmp.232_126, offset: 0B]
 3202      B416E000 
 3202      0000
 3203 1375 C4417E7F 		vmovdqu	YMMWORD PTR 224[r12+rdx], ymm14	# MEM[base: vectp.219_98, index: ivtmp.232_126, offset: 0B
 3203      B414E000 
 3203      0000
 549:sieve_extend.c ****         copy_word++;
 3204              		.loc 1 549 9 is_stmt 1 view .LVU1072
 550:sieve_extend.c ****     }
 3205              		.loc 1 550 9 view .LVU1073
 547:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 3206              		.loc 1 547 10 view .LVU1074
 3207 137f 4881C200 		add	rdx, 256	# ivtmp.232,
 3207      010000
 3208 1386 4839F2   		cmp	rdx, rsi	# ivtmp.232, _128
 3209 1389 0F856AFF 		jne	.L271	#,
 3209      FFFF
 3210              	.L368:
 3211 138f 4C8B2424 		mov	r12, QWORD PTR [rsp]	# source_word, %sfp
 3212 1393 4D89CE   		mov	r14, r9	# niters_vector_mult_vf.212, niters.210
 3213 1396 4983E6FC 		and	r14, -4	# niters_vector_mult_vf.212,
 3214 139a 4D01F4   		add	r12, r14	# source_word, niters_vector_mult_vf.212
 3215 139d 4C01F0   		add	rax, r14	# tmp.214, niters_vector_mult_vf.212
 3216 13a0 4D39F1   		cmp	r9, r14	# niters.210, niters_vector_mult_vf.212
 3217 13a3 745B     		je	.L371	#,
 3218              	.LVL127:
 548:sieve_extend.c ****         source_word++;
GAS LISTING /tmp/cctyCFAS.s 			page 99


 3219              		.loc 1 548 9 view .LVU1075
 3220              	# sieve_extend.c:548:         bitarray[copy_word] = bitarray[source_word];
 548:sieve_extend.c ****         source_word++;
 3221              		.loc 1 548 39 is_stmt 0 view .LVU1076
 3222 13a5 4C8B6C24 		mov	r13, QWORD PTR 16[rsp]	# bitarray, %sfp
 3222      10
 3223              	# sieve_extend.c:550:         copy_word++;
 550:sieve_extend.c ****     }
 3224              		.loc 1 550 18 view .LVU1077
 3225 13aa 4C8D7801 		lea	r15, 1[rax]	# copy_word,
 3226              	# sieve_extend.c:548:         bitarray[copy_word] = bitarray[source_word];
 548:sieve_extend.c ****         source_word++;
 3227              		.loc 1 548 39 view .LVU1078
 3228 13ae 4B8B7CE5 		mov	rdi, QWORD PTR 0[r13+r12*8]	# _37, *_21
 3228      00
 3229              	# sieve_extend.c:549:         source_word++;
 549:sieve_extend.c ****         copy_word++;
 3230              		.loc 1 549 20 view .LVU1079
 3231 13b3 49FFC4   		inc	r12	# source_word
 3232              	.LVL128:
 3233              	# sieve_extend.c:548:         bitarray[copy_word] = bitarray[source_word];
 548:sieve_extend.c ****         source_word++;
 3234              		.loc 1 548 29 view .LVU1080
 3235 13b6 49897CC5 		mov	QWORD PTR 0[r13+rax*8], rdi	# *_23, _37
 3235      00
 549:sieve_extend.c ****         copy_word++;
 3236              		.loc 1 549 9 is_stmt 1 view .LVU1081
 3237              	.LVL129:
 550:sieve_extend.c ****     }
 3238              		.loc 1 550 9 view .LVU1082
 547:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 3239              		.loc 1 547 10 view .LVU1083
 3240 13bb 4C39FB   		cmp	rbx, r15	# destination_stop_word, copy_word
 3241 13be 7640     		jbe	.L371	#,
 548:sieve_extend.c ****         source_word++;
 3242              		.loc 1 548 9 view .LVU1084
 3243              	# sieve_extend.c:548:         bitarray[copy_word] = bitarray[source_word];
 548:sieve_extend.c ****         source_word++;
 3244              		.loc 1 548 39 is_stmt 0 view .LVU1085
 3245 13c0 4F8B5CE5 		mov	r11, QWORD PTR 0[r13+r12*8]	# _111, *_108
 3245      00
 3246              	# sieve_extend.c:550:         copy_word++;
 550:sieve_extend.c ****     }
 3247              		.loc 1 550 18 view .LVU1086
 3248 13c5 4883C002 		add	rax, 2	# copy_word,
 3249              	# sieve_extend.c:548:         bitarray[copy_word] = bitarray[source_word];
 548:sieve_extend.c ****         source_word++;
 3250              		.loc 1 548 29 view .LVU1087
 3251 13c9 4F895CFD 		mov	QWORD PTR 0[r13+r15*8], r11	# *_110, _111
 3251      00
 549:sieve_extend.c ****         copy_word++;
 3252              		.loc 1 549 9 is_stmt 1 view .LVU1088
 550:sieve_extend.c ****     }
 3253              		.loc 1 550 9 view .LVU1089
 3254              	.LVL130:
 547:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 3255              		.loc 1 547 10 view .LVU1090
GAS LISTING /tmp/cctyCFAS.s 			page 100


 3256              	# sieve_extend.c:548:         bitarray[copy_word] = bitarray[source_word];
 548:sieve_extend.c ****         source_word++;
 3257              		.loc 1 548 39 is_stmt 0 view .LVU1091
 3258 13ce 4E8D14E5 		lea	r10, 0[0+r12*8]	# _107,
 3258      00000000 
 3259              	# sieve_extend.c:547:    while (copy_word < destination_stop_word) {
 547:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 3260              		.loc 1 547 10 view .LVU1092
 3261 13d6 4839C3   		cmp	rbx, rax	# destination_stop_word, copy_word
 3262 13d9 7625     		jbe	.L371	#,
 548:sieve_extend.c ****         source_word++;
 3263              		.loc 1 548 9 is_stmt 1 view .LVU1093
 3264              	# sieve_extend.c:548:         bitarray[copy_word] = bitarray[source_word];
 548:sieve_extend.c ****         source_word++;
 3265              		.loc 1 548 39 is_stmt 0 view .LVU1094
 3266 13db 4F8B4C15 		mov	r9, QWORD PTR 8[r13+r10]	# _83, *_80
 3266      08
 3267              	# sieve_extend.c:548:         bitarray[copy_word] = bitarray[source_word];
 548:sieve_extend.c ****         source_word++;
 3268              		.loc 1 548 29 view .LVU1095
 3269 13e0 4D894CC5 		mov	QWORD PTR 0[r13+rax*8], r9	# *_82, _83
 3269      00
 549:sieve_extend.c ****         copy_word++;
 3270              		.loc 1 549 9 is_stmt 1 view .LVU1096
 550:sieve_extend.c ****     }
 3271              		.loc 1 550 9 view .LVU1097
 547:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 3272              		.loc 1 547 10 view .LVU1098
 3273 13e5 C5F877   		vzeroupper
 3274              	.LVL131:
 3275              	.L372:
 3276              	# sieve_extend.c:553: }
 553:sieve_extend.c **** 
 3277              		.loc 1 553 1 is_stmt 0 view .LVU1099
 3278 13e8 488D65D8 		lea	rsp, -40[rbp]	#,
 3279              	.LVL132:
 553:sieve_extend.c **** 
 3280              		.loc 1 553 1 view .LVU1100
 3281 13ec 5B       		pop	rbx	#
 3282 13ed 415C     		pop	r12	#
 3283 13ef 415D     		pop	r13	#
 3284 13f1 415E     		pop	r14	#
 3285 13f3 415F     		pop	r15	#
 3286 13f5 5D       		pop	rbp	#
 3287              		.cfi_remember_state
 3288              		.cfi_def_cfa 7, 8
 3289              	.LVL133:
 553:sieve_extend.c **** 
 3290              		.loc 1 553 1 view .LVU1101
 3291 13f6 C3       		ret	
 3292              	.LVL134:
 3293 13f7 660F1F84 		.p2align 4,,10
 3293      00000000 
 3293      00
 3294              		.p2align 3
 3295              	.L371:
 3296              		.cfi_restore_state
GAS LISTING /tmp/cctyCFAS.s 			page 101


 553:sieve_extend.c **** 
 3297              		.loc 1 553 1 view .LVU1102
 3298 1400 C5F877   		vzeroupper
 3299 1403 488D65D8 		lea	rsp, -40[rbp]	#,
 3300              	.LVL135:
 553:sieve_extend.c **** 
 3301              		.loc 1 553 1 view .LVU1103
 3302 1407 5B       		pop	rbx	#
 3303              	.LVL136:
 553:sieve_extend.c **** 
 3304              		.loc 1 553 1 view .LVU1104
 3305 1408 415C     		pop	r12	#
 3306 140a 415D     		pop	r13	#
 3307 140c 415E     		pop	r14	#
 3308 140e 415F     		pop	r15	#
 3309 1410 5D       		pop	rbp	#
 3310              		.cfi_remember_state
 3311              		.cfi_def_cfa 7, 8
 3312              	.LVL137:
 553:sieve_extend.c **** 
 3313              		.loc 1 553 1 view .LVU1105
 3314 1411 C3       		ret	
 3315              	.LVL138:
 3316              		.p2align 4,,10
 3317 1412 660F1F44 		.p2align 3
 3317      0000
 3318              	.L270:
 3319              		.cfi_restore_state
 553:sieve_extend.c **** 
 3320              		.loc 1 553 1 view .LVU1106
 3321 1418 488B7424 		mov	rsi, QWORD PTR 16[rsp]	# bitarray, %sfp
 3321      10
 3322              	# sieve_extend.c:548:         bitarray[copy_word] = bitarray[source_word];
 548:sieve_extend.c ****         source_word++;
 3323              		.loc 1 548 39 view .LVU1107
 3324 141d 488B1424 		mov	rdx, QWORD PTR [rsp]	# source_word, %sfp
 3325 1421 4C8D04DE 		lea	r8, [rsi+rbx*8]	# _125,
 3326 1425 4901F4   		add	r12, rsi	# ivtmp.227, bitarray
 3327 1428 4829C2   		sub	rdx, rax	# source_word, ivtmp.241
 3328 142b 4C89C0   		mov	rax, r8	# tmp191, _125
 3329 142e 4C29E0   		sub	rax, r12	# tmp191, ivtmp.227
 3330 1431 4883E808 		sub	rax, 8	# tmp192,
 3331 1435 48C1E803 		shr	rax, 3	# tmp190,
 3332 1439 48FFC0   		inc	rax	# tmp193
 3333 143c 83E007   		and	eax, 7	# tmp194,
 3334 143f 0F848800 		je	.L273	#,
 3334      0000
 3335 1445 4883F801 		cmp	rax, 1	# tmp194,
 3336 1449 746C     		je	.L338	#,
 3337 144b 4883F802 		cmp	rax, 2	# tmp194,
 3338 144f 7459     		je	.L339	#,
 3339 1451 4883F803 		cmp	rax, 3	# tmp194,
 3340 1455 7446     		je	.L340	#,
 3341 1457 4883F804 		cmp	rax, 4	# tmp194,
 3342 145b 7433     		je	.L341	#,
 3343 145d 4883F805 		cmp	rax, 5	# tmp194,
 3344 1461 7420     		je	.L342	#,
GAS LISTING /tmp/cctyCFAS.s 			page 102


 3345 1463 4883F806 		cmp	rax, 6	# tmp194,
 3346 1467 740D     		je	.L343	#,
 3347              	.LVL139:
 548:sieve_extend.c ****         source_word++;
 3348              		.loc 1 548 9 is_stmt 1 view .LVU1108
 3349              	# sieve_extend.c:548:         bitarray[copy_word] = bitarray[source_word];
 548:sieve_extend.c ****         source_word++;
 3350              		.loc 1 548 39 is_stmt 0 view .LVU1109
 3351 1469 4D8B34D4 		mov	r14, QWORD PTR [r12+rdx*8]	# _70, MEM[base: _120, index: _121, step: 8, offset: 0B]
 3352 146d 4983C408 		add	r12, 8	# ivtmp.227,
 3353              	# sieve_extend.c:548:         bitarray[copy_word] = bitarray[source_word];
 548:sieve_extend.c ****         source_word++;
 3354              		.loc 1 548 29 view .LVU1110
 3355 1471 4D897424 		mov	QWORD PTR -8[r12], r14	# MEM[base: _120, offset: 0B], _70
 3355      F8
 549:sieve_extend.c ****         copy_word++;
 3356              		.loc 1 549 9 is_stmt 1 view .LVU1111
 550:sieve_extend.c ****     }
 3357              		.loc 1 550 9 view .LVU1112
 547:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 3358              		.loc 1 547 10 view .LVU1113
 3359              	.L343:
 548:sieve_extend.c ****         source_word++;
 3360              		.loc 1 548 9 view .LVU1114
 3361              	# sieve_extend.c:548:         bitarray[copy_word] = bitarray[source_word];
 548:sieve_extend.c ****         source_word++;
 3362              		.loc 1 548 39 is_stmt 0 view .LVU1115
 3363 1476 4D8B2CD4 		mov	r13, QWORD PTR [r12+rdx*8]	# _70, MEM[base: _120, index: _121, step: 8, offset: 0B]
 3364 147a 4983C408 		add	r12, 8	# ivtmp.227,
 3365              	# sieve_extend.c:548:         bitarray[copy_word] = bitarray[source_word];
 548:sieve_extend.c ****         source_word++;
 3366              		.loc 1 548 29 view .LVU1116
 3367 147e 4D896C24 		mov	QWORD PTR -8[r12], r13	# MEM[base: _120, offset: 0B], _70
 3367      F8
 549:sieve_extend.c ****         copy_word++;
 3368              		.loc 1 549 9 is_stmt 1 view .LVU1117
 550:sieve_extend.c ****     }
 3369              		.loc 1 550 9 view .LVU1118
 547:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 3370              		.loc 1 547 10 view .LVU1119
 3371              	.L342:
 548:sieve_extend.c ****         source_word++;
 3372              		.loc 1 548 9 view .LVU1120
 3373              	# sieve_extend.c:548:         bitarray[copy_word] = bitarray[source_word];
 548:sieve_extend.c ****         source_word++;
 3374              		.loc 1 548 39 is_stmt 0 view .LVU1121
 3375 1483 498B3CD4 		mov	rdi, QWORD PTR [r12+rdx*8]	# _70, MEM[base: _120, index: _121, step: 8, offset: 0B]
 3376 1487 4983C408 		add	r12, 8	# ivtmp.227,
 3377              	# sieve_extend.c:548:         bitarray[copy_word] = bitarray[source_word];
 548:sieve_extend.c ****         source_word++;
 3378              		.loc 1 548 29 view .LVU1122
 3379 148b 49897C24 		mov	QWORD PTR -8[r12], rdi	# MEM[base: _120, offset: 0B], _70
 3379      F8
 549:sieve_extend.c ****         copy_word++;
 3380              		.loc 1 549 9 is_stmt 1 view .LVU1123
 550:sieve_extend.c ****     }
 3381              		.loc 1 550 9 view .LVU1124
GAS LISTING /tmp/cctyCFAS.s 			page 103


 547:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 3382              		.loc 1 547 10 view .LVU1125
 3383              	.L341:
 548:sieve_extend.c ****         source_word++;
 3384              		.loc 1 548 9 view .LVU1126
 3385              	# sieve_extend.c:548:         bitarray[copy_word] = bitarray[source_word];
 548:sieve_extend.c ****         source_word++;
 3386              		.loc 1 548 39 is_stmt 0 view .LVU1127
 3387 1490 4D8B3CD4 		mov	r15, QWORD PTR [r12+rdx*8]	# _70, MEM[base: _120, index: _121, step: 8, offset: 0B]
 3388 1494 4983C408 		add	r12, 8	# ivtmp.227,
 3389              	# sieve_extend.c:548:         bitarray[copy_word] = bitarray[source_word];
 548:sieve_extend.c ****         source_word++;
 3390              		.loc 1 548 29 view .LVU1128
 3391 1498 4D897C24 		mov	QWORD PTR -8[r12], r15	# MEM[base: _120, offset: 0B], _70
 3391      F8
 549:sieve_extend.c ****         copy_word++;
 3392              		.loc 1 549 9 is_stmt 1 view .LVU1129
 550:sieve_extend.c ****     }
 3393              		.loc 1 550 9 view .LVU1130
 547:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 3394              		.loc 1 547 10 view .LVU1131
 3395              	.L340:
 548:sieve_extend.c ****         source_word++;
 3396              		.loc 1 548 9 view .LVU1132
 3397              	# sieve_extend.c:548:         bitarray[copy_word] = bitarray[source_word];
 548:sieve_extend.c ****         source_word++;
 3398              		.loc 1 548 39 is_stmt 0 view .LVU1133
 3399 149d 4D8B14D4 		mov	r10, QWORD PTR [r12+rdx*8]	# _70, MEM[base: _120, index: _121, step: 8, offset: 0B]
 3400 14a1 4983C408 		add	r12, 8	# ivtmp.227,
 3401              	# sieve_extend.c:548:         bitarray[copy_word] = bitarray[source_word];
 548:sieve_extend.c ****         source_word++;
 3402              		.loc 1 548 29 view .LVU1134
 3403 14a5 4D895424 		mov	QWORD PTR -8[r12], r10	# MEM[base: _120, offset: 0B], _70
 3403      F8
 549:sieve_extend.c ****         copy_word++;
 3404              		.loc 1 549 9 is_stmt 1 view .LVU1135
 550:sieve_extend.c ****     }
 3405              		.loc 1 550 9 view .LVU1136
 547:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 3406              		.loc 1 547 10 view .LVU1137
 3407              	.L339:
 548:sieve_extend.c ****         source_word++;
 3408              		.loc 1 548 9 view .LVU1138
 3409              	# sieve_extend.c:548:         bitarray[copy_word] = bitarray[source_word];
 548:sieve_extend.c ****         source_word++;
 3410              		.loc 1 548 39 is_stmt 0 view .LVU1139
 3411 14aa 4D8B1CD4 		mov	r11, QWORD PTR [r12+rdx*8]	# _70, MEM[base: _120, index: _121, step: 8, offset: 0B]
 3412 14ae 4983C408 		add	r12, 8	# ivtmp.227,
 3413              	# sieve_extend.c:548:         bitarray[copy_word] = bitarray[source_word];
 548:sieve_extend.c ****         source_word++;
 3414              		.loc 1 548 29 view .LVU1140
 3415 14b2 4D895C24 		mov	QWORD PTR -8[r12], r11	# MEM[base: _120, offset: 0B], _70
 3415      F8
 549:sieve_extend.c ****         copy_word++;
 3416              		.loc 1 549 9 is_stmt 1 view .LVU1141
 550:sieve_extend.c ****     }
 3417              		.loc 1 550 9 view .LVU1142
GAS LISTING /tmp/cctyCFAS.s 			page 104


 547:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 3418              		.loc 1 547 10 view .LVU1143
 3419              	.L338:
 548:sieve_extend.c ****         source_word++;
 3420              		.loc 1 548 9 view .LVU1144
 3421              	# sieve_extend.c:548:         bitarray[copy_word] = bitarray[source_word];
 548:sieve_extend.c ****         source_word++;
 3422              		.loc 1 548 39 is_stmt 0 view .LVU1145
 3423 14b7 498B0CD4 		mov	rcx, QWORD PTR [r12+rdx*8]	# _70, MEM[base: _120, index: _121, step: 8, offset: 0B]
 3424 14bb 4983C408 		add	r12, 8	# ivtmp.227,
 3425              	# sieve_extend.c:548:         bitarray[copy_word] = bitarray[source_word];
 548:sieve_extend.c ****         source_word++;
 3426              		.loc 1 548 29 view .LVU1146
 3427 14bf 49894C24 		mov	QWORD PTR -8[r12], rcx	# MEM[base: _120, offset: 0B], _70
 3427      F8
 549:sieve_extend.c ****         copy_word++;
 3428              		.loc 1 549 9 is_stmt 1 view .LVU1147
 550:sieve_extend.c ****     }
 3429              		.loc 1 550 9 view .LVU1148
 547:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 3430              		.loc 1 547 10 view .LVU1149
 3431 14c4 4D39C4   		cmp	r12, r8	# ivtmp.227, _125
 3432 14c7 0F841BFF 		je	.L372	#,
 3432      FFFF
 3433              	.LVL140:
 3434              	.L273:
 548:sieve_extend.c ****         source_word++;
 3435              		.loc 1 548 9 view .LVU1150
 3436              	# sieve_extend.c:548:         bitarray[copy_word] = bitarray[source_word];
 548:sieve_extend.c ****         source_word++;
 3437              		.loc 1 548 39 is_stmt 0 view .LVU1151
 3438 14cd 498B1CD4 		mov	rbx, QWORD PTR [r12+rdx*8]	# _70, MEM[base: _120, index: _121, step: 8, offset: 0B]
 3439              	# sieve_extend.c:548:         bitarray[copy_word] = bitarray[source_word];
 548:sieve_extend.c ****         source_word++;
 3440              		.loc 1 548 29 view .LVU1152
 3441 14d1 49891C24 		mov	QWORD PTR [r12], rbx	# MEM[base: _120, offset: 0B], _70
 549:sieve_extend.c ****         copy_word++;
 3442              		.loc 1 549 9 is_stmt 1 view .LVU1153
 550:sieve_extend.c ****     }
 3443              		.loc 1 550 9 view .LVU1154
 547:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 3444              		.loc 1 547 10 view .LVU1155
 548:sieve_extend.c ****         source_word++;
 3445              		.loc 1 548 9 view .LVU1156
 3446              	# sieve_extend.c:548:         bitarray[copy_word] = bitarray[source_word];
 548:sieve_extend.c ****         source_word++;
 3447              		.loc 1 548 39 is_stmt 0 view .LVU1157
 3448 14d5 4D8B4CD4 		mov	r9, QWORD PTR 8[r12+rdx*8]	# _70, MEM[base: _120, index: _121, step: 8, offset: 0B]
 3448      08
 3449              	# sieve_extend.c:548:         bitarray[copy_word] = bitarray[source_word];
 548:sieve_extend.c ****         source_word++;
 3450              		.loc 1 548 29 view .LVU1158
 3451 14da 4D894C24 		mov	QWORD PTR 8[r12], r9	# MEM[base: _120, offset: 0B], _70
 3451      08
 549:sieve_extend.c ****         copy_word++;
 3452              		.loc 1 549 9 is_stmt 1 view .LVU1159
 550:sieve_extend.c ****     }
GAS LISTING /tmp/cctyCFAS.s 			page 105


 3453              		.loc 1 550 9 view .LVU1160
 547:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 3454              		.loc 1 547 10 view .LVU1161
 548:sieve_extend.c ****         source_word++;
 3455              		.loc 1 548 9 view .LVU1162
 3456              	# sieve_extend.c:548:         bitarray[copy_word] = bitarray[source_word];
 548:sieve_extend.c ****         source_word++;
 3457              		.loc 1 548 39 is_stmt 0 view .LVU1163
 3458 14df 498B74D4 		mov	rsi, QWORD PTR 16[r12+rdx*8]	# _70, MEM[base: _120, index: _121, step: 8, offset: 0B]
 3458      10
 3459              	# sieve_extend.c:548:         bitarray[copy_word] = bitarray[source_word];
 548:sieve_extend.c ****         source_word++;
 3460              		.loc 1 548 29 view .LVU1164
 3461 14e4 49897424 		mov	QWORD PTR 16[r12], rsi	# MEM[base: _120, offset: 0B], _70
 3461      10
 549:sieve_extend.c ****         copy_word++;
 3462              		.loc 1 549 9 is_stmt 1 view .LVU1165
 550:sieve_extend.c ****     }
 3463              		.loc 1 550 9 view .LVU1166
 547:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 3464              		.loc 1 547 10 view .LVU1167
 548:sieve_extend.c ****         source_word++;
 3465              		.loc 1 548 9 view .LVU1168
 3466              	# sieve_extend.c:548:         bitarray[copy_word] = bitarray[source_word];
 548:sieve_extend.c ****         source_word++;
 3467              		.loc 1 548 39 is_stmt 0 view .LVU1169
 3468 14e9 498B44D4 		mov	rax, QWORD PTR 24[r12+rdx*8]	# _70, MEM[base: _120, index: _121, step: 8, offset: 0B]
 3468      18
 3469              	# sieve_extend.c:548:         bitarray[copy_word] = bitarray[source_word];
 548:sieve_extend.c ****         source_word++;
 3470              		.loc 1 548 29 view .LVU1170
 3471 14ee 49894424 		mov	QWORD PTR 24[r12], rax	# MEM[base: _120, offset: 0B], _70
 3471      18
 549:sieve_extend.c ****         copy_word++;
 3472              		.loc 1 549 9 is_stmt 1 view .LVU1171
 550:sieve_extend.c ****     }
 3473              		.loc 1 550 9 view .LVU1172
 547:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 3474              		.loc 1 547 10 view .LVU1173
 548:sieve_extend.c ****         source_word++;
 3475              		.loc 1 548 9 view .LVU1174
 3476              	# sieve_extend.c:548:         bitarray[copy_word] = bitarray[source_word];
 548:sieve_extend.c ****         source_word++;
 3477              		.loc 1 548 39 is_stmt 0 view .LVU1175
 3478 14f3 4D8B74D4 		mov	r14, QWORD PTR 32[r12+rdx*8]	# _70, MEM[base: _120, index: _121, step: 8, offset: 0B]
 3478      20
 3479              	# sieve_extend.c:548:         bitarray[copy_word] = bitarray[source_word];
 548:sieve_extend.c ****         source_word++;
 3480              		.loc 1 548 29 view .LVU1176
 3481 14f8 4D897424 		mov	QWORD PTR 32[r12], r14	# MEM[base: _120, offset: 0B], _70
 3481      20
 549:sieve_extend.c ****         copy_word++;
 3482              		.loc 1 549 9 is_stmt 1 view .LVU1177
 550:sieve_extend.c ****     }
 3483              		.loc 1 550 9 view .LVU1178
 547:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 3484              		.loc 1 547 10 view .LVU1179
GAS LISTING /tmp/cctyCFAS.s 			page 106


 548:sieve_extend.c ****         source_word++;
 3485              		.loc 1 548 9 view .LVU1180
 3486              	# sieve_extend.c:548:         bitarray[copy_word] = bitarray[source_word];
 548:sieve_extend.c ****         source_word++;
 3487              		.loc 1 548 39 is_stmt 0 view .LVU1181
 3488 14fd 4D8B6CD4 		mov	r13, QWORD PTR 40[r12+rdx*8]	# _70, MEM[base: _120, index: _121, step: 8, offset: 0B]
 3488      28
 3489              	# sieve_extend.c:548:         bitarray[copy_word] = bitarray[source_word];
 548:sieve_extend.c ****         source_word++;
 3490              		.loc 1 548 29 view .LVU1182
 3491 1502 4D896C24 		mov	QWORD PTR 40[r12], r13	# MEM[base: _120, offset: 0B], _70
 3491      28
 549:sieve_extend.c ****         copy_word++;
 3492              		.loc 1 549 9 is_stmt 1 view .LVU1183
 550:sieve_extend.c ****     }
 3493              		.loc 1 550 9 view .LVU1184
 547:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 3494              		.loc 1 547 10 view .LVU1185
 548:sieve_extend.c ****         source_word++;
 3495              		.loc 1 548 9 view .LVU1186
 3496              	# sieve_extend.c:548:         bitarray[copy_word] = bitarray[source_word];
 548:sieve_extend.c ****         source_word++;
 3497              		.loc 1 548 39 is_stmt 0 view .LVU1187
 3498 1507 498B7CD4 		mov	rdi, QWORD PTR 48[r12+rdx*8]	# _70, MEM[base: _120, index: _121, step: 8, offset: 0B]
 3498      30
 3499              	# sieve_extend.c:548:         bitarray[copy_word] = bitarray[source_word];
 548:sieve_extend.c ****         source_word++;
 3500              		.loc 1 548 29 view .LVU1188
 3501 150c 49897C24 		mov	QWORD PTR 48[r12], rdi	# MEM[base: _120, offset: 0B], _70
 3501      30
 549:sieve_extend.c ****         copy_word++;
 3502              		.loc 1 549 9 is_stmt 1 view .LVU1189
 550:sieve_extend.c ****     }
 3503              		.loc 1 550 9 view .LVU1190
 547:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 3504              		.loc 1 547 10 view .LVU1191
 548:sieve_extend.c ****         source_word++;
 3505              		.loc 1 548 9 view .LVU1192
 3506              	# sieve_extend.c:548:         bitarray[copy_word] = bitarray[source_word];
 548:sieve_extend.c ****         source_word++;
 3507              		.loc 1 548 39 is_stmt 0 view .LVU1193
 3508 1511 4D8B7CD4 		mov	r15, QWORD PTR 56[r12+rdx*8]	# _70, MEM[base: _120, index: _121, step: 8, offset: 0B]
 3508      38
 3509 1516 4983C440 		add	r12, 64	# ivtmp.227,
 3510              	# sieve_extend.c:548:         bitarray[copy_word] = bitarray[source_word];
 548:sieve_extend.c ****         source_word++;
 3511              		.loc 1 548 29 view .LVU1194
 3512 151a 4D897C24 		mov	QWORD PTR -8[r12], r15	# MEM[base: _120, offset: 0B], _70
 3512      F8
 549:sieve_extend.c ****         copy_word++;
 3513              		.loc 1 549 9 is_stmt 1 view .LVU1195
 550:sieve_extend.c ****     }
 3514              		.loc 1 550 9 view .LVU1196
 547:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 3515              		.loc 1 547 10 view .LVU1197
 3516 151f 4D39C4   		cmp	r12, r8	# ivtmp.227, _125
 3517 1522 75A9     		jne	.L273	#,
GAS LISTING /tmp/cctyCFAS.s 			page 107


 3518 1524 E9BFFEFF 		jmp	.L372	#
 3518      FF
 3519              		.cfi_endproc
 3520              	.LFE67:
 3522 1529 0F1F8000 		.p2align 4
 3522      000000
 3524              	extendSieve_shiftleft:
 3525              	.LVL141:
 3526              	.LFB73:
 792:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 3527              		.loc 1 792 142 view -0
 3528              		.cfi_startproc
 793:sieve_extend.c **** 
 3529              		.loc 1 793 5 view .LVU1199
 795:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 3530              		.loc 1 795 5 view .LVU1200
 3531              	# sieve_extend.c:792: static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source
 792:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 3532              		.loc 1 792 142 is_stmt 0 view .LVU1201
 3533 1530 55       		push	rbp	#
 3534              		.cfi_def_cfa_offset 16
 3535              		.cfi_offset 6, -16
 3536              	# sieve_extend.c:795:     const counter_t destination_stop_word = wordindex(destination_stop);
 795:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 3537              		.loc 1 795 21 view .LVU1202
 3538 1531 48C1E906 		shr	rcx, 6	# tmp1116,
 3539              	.LVL142:
 795:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 3540              		.loc 1 795 21 view .LVU1203
 3541 1535 4989CA   		mov	r10, rcx	# destination_stop_word, tmp1116
 3542              	# sieve_extend.c:792: static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source
 792:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 3543              		.loc 1 792 142 view .LVU1204
 3544 1538 4889E5   		mov	rbp, rsp	#,
 3545              		.cfi_def_cfa_register 6
 3546 153b 4157     		push	r15	#
 3547 153d 4989D1   		mov	r9, rdx	# size, tmp1115
 3548 1540 4156     		push	r14	#
 3549 1542 4155     		push	r13	#
 3550 1544 4154     		push	r12	#
 3551 1546 53       		push	rbx	#
 3552              		.cfi_offset 15, -24
 3553              		.cfi_offset 14, -32
 3554              		.cfi_offset 13, -40
 3555              		.cfi_offset 12, -48
 3556              		.cfi_offset 3, -56
 3557 1547 4889FB   		mov	rbx, rdi	# bitarray, tmp1113
 3558              	# sieve_extend.c:796:     const counter_t copy_start = source_start + size;
 796:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_calc(copy_start);
 3559              		.loc 1 796 21 view .LVU1205
 3560 154a 488D3C16 		lea	rdi, [rsi+rdx]	# copy_start,
 3561              	.LVL143:
 3562              	# sieve_extend.c:792: static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source
 792:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 3563              		.loc 1 792 142 view .LVU1206
 3564 154e 4883E4E0 		and	rsp, -32	#,
 3565 1552 4883EC60 		sub	rsp, 96	#,
GAS LISTING /tmp/cctyCFAS.s 			page 108


 3566              	# sieve_extend.c:795:     const counter_t destination_stop_word = wordindex(destination_stop);
 795:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 3567              		.loc 1 795 21 view .LVU1207
 3568 1556 48894C24 		mov	QWORD PTR 80[rsp], rcx	# %sfp, destination_stop_word
 3568      50
 3569              	.LVL144:
 796:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_calc(copy_start);
 3570              		.loc 1 796 5 is_stmt 1 view .LVU1208
 797:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 3571              		.loc 1 797 5 view .LVU1209
 3572              	# sieve_extend.c:797:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 797:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 3573              		.loc 1 797 39 is_stmt 0 view .LVU1210
 3574 155b 4889F1   		mov	rcx, rsi	# _4, source_start
 3575              	.LVL145:
 3576              	# sieve_extend.c:799:     register counter_t source_word = wordindex(source_start);
 799:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 3577              		.loc 1 799 24 view .LVU1211
 3578 155e 48C1EE06 		shr	rsi, 6	# source_start,
 3579              	.LVL146:
 799:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 3580              		.loc 1 799 24 view .LVU1212
 3581 1562 4989F0   		mov	r8, rsi	# source_word, source_start
 3582              	# sieve_extend.c:797:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 797:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 3583              		.loc 1 797 39 view .LVU1213
 3584 1565 83E13F   		and	ecx, 63	# _4,
 3585              	.LVL147:
 3586              	# sieve_extend.c:797:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 797:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 3587              		.loc 1 797 69 view .LVU1214
 3588 1568 4889F8   		mov	rax, rdi	# _5, copy_start
 3589 156b 83E03F   		and	eax, 63	# _5,
 3590              	.LVL148:
 798:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 3591              		.loc 1 798 5 is_stmt 1 view .LVU1215
 799:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 3592              		.loc 1 799 5 view .LVU1216
 800:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 3593              		.loc 1 800 5 view .LVU1217
 3594              	# sieve_extend.c:802:                              | (bitarray[source_word+1] << shift_flipped))
 802:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 3595              		.loc 1 802 41 is_stmt 0 view .LVU1218
 3596 156e 4D8D7001 		lea	r14, 1[r8]	# _183,
 3597              	# sieve_extend.c:797:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 797:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 3598              		.loc 1 797 31 view .LVU1219
 3599 1572 4989CF   		mov	r15, rcx	# shift, _4
 3600 1575 4929C7   		sub	r15, rax	# shift, _5
 3601              	.LVL149:
 3602              	# sieve_extend.c:802:                              | (bitarray[source_word+1] << shift_flipped))
 802:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 3603              		.loc 1 802 41 view .LVU1220
 3604 1578 4C897424 		mov	QWORD PTR 88[rsp], r14	# %sfp, _183
 3604      58
 3605              	# sieve_extend.c:798:     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 798:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
GAS LISTING /tmp/cctyCFAS.s 			page 109


 3606              		.loc 1 798 31 view .LVU1221
 3607 157d 4829C8   		sub	rax, rcx	# tmp470, _4
 3608              	.LVL150:
 3609              	# sieve_extend.c:801:     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 801:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 3610              		.loc 1 801 52 view .LVU1222
 3611 1580 4A8B0CC3 		mov	rcx, QWORD PTR [rbx+r8*8]	# *_10, *_10
 3612              	.LVL151:
 3613              	# sieve_extend.c:798:     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 798:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 3614              		.loc 1 798 31 view .LVU1223
 3615 1584 4C8D7040 		lea	r14, 64[rax]	# shift_flipped,
 3616              	.LVL152:
 3617              	# sieve_extend.c:792: static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source
 792:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 3618              		.loc 1 792 142 view .LVU1224
 3619 1588 48895424 		mov	QWORD PTR 24[rsp], rdx	# %sfp, size
 3619      18
 3620              	# sieve_extend.c:801:     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 801:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 3621              		.loc 1 801 38 view .LVU1225
 3622 158d 4A8D14C5 		lea	rdx, 0[0+r8*8]	# _9,
 3622      00000000 
 3623              	.LVL153:
 3624              	# sieve_extend.c:802:                              | (bitarray[source_word+1] << shift_flipped))
 802:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 3625              		.loc 1 802 57 view .LVU1226
 3626 1595 C4E289F7 		shlx	rax, QWORD PTR 8[rbx+rdx], r14	# tmp472, *_16, shift_flipped
 3626      441308
 3627              	# sieve_extend.c:800:     register counter_t copy_word = wordindex(copy_start);
 800:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 3628              		.loc 1 800 24 view .LVU1227
 3629 159c 4989FB   		mov	r11, rdi	# copy_word, copy_start
 3630              	# sieve_extend.c:801:     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 801:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 3631              		.loc 1 801 52 view .LVU1228
 3632 159f C46283F7 		shrx	r8, rcx, r15	# tmp474, *_10, shift
 3632      C1
 3633              	# sieve_extend.c:803:                              & ~chopmask(copy_start); // because this is the 
 803:sieve_extend.c **** 
 3634              		.loc 1 803 33 view .LVU1229
 3635 15a4 F7D7     		not	edi	# tmp477
 3636              	.LVL154:
 3637              	# sieve_extend.c:802:                              | (bitarray[source_word+1] << shift_flipped))
 802:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 3638              		.loc 1 802 30 view .LVU1230
 3639 15a6 4909C0   		or	r8, rax	# tmp476, tmp472
 3640              	# sieve_extend.c:803:                              & ~chopmask(copy_start); // because this is the 
 803:sieve_extend.c **** 
 3641              		.loc 1 803 33 view .LVU1231
 3642 15a9 48C7C0FF 		mov	rax, -1	# tmp480,
 3642      FFFFFF
 3643 15b0 C4E2C3F7 		shrx	rdi, rax, rdi	# tmp479, tmp480, tmp477
 3643      F8
 3644              	# sieve_extend.c:803:                              & ~chopmask(copy_start); // because this is the 
 803:sieve_extend.c **** 
 3645              		.loc 1 803 30 view .LVU1232
GAS LISTING /tmp/cctyCFAS.s 			page 110


 3646 15b5 C4C2C0F2 		andn	rcx, rdi, r8	# tmp482, tmp479, tmp476
 3646      C8
 3647              	# sieve_extend.c:808:     const counter_t aligned_copy_word = min(source_word + size, destination_s
 808:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 3648              		.loc 1 808 41 view .LVU1233
 3649 15ba 4C8B4424 		mov	r8, QWORD PTR 88[rsp]	# tmp483, %sfp
 3649      58
 3650              	# sieve_extend.c:800:     register counter_t copy_word = wordindex(copy_start);
 800:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 3651              		.loc 1 800 24 view .LVU1234
 3652 15bf 49C1EB06 		shr	r11, 6	# copy_word,
 3653              	.LVL155:
 801:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 3654              		.loc 1 801 5 is_stmt 1 view .LVU1235
 3655              	# sieve_extend.c:808:     const counter_t aligned_copy_word = min(source_word + size, destination_s
 808:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 3656              		.loc 1 808 41 is_stmt 0 view .LVU1236
 3657 15c3 4D01C8   		add	r8, r9	# tmp483, size
 3658              	# sieve_extend.c:801:     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 801:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 3659              		.loc 1 801 25 view .LVU1237
 3660 15c6 4A8D34DD 		lea	rsi, 0[0+r11*8]	# _6,
 3660      00000000 
 3661 15ce 48090C33 		or	QWORD PTR [rbx+rsi], rcx	# *_7, tmp482
 805:sieve_extend.c ****     source_word++;
 3662              		.loc 1 805 5 is_stmt 1 view .LVU1238
 3663              	# sieve_extend.c:808:     const counter_t aligned_copy_word = min(source_word + size, destination_s
 808:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 3664              		.loc 1 808 21 is_stmt 0 view .LVU1239
 3665 15d2 4D39D0   		cmp	r8, r10	# tmp483, destination_stop_word
 3666 15d5 4D0F47C2 		cmova	r8, r10	# tmp483,, tmp483, destination_stop_word
 3667              	.LBB299:
 3668              	.LBB300:
 3669              	# sieve_extend.c:650:     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_co
 650:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 3670              		.loc 1 650 91 view .LVU1240
 3671 15d9 41BA0200 		mov	r10d, 2	# tmp484,
 3671      0000
 3672              	.LVL156:
 650:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 3673              		.loc 1 650 91 view .LVU1241
 3674 15df 4983F802 		cmp	r8, 2	# aligned_copy_word,
 3675 15e3 4D0F43D0 		cmovnb	r10, r8	# aligned_copy_word,, _86
 3676              	.LBE300:
 3677              	.LBE299:
 3678              	# sieve_extend.c:805:     copy_word++;
 805:sieve_extend.c ****     source_word++;
 3679              		.loc 1 805 14 view .LVU1242
 3680 15e7 498D4301 		lea	rax, 1[r11]	# ivtmp.319,
 3681              	.LVL157:
 806:sieve_extend.c **** 
 3682              		.loc 1 806 5 is_stmt 1 view .LVU1243
 808:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 3683              		.loc 1 808 5 view .LVU1244
 3684              	.LBB322:
 3685              	.LBB317:
 3686              	# sieve_extend.c:650:     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_co
GAS LISTING /tmp/cctyCFAS.s 			page 111


 650:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 3687              		.loc 1 650 21 is_stmt 0 view .LVU1245
 3688 15eb 498D7AFE 		lea	rdi, -2[r10]	# fast_loop_stop_word,
 3689              	.LBE317:
 3690              	.LBE322:
 3691              	# sieve_extend.c:808:     const counter_t aligned_copy_word = min(source_word + size, destination_s
 808:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 3692              		.loc 1 808 21 view .LVU1246
 3693 15ef 4C894424 		mov	QWORD PTR 56[rsp], r8	# %sfp, aligned_copy_word
 3693      38
 3694              	.LVL158:
 809:sieve_extend.c ****     source_word += distance;
 3695              		.loc 1 809 5 is_stmt 1 view .LVU1247
 3696              	.LBB323:
 3697              	.LBI299:
 649:sieve_extend.c ****     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_copy_word - 2) : 0; // s
 3698              		.loc 1 649 25 view .LVU1248
 3699              	.LBB318:
 650:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 3700              		.loc 1 650 5 view .LVU1249
 3701              	# sieve_extend.c:650:     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_co
 650:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 3702              		.loc 1 650 21 is_stmt 0 view .LVU1250
 3703 15f4 48897C24 		mov	QWORD PTR 72[rsp], rdi	# %sfp, fast_loop_stop_word
 3703      48
 3704              	.LVL159:
 651:sieve_extend.c ****     counter_t distance = 0;
 3705              		.loc 1 651 5 is_stmt 1 view .LVU1251
 652:sieve_extend.c ****     while (copy_word < fast_loop_stop_word) {
 3706              		.loc 1 652 5 view .LVU1252
 653:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 3707              		.loc 1 653 5 view .LVU1253
 653:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 3708              		.loc 1 653 11 view .LVU1254
 3709              	.LBE318:
 3710              	.LBE323:
 3711              	# sieve_extend.c:801:     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 801:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 3712              		.loc 1 801 52 is_stmt 0 view .LVU1255
 3713 15f9 4589FC   		mov	r12d, r15d	# _12, shift
 3714              	# sieve_extend.c:802:                              | (bitarray[source_word+1] << shift_flipped))
 802:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 3715              		.loc 1 802 57 view .LVU1256
 3716 15fc 4589F5   		mov	r13d, r14d	# _18, shift_flipped
 3717              	.LBB324:
 3718              	.LBB319:
 3719              	# sieve_extend.c:653:     while (copy_word < fast_loop_stop_word) {
 653:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 3720              		.loc 1 653 11 view .LVU1257
 3721 15ff 4839F8   		cmp	rax, rdi	# ivtmp.319, fast_loop_stop_word
 3722 1602 0F832104 		jnb	.L375	#,
 3722      0000
 3723 1608 4D29DA   		sub	r10, r11	# tmp485, copy_word
 3724 160b 4C8D4A40 		lea	r9, 64[rdx]	# tmp487,
 3725              	.LVL160:
 653:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 3726              		.loc 1 653 11 view .LVU1258
GAS LISTING /tmp/cctyCFAS.s 			page 112


 3727 160f 498D4AFC 		lea	rcx, -4[r10]	# _269,
 3728 1613 4C8D4610 		lea	r8, 16[rsi]	# tmp488,
 3729 1617 4C8D5648 		lea	r10, 72[rsi]	# tmp491,
 3730 161b 48894C24 		mov	QWORD PTR 48[rsp], rcx	# %sfp, _269
 3730      30
 3731 1620 4D39C1   		cmp	r9, r8	# tmp487, tmp488
 3732 1623 488D4A08 		lea	rcx, 8[rdx]	# tmp690,
 3733 1627 4C894C24 		mov	QWORD PTR 40[rsp], r9	# %sfp, tmp487
 3733      28
 3734 162c 410F9EC1 		setle	r9b	#, tmp490
 3735 1630 4939CA   		cmp	r10, rcx	# tmp491, tmp690
 3736 1633 4C895424 		mov	QWORD PTR 64[rsp], r10	# %sfp, tmp491
 3736      40
 3737 1638 410F9EC2 		setle	r10b	#, tmp494
 3738 163c 4509D1   		or	r9d, r10d	# tmp490, tmp494
 3739 163f 4589CA   		mov	r10d, r9d	# tmp495, tmp490
 3740 1642 4C8D4A50 		lea	r9, 80[rdx]	# tmp496,
 3741 1646 4D39C1   		cmp	r9, r8	# tmp496, tmp488
 3742 1649 4C894C24 		mov	QWORD PTR 32[rsp], r9	# %sfp, tmp496
 3742      20
 3743 164e 410F9EC1 		setle	r9b	#, tmp499
 3744 1652 4883C210 		add	rdx, 16	# tmp501,
 3745 1656 48395424 		cmp	QWORD PTR 64[rsp], rdx	# %sfp, tmp501
 3745      40
 3746 165b 400F9EC7 		setle	dil	#, tmp503
 3747              	.LVL161:
 653:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 3748              		.loc 1 653 11 view .LVU1259
 3749 165f 4409CF   		or	edi, r9d	# tmp504, tmp499
 3750 1662 4421D7   		and	edi, r10d	# tmp505, tmp495
 3751 1665 48837C24 		cmp	QWORD PTR 48[rsp], 11	# %sfp,
 3751      300B
 3752 166b 410F97C2 		seta	r10b	#, tmp507
 3753 166f 4C8D4E08 		lea	r9, 8[rsi]	# tmp510,
 3754 1673 4421D7   		and	edi, r10d	# tmp508, tmp507
 3755 1676 4C394C24 		cmp	QWORD PTR 40[rsp], r9	# %sfp, tmp510
 3755      28
 3756 167b 410F9EC2 		setle	r10b	#, tmp512
 3757 167f 4883C640 		add	rsi, 64	# tmp513,
 3758 1683 4839CE   		cmp	rsi, rcx	# tmp513, tmp690
 3759 1686 0F9E4424 		setle	BYTE PTR 40[rsp]	#, %sfp
 3759      28
 3760 168b 440A5424 		or	r10b, BYTE PTR 40[rsp]	# tmp517, %sfp
 3760      28
 3761 1690 4421D7   		and	edi, r10d	# tmp518, tmp517
 3762 1693 4C394C24 		cmp	QWORD PTR 32[rsp], r9	# %sfp, tmp510
 3762      20
 3763 1698 410F9EC2 		setle	r10b	#, tmp522
 3764 169c 4839D6   		cmp	rsi, rdx	# tmp513, tmp501
 3765 169f 0F9E4424 		setle	BYTE PTR 40[rsp]	#, %sfp
 3765      28
 3766 16a4 440A5424 		or	r10b, BYTE PTR 40[rsp]	# tmp527, %sfp
 3766      28
 3767 16a9 4484D7   		test	dil, r10b	# tmp518, tmp527
 3768 16ac 0F84460E 		je	.L376	#,
 3768      0000
 3769 16b2 4C394C24 		cmp	QWORD PTR 64[rsp], r9	# %sfp, tmp510
GAS LISTING /tmp/cctyCFAS.s 			page 113


 3769      40
 3770 16b7 400F9EC7 		setle	dil	#, tmp532
 3771 16bb 4C39C6   		cmp	rsi, r8	# tmp513, tmp488
 3772 16be 400F9EC6 		setle	sil	#, tmp536
 3773 16c2 4008F7   		or	dil, sil	# tmp532, tmp536
 3774 16c5 0F842D0E 		je	.L376	#,
 3774      0000
 3775 16cb 4801D9   		add	rcx, rbx	# vectp.284, bitarray
 3776              	.LBB301:
 3777              	# sieve_extend.c:654:         bitword_t source0 = bitarray[source_word  ];
 654:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 3778              		.loc 1 654 19 view .LVU1260
 3779 16ce C5FE6F39 		vmovdqu	ymm7, YMMWORD PTR [rcx]	# tmp1219, MEM[base: vectp.284_427, index: ivtmp.359_621, offset: 
 3780 16d2 4801DA   		add	rdx, rbx	# vectp.288, bitarray
 3781              	# sieve_extend.c:655:         bitword_t source1 = bitarray[source_word+1];
 655:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3782              		.loc 1 655 19 view .LVU1261
 3783 16d5 C5FE6F0A 		vmovdqu	ymm1, YMMWORD PTR [rdx]	# MEM[base: vectp.288_436, index: ivtmp.359_621, offset: 0B], MEM[
 3784 16d9 C5FE6F42 		vmovdqu	ymm0, YMMWORD PTR 32[rdx]	# MEM[base: vectp.288_436, index: ivtmp.359_621, offset: 32B], M
 3784      20
 3785              	# sieve_extend.c:654:         bitword_t source0 = bitarray[source_word  ];
 654:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 3786              		.loc 1 654 19 view .LVU1262
 3787 16de C5C56C51 		vpunpcklqdq	ymm2, ymm7, YMMWORD PTR 32[rcx]	# tmp548, tmp1219, MEM[base: vectp.284_427, index: ivt
 3787      20
 3788 16e3 4C8B5C24 		mov	r11, QWORD PTR 48[rsp]	# _269, %sfp
 3788      30
 3789              	.LVL162:
 3790              	# sieve_extend.c:655:         bitword_t source1 = bitarray[source_word+1];
 655:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3791              		.loc 1 655 19 view .LVU1263
 3792 16e8 C5F56CE8 		vpunpcklqdq	ymm5, ymm1, ymm0	# tmp544, MEM[base: vectp.288_436, index: ivtmp.359_621, offset: 0B],
 3793 16ec C5756DF0 		vpunpckhqdq	ymm14, ymm1, ymm0	# tmp562, MEM[base: vectp.288_436, index: ivtmp.359_621, offset: 0B]
 3794 16f0 49C1EB03 		shr	r11, 3	# _269,
 3795 16f4 C463FD00 		vpermq	ymm8, ymm5, 216	# vect_perm_even_444, tmp544,
 3795      C5D8
 3796 16fa C4C1796E 		vmovd	xmm3, r15d	# _12, _12
 3796      DF
 3797 16ff C4C1796E 		vmovd	xmm4, r14d	# _18, _18
 3797      E6
 3798              	# sieve_extend.c:654:         bitword_t source0 = bitarray[source_word  ];
 654:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 3799              		.loc 1 654 19 view .LVU1264
 3800 1704 C4E3FD00 		vpermq	ymm6, ymm2, 216	# tmp547, tmp548,
 3800      F2D8
 3801              	# sieve_extend.c:655:         bitword_t source1 = bitarray[source_word+1];
 655:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3802              		.loc 1 655 19 view .LVU1265
 3803 170a C443FD00 		vpermq	ymm15, ymm14, 216	# tmp561, tmp562,
 3803      FED8
 3804 1710 4C895C24 		mov	QWORD PTR 64[rsp], r11	# %sfp, bnd.277
 3804      40
 3805              	# sieve_extend.c:656:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3806              		.loc 1 656 42 view .LVU1266
 3807 1715 C54DD3CB 		vpsrlq	ymm9, ymm6, xmm3	# vect__98.291, tmp547, _12
 3808              	# sieve_extend.c:656:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
GAS LISTING /tmp/cctyCFAS.s 			page 114


 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3809              		.loc 1 656 63 view .LVU1267
 3810 1719 C53DF3D4 		vpsllq	ymm10, ymm8, xmm4	# vect__100.292, vect_perm_even_444, _18
 3811              	# sieve_extend.c:658:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 658:sieve_extend.c ****         copy_word += 2;
 3812              		.loc 1 658 63 view .LVU1268
 3813 171d C585F3CC 		vpsllq	ymm1, ymm15, xmm4	# vect__110.295, tmp561, _18
 3814              	# sieve_extend.c:658:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 658:sieve_extend.c ****         copy_word += 2;
 3815              		.loc 1 658 42 view .LVU1269
 3816 1721 C5BDD3C3 		vpsrlq	ymm0, ymm8, xmm3	# vect__109.294, vect_perm_even_444, _12
 3817              	# sieve_extend.c:656:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3818              		.loc 1 656 52 view .LVU1270
 3819 1725 C44135EB 		vpor	ymm11, ymm9, ymm10	# vect__104.293, vect__98.291, vect__100.292
 3819      DA
 3820              	# sieve_extend.c:658:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 658:sieve_extend.c ****         copy_word += 2;
 3821              		.loc 1 658 52 view .LVU1271
 3822 172a C5F5EBE8 		vpor	ymm5, ymm1, ymm0	# vect__114.296, vect__110.295, vect__109.294
 3823 172e 49FFCB   		dec	r11	# tmp725
 3824              	# sieve_extend.c:656:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3825              		.loc 1 656 31 view .LVU1272
 3826 1731 C4437D39 		vextracti128	xmm13, ymm11, 0x1	# tmp558, vect__104.293
 3826      DD01
 3827              	# sieve_extend.c:658:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 658:sieve_extend.c ****         copy_word += 2;
 3828              		.loc 1 658 31 view .LVU1273
 3829 1737 C4E37D39 		vextracti128	xmm7, ymm5, 0x1	# tmp572, vect__114.296
 3829      EF01
 3830 173d 4183E301 		and	r11d, 1	# tmp725,
 3831              	.LVL163:
 654:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 3832              		.loc 1 654 9 is_stmt 1 view .LVU1274
 655:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3833              		.loc 1 655 9 view .LVU1275
 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3834              		.loc 1 656 9 view .LVU1276
 3835 1741 48837C24 		cmp	QWORD PTR 64[rsp], 1	# %sfp,
 3835      4001
 3836              	# sieve_extend.c:656:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3837              		.loc 1 656 31 is_stmt 0 view .LVU1277
 3838 1747 C42179D6 		vmovq	QWORD PTR [rbx+r9], xmm11	# MEM[base: _450, index: ivtmp.359_621, offset: 0B], tmp554
 3838      1C0B
 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3839              		.loc 1 656 31 view .LVU1278
 3840 174d C42179D6 		vmovq	QWORD PTR 32[rbx+r9], xmm13	# MEM[base: _450, index: ivtmp.359_621, offset: 32B], tmp558
 3840      6C0B20
 3841 1754 C423F916 		vpextrq	QWORD PTR 16[rbx+r9], xmm11, 1	# MEM[base: _450, index: ivtmp.359_621, offset: 16B], tmp55
 3841      5C0B1001 
 3842 175c C423F916 		vpextrq	QWORD PTR 48[rbx+r9], xmm13, 1	# MEM[base: _450, index: ivtmp.359_621, offset: 48B], tmp55
 3842      6C0B3001 
 657:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 3843              		.loc 1 657 9 is_stmt 1 view .LVU1279
 3844              	.LVL164:
GAS LISTING /tmp/cctyCFAS.s 			page 115


 658:sieve_extend.c ****         copy_word += 2;
 3845              		.loc 1 658 9 view .LVU1280
 3846 1764 4E8D140B 		lea	r10, [rbx+r9]	# _450,
 3847 1768 4A8D3C03 		lea	rdi, [rbx+r8]	# _470,
 3848              	# sieve_extend.c:658:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 658:sieve_extend.c ****         copy_word += 2;
 3849              		.loc 1 658 31 is_stmt 0 view .LVU1281
 3850 176c C4A179D6 		vmovq	QWORD PTR [rbx+r8], xmm5	# MEM[base: _470, index: ivtmp.359_621, offset: 0B], tmp568
 3850      2C03
 658:sieve_extend.c ****         copy_word += 2;
 3851              		.loc 1 658 31 view .LVU1282
 3852 1772 C4A179D6 		vmovq	QWORD PTR 32[rbx+r8], xmm7	# MEM[base: _470, index: ivtmp.359_621, offset: 32B], tmp572
 3852      7C0320
 3853 1779 C4A3F916 		vpextrq	QWORD PTR 16[rbx+r8], xmm5, 1	# MEM[base: _470, index: ivtmp.359_621, offset: 16B], tmp568
 3853      6C031001 
 3854 1781 C4A3F916 		vpextrq	QWORD PTR 48[rbx+r8], xmm7, 1	# MEM[base: _470, index: ivtmp.359_621, offset: 48B], tmp572
 3854      7C033001 
 659:sieve_extend.c ****         source_word += 2;
 3855              		.loc 1 659 9 is_stmt 1 view .LVU1283
 660:sieve_extend.c ****         distance += 2;
 3856              		.loc 1 660 9 view .LVU1284
 661:sieve_extend.c ****     }
 3857              		.loc 1 661 9 view .LVU1285
 661:sieve_extend.c ****     }
 3858              		.loc 1 661 9 is_stmt 0 view .LVU1286
 3859              	.LBE301:
 653:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 3860              		.loc 1 653 11 is_stmt 1 view .LVU1287
 3861 1789 41B94000 		mov	r9d, 64	# ivtmp.359,
 3861      0000
 3862 178f 41B80100 		mov	r8d, 1	# ivtmp.357,
 3862      0000
 3863 1795 0F864A01 		jbe	.L594	#,
 3863      0000
 3864 179b 4D85DB   		test	r11, r11	# tmp727
 3865 179e 0F857C0A 		jne	.L627	#,
 3865      0000
 3866              	.L620:
 653:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 3867              		.loc 1 653 11 is_stmt 0 view .LVU1288
 3868 17a4 488B7424 		mov	rsi, QWORD PTR 64[rsp]	# bnd.277, %sfp
 3868      40
 3869              	.L377:
 3870              	.LBB302:
 654:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 3871              		.loc 1 654 9 is_stmt 1 view .LVU1289
 655:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3872              		.loc 1 655 9 view .LVU1290
 3873              	# sieve_extend.c:654:         bitword_t source0 = bitarray[source_word  ];
 654:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 3874              		.loc 1 654 19 is_stmt 0 view .LVU1291
 3875 17a9 C4A17E6F 		vmovdqu	ymm1, YMMWORD PTR [rcx+r9]	# tmp1221, MEM[base: vectp.284_427, index: ivtmp.359_621, offse
 3875      0C09
 3876              	# sieve_extend.c:655:         bitword_t source1 = bitarray[source_word+1];
 655:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3877              		.loc 1 655 19 view .LVU1292
 3878 17af C4217E6F 		vmovdqu	ymm12, YMMWORD PTR [rdx+r9]	# MEM[base: vectp.288_436, index: ivtmp.359_621, offset: 0B], 
GAS LISTING /tmp/cctyCFAS.s 			page 116


 3878      240A
 3879 17b5 C4217E6F 		vmovdqu	ymm13, YMMWORD PTR 32[rdx+r9]	# MEM[base: vectp.288_436, index: ivtmp.359_621, offset: 32B
 3879      6C0A20
 3880              	# sieve_extend.c:654:         bitword_t source0 = bitarray[source_word  ];
 654:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 3881              		.loc 1 654 19 view .LVU1293
 3882 17bc C4A1756C 		vpunpcklqdq	ymm0, ymm1, YMMWORD PTR 32[rcx+r9]	# tmp738, tmp1221, MEM[base: vectp.284_427, index: 
 3882      440920
 3883              	# sieve_extend.c:655:         bitword_t source1 = bitarray[source_word+1];
 655:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3884              		.loc 1 655 19 view .LVU1294
 3885 17c3 C4411D6C 		vpunpcklqdq	ymm14, ymm12, ymm13	# tmp734, MEM[base: vectp.288_436, index: ivtmp.359_621, offset: 0
 3885      F5
 3886 17c8 C4411D6D 		vpunpckhqdq	ymm11, ymm12, ymm13	# tmp749, MEM[base: vectp.288_436, index: ivtmp.359_621, offset: 0
 3886      DD
 3887 17cd C443FD00 		vpermq	ymm15, ymm14, 216	# vect_perm_even_444, tmp734,
 3887      FED8
 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3888              		.loc 1 656 9 is_stmt 1 view .LVU1295
 3889              	# sieve_extend.c:654:         bitword_t source0 = bitarray[source_word  ];
 654:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 3890              		.loc 1 654 19 is_stmt 0 view .LVU1296
 3891 17d3 C4E3FD00 		vpermq	ymm5, ymm0, 216	# tmp739, tmp738,
 3891      E8D8
 3892              	# sieve_extend.c:655:         bitword_t source1 = bitarray[source_word+1];
 655:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3893              		.loc 1 655 19 view .LVU1297
 3894 17d9 C4C3FD00 		vpermq	ymm6, ymm11, 216	# tmp750, tmp749,
 3894      F3D8
 3895              	# sieve_extend.c:656:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3896              		.loc 1 656 42 view .LVU1298
 3897 17df C555D3C3 		vpsrlq	ymm8, ymm5, xmm3	# vect__98.291, tmp739, _12
 3898              	# sieve_extend.c:656:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3899              		.loc 1 656 63 view .LVU1299
 3900 17e3 C585F3FC 		vpsllq	ymm7, ymm15, xmm4	# vect__100.292, vect_perm_even_444, _18
 3901              	# sieve_extend.c:658:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 658:sieve_extend.c ****         copy_word += 2;
 3902              		.loc 1 658 63 view .LVU1300
 3903 17e7 C54DF3E4 		vpsllq	ymm12, ymm6, xmm4	# vect__110.295, tmp750, _18
 3904              	# sieve_extend.c:658:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 658:sieve_extend.c ****         copy_word += 2;
 3905              		.loc 1 658 42 view .LVU1301
 3906 17eb C505D3EB 		vpsrlq	ymm13, ymm15, xmm3	# vect__109.294, vect_perm_even_444, _12
 3907              	# sieve_extend.c:656:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3908              		.loc 1 656 52 view .LVU1302
 3909 17ef C53DEBCF 		vpor	ymm9, ymm8, ymm7	# vect__104.293, vect__98.291, vect__100.292
 3910              	# sieve_extend.c:658:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 658:sieve_extend.c ****         copy_word += 2;
 3911              		.loc 1 658 52 view .LVU1303
 3912 17f3 C4411DEB 		vpor	ymm14, ymm12, ymm13	# vect__114.296, vect__110.295, vect__109.294
 3912      F5
 3913              	# sieve_extend.c:656:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3914              		.loc 1 656 31 view .LVU1304
GAS LISTING /tmp/cctyCFAS.s 			page 117


 3915 17f8 C4637D39 		vextracti128	xmm2, ymm9, 0x1	# tmp746, vect__104.293
 3915      CA01
 3916              	# sieve_extend.c:658:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 658:sieve_extend.c ****         copy_word += 2;
 3917              		.loc 1 658 31 view .LVU1305
 3918 17fe C4637D39 		vextracti128	xmm1, ymm14, 0x1	# tmp757, vect__114.296
 3918      F101
 3919              	# sieve_extend.c:656:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3920              		.loc 1 656 31 view .LVU1306
 3921 1804 C40179D6 		vmovq	QWORD PTR [r10+r9], xmm9	# MEM[base: _450, index: ivtmp.359_621, offset: 0B], tmp743
 3921      0C0A
 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3922              		.loc 1 656 31 view .LVU1307
 3923 180a C48179D6 		vmovq	QWORD PTR 32[r10+r9], xmm2	# MEM[base: _450, index: ivtmp.359_621, offset: 32B], tmp746
 3923      540A20
 3924 1811 C403F916 		vpextrq	QWORD PTR 16[r10+r9], xmm9, 1	# MEM[base: _450, index: ivtmp.359_621, offset: 16B], tmp743
 3924      4C0A1001 
 3925 1819 C483F916 		vpextrq	QWORD PTR 48[r10+r9], xmm2, 1	# MEM[base: _450, index: ivtmp.359_621, offset: 48B], tmp746
 3925      540A3001 
 657:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 3926              		.loc 1 657 9 is_stmt 1 view .LVU1308
 658:sieve_extend.c ****         copy_word += 2;
 3927              		.loc 1 658 9 view .LVU1309
 3928              	# sieve_extend.c:658:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 658:sieve_extend.c ****         copy_word += 2;
 3929              		.loc 1 658 31 is_stmt 0 view .LVU1310
 3930 1821 C42179D6 		vmovq	QWORD PTR [rdi+r9], xmm14	# MEM[base: _470, index: ivtmp.359_621, offset: 0B], tmp754
 3930      340F
 658:sieve_extend.c ****         copy_word += 2;
 3931              		.loc 1 658 31 view .LVU1311
 3932 1827 C4A179D6 		vmovq	QWORD PTR 32[rdi+r9], xmm1	# MEM[base: _470, index: ivtmp.359_621, offset: 32B], tmp757
 3932      4C0F20
 3933 182e C423F916 		vpextrq	QWORD PTR 16[rdi+r9], xmm14, 1	# MEM[base: _470, index: ivtmp.359_621, offset: 16B], tmp75
 3933      740F1001 
 3934 1836 C4A3F916 		vpextrq	QWORD PTR 48[rdi+r9], xmm1, 1	# MEM[base: _470, index: ivtmp.359_621, offset: 48B], tmp757
 3934      4C0F3001 
 659:sieve_extend.c ****         source_word += 2;
 3935              		.loc 1 659 9 is_stmt 1 view .LVU1312
 660:sieve_extend.c ****         distance += 2;
 3936              		.loc 1 660 9 view .LVU1313
 661:sieve_extend.c ****     }
 3937              		.loc 1 661 9 view .LVU1314
 661:sieve_extend.c ****     }
 3938              		.loc 1 661 9 is_stmt 0 view .LVU1315
 3939              	.LBE302:
 653:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 3940              		.loc 1 653 11 is_stmt 1 view .LVU1316
 3941              	.LBB303:
 654:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 3942              		.loc 1 654 9 view .LVU1317
 655:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3943              		.loc 1 655 9 view .LVU1318
 3944              	# sieve_extend.c:654:         bitword_t source0 = bitarray[source_word  ];
 654:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 3945              		.loc 1 654 19 is_stmt 0 view .LVU1319
 3946 183e C4A17E6F 		vmovdqu	ymm7, YMMWORD PTR 64[rcx+r9]	# tmp1222, MEM[base: vectp.284_427, index: ivtmp.359_621, off
GAS LISTING /tmp/cctyCFAS.s 			page 118


 3946      7C0940
 3947              	# sieve_extend.c:655:         bitword_t source1 = bitarray[source_word+1];
 655:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3948              		.loc 1 655 19 view .LVU1320
 3949 1845 C4217E6F 		vmovdqu	ymm8, YMMWORD PTR 64[rdx+r9]	# MEM[base: vectp.288_436, index: ivtmp.359_621, offset: 0B],
 3949      440A40
 3950 184c C4A17E6F 		vmovdqu	ymm0, YMMWORD PTR 96[rdx+r9]	# MEM[base: vectp.288_436, index: ivtmp.359_621, offset: 32B]
 3950      440A60
 3951              	# sieve_extend.c:654:         bitword_t source0 = bitarray[source_word  ];
 654:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 3952              		.loc 1 654 19 view .LVU1321
 3953 1853 C421456C 		vpunpcklqdq	ymm10, ymm7, YMMWORD PTR 96[rcx+r9]	# tmp768, tmp1222, MEM[base: vectp.284_427, index:
 3953      540960
 3954              	# sieve_extend.c:655:         bitword_t source1 = bitarray[source_word+1];
 655:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3955              		.loc 1 655 19 view .LVU1322
 3956 185a C5BD6CE8 		vpunpcklqdq	ymm5, ymm8, ymm0	# tmp764, MEM[base: vectp.288_436, index: ivtmp.359_621, offset: 0B],
 3957 185e C53D6DF8 		vpunpckhqdq	ymm15, ymm8, ymm0	# tmp779, MEM[base: vectp.288_436, index: ivtmp.359_621, offset: 0B]
 3958 1862 C463FD00 		vpermq	ymm9, ymm5, 216	# vect_perm_even_444, tmp764,
 3958      CDD8
 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3959              		.loc 1 656 9 is_stmt 1 view .LVU1323
 3960              	# sieve_extend.c:654:         bitword_t source0 = bitarray[source_word  ];
 654:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 3961              		.loc 1 654 19 is_stmt 0 view .LVU1324
 3962 1868 C4C3FD00 		vpermq	ymm2, ymm10, 216	# tmp769, tmp768,
 3962      D2D8
 3963              	# sieve_extend.c:655:         bitword_t source1 = bitarray[source_word+1];
 655:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3964              		.loc 1 655 19 view .LVU1325
 3965 186e C4C3FD00 		vpermq	ymm1, ymm15, 216	# tmp780, tmp779,
 3965      CFD8
 3966              	# sieve_extend.c:656:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3967              		.loc 1 656 42 view .LVU1326
 3968 1874 C56DD3DB 		vpsrlq	ymm11, ymm2, xmm3	# vect__98.291, tmp769, _12
 3969              	# sieve_extend.c:656:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3970              		.loc 1 656 63 view .LVU1327
 3971 1878 C5B5F3F4 		vpsllq	ymm6, ymm9, xmm4	# vect__100.292, vect_perm_even_444, _18
 3972              	# sieve_extend.c:658:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 658:sieve_extend.c ****         copy_word += 2;
 3973              		.loc 1 658 63 view .LVU1328
 3974 187c C575F3C4 		vpsllq	ymm8, ymm1, xmm4	# vect__110.295, tmp780, _18
 3975              	# sieve_extend.c:658:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 658:sieve_extend.c ****         copy_word += 2;
 3976              		.loc 1 658 42 view .LVU1329
 3977 1880 C5B5D3C3 		vpsrlq	ymm0, ymm9, xmm3	# vect__109.294, vect_perm_even_444, _12
 3978              	# sieve_extend.c:656:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3979              		.loc 1 656 52 view .LVU1330
 3980 1884 C525EBE6 		vpor	ymm12, ymm11, ymm6	# vect__104.293, vect__98.291, vect__100.292
 3981              	# sieve_extend.c:658:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 658:sieve_extend.c ****         copy_word += 2;
 3982              		.loc 1 658 52 view .LVU1331
 3983 1888 C5BDEBE8 		vpor	ymm5, ymm8, ymm0	# vect__114.296, vect__110.295, vect__109.294
 3984              	# sieve_extend.c:656:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
GAS LISTING /tmp/cctyCFAS.s 			page 119


 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3985              		.loc 1 656 31 view .LVU1332
 3986 188c C4437D39 		vextracti128	xmm14, ymm12, 0x1	# tmp776, vect__104.293
 3986      E601
 3987              	# sieve_extend.c:658:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 658:sieve_extend.c ****         copy_word += 2;
 3988              		.loc 1 658 31 view .LVU1333
 3989 1892 C4E37D39 		vextracti128	xmm7, ymm5, 0x1	# tmp787, vect__114.296
 3989      EF01
 3990 1898 4983C002 		add	r8, 2	# ivtmp.357,
 3991              	# sieve_extend.c:656:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3992              		.loc 1 656 31 view .LVU1334
 3993 189c C40179D6 		vmovq	QWORD PTR 64[r10+r9], xmm12	# MEM[base: _450, index: ivtmp.359_621, offset: 0B], tmp773
 3993      640A40
 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3994              		.loc 1 656 31 view .LVU1335
 3995 18a3 C40179D6 		vmovq	QWORD PTR 96[r10+r9], xmm14	# MEM[base: _450, index: ivtmp.359_621, offset: 32B], tmp776
 3995      740A60
 3996 18aa C403F916 		vpextrq	QWORD PTR 80[r10+r9], xmm12, 1	# MEM[base: _450, index: ivtmp.359_621, offset: 16B], tmp77
 3996      640A5001 
 3997 18b2 C403F916 		vpextrq	QWORD PTR 112[r10+r9], xmm14, 1	# MEM[base: _450, index: ivtmp.359_621, offset: 48B], tmp7
 3997      740A7001 
 657:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 3998              		.loc 1 657 9 is_stmt 1 view .LVU1336
 658:sieve_extend.c ****         copy_word += 2;
 3999              		.loc 1 658 9 view .LVU1337
 4000              	# sieve_extend.c:658:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 658:sieve_extend.c ****         copy_word += 2;
 4001              		.loc 1 658 31 is_stmt 0 view .LVU1338
 4002 18ba C4A179D6 		vmovq	QWORD PTR 64[rdi+r9], xmm5	# MEM[base: _470, index: ivtmp.359_621, offset: 0B], tmp784
 4002      6C0F40
 658:sieve_extend.c ****         copy_word += 2;
 4003              		.loc 1 658 31 view .LVU1339
 4004 18c1 C4A179D6 		vmovq	QWORD PTR 96[rdi+r9], xmm7	# MEM[base: _470, index: ivtmp.359_621, offset: 32B], tmp787
 4004      7C0F60
 4005 18c8 C4A3F916 		vpextrq	QWORD PTR 80[rdi+r9], xmm5, 1	# MEM[base: _470, index: ivtmp.359_621, offset: 16B], tmp784
 4005      6C0F5001 
 4006 18d0 C4A3F916 		vpextrq	QWORD PTR 112[rdi+r9], xmm7, 1	# MEM[base: _470, index: ivtmp.359_621, offset: 48B], tmp78
 4006      7C0F7001 
 659:sieve_extend.c ****         source_word += 2;
 4007              		.loc 1 659 9 is_stmt 1 view .LVU1340
 660:sieve_extend.c ****         distance += 2;
 4008              		.loc 1 660 9 view .LVU1341
 661:sieve_extend.c ****     }
 4009              		.loc 1 661 9 view .LVU1342
 661:sieve_extend.c ****     }
 4010              		.loc 1 661 9 is_stmt 0 view .LVU1343
 4011              	.LBE303:
 653:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 4012              		.loc 1 653 11 is_stmt 1 view .LVU1344
 4013 18d8 4983E980 		sub	r9, -128	# ivtmp.359,
 4014 18dc 4C39C6   		cmp	rsi, r8	# bnd.277, ivtmp.357
 4015 18df 0F87C4FE 		ja	.L377	#,
 4015      FFFF
 4016              	.L594:
 653:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
GAS LISTING /tmp/cctyCFAS.s 			page 120


 4017              		.loc 1 653 11 is_stmt 0 view .LVU1345
 4018 18e5 4C8B5C24 		mov	r11, QWORD PTR 64[rsp]	# bnd.277, %sfp
 4018      40
 4019 18ea 488B5424 		mov	rdx, QWORD PTR 88[rsp]	# _183, %sfp
 4019      58
 4020 18ef 49C1E303 		sal	r11, 3	# bnd.277,
 4021 18f3 4A8D0C1A 		lea	rcx, [rdx+r11]	# tmp.279,
 4022              	.LBB304:
 4023              	# sieve_extend.c:654:         bitword_t source0 = bitarray[source_word  ];
 654:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 4024              		.loc 1 654 37 view .LVU1346
 4025 18f7 4C8D14CD 		lea	r10, 0[0+rcx*8]	# _55,
 4025      00000000 
 4026              	# sieve_extend.c:655:         bitword_t source1 = bitarray[source_word+1];
 655:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4027              		.loc 1 655 19 view .LVU1347
 4028 18ff 4A8B7C13 		mov	rdi, QWORD PTR 8[rbx+r10]	# source1, *_223
 4028      08
 4029 1904 4A8D1418 		lea	rdx, [rax+r11]	# tmp.280,
 4030              	.LVL165:
 654:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 4031              		.loc 1 654 9 is_stmt 1 view .LVU1348
 655:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4032              		.loc 1 655 9 view .LVU1349
 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 4033              		.loc 1 656 9 view .LVU1350
 4034              	# sieve_extend.c:656:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 4035              		.loc 1 656 42 is_stmt 0 view .LVU1351
 4036 1908 C46283F7 		shrx	r8, QWORD PTR [rbx+rcx*8], r15	# tmp576, *_56, shift
 4036      04CB
 4037              	# sieve_extend.c:656:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 4038              		.loc 1 656 63 view .LVU1352
 4039 190e C46289F7 		shlx	r9, rdi, r14	# tmp578, source1, shift_flipped
 4039      CF
 4040              	# sieve_extend.c:656:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 4041              		.loc 1 656 52 view .LVU1353
 4042 1913 4D09C8   		or	r8, r9	# tmp579, tmp578
 4043 1916 4C8904D3 		mov	QWORD PTR [rbx+rdx*8], r8	# *_78, tmp579
 4044              	.LVL166:
 657:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 4045              		.loc 1 657 9 is_stmt 1 view .LVU1354
 4046              	# sieve_extend.c:658:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 658:sieve_extend.c ****         copy_word += 2;
 4047              		.loc 1 658 42 is_stmt 0 view .LVU1355
 4048 191a C4E283F7 		shrx	rdi, rdi, r15	# tmp582, source1, shift
 4048      FF
 4049              	.LVL167:
 4050              	# sieve_extend.c:659:         copy_word += 2;
 659:sieve_extend.c ****         source_word += 2;
 4051              		.loc 1 659 19 view .LVU1356
 4052 191f 4C8D4202 		lea	r8, 2[rdx]	# copy_word,
 4053              	# sieve_extend.c:658:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 658:sieve_extend.c ****         copy_word += 2;
 4054              		.loc 1 658 63 view .LVU1357
GAS LISTING /tmp/cctyCFAS.s 			page 121


 4055 1923 4A8B7413 		mov	rsi, QWORD PTR 16[rbx+r10]	# *_495, *_495
 4055      10
 4056              	# sieve_extend.c:657:         bitword_t source2 = bitarray[source_word+2];
 657:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 4057              		.loc 1 657 37 view .LVU1358
 4058 1928 4C8D4902 		lea	r9, 2[rcx]	# _493,
 4059              	.LVL168:
 658:sieve_extend.c ****         copy_word += 2;
 4060              		.loc 1 658 9 is_stmt 1 view .LVU1359
 4061              	# sieve_extend.c:658:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 658:sieve_extend.c ****         copy_word += 2;
 4062              		.loc 1 658 63 is_stmt 0 view .LVU1360
 4063 192c C46289F7 		shlx	r10, rsi, r14	# tmp580, *_495, shift_flipped
 4063      D6
 4064              	# sieve_extend.c:658:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 658:sieve_extend.c ****         copy_word += 2;
 4065              		.loc 1 658 52 view .LVU1361
 4066 1931 4C09D7   		or	rdi, r10	# tmp583, tmp580
 4067 1934 48897CD3 		mov	QWORD PTR 8[rbx+rdx*8], rdi	# *_501, tmp583
 4067      08
 659:sieve_extend.c ****         source_word += 2;
 4068              		.loc 1 659 9 is_stmt 1 view .LVU1362
 4069              	.LVL169:
 660:sieve_extend.c ****         distance += 2;
 4070              		.loc 1 660 9 view .LVU1363
 661:sieve_extend.c ****     }
 4071              		.loc 1 661 9 view .LVU1364
 4072              	# sieve_extend.c:661:         distance += 2;
 661:sieve_extend.c ****     }
 4073              		.loc 1 661 18 is_stmt 0 view .LVU1365
 4074 1939 4D8D5302 		lea	r10, 2[r11]	# distance,
 4075              	.LVL170:
 661:sieve_extend.c ****     }
 4076              		.loc 1 661 18 view .LVU1366
 4077              	.LBE304:
 653:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 4078              		.loc 1 653 11 is_stmt 1 view .LVU1367
 4079 193d 4C394424 		cmp	QWORD PTR 72[rsp], r8	# %sfp, copy_word
 4079      48
 4080 1942 0F86D900 		jbe	.L380	#,
 4080      0000
 4081              	.LBB305:
 654:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 4082              		.loc 1 654 9 view .LVU1368
 4083              	# sieve_extend.c:654:         bitword_t source0 = bitarray[source_word  ];
 654:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 4084              		.loc 1 654 37 is_stmt 0 view .LVU1369
 4085 1948 4E8D14CD 		lea	r10, 0[0+r9*8]	# _510,
 4085      00000000 
 4086              	.LVL171:
 655:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4087              		.loc 1 655 9 is_stmt 1 view .LVU1370
 4088              	# sieve_extend.c:655:         bitword_t source1 = bitarray[source_word+1];
 655:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4089              		.loc 1 655 19 is_stmt 0 view .LVU1371
 4090 1950 4A8B7C13 		mov	rdi, QWORD PTR 8[rbx+r10]	# source1, *_515
 4090      08
GAS LISTING /tmp/cctyCFAS.s 			page 122


 4091              	.LVL172:
 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 4092              		.loc 1 656 9 is_stmt 1 view .LVU1372
 4093              	# sieve_extend.c:656:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 4094              		.loc 1 656 42 is_stmt 0 view .LVU1373
 4095 1955 4E8B0CCB 		mov	r9, QWORD PTR [rbx+r9*8]	# *_511, *_511
 4096              	.LVL173:
 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 4097              		.loc 1 656 42 view .LVU1374
 4098 1959 C4C283F7 		shrx	rsi, r9, r15	# tmp584, *_511, shift
 4098      F1
 4099              	.LVL174:
 4100              	# sieve_extend.c:656:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 4101              		.loc 1 656 63 view .LVU1375
 4102 195e C46289F7 		shlx	r9, rdi, r14	# tmp586, source1, shift_flipped
 4102      CF
 4103              	.LVL175:
 4104              	# sieve_extend.c:656:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 4105              		.loc 1 656 52 view .LVU1376
 4106 1963 4C09CE   		or	rsi, r9	# tmp587, tmp586
 4107 1966 4A8934C3 		mov	QWORD PTR [rbx+r8*8], rsi	# *_520, tmp587
 4108              	.LVL176:
 657:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 4109              		.loc 1 657 9 is_stmt 1 view .LVU1377
 4110              	# sieve_extend.c:658:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 658:sieve_extend.c ****         copy_word += 2;
 4111              		.loc 1 658 42 is_stmt 0 view .LVU1378
 4112 196a C4E283F7 		shrx	rdi, rdi, r15	# tmp590, source1, shift
 4112      FF
 4113              	.LVL177:
 4114              	# sieve_extend.c:657:         bitword_t source2 = bitarray[source_word+2];
 657:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 4115              		.loc 1 657 37 view .LVU1379
 4116 196f 4C8D4904 		lea	r9, 4[rcx]	# _523,
 4117              	.LVL178:
 658:sieve_extend.c ****         copy_word += 2;
 4118              		.loc 1 658 9 is_stmt 1 view .LVU1380
 4119              	# sieve_extend.c:658:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 658:sieve_extend.c ****         copy_word += 2;
 4120              		.loc 1 658 63 is_stmt 0 view .LVU1381
 4121 1973 4E8B5413 		mov	r10, QWORD PTR 16[rbx+r10]	# *_525, *_525
 4121      10
 4122              	.LVL179:
 658:sieve_extend.c ****         copy_word += 2;
 4123              		.loc 1 658 63 view .LVU1382
 4124 1978 C4C289F7 		shlx	rsi, r10, r14	# tmp588, *_525, shift_flipped
 4124      F2
 4125              	# sieve_extend.c:658:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 658:sieve_extend.c ****         copy_word += 2;
 4126              		.loc 1 658 52 view .LVU1383
 4127 197d 4809F7   		or	rdi, rsi	# tmp591, tmp588
 4128 1980 4A897CC3 		mov	QWORD PTR 8[rbx+r8*8], rdi	# *_531, tmp591
 4128      08
 659:sieve_extend.c ****         source_word += 2;
GAS LISTING /tmp/cctyCFAS.s 			page 123


 4129              		.loc 1 659 9 is_stmt 1 view .LVU1384
 4130              	# sieve_extend.c:659:         copy_word += 2;
 659:sieve_extend.c ****         source_word += 2;
 4131              		.loc 1 659 19 is_stmt 0 view .LVU1385
 4132 1985 4C8D4204 		lea	r8, 4[rdx]	# copy_word,
 4133              	.LVL180:
 660:sieve_extend.c ****         distance += 2;
 4134              		.loc 1 660 9 is_stmt 1 view .LVU1386
 661:sieve_extend.c ****     }
 4135              		.loc 1 661 9 view .LVU1387
 4136              	# sieve_extend.c:661:         distance += 2;
 661:sieve_extend.c ****     }
 4137              		.loc 1 661 18 is_stmt 0 view .LVU1388
 4138 1989 4D8D5304 		lea	r10, 4[r11]	# distance,
 4139              	.LVL181:
 661:sieve_extend.c ****     }
 4140              		.loc 1 661 18 view .LVU1389
 4141              	.LBE305:
 653:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 4142              		.loc 1 653 11 is_stmt 1 view .LVU1390
 4143 198d 4C394424 		cmp	QWORD PTR 72[rsp], r8	# %sfp, copy_word
 4143      48
 4144 1992 0F868900 		jbe	.L380	#,
 4144      0000
 4145              	.LBB306:
 654:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 4146              		.loc 1 654 9 view .LVU1391
 4147              	# sieve_extend.c:654:         bitword_t source0 = bitarray[source_word  ];
 654:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 4148              		.loc 1 654 37 is_stmt 0 view .LVU1392
 4149 1998 4E8D14CD 		lea	r10, 0[0+r9*8]	# _540,
 4149      00000000 
 4150              	.LVL182:
 655:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4151              		.loc 1 655 9 is_stmt 1 view .LVU1393
 4152              	# sieve_extend.c:655:         bitword_t source1 = bitarray[source_word+1];
 655:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4153              		.loc 1 655 19 is_stmt 0 view .LVU1394
 4154 19a0 4A8B7C13 		mov	rdi, QWORD PTR 8[rbx+r10]	# source1, *_545
 4154      08
 4155              	.LVL183:
 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 4156              		.loc 1 656 9 is_stmt 1 view .LVU1395
 4157              	# sieve_extend.c:656:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 4158              		.loc 1 656 42 is_stmt 0 view .LVU1396
 4159 19a5 4E8B0CCB 		mov	r9, QWORD PTR [rbx+r9*8]	# *_541, *_541
 4160              	.LVL184:
 4161              	# sieve_extend.c:659:         copy_word += 2;
 659:sieve_extend.c ****         source_word += 2;
 4162              		.loc 1 659 19 view .LVU1397
 4163 19a9 4883C206 		add	rdx, 6	# copy_word,
 4164              	# sieve_extend.c:656:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 4165              		.loc 1 656 42 view .LVU1398
 4166 19ad C4C283F7 		shrx	rsi, r9, r15	# tmp592, *_541, shift
 4166      F1
GAS LISTING /tmp/cctyCFAS.s 			page 124


 4167              	# sieve_extend.c:656:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 4168              		.loc 1 656 63 view .LVU1399
 4169 19b2 C46289F7 		shlx	r9, rdi, r14	# tmp594, source1, shift_flipped
 4169      CF
 4170              	.LVL185:
 4171              	# sieve_extend.c:656:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 4172              		.loc 1 656 52 view .LVU1400
 4173 19b7 4C09CE   		or	rsi, r9	# tmp595, tmp594
 4174 19ba 4A8934C3 		mov	QWORD PTR [rbx+r8*8], rsi	# *_550, tmp595
 4175              	.LVL186:
 657:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 4176              		.loc 1 657 9 is_stmt 1 view .LVU1401
 4177              	# sieve_extend.c:658:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 658:sieve_extend.c ****         copy_word += 2;
 4178              		.loc 1 658 42 is_stmt 0 view .LVU1402
 4179 19be C4E283F7 		shrx	rdi, rdi, r15	# tmp598, source1, shift
 4179      FF
 4180              	.LVL187:
 4181              	# sieve_extend.c:657:         bitword_t source2 = bitarray[source_word+2];
 657:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 4182              		.loc 1 657 37 view .LVU1403
 4183 19c3 4883C106 		add	rcx, 6	# _553,
 4184              	.LVL188:
 658:sieve_extend.c ****         copy_word += 2;
 4185              		.loc 1 658 9 is_stmt 1 view .LVU1404
 4186              	# sieve_extend.c:658:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 658:sieve_extend.c ****         copy_word += 2;
 4187              		.loc 1 658 63 is_stmt 0 view .LVU1405
 4188 19c7 4E8B5413 		mov	r10, QWORD PTR 16[rbx+r10]	# *_555, *_555
 4188      10
 4189              	.LVL189:
 658:sieve_extend.c ****         copy_word += 2;
 4190              		.loc 1 658 63 view .LVU1406
 4191 19cc C4C289F7 		shlx	rsi, r10, r14	# tmp596, *_555, shift_flipped
 4191      F2
 4192              	# sieve_extend.c:658:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 658:sieve_extend.c ****         copy_word += 2;
 4193              		.loc 1 658 52 view .LVU1407
 4194 19d1 4809F7   		or	rdi, rsi	# tmp599, tmp596
 4195 19d4 4A897CC3 		mov	QWORD PTR 8[rbx+r8*8], rdi	# *_561, tmp599
 4195      08
 659:sieve_extend.c ****         source_word += 2;
 4196              		.loc 1 659 9 is_stmt 1 view .LVU1408
 4197              	.LVL190:
 660:sieve_extend.c ****         distance += 2;
 4198              		.loc 1 660 9 view .LVU1409
 661:sieve_extend.c ****     }
 4199              		.loc 1 661 9 view .LVU1410
 4200              	# sieve_extend.c:661:         distance += 2;
 661:sieve_extend.c ****     }
 4201              		.loc 1 661 18 is_stmt 0 view .LVU1411
 4202 19d9 4D8D5306 		lea	r10, 6[r11]	# distance,
 4203              	.LVL191:
 661:sieve_extend.c ****     }
 4204              		.loc 1 661 18 view .LVU1412
GAS LISTING /tmp/cctyCFAS.s 			page 125


 4205              	.LBE306:
 653:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 4206              		.loc 1 653 11 is_stmt 1 view .LVU1413
 4207 19dd 48395424 		cmp	QWORD PTR 72[rsp], rdx	# %sfp, copy_word
 4207      48
 4208 19e2 763D     		jbe	.L380	#,
 4209              	.LBB307:
 654:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 4210              		.loc 1 654 9 view .LVU1414
 4211              	# sieve_extend.c:654:         bitword_t source0 = bitarray[source_word  ];
 654:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 4212              		.loc 1 654 37 is_stmt 0 view .LVU1415
 4213 19e4 4C8D0CCD 		lea	r9, 0[0+rcx*8]	# _389,
 4213      00000000 
 4214              	.LVL192:
 655:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4215              		.loc 1 655 9 is_stmt 1 view .LVU1416
 4216              	# sieve_extend.c:655:         bitword_t source1 = bitarray[source_word+1];
 655:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4217              		.loc 1 655 19 is_stmt 0 view .LVU1417
 4218 19ec 4E8B540B 		mov	r10, QWORD PTR 8[rbx+r9]	# source1, *_394
 4218      08
 4219              	.LVL193:
 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 4220              		.loc 1 656 9 is_stmt 1 view .LVU1418
 4221              	# sieve_extend.c:656:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 4222              		.loc 1 656 42 is_stmt 0 view .LVU1419
 4223 19f1 488B0CCB 		mov	rcx, QWORD PTR [rbx+rcx*8]	# *_390, *_390
 4224              	.LVL194:
 4225              	# sieve_extend.c:656:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 4226              		.loc 1 656 63 view .LVU1420
 4227 19f5 C44289F7 		shlx	r8, r10, r14	# tmp602, source1, shift_flipped
 4227      C2
 4228              	# sieve_extend.c:656:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 4229              		.loc 1 656 42 view .LVU1421
 4230 19fa C4E283F7 		shrx	rsi, rcx, r15	# tmp600, *_390, shift
 4230      F1
 4231              	# sieve_extend.c:656:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 4232              		.loc 1 656 52 view .LVU1422
 4233 19ff 4C09C6   		or	rsi, r8	# tmp603, tmp602
 4234 1a02 488934D3 		mov	QWORD PTR [rbx+rdx*8], rsi	# *_399, tmp603
 657:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 4235              		.loc 1 657 9 is_stmt 1 view .LVU1423
 4236              	.LVL195:
 658:sieve_extend.c ****         copy_word += 2;
 4237              		.loc 1 658 9 view .LVU1424
 4238              	# sieve_extend.c:658:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 658:sieve_extend.c ****         copy_word += 2;
 4239              		.loc 1 658 42 is_stmt 0 view .LVU1425
 4240 1a06 C44283F7 		shrx	r10, r10, r15	# tmp606, source1, shift
 4240      D2
 4241              	.LVL196:
 4242              	# sieve_extend.c:658:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
GAS LISTING /tmp/cctyCFAS.s 			page 126


 658:sieve_extend.c ****         copy_word += 2;
 4243              		.loc 1 658 63 view .LVU1426
 4244 1a0b 4A8B7C0B 		mov	rdi, QWORD PTR 16[rbx+r9]	# *_404, *_404
 4244      10
 4245 1a10 C46289F7 		shlx	r9, rdi, r14	# tmp604, *_404, shift_flipped
 4245      CF
 4246              	.LVL197:
 4247              	# sieve_extend.c:658:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 658:sieve_extend.c ****         copy_word += 2;
 4248              		.loc 1 658 52 view .LVU1427
 4249 1a15 4D09CA   		or	r10, r9	# tmp607, tmp604
 4250 1a18 4C8954D3 		mov	QWORD PTR 8[rbx+rdx*8], r10	# *_410, tmp607
 4250      08
 659:sieve_extend.c ****         source_word += 2;
 4251              		.loc 1 659 9 is_stmt 1 view .LVU1428
 660:sieve_extend.c ****         distance += 2;
 4252              		.loc 1 660 9 view .LVU1429
 4253              	.LVL198:
 661:sieve_extend.c ****     }
 4254              		.loc 1 661 9 view .LVU1430
 4255              	# sieve_extend.c:661:         distance += 2;
 661:sieve_extend.c ****     }
 4256              		.loc 1 661 18 is_stmt 0 view .LVU1431
 4257 1a1d 4D8D5308 		lea	r10, 8[r11]	# distance,
 4258              	.LVL199:
 661:sieve_extend.c ****     }
 4259              		.loc 1 661 18 view .LVU1432
 4260              	.LBE307:
 653:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 4261              		.loc 1 653 11 is_stmt 1 view .LVU1433
 4262              	.L380:
 653:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 4263              		.loc 1 653 11 is_stmt 0 view .LVU1434
 4264 1a21 4C015424 		add	QWORD PTR 88[rsp], r10	# %sfp, distance
 4264      58
 4265              	.LVL200:
 653:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 4266              		.loc 1 653 11 view .LVU1435
 4267 1a26 4C01D0   		add	rax, r10	# ivtmp.319, distance
 4268              	.L375:
 663:sieve_extend.c **** }
 4269              		.loc 1 663 5 is_stmt 1 view .LVU1436
 4270              	.LVL201:
 663:sieve_extend.c **** }
 4271              		.loc 1 663 5 is_stmt 0 view .LVU1437
 4272              	.LBE319:
 4273              	.LBE324:
 810:sieve_extend.c ****     copy_word += distance;
 4274              		.loc 1 810 5 is_stmt 1 view .LVU1438
 811:sieve_extend.c **** 
 4275              		.loc 1 811 5 view .LVU1439
 813:sieve_extend.c **** 
 4276              		.loc 1 813 6 view .LVU1440
 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4277              		.loc 1 816 11 view .LVU1441
 4278              	# sieve_extend.c:816:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
GAS LISTING /tmp/cctyCFAS.s 			page 127


 4279              		.loc 1 816 5 is_stmt 0 view .LVU1442
 4280 1a29 4C8B5C24 		mov	r11, QWORD PTR 56[rsp]	# aligned_copy_word, %sfp
 4280      38
 4281 1a2e 4939C3   		cmp	r11, rax	# aligned_copy_word, ivtmp.319
 4282 1a31 0F828503 		jb	.L381	#,
 4282      0000
 4283 1a37 488B7C24 		mov	rdi, QWORD PTR 88[rsp]	# _183, %sfp
 4283      58
 4284 1a3c 488D34C5 		lea	rsi, 0[0+rax*8]	# _33,
 4284      00000000 
 4285 1a44 488D0CFD 		lea	rcx, 0[0+rdi*8]	# _2,
 4285      00000000 
 4286 1a4c 4C8D4E20 		lea	r9, 32[rsi]	# tmp619,
 4287 1a50 4C39C9   		cmp	rcx, r9	# _2, tmp619
 4288 1a53 488D14FD 		lea	rdx, 40[0+rdi*8]	# _72,
 4288      28000000 
 4289 1a5b 410F9DC2 		setge	r10b	#, tmp621
 4290 1a5f 4839D6   		cmp	rsi, rdx	# _33, _72
 4291 1a62 410F9DC0 		setge	r8b	#, tmp623
 4292 1a66 4508C2   		or	r10b, r8b	# tmp621, tmp623
 4293 1a69 0F84B108 		je	.L382	#,
 4293      0000
 4294 1a6f 4C89DF   		mov	rdi, r11	# tmp625, aligned_copy_word
 4295 1a72 4829C7   		sub	rdi, rax	# tmp625, ivtmp.319
 4296 1a75 4883FF03 		cmp	rdi, 3	# tmp625,
 4297 1a79 0F86A108 		jbe	.L382	#,
 4297      0000
 4298 1a7f 4D8D5301 		lea	r10, 1[r11]	# ivtmp.319,
 4299 1a83 4D89D1   		mov	r9, r10	# niters.259, ivtmp.319
 4300 1a86 4929C1   		sub	r9, rax	# niters.259, ivtmp.319
 4301 1a89 4D89C8   		mov	r8, r9	# bnd.260, niters.259
 4302 1a8c 49C1E802 		shr	r8, 2	# bnd.260,
 4303 1a90 49C1E005 		sal	r8, 5	# _606,
 4304 1a94 C441796E 		vmovd	xmm10, r12d	# _12, _12
 4304      D4
 4305 1a99 4D8D60E0 		lea	r12, -32[r8]	# tmp715,
 4306 1a9d 49C1EC05 		shr	r12, 5	# tmp713,
 4307 1aa1 49FFC4   		inc	r12	# tmp716
 4308 1aa4 4801D9   		add	rcx, rbx	# vectp.265, bitarray
 4309 1aa7 488D7C13 		lea	rdi, -32[rbx+rdx]	# vectp.269,
 4309      E0
 4310 1aac 4801DE   		add	rsi, rbx	# vectp.274, bitarray
 4311 1aaf 4531DB   		xor	r11d, r11d	# ivtmp.335
 4312 1ab2 C441796E 		vmovd	xmm11, r13d	# _18, _18
 4312      DD
 4313 1ab7 4183E407 		and	r12d, 7	# tmp717,
 4314 1abb 0F843401 		je	.L383	#,
 4314      0000
 4315 1ac1 4983FC01 		cmp	r12, 1	# tmp717,
 4316 1ac5 0F84FC00 		je	.L523	#,
 4316      0000
 4317 1acb 4983FC02 		cmp	r12, 2	# tmp717,
 4318 1acf 0F84CE00 		je	.L524	#,
 4318      0000
 4319 1ad5 4983FC03 		cmp	r12, 3	# tmp717,
 4320 1ad9 0F849F00 		je	.L525	#,
 4320      0000
GAS LISTING /tmp/cctyCFAS.s 			page 128


 4321 1adf 4983FC04 		cmp	r12, 4	# tmp717,
 4322 1ae3 7474     		je	.L526	#,
 4323 1ae5 4983FC05 		cmp	r12, 5	# tmp717,
 4324 1ae9 744A     		je	.L527	#,
 4325 1aeb 4983FC06 		cmp	r12, 6	# tmp717,
 4326 1aef 7420     		je	.L528	#,
 817:sieve_extend.c ****     }
 4327              		.loc 1 817 9 is_stmt 1 view .LVU1443
 4328              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4329              		.loc 1 817 56 is_stmt 0 view .LVU1444
 4330 1af1 C5FE6F19 		vmovdqu	ymm3, YMMWORD PTR [rcx]	# tmp1298, MEM[base: vectp.265_247, index: ivtmp.335_604, offset: 
 4331              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4332              		.loc 1 817 94 view .LVU1445
 4333 1af5 C5FE6F27 		vmovdqu	ymm4, YMMWORD PTR [rdi]	# tmp1299, MEM[base: vectp.269_253, index: ivtmp.335_604, offset: 
 4334              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4335              		.loc 1 817 56 view .LVU1446
 4336 1af9 C4C165D3 		vpsrlq	ymm2, ymm3, xmm10	# vect__38.267, tmp1298, _12
 4336      D2
 4337              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4338              		.loc 1 817 94 view .LVU1447
 4339 1afe C4C15DF3 		vpsllq	ymm6, ymm4, xmm11	# vect__43.271, tmp1299, _18
 4339      F3
 4340 1b03 41BB2000 		mov	r11d, 32	# ivtmp.335,
 4340      0000
 4341              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4342              		.loc 1 817 66 view .LVU1448
 4343 1b09 C56DEBE6 		vpor	ymm12, ymm2, ymm6	# vect__46.272, vect__38.267, vect__43.271
 4344              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4345              		.loc 1 817 29 view .LVU1449
 4346 1b0d C57E7F26 		vmovdqu	YMMWORD PTR [rsi], ymm12	# MEM[base: vectp.274_261, index: ivtmp.335_604, offset: 0B], vec
 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4347              		.loc 1 816 43 is_stmt 1 view .LVU1450
 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4348              		.loc 1 816 11 view .LVU1451
 4349              	.L528:
 817:sieve_extend.c ****     }
 4350              		.loc 1 817 9 view .LVU1452
 4351              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4352              		.loc 1 817 56 is_stmt 0 view .LVU1453
 4353 1b11 C4217E6F 		vmovdqu	ymm13, YMMWORD PTR [rcx+r11]	# tmp1300, MEM[base: vectp.265_247, index: ivtmp.335_604, off
 4353      2C19
 4354              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4355              		.loc 1 817 94 view .LVU1454
 4356 1b17 C4217E6F 		vmovdqu	ymm15, YMMWORD PTR [rdi+r11]	# tmp1301, MEM[base: vectp.269_253, index: ivtmp.335_604, off
 4356      3C1F
 4357              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4358              		.loc 1 817 56 view .LVU1455
 4359 1b1d C44115D3 		vpsrlq	ymm14, ymm13, xmm10	# vect__38.267, tmp1300, _12
GAS LISTING /tmp/cctyCFAS.s 			page 129


 4359      F2
 4360              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4361              		.loc 1 817 94 view .LVU1456
 4362 1b22 C4C105F3 		vpsllq	ymm1, ymm15, xmm11	# vect__43.271, tmp1301, _18
 4362      CB
 4363              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4364              		.loc 1 817 66 view .LVU1457
 4365 1b27 C50DEBC1 		vpor	ymm8, ymm14, ymm1	# vect__46.272, vect__38.267, vect__43.271
 4366              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4367              		.loc 1 817 29 view .LVU1458
 4368 1b2b C4217E7F 		vmovdqu	YMMWORD PTR [rsi+r11], ymm8	# MEM[base: vectp.274_261, index: ivtmp.335_604, offset: 0B], 
 4368      041E
 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4369              		.loc 1 816 43 is_stmt 1 view .LVU1459
 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4370              		.loc 1 816 11 view .LVU1460
 4371 1b31 4983C320 		add	r11, 32	# ivtmp.335,
 4372              	.L527:
 817:sieve_extend.c ****     }
 4373              		.loc 1 817 9 view .LVU1461
 4374              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4375              		.loc 1 817 56 is_stmt 0 view .LVU1462
 4376 1b35 C4A17E6F 		vmovdqu	ymm0, YMMWORD PTR [rcx+r11]	# tmp1302, MEM[base: vectp.265_247, index: ivtmp.335_604, offs
 4376      0419
 4377              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4378              		.loc 1 817 94 view .LVU1463
 4379 1b3b C4217E6F 		vmovdqu	ymm9, YMMWORD PTR [rdi+r11]	# tmp1303, MEM[base: vectp.269_253, index: ivtmp.335_604, offs
 4379      0C1F
 4380              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4381              		.loc 1 817 56 view .LVU1464
 4382 1b41 C4C17DD3 		vpsrlq	ymm5, ymm0, xmm10	# vect__38.267, tmp1302, _12
 4382      EA
 4383              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4384              		.loc 1 817 94 view .LVU1465
 4385 1b46 C4C135F3 		vpsllq	ymm7, ymm9, xmm11	# vect__43.271, tmp1303, _18
 4385      FB
 4386              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4387              		.loc 1 817 66 view .LVU1466
 4388 1b4b C5D5EBDF 		vpor	ymm3, ymm5, ymm7	# vect__46.272, vect__38.267, vect__43.271
 4389              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4390              		.loc 1 817 29 view .LVU1467
 4391 1b4f C4A17E7F 		vmovdqu	YMMWORD PTR [rsi+r11], ymm3	# MEM[base: vectp.274_261, index: ivtmp.335_604, offset: 0B], 
 4391      1C1E
 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4392              		.loc 1 816 43 is_stmt 1 view .LVU1468
 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4393              		.loc 1 816 11 view .LVU1469
 4394 1b55 4983C320 		add	r11, 32	# ivtmp.335,
GAS LISTING /tmp/cctyCFAS.s 			page 130


 4395              	.L526:
 817:sieve_extend.c ****     }
 4396              		.loc 1 817 9 view .LVU1470
 4397              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4398              		.loc 1 817 56 is_stmt 0 view .LVU1471
 4399 1b59 C4A17E6F 		vmovdqu	ymm2, YMMWORD PTR [rcx+r11]	# tmp1304, MEM[base: vectp.265_247, index: ivtmp.335_604, offs
 4399      1419
 4400              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4401              		.loc 1 817 94 view .LVU1472
 4402 1b5f C4A17E6F 		vmovdqu	ymm6, YMMWORD PTR [rdi+r11]	# tmp1305, MEM[base: vectp.269_253, index: ivtmp.335_604, offs
 4402      341F
 4403              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4404              		.loc 1 817 56 view .LVU1473
 4405 1b65 C4C16DD3 		vpsrlq	ymm4, ymm2, xmm10	# vect__38.267, tmp1304, _12
 4405      E2
 4406              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4407              		.loc 1 817 94 view .LVU1474
 4408 1b6a C4414DF3 		vpsllq	ymm12, ymm6, xmm11	# vect__43.271, tmp1305, _18
 4408      E3
 4409              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4410              		.loc 1 817 66 view .LVU1475
 4411 1b6f C4415DEB 		vpor	ymm13, ymm4, ymm12	# vect__46.272, vect__38.267, vect__43.271
 4411      EC
 4412              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4413              		.loc 1 817 29 view .LVU1476
 4414 1b74 C4217E7F 		vmovdqu	YMMWORD PTR [rsi+r11], ymm13	# MEM[base: vectp.274_261, index: ivtmp.335_604, offset: 0B],
 4414      2C1E
 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4415              		.loc 1 816 43 is_stmt 1 view .LVU1477
 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4416              		.loc 1 816 11 view .LVU1478
 4417 1b7a 4983C320 		add	r11, 32	# ivtmp.335,
 4418              	.L525:
 817:sieve_extend.c ****     }
 4419              		.loc 1 817 9 view .LVU1479
 4420              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4421              		.loc 1 817 56 is_stmt 0 view .LVU1480
 4422 1b7e C4217E6F 		vmovdqu	ymm14, YMMWORD PTR [rcx+r11]	# tmp1306, MEM[base: vectp.265_247, index: ivtmp.335_604, off
 4422      3419
 4423              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4424              		.loc 1 817 94 view .LVU1481
 4425 1b84 C4A17E6F 		vmovdqu	ymm1, YMMWORD PTR [rdi+r11]	# tmp1307, MEM[base: vectp.269_253, index: ivtmp.335_604, offs
 4425      0C1F
 4426              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4427              		.loc 1 817 56 view .LVU1482
 4428 1b8a C4410DD3 		vpsrlq	ymm15, ymm14, xmm10	# vect__38.267, tmp1306, _12
 4428      FA
 4429              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
GAS LISTING /tmp/cctyCFAS.s 			page 131


 817:sieve_extend.c ****     }
 4430              		.loc 1 817 94 view .LVU1483
 4431 1b8f C44175F3 		vpsllq	ymm8, ymm1, xmm11	# vect__43.271, tmp1307, _18
 4431      C3
 4432              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4433              		.loc 1 817 66 view .LVU1484
 4434 1b94 C4C105EB 		vpor	ymm0, ymm15, ymm8	# vect__46.272, vect__38.267, vect__43.271
 4434      C0
 4435              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4436              		.loc 1 817 29 view .LVU1485
 4437 1b99 C4A17E7F 		vmovdqu	YMMWORD PTR [rsi+r11], ymm0	# MEM[base: vectp.274_261, index: ivtmp.335_604, offset: 0B], 
 4437      041E
 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4438              		.loc 1 816 43 is_stmt 1 view .LVU1486
 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4439              		.loc 1 816 11 view .LVU1487
 4440 1b9f 4983C320 		add	r11, 32	# ivtmp.335,
 4441              	.L524:
 817:sieve_extend.c ****     }
 4442              		.loc 1 817 9 view .LVU1488
 4443              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4444              		.loc 1 817 56 is_stmt 0 view .LVU1489
 4445 1ba3 C4A17E6F 		vmovdqu	ymm5, YMMWORD PTR [rcx+r11]	# tmp1308, MEM[base: vectp.265_247, index: ivtmp.335_604, offs
 4445      2C19
 4446              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4447              		.loc 1 817 94 view .LVU1490
 4448 1ba9 C4A17E6F 		vmovdqu	ymm7, YMMWORD PTR [rdi+r11]	# tmp1309, MEM[base: vectp.269_253, index: ivtmp.335_604, offs
 4448      3C1F
 4449              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4450              		.loc 1 817 56 view .LVU1491
 4451 1baf C44155D3 		vpsrlq	ymm9, ymm5, xmm10	# vect__38.267, tmp1308, _12
 4451      CA
 4452              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4453              		.loc 1 817 94 view .LVU1492
 4454 1bb4 C4C145F3 		vpsllq	ymm3, ymm7, xmm11	# vect__43.271, tmp1309, _18
 4454      DB
 4455              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4456              		.loc 1 817 66 view .LVU1493
 4457 1bb9 C5B5EBD3 		vpor	ymm2, ymm9, ymm3	# vect__46.272, vect__38.267, vect__43.271
 4458              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4459              		.loc 1 817 29 view .LVU1494
 4460 1bbd C4A17E7F 		vmovdqu	YMMWORD PTR [rsi+r11], ymm2	# MEM[base: vectp.274_261, index: ivtmp.335_604, offset: 0B], 
 4460      141E
 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4461              		.loc 1 816 43 is_stmt 1 view .LVU1495
 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4462              		.loc 1 816 11 view .LVU1496
 4463 1bc3 4983C320 		add	r11, 32	# ivtmp.335,
 4464              	.L523:
GAS LISTING /tmp/cctyCFAS.s 			page 132


 817:sieve_extend.c ****     }
 4465              		.loc 1 817 9 view .LVU1497
 4466              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4467              		.loc 1 817 56 is_stmt 0 view .LVU1498
 4468 1bc7 C4A17E6F 		vmovdqu	ymm4, YMMWORD PTR [rcx+r11]	# tmp1310, MEM[base: vectp.265_247, index: ivtmp.335_604, offs
 4468      2419
 4469              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4470              		.loc 1 817 94 view .LVU1499
 4471 1bcd C4217E6F 		vmovdqu	ymm12, YMMWORD PTR [rdi+r11]	# tmp1311, MEM[base: vectp.269_253, index: ivtmp.335_604, off
 4471      241F
 4472              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4473              		.loc 1 817 56 view .LVU1500
 4474 1bd3 C4C15DD3 		vpsrlq	ymm6, ymm4, xmm10	# vect__38.267, tmp1310, _12
 4474      F2
 4475              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4476              		.loc 1 817 94 view .LVU1501
 4477 1bd8 C4411DF3 		vpsllq	ymm13, ymm12, xmm11	# vect__43.271, tmp1311, _18
 4477      EB
 4478              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4479              		.loc 1 817 66 view .LVU1502
 4480 1bdd C4414DEB 		vpor	ymm14, ymm6, ymm13	# vect__46.272, vect__38.267, vect__43.271
 4480      F5
 4481              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4482              		.loc 1 817 29 view .LVU1503
 4483 1be2 C4217E7F 		vmovdqu	YMMWORD PTR [rsi+r11], ymm14	# MEM[base: vectp.274_261, index: ivtmp.335_604, offset: 0B],
 4483      341E
 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4484              		.loc 1 816 43 is_stmt 1 view .LVU1504
 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4485              		.loc 1 816 11 view .LVU1505
 4486 1be8 4983C320 		add	r11, 32	# ivtmp.335,
 4487 1bec 4D39C3   		cmp	r11, r8	# ivtmp.335, _606
 4488 1bef 0F844C01 		je	.L602	#,
 4488      0000
 4489              	.L383:
 817:sieve_extend.c ****     }
 4490              		.loc 1 817 9 discriminator 2 view .LVU1506
 4491              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4492              		.loc 1 817 56 is_stmt 0 discriminator 2 view .LVU1507
 4493 1bf5 C4217E6F 		vmovdqu	ymm15, YMMWORD PTR [rcx+r11]	# tmp1241, MEM[base: vectp.265_247, index: ivtmp.335_604, off
 4493      3C19
 4494              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4495              		.loc 1 817 94 discriminator 2 view .LVU1508
 4496 1bfb C4217E6F 		vmovdqu	ymm8, YMMWORD PTR [rdi+r11]	# tmp1242, MEM[base: vectp.269_253, index: ivtmp.335_604, offs
 4496      041F
 4497              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4498              		.loc 1 817 56 discriminator 2 view .LVU1509
 4499 1c01 C4C105D3 		vpsrlq	ymm1, ymm15, xmm10	# vect__38.267, tmp1241, _12
GAS LISTING /tmp/cctyCFAS.s 			page 133


 4499      CA
 4500              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4501              		.loc 1 817 94 discriminator 2 view .LVU1510
 4502 1c06 C4C13DF3 		vpsllq	ymm0, ymm8, xmm11	# vect__43.271, tmp1242, _18
 4502      C3
 4503              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4504              		.loc 1 817 66 discriminator 2 view .LVU1511
 4505 1c0b C5F5EBE8 		vpor	ymm5, ymm1, ymm0	# vect__46.272, vect__38.267, vect__43.271
 4506              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4507              		.loc 1 817 29 discriminator 2 view .LVU1512
 4508 1c0f C4A17E7F 		vmovdqu	YMMWORD PTR [rsi+r11], ymm5	# MEM[base: vectp.274_261, index: ivtmp.335_604, offset: 0B], 
 4508      2C1E
 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4509              		.loc 1 816 43 is_stmt 1 discriminator 2 view .LVU1513
 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4510              		.loc 1 816 11 discriminator 2 view .LVU1514
 817:sieve_extend.c ****     }
 4511              		.loc 1 817 9 discriminator 2 view .LVU1515
 4512              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4513              		.loc 1 817 56 is_stmt 0 discriminator 2 view .LVU1516
 4514 1c15 C4217E6F 		vmovdqu	ymm9, YMMWORD PTR 32[rcx+r11]	# tmp1243, MEM[base: vectp.265_247, index: ivtmp.335_604, of
 4514      4C1920
 4515              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4516              		.loc 1 817 94 discriminator 2 view .LVU1517
 4517 1c1c C4A17E6F 		vmovdqu	ymm7, YMMWORD PTR 32[rdi+r11]	# tmp1244, MEM[base: vectp.269_253, index: ivtmp.335_604, of
 4517      7C1F20
 4518              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4519              		.loc 1 817 56 discriminator 2 view .LVU1518
 4520 1c23 C4C135D3 		vpsrlq	ymm2, ymm9, xmm10	# vect__38.267, tmp1243, _12
 4520      D2
 4521              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4522              		.loc 1 817 94 discriminator 2 view .LVU1519
 4523 1c28 C4C145F3 		vpsllq	ymm3, ymm7, xmm11	# vect__43.271, tmp1244, _18
 4523      DB
 4524              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4525              		.loc 1 817 66 discriminator 2 view .LVU1520
 4526 1c2d C5EDEBE3 		vpor	ymm4, ymm2, ymm3	# vect__46.272, vect__38.267, vect__43.271
 4527              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4528              		.loc 1 817 29 discriminator 2 view .LVU1521
 4529 1c31 C4A17E7F 		vmovdqu	YMMWORD PTR 32[rsi+r11], ymm4	# MEM[base: vectp.274_261, index: ivtmp.335_604, offset: 0B]
 4529      641E20
 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4530              		.loc 1 816 43 is_stmt 1 discriminator 2 view .LVU1522
 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4531              		.loc 1 816 11 discriminator 2 view .LVU1523
 817:sieve_extend.c ****     }
 4532              		.loc 1 817 9 discriminator 2 view .LVU1524
 4533              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
GAS LISTING /tmp/cctyCFAS.s 			page 134


 817:sieve_extend.c ****     }
 4534              		.loc 1 817 56 is_stmt 0 discriminator 2 view .LVU1525
 4535 1c38 C4A17E6F 		vmovdqu	ymm6, YMMWORD PTR 64[rcx+r11]	# tmp1245, MEM[base: vectp.265_247, index: ivtmp.335_604, of
 4535      741940
 4536              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4537              		.loc 1 817 94 discriminator 2 view .LVU1526
 4538 1c3f C4217E6F 		vmovdqu	ymm13, YMMWORD PTR 64[rdi+r11]	# tmp1246, MEM[base: vectp.269_253, index: ivtmp.335_604, o
 4538      6C1F40
 4539              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4540              		.loc 1 817 56 discriminator 2 view .LVU1527
 4541 1c46 C4414DD3 		vpsrlq	ymm12, ymm6, xmm10	# vect__38.267, tmp1245, _12
 4541      E2
 4542              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4543              		.loc 1 817 94 discriminator 2 view .LVU1528
 4544 1c4b C44115F3 		vpsllq	ymm14, ymm13, xmm11	# vect__43.271, tmp1246, _18
 4544      F3
 4545              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4546              		.loc 1 817 66 discriminator 2 view .LVU1529
 4547 1c50 C4411DEB 		vpor	ymm15, ymm12, ymm14	# vect__46.272, vect__38.267, vect__43.271
 4547      FE
 4548              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4549              		.loc 1 817 29 discriminator 2 view .LVU1530
 4550 1c55 C4217E7F 		vmovdqu	YMMWORD PTR 64[rsi+r11], ymm15	# MEM[base: vectp.274_261, index: ivtmp.335_604, offset: 0B
 4550      7C1E40
 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4551              		.loc 1 816 43 is_stmt 1 discriminator 2 view .LVU1531
 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4552              		.loc 1 816 11 discriminator 2 view .LVU1532
 817:sieve_extend.c ****     }
 4553              		.loc 1 817 9 discriminator 2 view .LVU1533
 4554              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4555              		.loc 1 817 56 is_stmt 0 discriminator 2 view .LVU1534
 4556 1c5c C4A17E6F 		vmovdqu	ymm1, YMMWORD PTR 96[rcx+r11]	# tmp1247, MEM[base: vectp.265_247, index: ivtmp.335_604, of
 4556      4C1960
 4557              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4558              		.loc 1 817 94 discriminator 2 view .LVU1535
 4559 1c63 C4A17E6F 		vmovdqu	ymm0, YMMWORD PTR 96[rdi+r11]	# tmp1248, MEM[base: vectp.269_253, index: ivtmp.335_604, of
 4559      441F60
 4560              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4561              		.loc 1 817 56 discriminator 2 view .LVU1536
 4562 1c6a C44175D3 		vpsrlq	ymm8, ymm1, xmm10	# vect__38.267, tmp1247, _12
 4562      C2
 4563              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4564              		.loc 1 817 94 discriminator 2 view .LVU1537
 4565 1c6f C4C17DF3 		vpsllq	ymm5, ymm0, xmm11	# vect__43.271, tmp1248, _18
 4565      EB
 4566              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
GAS LISTING /tmp/cctyCFAS.s 			page 135


 4567              		.loc 1 817 66 discriminator 2 view .LVU1538
 4568 1c74 C53DEBCD 		vpor	ymm9, ymm8, ymm5	# vect__46.272, vect__38.267, vect__43.271
 4569              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4570              		.loc 1 817 29 discriminator 2 view .LVU1539
 4571 1c78 C4217E7F 		vmovdqu	YMMWORD PTR 96[rsi+r11], ymm9	# MEM[base: vectp.274_261, index: ivtmp.335_604, offset: 0B]
 4571      4C1E60
 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4572              		.loc 1 816 43 is_stmt 1 discriminator 2 view .LVU1540
 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4573              		.loc 1 816 11 discriminator 2 view .LVU1541
 817:sieve_extend.c ****     }
 4574              		.loc 1 817 9 discriminator 2 view .LVU1542
 4575              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4576              		.loc 1 817 56 is_stmt 0 discriminator 2 view .LVU1543
 4577 1c7f C4A17E6F 		vmovdqu	ymm2, YMMWORD PTR 128[rcx+r11]	# tmp1249, MEM[base: vectp.265_247, index: ivtmp.335_604, o
 4577      94198000 
 4577      0000
 4578              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4579              		.loc 1 817 94 discriminator 2 view .LVU1544
 4580 1c89 C4A17E6F 		vmovdqu	ymm7, YMMWORD PTR 128[rdi+r11]	# tmp1250, MEM[base: vectp.269_253, index: ivtmp.335_604, o
 4580      BC1F8000 
 4580      0000
 4581              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4582              		.loc 1 817 56 discriminator 2 view .LVU1545
 4583 1c93 C4C16DD3 		vpsrlq	ymm4, ymm2, xmm10	# vect__38.267, tmp1249, _12
 4583      E2
 4584              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4585              		.loc 1 817 94 discriminator 2 view .LVU1546
 4586 1c98 C4C145F3 		vpsllq	ymm3, ymm7, xmm11	# vect__43.271, tmp1250, _18
 4586      DB
 4587              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4588              		.loc 1 817 66 discriminator 2 view .LVU1547
 4589 1c9d C5DDEBF3 		vpor	ymm6, ymm4, ymm3	# vect__46.272, vect__38.267, vect__43.271
 4590              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4591              		.loc 1 817 29 discriminator 2 view .LVU1548
 4592 1ca1 C4A17E7F 		vmovdqu	YMMWORD PTR 128[rsi+r11], ymm6	# MEM[base: vectp.274_261, index: ivtmp.335_604, offset: 0B
 4592      B41E8000 
 4592      0000
 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4593              		.loc 1 816 43 is_stmt 1 discriminator 2 view .LVU1549
 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4594              		.loc 1 816 11 discriminator 2 view .LVU1550
 817:sieve_extend.c ****     }
 4595              		.loc 1 817 9 discriminator 2 view .LVU1551
 4596              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4597              		.loc 1 817 56 is_stmt 0 discriminator 2 view .LVU1552
 4598 1cab C4217E6F 		vmovdqu	ymm12, YMMWORD PTR 160[rcx+r11]	# tmp1251, MEM[base: vectp.265_247, index: ivtmp.335_604, 
 4598      A419A000 
 4598      0000
GAS LISTING /tmp/cctyCFAS.s 			page 136


 4599              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4600              		.loc 1 817 94 discriminator 2 view .LVU1553
 4601 1cb5 C4217E6F 		vmovdqu	ymm14, YMMWORD PTR 160[rdi+r11]	# tmp1252, MEM[base: vectp.269_253, index: ivtmp.335_604, 
 4601      B41FA000 
 4601      0000
 4602              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4603              		.loc 1 817 56 discriminator 2 view .LVU1554
 4604 1cbf C4411DD3 		vpsrlq	ymm13, ymm12, xmm10	# vect__38.267, tmp1251, _12
 4604      EA
 4605              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4606              		.loc 1 817 94 discriminator 2 view .LVU1555
 4607 1cc4 C4410DF3 		vpsllq	ymm15, ymm14, xmm11	# vect__43.271, tmp1252, _18
 4607      FB
 4608              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4609              		.loc 1 817 66 discriminator 2 view .LVU1556
 4610 1cc9 C4C115EB 		vpor	ymm1, ymm13, ymm15	# vect__46.272, vect__38.267, vect__43.271
 4610      CF
 4611              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4612              		.loc 1 817 29 discriminator 2 view .LVU1557
 4613 1cce C4A17E7F 		vmovdqu	YMMWORD PTR 160[rsi+r11], ymm1	# MEM[base: vectp.274_261, index: ivtmp.335_604, offset: 0B
 4613      8C1EA000 
 4613      0000
 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4614              		.loc 1 816 43 is_stmt 1 discriminator 2 view .LVU1558
 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4615              		.loc 1 816 11 discriminator 2 view .LVU1559
 817:sieve_extend.c ****     }
 4616              		.loc 1 817 9 discriminator 2 view .LVU1560
 4617              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4618              		.loc 1 817 56 is_stmt 0 discriminator 2 view .LVU1561
 4619 1cd8 C4217E6F 		vmovdqu	ymm8, YMMWORD PTR 192[rcx+r11]	# tmp1253, MEM[base: vectp.265_247, index: ivtmp.335_604, o
 4619      8419C000 
 4619      0000
 4620              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4621              		.loc 1 817 94 discriminator 2 view .LVU1562
 4622 1ce2 C4A17E6F 		vmovdqu	ymm5, YMMWORD PTR 192[rdi+r11]	# tmp1254, MEM[base: vectp.269_253, index: ivtmp.335_604, o
 4622      AC1FC000 
 4622      0000
 4623              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4624              		.loc 1 817 56 discriminator 2 view .LVU1563
 4625 1cec C4C13DD3 		vpsrlq	ymm0, ymm8, xmm10	# vect__38.267, tmp1253, _12
 4625      C2
 4626              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4627              		.loc 1 817 94 discriminator 2 view .LVU1564
 4628 1cf1 C44155F3 		vpsllq	ymm9, ymm5, xmm11	# vect__43.271, tmp1254, _18
 4628      CB
 4629              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
GAS LISTING /tmp/cctyCFAS.s 			page 137


 4630              		.loc 1 817 66 discriminator 2 view .LVU1565
 4631 1cf6 C4C17DEB 		vpor	ymm2, ymm0, ymm9	# vect__46.272, vect__38.267, vect__43.271
 4631      D1
 4632              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4633              		.loc 1 817 29 discriminator 2 view .LVU1566
 4634 1cfb C4A17E7F 		vmovdqu	YMMWORD PTR 192[rsi+r11], ymm2	# MEM[base: vectp.274_261, index: ivtmp.335_604, offset: 0B
 4634      941EC000 
 4634      0000
 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4635              		.loc 1 816 43 is_stmt 1 discriminator 2 view .LVU1567
 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4636              		.loc 1 816 11 discriminator 2 view .LVU1568
 817:sieve_extend.c ****     }
 4637              		.loc 1 817 9 discriminator 2 view .LVU1569
 4638              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4639              		.loc 1 817 56 is_stmt 0 discriminator 2 view .LVU1570
 4640 1d05 C4A17E6F 		vmovdqu	ymm4, YMMWORD PTR 224[rcx+r11]	# tmp1255, MEM[base: vectp.265_247, index: ivtmp.335_604, o
 4640      A419E000 
 4640      0000
 4641              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4642              		.loc 1 817 94 discriminator 2 view .LVU1571
 4643 1d0f C4A17E6F 		vmovdqu	ymm7, YMMWORD PTR 224[rdi+r11]	# tmp1256, MEM[base: vectp.269_253, index: ivtmp.335_604, o
 4643      BC1FE000 
 4643      0000
 4644              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4645              		.loc 1 817 56 discriminator 2 view .LVU1572
 4646 1d19 C4C15DD3 		vpsrlq	ymm6, ymm4, xmm10	# vect__38.267, tmp1255, _12
 4646      F2
 4647              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4648              		.loc 1 817 94 discriminator 2 view .LVU1573
 4649 1d1e C4C145F3 		vpsllq	ymm3, ymm7, xmm11	# vect__43.271, tmp1256, _18
 4649      DB
 4650              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4651              		.loc 1 817 66 discriminator 2 view .LVU1574
 4652 1d23 C54DEBE3 		vpor	ymm12, ymm6, ymm3	# vect__46.272, vect__38.267, vect__43.271
 4653              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4654              		.loc 1 817 29 discriminator 2 view .LVU1575
 4655 1d27 C4217E7F 		vmovdqu	YMMWORD PTR 224[rsi+r11], ymm12	# MEM[base: vectp.274_261, index: ivtmp.335_604, offset: 0
 4655      A41EE000 
 4655      0000
 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4656              		.loc 1 816 43 is_stmt 1 discriminator 2 view .LVU1576
 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4657              		.loc 1 816 11 discriminator 2 view .LVU1577
 4658 1d31 4981C300 		add	r11, 256	# ivtmp.335,
 4658      010000
 4659 1d38 4D39C3   		cmp	r11, r8	# ivtmp.335, _606
 4660 1d3b 0F85B4FE 		jne	.L383	#,
 4660      FFFF
 4661              	.L602:
GAS LISTING /tmp/cctyCFAS.s 			page 138


 4662 1d41 488B5424 		mov	rdx, QWORD PTR 88[rsp]	# _183, %sfp
 4662      58
 4663 1d46 4D89CD   		mov	r13, r9	# niters_vector_mult_vf.261, niters.259
 4664 1d49 4983E5FC 		and	r13, -4	# niters_vector_mult_vf.261,
 4665 1d4d 4C01EA   		add	rdx, r13	# _183, niters_vector_mult_vf.261
 4666 1d50 4C01E8   		add	rax, r13	# tmp.263, niters_vector_mult_vf.261
 4667 1d53 4D39E9   		cmp	r9, r13	# niters.259, niters_vector_mult_vf.261
 4668 1d56 7461     		je	.L386	#,
 4669              	.LVL202:
 817:sieve_extend.c ****     }
 4670              		.loc 1 817 9 view .LVU1578
 4671              	# sieve_extend.c:816:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4672              		.loc 1 816 5 is_stmt 0 view .LVU1579
 4673 1d58 4C8B4424 		mov	r8, QWORD PTR 56[rsp]	# aligned_copy_word, %sfp
 4673      38
 4674              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4675              		.loc 1 817 94 view .LVU1580
 4676 1d5d C4E289F7 		shlx	rcx, QWORD PTR 8[rbx+rdx*8], r14	# tmp638, *_484, shift_flipped
 4676      4CD308
 4677              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4678              		.loc 1 817 56 view .LVU1581
 4679 1d64 C4E283F7 		shrx	rsi, QWORD PTR [rbx+rdx*8], r15	# tmp640, *_110, shift
 4679      34D3
 4680              	# sieve_extend.c:816:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4681              		.loc 1 816 52 view .LVU1582
 4682 1d6a 488D7801 		lea	rdi, 1[rax]	# copy_word,
 4683              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4684              		.loc 1 817 66 view .LVU1583
 4685 1d6e 4809F1   		or	rcx, rsi	# tmp642, tmp640
 4686 1d71 48890CC3 		mov	QWORD PTR [rbx+rax*8], rcx	# *_487, tmp642
 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4687              		.loc 1 816 43 is_stmt 1 view .LVU1584
 4688              	.LVL203:
 4689              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4690              		.loc 1 817 77 is_stmt 0 view .LVU1585
 4691 1d75 4C8D4A01 		lea	r9, 1[rdx]	# _113,
 4692              	.LVL204:
 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4693              		.loc 1 816 11 is_stmt 1 view .LVU1586
 4694              	# sieve_extend.c:816:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4695              		.loc 1 816 5 is_stmt 0 view .LVU1587
 4696 1d79 4939F8   		cmp	r8, rdi	# aligned_copy_word, copy_word
 4697 1d7c 723B     		jb	.L386	#,
 817:sieve_extend.c ****     }
 4698              		.loc 1 817 9 is_stmt 1 view .LVU1588
 4699              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4700              		.loc 1 817 56 is_stmt 0 view .LVU1589
 4701 1d7e 4E8B2CCB 		mov	r13, QWORD PTR [rbx+r9*8]	# *_38, *_38
 4702              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
GAS LISTING /tmp/cctyCFAS.s 			page 139


 817:sieve_extend.c ****     }
 4703              		.loc 1 817 94 view .LVU1590
 4704 1d82 C42289F7 		shlx	r11, QWORD PTR 8[rbx+r9*8], r14	# tmp643, *_43, shift_flipped
 4704      5CCB08
 4705              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4706              		.loc 1 817 77 view .LVU1591
 4707 1d89 4C8D6202 		lea	r12, 2[rdx]	# _41,
 4708              	# sieve_extend.c:816:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4709              		.loc 1 816 52 view .LVU1592
 4710 1d8d 4883C002 		add	rax, 2	# copy_word,
 4711              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4712              		.loc 1 817 56 view .LVU1593
 4713 1d91 C4C283F7 		shrx	rdx, r13, r15	# tmp645, *_38, shift
 4713      D5
 4714              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4715              		.loc 1 817 66 view .LVU1594
 4716 1d96 4909D3   		or	r11, rdx	# tmp647, tmp645
 4717 1d99 4C891CFB 		mov	QWORD PTR [rbx+rdi*8], r11	# *_82, tmp647
 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4718              		.loc 1 816 43 is_stmt 1 view .LVU1595
 4719              	.LVL205:
 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4720              		.loc 1 816 11 view .LVU1596
 4721              	# sieve_extend.c:816:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4722              		.loc 1 816 5 is_stmt 0 view .LVU1597
 4723 1d9d 4939C0   		cmp	r8, rax	# aligned_copy_word, copy_word
 4724 1da0 7217     		jb	.L386	#,
 817:sieve_extend.c ****     }
 4725              		.loc 1 817 9 is_stmt 1 view .LVU1598
 4726              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4727              		.loc 1 817 56 is_stmt 0 view .LVU1599
 4728 1da2 4E8B0CE3 		mov	r9, QWORD PTR [rbx+r12*8]	# *_228, *_228
 4729              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4730              		.loc 1 817 94 view .LVU1600
 4731 1da6 C42289F7 		shlx	r14, QWORD PTR 8[rbx+r12*8], r14	# tmp648, *_233, shift_flipped
 4731      74E308
 4732              	.LVL206:
 4733              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4734              		.loc 1 817 56 view .LVU1601
 4735 1dad C44283F7 		shrx	r15, r9, r15	# tmp650, *_228, shift
 4735      F9
 4736              	.LVL207:
 4737              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 4738              		.loc 1 817 66 view .LVU1602
 4739 1db2 4D09FE   		or	r14, r15	# tmp652, tmp650
 4740 1db5 4C8934C3 		mov	QWORD PTR [rbx+rax*8], r14	# *_237, tmp652
 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4741              		.loc 1 816 43 is_stmt 1 view .LVU1603
GAS LISTING /tmp/cctyCFAS.s 			page 140


 4742              	.LVL208:
 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4743              		.loc 1 816 11 view .LVU1604
 4744              	.L386:
 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4745              		.loc 1 816 11 is_stmt 0 view .LVU1605
 4746 1db9 4C89D0   		mov	rax, r10	# ivtmp.319, ivtmp.319
 4747              	.L381:
 820:sieve_extend.c **** 
 4748              		.loc 1 820 5 is_stmt 1 view .LVU1606
 4749              	# sieve_extend.c:820:     if (copy_word >= destination_stop_word) return;
 820:sieve_extend.c **** 
 4750              		.loc 1 820 8 is_stmt 0 view .LVU1607
 4751 1dbc 488B7424 		mov	rsi, QWORD PTR 80[rsp]	# destination_stop_word, %sfp
 4751      50
 4752 1dc1 4839C6   		cmp	rsi, rax	# destination_stop_word, ivtmp.319
 4753 1dc4 0F864204 		jbe	.L624	#,
 4753      0000
 822:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 4754              		.loc 1 822 5 is_stmt 1 view .LVU1608
 4755              	# sieve_extend.c:822:     source_word = copy_word - size; // recalibrate
 822:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 4756              		.loc 1 822 17 is_stmt 0 view .LVU1609
 4757 1dca 4C8B4424 		mov	r8, QWORD PTR 24[rsp]	# size, %sfp
 4757      18
 4758 1dcf 4989C5   		mov	r13, rax	# source_word, ivtmp.319
 4759              	# sieve_extend.c:826:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 826:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 4760              		.loc 1 826 21 view .LVU1610
 4761 1dd2 498D0C00 		lea	rcx, [r8+rax]	# ivtmp.319,
 4762              	# sieve_extend.c:822:     source_word = copy_word - size; // recalibrate
 822:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 4763              		.loc 1 822 17 view .LVU1611
 4764 1dd6 4D29C5   		sub	r13, r8	# source_word, size
 4765              	.LVL209:
 823:sieve_extend.c **** 
 4766              		.loc 1 823 5 is_stmt 1 view .LVU1612
 4767              	# sieve_extend.c:823:     const size_t memsize = (size_t)size*sizeof(bitword_t);
 823:sieve_extend.c **** 
 4768              		.loc 1 823 18 is_stmt 0 view .LVU1613
 4769 1dd9 4E8D34C5 		lea	r14, 0[0+r8*8]	# memsize,
 4769      00000000 
 4770              	.LVL210:
 826:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 4771              		.loc 1 826 5 is_stmt 1 view .LVU1614
 826:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 4772              		.loc 1 826 11 view .LVU1615
 4773              	# sieve_extend.c:826:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 826:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 4774              		.loc 1 826 5 is_stmt 0 view .LVU1616
 4775 1de1 4839CE   		cmp	rsi, rcx	# destination_stop_word, ivtmp.319
 4776 1de4 0F826301 		jb	.L388	#,
 4776      0000
 4777 1dea 4C8D24C3 		lea	r12, [rbx+rax*8]	# tmp665,
 4778 1dee 4C8D1CCD 		lea	r11, 0[0+rcx*8]	# tmp666,
 4778      00000000 
 4779              	# sieve_extend.c:827:         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
GAS LISTING /tmp/cctyCFAS.s 			page 141


 827:sieve_extend.c **** 
 4780              		.loc 1 827 38 view .LVU1617
 4781 1df6 4E8D3CEB 		lea	r15, [rbx+r13*8]	# _48,
 4782 1dfa 4C896C24 		mov	QWORD PTR 72[rsp], r13	# %sfp, source_word
 4782      48
 4783 1dff 48895C24 		mov	QWORD PTR 64[rsp], rbx	# %sfp, bitarray
 4783      40
 4784 1e04 4D29DC   		sub	r12, r11	# _584, tmp666
 4785 1e07 4889F3   		mov	rbx, rsi	# destination_stop_word, destination_stop_word
 4786              	.LVL211:
 827:sieve_extend.c **** 
 4787              		.loc 1 827 38 view .LVU1618
 4788 1e0a 4D89C5   		mov	r13, r8	# size, size
 4789              	.LVL212:
 827:sieve_extend.c **** 
 4790              		.loc 1 827 38 view .LVU1619
 4791 1e0d C5F877   		vzeroupper
 4792              	.L389:
 827:sieve_extend.c **** 
 4793              		.loc 1 827 9 is_stmt 1 discriminator 2 view .LVU1620
 4794              	.LVL213:
 4795              	.LBB325:
 4796              	.LBI325:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 4797              		.loc 2 31 1 discriminator 2 view .LVU1621
 4798              	.LBB326:
 4799              		.loc 2 34 3 discriminator 2 view .LVU1622
 4800              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 4801              		.loc 2 34 10 is_stmt 0 discriminator 2 view .LVU1623
 4802 1e10 498D3CCC 		lea	rdi, [r12+rcx*8]	# tmp668,
 4803 1e14 4C89F2   		mov	rdx, r14	#, memsize
 4804 1e17 4C89FE   		mov	rsi, r15	#, _48
 4805 1e1a 48894C24 		mov	QWORD PTR 88[rsp], rcx	# %sfp, ivtmp.319
 4805      58
 4806 1e1f E8000000 		call	memcpy@PLT	#
 4806      00
 4807              	.LVL214:
 4808              		.loc 2 34 10 discriminator 2 view .LVU1624
 4809              	.LBE326:
 4810              	.LBE325:
 826:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 4811              		.loc 1 826 54 is_stmt 1 discriminator 2 view .LVU1625
 826:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 4812              		.loc 1 826 11 discriminator 2 view .LVU1626
 4813 1e24 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.319, %sfp
 4813      58
 4814 1e29 4A8D0C28 		lea	rcx, [rax+r13]	# ivtmp.319,
 4815              	# sieve_extend.c:826:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 826:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 4816              		.loc 1 826 5 is_stmt 0 discriminator 2 view .LVU1627
 4817 1e2d 4839CB   		cmp	rbx, rcx	# destination_stop_word, ivtmp.319
 4818 1e30 0F820201 		jb	.L614	#,
 4818      0000
 827:sieve_extend.c **** 
 4819              		.loc 1 827 9 is_stmt 1 view .LVU1628
 4820              	.LVL215:
 4821              	.LBB334:
GAS LISTING /tmp/cctyCFAS.s 			page 142


  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 4822              		.loc 2 31 1 view .LVU1629
 4823              	.LBB327:
 4824              		.loc 2 34 3 view .LVU1630
 4825              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 4826              		.loc 2 34 10 is_stmt 0 view .LVU1631
 4827 1e36 498D3CCC 		lea	rdi, [r12+rcx*8]	# tmp967,
 4828 1e3a 4C89F2   		mov	rdx, r14	#, memsize
 4829 1e3d 4C89FE   		mov	rsi, r15	#, _48
 4830 1e40 48894C24 		mov	QWORD PTR 88[rsp], rcx	# %sfp, ivtmp.319
 4830      58
 4831              	.LVL216:
 4832              		.loc 2 34 10 view .LVU1632
 4833 1e45 E8000000 		call	memcpy@PLT	#
 4833      00
 4834              	.LVL217:
 4835              		.loc 2 34 10 view .LVU1633
 4836              	.LBE327:
 4837              	.LBE334:
 826:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 4838              		.loc 1 826 54 is_stmt 1 view .LVU1634
 826:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 4839              		.loc 1 826 11 view .LVU1635
 4840 1e4a 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.319, %sfp
 4840      58
 4841 1e4f 4E8D0C28 		lea	r9, [rax+r13]	# ivtmp.319,
 4842              	# sieve_extend.c:826:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 826:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 4843              		.loc 1 826 5 is_stmt 0 view .LVU1636
 4844 1e53 4C39CB   		cmp	rbx, r9	# destination_stop_word, ivtmp.319
 4845 1e56 0F82DC00 		jb	.L614	#,
 4845      0000
 827:sieve_extend.c **** 
 4846              		.loc 1 827 9 is_stmt 1 view .LVU1637
 4847              	.LVL218:
 4848              	.LBB335:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 4849              		.loc 2 31 1 view .LVU1638
 4850              	.LBB328:
 4851              		.loc 2 34 3 view .LVU1639
 4852              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 4853              		.loc 2 34 10 is_stmt 0 view .LVU1640
 4854 1e5c 4C89F2   		mov	rdx, r14	#, memsize
 4855 1e5f 4B8D3CCC 		lea	rdi, [r12+r9*8]	# tmp970,
 4856 1e63 4C89FE   		mov	rsi, r15	#, _48
 4857 1e66 4C894C24 		mov	QWORD PTR 88[rsp], r9	# %sfp, ivtmp.319
 4857      58
 4858 1e6b E8000000 		call	memcpy@PLT	#
 4858      00
 4859              	.LVL219:
 4860              		.loc 2 34 10 view .LVU1641
 4861              	.LBE328:
 4862              	.LBE335:
 826:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 4863              		.loc 1 826 54 is_stmt 1 view .LVU1642
 826:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 4864              		.loc 1 826 11 view .LVU1643
GAS LISTING /tmp/cctyCFAS.s 			page 143


 4865 1e70 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.319, %sfp
 4865      58
 4866 1e75 4A8D1428 		lea	rdx, [rax+r13]	# ivtmp.319,
 4867              	# sieve_extend.c:826:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 826:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 4868              		.loc 1 826 5 is_stmt 0 view .LVU1644
 4869 1e79 4839D3   		cmp	rbx, rdx	# destination_stop_word, ivtmp.319
 4870 1e7c 0F82B600 		jb	.L614	#,
 4870      0000
 827:sieve_extend.c **** 
 4871              		.loc 1 827 9 is_stmt 1 view .LVU1645
 4872              	.LVL220:
 4873              	.LBB336:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 4874              		.loc 2 31 1 view .LVU1646
 4875              	.LBB329:
 4876              		.loc 2 34 3 view .LVU1647
 4877              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 4878              		.loc 2 34 10 is_stmt 0 view .LVU1648
 4879 1e82 48895424 		mov	QWORD PTR 88[rsp], rdx	# %sfp, ivtmp.319
 4879      58
 4880 1e87 498D3CD4 		lea	rdi, [r12+rdx*8]	# tmp973,
 4881 1e8b 4C89FE   		mov	rsi, r15	#, _48
 4882 1e8e 4C89F2   		mov	rdx, r14	#, memsize
 4883 1e91 E8000000 		call	memcpy@PLT	#
 4883      00
 4884              	.LVL221:
 4885              		.loc 2 34 10 view .LVU1649
 4886              	.LBE329:
 4887              	.LBE336:
 826:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 4888              		.loc 1 826 54 is_stmt 1 view .LVU1650
 826:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 4889              		.loc 1 826 11 view .LVU1651
 4890 1e96 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.319, %sfp
 4890      58
 4891 1e9b 4E8D1428 		lea	r10, [rax+r13]	# ivtmp.319,
 4892              	# sieve_extend.c:826:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 826:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 4893              		.loc 1 826 5 is_stmt 0 view .LVU1652
 4894 1e9f 4C39D3   		cmp	rbx, r10	# destination_stop_word, ivtmp.319
 4895 1ea2 0F829000 		jb	.L614	#,
 4895      0000
 827:sieve_extend.c **** 
 4896              		.loc 1 827 9 is_stmt 1 view .LVU1653
 4897              	.LVL222:
 4898              	.LBB337:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 4899              		.loc 2 31 1 view .LVU1654
 4900              	.LBB330:
 4901              		.loc 2 34 3 view .LVU1655
 4902              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 4903              		.loc 2 34 10 is_stmt 0 view .LVU1656
 4904 1ea8 4C89FE   		mov	rsi, r15	#, _48
 4905 1eab 4B8D3CD4 		lea	rdi, [r12+r10*8]	# tmp976,
 4906 1eaf 4C89F2   		mov	rdx, r14	#, memsize
 4907 1eb2 4C895424 		mov	QWORD PTR 88[rsp], r10	# %sfp, ivtmp.319
GAS LISTING /tmp/cctyCFAS.s 			page 144


 4907      58
 4908 1eb7 E8000000 		call	memcpy@PLT	#
 4908      00
 4909              	.LVL223:
 4910              		.loc 2 34 10 view .LVU1657
 4911              	.LBE330:
 4912              	.LBE337:
 826:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 4913              		.loc 1 826 54 is_stmt 1 view .LVU1658
 826:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 4914              		.loc 1 826 11 view .LVU1659
 4915 1ebc 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.319, %sfp
 4915      58
 4916 1ec1 4A8D3428 		lea	rsi, [rax+r13]	# ivtmp.319,
 4917              	# sieve_extend.c:826:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 826:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 4918              		.loc 1 826 5 is_stmt 0 view .LVU1660
 4919 1ec5 4839F3   		cmp	rbx, rsi	# destination_stop_word, ivtmp.319
 4920 1ec8 726E     		jb	.L614	#,
 827:sieve_extend.c **** 
 4921              		.loc 1 827 9 is_stmt 1 view .LVU1661
 4922              	.LVL224:
 4923              	.LBB338:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 4924              		.loc 2 31 1 view .LVU1662
 4925              	.LBB331:
 4926              		.loc 2 34 3 view .LVU1663
 4927              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 4928              		.loc 2 34 10 is_stmt 0 view .LVU1664
 4929 1eca 48897424 		mov	QWORD PTR 88[rsp], rsi	# %sfp, ivtmp.319
 4929      58
 4930 1ecf 498D3CF4 		lea	rdi, [r12+rsi*8]	# tmp979,
 4931 1ed3 4C89F2   		mov	rdx, r14	#, memsize
 4932 1ed6 4C89FE   		mov	rsi, r15	#, _48
 4933 1ed9 E8000000 		call	memcpy@PLT	#
 4933      00
 4934              	.LVL225:
 4935              		.loc 2 34 10 view .LVU1665
 4936              	.LBE331:
 4937              	.LBE338:
 826:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 4938              		.loc 1 826 54 is_stmt 1 view .LVU1666
 826:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 4939              		.loc 1 826 11 view .LVU1667
 4940 1ede 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.319, %sfp
 4940      58
 4941 1ee3 4E8D0428 		lea	r8, [rax+r13]	# ivtmp.319,
 4942              	# sieve_extend.c:826:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 826:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 4943              		.loc 1 826 5 is_stmt 0 view .LVU1668
 4944 1ee7 4C39C3   		cmp	rbx, r8	# destination_stop_word, ivtmp.319
 4945 1eea 724C     		jb	.L614	#,
 827:sieve_extend.c **** 
 4946              		.loc 1 827 9 is_stmt 1 view .LVU1669
 4947              	.LVL226:
 4948              	.LBB339:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
GAS LISTING /tmp/cctyCFAS.s 			page 145


 4949              		.loc 2 31 1 view .LVU1670
 4950              	.LBB332:
 4951              		.loc 2 34 3 view .LVU1671
 4952              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 4953              		.loc 2 34 10 is_stmt 0 view .LVU1672
 4954 1eec 4B8D3CC4 		lea	rdi, [r12+r8*8]	# tmp982,
 4955 1ef0 4C89F2   		mov	rdx, r14	#, memsize
 4956 1ef3 4C89FE   		mov	rsi, r15	#, _48
 4957 1ef6 4C894424 		mov	QWORD PTR 88[rsp], r8	# %sfp, ivtmp.319
 4957      58
 4958 1efb E8000000 		call	memcpy@PLT	#
 4958      00
 4959              	.LVL227:
 4960              		.loc 2 34 10 view .LVU1673
 4961              	.LBE332:
 4962              	.LBE339:
 826:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 4963              		.loc 1 826 54 is_stmt 1 view .LVU1674
 826:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 4964              		.loc 1 826 11 view .LVU1675
 4965 1f00 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.319, %sfp
 4965      58
 4966 1f05 4E8D1C28 		lea	r11, [rax+r13]	# ivtmp.319,
 4967              	# sieve_extend.c:826:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 826:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 4968              		.loc 1 826 5 is_stmt 0 view .LVU1676
 4969 1f09 4C39DB   		cmp	rbx, r11	# destination_stop_word, ivtmp.319
 4970 1f0c 722A     		jb	.L614	#,
 827:sieve_extend.c **** 
 4971              		.loc 1 827 9 is_stmt 1 view .LVU1677
 4972              	.LVL228:
 4973              	.LBB340:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 4974              		.loc 2 31 1 view .LVU1678
 4975              	.LBB333:
 4976              		.loc 2 34 3 view .LVU1679
 4977              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 4978              		.loc 2 34 10 is_stmt 0 view .LVU1680
 4979 1f0e 4B8D3CDC 		lea	rdi, [r12+r11*8]	# tmp985,
 4980 1f12 4C89F2   		mov	rdx, r14	#, memsize
 4981 1f15 4C89FE   		mov	rsi, r15	#, _48
 4982 1f18 4C895C24 		mov	QWORD PTR 88[rsp], r11	# %sfp, ivtmp.319
 4982      58
 4983 1f1d E8000000 		call	memcpy@PLT	#
 4983      00
 4984              	.LVL229:
 4985              		.loc 2 34 10 view .LVU1681
 4986              	.LBE333:
 4987              	.LBE340:
 826:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 4988              		.loc 1 826 54 is_stmt 1 view .LVU1682
 826:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 4989              		.loc 1 826 11 view .LVU1683
 4990 1f22 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.319, %sfp
 4990      58
 4991              	.LVL230:
 826:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
GAS LISTING /tmp/cctyCFAS.s 			page 146


 4992              		.loc 1 826 11 is_stmt 0 view .LVU1684
 4993 1f27 4A8D0C28 		lea	rcx, [rax+r13]	# ivtmp.319,
 4994              	.LVL231:
 4995              	# sieve_extend.c:826:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 826:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 4996              		.loc 1 826 5 view .LVU1685
 4997 1f2b 4839CB   		cmp	rbx, rcx	# destination_stop_word, ivtmp.319
 4998 1f2e 0F83DCFE 		jnb	.L389	#,
 4998      FFFF
 4999              	.LVL232:
 5000              		.p2align 4,,10
 5001 1f34 0F1F4000 		.p2align 3
 5002              	.L614:
 826:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 5003              		.loc 1 826 5 view .LVU1686
 5004 1f38 4C8B6C24 		mov	r13, QWORD PTR 72[rsp]	# source_word, %sfp
 5004      48
 5005 1f3d 488B5C24 		mov	rbx, QWORD PTR 64[rsp]	# bitarray, %sfp
 5005      40
 5006              	.LVL233:
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5007              		.loc 1 830 11 is_stmt 1 view .LVU1687
 5008              	# sieve_extend.c:830:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5009              		.loc 1 830 5 is_stmt 0 view .LVU1688
 5010 1f42 48394424 		cmp	QWORD PTR 80[rsp], rax	# %sfp, ivtmp.319
 5010      50
 5011 1f47 0F820402 		jb	.L625	#,
 5011      0000
 5012              	.LVL234:
 5013              	.L388:
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5014              		.loc 1 830 5 view .LVU1689
 5015 1f4d 4C8D3CC5 		lea	r15, 0[0+rax*8]	# _195,
 5015      00000000 
 5016 1f55 4A8D3CED 		lea	rdi, 0[0+r13*8]	# _187,
 5016      00000000 
 5017 1f5d 4D8D6720 		lea	r12, 32[r15]	# tmp675,
 5018 1f61 4C39E7   		cmp	rdi, r12	# _187, tmp675
 5019 1f64 4E8D34ED 		lea	r14, 32[0+r13*8]	# _197,
 5019      20000000 
 5020              	.LVL235:
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5021              		.loc 1 830 5 view .LVU1690
 5022 1f6c 410F9DC1 		setge	r9b	#, tmp677
 5023 1f70 4D39F7   		cmp	r15, r14	# _195, _197
 5024 1f73 0F9DC2   		setge	dl	#, tmp679
 5025 1f76 4108D1   		or	r9b, dl	# tmp677, tmp679
 5026 1f79 0F84E101 		je	.L391	#,
 5026      0000
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5027              		.loc 1 830 5 view .LVU1691
 5028 1f7f 4C8B5424 		mov	r10, QWORD PTR 80[rsp]	# destination_stop_word, %sfp
 5028      50
 5029 1f84 4C89D6   		mov	rsi, r10	# tmp681, destination_stop_word
 5030 1f87 4829C6   		sub	rsi, rax	# tmp681, ivtmp.319
 5031 1f8a 4883FE08 		cmp	rsi, 8	# tmp681,
GAS LISTING /tmp/cctyCFAS.s 			page 147


 5032 1f8e 0F86CC01 		jbe	.L391	#,
 5032      0000
 5033 1f94 4D8D4201 		lea	r8, 1[r10]	# tmp684,
 5034 1f98 4929C0   		sub	r8, rax	# niters.249, ivtmp.319
 5035 1f9b 4D89C3   		mov	r11, r8	# bnd.250, niters.249
 5036 1f9e 49C1EB02 		shr	r11, 2	# bnd.250,
 5037 1fa2 49C1E305 		sal	r11, 5	# _577,
 5038 1fa6 498D4BE0 		lea	rcx, -32[r11]	# tmp703,
 5039 1faa 48C1E905 		shr	rcx, 5	# tmp701,
 5040 1fae 48FFC1   		inc	rcx	# tmp704
 5041 1fb1 4801DF   		add	rdi, rbx	# vectp.255, bitarray
 5042 1fb4 4901DF   		add	r15, rbx	# vectp.258, bitarray
 5043              	# sieve_extend.c:816:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5044              		.loc 1 816 5 view .LVU1692
 5045 1fb7 4531F6   		xor	r14d, r14d	# ivtmp.311
 5046 1fba 83E107   		and	ecx, 7	# tmp705,
 5047 1fbd 0F849C00 		je	.L392	#,
 5047      0000
 5048 1fc3 4883F901 		cmp	rcx, 1	# tmp705,
 5049 1fc7 747D     		je	.L536	#,
 5050 1fc9 4883F902 		cmp	rcx, 2	# tmp705,
 5051 1fcd 7467     		je	.L537	#,
 5052 1fcf 4883F903 		cmp	rcx, 3	# tmp705,
 5053 1fd3 7451     		je	.L538	#,
 5054 1fd5 4883F904 		cmp	rcx, 4	# tmp705,
 5055 1fd9 743B     		je	.L539	#,
 5056 1fdb 4883F905 		cmp	rcx, 5	# tmp705,
 5057 1fdf 7425     		je	.L540	#,
 5058 1fe1 4883F906 		cmp	rcx, 6	# tmp705,
 5059 1fe5 740F     		je	.L541	#,
 5060              	.LVL236:
 831:sieve_extend.c **** 
 5061              		.loc 1 831 9 is_stmt 1 view .LVU1693
 5062              	# sieve_extend.c:831:         bitarray[copy_word] = bitarray[source_word];
 831:sieve_extend.c **** 
 5063              		.loc 1 831 29 is_stmt 0 view .LVU1694
 5064 1fe7 C57E6F17 		vmovdqu	ymm10, YMMWORD PTR [rdi]	# tmp1291, MEM[base: vectp.255_146, index: ivtmp.311_575, offset:
 5065 1feb 41BE2000 		mov	r14d, 32	# ivtmp.311,
 5065      0000
 5066 1ff1 C4417E7F 		vmovdqu	YMMWORD PTR [r15], ymm10	# MEM[base: vectp.258_119, index: ivtmp.311_575, offset: 0B], tmp
 5066      17
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5067              		.loc 1 830 48 is_stmt 1 view .LVU1695
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5068              		.loc 1 830 11 view .LVU1696
 5069              	.L541:
 831:sieve_extend.c **** 
 5070              		.loc 1 831 9 view .LVU1697
 5071              	# sieve_extend.c:831:         bitarray[copy_word] = bitarray[source_word];
 831:sieve_extend.c **** 
 5072              		.loc 1 831 29 is_stmt 0 view .LVU1698
 5073 1ff6 C4217E6F 		vmovdqu	ymm11, YMMWORD PTR [rdi+r14]	# tmp1292, MEM[base: vectp.255_146, index: ivtmp.311_575, off
 5073      1C37
 5074 1ffc C4017E7F 		vmovdqu	YMMWORD PTR [r15+r14], ymm11	# MEM[base: vectp.258_119, index: ivtmp.311_575, offset: 0B],
 5074      1C37
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
GAS LISTING /tmp/cctyCFAS.s 			page 148


 5075              		.loc 1 830 48 is_stmt 1 view .LVU1699
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5076              		.loc 1 830 11 view .LVU1700
 5077 2002 4983C620 		add	r14, 32	# ivtmp.311,
 5078              	.L540:
 831:sieve_extend.c **** 
 5079              		.loc 1 831 9 view .LVU1701
 5080              	# sieve_extend.c:831:         bitarray[copy_word] = bitarray[source_word];
 831:sieve_extend.c **** 
 5081              		.loc 1 831 29 is_stmt 0 view .LVU1702
 5082 2006 C4217E6F 		vmovdqu	ymm13, YMMWORD PTR [rdi+r14]	# tmp1293, MEM[base: vectp.255_146, index: ivtmp.311_575, off
 5082      2C37
 5083 200c C4017E7F 		vmovdqu	YMMWORD PTR [r15+r14], ymm13	# MEM[base: vectp.258_119, index: ivtmp.311_575, offset: 0B],
 5083      2C37
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5084              		.loc 1 830 48 is_stmt 1 view .LVU1703
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5085              		.loc 1 830 11 view .LVU1704
 5086 2012 4983C620 		add	r14, 32	# ivtmp.311,
 5087              	.L539:
 831:sieve_extend.c **** 
 5088              		.loc 1 831 9 view .LVU1705
 5089              	# sieve_extend.c:831:         bitarray[copy_word] = bitarray[source_word];
 831:sieve_extend.c **** 
 5090              		.loc 1 831 29 is_stmt 0 view .LVU1706
 5091 2016 C4217E6F 		vmovdqu	ymm14, YMMWORD PTR [rdi+r14]	# tmp1294, MEM[base: vectp.255_146, index: ivtmp.311_575, off
 5091      3437
 5092 201c C4017E7F 		vmovdqu	YMMWORD PTR [r15+r14], ymm14	# MEM[base: vectp.258_119, index: ivtmp.311_575, offset: 0B],
 5092      3437
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5093              		.loc 1 830 48 is_stmt 1 view .LVU1707
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5094              		.loc 1 830 11 view .LVU1708
 5095 2022 4983C620 		add	r14, 32	# ivtmp.311,
 5096              	.L538:
 831:sieve_extend.c **** 
 5097              		.loc 1 831 9 view .LVU1709
 5098              	# sieve_extend.c:831:         bitarray[copy_word] = bitarray[source_word];
 831:sieve_extend.c **** 
 5099              		.loc 1 831 29 is_stmt 0 view .LVU1710
 5100 2026 C4217E6F 		vmovdqu	ymm15, YMMWORD PTR [rdi+r14]	# tmp1295, MEM[base: vectp.255_146, index: ivtmp.311_575, off
 5100      3C37
 5101 202c C4017E7F 		vmovdqu	YMMWORD PTR [r15+r14], ymm15	# MEM[base: vectp.258_119, index: ivtmp.311_575, offset: 0B],
 5101      3C37
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5102              		.loc 1 830 48 is_stmt 1 view .LVU1711
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5103              		.loc 1 830 11 view .LVU1712
 5104 2032 4983C620 		add	r14, 32	# ivtmp.311,
 5105              	.L537:
 831:sieve_extend.c **** 
 5106              		.loc 1 831 9 view .LVU1713
 5107              	# sieve_extend.c:831:         bitarray[copy_word] = bitarray[source_word];
 831:sieve_extend.c **** 
 5108              		.loc 1 831 29 is_stmt 0 view .LVU1714
 5109 2036 C4A17E6F 		vmovdqu	ymm1, YMMWORD PTR [rdi+r14]	# tmp1296, MEM[base: vectp.255_146, index: ivtmp.311_575, offs
 5109      0C37
GAS LISTING /tmp/cctyCFAS.s 			page 149


 5110 203c C4817E7F 		vmovdqu	YMMWORD PTR [r15+r14], ymm1	# MEM[base: vectp.258_119, index: ivtmp.311_575, offset: 0B], 
 5110      0C37
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5111              		.loc 1 830 48 is_stmt 1 view .LVU1715
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5112              		.loc 1 830 11 view .LVU1716
 5113 2042 4983C620 		add	r14, 32	# ivtmp.311,
 5114              	.L536:
 831:sieve_extend.c **** 
 5115              		.loc 1 831 9 view .LVU1717
 5116              	# sieve_extend.c:831:         bitarray[copy_word] = bitarray[source_word];
 831:sieve_extend.c **** 
 5117              		.loc 1 831 29 is_stmt 0 view .LVU1718
 5118 2046 C4217E6F 		vmovdqu	ymm8, YMMWORD PTR [rdi+r14]	# tmp1297, MEM[base: vectp.255_146, index: ivtmp.311_575, offs
 5118      0437
 5119 204c C4017E7F 		vmovdqu	YMMWORD PTR [r15+r14], ymm8	# MEM[base: vectp.258_119, index: ivtmp.311_575, offset: 0B], 
 5119      0437
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5120              		.loc 1 830 48 is_stmt 1 view .LVU1719
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5121              		.loc 1 830 11 view .LVU1720
 5122 2052 4983C620 		add	r14, 32	# ivtmp.311,
 5123 2056 4D39DE   		cmp	r14, r11	# ivtmp.311, _577
 5124 2059 0F849600 		je	.L599	#,
 5124      0000
 5125              	.L392:
 831:sieve_extend.c **** 
 5126              		.loc 1 831 9 discriminator 2 view .LVU1721
 5127              	# sieve_extend.c:831:         bitarray[copy_word] = bitarray[source_word];
 831:sieve_extend.c **** 
 5128              		.loc 1 831 29 is_stmt 0 discriminator 2 view .LVU1722
 5129 205f C4A17E6F 		vmovdqu	ymm0, YMMWORD PTR [rdi+r14]	# tmp1278, MEM[base: vectp.255_146, index: ivtmp.311_575, offs
 5129      0437
 5130 2065 C4817E7F 		vmovdqu	YMMWORD PTR [r15+r14], ymm0	# MEM[base: vectp.258_119, index: ivtmp.311_575, offset: 0B], 
 5130      0437
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5131              		.loc 1 830 48 is_stmt 1 discriminator 2 view .LVU1723
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5132              		.loc 1 830 11 discriminator 2 view .LVU1724
 831:sieve_extend.c **** 
 5133              		.loc 1 831 9 discriminator 2 view .LVU1725
 5134              	# sieve_extend.c:831:         bitarray[copy_word] = bitarray[source_word];
 831:sieve_extend.c **** 
 5135              		.loc 1 831 29 is_stmt 0 discriminator 2 view .LVU1726
 5136 206b C4A17E6F 		vmovdqu	ymm5, YMMWORD PTR 32[rdi+r14]	# tmp1279, MEM[base: vectp.255_146, index: ivtmp.311_575, of
 5136      6C3720
 5137 2072 C4817E7F 		vmovdqu	YMMWORD PTR 32[r15+r14], ymm5	# MEM[base: vectp.258_119, index: ivtmp.311_575, offset: 0B]
 5137      6C3720
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5138              		.loc 1 830 48 is_stmt 1 discriminator 2 view .LVU1727
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5139              		.loc 1 830 11 discriminator 2 view .LVU1728
 831:sieve_extend.c **** 
 5140              		.loc 1 831 9 discriminator 2 view .LVU1729
 5141              	# sieve_extend.c:831:         bitarray[copy_word] = bitarray[source_word];
 831:sieve_extend.c **** 
 5142              		.loc 1 831 29 is_stmt 0 discriminator 2 view .LVU1730
GAS LISTING /tmp/cctyCFAS.s 			page 150


 5143 2079 C4217E6F 		vmovdqu	ymm9, YMMWORD PTR 64[rdi+r14]	# tmp1280, MEM[base: vectp.255_146, index: ivtmp.311_575, of
 5143      4C3740
 5144 2080 C4017E7F 		vmovdqu	YMMWORD PTR 64[r15+r14], ymm9	# MEM[base: vectp.258_119, index: ivtmp.311_575, offset: 0B]
 5144      4C3740
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5145              		.loc 1 830 48 is_stmt 1 discriminator 2 view .LVU1731
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5146              		.loc 1 830 11 discriminator 2 view .LVU1732
 831:sieve_extend.c **** 
 5147              		.loc 1 831 9 discriminator 2 view .LVU1733
 5148              	# sieve_extend.c:831:         bitarray[copy_word] = bitarray[source_word];
 831:sieve_extend.c **** 
 5149              		.loc 1 831 29 is_stmt 0 discriminator 2 view .LVU1734
 5150 2087 C4A17E6F 		vmovdqu	ymm2, YMMWORD PTR 96[rdi+r14]	# tmp1281, MEM[base: vectp.255_146, index: ivtmp.311_575, of
 5150      543760
 5151 208e C4817E7F 		vmovdqu	YMMWORD PTR 96[r15+r14], ymm2	# MEM[base: vectp.258_119, index: ivtmp.311_575, offset: 0B]
 5151      543760
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5152              		.loc 1 830 48 is_stmt 1 discriminator 2 view .LVU1735
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5153              		.loc 1 830 11 discriminator 2 view .LVU1736
 831:sieve_extend.c **** 
 5154              		.loc 1 831 9 discriminator 2 view .LVU1737
 5155              	# sieve_extend.c:831:         bitarray[copy_word] = bitarray[source_word];
 831:sieve_extend.c **** 
 5156              		.loc 1 831 29 is_stmt 0 discriminator 2 view .LVU1738
 5157 2095 C4A17E6F 		vmovdqu	ymm4, YMMWORD PTR 128[rdi+r14]	# tmp1282, MEM[base: vectp.255_146, index: ivtmp.311_575, o
 5157      A4378000 
 5157      0000
 5158 209f C4817E7F 		vmovdqu	YMMWORD PTR 128[r15+r14], ymm4	# MEM[base: vectp.258_119, index: ivtmp.311_575, offset: 0B
 5158      A4378000 
 5158      0000
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5159              		.loc 1 830 48 is_stmt 1 discriminator 2 view .LVU1739
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5160              		.loc 1 830 11 discriminator 2 view .LVU1740
 831:sieve_extend.c **** 
 5161              		.loc 1 831 9 discriminator 2 view .LVU1741
 5162              	# sieve_extend.c:831:         bitarray[copy_word] = bitarray[source_word];
 831:sieve_extend.c **** 
 5163              		.loc 1 831 29 is_stmt 0 discriminator 2 view .LVU1742
 5164 20a9 C4A17E6F 		vmovdqu	ymm6, YMMWORD PTR 160[rdi+r14]	# tmp1283, MEM[base: vectp.255_146, index: ivtmp.311_575, o
 5164      B437A000 
 5164      0000
 5165 20b3 C4817E7F 		vmovdqu	YMMWORD PTR 160[r15+r14], ymm6	# MEM[base: vectp.258_119, index: ivtmp.311_575, offset: 0B
 5165      B437A000 
 5165      0000
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5166              		.loc 1 830 48 is_stmt 1 discriminator 2 view .LVU1743
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5167              		.loc 1 830 11 discriminator 2 view .LVU1744
 831:sieve_extend.c **** 
 5168              		.loc 1 831 9 discriminator 2 view .LVU1745
 5169              	# sieve_extend.c:831:         bitarray[copy_word] = bitarray[source_word];
 831:sieve_extend.c **** 
 5170              		.loc 1 831 29 is_stmt 0 discriminator 2 view .LVU1746
 5171 20bd C4A17E6F 		vmovdqu	ymm7, YMMWORD PTR 192[rdi+r14]	# tmp1284, MEM[base: vectp.255_146, index: ivtmp.311_575, o
GAS LISTING /tmp/cctyCFAS.s 			page 151


 5171      BC37C000 
 5171      0000
 5172 20c7 C4817E7F 		vmovdqu	YMMWORD PTR 192[r15+r14], ymm7	# MEM[base: vectp.258_119, index: ivtmp.311_575, offset: 0B
 5172      BC37C000 
 5172      0000
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5173              		.loc 1 830 48 is_stmt 1 discriminator 2 view .LVU1747
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5174              		.loc 1 830 11 discriminator 2 view .LVU1748
 831:sieve_extend.c **** 
 5175              		.loc 1 831 9 discriminator 2 view .LVU1749
 5176              	# sieve_extend.c:831:         bitarray[copy_word] = bitarray[source_word];
 831:sieve_extend.c **** 
 5177              		.loc 1 831 29 is_stmt 0 discriminator 2 view .LVU1750
 5178 20d1 C4A17E6F 		vmovdqu	ymm3, YMMWORD PTR 224[rdi+r14]	# tmp1285, MEM[base: vectp.255_146, index: ivtmp.311_575, o
 5178      9C37E000 
 5178      0000
 5179 20db C4817E7F 		vmovdqu	YMMWORD PTR 224[r15+r14], ymm3	# MEM[base: vectp.258_119, index: ivtmp.311_575, offset: 0B
 5179      9C37E000 
 5179      0000
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5180              		.loc 1 830 48 is_stmt 1 discriminator 2 view .LVU1751
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5181              		.loc 1 830 11 discriminator 2 view .LVU1752
 5182 20e5 4981C600 		add	r14, 256	# ivtmp.311,
 5182      010000
 5183 20ec 4D39DE   		cmp	r14, r11	# ivtmp.311, _577
 5184 20ef 0F856AFF 		jne	.L392	#,
 5184      FFFF
 5185              	.L599:
 5186 20f5 4D89C7   		mov	r15, r8	# niters_vector_mult_vf.251, niters.249
 5187 20f8 4983E7FC 		and	r15, -4	# niters_vector_mult_vf.251,
 5188 20fc 4D01FD   		add	r13, r15	# tmp.252, niters_vector_mult_vf.251
 5189 20ff 4C01F8   		add	rax, r15	# tmp.253, niters_vector_mult_vf.251
 5190 2102 4D39C7   		cmp	r15, r8	# niters_vector_mult_vf.251, niters.249
 5191 2105 0F840101 		je	.L624	#,
 5191      0000
 5192              	.LVL237:
 831:sieve_extend.c **** 
 5193              		.loc 1 831 9 view .LVU1753
 5194              	# sieve_extend.c:831:         bitarray[copy_word] = bitarray[source_word];
 831:sieve_extend.c **** 
 5195              		.loc 1 831 39 is_stmt 0 view .LVU1754
 5196 210b 4A8B3CEB 		mov	rdi, QWORD PTR [rbx+r13*8]	# _90, *_141
 5197              	# sieve_extend.c:830:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5198              		.loc 1 830 5 view .LVU1755
 5199 210f 4C8B4C24 		mov	r9, QWORD PTR 80[rsp]	# destination_stop_word, %sfp
 5199      50
 5200              	# sieve_extend.c:830:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5201              		.loc 1 830 57 view .LVU1756
 5202 2114 4C8D6001 		lea	r12, 1[rax]	# copy_word,
 5203              	# sieve_extend.c:831:         bitarray[copy_word] = bitarray[source_word];
 831:sieve_extend.c **** 
 5204              		.loc 1 831 29 view .LVU1757
 5205 2118 48893CC3 		mov	QWORD PTR [rbx+rax*8], rdi	# *_426, _90
GAS LISTING /tmp/cctyCFAS.s 			page 152


 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5206              		.loc 1 830 48 is_stmt 1 view .LVU1758
 5207              	.LVL238:
 5208              	# sieve_extend.c:830:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5209              		.loc 1 830 71 is_stmt 0 view .LVU1759
 5210 211c 49FFC5   		inc	r13	# source_word
 5211              	.LVL239:
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5212              		.loc 1 830 11 is_stmt 1 view .LVU1760
 5213              	# sieve_extend.c:830:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5214              		.loc 1 830 5 is_stmt 0 view .LVU1761
 5215 211f 4D39E1   		cmp	r9, r12	# destination_stop_word, copy_word
 5216 2122 0F82E400 		jb	.L624	#,
 5216      0000
 831:sieve_extend.c **** 
 5217              		.loc 1 831 9 is_stmt 1 view .LVU1762
 5218              	# sieve_extend.c:831:         bitarray[copy_word] = bitarray[source_word];
 831:sieve_extend.c **** 
 5219              		.loc 1 831 39 is_stmt 0 view .LVU1763
 5220 2128 4A8D14ED 		lea	rdx, 0[0+r13*8]	# _96,
 5220      00000000 
 5221 2130 4E8B2CEB 		mov	r13, QWORD PTR [rbx+r13*8]	# _103, *_98
 5222              	.LVL240:
 5223              	# sieve_extend.c:830:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5224              		.loc 1 830 57 view .LVU1764
 5225 2134 4883C002 		add	rax, 2	# copy_word,
 5226              	# sieve_extend.c:831:         bitarray[copy_word] = bitarray[source_word];
 831:sieve_extend.c **** 
 5227              		.loc 1 831 29 view .LVU1765
 5228 2138 4E892CE3 		mov	QWORD PTR [rbx+r12*8], r13	# *_102, _103
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5229              		.loc 1 830 48 is_stmt 1 view .LVU1766
 5230              	.LVL241:
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5231              		.loc 1 830 11 view .LVU1767
 5232              	# sieve_extend.c:830:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5233              		.loc 1 830 5 is_stmt 0 view .LVU1768
 5234 213c 4939C1   		cmp	r9, rax	# destination_stop_word, copy_word
 5235 213f 0F82C700 		jb	.L624	#,
 5235      0000
 831:sieve_extend.c **** 
 5236              		.loc 1 831 9 is_stmt 1 view .LVU1769
 5237              	# sieve_extend.c:831:         bitarray[copy_word] = bitarray[source_word];
 831:sieve_extend.c **** 
 5238              		.loc 1 831 39 is_stmt 0 view .LVU1770
 5239 2145 4C8B5413 		mov	r10, QWORD PTR 8[rbx+rdx]	# _156, *_159
 5239      08
 5240              	# sieve_extend.c:831:         bitarray[copy_word] = bitarray[source_word];
 831:sieve_extend.c **** 
 5241              		.loc 1 831 29 view .LVU1771
 5242 214a 4C8914C3 		mov	QWORD PTR [rbx+rax*8], r10	# *_157, _156
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5243              		.loc 1 830 48 is_stmt 1 view .LVU1772
GAS LISTING /tmp/cctyCFAS.s 			page 153


 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5244              		.loc 1 830 11 view .LVU1773
 5245 214e C5F877   		vzeroupper
 5246              	.L625:
 5247              	# sieve_extend.c:834:  }
 834:sieve_extend.c **** 
 5248              		.loc 1 834 2 is_stmt 0 view .LVU1774
 5249 2151 488D65D8 		lea	rsp, -40[rbp]	#,
 5250              	.LVL242:
 834:sieve_extend.c **** 
 5251              		.loc 1 834 2 view .LVU1775
 5252 2155 5B       		pop	rbx	#
 5253 2156 415C     		pop	r12	#
 5254 2158 415D     		pop	r13	#
 5255 215a 415E     		pop	r14	#
 5256 215c 415F     		pop	r15	#
 5257 215e 5D       		pop	rbp	#
 5258              		.cfi_remember_state
 5259              		.cfi_def_cfa 7, 8
 5260              	.LVL243:
 834:sieve_extend.c **** 
 5261              		.loc 1 834 2 view .LVU1776
 5262 215f C3       		ret	
 5263              	.LVL244:
 5264              		.p2align 4,,10
 5265              		.p2align 3
 5266              	.L391:
 5267              		.cfi_restore_state
 834:sieve_extend.c **** 
 5268              		.loc 1 834 2 view .LVU1777
 5269 2160 488B7424 		mov	rsi, QWORD PTR 80[rsp]	# destination_stop_word, %sfp
 5269      50
 5270 2165 4E8D043B 		lea	r8, [rbx+r15]	# ivtmp.305,
 5271 2169 488D5CF3 		lea	rbx, 8[rbx+rsi*8]	# _574,
 5271      08
 5272              	# sieve_extend.c:831:         bitarray[copy_word] = bitarray[source_word];
 831:sieve_extend.c **** 
 5273              		.loc 1 831 39 view .LVU1778
 5274 216e 4929C5   		sub	r13, rax	# tmp689, ivtmp.319
 5275              	.LVL245:
 831:sieve_extend.c **** 
 5276              		.loc 1 831 39 view .LVU1779
 5277 2171 4889D8   		mov	rax, rbx	# tmp696, _574
 5278 2174 4C29C0   		sub	rax, r8	# tmp696, ivtmp.305
 5279 2177 4883E808 		sub	rax, 8	# tmp697,
 5280 217b 48C1E803 		shr	rax, 3	# tmp695,
 5281 217f 48FFC0   		inc	rax	# tmp698
 5282 2182 83E007   		and	eax, 7	# tmp699,
 5283 2185 0F843D01 		je	.L395	#,
 5283      0000
 5284 218b 4883F801 		cmp	rax, 1	# tmp699,
 5285 218f 7466     		je	.L542	#,
 5286 2191 4883F802 		cmp	rax, 2	# tmp699,
 5287 2195 7454     		je	.L543	#,
 5288 2197 4883F803 		cmp	rax, 3	# tmp699,
 5289 219b 7442     		je	.L544	#,
 5290 219d 4883F804 		cmp	rax, 4	# tmp699,
GAS LISTING /tmp/cctyCFAS.s 			page 154


 5291 21a1 7430     		je	.L545	#,
 5292 21a3 4883F805 		cmp	rax, 5	# tmp699,
 5293 21a7 741E     		je	.L546	#,
 5294 21a9 4883F806 		cmp	rax, 6	# tmp699,
 5295 21ad 740C     		je	.L547	#,
 831:sieve_extend.c **** 
 5296              		.loc 1 831 9 is_stmt 1 view .LVU1780
 5297              	# sieve_extend.c:831:         bitarray[copy_word] = bitarray[source_word];
 831:sieve_extend.c **** 
 5298              		.loc 1 831 39 is_stmt 0 view .LVU1781
 5299 21af 4F8B1CE8 		mov	r11, QWORD PTR [r8+r13*8]	# _170, MEM[base: _54, index: _569, step: 8, offset: 0B]
 5300 21b3 4983C008 		add	r8, 8	# ivtmp.305,
 5301              	# sieve_extend.c:831:         bitarray[copy_word] = bitarray[source_word];
 831:sieve_extend.c **** 
 5302              		.loc 1 831 29 view .LVU1782
 5303 21b7 4D8958F8 		mov	QWORD PTR -8[r8], r11	# MEM[base: _54, offset: 0B], _170
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5304              		.loc 1 830 48 is_stmt 1 view .LVU1783
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5305              		.loc 1 830 11 view .LVU1784
 5306              	.L547:
 831:sieve_extend.c **** 
 5307              		.loc 1 831 9 view .LVU1785
 5308              	# sieve_extend.c:831:         bitarray[copy_word] = bitarray[source_word];
 831:sieve_extend.c **** 
 5309              		.loc 1 831 39 is_stmt 0 view .LVU1786
 5310 21bb 4B8B0CE8 		mov	rcx, QWORD PTR [r8+r13*8]	# _170, MEM[base: _54, index: _569, step: 8, offset: 0B]
 5311 21bf 4983C008 		add	r8, 8	# ivtmp.305,
 5312              	# sieve_extend.c:831:         bitarray[copy_word] = bitarray[source_word];
 831:sieve_extend.c **** 
 5313              		.loc 1 831 29 view .LVU1787
 5314 21c3 498948F8 		mov	QWORD PTR -8[r8], rcx	# MEM[base: _54, offset: 0B], _170
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5315              		.loc 1 830 48 is_stmt 1 view .LVU1788
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5316              		.loc 1 830 11 view .LVU1789
 5317              	.L546:
 831:sieve_extend.c **** 
 5318              		.loc 1 831 9 view .LVU1790
 5319              	# sieve_extend.c:831:         bitarray[copy_word] = bitarray[source_word];
 831:sieve_extend.c **** 
 5320              		.loc 1 831 39 is_stmt 0 view .LVU1791
 5321 21c7 4F8B34E8 		mov	r14, QWORD PTR [r8+r13*8]	# _170, MEM[base: _54, index: _569, step: 8, offset: 0B]
 5322 21cb 4983C008 		add	r8, 8	# ivtmp.305,
 5323              	# sieve_extend.c:831:         bitarray[copy_word] = bitarray[source_word];
 831:sieve_extend.c **** 
 5324              		.loc 1 831 29 view .LVU1792
 5325 21cf 4D8970F8 		mov	QWORD PTR -8[r8], r14	# MEM[base: _54, offset: 0B], _170
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5326              		.loc 1 830 48 is_stmt 1 view .LVU1793
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5327              		.loc 1 830 11 view .LVU1794
 5328              	.L545:
 831:sieve_extend.c **** 
 5329              		.loc 1 831 9 view .LVU1795
 5330              	# sieve_extend.c:831:         bitarray[copy_word] = bitarray[source_word];
 831:sieve_extend.c **** 
GAS LISTING /tmp/cctyCFAS.s 			page 155


 5331              		.loc 1 831 39 is_stmt 0 view .LVU1796
 5332 21d3 4F8B3CE8 		mov	r15, QWORD PTR [r8+r13*8]	# _170, MEM[base: _54, index: _569, step: 8, offset: 0B]
 5333 21d7 4983C008 		add	r8, 8	# ivtmp.305,
 5334              	# sieve_extend.c:831:         bitarray[copy_word] = bitarray[source_word];
 831:sieve_extend.c **** 
 5335              		.loc 1 831 29 view .LVU1797
 5336 21db 4D8978F8 		mov	QWORD PTR -8[r8], r15	# MEM[base: _54, offset: 0B], _170
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5337              		.loc 1 830 48 is_stmt 1 view .LVU1798
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5338              		.loc 1 830 11 view .LVU1799
 5339              	.L544:
 831:sieve_extend.c **** 
 5340              		.loc 1 831 9 view .LVU1800
 5341              	# sieve_extend.c:831:         bitarray[copy_word] = bitarray[source_word];
 831:sieve_extend.c **** 
 5342              		.loc 1 831 39 is_stmt 0 view .LVU1801
 5343 21df 4B8B3CE8 		mov	rdi, QWORD PTR [r8+r13*8]	# _170, MEM[base: _54, index: _569, step: 8, offset: 0B]
 5344 21e3 4983C008 		add	r8, 8	# ivtmp.305,
 5345              	# sieve_extend.c:831:         bitarray[copy_word] = bitarray[source_word];
 831:sieve_extend.c **** 
 5346              		.loc 1 831 29 view .LVU1802
 5347 21e7 498978F8 		mov	QWORD PTR -8[r8], rdi	# MEM[base: _54, offset: 0B], _170
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5348              		.loc 1 830 48 is_stmt 1 view .LVU1803
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5349              		.loc 1 830 11 view .LVU1804
 5350              	.L543:
 831:sieve_extend.c **** 
 5351              		.loc 1 831 9 view .LVU1805
 5352              	# sieve_extend.c:831:         bitarray[copy_word] = bitarray[source_word];
 831:sieve_extend.c **** 
 5353              		.loc 1 831 39 is_stmt 0 view .LVU1806
 5354 21eb 4F8B24E8 		mov	r12, QWORD PTR [r8+r13*8]	# _170, MEM[base: _54, index: _569, step: 8, offset: 0B]
 5355 21ef 4983C008 		add	r8, 8	# ivtmp.305,
 5356              	# sieve_extend.c:831:         bitarray[copy_word] = bitarray[source_word];
 831:sieve_extend.c **** 
 5357              		.loc 1 831 29 view .LVU1807
 5358 21f3 4D8960F8 		mov	QWORD PTR -8[r8], r12	# MEM[base: _54, offset: 0B], _170
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5359              		.loc 1 830 48 is_stmt 1 view .LVU1808
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5360              		.loc 1 830 11 view .LVU1809
 5361              	.L542:
 831:sieve_extend.c **** 
 5362              		.loc 1 831 9 view .LVU1810
 5363              	# sieve_extend.c:831:         bitarray[copy_word] = bitarray[source_word];
 831:sieve_extend.c **** 
 5364              		.loc 1 831 39 is_stmt 0 view .LVU1811
 5365 21f7 4F8B0CE8 		mov	r9, QWORD PTR [r8+r13*8]	# _170, MEM[base: _54, index: _569, step: 8, offset: 0B]
 5366 21fb 4983C008 		add	r8, 8	# ivtmp.305,
 5367              	# sieve_extend.c:831:         bitarray[copy_word] = bitarray[source_word];
 831:sieve_extend.c **** 
 5368              		.loc 1 831 29 view .LVU1812
 5369 21ff 4D8948F8 		mov	QWORD PTR -8[r8], r9	# MEM[base: _54, offset: 0B], _170
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5370              		.loc 1 830 48 is_stmt 1 view .LVU1813
GAS LISTING /tmp/cctyCFAS.s 			page 156


 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5371              		.loc 1 830 11 view .LVU1814
 5372              	# sieve_extend.c:830:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5373              		.loc 1 830 5 is_stmt 0 view .LVU1815
 5374 2203 4939D8   		cmp	r8, rbx	# ivtmp.305, _574
 5375 2206 0F85BC00 		jne	.L395	#,
 5375      0000
 5376              	.LVL246:
 5377              	.L624:
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5378              		.loc 1 830 5 view .LVU1816
 5379 220c C5F877   		vzeroupper
 5380              	# sieve_extend.c:834:  }
 834:sieve_extend.c **** 
 5381              		.loc 1 834 2 view .LVU1817
 5382 220f 488D65D8 		lea	rsp, -40[rbp]	#,
 5383              	.LVL247:
 834:sieve_extend.c **** 
 5384              		.loc 1 834 2 view .LVU1818
 5385 2213 5B       		pop	rbx	#
 5386 2214 415C     		pop	r12	#
 5387 2216 415D     		pop	r13	#
 5388 2218 415E     		pop	r14	#
 5389 221a 415F     		pop	r15	#
 5390 221c 5D       		pop	rbp	#
 5391              		.cfi_remember_state
 5392              		.cfi_def_cfa 7, 8
 5393              	.LVL248:
 834:sieve_extend.c **** 
 5394              		.loc 1 834 2 view .LVU1819
 5395 221d C3       		ret	
 5396              	.LVL249:
 5397 221e 6690     		.p2align 4,,10
 5398              		.p2align 3
 5399              	.L627:
 5400              		.cfi_restore_state
 5401              	.LBB341:
 5402              	.LBB320:
 5403              	.LBB308:
 654:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5404              		.loc 1 654 9 is_stmt 1 view .LVU1820
 655:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5405              		.loc 1 655 9 view .LVU1821
 5406              	# sieve_extend.c:654:         bitword_t source0 = bitarray[source_word  ];
 654:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5407              		.loc 1 654 19 is_stmt 0 view .LVU1822
 5408 2220 C5FE6F71 		vmovdqu	ymm6, YMMWORD PTR 64[rcx]	# tmp1313, MEM[base: vectp.284_427, index: ivtmp.359_621, offset
 5408      40
 5409              	# sieve_extend.c:655:         bitword_t source1 = bitarray[source_word+1];
 655:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5410              		.loc 1 655 19 view .LVU1823
 5411 2225 C57E6F4A 		vmovdqu	ymm9, YMMWORD PTR 64[rdx]	# MEM[base: vectp.288_436, index: ivtmp.359_621, offset: 0B], ME
 5411      40
 5412 222a C57E6F52 		vmovdqu	ymm10, YMMWORD PTR 96[rdx]	# MEM[base: vectp.288_436, index: ivtmp.359_621, offset: 32B], 
 5412      60
 5413              	# sieve_extend.c:654:         bitword_t source0 = bitarray[source_word  ];
GAS LISTING /tmp/cctyCFAS.s 			page 157


 654:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5414              		.loc 1 654 19 view .LVU1824
 5415 222f C54D6C61 		vpunpcklqdq	ymm12, ymm6, YMMWORD PTR 96[rcx]	# tmp1091, tmp1313, MEM[base: vectp.284_427, index: i
 5415      60
 5416              	# sieve_extend.c:655:         bitword_t source1 = bitarray[source_word+1];
 655:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5417              		.loc 1 655 19 view .LVU1825
 5418 2234 C4C1356C 		vpunpcklqdq	ymm2, ymm9, ymm10	# tmp1087, MEM[base: vectp.288_436, index: ivtmp.359_621, offset: 0B
 5418      D2
 5419 2239 C441356D 		vpunpckhqdq	ymm8, ymm9, ymm10	# tmp1102, MEM[base: vectp.288_436, index: ivtmp.359_621, offset: 0B
 5419      C2
 5420 223e C463FD00 		vpermq	ymm11, ymm2, 216	# vect_perm_even_444, tmp1087,
 5420      DAD8
 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5421              		.loc 1 656 9 is_stmt 1 view .LVU1826
 5422              	# sieve_extend.c:654:         bitword_t source0 = bitarray[source_word  ];
 654:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5423              		.loc 1 654 19 is_stmt 0 view .LVU1827
 5424 2244 C443FD00 		vpermq	ymm13, ymm12, 216	# tmp1092, tmp1091,
 5424      ECD8
 5425              	# sieve_extend.c:655:         bitword_t source1 = bitarray[source_word+1];
 655:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5426              		.loc 1 655 19 view .LVU1828
 5427 224a C4C3FD00 		vpermq	ymm7, ymm8, 216	# tmp1103, tmp1102,
 5427      F8D8
 5428              	# sieve_extend.c:656:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5429              		.loc 1 656 42 view .LVU1829
 5430 2250 C515D3F3 		vpsrlq	ymm14, ymm13, xmm3	# vect__98.291, tmp1092, _12
 5431              	# sieve_extend.c:656:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5432              		.loc 1 656 63 view .LVU1830
 5433 2254 C525F3FC 		vpsllq	ymm15, ymm11, xmm4	# vect__100.292, vect_perm_even_444, _18
 5434              	# sieve_extend.c:658:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 658:sieve_extend.c ****         copy_word += 2;
 5435              		.loc 1 658 63 view .LVU1831
 5436 2258 C545F3CC 		vpsllq	ymm9, ymm7, xmm4	# vect__110.295, tmp1103, _18
 5437              	# sieve_extend.c:658:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 658:sieve_extend.c ****         copy_word += 2;
 5438              		.loc 1 658 42 view .LVU1832
 5439 225c C525D3D3 		vpsrlq	ymm10, ymm11, xmm3	# vect__109.294, vect_perm_even_444, _12
 5440              	# sieve_extend.c:656:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5441              		.loc 1 656 52 view .LVU1833
 5442 2260 C4C10DEB 		vpor	ymm1, ymm14, ymm15	# vect__104.293, vect__98.291, vect__100.292
 5442      CF
 5443              	# sieve_extend.c:658:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 658:sieve_extend.c ****         copy_word += 2;
 5444              		.loc 1 658 52 view .LVU1834
 5445 2265 C4C135EB 		vpor	ymm2, ymm9, ymm10	# vect__114.296, vect__110.295, vect__109.294
 5445      D2
 5446              	# sieve_extend.c:656:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5447              		.loc 1 656 31 view .LVU1835
 5448 226a C4E37D39 		vextracti128	xmm5, ymm1, 0x1	# tmp1099, vect__104.293
 5448      CD01
 5449              	# sieve_extend.c:658:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
GAS LISTING /tmp/cctyCFAS.s 			page 158


 658:sieve_extend.c ****         copy_word += 2;
 5450              		.loc 1 658 31 view .LVU1836
 5451 2270 C4E37D39 		vextracti128	xmm6, ymm2, 0x1	# tmp1110, vect__114.296
 5451      D601
 5452 2276 48837C24 		cmp	QWORD PTR 64[rsp], 2	# %sfp,
 5452      4002
 5453              	# sieve_extend.c:656:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5454              		.loc 1 656 31 view .LVU1837
 5455 227c C4C179D6 		vmovq	QWORD PTR 64[r10], xmm1	# MEM[base: _450, index: ivtmp.359_621, offset: 0B], tmp1096
 5455      4A40
 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5456              		.loc 1 656 31 view .LVU1838
 5457 2282 C4C179D6 		vmovq	QWORD PTR 96[r10], xmm5	# MEM[base: _450, index: ivtmp.359_621, offset: 32B], tmp1099
 5457      6A60
 5458 2288 C4C3F916 		vpextrq	QWORD PTR 80[r10], xmm1, 1	# MEM[base: _450, index: ivtmp.359_621, offset: 16B], tmp1096
 5458      4A5001
 5459 228f C4C3F916 		vpextrq	QWORD PTR 112[r10], xmm5, 1	# MEM[base: _450, index: ivtmp.359_621, offset: 48B], tmp1099
 5459      6A7001
 657:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 5460              		.loc 1 657 9 is_stmt 1 view .LVU1839
 658:sieve_extend.c ****         copy_word += 2;
 5461              		.loc 1 658 9 view .LVU1840
 5462 2296 41B80200 		mov	r8d, 2	# ivtmp.357,
 5462      0000
 5463              	# sieve_extend.c:658:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 658:sieve_extend.c ****         copy_word += 2;
 5464              		.loc 1 658 31 is_stmt 0 view .LVU1841
 5465 229c C5F9D657 		vmovq	QWORD PTR 64[rdi], xmm2	# MEM[base: _470, index: ivtmp.359_621, offset: 0B], tmp1107
 5465      40
 658:sieve_extend.c ****         copy_word += 2;
 5466              		.loc 1 658 31 view .LVU1842
 5467 22a1 C5F9D677 		vmovq	QWORD PTR 96[rdi], xmm6	# MEM[base: _470, index: ivtmp.359_621, offset: 32B], tmp1110
 5467      60
 5468 22a6 41B98000 		mov	r9d, 128	# ivtmp.359,
 5468      0000
 5469 22ac C4E3F916 		vpextrq	QWORD PTR 80[rdi], xmm2, 1	# MEM[base: _470, index: ivtmp.359_621, offset: 16B], tmp1107
 5469      575001
 5470 22b3 C4E3F916 		vpextrq	QWORD PTR 112[rdi], xmm6, 1	# MEM[base: _470, index: ivtmp.359_621, offset: 48B], tmp1110
 5470      777001
 659:sieve_extend.c ****         source_word += 2;
 5471              		.loc 1 659 9 is_stmt 1 view .LVU1843
 660:sieve_extend.c ****         distance += 2;
 5472              		.loc 1 660 9 view .LVU1844
 661:sieve_extend.c ****     }
 5473              		.loc 1 661 9 view .LVU1845
 661:sieve_extend.c ****     }
 5474              		.loc 1 661 9 is_stmt 0 view .LVU1846
 5475              	.LBE308:
 653:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 5476              		.loc 1 653 11 is_stmt 1 view .LVU1847
 5477 22ba 0F87E4F4 		ja	.L620	#,
 5477      FFFF
 5478 22c0 E920F6FF 		jmp	.L594	#
 5478      FF
 5479              	.LVL250:
 5480              		.p2align 4,,10
GAS LISTING /tmp/cctyCFAS.s 			page 159


 5481 22c5 0F1F00   		.p2align 3
 5482              	.L395:
 653:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 5483              		.loc 1 653 11 is_stmt 0 view .LVU1848
 5484              	.LBE320:
 5485              	.LBE341:
 831:sieve_extend.c **** 
 5486              		.loc 1 831 9 is_stmt 1 view .LVU1849
 5487              	# sieve_extend.c:831:         bitarray[copy_word] = bitarray[source_word];
 831:sieve_extend.c **** 
 5488              		.loc 1 831 39 is_stmt 0 view .LVU1850
 5489 22c8 4B8B14E8 		mov	rdx, QWORD PTR [r8+r13*8]	# _170, MEM[base: _54, index: _569, step: 8, offset: 0B]
 5490              	# sieve_extend.c:831:         bitarray[copy_word] = bitarray[source_word];
 831:sieve_extend.c **** 
 5491              		.loc 1 831 29 view .LVU1851
 5492 22cc 498910   		mov	QWORD PTR [r8], rdx	# MEM[base: _54, offset: 0B], _170
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5493              		.loc 1 830 48 is_stmt 1 view .LVU1852
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5494              		.loc 1 830 11 view .LVU1853
 831:sieve_extend.c **** 
 5495              		.loc 1 831 9 view .LVU1854
 5496              	# sieve_extend.c:831:         bitarray[copy_word] = bitarray[source_word];
 831:sieve_extend.c **** 
 5497              		.loc 1 831 39 is_stmt 0 view .LVU1855
 5498 22cf 4F8B54E8 		mov	r10, QWORD PTR 8[r8+r13*8]	# _170, MEM[base: _54, index: _569, step: 8, offset: 0B]
 5498      08
 5499              	# sieve_extend.c:831:         bitarray[copy_word] = bitarray[source_word];
 831:sieve_extend.c **** 
 5500              		.loc 1 831 29 view .LVU1856
 5501 22d4 4D895008 		mov	QWORD PTR 8[r8], r10	# MEM[base: _54, offset: 0B], _170
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5502              		.loc 1 830 48 is_stmt 1 view .LVU1857
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5503              		.loc 1 830 11 view .LVU1858
 831:sieve_extend.c **** 
 5504              		.loc 1 831 9 view .LVU1859
 5505              	# sieve_extend.c:831:         bitarray[copy_word] = bitarray[source_word];
 831:sieve_extend.c **** 
 5506              		.loc 1 831 39 is_stmt 0 view .LVU1860
 5507 22d8 4B8B74E8 		mov	rsi, QWORD PTR 16[r8+r13*8]	# _170, MEM[base: _54, index: _569, step: 8, offset: 0B]
 5507      10
 5508              	# sieve_extend.c:831:         bitarray[copy_word] = bitarray[source_word];
 831:sieve_extend.c **** 
 5509              		.loc 1 831 29 view .LVU1861
 5510 22dd 49897010 		mov	QWORD PTR 16[r8], rsi	# MEM[base: _54, offset: 0B], _170
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5511              		.loc 1 830 48 is_stmt 1 view .LVU1862
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5512              		.loc 1 830 11 view .LVU1863
 831:sieve_extend.c **** 
 5513              		.loc 1 831 9 view .LVU1864
 5514              	# sieve_extend.c:831:         bitarray[copy_word] = bitarray[source_word];
 831:sieve_extend.c **** 
 5515              		.loc 1 831 39 is_stmt 0 view .LVU1865
 5516 22e1 4B8B44E8 		mov	rax, QWORD PTR 24[r8+r13*8]	# _170, MEM[base: _54, index: _569, step: 8, offset: 0B]
 5516      18
GAS LISTING /tmp/cctyCFAS.s 			page 160


 5517              	# sieve_extend.c:831:         bitarray[copy_word] = bitarray[source_word];
 831:sieve_extend.c **** 
 5518              		.loc 1 831 29 view .LVU1866
 5519 22e6 49894018 		mov	QWORD PTR 24[r8], rax	# MEM[base: _54, offset: 0B], _170
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5520              		.loc 1 830 48 is_stmt 1 view .LVU1867
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5521              		.loc 1 830 11 view .LVU1868
 831:sieve_extend.c **** 
 5522              		.loc 1 831 9 view .LVU1869
 5523              	# sieve_extend.c:831:         bitarray[copy_word] = bitarray[source_word];
 831:sieve_extend.c **** 
 5524              		.loc 1 831 39 is_stmt 0 view .LVU1870
 5525 22ea 4F8B5CE8 		mov	r11, QWORD PTR 32[r8+r13*8]	# _170, MEM[base: _54, index: _569, step: 8, offset: 0B]
 5525      20
 5526              	# sieve_extend.c:831:         bitarray[copy_word] = bitarray[source_word];
 831:sieve_extend.c **** 
 5527              		.loc 1 831 29 view .LVU1871
 5528 22ef 4D895820 		mov	QWORD PTR 32[r8], r11	# MEM[base: _54, offset: 0B], _170
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5529              		.loc 1 830 48 is_stmt 1 view .LVU1872
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5530              		.loc 1 830 11 view .LVU1873
 831:sieve_extend.c **** 
 5531              		.loc 1 831 9 view .LVU1874
 5532              	# sieve_extend.c:831:         bitarray[copy_word] = bitarray[source_word];
 831:sieve_extend.c **** 
 5533              		.loc 1 831 39 is_stmt 0 view .LVU1875
 5534 22f3 4B8B4CE8 		mov	rcx, QWORD PTR 40[r8+r13*8]	# _170, MEM[base: _54, index: _569, step: 8, offset: 0B]
 5534      28
 5535              	# sieve_extend.c:831:         bitarray[copy_word] = bitarray[source_word];
 831:sieve_extend.c **** 
 5536              		.loc 1 831 29 view .LVU1876
 5537 22f8 49894828 		mov	QWORD PTR 40[r8], rcx	# MEM[base: _54, offset: 0B], _170
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5538              		.loc 1 830 48 is_stmt 1 view .LVU1877
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5539              		.loc 1 830 11 view .LVU1878
 831:sieve_extend.c **** 
 5540              		.loc 1 831 9 view .LVU1879
 5541              	# sieve_extend.c:831:         bitarray[copy_word] = bitarray[source_word];
 831:sieve_extend.c **** 
 5542              		.loc 1 831 39 is_stmt 0 view .LVU1880
 5543 22fc 4F8B74E8 		mov	r14, QWORD PTR 48[r8+r13*8]	# _170, MEM[base: _54, index: _569, step: 8, offset: 0B]
 5543      30
 5544              	# sieve_extend.c:831:         bitarray[copy_word] = bitarray[source_word];
 831:sieve_extend.c **** 
 5545              		.loc 1 831 29 view .LVU1881
 5546 2301 4D897030 		mov	QWORD PTR 48[r8], r14	# MEM[base: _54, offset: 0B], _170
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5547              		.loc 1 830 48 is_stmt 1 view .LVU1882
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5548              		.loc 1 830 11 view .LVU1883
 831:sieve_extend.c **** 
 5549              		.loc 1 831 9 view .LVU1884
 5550              	# sieve_extend.c:831:         bitarray[copy_word] = bitarray[source_word];
 831:sieve_extend.c **** 
GAS LISTING /tmp/cctyCFAS.s 			page 161


 5551              		.loc 1 831 39 is_stmt 0 view .LVU1885
 5552 2305 4F8B7CE8 		mov	r15, QWORD PTR 56[r8+r13*8]	# _170, MEM[base: _54, index: _569, step: 8, offset: 0B]
 5552      38
 5553 230a 4983C040 		add	r8, 64	# ivtmp.305,
 5554              	# sieve_extend.c:831:         bitarray[copy_word] = bitarray[source_word];
 831:sieve_extend.c **** 
 5555              		.loc 1 831 29 view .LVU1886
 5556 230e 4D8978F8 		mov	QWORD PTR -8[r8], r15	# MEM[base: _54, offset: 0B], _170
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5557              		.loc 1 830 48 is_stmt 1 view .LVU1887
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5558              		.loc 1 830 11 view .LVU1888
 5559              	# sieve_extend.c:830:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5560              		.loc 1 830 5 is_stmt 0 view .LVU1889
 5561 2312 4939D8   		cmp	r8, rbx	# ivtmp.305, _574
 5562 2315 75B1     		jne	.L395	#,
 5563 2317 E9F0FEFF 		jmp	.L624	#
 5563      FF
 5564              	.LVL251:
 5565 231c 0F1F4000 		.p2align 4,,10
 5566              		.p2align 3
 5567              	.L382:
 830:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5568              		.loc 1 830 5 view .LVU1890
 5569 2320 488B7C24 		mov	rdi, QWORD PTR 88[rsp]	# _183, %sfp
 5569      58
 5570 2325 4C8B5424 		mov	r10, QWORD PTR 56[rsp]	# tmp653, %sfp
 5570      38
 5571 232a 4801D9   		add	rcx, rbx	# ivtmp.327, bitarray
 5572 232d 4901FA   		add	r10, rdi	# tmp653, _183
 5573 2330 4E8D44D3 		lea	r8, 8[rbx+r10*8]	# tmp656,
 5573      08
 5574 2335 4929F0   		sub	r8, rsi	# tmp656, _33
 5575 2338 4C89C6   		mov	rsi, r8	# _602, tmp656
 5576 233b 4929C8   		sub	r8, rcx	# tmp708, ivtmp.327
 5577 233e 4983E808 		sub	r8, 8	# tmp709,
 5578 2342 49C1E803 		shr	r8, 3	# tmp707,
 5579 2346 49FFC0   		inc	r8	# tmp710
 5580              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 5581              		.loc 1 817 29 view .LVU1891
 5582 2349 4829F8   		sub	rax, rdi	# tmp657, _183
 5583 234c 4183E007 		and	r8d, 7	# tmp711,
 5584 2350 0F84CF00 		je	.L385	#,
 5584      0000
 5585 2356 4983F801 		cmp	r8, 1	# tmp711,
 5586 235a 0F84A600 		je	.L529	#,
 5586      0000
 5587 2360 4983F802 		cmp	r8, 2	# tmp711,
 5588 2364 0F848600 		je	.L530	#,
 5588      0000
 5589 236a 4983F803 		cmp	r8, 3	# tmp711,
 5590 236e 746A     		je	.L531	#,
 5591 2370 4983F804 		cmp	r8, 4	# tmp711,
 5592 2374 744E     		je	.L532	#,
 5593 2376 4983F805 		cmp	r8, 5	# tmp711,
GAS LISTING /tmp/cctyCFAS.s 			page 162


 5594 237a 7432     		je	.L533	#,
 5595 237c 4983F806 		cmp	r8, 6	# tmp711,
 5596 2380 7416     		je	.L534	#,
 817:sieve_extend.c ****     }
 5597              		.loc 1 817 9 is_stmt 1 view .LVU1892
 5598              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 5599              		.loc 1 817 56 is_stmt 0 view .LVU1893
 5600 2382 C4629BF7 		shrx	r11, QWORD PTR [rcx], r12	# tmp987, MEM[base: _593, offset: 0B], _12
 5600      19
 5601              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 5602              		.loc 1 817 94 view .LVU1894
 5603 2387 C4E291F7 		shlx	rdx, QWORD PTR 8[rcx], r13	# tmp989, MEM[base: _593, offset: 8B], _18
 5603      5108
 5604              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 5605              		.loc 1 817 66 view .LVU1895
 5606 238d 4909D3   		or	r11, rdx	# tmp990, tmp989
 5607 2390 4C891CC1 		mov	QWORD PTR [rcx+rax*8], r11	# MEM[base: _593, index: _595, step: 8, offset: 0B], tmp990
 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5608              		.loc 1 816 43 is_stmt 1 view .LVU1896
 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5609              		.loc 1 816 11 view .LVU1897
 5610 2394 4883C108 		add	rcx, 8	# ivtmp.327,
 5611              	.L534:
 817:sieve_extend.c ****     }
 5612              		.loc 1 817 9 view .LVU1898
 5613              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 5614              		.loc 1 817 56 is_stmt 0 view .LVU1899
 5615 2398 C4629BF7 		shrx	r14, QWORD PTR [rcx], r12	# tmp992, MEM[base: _593, offset: 0B], _12
 5615      31
 5616              	.LVL252:
 5617              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 5618              		.loc 1 817 94 view .LVU1900
 5619 239d C46291F7 		shlx	r9, QWORD PTR 8[rcx], r13	# tmp994, MEM[base: _593, offset: 8B], _18
 5619      4908
 5620              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 5621              		.loc 1 817 66 view .LVU1901
 5622 23a3 4D09CE   		or	r14, r9	# tmp995, tmp994
 5623 23a6 4C8934C1 		mov	QWORD PTR [rcx+rax*8], r14	# MEM[base: _593, index: _595, step: 8, offset: 0B], tmp995
 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5624              		.loc 1 816 43 is_stmt 1 view .LVU1902
 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5625              		.loc 1 816 11 view .LVU1903
 5626 23aa 4883C108 		add	rcx, 8	# ivtmp.327,
 5627              	.L533:
 817:sieve_extend.c ****     }
 5628              		.loc 1 817 9 view .LVU1904
 5629              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 5630              		.loc 1 817 56 is_stmt 0 view .LVU1905
 5631 23ae C4629BF7 		shrx	r15, QWORD PTR [rcx], r12	# tmp997, MEM[base: _593, offset: 0B], _12
 5631      39
GAS LISTING /tmp/cctyCFAS.s 			page 163


 5632              	.LVL253:
 5633              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 5634              		.loc 1 817 94 view .LVU1906
 5635 23b3 C46291F7 		shlx	r10, QWORD PTR 8[rcx], r13	# tmp999, MEM[base: _593, offset: 8B], _18
 5635      5108
 5636              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 5637              		.loc 1 817 66 view .LVU1907
 5638 23b9 4D09D7   		or	r15, r10	# tmp1000, tmp999
 5639 23bc 4C893CC1 		mov	QWORD PTR [rcx+rax*8], r15	# MEM[base: _593, index: _595, step: 8, offset: 0B], tmp1000
 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5640              		.loc 1 816 43 is_stmt 1 view .LVU1908
 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5641              		.loc 1 816 11 view .LVU1909
 5642 23c0 4883C108 		add	rcx, 8	# ivtmp.327,
 5643              	.L532:
 817:sieve_extend.c ****     }
 5644              		.loc 1 817 9 view .LVU1910
 5645              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 5646              		.loc 1 817 56 is_stmt 0 view .LVU1911
 5647 23c4 C4629BF7 		shrx	r8, QWORD PTR [rcx], r12	# tmp1002, MEM[base: _593, offset: 0B], _12
 5647      01
 5648              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 5649              		.loc 1 817 94 view .LVU1912
 5650 23c9 C4E291F7 		shlx	rdi, QWORD PTR 8[rcx], r13	# tmp1004, MEM[base: _593, offset: 8B], _18
 5650      7908
 5651              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 5652              		.loc 1 817 66 view .LVU1913
 5653 23cf 4909F8   		or	r8, rdi	# tmp1005, tmp1004
 5654 23d2 4C8904C1 		mov	QWORD PTR [rcx+rax*8], r8	# MEM[base: _593, index: _595, step: 8, offset: 0B], tmp1005
 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5655              		.loc 1 816 43 is_stmt 1 view .LVU1914
 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5656              		.loc 1 816 11 view .LVU1915
 5657 23d6 4883C108 		add	rcx, 8	# ivtmp.327,
 5658              	.L531:
 817:sieve_extend.c ****     }
 5659              		.loc 1 817 9 view .LVU1916
 5660              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 5661              		.loc 1 817 56 is_stmt 0 view .LVU1917
 5662 23da C4629BF7 		shrx	r11, QWORD PTR [rcx], r12	# tmp1007, MEM[base: _593, offset: 0B], _12
 5662      19
 5663              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 5664              		.loc 1 817 94 view .LVU1918
 5665 23df C4E291F7 		shlx	rdx, QWORD PTR 8[rcx], r13	# tmp1009, MEM[base: _593, offset: 8B], _18
 5665      5108
 5666              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 5667              		.loc 1 817 66 view .LVU1919
 5668 23e5 4909D3   		or	r11, rdx	# tmp1010, tmp1009
 5669 23e8 4C891CC1 		mov	QWORD PTR [rcx+rax*8], r11	# MEM[base: _593, index: _595, step: 8, offset: 0B], tmp1010
GAS LISTING /tmp/cctyCFAS.s 			page 164


 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5670              		.loc 1 816 43 is_stmt 1 view .LVU1920
 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5671              		.loc 1 816 11 view .LVU1921
 5672 23ec 4883C108 		add	rcx, 8	# ivtmp.327,
 5673              	.L530:
 817:sieve_extend.c ****     }
 5674              		.loc 1 817 9 view .LVU1922
 5675              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 5676              		.loc 1 817 56 is_stmt 0 view .LVU1923
 5677 23f0 C4629BF7 		shrx	r14, QWORD PTR [rcx], r12	# tmp1012, MEM[base: _593, offset: 0B], _12
 5677      31
 5678              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 5679              		.loc 1 817 94 view .LVU1924
 5680 23f5 C46291F7 		shlx	r9, QWORD PTR 8[rcx], r13	# tmp1014, MEM[base: _593, offset: 8B], _18
 5680      4908
 5681              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 5682              		.loc 1 817 66 view .LVU1925
 5683 23fb 4D09CE   		or	r14, r9	# tmp1015, tmp1014
 5684 23fe 4C8934C1 		mov	QWORD PTR [rcx+rax*8], r14	# MEM[base: _593, index: _595, step: 8, offset: 0B], tmp1015
 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5685              		.loc 1 816 43 is_stmt 1 view .LVU1926
 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5686              		.loc 1 816 11 view .LVU1927
 5687 2402 4883C108 		add	rcx, 8	# ivtmp.327,
 5688              	.L529:
 817:sieve_extend.c ****     }
 5689              		.loc 1 817 9 view .LVU1928
 5690              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 5691              		.loc 1 817 56 is_stmt 0 view .LVU1929
 5692 2406 C4629BF7 		shrx	r15, QWORD PTR [rcx], r12	# tmp1017, MEM[base: _593, offset: 0B], _12
 5692      39
 5693              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 5694              		.loc 1 817 94 view .LVU1930
 5695 240b C46291F7 		shlx	r10, QWORD PTR 8[rcx], r13	# tmp1019, MEM[base: _593, offset: 8B], _18
 5695      5108
 5696              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 5697              		.loc 1 817 66 view .LVU1931
 5698 2411 4D09D7   		or	r15, r10	# tmp1020, tmp1019
 5699 2414 4C893CC1 		mov	QWORD PTR [rcx+rax*8], r15	# MEM[base: _593, index: _595, step: 8, offset: 0B], tmp1020
 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5700              		.loc 1 816 43 is_stmt 1 view .LVU1932
 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5701              		.loc 1 816 11 view .LVU1933
 5702 2418 4883C108 		add	rcx, 8	# ivtmp.327,
 5703              	# sieve_extend.c:816:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5704              		.loc 1 816 5 is_stmt 0 view .LVU1934
 5705 241c 4839F1   		cmp	rcx, rsi	# ivtmp.327, _602
 5706 241f 0F84C000 		je	.L601	#,
 5706      0000
GAS LISTING /tmp/cctyCFAS.s 			page 165


 5707              	.L385:
 817:sieve_extend.c ****     }
 5708              		.loc 1 817 9 is_stmt 1 view .LVU1935
 5709              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 5710              		.loc 1 817 94 is_stmt 0 view .LVU1936
 5711 2425 C4E291F7 		shlx	rdi, QWORD PTR 8[rcx], r13	# tmp660, MEM[base: _593, offset: 8B], _18
 5711      7908
 5712              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 5713              		.loc 1 817 56 view .LVU1937
 5714 242b C4629BF7 		shrx	r8, QWORD PTR [rcx], r12	# tmp658, MEM[base: _593, offset: 0B], _12
 5714      01
 5715              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 5716              		.loc 1 817 66 view .LVU1938
 5717 2430 4909F8   		or	r8, rdi	# tmp662, tmp660
 5718 2433 4C8904C1 		mov	QWORD PTR [rcx+rax*8], r8	# MEM[base: _593, index: _595, step: 8, offset: 0B], tmp662
 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5719              		.loc 1 816 43 is_stmt 1 view .LVU1939
 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5720              		.loc 1 816 11 view .LVU1940
 5721 2437 4C8D5908 		lea	r11, 8[rcx]	# tmp712,
 817:sieve_extend.c ****     }
 5722              		.loc 1 817 9 view .LVU1941
 5723 243b 4C8D4910 		lea	r9, 16[rcx]	# ivtmp.327,
 5724              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 5725              		.loc 1 817 94 is_stmt 0 view .LVU1942
 5726 243f C44291F7 		shlx	r14, QWORD PTR 8[r11], r13	# tmp885, MEM[base: _593, offset: 8B], _18
 5726      7308
 5727              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 5728              		.loc 1 817 56 view .LVU1943
 5729 2445 C4E29BF7 		shrx	rdx, QWORD PTR 8[rcx], r12	# tmp883, MEM[base: _593, offset: 0B], _12
 5729      5108
 5730              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 5731              		.loc 1 817 66 view .LVU1944
 5732 244b 4C09F2   		or	rdx, r14	# tmp886, tmp885
 5733 244e 498914C3 		mov	QWORD PTR [r11+rax*8], rdx	# MEM[base: _593, index: _595, step: 8, offset: 0B], tmp886
 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5734              		.loc 1 816 43 is_stmt 1 view .LVU1945
 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5735              		.loc 1 816 11 view .LVU1946
 817:sieve_extend.c ****     }
 5736              		.loc 1 817 9 view .LVU1947
 5737 2452 4C8D4118 		lea	r8, 24[rcx]	# ivtmp.327,
 5738 2456 4C8D7120 		lea	r14, 32[rcx]	# ivtmp.327,
 5739              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 5740              		.loc 1 817 94 is_stmt 0 view .LVU1948
 5741 245a C44291F7 		shlx	r10, QWORD PTR 8[r9], r13	# tmp891, MEM[base: _593, offset: 8B], _18
 5741      5108
 5742              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 5743              		.loc 1 817 56 view .LVU1949
GAS LISTING /tmp/cctyCFAS.s 			page 166


 5744 2460 C4629BF7 		shrx	r15, QWORD PTR 16[rcx], r12	# tmp889, MEM[base: _593, offset: 0B], _12
 5744      7910
 5745              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 5746              		.loc 1 817 66 view .LVU1950
 5747 2466 4D09D7   		or	r15, r10	# tmp892, tmp891
 5748 2469 4D893CC1 		mov	QWORD PTR [r9+rax*8], r15	# MEM[base: _593, index: _595, step: 8, offset: 0B], tmp892
 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5749              		.loc 1 816 43 is_stmt 1 view .LVU1951
 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5750              		.loc 1 816 11 view .LVU1952
 817:sieve_extend.c ****     }
 5751              		.loc 1 817 9 view .LVU1953
 5752 246d 4C8D7928 		lea	r15, 40[rcx]	# ivtmp.327,
 5753              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 5754              		.loc 1 817 94 is_stmt 0 view .LVU1954
 5755 2471 C4C291F7 		shlx	rdi, QWORD PTR 8[r8], r13	# tmp897, MEM[base: _593, offset: 8B], _18
 5755      7808
 5756              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 5757              		.loc 1 817 56 view .LVU1955
 5758 2477 C4629BF7 		shrx	r11, QWORD PTR 24[rcx], r12	# tmp895, MEM[base: _593, offset: 0B], _12
 5758      5918
 5759              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 5760              		.loc 1 817 66 view .LVU1956
 5761 247d 4909FB   		or	r11, rdi	# tmp898, tmp897
 5762 2480 4D891CC0 		mov	QWORD PTR [r8+rax*8], r11	# MEM[base: _593, index: _595, step: 8, offset: 0B], tmp898
 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5763              		.loc 1 816 43 is_stmt 1 view .LVU1957
 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5764              		.loc 1 816 11 view .LVU1958
 817:sieve_extend.c ****     }
 5765              		.loc 1 817 9 view .LVU1959
 5766 2484 4C8D5930 		lea	r11, 48[rcx]	# ivtmp.327,
 5767              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 5768              		.loc 1 817 94 is_stmt 0 view .LVU1960
 5769 2488 C44291F7 		shlx	r9, QWORD PTR 8[r14], r13	# tmp903, MEM[base: _593, offset: 8B], _18
 5769      4E08
 5770              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 5771              		.loc 1 817 56 view .LVU1961
 5772 248e C4E29BF7 		shrx	rdx, QWORD PTR 32[rcx], r12	# tmp901, MEM[base: _593, offset: 0B], _12
 5772      5120
 5773              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 5774              		.loc 1 817 66 view .LVU1962
 5775 2494 4C09CA   		or	rdx, r9	# tmp904, tmp903
 5776 2497 498914C6 		mov	QWORD PTR [r14+rax*8], rdx	# MEM[base: _593, index: _595, step: 8, offset: 0B], tmp904
 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5777              		.loc 1 816 43 is_stmt 1 view .LVU1963
 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5778              		.loc 1 816 11 view .LVU1964
 817:sieve_extend.c ****     }
 5779              		.loc 1 817 9 view .LVU1965
GAS LISTING /tmp/cctyCFAS.s 			page 167


 5780 249b 4C8D4938 		lea	r9, 56[rcx]	# ivtmp.327,
 5781 249f 4883C140 		add	rcx, 64	# ivtmp.327,
 5782              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 5783              		.loc 1 817 94 is_stmt 0 view .LVU1966
 5784 24a3 C44291F7 		shlx	r8, QWORD PTR 8[r15], r13	# tmp909, MEM[base: _593, offset: 8B], _18
 5784      4708
 5785              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 5786              		.loc 1 817 56 view .LVU1967
 5787 24a9 C4629BF7 		shrx	r10, QWORD PTR -24[rcx], r12	# tmp907, MEM[base: _593, offset: 0B], _12
 5787      51E8
 5788              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 5789              		.loc 1 817 66 view .LVU1968
 5790 24af 4D09C2   		or	r10, r8	# tmp910, tmp909
 5791 24b2 4D8914C7 		mov	QWORD PTR [r15+rax*8], r10	# MEM[base: _593, index: _595, step: 8, offset: 0B], tmp910
 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5792              		.loc 1 816 43 is_stmt 1 view .LVU1969
 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5793              		.loc 1 816 11 view .LVU1970
 817:sieve_extend.c ****     }
 5794              		.loc 1 817 9 view .LVU1971
 5795              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 5796              		.loc 1 817 56 is_stmt 0 view .LVU1972
 5797 24b6 C4629BF7 		shrx	r14, QWORD PTR -16[rcx], r12	# tmp913, MEM[base: _593, offset: 0B], _12
 5797      71F0
 5798              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 5799              		.loc 1 817 94 view .LVU1973
 5800 24bc C4C291F7 		shlx	rdi, QWORD PTR 8[r11], r13	# tmp915, MEM[base: _593, offset: 8B], _18
 5800      7B08
 5801              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 5802              		.loc 1 817 66 view .LVU1974
 5803 24c2 4909FE   		or	r14, rdi	# tmp916, tmp915
 5804 24c5 4D8934C3 		mov	QWORD PTR [r11+rax*8], r14	# MEM[base: _593, index: _595, step: 8, offset: 0B], tmp916
 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5805              		.loc 1 816 43 is_stmt 1 view .LVU1975
 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5806              		.loc 1 816 11 view .LVU1976
 817:sieve_extend.c ****     }
 5807              		.loc 1 817 9 view .LVU1977
 5808              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 5809              		.loc 1 817 56 is_stmt 0 view .LVU1978
 5810 24c9 C4E29BF7 		shrx	rdx, QWORD PTR -8[rcx], r12	# tmp919, MEM[base: _593, offset: 0B], _12
 5810      51F8
 5811              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 5812              		.loc 1 817 94 view .LVU1979
 5813 24cf C44291F7 		shlx	r15, QWORD PTR 8[r9], r13	# tmp921, MEM[base: _593, offset: 8B], _18
 5813      7908
 5814              	# sieve_extend.c:817:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 817:sieve_extend.c ****     }
 5815              		.loc 1 817 66 view .LVU1980
GAS LISTING /tmp/cctyCFAS.s 			page 168


 5816 24d5 4C09FA   		or	rdx, r15	# tmp922, tmp921
 5817 24d8 498914C1 		mov	QWORD PTR [r9+rax*8], rdx	# MEM[base: _593, index: _595, step: 8, offset: 0B], tmp922
 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5818              		.loc 1 816 43 is_stmt 1 view .LVU1981
 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5819              		.loc 1 816 11 view .LVU1982
 5820              	# sieve_extend.c:816:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5821              		.loc 1 816 5 is_stmt 0 view .LVU1983
 5822 24dc 4839F1   		cmp	rcx, rsi	# ivtmp.327, _602
 5823 24df 0F8540FF 		jne	.L385	#,
 5823      FFFF
 5824              	.L601:
 5825 24e5 488B4424 		mov	rax, QWORD PTR 56[rsp]	# aligned_copy_word, %sfp
 5825      38
 5826 24ea 4C8D5001 		lea	r10, 1[rax]	# ivtmp.319,
 5827 24ee E9C6F8FF 		jmp	.L386	#
 5827      FF
 5828              	.LVL254:
 5829              		.p2align 4,,10
 5830 24f3 0F1F4400 		.p2align 3
 5830      00
 5831              	.L376:
 816:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5832              		.loc 1 816 5 view .LVU1984
 5833 24f8 4801D9   		add	rcx, rbx	# ivtmp.350, bitarray
 5834              	.LBB342:
 5835              	.LBB321:
 5836              	.LBB309:
 5837              	# sieve_extend.c:655:         bitword_t source1 = bitarray[source_word+1];
 655:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5838              		.loc 1 655 19 view .LVU1985
 5839 24fb 488B7108 		mov	rsi, QWORD PTR 8[rcx]	# source1, MEM[base: _616, offset: 8B]
 5840              	# sieve_extend.c:656:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5841              		.loc 1 656 42 view .LVU1986
 5842 24ff C4E29BF7 		shrx	rdx, QWORD PTR [rcx], r12	# tmp609, MEM[base: _616, offset: 0B], _12
 5842      11
 5843              	# sieve_extend.c:656:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5844              		.loc 1 656 63 view .LVU1987
 5845 2504 C4E291F7 		shlx	rdi, rsi, r13	# tmp611, source1, _18
 5845      FE
 5846              	# sieve_extend.c:656:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5847              		.loc 1 656 52 view .LVU1988
 5848 2509 4809FA   		or	rdx, rdi	# tmp612, tmp611
 5849 250c 488914C3 		mov	QWORD PTR [rbx+rax*8], rdx	# MEM[base: bitarray_67(D), index: copy_word_349, step: 8, offset: 
 5850 2510 4C8B4C24 		mov	r9, QWORD PTR 72[rsp]	# fast_loop_stop_word, %sfp
 5850      48
 5851 2515 4989C0   		mov	r8, rax	# tmp720, ivtmp.319
 5852 2518 49F7D0   		not	r8	# tmp720
 5853 251b 4D01C8   		add	r8, r9	# tmp721, fast_loop_stop_word
 5854              	# sieve_extend.c:658:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 658:sieve_extend.c ****         copy_word += 2;
 5855              		.loc 1 658 63 view .LVU1989
 5856 251e C46291F7 		shlx	r10, QWORD PTR 16[rcx], r13	# tmp613, MEM[base: _616, offset: 16B], _18
GAS LISTING /tmp/cctyCFAS.s 			page 169


 5856      5110
 5857 2524 49F7D3   		not	r11	# tmp694
 5858              	.LVL255:
 658:sieve_extend.c ****         copy_word += 2;
 5859              		.loc 1 658 63 view .LVU1990
 5860 2527 49D1E8   		shr	r8	# tmp719
 5861              	# sieve_extend.c:659:         copy_word += 2;
 659:sieve_extend.c ****         source_word += 2;
 5862              		.loc 1 659 19 view .LVU1991
 5863 252a 488D7802 		lea	rdi, 2[rax]	# copy_word,
 5864              	# sieve_extend.c:658:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 658:sieve_extend.c ****         copy_word += 2;
 5865              		.loc 1 658 42 view .LVU1992
 5866 252e C4E29BF7 		shrx	rsi, rsi, r12	# tmp615, source1, _12
 5866      F6
 5867              	# sieve_extend.c:658:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 658:sieve_extend.c ****         copy_word += 2;
 5868              		.loc 1 658 52 view .LVU1993
 5869 2533 4C09D6   		or	rsi, r10	# tmp616, tmp613
 5870 2536 488974C3 		mov	QWORD PTR 8[rbx+rax*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_349, step: 8, offset:
 5870      08
 5871 253b 4183E003 		and	r8d, 3	# tmp722,
 5872              	.LVL256:
 654:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5873              		.loc 1 654 9 is_stmt 1 view .LVU1994
 655:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5874              		.loc 1 655 9 view .LVU1995
 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5875              		.loc 1 656 9 view .LVU1996
 657:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 5876              		.loc 1 657 9 view .LVU1997
 658:sieve_extend.c ****         copy_word += 2;
 5877              		.loc 1 658 9 view .LVU1998
 659:sieve_extend.c ****         source_word += 2;
 5878              		.loc 1 659 9 view .LVU1999
 660:sieve_extend.c ****         distance += 2;
 5879              		.loc 1 660 9 view .LVU2000
 661:sieve_extend.c ****     }
 5880              		.loc 1 661 9 view .LVU2001
 5881 253f 4D8D143B 		lea	r10, [r11+rdi]	# distance,
 661:sieve_extend.c ****     }
 5882              		.loc 1 661 9 is_stmt 0 view .LVU2002
 5883              	.LBE309:
 653:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 5884              		.loc 1 653 11 is_stmt 1 view .LVU2003
 5885 2543 488D5110 		lea	rdx, 16[rcx]	# ivtmp.350,
 5886 2547 4939F9   		cmp	r9, rdi	# fast_loop_stop_word, copy_word
 5887 254a 0F86D1F4 		jbe	.L380	#,
 5887      FFFF
 5888 2550 4D85C0   		test	r8, r8	# tmp722
 5889 2553 747D     		je	.L379	#,
 5890 2555 4983F801 		cmp	r8, 1	# tmp722,
 5891 2559 7439     		je	.L554	#,
 5892 255b 4983F802 		cmp	r8, 2	# tmp722,
 5893 255f 0F854001 		jne	.L628	#,
 5893      0000
 5894              	.LVL257:
GAS LISTING /tmp/cctyCFAS.s 			page 170


 5895              	.L555:
 5896              	.LBB310:
 654:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5897              		.loc 1 654 9 view .LVU2004
 655:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5898              		.loc 1 655 9 view .LVU2005
 5899              	# sieve_extend.c:655:         bitword_t source1 = bitarray[source_word+1];
 655:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5900              		.loc 1 655 19 is_stmt 0 view .LVU2006
 5901 2565 4C8B4A08 		mov	r9, QWORD PTR 8[rdx]	# source1, MEM[base: _616, offset: 8B]
 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5902              		.loc 1 656 9 is_stmt 1 view .LVU2007
 5903              	# sieve_extend.c:656:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5904              		.loc 1 656 42 is_stmt 0 view .LVU2008
 5905 2569 C4E29BF7 		shrx	rcx, QWORD PTR [rdx], r12	# tmp1068, MEM[base: _616, offset: 0B], _12
 5905      0A
 5906              	.LVL258:
 5907              	# sieve_extend.c:656:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5908              		.loc 1 656 63 view .LVU2009
 5909 256e C44291F7 		shlx	r8, r9, r13	# tmp1069, source1, _18
 5909      C1
 5910              	# sieve_extend.c:656:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5911              		.loc 1 656 52 view .LVU2010
 5912 2573 4C09C1   		or	rcx, r8	# tmp1070, tmp1069
 5913 2576 48890CFB 		mov	QWORD PTR [rbx+rdi*8], rcx	# MEM[base: bitarray_67(D), index: copy_word_349, step: 8, offset: 
 5914              	.LVL259:
 657:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 5915              		.loc 1 657 9 is_stmt 1 view .LVU2011
 658:sieve_extend.c ****         copy_word += 2;
 5916              		.loc 1 658 9 view .LVU2012
 5917              	# sieve_extend.c:658:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 658:sieve_extend.c ****         copy_word += 2;
 5918              		.loc 1 658 42 is_stmt 0 view .LVU2013
 5919 257a C4C29BF7 		shrx	rsi, r9, r12	# tmp1073, source1, _12
 5919      F1
 5920 257f 4883C210 		add	rdx, 16	# ivtmp.350,
 5921              	# sieve_extend.c:658:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 658:sieve_extend.c ****         copy_word += 2;
 5922              		.loc 1 658 63 view .LVU2014
 5923 2583 C46291F7 		shlx	r10, QWORD PTR [rdx], r13	# tmp1072, MEM[base: _616, offset: 16B], _18
 5923      12
 5924              	# sieve_extend.c:658:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 658:sieve_extend.c ****         copy_word += 2;
 5925              		.loc 1 658 52 view .LVU2015
 5926 2588 4C09D6   		or	rsi, r10	# tmp1074, tmp1072
 5927 258b 488974FB 		mov	QWORD PTR 8[rbx+rdi*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_349, step: 8, offset:
 5927      08
 5928              	.LVL260:
 659:sieve_extend.c ****         source_word += 2;
 5929              		.loc 1 659 9 is_stmt 1 view .LVU2016
 5930              	# sieve_extend.c:659:         copy_word += 2;
 659:sieve_extend.c ****         source_word += 2;
 5931              		.loc 1 659 19 is_stmt 0 view .LVU2017
 5932 2590 4883C702 		add	rdi, 2	# copy_word,
GAS LISTING /tmp/cctyCFAS.s 			page 171


 660:sieve_extend.c ****         distance += 2;
 5933              		.loc 1 660 9 is_stmt 1 view .LVU2018
 661:sieve_extend.c ****     }
 5934              		.loc 1 661 9 view .LVU2019
 661:sieve_extend.c ****     }
 5935              		.loc 1 661 9 is_stmt 0 view .LVU2020
 5936              	.LBE310:
 653:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 5937              		.loc 1 653 11 is_stmt 1 view .LVU2021
 5938              	.LVL261:
 5939              	.L554:
 5940              	.LBB311:
 654:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5941              		.loc 1 654 9 view .LVU2022
 655:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5942              		.loc 1 655 9 view .LVU2023
 5943              	# sieve_extend.c:655:         bitword_t source1 = bitarray[source_word+1];
 655:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5944              		.loc 1 655 19 is_stmt 0 view .LVU2024
 5945 2594 4C8B4A08 		mov	r9, QWORD PTR 8[rdx]	# source1, MEM[base: _616, offset: 8B]
 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5946              		.loc 1 656 9 is_stmt 1 view .LVU2025
 5947              	# sieve_extend.c:656:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5948              		.loc 1 656 42 is_stmt 0 view .LVU2026
 5949 2598 C4E29BF7 		shrx	rcx, QWORD PTR [rdx], r12	# tmp1078, MEM[base: _616, offset: 0B], _12
 5949      0A
 5950              	# sieve_extend.c:656:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5951              		.loc 1 656 63 view .LVU2027
 5952 259d C44291F7 		shlx	r8, r9, r13	# tmp1079, source1, _18
 5952      C1
 5953              	# sieve_extend.c:656:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5954              		.loc 1 656 52 view .LVU2028
 5955 25a2 4C09C1   		or	rcx, r8	# tmp1080, tmp1079
 5956 25a5 48890CFB 		mov	QWORD PTR [rbx+rdi*8], rcx	# MEM[base: bitarray_67(D), index: copy_word_349, step: 8, offset: 
 5957              	.LVL262:
 657:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 5958              		.loc 1 657 9 is_stmt 1 view .LVU2029
 658:sieve_extend.c ****         copy_word += 2;
 5959              		.loc 1 658 9 view .LVU2030
 5960              	# sieve_extend.c:658:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 658:sieve_extend.c ****         copy_word += 2;
 5961              		.loc 1 658 42 is_stmt 0 view .LVU2031
 5962 25a9 C4C29BF7 		shrx	rsi, r9, r12	# tmp1083, source1, _12
 5962      F1
 5963 25ae 4883C210 		add	rdx, 16	# ivtmp.350,
 5964              	# sieve_extend.c:658:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 658:sieve_extend.c ****         copy_word += 2;
 5965              		.loc 1 658 63 view .LVU2032
 5966 25b2 C46291F7 		shlx	r10, QWORD PTR [rdx], r13	# tmp1082, MEM[base: _616, offset: 16B], _18
 5966      12
 5967              	# sieve_extend.c:658:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 658:sieve_extend.c ****         copy_word += 2;
 5968              		.loc 1 658 52 view .LVU2033
 5969 25b7 4C09D6   		or	rsi, r10	# tmp1084, tmp1082
GAS LISTING /tmp/cctyCFAS.s 			page 172


 5970 25ba 488974FB 		mov	QWORD PTR 8[rbx+rdi*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_349, step: 8, offset:
 5970      08
 5971              	.LVL263:
 659:sieve_extend.c ****         source_word += 2;
 5972              		.loc 1 659 9 is_stmt 1 view .LVU2034
 5973              	# sieve_extend.c:659:         copy_word += 2;
 659:sieve_extend.c ****         source_word += 2;
 5974              		.loc 1 659 19 is_stmt 0 view .LVU2035
 5975 25bf 4883C702 		add	rdi, 2	# copy_word,
 660:sieve_extend.c ****         distance += 2;
 5976              		.loc 1 660 9 is_stmt 1 view .LVU2036
 661:sieve_extend.c ****     }
 5977              		.loc 1 661 9 view .LVU2037
 5978 25c3 4D8D143B 		lea	r10, [r11+rdi]	# distance,
 661:sieve_extend.c ****     }
 5979              		.loc 1 661 9 is_stmt 0 view .LVU2038
 5980              	.LBE311:
 653:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 5981              		.loc 1 653 11 is_stmt 1 view .LVU2039
 5982 25c7 48397C24 		cmp	QWORD PTR 72[rsp], rdi	# %sfp, copy_word
 5982      48
 5983 25cc 0F864FF4 		jbe	.L380	#,
 5983      FFFF
 5984              	.LVL264:
 5985              	.L379:
 5986              	.LBB312:
 654:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5987              		.loc 1 654 9 view .LVU2040
 655:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5988              		.loc 1 655 9 view .LVU2041
 5989              	# sieve_extend.c:655:         bitword_t source1 = bitarray[source_word+1];
 655:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5990              		.loc 1 655 19 is_stmt 0 view .LVU2042
 5991 25d2 4C8B4A08 		mov	r9, QWORD PTR 8[rdx]	# source1, MEM[base: _616, offset: 8B]
 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5992              		.loc 1 656 9 is_stmt 1 view .LVU2043
 5993              	# sieve_extend.c:656:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5994              		.loc 1 656 42 is_stmt 0 view .LVU2044
 5995 25d6 C4629BF7 		shrx	r8, QWORD PTR [rdx], r12	# tmp794, MEM[base: _616, offset: 0B], _12
 5995      02
 5996              	# sieve_extend.c:656:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5997              		.loc 1 656 63 view .LVU2045
 5998 25db C4C291F7 		shlx	rcx, r9, r13	# tmp795, source1, _18
 5998      C9
 5999              	# sieve_extend.c:656:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6000              		.loc 1 656 52 view .LVU2046
 6001 25e0 4909C8   		or	r8, rcx	# tmp796, tmp795
 6002 25e3 4C8904FB 		mov	QWORD PTR [rbx+rdi*8], r8	# MEM[base: bitarray_67(D), index: copy_word_349, step: 8, offset: 0
 6003              	.LVL265:
 657:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6004              		.loc 1 657 9 is_stmt 1 view .LVU2047
 658:sieve_extend.c ****         copy_word += 2;
 6005              		.loc 1 658 9 view .LVU2048
 6006              	# sieve_extend.c:658:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
GAS LISTING /tmp/cctyCFAS.s 			page 173


 658:sieve_extend.c ****         copy_word += 2;
 6007              		.loc 1 658 42 is_stmt 0 view .LVU2049
 6008 25e7 C4429BF7 		shrx	r10, r9, r12	# tmp799, source1, _12
 6008      D1
 6009              	# sieve_extend.c:659:         copy_word += 2;
 659:sieve_extend.c ****         source_word += 2;
 6010              		.loc 1 659 19 view .LVU2050
 6011 25ec 4C8D4F02 		lea	r9, 2[rdi]	# tmp723,
 6012              	# sieve_extend.c:658:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 658:sieve_extend.c ****         copy_word += 2;
 6013              		.loc 1 658 63 view .LVU2051
 6014 25f0 C4E291F7 		shlx	rsi, QWORD PTR 16[rdx], r13	# tmp798, MEM[base: _616, offset: 16B], _18
 6014      7210
 6015              	# sieve_extend.c:658:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 658:sieve_extend.c ****         copy_word += 2;
 6016              		.loc 1 658 52 view .LVU2052
 6017 25f6 4C09D6   		or	rsi, r10	# tmp800, tmp799
 6018 25f9 488974FB 		mov	QWORD PTR 8[rbx+rdi*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_349, step: 8, offset:
 6018      08
 6019              	.LVL266:
 659:sieve_extend.c ****         source_word += 2;
 6020              		.loc 1 659 9 is_stmt 1 view .LVU2053
 660:sieve_extend.c ****         distance += 2;
 6021              		.loc 1 660 9 view .LVU2054
 661:sieve_extend.c ****     }
 6022              		.loc 1 661 9 view .LVU2055
 661:sieve_extend.c ****     }
 6023              		.loc 1 661 9 is_stmt 0 view .LVU2056
 6024              	.LBE312:
 653:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6025              		.loc 1 653 11 is_stmt 1 view .LVU2057
 6026              	.LBB313:
 654:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6027              		.loc 1 654 9 view .LVU2058
 655:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6028              		.loc 1 655 9 view .LVU2059
 6029 25fe 4883C240 		add	rdx, 64	# ivtmp.350,
 6030              	# sieve_extend.c:655:         bitword_t source1 = bitarray[source_word+1];
 655:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6031              		.loc 1 655 19 is_stmt 0 view .LVU2060
 6032 2602 4C8B42D8 		mov	r8, QWORD PTR -40[rdx]	# source1, MEM[base: _616, offset: 8B]
 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6033              		.loc 1 656 9 is_stmt 1 view .LVU2061
 6034              	# sieve_extend.c:656:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6035              		.loc 1 656 42 is_stmt 0 view .LVU2062
 6036 2606 C4E29BF7 		shrx	rcx, QWORD PTR -48[rdx], r12	# tmp806, MEM[base: _616, offset: 0B], _12
 6036      4AD0
 6037              	# sieve_extend.c:656:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6038              		.loc 1 656 63 view .LVU2063
 6039 260c C4C291F7 		shlx	rsi, r8, r13	# tmp807, source1, _18
 6039      F0
 6040              	# sieve_extend.c:656:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6041              		.loc 1 656 52 view .LVU2064
 6042 2611 4809F1   		or	rcx, rsi	# tmp808, tmp807
GAS LISTING /tmp/cctyCFAS.s 			page 174


 6043 2614 4A890CCB 		mov	QWORD PTR [rbx+r9*8], rcx	# MEM[base: bitarray_67(D), index: copy_word_349, step: 8, offset: 0
 6044              	.LVL267:
 657:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6045              		.loc 1 657 9 is_stmt 1 view .LVU2065
 658:sieve_extend.c ****         copy_word += 2;
 6046              		.loc 1 658 9 view .LVU2066
 6047              	# sieve_extend.c:658:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 658:sieve_extend.c ****         copy_word += 2;
 6048              		.loc 1 658 42 is_stmt 0 view .LVU2067
 6049 2618 C4429BF7 		shrx	r8, r8, r12	# tmp811, source1, _12
 6049      C0
 6050              	# sieve_extend.c:658:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 658:sieve_extend.c ****         copy_word += 2;
 6051              		.loc 1 658 63 view .LVU2068
 6052 261d 4C8B52E0 		mov	r10, QWORD PTR -32[rdx]	# MEM[base: _616, offset: 16B], MEM[base: _616, offset: 16B]
 6053 2621 C4C291F7 		shlx	rcx, r10, r13	# tmp810, MEM[base: _616, offset: 16B], _18
 6053      CA
 6054              	# sieve_extend.c:658:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 658:sieve_extend.c ****         copy_word += 2;
 6055              		.loc 1 658 52 view .LVU2069
 6056 2626 4909C8   		or	r8, rcx	# tmp812, tmp810
 6057 2629 4E8944CB 		mov	QWORD PTR 8[rbx+r9*8], r8	# MEM[base: bitarray_67(D), index: copy_word_349, step: 8, offset: 8
 6057      08
 6058              	.LVL268:
 659:sieve_extend.c ****         source_word += 2;
 6059              		.loc 1 659 9 is_stmt 1 view .LVU2070
 6060              	# sieve_extend.c:659:         copy_word += 2;
 659:sieve_extend.c ****         source_word += 2;
 6061              		.loc 1 659 19 is_stmt 0 view .LVU2071
 6062 262e 4C8D4F04 		lea	r9, 4[rdi]	# copy_word,
 660:sieve_extend.c ****         distance += 2;
 6063              		.loc 1 660 9 is_stmt 1 view .LVU2072
 661:sieve_extend.c ****     }
 6064              		.loc 1 661 9 view .LVU2073
 661:sieve_extend.c ****     }
 6065              		.loc 1 661 9 is_stmt 0 view .LVU2074
 6066              	.LBE313:
 653:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6067              		.loc 1 653 11 is_stmt 1 view .LVU2075
 6068              	.LBB314:
 654:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6069              		.loc 1 654 9 view .LVU2076
 6070              	.LVL269:
 655:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6071              		.loc 1 655 9 view .LVU2077
 6072              	# sieve_extend.c:655:         bitword_t source1 = bitarray[source_word+1];
 655:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6073              		.loc 1 655 19 is_stmt 0 view .LVU2078
 6074 2632 488B72E8 		mov	rsi, QWORD PTR -24[rdx]	# source1, MEM[base: _616, offset: 8B]
 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6075              		.loc 1 656 9 is_stmt 1 view .LVU2079
 6076              	# sieve_extend.c:656:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6077              		.loc 1 656 42 is_stmt 0 view .LVU2080
 6078 2636 C4E29BF7 		shrx	rcx, QWORD PTR -32[rdx], r12	# tmp818, MEM[base: _616, offset: 0B], _12
 6078      4AE0
 6079              	# sieve_extend.c:656:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
GAS LISTING /tmp/cctyCFAS.s 			page 175


 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6080              		.loc 1 656 63 view .LVU2081
 6081 263c C46291F7 		shlx	r10, rsi, r13	# tmp819, source1, _18
 6081      D6
 6082              	# sieve_extend.c:656:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6083              		.loc 1 656 52 view .LVU2082
 6084 2641 4C09D1   		or	rcx, r10	# tmp820, tmp819
 6085 2644 4A890CCB 		mov	QWORD PTR [rbx+r9*8], rcx	# MEM[base: bitarray_67(D), index: copy_word_349, step: 8, offset: 0
 6086              	.LVL270:
 657:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6087              		.loc 1 657 9 is_stmt 1 view .LVU2083
 658:sieve_extend.c ****         copy_word += 2;
 6088              		.loc 1 658 9 view .LVU2084
 6089              	# sieve_extend.c:658:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 658:sieve_extend.c ****         copy_word += 2;
 6090              		.loc 1 658 42 is_stmt 0 view .LVU2085
 6091 2648 C4E29BF7 		shrx	rsi, rsi, r12	# tmp823, source1, _12
 6091      F6
 6092              	# sieve_extend.c:658:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 658:sieve_extend.c ****         copy_word += 2;
 6093              		.loc 1 658 63 view .LVU2086
 6094 264d 4C8B42F0 		mov	r8, QWORD PTR -16[rdx]	# MEM[base: _616, offset: 16B], MEM[base: _616, offset: 16B]
 6095 2651 C4C291F7 		shlx	rcx, r8, r13	# tmp822, MEM[base: _616, offset: 16B], _18
 6095      C8
 6096              	# sieve_extend.c:658:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 658:sieve_extend.c ****         copy_word += 2;
 6097              		.loc 1 658 52 view .LVU2087
 6098 2656 4809CE   		or	rsi, rcx	# tmp824, tmp822
 6099 2659 4A8974CB 		mov	QWORD PTR 8[rbx+r9*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_349, step: 8, offset: 
 6099      08
 6100              	.LVL271:
 659:sieve_extend.c ****         source_word += 2;
 6101              		.loc 1 659 9 is_stmt 1 view .LVU2088
 6102              	# sieve_extend.c:659:         copy_word += 2;
 659:sieve_extend.c ****         source_word += 2;
 6103              		.loc 1 659 19 is_stmt 0 view .LVU2089
 6104 265e 4C8D4F06 		lea	r9, 6[rdi]	# copy_word,
 660:sieve_extend.c ****         distance += 2;
 6105              		.loc 1 660 9 is_stmt 1 view .LVU2090
 661:sieve_extend.c ****     }
 6106              		.loc 1 661 9 view .LVU2091
 661:sieve_extend.c ****     }
 6107              		.loc 1 661 9 is_stmt 0 view .LVU2092
 6108              	.LBE314:
 653:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6109              		.loc 1 653 11 is_stmt 1 view .LVU2093
 6110              	.LBB315:
 654:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6111              		.loc 1 654 9 view .LVU2094
 6112              	.LVL272:
 655:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6113              		.loc 1 655 9 view .LVU2095
 6114              	# sieve_extend.c:659:         copy_word += 2;
 659:sieve_extend.c ****         source_word += 2;
 6115              		.loc 1 659 19 is_stmt 0 view .LVU2096
 6116 2662 4883C708 		add	rdi, 8	# copy_word,
GAS LISTING /tmp/cctyCFAS.s 			page 176


 6117              	# sieve_extend.c:655:         bitword_t source1 = bitarray[source_word+1];
 655:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6118              		.loc 1 655 19 view .LVU2097
 6119 2666 4C8B42F8 		mov	r8, QWORD PTR -8[rdx]	# source1, MEM[base: _616, offset: 8B]
 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6120              		.loc 1 656 9 is_stmt 1 view .LVU2098
 6121              	# sieve_extend.c:656:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6122              		.loc 1 656 42 is_stmt 0 view .LVU2099
 6123 266a C4E29BF7 		shrx	rcx, QWORD PTR -16[rdx], r12	# tmp830, MEM[base: _616, offset: 0B], _12
 6123      4AF0
 6124              	# sieve_extend.c:656:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6125              		.loc 1 656 63 view .LVU2100
 6126 2670 C44291F7 		shlx	r10, r8, r13	# tmp831, source1, _18
 6126      D0
 6127              	# sieve_extend.c:656:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6128              		.loc 1 656 52 view .LVU2101
 6129 2675 4C09D1   		or	rcx, r10	# tmp832, tmp831
 6130 2678 4A890CCB 		mov	QWORD PTR [rbx+r9*8], rcx	# MEM[base: bitarray_67(D), index: copy_word_349, step: 8, offset: 0
 6131              	.LVL273:
 657:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6132              		.loc 1 657 9 is_stmt 1 view .LVU2102
 658:sieve_extend.c ****         copy_word += 2;
 6133              		.loc 1 658 9 view .LVU2103
 6134              	# sieve_extend.c:658:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 658:sieve_extend.c ****         copy_word += 2;
 6135              		.loc 1 658 42 is_stmt 0 view .LVU2104
 6136 267c C4429BF7 		shrx	r8, r8, r12	# tmp835, source1, _12
 6136      C0
 6137 2681 4D8D143B 		lea	r10, [r11+rdi]	# distance,
 6138              	# sieve_extend.c:658:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 658:sieve_extend.c ****         copy_word += 2;
 6139              		.loc 1 658 63 view .LVU2105
 6140 2685 488B32   		mov	rsi, QWORD PTR [rdx]	# MEM[base: _616, offset: 16B], MEM[base: _616, offset: 16B]
 6141 2688 C4E291F7 		shlx	rcx, rsi, r13	# tmp834, MEM[base: _616, offset: 16B], _18
 6141      CE
 6142              	# sieve_extend.c:658:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 658:sieve_extend.c ****         copy_word += 2;
 6143              		.loc 1 658 52 view .LVU2106
 6144 268d 4909C8   		or	r8, rcx	# tmp836, tmp834
 6145 2690 4E8944CB 		mov	QWORD PTR 8[rbx+r9*8], r8	# MEM[base: bitarray_67(D), index: copy_word_349, step: 8, offset: 8
 6145      08
 6146              	.LVL274:
 659:sieve_extend.c ****         source_word += 2;
 6147              		.loc 1 659 9 is_stmt 1 view .LVU2107
 660:sieve_extend.c ****         distance += 2;
 6148              		.loc 1 660 9 view .LVU2108
 661:sieve_extend.c ****     }
 6149              		.loc 1 661 9 view .LVU2109
 661:sieve_extend.c ****     }
 6150              		.loc 1 661 9 is_stmt 0 view .LVU2110
 6151              	.LBE315:
 653:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6152              		.loc 1 653 11 is_stmt 1 view .LVU2111
 6153 2695 48397C24 		cmp	QWORD PTR 72[rsp], rdi	# %sfp, copy_word
GAS LISTING /tmp/cctyCFAS.s 			page 177


 6153      48
 6154 269a 0F8732FF 		ja	.L379	#,
 6154      FFFF
 6155 26a0 E97CF3FF 		jmp	.L380	#
 6155      FF
 6156              	.L628:
 6157              	.LBB316:
 654:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6158              		.loc 1 654 9 view .LVU2112
 6159              	.LVL275:
 655:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6160              		.loc 1 655 9 view .LVU2113
 6161              	# sieve_extend.c:655:         bitword_t source1 = bitarray[source_word+1];
 655:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6162              		.loc 1 655 19 is_stmt 0 view .LVU2114
 6163 26a5 4C8B4A08 		mov	r9, QWORD PTR 8[rdx]	# source1, MEM[base: _616, offset: 8B]
 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6164              		.loc 1 656 9 is_stmt 1 view .LVU2115
 6165              	# sieve_extend.c:656:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6166              		.loc 1 656 42 is_stmt 0 view .LVU2116
 6167 26a9 C4629BF7 		shrx	r10, QWORD PTR [rdx], r12	# tmp1058, MEM[base: _616, offset: 0B], _12
 6167      12
 6168              	# sieve_extend.c:656:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6169              		.loc 1 656 63 view .LVU2117
 6170 26ae C44291F7 		shlx	r8, r9, r13	# tmp1059, source1, _18
 6170      C1
 6171              	# sieve_extend.c:656:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 656:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6172              		.loc 1 656 52 view .LVU2118
 6173 26b3 4D09C2   		or	r10, r8	# tmp1060, tmp1059
 6174 26b6 4C8914FB 		mov	QWORD PTR [rbx+rdi*8], r10	# MEM[base: bitarray_67(D), index: copy_word_349, step: 8, offset: 
 6175              	.LVL276:
 657:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6176              		.loc 1 657 9 is_stmt 1 view .LVU2119
 658:sieve_extend.c ****         copy_word += 2;
 6177              		.loc 1 658 9 view .LVU2120
 6178              	# sieve_extend.c:658:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 658:sieve_extend.c ****         copy_word += 2;
 6179              		.loc 1 658 42 is_stmt 0 view .LVU2121
 6180 26ba C4C29BF7 		shrx	rsi, r9, r12	# tmp1063, source1, _12
 6180      F1
 6181              	# sieve_extend.c:658:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 658:sieve_extend.c ****         copy_word += 2;
 6182              		.loc 1 658 63 view .LVU2122
 6183 26bf 488B5210 		mov	rdx, QWORD PTR 16[rdx]	# MEM[base: _616, offset: 16B], MEM[base: _616, offset: 16B]
 6184 26c3 C46291F7 		shlx	r10, rdx, r13	# tmp1062, MEM[base: _616, offset: 16B], _18
 6184      D2
 6185              	# sieve_extend.c:658:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 658:sieve_extend.c ****         copy_word += 2;
 6186              		.loc 1 658 52 view .LVU2123
 6187 26c8 4909F2   		or	r10, rsi	# tmp1064, tmp1063
 6188 26cb 4C8954FB 		mov	QWORD PTR 8[rbx+rdi*8], r10	# MEM[base: bitarray_67(D), index: copy_word_349, step: 8, offset:
 6188      08
 6189              	.LVL277:
 659:sieve_extend.c ****         source_word += 2;
GAS LISTING /tmp/cctyCFAS.s 			page 178


 6190              		.loc 1 659 9 is_stmt 1 view .LVU2124
 6191 26d0 488D5120 		lea	rdx, 32[rcx]	# ivtmp.350,
 6192              	# sieve_extend.c:659:         copy_word += 2;
 659:sieve_extend.c ****         source_word += 2;
 6193              		.loc 1 659 19 is_stmt 0 view .LVU2125
 6194 26d4 488D7804 		lea	rdi, 4[rax]	# copy_word,
 660:sieve_extend.c ****         distance += 2;
 6195              		.loc 1 660 9 is_stmt 1 view .LVU2126
 661:sieve_extend.c ****     }
 6196              		.loc 1 661 9 view .LVU2127
 661:sieve_extend.c ****     }
 6197              		.loc 1 661 9 is_stmt 0 view .LVU2128
 6198              	.LBE316:
 653:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6199              		.loc 1 653 11 is_stmt 1 view .LVU2129
 6200 26d8 E988FEFF 		jmp	.L555	#
 6200      FF
 6201              	.LBE321:
 6202              	.LBE342:
 6203              		.cfi_endproc
 6204              	.LFE73:
 6206              		.section	.rodata.str1.1,"aMS",@progbits,1
 6207              	.LC0:
 6208 0000 25336A75 		.string	"%3ju "
 6208      2000
 6209              	.LC1:
 6210 0006 0A466F75 		.string	"\nFound %ju primes until %ju\n"
 6210      6E642025 
 6210      6A752070 
 6210      72696D65 
 6210      7320756E 
 6211              		.text
 6212 26dd 0F1F00   		.p2align 4
 6214              	show_primes.isra.0:
 6215              	.LVL278:
 6216              	.LFB87:
 994:sieve_extend.c ****     counter_t primeCount = 1;    // We already have 2
 6217              		.loc 1 994 13 view -0
 6218              		.cfi_startproc
 6219              	.LBB343:
 996:sieve_extend.c ****         primeCount++;
 6220              		.loc 1 996 30 view .LVU2131
 6221              	.LBE343:
 6222              	# sieve_extend.c:994: static void show_primes(struct sieve_state *sieve, counter_t maxFactor) {
 994:sieve_extend.c ****     counter_t primeCount = 1;    // We already have 2
 6223              		.loc 1 994 13 is_stmt 0 view .LVU2132
 6224 26e0 4157     		push	r15	#
 6225              		.cfi_def_cfa_offset 16
 6226              		.cfi_offset 15, -16
 6227 26e2 4156     		push	r14	#
 6228              		.cfi_def_cfa_offset 24
 6229              		.cfi_offset 14, -24
 6230 26e4 4155     		push	r13	#
 6231              		.cfi_def_cfa_offset 32
 6232              		.cfi_offset 13, -32
 6233 26e6 4154     		push	r12	#
 6234              		.cfi_def_cfa_offset 40
GAS LISTING /tmp/cctyCFAS.s 			page 179


 6235              		.cfi_offset 12, -40
 6236 26e8 55       		push	rbp	#
 6237              		.cfi_def_cfa_offset 48
 6238              		.cfi_offset 6, -48
 6239 26e9 4889F5   		mov	rbp, rsi	# ISRA.76, tmp168
 6240 26ec 53       		push	rbx	#
 6241              		.cfi_def_cfa_offset 56
 6242              		.cfi_offset 3, -56
 6243 26ed 4883EC08 		sub	rsp, 8	#,
 6244              		.cfi_def_cfa_offset 64
 6245              	.LBB360:
 6246              	# sieve_extend.c:996:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 996:sieve_extend.c ****         primeCount++;
 6247              		.loc 1 996 44 view .LVU2133
 6248 26f1 488B36   		mov	rsi, QWORD PTR [rsi]	# prephitmp_86, *ISRA.76_32(D)
 6249              	# sieve_extend.c:996:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 996:sieve_extend.c ****         primeCount++;
 6250              		.loc 1 996 5 view .LVU2134
 6251 26f4 4883FE01 		cmp	rsi, 1	# prephitmp_86,
 6252 26f8 0F867601 		jbe	.L636	#,
 6252      0000
 6253              	# sieve_extend.c:998:         if (factor < maxFactor/2) {
 998:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 6254              		.loc 1 998 31 view .LVU2135
 6255 26fe 48D1EA   		shr	rdx	# maxFactor
 6256              	.LVL279:
 998:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 6257              		.loc 1 998 31 view .LVU2136
 6258 2701 4989FC   		mov	r12, rdi	# ISRA.75, tmp167
 6259 2704 4989D7   		mov	r15, rdx	# _4, maxFactor
 6260              	# sieve_extend.c:996:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 996:sieve_extend.c ****         primeCount++;
 6261              		.loc 1 996 20 view .LVU2137
 6262 2707 BB010000 		mov	ebx, 1	# factor,
 6262      00
 6263              	.LBE360:
 6264              	# sieve_extend.c:995:     counter_t primeCount = 1;    // We already have 2
 995:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitarray, factor+
 6265              		.loc 1 995 15 view .LVU2138
 6266 270c 41BE0100 		mov	r14d, 1	# primeCount,
 6266      0000
 6267              	.LBB361:
 6268              	.LBB344:
 6269              	.LBB345:
 6270              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 6271              		.file 3 "/usr/include/x86_64-linux-gnu/bits/stdio2.h"
   1:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** /* Checking macros for stdio functions.
   2:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    Copyright (C) 2004-2020 Free Software Foundation, Inc.
   3:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    This file is part of the GNU C Library.
   4:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
   5:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    The GNU C Library is free software; you can redistribute it and/or
   6:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    modify it under the terms of the GNU Lesser General Public
   7:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    License as published by the Free Software Foundation; either
   8:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    version 2.1 of the License, or (at your option) any later version.
   9:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  10:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    The GNU C Library is distributed in the hope that it will be useful,
  11:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    but WITHOUT ANY WARRANTY; without even the implied warranty of
GAS LISTING /tmp/cctyCFAS.s 			page 180


  12:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  13:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    Lesser General Public License for more details.
  14:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  15:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    You should have received a copy of the GNU Lesser General Public
  16:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    License along with the GNU C Library; if not, see
  17:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    <https://www.gnu.org/licenses/>.  */
  18:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  19:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #ifndef _BITS_STDIO2_H
  20:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #define _BITS_STDIO2_H 1
  21:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  22:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #ifndef _STDIO_H
  23:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # error "Never include <bits/stdio2.h> directly; use <stdio.h> instead."
  24:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
  25:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  26:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __sprintf_chk (char *__restrict __s, int __flag, size_t __slen,
  27:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  const char *__restrict __format, ...) __THROW;
  28:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vsprintf_chk (char *__restrict __s, int __flag, size_t __slen,
  29:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   const char *__restrict __format,
  30:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   __gnuc_va_list __ap) __THROW;
  31:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  32:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #ifdef __va_arg_pack
  33:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  34:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (sprintf (char *__restrict __s, const char *__restrict __fmt, ...))
  35:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  36:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___sprintf_chk (__s, __USE_FORTIFY_LEVEL - 1,
  37:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				  __bos (__s), __fmt, __va_arg_pack ());
  38:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  39:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #elif !defined __cplusplus
  40:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # define sprintf(str, ...) \
  41:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   __builtin___sprintf_chk (str, __USE_FORTIFY_LEVEL - 1, __bos (str), \
  42:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   __VA_ARGS__)
  43:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
  44:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  45:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  46:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (vsprintf (char *__restrict __s, const char *__restrict __fmt,
  47:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		 __gnuc_va_list __ap))
  48:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  49:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___vsprintf_chk (__s, __USE_FORTIFY_LEVEL - 1,
  50:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				   __bos (__s), __fmt, __ap);
  51:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  52:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  53:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #if defined __USE_ISOC99 || defined __USE_UNIX98
  54:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  55:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __snprintf_chk (char *__restrict __s, size_t __n, int __flag,
  56:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   size_t __slen, const char *__restrict __format,
  57:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   ...) __THROW;
  58:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vsnprintf_chk (char *__restrict __s, size_t __n, int __flag,
  59:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    size_t __slen, const char *__restrict __format,
  60:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    __gnuc_va_list __ap) __THROW;
  61:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  62:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # ifdef __va_arg_pack
  63:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  64:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (snprintf (char *__restrict __s, size_t __n,
  65:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		 const char *__restrict __fmt, ...))
  66:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  67:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
  68:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				   __bos (__s), __fmt, __va_arg_pack ());
GAS LISTING /tmp/cctyCFAS.s 			page 181


  69:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  70:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # elif !defined __cplusplus
  71:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #  define snprintf(str, len, ...) \
  72:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   __builtin___snprintf_chk (str, len, __USE_FORTIFY_LEVEL - 1, __bos (str), \
  73:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    __VA_ARGS__)
  74:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # endif
  75:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  76:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  77:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (vsnprintf (char *__restrict __s, size_t __n,
  78:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		  const char *__restrict __fmt, __gnuc_va_list __ap))
  79:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  80:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___vsnprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
  81:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				    __bos (__s), __fmt, __ap);
  82:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  83:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  84:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
  85:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  86:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #if __USE_FORTIFY_LEVEL > 1
  87:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  88:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __fprintf_chk (FILE *__restrict __stream, int __flag,
  89:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  const char *__restrict __format, ...);
  90:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __printf_chk (int __flag, const char *__restrict __format, ...);
  91:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vfprintf_chk (FILE *__restrict __stream, int __flag,
  92:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   const char *__restrict __format, __gnuc_va_list __ap);
  93:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vprintf_chk (int __flag, const char *__restrict __format,
  94:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  __gnuc_va_list __ap);
  95:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  96:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # ifdef __va_arg_pack
  97:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** fprintf (FILE *__restrict __stream, const char *__restrict __fmt, ...)
  99:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt,
 101:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 102:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
 103:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
 104:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** printf (const char *__restrict __fmt, ...)
 106:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 107:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __printf_chk (__USE_FORTIFY_LEVEL - 1, __fmt, __va_arg_pack ());
 6272              		.loc 3 107 10 view .LVU2139
 6273 2712 49BDCDCC 		movabs	r13, -3689348814741910323	# tmp136,
 6273      CCCCCCCC 
 6273      CCCC
 6274              	.LVL280:
 6275 271c 0F1F4000 		.p2align 4,,10
 6276              		.p2align 3
 6277              	.L635:
 6278              		.loc 3 107 10 view .LVU2140
 6279              	.LBE345:
 6280              	.LBE344:
 997:sieve_extend.c ****         if (factor < maxFactor/2) {
 6281              		.loc 1 997 9 is_stmt 1 view .LVU2141
 6282              	# sieve_extend.c:997:         primeCount++;
 997:sieve_extend.c ****         if (factor < maxFactor/2) {
 6283              		.loc 1 997 19 is_stmt 0 view .LVU2142
 6284 2720 49FFC6   		inc	r14	# primeCount
 6285              	.LVL281:
GAS LISTING /tmp/cctyCFAS.s 			page 182


 998:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 6286              		.loc 1 998 9 is_stmt 1 view .LVU2143
 6287              	# sieve_extend.c:998:         if (factor < maxFactor/2) {
 998:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 6288              		.loc 1 998 12 is_stmt 0 view .LVU2144
 6289 2723 4939DF   		cmp	r15, rbx	# _4, factor
 6290 2726 0F87FC00 		ja	.L659	#,
 6290      0000
 6291              	.L631:
 996:sieve_extend.c ****         primeCount++;
 6292              		.loc 1 996 52 is_stmt 1 view .LVU2145
 6293              	.LVL282:
 6294              	# sieve_extend.c:996:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 996:sieve_extend.c ****         primeCount++;
 6295              		.loc 1 996 61 is_stmt 0 view .LVU2146
 6296 272c 4D8B0424 		mov	r8, QWORD PTR [r12]	# _11, *ISRA.75_33(D)
 6297 2730 48FFC3   		inc	rbx	# factor
 6298              	.LVL283:
 6299              	.L658:
 6300              	.LBB350:
 6301              	.LBI350:
 123:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 6302              		.loc 1 123 25 is_stmt 1 view .LVU2147
 6303              	.LBB351:
 124:sieve_extend.c ****     return index;
 6304              		.loc 1 124 5 view .LVU2148
 124:sieve_extend.c ****     return index;
 6305              		.loc 1 124 11 view .LVU2149
 6306              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 6307              		.loc 1 124 21 is_stmt 0 view .LVU2150
 6308 2733 4889D9   		mov	rcx, rbx	# tmp124, factor
 6309 2736 48C1E906 		shr	rcx, 6	# tmp124,
 6310              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 6311              		.loc 1 124 12 view .LVU2151
 6312 273a 4D8B0CC8 		mov	r9, QWORD PTR [r8+rcx*8]	# *_39,* _11
 6313              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 6314              		.loc 1 124 11 view .LVU2152
 6315 273e 490FA3D9 		bt	r9, rbx	# *_39, factor
 6316 2742 0F83A800 		jnc	.L633	#,
 6316      0000
 124:sieve_extend.c ****     return index;
 6317              		.loc 1 124 58 is_stmt 1 view .LVU2153
 6318              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 6319              		.loc 1 124 63 is_stmt 0 view .LVU2154
 6320 2748 4C8D5301 		lea	r10, 1[rbx]	# tmp138,
 6321              	.LVL284:
 6322              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 6323              		.loc 1 124 21 view .LVU2155
 6324 274c 4D89D3   		mov	r11, r10	# tmp129, factor
 6325 274f 49C1EB06 		shr	r11, 6	# tmp129,
 6326              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
GAS LISTING /tmp/cctyCFAS.s 			page 183


 6327              		.loc 1 124 12 view .LVU2156
 6328 2753 4B8B04D8 		mov	rax, QWORD PTR [r8+r11*8]	# *_16, *_16
 6329              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 6330              		.loc 1 124 63 view .LVU2157
 6331 2757 4C89D3   		mov	rbx, r10	# factor, tmp138
 124:sieve_extend.c ****     return index;
 6332              		.loc 1 124 11 is_stmt 1 view .LVU2158
 6333 275a 4C0FA3D0 		bt	rax, r10	# *_16, factor
 6334 275e 0F838C00 		jnc	.L633	#,
 6334      0000
 124:sieve_extend.c ****     return index;
 6335              		.loc 1 124 58 view .LVU2159
 6336              	.LVL285:
 6337              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 6338              		.loc 1 124 63 is_stmt 0 view .LVU2160
 6339 2764 48FFC3   		inc	rbx	# factor
 6340              	.LVL286:
 124:sieve_extend.c ****     return index;
 6341              		.loc 1 124 11 is_stmt 1 view .LVU2161
 6342              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 6343              		.loc 1 124 21 is_stmt 0 view .LVU2162
 6344 2767 4889DA   		mov	rdx, rbx	# tmp139, factor
 6345 276a 48C1EA06 		shr	rdx, 6	# tmp139,
 6346              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 6347              		.loc 1 124 12 view .LVU2163
 6348 276e 498B3CD0 		mov	rdi, QWORD PTR [r8+rdx*8]	# *_16, *_16
 6349              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 6350              		.loc 1 124 11 view .LVU2164
 6351 2772 480FA3DF 		bt	rdi, rbx	# *_16, factor
 6352 2776 7378     		jnc	.L633	#,
 124:sieve_extend.c ****     return index;
 6353              		.loc 1 124 58 is_stmt 1 view .LVU2165
 6354              	.LVL287:
 6355              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 6356              		.loc 1 124 63 is_stmt 0 view .LVU2166
 6357 2778 498D5A02 		lea	rbx, 2[r10]	# factor,
 6358              	.LVL288:
 124:sieve_extend.c ****     return index;
 6359              		.loc 1 124 11 is_stmt 1 view .LVU2167
 6360              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 6361              		.loc 1 124 21 is_stmt 0 view .LVU2168
 6362 277c 4889D9   		mov	rcx, rbx	# tmp143, factor
 6363 277f 48C1E906 		shr	rcx, 6	# tmp143,
 6364              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 6365              		.loc 1 124 12 view .LVU2169
 6366 2783 4D8B0CC8 		mov	r9, QWORD PTR [r8+rcx*8]	# *_16, *_16
 6367              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 6368              		.loc 1 124 11 view .LVU2170
GAS LISTING /tmp/cctyCFAS.s 			page 184


 6369 2787 490FA3D9 		bt	r9, rbx	# *_16, factor
 6370 278b 7363     		jnc	.L633	#,
 124:sieve_extend.c ****     return index;
 6371              		.loc 1 124 58 is_stmt 1 view .LVU2171
 6372              	.LVL289:
 6373              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 6374              		.loc 1 124 63 is_stmt 0 view .LVU2172
 6375 278d 498D5A03 		lea	rbx, 3[r10]	# factor,
 6376              	.LVL290:
 124:sieve_extend.c ****     return index;
 6377              		.loc 1 124 11 is_stmt 1 view .LVU2173
 6378              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 6379              		.loc 1 124 21 is_stmt 0 view .LVU2174
 6380 2791 4989DB   		mov	r11, rbx	# tmp147, factor
 6381 2794 49C1EB06 		shr	r11, 6	# tmp147,
 6382              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 6383              		.loc 1 124 12 view .LVU2175
 6384 2798 4B8B04D8 		mov	rax, QWORD PTR [r8+r11*8]	# *_16, *_16
 6385              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 6386              		.loc 1 124 11 view .LVU2176
 6387 279c 480FA3D8 		bt	rax, rbx	# *_16, factor
 6388 27a0 734E     		jnc	.L633	#,
 124:sieve_extend.c ****     return index;
 6389              		.loc 1 124 58 is_stmt 1 view .LVU2177
 6390              	.LVL291:
 6391              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 6392              		.loc 1 124 63 is_stmt 0 view .LVU2178
 6393 27a2 498D5A04 		lea	rbx, 4[r10]	# factor,
 6394              	.LVL292:
 124:sieve_extend.c ****     return index;
 6395              		.loc 1 124 11 is_stmt 1 view .LVU2179
 6396              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 6397              		.loc 1 124 21 is_stmt 0 view .LVU2180
 6398 27a6 4889DA   		mov	rdx, rbx	# tmp151, factor
 6399 27a9 48C1EA06 		shr	rdx, 6	# tmp151,
 6400              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 6401              		.loc 1 124 12 view .LVU2181
 6402 27ad 498B3CD0 		mov	rdi, QWORD PTR [r8+rdx*8]	# *_16, *_16
 6403              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 6404              		.loc 1 124 11 view .LVU2182
 6405 27b1 480FA3DF 		bt	rdi, rbx	# *_16, factor
 6406 27b5 7339     		jnc	.L633	#,
 124:sieve_extend.c ****     return index;
 6407              		.loc 1 124 58 is_stmt 1 view .LVU2183
 6408              	.LVL293:
 6409              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 6410              		.loc 1 124 63 is_stmt 0 view .LVU2184
 6411 27b7 498D5A05 		lea	rbx, 5[r10]	# factor,
GAS LISTING /tmp/cctyCFAS.s 			page 185


 6412              	.LVL294:
 124:sieve_extend.c ****     return index;
 6413              		.loc 1 124 11 is_stmt 1 view .LVU2185
 6414              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 6415              		.loc 1 124 21 is_stmt 0 view .LVU2186
 6416 27bb 4889D9   		mov	rcx, rbx	# tmp155, factor
 6417 27be 48C1E906 		shr	rcx, 6	# tmp155,
 6418              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 6419              		.loc 1 124 12 view .LVU2187
 6420 27c2 4D8B0CC8 		mov	r9, QWORD PTR [r8+rcx*8]	# *_16, *_16
 6421              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 6422              		.loc 1 124 11 view .LVU2188
 6423 27c6 490FA3D9 		bt	r9, rbx	# *_16, factor
 6424 27ca 7324     		jnc	.L633	#,
 124:sieve_extend.c ****     return index;
 6425              		.loc 1 124 58 is_stmt 1 view .LVU2189
 6426              	.LVL295:
 6427              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 6428              		.loc 1 124 63 is_stmt 0 view .LVU2190
 6429 27cc 498D5A06 		lea	rbx, 6[r10]	# factor,
 6430              	.LVL296:
 124:sieve_extend.c ****     return index;
 6431              		.loc 1 124 11 is_stmt 1 view .LVU2191
 6432              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 6433              		.loc 1 124 21 is_stmt 0 view .LVU2192
 6434 27d0 4989DB   		mov	r11, rbx	# tmp159, factor
 6435 27d3 49C1EB06 		shr	r11, 6	# tmp159,
 6436              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 6437              		.loc 1 124 12 view .LVU2193
 6438 27d7 4B8B04D8 		mov	rax, QWORD PTR [r8+r11*8]	# *_16, *_16
 6439              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 6440              		.loc 1 124 11 view .LVU2194
 6441 27db 480FA3D8 		bt	rax, rbx	# *_16, factor
 6442 27df 730F     		jnc	.L633	#,
 124:sieve_extend.c ****     return index;
 6443              		.loc 1 124 58 is_stmt 1 view .LVU2195
 6444              	.LVL297:
 6445              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 6446              		.loc 1 124 63 is_stmt 0 view .LVU2196
 6447 27e1 498D5A07 		lea	rbx, 7[r10]	# factor,
 6448              	.LVL298:
 124:sieve_extend.c ****     return index;
 6449              		.loc 1 124 11 is_stmt 1 view .LVU2197
 6450 27e5 E949FFFF 		jmp	.L658	#
 6450      FF
 6451 27ea 660F1F44 		.p2align 4,,10
 6451      0000
 6452              		.p2align 3
 6453              	.L633:
GAS LISTING /tmp/cctyCFAS.s 			page 186


 6454              	.LVL299:
 124:sieve_extend.c ****     return index;
 6455              		.loc 1 124 11 is_stmt 0 view .LVU2198
 6456              	.LBE351:
 6457              	.LBE350:
 996:sieve_extend.c ****         primeCount++;
 6458              		.loc 1 996 30 is_stmt 1 view .LVU2199
 6459              	# sieve_extend.c:996:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 996:sieve_extend.c ****         primeCount++;
 6460              		.loc 1 996 5 is_stmt 0 view .LVU2200
 6461 27f0 4839F3   		cmp	rbx, rsi	# factor, prephitmp_86
 6462 27f3 0F8227FF 		jb	.L635	#,
 6462      FFFF
 6463              	.LVL300:
 6464              	.L630:
 996:sieve_extend.c ****         primeCount++;
 6465              		.loc 1 996 5 view .LVU2201
 6466              	.LBE361:
1003:sieve_extend.c **** }
 6467              		.loc 1 1003 5 is_stmt 1 view .LVU2202
 6468              	.LBB362:
 6469              	.LBI362:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 6470              		.loc 3 105 1 view .LVU2203
 6471              	.LBB363:
 6472              		.loc 3 107 3 view .LVU2204
 6473              	.LBE363:
 6474              	.LBE362:
 6475              	# sieve_extend.c:1004: }
1004:sieve_extend.c **** 
 6476              		.loc 1 1004 1 is_stmt 0 view .LVU2205
 6477 27f9 4883C408 		add	rsp, 8	#,
 6478              		.cfi_remember_state
 6479              		.cfi_def_cfa_offset 56
 6480 27fd 5B       		pop	rbx	#
 6481              		.cfi_def_cfa_offset 48
 6482 27fe 5D       		pop	rbp	#
 6483              		.cfi_def_cfa_offset 40
 6484 27ff 415C     		pop	r12	#
 6485              		.cfi_def_cfa_offset 32
 6486 2801 415D     		pop	r13	#
 6487              		.cfi_def_cfa_offset 24
 6488              	.LBB367:
 6489              	.LBB364:
 6490              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 6491              		.loc 3 107 10 view .LVU2206
 6492 2803 4C89F2   		mov	rdx, r14	#, primeCount
 6493              	.LBE364:
 6494              	.LBE367:
 6495              	# sieve_extend.c:1004: }
1004:sieve_extend.c **** 
 6496              		.loc 1 1004 1 view .LVU2207
 6497 2806 415E     		pop	r14	#
 6498              		.cfi_def_cfa_offset 16
 6499              	# sieve_extend.c:1003:     printf("\nFound %ju primes until %ju\n",(uintmax_t)primeCount, (uintmax_
1003:sieve_extend.c **** }
 6500              		.loc 1 1003 5 view .LVU2208
GAS LISTING /tmp/cctyCFAS.s 			page 187


 6501 2808 488D4C36 		lea	rcx, 1[rsi+rsi]	# tmp135,
 6501      01
 6502              	.LBB368:
 6503              	.LBB365:
 6504              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 6505              		.loc 3 107 10 view .LVU2209
 6506 280d BF010000 		mov	edi, 1	#,
 6506      00
 6507 2812 488D3500 		lea	rsi, .LC1[rip]	#,
 6507      000000
 6508 2819 31C0     		xor	eax, eax	#
 6509              	.LBE365:
 6510              	.LBE368:
 6511              	# sieve_extend.c:1004: }
1004:sieve_extend.c **** 
 6512              		.loc 1 1004 1 view .LVU2210
 6513 281b 415F     		pop	r15	#
 6514              		.cfi_def_cfa_offset 8
 6515              	.LBB369:
 6516              	.LBB366:
 6517              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 6518              		.loc 3 107 10 view .LVU2211
 6519 281d E9000000 		jmp	__printf_chk@PLT	#
 6519      00
 6520              	.LVL301:
 6521              		.p2align 4,,10
 6522 2822 660F1F44 		.p2align 3
 6522      0000
 6523              	.L659:
 6524              		.cfi_restore_state
 6525              		.loc 3 107 10 view .LVU2212
 6526              	.LBE366:
 6527              	.LBE369:
 6528              	.LBB370:
 999:sieve_extend.c ****             if (primeCount % 10 == 0) printf("\n");
 6529              		.loc 1 999 13 is_stmt 1 view .LVU2213
 6530              	.LBB352:
 6531              	.LBI344:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 6532              		.loc 3 105 1 view .LVU2214
 6533              	.LBB346:
 6534              		.loc 3 107 3 view .LVU2215
 6535              	.LBE346:
 6536              	.LBE352:
 6537              	# sieve_extend.c:999:             printf("%3ju ",(uintmax_t)factor*2+1);
 999:sieve_extend.c ****             if (primeCount % 10 == 0) printf("\n");
 6538              		.loc 1 999 13 is_stmt 0 view .LVU2216
 6539 2828 488D541B 		lea	rdx, 1[rbx+rbx]	# tmp111,
 6539      01
 6540              	.LBB353:
 6541              	.LBB347:
 6542              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 6543              		.loc 3 107 10 view .LVU2217
 6544 282d BF010000 		mov	edi, 1	#,
 6544      00
 6545 2832 488D3500 		lea	rsi, .LC0[rip]	#,
 6545      000000
GAS LISTING /tmp/cctyCFAS.s 			page 188


 6546 2839 31C0     		xor	eax, eax	#
 6547 283b E8000000 		call	__printf_chk@PLT	#
 6547      00
 6548              	.LVL302:
 6549              		.loc 3 107 10 view .LVU2218
 6550              	.LBE347:
 6551              	.LBE353:
1000:sieve_extend.c ****         }
 6552              		.loc 1 1000 13 is_stmt 1 view .LVU2219
 6553              	.LBB354:
 6554              	.LBB348:
 6555              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 6556              		.loc 3 107 10 is_stmt 0 view .LVU2220
 6557 2840 4C89F0   		mov	rax, r14	# tmp120, primeCount
 6558 2843 490FAFC5 		imul	rax, r13	# tmp120, tmp136
 6559              	.LBE348:
 6560              	.LBE354:
 6561              	# sieve_extend.c:1000:             if (primeCount % 10 == 0) printf("\n");
1000:sieve_extend.c ****         }
 6562              		.loc 1 1000 16 view .LVU2221
 6563 2847 48BF9999 		movabs	rdi, 1844674407370955161	# tmp172,
 6563      99999999 
 6563      9919
 6564              	.LBB355:
 6565              	.LBB349:
 6566              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 6567              		.loc 3 107 10 view .LVU2222
 6568 2851 C4E3FBF0 		rorx	rdx, rax, 1	# tmp122, tmp120,
 6568      D001
 6569              	.LBE349:
 6570              	.LBE355:
 6571              	# sieve_extend.c:1000:             if (primeCount % 10 == 0) printf("\n");
1000:sieve_extend.c ****         }
 6572              		.loc 1 1000 16 view .LVU2223
 6573 2857 4839FA   		cmp	rdx, rdi	# tmp122, tmp172
 6574 285a 760C     		jbe	.L632	#,
 6575              	.L657:
 6576 285c 488B7500 		mov	rsi, QWORD PTR 0[rbp]	# prephitmp_86, *ISRA.76_32(D)
 6577              	.LBB356:
 6578              	.LBB357:
 6579              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 6580              		.loc 3 107 10 view .LVU2224
 6581 2860 E9C7FEFF 		jmp	.L631	#
 6581      FF
 6582              		.p2align 4,,10
 6583 2865 0F1F00   		.p2align 3
 6584              	.L632:
 6585              	.LBE357:
 6586              	.LBE356:
1000:sieve_extend.c ****         }
 6587              		.loc 1 1000 39 is_stmt 1 view .LVU2225
 6588              	.LVL303:
 6589              	.LBB359:
 6590              	.LBI356:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 6591              		.loc 3 105 1 view .LVU2226
 6592              	.LBB358:
GAS LISTING /tmp/cctyCFAS.s 			page 189


 6593              		.loc 3 107 3 view .LVU2227
 6594              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 6595              		.loc 3 107 10 is_stmt 0 view .LVU2228
 6596 2868 BF0A0000 		mov	edi, 10	#,
 6596      00
 6597 286d E8000000 		call	putchar@PLT	#
 6597      00
 6598              	.LVL304:
 6599 2872 EBE8     		jmp	.L657	#
 6600              	.LVL305:
 6601              	.L636:
 6602              		.loc 3 107 10 view .LVU2229
 6603              	.LBE358:
 6604              	.LBE359:
 6605              	.LBE370:
 6606              	# sieve_extend.c:995:     counter_t primeCount = 1;    // We already have 2
 995:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitarray, factor+
 6607              		.loc 1 995 15 view .LVU2230
 6608 2874 41BE0100 		mov	r14d, 1	# primeCount,
 6608      0000
 6609 287a E97AFFFF 		jmp	.L630	#
 6609      FF
 6610              		.cfi_endproc
 6611              	.LFE87:
 6613 287f 90       		.p2align 4
 6615              	sieve:
 6616              	.LVL306:
 6617              	.LFB77:
 970:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 6618              		.loc 1 970 86 is_stmt 1 view -0
 6619              		.cfi_startproc
 971:sieve_extend.c ****     counter_t prime         = 0;
 6620              		.loc 1 971 5 view .LVU2232
 6621              	# sieve_extend.c:970: static struct sieve_state *sieve(const counter_t maxints, const counter_t blo
 970:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 6622              		.loc 1 970 86 is_stmt 0 view .LVU2233
 6623 2880 55       		push	rbp	#
 6624              		.cfi_def_cfa_offset 16
 6625              		.cfi_offset 6, -16
 6626 2881 4889E5   		mov	rbp, rsp	#,
 6627              		.cfi_def_cfa_register 6
 6628 2884 4157     		push	r15	#
 6629 2886 4156     		push	r14	#
 6630 2888 4155     		push	r13	#
 6631              		.cfi_offset 15, -24
 6632              		.cfi_offset 14, -32
 6633              		.cfi_offset 13, -40
 6634 288a 4989F5   		mov	r13, rsi	# blocksize, tmp1685
 6635 288d 4154     		push	r12	#
 6636 288f 53       		push	rbx	#
 6637              		.cfi_offset 12, -48
 6638              		.cfi_offset 3, -56
 6639 2890 4889FB   		mov	rbx, rdi	# maxints, tmp1684
 6640              	.LVL307:
 6641              	.LBB453:
 6642              	.LBI453:
  83:sieve_extend.c ****     struct sieve_state *sieve = aligned_alloc(8, sizeof(struct sieve_state));
GAS LISTING /tmp/cctyCFAS.s 			page 190


 6643              		.loc 1 83 28 is_stmt 1 view .LVU2234
 6644              	.LBB454:
  84:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)maxints/2), anticiped_cache_line_bytesize*8) * anticiped_ca
 6645              		.loc 1 84 5 view .LVU2235
 6646              	# sieve_extend.c:85:     size_t memSize = ceiling(1+((size_t)maxints/2), anticiped_cache_line_bytes
  85:sieve_extend.c **** 
 6647              		.loc 1 85 22 is_stmt 0 view .LVU2236
 6648 2893 4989DF   		mov	r15, rbx	# prephitmp_1899, maxints
 6649              	.LBE454:
 6650              	.LBE453:
 6651              	# sieve_extend.c:970: static struct sieve_state *sieve(const counter_t maxints, const counter_t blo
 970:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 6652              		.loc 1 970 86 view .LVU2237
 6653 2896 4883E4C0 		and	rsp, -64	#,
 6654 289a 4881ECC0 		sub	rsp, 192	#,
 6654      000000
 6655              	.LBB458:
 6656              	.LBB455:
 6657              	# sieve_extend.c:85:     size_t memSize = ceiling(1+((size_t)maxints/2), anticiped_cache_line_bytes
  85:sieve_extend.c **** 
 6658              		.loc 1 85 22 view .LVU2238
 6659 28a1 49D1EF   		shr	r15	# prephitmp_1899
 6660              	.LBE455:
 6661              	.LBE458:
 6662              	# sieve_extend.c:970: static struct sieve_state *sieve(const counter_t maxints, const counter_t blo
 970:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 6663              		.loc 1 970 86 view .LVU2239
 6664 28a4 48897424 		mov	QWORD PTR 40[rsp], rsi	# %sfp, blocksize
 6664      28
 6665              	.LBB459:
 6666              	.LBB456:
 6667              	# sieve_extend.c:84:     struct sieve_state *sieve = aligned_alloc(8, sizeof(struct sieve_state));
  84:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)maxints/2), anticiped_cache_line_bytesize*8) * anticiped_ca
 6668              		.loc 1 84 33 view .LVU2240
 6669 28a9 BF080000 		mov	edi, 8	#,
 6669      00
 6670              	.LVL308:
  84:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)maxints/2), anticiped_cache_line_bytesize*8) * anticiped_ca
 6671              		.loc 1 84 33 view .LVU2241
 6672 28ae BE180000 		mov	esi, 24	#,
 6672      00
 6673              	.LVL309:
  84:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)maxints/2), anticiped_cache_line_bytesize*8) * anticiped_ca
 6674              		.loc 1 84 33 view .LVU2242
 6675 28b3 E8000000 		call	aligned_alloc@PLT	#
 6675      00
 6676              	.LVL310:
 6677              	# sieve_extend.c:85:     size_t memSize = ceiling(1+((size_t)maxints/2), anticiped_cache_line_bytes
  85:sieve_extend.c **** 
 6678              		.loc 1 85 22 view .LVU2243
 6679 28b8 498DB700 		lea	rsi, 1024[r15]	# tmp682,
 6679      040000
 6680 28bf 48C1EE0A 		shr	rsi, 10	# tmp683,
 6681              	# sieve_extend.c:85:     size_t memSize = ceiling(1+((size_t)maxints/2), anticiped_cache_line_bytes
  85:sieve_extend.c **** 
 6682              		.loc 1 85 12 view .LVU2244
 6683 28c3 48C1E607 		sal	rsi, 7	# memSize,
GAS LISTING /tmp/cctyCFAS.s 			page 191


 6684              	# sieve_extend.c:87:     sieve->bitarray = aligned_alloc((size_t)anticiped_cache_line_bytesize, (si
  87:sieve_extend.c ****     sieve->bits     = maxints >> 1;
 6685              		.loc 1 87 23 view .LVU2245
 6686 28c7 BF800000 		mov	edi, 128	#,
 6686      00
 6687              	# sieve_extend.c:84:     struct sieve_state *sieve = aligned_alloc(8, sizeof(struct sieve_state));
  84:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)maxints/2), anticiped_cache_line_bytesize*8) * anticiped_ca
 6688              		.loc 1 84 33 view .LVU2246
 6689 28cc 4989C6   		mov	r14, rax	# <retval>, tmp1686
 6690 28cf 48894424 		mov	QWORD PTR 80[rsp], rax	# %sfp, <retval>
 6690      50
 6691              	.LVL311:
  85:sieve_extend.c **** 
 6692              		.loc 1 85 5 is_stmt 1 view .LVU2247
 6693              	# sieve_extend.c:85:     size_t memSize = ceiling(1+((size_t)maxints/2), anticiped_cache_line_bytes
  85:sieve_extend.c **** 
 6694              		.loc 1 85 22 is_stmt 0 view .LVU2248
 6695 28d4 4C897C24 		mov	QWORD PTR 104[rsp], r15	# %sfp, prephitmp_1899
 6695      68
 6696              	.LVL312:
  87:sieve_extend.c ****     sieve->bits     = maxints >> 1;
 6697              		.loc 1 87 5 is_stmt 1 view .LVU2249
 6698              	# sieve_extend.c:87:     sieve->bitarray = aligned_alloc((size_t)anticiped_cache_line_bytesize, (si
  87:sieve_extend.c ****     sieve->bits     = maxints >> 1;
 6699              		.loc 1 87 23 is_stmt 0 view .LVU2250
 6700 28d9 E8000000 		call	aligned_alloc@PLT	#
 6700      00
 6701              	.LVL313:
  87:sieve_extend.c ****     sieve->bits     = maxints >> 1;
 6702              		.loc 1 87 23 view .LVU2251
 6703              	.LBE456:
 6704              	.LBE459:
 6705              	# sieve_extend.c:974:     counter_t block_stop    = blocksize-1;
 974:sieve_extend.c ****     bitword_t* bitarray        = sieve->bitarray;
 6706              		.loc 1 974 15 view .LVU2252
 6707 28de 498D55FF 		lea	rdx, -1[r13]	# block_stop,
 6708              	.LBB460:
 6709              	.LBB457:
 6710              	# sieve_extend.c:87:     sieve->bitarray = aligned_alloc((size_t)anticiped_cache_line_bytesize, (si
  87:sieve_extend.c ****     sieve->bits     = maxints >> 1;
 6711              		.loc 1 87 23 view .LVU2253
 6712 28e2 48894424 		mov	QWORD PTR 48[rsp], rax	# %sfp, _94
 6712      30
 6713              	# sieve_extend.c:87:     sieve->bitarray = aligned_alloc((size_t)anticiped_cache_line_bytesize, (si
  87:sieve_extend.c ****     sieve->bits     = maxints >> 1;
 6714              		.loc 1 87 21 view .LVU2254
 6715 28e7 498906   		mov	QWORD PTR [r14], rax	# sieve_89->bitarray, _94
  88:sieve_extend.c ****     sieve->size     = maxints;
 6716              		.loc 1 88 5 is_stmt 1 view .LVU2255
 6717              	# sieve_extend.c:88:     sieve->bits     = maxints >> 1;
  88:sieve_extend.c ****     sieve->size     = maxints;
 6718              		.loc 1 88 21 is_stmt 0 view .LVU2256
 6719 28ea 4D897E08 		mov	QWORD PTR 8[r14], r15	# sieve_89->bits, prephitmp_1899
  89:sieve_extend.c **** 
 6720              		.loc 1 89 5 is_stmt 1 view .LVU2257
 6721              	# sieve_extend.c:89:     sieve->size     = maxints;
  89:sieve_extend.c **** 
GAS LISTING /tmp/cctyCFAS.s 			page 192


 6722              		.loc 1 89 21 is_stmt 0 view .LVU2258
 6723 28ee 49895E10 		mov	QWORD PTR 16[r14], rbx	# sieve_89->size, maxints
  93:sieve_extend.c **** }
 6724              		.loc 1 93 5 is_stmt 1 view .LVU2259
 6725              	.LVL314:
  93:sieve_extend.c **** }
 6726              		.loc 1 93 5 is_stmt 0 view .LVU2260
 6727              	.LBE457:
 6728              	.LBE460:
 972:sieve_extend.c ****     counter_t block_start   = 0;
 6729              		.loc 1 972 5 is_stmt 1 view .LVU2261
 973:sieve_extend.c ****     counter_t block_stop    = blocksize-1;
 6730              		.loc 1 973 5 view .LVU2262
 974:sieve_extend.c ****     bitword_t* bitarray        = sieve->bitarray;
 6731              		.loc 1 974 5 view .LVU2263
 6732              	# sieve_extend.c:974:     counter_t block_stop    = blocksize-1;
 974:sieve_extend.c ****     bitword_t* bitarray        = sieve->bitarray;
 6733              		.loc 1 974 15 is_stmt 0 view .LVU2264
 6734 28f2 48895424 		mov	QWORD PTR 24[rsp], rdx	# %sfp, block_stop
 6734      18
 6735              	.LVL315:
 975:sieve_extend.c **** 
 6736              		.loc 1 975 5 is_stmt 1 view .LVU2265
 977:sieve_extend.c **** 
 6737              		.loc 1 977 5 view .LVU2266
 980:sieve_extend.c ****     extendSieve(bitarray, block.pattern_start, block.pattern_size, sieve->bits);
 6738              		.loc 1 980 5 view .LVU2267
 6739              	.LBB461:
 6740              	.LBI461:
 931:sieve_extend.c ****     register counter_t prime   = 0;
 6741              		.loc 1 931 21 view .LVU2268
 6742              	.LBB462:
 932:sieve_extend.c ****     counter_t patternsize_bits = 1;
 6743              		.loc 1 932 5 view .LVU2269
 933:sieve_extend.c ****     counter_t pattern_start    = 0;
 6744              		.loc 1 933 5 view .LVU2270
 934:sieve_extend.c ****     counter_t range_stop       = block_start;
 6745              		.loc 1 934 5 view .LVU2271
 935:sieve_extend.c ****     bitword_t* bitarray        = sieve->bitarray;
 6746              		.loc 1 935 5 view .LVU2272
 936:sieve_extend.c ****     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 };
 6747              		.loc 1 936 5 view .LVU2273
 937:sieve_extend.c **** 
 6748              		.loc 1 937 5 view .LVU2274
 939:sieve_extend.c ****     
 6749              		.loc 1 939 5 view .LVU2275
 6750              	# sieve_extend.c:939:     sieve->bitarray[0] = SAFE_ZERO; // only the first word has to be cleared;
 939:sieve_extend.c ****     
 6751              		.loc 1 939 24 is_stmt 0 view .LVU2276
 6752 28f7 48C70000 		mov	QWORD PTR [rax], 0	# MEM[(uint64_t *)_94],
 6752      000000
 941:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 6753              		.loc 1 941 5 is_stmt 1 view .LVU2277
 941:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 6754              		.loc 1 941 11 view .LVU2278
 6755              	# sieve_extend.c:941:     for (;range_stop < block_stop;) {
 941:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
GAS LISTING /tmp/cctyCFAS.s 			page 193


 6756              		.loc 1 941 5 is_stmt 0 view .LVU2279
 6757 28fe 4D85FF   		test	r15, r15	# prephitmp_1899
 6758 2901 0F84FB26 		je	.L1572	#,
 6758      0000
 6759              	.LBB463:
 6760              	# sieve_extend.c:942:         prime = searchBitFalse(bitarray, prime+1);
 942:sieve_extend.c ****         counter_t start = prime * prime * 2 + prime * 2;
 6761              		.loc 1 942 17 view .LVU2280
 6762 2907 48C74424 		mov	QWORD PTR 96[rsp], 1	# %sfp,
 6762      60010000 
 6762      00
 6763              	.LBE463:
 6764              	# sieve_extend.c:933:     counter_t patternsize_bits = 1;
 933:sieve_extend.c ****     counter_t pattern_start    = 0;
 6765              		.loc 1 933 15 view .LVU2281
 6766 2910 B8010000 		mov	eax, 1	# patternsize_bits,
 6766      00
 6767              	.LVL316:
 6768              	# sieve_extend.c:934:     counter_t pattern_start    = 0;
 934:sieve_extend.c ****     counter_t range_stop       = block_start;
 6769              		.loc 1 934 15 view .LVU2282
 6770 2915 48C74424 		mov	QWORD PTR 88[rsp], 0	# %sfp,
 6770      58000000 
 6770      00
 6771              	.LBB527:
 6772              	.LBB464:
 6773              	.LBB465:
 6774              	.LBB466:
 6775              	.LBB467:
 6776              	# sieve_extend.c:390:         register bitword_t mask = markmask(index);
 390:sieve_extend.c ****         applyMask(bitarray, step, range_stop, mask, wordindex(index));
 6777              		.loc 1 390 28 view .LVU2283
 6778 291e 48894424 		mov	QWORD PTR 120[rsp], rax	# %sfp, patternsize_bits
 6778      78
 6779 2923 4C8B7424 		mov	r14, QWORD PTR 48[rsp]	# _94, %sfp
 6779      30
 6780              	.LVL317:
 390:sieve_extend.c ****         applyMask(bitarray, step, range_stop, mask, wordindex(index));
 6781              		.loc 1 390 28 view .LVU2284
 6782 2928 488B7C24 		mov	rdi, QWORD PTR 96[rsp]	# index, %sfp
 6782      60
 6783              	.LBE467:
 6784              	.LBE466:
 6785              	.LBE465:
 6786              	.LBE464:
 6787              	.LBE527:
 6788              	# sieve_extend.c:937:     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 
 937:sieve_extend.c **** 
 6789              		.loc 1 937 18 view .LVU2285
 6790 292d 31D2     		xor	edx, edx	# block$pattern_size
 6791              	.LVL318:
 937:sieve_extend.c **** 
 6792              		.loc 1 937 18 view .LVU2286
 6793 292f 31F6     		xor	esi, esi	# block$pattern_start
 6794              	# sieve_extend.c:932:     register counter_t prime   = 0;
 932:sieve_extend.c ****     counter_t patternsize_bits = 1;
 6795              		.loc 1 932 24 view .LVU2287
GAS LISTING /tmp/cctyCFAS.s 			page 194


 6796 2931 31C9     		xor	ecx, ecx	# block$16
 6797              	.LBB528:
 6798              	.LBB483:
 6799              	.LBB481:
 6800              	.LBB479:
 6801              	.LBB476:
 6802              	# sieve_extend.c:390:         register bitword_t mask = markmask(index);
 390:sieve_extend.c ****         applyMask(bitarray, step, range_stop, mask, wordindex(index));
 6803              		.loc 1 390 28 view .LVU2288
 6804 2933 41BF0100 		mov	r15d, 1	# tmp1047,
 6804      0000
 6805              	.LVL319:
 6806 2939 0F1F8000 		.p2align 4,,10
 6806      000000
 6807              		.p2align 3
 6808              	.L661:
 390:sieve_extend.c ****         applyMask(bitarray, step, range_stop, mask, wordindex(index));
 6809              		.loc 1 390 28 view .LVU2289
 6810              	.LBE476:
 6811              	.LBE479:
 6812              	.LBE481:
 6813              	.LBE483:
 6814              	.LBB484:
 6815              	.LBB485:
 125:sieve_extend.c **** }
 6816              		.loc 1 125 5 is_stmt 1 view .LVU2290
 125:sieve_extend.c **** }
 6817              		.loc 1 125 5 is_stmt 0 view .LVU2291
 6818              	.LBE485:
 6819              	.LBE484:
 943:sieve_extend.c ****         if (start > block_stop) break;
 6820              		.loc 1 943 9 is_stmt 1 view .LVU2292
 6821              	# sieve_extend.c:943:         counter_t start = prime * prime * 2 + prime * 2;
 943:sieve_extend.c ****         if (start > block_stop) break;
 6822              		.loc 1 943 45 is_stmt 0 view .LVU2293
 6823 2940 4C8D6F01 		lea	r13, 1[rdi]	# index,
 6824 2944 4C8D243F 		lea	r12, [rdi+rdi]	# _531,
 6825              	# sieve_extend.c:943:         counter_t start = prime * prime * 2 + prime * 2;
 943:sieve_extend.c ****         if (start > block_stop) break;
 6826              		.loc 1 943 19 view .LVU2294
 6827 2948 4C89EB   		mov	rbx, r13	# index, index
 6828 294b 490FAFDC 		imul	rbx, r12	# index, _531
 6829              	.LVL320:
 944:sieve_extend.c **** 
 6830              		.loc 1 944 9 is_stmt 1 view .LVU2295
 6831              	# sieve_extend.c:944:         if (start > block_stop) break;
 944:sieve_extend.c **** 
 6832              		.loc 1 944 12 is_stmt 0 view .LVU2296
 6833 294f 483B5C24 		cmp	rbx, QWORD PTR 104[rsp]	# index, %sfp
 6833      68
 6834 2954 0F87AA0E 		ja	.L1573	#,
 6834      0000
 946:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 6835              		.loc 1 946 9 is_stmt 1 view .LVU2297
 6836              	# sieve_extend.c:946:         const counter_t step  = prime * 2 + 1;
 946:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 6837              		.loc 1 946 25 is_stmt 0 view .LVU2298
GAS LISTING /tmp/cctyCFAS.s 			page 195


 6838 295a 49FFC4   		inc	r12	# step
 6839              	.LVL321:
 947:sieve_extend.c **** 
 6840              		.loc 1 947 9 is_stmt 1 view .LVU2299
 6841              	# sieve_extend.c:947:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 947:sieve_extend.c **** 
 6842              		.loc 1 947 12 is_stmt 0 view .LVU2300
 6843 295d 4D85ED   		test	r13, r13	# index
 6844 2960 7516     		jne	.L667	#,
 947:sieve_extend.c **** 
 6845              		.loc 1 947 41 is_stmt 1 view .LVU2301
 6846              	# sieve_extend.c:947:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 947:sieve_extend.c **** 
 6847              		.loc 1 947 102 is_stmt 0 view .LVU2302
 6848 2962 48C7C0FF 		mov	rax, -1	# tmp699,
 6848      FFFFFF
 6849 2969 31D2     		xor	edx, edx	# tmp698
 6850 296b 49F7F4   		div	r12	# step
 6851              	# sieve_extend.c:947:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 947:sieve_extend.c **** 
 6852              		.loc 1 947 47 view .LVU2303
 6853 296e 48C7C3FE 		mov	rbx, -2	# index,
 6853      FFFFFF
 6854              	.LVL322:
 947:sieve_extend.c **** 
 6855              		.loc 1 947 47 view .LVU2304
 6856 2975 4829D3   		sub	rbx, rdx	# index, tmp698
 6857              	.LVL323:
 6858              	.L667:
 949:sieve_extend.c ****         block.pattern_size = patternsize_bits;
 6859              		.loc 1 949 9 is_stmt 1 view .LVU2305
 6860              	# sieve_extend.c:949:         range_stop = block_start + patternsize_bits * step * 2;  // range is 
 949:sieve_extend.c ****         block.pattern_size = patternsize_bits;
 6861              		.loc 1 949 53 is_stmt 0 view .LVU2306
 6862 2978 488B7424 		mov	rsi, QWORD PTR 120[rsp]	# _65, %sfp
 6862      78
 6863 297d 490FAFF4 		imul	rsi, r12	# _65, step
 6864 2981 48897424 		mov	QWORD PTR 64[rsp], rsi	# %sfp, _65
 6864      40
 6865              	# sieve_extend.c:949:         range_stop = block_start + patternsize_bits * step * 2;  // range is 
 949:sieve_extend.c ****         block.pattern_size = patternsize_bits;
 6866              		.loc 1 949 60 view .LVU2307
 6867 2986 4801F6   		add	rsi, rsi	# _66
 6868 2989 48897424 		mov	QWORD PTR 112[rsp], rsi	# %sfp, _66
 6868      70
 6869              	.LVL324:
 950:sieve_extend.c ****         block.pattern_start = pattern_start;
 6870              		.loc 1 950 9 is_stmt 1 view .LVU2308
 951:sieve_extend.c ****         if (range_stop > block_stop) return block; //range_stop = block_stop;
 6871              		.loc 1 951 9 view .LVU2309
 952:sieve_extend.c **** 
 6872              		.loc 1 952 9 view .LVU2310
 6873              	# sieve_extend.c:952:         if (range_stop > block_stop) return block; //range_stop = block_stop;
 952:sieve_extend.c **** 
 6874              		.loc 1 952 12 is_stmt 0 view .LVU2311
 6875 298e 483B7424 		cmp	rsi, QWORD PTR 104[rsp]	# _66, %sfp
 6875      68
GAS LISTING /tmp/cctyCFAS.s 			page 196


 6876 2993 0F872926 		ja	.L1574	#,
 6876      0000
 954:sieve_extend.c ****             pattern_start = block_start | patternsize_bits;
 6877              		.loc 1 954 9 is_stmt 1 view .LVU2312
 6878 2999 4C8B4424 		mov	r8, QWORD PTR 88[rsp]	# pattern_start, %sfp
 6878      58
 6879              	# sieve_extend.c:954:         if (patternsize_bits>1) {
 954:sieve_extend.c ****             pattern_start = block_start | patternsize_bits;
 6880              		.loc 1 954 12 is_stmt 0 view .LVU2313
 6881 299e 4C8B4C24 		mov	r9, QWORD PTR 120[rsp]	# patternsize_bits, %sfp
 6881      78
 6882 29a3 4C894424 		mov	QWORD PTR 72[rsp], r8	# %sfp, pattern_start
 6882      48
 6883 29a8 4983F901 		cmp	r9, 1	# patternsize_bits,
 6884 29ac 0F879E04 		ja	.L1575	#,
 6884      0000
 6885              	.LVL325:
 6886              	.L670:
 958:sieve_extend.c **** 
 6887              		.loc 1 958 9 is_stmt 1 view .LVU2314
 960:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitarray, start, step, range_
 6888              		.loc 1 960 9 view .LVU2315
 6889              	# sieve_extend.c:960:         if      (step < SMALLSTEP_FASTER)      setBitsTrue_smallStep (bitarra
 960:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitarray, start, step, range_
 6890              		.loc 1 960 17 is_stmt 0 view .LVU2316
 6891 29b2 4C3B2500 		cmp	r12, QWORD PTR global_SMALLSTEP_FASTER[rip]	# step, global_SMALLSTEP_FASTER
 6891      000000
 6892 29b9 0F82E904 		jb	.L1576	#,
 6892      0000
 6893              	.LVL326:
 6894              	.L674:
 961:sieve_extend.c ****         else if (step < WORD_SIZE_counter * 4) setBitsTrue_largeRange_vector(bitarray, start, step,
 6895              		.loc 1 961 14 is_stmt 1 view .LVU2317
 6896 29bf 4D89E0   		mov	r8, r12	# tmp727, step
 6897 29c2 49C1E006 		sal	r8, 6	# tmp727,
 6898 29c6 4901D8   		add	r8, rbx	# tmp727, index
 6899 29c9 410F92C1 		setc	r9b	#, _203
 6900              	# sieve_extend.c:961:         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitarra
 961:sieve_extend.c ****         else if (step < WORD_SIZE_counter * 4) setBitsTrue_largeRange_vector(bitarray, start, step,
 6901              		.loc 1 961 17 is_stmt 0 view .LVU2318
 6902 29cd 4C3B2500 		cmp	r12, QWORD PTR global_MEDIUMSTEP_FASTER[rip]	# step, global_MEDIUMSTEP_FASTER
 6902      000000
 6903 29d4 4C894424 		mov	QWORD PTR 56[rsp], r8	# %sfp, tmp727
 6903      38
 6904 29d9 410FB6D1 		movzx	edx, r9b	# _203, _203
 6905 29dd 0F82FD09 		jb	.L1577	#,
 6905      0000
 962:sieve_extend.c ****         else                                   setBitsTrue_largeRange(bitarray, start, step, range_
 6906              		.loc 1 962 14 is_stmt 1 view .LVU2319
 6907              	# sieve_extend.c:962:         else if (step < WORD_SIZE_counter * 4) setBitsTrue_largeRange_vector(
 962:sieve_extend.c ****         else                                   setBitsTrue_largeRange(bitarray, start, step, range_
 6908              		.loc 1 962 17 is_stmt 0 view .LVU2320
 6909 29e3 4981FCFF 		cmp	r12, 255	# step,
 6909      000000
 6910 29ea 0F87F007 		ja	.L696	#,
 6910      0000
 962:sieve_extend.c ****         else                                   setBitsTrue_largeRange(bitarray, start, step, range_
GAS LISTING /tmp/cctyCFAS.s 			page 197


 6911              		.loc 1 962 48 is_stmt 1 view .LVU2321
 6912              	.LVL327:
 6913              	.LBB487:
 6914              	.LBI487:
 395:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 6915              		.loc 1 395 13 view .LVU2322
 6916              	.LBB488:
 396:sieve_extend.c **** 
 6917              		.loc 1 396 5 view .LVU2323
 398:sieve_extend.c ****     // for (counter_t index = range_start; index <= range_stop_unique; index += step) {
 6918              		.loc 1 398 5 view .LVU2324
 405:sieve_extend.c ****     bitvector_t mask = { SAFE_ZERO,SAFE_ZERO,SAFE_ZERO,SAFE_ZERO };
 6919              		.loc 1 405 5 view .LVU2325
 406:sieve_extend.c ****     bitword_t* bitarray = bitarray_word;
 6920              		.loc 1 406 5 view .LVU2326
 6921              	.LBB489:
 6922              	.LBB490:
 6923              	# sieve_extend.c:427:             counter_t range_stop_word = wordindex(range_stop);
 427:sieve_extend.c ****             index_word = start_word;
 6924              		.loc 1 427 23 is_stmt 0 view .LVU2327
 6925 29f0 488B4C24 		mov	rcx, QWORD PTR 112[rsp]	# range_stop_word, %sfp
 6925      70
 6926              	.LBE490:
 6927              	.LBE489:
 6928              	# sieve_extend.c:406:     bitvector_t mask = { SAFE_ZERO,SAFE_ZERO,SAFE_ZERO,SAFE_ZERO };
 406:sieve_extend.c ****     bitword_t* bitarray = bitarray_word;
 6929              		.loc 1 406 17 view .LVU2328
 6930 29f5 C5F9EFC0 		vpxor	xmm0, xmm0, xmm0	# tmp1680
 6931 29f9 C5F82984 		vmovaps	XMMWORD PTR 128[rsp], xmm0	# mask, tmp1680
 6931      24800000 
 6931      00
 6932 2a02 C5F82984 		vmovaps	XMMWORD PTR 144[rsp], xmm0	# mask, tmp1680
 6932      24900000 
 6932      00
 6933 2a0b C5F82984 		vmovaps	XMMWORD PTR 160[rsp], xmm0	# mask, tmp1680
 6933      24A00000 
 6933      00
 6934 2a14 C5F82984 		vmovaps	XMMWORD PTR 176[rsp], xmm0	# mask, tmp1680
 6934      24B00000 
 6934      00
 407:sieve_extend.c ****     bitvector_t* bitarray_vector = (bitvector_t*)bitarray_word;
 6935              		.loc 1 407 5 is_stmt 1 view .LVU2329
 408:sieve_extend.c **** 
 6936              		.loc 1 408 5 view .LVU2330
 410:sieve_extend.c ****         for (counter_t index = range_start; index <= range_stop_unique; ) {
 6937              		.loc 1 410 5 view .LVU2331
 6938              	.LVL328:
 6939              	.LBB493:
 411:sieve_extend.c ****             // debug printf("..Processing index %ju for step %ju (stop at %ju)\n",index, step, rang
 6940              		.loc 1 411 45 view .LVU2332
 6941              	.LBB491:
 6942              	# sieve_extend.c:427:             counter_t range_stop_word = wordindex(range_stop);
 427:sieve_extend.c ****             index_word = start_word;
 6943              		.loc 1 427 23 is_stmt 0 view .LVU2333
 6944 2a1d 48C1E906 		shr	rcx, 6	# range_stop_word,
 6945 2a21 4E8D14E5 		lea	r10, 0[0+r12*8]	# _1765,
 6945      00000000 
GAS LISTING /tmp/cctyCFAS.s 			page 198


 6946              	.LBE491:
 6947              	# sieve_extend.c:411:         for (counter_t index = range_start; index <= range_stop_unique; ) {
 411:sieve_extend.c ****             // debug printf("..Processing index %ju for step %ju (stop at %ju)\n",index, step, rang
 6948              		.loc 1 411 9 view .LVU2334
 6949 2a29 4885D2   		test	rdx, rdx	# _203
 6950 2a2c 0F851F03 		jne	.L678	#,
 6950      0000
 6951 2a32 4C896C24 		mov	QWORD PTR 32[rsp], r13	# %sfp, index
 6951      20
 6952 2a37 4C8B6C24 		mov	r13, QWORD PTR 56[rsp]	# tmp728, %sfp
 6952      38
 6953              	.LVL329:
 6954 2a3c 0F1F4000 		.p2align 4,,10
 6955              		.p2align 3
 6956              	.L705:
 6957              	.LBB492:
 413:sieve_extend.c ****             register counter_t index_word = start_word;
 6958              		.loc 1 413 13 is_stmt 1 view .LVU2335
 6959              	# sieve_extend.c:413:             counter_t start_word = wordindex(index);
 413:sieve_extend.c ****             register counter_t index_word = start_word;
 6960              		.loc 1 413 23 is_stmt 0 view .LVU2336
 6961 2a40 4889DA   		mov	rdx, rbx	# start_word, index
 6962              	# sieve_extend.c:421:                 mask[word] |= markmask(index);
 421:sieve_extend.c ****                 index += step;
 6963              		.loc 1 421 31 view .LVU2337
 6964 2a43 C4C2E1F7 		shlx	rdi, r15, rbx	# tmp757, tmp1047, index
 6964      FF
 6965              	# sieve_extend.c:422:                 index += step;
 422:sieve_extend.c ****                 index_word = wordindex(index);
 6966              		.loc 1 422 23 view .LVU2338
 6967 2a48 4C01E3   		add	rbx, r12	# index, step
 6968              	.LVL330:
 6969              	# sieve_extend.c:423:                 index_word = wordindex(index);
 423:sieve_extend.c ****                 word = index_word - start_word;
 6970              		.loc 1 423 28 view .LVU2339
 6971 2a4b 4889D8   		mov	rax, rbx	# index_word, index
 6972              	# sieve_extend.c:413:             counter_t start_word = wordindex(index);
 413:sieve_extend.c ****             register counter_t index_word = start_word;
 6973              		.loc 1 413 23 view .LVU2340
 6974 2a4e 48C1EA06 		shr	rdx, 6	# start_word,
 6975              	.LVL331:
 414:sieve_extend.c ****             int word = 0;
 6976              		.loc 1 414 13 is_stmt 1 view .LVU2341
 415:sieve_extend.c ****             mask[0] = SAFE_ZERO;
 6977              		.loc 1 415 13 view .LVU2342
 416:sieve_extend.c ****             mask[1] = SAFE_ZERO;
 6978              		.loc 1 416 13 view .LVU2343
 417:sieve_extend.c ****             mask[2] = SAFE_ZERO;
 6979              		.loc 1 417 13 view .LVU2344
 6980              	# sieve_extend.c:423:                 index_word = wordindex(index);
 423:sieve_extend.c ****                 word = index_word - start_word;
 6981              		.loc 1 423 28 is_stmt 0 view .LVU2345
 6982 2a52 48C1E806 		shr	rax, 6	# index_word,
 6983              	# sieve_extend.c:424:                 word = index_word - start_word;
 424:sieve_extend.c ****             } while (word < 4 );
 6984              		.loc 1 424 35 view .LVU2346
 6985 2a56 29D0     		sub	eax, edx	# word, start_word
GAS LISTING /tmp/cctyCFAS.s 			page 199


 6986              	# sieve_extend.c:417:             mask[1] = SAFE_ZERO;
 417:sieve_extend.c ****             mask[2] = SAFE_ZERO;
 6987              		.loc 1 417 21 view .LVU2347
 6988 2a58 48C78424 		mov	QWORD PTR 136[rsp], 0	# mask,
 6988      88000000 
 6988      00000000 
 418:sieve_extend.c ****             mask[3] = SAFE_ZERO;
 6989              		.loc 1 418 13 is_stmt 1 view .LVU2348
 6990              	# sieve_extend.c:418:             mask[2] = SAFE_ZERO;
 418:sieve_extend.c ****             mask[3] = SAFE_ZERO;
 6991              		.loc 1 418 21 is_stmt 0 view .LVU2349
 6992 2a64 48C78424 		mov	QWORD PTR 144[rsp], 0	# mask,
 6992      90000000 
 6992      00000000 
 419:sieve_extend.c ****             do {
 6993              		.loc 1 419 13 is_stmt 1 view .LVU2350
 6994              	# sieve_extend.c:419:             mask[3] = SAFE_ZERO;
 419:sieve_extend.c ****             do {
 6995              		.loc 1 419 21 is_stmt 0 view .LVU2351
 6996 2a70 48C78424 		mov	QWORD PTR 152[rsp], 0	# mask,
 6996      98000000 
 6996      00000000 
 6997              	# sieve_extend.c:421:                 mask[word] |= markmask(index);
 421:sieve_extend.c ****                 index += step;
 6998              		.loc 1 421 31 view .LVU2352
 6999 2a7c 4889BC24 		mov	QWORD PTR 128[rsp], rdi	# mask, tmp757
 6999      80000000 
 7000 2a84 4189D0   		mov	r8d, edx	# _1592, start_word
 420:sieve_extend.c ****                 mask[word] |= markmask(index);
 7001              		.loc 1 420 13 is_stmt 1 view .LVU2353
 421:sieve_extend.c ****                 index += step;
 7002              		.loc 1 421 17 view .LVU2354
 422:sieve_extend.c ****                 index_word = wordindex(index);
 7003              		.loc 1 422 17 view .LVU2355
 7004              	.LVL332:
 423:sieve_extend.c ****                 word = index_word - start_word;
 7005              		.loc 1 423 17 view .LVU2356
 424:sieve_extend.c ****             } while (word < 4 );
 7006              		.loc 1 424 17 view .LVU2357
 425:sieve_extend.c **** 
 7007              		.loc 1 425 21 view .LVU2358
 7008              	# sieve_extend.c:425:             } while (word < 4 );
 425:sieve_extend.c **** 
 7009              		.loc 1 425 13 is_stmt 0 view .LVU2359
 7010 2a87 83F803   		cmp	eax, 3	# word,
 7011 2a8a 0F8F2001 		jg	.L698	#,
 7011      0000
 7012              	.LVL333:
 7013              	.L699:
 420:sieve_extend.c ****                 mask[word] |= markmask(index);
 7014              		.loc 1 420 13 is_stmt 1 view .LVU2360
 421:sieve_extend.c ****                 index += step;
 7015              		.loc 1 421 17 view .LVU2361
 7016              	# sieve_extend.c:421:                 mask[word] |= markmask(index);
 421:sieve_extend.c ****                 index += step;
 7017              		.loc 1 421 28 is_stmt 0 view .LVU2362
 7018 2a90 4898     		cdqe
GAS LISTING /tmp/cctyCFAS.s 			page 200


 7019              	# sieve_extend.c:421:                 mask[word] |= markmask(index);
 421:sieve_extend.c ****                 index += step;
 7020              		.loc 1 421 31 view .LVU2363
 7021 2a92 C442E1F7 		shlx	r11, r15, rbx	# tmp761, tmp1047, index
 7021      DF
 7022              	# sieve_extend.c:422:                 index += step;
 422:sieve_extend.c ****                 index_word = wordindex(index);
 7023              		.loc 1 422 23 view .LVU2364
 7024 2a97 4C01E3   		add	rbx, r12	# index, step
 7025              	.LVL334:
 7026              	# sieve_extend.c:421:                 mask[word] |= markmask(index);
 421:sieve_extend.c ****                 index += step;
 7027              		.loc 1 421 28 view .LVU2365
 7028 2a9a 4C099CC4 		or	QWORD PTR 128[rsp+rax*8], r11	# mask, tmp761
 7028      80000000 
 422:sieve_extend.c ****                 index_word = wordindex(index);
 7029              		.loc 1 422 17 is_stmt 1 view .LVU2366
 7030              	.LVL335:
 423:sieve_extend.c ****                 word = index_word - start_word;
 7031              		.loc 1 423 17 view .LVU2367
 424:sieve_extend.c ****             } while (word < 4 );
 7032              		.loc 1 424 17 view .LVU2368
 7033              	# sieve_extend.c:423:                 index_word = wordindex(index);
 423:sieve_extend.c ****                 word = index_word - start_word;
 7034              		.loc 1 423 28 is_stmt 0 view .LVU2369
 7035 2aa2 4889D8   		mov	rax, rbx	# index_word, index
 7036 2aa5 48C1E806 		shr	rax, 6	# index_word,
 7037              	.LVL336:
 7038              	# sieve_extend.c:424:                 word = index_word - start_word;
 424:sieve_extend.c ****             } while (word < 4 );
 7039              		.loc 1 424 35 view .LVU2370
 7040 2aa9 4429C0   		sub	eax, r8d	# word, _1592
 7041              	.LVL337:
 425:sieve_extend.c **** 
 7042              		.loc 1 425 21 is_stmt 1 view .LVU2371
 7043              	# sieve_extend.c:425:             } while (word < 4 );
 425:sieve_extend.c **** 
 7044              		.loc 1 425 13 is_stmt 0 view .LVU2372
 7045 2aac 83F803   		cmp	eax, 3	# word,
 7046 2aaf 0F8FFB00 		jg	.L698	#,
 7046      0000
 7047              	.LVL338:
 420:sieve_extend.c ****                 mask[word] |= markmask(index);
 7048              		.loc 1 420 13 is_stmt 1 view .LVU2373
 421:sieve_extend.c ****                 index += step;
 7049              		.loc 1 421 17 view .LVU2374
 7050              	# sieve_extend.c:421:                 mask[word] |= markmask(index);
 421:sieve_extend.c ****                 index += step;
 7051              		.loc 1 421 28 is_stmt 0 view .LVU2375
 7052 2ab5 4898     		cdqe
 7053              	# sieve_extend.c:421:                 mask[word] |= markmask(index);
 421:sieve_extend.c ****                 index += step;
 7054              		.loc 1 421 31 view .LVU2376
 7055 2ab7 C442E1F7 		shlx	r9, r15, rbx	# tmp1641, tmp1047, index
 7055      CF
 7056              	# sieve_extend.c:422:                 index += step;
 422:sieve_extend.c ****                 index_word = wordindex(index);
GAS LISTING /tmp/cctyCFAS.s 			page 201


 7057              		.loc 1 422 23 view .LVU2377
 7058 2abc 4C01E3   		add	rbx, r12	# index, step
 7059              	.LVL339:
 7060              	# sieve_extend.c:421:                 mask[word] |= markmask(index);
 421:sieve_extend.c ****                 index += step;
 7061              		.loc 1 421 28 view .LVU2378
 7062 2abf 4C098CC4 		or	QWORD PTR 128[rsp+rax*8], r9	# mask, tmp1641
 7062      80000000 
 422:sieve_extend.c ****                 index_word = wordindex(index);
 7063              		.loc 1 422 17 is_stmt 1 view .LVU2379
 7064              	.LVL340:
 423:sieve_extend.c ****                 word = index_word - start_word;
 7065              		.loc 1 423 17 view .LVU2380
 424:sieve_extend.c ****             } while (word < 4 );
 7066              		.loc 1 424 17 view .LVU2381
 7067              	# sieve_extend.c:423:                 index_word = wordindex(index);
 423:sieve_extend.c ****                 word = index_word - start_word;
 7068              		.loc 1 423 28 is_stmt 0 view .LVU2382
 7069 2ac7 4889D8   		mov	rax, rbx	# index_word, index
 7070 2aca 48C1E806 		shr	rax, 6	# index_word,
 7071              	.LVL341:
 7072              	# sieve_extend.c:424:                 word = index_word - start_word;
 424:sieve_extend.c ****             } while (word < 4 );
 7073              		.loc 1 424 35 view .LVU2383
 7074 2ace 4429C0   		sub	eax, r8d	# word, _1592
 7075              	.LVL342:
 425:sieve_extend.c **** 
 7076              		.loc 1 425 21 is_stmt 1 view .LVU2384
 7077              	# sieve_extend.c:425:             } while (word < 4 );
 425:sieve_extend.c **** 
 7078              		.loc 1 425 13 is_stmt 0 view .LVU2385
 7079 2ad1 83F803   		cmp	eax, 3	# word,
 7080 2ad4 0F8FD600 		jg	.L698	#,
 7080      0000
 7081              	.LVL343:
 420:sieve_extend.c ****                 mask[word] |= markmask(index);
 7082              		.loc 1 420 13 is_stmt 1 view .LVU2386
 421:sieve_extend.c ****                 index += step;
 7083              		.loc 1 421 17 view .LVU2387
 7084              	# sieve_extend.c:421:                 mask[word] |= markmask(index);
 421:sieve_extend.c ****                 index += step;
 7085              		.loc 1 421 28 is_stmt 0 view .LVU2388
 7086 2ada 4898     		cdqe
 7087              	# sieve_extend.c:421:                 mask[word] |= markmask(index);
 421:sieve_extend.c ****                 index += step;
 7088              		.loc 1 421 31 view .LVU2389
 7089 2adc C4C2E1F7 		shlx	rsi, r15, rbx	# tmp1646, tmp1047, index
 7089      F7
 7090              	# sieve_extend.c:422:                 index += step;
 422:sieve_extend.c ****                 index_word = wordindex(index);
 7091              		.loc 1 422 23 view .LVU2390
 7092 2ae1 4C01E3   		add	rbx, r12	# index, step
 7093              	.LVL344:
 7094              	# sieve_extend.c:421:                 mask[word] |= markmask(index);
 421:sieve_extend.c ****                 index += step;
 7095              		.loc 1 421 28 view .LVU2391
 7096 2ae4 4809B4C4 		or	QWORD PTR 128[rsp+rax*8], rsi	# mask, tmp1646
GAS LISTING /tmp/cctyCFAS.s 			page 202


 7096      80000000 
 422:sieve_extend.c ****                 index_word = wordindex(index);
 7097              		.loc 1 422 17 is_stmt 1 view .LVU2392
 7098              	.LVL345:
 423:sieve_extend.c ****                 word = index_word - start_word;
 7099              		.loc 1 423 17 view .LVU2393
 424:sieve_extend.c ****             } while (word < 4 );
 7100              		.loc 1 424 17 view .LVU2394
 7101              	# sieve_extend.c:423:                 index_word = wordindex(index);
 423:sieve_extend.c ****                 word = index_word - start_word;
 7102              		.loc 1 423 28 is_stmt 0 view .LVU2395
 7103 2aec 4889D8   		mov	rax, rbx	# index_word, index
 7104 2aef 48C1E806 		shr	rax, 6	# index_word,
 7105              	.LVL346:
 7106              	# sieve_extend.c:424:                 word = index_word - start_word;
 424:sieve_extend.c ****             } while (word < 4 );
 7107              		.loc 1 424 35 view .LVU2396
 7108 2af3 4429C0   		sub	eax, r8d	# word, _1592
 7109              	.LVL347:
 425:sieve_extend.c **** 
 7110              		.loc 1 425 21 is_stmt 1 view .LVU2397
 7111              	# sieve_extend.c:425:             } while (word < 4 );
 425:sieve_extend.c **** 
 7112              		.loc 1 425 13 is_stmt 0 view .LVU2398
 7113 2af6 83F803   		cmp	eax, 3	# word,
 7114 2af9 0F8FB100 		jg	.L698	#,
 7114      0000
 7115              	.LVL348:
 420:sieve_extend.c ****                 mask[word] |= markmask(index);
 7116              		.loc 1 420 13 is_stmt 1 view .LVU2399
 421:sieve_extend.c ****                 index += step;
 7117              		.loc 1 421 17 view .LVU2400
 7118              	# sieve_extend.c:421:                 mask[word] |= markmask(index);
 421:sieve_extend.c ****                 index += step;
 7119              		.loc 1 421 28 is_stmt 0 view .LVU2401
 7120 2aff 4898     		cdqe
 7121              	# sieve_extend.c:421:                 mask[word] |= markmask(index);
 421:sieve_extend.c ****                 index += step;
 7122              		.loc 1 421 31 view .LVU2402
 7123 2b01 C4C2E1F7 		shlx	rdi, r15, rbx	# tmp1651, tmp1047, index
 7123      FF
 7124              	# sieve_extend.c:422:                 index += step;
 422:sieve_extend.c ****                 index_word = wordindex(index);
 7125              		.loc 1 422 23 view .LVU2403
 7126 2b06 4C01E3   		add	rbx, r12	# index, step
 7127              	.LVL349:
 7128              	# sieve_extend.c:421:                 mask[word] |= markmask(index);
 421:sieve_extend.c ****                 index += step;
 7129              		.loc 1 421 28 view .LVU2404
 7130 2b09 4809BCC4 		or	QWORD PTR 128[rsp+rax*8], rdi	# mask, tmp1651
 7130      80000000 
 422:sieve_extend.c ****                 index_word = wordindex(index);
 7131              		.loc 1 422 17 is_stmt 1 view .LVU2405
 7132              	.LVL350:
 423:sieve_extend.c ****                 word = index_word - start_word;
 7133              		.loc 1 423 17 view .LVU2406
 424:sieve_extend.c ****             } while (word < 4 );
GAS LISTING /tmp/cctyCFAS.s 			page 203


 7134              		.loc 1 424 17 view .LVU2407
 7135              	# sieve_extend.c:423:                 index_word = wordindex(index);
 423:sieve_extend.c ****                 word = index_word - start_word;
 7136              		.loc 1 423 28 is_stmt 0 view .LVU2408
 7137 2b11 4889D8   		mov	rax, rbx	# index_word, index
 7138 2b14 48C1E806 		shr	rax, 6	# index_word,
 7139              	.LVL351:
 7140              	# sieve_extend.c:424:                 word = index_word - start_word;
 424:sieve_extend.c ****             } while (word < 4 );
 7141              		.loc 1 424 35 view .LVU2409
 7142 2b18 4429C0   		sub	eax, r8d	# word, _1592
 7143              	.LVL352:
 425:sieve_extend.c **** 
 7144              		.loc 1 425 21 is_stmt 1 view .LVU2410
 7145              	# sieve_extend.c:425:             } while (word < 4 );
 425:sieve_extend.c **** 
 7146              		.loc 1 425 13 is_stmt 0 view .LVU2411
 7147 2b1b 83F803   		cmp	eax, 3	# word,
 7148 2b1e 0F8F8C00 		jg	.L698	#,
 7148      0000
 7149              	.LVL353:
 420:sieve_extend.c ****                 mask[word] |= markmask(index);
 7150              		.loc 1 420 13 is_stmt 1 view .LVU2412
 421:sieve_extend.c ****                 index += step;
 7151              		.loc 1 421 17 view .LVU2413
 7152              	# sieve_extend.c:421:                 mask[word] |= markmask(index);
 421:sieve_extend.c ****                 index += step;
 7153              		.loc 1 421 28 is_stmt 0 view .LVU2414
 7154 2b24 4898     		cdqe
 7155              	# sieve_extend.c:421:                 mask[word] |= markmask(index);
 421:sieve_extend.c ****                 index += step;
 7156              		.loc 1 421 31 view .LVU2415
 7157 2b26 C442E1F7 		shlx	r11, r15, rbx	# tmp1656, tmp1047, index
 7157      DF
 7158              	# sieve_extend.c:422:                 index += step;
 422:sieve_extend.c ****                 index_word = wordindex(index);
 7159              		.loc 1 422 23 view .LVU2416
 7160 2b2b 4C01E3   		add	rbx, r12	# index, step
 7161              	.LVL354:
 7162              	# sieve_extend.c:421:                 mask[word] |= markmask(index);
 421:sieve_extend.c ****                 index += step;
 7163              		.loc 1 421 28 view .LVU2417
 7164 2b2e 4C099CC4 		or	QWORD PTR 128[rsp+rax*8], r11	# mask, tmp1656
 7164      80000000 
 422:sieve_extend.c ****                 index_word = wordindex(index);
 7165              		.loc 1 422 17 is_stmt 1 view .LVU2418
 7166              	.LVL355:
 423:sieve_extend.c ****                 word = index_word - start_word;
 7167              		.loc 1 423 17 view .LVU2419
 424:sieve_extend.c ****             } while (word < 4 );
 7168              		.loc 1 424 17 view .LVU2420
 7169              	# sieve_extend.c:423:                 index_word = wordindex(index);
 423:sieve_extend.c ****                 word = index_word - start_word;
 7170              		.loc 1 423 28 is_stmt 0 view .LVU2421
 7171 2b36 4889D8   		mov	rax, rbx	# index_word, index
 7172 2b39 48C1E806 		shr	rax, 6	# index_word,
 7173              	.LVL356:
GAS LISTING /tmp/cctyCFAS.s 			page 204


 7174              	# sieve_extend.c:424:                 word = index_word - start_word;
 424:sieve_extend.c ****             } while (word < 4 );
 7175              		.loc 1 424 35 view .LVU2422
 7176 2b3d 4429C0   		sub	eax, r8d	# word, _1592
 7177              	.LVL357:
 425:sieve_extend.c **** 
 7178              		.loc 1 425 21 is_stmt 1 view .LVU2423
 7179              	# sieve_extend.c:425:             } while (word < 4 );
 425:sieve_extend.c **** 
 7180              		.loc 1 425 13 is_stmt 0 view .LVU2424
 7181 2b40 83F803   		cmp	eax, 3	# word,
 7182 2b43 7F6B     		jg	.L698	#,
 7183              	.LVL358:
 420:sieve_extend.c ****                 mask[word] |= markmask(index);
 7184              		.loc 1 420 13 is_stmt 1 view .LVU2425
 421:sieve_extend.c ****                 index += step;
 7185              		.loc 1 421 17 view .LVU2426
 7186              	# sieve_extend.c:421:                 mask[word] |= markmask(index);
 421:sieve_extend.c ****                 index += step;
 7187              		.loc 1 421 28 is_stmt 0 view .LVU2427
 7188 2b45 4898     		cdqe
 7189              	# sieve_extend.c:421:                 mask[word] |= markmask(index);
 421:sieve_extend.c ****                 index += step;
 7190              		.loc 1 421 31 view .LVU2428
 7191 2b47 C442E1F7 		shlx	r9, r15, rbx	# tmp1661, tmp1047, index
 7191      CF
 7192              	# sieve_extend.c:422:                 index += step;
 422:sieve_extend.c ****                 index_word = wordindex(index);
 7193              		.loc 1 422 23 view .LVU2429
 7194 2b4c 4C01E3   		add	rbx, r12	# index, step
 7195              	.LVL359:
 7196              	# sieve_extend.c:421:                 mask[word] |= markmask(index);
 421:sieve_extend.c ****                 index += step;
 7197              		.loc 1 421 28 view .LVU2430
 7198 2b4f 4C098CC4 		or	QWORD PTR 128[rsp+rax*8], r9	# mask, tmp1661
 7198      80000000 
 422:sieve_extend.c ****                 index_word = wordindex(index);
 7199              		.loc 1 422 17 is_stmt 1 view .LVU2431
 7200              	.LVL360:
 423:sieve_extend.c ****                 word = index_word - start_word;
 7201              		.loc 1 423 17 view .LVU2432
 424:sieve_extend.c ****             } while (word < 4 );
 7202              		.loc 1 424 17 view .LVU2433
 7203              	# sieve_extend.c:423:                 index_word = wordindex(index);
 423:sieve_extend.c ****                 word = index_word - start_word;
 7204              		.loc 1 423 28 is_stmt 0 view .LVU2434
 7205 2b57 4889D8   		mov	rax, rbx	# index_word, index
 7206 2b5a 48C1E806 		shr	rax, 6	# index_word,
 7207              	.LVL361:
 7208              	# sieve_extend.c:424:                 word = index_word - start_word;
 424:sieve_extend.c ****             } while (word < 4 );
 7209              		.loc 1 424 35 view .LVU2435
 7210 2b5e 4429C0   		sub	eax, r8d	# word, _1592
 7211              	.LVL362:
 425:sieve_extend.c **** 
 7212              		.loc 1 425 21 is_stmt 1 view .LVU2436
 7213              	# sieve_extend.c:425:             } while (word < 4 );
GAS LISTING /tmp/cctyCFAS.s 			page 205


 425:sieve_extend.c **** 
 7214              		.loc 1 425 13 is_stmt 0 view .LVU2437
 7215 2b61 83F803   		cmp	eax, 3	# word,
 7216 2b64 7F4A     		jg	.L698	#,
 7217              	.LVL363:
 420:sieve_extend.c ****                 mask[word] |= markmask(index);
 7218              		.loc 1 420 13 is_stmt 1 view .LVU2438
 421:sieve_extend.c ****                 index += step;
 7219              		.loc 1 421 17 view .LVU2439
 7220              	# sieve_extend.c:421:                 mask[word] |= markmask(index);
 421:sieve_extend.c ****                 index += step;
 7221              		.loc 1 421 28 is_stmt 0 view .LVU2440
 7222 2b66 4898     		cdqe
 7223              	# sieve_extend.c:421:                 mask[word] |= markmask(index);
 421:sieve_extend.c ****                 index += step;
 7224              		.loc 1 421 31 view .LVU2441
 7225 2b68 C4C2E1F7 		shlx	rsi, r15, rbx	# tmp1666, tmp1047, index
 7225      F7
 7226              	# sieve_extend.c:422:                 index += step;
 422:sieve_extend.c ****                 index_word = wordindex(index);
 7227              		.loc 1 422 23 view .LVU2442
 7228 2b6d 4C01E3   		add	rbx, r12	# index, step
 7229              	.LVL364:
 7230              	# sieve_extend.c:421:                 mask[word] |= markmask(index);
 421:sieve_extend.c ****                 index += step;
 7231              		.loc 1 421 28 view .LVU2443
 7232 2b70 4809B4C4 		or	QWORD PTR 128[rsp+rax*8], rsi	# mask, tmp1666
 7232      80000000 
 422:sieve_extend.c ****                 index_word = wordindex(index);
 7233              		.loc 1 422 17 is_stmt 1 view .LVU2444
 7234              	.LVL365:
 423:sieve_extend.c ****                 word = index_word - start_word;
 7235              		.loc 1 423 17 view .LVU2445
 424:sieve_extend.c ****             } while (word < 4 );
 7236              		.loc 1 424 17 view .LVU2446
 7237              	# sieve_extend.c:423:                 index_word = wordindex(index);
 423:sieve_extend.c ****                 word = index_word - start_word;
 7238              		.loc 1 423 28 is_stmt 0 view .LVU2447
 7239 2b78 4889D8   		mov	rax, rbx	# index_word, index
 7240 2b7b 48C1E806 		shr	rax, 6	# index_word,
 7241              	.LVL366:
 7242              	# sieve_extend.c:424:                 word = index_word - start_word;
 424:sieve_extend.c ****             } while (word < 4 );
 7243              		.loc 1 424 35 view .LVU2448
 7244 2b7f 4429C0   		sub	eax, r8d	# word, _1592
 7245              	.LVL367:
 425:sieve_extend.c **** 
 7246              		.loc 1 425 21 is_stmt 1 view .LVU2449
 7247              	# sieve_extend.c:425:             } while (word < 4 );
 425:sieve_extend.c **** 
 7248              		.loc 1 425 13 is_stmt 0 view .LVU2450
 7249 2b82 83F803   		cmp	eax, 3	# word,
 7250 2b85 7F29     		jg	.L698	#,
 7251              	.LVL368:
 420:sieve_extend.c ****                 mask[word] |= markmask(index);
 7252              		.loc 1 420 13 is_stmt 1 view .LVU2451
 421:sieve_extend.c ****                 index += step;
GAS LISTING /tmp/cctyCFAS.s 			page 206


 7253              		.loc 1 421 17 view .LVU2452
 7254              	# sieve_extend.c:421:                 mask[word] |= markmask(index);
 421:sieve_extend.c ****                 index += step;
 7255              		.loc 1 421 28 is_stmt 0 view .LVU2453
 7256 2b87 4898     		cdqe
 7257              	# sieve_extend.c:421:                 mask[word] |= markmask(index);
 421:sieve_extend.c ****                 index += step;
 7258              		.loc 1 421 31 view .LVU2454
 7259 2b89 C4C2E1F7 		shlx	rdi, r15, rbx	# tmp1671, tmp1047, index
 7259      FF
 7260              	# sieve_extend.c:422:                 index += step;
 422:sieve_extend.c ****                 index_word = wordindex(index);
 7261              		.loc 1 422 23 view .LVU2455
 7262 2b8e 4C01E3   		add	rbx, r12	# index, step
 7263              	.LVL369:
 7264              	# sieve_extend.c:421:                 mask[word] |= markmask(index);
 421:sieve_extend.c ****                 index += step;
 7265              		.loc 1 421 28 view .LVU2456
 7266 2b91 4809BCC4 		or	QWORD PTR 128[rsp+rax*8], rdi	# mask, tmp1671
 7266      80000000 
 422:sieve_extend.c ****                 index_word = wordindex(index);
 7267              		.loc 1 422 17 is_stmt 1 view .LVU2457
 7268              	.LVL370:
 423:sieve_extend.c ****                 word = index_word - start_word;
 7269              		.loc 1 423 17 view .LVU2458
 424:sieve_extend.c ****             } while (word < 4 );
 7270              		.loc 1 424 17 view .LVU2459
 7271              	# sieve_extend.c:423:                 index_word = wordindex(index);
 423:sieve_extend.c ****                 word = index_word - start_word;
 7272              		.loc 1 423 28 is_stmt 0 view .LVU2460
 7273 2b99 4889D8   		mov	rax, rbx	# index_word, index
 7274 2b9c 48C1E806 		shr	rax, 6	# index_word,
 7275              	.LVL371:
 7276              	# sieve_extend.c:424:                 word = index_word - start_word;
 424:sieve_extend.c ****             } while (word < 4 );
 7277              		.loc 1 424 35 view .LVU2461
 7278 2ba0 4429C0   		sub	eax, r8d	# word, _1592
 7279              	.LVL372:
 425:sieve_extend.c **** 
 7280              		.loc 1 425 21 is_stmt 1 view .LVU2462
 7281              	# sieve_extend.c:425:             } while (word < 4 );
 425:sieve_extend.c **** 
 7282              		.loc 1 425 13 is_stmt 0 view .LVU2463
 7283 2ba3 83F803   		cmp	eax, 3	# word,
 7284 2ba6 0F8EE4FE 		jle	.L699	#,
 7284      FFFF
 7285              	.LVL373:
 7286 2bac 0F1F4000 		.p2align 4,,10
 7287              		.p2align 3
 7288              	.L698:
 427:sieve_extend.c ****             index_word = start_word;
 7289              		.loc 1 427 13 is_stmt 1 view .LVU2464
 428:sieve_extend.c **** 
 7290              		.loc 1 428 13 view .LVU2465
 431:sieve_extend.c ****                 // debug printf("..handling word %ju (range_stop %ju)\n",index_word,range_stop_word
 7291              		.loc 1 431 13 view .LVU2466
 431:sieve_extend.c ****                 // debug printf("..handling word %ju (range_stop %ju)\n",index_word,range_stop_word
GAS LISTING /tmp/cctyCFAS.s 			page 207


 7292              		.loc 1 431 19 view .LVU2467
 7293              	# sieve_extend.c:431:             while ((index_word)+4 < range_stop_word) {
 431:sieve_extend.c ****                 // debug printf("..handling word %ju (range_stop %ju)\n",index_word,range_stop_word
 7294              		.loc 1 431 32 is_stmt 0 view .LVU2468
 7295 2bb0 4C8D4204 		lea	r8, 4[rdx]	# tmp767,
 7296              	# sieve_extend.c:431:             while ((index_word)+4 < range_stop_word) {
 431:sieve_extend.c ****                 // debug printf("..handling word %ju (range_stop %ju)\n",index_word,range_stop_word
 7297              		.loc 1 431 19 view .LVU2469
 7298 2bb4 4C39C1   		cmp	rcx, r8	# range_stop_word, tmp767
 7299 2bb7 0F862B01 		jbe	.L700	#,
 7299      0000
 7300              	# sieve_extend.c:433:                 bitarray[index_word  ] |= mask[0];
 433:sieve_extend.c ****                 bitarray[index_word+1] |= mask[1];
 7301              		.loc 1 433 47 view .LVU2470
 7302 2bbd 4C8B8C24 		mov	r9, QWORD PTR 128[rsp]	# _259, mask
 7302      80000000 
 7303              	# sieve_extend.c:434:                 bitarray[index_word+1] |= mask[1];
 434:sieve_extend.c ****                 bitarray[index_word+2] |= mask[2];
 7304              		.loc 1 434 47 view .LVU2471
 7305 2bc5 4C8B8424 		mov	r8, QWORD PTR 136[rsp]	# _265, mask
 7305      88000000 
 7306              	# sieve_extend.c:435:                 bitarray[index_word+2] |= mask[2];
 435:sieve_extend.c ****                 bitarray[index_word+3] |= mask[3];
 7307              		.loc 1 435 47 view .LVU2472
 7308 2bcd 488BBC24 		mov	rdi, QWORD PTR 144[rsp]	# _271, mask
 7308      90000000 
 7309              	# sieve_extend.c:436:                 bitarray[index_word+3] |= mask[3];
 436:sieve_extend.c ****                 index_word += step;
 7310              		.loc 1 436 47 view .LVU2473
 7311 2bd5 488BB424 		mov	rsi, QWORD PTR 152[rsp]	# _277, mask
 7311      98000000 
 7312 2bdd 498D04D6 		lea	rax, [r14+rdx*8]	# ivtmp.615,
 7313              	.LVL374:
 7314              	.L701:
 433:sieve_extend.c ****                 bitarray[index_word+1] |= mask[1];
 7315              		.loc 1 433 17 is_stmt 1 view .LVU2474
 7316              	# sieve_extend.c:437:                 index_word += step;
 437:sieve_extend.c ****             }
 7317              		.loc 1 437 28 is_stmt 0 view .LVU2475
 7318 2be1 4C01E2   		add	rdx, r12	# start_word, step
 7319              	.LVL375:
 7320              	# sieve_extend.c:431:             while ((index_word)+4 < range_stop_word) {
 431:sieve_extend.c ****                 // debug printf("..handling word %ju (range_stop %ju)\n",index_word,range_stop_word
 7321              		.loc 1 431 19 view .LVU2476
 7322 2be4 4C8D5A04 		lea	r11, 4[rdx]	# tmp769,
 7323              	# sieve_extend.c:433:                 bitarray[index_word  ] |= mask[0];
 433:sieve_extend.c ****                 bitarray[index_word+1] |= mask[1];
 7324              		.loc 1 433 40 view .LVU2477
 7325 2be8 4C0908   		or	QWORD PTR [rax], r9	# MEM[base: _1760, offset: 0B], _259
 434:sieve_extend.c ****                 bitarray[index_word+2] |= mask[2];
 7326              		.loc 1 434 17 is_stmt 1 view .LVU2478
 7327              	# sieve_extend.c:434:                 bitarray[index_word+1] |= mask[1];
 434:sieve_extend.c ****                 bitarray[index_word+2] |= mask[2];
 7328              		.loc 1 434 40 is_stmt 0 view .LVU2479
 7329 2beb 4C094008 		or	QWORD PTR 8[rax], r8	# MEM[base: _1760, offset: 8B], _265
 435:sieve_extend.c ****                 bitarray[index_word+3] |= mask[3];
 7330              		.loc 1 435 17 is_stmt 1 view .LVU2480
GAS LISTING /tmp/cctyCFAS.s 			page 208


 7331              	# sieve_extend.c:435:                 bitarray[index_word+2] |= mask[2];
 435:sieve_extend.c ****                 bitarray[index_word+3] |= mask[3];
 7332              		.loc 1 435 40 is_stmt 0 view .LVU2481
 7333 2bef 48097810 		or	QWORD PTR 16[rax], rdi	# MEM[base: _1760, offset: 16B], _271
 436:sieve_extend.c ****                 index_word += step;
 7334              		.loc 1 436 17 is_stmt 1 view .LVU2482
 7335              	# sieve_extend.c:436:                 bitarray[index_word+3] |= mask[3];
 436:sieve_extend.c ****                 index_word += step;
 7336              		.loc 1 436 40 is_stmt 0 view .LVU2483
 7337 2bf3 48097018 		or	QWORD PTR 24[rax], rsi	# MEM[base: _1760, offset: 24B], _277
 437:sieve_extend.c ****             }
 7338              		.loc 1 437 17 is_stmt 1 view .LVU2484
 7339              	.LVL376:
 431:sieve_extend.c ****                 // debug printf("..handling word %ju (range_stop %ju)\n",index_word,range_stop_word
 7340              		.loc 1 431 19 view .LVU2485
 7341 2bf7 4C01D0   		add	rax, r10	# ivtmp.615, _1765
 7342 2bfa 4C39D9   		cmp	rcx, r11	# range_stop_word, tmp769
 7343 2bfd 0F86E500 		jbe	.L700	#,
 7343      0000
 433:sieve_extend.c ****                 bitarray[index_word+1] |= mask[1];
 7344              		.loc 1 433 17 view .LVU2486
 7345              	# sieve_extend.c:437:                 index_word += step;
 437:sieve_extend.c ****             }
 7346              		.loc 1 437 28 is_stmt 0 view .LVU2487
 7347 2c03 4C01E2   		add	rdx, r12	# start_word, step
 7348              	.LVL377:
 7349              	# sieve_extend.c:431:             while ((index_word)+4 < range_stop_word) {
 431:sieve_extend.c ****                 // debug printf("..handling word %ju (range_stop %ju)\n",index_word,range_stop_word
 7350              		.loc 1 431 19 view .LVU2488
 7351 2c06 4C8D5A04 		lea	r11, 4[rdx]	# tmp1628,
 7352              	.LVL378:
 7353              	# sieve_extend.c:433:                 bitarray[index_word  ] |= mask[0];
 433:sieve_extend.c ****                 bitarray[index_word+1] |= mask[1];
 7354              		.loc 1 433 40 view .LVU2489
 7355 2c0a 4C0908   		or	QWORD PTR [rax], r9	# MEM[base: _1760, offset: 0B], _259
 434:sieve_extend.c ****                 bitarray[index_word+2] |= mask[2];
 7356              		.loc 1 434 17 is_stmt 1 view .LVU2490
 7357              	# sieve_extend.c:434:                 bitarray[index_word+1] |= mask[1];
 434:sieve_extend.c ****                 bitarray[index_word+2] |= mask[2];
 7358              		.loc 1 434 40 is_stmt 0 view .LVU2491
 7359 2c0d 4C094008 		or	QWORD PTR 8[rax], r8	# MEM[base: _1760, offset: 8B], _265
 435:sieve_extend.c ****                 bitarray[index_word+3] |= mask[3];
 7360              		.loc 1 435 17 is_stmt 1 view .LVU2492
 7361              	# sieve_extend.c:435:                 bitarray[index_word+2] |= mask[2];
 435:sieve_extend.c ****                 bitarray[index_word+3] |= mask[3];
 7362              		.loc 1 435 40 is_stmt 0 view .LVU2493
 7363 2c11 48097810 		or	QWORD PTR 16[rax], rdi	# MEM[base: _1760, offset: 16B], _271
 436:sieve_extend.c ****                 index_word += step;
 7364              		.loc 1 436 17 is_stmt 1 view .LVU2494
 7365              	# sieve_extend.c:436:                 bitarray[index_word+3] |= mask[3];
 436:sieve_extend.c ****                 index_word += step;
 7366              		.loc 1 436 40 is_stmt 0 view .LVU2495
 7367 2c15 48097018 		or	QWORD PTR 24[rax], rsi	# MEM[base: _1760, offset: 24B], _277
 437:sieve_extend.c ****             }
 7368              		.loc 1 437 17 is_stmt 1 view .LVU2496
 7369              	.LVL379:
 431:sieve_extend.c ****                 // debug printf("..handling word %ju (range_stop %ju)\n",index_word,range_stop_word
GAS LISTING /tmp/cctyCFAS.s 			page 209


 7370              		.loc 1 431 19 view .LVU2497
 7371 2c19 4C01D0   		add	rax, r10	# ivtmp.615, _1765
 7372 2c1c 4C39D9   		cmp	rcx, r11	# range_stop_word, tmp1628
 7373 2c1f 0F86C300 		jbe	.L700	#,
 7373      0000
 433:sieve_extend.c ****                 bitarray[index_word+1] |= mask[1];
 7374              		.loc 1 433 17 view .LVU2498
 7375              	# sieve_extend.c:437:                 index_word += step;
 437:sieve_extend.c ****             }
 7376              		.loc 1 437 28 is_stmt 0 view .LVU2499
 7377 2c25 4C01E2   		add	rdx, r12	# start_word, step
 7378              	.LVL380:
 7379              	# sieve_extend.c:431:             while ((index_word)+4 < range_stop_word) {
 431:sieve_extend.c ****                 // debug printf("..handling word %ju (range_stop %ju)\n",index_word,range_stop_word
 7380              		.loc 1 431 19 view .LVU2500
 7381 2c28 4C8D5A04 		lea	r11, 4[rdx]	# tmp1630,
 7382              	.LVL381:
 7383              	# sieve_extend.c:433:                 bitarray[index_word  ] |= mask[0];
 433:sieve_extend.c ****                 bitarray[index_word+1] |= mask[1];
 7384              		.loc 1 433 40 view .LVU2501
 7385 2c2c 4C0908   		or	QWORD PTR [rax], r9	# MEM[base: _1760, offset: 0B], _259
 434:sieve_extend.c ****                 bitarray[index_word+2] |= mask[2];
 7386              		.loc 1 434 17 is_stmt 1 view .LVU2502
 7387              	# sieve_extend.c:434:                 bitarray[index_word+1] |= mask[1];
 434:sieve_extend.c ****                 bitarray[index_word+2] |= mask[2];
 7388              		.loc 1 434 40 is_stmt 0 view .LVU2503
 7389 2c2f 4C094008 		or	QWORD PTR 8[rax], r8	# MEM[base: _1760, offset: 8B], _265
 435:sieve_extend.c ****                 bitarray[index_word+3] |= mask[3];
 7390              		.loc 1 435 17 is_stmt 1 view .LVU2504
 7391              	# sieve_extend.c:435:                 bitarray[index_word+2] |= mask[2];
 435:sieve_extend.c ****                 bitarray[index_word+3] |= mask[3];
 7392              		.loc 1 435 40 is_stmt 0 view .LVU2505
 7393 2c33 48097810 		or	QWORD PTR 16[rax], rdi	# MEM[base: _1760, offset: 16B], _271
 436:sieve_extend.c ****                 index_word += step;
 7394              		.loc 1 436 17 is_stmt 1 view .LVU2506
 7395              	# sieve_extend.c:436:                 bitarray[index_word+3] |= mask[3];
 436:sieve_extend.c ****                 index_word += step;
 7396              		.loc 1 436 40 is_stmt 0 view .LVU2507
 7397 2c37 48097018 		or	QWORD PTR 24[rax], rsi	# MEM[base: _1760, offset: 24B], _277
 437:sieve_extend.c ****             }
 7398              		.loc 1 437 17 is_stmt 1 view .LVU2508
 7399              	.LVL382:
 431:sieve_extend.c ****                 // debug printf("..handling word %ju (range_stop %ju)\n",index_word,range_stop_word
 7400              		.loc 1 431 19 view .LVU2509
 7401 2c3b 4C01D0   		add	rax, r10	# ivtmp.615, _1765
 7402 2c3e 4C39D9   		cmp	rcx, r11	# range_stop_word, tmp1630
 7403 2c41 0F86A100 		jbe	.L700	#,
 7403      0000
 433:sieve_extend.c ****                 bitarray[index_word+1] |= mask[1];
 7404              		.loc 1 433 17 view .LVU2510
 7405              	# sieve_extend.c:437:                 index_word += step;
 437:sieve_extend.c ****             }
 7406              		.loc 1 437 28 is_stmt 0 view .LVU2511
 7407 2c47 4C01E2   		add	rdx, r12	# start_word, step
 7408              	.LVL383:
 7409              	# sieve_extend.c:431:             while ((index_word)+4 < range_stop_word) {
 431:sieve_extend.c ****                 // debug printf("..handling word %ju (range_stop %ju)\n",index_word,range_stop_word
GAS LISTING /tmp/cctyCFAS.s 			page 210


 7410              		.loc 1 431 19 view .LVU2512
 7411 2c4a 4C8D5A04 		lea	r11, 4[rdx]	# tmp1632,
 7412              	.LVL384:
 7413              	# sieve_extend.c:433:                 bitarray[index_word  ] |= mask[0];
 433:sieve_extend.c ****                 bitarray[index_word+1] |= mask[1];
 7414              		.loc 1 433 40 view .LVU2513
 7415 2c4e 4C0908   		or	QWORD PTR [rax], r9	# MEM[base: _1760, offset: 0B], _259
 434:sieve_extend.c ****                 bitarray[index_word+2] |= mask[2];
 7416              		.loc 1 434 17 is_stmt 1 view .LVU2514
 7417              	# sieve_extend.c:434:                 bitarray[index_word+1] |= mask[1];
 434:sieve_extend.c ****                 bitarray[index_word+2] |= mask[2];
 7418              		.loc 1 434 40 is_stmt 0 view .LVU2515
 7419 2c51 4C094008 		or	QWORD PTR 8[rax], r8	# MEM[base: _1760, offset: 8B], _265
 435:sieve_extend.c ****                 bitarray[index_word+3] |= mask[3];
 7420              		.loc 1 435 17 is_stmt 1 view .LVU2516
 7421              	# sieve_extend.c:435:                 bitarray[index_word+2] |= mask[2];
 435:sieve_extend.c ****                 bitarray[index_word+3] |= mask[3];
 7422              		.loc 1 435 40 is_stmt 0 view .LVU2517
 7423 2c55 48097810 		or	QWORD PTR 16[rax], rdi	# MEM[base: _1760, offset: 16B], _271
 436:sieve_extend.c ****                 index_word += step;
 7424              		.loc 1 436 17 is_stmt 1 view .LVU2518
 7425              	# sieve_extend.c:436:                 bitarray[index_word+3] |= mask[3];
 436:sieve_extend.c ****                 index_word += step;
 7426              		.loc 1 436 40 is_stmt 0 view .LVU2519
 7427 2c59 48097018 		or	QWORD PTR 24[rax], rsi	# MEM[base: _1760, offset: 24B], _277
 437:sieve_extend.c ****             }
 7428              		.loc 1 437 17 is_stmt 1 view .LVU2520
 7429              	.LVL385:
 431:sieve_extend.c ****                 // debug printf("..handling word %ju (range_stop %ju)\n",index_word,range_stop_word
 7430              		.loc 1 431 19 view .LVU2521
 7431 2c5d 4C01D0   		add	rax, r10	# ivtmp.615, _1765
 7432 2c60 4C39D9   		cmp	rcx, r11	# range_stop_word, tmp1632
 7433 2c63 0F867F00 		jbe	.L700	#,
 7433      0000
 433:sieve_extend.c ****                 bitarray[index_word+1] |= mask[1];
 7434              		.loc 1 433 17 view .LVU2522
 7435              	# sieve_extend.c:437:                 index_word += step;
 437:sieve_extend.c ****             }
 7436              		.loc 1 437 28 is_stmt 0 view .LVU2523
 7437 2c69 4C01E2   		add	rdx, r12	# start_word, step
 7438              	.LVL386:
 7439              	# sieve_extend.c:431:             while ((index_word)+4 < range_stop_word) {
 431:sieve_extend.c ****                 // debug printf("..handling word %ju (range_stop %ju)\n",index_word,range_stop_word
 7440              		.loc 1 431 19 view .LVU2524
 7441 2c6c 4C8D5A04 		lea	r11, 4[rdx]	# tmp1634,
 7442              	.LVL387:
 7443              	# sieve_extend.c:433:                 bitarray[index_word  ] |= mask[0];
 433:sieve_extend.c ****                 bitarray[index_word+1] |= mask[1];
 7444              		.loc 1 433 40 view .LVU2525
 7445 2c70 4C0908   		or	QWORD PTR [rax], r9	# MEM[base: _1760, offset: 0B], _259
 434:sieve_extend.c ****                 bitarray[index_word+2] |= mask[2];
 7446              		.loc 1 434 17 is_stmt 1 view .LVU2526
 7447              	# sieve_extend.c:434:                 bitarray[index_word+1] |= mask[1];
 434:sieve_extend.c ****                 bitarray[index_word+2] |= mask[2];
 7448              		.loc 1 434 40 is_stmt 0 view .LVU2527
 7449 2c73 4C094008 		or	QWORD PTR 8[rax], r8	# MEM[base: _1760, offset: 8B], _265
 435:sieve_extend.c ****                 bitarray[index_word+3] |= mask[3];
GAS LISTING /tmp/cctyCFAS.s 			page 211


 7450              		.loc 1 435 17 is_stmt 1 view .LVU2528
 7451              	# sieve_extend.c:435:                 bitarray[index_word+2] |= mask[2];
 435:sieve_extend.c ****                 bitarray[index_word+3] |= mask[3];
 7452              		.loc 1 435 40 is_stmt 0 view .LVU2529
 7453 2c77 48097810 		or	QWORD PTR 16[rax], rdi	# MEM[base: _1760, offset: 16B], _271
 436:sieve_extend.c ****                 index_word += step;
 7454              		.loc 1 436 17 is_stmt 1 view .LVU2530
 7455              	# sieve_extend.c:436:                 bitarray[index_word+3] |= mask[3];
 436:sieve_extend.c ****                 index_word += step;
 7456              		.loc 1 436 40 is_stmt 0 view .LVU2531
 7457 2c7b 48097018 		or	QWORD PTR 24[rax], rsi	# MEM[base: _1760, offset: 24B], _277
 437:sieve_extend.c ****             }
 7458              		.loc 1 437 17 is_stmt 1 view .LVU2532
 7459              	.LVL388:
 431:sieve_extend.c ****                 // debug printf("..handling word %ju (range_stop %ju)\n",index_word,range_stop_word
 7460              		.loc 1 431 19 view .LVU2533
 7461 2c7f 4C01D0   		add	rax, r10	# ivtmp.615, _1765
 7462 2c82 4C39D9   		cmp	rcx, r11	# range_stop_word, tmp1634
 7463 2c85 7661     		jbe	.L700	#,
 433:sieve_extend.c ****                 bitarray[index_word+1] |= mask[1];
 7464              		.loc 1 433 17 view .LVU2534
 7465              	# sieve_extend.c:437:                 index_word += step;
 437:sieve_extend.c ****             }
 7466              		.loc 1 437 28 is_stmt 0 view .LVU2535
 7467 2c87 4C01E2   		add	rdx, r12	# start_word, step
 7468              	.LVL389:
 7469              	# sieve_extend.c:431:             while ((index_word)+4 < range_stop_word) {
 431:sieve_extend.c ****                 // debug printf("..handling word %ju (range_stop %ju)\n",index_word,range_stop_word
 7470              		.loc 1 431 19 view .LVU2536
 7471 2c8a 4C8D5A04 		lea	r11, 4[rdx]	# tmp1636,
 7472              	.LVL390:
 7473              	# sieve_extend.c:433:                 bitarray[index_word  ] |= mask[0];
 433:sieve_extend.c ****                 bitarray[index_word+1] |= mask[1];
 7474              		.loc 1 433 40 view .LVU2537
 7475 2c8e 4C0908   		or	QWORD PTR [rax], r9	# MEM[base: _1760, offset: 0B], _259
 434:sieve_extend.c ****                 bitarray[index_word+2] |= mask[2];
 7476              		.loc 1 434 17 is_stmt 1 view .LVU2538
 7477              	# sieve_extend.c:434:                 bitarray[index_word+1] |= mask[1];
 434:sieve_extend.c ****                 bitarray[index_word+2] |= mask[2];
 7478              		.loc 1 434 40 is_stmt 0 view .LVU2539
 7479 2c91 4C094008 		or	QWORD PTR 8[rax], r8	# MEM[base: _1760, offset: 8B], _265
 435:sieve_extend.c ****                 bitarray[index_word+3] |= mask[3];
 7480              		.loc 1 435 17 is_stmt 1 view .LVU2540
 7481              	# sieve_extend.c:435:                 bitarray[index_word+2] |= mask[2];
 435:sieve_extend.c ****                 bitarray[index_word+3] |= mask[3];
 7482              		.loc 1 435 40 is_stmt 0 view .LVU2541
 7483 2c95 48097810 		or	QWORD PTR 16[rax], rdi	# MEM[base: _1760, offset: 16B], _271
 436:sieve_extend.c ****                 index_word += step;
 7484              		.loc 1 436 17 is_stmt 1 view .LVU2542
 7485              	# sieve_extend.c:436:                 bitarray[index_word+3] |= mask[3];
 436:sieve_extend.c ****                 index_word += step;
 7486              		.loc 1 436 40 is_stmt 0 view .LVU2543
 7487 2c99 48097018 		or	QWORD PTR 24[rax], rsi	# MEM[base: _1760, offset: 24B], _277
 437:sieve_extend.c ****             }
 7488              		.loc 1 437 17 is_stmt 1 view .LVU2544
 7489              	.LVL391:
 431:sieve_extend.c ****                 // debug printf("..handling word %ju (range_stop %ju)\n",index_word,range_stop_word
GAS LISTING /tmp/cctyCFAS.s 			page 212


 7490              		.loc 1 431 19 view .LVU2545
 7491 2c9d 4C01D0   		add	rax, r10	# ivtmp.615, _1765
 7492 2ca0 4C39D9   		cmp	rcx, r11	# range_stop_word, tmp1636
 7493 2ca3 7643     		jbe	.L700	#,
 433:sieve_extend.c ****                 bitarray[index_word+1] |= mask[1];
 7494              		.loc 1 433 17 view .LVU2546
 7495              	# sieve_extend.c:437:                 index_word += step;
 437:sieve_extend.c ****             }
 7496              		.loc 1 437 28 is_stmt 0 view .LVU2547
 7497 2ca5 4C01E2   		add	rdx, r12	# start_word, step
 7498              	.LVL392:
 7499              	# sieve_extend.c:431:             while ((index_word)+4 < range_stop_word) {
 431:sieve_extend.c ****                 // debug printf("..handling word %ju (range_stop %ju)\n",index_word,range_stop_word
 7500              		.loc 1 431 19 view .LVU2548
 7501 2ca8 4C8D5A04 		lea	r11, 4[rdx]	# tmp1638,
 7502              	.LVL393:
 7503              	# sieve_extend.c:433:                 bitarray[index_word  ] |= mask[0];
 433:sieve_extend.c ****                 bitarray[index_word+1] |= mask[1];
 7504              		.loc 1 433 40 view .LVU2549
 7505 2cac 4C0908   		or	QWORD PTR [rax], r9	# MEM[base: _1760, offset: 0B], _259
 434:sieve_extend.c ****                 bitarray[index_word+2] |= mask[2];
 7506              		.loc 1 434 17 is_stmt 1 view .LVU2550
 7507              	# sieve_extend.c:434:                 bitarray[index_word+1] |= mask[1];
 434:sieve_extend.c ****                 bitarray[index_word+2] |= mask[2];
 7508              		.loc 1 434 40 is_stmt 0 view .LVU2551
 7509 2caf 4C094008 		or	QWORD PTR 8[rax], r8	# MEM[base: _1760, offset: 8B], _265
 435:sieve_extend.c ****                 bitarray[index_word+3] |= mask[3];
 7510              		.loc 1 435 17 is_stmt 1 view .LVU2552
 7511              	# sieve_extend.c:435:                 bitarray[index_word+2] |= mask[2];
 435:sieve_extend.c ****                 bitarray[index_word+3] |= mask[3];
 7512              		.loc 1 435 40 is_stmt 0 view .LVU2553
 7513 2cb3 48097810 		or	QWORD PTR 16[rax], rdi	# MEM[base: _1760, offset: 16B], _271
 436:sieve_extend.c ****                 index_word += step;
 7514              		.loc 1 436 17 is_stmt 1 view .LVU2554
 7515              	# sieve_extend.c:436:                 bitarray[index_word+3] |= mask[3];
 436:sieve_extend.c ****                 index_word += step;
 7516              		.loc 1 436 40 is_stmt 0 view .LVU2555
 7517 2cb7 48097018 		or	QWORD PTR 24[rax], rsi	# MEM[base: _1760, offset: 24B], _277
 437:sieve_extend.c ****             }
 7518              		.loc 1 437 17 is_stmt 1 view .LVU2556
 7519              	.LVL394:
 431:sieve_extend.c ****                 // debug printf("..handling word %ju (range_stop %ju)\n",index_word,range_stop_word
 7520              		.loc 1 431 19 view .LVU2557
 7521 2cbb 4C01D0   		add	rax, r10	# ivtmp.615, _1765
 7522 2cbe 4C39D9   		cmp	rcx, r11	# range_stop_word, tmp1638
 7523 2cc1 7625     		jbe	.L700	#,
 433:sieve_extend.c ****                 bitarray[index_word+1] |= mask[1];
 7524              		.loc 1 433 17 view .LVU2558
 7525              	# sieve_extend.c:437:                 index_word += step;
 437:sieve_extend.c ****             }
 7526              		.loc 1 437 28 is_stmt 0 view .LVU2559
 7527 2cc3 4C01E2   		add	rdx, r12	# start_word, step
 7528              	.LVL395:
 7529              	# sieve_extend.c:431:             while ((index_word)+4 < range_stop_word) {
 431:sieve_extend.c ****                 // debug printf("..handling word %ju (range_stop %ju)\n",index_word,range_stop_word
 7530              		.loc 1 431 19 view .LVU2560
 7531 2cc6 4C8D5A04 		lea	r11, 4[rdx]	# tmp1639,
GAS LISTING /tmp/cctyCFAS.s 			page 213


 7532              	.LVL396:
 7533              	# sieve_extend.c:433:                 bitarray[index_word  ] |= mask[0];
 433:sieve_extend.c ****                 bitarray[index_word+1] |= mask[1];
 7534              		.loc 1 433 40 view .LVU2561
 7535 2cca 4C0908   		or	QWORD PTR [rax], r9	# MEM[base: _1760, offset: 0B], _259
 434:sieve_extend.c ****                 bitarray[index_word+2] |= mask[2];
 7536              		.loc 1 434 17 is_stmt 1 view .LVU2562
 7537              	# sieve_extend.c:434:                 bitarray[index_word+1] |= mask[1];
 434:sieve_extend.c ****                 bitarray[index_word+2] |= mask[2];
 7538              		.loc 1 434 40 is_stmt 0 view .LVU2563
 7539 2ccd 4C094008 		or	QWORD PTR 8[rax], r8	# MEM[base: _1760, offset: 8B], _265
 435:sieve_extend.c ****                 bitarray[index_word+3] |= mask[3];
 7540              		.loc 1 435 17 is_stmt 1 view .LVU2564
 7541              	# sieve_extend.c:435:                 bitarray[index_word+2] |= mask[2];
 435:sieve_extend.c ****                 bitarray[index_word+3] |= mask[3];
 7542              		.loc 1 435 40 is_stmt 0 view .LVU2565
 7543 2cd1 48097810 		or	QWORD PTR 16[rax], rdi	# MEM[base: _1760, offset: 16B], _271
 436:sieve_extend.c ****                 index_word += step;
 7544              		.loc 1 436 17 is_stmt 1 view .LVU2566
 7545              	# sieve_extend.c:436:                 bitarray[index_word+3] |= mask[3];
 436:sieve_extend.c ****                 index_word += step;
 7546              		.loc 1 436 40 is_stmt 0 view .LVU2567
 7547 2cd5 48097018 		or	QWORD PTR 24[rax], rsi	# MEM[base: _1760, offset: 24B], _277
 437:sieve_extend.c ****             }
 7548              		.loc 1 437 17 is_stmt 1 view .LVU2568
 7549              	.LVL397:
 431:sieve_extend.c ****                 // debug printf("..handling word %ju (range_stop %ju)\n",index_word,range_stop_word
 7550              		.loc 1 431 19 view .LVU2569
 7551 2cd9 4C01D0   		add	rax, r10	# ivtmp.615, _1765
 7552 2cdc 4C39D9   		cmp	rcx, r11	# range_stop_word, tmp1639
 7553 2cdf 0F87FCFE 		ja	.L701	#,
 7553      FFFF
 7554              		.p2align 4,,10
 7555 2ce5 0F1F00   		.p2align 3
 7556              	.L700:
 439:sieve_extend.c ****             if (index_word <= range_stop_word) { bitarray[index_word] |= mask[1]; index_word++; }
 7557              		.loc 1 439 13 view .LVU2570
 7558              	# sieve_extend.c:439:             if (index_word <= range_stop_word) { bitarray[index_word] |= mask
 439:sieve_extend.c ****             if (index_word <= range_stop_word) { bitarray[index_word] |= mask[1]; index_word++; }
 7559              		.loc 1 439 16 is_stmt 0 view .LVU2571
 7560 2ce8 4839D1   		cmp	rcx, rdx	# range_stop_word, start_word
 7561 2ceb 7256     		jb	.L802	#,
 439:sieve_extend.c ****             if (index_word <= range_stop_word) { bitarray[index_word] |= mask[1]; index_word++; }
 7562              		.loc 1 439 50 is_stmt 1 view .LVU2572
 7563              	# sieve_extend.c:439:             if (index_word <= range_stop_word) { bitarray[index_word] |= mask
 439:sieve_extend.c ****             if (index_word <= range_stop_word) { bitarray[index_word] |= mask[1]; index_word++; }
 7564              		.loc 1 439 71 is_stmt 0 view .LVU2573
 7565 2ced 4C8B8424 		mov	r8, QWORD PTR 128[rsp]	# mask, mask
 7565      80000000 
 7566 2cf5 4C8D0CD5 		lea	r9, 0[0+rdx*8]	# _282,
 7566      00000000 
 7567              	# sieve_extend.c:439:             if (index_word <= range_stop_word) { bitarray[index_word] |= mask
 439:sieve_extend.c ****             if (index_word <= range_stop_word) { bitarray[index_word] |= mask[1]; index_word++; }
 7568              		.loc 1 439 93 view .LVU2574
 7569 2cfd 488D7A01 		lea	rdi, 1[rdx]	# index_word,
 7570              	# sieve_extend.c:439:             if (index_word <= range_stop_word) { bitarray[index_word] |= mask
 439:sieve_extend.c ****             if (index_word <= range_stop_word) { bitarray[index_word] |= mask[1]; index_word++; }
GAS LISTING /tmp/cctyCFAS.s 			page 214


 7571              		.loc 1 439 71 view .LVU2575
 7572 2d01 4F09040E 		or	QWORD PTR [r14+r9], r8	# *_283, mask
 439:sieve_extend.c ****             if (index_word <= range_stop_word) { bitarray[index_word] |= mask[1]; index_word++; }
 7573              		.loc 1 439 83 is_stmt 1 view .LVU2576
 7574              	.LVL398:
 440:sieve_extend.c ****             if (index_word <= range_stop_word) { bitarray[index_word] |= mask[2]; index_word++; }
 7575              		.loc 1 440 13 view .LVU2577
 7576              	# sieve_extend.c:440:             if (index_word <= range_stop_word) { bitarray[index_word] |= mask
 440:sieve_extend.c ****             if (index_word <= range_stop_word) { bitarray[index_word] |= mask[2]; index_word++; }
 7577              		.loc 1 440 16 is_stmt 0 view .LVU2578
 7578 2d05 4839F9   		cmp	rcx, rdi	# range_stop_word, index_word
 7579 2d08 7239     		jb	.L802	#,
 440:sieve_extend.c ****             if (index_word <= range_stop_word) { bitarray[index_word] |= mask[2]; index_word++; }
 7580              		.loc 1 440 50 is_stmt 1 view .LVU2579
 7581              	# sieve_extend.c:440:             if (index_word <= range_stop_word) { bitarray[index_word] |= mask
 440:sieve_extend.c ****             if (index_word <= range_stop_word) { bitarray[index_word] |= mask[2]; index_word++; }
 7582              		.loc 1 440 71 is_stmt 0 view .LVU2580
 7583 2d0a 488BB424 		mov	rsi, QWORD PTR 136[rsp]	# mask, mask
 7583      88000000 
 7584              	# sieve_extend.c:440:             if (index_word <= range_stop_word) { bitarray[index_word] |= mask
 440:sieve_extend.c ****             if (index_word <= range_stop_word) { bitarray[index_word] |= mask[2]; index_word++; }
 7585              		.loc 1 440 93 view .LVU2581
 7586 2d12 488D4202 		lea	rax, 2[rdx]	# index_word,
 7587              	# sieve_extend.c:440:             if (index_word <= range_stop_word) { bitarray[index_word] |= mask
 440:sieve_extend.c ****             if (index_word <= range_stop_word) { bitarray[index_word] |= mask[2]; index_word++; }
 7588              		.loc 1 440 71 view .LVU2582
 7589 2d16 4B09740E 		or	QWORD PTR 8[r14+r9], rsi	# *_290, mask
 7589      08
 440:sieve_extend.c ****             if (index_word <= range_stop_word) { bitarray[index_word] |= mask[2]; index_word++; }
 7590              		.loc 1 440 83 is_stmt 1 view .LVU2583
 7591              	.LVL399:
 441:sieve_extend.c ****             if (index_word <= range_stop_word) { bitarray[index_word] |= mask[3]; index_word++; }
 7592              		.loc 1 441 13 view .LVU2584
 7593              	# sieve_extend.c:441:             if (index_word <= range_stop_word) { bitarray[index_word] |= mask
 441:sieve_extend.c ****             if (index_word <= range_stop_word) { bitarray[index_word] |= mask[3]; index_word++; }
 7594              		.loc 1 441 16 is_stmt 0 view .LVU2585
 7595 2d1b 4839C1   		cmp	rcx, rax	# range_stop_word, index_word
 7596 2d1e 7223     		jb	.L802	#,
 441:sieve_extend.c ****             if (index_word <= range_stop_word) { bitarray[index_word] |= mask[3]; index_word++; }
 7597              		.loc 1 441 50 is_stmt 1 view .LVU2586
 7598              	# sieve_extend.c:441:             if (index_word <= range_stop_word) { bitarray[index_word] |= mask
 441:sieve_extend.c ****             if (index_word <= range_stop_word) { bitarray[index_word] |= mask[3]; index_word++; }
 7599              		.loc 1 441 71 is_stmt 0 view .LVU2587
 7600 2d20 4C8B9C24 		mov	r11, QWORD PTR 144[rsp]	# mask, mask
 7600      90000000 
 7601              	# sieve_extend.c:441:             if (index_word <= range_stop_word) { bitarray[index_word] |= mask
 441:sieve_extend.c ****             if (index_word <= range_stop_word) { bitarray[index_word] |= mask[3]; index_word++; }
 7602              		.loc 1 441 93 view .LVU2588
 7603 2d28 4883C203 		add	rdx, 3	# index_word,
 7604              	# sieve_extend.c:441:             if (index_word <= range_stop_word) { bitarray[index_word] |= mask
 441:sieve_extend.c ****             if (index_word <= range_stop_word) { bitarray[index_word] |= mask[3]; index_word++; }
 7605              		.loc 1 441 71 view .LVU2589
 7606 2d2c 4F095C0E 		or	QWORD PTR 16[r14+r9], r11	# *_297, mask
 7606      10
 441:sieve_extend.c ****             if (index_word <= range_stop_word) { bitarray[index_word] |= mask[3]; index_word++; }
 7607              		.loc 1 441 83 is_stmt 1 view .LVU2590
 7608              	.LVL400:
GAS LISTING /tmp/cctyCFAS.s 			page 215


 442:sieve_extend.c ****         }
 7609              		.loc 1 442 13 view .LVU2591
 7610              	# sieve_extend.c:442:             if (index_word <= range_stop_word) { bitarray[index_word] |= mask
 442:sieve_extend.c ****         }
 7611              		.loc 1 442 16 is_stmt 0 view .LVU2592
 7612 2d31 4839D1   		cmp	rcx, rdx	# range_stop_word, index_word
 7613 2d34 720D     		jb	.L802	#,
 442:sieve_extend.c ****         }
 7614              		.loc 1 442 50 is_stmt 1 view .LVU2593
 7615              	# sieve_extend.c:442:             if (index_word <= range_stop_word) { bitarray[index_word] |= mask
 442:sieve_extend.c ****         }
 7616              		.loc 1 442 71 is_stmt 0 view .LVU2594
 7617 2d36 488B9424 		mov	rdx, QWORD PTR 152[rsp]	# mask, mask
 7617      98000000 
 7618 2d3e 4B09540E 		or	QWORD PTR 24[r14+r9], rdx	# *_304, mask
 7618      18
 442:sieve_extend.c ****         }
 7619              		.loc 1 442 83 is_stmt 1 view .LVU2595
 7620              	.L802:
 442:sieve_extend.c ****         }
 7621              		.loc 1 442 83 is_stmt 0 view .LVU2596
 7622              	.LBE492:
 411:sieve_extend.c ****             // debug printf("..Processing index %ju for step %ju (stop at %ju)\n",index, step, rang
 7623              		.loc 1 411 45 is_stmt 1 view .LVU2597
 7624              	# sieve_extend.c:411:         for (counter_t index = range_start; index <= range_stop_unique; ) {
 411:sieve_extend.c ****             // debug printf("..Processing index %ju for step %ju (stop at %ju)\n",index, step, rang
 7625              		.loc 1 411 9 is_stmt 0 view .LVU2598
 7626 2d43 4C39EB   		cmp	rbx, r13	# index, tmp728
 7627 2d46 0F86F4FC 		jbe	.L705	#,
 7627      FFFF
 7628              	.LVL401:
 7629              	.L1564:
 411:sieve_extend.c ****             // debug printf("..Processing index %ju for step %ju (stop at %ju)\n",index, step, rang
 7630              		.loc 1 411 9 view .LVU2599
 7631 2d4c 4C8B6C24 		mov	r13, QWORD PTR 32[rsp]	# index, %sfp
 7631      20
 7632              	.L678:
 7633              	.LVL402:
 411:sieve_extend.c ****             // debug printf("..Processing index %ju for step %ju (stop at %ju)\n",index, step, rang
 7634              		.loc 1 411 9 view .LVU2600
 7635              	.LBE493:
 7636              	.LBE488:
 7637              	.LBE487:
 7638              	.LBE528:
 941:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 7639              		.loc 1 941 11 is_stmt 1 view .LVU2601
 7640              	# sieve_extend.c:941:     for (;range_stop < block_stop;) {
 941:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 7641              		.loc 1 941 5 is_stmt 0 view .LVU2602
 7642 2d51 4C8B5C24 		mov	r11, QWORD PTR 104[rsp]	# prephitmp_1899, %sfp
 7642      68
 7643 2d56 4C395C24 		cmp	QWORD PTR 112[rsp], r11	# %sfp, prephitmp_1899
 7643      70
 7644 2d5b 0F833D04 		jnb	.L1578	#,
 7644      0000
 7645              	.LVL403:
 7646              	.L713:
GAS LISTING /tmp/cctyCFAS.s 			page 216


 7647              	.LBB529:
 942:sieve_extend.c ****         counter_t start = prime * prime * 2 + prime * 2;
 7648              		.loc 1 942 9 is_stmt 1 view .LVU2603
 7649              	.LBB494:
 7650              	.LBI484:
 123:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 7651              		.loc 1 123 25 view .LVU2604
 7652              	.LBB486:
 124:sieve_extend.c ****     return index;
 7653              		.loc 1 124 5 view .LVU2605
 124:sieve_extend.c ****     return index;
 7654              		.loc 1 124 11 view .LVU2606
 7655              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 7656              		.loc 1 124 21 is_stmt 0 view .LVU2607
 7657 2d61 4C89E8   		mov	rax, r13	# tmp686, index
 7658 2d64 48C1E806 		shr	rax, 6	# tmp686,
 7659              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 7660              		.loc 1 124 12 view .LVU2608
 7661 2d68 498B1CC6 		mov	rbx, QWORD PTR [r14+rax*8]	# *_1165,* _94
 7662              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 7663              		.loc 1 124 11 view .LVU2609
 7664 2d6c 4C0FA3EB 		bt	rbx, r13	# *_1165, index
 7665 2d70 0F83AA00 		jnc	.L663	#,
 7665      0000
 124:sieve_extend.c ****     return index;
 7666              		.loc 1 124 58 is_stmt 1 view .LVU2610
 7667              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 7668              		.loc 1 124 63 is_stmt 0 view .LVU2611
 7669 2d76 4D8D4501 		lea	r8, 1[r13]	# tmp1060,
 7670              	.LVL404:
 7671              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 7672              		.loc 1 124 21 view .LVU2612
 7673 2d7a 4C89C1   		mov	rcx, r8	# tmp691, index
 7674 2d7d 48C1E906 		shr	rcx, 6	# tmp691,
 7675              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 7676              		.loc 1 124 12 view .LVU2613
 7677 2d81 4D8B24CE 		mov	r12, QWORD PTR [r14+rcx*8]	# *_49, *_49
 7678              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 7679              		.loc 1 124 63 view .LVU2614
 7680 2d85 4D89C5   		mov	r13, r8	# index, tmp1060
 124:sieve_extend.c ****     return index;
 7681              		.loc 1 124 11 is_stmt 1 view .LVU2615
 7682 2d88 4D0FA3C4 		bt	r12, r8	# *_49, index
 7683 2d8c 0F838E00 		jnc	.L663	#,
 7683      0000
 124:sieve_extend.c ****     return index;
 7684              		.loc 1 124 58 view .LVU2616
 7685              	.LVL405:
 7686              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
GAS LISTING /tmp/cctyCFAS.s 			page 217


 7687              		.loc 1 124 63 is_stmt 0 view .LVU2617
 7688 2d92 49FFC5   		inc	r13	# index
 7689              	.LVL406:
 124:sieve_extend.c ****     return index;
 7690              		.loc 1 124 11 is_stmt 1 view .LVU2618
 7691              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 7692              		.loc 1 124 21 is_stmt 0 view .LVU2619
 7693 2d95 4C89EE   		mov	rsi, r13	# tmp1538, index
 7694 2d98 48C1EE06 		shr	rsi, 6	# tmp1538,
 7695              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 7696              		.loc 1 124 12 view .LVU2620
 7697 2d9c 4D8B14F6 		mov	r10, QWORD PTR [r14+rsi*8]	# *_49, *_49
 7698              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 7699              		.loc 1 124 11 view .LVU2621
 7700 2da0 4D0FA3EA 		bt	r10, r13	# *_49, index
 7701 2da4 737A     		jnc	.L663	#,
 124:sieve_extend.c ****     return index;
 7702              		.loc 1 124 58 is_stmt 1 view .LVU2622
 7703              	.LVL407:
 7704              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 7705              		.loc 1 124 63 is_stmt 0 view .LVU2623
 7706 2da6 4D8D6802 		lea	r13, 2[r8]	# index,
 7707              	.LVL408:
 124:sieve_extend.c ****     return index;
 7708              		.loc 1 124 11 is_stmt 1 view .LVU2624
 7709              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 7710              		.loc 1 124 21 is_stmt 0 view .LVU2625
 7711 2daa 4C89EF   		mov	rdi, r13	# tmp1542, index
 7712 2dad 48C1EF06 		shr	rdi, 6	# tmp1542,
 7713              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 7714              		.loc 1 124 12 view .LVU2626
 7715 2db1 4D8B0CFE 		mov	r9, QWORD PTR [r14+rdi*8]	# *_49, *_49
 7716              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 7717              		.loc 1 124 11 view .LVU2627
 7718 2db5 4D0FA3E9 		bt	r9, r13	# *_49, index
 7719 2db9 7365     		jnc	.L663	#,
 124:sieve_extend.c ****     return index;
 7720              		.loc 1 124 58 is_stmt 1 view .LVU2628
 7721              	.LVL409:
 7722              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 7723              		.loc 1 124 63 is_stmt 0 view .LVU2629
 7724 2dbb 4D8D6803 		lea	r13, 3[r8]	# index,
 7725              	.LVL410:
 124:sieve_extend.c ****     return index;
 7726              		.loc 1 124 11 is_stmt 1 view .LVU2630
 7727              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 7728              		.loc 1 124 21 is_stmt 0 view .LVU2631
 7729 2dbf 4D89EB   		mov	r11, r13	# tmp1546, index
GAS LISTING /tmp/cctyCFAS.s 			page 218


 7730 2dc2 49C1EB06 		shr	r11, 6	# tmp1546,
 7731              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 7732              		.loc 1 124 12 view .LVU2632
 7733 2dc6 4B8B14DE 		mov	rdx, QWORD PTR [r14+r11*8]	# *_49, *_49
 7734              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 7735              		.loc 1 124 11 view .LVU2633
 7736 2dca 4C0FA3EA 		bt	rdx, r13	# *_49, index
 7737 2dce 7350     		jnc	.L663	#,
 124:sieve_extend.c ****     return index;
 7738              		.loc 1 124 58 is_stmt 1 view .LVU2634
 7739              	.LVL411:
 7740              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 7741              		.loc 1 124 63 is_stmt 0 view .LVU2635
 7742 2dd0 4D8D6804 		lea	r13, 4[r8]	# index,
 7743              	.LVL412:
 124:sieve_extend.c ****     return index;
 7744              		.loc 1 124 11 is_stmt 1 view .LVU2636
 7745              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 7746              		.loc 1 124 21 is_stmt 0 view .LVU2637
 7747 2dd4 4C89E8   		mov	rax, r13	# tmp1550, index
 7748 2dd7 48C1E806 		shr	rax, 6	# tmp1550,
 7749              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 7750              		.loc 1 124 12 view .LVU2638
 7751 2ddb 498B1CC6 		mov	rbx, QWORD PTR [r14+rax*8]	# *_49, *_49
 7752              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 7753              		.loc 1 124 11 view .LVU2639
 7754 2ddf 4C0FA3EB 		bt	rbx, r13	# *_49, index
 7755 2de3 733B     		jnc	.L663	#,
 124:sieve_extend.c ****     return index;
 7756              		.loc 1 124 58 is_stmt 1 view .LVU2640
 7757              	.LVL413:
 7758              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 7759              		.loc 1 124 63 is_stmt 0 view .LVU2641
 7760 2de5 4D8D6805 		lea	r13, 5[r8]	# index,
 7761              	.LVL414:
 124:sieve_extend.c ****     return index;
 7762              		.loc 1 124 11 is_stmt 1 view .LVU2642
 7763              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 7764              		.loc 1 124 21 is_stmt 0 view .LVU2643
 7765 2de9 4C89E9   		mov	rcx, r13	# tmp1554, index
 7766 2dec 48C1E906 		shr	rcx, 6	# tmp1554,
 7767              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 7768              		.loc 1 124 12 view .LVU2644
 7769 2df0 4D8B24CE 		mov	r12, QWORD PTR [r14+rcx*8]	# *_49, *_49
 7770              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 7771              		.loc 1 124 11 view .LVU2645
 7772 2df4 4D0FA3EC 		bt	r12, r13	# *_49, index
GAS LISTING /tmp/cctyCFAS.s 			page 219


 7773 2df8 7326     		jnc	.L663	#,
 124:sieve_extend.c ****     return index;
 7774              		.loc 1 124 58 is_stmt 1 view .LVU2646
 7775              	.LVL415:
 7776              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 7777              		.loc 1 124 63 is_stmt 0 view .LVU2647
 7778 2dfa 4D8D6806 		lea	r13, 6[r8]	# index,
 7779              	.LVL416:
 124:sieve_extend.c ****     return index;
 7780              		.loc 1 124 11 is_stmt 1 view .LVU2648
 7781              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 7782              		.loc 1 124 21 is_stmt 0 view .LVU2649
 7783 2dfe 4C89EE   		mov	rsi, r13	# tmp1558, index
 7784 2e01 48C1EE06 		shr	rsi, 6	# tmp1558,
 7785              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 7786              		.loc 1 124 12 view .LVU2650
 7787 2e05 4D8B14F6 		mov	r10, QWORD PTR [r14+rsi*8]	# *_49, *_49
 7788              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 7789              		.loc 1 124 11 view .LVU2651
 7790 2e09 4D0FA3EA 		bt	r10, r13	# *_49, index
 7791 2e0d 7311     		jnc	.L663	#,
 124:sieve_extend.c ****     return index;
 7792              		.loc 1 124 58 is_stmt 1 view .LVU2652
 7793              	.LVL417:
 7794              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 7795              		.loc 1 124 63 is_stmt 0 view .LVU2653
 7796 2e0f 4D8D6807 		lea	r13, 7[r8]	# index,
 7797              	.LVL418:
 124:sieve_extend.c ****     return index;
 7798              		.loc 1 124 11 is_stmt 1 view .LVU2654
 7799 2e13 E949FFFF 		jmp	.L713	#
 7799      FF
 7800              	.LVL419:
 7801 2e18 0F1F8400 		.p2align 4,,10
 7801      00000000 
 7802              		.p2align 3
 7803              	.L663:
 124:sieve_extend.c ****     return index;
 7804              		.loc 1 124 11 is_stmt 0 view .LVU2655
 7805              	.LBE486:
 7806              	.LBE494:
 7807              	.LBE529:
 7808              	.LBE462:
 7809              	.LBE461:
 7810              	# sieve_extend.c:970: static struct sieve_state *sieve(const counter_t maxints, const counter_t blo
 970:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 7811              		.loc 1 970 86 view .LVU2656
 7812 2e20 488B7C24 		mov	rdi, QWORD PTR 72[rsp]	# pattern_start, %sfp
 7812      48
 7813 2e25 4C8B4424 		mov	r8, QWORD PTR 64[rsp]	# _65, %sfp
 7813      40
 7814 2e2a 488B5424 		mov	rdx, QWORD PTR 120[rsp]	# block$pattern_size, %sfp
GAS LISTING /tmp/cctyCFAS.s 			page 220


 7814      78
 7815              	.LVL420:
 970:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 7816              		.loc 1 970 86 view .LVU2657
 7817 2e2f 488B7424 		mov	rsi, QWORD PTR 88[rsp]	# block$pattern_start, %sfp
 7817      58
 7818              	.LVL421:
 970:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 7819              		.loc 1 970 86 view .LVU2658
 7820 2e34 488B4C24 		mov	rcx, QWORD PTR 96[rsp]	# block$16, %sfp
 7820      60
 7821 2e39 48897C24 		mov	QWORD PTR 88[rsp], rdi	# %sfp, pattern_start
 7821      58
 970:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 7822              		.loc 1 970 86 view .LVU2659
 7823 2e3e 4C894424 		mov	QWORD PTR 120[rsp], r8	# %sfp, _65
 7823      78
 7824 2e43 4C896C24 		mov	QWORD PTR 96[rsp], r13	# %sfp, index
 7824      60
 7825 2e48 4C89EF   		mov	rdi, r13	# index, index
 7826              	.LVL422:
 970:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 7827              		.loc 1 970 86 view .LVU2660
 7828 2e4b E9F0FAFF 		jmp	.L661	#
 7828      FF
 7829              	.LVL423:
 7830              		.p2align 4,,10
 7831              		.p2align 3
 7832              	.L1575:
 7833              	.LBB538:
 7834              	.LBB534:
 7835              	.LBB530:
 955:sieve_extend.c ****             extendSieve(bitarray, pattern_start, patternsize_bits, range_stop);
 7836              		.loc 1 955 13 is_stmt 1 view .LVU2661
 956:sieve_extend.c ****         }
 7837              		.loc 1 956 13 view .LVU2662
 7838              	.LBB495:
 7839              	.LBI495:
 836:sieve_extend.c ****     if (size < WORD_SIZE_counter)   {
 7840              		.loc 1 836 20 view .LVU2663
 7841              	.LBB496:
 837:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 7842              		.loc 1 837 5 view .LVU2664
 7843              	# sieve_extend.c:837:     if (size < WORD_SIZE_counter)   {
 837:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 7844              		.loc 1 837 8 is_stmt 0 view .LVU2665
 7845 2e50 4983F93F 		cmp	r9, 63	# patternsize_bits,
 7846 2e54 0F867A09 		jbe	.L1579	#,
 7846      0000
 7847 2e5a 4C89CA   		mov	rdx, r9	# patternsize_bits, patternsize_bits
 842:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 7848              		.loc 1 842 5 is_stmt 1 view .LVU2666
 7849              	.LVL424:
 843:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 7850              		.loc 1 843 5 view .LVU2667
 7851              	# sieve_extend.c:842:     const counter_t copy_start  = source_start + size;
 842:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(copy_start);
GAS LISTING /tmp/cctyCFAS.s 			page 221


 7852              		.loc 1 842 21 is_stmt 0 view .LVU2668
 7853 2e5d 4F8D1409 		lea	r10, [r9+r9]	# copy_start,
 7854              	# sieve_extend.c:844:     const bitshift_t source_bit = bitindex_calc(source_start);
 844:sieve_extend.c **** 
 7855              		.loc 1 844 22 view .LVU2669
 7856 2e61 83E23F   		and	edx, 63	# source_bit,
 7857              	# sieve_extend.c:843:     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 843:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 7858              		.loc 1 843 22 view .LVU2670
 7859 2e64 4183E23F 		and	r10d, 63	# copy_bit,
 7860              	.LVL425:
 844:sieve_extend.c **** 
 7861              		.loc 1 844 5 is_stmt 1 view .LVU2671
 846:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 7862              		.loc 1 846 5 view .LVU2672
 7863              	# sieve_extend.c:846:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 846:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 7864              		.loc 1 846 13 is_stmt 0 view .LVU2673
 7865 2e68 4939D2   		cmp	r10, rdx	# copy_bit, source_bit
 7866              	# sieve_extend.c:846:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 846:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 7867              		.loc 1 846 37 view .LVU2674
 7868 2e6b 488B5424 		mov	rdx, QWORD PTR 120[rsp]	# patternsize_bits, %sfp
 7868      78
 7869              	.LVL426:
 846:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 7870              		.loc 1 846 37 view .LVU2675
 7871 2e70 488B4C24 		mov	rcx, QWORD PTR 112[rsp]	#, %sfp
 7871      70
 7872 2e75 4889D6   		mov	rsi, rdx	#, patternsize_bits
 7873              	.LVL427:
 846:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 7874              		.loc 1 846 37 view .LVU2676
 7875 2e78 4C89F7   		mov	rdi, r14	#, _94
 7876              	# sieve_extend.c:846:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 846:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 7877              		.loc 1 846 13 view .LVU2677
 7878 2e7b 0F823F09 		jb	.L1580	#,
 7878      0000
 7879              	.LVL428:
 847:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 7880              		.loc 1 847 10 is_stmt 1 view .LVU2678
 7881              	# sieve_extend.c:847:     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, so
 847:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 7882              		.loc 1 847 13 is_stmt 0 view .LVU2679
 7883 2e81 0F862109 		jbe	.L673	#,
 7883      0000
 847:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 7884              		.loc 1 847 37 is_stmt 1 view .LVU2680
 7885 2e87 E834D5FF 		call	extendSieve_shiftright_ivdep	#
 7885      FF
 7886              	.LVL429:
 847:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 7887              		.loc 1 847 37 is_stmt 0 view .LVU2681
 7888 2e8c 488B7C24 		mov	rdi, QWORD PTR 120[rsp]	# patternsize_bits, %sfp
 7888      78
 7889              	.LVL430:
GAS LISTING /tmp/cctyCFAS.s 			page 222


 847:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 7890              		.loc 1 847 37 view .LVU2682
 7891              	.LBE496:
 7892              	.LBE495:
 7893              	# sieve_extend.c:960:         if      (step < SMALLSTEP_FASTER)      setBitsTrue_smallStep (bitarra
 960:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitarray, start, step, range_
 7894              		.loc 1 960 17 view .LVU2683
 7895 2e91 4C3B2500 		cmp	r12, QWORD PTR global_SMALLSTEP_FASTER[rip]	# step, global_SMALLSTEP_FASTER
 7895      000000
 7896              	.LBB499:
 7897              	.LBB497:
 7898 2e98 48897C24 		mov	QWORD PTR 72[rsp], rdi	# %sfp, patternsize_bits
 7898      48
 7899              	.LVL431:
 960:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitarray, start, step, range_
 7900              		.loc 1 960 17 view .LVU2684
 7901              	.LBE497:
 7902              	.LBE499:
 958:sieve_extend.c **** 
 7903              		.loc 1 958 9 is_stmt 1 view .LVU2685
 960:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitarray, start, step, range_
 7904              		.loc 1 960 9 view .LVU2686
 7905              	# sieve_extend.c:960:         if      (step < SMALLSTEP_FASTER)      setBitsTrue_smallStep (bitarra
 960:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitarray, start, step, range_
 7906              		.loc 1 960 17 is_stmt 0 view .LVU2687
 7907 2e9d 0F831CFB 		jnb	.L674	#,
 7907      FFFF
 7908              	.LVL432:
 7909              		.p2align 4,,10
 7910 2ea3 0F1F4400 		.p2align 3
 7910      00
 7911              	.L1576:
 7912              	.LBB500:
 7913              	.LBB501:
 7914              	.LBB502:
 250:sieve_extend.c **** 
 7915              		.loc 1 250 41 is_stmt 1 view .LVU2688
 7916              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 7917              		.loc 1 250 5 is_stmt 0 view .LVU2689
 7918 2ea8 4983FC40 		cmp	r12, 64	# step,
 7919 2eac 0F873221 		ja	.L805	#,
 7919      0000
 7920 2eb2 4C89E7   		mov	rdi, r12	# patternsize, step
 7921              	.LBE502:
 7922              	# sieve_extend.c:249: 	register bitword_t pattern = SAFE_SHIFTBIT;
 249:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize += patternsize) patte
 7923              		.loc 1 249 21 view .LVU2690
 7924 2eb5 B9010000 		mov	ecx, 1	# pattern,
 7924      00
 7925              	.LVL433:
 7926              	.L676:
 7927              	.LBB503:
 250:sieve_extend.c **** 
 7928              		.loc 1 250 95 is_stmt 1 view .LVU2691
 7929              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
GAS LISTING /tmp/cctyCFAS.s 			page 223


 7930              		.loc 1 250 79 is_stmt 0 view .LVU2692
 7931 2eba 4C8D1C3F 		lea	r11, [rdi+rdi]	# patternsize,
 7932              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 7933              		.loc 1 250 115 view .LVU2693
 7934 2ebe C462C1F7 		shlx	r8, rcx, rdi	# _102, pattern, patternsize
 7934      C1
 7935              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 7936              		.loc 1 250 103 view .LVU2694
 7937 2ec3 4C09C1   		or	rcx, r8	# pattern, _102
 7938              	.LVL434:
 250:sieve_extend.c **** 
 7939              		.loc 1 250 67 is_stmt 1 view .LVU2695
 250:sieve_extend.c **** 
 7940              		.loc 1 250 41 view .LVU2696
 7941              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 7942              		.loc 1 250 5 is_stmt 0 view .LVU2697
 7943 2ec6 4983FB40 		cmp	r11, 64	# patternsize,
 7944 2eca 0F87A000 		ja	.L675	#,
 7944      0000
 250:sieve_extend.c **** 
 7945              		.loc 1 250 95 is_stmt 1 view .LVU2698
 7946              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 7947              		.loc 1 250 79 is_stmt 0 view .LVU2699
 7948 2ed0 488D34BD 		lea	rsi, 0[0+rdi*4]	# patternsize,
 7948      00000000 
 7949              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 7950              		.loc 1 250 115 view .LVU2700
 7951 2ed8 C4E2A1F7 		shlx	rax, rcx, r11	# _102, pattern, patternsize
 7951      C1
 7952              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 7953              		.loc 1 250 103 view .LVU2701
 7954 2edd 4809C1   		or	rcx, rax	# pattern, _102
 7955              	.LVL435:
 250:sieve_extend.c **** 
 7956              		.loc 1 250 67 is_stmt 1 view .LVU2702
 250:sieve_extend.c **** 
 7957              		.loc 1 250 41 view .LVU2703
 7958              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 7959              		.loc 1 250 5 is_stmt 0 view .LVU2704
 7960 2ee0 4883FE40 		cmp	rsi, 64	# patternsize,
 7961 2ee4 0F878600 		ja	.L675	#,
 7961      0000
 250:sieve_extend.c **** 
 7962              		.loc 1 250 95 is_stmt 1 view .LVU2705
 7963              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 7964              		.loc 1 250 79 is_stmt 0 view .LVU2706
 7965 2eea 4C8D14FD 		lea	r10, 0[0+rdi*8]	# patternsize,
 7965      00000000 
 7966              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
GAS LISTING /tmp/cctyCFAS.s 			page 224


 250:sieve_extend.c **** 
 7967              		.loc 1 250 115 view .LVU2707
 7968 2ef2 C462C9F7 		shlx	r9, rcx, rsi	# _102, pattern, patternsize
 7968      C9
 7969              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 7970              		.loc 1 250 103 view .LVU2708
 7971 2ef7 4C09C9   		or	rcx, r9	# pattern, _102
 7972              	.LVL436:
 250:sieve_extend.c **** 
 7973              		.loc 1 250 67 is_stmt 1 view .LVU2709
 250:sieve_extend.c **** 
 7974              		.loc 1 250 41 view .LVU2710
 7975              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 7976              		.loc 1 250 5 is_stmt 0 view .LVU2711
 7977 2efa 4983FA40 		cmp	r10, 64	# patternsize,
 7978 2efe 7770     		ja	.L675	#,
 250:sieve_extend.c **** 
 7979              		.loc 1 250 95 is_stmt 1 view .LVU2712
 7980              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 7981              		.loc 1 250 79 is_stmt 0 view .LVU2713
 7982 2f00 4989F8   		mov	r8, rdi	# patternsize, patternsize
 7983 2f03 49C1E004 		sal	r8, 4	# patternsize,
 7984              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 7985              		.loc 1 250 115 view .LVU2714
 7986 2f07 C4E2A9F7 		shlx	rdx, rcx, r10	# _102, pattern, patternsize
 7986      D1
 7987              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 7988              		.loc 1 250 103 view .LVU2715
 7989 2f0c 4809D1   		or	rcx, rdx	# pattern, _102
 7990              	.LVL437:
 250:sieve_extend.c **** 
 7991              		.loc 1 250 67 is_stmt 1 view .LVU2716
 250:sieve_extend.c **** 
 7992              		.loc 1 250 41 view .LVU2717
 7993              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 7994              		.loc 1 250 5 is_stmt 0 view .LVU2718
 7995 2f0f 4983F840 		cmp	r8, 64	# patternsize,
 7996 2f13 775B     		ja	.L675	#,
 250:sieve_extend.c **** 
 7997              		.loc 1 250 95 is_stmt 1 view .LVU2719
 7998              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 7999              		.loc 1 250 79 is_stmt 0 view .LVU2720
 8000 2f15 4889F8   		mov	rax, rdi	# patternsize, patternsize
 8001 2f18 48C1E005 		sal	rax, 5	# patternsize,
 8002              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 8003              		.loc 1 250 115 view .LVU2721
 8004 2f1c C462B9F7 		shlx	r11, rcx, r8	# _102, pattern, patternsize
 8004      D9
 8005              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
GAS LISTING /tmp/cctyCFAS.s 			page 225


 250:sieve_extend.c **** 
 8006              		.loc 1 250 103 view .LVU2722
 8007 2f21 4C09D9   		or	rcx, r11	# pattern, _102
 8008              	.LVL438:
 250:sieve_extend.c **** 
 8009              		.loc 1 250 67 is_stmt 1 view .LVU2723
 250:sieve_extend.c **** 
 8010              		.loc 1 250 41 view .LVU2724
 8011              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 8012              		.loc 1 250 5 is_stmt 0 view .LVU2725
 8013 2f24 4883F840 		cmp	rax, 64	# patternsize,
 8014 2f28 7746     		ja	.L675	#,
 250:sieve_extend.c **** 
 8015              		.loc 1 250 95 is_stmt 1 view .LVU2726
 8016              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 8017              		.loc 1 250 79 is_stmt 0 view .LVU2727
 8018 2f2a 4989F9   		mov	r9, rdi	# patternsize, patternsize
 8019 2f2d 49C1E106 		sal	r9, 6	# patternsize,
 8020              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 8021              		.loc 1 250 115 view .LVU2728
 8022 2f31 C4E2F9F7 		shlx	rsi, rcx, rax	# _102, pattern, patternsize
 8022      F1
 8023              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 8024              		.loc 1 250 103 view .LVU2729
 8025 2f36 4809F1   		or	rcx, rsi	# pattern, _102
 8026              	.LVL439:
 250:sieve_extend.c **** 
 8027              		.loc 1 250 67 is_stmt 1 view .LVU2730
 250:sieve_extend.c **** 
 8028              		.loc 1 250 41 view .LVU2731
 8029              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 8030              		.loc 1 250 5 is_stmt 0 view .LVU2732
 8031 2f39 4983F940 		cmp	r9, 64	# patternsize,
 8032 2f3d 7731     		ja	.L675	#,
 250:sieve_extend.c **** 
 8033              		.loc 1 250 95 is_stmt 1 view .LVU2733
 8034              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 8035              		.loc 1 250 79 is_stmt 0 view .LVU2734
 8036 2f3f 4889FA   		mov	rdx, rdi	# patternsize, patternsize
 8037 2f42 48C1E207 		sal	rdx, 7	# patternsize,
 8038              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 8039              		.loc 1 250 115 view .LVU2735
 8040 2f46 C462B1F7 		shlx	r10, rcx, r9	# _102, pattern, patternsize
 8040      D1
 8041              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 8042              		.loc 1 250 103 view .LVU2736
 8043 2f4b 4C09D1   		or	rcx, r10	# pattern, _102
 8044              	.LVL440:
 250:sieve_extend.c **** 
GAS LISTING /tmp/cctyCFAS.s 			page 226


 8045              		.loc 1 250 67 is_stmt 1 view .LVU2737
 250:sieve_extend.c **** 
 8046              		.loc 1 250 41 view .LVU2738
 8047              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 8048              		.loc 1 250 5 is_stmt 0 view .LVU2739
 8049 2f4e 4883FA40 		cmp	rdx, 64	# patternsize,
 8050 2f52 771C     		ja	.L675	#,
 250:sieve_extend.c **** 
 8051              		.loc 1 250 95 is_stmt 1 view .LVU2740
 8052              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 8053              		.loc 1 250 79 is_stmt 0 view .LVU2741
 8054 2f54 48C1E708 		sal	rdi, 8	# patternsize,
 8055              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 8056              		.loc 1 250 115 view .LVU2742
 8057 2f58 C462E9F7 		shlx	r8, rcx, rdx	# _102, pattern, patternsize
 8057      C1
 8058              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 8059              		.loc 1 250 103 view .LVU2743
 8060 2f5d 4C09C1   		or	rcx, r8	# pattern, _102
 8061              	.LVL441:
 250:sieve_extend.c **** 
 8062              		.loc 1 250 67 is_stmt 1 view .LVU2744
 250:sieve_extend.c **** 
 8063              		.loc 1 250 41 view .LVU2745
 8064              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 8065              		.loc 1 250 5 is_stmt 0 view .LVU2746
 8066 2f60 4883FF40 		cmp	rdi, 64	# patternsize,
 8067 2f64 0F8650FF 		jbe	.L676	#,
 8067      FFFF
 8068              	.LVL442:
 8069 2f6a 660F1F44 		.p2align 4,,10
 8069      0000
 8070              		.p2align 3
 8071              	.L675:
 250:sieve_extend.c **** 
 8072              		.loc 1 250 5 view .LVU2747
 8073              	.LBE503:
 253:sieve_extend.c ****     register counter_t copy_word = wordindex(range_start);
 8074              		.loc 1 253 5 is_stmt 1 view .LVU2748
 8075              	# sieve_extend.c:253:     const counter_t range_stop_word = wordindex(range_stop);
 253:sieve_extend.c ****     register counter_t copy_word = wordindex(range_start);
 8076              		.loc 1 253 21 is_stmt 0 view .LVU2749
 8077 2f70 488B7424 		mov	rsi, QWORD PTR 112[rsp]	# _66, %sfp
 8077      70
 8078              	# sieve_extend.c:254:     register counter_t copy_word = wordindex(range_start);
 254:sieve_extend.c ****      if (copy_word == range_stop_word) { // shortcut
 8079              		.loc 1 254 24 view .LVU2750
 8080 2f75 4889DF   		mov	rdi, rbx	# copy_word, index
 8081 2f78 48C1EF06 		shr	rdi, 6	# copy_word,
 8082              	# sieve_extend.c:253:     const counter_t range_stop_word = wordindex(range_stop);
 253:sieve_extend.c ****     register counter_t copy_word = wordindex(range_start);
 8083              		.loc 1 253 21 view .LVU2751
GAS LISTING /tmp/cctyCFAS.s 			page 227


 8084 2f7c 4989F2   		mov	r10, rsi	# range_stop_word, _66
 8085 2f7f 4C8D04FD 		lea	r8, 0[0+rdi*8]	# _1634,
 8085      00000000 
 8086 2f87 4B8D1406 		lea	rdx, [r14+r8]	# _1635,
 8087 2f8b F7D6     		not	esi	# tmp704
 8088 2f8d 49C7C3FF 		mov	r11, -1	# tmp2142,
 8088      FFFFFF
 8089 2f94 49C1EA06 		shr	r10, 6	# range_stop_word,
 8090              	.LVL443:
 254:sieve_extend.c ****      if (copy_word == range_stop_word) { // shortcut
 8091              		.loc 1 254 5 is_stmt 1 view .LVU2752
 255:sieve_extend.c ****        bitarray[copy_word] |= ((pattern << bitindex(range_start)) & chopmask(range_stop));
 8092              		.loc 1 255 6 view .LVU2753
 8093 2f98 C4C2CBF7 		shrx	rsi, r11, rsi	# _1642, tmp2142, tmp704
 8093      F3
 8094 2f9d 488B02   		mov	rax, QWORD PTR [rdx]	# pretmp_1636, MEM[(uint64_t *)_1635]
 8095 2fa0 48897424 		mov	QWORD PTR 56[rsp], rsi	# %sfp, _1642
 8095      38
 8096 2fa5 C462E1F7 		shlx	r9, rcx, rbx	# _1638, pattern, index
 8096      C9
 8097              	# sieve_extend.c:255:      if (copy_word == range_stop_word) { // shortcut
 255:sieve_extend.c ****        bitarray[copy_word] |= ((pattern << bitindex(range_start)) & chopmask(range_stop));
 8098              		.loc 1 255 9 is_stmt 0 view .LVU2754
 8099 2faa 4939FA   		cmp	r10, rdi	# range_stop_word, copy_word
 8100 2fad 0F844308 		je	.L1581	#,
 8100      0000
 260:sieve_extend.c **** 
 8101              		.loc 1 260 5 is_stmt 1 view .LVU2755
 8102              	# sieve_extend.c:260:     bitarray[copy_word++] |= (pattern << bitindex(range_start));
 260:sieve_extend.c **** 
 8103              		.loc 1 260 27 is_stmt 0 view .LVU2756
 8104 2fb3 4C09C8   		or	rax, r9	# tmp709, _1638
 8105 2fb6 488902   		mov	QWORD PTR [rdx], rax	# MEM[(uint64_t *)_1635], tmp709
 8106              	# sieve_extend.c:264:     pattern = (pattern << (bitindex_calc(range_start) % step)); // correct fo
 264:sieve_extend.c ****     register bitshift_t pattern_shift = WORD_SIZE_bitshift % step;
 8107              		.loc 1 264 28 view .LVU2757
 8108 2fb9 4889D8   		mov	rax, rbx	# index, index
 8109 2fbc 83E03F   		and	eax, 63	# index,
 8110              	# sieve_extend.c:264:     pattern = (pattern << (bitindex_calc(range_start) % step)); // correct fo
 264:sieve_extend.c ****     register bitshift_t pattern_shift = WORD_SIZE_bitshift % step;
 8111              		.loc 1 264 55 view .LVU2758
 8112 2fbf 31D2     		xor	edx, edx	# tmp712
 8113 2fc1 49F7F4   		div	r12	# step
 8114              	# sieve_extend.c:265:     register bitshift_t pattern_shift = WORD_SIZE_bitshift % step;
 265:sieve_extend.c ****     register bitshift_t pattern_shift_flipped = WORD_SIZE_bitshift - pattern_shift - pattern_shift;
 8115              		.loc 1 265 25 view .LVU2759
 8116 2fc4 B8400000 		mov	eax, 64	# tmp715,
 8116      00
 8117              	# sieve_extend.c:260:     bitarray[copy_word++] |= (pattern << bitindex(range_start));
 260:sieve_extend.c **** 
 8118              		.loc 1 260 23 view .LVU2760
 8119 2fc9 488D7701 		lea	rsi, 1[rdi]	# copy_word,
 8120              	.LVL444:
 264:sieve_extend.c ****     register bitshift_t pattern_shift = WORD_SIZE_bitshift % step;
 8121              		.loc 1 264 5 is_stmt 1 view .LVU2761
 8122              	# sieve_extend.c:264:     pattern = (pattern << (bitindex_calc(range_start) % step)); // correct fo
 264:sieve_extend.c ****     register bitshift_t pattern_shift = WORD_SIZE_bitshift % step;
GAS LISTING /tmp/cctyCFAS.s 			page 228


 8123              		.loc 1 264 13 is_stmt 0 view .LVU2762
 8124 2fcd C4E2E9F7 		shlx	rcx, rcx, rdx	# pattern, pattern, tmp712
 8124      C9
 265:sieve_extend.c ****     register bitshift_t pattern_shift_flipped = WORD_SIZE_bitshift - pattern_shift - pattern_shift;
 8125              		.loc 1 265 5 is_stmt 1 view .LVU2763
 8126              	# sieve_extend.c:265:     register bitshift_t pattern_shift = WORD_SIZE_bitshift % step;
 265:sieve_extend.c ****     register bitshift_t pattern_shift_flipped = WORD_SIZE_bitshift - pattern_shift - pattern_shift;
 8127              		.loc 1 265 25 is_stmt 0 view .LVU2764
 8128 2fd2 31D2     		xor	edx, edx	# tmp716
 8129 2fd4 49F7F4   		div	r12	# step
 8130              	# sieve_extend.c:266:     register bitshift_t pattern_shift_flipped = WORD_SIZE_bitshift - pattern_
 266:sieve_extend.c ****     // copy_word++;
 8131              		.loc 1 266 84 view .LVU2765
 8132 2fd7 B8200000 		mov	eax, 32	# tmp719,
 8132      00
 8133 2fdc 4829D0   		sub	rax, rdx	# tmp718, tmp716
 8134              	# sieve_extend.c:266:     register bitshift_t pattern_shift_flipped = WORD_SIZE_bitshift - pattern_
 266:sieve_extend.c ****     // copy_word++;
 8135              		.loc 1 266 25 view .LVU2766
 8136 2fdf 4801C0   		add	rax, rax	# pattern_shift_flipped
 8137 2fe2 48894424 		mov	QWORD PTR 32[rsp], rax	# %sfp, pattern_shift_flipped
 8137      20
 8138              	# sieve_extend.c:265:     register bitshift_t pattern_shift = WORD_SIZE_bitshift % step;
 265:sieve_extend.c ****     register bitshift_t pattern_shift_flipped = WORD_SIZE_bitshift - pattern_shift - pattern_shift;
 8139              		.loc 1 265 25 view .LVU2767
 8140 2fe7 4989D1   		mov	r9, rdx	# tmp716, tmp716
 8141              	.LVL445:
 266:sieve_extend.c ****     // copy_word++;
 8142              		.loc 1 266 5 is_stmt 1 view .LVU2768
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8143              		.loc 1 270 5 view .LVU2769
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8144              		.loc 1 270 11 view .LVU2770
 8145 2fea 4189D3   		mov	r11d, edx	# _1914, tmp716
 8146              	# sieve_extend.c:270:     for (;copy_word < range_stop_word; copy_word++) {
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8147              		.loc 1 270 5 is_stmt 0 view .LVU2771
 8148 2fed 4939F2   		cmp	r10, rsi	# range_stop_word, copy_word
 8149 2ff0 0F867D01 		jbe	.L679	#,
 8149      0000
 8150 2ff6 4B8D5C06 		lea	rbx, 8[r14+r8]	# ivtmp.579,
 8150      08
 8151              	.LVL446:
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8152              		.loc 1 270 5 view .LVU2772
 8153 2ffb 4F8D24D6 		lea	r12, [r14+r10*8]	# _1784,
 8154              	.LVL447:
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8155              		.loc 1 270 5 view .LVU2773
 8156 2fff 4D89E0   		mov	r8, r12	# _1784, _1784
 8157 3002 4929DC   		sub	r12, rbx	# tmp1062, ivtmp.579
 8158 3005 4983EC08 		sub	r12, 8	# tmp1063,
 8159 3009 49C1EC03 		shr	r12, 3	# tmp1061,
 8160 300d 49FFC4   		inc	r12	# tmp1064
 8161 3010 4183E407 		and	r12d, 7	# tmp1065,
 8162 3014 0F84BD00 		je	.L680	#,
 8162      0000
GAS LISTING /tmp/cctyCFAS.s 			page 229


 8163 301a 4983FC01 		cmp	r12, 1	# tmp1065,
 8164 301e 0F849600 		je	.L1123	#,
 8164      0000
 8165 3024 4983FC02 		cmp	r12, 2	# tmp1065,
 8166 3028 747C     		je	.L1124	#,
 8167 302a 4983FC03 		cmp	r12, 3	# tmp1065,
 8168 302e 7462     		je	.L1125	#,
 8169 3030 4983FC04 		cmp	r12, 4	# tmp1065,
 8170 3034 7448     		je	.L1126	#,
 8171 3036 4983FC05 		cmp	r12, 5	# tmp1065,
 8172 303a 742E     		je	.L1127	#,
 8173 303c 4983FC06 		cmp	r12, 6	# tmp1065,
 8174 3040 7414     		je	.L1128	#,
 8175              	.LVL448:
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8176              		.loc 1 271 9 is_stmt 1 view .LVU2774
 8177              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8178              		.loc 1 271 28 is_stmt 0 view .LVU2775
 8179 3042 C4E2A3F7 		shrx	rdx, rcx, r11	# _135, pattern, _1914
 8179      D1
 8180              	.LVL449:
 8181              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8182              		.loc 1 271 57 view .LVU2776
 8183 3047 C4E2F9F7 		shlx	rcx, rcx, rax	# _137, pattern, _1915
 8183      C9
 8184              	.LVL450:
 8185              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8186              		.loc 1 271 17 view .LVU2777
 8187 304c 4809D1   		or	rcx, rdx	# pattern, _135
 8188              	.LVL451:
 272:sieve_extend.c ****     } 
 8189              		.loc 1 272 9 is_stmt 1 view .LVU2778
 8190              	# sieve_extend.c:272:         bitarray[copy_word] |= pattern;
 272:sieve_extend.c ****     } 
 8191              		.loc 1 272 29 is_stmt 0 view .LVU2779
 8192 304f 48090B   		or	QWORD PTR [rbx], rcx	# MEM[base: _1788, offset: 0B], pattern
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8193              		.loc 1 270 40 is_stmt 1 view .LVU2780
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8194              		.loc 1 270 11 view .LVU2781
 8195 3052 4883C308 		add	rbx, 8	# ivtmp.579,
 8196              	.LVL452:
 8197              	.L1128:
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8198              		.loc 1 271 9 view .LVU2782
 8199              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8200              		.loc 1 271 28 is_stmt 0 view .LVU2783
 8201 3056 C462A3F7 		shrx	r12, rcx, r11	# _135, pattern, _1914
 8201      E1
 8202              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8203              		.loc 1 271 57 view .LVU2784
 8204 305b C4E2F9F7 		shlx	rcx, rcx, rax	# _137, pattern, _1915
GAS LISTING /tmp/cctyCFAS.s 			page 230


 8204      C9
 8205              	.LVL453:
 8206              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8207              		.loc 1 271 17 view .LVU2785
 8208 3060 4C09E1   		or	rcx, r12	# pattern, _135
 8209              	.LVL454:
 272:sieve_extend.c ****     } 
 8210              		.loc 1 272 9 is_stmt 1 view .LVU2786
 8211              	# sieve_extend.c:272:         bitarray[copy_word] |= pattern;
 272:sieve_extend.c ****     } 
 8212              		.loc 1 272 29 is_stmt 0 view .LVU2787
 8213 3063 48090B   		or	QWORD PTR [rbx], rcx	# MEM[base: _1788, offset: 0B], pattern
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8214              		.loc 1 270 40 is_stmt 1 view .LVU2788
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8215              		.loc 1 270 11 view .LVU2789
 8216 3066 4883C308 		add	rbx, 8	# ivtmp.579,
 8217              	.LVL455:
 8218              	.L1127:
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8219              		.loc 1 271 9 view .LVU2790
 8220              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8221              		.loc 1 271 28 is_stmt 0 view .LVU2791
 8222 306a C4E2A3F7 		shrx	rdx, rcx, r11	# _135, pattern, _1914
 8222      D1
 8223              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8224              		.loc 1 271 57 view .LVU2792
 8225 306f C4E2F9F7 		shlx	rcx, rcx, rax	# _137, pattern, _1915
 8225      C9
 8226              	.LVL456:
 8227              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8228              		.loc 1 271 17 view .LVU2793
 8229 3074 4809D1   		or	rcx, rdx	# pattern, _135
 8230              	.LVL457:
 272:sieve_extend.c ****     } 
 8231              		.loc 1 272 9 is_stmt 1 view .LVU2794
 8232              	# sieve_extend.c:272:         bitarray[copy_word] |= pattern;
 272:sieve_extend.c ****     } 
 8233              		.loc 1 272 29 is_stmt 0 view .LVU2795
 8234 3077 48090B   		or	QWORD PTR [rbx], rcx	# MEM[base: _1788, offset: 0B], pattern
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8235              		.loc 1 270 40 is_stmt 1 view .LVU2796
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8236              		.loc 1 270 11 view .LVU2797
 8237 307a 4883C308 		add	rbx, 8	# ivtmp.579,
 8238              	.LVL458:
 8239              	.L1126:
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8240              		.loc 1 271 9 view .LVU2798
 8241              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8242              		.loc 1 271 28 is_stmt 0 view .LVU2799
 8243 307e C462A3F7 		shrx	r12, rcx, r11	# _135, pattern, _1914
GAS LISTING /tmp/cctyCFAS.s 			page 231


 8243      E1
 8244              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8245              		.loc 1 271 57 view .LVU2800
 8246 3083 C4E2F9F7 		shlx	rcx, rcx, rax	# _137, pattern, _1915
 8246      C9
 8247              	.LVL459:
 8248              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8249              		.loc 1 271 17 view .LVU2801
 8250 3088 4C09E1   		or	rcx, r12	# pattern, _135
 8251              	.LVL460:
 272:sieve_extend.c ****     } 
 8252              		.loc 1 272 9 is_stmt 1 view .LVU2802
 8253              	# sieve_extend.c:272:         bitarray[copy_word] |= pattern;
 272:sieve_extend.c ****     } 
 8254              		.loc 1 272 29 is_stmt 0 view .LVU2803
 8255 308b 48090B   		or	QWORD PTR [rbx], rcx	# MEM[base: _1788, offset: 0B], pattern
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8256              		.loc 1 270 40 is_stmt 1 view .LVU2804
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8257              		.loc 1 270 11 view .LVU2805
 8258 308e 4883C308 		add	rbx, 8	# ivtmp.579,
 8259              	.LVL461:
 8260              	.L1125:
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8261              		.loc 1 271 9 view .LVU2806
 8262              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8263              		.loc 1 271 28 is_stmt 0 view .LVU2807
 8264 3092 C4E2A3F7 		shrx	rdx, rcx, r11	# _135, pattern, _1914
 8264      D1
 8265              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8266              		.loc 1 271 57 view .LVU2808
 8267 3097 C4E2F9F7 		shlx	rcx, rcx, rax	# _137, pattern, _1915
 8267      C9
 8268              	.LVL462:
 8269              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8270              		.loc 1 271 17 view .LVU2809
 8271 309c 4809D1   		or	rcx, rdx	# pattern, _135
 8272              	.LVL463:
 272:sieve_extend.c ****     } 
 8273              		.loc 1 272 9 is_stmt 1 view .LVU2810
 8274              	# sieve_extend.c:272:         bitarray[copy_word] |= pattern;
 272:sieve_extend.c ****     } 
 8275              		.loc 1 272 29 is_stmt 0 view .LVU2811
 8276 309f 48090B   		or	QWORD PTR [rbx], rcx	# MEM[base: _1788, offset: 0B], pattern
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8277              		.loc 1 270 40 is_stmt 1 view .LVU2812
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8278              		.loc 1 270 11 view .LVU2813
 8279 30a2 4883C308 		add	rbx, 8	# ivtmp.579,
 8280              	.LVL464:
 8281              	.L1124:
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
GAS LISTING /tmp/cctyCFAS.s 			page 232


 8282              		.loc 1 271 9 view .LVU2814
 8283              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8284              		.loc 1 271 28 is_stmt 0 view .LVU2815
 8285 30a6 C462A3F7 		shrx	r12, rcx, r11	# _135, pattern, _1914
 8285      E1
 8286              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8287              		.loc 1 271 57 view .LVU2816
 8288 30ab C4E2F9F7 		shlx	rcx, rcx, rax	# _137, pattern, _1915
 8288      C9
 8289              	.LVL465:
 8290              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8291              		.loc 1 271 17 view .LVU2817
 8292 30b0 4C09E1   		or	rcx, r12	# pattern, _135
 8293              	.LVL466:
 272:sieve_extend.c ****     } 
 8294              		.loc 1 272 9 is_stmt 1 view .LVU2818
 8295              	# sieve_extend.c:272:         bitarray[copy_word] |= pattern;
 272:sieve_extend.c ****     } 
 8296              		.loc 1 272 29 is_stmt 0 view .LVU2819
 8297 30b3 48090B   		or	QWORD PTR [rbx], rcx	# MEM[base: _1788, offset: 0B], pattern
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8298              		.loc 1 270 40 is_stmt 1 view .LVU2820
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8299              		.loc 1 270 11 view .LVU2821
 8300 30b6 4883C308 		add	rbx, 8	# ivtmp.579,
 8301              	.LVL467:
 8302              	.L1123:
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8303              		.loc 1 271 9 view .LVU2822
 8304              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8305              		.loc 1 271 28 is_stmt 0 view .LVU2823
 8306 30ba C4E2A3F7 		shrx	rdx, rcx, r11	# _135, pattern, _1914
 8306      D1
 8307              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8308              		.loc 1 271 57 view .LVU2824
 8309 30bf C4E2F9F7 		shlx	rcx, rcx, rax	# _137, pattern, _1915
 8309      C9
 8310              	.LVL468:
 8311              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8312              		.loc 1 271 17 view .LVU2825
 8313 30c4 4809D1   		or	rcx, rdx	# pattern, _135
 8314              	.LVL469:
 272:sieve_extend.c ****     } 
 8315              		.loc 1 272 9 is_stmt 1 view .LVU2826
 8316              	# sieve_extend.c:272:         bitarray[copy_word] |= pattern;
 272:sieve_extend.c ****     } 
 8317              		.loc 1 272 29 is_stmt 0 view .LVU2827
 8318 30c7 48090B   		or	QWORD PTR [rbx], rcx	# MEM[base: _1788, offset: 0B], pattern
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8319              		.loc 1 270 40 is_stmt 1 view .LVU2828
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
GAS LISTING /tmp/cctyCFAS.s 			page 233


 8320              		.loc 1 270 11 view .LVU2829
 8321 30ca 4883C308 		add	rbx, 8	# ivtmp.579,
 8322              	# sieve_extend.c:270:     for (;copy_word < range_stop_word; copy_word++) {
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8323              		.loc 1 270 5 is_stmt 0 view .LVU2830
 8324 30ce 4939D8   		cmp	r8, rbx	# _1784, ivtmp.579
 8325 30d1 0F849400 		je	.L1366	#,
 8325      0000
 8326              	.LVL470:
 8327              	.L680:
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8328              		.loc 1 271 9 is_stmt 1 view .LVU2831
 8329              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8330              		.loc 1 271 28 is_stmt 0 view .LVU2832
 8331 30d7 C4E2A3F7 		shrx	rdx, rcx, r11	# _135, pattern, _1914
 8331      D1
 8332              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8333              		.loc 1 271 57 view .LVU2833
 8334 30dc C4E2F9F7 		shlx	rcx, rcx, rax	# _137, pattern, _1915
 8334      C9
 8335              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8336              		.loc 1 271 17 view .LVU2834
 8337 30e1 4809D1   		or	rcx, rdx	# pattern, _135
 272:sieve_extend.c ****     } 
 8338              		.loc 1 272 9 is_stmt 1 view .LVU2835
 8339              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8340              		.loc 1 271 28 is_stmt 0 view .LVU2836
 8341 30e4 C462A3F7 		shrx	r12, rcx, r11	# _135, pattern, _1914
 8341      E1
 8342              	# sieve_extend.c:272:         bitarray[copy_word] |= pattern;
 272:sieve_extend.c ****     } 
 8343              		.loc 1 272 29 view .LVU2837
 8344 30e9 48090B   		or	QWORD PTR [rbx], rcx	# MEM[base: _1788, offset: 0B], pattern
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8345              		.loc 1 270 40 is_stmt 1 view .LVU2838
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8346              		.loc 1 270 11 view .LVU2839
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8347              		.loc 1 271 9 view .LVU2840
 8348              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8349              		.loc 1 271 57 is_stmt 0 view .LVU2841
 8350 30ec C4E2F9F7 		shlx	rcx, rcx, rax	# _137, pattern, _1915
 8350      C9
 8351              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8352              		.loc 1 271 17 view .LVU2842
 8353 30f1 4C09E1   		or	rcx, r12	# pattern, _135
 272:sieve_extend.c ****     } 
 8354              		.loc 1 272 9 is_stmt 1 view .LVU2843
 8355              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8356              		.loc 1 271 57 is_stmt 0 view .LVU2844
GAS LISTING /tmp/cctyCFAS.s 			page 234


 8357 30f4 C462F9F7 		shlx	r12, rcx, rax	# _137, pattern, _1915
 8357      E1
 8358              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8359              		.loc 1 271 28 view .LVU2845
 8360 30f9 C4E2A3F7 		shrx	rdx, rcx, r11	# _135, pattern, _1914
 8360      D1
 8361              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8362              		.loc 1 271 17 view .LVU2846
 8363 30fe 4C09E2   		or	rdx, r12	# pattern, _137
 8364              	# sieve_extend.c:272:         bitarray[copy_word] |= pattern;
 272:sieve_extend.c ****     } 
 8365              		.loc 1 272 29 view .LVU2847
 8366 3101 48094B08 		or	QWORD PTR 8[rbx], rcx	# MEM[base: _1788, offset: 0B], pattern
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8367              		.loc 1 270 40 is_stmt 1 view .LVU2848
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8368              		.loc 1 270 11 view .LVU2849
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8369              		.loc 1 271 9 view .LVU2850
 272:sieve_extend.c ****     } 
 8370              		.loc 1 272 9 view .LVU2851
 8371              	# sieve_extend.c:272:         bitarray[copy_word] |= pattern;
 272:sieve_extend.c ****     } 
 8372              		.loc 1 272 29 is_stmt 0 view .LVU2852
 8373 3105 48095310 		or	QWORD PTR 16[rbx], rdx	# MEM[base: _1788, offset: 0B], pattern
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8374              		.loc 1 270 40 is_stmt 1 view .LVU2853
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8375              		.loc 1 270 11 view .LVU2854
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8376              		.loc 1 271 9 view .LVU2855
 8377              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8378              		.loc 1 271 28 is_stmt 0 view .LVU2856
 8379 3109 C4E2A3F7 		shrx	rcx, rdx, r11	# _135, pattern, _1914
 8379      CA
 8380              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8381              		.loc 1 271 57 view .LVU2857
 8382 310e C4E2F9F7 		shlx	rdx, rdx, rax	# _137, pattern, _1915
 8382      D2
 8383              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8384              		.loc 1 271 17 view .LVU2858
 8385 3113 4809D1   		or	rcx, rdx	# pattern, _137
 272:sieve_extend.c ****     } 
 8386              		.loc 1 272 9 is_stmt 1 view .LVU2859
 8387              	# sieve_extend.c:272:         bitarray[copy_word] |= pattern;
 272:sieve_extend.c ****     } 
 8388              		.loc 1 272 29 is_stmt 0 view .LVU2860
 8389 3116 48094B18 		or	QWORD PTR 24[rbx], rcx	# MEM[base: _1788, offset: 0B], pattern
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8390              		.loc 1 270 40 is_stmt 1 view .LVU2861
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8391              		.loc 1 270 11 view .LVU2862
GAS LISTING /tmp/cctyCFAS.s 			page 235


 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8392              		.loc 1 271 9 view .LVU2863
 8393              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8394              		.loc 1 271 28 is_stmt 0 view .LVU2864
 8395 311a C462A3F7 		shrx	r12, rcx, r11	# _135, pattern, _1914
 8395      E1
 8396              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8397              		.loc 1 271 57 view .LVU2865
 8398 311f C4E2F9F7 		shlx	rcx, rcx, rax	# _137, pattern, _1915
 8398      C9
 8399              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8400              		.loc 1 271 17 view .LVU2866
 8401 3124 4909CC   		or	r12, rcx	# pattern, _137
 272:sieve_extend.c ****     } 
 8402              		.loc 1 272 9 is_stmt 1 view .LVU2867
 8403              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8404              		.loc 1 271 57 is_stmt 0 view .LVU2868
 8405 3127 C4C2F9F7 		shlx	rdx, r12, rax	# _137, pattern, _1915
 8405      D4
 8406              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8407              		.loc 1 271 28 view .LVU2869
 8408 312c C4C2A3F7 		shrx	rcx, r12, r11	# _135, pattern, _1914
 8408      CC
 8409              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8410              		.loc 1 271 17 view .LVU2870
 8411 3131 4809D1   		or	rcx, rdx	# pattern, _137
 8412              	# sieve_extend.c:272:         bitarray[copy_word] |= pattern;
 272:sieve_extend.c ****     } 
 8413              		.loc 1 272 29 view .LVU2871
 8414 3134 4C096320 		or	QWORD PTR 32[rbx], r12	# MEM[base: _1788, offset: 0B], pattern
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8415              		.loc 1 270 40 is_stmt 1 view .LVU2872
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8416              		.loc 1 270 11 view .LVU2873
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8417              		.loc 1 271 9 view .LVU2874
 272:sieve_extend.c ****     } 
 8418              		.loc 1 272 9 view .LVU2875
 8419              	# sieve_extend.c:272:         bitarray[copy_word] |= pattern;
 272:sieve_extend.c ****     } 
 8420              		.loc 1 272 29 is_stmt 0 view .LVU2876
 8421 3138 48094B28 		or	QWORD PTR 40[rbx], rcx	# MEM[base: _1788, offset: 0B], pattern
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8422              		.loc 1 270 40 is_stmt 1 view .LVU2877
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8423              		.loc 1 270 11 view .LVU2878
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8424              		.loc 1 271 9 view .LVU2879
 8425              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8426              		.loc 1 271 28 is_stmt 0 view .LVU2880
GAS LISTING /tmp/cctyCFAS.s 			page 236


 8427 313c C462A3F7 		shrx	r12, rcx, r11	# _135, pattern, _1914
 8427      E1
 8428              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8429              		.loc 1 271 57 view .LVU2881
 8430 3141 C4E2F9F7 		shlx	rcx, rcx, rax	# _137, pattern, _1915
 8430      C9
 8431              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8432              		.loc 1 271 17 view .LVU2882
 8433 3146 4909CC   		or	r12, rcx	# pattern, _137
 272:sieve_extend.c ****     } 
 8434              		.loc 1 272 9 is_stmt 1 view .LVU2883
 8435              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8436              		.loc 1 271 28 is_stmt 0 view .LVU2884
 8437 3149 C4C2A3F7 		shrx	rcx, r12, r11	# _135, pattern, _1914
 8437      CC
 8438              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8439              		.loc 1 271 57 view .LVU2885
 8440 314e C4C2F9F7 		shlx	rdx, r12, rax	# _137, pattern, _1915
 8440      D4
 8441              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8442              		.loc 1 271 17 view .LVU2886
 8443 3153 4809D1   		or	rcx, rdx	# pattern, _137
 8444              	# sieve_extend.c:272:         bitarray[copy_word] |= pattern;
 272:sieve_extend.c ****     } 
 8445              		.loc 1 272 29 view .LVU2887
 8446 3156 4C096330 		or	QWORD PTR 48[rbx], r12	# MEM[base: _1788, offset: 0B], pattern
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8447              		.loc 1 270 40 is_stmt 1 view .LVU2888
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8448              		.loc 1 270 11 view .LVU2889
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8449              		.loc 1 271 9 view .LVU2890
 272:sieve_extend.c ****     } 
 8450              		.loc 1 272 9 view .LVU2891
 8451              	# sieve_extend.c:272:         bitarray[copy_word] |= pattern;
 272:sieve_extend.c ****     } 
 8452              		.loc 1 272 29 is_stmt 0 view .LVU2892
 8453 315a 48094B38 		or	QWORD PTR 56[rbx], rcx	# MEM[base: _1788, offset: 0B], pattern
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8454              		.loc 1 270 40 is_stmt 1 view .LVU2893
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8455              		.loc 1 270 11 view .LVU2894
 8456 315e 4883C340 		add	rbx, 64	# ivtmp.579,
 8457              	# sieve_extend.c:270:     for (;copy_word < range_stop_word; copy_word++) {
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8458              		.loc 1 270 5 is_stmt 0 view .LVU2895
 8459 3162 4939D8   		cmp	r8, rbx	# _1784, ivtmp.579
 8460 3165 0F856CFF 		jne	.L680	#,
 8460      FFFF
 8461              	.L1366:
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8462              		.loc 1 270 5 view .LVU2896
GAS LISTING /tmp/cctyCFAS.s 			page 237


 8463 316b 498D7432 		lea	rsi, -1[r10+rsi]	# _339,
 8463      FF
 8464 3170 4829FE   		sub	rsi, rdi	# copy_word, copy_word
 8465              	.L679:
 275:sieve_extend.c ****     bitarray[copy_word] |= pattern & chopmask(range_stop);
 8466              		.loc 1 275 5 is_stmt 1 view .LVU2897
 8467              	# sieve_extend.c:275:     pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped)
 275:sieve_extend.c ****     bitarray[copy_word] |= pattern & chopmask(range_stop);
 8468              		.loc 1 275 53 is_stmt 0 view .LVU2898
 8469 3173 0FB67C24 		movzx	edi, BYTE PTR 32[rsp]	# tmp2150, %sfp
 8469      20
 8470              	# sieve_extend.c:275:     pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped)
 275:sieve_extend.c ****     bitarray[copy_word] |= pattern & chopmask(range_stop);
 8471              		.loc 1 275 24 view .LVU2899
 8472 3178 C462B3F7 		shrx	r10, rcx, r9	# _147, pattern, tmp716
 8472      D1
 8473              	.LVL471:
 275:sieve_extend.c ****     bitarray[copy_word] |= pattern & chopmask(range_stop);
 8474              		.loc 1 275 24 view .LVU2900
 8475              	.LBE501:
 8476              	.LBE500:
 8477              	.LBE530:
 8478              	# sieve_extend.c:941:     for (;range_stop < block_stop;) {
 941:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 8479              		.loc 1 941 5 view .LVU2901
 8480 317d 4C8B5C24 		mov	r11, QWORD PTR 104[rsp]	# prephitmp_1899, %sfp
 8480      68
 8481              	.LBB531:
 8482              	.LBB507:
 8483              	.LBB504:
 8484              	# sieve_extend.c:275:     pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped)
 275:sieve_extend.c ****     bitarray[copy_word] |= pattern & chopmask(range_stop);
 8485              		.loc 1 275 53 view .LVU2902
 8486 3182 C462C1F7 		shlx	r9, rcx, rdi	# _149, pattern, tmp2150
 8486      C9
 8487              	.LVL472:
 276:sieve_extend.c **** }
 8488              		.loc 1 276 5 is_stmt 1 view .LVU2903
 8489              	# sieve_extend.c:275:     pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped)
 275:sieve_extend.c ****     bitarray[copy_word] |= pattern & chopmask(range_stop);
 8490              		.loc 1 275 13 is_stmt 0 view .LVU2904
 8491 3187 4D09CA   		or	r10, r9	# pattern, _149
 8492              	.LVL473:
 8493              	# sieve_extend.c:276:     bitarray[copy_word] |= pattern & chopmask(range_stop);
 276:sieve_extend.c **** }
 8494              		.loc 1 276 36 view .LVU2905
 8495 318a 4C235424 		and	r10, QWORD PTR 56[rsp]	# tmp726, %sfp
 8495      38
 8496              	.LVL474:
 8497              	# sieve_extend.c:276:     bitarray[copy_word] |= pattern & chopmask(range_stop);
 276:sieve_extend.c **** }
 8498              		.loc 1 276 25 view .LVU2906
 8499 318f 4D0914F6 		or	QWORD PTR [r14+rsi*8], r10	# *_153, tmp726
 8500              	.LVL475:
 276:sieve_extend.c **** }
 8501              		.loc 1 276 25 view .LVU2907
 8502              	.LBE504:
GAS LISTING /tmp/cctyCFAS.s 			page 238


 8503              	.LBE507:
 8504              	.LBE531:
 941:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 8505              		.loc 1 941 11 is_stmt 1 view .LVU2908
 8506              	# sieve_extend.c:941:     for (;range_stop < block_stop;) {
 941:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 8507              		.loc 1 941 5 is_stmt 0 view .LVU2909
 8508 3193 4C395C24 		cmp	QWORD PTR 112[rsp], r11	# %sfp, prephitmp_1899
 8508      70
 8509 3198 0F82C3FB 		jb	.L713	#,
 8509      FFFF
 8510              	.LVL476:
 8511              	.L1578:
 941:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 8512              		.loc 1 941 5 view .LVU2910
 8513 319e 4C8B7C24 		mov	r15, QWORD PTR 80[rsp]	# <retval>, %sfp
 8513      50
 8514 31a3 4C8B6C24 		mov	r13, QWORD PTR 96[rsp]	# index, %sfp
 8514      60
 8515 31a8 4D8B7708 		mov	r14, QWORD PTR 8[r15]	# prephitmp_1899, sieve_89->bits
 8516              	.LVL477:
 941:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 8517              		.loc 1 941 5 view .LVU2911
 8518 31ac 488B5424 		mov	rdx, QWORD PTR 120[rsp]	# patternsize_bits, %sfp
 8518      78
 8519 31b1 4C897424 		mov	QWORD PTR 104[rsp], r14	# %sfp, prephitmp_1899
 8519      68
 8520              	.LVL478:
 941:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 8521              		.loc 1 941 5 view .LVU2912
 8522 31b6 4C896C24 		mov	QWORD PTR 64[rsp], r13	# %sfp, index
 8522      40
 8523 31bb 488B7424 		mov	rsi, QWORD PTR 88[rsp]	# block$pattern_start, %sfp
 8523      58
 967:sieve_extend.c **** }
 8524              		.loc 1 967 5 is_stmt 1 view .LVU2913
 8525              	.LVL479:
 967:sieve_extend.c **** }
 8526              		.loc 1 967 5 is_stmt 0 view .LVU2914
 8527              	.LBE534:
 8528              	.LBE538:
 981:sieve_extend.c ****     prime = block.prime;
 8529              		.loc 1 981 5 is_stmt 1 view .LVU2915
 8530              	.LBB539:
 8531              	.LBI539:
 836:sieve_extend.c ****     if (size < WORD_SIZE_counter)   {
 8532              		.loc 1 836 20 view .LVU2916
 8533              	.LBB540:
 837:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 8534              		.loc 1 837 5 view .LVU2917
 8535              	# sieve_extend.c:837:     if (size < WORD_SIZE_counter)   {
 837:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 8536              		.loc 1 837 8 is_stmt 0 view .LVU2918
 8537 31c0 4883FA3F 		cmp	rdx, 63	# block$pattern_size,
 8538 31c4 0F875706 		ja	.L714	#,
 8538      0000
 8539              	.LVL480:
GAS LISTING /tmp/cctyCFAS.s 			page 239


 8540              	.L662:
 838:sieve_extend.c ****         return; // rapid exit for small sizes
 8541              		.loc 1 838 9 is_stmt 1 view .LVU2919
 8542 31ca 488B4C24 		mov	rcx, QWORD PTR 104[rsp]	#, %sfp
 8542      68
 8543 31cf 488B7C24 		mov	rdi, QWORD PTR 48[rsp]	#, %sfp
 8543      30
 8544 31d4 E827CEFF 		call	extendSieve_smallSize	#
 8544      FF
 8545              	.LVL481:
 839:sieve_extend.c ****     }
 8546              		.loc 1 839 9 view .LVU2920
 8547 31d9 E96E0600 		jmp	.L715	#
 8547      00
 8548              	.LVL482:
 8549 31de 6690     		.p2align 4,,10
 8550              		.p2align 3
 8551              	.L696:
 839:sieve_extend.c ****     }
 8552              		.loc 1 839 9 is_stmt 0 view .LVU2921
 8553              	.LBE540:
 8554              	.LBE539:
 8555              	.LBB543:
 8556              	.LBB535:
 8557              	.LBB532:
 963:sieve_extend.c ****         block.prime = prime;
 8558              		.loc 1 963 48 is_stmt 1 view .LVU2922
 8559              	.LBB508:
 8560              	.LBI464:
 383:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange (%ju occurances
 8561              		.loc 1 383 13 view .LVU2923
 8562              	.LBB482:
 384:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 8563              		.loc 1 384 5 view .LVU2924
 385:sieve_extend.c **** 
 8564              		.loc 1 385 5 view .LVU2925
 389:sieve_extend.c ****         register bitword_t mask = markmask(index);
 8565              		.loc 1 389 5 view .LVU2926
 8566              	.LBB480:
 389:sieve_extend.c ****         register bitword_t mask = markmask(index);
 8567              		.loc 1 389 10 view .LVU2927
 389:sieve_extend.c ****         register bitword_t mask = markmask(index);
 8568              		.loc 1 389 50 view .LVU2928
 8569              	# sieve_extend.c:389:     for (register counter_t index = range_start; index <= range_stop_unique; 
 389:sieve_extend.c ****         register bitword_t mask = markmask(index);
 8570              		.loc 1 389 5 is_stmt 0 view .LVU2929
 8571 31e0 4885D2   		test	rdx, rdx	# _203
 8572 31e3 0F8568FB 		jne	.L678	#,
 8572      FFFF
 8573              	.LBB477:
 8574              	.LBB468:
 8575              	.LBB469:
 8576              	# sieve_extend.c:186:    const counter_t range_stop_word = wordindex(range_stop);
 186:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 8577              		.loc 1 186 20 view .LVU2930
 8578 31e9 488B4C24 		mov	rcx, QWORD PTR 112[rsp]	# _66, %sfp
 8578      70
GAS LISTING /tmp/cctyCFAS.s 			page 240


 8579              	# sieve_extend.c:188:    register bitword_t* __restrict fast_loop_ptr  = &bitarray[((range_stop_wor
 188:sieve_extend.c **** 
 8580              		.loc 1 188 84 view .LVU2931
 8581 31ee 4B8D3CA4 		lea	rdi, [r12+r12*4]	# tmp782,
 8582              	# sieve_extend.c:186:    const counter_t range_stop_word = wordindex(range_stop);
 186:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 8583              		.loc 1 186 20 view .LVU2932
 8584 31f2 4989CA   		mov	r10, rcx	# range_stop_word, _66
 8585 31f5 49C1EA06 		shr	r10, 6	# range_stop_word,
 8586              	# sieve_extend.c:188:    register bitword_t* __restrict fast_loop_ptr  = &bitarray[((range_stop_wor
 188:sieve_extend.c **** 
 8587              		.loc 1 188 107 view .LVU2933
 8588 31f9 4C89D6   		mov	rsi, r10	# tmp788, range_stop_word
 8589 31fc 4829FE   		sub	rsi, rdi	# tmp788, tmp782
 8590 31ff 4C896C24 		mov	QWORD PTR 32[rsp], r13	# %sfp, index
 8590      20
 8591 3204 4939FA   		cmp	r10, rdi	# range_stop_word, tmp782
 8592              	# sieve_extend.c:205:    const register bitword_t* __restrict range_stop_ptr = &bitarray[(range_sto
 205:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 8593              		.loc 1 205 41 view .LVU2934
 8594 3207 4F8D04D6 		lea	r8, [r14+r10*8]	# range_stop_ptr,
 8595              	# sieve_extend.c:212:       *index_ptr |= (mask & chopmask(range_stop));
 212:sieve_extend.c ****    }
 8596              		.loc 1 212 29 view .LVU2935
 8597 320b 4189CB   		mov	r11d, ecx	# tmp784, _66
 8598 320e 4D8D0CF6 		lea	r9, [r14+rsi*8]	# tmp790,
 8599 3212 4D89E2   		mov	r10, r12	# _1742, step
 8600 3215 4C8B6C24 		mov	r13, QWORD PTR 56[rsp]	# tmp728, %sfp
 8600      38
 8601 321a 4D0F46CE 		cmovbe	r9, r14	# _94,, prephitmp_1581
 8602 321e 41F7D3   		not	r11d	# tmp784
 8603 3221 48C7C0FF 		mov	rax, -1	# tmp2172,
 8603      FFFFFF
 8604              	# sieve_extend.c:194:        index_ptr+=step;
 194:sieve_extend.c ****        *index_ptr |= mask;
 8605              		.loc 1 194 17 view .LVU2936
 8606 3228 4A8D14E5 		lea	rdx, 0[0+r12*8]	# _329,
 8606      00000000 
 8607 3230 48C1E703 		sal	rdi, 3	# tmp794,
 8608 3234 49C1E204 		sal	r10, 4	# _1742,
 8609              	# sieve_extend.c:212:       *index_ptr |= (mask & chopmask(range_stop));
 212:sieve_extend.c ****    }
 8610              		.loc 1 212 29 view .LVU2937
 8611 3238 C462A3F7 		shrx	r11, rax, r11	# _361, tmp2172, tmp784
 8611      D8
 8612              	.LVL483:
 8613 323d 0F1F00   		.p2align 4,,10
 8614              		.p2align 3
 8615              	.L712:
 212:sieve_extend.c ****    }
 8616              		.loc 1 212 29 view .LVU2938
 8617              	.LBE469:
 8618              	.LBE468:
 390:sieve_extend.c ****         applyMask(bitarray, step, range_stop, mask, wordindex(index));
 8619              		.loc 1 390 9 is_stmt 1 view .LVU2939
 8620              	# sieve_extend.c:391:         applyMask(bitarray, step, range_stop, mask, wordindex(index));
 391:sieve_extend.c ****     }
GAS LISTING /tmp/cctyCFAS.s 			page 241


 8621              		.loc 1 391 9 is_stmt 0 view .LVU2940
 8622 3240 4889D8   		mov	rax, rbx	# tmp797, index
 8623 3243 48C1E806 		shr	rax, 6	# tmp797,
 8624              	.LBB473:
 8625              	.LBB470:
 8626              	# sieve_extend.c:187:    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(
 187:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  = &bitarray[((range_stop_word>step*5) ? (range_sto
 8627              		.loc 1 187 78 view .LVU2941
 8628 3247 498D04C6 		lea	rax, [r14+rax*8]	# index_ptr,
 8629              	.LBE470:
 8630              	.LBE473:
 8631              	# sieve_extend.c:390:         register bitword_t mask = markmask(index);
 390:sieve_extend.c ****         applyMask(bitarray, step, range_stop, mask, wordindex(index));
 8632              		.loc 1 390 28 view .LVU2942
 8633 324b C4C2E1F7 		shlx	rcx, r15, rbx	# mask, tmp1047, index
 8633      CF
 8634              	.LVL484:
 391:sieve_extend.c ****     }
 8635              		.loc 1 391 9 is_stmt 1 view .LVU2943
 8636              	.LBB474:
 8637              	.LBI468:
 154:sieve_extend.c **** // #if __APPLE__
 8638              		.loc 1 154 20 view .LVU2944
 8639              	.LBB471:
 186:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 8640              		.loc 1 186 4 view .LVU2945
 187:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  = &bitarray[((range_stop_word>step*5) ? (range_sto
 8641              		.loc 1 187 4 view .LVU2946
 188:sieve_extend.c **** 
 8642              		.loc 1 188 4 view .LVU2947
 192:sieve_extend.c ****        *index_ptr |= mask;
 8643              		.loc 1 192 4 view .LVU2948
 192:sieve_extend.c ****        *index_ptr |= mask;
 8644              		.loc 1 192 10 view .LVU2949
 8645 3250 4C39C8   		cmp	rax, r9	# index_ptr, prephitmp_1581
 8646 3253 0F83FF00 		jnb	.L707	#,
 8646      0000
 192:sieve_extend.c ****        *index_ptr |= mask;
 8647              		.loc 1 192 10 is_stmt 0 view .LVU2950
 8648 3259 4A8D3410 		lea	rsi, [rax+r10]	# ivtmp.635,
 8649              	.L708:
 193:sieve_extend.c ****        index_ptr+=step;
 8650              		.loc 1 193 8 is_stmt 1 view .LVU2951
 8651              	# sieve_extend.c:193:        *index_ptr |= mask;
 193:sieve_extend.c ****        index_ptr+=step;
 8652              		.loc 1 193 19 is_stmt 0 view .LVU2952
 8653 325d 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_1089, offset: 0B], mask
 194:sieve_extend.c ****        *index_ptr |= mask;
 8654              		.loc 1 194 8 is_stmt 1 view .LVU2953
 8655              	.LVL485:
 195:sieve_extend.c ****        index_ptr+=step;
 8656              		.loc 1 195 8 view .LVU2954
 8657              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 8658              		.loc 1 195 19 is_stmt 0 view .LVU2955
 8659 3260 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_1089, index: _329, offset: 0B], mask
 196:sieve_extend.c ****        *index_ptr |= mask;
GAS LISTING /tmp/cctyCFAS.s 			page 242


 8660              		.loc 1 196 8 is_stmt 1 view .LVU2956
 8661              	.LVL486:
 197:sieve_extend.c ****        index_ptr+=step;
 8662              		.loc 1 197 8 view .LVU2957
 8663              	# sieve_extend.c:197:        *index_ptr |= mask;
 197:sieve_extend.c ****        index_ptr+=step;
 8664              		.loc 1 197 19 is_stmt 0 view .LVU2958
 8665 3264 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _1736, offset: 0B], mask
 198:sieve_extend.c ****        *index_ptr |= mask;
 8666              		.loc 1 198 8 is_stmt 1 view .LVU2959
 8667              	.LVL487:
 199:sieve_extend.c ****        index_ptr+=step;
 8668              		.loc 1 199 8 view .LVU2960
 8669              	# sieve_extend.c:199:        *index_ptr |= mask;
 199:sieve_extend.c ****        index_ptr+=step;
 8670              		.loc 1 199 19 is_stmt 0 view .LVU2961
 8671 3267 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _1736, index: _329, offset: 0B], mask
 200:sieve_extend.c ****        *index_ptr |= mask;
 8672              		.loc 1 200 8 is_stmt 1 view .LVU2962
 8673              	.LVL488:
 201:sieve_extend.c ****        index_ptr+=step;
 8674              		.loc 1 201 8 view .LVU2963
 8675 326b 4801FE   		add	rsi, rdi	# ivtmp.635, tmp794
 8676              	# sieve_extend.c:201:        *index_ptr |= mask;
 201:sieve_extend.c ****        index_ptr+=step;
 8677              		.loc 1 201 19 is_stmt 0 view .LVU2964
 8678 326e 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_1089, index: _329, step: 4, offset: 0B], mask
 202:sieve_extend.c ****    }
 8679              		.loc 1 202 8 is_stmt 1 view .LVU2965
 8680 3272 4801F8   		add	rax, rdi	# index_ptr, tmp794
 8681              	.LVL489:
 192:sieve_extend.c ****        *index_ptr |= mask;
 8682              		.loc 1 192 10 view .LVU2966
 8683 3275 4939C1   		cmp	r9, rax	# prephitmp_1581, index_ptr
 8684 3278 0F86DA00 		jbe	.L707	#,
 8684      0000
 193:sieve_extend.c ****        index_ptr+=step;
 8685              		.loc 1 193 8 view .LVU2967
 8686              	# sieve_extend.c:193:        *index_ptr |= mask;
 193:sieve_extend.c ****        index_ptr+=step;
 8687              		.loc 1 193 19 is_stmt 0 view .LVU2968
 8688 327e 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_1089, offset: 0B], mask
 194:sieve_extend.c ****        *index_ptr |= mask;
 8689              		.loc 1 194 8 is_stmt 1 view .LVU2969
 8690              	.LVL490:
 195:sieve_extend.c ****        index_ptr+=step;
 8691              		.loc 1 195 8 view .LVU2970
 8692              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 8693              		.loc 1 195 19 is_stmt 0 view .LVU2971
 8694 3281 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_1089, index: _329, offset: 0B], mask
 196:sieve_extend.c ****        *index_ptr |= mask;
 8695              		.loc 1 196 8 is_stmt 1 view .LVU2972
 8696              	.LVL491:
 197:sieve_extend.c ****        index_ptr+=step;
 8697              		.loc 1 197 8 view .LVU2973
 8698              	# sieve_extend.c:197:        *index_ptr |= mask;
GAS LISTING /tmp/cctyCFAS.s 			page 243


 197:sieve_extend.c ****        index_ptr+=step;
 8699              		.loc 1 197 19 is_stmt 0 view .LVU2974
 8700 3285 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _1736, offset: 0B], mask
 198:sieve_extend.c ****        *index_ptr |= mask;
 8701              		.loc 1 198 8 is_stmt 1 view .LVU2975
 8702              	.LVL492:
 199:sieve_extend.c ****        index_ptr+=step;
 8703              		.loc 1 199 8 view .LVU2976
 8704              	# sieve_extend.c:199:        *index_ptr |= mask;
 199:sieve_extend.c ****        index_ptr+=step;
 8705              		.loc 1 199 19 is_stmt 0 view .LVU2977
 8706 3288 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _1736, index: _329, offset: 0B], mask
 200:sieve_extend.c ****        *index_ptr |= mask;
 8707              		.loc 1 200 8 is_stmt 1 view .LVU2978
 8708              	.LVL493:
 201:sieve_extend.c ****        index_ptr+=step;
 8709              		.loc 1 201 8 view .LVU2979
 8710 328c 4801FE   		add	rsi, rdi	# ivtmp.635, tmp794
 8711              	# sieve_extend.c:201:        *index_ptr |= mask;
 201:sieve_extend.c ****        index_ptr+=step;
 8712              		.loc 1 201 19 is_stmt 0 view .LVU2980
 8713 328f 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_1089, index: _329, step: 4, offset: 0B], mask
 202:sieve_extend.c ****    }
 8714              		.loc 1 202 8 is_stmt 1 view .LVU2981
 8715 3293 4801F8   		add	rax, rdi	# index_ptr, tmp794
 8716              	.LVL494:
 192:sieve_extend.c ****        *index_ptr |= mask;
 8717              		.loc 1 192 10 view .LVU2982
 8718 3296 4939C1   		cmp	r9, rax	# prephitmp_1581, index_ptr
 8719 3299 0F86B900 		jbe	.L707	#,
 8719      0000
 193:sieve_extend.c ****        index_ptr+=step;
 8720              		.loc 1 193 8 view .LVU2983
 8721              	# sieve_extend.c:193:        *index_ptr |= mask;
 193:sieve_extend.c ****        index_ptr+=step;
 8722              		.loc 1 193 19 is_stmt 0 view .LVU2984
 8723 329f 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_1089, offset: 0B], mask
 194:sieve_extend.c ****        *index_ptr |= mask;
 8724              		.loc 1 194 8 is_stmt 1 view .LVU2985
 8725              	.LVL495:
 195:sieve_extend.c ****        index_ptr+=step;
 8726              		.loc 1 195 8 view .LVU2986
 8727              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 8728              		.loc 1 195 19 is_stmt 0 view .LVU2987
 8729 32a2 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_1089, index: _329, offset: 0B], mask
 196:sieve_extend.c ****        *index_ptr |= mask;
 8730              		.loc 1 196 8 is_stmt 1 view .LVU2988
 8731              	.LVL496:
 197:sieve_extend.c ****        index_ptr+=step;
 8732              		.loc 1 197 8 view .LVU2989
 8733              	# sieve_extend.c:197:        *index_ptr |= mask;
 197:sieve_extend.c ****        index_ptr+=step;
 8734              		.loc 1 197 19 is_stmt 0 view .LVU2990
 8735 32a6 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _1736, offset: 0B], mask
 198:sieve_extend.c ****        *index_ptr |= mask;
 8736              		.loc 1 198 8 is_stmt 1 view .LVU2991
GAS LISTING /tmp/cctyCFAS.s 			page 244


 8737              	.LVL497:
 199:sieve_extend.c ****        index_ptr+=step;
 8738              		.loc 1 199 8 view .LVU2992
 8739              	# sieve_extend.c:199:        *index_ptr |= mask;
 199:sieve_extend.c ****        index_ptr+=step;
 8740              		.loc 1 199 19 is_stmt 0 view .LVU2993
 8741 32a9 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _1736, index: _329, offset: 0B], mask
 200:sieve_extend.c ****        *index_ptr |= mask;
 8742              		.loc 1 200 8 is_stmt 1 view .LVU2994
 8743              	.LVL498:
 201:sieve_extend.c ****        index_ptr+=step;
 8744              		.loc 1 201 8 view .LVU2995
 8745 32ad 4801FE   		add	rsi, rdi	# ivtmp.635, tmp794
 8746              	# sieve_extend.c:201:        *index_ptr |= mask;
 201:sieve_extend.c ****        index_ptr+=step;
 8747              		.loc 1 201 19 is_stmt 0 view .LVU2996
 8748 32b0 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_1089, index: _329, step: 4, offset: 0B], mask
 202:sieve_extend.c ****    }
 8749              		.loc 1 202 8 is_stmt 1 view .LVU2997
 8750 32b4 4801F8   		add	rax, rdi	# index_ptr, tmp794
 8751              	.LVL499:
 192:sieve_extend.c ****        *index_ptr |= mask;
 8752              		.loc 1 192 10 view .LVU2998
 8753 32b7 4939C1   		cmp	r9, rax	# prephitmp_1581, index_ptr
 8754 32ba 0F869800 		jbe	.L707	#,
 8754      0000
 193:sieve_extend.c ****        index_ptr+=step;
 8755              		.loc 1 193 8 view .LVU2999
 8756              	# sieve_extend.c:193:        *index_ptr |= mask;
 193:sieve_extend.c ****        index_ptr+=step;
 8757              		.loc 1 193 19 is_stmt 0 view .LVU3000
 8758 32c0 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_1089, offset: 0B], mask
 194:sieve_extend.c ****        *index_ptr |= mask;
 8759              		.loc 1 194 8 is_stmt 1 view .LVU3001
 8760              	.LVL500:
 195:sieve_extend.c ****        index_ptr+=step;
 8761              		.loc 1 195 8 view .LVU3002
 8762              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 8763              		.loc 1 195 19 is_stmt 0 view .LVU3003
 8764 32c3 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_1089, index: _329, offset: 0B], mask
 196:sieve_extend.c ****        *index_ptr |= mask;
 8765              		.loc 1 196 8 is_stmt 1 view .LVU3004
 8766              	.LVL501:
 197:sieve_extend.c ****        index_ptr+=step;
 8767              		.loc 1 197 8 view .LVU3005
 8768              	# sieve_extend.c:197:        *index_ptr |= mask;
 197:sieve_extend.c ****        index_ptr+=step;
 8769              		.loc 1 197 19 is_stmt 0 view .LVU3006
 8770 32c7 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _1736, offset: 0B], mask
 198:sieve_extend.c ****        *index_ptr |= mask;
 8771              		.loc 1 198 8 is_stmt 1 view .LVU3007
 8772              	.LVL502:
 199:sieve_extend.c ****        index_ptr+=step;
 8773              		.loc 1 199 8 view .LVU3008
 8774              	# sieve_extend.c:199:        *index_ptr |= mask;
 199:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/cctyCFAS.s 			page 245


 8775              		.loc 1 199 19 is_stmt 0 view .LVU3009
 8776 32ca 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _1736, index: _329, offset: 0B], mask
 200:sieve_extend.c ****        *index_ptr |= mask;
 8777              		.loc 1 200 8 is_stmt 1 view .LVU3010
 8778              	.LVL503:
 201:sieve_extend.c ****        index_ptr+=step;
 8779              		.loc 1 201 8 view .LVU3011
 8780 32ce 4801FE   		add	rsi, rdi	# ivtmp.635, tmp794
 8781              	# sieve_extend.c:201:        *index_ptr |= mask;
 201:sieve_extend.c ****        index_ptr+=step;
 8782              		.loc 1 201 19 is_stmt 0 view .LVU3012
 8783 32d1 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_1089, index: _329, step: 4, offset: 0B], mask
 202:sieve_extend.c ****    }
 8784              		.loc 1 202 8 is_stmt 1 view .LVU3013
 8785 32d5 4801F8   		add	rax, rdi	# index_ptr, tmp794
 8786              	.LVL504:
 192:sieve_extend.c ****        *index_ptr |= mask;
 8787              		.loc 1 192 10 view .LVU3014
 8788 32d8 4939C1   		cmp	r9, rax	# prephitmp_1581, index_ptr
 8789 32db 767B     		jbe	.L707	#,
 193:sieve_extend.c ****        index_ptr+=step;
 8790              		.loc 1 193 8 view .LVU3015
 8791              	# sieve_extend.c:193:        *index_ptr |= mask;
 193:sieve_extend.c ****        index_ptr+=step;
 8792              		.loc 1 193 19 is_stmt 0 view .LVU3016
 8793 32dd 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_1089, offset: 0B], mask
 194:sieve_extend.c ****        *index_ptr |= mask;
 8794              		.loc 1 194 8 is_stmt 1 view .LVU3017
 8795              	.LVL505:
 195:sieve_extend.c ****        index_ptr+=step;
 8796              		.loc 1 195 8 view .LVU3018
 8797              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 8798              		.loc 1 195 19 is_stmt 0 view .LVU3019
 8799 32e0 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_1089, index: _329, offset: 0B], mask
 196:sieve_extend.c ****        *index_ptr |= mask;
 8800              		.loc 1 196 8 is_stmt 1 view .LVU3020
 8801              	.LVL506:
 197:sieve_extend.c ****        index_ptr+=step;
 8802              		.loc 1 197 8 view .LVU3021
 8803              	# sieve_extend.c:197:        *index_ptr |= mask;
 197:sieve_extend.c ****        index_ptr+=step;
 8804              		.loc 1 197 19 is_stmt 0 view .LVU3022
 8805 32e4 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _1736, offset: 0B], mask
 198:sieve_extend.c ****        *index_ptr |= mask;
 8806              		.loc 1 198 8 is_stmt 1 view .LVU3023
 8807              	.LVL507:
 199:sieve_extend.c ****        index_ptr+=step;
 8808              		.loc 1 199 8 view .LVU3024
 8809              	# sieve_extend.c:199:        *index_ptr |= mask;
 199:sieve_extend.c ****        index_ptr+=step;
 8810              		.loc 1 199 19 is_stmt 0 view .LVU3025
 8811 32e7 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _1736, index: _329, offset: 0B], mask
 200:sieve_extend.c ****        *index_ptr |= mask;
 8812              		.loc 1 200 8 is_stmt 1 view .LVU3026
 8813              	.LVL508:
 201:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/cctyCFAS.s 			page 246


 8814              		.loc 1 201 8 view .LVU3027
 8815 32eb 4801FE   		add	rsi, rdi	# ivtmp.635, tmp794
 8816              	# sieve_extend.c:201:        *index_ptr |= mask;
 201:sieve_extend.c ****        index_ptr+=step;
 8817              		.loc 1 201 19 is_stmt 0 view .LVU3028
 8818 32ee 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_1089, index: _329, step: 4, offset: 0B], mask
 202:sieve_extend.c ****    }
 8819              		.loc 1 202 8 is_stmt 1 view .LVU3029
 8820 32f2 4801F8   		add	rax, rdi	# index_ptr, tmp794
 8821              	.LVL509:
 192:sieve_extend.c ****        *index_ptr |= mask;
 8822              		.loc 1 192 10 view .LVU3030
 8823 32f5 4939C1   		cmp	r9, rax	# prephitmp_1581, index_ptr
 8824 32f8 765E     		jbe	.L707	#,
 193:sieve_extend.c ****        index_ptr+=step;
 8825              		.loc 1 193 8 view .LVU3031
 8826              	# sieve_extend.c:193:        *index_ptr |= mask;
 193:sieve_extend.c ****        index_ptr+=step;
 8827              		.loc 1 193 19 is_stmt 0 view .LVU3032
 8828 32fa 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_1089, offset: 0B], mask
 194:sieve_extend.c ****        *index_ptr |= mask;
 8829              		.loc 1 194 8 is_stmt 1 view .LVU3033
 8830              	.LVL510:
 195:sieve_extend.c ****        index_ptr+=step;
 8831              		.loc 1 195 8 view .LVU3034
 8832              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 8833              		.loc 1 195 19 is_stmt 0 view .LVU3035
 8834 32fd 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_1089, index: _329, offset: 0B], mask
 196:sieve_extend.c ****        *index_ptr |= mask;
 8835              		.loc 1 196 8 is_stmt 1 view .LVU3036
 8836              	.LVL511:
 197:sieve_extend.c ****        index_ptr+=step;
 8837              		.loc 1 197 8 view .LVU3037
 8838              	# sieve_extend.c:197:        *index_ptr |= mask;
 197:sieve_extend.c ****        index_ptr+=step;
 8839              		.loc 1 197 19 is_stmt 0 view .LVU3038
 8840 3301 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _1736, offset: 0B], mask
 198:sieve_extend.c ****        *index_ptr |= mask;
 8841              		.loc 1 198 8 is_stmt 1 view .LVU3039
 8842              	.LVL512:
 199:sieve_extend.c ****        index_ptr+=step;
 8843              		.loc 1 199 8 view .LVU3040
 8844              	# sieve_extend.c:199:        *index_ptr |= mask;
 199:sieve_extend.c ****        index_ptr+=step;
 8845              		.loc 1 199 19 is_stmt 0 view .LVU3041
 8846 3304 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _1736, index: _329, offset: 0B], mask
 200:sieve_extend.c ****        *index_ptr |= mask;
 8847              		.loc 1 200 8 is_stmt 1 view .LVU3042
 8848              	.LVL513:
 201:sieve_extend.c ****        index_ptr+=step;
 8849              		.loc 1 201 8 view .LVU3043
 8850 3308 4801FE   		add	rsi, rdi	# ivtmp.635, tmp794
 8851              	# sieve_extend.c:201:        *index_ptr |= mask;
 201:sieve_extend.c ****        index_ptr+=step;
 8852              		.loc 1 201 19 is_stmt 0 view .LVU3044
 8853 330b 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_1089, index: _329, step: 4, offset: 0B], mask
GAS LISTING /tmp/cctyCFAS.s 			page 247


 202:sieve_extend.c ****    }
 8854              		.loc 1 202 8 is_stmt 1 view .LVU3045
 8855 330f 4801F8   		add	rax, rdi	# index_ptr, tmp794
 8856              	.LVL514:
 192:sieve_extend.c ****        *index_ptr |= mask;
 8857              		.loc 1 192 10 view .LVU3046
 8858 3312 4939C1   		cmp	r9, rax	# prephitmp_1581, index_ptr
 8859 3315 7641     		jbe	.L707	#,
 193:sieve_extend.c ****        index_ptr+=step;
 8860              		.loc 1 193 8 view .LVU3047
 8861              	# sieve_extend.c:193:        *index_ptr |= mask;
 193:sieve_extend.c ****        index_ptr+=step;
 8862              		.loc 1 193 19 is_stmt 0 view .LVU3048
 8863 3317 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_1089, offset: 0B], mask
 194:sieve_extend.c ****        *index_ptr |= mask;
 8864              		.loc 1 194 8 is_stmt 1 view .LVU3049
 8865              	.LVL515:
 195:sieve_extend.c ****        index_ptr+=step;
 8866              		.loc 1 195 8 view .LVU3050
 8867              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 8868              		.loc 1 195 19 is_stmt 0 view .LVU3051
 8869 331a 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_1089, index: _329, offset: 0B], mask
 196:sieve_extend.c ****        *index_ptr |= mask;
 8870              		.loc 1 196 8 is_stmt 1 view .LVU3052
 8871              	.LVL516:
 197:sieve_extend.c ****        index_ptr+=step;
 8872              		.loc 1 197 8 view .LVU3053
 8873              	# sieve_extend.c:197:        *index_ptr |= mask;
 197:sieve_extend.c ****        index_ptr+=step;
 8874              		.loc 1 197 19 is_stmt 0 view .LVU3054
 8875 331e 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _1736, offset: 0B], mask
 198:sieve_extend.c ****        *index_ptr |= mask;
 8876              		.loc 1 198 8 is_stmt 1 view .LVU3055
 8877              	.LVL517:
 199:sieve_extend.c ****        index_ptr+=step;
 8878              		.loc 1 199 8 view .LVU3056
 8879              	# sieve_extend.c:199:        *index_ptr |= mask;
 199:sieve_extend.c ****        index_ptr+=step;
 8880              		.loc 1 199 19 is_stmt 0 view .LVU3057
 8881 3321 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _1736, index: _329, offset: 0B], mask
 200:sieve_extend.c ****        *index_ptr |= mask;
 8882              		.loc 1 200 8 is_stmt 1 view .LVU3058
 8883              	.LVL518:
 201:sieve_extend.c ****        index_ptr+=step;
 8884              		.loc 1 201 8 view .LVU3059
 8885 3325 4801FE   		add	rsi, rdi	# ivtmp.635, tmp794
 8886              	# sieve_extend.c:201:        *index_ptr |= mask;
 201:sieve_extend.c ****        index_ptr+=step;
 8887              		.loc 1 201 19 is_stmt 0 view .LVU3060
 8888 3328 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_1089, index: _329, step: 4, offset: 0B], mask
 202:sieve_extend.c ****    }
 8889              		.loc 1 202 8 is_stmt 1 view .LVU3061
 8890 332c 4801F8   		add	rax, rdi	# index_ptr, tmp794
 8891              	.LVL519:
 192:sieve_extend.c ****        *index_ptr |= mask;
 8892              		.loc 1 192 10 view .LVU3062
GAS LISTING /tmp/cctyCFAS.s 			page 248


 8893 332f 4939C1   		cmp	r9, rax	# prephitmp_1581, index_ptr
 8894 3332 7624     		jbe	.L707	#,
 193:sieve_extend.c ****        index_ptr+=step;
 8895              		.loc 1 193 8 view .LVU3063
 8896              	# sieve_extend.c:193:        *index_ptr |= mask;
 193:sieve_extend.c ****        index_ptr+=step;
 8897              		.loc 1 193 19 is_stmt 0 view .LVU3064
 8898 3334 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_1089, offset: 0B], mask
 194:sieve_extend.c ****        *index_ptr |= mask;
 8899              		.loc 1 194 8 is_stmt 1 view .LVU3065
 8900              	.LVL520:
 195:sieve_extend.c ****        index_ptr+=step;
 8901              		.loc 1 195 8 view .LVU3066
 8902              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 8903              		.loc 1 195 19 is_stmt 0 view .LVU3067
 8904 3337 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_1089, index: _329, offset: 0B], mask
 196:sieve_extend.c ****        *index_ptr |= mask;
 8905              		.loc 1 196 8 is_stmt 1 view .LVU3068
 8906              	.LVL521:
 197:sieve_extend.c ****        index_ptr+=step;
 8907              		.loc 1 197 8 view .LVU3069
 8908              	# sieve_extend.c:197:        *index_ptr |= mask;
 197:sieve_extend.c ****        index_ptr+=step;
 8909              		.loc 1 197 19 is_stmt 0 view .LVU3070
 8910 333b 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _1736, offset: 0B], mask
 198:sieve_extend.c ****        *index_ptr |= mask;
 8911              		.loc 1 198 8 is_stmt 1 view .LVU3071
 8912              	.LVL522:
 199:sieve_extend.c ****        index_ptr+=step;
 8913              		.loc 1 199 8 view .LVU3072
 8914              	# sieve_extend.c:199:        *index_ptr |= mask;
 199:sieve_extend.c ****        index_ptr+=step;
 8915              		.loc 1 199 19 is_stmt 0 view .LVU3073
 8916 333e 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _1736, index: _329, offset: 0B], mask
 200:sieve_extend.c ****        *index_ptr |= mask;
 8917              		.loc 1 200 8 is_stmt 1 view .LVU3074
 8918              	.LVL523:
 201:sieve_extend.c ****        index_ptr+=step;
 8919              		.loc 1 201 8 view .LVU3075
 8920 3342 4801FE   		add	rsi, rdi	# ivtmp.635, tmp794
 8921              	# sieve_extend.c:201:        *index_ptr |= mask;
 201:sieve_extend.c ****        index_ptr+=step;
 8922              		.loc 1 201 19 is_stmt 0 view .LVU3076
 8923 3345 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_1089, index: _329, step: 4, offset: 0B], mask
 202:sieve_extend.c ****    }
 8924              		.loc 1 202 8 is_stmt 1 view .LVU3077
 8925 3349 4801F8   		add	rax, rdi	# index_ptr, tmp794
 8926              	.LVL524:
 192:sieve_extend.c ****        *index_ptr |= mask;
 8927              		.loc 1 192 10 view .LVU3078
 8928 334c 4939C1   		cmp	r9, rax	# prephitmp_1581, index_ptr
 8929 334f 0F8708FF 		ja	.L708	#,
 8929      FFFF
 8930              		.p2align 4,,10
 8931 3355 0F1F00   		.p2align 3
 8932              	.L707:
GAS LISTING /tmp/cctyCFAS.s 			page 249


 205:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 8933              		.loc 1 205 4 view .LVU3079
 206:sieve_extend.c ****        *index_ptr |= mask;
 8934              		.loc 1 206 4 view .LVU3080
 206:sieve_extend.c ****        *index_ptr |= mask;
 8935              		.loc 1 206 10 view .LVU3081
 8936 3358 4C39C0   		cmp	rax, r8	# index_ptr, range_stop_ptr
 8937 335b 735B     		jnb	.L709	#,
 8938              	.L710:
 207:sieve_extend.c ****        index_ptr+=step;
 8939              		.loc 1 207 8 view .LVU3082
 8940              	# sieve_extend.c:207:        *index_ptr |= mask;
 207:sieve_extend.c ****        index_ptr+=step;
 8941              		.loc 1 207 19 is_stmt 0 view .LVU3083
 8942 335d 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_1090, offset: 0B], mask
 208:sieve_extend.c ****    }
 8943              		.loc 1 208 8 is_stmt 1 view .LVU3084
 8944              	# sieve_extend.c:208:        index_ptr+=step;
 208:sieve_extend.c ****    }
 8945              		.loc 1 208 17 is_stmt 0 view .LVU3085
 8946 3360 4801D0   		add	rax, rdx	# index_ptr, _329
 8947              	.LVL525:
 206:sieve_extend.c ****        *index_ptr |= mask;
 8948              		.loc 1 206 10 is_stmt 1 view .LVU3086
 8949 3363 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 8950 3366 7650     		jbe	.L709	#,
 207:sieve_extend.c ****        index_ptr+=step;
 8951              		.loc 1 207 8 view .LVU3087
 8952              	# sieve_extend.c:207:        *index_ptr |= mask;
 207:sieve_extend.c ****        index_ptr+=step;
 8953              		.loc 1 207 19 is_stmt 0 view .LVU3088
 8954 3368 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_1090, offset: 0B], mask
 208:sieve_extend.c ****    }
 8955              		.loc 1 208 8 is_stmt 1 view .LVU3089
 8956              	# sieve_extend.c:208:        index_ptr+=step;
 208:sieve_extend.c ****    }
 8957              		.loc 1 208 17 is_stmt 0 view .LVU3090
 8958 336b 4801D0   		add	rax, rdx	# index_ptr, _329
 8959              	.LVL526:
 206:sieve_extend.c ****        *index_ptr |= mask;
 8960              		.loc 1 206 10 is_stmt 1 view .LVU3091
 8961 336e 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 8962 3371 7645     		jbe	.L709	#,
 207:sieve_extend.c ****        index_ptr+=step;
 8963              		.loc 1 207 8 view .LVU3092
 8964              	# sieve_extend.c:207:        *index_ptr |= mask;
 207:sieve_extend.c ****        index_ptr+=step;
 8965              		.loc 1 207 19 is_stmt 0 view .LVU3093
 8966 3373 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_1090, offset: 0B], mask
 208:sieve_extend.c ****    }
 8967              		.loc 1 208 8 is_stmt 1 view .LVU3094
 8968              	# sieve_extend.c:208:        index_ptr+=step;
 208:sieve_extend.c ****    }
 8969              		.loc 1 208 17 is_stmt 0 view .LVU3095
 8970 3376 4801D0   		add	rax, rdx	# index_ptr, _329
 8971              	.LVL527:
 206:sieve_extend.c ****        *index_ptr |= mask;
GAS LISTING /tmp/cctyCFAS.s 			page 250


 8972              		.loc 1 206 10 is_stmt 1 view .LVU3096
 8973 3379 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 8974 337c 763A     		jbe	.L709	#,
 207:sieve_extend.c ****        index_ptr+=step;
 8975              		.loc 1 207 8 view .LVU3097
 8976              	# sieve_extend.c:207:        *index_ptr |= mask;
 207:sieve_extend.c ****        index_ptr+=step;
 8977              		.loc 1 207 19 is_stmt 0 view .LVU3098
 8978 337e 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_1090, offset: 0B], mask
 208:sieve_extend.c ****    }
 8979              		.loc 1 208 8 is_stmt 1 view .LVU3099
 8980              	# sieve_extend.c:208:        index_ptr+=step;
 208:sieve_extend.c ****    }
 8981              		.loc 1 208 17 is_stmt 0 view .LVU3100
 8982 3381 4801D0   		add	rax, rdx	# index_ptr, _329
 8983              	.LVL528:
 206:sieve_extend.c ****        *index_ptr |= mask;
 8984              		.loc 1 206 10 is_stmt 1 view .LVU3101
 8985 3384 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 8986 3387 762F     		jbe	.L709	#,
 207:sieve_extend.c ****        index_ptr+=step;
 8987              		.loc 1 207 8 view .LVU3102
 8988              	# sieve_extend.c:207:        *index_ptr |= mask;
 207:sieve_extend.c ****        index_ptr+=step;
 8989              		.loc 1 207 19 is_stmt 0 view .LVU3103
 8990 3389 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_1090, offset: 0B], mask
 208:sieve_extend.c ****    }
 8991              		.loc 1 208 8 is_stmt 1 view .LVU3104
 8992              	# sieve_extend.c:208:        index_ptr+=step;
 208:sieve_extend.c ****    }
 8993              		.loc 1 208 17 is_stmt 0 view .LVU3105
 8994 338c 4801D0   		add	rax, rdx	# index_ptr, _329
 8995              	.LVL529:
 206:sieve_extend.c ****        *index_ptr |= mask;
 8996              		.loc 1 206 10 is_stmt 1 view .LVU3106
 8997 338f 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 8998 3392 7624     		jbe	.L709	#,
 207:sieve_extend.c ****        index_ptr+=step;
 8999              		.loc 1 207 8 view .LVU3107
 9000              	# sieve_extend.c:207:        *index_ptr |= mask;
 207:sieve_extend.c ****        index_ptr+=step;
 9001              		.loc 1 207 19 is_stmt 0 view .LVU3108
 9002 3394 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_1090, offset: 0B], mask
 208:sieve_extend.c ****    }
 9003              		.loc 1 208 8 is_stmt 1 view .LVU3109
 9004              	# sieve_extend.c:208:        index_ptr+=step;
 208:sieve_extend.c ****    }
 9005              		.loc 1 208 17 is_stmt 0 view .LVU3110
 9006 3397 4801D0   		add	rax, rdx	# index_ptr, _329
 9007              	.LVL530:
 206:sieve_extend.c ****        *index_ptr |= mask;
 9008              		.loc 1 206 10 is_stmt 1 view .LVU3111
 9009 339a 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 9010 339d 7619     		jbe	.L709	#,
 207:sieve_extend.c ****        index_ptr+=step;
 9011              		.loc 1 207 8 view .LVU3112
 9012              	# sieve_extend.c:207:        *index_ptr |= mask;
GAS LISTING /tmp/cctyCFAS.s 			page 251


 207:sieve_extend.c ****        index_ptr+=step;
 9013              		.loc 1 207 19 is_stmt 0 view .LVU3113
 9014 339f 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_1090, offset: 0B], mask
 208:sieve_extend.c ****    }
 9015              		.loc 1 208 8 is_stmt 1 view .LVU3114
 9016              	# sieve_extend.c:208:        index_ptr+=step;
 208:sieve_extend.c ****    }
 9017              		.loc 1 208 17 is_stmt 0 view .LVU3115
 9018 33a2 4801D0   		add	rax, rdx	# index_ptr, _329
 9019              	.LVL531:
 206:sieve_extend.c ****        *index_ptr |= mask;
 9020              		.loc 1 206 10 is_stmt 1 view .LVU3116
 9021 33a5 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 9022 33a8 760E     		jbe	.L709	#,
 207:sieve_extend.c ****        index_ptr+=step;
 9023              		.loc 1 207 8 view .LVU3117
 9024              	# sieve_extend.c:207:        *index_ptr |= mask;
 207:sieve_extend.c ****        index_ptr+=step;
 9025              		.loc 1 207 19 is_stmt 0 view .LVU3118
 9026 33aa 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_1090, offset: 0B], mask
 208:sieve_extend.c ****    }
 9027              		.loc 1 208 8 is_stmt 1 view .LVU3119
 9028              	# sieve_extend.c:208:        index_ptr+=step;
 208:sieve_extend.c ****    }
 9029              		.loc 1 208 17 is_stmt 0 view .LVU3120
 9030 33ad 4801D0   		add	rax, rdx	# index_ptr, _329
 9031              	.LVL532:
 206:sieve_extend.c ****        *index_ptr |= mask;
 9032              		.loc 1 206 10 is_stmt 1 view .LVU3121
 9033 33b0 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 9034 33b3 77A8     		ja	.L710	#,
 9035              		.p2align 4,,10
 9036 33b5 0F1F00   		.p2align 3
 9037              	.L709:
 211:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 9038              		.loc 1 211 4 view .LVU3122
 9039              	# sieve_extend.c:211:    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range
 211:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 9040              		.loc 1 211 7 is_stmt 0 view .LVU3123
 9041 33b8 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 9042 33bb 7413     		je	.L1582	#,
 9043              	.LVL533:
 9044              	.L711:
 211:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 9045              		.loc 1 211 7 view .LVU3124
 9046              	.LBE471:
 9047              	.LBE474:
 9048              	.LBE477:
 389:sieve_extend.c ****         register bitword_t mask = markmask(index);
 9049              		.loc 1 389 78 is_stmt 1 view .LVU3125
 9050              	# sieve_extend.c:389:     for (register counter_t index = range_start; index <= range_stop_unique; 
 389:sieve_extend.c ****         register bitword_t mask = markmask(index);
 9051              		.loc 1 389 84 is_stmt 0 view .LVU3126
 9052 33bd 4C01E3   		add	rbx, r12	# index, step
 9053              	.LVL534:
 389:sieve_extend.c ****         register bitword_t mask = markmask(index);
 9054              		.loc 1 389 50 is_stmt 1 view .LVU3127
GAS LISTING /tmp/cctyCFAS.s 			page 252


 9055              	# sieve_extend.c:389:     for (register counter_t index = range_start; index <= range_stop_unique; 
 389:sieve_extend.c ****         register bitword_t mask = markmask(index);
 9056              		.loc 1 389 5 is_stmt 0 view .LVU3128
 9057 33c0 4C39EB   		cmp	rbx, r13	# index, tmp728
 9058 33c3 0F8677FE 		jbe	.L712	#,
 9058      FFFF
 9059 33c9 E97EF9FF 		jmp	.L1564	#
 9059      FF
 9060              	.LVL535:
 9061 33ce 6690     		.p2align 4,,10
 9062              		.p2align 3
 9063              	.L1582:
 9064              	.LBB478:
 9065              	.LBB475:
 9066              	.LBB472:
 212:sieve_extend.c ****    }
 9067              		.loc 1 212 7 is_stmt 1 view .LVU3129
 9068              	# sieve_extend.c:212:       *index_ptr |= (mask & chopmask(range_stop));
 212:sieve_extend.c ****    }
 9069              		.loc 1 212 27 is_stmt 0 view .LVU3130
 9070 33d0 4C21D9   		and	rcx, r11	# tmp799, _361
 9071              	.LVL536:
 9072              	# sieve_extend.c:212:       *index_ptr |= (mask & chopmask(range_stop));
 212:sieve_extend.c ****    }
 9073              		.loc 1 212 18 view .LVU3131
 9074 33d3 490908   		or	QWORD PTR [r8], rcx	# *index_ptr_1087, tmp799
 9075 33d6 EBE5     		jmp	.L711	#
 9076              	.LVL537:
 9077 33d8 0F1F8400 		.p2align 4,,10
 9077      00000000 
 9078              		.p2align 3
 9079              	.L1577:
 212:sieve_extend.c ****    }
 9080              		.loc 1 212 18 view .LVU3132
 9081              	.LBE472:
 9082              	.LBE475:
 9083              	.LBE478:
 9084              	.LBE480:
 9085              	.LBE482:
 9086              	.LBE508:
 961:sieve_extend.c ****         else if (step < WORD_SIZE_counter * 4) setBitsTrue_largeRange_vector(bitarray, start, step,
 9087              		.loc 1 961 48 is_stmt 1 view .LVU3133
 9088              	.LBB509:
 9089              	.LBI509:
 284:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 9090              		.loc 1 284 20 view .LVU3134
 9091              	.LBB510:
 285:sieve_extend.c **** 
 9092              		.loc 1 285 5 view .LVU3135
 287:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-unique (%ju
 9093              		.loc 1 287 5 view .LVU3136
 9094              	# sieve_extend.c:287:     if (range_stop_unique > range_stop) { // the range will not repeat itself
 287:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-unique (%ju
 9095              		.loc 1 287 8 is_stmt 0 view .LVU3137
 9096 33e0 488B4C24 		mov	rcx, QWORD PTR 56[rsp]	# tmp728, %sfp
 9096      38
 9097 33e5 48394C24 		cmp	QWORD PTR 112[rsp], rcx	# %sfp, tmp728
GAS LISTING /tmp/cctyCFAS.s 			page 253


 9097      70
 9098 33ea 0F82C002 		jb	.L684	#,
 9098      0000
 9099              	.LVL538:
 9100              	.LBB511:
 303:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 9101              		.loc 1 303 54 is_stmt 1 view .LVU3138
 9102              	# sieve_extend.c:303:         for (register counter_t index = range_start; index <= range_stop_uniq
 303:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 9103              		.loc 1 303 9 is_stmt 0 view .LVU3139
 9104 33f0 4885D2   		test	rdx, rdx	# _203
 9105 33f3 0F8558F9 		jne	.L678	#,
 9105      FFFF
 9106              	.LBB512:
 9107              	.LBB513:
 9108              	.LBB514:
 9109              	# sieve_extend.c:186:    const counter_t range_stop_word = wordindex(range_stop);
 186:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 9110              		.loc 1 186 20 view .LVU3140
 9111 33f9 488B5424 		mov	rdx, QWORD PTR 112[rsp]	# _66, %sfp
 9111      70
 9112              	# sieve_extend.c:188:    register bitword_t* __restrict fast_loop_ptr  = &bitarray[((range_stop_wor
 188:sieve_extend.c **** 
 9113              		.loc 1 188 84 view .LVU3141
 9114 33fe 4B8D3CA4 		lea	rdi, [r12+r12*4]	# tmp736,
 9115              	# sieve_extend.c:186:    const counter_t range_stop_word = wordindex(range_stop);
 186:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 9116              		.loc 1 186 20 view .LVU3142
 9117 3402 4989D2   		mov	r10, rdx	# range_stop_word, _66
 9118 3405 49C1EA06 		shr	r10, 6	# range_stop_word,
 9119              	# sieve_extend.c:188:    register bitword_t* __restrict fast_loop_ptr  = &bitarray[((range_stop_wor
 188:sieve_extend.c **** 
 9120              		.loc 1 188 107 view .LVU3143
 9121 3409 4C89D0   		mov	rax, r10	# tmp742, range_stop_word
 9122              	# sieve_extend.c:212:       *index_ptr |= (mask & chopmask(range_stop));
 212:sieve_extend.c ****    }
 9123              		.loc 1 212 29 view .LVU3144
 9124 340c 4189D1   		mov	r9d, edx	# tmp738, _66
 9125              	# sieve_extend.c:188:    register bitword_t* __restrict fast_loop_ptr  = &bitarray[((range_stop_wor
 188:sieve_extend.c **** 
 9126              		.loc 1 188 107 view .LVU3145
 9127 340f 4829F8   		sub	rax, rdi	# tmp742, tmp736
 9128              	# sieve_extend.c:212:       *index_ptr |= (mask & chopmask(range_stop));
 212:sieve_extend.c ****    }
 9129              		.loc 1 212 29 view .LVU3146
 9130 3412 41F7D1   		not	r9d	# tmp738
 9131 3415 48C7C6FF 		mov	rsi, -1	# tmp2161,
 9131      FFFFFF
 9132 341c 4939FA   		cmp	r10, rdi	# range_stop_word, tmp736
 9133 341f 4C896C24 		mov	QWORD PTR 32[rsp], r13	# %sfp, index
 9133      20
 9134              	# sieve_extend.c:205:    const register bitword_t* __restrict range_stop_ptr = &bitarray[(range_sto
 205:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 9135              		.loc 1 205 41 view .LVU3147
 9136 3424 4F8D04D6 		lea	r8, [r14+r10*8]	# range_stop_ptr,
 9137              	# sieve_extend.c:212:       *index_ptr |= (mask & chopmask(range_stop));
 212:sieve_extend.c ****    }
GAS LISTING /tmp/cctyCFAS.s 			page 254


 9138              		.loc 1 212 29 view .LVU3148
 9139 3428 C462B3F7 		shrx	r11, rsi, r9	# _234, tmp2161, tmp738
 9139      DE
 9140 342d 4D89E2   		mov	r10, r12	# _1778, step
 9141 3430 4D8D0CC6 		lea	r9, [r14+rax*8]	# tmp744,
 9142 3434 4C8B6C24 		mov	r13, QWORD PTR 56[rsp]	# tmp728, %sfp
 9142      38
 9143 3439 4D0F46CE 		cmovbe	r9, r14	# _94,, prephitmp_1617
 9144              	# sieve_extend.c:194:        index_ptr+=step;
 194:sieve_extend.c ****        *index_ptr |= mask;
 9145              		.loc 1 194 17 view .LVU3149
 9146 343d 4A8D0CE5 		lea	rcx, 0[0+r12*8]	# _202,
 9146      00000000 
 9147 3445 48C1E703 		sal	rdi, 3	# tmp748,
 9148 3449 49C1E204 		sal	r10, 4	# _1778,
 9149              	.LVL539:
 9150 344d 0F1F00   		.p2align 4,,10
 9151              		.p2align 3
 9152              	.L695:
 194:sieve_extend.c ****        *index_ptr |= mask;
 9153              		.loc 1 194 17 view .LVU3150
 9154              	.LBE514:
 9155              	.LBE513:
 304:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 9156              		.loc 1 304 13 is_stmt 1 view .LVU3151
 9157              	# sieve_extend.c:304:             register counter_t index_word = wordindex(index);
 304:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 9158              		.loc 1 304 32 is_stmt 0 view .LVU3152
 9159 3450 4889D8   		mov	rax, rbx	# index_word, index
 9160 3453 48C1E806 		shr	rax, 6	# index_word,
 9161              	.LVL540:
 305:sieve_extend.c ****             do {
 9162              		.loc 1 305 13 is_stmt 1 view .LVU3153
 9163              	# sieve_extend.c:305:             register bitword_t mask = SAFE_ZERO;
 305:sieve_extend.c ****             do {
 9164              		.loc 1 305 32 is_stmt 0 view .LVU3154
 9165 3457 31D2     		xor	edx, edx	# mask
 9166              	.LVL541:
 9167              	.L689:
 306:sieve_extend.c ****                 mask |= markmask(index);
 9168              		.loc 1 306 13 is_stmt 1 view .LVU3155
 307:sieve_extend.c ****                 index += step;
 9169              		.loc 1 307 17 view .LVU3156
 9170              	# sieve_extend.c:307:                 mask |= markmask(index);
 307:sieve_extend.c ****                 index += step;
 9171              		.loc 1 307 25 is_stmt 0 view .LVU3157
 9172 3459 C4C2E1F7 		shlx	rsi, r15, rbx	# tmp750, tmp1047, index
 9172      F7
 9173              	# sieve_extend.c:308:                 index += step;
 308:sieve_extend.c ****             } while (index_word == wordindex(index));
 9174              		.loc 1 308 23 view .LVU3158
 9175 345e 4C01E3   		add	rbx, r12	# index, step
 9176              	.LVL542:
 9177              	# sieve_extend.c:307:                 mask |= markmask(index);
 307:sieve_extend.c ****                 index += step;
 9178              		.loc 1 307 22 view .LVU3159
 9179 3461 4809F2   		or	rdx, rsi	# mask, tmp750
GAS LISTING /tmp/cctyCFAS.s 			page 255


 9180              	.LVL543:
 308:sieve_extend.c ****             } while (index_word == wordindex(index));
 9181              		.loc 1 308 17 is_stmt 1 view .LVU3160
 309:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 9182              		.loc 1 309 21 view .LVU3161
 9183              	# sieve_extend.c:309:             } while (index_word == wordindex(index));
 309:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 9184              		.loc 1 309 36 is_stmt 0 view .LVU3162
 9185 3464 4889DE   		mov	rsi, rbx	# tmp752, index
 9186 3467 48C1EE06 		shr	rsi, 6	# tmp752,
 9187              	# sieve_extend.c:309:             } while (index_word == wordindex(index));
 309:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 9188              		.loc 1 309 13 view .LVU3163
 9189 346b 4839F0   		cmp	rax, rsi	# index_word, tmp752
 9190 346e 0F85AC00 		jne	.L1368	#,
 9190      0000
 306:sieve_extend.c ****                 mask |= markmask(index);
 9191              		.loc 1 306 13 is_stmt 1 view .LVU3164
 307:sieve_extend.c ****                 index += step;
 9192              		.loc 1 307 17 view .LVU3165
 9193              	# sieve_extend.c:307:                 mask |= markmask(index);
 307:sieve_extend.c ****                 index += step;
 9194              		.loc 1 307 25 is_stmt 0 view .LVU3166
 9195 3474 C4C2E1F7 		shlx	rsi, r15, rbx	# tmp1613, tmp1047, index
 9195      F7
 9196              	# sieve_extend.c:308:                 index += step;
 308:sieve_extend.c ****             } while (index_word == wordindex(index));
 9197              		.loc 1 308 23 view .LVU3167
 9198 3479 4C01E3   		add	rbx, r12	# index, step
 9199              	.LVL544:
 9200              	# sieve_extend.c:307:                 mask |= markmask(index);
 307:sieve_extend.c ****                 index += step;
 9201              		.loc 1 307 22 view .LVU3168
 9202 347c 4809F2   		or	rdx, rsi	# mask, tmp1613
 9203              	.LVL545:
 308:sieve_extend.c ****             } while (index_word == wordindex(index));
 9204              		.loc 1 308 17 is_stmt 1 view .LVU3169
 309:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 9205              		.loc 1 309 21 view .LVU3170
 9206              	# sieve_extend.c:309:             } while (index_word == wordindex(index));
 309:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 9207              		.loc 1 309 36 is_stmt 0 view .LVU3171
 9208 347f 4889DE   		mov	rsi, rbx	# tmp1614, index
 9209 3482 48C1EE06 		shr	rsi, 6	# tmp1614,
 9210              	# sieve_extend.c:309:             } while (index_word == wordindex(index));
 309:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 9211              		.loc 1 309 13 view .LVU3172
 9212 3486 4839F0   		cmp	rax, rsi	# index_word, tmp1614
 9213 3489 0F859100 		jne	.L1368	#,
 9213      0000
 306:sieve_extend.c ****                 mask |= markmask(index);
 9214              		.loc 1 306 13 is_stmt 1 view .LVU3173
 307:sieve_extend.c ****                 index += step;
 9215              		.loc 1 307 17 view .LVU3174
 9216              	# sieve_extend.c:307:                 mask |= markmask(index);
 307:sieve_extend.c ****                 index += step;
 9217              		.loc 1 307 25 is_stmt 0 view .LVU3175
GAS LISTING /tmp/cctyCFAS.s 			page 256


 9218 348f C4C2E1F7 		shlx	rsi, r15, rbx	# tmp1615, tmp1047, index
 9218      F7
 9219              	# sieve_extend.c:308:                 index += step;
 308:sieve_extend.c ****             } while (index_word == wordindex(index));
 9220              		.loc 1 308 23 view .LVU3176
 9221 3494 4C01E3   		add	rbx, r12	# index, step
 9222              	.LVL546:
 9223              	# sieve_extend.c:307:                 mask |= markmask(index);
 307:sieve_extend.c ****                 index += step;
 9224              		.loc 1 307 22 view .LVU3177
 9225 3497 4809F2   		or	rdx, rsi	# mask, tmp1615
 9226              	.LVL547:
 308:sieve_extend.c ****             } while (index_word == wordindex(index));
 9227              		.loc 1 308 17 is_stmt 1 view .LVU3178
 309:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 9228              		.loc 1 309 21 view .LVU3179
 9229              	# sieve_extend.c:309:             } while (index_word == wordindex(index));
 309:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 9230              		.loc 1 309 36 is_stmt 0 view .LVU3180
 9231 349a 4889DE   		mov	rsi, rbx	# tmp1616, index
 9232 349d 48C1EE06 		shr	rsi, 6	# tmp1616,
 9233              	# sieve_extend.c:309:             } while (index_word == wordindex(index));
 309:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 9234              		.loc 1 309 13 view .LVU3181
 9235 34a1 4839F0   		cmp	rax, rsi	# index_word, tmp1616
 9236 34a4 757A     		jne	.L1368	#,
 306:sieve_extend.c ****                 mask |= markmask(index);
 9237              		.loc 1 306 13 is_stmt 1 view .LVU3182
 307:sieve_extend.c ****                 index += step;
 9238              		.loc 1 307 17 view .LVU3183
 9239              	# sieve_extend.c:307:                 mask |= markmask(index);
 307:sieve_extend.c ****                 index += step;
 9240              		.loc 1 307 25 is_stmt 0 view .LVU3184
 9241 34a6 C4C2E1F7 		shlx	rsi, r15, rbx	# tmp1617, tmp1047, index
 9241      F7
 9242              	# sieve_extend.c:308:                 index += step;
 308:sieve_extend.c ****             } while (index_word == wordindex(index));
 9243              		.loc 1 308 23 view .LVU3185
 9244 34ab 4C01E3   		add	rbx, r12	# index, step
 9245              	.LVL548:
 9246              	# sieve_extend.c:307:                 mask |= markmask(index);
 307:sieve_extend.c ****                 index += step;
 9247              		.loc 1 307 22 view .LVU3186
 9248 34ae 4809F2   		or	rdx, rsi	# mask, tmp1617
 9249              	.LVL549:
 308:sieve_extend.c ****             } while (index_word == wordindex(index));
 9250              		.loc 1 308 17 is_stmt 1 view .LVU3187
 309:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 9251              		.loc 1 309 21 view .LVU3188
 9252              	# sieve_extend.c:309:             } while (index_word == wordindex(index));
 309:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 9253              		.loc 1 309 36 is_stmt 0 view .LVU3189
 9254 34b1 4889DE   		mov	rsi, rbx	# tmp1618, index
 9255 34b4 48C1EE06 		shr	rsi, 6	# tmp1618,
 9256              	# sieve_extend.c:309:             } while (index_word == wordindex(index));
 309:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 9257              		.loc 1 309 13 view .LVU3190
GAS LISTING /tmp/cctyCFAS.s 			page 257


 9258 34b8 4839F0   		cmp	rax, rsi	# index_word, tmp1618
 9259 34bb 7563     		jne	.L1368	#,
 306:sieve_extend.c ****                 mask |= markmask(index);
 9260              		.loc 1 306 13 is_stmt 1 view .LVU3191
 307:sieve_extend.c ****                 index += step;
 9261              		.loc 1 307 17 view .LVU3192
 9262              	# sieve_extend.c:307:                 mask |= markmask(index);
 307:sieve_extend.c ****                 index += step;
 9263              		.loc 1 307 25 is_stmt 0 view .LVU3193
 9264 34bd C4C2E1F7 		shlx	rsi, r15, rbx	# tmp1619, tmp1047, index
 9264      F7
 9265              	# sieve_extend.c:308:                 index += step;
 308:sieve_extend.c ****             } while (index_word == wordindex(index));
 9266              		.loc 1 308 23 view .LVU3194
 9267 34c2 4C01E3   		add	rbx, r12	# index, step
 9268              	.LVL550:
 9269              	# sieve_extend.c:307:                 mask |= markmask(index);
 307:sieve_extend.c ****                 index += step;
 9270              		.loc 1 307 22 view .LVU3195
 9271 34c5 4809F2   		or	rdx, rsi	# mask, tmp1619
 9272              	.LVL551:
 308:sieve_extend.c ****             } while (index_word == wordindex(index));
 9273              		.loc 1 308 17 is_stmt 1 view .LVU3196
 309:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 9274              		.loc 1 309 21 view .LVU3197
 9275              	# sieve_extend.c:309:             } while (index_word == wordindex(index));
 309:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 9276              		.loc 1 309 36 is_stmt 0 view .LVU3198
 9277 34c8 4889DE   		mov	rsi, rbx	# tmp1620, index
 9278 34cb 48C1EE06 		shr	rsi, 6	# tmp1620,
 9279              	# sieve_extend.c:309:             } while (index_word == wordindex(index));
 309:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 9280              		.loc 1 309 13 view .LVU3199
 9281 34cf 4839F0   		cmp	rax, rsi	# index_word, tmp1620
 9282 34d2 754C     		jne	.L1368	#,
 306:sieve_extend.c ****                 mask |= markmask(index);
 9283              		.loc 1 306 13 is_stmt 1 view .LVU3200
 307:sieve_extend.c ****                 index += step;
 9284              		.loc 1 307 17 view .LVU3201
 9285              	# sieve_extend.c:307:                 mask |= markmask(index);
 307:sieve_extend.c ****                 index += step;
 9286              		.loc 1 307 25 is_stmt 0 view .LVU3202
 9287 34d4 C4C2E1F7 		shlx	rsi, r15, rbx	# tmp1621, tmp1047, index
 9287      F7
 9288              	# sieve_extend.c:308:                 index += step;
 308:sieve_extend.c ****             } while (index_word == wordindex(index));
 9289              		.loc 1 308 23 view .LVU3203
 9290 34d9 4C01E3   		add	rbx, r12	# index, step
 9291              	.LVL552:
 9292              	# sieve_extend.c:307:                 mask |= markmask(index);
 307:sieve_extend.c ****                 index += step;
 9293              		.loc 1 307 22 view .LVU3204
 9294 34dc 4809F2   		or	rdx, rsi	# mask, tmp1621
 9295              	.LVL553:
 308:sieve_extend.c ****             } while (index_word == wordindex(index));
 9296              		.loc 1 308 17 is_stmt 1 view .LVU3205
 309:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
GAS LISTING /tmp/cctyCFAS.s 			page 258


 9297              		.loc 1 309 21 view .LVU3206
 9298              	# sieve_extend.c:309:             } while (index_word == wordindex(index));
 309:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 9299              		.loc 1 309 36 is_stmt 0 view .LVU3207
 9300 34df 4889DE   		mov	rsi, rbx	# tmp1622, index
 9301 34e2 48C1EE06 		shr	rsi, 6	# tmp1622,
 9302              	# sieve_extend.c:309:             } while (index_word == wordindex(index));
 309:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 9303              		.loc 1 309 13 view .LVU3208
 9304 34e6 4839F0   		cmp	rax, rsi	# index_word, tmp1622
 9305 34e9 7535     		jne	.L1368	#,
 306:sieve_extend.c ****                 mask |= markmask(index);
 9306              		.loc 1 306 13 is_stmt 1 view .LVU3209
 307:sieve_extend.c ****                 index += step;
 9307              		.loc 1 307 17 view .LVU3210
 9308              	# sieve_extend.c:307:                 mask |= markmask(index);
 307:sieve_extend.c ****                 index += step;
 9309              		.loc 1 307 25 is_stmt 0 view .LVU3211
 9310 34eb C4C2E1F7 		shlx	rsi, r15, rbx	# tmp1623, tmp1047, index
 9310      F7
 9311              	# sieve_extend.c:308:                 index += step;
 308:sieve_extend.c ****             } while (index_word == wordindex(index));
 9312              		.loc 1 308 23 view .LVU3212
 9313 34f0 4C01E3   		add	rbx, r12	# index, step
 9314              	.LVL554:
 9315              	# sieve_extend.c:307:                 mask |= markmask(index);
 307:sieve_extend.c ****                 index += step;
 9316              		.loc 1 307 22 view .LVU3213
 9317 34f3 4809F2   		or	rdx, rsi	# mask, tmp1623
 9318              	.LVL555:
 308:sieve_extend.c ****             } while (index_word == wordindex(index));
 9319              		.loc 1 308 17 is_stmt 1 view .LVU3214
 309:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 9320              		.loc 1 309 21 view .LVU3215
 9321              	# sieve_extend.c:309:             } while (index_word == wordindex(index));
 309:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 9322              		.loc 1 309 36 is_stmt 0 view .LVU3216
 9323 34f6 4889DE   		mov	rsi, rbx	# tmp1624, index
 9324 34f9 48C1EE06 		shr	rsi, 6	# tmp1624,
 9325              	# sieve_extend.c:309:             } while (index_word == wordindex(index));
 309:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 9326              		.loc 1 309 13 view .LVU3217
 9327 34fd 4839F0   		cmp	rax, rsi	# index_word, tmp1624
 9328 3500 751E     		jne	.L1368	#,
 306:sieve_extend.c ****                 mask |= markmask(index);
 9329              		.loc 1 306 13 is_stmt 1 view .LVU3218
 307:sieve_extend.c ****                 index += step;
 9330              		.loc 1 307 17 view .LVU3219
 9331              	# sieve_extend.c:307:                 mask |= markmask(index);
 307:sieve_extend.c ****                 index += step;
 9332              		.loc 1 307 25 is_stmt 0 view .LVU3220
 9333 3502 C4C2E1F7 		shlx	rsi, r15, rbx	# tmp1625, tmp1047, index
 9333      F7
 9334              	# sieve_extend.c:308:                 index += step;
 308:sieve_extend.c ****             } while (index_word == wordindex(index));
 9335              		.loc 1 308 23 view .LVU3221
 9336 3507 4C01E3   		add	rbx, r12	# index, step
GAS LISTING /tmp/cctyCFAS.s 			page 259


 9337              	.LVL556:
 9338              	# sieve_extend.c:307:                 mask |= markmask(index);
 307:sieve_extend.c ****                 index += step;
 9339              		.loc 1 307 22 view .LVU3222
 9340 350a 4809F2   		or	rdx, rsi	# mask, tmp1625
 9341              	.LVL557:
 308:sieve_extend.c ****             } while (index_word == wordindex(index));
 9342              		.loc 1 308 17 is_stmt 1 view .LVU3223
 309:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 9343              		.loc 1 309 21 view .LVU3224
 9344              	# sieve_extend.c:309:             } while (index_word == wordindex(index));
 309:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 9345              		.loc 1 309 36 is_stmt 0 view .LVU3225
 9346 350d 4889DE   		mov	rsi, rbx	# tmp1626, index
 9347 3510 48C1EE06 		shr	rsi, 6	# tmp1626,
 9348              	# sieve_extend.c:309:             } while (index_word == wordindex(index));
 309:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 9349              		.loc 1 309 13 view .LVU3226
 9350 3514 4839F0   		cmp	rax, rsi	# index_word, tmp1626
 9351 3517 0F843CFF 		je	.L689	#,
 9351      FFFF
 9352 351d 0F1F00   		.p2align 4,,10
 9353              		.p2align 3
 9354              	.L1368:
 310:sieve_extend.c ****         }
 9355              		.loc 1 310 13 is_stmt 1 view .LVU3227
 9356              	.LVL558:
 9357              	.LBB517:
 9358              	.LBI513:
 154:sieve_extend.c **** // #if __APPLE__
 9359              		.loc 1 154 20 view .LVU3228
 9360              	.LBB515:
 186:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 9361              		.loc 1 186 4 view .LVU3229
 187:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  = &bitarray[((range_stop_word>step*5) ? (range_sto
 9362              		.loc 1 187 4 view .LVU3230
 9363              	# sieve_extend.c:187:    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(
 187:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  = &bitarray[((range_stop_word>step*5) ? (range_sto
 9364              		.loc 1 187 78 is_stmt 0 view .LVU3231
 9365 3520 498D04C6 		lea	rax, [r14+rax*8]	# index_ptr,
 9366              	.LVL559:
 188:sieve_extend.c **** 
 9367              		.loc 1 188 4 is_stmt 1 view .LVU3232
 192:sieve_extend.c ****        *index_ptr |= mask;
 9368              		.loc 1 192 4 view .LVU3233
 192:sieve_extend.c ****        *index_ptr |= mask;
 9369              		.loc 1 192 10 view .LVU3234
 9370 3524 4C39C8   		cmp	rax, r9	# index_ptr, prephitmp_1617
 9371 3527 0F830301 		jnb	.L690	#,
 9371      0000
 192:sieve_extend.c ****        *index_ptr |= mask;
 9372              		.loc 1 192 10 is_stmt 0 view .LVU3235
 9373 352d 4A8D3410 		lea	rsi, [rax+r10]	# ivtmp.600,
 9374              	.L691:
 193:sieve_extend.c ****        index_ptr+=step;
 9375              		.loc 1 193 8 is_stmt 1 view .LVU3236
 9376              	# sieve_extend.c:193:        *index_ptr |= mask;
GAS LISTING /tmp/cctyCFAS.s 			page 260


 193:sieve_extend.c ****        index_ptr+=step;
 9377              		.loc 1 193 19 is_stmt 0 view .LVU3237
 9378 3531 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_1143, offset: 0B], mask
 194:sieve_extend.c ****        *index_ptr |= mask;
 9379              		.loc 1 194 8 is_stmt 1 view .LVU3238
 9380              	.LVL560:
 195:sieve_extend.c ****        index_ptr+=step;
 9381              		.loc 1 195 8 view .LVU3239
 9382              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 9383              		.loc 1 195 19 is_stmt 0 view .LVU3240
 9384 3534 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_1143, index: _202, offset: 0B], mask
 196:sieve_extend.c ****        *index_ptr |= mask;
 9385              		.loc 1 196 8 is_stmt 1 view .LVU3241
 9386              	.LVL561:
 197:sieve_extend.c ****        index_ptr+=step;
 9387              		.loc 1 197 8 view .LVU3242
 9388              	# sieve_extend.c:197:        *index_ptr |= mask;
 197:sieve_extend.c ****        index_ptr+=step;
 9389              		.loc 1 197 19 is_stmt 0 view .LVU3243
 9390 3538 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1772, offset: 0B], mask
 198:sieve_extend.c ****        *index_ptr |= mask;
 9391              		.loc 1 198 8 is_stmt 1 view .LVU3244
 9392              	.LVL562:
 199:sieve_extend.c ****        index_ptr+=step;
 9393              		.loc 1 199 8 view .LVU3245
 9394              	# sieve_extend.c:199:        *index_ptr |= mask;
 199:sieve_extend.c ****        index_ptr+=step;
 9395              		.loc 1 199 19 is_stmt 0 view .LVU3246
 9396 353b 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1772, index: _202, offset: 0B], mask
 200:sieve_extend.c ****        *index_ptr |= mask;
 9397              		.loc 1 200 8 is_stmt 1 view .LVU3247
 9398              	.LVL563:
 201:sieve_extend.c ****        index_ptr+=step;
 9399              		.loc 1 201 8 view .LVU3248
 9400 353f 4801FE   		add	rsi, rdi	# ivtmp.600, tmp748
 9401              	# sieve_extend.c:201:        *index_ptr |= mask;
 201:sieve_extend.c ****        index_ptr+=step;
 9402              		.loc 1 201 19 is_stmt 0 view .LVU3249
 9403 3542 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_1143, index: _202, step: 4, offset: 0B], mask
 202:sieve_extend.c ****    }
 9404              		.loc 1 202 8 is_stmt 1 view .LVU3250
 9405 3546 4801F8   		add	rax, rdi	# index_ptr, tmp748
 9406              	.LVL564:
 192:sieve_extend.c ****        *index_ptr |= mask;
 9407              		.loc 1 192 10 view .LVU3251
 9408 3549 4939C1   		cmp	r9, rax	# prephitmp_1617, index_ptr
 9409 354c 0F86DE00 		jbe	.L690	#,
 9409      0000
 193:sieve_extend.c ****        index_ptr+=step;
 9410              		.loc 1 193 8 view .LVU3252
 9411              	# sieve_extend.c:193:        *index_ptr |= mask;
 193:sieve_extend.c ****        index_ptr+=step;
 9412              		.loc 1 193 19 is_stmt 0 view .LVU3253
 9413 3552 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_1143, offset: 0B], mask
 194:sieve_extend.c ****        *index_ptr |= mask;
 9414              		.loc 1 194 8 is_stmt 1 view .LVU3254
GAS LISTING /tmp/cctyCFAS.s 			page 261


 9415              	.LVL565:
 195:sieve_extend.c ****        index_ptr+=step;
 9416              		.loc 1 195 8 view .LVU3255
 9417              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 9418              		.loc 1 195 19 is_stmt 0 view .LVU3256
 9419 3555 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_1143, index: _202, offset: 0B], mask
 196:sieve_extend.c ****        *index_ptr |= mask;
 9420              		.loc 1 196 8 is_stmt 1 view .LVU3257
 9421              	.LVL566:
 197:sieve_extend.c ****        index_ptr+=step;
 9422              		.loc 1 197 8 view .LVU3258
 9423              	# sieve_extend.c:197:        *index_ptr |= mask;
 197:sieve_extend.c ****        index_ptr+=step;
 9424              		.loc 1 197 19 is_stmt 0 view .LVU3259
 9425 3559 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1772, offset: 0B], mask
 198:sieve_extend.c ****        *index_ptr |= mask;
 9426              		.loc 1 198 8 is_stmt 1 view .LVU3260
 9427              	.LVL567:
 199:sieve_extend.c ****        index_ptr+=step;
 9428              		.loc 1 199 8 view .LVU3261
 9429              	# sieve_extend.c:199:        *index_ptr |= mask;
 199:sieve_extend.c ****        index_ptr+=step;
 9430              		.loc 1 199 19 is_stmt 0 view .LVU3262
 9431 355c 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1772, index: _202, offset: 0B], mask
 200:sieve_extend.c ****        *index_ptr |= mask;
 9432              		.loc 1 200 8 is_stmt 1 view .LVU3263
 9433              	.LVL568:
 201:sieve_extend.c ****        index_ptr+=step;
 9434              		.loc 1 201 8 view .LVU3264
 9435 3560 4801FE   		add	rsi, rdi	# ivtmp.600, tmp748
 9436              	# sieve_extend.c:201:        *index_ptr |= mask;
 201:sieve_extend.c ****        index_ptr+=step;
 9437              		.loc 1 201 19 is_stmt 0 view .LVU3265
 9438 3563 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_1143, index: _202, step: 4, offset: 0B], mask
 202:sieve_extend.c ****    }
 9439              		.loc 1 202 8 is_stmt 1 view .LVU3266
 9440 3567 4801F8   		add	rax, rdi	# index_ptr, tmp748
 9441              	.LVL569:
 192:sieve_extend.c ****        *index_ptr |= mask;
 9442              		.loc 1 192 10 view .LVU3267
 9443 356a 4939C1   		cmp	r9, rax	# prephitmp_1617, index_ptr
 9444 356d 0F86BD00 		jbe	.L690	#,
 9444      0000
 193:sieve_extend.c ****        index_ptr+=step;
 9445              		.loc 1 193 8 view .LVU3268
 9446              	# sieve_extend.c:193:        *index_ptr |= mask;
 193:sieve_extend.c ****        index_ptr+=step;
 9447              		.loc 1 193 19 is_stmt 0 view .LVU3269
 9448 3573 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_1143, offset: 0B], mask
 194:sieve_extend.c ****        *index_ptr |= mask;
 9449              		.loc 1 194 8 is_stmt 1 view .LVU3270
 9450              	.LVL570:
 195:sieve_extend.c ****        index_ptr+=step;
 9451              		.loc 1 195 8 view .LVU3271
 9452              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/cctyCFAS.s 			page 262


 9453              		.loc 1 195 19 is_stmt 0 view .LVU3272
 9454 3576 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_1143, index: _202, offset: 0B], mask
 196:sieve_extend.c ****        *index_ptr |= mask;
 9455              		.loc 1 196 8 is_stmt 1 view .LVU3273
 9456              	.LVL571:
 197:sieve_extend.c ****        index_ptr+=step;
 9457              		.loc 1 197 8 view .LVU3274
 9458              	# sieve_extend.c:197:        *index_ptr |= mask;
 197:sieve_extend.c ****        index_ptr+=step;
 9459              		.loc 1 197 19 is_stmt 0 view .LVU3275
 9460 357a 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1772, offset: 0B], mask
 198:sieve_extend.c ****        *index_ptr |= mask;
 9461              		.loc 1 198 8 is_stmt 1 view .LVU3276
 9462              	.LVL572:
 199:sieve_extend.c ****        index_ptr+=step;
 9463              		.loc 1 199 8 view .LVU3277
 9464              	# sieve_extend.c:199:        *index_ptr |= mask;
 199:sieve_extend.c ****        index_ptr+=step;
 9465              		.loc 1 199 19 is_stmt 0 view .LVU3278
 9466 357d 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1772, index: _202, offset: 0B], mask
 200:sieve_extend.c ****        *index_ptr |= mask;
 9467              		.loc 1 200 8 is_stmt 1 view .LVU3279
 9468              	.LVL573:
 201:sieve_extend.c ****        index_ptr+=step;
 9469              		.loc 1 201 8 view .LVU3280
 9470 3581 4801FE   		add	rsi, rdi	# ivtmp.600, tmp748
 9471              	# sieve_extend.c:201:        *index_ptr |= mask;
 201:sieve_extend.c ****        index_ptr+=step;
 9472              		.loc 1 201 19 is_stmt 0 view .LVU3281
 9473 3584 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_1143, index: _202, step: 4, offset: 0B], mask
 202:sieve_extend.c ****    }
 9474              		.loc 1 202 8 is_stmt 1 view .LVU3282
 9475 3588 4801F8   		add	rax, rdi	# index_ptr, tmp748
 9476              	.LVL574:
 192:sieve_extend.c ****        *index_ptr |= mask;
 9477              		.loc 1 192 10 view .LVU3283
 9478 358b 4939C1   		cmp	r9, rax	# prephitmp_1617, index_ptr
 9479 358e 0F869C00 		jbe	.L690	#,
 9479      0000
 193:sieve_extend.c ****        index_ptr+=step;
 9480              		.loc 1 193 8 view .LVU3284
 9481              	# sieve_extend.c:193:        *index_ptr |= mask;
 193:sieve_extend.c ****        index_ptr+=step;
 9482              		.loc 1 193 19 is_stmt 0 view .LVU3285
 9483 3594 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_1143, offset: 0B], mask
 194:sieve_extend.c ****        *index_ptr |= mask;
 9484              		.loc 1 194 8 is_stmt 1 view .LVU3286
 9485              	.LVL575:
 195:sieve_extend.c ****        index_ptr+=step;
 9486              		.loc 1 195 8 view .LVU3287
 9487              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 9488              		.loc 1 195 19 is_stmt 0 view .LVU3288
 9489 3597 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_1143, index: _202, offset: 0B], mask
 196:sieve_extend.c ****        *index_ptr |= mask;
 9490              		.loc 1 196 8 is_stmt 1 view .LVU3289
 9491              	.LVL576:
GAS LISTING /tmp/cctyCFAS.s 			page 263


 197:sieve_extend.c ****        index_ptr+=step;
 9492              		.loc 1 197 8 view .LVU3290
 9493              	# sieve_extend.c:197:        *index_ptr |= mask;
 197:sieve_extend.c ****        index_ptr+=step;
 9494              		.loc 1 197 19 is_stmt 0 view .LVU3291
 9495 359b 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1772, offset: 0B], mask
 198:sieve_extend.c ****        *index_ptr |= mask;
 9496              		.loc 1 198 8 is_stmt 1 view .LVU3292
 9497              	.LVL577:
 199:sieve_extend.c ****        index_ptr+=step;
 9498              		.loc 1 199 8 view .LVU3293
 9499              	# sieve_extend.c:199:        *index_ptr |= mask;
 199:sieve_extend.c ****        index_ptr+=step;
 9500              		.loc 1 199 19 is_stmt 0 view .LVU3294
 9501 359e 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1772, index: _202, offset: 0B], mask
 200:sieve_extend.c ****        *index_ptr |= mask;
 9502              		.loc 1 200 8 is_stmt 1 view .LVU3295
 9503              	.LVL578:
 201:sieve_extend.c ****        index_ptr+=step;
 9504              		.loc 1 201 8 view .LVU3296
 9505 35a2 4801FE   		add	rsi, rdi	# ivtmp.600, tmp748
 9506              	# sieve_extend.c:201:        *index_ptr |= mask;
 201:sieve_extend.c ****        index_ptr+=step;
 9507              		.loc 1 201 19 is_stmt 0 view .LVU3297
 9508 35a5 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_1143, index: _202, step: 4, offset: 0B], mask
 202:sieve_extend.c ****    }
 9509              		.loc 1 202 8 is_stmt 1 view .LVU3298
 9510 35a9 4801F8   		add	rax, rdi	# index_ptr, tmp748
 9511              	.LVL579:
 192:sieve_extend.c ****        *index_ptr |= mask;
 9512              		.loc 1 192 10 view .LVU3299
 9513 35ac 4939C1   		cmp	r9, rax	# prephitmp_1617, index_ptr
 9514 35af 767F     		jbe	.L690	#,
 193:sieve_extend.c ****        index_ptr+=step;
 9515              		.loc 1 193 8 view .LVU3300
 9516              	# sieve_extend.c:193:        *index_ptr |= mask;
 193:sieve_extend.c ****        index_ptr+=step;
 9517              		.loc 1 193 19 is_stmt 0 view .LVU3301
 9518 35b1 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_1143, offset: 0B], mask
 194:sieve_extend.c ****        *index_ptr |= mask;
 9519              		.loc 1 194 8 is_stmt 1 view .LVU3302
 9520              	.LVL580:
 195:sieve_extend.c ****        index_ptr+=step;
 9521              		.loc 1 195 8 view .LVU3303
 9522              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 9523              		.loc 1 195 19 is_stmt 0 view .LVU3304
 9524 35b4 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_1143, index: _202, offset: 0B], mask
 196:sieve_extend.c ****        *index_ptr |= mask;
 9525              		.loc 1 196 8 is_stmt 1 view .LVU3305
 9526              	.LVL581:
 197:sieve_extend.c ****        index_ptr+=step;
 9527              		.loc 1 197 8 view .LVU3306
 9528              	# sieve_extend.c:197:        *index_ptr |= mask;
 197:sieve_extend.c ****        index_ptr+=step;
 9529              		.loc 1 197 19 is_stmt 0 view .LVU3307
 9530 35b8 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1772, offset: 0B], mask
GAS LISTING /tmp/cctyCFAS.s 			page 264


 198:sieve_extend.c ****        *index_ptr |= mask;
 9531              		.loc 1 198 8 is_stmt 1 view .LVU3308
 9532              	.LVL582:
 199:sieve_extend.c ****        index_ptr+=step;
 9533              		.loc 1 199 8 view .LVU3309
 9534              	# sieve_extend.c:199:        *index_ptr |= mask;
 199:sieve_extend.c ****        index_ptr+=step;
 9535              		.loc 1 199 19 is_stmt 0 view .LVU3310
 9536 35bb 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1772, index: _202, offset: 0B], mask
 200:sieve_extend.c ****        *index_ptr |= mask;
 9537              		.loc 1 200 8 is_stmt 1 view .LVU3311
 9538              	.LVL583:
 201:sieve_extend.c ****        index_ptr+=step;
 9539              		.loc 1 201 8 view .LVU3312
 9540 35bf 4801FE   		add	rsi, rdi	# ivtmp.600, tmp748
 9541              	# sieve_extend.c:201:        *index_ptr |= mask;
 201:sieve_extend.c ****        index_ptr+=step;
 9542              		.loc 1 201 19 is_stmt 0 view .LVU3313
 9543 35c2 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_1143, index: _202, step: 4, offset: 0B], mask
 202:sieve_extend.c ****    }
 9544              		.loc 1 202 8 is_stmt 1 view .LVU3314
 9545 35c6 4801F8   		add	rax, rdi	# index_ptr, tmp748
 9546              	.LVL584:
 192:sieve_extend.c ****        *index_ptr |= mask;
 9547              		.loc 1 192 10 view .LVU3315
 9548 35c9 4939C1   		cmp	r9, rax	# prephitmp_1617, index_ptr
 9549 35cc 7662     		jbe	.L690	#,
 193:sieve_extend.c ****        index_ptr+=step;
 9550              		.loc 1 193 8 view .LVU3316
 9551              	# sieve_extend.c:193:        *index_ptr |= mask;
 193:sieve_extend.c ****        index_ptr+=step;
 9552              		.loc 1 193 19 is_stmt 0 view .LVU3317
 9553 35ce 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_1143, offset: 0B], mask
 194:sieve_extend.c ****        *index_ptr |= mask;
 9554              		.loc 1 194 8 is_stmt 1 view .LVU3318
 9555              	.LVL585:
 195:sieve_extend.c ****        index_ptr+=step;
 9556              		.loc 1 195 8 view .LVU3319
 9557              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 9558              		.loc 1 195 19 is_stmt 0 view .LVU3320
 9559 35d1 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_1143, index: _202, offset: 0B], mask
 196:sieve_extend.c ****        *index_ptr |= mask;
 9560              		.loc 1 196 8 is_stmt 1 view .LVU3321
 9561              	.LVL586:
 197:sieve_extend.c ****        index_ptr+=step;
 9562              		.loc 1 197 8 view .LVU3322
 9563              	# sieve_extend.c:197:        *index_ptr |= mask;
 197:sieve_extend.c ****        index_ptr+=step;
 9564              		.loc 1 197 19 is_stmt 0 view .LVU3323
 9565 35d5 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1772, offset: 0B], mask
 198:sieve_extend.c ****        *index_ptr |= mask;
 9566              		.loc 1 198 8 is_stmt 1 view .LVU3324
 9567              	.LVL587:
 199:sieve_extend.c ****        index_ptr+=step;
 9568              		.loc 1 199 8 view .LVU3325
 9569              	# sieve_extend.c:199:        *index_ptr |= mask;
GAS LISTING /tmp/cctyCFAS.s 			page 265


 199:sieve_extend.c ****        index_ptr+=step;
 9570              		.loc 1 199 19 is_stmt 0 view .LVU3326
 9571 35d8 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1772, index: _202, offset: 0B], mask
 200:sieve_extend.c ****        *index_ptr |= mask;
 9572              		.loc 1 200 8 is_stmt 1 view .LVU3327
 9573              	.LVL588:
 201:sieve_extend.c ****        index_ptr+=step;
 9574              		.loc 1 201 8 view .LVU3328
 9575 35dc 4801FE   		add	rsi, rdi	# ivtmp.600, tmp748
 9576              	# sieve_extend.c:201:        *index_ptr |= mask;
 201:sieve_extend.c ****        index_ptr+=step;
 9577              		.loc 1 201 19 is_stmt 0 view .LVU3329
 9578 35df 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_1143, index: _202, step: 4, offset: 0B], mask
 202:sieve_extend.c ****    }
 9579              		.loc 1 202 8 is_stmt 1 view .LVU3330
 9580 35e3 4801F8   		add	rax, rdi	# index_ptr, tmp748
 9581              	.LVL589:
 192:sieve_extend.c ****        *index_ptr |= mask;
 9582              		.loc 1 192 10 view .LVU3331
 9583 35e6 4939C1   		cmp	r9, rax	# prephitmp_1617, index_ptr
 9584 35e9 7645     		jbe	.L690	#,
 193:sieve_extend.c ****        index_ptr+=step;
 9585              		.loc 1 193 8 view .LVU3332
 9586              	# sieve_extend.c:193:        *index_ptr |= mask;
 193:sieve_extend.c ****        index_ptr+=step;
 9587              		.loc 1 193 19 is_stmt 0 view .LVU3333
 9588 35eb 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_1143, offset: 0B], mask
 194:sieve_extend.c ****        *index_ptr |= mask;
 9589              		.loc 1 194 8 is_stmt 1 view .LVU3334
 9590              	.LVL590:
 195:sieve_extend.c ****        index_ptr+=step;
 9591              		.loc 1 195 8 view .LVU3335
 9592              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 9593              		.loc 1 195 19 is_stmt 0 view .LVU3336
 9594 35ee 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_1143, index: _202, offset: 0B], mask
 196:sieve_extend.c ****        *index_ptr |= mask;
 9595              		.loc 1 196 8 is_stmt 1 view .LVU3337
 9596              	.LVL591:
 197:sieve_extend.c ****        index_ptr+=step;
 9597              		.loc 1 197 8 view .LVU3338
 9598              	# sieve_extend.c:197:        *index_ptr |= mask;
 197:sieve_extend.c ****        index_ptr+=step;
 9599              		.loc 1 197 19 is_stmt 0 view .LVU3339
 9600 35f2 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1772, offset: 0B], mask
 198:sieve_extend.c ****        *index_ptr |= mask;
 9601              		.loc 1 198 8 is_stmt 1 view .LVU3340
 9602              	.LVL592:
 199:sieve_extend.c ****        index_ptr+=step;
 9603              		.loc 1 199 8 view .LVU3341
 9604              	# sieve_extend.c:199:        *index_ptr |= mask;
 199:sieve_extend.c ****        index_ptr+=step;
 9605              		.loc 1 199 19 is_stmt 0 view .LVU3342
 9606 35f5 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1772, index: _202, offset: 0B], mask
 200:sieve_extend.c ****        *index_ptr |= mask;
 9607              		.loc 1 200 8 is_stmt 1 view .LVU3343
 9608              	.LVL593:
GAS LISTING /tmp/cctyCFAS.s 			page 266


 201:sieve_extend.c ****        index_ptr+=step;
 9609              		.loc 1 201 8 view .LVU3344
 9610 35f9 4801FE   		add	rsi, rdi	# ivtmp.600, tmp748
 9611              	# sieve_extend.c:201:        *index_ptr |= mask;
 201:sieve_extend.c ****        index_ptr+=step;
 9612              		.loc 1 201 19 is_stmt 0 view .LVU3345
 9613 35fc 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_1143, index: _202, step: 4, offset: 0B], mask
 202:sieve_extend.c ****    }
 9614              		.loc 1 202 8 is_stmt 1 view .LVU3346
 9615 3600 4801F8   		add	rax, rdi	# index_ptr, tmp748
 9616              	.LVL594:
 192:sieve_extend.c ****        *index_ptr |= mask;
 9617              		.loc 1 192 10 view .LVU3347
 9618 3603 4939C1   		cmp	r9, rax	# prephitmp_1617, index_ptr
 9619 3606 7628     		jbe	.L690	#,
 193:sieve_extend.c ****        index_ptr+=step;
 9620              		.loc 1 193 8 view .LVU3348
 9621              	# sieve_extend.c:193:        *index_ptr |= mask;
 193:sieve_extend.c ****        index_ptr+=step;
 9622              		.loc 1 193 19 is_stmt 0 view .LVU3349
 9623 3608 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_1143, offset: 0B], mask
 194:sieve_extend.c ****        *index_ptr |= mask;
 9624              		.loc 1 194 8 is_stmt 1 view .LVU3350
 9625              	.LVL595:
 195:sieve_extend.c ****        index_ptr+=step;
 9626              		.loc 1 195 8 view .LVU3351
 9627              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 9628              		.loc 1 195 19 is_stmt 0 view .LVU3352
 9629 360b 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_1143, index: _202, offset: 0B], mask
 196:sieve_extend.c ****        *index_ptr |= mask;
 9630              		.loc 1 196 8 is_stmt 1 view .LVU3353
 9631              	.LVL596:
 197:sieve_extend.c ****        index_ptr+=step;
 9632              		.loc 1 197 8 view .LVU3354
 9633              	# sieve_extend.c:197:        *index_ptr |= mask;
 197:sieve_extend.c ****        index_ptr+=step;
 9634              		.loc 1 197 19 is_stmt 0 view .LVU3355
 9635 360f 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1772, offset: 0B], mask
 198:sieve_extend.c ****        *index_ptr |= mask;
 9636              		.loc 1 198 8 is_stmt 1 view .LVU3356
 9637              	.LVL597:
 199:sieve_extend.c ****        index_ptr+=step;
 9638              		.loc 1 199 8 view .LVU3357
 9639              	# sieve_extend.c:199:        *index_ptr |= mask;
 199:sieve_extend.c ****        index_ptr+=step;
 9640              		.loc 1 199 19 is_stmt 0 view .LVU3358
 9641 3612 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1772, index: _202, offset: 0B], mask
 200:sieve_extend.c ****        *index_ptr |= mask;
 9642              		.loc 1 200 8 is_stmt 1 view .LVU3359
 9643              	.LVL598:
 201:sieve_extend.c ****        index_ptr+=step;
 9644              		.loc 1 201 8 view .LVU3360
 9645 3616 4801FE   		add	rsi, rdi	# ivtmp.600, tmp748
 9646              	# sieve_extend.c:201:        *index_ptr |= mask;
 201:sieve_extend.c ****        index_ptr+=step;
 9647              		.loc 1 201 19 is_stmt 0 view .LVU3361
GAS LISTING /tmp/cctyCFAS.s 			page 267


 9648 3619 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_1143, index: _202, step: 4, offset: 0B], mask
 202:sieve_extend.c ****    }
 9649              		.loc 1 202 8 is_stmt 1 view .LVU3362
 9650 361d 4801F8   		add	rax, rdi	# index_ptr, tmp748
 9651              	.LVL599:
 192:sieve_extend.c ****        *index_ptr |= mask;
 9652              		.loc 1 192 10 view .LVU3363
 9653 3620 4939C1   		cmp	r9, rax	# prephitmp_1617, index_ptr
 9654 3623 0F8708FF 		ja	.L691	#,
 9654      FFFF
 9655 3629 0F1F8000 		.p2align 4,,10
 9655      000000
 9656              		.p2align 3
 9657              	.L690:
 205:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 9658              		.loc 1 205 4 view .LVU3364
 206:sieve_extend.c ****        *index_ptr |= mask;
 9659              		.loc 1 206 4 view .LVU3365
 206:sieve_extend.c ****        *index_ptr |= mask;
 9660              		.loc 1 206 10 view .LVU3366
 9661 3630 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 9662 3633 765B     		jbe	.L692	#,
 9663              	.L693:
 207:sieve_extend.c ****        index_ptr+=step;
 9664              		.loc 1 207 8 view .LVU3367
 9665              	# sieve_extend.c:207:        *index_ptr |= mask;
 207:sieve_extend.c ****        index_ptr+=step;
 9666              		.loc 1 207 19 is_stmt 0 view .LVU3368
 9667 3635 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_1144, offset: 0B], mask
 208:sieve_extend.c ****    }
 9668              		.loc 1 208 8 is_stmt 1 view .LVU3369
 9669              	# sieve_extend.c:208:        index_ptr+=step;
 208:sieve_extend.c ****    }
 9670              		.loc 1 208 17 is_stmt 0 view .LVU3370
 9671 3638 4801C8   		add	rax, rcx	# index_ptr, _202
 9672              	.LVL600:
 206:sieve_extend.c ****        *index_ptr |= mask;
 9673              		.loc 1 206 10 is_stmt 1 view .LVU3371
 9674 363b 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 9675 363e 7650     		jbe	.L692	#,
 207:sieve_extend.c ****        index_ptr+=step;
 9676              		.loc 1 207 8 view .LVU3372
 9677              	# sieve_extend.c:207:        *index_ptr |= mask;
 207:sieve_extend.c ****        index_ptr+=step;
 9678              		.loc 1 207 19 is_stmt 0 view .LVU3373
 9679 3640 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_1144, offset: 0B], mask
 208:sieve_extend.c ****    }
 9680              		.loc 1 208 8 is_stmt 1 view .LVU3374
 9681              	# sieve_extend.c:208:        index_ptr+=step;
 208:sieve_extend.c ****    }
 9682              		.loc 1 208 17 is_stmt 0 view .LVU3375
 9683 3643 4801C8   		add	rax, rcx	# index_ptr, _202
 9684              	.LVL601:
 206:sieve_extend.c ****        *index_ptr |= mask;
 9685              		.loc 1 206 10 is_stmt 1 view .LVU3376
 9686 3646 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 9687 3649 7645     		jbe	.L692	#,
GAS LISTING /tmp/cctyCFAS.s 			page 268


 207:sieve_extend.c ****        index_ptr+=step;
 9688              		.loc 1 207 8 view .LVU3377
 9689              	# sieve_extend.c:207:        *index_ptr |= mask;
 207:sieve_extend.c ****        index_ptr+=step;
 9690              		.loc 1 207 19 is_stmt 0 view .LVU3378
 9691 364b 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_1144, offset: 0B], mask
 208:sieve_extend.c ****    }
 9692              		.loc 1 208 8 is_stmt 1 view .LVU3379
 9693              	# sieve_extend.c:208:        index_ptr+=step;
 208:sieve_extend.c ****    }
 9694              		.loc 1 208 17 is_stmt 0 view .LVU3380
 9695 364e 4801C8   		add	rax, rcx	# index_ptr, _202
 9696              	.LVL602:
 206:sieve_extend.c ****        *index_ptr |= mask;
 9697              		.loc 1 206 10 is_stmt 1 view .LVU3381
 9698 3651 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 9699 3654 763A     		jbe	.L692	#,
 207:sieve_extend.c ****        index_ptr+=step;
 9700              		.loc 1 207 8 view .LVU3382
 9701              	# sieve_extend.c:207:        *index_ptr |= mask;
 207:sieve_extend.c ****        index_ptr+=step;
 9702              		.loc 1 207 19 is_stmt 0 view .LVU3383
 9703 3656 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_1144, offset: 0B], mask
 208:sieve_extend.c ****    }
 9704              		.loc 1 208 8 is_stmt 1 view .LVU3384
 9705              	# sieve_extend.c:208:        index_ptr+=step;
 208:sieve_extend.c ****    }
 9706              		.loc 1 208 17 is_stmt 0 view .LVU3385
 9707 3659 4801C8   		add	rax, rcx	# index_ptr, _202
 9708              	.LVL603:
 206:sieve_extend.c ****        *index_ptr |= mask;
 9709              		.loc 1 206 10 is_stmt 1 view .LVU3386
 9710 365c 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 9711 365f 762F     		jbe	.L692	#,
 207:sieve_extend.c ****        index_ptr+=step;
 9712              		.loc 1 207 8 view .LVU3387
 9713              	# sieve_extend.c:207:        *index_ptr |= mask;
 207:sieve_extend.c ****        index_ptr+=step;
 9714              		.loc 1 207 19 is_stmt 0 view .LVU3388
 9715 3661 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_1144, offset: 0B], mask
 208:sieve_extend.c ****    }
 9716              		.loc 1 208 8 is_stmt 1 view .LVU3389
 9717              	# sieve_extend.c:208:        index_ptr+=step;
 208:sieve_extend.c ****    }
 9718              		.loc 1 208 17 is_stmt 0 view .LVU3390
 9719 3664 4801C8   		add	rax, rcx	# index_ptr, _202
 9720              	.LVL604:
 206:sieve_extend.c ****        *index_ptr |= mask;
 9721              		.loc 1 206 10 is_stmt 1 view .LVU3391
 9722 3667 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 9723 366a 7624     		jbe	.L692	#,
 207:sieve_extend.c ****        index_ptr+=step;
 9724              		.loc 1 207 8 view .LVU3392
 9725              	# sieve_extend.c:207:        *index_ptr |= mask;
 207:sieve_extend.c ****        index_ptr+=step;
 9726              		.loc 1 207 19 is_stmt 0 view .LVU3393
 9727 366c 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_1144, offset: 0B], mask
GAS LISTING /tmp/cctyCFAS.s 			page 269


 208:sieve_extend.c ****    }
 9728              		.loc 1 208 8 is_stmt 1 view .LVU3394
 9729              	# sieve_extend.c:208:        index_ptr+=step;
 208:sieve_extend.c ****    }
 9730              		.loc 1 208 17 is_stmt 0 view .LVU3395
 9731 366f 4801C8   		add	rax, rcx	# index_ptr, _202
 9732              	.LVL605:
 206:sieve_extend.c ****        *index_ptr |= mask;
 9733              		.loc 1 206 10 is_stmt 1 view .LVU3396
 9734 3672 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 9735 3675 7619     		jbe	.L692	#,
 207:sieve_extend.c ****        index_ptr+=step;
 9736              		.loc 1 207 8 view .LVU3397
 9737              	# sieve_extend.c:207:        *index_ptr |= mask;
 207:sieve_extend.c ****        index_ptr+=step;
 9738              		.loc 1 207 19 is_stmt 0 view .LVU3398
 9739 3677 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_1144, offset: 0B], mask
 208:sieve_extend.c ****    }
 9740              		.loc 1 208 8 is_stmt 1 view .LVU3399
 9741              	# sieve_extend.c:208:        index_ptr+=step;
 208:sieve_extend.c ****    }
 9742              		.loc 1 208 17 is_stmt 0 view .LVU3400
 9743 367a 4801C8   		add	rax, rcx	# index_ptr, _202
 9744              	.LVL606:
 206:sieve_extend.c ****        *index_ptr |= mask;
 9745              		.loc 1 206 10 is_stmt 1 view .LVU3401
 9746 367d 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 9747 3680 760E     		jbe	.L692	#,
 207:sieve_extend.c ****        index_ptr+=step;
 9748              		.loc 1 207 8 view .LVU3402
 9749              	# sieve_extend.c:207:        *index_ptr |= mask;
 207:sieve_extend.c ****        index_ptr+=step;
 9750              		.loc 1 207 19 is_stmt 0 view .LVU3403
 9751 3682 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_1144, offset: 0B], mask
 208:sieve_extend.c ****    }
 9752              		.loc 1 208 8 is_stmt 1 view .LVU3404
 9753              	# sieve_extend.c:208:        index_ptr+=step;
 208:sieve_extend.c ****    }
 9754              		.loc 1 208 17 is_stmt 0 view .LVU3405
 9755 3685 4801C8   		add	rax, rcx	# index_ptr, _202
 9756              	.LVL607:
 206:sieve_extend.c ****        *index_ptr |= mask;
 9757              		.loc 1 206 10 is_stmt 1 view .LVU3406
 9758 3688 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 9759 368b 77A8     		ja	.L693	#,
 9760 368d 0F1F00   		.p2align 4,,10
 9761              		.p2align 3
 9762              	.L692:
 211:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 9763              		.loc 1 211 4 view .LVU3407
 9764              	# sieve_extend.c:211:    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range
 211:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 9765              		.loc 1 211 7 is_stmt 0 view .LVU3408
 9766 3690 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 9767 3693 7413     		je	.L1583	#,
 9768              	.LVL608:
 9769              	.L694:
GAS LISTING /tmp/cctyCFAS.s 			page 270


 211:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 9770              		.loc 1 211 7 view .LVU3409
 9771              	.LBE515:
 9772              	.LBE517:
 9773              	.LBE512:
 303:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 9774              		.loc 1 303 54 is_stmt 1 view .LVU3410
 9775              	# sieve_extend.c:303:         for (register counter_t index = range_start; index <= range_stop_uniq
 303:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 9776              		.loc 1 303 9 is_stmt 0 view .LVU3411
 9777 3695 4C39EB   		cmp	rbx, r13	# index, tmp728
 9778 3698 0F86B2FD 		jbe	.L695	#,
 9778      FFFF
 303:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 9779              		.loc 1 303 9 view .LVU3412
 9780 369e E9A9F6FF 		jmp	.L1564	#
 9780      FF
 9781              	.LVL609:
 9782              		.p2align 4,,10
 9783 36a3 0F1F4400 		.p2align 3
 9783      00
 9784              	.L1583:
 9785              	.LBB519:
 9786              	.LBB518:
 9787              	.LBB516:
 212:sieve_extend.c ****    }
 9788              		.loc 1 212 7 is_stmt 1 view .LVU3413
 9789              	# sieve_extend.c:212:       *index_ptr |= (mask & chopmask(range_stop));
 212:sieve_extend.c ****    }
 9790              		.loc 1 212 27 is_stmt 0 view .LVU3414
 9791 36a8 4C21DA   		and	rdx, r11	# tmp754, _234
 9792              	.LVL610:
 9793              	# sieve_extend.c:212:       *index_ptr |= (mask & chopmask(range_stop));
 212:sieve_extend.c ****    }
 9794              		.loc 1 212 18 view .LVU3415
 9795 36ab 490910   		or	QWORD PTR [r8], rdx	# *index_ptr_1145, tmp754
 9796 36ae EBE5     		jmp	.L694	#
 9797              	.LVL611:
 9798              		.p2align 4,,10
 9799              		.p2align 3
 9800              	.L684:
 212:sieve_extend.c ****    }
 9801              		.loc 1 212 18 view .LVU3416
 9802              	.LBE516:
 9803              	.LBE518:
 9804              	.LBE519:
 9805              	.LBE511:
 9806              	.LBB520:
 9807              	.LBB521:
 9808              	.LBB522:
 291:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 9809              		.loc 1 291 54 is_stmt 1 view .LVU3417
 9810              	# sieve_extend.c:291:         for (register counter_t index = range_start; index <= range_stop;) {
 291:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 9811              		.loc 1 291 9 is_stmt 0 view .LVU3418
 9812 36b0 488B7C24 		mov	rdi, QWORD PTR 112[rsp]	# _66, %sfp
 9812      70
GAS LISTING /tmp/cctyCFAS.s 			page 271


 9813 36b5 4839DF   		cmp	rdi, rbx	# _66, index
 9814 36b8 0F8293F6 		jb	.L678	#,
 9814      FFFF
 9815              	.LVL612:
 9816 36be 6690     		.p2align 4,,10
 9817              		.p2align 3
 9818              	.L688:
 9819              	.LBB523:
 292:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 9820              		.loc 1 292 13 is_stmt 1 view .LVU3419
 9821              	# sieve_extend.c:292:             register counter_t index_word = wordindex(index);
 292:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 9822              		.loc 1 292 32 is_stmt 0 view .LVU3420
 9823 36c0 4989D8   		mov	r8, rbx	# index_word, index
 9824 36c3 49C1E806 		shr	r8, 6	# index_word,
 9825              	.LVL613:
 293:sieve_extend.c ****             for (; index_word == wordindex(index);  index += step) 
 9826              		.loc 1 293 13 is_stmt 1 view .LVU3421
 294:sieve_extend.c ****                 mask |= markmask(index);
 9827              		.loc 1 294 13 view .LVU3422
 294:sieve_extend.c ****                 mask |= markmask(index);
 9828              		.loc 1 294 20 view .LVU3423
 9829              	# sieve_extend.c:293:             register bitword_t mask = SAFE_ZERO;
 293:sieve_extend.c ****             for (; index_word == wordindex(index);  index += step) 
 9830              		.loc 1 293 32 is_stmt 0 view .LVU3424
 9831 36c7 4531DB   		xor	r11d, r11d	# mask
 9832              	.LVL614:
 9833              	.L687:
 295:sieve_extend.c ****             bitarray[index_word] |= mask;
 9834              		.loc 1 295 17 is_stmt 1 view .LVU3425
 9835              	# sieve_extend.c:295:                 mask |= markmask(index);
 295:sieve_extend.c ****             bitarray[index_word] |= mask;
 9836              		.loc 1 295 25 is_stmt 0 view .LVU3426
 9837 36ca C4C2E1F7 		shlx	rcx, r15, rbx	# tmp730, tmp1047, index
 9837      CF
 9838              	# sieve_extend.c:294:             for (; index_word == wordindex(index);  index += step) 
 294:sieve_extend.c ****                 mask |= markmask(index);
 9839              		.loc 1 294 59 view .LVU3427
 9840 36cf 4C01E3   		add	rbx, r12	# index, step
 9841              	.LVL615:
 9842              	# sieve_extend.c:294:             for (; index_word == wordindex(index);  index += step) 
 294:sieve_extend.c ****                 mask |= markmask(index);
 9843              		.loc 1 294 34 view .LVU3428
 9844 36d2 4989D9   		mov	r9, rbx	# tmp732, index
 9845 36d5 49C1E906 		shr	r9, 6	# tmp732,
 9846              	# sieve_extend.c:295:                 mask |= markmask(index);
 295:sieve_extend.c ****             bitarray[index_word] |= mask;
 9847              		.loc 1 295 22 view .LVU3429
 9848 36d9 4909CB   		or	r11, rcx	# mask, tmp730
 9849              	.LVL616:
 294:sieve_extend.c ****                 mask |= markmask(index);
 9850              		.loc 1 294 53 is_stmt 1 view .LVU3430
 294:sieve_extend.c ****                 mask |= markmask(index);
 9851              		.loc 1 294 20 view .LVU3431
 9852              	# sieve_extend.c:294:             for (; index_word == wordindex(index);  index += step) 
 294:sieve_extend.c ****                 mask |= markmask(index);
 9853              		.loc 1 294 13 is_stmt 0 view .LVU3432
GAS LISTING /tmp/cctyCFAS.s 			page 272


 9854 36dc 4D39C8   		cmp	r8, r9	# index_word, tmp732
 9855 36df 0F85AB00 		jne	.L1367	#,
 9855      0000
 295:sieve_extend.c ****             bitarray[index_word] |= mask;
 9856              		.loc 1 295 17 is_stmt 1 view .LVU3433
 9857              	# sieve_extend.c:295:                 mask |= markmask(index);
 295:sieve_extend.c ****             bitarray[index_word] |= mask;
 9858              		.loc 1 295 25 is_stmt 0 view .LVU3434
 9859 36e5 C442E1F7 		shlx	r10, r15, rbx	# tmp1593, tmp1047, index
 9859      D7
 9860              	# sieve_extend.c:294:             for (; index_word == wordindex(index);  index += step) 
 294:sieve_extend.c ****                 mask |= markmask(index);
 9861              		.loc 1 294 59 view .LVU3435
 9862 36ea 4C01E3   		add	rbx, r12	# index, step
 9863              	.LVL617:
 9864              	# sieve_extend.c:294:             for (; index_word == wordindex(index);  index += step) 
 294:sieve_extend.c ****                 mask |= markmask(index);
 9865              		.loc 1 294 34 view .LVU3436
 9866 36ed 4889DA   		mov	rdx, rbx	# tmp1594, index
 9867 36f0 48C1EA06 		shr	rdx, 6	# tmp1594,
 9868              	# sieve_extend.c:295:                 mask |= markmask(index);
 295:sieve_extend.c ****             bitarray[index_word] |= mask;
 9869              		.loc 1 295 22 view .LVU3437
 9870 36f4 4D09D3   		or	r11, r10	# mask, tmp1593
 9871              	.LVL618:
 294:sieve_extend.c ****                 mask |= markmask(index);
 9872              		.loc 1 294 53 is_stmt 1 view .LVU3438
 294:sieve_extend.c ****                 mask |= markmask(index);
 9873              		.loc 1 294 20 view .LVU3439
 9874              	# sieve_extend.c:294:             for (; index_word == wordindex(index);  index += step) 
 294:sieve_extend.c ****                 mask |= markmask(index);
 9875              		.loc 1 294 13 is_stmt 0 view .LVU3440
 9876 36f7 4939D0   		cmp	r8, rdx	# index_word, tmp1594
 9877 36fa 0F859000 		jne	.L1367	#,
 9877      0000
 295:sieve_extend.c ****             bitarray[index_word] |= mask;
 9878              		.loc 1 295 17 is_stmt 1 view .LVU3441
 9879              	# sieve_extend.c:295:                 mask |= markmask(index);
 295:sieve_extend.c ****             bitarray[index_word] |= mask;
 9880              		.loc 1 295 25 is_stmt 0 view .LVU3442
 9881 3700 C4C2E1F7 		shlx	rax, r15, rbx	# tmp1595, tmp1047, index
 9881      C7
 9882              	# sieve_extend.c:294:             for (; index_word == wordindex(index);  index += step) 
 294:sieve_extend.c ****                 mask |= markmask(index);
 9883              		.loc 1 294 59 view .LVU3443
 9884 3705 4C01E3   		add	rbx, r12	# index, step
 9885              	.LVL619:
 9886              	# sieve_extend.c:294:             for (; index_word == wordindex(index);  index += step) 
 294:sieve_extend.c ****                 mask |= markmask(index);
 9887              		.loc 1 294 34 view .LVU3444
 9888 3708 4889DE   		mov	rsi, rbx	# tmp1596, index
 9889 370b 48C1EE06 		shr	rsi, 6	# tmp1596,
 9890              	# sieve_extend.c:295:                 mask |= markmask(index);
 295:sieve_extend.c ****             bitarray[index_word] |= mask;
 9891              		.loc 1 295 22 view .LVU3445
 9892 370f 4909C3   		or	r11, rax	# mask, tmp1595
 9893              	.LVL620:
GAS LISTING /tmp/cctyCFAS.s 			page 273


 294:sieve_extend.c ****                 mask |= markmask(index);
 9894              		.loc 1 294 53 is_stmt 1 view .LVU3446
 294:sieve_extend.c ****                 mask |= markmask(index);
 9895              		.loc 1 294 20 view .LVU3447
 9896              	# sieve_extend.c:294:             for (; index_word == wordindex(index);  index += step) 
 294:sieve_extend.c ****                 mask |= markmask(index);
 9897              		.loc 1 294 13 is_stmt 0 view .LVU3448
 9898 3712 4939F0   		cmp	r8, rsi	# index_word, tmp1596
 9899 3715 7579     		jne	.L1367	#,
 295:sieve_extend.c ****             bitarray[index_word] |= mask;
 9900              		.loc 1 295 17 is_stmt 1 view .LVU3449
 9901              	# sieve_extend.c:295:                 mask |= markmask(index);
 295:sieve_extend.c ****             bitarray[index_word] |= mask;
 9902              		.loc 1 295 25 is_stmt 0 view .LVU3450
 9903 3717 C4C2E1F7 		shlx	rcx, r15, rbx	# tmp1597, tmp1047, index
 9903      CF
 9904              	# sieve_extend.c:294:             for (; index_word == wordindex(index);  index += step) 
 294:sieve_extend.c ****                 mask |= markmask(index);
 9905              		.loc 1 294 59 view .LVU3451
 9906 371c 4C01E3   		add	rbx, r12	# index, step
 9907              	.LVL621:
 9908              	# sieve_extend.c:294:             for (; index_word == wordindex(index);  index += step) 
 294:sieve_extend.c ****                 mask |= markmask(index);
 9909              		.loc 1 294 34 view .LVU3452
 9910 371f 4989D9   		mov	r9, rbx	# tmp1598, index
 9911 3722 49C1E906 		shr	r9, 6	# tmp1598,
 9912              	# sieve_extend.c:295:                 mask |= markmask(index);
 295:sieve_extend.c ****             bitarray[index_word] |= mask;
 9913              		.loc 1 295 22 view .LVU3453
 9914 3726 4909CB   		or	r11, rcx	# mask, tmp1597
 9915              	.LVL622:
 294:sieve_extend.c ****                 mask |= markmask(index);
 9916              		.loc 1 294 53 is_stmt 1 view .LVU3454
 294:sieve_extend.c ****                 mask |= markmask(index);
 9917              		.loc 1 294 20 view .LVU3455
 9918              	# sieve_extend.c:294:             for (; index_word == wordindex(index);  index += step) 
 294:sieve_extend.c ****                 mask |= markmask(index);
 9919              		.loc 1 294 13 is_stmt 0 view .LVU3456
 9920 3729 4D39C8   		cmp	r8, r9	# index_word, tmp1598
 9921 372c 7562     		jne	.L1367	#,
 295:sieve_extend.c ****             bitarray[index_word] |= mask;
 9922              		.loc 1 295 17 is_stmt 1 view .LVU3457
 9923              	# sieve_extend.c:295:                 mask |= markmask(index);
 295:sieve_extend.c ****             bitarray[index_word] |= mask;
 9924              		.loc 1 295 25 is_stmt 0 view .LVU3458
 9925 372e C442E1F7 		shlx	r10, r15, rbx	# tmp1599, tmp1047, index
 9925      D7
 9926              	# sieve_extend.c:294:             for (; index_word == wordindex(index);  index += step) 
 294:sieve_extend.c ****                 mask |= markmask(index);
 9927              		.loc 1 294 59 view .LVU3459
 9928 3733 4C01E3   		add	rbx, r12	# index, step
 9929              	.LVL623:
 9930              	# sieve_extend.c:294:             for (; index_word == wordindex(index);  index += step) 
 294:sieve_extend.c ****                 mask |= markmask(index);
 9931              		.loc 1 294 34 view .LVU3460
 9932 3736 4889DA   		mov	rdx, rbx	# tmp1600, index
 9933 3739 48C1EA06 		shr	rdx, 6	# tmp1600,
GAS LISTING /tmp/cctyCFAS.s 			page 274


 9934              	# sieve_extend.c:295:                 mask |= markmask(index);
 295:sieve_extend.c ****             bitarray[index_word] |= mask;
 9935              		.loc 1 295 22 view .LVU3461
 9936 373d 4D09D3   		or	r11, r10	# mask, tmp1599
 9937              	.LVL624:
 294:sieve_extend.c ****                 mask |= markmask(index);
 9938              		.loc 1 294 53 is_stmt 1 view .LVU3462
 294:sieve_extend.c ****                 mask |= markmask(index);
 9939              		.loc 1 294 20 view .LVU3463
 9940              	# sieve_extend.c:294:             for (; index_word == wordindex(index);  index += step) 
 294:sieve_extend.c ****                 mask |= markmask(index);
 9941              		.loc 1 294 13 is_stmt 0 view .LVU3464
 9942 3740 4939D0   		cmp	r8, rdx	# index_word, tmp1600
 9943 3743 754B     		jne	.L1367	#,
 295:sieve_extend.c ****             bitarray[index_word] |= mask;
 9944              		.loc 1 295 17 is_stmt 1 view .LVU3465
 9945              	# sieve_extend.c:295:                 mask |= markmask(index);
 295:sieve_extend.c ****             bitarray[index_word] |= mask;
 9946              		.loc 1 295 25 is_stmt 0 view .LVU3466
 9947 3745 C4C2E1F7 		shlx	rax, r15, rbx	# tmp1601, tmp1047, index
 9947      C7
 9948              	# sieve_extend.c:294:             for (; index_word == wordindex(index);  index += step) 
 294:sieve_extend.c ****                 mask |= markmask(index);
 9949              		.loc 1 294 59 view .LVU3467
 9950 374a 4C01E3   		add	rbx, r12	# index, step
 9951              	.LVL625:
 9952              	# sieve_extend.c:294:             for (; index_word == wordindex(index);  index += step) 
 294:sieve_extend.c ****                 mask |= markmask(index);
 9953              		.loc 1 294 34 view .LVU3468
 9954 374d 4889DE   		mov	rsi, rbx	# tmp1602, index
 9955 3750 48C1EE06 		shr	rsi, 6	# tmp1602,
 9956              	# sieve_extend.c:295:                 mask |= markmask(index);
 295:sieve_extend.c ****             bitarray[index_word] |= mask;
 9957              		.loc 1 295 22 view .LVU3469
 9958 3754 4909C3   		or	r11, rax	# mask, tmp1601
 9959              	.LVL626:
 294:sieve_extend.c ****                 mask |= markmask(index);
 9960              		.loc 1 294 53 is_stmt 1 view .LVU3470
 294:sieve_extend.c ****                 mask |= markmask(index);
 9961              		.loc 1 294 20 view .LVU3471
 9962              	# sieve_extend.c:294:             for (; index_word == wordindex(index);  index += step) 
 294:sieve_extend.c ****                 mask |= markmask(index);
 9963              		.loc 1 294 13 is_stmt 0 view .LVU3472
 9964 3757 4939F0   		cmp	r8, rsi	# index_word, tmp1602
 9965 375a 7534     		jne	.L1367	#,
 295:sieve_extend.c ****             bitarray[index_word] |= mask;
 9966              		.loc 1 295 17 is_stmt 1 view .LVU3473
 9967              	# sieve_extend.c:295:                 mask |= markmask(index);
 295:sieve_extend.c ****             bitarray[index_word] |= mask;
 9968              		.loc 1 295 25 is_stmt 0 view .LVU3474
 9969 375c C4C2E1F7 		shlx	rcx, r15, rbx	# tmp1603, tmp1047, index
 9969      CF
 9970              	# sieve_extend.c:294:             for (; index_word == wordindex(index);  index += step) 
 294:sieve_extend.c ****                 mask |= markmask(index);
 9971              		.loc 1 294 59 view .LVU3475
 9972 3761 4C01E3   		add	rbx, r12	# index, step
 9973              	.LVL627:
GAS LISTING /tmp/cctyCFAS.s 			page 275


 9974              	# sieve_extend.c:294:             for (; index_word == wordindex(index);  index += step) 
 294:sieve_extend.c ****                 mask |= markmask(index);
 9975              		.loc 1 294 34 view .LVU3476
 9976 3764 4989D9   		mov	r9, rbx	# tmp1604, index
 9977 3767 49C1E906 		shr	r9, 6	# tmp1604,
 9978              	# sieve_extend.c:295:                 mask |= markmask(index);
 295:sieve_extend.c ****             bitarray[index_word] |= mask;
 9979              		.loc 1 295 22 view .LVU3477
 9980 376b 4909CB   		or	r11, rcx	# mask, tmp1603
 9981              	.LVL628:
 294:sieve_extend.c ****                 mask |= markmask(index);
 9982              		.loc 1 294 53 is_stmt 1 view .LVU3478
 294:sieve_extend.c ****                 mask |= markmask(index);
 9983              		.loc 1 294 20 view .LVU3479
 9984              	# sieve_extend.c:294:             for (; index_word == wordindex(index);  index += step) 
 294:sieve_extend.c ****                 mask |= markmask(index);
 9985              		.loc 1 294 13 is_stmt 0 view .LVU3480
 9986 376e 4D39C8   		cmp	r8, r9	# index_word, tmp1604
 9987 3771 751D     		jne	.L1367	#,
 295:sieve_extend.c ****             bitarray[index_word] |= mask;
 9988              		.loc 1 295 17 is_stmt 1 view .LVU3481
 9989              	# sieve_extend.c:295:                 mask |= markmask(index);
 295:sieve_extend.c ****             bitarray[index_word] |= mask;
 9990              		.loc 1 295 25 is_stmt 0 view .LVU3482
 9991 3773 C442E1F7 		shlx	r10, r15, rbx	# tmp1605, tmp1047, index
 9991      D7
 9992              	# sieve_extend.c:294:             for (; index_word == wordindex(index);  index += step) 
 294:sieve_extend.c ****                 mask |= markmask(index);
 9993              		.loc 1 294 59 view .LVU3483
 9994 3778 4C01E3   		add	rbx, r12	# index, step
 9995              	.LVL629:
 9996              	# sieve_extend.c:294:             for (; index_word == wordindex(index);  index += step) 
 294:sieve_extend.c ****                 mask |= markmask(index);
 9997              		.loc 1 294 34 view .LVU3484
 9998 377b 4889DA   		mov	rdx, rbx	# tmp1606, index
 9999 377e 48C1EA06 		shr	rdx, 6	# tmp1606,
 10000              	# sieve_extend.c:295:                 mask |= markmask(index);
 295:sieve_extend.c ****             bitarray[index_word] |= mask;
 10001              		.loc 1 295 22 view .LVU3485
 10002 3782 4D09D3   		or	r11, r10	# mask, tmp1605
 10003              	.LVL630:
 294:sieve_extend.c ****                 mask |= markmask(index);
 10004              		.loc 1 294 53 is_stmt 1 view .LVU3486
 294:sieve_extend.c ****                 mask |= markmask(index);
 10005              		.loc 1 294 20 view .LVU3487
 10006              	# sieve_extend.c:294:             for (; index_word == wordindex(index);  index += step) 
 294:sieve_extend.c ****                 mask |= markmask(index);
 10007              		.loc 1 294 13 is_stmt 0 view .LVU3488
 10008 3785 4939D0   		cmp	r8, rdx	# index_word, tmp1606
 10009 3788 0F843CFF 		je	.L687	#,
 10009      FFFF
 10010 378e 6690     		.p2align 4,,10
 10011              		.p2align 3
 10012              	.L1367:
 296:sieve_extend.c ****         }
 10013              		.loc 1 296 13 is_stmt 1 view .LVU3489
 10014              	# sieve_extend.c:296:             bitarray[index_word] |= mask;
GAS LISTING /tmp/cctyCFAS.s 			page 276


 296:sieve_extend.c ****         }
 10015              		.loc 1 296 34 is_stmt 0 view .LVU3490
 10016 3790 4F091CC6 		or	QWORD PTR [r14+r8*8], r11	# *_185, mask
 296:sieve_extend.c ****         }
 10017              		.loc 1 296 34 view .LVU3491
 10018              	.LBE523:
 291:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 10019              		.loc 1 291 54 is_stmt 1 view .LVU3492
 10020              	# sieve_extend.c:291:         for (register counter_t index = range_start; index <= range_stop;) {
 291:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 10021              		.loc 1 291 9 is_stmt 0 view .LVU3493
 10022 3794 4839DF   		cmp	rdi, rbx	# _66, index
 10023 3797 0F8323FF 		jnb	.L688	#,
 10023      FFFF
 291:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 10024              		.loc 1 291 9 view .LVU3494
 10025 379d E9AFF5FF 		jmp	.L678	#
 10025      FF
 10026              	.LVL631:
 10027              		.p2align 4,,10
 10028 37a2 660F1F44 		.p2align 3
 10028      0000
 10029              	.L673:
 291:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 10030              		.loc 1 291 9 view .LVU3495
 10031              	.LBE522:
 10032              	.LBE521:
 10033              	.LBE520:
 10034              	.LBE510:
 10035              	.LBE509:
 10036              	.LBB524:
 10037              	.LBB498:
 848:sieve_extend.c **** }
 10038              		.loc 1 848 37 is_stmt 1 view .LVU3496
 10039 37a8 E883D8FF 		call	extendSieve_aligned	#
 10039      FF
 10040              	.LVL632:
 848:sieve_extend.c **** }
 10041              		.loc 1 848 37 is_stmt 0 view .LVU3497
 10042 37ad 488B4C24 		mov	rcx, QWORD PTR 120[rsp]	# patternsize_bits, %sfp
 10042      78
 10043 37b2 48894C24 		mov	QWORD PTR 72[rsp], rcx	# %sfp, patternsize_bits
 10043      48
 10044 37b7 E9F6F1FF 		jmp	.L670	#
 10044      FF
 10045              	.LVL633:
 10046 37bc 0F1F4000 		.p2align 4,,10
 10047              		.p2align 3
 10048              	.L1580:
 846:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 10049              		.loc 1 846 37 is_stmt 1 view .LVU3498
 10050 37c0 E86BDDFF 		call	extendSieve_shiftleft	#
 10050      FF
 10051              	.LVL634:
 846:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 10052              		.loc 1 846 37 is_stmt 0 view .LVU3499
 10053 37c5 488B4424 		mov	rax, QWORD PTR 120[rsp]	# patternsize_bits, %sfp
GAS LISTING /tmp/cctyCFAS.s 			page 277


 10053      78
 10054 37ca 48894424 		mov	QWORD PTR 72[rsp], rax	# %sfp, patternsize_bits
 10054      48
 10055 37cf E9DEF1FF 		jmp	.L670	#
 10055      FF
 10056              	.LVL635:
 10057              	.L1579:
 838:sieve_extend.c ****         return; // rapid exit for small sizes
 10058              		.loc 1 838 9 is_stmt 1 view .LVU3500
 10059 37d4 488B4C24 		mov	rcx, QWORD PTR 112[rsp]	#, %sfp
 10059      70
 10060 37d9 4C89CE   		mov	rsi, r9	#, patternsize_bits
 10061              	.LVL636:
 838:sieve_extend.c ****         return; // rapid exit for small sizes
 10062              		.loc 1 838 9 is_stmt 0 view .LVU3501
 10063 37dc 4C89CA   		mov	rdx, r9	# patternsize_bits, patternsize_bits
 10064 37df 4C89F7   		mov	rdi, r14	#, _94
 10065 37e2 E819C8FF 		call	extendSieve_smallSize	#
 10065      FF
 10066              	.LVL637:
 839:sieve_extend.c ****     }
 10067              		.loc 1 839 9 is_stmt 1 view .LVU3502
 10068 37e7 488B7424 		mov	rsi, QWORD PTR 120[rsp]	# patternsize_bits, %sfp
 10068      78
 10069 37ec 48897424 		mov	QWORD PTR 72[rsp], rsi	# %sfp, patternsize_bits
 10069      48
 10070 37f1 E9BCF1FF 		jmp	.L670	#
 10070      FF
 10071              	.LVL638:
 10072              	.L1581:
 839:sieve_extend.c ****     }
 10073              		.loc 1 839 9 is_stmt 0 view .LVU3503
 10074              	.LBE498:
 10075              	.LBE524:
 10076              	.LBB525:
 10077              	.LBB505:
 256:sieve_extend.c ****        return;
 10078              		.loc 1 256 8 is_stmt 1 view .LVU3504
 10079              	# sieve_extend.c:256:        bitarray[copy_word] |= ((pattern << bitindex(range_start)) & chopmask(
 256:sieve_extend.c ****        return;
 10080              		.loc 1 256 67 is_stmt 0 view .LVU3505
 10081 37f6 4921F1   		and	r9, rsi	# tmp707,
 10082              	# sieve_extend.c:256:        bitarray[copy_word] |= ((pattern << bitindex(range_start)) & chopmask(
 256:sieve_extend.c ****        return;
 10083              		.loc 1 256 28 view .LVU3506
 10084 37f9 4C09C8   		or	rax, r9	# tmp708, tmp707
 10085 37fc 488902   		mov	QWORD PTR [rdx], rax	# MEM[(uint64_t *)_1635], tmp708
 257:sieve_extend.c ****     }
 10086              		.loc 1 257 8 is_stmt 1 view .LVU3507
 10087 37ff E94DF5FF 		jmp	.L678	#
 10087      FF
 10088              	.LVL639:
 10089              	.L1573:
 257:sieve_extend.c ****     }
 10090              		.loc 1 257 8 is_stmt 0 view .LVU3508
 10091 3804 4C8B4C24 		mov	r9, QWORD PTR 80[rsp]	# <retval>, %sfp
 10091      50
GAS LISTING /tmp/cctyCFAS.s 			page 278


 10092 3809 48894C24 		mov	QWORD PTR 64[rsp], rcx	# %sfp, block$16
 10092      40
 10093 380e 4D8B5908 		mov	r11, QWORD PTR 8[r9]	# prephitmp_1899, sieve_89->bits
 10094 3812 4C895C24 		mov	QWORD PTR 104[rsp], r11	# %sfp, prephitmp_1899
 10094      68
 10095              	.LVL640:
 10096              	.L669:
 257:sieve_extend.c ****     }
 10097              		.loc 1 257 8 view .LVU3509
 10098              	.LBE505:
 10099              	.LBE525:
 10100              	.LBE532:
 10101              	.LBE535:
 10102              	.LBE543:
 981:sieve_extend.c ****     prime = block.prime;
 10103              		.loc 1 981 5 is_stmt 1 view .LVU3510
 10104              	.LBB544:
 836:sieve_extend.c ****     if (size < WORD_SIZE_counter)   {
 10105              		.loc 1 836 20 view .LVU3511
 10106              	.LBB541:
 837:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 10107              		.loc 1 837 5 view .LVU3512
 10108              	# sieve_extend.c:837:     if (size < WORD_SIZE_counter)   {
 837:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 10109              		.loc 1 837 8 is_stmt 0 view .LVU3513
 10110 3817 4883FA3F 		cmp	rdx, 63	# block$pattern_size,
 10111 381b 0F86A9F9 		jbe	.L662	#,
 10111      FFFF
 10112              	.LVL641:
 10113              	.L714:
 842:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 10114              		.loc 1 842 5 is_stmt 1 view .LVU3514
 843:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 10115              		.loc 1 843 5 view .LVU3515
 10116              	# sieve_extend.c:842:     const counter_t copy_start  = source_start + size;
 842:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 10117              		.loc 1 842 21 is_stmt 0 view .LVU3516
 10118 3821 488D0432 		lea	rax, [rdx+rsi]	# copy_start,
 10119              	.LVL642:
 10120              	# sieve_extend.c:844:     const bitshift_t source_bit = bitindex_calc(source_start);
 844:sieve_extend.c **** 
 10121              		.loc 1 844 22 view .LVU3517
 10122 3825 4889F3   		mov	rbx, rsi	# source_bit, block$pattern_start
 10123              	# sieve_extend.c:843:     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 843:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 10124              		.loc 1 843 22 view .LVU3518
 10125 3828 83E03F   		and	eax, 63	# copy_bit,
 10126              	.LVL643:
 844:sieve_extend.c **** 
 10127              		.loc 1 844 5 is_stmt 1 view .LVU3519
 10128              	# sieve_extend.c:844:     const bitshift_t source_bit = bitindex_calc(source_start);
 844:sieve_extend.c **** 
 10129              		.loc 1 844 22 is_stmt 0 view .LVU3520
 10130 382b 83E33F   		and	ebx, 63	# source_bit,
 10131              	.LVL644:
 846:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 10132              		.loc 1 846 5 is_stmt 1 view .LVU3521
GAS LISTING /tmp/cctyCFAS.s 			page 279


 10133              	# sieve_extend.c:846:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 846:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 10134              		.loc 1 846 13 is_stmt 0 view .LVU3522
 10135 382e 4839D8   		cmp	rax, rbx	# copy_bit, source_bit
 10136              	# sieve_extend.c:846:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 846:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 10137              		.loc 1 846 37 view .LVU3523
 10138 3831 488B4C24 		mov	rcx, QWORD PTR 104[rsp]	#, %sfp
 10138      68
 10139 3836 488B7C24 		mov	rdi, QWORD PTR 48[rsp]	#, %sfp
 10139      30
 10140              	# sieve_extend.c:846:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 846:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 10141              		.loc 1 846 13 view .LVU3524
 10142 383b 0F82B717 		jb	.L1584	#,
 10142      0000
 847:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 10143              		.loc 1 847 10 is_stmt 1 view .LVU3525
 10144              	# sieve_extend.c:847:     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, so
 847:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 10145              		.loc 1 847 13 is_stmt 0 view .LVU3526
 10146 3841 0F86A717 		jbe	.L717	#,
 10146      0000
 847:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 10147              		.loc 1 847 37 is_stmt 1 view .LVU3527
 10148 3847 E874CBFF 		call	extendSieve_shiftright_ivdep	#
 10148      FF
 10149              	.LVL645:
 10150              	.L715:
 847:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 10151              		.loc 1 847 37 is_stmt 0 view .LVU3528
 10152              	.LBE541:
 10153              	.LBE544:
 982:sieve_extend.c **** 
 10154              		.loc 1 982 5 is_stmt 1 view .LVU3529
 985:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 10155              		.loc 1 985 5 view .LVU3530
 985:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 10156              		.loc 1 985 11 view .LVU3531
 10157 384c 488B7424 		mov	rsi, QWORD PTR 64[rsp]	# block$16, %sfp
 10157      40
 10158              	# sieve_extend.c:985:     for (;block_start <= sieve->bits; block_start += blocksize, block_stop +=
 985:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 10159              		.loc 1 985 31 is_stmt 0 view .LVU3532
 10160 3851 488B4C24 		mov	rcx, QWORD PTR 80[rsp]	# <retval>, %sfp
 10160      50
 10161 3856 48FFC6   		inc	rsi	# tmp1023
 10162              	# sieve_extend.c:973:     counter_t block_start   = 0;
 973:sieve_extend.c ****     counter_t block_stop    = blocksize-1;
 10163              		.loc 1 973 15 view .LVU3533
 10164 3859 48C74424 		mov	QWORD PTR 120[rsp], 0	# %sfp,
 10164      78000000 
 10164      00
 10165 3862 48897424 		mov	QWORD PTR 72[rsp], rsi	# %sfp, tmp1023
 10165      48
 10166              	# sieve_extend.c:985:     for (;block_start <= sieve->bits; block_start += blocksize, block_stop +=
 985:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
GAS LISTING /tmp/cctyCFAS.s 			page 280


 10167              		.loc 1 985 31 view .LVU3534
 10168 3867 488B4108 		mov	rax, QWORD PTR 8[rcx]	# _8, sieve_89->bits
 10169 386b 4C8B21   		mov	r12, QWORD PTR [rcx]	# pretmp_1655, MEM[(uint64_t * *)sieve_89]
 10170              	.LBB545:
 10171              	.LBB546:
 10172              	.LBB547:
 10173              	.LBB548:
 10174              	.LBB549:
 10175              	.LBB550:
 10176              	.LBB551:
 10177              	.LBB552:
 10178              	# sieve_extend.c:295:                 mask |= markmask(index);
 295:sieve_extend.c ****             bitarray[index_word] |= mask;
 10179              		.loc 1 295 25 view .LVU3535
 10180 386e 4C8B7C24 		mov	r15, QWORD PTR 24[rsp]	# block_stop, %sfp
 10180      18
 10181 3873 41BD0100 		mov	r13d, 1	# tmp1041,
 10181      0000
 10182              	.LVL646:
 10183 3879 0F1F8000 		.p2align 4,,10
 10183      000000
 10184              		.p2align 3
 10185              	.L721:
 295:sieve_extend.c ****             bitarray[index_word] |= mask;
 10186              		.loc 1 295 25 view .LVU3536
 10187              	.LBE552:
 10188              	.LBE551:
 10189              	.LBE550:
 10190              	.LBE549:
 10191              	.LBE548:
 10192              	.LBE547:
 10193              	.LBE546:
 10194              	.LBE545:
 986:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime);
 10195              		.loc 1 986 9 is_stmt 1 view .LVU3537
 10196              	.LBB639:
 10197              	.LBB640:
 10198              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10199              		.loc 1 124 21 is_stmt 0 view .LVU3538
 10200 3880 4C8B5424 		mov	r10, QWORD PTR 64[rsp]	# block$16, %sfp
 10200      40
 10201 3885 4939C7   		cmp	r15, rax	# block_stop, _8
 10202              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10203              		.loc 1 124 12 view .LVU3539
 10204 3888 4C8B7424 		mov	r14, QWORD PTR 48[rsp]	# _94, %sfp
 10204      30
 10205              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10206              		.loc 1 124 21 view .LVU3540
 10207 388d 4D89D0   		mov	r8, r10	# tmp801, block$16
 10208 3890 4C0F47F8 		cmova	r15, rax	# block_stop,, block_stop, _8
 10209              	.LVL647:
 124:sieve_extend.c ****     return index;
 10210              		.loc 1 124 21 view .LVU3541
 10211              	.LBE640:
GAS LISTING /tmp/cctyCFAS.s 			page 281


 10212              	.LBE639:
 987:sieve_extend.c ****         sieve_block_stripe(sieve, block_start, block_stop, prime);
 10213              		.loc 1 987 9 is_stmt 1 view .LVU3542
 10214              	.LBB642:
 10215              	.LBI639:
 123:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 10216              		.loc 1 123 25 view .LVU3543
 10217              	.LBB641:
 124:sieve_extend.c ****     return index;
 10218              		.loc 1 124 5 view .LVU3544
 124:sieve_extend.c ****     return index;
 10219              		.loc 1 124 11 view .LVU3545
 10220              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10221              		.loc 1 124 21 is_stmt 0 view .LVU3546
 10222 3894 49C1E806 		shr	r8, 6	# tmp801,
 10223              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10224              		.loc 1 124 12 view .LVU3547
 10225 3898 4B8B3CC6 		mov	rdi, QWORD PTR [r14+r8*8]	# *_1187, *_1187
 10226              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10227              		.loc 1 124 11 view .LVU3548
 10228 389c 4C0FA3D7 		bt	rdi, r10	# *_1187, tmp2189
 10229 38a0 0F83EC00 		jnc	.L718	#,
 10229      0000
 10230 38a6 488B5424 		mov	rdx, QWORD PTR 72[rsp]	# tmp1023, %sfp
 10230      48
 10231              	.L719:
 124:sieve_extend.c ****     return index;
 10232              		.loc 1 124 58 is_stmt 1 view .LVU3549
 10233              	.LVL648:
 10234              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10235              		.loc 1 124 21 is_stmt 0 view .LVU3550
 10236 38ab 4989D1   		mov	r9, rdx	# tmp806, tmp1023
 10237 38ae 49C1E906 		shr	r9, 6	# tmp806,
 10238              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10239              		.loc 1 124 12 view .LVU3551
 10240 38b2 4F8B1CCE 		mov	r11, QWORD PTR [r14+r9*8]	# *_34, *_34
 10241              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10242              		.loc 1 124 63 view .LVU3552
 10243 38b6 4889D6   		mov	rsi, rdx	# block$16, tmp1023
 124:sieve_extend.c ****     return index;
 10244              		.loc 1 124 11 is_stmt 1 view .LVU3553
 10245 38b9 490FA3D3 		bt	r11, rdx	# *_34, tmp1023
 10246 38bd 0F83BD00 		jnc	.L1501	#,
 10246      0000
 10247 38c3 488D5A01 		lea	rbx, 1[rdx]	# tmp1059,
 10248              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10249              		.loc 1 124 21 is_stmt 0 view .LVU3554
 10250 38c7 4889D9   		mov	rcx, rbx	# tmp1101, tmp1023
 10251 38ca 48C1E906 		shr	rcx, 6	# tmp1101,
 10252              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
GAS LISTING /tmp/cctyCFAS.s 			page 282


 124:sieve_extend.c ****     return index;
 10253              		.loc 1 124 12 view .LVU3555
 10254 38ce 4D8B14CE 		mov	r10, QWORD PTR [r14+rcx*8]	# *_34, *_34
 10255 38d2 4889DA   		mov	rdx, rbx	# tmp1023, tmp1059
 10256              	.LVL649:
 124:sieve_extend.c ****     return index;
 10257              		.loc 1 124 58 is_stmt 1 view .LVU3556
 10258              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10259              		.loc 1 124 11 is_stmt 0 view .LVU3557
 10260 38d5 490FA3DA 		bt	r10, rbx	# *_34, tmp1023
 10261              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10262              		.loc 1 124 63 view .LVU3558
 10263 38d9 4889DE   		mov	rsi, rbx	# block$16, tmp1023
 124:sieve_extend.c ****     return index;
 10264              		.loc 1 124 11 is_stmt 1 view .LVU3559
 10265 38dc 0F839E00 		jnc	.L1501	#,
 10265      0000
 10266 38e2 48FFC2   		inc	rdx	# tmp1023
 10267              	.LVL650:
 124:sieve_extend.c ****     return index;
 10268              		.loc 1 124 58 view .LVU3560
 10269              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10270              		.loc 1 124 21 is_stmt 0 view .LVU3561
 10271 38e5 4989D0   		mov	r8, rdx	# tmp1514, tmp1023
 10272 38e8 49C1E806 		shr	r8, 6	# tmp1514,
 10273              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10274              		.loc 1 124 12 view .LVU3562
 10275 38ec 4B8B3CC6 		mov	rdi, QWORD PTR [r14+r8*8]	# *_34, *_34
 10276              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10277              		.loc 1 124 63 view .LVU3563
 10278 38f0 4889D6   		mov	rsi, rdx	# block$16, tmp1023
 124:sieve_extend.c ****     return index;
 10279              		.loc 1 124 11 is_stmt 1 view .LVU3564
 10280 38f3 480FA3D7 		bt	rdi, rdx	# *_34, tmp1023
 10281 38f7 0F838300 		jnc	.L1501	#,
 10281      0000
 10282 38fd 488D5302 		lea	rdx, 2[rbx]	# tmp1023,
 10283              	.LVL651:
 124:sieve_extend.c ****     return index;
 10284              		.loc 1 124 58 view .LVU3565
 10285              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10286              		.loc 1 124 21 is_stmt 0 view .LVU3566
 10287 3901 4989D1   		mov	r9, rdx	# tmp1518, tmp1023
 10288 3904 49C1E906 		shr	r9, 6	# tmp1518,
 10289              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10290              		.loc 1 124 12 view .LVU3567
 10291 3908 4F8B1CCE 		mov	r11, QWORD PTR [r14+r9*8]	# *_34, *_34
 10292              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10293              		.loc 1 124 63 view .LVU3568
GAS LISTING /tmp/cctyCFAS.s 			page 283


 10294 390c 4889D6   		mov	rsi, rdx	# block$16, tmp1023
 124:sieve_extend.c ****     return index;
 10295              		.loc 1 124 11 is_stmt 1 view .LVU3569
 10296 390f 490FA3D3 		bt	r11, rdx	# *_34, tmp1023
 10297 3913 736B     		jnc	.L1501	#,
 10298 3915 488D5303 		lea	rdx, 3[rbx]	# tmp1023,
 10299              	.LVL652:
 124:sieve_extend.c ****     return index;
 10300              		.loc 1 124 58 view .LVU3570
 10301              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10302              		.loc 1 124 21 is_stmt 0 view .LVU3571
 10303 3919 4889D1   		mov	rcx, rdx	# tmp1522, tmp1023
 10304 391c 48C1E906 		shr	rcx, 6	# tmp1522,
 10305              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10306              		.loc 1 124 12 view .LVU3572
 10307 3920 4D8B14CE 		mov	r10, QWORD PTR [r14+rcx*8]	# *_34, *_34
 10308              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10309              		.loc 1 124 63 view .LVU3573
 10310 3924 4889D6   		mov	rsi, rdx	# block$16, tmp1023
 124:sieve_extend.c ****     return index;
 10311              		.loc 1 124 11 is_stmt 1 view .LVU3574
 10312 3927 490FA3D2 		bt	r10, rdx	# *_34, tmp1023
 10313 392b 7353     		jnc	.L1501	#,
 10314 392d 488D5304 		lea	rdx, 4[rbx]	# tmp1023,
 10315              	.LVL653:
 124:sieve_extend.c ****     return index;
 10316              		.loc 1 124 58 view .LVU3575
 10317              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10318              		.loc 1 124 21 is_stmt 0 view .LVU3576
 10319 3931 4989D0   		mov	r8, rdx	# tmp1526, tmp1023
 10320 3934 49C1E806 		shr	r8, 6	# tmp1526,
 10321              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10322              		.loc 1 124 12 view .LVU3577
 10323 3938 4B8B3CC6 		mov	rdi, QWORD PTR [r14+r8*8]	# *_34, *_34
 10324              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10325              		.loc 1 124 63 view .LVU3578
 10326 393c 4889D6   		mov	rsi, rdx	# block$16, tmp1023
 124:sieve_extend.c ****     return index;
 10327              		.loc 1 124 11 is_stmt 1 view .LVU3579
 10328 393f 480FA3D7 		bt	rdi, rdx	# *_34, tmp1023
 10329 3943 733B     		jnc	.L1501	#,
 10330 3945 488D5305 		lea	rdx, 5[rbx]	# tmp1023,
 10331              	.LVL654:
 124:sieve_extend.c ****     return index;
 10332              		.loc 1 124 58 view .LVU3580
 10333              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10334              		.loc 1 124 21 is_stmt 0 view .LVU3581
 10335 3949 4989D1   		mov	r9, rdx	# tmp1530, tmp1023
 10336 394c 49C1E906 		shr	r9, 6	# tmp1530,
 10337              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
GAS LISTING /tmp/cctyCFAS.s 			page 284


 124:sieve_extend.c ****     return index;
 10338              		.loc 1 124 12 view .LVU3582
 10339 3950 4F8B1CCE 		mov	r11, QWORD PTR [r14+r9*8]	# *_34, *_34
 10340              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10341              		.loc 1 124 63 view .LVU3583
 10342 3954 4889D6   		mov	rsi, rdx	# block$16, tmp1023
 124:sieve_extend.c ****     return index;
 10343              		.loc 1 124 11 is_stmt 1 view .LVU3584
 10344 3957 490FA3D3 		bt	r11, rdx	# *_34, tmp1023
 10345 395b 7323     		jnc	.L1501	#,
 10346 395d 488D5306 		lea	rdx, 6[rbx]	# tmp1023,
 10347              	.LVL655:
 124:sieve_extend.c ****     return index;
 10348              		.loc 1 124 58 view .LVU3585
 10349              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10350              		.loc 1 124 21 is_stmt 0 view .LVU3586
 10351 3961 4889D1   		mov	rcx, rdx	# tmp1534, tmp1023
 10352 3964 48C1E906 		shr	rcx, 6	# tmp1534,
 10353              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10354              		.loc 1 124 12 view .LVU3587
 10355 3968 4D8B14CE 		mov	r10, QWORD PTR [r14+rcx*8]	# *_34, *_34
 10356              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10357              		.loc 1 124 63 view .LVU3588
 10358 396c 4889D6   		mov	rsi, rdx	# block$16, tmp1023
 124:sieve_extend.c ****     return index;
 10359              		.loc 1 124 11 is_stmt 1 view .LVU3589
 10360 396f 490FA3D2 		bt	r10, rdx	# *_34, tmp1023
 10361 3973 730B     		jnc	.L1501	#,
 10362 3975 488D5307 		lea	rdx, 7[rbx]	# tmp1023,
 10363              	.LVL656:
 124:sieve_extend.c ****     return index;
 10364              		.loc 1 124 11 is_stmt 0 view .LVU3590
 10365 3979 E92DFFFF 		jmp	.L719	#
 10365      FF
 10366              	.LVL657:
 10367 397e 6690     		.p2align 4,,10
 10368              		.p2align 3
 10369              	.L1501:
 124:sieve_extend.c ****     return index;
 10370              		.loc 1 124 11 view .LVU3591
 10371 3980 48895424 		mov	QWORD PTR 72[rsp], rdx	# %sfp, tmp1023
 10371      48
 10372 3985 48FFC2   		inc	rdx	# tmp1023
 10373              	.LVL658:
 124:sieve_extend.c ****     return index;
 10374              		.loc 1 124 11 view .LVU3592
 10375 3988 48897424 		mov	QWORD PTR 64[rsp], rsi	# %sfp, block$16
 10375      40
 10376 398d 48895424 		mov	QWORD PTR 72[rsp], rdx	# %sfp, tmp1023
 10376      48
 10377              	.LVL659:
 10378              	.L718:
 125:sieve_extend.c **** }
GAS LISTING /tmp/cctyCFAS.s 			page 285


 10379              		.loc 1 125 5 is_stmt 1 view .LVU3593
 125:sieve_extend.c **** }
 10380              		.loc 1 125 5 is_stmt 0 view .LVU3594
 10381              	.LBE641:
 10382              	.LBE642:
 988:sieve_extend.c ****     } 
 10383              		.loc 1 988 9 is_stmt 1 view .LVU3595
 10384              	.LBB643:
 10385              	.LBI545:
 851:sieve_extend.c ****     counter_t prime = prime_start;
 10386              		.loc 1 851 13 view .LVU3596
 10387              	.LBB636:
 852:sieve_extend.c ****     counter_t start = prime * prime * 2 + prime * 2;
 10388              		.loc 1 852 5 view .LVU3597
 853:sieve_extend.c ****     counter_t step  = prime * 2 + 1;
 10389              		.loc 1 853 5 view .LVU3598
 10390              	# sieve_extend.c:853:     counter_t start = prime * prime * 2 + prime * 2;
 853:sieve_extend.c ****     counter_t step  = prime * 2 + 1;
 10391              		.loc 1 853 15 is_stmt 0 view .LVU3599
 10392 3992 4C8B7424 		mov	r14, QWORD PTR 72[rsp]	# tmp812, %sfp
 10392      48
 10393 3997 4C0FAF74 		imul	r14, QWORD PTR 64[rsp]	# tmp812, %sfp
 10393      2440
 10394 399d 4D01F6   		add	r14, r14	# index
 10395              	.LVL660:
 854:sieve_extend.c ****     bitword_t* bitarray = sieve->bitarray;
 10396              		.loc 1 854 5 is_stmt 1 view .LVU3600
 855:sieve_extend.c **** 
 10397              		.loc 1 855 5 view .LVU3601
 857:sieve_extend.c ****     
 10398              		.loc 1 857 5 view .LVU3602
 859:sieve_extend.c ****         step  = prime * 2 + 1;
 10399              		.loc 1 859 5 view .LVU3603
 859:sieve_extend.c ****         step  = prime * 2 + 1;
 10400              		.loc 1 859 11 view .LVU3604
 10401 39a0 4D39F7   		cmp	r15, r14	# block_stop, index
 10402 39a3 0F822704 		jb	.L725	#,
 10402      0000
 10403              	.LBB570:
 10404              	.LBB571:
 10405              	# sieve_extend.c:253:     const counter_t range_stop_word = wordindex(range_stop);
 253:sieve_extend.c ****     register counter_t copy_word = wordindex(range_start);
 10406              		.loc 1 253 21 is_stmt 0 view .LVU3605
 10407 39a9 4C89FB   		mov	rbx, r15	# range_stop_word, block_stop
 10408 39ac 48C1EB06 		shr	rbx, 6	# range_stop_word,
 10409              	# sieve_extend.c:276:     bitarray[copy_word] |= pattern & chopmask(range_stop);
 276:sieve_extend.c **** }
 10410              		.loc 1 276 38 view .LVU3606
 10411 39b0 4489F8   		mov	eax, r15d	# tmp813, block_stop
 10412 39b3 F7D0     		not	eax	# tmp813
 10413 39b5 49C7C0FF 		mov	r8, -1	# tmp2203,
 10413      FFFFFF
 10414 39bc 4C8D5BFF 		lea	r11, -1[rbx]	# tmp1034,
 10415 39c0 C4C2FBF7 		shrx	rdi, r8, rax	# _578, tmp2203, tmp813
 10415      F8
 10416              	# sieve_extend.c:253:     const counter_t range_stop_word = wordindex(range_stop);
 253:sieve_extend.c ****     register counter_t copy_word = wordindex(range_start);
GAS LISTING /tmp/cctyCFAS.s 			page 286


 10417              		.loc 1 253 21 view .LVU3607
 10418 39c5 48895C24 		mov	QWORD PTR 96[rsp], rbx	# %sfp, range_stop_word
 10418      60
 10419              	# sieve_extend.c:276:     bitarray[copy_word] |= pattern & chopmask(range_stop);
 276:sieve_extend.c **** }
 10420              		.loc 1 276 38 view .LVU3608
 10421 39ca 48897C24 		mov	QWORD PTR 112[rsp], rdi	# %sfp, _578
 10421      70
 10422 39cf 4C895C24 		mov	QWORD PTR 88[rsp], r11	# %sfp, tmp1034
 10422      58
 10423 39d4 488B7424 		mov	rsi, QWORD PTR 64[rsp]	# index, %sfp
 10423      40
 10424 39d9 4C897C24 		mov	QWORD PTR 104[rsp], r15	# %sfp, block_stop
 10424      68
 10425 39de 4D8D04DC 		lea	r8, [r12+rbx*8]	# range_stop_ptr,
 10426 39e2 4989DF   		mov	r15, rbx	# range_stop_word, range_stop_word
 10427              	.LVL661:
 276:sieve_extend.c **** }
 10428              		.loc 1 276 38 view .LVU3609
 10429 39e5 4C89F0   		mov	rax, r14	# index, index
 10430              	.LVL662:
 10431 39e8 0F1F8400 		.p2align 4,,10
 10431      00000000 
 10432              		.p2align 3
 10433              	.L735:
 276:sieve_extend.c **** }
 10434              		.loc 1 276 38 view .LVU3610
 10435              	.LBE571:
 10436              	.LBE570:
 860:sieve_extend.c ****         if (step > SMALLSTEP_FASTER) break;
 10437              		.loc 1 860 9 is_stmt 1 view .LVU3611
 10438              	# sieve_extend.c:860:         step  = prime * 2 + 1;
 860:sieve_extend.c ****         if (step > SMALLSTEP_FASTER) break;
 10439              		.loc 1 860 15 is_stmt 0 view .LVU3612
 10440 39f0 4C8D4C36 		lea	r9, 1[rsi+rsi]	# step,
 10440      01
 10441              	.LVL663:
 861:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 10442              		.loc 1 861 9 is_stmt 1 view .LVU3613
 10443              	# sieve_extend.c:861:         if (step > SMALLSTEP_FASTER) break;
 861:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 10444              		.loc 1 861 12 is_stmt 0 view .LVU3614
 10445 39f5 4C3B0D00 		cmp	r9, QWORD PTR global_SMALLSTEP_FASTER[rip]	# step, global_SMALLSTEP_FASTER
 10445      000000
 10446 39fc 0F871E04 		ja	.L1585	#,
 10446      0000
 862:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 10447              		.loc 1 862 9 is_stmt 1 view .LVU3615
 10448              	# sieve_extend.c:862:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 862:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 10449              		.loc 1 862 12 is_stmt 0 view .LVU3616
 10450 3a02 488B4C24 		mov	rcx, QWORD PTR 120[rsp]	# block_start, %sfp
 10450      78
 10451              	# sieve_extend.c:862:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 862:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 10452              		.loc 1 862 35 view .LVU3617
 10453 3a07 488D5E01 		lea	rbx, 1[rsi]	# _373,
GAS LISTING /tmp/cctyCFAS.s 			page 287


 10454              	# sieve_extend.c:862:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 862:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 10455              		.loc 1 862 12 view .LVU3618
 10456 3a0b 4839CB   		cmp	rbx, rcx	# _373, block_start
 10457 3a0e 7712     		ja	.L726	#,
 862:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 10458              		.loc 1 862 41 is_stmt 1 view .LVU3619
 10459              	# sieve_extend.c:862:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 862:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 10460              		.loc 1 862 61 is_stmt 0 view .LVU3620
 10461 3a10 488D040E 		lea	rax, [rsi+rcx]	# _374,
 10462              	.LVL664:
 10463              	# sieve_extend.c:862:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 862:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 10464              		.loc 1 862 102 view .LVU3621
 10465 3a14 31D2     		xor	edx, edx	# tmp819
 10466              	# sieve_extend.c:862:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 862:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 10467              		.loc 1 862 69 view .LVU3622
 10468 3a16 4801C6   		add	rsi, rax	# tmp817, _374
 10469              	# sieve_extend.c:862:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 862:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 10470              		.loc 1 862 102 view .LVU3623
 10471 3a19 49F7F1   		div	r9	# step
 10472              	.LVL665:
 10473              	# sieve_extend.c:862:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 862:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 10474              		.loc 1 862 47 view .LVU3624
 10475 3a1c 4889F0   		mov	rax, rsi	# tmp817, tmp817
 10476 3a1f 4829D0   		sub	rax, rdx	# tmp817, tmp819
 10477              	.LVL666:
 10478              	.L726:
 863:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1 );
 10479              		.loc 1 863 9 is_stmt 1 view .LVU3625
 10480              	.LBB576:
 10481              	.LBI570:
 245:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using smallstep (%ju occurances)
 10482              		.loc 1 245 20 view .LVU3626
 10483              	.LBB574:
 246:sieve_extend.c **** 
 10484              		.loc 1 246 5 view .LVU3627
 249:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize += patternsize) patte
 10485              		.loc 1 249 2 view .LVU3628
 250:sieve_extend.c **** 
 10486              		.loc 1 250 5 view .LVU3629
 10487              	.LBB572:
 250:sieve_extend.c **** 
 10488              		.loc 1 250 10 view .LVU3630
 250:sieve_extend.c **** 
 10489              		.loc 1 250 41 view .LVU3631
 10490              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 10491              		.loc 1 250 5 is_stmt 0 view .LVU3632
 10492 3a22 4983F940 		cmp	r9, 64	# step,
 10493 3a26 0F87E403 		ja	.L806	#,
 10493      0000
 10494 3a2c 4C89CE   		mov	rsi, r9	# patternsize, step
GAS LISTING /tmp/cctyCFAS.s 			page 288


 10495              	.LBE572:
 10496              	# sieve_extend.c:249: 	register bitword_t pattern = SAFE_SHIFTBIT;
 249:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize += patternsize) patte
 10497              		.loc 1 249 21 view .LVU3633
 10498 3a2f BF010000 		mov	edi, 1	# pattern,
 10498      00
 10499              	.LVL667:
 10500              	.L728:
 10501              	.LBB573:
 250:sieve_extend.c **** 
 10502              		.loc 1 250 95 is_stmt 1 view .LVU3634
 10503              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 10504              		.loc 1 250 79 is_stmt 0 view .LVU3635
 10505 3a34 4C8D3436 		lea	r14, [rsi+rsi]	# patternsize,
 10506              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 10507              		.loc 1 250 115 view .LVU3636
 10508 3a38 C462C9F7 		shlx	r10, rdi, rsi	# _522, pattern, patternsize
 10508      D7
 10509              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 10510              		.loc 1 250 103 view .LVU3637
 10511 3a3d 4C09D7   		or	rdi, r10	# pattern, _522
 10512              	.LVL668:
 250:sieve_extend.c **** 
 10513              		.loc 1 250 67 is_stmt 1 view .LVU3638
 250:sieve_extend.c **** 
 10514              		.loc 1 250 41 view .LVU3639
 10515              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 10516              		.loc 1 250 5 is_stmt 0 view .LVU3640
 10517 3a40 4983FE40 		cmp	r14, 64	# patternsize,
 10518 3a44 0F879E00 		ja	.L727	#,
 10518      0000
 250:sieve_extend.c **** 
 10519              		.loc 1 250 95 is_stmt 1 view .LVU3641
 10520              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 10521              		.loc 1 250 79 is_stmt 0 view .LVU3642
 10522 3a4a 488D0CB5 		lea	rcx, 0[0+rsi*4]	# patternsize,
 10522      00000000 
 10523              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 10524              		.loc 1 250 115 view .LVU3643
 10525 3a52 C46289F7 		shlx	r11, rdi, r14	# _522, pattern, patternsize
 10525      DF
 10526              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 10527              		.loc 1 250 103 view .LVU3644
 10528 3a57 4C09DF   		or	rdi, r11	# pattern, _522
 10529              	.LVL669:
 250:sieve_extend.c **** 
 10530              		.loc 1 250 67 is_stmt 1 view .LVU3645
 250:sieve_extend.c **** 
 10531              		.loc 1 250 41 view .LVU3646
 10532              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
GAS LISTING /tmp/cctyCFAS.s 			page 289


 250:sieve_extend.c **** 
 10533              		.loc 1 250 5 is_stmt 0 view .LVU3647
 10534 3a5a 4883F940 		cmp	rcx, 64	# patternsize,
 10535 3a5e 0F878400 		ja	.L727	#,
 10535      0000
 250:sieve_extend.c **** 
 10536              		.loc 1 250 95 is_stmt 1 view .LVU3648
 10537              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 10538              		.loc 1 250 79 is_stmt 0 view .LVU3649
 10539 3a64 4C8D14F5 		lea	r10, 0[0+rsi*8]	# patternsize,
 10539      00000000 
 10540              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 10541              		.loc 1 250 115 view .LVU3650
 10542 3a6c C4E2F1F7 		shlx	rdx, rdi, rcx	# _522, pattern, patternsize
 10542      D7
 10543              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 10544              		.loc 1 250 103 view .LVU3651
 10545 3a71 4809D7   		or	rdi, rdx	# pattern, _522
 10546              	.LVL670:
 250:sieve_extend.c **** 
 10547              		.loc 1 250 67 is_stmt 1 view .LVU3652
 250:sieve_extend.c **** 
 10548              		.loc 1 250 41 view .LVU3653
 10549              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 10550              		.loc 1 250 5 is_stmt 0 view .LVU3654
 10551 3a74 4983FA40 		cmp	r10, 64	# patternsize,
 10552 3a78 776E     		ja	.L727	#,
 250:sieve_extend.c **** 
 10553              		.loc 1 250 95 is_stmt 1 view .LVU3655
 10554              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 10555              		.loc 1 250 79 is_stmt 0 view .LVU3656
 10556 3a7a 4989F3   		mov	r11, rsi	# patternsize, patternsize
 10557 3a7d 49C1E304 		sal	r11, 4	# patternsize,
 10558              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 10559              		.loc 1 250 115 view .LVU3657
 10560 3a81 C462A9F7 		shlx	r14, rdi, r10	# _522, pattern, patternsize
 10560      F7
 10561              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 10562              		.loc 1 250 103 view .LVU3658
 10563 3a86 4C09F7   		or	rdi, r14	# pattern, _522
 10564              	.LVL671:
 250:sieve_extend.c **** 
 10565              		.loc 1 250 67 is_stmt 1 view .LVU3659
 250:sieve_extend.c **** 
 10566              		.loc 1 250 41 view .LVU3660
 10567              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 10568              		.loc 1 250 5 is_stmt 0 view .LVU3661
 10569 3a89 4983FB40 		cmp	r11, 64	# patternsize,
 10570 3a8d 7759     		ja	.L727	#,
GAS LISTING /tmp/cctyCFAS.s 			page 290


 250:sieve_extend.c **** 
 10571              		.loc 1 250 95 is_stmt 1 view .LVU3662
 10572              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 10573              		.loc 1 250 79 is_stmt 0 view .LVU3663
 10574 3a8f 4889F2   		mov	rdx, rsi	# patternsize, patternsize
 10575 3a92 48C1E205 		sal	rdx, 5	# patternsize,
 10576              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 10577              		.loc 1 250 115 view .LVU3664
 10578 3a96 C4E2A1F7 		shlx	rcx, rdi, r11	# _522, pattern, patternsize
 10578      CF
 10579              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 10580              		.loc 1 250 103 view .LVU3665
 10581 3a9b 4809CF   		or	rdi, rcx	# pattern, _522
 10582              	.LVL672:
 250:sieve_extend.c **** 
 10583              		.loc 1 250 67 is_stmt 1 view .LVU3666
 250:sieve_extend.c **** 
 10584              		.loc 1 250 41 view .LVU3667
 10585              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 10586              		.loc 1 250 5 is_stmt 0 view .LVU3668
 10587 3a9e 4883FA40 		cmp	rdx, 64	# patternsize,
 10588 3aa2 7744     		ja	.L727	#,
 250:sieve_extend.c **** 
 10589              		.loc 1 250 95 is_stmt 1 view .LVU3669
 10590              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 10591              		.loc 1 250 79 is_stmt 0 view .LVU3670
 10592 3aa4 4989F6   		mov	r14, rsi	# patternsize, patternsize
 10593 3aa7 49C1E606 		sal	r14, 6	# patternsize,
 10594              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 10595              		.loc 1 250 115 view .LVU3671
 10596 3aab C462E9F7 		shlx	r10, rdi, rdx	# _522, pattern, patternsize
 10596      D7
 10597              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 10598              		.loc 1 250 103 view .LVU3672
 10599 3ab0 4C09D7   		or	rdi, r10	# pattern, _522
 10600              	.LVL673:
 250:sieve_extend.c **** 
 10601              		.loc 1 250 67 is_stmt 1 view .LVU3673
 250:sieve_extend.c **** 
 10602              		.loc 1 250 41 view .LVU3674
 10603              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 10604              		.loc 1 250 5 is_stmt 0 view .LVU3675
 10605 3ab3 4983FE40 		cmp	r14, 64	# patternsize,
 10606 3ab7 772F     		ja	.L727	#,
 250:sieve_extend.c **** 
 10607              		.loc 1 250 95 is_stmt 1 view .LVU3676
 10608              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 10609              		.loc 1 250 79 is_stmt 0 view .LVU3677
GAS LISTING /tmp/cctyCFAS.s 			page 291


 10610 3ab9 4889F1   		mov	rcx, rsi	# patternsize, patternsize
 10611 3abc 48C1E107 		sal	rcx, 7	# patternsize,
 10612              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 10613              		.loc 1 250 115 view .LVU3678
 10614 3ac0 C46289F7 		shlx	r11, rdi, r14	# _522, pattern, patternsize
 10614      DF
 10615              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 10616              		.loc 1 250 103 view .LVU3679
 10617 3ac5 4C09DF   		or	rdi, r11	# pattern, _522
 10618              	.LVL674:
 250:sieve_extend.c **** 
 10619              		.loc 1 250 67 is_stmt 1 view .LVU3680
 250:sieve_extend.c **** 
 10620              		.loc 1 250 41 view .LVU3681
 10621              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 10622              		.loc 1 250 5 is_stmt 0 view .LVU3682
 10623 3ac8 4883F940 		cmp	rcx, 64	# patternsize,
 10624 3acc 771A     		ja	.L727	#,
 250:sieve_extend.c **** 
 10625              		.loc 1 250 95 is_stmt 1 view .LVU3683
 10626              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 10627              		.loc 1 250 79 is_stmt 0 view .LVU3684
 10628 3ace 48C1E608 		sal	rsi, 8	# patternsize,
 10629              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 10630              		.loc 1 250 115 view .LVU3685
 10631 3ad2 C4E2F1F7 		shlx	rdx, rdi, rcx	# _522, pattern, patternsize
 10631      D7
 10632              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 10633              		.loc 1 250 103 view .LVU3686
 10634 3ad7 4809D7   		or	rdi, rdx	# pattern, _522
 10635              	.LVL675:
 250:sieve_extend.c **** 
 10636              		.loc 1 250 67 is_stmt 1 view .LVU3687
 250:sieve_extend.c **** 
 10637              		.loc 1 250 41 view .LVU3688
 10638              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 10639              		.loc 1 250 5 is_stmt 0 view .LVU3689
 10640 3ada 4883FE40 		cmp	rsi, 64	# patternsize,
 10641 3ade 0F8650FF 		jbe	.L728	#,
 10641      FFFF
 10642              	.LVL676:
 10643              		.p2align 4,,10
 10644 3ae4 0F1F4000 		.p2align 3
 10645              	.L727:
 250:sieve_extend.c **** 
 10646              		.loc 1 250 5 view .LVU3690
 10647              	.LBE573:
 253:sieve_extend.c ****     register counter_t copy_word = wordindex(range_start);
 10648              		.loc 1 253 5 is_stmt 1 view .LVU3691
 254:sieve_extend.c ****      if (copy_word == range_stop_word) { // shortcut
GAS LISTING /tmp/cctyCFAS.s 			page 292


 10649              		.loc 1 254 5 view .LVU3692
 10650              	# sieve_extend.c:254:     register counter_t copy_word = wordindex(range_start);
 254:sieve_extend.c ****      if (copy_word == range_stop_word) { // shortcut
 10651              		.loc 1 254 24 is_stmt 0 view .LVU3693
 10652 3ae8 4989C6   		mov	r14, rax	# copy_word, index
 10653 3aeb 49C1EE06 		shr	r14, 6	# copy_word,
 10654              	.LVL677:
 255:sieve_extend.c ****        bitarray[copy_word] |= ((pattern << bitindex(range_start)) & chopmask(range_stop));
 10655              		.loc 1 255 6 is_stmt 1 view .LVU3694
 10656 3aef 4A8D34F5 		lea	rsi, 0[0+r14*8]	# _1696,
 10656      00000000 
 10657 3af7 498D0C34 		lea	rcx, [r12+rsi]	# _1697,
 10658 3afb 488B11   		mov	rdx, QWORD PTR [rcx]	# pretmp_1698, *_1697
 10659 3afe C462F9F7 		shlx	r10, rdi, rax	# _1700, pattern, index
 10659      D7
 10660              	# sieve_extend.c:255:      if (copy_word == range_stop_word) { // shortcut
 255:sieve_extend.c ****        bitarray[copy_word] |= ((pattern << bitindex(range_start)) & chopmask(range_stop));
 10661              		.loc 1 255 9 is_stmt 0 view .LVU3695
 10662 3b03 4D39F7   		cmp	r15, r14	# range_stop_word, copy_word
 10663 3b06 0F84F402 		je	.L1586	#,
 10663      0000
 260:sieve_extend.c **** 
 10664              		.loc 1 260 5 is_stmt 1 view .LVU3696
 10665              	# sieve_extend.c:260:     bitarray[copy_word++] |= (pattern << bitindex(range_start));
 260:sieve_extend.c **** 
 10666              		.loc 1 260 27 is_stmt 0 view .LVU3697
 10667 3b0c 4C09D2   		or	rdx, r10	# tmp825, _1700
 10668 3b0f 488911   		mov	QWORD PTR [rcx], rdx	# *_1697, tmp825
 10669              	# sieve_extend.c:264:     pattern = (pattern << (bitindex_calc(range_start) % step)); // correct fo
 264:sieve_extend.c ****     register bitshift_t pattern_shift = WORD_SIZE_bitshift % step;
 10670              		.loc 1 264 28 view .LVU3698
 10671 3b12 83E03F   		and	eax, 63	# tmp826,
 10672              	.LVL678:
 10673              	# sieve_extend.c:264:     pattern = (pattern << (bitindex_calc(range_start) % step)); // correct fo
 264:sieve_extend.c ****     register bitshift_t pattern_shift = WORD_SIZE_bitshift % step;
 10674              		.loc 1 264 55 view .LVU3699
 10675 3b15 31D2     		xor	edx, edx	# tmp828
 10676 3b17 49F7F1   		div	r9	# step
 10677              	# sieve_extend.c:265:     register bitshift_t pattern_shift = WORD_SIZE_bitshift % step;
 265:sieve_extend.c ****     register bitshift_t pattern_shift_flipped = WORD_SIZE_bitshift - pattern_shift - pattern_shift;
 10678              		.loc 1 265 25 view .LVU3700
 10679 3b1a B8400000 		mov	eax, 64	# tmp833,
 10679      00
 10680              	# sieve_extend.c:260:     bitarray[copy_word++] |= (pattern << bitindex(range_start));
 260:sieve_extend.c **** 
 10681              		.loc 1 260 23 view .LVU3701
 10682 3b1f 4D8D5E01 		lea	r11, 1[r14]	# copy_word,
 10683              	.LVL679:
 264:sieve_extend.c ****     register bitshift_t pattern_shift = WORD_SIZE_bitshift % step;
 10684              		.loc 1 264 5 is_stmt 1 view .LVU3702
 10685              	# sieve_extend.c:264:     pattern = (pattern << (bitindex_calc(range_start) % step)); // correct fo
 264:sieve_extend.c ****     register bitshift_t pattern_shift = WORD_SIZE_bitshift % step;
 10686              		.loc 1 264 13 is_stmt 0 view .LVU3703
 10687 3b23 C4E2E9F7 		shlx	rcx, rdi, rdx	# pattern, pattern, tmp828
 10687      CF
 10688              	.LVL680:
 265:sieve_extend.c ****     register bitshift_t pattern_shift_flipped = WORD_SIZE_bitshift - pattern_shift - pattern_shift;
GAS LISTING /tmp/cctyCFAS.s 			page 293


 10689              		.loc 1 265 5 is_stmt 1 view .LVU3704
 10690              	# sieve_extend.c:265:     register bitshift_t pattern_shift = WORD_SIZE_bitshift % step;
 265:sieve_extend.c ****     register bitshift_t pattern_shift_flipped = WORD_SIZE_bitshift - pattern_shift - pattern_shift;
 10691              		.loc 1 265 25 is_stmt 0 view .LVU3705
 10692 3b28 31D2     		xor	edx, edx	# tmp832
 10693              	.LVL681:
 265:sieve_extend.c ****     register bitshift_t pattern_shift_flipped = WORD_SIZE_bitshift - pattern_shift - pattern_shift;
 10694              		.loc 1 265 25 view .LVU3706
 10695 3b2a 49F7F1   		div	r9	# step
 10696              	# sieve_extend.c:266:     register bitshift_t pattern_shift_flipped = WORD_SIZE_bitshift - pattern_
 266:sieve_extend.c ****     // copy_word++;
 10697              		.loc 1 266 84 view .LVU3707
 10698 3b2d B8200000 		mov	eax, 32	# tmp834,
 10698      00
 10699 3b32 4829D0   		sub	rax, rdx	# tmp834, tmp832
 10700              	# sieve_extend.c:266:     register bitshift_t pattern_shift_flipped = WORD_SIZE_bitshift - pattern_
 266:sieve_extend.c ****     // copy_word++;
 10701              		.loc 1 266 25 view .LVU3708
 10702 3b35 4801C0   		add	rax, rax	# pattern_shift_flipped
 10703              	# sieve_extend.c:265:     register bitshift_t pattern_shift = WORD_SIZE_bitshift % step;
 265:sieve_extend.c ****     register bitshift_t pattern_shift_flipped = WORD_SIZE_bitshift - pattern_shift - pattern_shift;
 10704              		.loc 1 265 25 view .LVU3709
 10705 3b38 4989D2   		mov	r10, rdx	# tmp832, tmp832
 10706              	.LVL682:
 266:sieve_extend.c ****     // copy_word++;
 10707              		.loc 1 266 5 is_stmt 1 view .LVU3710
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 10708              		.loc 1 270 5 view .LVU3711
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 10709              		.loc 1 270 11 view .LVU3712
 10710 3b3b 4189D1   		mov	r9d, edx	# _1928, tmp832
 10711              	.LVL683:
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 10712              		.loc 1 270 11 is_stmt 0 view .LVU3713
 10713 3b3e 89C7     		mov	edi, eax	# _1929, pattern_shift_flipped
 10714              	# sieve_extend.c:270:     for (;copy_word < range_stop_word; copy_word++) {
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 10715              		.loc 1 270 5 view .LVU3714
 10716 3b40 4D39DF   		cmp	r15, r11	# range_stop_word, copy_word
 10717 3b43 0F867801 		jbe	.L731	#,
 10717      0000
 10718 3b49 498D5434 		lea	rdx, 8[r12+rsi]	# ivtmp.557,
 10718      08
 10719              	.LVL684:
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 10720              		.loc 1 270 5 view .LVU3715
 10721 3b4e 4C89C6   		mov	rsi, r8	# tmp1054, range_stop_ptr
 10722 3b51 4829D6   		sub	rsi, rdx	# tmp1054, ivtmp.557
 10723 3b54 4883EE08 		sub	rsi, 8	# tmp1055,
 10724 3b58 48C1EE03 		shr	rsi, 3	# tmp1053,
 10725 3b5c 48FFC6   		inc	rsi	# tmp1056
 10726 3b5f 83E607   		and	esi, 7	# tmp1057,
 10727 3b62 0F84BD00 		je	.L732	#,
 10727      0000
 10728 3b68 4883FE01 		cmp	rsi, 1	# tmp1057,
 10729 3b6c 0F849600 		je	.L1138	#,
 10729      0000
GAS LISTING /tmp/cctyCFAS.s 			page 294


 10730 3b72 4883FE02 		cmp	rsi, 2	# tmp1057,
 10731 3b76 747C     		je	.L1139	#,
 10732 3b78 4883FE03 		cmp	rsi, 3	# tmp1057,
 10733 3b7c 7462     		je	.L1140	#,
 10734 3b7e 4883FE04 		cmp	rsi, 4	# tmp1057,
 10735 3b82 7448     		je	.L1141	#,
 10736 3b84 4883FE05 		cmp	rsi, 5	# tmp1057,
 10737 3b88 742E     		je	.L1142	#,
 10738 3b8a 4883FE06 		cmp	rsi, 6	# tmp1057,
 10739 3b8e 7414     		je	.L1143	#,
 10740              	.LVL685:
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10741              		.loc 1 271 9 is_stmt 1 view .LVU3716
 10742              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10743              		.loc 1 271 28 is_stmt 0 view .LVU3717
 10744 3b90 C4E2B3F7 		shrx	rsi, rcx, r9	# _555, pattern, _1928
 10744      F1
 10745              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10746              		.loc 1 271 57 view .LVU3718
 10747 3b95 C4E2C1F7 		shlx	rcx, rcx, rdi	# _557, pattern, _1929
 10747      C9
 10748              	.LVL686:
 10749              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10750              		.loc 1 271 17 view .LVU3719
 10751 3b9a 4809F1   		or	rcx, rsi	# pattern, _555
 10752              	.LVL687:
 272:sieve_extend.c ****     } 
 10753              		.loc 1 272 9 is_stmt 1 view .LVU3720
 10754              	# sieve_extend.c:272:         bitarray[copy_word] |= pattern;
 272:sieve_extend.c ****     } 
 10755              		.loc 1 272 29 is_stmt 0 view .LVU3721
 10756 3b9d 48090A   		or	QWORD PTR [rdx], rcx	# MEM[base: _1802, offset: 0B], pattern
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 10757              		.loc 1 270 40 is_stmt 1 view .LVU3722
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 10758              		.loc 1 270 11 view .LVU3723
 10759 3ba0 4883C208 		add	rdx, 8	# ivtmp.557,
 10760              	.LVL688:
 10761              	.L1143:
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10762              		.loc 1 271 9 view .LVU3724
 10763              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10764              		.loc 1 271 28 is_stmt 0 view .LVU3725
 10765 3ba4 C4E2B3F7 		shrx	rsi, rcx, r9	# _555, pattern, _1928
 10765      F1
 10766              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10767              		.loc 1 271 57 view .LVU3726
 10768 3ba9 C4E2C1F7 		shlx	rcx, rcx, rdi	# _557, pattern, _1929
 10768      C9
 10769              	.LVL689:
 10770              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
GAS LISTING /tmp/cctyCFAS.s 			page 295


 10771              		.loc 1 271 17 view .LVU3727
 10772 3bae 4809F1   		or	rcx, rsi	# pattern, _555
 10773              	.LVL690:
 272:sieve_extend.c ****     } 
 10774              		.loc 1 272 9 is_stmt 1 view .LVU3728
 10775              	# sieve_extend.c:272:         bitarray[copy_word] |= pattern;
 272:sieve_extend.c ****     } 
 10776              		.loc 1 272 29 is_stmt 0 view .LVU3729
 10777 3bb1 48090A   		or	QWORD PTR [rdx], rcx	# MEM[base: _1802, offset: 0B], pattern
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 10778              		.loc 1 270 40 is_stmt 1 view .LVU3730
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 10779              		.loc 1 270 11 view .LVU3731
 10780 3bb4 4883C208 		add	rdx, 8	# ivtmp.557,
 10781              	.LVL691:
 10782              	.L1142:
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10783              		.loc 1 271 9 view .LVU3732
 10784              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10785              		.loc 1 271 28 is_stmt 0 view .LVU3733
 10786 3bb8 C4E2B3F7 		shrx	rsi, rcx, r9	# _555, pattern, _1928
 10786      F1
 10787              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10788              		.loc 1 271 57 view .LVU3734
 10789 3bbd C4E2C1F7 		shlx	rcx, rcx, rdi	# _557, pattern, _1929
 10789      C9
 10790              	.LVL692:
 10791              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10792              		.loc 1 271 17 view .LVU3735
 10793 3bc2 4809F1   		or	rcx, rsi	# pattern, _555
 10794              	.LVL693:
 272:sieve_extend.c ****     } 
 10795              		.loc 1 272 9 is_stmt 1 view .LVU3736
 10796              	# sieve_extend.c:272:         bitarray[copy_word] |= pattern;
 272:sieve_extend.c ****     } 
 10797              		.loc 1 272 29 is_stmt 0 view .LVU3737
 10798 3bc5 48090A   		or	QWORD PTR [rdx], rcx	# MEM[base: _1802, offset: 0B], pattern
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 10799              		.loc 1 270 40 is_stmt 1 view .LVU3738
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 10800              		.loc 1 270 11 view .LVU3739
 10801 3bc8 4883C208 		add	rdx, 8	# ivtmp.557,
 10802              	.LVL694:
 10803              	.L1141:
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10804              		.loc 1 271 9 view .LVU3740
 10805              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10806              		.loc 1 271 28 is_stmt 0 view .LVU3741
 10807 3bcc C4E2B3F7 		shrx	rsi, rcx, r9	# _555, pattern, _1928
 10807      F1
 10808              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10809              		.loc 1 271 57 view .LVU3742
GAS LISTING /tmp/cctyCFAS.s 			page 296


 10810 3bd1 C4E2C1F7 		shlx	rcx, rcx, rdi	# _557, pattern, _1929
 10810      C9
 10811              	.LVL695:
 10812              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10813              		.loc 1 271 17 view .LVU3743
 10814 3bd6 4809F1   		or	rcx, rsi	# pattern, _555
 10815              	.LVL696:
 272:sieve_extend.c ****     } 
 10816              		.loc 1 272 9 is_stmt 1 view .LVU3744
 10817              	# sieve_extend.c:272:         bitarray[copy_word] |= pattern;
 272:sieve_extend.c ****     } 
 10818              		.loc 1 272 29 is_stmt 0 view .LVU3745
 10819 3bd9 48090A   		or	QWORD PTR [rdx], rcx	# MEM[base: _1802, offset: 0B], pattern
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 10820              		.loc 1 270 40 is_stmt 1 view .LVU3746
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 10821              		.loc 1 270 11 view .LVU3747
 10822 3bdc 4883C208 		add	rdx, 8	# ivtmp.557,
 10823              	.LVL697:
 10824              	.L1140:
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10825              		.loc 1 271 9 view .LVU3748
 10826              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10827              		.loc 1 271 28 is_stmt 0 view .LVU3749
 10828 3be0 C4E2B3F7 		shrx	rsi, rcx, r9	# _555, pattern, _1928
 10828      F1
 10829              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10830              		.loc 1 271 57 view .LVU3750
 10831 3be5 C4E2C1F7 		shlx	rcx, rcx, rdi	# _557, pattern, _1929
 10831      C9
 10832              	.LVL698:
 10833              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10834              		.loc 1 271 17 view .LVU3751
 10835 3bea 4809F1   		or	rcx, rsi	# pattern, _555
 10836              	.LVL699:
 272:sieve_extend.c ****     } 
 10837              		.loc 1 272 9 is_stmt 1 view .LVU3752
 10838              	# sieve_extend.c:272:         bitarray[copy_word] |= pattern;
 272:sieve_extend.c ****     } 
 10839              		.loc 1 272 29 is_stmt 0 view .LVU3753
 10840 3bed 48090A   		or	QWORD PTR [rdx], rcx	# MEM[base: _1802, offset: 0B], pattern
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 10841              		.loc 1 270 40 is_stmt 1 view .LVU3754
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 10842              		.loc 1 270 11 view .LVU3755
 10843 3bf0 4883C208 		add	rdx, 8	# ivtmp.557,
 10844              	.LVL700:
 10845              	.L1139:
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10846              		.loc 1 271 9 view .LVU3756
 10847              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10848              		.loc 1 271 28 is_stmt 0 view .LVU3757
GAS LISTING /tmp/cctyCFAS.s 			page 297


 10849 3bf4 C4E2B3F7 		shrx	rsi, rcx, r9	# _555, pattern, _1928
 10849      F1
 10850              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10851              		.loc 1 271 57 view .LVU3758
 10852 3bf9 C4E2C1F7 		shlx	rcx, rcx, rdi	# _557, pattern, _1929
 10852      C9
 10853              	.LVL701:
 10854              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10855              		.loc 1 271 17 view .LVU3759
 10856 3bfe 4809F1   		or	rcx, rsi	# pattern, _555
 10857              	.LVL702:
 272:sieve_extend.c ****     } 
 10858              		.loc 1 272 9 is_stmt 1 view .LVU3760
 10859              	# sieve_extend.c:272:         bitarray[copy_word] |= pattern;
 272:sieve_extend.c ****     } 
 10860              		.loc 1 272 29 is_stmt 0 view .LVU3761
 10861 3c01 48090A   		or	QWORD PTR [rdx], rcx	# MEM[base: _1802, offset: 0B], pattern
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 10862              		.loc 1 270 40 is_stmt 1 view .LVU3762
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 10863              		.loc 1 270 11 view .LVU3763
 10864 3c04 4883C208 		add	rdx, 8	# ivtmp.557,
 10865              	.LVL703:
 10866              	.L1138:
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10867              		.loc 1 271 9 view .LVU3764
 10868              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10869              		.loc 1 271 28 is_stmt 0 view .LVU3765
 10870 3c08 C4E2B3F7 		shrx	rsi, rcx, r9	# _555, pattern, _1928
 10870      F1
 10871              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10872              		.loc 1 271 57 view .LVU3766
 10873 3c0d C4E2C1F7 		shlx	rcx, rcx, rdi	# _557, pattern, _1929
 10873      C9
 10874              	.LVL704:
 10875              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10876              		.loc 1 271 17 view .LVU3767
 10877 3c12 4809F1   		or	rcx, rsi	# pattern, _555
 10878              	.LVL705:
 272:sieve_extend.c ****     } 
 10879              		.loc 1 272 9 is_stmt 1 view .LVU3768
 10880              	# sieve_extend.c:272:         bitarray[copy_word] |= pattern;
 272:sieve_extend.c ****     } 
 10881              		.loc 1 272 29 is_stmt 0 view .LVU3769
 10882 3c15 48090A   		or	QWORD PTR [rdx], rcx	# MEM[base: _1802, offset: 0B], pattern
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 10883              		.loc 1 270 40 is_stmt 1 view .LVU3770
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 10884              		.loc 1 270 11 view .LVU3771
 10885 3c18 4883C208 		add	rdx, 8	# ivtmp.557,
 10886              	# sieve_extend.c:270:     for (;copy_word < range_stop_word; copy_word++) {
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
GAS LISTING /tmp/cctyCFAS.s 			page 298


 10887              		.loc 1 270 5 is_stmt 0 view .LVU3772
 10888 3c1c 4939D0   		cmp	r8, rdx	# range_stop_ptr, ivtmp.557
 10889 3c1f 0F849400 		je	.L1365	#,
 10889      0000
 10890              	.LVL706:
 10891              	.L732:
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10892              		.loc 1 271 9 is_stmt 1 view .LVU3773
 10893              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10894              		.loc 1 271 28 is_stmt 0 view .LVU3774
 10895 3c25 C4E2B3F7 		shrx	rsi, rcx, r9	# _555, pattern, _1928
 10895      F1
 10896              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10897              		.loc 1 271 57 view .LVU3775
 10898 3c2a C4E2C1F7 		shlx	rcx, rcx, rdi	# _557, pattern, _1929
 10898      C9
 10899              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10900              		.loc 1 271 17 view .LVU3776
 10901 3c2f 4809CE   		or	rsi, rcx	# pattern, _557
 272:sieve_extend.c ****     } 
 10902              		.loc 1 272 9 is_stmt 1 view .LVU3777
 10903              	# sieve_extend.c:272:         bitarray[copy_word] |= pattern;
 272:sieve_extend.c ****     } 
 10904              		.loc 1 272 29 is_stmt 0 view .LVU3778
 10905 3c32 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: _1802, offset: 0B], pattern
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 10906              		.loc 1 270 40 is_stmt 1 view .LVU3779
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 10907              		.loc 1 270 11 view .LVU3780
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10908              		.loc 1 271 9 view .LVU3781
 10909              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10910              		.loc 1 271 28 is_stmt 0 view .LVU3782
 10911 3c35 C4E2B3F7 		shrx	rcx, rsi, r9	# _555, pattern, _1928
 10911      CE
 10912              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10913              		.loc 1 271 57 view .LVU3783
 10914 3c3a C4E2C1F7 		shlx	rsi, rsi, rdi	# _557, pattern, _1929
 10914      F6
 10915              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10916              		.loc 1 271 17 view .LVU3784
 10917 3c3f 4809F1   		or	rcx, rsi	# pattern, _557
 272:sieve_extend.c ****     } 
 10918              		.loc 1 272 9 is_stmt 1 view .LVU3785
 10919              	# sieve_extend.c:272:         bitarray[copy_word] |= pattern;
 272:sieve_extend.c ****     } 
 10920              		.loc 1 272 29 is_stmt 0 view .LVU3786
 10921 3c42 48094A08 		or	QWORD PTR 8[rdx], rcx	# MEM[base: _1802, offset: 0B], pattern
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 10922              		.loc 1 270 40 is_stmt 1 view .LVU3787
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
GAS LISTING /tmp/cctyCFAS.s 			page 299


 10923              		.loc 1 270 11 view .LVU3788
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10924              		.loc 1 271 9 view .LVU3789
 10925              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10926              		.loc 1 271 28 is_stmt 0 view .LVU3790
 10927 3c46 C4E2B3F7 		shrx	rsi, rcx, r9	# _555, pattern, _1928
 10927      F1
 10928              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10929              		.loc 1 271 57 view .LVU3791
 10930 3c4b C4E2C1F7 		shlx	rcx, rcx, rdi	# _557, pattern, _1929
 10930      C9
 10931              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10932              		.loc 1 271 17 view .LVU3792
 10933 3c50 4809CE   		or	rsi, rcx	# pattern, _557
 272:sieve_extend.c ****     } 
 10934              		.loc 1 272 9 is_stmt 1 view .LVU3793
 10935              	# sieve_extend.c:272:         bitarray[copy_word] |= pattern;
 272:sieve_extend.c ****     } 
 10936              		.loc 1 272 29 is_stmt 0 view .LVU3794
 10937 3c53 48097210 		or	QWORD PTR 16[rdx], rsi	# MEM[base: _1802, offset: 0B], pattern
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 10938              		.loc 1 270 40 is_stmt 1 view .LVU3795
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 10939              		.loc 1 270 11 view .LVU3796
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10940              		.loc 1 271 9 view .LVU3797
 10941              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10942              		.loc 1 271 28 is_stmt 0 view .LVU3798
 10943 3c57 C4E2B3F7 		shrx	rcx, rsi, r9	# _555, pattern, _1928
 10943      CE
 10944              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10945              		.loc 1 271 57 view .LVU3799
 10946 3c5c C4E2C1F7 		shlx	rsi, rsi, rdi	# _557, pattern, _1929
 10946      F6
 10947              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10948              		.loc 1 271 17 view .LVU3800
 10949 3c61 4809F1   		or	rcx, rsi	# pattern, _557
 272:sieve_extend.c ****     } 
 10950              		.loc 1 272 9 is_stmt 1 view .LVU3801
 10951              	# sieve_extend.c:272:         bitarray[copy_word] |= pattern;
 272:sieve_extend.c ****     } 
 10952              		.loc 1 272 29 is_stmt 0 view .LVU3802
 10953 3c64 48094A18 		or	QWORD PTR 24[rdx], rcx	# MEM[base: _1802, offset: 0B], pattern
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 10954              		.loc 1 270 40 is_stmt 1 view .LVU3803
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 10955              		.loc 1 270 11 view .LVU3804
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10956              		.loc 1 271 9 view .LVU3805
 10957              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
GAS LISTING /tmp/cctyCFAS.s 			page 300


 10958              		.loc 1 271 28 is_stmt 0 view .LVU3806
 10959 3c68 C4E2B3F7 		shrx	rsi, rcx, r9	# _555, pattern, _1928
 10959      F1
 10960              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10961              		.loc 1 271 57 view .LVU3807
 10962 3c6d C4E2C1F7 		shlx	rcx, rcx, rdi	# _557, pattern, _1929
 10962      C9
 10963              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10964              		.loc 1 271 17 view .LVU3808
 10965 3c72 4809CE   		or	rsi, rcx	# pattern, _557
 272:sieve_extend.c ****     } 
 10966              		.loc 1 272 9 is_stmt 1 view .LVU3809
 10967              	# sieve_extend.c:272:         bitarray[copy_word] |= pattern;
 272:sieve_extend.c ****     } 
 10968              		.loc 1 272 29 is_stmt 0 view .LVU3810
 10969 3c75 48097220 		or	QWORD PTR 32[rdx], rsi	# MEM[base: _1802, offset: 0B], pattern
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 10970              		.loc 1 270 40 is_stmt 1 view .LVU3811
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 10971              		.loc 1 270 11 view .LVU3812
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10972              		.loc 1 271 9 view .LVU3813
 10973              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10974              		.loc 1 271 28 is_stmt 0 view .LVU3814
 10975 3c79 C4E2B3F7 		shrx	rcx, rsi, r9	# _555, pattern, _1928
 10975      CE
 10976              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10977              		.loc 1 271 57 view .LVU3815
 10978 3c7e C4E2C1F7 		shlx	rsi, rsi, rdi	# _557, pattern, _1929
 10978      F6
 10979              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10980              		.loc 1 271 17 view .LVU3816
 10981 3c83 4809F1   		or	rcx, rsi	# pattern, _557
 272:sieve_extend.c ****     } 
 10982              		.loc 1 272 9 is_stmt 1 view .LVU3817
 10983              	# sieve_extend.c:272:         bitarray[copy_word] |= pattern;
 272:sieve_extend.c ****     } 
 10984              		.loc 1 272 29 is_stmt 0 view .LVU3818
 10985 3c86 48094A28 		or	QWORD PTR 40[rdx], rcx	# MEM[base: _1802, offset: 0B], pattern
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 10986              		.loc 1 270 40 is_stmt 1 view .LVU3819
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 10987              		.loc 1 270 11 view .LVU3820
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10988              		.loc 1 271 9 view .LVU3821
 10989              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10990              		.loc 1 271 28 is_stmt 0 view .LVU3822
 10991 3c8a C4E2B3F7 		shrx	rsi, rcx, r9	# _555, pattern, _1928
 10991      F1
 10992              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
GAS LISTING /tmp/cctyCFAS.s 			page 301


 10993              		.loc 1 271 57 view .LVU3823
 10994 3c8f C4E2C1F7 		shlx	rcx, rcx, rdi	# _557, pattern, _1929
 10994      C9
 10995              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10996              		.loc 1 271 17 view .LVU3824
 10997 3c94 4809CE   		or	rsi, rcx	# pattern, _557
 272:sieve_extend.c ****     } 
 10998              		.loc 1 272 9 is_stmt 1 view .LVU3825
 10999              	# sieve_extend.c:272:         bitarray[copy_word] |= pattern;
 272:sieve_extend.c ****     } 
 11000              		.loc 1 272 29 is_stmt 0 view .LVU3826
 11001 3c97 48097230 		or	QWORD PTR 48[rdx], rsi	# MEM[base: _1802, offset: 0B], pattern
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 11002              		.loc 1 270 40 is_stmt 1 view .LVU3827
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 11003              		.loc 1 270 11 view .LVU3828
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 11004              		.loc 1 271 9 view .LVU3829
 11005              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 11006              		.loc 1 271 28 is_stmt 0 view .LVU3830
 11007 3c9b C4E2B3F7 		shrx	rcx, rsi, r9	# _555, pattern, _1928
 11007      CE
 11008              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 11009              		.loc 1 271 57 view .LVU3831
 11010 3ca0 C4E2C1F7 		shlx	rsi, rsi, rdi	# _557, pattern, _1929
 11010      F6
 11011              	.LVL707:
 11012              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 11013              		.loc 1 271 17 view .LVU3832
 11014 3ca5 4809F1   		or	rcx, rsi	# pattern, _557
 11015              	.LVL708:
 272:sieve_extend.c ****     } 
 11016              		.loc 1 272 9 is_stmt 1 view .LVU3833
 11017              	# sieve_extend.c:272:         bitarray[copy_word] |= pattern;
 272:sieve_extend.c ****     } 
 11018              		.loc 1 272 29 is_stmt 0 view .LVU3834
 11019 3ca8 48094A38 		or	QWORD PTR 56[rdx], rcx	# MEM[base: _1802, offset: 0B], pattern
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 11020              		.loc 1 270 40 is_stmt 1 view .LVU3835
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 11021              		.loc 1 270 11 view .LVU3836
 11022 3cac 4883C240 		add	rdx, 64	# ivtmp.557,
 11023              	# sieve_extend.c:270:     for (;copy_word < range_stop_word; copy_word++) {
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 11024              		.loc 1 270 5 is_stmt 0 view .LVU3837
 11025 3cb0 4939D0   		cmp	r8, rdx	# range_stop_ptr, ivtmp.557
 11026 3cb3 0F856CFF 		jne	.L732	#,
 11026      FFFF
 11027              	.L1365:
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 11028              		.loc 1 270 5 view .LVU3838
 11029 3cb9 4C035C24 		add	r11, QWORD PTR 88[rsp]	# _330, %sfp
 11029      58
GAS LISTING /tmp/cctyCFAS.s 			page 302


 11030 3cbe 4D29F3   		sub	r11, r14	# copy_word, copy_word
 11031              	.LVL709:
 11032              	.L731:
 275:sieve_extend.c ****     bitarray[copy_word] |= pattern & chopmask(range_stop);
 11033              		.loc 1 275 5 is_stmt 1 view .LVU3839
 11034              	# sieve_extend.c:275:     pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped)
 275:sieve_extend.c ****     bitarray[copy_word] |= pattern & chopmask(range_stop);
 11035              		.loc 1 275 24 is_stmt 0 view .LVU3840
 11036 3cc1 C462ABF7 		shrx	r14, rcx, r10	# _567, pattern, tmp832
 11036      F1
 11037              	# sieve_extend.c:275:     pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped)
 275:sieve_extend.c ****     bitarray[copy_word] |= pattern & chopmask(range_stop);
 11038              		.loc 1 275 53 view .LVU3841
 11039 3cc6 C462F9F7 		shlx	r10, rcx, rax	# _569, pattern, pattern_shift_flipped
 11039      D1
 11040              	.LVL710:
 276:sieve_extend.c **** }
 11041              		.loc 1 276 5 is_stmt 1 view .LVU3842
 11042              	# sieve_extend.c:275:     pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped)
 275:sieve_extend.c ****     bitarray[copy_word] |= pattern & chopmask(range_stop);
 11043              		.loc 1 275 13 is_stmt 0 view .LVU3843
 11044 3ccb 4D09D6   		or	r14, r10	# pattern, _569
 11045              	.LVL711:
 11046              	# sieve_extend.c:276:     bitarray[copy_word] |= pattern & chopmask(range_stop);
 276:sieve_extend.c **** }
 11047              		.loc 1 276 36 view .LVU3844
 11048 3cce 4C237424 		and	r14, QWORD PTR 112[rsp]	# tmp841, %sfp
 11048      70
 11049              	.LVL712:
 11050              	# sieve_extend.c:276:     bitarray[copy_word] |= pattern & chopmask(range_stop);
 276:sieve_extend.c **** }
 11051              		.loc 1 276 25 view .LVU3845
 11052 3cd3 4F0934DC 		or	QWORD PTR [r12+r11*8], r14	# *_573, tmp841
 11053              	.LVL713:
 11054              	.L730:
 276:sieve_extend.c **** }
 11055              		.loc 1 276 25 view .LVU3846
 11056              	.LBE574:
 11057              	.LBE576:
 864:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 11058              		.loc 1 864 9 is_stmt 1 view .LVU3847
 11059              	.LBB577:
 11060              	.LBI577:
 123:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 11061              		.loc 1 123 25 view .LVU3848
 11062              	.LBB578:
 124:sieve_extend.c ****     return index;
 11063              		.loc 1 124 5 view .LVU3849
 124:sieve_extend.c ****     return index;
 11064              		.loc 1 124 11 view .LVU3850
 11065              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 11066              		.loc 1 124 21 is_stmt 0 view .LVU3851
 11067 3cd7 4989DB   		mov	r11, rbx	# tmp842, _373
 11068 3cda 49C1EB06 		shr	r11, 6	# tmp842,
 11069              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
GAS LISTING /tmp/cctyCFAS.s 			page 303


 11070              		.loc 1 124 12 view .LVU3852
 11071 3cde 4F8B0CDC 		mov	r9, QWORD PTR [r12+r11*8]	# *_636, *_636
 11072              	.LBE578:
 11073              	.LBE577:
 11074              	# sieve_extend.c:862:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 862:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 11075              		.loc 1 862 35 view .LVU3853
 11076 3ce2 4889DE   		mov	rsi, rbx	# index, _373
 11077              	.LBB580:
 11078              	.LBB579:
 11079              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 11080              		.loc 1 124 11 view .LVU3854
 11081 3ce5 490FA3D9 		bt	r9, rbx	# *_636, _373
 11082 3ce9 0F83B900 		jnc	.L733	#,
 11082      0000
 11083              	.LVL714:
 11084              	.L734:
 124:sieve_extend.c ****     return index;
 11085              		.loc 1 124 58 is_stmt 1 view .LVU3855
 11086              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 11087              		.loc 1 124 63 is_stmt 0 view .LVU3856
 11088 3cef 488D5E01 		lea	rbx, 1[rsi]	# tmp1052,
 11089              	.LVL715:
 11090              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 11091              		.loc 1 124 21 view .LVU3857
 11092 3cf3 4889D8   		mov	rax, rbx	# tmp847, index
 11093 3cf6 48C1E806 		shr	rax, 6	# tmp847,
 11094              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 11095              		.loc 1 124 12 view .LVU3858
 11096 3cfa 498B3CC4 		mov	rdi, QWORD PTR [r12+rax*8]	# *_383, *_383
 11097              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 11098              		.loc 1 124 63 view .LVU3859
 11099 3cfe 4889DE   		mov	rsi, rbx	# index, tmp1052
 124:sieve_extend.c ****     return index;
 11100              		.loc 1 124 11 is_stmt 1 view .LVU3860
 11101 3d01 480FA3DF 		bt	rdi, rbx	# *_383, index
 11102 3d05 0F839D00 		jnc	.L733	#,
 11102      0000
 124:sieve_extend.c ****     return index;
 11103              		.loc 1 124 58 view .LVU3861
 11104              	.LVL716:
 11105              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 11106              		.loc 1 124 63 is_stmt 0 view .LVU3862
 11107 3d0b 48FFC6   		inc	rsi	# index
 11108              	.LVL717:
 124:sieve_extend.c ****     return index;
 11109              		.loc 1 124 11 is_stmt 1 view .LVU3863
 11110              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 11111              		.loc 1 124 21 is_stmt 0 view .LVU3864
 11112 3d0e 4889F2   		mov	rdx, rsi	# tmp1459, index
GAS LISTING /tmp/cctyCFAS.s 			page 304


 11113 3d11 48C1EA06 		shr	rdx, 6	# tmp1459,
 11114              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 11115              		.loc 1 124 12 view .LVU3865
 11116 3d15 498B0CD4 		mov	rcx, QWORD PTR [r12+rdx*8]	# *_383, *_383
 11117              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 11118              		.loc 1 124 11 view .LVU3866
 11119 3d19 480FA3F1 		bt	rcx, rsi	# *_383, index
 11120 3d1d 0F838500 		jnc	.L733	#,
 11120      0000
 124:sieve_extend.c ****     return index;
 11121              		.loc 1 124 58 is_stmt 1 view .LVU3867
 11122              	.LVL718:
 11123              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 11124              		.loc 1 124 63 is_stmt 0 view .LVU3868
 11125 3d23 488D7302 		lea	rsi, 2[rbx]	# index,
 11126              	.LVL719:
 124:sieve_extend.c ****     return index;
 11127              		.loc 1 124 11 is_stmt 1 view .LVU3869
 11128              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 11129              		.loc 1 124 21 is_stmt 0 view .LVU3870
 11130 3d27 4989F6   		mov	r14, rsi	# tmp1463, index
 11131 3d2a 49C1EE06 		shr	r14, 6	# tmp1463,
 11132              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 11133              		.loc 1 124 12 view .LVU3871
 11134 3d2e 4F8B14F4 		mov	r10, QWORD PTR [r12+r14*8]	# *_383, *_383
 11135              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 11136              		.loc 1 124 11 view .LVU3872
 11137 3d32 490FA3F2 		bt	r10, rsi	# *_383, index
 11138 3d36 7370     		jnc	.L733	#,
 124:sieve_extend.c ****     return index;
 11139              		.loc 1 124 58 is_stmt 1 view .LVU3873
 11140              	.LVL720:
 11141              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 11142              		.loc 1 124 63 is_stmt 0 view .LVU3874
 11143 3d38 488D7303 		lea	rsi, 3[rbx]	# index,
 11144              	.LVL721:
 124:sieve_extend.c ****     return index;
 11145              		.loc 1 124 11 is_stmt 1 view .LVU3875
 11146              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 11147              		.loc 1 124 21 is_stmt 0 view .LVU3876
 11148 3d3c 4989F3   		mov	r11, rsi	# tmp1467, index
 11149 3d3f 49C1EB06 		shr	r11, 6	# tmp1467,
 11150              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 11151              		.loc 1 124 12 view .LVU3877
 11152 3d43 4F8B0CDC 		mov	r9, QWORD PTR [r12+r11*8]	# *_383, *_383
 11153              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 11154              		.loc 1 124 11 view .LVU3878
GAS LISTING /tmp/cctyCFAS.s 			page 305


 11155 3d47 490FA3F1 		bt	r9, rsi	# *_383, index
 11156 3d4b 735B     		jnc	.L733	#,
 124:sieve_extend.c ****     return index;
 11157              		.loc 1 124 58 is_stmt 1 view .LVU3879
 11158              	.LVL722:
 11159              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 11160              		.loc 1 124 63 is_stmt 0 view .LVU3880
 11161 3d4d 488D7304 		lea	rsi, 4[rbx]	# index,
 11162              	.LVL723:
 124:sieve_extend.c ****     return index;
 11163              		.loc 1 124 11 is_stmt 1 view .LVU3881
 11164              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 11165              		.loc 1 124 21 is_stmt 0 view .LVU3882
 11166 3d51 4889F0   		mov	rax, rsi	# tmp1471, index
 11167 3d54 48C1E806 		shr	rax, 6	# tmp1471,
 11168              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 11169              		.loc 1 124 12 view .LVU3883
 11170 3d58 498B3CC4 		mov	rdi, QWORD PTR [r12+rax*8]	# *_383, *_383
 11171              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 11172              		.loc 1 124 11 view .LVU3884
 11173 3d5c 480FA3F7 		bt	rdi, rsi	# *_383, index
 11174 3d60 7346     		jnc	.L733	#,
 124:sieve_extend.c ****     return index;
 11175              		.loc 1 124 58 is_stmt 1 view .LVU3885
 11176              	.LVL724:
 11177              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 11178              		.loc 1 124 63 is_stmt 0 view .LVU3886
 11179 3d62 488D7305 		lea	rsi, 5[rbx]	# index,
 11180              	.LVL725:
 124:sieve_extend.c ****     return index;
 11181              		.loc 1 124 11 is_stmt 1 view .LVU3887
 11182              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 11183              		.loc 1 124 21 is_stmt 0 view .LVU3888
 11184 3d66 4889F2   		mov	rdx, rsi	# tmp1475, index
 11185 3d69 48C1EA06 		shr	rdx, 6	# tmp1475,
 11186              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 11187              		.loc 1 124 12 view .LVU3889
 11188 3d6d 498B0CD4 		mov	rcx, QWORD PTR [r12+rdx*8]	# *_383, *_383
 11189              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 11190              		.loc 1 124 11 view .LVU3890
 11191 3d71 480FA3F1 		bt	rcx, rsi	# *_383, index
 11192 3d75 7331     		jnc	.L733	#,
 124:sieve_extend.c ****     return index;
 11193              		.loc 1 124 58 is_stmt 1 view .LVU3891
 11194              	.LVL726:
 11195              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 11196              		.loc 1 124 63 is_stmt 0 view .LVU3892
 11197 3d77 488D7306 		lea	rsi, 6[rbx]	# index,
GAS LISTING /tmp/cctyCFAS.s 			page 306


 11198              	.LVL727:
 124:sieve_extend.c ****     return index;
 11199              		.loc 1 124 11 is_stmt 1 view .LVU3893
 11200              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 11201              		.loc 1 124 21 is_stmt 0 view .LVU3894
 11202 3d7b 4989F6   		mov	r14, rsi	# tmp1479, index
 11203 3d7e 49C1EE06 		shr	r14, 6	# tmp1479,
 11204              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 11205              		.loc 1 124 12 view .LVU3895
 11206 3d82 4F8B14F4 		mov	r10, QWORD PTR [r12+r14*8]	# *_383, *_383
 11207              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 11208              		.loc 1 124 11 view .LVU3896
 11209 3d86 490FA3F2 		bt	r10, rsi	# *_383, index
 11210 3d8a 731C     		jnc	.L733	#,
 124:sieve_extend.c ****     return index;
 11211              		.loc 1 124 58 is_stmt 1 view .LVU3897
 11212              	.LVL728:
 11213              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 11214              		.loc 1 124 63 is_stmt 0 view .LVU3898
 11215 3d8c 488D7307 		lea	rsi, 7[rbx]	# index,
 11216              	.LVL729:
 124:sieve_extend.c ****     return index;
 11217              		.loc 1 124 11 is_stmt 1 view .LVU3899
 11218              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 11219              		.loc 1 124 21 is_stmt 0 view .LVU3900
 11220 3d90 4889F3   		mov	rbx, rsi	# tmp1483, index
 11221 3d93 48C1EB06 		shr	rbx, 6	# tmp1483,
 11222              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 11223              		.loc 1 124 12 view .LVU3901
 11224 3d97 4D8B1CDC 		mov	r11, QWORD PTR [r12+rbx*8]	# *_383, *_383
 11225              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 11226              		.loc 1 124 11 view .LVU3902
 11227 3d9b 490FA3F3 		bt	r11, rsi	# *_383, index
 11228 3d9f 0F824AFF 		jc	.L734	#,
 11228      FFFF
 11229              	.LVL730:
 11230              		.p2align 4,,10
 11231 3da5 0F1F00   		.p2align 3
 11232              	.L733:
 125:sieve_extend.c **** }
 11233              		.loc 1 125 5 is_stmt 1 view .LVU3903
 125:sieve_extend.c **** }
 11234              		.loc 1 125 5 is_stmt 0 view .LVU3904
 11235              	.LBE579:
 11236              	.LBE580:
 865:sieve_extend.c ****     }
 11237              		.loc 1 865 9 is_stmt 1 view .LVU3905
 11238              	# sieve_extend.c:865:         start = prime * prime * 2 + prime * 2;
 865:sieve_extend.c ****     }
 11239              		.loc 1 865 35 is_stmt 0 view .LVU3906
GAS LISTING /tmp/cctyCFAS.s 			page 307


 11240 3da8 488D4601 		lea	rax, 1[rsi]	# _491,
 11241              	# sieve_extend.c:865:         start = prime * prime * 2 + prime * 2;
 865:sieve_extend.c ****     }
 11242              		.loc 1 865 15 view .LVU3907
 11243 3dac 480FAFC6 		imul	rax, rsi	# tmp853, index
 11244              	.LVL731:
 865:sieve_extend.c ****     }
 11245              		.loc 1 865 15 view .LVU3908
 11246 3db0 4801C0   		add	rax, rax	# index
 11247              	.LVL732:
 859:sieve_extend.c ****         step  = prime * 2 + 1;
 11248              		.loc 1 859 11 is_stmt 1 view .LVU3909
 11249 3db3 48394424 		cmp	QWORD PTR 104[rsp], rax	# %sfp, index
 11249      68
 11250 3db8 0F8332FC 		jnb	.L735	#,
 11250      FFFF
 11251 3dbe 4C8B4424 		mov	r8, QWORD PTR 80[rsp]	# <retval>, %sfp
 11251      50
 11252 3dc3 4C8B7C24 		mov	r15, QWORD PTR 104[rsp]	# block_stop, %sfp
 11252      68
 11253 3dc8 498B4008 		mov	rax, QWORD PTR 8[r8]	# _8, sieve_89->bits
 11254              	.LVL733:
 11255 3dcc 0F1F4000 		.p2align 4,,10
 11256              		.p2align 3
 11257              	.L725:
 859:sieve_extend.c ****         step  = prime * 2 + 1;
 11258              		.loc 1 859 11 is_stmt 0 view .LVU3910
 11259              	.LBE636:
 11260              	.LBE643:
 985:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11261              		.loc 1 985 39 is_stmt 1 view .LVU3911
 11262              	# sieve_extend.c:985:     for (;block_start <= sieve->bits; block_start += blocksize, block_stop +=
 985:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11263              		.loc 1 985 51 is_stmt 0 view .LVU3912
 11264 3dd0 488B5424 		mov	rdx, QWORD PTR 40[rsp]	# blocksize, %sfp
 11264      28
 11265 3dd5 48015424 		add	QWORD PTR 120[rsp], rdx	# %sfp, blocksize
 11265      78
 11266              	.LVL734:
 11267              	# sieve_extend.c:985:     for (;block_start <= sieve->bits; block_start += blocksize, block_stop +=
 985:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11268              		.loc 1 985 76 view .LVU3913
 11269 3dda 4E8D3C3A 		lea	r15, [rdx+r15]	# block_stop,
 11270              	# sieve_extend.c:985:     for (;block_start <= sieve->bits; block_start += blocksize, block_stop +=
 985:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11271              		.loc 1 985 51 view .LVU3914
 11272 3dde 4C8B4424 		mov	r8, QWORD PTR 120[rsp]	# block_start, %sfp
 11272      78
 11273              	.LVL735:
 985:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11274              		.loc 1 985 11 is_stmt 1 view .LVU3915
 11275              	# sieve_extend.c:985:     for (;block_start <= sieve->bits; block_start += blocksize, block_stop +=
 985:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11276              		.loc 1 985 5 is_stmt 0 view .LVU3916
 11277 3de3 4C39C0   		cmp	rax, r8	# _8, block_start
 11278 3de6 0F8394FA 		jnb	.L721	#,
 11278      FFFF
GAS LISTING /tmp/cctyCFAS.s 			page 308


 11279              	# sieve_extend.c:992: }
 992:sieve_extend.c **** 
 11280              		.loc 1 992 1 view .LVU3917
 11281 3dec 488B4424 		mov	rax, QWORD PTR 80[rsp]	#, %sfp
 11281      50
 11282 3df1 488D65D8 		lea	rsp, -40[rbp]	#,
 11283              	.LVL736:
 992:sieve_extend.c **** 
 11284              		.loc 1 992 1 view .LVU3918
 11285 3df5 5B       		pop	rbx	#
 11286 3df6 415C     		pop	r12	#
 11287 3df8 415D     		pop	r13	#
 11288 3dfa 415E     		pop	r14	#
 11289 3dfc 415F     		pop	r15	#
 11290              	.LVL737:
 992:sieve_extend.c **** 
 11291              		.loc 1 992 1 view .LVU3919
 11292 3dfe 5D       		pop	rbp	#
 11293              		.cfi_remember_state
 11294              		.cfi_def_cfa 7, 8
 11295              	.LVL738:
 992:sieve_extend.c **** 
 11296              		.loc 1 992 1 view .LVU3920
 11297 3dff C3       		ret	
 11298              	.LVL739:
 11299              		.p2align 4,,10
 11300              		.p2align 3
 11301              	.L1586:
 11302              		.cfi_restore_state
 11303              	.LBB644:
 11304              	.LBB637:
 11305              	.LBB581:
 11306              	.LBB575:
 256:sieve_extend.c ****        return;
 11307              		.loc 1 256 8 is_stmt 1 view .LVU3921
 11308              	# sieve_extend.c:256:        bitarray[copy_word] |= ((pattern << bitindex(range_start)) & chopmask(
 256:sieve_extend.c ****        return;
 11309              		.loc 1 256 67 is_stmt 0 view .LVU3922
 11310 3e00 4C235424 		and	r10, QWORD PTR 112[rsp]	# tmp823, %sfp
 11310      70
 11311              	# sieve_extend.c:256:        bitarray[copy_word] |= ((pattern << bitindex(range_start)) & chopmask(
 256:sieve_extend.c ****        return;
 11312              		.loc 1 256 28 view .LVU3923
 11313 3e05 4C09D2   		or	rdx, r10	# tmp824, tmp823
 11314 3e08 488911   		mov	QWORD PTR [rcx], rdx	# *_1697, tmp824
 257:sieve_extend.c ****     }
 11315              		.loc 1 257 8 is_stmt 1 view .LVU3924
 11316 3e0b E9C7FEFF 		jmp	.L730	#
 11316      FF
 11317              	.LVL740:
 11318              		.p2align 4,,10
 11319              		.p2align 3
 11320              	.L806:
 11321              	# sieve_extend.c:249: 	register bitword_t pattern = SAFE_SHIFTBIT;
 249:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize += patternsize) patte
 11322              		.loc 1 249 21 is_stmt 0 view .LVU3925
 11323 3e10 BF010000 		mov	edi, 1	# pattern,
GAS LISTING /tmp/cctyCFAS.s 			page 309


 11323      00
 11324 3e15 E9CEFCFF 		jmp	.L727	#
 11324      FF
 11325              	.LVL741:
 11326 3e1a 660F1F44 		.p2align 4,,10
 11326      0000
 11327              		.p2align 3
 11328              	.L1585:
 249:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize += patternsize) patte
 11329              		.loc 1 249 21 view .LVU3926
 11330 3e20 4C8B7C24 		mov	r15, QWORD PTR 104[rsp]	# block_stop, %sfp
 11330      68
 11331 3e25 4889C1   		mov	rcx, rax	# index, index
 249:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize += patternsize) patte
 11332              		.loc 1 249 21 view .LVU3927
 11333              	.LBE575:
 11334              	.LBE581:
 868:sieve_extend.c ****         step  = prime * 2 + 1;
 11335              		.loc 1 868 11 is_stmt 1 view .LVU3928
 11336 3e28 4939C7   		cmp	r15, rax	# block_stop, index
 11337 3e2b 0F82C703 		jb	.L1566	#,
 11337      0000
 11338              	.LVL742:
 11339              		.p2align 4,,10
 11340 3e31 0F1F8000 		.p2align 3
 11340      000000
 11341              	.L756:
 869:sieve_extend.c ****         if (step > MEDIUMSTEP_FASTER) break;
 11342              		.loc 1 869 9 view .LVU3929
 11343              	# sieve_extend.c:869:         step  = prime * 2 + 1;
 869:sieve_extend.c ****         if (step > MEDIUMSTEP_FASTER) break;
 11344              		.loc 1 869 15 is_stmt 0 view .LVU3930
 11345 3e38 4C8D4C36 		lea	r9, 1[rsi+rsi]	# step,
 11345      01
 11346              	.LVL743:
 870:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 11347              		.loc 1 870 9 is_stmt 1 view .LVU3931
 11348              	# sieve_extend.c:870:         if (step > MEDIUMSTEP_FASTER) break;
 870:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 11349              		.loc 1 870 12 is_stmt 0 view .LVU3932
 11350 3e3d 4C3B0D00 		cmp	r9, QWORD PTR global_MEDIUMSTEP_FASTER[rip]	# step, global_MEDIUMSTEP_FASTER
 11350      000000
 11351 3e44 0F87BE04 		ja	.L1587	#,
 11351      0000
 871:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 11352              		.loc 1 871 9 is_stmt 1 view .LVU3933
 11353              	# sieve_extend.c:871:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 871:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 11354              		.loc 1 871 12 is_stmt 0 view .LVU3934
 11355 3e4a 488B4424 		mov	rax, QWORD PTR 120[rsp]	# block_start, %sfp
 11355      78
 11356              	# sieve_extend.c:871:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 871:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 11357              		.loc 1 871 35 view .LVU3935
 11358 3e4f 4C8D5601 		lea	r10, 1[rsi]	# index,
 11359              	# sieve_extend.c:871:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 871:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
GAS LISTING /tmp/cctyCFAS.s 			page 310


 11360              		.loc 1 871 12 view .LVU3936
 11361 3e53 4939C2   		cmp	r10, rax	# index, block_start
 11362 3e56 770F     		ja	.L739	#,
 871:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 11363              		.loc 1 871 41 is_stmt 1 view .LVU3937
 11364              	# sieve_extend.c:871:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 871:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 11365              		.loc 1 871 61 is_stmt 0 view .LVU3938
 11366 3e58 4801F0   		add	rax, rsi	# _398, index
 11367              	# sieve_extend.c:871:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 871:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 11368              		.loc 1 871 102 view .LVU3939
 11369 3e5b 31D2     		xor	edx, edx	# tmp857
 11370              	# sieve_extend.c:871:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 871:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 11371              		.loc 1 871 69 view .LVU3940
 11372 3e5d 488D0C30 		lea	rcx, [rax+rsi]	# tmp855,
 11373              	# sieve_extend.c:871:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 871:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 11374              		.loc 1 871 102 view .LVU3941
 11375 3e61 49F7F1   		div	r9	# step
 11376              	.LVL744:
 11377              	# sieve_extend.c:871:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 871:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 11378              		.loc 1 871 47 view .LVU3942
 11379 3e64 4829D1   		sub	rcx, rdx	# index, tmp857
 11380              	.LVL745:
 11381              	.L739:
 872:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1 );
 11382              		.loc 1 872 9 is_stmt 1 view .LVU3943
 11383              	.LBB582:
 11384              	.LBI547:
 284:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 11385              		.loc 1 284 20 view .LVU3944
 11386              	.LBB567:
 285:sieve_extend.c **** 
 11387              		.loc 1 285 5 view .LVU3945
 11388              	# sieve_extend.c:285:     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * st
 285:sieve_extend.c **** 
 11389              		.loc 1 285 74 is_stmt 0 view .LVU3946
 11390 3e67 4D89CE   		mov	r14, r9	# tmp859, step
 11391 3e6a 49C1E606 		sal	r14, 6	# tmp859,
 11392 3e6e 31FF     		xor	edi, edi	# _257
 11393 3e70 4901CE   		add	r14, rcx	# tmp860, index
 11394 3e73 400F92C7 		setc	dil	#, _257
 11395              	.LVL746:
 287:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-unique (%ju
 11396              		.loc 1 287 5 is_stmt 1 view .LVU3947
 11397              	# sieve_extend.c:287:     if (range_stop_unique > range_stop) { // the range will not repeat itself
 287:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-unique (%ju
 11398              		.loc 1 287 8 is_stmt 0 view .LVU3948
 11399 3e77 4D39F7   		cmp	r15, r14	# block_stop, tmp860
 11400 3e7a 0F829003 		jb	.L742	#,
 11400      0000
 11401              	.LVL747:
 11402              	.LBB556:
 303:sieve_extend.c ****             register counter_t index_word = wordindex(index);
GAS LISTING /tmp/cctyCFAS.s 			page 311


 11403              		.loc 1 303 54 is_stmt 1 view .LVU3949
 11404              	# sieve_extend.c:303:         for (register counter_t index = range_start; index <= range_stop_uniq
 303:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 11405              		.loc 1 303 9 is_stmt 0 view .LVU3950
 11406 3e80 4885FF   		test	rdi, rdi	# _257
 11407 3e83 0F858902 		jne	.L1571	#,
 11407      0000
 11408              	.LBB557:
 11409              	.LBB558:
 11410              	.LBB559:
 11411              	# sieve_extend.c:188:    register bitword_t* __restrict fast_loop_ptr  = &bitarray[((range_stop_wor
 188:sieve_extend.c **** 
 11412              		.loc 1 188 107 view .LVU3951
 11413 3e89 488B5424 		mov	rdx, QWORD PTR 96[rsp]	# range_stop_word, %sfp
 11413      60
 11414              	# sieve_extend.c:188:    register bitword_t* __restrict fast_loop_ptr  = &bitarray[((range_stop_wor
 188:sieve_extend.c **** 
 11415              		.loc 1 188 84 view .LVU3952
 11416 3e8e 4F8D1C89 		lea	r11, [r9+r9*4]	# tmp873,
 11417              	# sieve_extend.c:188:    register bitword_t* __restrict fast_loop_ptr  = &bitarray[((range_stop_wor
 188:sieve_extend.c **** 
 11418              		.loc 1 188 107 view .LVU3953
 11419 3e92 4889D3   		mov	rbx, rdx	# tmp875, range_stop_word
 11420 3e95 4C29DB   		sub	rbx, r11	# tmp875, tmp873
 11421 3e98 498D1CDC 		lea	rbx, [r12+rbx*8]	# tmp877,
 11422 3e9c 4C39DA   		cmp	rdx, r11	# range_stop_word, tmp873
 11423 3e9f 4C89C8   		mov	rax, r9	# _1825, step
 11424 3ea2 490F46DC 		cmovbe	rbx, r12	# pretmp_1655,, prephitmp_1754
 11425 3ea6 48C1E004 		sal	rax, 4	# _1825,
 11426 3eaa 48894424 		mov	QWORD PTR 104[rsp], rax	# %sfp, _1825
 11426      68
 11427              	# sieve_extend.c:194:        index_ptr+=step;
 194:sieve_extend.c ****        *index_ptr |= mask;
 11428              		.loc 1 194 17 view .LVU3954
 11429 3eaf 4A8D34CD 		lea	rsi, 0[0+r9*8]	# _622,
 11429      00000000 
 11430 3eb7 49C1E303 		sal	r11, 3	# tmp881,
 11431 3ebb 0F1F4400 		.p2align 4,,10
 11431      00
 11432              		.p2align 3
 11433              	.L755:
 194:sieve_extend.c ****        *index_ptr |= mask;
 11434              		.loc 1 194 17 view .LVU3955
 11435              	.LBE559:
 11436              	.LBE558:
 304:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 11437              		.loc 1 304 13 is_stmt 1 view .LVU3956
 11438              	# sieve_extend.c:304:             register counter_t index_word = wordindex(index);
 304:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 11439              		.loc 1 304 32 is_stmt 0 view .LVU3957
 11440 3ec0 4889C8   		mov	rax, rcx	# index_word, index
 11441 3ec3 48C1E806 		shr	rax, 6	# index_word,
 11442              	.LVL748:
 305:sieve_extend.c ****             do {
 11443              		.loc 1 305 13 is_stmt 1 view .LVU3958
 11444              	# sieve_extend.c:305:             register bitword_t mask = SAFE_ZERO;
 305:sieve_extend.c ****             do {
GAS LISTING /tmp/cctyCFAS.s 			page 312


 11445              		.loc 1 305 32 is_stmt 0 view .LVU3959
 11446 3ec7 31D2     		xor	edx, edx	# mask
 11447              	.LVL749:
 11448              	.L749:
 306:sieve_extend.c ****                 mask |= markmask(index);
 11449              		.loc 1 306 13 is_stmt 1 view .LVU3960
 307:sieve_extend.c ****                 index += step;
 11450              		.loc 1 307 17 view .LVU3961
 11451              	# sieve_extend.c:307:                 mask |= markmask(index);
 307:sieve_extend.c ****                 index += step;
 11452              		.loc 1 307 25 is_stmt 0 view .LVU3962
 11453 3ec9 C4C2F1F7 		shlx	rdi, r13, rcx	# tmp883, tmp1041, index
 11453      FD
 11454              	# sieve_extend.c:308:                 index += step;
 308:sieve_extend.c ****             } while (index_word == wordindex(index));
 11455              		.loc 1 308 23 view .LVU3963
 11456 3ece 4C01C9   		add	rcx, r9	# index, step
 11457              	# sieve_extend.c:307:                 mask |= markmask(index);
 307:sieve_extend.c ****                 index += step;
 11458              		.loc 1 307 22 view .LVU3964
 11459 3ed1 4809FA   		or	rdx, rdi	# mask, tmp883
 11460              	.LVL750:
 308:sieve_extend.c ****             } while (index_word == wordindex(index));
 11461              		.loc 1 308 17 is_stmt 1 view .LVU3965
 309:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 11462              		.loc 1 309 21 view .LVU3966
 11463              	# sieve_extend.c:309:             } while (index_word == wordindex(index));
 309:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 11464              		.loc 1 309 36 is_stmt 0 view .LVU3967
 11465 3ed4 4889CF   		mov	rdi, rcx	# tmp885, index
 11466 3ed7 48C1EF06 		shr	rdi, 6	# tmp885,
 11467              	# sieve_extend.c:309:             } while (index_word == wordindex(index));
 309:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 11468              		.loc 1 309 13 view .LVU3968
 11469 3edb 4839F8   		cmp	rax, rdi	# index_word, tmp885
 11470 3ede 0F85AC00 		jne	.L1364	#,
 11470      0000
 306:sieve_extend.c ****                 mask |= markmask(index);
 11471              		.loc 1 306 13 is_stmt 1 view .LVU3969
 307:sieve_extend.c ****                 index += step;
 11472              		.loc 1 307 17 view .LVU3970
 11473              	# sieve_extend.c:307:                 mask |= markmask(index);
 307:sieve_extend.c ****                 index += step;
 11474              		.loc 1 307 25 is_stmt 0 view .LVU3971
 11475 3ee4 C4C2F1F7 		shlx	rdi, r13, rcx	# tmp1445, tmp1041, index
 11475      FD
 11476              	# sieve_extend.c:308:                 index += step;
 308:sieve_extend.c ****             } while (index_word == wordindex(index));
 11477              		.loc 1 308 23 view .LVU3972
 11478 3ee9 4C01C9   		add	rcx, r9	# index, step
 11479              	# sieve_extend.c:307:                 mask |= markmask(index);
 307:sieve_extend.c ****                 index += step;
 11480              		.loc 1 307 22 view .LVU3973
 11481 3eec 4809FA   		or	rdx, rdi	# mask, tmp1445
 11482              	.LVL751:
 308:sieve_extend.c ****             } while (index_word == wordindex(index));
 11483              		.loc 1 308 17 is_stmt 1 view .LVU3974
GAS LISTING /tmp/cctyCFAS.s 			page 313


 309:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 11484              		.loc 1 309 21 view .LVU3975
 11485              	# sieve_extend.c:309:             } while (index_word == wordindex(index));
 309:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 11486              		.loc 1 309 36 is_stmt 0 view .LVU3976
 11487 3eef 4889CF   		mov	rdi, rcx	# tmp1446, index
 11488 3ef2 48C1EF06 		shr	rdi, 6	# tmp1446,
 11489              	# sieve_extend.c:309:             } while (index_word == wordindex(index));
 309:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 11490              		.loc 1 309 13 view .LVU3977
 11491 3ef6 4839F8   		cmp	rax, rdi	# index_word, tmp1446
 11492 3ef9 0F859100 		jne	.L1364	#,
 11492      0000
 306:sieve_extend.c ****                 mask |= markmask(index);
 11493              		.loc 1 306 13 is_stmt 1 view .LVU3978
 307:sieve_extend.c ****                 index += step;
 11494              		.loc 1 307 17 view .LVU3979
 11495              	# sieve_extend.c:307:                 mask |= markmask(index);
 307:sieve_extend.c ****                 index += step;
 11496              		.loc 1 307 25 is_stmt 0 view .LVU3980
 11497 3eff C4C2F1F7 		shlx	rdi, r13, rcx	# tmp1447, tmp1041, index
 11497      FD
 11498              	# sieve_extend.c:308:                 index += step;
 308:sieve_extend.c ****             } while (index_word == wordindex(index));
 11499              		.loc 1 308 23 view .LVU3981
 11500 3f04 4C01C9   		add	rcx, r9	# index, step
 11501              	# sieve_extend.c:307:                 mask |= markmask(index);
 307:sieve_extend.c ****                 index += step;
 11502              		.loc 1 307 22 view .LVU3982
 11503 3f07 4809FA   		or	rdx, rdi	# mask, tmp1447
 11504              	.LVL752:
 308:sieve_extend.c ****             } while (index_word == wordindex(index));
 11505              		.loc 1 308 17 is_stmt 1 view .LVU3983
 309:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 11506              		.loc 1 309 21 view .LVU3984
 11507              	# sieve_extend.c:309:             } while (index_word == wordindex(index));
 309:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 11508              		.loc 1 309 36 is_stmt 0 view .LVU3985
 11509 3f0a 4889CF   		mov	rdi, rcx	# tmp1448, index
 11510 3f0d 48C1EF06 		shr	rdi, 6	# tmp1448,
 11511              	# sieve_extend.c:309:             } while (index_word == wordindex(index));
 309:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 11512              		.loc 1 309 13 view .LVU3986
 11513 3f11 4839F8   		cmp	rax, rdi	# index_word, tmp1448
 11514 3f14 757A     		jne	.L1364	#,
 306:sieve_extend.c ****                 mask |= markmask(index);
 11515              		.loc 1 306 13 is_stmt 1 view .LVU3987
 307:sieve_extend.c ****                 index += step;
 11516              		.loc 1 307 17 view .LVU3988
 11517              	# sieve_extend.c:307:                 mask |= markmask(index);
 307:sieve_extend.c ****                 index += step;
 11518              		.loc 1 307 25 is_stmt 0 view .LVU3989
 11519 3f16 C4C2F1F7 		shlx	rdi, r13, rcx	# tmp1449, tmp1041, index
 11519      FD
 11520              	# sieve_extend.c:308:                 index += step;
 308:sieve_extend.c ****             } while (index_word == wordindex(index));
 11521              		.loc 1 308 23 view .LVU3990
GAS LISTING /tmp/cctyCFAS.s 			page 314


 11522 3f1b 4C01C9   		add	rcx, r9	# index, step
 11523              	# sieve_extend.c:307:                 mask |= markmask(index);
 307:sieve_extend.c ****                 index += step;
 11524              		.loc 1 307 22 view .LVU3991
 11525 3f1e 4809FA   		or	rdx, rdi	# mask, tmp1449
 11526              	.LVL753:
 308:sieve_extend.c ****             } while (index_word == wordindex(index));
 11527              		.loc 1 308 17 is_stmt 1 view .LVU3992
 309:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 11528              		.loc 1 309 21 view .LVU3993
 11529              	# sieve_extend.c:309:             } while (index_word == wordindex(index));
 309:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 11530              		.loc 1 309 36 is_stmt 0 view .LVU3994
 11531 3f21 4889CF   		mov	rdi, rcx	# tmp1450, index
 11532 3f24 48C1EF06 		shr	rdi, 6	# tmp1450,
 11533              	# sieve_extend.c:309:             } while (index_word == wordindex(index));
 309:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 11534              		.loc 1 309 13 view .LVU3995
 11535 3f28 4839F8   		cmp	rax, rdi	# index_word, tmp1450
 11536 3f2b 7563     		jne	.L1364	#,
 306:sieve_extend.c ****                 mask |= markmask(index);
 11537              		.loc 1 306 13 is_stmt 1 view .LVU3996
 307:sieve_extend.c ****                 index += step;
 11538              		.loc 1 307 17 view .LVU3997
 11539              	# sieve_extend.c:307:                 mask |= markmask(index);
 307:sieve_extend.c ****                 index += step;
 11540              		.loc 1 307 25 is_stmt 0 view .LVU3998
 11541 3f2d C4C2F1F7 		shlx	rdi, r13, rcx	# tmp1451, tmp1041, index
 11541      FD
 11542              	# sieve_extend.c:308:                 index += step;
 308:sieve_extend.c ****             } while (index_word == wordindex(index));
 11543              		.loc 1 308 23 view .LVU3999
 11544 3f32 4C01C9   		add	rcx, r9	# index, step
 11545              	# sieve_extend.c:307:                 mask |= markmask(index);
 307:sieve_extend.c ****                 index += step;
 11546              		.loc 1 307 22 view .LVU4000
 11547 3f35 4809FA   		or	rdx, rdi	# mask, tmp1451
 11548              	.LVL754:
 308:sieve_extend.c ****             } while (index_word == wordindex(index));
 11549              		.loc 1 308 17 is_stmt 1 view .LVU4001
 309:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 11550              		.loc 1 309 21 view .LVU4002
 11551              	# sieve_extend.c:309:             } while (index_word == wordindex(index));
 309:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 11552              		.loc 1 309 36 is_stmt 0 view .LVU4003
 11553 3f38 4889CF   		mov	rdi, rcx	# tmp1452, index
 11554 3f3b 48C1EF06 		shr	rdi, 6	# tmp1452,
 11555              	# sieve_extend.c:309:             } while (index_word == wordindex(index));
 309:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 11556              		.loc 1 309 13 view .LVU4004
 11557 3f3f 4839F8   		cmp	rax, rdi	# index_word, tmp1452
 11558 3f42 754C     		jne	.L1364	#,
 306:sieve_extend.c ****                 mask |= markmask(index);
 11559              		.loc 1 306 13 is_stmt 1 view .LVU4005
 307:sieve_extend.c ****                 index += step;
 11560              		.loc 1 307 17 view .LVU4006
 11561              	# sieve_extend.c:307:                 mask |= markmask(index);
GAS LISTING /tmp/cctyCFAS.s 			page 315


 307:sieve_extend.c ****                 index += step;
 11562              		.loc 1 307 25 is_stmt 0 view .LVU4007
 11563 3f44 C4C2F1F7 		shlx	rdi, r13, rcx	# tmp1453, tmp1041, index
 11563      FD
 11564              	# sieve_extend.c:308:                 index += step;
 308:sieve_extend.c ****             } while (index_word == wordindex(index));
 11565              		.loc 1 308 23 view .LVU4008
 11566 3f49 4C01C9   		add	rcx, r9	# index, step
 11567              	# sieve_extend.c:307:                 mask |= markmask(index);
 307:sieve_extend.c ****                 index += step;
 11568              		.loc 1 307 22 view .LVU4009
 11569 3f4c 4809FA   		or	rdx, rdi	# mask, tmp1453
 11570              	.LVL755:
 308:sieve_extend.c ****             } while (index_word == wordindex(index));
 11571              		.loc 1 308 17 is_stmt 1 view .LVU4010
 309:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 11572              		.loc 1 309 21 view .LVU4011
 11573              	# sieve_extend.c:309:             } while (index_word == wordindex(index));
 309:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 11574              		.loc 1 309 36 is_stmt 0 view .LVU4012
 11575 3f4f 4889CF   		mov	rdi, rcx	# tmp1454, index
 11576 3f52 48C1EF06 		shr	rdi, 6	# tmp1454,
 11577              	# sieve_extend.c:309:             } while (index_word == wordindex(index));
 309:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 11578              		.loc 1 309 13 view .LVU4013
 11579 3f56 4839F8   		cmp	rax, rdi	# index_word, tmp1454
 11580 3f59 7535     		jne	.L1364	#,
 306:sieve_extend.c ****                 mask |= markmask(index);
 11581              		.loc 1 306 13 is_stmt 1 view .LVU4014
 307:sieve_extend.c ****                 index += step;
 11582              		.loc 1 307 17 view .LVU4015
 11583              	# sieve_extend.c:307:                 mask |= markmask(index);
 307:sieve_extend.c ****                 index += step;
 11584              		.loc 1 307 25 is_stmt 0 view .LVU4016
 11585 3f5b C4C2F1F7 		shlx	rdi, r13, rcx	# tmp1455, tmp1041, index
 11585      FD
 11586              	# sieve_extend.c:308:                 index += step;
 308:sieve_extend.c ****             } while (index_word == wordindex(index));
 11587              		.loc 1 308 23 view .LVU4017
 11588 3f60 4C01C9   		add	rcx, r9	# index, step
 11589              	# sieve_extend.c:307:                 mask |= markmask(index);
 307:sieve_extend.c ****                 index += step;
 11590              		.loc 1 307 22 view .LVU4018
 11591 3f63 4809FA   		or	rdx, rdi	# mask, tmp1455
 11592              	.LVL756:
 308:sieve_extend.c ****             } while (index_word == wordindex(index));
 11593              		.loc 1 308 17 is_stmt 1 view .LVU4019
 309:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 11594              		.loc 1 309 21 view .LVU4020
 11595              	# sieve_extend.c:309:             } while (index_word == wordindex(index));
 309:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 11596              		.loc 1 309 36 is_stmt 0 view .LVU4021
 11597 3f66 4889CF   		mov	rdi, rcx	# tmp1456, index
 11598 3f69 48C1EF06 		shr	rdi, 6	# tmp1456,
 11599              	# sieve_extend.c:309:             } while (index_word == wordindex(index));
 309:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 11600              		.loc 1 309 13 view .LVU4022
GAS LISTING /tmp/cctyCFAS.s 			page 316


 11601 3f6d 4839F8   		cmp	rax, rdi	# index_word, tmp1456
 11602 3f70 751E     		jne	.L1364	#,
 306:sieve_extend.c ****                 mask |= markmask(index);
 11603              		.loc 1 306 13 is_stmt 1 view .LVU4023
 307:sieve_extend.c ****                 index += step;
 11604              		.loc 1 307 17 view .LVU4024
 11605              	# sieve_extend.c:307:                 mask |= markmask(index);
 307:sieve_extend.c ****                 index += step;
 11606              		.loc 1 307 25 is_stmt 0 view .LVU4025
 11607 3f72 C4C2F1F7 		shlx	rdi, r13, rcx	# tmp1457, tmp1041, index
 11607      FD
 11608              	# sieve_extend.c:308:                 index += step;
 308:sieve_extend.c ****             } while (index_word == wordindex(index));
 11609              		.loc 1 308 23 view .LVU4026
 11610 3f77 4C01C9   		add	rcx, r9	# index, step
 11611              	# sieve_extend.c:307:                 mask |= markmask(index);
 307:sieve_extend.c ****                 index += step;
 11612              		.loc 1 307 22 view .LVU4027
 11613 3f7a 4809FA   		or	rdx, rdi	# mask, tmp1457
 11614              	.LVL757:
 308:sieve_extend.c ****             } while (index_word == wordindex(index));
 11615              		.loc 1 308 17 is_stmt 1 view .LVU4028
 309:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 11616              		.loc 1 309 21 view .LVU4029
 11617              	# sieve_extend.c:309:             } while (index_word == wordindex(index));
 309:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 11618              		.loc 1 309 36 is_stmt 0 view .LVU4030
 11619 3f7d 4889CF   		mov	rdi, rcx	# tmp1458, index
 11620 3f80 48C1EF06 		shr	rdi, 6	# tmp1458,
 11621              	# sieve_extend.c:309:             } while (index_word == wordindex(index));
 309:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 11622              		.loc 1 309 13 view .LVU4031
 11623 3f84 4839F8   		cmp	rax, rdi	# index_word, tmp1458
 11624 3f87 0F843CFF 		je	.L749	#,
 11624      FFFF
 11625 3f8d 0F1F00   		.p2align 4,,10
 11626              		.p2align 3
 11627              	.L1364:
 310:sieve_extend.c ****         }
 11628              		.loc 1 310 13 is_stmt 1 view .LVU4032
 11629              	.LVL758:
 11630              	.LBB562:
 11631              	.LBI558:
 154:sieve_extend.c **** // #if __APPLE__
 11632              		.loc 1 154 20 view .LVU4033
 11633              	.LBB560:
 186:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 11634              		.loc 1 186 4 view .LVU4034
 187:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  = &bitarray[((range_stop_word>step*5) ? (range_sto
 11635              		.loc 1 187 4 view .LVU4035
 11636              	# sieve_extend.c:187:    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(
 187:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  = &bitarray[((range_stop_word>step*5) ? (range_sto
 11637              		.loc 1 187 78 is_stmt 0 view .LVU4036
 11638 3f90 498D04C4 		lea	rax, [r12+rax*8]	# index_ptr,
 11639              	.LVL759:
 188:sieve_extend.c **** 
 11640              		.loc 1 188 4 is_stmt 1 view .LVU4037
GAS LISTING /tmp/cctyCFAS.s 			page 317


 192:sieve_extend.c ****        *index_ptr |= mask;
 11641              		.loc 1 192 4 view .LVU4038
 192:sieve_extend.c ****        *index_ptr |= mask;
 11642              		.loc 1 192 10 view .LVU4039
 11643 3f94 4839D8   		cmp	rax, rbx	# index_ptr, prephitmp_1754
 11644 3f97 0F830301 		jnb	.L750	#,
 11644      0000
 192:sieve_extend.c ****        *index_ptr |= mask;
 11645              		.loc 1 192 10 is_stmt 0 view .LVU4040
 11646 3f9d 488B7C24 		mov	rdi, QWORD PTR 104[rsp]	# _1825, %sfp
 11646      68
 11647 3fa2 4801C7   		add	rdi, rax	# ivtmp.537, index_ptr
 11648              	.L751:
 193:sieve_extend.c ****        index_ptr+=step;
 11649              		.loc 1 193 8 is_stmt 1 view .LVU4041
 11650              	# sieve_extend.c:193:        *index_ptr |= mask;
 193:sieve_extend.c ****        index_ptr+=step;
 11651              		.loc 1 193 19 is_stmt 0 view .LVU4042
 11652 3fa5 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_1084, offset: 0B], mask
 194:sieve_extend.c ****        *index_ptr |= mask;
 11653              		.loc 1 194 8 is_stmt 1 view .LVU4043
 11654              	.LVL760:
 195:sieve_extend.c ****        index_ptr+=step;
 11655              		.loc 1 195 8 view .LVU4044
 11656              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 11657              		.loc 1 195 19 is_stmt 0 view .LVU4045
 11658 3fa8 48091430 		or	QWORD PTR [rax+rsi], rdx	# MEM[base: index_ptr_1084, index: _622, offset: 0B], mask
 196:sieve_extend.c ****        *index_ptr |= mask;
 11659              		.loc 1 196 8 is_stmt 1 view .LVU4046
 11660              	.LVL761:
 197:sieve_extend.c ****        index_ptr+=step;
 11661              		.loc 1 197 8 view .LVU4047
 11662              	# sieve_extend.c:197:        *index_ptr |= mask;
 197:sieve_extend.c ****        index_ptr+=step;
 11663              		.loc 1 197 19 is_stmt 0 view .LVU4048
 11664 3fac 480917   		or	QWORD PTR [rdi], rdx	# MEM[base: _1814, offset: 0B], mask
 198:sieve_extend.c ****        *index_ptr |= mask;
 11665              		.loc 1 198 8 is_stmt 1 view .LVU4049
 11666              	.LVL762:
 199:sieve_extend.c ****        index_ptr+=step;
 11667              		.loc 1 199 8 view .LVU4050
 11668              	# sieve_extend.c:199:        *index_ptr |= mask;
 199:sieve_extend.c ****        index_ptr+=step;
 11669              		.loc 1 199 19 is_stmt 0 view .LVU4051
 11670 3faf 48091437 		or	QWORD PTR [rdi+rsi], rdx	# MEM[base: _1814, index: _622, offset: 0B], mask
 200:sieve_extend.c ****        *index_ptr |= mask;
 11671              		.loc 1 200 8 is_stmt 1 view .LVU4052
 11672              	.LVL763:
 201:sieve_extend.c ****        index_ptr+=step;
 11673              		.loc 1 201 8 view .LVU4053
 11674 3fb3 4C01DF   		add	rdi, r11	# ivtmp.537, tmp881
 11675              	# sieve_extend.c:201:        *index_ptr |= mask;
 201:sieve_extend.c ****        index_ptr+=step;
 11676              		.loc 1 201 19 is_stmt 0 view .LVU4054
 11677 3fb6 480914B0 		or	QWORD PTR [rax+rsi*4], rdx	# MEM[base: index_ptr_1084, index: _622, step: 4, offset: 0B], mask
 202:sieve_extend.c ****    }
GAS LISTING /tmp/cctyCFAS.s 			page 318


 11678              		.loc 1 202 8 is_stmt 1 view .LVU4055
 11679 3fba 4C01D8   		add	rax, r11	# index_ptr, tmp881
 11680              	.LVL764:
 192:sieve_extend.c ****        *index_ptr |= mask;
 11681              		.loc 1 192 10 view .LVU4056
 11682 3fbd 4839C3   		cmp	rbx, rax	# prephitmp_1754, index_ptr
 11683 3fc0 0F86DA00 		jbe	.L750	#,
 11683      0000
 193:sieve_extend.c ****        index_ptr+=step;
 11684              		.loc 1 193 8 view .LVU4057
 11685              	# sieve_extend.c:193:        *index_ptr |= mask;
 193:sieve_extend.c ****        index_ptr+=step;
 11686              		.loc 1 193 19 is_stmt 0 view .LVU4058
 11687 3fc6 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_1084, offset: 0B], mask
 194:sieve_extend.c ****        *index_ptr |= mask;
 11688              		.loc 1 194 8 is_stmt 1 view .LVU4059
 11689              	.LVL765:
 195:sieve_extend.c ****        index_ptr+=step;
 11690              		.loc 1 195 8 view .LVU4060
 11691              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 11692              		.loc 1 195 19 is_stmt 0 view .LVU4061
 11693 3fc9 48091430 		or	QWORD PTR [rax+rsi], rdx	# MEM[base: index_ptr_1084, index: _622, offset: 0B], mask
 196:sieve_extend.c ****        *index_ptr |= mask;
 11694              		.loc 1 196 8 is_stmt 1 view .LVU4062
 11695              	.LVL766:
 197:sieve_extend.c ****        index_ptr+=step;
 11696              		.loc 1 197 8 view .LVU4063
 11697              	# sieve_extend.c:197:        *index_ptr |= mask;
 197:sieve_extend.c ****        index_ptr+=step;
 11698              		.loc 1 197 19 is_stmt 0 view .LVU4064
 11699 3fcd 480917   		or	QWORD PTR [rdi], rdx	# MEM[base: _1814, offset: 0B], mask
 198:sieve_extend.c ****        *index_ptr |= mask;
 11700              		.loc 1 198 8 is_stmt 1 view .LVU4065
 11701              	.LVL767:
 199:sieve_extend.c ****        index_ptr+=step;
 11702              		.loc 1 199 8 view .LVU4066
 11703              	# sieve_extend.c:199:        *index_ptr |= mask;
 199:sieve_extend.c ****        index_ptr+=step;
 11704              		.loc 1 199 19 is_stmt 0 view .LVU4067
 11705 3fd0 48091437 		or	QWORD PTR [rdi+rsi], rdx	# MEM[base: _1814, index: _622, offset: 0B], mask
 200:sieve_extend.c ****        *index_ptr |= mask;
 11706              		.loc 1 200 8 is_stmt 1 view .LVU4068
 11707              	.LVL768:
 201:sieve_extend.c ****        index_ptr+=step;
 11708              		.loc 1 201 8 view .LVU4069
 11709 3fd4 4C01DF   		add	rdi, r11	# ivtmp.537, tmp881
 11710              	# sieve_extend.c:201:        *index_ptr |= mask;
 201:sieve_extend.c ****        index_ptr+=step;
 11711              		.loc 1 201 19 is_stmt 0 view .LVU4070
 11712 3fd7 480914B0 		or	QWORD PTR [rax+rsi*4], rdx	# MEM[base: index_ptr_1084, index: _622, step: 4, offset: 0B], mask
 202:sieve_extend.c ****    }
 11713              		.loc 1 202 8 is_stmt 1 view .LVU4071
 11714 3fdb 4C01D8   		add	rax, r11	# index_ptr, tmp881
 11715              	.LVL769:
 192:sieve_extend.c ****        *index_ptr |= mask;
 11716              		.loc 1 192 10 view .LVU4072
GAS LISTING /tmp/cctyCFAS.s 			page 319


 11717 3fde 4839C3   		cmp	rbx, rax	# prephitmp_1754, index_ptr
 11718 3fe1 0F86B900 		jbe	.L750	#,
 11718      0000
 193:sieve_extend.c ****        index_ptr+=step;
 11719              		.loc 1 193 8 view .LVU4073
 11720              	# sieve_extend.c:193:        *index_ptr |= mask;
 193:sieve_extend.c ****        index_ptr+=step;
 11721              		.loc 1 193 19 is_stmt 0 view .LVU4074
 11722 3fe7 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_1084, offset: 0B], mask
 194:sieve_extend.c ****        *index_ptr |= mask;
 11723              		.loc 1 194 8 is_stmt 1 view .LVU4075
 11724              	.LVL770:
 195:sieve_extend.c ****        index_ptr+=step;
 11725              		.loc 1 195 8 view .LVU4076
 11726              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 11727              		.loc 1 195 19 is_stmt 0 view .LVU4077
 11728 3fea 48091430 		or	QWORD PTR [rax+rsi], rdx	# MEM[base: index_ptr_1084, index: _622, offset: 0B], mask
 196:sieve_extend.c ****        *index_ptr |= mask;
 11729              		.loc 1 196 8 is_stmt 1 view .LVU4078
 11730              	.LVL771:
 197:sieve_extend.c ****        index_ptr+=step;
 11731              		.loc 1 197 8 view .LVU4079
 11732              	# sieve_extend.c:197:        *index_ptr |= mask;
 197:sieve_extend.c ****        index_ptr+=step;
 11733              		.loc 1 197 19 is_stmt 0 view .LVU4080
 11734 3fee 480917   		or	QWORD PTR [rdi], rdx	# MEM[base: _1814, offset: 0B], mask
 198:sieve_extend.c ****        *index_ptr |= mask;
 11735              		.loc 1 198 8 is_stmt 1 view .LVU4081
 11736              	.LVL772:
 199:sieve_extend.c ****        index_ptr+=step;
 11737              		.loc 1 199 8 view .LVU4082
 11738              	# sieve_extend.c:199:        *index_ptr |= mask;
 199:sieve_extend.c ****        index_ptr+=step;
 11739              		.loc 1 199 19 is_stmt 0 view .LVU4083
 11740 3ff1 48091437 		or	QWORD PTR [rdi+rsi], rdx	# MEM[base: _1814, index: _622, offset: 0B], mask
 200:sieve_extend.c ****        *index_ptr |= mask;
 11741              		.loc 1 200 8 is_stmt 1 view .LVU4084
 11742              	.LVL773:
 201:sieve_extend.c ****        index_ptr+=step;
 11743              		.loc 1 201 8 view .LVU4085
 11744 3ff5 4C01DF   		add	rdi, r11	# ivtmp.537, tmp881
 11745              	# sieve_extend.c:201:        *index_ptr |= mask;
 201:sieve_extend.c ****        index_ptr+=step;
 11746              		.loc 1 201 19 is_stmt 0 view .LVU4086
 11747 3ff8 480914B0 		or	QWORD PTR [rax+rsi*4], rdx	# MEM[base: index_ptr_1084, index: _622, step: 4, offset: 0B], mask
 202:sieve_extend.c ****    }
 11748              		.loc 1 202 8 is_stmt 1 view .LVU4087
 11749 3ffc 4C01D8   		add	rax, r11	# index_ptr, tmp881
 11750              	.LVL774:
 192:sieve_extend.c ****        *index_ptr |= mask;
 11751              		.loc 1 192 10 view .LVU4088
 11752 3fff 4839C3   		cmp	rbx, rax	# prephitmp_1754, index_ptr
 11753 4002 0F869800 		jbe	.L750	#,
 11753      0000
 193:sieve_extend.c ****        index_ptr+=step;
 11754              		.loc 1 193 8 view .LVU4089
GAS LISTING /tmp/cctyCFAS.s 			page 320


 11755              	# sieve_extend.c:193:        *index_ptr |= mask;
 193:sieve_extend.c ****        index_ptr+=step;
 11756              		.loc 1 193 19 is_stmt 0 view .LVU4090
 11757 4008 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_1084, offset: 0B], mask
 194:sieve_extend.c ****        *index_ptr |= mask;
 11758              		.loc 1 194 8 is_stmt 1 view .LVU4091
 11759              	.LVL775:
 195:sieve_extend.c ****        index_ptr+=step;
 11760              		.loc 1 195 8 view .LVU4092
 11761              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 11762              		.loc 1 195 19 is_stmt 0 view .LVU4093
 11763 400b 48091430 		or	QWORD PTR [rax+rsi], rdx	# MEM[base: index_ptr_1084, index: _622, offset: 0B], mask
 196:sieve_extend.c ****        *index_ptr |= mask;
 11764              		.loc 1 196 8 is_stmt 1 view .LVU4094
 11765              	.LVL776:
 197:sieve_extend.c ****        index_ptr+=step;
 11766              		.loc 1 197 8 view .LVU4095
 11767              	# sieve_extend.c:197:        *index_ptr |= mask;
 197:sieve_extend.c ****        index_ptr+=step;
 11768              		.loc 1 197 19 is_stmt 0 view .LVU4096
 11769 400f 480917   		or	QWORD PTR [rdi], rdx	# MEM[base: _1814, offset: 0B], mask
 198:sieve_extend.c ****        *index_ptr |= mask;
 11770              		.loc 1 198 8 is_stmt 1 view .LVU4097
 11771              	.LVL777:
 199:sieve_extend.c ****        index_ptr+=step;
 11772              		.loc 1 199 8 view .LVU4098
 11773              	# sieve_extend.c:199:        *index_ptr |= mask;
 199:sieve_extend.c ****        index_ptr+=step;
 11774              		.loc 1 199 19 is_stmt 0 view .LVU4099
 11775 4012 48091437 		or	QWORD PTR [rdi+rsi], rdx	# MEM[base: _1814, index: _622, offset: 0B], mask
 200:sieve_extend.c ****        *index_ptr |= mask;
 11776              		.loc 1 200 8 is_stmt 1 view .LVU4100
 11777              	.LVL778:
 201:sieve_extend.c ****        index_ptr+=step;
 11778              		.loc 1 201 8 view .LVU4101
 11779 4016 4C01DF   		add	rdi, r11	# ivtmp.537, tmp881
 11780              	# sieve_extend.c:201:        *index_ptr |= mask;
 201:sieve_extend.c ****        index_ptr+=step;
 11781              		.loc 1 201 19 is_stmt 0 view .LVU4102
 11782 4019 480914B0 		or	QWORD PTR [rax+rsi*4], rdx	# MEM[base: index_ptr_1084, index: _622, step: 4, offset: 0B], mask
 202:sieve_extend.c ****    }
 11783              		.loc 1 202 8 is_stmt 1 view .LVU4103
 11784 401d 4C01D8   		add	rax, r11	# index_ptr, tmp881
 11785              	.LVL779:
 192:sieve_extend.c ****        *index_ptr |= mask;
 11786              		.loc 1 192 10 view .LVU4104
 11787 4020 4839C3   		cmp	rbx, rax	# prephitmp_1754, index_ptr
 11788 4023 767B     		jbe	.L750	#,
 193:sieve_extend.c ****        index_ptr+=step;
 11789              		.loc 1 193 8 view .LVU4105
 11790              	# sieve_extend.c:193:        *index_ptr |= mask;
 193:sieve_extend.c ****        index_ptr+=step;
 11791              		.loc 1 193 19 is_stmt 0 view .LVU4106
 11792 4025 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_1084, offset: 0B], mask
 194:sieve_extend.c ****        *index_ptr |= mask;
 11793              		.loc 1 194 8 is_stmt 1 view .LVU4107
GAS LISTING /tmp/cctyCFAS.s 			page 321


 11794              	.LVL780:
 195:sieve_extend.c ****        index_ptr+=step;
 11795              		.loc 1 195 8 view .LVU4108
 11796              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 11797              		.loc 1 195 19 is_stmt 0 view .LVU4109
 11798 4028 48091430 		or	QWORD PTR [rax+rsi], rdx	# MEM[base: index_ptr_1084, index: _622, offset: 0B], mask
 196:sieve_extend.c ****        *index_ptr |= mask;
 11799              		.loc 1 196 8 is_stmt 1 view .LVU4110
 11800              	.LVL781:
 197:sieve_extend.c ****        index_ptr+=step;
 11801              		.loc 1 197 8 view .LVU4111
 11802              	# sieve_extend.c:197:        *index_ptr |= mask;
 197:sieve_extend.c ****        index_ptr+=step;
 11803              		.loc 1 197 19 is_stmt 0 view .LVU4112
 11804 402c 480917   		or	QWORD PTR [rdi], rdx	# MEM[base: _1814, offset: 0B], mask
 198:sieve_extend.c ****        *index_ptr |= mask;
 11805              		.loc 1 198 8 is_stmt 1 view .LVU4113
 11806              	.LVL782:
 199:sieve_extend.c ****        index_ptr+=step;
 11807              		.loc 1 199 8 view .LVU4114
 11808              	# sieve_extend.c:199:        *index_ptr |= mask;
 199:sieve_extend.c ****        index_ptr+=step;
 11809              		.loc 1 199 19 is_stmt 0 view .LVU4115
 11810 402f 48091437 		or	QWORD PTR [rdi+rsi], rdx	# MEM[base: _1814, index: _622, offset: 0B], mask
 200:sieve_extend.c ****        *index_ptr |= mask;
 11811              		.loc 1 200 8 is_stmt 1 view .LVU4116
 11812              	.LVL783:
 201:sieve_extend.c ****        index_ptr+=step;
 11813              		.loc 1 201 8 view .LVU4117
 11814 4033 4C01DF   		add	rdi, r11	# ivtmp.537, tmp881
 11815              	# sieve_extend.c:201:        *index_ptr |= mask;
 201:sieve_extend.c ****        index_ptr+=step;
 11816              		.loc 1 201 19 is_stmt 0 view .LVU4118
 11817 4036 480914B0 		or	QWORD PTR [rax+rsi*4], rdx	# MEM[base: index_ptr_1084, index: _622, step: 4, offset: 0B], mask
 202:sieve_extend.c ****    }
 11818              		.loc 1 202 8 is_stmt 1 view .LVU4119
 11819 403a 4C01D8   		add	rax, r11	# index_ptr, tmp881
 11820              	.LVL784:
 192:sieve_extend.c ****        *index_ptr |= mask;
 11821              		.loc 1 192 10 view .LVU4120
 11822 403d 4839C3   		cmp	rbx, rax	# prephitmp_1754, index_ptr
 11823 4040 765E     		jbe	.L750	#,
 193:sieve_extend.c ****        index_ptr+=step;
 11824              		.loc 1 193 8 view .LVU4121
 11825              	# sieve_extend.c:193:        *index_ptr |= mask;
 193:sieve_extend.c ****        index_ptr+=step;
 11826              		.loc 1 193 19 is_stmt 0 view .LVU4122
 11827 4042 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_1084, offset: 0B], mask
 194:sieve_extend.c ****        *index_ptr |= mask;
 11828              		.loc 1 194 8 is_stmt 1 view .LVU4123
 11829              	.LVL785:
 195:sieve_extend.c ****        index_ptr+=step;
 11830              		.loc 1 195 8 view .LVU4124
 11831              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 11832              		.loc 1 195 19 is_stmt 0 view .LVU4125
GAS LISTING /tmp/cctyCFAS.s 			page 322


 11833 4045 48091430 		or	QWORD PTR [rax+rsi], rdx	# MEM[base: index_ptr_1084, index: _622, offset: 0B], mask
 196:sieve_extend.c ****        *index_ptr |= mask;
 11834              		.loc 1 196 8 is_stmt 1 view .LVU4126
 11835              	.LVL786:
 197:sieve_extend.c ****        index_ptr+=step;
 11836              		.loc 1 197 8 view .LVU4127
 11837              	# sieve_extend.c:197:        *index_ptr |= mask;
 197:sieve_extend.c ****        index_ptr+=step;
 11838              		.loc 1 197 19 is_stmt 0 view .LVU4128
 11839 4049 480917   		or	QWORD PTR [rdi], rdx	# MEM[base: _1814, offset: 0B], mask
 198:sieve_extend.c ****        *index_ptr |= mask;
 11840              		.loc 1 198 8 is_stmt 1 view .LVU4129
 11841              	.LVL787:
 199:sieve_extend.c ****        index_ptr+=step;
 11842              		.loc 1 199 8 view .LVU4130
 11843              	# sieve_extend.c:199:        *index_ptr |= mask;
 199:sieve_extend.c ****        index_ptr+=step;
 11844              		.loc 1 199 19 is_stmt 0 view .LVU4131
 11845 404c 48091437 		or	QWORD PTR [rdi+rsi], rdx	# MEM[base: _1814, index: _622, offset: 0B], mask
 200:sieve_extend.c ****        *index_ptr |= mask;
 11846              		.loc 1 200 8 is_stmt 1 view .LVU4132
 11847              	.LVL788:
 201:sieve_extend.c ****        index_ptr+=step;
 11848              		.loc 1 201 8 view .LVU4133
 11849 4050 4C01DF   		add	rdi, r11	# ivtmp.537, tmp881
 11850              	# sieve_extend.c:201:        *index_ptr |= mask;
 201:sieve_extend.c ****        index_ptr+=step;
 11851              		.loc 1 201 19 is_stmt 0 view .LVU4134
 11852 4053 480914B0 		or	QWORD PTR [rax+rsi*4], rdx	# MEM[base: index_ptr_1084, index: _622, step: 4, offset: 0B], mask
 202:sieve_extend.c ****    }
 11853              		.loc 1 202 8 is_stmt 1 view .LVU4135
 11854 4057 4C01D8   		add	rax, r11	# index_ptr, tmp881
 11855              	.LVL789:
 192:sieve_extend.c ****        *index_ptr |= mask;
 11856              		.loc 1 192 10 view .LVU4136
 11857 405a 4839C3   		cmp	rbx, rax	# prephitmp_1754, index_ptr
 11858 405d 7641     		jbe	.L750	#,
 193:sieve_extend.c ****        index_ptr+=step;
 11859              		.loc 1 193 8 view .LVU4137
 11860              	# sieve_extend.c:193:        *index_ptr |= mask;
 193:sieve_extend.c ****        index_ptr+=step;
 11861              		.loc 1 193 19 is_stmt 0 view .LVU4138
 11862 405f 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_1084, offset: 0B], mask
 194:sieve_extend.c ****        *index_ptr |= mask;
 11863              		.loc 1 194 8 is_stmt 1 view .LVU4139
 11864              	.LVL790:
 195:sieve_extend.c ****        index_ptr+=step;
 11865              		.loc 1 195 8 view .LVU4140
 11866              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 11867              		.loc 1 195 19 is_stmt 0 view .LVU4141
 11868 4062 48091430 		or	QWORD PTR [rax+rsi], rdx	# MEM[base: index_ptr_1084, index: _622, offset: 0B], mask
 196:sieve_extend.c ****        *index_ptr |= mask;
 11869              		.loc 1 196 8 is_stmt 1 view .LVU4142
 11870              	.LVL791:
 197:sieve_extend.c ****        index_ptr+=step;
 11871              		.loc 1 197 8 view .LVU4143
GAS LISTING /tmp/cctyCFAS.s 			page 323


 11872              	# sieve_extend.c:197:        *index_ptr |= mask;
 197:sieve_extend.c ****        index_ptr+=step;
 11873              		.loc 1 197 19 is_stmt 0 view .LVU4144
 11874 4066 480917   		or	QWORD PTR [rdi], rdx	# MEM[base: _1814, offset: 0B], mask
 198:sieve_extend.c ****        *index_ptr |= mask;
 11875              		.loc 1 198 8 is_stmt 1 view .LVU4145
 11876              	.LVL792:
 199:sieve_extend.c ****        index_ptr+=step;
 11877              		.loc 1 199 8 view .LVU4146
 11878              	# sieve_extend.c:199:        *index_ptr |= mask;
 199:sieve_extend.c ****        index_ptr+=step;
 11879              		.loc 1 199 19 is_stmt 0 view .LVU4147
 11880 4069 48091437 		or	QWORD PTR [rdi+rsi], rdx	# MEM[base: _1814, index: _622, offset: 0B], mask
 200:sieve_extend.c ****        *index_ptr |= mask;
 11881              		.loc 1 200 8 is_stmt 1 view .LVU4148
 11882              	.LVL793:
 201:sieve_extend.c ****        index_ptr+=step;
 11883              		.loc 1 201 8 view .LVU4149
 11884 406d 4C01DF   		add	rdi, r11	# ivtmp.537, tmp881
 11885              	# sieve_extend.c:201:        *index_ptr |= mask;
 201:sieve_extend.c ****        index_ptr+=step;
 11886              		.loc 1 201 19 is_stmt 0 view .LVU4150
 11887 4070 480914B0 		or	QWORD PTR [rax+rsi*4], rdx	# MEM[base: index_ptr_1084, index: _622, step: 4, offset: 0B], mask
 202:sieve_extend.c ****    }
 11888              		.loc 1 202 8 is_stmt 1 view .LVU4151
 11889 4074 4C01D8   		add	rax, r11	# index_ptr, tmp881
 11890              	.LVL794:
 192:sieve_extend.c ****        *index_ptr |= mask;
 11891              		.loc 1 192 10 view .LVU4152
 11892 4077 4839C3   		cmp	rbx, rax	# prephitmp_1754, index_ptr
 11893 407a 7624     		jbe	.L750	#,
 193:sieve_extend.c ****        index_ptr+=step;
 11894              		.loc 1 193 8 view .LVU4153
 11895              	# sieve_extend.c:193:        *index_ptr |= mask;
 193:sieve_extend.c ****        index_ptr+=step;
 11896              		.loc 1 193 19 is_stmt 0 view .LVU4154
 11897 407c 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_1084, offset: 0B], mask
 194:sieve_extend.c ****        *index_ptr |= mask;
 11898              		.loc 1 194 8 is_stmt 1 view .LVU4155
 11899              	.LVL795:
 195:sieve_extend.c ****        index_ptr+=step;
 11900              		.loc 1 195 8 view .LVU4156
 11901              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 11902              		.loc 1 195 19 is_stmt 0 view .LVU4157
 11903 407f 48091430 		or	QWORD PTR [rax+rsi], rdx	# MEM[base: index_ptr_1084, index: _622, offset: 0B], mask
 196:sieve_extend.c ****        *index_ptr |= mask;
 11904              		.loc 1 196 8 is_stmt 1 view .LVU4158
 11905              	.LVL796:
 197:sieve_extend.c ****        index_ptr+=step;
 11906              		.loc 1 197 8 view .LVU4159
 11907              	# sieve_extend.c:197:        *index_ptr |= mask;
 197:sieve_extend.c ****        index_ptr+=step;
 11908              		.loc 1 197 19 is_stmt 0 view .LVU4160
 11909 4083 480917   		or	QWORD PTR [rdi], rdx	# MEM[base: _1814, offset: 0B], mask
 198:sieve_extend.c ****        *index_ptr |= mask;
 11910              		.loc 1 198 8 is_stmt 1 view .LVU4161
GAS LISTING /tmp/cctyCFAS.s 			page 324


 11911              	.LVL797:
 199:sieve_extend.c ****        index_ptr+=step;
 11912              		.loc 1 199 8 view .LVU4162
 11913              	# sieve_extend.c:199:        *index_ptr |= mask;
 199:sieve_extend.c ****        index_ptr+=step;
 11914              		.loc 1 199 19 is_stmt 0 view .LVU4163
 11915 4086 48091437 		or	QWORD PTR [rdi+rsi], rdx	# MEM[base: _1814, index: _622, offset: 0B], mask
 200:sieve_extend.c ****        *index_ptr |= mask;
 11916              		.loc 1 200 8 is_stmt 1 view .LVU4164
 11917              	.LVL798:
 201:sieve_extend.c ****        index_ptr+=step;
 11918              		.loc 1 201 8 view .LVU4165
 11919 408a 4C01DF   		add	rdi, r11	# ivtmp.537, tmp881
 11920              	# sieve_extend.c:201:        *index_ptr |= mask;
 201:sieve_extend.c ****        index_ptr+=step;
 11921              		.loc 1 201 19 is_stmt 0 view .LVU4166
 11922 408d 480914B0 		or	QWORD PTR [rax+rsi*4], rdx	# MEM[base: index_ptr_1084, index: _622, step: 4, offset: 0B], mask
 202:sieve_extend.c ****    }
 11923              		.loc 1 202 8 is_stmt 1 view .LVU4167
 11924 4091 4C01D8   		add	rax, r11	# index_ptr, tmp881
 11925              	.LVL799:
 192:sieve_extend.c ****        *index_ptr |= mask;
 11926              		.loc 1 192 10 view .LVU4168
 11927 4094 4839C3   		cmp	rbx, rax	# prephitmp_1754, index_ptr
 11928 4097 0F8708FF 		ja	.L751	#,
 11928      FFFF
 11929 409d 0F1F00   		.p2align 4,,10
 11930              		.p2align 3
 11931              	.L750:
 205:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 11932              		.loc 1 205 4 view .LVU4169
 11933              	.LVL800:
 206:sieve_extend.c ****        *index_ptr |= mask;
 11934              		.loc 1 206 4 view .LVU4170
 206:sieve_extend.c ****        *index_ptr |= mask;
 11935              		.loc 1 206 10 view .LVU4171
 11936 40a0 4C39C0   		cmp	rax, r8	# index_ptr, range_stop_ptr
 11937 40a3 735B     		jnb	.L752	#,
 11938              	.L753:
 207:sieve_extend.c ****        index_ptr+=step;
 11939              		.loc 1 207 8 view .LVU4172
 11940              	# sieve_extend.c:207:        *index_ptr |= mask;
 207:sieve_extend.c ****        index_ptr+=step;
 11941              		.loc 1 207 19 is_stmt 0 view .LVU4173
 11942 40a5 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_1080, offset: 0B], mask
 208:sieve_extend.c ****    }
 11943              		.loc 1 208 8 is_stmt 1 view .LVU4174
 11944              	# sieve_extend.c:208:        index_ptr+=step;
 208:sieve_extend.c ****    }
 11945              		.loc 1 208 17 is_stmt 0 view .LVU4175
 11946 40a8 4801F0   		add	rax, rsi	# index_ptr, _622
 11947              	.LVL801:
 206:sieve_extend.c ****        *index_ptr |= mask;
 11948              		.loc 1 206 10 is_stmt 1 view .LVU4176
 11949 40ab 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 11950 40ae 7650     		jbe	.L752	#,
 207:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/cctyCFAS.s 			page 325


 11951              		.loc 1 207 8 view .LVU4177
 11952              	# sieve_extend.c:207:        *index_ptr |= mask;
 207:sieve_extend.c ****        index_ptr+=step;
 11953              		.loc 1 207 19 is_stmt 0 view .LVU4178
 11954 40b0 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_1080, offset: 0B], mask
 208:sieve_extend.c ****    }
 11955              		.loc 1 208 8 is_stmt 1 view .LVU4179
 11956              	# sieve_extend.c:208:        index_ptr+=step;
 208:sieve_extend.c ****    }
 11957              		.loc 1 208 17 is_stmt 0 view .LVU4180
 11958 40b3 4801F0   		add	rax, rsi	# index_ptr, _622
 11959              	.LVL802:
 206:sieve_extend.c ****        *index_ptr |= mask;
 11960              		.loc 1 206 10 is_stmt 1 view .LVU4181
 11961 40b6 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 11962 40b9 7645     		jbe	.L752	#,
 207:sieve_extend.c ****        index_ptr+=step;
 11963              		.loc 1 207 8 view .LVU4182
 11964              	# sieve_extend.c:207:        *index_ptr |= mask;
 207:sieve_extend.c ****        index_ptr+=step;
 11965              		.loc 1 207 19 is_stmt 0 view .LVU4183
 11966 40bb 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_1080, offset: 0B], mask
 208:sieve_extend.c ****    }
 11967              		.loc 1 208 8 is_stmt 1 view .LVU4184
 11968              	# sieve_extend.c:208:        index_ptr+=step;
 208:sieve_extend.c ****    }
 11969              		.loc 1 208 17 is_stmt 0 view .LVU4185
 11970 40be 4801F0   		add	rax, rsi	# index_ptr, _622
 11971              	.LVL803:
 206:sieve_extend.c ****        *index_ptr |= mask;
 11972              		.loc 1 206 10 is_stmt 1 view .LVU4186
 11973 40c1 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 11974 40c4 763A     		jbe	.L752	#,
 207:sieve_extend.c ****        index_ptr+=step;
 11975              		.loc 1 207 8 view .LVU4187
 11976              	# sieve_extend.c:207:        *index_ptr |= mask;
 207:sieve_extend.c ****        index_ptr+=step;
 11977              		.loc 1 207 19 is_stmt 0 view .LVU4188
 11978 40c6 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_1080, offset: 0B], mask
 208:sieve_extend.c ****    }
 11979              		.loc 1 208 8 is_stmt 1 view .LVU4189
 11980              	# sieve_extend.c:208:        index_ptr+=step;
 208:sieve_extend.c ****    }
 11981              		.loc 1 208 17 is_stmt 0 view .LVU4190
 11982 40c9 4801F0   		add	rax, rsi	# index_ptr, _622
 11983              	.LVL804:
 206:sieve_extend.c ****        *index_ptr |= mask;
 11984              		.loc 1 206 10 is_stmt 1 view .LVU4191
 11985 40cc 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 11986 40cf 762F     		jbe	.L752	#,
 207:sieve_extend.c ****        index_ptr+=step;
 11987              		.loc 1 207 8 view .LVU4192
 11988              	# sieve_extend.c:207:        *index_ptr |= mask;
 207:sieve_extend.c ****        index_ptr+=step;
 11989              		.loc 1 207 19 is_stmt 0 view .LVU4193
 11990 40d1 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_1080, offset: 0B], mask
 208:sieve_extend.c ****    }
GAS LISTING /tmp/cctyCFAS.s 			page 326


 11991              		.loc 1 208 8 is_stmt 1 view .LVU4194
 11992              	# sieve_extend.c:208:        index_ptr+=step;
 208:sieve_extend.c ****    }
 11993              		.loc 1 208 17 is_stmt 0 view .LVU4195
 11994 40d4 4801F0   		add	rax, rsi	# index_ptr, _622
 11995              	.LVL805:
 206:sieve_extend.c ****        *index_ptr |= mask;
 11996              		.loc 1 206 10 is_stmt 1 view .LVU4196
 11997 40d7 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 11998 40da 7624     		jbe	.L752	#,
 207:sieve_extend.c ****        index_ptr+=step;
 11999              		.loc 1 207 8 view .LVU4197
 12000              	# sieve_extend.c:207:        *index_ptr |= mask;
 207:sieve_extend.c ****        index_ptr+=step;
 12001              		.loc 1 207 19 is_stmt 0 view .LVU4198
 12002 40dc 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_1080, offset: 0B], mask
 208:sieve_extend.c ****    }
 12003              		.loc 1 208 8 is_stmt 1 view .LVU4199
 12004              	# sieve_extend.c:208:        index_ptr+=step;
 208:sieve_extend.c ****    }
 12005              		.loc 1 208 17 is_stmt 0 view .LVU4200
 12006 40df 4801F0   		add	rax, rsi	# index_ptr, _622
 12007              	.LVL806:
 206:sieve_extend.c ****        *index_ptr |= mask;
 12008              		.loc 1 206 10 is_stmt 1 view .LVU4201
 12009 40e2 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 12010 40e5 7619     		jbe	.L752	#,
 207:sieve_extend.c ****        index_ptr+=step;
 12011              		.loc 1 207 8 view .LVU4202
 12012              	# sieve_extend.c:207:        *index_ptr |= mask;
 207:sieve_extend.c ****        index_ptr+=step;
 12013              		.loc 1 207 19 is_stmt 0 view .LVU4203
 12014 40e7 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_1080, offset: 0B], mask
 208:sieve_extend.c ****    }
 12015              		.loc 1 208 8 is_stmt 1 view .LVU4204
 12016              	# sieve_extend.c:208:        index_ptr+=step;
 208:sieve_extend.c ****    }
 12017              		.loc 1 208 17 is_stmt 0 view .LVU4205
 12018 40ea 4801F0   		add	rax, rsi	# index_ptr, _622
 12019              	.LVL807:
 206:sieve_extend.c ****        *index_ptr |= mask;
 12020              		.loc 1 206 10 is_stmt 1 view .LVU4206
 12021 40ed 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 12022 40f0 760E     		jbe	.L752	#,
 207:sieve_extend.c ****        index_ptr+=step;
 12023              		.loc 1 207 8 view .LVU4207
 12024              	# sieve_extend.c:207:        *index_ptr |= mask;
 207:sieve_extend.c ****        index_ptr+=step;
 12025              		.loc 1 207 19 is_stmt 0 view .LVU4208
 12026 40f2 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_1080, offset: 0B], mask
 208:sieve_extend.c ****    }
 12027              		.loc 1 208 8 is_stmt 1 view .LVU4209
 12028              	# sieve_extend.c:208:        index_ptr+=step;
 208:sieve_extend.c ****    }
 12029              		.loc 1 208 17 is_stmt 0 view .LVU4210
 12030 40f5 4801F0   		add	rax, rsi	# index_ptr, _622
 12031              	.LVL808:
GAS LISTING /tmp/cctyCFAS.s 			page 327


 206:sieve_extend.c ****        *index_ptr |= mask;
 12032              		.loc 1 206 10 is_stmt 1 view .LVU4211
 12033 40f8 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 12034 40fb 77A8     		ja	.L753	#,
 12035 40fd 0F1F00   		.p2align 4,,10
 12036              		.p2align 3
 12037              	.L752:
 211:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 12038              		.loc 1 211 4 view .LVU4212
 12039              	# sieve_extend.c:211:    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range
 211:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 12040              		.loc 1 211 7 is_stmt 0 view .LVU4213
 12041 4100 4C39C0   		cmp	rax, r8	# index_ptr, range_stop_ptr
 12042 4103 0F84C700 		je	.L1588	#,
 12042      0000
 12043              	.LVL809:
 12044              	.L754:
 211:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 12045              		.loc 1 211 7 view .LVU4214
 12046              	.LBE560:
 12047              	.LBE562:
 12048              	.LBE557:
 303:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 12049              		.loc 1 303 54 is_stmt 1 view .LVU4215
 12050              	# sieve_extend.c:303:         for (register counter_t index = range_start; index <= range_stop_uniq
 303:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 12051              		.loc 1 303 9 is_stmt 0 view .LVU4216
 12052 4109 4939CE   		cmp	r14, rcx	# tmp860, index
 12053 410c 0F83AEFD 		jnb	.L755	#,
 12053      FFFF
 12054              	.LVL810:
 12055              	.L1571:
 303:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 12056              		.loc 1 303 9 view .LVU4217
 12057              	.LBE556:
 12058              	.LBE567:
 12059              	.LBE582:
 12060              	.LBB583:
 12061              	.LBB584:
 124:sieve_extend.c ****     return index;
 12062              		.loc 1 124 11 is_stmt 1 view .LVU4218
 12063              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12064              		.loc 1 124 21 is_stmt 0 view .LVU4219
 12065 4112 4D89D1   		mov	r9, r10	# tmp1421, index
 12066 4115 49C1E906 		shr	r9, 6	# tmp1421,
 12067              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12068              		.loc 1 124 12 view .LVU4220
 12069 4119 4B8B0CCC 		mov	rcx, QWORD PTR [r12+r9*8]	# *_407,* pretmp_1655
 12070              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12071              		.loc 1 124 11 view .LVU4221
 12072 411d 4C0FA3D1 		bt	rcx, r10	# *_407, index
 12073 4121 0F83B900 		jnc	.L1362	#,
 12073      0000
 124:sieve_extend.c ****     return index;
GAS LISTING /tmp/cctyCFAS.s 			page 328


 12074              		.loc 1 124 58 is_stmt 1 view .LVU4222
 12075              	.LVL811:
 12076              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12077              		.loc 1 124 63 is_stmt 0 view .LVU4223
 12078 4127 4D8D7201 		lea	r14, 1[r10]	# tmp1051,
 12079              	.LVL812:
 12080              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12081              		.loc 1 124 21 view .LVU4224
 12082 412b 4D89F3   		mov	r11, r14	# tmp888, index
 12083 412e 49C1EB06 		shr	r11, 6	# tmp888,
 12084              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12085              		.loc 1 124 12 view .LVU4225
 12086 4132 4B8B1CDC 		mov	rbx, QWORD PTR [r12+r11*8]	# *_407, *_407
 12087              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12088              		.loc 1 124 63 view .LVU4226
 12089 4136 4D89F2   		mov	r10, r14	# index, tmp1051
 124:sieve_extend.c ****     return index;
 12090              		.loc 1 124 11 is_stmt 1 view .LVU4227
 12091 4139 4C0FA3F3 		bt	rbx, r14	# *_407, index
 12092 413d 0F839D00 		jnc	.L1362	#,
 12092      0000
 124:sieve_extend.c ****     return index;
 12093              		.loc 1 124 58 view .LVU4228
 12094              	.LVL813:
 12095              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12096              		.loc 1 124 63 is_stmt 0 view .LVU4229
 12097 4143 49FFC2   		inc	r10	# index
 12098              	.LVL814:
 124:sieve_extend.c ****     return index;
 12099              		.loc 1 124 11 is_stmt 1 view .LVU4230
 12100              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12101              		.loc 1 124 21 is_stmt 0 view .LVU4231
 12102 4146 4C89D2   		mov	rdx, r10	# tmp1397, index
 12103 4149 48C1EA06 		shr	rdx, 6	# tmp1397,
 12104              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12105              		.loc 1 124 12 view .LVU4232
 12106 414d 498B04D4 		mov	rax, QWORD PTR [r12+rdx*8]	# *_407, *_407
 12107              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12108              		.loc 1 124 11 view .LVU4233
 12109 4151 4C0FA3D0 		bt	rax, r10	# *_407, index
 12110 4155 0F838500 		jnc	.L1362	#,
 12110      0000
 124:sieve_extend.c ****     return index;
 12111              		.loc 1 124 58 is_stmt 1 view .LVU4234
 12112              	.LVL815:
 12113              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12114              		.loc 1 124 63 is_stmt 0 view .LVU4235
 12115 415b 4D8D5602 		lea	r10, 2[r14]	# index,
GAS LISTING /tmp/cctyCFAS.s 			page 329


 12116              	.LVL816:
 124:sieve_extend.c ****     return index;
 12117              		.loc 1 124 11 is_stmt 1 view .LVU4236
 12118              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12119              		.loc 1 124 21 is_stmt 0 view .LVU4237
 12120 415f 4C89D7   		mov	rdi, r10	# tmp1401, index
 12121 4162 48C1EF06 		shr	rdi, 6	# tmp1401,
 12122              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12123              		.loc 1 124 12 view .LVU4238
 12124 4166 498B34FC 		mov	rsi, QWORD PTR [r12+rdi*8]	# *_407, *_407
 12125              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12126              		.loc 1 124 11 view .LVU4239
 12127 416a 4C0FA3D6 		bt	rsi, r10	# *_407, index
 12128 416e 7370     		jnc	.L1362	#,
 124:sieve_extend.c ****     return index;
 12129              		.loc 1 124 58 is_stmt 1 view .LVU4240
 12130              	.LVL817:
 12131              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12132              		.loc 1 124 63 is_stmt 0 view .LVU4241
 12133 4170 4D8D5603 		lea	r10, 3[r14]	# index,
 12134              	.LVL818:
 124:sieve_extend.c ****     return index;
 12135              		.loc 1 124 11 is_stmt 1 view .LVU4242
 12136              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12137              		.loc 1 124 21 is_stmt 0 view .LVU4243
 12138 4174 4D89D1   		mov	r9, r10	# tmp1405, index
 12139 4177 49C1E906 		shr	r9, 6	# tmp1405,
 12140              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12141              		.loc 1 124 12 view .LVU4244
 12142 417b 4B8B0CCC 		mov	rcx, QWORD PTR [r12+r9*8]	# *_407, *_407
 12143              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12144              		.loc 1 124 11 view .LVU4245
 12145 417f 4C0FA3D1 		bt	rcx, r10	# *_407, index
 12146 4183 735B     		jnc	.L1362	#,
 124:sieve_extend.c ****     return index;
 12147              		.loc 1 124 58 is_stmt 1 view .LVU4246
 12148              	.LVL819:
 12149              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12150              		.loc 1 124 63 is_stmt 0 view .LVU4247
 12151 4185 4D8D5604 		lea	r10, 4[r14]	# index,
 12152              	.LVL820:
 124:sieve_extend.c ****     return index;
 12153              		.loc 1 124 11 is_stmt 1 view .LVU4248
 12154              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12155              		.loc 1 124 21 is_stmt 0 view .LVU4249
 12156 4189 4D89D3   		mov	r11, r10	# tmp1409, index
 12157 418c 49C1EB06 		shr	r11, 6	# tmp1409,
 12158              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
GAS LISTING /tmp/cctyCFAS.s 			page 330


 124:sieve_extend.c ****     return index;
 12159              		.loc 1 124 12 view .LVU4250
 12160 4190 4B8B1CDC 		mov	rbx, QWORD PTR [r12+r11*8]	# *_407, *_407
 12161              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12162              		.loc 1 124 11 view .LVU4251
 12163 4194 4C0FA3D3 		bt	rbx, r10	# *_407, index
 12164 4198 7346     		jnc	.L1362	#,
 124:sieve_extend.c ****     return index;
 12165              		.loc 1 124 58 is_stmt 1 view .LVU4252
 12166              	.LVL821:
 12167              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12168              		.loc 1 124 63 is_stmt 0 view .LVU4253
 12169 419a 4D8D5605 		lea	r10, 5[r14]	# index,
 12170              	.LVL822:
 124:sieve_extend.c ****     return index;
 12171              		.loc 1 124 11 is_stmt 1 view .LVU4254
 12172              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12173              		.loc 1 124 21 is_stmt 0 view .LVU4255
 12174 419e 4C89D2   		mov	rdx, r10	# tmp1413, index
 12175 41a1 48C1EA06 		shr	rdx, 6	# tmp1413,
 12176              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12177              		.loc 1 124 12 view .LVU4256
 12178 41a5 498B04D4 		mov	rax, QWORD PTR [r12+rdx*8]	# *_407, *_407
 12179              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12180              		.loc 1 124 11 view .LVU4257
 12181 41a9 4C0FA3D0 		bt	rax, r10	# *_407, index
 12182 41ad 7331     		jnc	.L1362	#,
 124:sieve_extend.c ****     return index;
 12183              		.loc 1 124 58 is_stmt 1 view .LVU4258
 12184              	.LVL823:
 12185              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12186              		.loc 1 124 63 is_stmt 0 view .LVU4259
 12187 41af 4D8D5606 		lea	r10, 6[r14]	# index,
 12188              	.LVL824:
 124:sieve_extend.c ****     return index;
 12189              		.loc 1 124 11 is_stmt 1 view .LVU4260
 12190              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12191              		.loc 1 124 21 is_stmt 0 view .LVU4261
 12192 41b3 4C89D7   		mov	rdi, r10	# tmp1417, index
 12193 41b6 48C1EF06 		shr	rdi, 6	# tmp1417,
 12194              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12195              		.loc 1 124 12 view .LVU4262
 12196 41ba 498B34FC 		mov	rsi, QWORD PTR [r12+rdi*8]	# *_407, *_407
 12197              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12198              		.loc 1 124 11 view .LVU4263
 12199 41be 4C0FA3D6 		bt	rsi, r10	# *_407, index
 12200 41c2 731C     		jnc	.L1362	#,
 124:sieve_extend.c ****     return index;
GAS LISTING /tmp/cctyCFAS.s 			page 331


 12201              		.loc 1 124 58 is_stmt 1 view .LVU4264
 12202              	.LVL825:
 12203              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12204              		.loc 1 124 63 is_stmt 0 view .LVU4265
 12205 41c4 4D8D5607 		lea	r10, 7[r14]	# index,
 12206              	.LVL826:
 124:sieve_extend.c ****     return index;
 12207              		.loc 1 124 63 view .LVU4266
 12208 41c8 E945FFFF 		jmp	.L1571	#
 12208      FF
 12209              	.LVL827:
 12210 41cd 0F1F00   		.p2align 4,,10
 12211              		.p2align 3
 12212              	.L1588:
 124:sieve_extend.c ****     return index;
 12213              		.loc 1 124 63 view .LVU4267
 12214              	.LBE584:
 12215              	.LBE583:
 12216              	.LBB586:
 12217              	.LBB568:
 12218              	.LBB565:
 12219              	.LBB564:
 12220              	.LBB563:
 12221              	.LBB561:
 212:sieve_extend.c ****    }
 12222              		.loc 1 212 7 is_stmt 1 view .LVU4268
 12223              	# sieve_extend.c:212:       *index_ptr |= (mask & chopmask(range_stop));
 212:sieve_extend.c ****    }
 12224              		.loc 1 212 27 is_stmt 0 view .LVU4269
 12225 41d0 48235424 		and	rdx, QWORD PTR 112[rsp]	# tmp887, %sfp
 12225      70
 12226              	.LVL828:
 12227              	# sieve_extend.c:212:       *index_ptr |= (mask & chopmask(range_stop));
 212:sieve_extend.c ****    }
 12228              		.loc 1 212 18 view .LVU4270
 12229 41d5 490910   		or	QWORD PTR [r8], rdx	# MEM[(uint64_t *)range_stop_ptr_640], tmp887
 12230 41d8 E92CFFFF 		jmp	.L754	#
 12230      FF
 12231              	.LVL829:
 12232 41dd 0F1F00   		.p2align 4,,10
 12233              		.p2align 3
 12234              	.L1362:
 212:sieve_extend.c ****    }
 12235              		.loc 1 212 18 view .LVU4271
 12236              	.LBE561:
 12237              	.LBE563:
 12238              	.LBE564:
 12239              	.LBE565:
 12240              	.LBE568:
 12241              	.LBE586:
 12242              	# sieve_extend.c:874:         start = prime * prime * 2 + prime * 2;
 874:sieve_extend.c ****     }
 12243              		.loc 1 874 35 view .LVU4272
 12244 41e0 4D8D7201 		lea	r14, 1[r10]	# tmp893,
 12245              	.LBB587:
 12246              	.LBB585:
GAS LISTING /tmp/cctyCFAS.s 			page 332


 12247              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12248              		.loc 1 124 63 view .LVU4273
 12249 41e4 4C89D6   		mov	rsi, r10	# index, index
 125:sieve_extend.c **** }
 12250              		.loc 1 125 5 is_stmt 1 view .LVU4274
 12251              	.LVL830:
 125:sieve_extend.c **** }
 12252              		.loc 1 125 5 is_stmt 0 view .LVU4275
 12253              	.LBE585:
 12254              	.LBE587:
 874:sieve_extend.c ****     }
 12255              		.loc 1 874 9 is_stmt 1 view .LVU4276
 12256              	# sieve_extend.c:874:         start = prime * prime * 2 + prime * 2;
 874:sieve_extend.c ****     }
 12257              		.loc 1 874 15 is_stmt 0 view .LVU4277
 12258 41e7 4D0FAFD6 		imul	r10, r14	# tmp894, tmp893
 12259              	.LVL831:
 874:sieve_extend.c ****     }
 12260              		.loc 1 874 15 view .LVU4278
 12261 41eb 4B8D0C12 		lea	rcx, [r10+r10]	# index,
 868:sieve_extend.c ****         step  = prime * 2 + 1;
 12262              		.loc 1 868 11 is_stmt 1 view .LVU4279
 12263 41ef 4939CF   		cmp	r15, rcx	# block_stop, index
 12264 41f2 0F8340FC 		jnb	.L756	#,
 12264      FFFF
 12265              	.LVL832:
 12266              	.L1566:
 868:sieve_extend.c ****         step  = prime * 2 + 1;
 12267              		.loc 1 868 11 is_stmt 0 view .LVU4280
 12268 41f8 488B4424 		mov	rax, QWORD PTR 80[rsp]	# <retval>, %sfp
 12268      50
 12269 41fd 488B4008 		mov	rax, QWORD PTR 8[rax]	# _8, sieve_89->bits
 12270 4201 E9CAFBFF 		jmp	.L725	#
 12270      FF
 12271              	.LVL833:
 12272 4206 662E0F1F 		.p2align 4,,10
 12272      84000000 
 12272      0000
 12273              		.p2align 3
 12274              	.L742:
 12275              	.LBB588:
 12276              	.LBB569:
 12277              	.LBB566:
 12278              	.LBB555:
 12279              	.LBB554:
 291:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 12280              		.loc 1 291 54 is_stmt 1 view .LVU4281
 12281              	# sieve_extend.c:291:         for (register counter_t index = range_start; index <= range_stop;) {
 291:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 12282              		.loc 1 291 9 is_stmt 0 view .LVU4282
 12283 4210 4939CF   		cmp	r15, rcx	# block_stop, index
 12284 4213 0F82F9FE 		jb	.L1571	#,
 12284      FFFF
 12285              	.LVL834:
 12286 4219 0F1F8000 		.p2align 4,,10
 12286      000000
GAS LISTING /tmp/cctyCFAS.s 			page 333


 12287              		.p2align 3
 12288              	.L748:
 12289              	.LBB553:
 292:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 12290              		.loc 1 292 13 is_stmt 1 view .LVU4283
 12291              	# sieve_extend.c:292:             register counter_t index_word = wordindex(index);
 292:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 12292              		.loc 1 292 32 is_stmt 0 view .LVU4284
 12293 4220 4989CE   		mov	r14, rcx	# index_word, index
 12294 4223 49C1EE06 		shr	r14, 6	# index_word,
 12295              	.LVL835:
 293:sieve_extend.c ****             for (; index_word == wordindex(index);  index += step) 
 12296              		.loc 1 293 13 is_stmt 1 view .LVU4285
 294:sieve_extend.c ****                 mask |= markmask(index);
 12297              		.loc 1 294 13 view .LVU4286
 294:sieve_extend.c ****                 mask |= markmask(index);
 12298              		.loc 1 294 20 view .LVU4287
 12299              	# sieve_extend.c:293:             register bitword_t mask = SAFE_ZERO;
 293:sieve_extend.c ****             for (; index_word == wordindex(index);  index += step) 
 12300              		.loc 1 293 32 is_stmt 0 view .LVU4288
 12301 4227 4531DB   		xor	r11d, r11d	# mask
 12302              	.LVL836:
 12303              	.L747:
 295:sieve_extend.c ****             bitarray[index_word] |= mask;
 12304              		.loc 1 295 17 is_stmt 1 view .LVU4289
 12305              	# sieve_extend.c:295:                 mask |= markmask(index);
 295:sieve_extend.c ****             bitarray[index_word] |= mask;
 12306              		.loc 1 295 25 is_stmt 0 view .LVU4290
 12307 422a C4C2F1F7 		shlx	rsi, r13, rcx	# tmp867, tmp1041, index
 12307      F5
 12308              	# sieve_extend.c:294:             for (; index_word == wordindex(index);  index += step) 
 294:sieve_extend.c ****                 mask |= markmask(index);
 12309              		.loc 1 294 59 view .LVU4291
 12310 422f 4C01C9   		add	rcx, r9	# index, step
 12311              	# sieve_extend.c:294:             for (; index_word == wordindex(index);  index += step) 
 294:sieve_extend.c ****                 mask |= markmask(index);
 12312              		.loc 1 294 34 view .LVU4292
 12313 4232 4889CB   		mov	rbx, rcx	# tmp869, index
 12314 4235 48C1EB06 		shr	rbx, 6	# tmp869,
 12315              	# sieve_extend.c:295:                 mask |= markmask(index);
 295:sieve_extend.c ****             bitarray[index_word] |= mask;
 12316              		.loc 1 295 22 view .LVU4293
 12317 4239 4909F3   		or	r11, rsi	# mask, tmp867
 12318              	.LVL837:
 294:sieve_extend.c ****                 mask |= markmask(index);
 12319              		.loc 1 294 53 is_stmt 1 view .LVU4294
 294:sieve_extend.c ****                 mask |= markmask(index);
 12320              		.loc 1 294 20 view .LVU4295
 12321              	# sieve_extend.c:294:             for (; index_word == wordindex(index);  index += step) 
 294:sieve_extend.c ****                 mask |= markmask(index);
 12322              		.loc 1 294 13 is_stmt 0 view .LVU4296
 12323 423c 4939DE   		cmp	r14, rbx	# index_word, tmp869
 12324 423f 0F85AB00 		jne	.L1363	#,
 12324      0000
 295:sieve_extend.c ****             bitarray[index_word] |= mask;
 12325              		.loc 1 295 17 is_stmt 1 view .LVU4297
 12326              	# sieve_extend.c:295:                 mask |= markmask(index);
GAS LISTING /tmp/cctyCFAS.s 			page 334


 295:sieve_extend.c ****             bitarray[index_word] |= mask;
 12327              		.loc 1 295 25 is_stmt 0 view .LVU4298
 12328 4245 C4C2F1F7 		shlx	rdx, r13, rcx	# tmp1425, tmp1041, index
 12328      D5
 12329              	# sieve_extend.c:294:             for (; index_word == wordindex(index);  index += step) 
 294:sieve_extend.c ****                 mask |= markmask(index);
 12330              		.loc 1 294 59 view .LVU4299
 12331 424a 4C01C9   		add	rcx, r9	# index, step
 12332              	# sieve_extend.c:294:             for (; index_word == wordindex(index);  index += step) 
 294:sieve_extend.c ****                 mask |= markmask(index);
 12333              		.loc 1 294 34 view .LVU4300
 12334 424d 4889C8   		mov	rax, rcx	# tmp1426, index
 12335 4250 48C1E806 		shr	rax, 6	# tmp1426,
 12336              	# sieve_extend.c:295:                 mask |= markmask(index);
 295:sieve_extend.c ****             bitarray[index_word] |= mask;
 12337              		.loc 1 295 22 view .LVU4301
 12338 4254 4909D3   		or	r11, rdx	# mask, tmp1425
 12339              	.LVL838:
 294:sieve_extend.c ****                 mask |= markmask(index);
 12340              		.loc 1 294 53 is_stmt 1 view .LVU4302
 294:sieve_extend.c ****                 mask |= markmask(index);
 12341              		.loc 1 294 20 view .LVU4303
 12342              	# sieve_extend.c:294:             for (; index_word == wordindex(index);  index += step) 
 294:sieve_extend.c ****                 mask |= markmask(index);
 12343              		.loc 1 294 13 is_stmt 0 view .LVU4304
 12344 4257 4939C6   		cmp	r14, rax	# index_word, tmp1426
 12345 425a 0F859000 		jne	.L1363	#,
 12345      0000
 295:sieve_extend.c ****             bitarray[index_word] |= mask;
 12346              		.loc 1 295 17 is_stmt 1 view .LVU4305
 12347              	# sieve_extend.c:295:                 mask |= markmask(index);
 295:sieve_extend.c ****             bitarray[index_word] |= mask;
 12348              		.loc 1 295 25 is_stmt 0 view .LVU4306
 12349 4260 C4C2F1F7 		shlx	rdi, r13, rcx	# tmp1427, tmp1041, index
 12349      FD
 12350              	# sieve_extend.c:294:             for (; index_word == wordindex(index);  index += step) 
 294:sieve_extend.c ****                 mask |= markmask(index);
 12351              		.loc 1 294 59 view .LVU4307
 12352 4265 4C01C9   		add	rcx, r9	# index, step
 12353              	# sieve_extend.c:294:             for (; index_word == wordindex(index);  index += step) 
 294:sieve_extend.c ****                 mask |= markmask(index);
 12354              		.loc 1 294 34 view .LVU4308
 12355 4268 4889CE   		mov	rsi, rcx	# tmp1428, index
 12356 426b 48C1EE06 		shr	rsi, 6	# tmp1428,
 12357              	# sieve_extend.c:295:                 mask |= markmask(index);
 295:sieve_extend.c ****             bitarray[index_word] |= mask;
 12358              		.loc 1 295 22 view .LVU4309
 12359 426f 4909FB   		or	r11, rdi	# mask, tmp1427
 12360              	.LVL839:
 294:sieve_extend.c ****                 mask |= markmask(index);
 12361              		.loc 1 294 53 is_stmt 1 view .LVU4310
 294:sieve_extend.c ****                 mask |= markmask(index);
 12362              		.loc 1 294 20 view .LVU4311
 12363              	# sieve_extend.c:294:             for (; index_word == wordindex(index);  index += step) 
 294:sieve_extend.c ****                 mask |= markmask(index);
 12364              		.loc 1 294 13 is_stmt 0 view .LVU4312
 12365 4272 4939F6   		cmp	r14, rsi	# index_word, tmp1428
GAS LISTING /tmp/cctyCFAS.s 			page 335


 12366 4275 7579     		jne	.L1363	#,
 295:sieve_extend.c ****             bitarray[index_word] |= mask;
 12367              		.loc 1 295 17 is_stmt 1 view .LVU4313
 12368              	# sieve_extend.c:295:                 mask |= markmask(index);
 295:sieve_extend.c ****             bitarray[index_word] |= mask;
 12369              		.loc 1 295 25 is_stmt 0 view .LVU4314
 12370 4277 C4C2F1F7 		shlx	rbx, r13, rcx	# tmp1429, tmp1041, index
 12370      DD
 12371              	# sieve_extend.c:294:             for (; index_word == wordindex(index);  index += step) 
 294:sieve_extend.c ****                 mask |= markmask(index);
 12372              		.loc 1 294 59 view .LVU4315
 12373 427c 4C01C9   		add	rcx, r9	# index, step
 12374              	# sieve_extend.c:294:             for (; index_word == wordindex(index);  index += step) 
 294:sieve_extend.c ****                 mask |= markmask(index);
 12375              		.loc 1 294 34 view .LVU4316
 12376 427f 4889CA   		mov	rdx, rcx	# tmp1430, index
 12377 4282 48C1EA06 		shr	rdx, 6	# tmp1430,
 12378              	# sieve_extend.c:295:                 mask |= markmask(index);
 295:sieve_extend.c ****             bitarray[index_word] |= mask;
 12379              		.loc 1 295 22 view .LVU4317
 12380 4286 4909DB   		or	r11, rbx	# mask, tmp1429
 12381              	.LVL840:
 294:sieve_extend.c ****                 mask |= markmask(index);
 12382              		.loc 1 294 53 is_stmt 1 view .LVU4318
 294:sieve_extend.c ****                 mask |= markmask(index);
 12383              		.loc 1 294 20 view .LVU4319
 12384              	# sieve_extend.c:294:             for (; index_word == wordindex(index);  index += step) 
 294:sieve_extend.c ****                 mask |= markmask(index);
 12385              		.loc 1 294 13 is_stmt 0 view .LVU4320
 12386 4289 4939D6   		cmp	r14, rdx	# index_word, tmp1430
 12387 428c 7562     		jne	.L1363	#,
 295:sieve_extend.c ****             bitarray[index_word] |= mask;
 12388              		.loc 1 295 17 is_stmt 1 view .LVU4321
 12389              	# sieve_extend.c:295:                 mask |= markmask(index);
 295:sieve_extend.c ****             bitarray[index_word] |= mask;
 12390              		.loc 1 295 25 is_stmt 0 view .LVU4322
 12391 428e C4C2F1F7 		shlx	rax, r13, rcx	# tmp1431, tmp1041, index
 12391      C5
 12392              	# sieve_extend.c:294:             for (; index_word == wordindex(index);  index += step) 
 294:sieve_extend.c ****                 mask |= markmask(index);
 12393              		.loc 1 294 59 view .LVU4323
 12394 4293 4C01C9   		add	rcx, r9	# index, step
 12395              	# sieve_extend.c:294:             for (; index_word == wordindex(index);  index += step) 
 294:sieve_extend.c ****                 mask |= markmask(index);
 12396              		.loc 1 294 34 view .LVU4324
 12397 4296 4889CF   		mov	rdi, rcx	# tmp1432, index
 12398 4299 48C1EF06 		shr	rdi, 6	# tmp1432,
 12399              	# sieve_extend.c:295:                 mask |= markmask(index);
 295:sieve_extend.c ****             bitarray[index_word] |= mask;
 12400              		.loc 1 295 22 view .LVU4325
 12401 429d 4909C3   		or	r11, rax	# mask, tmp1431
 12402              	.LVL841:
 294:sieve_extend.c ****                 mask |= markmask(index);
 12403              		.loc 1 294 53 is_stmt 1 view .LVU4326
 294:sieve_extend.c ****                 mask |= markmask(index);
 12404              		.loc 1 294 20 view .LVU4327
 12405              	# sieve_extend.c:294:             for (; index_word == wordindex(index);  index += step) 
GAS LISTING /tmp/cctyCFAS.s 			page 336


 294:sieve_extend.c ****                 mask |= markmask(index);
 12406              		.loc 1 294 13 is_stmt 0 view .LVU4328
 12407 42a0 4939FE   		cmp	r14, rdi	# index_word, tmp1432
 12408 42a3 754B     		jne	.L1363	#,
 295:sieve_extend.c ****             bitarray[index_word] |= mask;
 12409              		.loc 1 295 17 is_stmt 1 view .LVU4329
 12410              	# sieve_extend.c:295:                 mask |= markmask(index);
 295:sieve_extend.c ****             bitarray[index_word] |= mask;
 12411              		.loc 1 295 25 is_stmt 0 view .LVU4330
 12412 42a5 C4C2F1F7 		shlx	rsi, r13, rcx	# tmp1433, tmp1041, index
 12412      F5
 12413              	# sieve_extend.c:294:             for (; index_word == wordindex(index);  index += step) 
 294:sieve_extend.c ****                 mask |= markmask(index);
 12414              		.loc 1 294 59 view .LVU4331
 12415 42aa 4C01C9   		add	rcx, r9	# index, step
 12416              	# sieve_extend.c:294:             for (; index_word == wordindex(index);  index += step) 
 294:sieve_extend.c ****                 mask |= markmask(index);
 12417              		.loc 1 294 34 view .LVU4332
 12418 42ad 4889CB   		mov	rbx, rcx	# tmp1434, index
 12419 42b0 48C1EB06 		shr	rbx, 6	# tmp1434,
 12420              	# sieve_extend.c:295:                 mask |= markmask(index);
 295:sieve_extend.c ****             bitarray[index_word] |= mask;
 12421              		.loc 1 295 22 view .LVU4333
 12422 42b4 4909F3   		or	r11, rsi	# mask, tmp1433
 12423              	.LVL842:
 294:sieve_extend.c ****                 mask |= markmask(index);
 12424              		.loc 1 294 53 is_stmt 1 view .LVU4334
 294:sieve_extend.c ****                 mask |= markmask(index);
 12425              		.loc 1 294 20 view .LVU4335
 12426              	# sieve_extend.c:294:             for (; index_word == wordindex(index);  index += step) 
 294:sieve_extend.c ****                 mask |= markmask(index);
 12427              		.loc 1 294 13 is_stmt 0 view .LVU4336
 12428 42b7 4939DE   		cmp	r14, rbx	# index_word, tmp1434
 12429 42ba 7534     		jne	.L1363	#,
 295:sieve_extend.c ****             bitarray[index_word] |= mask;
 12430              		.loc 1 295 17 is_stmt 1 view .LVU4337
 12431              	# sieve_extend.c:295:                 mask |= markmask(index);
 295:sieve_extend.c ****             bitarray[index_word] |= mask;
 12432              		.loc 1 295 25 is_stmt 0 view .LVU4338
 12433 42bc C4C2F1F7 		shlx	rdx, r13, rcx	# tmp1435, tmp1041, index
 12433      D5
 12434              	# sieve_extend.c:294:             for (; index_word == wordindex(index);  index += step) 
 294:sieve_extend.c ****                 mask |= markmask(index);
 12435              		.loc 1 294 59 view .LVU4339
 12436 42c1 4C01C9   		add	rcx, r9	# index, step
 12437              	# sieve_extend.c:294:             for (; index_word == wordindex(index);  index += step) 
 294:sieve_extend.c ****                 mask |= markmask(index);
 12438              		.loc 1 294 34 view .LVU4340
 12439 42c4 4889C8   		mov	rax, rcx	# tmp1436, index
 12440 42c7 48C1E806 		shr	rax, 6	# tmp1436,
 12441              	# sieve_extend.c:295:                 mask |= markmask(index);
 295:sieve_extend.c ****             bitarray[index_word] |= mask;
 12442              		.loc 1 295 22 view .LVU4341
 12443 42cb 4909D3   		or	r11, rdx	# mask, tmp1435
 12444              	.LVL843:
 294:sieve_extend.c ****                 mask |= markmask(index);
 12445              		.loc 1 294 53 is_stmt 1 view .LVU4342
GAS LISTING /tmp/cctyCFAS.s 			page 337


 294:sieve_extend.c ****                 mask |= markmask(index);
 12446              		.loc 1 294 20 view .LVU4343
 12447              	# sieve_extend.c:294:             for (; index_word == wordindex(index);  index += step) 
 294:sieve_extend.c ****                 mask |= markmask(index);
 12448              		.loc 1 294 13 is_stmt 0 view .LVU4344
 12449 42ce 4939C6   		cmp	r14, rax	# index_word, tmp1436
 12450 42d1 751D     		jne	.L1363	#,
 295:sieve_extend.c ****             bitarray[index_word] |= mask;
 12451              		.loc 1 295 17 is_stmt 1 view .LVU4345
 12452              	# sieve_extend.c:295:                 mask |= markmask(index);
 295:sieve_extend.c ****             bitarray[index_word] |= mask;
 12453              		.loc 1 295 25 is_stmt 0 view .LVU4346
 12454 42d3 C4C2F1F7 		shlx	rdi, r13, rcx	# tmp1437, tmp1041, index
 12454      FD
 12455              	# sieve_extend.c:294:             for (; index_word == wordindex(index);  index += step) 
 294:sieve_extend.c ****                 mask |= markmask(index);
 12456              		.loc 1 294 59 view .LVU4347
 12457 42d8 4C01C9   		add	rcx, r9	# index, step
 12458              	# sieve_extend.c:294:             for (; index_word == wordindex(index);  index += step) 
 294:sieve_extend.c ****                 mask |= markmask(index);
 12459              		.loc 1 294 34 view .LVU4348
 12460 42db 4889CE   		mov	rsi, rcx	# tmp1438, index
 12461 42de 48C1EE06 		shr	rsi, 6	# tmp1438,
 12462              	# sieve_extend.c:295:                 mask |= markmask(index);
 295:sieve_extend.c ****             bitarray[index_word] |= mask;
 12463              		.loc 1 295 22 view .LVU4349
 12464 42e2 4909FB   		or	r11, rdi	# mask, tmp1437
 12465              	.LVL844:
 294:sieve_extend.c ****                 mask |= markmask(index);
 12466              		.loc 1 294 53 is_stmt 1 view .LVU4350
 294:sieve_extend.c ****                 mask |= markmask(index);
 12467              		.loc 1 294 20 view .LVU4351
 12468              	# sieve_extend.c:294:             for (; index_word == wordindex(index);  index += step) 
 294:sieve_extend.c ****                 mask |= markmask(index);
 12469              		.loc 1 294 13 is_stmt 0 view .LVU4352
 12470 42e5 4939F6   		cmp	r14, rsi	# index_word, tmp1438
 12471 42e8 0F843CFF 		je	.L747	#,
 12471      FFFF
 12472 42ee 6690     		.p2align 4,,10
 12473              		.p2align 3
 12474              	.L1363:
 296:sieve_extend.c ****         }
 12475              		.loc 1 296 13 is_stmt 1 view .LVU4353
 12476              	# sieve_extend.c:296:             bitarray[index_word] |= mask;
 296:sieve_extend.c ****         }
 12477              		.loc 1 296 34 is_stmt 0 view .LVU4354
 12478 42f0 4F091CF4 		or	QWORD PTR [r12+r14*8], r11	# *_605, mask
 296:sieve_extend.c ****         }
 12479              		.loc 1 296 34 view .LVU4355
 12480              	.LBE553:
 291:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 12481              		.loc 1 291 54 is_stmt 1 view .LVU4356
 12482              	# sieve_extend.c:291:         for (register counter_t index = range_start; index <= range_stop;) {
 291:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 12483              		.loc 1 291 9 is_stmt 0 view .LVU4357
 12484 42f4 4939CF   		cmp	r15, rcx	# block_stop, index
 12485 42f7 0F8323FF 		jnb	.L748	#,
GAS LISTING /tmp/cctyCFAS.s 			page 338


 12485      FFFF
 291:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 12486              		.loc 1 291 9 view .LVU4358
 12487 42fd E910FEFF 		jmp	.L1571	#
 12487      FF
 12488              	.LVL845:
 12489              		.p2align 4,,10
 12490 4302 660F1F44 		.p2align 3
 12490      0000
 12491              	.L1587:
 291:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 12492              		.loc 1 291 9 view .LVU4359
 12493              	.LBE554:
 12494              	.LBE555:
 12495              	.LBE566:
 12496              	.LBE569:
 12497              	.LBE588:
 879:sieve_extend.c ****         step  = prime * 2 + 1;
 12498              		.loc 1 879 11 is_stmt 1 view .LVU4360
 12499 4308 4939CF   		cmp	r15, rcx	# block_stop, index
 12500 430b 0F82E7FE 		jb	.L1566	#,
 12500      FFFF
 880:sieve_extend.c ****         if (step > 64) break;
 12501              		.loc 1 880 9 view .LVU4361
 881:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 12502              		.loc 1 881 9 view .LVU4362
 12503 4311 4C8B5C24 		mov	r11, QWORD PTR 120[rsp]	# block_start, %sfp
 12503      78
 12504 4316 4C8D5601 		lea	r10, 1[rsi]	# _491,
 12505              	# sieve_extend.c:881:         if (step > 64) break;
 881:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 12506              		.loc 1 881 12 is_stmt 0 view .LVU4363
 12507 431a 4983F940 		cmp	r9, 64	# step,
 12508 431e 0F873407 		ja	.L801	#,
 12508      0000
 12509              		.p2align 4,,10
 12510 4324 0F1F4000 		.p2align 3
 12511              	.L738:
 882:sieve_extend.c ****         start1 = start; // save value
 12512              		.loc 1 882 9 is_stmt 1 view .LVU4364
 12513              	# sieve_extend.c:882:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 882:sieve_extend.c ****         start1 = start; // save value
 12514              		.loc 1 882 35 is_stmt 0 view .LVU4365
 12515 4328 4C89D7   		mov	rdi, r10	# index, _491
 12516              	# sieve_extend.c:882:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 882:sieve_extend.c ****         start1 = start; // save value
 12517              		.loc 1 882 12 view .LVU4366
 12518 432b 4D39DA   		cmp	r10, r11	# _491, block_start
 12519 432e 7710     		ja	.L757	#,
 882:sieve_extend.c ****         start1 = start; // save value
 12520              		.loc 1 882 41 is_stmt 1 view .LVU4367
 12521              	# sieve_extend.c:882:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 882:sieve_extend.c ****         start1 = start; // save value
 12522              		.loc 1 882 61 is_stmt 0 view .LVU4368
 12523 4330 498D0433 		lea	rax, [r11+rsi]	# _421,
 12524              	# sieve_extend.c:882:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 882:sieve_extend.c ****         start1 = start; // save value
GAS LISTING /tmp/cctyCFAS.s 			page 339


 12525              		.loc 1 882 102 view .LVU4369
 12526 4334 31D2     		xor	edx, edx	# tmp897
 12527              	# sieve_extend.c:882:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 882:sieve_extend.c ****         start1 = start; // save value
 12528              		.loc 1 882 69 view .LVU4370
 12529 4336 488D0C30 		lea	rcx, [rax+rsi]	# tmp895,
 12530              	# sieve_extend.c:882:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 882:sieve_extend.c ****         start1 = start; // save value
 12531              		.loc 1 882 102 view .LVU4371
 12532 433a 49F7F1   		div	r9	# step
 12533              	.LVL846:
 12534              	# sieve_extend.c:882:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 882:sieve_extend.c ****         start1 = start; // save value
 12535              		.loc 1 882 47 view .LVU4372
 12536 433d 4829D1   		sub	rcx, rdx	# index, tmp897
 12537              	.LVL847:
 12538              	.L757:
 883:sieve_extend.c ****         step1 = step; // save value
 12539              		.loc 1 883 9 is_stmt 1 view .LVU4373
 884:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1 );
 12540              		.loc 1 884 9 view .LVU4374
 885:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 12541              		.loc 1 885 9 view .LVU4375
 12542              	.LBB589:
 12543              	.LBI589:
 123:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 12544              		.loc 1 123 25 view .LVU4376
 12545              	.LBB590:
 124:sieve_extend.c ****     return index;
 12546              		.loc 1 124 5 view .LVU4377
 124:sieve_extend.c ****     return index;
 12547              		.loc 1 124 11 view .LVU4378
 12548              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12549              		.loc 1 124 21 is_stmt 0 view .LVU4379
 12550 4340 4C89D3   		mov	rbx, r10	# tmp899, _491
 12551 4343 48C1EB06 		shr	rbx, 6	# tmp899,
 12552              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12553              		.loc 1 124 12 view .LVU4380
 12554 4347 498B34DC 		mov	rsi, QWORD PTR [r12+rbx*8]	# *_345, *_345
 12555              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12556              		.loc 1 124 11 view .LVU4381
 12557 434b 4C0FA3D6 		bt	rsi, r10	# *_345, _491
 12558 434f 0F83BB00 		jnc	.L758	#,
 12558      0000
 12559              	.L759:
 12560              	.LVL848:
 124:sieve_extend.c ****     return index;
 12561              		.loc 1 124 58 is_stmt 1 view .LVU4382
 12562              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12563              		.loc 1 124 63 is_stmt 0 view .LVU4383
 12564 4355 4C8D7701 		lea	r14, 1[rdi]	# tmp1050,
 12565              	.LVL849:
 12566              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
GAS LISTING /tmp/cctyCFAS.s 			page 340


 124:sieve_extend.c ****     return index;
 12567              		.loc 1 124 21 view .LVU4384
 12568 4359 4D89F2   		mov	r10, r14	# tmp904, index
 12569 435c 49C1EA06 		shr	r10, 6	# tmp904,
 12570              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12571              		.loc 1 124 12 view .LVU4385
 12572 4360 4B8B04D4 		mov	rax, QWORD PTR [r12+r10*8]	# *_429, *_429
 12573              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12574              		.loc 1 124 63 view .LVU4386
 12575 4364 4C89F7   		mov	rdi, r14	# index, tmp1050
 124:sieve_extend.c ****     return index;
 12576              		.loc 1 124 11 is_stmt 1 view .LVU4387
 12577 4367 4C0FA3F0 		bt	rax, r14	# *_429, index
 12578 436b 0F839F00 		jnc	.L758	#,
 12578      0000
 124:sieve_extend.c ****     return index;
 12579              		.loc 1 124 58 view .LVU4388
 12580              	.LVL850:
 12581              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12582              		.loc 1 124 63 is_stmt 0 view .LVU4389
 12583 4371 48FFC7   		inc	rdi	# index
 12584              	.LVL851:
 124:sieve_extend.c ****     return index;
 12585              		.loc 1 124 11 is_stmt 1 view .LVU4390
 12586              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12587              		.loc 1 124 21 is_stmt 0 view .LVU4391
 12588 4374 4889FA   		mov	rdx, rdi	# tmp1369, index
 12589 4377 48C1EA06 		shr	rdx, 6	# tmp1369,
 12590              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12591              		.loc 1 124 12 view .LVU4392
 12592 437b 498B1CD4 		mov	rbx, QWORD PTR [r12+rdx*8]	# *_429, *_429
 12593              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12594              		.loc 1 124 11 view .LVU4393
 12595 437f 480FA3FB 		bt	rbx, rdi	# *_429, index
 12596 4383 0F838700 		jnc	.L758	#,
 12596      0000
 124:sieve_extend.c ****     return index;
 12597              		.loc 1 124 58 is_stmt 1 view .LVU4394
 12598              	.LVL852:
 12599              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12600              		.loc 1 124 63 is_stmt 0 view .LVU4395
 12601 4389 498D7E02 		lea	rdi, 2[r14]	# index,
 12602              	.LVL853:
 124:sieve_extend.c ****     return index;
 12603              		.loc 1 124 11 is_stmt 1 view .LVU4396
 12604              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12605              		.loc 1 124 21 is_stmt 0 view .LVU4397
 12606 438d 4889FE   		mov	rsi, rdi	# tmp1373, index
 12607 4390 48C1EE06 		shr	rsi, 6	# tmp1373,
GAS LISTING /tmp/cctyCFAS.s 			page 341


 12608              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12609              		.loc 1 124 12 view .LVU4398
 12610 4394 4D8B14F4 		mov	r10, QWORD PTR [r12+rsi*8]	# *_429, *_429
 12611              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12612              		.loc 1 124 11 view .LVU4399
 12613 4398 490FA3FA 		bt	r10, rdi	# *_429, index
 12614 439c 7372     		jnc	.L758	#,
 124:sieve_extend.c ****     return index;
 12615              		.loc 1 124 58 is_stmt 1 view .LVU4400
 12616              	.LVL854:
 12617              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12618              		.loc 1 124 63 is_stmt 0 view .LVU4401
 12619 439e 498D7E03 		lea	rdi, 3[r14]	# index,
 12620              	.LVL855:
 124:sieve_extend.c ****     return index;
 12621              		.loc 1 124 11 is_stmt 1 view .LVU4402
 12622              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12623              		.loc 1 124 21 is_stmt 0 view .LVU4403
 12624 43a2 4889F8   		mov	rax, rdi	# tmp1377, index
 12625 43a5 48C1E806 		shr	rax, 6	# tmp1377,
 12626              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12627              		.loc 1 124 12 view .LVU4404
 12628 43a9 498B14C4 		mov	rdx, QWORD PTR [r12+rax*8]	# *_429, *_429
 12629              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12630              		.loc 1 124 11 view .LVU4405
 12631 43ad 480FA3FA 		bt	rdx, rdi	# *_429, index
 12632 43b1 735D     		jnc	.L758	#,
 124:sieve_extend.c ****     return index;
 12633              		.loc 1 124 58 is_stmt 1 view .LVU4406
 12634              	.LVL856:
 12635              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12636              		.loc 1 124 63 is_stmt 0 view .LVU4407
 12637 43b3 498D7E04 		lea	rdi, 4[r14]	# index,
 12638              	.LVL857:
 124:sieve_extend.c ****     return index;
 12639              		.loc 1 124 11 is_stmt 1 view .LVU4408
 12640              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12641              		.loc 1 124 21 is_stmt 0 view .LVU4409
 12642 43b7 4889FB   		mov	rbx, rdi	# tmp1381, index
 12643 43ba 48C1EB06 		shr	rbx, 6	# tmp1381,
 12644              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12645              		.loc 1 124 12 view .LVU4410
 12646 43be 498B34DC 		mov	rsi, QWORD PTR [r12+rbx*8]	# *_429, *_429
 12647              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12648              		.loc 1 124 11 view .LVU4411
 12649 43c2 480FA3FE 		bt	rsi, rdi	# *_429, index
 12650 43c6 7348     		jnc	.L758	#,
GAS LISTING /tmp/cctyCFAS.s 			page 342


 124:sieve_extend.c ****     return index;
 12651              		.loc 1 124 58 is_stmt 1 view .LVU4412
 12652              	.LVL858:
 12653              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12654              		.loc 1 124 63 is_stmt 0 view .LVU4413
 12655 43c8 498D7E05 		lea	rdi, 5[r14]	# index,
 12656              	.LVL859:
 124:sieve_extend.c ****     return index;
 12657              		.loc 1 124 11 is_stmt 1 view .LVU4414
 12658              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12659              		.loc 1 124 21 is_stmt 0 view .LVU4415
 12660 43cc 4989FA   		mov	r10, rdi	# tmp1385, index
 12661 43cf 49C1EA06 		shr	r10, 6	# tmp1385,
 12662              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12663              		.loc 1 124 12 view .LVU4416
 12664 43d3 4B8B04D4 		mov	rax, QWORD PTR [r12+r10*8]	# *_429, *_429
 12665              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12666              		.loc 1 124 11 view .LVU4417
 12667 43d7 480FA3F8 		bt	rax, rdi	# *_429, index
 12668 43db 7333     		jnc	.L758	#,
 124:sieve_extend.c ****     return index;
 12669              		.loc 1 124 58 is_stmt 1 view .LVU4418
 12670              	.LVL860:
 12671              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12672              		.loc 1 124 63 is_stmt 0 view .LVU4419
 12673 43dd 498D7E06 		lea	rdi, 6[r14]	# index,
 12674              	.LVL861:
 124:sieve_extend.c ****     return index;
 12675              		.loc 1 124 11 is_stmt 1 view .LVU4420
 12676              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12677              		.loc 1 124 21 is_stmt 0 view .LVU4421
 12678 43e1 4889FA   		mov	rdx, rdi	# tmp1389, index
 12679 43e4 48C1EA06 		shr	rdx, 6	# tmp1389,
 12680              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12681              		.loc 1 124 12 view .LVU4422
 12682 43e8 498B1CD4 		mov	rbx, QWORD PTR [r12+rdx*8]	# *_429, *_429
 12683              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12684              		.loc 1 124 11 view .LVU4423
 12685 43ec 480FA3FB 		bt	rbx, rdi	# *_429, index
 12686 43f0 731E     		jnc	.L758	#,
 124:sieve_extend.c ****     return index;
 12687              		.loc 1 124 58 is_stmt 1 view .LVU4424
 12688              	.LVL862:
 12689              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12690              		.loc 1 124 63 is_stmt 0 view .LVU4425
 12691 43f2 498D7E07 		lea	rdi, 7[r14]	# index,
 12692              	.LVL863:
 124:sieve_extend.c ****     return index;
GAS LISTING /tmp/cctyCFAS.s 			page 343


 12693              		.loc 1 124 11 is_stmt 1 view .LVU4426
 12694              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12695              		.loc 1 124 21 is_stmt 0 view .LVU4427
 12696 43f6 4989FE   		mov	r14, rdi	# tmp1393, index
 12697 43f9 49C1EE06 		shr	r14, 6	# tmp1393,
 12698              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12699              		.loc 1 124 12 view .LVU4428
 12700 43fd 4B8B34F4 		mov	rsi, QWORD PTR [r12+r14*8]	# *_429, *_429
 12701              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12702              		.loc 1 124 11 view .LVU4429
 12703 4401 480FA3FE 		bt	rsi, rdi	# *_429, index
 12704 4405 0F824AFF 		jc	.L759	#,
 12704      FFFF
 12705              	.LVL864:
 12706 440b 0F1F4400 		.p2align 4,,10
 12706      00
 12707              		.p2align 3
 12708              	.L758:
 125:sieve_extend.c **** }
 12709              		.loc 1 125 5 is_stmt 1 view .LVU4430
 125:sieve_extend.c **** }
 12710              		.loc 1 125 5 is_stmt 0 view .LVU4431
 12711              	.LBE590:
 12712              	.LBE589:
 886:sieve_extend.c ****         step  = prime * 2 + 1;
 12713              		.loc 1 886 9 is_stmt 1 view .LVU4432
 12714 4410 488D043F 		lea	rax, [rdi+rdi]	# _1211,
 12715              	.LVL865:
 887:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 12716              		.loc 1 887 9 view .LVU4433
 12717              	# sieve_extend.c:886:         start = prime * prime * 2 + prime * 2;
 886:sieve_extend.c ****         step  = prime * 2 + 1;
 12718              		.loc 1 886 35 is_stmt 0 view .LVU4434
 12719 4414 488D7701 		lea	rsi, 1[rdi]	# index,
 12720              	# sieve_extend.c:887:         step  = prime * 2 + 1;
 887:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 12721              		.loc 1 887 15 view .LVU4435
 12722 4418 4C8D5001 		lea	r10, 1[rax]	# step,
 12723              	.LVL866:
 888:sieve_extend.c ****         if (start <= block_stop) setBitsTrue_race(bitarray, start1, start, step1, step, block_stop)
 12724              		.loc 1 888 9 is_stmt 1 view .LVU4436
 12725              	# sieve_extend.c:888:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 888:sieve_extend.c ****         if (start <= block_stop) setBitsTrue_race(bitarray, start1, start, step1, step, block_stop)
 12726              		.loc 1 888 12 is_stmt 0 view .LVU4437
 12727 441c 4C39DE   		cmp	rsi, r11	# index, block_start
 12728 441f 0F86F309 		jbe	.L760	#,
 12728      0000
 12729              	# sieve_extend.c:886:         start = prime * prime * 2 + prime * 2;
 886:sieve_extend.c ****         step  = prime * 2 + 1;
 12730              		.loc 1 886 15 view .LVU4438
 12731 4425 480FAFC6 		imul	rax, rsi	# index2, index
 12732              	.LVL867:
 12733              	.L761:
 889:sieve_extend.c ****         else                     setBitsTrue_smallRange(bitarray, start1, step1, block_stop);
GAS LISTING /tmp/cctyCFAS.s 			page 344


 12734              		.loc 1 889 9 is_stmt 1 view .LVU4439
 12735              	.LBB591:
 12736              	.LBB592:
 12737              	# sieve_extend.c:330:     counter_t index1_word = wordindex(index1);
 330:sieve_extend.c ****     counter_t index2_word = wordindex(index2);
 12738              		.loc 1 330 15 is_stmt 0 view .LVU4440
 12739 4429 4989CE   		mov	r14, rcx	# index1_word, index
 12740              	# sieve_extend.c:331:     counter_t index2_word = wordindex(index2);
 331:sieve_extend.c ****     
 12741              		.loc 1 331 15 view .LVU4441
 12742 442c 4889C2   		mov	rdx, rax	# index2_word, index2
 12743              	# sieve_extend.c:330:     counter_t index1_word = wordindex(index1);
 330:sieve_extend.c ****     counter_t index2_word = wordindex(index2);
 12744              		.loc 1 330 15 view .LVU4442
 12745 442f 49C1EE06 		shr	r14, 6	# index1_word,
 12746              	.LVL868:
 331:sieve_extend.c ****     
 12747              		.loc 1 331 5 is_stmt 1 view .LVU4443
 12748              	# sieve_extend.c:331:     counter_t index2_word = wordindex(index2);
 331:sieve_extend.c ****     
 12749              		.loc 1 331 15 is_stmt 0 view .LVU4444
 12750 4433 48C1EA06 		shr	rdx, 6	# index2_word,
 12751              	.LBE592:
 12752              	.LBE591:
 12753              	# sieve_extend.c:889:         if (start <= block_stop) setBitsTrue_race(bitarray, start1, start, st
 889:sieve_extend.c ****         else                     setBitsTrue_smallRange(bitarray, start1, step1, block_stop);
 12754              		.loc 1 889 12 view .LVU4445
 12755 4437 4939C7   		cmp	r15, rax	# block_stop, index2
 12756 443a 0F82C007 		jb	.L1589	#,
 12756      0000
 12757              	.LVL869:
 12758              		.p2align 4,,10
 12759              		.p2align 3
 12760              	.L777:
 12761              	.LBB596:
 12762              	.LBB594:
 333:sieve_extend.c ****         if (index1_word == index2_word) {
 12763              		.loc 1 333 5 is_stmt 1 view .LVU4446
 334:sieve_extend.c ****             bitword_t mask = SAFE_ZERO;
 12764              		.loc 1 334 9 view .LVU4447
 12765              	# sieve_extend.c:334:         if (index1_word == index2_word) {
 334:sieve_extend.c ****             bitword_t mask = SAFE_ZERO;
 12766              		.loc 1 334 12 is_stmt 0 view .LVU4448
 12767 4440 4939D6   		cmp	r14, rdx	# index1_word, index2_word
 12768 4443 0F84DF01 		je	.L1590	#,
 12768      0000
 12769              	.L766:
 351:sieve_extend.c ****             while (index1 <= range_stop) {
 12770              		.loc 1 351 9 is_stmt 1 view .LVU4449
 12771              	# sieve_extend.c:351:         if (index2 > range_stop) {
 351:sieve_extend.c ****             while (index1 <= range_stop) {
 12772              		.loc 1 351 12 is_stmt 0 view .LVU4450
 12773 4449 4939C7   		cmp	r15, rax	# block_stop, index2
 12774 444c 0F827E03 		jb	.L1591	#,
 12774      0000
 12775              	.L769:
 359:sieve_extend.c ****             while (index2 <= range_stop) {
GAS LISTING /tmp/cctyCFAS.s 			page 345


 12776              		.loc 1 359 9 is_stmt 1 view .LVU4451
 12777              	# sieve_extend.c:359:         if (index1 > range_stop) {
 359:sieve_extend.c ****             while (index2 <= range_stop) {
 12778              		.loc 1 359 12 is_stmt 0 view .LVU4452
 12779 4452 4939CF   		cmp	r15, rcx	# block_stop, index
 12780 4455 0F829508 		jb	.L772	#,
 12780      0000
 367:sieve_extend.c ****             bitarray[index1_word] |= markmask(index1);
 12781              		.loc 1 367 15 is_stmt 1 view .LVU4453
 12782 445b 4C39F2   		cmp	rdx, r14	# index2_word, index1_word
 12783 445e 0F86CC00 		jbe	.L774	#,
 12783      0000
 12784              	.L773:
 368:sieve_extend.c ****             index1 += step1;
 12785              		.loc 1 368 13 view .LVU4454
 12786              	# sieve_extend.c:368:             bitarray[index1_word] |= markmask(index1);
 368:sieve_extend.c ****             index1 += step1;
 12787              		.loc 1 368 38 is_stmt 0 view .LVU4455
 12788 4464 C4C2F1F7 		shlx	rdi, r13, rcx	# tmp937, tmp1041, index
 12788      FD
 12789              	# sieve_extend.c:369:             index1 += step1;
 369:sieve_extend.c ****             index1_word = wordindex(index1);
 12790              		.loc 1 369 20 view .LVU4456
 12791 4469 4C01C9   		add	rcx, r9	# index, step
 12792              	# sieve_extend.c:368:             bitarray[index1_word] |= markmask(index1);
 368:sieve_extend.c ****             index1 += step1;
 12793              		.loc 1 368 35 view .LVU4457
 12794 446c 4B093CF4 		or	QWORD PTR [r12+r14*8], rdi	# *_703, tmp937
 369:sieve_extend.c ****             index1_word = wordindex(index1);
 12795              		.loc 1 369 13 is_stmt 1 view .LVU4458
 370:sieve_extend.c ****         }
 12796              		.loc 1 370 13 view .LVU4459
 12797              	# sieve_extend.c:370:             index1_word = wordindex(index1);
 370:sieve_extend.c ****         }
 12798              		.loc 1 370 25 is_stmt 0 view .LVU4460
 12799 4470 4989CE   		mov	r14, rcx	# index1_word, index
 12800              	.LVL870:
 370:sieve_extend.c ****         }
 12801              		.loc 1 370 25 view .LVU4461
 12802 4473 49C1EE06 		shr	r14, 6	# index1_word,
 12803              	.LVL871:
 367:sieve_extend.c ****             bitarray[index1_word] |= markmask(index1);
 12804              		.loc 1 367 15 is_stmt 1 view .LVU4462
 12805 4477 4939D6   		cmp	r14, rdx	# index1_word, index2_word
 12806 447a 0F83B000 		jnb	.L774	#,
 12806      0000
 368:sieve_extend.c ****             index1 += step1;
 12807              		.loc 1 368 13 view .LVU4463
 12808              	# sieve_extend.c:368:             bitarray[index1_word] |= markmask(index1);
 368:sieve_extend.c ****             index1 += step1;
 12809              		.loc 1 368 38 is_stmt 0 view .LVU4464
 12810 4480 C4C2F1F7 		shlx	rbx, r13, rcx	# tmp1302, tmp1041, index
 12810      DD
 12811              	# sieve_extend.c:369:             index1 += step1;
 369:sieve_extend.c ****             index1_word = wordindex(index1);
 12812              		.loc 1 369 20 view .LVU4465
 12813 4485 4C01C9   		add	rcx, r9	# index, step
GAS LISTING /tmp/cctyCFAS.s 			page 346


 12814              	# sieve_extend.c:368:             bitarray[index1_word] |= markmask(index1);
 368:sieve_extend.c ****             index1 += step1;
 12815              		.loc 1 368 35 view .LVU4466
 12816 4488 4B091CF4 		or	QWORD PTR [r12+r14*8], rbx	# *_703, tmp1302
 369:sieve_extend.c ****             index1_word = wordindex(index1);
 12817              		.loc 1 369 13 is_stmt 1 view .LVU4467
 370:sieve_extend.c ****         }
 12818              		.loc 1 370 13 view .LVU4468
 12819              	# sieve_extend.c:370:             index1_word = wordindex(index1);
 370:sieve_extend.c ****         }
 12820              		.loc 1 370 25 is_stmt 0 view .LVU4469
 12821 448c 4989CE   		mov	r14, rcx	# index1_word, index
 12822              	.LVL872:
 370:sieve_extend.c ****         }
 12823              		.loc 1 370 25 view .LVU4470
 12824 448f 49C1EE06 		shr	r14, 6	# index1_word,
 12825              	.LVL873:
 367:sieve_extend.c ****             bitarray[index1_word] |= markmask(index1);
 12826              		.loc 1 367 15 is_stmt 1 view .LVU4471
 12827 4493 4939D6   		cmp	r14, rdx	# index1_word, index2_word
 12828 4496 0F839400 		jnb	.L774	#,
 12828      0000
 368:sieve_extend.c ****             index1 += step1;
 12829              		.loc 1 368 13 view .LVU4472
 12830              	# sieve_extend.c:368:             bitarray[index1_word] |= markmask(index1);
 368:sieve_extend.c ****             index1 += step1;
 12831              		.loc 1 368 38 is_stmt 0 view .LVU4473
 12832 449c C4C2F1F7 		shlx	rdi, r13, rcx	# tmp1305, tmp1041, index
 12832      FD
 12833              	# sieve_extend.c:369:             index1 += step1;
 369:sieve_extend.c ****             index1_word = wordindex(index1);
 12834              		.loc 1 369 20 view .LVU4474
 12835 44a1 4C01C9   		add	rcx, r9	# index, step
 12836              	# sieve_extend.c:368:             bitarray[index1_word] |= markmask(index1);
 368:sieve_extend.c ****             index1 += step1;
 12837              		.loc 1 368 35 view .LVU4475
 12838 44a4 4B093CF4 		or	QWORD PTR [r12+r14*8], rdi	# *_703, tmp1305
 369:sieve_extend.c ****             index1_word = wordindex(index1);
 12839              		.loc 1 369 13 is_stmt 1 view .LVU4476
 370:sieve_extend.c ****         }
 12840              		.loc 1 370 13 view .LVU4477
 12841              	# sieve_extend.c:370:             index1_word = wordindex(index1);
 370:sieve_extend.c ****         }
 12842              		.loc 1 370 25 is_stmt 0 view .LVU4478
 12843 44a8 4989CE   		mov	r14, rcx	# index1_word, index
 12844              	.LVL874:
 370:sieve_extend.c ****         }
 12845              		.loc 1 370 25 view .LVU4479
 12846 44ab 49C1EE06 		shr	r14, 6	# index1_word,
 12847              	.LVL875:
 367:sieve_extend.c ****             bitarray[index1_word] |= markmask(index1);
 12848              		.loc 1 367 15 is_stmt 1 view .LVU4480
 12849 44af 4939D6   		cmp	r14, rdx	# index1_word, index2_word
 12850 44b2 737C     		jnb	.L774	#,
 368:sieve_extend.c ****             index1 += step1;
 12851              		.loc 1 368 13 view .LVU4481
 12852              	# sieve_extend.c:368:             bitarray[index1_word] |= markmask(index1);
GAS LISTING /tmp/cctyCFAS.s 			page 347


 368:sieve_extend.c ****             index1 += step1;
 12853              		.loc 1 368 38 is_stmt 0 view .LVU4482
 12854 44b4 C4C2F1F7 		shlx	rbx, r13, rcx	# tmp1308, tmp1041, index
 12854      DD
 12855              	# sieve_extend.c:369:             index1 += step1;
 369:sieve_extend.c ****             index1_word = wordindex(index1);
 12856              		.loc 1 369 20 view .LVU4483
 12857 44b9 4C01C9   		add	rcx, r9	# index, step
 12858              	# sieve_extend.c:368:             bitarray[index1_word] |= markmask(index1);
 368:sieve_extend.c ****             index1 += step1;
 12859              		.loc 1 368 35 view .LVU4484
 12860 44bc 4B091CF4 		or	QWORD PTR [r12+r14*8], rbx	# *_703, tmp1308
 369:sieve_extend.c ****             index1_word = wordindex(index1);
 12861              		.loc 1 369 13 is_stmt 1 view .LVU4485
 370:sieve_extend.c ****         }
 12862              		.loc 1 370 13 view .LVU4486
 12863              	# sieve_extend.c:370:             index1_word = wordindex(index1);
 370:sieve_extend.c ****         }
 12864              		.loc 1 370 25 is_stmt 0 view .LVU4487
 12865 44c0 4989CE   		mov	r14, rcx	# index1_word, index
 12866              	.LVL876:
 370:sieve_extend.c ****         }
 12867              		.loc 1 370 25 view .LVU4488
 12868 44c3 49C1EE06 		shr	r14, 6	# index1_word,
 12869              	.LVL877:
 367:sieve_extend.c ****             bitarray[index1_word] |= markmask(index1);
 12870              		.loc 1 367 15 is_stmt 1 view .LVU4489
 12871 44c7 4939D6   		cmp	r14, rdx	# index1_word, index2_word
 12872 44ca 7364     		jnb	.L774	#,
 368:sieve_extend.c ****             index1 += step1;
 12873              		.loc 1 368 13 view .LVU4490
 12874              	# sieve_extend.c:368:             bitarray[index1_word] |= markmask(index1);
 368:sieve_extend.c ****             index1 += step1;
 12875              		.loc 1 368 38 is_stmt 0 view .LVU4491
 12876 44cc C4C2F1F7 		shlx	rdi, r13, rcx	# tmp1311, tmp1041, index
 12876      FD
 12877              	# sieve_extend.c:369:             index1 += step1;
 369:sieve_extend.c ****             index1_word = wordindex(index1);
 12878              		.loc 1 369 20 view .LVU4492
 12879 44d1 4C01C9   		add	rcx, r9	# index, step
 12880              	# sieve_extend.c:368:             bitarray[index1_word] |= markmask(index1);
 368:sieve_extend.c ****             index1 += step1;
 12881              		.loc 1 368 35 view .LVU4493
 12882 44d4 4B093CF4 		or	QWORD PTR [r12+r14*8], rdi	# *_703, tmp1311
 369:sieve_extend.c ****             index1_word = wordindex(index1);
 12883              		.loc 1 369 13 is_stmt 1 view .LVU4494
 370:sieve_extend.c ****         }
 12884              		.loc 1 370 13 view .LVU4495
 12885              	# sieve_extend.c:370:             index1_word = wordindex(index1);
 370:sieve_extend.c ****         }
 12886              		.loc 1 370 25 is_stmt 0 view .LVU4496
 12887 44d8 4989CE   		mov	r14, rcx	# index1_word, index
 12888              	.LVL878:
 370:sieve_extend.c ****         }
 12889              		.loc 1 370 25 view .LVU4497
 12890 44db 49C1EE06 		shr	r14, 6	# index1_word,
 12891              	.LVL879:
GAS LISTING /tmp/cctyCFAS.s 			page 348


 367:sieve_extend.c ****             bitarray[index1_word] |= markmask(index1);
 12892              		.loc 1 367 15 is_stmt 1 view .LVU4498
 12893 44df 4939D6   		cmp	r14, rdx	# index1_word, index2_word
 12894 44e2 734C     		jnb	.L774	#,
 368:sieve_extend.c ****             index1 += step1;
 12895              		.loc 1 368 13 view .LVU4499
 12896              	# sieve_extend.c:368:             bitarray[index1_word] |= markmask(index1);
 368:sieve_extend.c ****             index1 += step1;
 12897              		.loc 1 368 38 is_stmt 0 view .LVU4500
 12898 44e4 C4C2F1F7 		shlx	rbx, r13, rcx	# tmp1314, tmp1041, index
 12898      DD
 12899              	# sieve_extend.c:369:             index1 += step1;
 369:sieve_extend.c ****             index1_word = wordindex(index1);
 12900              		.loc 1 369 20 view .LVU4501
 12901 44e9 4C01C9   		add	rcx, r9	# index, step
 12902              	# sieve_extend.c:368:             bitarray[index1_word] |= markmask(index1);
 368:sieve_extend.c ****             index1 += step1;
 12903              		.loc 1 368 35 view .LVU4502
 12904 44ec 4B091CF4 		or	QWORD PTR [r12+r14*8], rbx	# *_703, tmp1314
 369:sieve_extend.c ****             index1_word = wordindex(index1);
 12905              		.loc 1 369 13 is_stmt 1 view .LVU4503
 370:sieve_extend.c ****         }
 12906              		.loc 1 370 13 view .LVU4504
 12907              	# sieve_extend.c:370:             index1_word = wordindex(index1);
 370:sieve_extend.c ****         }
 12908              		.loc 1 370 25 is_stmt 0 view .LVU4505
 12909 44f0 4989CE   		mov	r14, rcx	# index1_word, index
 12910              	.LVL880:
 370:sieve_extend.c ****         }
 12911              		.loc 1 370 25 view .LVU4506
 12912 44f3 49C1EE06 		shr	r14, 6	# index1_word,
 12913              	.LVL881:
 367:sieve_extend.c ****             bitarray[index1_word] |= markmask(index1);
 12914              		.loc 1 367 15 is_stmt 1 view .LVU4507
 12915 44f7 4939D6   		cmp	r14, rdx	# index1_word, index2_word
 12916 44fa 7334     		jnb	.L774	#,
 368:sieve_extend.c ****             index1 += step1;
 12917              		.loc 1 368 13 view .LVU4508
 12918              	# sieve_extend.c:368:             bitarray[index1_word] |= markmask(index1);
 368:sieve_extend.c ****             index1 += step1;
 12919              		.loc 1 368 38 is_stmt 0 view .LVU4509
 12920 44fc C4C2F1F7 		shlx	rdi, r13, rcx	# tmp1317, tmp1041, index
 12920      FD
 12921              	# sieve_extend.c:369:             index1 += step1;
 369:sieve_extend.c ****             index1_word = wordindex(index1);
 12922              		.loc 1 369 20 view .LVU4510
 12923 4501 4C01C9   		add	rcx, r9	# index, step
 12924              	# sieve_extend.c:368:             bitarray[index1_word] |= markmask(index1);
 368:sieve_extend.c ****             index1 += step1;
 12925              		.loc 1 368 35 view .LVU4511
 12926 4504 4B093CF4 		or	QWORD PTR [r12+r14*8], rdi	# *_703, tmp1317
 369:sieve_extend.c ****             index1_word = wordindex(index1);
 12927              		.loc 1 369 13 is_stmt 1 view .LVU4512
 370:sieve_extend.c ****         }
 12928              		.loc 1 370 13 view .LVU4513
 12929              	# sieve_extend.c:370:             index1_word = wordindex(index1);
 370:sieve_extend.c ****         }
GAS LISTING /tmp/cctyCFAS.s 			page 349


 12930              		.loc 1 370 25 is_stmt 0 view .LVU4514
 12931 4508 4989CE   		mov	r14, rcx	# index1_word, index
 12932              	.LVL882:
 370:sieve_extend.c ****         }
 12933              		.loc 1 370 25 view .LVU4515
 12934 450b 49C1EE06 		shr	r14, 6	# index1_word,
 12935              	.LVL883:
 367:sieve_extend.c ****             bitarray[index1_word] |= markmask(index1);
 12936              		.loc 1 367 15 is_stmt 1 view .LVU4516
 12937 450f 4939D6   		cmp	r14, rdx	# index1_word, index2_word
 12938 4512 731C     		jnb	.L774	#,
 368:sieve_extend.c ****             index1 += step1;
 12939              		.loc 1 368 13 view .LVU4517
 12940              	# sieve_extend.c:368:             bitarray[index1_word] |= markmask(index1);
 368:sieve_extend.c ****             index1 += step1;
 12941              		.loc 1 368 38 is_stmt 0 view .LVU4518
 12942 4514 C4C2F1F7 		shlx	rbx, r13, rcx	# tmp1320, tmp1041, index
 12942      DD
 12943              	# sieve_extend.c:369:             index1 += step1;
 369:sieve_extend.c ****             index1_word = wordindex(index1);
 12944              		.loc 1 369 20 view .LVU4519
 12945 4519 4C01C9   		add	rcx, r9	# index, step
 12946              	# sieve_extend.c:368:             bitarray[index1_word] |= markmask(index1);
 368:sieve_extend.c ****             index1 += step1;
 12947              		.loc 1 368 35 view .LVU4520
 12948 451c 4B091CF4 		or	QWORD PTR [r12+r14*8], rbx	# *_703, tmp1320
 369:sieve_extend.c ****             index1_word = wordindex(index1);
 12949              		.loc 1 369 13 is_stmt 1 view .LVU4521
 370:sieve_extend.c ****         }
 12950              		.loc 1 370 13 view .LVU4522
 12951              	# sieve_extend.c:370:             index1_word = wordindex(index1);
 370:sieve_extend.c ****         }
 12952              		.loc 1 370 25 is_stmt 0 view .LVU4523
 12953 4520 4989CE   		mov	r14, rcx	# index1_word, index
 12954              	.LVL884:
 370:sieve_extend.c ****         }
 12955              		.loc 1 370 25 view .LVU4524
 12956 4523 49C1EE06 		shr	r14, 6	# index1_word,
 12957              	.LVL885:
 367:sieve_extend.c ****             bitarray[index1_word] |= markmask(index1);
 12958              		.loc 1 367 15 is_stmt 1 view .LVU4525
 12959 4527 4939D6   		cmp	r14, rdx	# index1_word, index2_word
 12960 452a 0F8234FF 		jb	.L773	#,
 12960      FFFF
 12961              		.p2align 4,,10
 12962              		.p2align 3
 12963              	.L774:
 373:sieve_extend.c ****             bitarray[index2_word] |= markmask(index2);
 12964              		.loc 1 373 15 view .LVU4526
 12965 4530 4C39F2   		cmp	rdx, r14	# index2_word, index1_word
 12966 4533 0F8307FF 		jnb	.L777	#,
 12966      FFFF
 12967              	.L776:
 374:sieve_extend.c ****             index2 += step2;
 12968              		.loc 1 374 13 view .LVU4527
 12969              	# sieve_extend.c:374:             bitarray[index2_word] |= markmask(index2);
 374:sieve_extend.c ****             index2 += step2;
GAS LISTING /tmp/cctyCFAS.s 			page 350


 12970              		.loc 1 374 38 is_stmt 0 view .LVU4528
 12971 4539 C4C2F9F7 		shlx	rdi, r13, rax	# tmp941, tmp1041, index2
 12971      FD
 12972              	# sieve_extend.c:375:             index2 += step2;
 375:sieve_extend.c ****             index2_word = wordindex(index2);
 12973              		.loc 1 375 20 view .LVU4529
 12974 453e 4C01D0   		add	rax, r10	# index2, step
 12975              	# sieve_extend.c:374:             bitarray[index2_word] |= markmask(index2);
 374:sieve_extend.c ****             index2 += step2;
 12976              		.loc 1 374 35 view .LVU4530
 12977 4541 49093CD4 		or	QWORD PTR [r12+rdx*8], rdi	# *_714, tmp941
 375:sieve_extend.c ****             index2_word = wordindex(index2);
 12978              		.loc 1 375 13 is_stmt 1 view .LVU4531
 376:sieve_extend.c ****         }
 12979              		.loc 1 376 13 view .LVU4532
 12980              	# sieve_extend.c:376:             index2_word = wordindex(index2);
 376:sieve_extend.c ****         }
 12981              		.loc 1 376 25 is_stmt 0 view .LVU4533
 12982 4545 4889C2   		mov	rdx, rax	# index2_word, index2
 12983              	.LVL886:
 376:sieve_extend.c ****         }
 12984              		.loc 1 376 25 view .LVU4534
 12985 4548 48C1EA06 		shr	rdx, 6	# index2_word,
 12986              	.LVL887:
 373:sieve_extend.c ****             bitarray[index2_word] |= markmask(index2);
 12987              		.loc 1 373 15 is_stmt 1 view .LVU4535
 12988 454c 4C39F2   		cmp	rdx, r14	# index2_word, index1_word
 12989 454f 0F83EBFE 		jnb	.L777	#,
 12989      FFFF
 374:sieve_extend.c ****             index2 += step2;
 12990              		.loc 1 374 13 view .LVU4536
 12991              	# sieve_extend.c:374:             bitarray[index2_word] |= markmask(index2);
 374:sieve_extend.c ****             index2 += step2;
 12992              		.loc 1 374 38 is_stmt 0 view .LVU4537
 12993 4555 C4C2F9F7 		shlx	rbx, r13, rax	# tmp1281, tmp1041, index2
 12993      DD
 12994              	# sieve_extend.c:375:             index2 += step2;
 375:sieve_extend.c ****             index2_word = wordindex(index2);
 12995              		.loc 1 375 20 view .LVU4538
 12996 455a 4C01D0   		add	rax, r10	# index2, step
 12997              	# sieve_extend.c:374:             bitarray[index2_word] |= markmask(index2);
 374:sieve_extend.c ****             index2 += step2;
 12998              		.loc 1 374 35 view .LVU4539
 12999 455d 49091CD4 		or	QWORD PTR [r12+rdx*8], rbx	# *_714, tmp1281
 375:sieve_extend.c ****             index2_word = wordindex(index2);
 13000              		.loc 1 375 13 is_stmt 1 view .LVU4540
 376:sieve_extend.c ****         }
 13001              		.loc 1 376 13 view .LVU4541
 13002              	# sieve_extend.c:376:             index2_word = wordindex(index2);
 376:sieve_extend.c ****         }
 13003              		.loc 1 376 25 is_stmt 0 view .LVU4542
 13004 4561 4889C2   		mov	rdx, rax	# index2_word, index2
 13005              	.LVL888:
 376:sieve_extend.c ****         }
 13006              		.loc 1 376 25 view .LVU4543
 13007 4564 48C1EA06 		shr	rdx, 6	# index2_word,
 13008              	.LVL889:
GAS LISTING /tmp/cctyCFAS.s 			page 351


 373:sieve_extend.c ****             bitarray[index2_word] |= markmask(index2);
 13009              		.loc 1 373 15 is_stmt 1 view .LVU4544
 13010 4568 4C39F2   		cmp	rdx, r14	# index2_word, index1_word
 13011 456b 0F83CFFE 		jnb	.L777	#,
 13011      FFFF
 374:sieve_extend.c ****             index2 += step2;
 13012              		.loc 1 374 13 view .LVU4545
 13013              	# sieve_extend.c:374:             bitarray[index2_word] |= markmask(index2);
 374:sieve_extend.c ****             index2 += step2;
 13014              		.loc 1 374 38 is_stmt 0 view .LVU4546
 13015 4571 C4C2F9F7 		shlx	rdi, r13, rax	# tmp1284, tmp1041, index2
 13015      FD
 13016              	# sieve_extend.c:375:             index2 += step2;
 375:sieve_extend.c ****             index2_word = wordindex(index2);
 13017              		.loc 1 375 20 view .LVU4547
 13018 4576 4C01D0   		add	rax, r10	# index2, step
 13019              	# sieve_extend.c:374:             bitarray[index2_word] |= markmask(index2);
 374:sieve_extend.c ****             index2 += step2;
 13020              		.loc 1 374 35 view .LVU4548
 13021 4579 49093CD4 		or	QWORD PTR [r12+rdx*8], rdi	# *_714, tmp1284
 375:sieve_extend.c ****             index2_word = wordindex(index2);
 13022              		.loc 1 375 13 is_stmt 1 view .LVU4549
 376:sieve_extend.c ****         }
 13023              		.loc 1 376 13 view .LVU4550
 13024              	# sieve_extend.c:376:             index2_word = wordindex(index2);
 376:sieve_extend.c ****         }
 13025              		.loc 1 376 25 is_stmt 0 view .LVU4551
 13026 457d 4889C2   		mov	rdx, rax	# index2_word, index2
 13027              	.LVL890:
 376:sieve_extend.c ****         }
 13028              		.loc 1 376 25 view .LVU4552
 13029 4580 48C1EA06 		shr	rdx, 6	# index2_word,
 13030              	.LVL891:
 373:sieve_extend.c ****             bitarray[index2_word] |= markmask(index2);
 13031              		.loc 1 373 15 is_stmt 1 view .LVU4553
 13032 4584 4C39F2   		cmp	rdx, r14	# index2_word, index1_word
 13033 4587 0F83B3FE 		jnb	.L777	#,
 13033      FFFF
 374:sieve_extend.c ****             index2 += step2;
 13034              		.loc 1 374 13 view .LVU4554
 13035              	# sieve_extend.c:374:             bitarray[index2_word] |= markmask(index2);
 374:sieve_extend.c ****             index2 += step2;
 13036              		.loc 1 374 38 is_stmt 0 view .LVU4555
 13037 458d C4C2F9F7 		shlx	rbx, r13, rax	# tmp1287, tmp1041, index2
 13037      DD
 13038              	# sieve_extend.c:375:             index2 += step2;
 375:sieve_extend.c ****             index2_word = wordindex(index2);
 13039              		.loc 1 375 20 view .LVU4556
 13040 4592 4C01D0   		add	rax, r10	# index2, step
 13041              	# sieve_extend.c:374:             bitarray[index2_word] |= markmask(index2);
 374:sieve_extend.c ****             index2 += step2;
 13042              		.loc 1 374 35 view .LVU4557
 13043 4595 49091CD4 		or	QWORD PTR [r12+rdx*8], rbx	# *_714, tmp1287
 375:sieve_extend.c ****             index2_word = wordindex(index2);
 13044              		.loc 1 375 13 is_stmt 1 view .LVU4558
 376:sieve_extend.c ****         }
 13045              		.loc 1 376 13 view .LVU4559
GAS LISTING /tmp/cctyCFAS.s 			page 352


 13046              	# sieve_extend.c:376:             index2_word = wordindex(index2);
 376:sieve_extend.c ****         }
 13047              		.loc 1 376 25 is_stmt 0 view .LVU4560
 13048 4599 4889C2   		mov	rdx, rax	# index2_word, index2
 13049              	.LVL892:
 376:sieve_extend.c ****         }
 13050              		.loc 1 376 25 view .LVU4561
 13051 459c 48C1EA06 		shr	rdx, 6	# index2_word,
 13052              	.LVL893:
 373:sieve_extend.c ****             bitarray[index2_word] |= markmask(index2);
 13053              		.loc 1 373 15 is_stmt 1 view .LVU4562
 13054 45a0 4C39F2   		cmp	rdx, r14	# index2_word, index1_word
 13055 45a3 0F8397FE 		jnb	.L777	#,
 13055      FFFF
 374:sieve_extend.c ****             index2 += step2;
 13056              		.loc 1 374 13 view .LVU4563
 13057              	# sieve_extend.c:374:             bitarray[index2_word] |= markmask(index2);
 374:sieve_extend.c ****             index2 += step2;
 13058              		.loc 1 374 38 is_stmt 0 view .LVU4564
 13059 45a9 C4C2F9F7 		shlx	rdi, r13, rax	# tmp1290, tmp1041, index2
 13059      FD
 13060              	# sieve_extend.c:375:             index2 += step2;
 375:sieve_extend.c ****             index2_word = wordindex(index2);
 13061              		.loc 1 375 20 view .LVU4565
 13062 45ae 4C01D0   		add	rax, r10	# index2, step
 13063              	# sieve_extend.c:374:             bitarray[index2_word] |= markmask(index2);
 374:sieve_extend.c ****             index2 += step2;
 13064              		.loc 1 374 35 view .LVU4566
 13065 45b1 49093CD4 		or	QWORD PTR [r12+rdx*8], rdi	# *_714, tmp1290
 375:sieve_extend.c ****             index2_word = wordindex(index2);
 13066              		.loc 1 375 13 is_stmt 1 view .LVU4567
 376:sieve_extend.c ****         }
 13067              		.loc 1 376 13 view .LVU4568
 13068              	# sieve_extend.c:376:             index2_word = wordindex(index2);
 376:sieve_extend.c ****         }
 13069              		.loc 1 376 25 is_stmt 0 view .LVU4569
 13070 45b5 4889C2   		mov	rdx, rax	# index2_word, index2
 13071              	.LVL894:
 376:sieve_extend.c ****         }
 13072              		.loc 1 376 25 view .LVU4570
 13073 45b8 48C1EA06 		shr	rdx, 6	# index2_word,
 13074              	.LVL895:
 373:sieve_extend.c ****             bitarray[index2_word] |= markmask(index2);
 13075              		.loc 1 373 15 is_stmt 1 view .LVU4571
 13076 45bc 4C39F2   		cmp	rdx, r14	# index2_word, index1_word
 13077 45bf 0F837BFE 		jnb	.L777	#,
 13077      FFFF
 374:sieve_extend.c ****             index2 += step2;
 13078              		.loc 1 374 13 view .LVU4572
 13079              	# sieve_extend.c:374:             bitarray[index2_word] |= markmask(index2);
 374:sieve_extend.c ****             index2 += step2;
 13080              		.loc 1 374 38 is_stmt 0 view .LVU4573
 13081 45c5 C4C2F9F7 		shlx	rbx, r13, rax	# tmp1293, tmp1041, index2
 13081      DD
 13082              	# sieve_extend.c:375:             index2 += step2;
 375:sieve_extend.c ****             index2_word = wordindex(index2);
 13083              		.loc 1 375 20 view .LVU4574
GAS LISTING /tmp/cctyCFAS.s 			page 353


 13084 45ca 4C01D0   		add	rax, r10	# index2, step
 13085              	# sieve_extend.c:374:             bitarray[index2_word] |= markmask(index2);
 374:sieve_extend.c ****             index2 += step2;
 13086              		.loc 1 374 35 view .LVU4575
 13087 45cd 49091CD4 		or	QWORD PTR [r12+rdx*8], rbx	# *_714, tmp1293
 375:sieve_extend.c ****             index2_word = wordindex(index2);
 13088              		.loc 1 375 13 is_stmt 1 view .LVU4576
 376:sieve_extend.c ****         }
 13089              		.loc 1 376 13 view .LVU4577
 13090              	# sieve_extend.c:376:             index2_word = wordindex(index2);
 376:sieve_extend.c ****         }
 13091              		.loc 1 376 25 is_stmt 0 view .LVU4578
 13092 45d1 4889C2   		mov	rdx, rax	# index2_word, index2
 13093              	.LVL896:
 376:sieve_extend.c ****         }
 13094              		.loc 1 376 25 view .LVU4579
 13095 45d4 48C1EA06 		shr	rdx, 6	# index2_word,
 13096              	.LVL897:
 373:sieve_extend.c ****             bitarray[index2_word] |= markmask(index2);
 13097              		.loc 1 373 15 is_stmt 1 view .LVU4580
 13098 45d8 4C39F2   		cmp	rdx, r14	# index2_word, index1_word
 13099 45db 0F835FFE 		jnb	.L777	#,
 13099      FFFF
 374:sieve_extend.c ****             index2 += step2;
 13100              		.loc 1 374 13 view .LVU4581
 13101              	# sieve_extend.c:374:             bitarray[index2_word] |= markmask(index2);
 374:sieve_extend.c ****             index2 += step2;
 13102              		.loc 1 374 38 is_stmt 0 view .LVU4582
 13103 45e1 C4C2F9F7 		shlx	rdi, r13, rax	# tmp1296, tmp1041, index2
 13103      FD
 13104              	# sieve_extend.c:375:             index2 += step2;
 375:sieve_extend.c ****             index2_word = wordindex(index2);
 13105              		.loc 1 375 20 view .LVU4583
 13106 45e6 4C01D0   		add	rax, r10	# index2, step
 13107              	# sieve_extend.c:374:             bitarray[index2_word] |= markmask(index2);
 374:sieve_extend.c ****             index2 += step2;
 13108              		.loc 1 374 35 view .LVU4584
 13109 45e9 49093CD4 		or	QWORD PTR [r12+rdx*8], rdi	# *_714, tmp1296
 375:sieve_extend.c ****             index2_word = wordindex(index2);
 13110              		.loc 1 375 13 is_stmt 1 view .LVU4585
 376:sieve_extend.c ****         }
 13111              		.loc 1 376 13 view .LVU4586
 13112              	# sieve_extend.c:376:             index2_word = wordindex(index2);
 376:sieve_extend.c ****         }
 13113              		.loc 1 376 25 is_stmt 0 view .LVU4587
 13114 45ed 4889C2   		mov	rdx, rax	# index2_word, index2
 13115              	.LVL898:
 376:sieve_extend.c ****         }
 13116              		.loc 1 376 25 view .LVU4588
 13117 45f0 48C1EA06 		shr	rdx, 6	# index2_word,
 13118              	.LVL899:
 373:sieve_extend.c ****             bitarray[index2_word] |= markmask(index2);
 13119              		.loc 1 373 15 is_stmt 1 view .LVU4589
 13120 45f4 4C39F2   		cmp	rdx, r14	# index2_word, index1_word
 13121 45f7 0F8343FE 		jnb	.L777	#,
 13121      FFFF
 374:sieve_extend.c ****             index2 += step2;
GAS LISTING /tmp/cctyCFAS.s 			page 354


 13122              		.loc 1 374 13 view .LVU4590
 13123              	# sieve_extend.c:374:             bitarray[index2_word] |= markmask(index2);
 374:sieve_extend.c ****             index2 += step2;
 13124              		.loc 1 374 38 is_stmt 0 view .LVU4591
 13125 45fd C4C2F9F7 		shlx	rbx, r13, rax	# tmp1299, tmp1041, index2
 13125      DD
 13126              	# sieve_extend.c:375:             index2 += step2;
 375:sieve_extend.c ****             index2_word = wordindex(index2);
 13127              		.loc 1 375 20 view .LVU4592
 13128 4602 4C01D0   		add	rax, r10	# index2, step
 13129              	# sieve_extend.c:374:             bitarray[index2_word] |= markmask(index2);
 374:sieve_extend.c ****             index2 += step2;
 13130              		.loc 1 374 35 view .LVU4593
 13131 4605 49091CD4 		or	QWORD PTR [r12+rdx*8], rbx	# *_714, tmp1299
 375:sieve_extend.c ****             index2_word = wordindex(index2);
 13132              		.loc 1 375 13 is_stmt 1 view .LVU4594
 376:sieve_extend.c ****         }
 13133              		.loc 1 376 13 view .LVU4595
 13134              	# sieve_extend.c:376:             index2_word = wordindex(index2);
 376:sieve_extend.c ****         }
 13135              		.loc 1 376 25 is_stmt 0 view .LVU4596
 13136 4609 4889C2   		mov	rdx, rax	# index2_word, index2
 13137              	.LVL900:
 376:sieve_extend.c ****         }
 13138              		.loc 1 376 25 view .LVU4597
 13139 460c 48C1EA06 		shr	rdx, 6	# index2_word,
 13140              	.LVL901:
 373:sieve_extend.c ****             bitarray[index2_word] |= markmask(index2);
 13141              		.loc 1 373 15 is_stmt 1 view .LVU4598
 13142 4610 4C39F2   		cmp	rdx, r14	# index2_word, index1_word
 13143 4613 0F8220FF 		jb	.L776	#,
 13143      FFFF
 333:sieve_extend.c ****         if (index1_word == index2_word) {
 13144              		.loc 1 333 5 view .LVU4599
 334:sieve_extend.c ****             bitword_t mask = SAFE_ZERO;
 13145              		.loc 1 334 9 view .LVU4600
 13146              	# sieve_extend.c:334:         if (index1_word == index2_word) {
 334:sieve_extend.c ****             bitword_t mask = SAFE_ZERO;
 13147              		.loc 1 334 12 is_stmt 0 view .LVU4601
 13148 4619 4939D6   		cmp	r14, rdx	# index1_word, index2_word
 13149 461c 0F8527FE 		jne	.L766	#,
 13149      FFFF
 13150              		.p2align 4,,10
 13151 4622 660F1F44 		.p2align 3
 13151      0000
 13152              	.L1590:
 13153              	.LBB593:
 13154              	# sieve_extend.c:335:             bitword_t mask = SAFE_ZERO;
 335:sieve_extend.c ****             counter_t index_word = index1_word;
 13155              		.loc 1 335 23 view .LVU4602
 13156 4628 31FF     		xor	edi, edi	# mask
 13157              	.LVL902:
 13158              	.L767:
 337:sieve_extend.c ****                 mask |= markmask(index1);
 13159              		.loc 1 337 13 is_stmt 1 view .LVU4603
 338:sieve_extend.c ****                 index1 += step1;
 13160              		.loc 1 338 17 view .LVU4604
GAS LISTING /tmp/cctyCFAS.s 			page 355


 13161              	# sieve_extend.c:338:                 mask |= markmask(index1);
 338:sieve_extend.c ****                 index1 += step1;
 13162              		.loc 1 338 25 is_stmt 0 view .LVU4605
 13163 462a C4C2F1F7 		shlx	rdx, r13, rcx	# tmp919, tmp1041, index
 13163      D5
 13164              	# sieve_extend.c:339:                 index1 += step1;
 339:sieve_extend.c ****                 index1_word = wordindex(index1);
 13165              		.loc 1 339 24 view .LVU4606
 13166 462f 4C01C9   		add	rcx, r9	# index, step
 13167              	# sieve_extend.c:340:                 index1_word = wordindex(index1);
 340:sieve_extend.c ****             } while (index1_word == index_word);
 13168              		.loc 1 340 29 view .LVU4607
 13169 4632 4889CB   		mov	rbx, rcx	# index1_word, index
 13170 4635 48C1EB06 		shr	rbx, 6	# index1_word,
 13171              	# sieve_extend.c:338:                 mask |= markmask(index1);
 338:sieve_extend.c ****                 index1 += step1;
 13172              		.loc 1 338 22 view .LVU4608
 13173 4639 4809D7   		or	rdi, rdx	# mask, tmp919
 13174              	.LVL903:
 339:sieve_extend.c ****                 index1_word = wordindex(index1);
 13175              		.loc 1 339 17 is_stmt 1 view .LVU4609
 340:sieve_extend.c ****             } while (index1_word == index_word);
 13176              		.loc 1 340 17 view .LVU4610
 341:sieve_extend.c ****             do {
 13177              		.loc 1 341 21 view .LVU4611
 13178              	# sieve_extend.c:341:             } while (index1_word == index_word);
 341:sieve_extend.c ****             do {
 13179              		.loc 1 341 13 is_stmt 0 view .LVU4612
 13180 463c 4939DE   		cmp	r14, rbx	# index1_word, index1_word
 13181 463f 0F85AB00 		jne	.L768	#,
 13181      0000
 337:sieve_extend.c ****                 mask |= markmask(index1);
 13182              		.loc 1 337 13 is_stmt 1 view .LVU4613
 338:sieve_extend.c ****                 index1 += step1;
 13183              		.loc 1 338 17 view .LVU4614
 13184              	# sieve_extend.c:338:                 mask |= markmask(index1);
 338:sieve_extend.c ****                 index1 += step1;
 13185              		.loc 1 338 25 is_stmt 0 view .LVU4615
 13186 4645 C4C2F1F7 		shlx	rbx, r13, rcx	# tmp1328, tmp1041, index
 13186      DD
 13187              	.LVL904:
 13188              	# sieve_extend.c:339:                 index1 += step1;
 339:sieve_extend.c ****                 index1_word = wordindex(index1);
 13189              		.loc 1 339 24 view .LVU4616
 13190 464a 4C01C9   		add	rcx, r9	# index, step
 13191              	.LVL905:
 13192              	# sieve_extend.c:338:                 mask |= markmask(index1);
 338:sieve_extend.c ****                 index1 += step1;
 13193              		.loc 1 338 22 view .LVU4617
 13194 464d 4809DF   		or	rdi, rbx	# mask, tmp1328
 13195              	.LVL906:
 339:sieve_extend.c ****                 index1_word = wordindex(index1);
 13196              		.loc 1 339 17 is_stmt 1 view .LVU4618
 340:sieve_extend.c ****             } while (index1_word == index_word);
 13197              		.loc 1 340 17 view .LVU4619
 13198              	# sieve_extend.c:340:                 index1_word = wordindex(index1);
 340:sieve_extend.c ****             } while (index1_word == index_word);
GAS LISTING /tmp/cctyCFAS.s 			page 356


 13199              		.loc 1 340 29 is_stmt 0 view .LVU4620
 13200 4650 4889CB   		mov	rbx, rcx	# index1_word, index
 13201 4653 48C1EB06 		shr	rbx, 6	# index1_word,
 13202              	.LVL907:
 341:sieve_extend.c ****             do {
 13203              		.loc 1 341 21 is_stmt 1 view .LVU4621
 13204              	# sieve_extend.c:341:             } while (index1_word == index_word);
 341:sieve_extend.c ****             do {
 13205              		.loc 1 341 13 is_stmt 0 view .LVU4622
 13206 4657 4939DE   		cmp	r14, rbx	# index1_word, index1_word
 13207 465a 0F859000 		jne	.L768	#,
 13207      0000
 337:sieve_extend.c ****                 mask |= markmask(index1);
 13208              		.loc 1 337 13 is_stmt 1 view .LVU4623
 338:sieve_extend.c ****                 index1 += step1;
 13209              		.loc 1 338 17 view .LVU4624
 13210              	# sieve_extend.c:338:                 mask |= markmask(index1);
 338:sieve_extend.c ****                 index1 += step1;
 13211              		.loc 1 338 25 is_stmt 0 view .LVU4625
 13212 4660 C4C2F1F7 		shlx	rdx, r13, rcx	# tmp1329, tmp1041, index
 13212      D5
 13213              	# sieve_extend.c:339:                 index1 += step1;
 339:sieve_extend.c ****                 index1_word = wordindex(index1);
 13214              		.loc 1 339 24 view .LVU4626
 13215 4665 4C01C9   		add	rcx, r9	# index, step
 13216              	# sieve_extend.c:340:                 index1_word = wordindex(index1);
 340:sieve_extend.c ****             } while (index1_word == index_word);
 13217              		.loc 1 340 29 view .LVU4627
 13218 4668 4889CB   		mov	rbx, rcx	# index1_word, index
 13219              	.LVL908:
 340:sieve_extend.c ****             } while (index1_word == index_word);
 13220              		.loc 1 340 29 view .LVU4628
 13221 466b 48C1EB06 		shr	rbx, 6	# index1_word,
 13222              	# sieve_extend.c:338:                 mask |= markmask(index1);
 338:sieve_extend.c ****                 index1 += step1;
 13223              		.loc 1 338 22 view .LVU4629
 13224 466f 4809D7   		or	rdi, rdx	# mask, tmp1329
 13225              	.LVL909:
 339:sieve_extend.c ****                 index1_word = wordindex(index1);
 13226              		.loc 1 339 17 is_stmt 1 view .LVU4630
 340:sieve_extend.c ****             } while (index1_word == index_word);
 13227              		.loc 1 340 17 view .LVU4631
 341:sieve_extend.c ****             do {
 13228              		.loc 1 341 21 view .LVU4632
 13229              	# sieve_extend.c:341:             } while (index1_word == index_word);
 341:sieve_extend.c ****             do {
 13230              		.loc 1 341 13 is_stmt 0 view .LVU4633
 13231 4672 4939DE   		cmp	r14, rbx	# index1_word, index1_word
 13232 4675 7579     		jne	.L768	#,
 337:sieve_extend.c ****                 mask |= markmask(index1);
 13233              		.loc 1 337 13 is_stmt 1 view .LVU4634
 338:sieve_extend.c ****                 index1 += step1;
 13234              		.loc 1 338 17 view .LVU4635
 13235              	# sieve_extend.c:338:                 mask |= markmask(index1);
 338:sieve_extend.c ****                 index1 += step1;
 13236              		.loc 1 338 25 is_stmt 0 view .LVU4636
 13237 4677 C4C2F1F7 		shlx	rbx, r13, rcx	# tmp1330, tmp1041, index
GAS LISTING /tmp/cctyCFAS.s 			page 357


 13237      DD
 13238              	.LVL910:
 13239              	# sieve_extend.c:339:                 index1 += step1;
 339:sieve_extend.c ****                 index1_word = wordindex(index1);
 13240              		.loc 1 339 24 view .LVU4637
 13241 467c 4C01C9   		add	rcx, r9	# index, step
 13242              	.LVL911:
 13243              	# sieve_extend.c:338:                 mask |= markmask(index1);
 338:sieve_extend.c ****                 index1 += step1;
 13244              		.loc 1 338 22 view .LVU4638
 13245 467f 4809DF   		or	rdi, rbx	# mask, tmp1330
 13246              	.LVL912:
 339:sieve_extend.c ****                 index1_word = wordindex(index1);
 13247              		.loc 1 339 17 is_stmt 1 view .LVU4639
 340:sieve_extend.c ****             } while (index1_word == index_word);
 13248              		.loc 1 340 17 view .LVU4640
 13249              	# sieve_extend.c:340:                 index1_word = wordindex(index1);
 340:sieve_extend.c ****             } while (index1_word == index_word);
 13250              		.loc 1 340 29 is_stmt 0 view .LVU4641
 13251 4682 4889CB   		mov	rbx, rcx	# index1_word, index
 13252 4685 48C1EB06 		shr	rbx, 6	# index1_word,
 13253              	.LVL913:
 341:sieve_extend.c ****             do {
 13254              		.loc 1 341 21 is_stmt 1 view .LVU4642
 13255              	# sieve_extend.c:341:             } while (index1_word == index_word);
 341:sieve_extend.c ****             do {
 13256              		.loc 1 341 13 is_stmt 0 view .LVU4643
 13257 4689 4939DE   		cmp	r14, rbx	# index1_word, index1_word
 13258 468c 7562     		jne	.L768	#,
 337:sieve_extend.c ****                 mask |= markmask(index1);
 13259              		.loc 1 337 13 is_stmt 1 view .LVU4644
 338:sieve_extend.c ****                 index1 += step1;
 13260              		.loc 1 338 17 view .LVU4645
 13261              	# sieve_extend.c:338:                 mask |= markmask(index1);
 338:sieve_extend.c ****                 index1 += step1;
 13262              		.loc 1 338 25 is_stmt 0 view .LVU4646
 13263 468e C4C2F1F7 		shlx	rdx, r13, rcx	# tmp1331, tmp1041, index
 13263      D5
 13264              	# sieve_extend.c:339:                 index1 += step1;
 339:sieve_extend.c ****                 index1_word = wordindex(index1);
 13265              		.loc 1 339 24 view .LVU4647
 13266 4693 4C01C9   		add	rcx, r9	# index, step
 13267              	# sieve_extend.c:340:                 index1_word = wordindex(index1);
 340:sieve_extend.c ****             } while (index1_word == index_word);
 13268              		.loc 1 340 29 view .LVU4648
 13269 4696 4889CB   		mov	rbx, rcx	# index1_word, index
 13270              	.LVL914:
 340:sieve_extend.c ****             } while (index1_word == index_word);
 13271              		.loc 1 340 29 view .LVU4649
 13272 4699 48C1EB06 		shr	rbx, 6	# index1_word,
 13273              	# sieve_extend.c:338:                 mask |= markmask(index1);
 338:sieve_extend.c ****                 index1 += step1;
 13274              		.loc 1 338 22 view .LVU4650
 13275 469d 4809D7   		or	rdi, rdx	# mask, tmp1331
 13276              	.LVL915:
 339:sieve_extend.c ****                 index1_word = wordindex(index1);
 13277              		.loc 1 339 17 is_stmt 1 view .LVU4651
GAS LISTING /tmp/cctyCFAS.s 			page 358


 340:sieve_extend.c ****             } while (index1_word == index_word);
 13278              		.loc 1 340 17 view .LVU4652
 341:sieve_extend.c ****             do {
 13279              		.loc 1 341 21 view .LVU4653
 13280              	# sieve_extend.c:341:             } while (index1_word == index_word);
 341:sieve_extend.c ****             do {
 13281              		.loc 1 341 13 is_stmt 0 view .LVU4654
 13282 46a0 4939DE   		cmp	r14, rbx	# index1_word, index1_word
 13283 46a3 754B     		jne	.L768	#,
 337:sieve_extend.c ****                 mask |= markmask(index1);
 13284              		.loc 1 337 13 is_stmt 1 view .LVU4655
 338:sieve_extend.c ****                 index1 += step1;
 13285              		.loc 1 338 17 view .LVU4656
 13286              	# sieve_extend.c:338:                 mask |= markmask(index1);
 338:sieve_extend.c ****                 index1 += step1;
 13287              		.loc 1 338 25 is_stmt 0 view .LVU4657
 13288 46a5 C4C2F1F7 		shlx	rbx, r13, rcx	# tmp1332, tmp1041, index
 13288      DD
 13289              	.LVL916:
 13290              	# sieve_extend.c:339:                 index1 += step1;
 339:sieve_extend.c ****                 index1_word = wordindex(index1);
 13291              		.loc 1 339 24 view .LVU4658
 13292 46aa 4C01C9   		add	rcx, r9	# index, step
 13293              	.LVL917:
 13294              	# sieve_extend.c:338:                 mask |= markmask(index1);
 338:sieve_extend.c ****                 index1 += step1;
 13295              		.loc 1 338 22 view .LVU4659
 13296 46ad 4809DF   		or	rdi, rbx	# mask, tmp1332
 13297              	.LVL918:
 339:sieve_extend.c ****                 index1_word = wordindex(index1);
 13298              		.loc 1 339 17 is_stmt 1 view .LVU4660
 340:sieve_extend.c ****             } while (index1_word == index_word);
 13299              		.loc 1 340 17 view .LVU4661
 13300              	# sieve_extend.c:340:                 index1_word = wordindex(index1);
 340:sieve_extend.c ****             } while (index1_word == index_word);
 13301              		.loc 1 340 29 is_stmt 0 view .LVU4662
 13302 46b0 4889CB   		mov	rbx, rcx	# index1_word, index
 13303 46b3 48C1EB06 		shr	rbx, 6	# index1_word,
 13304              	.LVL919:
 341:sieve_extend.c ****             do {
 13305              		.loc 1 341 21 is_stmt 1 view .LVU4663
 13306              	# sieve_extend.c:341:             } while (index1_word == index_word);
 341:sieve_extend.c ****             do {
 13307              		.loc 1 341 13 is_stmt 0 view .LVU4664
 13308 46b7 4939DE   		cmp	r14, rbx	# index1_word, index1_word
 13309 46ba 7534     		jne	.L768	#,
 337:sieve_extend.c ****                 mask |= markmask(index1);
 13310              		.loc 1 337 13 is_stmt 1 view .LVU4665
 338:sieve_extend.c ****                 index1 += step1;
 13311              		.loc 1 338 17 view .LVU4666
 13312              	# sieve_extend.c:338:                 mask |= markmask(index1);
 338:sieve_extend.c ****                 index1 += step1;
 13313              		.loc 1 338 25 is_stmt 0 view .LVU4667
 13314 46bc C4C2F1F7 		shlx	rdx, r13, rcx	# tmp1333, tmp1041, index
 13314      D5
 13315              	# sieve_extend.c:339:                 index1 += step1;
 339:sieve_extend.c ****                 index1_word = wordindex(index1);
GAS LISTING /tmp/cctyCFAS.s 			page 359


 13316              		.loc 1 339 24 view .LVU4668
 13317 46c1 4C01C9   		add	rcx, r9	# index, step
 13318              	# sieve_extend.c:340:                 index1_word = wordindex(index1);
 340:sieve_extend.c ****             } while (index1_word == index_word);
 13319              		.loc 1 340 29 view .LVU4669
 13320 46c4 4889CB   		mov	rbx, rcx	# index1_word, index
 13321              	.LVL920:
 340:sieve_extend.c ****             } while (index1_word == index_word);
 13322              		.loc 1 340 29 view .LVU4670
 13323 46c7 48C1EB06 		shr	rbx, 6	# index1_word,
 13324              	# sieve_extend.c:338:                 mask |= markmask(index1);
 338:sieve_extend.c ****                 index1 += step1;
 13325              		.loc 1 338 22 view .LVU4671
 13326 46cb 4809D7   		or	rdi, rdx	# mask, tmp1333
 13327              	.LVL921:
 339:sieve_extend.c ****                 index1_word = wordindex(index1);
 13328              		.loc 1 339 17 is_stmt 1 view .LVU4672
 340:sieve_extend.c ****             } while (index1_word == index_word);
 13329              		.loc 1 340 17 view .LVU4673
 341:sieve_extend.c ****             do {
 13330              		.loc 1 341 21 view .LVU4674
 13331              	# sieve_extend.c:341:             } while (index1_word == index_word);
 341:sieve_extend.c ****             do {
 13332              		.loc 1 341 13 is_stmt 0 view .LVU4675
 13333 46ce 4939DE   		cmp	r14, rbx	# index1_word, index1_word
 13334 46d1 751D     		jne	.L768	#,
 337:sieve_extend.c ****                 mask |= markmask(index1);
 13335              		.loc 1 337 13 is_stmt 1 view .LVU4676
 338:sieve_extend.c ****                 index1 += step1;
 13336              		.loc 1 338 17 view .LVU4677
 13337              	# sieve_extend.c:338:                 mask |= markmask(index1);
 338:sieve_extend.c ****                 index1 += step1;
 13338              		.loc 1 338 25 is_stmt 0 view .LVU4678
 13339 46d3 C4C2F1F7 		shlx	rbx, r13, rcx	# tmp1334, tmp1041, index
 13339      DD
 13340              	.LVL922:
 13341              	# sieve_extend.c:339:                 index1 += step1;
 339:sieve_extend.c ****                 index1_word = wordindex(index1);
 13342              		.loc 1 339 24 view .LVU4679
 13343 46d8 4C01C9   		add	rcx, r9	# index, step
 13344              	.LVL923:
 13345              	# sieve_extend.c:338:                 mask |= markmask(index1);
 338:sieve_extend.c ****                 index1 += step1;
 13346              		.loc 1 338 22 view .LVU4680
 13347 46db 4809DF   		or	rdi, rbx	# mask, tmp1334
 13348              	.LVL924:
 339:sieve_extend.c ****                 index1_word = wordindex(index1);
 13349              		.loc 1 339 17 is_stmt 1 view .LVU4681
 340:sieve_extend.c ****             } while (index1_word == index_word);
 13350              		.loc 1 340 17 view .LVU4682
 13351              	# sieve_extend.c:340:                 index1_word = wordindex(index1);
 340:sieve_extend.c ****             } while (index1_word == index_word);
 13352              		.loc 1 340 29 is_stmt 0 view .LVU4683
 13353 46de 4889CB   		mov	rbx, rcx	# index1_word, index
 13354 46e1 48C1EB06 		shr	rbx, 6	# index1_word,
 13355              	.LVL925:
 341:sieve_extend.c ****             do {
GAS LISTING /tmp/cctyCFAS.s 			page 360


 13356              		.loc 1 341 21 is_stmt 1 view .LVU4684
 13357              	# sieve_extend.c:341:             } while (index1_word == index_word);
 341:sieve_extend.c ****             do {
 13358              		.loc 1 341 13 is_stmt 0 view .LVU4685
 13359 46e5 4939DE   		cmp	r14, rbx	# index1_word, index1_word
 13360 46e8 0F843CFF 		je	.L767	#,
 13360      FFFF
 13361 46ee 6690     		.p2align 4,,10
 13362              		.p2align 3
 13363              	.L768:
 342:sieve_extend.c ****                 mask |= markmask(index2);
 13364              		.loc 1 342 13 is_stmt 1 view .LVU4686
 343:sieve_extend.c ****                 index2 += step2;
 13365              		.loc 1 343 17 view .LVU4687
 13366              	# sieve_extend.c:343:                 mask |= markmask(index2);
 343:sieve_extend.c ****                 index2 += step2;
 13367              		.loc 1 343 25 is_stmt 0 view .LVU4688
 13368 46f0 C4C2F9F7 		shlx	rdx, r13, rax	# tmp922, tmp1041, index2
 13368      D5
 13369              	# sieve_extend.c:344:                 index2 += step2;
 344:sieve_extend.c ****                 index2_word = wordindex(index2);
 13370              		.loc 1 344 24 view .LVU4689
 13371 46f5 4C01D0   		add	rax, r10	# index2, step
 13372              	# sieve_extend.c:343:                 mask |= markmask(index2);
 343:sieve_extend.c ****                 index2 += step2;
 13373              		.loc 1 343 22 view .LVU4690
 13374 46f8 4809D7   		or	rdi, rdx	# mask, tmp922
 13375              	.LVL926:
 344:sieve_extend.c ****                 index2_word = wordindex(index2);
 13376              		.loc 1 344 17 is_stmt 1 view .LVU4691
 345:sieve_extend.c ****             } while (index2_word == index_word);
 13377              		.loc 1 345 17 view .LVU4692
 13378              	# sieve_extend.c:345:                 index2_word = wordindex(index2);
 345:sieve_extend.c ****             } while (index2_word == index_word);
 13379              		.loc 1 345 29 is_stmt 0 view .LVU4693
 13380 46fb 4889C2   		mov	rdx, rax	# index2_word, index2
 13381 46fe 48C1EA06 		shr	rdx, 6	# index2_word,
 13382              	.LVL927:
 346:sieve_extend.c ****             bitarray[index_word] |= mask;
 13383              		.loc 1 346 21 is_stmt 1 view .LVU4694
 13384              	# sieve_extend.c:346:             } while (index2_word == index_word);
 346:sieve_extend.c ****             bitarray[index_word] |= mask;
 13385              		.loc 1 346 13 is_stmt 0 view .LVU4695
 13386 4702 4939D6   		cmp	r14, rdx	# index1_word, index2_word
 13387 4705 0F85AD00 		jne	.L1361	#,
 13387      0000
 342:sieve_extend.c ****                 mask |= markmask(index2);
 13388              		.loc 1 342 13 is_stmt 1 view .LVU4696
 343:sieve_extend.c ****                 index2 += step2;
 13389              		.loc 1 343 17 view .LVU4697
 13390              	# sieve_extend.c:343:                 mask |= markmask(index2);
 343:sieve_extend.c ****                 index2 += step2;
 13391              		.loc 1 343 25 is_stmt 0 view .LVU4698
 13392 470b C4C2F9F7 		shlx	rdx, r13, rax	# tmp1321, tmp1041, index2
 13392      D5
 13393              	.LVL928:
 13394              	# sieve_extend.c:344:                 index2 += step2;
GAS LISTING /tmp/cctyCFAS.s 			page 361


 344:sieve_extend.c ****                 index2_word = wordindex(index2);
 13395              		.loc 1 344 24 view .LVU4699
 13396 4710 4C01D0   		add	rax, r10	# index2, step
 13397              	.LVL929:
 13398              	# sieve_extend.c:343:                 mask |= markmask(index2);
 343:sieve_extend.c ****                 index2 += step2;
 13399              		.loc 1 343 22 view .LVU4700
 13400 4713 4809D7   		or	rdi, rdx	# mask, tmp1321
 13401              	.LVL930:
 344:sieve_extend.c ****                 index2_word = wordindex(index2);
 13402              		.loc 1 344 17 is_stmt 1 view .LVU4701
 345:sieve_extend.c ****             } while (index2_word == index_word);
 13403              		.loc 1 345 17 view .LVU4702
 13404              	# sieve_extend.c:345:                 index2_word = wordindex(index2);
 345:sieve_extend.c ****             } while (index2_word == index_word);
 13405              		.loc 1 345 29 is_stmt 0 view .LVU4703
 13406 4716 4889C2   		mov	rdx, rax	# index2_word, index2
 13407 4719 48C1EA06 		shr	rdx, 6	# index2_word,
 13408              	.LVL931:
 346:sieve_extend.c ****             bitarray[index_word] |= mask;
 13409              		.loc 1 346 21 is_stmt 1 view .LVU4704
 13410              	# sieve_extend.c:346:             } while (index2_word == index_word);
 346:sieve_extend.c ****             bitarray[index_word] |= mask;
 13411              		.loc 1 346 13 is_stmt 0 view .LVU4705
 13412 471d 4939D6   		cmp	r14, rdx	# index1_word, index2_word
 13413 4720 0F859200 		jne	.L1361	#,
 13413      0000
 342:sieve_extend.c ****                 mask |= markmask(index2);
 13414              		.loc 1 342 13 is_stmt 1 view .LVU4706
 343:sieve_extend.c ****                 index2 += step2;
 13415              		.loc 1 343 17 view .LVU4707
 13416              	# sieve_extend.c:343:                 mask |= markmask(index2);
 343:sieve_extend.c ****                 index2 += step2;
 13417              		.loc 1 343 25 is_stmt 0 view .LVU4708
 13418 4726 C4C2F9F7 		shlx	rdx, r13, rax	# tmp1322, tmp1041, index2
 13418      D5
 13419              	.LVL932:
 13420              	# sieve_extend.c:344:                 index2 += step2;
 344:sieve_extend.c ****                 index2_word = wordindex(index2);
 13421              		.loc 1 344 24 view .LVU4709
 13422 472b 4C01D0   		add	rax, r10	# index2, step
 13423              	.LVL933:
 13424              	# sieve_extend.c:343:                 mask |= markmask(index2);
 343:sieve_extend.c ****                 index2 += step2;
 13425              		.loc 1 343 22 view .LVU4710
 13426 472e 4809D7   		or	rdi, rdx	# mask, tmp1322
 13427              	.LVL934:
 344:sieve_extend.c ****                 index2_word = wordindex(index2);
 13428              		.loc 1 344 17 is_stmt 1 view .LVU4711
 345:sieve_extend.c ****             } while (index2_word == index_word);
 13429              		.loc 1 345 17 view .LVU4712
 13430              	# sieve_extend.c:345:                 index2_word = wordindex(index2);
 345:sieve_extend.c ****             } while (index2_word == index_word);
 13431              		.loc 1 345 29 is_stmt 0 view .LVU4713
 13432 4731 4889C2   		mov	rdx, rax	# index2_word, index2
 13433 4734 48C1EA06 		shr	rdx, 6	# index2_word,
 13434              	.LVL935:
GAS LISTING /tmp/cctyCFAS.s 			page 362


 346:sieve_extend.c ****             bitarray[index_word] |= mask;
 13435              		.loc 1 346 21 is_stmt 1 view .LVU4714
 13436              	# sieve_extend.c:346:             } while (index2_word == index_word);
 346:sieve_extend.c ****             bitarray[index_word] |= mask;
 13437              		.loc 1 346 13 is_stmt 0 view .LVU4715
 13438 4738 4939D6   		cmp	r14, rdx	# index1_word, index2_word
 13439 473b 757B     		jne	.L1361	#,
 342:sieve_extend.c ****                 mask |= markmask(index2);
 13440              		.loc 1 342 13 is_stmt 1 view .LVU4716
 343:sieve_extend.c ****                 index2 += step2;
 13441              		.loc 1 343 17 view .LVU4717
 13442              	# sieve_extend.c:343:                 mask |= markmask(index2);
 343:sieve_extend.c ****                 index2 += step2;
 13443              		.loc 1 343 25 is_stmt 0 view .LVU4718
 13444 473d C4C2F9F7 		shlx	rdx, r13, rax	# tmp1323, tmp1041, index2
 13444      D5
 13445              	.LVL936:
 13446              	# sieve_extend.c:344:                 index2 += step2;
 344:sieve_extend.c ****                 index2_word = wordindex(index2);
 13447              		.loc 1 344 24 view .LVU4719
 13448 4742 4C01D0   		add	rax, r10	# index2, step
 13449              	.LVL937:
 13450              	# sieve_extend.c:343:                 mask |= markmask(index2);
 343:sieve_extend.c ****                 index2 += step2;
 13451              		.loc 1 343 22 view .LVU4720
 13452 4745 4809D7   		or	rdi, rdx	# mask, tmp1323
 13453              	.LVL938:
 344:sieve_extend.c ****                 index2_word = wordindex(index2);
 13454              		.loc 1 344 17 is_stmt 1 view .LVU4721
 345:sieve_extend.c ****             } while (index2_word == index_word);
 13455              		.loc 1 345 17 view .LVU4722
 13456              	# sieve_extend.c:345:                 index2_word = wordindex(index2);
 345:sieve_extend.c ****             } while (index2_word == index_word);
 13457              		.loc 1 345 29 is_stmt 0 view .LVU4723
 13458 4748 4889C2   		mov	rdx, rax	# index2_word, index2
 13459 474b 48C1EA06 		shr	rdx, 6	# index2_word,
 13460              	.LVL939:
 346:sieve_extend.c ****             bitarray[index_word] |= mask;
 13461              		.loc 1 346 21 is_stmt 1 view .LVU4724
 13462              	# sieve_extend.c:346:             } while (index2_word == index_word);
 346:sieve_extend.c ****             bitarray[index_word] |= mask;
 13463              		.loc 1 346 13 is_stmt 0 view .LVU4725
 13464 474f 4939D6   		cmp	r14, rdx	# index1_word, index2_word
 13465 4752 7564     		jne	.L1361	#,
 342:sieve_extend.c ****                 mask |= markmask(index2);
 13466              		.loc 1 342 13 is_stmt 1 view .LVU4726
 343:sieve_extend.c ****                 index2 += step2;
 13467              		.loc 1 343 17 view .LVU4727
 13468              	# sieve_extend.c:343:                 mask |= markmask(index2);
 343:sieve_extend.c ****                 index2 += step2;
 13469              		.loc 1 343 25 is_stmt 0 view .LVU4728
 13470 4754 C4C2F9F7 		shlx	rdx, r13, rax	# tmp1324, tmp1041, index2
 13470      D5
 13471              	.LVL940:
 13472              	# sieve_extend.c:344:                 index2 += step2;
 344:sieve_extend.c ****                 index2_word = wordindex(index2);
 13473              		.loc 1 344 24 view .LVU4729
GAS LISTING /tmp/cctyCFAS.s 			page 363


 13474 4759 4C01D0   		add	rax, r10	# index2, step
 13475              	.LVL941:
 13476              	# sieve_extend.c:343:                 mask |= markmask(index2);
 343:sieve_extend.c ****                 index2 += step2;
 13477              		.loc 1 343 22 view .LVU4730
 13478 475c 4809D7   		or	rdi, rdx	# mask, tmp1324
 13479              	.LVL942:
 344:sieve_extend.c ****                 index2_word = wordindex(index2);
 13480              		.loc 1 344 17 is_stmt 1 view .LVU4731
 345:sieve_extend.c ****             } while (index2_word == index_word);
 13481              		.loc 1 345 17 view .LVU4732
 13482              	# sieve_extend.c:345:                 index2_word = wordindex(index2);
 345:sieve_extend.c ****             } while (index2_word == index_word);
 13483              		.loc 1 345 29 is_stmt 0 view .LVU4733
 13484 475f 4889C2   		mov	rdx, rax	# index2_word, index2
 13485 4762 48C1EA06 		shr	rdx, 6	# index2_word,
 13486              	.LVL943:
 346:sieve_extend.c ****             bitarray[index_word] |= mask;
 13487              		.loc 1 346 21 is_stmt 1 view .LVU4734
 13488              	# sieve_extend.c:346:             } while (index2_word == index_word);
 346:sieve_extend.c ****             bitarray[index_word] |= mask;
 13489              		.loc 1 346 13 is_stmt 0 view .LVU4735
 13490 4766 4939D6   		cmp	r14, rdx	# index1_word, index2_word
 13491 4769 754D     		jne	.L1361	#,
 342:sieve_extend.c ****                 mask |= markmask(index2);
 13492              		.loc 1 342 13 is_stmt 1 view .LVU4736
 343:sieve_extend.c ****                 index2 += step2;
 13493              		.loc 1 343 17 view .LVU4737
 13494              	# sieve_extend.c:343:                 mask |= markmask(index2);
 343:sieve_extend.c ****                 index2 += step2;
 13495              		.loc 1 343 25 is_stmt 0 view .LVU4738
 13496 476b C4C2F9F7 		shlx	rdx, r13, rax	# tmp1325, tmp1041, index2
 13496      D5
 13497              	.LVL944:
 13498              	# sieve_extend.c:344:                 index2 += step2;
 344:sieve_extend.c ****                 index2_word = wordindex(index2);
 13499              		.loc 1 344 24 view .LVU4739
 13500 4770 4C01D0   		add	rax, r10	# index2, step
 13501              	.LVL945:
 13502              	# sieve_extend.c:343:                 mask |= markmask(index2);
 343:sieve_extend.c ****                 index2 += step2;
 13503              		.loc 1 343 22 view .LVU4740
 13504 4773 4809D7   		or	rdi, rdx	# mask, tmp1325
 13505              	.LVL946:
 344:sieve_extend.c ****                 index2_word = wordindex(index2);
 13506              		.loc 1 344 17 is_stmt 1 view .LVU4741
 345:sieve_extend.c ****             } while (index2_word == index_word);
 13507              		.loc 1 345 17 view .LVU4742
 13508              	# sieve_extend.c:345:                 index2_word = wordindex(index2);
 345:sieve_extend.c ****             } while (index2_word == index_word);
 13509              		.loc 1 345 29 is_stmt 0 view .LVU4743
 13510 4776 4889C2   		mov	rdx, rax	# index2_word, index2
 13511 4779 48C1EA06 		shr	rdx, 6	# index2_word,
 13512              	.LVL947:
 346:sieve_extend.c ****             bitarray[index_word] |= mask;
 13513              		.loc 1 346 21 is_stmt 1 view .LVU4744
 13514              	# sieve_extend.c:346:             } while (index2_word == index_word);
GAS LISTING /tmp/cctyCFAS.s 			page 364


 346:sieve_extend.c ****             bitarray[index_word] |= mask;
 13515              		.loc 1 346 13 is_stmt 0 view .LVU4745
 13516 477d 4939D6   		cmp	r14, rdx	# index1_word, index2_word
 13517 4780 7536     		jne	.L1361	#,
 342:sieve_extend.c ****                 mask |= markmask(index2);
 13518              		.loc 1 342 13 is_stmt 1 view .LVU4746
 343:sieve_extend.c ****                 index2 += step2;
 13519              		.loc 1 343 17 view .LVU4747
 13520              	# sieve_extend.c:343:                 mask |= markmask(index2);
 343:sieve_extend.c ****                 index2 += step2;
 13521              		.loc 1 343 25 is_stmt 0 view .LVU4748
 13522 4782 C4C2F9F7 		shlx	rdx, r13, rax	# tmp1326, tmp1041, index2
 13522      D5
 13523              	.LVL948:
 13524              	# sieve_extend.c:344:                 index2 += step2;
 344:sieve_extend.c ****                 index2_word = wordindex(index2);
 13525              		.loc 1 344 24 view .LVU4749
 13526 4787 4C01D0   		add	rax, r10	# index2, step
 13527              	.LVL949:
 13528              	# sieve_extend.c:343:                 mask |= markmask(index2);
 343:sieve_extend.c ****                 index2 += step2;
 13529              		.loc 1 343 22 view .LVU4750
 13530 478a 4809D7   		or	rdi, rdx	# mask, tmp1326
 13531              	.LVL950:
 344:sieve_extend.c ****                 index2_word = wordindex(index2);
 13532              		.loc 1 344 17 is_stmt 1 view .LVU4751
 345:sieve_extend.c ****             } while (index2_word == index_word);
 13533              		.loc 1 345 17 view .LVU4752
 13534              	# sieve_extend.c:345:                 index2_word = wordindex(index2);
 345:sieve_extend.c ****             } while (index2_word == index_word);
 13535              		.loc 1 345 29 is_stmt 0 view .LVU4753
 13536 478d 4889C2   		mov	rdx, rax	# index2_word, index2
 13537 4790 48C1EA06 		shr	rdx, 6	# index2_word,
 13538              	.LVL951:
 346:sieve_extend.c ****             bitarray[index_word] |= mask;
 13539              		.loc 1 346 21 is_stmt 1 view .LVU4754
 13540              	# sieve_extend.c:346:             } while (index2_word == index_word);
 346:sieve_extend.c ****             bitarray[index_word] |= mask;
 13541              		.loc 1 346 13 is_stmt 0 view .LVU4755
 13542 4794 4939D6   		cmp	r14, rdx	# index1_word, index2_word
 13543 4797 751F     		jne	.L1361	#,
 342:sieve_extend.c ****                 mask |= markmask(index2);
 13544              		.loc 1 342 13 is_stmt 1 view .LVU4756
 343:sieve_extend.c ****                 index2 += step2;
 13545              		.loc 1 343 17 view .LVU4757
 13546              	# sieve_extend.c:343:                 mask |= markmask(index2);
 343:sieve_extend.c ****                 index2 += step2;
 13547              		.loc 1 343 25 is_stmt 0 view .LVU4758
 13548 4799 C4C2F9F7 		shlx	rdx, r13, rax	# tmp1327, tmp1041, index2
 13548      D5
 13549              	.LVL952:
 13550              	# sieve_extend.c:344:                 index2 += step2;
 344:sieve_extend.c ****                 index2_word = wordindex(index2);
 13551              		.loc 1 344 24 view .LVU4759
 13552 479e 4C01D0   		add	rax, r10	# index2, step
 13553              	.LVL953:
 13554              	# sieve_extend.c:343:                 mask |= markmask(index2);
GAS LISTING /tmp/cctyCFAS.s 			page 365


 343:sieve_extend.c ****                 index2 += step2;
 13555              		.loc 1 343 22 view .LVU4760
 13556 47a1 4809D7   		or	rdi, rdx	# mask, tmp1327
 13557              	.LVL954:
 344:sieve_extend.c ****                 index2_word = wordindex(index2);
 13558              		.loc 1 344 17 is_stmt 1 view .LVU4761
 345:sieve_extend.c ****             } while (index2_word == index_word);
 13559              		.loc 1 345 17 view .LVU4762
 13560              	# sieve_extend.c:345:                 index2_word = wordindex(index2);
 345:sieve_extend.c ****             } while (index2_word == index_word);
 13561              		.loc 1 345 29 is_stmt 0 view .LVU4763
 13562 47a4 4889C2   		mov	rdx, rax	# index2_word, index2
 13563 47a7 48C1EA06 		shr	rdx, 6	# index2_word,
 13564              	.LVL955:
 346:sieve_extend.c ****             bitarray[index_word] |= mask;
 13565              		.loc 1 346 21 is_stmt 1 view .LVU4764
 13566              	# sieve_extend.c:346:             } while (index2_word == index_word);
 346:sieve_extend.c ****             bitarray[index_word] |= mask;
 13567              		.loc 1 346 13 is_stmt 0 view .LVU4765
 13568 47ab 4939D6   		cmp	r14, rdx	# index1_word, index2_word
 13569 47ae 0F843CFF 		je	.L768	#,
 13569      FFFF
 13570              		.p2align 4,,10
 13571 47b4 0F1F4000 		.p2align 3
 13572              	.L1361:
 347:sieve_extend.c ****         }
 13573              		.loc 1 347 13 is_stmt 1 view .LVU4766
 13574              	# sieve_extend.c:347:             bitarray[index_word] |= mask;
 347:sieve_extend.c ****         }
 13575              		.loc 1 347 34 is_stmt 0 view .LVU4767
 13576 47b8 4B093CF4 		or	QWORD PTR [r12+r14*8], rdi	# *_677, mask
 13577              	# sieve_extend.c:340:                 index1_word = wordindex(index1);
 340:sieve_extend.c ****             } while (index1_word == index_word);
 13578              		.loc 1 340 29 view .LVU4768
 13579 47bc 4989DE   		mov	r14, rbx	# index1_word, index1_word
 13580              	.LVL956:
 340:sieve_extend.c ****             } while (index1_word == index_word);
 13581              		.loc 1 340 29 view .LVU4769
 13582              	.LBE593:
 351:sieve_extend.c ****             while (index1 <= range_stop) {
 13583              		.loc 1 351 9 is_stmt 1 view .LVU4770
 13584              	# sieve_extend.c:351:         if (index2 > range_stop) {
 351:sieve_extend.c ****             while (index1 <= range_stop) {
 13585              		.loc 1 351 12 is_stmt 0 view .LVU4771
 13586 47bf 4939C7   		cmp	r15, rax	# block_stop, index2
 13587 47c2 0F838AFC 		jnb	.L769	#,
 13587      FFFF
 13588              	.LVL957:
 13589 47c8 0F1F8400 		.p2align 4,,10
 13589      00000000 
 13590              		.p2align 3
 13591              	.L1591:
 352:sieve_extend.c ****                 bitarray[wordindex(index1)] |= markmask(index1);
 13592              		.loc 1 352 19 is_stmt 1 view .LVU4772
 13593 47d0 4939CF   		cmp	r15, rcx	# block_stop, index
 13594 47d3 0F82CF00 		jb	.L1568	#,
 13594      0000
GAS LISTING /tmp/cctyCFAS.s 			page 366


 13595              	.LVL958:
 13596              	.L771:
 353:sieve_extend.c ****                 index1 += step1;
 13597              		.loc 1 353 17 view .LVU4773
 13598              	# sieve_extend.c:353:                 bitarray[wordindex(index1)] |= markmask(index1);
 353:sieve_extend.c ****                 index1 += step1;
 13599              		.loc 1 353 45 is_stmt 0 view .LVU4774
 13600 47d9 4889C8   		mov	rax, rcx	# tmp925, index
 13601              	# sieve_extend.c:353:                 bitarray[wordindex(index1)] |= markmask(index1);
 353:sieve_extend.c ****                 index1 += step1;
 13602              		.loc 1 353 48 view .LVU4775
 13603 47dc C442F1F7 		shlx	r10, r13, rcx	# tmp928, tmp1041, index
 13603      D5
 13604              	# sieve_extend.c:353:                 bitarray[wordindex(index1)] |= markmask(index1);
 353:sieve_extend.c ****                 index1 += step1;
 13605              		.loc 1 353 45 view .LVU4776
 13606 47e1 48C1E806 		shr	rax, 6	# tmp925,
 13607              	# sieve_extend.c:354:                 index1 += step1;
 354:sieve_extend.c ****             }
 13608              		.loc 1 354 24 view .LVU4777
 13609 47e5 4C01C9   		add	rcx, r9	# index, step
 13610              	# sieve_extend.c:353:                 bitarray[wordindex(index1)] |= markmask(index1);
 353:sieve_extend.c ****                 index1 += step1;
 13611              		.loc 1 353 45 view .LVU4778
 13612 47e8 4D0914C4 		or	QWORD PTR [r12+rax*8], r10	# *_685, tmp928
 354:sieve_extend.c ****             }
 13613              		.loc 1 354 17 is_stmt 1 view .LVU4779
 352:sieve_extend.c ****                 bitarray[wordindex(index1)] |= markmask(index1);
 13614              		.loc 1 352 19 view .LVU4780
 13615 47ec 4939CF   		cmp	r15, rcx	# block_stop, index
 13616 47ef 0F82B300 		jb	.L1568	#,
 13616      0000
 353:sieve_extend.c ****                 index1 += step1;
 13617              		.loc 1 353 17 view .LVU4781
 13618              	# sieve_extend.c:353:                 bitarray[wordindex(index1)] |= markmask(index1);
 353:sieve_extend.c ****                 index1 += step1;
 13619              		.loc 1 353 45 is_stmt 0 view .LVU4782
 13620 47f5 4889CF   		mov	rdi, rcx	# tmp1211, index
 13621              	# sieve_extend.c:353:                 bitarray[wordindex(index1)] |= markmask(index1);
 353:sieve_extend.c ****                 index1 += step1;
 13622              		.loc 1 353 48 view .LVU4783
 13623 47f8 C4C2F1F7 		shlx	rbx, r13, rcx	# tmp1214, tmp1041, index
 13623      DD
 13624              	# sieve_extend.c:353:                 bitarray[wordindex(index1)] |= markmask(index1);
 353:sieve_extend.c ****                 index1 += step1;
 13625              		.loc 1 353 45 view .LVU4784
 13626 47fd 48C1EF06 		shr	rdi, 6	# tmp1211,
 13627              	# sieve_extend.c:354:                 index1 += step1;
 354:sieve_extend.c ****             }
 13628              		.loc 1 354 24 view .LVU4785
 13629 4801 4C01C9   		add	rcx, r9	# index, step
 13630              	# sieve_extend.c:353:                 bitarray[wordindex(index1)] |= markmask(index1);
 353:sieve_extend.c ****                 index1 += step1;
 13631              		.loc 1 353 45 view .LVU4786
 13632 4804 49091CFC 		or	QWORD PTR [r12+rdi*8], rbx	# *_685, tmp1214
 354:sieve_extend.c ****             }
 13633              		.loc 1 354 17 is_stmt 1 view .LVU4787
GAS LISTING /tmp/cctyCFAS.s 			page 367


 352:sieve_extend.c ****                 bitarray[wordindex(index1)] |= markmask(index1);
 13634              		.loc 1 352 19 view .LVU4788
 13635 4808 4939CF   		cmp	r15, rcx	# block_stop, index
 13636 480b 0F829700 		jb	.L1568	#,
 13636      0000
 353:sieve_extend.c ****                 index1 += step1;
 13637              		.loc 1 353 17 view .LVU4789
 13638              	# sieve_extend.c:353:                 bitarray[wordindex(index1)] |= markmask(index1);
 353:sieve_extend.c ****                 index1 += step1;
 13639              		.loc 1 353 45 is_stmt 0 view .LVU4790
 13640 4811 4989CE   		mov	r14, rcx	# tmp1216, index
 13641              	# sieve_extend.c:353:                 bitarray[wordindex(index1)] |= markmask(index1);
 353:sieve_extend.c ****                 index1 += step1;
 13642              		.loc 1 353 48 view .LVU4791
 13643 4814 C4C2F1F7 		shlx	rdx, r13, rcx	# tmp1219, tmp1041, index
 13643      D5
 13644              	# sieve_extend.c:353:                 bitarray[wordindex(index1)] |= markmask(index1);
 353:sieve_extend.c ****                 index1 += step1;
 13645              		.loc 1 353 45 view .LVU4792
 13646 4819 49C1EE06 		shr	r14, 6	# tmp1216,
 13647              	# sieve_extend.c:354:                 index1 += step1;
 354:sieve_extend.c ****             }
 13648              		.loc 1 354 24 view .LVU4793
 13649 481d 4C01C9   		add	rcx, r9	# index, step
 13650              	# sieve_extend.c:353:                 bitarray[wordindex(index1)] |= markmask(index1);
 353:sieve_extend.c ****                 index1 += step1;
 13651              		.loc 1 353 45 view .LVU4794
 13652 4820 4B0914F4 		or	QWORD PTR [r12+r14*8], rdx	# *_685, tmp1219
 354:sieve_extend.c ****             }
 13653              		.loc 1 354 17 is_stmt 1 view .LVU4795
 352:sieve_extend.c ****                 bitarray[wordindex(index1)] |= markmask(index1);
 13654              		.loc 1 352 19 view .LVU4796
 13655 4824 4939CF   		cmp	r15, rcx	# block_stop, index
 13656 4827 727F     		jb	.L1568	#,
 353:sieve_extend.c ****                 index1 += step1;
 13657              		.loc 1 353 17 view .LVU4797
 13658              	# sieve_extend.c:353:                 bitarray[wordindex(index1)] |= markmask(index1);
 353:sieve_extend.c ****                 index1 += step1;
 13659              		.loc 1 353 45 is_stmt 0 view .LVU4798
 13660 4829 4889C8   		mov	rax, rcx	# tmp1221, index
 13661              	# sieve_extend.c:353:                 bitarray[wordindex(index1)] |= markmask(index1);
 353:sieve_extend.c ****                 index1 += step1;
 13662              		.loc 1 353 48 view .LVU4799
 13663 482c C442F1F7 		shlx	r10, r13, rcx	# tmp1224, tmp1041, index
 13663      D5
 13664              	# sieve_extend.c:353:                 bitarray[wordindex(index1)] |= markmask(index1);
 353:sieve_extend.c ****                 index1 += step1;
 13665              		.loc 1 353 45 view .LVU4800
 13666 4831 48C1E806 		shr	rax, 6	# tmp1221,
 13667              	# sieve_extend.c:354:                 index1 += step1;
 354:sieve_extend.c ****             }
 13668              		.loc 1 354 24 view .LVU4801
 13669 4835 4C01C9   		add	rcx, r9	# index, step
 13670              	# sieve_extend.c:353:                 bitarray[wordindex(index1)] |= markmask(index1);
 353:sieve_extend.c ****                 index1 += step1;
 13671              		.loc 1 353 45 view .LVU4802
 13672 4838 4D0914C4 		or	QWORD PTR [r12+rax*8], r10	# *_685, tmp1224
GAS LISTING /tmp/cctyCFAS.s 			page 368


 354:sieve_extend.c ****             }
 13673              		.loc 1 354 17 is_stmt 1 view .LVU4803
 352:sieve_extend.c ****                 bitarray[wordindex(index1)] |= markmask(index1);
 13674              		.loc 1 352 19 view .LVU4804
 13675 483c 4939CF   		cmp	r15, rcx	# block_stop, index
 13676 483f 7267     		jb	.L1568	#,
 353:sieve_extend.c ****                 index1 += step1;
 13677              		.loc 1 353 17 view .LVU4805
 13678              	# sieve_extend.c:353:                 bitarray[wordindex(index1)] |= markmask(index1);
 353:sieve_extend.c ****                 index1 += step1;
 13679              		.loc 1 353 45 is_stmt 0 view .LVU4806
 13680 4841 4889CF   		mov	rdi, rcx	# tmp1226, index
 13681              	# sieve_extend.c:353:                 bitarray[wordindex(index1)] |= markmask(index1);
 353:sieve_extend.c ****                 index1 += step1;
 13682              		.loc 1 353 48 view .LVU4807
 13683 4844 C4C2F1F7 		shlx	rbx, r13, rcx	# tmp1229, tmp1041, index
 13683      DD
 13684              	# sieve_extend.c:353:                 bitarray[wordindex(index1)] |= markmask(index1);
 353:sieve_extend.c ****                 index1 += step1;
 13685              		.loc 1 353 45 view .LVU4808
 13686 4849 48C1EF06 		shr	rdi, 6	# tmp1226,
 13687              	# sieve_extend.c:354:                 index1 += step1;
 354:sieve_extend.c ****             }
 13688              		.loc 1 354 24 view .LVU4809
 13689 484d 4C01C9   		add	rcx, r9	# index, step
 13690              	# sieve_extend.c:353:                 bitarray[wordindex(index1)] |= markmask(index1);
 353:sieve_extend.c ****                 index1 += step1;
 13691              		.loc 1 353 45 view .LVU4810
 13692 4850 49091CFC 		or	QWORD PTR [r12+rdi*8], rbx	# *_685, tmp1229
 354:sieve_extend.c ****             }
 13693              		.loc 1 354 17 is_stmt 1 view .LVU4811
 352:sieve_extend.c ****                 bitarray[wordindex(index1)] |= markmask(index1);
 13694              		.loc 1 352 19 view .LVU4812
 13695 4854 4939CF   		cmp	r15, rcx	# block_stop, index
 13696 4857 724F     		jb	.L1568	#,
 353:sieve_extend.c ****                 index1 += step1;
 13697              		.loc 1 353 17 view .LVU4813
 13698              	# sieve_extend.c:353:                 bitarray[wordindex(index1)] |= markmask(index1);
 353:sieve_extend.c ****                 index1 += step1;
 13699              		.loc 1 353 45 is_stmt 0 view .LVU4814
 13700 4859 4989CE   		mov	r14, rcx	# tmp1231, index
 13701              	# sieve_extend.c:353:                 bitarray[wordindex(index1)] |= markmask(index1);
 353:sieve_extend.c ****                 index1 += step1;
 13702              		.loc 1 353 48 view .LVU4815
 13703 485c C4C2F1F7 		shlx	rdx, r13, rcx	# tmp1234, tmp1041, index
 13703      D5
 13704              	# sieve_extend.c:353:                 bitarray[wordindex(index1)] |= markmask(index1);
 353:sieve_extend.c ****                 index1 += step1;
 13705              		.loc 1 353 45 view .LVU4816
 13706 4861 49C1EE06 		shr	r14, 6	# tmp1231,
 13707              	# sieve_extend.c:354:                 index1 += step1;
 354:sieve_extend.c ****             }
 13708              		.loc 1 354 24 view .LVU4817
 13709 4865 4C01C9   		add	rcx, r9	# index, step
 13710              	# sieve_extend.c:353:                 bitarray[wordindex(index1)] |= markmask(index1);
 353:sieve_extend.c ****                 index1 += step1;
 13711              		.loc 1 353 45 view .LVU4818
GAS LISTING /tmp/cctyCFAS.s 			page 369


 13712 4868 4B0914F4 		or	QWORD PTR [r12+r14*8], rdx	# *_685, tmp1234
 354:sieve_extend.c ****             }
 13713              		.loc 1 354 17 is_stmt 1 view .LVU4819
 352:sieve_extend.c ****                 bitarray[wordindex(index1)] |= markmask(index1);
 13714              		.loc 1 352 19 view .LVU4820
 13715 486c 4939CF   		cmp	r15, rcx	# block_stop, index
 13716 486f 7237     		jb	.L1568	#,
 353:sieve_extend.c ****                 index1 += step1;
 13717              		.loc 1 353 17 view .LVU4821
 13718              	# sieve_extend.c:353:                 bitarray[wordindex(index1)] |= markmask(index1);
 353:sieve_extend.c ****                 index1 += step1;
 13719              		.loc 1 353 45 is_stmt 0 view .LVU4822
 13720 4871 4889C8   		mov	rax, rcx	# tmp1236, index
 13721              	# sieve_extend.c:353:                 bitarray[wordindex(index1)] |= markmask(index1);
 353:sieve_extend.c ****                 index1 += step1;
 13722              		.loc 1 353 48 view .LVU4823
 13723 4874 C442F1F7 		shlx	r10, r13, rcx	# tmp1239, tmp1041, index
 13723      D5
 13724              	# sieve_extend.c:353:                 bitarray[wordindex(index1)] |= markmask(index1);
 353:sieve_extend.c ****                 index1 += step1;
 13725              		.loc 1 353 45 view .LVU4824
 13726 4879 48C1E806 		shr	rax, 6	# tmp1236,
 13727              	# sieve_extend.c:354:                 index1 += step1;
 354:sieve_extend.c ****             }
 13728              		.loc 1 354 24 view .LVU4825
 13729 487d 4C01C9   		add	rcx, r9	# index, step
 13730              	# sieve_extend.c:353:                 bitarray[wordindex(index1)] |= markmask(index1);
 353:sieve_extend.c ****                 index1 += step1;
 13731              		.loc 1 353 45 view .LVU4826
 13732 4880 4D0914C4 		or	QWORD PTR [r12+rax*8], r10	# *_685, tmp1239
 354:sieve_extend.c ****             }
 13733              		.loc 1 354 17 is_stmt 1 view .LVU4827
 352:sieve_extend.c ****                 bitarray[wordindex(index1)] |= markmask(index1);
 13734              		.loc 1 352 19 view .LVU4828
 13735 4884 4939CF   		cmp	r15, rcx	# block_stop, index
 13736 4887 721F     		jb	.L1568	#,
 353:sieve_extend.c ****                 index1 += step1;
 13737              		.loc 1 353 17 view .LVU4829
 13738              	# sieve_extend.c:353:                 bitarray[wordindex(index1)] |= markmask(index1);
 353:sieve_extend.c ****                 index1 += step1;
 13739              		.loc 1 353 45 is_stmt 0 view .LVU4830
 13740 4889 4889CF   		mov	rdi, rcx	# tmp1241, index
 13741              	# sieve_extend.c:353:                 bitarray[wordindex(index1)] |= markmask(index1);
 353:sieve_extend.c ****                 index1 += step1;
 13742              		.loc 1 353 48 view .LVU4831
 13743 488c C4C2F1F7 		shlx	rbx, r13, rcx	# tmp1244, tmp1041, index
 13743      DD
 13744              	# sieve_extend.c:353:                 bitarray[wordindex(index1)] |= markmask(index1);
 353:sieve_extend.c ****                 index1 += step1;
 13745              		.loc 1 353 45 view .LVU4832
 13746 4891 48C1EF06 		shr	rdi, 6	# tmp1241,
 13747              	# sieve_extend.c:354:                 index1 += step1;
 354:sieve_extend.c ****             }
 13748              		.loc 1 354 24 view .LVU4833
 13749 4895 4C01C9   		add	rcx, r9	# index, step
 13750              	# sieve_extend.c:353:                 bitarray[wordindex(index1)] |= markmask(index1);
 353:sieve_extend.c ****                 index1 += step1;
GAS LISTING /tmp/cctyCFAS.s 			page 370


 13751              		.loc 1 353 45 view .LVU4834
 13752 4898 49091CFC 		or	QWORD PTR [r12+rdi*8], rbx	# *_685, tmp1244
 354:sieve_extend.c ****             }
 13753              		.loc 1 354 17 is_stmt 1 view .LVU4835
 352:sieve_extend.c ****                 bitarray[wordindex(index1)] |= markmask(index1);
 13754              		.loc 1 352 19 view .LVU4836
 13755 489c 4939CF   		cmp	r15, rcx	# block_stop, index
 13756 489f 0F8334FF 		jnb	.L771	#,
 13756      FFFF
 13757              	.LVL959:
 13758              		.p2align 4,,10
 13759 48a5 0F1F00   		.p2align 3
 13760              	.L1568:
 352:sieve_extend.c ****                 bitarray[wordindex(index1)] |= markmask(index1);
 13761              		.loc 1 352 19 is_stmt 0 view .LVU4837
 13762              	.LBE594:
 13763              	.LBE596:
 13764              	.LBB597:
 13765              	.LBB598:
 124:sieve_extend.c ****     return index;
 13766              		.loc 1 124 11 is_stmt 1 view .LVU4838
 13767              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13768              		.loc 1 124 21 is_stmt 0 view .LVU4839
 13769 48a8 4989F1   		mov	r9, rsi	# tmp1207, index
 13770 48ab 49C1E906 		shr	r9, 6	# tmp1207,
 13771              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13772              		.loc 1 124 12 view .LVU4840
 13773 48af 4B8B0CCC 		mov	rcx, QWORD PTR [r12+r9*8]	# *_459,* pretmp_1655
 13774              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13775              		.loc 1 124 11 view .LVU4841
 13776 48b3 480FA3F1 		bt	rcx, rsi	# *_459, index
 13777 48b7 0F832B05 		jnc	.L765	#,
 13777      0000
 124:sieve_extend.c ****     return index;
 13778              		.loc 1 124 58 is_stmt 1 view .LVU4842
 13779              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13780              		.loc 1 124 63 is_stmt 0 view .LVU4843
 13781 48bd 4C8D7601 		lea	r14, 1[rsi]	# tmp1049,
 13782              	.LVL960:
 13783              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13784              		.loc 1 124 21 view .LVU4844
 13785 48c1 4C89F2   		mov	rdx, r14	# tmp948, index
 13786 48c4 48C1EA06 		shr	rdx, 6	# tmp948,
 13787              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13788              		.loc 1 124 12 view .LVU4845
 13789 48c8 498B04D4 		mov	rax, QWORD PTR [r12+rdx*8]	# *_459, *_459
 13790              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13791              		.loc 1 124 63 view .LVU4846
 13792 48cc 4C89F6   		mov	rsi, r14	# index, tmp1049
 124:sieve_extend.c ****     return index;
GAS LISTING /tmp/cctyCFAS.s 			page 371


 13793              		.loc 1 124 11 is_stmt 1 view .LVU4847
 13794 48cf 4C0FA3F0 		bt	rax, r14	# *_459, index
 13795 48d3 0F830F05 		jnc	.L765	#,
 13795      0000
 124:sieve_extend.c ****     return index;
 13796              		.loc 1 124 58 view .LVU4848
 13797              	.LVL961:
 13798              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13799              		.loc 1 124 63 is_stmt 0 view .LVU4849
 13800 48d9 48FFC6   		inc	rsi	# index
 13801              	.LVL962:
 124:sieve_extend.c ****     return index;
 13802              		.loc 1 124 11 is_stmt 1 view .LVU4850
 13803              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13804              		.loc 1 124 21 is_stmt 0 view .LVU4851
 13805 48dc 4989F2   		mov	r10, rsi	# tmp1183, index
 13806 48df 49C1EA06 		shr	r10, 6	# tmp1183,
 13807              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13808              		.loc 1 124 12 view .LVU4852
 13809 48e3 4B8B3CD4 		mov	rdi, QWORD PTR [r12+r10*8]	# *_459, *_459
 13810              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13811              		.loc 1 124 11 view .LVU4853
 13812 48e7 480FA3F7 		bt	rdi, rsi	# *_459, index
 13813 48eb 0F83F704 		jnc	.L765	#,
 13813      0000
 124:sieve_extend.c ****     return index;
 13814              		.loc 1 124 58 is_stmt 1 view .LVU4854
 13815              	.LVL963:
 13816              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13817              		.loc 1 124 63 is_stmt 0 view .LVU4855
 13818 48f1 498D7602 		lea	rsi, 2[r14]	# index,
 13819              	.LVL964:
 124:sieve_extend.c ****     return index;
 13820              		.loc 1 124 11 is_stmt 1 view .LVU4856
 13821              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13822              		.loc 1 124 21 is_stmt 0 view .LVU4857
 13823 48f5 4889F3   		mov	rbx, rsi	# tmp1187, index
 13824 48f8 48C1EB06 		shr	rbx, 6	# tmp1187,
 13825              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13826              		.loc 1 124 12 view .LVU4858
 13827 48fc 4D8B0CDC 		mov	r9, QWORD PTR [r12+rbx*8]	# *_459, *_459
 13828              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13829              		.loc 1 124 11 view .LVU4859
 13830 4900 490FA3F1 		bt	r9, rsi	# *_459, index
 13831 4904 0F83DE04 		jnc	.L765	#,
 13831      0000
 124:sieve_extend.c ****     return index;
 13832              		.loc 1 124 58 is_stmt 1 view .LVU4860
 13833              	.LVL965:
GAS LISTING /tmp/cctyCFAS.s 			page 372


 13834              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13835              		.loc 1 124 63 is_stmt 0 view .LVU4861
 13836 490a 498D7603 		lea	rsi, 3[r14]	# index,
 13837              	.LVL966:
 124:sieve_extend.c ****     return index;
 13838              		.loc 1 124 11 is_stmt 1 view .LVU4862
 13839              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13840              		.loc 1 124 21 is_stmt 0 view .LVU4863
 13841 490e 4889F1   		mov	rcx, rsi	# tmp1191, index
 13842 4911 48C1E906 		shr	rcx, 6	# tmp1191,
 13843              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13844              		.loc 1 124 12 view .LVU4864
 13845 4915 498B14CC 		mov	rdx, QWORD PTR [r12+rcx*8]	# *_459, *_459
 13846              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13847              		.loc 1 124 11 view .LVU4865
 13848 4919 480FA3F2 		bt	rdx, rsi	# *_459, index
 13849 491d 0F83C504 		jnc	.L765	#,
 13849      0000
 124:sieve_extend.c ****     return index;
 13850              		.loc 1 124 58 is_stmt 1 view .LVU4866
 13851              	.LVL967:
 13852              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13853              		.loc 1 124 63 is_stmt 0 view .LVU4867
 13854 4923 498D7604 		lea	rsi, 4[r14]	# index,
 13855              	.LVL968:
 124:sieve_extend.c ****     return index;
 13856              		.loc 1 124 11 is_stmt 1 view .LVU4868
 13857              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13858              		.loc 1 124 21 is_stmt 0 view .LVU4869
 13859 4927 4889F0   		mov	rax, rsi	# tmp1195, index
 13860 492a 48C1E806 		shr	rax, 6	# tmp1195,
 13861              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13862              		.loc 1 124 12 view .LVU4870
 13863 492e 4D8B14C4 		mov	r10, QWORD PTR [r12+rax*8]	# *_459, *_459
 13864              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13865              		.loc 1 124 11 view .LVU4871
 13866 4932 490FA3F2 		bt	r10, rsi	# *_459, index
 13867 4936 0F83AC04 		jnc	.L765	#,
 13867      0000
 124:sieve_extend.c ****     return index;
 13868              		.loc 1 124 58 is_stmt 1 view .LVU4872
 13869              	.LVL969:
 13870              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13871              		.loc 1 124 63 is_stmt 0 view .LVU4873
 13872 493c 498D7605 		lea	rsi, 5[r14]	# index,
 13873              	.LVL970:
 124:sieve_extend.c ****     return index;
 13874              		.loc 1 124 11 is_stmt 1 view .LVU4874
GAS LISTING /tmp/cctyCFAS.s 			page 373


 13875              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13876              		.loc 1 124 21 is_stmt 0 view .LVU4875
 13877 4940 4889F7   		mov	rdi, rsi	# tmp1199, index
 13878 4943 48C1EF06 		shr	rdi, 6	# tmp1199,
 13879              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13880              		.loc 1 124 12 view .LVU4876
 13881 4947 498B1CFC 		mov	rbx, QWORD PTR [r12+rdi*8]	# *_459, *_459
 13882              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13883              		.loc 1 124 11 view .LVU4877
 13884 494b 480FA3F3 		bt	rbx, rsi	# *_459, index
 13885 494f 0F839304 		jnc	.L765	#,
 13885      0000
 124:sieve_extend.c ****     return index;
 13886              		.loc 1 124 58 is_stmt 1 view .LVU4878
 13887              	.LVL971:
 13888              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13889              		.loc 1 124 63 is_stmt 0 view .LVU4879
 13890 4955 498D7606 		lea	rsi, 6[r14]	# index,
 13891              	.LVL972:
 124:sieve_extend.c ****     return index;
 13892              		.loc 1 124 11 is_stmt 1 view .LVU4880
 13893              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13894              		.loc 1 124 21 is_stmt 0 view .LVU4881
 13895 4959 4989F1   		mov	r9, rsi	# tmp1203, index
 13896 495c 49C1E906 		shr	r9, 6	# tmp1203,
 13897              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13898              		.loc 1 124 12 view .LVU4882
 13899 4960 4B8B0CCC 		mov	rcx, QWORD PTR [r12+r9*8]	# *_459, *_459
 13900              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13901              		.loc 1 124 11 view .LVU4883
 13902 4964 480FA3F1 		bt	rcx, rsi	# *_459, index
 13903 4968 0F837A04 		jnc	.L765	#,
 13903      0000
 124:sieve_extend.c ****     return index;
 13904              		.loc 1 124 58 is_stmt 1 view .LVU4884
 13905              	.LVL973:
 13906              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13907              		.loc 1 124 63 is_stmt 0 view .LVU4885
 13908 496e 498D7607 		lea	rsi, 7[r14]	# index,
 13909              	.LVL974:
 124:sieve_extend.c ****     return index;
 13910              		.loc 1 124 63 view .LVU4886
 13911 4972 E931FFFF 		jmp	.L1568	#
 13911      FF
 13912              	.LVL975:
 13913 4977 660F1F84 		.p2align 4,,10
 13913      00000000 
 13913      00
 13914              		.p2align 3
GAS LISTING /tmp/cctyCFAS.s 			page 374


 13915              	.L787:
 124:sieve_extend.c ****     return index;
 13916              		.loc 1 124 63 view .LVU4887
 13917              	.LBE598:
 13918              	.LBE597:
 13919              	.LBB600:
 13920              	.LBB601:
 13921              	.LBB602:
 13922              	.LBB603:
 13923              	.LBB604:
 13924              	.LBB605:
 205:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 13925              		.loc 1 205 4 is_stmt 1 view .LVU4888
 206:sieve_extend.c ****        *index_ptr |= mask;
 13926              		.loc 1 206 4 view .LVU4889
 206:sieve_extend.c ****        *index_ptr |= mask;
 13927              		.loc 1 206 10 view .LVU4890
 13928 4980 4C39C0   		cmp	rax, r8	# index_ptr, range_stop_ptr
 13929 4983 735B     		jnb	.L789	#,
 13930              	.L790:
 207:sieve_extend.c ****        index_ptr+=step;
 13931              		.loc 1 207 8 view .LVU4891
 13932              	# sieve_extend.c:207:        *index_ptr |= mask;
 207:sieve_extend.c ****        index_ptr+=step;
 13933              		.loc 1 207 19 is_stmt 0 view .LVU4892
 13934 4985 480930   		or	QWORD PTR [rax], rsi	# MEM[base: index_ptr_978, offset: 0B], mask
 208:sieve_extend.c ****    }
 13935              		.loc 1 208 8 is_stmt 1 view .LVU4893
 13936              	# sieve_extend.c:208:        index_ptr+=step;
 208:sieve_extend.c ****    }
 13937              		.loc 1 208 17 is_stmt 0 view .LVU4894
 13938 4988 4801D0   		add	rax, rdx	# index_ptr, _775
 13939              	.LVL976:
 206:sieve_extend.c ****        *index_ptr |= mask;
 13940              		.loc 1 206 10 is_stmt 1 view .LVU4895
 13941 498b 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 13942 498e 7650     		jbe	.L789	#,
 207:sieve_extend.c ****        index_ptr+=step;
 13943              		.loc 1 207 8 view .LVU4896
 13944              	# sieve_extend.c:207:        *index_ptr |= mask;
 207:sieve_extend.c ****        index_ptr+=step;
 13945              		.loc 1 207 19 is_stmt 0 view .LVU4897
 13946 4990 480930   		or	QWORD PTR [rax], rsi	# MEM[base: index_ptr_978, offset: 0B], mask
 208:sieve_extend.c ****    }
 13947              		.loc 1 208 8 is_stmt 1 view .LVU4898
 13948              	# sieve_extend.c:208:        index_ptr+=step;
 208:sieve_extend.c ****    }
 13949              		.loc 1 208 17 is_stmt 0 view .LVU4899
 13950 4993 4801D0   		add	rax, rdx	# index_ptr, _775
 13951              	.LVL977:
 206:sieve_extend.c ****        *index_ptr |= mask;
 13952              		.loc 1 206 10 is_stmt 1 view .LVU4900
 13953 4996 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 13954 4999 7645     		jbe	.L789	#,
 207:sieve_extend.c ****        index_ptr+=step;
 13955              		.loc 1 207 8 view .LVU4901
 13956              	# sieve_extend.c:207:        *index_ptr |= mask;
GAS LISTING /tmp/cctyCFAS.s 			page 375


 207:sieve_extend.c ****        index_ptr+=step;
 13957              		.loc 1 207 19 is_stmt 0 view .LVU4902
 13958 499b 480930   		or	QWORD PTR [rax], rsi	# MEM[base: index_ptr_978, offset: 0B], mask
 208:sieve_extend.c ****    }
 13959              		.loc 1 208 8 is_stmt 1 view .LVU4903
 13960              	# sieve_extend.c:208:        index_ptr+=step;
 208:sieve_extend.c ****    }
 13961              		.loc 1 208 17 is_stmt 0 view .LVU4904
 13962 499e 4801D0   		add	rax, rdx	# index_ptr, _775
 13963              	.LVL978:
 206:sieve_extend.c ****        *index_ptr |= mask;
 13964              		.loc 1 206 10 is_stmt 1 view .LVU4905
 13965 49a1 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 13966 49a4 763A     		jbe	.L789	#,
 207:sieve_extend.c ****        index_ptr+=step;
 13967              		.loc 1 207 8 view .LVU4906
 13968              	# sieve_extend.c:207:        *index_ptr |= mask;
 207:sieve_extend.c ****        index_ptr+=step;
 13969              		.loc 1 207 19 is_stmt 0 view .LVU4907
 13970 49a6 480930   		or	QWORD PTR [rax], rsi	# MEM[base: index_ptr_978, offset: 0B], mask
 208:sieve_extend.c ****    }
 13971              		.loc 1 208 8 is_stmt 1 view .LVU4908
 13972              	# sieve_extend.c:208:        index_ptr+=step;
 208:sieve_extend.c ****    }
 13973              		.loc 1 208 17 is_stmt 0 view .LVU4909
 13974 49a9 4801D0   		add	rax, rdx	# index_ptr, _775
 13975              	.LVL979:
 206:sieve_extend.c ****        *index_ptr |= mask;
 13976              		.loc 1 206 10 is_stmt 1 view .LVU4910
 13977 49ac 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 13978 49af 762F     		jbe	.L789	#,
 207:sieve_extend.c ****        index_ptr+=step;
 13979              		.loc 1 207 8 view .LVU4911
 13980              	# sieve_extend.c:207:        *index_ptr |= mask;
 207:sieve_extend.c ****        index_ptr+=step;
 13981              		.loc 1 207 19 is_stmt 0 view .LVU4912
 13982 49b1 480930   		or	QWORD PTR [rax], rsi	# MEM[base: index_ptr_978, offset: 0B], mask
 208:sieve_extend.c ****    }
 13983              		.loc 1 208 8 is_stmt 1 view .LVU4913
 13984              	# sieve_extend.c:208:        index_ptr+=step;
 208:sieve_extend.c ****    }
 13985              		.loc 1 208 17 is_stmt 0 view .LVU4914
 13986 49b4 4801D0   		add	rax, rdx	# index_ptr, _775
 13987              	.LVL980:
 206:sieve_extend.c ****        *index_ptr |= mask;
 13988              		.loc 1 206 10 is_stmt 1 view .LVU4915
 13989 49b7 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 13990 49ba 7624     		jbe	.L789	#,
 207:sieve_extend.c ****        index_ptr+=step;
 13991              		.loc 1 207 8 view .LVU4916
 13992              	# sieve_extend.c:207:        *index_ptr |= mask;
 207:sieve_extend.c ****        index_ptr+=step;
 13993              		.loc 1 207 19 is_stmt 0 view .LVU4917
 13994 49bc 480930   		or	QWORD PTR [rax], rsi	# MEM[base: index_ptr_978, offset: 0B], mask
 208:sieve_extend.c ****    }
 13995              		.loc 1 208 8 is_stmt 1 view .LVU4918
 13996              	# sieve_extend.c:208:        index_ptr+=step;
GAS LISTING /tmp/cctyCFAS.s 			page 376


 208:sieve_extend.c ****    }
 13997              		.loc 1 208 17 is_stmt 0 view .LVU4919
 13998 49bf 4801D0   		add	rax, rdx	# index_ptr, _775
 13999              	.LVL981:
 206:sieve_extend.c ****        *index_ptr |= mask;
 14000              		.loc 1 206 10 is_stmt 1 view .LVU4920
 14001 49c2 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 14002 49c5 7619     		jbe	.L789	#,
 207:sieve_extend.c ****        index_ptr+=step;
 14003              		.loc 1 207 8 view .LVU4921
 14004              	# sieve_extend.c:207:        *index_ptr |= mask;
 207:sieve_extend.c ****        index_ptr+=step;
 14005              		.loc 1 207 19 is_stmt 0 view .LVU4922
 14006 49c7 480930   		or	QWORD PTR [rax], rsi	# MEM[base: index_ptr_978, offset: 0B], mask
 208:sieve_extend.c ****    }
 14007              		.loc 1 208 8 is_stmt 1 view .LVU4923
 14008              	# sieve_extend.c:208:        index_ptr+=step;
 208:sieve_extend.c ****    }
 14009              		.loc 1 208 17 is_stmt 0 view .LVU4924
 14010 49ca 4801D0   		add	rax, rdx	# index_ptr, _775
 14011              	.LVL982:
 206:sieve_extend.c ****        *index_ptr |= mask;
 14012              		.loc 1 206 10 is_stmt 1 view .LVU4925
 14013 49cd 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 14014 49d0 760E     		jbe	.L789	#,
 207:sieve_extend.c ****        index_ptr+=step;
 14015              		.loc 1 207 8 view .LVU4926
 14016              	# sieve_extend.c:207:        *index_ptr |= mask;
 207:sieve_extend.c ****        index_ptr+=step;
 14017              		.loc 1 207 19 is_stmt 0 view .LVU4927
 14018 49d2 480930   		or	QWORD PTR [rax], rsi	# MEM[base: index_ptr_978, offset: 0B], mask
 208:sieve_extend.c ****    }
 14019              		.loc 1 208 8 is_stmt 1 view .LVU4928
 14020              	# sieve_extend.c:208:        index_ptr+=step;
 208:sieve_extend.c ****    }
 14021              		.loc 1 208 17 is_stmt 0 view .LVU4929
 14022 49d5 4801D0   		add	rax, rdx	# index_ptr, _775
 14023              	.LVL983:
 206:sieve_extend.c ****        *index_ptr |= mask;
 14024              		.loc 1 206 10 is_stmt 1 view .LVU4930
 14025 49d8 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 14026 49db 77A8     		ja	.L790	#,
 14027 49dd 0F1F00   		.p2align 4,,10
 14028              		.p2align 3
 14029              	.L789:
 211:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 14030              		.loc 1 211 4 view .LVU4931
 14031              	# sieve_extend.c:211:    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range
 211:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 14032              		.loc 1 211 7 is_stmt 0 view .LVU4932
 14033 49e0 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 14034 49e3 0F84EF03 		je	.L1592	#,
 14034      0000
 14035              	.LVL984:
 14036              	.L791:
 211:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 14037              		.loc 1 211 7 view .LVU4933
GAS LISTING /tmp/cctyCFAS.s 			page 377


 14038              	.LBE605:
 14039              	.LBE604:
 14040              	.LBE603:
 389:sieve_extend.c ****         register bitword_t mask = markmask(index);
 14041              		.loc 1 389 78 is_stmt 1 view .LVU4934
 14042              	# sieve_extend.c:389:     for (register counter_t index = range_start; index <= range_stop_unique; 
 389:sieve_extend.c ****         register bitword_t mask = markmask(index);
 14043              		.loc 1 389 84 is_stmt 0 view .LVU4935
 14044 49e9 4C01D9   		add	rcx, r11	# index, step
 14045              	.LVL985:
 389:sieve_extend.c ****         register bitword_t mask = markmask(index);
 14046              		.loc 1 389 50 is_stmt 1 view .LVU4936
 14047              	# sieve_extend.c:389:     for (register counter_t index = range_start; index <= range_stop_unique; 
 389:sieve_extend.c ****         register bitword_t mask = markmask(index);
 14048              		.loc 1 389 5 is_stmt 0 view .LVU4937
 14049 49ec 4939CE   		cmp	r14, rcx	# tmp960, index
 14050 49ef 0F83DB00 		jnb	.L792	#,
 14050      0000
 14051              	.LVL986:
 14052              	.L793:
 389:sieve_extend.c ****         register bitword_t mask = markmask(index);
 14053              		.loc 1 389 5 view .LVU4938
 14054              	.LBE602:
 14055              	.LBE601:
 14056              	.LBE600:
 909:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 14057              		.loc 1 909 9 is_stmt 1 view .LVU4939
 14058              	.LBB620:
 14059              	.LBI620:
 102:sieve_extend.c ****     // #pragma ivdep
 14060              		.loc 1 102 25 view .LVU4940
 14061              	.LBB621:
 107:sieve_extend.c ****    bitshift_t index_bit  = bitindex_calc(index);
 14062              		.loc 1 107 4 view .LVU4941
 108:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 14063              		.loc 1 108 4 view .LVU4942
 14064              	# sieve_extend.c:107:    register counter_t index_word = wordindex(index);
 107:sieve_extend.c ****    bitshift_t index_bit  = bitindex_calc(index);
 14065              		.loc 1 107 23 is_stmt 0 view .LVU4943
 14066 49f5 4D89D6   		mov	r14, r10	# index_word, _491
 14067 49f8 49C1EE06 		shr	r14, 6	# index_word,
 14068              	# sieve_extend.c:109:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 109:sieve_extend.c ****    index += distance;
 14069              		.loc 1 109 89 view .LVU4944
 14070 49fc 4F8B0CF4 		mov	r9, QWORD PTR [r12+r14*8]	# *_735, *_735
 14071              	# sieve_extend.c:108:    bitshift_t index_bit  = bitindex_calc(index);
 108:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 14072              		.loc 1 108 15 view .LVU4945
 14073 4a00 4D89D3   		mov	r11, r10	# index_bit, _491
 14074              	.LVL987:
 108:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 14075              		.loc 1 108 15 view .LVU4946
 14076 4a03 4183E33F 		and	r11d, 63	# index_bit,
 14077              	.LVL988:
 109:sieve_extend.c ****    index += distance;
 14078              		.loc 1 109 4 is_stmt 1 view .LVU4947
 14079              	# sieve_extend.c:109:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
GAS LISTING /tmp/cctyCFAS.s 			page 378


 109:sieve_extend.c ****    index += distance;
 14080              		.loc 1 109 25 is_stmt 0 view .LVU4948
 14081 4a07 31DB     		xor	ebx, ebx	# distance
 14082              	# sieve_extend.c:109:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 109:sieve_extend.c ****    index += distance;
 14083              		.loc 1 109 89 view .LVU4949
 14084 4a09 C4C2A3F7 		shrx	rdx, r9, r11	# tmp963, *_735, index_bit
 14084      D1
 14085              	# sieve_extend.c:109:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 109:sieve_extend.c ****    index += distance;
 14086              		.loc 1 109 66 view .LVU4950
 14087 4a0e 48F7D2   		not	rdx	# tmp965
 14088              	# sieve_extend.c:109:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 109:sieve_extend.c ****    index += distance;
 14089              		.loc 1 109 25 view .LVU4951
 14090 4a11 F3480FBC 		tzcnt	rbx, rdx	# distance, tmp965
 14090      DA
 14091              	.LVL989:
 110:sieve_extend.c ****    distance += index_bit;
 14092              		.loc 1 110 4 is_stmt 1 view .LVU4952
 14093              	# sieve_extend.c:110:    index += distance;
 110:sieve_extend.c ****    distance += index_bit;
 14094              		.loc 1 110 10 is_stmt 0 view .LVU4953
 14095 4a16 498D341A 		lea	rsi, [r10+rbx]	# index,
 14096              	.LVL990:
 111:sieve_extend.c **** 
 14097              		.loc 1 111 4 is_stmt 1 view .LVU4954
 113:sieve_extend.c ****        index_word++;
 14098              		.loc 1 113 4 view .LVU4955
 113:sieve_extend.c ****        index_word++;
 14099              		.loc 1 113 10 view .LVU4956
 14100              	# sieve_extend.c:111:    distance += index_bit;
 111:sieve_extend.c **** 
 14101              		.loc 1 111 13 is_stmt 0 view .LVU4957
 14102 4a1a 4C01DB   		add	rbx, r11	# distance, index_bit
 14103              	.LVL991:
 14104              	# sieve_extend.c:109:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 109:sieve_extend.c ****    index += distance;
 14105              		.loc 1 109 76 view .LVU4958
 14106 4a1d 4A8D0CF5 		lea	rcx, 0[0+r14*8]	# _734,
 14106      00000000 
 14107              	# sieve_extend.c:113:    while (distance == WORD_SIZE_bitshift) { // to prevent a bug from optimzer
 113:sieve_extend.c ****        index_word++;
 14108              		.loc 1 113 10 view .LVU4959
 14109 4a25 4883FB40 		cmp	rbx, 64	# distance,
 14110 4a29 0F85E505 		jne	.L1593	#,
 14110      0000
 14111              	.LVL992:
 114:sieve_extend.c ****        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 14112              		.loc 1 114 8 is_stmt 1 view .LVU4960
 115:sieve_extend.c ****        index += distance;
 14113              		.loc 1 115 8 view .LVU4961
 14114              	# sieve_extend.c:115:        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 115:sieve_extend.c ****        index += distance;
 14115              		.loc 1 115 48 is_stmt 0 view .LVU4962
 14116 4a2f 4D8B540C 		mov	r10, QWORD PTR 8[r12+rcx]	# *_747, *_747
 14116      08
GAS LISTING /tmp/cctyCFAS.s 			page 379


 14117              	# sieve_extend.c:115:        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 115:sieve_extend.c ****        index += distance;
 14118              		.loc 1 115 17 view .LVU4963
 14119 4a34 31C0     		xor	eax, eax	# distance
 14120              	# sieve_extend.c:115:        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 115:sieve_extend.c ****        index += distance;
 14121              		.loc 1 115 48 view .LVU4964
 14122 4a36 49F7D2   		not	r10	# tmp984
 14123              	.LVL993:
 116:sieve_extend.c ****    }
 14124              		.loc 1 116 8 is_stmt 1 view .LVU4965
 14125              	# sieve_extend.c:115:        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 115:sieve_extend.c ****        index += distance;
 14126              		.loc 1 115 17 is_stmt 0 view .LVU4966
 14127 4a39 F3490FBC 		tzcnt	rax, r10	# distance, tmp984
 14127      C2
 14128              	.LVL994:
 14129              	# sieve_extend.c:116:        index += distance;
 116:sieve_extend.c ****    }
 14130              		.loc 1 116 14 view .LVU4967
 14131 4a3e 4801C6   		add	rsi, rax	# index, distance
 14132              	.LVL995:
 113:sieve_extend.c ****        index_word++;
 14133              		.loc 1 113 10 is_stmt 1 view .LVU4968
 119:sieve_extend.c **** }
 14134              		.loc 1 119 4 view .LVU4969
 119:sieve_extend.c **** }
 14135              		.loc 1 119 4 is_stmt 0 view .LVU4970
 14136              	.LBE621:
 14137              	.LBE620:
 910:sieve_extend.c ****     }
 14138              		.loc 1 910 9 is_stmt 1 view .LVU4971
 14139              	# sieve_extend.c:910:         start = prime * prime * 2 + prime * 2;
 910:sieve_extend.c ****     }
 14140              		.loc 1 910 35 is_stmt 0 view .LVU4972
 14141 4a41 4C8D5601 		lea	r10, 1[rsi]	# _491,
 14142              	# sieve_extend.c:910:         start = prime * prime * 2 + prime * 2;
 910:sieve_extend.c ****     }
 14143              		.loc 1 910 15 view .LVU4973
 14144 4a45 4C89D1   		mov	rcx, r10	# tmp989, _491
 14145 4a48 480FAFCE 		imul	rcx, rsi	# tmp989, index
 14146              	.LVL996:
 910:sieve_extend.c ****     }
 14147              		.loc 1 910 15 view .LVU4974
 14148 4a4c 4801C9   		add	rcx, rcx	# index
 14149              	.LVL997:
 904:sieve_extend.c ****         step  = prime * 2 + 1;
 14150              		.loc 1 904 11 is_stmt 1 view .LVU4975
 14151 4a4f 4939CF   		cmp	r15, rcx	# block_stop, index
 14152 4a52 0F82A0F7 		jb	.L1566	#,
 14152      FFFF
 14153              	.LVL998:
 14154              	.L801:
 905:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 14155              		.loc 1 905 9 view .LVU4976
 14156              	# sieve_extend.c:906:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 906:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
GAS LISTING /tmp/cctyCFAS.s 			page 380


 14157              		.loc 1 906 12 is_stmt 0 view .LVU4977
 14158 4a58 488B4424 		mov	rax, QWORD PTR 120[rsp]	# block_start, %sfp
 14158      78
 14159              	# sieve_extend.c:905:         step  = prime * 2 + 1;
 905:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 14160              		.loc 1 905 15 view .LVU4978
 14161 4a5d 4C8D5C36 		lea	r11, 1[rsi+rsi]	# step,
 14161      01
 14162              	.LVL999:
 906:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 14163              		.loc 1 906 9 is_stmt 1 view .LVU4979
 14164              	# sieve_extend.c:906:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 906:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 14165              		.loc 1 906 12 is_stmt 0 view .LVU4980
 14166 4a62 4939C2   		cmp	r10, rax	# _491, block_start
 14167 4a65 770F     		ja	.L779	#,
 906:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 14168              		.loc 1 906 41 is_stmt 1 view .LVU4981
 14169              	# sieve_extend.c:906:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 906:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 14170              		.loc 1 906 61 is_stmt 0 view .LVU4982
 14171 4a67 4801F0   		add	rax, rsi	# _473, index
 14172              	# sieve_extend.c:906:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 906:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 14173              		.loc 1 906 102 view .LVU4983
 14174 4a6a 31D2     		xor	edx, edx	# tmp957
 14175              	# sieve_extend.c:906:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 906:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 14176              		.loc 1 906 69 view .LVU4984
 14177 4a6c 488D0C30 		lea	rcx, [rax+rsi]	# tmp955,
 14178              	# sieve_extend.c:906:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 906:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 14179              		.loc 1 906 102 view .LVU4985
 14180 4a70 49F7F3   		div	r11	# step
 14181              	.LVL1000:
 14182              	# sieve_extend.c:906:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 906:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 14183              		.loc 1 906 47 view .LVU4986
 14184 4a73 4829D1   		sub	rcx, rdx	# index, tmp957
 14185              	.LVL1001:
 14186              	.L779:
 907:sieve_extend.c ****         setBitsTrue_largeRange(bitarray, start, step, block_stop);
 14187              		.loc 1 907 9 is_stmt 1 view .LVU4987
 14188              	# sieve_extend.c:907:         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 907:sieve_extend.c ****         setBitsTrue_largeRange(bitarray, start, step, block_stop);
 14189              		.loc 1 907 12 is_stmt 0 view .LVU4988
 14190 4a76 4D89DE   		mov	r14, r11	# tmp959, step
 14191 4a79 49C1E606 		sal	r14, 6	# tmp959,
 14192 4a7d 31FF     		xor	edi, edi	# _256
 14193 4a7f 4901CE   		add	r14, rcx	# tmp960, index
 14194 4a82 400F92C7 		setc	dil	#, _256
 14195 4a86 4D39F7   		cmp	r15, r14	# block_stop, tmp960
 14196 4a89 0F82B103 		jb	.L1569	#,
 14196      0000
 14197              	.LBB623:
 14198              	.LBB618:
 14199              	.LBB616:
GAS LISTING /tmp/cctyCFAS.s 			page 381


 389:sieve_extend.c ****         register bitword_t mask = markmask(index);
 14200              		.loc 1 389 50 is_stmt 1 view .LVU4989
 14201              	# sieve_extend.c:389:     for (register counter_t index = range_start; index <= range_stop_unique; 
 389:sieve_extend.c ****         register bitword_t mask = markmask(index);
 14202              		.loc 1 389 5 is_stmt 0 view .LVU4990
 14203 4a8f 4885FF   		test	rdi, rdi	# _256
 14204 4a92 0F855DFF 		jne	.L793	#,
 14204      FFFF
 14205              	.LBB614:
 14206              	.LBB610:
 14207              	.LBB606:
 14208              	# sieve_extend.c:188:    register bitword_t* __restrict fast_loop_ptr  = &bitarray[((range_stop_wor
 188:sieve_extend.c **** 
 14209              		.loc 1 188 107 view .LVU4991
 14210 4a98 488B7424 		mov	rsi, QWORD PTR 96[rsp]	# range_stop_word, %sfp
 14210      60
 14211              	# sieve_extend.c:188:    register bitword_t* __restrict fast_loop_ptr  = &bitarray[((range_stop_wor
 188:sieve_extend.c **** 
 14212              		.loc 1 188 84 view .LVU4992
 14213 4a9d 4F8D0C9B 		lea	r9, [r11+r11*4]	# tmp970,
 14214              	# sieve_extend.c:188:    register bitword_t* __restrict fast_loop_ptr  = &bitarray[((range_stop_wor
 188:sieve_extend.c **** 
 14215              		.loc 1 188 107 view .LVU4993
 14216 4aa1 4889F3   		mov	rbx, rsi	# tmp972, range_stop_word
 14217 4aa4 4C29CB   		sub	rbx, r9	# tmp972, tmp970
 14218 4aa7 498D1CDC 		lea	rbx, [r12+rbx*8]	# tmp974,
 14219 4aab 4C39CE   		cmp	rsi, r9	# range_stop_word, tmp970
 14220 4aae 4C89D8   		mov	rax, r11	# _1866, step
 14221 4ab1 490F46DC 		cmovbe	rbx, r12	# pretmp_1655,, prephitmp_1871
 14222 4ab5 48C1E004 		sal	rax, 4	# _1866,
 14223 4ab9 48894424 		mov	QWORD PTR 104[rsp], rax	# %sfp, _1866
 14223      68
 14224              	# sieve_extend.c:194:        index_ptr+=step;
 194:sieve_extend.c ****        *index_ptr |= mask;
 14225              		.loc 1 194 17 view .LVU4994
 14226 4abe 4A8D14DD 		lea	rdx, 0[0+r11*8]	# _775,
 14226      00000000 
 14227 4ac6 49C1E103 		sal	r9, 3	# tmp978,
 14228 4aca 660F1F44 		.p2align 4,,10
 14228      0000
 14229              		.p2align 3
 14230              	.L792:
 194:sieve_extend.c ****        *index_ptr |= mask;
 14231              		.loc 1 194 17 view .LVU4995
 14232              	.LBE606:
 14233              	.LBE610:
 390:sieve_extend.c ****         applyMask(bitarray, step, range_stop, mask, wordindex(index));
 14234              		.loc 1 390 9 is_stmt 1 view .LVU4996
 14235              	# sieve_extend.c:391:         applyMask(bitarray, step, range_stop, mask, wordindex(index));
 391:sieve_extend.c ****     }
 14236              		.loc 1 391 9 is_stmt 0 view .LVU4997
 14237 4ad0 4889CF   		mov	rdi, rcx	# tmp981, index
 14238 4ad3 48C1EF06 		shr	rdi, 6	# tmp981,
 14239              	.LBB611:
 14240              	.LBB607:
 14241              	# sieve_extend.c:187:    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(
 187:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  = &bitarray[((range_stop_word>step*5) ? (range_sto
GAS LISTING /tmp/cctyCFAS.s 			page 382


 14242              		.loc 1 187 78 view .LVU4998
 14243 4ad7 498D04FC 		lea	rax, [r12+rdi*8]	# index_ptr,
 14244              	.LBE607:
 14245              	.LBE611:
 14246              	# sieve_extend.c:390:         register bitword_t mask = markmask(index);
 390:sieve_extend.c ****         applyMask(bitarray, step, range_stop, mask, wordindex(index));
 14247              		.loc 1 390 28 view .LVU4999
 14248 4adb C4C2F1F7 		shlx	rsi, r13, rcx	# mask, tmp1041, index
 14248      F5
 14249              	.LVL1002:
 391:sieve_extend.c ****     }
 14250              		.loc 1 391 9 is_stmt 1 view .LVU5000
 14251              	.LBB612:
 14252              	.LBI604:
 154:sieve_extend.c **** // #if __APPLE__
 14253              		.loc 1 154 20 view .LVU5001
 14254              	.LBB608:
 186:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 14255              		.loc 1 186 4 view .LVU5002
 187:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  = &bitarray[((range_stop_word>step*5) ? (range_sto
 14256              		.loc 1 187 4 view .LVU5003
 188:sieve_extend.c **** 
 14257              		.loc 1 188 4 view .LVU5004
 192:sieve_extend.c ****        *index_ptr |= mask;
 14258              		.loc 1 192 4 view .LVU5005
 192:sieve_extend.c ****        *index_ptr |= mask;
 14259              		.loc 1 192 10 view .LVU5006
 14260 4ae0 4839D8   		cmp	rax, rbx	# index_ptr, prephitmp_1871
 14261 4ae3 0F8397FE 		jnb	.L787	#,
 14261      FFFF
 14262 4ae9 488B7C24 		mov	rdi, QWORD PTR 104[rsp]	# _1866, %sfp
 14262      68
 14263 4aee 4801C7   		add	rdi, rax	# ivtmp.449, index_ptr
 14264              	.L788:
 193:sieve_extend.c ****        index_ptr+=step;
 14265              		.loc 1 193 8 view .LVU5007
 14266              	# sieve_extend.c:193:        *index_ptr |= mask;
 193:sieve_extend.c ****        index_ptr+=step;
 14267              		.loc 1 193 19 is_stmt 0 view .LVU5008
 14268 4af1 480930   		or	QWORD PTR [rax], rsi	# MEM[base: index_ptr_1079, offset: 0B], mask
 194:sieve_extend.c ****        *index_ptr |= mask;
 14269              		.loc 1 194 8 is_stmt 1 view .LVU5009
 14270              	.LVL1003:
 195:sieve_extend.c ****        index_ptr+=step;
 14271              		.loc 1 195 8 view .LVU5010
 14272              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 14273              		.loc 1 195 19 is_stmt 0 view .LVU5011
 14274 4af4 48093410 		or	QWORD PTR [rax+rdx], rsi	# MEM[base: index_ptr_1079, index: _775, offset: 0B], mask
 196:sieve_extend.c ****        *index_ptr |= mask;
 14275              		.loc 1 196 8 is_stmt 1 view .LVU5012
 14276              	.LVL1004:
 197:sieve_extend.c ****        index_ptr+=step;
 14277              		.loc 1 197 8 view .LVU5013
 14278              	# sieve_extend.c:197:        *index_ptr |= mask;
 197:sieve_extend.c ****        index_ptr+=step;
 14279              		.loc 1 197 19 is_stmt 0 view .LVU5014
GAS LISTING /tmp/cctyCFAS.s 			page 383


 14280 4af8 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _1846, offset: 0B], mask
 198:sieve_extend.c ****        *index_ptr |= mask;
 14281              		.loc 1 198 8 is_stmt 1 view .LVU5015
 14282              	.LVL1005:
 199:sieve_extend.c ****        index_ptr+=step;
 14283              		.loc 1 199 8 view .LVU5016
 14284              	# sieve_extend.c:199:        *index_ptr |= mask;
 199:sieve_extend.c ****        index_ptr+=step;
 14285              		.loc 1 199 19 is_stmt 0 view .LVU5017
 14286 4afb 48093417 		or	QWORD PTR [rdi+rdx], rsi	# MEM[base: _1846, index: _775, offset: 0B], mask
 200:sieve_extend.c ****        *index_ptr |= mask;
 14287              		.loc 1 200 8 is_stmt 1 view .LVU5018
 14288              	.LVL1006:
 201:sieve_extend.c ****        index_ptr+=step;
 14289              		.loc 1 201 8 view .LVU5019
 14290 4aff 4C01CF   		add	rdi, r9	# ivtmp.449, tmp978
 14291              	# sieve_extend.c:201:        *index_ptr |= mask;
 201:sieve_extend.c ****        index_ptr+=step;
 14292              		.loc 1 201 19 is_stmt 0 view .LVU5020
 14293 4b02 48093490 		or	QWORD PTR [rax+rdx*4], rsi	# MEM[base: index_ptr_1079, index: _775, step: 4, offset: 0B], mask
 202:sieve_extend.c ****    }
 14294              		.loc 1 202 8 is_stmt 1 view .LVU5021
 14295 4b06 4C01C8   		add	rax, r9	# index_ptr, tmp978
 14296              	.LVL1007:
 192:sieve_extend.c ****        *index_ptr |= mask;
 14297              		.loc 1 192 10 view .LVU5022
 14298 4b09 4839D8   		cmp	rax, rbx	# index_ptr, prephitmp_1871
 14299 4b0c 0F836EFE 		jnb	.L787	#,
 14299      FFFF
 193:sieve_extend.c ****        index_ptr+=step;
 14300              		.loc 1 193 8 view .LVU5023
 14301              	# sieve_extend.c:193:        *index_ptr |= mask;
 193:sieve_extend.c ****        index_ptr+=step;
 14302              		.loc 1 193 19 is_stmt 0 view .LVU5024
 14303 4b12 480930   		or	QWORD PTR [rax], rsi	# MEM[base: index_ptr_1079, offset: 0B], mask
 194:sieve_extend.c ****        *index_ptr |= mask;
 14304              		.loc 1 194 8 is_stmt 1 view .LVU5025
 14305              	.LVL1008:
 195:sieve_extend.c ****        index_ptr+=step;
 14306              		.loc 1 195 8 view .LVU5026
 14307              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 14308              		.loc 1 195 19 is_stmt 0 view .LVU5027
 14309 4b15 48093410 		or	QWORD PTR [rax+rdx], rsi	# MEM[base: index_ptr_1079, index: _775, offset: 0B], mask
 196:sieve_extend.c ****        *index_ptr |= mask;
 14310              		.loc 1 196 8 is_stmt 1 view .LVU5028
 14311              	.LVL1009:
 197:sieve_extend.c ****        index_ptr+=step;
 14312              		.loc 1 197 8 view .LVU5029
 14313              	# sieve_extend.c:197:        *index_ptr |= mask;
 197:sieve_extend.c ****        index_ptr+=step;
 14314              		.loc 1 197 19 is_stmt 0 view .LVU5030
 14315 4b19 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _1846, offset: 0B], mask
 198:sieve_extend.c ****        *index_ptr |= mask;
 14316              		.loc 1 198 8 is_stmt 1 view .LVU5031
 14317              	.LVL1010:
 199:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/cctyCFAS.s 			page 384


 14318              		.loc 1 199 8 view .LVU5032
 14319              	# sieve_extend.c:199:        *index_ptr |= mask;
 199:sieve_extend.c ****        index_ptr+=step;
 14320              		.loc 1 199 19 is_stmt 0 view .LVU5033
 14321 4b1c 48093417 		or	QWORD PTR [rdi+rdx], rsi	# MEM[base: _1846, index: _775, offset: 0B], mask
 200:sieve_extend.c ****        *index_ptr |= mask;
 14322              		.loc 1 200 8 is_stmt 1 view .LVU5034
 14323              	.LVL1011:
 201:sieve_extend.c ****        index_ptr+=step;
 14324              		.loc 1 201 8 view .LVU5035
 14325 4b20 4C01CF   		add	rdi, r9	# ivtmp.449, tmp978
 14326              	# sieve_extend.c:201:        *index_ptr |= mask;
 201:sieve_extend.c ****        index_ptr+=step;
 14327              		.loc 1 201 19 is_stmt 0 view .LVU5036
 14328 4b23 48093490 		or	QWORD PTR [rax+rdx*4], rsi	# MEM[base: index_ptr_1079, index: _775, step: 4, offset: 0B], mask
 202:sieve_extend.c ****    }
 14329              		.loc 1 202 8 is_stmt 1 view .LVU5037
 14330 4b27 4C01C8   		add	rax, r9	# index_ptr, tmp978
 14331              	.LVL1012:
 192:sieve_extend.c ****        *index_ptr |= mask;
 14332              		.loc 1 192 10 view .LVU5038
 14333 4b2a 4839D8   		cmp	rax, rbx	# index_ptr, prephitmp_1871
 14334 4b2d 0F834DFE 		jnb	.L787	#,
 14334      FFFF
 193:sieve_extend.c ****        index_ptr+=step;
 14335              		.loc 1 193 8 view .LVU5039
 14336              	# sieve_extend.c:193:        *index_ptr |= mask;
 193:sieve_extend.c ****        index_ptr+=step;
 14337              		.loc 1 193 19 is_stmt 0 view .LVU5040
 14338 4b33 480930   		or	QWORD PTR [rax], rsi	# MEM[base: index_ptr_1079, offset: 0B], mask
 194:sieve_extend.c ****        *index_ptr |= mask;
 14339              		.loc 1 194 8 is_stmt 1 view .LVU5041
 14340              	.LVL1013:
 195:sieve_extend.c ****        index_ptr+=step;
 14341              		.loc 1 195 8 view .LVU5042
 14342              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 14343              		.loc 1 195 19 is_stmt 0 view .LVU5043
 14344 4b36 48093410 		or	QWORD PTR [rax+rdx], rsi	# MEM[base: index_ptr_1079, index: _775, offset: 0B], mask
 196:sieve_extend.c ****        *index_ptr |= mask;
 14345              		.loc 1 196 8 is_stmt 1 view .LVU5044
 14346              	.LVL1014:
 197:sieve_extend.c ****        index_ptr+=step;
 14347              		.loc 1 197 8 view .LVU5045
 14348              	# sieve_extend.c:197:        *index_ptr |= mask;
 197:sieve_extend.c ****        index_ptr+=step;
 14349              		.loc 1 197 19 is_stmt 0 view .LVU5046
 14350 4b3a 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _1846, offset: 0B], mask
 198:sieve_extend.c ****        *index_ptr |= mask;
 14351              		.loc 1 198 8 is_stmt 1 view .LVU5047
 14352              	.LVL1015:
 199:sieve_extend.c ****        index_ptr+=step;
 14353              		.loc 1 199 8 view .LVU5048
 14354              	# sieve_extend.c:199:        *index_ptr |= mask;
 199:sieve_extend.c ****        index_ptr+=step;
 14355              		.loc 1 199 19 is_stmt 0 view .LVU5049
 14356 4b3d 48093417 		or	QWORD PTR [rdi+rdx], rsi	# MEM[base: _1846, index: _775, offset: 0B], mask
GAS LISTING /tmp/cctyCFAS.s 			page 385


 200:sieve_extend.c ****        *index_ptr |= mask;
 14357              		.loc 1 200 8 is_stmt 1 view .LVU5050
 14358              	.LVL1016:
 201:sieve_extend.c ****        index_ptr+=step;
 14359              		.loc 1 201 8 view .LVU5051
 14360 4b41 4C01CF   		add	rdi, r9	# ivtmp.449, tmp978
 14361              	# sieve_extend.c:201:        *index_ptr |= mask;
 201:sieve_extend.c ****        index_ptr+=step;
 14362              		.loc 1 201 19 is_stmt 0 view .LVU5052
 14363 4b44 48093490 		or	QWORD PTR [rax+rdx*4], rsi	# MEM[base: index_ptr_1079, index: _775, step: 4, offset: 0B], mask
 202:sieve_extend.c ****    }
 14364              		.loc 1 202 8 is_stmt 1 view .LVU5053
 14365 4b48 4C01C8   		add	rax, r9	# index_ptr, tmp978
 14366              	.LVL1017:
 192:sieve_extend.c ****        *index_ptr |= mask;
 14367              		.loc 1 192 10 view .LVU5054
 14368 4b4b 4839D8   		cmp	rax, rbx	# index_ptr, prephitmp_1871
 14369 4b4e 0F832CFE 		jnb	.L787	#,
 14369      FFFF
 193:sieve_extend.c ****        index_ptr+=step;
 14370              		.loc 1 193 8 view .LVU5055
 14371              	# sieve_extend.c:193:        *index_ptr |= mask;
 193:sieve_extend.c ****        index_ptr+=step;
 14372              		.loc 1 193 19 is_stmt 0 view .LVU5056
 14373 4b54 480930   		or	QWORD PTR [rax], rsi	# MEM[base: index_ptr_1079, offset: 0B], mask
 194:sieve_extend.c ****        *index_ptr |= mask;
 14374              		.loc 1 194 8 is_stmt 1 view .LVU5057
 14375              	.LVL1018:
 195:sieve_extend.c ****        index_ptr+=step;
 14376              		.loc 1 195 8 view .LVU5058
 14377              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 14378              		.loc 1 195 19 is_stmt 0 view .LVU5059
 14379 4b57 48093410 		or	QWORD PTR [rax+rdx], rsi	# MEM[base: index_ptr_1079, index: _775, offset: 0B], mask
 196:sieve_extend.c ****        *index_ptr |= mask;
 14380              		.loc 1 196 8 is_stmt 1 view .LVU5060
 14381              	.LVL1019:
 197:sieve_extend.c ****        index_ptr+=step;
 14382              		.loc 1 197 8 view .LVU5061
 14383              	# sieve_extend.c:197:        *index_ptr |= mask;
 197:sieve_extend.c ****        index_ptr+=step;
 14384              		.loc 1 197 19 is_stmt 0 view .LVU5062
 14385 4b5b 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _1846, offset: 0B], mask
 198:sieve_extend.c ****        *index_ptr |= mask;
 14386              		.loc 1 198 8 is_stmt 1 view .LVU5063
 14387              	.LVL1020:
 199:sieve_extend.c ****        index_ptr+=step;
 14388              		.loc 1 199 8 view .LVU5064
 14389              	# sieve_extend.c:199:        *index_ptr |= mask;
 199:sieve_extend.c ****        index_ptr+=step;
 14390              		.loc 1 199 19 is_stmt 0 view .LVU5065
 14391 4b5e 48093417 		or	QWORD PTR [rdi+rdx], rsi	# MEM[base: _1846, index: _775, offset: 0B], mask
 200:sieve_extend.c ****        *index_ptr |= mask;
 14392              		.loc 1 200 8 is_stmt 1 view .LVU5066
 14393              	.LVL1021:
 201:sieve_extend.c ****        index_ptr+=step;
 14394              		.loc 1 201 8 view .LVU5067
GAS LISTING /tmp/cctyCFAS.s 			page 386


 14395 4b62 4C01CF   		add	rdi, r9	# ivtmp.449, tmp978
 14396              	# sieve_extend.c:201:        *index_ptr |= mask;
 201:sieve_extend.c ****        index_ptr+=step;
 14397              		.loc 1 201 19 is_stmt 0 view .LVU5068
 14398 4b65 48093490 		or	QWORD PTR [rax+rdx*4], rsi	# MEM[base: index_ptr_1079, index: _775, step: 4, offset: 0B], mask
 202:sieve_extend.c ****    }
 14399              		.loc 1 202 8 is_stmt 1 view .LVU5069
 14400 4b69 4C01C8   		add	rax, r9	# index_ptr, tmp978
 14401              	.LVL1022:
 192:sieve_extend.c ****        *index_ptr |= mask;
 14402              		.loc 1 192 10 view .LVU5070
 14403 4b6c 4839D8   		cmp	rax, rbx	# index_ptr, prephitmp_1871
 14404 4b6f 0F830BFE 		jnb	.L787	#,
 14404      FFFF
 193:sieve_extend.c ****        index_ptr+=step;
 14405              		.loc 1 193 8 view .LVU5071
 14406              	# sieve_extend.c:193:        *index_ptr |= mask;
 193:sieve_extend.c ****        index_ptr+=step;
 14407              		.loc 1 193 19 is_stmt 0 view .LVU5072
 14408 4b75 480930   		or	QWORD PTR [rax], rsi	# MEM[base: index_ptr_1079, offset: 0B], mask
 194:sieve_extend.c ****        *index_ptr |= mask;
 14409              		.loc 1 194 8 is_stmt 1 view .LVU5073
 14410              	.LVL1023:
 195:sieve_extend.c ****        index_ptr+=step;
 14411              		.loc 1 195 8 view .LVU5074
 14412              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 14413              		.loc 1 195 19 is_stmt 0 view .LVU5075
 14414 4b78 48093410 		or	QWORD PTR [rax+rdx], rsi	# MEM[base: index_ptr_1079, index: _775, offset: 0B], mask
 196:sieve_extend.c ****        *index_ptr |= mask;
 14415              		.loc 1 196 8 is_stmt 1 view .LVU5076
 14416              	.LVL1024:
 197:sieve_extend.c ****        index_ptr+=step;
 14417              		.loc 1 197 8 view .LVU5077
 14418              	# sieve_extend.c:197:        *index_ptr |= mask;
 197:sieve_extend.c ****        index_ptr+=step;
 14419              		.loc 1 197 19 is_stmt 0 view .LVU5078
 14420 4b7c 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _1846, offset: 0B], mask
 198:sieve_extend.c ****        *index_ptr |= mask;
 14421              		.loc 1 198 8 is_stmt 1 view .LVU5079
 14422              	.LVL1025:
 199:sieve_extend.c ****        index_ptr+=step;
 14423              		.loc 1 199 8 view .LVU5080
 14424              	# sieve_extend.c:199:        *index_ptr |= mask;
 199:sieve_extend.c ****        index_ptr+=step;
 14425              		.loc 1 199 19 is_stmt 0 view .LVU5081
 14426 4b7f 48093417 		or	QWORD PTR [rdi+rdx], rsi	# MEM[base: _1846, index: _775, offset: 0B], mask
 200:sieve_extend.c ****        *index_ptr |= mask;
 14427              		.loc 1 200 8 is_stmt 1 view .LVU5082
 14428              	.LVL1026:
 201:sieve_extend.c ****        index_ptr+=step;
 14429              		.loc 1 201 8 view .LVU5083
 14430 4b83 4C01CF   		add	rdi, r9	# ivtmp.449, tmp978
 14431              	# sieve_extend.c:201:        *index_ptr |= mask;
 201:sieve_extend.c ****        index_ptr+=step;
 14432              		.loc 1 201 19 is_stmt 0 view .LVU5084
 14433 4b86 48093490 		or	QWORD PTR [rax+rdx*4], rsi	# MEM[base: index_ptr_1079, index: _775, step: 4, offset: 0B], mask
GAS LISTING /tmp/cctyCFAS.s 			page 387


 202:sieve_extend.c ****    }
 14434              		.loc 1 202 8 is_stmt 1 view .LVU5085
 14435 4b8a 4C01C8   		add	rax, r9	# index_ptr, tmp978
 14436              	.LVL1027:
 192:sieve_extend.c ****        *index_ptr |= mask;
 14437              		.loc 1 192 10 view .LVU5086
 14438 4b8d 4839D8   		cmp	rax, rbx	# index_ptr, prephitmp_1871
 14439 4b90 0F83EAFD 		jnb	.L787	#,
 14439      FFFF
 193:sieve_extend.c ****        index_ptr+=step;
 14440              		.loc 1 193 8 view .LVU5087
 14441              	# sieve_extend.c:193:        *index_ptr |= mask;
 193:sieve_extend.c ****        index_ptr+=step;
 14442              		.loc 1 193 19 is_stmt 0 view .LVU5088
 14443 4b96 480930   		or	QWORD PTR [rax], rsi	# MEM[base: index_ptr_1079, offset: 0B], mask
 194:sieve_extend.c ****        *index_ptr |= mask;
 14444              		.loc 1 194 8 is_stmt 1 view .LVU5089
 14445              	.LVL1028:
 195:sieve_extend.c ****        index_ptr+=step;
 14446              		.loc 1 195 8 view .LVU5090
 14447              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 14448              		.loc 1 195 19 is_stmt 0 view .LVU5091
 14449 4b99 48093410 		or	QWORD PTR [rax+rdx], rsi	# MEM[base: index_ptr_1079, index: _775, offset: 0B], mask
 196:sieve_extend.c ****        *index_ptr |= mask;
 14450              		.loc 1 196 8 is_stmt 1 view .LVU5092
 14451              	.LVL1029:
 197:sieve_extend.c ****        index_ptr+=step;
 14452              		.loc 1 197 8 view .LVU5093
 14453              	# sieve_extend.c:197:        *index_ptr |= mask;
 197:sieve_extend.c ****        index_ptr+=step;
 14454              		.loc 1 197 19 is_stmt 0 view .LVU5094
 14455 4b9d 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _1846, offset: 0B], mask
 198:sieve_extend.c ****        *index_ptr |= mask;
 14456              		.loc 1 198 8 is_stmt 1 view .LVU5095
 14457              	.LVL1030:
 199:sieve_extend.c ****        index_ptr+=step;
 14458              		.loc 1 199 8 view .LVU5096
 14459              	# sieve_extend.c:199:        *index_ptr |= mask;
 199:sieve_extend.c ****        index_ptr+=step;
 14460              		.loc 1 199 19 is_stmt 0 view .LVU5097
 14461 4ba0 48093417 		or	QWORD PTR [rdi+rdx], rsi	# MEM[base: _1846, index: _775, offset: 0B], mask
 200:sieve_extend.c ****        *index_ptr |= mask;
 14462              		.loc 1 200 8 is_stmt 1 view .LVU5098
 14463              	.LVL1031:
 201:sieve_extend.c ****        index_ptr+=step;
 14464              		.loc 1 201 8 view .LVU5099
 14465 4ba4 4C01CF   		add	rdi, r9	# ivtmp.449, tmp978
 14466              	# sieve_extend.c:201:        *index_ptr |= mask;
 201:sieve_extend.c ****        index_ptr+=step;
 14467              		.loc 1 201 19 is_stmt 0 view .LVU5100
 14468 4ba7 48093490 		or	QWORD PTR [rax+rdx*4], rsi	# MEM[base: index_ptr_1079, index: _775, step: 4, offset: 0B], mask
 202:sieve_extend.c ****    }
 14469              		.loc 1 202 8 is_stmt 1 view .LVU5101
 14470 4bab 4C01C8   		add	rax, r9	# index_ptr, tmp978
 14471              	.LVL1032:
 192:sieve_extend.c ****        *index_ptr |= mask;
GAS LISTING /tmp/cctyCFAS.s 			page 388


 14472              		.loc 1 192 10 view .LVU5102
 14473 4bae 4839D8   		cmp	rax, rbx	# index_ptr, prephitmp_1871
 14474 4bb1 0F83C9FD 		jnb	.L787	#,
 14474      FFFF
 193:sieve_extend.c ****        index_ptr+=step;
 14475              		.loc 1 193 8 view .LVU5103
 14476              	# sieve_extend.c:193:        *index_ptr |= mask;
 193:sieve_extend.c ****        index_ptr+=step;
 14477              		.loc 1 193 19 is_stmt 0 view .LVU5104
 14478 4bb7 480930   		or	QWORD PTR [rax], rsi	# MEM[base: index_ptr_1079, offset: 0B], mask
 194:sieve_extend.c ****        *index_ptr |= mask;
 14479              		.loc 1 194 8 is_stmt 1 view .LVU5105
 14480              	.LVL1033:
 195:sieve_extend.c ****        index_ptr+=step;
 14481              		.loc 1 195 8 view .LVU5106
 14482              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 14483              		.loc 1 195 19 is_stmt 0 view .LVU5107
 14484 4bba 48093410 		or	QWORD PTR [rax+rdx], rsi	# MEM[base: index_ptr_1079, index: _775, offset: 0B], mask
 196:sieve_extend.c ****        *index_ptr |= mask;
 14485              		.loc 1 196 8 is_stmt 1 view .LVU5108
 14486              	.LVL1034:
 197:sieve_extend.c ****        index_ptr+=step;
 14487              		.loc 1 197 8 view .LVU5109
 14488              	# sieve_extend.c:197:        *index_ptr |= mask;
 197:sieve_extend.c ****        index_ptr+=step;
 14489              		.loc 1 197 19 is_stmt 0 view .LVU5110
 14490 4bbe 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _1846, offset: 0B], mask
 198:sieve_extend.c ****        *index_ptr |= mask;
 14491              		.loc 1 198 8 is_stmt 1 view .LVU5111
 14492              	.LVL1035:
 199:sieve_extend.c ****        index_ptr+=step;
 14493              		.loc 1 199 8 view .LVU5112
 14494              	# sieve_extend.c:199:        *index_ptr |= mask;
 199:sieve_extend.c ****        index_ptr+=step;
 14495              		.loc 1 199 19 is_stmt 0 view .LVU5113
 14496 4bc1 48093417 		or	QWORD PTR [rdi+rdx], rsi	# MEM[base: _1846, index: _775, offset: 0B], mask
 200:sieve_extend.c ****        *index_ptr |= mask;
 14497              		.loc 1 200 8 is_stmt 1 view .LVU5114
 14498              	.LVL1036:
 201:sieve_extend.c ****        index_ptr+=step;
 14499              		.loc 1 201 8 view .LVU5115
 14500 4bc5 4C01CF   		add	rdi, r9	# ivtmp.449, tmp978
 14501              	# sieve_extend.c:201:        *index_ptr |= mask;
 201:sieve_extend.c ****        index_ptr+=step;
 14502              		.loc 1 201 19 is_stmt 0 view .LVU5116
 14503 4bc8 48093490 		or	QWORD PTR [rax+rdx*4], rsi	# MEM[base: index_ptr_1079, index: _775, step: 4, offset: 0B], mask
 202:sieve_extend.c ****    }
 14504              		.loc 1 202 8 is_stmt 1 view .LVU5117
 14505 4bcc 4C01C8   		add	rax, r9	# index_ptr, tmp978
 14506              	.LVL1037:
 192:sieve_extend.c ****        *index_ptr |= mask;
 14507              		.loc 1 192 10 view .LVU5118
 14508 4bcf 4839D8   		cmp	rax, rbx	# index_ptr, prephitmp_1871
 14509 4bd2 0F83A8FD 		jnb	.L787	#,
 14509      FFFF
 193:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/cctyCFAS.s 			page 389


 14510              		.loc 1 193 8 view .LVU5119
 14511              	# sieve_extend.c:193:        *index_ptr |= mask;
 193:sieve_extend.c ****        index_ptr+=step;
 14512              		.loc 1 193 19 is_stmt 0 view .LVU5120
 14513 4bd8 480930   		or	QWORD PTR [rax], rsi	# MEM[base: index_ptr_1079, offset: 0B], mask
 194:sieve_extend.c ****        *index_ptr |= mask;
 14514              		.loc 1 194 8 is_stmt 1 view .LVU5121
 14515              	.LVL1038:
 195:sieve_extend.c ****        index_ptr+=step;
 14516              		.loc 1 195 8 view .LVU5122
 14517              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 14518              		.loc 1 195 19 is_stmt 0 view .LVU5123
 14519 4bdb 48093410 		or	QWORD PTR [rax+rdx], rsi	# MEM[base: index_ptr_1079, index: _775, offset: 0B], mask
 196:sieve_extend.c ****        *index_ptr |= mask;
 14520              		.loc 1 196 8 is_stmt 1 view .LVU5124
 14521              	.LVL1039:
 197:sieve_extend.c ****        index_ptr+=step;
 14522              		.loc 1 197 8 view .LVU5125
 14523              	# sieve_extend.c:197:        *index_ptr |= mask;
 197:sieve_extend.c ****        index_ptr+=step;
 14524              		.loc 1 197 19 is_stmt 0 view .LVU5126
 14525 4bdf 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _1846, offset: 0B], mask
 198:sieve_extend.c ****        *index_ptr |= mask;
 14526              		.loc 1 198 8 is_stmt 1 view .LVU5127
 14527              	.LVL1040:
 199:sieve_extend.c ****        index_ptr+=step;
 14528              		.loc 1 199 8 view .LVU5128
 14529              	# sieve_extend.c:199:        *index_ptr |= mask;
 199:sieve_extend.c ****        index_ptr+=step;
 14530              		.loc 1 199 19 is_stmt 0 view .LVU5129
 14531 4be2 48093417 		or	QWORD PTR [rdi+rdx], rsi	# MEM[base: _1846, index: _775, offset: 0B], mask
 200:sieve_extend.c ****        *index_ptr |= mask;
 14532              		.loc 1 200 8 is_stmt 1 view .LVU5130
 14533              	.LVL1041:
 201:sieve_extend.c ****        index_ptr+=step;
 14534              		.loc 1 201 8 view .LVU5131
 14535 4be6 4C01CF   		add	rdi, r9	# ivtmp.449, tmp978
 14536              	# sieve_extend.c:201:        *index_ptr |= mask;
 201:sieve_extend.c ****        index_ptr+=step;
 14537              		.loc 1 201 19 is_stmt 0 view .LVU5132
 14538 4be9 48093490 		or	QWORD PTR [rax+rdx*4], rsi	# MEM[base: index_ptr_1079, index: _775, step: 4, offset: 0B], mask
 202:sieve_extend.c ****    }
 14539              		.loc 1 202 8 is_stmt 1 view .LVU5133
 14540 4bed 4C01C8   		add	rax, r9	# index_ptr, tmp978
 14541              	.LVL1042:
 192:sieve_extend.c ****        *index_ptr |= mask;
 14542              		.loc 1 192 10 view .LVU5134
 14543 4bf0 4839D8   		cmp	rax, rbx	# index_ptr, prephitmp_1871
 14544 4bf3 0F82F8FE 		jb	.L788	#,
 14544      FFFF
 14545 4bf9 E982FDFF 		jmp	.L787	#
 14545      FF
 14546              	.LVL1043:
 14547 4bfe 6690     		.p2align 4,,10
 14548              		.p2align 3
 14549              	.L1589:
GAS LISTING /tmp/cctyCFAS.s 			page 390


 192:sieve_extend.c ****        *index_ptr |= mask;
 14550              		.loc 1 192 10 is_stmt 0 view .LVU5135
 14551              	.LBE608:
 14552              	.LBE612:
 14553              	.LBE614:
 14554              	.LBE616:
 14555              	.LBE618:
 14556              	.LBE623:
 14557              	.LBB624:
 14558              	.LBB625:
 321:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14559              		.loc 1 321 50 is_stmt 1 view .LVU5136
 14560              	# sieve_extend.c:321:     for (register counter_t index = range_start; index <= range_stop; index +
 321:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14561              		.loc 1 321 5 is_stmt 0 view .LVU5137
 14562 4c00 4939CF   		cmp	r15, rcx	# block_stop, index
 14563 4c03 0F829FFC 		jb	.L1568	#,
 14563      FFFF
 14564              	.LVL1044:
 14565              	.L763:
 322:sieve_extend.c ****     }
 14566              		.loc 1 322 9 is_stmt 1 view .LVU5138
 14567              	# sieve_extend.c:322:         bitarray[wordindex(index)] |= markmask(index);
 322:sieve_extend.c ****     }
 14568              		.loc 1 322 36 is_stmt 0 view .LVU5139
 14569 4c09 4889CB   		mov	rbx, rcx	# tmp943, index
 14570              	# sieve_extend.c:322:         bitarray[wordindex(index)] |= markmask(index);
 322:sieve_extend.c ****     }
 14571              		.loc 1 322 39 view .LVU5140
 14572 4c0c C4C2F1F7 		shlx	rdi, r13, rcx	# tmp946, tmp1041, index
 14572      FD
 14573              	# sieve_extend.c:322:         bitarray[wordindex(index)] |= markmask(index);
 322:sieve_extend.c ****     }
 14574              		.loc 1 322 36 view .LVU5141
 14575 4c11 48C1EB06 		shr	rbx, 6	# tmp943,
 14576              	# sieve_extend.c:321:     for (register counter_t index = range_start; index <= range_stop; index +
 321:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14577              		.loc 1 321 77 view .LVU5142
 14578 4c15 4C01C9   		add	rcx, r9	# index, step
 14579              	# sieve_extend.c:322:         bitarray[wordindex(index)] |= markmask(index);
 322:sieve_extend.c ****     }
 14580              		.loc 1 322 36 view .LVU5143
 14581 4c18 49093CDC 		or	QWORD PTR [r12+rbx*8], rdi	# *_449, tmp946
 321:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14582              		.loc 1 321 71 is_stmt 1 view .LVU5144
 321:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14583              		.loc 1 321 50 view .LVU5145
 14584              	# sieve_extend.c:321:     for (register counter_t index = range_start; index <= range_stop; index +
 321:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14585              		.loc 1 321 5 is_stmt 0 view .LVU5146
 14586 4c1c 4939CF   		cmp	r15, rcx	# block_stop, index
 14587 4c1f 0F8283FC 		jb	.L1568	#,
 14587      FFFF
 322:sieve_extend.c ****     }
 14588              		.loc 1 322 9 is_stmt 1 view .LVU5147
 14589              	# sieve_extend.c:322:         bitarray[wordindex(index)] |= markmask(index);
 322:sieve_extend.c ****     }
GAS LISTING /tmp/cctyCFAS.s 			page 391


 14590              		.loc 1 322 36 is_stmt 0 view .LVU5148
 14591 4c25 4989CE   		mov	r14, rcx	# tmp1335, index
 14592              	# sieve_extend.c:322:         bitarray[wordindex(index)] |= markmask(index);
 322:sieve_extend.c ****     }
 14593              		.loc 1 322 39 view .LVU5149
 14594 4c28 C442F1F7 		shlx	r10, r13, rcx	# tmp1338, tmp1041, index
 14594      D5
 14595              	# sieve_extend.c:322:         bitarray[wordindex(index)] |= markmask(index);
 322:sieve_extend.c ****     }
 14596              		.loc 1 322 36 view .LVU5150
 14597 4c2d 49C1EE06 		shr	r14, 6	# tmp1335,
 14598              	# sieve_extend.c:321:     for (register counter_t index = range_start; index <= range_stop; index +
 321:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14599              		.loc 1 321 77 view .LVU5151
 14600 4c31 4C01C9   		add	rcx, r9	# index, step
 14601              	# sieve_extend.c:322:         bitarray[wordindex(index)] |= markmask(index);
 322:sieve_extend.c ****     }
 14602              		.loc 1 322 36 view .LVU5152
 14603 4c34 4F0914F4 		or	QWORD PTR [r12+r14*8], r10	# *_449, tmp1338
 321:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14604              		.loc 1 321 71 is_stmt 1 view .LVU5153
 321:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14605              		.loc 1 321 50 view .LVU5154
 14606              	# sieve_extend.c:321:     for (register counter_t index = range_start; index <= range_stop; index +
 321:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14607              		.loc 1 321 5 is_stmt 0 view .LVU5155
 14608 4c38 4939CF   		cmp	r15, rcx	# block_stop, index
 14609 4c3b 0F8267FC 		jb	.L1568	#,
 14609      FFFF
 322:sieve_extend.c ****     }
 14610              		.loc 1 322 9 is_stmt 1 view .LVU5156
 14611              	# sieve_extend.c:322:         bitarray[wordindex(index)] |= markmask(index);
 322:sieve_extend.c ****     }
 14612              		.loc 1 322 36 is_stmt 0 view .LVU5157
 14613 4c41 4889C8   		mov	rax, rcx	# tmp1340, index
 14614              	# sieve_extend.c:322:         bitarray[wordindex(index)] |= markmask(index);
 322:sieve_extend.c ****     }
 14615              		.loc 1 322 39 view .LVU5158
 14616 4c44 C4C2F1F7 		shlx	rdx, r13, rcx	# tmp1343, tmp1041, index
 14616      D5
 14617              	# sieve_extend.c:322:         bitarray[wordindex(index)] |= markmask(index);
 322:sieve_extend.c ****     }
 14618              		.loc 1 322 36 view .LVU5159
 14619 4c49 48C1E806 		shr	rax, 6	# tmp1340,
 14620              	# sieve_extend.c:321:     for (register counter_t index = range_start; index <= range_stop; index +
 321:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14621              		.loc 1 321 77 view .LVU5160
 14622 4c4d 4C01C9   		add	rcx, r9	# index, step
 14623              	# sieve_extend.c:322:         bitarray[wordindex(index)] |= markmask(index);
 322:sieve_extend.c ****     }
 14624              		.loc 1 322 36 view .LVU5161
 14625 4c50 490914C4 		or	QWORD PTR [r12+rax*8], rdx	# *_449, tmp1343
 321:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14626              		.loc 1 321 71 is_stmt 1 view .LVU5162
 321:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14627              		.loc 1 321 50 view .LVU5163
 14628              	# sieve_extend.c:321:     for (register counter_t index = range_start; index <= range_stop; index +
GAS LISTING /tmp/cctyCFAS.s 			page 392


 321:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14629              		.loc 1 321 5 is_stmt 0 view .LVU5164
 14630 4c54 4939CF   		cmp	r15, rcx	# block_stop, index
 14631 4c57 0F824BFC 		jb	.L1568	#,
 14631      FFFF
 322:sieve_extend.c ****     }
 14632              		.loc 1 322 9 is_stmt 1 view .LVU5165
 14633              	# sieve_extend.c:322:         bitarray[wordindex(index)] |= markmask(index);
 322:sieve_extend.c ****     }
 14634              		.loc 1 322 36 is_stmt 0 view .LVU5166
 14635 4c5d 4889CB   		mov	rbx, rcx	# tmp1345, index
 14636              	# sieve_extend.c:322:         bitarray[wordindex(index)] |= markmask(index);
 322:sieve_extend.c ****     }
 14637              		.loc 1 322 39 view .LVU5167
 14638 4c60 C4C2F1F7 		shlx	rdi, r13, rcx	# tmp1348, tmp1041, index
 14638      FD
 14639              	# sieve_extend.c:322:         bitarray[wordindex(index)] |= markmask(index);
 322:sieve_extend.c ****     }
 14640              		.loc 1 322 36 view .LVU5168
 14641 4c65 48C1EB06 		shr	rbx, 6	# tmp1345,
 14642              	# sieve_extend.c:321:     for (register counter_t index = range_start; index <= range_stop; index +
 321:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14643              		.loc 1 321 77 view .LVU5169
 14644 4c69 4C01C9   		add	rcx, r9	# index, step
 14645              	# sieve_extend.c:322:         bitarray[wordindex(index)] |= markmask(index);
 322:sieve_extend.c ****     }
 14646              		.loc 1 322 36 view .LVU5170
 14647 4c6c 49093CDC 		or	QWORD PTR [r12+rbx*8], rdi	# *_449, tmp1348
 321:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14648              		.loc 1 321 71 is_stmt 1 view .LVU5171
 321:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14649              		.loc 1 321 50 view .LVU5172
 14650              	# sieve_extend.c:321:     for (register counter_t index = range_start; index <= range_stop; index +
 321:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14651              		.loc 1 321 5 is_stmt 0 view .LVU5173
 14652 4c70 4939CF   		cmp	r15, rcx	# block_stop, index
 14653 4c73 0F822FFC 		jb	.L1568	#,
 14653      FFFF
 322:sieve_extend.c ****     }
 14654              		.loc 1 322 9 is_stmt 1 view .LVU5174
 14655              	# sieve_extend.c:322:         bitarray[wordindex(index)] |= markmask(index);
 322:sieve_extend.c ****     }
 14656              		.loc 1 322 36 is_stmt 0 view .LVU5175
 14657 4c79 4989CE   		mov	r14, rcx	# tmp1350, index
 14658              	# sieve_extend.c:322:         bitarray[wordindex(index)] |= markmask(index);
 322:sieve_extend.c ****     }
 14659              		.loc 1 322 39 view .LVU5176
 14660 4c7c C442F1F7 		shlx	r10, r13, rcx	# tmp1353, tmp1041, index
 14660      D5
 14661              	# sieve_extend.c:322:         bitarray[wordindex(index)] |= markmask(index);
 322:sieve_extend.c ****     }
 14662              		.loc 1 322 36 view .LVU5177
 14663 4c81 49C1EE06 		shr	r14, 6	# tmp1350,
 14664              	# sieve_extend.c:321:     for (register counter_t index = range_start; index <= range_stop; index +
 321:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14665              		.loc 1 321 77 view .LVU5178
 14666 4c85 4C01C9   		add	rcx, r9	# index, step
GAS LISTING /tmp/cctyCFAS.s 			page 393


 14667              	# sieve_extend.c:322:         bitarray[wordindex(index)] |= markmask(index);
 322:sieve_extend.c ****     }
 14668              		.loc 1 322 36 view .LVU5179
 14669 4c88 4F0914F4 		or	QWORD PTR [r12+r14*8], r10	# *_449, tmp1353
 321:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14670              		.loc 1 321 71 is_stmt 1 view .LVU5180
 321:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14671              		.loc 1 321 50 view .LVU5181
 14672              	# sieve_extend.c:321:     for (register counter_t index = range_start; index <= range_stop; index +
 321:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14673              		.loc 1 321 5 is_stmt 0 view .LVU5182
 14674 4c8c 4939CF   		cmp	r15, rcx	# block_stop, index
 14675 4c8f 0F8213FC 		jb	.L1568	#,
 14675      FFFF
 322:sieve_extend.c ****     }
 14676              		.loc 1 322 9 is_stmt 1 view .LVU5183
 14677              	# sieve_extend.c:322:         bitarray[wordindex(index)] |= markmask(index);
 322:sieve_extend.c ****     }
 14678              		.loc 1 322 36 is_stmt 0 view .LVU5184
 14679 4c95 4889C8   		mov	rax, rcx	# tmp1355, index
 14680              	# sieve_extend.c:322:         bitarray[wordindex(index)] |= markmask(index);
 322:sieve_extend.c ****     }
 14681              		.loc 1 322 39 view .LVU5185
 14682 4c98 C4C2F1F7 		shlx	rdx, r13, rcx	# tmp1358, tmp1041, index
 14682      D5
 14683              	# sieve_extend.c:322:         bitarray[wordindex(index)] |= markmask(index);
 322:sieve_extend.c ****     }
 14684              		.loc 1 322 36 view .LVU5186
 14685 4c9d 48C1E806 		shr	rax, 6	# tmp1355,
 14686              	# sieve_extend.c:321:     for (register counter_t index = range_start; index <= range_stop; index +
 321:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14687              		.loc 1 321 77 view .LVU5187
 14688 4ca1 4C01C9   		add	rcx, r9	# index, step
 14689              	# sieve_extend.c:322:         bitarray[wordindex(index)] |= markmask(index);
 322:sieve_extend.c ****     }
 14690              		.loc 1 322 36 view .LVU5188
 14691 4ca4 490914C4 		or	QWORD PTR [r12+rax*8], rdx	# *_449, tmp1358
 321:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14692              		.loc 1 321 71 is_stmt 1 view .LVU5189
 321:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14693              		.loc 1 321 50 view .LVU5190
 14694              	# sieve_extend.c:321:     for (register counter_t index = range_start; index <= range_stop; index +
 321:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14695              		.loc 1 321 5 is_stmt 0 view .LVU5191
 14696 4ca8 4939CF   		cmp	r15, rcx	# block_stop, index
 14697 4cab 0F82F7FB 		jb	.L1568	#,
 14697      FFFF
 322:sieve_extend.c ****     }
 14698              		.loc 1 322 9 is_stmt 1 view .LVU5192
 14699              	# sieve_extend.c:322:         bitarray[wordindex(index)] |= markmask(index);
 322:sieve_extend.c ****     }
 14700              		.loc 1 322 36 is_stmt 0 view .LVU5193
 14701 4cb1 4889CB   		mov	rbx, rcx	# tmp1360, index
 14702              	# sieve_extend.c:322:         bitarray[wordindex(index)] |= markmask(index);
 322:sieve_extend.c ****     }
 14703              		.loc 1 322 39 view .LVU5194
 14704 4cb4 C4C2F1F7 		shlx	rdi, r13, rcx	# tmp1363, tmp1041, index
GAS LISTING /tmp/cctyCFAS.s 			page 394


 14704      FD
 14705              	# sieve_extend.c:322:         bitarray[wordindex(index)] |= markmask(index);
 322:sieve_extend.c ****     }
 14706              		.loc 1 322 36 view .LVU5195
 14707 4cb9 48C1EB06 		shr	rbx, 6	# tmp1360,
 14708              	# sieve_extend.c:321:     for (register counter_t index = range_start; index <= range_stop; index +
 321:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14709              		.loc 1 321 77 view .LVU5196
 14710 4cbd 4C01C9   		add	rcx, r9	# index, step
 14711              	# sieve_extend.c:322:         bitarray[wordindex(index)] |= markmask(index);
 322:sieve_extend.c ****     }
 14712              		.loc 1 322 36 view .LVU5197
 14713 4cc0 49093CDC 		or	QWORD PTR [r12+rbx*8], rdi	# *_449, tmp1363
 321:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14714              		.loc 1 321 71 is_stmt 1 view .LVU5198
 321:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14715              		.loc 1 321 50 view .LVU5199
 14716              	# sieve_extend.c:321:     for (register counter_t index = range_start; index <= range_stop; index +
 321:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14717              		.loc 1 321 5 is_stmt 0 view .LVU5200
 14718 4cc4 4939CF   		cmp	r15, rcx	# block_stop, index
 14719 4cc7 0F82DBFB 		jb	.L1568	#,
 14719      FFFF
 322:sieve_extend.c ****     }
 14720              		.loc 1 322 9 is_stmt 1 view .LVU5201
 14721              	# sieve_extend.c:322:         bitarray[wordindex(index)] |= markmask(index);
 322:sieve_extend.c ****     }
 14722              		.loc 1 322 36 is_stmt 0 view .LVU5202
 14723 4ccd 4989CE   		mov	r14, rcx	# tmp1365, index
 14724              	# sieve_extend.c:322:         bitarray[wordindex(index)] |= markmask(index);
 322:sieve_extend.c ****     }
 14725              		.loc 1 322 39 view .LVU5203
 14726 4cd0 C442F1F7 		shlx	r10, r13, rcx	# tmp1368, tmp1041, index
 14726      D5
 14727              	# sieve_extend.c:322:         bitarray[wordindex(index)] |= markmask(index);
 322:sieve_extend.c ****     }
 14728              		.loc 1 322 36 view .LVU5204
 14729 4cd5 49C1EE06 		shr	r14, 6	# tmp1365,
 14730              	# sieve_extend.c:321:     for (register counter_t index = range_start; index <= range_stop; index +
 321:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14731              		.loc 1 321 77 view .LVU5205
 14732 4cd9 4C01C9   		add	rcx, r9	# index, step
 14733              	# sieve_extend.c:322:         bitarray[wordindex(index)] |= markmask(index);
 322:sieve_extend.c ****     }
 14734              		.loc 1 322 36 view .LVU5206
 14735 4cdc 4F0914F4 		or	QWORD PTR [r12+r14*8], r10	# *_449, tmp1368
 321:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14736              		.loc 1 321 71 is_stmt 1 view .LVU5207
 321:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14737              		.loc 1 321 50 view .LVU5208
 14738              	# sieve_extend.c:321:     for (register counter_t index = range_start; index <= range_stop; index +
 321:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14739              		.loc 1 321 5 is_stmt 0 view .LVU5209
 14740 4ce0 4939CF   		cmp	r15, rcx	# block_stop, index
 14741 4ce3 0F8320FF 		jnb	.L763	#,
 14741      FFFF
 14742 4ce9 E9BAFBFF 		jmp	.L1568	#
GAS LISTING /tmp/cctyCFAS.s 			page 395


 14742      FF
 14743              	.LVL1045:
 14744 4cee 6690     		.p2align 4,,10
 14745              		.p2align 3
 14746              	.L772:
 321:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14747              		.loc 1 321 5 view .LVU5210
 14748              	.LBE625:
 14749              	.LBE624:
 14750              	.LBB626:
 14751              	.LBB595:
 361:sieve_extend.c ****                 index2 += step2;
 14752              		.loc 1 361 17 is_stmt 1 view .LVU5211
 14753              	# sieve_extend.c:361:                 bitarray[wordindex(index2)] |= markmask(index2);
 361:sieve_extend.c ****                 index2 += step2;
 14754              		.loc 1 361 45 is_stmt 0 view .LVU5212
 14755 4cf0 4989C1   		mov	r9, rax	# tmp930, index2
 14756              	# sieve_extend.c:361:                 bitarray[wordindex(index2)] |= markmask(index2);
 361:sieve_extend.c ****                 index2 += step2;
 14757              		.loc 1 361 48 view .LVU5213
 14758 4cf3 C4C2F9F7 		shlx	rcx, r13, rax	# tmp933, tmp1041, index2
 14758      CD
 14759              	# sieve_extend.c:361:                 bitarray[wordindex(index2)] |= markmask(index2);
 361:sieve_extend.c ****                 index2 += step2;
 14760              		.loc 1 361 45 view .LVU5214
 14761 4cf8 49C1E906 		shr	r9, 6	# tmp930,
 14762              	# sieve_extend.c:362:                 index2 += step2;
 362:sieve_extend.c ****             }
 14763              		.loc 1 362 24 view .LVU5215
 14764 4cfc 4C01D0   		add	rax, r10	# index2, step
 14765              	# sieve_extend.c:361:                 bitarray[wordindex(index2)] |= markmask(index2);
 361:sieve_extend.c ****                 index2 += step2;
 14766              		.loc 1 361 45 view .LVU5216
 14767 4cff 4B090CCC 		or	QWORD PTR [r12+r9*8], rcx	# *_695, tmp933
 362:sieve_extend.c ****             }
 14768              		.loc 1 362 17 is_stmt 1 view .LVU5217
 360:sieve_extend.c ****                 bitarray[wordindex(index2)] |= markmask(index2);
 14769              		.loc 1 360 19 view .LVU5218
 14770 4d03 4939C7   		cmp	r15, rax	# block_stop, index2
 14771 4d06 0F829CFB 		jb	.L1568	#,
 14771      FFFF
 361:sieve_extend.c ****                 index2 += step2;
 14772              		.loc 1 361 17 view .LVU5219
 14773              	# sieve_extend.c:361:                 bitarray[wordindex(index2)] |= markmask(index2);
 361:sieve_extend.c ****                 index2 += step2;
 14774              		.loc 1 361 45 is_stmt 0 view .LVU5220
 14775 4d0c 4889C2   		mov	rdx, rax	# tmp1245, index2
 14776              	# sieve_extend.c:361:                 bitarray[wordindex(index2)] |= markmask(index2);
 361:sieve_extend.c ****                 index2 += step2;
 14777              		.loc 1 361 48 view .LVU5221
 14778 4d0f C442F9F7 		shlx	r14, r13, rax	# tmp1248, tmp1041, index2
 14778      F5
 14779              	# sieve_extend.c:361:                 bitarray[wordindex(index2)] |= markmask(index2);
 361:sieve_extend.c ****                 index2 += step2;
 14780              		.loc 1 361 45 view .LVU5222
 14781 4d14 48C1EA06 		shr	rdx, 6	# tmp1245,
 14782              	# sieve_extend.c:362:                 index2 += step2;
GAS LISTING /tmp/cctyCFAS.s 			page 396


 362:sieve_extend.c ****             }
 14783              		.loc 1 362 24 view .LVU5223
 14784 4d18 4C01D0   		add	rax, r10	# index2, step
 14785              	# sieve_extend.c:361:                 bitarray[wordindex(index2)] |= markmask(index2);
 361:sieve_extend.c ****                 index2 += step2;
 14786              		.loc 1 361 45 view .LVU5224
 14787 4d1b 4D0934D4 		or	QWORD PTR [r12+rdx*8], r14	# *_695, tmp1248
 362:sieve_extend.c ****             }
 14788              		.loc 1 362 17 is_stmt 1 view .LVU5225
 360:sieve_extend.c ****                 bitarray[wordindex(index2)] |= markmask(index2);
 14789              		.loc 1 360 19 view .LVU5226
 14790 4d1f 4939C7   		cmp	r15, rax	# block_stop, index2
 14791 4d22 0F8280FB 		jb	.L1568	#,
 14791      FFFF
 361:sieve_extend.c ****                 index2 += step2;
 14792              		.loc 1 361 17 view .LVU5227
 14793              	# sieve_extend.c:361:                 bitarray[wordindex(index2)] |= markmask(index2);
 361:sieve_extend.c ****                 index2 += step2;
 14794              		.loc 1 361 45 is_stmt 0 view .LVU5228
 14795 4d28 4889C7   		mov	rdi, rax	# tmp1250, index2
 14796              	# sieve_extend.c:361:                 bitarray[wordindex(index2)] |= markmask(index2);
 361:sieve_extend.c ****                 index2 += step2;
 14797              		.loc 1 361 48 view .LVU5229
 14798 4d2b C4C2F9F7 		shlx	rbx, r13, rax	# tmp1253, tmp1041, index2
 14798      DD
 14799              	# sieve_extend.c:361:                 bitarray[wordindex(index2)] |= markmask(index2);
 361:sieve_extend.c ****                 index2 += step2;
 14800              		.loc 1 361 45 view .LVU5230
 14801 4d30 48C1EF06 		shr	rdi, 6	# tmp1250,
 14802              	# sieve_extend.c:362:                 index2 += step2;
 362:sieve_extend.c ****             }
 14803              		.loc 1 362 24 view .LVU5231
 14804 4d34 4C01D0   		add	rax, r10	# index2, step
 14805              	# sieve_extend.c:361:                 bitarray[wordindex(index2)] |= markmask(index2);
 361:sieve_extend.c ****                 index2 += step2;
 14806              		.loc 1 361 45 view .LVU5232
 14807 4d37 49091CFC 		or	QWORD PTR [r12+rdi*8], rbx	# *_695, tmp1253
 362:sieve_extend.c ****             }
 14808              		.loc 1 362 17 is_stmt 1 view .LVU5233
 360:sieve_extend.c ****                 bitarray[wordindex(index2)] |= markmask(index2);
 14809              		.loc 1 360 19 view .LVU5234
 14810 4d3b 4939C7   		cmp	r15, rax	# block_stop, index2
 14811 4d3e 0F8264FB 		jb	.L1568	#,
 14811      FFFF
 361:sieve_extend.c ****                 index2 += step2;
 14812              		.loc 1 361 17 view .LVU5235
 14813              	# sieve_extend.c:361:                 bitarray[wordindex(index2)] |= markmask(index2);
 361:sieve_extend.c ****                 index2 += step2;
 14814              		.loc 1 361 45 is_stmt 0 view .LVU5236
 14815 4d44 4989C1   		mov	r9, rax	# tmp1255, index2
 14816              	# sieve_extend.c:361:                 bitarray[wordindex(index2)] |= markmask(index2);
 361:sieve_extend.c ****                 index2 += step2;
 14817              		.loc 1 361 48 view .LVU5237
 14818 4d47 C4C2F9F7 		shlx	rcx, r13, rax	# tmp1258, tmp1041, index2
 14818      CD
 14819              	# sieve_extend.c:361:                 bitarray[wordindex(index2)] |= markmask(index2);
 361:sieve_extend.c ****                 index2 += step2;
GAS LISTING /tmp/cctyCFAS.s 			page 397


 14820              		.loc 1 361 45 view .LVU5238
 14821 4d4c 49C1E906 		shr	r9, 6	# tmp1255,
 14822              	# sieve_extend.c:362:                 index2 += step2;
 362:sieve_extend.c ****             }
 14823              		.loc 1 362 24 view .LVU5239
 14824 4d50 4C01D0   		add	rax, r10	# index2, step
 14825              	# sieve_extend.c:361:                 bitarray[wordindex(index2)] |= markmask(index2);
 361:sieve_extend.c ****                 index2 += step2;
 14826              		.loc 1 361 45 view .LVU5240
 14827 4d53 4B090CCC 		or	QWORD PTR [r12+r9*8], rcx	# *_695, tmp1258
 362:sieve_extend.c ****             }
 14828              		.loc 1 362 17 is_stmt 1 view .LVU5241
 360:sieve_extend.c ****                 bitarray[wordindex(index2)] |= markmask(index2);
 14829              		.loc 1 360 19 view .LVU5242
 14830 4d57 4939C7   		cmp	r15, rax	# block_stop, index2
 14831 4d5a 0F8248FB 		jb	.L1568	#,
 14831      FFFF
 361:sieve_extend.c ****                 index2 += step2;
 14832              		.loc 1 361 17 view .LVU5243
 14833              	# sieve_extend.c:361:                 bitarray[wordindex(index2)] |= markmask(index2);
 361:sieve_extend.c ****                 index2 += step2;
 14834              		.loc 1 361 45 is_stmt 0 view .LVU5244
 14835 4d60 4889C2   		mov	rdx, rax	# tmp1260, index2
 14836              	# sieve_extend.c:361:                 bitarray[wordindex(index2)] |= markmask(index2);
 361:sieve_extend.c ****                 index2 += step2;
 14837              		.loc 1 361 48 view .LVU5245
 14838 4d63 C442F9F7 		shlx	r14, r13, rax	# tmp1263, tmp1041, index2
 14838      F5
 14839              	# sieve_extend.c:361:                 bitarray[wordindex(index2)] |= markmask(index2);
 361:sieve_extend.c ****                 index2 += step2;
 14840              		.loc 1 361 45 view .LVU5246
 14841 4d68 48C1EA06 		shr	rdx, 6	# tmp1260,
 14842              	# sieve_extend.c:362:                 index2 += step2;
 362:sieve_extend.c ****             }
 14843              		.loc 1 362 24 view .LVU5247
 14844 4d6c 4C01D0   		add	rax, r10	# index2, step
 14845              	# sieve_extend.c:361:                 bitarray[wordindex(index2)] |= markmask(index2);
 361:sieve_extend.c ****                 index2 += step2;
 14846              		.loc 1 361 45 view .LVU5248
 14847 4d6f 4D0934D4 		or	QWORD PTR [r12+rdx*8], r14	# *_695, tmp1263
 362:sieve_extend.c ****             }
 14848              		.loc 1 362 17 is_stmt 1 view .LVU5249
 360:sieve_extend.c ****                 bitarray[wordindex(index2)] |= markmask(index2);
 14849              		.loc 1 360 19 view .LVU5250
 14850 4d73 4939C7   		cmp	r15, rax	# block_stop, index2
 14851 4d76 0F822CFB 		jb	.L1568	#,
 14851      FFFF
 361:sieve_extend.c ****                 index2 += step2;
 14852              		.loc 1 361 17 view .LVU5251
 14853              	# sieve_extend.c:361:                 bitarray[wordindex(index2)] |= markmask(index2);
 361:sieve_extend.c ****                 index2 += step2;
 14854              		.loc 1 361 45 is_stmt 0 view .LVU5252
 14855 4d7c 4889C7   		mov	rdi, rax	# tmp1265, index2
 14856              	# sieve_extend.c:361:                 bitarray[wordindex(index2)] |= markmask(index2);
 361:sieve_extend.c ****                 index2 += step2;
 14857              		.loc 1 361 48 view .LVU5253
 14858 4d7f C4C2F9F7 		shlx	rbx, r13, rax	# tmp1268, tmp1041, index2
GAS LISTING /tmp/cctyCFAS.s 			page 398


 14858      DD
 14859              	# sieve_extend.c:361:                 bitarray[wordindex(index2)] |= markmask(index2);
 361:sieve_extend.c ****                 index2 += step2;
 14860              		.loc 1 361 45 view .LVU5254
 14861 4d84 48C1EF06 		shr	rdi, 6	# tmp1265,
 14862              	# sieve_extend.c:362:                 index2 += step2;
 362:sieve_extend.c ****             }
 14863              		.loc 1 362 24 view .LVU5255
 14864 4d88 4C01D0   		add	rax, r10	# index2, step
 14865              	# sieve_extend.c:361:                 bitarray[wordindex(index2)] |= markmask(index2);
 361:sieve_extend.c ****                 index2 += step2;
 14866              		.loc 1 361 45 view .LVU5256
 14867 4d8b 49091CFC 		or	QWORD PTR [r12+rdi*8], rbx	# *_695, tmp1268
 362:sieve_extend.c ****             }
 14868              		.loc 1 362 17 is_stmt 1 view .LVU5257
 360:sieve_extend.c ****                 bitarray[wordindex(index2)] |= markmask(index2);
 14869              		.loc 1 360 19 view .LVU5258
 14870 4d8f 4939C7   		cmp	r15, rax	# block_stop, index2
 14871 4d92 0F8210FB 		jb	.L1568	#,
 14871      FFFF
 361:sieve_extend.c ****                 index2 += step2;
 14872              		.loc 1 361 17 view .LVU5259
 14873              	# sieve_extend.c:361:                 bitarray[wordindex(index2)] |= markmask(index2);
 361:sieve_extend.c ****                 index2 += step2;
 14874              		.loc 1 361 45 is_stmt 0 view .LVU5260
 14875 4d98 4989C1   		mov	r9, rax	# tmp1270, index2
 14876              	# sieve_extend.c:361:                 bitarray[wordindex(index2)] |= markmask(index2);
 361:sieve_extend.c ****                 index2 += step2;
 14877              		.loc 1 361 48 view .LVU5261
 14878 4d9b C4C2F9F7 		shlx	rcx, r13, rax	# tmp1273, tmp1041, index2
 14878      CD
 14879              	# sieve_extend.c:361:                 bitarray[wordindex(index2)] |= markmask(index2);
 361:sieve_extend.c ****                 index2 += step2;
 14880              		.loc 1 361 45 view .LVU5262
 14881 4da0 49C1E906 		shr	r9, 6	# tmp1270,
 14882              	# sieve_extend.c:362:                 index2 += step2;
 362:sieve_extend.c ****             }
 14883              		.loc 1 362 24 view .LVU5263
 14884 4da4 4C01D0   		add	rax, r10	# index2, step
 14885              	# sieve_extend.c:361:                 bitarray[wordindex(index2)] |= markmask(index2);
 361:sieve_extend.c ****                 index2 += step2;
 14886              		.loc 1 361 45 view .LVU5264
 14887 4da7 4B090CCC 		or	QWORD PTR [r12+r9*8], rcx	# *_695, tmp1273
 362:sieve_extend.c ****             }
 14888              		.loc 1 362 17 is_stmt 1 view .LVU5265
 360:sieve_extend.c ****                 bitarray[wordindex(index2)] |= markmask(index2);
 14889              		.loc 1 360 19 view .LVU5266
 14890 4dab 4939C7   		cmp	r15, rax	# block_stop, index2
 14891 4dae 0F82F4FA 		jb	.L1568	#,
 14891      FFFF
 361:sieve_extend.c ****                 index2 += step2;
 14892              		.loc 1 361 17 view .LVU5267
 14893              	# sieve_extend.c:361:                 bitarray[wordindex(index2)] |= markmask(index2);
 361:sieve_extend.c ****                 index2 += step2;
 14894              		.loc 1 361 45 is_stmt 0 view .LVU5268
 14895 4db4 4889C2   		mov	rdx, rax	# tmp1275, index2
 14896              	# sieve_extend.c:361:                 bitarray[wordindex(index2)] |= markmask(index2);
GAS LISTING /tmp/cctyCFAS.s 			page 399


 361:sieve_extend.c ****                 index2 += step2;
 14897              		.loc 1 361 48 view .LVU5269
 14898 4db7 C442F9F7 		shlx	r14, r13, rax	# tmp1278, tmp1041, index2
 14898      F5
 14899              	# sieve_extend.c:361:                 bitarray[wordindex(index2)] |= markmask(index2);
 361:sieve_extend.c ****                 index2 += step2;
 14900              		.loc 1 361 45 view .LVU5270
 14901 4dbc 48C1EA06 		shr	rdx, 6	# tmp1275,
 14902              	# sieve_extend.c:362:                 index2 += step2;
 362:sieve_extend.c ****             }
 14903              		.loc 1 362 24 view .LVU5271
 14904 4dc0 4C01D0   		add	rax, r10	# index2, step
 14905              	# sieve_extend.c:361:                 bitarray[wordindex(index2)] |= markmask(index2);
 361:sieve_extend.c ****                 index2 += step2;
 14906              		.loc 1 361 45 view .LVU5272
 14907 4dc3 4D0934D4 		or	QWORD PTR [r12+rdx*8], r14	# *_695, tmp1278
 362:sieve_extend.c ****             }
 14908              		.loc 1 362 17 is_stmt 1 view .LVU5273
 360:sieve_extend.c ****                 bitarray[wordindex(index2)] |= markmask(index2);
 14909              		.loc 1 360 19 view .LVU5274
 14910 4dc7 4939C7   		cmp	r15, rax	# block_stop, index2
 14911 4dca 0F8320FF 		jnb	.L772	#,
 14911      FFFF
 14912 4dd0 E9D3FAFF 		jmp	.L1568	#
 14912      FF
 14913              	.LVL1046:
 14914              		.p2align 4,,10
 14915 4dd5 0F1F00   		.p2align 3
 14916              	.L1592:
 360:sieve_extend.c ****                 bitarray[wordindex(index2)] |= markmask(index2);
 14917              		.loc 1 360 19 is_stmt 0 view .LVU5275
 14918              	.LBE595:
 14919              	.LBE626:
 14920              	.LBB627:
 14921              	.LBB619:
 14922              	.LBB617:
 14923              	.LBB615:
 14924              	.LBB613:
 14925              	.LBB609:
 212:sieve_extend.c ****    }
 14926              		.loc 1 212 7 is_stmt 1 view .LVU5276
 14927              	# sieve_extend.c:212:       *index_ptr |= (mask & chopmask(range_stop));
 212:sieve_extend.c ****    }
 14928              		.loc 1 212 27 is_stmt 0 view .LVU5277
 14929 4dd8 48237424 		and	rsi, QWORD PTR 112[rsp]	# tmp983, %sfp
 14929      70
 14930              	.LVL1047:
 14931              	# sieve_extend.c:212:       *index_ptr |= (mask & chopmask(range_stop));
 212:sieve_extend.c ****    }
 14932              		.loc 1 212 18 view .LVU5278
 14933 4ddd 490930   		or	QWORD PTR [r8], rsi	# *index_ptr_834, tmp983
 14934 4de0 E904FCFF 		jmp	.L791	#
 14934      FF
 14935              	.LVL1048:
 14936              		.p2align 4,,10
 14937 4de5 0F1F00   		.p2align 3
 14938              	.L765:
GAS LISTING /tmp/cctyCFAS.s 			page 400


 212:sieve_extend.c ****    }
 14939              		.loc 1 212 18 view .LVU5279
 14940              	.LBE609:
 14941              	.LBE613:
 14942              	.LBE615:
 14943              	.LBE617:
 14944              	.LBE619:
 14945              	.LBE627:
 14946              	.LBB628:
 14947              	.LBB599:
 125:sieve_extend.c **** }
 14948              		.loc 1 125 5 is_stmt 1 view .LVU5280
 125:sieve_extend.c **** }
 14949              		.loc 1 125 5 is_stmt 0 view .LVU5281
 14950              	.LBE599:
 14951              	.LBE628:
 892:sieve_extend.c ****     }
 14952              		.loc 1 892 9 is_stmt 1 view .LVU5282
 14953              	# sieve_extend.c:892:         start = prime * prime * 2 + prime * 2;
 892:sieve_extend.c ****     }
 14954              		.loc 1 892 35 is_stmt 0 view .LVU5283
 14955 4de8 4C8D5601 		lea	r10, 1[rsi]	# _491,
 14956 4dec 4C8D0C36 		lea	r9, [rsi+rsi]	# _1210,
 14957              	.LVL1049:
 14958              	# sieve_extend.c:892:         start = prime * prime * 2 + prime * 2;
 892:sieve_extend.c ****     }
 14959              		.loc 1 892 15 view .LVU5284
 14960 4df0 4C89D1   		mov	rcx, r10	# index, _491
 14961 4df3 490FAFC9 		imul	rcx, r9	# index, _1210
 14962              	.LVL1050:
 879:sieve_extend.c ****         step  = prime * 2 + 1;
 14963              		.loc 1 879 11 is_stmt 1 view .LVU5285
 14964 4df7 4939CF   		cmp	r15, rcx	# block_stop, index
 14965 4dfa 0F82F8F3 		jb	.L1566	#,
 14965      FFFF
 880:sieve_extend.c ****         if (step > 64) break;
 14966              		.loc 1 880 9 view .LVU5286
 14967              	# sieve_extend.c:880:         step  = prime * 2 + 1;
 880:sieve_extend.c ****         if (step > 64) break;
 14968              		.loc 1 880 15 is_stmt 0 view .LVU5287
 14969 4e00 49FFC1   		inc	r9	# step
 14970              	.LVL1051:
 881:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 14971              		.loc 1 881 9 is_stmt 1 view .LVU5288
 14972              	# sieve_extend.c:881:         if (step > 64) break;
 881:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 14973              		.loc 1 881 12 is_stmt 0 view .LVU5289
 14974 4e03 4983F940 		cmp	r9, 64	# step,
 14975 4e07 0F861BF5 		jbe	.L738	#,
 14975      FFFF
 14976 4e0d E946FCFF 		jmp	.L801	#
 14976      FF
 14977              	.LVL1052:
 14978              		.p2align 4,,10
 14979 4e12 660F1F44 		.p2align 3
 14979      0000
 14980              	.L760:
GAS LISTING /tmp/cctyCFAS.s 			page 401


 888:sieve_extend.c ****         if (start <= block_stop) setBitsTrue_race(bitarray, start1, start, step1, step, block_stop)
 14981              		.loc 1 888 41 is_stmt 1 view .LVU5290
 14982              	# sieve_extend.c:888:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 888:sieve_extend.c ****         if (start <= block_stop) setBitsTrue_race(bitarray, start1, start, step1, step, block_stop)
 14983              		.loc 1 888 61 is_stmt 0 view .LVU5291
 14984 4e18 498D043B 		lea	rax, [r11+rdi]	# _440,
 14985              	# sieve_extend.c:888:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 888:sieve_extend.c ****         if (start <= block_stop) setBitsTrue_race(bitarray, start1, start, step1, step, block_stop)
 14986              		.loc 1 888 102 view .LVU5292
 14987 4e1c 31D2     		xor	edx, edx	# tmp911
 14988              	# sieve_extend.c:888:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 888:sieve_extend.c ****         if (start <= block_stop) setBitsTrue_race(bitarray, start1, start, step1, step, block_stop)
 14989              		.loc 1 888 69 view .LVU5293
 14990 4e1e 4801C7   		add	rdi, rax	# tmp909, _440
 14991              	.LVL1053:
 14992              	# sieve_extend.c:888:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 888:sieve_extend.c ****         if (start <= block_stop) setBitsTrue_race(bitarray, start1, start, step1, step, block_stop)
 14993              		.loc 1 888 102 view .LVU5294
 14994 4e21 49F7F2   		div	r10	# step
 14995              	# sieve_extend.c:888:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 888:sieve_extend.c ****         if (start <= block_stop) setBitsTrue_race(bitarray, start1, start, step1, step, block_stop)
 14996              		.loc 1 888 47 view .LVU5295
 14997 4e24 4889F8   		mov	rax, rdi	# tmp909, tmp909
 14998 4e27 4829D0   		sub	rax, rdx	# tmp909, tmp911
 14999              	.LVL1054:
 888:sieve_extend.c ****         if (start <= block_stop) setBitsTrue_race(bitarray, start1, start, step1, step, block_stop)
 15000              		.loc 1 888 47 view .LVU5296
 15001 4e2a E9FAF5FF 		jmp	.L761	#
 15001      FF
 15002              	.LVL1055:
 15003              	.L1594:
 15004              	.LBB629:
 15005              	.LBB630:
 119:sieve_extend.c **** }
 15006              		.loc 1 119 4 is_stmt 1 view .LVU5297
 119:sieve_extend.c **** }
 15007              		.loc 1 119 4 is_stmt 0 view .LVU5298
 15008              	.LBE630:
 15009              	.LBE629:
 918:sieve_extend.c ****     }
 15010              		.loc 1 918 9 is_stmt 1 view .LVU5299
 15011              	# sieve_extend.c:918:         start = prime * prime * 2 + prime * 2;
 918:sieve_extend.c ****     }
 15012              		.loc 1 918 35 is_stmt 0 view .LVU5300
 15013 4e2f 4C8D5601 		lea	r10, 1[rsi]	# _491,
 15014              	# sieve_extend.c:918:         start = prime * prime * 2 + prime * 2;
 918:sieve_extend.c ****     }
 15015              		.loc 1 918 15 view .LVU5301
 15016 4e33 4C89D1   		mov	rcx, r10	# tmp1017, _491
 15017 4e36 480FAFCE 		imul	rcx, rsi	# tmp1017, index
 15018 4e3a 4801C9   		add	rcx, rcx	# tmp1018, tmp1017
 15019              	.LVL1056:
 15020 4e3d 0F1F00   		.p2align 4,,10
 15021              		.p2align 3
 15022              	.L1569:
 913:sieve_extend.c ****         step  = prime * 2 + 1;
 15023              		.loc 1 913 11 is_stmt 1 view .LVU5302
GAS LISTING /tmp/cctyCFAS.s 			page 402


 15024 4e40 4939CF   		cmp	r15, rcx	# block_stop, index
 15025 4e43 0F82AFF3 		jb	.L1566	#,
 15025      FFFF
 15026 4e49 0F1F8000 		.p2align 4,,10
 15026      000000
 15027              		.p2align 3
 15028              	.L786:
 914:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 15029              		.loc 1 914 9 view .LVU5303
 15030              	# sieve_extend.c:915:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 915:sieve_extend.c ****         setBitsTrue_smallRange(bitarray, start, step, block_stop);
 15031              		.loc 1 915 12 is_stmt 0 view .LVU5304
 15032 4e50 488B4424 		mov	rax, QWORD PTR 120[rsp]	# block_start, %sfp
 15032      78
 15033              	# sieve_extend.c:914:         step  = prime * 2 + 1;
 914:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 15034              		.loc 1 914 15 view .LVU5305
 15035 4e55 4C8D4436 		lea	r8, 1[rsi+rsi]	# step,
 15035      01
 15036              	.LVL1057:
 915:sieve_extend.c ****         setBitsTrue_smallRange(bitarray, start, step, block_stop);
 15037              		.loc 1 915 9 is_stmt 1 view .LVU5306
 15038              	# sieve_extend.c:915:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 915:sieve_extend.c ****         setBitsTrue_smallRange(bitarray, start, step, block_stop);
 15039              		.loc 1 915 12 is_stmt 0 view .LVU5307
 15040 4e5a 4939C2   		cmp	r10, rax	# _491, block_start
 15041 4e5d 770F     		ja	.L795	#,
 915:sieve_extend.c ****         setBitsTrue_smallRange(bitarray, start, step, block_stop);
 15042              		.loc 1 915 41 is_stmt 1 view .LVU5308
 15043              	# sieve_extend.c:915:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 915:sieve_extend.c ****         setBitsTrue_smallRange(bitarray, start, step, block_stop);
 15044              		.loc 1 915 61 is_stmt 0 view .LVU5309
 15045 4e5f 4801F0   		add	rax, rsi	# _492, index
 15046              	# sieve_extend.c:915:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 915:sieve_extend.c ****         setBitsTrue_smallRange(bitarray, start, step, block_stop);
 15047              		.loc 1 915 102 view .LVU5310
 15048 4e62 31D2     		xor	edx, edx	# tmp996
 15049              	# sieve_extend.c:915:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 915:sieve_extend.c ****         setBitsTrue_smallRange(bitarray, start, step, block_stop);
 15050              		.loc 1 915 69 view .LVU5311
 15051 4e64 488D0C30 		lea	rcx, [rax+rsi]	# tmp994,
 15052              	# sieve_extend.c:915:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 915:sieve_extend.c ****         setBitsTrue_smallRange(bitarray, start, step, block_stop);
 15053              		.loc 1 915 102 view .LVU5312
 15054 4e68 49F7F0   		div	r8	# step
 15055              	.LVL1058:
 15056              	# sieve_extend.c:915:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 915:sieve_extend.c ****         setBitsTrue_smallRange(bitarray, start, step, block_stop);
 15057              		.loc 1 915 47 view .LVU5313
 15058 4e6b 4829D1   		sub	rcx, rdx	# index, tmp996
 15059              	.LVL1059:
 15060              	.L795:
 15061              	.LBB632:
 15062              	.LBB633:
 321:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15063              		.loc 1 321 50 is_stmt 1 view .LVU5314
 15064              	# sieve_extend.c:321:     for (register counter_t index = range_start; index <= range_stop; index +
GAS LISTING /tmp/cctyCFAS.s 			page 403


 321:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15065              		.loc 1 321 5 is_stmt 0 view .LVU5315
 15066 4e6e 4C39F9   		cmp	rcx, r15	# index, block_stop
 15067 4e71 0F87D900 		ja	.L799	#,
 15067      0000
 15068              	.L796:
 322:sieve_extend.c ****     }
 15069              		.loc 1 322 9 is_stmt 1 view .LVU5316
 15070              	# sieve_extend.c:322:         bitarray[wordindex(index)] |= markmask(index);
 322:sieve_extend.c ****     }
 15071              		.loc 1 322 36 is_stmt 0 view .LVU5317
 15072 4e77 4889CE   		mov	rsi, rcx	# tmp998, index
 15073              	# sieve_extend.c:322:         bitarray[wordindex(index)] |= markmask(index);
 322:sieve_extend.c ****     }
 15074              		.loc 1 322 39 view .LVU5318
 15075 4e7a C4C2F1F7 		shlx	rdi, r13, rcx	# tmp1001, tmp1041, index
 15075      FD
 15076              	# sieve_extend.c:322:         bitarray[wordindex(index)] |= markmask(index);
 322:sieve_extend.c ****     }
 15077              		.loc 1 322 36 view .LVU5319
 15078 4e7f 48C1EE06 		shr	rsi, 6	# tmp998,
 15079              	# sieve_extend.c:321:     for (register counter_t index = range_start; index <= range_stop; index +
 321:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15080              		.loc 1 321 77 view .LVU5320
 15081 4e83 4C01C1   		add	rcx, r8	# index, step
 15082              	# sieve_extend.c:322:         bitarray[wordindex(index)] |= markmask(index);
 322:sieve_extend.c ****     }
 15083              		.loc 1 322 36 view .LVU5321
 15084 4e86 49093CF4 		or	QWORD PTR [r12+rsi*8], rdi	# *_499, tmp1001
 321:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15085              		.loc 1 321 71 is_stmt 1 view .LVU5322
 321:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15086              		.loc 1 321 50 view .LVU5323
 15087              	# sieve_extend.c:321:     for (register counter_t index = range_start; index <= range_stop; index +
 321:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15088              		.loc 1 321 5 is_stmt 0 view .LVU5324
 15089 4e8a 4939CF   		cmp	r15, rcx	# block_stop, index
 15090 4e8d 0F82BD00 		jb	.L799	#,
 15090      0000
 322:sieve_extend.c ****     }
 15091              		.loc 1 322 9 is_stmt 1 view .LVU5325
 15092              	# sieve_extend.c:322:         bitarray[wordindex(index)] |= markmask(index);
 322:sieve_extend.c ****     }
 15093              		.loc 1 322 36 is_stmt 0 view .LVU5326
 15094 4e93 4989CB   		mov	r11, rcx	# tmp1143, index
 15095              	# sieve_extend.c:322:         bitarray[wordindex(index)] |= markmask(index);
 322:sieve_extend.c ****     }
 15096              		.loc 1 322 39 view .LVU5327
 15097 4e96 C442F1F7 		shlx	r14, r13, rcx	# tmp1146, tmp1041, index
 15097      F5
 15098              	# sieve_extend.c:322:         bitarray[wordindex(index)] |= markmask(index);
 322:sieve_extend.c ****     }
 15099              		.loc 1 322 36 view .LVU5328
 15100 4e9b 49C1EB06 		shr	r11, 6	# tmp1143,
 15101              	# sieve_extend.c:321:     for (register counter_t index = range_start; index <= range_stop; index +
 321:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15102              		.loc 1 321 77 view .LVU5329
GAS LISTING /tmp/cctyCFAS.s 			page 404


 15103 4e9f 4C01C1   		add	rcx, r8	# index, step
 15104              	# sieve_extend.c:322:         bitarray[wordindex(index)] |= markmask(index);
 322:sieve_extend.c ****     }
 15105              		.loc 1 322 36 view .LVU5330
 15106 4ea2 4F0934DC 		or	QWORD PTR [r12+r11*8], r14	# *_499, tmp1146
 321:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15107              		.loc 1 321 71 is_stmt 1 view .LVU5331
 321:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15108              		.loc 1 321 50 view .LVU5332
 15109              	# sieve_extend.c:321:     for (register counter_t index = range_start; index <= range_stop; index +
 321:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15110              		.loc 1 321 5 is_stmt 0 view .LVU5333
 15111 4ea6 4939CF   		cmp	r15, rcx	# block_stop, index
 15112 4ea9 0F82A100 		jb	.L799	#,
 15112      0000
 322:sieve_extend.c ****     }
 15113              		.loc 1 322 9 is_stmt 1 view .LVU5334
 15114              	# sieve_extend.c:322:         bitarray[wordindex(index)] |= markmask(index);
 322:sieve_extend.c ****     }
 15115              		.loc 1 322 36 is_stmt 0 view .LVU5335
 15116 4eaf 4989C9   		mov	r9, rcx	# tmp1148, index
 15117              	# sieve_extend.c:322:         bitarray[wordindex(index)] |= markmask(index);
 322:sieve_extend.c ****     }
 15118              		.loc 1 322 39 view .LVU5336
 15119 4eb2 C4C2F1F7 		shlx	rbx, r13, rcx	# tmp1151, tmp1041, index
 15119      DD
 15120              	# sieve_extend.c:322:         bitarray[wordindex(index)] |= markmask(index);
 322:sieve_extend.c ****     }
 15121              		.loc 1 322 36 view .LVU5337
 15122 4eb7 49C1E906 		shr	r9, 6	# tmp1148,
 15123              	# sieve_extend.c:321:     for (register counter_t index = range_start; index <= range_stop; index +
 321:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15124              		.loc 1 321 77 view .LVU5338
 15125 4ebb 4C01C1   		add	rcx, r8	# index, step
 15126              	# sieve_extend.c:322:         bitarray[wordindex(index)] |= markmask(index);
 322:sieve_extend.c ****     }
 15127              		.loc 1 322 36 view .LVU5339
 15128 4ebe 4B091CCC 		or	QWORD PTR [r12+r9*8], rbx	# *_499, tmp1151
 321:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15129              		.loc 1 321 71 is_stmt 1 view .LVU5340
 321:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15130              		.loc 1 321 50 view .LVU5341
 15131              	# sieve_extend.c:321:     for (register counter_t index = range_start; index <= range_stop; index +
 321:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15132              		.loc 1 321 5 is_stmt 0 view .LVU5342
 15133 4ec2 4939CF   		cmp	r15, rcx	# block_stop, index
 15134 4ec5 0F828500 		jb	.L799	#,
 15134      0000
 322:sieve_extend.c ****     }
 15135              		.loc 1 322 9 is_stmt 1 view .LVU5343
 15136              	# sieve_extend.c:322:         bitarray[wordindex(index)] |= markmask(index);
 322:sieve_extend.c ****     }
 15137              		.loc 1 322 36 is_stmt 0 view .LVU5344
 15138 4ecb 4889C8   		mov	rax, rcx	# tmp1153, index
 15139              	# sieve_extend.c:322:         bitarray[wordindex(index)] |= markmask(index);
 322:sieve_extend.c ****     }
 15140              		.loc 1 322 39 view .LVU5345
GAS LISTING /tmp/cctyCFAS.s 			page 405


 15141 4ece C4C2F1F7 		shlx	rdx, r13, rcx	# tmp1156, tmp1041, index
 15141      D5
 15142              	# sieve_extend.c:322:         bitarray[wordindex(index)] |= markmask(index);
 322:sieve_extend.c ****     }
 15143              		.loc 1 322 36 view .LVU5346
 15144 4ed3 48C1E806 		shr	rax, 6	# tmp1153,
 15145              	# sieve_extend.c:321:     for (register counter_t index = range_start; index <= range_stop; index +
 321:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15146              		.loc 1 321 77 view .LVU5347
 15147 4ed7 4C01C1   		add	rcx, r8	# index, step
 15148              	# sieve_extend.c:322:         bitarray[wordindex(index)] |= markmask(index);
 322:sieve_extend.c ****     }
 15149              		.loc 1 322 36 view .LVU5348
 15150 4eda 490914C4 		or	QWORD PTR [r12+rax*8], rdx	# *_499, tmp1156
 321:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15151              		.loc 1 321 71 is_stmt 1 view .LVU5349
 321:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15152              		.loc 1 321 50 view .LVU5350
 15153              	# sieve_extend.c:321:     for (register counter_t index = range_start; index <= range_stop; index +
 321:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15154              		.loc 1 321 5 is_stmt 0 view .LVU5351
 15155 4ede 4939CF   		cmp	r15, rcx	# block_stop, index
 15156 4ee1 726D     		jb	.L799	#,
 322:sieve_extend.c ****     }
 15157              		.loc 1 322 9 is_stmt 1 view .LVU5352
 15158              	# sieve_extend.c:322:         bitarray[wordindex(index)] |= markmask(index);
 322:sieve_extend.c ****     }
 15159              		.loc 1 322 36 is_stmt 0 view .LVU5353
 15160 4ee3 4889CE   		mov	rsi, rcx	# tmp1158, index
 15161              	# sieve_extend.c:322:         bitarray[wordindex(index)] |= markmask(index);
 322:sieve_extend.c ****     }
 15162              		.loc 1 322 39 view .LVU5354
 15163 4ee6 C4C2F1F7 		shlx	rdi, r13, rcx	# tmp1161, tmp1041, index
 15163      FD
 15164              	# sieve_extend.c:322:         bitarray[wordindex(index)] |= markmask(index);
 322:sieve_extend.c ****     }
 15165              		.loc 1 322 36 view .LVU5355
 15166 4eeb 48C1EE06 		shr	rsi, 6	# tmp1158,
 15167              	# sieve_extend.c:321:     for (register counter_t index = range_start; index <= range_stop; index +
 321:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15168              		.loc 1 321 77 view .LVU5356
 15169 4eef 4C01C1   		add	rcx, r8	# index, step
 15170              	# sieve_extend.c:322:         bitarray[wordindex(index)] |= markmask(index);
 322:sieve_extend.c ****     }
 15171              		.loc 1 322 36 view .LVU5357
 15172 4ef2 49093CF4 		or	QWORD PTR [r12+rsi*8], rdi	# *_499, tmp1161
 321:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15173              		.loc 1 321 71 is_stmt 1 view .LVU5358
 321:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15174              		.loc 1 321 50 view .LVU5359
 15175              	# sieve_extend.c:321:     for (register counter_t index = range_start; index <= range_stop; index +
 321:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15176              		.loc 1 321 5 is_stmt 0 view .LVU5360
 15177 4ef6 4939CF   		cmp	r15, rcx	# block_stop, index
 15178 4ef9 7255     		jb	.L799	#,
 322:sieve_extend.c ****     }
 15179              		.loc 1 322 9 is_stmt 1 view .LVU5361
GAS LISTING /tmp/cctyCFAS.s 			page 406


 15180              	# sieve_extend.c:322:         bitarray[wordindex(index)] |= markmask(index);
 322:sieve_extend.c ****     }
 15181              		.loc 1 322 36 is_stmt 0 view .LVU5362
 15182 4efb 4989CB   		mov	r11, rcx	# tmp1163, index
 15183              	# sieve_extend.c:322:         bitarray[wordindex(index)] |= markmask(index);
 322:sieve_extend.c ****     }
 15184              		.loc 1 322 39 view .LVU5363
 15185 4efe C442F1F7 		shlx	r14, r13, rcx	# tmp1166, tmp1041, index
 15185      F5
 15186              	# sieve_extend.c:322:         bitarray[wordindex(index)] |= markmask(index);
 322:sieve_extend.c ****     }
 15187              		.loc 1 322 36 view .LVU5364
 15188 4f03 49C1EB06 		shr	r11, 6	# tmp1163,
 15189              	# sieve_extend.c:321:     for (register counter_t index = range_start; index <= range_stop; index +
 321:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15190              		.loc 1 321 77 view .LVU5365
 15191 4f07 4C01C1   		add	rcx, r8	# index, step
 15192              	# sieve_extend.c:322:         bitarray[wordindex(index)] |= markmask(index);
 322:sieve_extend.c ****     }
 15193              		.loc 1 322 36 view .LVU5366
 15194 4f0a 4F0934DC 		or	QWORD PTR [r12+r11*8], r14	# *_499, tmp1166
 321:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15195              		.loc 1 321 71 is_stmt 1 view .LVU5367
 321:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15196              		.loc 1 321 50 view .LVU5368
 15197              	# sieve_extend.c:321:     for (register counter_t index = range_start; index <= range_stop; index +
 321:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15198              		.loc 1 321 5 is_stmt 0 view .LVU5369
 15199 4f0e 4939CF   		cmp	r15, rcx	# block_stop, index
 15200 4f11 723D     		jb	.L799	#,
 322:sieve_extend.c ****     }
 15201              		.loc 1 322 9 is_stmt 1 view .LVU5370
 15202              	# sieve_extend.c:322:         bitarray[wordindex(index)] |= markmask(index);
 322:sieve_extend.c ****     }
 15203              		.loc 1 322 36 is_stmt 0 view .LVU5371
 15204 4f13 4989C9   		mov	r9, rcx	# tmp1168, index
 15205              	# sieve_extend.c:322:         bitarray[wordindex(index)] |= markmask(index);
 322:sieve_extend.c ****     }
 15206              		.loc 1 322 39 view .LVU5372
 15207 4f16 C4C2F1F7 		shlx	rbx, r13, rcx	# tmp1171, tmp1041, index
 15207      DD
 15208              	# sieve_extend.c:322:         bitarray[wordindex(index)] |= markmask(index);
 322:sieve_extend.c ****     }
 15209              		.loc 1 322 36 view .LVU5373
 15210 4f1b 49C1E906 		shr	r9, 6	# tmp1168,
 15211              	# sieve_extend.c:321:     for (register counter_t index = range_start; index <= range_stop; index +
 321:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15212              		.loc 1 321 77 view .LVU5374
 15213 4f1f 4C01C1   		add	rcx, r8	# index, step
 15214              	# sieve_extend.c:322:         bitarray[wordindex(index)] |= markmask(index);
 322:sieve_extend.c ****     }
 15215              		.loc 1 322 36 view .LVU5375
 15216 4f22 4B091CCC 		or	QWORD PTR [r12+r9*8], rbx	# *_499, tmp1171
 321:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15217              		.loc 1 321 71 is_stmt 1 view .LVU5376
 321:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15218              		.loc 1 321 50 view .LVU5377
GAS LISTING /tmp/cctyCFAS.s 			page 407


 15219              	# sieve_extend.c:321:     for (register counter_t index = range_start; index <= range_stop; index +
 321:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15220              		.loc 1 321 5 is_stmt 0 view .LVU5378
 15221 4f26 4939CF   		cmp	r15, rcx	# block_stop, index
 15222 4f29 7225     		jb	.L799	#,
 322:sieve_extend.c ****     }
 15223              		.loc 1 322 9 is_stmt 1 view .LVU5379
 15224              	# sieve_extend.c:322:         bitarray[wordindex(index)] |= markmask(index);
 322:sieve_extend.c ****     }
 15225              		.loc 1 322 36 is_stmt 0 view .LVU5380
 15226 4f2b 4889C8   		mov	rax, rcx	# tmp1173, index
 15227              	# sieve_extend.c:322:         bitarray[wordindex(index)] |= markmask(index);
 322:sieve_extend.c ****     }
 15228              		.loc 1 322 39 view .LVU5381
 15229 4f2e C4C2F1F7 		shlx	rdx, r13, rcx	# tmp1176, tmp1041, index
 15229      D5
 15230              	# sieve_extend.c:322:         bitarray[wordindex(index)] |= markmask(index);
 322:sieve_extend.c ****     }
 15231              		.loc 1 322 36 view .LVU5382
 15232 4f33 48C1E806 		shr	rax, 6	# tmp1173,
 15233              	# sieve_extend.c:321:     for (register counter_t index = range_start; index <= range_stop; index +
 321:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15234              		.loc 1 321 77 view .LVU5383
 15235 4f37 4C01C1   		add	rcx, r8	# index, step
 15236              	# sieve_extend.c:322:         bitarray[wordindex(index)] |= markmask(index);
 322:sieve_extend.c ****     }
 15237              		.loc 1 322 36 view .LVU5384
 15238 4f3a 490914C4 		or	QWORD PTR [r12+rax*8], rdx	# *_499, tmp1176
 321:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15239              		.loc 1 321 71 is_stmt 1 view .LVU5385
 321:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15240              		.loc 1 321 50 view .LVU5386
 15241              	# sieve_extend.c:321:     for (register counter_t index = range_start; index <= range_stop; index +
 321:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15242              		.loc 1 321 5 is_stmt 0 view .LVU5387
 15243 4f3e 4939CF   		cmp	r15, rcx	# block_stop, index
 15244 4f41 0F8330FF 		jnb	.L796	#,
 15244      FFFF
 15245 4f47 660F1F84 		.p2align 4,,10
 15245      00000000 
 15245      00
 15246              		.p2align 3
 15247              	.L799:
 321:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15248              		.loc 1 321 5 view .LVU5388
 15249              	.LBE633:
 15250              	.LBE632:
 917:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 15251              		.loc 1 917 9 is_stmt 1 view .LVU5389
 15252              	.LBB634:
 15253              	.LBI629:
 102:sieve_extend.c ****     // #pragma ivdep
 15254              		.loc 1 102 25 view .LVU5390
 15255              	.LBB631:
 107:sieve_extend.c ****    bitshift_t index_bit  = bitindex_calc(index);
 15256              		.loc 1 107 4 view .LVU5391
 108:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
GAS LISTING /tmp/cctyCFAS.s 			page 408


 15257              		.loc 1 108 4 view .LVU5392
 15258              	# sieve_extend.c:107:    register counter_t index_word = wordindex(index);
 107:sieve_extend.c ****    bitshift_t index_bit  = bitindex_calc(index);
 15259              		.loc 1 107 23 is_stmt 0 view .LVU5393
 15260 4f50 4C89D6   		mov	rsi, r10	# index_word, _491
 15261 4f53 48C1EE06 		shr	rsi, 6	# index_word,
 15262              	# sieve_extend.c:109:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 109:sieve_extend.c ****    index += distance;
 15263              		.loc 1 109 89 view .LVU5394
 15264 4f57 498B3CF4 		mov	rdi, QWORD PTR [r12+rsi*8]	# *_814, *_814
 15265              	# sieve_extend.c:108:    bitshift_t index_bit  = bitindex_calc(index);
 108:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 15266              		.loc 1 108 15 view .LVU5395
 15267 4f5b 4D89D0   		mov	r8, r10	# index_bit, _491
 15268              	.LVL1060:
 108:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 15269              		.loc 1 108 15 view .LVU5396
 15270 4f5e 4183E03F 		and	r8d, 63	# index_bit,
 15271              	.LVL1061:
 109:sieve_extend.c ****    index += distance;
 15272              		.loc 1 109 4 is_stmt 1 view .LVU5397
 15273              	# sieve_extend.c:109:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 109:sieve_extend.c ****    index += distance;
 15274              		.loc 1 109 25 is_stmt 0 view .LVU5398
 15275 4f62 4531F6   		xor	r14d, r14d	# distance
 15276              	# sieve_extend.c:109:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 109:sieve_extend.c ****    index += distance;
 15277              		.loc 1 109 89 view .LVU5399
 15278 4f65 C462BBF7 		shrx	r11, rdi, r8	# tmp1005, *_814, index_bit
 15278      DF
 15279              	# sieve_extend.c:109:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 109:sieve_extend.c ****    index += distance;
 15280              		.loc 1 109 66 view .LVU5400
 15281 4f6a 49F7D3   		not	r11	# tmp1007
 15282              	# sieve_extend.c:109:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 109:sieve_extend.c ****    index += distance;
 15283              		.loc 1 109 25 view .LVU5401
 15284 4f6d F34D0FBC 		tzcnt	r14, r11	# distance, tmp1007
 15284      F3
 15285              	.LVL1062:
 110:sieve_extend.c ****    distance += index_bit;
 15286              		.loc 1 110 4 is_stmt 1 view .LVU5402
 15287              	# sieve_extend.c:109:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 109:sieve_extend.c ****    index += distance;
 15288              		.loc 1 109 76 is_stmt 0 view .LVU5403
 15289 4f72 488D0CF5 		lea	rcx, 0[0+rsi*8]	# _813,
 15289      00000000 
 15290              	# sieve_extend.c:110:    index += distance;
 110:sieve_extend.c ****    distance += index_bit;
 15291              		.loc 1 110 10 view .LVU5404
 15292 4f7a 4B8D3432 		lea	rsi, [r10+r14]	# index,
 15293              	.LVL1063:
 111:sieve_extend.c **** 
 15294              		.loc 1 111 4 is_stmt 1 view .LVU5405
 113:sieve_extend.c ****        index_word++;
 15295              		.loc 1 113 4 view .LVU5406
 113:sieve_extend.c ****        index_word++;
GAS LISTING /tmp/cctyCFAS.s 			page 409


 15296              		.loc 1 113 10 view .LVU5407
 15297              	# sieve_extend.c:111:    distance += index_bit;
 111:sieve_extend.c **** 
 15298              		.loc 1 111 13 is_stmt 0 view .LVU5408
 15299 4f7e 4D01C6   		add	r14, r8	# distance, index_bit
 15300              	.LVL1064:
 15301              	# sieve_extend.c:113:    while (distance == WORD_SIZE_bitshift) { // to prevent a bug from optimzer
 113:sieve_extend.c ****        index_word++;
 15302              		.loc 1 113 10 view .LVU5409
 15303 4f81 4983FE40 		cmp	r14, 64	# distance,
 15304 4f85 0F85A4FE 		jne	.L1594	#,
 15304      FFFF
 15305              	.LVL1065:
 114:sieve_extend.c ****        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 15306              		.loc 1 114 8 is_stmt 1 view .LVU5410
 115:sieve_extend.c ****        index += distance;
 15307              		.loc 1 115 8 view .LVU5411
 15308              	# sieve_extend.c:115:        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 115:sieve_extend.c ****        index += distance;
 15309              		.loc 1 115 48 is_stmt 0 view .LVU5412
 15310 4f8b 4D8B4C0C 		mov	r9, QWORD PTR 8[r12+rcx]	# *_826, *_826
 15310      08
 15311              	# sieve_extend.c:115:        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 115:sieve_extend.c ****        index += distance;
 15312              		.loc 1 115 17 view .LVU5413
 15313 4f90 31DB     		xor	ebx, ebx	# distance
 15314              	# sieve_extend.c:115:        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 115:sieve_extend.c ****        index += distance;
 15315              		.loc 1 115 48 view .LVU5414
 15316 4f92 49F7D1   		not	r9	# tmp1010
 15317              	.LVL1066:
 116:sieve_extend.c ****    }
 15318              		.loc 1 116 8 is_stmt 1 view .LVU5415
 15319              	# sieve_extend.c:115:        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 115:sieve_extend.c ****        index += distance;
 15320              		.loc 1 115 17 is_stmt 0 view .LVU5416
 15321 4f95 F3490FBC 		tzcnt	rbx, r9	# distance, tmp1010
 15321      D9
 15322              	.LVL1067:
 15323              	# sieve_extend.c:116:        index += distance;
 116:sieve_extend.c ****    }
 15324              		.loc 1 116 14 view .LVU5417
 15325 4f9a 4801DE   		add	rsi, rbx	# index, distance
 15326              	.LVL1068:
 113:sieve_extend.c ****        index_word++;
 15327              		.loc 1 113 10 is_stmt 1 view .LVU5418
 119:sieve_extend.c **** }
 15328              		.loc 1 119 4 view .LVU5419
 119:sieve_extend.c **** }
 15329              		.loc 1 119 4 is_stmt 0 view .LVU5420
 15330              	.LBE631:
 15331              	.LBE634:
 918:sieve_extend.c ****     }
 15332              		.loc 1 918 9 is_stmt 1 view .LVU5421
 15333              	# sieve_extend.c:918:         start = prime * prime * 2 + prime * 2;
 918:sieve_extend.c ****     }
 15334              		.loc 1 918 35 is_stmt 0 view .LVU5422
GAS LISTING /tmp/cctyCFAS.s 			page 410


 15335 4f9d 4C8D5601 		lea	r10, 1[rsi]	# _491,
 15336              	# sieve_extend.c:918:         start = prime * prime * 2 + prime * 2;
 918:sieve_extend.c ****     }
 15337              		.loc 1 918 15 view .LVU5423
 15338 4fa1 4C89D1   		mov	rcx, r10	# tmp1015, _491
 15339 4fa4 480FAFCE 		imul	rcx, rsi	# tmp1015, index
 15340 4fa8 4801C9   		add	rcx, rcx	# index
 15341              	.LVL1069:
 913:sieve_extend.c ****         step  = prime * 2 + 1;
 15342              		.loc 1 913 11 is_stmt 1 view .LVU5424
 15343 4fab 4939CF   		cmp	r15, rcx	# block_stop, index
 15344 4fae 0F839CFE 		jnb	.L786	#,
 15344      FFFF
 15345 4fb4 488B4424 		mov	rax, QWORD PTR 80[rsp]	# <retval>, %sfp
 15345      50
 15346 4fb9 488B4008 		mov	rax, QWORD PTR 8[rax]	# _8, sieve_89->bits
 15347 4fbd E90EEEFF 		jmp	.L725	#
 15347      FF
 15348              	.LVL1070:
 15349              	.L1574:
 913:sieve_extend.c ****         step  = prime * 2 + 1;
 15350              		.loc 1 913 11 is_stmt 0 view .LVU5425
 15351 4fc2 4C8B7C24 		mov	r15, QWORD PTR 80[rsp]	# <retval>, %sfp
 15351      50
 15352 4fc7 48894C24 		mov	QWORD PTR 64[rsp], rcx	# %sfp, block$16
 15352      40
 15353 4fcc 4D8B7708 		mov	r14, QWORD PTR 8[r15]	# prephitmp_1899, sieve_89->bits
 15354              	.LVL1071:
 913:sieve_extend.c ****         step  = prime * 2 + 1;
 15355              		.loc 1 913 11 view .LVU5426
 15356 4fd0 488B5424 		mov	rdx, QWORD PTR 120[rsp]	# patternsize_bits, %sfp
 15356      78
 15357 4fd5 4C897424 		mov	QWORD PTR 104[rsp], r14	# %sfp, prephitmp_1899
 15357      68
 15358              	.LVL1072:
 913:sieve_extend.c ****         step  = prime * 2 + 1;
 15359              		.loc 1 913 11 view .LVU5427
 15360              	.LBE637:
 15361              	.LBE644:
 15362              	.LBB645:
 15363              	.LBB536:
 15364              	.LBB533:
 15365              	# sieve_extend.c:952:         if (range_stop > block_stop) return block; //range_stop = block_stop;
 952:sieve_extend.c **** 
 15366              		.loc 1 952 12 view .LVU5428
 15367 4fda 488B7424 		mov	rsi, QWORD PTR 88[rsp]	# block$pattern_start, %sfp
 15367      58
 15368              	.LVL1073:
 952:sieve_extend.c **** 
 15369              		.loc 1 952 12 view .LVU5429
 15370 4fdf E933E8FF 		jmp	.L669	#
 15370      FF
 15371              	.LVL1074:
 15372              	.L805:
 15373              	.LBB526:
 15374              	.LBB506:
 15375              	# sieve_extend.c:249: 	register bitword_t pattern = SAFE_SHIFTBIT;
GAS LISTING /tmp/cctyCFAS.s 			page 411


 249:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize += patternsize) patte
 15376              		.loc 1 249 21 view .LVU5430
 15377 4fe4 B9010000 		mov	ecx, 1	# pattern,
 15377      00
 15378 4fe9 E982DFFF 		jmp	.L675	#
 15378      FF
 15379              	.LVL1075:
 15380              	.L717:
 249:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize += patternsize) patte
 15381              		.loc 1 249 21 view .LVU5431
 15382              	.LBE506:
 15383              	.LBE526:
 15384              	.LBE533:
 15385              	.LBE536:
 15386              	.LBE645:
 15387              	.LBB646:
 15388              	.LBB542:
 848:sieve_extend.c **** }
 15389              		.loc 1 848 37 is_stmt 1 view .LVU5432
 15390 4fee E83DC0FF 		call	extendSieve_aligned	#
 15390      FF
 15391              	.LVL1076:
 848:sieve_extend.c **** }
 15392              		.loc 1 848 37 is_stmt 0 view .LVU5433
 15393 4ff3 E954E8FF 		jmp	.L715	#
 15393      FF
 15394              	.LVL1077:
 15395              	.L1584:
 846:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 15396              		.loc 1 846 37 is_stmt 1 view .LVU5434
 15397 4ff8 E833C5FF 		call	extendSieve_shiftleft	#
 15397      FF
 15398              	.LVL1078:
 846:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 15399              		.loc 1 846 37 is_stmt 0 view .LVU5435
 15400 4ffd E94AE8FF 		jmp	.L715	#
 15400      FF
 15401              	.LVL1079:
 15402              	.L1572:
 846:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 15403              		.loc 1 846 37 view .LVU5436
 15404              	.LBE542:
 15405              	.LBE646:
 15406              	.LBB647:
 15407              	.LBB537:
 15408              	# sieve_extend.c:932:     register counter_t prime   = 0;
 932:sieve_extend.c ****     counter_t patternsize_bits = 1;
 15409              		.loc 1 932 24 view .LVU5437
 15410 5002 48C74424 		mov	QWORD PTR 64[rsp], 0	# %sfp,
 15410      40000000 
 15410      00
 15411              	# sieve_extend.c:937:     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 
 937:sieve_extend.c **** 
 15412              		.loc 1 937 18 view .LVU5438
 15413 500b 31F6     		xor	esi, esi	# block$pattern_start
 15414 500d 31D2     		xor	edx, edx	# block$pattern_size
 15415              	.LVL1080:
GAS LISTING /tmp/cctyCFAS.s 			page 412


 937:sieve_extend.c **** 
 15416              		.loc 1 937 18 view .LVU5439
 15417 500f E9B6E1FF 		jmp	.L662	#
 15417      FF
 15418              	.LVL1081:
 15419              	.L1593:
 937:sieve_extend.c **** 
 15420              		.loc 1 937 18 view .LVU5440
 15421              	.LBE537:
 15422              	.LBE647:
 15423              	.LBB648:
 15424              	.LBB638:
 15425              	.LBB635:
 15426              	.LBB622:
 119:sieve_extend.c **** }
 15427              		.loc 1 119 4 is_stmt 1 view .LVU5441
 119:sieve_extend.c **** }
 15428              		.loc 1 119 4 is_stmt 0 view .LVU5442
 15429              	.LBE622:
 15430              	.LBE635:
 910:sieve_extend.c ****     }
 15431              		.loc 1 910 9 is_stmt 1 view .LVU5443
 15432              	# sieve_extend.c:910:         start = prime * prime * 2 + prime * 2;
 910:sieve_extend.c ****     }
 15433              		.loc 1 910 35 is_stmt 0 view .LVU5444
 15434 5014 4C8D5601 		lea	r10, 1[rsi]	# _491,
 15435              	# sieve_extend.c:910:         start = prime * prime * 2 + prime * 2;
 910:sieve_extend.c ****     }
 15436              		.loc 1 910 15 view .LVU5445
 15437 5018 4C89D1   		mov	rcx, r10	# tmp991, _491
 15438 501b 480FAFCE 		imul	rcx, rsi	# tmp991, index
 15439 501f 4801C9   		add	rcx, rcx	# tmp992, tmp991
 15440              	.LVL1082:
 904:sieve_extend.c ****         step  = prime * 2 + 1;
 15441              		.loc 1 904 11 is_stmt 1 view .LVU5446
 15442 5022 4939CF   		cmp	r15, rcx	# block_stop, index
 15443 5025 0F832DFA 		jnb	.L801	#,
 15443      FFFF
 15444 502b E9C8F1FF 		jmp	.L1566	#
 15444      FF
 15445              	.LBE638:
 15446              	.LBE648:
 15447              		.cfi_endproc
 15448              	.LFE77:
 15450              		.p2align 4
 15452              	tune_benchmark:
 15453              	.LVL1083:
 15454              	.LFB84:
1097:sieve_extend.c **** 
1098:sieve_extend.c **** static void tune_benchmark(tuning_result_type* tuning_result, counter_t tuning_result_index) {
 15455              		.loc 1 1098 94 view -0
 15456              		.cfi_startproc
 15457              		.loc 1 1098 94 is_stmt 0 view .LVU5448
 15458 5030 4154     		push	r12	#
 15459              		.cfi_def_cfa_offset 16
 15460              		.cfi_offset 12, -16
 15461              	# sieve_extend.c:1104:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_f
GAS LISTING /tmp/cctyCFAS.s 			page 413


1099:sieve_extend.c ****     counter_t passes = 0;
1100:sieve_extend.c ****     double elapsed_time = 0;
1101:sieve_extend.c ****     struct timespec start_time,end_time;
1102:sieve_extend.c ****     struct sieve_state *sieve_instance;
1103:sieve_extend.c **** 
1104:sieve_extend.c ****     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_faster;
 15462              		.loc 1 1104 44 view .LVU5449
 15463 5032 486BF658 		imul	rsi, rsi, 88	# tmp112, tmp147,
 15464              	.LVL1084:
 15465              	# sieve_extend.c:1099:     counter_t passes = 0;
1099:sieve_extend.c ****     counter_t passes = 0;
 15466              		.loc 1 1099 15 view .LVU5450
 15467 5036 4531E4   		xor	r12d, r12d	# passes
 15468              	# sieve_extend.c:1098: static void tune_benchmark(tuning_result_type* tuning_result, counter_t tuni
1098:sieve_extend.c ****     counter_t passes = 0;
 15469              		.loc 1 1098 94 view .LVU5451
 15470 5039 55       		push	rbp	#
 15471              		.cfi_def_cfa_offset 24
 15472              		.cfi_offset 6, -24
 15473 503a 53       		push	rbx	#
 15474              		.cfi_def_cfa_offset 32
 15475              		.cfi_offset 3, -32
 15476              	# sieve_extend.c:1104:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_f
 15477              		.loc 1 1104 44 view .LVU5452
 15478 503b 488D1C37 		lea	rbx, [rdi+rsi]	# _2,
 15479              	# sieve_extend.c:1107:     clock_gettime(CLOCK_MONOTONIC,&start_time);
1105:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
1106:sieve_extend.c **** 
1107:sieve_extend.c ****     clock_gettime(CLOCK_MONOTONIC,&start_time);
 15480              		.loc 1 1107 5 view .LVU5453
 15481 503f BF010000 		mov	edi, 1	#,
 15481      00
 15482              	.LVL1085:
 15483              	# sieve_extend.c:1098: static void tune_benchmark(tuning_result_type* tuning_result, counter_t tuni
1098:sieve_extend.c ****     counter_t passes = 0;
 15484              		.loc 1 1098 94 view .LVU5454
 15485 5044 4883EC30 		sub	rsp, 48	#,
 15486              		.cfi_def_cfa_offset 80
 15487              	# sieve_extend.c:1098: static void tune_benchmark(tuning_result_type* tuning_result, counter_t tuni
1098:sieve_extend.c ****     counter_t passes = 0;
 15488              		.loc 1 1098 94 view .LVU5455
 15489 5048 64488B04 		mov	rax, QWORD PTR fs:40	# tmp162, MEM[(<address-space-1> long unsigned int *)40B]
 15489      25280000 
 15489      00
 15490 5051 48894424 		mov	QWORD PTR 40[rsp], rax	# D.7219, tmp162
 15490      28
 15491 5056 31C0     		xor	eax, eax	# tmp162
1099:sieve_extend.c ****     double elapsed_time = 0;
 15492              		.loc 1 1099 5 is_stmt 1 view .LVU5456
 15493              	.LVL1086:
1100:sieve_extend.c ****     struct timespec start_time,end_time;
 15494              		.loc 1 1100 5 view .LVU5457
1101:sieve_extend.c ****     struct sieve_state *sieve_instance;
 15495              		.loc 1 1101 5 view .LVU5458
1102:sieve_extend.c **** 
 15496              		.loc 1 1102 5 view .LVU5459
1104:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
GAS LISTING /tmp/cctyCFAS.s 			page 414


 15497              		.loc 1 1104 5 view .LVU5460
 15498              	# sieve_extend.c:1105:     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep
1105:sieve_extend.c **** 
 15499              		.loc 1 1105 30 is_stmt 0 view .LVU5461
 15500 5058 488B5328 		mov	rdx, QWORD PTR 40[rbx]	# _2->mediumstep_faster, _2->mediumstep_faster
 15501              	# sieve_extend.c:1104:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_f
1104:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
 15502              		.loc 1 1104 29 view .LVU5462
 15503 505c 488B4320 		mov	rax, QWORD PTR 32[rbx]	# _2->smallstep_faster, _2->smallstep_faster
 15504              	# sieve_extend.c:1107:     clock_gettime(CLOCK_MONOTONIC,&start_time);
 15505              		.loc 1 1107 5 view .LVU5463
 15506 5060 4889E6   		mov	rsi, rsp	# tmp115,
 15507              	# sieve_extend.c:1104:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_f
1104:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
 15508              		.loc 1 1104 29 view .LVU5464
 15509 5063 48890500 		mov	QWORD PTR global_SMALLSTEP_FASTER[rip], rax	# global_SMALLSTEP_FASTER, _2->smallstep_faster
 15509      000000
1105:sieve_extend.c **** 
 15510              		.loc 1 1105 5 is_stmt 1 view .LVU5465
 15511              	# sieve_extend.c:1105:     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep
1105:sieve_extend.c **** 
 15512              		.loc 1 1105 30 is_stmt 0 view .LVU5466
 15513 506a 48891500 		mov	QWORD PTR global_MEDIUMSTEP_FASTER[rip], rdx	# global_MEDIUMSTEP_FASTER, _2->mediumstep_faster
 15513      000000
 15514              		.loc 1 1107 5 is_stmt 1 view .LVU5467
 15515 5071 E8000000 		call	clock_gettime@PLT	#
 15515      00
 15516              	.LVL1087:
1108:sieve_extend.c ****     while (elapsed_time <= tuning_result[tuning_result_index].sample_duration && passes < tuning_re
 15517              		.loc 1 1108 5 view .LVU5468
 15518              		.loc 1 1108 11 view .LVU5469
 15519 5076 C5F957C0 		vxorpd	xmm0, xmm0, xmm0	# elapsed_time
 15520 507a C5F92F43 		vcomisd	xmm0, QWORD PTR 56[rbx]	# elapsed_time, _2->sample_duration
 15520      38
 15521 507f C57B1015 		vmovsd	xmm10, QWORD PTR .LC3[rip]	# _56,
 15521      00000000 
 15522 5087 0F879000 		ja	.L1597	#,
 15522      0000
 15523 508d C5E057DB 		vxorps	xmm3, xmm3, xmm3	# tmp149
 15524 5091 EB76     		jmp	.L1596	#
 15525              	.LVL1088:
 15526              		.p2align 4,,10
 15527 5093 0F1F4400 		.p2align 3
 15527      00
 15528              	.L1600:
1109:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 15529              		.loc 1 1109 9 view .LVU5470
 15530              	# sieve_extend.c:1109:         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, t
 15531              		.loc 1 1109 26 is_stmt 0 view .LVU5471
 15532 5098 488B7308 		mov	rsi, QWORD PTR 8[rbx]	# _2->blocksize_bits, _2->blocksize_bits
 15533 509c 488B3B   		mov	rdi, QWORD PTR [rbx]	#, _2->maxints
 15534              	# sieve_extend.c:1111:         passes++;
1110:sieve_extend.c ****         delete_sieve(sieve_instance);
1111:sieve_extend.c ****         passes++;
 15535              		.loc 1 1111 15 view .LVU5472
 15536 509f 49FFC4   		inc	r12	# passes
 15537              	.LVL1089:
GAS LISTING /tmp/cctyCFAS.s 			page 415


 15538              	# sieve_extend.c:1109:         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, t
1109:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 15539              		.loc 1 1109 26 view .LVU5473
 15540 50a2 E8D9D7FF 		call	sieve	#
 15540      FF
 15541              	.LVL1090:
 15542              	.LBB649:
 15543              	.LBB650:
 15544              	# sieve_extend.c:97:     free(sieve->bitarray);
  97:sieve_extend.c ****     free(sieve);
 15545              		.loc 1 97 5 view .LVU5474
 15546 50a7 488B38   		mov	rdi, QWORD PTR [rax]	#, sieve_instance_35->bitarray
 15547              	.LBE650:
 15548              	.LBE649:
 15549              	# sieve_extend.c:1109:         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, t
1109:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 15550              		.loc 1 1109 26 view .LVU5475
 15551 50aa 4889C5   		mov	rbp, rax	# sieve_instance, tmp148
 15552              	.LVL1091:
1110:sieve_extend.c ****         delete_sieve(sieve_instance);
 15553              		.loc 1 1110 9 is_stmt 1 view .LVU5476
 15554              	.LBB652:
 15555              	.LBI649:
  96:sieve_extend.c ****     free(sieve->bitarray);
 15556              		.loc 1 96 13 view .LVU5477
 15557              	.LBB651:
  97:sieve_extend.c ****     free(sieve);
 15558              		.loc 1 97 5 view .LVU5478
 15559 50ad E8000000 		call	free@PLT	#
 15559      00
 15560              	.LVL1092:
  98:sieve_extend.c **** }
 15561              		.loc 1 98 5 view .LVU5479
 15562 50b2 4889EF   		mov	rdi, rbp	#, sieve_instance
 15563 50b5 E8000000 		call	free@PLT	#
 15563      00
 15564              	.LVL1093:
  98:sieve_extend.c **** }
 15565              		.loc 1 98 5 is_stmt 0 view .LVU5480
 15566              	.LBE651:
 15567              	.LBE652:
 15568              		.loc 1 1111 9 is_stmt 1 view .LVU5481
1112:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&end_time);
 15569              		.loc 1 1112 9 view .LVU5482
 15570 50ba 488D7424 		lea	rsi, 16[rsp]	# tmp118,
 15570      10
 15571 50bf BF010000 		mov	edi, 1	#,
 15571      00
 15572 50c4 E8000000 		call	clock_gettime@PLT	#
 15572      00
 15573              	.LVL1094:
1113:sieve_extend.c ****         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time.tv_
 15574              		.loc 1 1113 9 view .LVU5483
 15575              	# sieve_extend.c:1113:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15576              		.loc 1 1113 58 is_stmt 0 view .LVU5484
 15577 50c9 C5E057DB 		vxorps	xmm3, xmm3, xmm3	# tmp149
 15578 50cd C4E1E32A 		vcvtsi2sd	xmm2, xmm3, QWORD PTR 24[rsp]	# tmp150, tmp149, end_time.tv_nsec
GAS LISTING /tmp/cctyCFAS.s 			page 416


 15578      542418
 15579              	# sieve_extend.c:1113:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15580              		.loc 1 1113 64 view .LVU5485
 15581 50d4 C4E1E32A 		vcvtsi2sd	xmm4, xmm3, QWORD PTR [rsp]	# tmp151, tmp149, start_time.tv_sec
 15581      2424
 15582              	# sieve_extend.c:1113:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15583              		.loc 1 1113 40 view .LVU5486
 15584 50da C4E1E32A 		vcvtsi2sd	xmm7, xmm3, QWORD PTR 16[rsp]	# tmp153, tmp149, end_time.tv_sec
 15584      7C2410
 15585              	# sieve_extend.c:1113:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15586              		.loc 1 1113 58 view .LVU5487
 15587 50e1 C5F928CA 		vmovapd	xmm1, xmm2	# tmp119, tmp150
 15588              	# sieve_extend.c:1113:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15589              		.loc 1 1113 104 view .LVU5488
 15590 50e5 C4E1E32A 		vcvtsi2sd	xmm2, xmm3, QWORD PTR 8[rsp]	# tmp152, tmp149, start_time.tv_nsec
 15590      542408
 15591 50ec C4E2D99B 		vfmsub132sd	xmm1, xmm4, QWORD PTR .LC4[rip]	# tmp119, tmp120,
 15591      0D000000 
 15591      00
 15592 50f5 C4E2E9BD 		vfnmadd231sd	xmm7, xmm2, QWORD PTR .LC4[rip]	# _61, tmp122,
 15592      3D000000 
 15592      00
 15593              	# sieve_extend.c:1113:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15594              		.loc 1 1113 22 view .LVU5489
 15595 50fe C5F358C7 		vaddsd	xmm0, xmm1, xmm7	# elapsed_time, _60, _61
 15596              	.LVL1095:
1108:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 15597              		.loc 1 1108 11 is_stmt 1 view .LVU5490
 15598 5102 C5F92F43 		vcomisd	xmm0, QWORD PTR 56[rbx]	# elapsed_time, _2->sample_duration
 15598      38
 15599 5107 7706     		ja	.L1612	#,
 15600              	.LVL1096:
 15601              	.L1596:
 15602              	# sieve_extend.c:1108:     while (elapsed_time <= tuning_result[tuning_result_index].sample_duratio
1108:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 15603              		.loc 1 1108 79 is_stmt 0 discriminator 1 view .LVU5491
 15604 5109 4C396330 		cmp	QWORD PTR 48[rbx], r12	# _2->sample_max, passes
 15605 510d 7789     		ja	.L1600	#,
 15606              	.L1612:
1108:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 15607              		.loc 1 1108 79 discriminator 1 view .LVU5492
 15608 510f 4D85E4   		test	r12, r12	# passes
 15609 5112 7834     		js	.L1601	#,
1108:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 15610              		.loc 1 1108 79 discriminator 1 view .LVU5493
 15611 5114 C441E32A 		vcvtsi2sd	xmm9, xmm3, r12	# tmp156, tmp149, passes
 15611      CC
 15612              	.L1602:
1108:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 15613              		.loc 1 1108 79 discriminator 1 view .LVU5494
 15614 5119 C5335ED0 		vdivsd	xmm10, xmm9, xmm0	# _56, tmp129, elapsed_time
 15615              	.LVL1097:
 15616              	.L1597:
1114:sieve_extend.c ****     }
1115:sieve_extend.c ****     tuning_result[tuning_result_index].passes = passes;
 15617              		.loc 1 1115 5 is_stmt 1 view .LVU5495
 15618              	# sieve_extend.c:1115:     tuning_result[tuning_result_index].passes = passes;
GAS LISTING /tmp/cctyCFAS.s 			page 417


 15619              		.loc 1 1115 47 is_stmt 0 view .LVU5496
 15620 511d 4C896340 		mov	QWORD PTR 64[rbx], r12	# _2->passes, passes
1116:sieve_extend.c ****     tuning_result[tuning_result_index].elapsed_time = elapsed_time;
 15621              		.loc 1 1116 5 is_stmt 1 view .LVU5497
1117:sieve_extend.c ****     tuning_result[tuning_result_index].avg = passes/elapsed_time;
 15622              		.loc 1 1117 5 view .LVU5498
 15623              	# sieve_extend.c:1116:     tuning_result[tuning_result_index].elapsed_time = elapsed_time;
1116:sieve_extend.c ****     tuning_result[tuning_result_index].elapsed_time = elapsed_time;
 15624              		.loc 1 1116 53 is_stmt 0 view .LVU5499
 15625 5121 C4417914 		vunpcklpd	xmm11, xmm0, xmm10	# tmp133, elapsed_time, _56
 15625      DA
 15626 5126 C578115B 		vmovups	XMMWORD PTR 72[rbx], xmm11	# MEM[(double *)_2 + 72B], tmp133
 15626      48
 15627              	# sieve_extend.c:1118: }
1118:sieve_extend.c **** }
 15628              		.loc 1 1118 1 view .LVU5500
 15629 512b 488B4424 		mov	rax, QWORD PTR 40[rsp]	# tmp163, D.7219
 15629      28
 15630 5130 64483304 		xor	rax, QWORD PTR fs:40	# tmp163, MEM[(<address-space-1> long unsigned int *)40B]
 15630      25280000 
 15630      00
 15631 5139 7528     		jne	.L1613	#,
 15632 513b 4883C430 		add	rsp, 48	#,
 15633              		.cfi_remember_state
 15634              		.cfi_def_cfa_offset 32
 15635 513f 5B       		pop	rbx	#
 15636              		.cfi_def_cfa_offset 24
 15637 5140 5D       		pop	rbp	#
 15638              		.cfi_def_cfa_offset 16
 15639 5141 415C     		pop	r12	#
 15640              		.cfi_def_cfa_offset 8
 15641 5143 C3       		ret	
 15642              	.LVL1098:
 15643              		.p2align 4,,10
 15644 5144 0F1F4000 		.p2align 3
 15645              	.L1601:
 15646              		.cfi_restore_state
 15647              		.loc 1 1118 1 view .LVU5501
 15648 5148 4C89E1   		mov	rcx, r12	# tmp131, passes
 15649 514b 4C89E7   		mov	rdi, r12	# tmp132, passes
 15650 514e 48D1E9   		shr	rcx	# tmp131
 15651 5151 83E701   		and	edi, 1	# tmp132,
 15652 5154 4809F9   		or	rcx, rdi	# tmp145, tmp132
 15653 5157 C461E32A 		vcvtsi2sd	xmm8, xmm3, rcx	# tmp157, tmp149, tmp145
 15653      C1
 15654 515c C4413B58 		vaddsd	xmm9, xmm8, xmm8	# tmp129, tmp130, tmp130
 15654      C8
 15655 5161 EBB6     		jmp	.L1602	#
 15656              	.LVL1099:
 15657              	.L1613:
 15658              		.loc 1 1118 1 view .LVU5502
 15659 5163 E8000000 		call	__stack_chk_fail@PLT	#
 15659      00
 15660              	.LVL1100:
 15661              		.cfi_endproc
 15662              	.LFE84:
 15664 5168 0F1F8400 		.p2align 4
GAS LISTING /tmp/cctyCFAS.s 			page 418


 15664      00000000 
 15665              		.globl	shiftvec
 15667              	shiftvec:
 15668              	.LVL1101:
 15669              	.LFB68:
 559:sieve_extend.c ****     int i = 0;
 15670              		.loc 1 559 1 is_stmt 1 view -0
 15671              		.cfi_startproc
 559:sieve_extend.c ****     int i = 0;
 15672              		.loc 1 559 1 is_stmt 0 view .LVU5504
 15673 5170 F30F1EFA 		endbr64	
 560:sieve_extend.c ****     // MSVC: use steps of 2 for SSE, 4 for AVX2, 8 for AVX512
 15674              		.loc 1 560 5 is_stmt 1 view .LVU5505
 15675              	.LVL1102:
 562:sieve_extend.c ****     {
 15676              		.loc 1 562 5 view .LVU5506
 562:sieve_extend.c ****     {
 15677              		.loc 1 562 12 view .LVU5507
 15678              	# sieve_extend.c:562:     for (; i+4 < size; i+=4,dst+=4,src+=4)
 562:sieve_extend.c ****     {
 15679              		.loc 1 562 5 is_stmt 0 view .LVU5508
 15680 5174 83FA04   		cmp	edx, 4	# size,
 15681 5177 0F8E8A03 		jle	.L1661	#,
 15681      0000
 15682 517d 41BB4000 		mov	r11d, 64	# tmp134,
 15682      0000
 15683              	.LBB653:
 15684              	# sieve_extend.c:565:             *(dst+j) = (*(src+j))<<shift;
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15685              		.loc 1 565 25 view .LVU5509
 15686 5183 C5FE6F1E 		vmovdqu	ymm3, YMMWORD PTR [rsi]	# MEM[base: src_35(D), index: ivtmp.693_114, offset: 0B], MEM[base
 15687 5187 4489D8   		mov	eax, r11d	# _4, tmp134
 15688 518a 29C8     		sub	eax, ecx	# _4, shift
 15689 518c C4E1F96E 		vmovq	xmm0, rax	# _4, _4
 15689      C0
 15690 5191 C5F96EC9 		vmovd	xmm1, ecx	# shift, shift
 15691 5195 C4E3FD00 		vpermq	ymm2, ymm3, 85	# vect__102.679, MEM[base: src_35(D), index: ivtmp.693_114, offset: 0B],
 15691      D355
 15692              	.LBE653:
 15693              	.LBB654:
 15694              	# sieve_extend.c:567:             *(dst+j) |= (*(src+1)>>(64-shift));
 567:sieve_extend.c ****     }
 15695              		.loc 1 567 34 view .LVU5510
 15696 519b C5EDD3E0 		vpsrlq	ymm4, ymm2, xmm0	# vect__57.680, vect__102.679, _4
 15697              	.LBE654:
 15698              	.LBB655:
 15699              	# sieve_extend.c:565:             *(dst+j) = (*(src+j))<<shift;
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15700              		.loc 1 565 34 view .LVU5511
 15701 519f C5E5F3E9 		vpsllq	ymm5, ymm3, xmm1	# vect__104.684, MEM[base: src_35(D), index: ivtmp.693_114, offset: 0B], s
 15702 51a3 448D4AFB 		lea	r9d, -5[rdx]	# tmp135,
 15703 51a7 41C1E902 		shr	r9d, 2	# _80,
 15704 51ab 4589CB   		mov	r11d, r9d	# tmp175, _80
 15705              	.LBE655:
 15706              	.LBB656:
 15707              	# sieve_extend.c:567:             *(dst+j) |= (*(src+1)>>(64-shift));
 567:sieve_extend.c ****     }
GAS LISTING /tmp/cctyCFAS.s 			page 419


 15708              		.loc 1 567 22 view .LVU5512
 15709 51ae C5DDEBF5 		vpor	ymm6, ymm4, ymm5	# vect__58.685, vect__57.680, vect__104.684
 15710 51b2 458D4101 		lea	r8d, 1[r9]	# tmp172,
 15711 51b6 4183E307 		and	r11d, 7	# tmp175,
 15712              	.LVL1103:
 567:sieve_extend.c ****     }
 15713              		.loc 1 567 22 view .LVU5513
 15714              	.LBE656:
 15715              	.LBB657:
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15716              		.loc 1 564 25 is_stmt 1 view .LVU5514
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15717              		.loc 1 565 13 view .LVU5515
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15718              		.loc 1 564 32 view .LVU5516
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15719              		.loc 1 564 25 view .LVU5517
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15720              		.loc 1 565 13 view .LVU5518
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15721              		.loc 1 564 32 view .LVU5519
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15722              		.loc 1 564 25 view .LVU5520
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15723              		.loc 1 565 13 view .LVU5521
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15724              		.loc 1 564 32 view .LVU5522
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15725              		.loc 1 564 25 view .LVU5523
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15726              		.loc 1 565 13 view .LVU5524
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15727              		.loc 1 564 32 view .LVU5525
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15728              		.loc 1 564 25 view .LVU5526
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15729              		.loc 1 564 25 is_stmt 0 view .LVU5527
 15730              	.LBE657:
 15731              	.LBB658:
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15732              		.loc 1 566 25 is_stmt 1 view .LVU5528
 567:sieve_extend.c ****     }
 15733              		.loc 1 567 13 view .LVU5529
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15734              		.loc 1 566 32 view .LVU5530
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15735              		.loc 1 566 25 view .LVU5531
 567:sieve_extend.c ****     }
 15736              		.loc 1 567 13 view .LVU5532
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15737              		.loc 1 566 32 view .LVU5533
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15738              		.loc 1 566 25 view .LVU5534
 567:sieve_extend.c ****     }
 15739              		.loc 1 567 13 view .LVU5535
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15740              		.loc 1 566 32 view .LVU5536
GAS LISTING /tmp/cctyCFAS.s 			page 420


 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15741              		.loc 1 566 25 view .LVU5537
 567:sieve_extend.c ****     }
 15742              		.loc 1 567 13 view .LVU5538
 15743              	# sieve_extend.c:567:             *(dst+j) |= (*(src+1)>>(64-shift));
 567:sieve_extend.c ****     }
 15744              		.loc 1 567 22 is_stmt 0 view .LVU5539
 15745 51ba C5FE7F37 		vmovdqu	YMMWORD PTR [rdi], ymm6	# MEM[base: dst_34(D), index: ivtmp.693_114, offset: 0B], vect__58
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15746              		.loc 1 566 32 is_stmt 1 view .LVU5540
 15747              	.LVL1104:
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15748              		.loc 1 566 25 view .LVU5541
 15749              	.LBE658:
 562:sieve_extend.c ****     {
 15750              		.loc 1 562 24 view .LVU5542
 562:sieve_extend.c ****     {
 15751              		.loc 1 562 12 view .LVU5543
 15752 51be 41BA0100 		mov	r10d, 1	# ivtmp.690,
 15752      0000
 15753 51c4 B8200000 		mov	eax, 32	# ivtmp.693,
 15753      00
 15754 51c9 4183F801 		cmp	r8d, 1	# tmp172,
 15755 51cd 0F863902 		jbe	.L1659	#,
 15755      0000
 15756 51d3 4585DB   		test	r11d, r11d	# tmp175
 15757 51d6 0F841201 		je	.L1617	#,
 15757      0000
 15758 51dc 4183FB01 		cmp	r11d, 1	# tmp175,
 15759 51e0 0F84DB00 		je	.L1646	#,
 15759      0000
 15760 51e6 4183FB02 		cmp	r11d, 2	# tmp175,
 15761 51ea 0F84AE00 		je	.L1647	#,
 15761      0000
 15762 51f0 4183FB03 		cmp	r11d, 3	# tmp175,
 15763 51f4 0F848100 		je	.L1648	#,
 15763      0000
 15764 51fa 4183FB04 		cmp	r11d, 4	# tmp175,
 15765 51fe 7457     		je	.L1649	#,
 15766 5200 4183FB05 		cmp	r11d, 5	# tmp175,
 15767 5204 742E     		je	.L1650	#,
 15768 5206 4183FB06 		cmp	r11d, 6	# tmp175,
 15769 520a 0F85CA02 		jne	.L1662	#,
 15769      0000
 15770              	.L1651:
 15771              	.LVL1105:
 15772              	.LBB659:
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15773              		.loc 1 564 25 view .LVU5544
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15774              		.loc 1 565 13 view .LVU5545
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15775              		.loc 1 564 32 view .LVU5546
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15776              		.loc 1 564 25 view .LVU5547
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15777              		.loc 1 565 13 view .LVU5548
GAS LISTING /tmp/cctyCFAS.s 			page 421


 15778              	# sieve_extend.c:565:             *(dst+j) = (*(src+j))<<shift;
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15779              		.loc 1 565 25 is_stmt 0 view .LVU5549
 15780 5210 C57E6F24 		vmovdqu	ymm12, YMMWORD PTR [rsi+rax]	# MEM[base: src_35(D), index: ivtmp.693_114, offset: 0B], MEM
 15780      06
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15781              		.loc 1 564 32 is_stmt 1 view .LVU5550
 15782              	.LVL1106:
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15783              		.loc 1 564 25 view .LVU5551
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15784              		.loc 1 565 13 view .LVU5552
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15785              		.loc 1 564 32 view .LVU5553
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15786              		.loc 1 564 25 view .LVU5554
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15787              		.loc 1 565 13 view .LVU5555
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15788              		.loc 1 564 32 view .LVU5556
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15789              		.loc 1 564 25 view .LVU5557
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15790              		.loc 1 564 25 is_stmt 0 view .LVU5558
 15791              	.LBE659:
 15792              	.LBB660:
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15793              		.loc 1 566 25 is_stmt 1 view .LVU5559
 567:sieve_extend.c ****     }
 15794              		.loc 1 567 13 view .LVU5560
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15795              		.loc 1 566 32 view .LVU5561
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15796              		.loc 1 566 25 view .LVU5562
 567:sieve_extend.c ****     }
 15797              		.loc 1 567 13 view .LVU5563
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15798              		.loc 1 566 32 view .LVU5564
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15799              		.loc 1 566 25 view .LVU5565
 567:sieve_extend.c ****     }
 15800              		.loc 1 567 13 view .LVU5566
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15801              		.loc 1 566 32 view .LVU5567
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15802              		.loc 1 566 25 view .LVU5568
 567:sieve_extend.c ****     }
 15803              		.loc 1 567 13 view .LVU5569
 15804 5215 41FFC2   		inc	r10d	# ivtmp.690
 15805              	.LBE660:
 15806              	.LBB661:
 15807              	# sieve_extend.c:565:             *(dst+j) = (*(src+j))<<shift;
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15808              		.loc 1 565 25 is_stmt 0 view .LVU5570
 15809 5218 C443FD00 		vpermq	ymm13, ymm12, 85	# vect__102.679, MEM[base: src_35(D), index: ivtmp.693_114, offset: 0B],
 15809      EC55
 15810              	.LBE661:
GAS LISTING /tmp/cctyCFAS.s 			page 422


 15811              	.LBB662:
 15812              	# sieve_extend.c:567:             *(dst+j) |= (*(src+1)>>(64-shift));
 567:sieve_extend.c ****     }
 15813              		.loc 1 567 34 view .LVU5571
 15814 521e C515D3F0 		vpsrlq	ymm14, ymm13, xmm0	# vect__57.680, vect__102.679, _4
 15815              	.LBE662:
 15816              	.LBB663:
 15817              	# sieve_extend.c:565:             *(dst+j) = (*(src+j))<<shift;
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15818              		.loc 1 565 34 view .LVU5572
 15819 5222 C51DF3F9 		vpsllq	ymm15, ymm12, xmm1	# vect__104.684, MEM[base: src_35(D), index: ivtmp.693_114, offset: 0B],
 15820              	.LBE663:
 15821              	.LBB664:
 15822              	# sieve_extend.c:567:             *(dst+j) |= (*(src+1)>>(64-shift));
 567:sieve_extend.c ****     }
 15823              		.loc 1 567 22 view .LVU5573
 15824 5226 C4C10DEB 		vpor	ymm3, ymm14, ymm15	# vect__58.685, vect__57.680, vect__104.684
 15824      DF
 15825 522b C5FE7F1C 		vmovdqu	YMMWORD PTR [rdi+rax], ymm3	# MEM[base: dst_34(D), index: ivtmp.693_114, offset: 0B], vect
 15825      07
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15826              		.loc 1 566 32 is_stmt 1 view .LVU5574
 15827              	.LVL1107:
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15828              		.loc 1 566 25 view .LVU5575
 15829              	.LBE664:
 562:sieve_extend.c ****     {
 15830              		.loc 1 562 24 view .LVU5576
 562:sieve_extend.c ****     {
 15831              		.loc 1 562 12 view .LVU5577
 15832 5230 4883C020 		add	rax, 32	# ivtmp.693,
 15833              	.L1650:
 15834              	.LVL1108:
 15835              	.LBB665:
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15836              		.loc 1 564 25 view .LVU5578
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15837              		.loc 1 565 13 view .LVU5579
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15838              		.loc 1 564 32 view .LVU5580
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15839              		.loc 1 564 25 view .LVU5581
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15840              		.loc 1 565 13 view .LVU5582
 15841              	# sieve_extend.c:565:             *(dst+j) = (*(src+j))<<shift;
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15842              		.loc 1 565 25 is_stmt 0 view .LVU5583
 15843 5234 C5FE6F24 		vmovdqu	ymm4, YMMWORD PTR [rsi+rax]	# MEM[base: src_35(D), index: ivtmp.693_114, offset: 0B], MEM[
 15843      06
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15844              		.loc 1 564 32 is_stmt 1 view .LVU5584
 15845              	.LVL1109:
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15846              		.loc 1 564 25 view .LVU5585
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15847              		.loc 1 565 13 view .LVU5586
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
GAS LISTING /tmp/cctyCFAS.s 			page 423


 15848              		.loc 1 564 32 view .LVU5587
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15849              		.loc 1 564 25 view .LVU5588
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15850              		.loc 1 565 13 view .LVU5589
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15851              		.loc 1 564 32 view .LVU5590
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15852              		.loc 1 564 25 view .LVU5591
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15853              		.loc 1 564 25 is_stmt 0 view .LVU5592
 15854              	.LBE665:
 15855              	.LBB666:
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15856              		.loc 1 566 25 is_stmt 1 view .LVU5593
 567:sieve_extend.c ****     }
 15857              		.loc 1 567 13 view .LVU5594
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15858              		.loc 1 566 32 view .LVU5595
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15859              		.loc 1 566 25 view .LVU5596
 567:sieve_extend.c ****     }
 15860              		.loc 1 567 13 view .LVU5597
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15861              		.loc 1 566 32 view .LVU5598
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15862              		.loc 1 566 25 view .LVU5599
 567:sieve_extend.c ****     }
 15863              		.loc 1 567 13 view .LVU5600
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15864              		.loc 1 566 32 view .LVU5601
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15865              		.loc 1 566 25 view .LVU5602
 567:sieve_extend.c ****     }
 15866              		.loc 1 567 13 view .LVU5603
 15867 5239 41FFC2   		inc	r10d	# ivtmp.690
 15868              	.LBE666:
 15869              	.LBB667:
 15870              	# sieve_extend.c:565:             *(dst+j) = (*(src+j))<<shift;
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15871              		.loc 1 565 25 is_stmt 0 view .LVU5604
 15872 523c C4E3FD00 		vpermq	ymm2, ymm4, 85	# vect__102.679, MEM[base: src_35(D), index: ivtmp.693_114, offset: 0B],
 15872      D455
 15873              	.LBE667:
 15874              	.LBB668:
 15875              	# sieve_extend.c:567:             *(dst+j) |= (*(src+1)>>(64-shift));
 567:sieve_extend.c ****     }
 15876              		.loc 1 567 34 view .LVU5605
 15877 5242 C5EDD3E8 		vpsrlq	ymm5, ymm2, xmm0	# vect__57.680, vect__102.679, _4
 15878              	.LBE668:
 15879              	.LBB669:
 15880              	# sieve_extend.c:565:             *(dst+j) = (*(src+j))<<shift;
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15881              		.loc 1 565 34 view .LVU5606
 15882 5246 C5DDF3F1 		vpsllq	ymm6, ymm4, xmm1	# vect__104.684, MEM[base: src_35(D), index: ivtmp.693_114, offset: 0B], s
 15883              	.LBE669:
 15884              	.LBB670:
GAS LISTING /tmp/cctyCFAS.s 			page 424


 15885              	# sieve_extend.c:567:             *(dst+j) |= (*(src+1)>>(64-shift));
 567:sieve_extend.c ****     }
 15886              		.loc 1 567 22 view .LVU5607
 15887 524a C5D5EBFE 		vpor	ymm7, ymm5, ymm6	# vect__58.685, vect__57.680, vect__104.684
 15888 524e C5FE7F3C 		vmovdqu	YMMWORD PTR [rdi+rax], ymm7	# MEM[base: dst_34(D), index: ivtmp.693_114, offset: 0B], vect
 15888      07
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15889              		.loc 1 566 32 is_stmt 1 view .LVU5608
 15890              	.LVL1110:
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15891              		.loc 1 566 25 view .LVU5609
 15892              	.LBE670:
 562:sieve_extend.c ****     {
 15893              		.loc 1 562 24 view .LVU5610
 562:sieve_extend.c ****     {
 15894              		.loc 1 562 12 view .LVU5611
 15895 5253 4883C020 		add	rax, 32	# ivtmp.693,
 15896              	.L1649:
 15897              	.LVL1111:
 15898              	.LBB671:
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15899              		.loc 1 564 25 view .LVU5612
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15900              		.loc 1 565 13 view .LVU5613
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15901              		.loc 1 564 32 view .LVU5614
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15902              		.loc 1 564 25 view .LVU5615
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15903              		.loc 1 565 13 view .LVU5616
 15904              	# sieve_extend.c:565:             *(dst+j) = (*(src+j))<<shift;
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15905              		.loc 1 565 25 is_stmt 0 view .LVU5617
 15906 5257 C57E6F04 		vmovdqu	ymm8, YMMWORD PTR [rsi+rax]	# MEM[base: src_35(D), index: ivtmp.693_114, offset: 0B], MEM[
 15906      06
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15907              		.loc 1 564 32 is_stmt 1 view .LVU5618
 15908              	.LVL1112:
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15909              		.loc 1 564 25 view .LVU5619
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15910              		.loc 1 565 13 view .LVU5620
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15911              		.loc 1 564 32 view .LVU5621
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15912              		.loc 1 564 25 view .LVU5622
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15913              		.loc 1 565 13 view .LVU5623
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15914              		.loc 1 564 32 view .LVU5624
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15915              		.loc 1 564 25 view .LVU5625
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15916              		.loc 1 564 25 is_stmt 0 view .LVU5626
 15917              	.LBE671:
 15918              	.LBB672:
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
GAS LISTING /tmp/cctyCFAS.s 			page 425


 15919              		.loc 1 566 25 is_stmt 1 view .LVU5627
 567:sieve_extend.c ****     }
 15920              		.loc 1 567 13 view .LVU5628
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15921              		.loc 1 566 32 view .LVU5629
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15922              		.loc 1 566 25 view .LVU5630
 567:sieve_extend.c ****     }
 15923              		.loc 1 567 13 view .LVU5631
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15924              		.loc 1 566 32 view .LVU5632
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15925              		.loc 1 566 25 view .LVU5633
 567:sieve_extend.c ****     }
 15926              		.loc 1 567 13 view .LVU5634
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15927              		.loc 1 566 32 view .LVU5635
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15928              		.loc 1 566 25 view .LVU5636
 567:sieve_extend.c ****     }
 15929              		.loc 1 567 13 view .LVU5637
 15930 525c 41FFC2   		inc	r10d	# ivtmp.690
 15931              	.LBE672:
 15932              	.LBB673:
 15933              	# sieve_extend.c:565:             *(dst+j) = (*(src+j))<<shift;
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15934              		.loc 1 565 25 is_stmt 0 view .LVU5638
 15935 525f C443FD00 		vpermq	ymm9, ymm8, 85	# vect__102.679, MEM[base: src_35(D), index: ivtmp.693_114, offset: 0B],
 15935      C855
 15936              	.LBE673:
 15937              	.LBB674:
 15938              	# sieve_extend.c:567:             *(dst+j) |= (*(src+1)>>(64-shift));
 567:sieve_extend.c ****     }
 15939              		.loc 1 567 34 view .LVU5639
 15940 5265 C535D3D0 		vpsrlq	ymm10, ymm9, xmm0	# vect__57.680, vect__102.679, _4
 15941              	.LBE674:
 15942              	.LBB675:
 15943              	# sieve_extend.c:565:             *(dst+j) = (*(src+j))<<shift;
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15944              		.loc 1 565 34 view .LVU5640
 15945 5269 C53DF3D9 		vpsllq	ymm11, ymm8, xmm1	# vect__104.684, MEM[base: src_35(D), index: ivtmp.693_114, offset: 0B], 
 15946              	.LBE675:
 15947              	.LBB676:
 15948              	# sieve_extend.c:567:             *(dst+j) |= (*(src+1)>>(64-shift));
 567:sieve_extend.c ****     }
 15949              		.loc 1 567 22 view .LVU5641
 15950 526d C4412DEB 		vpor	ymm12, ymm10, ymm11	# vect__58.685, vect__57.680, vect__104.684
 15950      E3
 15951 5272 C57E7F24 		vmovdqu	YMMWORD PTR [rdi+rax], ymm12	# MEM[base: dst_34(D), index: ivtmp.693_114, offset: 0B], vec
 15951      07
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15952              		.loc 1 566 32 is_stmt 1 view .LVU5642
 15953              	.LVL1113:
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15954              		.loc 1 566 25 view .LVU5643
 15955              	.LBE676:
 562:sieve_extend.c ****     {
GAS LISTING /tmp/cctyCFAS.s 			page 426


 15956              		.loc 1 562 24 view .LVU5644
 562:sieve_extend.c ****     {
 15957              		.loc 1 562 12 view .LVU5645
 15958 5277 4883C020 		add	rax, 32	# ivtmp.693,
 15959              	.L1648:
 15960              	.LVL1114:
 15961              	.LBB677:
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15962              		.loc 1 564 25 view .LVU5646
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15963              		.loc 1 565 13 view .LVU5647
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15964              		.loc 1 564 32 view .LVU5648
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15965              		.loc 1 564 25 view .LVU5649
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15966              		.loc 1 565 13 view .LVU5650
 15967              	# sieve_extend.c:565:             *(dst+j) = (*(src+j))<<shift;
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15968              		.loc 1 565 25 is_stmt 0 view .LVU5651
 15969 527b C57E6F2C 		vmovdqu	ymm13, YMMWORD PTR [rsi+rax]	# MEM[base: src_35(D), index: ivtmp.693_114, offset: 0B], MEM
 15969      06
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15970              		.loc 1 564 32 is_stmt 1 view .LVU5652
 15971              	.LVL1115:
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15972              		.loc 1 564 25 view .LVU5653
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15973              		.loc 1 565 13 view .LVU5654
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15974              		.loc 1 564 32 view .LVU5655
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15975              		.loc 1 564 25 view .LVU5656
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15976              		.loc 1 565 13 view .LVU5657
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15977              		.loc 1 564 32 view .LVU5658
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15978              		.loc 1 564 25 view .LVU5659
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15979              		.loc 1 564 25 is_stmt 0 view .LVU5660
 15980              	.LBE677:
 15981              	.LBB678:
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15982              		.loc 1 566 25 is_stmt 1 view .LVU5661
 567:sieve_extend.c ****     }
 15983              		.loc 1 567 13 view .LVU5662
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15984              		.loc 1 566 32 view .LVU5663
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15985              		.loc 1 566 25 view .LVU5664
 567:sieve_extend.c ****     }
 15986              		.loc 1 567 13 view .LVU5665
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15987              		.loc 1 566 32 view .LVU5666
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15988              		.loc 1 566 25 view .LVU5667
GAS LISTING /tmp/cctyCFAS.s 			page 427


 567:sieve_extend.c ****     }
 15989              		.loc 1 567 13 view .LVU5668
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15990              		.loc 1 566 32 view .LVU5669
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15991              		.loc 1 566 25 view .LVU5670
 567:sieve_extend.c ****     }
 15992              		.loc 1 567 13 view .LVU5671
 15993 5280 41FFC2   		inc	r10d	# ivtmp.690
 15994              	.LBE678:
 15995              	.LBB679:
 15996              	# sieve_extend.c:565:             *(dst+j) = (*(src+j))<<shift;
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15997              		.loc 1 565 25 is_stmt 0 view .LVU5672
 15998 5283 C443FD00 		vpermq	ymm14, ymm13, 85	# vect__102.679, MEM[base: src_35(D), index: ivtmp.693_114, offset: 0B],
 15998      F555
 15999              	.LBE679:
 16000              	.LBB680:
 16001              	# sieve_extend.c:567:             *(dst+j) |= (*(src+1)>>(64-shift));
 567:sieve_extend.c ****     }
 16002              		.loc 1 567 34 view .LVU5673
 16003 5289 C50DD3F8 		vpsrlq	ymm15, ymm14, xmm0	# vect__57.680, vect__102.679, _4
 16004              	.LBE680:
 16005              	.LBB681:
 16006              	# sieve_extend.c:565:             *(dst+j) = (*(src+j))<<shift;
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16007              		.loc 1 565 34 view .LVU5674
 16008 528d C595F3D9 		vpsllq	ymm3, ymm13, xmm1	# vect__104.684, MEM[base: src_35(D), index: ivtmp.693_114, offset: 0B], 
 16009              	.LBE681:
 16010              	.LBB682:
 16011              	# sieve_extend.c:567:             *(dst+j) |= (*(src+1)>>(64-shift));
 567:sieve_extend.c ****     }
 16012              		.loc 1 567 22 view .LVU5675
 16013 5291 C585EBE3 		vpor	ymm4, ymm15, ymm3	# vect__58.685, vect__57.680, vect__104.684
 16014 5295 C5FE7F24 		vmovdqu	YMMWORD PTR [rdi+rax], ymm4	# MEM[base: dst_34(D), index: ivtmp.693_114, offset: 0B], vect
 16014      07
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16015              		.loc 1 566 32 is_stmt 1 view .LVU5676
 16016              	.LVL1116:
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16017              		.loc 1 566 25 view .LVU5677
 16018              	.LBE682:
 562:sieve_extend.c ****     {
 16019              		.loc 1 562 24 view .LVU5678
 562:sieve_extend.c ****     {
 16020              		.loc 1 562 12 view .LVU5679
 16021 529a 4883C020 		add	rax, 32	# ivtmp.693,
 16022              	.L1647:
 16023              	.LVL1117:
 16024              	.LBB683:
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16025              		.loc 1 564 25 view .LVU5680
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16026              		.loc 1 565 13 view .LVU5681
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16027              		.loc 1 564 32 view .LVU5682
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
GAS LISTING /tmp/cctyCFAS.s 			page 428


 16028              		.loc 1 564 25 view .LVU5683
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16029              		.loc 1 565 13 view .LVU5684
 16030              	# sieve_extend.c:565:             *(dst+j) = (*(src+j))<<shift;
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16031              		.loc 1 565 25 is_stmt 0 view .LVU5685
 16032 529e C5FE6F2C 		vmovdqu	ymm5, YMMWORD PTR [rsi+rax]	# MEM[base: src_35(D), index: ivtmp.693_114, offset: 0B], MEM[
 16032      06
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16033              		.loc 1 564 32 is_stmt 1 view .LVU5686
 16034              	.LVL1118:
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16035              		.loc 1 564 25 view .LVU5687
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16036              		.loc 1 565 13 view .LVU5688
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16037              		.loc 1 564 32 view .LVU5689
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16038              		.loc 1 564 25 view .LVU5690
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16039              		.loc 1 565 13 view .LVU5691
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16040              		.loc 1 564 32 view .LVU5692
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16041              		.loc 1 564 25 view .LVU5693
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16042              		.loc 1 564 25 is_stmt 0 view .LVU5694
 16043              	.LBE683:
 16044              	.LBB684:
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16045              		.loc 1 566 25 is_stmt 1 view .LVU5695
 567:sieve_extend.c ****     }
 16046              		.loc 1 567 13 view .LVU5696
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16047              		.loc 1 566 32 view .LVU5697
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16048              		.loc 1 566 25 view .LVU5698
 567:sieve_extend.c ****     }
 16049              		.loc 1 567 13 view .LVU5699
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16050              		.loc 1 566 32 view .LVU5700
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16051              		.loc 1 566 25 view .LVU5701
 567:sieve_extend.c ****     }
 16052              		.loc 1 567 13 view .LVU5702
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16053              		.loc 1 566 32 view .LVU5703
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16054              		.loc 1 566 25 view .LVU5704
 567:sieve_extend.c ****     }
 16055              		.loc 1 567 13 view .LVU5705
 16056 52a3 41FFC2   		inc	r10d	# ivtmp.690
 16057              	.LBE684:
 16058              	.LBB685:
 16059              	# sieve_extend.c:565:             *(dst+j) = (*(src+j))<<shift;
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16060              		.loc 1 565 25 is_stmt 0 view .LVU5706
GAS LISTING /tmp/cctyCFAS.s 			page 429


 16061 52a6 C4E3FD00 		vpermq	ymm2, ymm5, 85	# vect__102.679, MEM[base: src_35(D), index: ivtmp.693_114, offset: 0B],
 16061      D555
 16062              	.LBE685:
 16063              	.LBB686:
 16064              	# sieve_extend.c:567:             *(dst+j) |= (*(src+1)>>(64-shift));
 567:sieve_extend.c ****     }
 16065              		.loc 1 567 34 view .LVU5707
 16066 52ac C5EDD3F0 		vpsrlq	ymm6, ymm2, xmm0	# vect__57.680, vect__102.679, _4
 16067              	.LBE686:
 16068              	.LBB687:
 16069              	# sieve_extend.c:565:             *(dst+j) = (*(src+j))<<shift;
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16070              		.loc 1 565 34 view .LVU5708
 16071 52b0 C5D5F3F9 		vpsllq	ymm7, ymm5, xmm1	# vect__104.684, MEM[base: src_35(D), index: ivtmp.693_114, offset: 0B], s
 16072              	.LBE687:
 16073              	.LBB688:
 16074              	# sieve_extend.c:567:             *(dst+j) |= (*(src+1)>>(64-shift));
 567:sieve_extend.c ****     }
 16075              		.loc 1 567 22 view .LVU5709
 16076 52b4 C54DEBC7 		vpor	ymm8, ymm6, ymm7	# vect__58.685, vect__57.680, vect__104.684
 16077 52b8 C57E7F04 		vmovdqu	YMMWORD PTR [rdi+rax], ymm8	# MEM[base: dst_34(D), index: ivtmp.693_114, offset: 0B], vect
 16077      07
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16078              		.loc 1 566 32 is_stmt 1 view .LVU5710
 16079              	.LVL1119:
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16080              		.loc 1 566 25 view .LVU5711
 16081              	.LBE688:
 562:sieve_extend.c ****     {
 16082              		.loc 1 562 24 view .LVU5712
 562:sieve_extend.c ****     {
 16083              		.loc 1 562 12 view .LVU5713
 16084 52bd 4883C020 		add	rax, 32	# ivtmp.693,
 16085              	.L1646:
 16086              	.LVL1120:
 16087              	.LBB689:
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16088              		.loc 1 564 25 view .LVU5714
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16089              		.loc 1 565 13 view .LVU5715
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16090              		.loc 1 564 32 view .LVU5716
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16091              		.loc 1 564 25 view .LVU5717
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16092              		.loc 1 565 13 view .LVU5718
 16093              	# sieve_extend.c:565:             *(dst+j) = (*(src+j))<<shift;
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16094              		.loc 1 565 25 is_stmt 0 view .LVU5719
 16095 52c1 C57E6F0C 		vmovdqu	ymm9, YMMWORD PTR [rsi+rax]	# MEM[base: src_35(D), index: ivtmp.693_114, offset: 0B], MEM[
 16095      06
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16096              		.loc 1 564 32 is_stmt 1 view .LVU5720
 16097              	.LVL1121:
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16098              		.loc 1 564 25 view .LVU5721
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
GAS LISTING /tmp/cctyCFAS.s 			page 430


 16099              		.loc 1 565 13 view .LVU5722
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16100              		.loc 1 564 32 view .LVU5723
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16101              		.loc 1 564 25 view .LVU5724
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16102              		.loc 1 565 13 view .LVU5725
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16103              		.loc 1 564 32 view .LVU5726
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16104              		.loc 1 564 25 view .LVU5727
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16105              		.loc 1 564 25 is_stmt 0 view .LVU5728
 16106              	.LBE689:
 16107              	.LBB690:
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16108              		.loc 1 566 25 is_stmt 1 view .LVU5729
 567:sieve_extend.c ****     }
 16109              		.loc 1 567 13 view .LVU5730
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16110              		.loc 1 566 32 view .LVU5731
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16111              		.loc 1 566 25 view .LVU5732
 567:sieve_extend.c ****     }
 16112              		.loc 1 567 13 view .LVU5733
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16113              		.loc 1 566 32 view .LVU5734
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16114              		.loc 1 566 25 view .LVU5735
 567:sieve_extend.c ****     }
 16115              		.loc 1 567 13 view .LVU5736
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16116              		.loc 1 566 32 view .LVU5737
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16117              		.loc 1 566 25 view .LVU5738
 567:sieve_extend.c ****     }
 16118              		.loc 1 567 13 view .LVU5739
 16119 52c6 41FFC2   		inc	r10d	# ivtmp.690
 16120              	.LBE690:
 16121              	.LBB691:
 16122              	# sieve_extend.c:565:             *(dst+j) = (*(src+j))<<shift;
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16123              		.loc 1 565 25 is_stmt 0 view .LVU5740
 16124 52c9 C443FD00 		vpermq	ymm10, ymm9, 85	# vect__102.679, MEM[base: src_35(D), index: ivtmp.693_114, offset: 0B],
 16124      D155
 16125              	.LBE691:
 16126              	.LBB692:
 16127              	# sieve_extend.c:567:             *(dst+j) |= (*(src+1)>>(64-shift));
 567:sieve_extend.c ****     }
 16128              		.loc 1 567 34 view .LVU5741
 16129 52cf C52DD3D8 		vpsrlq	ymm11, ymm10, xmm0	# vect__57.680, vect__102.679, _4
 16130              	.LBE692:
 16131              	.LBB693:
 16132              	# sieve_extend.c:565:             *(dst+j) = (*(src+j))<<shift;
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16133              		.loc 1 565 34 view .LVU5742
 16134 52d3 C535F3E1 		vpsllq	ymm12, ymm9, xmm1	# vect__104.684, MEM[base: src_35(D), index: ivtmp.693_114, offset: 0B], 
GAS LISTING /tmp/cctyCFAS.s 			page 431


 16135              	.LBE693:
 16136              	.LBB694:
 16137              	# sieve_extend.c:567:             *(dst+j) |= (*(src+1)>>(64-shift));
 567:sieve_extend.c ****     }
 16138              		.loc 1 567 22 view .LVU5743
 16139 52d7 C44125EB 		vpor	ymm13, ymm11, ymm12	# vect__58.685, vect__57.680, vect__104.684
 16139      EC
 16140 52dc C57E7F2C 		vmovdqu	YMMWORD PTR [rdi+rax], ymm13	# MEM[base: dst_34(D), index: ivtmp.693_114, offset: 0B], vec
 16140      07
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16141              		.loc 1 566 32 is_stmt 1 view .LVU5744
 16142              	.LVL1122:
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16143              		.loc 1 566 25 view .LVU5745
 16144              	.LBE694:
 562:sieve_extend.c ****     {
 16145              		.loc 1 562 24 view .LVU5746
 562:sieve_extend.c ****     {
 16146              		.loc 1 562 12 view .LVU5747
 16147 52e1 4883C020 		add	rax, 32	# ivtmp.693,
 16148 52e5 4539D0   		cmp	r8d, r10d	# tmp172, ivtmp.690
 16149 52e8 0F861E01 		jbe	.L1659	#,
 16149      0000
 16150              	.L1617:
 16151              	.LVL1123:
 16152              	.LBB695:
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16153              		.loc 1 564 25 view .LVU5748
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16154              		.loc 1 565 13 view .LVU5749
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16155              		.loc 1 564 32 view .LVU5750
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16156              		.loc 1 564 25 view .LVU5751
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16157              		.loc 1 565 13 view .LVU5752
 16158              	# sieve_extend.c:565:             *(dst+j) = (*(src+j))<<shift;
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16159              		.loc 1 565 25 is_stmt 0 view .LVU5753
 16160 52ee C5FE6F74 		vmovdqu	ymm6, YMMWORD PTR 32[rsi+rax]	# MEM[base: src_35(D), index: ivtmp.693_114, offset: 0B], ME
 16160      0620
 16161 52f4 C57E6F34 		vmovdqu	ymm14, YMMWORD PTR [rsi+rax]	# MEM[base: src_35(D), index: ivtmp.693_114, offset: 0B], MEM
 16161      06
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16162              		.loc 1 564 32 is_stmt 1 view .LVU5754
 16163              	.LVL1124:
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16164              		.loc 1 564 25 view .LVU5755
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16165              		.loc 1 565 13 view .LVU5756
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16166              		.loc 1 564 32 view .LVU5757
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16167              		.loc 1 564 25 view .LVU5758
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16168              		.loc 1 565 13 view .LVU5759
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
GAS LISTING /tmp/cctyCFAS.s 			page 432


 16169              		.loc 1 564 32 view .LVU5760
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16170              		.loc 1 564 25 view .LVU5761
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16171              		.loc 1 564 25 is_stmt 0 view .LVU5762
 16172              	.LBE695:
 16173              	.LBB696:
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16174              		.loc 1 566 25 is_stmt 1 view .LVU5763
 567:sieve_extend.c ****     }
 16175              		.loc 1 567 13 view .LVU5764
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16176              		.loc 1 566 32 view .LVU5765
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16177              		.loc 1 566 25 view .LVU5766
 567:sieve_extend.c ****     }
 16178              		.loc 1 567 13 view .LVU5767
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16179              		.loc 1 566 32 view .LVU5768
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16180              		.loc 1 566 25 view .LVU5769
 567:sieve_extend.c ****     }
 16181              		.loc 1 567 13 view .LVU5770
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16182              		.loc 1 566 32 view .LVU5771
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16183              		.loc 1 566 25 view .LVU5772
 567:sieve_extend.c ****     }
 16184              		.loc 1 567 13 view .LVU5773
 16185              	.LBE696:
 16186              	.LBB697:
 16187              	# sieve_extend.c:565:             *(dst+j) = (*(src+j))<<shift;
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16188              		.loc 1 565 25 is_stmt 0 view .LVU5774
 16189 52f9 C4E3FD00 		vpermq	ymm2, ymm6, 85	# vect__102.679, MEM[base: src_35(D), index: ivtmp.693_114, offset: 0B],
 16189      D655
 16190              	.LBE697:
 16191              	.LBB698:
 16192              	# sieve_extend.c:567:             *(dst+j) |= (*(src+1)>>(64-shift));
 567:sieve_extend.c ****     }
 16193              		.loc 1 567 34 view .LVU5775
 16194 52ff C5EDD3F8 		vpsrlq	ymm7, ymm2, xmm0	# vect__57.680, vect__102.679, _4
 16195              	.LBE698:
 16196              	.LBB699:
 16197              	# sieve_extend.c:565:             *(dst+j) = (*(src+j))<<shift;
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16198              		.loc 1 565 34 view .LVU5776
 16199 5303 C54DF3C1 		vpsllq	ymm8, ymm6, xmm1	# vect__104.684, MEM[base: src_35(D), index: ivtmp.693_114, offset: 0B], s
 16200              	# sieve_extend.c:565:             *(dst+j) = (*(src+j))<<shift;
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16201              		.loc 1 565 25 view .LVU5777
 16202 5307 C443FD00 		vpermq	ymm15, ymm14, 85	# vect__102.679, MEM[base: src_35(D), index: ivtmp.693_114, offset: 0B],
 16202      FE55
 16203              	.LBE699:
 16204              	.LBB700:
 16205              	# sieve_extend.c:567:             *(dst+j) |= (*(src+1)>>(64-shift));
 567:sieve_extend.c ****     }
GAS LISTING /tmp/cctyCFAS.s 			page 433


 16206              		.loc 1 567 22 view .LVU5778
 16207 530d C44145EB 		vpor	ymm9, ymm7, ymm8	# vect__58.685, vect__57.680, vect__104.684
 16207      C8
 16208              	.LBE700:
 16209              	.LBB701:
 16210              	# sieve_extend.c:565:             *(dst+j) = (*(src+j))<<shift;
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16211              		.loc 1 565 25 view .LVU5779
 16212 5312 C5FE6FBC 		vmovdqu	ymm7, YMMWORD PTR 128[rsi+rax]	# MEM[base: src_35(D), index: ivtmp.693_114, offset: 0B], M
 16212      06800000 
 16212      00
 16213 531b C57E6F54 		vmovdqu	ymm10, YMMWORD PTR 64[rsi+rax]	# MEM[base: src_35(D), index: ivtmp.693_114, offset: 0B], M
 16213      0640
 16214              	.LBE701:
 16215              	.LBB702:
 16216              	# sieve_extend.c:567:             *(dst+j) |= (*(src+1)>>(64-shift));
 567:sieve_extend.c ****     }
 16217              		.loc 1 567 34 view .LVU5780
 16218 5321 C585D3E0 		vpsrlq	ymm4, ymm15, xmm0	# vect__57.680, vect__102.679, _4
 16219              	.LBE702:
 16220              	.LBB703:
 16221              	# sieve_extend.c:565:             *(dst+j) = (*(src+j))<<shift;
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16222              		.loc 1 565 34 view .LVU5781
 16223 5325 C58DF3D9 		vpsllq	ymm3, ymm14, xmm1	# vect__104.684, MEM[base: src_35(D), index: ivtmp.693_114, offset: 0B], 
 16224              	# sieve_extend.c:565:             *(dst+j) = (*(src+j))<<shift;
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16225              		.loc 1 565 25 view .LVU5782
 16226 5329 C57E6F7C 		vmovdqu	ymm15, YMMWORD PTR 96[rsi+rax]	# MEM[base: src_35(D), index: ivtmp.693_114, offset: 0B], M
 16226      0660
 16227 532f C4E3FD00 		vpermq	ymm2, ymm7, 85	# vect__102.679, MEM[base: src_35(D), index: ivtmp.693_114, offset: 0B],
 16227      D755
 16228              	.LBE703:
 16229              	.LBB704:
 16230              	# sieve_extend.c:567:             *(dst+j) |= (*(src+1)>>(64-shift));
 567:sieve_extend.c ****     }
 16231              		.loc 1 567 34 view .LVU5783
 16232 5335 C56DD3C0 		vpsrlq	ymm8, ymm2, xmm0	# vect__57.680, vect__102.679, _4
 16233              	# sieve_extend.c:567:             *(dst+j) |= (*(src+1)>>(64-shift));
 567:sieve_extend.c ****     }
 16234              		.loc 1 567 22 view .LVU5784
 16235 5339 C57E7F4C 		vmovdqu	YMMWORD PTR 32[rdi+rax], ymm9	# MEM[base: dst_34(D), index: ivtmp.693_114, offset: 0B], ve
 16235      0720
 16236              	.LBE704:
 16237              	.LBB705:
 16238              	# sieve_extend.c:565:             *(dst+j) = (*(src+j))<<shift;
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16239              		.loc 1 565 34 view .LVU5785
 16240 533f C545F3C9 		vpsllq	ymm9, ymm7, xmm1	# vect__104.684, MEM[base: src_35(D), index: ivtmp.693_114, offset: 0B], s
 16241              	.LBE705:
 16242              	.LBB706:
 16243              	# sieve_extend.c:567:             *(dst+j) |= (*(src+1)>>(64-shift));
 567:sieve_extend.c ****     }
 16244              		.loc 1 567 22 view .LVU5786
 16245 5343 C5DDEBEB 		vpor	ymm5, ymm4, ymm3	# vect__58.685, vect__57.680, vect__104.684
 16246              	.LBE706:
 16247              	.LBB707:
GAS LISTING /tmp/cctyCFAS.s 			page 434


 16248              	# sieve_extend.c:565:             *(dst+j) = (*(src+j))<<shift;
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16249              		.loc 1 565 25 view .LVU5787
 16250 5347 C443FD00 		vpermq	ymm11, ymm10, 85	# vect__102.679, MEM[base: src_35(D), index: ivtmp.693_114, offset: 0B],
 16250      DA55
 16251 534d C4C3FD00 		vpermq	ymm4, ymm15, 85	# vect__102.679, MEM[base: src_35(D), index: ivtmp.693_114, offset: 0B],
 16251      E755
 16252              	.LBE707:
 16253              	.LBB708:
 16254              	# sieve_extend.c:567:             *(dst+j) |= (*(src+1)>>(64-shift));
 567:sieve_extend.c ****     }
 16255              		.loc 1 567 34 view .LVU5788
 16256 5353 C525D3E0 		vpsrlq	ymm12, ymm11, xmm0	# vect__57.680, vect__102.679, _4
 16257              	.LBE708:
 16258              	.LBB709:
 16259              	# sieve_extend.c:565:             *(dst+j) = (*(src+j))<<shift;
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16260              		.loc 1 565 34 view .LVU5789
 16261 5357 C52DF3E9 		vpsllq	ymm13, ymm10, xmm1	# vect__104.684, MEM[base: src_35(D), index: ivtmp.693_114, offset: 0B],
 16262              	# sieve_extend.c:565:             *(dst+j) = (*(src+j))<<shift;
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16263              		.loc 1 565 25 view .LVU5790
 16264 535b C57E6F9C 		vmovdqu	ymm11, YMMWORD PTR 160[rsi+rax]	# MEM[base: src_35(D), index: ivtmp.693_114, offset: 0B], 
 16264      06A00000 
 16264      00
 16265              	.LBE709:
 16266              	.LBB710:
 16267              	# sieve_extend.c:567:             *(dst+j) |= (*(src+1)>>(64-shift));
 567:sieve_extend.c ****     }
 16268              		.loc 1 567 22 view .LVU5791
 16269 5364 C4413DEB 		vpor	ymm10, ymm8, ymm9	# vect__58.685, vect__57.680, vect__104.684
 16269      D1
 16270              	.LBE710:
 16271              	.LBB711:
 16272              	# sieve_extend.c:565:             *(dst+j) = (*(src+j))<<shift;
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16273              		.loc 1 565 34 view .LVU5792
 16274 5369 C585F3D9 		vpsllq	ymm3, ymm15, xmm1	# vect__104.684, MEM[base: src_35(D), index: ivtmp.693_114, offset: 0B], 
 16275              	# sieve_extend.c:565:             *(dst+j) = (*(src+j))<<shift;
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16276              		.loc 1 565 25 view .LVU5793
 16277 536d C57E6F84 		vmovdqu	ymm8, YMMWORD PTR 224[rsi+rax]	# MEM[base: src_35(D), index: ivtmp.693_114, offset: 0B], M
 16277      06E00000 
 16277      00
 16278              	.LBE711:
 16279              	.LBB712:
 16280              	# sieve_extend.c:567:             *(dst+j) |= (*(src+1)>>(64-shift));
 567:sieve_extend.c ****     }
 16281              		.loc 1 567 22 view .LVU5794
 16282 5376 C5FE7F2C 		vmovdqu	YMMWORD PTR [rdi+rax], ymm5	# MEM[base: dst_34(D), index: ivtmp.693_114, offset: 0B], vect
 16282      07
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16283              		.loc 1 566 32 is_stmt 1 view .LVU5795
 16284              	.LVL1125:
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16285              		.loc 1 566 25 view .LVU5796
 16286              	.LBE712:
GAS LISTING /tmp/cctyCFAS.s 			page 435


 562:sieve_extend.c ****     {
 16287              		.loc 1 562 24 view .LVU5797
 562:sieve_extend.c ****     {
 16288              		.loc 1 562 12 view .LVU5798
 16289              	.LBB713:
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16290              		.loc 1 564 25 view .LVU5799
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16291              		.loc 1 565 13 view .LVU5800
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16292              		.loc 1 564 32 view .LVU5801
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16293              		.loc 1 564 25 view .LVU5802
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16294              		.loc 1 565 13 view .LVU5803
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16295              		.loc 1 564 32 view .LVU5804
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16296              		.loc 1 564 25 view .LVU5805
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16297              		.loc 1 565 13 view .LVU5806
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16298              		.loc 1 564 32 view .LVU5807
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16299              		.loc 1 564 25 view .LVU5808
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16300              		.loc 1 565 13 view .LVU5809
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16301              		.loc 1 564 32 view .LVU5810
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16302              		.loc 1 564 25 view .LVU5811
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16303              		.loc 1 564 25 is_stmt 0 view .LVU5812
 16304              	.LBE713:
 16305              	.LBB714:
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16306              		.loc 1 566 25 is_stmt 1 view .LVU5813
 567:sieve_extend.c ****     }
 16307              		.loc 1 567 13 view .LVU5814
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16308              		.loc 1 566 32 view .LVU5815
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16309              		.loc 1 566 25 view .LVU5816
 567:sieve_extend.c ****     }
 16310              		.loc 1 567 13 view .LVU5817
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16311              		.loc 1 566 32 view .LVU5818
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16312              		.loc 1 566 25 view .LVU5819
 567:sieve_extend.c ****     }
 16313              		.loc 1 567 13 view .LVU5820
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16314              		.loc 1 566 32 view .LVU5821
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16315              		.loc 1 566 25 view .LVU5822
 567:sieve_extend.c ****     }
 16316              		.loc 1 567 13 view .LVU5823
GAS LISTING /tmp/cctyCFAS.s 			page 436


 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16317              		.loc 1 566 32 view .LVU5824
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16318              		.loc 1 566 25 view .LVU5825
 16319              	.LBE714:
 562:sieve_extend.c ****     {
 16320              		.loc 1 562 24 view .LVU5826
 562:sieve_extend.c ****     {
 16321              		.loc 1 562 12 view .LVU5827
 16322              	.LBB715:
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16323              		.loc 1 564 25 view .LVU5828
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16324              		.loc 1 565 13 view .LVU5829
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16325              		.loc 1 564 32 view .LVU5830
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16326              		.loc 1 564 25 view .LVU5831
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16327              		.loc 1 565 13 view .LVU5832
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16328              		.loc 1 564 32 view .LVU5833
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16329              		.loc 1 564 25 view .LVU5834
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16330              		.loc 1 565 13 view .LVU5835
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16331              		.loc 1 564 32 view .LVU5836
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16332              		.loc 1 564 25 view .LVU5837
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16333              		.loc 1 565 13 view .LVU5838
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16334              		.loc 1 564 32 view .LVU5839
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16335              		.loc 1 564 25 view .LVU5840
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16336              		.loc 1 564 25 is_stmt 0 view .LVU5841
 16337              	.LBE715:
 16338              	.LBB716:
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16339              		.loc 1 566 25 is_stmt 1 view .LVU5842
 567:sieve_extend.c ****     }
 16340              		.loc 1 567 13 view .LVU5843
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16341              		.loc 1 566 32 view .LVU5844
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16342              		.loc 1 566 25 view .LVU5845
 567:sieve_extend.c ****     }
 16343              		.loc 1 567 13 view .LVU5846
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16344              		.loc 1 566 32 view .LVU5847
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16345              		.loc 1 566 25 view .LVU5848
 567:sieve_extend.c ****     }
 16346              		.loc 1 567 13 view .LVU5849
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
GAS LISTING /tmp/cctyCFAS.s 			page 437


 16347              		.loc 1 566 32 view .LVU5850
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16348              		.loc 1 566 25 view .LVU5851
 567:sieve_extend.c ****     }
 16349              		.loc 1 567 13 view .LVU5852
 16350              	# sieve_extend.c:567:             *(dst+j) |= (*(src+1)>>(64-shift));
 567:sieve_extend.c ****     }
 16351              		.loc 1 567 34 is_stmt 0 view .LVU5853
 16352 537b C5DDD3E8 		vpsrlq	ymm5, ymm4, xmm0	# vect__57.680, vect__102.679, _4
 16353              	.LBE716:
 16354              	.LBB717:
 16355              	# sieve_extend.c:565:             *(dst+j) = (*(src+j))<<shift;
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16356              		.loc 1 565 25 view .LVU5854
 16357 537f C5FE6FA4 		vmovdqu	ymm4, YMMWORD PTR 192[rsi+rax]	# MEM[base: src_35(D), index: ivtmp.693_114, offset: 0B], M
 16357      06C00000 
 16357      00
 16358              	.LBE717:
 16359              	.LBB718:
 16360              	# sieve_extend.c:567:             *(dst+j) |= (*(src+1)>>(64-shift));
 567:sieve_extend.c ****     }
 16361              		.loc 1 567 22 view .LVU5855
 16362 5388 C4411DEB 		vpor	ymm14, ymm12, ymm13	# vect__58.685, vect__57.680, vect__104.684
 16362      F5
 16363 538d C5D5EBF3 		vpor	ymm6, ymm5, ymm3	# vect__58.685, vect__57.680, vect__104.684
 16364              	.LBE718:
 16365              	.LBB719:
 16366              	# sieve_extend.c:565:             *(dst+j) = (*(src+j))<<shift;
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16367              		.loc 1 565 25 view .LVU5856
 16368 5391 C443FD00 		vpermq	ymm12, ymm11, 85	# vect__102.679, MEM[base: src_35(D), index: ivtmp.693_114, offset: 0B],
 16368      E355
 16369 5397 C4E3FD00 		vpermq	ymm5, ymm4, 85	# vect__102.679, MEM[base: src_35(D), index: ivtmp.693_114, offset: 0B],
 16369      EC55
 16370 539d C4C3FD00 		vpermq	ymm2, ymm8, 85	# vect__102.679, MEM[base: src_35(D), index: ivtmp.693_114, offset: 0B],
 16370      D055
 16371              	.LBE719:
 16372              	.LBB720:
 16373              	# sieve_extend.c:567:             *(dst+j) |= (*(src+1)>>(64-shift));
 567:sieve_extend.c ****     }
 16374              		.loc 1 567 22 view .LVU5857
 16375 53a3 C57E7F74 		vmovdqu	YMMWORD PTR 64[rdi+rax], ymm14	# MEM[base: dst_34(D), index: ivtmp.693_114, offset: 0B], v
 16375      0740
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16376              		.loc 1 566 32 is_stmt 1 view .LVU5858
 16377              	.LVL1126:
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16378              		.loc 1 566 25 view .LVU5859
 16379              	.LBE720:
 562:sieve_extend.c ****     {
 16380              		.loc 1 562 24 view .LVU5860
 562:sieve_extend.c ****     {
 16381              		.loc 1 562 12 view .LVU5861
 16382              	.LBB721:
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16383              		.loc 1 564 25 view .LVU5862
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
GAS LISTING /tmp/cctyCFAS.s 			page 438


 16384              		.loc 1 565 13 view .LVU5863
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16385              		.loc 1 564 32 view .LVU5864
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16386              		.loc 1 564 25 view .LVU5865
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16387              		.loc 1 565 13 view .LVU5866
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16388              		.loc 1 564 32 view .LVU5867
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16389              		.loc 1 564 25 view .LVU5868
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16390              		.loc 1 565 13 view .LVU5869
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16391              		.loc 1 564 32 view .LVU5870
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16392              		.loc 1 564 25 view .LVU5871
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16393              		.loc 1 565 13 view .LVU5872
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16394              		.loc 1 564 32 view .LVU5873
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16395              		.loc 1 564 25 view .LVU5874
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16396              		.loc 1 564 25 is_stmt 0 view .LVU5875
 16397              	.LBE721:
 16398              	.LBB722:
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16399              		.loc 1 566 25 is_stmt 1 view .LVU5876
 567:sieve_extend.c ****     }
 16400              		.loc 1 567 13 view .LVU5877
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16401              		.loc 1 566 32 view .LVU5878
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16402              		.loc 1 566 25 view .LVU5879
 567:sieve_extend.c ****     }
 16403              		.loc 1 567 13 view .LVU5880
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16404              		.loc 1 566 32 view .LVU5881
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16405              		.loc 1 566 25 view .LVU5882
 567:sieve_extend.c ****     }
 16406              		.loc 1 567 13 view .LVU5883
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16407              		.loc 1 566 32 view .LVU5884
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16408              		.loc 1 566 25 view .LVU5885
 567:sieve_extend.c ****     }
 16409              		.loc 1 567 13 view .LVU5886
 16410              	# sieve_extend.c:567:             *(dst+j) |= (*(src+1)>>(64-shift));
 567:sieve_extend.c ****     }
 16411              		.loc 1 567 22 is_stmt 0 view .LVU5887
 16412 53a9 C5FE7F74 		vmovdqu	YMMWORD PTR 96[rdi+rax], ymm6	# MEM[base: dst_34(D), index: ivtmp.693_114, offset: 0B], ve
 16412      0760
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16413              		.loc 1 566 32 is_stmt 1 view .LVU5888
 16414              	.LVL1127:
GAS LISTING /tmp/cctyCFAS.s 			page 439


 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16415              		.loc 1 566 25 view .LVU5889
 16416              	.LBE722:
 562:sieve_extend.c ****     {
 16417              		.loc 1 562 24 view .LVU5890
 562:sieve_extend.c ****     {
 16418              		.loc 1 562 12 view .LVU5891
 16419              	.LBB723:
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16420              		.loc 1 564 25 view .LVU5892
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16421              		.loc 1 565 13 view .LVU5893
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16422              		.loc 1 564 32 view .LVU5894
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16423              		.loc 1 564 25 view .LVU5895
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16424              		.loc 1 565 13 view .LVU5896
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16425              		.loc 1 564 32 view .LVU5897
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16426              		.loc 1 564 25 view .LVU5898
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16427              		.loc 1 565 13 view .LVU5899
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16428              		.loc 1 564 32 view .LVU5900
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16429              		.loc 1 564 25 view .LVU5901
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16430              		.loc 1 565 13 view .LVU5902
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16431              		.loc 1 564 32 view .LVU5903
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16432              		.loc 1 564 25 view .LVU5904
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16433              		.loc 1 564 25 is_stmt 0 view .LVU5905
 16434              	.LBE723:
 16435              	.LBB724:
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16436              		.loc 1 566 25 is_stmt 1 view .LVU5906
 567:sieve_extend.c ****     }
 16437              		.loc 1 567 13 view .LVU5907
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16438              		.loc 1 566 32 view .LVU5908
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16439              		.loc 1 566 25 view .LVU5909
 567:sieve_extend.c ****     }
 16440              		.loc 1 567 13 view .LVU5910
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16441              		.loc 1 566 32 view .LVU5911
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16442              		.loc 1 566 25 view .LVU5912
 567:sieve_extend.c ****     }
 16443              		.loc 1 567 13 view .LVU5913
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16444              		.loc 1 566 32 view .LVU5914
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
GAS LISTING /tmp/cctyCFAS.s 			page 440


 16445              		.loc 1 566 25 view .LVU5915
 567:sieve_extend.c ****     }
 16446              		.loc 1 567 13 view .LVU5916
 16447              	.LBE724:
 16448              	.LBB725:
 16449              	# sieve_extend.c:565:             *(dst+j) = (*(src+j))<<shift;
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16450              		.loc 1 565 34 is_stmt 0 view .LVU5917
 16451 53af C525F3F1 		vpsllq	ymm14, ymm11, xmm1	# vect__104.684, MEM[base: src_35(D), index: ivtmp.693_114, offset: 0B],
 16452              	.LBE725:
 16453              	.LBB726:
 16454              	# sieve_extend.c:567:             *(dst+j) |= (*(src+1)>>(64-shift));
 567:sieve_extend.c ****     }
 16455              		.loc 1 567 22 view .LVU5918
 16456 53b3 C57E7F94 		vmovdqu	YMMWORD PTR 128[rdi+rax], ymm10	# MEM[base: dst_34(D), index: ivtmp.693_114, offset: 0B], 
 16456      07800000 
 16456      00
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16457              		.loc 1 566 32 is_stmt 1 view .LVU5919
 16458              	.LVL1128:
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16459              		.loc 1 566 25 view .LVU5920
 16460              	.LBE726:
 562:sieve_extend.c ****     {
 16461              		.loc 1 562 24 view .LVU5921
 562:sieve_extend.c ****     {
 16462              		.loc 1 562 12 view .LVU5922
 16463              	.LBB727:
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16464              		.loc 1 564 25 view .LVU5923
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16465              		.loc 1 565 13 view .LVU5924
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16466              		.loc 1 564 32 view .LVU5925
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16467              		.loc 1 564 25 view .LVU5926
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16468              		.loc 1 565 13 view .LVU5927
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16469              		.loc 1 564 32 view .LVU5928
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16470              		.loc 1 564 25 view .LVU5929
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16471              		.loc 1 565 13 view .LVU5930
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16472              		.loc 1 564 32 view .LVU5931
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16473              		.loc 1 564 25 view .LVU5932
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16474              		.loc 1 565 13 view .LVU5933
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16475              		.loc 1 564 32 view .LVU5934
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16476              		.loc 1 564 25 view .LVU5935
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16477              		.loc 1 564 25 is_stmt 0 view .LVU5936
 16478              	.LBE727:
GAS LISTING /tmp/cctyCFAS.s 			page 441


 16479              	.LBB728:
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16480              		.loc 1 566 25 is_stmt 1 view .LVU5937
 567:sieve_extend.c ****     }
 16481              		.loc 1 567 13 view .LVU5938
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16482              		.loc 1 566 32 view .LVU5939
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16483              		.loc 1 566 25 view .LVU5940
 567:sieve_extend.c ****     }
 16484              		.loc 1 567 13 view .LVU5941
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16485              		.loc 1 566 32 view .LVU5942
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16486              		.loc 1 566 25 view .LVU5943
 567:sieve_extend.c ****     }
 16487              		.loc 1 567 13 view .LVU5944
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16488              		.loc 1 566 32 view .LVU5945
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16489              		.loc 1 566 25 view .LVU5946
 567:sieve_extend.c ****     }
 16490              		.loc 1 567 13 view .LVU5947
 16491              	# sieve_extend.c:567:             *(dst+j) |= (*(src+1)>>(64-shift));
 567:sieve_extend.c ****     }
 16492              		.loc 1 567 34 is_stmt 0 view .LVU5948
 16493 53bc C51DD3E8 		vpsrlq	ymm13, ymm12, xmm0	# vect__57.680, vect__102.679, _4
 16494 53c0 C5D5D3F0 		vpsrlq	ymm6, ymm5, xmm0	# vect__57.680, vect__102.679, _4
 16495              	.LBE728:
 16496              	.LBB729:
 16497              	# sieve_extend.c:565:             *(dst+j) = (*(src+j))<<shift;
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16498              		.loc 1 565 34 view .LVU5949
 16499 53c4 C5DDF3D9 		vpsllq	ymm3, ymm4, xmm1	# vect__104.684, MEM[base: src_35(D), index: ivtmp.693_114, offset: 0B], s
 16500              	.LBE729:
 16501              	.LBB730:
 16502              	# sieve_extend.c:567:             *(dst+j) |= (*(src+1)>>(64-shift));
 567:sieve_extend.c ****     }
 16503              		.loc 1 567 34 view .LVU5950
 16504 53c8 C56DD3C8 		vpsrlq	ymm9, ymm2, xmm0	# vect__57.680, vect__102.679, _4
 16505              	.LBE730:
 16506              	.LBB731:
 16507              	# sieve_extend.c:565:             *(dst+j) = (*(src+j))<<shift;
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16508              		.loc 1 565 34 view .LVU5951
 16509 53cc C53DF3D1 		vpsllq	ymm10, ymm8, xmm1	# vect__104.684, MEM[base: src_35(D), index: ivtmp.693_114, offset: 0B], 
 16510              	.LBE731:
 16511              	.LBB732:
 16512              	# sieve_extend.c:567:             *(dst+j) |= (*(src+1)>>(64-shift));
 567:sieve_extend.c ****     }
 16513              		.loc 1 567 22 view .LVU5952
 16514 53d0 C44115EB 		vpor	ymm15, ymm13, ymm14	# vect__58.685, vect__57.680, vect__104.684
 16514      FE
 16515 53d5 C5CDEBFB 		vpor	ymm7, ymm6, ymm3	# vect__58.685, vect__57.680, vect__104.684
 16516 53d9 C44135EB 		vpor	ymm11, ymm9, ymm10	# vect__58.685, vect__57.680, vect__104.684
 16516      DA
 16517 53de 4183C208 		add	r10d, 8	# ivtmp.690,
GAS LISTING /tmp/cctyCFAS.s 			page 442


 16518 53e2 C57E7FBC 		vmovdqu	YMMWORD PTR 160[rdi+rax], ymm15	# MEM[base: dst_34(D), index: ivtmp.693_114, offset: 0B], 
 16518      07A00000 
 16518      00
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16519              		.loc 1 566 32 is_stmt 1 view .LVU5953
 16520              	.LVL1129:
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16521              		.loc 1 566 25 view .LVU5954
 16522              	.LBE732:
 562:sieve_extend.c ****     {
 16523              		.loc 1 562 24 view .LVU5955
 562:sieve_extend.c ****     {
 16524              		.loc 1 562 12 view .LVU5956
 16525              	.LBB733:
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16526              		.loc 1 564 25 view .LVU5957
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16527              		.loc 1 565 13 view .LVU5958
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16528              		.loc 1 564 32 view .LVU5959
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16529              		.loc 1 564 25 view .LVU5960
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16530              		.loc 1 565 13 view .LVU5961
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16531              		.loc 1 564 32 view .LVU5962
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16532              		.loc 1 564 25 view .LVU5963
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16533              		.loc 1 565 13 view .LVU5964
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16534              		.loc 1 564 32 view .LVU5965
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16535              		.loc 1 564 25 view .LVU5966
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16536              		.loc 1 565 13 view .LVU5967
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16537              		.loc 1 564 32 view .LVU5968
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16538              		.loc 1 564 25 view .LVU5969
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16539              		.loc 1 564 25 is_stmt 0 view .LVU5970
 16540              	.LBE733:
 16541              	.LBB734:
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16542              		.loc 1 566 25 is_stmt 1 view .LVU5971
 567:sieve_extend.c ****     }
 16543              		.loc 1 567 13 view .LVU5972
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16544              		.loc 1 566 32 view .LVU5973
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16545              		.loc 1 566 25 view .LVU5974
 567:sieve_extend.c ****     }
 16546              		.loc 1 567 13 view .LVU5975
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16547              		.loc 1 566 32 view .LVU5976
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
GAS LISTING /tmp/cctyCFAS.s 			page 443


 16548              		.loc 1 566 25 view .LVU5977
 567:sieve_extend.c ****     }
 16549              		.loc 1 567 13 view .LVU5978
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16550              		.loc 1 566 32 view .LVU5979
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16551              		.loc 1 566 25 view .LVU5980
 567:sieve_extend.c ****     }
 16552              		.loc 1 567 13 view .LVU5981
 16553              	# sieve_extend.c:567:             *(dst+j) |= (*(src+1)>>(64-shift));
 567:sieve_extend.c ****     }
 16554              		.loc 1 567 22 is_stmt 0 view .LVU5982
 16555 53eb C5FE7FBC 		vmovdqu	YMMWORD PTR 192[rdi+rax], ymm7	# MEM[base: dst_34(D), index: ivtmp.693_114, offset: 0B], v
 16555      07C00000 
 16555      00
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16556              		.loc 1 566 32 is_stmt 1 view .LVU5983
 16557              	.LVL1130:
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16558              		.loc 1 566 25 view .LVU5984
 16559              	.LBE734:
 562:sieve_extend.c ****     {
 16560              		.loc 1 562 24 view .LVU5985
 562:sieve_extend.c ****     {
 16561              		.loc 1 562 12 view .LVU5986
 16562              	.LBB735:
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16563              		.loc 1 564 25 view .LVU5987
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16564              		.loc 1 565 13 view .LVU5988
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16565              		.loc 1 564 32 view .LVU5989
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16566              		.loc 1 564 25 view .LVU5990
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16567              		.loc 1 565 13 view .LVU5991
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16568              		.loc 1 564 32 view .LVU5992
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16569              		.loc 1 564 25 view .LVU5993
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16570              		.loc 1 565 13 view .LVU5994
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16571              		.loc 1 564 32 view .LVU5995
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16572              		.loc 1 564 25 view .LVU5996
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16573              		.loc 1 565 13 view .LVU5997
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16574              		.loc 1 564 32 view .LVU5998
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16575              		.loc 1 564 25 view .LVU5999
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16576              		.loc 1 564 25 is_stmt 0 view .LVU6000
 16577              	.LBE735:
 16578              	.LBB736:
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
GAS LISTING /tmp/cctyCFAS.s 			page 444


 16579              		.loc 1 566 25 is_stmt 1 view .LVU6001
 567:sieve_extend.c ****     }
 16580              		.loc 1 567 13 view .LVU6002
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16581              		.loc 1 566 32 view .LVU6003
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16582              		.loc 1 566 25 view .LVU6004
 567:sieve_extend.c ****     }
 16583              		.loc 1 567 13 view .LVU6005
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16584              		.loc 1 566 32 view .LVU6006
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16585              		.loc 1 566 25 view .LVU6007
 567:sieve_extend.c ****     }
 16586              		.loc 1 567 13 view .LVU6008
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16587              		.loc 1 566 32 view .LVU6009
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16588              		.loc 1 566 25 view .LVU6010
 567:sieve_extend.c ****     }
 16589              		.loc 1 567 13 view .LVU6011
 16590              	# sieve_extend.c:567:             *(dst+j) |= (*(src+1)>>(64-shift));
 567:sieve_extend.c ****     }
 16591              		.loc 1 567 22 is_stmt 0 view .LVU6012
 16592 53f4 C57E7F9C 		vmovdqu	YMMWORD PTR 224[rdi+rax], ymm11	# MEM[base: dst_34(D), index: ivtmp.693_114, offset: 0B], 
 16592      07E00000 
 16592      00
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16593              		.loc 1 566 32 is_stmt 1 view .LVU6013
 16594              	.LVL1131:
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16595              		.loc 1 566 25 view .LVU6014
 16596              	.LBE736:
 562:sieve_extend.c ****     {
 16597              		.loc 1 562 24 view .LVU6015
 562:sieve_extend.c ****     {
 16598              		.loc 1 562 12 view .LVU6016
 16599 53fd 48050001 		add	rax, 256	# ivtmp.693,
 16599      0000
 16600 5403 4539D0   		cmp	r8d, r10d	# tmp172, ivtmp.690
 16601 5406 0F87E2FE 		ja	.L1617	#,
 16601      FFFF
 16602              	.L1659:
 16603 540c 4589CB   		mov	r11d, r9d	# _80, _80
 16604 540f 49FFC3   		inc	r11	# tmp144
 16605 5412 49C1E305 		sal	r11, 5	# _105,
 16606 5416 4C01DF   		add	rdi, r11	# dst, _105
 16607 5419 4C01DE   		add	rsi, r11	# src, _105
 16608 541c 428D0485 		lea	eax, 0[0+r8*4]	# tmp.663,
 16608      00000000 
 16609              	.LVL1132:
 16610              	.L1618:
 569:sieve_extend.c ****     {
 16611              		.loc 1 569 12 view .LVU6017
 16612              	# sieve_extend.c:569:     for (; i < size; ++i,++src,++dst)
 569:sieve_extend.c ****     {
 16613              		.loc 1 569 5 is_stmt 0 view .LVU6018
GAS LISTING /tmp/cctyCFAS.s 			page 445


 16614 5424 39C2     		cmp	edx, eax	# size, tmp.663
 16615 5426 0F8EAA00 		jle	.L1660	#,
 16615      0000
 16616 542c 448D42FF 		lea	r8d, -1[rdx]	# tmp147,
 16617 5430 41BA4000 		mov	r10d, 64	# tmp146,
 16617      0000
 16618 5436 4189D3   		mov	r11d, edx	# niters.658, size
 16619 5439 4129C0   		sub	r8d, eax	# tmp148, tmp.663
 16620 543c 4129CA   		sub	r10d, ecx	# _97, shift
 16621 543f 4129C3   		sub	r11d, eax	# niters.658, tmp.663
 16622 5442 4183F802 		cmp	r8d, 2	# tmp148,
 16623 5446 7640     		jbe	.L1619	#,
 16624              	.LVL1133:
 571:sieve_extend.c ****     }    
 16625              		.loc 1 571 9 is_stmt 1 view .LVU6019
 16626              	# sieve_extend.c:571:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 571:sieve_extend.c ****     }    
 16627              		.loc 1 571 23 is_stmt 0 view .LVU6020
 16628 5448 C5FE6F0E 		vmovdqu	ymm1, YMMWORD PTR [rsi]	# tmp276, MEM[(const uint64_t *)src_30]
 16629              	# sieve_extend.c:571:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 571:sieve_extend.c ****     }    
 16630              		.loc 1 571 43 view .LVU6021
 16631 544c C57E6F76 		vmovdqu	ymm14, YMMWORD PTR 8[rsi]	# tmp277, MEM[(const uint64_t *)src_30 + 8B]
 16631      08
 16632              	# sieve_extend.c:571:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 571:sieve_extend.c ****     }    
 16633              		.loc 1 571 23 view .LVU6022
 16634 5451 C5F96EC1 		vmovd	xmm0, ecx	# shift, shift
 16635              	# sieve_extend.c:571:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 571:sieve_extend.c ****     }    
 16636              		.loc 1 571 43 view .LVU6023
 16637 5455 C441796E 		vmovd	xmm13, r10d	# _97, _97
 16637      EA
 16638 545a 4589D9   		mov	r9d, r11d	# niters_vector_mult_vf.660, niters.658
 16639 545d 4183E1FC 		and	r9d, -4	# niters_vector_mult_vf.660,
 16640              	# sieve_extend.c:571:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 571:sieve_extend.c ****     }    
 16641              		.loc 1 571 23 view .LVU6024
 16642 5461 C575D3E0 		vpsrlq	ymm12, ymm1, xmm0	# vect__17.667, tmp276, shift
 16643              	# sieve_extend.c:571:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 571:sieve_extend.c ****     }    
 16644              		.loc 1 571 43 view .LVU6025
 16645 5465 C4410DF3 		vpsllq	ymm15, ymm14, xmm13	# vect__20.671, tmp277, _97
 16645      FD
 16646 546a 4589C8   		mov	r8d, r9d	# niters_vector_mult_vf.660, niters_vector_mult_vf.660
 16647 546d 49C1E003 		sal	r8, 3	# _129,
 16648              	# sieve_extend.c:571:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 571:sieve_extend.c ****     }    
 16649              		.loc 1 571 32 view .LVU6026
 16650 5471 C4C11DEB 		vpor	ymm4, ymm12, ymm15	# vect__21.672, vect__17.667, vect__20.671
 16650      E7
 16651              	# sieve_extend.c:571:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 571:sieve_extend.c ****     }    
 16652              		.loc 1 571 14 view .LVU6027
 16653 5476 C5FE7F27 		vmovdqu	YMMWORD PTR [rdi], ymm4	# MEM[(uint64_t *)dst_86], vect__21.672
 569:sieve_extend.c ****     {
 16654              		.loc 1 569 22 is_stmt 1 view .LVU6028
GAS LISTING /tmp/cctyCFAS.s 			page 446


 569:sieve_extend.c ****     {
 16655              		.loc 1 569 12 view .LVU6029
 16656 547a 4C01C6   		add	rsi, r8	# src, _129
 16657 547d 4C01C7   		add	rdi, r8	# dst, _129
 16658 5480 4401C8   		add	eax, r9d	# tmp.663, niters_vector_mult_vf.660
 16659 5483 4539CB   		cmp	r11d, r9d	# niters.658, niters_vector_mult_vf.660
 16660 5486 744E     		je	.L1660	#,
 16661              	.L1619:
 16662              	.LVL1134:
 571:sieve_extend.c ****     }    
 16663              		.loc 1 571 9 view .LVU6030
 16664              	# sieve_extend.c:571:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 571:sieve_extend.c ****     }    
 16665              		.loc 1 571 35 is_stmt 0 view .LVU6031
 16666 5488 4C8B4608 		mov	r8, QWORD PTR 8[rsi]	# _57, MEM[(const uint64_t *)src_110 + 8B]
 16667              	# sieve_extend.c:571:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 571:sieve_extend.c ****     }    
 16668              		.loc 1 571 23 view .LVU6032
 16669 548c C462F3F7 		shrx	r9, QWORD PTR [rsi], rcx	# tmp157, *src_110, shift
 16669      0E
 16670              	# sieve_extend.c:571:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 571:sieve_extend.c ****     }    
 16671              		.loc 1 571 43 view .LVU6033
 16672 5491 C442A9F7 		shlx	r11, r8, r10	# tmp159, _57, _97
 16672      D8
 16673              	# sieve_extend.c:571:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 571:sieve_extend.c ****     }    
 16674              		.loc 1 571 32 view .LVU6034
 16675 5496 4D09D9   		or	r9, r11	# tmp160, tmp159
 16676 5499 4C890F   		mov	QWORD PTR [rdi], r9	# *dst_109, tmp160
 569:sieve_extend.c ****     {
 16677              		.loc 1 569 22 is_stmt 1 view .LVU6035
 16678              	.LVL1135:
 569:sieve_extend.c ****     {
 16679              		.loc 1 569 12 view .LVU6036
 16680              	# sieve_extend.c:569:     for (; i < size; ++i,++src,++dst)
 569:sieve_extend.c ****     {
 16681              		.loc 1 569 22 is_stmt 0 view .LVU6037
 16682 549c 448D4801 		lea	r9d, 1[rax]	# i,
 16683              	.LVL1136:
 16684              	# sieve_extend.c:569:     for (; i < size; ++i,++src,++dst)
 569:sieve_extend.c ****     {
 16685              		.loc 1 569 5 view .LVU6038
 16686 54a0 4439CA   		cmp	edx, r9d	# size, i
 16687 54a3 7E31     		jle	.L1660	#,
 571:sieve_extend.c ****     }    
 16688              		.loc 1 571 9 is_stmt 1 view .LVU6039
 16689              	# sieve_extend.c:571:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 571:sieve_extend.c ****     }    
 16690              		.loc 1 571 35 is_stmt 0 view .LVU6040
 16691 54a5 4C8B4E10 		mov	r9, QWORD PTR 16[rsi]	# _21, MEM[(const uint64_t *)src_110 + 16B]
 16692              	.LVL1137:
 16693              	# sieve_extend.c:571:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 571:sieve_extend.c ****     }    
 16694              		.loc 1 571 23 view .LVU6041
 16695 54a9 C442F3F7 		shrx	r8, r8, rcx	# tmp162, _57, shift
 16695      C0
GAS LISTING /tmp/cctyCFAS.s 			page 447


 16696              	# sieve_extend.c:571:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 571:sieve_extend.c ****     }    
 16697              		.loc 1 571 43 view .LVU6042
 16698 54ae C442A9F7 		shlx	r11, r9, r10	# tmp163, _21, _97
 16698      D9
 16699              	# sieve_extend.c:569:     for (; i < size; ++i,++src,++dst)
 569:sieve_extend.c ****     {
 16700              		.loc 1 569 22 view .LVU6043
 16701 54b3 83C002   		add	eax, 2	# i,
 16702              	.LVL1138:
 16703              	# sieve_extend.c:571:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 571:sieve_extend.c ****     }    
 16704              		.loc 1 571 32 view .LVU6044
 16705 54b6 4D09D8   		or	r8, r11	# tmp164, tmp163
 16706 54b9 4C894708 		mov	QWORD PTR 8[rdi], r8	# MEM[(uint64_t *)dst_109 + 8B], tmp164
 569:sieve_extend.c ****     {
 16707              		.loc 1 569 22 is_stmt 1 view .LVU6045
 16708              	.LVL1139:
 569:sieve_extend.c ****     {
 16709              		.loc 1 569 12 view .LVU6046
 16710              	# sieve_extend.c:569:     for (; i < size; ++i,++src,++dst)
 569:sieve_extend.c ****     {
 16711              		.loc 1 569 5 is_stmt 0 view .LVU6047
 16712 54bd 39D0     		cmp	eax, edx	# i, size
 16713 54bf 7D15     		jge	.L1660	#,
 571:sieve_extend.c ****     }    
 16714              		.loc 1 571 9 is_stmt 1 view .LVU6048
 16715              	# sieve_extend.c:571:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 571:sieve_extend.c ****     }    
 16716              		.loc 1 571 43 is_stmt 0 view .LVU6049
 16717 54c1 488B5618 		mov	rdx, QWORD PTR 24[rsi]	# MEM[(const uint64_t *)src_110 + 24B], MEM[(const uint64_t *)src_110 +
 16718              	.LVL1140:
 16719              	# sieve_extend.c:571:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 571:sieve_extend.c ****     }    
 16720              		.loc 1 571 23 view .LVU6050
 16721 54c5 C4C2F3F7 		shrx	rcx, r9, rcx	# tmp168, _21, shift
 16721      C9
 16722              	.LVL1141:
 16723              	# sieve_extend.c:571:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 571:sieve_extend.c ****     }    
 16724              		.loc 1 571 43 view .LVU6051
 16725 54ca C4E2A9F7 		shlx	rsi, rdx, r10	# tmp166, MEM[(const uint64_t *)src_110 + 24B], _97
 16725      F2
 16726              	.LVL1142:
 16727              	# sieve_extend.c:571:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 571:sieve_extend.c ****     }    
 16728              		.loc 1 571 32 view .LVU6052
 16729 54cf 4809F1   		or	rcx, rsi	# tmp169, tmp166
 16730 54d2 48894F10 		mov	QWORD PTR 16[rdi], rcx	# MEM[(uint64_t *)dst_109 + 16B], tmp169
 569:sieve_extend.c ****     {
 16731              		.loc 1 569 22 is_stmt 1 view .LVU6053
 16732              	.LVL1143:
 569:sieve_extend.c ****     {
 16733              		.loc 1 569 12 view .LVU6054
 16734              	.L1660:
 569:sieve_extend.c ****     {
 16735              		.loc 1 569 12 is_stmt 0 view .LVU6055
GAS LISTING /tmp/cctyCFAS.s 			page 448


 16736 54d6 C5F877   		vzeroupper
 16737              	# sieve_extend.c:573: }
 573:sieve_extend.c **** 
 16738              		.loc 1 573 1 view .LVU6056
 16739 54d9 C3       		ret	
 16740              	.LVL1144:
 16741              	.L1662:
 16742              	.LBB737:
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16743              		.loc 1 564 25 is_stmt 1 view .LVU6057
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16744              		.loc 1 565 13 view .LVU6058
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16745              		.loc 1 564 32 view .LVU6059
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16746              		.loc 1 564 25 view .LVU6060
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16747              		.loc 1 565 13 view .LVU6061
 16748              	# sieve_extend.c:565:             *(dst+j) = (*(src+j))<<shift;
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16749              		.loc 1 565 25 is_stmt 0 view .LVU6062
 16750 54da C5FE6F7E 		vmovdqu	ymm7, YMMWORD PTR 32[rsi]	# MEM[base: src_35(D), index: ivtmp.693_114, offset: 0B], MEM[ba
 16750      20
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16751              		.loc 1 564 32 is_stmt 1 view .LVU6063
 16752              	.LVL1145:
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16753              		.loc 1 564 25 view .LVU6064
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16754              		.loc 1 565 13 view .LVU6065
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16755              		.loc 1 564 32 view .LVU6066
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16756              		.loc 1 564 25 view .LVU6067
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16757              		.loc 1 565 13 view .LVU6068
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16758              		.loc 1 564 32 view .LVU6069
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16759              		.loc 1 564 25 view .LVU6070
 564:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16760              		.loc 1 564 25 is_stmt 0 view .LVU6071
 16761              	.LBE737:
 16762              	.LBB738:
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16763              		.loc 1 566 25 is_stmt 1 view .LVU6072
 567:sieve_extend.c ****     }
 16764              		.loc 1 567 13 view .LVU6073
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16765              		.loc 1 566 32 view .LVU6074
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16766              		.loc 1 566 25 view .LVU6075
 567:sieve_extend.c ****     }
 16767              		.loc 1 567 13 view .LVU6076
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16768              		.loc 1 566 32 view .LVU6077
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
GAS LISTING /tmp/cctyCFAS.s 			page 449


 16769              		.loc 1 566 25 view .LVU6078
 567:sieve_extend.c ****     }
 16770              		.loc 1 567 13 view .LVU6079
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16771              		.loc 1 566 32 view .LVU6080
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16772              		.loc 1 566 25 view .LVU6081
 567:sieve_extend.c ****     }
 16773              		.loc 1 567 13 view .LVU6082
 16774 54df 41BA0200 		mov	r10d, 2	# ivtmp.690,
 16774      0000
 16775              	.LBE738:
 16776              	.LBB739:
 16777              	# sieve_extend.c:565:             *(dst+j) = (*(src+j))<<shift;
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16778              		.loc 1 565 25 is_stmt 0 view .LVU6083
 16779 54e5 C463FD00 		vpermq	ymm8, ymm7, 85	# vect__102.679, MEM[base: src_35(D), index: ivtmp.693_114, offset: 0B],
 16779      C755
 16780              	.LBE739:
 16781              	.LBB740:
 16782              	# sieve_extend.c:567:             *(dst+j) |= (*(src+1)>>(64-shift));
 567:sieve_extend.c ****     }
 16783              		.loc 1 567 34 view .LVU6084
 16784 54eb C53DD3C8 		vpsrlq	ymm9, ymm8, xmm0	# vect__57.680, vect__102.679, _4
 16785              	.LBE740:
 16786              	.LBB741:
 16787              	# sieve_extend.c:565:             *(dst+j) = (*(src+j))<<shift;
 565:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16788              		.loc 1 565 34 view .LVU6085
 16789 54ef C545F3D1 		vpsllq	ymm10, ymm7, xmm1	# vect__104.684, MEM[base: src_35(D), index: ivtmp.693_114, offset: 0B], 
 16790 54f3 B8400000 		mov	eax, 64	# ivtmp.693,
 16790      00
 16791              	.LBE741:
 16792              	.LBB742:
 16793              	# sieve_extend.c:567:             *(dst+j) |= (*(src+1)>>(64-shift));
 567:sieve_extend.c ****     }
 16794              		.loc 1 567 22 view .LVU6086
 16795 54f8 C44135EB 		vpor	ymm11, ymm9, ymm10	# vect__58.685, vect__57.680, vect__104.684
 16795      DA
 16796 54fd C57E7F5F 		vmovdqu	YMMWORD PTR 32[rdi], ymm11	# MEM[base: dst_34(D), index: ivtmp.693_114, offset: 0B], vect_
 16796      20
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16797              		.loc 1 566 32 is_stmt 1 view .LVU6087
 16798              	.LVL1146:
 566:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16799              		.loc 1 566 25 view .LVU6088
 16800              	.LBE742:
 562:sieve_extend.c ****     {
 16801              		.loc 1 562 24 view .LVU6089
 562:sieve_extend.c ****     {
 16802              		.loc 1 562 12 view .LVU6090
 16803 5502 E909FDFF 		jmp	.L1651	#
 16803      FF
 16804              	.LVL1147:
 16805              	.L1661:
 16806              	# sieve_extend.c:560:     int i = 0;
 560:sieve_extend.c ****     // MSVC: use steps of 2 for SSE, 4 for AVX2, 8 for AVX512
GAS LISTING /tmp/cctyCFAS.s 			page 450


 16807              		.loc 1 560 9 is_stmt 0 view .LVU6091
 16808 5507 31C0     		xor	eax, eax	# tmp.663
 16809 5509 E916FFFF 		jmp	.L1618	#
 16809      FF
 16810              		.cfi_endproc
 16811              	.LFE68:
 16813              		.section	.rodata.str1.8,"aMS",@progbits,1
 16814              		.align 8
 16815              	.LC5:
 16816 0000 52657375 		.string	"Result: Sievesize %ju is expected to have %ju primes. algorithm produced %ju primes\n"
 16816      6C743A20 
 16816      53696576 
 16816      6573697A 
 16816      6520256A 
 16817 0055 000000   		.align 8
 16818              	.LC6:
 16819 0058 4E6F2076 		.string	"No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produced %j
 16819      616C6964 
 16819      20726573 
 16819      756C742E 
 16819      20536965 
 16820              		.section	.rodata.str1.1
 16821              	.LC7:
 16822 0023 44656570 		.string	"DeepAnalyzing"
 16822      416E616C 
 16822      797A696E 
 16822      6700
 16823              		.section	.rodata.str1.8
 16824 00bb 00000000 		.align 8
 16824      00
 16825              	.LC8:
 16826 00c0 4E756D62 		.string	"Number %ju (%ju) was marked prime, but %ju * %ju = %ju\n"
 16826      65722025 
 16826      6A752028 
 16826      256A7529 
 16826      20776173 
 16827              		.align 8
 16828              	.LC9:
 16829 00f8 4E756D62 		.string	"Number %ju (%ju) was marked non-prime, but no factors found. So it is prime\n"
 16829      65722025 
 16829      6A752028 
 16829      256A7529 
 16829      20776173 
 16830              		.text
 16831 550e 6690     		.p2align 4
 16832              		.globl	validatePrimeCount
 16834              	validatePrimeCount:
 16835              	.LVL1148:
 16836              	.LFB81:
1035:sieve_extend.c **** 
 16837              		.loc 1 1035 76 is_stmt 1 view -0
 16838              		.cfi_startproc
1035:sieve_extend.c **** 
 16839              		.loc 1 1035 76 is_stmt 0 view .LVU6093
 16840 5510 F30F1EFA 		endbr64	
1037:sieve_extend.c ****     counter_t valid_primes = 0;
 16841              		.loc 1 1037 5 is_stmt 1 view .LVU6094
GAS LISTING /tmp/cctyCFAS.s 			page 451


 16842              	# sieve_extend.c:1035: int validatePrimeCount(struct sieve_state *sieve, int option_verboselevel) {
1035:sieve_extend.c **** 
 16843              		.loc 1 1035 76 is_stmt 0 view .LVU6095
 16844 5514 4157     		push	r15	#
 16845              		.cfi_def_cfa_offset 16
 16846              		.cfi_offset 15, -16
 16847 5516 4156     		push	r14	#
 16848              		.cfi_def_cfa_offset 24
 16849              		.cfi_offset 14, -24
 16850 5518 4155     		push	r13	#
 16851              		.cfi_def_cfa_offset 32
 16852              		.cfi_offset 13, -32
 16853 551a 4154     		push	r12	#
 16854              		.cfi_def_cfa_offset 40
 16855              		.cfi_offset 12, -40
 16856 551c 55       		push	rbp	#
 16857              		.cfi_def_cfa_offset 48
 16858              		.cfi_offset 6, -48
 16859 551d 4889FD   		mov	rbp, rdi	# sieve, tmp307
 16860 5520 53       		push	rbx	#
 16861              		.cfi_def_cfa_offset 56
 16862              		.cfi_offset 3, -56
 16863 5521 89F3     		mov	ebx, esi	# option_verboselevel, tmp308
 16864 5523 4883EC28 		sub	rsp, 40	#,
 16865              		.cfi_def_cfa_offset 96
 16866              	# sieve_extend.c:1037:     counter_t primecount = count_primes(sieve);
1037:sieve_extend.c ****     counter_t valid_primes = 0;
 16867              		.loc 1 1037 28 view .LVU6096
 16868 5527 488B17   		mov	rdx, QWORD PTR [rdi]	# _24, MEM[(uint64_t * *)sieve_18(D)]
 16869 552a 488B7F08 		mov	rdi, QWORD PTR 8[rdi]	# _25, MEM[(long unsigned int *)sieve_18(D) + 8B]
 16870              	.LVL1149:
 16871              	.LBB764:
 16872              	.LBI764:
1006:sieve_extend.c ****     counter_t primeCount = 1;
 16873              		.loc 1 1006 18 is_stmt 1 view .LVU6097
 16874              	.LBB765:
 16875              	.LBB766:
1008:sieve_extend.c ****     return primeCount;
 16876              		.loc 1 1008 30 view .LVU6098
 16877 552e 4C8B4D10 		mov	r9, QWORD PTR 16[rbp]	# pretmp_199, sieve_18(D)->size
 16878              	# sieve_extend.c:1008:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(s
1008:sieve_extend.c ****     return primeCount;
 16879              		.loc 1 1008 5 is_stmt 0 view .LVU6099
 16880 5532 4883FF01 		cmp	rdi, 1	# _25,
 16881 5536 0F861705 		jbe	.L1664	#,
 16881      0000
 16882              	# sieve_extend.c:1008:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(s
1008:sieve_extend.c ****     return primeCount;
 16883              		.loc 1 1008 20 view .LVU6100
 16884 553c B8010000 		mov	eax, 1	# factor,
 16884      00
 16885              	.LBE766:
 16886              	# sieve_extend.c:1007:     counter_t primeCount = 1;
1007:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitarray, factor+
 16887              		.loc 1 1007 15 view .LVU6101
 16888 5541 41B80100 		mov	r8d, 1	# primeCount,
 16888      0000
GAS LISTING /tmp/cctyCFAS.s 			page 452


 16889              	.LVL1150:
 16890 5547 660F1F84 		.p2align 4,,10
 16890      00000000 
 16890      00
 16891              		.p2align 3
 16892              	.L1667:
 16893              	.LBB769:
1008:sieve_extend.c ****     return primeCount;
 16894              		.loc 1 1008 104 is_stmt 1 view .LVU6102
 16895              	# sieve_extend.c:1008:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(s
1008:sieve_extend.c ****     return primeCount;
 16896              		.loc 1 1008 114 is_stmt 0 view .LVU6103
 16897 5550 49FFC0   		inc	r8	# primeCount
 16898              	.LVL1151:
1008:sieve_extend.c ****     return primeCount;
 16899              		.loc 1 1008 52 is_stmt 1 view .LVU6104
 16900              	# sieve_extend.c:1008:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(s
1008:sieve_extend.c ****     return primeCount;
 16901              		.loc 1 1008 61 is_stmt 0 view .LVU6105
 16902 5553 48FFC0   		inc	rax	# factor
 16903              	.LVL1152:
 16904              	.L1807:
 16905              	.LBB767:
 16906              	.LBI767:
 123:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 16907              		.loc 1 123 25 is_stmt 1 view .LVU6106
 16908              	.LBB768:
 124:sieve_extend.c ****     return index;
 16909              		.loc 1 124 5 view .LVU6107
 124:sieve_extend.c ****     return index;
 16910              		.loc 1 124 11 view .LVU6108
 16911              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 16912              		.loc 1 124 21 is_stmt 0 view .LVU6109
 16913 5556 4889C1   		mov	rcx, rax	# tmp162, factor
 16914 5559 48C1E906 		shr	rcx, 6	# tmp162,
 16915              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 16916              		.loc 1 124 12 view .LVU6110
 16917 555d 4C8B1CCA 		mov	r11, QWORD PTR [rdx+rcx*8]	# *_106,* _24
 16918              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 16919              		.loc 1 124 11 view .LVU6111
 16920 5561 490FA3C3 		bt	r11, rax	# *_106, factor
 16921 5565 0F83AD00 		jnc	.L1665	#,
 16921      0000
 124:sieve_extend.c ****     return index;
 16922              		.loc 1 124 58 is_stmt 1 view .LVU6112
 16923              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 16924              		.loc 1 124 63 is_stmt 0 view .LVU6113
 16925 556b 4C8D6001 		lea	r12, 1[rax]	# tmp235,
 16926              	.LVL1153:
 16927              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 16928              		.loc 1 124 21 view .LVU6114
 16929 556f 4D89E5   		mov	r13, r12	# tmp167, factor
GAS LISTING /tmp/cctyCFAS.s 			page 453


 16930 5572 49C1ED06 		shr	r13, 6	# tmp167,
 16931              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 16932              		.loc 1 124 12 view .LVU6115
 16933 5576 4E8B3CEA 		mov	r15, QWORD PTR [rdx+r13*8]	# *_35, *_35
 16934              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 16935              		.loc 1 124 63 view .LVU6116
 16936 557a 4C89E0   		mov	rax, r12	# factor, tmp235
 124:sieve_extend.c ****     return index;
 16937              		.loc 1 124 11 is_stmt 1 view .LVU6117
 16938 557d 4D0FA3E7 		bt	r15, r12	# *_35, factor
 16939 5581 0F839100 		jnc	.L1665	#,
 16939      0000
 124:sieve_extend.c ****     return index;
 16940              		.loc 1 124 58 view .LVU6118
 16941              	.LVL1154:
 16942              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 16943              		.loc 1 124 63 is_stmt 0 view .LVU6119
 16944 5587 48FFC0   		inc	rax	# factor
 16945              	.LVL1155:
 124:sieve_extend.c ****     return index;
 16946              		.loc 1 124 11 is_stmt 1 view .LVU6120
 16947              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 16948              		.loc 1 124 21 is_stmt 0 view .LVU6121
 16949 558a 4989C6   		mov	r14, rax	# tmp279, factor
 16950 558d 49C1EE06 		shr	r14, 6	# tmp279,
 16951              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 16952              		.loc 1 124 12 view .LVU6122
 16953 5591 4A8B34F2 		mov	rsi, QWORD PTR [rdx+r14*8]	# *_35, *_35
 16954              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 16955              		.loc 1 124 11 view .LVU6123
 16956 5595 480FA3C6 		bt	rsi, rax	# *_35, factor
 16957 5599 737D     		jnc	.L1665	#,
 124:sieve_extend.c ****     return index;
 16958              		.loc 1 124 58 is_stmt 1 view .LVU6124
 16959              	.LVL1156:
 16960              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 16961              		.loc 1 124 63 is_stmt 0 view .LVU6125
 16962 559b 498D4424 		lea	rax, 2[r12]	# factor,
 16962      02
 16963              	.LVL1157:
 124:sieve_extend.c ****     return index;
 16964              		.loc 1 124 11 is_stmt 1 view .LVU6126
 16965              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 16966              		.loc 1 124 21 is_stmt 0 view .LVU6127
 16967 55a0 4989C2   		mov	r10, rax	# tmp283, factor
 16968 55a3 49C1EA06 		shr	r10, 6	# tmp283,
 16969              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 16970              		.loc 1 124 12 view .LVU6128
GAS LISTING /tmp/cctyCFAS.s 			page 454


 16971 55a7 4A8B0CD2 		mov	rcx, QWORD PTR [rdx+r10*8]	# *_35, *_35
 16972              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 16973              		.loc 1 124 11 view .LVU6129
 16974 55ab 480FA3C1 		bt	rcx, rax	# *_35, factor
 16975 55af 7367     		jnc	.L1665	#,
 124:sieve_extend.c ****     return index;
 16976              		.loc 1 124 58 is_stmt 1 view .LVU6130
 16977              	.LVL1158:
 16978              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 16979              		.loc 1 124 63 is_stmt 0 view .LVU6131
 16980 55b1 498D4424 		lea	rax, 3[r12]	# factor,
 16980      03
 16981              	.LVL1159:
 124:sieve_extend.c ****     return index;
 16982              		.loc 1 124 11 is_stmt 1 view .LVU6132
 16983              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 16984              		.loc 1 124 21 is_stmt 0 view .LVU6133
 16985 55b6 4989C3   		mov	r11, rax	# tmp287, factor
 16986 55b9 49C1EB06 		shr	r11, 6	# tmp287,
 16987              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 16988              		.loc 1 124 12 view .LVU6134
 16989 55bd 4E8B2CDA 		mov	r13, QWORD PTR [rdx+r11*8]	# *_35, *_35
 16990              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 16991              		.loc 1 124 11 view .LVU6135
 16992 55c1 490FA3C5 		bt	r13, rax	# *_35, factor
 16993 55c5 7351     		jnc	.L1665	#,
 124:sieve_extend.c ****     return index;
 16994              		.loc 1 124 58 is_stmt 1 view .LVU6136
 16995              	.LVL1160:
 16996              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 16997              		.loc 1 124 63 is_stmt 0 view .LVU6137
 16998 55c7 498D4424 		lea	rax, 4[r12]	# factor,
 16998      04
 16999              	.LVL1161:
 124:sieve_extend.c ****     return index;
 17000              		.loc 1 124 11 is_stmt 1 view .LVU6138
 17001              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 17002              		.loc 1 124 21 is_stmt 0 view .LVU6139
 17003 55cc 4989C7   		mov	r15, rax	# tmp291, factor
 17004 55cf 49C1EF06 		shr	r15, 6	# tmp291,
 17005              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 17006              		.loc 1 124 12 view .LVU6140
 17007 55d3 4E8B34FA 		mov	r14, QWORD PTR [rdx+r15*8]	# *_35, *_35
 17008              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 17009              		.loc 1 124 11 view .LVU6141
 17010 55d7 490FA3C6 		bt	r14, rax	# *_35, factor
 17011 55db 733B     		jnc	.L1665	#,
 124:sieve_extend.c ****     return index;
GAS LISTING /tmp/cctyCFAS.s 			page 455


 17012              		.loc 1 124 58 is_stmt 1 view .LVU6142
 17013              	.LVL1162:
 17014              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 17015              		.loc 1 124 63 is_stmt 0 view .LVU6143
 17016 55dd 498D4424 		lea	rax, 5[r12]	# factor,
 17016      05
 17017              	.LVL1163:
 124:sieve_extend.c ****     return index;
 17018              		.loc 1 124 11 is_stmt 1 view .LVU6144
 17019              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 17020              		.loc 1 124 21 is_stmt 0 view .LVU6145
 17021 55e2 4889C6   		mov	rsi, rax	# tmp295, factor
 17022 55e5 48C1EE06 		shr	rsi, 6	# tmp295,
 17023              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 17024              		.loc 1 124 12 view .LVU6146
 17025 55e9 4C8B14F2 		mov	r10, QWORD PTR [rdx+rsi*8]	# *_35, *_35
 17026              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 17027              		.loc 1 124 11 view .LVU6147
 17028 55ed 490FA3C2 		bt	r10, rax	# *_35, factor
 17029 55f1 7325     		jnc	.L1665	#,
 124:sieve_extend.c ****     return index;
 17030              		.loc 1 124 58 is_stmt 1 view .LVU6148
 17031              	.LVL1164:
 17032              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 17033              		.loc 1 124 63 is_stmt 0 view .LVU6149
 17034 55f3 498D4424 		lea	rax, 6[r12]	# factor,
 17034      06
 17035              	.LVL1165:
 124:sieve_extend.c ****     return index;
 17036              		.loc 1 124 11 is_stmt 1 view .LVU6150
 17037              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 17038              		.loc 1 124 21 is_stmt 0 view .LVU6151
 17039 55f8 4889C1   		mov	rcx, rax	# tmp299, factor
 17040 55fb 48C1E906 		shr	rcx, 6	# tmp299,
 17041              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 17042              		.loc 1 124 12 view .LVU6152
 17043 55ff 4C8B1CCA 		mov	r11, QWORD PTR [rdx+rcx*8]	# *_35, *_35
 17044              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 17045              		.loc 1 124 11 view .LVU6153
 17046 5603 490FA3C3 		bt	r11, rax	# *_35, factor
 17047 5607 730F     		jnc	.L1665	#,
 124:sieve_extend.c ****     return index;
 17048              		.loc 1 124 58 is_stmt 1 view .LVU6154
 17049              	.LVL1166:
 17050              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 17051              		.loc 1 124 63 is_stmt 0 view .LVU6155
 17052 5609 498D4424 		lea	rax, 7[r12]	# factor,
 17052      07
GAS LISTING /tmp/cctyCFAS.s 			page 456


 17053              	.LVL1167:
 124:sieve_extend.c ****     return index;
 17054              		.loc 1 124 11 is_stmt 1 view .LVU6156
 17055 560e E943FFFF 		jmp	.L1807	#
 17055      FF
 17056              		.p2align 4,,10
 17057 5613 0F1F4400 		.p2align 3
 17057      00
 17058              	.L1665:
 17059              	.LVL1168:
 124:sieve_extend.c ****     return index;
 17060              		.loc 1 124 11 is_stmt 0 view .LVU6157
 17061              	.LBE768:
 17062              	.LBE767:
1008:sieve_extend.c ****     return primeCount;
 17063              		.loc 1 1008 30 is_stmt 1 view .LVU6158
 17064              	# sieve_extend.c:1008:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(s
1008:sieve_extend.c ****     return primeCount;
 17065              		.loc 1 1008 5 is_stmt 0 view .LVU6159
 17066 5618 4839C7   		cmp	rdi, rax	# _25, factor
 17067 561b 0F872FFF 		ja	.L1667	#,
 17067      FFFF
1008:sieve_extend.c ****     return primeCount;
 17068              		.loc 1 1008 5 view .LVU6160
 17069              	.LBE769:
1009:sieve_extend.c **** }
 17070              		.loc 1 1009 5 is_stmt 1 view .LVU6161
 17071              	.LVL1169:
1009:sieve_extend.c **** }
 17072              		.loc 1 1009 5 is_stmt 0 view .LVU6162
 17073              	.LBE765:
 17074              	.LBE764:
1038:sieve_extend.c ****     switch(sieve->size) {
 17075              		.loc 1 1038 5 is_stmt 1 view .LVU6163
1039:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 17076              		.loc 1 1039 5 view .LVU6164
 17077 5621 83FB03   		cmp	ebx, 3	# option_verboselevel,
 17078 5624 0F9FC2   		setg	dl	#, tmp172
 17079 5627 4981F9A0 		cmp	r9, 100000	# pretmp_199,
 17079      860100
 17080 562e 0F843806 		je	.L1668	#,
 17080      0000
 17081 5634 0F86CA02 		jbe	.L1808	#,
 17081      0000
 17082 563a 4981F900 		cmp	r9, 100000000	# pretmp_199,
 17082      E1F505
 17083 5641 0F84E405 		je	.L1676	#,
 17083      0000
 17084 5647 0F863303 		jbe	.L1809	#,
 17084      0000
 17085 564d 4981F900 		cmp	r9, 1000000000	# pretmp_199,
 17085      CA9A3B
 17086 5654 0F85F605 		jne	.L1674	#,
 17086      0000
 17087 565a 4981F82E 		cmp	r8, 50847534	# primeCount,
 17087      DF0703
 17088 5661 410F94C4 		sete	r12b	#, tmp189
GAS LISTING /tmp/cctyCFAS.s 			page 457


 17089 5665 4421E2   		and	edx, r12d	# _251, tmp189
 17090 5668 4981F82E 		cmp	r8, 50847534	# primeCount,
 17090      DF0703
 17091 566f 450FB6EC 		movzx	r13d, r12b	# <retval>, tmp189
 17092 5673 410F95C6 		setne	r14b	#, _135
1048:sieve_extend.c ****         default:            valid_primes= 0;
 17093              		.loc 1 1048 29 view .LVU6165
 17094              	.LVL1170:
1048:sieve_extend.c ****         default:            valid_primes= 0;
 17095              		.loc 1 1048 54 view .LVU6166
 17096              	# sieve_extend.c:1048:         case 1000000000:    valid_primes = 50847534; break;
1048:sieve_extend.c ****         default:            valid_primes= 0;
 17097              		.loc 1 1048 42 is_stmt 0 view .LVU6167
 17098 5677 B92EDF07 		mov	ecx, 50847534	# valid_primes,
 17098      03
 17099              	.LVL1171:
 17100 567c 0F1F4000 		.p2align 4,,10
 17101              		.p2align 3
 17102              	.L1681:
1052:sieve_extend.c ****     if (valid  && option_verboselevel >= 4) printf("Result: Sievesize %ju is expected to have %ju p
 17103              		.loc 1 1052 5 is_stmt 1 view .LVU6168
1053:sieve_extend.c ****     if (!valid && option_verboselevel >= 1) {
 17104              		.loc 1 1053 5 view .LVU6169
 17105              	# sieve_extend.c:1053:     if (valid  && option_verboselevel >= 4) printf("Result: Sievesize %ju is
1053:sieve_extend.c ****     if (!valid && option_verboselevel >= 1) {
 17106              		.loc 1 1053 8 is_stmt 0 view .LVU6170
 17107 5680 84D2     		test	dl, dl	# _251
 17108 5682 0F842204 		je	.L1682	#,
 17108      0000
1053:sieve_extend.c ****     if (!valid && option_verboselevel >= 1) {
 17109              		.loc 1 1053 45 is_stmt 1 discriminator 1 view .LVU6171
 17110              	.LVL1172:
 17111              	.LBB771:
 17112              	.LBI771:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17113              		.loc 3 105 1 discriminator 1 view .LVU6172
 17114              	.LBB772:
 17115              		.loc 3 107 3 discriminator 1 view .LVU6173
 17116              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17117              		.loc 3 107 10 is_stmt 0 discriminator 1 view .LVU6174
 17118 5688 4C89CA   		mov	rdx, r9	#, pretmp_199
 17119 568b 488D3500 		lea	rsi, .LC5[rip]	#,
 17119      000000
 17120 5692 BF010000 		mov	edi, 1	#,
 17120      00
 17121 5697 31C0     		xor	eax, eax	#
 17122 5699 E8000000 		call	__printf_chk@PLT	#
 17122      00
 17123              	.LVL1173:
 17124              		.loc 3 107 10 discriminator 1 view .LVU6175
 17125              	.LBE772:
 17126              	.LBE771:
1054:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 17127              		.loc 1 1054 5 is_stmt 1 discriminator 1 view .LVU6176
 17128              	.L1683:
1058:sieve_extend.c ****     return (valid);
 17129              		.loc 1 1058 5 view .LVU6177
GAS LISTING /tmp/cctyCFAS.s 			page 458


 17130              	# sieve_extend.c:1058:     if (!valid && option_verboselevel >= 3) deepAnalyzePrimes(sieve);
1058:sieve_extend.c ****     return (valid);
 17131              		.loc 1 1058 8 is_stmt 0 view .LVU6178
 17132 569e 83FB02   		cmp	ebx, 2	# option_verboselevel,
 17133 56a1 0F8E4B02 		jle	.L1663	#,
 17133      0000
 17134 56a7 4584F6   		test	r14b, r14b	# _135
 17135 56aa 0F844202 		je	.L1663	#,
 17135      0000
1058:sieve_extend.c ****     return (valid);
 17136              		.loc 1 1058 45 is_stmt 1 discriminator 1 view .LVU6179
 17137              	.LBB773:
 17138              	.LBI773:
1012:sieve_extend.c ****     printf("DeepAnalyzing\n");
 17139              		.loc 1 1012 13 discriminator 1 view .LVU6180
 17140              	.LVL1174:
 17141              	.LBB774:
1013:sieve_extend.c ****     counter_t warn_prime = 0;
 17142              		.loc 1 1013 5 discriminator 1 view .LVU6181
 17143              	.LBB775:
 17144              	.LBI775:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17145              		.loc 3 105 1 discriminator 1 view .LVU6182
 17146              	.LBB776:
 17147              		.loc 3 107 3 discriminator 1 view .LVU6183
 17148              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17149              		.loc 3 107 10 is_stmt 0 discriminator 1 view .LVU6184
 17150 56b0 488D3D00 		lea	rdi, .LC7[rip]	#,
 17150      000000
 17151 56b7 E8000000 		call	puts@PLT	#
 17151      00
 17152              	.LVL1175:
 17153              		.loc 3 107 10 discriminator 1 view .LVU6185
 17154              	.LBE776:
 17155              	.LBE775:
1014:sieve_extend.c ****     counter_t warn_nonprime = 0;
 17156              		.loc 1 1014 5 is_stmt 1 discriminator 1 view .LVU6186
1015:sieve_extend.c ****     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 17157              		.loc 1 1015 5 discriminator 1 view .LVU6187
1016:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 17158              		.loc 1 1016 5 discriminator 1 view .LVU6188
 17159              	.LBB777:
1016:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 17160              		.loc 1 1016 10 discriminator 1 view .LVU6189
1016:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 17161              		.loc 1 1016 31 discriminator 1 view .LVU6190
 17162              	# sieve_extend.c:1016:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
1016:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 17163              		.loc 1 1016 44 is_stmt 0 discriminator 1 view .LVU6191
 17164 56bc 488B7D08 		mov	rdi, QWORD PTR 8[rbp]	# _137, MEM[(uint64_t *)sieve_18(D) + 8B]
 17165              	# sieve_extend.c:1016:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
1016:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 17166              		.loc 1 1016 5 discriminator 1 view .LVU6192
 17167 56c0 4883FF01 		cmp	rdi, 1	# _137,
 17168 56c4 0F862802 		jbe	.L1663	#,
 17168      0000
 17169              	.LBE777:
GAS LISTING /tmp/cctyCFAS.s 			page 459


 17170              	# sieve_extend.c:1015:     counter_t warn_nonprime = 0;
1015:sieve_extend.c ****     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 17171              		.loc 1 1015 15 view .LVU6193
 17172 56ca 48C74424 		mov	QWORD PTR 8[rsp], 0	# %sfp,
 17172      08000000 
 17172      00
 17173              	.LBB799:
 17174              	.LBB778:
 17175              	.LBB779:
 17176              	.LBB780:
 17177              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17178              		.loc 3 107 10 view .LVU6194
 17179 56d3 44896C24 		mov	DWORD PTR 20[rsp], r13d	# %sfp, <retval>
 17179      14
 17180              	.LBE780:
 17181              	.LBE779:
 17182              	.LBE778:
 17183              	# sieve_extend.c:1016:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
1016:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 17184              		.loc 1 1016 5 view .LVU6195
 17185 56d8 41BF0200 		mov	r15d, 2	# ivtmp.726,
 17185      0000
 17186 56de 41BC0300 		mov	r12d, 3	# ivtmp.724,
 17186      0000
 17187              	.LBE799:
 17188              	# sieve_extend.c:1014:     counter_t warn_prime = 0;
1014:sieve_extend.c ****     counter_t warn_nonprime = 0;
 17189              		.loc 1 1014 15 view .LVU6196
 17190 56e4 4531C0   		xor	r8d, r8d	# warn_prime
 17191              	.LBB800:
 17192              	# sieve_extend.c:1016:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
1016:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 17193              		.loc 1 1016 20 view .LVU6197
 17194 56e7 41BE0100 		mov	r14d, 1	# prime,
 17194      0000
 17195              	.LBB787:
 17196              	.LBB784:
 17197              	.LBB781:
 17198              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17199              		.loc 3 107 10 view .LVU6198
 17200 56ed 4989ED   		mov	r13, rbp	# sieve, sieve
 17201              	.LVL1176:
 17202              		.p2align 4,,10
 17203              		.p2align 3
 17204              	.L1693:
 17205              		.loc 3 107 10 view .LVU6199
 17206              	.LBE781:
 17207              	.LBE784:
 17208              	.LBE787:
1017:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 17209              		.loc 1 1017 9 is_stmt 1 view .LVU6200
 17210              	# sieve_extend.c:1017:         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) {
1017:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 17211              		.loc 1 1017 29 is_stmt 0 view .LVU6201
 17212 56f0 498B6D00 		mov	rbp, QWORD PTR 0[r13]	# MEM[(uint64_t * *)sieve_18(D)], MEM[(uint64_t * *)sieve_18(D)]
 17213              	# sieve_extend.c:1017:         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) {
1017:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
GAS LISTING /tmp/cctyCFAS.s 			page 460


 17214              		.loc 1 1017 30 view .LVU6202
 17215 56f4 4C89F3   		mov	rbx, r14	# tmp198, prime
 17216 56f7 48C1EB06 		shr	rbx, 6	# tmp198,
 17217              	# sieve_extend.c:1017:         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) {
1017:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 17218              		.loc 1 1017 71 view .LVU6203
 17219 56fb 4C8B4CDD 		mov	r9, QWORD PTR 0[rbp+rbx*8]	# *_47, *_47
 17219      00
 17220 5700 C4C28BF7 		shrx	rcx, r9, r14	# tmp201, *_47, prime
 17220      C9
 17221              	# sieve_extend.c:1017:         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) {
1017:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 17222              		.loc 1 1017 12 view .LVU6204
 17223 5705 83E101   		and	ecx, 1	# c,
 17224 5708 0F84BA02 		je	.L1685	#,
 17224      0000
 17225              	.LVL1177:
 17226              	.LBB788:
 17227              	.LBB789:
1026:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17228              		.loc 1 1026 32 is_stmt 1 view .LVU6205
 17229              	# sieve_extend.c:1026:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1026:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17230              		.loc 1 1026 13 is_stmt 0 view .LVU6206
 17231 570e BE030000 		mov	esi, 3	# ivtmp.716,
 17231      00
 17232              	.LBE789:
 17233              	# sieve_extend.c:1025:             counter_t c_prime = 0;
1025:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 17234              		.loc 1 1025 23 view .LVU6207
 17235 5713 31ED     		xor	ebp, ebp	# c_prime
 17236              	.LBB790:
 17237              	# sieve_extend.c:1026:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1026:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17238              		.loc 1 1026 13 view .LVU6208
 17239 5715 4885FF   		test	rdi, rdi	# _137
 17240 5718 0F84EC03 		je	.L1797	#,
 17240      0000
 17241 571e 4989FB   		mov	r11, rdi	# tmp231, _137
 17242 5721 4929CB   		sub	r11, rcx	# tmp231, c
 17243 5724 4183E303 		and	r11d, 3	# tmp231,
 17244 5728 4D89DA   		mov	r10, r11	# tmp232, tmp231
 17245 572b 0F84B700 		je	.L1686	#,
 17245      0000
 17246              	.LVL1178:
1027:sieve_extend.c ****             }
 17247              		.loc 1 1027 17 is_stmt 1 view .LVU6209
 17248              	# sieve_extend.c:1027:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1027:sieve_extend.c ****             }
 17249              		.loc 1 1027 48 is_stmt 0 view .LVU6210
 17250 5731 488D0409 		lea	rax, [rcx+rcx]	# tmp239,
 17251 5735 4C39F8   		cmp	rax, r15	# tmp239, ivtmp.726
 17252 5738 7411     		je	.L1738	#,
 17253              	# sieve_extend.c:1027:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1027:sieve_extend.c ****             }
 17254              		.loc 1 1027 33 view .LVU6211
 17255 573a 31D2     		xor	edx, edx	# tmp241
GAS LISTING /tmp/cctyCFAS.s 			page 461


 17256 573c 4C89E0   		mov	rax, r12	# tmp242, ivtmp.724
 17257 573f 48F7F6   		div	rsi	# ivtmp.716
 17258              	# sieve_extend.c:1027:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1027:sieve_extend.c ****             }
 17259              		.loc 1 1027 82 view .LVU6212
 17260 5742 31ED     		xor	ebp, ebp	# c_prime
1027:sieve_extend.c ****             }
 17261              		.loc 1 1027 82 view .LVU6213
 17262 5744 4885D2   		test	rdx, rdx	# tmp241
 17263 5747 400F94C5 		sete	bpl	#, c_prime
 17264              	.LVL1179:
 17265              	.L1738:
1026:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17266              		.loc 1 1026 68 is_stmt 1 view .LVU6214
 17267              	# sieve_extend.c:1026:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1026:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17268              		.loc 1 1026 69 is_stmt 0 view .LVU6215
 17269 574b 48FFC1   		inc	rcx	# c
 17270              	.LVL1180:
1026:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17271              		.loc 1 1026 32 is_stmt 1 view .LVU6216
 17272              	# sieve_extend.c:1026:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1026:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17273              		.loc 1 1026 13 is_stmt 0 view .LVU6217
 17274 574e 4839F9   		cmp	rcx, rdi	# c, _137
 17275 5751 0F877901 		ja	.L1692	#,
 17275      0000
 17276              	# sieve_extend.c:1026:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1026:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17277              		.loc 1 1026 51 view .LVU6218
 17278 5757 4989C9   		mov	r9, rcx	# tmp244, c
 17279 575a 4C0FAFC9 		imul	r9, rcx	# tmp244, c
 17280 575e BE050000 		mov	esi, 5	# ivtmp.716,
 17280      00
 17281              	# sieve_extend.c:1026:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1026:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17282              		.loc 1 1026 47 view .LVU6219
 17283 5763 4D39E1   		cmp	r9, r12	# tmp244, ivtmp.724
 17284 5766 0F876401 		ja	.L1692	#,
 17284      0000
 17285 576c 4983FA01 		cmp	r10, 1	# tmp232,
 17286 5770 7476     		je	.L1686	#,
 17287 5772 4983FA02 		cmp	r10, 2	# tmp232,
 17288 5776 7437     		je	.L1769	#,
1027:sieve_extend.c ****             }
 17289              		.loc 1 1027 17 is_stmt 1 view .LVU6220
 17290              	# sieve_extend.c:1027:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1027:sieve_extend.c ****             }
 17291              		.loc 1 1027 48 is_stmt 0 view .LVU6221
 17292 5778 488D1C09 		lea	rbx, [rcx+rcx]	# tmp245,
 17293 577c 4C39FB   		cmp	rbx, r15	# tmp245, ivtmp.726
 17294 577f 7417     		je	.L1740	#,
 17295              	# sieve_extend.c:1027:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1027:sieve_extend.c ****             }
 17296              		.loc 1 1027 33 view .LVU6222
 17297 5781 31D2     		xor	edx, edx	# tmp247
 17298 5783 4C89E0   		mov	rax, r12	# tmp248, ivtmp.724
GAS LISTING /tmp/cctyCFAS.s 			page 462


 17299 5786 48F7F6   		div	rsi	# ivtmp.716
 17300              	# sieve_extend.c:1027:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1027:sieve_extend.c ****             }
 17301              		.loc 1 1027 20 view .LVU6223
 17302 5789 4885D2   		test	rdx, rdx	# tmp247
 17303 578c 410F94C3 		sete	r11b	#, tmp249
 17304              	# sieve_extend.c:1027:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1027:sieve_extend.c ****             }
 17305              		.loc 1 1027 82 view .LVU6224
 17306 5790 4180FB01 		cmp	r11b, 1	# tmp249,
 17307 5794 4883DDFF 		sbb	rbp, -1	# c_prime,
 17308              	.LVL1181:
 17309              	.L1740:
1026:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17310              		.loc 1 1026 68 is_stmt 1 view .LVU6225
 17311              	# sieve_extend.c:1026:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1026:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17312              		.loc 1 1026 69 is_stmt 0 view .LVU6226
 17313 5798 48FFC1   		inc	rcx	# c
 17314              	.LVL1182:
1026:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17315              		.loc 1 1026 32 is_stmt 1 view .LVU6227
 17316              	# sieve_extend.c:1026:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1026:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17317              		.loc 1 1026 51 is_stmt 0 view .LVU6228
 17318 579b 4989CA   		mov	r10, rcx	# tmp250, c
 17319 579e 4C0FAFD1 		imul	r10, rcx	# tmp250, c
 17320 57a2 4883C602 		add	rsi, 2	# ivtmp.716,
 17321              	# sieve_extend.c:1026:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1026:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17322              		.loc 1 1026 47 view .LVU6229
 17323 57a6 4D39E2   		cmp	r10, r12	# tmp250, ivtmp.724
 17324 57a9 0F872101 		ja	.L1692	#,
 17324      0000
 17325              	.L1769:
1027:sieve_extend.c ****             }
 17326              		.loc 1 1027 17 is_stmt 1 view .LVU6230
 17327              	# sieve_extend.c:1027:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1027:sieve_extend.c ****             }
 17328              		.loc 1 1027 48 is_stmt 0 view .LVU6231
 17329 57af 4C8D0C09 		lea	r9, [rcx+rcx]	# tmp251,
 17330 57b3 4D39F9   		cmp	r9, r15	# tmp251, ivtmp.726
 17331 57b6 7415     		je	.L1743	#,
 17332              	# sieve_extend.c:1027:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1027:sieve_extend.c ****             }
 17333              		.loc 1 1027 33 view .LVU6232
 17334 57b8 31D2     		xor	edx, edx	# tmp253
 17335 57ba 4C89E0   		mov	rax, r12	# tmp254, ivtmp.724
 17336 57bd 48F7F6   		div	rsi	# ivtmp.716
 17337              	# sieve_extend.c:1027:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1027:sieve_extend.c ****             }
 17338              		.loc 1 1027 20 view .LVU6233
 17339 57c0 4885D2   		test	rdx, rdx	# tmp253
 17340 57c3 0F94C3   		sete	bl	#, tmp255
 17341              	# sieve_extend.c:1027:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1027:sieve_extend.c ****             }
 17342              		.loc 1 1027 82 view .LVU6234
GAS LISTING /tmp/cctyCFAS.s 			page 463


 17343 57c6 80FB01   		cmp	bl, 1	# tmp255,
 17344 57c9 4883DDFF 		sbb	rbp, -1	# c_prime,
 17345              	.LVL1183:
 17346              	.L1743:
1026:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17347              		.loc 1 1026 68 is_stmt 1 view .LVU6235
 17348              	# sieve_extend.c:1026:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1026:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17349              		.loc 1 1026 69 is_stmt 0 view .LVU6236
 17350 57cd 48FFC1   		inc	rcx	# c
 17351              	.LVL1184:
1026:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17352              		.loc 1 1026 32 is_stmt 1 view .LVU6237
 17353              	# sieve_extend.c:1026:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1026:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17354              		.loc 1 1026 51 is_stmt 0 view .LVU6238
 17355 57d0 4989CB   		mov	r11, rcx	# tmp256, c
 17356 57d3 4C0FAFD9 		imul	r11, rcx	# tmp256, c
 17357 57d7 4883C602 		add	rsi, 2	# ivtmp.716,
 17358              	# sieve_extend.c:1026:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1026:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17359              		.loc 1 1026 47 view .LVU6239
 17360 57db 4D39E3   		cmp	r11, r12	# tmp256, ivtmp.724
 17361 57de 0F87EC00 		ja	.L1692	#,
 17361      0000
 17362              	.LVL1185:
 17363              		.p2align 4,,10
 17364 57e4 0F1F4000 		.p2align 3
 17365              	.L1686:
1027:sieve_extend.c ****             }
 17366              		.loc 1 1027 17 is_stmt 1 view .LVU6240
 17367              	# sieve_extend.c:1027:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1027:sieve_extend.c ****             }
 17368              		.loc 1 1027 48 is_stmt 0 view .LVU6241
 17369 57e8 4C8D1409 		lea	r10, [rcx+rcx]	# tmp210,
 17370 57ec 4D39FA   		cmp	r10, r15	# tmp210, ivtmp.726
 17371 57ef 7417     		je	.L1691	#,
 17372              	# sieve_extend.c:1027:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1027:sieve_extend.c ****             }
 17373              		.loc 1 1027 33 view .LVU6242
 17374 57f1 31D2     		xor	edx, edx	# tmp214
 17375 57f3 4C89E0   		mov	rax, r12	# tmp215, ivtmp.724
 17376 57f6 48F7F6   		div	rsi	# ivtmp.716
 17377              	# sieve_extend.c:1027:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1027:sieve_extend.c ****             }
 17378              		.loc 1 1027 20 view .LVU6243
 17379 57f9 4885D2   		test	rdx, rdx	# tmp214
 17380 57fc 410F94C1 		sete	r9b	#, tmp217
 17381              	# sieve_extend.c:1027:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1027:sieve_extend.c ****             }
 17382              		.loc 1 1027 82 view .LVU6244
 17383 5800 4180F901 		cmp	r9b, 1	# tmp217,
 17384 5804 4883DDFF 		sbb	rbp, -1	# c_prime,
 17385              	.LVL1186:
 17386              	.L1691:
1026:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17387              		.loc 1 1026 68 is_stmt 1 view .LVU6245
GAS LISTING /tmp/cctyCFAS.s 			page 464


 17388              	# sieve_extend.c:1026:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1026:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17389              		.loc 1 1026 69 is_stmt 0 view .LVU6246
 17390 5808 48FFC1   		inc	rcx	# tmp234
 17391              	.LVL1187:
1026:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17392              		.loc 1 1026 32 is_stmt 1 view .LVU6247
 17393              	# sieve_extend.c:1026:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1026:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17394              		.loc 1 1026 13 is_stmt 0 view .LVU6248
 17395 580b 4839F9   		cmp	rcx, rdi	# tmp234, _137
 17396 580e 0F87BC00 		ja	.L1692	#,
 17396      0000
 17397              	# sieve_extend.c:1026:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1026:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17398              		.loc 1 1026 51 view .LVU6249
 17399 5814 4889CB   		mov	rbx, rcx	# tmp218, tmp234
 17400 5817 480FAFD9 		imul	rbx, rcx	# tmp218, tmp234
 17401 581b 4883C602 		add	rsi, 2	# tmp233,
 17402              	# sieve_extend.c:1026:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1026:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17403              		.loc 1 1026 47 view .LVU6250
 17404 581f 4C39E3   		cmp	rbx, r12	# tmp218, ivtmp.724
 17405 5822 0F87A800 		ja	.L1692	#,
 17405      0000
1027:sieve_extend.c ****             }
 17406              		.loc 1 1027 17 is_stmt 1 view .LVU6251
 17407              	# sieve_extend.c:1027:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1027:sieve_extend.c ****             }
 17408              		.loc 1 1027 48 is_stmt 0 view .LVU6252
 17409 5828 4C8D1C09 		lea	r11, [rcx+rcx]	# tmp257,
 17410 582c 4D39FB   		cmp	r11, r15	# tmp257, ivtmp.726
 17411 582f 7417     		je	.L1747	#,
 17412              	# sieve_extend.c:1027:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1027:sieve_extend.c ****             }
 17413              		.loc 1 1027 33 view .LVU6253
 17414 5831 31D2     		xor	edx, edx	# tmp259
 17415 5833 4C89E0   		mov	rax, r12	# tmp260, ivtmp.724
 17416 5836 48F7F6   		div	rsi	# tmp233
 17417              	# sieve_extend.c:1027:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1027:sieve_extend.c ****             }
 17418              		.loc 1 1027 20 view .LVU6254
 17419 5839 4885D2   		test	rdx, rdx	# tmp259
 17420 583c 410F94C2 		sete	r10b	#, tmp261
 17421              	# sieve_extend.c:1027:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1027:sieve_extend.c ****             }
 17422              		.loc 1 1027 82 view .LVU6255
 17423 5840 4180FA01 		cmp	r10b, 1	# tmp261,
 17424 5844 4883DDFF 		sbb	rbp, -1	# c_prime,
 17425              	.LVL1188:
 17426              	.L1747:
1026:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17427              		.loc 1 1026 68 is_stmt 1 view .LVU6256
 17428              	# sieve_extend.c:1026:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1026:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17429              		.loc 1 1026 69 is_stmt 0 view .LVU6257
 17430 5848 4C8D4901 		lea	r9, 1[rcx]	# c,
GAS LISTING /tmp/cctyCFAS.s 			page 465


1026:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17431              		.loc 1 1026 32 is_stmt 1 view .LVU6258
 17432              	# sieve_extend.c:1026:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1026:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17433              		.loc 1 1026 51 is_stmt 0 view .LVU6259
 17434 584c 4D89CB   		mov	r11, r9	# tmp264, c
 17435 584f 4D0FAFD9 		imul	r11, r9	# tmp264, c
 17436 5853 488D5E02 		lea	rbx, 2[rsi]	# ivtmp.716,
 17437              	# sieve_extend.c:1026:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1026:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17438              		.loc 1 1026 47 view .LVU6260
 17439 5857 4D39E3   		cmp	r11, r12	# tmp264, ivtmp.724
 17440 585a 7774     		ja	.L1692	#,
1027:sieve_extend.c ****             }
 17441              		.loc 1 1027 17 is_stmt 1 view .LVU6261
 17442              	# sieve_extend.c:1027:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1027:sieve_extend.c ****             }
 17443              		.loc 1 1027 48 is_stmt 0 view .LVU6262
 17444 585c 4D01C9   		add	r9, r9	# tmp265
 17445 585f 4D39F9   		cmp	r9, r15	# tmp265, ivtmp.726
 17446 5862 7417     		je	.L1749	#,
 17447              	# sieve_extend.c:1027:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1027:sieve_extend.c ****             }
 17448              		.loc 1 1027 33 view .LVU6263
 17449 5864 31D2     		xor	edx, edx	# tmp267
 17450 5866 4C89E0   		mov	rax, r12	# tmp268, ivtmp.724
 17451 5869 48F7F3   		div	rbx	# ivtmp.716
 17452              	# sieve_extend.c:1027:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1027:sieve_extend.c ****             }
 17453              		.loc 1 1027 20 view .LVU6264
 17454 586c 4885D2   		test	rdx, rdx	# tmp267
 17455 586f 410F94C2 		sete	r10b	#, tmp269
 17456              	# sieve_extend.c:1027:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1027:sieve_extend.c ****             }
 17457              		.loc 1 1027 82 view .LVU6265
 17458 5873 4180FA01 		cmp	r10b, 1	# tmp269,
 17459 5877 4883DDFF 		sbb	rbp, -1	# c_prime,
 17460              	.LVL1189:
 17461              	.L1749:
1026:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17462              		.loc 1 1026 68 is_stmt 1 view .LVU6266
 17463              	# sieve_extend.c:1026:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1026:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17464              		.loc 1 1026 69 is_stmt 0 view .LVU6267
 17465 587b 4C8D4902 		lea	r9, 2[rcx]	# c,
1026:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17466              		.loc 1 1026 32 is_stmt 1 view .LVU6268
 17467              	# sieve_extend.c:1026:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1026:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17468              		.loc 1 1026 51 is_stmt 0 view .LVU6269
 17469 587f 4D89CB   		mov	r11, r9	# tmp272, c
 17470 5882 4D0FAFD9 		imul	r11, r9	# tmp272, c
 17471 5886 488D5E04 		lea	rbx, 4[rsi]	# ivtmp.716,
 17472              	# sieve_extend.c:1026:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1026:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17473              		.loc 1 1026 47 view .LVU6270
 17474 588a 4D39E3   		cmp	r11, r12	# tmp272, ivtmp.724
GAS LISTING /tmp/cctyCFAS.s 			page 466


 17475 588d 7741     		ja	.L1692	#,
1027:sieve_extend.c ****             }
 17476              		.loc 1 1027 17 is_stmt 1 view .LVU6271
 17477              	# sieve_extend.c:1027:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1027:sieve_extend.c ****             }
 17478              		.loc 1 1027 48 is_stmt 0 view .LVU6272
 17479 588f 4D01C9   		add	r9, r9	# tmp273
 17480 5892 4D39F9   		cmp	r9, r15	# tmp273, ivtmp.726
 17481 5895 7417     		je	.L1751	#,
 17482              	# sieve_extend.c:1027:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1027:sieve_extend.c ****             }
 17483              		.loc 1 1027 33 view .LVU6273
 17484 5897 31D2     		xor	edx, edx	# tmp275
 17485 5899 4C89E0   		mov	rax, r12	# tmp276, ivtmp.724
 17486 589c 48F7F3   		div	rbx	# ivtmp.716
 17487              	# sieve_extend.c:1027:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1027:sieve_extend.c ****             }
 17488              		.loc 1 1027 20 view .LVU6274
 17489 589f 4885D2   		test	rdx, rdx	# tmp275
 17490 58a2 410F94C2 		sete	r10b	#, tmp277
 17491              	# sieve_extend.c:1027:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1027:sieve_extend.c ****             }
 17492              		.loc 1 1027 82 view .LVU6275
 17493 58a6 4180FA01 		cmp	r10b, 1	# tmp277,
 17494 58aa 4883DDFF 		sbb	rbp, -1	# c_prime,
 17495              	.LVL1190:
 17496              	.L1751:
1026:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17497              		.loc 1 1026 68 is_stmt 1 view .LVU6276
 17498              	# sieve_extend.c:1026:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1026:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17499              		.loc 1 1026 69 is_stmt 0 view .LVU6277
 17500 58ae 4883C103 		add	rcx, 3	# c,
 17501              	.LVL1191:
1026:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17502              		.loc 1 1026 32 is_stmt 1 view .LVU6278
 17503              	# sieve_extend.c:1026:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1026:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17504              		.loc 1 1026 51 is_stmt 0 view .LVU6279
 17505 58b2 4989C9   		mov	r9, rcx	# tmp278, c
 17506 58b5 4C0FAFC9 		imul	r9, rcx	# tmp278, c
 17507 58b9 4883C606 		add	rsi, 6	# ivtmp.716,
 17508              	# sieve_extend.c:1026:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1026:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17509              		.loc 1 1026 47 view .LVU6280
 17510 58bd 4D39E1   		cmp	r9, r12	# tmp278, ivtmp.724
 17511 58c0 0F8622FF 		jbe	.L1686	#,
 17511      FFFF
 17512              	.LVL1192:
 17513 58c6 662E0F1F 		.p2align 4,,10
 17513      84000000 
 17513      0000
 17514              		.p2align 3
 17515              	.L1692:
1026:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17516              		.loc 1 1026 47 view .LVU6281
 17517              	.LBE790:
GAS LISTING /tmp/cctyCFAS.s 			page 467


1029:sieve_extend.c ****         }
 17518              		.loc 1 1029 13 is_stmt 1 view .LVU6282
 17519              	# sieve_extend.c:1029:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1029:sieve_extend.c ****         }
 17520              		.loc 1 1029 16 is_stmt 0 view .LVU6283
 17521 58d0 4885ED   		test	rbp, rbp	# c_prime
 17522 58d3 0F841802 		je	.L1810	#,
 17522      0000
 17523              	.LVL1193:
 17524              	.L1689:
1029:sieve_extend.c ****         }
 17525              		.loc 1 1029 16 view .LVU6284
 17526              	.LBE788:
1016:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 17527              		.loc 1 1016 52 is_stmt 1 view .LVU6285
 17528              	# sieve_extend.c:1016:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
1016:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 17529              		.loc 1 1016 57 is_stmt 0 view .LVU6286
 17530 58d9 49FFC6   		inc	r14	# prime
 17531              	.LVL1194:
1016:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 17532              		.loc 1 1016 31 is_stmt 1 view .LVU6287
 17533 58dc 4983C402 		add	r12, 2	# ivtmp.724,
 17534 58e0 4983C702 		add	r15, 2	# ivtmp.726,
 17535              	# sieve_extend.c:1016:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
1016:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 17536              		.loc 1 1016 5 is_stmt 0 view .LVU6288
 17537 58e4 4939FE   		cmp	r14, rdi	# prime, _137
 17538 58e7 0F8203FE 		jb	.L1693	#,
 17538      FFFF
 17539              	.LVL1195:
 17540              	.L1799:
1016:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 17541              		.loc 1 1016 5 view .LVU6289
 17542 58ed 448B6C24 		mov	r13d, DWORD PTR 20[rsp]	# <retval>, %sfp
 17542      14
 17543              	.LVL1196:
 17544              	.L1663:
1016:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 17545              		.loc 1 1016 5 view .LVU6290
 17546              	.LBE800:
 17547              	.LBE774:
 17548              	.LBE773:
 17549              	# sieve_extend.c:1060: }
1060:sieve_extend.c **** 
 17550              		.loc 1 1060 1 view .LVU6291
 17551 58f2 4883C428 		add	rsp, 40	#,
 17552              		.cfi_remember_state
 17553              		.cfi_def_cfa_offset 56
 17554 58f6 5B       		pop	rbx	#
 17555              		.cfi_def_cfa_offset 48
 17556 58f7 5D       		pop	rbp	#
 17557              		.cfi_def_cfa_offset 40
 17558 58f8 415C     		pop	r12	#
 17559              		.cfi_def_cfa_offset 32
 17560 58fa 4489E8   		mov	eax, r13d	#, <retval>
 17561 58fd 415D     		pop	r13	#
GAS LISTING /tmp/cctyCFAS.s 			page 468


 17562              		.cfi_def_cfa_offset 24
 17563 58ff 415E     		pop	r14	#
 17564              		.cfi_def_cfa_offset 16
 17565 5901 415F     		pop	r15	#
 17566              		.cfi_def_cfa_offset 8
 17567 5903 C3       		ret	
 17568              	.LVL1197:
 17569              	.L1808:
 17570              		.cfi_restore_state
 17571              	# sieve_extend.c:1039:     switch(sieve->size) {
1039:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 17572              		.loc 1 1039 5 view .LVU6292
 17573 5904 4981F9E8 		cmp	r9, 1000	# pretmp_199,
 17573      030000
 17574 590b 0F84F302 		je	.L1670	#,
 17574      0000
 17575 5911 7633     		jbe	.L1811	#,
 17576 5913 4981F910 		cmp	r9, 10000	# pretmp_199,
 17576      270000
 17577 591a 0F853003 		jne	.L1674	#,
 17577      0000
 17578 5920 4981F8CD 		cmp	r8, 1229	# primeCount,
 17578      040000
 17579 5927 400F94C6 		sete	sil	#, tmp179
 17580 592b 21F2     		and	edx, esi	# _251, tmp179
 17581 592d 4981F8CD 		cmp	r8, 1229	# primeCount,
 17581      040000
 17582 5934 440FB6EE 		movzx	r13d, sil	# <retval>, tmp179
 17583 5938 410F95C6 		setne	r14b	#, _135
1043:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 17584              		.loc 1 1043 29 is_stmt 1 view .LVU6293
 17585              	.LVL1198:
1043:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 17586              		.loc 1 1043 54 view .LVU6294
 17587              	# sieve_extend.c:1043:         case 10000:         valid_primes = 1229;     break;
1043:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 17588              		.loc 1 1043 42 is_stmt 0 view .LVU6295
 17589 593c B9CD0400 		mov	ecx, 1229	# valid_primes,
 17589      00
 17590              	# sieve_extend.c:1043:         case 10000:         valid_primes = 1229;     break;
1043:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 17591              		.loc 1 1043 9 view .LVU6296
 17592 5941 E93AFDFF 		jmp	.L1681	#
 17592      FF
 17593              	.LVL1199:
 17594              	.L1811:
 17595              	# sieve_extend.c:1039:     switch(sieve->size) {
1039:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 17596              		.loc 1 1039 5 view .LVU6297
 17597 5946 4983F90A 		cmp	r9, 10	# pretmp_199,
 17598 594a 0F842702 		je	.L1672	#,
 17598      0000
 17599 5950 4983F964 		cmp	r9, 100	# pretmp_199,
 17600 5954 0F85F602 		jne	.L1674	#,
 17600      0000
 17601 595a 4983F819 		cmp	r8, 25	# primeCount,
 17602 595e 0F94C1   		sete	cl	#, tmp173
GAS LISTING /tmp/cctyCFAS.s 			page 469


 17603 5961 21CA     		and	edx, ecx	# _251, tmp173
 17604 5963 4983F819 		cmp	r8, 25	# primeCount,
 17605 5967 440FB6E9 		movzx	r13d, cl	# <retval>, tmp173
 17606 596b 410F95C6 		setne	r14b	#, _135
 17607              	# sieve_extend.c:1041:         case 100:           valid_primes = 25;       break;
1041:sieve_extend.c ****         case 1000:          valid_primes = 168;      break;
 17608              		.loc 1 1041 42 view .LVU6298
 17609 596f B9190000 		mov	ecx, 25	# valid_primes,
 17609      00
 17610 5974 E907FDFF 		jmp	.L1681	#
 17610      FF
 17611 5979 0F1F8000 		.p2align 4,,10
 17611      000000
 17612              		.p2align 3
 17613              	.L1809:
 17614              	# sieve_extend.c:1039:     switch(sieve->size) {
1039:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 17615              		.loc 1 1039 5 view .LVU6299
 17616 5980 4981F940 		cmp	r9, 1000000	# pretmp_199,
 17616      420F00
 17617 5987 0F84C301 		je	.L1678	#,
 17617      0000
 17618 598d 4981F980 		cmp	r9, 10000000	# pretmp_199,
 17618      969800
 17619 5994 0F85B602 		jne	.L1674	#,
 17619      0000
 17620 599a 4981F803 		cmp	r8, 664579	# primeCount,
 17620      240A00
 17621 59a1 410F94C7 		sete	r15b	#, tmp185
 17622 59a5 4421FA   		and	edx, r15d	# _251, tmp185
 17623 59a8 4981F803 		cmp	r8, 664579	# primeCount,
 17623      240A00
 17624 59af 450FB6EF 		movzx	r13d, r15b	# <retval>, tmp185
 17625 59b3 410F95C6 		setne	r14b	#, _135
1046:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 17626              		.loc 1 1046 29 is_stmt 1 view .LVU6300
 17627              	.LVL1200:
1046:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 17628              		.loc 1 1046 54 view .LVU6301
 17629              	# sieve_extend.c:1046:         case 10000000:      valid_primes = 664579;   break;
1046:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 17630              		.loc 1 1046 42 is_stmt 0 view .LVU6302
 17631 59b7 B903240A 		mov	ecx, 664579	# valid_primes,
 17631      00
 17632              	# sieve_extend.c:1046:         case 10000000:      valid_primes = 664579;   break;
1046:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 17633              		.loc 1 1046 9 view .LVU6303
 17634 59bc E9BFFCFF 		jmp	.L1681	#
 17634      FF
 17635              	.LVL1201:
 17636              		.p2align 4,,10
 17637 59c1 0F1F8000 		.p2align 3
 17637      000000
 17638              	.L1685:
 17639              	.LBB805:
 17640              	.LBB803:
 17641              	.LBB801:
GAS LISTING /tmp/cctyCFAS.s 			page 470


 17642              	.LBB797:
1018:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 17643              		.loc 1 1018 32 is_stmt 1 view .LVU6304
 17644              	# sieve_extend.c:1018:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1018:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 17645              		.loc 1 1018 13 is_stmt 0 view .LVU6305
 17646 59c8 4885FF   		test	rdi, rdi	# _137
 17647 59cb 0F841CFF 		je	.L1799	#,
 17647      FFFF
 17648              	# sieve_extend.c:1018:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1018:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 17649              		.loc 1 1018 27 view .LVU6306
 17650 59d1 BB010000 		mov	ebx, 1	# c,
 17650      00
 17651 59d6 EB27     		jmp	.L1690	#
 17652              	.LVL1202:
 17653 59d8 0F1F8400 		.p2align 4,,10
 17653      00000000 
 17654              		.p2align 3
 17655              	.L1699:
 17656              	# sieve_extend.c:1020:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was mark
1020:sieve_extend.c ****                 }
 17657              		.loc 1 1020 35 view .LVU6307
 17658 59e0 4989E8   		mov	r8, rbp	# warn_prime, warn_prime
 17659              	.LVL1203:
 17660              	.L1688:
1018:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 17661              		.loc 1 1018 68 is_stmt 1 view .LVU6308
 17662              	# sieve_extend.c:1018:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1018:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 17663              		.loc 1 1018 69 is_stmt 0 view .LVU6309
 17664 59e3 48FFC3   		inc	rbx	# c
 17665              	.LVL1204:
1018:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 17666              		.loc 1 1018 32 is_stmt 1 view .LVU6310
 17667              	# sieve_extend.c:1018:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1018:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 17668              		.loc 1 1018 13 is_stmt 0 view .LVU6311
 17669 59e6 4839FB   		cmp	rbx, rdi	# c, _137
 17670 59e9 0F87EAFE 		ja	.L1689	#,
 17670      FFFF
 17671              	# sieve_extend.c:1018:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1018:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 17672              		.loc 1 1018 51 view .LVU6312
 17673 59ef 4989DB   		mov	r11, rbx	# tmp209, c
 17674 59f2 4C0FAFDB 		imul	r11, rbx	# tmp209, c
 17675              	# sieve_extend.c:1018:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1018:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 17676              		.loc 1 1018 47 view .LVU6313
 17677 59f6 4D39E3   		cmp	r11, r12	# tmp209, ivtmp.724
 17678 59f9 0F87DAFE 		ja	.L1689	#,
 17678      FFFF
 17679              	.LVL1205:
 17680              	.L1690:
1019:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 17681              		.loc 1 1019 17 is_stmt 1 view .LVU6314
 17682 59ff 488D2C1B 		lea	rbp, [rbx+rbx]	# _216,
GAS LISTING /tmp/cctyCFAS.s 			page 471


 17683              	# sieve_extend.c:1019:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
1019:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 17684              		.loc 1 1019 39 is_stmt 0 view .LVU6315
 17685 5a03 488D7501 		lea	rsi, 1[rbp]	# _55,
 17686 5a07 4C89E0   		mov	rax, r12	# tmp203, ivtmp.724
 17687 5a0a 31D2     		xor	edx, edx	# tmp204
 17688 5a0c 48F7F6   		div	rsi	# _55
 17689              	# sieve_extend.c:1019:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
1019:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 17690              		.loc 1 1019 48 view .LVU6316
 17691 5a0f 4885D2   		test	rdx, rdx	# tmp204
 17692 5a12 75CF     		jne	.L1688	#,
1019:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 17693              		.loc 1 1019 48 view .LVU6317
 17694 5a14 4939EF   		cmp	r15, rbp	# ivtmp.726, _216
 17695 5a17 74CA     		je	.L1688	#,
1020:sieve_extend.c ****                 }
 17696              		.loc 1 1020 21 is_stmt 1 view .LVU6318
 17697              	# sieve_extend.c:1020:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was mark
1020:sieve_extend.c ****                 }
 17698              		.loc 1 1020 35 is_stmt 0 view .LVU6319
 17699 5a19 498D6801 		lea	rbp, 1[r8]	# warn_prime,
 17700              	.LVL1206:
 17701              	# sieve_extend.c:1020:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was mark
1020:sieve_extend.c ****                 }
 17702              		.loc 1 1020 24 view .LVU6320
 17703 5a1d 4983F81D 		cmp	r8, 29	# warn_prime,
 17704 5a21 77BD     		ja	.L1699	#,
1020:sieve_extend.c ****                 }
 17705              		.loc 1 1020 44 is_stmt 1 view .LVU6321
 17706              	.LVL1207:
 17707              	.LBB785:
 17708              	.LBI779:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17709              		.loc 3 105 1 view .LVU6322
 17710              	.LBB782:
 17711              		.loc 3 107 3 view .LVU6323
 17712              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17713              		.loc 3 107 10 is_stmt 0 view .LVU6324
 17714 5a23 4883EC08 		sub	rsp, 8	#,
 17715              		.cfi_def_cfa_offset 104
 17716 5a27 4154     		push	r12	# ivtmp.724
 17717              		.cfi_def_cfa_offset 112
 17718 5a29 4989F0   		mov	r8, rsi	#, _55
 17719 5a2c 4989C1   		mov	r9, rax	#, tmp203
 17720 5a2f 4C89E2   		mov	rdx, r12	#, ivtmp.724
 17721 5a32 BF010000 		mov	edi, 1	#,
 17721      00
 17722 5a37 4C89F1   		mov	rcx, r14	#, prime
 17723 5a3a 488D3500 		lea	rsi, .LC8[rip]	#,
 17723      000000
 17724 5a41 31C0     		xor	eax, eax	#
 17725 5a43 E8000000 		call	__printf_chk@PLT	#
 17725      00
 17726              	.LVL1208:
 17727 5a48 58       		pop	rax	#
 17728              		.cfi_def_cfa_offset 104
GAS LISTING /tmp/cctyCFAS.s 			page 472


 17729 5a49 498B7D08 		mov	rdi, QWORD PTR 8[r13]	# _137, MEM[(uint64_t *)sieve_18(D) + 8B]
 17730 5a4d 5A       		pop	rdx	#
 17731              		.cfi_def_cfa_offset 96
 17732              	.LBE782:
 17733              	.LBE785:
 17734              	# sieve_extend.c:1020:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was mark
1020:sieve_extend.c ****                 }
 17735              		.loc 1 1020 35 view .LVU6325
 17736 5a4e 4989E8   		mov	r8, rbp	# warn_prime, warn_prime
 17737              	.LBB786:
 17738              	.LBB783:
 17739              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17740              		.loc 3 107 10 view .LVU6326
 17741 5a51 EB90     		jmp	.L1688	#
 17742              	.LVL1209:
 17743              	.L1664:
 17744              		.loc 3 107 10 view .LVU6327
 17745              	.LBE783:
 17746              	.LBE786:
 17747              	.LBE797:
 17748              	.LBE801:
 17749              	.LBE803:
 17750              	.LBE805:
 17751              	.LBB806:
 17752              	.LBB770:
1009:sieve_extend.c **** }
 17753              		.loc 1 1009 5 is_stmt 1 view .LVU6328
1009:sieve_extend.c **** }
 17754              		.loc 1 1009 5 is_stmt 0 view .LVU6329
 17755              	.LBE770:
 17756              	.LBE806:
1038:sieve_extend.c ****     switch(sieve->size) {
 17757              		.loc 1 1038 5 is_stmt 1 view .LVU6330
1039:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 17758              		.loc 1 1039 5 view .LVU6331
 17759 5a53 41BE0100 		mov	r14d, 1	# _135,
 17759      0000
 17760 5a59 41B80100 		mov	r8d, 1	# primeCount,
 17760      0000
 17761 5a5f 4531ED   		xor	r13d, r13d	# <retval>
 17762 5a62 4981F9A0 		cmp	r9, 100000	# pretmp_199,
 17762      860100
 17763 5a69 0F842302 		je	.L1702	#,
 17763      0000
 17764 5a6f 0F872301 		ja	.L1694	#,
 17764      0000
 17765 5a75 B9190000 		mov	ecx, 25	# valid_primes,
 17765      00
 17766 5a7a 4983F964 		cmp	r9, 100	# pretmp_199,
 17767 5a7e 742A     		je	.L1682	#,
 17768 5a80 0F864001 		jbe	.L1812	#,
 17768      0000
 17769              	# sieve_extend.c:1042:         case 1000:          valid_primes = 168;      break;
1042:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 17770              		.loc 1 1042 42 is_stmt 0 view .LVU6332
 17771 5a86 B9A80000 		mov	ecx, 168	# valid_primes,
 17771      00
GAS LISTING /tmp/cctyCFAS.s 			page 473


 17772              	# sieve_extend.c:1039:     switch(sieve->size) {
1039:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 17773              		.loc 1 1039 5 view .LVU6333
 17774 5a8b 4981F9E8 		cmp	r9, 1000	# pretmp_199,
 17774      030000
 17775 5a92 7416     		je	.L1682	#,
 17776 5a94 4981F910 		cmp	r9, 10000	# pretmp_199,
 17776      270000
 17777 5a9b B9CD0400 		mov	ecx, 1229	# tmp223,
 17777      00
 17778 5aa0 41BA0000 		mov	r10d, 0	# tmp224,
 17778      0000
 17779 5aa6 490F45CA 		cmovne	rcx, r10	# tmp223,, valid_primes, tmp224
 17780              	.LVL1210:
 17781              	.L1682:
1054:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 17782              		.loc 1 1054 5 is_stmt 1 view .LVU6334
 17783              	# sieve_extend.c:1054:     if (!valid && option_verboselevel >= 1) {
1054:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 17784              		.loc 1 1054 39 is_stmt 0 view .LVU6335
 17785 5aaa 85DB     		test	ebx, ebx	# option_verboselevel
 17786 5aac 410F9FC4 		setg	r12b	#, tmp194
 17787              	# sieve_extend.c:1054:     if (!valid && option_verboselevel >= 1) {
1054:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 17788              		.loc 1 1054 8 view .LVU6336
 17789 5ab0 4520F4   		and	r12b, r14b	# _7, _135
 17790 5ab3 0F84E5FB 		je	.L1683	#,
 17790      FFFF
1055:sieve_extend.c ****         if (!valid && option_verboselevel >= 2) show_primes(sieve, default_show_primes_on_error);
 17791              		.loc 1 1055 9 is_stmt 1 view .LVU6337
 17792              	.LVL1211:
 17793              	.LBB807:
 17794              	.LBI807:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17795              		.loc 3 105 1 view .LVU6338
 17796              	.LBB808:
 17797              		.loc 3 107 3 view .LVU6339
 17798              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17799              		.loc 3 107 10 is_stmt 0 view .LVU6340
 17800 5ab9 31C0     		xor	eax, eax	#
 17801 5abb 4C89CA   		mov	rdx, r9	#, pretmp_199
 17802 5abe 488D3500 		lea	rsi, .LC6[rip]	#,
 17802      000000
 17803 5ac5 BF010000 		mov	edi, 1	#,
 17803      00
 17804 5aca E8000000 		call	__printf_chk@PLT	#
 17804      00
 17805              	.LVL1212:
 17806              		.loc 3 107 10 view .LVU6341
 17807              	.LBE808:
 17808              	.LBE807:
1056:sieve_extend.c ****     }
 17809              		.loc 1 1056 9 is_stmt 1 view .LVU6342
 17810              	# sieve_extend.c:1056:         if (!valid && option_verboselevel >= 2) show_primes(sieve, default_s
1056:sieve_extend.c ****     }
 17811              		.loc 1 1056 12 is_stmt 0 view .LVU6343
 17812 5acf 83FB01   		cmp	ebx, 1	# option_verboselevel,
GAS LISTING /tmp/cctyCFAS.s 			page 474


 17813 5ad2 0F841AFE 		je	.L1663	#,
 17813      FFFF
1056:sieve_extend.c ****     }
 17814              		.loc 1 1056 49 is_stmt 1 discriminator 1 view .LVU6344
 17815 5ad8 488D7508 		lea	rsi, 8[rbp]	# tmp195,
 17816 5adc BA640000 		mov	edx, 100	#,
 17816      00
 17817 5ae1 4889EF   		mov	rdi, rbp	#, sieve
 17818 5ae4 E8F7CBFF 		call	show_primes.isra.0	#
 17818      FF
 17819              	.LVL1213:
 17820              	# sieve_extend.c:1054:     if (!valid && option_verboselevel >= 1) {
1054:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 17821              		.loc 1 1054 9 is_stmt 0 discriminator 1 view .LVU6345
 17822 5ae9 4589E6   		mov	r14d, r12d	# _135, _7
 17823 5aec E9ADFBFF 		jmp	.L1683	#
 17823      FF
 17824              	.LVL1214:
 17825              	.L1810:
 17826              	.LBB809:
 17827              	.LBB804:
 17828              	.LBB802:
 17829              	.LBB798:
 17830              	# sieve_extend.c:1029:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1029:sieve_extend.c ****         }
 17831              		.loc 1 1029 44 view .LVU6346
 17832 5af1 488B4C24 		mov	rcx, QWORD PTR 8[rsp]	# warn_nonprime, %sfp
 17832      08
 17833 5af6 488D5901 		lea	rbx, 1[rcx]	# warn_nonprime,
 17834              	.LVL1215:
 17835              	# sieve_extend.c:1029:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1029:sieve_extend.c ****         }
 17836              		.loc 1 1029 28 view .LVU6347
 17837 5afa 4883F91D 		cmp	rcx, 29	# warn_nonprime,
 17838 5afe 761D     		jbe	.L1697	#,
 17839              	# sieve_extend.c:1029:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1029:sieve_extend.c ****         }
 17840              		.loc 1 1029 44 view .LVU6348
 17841 5b00 48895C24 		mov	QWORD PTR 8[rsp], rbx	# %sfp, warn_nonprime
 17841      08
 17842 5b05 E9CFFDFF 		jmp	.L1689	#
 17842      FF
 17843              	.LVL1216:
 17844              	.L1797:
1029:sieve_extend.c ****         }
 17845              		.loc 1 1029 44 view .LVU6349
 17846 5b0a 488B5424 		mov	rdx, QWORD PTR 8[rsp]	# warn_nonprime, %sfp
 17846      08
 17847 5b0f 488D5A01 		lea	rbx, 1[rdx]	# warn_nonprime,
 17848              	.LVL1217:
 17849              	# sieve_extend.c:1029:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1029:sieve_extend.c ****         }
 17850              		.loc 1 1029 28 view .LVU6350
 17851 5b13 4883FA1D 		cmp	rdx, 29	# warn_nonprime,
 17852 5b17 0F87D0FD 		ja	.L1799	#,
 17852      FFFF
 17853              	.LVL1218:
GAS LISTING /tmp/cctyCFAS.s 			page 475


 17854              	.L1697:
 17855              	.LBB791:
 17856              	.LBB792:
 17857              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17858              		.loc 3 107 10 view .LVU6351
 17859 5b1d BF010000 		mov	edi, 1	#,
 17859      00
 17860              	.LBE792:
 17861              	.LBE791:
 17862              	# sieve_extend.c:1029:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1029:sieve_extend.c ****         }
 17863              		.loc 1 1029 53 view .LVU6352
 17864 5b22 4B8D5436 		lea	rdx, 1[r14+r14]	# tmp220,
 17864      01
 17865              	.LBB795:
 17866              	.LBB793:
 17867              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17868              		.loc 3 107 10 view .LVU6353
 17869 5b27 4C89F1   		mov	rcx, r14	#, prime
 17870 5b2a 488D3500 		lea	rsi, .LC9[rip]	#,
 17870      000000
 17871 5b31 31C0     		xor	eax, eax	#
 17872 5b33 4C894424 		mov	QWORD PTR 24[rsp], r8	# %sfp, warn_prime
 17872      18
 17873              	.LBE793:
 17874              	.LBE795:
1029:sieve_extend.c ****         }
 17875              		.loc 1 1029 53 is_stmt 1 view .LVU6354
 17876              	.LVL1219:
 17877              	.LBB796:
 17878              	.LBI791:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17879              		.loc 3 105 1 view .LVU6355
 17880              	.LBB794:
 17881              		.loc 3 107 3 view .LVU6356
 17882              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17883              		.loc 3 107 10 is_stmt 0 view .LVU6357
 17884 5b38 E8000000 		call	__printf_chk@PLT	#
 17884      00
 17885              	.LVL1220:
 17886              		.loc 3 107 10 view .LVU6358
 17887 5b3d 48895C24 		mov	QWORD PTR 8[rsp], rbx	# %sfp, warn_nonprime
 17887      08
 17888 5b42 498B7D08 		mov	rdi, QWORD PTR 8[r13]	# _137, MEM[(uint64_t *)sieve_18(D) + 8B]
 17889 5b46 4C8B4424 		mov	r8, QWORD PTR 24[rsp]	# warn_prime, %sfp
 17889      18
 17890 5b4b E989FDFF 		jmp	.L1689	#
 17890      FF
 17891              	.LVL1221:
 17892              	.L1678:
 17893              		.loc 3 107 10 view .LVU6359
 17894 5b50 4981F8A2 		cmp	r8, 78498	# primeCount,
 17894      320100
 17895 5b57 410F94C5 		sete	r13b	#, tmp183
 17896 5b5b 4421EA   		and	edx, r13d	# _251, tmp183
 17897 5b5e 4981F8A2 		cmp	r8, 78498	# primeCount,
 17897      320100
GAS LISTING /tmp/cctyCFAS.s 			page 476


 17898 5b65 450FB6ED 		movzx	r13d, r13b	# <retval>, tmp183
 17899 5b69 410F95C6 		setne	r14b	#, _135
 17900              	.LBE794:
 17901              	.LBE796:
 17902              	.LBE798:
 17903              	.LBE802:
 17904              	.LBE804:
 17905              	.LBE809:
1045:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 17906              		.loc 1 1045 29 is_stmt 1 view .LVU6360
 17907              	.LVL1222:
1045:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 17908              		.loc 1 1045 54 view .LVU6361
 17909              	# sieve_extend.c:1045:         case 1000000:       valid_primes = 78498;    break;
1045:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 17910              		.loc 1 1045 42 is_stmt 0 view .LVU6362
 17911 5b6d B9A23201 		mov	ecx, 78498	# valid_primes,
 17911      00
 17912              	# sieve_extend.c:1045:         case 1000000:       valid_primes = 78498;    break;
1045:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 17913              		.loc 1 1045 9 view .LVU6363
 17914 5b72 E909FBFF 		jmp	.L1681	#
 17914      FF
 17915              	.LVL1223:
 17916              	.L1672:
1045:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 17917              		.loc 1 1045 9 view .LVU6364
 17918 5b77 4983F804 		cmp	r8, 4	# primeCount,
 17919 5b7b 410F94C2 		sete	r10b	#, tmp175
 17920 5b7f 4421D2   		and	edx, r10d	# _251, tmp175
 17921 5b82 4983F804 		cmp	r8, 4	# primeCount,
 17922 5b86 450FB6EA 		movzx	r13d, r10b	# <retval>, tmp175
 17923 5b8a 410F95C6 		setne	r14b	#, _135
 17924              	# sieve_extend.c:1040:         case 10:            valid_primes = 4;        break;
1040:sieve_extend.c ****         case 100:           valid_primes = 25;       break;
 17925              		.loc 1 1040 42 view .LVU6365
 17926 5b8e B9040000 		mov	ecx, 4	# valid_primes,
 17926      00
 17927 5b93 E9E8FAFF 		jmp	.L1681	#
 17927      FF
 17928              	.LVL1224:
 17929              	.L1694:
 17930              	# sieve_extend.c:1047:         case 100000000:     valid_primes = 5761455;  break;
1047:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 17931              		.loc 1 1047 42 view .LVU6366
 17932 5b98 B9AFE957 		mov	ecx, 5761455	# valid_primes,
 17932      00
 17933              	# sieve_extend.c:1039:     switch(sieve->size) {
1039:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 17934              		.loc 1 1039 5 view .LVU6367
 17935 5b9d 4981F900 		cmp	r9, 100000000	# pretmp_199,
 17935      E1F505
 17936 5ba4 0F8400FF 		je	.L1682	#,
 17936      FFFF
 17937 5baa 762C     		jbe	.L1813	#,
 17938 5bac 4981F900 		cmp	r9, 1000000000	# pretmp_199,
 17938      CA9A3B
GAS LISTING /tmp/cctyCFAS.s 			page 477


 17939 5bb3 B92EDF07 		mov	ecx, 50847534	# tmp227,
 17939      03
 17940 5bb8 B8000000 		mov	eax, 0	# tmp228,
 17940      00
 17941 5bbd 480F45C8 		cmovne	rcx, rax	# tmp227,, valid_primes, tmp228
 17942 5bc1 E9E4FEFF 		jmp	.L1682	#
 17942      FF
 17943              	.L1812:
 17944 5bc6 31C9     		xor	ecx, ecx	# valid_primes
 17945 5bc8 4983F90A 		cmp	r9, 10	# pretmp_199,
 17946 5bcc 0F94C1   		sete	cl	#, valid_primes
 17947 5bcf 48C1E102 		sal	rcx, 2	# valid_primes,
 17948 5bd3 E9D2FEFF 		jmp	.L1682	#
 17948      FF
 17949              	.L1813:
 17950              	# sieve_extend.c:1045:         case 1000000:       valid_primes = 78498;    break;
1045:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 17951              		.loc 1 1045 42 view .LVU6368
 17952 5bd8 B9A23201 		mov	ecx, 78498	# valid_primes,
 17952      00
 17953              	# sieve_extend.c:1039:     switch(sieve->size) {
1039:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 17954              		.loc 1 1039 5 view .LVU6369
 17955 5bdd 4981F940 		cmp	r9, 1000000	# pretmp_199,
 17955      420F00
 17956 5be4 0F84C0FE 		je	.L1682	#,
 17956      FFFF
 17957 5bea 4981F980 		cmp	r9, 10000000	# pretmp_199,
 17957      969800
 17958 5bf1 B903240A 		mov	ecx, 664579	# tmp225,
 17958      00
 17959 5bf6 BE000000 		mov	esi, 0	# tmp226,
 17959      00
 17960 5bfb 480F45CE 		cmovne	rcx, rsi	# tmp225,, valid_primes, tmp226
 17961 5bff E9A6FEFF 		jmp	.L1682	#
 17961      FF
 17962              	.LVL1225:
 17963              	.L1670:
1039:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 17964              		.loc 1 1039 5 view .LVU6370
 17965 5c04 4981F8A8 		cmp	r8, 168	# primeCount,
 17965      000000
 17966 5c0b 410F94C6 		sete	r14b	#, tmp177
 17967 5c0f 4421F2   		and	edx, r14d	# _251, tmp177
 17968 5c12 4981F8A8 		cmp	r8, 168	# primeCount,
 17968      000000
 17969 5c19 450FB6EE 		movzx	r13d, r14b	# <retval>, tmp177
 17970              	# sieve_extend.c:1042:         case 1000:          valid_primes = 168;      break;
1042:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 17971              		.loc 1 1042 42 view .LVU6371
 17972 5c1d B9A80000 		mov	ecx, 168	# valid_primes,
 17972      00
 17973 5c22 410F95C6 		setne	r14b	#, _135
1042:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 17974              		.loc 1 1042 29 is_stmt 1 view .LVU6372
 17975              	.LVL1226:
1042:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
GAS LISTING /tmp/cctyCFAS.s 			page 478


 17976              		.loc 1 1042 54 view .LVU6373
 17977              	# sieve_extend.c:1042:         case 1000:          valid_primes = 168;      break;
1042:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 17978              		.loc 1 1042 9 is_stmt 0 view .LVU6374
 17979 5c26 E955FAFF 		jmp	.L1681	#
 17979      FF
 17980              	.LVL1227:
 17981              	.L1676:
1042:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 17982              		.loc 1 1042 9 view .LVU6375
 17983 5c2b 4981F8AF 		cmp	r8, 5761455	# primeCount,
 17983      E95700
 17984 5c32 0F94C0   		sete	al	#, tmp187
 17985 5c35 21C2     		and	edx, eax	# _251, tmp187
 17986 5c37 4981F8AF 		cmp	r8, 5761455	# primeCount,
 17986      E95700
 17987 5c3e 440FB6E8 		movzx	r13d, al	# <retval>, tmp187
 17988 5c42 410F95C6 		setne	r14b	#, _135
1047:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 17989              		.loc 1 1047 29 is_stmt 1 view .LVU6376
 17990              	.LVL1228:
1047:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 17991              		.loc 1 1047 54 view .LVU6377
 17992              	# sieve_extend.c:1047:         case 100000000:     valid_primes = 5761455;  break;
1047:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 17993              		.loc 1 1047 42 is_stmt 0 view .LVU6378
 17994 5c46 B9AFE957 		mov	ecx, 5761455	# valid_primes,
 17994      00
 17995              	# sieve_extend.c:1047:         case 100000000:     valid_primes = 5761455;  break;
1047:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 17996              		.loc 1 1047 9 view .LVU6379
 17997 5c4b E930FAFF 		jmp	.L1681	#
 17997      FF
 17998              	.LVL1229:
 17999              	.L1674:
1047:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 18000              		.loc 1 1047 9 view .LVU6380
 18001 5c50 4D85C0   		test	r8, r8	# primeCount
 18002 5c53 410F94C3 		sete	r11b	#, tmp191
 18003 5c57 4421DA   		and	edx, r11d	# _251, tmp191
 18004 5c5a 4D85C0   		test	r8, r8	# primeCount
 18005 5c5d 410F95C6 		setne	r14b	#, _135
1049:sieve_extend.c ****     }
 18006              		.loc 1 1049 29 is_stmt 1 view .LVU6381
1049:sieve_extend.c ****     }
 18007              		.loc 1 1049 29 is_stmt 0 view .LVU6382
 18008 5c61 450FB6EB 		movzx	r13d, r11b	# <retval>, tmp191
 18009              	# sieve_extend.c:1049:         default:            valid_primes= 0;
1049:sieve_extend.c ****     }
 18010              		.loc 1 1049 41 view .LVU6383
 18011 5c65 31C9     		xor	ecx, ecx	# valid_primes
 18012 5c67 E914FAFF 		jmp	.L1681	#
 18012      FF
 18013              	.L1668:
1049:sieve_extend.c ****     }
 18014              		.loc 1 1049 41 view .LVU6384
 18015 5c6c 4981F878 		cmp	r8, 9592	# primeCount,
GAS LISTING /tmp/cctyCFAS.s 			page 479


 18015      250000
 18016 5c73 400F94C7 		sete	dil	#, tmp181
 18017 5c77 21FA     		and	edx, edi	# _251, tmp181
 18018 5c79 4981F878 		cmp	r8, 9592	# primeCount,
 18018      250000
 18019 5c80 440FB6EF 		movzx	r13d, dil	# <retval>, tmp181
 18020 5c84 410F95C6 		setne	r14b	#, _135
1044:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 18021              		.loc 1 1044 29 is_stmt 1 view .LVU6385
 18022              	.LVL1230:
1044:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 18023              		.loc 1 1044 54 view .LVU6386
 18024              	# sieve_extend.c:1044:         case 100000:        valid_primes = 9592;     break;
1044:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 18025              		.loc 1 1044 42 is_stmt 0 view .LVU6387
 18026 5c88 B9782500 		mov	ecx, 9592	# valid_primes,
 18026      00
 18027              	# sieve_extend.c:1044:         case 100000:        valid_primes = 9592;     break;
1044:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 18028              		.loc 1 1044 9 view .LVU6388
 18029 5c8d E9EEF9FF 		jmp	.L1681	#
 18029      FF
 18030              	.LVL1231:
 18031              	.L1702:
 18032              	# sieve_extend.c:1044:         case 100000:        valid_primes = 9592;     break;
1044:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 18033              		.loc 1 1044 42 view .LVU6389
 18034 5c92 B9782500 		mov	ecx, 9592	# valid_primes,
 18034      00
 18035 5c97 E90EFEFF 		jmp	.L1682	#
 18035      FF
 18036              		.cfi_endproc
 18037              	.LFE81:
 18039              		.section	.rodata.str1.8
 18040 0145 000000   		.align 8
 18041              	.LC10:
 18042 0148 55736167 		.string	"Usage: %s [options] [maximum]\n"
 18042      653A2025 
 18042      73205B6F 
 18042      7074696F 
 18042      6E735D20 
 18043              		.section	.rodata.str1.1
 18044              	.LC11:
 18045 0031 4F707469 		.string	"Options:\n"
 18045      6F6E733A 
 18045      0A00
 18046              		.section	.rodata.str1.8
 18047 0167 00       		.align 8
 18048              	.LC12:
 18049 0168 20202D2D 		.string	"  --verbose <level>  Show more output to a certain level:\n"
 18049      76657262 
 18049      6F736520 
 18049      3C6C6576 
 18049      656C3E20 
 18050 01a3 00000000 		.align 8
 18050      00
 18051              	.LC13:
GAS LISTING /tmp/cctyCFAS.s 			page 480


 18052 01a8 20202020 		.string	"                     1 - show phase progress\n"
 18052      20202020 
 18052      20202020 
 18052      20202020 
 18052      20202020 
 18053 01d6 0000     		.align 8
 18054              	.LC14:
 18055 01d8 20202020 		.string	"                     2 - show general progress within the phase\n"
 18055      20202020 
 18055      20202020 
 18055      20202020 
 18055      20202020 
 18056 0219 00000000 		.align 8
 18056      000000
 18057              	.LC15:
 18058 0220 20202020 		.string	"                     3 - show actual work\n"
 18058      20202020 
 18058      20202020 
 18058      20202020 
 18058      20202020 
 18059 024b 00000000 		.align 8
 18059      00
 18060              	.LC16:
 18061 0250 20202D2D 		.string	"  --check            check the correctness of the algorithm\n"
 18061      63686563 
 18061      6B202020 
 18061      20202020 
 18061      20202020 
 18062 028d 000000   		.align 8
 18063              	.LC17:
 18064 0290 20202D2D 		.string	"  --show <maximum>   Show the primes found up to the maximum\n"
 18064      73686F77 
 18064      203C6D61 
 18064      78696D75 
 18064      6D3E2020 
 18065 02ce 0000     		.align 8
 18066              	.LC18:
 18067 02d0 20202D2D 		.string	"  --tune  <level>    find the best settings for the current os and hardware\n"
 18067      74756E65 
 18067      20203C6C 
 18067      6576656C 
 18067      3E202020 
 18068 031d 000000   		.align 8
 18069              	.LC19:
 18070 0320 20202020 		.string	"                     1 - fast tuning\n"
 18070      20202020 
 18070      20202020 
 18070      20202020 
 18070      20202020 
 18071 0346 0000     		.align 8
 18072              	.LC20:
 18073 0348 20202020 		.string	"                     2 - refined tuning\n"
 18073      20202020 
 18073      20202020 
 18073      20202020 
 18073      20202020 
 18074 0371 00000000 		.align 8
GAS LISTING /tmp/cctyCFAS.s 			page 481


 18074      000000
 18075              	.LC21:
 18076 0378 20202020 		.string	"                     3 - maximum tuning (takes long)\n"
 18076      20202020 
 18076      20202020 
 18076      20202020 
 18076      20202020 
 18077              		.text
 18078 5c9c 0F1F4000 		.p2align 4
 18079              		.globl	usage
 18081              	usage:
 18082              	.LVL1232:
 18083              	.LFB82:
1062:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 18084              		.loc 1 1062 24 is_stmt 1 view -0
 18085              		.cfi_startproc
1062:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 18086              		.loc 1 1062 24 is_stmt 0 view .LVU6391
 18087 5ca0 F30F1EFA 		endbr64	
 18088 5ca4 50       		push	rax	#
 18089              		.cfi_def_cfa_offset 16
 18090 5ca5 58       		pop	rax	#
 18091              		.cfi_def_cfa_offset 8
1063:sieve_extend.c ****     fprintf(stderr, "Options:\n");
 18092              		.loc 1 1063 5 is_stmt 1 view .LVU6392
 18093              	.LVL1233:
 18094              	.LBB810:
 18095              	.LBI810:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18096              		.loc 3 98 1 view .LVU6393
 18097              	.LBB811:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18098              		.loc 3 100 3 view .LVU6394
 18099              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18100              		.loc 3 100 10 is_stmt 0 view .LVU6395
 18101 5ca6 488D1500 		lea	rdx, .LC10[rip]	#,
 18101      000000
 18102 5cad BE010000 		mov	esi, 1	#,
 18102      00
 18103 5cb2 31C0     		xor	eax, eax	#
 18104              	.LBE811:
 18105              	.LBE810:
 18106              	# sieve_extend.c:1062: void usage(char *name) {
1062:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 18107              		.loc 1 1062 24 view .LVU6396
 18108 5cb4 4883EC08 		sub	rsp, 8	#,
 18109              		.cfi_def_cfa_offset 16
 18110              	# sieve_extend.c:1062: void usage(char *name) {
1062:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 18111              		.loc 1 1062 24 view .LVU6397
 18112 5cb8 4889F9   		mov	rcx, rdi	# name, tmp107
 18113              	.LBB813:
 18114              	.LBB812:
 18115              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18116              		.loc 3 100 10 view .LVU6398
GAS LISTING /tmp/cctyCFAS.s 			page 482


 18117 5cbb 488B3D00 		mov	rdi, QWORD PTR stderr[rip]	#, stderr
 18117      000000
 18118              	.LVL1234:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18119              		.loc 3 100 10 view .LVU6399
 18120 5cc2 E8000000 		call	__fprintf_chk@PLT	#
 18120      00
 18121              	.LVL1235:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18122              		.loc 3 100 10 view .LVU6400
 18123              	.LBE812:
 18124              	.LBE813:
1064:sieve_extend.c ****     fprintf(stderr, "  --verbose <level>  Show more output to a certain level:\n");
 18125              		.loc 1 1064 5 is_stmt 1 view .LVU6401
 18126              	.LBB814:
 18127              	.LBI814:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18128              		.loc 3 98 1 view .LVU6402
 18129              	.LBB815:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18130              		.loc 3 100 3 view .LVU6403
 18131              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18132              		.loc 3 100 10 is_stmt 0 view .LVU6404
 18133 5cc7 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 18133      000000
 18134 5cce BA090000 		mov	edx, 9	#,
 18134      00
 18135 5cd3 BE010000 		mov	esi, 1	#,
 18135      00
 18136 5cd8 488D3D00 		lea	rdi, .LC11[rip]	#,
 18136      000000
 18137 5cdf E8000000 		call	fwrite@PLT	#
 18137      00
 18138              	.LVL1236:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18139              		.loc 3 100 10 view .LVU6405
 18140              	.LBE815:
 18141              	.LBE814:
1065:sieve_extend.c ****     fprintf(stderr, "                     1 - show phase progress\n");
 18142              		.loc 1 1065 5 is_stmt 1 view .LVU6406
 18143              	.LBB816:
 18144              	.LBI816:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18145              		.loc 3 98 1 view .LVU6407
 18146              	.LBB817:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18147              		.loc 3 100 3 view .LVU6408
 18148              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18149              		.loc 3 100 10 is_stmt 0 view .LVU6409
 18150 5ce4 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 18150      000000
 18151 5ceb BA3A0000 		mov	edx, 58	#,
 18151      00
 18152 5cf0 BE010000 		mov	esi, 1	#,
 18152      00
GAS LISTING /tmp/cctyCFAS.s 			page 483


 18153 5cf5 488D3D00 		lea	rdi, .LC12[rip]	#,
 18153      000000
 18154 5cfc E8000000 		call	fwrite@PLT	#
 18154      00
 18155              	.LVL1237:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18156              		.loc 3 100 10 view .LVU6410
 18157              	.LBE817:
 18158              	.LBE816:
1066:sieve_extend.c ****     fprintf(stderr, "                     2 - show general progress within the phase\n");
 18159              		.loc 1 1066 5 is_stmt 1 view .LVU6411
 18160              	.LBB818:
 18161              	.LBI818:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18162              		.loc 3 98 1 view .LVU6412
 18163              	.LBB819:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18164              		.loc 3 100 3 view .LVU6413
 18165              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18166              		.loc 3 100 10 is_stmt 0 view .LVU6414
 18167 5d01 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 18167      000000
 18168 5d08 BA2D0000 		mov	edx, 45	#,
 18168      00
 18169 5d0d BE010000 		mov	esi, 1	#,
 18169      00
 18170 5d12 488D3D00 		lea	rdi, .LC13[rip]	#,
 18170      000000
 18171 5d19 E8000000 		call	fwrite@PLT	#
 18171      00
 18172              	.LVL1238:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18173              		.loc 3 100 10 view .LVU6415
 18174              	.LBE819:
 18175              	.LBE818:
1067:sieve_extend.c ****     fprintf(stderr, "                     3 - show actual work\n");
 18176              		.loc 1 1067 5 is_stmt 1 view .LVU6416
 18177              	.LBB820:
 18178              	.LBI820:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18179              		.loc 3 98 1 view .LVU6417
 18180              	.LBB821:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18181              		.loc 3 100 3 view .LVU6418
 18182              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18183              		.loc 3 100 10 is_stmt 0 view .LVU6419
 18184 5d1e 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 18184      000000
 18185 5d25 BA400000 		mov	edx, 64	#,
 18185      00
 18186 5d2a BE010000 		mov	esi, 1	#,
 18186      00
 18187 5d2f 488D3D00 		lea	rdi, .LC14[rip]	#,
 18187      000000
 18188 5d36 E8000000 		call	fwrite@PLT	#
GAS LISTING /tmp/cctyCFAS.s 			page 484


 18188      00
 18189              	.LVL1239:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18190              		.loc 3 100 10 view .LVU6420
 18191              	.LBE821:
 18192              	.LBE820:
1068:sieve_extend.c ****     fprintf(stderr, "  --check            check the correctness of the algorithm\n");
 18193              		.loc 1 1068 5 is_stmt 1 view .LVU6421
 18194              	.LBB822:
 18195              	.LBI822:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18196              		.loc 3 98 1 view .LVU6422
 18197              	.LBB823:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18198              		.loc 3 100 3 view .LVU6423
 18199              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18200              		.loc 3 100 10 is_stmt 0 view .LVU6424
 18201 5d3b 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 18201      000000
 18202 5d42 BA2A0000 		mov	edx, 42	#,
 18202      00
 18203 5d47 BE010000 		mov	esi, 1	#,
 18203      00
 18204 5d4c 488D3D00 		lea	rdi, .LC15[rip]	#,
 18204      000000
 18205 5d53 E8000000 		call	fwrite@PLT	#
 18205      00
 18206              	.LVL1240:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18207              		.loc 3 100 10 view .LVU6425
 18208              	.LBE823:
 18209              	.LBE822:
1069:sieve_extend.c ****     fprintf(stderr, "  --show <maximum>   Show the primes found up to the maximum\n");
 18210              		.loc 1 1069 5 is_stmt 1 view .LVU6426
 18211              	.LBB824:
 18212              	.LBI824:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18213              		.loc 3 98 1 view .LVU6427
 18214              	.LBB825:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18215              		.loc 3 100 3 view .LVU6428
 18216              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18217              		.loc 3 100 10 is_stmt 0 view .LVU6429
 18218 5d58 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 18218      000000
 18219 5d5f BA3C0000 		mov	edx, 60	#,
 18219      00
 18220 5d64 BE010000 		mov	esi, 1	#,
 18220      00
 18221 5d69 488D3D00 		lea	rdi, .LC16[rip]	#,
 18221      000000
 18222 5d70 E8000000 		call	fwrite@PLT	#
 18222      00
 18223              	.LVL1241:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
GAS LISTING /tmp/cctyCFAS.s 			page 485


 18224              		.loc 3 100 10 view .LVU6430
 18225              	.LBE825:
 18226              	.LBE824:
1070:sieve_extend.c ****     fprintf(stderr, "  --tune  <level>    find the best settings for the current os and hardware\n"
 18227              		.loc 1 1070 5 is_stmt 1 view .LVU6431
 18228              	.LBB826:
 18229              	.LBI826:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18230              		.loc 3 98 1 view .LVU6432
 18231              	.LBB827:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18232              		.loc 3 100 3 view .LVU6433
 18233              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18234              		.loc 3 100 10 is_stmt 0 view .LVU6434
 18235 5d75 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 18235      000000
 18236 5d7c BA3D0000 		mov	edx, 61	#,
 18236      00
 18237 5d81 BE010000 		mov	esi, 1	#,
 18237      00
 18238 5d86 488D3D00 		lea	rdi, .LC17[rip]	#,
 18238      000000
 18239 5d8d E8000000 		call	fwrite@PLT	#
 18239      00
 18240              	.LVL1242:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18241              		.loc 3 100 10 view .LVU6435
 18242              	.LBE827:
 18243              	.LBE826:
1071:sieve_extend.c ****     fprintf(stderr, "                     1 - fast tuning\n");
 18244              		.loc 1 1071 5 is_stmt 1 view .LVU6436
 18245              	.LBB828:
 18246              	.LBI828:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18247              		.loc 3 98 1 view .LVU6437
 18248              	.LBB829:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18249              		.loc 3 100 3 view .LVU6438
 18250              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18251              		.loc 3 100 10 is_stmt 0 view .LVU6439
 18252 5d92 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 18252      000000
 18253 5d99 BA4C0000 		mov	edx, 76	#,
 18253      00
 18254 5d9e BE010000 		mov	esi, 1	#,
 18254      00
 18255 5da3 488D3D00 		lea	rdi, .LC18[rip]	#,
 18255      000000
 18256 5daa E8000000 		call	fwrite@PLT	#
 18256      00
 18257              	.LVL1243:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18258              		.loc 3 100 10 view .LVU6440
 18259              	.LBE829:
 18260              	.LBE828:
GAS LISTING /tmp/cctyCFAS.s 			page 486


1072:sieve_extend.c ****     fprintf(stderr, "                     2 - refined tuning\n");
 18261              		.loc 1 1072 5 is_stmt 1 view .LVU6441
 18262              	.LBB830:
 18263              	.LBI830:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18264              		.loc 3 98 1 view .LVU6442
 18265              	.LBB831:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18266              		.loc 3 100 3 view .LVU6443
 18267              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18268              		.loc 3 100 10 is_stmt 0 view .LVU6444
 18269 5daf 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 18269      000000
 18270 5db6 BA250000 		mov	edx, 37	#,
 18270      00
 18271 5dbb BE010000 		mov	esi, 1	#,
 18271      00
 18272 5dc0 488D3D00 		lea	rdi, .LC19[rip]	#,
 18272      000000
 18273 5dc7 E8000000 		call	fwrite@PLT	#
 18273      00
 18274              	.LVL1244:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18275              		.loc 3 100 10 view .LVU6445
 18276              	.LBE831:
 18277              	.LBE830:
1073:sieve_extend.c ****     fprintf(stderr, "                     3 - maximum tuning (takes long)\n");
 18278              		.loc 1 1073 5 is_stmt 1 view .LVU6446
 18279              	.LBB832:
 18280              	.LBI832:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18281              		.loc 3 98 1 view .LVU6447
 18282              	.LBB833:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18283              		.loc 3 100 3 view .LVU6448
 18284              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18285              		.loc 3 100 10 is_stmt 0 view .LVU6449
 18286 5dcc 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 18286      000000
 18287 5dd3 BA280000 		mov	edx, 40	#,
 18287      00
 18288 5dd8 BE010000 		mov	esi, 1	#,
 18288      00
 18289 5ddd 488D3D00 		lea	rdi, .LC20[rip]	#,
 18289      000000
 18290 5de4 E8000000 		call	fwrite@PLT	#
 18290      00
 18291              	.LVL1245:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18292              		.loc 3 100 10 view .LVU6450
 18293              	.LBE833:
 18294              	.LBE832:
1074:sieve_extend.c ****     exit(1);
 18295              		.loc 1 1074 5 is_stmt 1 view .LVU6451
 18296              	.LBB834:
GAS LISTING /tmp/cctyCFAS.s 			page 487


 18297              	.LBI834:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18298              		.loc 3 98 1 view .LVU6452
 18299              	.LBB835:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18300              		.loc 3 100 3 view .LVU6453
 18301              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18302              		.loc 3 100 10 is_stmt 0 view .LVU6454
 18303 5de9 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 18303      000000
 18304 5df0 488D3D00 		lea	rdi, .LC21[rip]	#,
 18304      000000
 18305 5df7 BA350000 		mov	edx, 53	#,
 18305      00
 18306 5dfc BE010000 		mov	esi, 1	#,
 18306      00
 18307 5e01 E8000000 		call	fwrite@PLT	#
 18307      00
 18308              	.LVL1246:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18309              		.loc 3 100 10 view .LVU6455
 18310              	.LBE835:
 18311              	.LBE834:
1075:sieve_extend.c **** }
 18312              		.loc 1 1075 5 is_stmt 1 view .LVU6456
 18313 5e06 BF010000 		mov	edi, 1	#,
 18313      00
 18314 5e0b E8000000 		call	exit@PLT	#
 18314      00
 18315              	.LVL1247:
 18316              		.cfi_endproc
 18317              	.LFE82:
 18319              		.section	.rodata.str1.1
 18320              	.LC23:
 18321 003b 56616C69 		.string	"Validating... "
 18321      64617469 
 18321      6E672E2E 
 18321      2E2000
 18322              	.LC24:
 18323 004a 2D2D6865 		.string	"--help"
 18323      6C7000
 18324              	.LC25:
 18325 0051 2D2D7665 		.string	"--verbose"
 18325      72626F73 
 18325      6500
 18326              	.LC26:
 18327 005b 4E6F2076 		.string	"No verbose level specified\n"
 18327      6572626F 
 18327      7365206C 
 18327      6576656C 
 18327      20737065 
 18328              	.LC27:
 18329 0077 256400   		.string	"%d"
 18330              		.section	.rodata.str1.8
 18331 03ae 0000     		.align 8
 18332              	.LC28:
GAS LISTING /tmp/cctyCFAS.s 			page 488


 18333 03b0 4572726F 		.string	"Error: Invalid measurement time: %s\n"
 18333      723A2049 
 18333      6E76616C 
 18333      6964206D 
 18333      65617375 
 18334              		.section	.rodata.str1.1
 18335              	.LC29:
 18336 007a 56657262 		.string	"Verbose level set to %d\n"
 18336      6F736520 
 18336      6C657665 
 18336      6C207365 
 18336      7420746F 
 18337              	.LC30:
 18338 0093 2D2D6368 		.string	"--check"
 18338      65636B00 
 18339              	.LC31:
 18340 009b 2D2D7475 		.string	"--tune"
 18340      6E6500
 18341              	.LC32:
 18342 00a2 4E6F2074 		.string	"No tune level specified\n"
 18342      756E6520 
 18342      6C657665 
 18342      6C207370 
 18342      65636966 
 18343              		.section	.rodata.str1.8
 18344 03d5 000000   		.align 8
 18345              	.LC33:
 18346 03d8 4572726F 		.string	"Error: Invalid tune level: %s\n"
 18346      723A2049 
 18346      6E76616C 
 18346      69642074 
 18346      756E6520 
 18347              		.section	.rodata.str1.1
 18348              	.LC34:
 18349 00bb 54756E65 		.string	"Tune level set to %d\n"
 18349      206C6576 
 18349      656C2073 
 18349      65742074 
 18349      6F202564 
 18350              	.LC35:
 18351 00d1 2D2D7368 		.string	"--show"
 18351      6F7700
 18352              	.LC36:
 18353 00d8 4E6F2073 		.string	"No show maximum specified\n"
 18353      686F7720 
 18353      6D617869 
 18353      6D756D20 
 18353      73706563 
 18354              	.LC37:
 18355 00f3 256A7500 		.string	"%ju"
 18356              		.section	.rodata.str1.8
 18357 03f7 00       		.align 8
 18358              	.LC38:
 18359 03f8 4572726F 		.string	"Error: Invalid show maximum: %s\n"
 18359      723A2049 
 18359      6E76616C 
 18359      69642073 
GAS LISTING /tmp/cctyCFAS.s 			page 489


 18359      686F7720 
 18360              		.section	.rodata.str1.1
 18361              	.LC39:
 18362 00f7 53686F77 		.string	"Show maximum set to %ju\n"
 18362      206D6178 
 18362      696D756D 
 18362      20736574 
 18362      20746F20 
 18363              	.LC40:
 18364 0110 496E7661 		.string	"Invalid size %s\n"
 18364      6C696420 
 18364      73697A65 
 18364      2025730A 
 18364      00
 18365              	.LC41:
 18366 0121 2E2E2E43 		.string	"...Checking size %ju ..."
 18366      6865636B 
 18366      696E6720 
 18366      73697A65 
 18366      20256A75 
 18367              	.LC42:
 18368 013a 2E626C6F 		.string	".blocksize %ju-"
 18368      636B7369 
 18368      7A652025 
 18368      6A752D00 
 18369              	.LC43:
 18370 014a 76616C69 		.string	"valid;"
 18370      643B00
 18371              	.LC44:
 18372 0151 2E2E2E56 		.string	"...Valid algorithm"
 18372      616C6964 
 18372      20616C67 
 18372      6F726974 
 18372      686D00
 18373              	.LC45:
 18374 0164 54756E69 		.string	"Tuning..."
 18374      6E672E2E 
 18374      2E00
 18375              		.section	.rodata.str1.8
 18376 0419 00000000 		.align 8
 18376      000000
 18377              	.LC46:
 18378 0420 2E283E29 		.string	".(>)blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %2ju; mediumstep %
 18378      626C6F63 
 18378      6B73697A 
 18378      655F6269 
 18378      74732025 
 18379 04a7 00       		.align 8
 18380              	.LC47:
 18381 04a8 2E2E2E62 		.string	"...blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %2ju; mediumstep %2
 18381      6C6F636B 
 18381      73697A65 
 18381      5F626974 
 18381      73202531 
 18382 052e 0000     		.align 8
 18383              	.LC48:
 18384 0530 256A7520 		.string	"%ju results. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju\n"
GAS LISTING /tmp/cctyCFAS.s 			page 490


 18384      72657375 
 18384      6C74732E 
 18384      20496E69 
 18384      74616C20 
 18385              		.section	.rodata.str1.1
 18386              	.LC49:
 18387 016e 42657374 		.string	"Best options"
 18387      206F7074 
 18387      696F6E73 
 18387      00
 18388              		.section	.rodata.str1.8
 18389 0582 00000000 		.align 8
 18389      0000
 18390              	.LC50:
 18391 0588 28256A75 		.string	"(%ju) blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %2ju; mediumstep
 18391      2920626C 
 18391      6F636B73 
 18391      697A655F 
 18391      62697473 
 18392 0611 00000000 		.align 8
 18392      000000
 18393              	.LC51:
 18394 0618 2E426573 		.string	".Best result: blocksize %4jukb; free_bits %ju; smallstep: %ju; mediumstep %ju; passes %3j
 18394      74207265 
 18394      73756C74 
 18394      3A20626C 
 18394      6F636B73 
 18395              		.align 8
 18396              	.LC52:
 18397 0690 42656E63 		.string	"Benchmarking... with blocksize %ju steps: %ju/%ju\n"
 18397      686D6172 
 18397      6B696E67 
 18397      2E2E2E20 
 18397      77697468 
 18398 06c3 00000000 		.align 8
 18398      00
 18399              	.LC54:
 18400 06c8 726F6769 		.string	"rogiervandam_extend;%ju;%f;1;algorithm=other,faithful=yes,bits=1\n"
 18400      65727661 
 18400      6E64616D 
 18400      5F657874 
 18400      656E643B 
 18401 070a 00000000 		.align 8
 18401      0000
 18402              	.LC55:
 18403 0710 50617373 		.string	"Passes - per 5 seconds: %f - per second %f\n"
 18403      6573202D 
 18403      20706572 
 18403      20352073 
 18403      65636F6E 
 18404              		.section	.rodata.str1.1
 18405              	.LC56:
 18406 017b 53686F77 		.string	"Show result set:"
 18406      20726573 
 18406      756C7420 
 18406      7365743A 
 18406      00
GAS LISTING /tmp/cctyCFAS.s 			page 491


 18407              		.section	.text.startup,"ax",@progbits
 18408              		.p2align 4
 18409              		.globl	main
 18411              	main:
 18412              	.LVL1248:
 18413              	.LFB86:
1119:sieve_extend.c **** 
1120:sieve_extend.c **** static tuning_result_type tune(int tune_level, counter_t maxints, int option_verboselevel) {
1121:sieve_extend.c ****     counter_t best_blocksize_bits = default_blocksize;
1122:sieve_extend.c **** 
1123:sieve_extend.c ****     double best_avg = 0;
1124:sieve_extend.c ****     best_blocksize_bits = 0;
1125:sieve_extend.c ****     counter_t best_smallstep_faster = 0;
1126:sieve_extend.c ****     counter_t best_mediumstep_faster = 0;
1127:sieve_extend.c ****     counter_t smallstep_faster_steps = 4;
1128:sieve_extend.c ****     counter_t mediumstep_faster_steps = 4;
1129:sieve_extend.c ****     counter_t freebits_steps = anticiped_cache_line_bytesize;
1130:sieve_extend.c ****     counter_t sample_max = default_sample_max;
1131:sieve_extend.c ****     double sample_duration = default_sample_duration;
1132:sieve_extend.c **** 
1133:sieve_extend.c ****     // determines the size of the resultset
1134:sieve_extend.c ****     switch (tune_level) {
1135:sieve_extend.c ****         case 1:
1136:sieve_extend.c ****             smallstep_faster_steps  = WORD_SIZE/4;
1137:sieve_extend.c ****             mediumstep_faster_steps = WORD_SIZE/4;
1138:sieve_extend.c ****             freebits_steps = anticiped_cache_line_bytesize*8*2;
1139:sieve_extend.c ****             sample_max = 4;
1140:sieve_extend.c ****             sample_duration = 0.1;
1141:sieve_extend.c ****             break;
1142:sieve_extend.c ****         case 2:
1143:sieve_extend.c ****             smallstep_faster_steps  = WORD_SIZE/8;
1144:sieve_extend.c ****             mediumstep_faster_steps = WORD_SIZE/8;
1145:sieve_extend.c ****             freebits_steps = anticiped_cache_line_bytesize*8;
1146:sieve_extend.c ****             sample_max = 4;
1147:sieve_extend.c ****             sample_duration = 0.2;
1148:sieve_extend.c ****             break;
1149:sieve_extend.c ****         case 3:
1150:sieve_extend.c ****             smallstep_faster_steps  = WORD_SIZE/16;
1151:sieve_extend.c ****             mediumstep_faster_steps = WORD_SIZE/16;
1152:sieve_extend.c ****             freebits_steps = anticiped_cache_line_bytesize/2;
1153:sieve_extend.c ****             sample_max = 4;
1154:sieve_extend.c ****             sample_duration = 0.4;
1155:sieve_extend.c ****             break;
1156:sieve_extend.c ****     }
1157:sieve_extend.c ****     
1158:sieve_extend.c ****     if (option_verboselevel >= 1) printf("Tuning..."); if (option_verboselevel >= 2) printf("\n");
1159:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
1160:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
1161:sieve_extend.c ****     counter_t tuning_results=0;
1162:sieve_extend.c ****     counter_t tuning_result_index=0;
1163:sieve_extend.c ****     
1164:sieve_extend.c ****     for (counter_t smallstep_faster = 0; smallstep_faster <= WORD_SIZE/2; smallstep_faster += small
1165:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
1166:sieve_extend.c ****             for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
1167:sieve_extend.c ****                 for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) && (fr
1168:sieve_extend.c ****                     counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
1169:sieve_extend.c **** 
GAS LISTING /tmp/cctyCFAS.s 			page 492


1170:sieve_extend.c ****                     // set variables
1171:sieve_extend.c ****                     tuning_results++;
1172:sieve_extend.c ****                     tuning_result[tuning_result_index].maxints = maxints;
1173:sieve_extend.c ****                     tuning_result[tuning_result_index].sample_duration = sample_duration;
1174:sieve_extend.c ****                     tuning_result[tuning_result_index].sample_max = sample_max;
1175:sieve_extend.c ****                     tuning_result[tuning_result_index].blocksize_kb = blocksize_kb;
1176:sieve_extend.c ****                     tuning_result[tuning_result_index].free_bits = free_bits;
1177:sieve_extend.c ****                     tuning_result[tuning_result_index].blocksize_bits = blocksize_bits;
1178:sieve_extend.c ****                     tuning_result[tuning_result_index].smallstep_faster = smallstep_faster;
1179:sieve_extend.c ****                     tuning_result[tuning_result_index].mediumstep_faster = mediumstep_faster;
1180:sieve_extend.c ****                     tune_benchmark(tuning_result, tuning_result_index);
1181:sieve_extend.c **** 
1182:sieve_extend.c ****                     if ( tuning_result[tuning_result_index].avg > best_avg) {
1183:sieve_extend.c ****                         best_avg = tuning_result[tuning_result_index].avg;
1184:sieve_extend.c ****                         best_blocksize_bits = blocksize_bits;
1185:sieve_extend.c ****                         best_smallstep_faster = smallstep_faster;
1186:sieve_extend.c ****                         best_mediumstep_faster = mediumstep_faster;
1187:sieve_extend.c ****                         if (option_verboselevel >=2) printf(".(>)blocksize_bits %10ju; blocksize %4
1188:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_t)tu
1189:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].smallstep_faster,(uintmax_t)t
1190:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].passes, (uintmax_t) tuning_re
1191:sieve_extend.c ****                         tuning_result[tuning_result_index].elapsed_time, tuning_result[tuning_resul
1192:sieve_extend.c ****                     }
1193:sieve_extend.c ****                     if (option_verboselevel >= 3) printf("...blocksize_bits %10ju; blocksize %4jukb
1194:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_t)tu
1195:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].smallstep_faster,(uintmax_t)t
1196:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].passes, (uintmax_t) tuning_re
1197:sieve_extend.c ****                         tuning_result[tuning_result_index].elapsed_time, tuning_result[tuning_resul
1198:sieve_extend.c ****                     tuning_result_index++;
1199:sieve_extend.c ****                 }
1200:sieve_extend.c ****             }
1201:sieve_extend.c ****         }
1202:sieve_extend.c ****     }
1203:sieve_extend.c ****     if (option_verboselevel >= 2) {
1204:sieve_extend.c ****         printf("%ju results. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju\n"
1205:sieve_extend.c ****         printf("Best options\n");
1206:sieve_extend.c ****     }
1207:sieve_extend.c ****     counter_t step=0;
1208:sieve_extend.c ****     while (tuning_results>4) {
1209:sieve_extend.c ****         qsort(tuning_result, (size_t)tuning_results, sizeof(tuning_result_type), compare_tuning_res
1210:sieve_extend.c ****         step++;
1211:sieve_extend.c ****         if (option_verboselevel >= 2) {
1212:sieve_extend.c ****             tuning_result_index = 0;
1213:sieve_extend.c ****             printf("(%ju) blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %2ju; 
1214:sieve_extend.c ****                             (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_
1215:sieve_extend.c ****                             (uintmax_t)tuning_result[tuning_result_index].smallstep_faster,(uintmax
1216:sieve_extend.c ****                             (uintmax_t)tuning_result[tuning_result_index].passes, (uintmax_t) tunin
1217:sieve_extend.c ****                             tuning_result[tuning_result_index].elapsed_time, tuning_result[tuning_r
1218:sieve_extend.c ****             if (option_verboselevel >= 3) {
1219:sieve_extend.c ****                 for (counter_t tuning_result_index=0; tuning_result_index<min(10,tuning_results); t
1220:sieve_extend.c ****                     printf("...blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %
1221:sieve_extend.c ****                             (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_
1222:sieve_extend.c ****                             (uintmax_t)tuning_result[tuning_result_index].smallstep_faster,(uintmax
1223:sieve_extend.c ****                             (uintmax_t)tuning_result[tuning_result_index].passes, (uintmax_t) tunin
1224:sieve_extend.c ****                             tuning_result[tuning_result_index].elapsed_time, tuning_result[tuning_r
1225:sieve_extend.c ****                 }
1226:sieve_extend.c ****             }
GAS LISTING /tmp/cctyCFAS.s 			page 493


1227:sieve_extend.c ****         }
1228:sieve_extend.c **** 
1229:sieve_extend.c ****         tuning_results = tuning_results / 2;
1230:sieve_extend.c **** 
1231:sieve_extend.c ****         for (counter_t i=0; i<tuning_results; i++) {
1232:sieve_extend.c ****             tune_benchmark(tuning_result, i);
1233:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
1234:sieve_extend.c ****         }
1235:sieve_extend.c ****         
1236:sieve_extend.c ****     }
1237:sieve_extend.c ****     tuning_result_type best_result = tuning_result[0];
1238:sieve_extend.c ****     if (option_verboselevel >= 1) {
1239:sieve_extend.c ****         tuning_result_index = 0;
1240:sieve_extend.c ****         printf(".Best result: blocksize %4jukb; free_bits %ju; smallstep: %ju; mediumstep %ju; pass
1241:sieve_extend.c ****                  (uintmax_t)tuning_result[tuning_result_index].blocksize_kb,(uintmax_t)tuning_resul
1242:sieve_extend.c ****                 (uintmax_t)tuning_result[tuning_result_index].smallstep_faster,(uintmax_t)tuning_re
1243:sieve_extend.c ****                 (uintmax_t)tuning_result[tuning_result_index].passes, (uintmax_t) tuning_result[tun
1244:sieve_extend.c ****                 tuning_result[tuning_result_index].elapsed_time, tuning_result[tuning_result_index]
1245:sieve_extend.c ****     }
1246:sieve_extend.c **** 
1247:sieve_extend.c ****     free(tuning_result);
1248:sieve_extend.c ****     return best_result;
1249:sieve_extend.c **** }
1250:sieve_extend.c **** 
1251:sieve_extend.c **** int main(int argc, char *argv[]) {
 18414              		.loc 1 1251 34 view -0
 18415              		.cfi_startproc
 18416              		.loc 1 1251 34 is_stmt 0 view .LVU6458
 18417 0000 F30F1EFA 		endbr64	
 18418 0004 4157     		push	r15	#
 18419              		.cfi_def_cfa_offset 16
 18420              		.cfi_offset 15, -16
 18421 0006 4156     		push	r14	#
 18422              		.cfi_def_cfa_offset 24
 18423              		.cfi_offset 14, -24
 18424 0008 4155     		push	r13	#
 18425              		.cfi_def_cfa_offset 32
 18426              		.cfi_offset 13, -32
 18427 000a 4154     		push	r12	#
 18428              		.cfi_def_cfa_offset 40
 18429              		.cfi_offset 12, -40
 18430 000c 55       		push	rbp	#
 18431              		.cfi_def_cfa_offset 48
 18432              		.cfi_offset 6, -48
 18433 000d 53       		push	rbx	#
 18434              		.cfi_def_cfa_offset 56
 18435              		.cfi_offset 3, -56
 18436 000e 4881ECB8 		sub	rsp, 184	#,
 18436      000000
 18437              		.cfi_def_cfa_offset 240
 18438              	# sieve_extend.c:1251: int main(int argc, char *argv[]) {
 18439              		.loc 1 1251 34 view .LVU6459
 18440 0015 64488B04 		mov	rax, QWORD PTR fs:40	# tmp525, MEM[(<address-space-1> long unsigned int *)40B]
 18440      25280000 
 18440      00
 18441 001e 48898424 		mov	QWORD PTR 168[rsp], rax	# D.7489, tmp525
 18441      A8000000 
GAS LISTING /tmp/cctyCFAS.s 			page 494


 18442 0026 31C0     		xor	eax, eax	# tmp525
1252:sieve_extend.c **** 
1253:sieve_extend.c ****     
1254:sieve_extend.c ****     counter_t option_maxFactor  = default_sieve_limit;
 18443              		.loc 1 1254 5 is_stmt 1 view .LVU6460
 18444              	# sieve_extend.c:1254:     counter_t option_maxFactor  = default_sieve_limit;
 18445              		.loc 1 1254 15 is_stmt 0 view .LVU6461
 18446 0028 48C74424 		mov	QWORD PTR 112[rsp], 1000000	# option_maxFactor,
 18446      7040420F 
 18446      00
1255:sieve_extend.c ****     counter_t option_showMaxFactor = default_showMaxFactor;
 18447              		.loc 1 1255 5 is_stmt 1 view .LVU6462
 18448              	# sieve_extend.c:1255:     counter_t option_showMaxFactor = default_showMaxFactor;
 18449              		.loc 1 1255 15 is_stmt 0 view .LVU6463
 18450 0031 48C74424 		mov	QWORD PTR 120[rsp], 0	# option_showMaxFactor,
 18450      78000000 
 18450      00
1256:sieve_extend.c ****     int option_verboselevel = default_verbose_level;
 18451              		.loc 1 1256 5 is_stmt 1 view .LVU6464
 18452              	# sieve_extend.c:1256:     int option_verboselevel = default_verbose_level;
 18453              		.loc 1 1256 9 is_stmt 0 view .LVU6465
 18454 003a C7442468 		mov	DWORD PTR 104[rsp], 1	# option_verboselevel,
 18454      01000000 
1257:sieve_extend.c ****     int option_check = default_check_level;
 18455              		.loc 1 1257 5 is_stmt 1 view .LVU6466
 18456              	.LVL1249:
1258:sieve_extend.c ****     int option_tunelevel = default_tune_level;
 18457              		.loc 1 1258 5 view .LVU6467
 18458              	# sieve_extend.c:1258:     int option_tunelevel = default_tune_level;
 18459              		.loc 1 1258 9 is_stmt 0 view .LVU6468
 18460 0042 C744246C 		mov	DWORD PTR 108[rsp], 0	# option_tunelevel,
 18460      00000000 
1259:sieve_extend.c **** 
1260:sieve_extend.c ****     for (int arg=1; arg < argc; arg++) {
 18461              		.loc 1 1260 5 is_stmt 1 view .LVU6469
 18462              	.LBB921:
 18463              		.loc 1 1260 10 view .LVU6470
 18464              	.LVL1250:
 18465              		.loc 1 1260 21 view .LVU6471
 18466              	# sieve_extend.c:1260:     for (int arg=1; arg < argc; arg++) {
 18467              		.loc 1 1260 5 is_stmt 0 view .LVU6472
 18468 004a 83FF01   		cmp	edi, 1	# argc,
 18469 004d 0F8EC804 		jle	.L1833	#,
 18469      0000
 18470 0053 89FD     		mov	ebp, edi	# argc, tmp468
 18471 0055 4989F4   		mov	r12, rsi	# argv, tmp469
 18472              	# sieve_extend.c:1260:     for (int arg=1; arg < argc; arg++) {
 18473              		.loc 1 1260 14 view .LVU6473
 18474 0058 BB010000 		mov	ebx, 1	# arg,
 18474      00
 18475 005d 4C8D2D00 		lea	r13, .LC24[rip]	# tmp407,
 18475      000000
 18476              	# sieve_extend.c:1262:         else if (strcmp(argv[arg], "--verbose")==0) {
1261:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1262:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 18477              		.loc 1 1262 18 view .LVU6474
 18478 0064 4C8D3500 		lea	r14, .LC25[rip]	# tmp423,
GAS LISTING /tmp/cctyCFAS.s 			page 495


 18478      000000
 18479 006b EB5B     		jmp	.L1817	#
 18480              	.LVL1251:
 18481 006d 0F1F00   		.p2align 4,,10
 18482              		.p2align 3
 18483              	.L1949:
1263:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\n"); usage(argv[0]); }
 18484              		.loc 1 1263 13 is_stmt 1 view .LVU6475
 18485              	# sieve_extend.c:1263:             if (++arg >= argc) { fprintf(stderr, "No verbose level specified
 18486              		.loc 1 1263 16 is_stmt 0 view .LVU6476
 18487 0070 FFC3     		inc	ebx	# arg
 18488              	.LVL1252:
 18489              		.loc 1 1263 16 view .LVU6477
 18490 0072 39DD     		cmp	ebp, ebx	# argc, arg
 18491 0074 0F8EC10C 		jle	.L1947	#,
 18491      0000
1264:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option_verboselevel > 4) {
 18492              		.loc 1 1264 13 is_stmt 1 view .LVU6478
 18493              	# sieve_extend.c:1264:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option
 18494              		.loc 1 1264 28 is_stmt 0 view .LVU6479
 18495 007a 4D8D7C04 		lea	r15, 8[r12+rax]	# _16,
 18495      08
 18496              	# sieve_extend.c:1264:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option
 18497              		.loc 1 1264 17 view .LVU6480
 18498 007f 498B3F   		mov	rdi, QWORD PTR [r15]	#, *_16
 18499 0082 31C0     		xor	eax, eax	#
 18500 0084 488D5424 		lea	rdx, 104[rsp]	# tmp285,
 18500      68
 18501 0089 488D3500 		lea	rsi, .LC27[rip]	#,
 18501      000000
 18502 0090 E8000000 		call	__isoc99_sscanf@PLT	#
 18502      00
 18503              	.LVL1253:
 18504              	# sieve_extend.c:1264:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option
 18505              		.loc 1 1264 16 view .LVU6481
 18506 0095 83F801   		cmp	eax, 1	# tmp470,
 18507 0098 0F859504 		jne	.L1822	#,
 18507      0000
 18508              	# sieve_extend.c:1264:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option
 18509              		.loc 1 1264 91 discriminator 1 view .LVU6482
 18510 009e 8B542468 		mov	edx, DWORD PTR 104[rsp]	# option_verboselevel.16_19, option_verboselevel
 18511              	# sieve_extend.c:1264:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option
 18512              		.loc 1 1264 68 discriminator 1 view .LVU6483
 18513 00a2 83FA04   		cmp	edx, 4	# option_verboselevel.16_19,
 18514 00a5 0F8F8804 		jg	.L1822	#,
 18514      0000
1265:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid measurement time: %s\n", argv[arg]); usage(argv[0])
1266:sieve_extend.c ****             }
1267:sieve_extend.c ****             printf("Verbose level set to %d\n",option_verboselevel);
 18515              		.loc 1 1267 13 is_stmt 1 view .LVU6484
 18516              	.LVL1254:
 18517              	.LBB922:
 18518              	.LBI922:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18519              		.loc 3 105 1 view .LVU6485
 18520              	.LBB923:
 18521              		.loc 3 107 3 view .LVU6486
GAS LISTING /tmp/cctyCFAS.s 			page 496


 18522              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18523              		.loc 3 107 10 is_stmt 0 view .LVU6487
 18524 00ab 488D3500 		lea	rsi, .LC29[rip]	#,
 18524      000000
 18525 00b2 BF010000 		mov	edi, 1	#,
 18525      00
 18526 00b7 31C0     		xor	eax, eax	#
 18527 00b9 E8000000 		call	__printf_chk@PLT	#
 18527      00
 18528              	.LVL1255:
 18529              	.L1824:
 18530              		.loc 3 107 10 view .LVU6488
 18531              	.LBE923:
 18532              	.LBE922:
1260:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 18533              		.loc 1 1260 33 is_stmt 1 discriminator 2 view .LVU6489
 18534              	# sieve_extend.c:1260:     for (int arg=1; arg < argc; arg++) {
1260:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 18535              		.loc 1 1260 36 is_stmt 0 discriminator 2 view .LVU6490
 18536 00be FFC3     		inc	ebx	# arg
 18537              	.LVL1256:
1260:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 18538              		.loc 1 1260 21 is_stmt 1 discriminator 2 view .LVU6491
 18539              	# sieve_extend.c:1260:     for (int arg=1; arg < argc; arg++) {
1260:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 18540              		.loc 1 1260 5 is_stmt 0 discriminator 2 view .LVU6492
 18541 00c0 39DD     		cmp	ebp, ebx	# argc, arg
 18542 00c2 0F8EE800 		jle	.L1948	#,
 18542      0000
 18543              	.LVL1257:
 18544              	.L1817:
1261:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 18545              		.loc 1 1261 9 is_stmt 1 view .LVU6493
 18546              	# sieve_extend.c:1261:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1261:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 18547              		.loc 1 1261 24 is_stmt 0 view .LVU6494
 18548 00c8 4863C3   		movsx	rax, ebx	# arg, arg
 18549 00cb 48C1E003 		sal	rax, 3	# _2,
 18550 00cf 4D8D3C04 		lea	r15, [r12+rax]	# _3,
 18551              	# sieve_extend.c:1261:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1261:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 18552              		.loc 1 1261 13 view .LVU6495
 18553 00d3 4D8B07   		mov	r8, QWORD PTR [r15]	# _4, *_3
 18554 00d6 41B90700 		mov	r9d, 7	# tmp274,
 18554      0000
 18555 00dc 4C89C6   		mov	rsi, r8	# _4, _4
 18556 00df 4C89EF   		mov	rdi, r13	# tmp273, tmp407
 18557 00e2 4C89C9   		mov	rcx, r9	# tmp434, tmp274
 18558 00e5 F3A6     		repz cmpsb
 18559 00e7 0F97C2   		seta	dl	#, tmp275
 18560 00ea 80DA00   		sbb	dl, 0	# _5
 18561              	# sieve_extend.c:1261:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1261:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 18562              		.loc 1 1261 12 view .LVU6496
 18563 00ed 84D2     		test	dl, dl	# _5
 18564 00ef 0F845B04 		je	.L1945	#,
 18564      0000
GAS LISTING /tmp/cctyCFAS.s 			page 497


1262:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\n"); usage(argv[0]); }
 18565              		.loc 1 1262 14 is_stmt 1 view .LVU6497
 18566              	# sieve_extend.c:1262:         else if (strcmp(argv[arg], "--verbose")==0) {
1262:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\n"); usage(argv[0]); }
 18567              		.loc 1 1262 18 is_stmt 0 view .LVU6498
 18568 00f5 B90A0000 		mov	ecx, 10	# tmp280,
 18568      00
 18569 00fa 4C89C6   		mov	rsi, r8	# _4, _4
 18570 00fd 4C89F7   		mov	rdi, r14	# tmp279, tmp423
 18571 0100 F3A6     		repz cmpsb
 18572 0102 410F97C2 		seta	r10b	#, tmp281
 18573 0106 4180DA00 		sbb	r10b, 0	# _11
 18574              	# sieve_extend.c:1262:         else if (strcmp(argv[arg], "--verbose")==0) {
1262:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\n"); usage(argv[0]); }
 18575              		.loc 1 1262 17 view .LVU6499
 18576 010a 4584D2   		test	r10b, r10b	# _11
 18577 010d 0F845DFF 		je	.L1949	#,
 18577      FFFF
1268:sieve_extend.c ****         } 
1269:sieve_extend.c ****         else if (strcmp(argv[arg], "--check")==0) { option_check=1; }
 18578              		.loc 1 1269 14 is_stmt 1 view .LVU6500
 18579              	# sieve_extend.c:1269:         else if (strcmp(argv[arg], "--check")==0) { option_check=1; }
 18580              		.loc 1 1269 18 is_stmt 0 view .LVU6501
 18581 0113 B9080000 		mov	ecx, 8	# tmp290,
 18581      00
 18582 0118 4C89C6   		mov	rsi, r8	# _4, _4
 18583 011b 488D3D00 		lea	rdi, .LC30[rip]	# tmp289,
 18583      000000
 18584 0122 F3A6     		repz cmpsb
 18585 0124 410F97C3 		seta	r11b	#, tmp291
 18586 0128 4180DB00 		sbb	r11b, 0	# _23
 18587              	# sieve_extend.c:1269:         else if (strcmp(argv[arg], "--check")==0) { option_check=1; }
 18588              		.loc 1 1269 17 view .LVU6502
 18589 012c 4584DB   		test	r11b, r11b	# _23
 18590 012f 748D     		je	.L1824	#,
1270:sieve_extend.c ****         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
 18591              		.loc 1 1270 14 is_stmt 1 view .LVU6503
 18592              	# sieve_extend.c:1270:         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
 18593              		.loc 1 1270 18 is_stmt 0 view .LVU6504
 18594 0131 4C89C6   		mov	rsi, r8	# _4, _4
 18595 0134 488D3D00 		lea	rdi, .LC31[rip]	# tmp295,
 18595      000000
 18596 013b 4C89C9   		mov	rcx, r9	# tmp440, tmp274
 18597 013e F3A6     		repz cmpsb
 18598 0140 0F97C2   		seta	dl	#, tmp297
 18599 0143 80DA00   		sbb	dl, 0	# _24
 18600              	# sieve_extend.c:1270:         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
 18601              		.loc 1 1270 17 view .LVU6505
 18602 0146 84D2     		test	dl, dl	# _24
 18603 0148 0F853201 		jne	.L1825	#,
 18603      0000
 18604              		.loc 1 1270 52 is_stmt 1 discriminator 1 view .LVU6506
 18605              	# sieve_extend.c:1271:             if (++arg >= argc) { fprintf(stderr, "No tune level specified\n"
1271:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No tune level specified\n"); usage(argv[0]); }
 18606              		.loc 1 1271 16 is_stmt 0 discriminator 1 view .LVU6507
 18607 014e FFC3     		inc	ebx	# arg
 18608              	.LVL1258:
GAS LISTING /tmp/cctyCFAS.s 			page 498


 18609              	# sieve_extend.c:1270:         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
1270:sieve_extend.c ****         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
 18610              		.loc 1 1270 68 discriminator 1 view .LVU6508
 18611 0150 C744246C 		mov	DWORD PTR 108[rsp], 0	# option_tunelevel,
 18611      00000000 
 18612              		.loc 1 1271 13 is_stmt 1 discriminator 1 view .LVU6509
 18613              	.LVL1259:
 18614              	# sieve_extend.c:1271:             if (++arg >= argc) { fprintf(stderr, "No tune level specified\n"
 18615              		.loc 1 1271 16 is_stmt 0 discriminator 1 view .LVU6510
 18616 0158 39DD     		cmp	ebp, ebx	# argc, arg
 18617 015a 0F8E1B0C 		jle	.L1950	#,
 18617      0000
1272:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tunelevel > 4) {
 18618              		.loc 1 1272 13 is_stmt 1 view .LVU6511
 18619              	# sieve_extend.c:1272:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tu
 18620              		.loc 1 1272 28 is_stmt 0 view .LVU6512
 18621 0160 4D8D7C04 		lea	r15, 8[r12+rax]	# _29,
 18621      08
 18622              	# sieve_extend.c:1272:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tu
 18623              		.loc 1 1272 17 view .LVU6513
 18624 0165 498B3F   		mov	rdi, QWORD PTR [r15]	#, *_29
 18625 0168 31C0     		xor	eax, eax	#
 18626 016a 488D5424 		lea	rdx, 108[rsp]	# tmp301,
 18626      6C
 18627 016f 488D3500 		lea	rsi, .LC27[rip]	#,
 18627      000000
 18628 0176 E8000000 		call	__isoc99_sscanf@PLT	#
 18628      00
 18629              	.LVL1260:
 18630              	# sieve_extend.c:1272:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tu
 18631              		.loc 1 1272 16 view .LVU6514
 18632 017b 83F801   		cmp	eax, 1	# tmp471,
 18633 017e 0F85D90B 		jne	.L1827	#,
 18633      0000
 18634              	# sieve_extend.c:1272:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tu
 18635              		.loc 1 1272 85 discriminator 1 view .LVU6515
 18636 0184 8B54246C 		mov	edx, DWORD PTR 108[rsp]	# option_tunelevel.20_32, option_tunelevel
 18637              	# sieve_extend.c:1272:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tu
 18638              		.loc 1 1272 65 discriminator 1 view .LVU6516
 18639 0188 83FA04   		cmp	edx, 4	# option_tunelevel.20_32,
 18640 018b 0F8FCC0B 		jg	.L1827	#,
 18640      0000
1273:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid tune level: %s\n", argv[arg]); usage(argv[0]);
1274:sieve_extend.c ****             }
1275:sieve_extend.c ****             printf("Tune level set to %d\n",option_tunelevel);
 18641              		.loc 1 1275 13 is_stmt 1 view .LVU6517
 18642              	.LVL1261:
 18643              	.LBB924:
 18644              	.LBI924:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18645              		.loc 3 105 1 view .LVU6518
 18646              	.LBB925:
 18647              		.loc 3 107 3 view .LVU6519
 18648              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18649              		.loc 3 107 10 is_stmt 0 view .LVU6520
 18650 0191 488D3500 		lea	rsi, .LC34[rip]	#,
 18650      000000
GAS LISTING /tmp/cctyCFAS.s 			page 499


 18651 0198 BF010000 		mov	edi, 1	#,
 18651      00
 18652 019d 31C0     		xor	eax, eax	#
 18653              	.LBE925:
 18654              	.LBE924:
 18655              	# sieve_extend.c:1260:     for (int arg=1; arg < argc; arg++) {
1260:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 18656              		.loc 1 1260 36 view .LVU6521
 18657 019f FFC3     		inc	ebx	# arg
 18658              	.LVL1262:
 18659              	.LBB927:
 18660              	.LBB926:
 18661              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18662              		.loc 3 107 10 view .LVU6522
 18663 01a1 E8000000 		call	__printf_chk@PLT	#
 18663      00
 18664              	.LVL1263:
 18665              		.loc 3 107 10 view .LVU6523
 18666              	.LBE926:
 18667              	.LBE927:
1260:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 18668              		.loc 1 1260 33 is_stmt 1 view .LVU6524
1260:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 18669              		.loc 1 1260 21 view .LVU6525
 18670              	# sieve_extend.c:1260:     for (int arg=1; arg < argc; arg++) {
1260:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 18671              		.loc 1 1260 5 is_stmt 0 view .LVU6526
 18672 01a6 39DD     		cmp	ebp, ebx	# argc, arg
 18673 01a8 0F8F1AFF 		jg	.L1817	#,
 18673      FFFF
 18674 01ae 6690     		.p2align 4,,10
 18675              		.p2align 3
 18676              	.L1948:
1260:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 18677              		.loc 1 1260 5 view .LVU6527
 18678              	.LBE921:
1276:sieve_extend.c ****         }
1277:sieve_extend.c ****         else if (strcmp(argv[arg], "--show")==0) { option_showMaxFactor=0;
1278:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
1279:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
1280:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
1281:sieve_extend.c ****             }
1282:sieve_extend.c ****             printf("Show maximum set to %ju\n",(uintmax_t)option_showMaxFactor);
1283:sieve_extend.c ****         }
1284:sieve_extend.c ****         else if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_maxFactor) != 1) {
1285:sieve_extend.c ****             fprintf(stderr, "Invalid size %s\n",argv[arg]); usage(argv[0]); 
1286:sieve_extend.c ****             printf("Maximum set to %ju\n",(uintmax_t)option_maxFactor);
1287:sieve_extend.c ****         }
1288:sieve_extend.c ****     }
1289:sieve_extend.c **** 
1290:sieve_extend.c ****     if (option_runonce) { // used for stats and debugging
 18679              		.loc 1 1290 5 is_stmt 1 view .LVU6528
1291:sieve_extend.c ****         struct sieve_state* sieve_instance = sieve(option_maxFactor, default_blocksize);
1292:sieve_extend.c ****         printf("\nResult set:\n");
1293:sieve_extend.c ****         show_primes(sieve_instance, option_showMaxFactor);
1294:sieve_extend.c ****         int valid = validatePrimeCount(sieve_instance,1);
1295:sieve_extend.c ****         if (!valid) printf("The sieve is NOT valid\n");
GAS LISTING /tmp/cctyCFAS.s 			page 500


1296:sieve_extend.c ****         else printf("The sieve is VALID\n");
1297:sieve_extend.c ****         delete_sieve(sieve_instance);
1298:sieve_extend.c ****         exit(0);
1299:sieve_extend.c ****     }
1300:sieve_extend.c **** 
1301:sieve_extend.c ****     struct timespec start_time,end_time;
 18680              		.loc 1 1301 5 view .LVU6529
1302:sieve_extend.c **** 
1303:sieve_extend.c ****     if (option_check) {
 18681              		.loc 1 1303 5 view .LVU6530
1304:sieve_extend.c ****         // Count the number of primes and validate the result
1305:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Validating... ");
 18682              		.loc 1 1305 9 view .LVU6531
 18683              	# sieve_extend.c:1305:         if (option_verboselevel >= 1) printf("Validating... ");
 18684              		.loc 1 1305 12 is_stmt 0 view .LVU6532
 18685 01b0 8B6C2468 		mov	ebp, DWORD PTR 104[rsp]	#, option_verboselevel
 18686              	.LVL1264:
 18687              		.loc 1 1305 12 view .LVU6533
 18688 01b4 85ED     		test	ebp, ebp	#
 18689 01b6 0F8F5F03 		jg	.L1833	#,
 18689      0000
 18690              	.LVL1265:
 18691              	.L1818:
1306:sieve_extend.c ****         if (option_verboselevel >= 2) printf("\n");
 18692              		.loc 1 1306 9 is_stmt 1 view .LVU6534
 18693              	# sieve_extend.c:1306:         if (option_verboselevel >= 2) printf("\n");
 18694              		.loc 1 1306 12 is_stmt 0 view .LVU6535
 18695 01bc 837C2468 		cmp	DWORD PTR 104[rsp], 1	# option_verboselevel,
 18695      01
 18696 01c1 7E0A     		jle	.L1834	#,
 18697              		.loc 1 1306 39 is_stmt 1 view .LVU6536
 18698              	.LVL1266:
 18699              	.LBB946:
 18700              	.LBI946:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18701              		.loc 3 105 1 view .LVU6537
 18702              	.LBB947:
 18703              		.loc 3 107 3 view .LVU6538
 18704              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18705              		.loc 3 107 10 is_stmt 0 view .LVU6539
 18706 01c3 BF0A0000 		mov	edi, 10	#,
 18706      00
 18707 01c8 E8000000 		call	putchar@PLT	#
 18707      00
 18708              	.LVL1267:
 18709              	.L1834:
 18710              		.loc 3 107 10 view .LVU6540
 18711              	.LBE947:
 18712              	.LBE946:
 18713              	.LBB948:
 18714              	# sieve_extend.c:1260:     for (int arg=1; arg < argc; arg++) {
1260:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 18715              		.loc 1 1260 14 view .LVU6541
 18716 01cd C7042407 		mov	DWORD PTR [rsp], 7	# %sfp,
 18716      000000
 18717 01d4 41BC6400 		mov	r12d, 100	# sieveSize_check,
 18717      0000
GAS LISTING /tmp/cctyCFAS.s 			page 501


 18718              	.LBE948:
 18719              	.LBB949:
 18720              	.LBB950:
 18721              	.LBB951:
 18722              	.LBB952:
 18723              	.LBB953:
 18724              	.LBB954:
 18725              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18726              		.loc 3 107 10 view .LVU6542
 18727 01da 4C8D2D00 		lea	r13, .LC42[rip]	# tmp422,
 18727      000000
 18728              	.L1841:
 18729              	.LVL1268:
 18730              		.loc 3 107 10 view .LVU6543
 18731              	.LBE954:
 18732              	.LBE953:
 18733              	.LBE952:
 18734              	.LBE951:
1307:sieve_extend.c **** 
1308:sieve_extend.c ****         // validate algorithm - run one time for all sizes
1309:sieve_extend.c ****         for (counter_t sieveSize_check = 100; sieveSize_check <= 100000000; sieveSize_check *=10) {
1310:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 18735              		.loc 1 1310 13 is_stmt 1 view .LVU6544
 18736              	# sieve_extend.c:1310:             if (option_verboselevel >= 2) printf("...Checking size %ju ...",
 18737              		.loc 1 1310 37 is_stmt 0 view .LVU6545
 18738 01e1 8B442468 		mov	eax, DWORD PTR 104[rsp]	# prephitmp_382, option_verboselevel
 18739              	# sieve_extend.c:1310:             if (option_verboselevel >= 2) printf("...Checking size %ju ...",
 18740              		.loc 1 1310 16 view .LVU6546
 18741 01e5 83F801   		cmp	eax, 1	# prephitmp_382,
 18742 01e8 7E1A     		jle	.L1835	#,
 18743              		.loc 1 1310 43 is_stmt 1 view .LVU6547
 18744              	.LVL1269:
 18745              	.LBB967:
 18746              	.LBI967:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18747              		.loc 3 105 1 view .LVU6548
 18748              	.LBB968:
 18749              		.loc 3 107 3 view .LVU6549
 18750              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18751              		.loc 3 107 10 is_stmt 0 view .LVU6550
 18752 01ea 4C89E2   		mov	rdx, r12	#, sieveSize_check
 18753 01ed 488D3500 		lea	rsi, .LC41[rip]	#,
 18753      000000
 18754 01f4 BF010000 		mov	edi, 1	#,
 18754      00
 18755 01f9 31C0     		xor	eax, eax	#
 18756 01fb E8000000 		call	__printf_chk@PLT	#
 18756      00
 18757              	.LVL1270:
 18758 0200 8B442468 		mov	eax, DWORD PTR 104[rsp]	# prephitmp_382, option_verboselevel
 18759              	.LVL1271:
 18760              	.L1835:
 18761              		.loc 3 107 10 view .LVU6551
 18762              	.LBE968:
 18763              	.LBE967:
 18764              	.LBE950:
 18765              	.LBE949:
GAS LISTING /tmp/cctyCFAS.s 			page 502


 18766              	.LBB977:
 18767              	# sieve_extend.c:1260:     for (int arg=1; arg < argc; arg++) {
1260:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 18768              		.loc 1 1260 14 view .LVU6552
 18769 0204 BB050000 		mov	ebx, 5	# ivtmp_213,
 18769      00
 18770 0209 41BE0004 		mov	r14d, 1024	# blocksize_bits,
 18770      0000
 18771 020f EB56     		jmp	.L1839	#
 18772              	.LVL1272:
 18773              		.p2align 4,,10
 18774 0211 0F1F8000 		.p2align 3
 18774      000000
 18775              	.L1836:
1260:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 18776              		.loc 1 1260 14 view .LVU6553
 18777              	.LBE977:
 18778              	.LBB978:
 18779              	.LBB974:
 18780              	.LBB969:
 18781              	.LBB963:
1311:sieve_extend.c ****             struct sieve_state *sieve_instance_check;
1312:sieve_extend.c ****             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; blocksize_bits *= 2) {
1313:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
1314:sieve_extend.c ****                 sieve_instance_check = sieve(sieveSize_check, blocksize_bits);
 18782              		.loc 1 1314 17 is_stmt 1 view .LVU6554
 18783              	# sieve_extend.c:1314:                 sieve_instance_check = sieve(sieveSize_check, blocksize_bits
 18784              		.loc 1 1314 40 is_stmt 0 view .LVU6555
 18785 0218 4C89F6   		mov	rsi, r14	#, blocksize_bits
 18786 021b 4C89E7   		mov	rdi, r12	#, sieveSize_check
 18787 021e E8000000 		call	sieve	#
 18787      00
 18788              	.LVL1273:
 18789              	# sieve_extend.c:1315:                 int valid = validatePrimeCount(sieve_instance_check,option_v
1315:sieve_extend.c ****                 int valid = validatePrimeCount(sieve_instance_check,option_verboselevel);
 18790              		.loc 1 1315 29 view .LVU6556
 18791 0223 8B742468 		mov	esi, DWORD PTR 104[rsp]	#, option_verboselevel
 18792              	# sieve_extend.c:1314:                 sieve_instance_check = sieve(sieveSize_check, blocksize_bits
1314:sieve_extend.c ****                 int valid = validatePrimeCount(sieve_instance_check,option_verboselevel);
 18793              		.loc 1 1314 40 view .LVU6557
 18794 0227 4889C5   		mov	rbp, rax	# sieve_instance_check, tmp474
 18795              	.LVL1274:
 18796              		.loc 1 1315 17 is_stmt 1 view .LVU6558
 18797              	# sieve_extend.c:1315:                 int valid = validatePrimeCount(sieve_instance_check,option_v
 18798              		.loc 1 1315 29 is_stmt 0 view .LVU6559
 18799 022a 4889C7   		mov	rdi, rax	#, sieve_instance_check
 18800 022d E8000000 		call	validatePrimeCount	#
 18800      00
 18801              	.LVL1275:
 18802              	.LBB956:
 18803              	.LBB957:
 18804              	# sieve_extend.c:97:     free(sieve->bitarray);
  97:sieve_extend.c ****     free(sieve);
 18805              		.loc 1 97 5 view .LVU6560
 18806 0232 488B7D00 		mov	rdi, QWORD PTR 0[rbp]	#, sieve_instance_check_126->bitarray
 18807              	.LBE957:
 18808              	.LBE956:
GAS LISTING /tmp/cctyCFAS.s 			page 503


 18809              	# sieve_extend.c:1315:                 int valid = validatePrimeCount(sieve_instance_check,option_v
 18810              		.loc 1 1315 29 view .LVU6561
 18811 0236 4189C7   		mov	r15d, eax	# valid, tmp475
 18812              	.LVL1276:
1316:sieve_extend.c ****                 delete_sieve(sieve_instance_check);
 18813              		.loc 1 1316 17 is_stmt 1 view .LVU6562
 18814              	.LBB959:
 18815              	.LBI956:
  96:sieve_extend.c ****     free(sieve->bitarray);
 18816              		.loc 1 96 13 view .LVU6563
 18817              	.LBB958:
  97:sieve_extend.c ****     free(sieve);
 18818              		.loc 1 97 5 view .LVU6564
 18819 0239 E8000000 		call	free@PLT	#
 18819      00
 18820              	.LVL1277:
  98:sieve_extend.c **** }
 18821              		.loc 1 98 5 view .LVU6565
 18822 023e 4889EF   		mov	rdi, rbp	#, sieve_instance_check
 18823 0241 E8000000 		call	free@PLT	#
 18823      00
 18824              	.LVL1278:
  98:sieve_extend.c **** }
 18825              		.loc 1 98 5 is_stmt 0 view .LVU6566
 18826              	.LBE958:
 18827              	.LBE959:
1317:sieve_extend.c ****                 if (!valid) return 0; else if (option_verboselevel >= 3) printf("valid;");
 18828              		.loc 1 1317 17 is_stmt 1 view .LVU6567
 18829              	# sieve_extend.c:1317:                 if (!valid) return 0; else if (option_verboselevel >= 3) pri
 18830              		.loc 1 1317 20 is_stmt 0 view .LVU6568
 18831 0246 4585FF   		test	r15d, r15d	# valid
 18832 0249 0F84A102 		je	.L1875	#,
 18832      0000
 18833              		.loc 1 1317 44 is_stmt 1 discriminator 2 view .LVU6569
 18834              	# sieve_extend.c:1317:                 if (!valid) return 0; else if (option_verboselevel >= 3) pri
 18835              		.loc 1 1317 68 is_stmt 0 discriminator 2 view .LVU6570
 18836 024f 8B442468 		mov	eax, DWORD PTR 104[rsp]	# prephitmp_382, option_verboselevel
 18837              	# sieve_extend.c:1317:                 if (!valid) return 0; else if (option_verboselevel >= 3) pri
 18838              		.loc 1 1317 47 discriminator 2 view .LVU6571
 18839 0253 83F802   		cmp	eax, 2	# prephitmp_382,
 18840 0256 0F8FD400 		jg	.L1951	#,
 18840      0000
 18841              	.LBE963:
1312:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 18842              		.loc 1 1312 75 is_stmt 1 discriminator 2 view .LVU6572
 18843              	# sieve_extend.c:1312:             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; bl
1312:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 18844              		.loc 1 1312 90 is_stmt 0 discriminator 2 view .LVU6573
 18845 025c 4D01F6   		add	r14, r14	# blocksize_bits
 18846              	.LVL1279:
1312:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 18847              		.loc 1 1312 49 is_stmt 1 discriminator 2 view .LVU6574
 18848              	# sieve_extend.c:1312:             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; bl
1312:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 18849              		.loc 1 1312 13 is_stmt 0 discriminator 2 view .LVU6575
 18850 025f FFCB     		dec	ebx	# ivtmp_213
 18851 0261 0F84EB00 		je	.L1952	#,
GAS LISTING /tmp/cctyCFAS.s 			page 504


 18851      0000
 18852              	.LVL1280:
 18853              	.L1839:
 18854              	.LBB964:
1313:sieve_extend.c ****                 sieve_instance_check = sieve(sieveSize_check, blocksize_bits);
 18855              		.loc 1 1313 17 is_stmt 1 view .LVU6576
 18856              	# sieve_extend.c:1313:                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uint
1313:sieve_extend.c ****                 sieve_instance_check = sieve(sieveSize_check, blocksize_bits);
 18857              		.loc 1 1313 20 is_stmt 0 view .LVU6577
 18858 0267 83F802   		cmp	eax, 2	# prephitmp_382,
 18859 026a 7EAC     		jle	.L1836	#,
1313:sieve_extend.c ****                 sieve_instance_check = sieve(sieveSize_check, blocksize_bits);
 18860              		.loc 1 1313 47 is_stmt 1 view .LVU6578
 18861              	.LVL1281:
 18862              	.LBB960:
 18863              	.LBI953:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18864              		.loc 3 105 1 view .LVU6579
 18865              	.LBB955:
 18866              		.loc 3 107 3 view .LVU6580
 18867              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18868              		.loc 3 107 10 is_stmt 0 view .LVU6581
 18869 026c 4C89F2   		mov	rdx, r14	#, blocksize_bits
 18870 026f 4C89EE   		mov	rsi, r13	#, tmp422
 18871 0272 BF010000 		mov	edi, 1	#,
 18871      00
 18872 0277 31C0     		xor	eax, eax	#
 18873 0279 E8000000 		call	__printf_chk@PLT	#
 18873      00
 18874              	.LVL1282:
 18875 027e EB98     		jmp	.L1836	#
 18876              	.LVL1283:
 18877              		.p2align 4,,10
 18878              		.p2align 3
 18879              	.L1825:
 18880              		.loc 3 107 10 view .LVU6582
 18881              	.LBE955:
 18882              	.LBE960:
 18883              	.LBE964:
 18884              	.LBE969:
 18885              	.LBE974:
 18886              	.LBE978:
 18887              	.LBB979:
1277:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 18888              		.loc 1 1277 14 is_stmt 1 view .LVU6583
 18889              	# sieve_extend.c:1277:         else if (strcmp(argv[arg], "--show")==0) { option_showMaxFactor=0;
1277:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 18890              		.loc 1 1277 18 is_stmt 0 view .LVU6584
 18891 0280 4C89C9   		mov	rcx, r9	# tmp274, tmp274
 18892 0283 4C89C6   		mov	rsi, r8	# _4, _4
 18893 0286 488D3D00 		lea	rdi, .LC35[rip]	# tmp305,
 18893      000000
 18894 028d F3A6     		repz cmpsb
 18895 028f 410F97C1 		seta	r9b	#, tmp307
 18896 0293 4180D900 		sbb	r9b, 0	# _36
 18897              	# sieve_extend.c:1277:         else if (strcmp(argv[arg], "--show")==0) { option_showMaxFactor=0;
1277:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
GAS LISTING /tmp/cctyCFAS.s 			page 505


 18898              		.loc 1 1277 17 view .LVU6585
 18899 0297 4584C9   		test	r9b, r9b	# _36
 18900 029a 7564     		jne	.L1829	#,
1277:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 18901              		.loc 1 1277 52 is_stmt 1 discriminator 1 view .LVU6586
 18902              	# sieve_extend.c:1278:             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\
1278:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 18903              		.loc 1 1278 16 is_stmt 0 discriminator 1 view .LVU6587
 18904 029c FFC3     		inc	ebx	# arg
 18905              	.LVL1284:
 18906              	# sieve_extend.c:1277:         else if (strcmp(argv[arg], "--show")==0) { option_showMaxFactor=0;
1277:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 18907              		.loc 1 1277 72 discriminator 1 view .LVU6588
 18908 029e 48C74424 		mov	QWORD PTR 120[rsp], 0	# option_showMaxFactor,
 18908      78000000 
 18908      00
1278:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 18909              		.loc 1 1278 13 is_stmt 1 discriminator 1 view .LVU6589
 18910              	.LVL1285:
 18911              	# sieve_extend.c:1278:             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\
1278:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 18912              		.loc 1 1278 16 is_stmt 0 discriminator 1 view .LVU6590
 18913 02a7 39DD     		cmp	ebp, ebx	# argc, arg
 18914 02a9 0F8EF70A 		jle	.L1953	#,
 18914      0000
1279:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 18915              		.loc 1 1279 13 is_stmt 1 view .LVU6591
 18916              	# sieve_extend.c:1279:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) 
1279:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 18917              		.loc 1 1279 28 is_stmt 0 view .LVU6592
 18918 02af 4D8D7C04 		lea	r15, 8[r12+rax]	# _41,
 18918      08
 18919              	# sieve_extend.c:1279:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) 
1279:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 18920              		.loc 1 1279 17 view .LVU6593
 18921 02b4 498B3F   		mov	rdi, QWORD PTR [r15]	#, *_41
 18922 02b7 31C0     		xor	eax, eax	#
 18923 02b9 488D5424 		lea	rdx, 120[rsp]	# tmp311,
 18923      78
 18924 02be 488D3500 		lea	rsi, .LC37[rip]	#,
 18924      000000
 18925 02c5 E8000000 		call	__isoc99_sscanf@PLT	#
 18925      00
 18926              	.LVL1286:
 18927              	# sieve_extend.c:1279:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) 
1279:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 18928              		.loc 1 1279 16 view .LVU6594
 18929 02ca 83F801   		cmp	eax, 1	# tmp472,
 18930 02cd 0F85990A 		jne	.L1831	#,
 18930      0000
 18931              	# sieve_extend.c:1279:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) 
1279:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 18932              		.loc 1 1279 106 discriminator 1 view .LVU6595
 18933 02d3 488B5424 		mov	rdx, QWORD PTR 120[rsp]	# option_showMaxFactor.24_44, option_showMaxFactor
 18933      78
 18934              	# sieve_extend.c:1279:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) 
1279:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
GAS LISTING /tmp/cctyCFAS.s 			page 506


 18935              		.loc 1 1279 82 discriminator 1 view .LVU6596
 18936 02d8 483B5424 		cmp	rdx, QWORD PTR 112[rsp]	# option_showMaxFactor.24_44, option_maxFactor
 18936      70
 18937 02dd 0F87890A 		ja	.L1831	#,
 18937      0000
1282:sieve_extend.c ****         }
 18938              		.loc 1 1282 13 is_stmt 1 view .LVU6597
 18939              	.LVL1287:
 18940              	.LBB928:
 18941              	.LBI928:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18942              		.loc 3 105 1 view .LVU6598
 18943              	.LBB929:
 18944              		.loc 3 107 3 view .LVU6599
 18945              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18946              		.loc 3 107 10 is_stmt 0 view .LVU6600
 18947 02e3 488D3500 		lea	rsi, .LC39[rip]	#,
 18947      000000
 18948 02ea BF010000 		mov	edi, 1	#,
 18948      00
 18949 02ef 31C0     		xor	eax, eax	#
 18950 02f1 E8000000 		call	__printf_chk@PLT	#
 18950      00
 18951              	.LVL1288:
 18952 02f6 E9C3FDFF 		jmp	.L1824	#
 18952      FF
 18953              	.LVL1289:
 18954 02fb 0F1F4400 		.p2align 4,,10
 18954      00
 18955              		.p2align 3
 18956              	.L1829:
 18957              		.loc 3 107 10 view .LVU6601
 18958              	.LBE929:
 18959              	.LBE928:
1284:sieve_extend.c ****             fprintf(stderr, "Invalid size %s\n",argv[arg]); usage(argv[0]); 
 18960              		.loc 1 1284 14 is_stmt 1 view .LVU6602
 18961              	# sieve_extend.c:1284:         else if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_maxFactor) != 
1284:sieve_extend.c ****             fprintf(stderr, "Invalid size %s\n",argv[arg]); usage(argv[0]); 
 18962              		.loc 1 1284 18 is_stmt 0 view .LVU6603
 18963 0300 31C0     		xor	eax, eax	#
 18964 0302 488D5424 		lea	rdx, 112[rsp]	# tmp313,
 18964      70
 18965 0307 488D3500 		lea	rsi, .LC37[rip]	#,
 18965      000000
 18966 030e 4C89C7   		mov	rdi, r8	#, _4
 18967 0311 E8000000 		call	__isoc99_sscanf@PLT	#
 18967      00
 18968              	.LVL1290:
 18969              	# sieve_extend.c:1284:         else if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_maxFactor) != 
1284:sieve_extend.c ****             fprintf(stderr, "Invalid size %s\n",argv[arg]); usage(argv[0]); 
 18970              		.loc 1 1284 17 view .LVU6604
 18971 0316 83F801   		cmp	eax, 1	# tmp473,
 18972 0319 0F849FFD 		je	.L1824	#,
 18972      FFFF
1285:sieve_extend.c ****             printf("Maximum set to %ju\n",(uintmax_t)option_maxFactor);
 18973              		.loc 1 1285 13 is_stmt 1 view .LVU6605
 18974              	.LVL1291:
GAS LISTING /tmp/cctyCFAS.s 			page 507


 18975              	.LBB930:
 18976              	.LBI930:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18977              		.loc 3 98 1 view .LVU6606
 18978              	.LBB931:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18979              		.loc 3 100 3 view .LVU6607
 18980              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18981              		.loc 3 100 10 is_stmt 0 view .LVU6608
 18982 031f 498B0F   		mov	rcx, QWORD PTR [r15]	#, *_3
 18983 0322 488D1500 		lea	rdx, .LC40[rip]	#,
 18983      000000
 18984 0329 E90F0200 		jmp	.L1944	#
 18984      00
 18985              	.LVL1292:
 18986 032e 6690     		.p2align 4,,10
 18987              		.p2align 3
 18988              	.L1951:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18989              		.loc 3 100 10 view .LVU6609
 18990              	.LBE931:
 18991              	.LBE930:
 18992              	.LBE979:
 18993              	.LBB980:
 18994              	.LBB975:
 18995              	.LBB970:
 18996              	.LBB965:
 18997              		.loc 1 1317 74 is_stmt 1 view .LVU6610
 18998              	.LBB961:
 18999              	.LBI961:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19000              		.loc 3 105 1 view .LVU6611
 19001              	.LBB962:
 19002              		.loc 3 107 3 view .LVU6612
 19003              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19004              		.loc 3 107 10 is_stmt 0 view .LVU6613
 19005 0330 488D3500 		lea	rsi, .LC43[rip]	#,
 19005      000000
 19006 0337 BF010000 		mov	edi, 1	#,
 19006      00
 19007 033c 31C0     		xor	eax, eax	#
 19008 033e E8000000 		call	__printf_chk@PLT	#
 19008      00
 19009              	.LVL1293:
 19010              	.LBE962:
 19011              	.LBE961:
 19012              	.LBE965:
 19013              	# sieve_extend.c:1312:             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; bl
1312:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 19014              		.loc 1 1312 90 view .LVU6614
 19015 0343 4D01F6   		add	r14, r14	# blocksize_bits
 19016              	.LVL1294:
1312:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 19017              		.loc 1 1312 90 view .LVU6615
 19018 0346 8B442468 		mov	eax, DWORD PTR 104[rsp]	# prephitmp_382, option_verboselevel
 19019              	.LVL1295:
GAS LISTING /tmp/cctyCFAS.s 			page 508


1312:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 19020              		.loc 1 1312 75 is_stmt 1 view .LVU6616
1312:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 19021              		.loc 1 1312 49 view .LVU6617
 19022              	# sieve_extend.c:1312:             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; bl
1312:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 19023              		.loc 1 1312 13 is_stmt 0 view .LVU6618
 19024 034a FFCB     		dec	ebx	# ivtmp_213
 19025 034c 0F8515FF 		jne	.L1839	#,
 19025      FFFF
 19026              	.L1952:
1312:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 19027              		.loc 1 1312 13 view .LVU6619
 19028              	.LBE970:
1318:sieve_extend.c ****             }
1319:sieve_extend.c ****             if (option_verboselevel >= 2) printf("\n");
 19029              		.loc 1 1319 13 is_stmt 1 view .LVU6620
 19030              	# sieve_extend.c:1319:             if (option_verboselevel >= 2) printf("\n");
 19031              		.loc 1 1319 16 is_stmt 0 view .LVU6621
 19032 0352 83F801   		cmp	eax, 1	# prephitmp_382,
 19033 0355 7E0A     		jle	.L1840	#,
 19034              		.loc 1 1319 43 is_stmt 1 view .LVU6622
 19035              	.LVL1296:
 19036              	.LBB971:
 19037              	.LBI971:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19038              		.loc 3 105 1 view .LVU6623
 19039              	.LBB972:
 19040              		.loc 3 107 3 view .LVU6624
 19041              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19042              		.loc 3 107 10 is_stmt 0 view .LVU6625
 19043 0357 BF0A0000 		mov	edi, 10	#,
 19043      00
 19044 035c E8000000 		call	putchar@PLT	#
 19044      00
 19045              	.LVL1297:
 19046              	.L1840:
 19047              		.loc 3 107 10 view .LVU6626
 19048              	.LBE972:
 19049              	.LBE971:
 19050              	.LBE975:
1309:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 19051              		.loc 1 1309 77 is_stmt 1 discriminator 2 view .LVU6627
 19052              	# sieve_extend.c:1309:         for (counter_t sieveSize_check = 100; sieveSize_check <= 100000000; 
1309:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 19053              		.loc 1 1309 93 is_stmt 0 discriminator 2 view .LVU6628
 19054 0361 4F8D24A4 		lea	r12, [r12+r12*4]	# tmp319,
 19055              	.LVL1298:
1309:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 19056              		.loc 1 1309 93 discriminator 2 view .LVU6629
 19057 0365 4D01E4   		add	r12, r12	# sieveSize_check
 19058              	.LVL1299:
1309:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 19059              		.loc 1 1309 47 is_stmt 1 discriminator 2 view .LVU6630
 19060              	# sieve_extend.c:1309:         for (counter_t sieveSize_check = 100; sieveSize_check <= 100000000; 
1309:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 19061              		.loc 1 1309 9 is_stmt 0 discriminator 2 view .LVU6631
GAS LISTING /tmp/cctyCFAS.s 			page 509


 19062 0368 FF0C24   		dec	DWORD PTR [rsp]	# %sfp
 19063 036b 0F8570FE 		jne	.L1841	#,
 19063      FFFF
 19064              	.LBE980:
1320:sieve_extend.c ****         }
1321:sieve_extend.c ****         if (option_verboselevel >= 1) printf("...Valid algorithm\n");
 19065              		.loc 1 1321 9 is_stmt 1 view .LVU6632
 19066              	# sieve_extend.c:1321:         if (option_verboselevel >= 1) printf("...Valid algorithm\n");
 19067              		.loc 1 1321 12 is_stmt 0 view .LVU6633
 19068 0371 837C2468 		cmp	DWORD PTR 104[rsp], 0	# option_verboselevel,
 19068      00
 19069 0376 0F8FF807 		jg	.L1954	#,
 19069      0000
1322:sieve_extend.c ****     }
1323:sieve_extend.c ****     
1324:sieve_extend.c ****     counter_t best_blocksize_bits = default_blocksize;
 19070              		.loc 1 1324 5 is_stmt 1 view .LVU6634
 19071              	.LVL1300:
1325:sieve_extend.c ****     if (option_tunelevel) {
 19072              		.loc 1 1325 5 view .LVU6635
 19073              	# sieve_extend.c:1325:     if (option_tunelevel) {
 19074              		.loc 1 1325 9 is_stmt 0 view .LVU6636
 19075 037c 448B4424 		mov	r8d, DWORD PTR 108[rsp]	# option_tunelevel.40_342, option_tunelevel
 19075      6C
 19076              	# sieve_extend.c:1324:     counter_t best_blocksize_bits = default_blocksize;
1324:sieve_extend.c ****     if (option_tunelevel) {
 19077              		.loc 1 1324 15 view .LVU6637
 19078 0381 41BF00FC 		mov	r15d, 261120	# best_result$blocksize_bits,
 19078      0300
 19079              	.LVL1301:
 19080              	# sieve_extend.c:1325:     if (option_tunelevel) {
 19081              		.loc 1 1325 8 view .LVU6638
 19082 0387 4585C0   		test	r8d, r8d	# option_tunelevel.40_342
 19083 038a 0F856102 		jne	.L1955	#,
 19083      0000
 19084              	.LVL1302:
 19085              	.L1868:
 19086              	.LBB981:
1326:sieve_extend.c ****         tuning_result_type tuning_result = tune(option_tunelevel, option_maxFactor, option_verbosel
1327:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
1328:sieve_extend.c ****         global_MEDIUMSTEP_FASTER = tuning_result.mediumstep_faster;
1329:sieve_extend.c ****         best_blocksize_bits = tuning_result.blocksize_bits;
1330:sieve_extend.c ****     }
1331:sieve_extend.c **** 
1332:sieve_extend.c ****     double max_time = default_sieve_duration;
1333:sieve_extend.c ****     if (best_blocksize_bits > 0) {
1334:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju\n",
1335:sieve_extend.c ****         counter_t passes = 0;
 19087              		.loc 1 1335 9 is_stmt 1 view .LVU6639
1336:sieve_extend.c ****         counter_t blocksize_bits = best_blocksize_bits;
 19088              		.loc 1 1336 9 view .LVU6640
1337:sieve_extend.c ****         double elapsed_time = 0;
 19089              		.loc 1 1337 9 view .LVU6641
1338:sieve_extend.c ****         struct sieve_state *sieve_instance;
 19090              		.loc 1 1338 9 view .LVU6642
1339:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&start_time);
 19091              		.loc 1 1339 9 view .LVU6643
GAS LISTING /tmp/cctyCFAS.s 			page 510


 19092 0390 488DB424 		lea	rsi, 128[rsp]	# tmp382,
 19092      80000000 
 19093 0398 BF010000 		mov	edi, 1	#,
 19093      00
 19094 039d E8000000 		call	clock_gettime@PLT	#
 19094      00
 19095              	.LVL1303:
1340:sieve_extend.c ****         while (elapsed_time <= max_time) {
 19096              		.loc 1 1340 9 view .LVU6644
 19097              		.loc 1 1340 15 view .LVU6645
 19098              	# sieve_extend.c:1335:         counter_t passes = 0;
1335:sieve_extend.c ****         counter_t blocksize_bits = best_blocksize_bits;
 19099              		.loc 1 1335 19 is_stmt 0 view .LVU6646
 19100 03a2 4531F6   		xor	r14d, r14d	# passes
 19101 03a5 488D9C24 		lea	rbx, 144[rsp]	# tmp409,
 19101      90000000 
 19102              	.LVL1304:
 19103              	.L1869:
1341:sieve_extend.c ****             sieve_instance = sieve(option_maxFactor, blocksize_bits);//blocksize_bits);
 19104              		.loc 1 1341 13 is_stmt 1 view .LVU6647
 19105              	# sieve_extend.c:1341:             sieve_instance = sieve(option_maxFactor, blocksize_bits);//block
 19106              		.loc 1 1341 30 is_stmt 0 view .LVU6648
 19107 03ad 488B7C24 		mov	rdi, QWORD PTR 112[rsp]	#, option_maxFactor
 19107      70
 19108 03b2 4C89FE   		mov	rsi, r15	#, best_result$blocksize_bits
 19109 03b5 E8000000 		call	sieve	#
 19109      00
 19110              	.LVL1305:
 19111              	.LBB982:
 19112              	.LBB983:
 19113              	# sieve_extend.c:97:     free(sieve->bitarray);
  97:sieve_extend.c ****     free(sieve);
 19114              		.loc 1 97 5 view .LVU6649
 19115 03ba 488B38   		mov	rdi, QWORD PTR [rax]	#, sieve_instance_143->bitarray
 19116              	.LBE983:
 19117              	.LBE982:
 19118              	# sieve_extend.c:1341:             sieve_instance = sieve(option_maxFactor, blocksize_bits);//block
 19119              		.loc 1 1341 30 view .LVU6650
 19120 03bd 4989C4   		mov	r12, rax	# sieve_instance, tmp477
 19121              	.LVL1306:
1342:sieve_extend.c ****             delete_sieve(sieve_instance);
 19122              		.loc 1 1342 13 is_stmt 1 view .LVU6651
 19123              	.LBB987:
 19124              	.LBI982:
  96:sieve_extend.c ****     free(sieve->bitarray);
 19125              		.loc 1 96 13 view .LVU6652
 19126              	.LBB984:
  97:sieve_extend.c ****     free(sieve);
 19127              		.loc 1 97 5 view .LVU6653
 19128 03c0 E8000000 		call	free@PLT	#
 19128      00
 19129              	.LVL1307:
  98:sieve_extend.c **** }
 19130              		.loc 1 98 5 view .LVU6654
 19131 03c5 4C89E7   		mov	rdi, r12	#, sieve_instance
 19132 03c8 E8000000 		call	free@PLT	#
 19132      00
GAS LISTING /tmp/cctyCFAS.s 			page 511


 19133              	.LVL1308:
  98:sieve_extend.c **** }
 19134              		.loc 1 98 5 is_stmt 0 view .LVU6655
 19135              	.LBE984:
 19136              	.LBE987:
1343:sieve_extend.c ****             passes++;
 19137              		.loc 1 1343 13 is_stmt 1 view .LVU6656
 19138              	# sieve_extend.c:1344:             clock_gettime(CLOCK_MONOTONIC,&end_time);
1344:sieve_extend.c ****             clock_gettime(CLOCK_MONOTONIC,&end_time);
 19139              		.loc 1 1344 13 is_stmt 0 view .LVU6657
 19140 03cd 4889DE   		mov	rsi, rbx	#, tmp409
 19141 03d0 BF010000 		mov	edi, 1	#,
 19141      00
 19142 03d5 E8000000 		call	clock_gettime@PLT	#
 19142      00
 19143              	.LVL1309:
 19144              	# sieve_extend.c:1345:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
1345:sieve_extend.c ****             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time
 19145              		.loc 1 1345 62 view .LVU6658
 19146 03da C5E857D2 		vxorps	xmm2, xmm2, xmm2	# tmp480
 19147 03de C4E1EB2A 		vcvtsi2sd	xmm1, xmm2, QWORD PTR 152[rsp]	# tmp481, tmp480, end_time.tv_nsec
 19147      8C249800 
 19147      0000
 19148              	# sieve_extend.c:1345:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 19149              		.loc 1 1345 68 view .LVU6659
 19150 03e8 C4E1EB2A 		vcvtsi2sd	xmm5, xmm2, QWORD PTR 128[rsp]	# tmp482, tmp480, start_time.tv_sec
 19150      AC248000 
 19150      0000
 19151              	# sieve_extend.c:1345:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 19152              		.loc 1 1345 108 view .LVU6660
 19153 03f2 C4E1EB2A 		vcvtsi2sd	xmm3, xmm2, QWORD PTR 136[rsp]	# tmp483, tmp480, start_time.tv_nsec
 19153      9C248800 
 19153      0000
 19154              	# sieve_extend.c:1345:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 19155              		.loc 1 1345 44 view .LVU6661
 19156 03fc C461EB2A 		vcvtsi2sd	xmm9, xmm2, QWORD PTR 144[rsp]	# tmp484, tmp480, end_time.tv_sec
 19156      8C249000 
 19156      0000
 19157              	# sieve_extend.c:1340:         while (elapsed_time <= max_time) {
1340:sieve_extend.c ****             sieve_instance = sieve(option_maxFactor, blocksize_bits);//blocksize_bits);
 19158              		.loc 1 1340 15 view .LVU6662
 19159 0406 C57B1015 		vmovsd	xmm10, QWORD PTR .LC53[rip]	# tmp573,
 19159      00000000 
 19160 040e C4E2F1BB 		vfmsub231sd	xmm5, xmm1, QWORD PTR .LC4[rip]	# _285, tmp385,
 19160      2D000000 
 19160      00
 19161              	# sieve_extend.c:1343:             passes++;
1343:sieve_extend.c ****             clock_gettime(CLOCK_MONOTONIC,&end_time);
 19162              		.loc 1 1343 19 view .LVU6663
 19163 0417 49FFC6   		inc	r14	# passes
 19164              	.LVL1310:
1344:sieve_extend.c ****             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time
 19165              		.loc 1 1344 13 is_stmt 1 view .LVU6664
 19166              		.loc 1 1345 13 view .LVU6665
 19167 041a C462E1BD 		vfnmadd231sd	xmm9, xmm3, QWORD PTR .LC4[rip]	# _286, tmp388,
 19167      0D000000 
 19167      00
GAS LISTING /tmp/cctyCFAS.s 			page 512


 19168              	# sieve_extend.c:1345:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 19169              		.loc 1 1345 26 is_stmt 0 view .LVU6666
 19170 0423 C4C15358 		vaddsd	xmm0, xmm5, xmm9	# elapsed_time, _285, _286
 19170      C1
 19171              	.LVL1311:
1340:sieve_extend.c ****             sieve_instance = sieve(option_maxFactor, blocksize_bits);//blocksize_bits);
 19172              		.loc 1 1340 15 is_stmt 1 view .LVU6667
 19173 0428 C5792FD0 		vcomisd	xmm10, xmm0	# tmp573, elapsed_time
 19174 042c 0F828600 		jb	.L1941	#,
 19174      0000
 19175              	.LVL1312:
1341:sieve_extend.c ****             delete_sieve(sieve_instance);
 19176              		.loc 1 1341 13 view .LVU6668
 19177              	# sieve_extend.c:1341:             sieve_instance = sieve(option_maxFactor, blocksize_bits);//block
1341:sieve_extend.c ****             delete_sieve(sieve_instance);
 19178              		.loc 1 1341 30 is_stmt 0 view .LVU6669
 19179 0432 488B7C24 		mov	rdi, QWORD PTR 112[rsp]	#, option_maxFactor
 19179      70
 19180 0437 4C89FE   		mov	rsi, r15	#, best_result$blocksize_bits
 19181 043a E8000000 		call	sieve	#
 19181      00
 19182              	.LVL1313:
 19183              	.LBB988:
 19184              	.LBB985:
 19185              	# sieve_extend.c:97:     free(sieve->bitarray);
  97:sieve_extend.c ****     free(sieve);
 19186              		.loc 1 97 5 view .LVU6670
 19187 043f 488B38   		mov	rdi, QWORD PTR [rax]	#, sieve_instance_143->bitarray
 19188              	.LBE985:
 19189              	.LBE988:
 19190              	# sieve_extend.c:1341:             sieve_instance = sieve(option_maxFactor, blocksize_bits);//block
1341:sieve_extend.c ****             delete_sieve(sieve_instance);
 19191              		.loc 1 1341 30 view .LVU6671
 19192 0442 4889C5   		mov	rbp, rax	# sieve_instance, tmp479
1342:sieve_extend.c ****             passes++;
 19193              		.loc 1 1342 13 is_stmt 1 view .LVU6672
 19194              	.LVL1314:
 19195              	.LBB989:
  96:sieve_extend.c ****     free(sieve->bitarray);
 19196              		.loc 1 96 13 view .LVU6673
 19197              	.LBB986:
  97:sieve_extend.c ****     free(sieve);
 19198              		.loc 1 97 5 view .LVU6674
 19199 0445 E8000000 		call	free@PLT	#
 19199      00
 19200              	.LVL1315:
  98:sieve_extend.c **** }
 19201              		.loc 1 98 5 view .LVU6675
 19202 044a 4889EF   		mov	rdi, rbp	#, sieve_instance
 19203 044d E8000000 		call	free@PLT	#
 19203      00
 19204              	.LVL1316:
  98:sieve_extend.c **** }
 19205              		.loc 1 98 5 is_stmt 0 view .LVU6676
 19206              	.LBE986:
 19207              	.LBE989:
1343:sieve_extend.c ****             clock_gettime(CLOCK_MONOTONIC,&end_time);
GAS LISTING /tmp/cctyCFAS.s 			page 513


 19208              		.loc 1 1343 13 is_stmt 1 view .LVU6677
 19209              	# sieve_extend.c:1344:             clock_gettime(CLOCK_MONOTONIC,&end_time);
1344:sieve_extend.c ****             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time
 19210              		.loc 1 1344 13 is_stmt 0 view .LVU6678
 19211 0452 4889DE   		mov	rsi, rbx	#, tmp409
 19212 0455 BF010000 		mov	edi, 1	#,
 19212      00
 19213 045a E8000000 		call	clock_gettime@PLT	#
 19213      00
 19214              	.LVL1317:
 19215              	# sieve_extend.c:1345:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 19216              		.loc 1 1345 62 view .LVU6679
 19217 045f C4412057 		vxorps	xmm11, xmm11, xmm11	# tmp480
 19217      DB
 19218 0464 C4E1A32A 		vcvtsi2sd	xmm1, xmm11, QWORD PTR 152[rsp]	# tmp489, tmp480, end_time.tv_nsec
 19218      8C249800 
 19218      0000
 19219              	# sieve_extend.c:1345:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 19220              		.loc 1 1345 68 view .LVU6680
 19221 046e C461A32A 		vcvtsi2sd	xmm13, xmm11, QWORD PTR 128[rsp]	# tmp490, tmp480, start_time.tv_sec
 19221      AC248000 
 19221      0000
 19222              	# sieve_extend.c:1345:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 19223              		.loc 1 1345 108 view .LVU6681
 19224 0478 C4E1A32A 		vcvtsi2sd	xmm3, xmm11, QWORD PTR 136[rsp]	# tmp491, tmp480, start_time.tv_nsec
 19224      9C248800 
 19224      0000
 19225              	# sieve_extend.c:1345:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 19226              		.loc 1 1345 44 view .LVU6682
 19227 0482 C461A32A 		vcvtsi2sd	xmm15, xmm11, QWORD PTR 144[rsp]	# tmp492, tmp480, end_time.tv_sec
 19227      BC249000 
 19227      0000
 19228              	# sieve_extend.c:1340:         while (elapsed_time <= max_time) {
1340:sieve_extend.c ****             sieve_instance = sieve(option_maxFactor, blocksize_bits);//blocksize_bits);
 19229              		.loc 1 1340 15 view .LVU6683
 19230 048c C5FB1035 		vmovsd	xmm6, QWORD PTR .LC53[rip]	# tmp580,
 19230      00000000 
 19231 0494 C462F1BB 		vfmsub231sd	xmm13, xmm1, QWORD PTR .LC4[rip]	# _285, tmp462,
 19231      2D000000 
 19231      00
 19232              	# sieve_extend.c:1343:             passes++;
1343:sieve_extend.c ****             clock_gettime(CLOCK_MONOTONIC,&end_time);
 19233              		.loc 1 1343 19 view .LVU6684
 19234 049d 49FFC6   		inc	r14	# passes
 19235              	.LVL1318:
1344:sieve_extend.c ****             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time
 19236              		.loc 1 1344 13 is_stmt 1 view .LVU6685
 19237              		.loc 1 1345 13 view .LVU6686
 19238 04a0 C462E1BD 		vfnmadd231sd	xmm15, xmm3, QWORD PTR .LC4[rip]	# _286, tmp465,
 19238      3D000000 
 19238      00
 19239              	# sieve_extend.c:1345:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 19240              		.loc 1 1345 26 is_stmt 0 view .LVU6687
 19241 04a9 C4C11358 		vaddsd	xmm0, xmm13, xmm15	# elapsed_time, _285, _286
 19241      C7
 19242              	.LVL1319:
1340:sieve_extend.c ****             sieve_instance = sieve(option_maxFactor, blocksize_bits);//blocksize_bits);
GAS LISTING /tmp/cctyCFAS.s 			page 514


 19243              		.loc 1 1340 15 is_stmt 1 view .LVU6688
 19244 04ae C5F92FF0 		vcomisd	xmm6, xmm0	# tmp580, elapsed_time
 19245 04b2 0F83F5FE 		jnb	.L1869	#,
 19245      FFFF
 19246              	.L1941:
1346:sieve_extend.c ****         }
1347:sieve_extend.c ****         printf("rogiervandam_extend;%ju;%f;1;algorithm=other,faithful=yes,bits=1\n", (uintmax_t)pas
 19247              		.loc 1 1347 9 view .LVU6689
 19248              	.LVL1320:
 19249              	.LBB990:
 19250              	.LBI990:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19251              		.loc 3 105 1 view .LVU6690
 19252              	.LBB991:
 19253              		.loc 3 107 3 view .LVU6691
 19254              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19255              		.loc 3 107 10 is_stmt 0 view .LVU6692
 19256 04b8 4C89F2   		mov	rdx, r14	#, passes
 19257 04bb 488D3500 		lea	rsi, .LC54[rip]	#,
 19257      000000
 19258 04c2 BF010000 		mov	edi, 1	#,
 19258      00
 19259 04c7 B8010000 		mov	eax, 1	#,
 19259      00
 19260 04cc C5FB1104 		vmovsd	QWORD PTR [rsp], xmm0	# %sfp, elapsed_time
 19260      24
 19261 04d1 E8000000 		call	__printf_chk@PLT	#
 19261      00
 19262              	.LVL1321:
 19263              		.loc 3 107 10 view .LVU6693
 19264              	.LBE991:
 19265              	.LBE990:
1348:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - per second %f\n", 5*pass
 19266              		.loc 1 1348 9 is_stmt 1 view .LVU6694
 19267              	# sieve_extend.c:1348:         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - p
 19268              		.loc 1 1348 12 is_stmt 0 view .LVU6695
 19269 04d6 837C2468 		cmp	DWORD PTR 104[rsp], 0	# option_verboselevel,
 19269      00
 19270 04db 0F8FC400 		jg	.L1956	#,
 19270      0000
 19271              	.LVL1322:
 19272              	.L1867:
 19273              		.loc 1 1348 12 view .LVU6696
 19274              	.LBE981:
1349:sieve_extend.c ****     }
1350:sieve_extend.c ****     
1351:sieve_extend.c ****     if (option_showMaxFactor > 0) {
 19275              		.loc 1 1351 5 is_stmt 1 view .LVU6697
 19276              	# sieve_extend.c:1351:     if (option_showMaxFactor > 0) {
 19277              		.loc 1 1351 8 is_stmt 0 view .LVU6698
 19278 04e1 48837C24 		cmp	QWORD PTR 120[rsp], 0	# option_showMaxFactor,
 19278      7800
 19279 04e7 7570     		jne	.L1957	#,
 19280 04e9 0F1F8000 		.p2align 4,,10
 19280      000000
 19281              		.p2align 3
 19282              	.L1875:
GAS LISTING /tmp/cctyCFAS.s 			page 515


 19283              	.LBB1000:
 19284              	.LBB976:
 19285              	.LBB973:
 19286              	.LBB966:
1317:sieve_extend.c ****             }
 19287              		.loc 1 1317 29 is_stmt 1 discriminator 1 view .LVU6699
 19288              	.LBE966:
 19289              	.LBE973:
 19290              	.LBE976:
 19291              	.LBE1000:
 19292              	# sieve_extend.c:1358: }
1352:sieve_extend.c ****         printf("Show result set:\n");
1353:sieve_extend.c ****         struct sieve_state* sieve_instance = sieve(option_maxFactor, option_maxFactor);
1354:sieve_extend.c ****         show_primes(sieve_instance, option_showMaxFactor);
1355:sieve_extend.c ****         delete_sieve(sieve_instance);
1356:sieve_extend.c ****         printf("\n");
1357:sieve_extend.c ****     }
1358:sieve_extend.c **** }
 19293              		.loc 1 1358 1 is_stmt 0 discriminator 1 view .LVU6700
 19294 04f0 488B8424 		mov	rax, QWORD PTR 168[rsp]	# tmp526, D.7489
 19294      A8000000 
 19295 04f8 64483304 		xor	rax, QWORD PTR fs:40	# tmp526, MEM[(<address-space-1> long unsigned int *)40B]
 19295      25280000 
 19295      00
 19296 0501 0F859A08 		jne	.L1958	#,
 19296      0000
 19297              	# sieve_extend.c:1358: }
 19298              		.loc 1 1358 1 view .LVU6701
 19299 0507 4881C4B8 		add	rsp, 184	#,
 19299      000000
 19300              		.cfi_remember_state
 19301              		.cfi_def_cfa_offset 56
 19302 050e 5B       		pop	rbx	#
 19303              		.cfi_def_cfa_offset 48
 19304 050f 5D       		pop	rbp	#
 19305              		.cfi_def_cfa_offset 40
 19306 0510 415C     		pop	r12	#
 19307              		.cfi_def_cfa_offset 32
 19308 0512 415D     		pop	r13	#
 19309              		.cfi_def_cfa_offset 24
 19310 0514 415E     		pop	r14	#
 19311              		.cfi_def_cfa_offset 16
 19312 0516 31C0     		xor	eax, eax	#
 19313 0518 415F     		pop	r15	#
 19314              		.cfi_def_cfa_offset 8
 19315 051a C3       		ret	
 19316              	.L1833:
 19317              		.cfi_restore_state
1305:sieve_extend.c ****         if (option_verboselevel >= 2) printf("\n");
 19318              		.loc 1 1305 39 is_stmt 1 view .LVU6702
 19319              	.LVL1323:
 19320              	.LBB1001:
 19321              	.LBI1001:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19322              		.loc 3 105 1 view .LVU6703
 19323              	.LBB1002:
 19324              		.loc 3 107 3 view .LVU6704
GAS LISTING /tmp/cctyCFAS.s 			page 516


 19325              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19326              		.loc 3 107 10 is_stmt 0 view .LVU6705
 19327 051b 488D3500 		lea	rsi, .LC23[rip]	#,
 19327      000000
 19328 0522 BF010000 		mov	edi, 1	#,
 19328      00
 19329 0527 31C0     		xor	eax, eax	#
 19330 0529 E8000000 		call	__printf_chk@PLT	#
 19330      00
 19331              	.LVL1324:
 19332 052e E989FCFF 		jmp	.L1818	#
 19332      FF
 19333              	.LVL1325:
 19334              	.L1822:
 19335              		.loc 3 107 10 view .LVU6706
 19336              	.LBE1002:
 19337              	.LBE1001:
 19338              	.LBB1003:
1265:sieve_extend.c ****             }
 19339              		.loc 1 1265 17 is_stmt 1 view .LVU6707
 19340              	.LBB932:
 19341              	.LBI932:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19342              		.loc 3 98 1 view .LVU6708
 19343              	.LBB933:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19344              		.loc 3 100 3 view .LVU6709
 19345              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19346              		.loc 3 100 10 is_stmt 0 view .LVU6710
 19347 0533 498B0F   		mov	rcx, QWORD PTR [r15]	#, *_16
 19348 0536 488D1500 		lea	rdx, .LC28[rip]	#,
 19348      000000
 19349              	.LVL1326:
 19350              	.L1944:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19351              		.loc 3 100 10 view .LVU6711
 19352              	.LBE933:
 19353              	.LBE932:
 19354              	.LBB934:
 19355              	.LBB935:
 19356 053d 488B3D00 		mov	rdi, QWORD PTR stderr[rip]	#, stderr
 19356      000000
 19357 0544 BE010000 		mov	esi, 1	#,
 19357      00
 19358 0549 31C0     		xor	eax, eax	#
 19359 054b E8000000 		call	__fprintf_chk@PLT	#
 19359      00
 19360              	.LVL1327:
 19361              	.L1945:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19362              		.loc 3 100 10 view .LVU6712
 19363              	.LBE935:
 19364              	.LBE934:
1273:sieve_extend.c ****             }
 19365              		.loc 1 1273 80 is_stmt 1 view .LVU6713
 19366 0550 498B3C24 		mov	rdi, QWORD PTR [r12]	#, *argv_156(D)
GAS LISTING /tmp/cctyCFAS.s 			page 517


 19367 0554 E8000000 		call	usage	#
 19367      00
 19368              	.LVL1328:
 19369              	.L1957:
1273:sieve_extend.c ****             }
 19370              		.loc 1 1273 80 is_stmt 0 view .LVU6714
 19371              	.LBE1003:
 19372              	.LBB1004:
1352:sieve_extend.c ****         struct sieve_state* sieve_instance = sieve(option_maxFactor, option_maxFactor);
 19373              		.loc 1 1352 9 is_stmt 1 view .LVU6715
 19374              	.LBB1005:
 19375              	.LBI1005:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19376              		.loc 3 105 1 view .LVU6716
 19377              	.LBB1006:
 19378              		.loc 3 107 3 view .LVU6717
 19379              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19380              		.loc 3 107 10 is_stmt 0 view .LVU6718
 19381 0559 488D3D00 		lea	rdi, .LC56[rip]	#,
 19381      000000
 19382 0560 E8000000 		call	puts@PLT	#
 19382      00
 19383              	.LVL1329:
 19384              		.loc 3 107 10 view .LVU6719
 19385              	.LBE1006:
 19386              	.LBE1005:
1353:sieve_extend.c ****         show_primes(sieve_instance, option_showMaxFactor);
 19387              		.loc 1 1353 9 is_stmt 1 view .LVU6720
 19388              	# sieve_extend.c:1353:         struct sieve_state* sieve_instance = sieve(option_maxFactor, option_
1353:sieve_extend.c ****         show_primes(sieve_instance, option_showMaxFactor);
 19389              		.loc 1 1353 46 is_stmt 0 view .LVU6721
 19390 0565 488B7C24 		mov	rdi, QWORD PTR 112[rsp]	# option_maxFactor.50_91, option_maxFactor
 19390      70
 19391 056a 4889FE   		mov	rsi, rdi	#, option_maxFactor.50_91
 19392 056d E8000000 		call	sieve	#
 19392      00
 19393              	.LVL1330:
 19394              	# sieve_extend.c:1354:         show_primes(sieve_instance, option_showMaxFactor);
1354:sieve_extend.c ****         delete_sieve(sieve_instance);
 19395              		.loc 1 1354 9 view .LVU6722
 19396 0572 488B5424 		mov	rdx, QWORD PTR 120[rsp]	#, option_showMaxFactor
 19396      78
 19397              	# sieve_extend.c:1353:         struct sieve_state* sieve_instance = sieve(option_maxFactor, option_
1353:sieve_extend.c ****         show_primes(sieve_instance, option_showMaxFactor);
 19398              		.loc 1 1353 46 view .LVU6723
 19399 0577 4989C7   		mov	r15, rax	# sieve_instance, tmp478
 19400              	.LVL1331:
1354:sieve_extend.c ****         delete_sieve(sieve_instance);
 19401              		.loc 1 1354 9 is_stmt 1 view .LVU6724
 19402 057a 488D7008 		lea	rsi, 8[rax]	# tmp404,
 19403 057e 4889C7   		mov	rdi, rax	#, sieve_instance
 19404 0581 E8000000 		call	show_primes.isra.0	#
 19404      00
 19405              	.LVL1332:
1355:sieve_extend.c ****         printf("\n");
 19406              		.loc 1 1355 9 view .LVU6725
 19407              	.LBB1007:
GAS LISTING /tmp/cctyCFAS.s 			page 518


 19408              	.LBI1007:
  96:sieve_extend.c ****     free(sieve->bitarray);
 19409              		.loc 1 96 13 view .LVU6726
 19410              	.LBB1008:
  97:sieve_extend.c ****     free(sieve);
 19411              		.loc 1 97 5 view .LVU6727
 19412 0586 498B3F   		mov	rdi, QWORD PTR [r15]	#, sieve_instance_148->bitarray
 19413 0589 E8000000 		call	free@PLT	#
 19413      00
 19414              	.LVL1333:
  98:sieve_extend.c **** }
 19415              		.loc 1 98 5 view .LVU6728
 19416 058e 4C89FF   		mov	rdi, r15	#, sieve_instance
 19417 0591 E8000000 		call	free@PLT	#
 19417      00
 19418              	.LVL1334:
  98:sieve_extend.c **** }
 19419              		.loc 1 98 5 is_stmt 0 view .LVU6729
 19420              	.LBE1008:
 19421              	.LBE1007:
1356:sieve_extend.c ****     }
 19422              		.loc 1 1356 9 is_stmt 1 view .LVU6730
 19423              	.LBB1009:
 19424              	.LBI1009:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19425              		.loc 3 105 1 view .LVU6731
 19426              	.LBB1010:
 19427              		.loc 3 107 3 view .LVU6732
 19428              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19429              		.loc 3 107 10 is_stmt 0 view .LVU6733
 19430 0596 BF0A0000 		mov	edi, 10	#,
 19430      00
 19431 059b E8000000 		call	putchar@PLT	#
 19431      00
 19432              	.LVL1335:
 19433 05a0 E94BFFFF 		jmp	.L1875	#
 19433      FF
 19434              	.LVL1336:
 19435              	.L1956:
 19436              		.loc 3 107 10 view .LVU6734
 19437              	.LBE1010:
 19438              	.LBE1009:
 19439              	.LBE1004:
 19440              	.LBB1011:
1348:sieve_extend.c ****     }
 19441              		.loc 1 1348 39 is_stmt 1 discriminator 1 view .LVU6735
 19442              	.LBB992:
 19443              	.LBI992:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19444              		.loc 3 105 1 discriminator 1 view .LVU6736
 19445              	.LBB993:
 19446              		.loc 3 107 3 discriminator 1 view .LVU6737
 19447              	.LBE993:
 19448              	.LBE992:
 19449              	# sieve_extend.c:1348:         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - p
1348:sieve_extend.c ****     }
 19450              		.loc 1 1348 39 is_stmt 0 discriminator 1 view .LVU6738
GAS LISTING /tmp/cctyCFAS.s 			page 519


 19451 05a5 4D85F6   		test	r14, r14	# passes
 19452 05a8 C5FB103C 		vmovsd	xmm7, QWORD PTR [rsp]	# elapsed_time, %sfp
 19452      24
 19453 05ad C5F857C0 		vxorps	xmm0, xmm0, xmm0	# tmp480
 19454 05b1 0F881907 		js	.L1871	#,
 19454      0000
 19455 05b7 C4C1FB2A 		vcvtsi2sd	xmm2, xmm0, r14	# tmp485, tmp480, passes
 19455      D6
 19456              	.L1872:
 19457              	# sieve_extend.c:1348:         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - p
1348:sieve_extend.c ****     }
 19458              		.loc 1 1348 95 discriminator 1 view .LVU6739
 19459 05bc 4B8D14B6 		lea	rdx, [r14+r14*4]	# tmp397,
 19460              	# sieve_extend.c:1348:         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - p
1348:sieve_extend.c ****     }
 19461              		.loc 1 1348 39 discriminator 1 view .LVU6740
 19462 05c0 C5EB5ECF 		vdivsd	xmm1, xmm2, xmm7	# tmp396, tmp392, elapsed_time
 19463 05c4 4885D2   		test	rdx, rdx	# tmp397
 19464 05c7 0F88E906 		js	.L1873	#,
 19464      0000
 19465 05cd C461FB2A 		vcvtsi2sd	xmm8, xmm0, rdx	# tmp487, tmp480, tmp397
 19465      C2
 19466              	.L1874:
 19467              	.LBB996:
 19468              	.LBB994:
 19469              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19470              		.loc 3 107 10 discriminator 1 view .LVU6741
 19471 05d2 488D3500 		lea	rsi, .LC55[rip]	#,
 19471      000000
 19472 05d9 BF010000 		mov	edi, 1	#,
 19472      00
 19473 05de B8020000 		mov	eax, 2	#,
 19473      00
 19474              	.LBE994:
 19475              	.LBE996:
 19476              	# sieve_extend.c:1348:         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - p
1348:sieve_extend.c ****     }
 19477              		.loc 1 1348 39 discriminator 1 view .LVU6742
 19478 05e3 C5BB5EC7 		vdivsd	xmm0, xmm8, xmm7	# tmp402, tmp398, elapsed_time
 19479              	.LBB997:
 19480              	.LBB995:
 19481              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19482              		.loc 3 107 10 discriminator 1 view .LVU6743
 19483 05e7 E8000000 		call	__printf_chk@PLT	#
 19483      00
 19484              	.LVL1337:
 19485 05ec E9F0FEFF 		jmp	.L1867	#
 19485      FF
 19486              	.LVL1338:
 19487              	.L1955:
 19488              		.loc 3 107 10 discriminator 1 view .LVU6744
 19489              	.LBE995:
 19490              	.LBE997:
 19491              	.LBE1011:
 19492              	.LBB1012:
1326:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
 19493              		.loc 1 1326 9 is_stmt 1 view .LVU6745
GAS LISTING /tmp/cctyCFAS.s 			page 520


 19494              	# sieve_extend.c:1326:         tuning_result_type tuning_result = tune(option_tunelevel, option_max
1326:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
 19495              		.loc 1 1326 44 is_stmt 0 view .LVU6746
 19496 05f1 448B5424 		mov	r10d, DWORD PTR 104[rsp]	# option_verboselevel.41_63, option_verboselevel
 19496      68
 19497 05f6 4C8B5C24 		mov	r11, QWORD PTR 112[rsp]	# option_maxFactor.42_64, option_maxFactor
 19497      70
 19498 05fb 41FFC8   		dec	r8d	#
 19499 05fe 44895424 		mov	DWORD PTR 80[rsp], r10d	# %sfp, option_verboselevel.41_63
 19499      50
 19500 0603 4C895C24 		mov	QWORD PTR 72[rsp], r11	# %sfp, option_maxFactor.42_64
 19500      48
 19501              	.LVL1339:
 19502              	.LBB1013:
 19503              	.LBI1013:
1120:sieve_extend.c ****     counter_t best_blocksize_bits = default_blocksize;
 19504              		.loc 1 1120 27 is_stmt 1 view .LVU6747
 19505              	.LBB1014:
1121:sieve_extend.c **** 
 19506              		.loc 1 1121 5 view .LVU6748
1123:sieve_extend.c ****     best_blocksize_bits = 0;
 19507              		.loc 1 1123 5 view .LVU6749
1124:sieve_extend.c ****     counter_t best_smallstep_faster = 0;
 19508              		.loc 1 1124 5 view .LVU6750
1125:sieve_extend.c ****     counter_t best_mediumstep_faster = 0;
 19509              		.loc 1 1125 5 view .LVU6751
1126:sieve_extend.c ****     counter_t smallstep_faster_steps = 4;
 19510              		.loc 1 1126 5 view .LVU6752
1127:sieve_extend.c ****     counter_t mediumstep_faster_steps = 4;
 19511              		.loc 1 1127 5 view .LVU6753
1128:sieve_extend.c ****     counter_t freebits_steps = anticiped_cache_line_bytesize;
 19512              		.loc 1 1128 5 view .LVU6754
1129:sieve_extend.c ****     counter_t sample_max = default_sample_max;
 19513              		.loc 1 1129 5 view .LVU6755
1130:sieve_extend.c ****     double sample_duration = default_sample_duration;
 19514              		.loc 1 1130 5 view .LVU6756
1131:sieve_extend.c **** 
 19515              		.loc 1 1131 5 view .LVU6757
1134:sieve_extend.c ****         case 1:
 19516              		.loc 1 1134 5 view .LVU6758
 19517 0608 4183F802 		cmp	r8d, 2	# _209,
 19518 060c 0F862D06 		jbe	.L1876	#,
 19518      0000
 19519 0612 C5FB1035 		vmovsd	xmm6, QWORD PTR .LC22[rip]	# sample_duration,
 19519      00000000 
 19520 061a 48C74424 		mov	QWORD PTR 48[rsp], 5	# %sfp,
 19520      30050000 
 19520      00
 19521 0623 48C74424 		mov	QWORD PTR 56[rsp], 128	# %sfp,
 19521      38800000 
 19521      00
 19522 062c 48C74424 		mov	QWORD PTR 88[rsp], 4	# %sfp,
 19522      58040000 
 19522      00
 19523 0635 C5FB1174 		vmovsd	QWORD PTR 64[rsp], xmm6	# %sfp, sample_duration
 19523      2440
 19524              	.LVL1340:
GAS LISTING /tmp/cctyCFAS.s 			page 521


 19525              	.L1846:
1159:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 19526              		.loc 1 1159 5 view .LVU6759
 19527              	# sieve_extend.c:1159:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1159:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 19528              		.loc 1 1159 33 is_stmt 0 view .LVU6760
 19529 063b B8400000 		mov	eax, 64	# tmp330,
 19529      00
 19530 0640 31D2     		xor	edx, edx	# tmp329
 19531 0642 48F77424 		div	QWORD PTR 88[rsp]	# %sfp
 19531      58
 19532              	# sieve_extend.c:1159:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1159:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 19533              		.loc 1 1159 194 view .LVU6761
 19534 0647 31D2     		xor	edx, edx	# tmp337
 19535              	# sieve_extend.c:1161:     counter_t tuning_results=0;
1161:sieve_extend.c ****     counter_t tuning_result_index=0;
 19536              		.loc 1 1161 15 view .LVU6762
 19537 0649 4531F6   		xor	r14d, r14d	# tuning_results
 19538              	.LBB1015:
 19539              	# sieve_extend.c:1164:     for (counter_t smallstep_faster = 0; smallstep_faster <= WORD_SIZE/2; sm
1164:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 19540              		.loc 1 1164 20 view .LVU6763
 19541 064c 4531ED   		xor	r13d, r13d	# smallstep_faster
 19542              	.LBE1015:
 19543              	# sieve_extend.c:1159:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1159:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 19544              		.loc 1 1159 83 view .LVU6764
 19545 064f 488D7801 		lea	rdi, 1[rax]	# _223,
 19546              	.LVL1341:
1160:sieve_extend.c ****     counter_t tuning_results=0;
 19547              		.loc 1 1160 5 is_stmt 1 view .LVU6765
 19548              	# sieve_extend.c:1159:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1159:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 19549              		.loc 1 1159 194 is_stmt 0 view .LVU6766
 19550 0653 B8001000 		mov	eax, 4096	# tmp338,
 19550      00
 19551 0658 48F77424 		div	QWORD PTR 56[rsp]	# %sfp
 19551      38
 19552              	# sieve_extend.c:1160:     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_r
1160:sieve_extend.c ****     counter_t tuning_results=0;
 19553              		.loc 1 1160 41 view .LVU6767
 19554 065d 480FAFC7 		imul	rax, rdi	# tmp343, _223
 19555 0661 480FAFF8 		imul	rdi, rax	# tmp344, tmp343
 19556              	.LVL1342:
1160:sieve_extend.c ****     counter_t tuning_results=0;
 19557              		.loc 1 1160 41 view .LVU6768
 19558 0665 48C1E708 		sal	rdi, 8	# tmp345,
 19559 0669 E8000000 		call	malloc@PLT	#
 19559      00
 19560              	.LVL1343:
1161:sieve_extend.c ****     counter_t tuning_result_index=0;
 19561              		.loc 1 1161 5 is_stmt 1 view .LVU6769
1162:sieve_extend.c ****     
 19562              		.loc 1 1162 5 view .LVU6770
1164:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 19563              		.loc 1 1164 5 view .LVU6771
GAS LISTING /tmp/cctyCFAS.s 			page 522


 19564              	.LBB1028:
1164:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 19565              		.loc 1 1164 10 view .LVU6772
1164:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 19566              		.loc 1 1164 42 view .LVU6773
 19567 066e 48894424 		mov	QWORD PTR 16[rsp], rax	# %sfp, tuning_result
 19567      10
 19568              	.LBE1028:
 19569              	# sieve_extend.c:1126:     counter_t best_mediumstep_faster = 0;
1126:sieve_extend.c ****     counter_t smallstep_faster_steps = 4;
 19570              		.loc 1 1126 15 is_stmt 0 view .LVU6774
 19571 0673 48C74424 		mov	QWORD PTR 40[rsp], 0	# %sfp,
 19571      28000000 
 19571      00
 19572              	# sieve_extend.c:1125:     counter_t best_smallstep_faster = 0;
1125:sieve_extend.c ****     counter_t best_mediumstep_faster = 0;
 19573              		.loc 1 1125 15 view .LVU6775
 19574 067c 48C74424 		mov	QWORD PTR 32[rsp], 0	# %sfp,
 19574      20000000 
 19574      00
 19575              	# sieve_extend.c:1124:     best_blocksize_bits = 0;
1124:sieve_extend.c ****     counter_t best_smallstep_faster = 0;
 19576              		.loc 1 1124 25 view .LVU6776
 19577 0685 48C74424 		mov	QWORD PTR 24[rsp], 0	# %sfp,
 19577      18000000 
 19577      00
 19578              	# sieve_extend.c:1123:     double best_avg = 0;
1123:sieve_extend.c ****     best_blocksize_bits = 0;
 19579              		.loc 1 1123 12 view .LVU6777
 19580 068e C5F157C9 		vxorpd	xmm1, xmm1, xmm1	# best_avg
 19581 0692 C5FB110C 		vmovsd	QWORD PTR [rsp], xmm1	# %sfp, best_avg
 19581      24
 19582              	.LVL1344:
 19583              	.L1848:
 19584              	.LBB1029:
 19585              	.LBB1016:
1165:sieve_extend.c ****             for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 19586              		.loc 1 1165 62 is_stmt 1 view .LVU6778
 19587              	.LBB1017:
 19588              	# sieve_extend.c:1166:             for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /
1166:sieve_extend.c ****                 for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) && (fr
 19589              		.loc 1 1166 28 is_stmt 0 view .LVU6779
 19590 0697 4D89EC   		mov	r12, r13	# mediumstep_faster, smallstep_faster
 19591              	.LVL1345:
 19592 069a 660F1F44 		.p2align 4,,10
 19592      0000
 19593              		.p2align 3
 19594              	.L1858:
1166:sieve_extend.c ****                 for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) && (fr
 19595              		.loc 1 1166 46 is_stmt 1 view .LVU6780
 19596              	.LBB1018:
 19597              	# sieve_extend.c:1167:                 for (counter_t free_bits=0; (free_bits < (anticiped_cache_li
1167:sieve_extend.c ****                     counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 19598              		.loc 1 1167 32 is_stmt 0 view .LVU6781
 19599 06a0 C7442454 		mov	DWORD PTR 84[rsp], 6	# %sfp,
 19599      06000000 
 19600              	.LBE1018:
GAS LISTING /tmp/cctyCFAS.s 			page 523


 19601              	# sieve_extend.c:1166:             for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /
1166:sieve_extend.c ****                 for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) && (fr
 19602              		.loc 1 1166 28 view .LVU6782
 19603 06a8 48C74424 		mov	QWORD PTR 8[rsp], 256	# %sfp,
 19603      08000100 
 19603      00
 19604              	.LVL1346:
 19605              		.p2align 4,,10
 19606 06b1 0F1F8000 		.p2align 3
 19606      000000
 19607              	.L1856:
 19608              	.LBB1027:
1167:sieve_extend.c ****                     counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 19609              		.loc 1 1167 45 is_stmt 1 view .LVU6783
 19610 06b8 4D6BC658 		imul	r8, r14, 88	# tmp360, tuning_results,
 19611              	# sieve_extend.c:1167:                 for (counter_t free_bits=0; (free_bits < (anticiped_cache_li
1167:sieve_extend.c ****                     counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 19612              		.loc 1 1167 130 is_stmt 0 view .LVU6784
 19613 06bc 488B5C24 		mov	rbx, QWORD PTR 8[rsp]	# ivtmp.767, %sfp
 19613      08
 19614 06c1 4C8B7C24 		mov	r15, QWORD PTR 16[rsp]	# tuning_result, %sfp
 19614      10
 19615 06c6 48C1E30D 		sal	rbx, 13	# ivtmp.767,
 19616 06ca 4F8D3C07 		lea	r15, [r15+r8]	# ivtmp.766,
 19617              	# sieve_extend.c:1167:                 for (counter_t free_bits=0; (free_bits < (anticiped_cache_li
1167:sieve_extend.c ****                     counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 19618              		.loc 1 1167 32 view .LVU6785
 19619 06ce 31ED     		xor	ebp, ebp	# free_bits
 19620 06d0 EB41     		jmp	.L1854	#
 19621              	.LVL1347:
 19622              		.p2align 4,,10
 19623 06d2 660F1F44 		.p2align 3
 19623      0000
 19624              	.L1851:
 19625              	.LBB1019:
1183:sieve_extend.c ****                         best_blocksize_bits = blocksize_bits;
 19626              		.loc 1 1183 25 is_stmt 1 view .LVU6786
1184:sieve_extend.c ****                         best_smallstep_faster = smallstep_faster;
 19627              		.loc 1 1184 25 view .LVU6787
1185:sieve_extend.c ****                         best_mediumstep_faster = mediumstep_faster;
 19628              		.loc 1 1185 25 view .LVU6788
1186:sieve_extend.c ****                         if (option_verboselevel >=2) printf(".(>)blocksize_bits %10ju; blocksize %4
 19629              		.loc 1 1186 25 view .LVU6789
1187:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_t)tu
 19630              		.loc 1 1187 25 view .LVU6790
 19631              	# sieve_extend.c:1187:                         if (option_verboselevel >=2) printf(".(>)blocksize_b
1187:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_t)tu
 19632              		.loc 1 1187 28 is_stmt 0 view .LVU6791
 19633 06d8 837C2450 		cmp	DWORD PTR 80[rsp], 1	# %sfp,
 19633      01
 19634 06dd 0F8FE500 		jg	.L1959	#,
 19634      0000
1187:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_t)tu
 19635              		.loc 1 1187 28 view .LVU6792
 19636 06e3 4C896424 		mov	QWORD PTR 40[rsp], r12	# %sfp, mediumstep_faster
 19636      28
 19637 06e8 4C896C24 		mov	QWORD PTR 32[rsp], r13	# %sfp, smallstep_faster
GAS LISTING /tmp/cctyCFAS.s 			page 524


 19637      20
 19638              	# sieve_extend.c:1184:                         best_blocksize_bits = blocksize_bits;
1184:sieve_extend.c ****                         best_smallstep_faster = smallstep_faster;
 19639              		.loc 1 1184 45 view .LVU6793
 19640 06ed 48895C24 		mov	QWORD PTR 24[rsp], rbx	# %sfp, ivtmp.767
 19640      18
 19641              	# sieve_extend.c:1183:                         best_avg = tuning_result[tuning_result_index].avg;
1183:sieve_extend.c ****                         best_blocksize_bits = blocksize_bits;
 19642              		.loc 1 1183 34 view .LVU6794
 19643 06f2 C5FB1114 		vmovsd	QWORD PTR [rsp], xmm2	# %sfp, _242
 19643      24
 19644              	.LVL1348:
 19645              	.L1849:
1198:sieve_extend.c ****                 }
 19646              		.loc 1 1198 21 is_stmt 1 view .LVU6795
1198:sieve_extend.c ****                 }
 19647              		.loc 1 1198 21 is_stmt 0 view .LVU6796
 19648              	.LBE1019:
1167:sieve_extend.c ****                     counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 19649              		.loc 1 1167 137 is_stmt 1 view .LVU6797
 19650              	# sieve_extend.c:1167:                 for (counter_t free_bits=0; (free_bits < (anticiped_cache_li
1167:sieve_extend.c ****                     counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 19651              		.loc 1 1167 147 is_stmt 0 view .LVU6798
 19652 06f7 488B7424 		mov	rsi, QWORD PTR 56[rsp]	# freebits_steps, %sfp
 19652      38
 19653 06fc 4983C758 		add	r15, 88	# ivtmp.766,
 19654 0700 4801F5   		add	rbp, rsi	# free_bits, freebits_steps
 19655              	.LVL1349:
1167:sieve_extend.c ****                     counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 19656              		.loc 1 1167 45 is_stmt 1 view .LVU6799
 19657 0703 4829F3   		sub	rbx, rsi	# ivtmp.767, freebits_steps
 19658              	.LVL1350:
 19659              	# sieve_extend.c:1167:                 for (counter_t free_bits=0; (free_bits < (anticiped_cache_li
1167:sieve_extend.c ****                     counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 19660              		.loc 1 1167 17 is_stmt 0 view .LVU6800
 19661 0706 4881FDFF 		cmp	rbp, 4095	# free_bits,
 19661      0F0000
 19662 070d 0F871D01 		ja	.L1850	#,
 19662      0000
 19663              	.LVL1351:
 19664              	.L1854:
 19665              	.LBB1026:
1168:sieve_extend.c **** 
 19666              		.loc 1 1168 21 is_stmt 1 view .LVU6801
1171:sieve_extend.c ****                     tuning_result[tuning_result_index].maxints = maxints;
 19667              		.loc 1 1171 21 view .LVU6802
 19668              	# sieve_extend.c:1175:                     tuning_result[tuning_result_index].blocksize_kb = blocks
1175:sieve_extend.c ****                     tuning_result[tuning_result_index].free_bits = free_bits;
 19669              		.loc 1 1175 69 is_stmt 0 view .LVU6803
 19670 0713 488B7C24 		mov	rdi, QWORD PTR 8[rsp]	# blocksize_kb, %sfp
 19670      08
 19671              	# sieve_extend.c:1172:                     tuning_result[tuning_result_index].maxints = maxints;
1172:sieve_extend.c ****                     tuning_result[tuning_result_index].sample_duration = sample_duration;
 19672              		.loc 1 1172 64 view .LVU6804
 19673 0718 4C8B5424 		mov	r10, QWORD PTR 72[rsp]	# option_maxFactor.42_64, %sfp
 19673      48
 19674              	# sieve_extend.c:1174:                     tuning_result[tuning_result_index].sample_max = sample_m
GAS LISTING /tmp/cctyCFAS.s 			page 525


1174:sieve_extend.c ****                     tuning_result[tuning_result_index].blocksize_kb = blocksize_kb;
 19675              		.loc 1 1174 67 view .LVU6805
 19676 071d 4C8B5C24 		mov	r11, QWORD PTR 48[rsp]	# sample_max, %sfp
 19676      30
 19677              	# sieve_extend.c:1175:                     tuning_result[tuning_result_index].blocksize_kb = blocks
1175:sieve_extend.c ****                     tuning_result[tuning_result_index].free_bits = free_bits;
 19678              		.loc 1 1175 69 view .LVU6806
 19679 0722 49897F10 		mov	QWORD PTR 16[r15], rdi	# MEM[base: _300, offset: 16B], blocksize_kb
 19680              	# sieve_extend.c:1173:                     tuning_result[tuning_result_index].sample_duration = sam
1173:sieve_extend.c ****                     tuning_result[tuning_result_index].sample_max = sample_max;
 19681              		.loc 1 1173 72 view .LVU6807
 19682 0726 C5FB1064 		vmovsd	xmm4, QWORD PTR 64[rsp]	# sample_duration, %sfp
 19682      2440
 19683              	# sieve_extend.c:1172:                     tuning_result[tuning_result_index].maxints = maxints;
1172:sieve_extend.c ****                     tuning_result[tuning_result_index].sample_duration = sample_duration;
 19684              		.loc 1 1172 64 view .LVU6808
 19685 072c 4D8917   		mov	QWORD PTR [r15], r10	# MEM[base: _300, offset: 0B], option_maxFactor.42_64
 19686              	# sieve_extend.c:1174:                     tuning_result[tuning_result_index].sample_max = sample_m
1174:sieve_extend.c ****                     tuning_result[tuning_result_index].blocksize_kb = blocksize_kb;
 19687              		.loc 1 1174 67 view .LVU6809
 19688 072f 4D895F30 		mov	QWORD PTR 48[r15], r11	# MEM[base: _300, offset: 48B], sample_max
 19689              	# sieve_extend.c:1176:                     tuning_result[tuning_result_index].free_bits = free_bits
1176:sieve_extend.c ****                     tuning_result[tuning_result_index].blocksize_bits = blocksize_bits;
 19690              		.loc 1 1176 66 view .LVU6810
 19691 0733 49896F18 		mov	QWORD PTR 24[r15], rbp	# MEM[base: _300, offset: 24B], free_bits
 19692              	# sieve_extend.c:1177:                     tuning_result[tuning_result_index].blocksize_bits = bloc
1177:sieve_extend.c ****                     tuning_result[tuning_result_index].smallstep_faster = smallstep_faster;
 19693              		.loc 1 1177 71 view .LVU6811
 19694 0737 49895F08 		mov	QWORD PTR 8[r15], rbx	# MEM[base: _300, offset: 8B], ivtmp.767
 19695              	# sieve_extend.c:1178:                     tuning_result[tuning_result_index].smallstep_faster = sm
1178:sieve_extend.c ****                     tuning_result[tuning_result_index].mediumstep_faster = mediumstep_faster;
 19696              		.loc 1 1178 73 view .LVU6812
 19697 073b 4D896F20 		mov	QWORD PTR 32[r15], r13	# MEM[base: _300, offset: 32B], smallstep_faster
 19698              	# sieve_extend.c:1179:                     tuning_result[tuning_result_index].mediumstep_faster = m
1179:sieve_extend.c ****                     tune_benchmark(tuning_result, tuning_result_index);
 19699              		.loc 1 1179 74 view .LVU6813
 19700 073f 4D896728 		mov	QWORD PTR 40[r15], r12	# MEM[base: _300, offset: 40B], mediumstep_faster
 19701              	# sieve_extend.c:1180:                     tune_benchmark(tuning_result, tuning_result_index);
1180:sieve_extend.c **** 
 19702              		.loc 1 1180 21 view .LVU6814
 19703 0743 488B7C24 		mov	rdi, QWORD PTR 16[rsp]	#, %sfp
 19703      10
 19704 0748 4C89F6   		mov	rsi, r14	# tuning_results, tuning_results
 19705              	# sieve_extend.c:1173:                     tuning_result[tuning_result_index].sample_duration = sam
1173:sieve_extend.c ****                     tuning_result[tuning_result_index].sample_max = sample_max;
 19706              		.loc 1 1173 72 view .LVU6815
 19707 074b C4C17B11 		vmovsd	QWORD PTR 56[r15], xmm4	# MEM[base: _300, offset: 56B], sample_duration
 19707      6738
 19708              	# sieve_extend.c:1180:                     tune_benchmark(tuning_result, tuning_result_index);
1180:sieve_extend.c **** 
 19709              		.loc 1 1180 21 view .LVU6816
 19710 0751 E8000000 		call	tune_benchmark	#
 19710      00
 19711              	.LVL1352:
 19712              	# sieve_extend.c:1182:                     if ( tuning_result[tuning_result_index].avg > best_avg) 
1182:sieve_extend.c ****                         best_avg = tuning_result[tuning_result_index].avg;
 19713              		.loc 1 1182 60 view .LVU6817
GAS LISTING /tmp/cctyCFAS.s 			page 526


 19714 0756 C4C17B10 		vmovsd	xmm2, QWORD PTR 80[r15]	# _242, MEM[base: _300, offset: 80B]
 19714      5750
 19715              	# sieve_extend.c:1171:                     tuning_results++;
1171:sieve_extend.c ****                     tuning_result[tuning_result_index].maxints = maxints;
 19716              		.loc 1 1171 35 view .LVU6818
 19717 075c 49FFC6   		inc	r14	# tuning_results
 19718              	.LVL1353:
1172:sieve_extend.c ****                     tuning_result[tuning_result_index].sample_duration = sample_duration;
 19719              		.loc 1 1172 21 is_stmt 1 view .LVU6819
1173:sieve_extend.c ****                     tuning_result[tuning_result_index].sample_max = sample_max;
 19720              		.loc 1 1173 21 view .LVU6820
1174:sieve_extend.c ****                     tuning_result[tuning_result_index].blocksize_kb = blocksize_kb;
 19721              		.loc 1 1174 21 view .LVU6821
1175:sieve_extend.c ****                     tuning_result[tuning_result_index].free_bits = free_bits;
 19722              		.loc 1 1175 21 view .LVU6822
1176:sieve_extend.c ****                     tuning_result[tuning_result_index].blocksize_bits = blocksize_bits;
 19723              		.loc 1 1176 21 view .LVU6823
1177:sieve_extend.c ****                     tuning_result[tuning_result_index].smallstep_faster = smallstep_faster;
 19724              		.loc 1 1177 21 view .LVU6824
1178:sieve_extend.c ****                     tuning_result[tuning_result_index].mediumstep_faster = mediumstep_faster;
 19725              		.loc 1 1178 21 view .LVU6825
1179:sieve_extend.c ****                     tune_benchmark(tuning_result, tuning_result_index);
 19726              		.loc 1 1179 21 view .LVU6826
1180:sieve_extend.c **** 
 19727              		.loc 1 1180 21 view .LVU6827
1182:sieve_extend.c ****                         best_avg = tuning_result[tuning_result_index].avg;
 19728              		.loc 1 1182 21 view .LVU6828
 19729              	# sieve_extend.c:1182:                     if ( tuning_result[tuning_result_index].avg > best_avg) 
1182:sieve_extend.c ****                         best_avg = tuning_result[tuning_result_index].avg;
 19730              		.loc 1 1182 24 is_stmt 0 view .LVU6829
 19731 075f C5F92F14 		vcomisd	xmm2, QWORD PTR [rsp]	# _242, %sfp
 19731      24
 19732 0764 0F876EFF 		ja	.L1851	#,
 19732      FFFF
 19733              	.L1852:
1193:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_t)tu
 19734              		.loc 1 1193 21 is_stmt 1 view .LVU6830
 19735              	# sieve_extend.c:1193:                     if (option_verboselevel >= 3) printf("...blocksize_bits 
1193:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_t)tu
 19736              		.loc 1 1193 24 is_stmt 0 view .LVU6831
 19737 076a 837C2450 		cmp	DWORD PTR 80[rsp], 2	# %sfp,
 19737      02
 19738 076f 7E86     		jle	.L1849	#,
1193:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_t)tu
 19739              		.loc 1 1193 51 is_stmt 1 view .LVU6832
 19740              	.LVL1354:
 19741              	.LBB1020:
 19742              	.LBI1020:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19743              		.loc 3 105 1 view .LVU6833
 19744              	.LBB1021:
 19745              		.loc 3 107 3 view .LVU6834
 19746              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19747              		.loc 3 107 10 is_stmt 0 view .LVU6835
 19748 0771 4883EC08 		sub	rsp, 8	#,
 19749              		.cfi_def_cfa_offset 248
 19750              	.LVL1355:
GAS LISTING /tmp/cctyCFAS.s 			page 527


 19751              		.loc 3 107 10 view .LVU6836
 19752 0775 C4C17B10 		vmovsd	xmm0, QWORD PTR 72[r15]	# MEM[base: _300, offset: 72B], MEM[base: _300, offset: 72B]
 19752      4748
 19753 077b 498B4F10 		mov	rcx, QWORD PTR 16[r15]	# MEM[base: _300, offset: 16B], MEM[base: _300, offset: 16B]
 19754 077f 498B5708 		mov	rdx, QWORD PTR 8[r15]	# MEM[base: _300, offset: 8B], MEM[base: _300, offset: 8B]
 19755 0783 41FF7730 		push	QWORD PTR 48[r15]	# MEM[base: _300, offset: 48B]
 19756              		.cfi_def_cfa_offset 256
 19757 0787 C4C17B10 		vmovsd	xmm2, QWORD PTR 80[r15]	#, MEM[base: _300, offset: 80B]
 19757      5750
 19758 078d C4C17B10 		vmovsd	xmm1, QWORD PTR 56[r15]	#, MEM[base: _300, offset: 56B]
 19758      4F38
 19759 0793 41FF7740 		push	QWORD PTR 64[r15]	# MEM[base: _300, offset: 64B]
 19760              		.cfi_def_cfa_offset 264
 19761 0797 488D3500 		lea	rsi, .LC47[rip]	#,
 19761      000000
 19762 079e BF010000 		mov	edi, 1	#,
 19762      00
 19763 07a3 41FF7728 		push	QWORD PTR 40[r15]	# MEM[base: _300, offset: 40B]
 19764              		.cfi_def_cfa_offset 272
 19765 07a7 B8030000 		mov	eax, 3	#,
 19765      00
 19766 07ac 4D8B4F20 		mov	r9, QWORD PTR 32[r15]	#, MEM[base: _300, offset: 32B]
 19767 07b0 4D8B4718 		mov	r8, QWORD PTR 24[r15]	#, MEM[base: _300, offset: 24B]
 19768 07b4 E8000000 		call	__printf_chk@PLT	#
 19768      00
 19769              	.LVL1356:
 19770 07b9 4883C420 		add	rsp, 32	#,
 19771              		.cfi_def_cfa_offset 240
 19772              	.LVL1357:
 19773              		.loc 3 107 10 view .LVU6837
 19774 07bd E935FFFF 		jmp	.L1849	#
 19774      FF
 19775              	.LVL1358:
 19776              		.p2align 4,,10
 19777 07c2 660F1F44 		.p2align 3
 19777      0000
 19778              	.L1959:
 19779              		.loc 3 107 10 view .LVU6838
 19780              	.LBE1021:
 19781              	.LBE1020:
1187:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_t)tu
 19782              		.loc 1 1187 54 is_stmt 1 view .LVU6839
 19783              	.LBB1022:
 19784              	.LBI1022:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19785              		.loc 3 105 1 view .LVU6840
 19786              	.LBB1023:
 19787              		.loc 3 107 3 view .LVU6841
 19788              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19789              		.loc 3 107 10 is_stmt 0 view .LVU6842
 19790 07c8 4883EC08 		sub	rsp, 8	#,
 19791              		.cfi_def_cfa_offset 248
 19792 07cc C4C17B10 		vmovsd	xmm0, QWORD PTR 72[r15]	# MEM[base: _300, offset: 72B], MEM[base: _300, offset: 72B]
 19792      4748
 19793 07d2 498B4F10 		mov	rcx, QWORD PTR 16[r15]	# MEM[base: _300, offset: 16B], MEM[base: _300, offset: 16B]
 19794 07d6 498B5708 		mov	rdx, QWORD PTR 8[r15]	# MEM[base: _300, offset: 8B], MEM[base: _300, offset: 8B]
 19795 07da 41FF7730 		push	QWORD PTR 48[r15]	# MEM[base: _300, offset: 48B]
GAS LISTING /tmp/cctyCFAS.s 			page 528


 19796              		.cfi_def_cfa_offset 256
 19797 07de C4C17B10 		vmovsd	xmm1, QWORD PTR 56[r15]	#, MEM[base: _300, offset: 56B]
 19797      4F38
 19798 07e4 488D3500 		lea	rsi, .LC46[rip]	#,
 19798      000000
 19799 07eb 41FF7740 		push	QWORD PTR 64[r15]	# MEM[base: _300, offset: 64B]
 19800              		.cfi_def_cfa_offset 264
 19801 07ef BF010000 		mov	edi, 1	#,
 19801      00
 19802 07f4 B8030000 		mov	eax, 3	#,
 19802      00
 19803 07f9 41FF7728 		push	QWORD PTR 40[r15]	# MEM[base: _300, offset: 40B]
 19804              		.cfi_def_cfa_offset 272
 19805 07fd 4D8B4F20 		mov	r9, QWORD PTR 32[r15]	#, MEM[base: _300, offset: 32B]
 19806 0801 4D8B4718 		mov	r8, QWORD PTR 24[r15]	#, MEM[base: _300, offset: 24B]
 19807 0805 C5FB1154 		vmovsd	QWORD PTR 32[rsp], xmm2	# %sfp, _242
 19807      2420
 19808 080b E8000000 		call	__printf_chk@PLT	#
 19808      00
 19809              	.LVL1359:
 19810              		.loc 3 107 10 view .LVU6843
 19811 0810 4C896424 		mov	QWORD PTR 72[rsp], r12	# %sfp, mediumstep_faster
 19811      48
 19812 0815 4883C420 		add	rsp, 32	#,
 19813              		.cfi_def_cfa_offset 240
 19814              	.LVL1360:
 19815              		.loc 3 107 10 view .LVU6844
 19816 0819 4C896C24 		mov	QWORD PTR 32[rsp], r13	# %sfp, smallstep_faster
 19816      20
 19817              	.LBE1023:
 19818              	.LBE1022:
 19819              	# sieve_extend.c:1184:                         best_blocksize_bits = blocksize_bits;
1184:sieve_extend.c ****                         best_smallstep_faster = smallstep_faster;
 19820              		.loc 1 1184 45 view .LVU6845
 19821 081e 48895C24 		mov	QWORD PTR 24[rsp], rbx	# %sfp, ivtmp.767
 19821      18
 19822              	.LBB1025:
 19823              	.LBB1024:
 19824              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19825              		.loc 3 107 10 view .LVU6846
 19826 0823 E942FFFF 		jmp	.L1852	#
 19826      FF
 19827              	.LVL1361:
 19828 0828 0F1F8400 		.p2align 4,,10
 19828      00000000 
 19829              		.p2align 3
 19830              	.L1850:
 19831              		.loc 3 107 10 view .LVU6847
 19832              	.LBE1024:
 19833              	.LBE1025:
 19834              	.LBE1026:
 19835              	.LBE1027:
1166:sieve_extend.c ****                 for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) && (fr
 19836              		.loc 1 1166 63 is_stmt 1 view .LVU6848
1166:sieve_extend.c ****                 for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) && (fr
 19837              		.loc 1 1166 46 view .LVU6849
 19838              	# sieve_extend.c:1166:             for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /
GAS LISTING /tmp/cctyCFAS.s 			page 529


1166:sieve_extend.c ****                 for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) && (fr
 19839              		.loc 1 1166 76 is_stmt 0 view .LVU6850
 19840 0830 48D16C24 		shr	QWORD PTR 8[rsp]	# %sfp
 19840      08
 19841              	.LVL1362:
 19842              	# sieve_extend.c:1166:             for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /
1166:sieve_extend.c ****                 for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) && (fr
 19843              		.loc 1 1166 13 view .LVU6851
 19844 0835 FF4C2454 		dec	DWORD PTR 84[rsp]	# %sfp
 19845 0839 0F8579FE 		jne	.L1856	#,
 19845      FFFF
 19846              	.LBE1017:
1165:sieve_extend.c ****             for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 19847              		.loc 1 1165 94 is_stmt 1 view .LVU6852
 19848              	# sieve_extend.c:1165:         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_fast
1165:sieve_extend.c ****             for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 19849              		.loc 1 1165 112 is_stmt 0 view .LVU6853
 19850 083f 4C036424 		add	r12, QWORD PTR 88[rsp]	# mediumstep_faster, %sfp
 19850      58
 19851              	.LVL1363:
1165:sieve_extend.c ****             for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 19852              		.loc 1 1165 62 is_stmt 1 view .LVU6854
 19853              	# sieve_extend.c:1165:         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_fast
1165:sieve_extend.c ****             for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 19854              		.loc 1 1165 9 is_stmt 0 view .LVU6855
 19855 0844 4983FC40 		cmp	r12, 64	# mediumstep_faster,
 19856 0848 0F8652FE 		jbe	.L1858	#,
 19856      FFFF
 19857              	.LBE1016:
1164:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 19858              		.loc 1 1164 75 is_stmt 1 view .LVU6856
 19859              	# sieve_extend.c:1164:     for (counter_t smallstep_faster = 0; smallstep_faster <= WORD_SIZE/2; sm
1164:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 19860              		.loc 1 1164 92 is_stmt 0 view .LVU6857
 19861 084e 4C036C24 		add	r13, QWORD PTR 88[rsp]	# smallstep_faster, %sfp
 19861      58
 19862              	.LVL1364:
1164:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 19863              		.loc 1 1164 42 is_stmt 1 view .LVU6858
 19864              	# sieve_extend.c:1164:     for (counter_t smallstep_faster = 0; smallstep_faster <= WORD_SIZE/2; sm
1164:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 19865              		.loc 1 1164 5 is_stmt 0 view .LVU6859
 19866 0853 4983FD20 		cmp	r13, 32	# smallstep_faster,
 19867 0857 0F863AFE 		jbe	.L1848	#,
 19867      FFFF
 19868              	.LBE1029:
 19869              	# sieve_extend.c:1203:     if (option_verboselevel >= 2) {
1203:sieve_extend.c ****         printf("%ju results. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju\n"
 19870              		.loc 1 1203 8 view .LVU6860
 19871 085d 837C2450 		cmp	DWORD PTR 80[rsp], 1	# %sfp,
 19871      01
 19872 0862 4D89F7   		mov	r15, r14	# tuning_results, tuning_results
 19873 0865 4C8B7424 		mov	r14, QWORD PTR 16[rsp]	# tuning_result, %sfp
 19873      10
 19874              	.LVL1365:
1203:sieve_extend.c ****         printf("%ju results. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju\n"
 19875              		.loc 1 1203 5 is_stmt 1 view .LVU6861
GAS LISTING /tmp/cctyCFAS.s 			page 530


 19876              	# sieve_extend.c:1203:     if (option_verboselevel >= 2) {
1203:sieve_extend.c ****         printf("%ju results. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju\n"
 19877              		.loc 1 1203 8 is_stmt 0 view .LVU6862
 19878 086a 7E31     		jle	.L1859	#,
1204:sieve_extend.c ****         printf("Best options\n");
 19879              		.loc 1 1204 9 is_stmt 1 view .LVU6863
 19880              	.LVL1366:
 19881              	.LBB1030:
 19882              	.LBI1030:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19883              		.loc 3 105 1 view .LVU6864
 19884              	.LBB1031:
 19885              		.loc 3 107 3 view .LVU6865
 19886              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19887              		.loc 3 107 10 is_stmt 0 view .LVU6866
 19888 086c 4C8B4C24 		mov	r9, QWORD PTR 40[rsp]	#, %sfp
 19888      28
 19889 0871 4C8B4424 		mov	r8, QWORD PTR 32[rsp]	#, %sfp
 19889      20
 19890 0876 488B4C24 		mov	rcx, QWORD PTR 24[rsp]	#, %sfp
 19890      18
 19891 087b BF010000 		mov	edi, 1	#,
 19891      00
 19892 0880 4C89FA   		mov	rdx, r15	#, tuning_results
 19893 0883 488D3500 		lea	rsi, .LC48[rip]	#,
 19893      000000
 19894 088a 31C0     		xor	eax, eax	#
 19895 088c E8000000 		call	__printf_chk@PLT	#
 19895      00
 19896              	.LVL1367:
 19897              		.loc 3 107 10 view .LVU6867
 19898              	.LBE1031:
 19899              	.LBE1030:
1205:sieve_extend.c ****     }
 19900              		.loc 1 1205 9 is_stmt 1 view .LVU6868
 19901              	.LBB1032:
 19902              	.LBI1032:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19903              		.loc 3 105 1 view .LVU6869
 19904              	.LBB1033:
 19905              		.loc 3 107 3 view .LVU6870
 19906              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19907              		.loc 3 107 10 is_stmt 0 view .LVU6871
 19908 0891 488D3D00 		lea	rdi, .LC49[rip]	#,
 19908      000000
 19909 0898 E8000000 		call	puts@PLT	#
 19909      00
 19910              	.LVL1368:
 19911              	.L1859:
 19912              		.loc 3 107 10 view .LVU6872
 19913              	.LBE1033:
 19914              	.LBE1032:
 19915              	.LBB1034:
 19916              	# sieve_extend.c:1219:                 for (counter_t tuning_result_index=0; tuning_result_index<mi
1219:sieve_extend.c ****                     printf("...blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %
 19917              		.loc 1 1219 75 view .LVU6873
 19918 089d 4C8B6424 		mov	r12, QWORD PTR 48[rsp]	# sample_max, %sfp
GAS LISTING /tmp/cctyCFAS.s 			page 531


 19918      30
 19919              	.LVL1369:
1219:sieve_extend.c ****                     printf("...blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %
 19920              		.loc 1 1219 75 view .LVU6874
 19921              	.LBE1034:
 19922              	.LBB1039:
 19923              	# sieve_extend.c:1231:         for (counter_t i=0; i<tuning_results; i++) {
1231:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19924              		.loc 1 1231 24 view .LVU6875
 19925 08a2 31DB     		xor	ebx, ebx	# step
 19926              	.LVL1370:
 19927              	.L1864:
1231:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19928              		.loc 1 1231 24 view .LVU6876
 19929              	.LBE1039:
1208:sieve_extend.c ****         qsort(tuning_result, (size_t)tuning_results, sizeof(tuning_result_type), compare_tuning_res
 19930              		.loc 1 1208 11 is_stmt 1 view .LVU6877
 19931 08a4 4983FF04 		cmp	r15, 4	# tuning_results,
 19932 08a8 0F861A03 		jbe	.L1960	#,
 19932      0000
1209:sieve_extend.c ****         step++;
 19933              		.loc 1 1209 9 view .LVU6878
 19934 08ae 488D0D00 		lea	rcx, compare_tuning_result[rip]	#,
 19934      000000
 19935 08b5 BA580000 		mov	edx, 88	#,
 19935      00
 19936 08ba 4C89FE   		mov	rsi, r15	#, tuning_results
 19937 08bd 4C89F7   		mov	rdi, r14	#, tuning_result
 19938 08c0 E8000000 		call	qsort@PLT	#
 19938      00
 19939              	.LVL1371:
1210:sieve_extend.c ****         if (option_verboselevel >= 2) {
 19940              		.loc 1 1210 9 view .LVU6879
 19941              	# sieve_extend.c:1210:         step++;
1210:sieve_extend.c ****         if (option_verboselevel >= 2) {
 19942              		.loc 1 1210 13 is_stmt 0 view .LVU6880
 19943 08c5 48FFC3   		inc	rbx	# step
 19944              	.LVL1372:
1211:sieve_extend.c ****             tuning_result_index = 0;
 19945              		.loc 1 1211 9 is_stmt 1 view .LVU6881
 19946              	# sieve_extend.c:1211:         if (option_verboselevel >= 2) {
1211:sieve_extend.c ****             tuning_result_index = 0;
 19947              		.loc 1 1211 12 is_stmt 0 view .LVU6882
 19948 08c8 837C2450 		cmp	DWORD PTR 80[rsp], 1	# %sfp,
 19948      01
 19949 08cd 0F8FE201 		jg	.L1860	#,
 19949      0000
 19950              	.L1862:
1229:sieve_extend.c **** 
 19951              		.loc 1 1229 9 is_stmt 1 view .LVU6883
 19952              	# sieve_extend.c:1229:         tuning_results = tuning_results / 2;
1229:sieve_extend.c **** 
 19953              		.loc 1 1229 24 is_stmt 0 view .LVU6884
 19954 08d3 49D1EF   		shr	r15	# tuning_results
 19955              	.LVL1373:
1231:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19956              		.loc 1 1231 9 is_stmt 1 view .LVU6885
GAS LISTING /tmp/cctyCFAS.s 			page 532


 19957              	.LBB1040:
1231:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19958              		.loc 1 1231 14 view .LVU6886
1231:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19959              		.loc 1 1231 29 view .LVU6887
 19960 08d6 4D89FA   		mov	r10, r15	# tmp431, tuning_results
 19961 08d9 498D6E30 		lea	rbp, 48[r14]	# ivtmp.748,
 19962              	# sieve_extend.c:1231:         for (counter_t i=0; i<tuning_results; i++) {
1231:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19963              		.loc 1 1231 24 is_stmt 0 view .LVU6888
 19964 08dd 4531ED   		xor	r13d, r13d	# i
 19965 08e0 4183E207 		and	r10d, 7	# tmp431,
 19966 08e4 0F84D400 		je	.L1861	#,
 19966      0000
 19967 08ea 4983FA01 		cmp	r10, 1	# tmp431,
 19968 08ee 0F84AB00 		je	.L1919	#,
 19968      0000
 19969 08f4 4983FA02 		cmp	r10, 2	# tmp431,
 19970 08f8 0F848B00 		je	.L1920	#,
 19970      0000
 19971 08fe 4983FA03 		cmp	r10, 3	# tmp431,
 19972 0902 746F     		je	.L1921	#,
 19973 0904 4983FA04 		cmp	r10, 4	# tmp431,
 19974 0908 7453     		je	.L1922	#,
 19975 090a 4983FA05 		cmp	r10, 5	# tmp431,
 19976 090e 7437     		je	.L1923	#,
 19977 0910 4983FA06 		cmp	r10, 6	# tmp431,
 19978 0914 741B     		je	.L1924	#,
1232:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 19979              		.loc 1 1232 13 is_stmt 1 view .LVU6889
 19980 0916 31F6     		xor	esi, esi	#
 19981 0918 4C89F7   		mov	rdi, r14	#, tuning_result
 19982 091b E8000000 		call	tune_benchmark	#
 19982      00
 19983              	.LVL1374:
1233:sieve_extend.c ****         }
 19984              		.loc 1 1233 13 view .LVU6890
 19985              	# sieve_extend.c:1231:         for (counter_t i=0; i<tuning_results; i++) {
1231:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19986              		.loc 1 1231 48 is_stmt 0 view .LVU6891
 19987 0920 41BD0100 		mov	r13d, 1	# i,
 19987      0000
 19988              	# sieve_extend.c:1233:             tuning_result[i].sample_max += sample_max;
1233:sieve_extend.c ****         }
 19989              		.loc 1 1233 41 view .LVU6892
 19990 0926 4C016500 		add	QWORD PTR 0[rbp], r12	# MEM[base: _77, offset: 0B], sample_max
1231:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19991              		.loc 1 1231 47 is_stmt 1 view .LVU6893
 19992              	.LVL1375:
1231:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19993              		.loc 1 1231 29 view .LVU6894
 19994 092a 498DAE88 		lea	rbp, 136[r14]	# ivtmp.748,
 19994      000000
 19995              	.L1924:
1232:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 19996              		.loc 1 1232 13 view .LVU6895
 19997 0931 4C89EE   		mov	rsi, r13	#, i
GAS LISTING /tmp/cctyCFAS.s 			page 533


 19998 0934 4C89F7   		mov	rdi, r14	#, tuning_result
 19999 0937 E8000000 		call	tune_benchmark	#
 19999      00
 20000              	.LVL1376:
1233:sieve_extend.c ****         }
 20001              		.loc 1 1233 13 view .LVU6896
 20002              	# sieve_extend.c:1231:         for (counter_t i=0; i<tuning_results; i++) {
1231:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20003              		.loc 1 1231 48 is_stmt 0 view .LVU6897
 20004 093c 49FFC5   		inc	r13	# i
 20005              	# sieve_extend.c:1233:             tuning_result[i].sample_max += sample_max;
1233:sieve_extend.c ****         }
 20006              		.loc 1 1233 41 view .LVU6898
 20007 093f 4C016500 		add	QWORD PTR 0[rbp], r12	# MEM[base: _77, offset: 0B], sample_max
1231:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20008              		.loc 1 1231 47 is_stmt 1 view .LVU6899
1231:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20009              		.loc 1 1231 29 view .LVU6900
 20010 0943 4883C558 		add	rbp, 88	# ivtmp.748,
 20011              	.L1923:
1232:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20012              		.loc 1 1232 13 view .LVU6901
 20013 0947 4C89EE   		mov	rsi, r13	#, i
 20014 094a 4C89F7   		mov	rdi, r14	#, tuning_result
 20015 094d E8000000 		call	tune_benchmark	#
 20015      00
 20016              	.LVL1377:
1233:sieve_extend.c ****         }
 20017              		.loc 1 1233 13 view .LVU6902
 20018              	# sieve_extend.c:1231:         for (counter_t i=0; i<tuning_results; i++) {
1231:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20019              		.loc 1 1231 48 is_stmt 0 view .LVU6903
 20020 0952 49FFC5   		inc	r13	# i
 20021              	# sieve_extend.c:1233:             tuning_result[i].sample_max += sample_max;
1233:sieve_extend.c ****         }
 20022              		.loc 1 1233 41 view .LVU6904
 20023 0955 4C016500 		add	QWORD PTR 0[rbp], r12	# MEM[base: _77, offset: 0B], sample_max
1231:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20024              		.loc 1 1231 47 is_stmt 1 view .LVU6905
1231:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20025              		.loc 1 1231 29 view .LVU6906
 20026 0959 4883C558 		add	rbp, 88	# ivtmp.748,
 20027              	.L1922:
1232:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20028              		.loc 1 1232 13 view .LVU6907
 20029 095d 4C89EE   		mov	rsi, r13	#, i
 20030 0960 4C89F7   		mov	rdi, r14	#, tuning_result
 20031 0963 E8000000 		call	tune_benchmark	#
 20031      00
 20032              	.LVL1378:
1233:sieve_extend.c ****         }
 20033              		.loc 1 1233 13 view .LVU6908
 20034              	# sieve_extend.c:1231:         for (counter_t i=0; i<tuning_results; i++) {
1231:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20035              		.loc 1 1231 48 is_stmt 0 view .LVU6909
 20036 0968 49FFC5   		inc	r13	# i
 20037              	# sieve_extend.c:1233:             tuning_result[i].sample_max += sample_max;
GAS LISTING /tmp/cctyCFAS.s 			page 534


1233:sieve_extend.c ****         }
 20038              		.loc 1 1233 41 view .LVU6910
 20039 096b 4C016500 		add	QWORD PTR 0[rbp], r12	# MEM[base: _77, offset: 0B], sample_max
1231:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20040              		.loc 1 1231 47 is_stmt 1 view .LVU6911
1231:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20041              		.loc 1 1231 29 view .LVU6912
 20042 096f 4883C558 		add	rbp, 88	# ivtmp.748,
 20043              	.L1921:
1232:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20044              		.loc 1 1232 13 view .LVU6913
 20045 0973 4C89EE   		mov	rsi, r13	#, i
 20046 0976 4C89F7   		mov	rdi, r14	#, tuning_result
 20047 0979 E8000000 		call	tune_benchmark	#
 20047      00
 20048              	.LVL1379:
1233:sieve_extend.c ****         }
 20049              		.loc 1 1233 13 view .LVU6914
 20050              	# sieve_extend.c:1231:         for (counter_t i=0; i<tuning_results; i++) {
1231:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20051              		.loc 1 1231 48 is_stmt 0 view .LVU6915
 20052 097e 49FFC5   		inc	r13	# i
 20053              	# sieve_extend.c:1233:             tuning_result[i].sample_max += sample_max;
1233:sieve_extend.c ****         }
 20054              		.loc 1 1233 41 view .LVU6916
 20055 0981 4C016500 		add	QWORD PTR 0[rbp], r12	# MEM[base: _77, offset: 0B], sample_max
1231:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20056              		.loc 1 1231 47 is_stmt 1 view .LVU6917
1231:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20057              		.loc 1 1231 29 view .LVU6918
 20058 0985 4883C558 		add	rbp, 88	# ivtmp.748,
 20059              	.L1920:
1232:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20060              		.loc 1 1232 13 view .LVU6919
 20061 0989 4C89EE   		mov	rsi, r13	#, i
 20062 098c 4C89F7   		mov	rdi, r14	#, tuning_result
 20063 098f E8000000 		call	tune_benchmark	#
 20063      00
 20064              	.LVL1380:
1233:sieve_extend.c ****         }
 20065              		.loc 1 1233 13 view .LVU6920
 20066              	# sieve_extend.c:1231:         for (counter_t i=0; i<tuning_results; i++) {
1231:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20067              		.loc 1 1231 48 is_stmt 0 view .LVU6921
 20068 0994 49FFC5   		inc	r13	# i
 20069              	# sieve_extend.c:1233:             tuning_result[i].sample_max += sample_max;
1233:sieve_extend.c ****         }
 20070              		.loc 1 1233 41 view .LVU6922
 20071 0997 4C016500 		add	QWORD PTR 0[rbp], r12	# MEM[base: _77, offset: 0B], sample_max
1231:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20072              		.loc 1 1231 47 is_stmt 1 view .LVU6923
1231:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20073              		.loc 1 1231 29 view .LVU6924
 20074 099b 4883C558 		add	rbp, 88	# ivtmp.748,
 20075              	.L1919:
1232:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20076              		.loc 1 1232 13 view .LVU6925
GAS LISTING /tmp/cctyCFAS.s 			page 535


 20077 099f 4C89EE   		mov	rsi, r13	#, i
 20078 09a2 4C89F7   		mov	rdi, r14	#, tuning_result
 20079              	# sieve_extend.c:1231:         for (counter_t i=0; i<tuning_results; i++) {
1231:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20080              		.loc 1 1231 48 is_stmt 0 view .LVU6926
 20081 09a5 49FFC5   		inc	r13	# i
 20082              	# sieve_extend.c:1232:             tune_benchmark(tuning_result, i);
1232:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20083              		.loc 1 1232 13 view .LVU6927
 20084 09a8 E8000000 		call	tune_benchmark	#
 20084      00
 20085              	.LVL1381:
1233:sieve_extend.c ****         }
 20086              		.loc 1 1233 13 is_stmt 1 view .LVU6928
 20087              	# sieve_extend.c:1233:             tuning_result[i].sample_max += sample_max;
1233:sieve_extend.c ****         }
 20088              		.loc 1 1233 41 is_stmt 0 view .LVU6929
 20089 09ad 4C016500 		add	QWORD PTR 0[rbp], r12	# MEM[base: _77, offset: 0B], sample_max
1231:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20090              		.loc 1 1231 47 is_stmt 1 view .LVU6930
1231:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20091              		.loc 1 1231 29 view .LVU6931
 20092 09b1 4883C558 		add	rbp, 88	# ivtmp.748,
 20093              	# sieve_extend.c:1231:         for (counter_t i=0; i<tuning_results; i++) {
1231:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20094              		.loc 1 1231 9 is_stmt 0 view .LVU6932
 20095 09b5 4D39EF   		cmp	r15, r13	# tuning_results, i
 20096 09b8 0F84E6FE 		je	.L1864	#,
 20096      FFFF
 20097              	.L1861:
1232:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20098              		.loc 1 1232 13 is_stmt 1 view .LVU6933
 20099 09be 4C89EE   		mov	rsi, r13	#, i
 20100 09c1 4C89F7   		mov	rdi, r14	#, tuning_result
 20101 09c4 E8000000 		call	tune_benchmark	#
 20101      00
 20102              	.LVL1382:
1233:sieve_extend.c ****         }
 20103              		.loc 1 1233 13 view .LVU6934
 20104              	# sieve_extend.c:1233:             tuning_result[i].sample_max += sample_max;
1233:sieve_extend.c ****         }
 20105              		.loc 1 1233 41 is_stmt 0 view .LVU6935
 20106 09c9 4C016500 		add	QWORD PTR 0[rbp], r12	# MEM[base: _77, offset: 0B], sample_max
1231:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20107              		.loc 1 1231 47 is_stmt 1 view .LVU6936
 20108 09cd 4C8D5D58 		lea	r11, 88[rbp]	# tmp433,
 20109              	# sieve_extend.c:1231:         for (counter_t i=0; i<tuning_results; i++) {
1231:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20110              		.loc 1 1231 48 is_stmt 0 view .LVU6937
 20111 09d1 498D7501 		lea	rsi, 1[r13]	# tmp432,
1231:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20112              		.loc 1 1231 29 is_stmt 1 view .LVU6938
 20113              	# sieve_extend.c:1232:             tune_benchmark(tuning_result, i);
1232:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20114              		.loc 1 1232 13 is_stmt 0 view .LVU6939
 20115 09d5 4C89F7   		mov	rdi, r14	#, tuning_result
 20116 09d8 4C891C24 		mov	QWORD PTR [rsp], r11	# %sfp, tmp433
GAS LISTING /tmp/cctyCFAS.s 			page 536


1232:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20117              		.loc 1 1232 13 is_stmt 1 view .LVU6940
 20118 09dc E8000000 		call	tune_benchmark	#
 20118      00
 20119              	.LVL1383:
1233:sieve_extend.c ****         }
 20120              		.loc 1 1233 13 view .LVU6941
 20121              	# sieve_extend.c:1233:             tuning_result[i].sample_max += sample_max;
1233:sieve_extend.c ****         }
 20122              		.loc 1 1233 41 is_stmt 0 view .LVU6942
 20123 09e1 488B3C24 		mov	rdi, QWORD PTR [rsp]	# tmp433, %sfp
 20124 09e5 488D8DB0 		lea	rcx, 176[rbp]	# ivtmp.748,
 20124      000000
 20125 09ec 4C0127   		add	QWORD PTR [rdi], r12	# MEM[base: _77, offset: 0B], sample_max
1231:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20126              		.loc 1 1231 47 is_stmt 1 view .LVU6943
 20127              	# sieve_extend.c:1231:         for (counter_t i=0; i<tuning_results; i++) {
1231:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20128              		.loc 1 1231 48 is_stmt 0 view .LVU6944
 20129 09ef 498D7502 		lea	rsi, 2[r13]	# i,
1231:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20130              		.loc 1 1231 29 is_stmt 1 view .LVU6945
 20131              	# sieve_extend.c:1232:             tune_benchmark(tuning_result, i);
1232:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20132              		.loc 1 1232 13 is_stmt 0 view .LVU6946
 20133 09f3 4C89F7   		mov	rdi, r14	#, tuning_result
 20134 09f6 48890C24 		mov	QWORD PTR [rsp], rcx	# %sfp, ivtmp.748
1232:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20135              		.loc 1 1232 13 is_stmt 1 view .LVU6947
 20136 09fa E8000000 		call	tune_benchmark	#
 20136      00
 20137              	.LVL1384:
1233:sieve_extend.c ****         }
 20138              		.loc 1 1233 13 view .LVU6948
 20139              	# sieve_extend.c:1233:             tuning_result[i].sample_max += sample_max;
1233:sieve_extend.c ****         }
 20140              		.loc 1 1233 41 is_stmt 0 view .LVU6949
 20141 09ff 488B3424 		mov	rsi, QWORD PTR [rsp]	# ivtmp.748, %sfp
 20142 0a03 4C8D8D08 		lea	r9, 264[rbp]	# ivtmp.748,
 20142      010000
 20143 0a0a 4C0126   		add	QWORD PTR [rsi], r12	# MEM[base: _77, offset: 0B], sample_max
1231:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20144              		.loc 1 1231 47 is_stmt 1 view .LVU6950
 20145              	# sieve_extend.c:1232:             tune_benchmark(tuning_result, i);
1232:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20146              		.loc 1 1232 13 is_stmt 0 view .LVU6951
 20147 0a0d 4C89F7   		mov	rdi, r14	#, tuning_result
 20148              	# sieve_extend.c:1231:         for (counter_t i=0; i<tuning_results; i++) {
1231:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20149              		.loc 1 1231 48 view .LVU6952
 20150 0a10 498D7503 		lea	rsi, 3[r13]	# i,
1231:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20151              		.loc 1 1231 29 is_stmt 1 view .LVU6953
 20152 0a14 4C890C24 		mov	QWORD PTR [rsp], r9	# %sfp, ivtmp.748
1232:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20153              		.loc 1 1232 13 view .LVU6954
 20154 0a18 E8000000 		call	tune_benchmark	#
GAS LISTING /tmp/cctyCFAS.s 			page 537


 20154      00
 20155              	.LVL1385:
1233:sieve_extend.c ****         }
 20156              		.loc 1 1233 13 view .LVU6955
 20157              	# sieve_extend.c:1233:             tuning_result[i].sample_max += sample_max;
1233:sieve_extend.c ****         }
 20158              		.loc 1 1233 41 is_stmt 0 view .LVU6956
 20159 0a1d 488B1424 		mov	rdx, QWORD PTR [rsp]	# ivtmp.748, %sfp
 20160 0a21 488D8560 		lea	rax, 352[rbp]	# ivtmp.748,
 20160      010000
 20161 0a28 4C0122   		add	QWORD PTR [rdx], r12	# MEM[base: _77, offset: 0B], sample_max
1231:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20162              		.loc 1 1231 47 is_stmt 1 view .LVU6957
 20163              	# sieve_extend.c:1231:         for (counter_t i=0; i<tuning_results; i++) {
1231:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20164              		.loc 1 1231 48 is_stmt 0 view .LVU6958
 20165 0a2b 498D7504 		lea	rsi, 4[r13]	# i,
1231:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20166              		.loc 1 1231 29 is_stmt 1 view .LVU6959
 20167              	# sieve_extend.c:1232:             tune_benchmark(tuning_result, i);
1232:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20168              		.loc 1 1232 13 is_stmt 0 view .LVU6960
 20169 0a2f 4C89F7   		mov	rdi, r14	#, tuning_result
 20170 0a32 48890424 		mov	QWORD PTR [rsp], rax	# %sfp, ivtmp.748
1232:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20171              		.loc 1 1232 13 is_stmt 1 view .LVU6961
 20172 0a36 E8000000 		call	tune_benchmark	#
 20172      00
 20173              	.LVL1386:
1233:sieve_extend.c ****         }
 20174              		.loc 1 1233 13 view .LVU6962
 20175              	# sieve_extend.c:1233:             tuning_result[i].sample_max += sample_max;
1233:sieve_extend.c ****         }
 20176              		.loc 1 1233 41 is_stmt 0 view .LVU6963
 20177 0a3b 4C8B0424 		mov	r8, QWORD PTR [rsp]	# ivtmp.748, %sfp
 20178 0a3f 4C8D95B8 		lea	r10, 440[rbp]	# ivtmp.748,
 20178      010000
 20179 0a46 4D0120   		add	QWORD PTR [r8], r12	# MEM[base: _77, offset: 0B], sample_max
1231:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20180              		.loc 1 1231 47 is_stmt 1 view .LVU6964
 20181              	# sieve_extend.c:1231:         for (counter_t i=0; i<tuning_results; i++) {
1231:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20182              		.loc 1 1231 48 is_stmt 0 view .LVU6965
 20183 0a49 498D7505 		lea	rsi, 5[r13]	# i,
1231:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20184              		.loc 1 1231 29 is_stmt 1 view .LVU6966
 20185              	# sieve_extend.c:1232:             tune_benchmark(tuning_result, i);
1232:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20186              		.loc 1 1232 13 is_stmt 0 view .LVU6967
 20187 0a4d 4C89F7   		mov	rdi, r14	#, tuning_result
 20188 0a50 4C891424 		mov	QWORD PTR [rsp], r10	# %sfp, ivtmp.748
1232:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20189              		.loc 1 1232 13 is_stmt 1 view .LVU6968
 20190 0a54 E8000000 		call	tune_benchmark	#
 20190      00
 20191              	.LVL1387:
1233:sieve_extend.c ****         }
GAS LISTING /tmp/cctyCFAS.s 			page 538


 20192              		.loc 1 1233 13 view .LVU6969
 20193              	# sieve_extend.c:1233:             tuning_result[i].sample_max += sample_max;
1233:sieve_extend.c ****         }
 20194              		.loc 1 1233 41 is_stmt 0 view .LVU6970
 20195 0a59 4C8B1C24 		mov	r11, QWORD PTR [rsp]	# ivtmp.748, %sfp
 20196 0a5d 488DBD10 		lea	rdi, 528[rbp]	# ivtmp.748,
 20196      020000
 20197 0a64 4D0123   		add	QWORD PTR [r11], r12	# MEM[base: _77, offset: 0B], sample_max
1231:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20198              		.loc 1 1231 47 is_stmt 1 view .LVU6971
 20199              	# sieve_extend.c:1231:         for (counter_t i=0; i<tuning_results; i++) {
1231:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20200              		.loc 1 1231 48 is_stmt 0 view .LVU6972
 20201 0a67 498D7506 		lea	rsi, 6[r13]	# i,
1231:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20202              		.loc 1 1231 29 is_stmt 1 view .LVU6973
 20203 0a6b 48893C24 		mov	QWORD PTR [rsp], rdi	# %sfp, ivtmp.748
1232:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20204              		.loc 1 1232 13 view .LVU6974
 20205 0a6f 4C89F7   		mov	rdi, r14	#, tuning_result
 20206 0a72 E8000000 		call	tune_benchmark	#
 20206      00
 20207              	.LVL1388:
1233:sieve_extend.c ****         }
 20208              		.loc 1 1233 13 view .LVU6975
 20209              	# sieve_extend.c:1233:             tuning_result[i].sample_max += sample_max;
1233:sieve_extend.c ****         }
 20210              		.loc 1 1233 41 is_stmt 0 view .LVU6976
 20211 0a77 488B0C24 		mov	rcx, QWORD PTR [rsp]	# ivtmp.748, %sfp
 20212              	# sieve_extend.c:1231:         for (counter_t i=0; i<tuning_results; i++) {
1231:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20213              		.loc 1 1231 48 view .LVU6977
 20214 0a7b 498D7507 		lea	rsi, 7[r13]	# i,
 20215              	# sieve_extend.c:1233:             tuning_result[i].sample_max += sample_max;
1233:sieve_extend.c ****         }
 20216              		.loc 1 1233 41 view .LVU6978
 20217 0a7f 4C0121   		add	QWORD PTR [rcx], r12	# MEM[base: _77, offset: 0B], sample_max
1231:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20218              		.loc 1 1231 47 is_stmt 1 view .LVU6979
1231:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20219              		.loc 1 1231 29 view .LVU6980
 20220 0a82 4C8D8D68 		lea	r9, 616[rbp]	# ivtmp.748,
 20220      020000
 20221              	# sieve_extend.c:1232:             tune_benchmark(tuning_result, i);
1232:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20222              		.loc 1 1232 13 is_stmt 0 view .LVU6981
 20223 0a89 4C89F7   		mov	rdi, r14	#, tuning_result
 20224 0a8c 4C890C24 		mov	QWORD PTR [rsp], r9	# %sfp, ivtmp.748
1232:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20225              		.loc 1 1232 13 is_stmt 1 view .LVU6982
 20226 0a90 E8000000 		call	tune_benchmark	#
 20226      00
 20227              	.LVL1389:
1233:sieve_extend.c ****         }
 20228              		.loc 1 1233 13 view .LVU6983
 20229              	# sieve_extend.c:1233:             tuning_result[i].sample_max += sample_max;
1233:sieve_extend.c ****         }
GAS LISTING /tmp/cctyCFAS.s 			page 539


 20230              		.loc 1 1233 41 is_stmt 0 view .LVU6984
 20231 0a95 488B3424 		mov	rsi, QWORD PTR [rsp]	# ivtmp.748, %sfp
 20232              	# sieve_extend.c:1231:         for (counter_t i=0; i<tuning_results; i++) {
1231:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20233              		.loc 1 1231 48 view .LVU6985
 20234 0a99 4983C508 		add	r13, 8	# i,
 20235              	# sieve_extend.c:1233:             tuning_result[i].sample_max += sample_max;
1233:sieve_extend.c ****         }
 20236              		.loc 1 1233 41 view .LVU6986
 20237 0a9d 4C0126   		add	QWORD PTR [rsi], r12	# MEM[base: _77, offset: 0B], sample_max
1231:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20238              		.loc 1 1231 47 is_stmt 1 view .LVU6987
 20239              	.LVL1390:
1231:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20240              		.loc 1 1231 29 view .LVU6988
 20241 0aa0 4881C5C0 		add	rbp, 704	# ivtmp.748,
 20241      020000
 20242              	# sieve_extend.c:1231:         for (counter_t i=0; i<tuning_results; i++) {
1231:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20243              		.loc 1 1231 9 is_stmt 0 view .LVU6989
 20244 0aa7 4D39EF   		cmp	r15, r13	# tuning_results, i
 20245 0aaa 0F850EFF 		jne	.L1861	#,
 20245      FFFF
 20246 0ab0 E9EFFDFF 		jmp	.L1864	#
 20246      FF
 20247              	.LVL1391:
 20248              	.L1860:
1231:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20249              		.loc 1 1231 9 view .LVU6990
 20250              	.LBE1040:
1212:sieve_extend.c ****             printf("(%ju) blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %2ju; 
 20251              		.loc 1 1212 13 is_stmt 1 view .LVU6991
1213:sieve_extend.c ****                             (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_
 20252              		.loc 1 1213 13 view .LVU6992
 20253              	.LBB1041:
 20254              	.LBI1041:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20255              		.loc 3 105 1 view .LVU6993
 20256              	.LBB1042:
 20257              		.loc 3 107 3 view .LVU6994
 20258              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 20259              		.loc 3 107 10 is_stmt 0 view .LVU6995
 20260 0ab5 C4C17B10 		vmovsd	xmm0, QWORD PTR 72[r14]	# tuning_result_229->elapsed_time, tuning_result_229->elapsed_time
 20260      4648
 20261 0abb 498B4E08 		mov	rcx, QWORD PTR 8[r14]	# tuning_result_229->blocksize_bits, tuning_result_229->blocksize_bits
 20262 0abf 41FF7630 		push	QWORD PTR 48[r14]	# tuning_result_229->sample_max
 20263              		.cfi_def_cfa_offset 248
 20264 0ac3 C4C17B10 		vmovsd	xmm2, QWORD PTR 80[r14]	#, tuning_result_229->avg
 20264      5650
 20265 0ac9 C4C17B10 		vmovsd	xmm1, QWORD PTR 56[r14]	#, tuning_result_229->sample_duration
 20265      4E38
 20266 0acf 41FF7640 		push	QWORD PTR 64[r14]	# tuning_result_229->passes
 20267              		.cfi_def_cfa_offset 256
 20268 0ad3 4889DA   		mov	rdx, rbx	#, step
 20269 0ad6 488D3500 		lea	rsi, .LC50[rip]	#,
 20269      000000
 20270 0add 41FF7628 		push	QWORD PTR 40[r14]	# tuning_result_229->mediumstep_faster
GAS LISTING /tmp/cctyCFAS.s 			page 540


 20271              		.cfi_def_cfa_offset 264
 20272 0ae1 BF010000 		mov	edi, 1	#,
 20272      00
 20273 0ae6 B8030000 		mov	eax, 3	#,
 20273      00
 20274 0aeb 41FF7620 		push	QWORD PTR 32[r14]	# tuning_result_229->smallstep_faster
 20275              		.cfi_def_cfa_offset 272
 20276 0aef 4D8B4E18 		mov	r9, QWORD PTR 24[r14]	#, tuning_result_229->free_bits
 20277 0af3 4D8B4610 		mov	r8, QWORD PTR 16[r14]	#, tuning_result_229->blocksize_kb
 20278 0af7 E8000000 		call	__printf_chk@PLT	#
 20278      00
 20279              	.LVL1392:
 20280              		.loc 3 107 10 view .LVU6996
 20281              	.LBE1042:
 20282              	.LBE1041:
1218:sieve_extend.c ****                 for (counter_t tuning_result_index=0; tuning_result_index<min(10,tuning_results); t
 20283              		.loc 1 1218 13 is_stmt 1 view .LVU6997
 20284              	# sieve_extend.c:1218:             if (option_verboselevel >= 3) {
1218:sieve_extend.c ****                 for (counter_t tuning_result_index=0; tuning_result_index<min(10,tuning_results); t
 20285              		.loc 1 1218 16 is_stmt 0 view .LVU6998
 20286 0afc 4883C420 		add	rsp, 32	#,
 20287              		.cfi_def_cfa_offset 240
 20288 0b00 837C2450 		cmp	DWORD PTR 80[rsp], 2	# %sfp,
 20288      02
 20289 0b05 0F84C8FD 		je	.L1862	#,
 20289      FFFF
 20290 0b0b 498D6E08 		lea	rbp, 8[r14]	# ivtmp.754,
 20291              	.LBB1043:
 20292              	# sieve_extend.c:1219:                 for (counter_t tuning_result_index=0; tuning_result_index<mi
1219:sieve_extend.c ****                     printf("...blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %
 20293              		.loc 1 1219 32 view .LVU6999
 20294 0b0f 4531ED   		xor	r13d, r13d	# tuning_result_index
 20295              	.L1863:
 20296              	.LVL1393:
1220:sieve_extend.c ****                             (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_
 20297              		.loc 1 1220 21 is_stmt 1 view .LVU7000
 20298              	.LBB1035:
 20299              	.LBI1035:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20300              		.loc 3 105 1 view .LVU7001
 20301              	.LBB1036:
 20302              		.loc 3 107 3 view .LVU7002
 20303              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 20304              		.loc 3 107 10 is_stmt 0 view .LVU7003
 20305 0b12 C5FB1045 		vmovsd	xmm0, QWORD PTR 64[rbp]	# MEM[base: _60, offset: 64B], MEM[base: _60, offset: 64B]
 20305      40
 20306 0b17 488B4D08 		mov	rcx, QWORD PTR 8[rbp]	# MEM[base: _60, offset: 8B], MEM[base: _60, offset: 8B]
 20307 0b1b 56       		push	rsi	#
 20308              		.cfi_def_cfa_offset 248
 20309 0b1c BF010000 		mov	edi, 1	#,
 20309      00
 20310 0b21 488D3500 		lea	rsi, .LC47[rip]	#,
 20310      000000
 20311 0b28 FF7528   		push	QWORD PTR 40[rbp]	# MEM[base: _60, offset: 40B]
 20312              		.cfi_def_cfa_offset 256
 20313 0b2b C5FB1055 		vmovsd	xmm2, QWORD PTR 72[rbp]	#, MEM[base: _60, offset: 72B]
 20313      48
GAS LISTING /tmp/cctyCFAS.s 			page 541


 20314 0b30 C5FB104D 		vmovsd	xmm1, QWORD PTR 48[rbp]	#, MEM[base: _60, offset: 48B]
 20314      30
 20315 0b35 FF7538   		push	QWORD PTR 56[rbp]	# MEM[base: _60, offset: 56B]
 20316              		.cfi_def_cfa_offset 264
 20317 0b38 B8030000 		mov	eax, 3	#,
 20317      00
 20318              	.LBE1036:
 20319              	.LBE1035:
 20320              	# sieve_extend.c:1219:                 for (counter_t tuning_result_index=0; tuning_result_index<mi
1219:sieve_extend.c ****                     printf("...blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %
 20321              		.loc 1 1219 118 view .LVU7004
 20322 0b3d 49FFC5   		inc	r13	# tuning_result_index
 20323              	.LVL1394:
 20324              	.LBB1038:
 20325              	.LBB1037:
 20326              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 20327              		.loc 3 107 10 view .LVU7005
 20328 0b40 FF7520   		push	QWORD PTR 32[rbp]	# MEM[base: _60, offset: 32B]
 20329              		.cfi_def_cfa_offset 272
 20330 0b43 4883C558 		add	rbp, 88	# ivtmp.754,
 20331 0b47 4C8B45B8 		mov	r8, QWORD PTR -72[rbp]	#, MEM[base: _60, offset: 16B]
 20332 0b4b 4C8B4DC0 		mov	r9, QWORD PTR -64[rbp]	#, MEM[base: _60, offset: 24B]
 20333 0b4f 488B55A8 		mov	rdx, QWORD PTR -88[rbp]	#, MEM[base: _60, offset: 0B]
 20334 0b53 E8000000 		call	__printf_chk@PLT	#
 20334      00
 20335              	.LVL1395:
 20336              		.loc 3 107 10 view .LVU7006
 20337              	.LBE1037:
 20338              	.LBE1038:
1219:sieve_extend.c ****                     printf("...blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %
 20339              		.loc 1 1219 99 is_stmt 1 view .LVU7007
1219:sieve_extend.c ****                     printf("...blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %
 20340              		.loc 1 1219 55 view .LVU7008
 20341              	# sieve_extend.c:1219:                 for (counter_t tuning_result_index=0; tuning_result_index<mi
1219:sieve_extend.c ****                     printf("...blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %
 20342              		.loc 1 1219 75 is_stmt 0 view .LVU7009
 20343 0b58 4883C420 		add	rsp, 32	#,
 20344              		.cfi_def_cfa_offset 240
 20345 0b5c 41B80A00 		mov	r8d, 10	# tmp373,
 20345      0000
 20346 0b62 4983FF0A 		cmp	r15, 10	# tuning_results,
 20347 0b66 4D0F46C7 		cmovbe	r8, r15	# tuning_results,, tmp373
 20348              	# sieve_extend.c:1219:                 for (counter_t tuning_result_index=0; tuning_result_index<mi
1219:sieve_extend.c ****                     printf("...blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %
 20349              		.loc 1 1219 17 view .LVU7010
 20350 0b6a 4D39C5   		cmp	r13, r8	# tuning_result_index, tmp373
 20351 0b6d 72A3     		jb	.L1863	#,
 20352 0b6f E95FFDFF 		jmp	.L1862	#
 20352      FF
 20353              	.LVL1396:
 20354              	.L1954:
1219:sieve_extend.c ****                     printf("...blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %
 20355              		.loc 1 1219 17 view .LVU7011
 20356              	.LBE1043:
 20357              	.LBE1014:
 20358              	.LBE1013:
 20359              	.LBE1012:
GAS LISTING /tmp/cctyCFAS.s 			page 542


1321:sieve_extend.c ****     }
 20360              		.loc 1 1321 39 is_stmt 1 view .LVU7012
 20361              	.LBB1058:
 20362              	.LBI1058:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20363              		.loc 3 105 1 view .LVU7013
 20364              	.LBB1059:
 20365              		.loc 3 107 3 view .LVU7014
 20366              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 20367              		.loc 3 107 10 is_stmt 0 view .LVU7015
 20368 0b74 488D3D00 		lea	rdi, .LC44[rip]	#,
 20368      000000
 20369 0b7b E8000000 		call	puts@PLT	#
 20369      00
 20370              	.LVL1397:
 20371              		.loc 3 107 10 view .LVU7016
 20372              	.LBE1059:
 20373              	.LBE1058:
1324:sieve_extend.c ****     if (option_tunelevel) {
 20374              		.loc 1 1324 5 is_stmt 1 view .LVU7017
1325:sieve_extend.c ****         tuning_result_type tuning_result = tune(option_tunelevel, option_maxFactor, option_verbosel
 20375              		.loc 1 1325 5 view .LVU7018
 20376              	# sieve_extend.c:1325:     if (option_tunelevel) {
1325:sieve_extend.c ****         tuning_result_type tuning_result = tune(option_tunelevel, option_maxFactor, option_verbosel
 20377              		.loc 1 1325 9 is_stmt 0 view .LVU7019
 20378 0b80 448B4424 		mov	r8d, DWORD PTR 108[rsp]	# option_tunelevel.40_62, option_tunelevel
 20378      6C
 20379              	# sieve_extend.c:1324:     counter_t best_blocksize_bits = default_blocksize;
1324:sieve_extend.c ****     if (option_tunelevel) {
 20380              		.loc 1 1324 15 view .LVU7020
 20381 0b85 41BF00FC 		mov	r15d, 261120	# best_result$blocksize_bits,
 20381      0300
 20382              	.LVL1398:
 20383              	# sieve_extend.c:1325:     if (option_tunelevel) {
1325:sieve_extend.c ****         tuning_result_type tuning_result = tune(option_tunelevel, option_maxFactor, option_verbosel
 20384              		.loc 1 1325 8 view .LVU7021
 20385 0b8b 4585C0   		test	r8d, r8d	# option_tunelevel.40_62
 20386 0b8e 0F855A01 		jne	.L1961	#,
 20386      0000
 20387              	.LVL1399:
 20388              	.L1843:
 20389              	.LBB1060:
1334:sieve_extend.c ****         counter_t passes = 0;
 20390              		.loc 1 1334 9 is_stmt 1 view .LVU7022
 20391              	# sieve_extend.c:1334:         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize
1334:sieve_extend.c ****         counter_t passes = 0;
 20392              		.loc 1 1334 12 is_stmt 0 view .LVU7023
 20393 0b94 837C2468 		cmp	DWORD PTR 104[rsp], 0	# option_verboselevel,
 20393      00
 20394 0b99 0F8EF1F7 		jle	.L1868	#,
 20394      FFFF
1334:sieve_extend.c ****         counter_t passes = 0;
 20395              		.loc 1 1334 39 is_stmt 1 discriminator 1 view .LVU7024
 20396              	.LVL1400:
 20397              	.LBB998:
 20398              	.LBI998:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
GAS LISTING /tmp/cctyCFAS.s 			page 543


 20399              		.loc 3 105 1 discriminator 1 view .LVU7025
 20400              	.LBB999:
 20401              		.loc 3 107 3 discriminator 1 view .LVU7026
 20402              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 20403              		.loc 3 107 10 is_stmt 0 discriminator 1 view .LVU7027
 20404 0b9f 4C8B0500 		mov	r8, QWORD PTR global_MEDIUMSTEP_FASTER[rip]	#, global_MEDIUMSTEP_FASTER
 20404      000000
 20405 0ba6 488B0D00 		mov	rcx, QWORD PTR global_SMALLSTEP_FASTER[rip]	#, global_SMALLSTEP_FASTER
 20405      000000
 20406 0bad 4C89FA   		mov	rdx, r15	#, best_result$blocksize_bits
 20407 0bb0 488D3500 		lea	rsi, .LC52[rip]	#,
 20407      000000
 20408 0bb7 BF010000 		mov	edi, 1	#,
 20408      00
 20409 0bbc 31C0     		xor	eax, eax	#
 20410 0bbe E8000000 		call	__printf_chk@PLT	#
 20410      00
 20411              	.LVL1401:
 20412 0bc3 E9C8F7FF 		jmp	.L1868	#
 20412      FF
 20413              	.LVL1402:
 20414              	.L1960:
 20415              		.loc 3 107 10 discriminator 1 view .LVU7028
 20416              	.LBE999:
 20417              	.LBE998:
 20418              	.LBE1060:
 20419              	.LBB1061:
 20420              	.LBB1055:
 20421              	.LBB1052:
1237:sieve_extend.c ****     if (option_verboselevel >= 1) {
 20422              		.loc 1 1237 5 is_stmt 1 view .LVU7029
 20423              	# sieve_extend.c:1238:     if (option_verboselevel >= 1) {
1238:sieve_extend.c ****         tuning_result_index = 0;
 20424              		.loc 1 1238 8 is_stmt 0 view .LVU7030
 20425 0bc8 837C2450 		cmp	DWORD PTR 80[rsp], 0	# %sfp,
 20425      00
 20426              	# sieve_extend.c:1237:     tuning_result_type best_result = tuning_result[0];
1237:sieve_extend.c ****     if (option_verboselevel >= 1) {
 20427              		.loc 1 1237 24 view .LVU7031
 20428 0bcd 4D8B7E08 		mov	r15, QWORD PTR 8[r14]	# best_result$blocksize_bits, MEM[(struct tuning_result_type *)tuning_re
 20429              	.LVL1403:
1237:sieve_extend.c ****     if (option_verboselevel >= 1) {
 20430              		.loc 1 1237 24 view .LVU7032
 20431 0bd1 498B6E20 		mov	rbp, QWORD PTR 32[r14]	# best_result$smallstep_faster, MEM[(struct tuning_result_type *)tuning
 20432 0bd5 4D8B6E28 		mov	r13, QWORD PTR 40[r14]	# best_result$mediumstep_faster, MEM[(struct tuning_result_type *)tunin
1238:sieve_extend.c ****         tuning_result_index = 0;
 20433              		.loc 1 1238 5 is_stmt 1 view .LVU7033
 20434              	# sieve_extend.c:1238:     if (option_verboselevel >= 1) {
1238:sieve_extend.c ****         tuning_result_index = 0;
 20435              		.loc 1 1238 8 is_stmt 0 view .LVU7034
 20436 0bd9 7E40     		jle	.L1866	#,
1239:sieve_extend.c ****         printf(".Best result: blocksize %4jukb; free_bits %ju; smallstep: %ju; mediumstep %ju; pass
 20437              		.loc 1 1239 9 is_stmt 1 view .LVU7035
 20438              	.LVL1404:
1240:sieve_extend.c ****                  (uintmax_t)tuning_result[tuning_result_index].blocksize_kb,(uintmax_t)tuning_resul
 20439              		.loc 1 1240 9 view .LVU7036
 20440              	.LBB1044:
GAS LISTING /tmp/cctyCFAS.s 			page 544


 20441              	.LBI1044:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20442              		.loc 3 105 1 view .LVU7037
 20443              	.LBB1045:
 20444              		.loc 3 107 3 view .LVU7038
 20445              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 20446              		.loc 3 107 10 is_stmt 0 view .LVU7039
 20447 0bdb 498B5610 		mov	rdx, QWORD PTR 16[r14]	# MEM[(struct tuning_result_type *)tuning_result_229 + 16B], MEM[(struc
 20448 0bdf C4C17B10 		vmovsd	xmm0, QWORD PTR 72[r14]	# MEM[(struct tuning_result_type *)tuning_result_229 + 72B], MEM[(s
 20448      4648
 20449 0be5 498B4E18 		mov	rcx, QWORD PTR 24[r14]	# MEM[(struct tuning_result_type *)tuning_result_229 + 24B], MEM[(struc
 20450 0be9 41FF7630 		push	QWORD PTR 48[r14]	# MEM[(struct tuning_result_type *)tuning_result_229 + 48B]
 20451              		.cfi_def_cfa_offset 248
 20452              	.LVL1405:
 20453              		.loc 3 107 10 view .LVU7040
 20454 0bed 4D89E9   		mov	r9, r13	#, best_result$mediumstep_faster
 20455 0bf0 4989E8   		mov	r8, rbp	#, best_result$smallstep_faster
 20456 0bf3 41FF7640 		push	QWORD PTR 64[r14]	# MEM[(struct tuning_result_type *)tuning_result_229 + 64B]
 20457              		.cfi_def_cfa_offset 256
 20458 0bf7 488D3500 		lea	rsi, .LC51[rip]	#,
 20458      000000
 20459 0bfe BF010000 		mov	edi, 1	#,
 20459      00
 20460 0c03 C4C17B10 		vmovsd	xmm2, QWORD PTR 80[r14]	#, MEM[(struct tuning_result_type *)tuning_result_229 + 80B]
 20460      5650
 20461 0c09 C4C17B10 		vmovsd	xmm1, QWORD PTR 56[r14]	#, MEM[(struct tuning_result_type *)tuning_result_229 + 56B]
 20461      4E38
 20462 0c0f B8030000 		mov	eax, 3	#,
 20462      00
 20463 0c14 E8000000 		call	__printf_chk@PLT	#
 20463      00
 20464              	.LVL1406:
 20465              		.loc 3 107 10 view .LVU7041
 20466 0c19 58       		pop	rax	#
 20467              		.cfi_def_cfa_offset 248
 20468 0c1a 5A       		pop	rdx	#
 20469              		.cfi_def_cfa_offset 240
 20470              	.LVL1407:
 20471              	.L1866:
 20472              		.loc 3 107 10 view .LVU7042
 20473              	.LBE1045:
 20474              	.LBE1044:
1247:sieve_extend.c ****     return best_result;
 20475              		.loc 1 1247 5 is_stmt 1 view .LVU7043
 20476 0c1b 4C89F7   		mov	rdi, r14	#, tuning_result
 20477 0c1e E8000000 		call	free@PLT	#
 20477      00
 20478              	.LVL1408:
1248:sieve_extend.c **** }
 20479              		.loc 1 1248 5 view .LVU7044
1248:sieve_extend.c **** }
 20480              		.loc 1 1248 5 is_stmt 0 view .LVU7045
 20481              	.LBE1052:
 20482              	.LBE1055:
1327:sieve_extend.c ****         global_MEDIUMSTEP_FASTER = tuning_result.mediumstep_faster;
 20483              		.loc 1 1327 9 is_stmt 1 view .LVU7046
 20484              	# sieve_extend.c:1327:         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
GAS LISTING /tmp/cctyCFAS.s 			page 545


1327:sieve_extend.c ****         global_MEDIUMSTEP_FASTER = tuning_result.mediumstep_faster;
 20485              		.loc 1 1327 33 is_stmt 0 view .LVU7047
 20486 0c23 48892D00 		mov	QWORD PTR global_SMALLSTEP_FASTER[rip], rbp	# global_SMALLSTEP_FASTER, best_result$smallstep_f
 20486      000000
1328:sieve_extend.c ****         best_blocksize_bits = tuning_result.blocksize_bits;
 20487              		.loc 1 1328 9 is_stmt 1 view .LVU7048
 20488              	# sieve_extend.c:1328:         global_MEDIUMSTEP_FASTER = tuning_result.mediumstep_faster;
1328:sieve_extend.c ****         best_blocksize_bits = tuning_result.blocksize_bits;
 20489              		.loc 1 1328 34 is_stmt 0 view .LVU7049
 20490 0c2a 4C892D00 		mov	QWORD PTR global_MEDIUMSTEP_FASTER[rip], r13	# global_MEDIUMSTEP_FASTER, best_result$mediumste
 20490      000000
1329:sieve_extend.c ****     }
 20491              		.loc 1 1329 9 is_stmt 1 view .LVU7050
 20492              	.LVL1409:
1329:sieve_extend.c ****     }
 20493              		.loc 1 1329 9 is_stmt 0 view .LVU7051
 20494              	.LBE1061:
1332:sieve_extend.c ****     if (best_blocksize_bits > 0) {
 20495              		.loc 1 1332 5 is_stmt 1 view .LVU7052
1333:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju\n",
 20496              		.loc 1 1333 5 view .LVU7053
 20497              	# sieve_extend.c:1333:     if (best_blocksize_bits > 0) {
1333:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju\n",
 20498              		.loc 1 1333 8 is_stmt 0 view .LVU7054
 20499 0c31 4D85FF   		test	r15, r15	# best_result$blocksize_bits
 20500 0c34 0F84A7F8 		je	.L1867	#,
 20500      FFFF
 20501 0c3a E955FFFF 		jmp	.L1843	#
 20501      FF
 20502              	.LVL1410:
 20503              	.L1876:
1333:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju\n",
 20504              		.loc 1 1333 8 view .LVU7055
 20505 0c3f 488D3D00 		lea	rdi, CSWTCH.111[rip]	# tmp321,
 20505      000000
 20506 0c46 4C8D0D00 		lea	r9, CSWTCH.112[rip]	# tmp323,
 20506      000000
 20507 0c4d 4A8B0CC7 		mov	rcx, QWORD PTR [rdi+r8*8]	# smallstep_faster_steps, CSWTCH.111
 20508 0c51 4F8B2CC1 		mov	r13, QWORD PTR [r9+r8*8]	# freebits_steps, CSWTCH.112
 20509 0c55 488D1D00 		lea	rbx, CSWTCH.113[rip]	# tmp325,
 20509      000000
 20510 0c5c C4A17B10 		vmovsd	xmm7, QWORD PTR [rbx+r8*8]	# sample_duration, CSWTCH.113
 20510      3CC3
 20511 0c62 48894C24 		mov	QWORD PTR 88[rsp], rcx	# %sfp, smallstep_faster_steps
 20511      58
 20512 0c67 4C896C24 		mov	QWORD PTR 56[rsp], r13	# %sfp, freebits_steps
 20512      38
 20513              	.LBB1062:
 20514              	# sieve_extend.c:1260:     for (int arg=1; arg < argc; arg++) {
1260:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 20515              		.loc 1 1260 14 view .LVU7056
 20516 0c6c 48C74424 		mov	QWORD PTR 48[rsp], 4	# %sfp,
 20516      30040000 
 20516      00
 20517 0c75 C5FB117C 		vmovsd	QWORD PTR 64[rsp], xmm7	# %sfp, sample_duration
 20517      2440
 20518              	.L1844:
GAS LISTING /tmp/cctyCFAS.s 			page 546


 20519              	.LVL1411:
1260:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 20520              		.loc 1 1260 14 view .LVU7057
 20521              	.LBE1062:
 20522              	.LBB1063:
 20523              	.LBB1056:
 20524              	.LBB1053:
1158:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 20525              		.loc 1 1158 5 is_stmt 1 view .LVU7058
 20526              	# sieve_extend.c:1158:     if (option_verboselevel >= 1) printf("Tuning..."); if (option_verboselev
1158:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 20527              		.loc 1 1158 8 is_stmt 0 view .LVU7059
 20528 0c7b 448B7424 		mov	r14d, DWORD PTR 80[rsp]	# option_verboselevel.41_63, %sfp
 20528      50
 20529              	.LVL1412:
1158:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 20530              		.loc 1 1158 8 view .LVU7060
 20531 0c80 4585F6   		test	r14d, r14d	# option_verboselevel.41_63
 20532 0c83 0F8EB2F9 		jle	.L1846	#,
 20532      FFFF
1158:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 20533              		.loc 1 1158 35 is_stmt 1 view .LVU7061
 20534              	.LVL1413:
 20535              	.LBB1046:
 20536              	.LBI1046:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20537              		.loc 3 105 1 view .LVU7062
 20538              	.LBB1047:
 20539              		.loc 3 107 3 view .LVU7063
 20540              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 20541              		.loc 3 107 10 is_stmt 0 view .LVU7064
 20542 0c89 31C0     		xor	eax, eax	#
 20543 0c8b 488D3500 		lea	rsi, .LC45[rip]	#,
 20543      000000
 20544 0c92 BF010000 		mov	edi, 1	#,
 20544      00
 20545              	.LBE1047:
 20546              	.LBE1046:
 20547              	# sieve_extend.c:1158:     if (option_verboselevel >= 1) printf("Tuning..."); if (option_verboselev
1158:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 20548              		.loc 1 1158 59 view .LVU7065
 20549 0c97 4489F3   		mov	ebx, r14d	# option_verboselevel.41_63, option_verboselevel.41_63
 20550              	.LBB1049:
 20551              	.LBB1048:
 20552              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 20553              		.loc 3 107 10 view .LVU7066
 20554 0c9a E8000000 		call	__printf_chk@PLT	#
 20554      00
 20555              	.LVL1414:
 20556              		.loc 3 107 10 view .LVU7067
 20557              	.LBE1048:
 20558              	.LBE1049:
1158:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 20559              		.loc 1 1158 56 is_stmt 1 view .LVU7068
 20560              	# sieve_extend.c:1158:     if (option_verboselevel >= 1) printf("Tuning..."); if (option_verboselev
1158:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 20561              		.loc 1 1158 59 is_stmt 0 view .LVU7069
GAS LISTING /tmp/cctyCFAS.s 			page 547


 20562 0c9f FFCB     		dec	ebx	# option_verboselevel.41_63
 20563 0ca1 0F8494F9 		je	.L1846	#,
 20563      FFFF
1158:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 20564              		.loc 1 1158 86 is_stmt 1 view .LVU7070
 20565              	.LVL1415:
 20566              	.LBB1050:
 20567              	.LBI1050:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20568              		.loc 3 105 1 view .LVU7071
 20569              	.LBB1051:
 20570              		.loc 3 107 3 view .LVU7072
 20571              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 20572              		.loc 3 107 10 is_stmt 0 view .LVU7073
 20573 0ca7 BF0A0000 		mov	edi, 10	#,
 20573      00
 20574 0cac E8000000 		call	putchar@PLT	#
 20574      00
 20575              	.LVL1416:
 20576 0cb1 E985F9FF 		jmp	.L1846	#
 20576      FF
 20577              	.LVL1417:
 20578              	.L1873:
 20579              		.loc 3 107 10 view .LVU7074
 20580              	.LBE1051:
 20581              	.LBE1050:
 20582              	.LBE1053:
 20583              	.LBE1056:
 20584              	.LBE1063:
 20585              	.LBB1064:
 20586              	# sieve_extend.c:1348:         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - p
1348:sieve_extend.c ****     }
 20587              		.loc 1 1348 39 discriminator 1 view .LVU7075
 20588 0cb6 4889D0   		mov	rax, rdx	# tmp400, tmp397
 20589 0cb9 48D1E8   		shr	rax	# tmp400
 20590 0cbc 83E201   		and	edx, 1	# tmp401,
 20591 0cbf 4809D0   		or	rax, rdx	# tmp459, tmp401
 20592 0cc2 C4E1FB2A 		vcvtsi2sd	xmm5, xmm0, rax	# tmp488, tmp480, tmp459
 20592      E8
 20593 0cc7 C55358C5 		vaddsd	xmm8, xmm5, xmm5	# tmp398, tmp399, tmp399
 20594 0ccb E902F9FF 		jmp	.L1874	#
 20594      FF
 20595              	.L1871:
1348:sieve_extend.c ****     }
 20596              		.loc 1 1348 39 discriminator 1 view .LVU7076
 20597 0cd0 4C89F1   		mov	rcx, r14	# tmp394, passes
 20598 0cd3 4D89F1   		mov	r9, r14	# tmp395, passes
 20599 0cd6 48D1E9   		shr	rcx	# tmp394
 20600 0cd9 4183E101 		and	r9d, 1	# tmp395,
 20601 0cdd 4C09C9   		or	rcx, r9	# tmp458, tmp395
 20602 0ce0 C4E1FB2A 		vcvtsi2sd	xmm4, xmm0, rcx	# tmp486, tmp480, tmp458
 20602      E1
 20603 0ce5 C5DB58D4 		vaddsd	xmm2, xmm4, xmm4	# tmp392, tmp393, tmp393
 20604 0ce9 E9CEF8FF 		jmp	.L1872	#
 20604      FF
 20605              	.LVL1418:
 20606              	.L1961:
GAS LISTING /tmp/cctyCFAS.s 			page 548


1348:sieve_extend.c ****     }
 20607              		.loc 1 1348 39 discriminator 1 view .LVU7077
 20608              	.LBE1064:
 20609              	.LBB1065:
1326:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
 20610              		.loc 1 1326 9 is_stmt 1 view .LVU7078
 20611              	# sieve_extend.c:1326:         tuning_result_type tuning_result = tune(option_tunelevel, option_max
1326:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
 20612              		.loc 1 1326 44 is_stmt 0 view .LVU7079
 20613 0cee 8B542468 		mov	edx, DWORD PTR 104[rsp]	# option_verboselevel.41_63, option_verboselevel
 20614 0cf2 488B7424 		mov	rsi, QWORD PTR 112[rsp]	# option_maxFactor.42_64, option_maxFactor
 20614      70
 20615 0cf7 41FFC8   		dec	r8d	#
 20616 0cfa 89542450 		mov	DWORD PTR 80[rsp], edx	# %sfp, option_verboselevel.41_63
 20617 0cfe 48897424 		mov	QWORD PTR 72[rsp], rsi	# %sfp, option_maxFactor.42_64
 20617      48
 20618              	.LVL1419:
 20619              	.LBB1057:
1120:sieve_extend.c ****     counter_t best_blocksize_bits = default_blocksize;
 20620              		.loc 1 1120 27 is_stmt 1 view .LVU7080
 20621              	.LBB1054:
1121:sieve_extend.c **** 
 20622              		.loc 1 1121 5 view .LVU7081
1123:sieve_extend.c ****     best_blocksize_bits = 0;
 20623              		.loc 1 1123 5 view .LVU7082
1124:sieve_extend.c ****     counter_t best_smallstep_faster = 0;
 20624              		.loc 1 1124 5 view .LVU7083
1125:sieve_extend.c ****     counter_t best_mediumstep_faster = 0;
 20625              		.loc 1 1125 5 view .LVU7084
1126:sieve_extend.c ****     counter_t smallstep_faster_steps = 4;
 20626              		.loc 1 1126 5 view .LVU7085
1127:sieve_extend.c ****     counter_t mediumstep_faster_steps = 4;
 20627              		.loc 1 1127 5 view .LVU7086
1128:sieve_extend.c ****     counter_t freebits_steps = anticiped_cache_line_bytesize;
 20628              		.loc 1 1128 5 view .LVU7087
1129:sieve_extend.c ****     counter_t sample_max = default_sample_max;
 20629              		.loc 1 1129 5 view .LVU7088
1130:sieve_extend.c ****     double sample_duration = default_sample_duration;
 20630              		.loc 1 1130 5 view .LVU7089
1131:sieve_extend.c **** 
 20631              		.loc 1 1131 5 view .LVU7090
1134:sieve_extend.c ****         case 1:
 20632              		.loc 1 1134 5 view .LVU7091
 20633 0d03 4183F802 		cmp	r8d, 2	# _209,
 20634 0d07 0F8632FF 		jbe	.L1876	#,
 20634      FFFF
 20635 0d0d C5FB1005 		vmovsd	xmm0, QWORD PTR .LC22[rip]	# sample_duration,
 20635      00000000 
 20636 0d15 48C74424 		mov	QWORD PTR 48[rsp], 5	# %sfp,
 20636      30050000 
 20636      00
 20637 0d1e 48C74424 		mov	QWORD PTR 56[rsp], 128	# %sfp,
 20637      38800000 
 20637      00
 20638 0d27 48C74424 		mov	QWORD PTR 88[rsp], 4	# %sfp,
 20638      58040000 
 20638      00
GAS LISTING /tmp/cctyCFAS.s 			page 549


 20639 0d30 C5FB1144 		vmovsd	QWORD PTR 64[rsp], xmm0	# %sfp, sample_duration
 20639      2440
 20640 0d36 E940FFFF 		jmp	.L1844	#
 20640      FF
 20641              	.LVL1420:
 20642              	.L1947:
1134:sieve_extend.c ****         case 1:
 20643              		.loc 1 1134 5 is_stmt 0 view .LVU7092
 20644              	.LBE1054:
 20645              	.LBE1057:
 20646              	.LBE1065:
 20647              	.LBB1066:
1263:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option_verboselevel > 4) {
 20648              		.loc 1 1263 34 is_stmt 1 discriminator 1 view .LVU7093
 20649              	.LBB937:
 20650              	.LBI937:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20651              		.loc 3 98 1 discriminator 1 view .LVU7094
 20652              	.LBB938:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 20653              		.loc 3 100 3 discriminator 1 view .LVU7095
 20654              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 20655              		.loc 3 100 10 is_stmt 0 discriminator 1 view .LVU7096
 20656 0d3b 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 20656      000000
 20657 0d42 BA1B0000 		mov	edx, 27	#,
 20657      00
 20658 0d47 BE010000 		mov	esi, 1	#,
 20658      00
 20659 0d4c 488D3D00 		lea	rdi, .LC26[rip]	#,
 20659      000000
 20660 0d53 E8000000 		call	fwrite@PLT	#
 20660      00
 20661              	.LVL1421:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 20662              		.loc 3 100 10 discriminator 1 view .LVU7097
 20663              	.LBE938:
 20664              	.LBE937:
1263:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option_verboselevel > 4) {
 20665              		.loc 1 1263 83 is_stmt 1 discriminator 1 view .LVU7098
 20666 0d58 E9F3F7FF 		jmp	.L1945	#
 20666      FF
 20667              	.L1827:
1273:sieve_extend.c ****             }
 20668              		.loc 1 1273 17 view .LVU7099
 20669              	.LVL1422:
 20670              	.LBB939:
 20671              	.LBI934:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20672              		.loc 3 98 1 view .LVU7100
 20673              	.LBB936:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 20674              		.loc 3 100 3 view .LVU7101
 20675              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 20676              		.loc 3 100 10 is_stmt 0 view .LVU7102
GAS LISTING /tmp/cctyCFAS.s 			page 550


 20677 0d5d 498B0F   		mov	rcx, QWORD PTR [r15]	#, *_29
 20678 0d60 488D1500 		lea	rdx, .LC33[rip]	#,
 20678      000000
 20679 0d67 E9D1F7FF 		jmp	.L1944	#
 20679      FF
 20680              	.LVL1423:
 20681              	.L1831:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 20682              		.loc 3 100 10 view .LVU7103
 20683              	.LBE936:
 20684              	.LBE939:
1280:sieve_extend.c ****             }
 20685              		.loc 1 1280 17 is_stmt 1 view .LVU7104
 20686              	.LBB940:
 20687              	.LBI940:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20688              		.loc 3 98 1 view .LVU7105
 20689              	.LBB941:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 20690              		.loc 3 100 3 view .LVU7106
 20691              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 20692              		.loc 3 100 10 is_stmt 0 view .LVU7107
 20693 0d6c 498B0F   		mov	rcx, QWORD PTR [r15]	#, *_41
 20694 0d6f 488D1500 		lea	rdx, .LC38[rip]	#,
 20694      000000
 20695 0d76 E9C2F7FF 		jmp	.L1944	#
 20695      FF
 20696              	.LVL1424:
 20697              	.L1950:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 20698              		.loc 3 100 10 view .LVU7108
 20699              	.LBE941:
 20700              	.LBE940:
1271:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tunelevel > 4) {
 20701              		.loc 1 1271 34 is_stmt 1 discriminator 1 view .LVU7109
 20702              	.LBB942:
 20703              	.LBI942:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20704              		.loc 3 98 1 discriminator 1 view .LVU7110
 20705              	.LBB943:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 20706              		.loc 3 100 3 discriminator 1 view .LVU7111
 20707              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 20708              		.loc 3 100 10 is_stmt 0 discriminator 1 view .LVU7112
 20709 0d7b 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 20709      000000
 20710 0d82 488D3D00 		lea	rdi, .LC32[rip]	#,
 20710      000000
 20711 0d89 BA180000 		mov	edx, 24	#,
 20711      00
 20712 0d8e BE010000 		mov	esi, 1	#,
 20712      00
 20713 0d93 E8000000 		call	fwrite@PLT	#
 20713      00
 20714              	.LVL1425:
GAS LISTING /tmp/cctyCFAS.s 			page 551


 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 20715              		.loc 3 100 10 discriminator 1 view .LVU7113
 20716              	.LBE943:
 20717              	.LBE942:
1271:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tunelevel > 4) {
 20718              		.loc 1 1271 80 is_stmt 1 discriminator 1 view .LVU7114
 20719 0d98 498B3C24 		mov	rdi, QWORD PTR [r12]	#, *argv_156(D)
 20720 0d9c E8000000 		call	usage	#
 20720      00
 20721              	.LVL1426:
 20722              	.L1958:
1271:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tunelevel > 4) {
 20723              		.loc 1 1271 80 is_stmt 0 discriminator 1 view .LVU7115
 20724              	.LBE1066:
 20725              	# sieve_extend.c:1358: }
 20726              		.loc 1 1358 1 view .LVU7116
 20727 0da1 E8000000 		call	__stack_chk_fail@PLT	#
 20727      00
 20728              	.LVL1427:
 20729              	.L1953:
 20730              	.LBB1067:
1278:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 20731              		.loc 1 1278 34 is_stmt 1 discriminator 1 view .LVU7117
 20732              	.LBB944:
 20733              	.LBI944:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20734              		.loc 3 98 1 discriminator 1 view .LVU7118
 20735              	.LBB945:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 20736              		.loc 3 100 3 discriminator 1 view .LVU7119
 20737              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 20738              		.loc 3 100 10 is_stmt 0 discriminator 1 view .LVU7120
 20739 0da6 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 20739      000000
 20740 0dad 488D3D00 		lea	rdi, .LC36[rip]	#,
 20740      000000
 20741 0db4 BA1A0000 		mov	edx, 26	#,
 20741      00
 20742 0db9 BE010000 		mov	esi, 1	#,
 20742      00
 20743 0dbe E8000000 		call	fwrite@PLT	#
 20743      00
 20744              	.LVL1428:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 20745              		.loc 3 100 10 discriminator 1 view .LVU7121
 20746              	.LBE945:
 20747              	.LBE944:
1278:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 20748              		.loc 1 1278 82 is_stmt 1 discriminator 1 view .LVU7122
 20749 0dc3 498B3C24 		mov	rdi, QWORD PTR [r12]	#, *argv_156(D)
 20750 0dc7 E8000000 		call	usage	#
 20750      00
 20751              	.LVL1429:
 20752              	.LBE1067:
 20753              		.cfi_endproc
 20754              	.LFE86:
GAS LISTING /tmp/cctyCFAS.s 			page 552


 20756              		.section	.rodata
 20757              		.align 16
 20760              	CSWTCH.113:
 20761 0000 9A999999 		.long	2576980378
 20762 0004 9999B93F 		.long	1069128089
 20763 0008 9A999999 		.long	2576980378
 20764 000c 9999C93F 		.long	1070176665
 20765 0010 9A999999 		.long	2576980378
 20766 0014 9999D93F 		.long	1071225241
 20767 0018 00000000 		.align 16
 20767      00000000 
 20770              	CSWTCH.112:
 20771 0020 00080000 		.quad	2048
 20771      00000000 
 20772 0028 00040000 		.quad	1024
 20772      00000000 
 20773 0030 40000000 		.quad	64
 20773      00000000 
 20774 0038 00000000 		.align 16
 20774      00000000 
 20777              	CSWTCH.111:
 20778 0040 10000000 		.quad	16
 20778      00000000 
 20779 0048 08000000 		.quad	8
 20779      00000000 
 20780 0050 04000000 		.quad	4
 20780      00000000 
 20781              		.globl	debug_hitpoint
 20782              		.bss
 20783              		.align 32
 20786              	debug_hitpoint:
 20787 0000 00000000 		.zero	40
 20787      00000000 
 20787      00000000 
 20787      00000000 
 20787      00000000 
 20788              		.globl	global_MEDIUMSTEP_FASTER
 20789              		.data
 20790              		.align 8
 20793              	global_MEDIUMSTEP_FASTER:
 20794 0000 40000000 		.quad	64
 20794      00000000 
 20795              		.globl	global_SMALLSTEP_FASTER
 20796              		.align 8
 20799              	global_SMALLSTEP_FASTER:
 20800 0008 10000000 		.quad	16
 20800      00000000 
 20801              		.section	.rodata.cst8,"aM",@progbits,8
 20802              		.align 8
 20803              	.LC3:
 20804 0000 00000000 		.long	0
 20805 0004 0000F87F 		.long	2146959360
 20806              		.align 8
 20807              	.LC4:
 20808 0008 95D626E8 		.long	3894859413
 20809 000c 0B2E113E 		.long	1041313291
 20810              		.align 8
GAS LISTING /tmp/cctyCFAS.s 			page 553


 20811              	.LC22:
 20812 0010 9A999999 		.long	2576980378
 20813 0014 9999B93F 		.long	1069128089
 20814              		.align 8
 20815              	.LC53:
 20816 0018 00000000 		.long	0
 20817 001c 00001440 		.long	1075052544
 20818              		.text
 20819              	.Letext0:
 20820              		.file 4 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h"
 20821              		.file 5 "/usr/include/x86_64-linux-gnu/bits/types.h"
 20822              		.file 6 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h"
 20823              		.file 7 "/usr/include/x86_64-linux-gnu/bits/types/FILE.h"
 20824              		.file 8 "/usr/include/stdio.h"
 20825              		.file 9 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h"
 20826              		.file 10 "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h"
 20827              		.file 11 "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h"
 20828              		.file 12 "/usr/include/stdint.h"
 20829              		.file 13 "/usr/include/time.h"
 20830              		.file 14 "/usr/include/math.h"
 20831              		.file 15 "/usr/include/stdlib.h"
 20832              		.file 16 "<built-in>"
 47195              		.section	.note.gnu.property,"a"
 47196              		.align 8
 47197 0000 04000000 		.long	 1f - 0f
 47198 0004 10000000 		.long	 4f - 1f
 47199 0008 05000000 		.long	 5
 47200              	0:
 47201 000c 474E5500 		.string	 "GNU"
 47202              	1:
 47203              		.align 8
 47204 0010 020000C0 		.long	 0xc0000002
 47205 0014 04000000 		.long	 3f - 2f
 47206              	2:
 47207 0018 03000000 		.long	 0x3
 47208              	3:
 47209 001c 00000000 		.align 8
 47210              	4:
GAS LISTING /tmp/cctyCFAS.s 			page 554


DEFINED SYMBOLS
                            *ABS*:0000000000000000 sieve_extend.c
     /tmp/cctyCFAS.s:86     .text:0000000000000000 extendSieve_smallSize
     /tmp/cctyCFAS.s:883    .text:00000000000003c0 extendSieve_shiftright_ivdep
     /tmp/cctyCFAS.s:2699   .text:0000000000001010 compare_tuning_result
     /tmp/cctyCFAS.s:2725   .text:0000000000001030 extendSieve_aligned
     /tmp/cctyCFAS.s:3524   .text:0000000000001530 extendSieve_shiftleft
     /tmp/cctyCFAS.s:6214   .text:00000000000026e0 show_primes.isra.0
     /tmp/cctyCFAS.s:6209   .rodata.str1.1:0000000000000006 .LC1
     /tmp/cctyCFAS.s:6207   .rodata.str1.1:0000000000000000 .LC0
     /tmp/cctyCFAS.s:6615   .text:0000000000002880 sieve
     /tmp/cctyCFAS.s:20799  .data:0000000000000008 global_SMALLSTEP_FASTER
     /tmp/cctyCFAS.s:20793  .data:0000000000000000 global_MEDIUMSTEP_FASTER
     /tmp/cctyCFAS.s:15452  .text:0000000000005030 tune_benchmark
     /tmp/cctyCFAS.s:20803  .rodata.cst8:0000000000000000 .LC3
     /tmp/cctyCFAS.s:20807  .rodata.cst8:0000000000000008 .LC4
     /tmp/cctyCFAS.s:15667  .text:0000000000005170 shiftvec
     /tmp/cctyCFAS.s:16834  .text:0000000000005510 validatePrimeCount
     /tmp/cctyCFAS.s:16815  .rodata.str1.8:0000000000000000 .LC5
     /tmp/cctyCFAS.s:16821  .rodata.str1.1:0000000000000023 .LC7
     /tmp/cctyCFAS.s:16825  .rodata.str1.8:00000000000000c0 .LC8
     /tmp/cctyCFAS.s:16818  .rodata.str1.8:0000000000000058 .LC6
     /tmp/cctyCFAS.s:16828  .rodata.str1.8:00000000000000f8 .LC9
     /tmp/cctyCFAS.s:18081  .text:0000000000005ca0 usage
     /tmp/cctyCFAS.s:18041  .rodata.str1.8:0000000000000148 .LC10
     /tmp/cctyCFAS.s:18044  .rodata.str1.1:0000000000000031 .LC11
     /tmp/cctyCFAS.s:18048  .rodata.str1.8:0000000000000168 .LC12
     /tmp/cctyCFAS.s:18051  .rodata.str1.8:00000000000001a8 .LC13
     /tmp/cctyCFAS.s:18054  .rodata.str1.8:00000000000001d8 .LC14
     /tmp/cctyCFAS.s:18057  .rodata.str1.8:0000000000000220 .LC15
     /tmp/cctyCFAS.s:18060  .rodata.str1.8:0000000000000250 .LC16
     /tmp/cctyCFAS.s:18063  .rodata.str1.8:0000000000000290 .LC17
     /tmp/cctyCFAS.s:18066  .rodata.str1.8:00000000000002d0 .LC18
     /tmp/cctyCFAS.s:18069  .rodata.str1.8:0000000000000320 .LC19
     /tmp/cctyCFAS.s:18072  .rodata.str1.8:0000000000000348 .LC20
     /tmp/cctyCFAS.s:18075  .rodata.str1.8:0000000000000378 .LC21
     /tmp/cctyCFAS.s:18411  .text.startup:0000000000000000 main
     /tmp/cctyCFAS.s:18322  .rodata.str1.1:000000000000004a .LC24
     /tmp/cctyCFAS.s:18324  .rodata.str1.1:0000000000000051 .LC25
     /tmp/cctyCFAS.s:18328  .rodata.str1.1:0000000000000077 .LC27
     /tmp/cctyCFAS.s:18335  .rodata.str1.1:000000000000007a .LC29
     /tmp/cctyCFAS.s:18337  .rodata.str1.1:0000000000000093 .LC30
     /tmp/cctyCFAS.s:18339  .rodata.str1.1:000000000000009b .LC31
     /tmp/cctyCFAS.s:18348  .rodata.str1.1:00000000000000bb .LC34
     /tmp/cctyCFAS.s:18367  .rodata.str1.1:000000000000013a .LC42
     /tmp/cctyCFAS.s:18365  .rodata.str1.1:0000000000000121 .LC41
     /tmp/cctyCFAS.s:18350  .rodata.str1.1:00000000000000d1 .LC35
     /tmp/cctyCFAS.s:18354  .rodata.str1.1:00000000000000f3 .LC37
     /tmp/cctyCFAS.s:18361  .rodata.str1.1:00000000000000f7 .LC39
     /tmp/cctyCFAS.s:18363  .rodata.str1.1:0000000000000110 .LC40
     /tmp/cctyCFAS.s:18369  .rodata.str1.1:000000000000014a .LC43
     /tmp/cctyCFAS.s:20815  .rodata.cst8:0000000000000018 .LC53
     /tmp/cctyCFAS.s:18399  .rodata.str1.8:00000000000006c8 .LC54
     /tmp/cctyCFAS.s:18320  .rodata.str1.1:000000000000003b .LC23
     /tmp/cctyCFAS.s:18332  .rodata.str1.8:00000000000003b0 .LC28
     /tmp/cctyCFAS.s:18405  .rodata.str1.1:000000000000017b .LC56
     /tmp/cctyCFAS.s:18402  .rodata.str1.8:0000000000000710 .LC55
GAS LISTING /tmp/cctyCFAS.s 			page 555


     /tmp/cctyCFAS.s:20811  .rodata.cst8:0000000000000010 .LC22
     /tmp/cctyCFAS.s:18380  .rodata.str1.8:00000000000004a8 .LC47
     /tmp/cctyCFAS.s:18377  .rodata.str1.8:0000000000000420 .LC46
     /tmp/cctyCFAS.s:18383  .rodata.str1.8:0000000000000530 .LC48
     /tmp/cctyCFAS.s:18386  .rodata.str1.1:000000000000016e .LC49
     /tmp/cctyCFAS.s:18390  .rodata.str1.8:0000000000000588 .LC50
     /tmp/cctyCFAS.s:18371  .rodata.str1.1:0000000000000151 .LC44
     /tmp/cctyCFAS.s:18396  .rodata.str1.8:0000000000000690 .LC52
     /tmp/cctyCFAS.s:18393  .rodata.str1.8:0000000000000618 .LC51
     /tmp/cctyCFAS.s:20777  .rodata:0000000000000040 CSWTCH.111
     /tmp/cctyCFAS.s:20770  .rodata:0000000000000020 CSWTCH.112
     /tmp/cctyCFAS.s:20760  .rodata:0000000000000000 CSWTCH.113
     /tmp/cctyCFAS.s:18373  .rodata.str1.1:0000000000000164 .LC45
     /tmp/cctyCFAS.s:18326  .rodata.str1.1:000000000000005b .LC26
     /tmp/cctyCFAS.s:18345  .rodata.str1.8:00000000000003d8 .LC33
     /tmp/cctyCFAS.s:18358  .rodata.str1.8:00000000000003f8 .LC38
     /tmp/cctyCFAS.s:18341  .rodata.str1.1:00000000000000a2 .LC32
     /tmp/cctyCFAS.s:18352  .rodata.str1.1:00000000000000d8 .LC36
     /tmp/cctyCFAS.s:20786  .bss:0000000000000000 debug_hitpoint

UNDEFINED SYMBOLS
memcpy
_GLOBAL_OFFSET_TABLE_
__printf_chk
putchar
aligned_alloc
clock_gettime
free
__stack_chk_fail
puts
stderr
__fprintf_chk
fwrite
exit
__isoc99_sscanf
malloc
qsort
