GAS LISTING /tmp/ccLUVin9.s 			page 1


   1              		.file	"sieve_extend.c"
   2              		.intel_syntax noprefix
   3              	# GNU C17 (Ubuntu 9.4.0-1ubuntu1~20.04.1) version 9.4.0 (x86_64-linux-gnu)
   4              	#	compiled by GNU C version 9.4.0, GMP version 6.2.0, MPFR version 4.0.2, MPC version 1.1.0, isl ve
   5              	
   6              	# GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
   7              	# options passed:  -imultiarch x86_64-linux-gnu sieve_extend.c
   8              	# -march=skylake -mmmx -mno-3dnow -msse -msse2 -msse3 -mssse3 -mno-sse4a
   9              	# -mcx16 -msahf -mmovbe -maes -mno-sha -mpclmul -mpopcnt -mabm -mno-lwp
  10              	# -mfma -mno-fma4 -mno-xop -mbmi -mno-sgx -mbmi2 -mno-pconfig -mno-wbnoinvd
  11              	# -mno-tbm -mavx2 -msse4.2 -msse4.1 -mlzcnt -mrtm -mhle -mrdrnd -mf16c
  12              	# -mfsgsbase -mrdseed -mprfchw -madx -mfxsr -mxsave -mxsaveopt -mno-avx512f
  13              	# -mno-avx512er -mno-avx512cd -mno-avx512pf -mno-prefetchwt1 -mclflushopt
  14              	# -mxsavec -mxsaves -mno-avx512dq -mno-avx512bw -mno-avx512vl
  15              	# -mno-avx512ifma -mno-avx512vbmi -mno-avx5124fmaps -mno-avx5124vnniw
  16              	# -mno-clwb -mno-mwaitx -mno-clzero -mno-pku -mno-rdpid -mno-gfni
  17              	# -mno-shstk -mno-avx512vbmi2 -mno-avx512vnni -mno-vaes -mno-vpclmulqdq
  18              	# -mno-avx512bitalg -mno-avx512vpopcntdq -mno-movdiri -mno-movdir64b
  19              	# -mno-waitpkg -mno-cldemote -mno-ptwrite -mtune=intel -masm=intel
  20              	# -malign-data=cacheline -mavx -g -Ofast -Wextra -Wall -Wno-unused-function
  21              	# -funroll-all-loops -fno-asynchronous-unwind-tables -fno-exceptions
  22              	# -fverbose-asm -fstack-protector-strong -Wformat-security
  23              	# -fstack-clash-protection -fcf-protection
  24              	# options enabled:  -fPIC -fPIE -faggressive-loop-optimizations
  25              	# -falign-functions -falign-jumps -falign-labels -falign-loops
  26              	# -fassociative-math -fassume-phsa -fauto-inc-dec -fbranch-count-reg
  27              	# -fcaller-saves -fcode-hoisting -fcombine-stack-adjustments -fcommon
  28              	# -fcompare-elim -fcprop-registers -fcrossjumping -fcse-follow-jumps
  29              	# -fcx-limited-range -fdefer-pop -fdelete-null-pointer-checks
  30              	# -fdevirtualize -fdevirtualize-speculatively -fdwarf2-cfi-asm
  31              	# -fearly-inlining -feliminate-unused-debug-types -fexpensive-optimizations
  32              	# -ffinite-math-only -fforward-propagate -ffp-int-builtin-inexact
  33              	# -ffunction-cse -fgcse -fgcse-after-reload -fgcse-lm -fgnu-runtime
  34              	# -fgnu-unique -fguess-branch-probability -fhoist-adjacent-loads -fident
  35              	# -fif-conversion -fif-conversion2 -findirect-inlining -finline
  36              	# -finline-atomics -finline-functions -finline-functions-called-once
  37              	# -finline-small-functions -fipa-bit-cp -fipa-cp -fipa-cp-clone -fipa-icf
  38              	# -fipa-icf-functions -fipa-icf-variables -fipa-profile -fipa-pure-const
  39              	# -fipa-ra -fipa-reference -fipa-reference-addressable -fipa-sra
  40              	# -fipa-stack-alignment -fipa-vrp -fira-hoist-pressure
  41              	# -fira-share-save-slots -fira-share-spill-slots
  42              	# -fisolate-erroneous-paths-dereference -fivopts -fkeep-static-consts
  43              	# -fleading-underscore -flifetime-dse -floop-interchange
  44              	# -floop-unroll-and-jam -flra-remat -flto-odr-type-merging
  45              	# -fmerge-constants -fmerge-debug-strings -fmove-loop-invariants
  46              	# -fomit-frame-pointer -foptimize-sibling-calls -foptimize-strlen
  47              	# -fpartial-inlining -fpeel-loops -fpeephole -fpeephole2 -fplt
  48              	# -fpredictive-commoning -fprefetch-loop-arrays -freciprocal-math -free
  49              	# -freg-struct-return -frename-registers -freorder-blocks
  50              	# -freorder-blocks-and-partition -freorder-functions -frerun-cse-after-loop
  51              	# -fsched-critical-path-heuristic -fsched-dep-count-heuristic
  52              	# -fsched-group-heuristic -fsched-interblock -fsched-last-insn-heuristic
  53              	# -fsched-rank-heuristic -fsched-spec -fsched-spec-insn-heuristic
  54              	# -fsched-stalled-insns-dep -fschedule-fusion -fschedule-insns2
  55              	# -fsemantic-interposition -fshow-column -fshrink-wrap
  56              	# -fshrink-wrap-separate -fsplit-ivs-in-unroller -fsplit-loops
  57              	# -fsplit-paths -fsplit-wide-types -fssa-backprop -fssa-phiopt
GAS LISTING /tmp/ccLUVin9.s 			page 2


  58              	# -fstack-clash-protection -fstack-protector-strong -fstdarg-opt
  59              	# -fstore-merging -fstrict-aliasing -fstrict-volatile-bitfields
  60              	# -fsync-libcalls -fthread-jumps -ftoplevel-reorder -ftree-bit-ccp
  61              	# -ftree-builtin-call-dce -ftree-ccp -ftree-ch -ftree-coalesce-vars
  62              	# -ftree-copy-prop -ftree-cselim -ftree-dce -ftree-dominator-opts
  63              	# -ftree-dse -ftree-forwprop -ftree-fre -ftree-loop-distribute-patterns
  64              	# -ftree-loop-distribution -ftree-loop-if-convert -ftree-loop-im
  65              	# -ftree-loop-ivcanon -ftree-loop-optimize -ftree-loop-vectorize
  66              	# -ftree-parallelize-loops= -ftree-partial-pre -ftree-phiprop -ftree-pre
  67              	# -ftree-pta -ftree-reassoc -ftree-scev-cprop -ftree-sink
  68              	# -ftree-slp-vectorize -ftree-slsr -ftree-sra -ftree-switch-conversion
  69              	# -ftree-tail-merge -ftree-ter -ftree-vrp -funit-at-a-time
  70              	# -funroll-all-loops -funroll-loops -funsafe-math-optimizations
  71              	# -funswitch-loops -fvar-tracking -fvar-tracking-assignments -fverbose-asm
  72              	# -fversion-loops-for-strides -fweb -fzero-initialized-in-bss
  73              	# -m128bit-long-double -m64 -m80387 -mabm -maccumulate-outgoing-args -madx
  74              	# -maes -malign-stringops -mavx -mavx2 -mbmi -mbmi2 -mclflushopt -mcx16
  75              	# -mf16c -mfancy-math-387 -mfma -mfp-ret-in-387 -mfsgsbase -mfxsr -mglibc
  76              	# -mhle -mlong-double-80 -mlzcnt -mmmx -mmovbe -mpclmul -mpopcnt -mprfchw
  77              	# -mpush-args -mrdrnd -mrdseed -mred-zone -mrtm -msahf -msse -msse2 -msse3
  78              	# -msse4 -msse4.1 -msse4.2 -mssse3 -mstv -mtls-direct-seg-refs -mvzeroupper
  79              	# -mxsave -mxsavec -mxsaveopt -mxsaves
  80              	
  81              		.text
  82              	.Ltext0:
  83              		.cfi_sections	.debug_frame
  84              		.p2align 4
  86              	extendSieve_smallSize:
  87              	.LVL0:
  88              	.LFB68:
  89              		.file 1 "sieve_extend.c"
   1:sieve_extend.c **** // SIeve alogithm by Rogier van Dam
   2:sieve_extend.c **** 
   3:sieve_extend.c **** // TODO; Check why vector is not working with range > 1000000
   4:sieve_extend.c **** 
   5:sieve_extend.c **** #include <stdio.h>
   6:sieve_extend.c **** #include <stdlib.h>
   7:sieve_extend.c **** #include <stdint.h>
   8:sieve_extend.c **** #include <time.h>
   9:sieve_extend.c **** #include <math.h>
  10:sieve_extend.c **** #include <string.h>
  11:sieve_extend.c **** 
  12:sieve_extend.c **** //add debug in front of a line to only compile it if the value below is set to 1 (or !=0)
  13:sieve_extend.c **** #define option_runonce 0
  14:sieve_extend.c **** #define debug if (option_runonce)
  15:sieve_extend.c **** #define debug2 if (option_runonce>=2)
  16:sieve_extend.c **** 
  17:sieve_extend.c **** // defaults
  18:sieve_extend.c **** #define default_sieve_limit 1000000
  19:sieve_extend.c **** #define default_blocksize (32*1024*8-1024)
  20:sieve_extend.c **** #define default_sieve_duration 5
  21:sieve_extend.c **** #define default_sample_duration 0.1
  22:sieve_extend.c **** #define default_sample_max 5
  23:sieve_extend.c **** #define default_verbose_level 2
  24:sieve_extend.c **** #define default_tune_level 1
  25:sieve_extend.c **** #define default_check_level 1
  26:sieve_extend.c **** #define default_show_primes_on_error 100
GAS LISTING /tmp/ccLUVin9.s 			page 3


  27:sieve_extend.c **** #define default_showMaxFactor (0 || option_runonce?100:0)
  28:sieve_extend.c **** #define anticiped_cache_line_bytesize 128
  29:sieve_extend.c **** 
  30:sieve_extend.c **** // helper functions
  31:sieve_extend.c **** #define pow(base,pow) (pow*((base>>pow)&1U))
  32:sieve_extend.c **** #define min(a,b) ((a<b) ? a : b)
  33:sieve_extend.c **** #define uintsafeminus(a,b) ((a>b)?(a-b):0)
  34:sieve_extend.c **** #define likely(x)       (__builtin_expect((x),1))
  35:sieve_extend.c **** #define unlikely(x)     (__builtin_expect((x),0))
  36:sieve_extend.c **** 
  37:sieve_extend.c **** // types
  38:sieve_extend.c **** #define bitword_t uint64_t
  39:sieve_extend.c **** #define TYPE uint64_t
  40:sieve_extend.c **** #define counter_t TYPE
  41:sieve_extend.c **** #define bitshift_t TYPE
  42:sieve_extend.c **** 
  43:sieve_extend.c **** #define WORD_SIZE (sizeof(bitword_t)*8)
  44:sieve_extend.c **** #define WORD_SIZE_counter ((counter_t)WORD_SIZE)
  45:sieve_extend.c **** #define WORD_SIZE_bitshift ((bitshift_t)WORD_SIZE)
  46:sieve_extend.c **** //#define SHIFT ((bitshift_t)(pow(WORD_SIZE,1)+pow(WORD_SIZE,2)+pow(WORD_SIZE,3)+pow(WORD_SIZE,4)+p
  47:sieve_extend.c **** #define SHIFT_WORD ((bitshift_t)(pow(WORD_SIZE,1)+pow(WORD_SIZE,2)+pow(WORD_SIZE,3)+pow(WORD_SIZE,4
  48:sieve_extend.c **** 
  49:sieve_extend.c **** #define VECTOR_ELEMENTS 4
  50:sieve_extend.c **** #define VECTOR_SIZE_bytes (sizeof(bitword_t)*VECTOR_ELEMENTS)
  51:sieve_extend.c **** #define VECTOR_SIZE_counter ((counter_t)VECTOR_SIZE_bytes*8)
  52:sieve_extend.c **** #define VECTOR_SIZE (VECTOR_SIZE_bytes*8)
  53:sieve_extend.c **** #define SHIFT_VECTOR ((bitshift_t)(pow(VECTOR_SIZE,1)+pow(VECTOR_SIZE,2)+pow(VECTOR_SIZE,3)+pow(VEC
  54:sieve_extend.c **** 
  55:sieve_extend.c **** // types (II) - calculated
  56:sieve_extend.c **** typedef bitword_t bitvector_t __attribute__ ((vector_size(VECTOR_SIZE_bytes)));
  57:sieve_extend.c **** 
  58:sieve_extend.c **** // globals for tuning
  59:sieve_extend.c **** // #define SMALLSTEP_FASTER ((counter_t)0)
  60:sieve_extend.c **** // #define MEDIUMSTEP_FASTER ((counter_t)16)
  61:sieve_extend.c **** // #define VECTORSTEP_FASTER ((counter_t)128)
  62:sieve_extend.c **** counter_t global_SMALLSTEP_FASTER = 0;
  63:sieve_extend.c **** counter_t global_MEDIUMSTEP_FASTER = 0;
  64:sieve_extend.c **** counter_t global_VECTORSTEP_FASTER = VECTOR_SIZE/2;
  65:sieve_extend.c **** #define SMALLSTEP_FASTER ((counter_t)global_SMALLSTEP_FASTER)
  66:sieve_extend.c **** #define MEDIUMSTEP_FASTER ((counter_t)global_MEDIUMSTEP_FASTER)
  67:sieve_extend.c **** #define VECTORSTEP_FASTER ((counter_t)global_VECTORSTEP_FASTER)
  68:sieve_extend.c **** 
  69:sieve_extend.c **** // Patterns based on types
  70:sieve_extend.c **** #define SAFE_SHIFTBIT (bitshift_t)1U
  71:sieve_extend.c **** #define SAFE_ZERO  (bitword_t)0U
  72:sieve_extend.c **** #define BITWORD_SHIFTBIT (bitword_t)1U
  73:sieve_extend.c **** #define WORDMASK ((~SAFE_ZERO)>>(WORD_SIZE_bitshift-SHIFT_WORD))
  74:sieve_extend.c **** #define VECTORMASK ((~SAFE_ZERO)>>(WORD_SIZE_bitshift-SHIFT_VECTOR))
  75:sieve_extend.c **** 
  76:sieve_extend.c **** // helpder functions for word/vector indexing
  77:sieve_extend.c **** #define wordindex(index) (((counter_t)index) >> (bitshift_t)SHIFT_WORD)
  78:sieve_extend.c **** #define wordend(index) ((counter_t)index|WORDMASK)
  79:sieve_extend.c **** #define wordstart(index) ((counter_t)(index)&(counter_t)(~WORDMASK))
  80:sieve_extend.c **** #define vectorindex(index) (((counter_t)index) >> (bitshift_t)SHIFT_VECTOR)
  81:sieve_extend.c **** #define vectorstart(index) (((counter_t)index) & (counter_t)~VECTORMASK)
  82:sieve_extend.c **** #define vectorfromword(word) ((counter_t)(word)>>(SHIFT_VECTOR-SHIFT_WORD))
  83:sieve_extend.c **** 
GAS LISTING /tmp/ccLUVin9.s 			page 4


  84:sieve_extend.c **** // modern processors do a & over the shiftssize, so we only have to do that ourselve when using the
  85:sieve_extend.c **** #define bitindex(index) ((bitshift_t)(index))
  86:sieve_extend.c **** #define bitindex_calc(index) ((bitshift_t)(index)&((bitshift_t)(WORDMASK)))
  87:sieve_extend.c **** #define markmask(index) (BITWORD_SHIFTBIT << bitindex(index))
  88:sieve_extend.c **** #define markmask_calc(index) (BITWORD_SHIFTBIT << bitindex_calc(index))
  89:sieve_extend.c **** // #define chopmask(index) ((SAFE_SHIFTBIT << bitindex(index))-SAFE_SHIFTBIT)
  90:sieve_extend.c **** #define chopmask(index) (~SAFE_ZERO >> (WORD_SIZE-1-bitindex_calc(index)))
  91:sieve_extend.c **** #define keepmask(index) (~SAFE_ZERO << (bitindex_calc(index)))
  92:sieve_extend.c **** 
  93:sieve_extend.c **** struct sieve_t {
  94:sieve_extend.c ****     bitword_t* bitarray;
  95:sieve_extend.c ****     counter_t  bits;
  96:sieve_extend.c ****     counter_t  size;
  97:sieve_extend.c **** };
  98:sieve_extend.c **** 
  99:sieve_extend.c **** #include "debugtools.h"
 100:sieve_extend.c **** 
 101:sieve_extend.c **** // use cache lines as much as possible - alignment might be key
 102:sieve_extend.c **** // moved clearing the sieve with 0 to the sieve_block_extend - it gave weird malloc problems at thi
 103:sieve_extend.c **** #define ceiling(x,y) (((x) + (y) - 1) / (y)) // Return the smallest multiple N of y such that:  x <
 104:sieve_extend.c **** static struct sieve_t *sieve_create(counter_t size) {
 105:sieve_extend.c ****     // size_t memSize = ; //make multiple of 8
 106:sieve_extend.c **** 
 107:sieve_extend.c ****     struct sieve_t *sieve = aligned_alloc(8, sizeof(struct sieve_t));
 108:sieve_extend.c ****     sieve->bitarray = aligned_alloc((size_t)anticiped_cache_line_bytesize, (size_t)ceiling(1+((size
 109:sieve_extend.c ****     sieve->bits     = size >> 1;
 110:sieve_extend.c ****     sieve->size     = size;
 111:sieve_extend.c **** 
 112:sieve_extend.c ****     return sieve;
 113:sieve_extend.c **** }
 114:sieve_extend.c **** 
 115:sieve_extend.c **** static void sieve_delete(struct sieve_t *sieve) {
 116:sieve_extend.c ****     free(sieve->bitarray);
 117:sieve_extend.c ****     free(sieve);
 118:sieve_extend.c **** }
 119:sieve_extend.c **** 
 120:sieve_extend.c **** // not much performance gain at smaller sieves, but its's nice to have an implementation
 121:sieve_extend.c **** static inline counter_t searchBitFalse(bitword_t* bitarray, register counter_t index) {
 122:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 124:sieve_extend.c **** }
 125:sieve_extend.c **** 
 126:sieve_extend.c **** // not much performance gain at smaller sieves, but its's nice to have an implementation
 127:sieve_extend.c **** static inline counter_t searchBitFalse_longRange(bitword_t* bitarray, register counter_t index) {
 128:sieve_extend.c ****     // return searchBitFalse(bitarray, index);
 129:sieve_extend.c **** 
 130:sieve_extend.c ****    register counter_t index_word = wordindex(index);
 131:sieve_extend.c ****    bitshift_t index_bit  = bitindex_calc(index);
 132:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 133:sieve_extend.c ****    index += distance;
 134:sieve_extend.c ****    distance += index_bit;
 135:sieve_extend.c **** 
 136:sieve_extend.c ****    while unlikely(distance == WORD_SIZE_bitshift) { // to prevent a bug from optimzer
 137:sieve_extend.c ****        index_word++;
 138:sieve_extend.c ****        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 139:sieve_extend.c ****        index += distance;
 140:sieve_extend.c ****    }
GAS LISTING /tmp/ccLUVin9.s 			page 5


 141:sieve_extend.c **** 
 142:sieve_extend.c ****    return index;
 143:sieve_extend.c **** }
 144:sieve_extend.c **** 
 145:sieve_extend.c **** 
 146:sieve_extend.c **** static inline void applyMask_array(bitword_t* __restrict bitarray, const counter_t step, const coun
 147:sieve_extend.c ****     register const counter_t step_2 = step * 2;
 148:sieve_extend.c ****     register const counter_t step_3 = step * 3;
 149:sieve_extend.c ****     register const counter_t step_4 = step * 4;
 150:sieve_extend.c ****     register const counter_t range_stop_word = wordindex(range_stop);
 151:sieve_extend.c ****     const counter_t loop_stop_word = (range_stop_word > step_3) ? (range_stop_word - step_3) : (cou
 152:sieve_extend.c **** 
 153:sieve_extend.c ****     #pragma GCC ivdep
 154:sieve_extend.c ****     for (;index_word < loop_stop_word;  index_word += step_4) {
 155:sieve_extend.c ****         bitarray[index_word         ] |= mask;
 156:sieve_extend.c ****         bitarray[index_word + step  ] |= mask;
 157:sieve_extend.c ****         bitarray[index_word + step_2] |= mask;
 158:sieve_extend.c ****         bitarray[index_word + step_3] |= mask;
 159:sieve_extend.c ****     }
 160:sieve_extend.c **** 
 161:sieve_extend.c ****     #pragma GCC ivdep
 162:sieve_extend.c ****     while (index_word < range_stop_word) {
 163:sieve_extend.c ****         bitarray[index_word] |= mask;
 164:sieve_extend.c ****         index_word += step;
 165:sieve_extend.c ****     }
 166:sieve_extend.c **** 
 167:sieve_extend.c ****     if (index_word == wordindex(range_stop)) {
 168:sieve_extend.c ****         bitarray[wordindex(range_stop)] |= (mask & chopmask(range_stop)); //only needed if blocks n
 169:sieve_extend.c ****         
 170:sieve_extend.c ****     }
 171:sieve_extend.c **** }
 172:sieve_extend.c **** 
 173:sieve_extend.c **** static inline void applyMask_ptr(bitword_t* __restrict bitarray, const counter_t step, const counte
 174:sieve_extend.c ****    const counter_t range_stop_word = wordindex(range_stop);
 175:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 176:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 177:sieve_extend.c **** 
 178:sieve_extend.c ****    //#pragma GCC unroll 10
 179:sieve_extend.c ****    #pragma GCC ivdep
 180:sieve_extend.c ****    while likely(index_ptr < fast_loop_ptr) {
 181:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 182:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 183:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 184:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 185:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 186:sieve_extend.c ****    }
 187:sieve_extend.c **** 
 188:sieve_extend.c ****    register const bitword_t* __restrict range_stop_ptr = &bitarray[(range_stop_word)];
 189:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 190:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 191:sieve_extend.c ****    }
 192:sieve_extend.c **** 
 193:sieve_extend.c ****    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range_stop_ptr, depending o
 194:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 195:sieve_extend.c ****    }
 196:sieve_extend.c **** }
 197:sieve_extend.c **** 
GAS LISTING /tmp/ccLUVin9.s 			page 6


 198:sieve_extend.c **** // set bits by creating a pattern and then extending it to word and range size
 199:sieve_extend.c **** static inline void setBitsTrue_smallStep(bitword_t* __restrict bitarray, const counter_t range_star
 200:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using smallstep (%ju occurances)
 201:sieve_extend.c **** 
 202:sieve_extend.c ****     // build the pattern in a word
 203:sieve_extend.c **** 	register bitword_t pattern = BITWORD_SHIFTBIT;
 204:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; patternsize += patternsi
 205:sieve_extend.c ****         pattern |= (pattern << patternsize);
 206:sieve_extend.c **** 
 207:sieve_extend.c ****     // debug if (step==13) { printf("Before\n"); dump_bitarray(bitarray,10); }
 208:sieve_extend.c ****     
 209:sieve_extend.c ****     // initialize loop variables and stop if this is it
 210:sieve_extend.c ****     const counter_t range_stop_word = wordindex(range_stop);
 211:sieve_extend.c ****     register counter_t range_start_word = wordindex(range_start);
 212:sieve_extend.c ****      if (range_start_word >= range_stop_word) { // shortcut
 213:sieve_extend.c ****        bitarray[range_start_word] |= (pattern << bitindex(range_start)) & chopmask(range_stop);
 214:sieve_extend.c ****         //  debug if (step==13) { printf("After\n"); dump_bitarray(bitarray,10); }
 215:sieve_extend.c ****        return;
 216:sieve_extend.c ****     }
 217:sieve_extend.c ****     
 218:sieve_extend.c ****     bitarray[range_start_word] |= (pattern << bitindex(range_start));
 219:sieve_extend.c **** 
 220:sieve_extend.c ****    // from now on, we are before range_stop_word
 221:sieve_extend.c ****    // first word is special, because it should not set bits before the range_start_bit
 222:sieve_extend.c ****    register bitshift_t pattern_size = WORD_SIZE_bitshift - (WORD_SIZE_bitshift % step);
 223:sieve_extend.c ****    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 224:sieve_extend.c ****    register bitshift_t shift = (bitindex_calc(range_start))%step ;
 225:sieve_extend.c ****    counter_t loop_range = range_stop_word - range_start_word;
 226:sieve_extend.c ****    //#pragma GCC unroll 16
 227:sieve_extend.c ****    #pragma GCC ivdep
 228:sieve_extend.c ****    for (counter_t i=1; i <= loop_range; i++) {
 229:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 230:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 231:sieve_extend.c **** 
 232:sieve_extend.c ****         // bitarray[range_start_word+i] |=  (pattern >> (pattern_size-((shift+i*pattern_shift) % st
 233:sieve_extend.c ****    }
 234:sieve_extend.c ****    bitarray[range_stop_word] &= chopmask(range_stop);
 235:sieve_extend.c **** 
 236:sieve_extend.c **** //    for(counter_t check=range_start; check<=range_stop; check+=step) {
 237:sieve_extend.c **** //         if (!(bitarray[wordindex(check)] & markmask(check))) {
 238:sieve_extend.c **** //             printf("Bit %ju not set\n",check);
 239:sieve_extend.c **** //             dump_bitarray(bitarray,4);
 240:sieve_extend.c **** //             printWord(pattern); printf("\n");
 241:sieve_extend.c **** //             exit(0);
 242:sieve_extend.c **** //         }
 243:sieve_extend.c **** //    }
 244:sieve_extend.c **** 
 245:sieve_extend.c ****     // pattern = (pattern << (bitindex_calc(range_start) % step)); // correct for inital offset
 246:sieve_extend.c ****     // const register bitshift_t pattern_shift = WORD_SIZE_bitshift % step;
 247:sieve_extend.c ****     // const register bitshift_t pattern_shift_flipped = WORD_SIZE_bitshift - pattern_shift - patte
 248:sieve_extend.c ****     // const register counter_t loop_range = range_stop_word - range_start_word;
 249:sieve_extend.c ****     // //#pragma GCC unroll 16
 250:sieve_extend.c ****     // #pragma GCC ivdep
 251:sieve_extend.c ****     // for (counter_t i=1; i <= loop_range; i++) {
 252:sieve_extend.c ****     //     pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 253:sieve_extend.c ****     //     bitarray[range_start_word+i] |= pattern;
 254:sieve_extend.c ****     // }
GAS LISTING /tmp/ccLUVin9.s 			page 7


 255:sieve_extend.c ****     // bitarray[range_stop_word] &= chopmask(range_stop);
 256:sieve_extend.c **** }
 257:sieve_extend.c **** 
 258:sieve_extend.c **** // Medium steps could be within the same word (e.g. less than 64 bits apart).
 259:sieve_extend.c **** // By joining the masks and then writing to memory, we might save some time.
 260:sieve_extend.c **** // This is especially true for small steps over long ranges
 261:sieve_extend.c **** // but it needs tuning, because there is some overhead of checking if the next step is in the same 
 262:sieve_extend.c **** static void  setBitsTrue_mediumStep(bitword_t* __restrict bitarray, const counter_t range_start, co
 263:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 264:sieve_extend.c **** 
 265:sieve_extend.c ****     if (range_stop_unique > range_stop) { // the range will not repeat itself; no need to try to re
 266:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-unique (%ju
 267:sieve_extend.c **** 
 268:sieve_extend.c ****         #pragma GCC ivdep
 269:sieve_extend.c ****         for (register counter_t index = range_start; index <= range_stop;) {
 270:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 271:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 272:sieve_extend.c ****             #pragma GCC ivdep
 273:sieve_extend.c ****             do {
 274:sieve_extend.c ****                 mask |= markmask(index);
 275:sieve_extend.c ****                 index += step;
 276:sieve_extend.c ****             } while (index_word == wordindex(index));
 277:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 278:sieve_extend.c ****             //     mask |= markmask(index);
 279:sieve_extend.c ****             bitarray[index_word] |= mask;
 280:sieve_extend.c ****         }
 281:sieve_extend.c ****     }
 282:sieve_extend.c ****     else { // this mask will reoccur at a interval of step words -> fill mask and reapply as a inte
 283:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-repeat (%ju
 284:sieve_extend.c ****         
 285:sieve_extend.c ****         #pragma GCC ivdep
 286:sieve_extend.c ****         for (register counter_t index = range_start; index <= range_stop_unique;) {
 287:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 288:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 289:sieve_extend.c ****             #pragma GCC ivdep
 290:sieve_extend.c ****             do {
 291:sieve_extend.c ****                 mask |= markmask(index);
 292:sieve_extend.c ****                 index += step;
 293:sieve_extend.c ****             } while (index_word == wordindex(index));
 294:sieve_extend.c ****             // #pragma GCC ivdep
 295:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 296:sieve_extend.c ****             //     mask |= markmask(index);
 297:sieve_extend.c ****             #if __APPLE__
 298:sieve_extend.c ****                applyMask_array(bitarray, step, range_stop, mask, index_word);
 299:sieve_extend.c ****             #else
 300:sieve_extend.c ****                applyMask_ptr(bitarray, step, range_stop, mask, index_word);
 301:sieve_extend.c ****             #endif
 302:sieve_extend.c ****         }
 303:sieve_extend.c ****     }
 304:sieve_extend.c **** }
 305:sieve_extend.c **** 
 306:sieve_extend.c **** // large steps in small ranges (< WORD_SIZE * step) mean the mask is unique
 307:sieve_extend.c **** static inline void setBitsTrue_largeSteps(bitword_t* __restrict bitarray, const counter_t range_sta
 308:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largesteps (%ju occurances
 309:sieve_extend.c ****     
 310:sieve_extend.c ****     //#pragma GCC unroll 16
 311:sieve_extend.c ****     #pragma GCC ivdep
GAS LISTING /tmp/ccLUVin9.s 			page 8


 312:sieve_extend.c ****     for (counter_t index = range_start; index <= range_stop; index += step) {
 313:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 314:sieve_extend.c ****     }
 315:sieve_extend.c **** }
 316:sieve_extend.c **** 
 317:sieve_extend.c **** static inline void setBitsTrue_largeSteps_unroll(bitword_t* __restrict bitarray, const counter_t ra
 318:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largesteps (%ju occurances
 319:sieve_extend.c ****     
 320:sieve_extend.c ****     counter_t loop_iterations = (range_stop - range_start) / step;
 321:sieve_extend.c ****     //#pragma GCC unroll 16
 322:sieve_extend.c ****     #pragma GCC ivdep 
 323:sieve_extend.c ****     for (register counter_t i = 0; i <= loop_iterations; i++) {
 324:sieve_extend.c ****          bitarray[wordindex(range_start+i*step)] |= markmask(range_start+i*step);
 325:sieve_extend.c ****     }
 326:sieve_extend.c **** }
 327:sieve_extend.c **** 
 328:sieve_extend.c **** // small ranges (< WORD_SIZE * step) mean the mask is unique
 329:sieve_extend.c **** static void setBitsTrue_race(bitword_t* bitarray, counter_t index1, counter_t index2, const counter
 330:sieve_extend.c ****     debug printf("Setting bits step %ju and %ju in %ju bit range (%ju-%ju) using race (%ju occuranc
 331:sieve_extend.c **** 
 332:sieve_extend.c ****     counter_t index1_word = wordindex(index1);
 333:sieve_extend.c ****     counter_t index2_word = wordindex(index2);
 334:sieve_extend.c ****     
 335:sieve_extend.c ****     while (1) {
 336:sieve_extend.c ****         if (index1_word == index2_word) {
 337:sieve_extend.c ****             bitword_t mask = SAFE_ZERO;
 338:sieve_extend.c ****             counter_t index_word = index1_word;
 339:sieve_extend.c ****             do {
 340:sieve_extend.c ****                 mask |= markmask(index1);
 341:sieve_extend.c ****                 index1 += step1;
 342:sieve_extend.c ****                 index1_word = wordindex(index1);
 343:sieve_extend.c ****             } while (index1_word == index_word);
 344:sieve_extend.c ****             do {
 345:sieve_extend.c ****                 mask |= markmask(index2);
 346:sieve_extend.c ****                 index2 += step2;
 347:sieve_extend.c ****                 index2_word = wordindex(index2);
 348:sieve_extend.c ****             } while (index2_word == index_word);
 349:sieve_extend.c ****             bitarray[index_word] |= mask;
 350:sieve_extend.c ****         }
 351:sieve_extend.c **** 
 352:sieve_extend.c ****         // because step is larger, index2 is the most likely to get out of bounds first
 353:sieve_extend.c ****         if (index2 > range_stop) {
 354:sieve_extend.c ****             while (index1 <= range_stop) {
 355:sieve_extend.c ****                 bitarray[wordindex(index1)] |= markmask(index1);
 356:sieve_extend.c ****                 index1 += step1;
 357:sieve_extend.c ****             }
 358:sieve_extend.c ****             return;
 359:sieve_extend.c ****         }
 360:sieve_extend.c **** 
 361:sieve_extend.c ****         if (index1 > range_stop) {
 362:sieve_extend.c ****             while (index2 <= range_stop) {
 363:sieve_extend.c ****                 bitarray[wordindex(index2)] |= markmask(index2);
 364:sieve_extend.c ****                 index2 += step2;
 365:sieve_extend.c ****             }
 366:sieve_extend.c ****             return;
 367:sieve_extend.c ****         }
 368:sieve_extend.c **** 
GAS LISTING /tmp/ccLUVin9.s 			page 9


 369:sieve_extend.c ****         while (index1_word < index2_word) {
 370:sieve_extend.c ****             bitarray[index1_word] |= markmask(index1);
 371:sieve_extend.c ****             index1 += step1;
 372:sieve_extend.c ****             index1_word = wordindex(index1);
 373:sieve_extend.c ****         }
 374:sieve_extend.c ****         
 375:sieve_extend.c ****         while (index2_word < index1_word){
 376:sieve_extend.c ****             bitarray[index2_word] |= markmask(index2);
 377:sieve_extend.c ****             index2 += step2;
 378:sieve_extend.c ****             index2_word = wordindex(index2);
 379:sieve_extend.c ****         }
 380:sieve_extend.c **** 
 381:sieve_extend.c ****     }
 382:sieve_extend.c **** }
 383:sieve_extend.c **** 
 384:sieve_extend.c **** // Large ranges (> WORD_SIZE * step) mean the same mask can be reused
 385:sieve_extend.c **** static inline void setBitsTrue_largeRange(bitword_t* __restrict bitarray, const counter_t range_sta
 386:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange (%ju occurances
 387:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 388:sieve_extend.c **** 
 389:sieve_extend.c ****     //#pragma GCC unroll 16
 390:sieve_extend.c ****     #pragma GCC ivdep
 391:sieve_extend.c ****     for (register counter_t index = range_start; index < range_stop_unique; index += step) {
 392:sieve_extend.c ****         #if __APPLE__
 393:sieve_extend.c ****             applyMask_array(bitarray, step, range_stop, markmask(index), wordindex(index));
 394:sieve_extend.c ****         #else
 395:sieve_extend.c ****             applyMask_ptr(bitarray, step, range_stop, markmask(index), wordindex(index));
 396:sieve_extend.c ****         #endif
 397:sieve_extend.c ****     }
 398:sieve_extend.c **** }
 399:sieve_extend.c **** 
 400:sieve_extend.c **** 
 401:sieve_extend.c **** static inline void applyMask_vector_ptr(bitvector_t* __restrict bitarray, const counter_t step, con
 402:sieve_extend.c ****     const counter_t range_stop_vector = vectorindex(range_stop);
 403:sieve_extend.c ****     register bitvector_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_vec
 404:sieve_extend.c ****     register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_s
 405:sieve_extend.c ****     
 406:sieve_extend.c ****     //#pragma GCC unroll 16
 407:sieve_extend.c ****     #pragma GCC ivdep
 408:sieve_extend.c ****     while likely(index_ptr < fast_loop_ptr) {
 409:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 410:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 411:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 412:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 413:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 414:sieve_extend.c ****     }
 415:sieve_extend.c ****     
 416:sieve_extend.c ****     register const bitvector_t* __restrict range_stop_ptr = __builtin_assume_aligned(&bitarray[(ran
 417:sieve_extend.c ****     while likely(index_ptr <= range_stop_ptr) {
 418:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 419:sieve_extend.c ****     }
 420:sieve_extend.c **** }
 421:sieve_extend.c **** 
 422:sieve_extend.c **** static inline void applyMask_vector_array(bitvector_t* __restrict bitarray_vector, const counter_t 
 423:sieve_extend.c **** 
 424:sieve_extend.c **** //    bitvector_t* __restrict bitarray_vector = __builtin_assume_aligned( (bitvector_t*) bitarray_w
 425:sieve_extend.c ****     register counter_t current_vector = index_vector;
GAS LISTING /tmp/ccLUVin9.s 			page 10


 426:sieve_extend.c ****     register const counter_t range_stop_vector = vectorindex(range_stop);
 427:sieve_extend.c ****     register const counter_t step_2 = step * 2;
 428:sieve_extend.c ****     register const counter_t step_3 = step * 3;
 429:sieve_extend.c ****     register const counter_t step_4 = step * 4;
 430:sieve_extend.c **** 
 431:sieve_extend.c ****     if (current_vector+step_4 <= range_stop_vector) {
 432:sieve_extend.c ****         register const counter_t loop_stop_vector = (range_stop_vector > step_4) ? (range_stop_vect
 433:sieve_extend.c ****         //#pragma GCC unroll 16
 434:sieve_extend.c ****         #pragma GCC ivdep
 435:sieve_extend.c ****         for(; current_vector <= loop_stop_vector; current_vector += step_4) {
 436:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 437:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= mask;
 438:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= mask;
 439:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= mask;
 440:sieve_extend.c ****         }
 441:sieve_extend.c ****     }
 442:sieve_extend.c ****     
 443:sieve_extend.c ****     //#pragma GCC unroll 16
 444:sieve_extend.c ****     #pragma GCC ivdep 
 445:sieve_extend.c ****     for(; current_vector <= range_stop_vector; current_vector += step) {
 446:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 447:sieve_extend.c ****     }
 448:sieve_extend.c ****     
 449:sieve_extend.c **** }
 450:sieve_extend.c **** 
 451:sieve_extend.c **** static void setBitsTrue_largeRange_vector(bitword_t* __restrict bitarray_word, counter_t range_star
 452:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 453:sieve_extend.c **** 
 454:sieve_extend.c ****     bitvector_t* __restrict bitarray_vector = __builtin_assume_aligned( (bitvector_t*) bitarray_wor
 455:sieve_extend.c ****     counter_t range_start_atvector = vectorstart(range_start);
 456:sieve_extend.c ****     if likely((range_start_atvector + step) < range_start) { // not the first step possible in this
 457:sieve_extend.c ****         debug { printf("Range start+step %ju not at start of vector %ju\n",(uintmax_t)range_start+(
 458:sieve_extend.c **** 
 459:sieve_extend.c ****         range_start_atvector += VECTOR_SIZE; // find next vector
 460:sieve_extend.c ****         if (unlikely(range_start_atvector > range_stop)) { // we should not be here; just handle wi
 461:sieve_extend.c ****             debug2 printf("..Marking and returning without vector\n");
 462:sieve_extend.c **** 
 463:sieve_extend.c ****             for (counter_t index = range_start; index <= range_stop; index += step) 
 464:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 465:sieve_extend.c ****             return;                 
 466:sieve_extend.c ****         }
 467:sieve_extend.c **** 
 468:sieve_extend.c ****         debug2 printf("..Marking without vector until %ju\n",(uintmax_t)range_start_atvector);
 469:sieve_extend.c ****         // register counter_t index = range_start; // outside to later adjust range_start
 470:sieve_extend.c ****         //#pragma GCC unroll 16
 471:sieve_extend.c ****         #pragma GCC ivdep 
 472:sieve_extend.c ****         for (; range_start <= range_start_atvector; range_start += step) 
 473:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 474:sieve_extend.c ****     }
 475:sieve_extend.c ****     
 476:sieve_extend.c ****     const counter_t range_stop_unique =  min(range_start + VECTOR_SIZE_counter * step, range_stop);
 477:sieve_extend.c **** 
 478:sieve_extend.c ****     //#pragma GCC unroll 16
 479:sieve_extend.c ****     #pragma GCC ivdep 
 480:sieve_extend.c ****     for (counter_t index = range_start; index < range_stop_unique;) {
 481:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 482:sieve_extend.c ****         register bitvector_t quadmask = { };
GAS LISTING /tmp/ccLUVin9.s 			page 11


 483:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 484:sieve_extend.c ****         
 485:sieve_extend.c ****         // build a quadmask
 486:sieve_extend.c ****         //#pragma GCC unroll 16
 487:sieve_extend.c ****         #pragma GCC ivdep 
 488:sieve_extend.c ****         do {
 489:sieve_extend.c ****             quadmask[word] |= markmask(index);
 490:sieve_extend.c ****             index += step;
 491:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 492:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 493:sieve_extend.c ****         
 494:sieve_extend.c ****         // use mask on all n*step multiples
 495:sieve_extend.c ****         register counter_t current_vector = current_vector_start_word >> (SHIFT_VECTOR - SHIFT_WORD
 496:sieve_extend.c ****         // const counter_t range_stop_vector = vectorindex(range_stop);
 497:sieve_extend.c **** 
 498:sieve_extend.c ****         applyMask_vector_array(bitarray_vector, step, range_stop, quadmask, current_vector);
 499:sieve_extend.c ****     }
 500:sieve_extend.c **** }
 501:sieve_extend.c **** 
 502:sieve_extend.c **** static void extendSieve_smallSize(bitword_t* __restrict bitarray, const counter_t source_start, con
  90              		.loc 1 502 153 view -0
  91              		.cfi_startproc
 503:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
  92              		.loc 1 503 5 view .LVU1
 504:sieve_extend.c ****     // debug { printf("...At start. "); dump_bitarray(bitarray, 4); }
 505:sieve_extend.c **** 
 506:sieve_extend.c ****     const counter_t source_word = wordindex(source_start);
  93              		.loc 1 506 5 view .LVU2
 507:sieve_extend.c ****     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_start)) | (bitarray[sou
  94              		.loc 1 507 5 view .LVU3
  95              	# sieve_extend.c:502: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 502:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
  96              		.loc 1 502 153 is_stmt 0 view .LVU4
  97 0000 55       		push	rbp	#
  98              		.cfi_def_cfa_offset 16
  99              		.cfi_offset 6, -16
 100 0001 4989D1   		mov	r9, rdx	# size, tmp576
 101              	# sieve_extend.c:506:     const counter_t source_word = wordindex(source_start);
 506:sieve_extend.c ****     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_start)) | (bitarray[sou
 102              		.loc 1 506 21 view .LVU5
 103 0004 4889F0   		mov	rax, rsi	# source_word, source_start
 104              	# sieve_extend.c:502: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 502:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 105              		.loc 1 502 153 view .LVU6
 106 0007 4889E5   		mov	rbp, rsp	#,
 107              		.cfi_def_cfa_register 6
 108              	# sieve_extend.c:507:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 109              		.loc 1 507 134 view .LVU7
 110 000a 89F2     		mov	edx, esi	# tmp334, source_start
 111              	.LVL1:
 112              	# sieve_extend.c:502: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 502:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 113              		.loc 1 502 153 view .LVU8
 114 000c 4157     		push	r15	#
 115              	# sieve_extend.c:506:     const counter_t source_word = wordindex(source_start);
 506:sieve_extend.c ****     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_start)) | (bitarray[sou
 116              		.loc 1 506 21 view .LVU9
GAS LISTING /tmp/ccLUVin9.s 			page 12


 117 000e 48C1E806 		shr	rax, 6	# source_word,
 118              	.LVL2:
 119              	# sieve_extend.c:507:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 120              		.loc 1 507 134 view .LVU10
 121 0012 83E23F   		and	edx, 63	# tmp334,
 122              	# sieve_extend.c:502: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 502:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 123              		.loc 1 502 153 view .LVU11
 124 0015 4156     		push	r14	#
 125              	# sieve_extend.c:507:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 126              		.loc 1 507 133 view .LVU12
 127 0017 41B84000 		mov	r8d, 64	# tmp336,
 127      0000
 128              	# sieve_extend.c:507:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 129              		.loc 1 507 167 view .LVU13
 130 001d 4589CB   		mov	r11d, r9d	# tmp342, size
 131              	# sieve_extend.c:502: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 502:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 132              		.loc 1 502 153 view .LVU14
 133 0020 4155     		push	r13	#
 134              	# sieve_extend.c:507:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 135              		.loc 1 507 133 view .LVU15
 136 0022 4129D0   		sub	r8d, edx	# tmp335, tmp334
 137              	# sieve_extend.c:507:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 138              		.loc 1 507 167 view .LVU16
 139 0025 41F7D3   		not	r11d	# tmp342
 140              	# sieve_extend.c:502: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 502:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 141              		.loc 1 502 153 view .LVU17
 142 0028 4154     		push	r12	#
 143              		.cfi_offset 15, -24
 144              		.cfi_offset 14, -32
 145              		.cfi_offset 13, -40
 146              		.cfi_offset 12, -48
 147              	# sieve_extend.c:507:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 148              		.loc 1 507 167 view .LVU18
 149 002a 49C7C4FF 		mov	r12, -1	# tmp345,
 149      FFFFFF
 150 0031 C442A3F7 		shrx	r13, r12, r11	# tmp344, tmp345, tmp342
 150      EC
 151              	# sieve_extend.c:502: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 502:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 152              		.loc 1 502 153 view .LVU19
 153 0036 53       		push	rbx	#
 154              		.cfi_offset 3, -56
 155 0037 4889CB   		mov	rbx, rcx	# destination_stop, tmp577
 156              	# sieve_extend.c:507:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 157              		.loc 1 507 58 view .LVU20
 158 003a 488B0CC7 		mov	rcx, QWORD PTR [rdi+rax*8]	# *_5, *_5
 159              	.LVL3:
 160              	# sieve_extend.c:507:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 161              		.loc 1 507 112 view .LVU21
 162 003e C462B9F7 		shlx	r8, QWORD PTR 8[rdi+rax*8], r8	# tmp337, *_11, tmp335
 162      44C708
 163              	# sieve_extend.c:507:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 164              		.loc 1 507 58 view .LVU22
 165 0045 C462CBF7 		shrx	r10, rcx, rsi	# tmp339, *_5, source_start
GAS LISTING /tmp/ccLUVin9.s 			page 13


 165      D1
 166              	# sieve_extend.c:507:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 167              		.loc 1 507 85 view .LVU23
 168 004a 4D09D0   		or	r8, r10	# tmp341, tmp339
 169              	# sieve_extend.c:502: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 502:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 170              		.loc 1 502 153 view .LVU24
 171 004d 4883E4E0 		and	rsp, -32	#,
 172              	# sieve_extend.c:507:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 173              		.loc 1 507 24 view .LVU25
 174 0051 4D21E8   		and	r8, r13	# pattern, tmp344
 175              	.LVL4:
 508:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 176              		.loc 1 508 5 is_stmt 1 view .LVU26
 177              	.LBB311:
 178              		.loc 1 508 10 view .LVU27
 179              		.loc 1 508 54 view .LVU28
 180              	# sieve_extend.c:508:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 181              		.loc 1 508 5 is_stmt 0 view .LVU29
 182 0054 4983F940 		cmp	r9, 64	# size,
 183 0058 0F87C200 		ja	.L2	#,
 183      0000
 184 005e 4D89CE   		mov	r14, r9	# pattern_size, size
 185              	.LVL5:
 186              	.L3:
 509:sieve_extend.c ****         pattern |= (pattern << pattern_size);
 187              		.loc 1 509 9 is_stmt 1 discriminator 3 view .LVU30
 188              	# sieve_extend.c:508:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 508:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 189              		.loc 1 508 103 is_stmt 0 discriminator 3 view .LVU31
 190 0061 4B8D0436 		lea	rax, [r14+r14]	# pattern_size,
 191              	# sieve_extend.c:509:         pattern |= (pattern << pattern_size);
 192              		.loc 1 509 29 discriminator 3 view .LVU32
 193 0065 C44289F7 		shlx	r15, r8, r14	# _23, pattern, pattern_size
 193      F8
 194              	# sieve_extend.c:509:         pattern |= (pattern << pattern_size);
 195              		.loc 1 509 17 discriminator 3 view .LVU33
 196 006a 4D09F8   		or	r8, r15	# pattern, _23
 197              	.LVL6:
 508:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 198              		.loc 1 508 90 is_stmt 1 discriminator 3 view .LVU34
 508:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 199              		.loc 1 508 54 discriminator 3 view .LVU35
 200              	# sieve_extend.c:508:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 508:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 201              		.loc 1 508 5 is_stmt 0 discriminator 3 view .LVU36
 202 006d 4883F840 		cmp	rax, 64	# pattern_size,
 203 0071 0F87A900 		ja	.L2	#,
 203      0000
 204              		.loc 1 509 9 is_stmt 1 view .LVU37
 205              	# sieve_extend.c:508:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 508:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 206              		.loc 1 508 103 is_stmt 0 view .LVU38
 207 0077 4A8D0CB5 		lea	rcx, 0[0+r14*4]	# pattern_size,
 207      00000000 
 208              	# sieve_extend.c:509:         pattern |= (pattern << pattern_size);
 209              		.loc 1 509 29 view .LVU39
GAS LISTING /tmp/ccLUVin9.s 			page 14


 210 007f C4C2F9F7 		shlx	rdx, r8, rax	# _23, pattern, pattern_size
 210      D0
 211              	# sieve_extend.c:509:         pattern |= (pattern << pattern_size);
 212              		.loc 1 509 17 view .LVU40
 213 0084 4909D0   		or	r8, rdx	# pattern, _23
 214              	.LVL7:
 508:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 215              		.loc 1 508 90 is_stmt 1 view .LVU41
 508:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 216              		.loc 1 508 54 view .LVU42
 217              	# sieve_extend.c:508:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 508:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 218              		.loc 1 508 5 is_stmt 0 view .LVU43
 219 0087 4883F940 		cmp	rcx, 64	# pattern_size,
 220 008b 0F878F00 		ja	.L2	#,
 220      0000
 221              		.loc 1 509 9 is_stmt 1 view .LVU44
 222              	# sieve_extend.c:508:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 508:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 223              		.loc 1 508 103 is_stmt 0 view .LVU45
 224 0091 4E8D1CF5 		lea	r11, 0[0+r14*8]	# pattern_size,
 224      00000000 
 225              	# sieve_extend.c:509:         pattern |= (pattern << pattern_size);
 226              		.loc 1 509 29 view .LVU46
 227 0099 C442F1F7 		shlx	r10, r8, rcx	# _23, pattern, pattern_size
 227      D0
 228              	# sieve_extend.c:509:         pattern |= (pattern << pattern_size);
 229              		.loc 1 509 17 view .LVU47
 230 009e 4D09D0   		or	r8, r10	# pattern, _23
 231              	.LVL8:
 508:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 232              		.loc 1 508 90 is_stmt 1 view .LVU48
 508:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 233              		.loc 1 508 54 view .LVU49
 234              	# sieve_extend.c:508:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 508:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 235              		.loc 1 508 5 is_stmt 0 view .LVU50
 236 00a1 4983FB40 		cmp	r11, 64	# pattern_size,
 237 00a5 7779     		ja	.L2	#,
 238              		.loc 1 509 9 is_stmt 1 view .LVU51
 239              	# sieve_extend.c:508:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 508:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 240              		.loc 1 508 103 is_stmt 0 view .LVU52
 241 00a7 4D89F5   		mov	r13, r14	# pattern_size, pattern_size
 242              	# sieve_extend.c:509:         pattern |= (pattern << pattern_size);
 243              		.loc 1 509 29 view .LVU53
 244 00aa C442A1F7 		shlx	r12, r8, r11	# _23, pattern, pattern_size
 244      E0
 245              	# sieve_extend.c:508:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 508:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 246              		.loc 1 508 103 view .LVU54
 247 00af 49C1E504 		sal	r13, 4	# pattern_size,
 248              	# sieve_extend.c:509:         pattern |= (pattern << pattern_size);
 249              		.loc 1 509 17 view .LVU55
 250 00b3 4D09E0   		or	r8, r12	# pattern, _23
 251              	.LVL9:
 508:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
GAS LISTING /tmp/ccLUVin9.s 			page 15


 252              		.loc 1 508 90 is_stmt 1 view .LVU56
 508:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 253              		.loc 1 508 54 view .LVU57
 254              	# sieve_extend.c:508:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 508:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 255              		.loc 1 508 5 is_stmt 0 view .LVU58
 256 00b6 4983FD40 		cmp	r13, 64	# pattern_size,
 257 00ba 7764     		ja	.L2	#,
 258              		.loc 1 509 9 is_stmt 1 view .LVU59
 259              	# sieve_extend.c:508:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 508:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 260              		.loc 1 508 103 is_stmt 0 view .LVU60
 261 00bc 4C89F0   		mov	rax, r14	# pattern_size, pattern_size
 262              	# sieve_extend.c:509:         pattern |= (pattern << pattern_size);
 263              		.loc 1 509 29 view .LVU61
 264 00bf C44291F7 		shlx	r15, r8, r13	# _23, pattern, pattern_size
 264      F8
 265              	# sieve_extend.c:508:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 508:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 266              		.loc 1 508 103 view .LVU62
 267 00c4 48C1E005 		sal	rax, 5	# pattern_size,
 268              	# sieve_extend.c:509:         pattern |= (pattern << pattern_size);
 269              		.loc 1 509 17 view .LVU63
 270 00c8 4D09F8   		or	r8, r15	# pattern, _23
 271              	.LVL10:
 508:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 272              		.loc 1 508 90 is_stmt 1 view .LVU64
 508:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 273              		.loc 1 508 54 view .LVU65
 274              	# sieve_extend.c:508:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 508:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 275              		.loc 1 508 5 is_stmt 0 view .LVU66
 276 00cb 4883F840 		cmp	rax, 64	# pattern_size,
 277 00cf 774F     		ja	.L2	#,
 278              		.loc 1 509 9 is_stmt 1 view .LVU67
 279              	# sieve_extend.c:508:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 508:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 280              		.loc 1 508 103 is_stmt 0 view .LVU68
 281 00d1 4C89F1   		mov	rcx, r14	# pattern_size, pattern_size
 282              	# sieve_extend.c:509:         pattern |= (pattern << pattern_size);
 283              		.loc 1 509 29 view .LVU69
 284 00d4 C4C2F9F7 		shlx	rdx, r8, rax	# _23, pattern, pattern_size
 284      D0
 285              	# sieve_extend.c:508:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 508:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 286              		.loc 1 508 103 view .LVU70
 287 00d9 48C1E106 		sal	rcx, 6	# pattern_size,
 288              	# sieve_extend.c:509:         pattern |= (pattern << pattern_size);
 289              		.loc 1 509 17 view .LVU71
 290 00dd 4909D0   		or	r8, rdx	# pattern, _23
 291              	.LVL11:
 508:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 292              		.loc 1 508 90 is_stmt 1 view .LVU72
 508:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 293              		.loc 1 508 54 view .LVU73
 294              	# sieve_extend.c:508:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 508:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
GAS LISTING /tmp/ccLUVin9.s 			page 16


 295              		.loc 1 508 5 is_stmt 0 view .LVU74
 296 00e0 4883F940 		cmp	rcx, 64	# pattern_size,
 297 00e4 773A     		ja	.L2	#,
 298              		.loc 1 509 9 is_stmt 1 view .LVU75
 299              	# sieve_extend.c:508:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 508:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 300              		.loc 1 508 103 is_stmt 0 view .LVU76
 301 00e6 4D89F3   		mov	r11, r14	# pattern_size, pattern_size
 302              	# sieve_extend.c:509:         pattern |= (pattern << pattern_size);
 303              		.loc 1 509 29 view .LVU77
 304 00e9 C442F1F7 		shlx	r10, r8, rcx	# _23, pattern, pattern_size
 304      D0
 305              	# sieve_extend.c:508:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 508:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 306              		.loc 1 508 103 view .LVU78
 307 00ee 49C1E307 		sal	r11, 7	# pattern_size,
 308              	# sieve_extend.c:509:         pattern |= (pattern << pattern_size);
 309              		.loc 1 509 17 view .LVU79
 310 00f2 4D09D0   		or	r8, r10	# pattern, _23
 311              	.LVL12:
 508:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 312              		.loc 1 508 90 is_stmt 1 view .LVU80
 508:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 313              		.loc 1 508 54 view .LVU81
 314              	# sieve_extend.c:508:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 508:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 315              		.loc 1 508 5 is_stmt 0 view .LVU82
 316 00f5 4983FB40 		cmp	r11, 64	# pattern_size,
 317 00f9 7725     		ja	.L2	#,
 318              		.loc 1 509 9 is_stmt 1 view .LVU83
 319              	# sieve_extend.c:508:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 508:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 320              		.loc 1 508 103 is_stmt 0 view .LVU84
 321 00fb 49C1E608 		sal	r14, 8	# pattern_size,
 322              	# sieve_extend.c:509:         pattern |= (pattern << pattern_size);
 323              		.loc 1 509 29 view .LVU85
 324 00ff C442A1F7 		shlx	r12, r8, r11	# _23, pattern, pattern_size
 324      E0
 325              	# sieve_extend.c:509:         pattern |= (pattern << pattern_size);
 326              		.loc 1 509 17 view .LVU86
 327 0104 4D09E0   		or	r8, r12	# pattern, _23
 328              	.LVL13:
 508:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 329              		.loc 1 508 90 is_stmt 1 view .LVU87
 508:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 330              		.loc 1 508 54 view .LVU88
 331              	# sieve_extend.c:508:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 508:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 332              		.loc 1 508 5 is_stmt 0 view .LVU89
 333 0107 4983FE40 		cmp	r14, 64	# pattern_size,
 334 010b 0F8650FF 		jbe	.L3	#,
 334      FFFF
 335              	.LVL14:
 336 0111 66662E0F 		.p2align 4
 336      1F840000 
 336      0000000F 
 336      1F4000
GAS LISTING /tmp/ccLUVin9.s 			page 17


 337              		.p2align 3
 338              	.L2:
 508:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 339              		.loc 1 508 5 view .LVU90
 340              	.LBE311:
 510:sieve_extend.c **** 
 511:sieve_extend.c ****     const counter_t destination_start = source_start + size;
 341              		.loc 1 511 5 is_stmt 1 view .LVU91
 342              	# sieve_extend.c:511:     const counter_t destination_start = source_start + size;
 343              		.loc 1 511 21 is_stmt 0 view .LVU92
 344 0120 4A8D0C0E 		lea	rcx, [rsi+r9]	# destination_start,
 345              	.LVL15:
 512:sieve_extend.c ****     counter_t destination_start_word = wordindex(destination_start);
 346              		.loc 1 512 5 is_stmt 1 view .LVU93
 347              	# sieve_extend.c:513:     counter_t destination_stop_word = wordindex(destination_stop);
 513:sieve_extend.c ****     counter_t destination_stop_word = wordindex(destination_stop);
 348              		.loc 1 513 15 is_stmt 0 view .LVU94
 349 0124 4989DC   		mov	r12, rbx	# destination_stop_word, destination_stop
 350              	# sieve_extend.c:512:     counter_t destination_start_word = wordindex(destination_start);
 512:sieve_extend.c ****     counter_t destination_start_word = wordindex(destination_start);
 351              		.loc 1 512 15 view .LVU95
 352 0127 4989CB   		mov	r11, rcx	# destination_start_word, destination_start
 353 012a F7D3     		not	ebx	# tmp348
 354              	.LVL16:
 512:sieve_extend.c ****     counter_t destination_start_word = wordindex(destination_start);
 355              		.loc 1 512 15 view .LVU96
 356 012c 49C1EB06 		shr	r11, 6	# destination_start_word,
 357              	.LVL17:
 358              		.loc 1 513 5 is_stmt 1 view .LVU97
 359 0130 49C7C5FF 		mov	r13, -1	# tmp350,
 359      FFFFFF
 360              	# sieve_extend.c:513:     counter_t destination_stop_word = wordindex(destination_stop);
 361              		.loc 1 513 15 is_stmt 0 view .LVU98
 362 0137 49C1EC06 		shr	r12, 6	# destination_stop_word,
 363              	.LVL18:
 514:sieve_extend.c ****     if (destination_start_word >= destination_stop_word) {
 364              		.loc 1 514 5 is_stmt 1 view .LVU99
 365 013b 4A8D34DD 		lea	rsi, 0[0+r11*8]	# _116,
 365      00000000 
 366              	.LVL19:
 367              		.loc 1 514 5 is_stmt 0 view .LVU100
 368 0143 4C8D3437 		lea	r14, [rdi+rsi]	# _117,
 369              	# sieve_extend.c:514:     if (destination_start_word >= destination_stop_word) {
 370              		.loc 1 514 8 view .LVU101
 371 0147 4D39E3   		cmp	r11, r12	# destination_start_word, destination_stop_word
 372 014a C4C2F1F7 		shlx	rax, r8, rcx	# _120, pattern, destination_start
 372      C0
 373 014f 4D8B3E   		mov	r15, QWORD PTR [r14]	# pretmp_118, *_117
 374 0152 C4C2E3F7 		shrx	rbx, r13, rbx	# _124, tmp350, tmp348
 374      DD
 375 0157 0F833305 		jnb	.L49	#,
 375      0000
 515:sieve_extend.c ****         bitarray[destination_start_word] |= (pattern << bitindex(destination_start)) & chopmask(des
 516:sieve_extend.c ****         return;
 517:sieve_extend.c ****     }
 518:sieve_extend.c **** 
 519:sieve_extend.c ****     bitarray[destination_start_word] |= (pattern << bitindex(destination_start));
GAS LISTING /tmp/ccLUVin9.s 			page 18


 376              		.loc 1 519 5 is_stmt 1 view .LVU102
 377              	# sieve_extend.c:519:     bitarray[destination_start_word] |= (pattern << bitindex(destination_star
 378              		.loc 1 519 38 is_stmt 0 view .LVU103
 379 015d 4C09F8   		or	rax, r15	# tmp353, pretmp_118
 380              	# sieve_extend.c:522:     register const bitshift_t pattern_shift = WORD_SIZE_counter % size;
 520:sieve_extend.c **** 
 521:sieve_extend.c ****     // TODO: refactor according to smallstep
 522:sieve_extend.c ****     register const bitshift_t pattern_shift = WORD_SIZE_counter % size;
 381              		.loc 1 522 31 view .LVU104
 382 0160 31D2     		xor	edx, edx	# tmp355
 383              	# sieve_extend.c:519:     bitarray[destination_start_word] |= (pattern << bitindex(destination_star
 519:sieve_extend.c **** 
 384              		.loc 1 519 38 view .LVU105
 385 0162 498906   		mov	QWORD PTR [r14], rax	# *_117, tmp353
 386              		.loc 1 522 5 is_stmt 1 view .LVU106
 387              	# sieve_extend.c:522:     register const bitshift_t pattern_shift = WORD_SIZE_counter % size;
 388              		.loc 1 522 31 is_stmt 0 view .LVU107
 389 0165 41BE4000 		mov	r14d, 64	# tmp354,
 389      0000
 390 016b 4C89F0   		mov	rax, r14	# tmp356, tmp354
 391 016e 488D7437 		lea	rsi, 8[rdi+rsi]	# vectp.141,
 391      08
 392 0173 49F7F1   		div	r9	# size
 393              	.LVL20:
 523:sieve_extend.c ****     register const bitshift_t pattern_size = WORD_SIZE_bitshift - pattern_shift;
 394              		.loc 1 523 5 is_stmt 1 view .LVU108
 524:sieve_extend.c ****     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destination_start)) & WORDMASK;
 395              		.loc 1 524 5 view .LVU109
 525:sieve_extend.c ****     register counter_t loop_range = destination_stop_word - destination_start_word;
 396              		.loc 1 525 5 view .LVU110
 397 0176 48C1EE03 		shr	rsi, 3	# tmp363,
 398              	# sieve_extend.c:525:     register counter_t loop_range = destination_stop_word - destination_start
 399              		.loc 1 525 24 is_stmt 0 view .LVU111
 400 017a 4D89E1   		mov	r9, r12	# loop_range, destination_stop_word
 401              	.LVL21:
 402              	# sieve_extend.c:524:     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destinati
 524:sieve_extend.c ****     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destination_start)) & WORDMASK;
 403              		.loc 1 524 89 view .LVU112
 404 017d 48F7D9   		neg	rcx	# tmp359
 405              	.LVL22:
 406              	# sieve_extend.c:525:     register counter_t loop_range = destination_stop_word - destination_start
 407              		.loc 1 525 24 view .LVU113
 408 0180 4D29D9   		sub	r9, r11	# loop_range, destination_start_word
 409              	.LVL23:
 526:sieve_extend.c ****     destination_start_word++;
 410              		.loc 1 526 5 is_stmt 1 view .LVU114
 411              	# sieve_extend.c:523:     register const bitshift_t pattern_size = WORD_SIZE_bitshift - pattern_shi
 523:sieve_extend.c ****     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destination_start)) & WORDMASK;
 412              		.loc 1 523 31 is_stmt 0 view .LVU115
 413 0183 4C89F0   		mov	rax, r14	# tmp354, tmp354
 414 0186 48F7DE   		neg	rsi	# tmp364
 415              	# sieve_extend.c:524:     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destinati
 524:sieve_extend.c ****     register counter_t loop_range = destination_stop_word - destination_start_word;
 416              		.loc 1 524 25 view .LVU116
 417 0189 83E13F   		and	ecx, 63	# shift,
 418              	.LVL24:
 524:sieve_extend.c ****     register counter_t loop_range = destination_stop_word - destination_start_word;
GAS LISTING /tmp/ccLUVin9.s 			page 19


 419              		.loc 1 524 25 view .LVU117
 420 018c 83E603   		and	esi, 3	# prolog_loop_niters.142,
 421              	# sieve_extend.c:526:     destination_start_word++;
 422              		.loc 1 526 27 view .LVU118
 423 018f 4D8D5301 		lea	r10, 1[r11]	# destination_start_word,
 424              	.LVL25:
 425              	.LBB312:
 527:sieve_extend.c ****     
 528:sieve_extend.c ****     //#pragma GCC unroll 16
 529:sieve_extend.c ****     #pragma GCC ivdep
 530:sieve_extend.c ****     for (counter_t i=0; i<=loop_range; ++i ) {
 426              		.loc 1 530 10 is_stmt 1 view .LVU119
 427              		.loc 1 530 25 view .LVU120
 428 0193 4D8D6901 		lea	r13, 1[r9]	# niters.140,
 429 0197 894C24F4 		mov	DWORD PTR -12[rsp], ecx	# %sfp, shift
 430 019b 895424F8 		mov	DWORD PTR -8[rsp], edx	# %sfp, tmp355
 431              	.LBE312:
 432              	# sieve_extend.c:523:     register const bitshift_t pattern_size = WORD_SIZE_bitshift - pattern_shi
 523:sieve_extend.c ****     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destination_start)) & WORDMASK;
 433              		.loc 1 523 31 is_stmt 0 view .LVU121
 434 019f 4829D0   		sub	rax, rdx	# tmp354, tmp355
 435              	.LVL26:
 523:sieve_extend.c ****     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destination_start)) & WORDMASK;
 436              		.loc 1 523 31 view .LVU122
 437 01a2 894424FC 		mov	DWORD PTR -4[rsp], eax	# %sfp, pattern_size
 438 01a6 4983F90A 		cmp	r9, 10	# loop_range,
 439 01aa 0F860505 		jbe	.L11	#,
 439      0000
 440 01b0 4885F6   		test	rsi, rsi	# prolog_loop_niters.142
 441 01b3 0F84F404 		je	.L12	#,
 441      0000
 442              	.LBB313:
 531:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 443              		.loc 1 531 9 is_stmt 1 view .LVU123
 444              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 445              		.loc 1 531 72 is_stmt 0 view .LVU124
 446 01b9 4189C7   		mov	r15d, eax	# tmp365, pattern_size
 447 01bc 4129CF   		sub	r15d, ecx	# tmp365, shift
 448              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 449              		.loc 1 531 55 view .LVU125
 450 01bf C44281F7 		shlx	r14, r8, r15	# tmp366, pattern, tmp365
 450      F0
 451              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 452              		.loc 1 531 127 view .LVU126
 453 01c4 C442F3F7 		shrx	r15, r8, rcx	# tmp367, pattern, shift
 453      F8
 454              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 455              		.loc 1 531 116 view .LVU127
 456 01c9 4D09FE   		or	r14, r15	# tmp368, tmp367
 457 01cc 4E8934D7 		mov	QWORD PTR [rdi+r10*8], r14	# *_317, tmp368
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 458              		.loc 1 530 40 is_stmt 1 view .LVU128
 459              	.LVL27:
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 460              		.loc 1 530 25 view .LVU129
 461 01d0 4883FE01 		cmp	rsi, 1	# prolog_loop_niters.142,
 462              	# sieve_extend.c:530:     for (counter_t i=0; i<=loop_range; ++i ) {
GAS LISTING /tmp/ccLUVin9.s 			page 20


 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 463              		.loc 1 530 40 is_stmt 0 view .LVU130
 464 01d4 41BE0100 		mov	r14d, 1	# i,
 464      0000
 465 01da 7452     		je	.L7	#,
 466              		.loc 1 531 9 is_stmt 1 view .LVU131
 467              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 468              		.loc 1 531 81 is_stmt 0 view .LVU132
 469 01dc 448D3411 		lea	r14d, [rcx+rdx]	# tmp369,
 470              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 471              		.loc 1 531 72 view .LVU133
 472 01e0 4189C7   		mov	r15d, eax	# tmp371, pattern_size
 473              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 474              		.loc 1 531 99 view .LVU134
 475 01e3 4183E63F 		and	r14d, 63	# _328,
 476              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 477              		.loc 1 531 72 view .LVU135
 478 01e7 4529F7   		sub	r15d, r14d	# tmp371, _328
 479              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 480              		.loc 1 531 127 view .LVU136
 481 01ea C4428BF7 		shrx	r14, r8, r14	# tmp373, pattern, _328
 481      F0
 482              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 483              		.loc 1 531 55 view .LVU137
 484 01ef C44281F7 		shlx	r15, r8, r15	# tmp372, pattern, tmp371
 484      F8
 485              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 486              		.loc 1 531 116 view .LVU138
 487 01f4 4D09FE   		or	r14, r15	# tmp374, tmp372
 488 01f7 4E8974DF 		mov	QWORD PTR 16[rdi+r11*8], r14	# *_334, tmp374
 488      10
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 489              		.loc 1 530 40 is_stmt 1 view .LVU139
 490              	.LVL28:
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 491              		.loc 1 530 25 view .LVU140
 492 01fc 4883FE03 		cmp	rsi, 3	# prolog_loop_niters.142,
 493              	# sieve_extend.c:530:     for (counter_t i=0; i<=loop_range; ++i ) {
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 494              		.loc 1 530 40 is_stmt 0 view .LVU141
 495 0200 41BE0200 		mov	r14d, 2	# i,
 495      0000
 496 0206 7526     		jne	.L7	#,
 497              		.loc 1 531 9 is_stmt 1 view .LVU142
 498              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 499              		.loc 1 531 81 is_stmt 0 view .LVU143
 500 0208 448D3451 		lea	r14d, [rcx+rdx*2]	# tmp376,
 501              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 502              		.loc 1 531 72 view .LVU144
 503 020c 4189C7   		mov	r15d, eax	# tmp378, pattern_size
 504              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 505              		.loc 1 531 99 view .LVU145
 506 020f 4183E63F 		and	r14d, 63	# _104,
 507              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 508              		.loc 1 531 72 view .LVU146
 509 0213 4529F7   		sub	r15d, r14d	# tmp378, _104
 510              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
GAS LISTING /tmp/ccLUVin9.s 			page 21


 511              		.loc 1 531 127 view .LVU147
 512 0216 C4428BF7 		shrx	r14, r8, r14	# tmp380, pattern, _104
 512      F0
 513              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 514              		.loc 1 531 55 view .LVU148
 515 021b C44281F7 		shlx	r15, r8, r15	# tmp379, pattern, tmp378
 515      F8
 516              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 517              		.loc 1 531 116 view .LVU149
 518 0220 4D09FE   		or	r14, r15	# tmp381, tmp379
 519 0223 4E8974DF 		mov	QWORD PTR 24[rdi+r11*8], r14	# *_94, tmp381
 519      18
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 520              		.loc 1 530 40 is_stmt 1 view .LVU150
 521              	.LVL29:
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 522              		.loc 1 530 25 view .LVU151
 523              	# sieve_extend.c:530:     for (counter_t i=0; i<=loop_range; ++i ) {
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 524              		.loc 1 530 40 is_stmt 0 view .LVU152
 525 0228 41BE0300 		mov	r14d, 3	# i,
 525      0000
 526              	.LVL30:
 527              	.L7:
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 528              		.loc 1 530 40 view .LVU153
 529 022e 4929F5   		sub	r13, rsi	# niters.143, prolog_loop_niters.142
 530 0231 4C01D6   		add	rsi, r10	# tmp388, destination_start_word
 531 0234 4D89EB   		mov	r11, r13	# bnd.144, niters.143
 532 0237 C4C1F96E 		vmovq	xmm3, r14	# i, i
 532      DE
 533 023c 49C1EB03 		shr	r11, 3	# bnd.144,
 534 0240 488D34F7 		lea	rsi, [rdi+rsi*8]	# ivtmp.162,
 535 0244 49C1E306 		sal	r11, 6	# tmp391,
 536 0248 C4627D59 		vpbroadcastq	ymm9, xmm3	# tmp382, i
 536      CB
 537 024d C4C1F96E 		vmovq	xmm4, r8	# pattern, pattern
 537      E0
 538 0252 4D8D3C33 		lea	r15, [r11+rsi]	# _344,
 539 0256 4183E340 		and	r11d, 64	# tmp391,
 540 025a C535D435 		vpaddq	ymm14, ymm9, YMMWORD PTR .LC0[rip]	# vect_vec_iv_.147, tmp382,
 540      00000000 
 541 0262 C4E27D58 		vpbroadcastd	ymm6, DWORD PTR -8[rsp]	# vect_cst__146, %sfp
 541      7424F8
 542 0269 C4E27D59 		vpbroadcastq	ymm2, xmm4	# vect_cst__156, pattern
 542      D4
 543 026e C4E27D58 		vpbroadcastd	ymm5, DWORD PTR -12[rsp]	# vect_cst__148, %sfp
 543      6C24F4
 544 0275 C4627D58 		vpbroadcastd	ymm12, DWORD PTR -4[rsp]	# vect_cst__152, %sfp
 544      6424FC
 545 027c C57D6F05 		vmovdqa	ymm8, YMMWORD PTR .LC1[rip]	# tmp496,
 545      00000000 
 546 0284 C5FD6F3D 		vmovdqa	ymm7, YMMWORD PTR .LC2[rip]	# tmp497,
 546      00000000 
 547 028c C57D6F2D 		vmovdqa	ymm13, YMMWORD PTR .LC3[rip]	# tmp498,
 547      00000000 
 548 0294 0F849600 		je	.L9	#,
GAS LISTING /tmp/ccLUVin9.s 			page 22


 548      0000
 549              	.LVL31:
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 550              		.loc 1 530 40 view .LVU154
 551 029a C57D7FF1 		vmovdqa	ymm1, ymm14	# vect_vec_iv_.147, vect_vec_iv_.147
 552 029e 4883C640 		add	rsi, 64	# ivtmp.162,
 553              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 554              		.loc 1 531 81 view .LVU155
 555 02a2 C575D4D7 		vpaddq	ymm10, ymm1, ymm7	# vect_vec_iv_.147, vect_vec_iv_.147, tmp497
 556 02a6 C4410DD4 		vpaddq	ymm14, ymm14, ymm8	# vect_vec_iv_.147, vect_vec_iv_.147, tmp496
 556      F0
 557              		.loc 1 531 9 is_stmt 1 view .LVU156
 558              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 559              		.loc 1 531 81 is_stmt 0 view .LVU157
 560 02ab C4C37546 		vperm2i128	ymm0, ymm1, ymm10, 32	# tmp538, vect_vec_iv_.147, vect_vec_iv_.147,
 560      C220
 561 02b1 C4437546 		vperm2i128	ymm11, ymm1, ymm10, 49	# tmp539, vect_vec_iv_.147, vect_vec_iv_.147,
 561      DA31
 562 02b7 C57D70F8 		vpshufd	ymm15, ymm0, 216	# tmp540, tmp538,
 562      D8
 563 02bc C4C17D70 		vpshufd	ymm3, ymm11, 216	# tmp541, tmp539,
 563      DBD8
 564 02c2 C5056CCB 		vpunpcklqdq	ymm9, ymm15, ymm3	# tmp542, tmp540, tmp541
 565 02c6 C4C24D40 		vpmulld	ymm4, ymm6, ymm9	# vect__45.149, vect_cst__146, tmp542
 565      E1
 566              	.LVL32:
 567              		.loc 1 531 81 view .LVU158
 568 02cb C5DDFECD 		vpaddd	ymm1, ymm4, ymm5	# vect__47.150, vect__45.149, vect_cst__148
 569              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 570              		.loc 1 531 99 view .LVU159
 571 02cf C4C175DB 		vpand	ymm0, ymm1, ymm13	# vect__48.151, vect__47.150, tmp498
 571      C5
 572              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 573              		.loc 1 531 72 view .LVU160
 574 02d4 C51DFAF8 		vpsubd	ymm15, ymm12, ymm0	# vect__49.152, vect_cst__152, vect__48.151
 575              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 576              		.loc 1 531 116 view .LVU161
 577 02d8 C4627D35 		vpmovzxdq	ymm11, xmm0	#, vect__48.151
 577      D8
 578 02dd C4427D35 		vpmovzxdq	ymm10, xmm15	#, vect__49.152
 578      D7
 579 02e2 C442ED45 		vpsrlvq	ymm9, ymm2, ymm11	# vect_patt_136.156, vect_cst__156, vect_patt_137.155
 579      CB
 580 02e7 C4C2ED47 		vpsllvq	ymm3, ymm2, ymm10	# vect_patt_138.154, vect_cst__156, vect_patt_139.153
 580      DA
 581 02ec C4637D39 		vextracti128	xmm1, ymm15, 0x1	# tmp554, vect__49.152
 581      F901
 582 02f2 C4C165EB 		vpor	ymm4, ymm3, ymm9	# vect__55.157, vect_patt_138.154, vect_patt_136.156
 582      E1
 583 02f7 C4E37D39 		vextracti128	xmm0, ymm0, 0x1	# tmp557, vect__48.151
 583      C001
 584 02fd C4627D35 		vpmovzxdq	ymm15, xmm1	# vect_patt_139.153, tmp554
 584      F9
 585 0302 C4E27D35 		vpmovzxdq	ymm3, xmm0	# vect_patt_137.155, tmp557
 585      D8
 586 0307 C442ED47 		vpsllvq	ymm10, ymm2, ymm15	# vect_patt_138.154, vect_cst__156, vect_patt_139.153
 586      D7
GAS LISTING /tmp/ccLUVin9.s 			page 23


 587 030c C462ED45 		vpsrlvq	ymm11, ymm2, ymm3	# vect_patt_136.156, vect_cst__156, vect_patt_137.155
 587      DB
 588              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 589              		.loc 1 531 44 view .LVU162
 590 0311 C5FD7F66 		vmovdqa	YMMWORD PTR -64[rsi], ymm4	# MEM[base: _341, offset: 0B], vect__55.157
 590      C0
 591              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 592              		.loc 1 531 116 view .LVU163
 593 0316 C4412DEB 		vpor	ymm9, ymm10, ymm11	# vect__55.157, vect_patt_138.154, vect_patt_136.156
 593      CB
 594              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 595              		.loc 1 531 44 view .LVU164
 596 031b C57D7F4E 		vmovdqa	YMMWORD PTR -32[rsi], ymm9	# MEM[base: _341, offset: 32B], vect__55.157
 596      E0
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 597              		.loc 1 530 40 is_stmt 1 view .LVU165
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 598              		.loc 1 530 25 view .LVU166
 599 0320 4C39FE   		cmp	rsi, r15	# ivtmp.162, _344
 600 0323 0F841201 		je	.L37	#,
 600      0000
 601 0329 0F1F8000 		.p2align 4
 601      000000
 602              		.p2align 3
 603              	.L9:
 604              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 605              		.loc 1 531 81 is_stmt 0 discriminator 3 view .LVU167
 606 0330 C58DD4CF 		vpaddq	ymm1, ymm14, ymm7	# vect_vec_iv_.147, vect_vec_iv_.147, tmp497
 607 0334 C4C10DD4 		vpaddq	ymm4, ymm14, ymm8	# vect_vec_iv_.147, vect_vec_iv_.147, tmp496
 607      E0
 608              		.loc 1 531 9 is_stmt 1 discriminator 3 view .LVU168
 609              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 610              		.loc 1 531 81 is_stmt 0 discriminator 3 view .LVU169
 611 0339 C4630D46 		vperm2i128	ymm15, ymm14, ymm1, 32	# tmp398, vect_vec_iv_.147, vect_vec_iv_.147,
 611      F920
 612 033f C4630D46 		vperm2i128	ymm14, ymm14, ymm1, 49	# tmp399, vect_vec_iv_.147, vect_vec_iv_.147,
 612      F131
 613 0345 C4417D70 		vpshufd	ymm10, ymm15, 216	# tmp396, tmp398,
 613      D7D8
 614 034b 4883EE80 		sub	rsi, -128	# ivtmp.162,
 615 034f C4C17D70 		vpshufd	ymm0, ymm14, 216	# tmp397, tmp399,
 615      C6D8
 616 0355 C5AD6CD8 		vpunpcklqdq	ymm3, ymm10, ymm0	# tmp400, tmp396, tmp397
 617 0359 C4624D40 		vpmulld	ymm11, ymm6, ymm3	# vect__45.149, vect_cst__146, tmp400
 617      DB
 618 035e C525FECD 		vpaddd	ymm9, ymm11, ymm5	# vect__47.150, vect__45.149, vect_cst__148
 619              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 620              		.loc 1 531 99 discriminator 3 view .LVU170
 621 0362 C44135DB 		vpand	ymm15, ymm9, ymm13	# vect__48.151, vect__47.150, tmp498
 621      FD
 622              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 623              		.loc 1 531 72 discriminator 3 view .LVU171
 624 0367 C4C11DFA 		vpsubd	ymm1, ymm12, ymm15	# vect__49.152, vect_cst__152, vect__48.151
 624      CF
 625              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 626              		.loc 1 531 116 discriminator 3 view .LVU172
 627 036c C4C27D35 		vpmovzxdq	ymm0, xmm15	#, vect__48.151
GAS LISTING /tmp/ccLUVin9.s 			page 24


 627      C7
 628 0371 C4627D35 		vpmovzxdq	ymm14, xmm1	#, vect__49.152
 628      F1
 629 0376 C4E2ED45 		vpsrlvq	ymm3, ymm2, ymm0	# vect_patt_136.156, vect_cst__156, vect_patt_137.155
 629      D8
 630 037b C442ED47 		vpsllvq	ymm10, ymm2, ymm14	# vect_patt_138.154, vect_cst__156, vect_patt_139.153
 630      D6
 631 0380 C4C37D39 		vextracti128	xmm9, ymm1, 0x1	# tmp412, vect__49.152
 631      C901
 632 0386 C52DEBDB 		vpor	ymm11, ymm10, ymm3	# vect__55.157, vect_patt_138.154, vect_patt_136.156
 633 038a C4437D39 		vextracti128	xmm15, ymm15, 0x1	# tmp415, vect__48.151
 633      FF01
 634 0390 C4C27D35 		vpmovzxdq	ymm1, xmm9	# vect_patt_139.153, tmp412
 634      C9
 635 0395 C4427D35 		vpmovzxdq	ymm10, xmm15	# vect_patt_137.155, tmp415
 635      D7
 636 039a C462ED47 		vpsllvq	ymm14, ymm2, ymm1	# vect_patt_138.154, vect_cst__156, vect_patt_139.153
 636      F1
 637 039f C4C2ED45 		vpsrlvq	ymm0, ymm2, ymm10	# vect_patt_136.156, vect_cst__156, vect_patt_137.155
 637      C2
 638              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 639              		.loc 1 531 44 discriminator 3 view .LVU173
 640 03a4 C57D7F5E 		vmovdqa	YMMWORD PTR -128[rsi], ymm11	# MEM[base: _341, offset: 0B], vect__55.157
 640      80
 641              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 642              		.loc 1 531 81 discriminator 3 view .LVU174
 643 03a9 C55DD4DF 		vpaddq	ymm11, ymm4, ymm7	# vect_vec_iv_.147, vect_vec_iv_.147, tmp497
 644              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 645              		.loc 1 531 116 discriminator 3 view .LVU175
 646 03ad C58DEBD8 		vpor	ymm3, ymm14, ymm0	# vect__55.157, vect_patt_138.154, vect_patt_136.156
 647              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 648              		.loc 1 531 81 discriminator 3 view .LVU176
 649 03b1 C4435D46 		vperm2i128	ymm9, ymm4, ymm11, 32	# tmp513, vect_vec_iv_.147, vect_vec_iv_.147,
 649      CB20
 650 03b7 C4C17D70 		vpshufd	ymm1, ymm9, 216	# tmp515, tmp513,
 650      C9D8
 651 03bd C4415DD4 		vpaddq	ymm14, ymm4, ymm8	# vect_vec_iv_.147, vect_vec_iv_.147, tmp496
 651      F0
 652              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 653              		.loc 1 531 44 discriminator 3 view .LVU177
 654 03c2 C5FD7F5E 		vmovdqa	YMMWORD PTR -96[rsi], ymm3	# MEM[base: _341, offset: 32B], vect__55.157
 654      A0
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 655              		.loc 1 530 40 is_stmt 1 discriminator 3 view .LVU178
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 656              		.loc 1 530 25 discriminator 3 view .LVU179
 657              		.loc 1 531 9 discriminator 3 view .LVU180
 658              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 659              		.loc 1 531 81 is_stmt 0 discriminator 3 view .LVU181
 660 03c7 C4C35D46 		vperm2i128	ymm4, ymm4, ymm11, 49	# tmp514, vect_vec_iv_.147, vect_vec_iv_.147,
 660      E331
 661 03cd C57D70FC 		vpshufd	ymm15, ymm4, 216	# tmp516, tmp514,
 661      D8
 662 03d2 C441756C 		vpunpcklqdq	ymm10, ymm1, ymm15	# tmp517, tmp515, tmp516
 662      D7
 663 03d7 C4C24D40 		vpmulld	ymm0, ymm6, ymm10	# vect__45.149, vect_cst__146, tmp517
 663      C2
GAS LISTING /tmp/ccLUVin9.s 			page 25


 664 03dc C5FDFEDD 		vpaddd	ymm3, ymm0, ymm5	# vect__47.150, vect__45.149, vect_cst__148
 665              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 666              		.loc 1 531 99 discriminator 3 view .LVU182
 667 03e0 C44165DB 		vpand	ymm9, ymm3, ymm13	# vect__48.151, vect__47.150, tmp498
 667      CD
 668              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 669              		.loc 1 531 72 discriminator 3 view .LVU183
 670 03e5 C4C11DFA 		vpsubd	ymm4, ymm12, ymm9	# vect__49.152, vect_cst__152, vect__48.151
 670      E1
 671              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 672              		.loc 1 531 116 discriminator 3 view .LVU184
 673 03ea C4427D35 		vpmovzxdq	ymm15, xmm9	#, vect__48.151
 673      F9
 674 03ef C4627D35 		vpmovzxdq	ymm11, xmm4	#, vect__49.152
 674      DC
 675 03f4 C442ED45 		vpsrlvq	ymm10, ymm2, ymm15	# vect_patt_136.156, vect_cst__156, vect_patt_137.155
 675      D7
 676 03f9 C4C2ED47 		vpsllvq	ymm1, ymm2, ymm11	# vect_patt_138.154, vect_cst__156, vect_patt_139.153
 676      CB
 677 03fe C4E37D39 		vextracti128	xmm3, ymm4, 0x1	# tmp529, vect__49.152
 677      E301
 678 0404 C4C175EB 		vpor	ymm0, ymm1, ymm10	# vect__55.157, vect_patt_138.154, vect_patt_136.156
 678      C2
 679 0409 C4437D39 		vextracti128	xmm9, ymm9, 0x1	# tmp532, vect__48.151
 679      C901
 680 040f C4E27D35 		vpmovzxdq	ymm4, xmm3	# vect_patt_139.153, tmp529
 680      E3
 681 0414 C4C27D35 		vpmovzxdq	ymm1, xmm9	# vect_patt_137.155, tmp532
 681      C9
 682 0419 C462ED47 		vpsllvq	ymm11, ymm2, ymm4	# vect_patt_138.154, vect_cst__156, vect_patt_139.153
 682      DC
 683 041e C462ED45 		vpsrlvq	ymm15, ymm2, ymm1	# vect_patt_136.156, vect_cst__156, vect_patt_137.155
 683      F9
 684              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 685              		.loc 1 531 44 discriminator 3 view .LVU185
 686 0423 C5FD7F46 		vmovdqa	YMMWORD PTR -64[rsi], ymm0	# MEM[base: _341, offset: 0B], vect__55.157
 686      C0
 687              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 688              		.loc 1 531 116 discriminator 3 view .LVU186
 689 0428 C44125EB 		vpor	ymm10, ymm11, ymm15	# vect__55.157, vect_patt_138.154, vect_patt_136.156
 689      D7
 690              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 691              		.loc 1 531 44 discriminator 3 view .LVU187
 692 042d C57D7F56 		vmovdqa	YMMWORD PTR -32[rsi], ymm10	# MEM[base: _341, offset: 32B], vect__55.157
 692      E0
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 693              		.loc 1 530 40 is_stmt 1 discriminator 3 view .LVU188
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 694              		.loc 1 530 25 discriminator 3 view .LVU189
 695 0432 4C39FE   		cmp	rsi, r15	# ivtmp.162, _344
 696 0435 0F85F5FE 		jne	.L9	#,
 696      FFFF
 697              	.L37:
 698 043b 4C89EE   		mov	rsi, r13	# niters_vector_mult_vf.145, niters.143
 699 043e 4883E6F8 		and	rsi, -8	# niters_vector_mult_vf.145,
 700 0442 4901F6   		add	r14, rsi	# tmp.146, niters_vector_mult_vf.145
 701 0445 4939F5   		cmp	r13, rsi	# niters.143, niters_vector_mult_vf.145
GAS LISTING /tmp/ccLUVin9.s 			page 26


 702 0448 0F845A02 		je	.L50	#,
 702      0000
 703 044e C5F877   		vzeroupper
 704              	.L6:
 705              	.LVL33:
 706              		.loc 1 531 9 view .LVU190
 707              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 708              		.loc 1 531 81 is_stmt 0 view .LVU191
 709 0451 4189D7   		mov	r15d, edx	# tmp418, tmp355
 710              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 711              		.loc 1 531 72 view .LVU192
 712 0454 4189C5   		mov	r13d, eax	# tmp421, pattern_size
 713              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 714              		.loc 1 531 81 view .LVU193
 715 0457 450FAFFE 		imul	r15d, r14d	# tmp418, tmp.146
 716              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 717              		.loc 1 531 17 view .LVU194
 718 045b 4F8D1C16 		lea	r11, [r14+r10]	# tmp420,
 719              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 720              		.loc 1 531 81 view .LVU195
 721 045f 4101CF   		add	r15d, ecx	# tmp419, shift
 722              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 723              		.loc 1 531 99 view .LVU196
 724 0462 4183E73F 		and	r15d, 63	# _49,
 725              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 726              		.loc 1 531 127 view .LVU197
 727 0466 C4C283F7 		shrx	rsi, r8, r15	# tmp423, pattern, _49
 727      F0
 728              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 729              		.loc 1 531 72 view .LVU198
 730 046b 4529FD   		sub	r13d, r15d	# tmp421, _49
 731              	# sieve_extend.c:530:     for (counter_t i=0; i<=loop_range; ++i ) {
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 732              		.loc 1 530 40 view .LVU199
 733 046e 4D8D7E01 		lea	r15, 1[r14]	# i,
 734              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 735              		.loc 1 531 55 view .LVU200
 736 0472 C44291F7 		shlx	r13, r8, r13	# tmp422, pattern, tmp421
 736      E8
 737              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 738              		.loc 1 531 116 view .LVU201
 739 0477 4C09EE   		or	rsi, r13	# tmp424, tmp422
 740 047a 4A8934DF 		mov	QWORD PTR [rdi+r11*8], rsi	# *_55, tmp424
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 741              		.loc 1 530 40 is_stmt 1 view .LVU202
 742              	.LVL34:
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 743              		.loc 1 530 25 view .LVU203
 744              	# sieve_extend.c:530:     for (counter_t i=0; i<=loop_range; ++i ) {
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 745              		.loc 1 530 5 is_stmt 0 view .LVU204
 746 047e 4D39CF   		cmp	r15, r9	# i, loop_range
 747 0481 0F87F101 		ja	.L10	#,
 747      0000
 748              		.loc 1 531 9 is_stmt 1 view .LVU205
 749              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 750              		.loc 1 531 81 is_stmt 0 view .LVU206
GAS LISTING /tmp/ccLUVin9.s 			page 27


 751 0487 4189D3   		mov	r11d, edx	# tmp425, tmp355
 752              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 753              		.loc 1 531 72 view .LVU207
 754 048a 4189C5   		mov	r13d, eax	# tmp428, pattern_size
 755              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 756              		.loc 1 531 81 view .LVU208
 757 048d 450FAFDF 		imul	r11d, r15d	# tmp425, i
 758              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 759              		.loc 1 531 17 view .LVU209
 760 0491 4D01D7   		add	r15, r10	# tmp427, destination_start_word
 761              	.LVL35:
 762              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 763              		.loc 1 531 81 view .LVU210
 764 0494 4101CB   		add	r11d, ecx	# tmp426, shift
 765              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 766              		.loc 1 531 99 view .LVU211
 767 0497 4183E33F 		and	r11d, 63	# _83,
 768              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 769              		.loc 1 531 72 view .LVU212
 770 049b 4529DD   		sub	r13d, r11d	# tmp428, _83
 771              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 772              		.loc 1 531 127 view .LVU213
 773 049e C442A3F7 		shrx	r11, r8, r11	# tmp430, pattern, _83
 773      D8
 774              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 775              		.loc 1 531 55 view .LVU214
 776 04a3 C4C291F7 		shlx	rsi, r8, r13	# tmp429, pattern, tmp428
 776      F0
 777              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 778              		.loc 1 531 116 view .LVU215
 779 04a8 4C09DE   		or	rsi, r11	# tmp431, tmp430
 780 04ab 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_181, tmp431
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 781              		.loc 1 530 40 is_stmt 1 view .LVU216
 782 04af 4D8D7E02 		lea	r15, 2[r14]	# i,
 783              	.LVL36:
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 784              		.loc 1 530 25 view .LVU217
 785              	# sieve_extend.c:530:     for (counter_t i=0; i<=loop_range; ++i ) {
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 786              		.loc 1 530 5 is_stmt 0 view .LVU218
 787 04b3 4D39F9   		cmp	r9, r15	# loop_range, i
 788 04b6 0F82BC01 		jb	.L10	#,
 788      0000
 789              		.loc 1 531 9 is_stmt 1 view .LVU219
 790              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 791              		.loc 1 531 81 is_stmt 0 view .LVU220
 792 04bc 89D6     		mov	esi, edx	# tmp432, tmp355
 793              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 794              		.loc 1 531 72 view .LVU221
 795 04be 4189C5   		mov	r13d, eax	# tmp435, pattern_size
 796              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 797              		.loc 1 531 81 view .LVU222
 798 04c1 410FAFF7 		imul	esi, r15d	# tmp432, i
 799              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 800              		.loc 1 531 17 view .LVU223
 801 04c5 4D01D7   		add	r15, r10	# tmp434, destination_start_word
GAS LISTING /tmp/ccLUVin9.s 			page 28


 802              	.LVL37:
 803              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 804              		.loc 1 531 81 view .LVU224
 805 04c8 01CE     		add	esi, ecx	# tmp433, shift
 806              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 807              		.loc 1 531 99 view .LVU225
 808 04ca 83E63F   		and	esi, 63	# _190,
 809              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 810              		.loc 1 531 72 view .LVU226
 811 04cd 4129F5   		sub	r13d, esi	# tmp435, _190
 812              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 813              		.loc 1 531 127 view .LVU227
 814 04d0 C4C2CBF7 		shrx	rsi, r8, rsi	# tmp437, pattern, _190
 814      F0
 815              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 816              		.loc 1 531 55 view .LVU228
 817 04d5 C44291F7 		shlx	r11, r8, r13	# tmp436, pattern, tmp435
 817      D8
 818              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 819              		.loc 1 531 116 view .LVU229
 820 04da 4C09DE   		or	rsi, r11	# tmp438, tmp436
 821 04dd 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_196, tmp438
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 822              		.loc 1 530 40 is_stmt 1 view .LVU230
 823 04e1 4D8D7E03 		lea	r15, 3[r14]	# i,
 824              	.LVL38:
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 825              		.loc 1 530 25 view .LVU231
 826              	# sieve_extend.c:530:     for (counter_t i=0; i<=loop_range; ++i ) {
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 827              		.loc 1 530 5 is_stmt 0 view .LVU232
 828 04e5 4D39F9   		cmp	r9, r15	# loop_range, i
 829 04e8 0F828A01 		jb	.L10	#,
 829      0000
 830              		.loc 1 531 9 is_stmt 1 view .LVU233
 831              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 832              		.loc 1 531 81 is_stmt 0 view .LVU234
 833 04ee 4189D3   		mov	r11d, edx	# tmp439, tmp355
 834              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 835              		.loc 1 531 72 view .LVU235
 836 04f1 4189C5   		mov	r13d, eax	# tmp442, pattern_size
 837              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 838              		.loc 1 531 81 view .LVU236
 839 04f4 450FAFDF 		imul	r11d, r15d	# tmp439, i
 840              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 841              		.loc 1 531 17 view .LVU237
 842 04f8 4D01D7   		add	r15, r10	# tmp441, destination_start_word
 843              	.LVL39:
 844              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 845              		.loc 1 531 81 view .LVU238
 846 04fb 4101CB   		add	r11d, ecx	# tmp440, shift
 847              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 848              		.loc 1 531 99 view .LVU239
 849 04fe 4183E33F 		and	r11d, 63	# _205,
 850              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 851              		.loc 1 531 127 view .LVU240
 852 0502 C4C2A3F7 		shrx	rsi, r8, r11	# tmp444, pattern, _205
GAS LISTING /tmp/ccLUVin9.s 			page 29


 852      F0
 853              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 854              		.loc 1 531 72 view .LVU241
 855 0507 4529DD   		sub	r13d, r11d	# tmp442, _205
 856              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 857              		.loc 1 531 55 view .LVU242
 858 050a C44291F7 		shlx	r13, r8, r13	# tmp443, pattern, tmp442
 858      E8
 859              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 860              		.loc 1 531 116 view .LVU243
 861 050f 4C09EE   		or	rsi, r13	# tmp445, tmp443
 862 0512 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_211, tmp445
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 863              		.loc 1 530 40 is_stmt 1 view .LVU244
 864 0516 4D8D7E04 		lea	r15, 4[r14]	# i,
 865              	.LVL40:
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 866              		.loc 1 530 25 view .LVU245
 867              	# sieve_extend.c:530:     for (counter_t i=0; i<=loop_range; ++i ) {
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 868              		.loc 1 530 5 is_stmt 0 view .LVU246
 869 051a 4D39F9   		cmp	r9, r15	# loop_range, i
 870 051d 0F825501 		jb	.L10	#,
 870      0000
 871              		.loc 1 531 9 is_stmt 1 view .LVU247
 872              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 873              		.loc 1 531 81 is_stmt 0 view .LVU248
 874 0523 4189D3   		mov	r11d, edx	# tmp446, tmp355
 875              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 876              		.loc 1 531 72 view .LVU249
 877 0526 4189C5   		mov	r13d, eax	# tmp449, pattern_size
 878              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 879              		.loc 1 531 81 view .LVU250
 880 0529 450FAFDF 		imul	r11d, r15d	# tmp446, i
 881              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 882              		.loc 1 531 17 view .LVU251
 883 052d 4D01D7   		add	r15, r10	# tmp448, destination_start_word
 884              	.LVL41:
 885              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 886              		.loc 1 531 81 view .LVU252
 887 0530 4101CB   		add	r11d, ecx	# tmp447, shift
 888              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 889              		.loc 1 531 99 view .LVU253
 890 0533 4183E33F 		and	r11d, 63	# _220,
 891              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 892              		.loc 1 531 127 view .LVU254
 893 0537 C4C2A3F7 		shrx	rsi, r8, r11	# tmp451, pattern, _220
 893      F0
 894              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 895              		.loc 1 531 72 view .LVU255
 896 053c 4529DD   		sub	r13d, r11d	# tmp449, _220
 897              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 898              		.loc 1 531 55 view .LVU256
 899 053f C44291F7 		shlx	r13, r8, r13	# tmp450, pattern, tmp449
 899      E8
 900              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 901              		.loc 1 531 116 view .LVU257
GAS LISTING /tmp/ccLUVin9.s 			page 30


 902 0544 4C09EE   		or	rsi, r13	# tmp452, tmp450
 903 0547 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_226, tmp452
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 904              		.loc 1 530 40 is_stmt 1 view .LVU258
 905 054b 4D8D7E05 		lea	r15, 5[r14]	# i,
 906              	.LVL42:
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 907              		.loc 1 530 25 view .LVU259
 908              	# sieve_extend.c:530:     for (counter_t i=0; i<=loop_range; ++i ) {
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 909              		.loc 1 530 5 is_stmt 0 view .LVU260
 910 054f 4D39F9   		cmp	r9, r15	# loop_range, i
 911 0552 0F822001 		jb	.L10	#,
 911      0000
 912              		.loc 1 531 9 is_stmt 1 view .LVU261
 913              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 914              		.loc 1 531 81 is_stmt 0 view .LVU262
 915 0558 4189D3   		mov	r11d, edx	# tmp453, tmp355
 916              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 917              		.loc 1 531 72 view .LVU263
 918 055b 4189C5   		mov	r13d, eax	# tmp456, pattern_size
 919              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 920              		.loc 1 531 81 view .LVU264
 921 055e 450FAFDF 		imul	r11d, r15d	# tmp453, i
 922              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 923              		.loc 1 531 17 view .LVU265
 924 0562 4D01D7   		add	r15, r10	# tmp455, destination_start_word
 925              	.LVL43:
 926              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 927              		.loc 1 531 81 view .LVU266
 928 0565 4101CB   		add	r11d, ecx	# tmp454, shift
 929              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 930              		.loc 1 531 99 view .LVU267
 931 0568 4183E33F 		and	r11d, 63	# _235,
 932              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 933              		.loc 1 531 127 view .LVU268
 934 056c C4C2A3F7 		shrx	rsi, r8, r11	# tmp458, pattern, _235
 934      F0
 935              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 936              		.loc 1 531 72 view .LVU269
 937 0571 4529DD   		sub	r13d, r11d	# tmp456, _235
 938              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 939              		.loc 1 531 55 view .LVU270
 940 0574 C44291F7 		shlx	r13, r8, r13	# tmp457, pattern, tmp456
 940      E8
 941              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 942              		.loc 1 531 116 view .LVU271
 943 0579 4C09EE   		or	rsi, r13	# tmp459, tmp457
 944 057c 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_241, tmp459
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 945              		.loc 1 530 40 is_stmt 1 view .LVU272
 946 0580 4D8D7E06 		lea	r15, 6[r14]	# i,
 947              	.LVL44:
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 948              		.loc 1 530 25 view .LVU273
 949              	# sieve_extend.c:530:     for (counter_t i=0; i<=loop_range; ++i ) {
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
GAS LISTING /tmp/ccLUVin9.s 			page 31


 950              		.loc 1 530 5 is_stmt 0 view .LVU274
 951 0584 4D39F9   		cmp	r9, r15	# loop_range, i
 952 0587 0F82EB00 		jb	.L10	#,
 952      0000
 953              		.loc 1 531 9 is_stmt 1 view .LVU275
 954              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 955              		.loc 1 531 81 is_stmt 0 view .LVU276
 956 058d 4189D3   		mov	r11d, edx	# tmp460, tmp355
 957              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 958              		.loc 1 531 72 view .LVU277
 959 0590 4189C5   		mov	r13d, eax	# tmp463, pattern_size
 960              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 961              		.loc 1 531 81 view .LVU278
 962 0593 450FAFDF 		imul	r11d, r15d	# tmp460, i
 963              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 964              		.loc 1 531 17 view .LVU279
 965 0597 4D01D7   		add	r15, r10	# tmp462, destination_start_word
 966              	.LVL45:
 967              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 968              		.loc 1 531 81 view .LVU280
 969 059a 4101CB   		add	r11d, ecx	# tmp461, shift
 970              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 971              		.loc 1 531 99 view .LVU281
 972 059d 4183E33F 		and	r11d, 63	# _250,
 973              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 974              		.loc 1 531 127 view .LVU282
 975 05a1 C4C2A3F7 		shrx	rsi, r8, r11	# tmp465, pattern, _250
 975      F0
 976              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 977              		.loc 1 531 72 view .LVU283
 978 05a6 4529DD   		sub	r13d, r11d	# tmp463, _250
 979              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 980              		.loc 1 531 55 view .LVU284
 981 05a9 C44291F7 		shlx	r13, r8, r13	# tmp464, pattern, tmp463
 981      E8
 982              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 983              		.loc 1 531 116 view .LVU285
 984 05ae 4C09EE   		or	rsi, r13	# tmp466, tmp464
 985 05b1 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_256, tmp466
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 986              		.loc 1 530 40 is_stmt 1 view .LVU286
 987 05b5 4D8D7E07 		lea	r15, 7[r14]	# i,
 988              	.LVL46:
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 989              		.loc 1 530 25 view .LVU287
 990              	# sieve_extend.c:530:     for (counter_t i=0; i<=loop_range; ++i ) {
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 991              		.loc 1 530 5 is_stmt 0 view .LVU288
 992 05b9 4D39F9   		cmp	r9, r15	# loop_range, i
 993 05bc 0F82B600 		jb	.L10	#,
 993      0000
 994              		.loc 1 531 9 is_stmt 1 view .LVU289
 995              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 996              		.loc 1 531 81 is_stmt 0 view .LVU290
 997 05c2 4189D3   		mov	r11d, edx	# tmp467, tmp355
 998              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 999              		.loc 1 531 72 view .LVU291
GAS LISTING /tmp/ccLUVin9.s 			page 32


 1000 05c5 4189C5   		mov	r13d, eax	# tmp470, pattern_size
 1001              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1002              		.loc 1 531 81 view .LVU292
 1003 05c8 450FAFDF 		imul	r11d, r15d	# tmp467, i
 1004              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1005              		.loc 1 531 17 view .LVU293
 1006 05cc 4D01D7   		add	r15, r10	# tmp469, destination_start_word
 1007              	.LVL47:
 1008              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1009              		.loc 1 531 81 view .LVU294
 1010 05cf 4101CB   		add	r11d, ecx	# tmp468, shift
 1011              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1012              		.loc 1 531 99 view .LVU295
 1013 05d2 4183E33F 		and	r11d, 63	# _265,
 1014              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1015              		.loc 1 531 127 view .LVU296
 1016 05d6 C4C2A3F7 		shrx	rsi, r8, r11	# tmp472, pattern, _265
 1016      F0
 1017              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1018              		.loc 1 531 72 view .LVU297
 1019 05db 4529DD   		sub	r13d, r11d	# tmp470, _265
 1020              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1021              		.loc 1 531 55 view .LVU298
 1022 05de C44291F7 		shlx	r13, r8, r13	# tmp471, pattern, tmp470
 1022      E8
 1023              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1024              		.loc 1 531 116 view .LVU299
 1025 05e3 4C09EE   		or	rsi, r13	# tmp473, tmp471
 1026 05e6 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_271, tmp473
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1027              		.loc 1 530 40 is_stmt 1 view .LVU300
 1028 05ea 4D8D7E08 		lea	r15, 8[r14]	# i,
 1029              	.LVL48:
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1030              		.loc 1 530 25 view .LVU301
 1031              	# sieve_extend.c:530:     for (counter_t i=0; i<=loop_range; ++i ) {
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1032              		.loc 1 530 5 is_stmt 0 view .LVU302
 1033 05ee 4D39F9   		cmp	r9, r15	# loop_range, i
 1034 05f1 0F828100 		jb	.L10	#,
 1034      0000
 1035              		.loc 1 531 9 is_stmt 1 view .LVU303
 1036              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1037              		.loc 1 531 81 is_stmt 0 view .LVU304
 1038 05f7 4189D3   		mov	r11d, edx	# tmp474, tmp355
 1039              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1040              		.loc 1 531 72 view .LVU305
 1041 05fa 4189C5   		mov	r13d, eax	# tmp477, pattern_size
 1042              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1043              		.loc 1 531 81 view .LVU306
 1044 05fd 450FAFDF 		imul	r11d, r15d	# tmp474, i
 1045              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1046              		.loc 1 531 17 view .LVU307
 1047 0601 4D01D7   		add	r15, r10	# tmp476, destination_start_word
 1048              	.LVL49:
 1049              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1050              		.loc 1 531 81 view .LVU308
GAS LISTING /tmp/ccLUVin9.s 			page 33


 1051 0604 4101CB   		add	r11d, ecx	# tmp475, shift
 1052              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1053              		.loc 1 531 99 view .LVU309
 1054 0607 4183E33F 		and	r11d, 63	# _280,
 1055              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1056              		.loc 1 531 127 view .LVU310
 1057 060b C4C2A3F7 		shrx	rsi, r8, r11	# tmp479, pattern, _280
 1057      F0
 1058              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1059              		.loc 1 531 72 view .LVU311
 1060 0610 4529DD   		sub	r13d, r11d	# tmp477, _280
 1061              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1062              		.loc 1 531 55 view .LVU312
 1063 0613 C44291F7 		shlx	r13, r8, r13	# tmp478, pattern, tmp477
 1063      E8
 1064              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1065              		.loc 1 531 116 view .LVU313
 1066 0618 4C09EE   		or	rsi, r13	# tmp480, tmp478
 1067 061b 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_286, tmp480
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1068              		.loc 1 530 40 is_stmt 1 view .LVU314
 1069 061f 4D8D7E09 		lea	r15, 9[r14]	# i,
 1070              	.LVL50:
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1071              		.loc 1 530 25 view .LVU315
 1072              	# sieve_extend.c:530:     for (counter_t i=0; i<=loop_range; ++i ) {
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1073              		.loc 1 530 5 is_stmt 0 view .LVU316
 1074 0623 4D39F9   		cmp	r9, r15	# loop_range, i
 1075 0626 7250     		jb	.L10	#,
 1076              		.loc 1 531 9 is_stmt 1 view .LVU317
 1077              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1078              		.loc 1 531 81 is_stmt 0 view .LVU318
 1079 0628 4189D3   		mov	r11d, edx	# tmp481, tmp355
 1080              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1081              		.loc 1 531 72 view .LVU319
 1082 062b 4189C5   		mov	r13d, eax	# tmp484, pattern_size
 1083              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1084              		.loc 1 531 81 view .LVU320
 1085 062e 450FAFDF 		imul	r11d, r15d	# tmp481, i
 1086              	# sieve_extend.c:530:     for (counter_t i=0; i<=loop_range; ++i ) {
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1087              		.loc 1 530 40 view .LVU321
 1088 0632 4983C60A 		add	r14, 10	# i,
 1089              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1090              		.loc 1 531 17 view .LVU322
 1091 0636 4D01D7   		add	r15, r10	# tmp483, destination_start_word
 1092              	.LVL51:
 1093              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1094              		.loc 1 531 81 view .LVU323
 1095 0639 4101CB   		add	r11d, ecx	# tmp482, shift
 1096              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1097              		.loc 1 531 99 view .LVU324
 1098 063c 4183E33F 		and	r11d, 63	# _295,
 1099              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1100              		.loc 1 531 127 view .LVU325
 1101 0640 C4C2A3F7 		shrx	rsi, r8, r11	# tmp486, pattern, _295
GAS LISTING /tmp/ccLUVin9.s 			page 34


 1101      F0
 1102              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1103              		.loc 1 531 72 view .LVU326
 1104 0645 4529DD   		sub	r13d, r11d	# tmp484, _295
 1105              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1106              		.loc 1 531 55 view .LVU327
 1107 0648 C44291F7 		shlx	r13, r8, r13	# tmp485, pattern, tmp484
 1107      E8
 1108              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1109              		.loc 1 531 116 view .LVU328
 1110 064d 4C09EE   		or	rsi, r13	# tmp487, tmp485
 1111              	# sieve_extend.c:530:     for (counter_t i=0; i<=loop_range; ++i ) {
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1112              		.loc 1 530 5 view .LVU329
 1113 0650 4D39F1   		cmp	r9, r14	# loop_range, i
 1114              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1115              		.loc 1 531 116 view .LVU330
 1116 0653 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_301, tmp487
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1117              		.loc 1 530 40 is_stmt 1 view .LVU331
 1118              	.LVL52:
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1119              		.loc 1 530 25 view .LVU332
 1120              	# sieve_extend.c:530:     for (counter_t i=0; i<=loop_range; ++i ) {
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1121              		.loc 1 530 5 is_stmt 0 view .LVU333
 1122 0657 721F     		jb	.L10	#,
 1123              		.loc 1 531 9 is_stmt 1 view .LVU334
 1124              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1125              		.loc 1 531 81 is_stmt 0 view .LVU335
 1126 0659 410FAFD6 		imul	edx, r14d	# tmp488, i
 1127              	.LVL53:
 1128              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1129              		.loc 1 531 17 view .LVU336
 1130 065d 4D01D6   		add	r14, r10	# tmp490, destination_start_word
 1131              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1132              		.loc 1 531 81 view .LVU337
 1133 0660 01D1     		add	ecx, edx	# tmp489, tmp488
 1134              	.LVL54:
 1135              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1136              		.loc 1 531 99 view .LVU338
 1137 0662 83E13F   		and	ecx, 63	# _108,
 1138              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1139              		.loc 1 531 72 view .LVU339
 1140 0665 29C8     		sub	eax, ecx	# tmp491, _108
 1141              	.LVL55:
 1142              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1143              		.loc 1 531 55 view .LVU340
 1144 0667 C4C2F9F7 		shlx	rdx, r8, rax	# tmp492, pattern, tmp491
 1144      D0
 1145              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1146              		.loc 1 531 127 view .LVU341
 1147 066c C442F3F7 		shrx	r8, r8, rcx	# tmp493, pattern, _108
 1147      C0
 1148              	.LVL56:
 1149              	# sieve_extend.c:531:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1150              		.loc 1 531 116 view .LVU342
GAS LISTING /tmp/ccLUVin9.s 			page 35


 1151 0671 4909D0   		or	r8, rdx	# tmp494, tmp492
 1152 0674 4E8904F7 		mov	QWORD PTR [rdi+r14*8], r8	# *_42, tmp494
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1153              		.loc 1 530 40 is_stmt 1 view .LVU343
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1154              		.loc 1 530 25 view .LVU344
 1155              	.L10:
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1156              		.loc 1 530 25 is_stmt 0 view .LVU345
 1157              	.LBE313:
 532:sieve_extend.c ****     }
 533:sieve_extend.c ****     bitarray[destination_stop_word] &= chopmask(destination_stop);
 1158              		.loc 1 533 5 is_stmt 1 view .LVU346
 1159              	# sieve_extend.c:533:     bitarray[destination_stop_word] &= chopmask(destination_stop);
 1160              		.loc 1 533 37 is_stmt 0 view .LVU347
 1161 0678 4A211CE7 		and	QWORD PTR [rdi+r12*8], rbx	# *_57, _124
 1162              	# sieve_extend.c:534: }
 534:sieve_extend.c **** }
 1163              		.loc 1 534 1 view .LVU348
 1164 067c 488D65D8 		lea	rsp, -40[rbp]	#,
 1165 0680 5B       		pop	rbx	#
 1166 0681 415C     		pop	r12	#
 1167              	.LVL57:
 1168              		.loc 1 534 1 view .LVU349
 1169 0683 415D     		pop	r13	#
 1170 0685 415E     		pop	r14	#
 1171 0687 415F     		pop	r15	#
 1172 0689 5D       		pop	rbp	#
 1173              		.cfi_remember_state
 1174              		.cfi_def_cfa 7, 8
 1175 068a C3       		ret	
 1176              	.LVL58:
 1177 068b 0F1F4400 		.p2align 4,,7
 1177      00
 1178              		.p2align 3
 1179              	.L49:
 1180              		.cfi_restore_state
 515:sieve_extend.c ****         return;
 1181              		.loc 1 515 9 is_stmt 1 view .LVU350
 1182              	# sieve_extend.c:515:         bitarray[destination_start_word] |= (pattern << bitindex(destination_
 515:sieve_extend.c ****         return;
 1183              		.loc 1 515 86 is_stmt 0 view .LVU351
 1184 0690 4821D8   		and	rax, rbx	# tmp351, _124
 1185              	# sieve_extend.c:515:         bitarray[destination_start_word] |= (pattern << bitindex(destination_
 515:sieve_extend.c ****         return;
 1186              		.loc 1 515 42 view .LVU352
 1187 0693 4C09F8   		or	rax, r15	# tmp352, pretmp_118
 1188 0696 498906   		mov	QWORD PTR [r14], rax	# *_117, tmp352
 516:sieve_extend.c ****     }
 1189              		.loc 1 516 9 is_stmt 1 view .LVU353
 1190              	# sieve_extend.c:534: }
 1191              		.loc 1 534 1 is_stmt 0 view .LVU354
 1192 0699 488D65D8 		lea	rsp, -40[rbp]	#,
 1193 069d 5B       		pop	rbx	#
 1194 069e 415C     		pop	r12	#
 1195              	.LVL59:
 1196              		.loc 1 534 1 view .LVU355
GAS LISTING /tmp/ccLUVin9.s 			page 36


 1197 06a0 415D     		pop	r13	#
 1198 06a2 415E     		pop	r14	#
 1199 06a4 415F     		pop	r15	#
 1200 06a6 5D       		pop	rbp	#
 1201              		.cfi_remember_state
 1202              		.cfi_def_cfa 7, 8
 1203 06a7 C3       		ret	
 1204              	.LVL60:
 1205              	.L50:
 1206              		.cfi_restore_state
 1207              		.loc 1 534 1 view .LVU356
 1208 06a8 C5F877   		vzeroupper
 1209 06ab EBCB     		jmp	.L10	#
 1210              	.LVL61:
 1211              	.L12:
 1212              	.LBB314:
 1213              	# sieve_extend.c:530:     for (counter_t i=0; i<=loop_range; ++i ) {
 530:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1214              		.loc 1 530 20 view .LVU357
 1215 06ad 4531F6   		xor	r14d, r14d	# i
 1216 06b0 E979FBFF 		jmp	.L7	#
 1216      FF
 1217              	.L11:
 1218 06b5 4531F6   		xor	r14d, r14d	# tmp.146
 1219              		.p2align 4,,2
 1220 06b8 E994FDFF 		jmp	.L6	#
 1220      FF
 1221              	.LBE314:
 1222              		.cfi_endproc
 1223              	.LFE68:
 1225 06bd 0F1F00   		.p2align 4
 1227              	extendSieve_shiftright_ivdep:
 1228              	.LVL62:
 1229              	.LFB73:
 535:sieve_extend.c **** 
 536:sieve_extend.c **** static void extendSieve_aligned(bitword_t* bitarray, const counter_t source_start, const counter_t 
 537:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 538:sieve_extend.c **** 
 539:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 540:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 541:sieve_extend.c ****     counter_t source_word = wordindex(source_start);
 542:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 543:sieve_extend.c ****     
 544:sieve_extend.c ****     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 545:sieve_extend.c **** 
 546:sieve_extend.c ****     while (copy_word + size <= destination_stop_word) {
 547:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 548:sieve_extend.c ****         copy_word += size;
 549:sieve_extend.c ****     }
 550:sieve_extend.c **** 
 551:sieve_extend.c ****    while (copy_word < destination_stop_word) {
 552:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 553:sieve_extend.c ****         source_word++;
 554:sieve_extend.c ****         copy_word++;
 555:sieve_extend.c ****     }
 556:sieve_extend.c **** 
 557:sieve_extend.c **** }
GAS LISTING /tmp/ccLUVin9.s 			page 37


 558:sieve_extend.c **** 
 559:sieve_extend.c **** //https://stackoverflow.com/questions/1898153/how-to-determine-if-memory-is-aligned
 560:sieve_extend.c **** #define is_unaligned(POINTER, BYTE_COUNT) (((uintptr_t)(const void *)(POINTER)) % (BYTE_COUNT))
 561:sieve_extend.c **** 
 562:sieve_extend.c **** void shiftvec(uint64_t* __restrict dst, const uint64_t* __restrict src, int size, int shift)
 563:sieve_extend.c **** {
 564:sieve_extend.c ****     int i = 0;
 565:sieve_extend.c ****     // MSVC: use steps of 2 for SSE, 4 for AVX2, 8 for AVX512
 566:sieve_extend.c ****     for (; i+4 < size; i+=4,dst+=4,src+=4)
 567:sieve_extend.c ****     {
 568:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 569:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 570:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 571:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 572:sieve_extend.c ****     }
 573:sieve_extend.c ****     for (; i < size; ++i,++src,++dst)
 574:sieve_extend.c ****     {
 575:sieve_extend.c ****         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 576:sieve_extend.c ****     }    
 577:sieve_extend.c **** }
 578:sieve_extend.c **** 
 579:sieve_extend.c **** #define forward_distance 4
 580:sieve_extend.c **** static void extendSieve_shiftright_vector(bitword_t* bitarray, const counter_t source_start, const 
 581:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 582:sieve_extend.c ****    
 583:sieve_extend.c ****     bitvector_t* bitarray_vector = (bitvector_t*) bitarray;
 584:sieve_extend.c **** 
 585:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 586:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 587:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_calc(source_start);
 588:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 589:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 590:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 591:sieve_extend.c **** 
 592:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose data
 593:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 594:sieve_extend.c ****                                 & keepmask(copy_start);
 595:sieve_extend.c **** 
 596:sieve_extend.c ****     if (copy_word >= destination_stop_word) return; // rapid exit for one word variant
 597:sieve_extend.c **** 
 598:sieve_extend.c ****     copy_word++;
 599:sieve_extend.c **** 
 600:sieve_extend.c ****     debug printf("..copy distance %ju\n",(uintmax_t) copy_word - (uintmax_t) source_word);
 601:sieve_extend.c ****     if (((copy_word - source_word) > 8)) {
 602:sieve_extend.c **** 
 603:sieve_extend.c ****         // move one vector further
 604:sieve_extend.c ****         counter_t target_word = wordindex(vectorstart(source_start+size)+VECTOR_SIZE_counter);
 605:sieve_extend.c ****         counter_t delta_word   = 4-((copy_word-source_word-1) % 4);
 606:sieve_extend.c ****         if (delta_word==0) { 
 607:sieve_extend.c ****             target_word += 8;
 608:sieve_extend.c ****         }
 609:sieve_extend.c **** 
 610:sieve_extend.c ****         debug printf("..source_word %ju copy_word %ju mod %ju target_word %ju\n",source_word, copy_
 611:sieve_extend.c **** 
 612:sieve_extend.c ****         #pragma GCC ivdep
 613:sieve_extend.c ****         for (; copy_word < target_word; copy_word++, source_word++ ) {
 614:sieve_extend.c ****             bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+
GAS LISTING /tmp/ccLUVin9.s 			page 38


 615:sieve_extend.c ****         }
 616:sieve_extend.c **** 
 617:sieve_extend.c ****         if (delta_word==0) { 
 618:sieve_extend.c ****             delta_word = 4;
 619:sieve_extend.c ****             source_word += 4;
 620:sieve_extend.c ****         }
 621:sieve_extend.c **** 
 622:sieve_extend.c ****         counter_t source_vector = vectorfromword(source_word+1);
 623:sieve_extend.c ****         counter_t copy_vector = vectorfromword(copy_word);
 624:sieve_extend.c **** 
 625:sieve_extend.c ****         // debug printf("..using vectors source_vector %ju copy vector %ju target_word %ju delta_wo
 626:sieve_extend.c **** 
 627:sieve_extend.c ****         const bitvector_t shuffle1 = { delta_word-1, delta_word, delta_word+1, delta_word+2 };
 628:sieve_extend.c ****         const bitvector_t shuffle2 = { delta_word, delta_word+1, delta_word+2, delta_word+3 };
 629:sieve_extend.c ****         const bitvector_t shift_vector = { shift, shift, shift, shift };
 630:sieve_extend.c ****         const bitvector_t shift_flipped_vector = { shift_flipped, shift_flipped, shift_flipped, shi
 631:sieve_extend.c **** 
 632:sieve_extend.c ****         const counter_t target_vector = vectorindex(destination_stop);
 633:sieve_extend.c **** 
 634:sieve_extend.c ****         // debug printf("..should be copy from source_word %ju to %ju, but takes vector %ju to %ju 
 635:sieve_extend.c **** 
 636:sieve_extend.c ****         // dump_bitarray(bitarray, copy_word+4);
 637:sieve_extend.c **** 
 638:sieve_extend.c ****         // debug printf("Will copy from %ju to %ju  vector %ju to %ju at copy_word %ju\n",source_ve
 639:sieve_extend.c ****         #pragma GCC ivdep
 640:sieve_extend.c ****         for (; copy_vector <= target_vector; copy_vector++, source_vector++ ) {
 641:sieve_extend.c ****             bitvector_t source0 = bitarray_vector[source_vector];
 642:sieve_extend.c ****             bitvector_t source1 = bitarray_vector[source_vector+1];
 643:sieve_extend.c ****             bitvector_t copy1 = __builtin_shuffle(source0,source1,shuffle1) >> shift_flipped_vector
 644:sieve_extend.c ****             bitvector_t copy2 = __builtin_shuffle(source0,source1,shuffle2) << shift_vector;
 645:sieve_extend.c ****             bitarray_vector[copy_vector] = copy1 | copy2;
 646:sieve_extend.c ****             // copy_word += 4;
 647:sieve_extend.c ****             // source_word += 4;
 648:sieve_extend.c ****         }
 649:sieve_extend.c **** 
 650:sieve_extend.c ****         // target_word = target_vector*4;
 651:sieve_extend.c ****         // for (; copy_word <= target_word; copy_word++, source_word++ ) {
 652:sieve_extend.c ****         //     bitword_t shouldbe = (bitarray[source_word] >> shift_flipped) | (bitarray[source_wor
 653:sieve_extend.c ****         //     bitword_t asis = bitarray[copy_word];
 654:sieve_extend.c ****         //     debug printf("Copy_word = %ju\n",copy_word);
 655:sieve_extend.c ****         //     if (shouldbe != asis) {
 656:sieve_extend.c ****         //         printf("ERROR expected at copy_word %ju\n", copy_word);
 657:sieve_extend.c ****         //         printWord(shouldbe);
 658:sieve_extend.c ****         //         printf("\n");
 659:sieve_extend.c ****         //         printf("But is\n");
 660:sieve_extend.c ****         //         printWord(asis);
 661:sieve_extend.c ****         //         printf("\n");
 662:sieve_extend.c ****         //         // dump_bitarray(bitarray, copy_word+4);
 663:sieve_extend.c ****         //         exit(0);
 664:sieve_extend.c ****         //     }
 665:sieve_extend.c ****         //     else {
 666:sieve_extend.c ****         //         // debug printf("Correct for copy_word %ju\n",copy_word);
 667:sieve_extend.c ****         //     }
 668:sieve_extend.c ****         // }
 669:sieve_extend.c **** 
 670:sieve_extend.c ****         // copy_word += 4;
 671:sieve_extend.c ****         // source_word += 4;
GAS LISTING /tmp/ccLUVin9.s 			page 39


 672:sieve_extend.c **** 
 673:sieve_extend.c **** 
 674:sieve_extend.c ****         // #pragma GCC ivdep 
 675:sieve_extend.c ****         // for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 676:sieve_extend.c ****         //     bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_wo
 677:sieve_extend.c ****         // }
 678:sieve_extend.c ****         // bitarray[copy_word] &= chopmask(destination_stop);
 679:sieve_extend.c ****     }
 680:sieve_extend.c ****     else {
 681:sieve_extend.c ****         register counter_t i = 0;
 682:sieve_extend.c ****         bitword_t* copy_ptr   = &bitarray[copy_word];
 683:sieve_extend.c ****         bitword_t* source_ptr = &bitarray[source_word];
 684:sieve_extend.c ****         bitword_t* dest_ptr   = &bitarray[destination_stop_word];
 685:sieve_extend.c ****         counter_t size_word_ptr   = dest_ptr - copy_ptr;
 686:sieve_extend.c ****         for (; i <= size_word_ptr; i++)
 687:sieve_extend.c ****             *(copy_ptr+i) = (*(source_ptr+i) >> shift_flipped) | (*(source_ptr+i+1) << shift);
 688:sieve_extend.c ****     }
 689:sieve_extend.c **** }
 690:sieve_extend.c **** 
 691:sieve_extend.c **** static inline counter_t extendSieve_shiftleft_unrolled(bitword_t* bitarray, const counter_t aligned
 692:sieve_extend.c ****     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_copy_word - 2) : 0; // s
 693:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 694:sieve_extend.c ****     counter_t distance = 0;
 695:sieve_extend.c ****     while (copy_word < fast_loop_stop_word) {
 696:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 697:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 698:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 699:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 700:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 701:sieve_extend.c ****         copy_word += 2;
 702:sieve_extend.c ****         source_word += 2;
 703:sieve_extend.c ****         distance += 2;
 704:sieve_extend.c ****     }
 705:sieve_extend.c ****     return distance;
 706:sieve_extend.c **** }
 707:sieve_extend.c **** 
 708:sieve_extend.c **** 
 709:sieve_extend.c **** 
 710:sieve_extend.c **** 
 711:sieve_extend.c **** static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t source_start, const c
 1230              		.loc 1 711 149 is_stmt 1 view -0
 1231              		.cfi_startproc
 712:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1232              		.loc 1 712 5 view .LVU359
 713:sieve_extend.c ****    
 714:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 1233              		.loc 1 714 5 view .LVU360
 1234              	# sieve_extend.c:711: static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t
 711:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1235              		.loc 1 711 149 is_stmt 0 view .LVU361
 1236 06c0 55       		push	rbp	#
 1237              		.cfi_def_cfa_offset 16
 1238              		.cfi_offset 6, -16
 1239              	# sieve_extend.c:716:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 715:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 716:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_calc(source_start);
 1240              		.loc 1 716 67 view .LVU362
GAS LISTING /tmp/ccLUVin9.s 			page 40


 1241 06c1 4889F0   		mov	rax, rsi	# _5, source_start
 1242              	# sieve_extend.c:711: static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t
 711:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1243              		.loc 1 711 149 view .LVU363
 1244 06c4 4889E5   		mov	rbp, rsp	#,
 1245              		.cfi_def_cfa_register 6
 1246              	# sieve_extend.c:716:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 1247              		.loc 1 716 67 view .LVU364
 1248 06c7 83E03F   		and	eax, 63	# _5,
 1249              	# sieve_extend.c:711: static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t
 711:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1250              		.loc 1 711 149 view .LVU365
 1251 06ca 4157     		push	r15	#
 1252 06cc 4156     		push	r14	#
 1253 06ce 4155     		push	r13	#
 1254 06d0 4154     		push	r12	#
 1255 06d2 53       		push	rbx	#
 1256              		.cfi_offset 15, -24
 1257              		.cfi_offset 14, -32
 1258              		.cfi_offset 13, -40
 1259              		.cfi_offset 12, -48
 1260              		.cfi_offset 3, -56
 1261 06d3 4889CB   		mov	rbx, rcx	# destination_stop, tmp840
 1262              	# sieve_extend.c:714:     const counter_t destination_stop_word = wordindex(destination_stop);
 714:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 1263              		.loc 1 714 21 view .LVU366
 1264 06d6 48C1EB06 		shr	rbx, 6	# destination_stop_word,
 1265              	# sieve_extend.c:711: static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t
 711:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1266              		.loc 1 711 149 view .LVU367
 1267 06da 4883E4E0 		and	rsp, -32	#,
 1268              	.LVL63:
 715:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 1269              		.loc 1 715 5 is_stmt 1 view .LVU368
 1270              	# sieve_extend.c:711: static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t
 711:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1271              		.loc 1 711 149 is_stmt 0 view .LVU369
 1272 06de 48894C24 		mov	QWORD PTR -40[rsp], rcx	# %sfp, destination_stop
 1272      D8
 1273              	# sieve_extend.c:715:     const counter_t copy_start = source_start + size;
 715:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 1274              		.loc 1 715 21 view .LVU370
 1275 06e3 488D0C16 		lea	rcx, [rsi+rdx]	# copy_start,
 1276              	.LVL64:
 1277              		.loc 1 716 5 is_stmt 1 view .LVU371
 1278              	# sieve_extend.c:718:     register counter_t source_word = wordindex(source_start);
 717:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 718:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 1279              		.loc 1 718 24 is_stmt 0 view .LVU372
 1280 06e7 48C1EE06 		shr	rsi, 6	# source_word,
 1281              	.LVL65:
 1282              	# sieve_extend.c:716:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 716:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1283              		.loc 1 716 39 view .LVU373
 1284 06eb 4989CB   		mov	r11, rcx	# _4, copy_start
 1285 06ee 4183E33F 		and	r11d, 63	# _4,
 1286              	.LVL66:
GAS LISTING /tmp/ccLUVin9.s 			page 41


 717:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1287              		.loc 1 717 5 is_stmt 1 view .LVU374
 1288              		.loc 1 718 5 view .LVU375
 719:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 1289              		.loc 1 719 5 view .LVU376
 1290              	# sieve_extend.c:721:     bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start
 720:sieve_extend.c **** 
 721:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose data
 1291              		.loc 1 721 38 is_stmt 0 view .LVU377
 1292 06f2 4C8D2CF5 		lea	r13, 0[0+rsi*8]	# _9,
 1292      00000000 
 1293              	# sieve_extend.c:719:     register counter_t copy_word = wordindex(copy_start);
 719:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 1294              		.loc 1 719 24 view .LVU378
 1295 06fa 48C1E906 		shr	rcx, 6	# copy_word,
 1296              	.LVL67:
 1297              		.loc 1 721 5 is_stmt 1 view .LVU379
 1298              	# sieve_extend.c:716:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 716:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1299              		.loc 1 716 31 is_stmt 0 view .LVU380
 1300 06fe 4D89DA   		mov	r10, r11	# shift, _4
 1301              	# sieve_extend.c:714:     const counter_t destination_stop_word = wordindex(destination_stop);
 714:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 1302              		.loc 1 714 21 view .LVU381
 1303 0701 48895C24 		mov	QWORD PTR -8[rsp], rbx	# %sfp, destination_stop_word
 1303      F8
 1304              	.LVL68:
 1305              	# sieve_extend.c:716:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 716:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1306              		.loc 1 716 31 view .LVU382
 1307 0706 4929C2   		sub	r10, rax	# shift, _5
 1308              	.LVL69:
 1309              	# sieve_extend.c:721:     bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start
 1310              		.loc 1 721 25 view .LVU383
 1311 0709 4C8D0CCF 		lea	r9, [rdi+rcx*8]	# _7,
 1312              	# sieve_extend.c:717:     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 717:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 1313              		.loc 1 717 31 view .LVU384
 1314 070d 4883C040 		add	rax, 64	# tmp401,
 1315              	.LVL70:
 1316              	# sieve_extend.c:721:     bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start
 1317              		.loc 1 721 25 view .LVU385
 1318 0711 4D8B21   		mov	r12, QWORD PTR [r9]	# _8, *_7
 1319              	# sieve_extend.c:717:     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 717:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 1320              		.loc 1 717 31 view .LVU386
 1321 0714 4C29D8   		sub	rax, r11	# shift_flipped, _4
 1322              	.LVL71:
 1323              	# sieve_extend.c:721:     bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start
 1324              		.loc 1 721 38 view .LVU387
 1325 0717 4E8D342F 		lea	r14, [rdi+r13]	# _10,
 1326              	# sieve_extend.c:722:                                 | (bitarray[copy_word] >> shift_flipped))
 722:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 1327              		.loc 1 722 56 view .LVU388
 1328 071b C442FBF7 		shrx	r8, r12, rax	# tmp405, _8, shift_flipped
 1328      C4
 1329              	# sieve_extend.c:721:     bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start
GAS LISTING /tmp/ccLUVin9.s 			page 42


 721:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 1330              		.loc 1 721 52 view .LVU389
 1331 0720 C442A9F7 		shlx	r15, QWORD PTR [r14], r10	# tmp403, *_10, shift
 1331      3E
 1332              	# sieve_extend.c:722:                                 | (bitarray[copy_word] >> shift_flipped))
 1333              		.loc 1 722 33 view .LVU390
 1334 0725 4D09F8   		or	r8, r15	# tmp406, tmp403
 1335              	# sieve_extend.c:725:     if (copy_word >= destination_stop_word) return; // rapid exit for one wor
 723:sieve_extend.c ****                                 & keepmask(copy_start);
 724:sieve_extend.c **** 
 725:sieve_extend.c ****     if (copy_word >= destination_stop_word) return; // rapid exit for one word variant
 1336              		.loc 1 725 8 view .LVU391
 1337 0728 4C8B7C24 		mov	r15, QWORD PTR -8[rsp]	# destination_stop_word, %sfp
 1337      F8
 1338              	# sieve_extend.c:723:                                 & keepmask(copy_start);
 723:sieve_extend.c ****                                 & keepmask(copy_start);
 1339              		.loc 1 723 35 view .LVU392
 1340 072d 48C7C3FF 		mov	rbx, -1	# tmp409,
 1340      FFFFFF
 1341 0734 C462A1F7 		shlx	r11, rbx, r11	# tmp408, tmp409, _4
 1341      DB
 1342              	.LVL72:
 1343              	# sieve_extend.c:721:     bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start
 721:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 1344              		.loc 1 721 52 view .LVU393
 1345 0739 44895424 		mov	DWORD PTR -20[rsp], r10d	# %sfp, shift
 1345      EC
 1346              	# sieve_extend.c:723:                                 & keepmask(copy_start);
 723:sieve_extend.c ****                                 & keepmask(copy_start);
 1347              		.loc 1 723 33 view .LVU394
 1348 073e 4D21C3   		and	r11, r8	# tmp410, tmp406
 1349              	# sieve_extend.c:721:     bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start
 721:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 1350              		.loc 1 721 25 view .LVU395
 1351 0741 4D09E3   		or	r11, r12	# tmp411, _8
 1352              	# sieve_extend.c:725:     if (copy_word >= destination_stop_word) return; // rapid exit for one wor
 1353              		.loc 1 725 8 view .LVU396
 1354 0744 4939CF   		cmp	r15, rcx	# destination_stop_word, copy_word
 1355              	# sieve_extend.c:721:     bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start
 721:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 1356              		.loc 1 721 25 view .LVU397
 1357 0747 4D8919   		mov	QWORD PTR [r9], r11	# *_7, tmp411
 1358              		.loc 1 725 5 is_stmt 1 view .LVU398
 1359              	# sieve_extend.c:725:     if (copy_word >= destination_stop_word) return; // rapid exit for one wor
 1360              		.loc 1 725 8 is_stmt 0 view .LVU399
 1361 074a 0F867204 		jbe	.L206	#,
 1361      0000
 1362              	# sieve_extend.c:731:     if (size >= WORD_SIZE_counter) {
 726:sieve_extend.c **** 
 727:sieve_extend.c ****     copy_word++;
 728:sieve_extend.c **** 
 729:sieve_extend.c ****     debug { printf("...start - %ju - %ju - end\n",(uintmax_t)wordindex(copy_start), (uintmax_t)dest
 730:sieve_extend.c **** 
 731:sieve_extend.c ****     if (size >= WORD_SIZE_counter) {
 1363              		.loc 1 731 8 view .LVU400
 1364 0750 4883FA3F 		cmp	rdx, 63	# size,
 1365 0754 4189C1   		mov	r9d, eax	# _15, shift_flipped
GAS LISTING /tmp/ccLUVin9.s 			page 43


 727:sieve_extend.c **** 
 1366              		.loc 1 727 5 is_stmt 1 view .LVU401
 1367              	# sieve_extend.c:727:     copy_word++;
 727:sieve_extend.c **** 
 1368              		.loc 1 727 14 is_stmt 0 view .LVU402
 1369 0757 4C8D4101 		lea	r8, 1[rcx]	# copy_word,
 1370              	.LVL73:
 729:sieve_extend.c **** 
 1371              		.loc 1 729 5 is_stmt 1 view .LVU403
 1372              		.loc 1 731 5 view .LVU404
 1373              	# sieve_extend.c:731:     if (size >= WORD_SIZE_counter) {
 1374              		.loc 1 731 8 is_stmt 0 view .LVU405
 1375 075b 0F877704 		ja	.L208	#,
 1375      0000
 1376              	# sieve_extend.c:742:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 732:sieve_extend.c ****         register const counter_t loop_distance = destination_stop_word - copy_word;
 733:sieve_extend.c **** 
 734:sieve_extend.c ****         //#pragma GCC unroll 16
 735:sieve_extend.c ****         #pragma GCC ivdep
 736:sieve_extend.c ****         for (register counter_t i = 0; i <loop_distance; i++) {
 737:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 738:sieve_extend.c ****         }
 739:sieve_extend.c ****         source_word += loop_distance; copy_word+= loop_distance;
 740:sieve_extend.c ****     }
 741:sieve_extend.c **** 
 742:sieve_extend.c ****     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 1377              		.loc 1 742 5 discriminator 1 view .LVU406
 1378 0761 4D39C7   		cmp	r15, r8	# destination_stop_word, copy_word
 1379 0764 4D89FC   		mov	r12, r15	# destination_stop_word, destination_stop_word
 1380              		.loc 1 742 12 is_stmt 1 discriminator 1 view .LVU407
 1381              	# sieve_extend.c:742:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 1382              		.loc 1 742 5 is_stmt 0 discriminator 1 view .LVU408
 1383 0767 0F823D04 		jb	.L61	#,
 1383      0000
 1384 076d 4D89E6   		mov	r14, r12	# _151, destination_stop_word
 1385 0770 498D5701 		lea	rdx, 1[r15]	# _158,
 1386              	.LVL74:
 1387              		.loc 1 742 5 discriminator 1 view .LVU409
 1388 0774 4D29C6   		sub	r14, r8	# _151, copy_word
 1389 0777 4C8D1CF5 		lea	r11, 40[0+rsi*8]	# _146,
 1389      28000000 
 1390 077f 4C897424 		mov	QWORD PTR -32[rsp], r14	# %sfp, _151
 1390      E0
 1391 0784 4E8D34C5 		lea	r14, 0[0+r8*8]	# _144,
 1391      00000000 
 1392 078c 48895424 		mov	QWORD PTR -16[rsp], rdx	# %sfp, _158
 1392      F0
 1393 0791 498D5E20 		lea	rbx, 32[r14]	# tmp496,
 1394 0795 488D14F5 		lea	rdx, 0[0+rsi*8]	# _296,
 1394      00000000 
 1395 079d 4C8D7902 		lea	r15, 2[rcx]	# _124,
 1396 07a1 4839DA   		cmp	rdx, rbx	# _296, tmp496
 1397 07a4 0F9DC3   		setge	bl	#, tmp498
 1398 07a7 4D39DE   		cmp	r14, r11	# _144, _146
 1399 07aa 410F9DC3 		setge	r11b	#, tmp500
 1400 07ae 4408DB   		or	bl, r11b	# tmp498, tmp500
 1401 07b1 0F848108 		je	.L60	#,
GAS LISTING /tmp/ccLUVin9.s 			page 44


 1401      0000
 1402 07b7 48837C24 		cmp	QWORD PTR -32[rsp], 5	# %sfp,
 1402      E005
 1403 07bd 0F97C3   		seta	bl	#, tmp503
 1404 07c0 4C3B7C24 		cmp	r15, QWORD PTR -16[rsp]	# _124, %sfp
 1404      F0
 1405 07c5 410F96C3 		setbe	r11b	#, tmp505
 1406 07c9 4484DB   		test	bl, r11b	# tmp503, tmp505
 1407 07cc 0F846608 		je	.L60	#,
 1407      0000
 1408 07d2 4929CC   		sub	r12, rcx	# tmp507, copy_word
 1409 07d5 4C3B7C24 		cmp	r15, QWORD PTR -16[rsp]	# _124, %sfp
 1409      F0
 1410 07da 41BB0100 		mov	r11d, 1	# tmp508,
 1410      0000
 1411 07e0 4D0F46DC 		cmovbe	r11, r12	# tmp507,, niters.172
 1412 07e4 4801FA   		add	rdx, rdi	# vectp.173, bitarray
 1413 07e7 48C1EA03 		shr	rdx, 3	# tmp510,
 1414 07eb 48F7DA   		neg	rdx	# tmp511
 1415 07ee 83E203   		and	edx, 3	# prolog_loop_niters.174,
 1416 07f1 0F84790A 		je	.L72	#,
 1416      0000
 743:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1417              		.loc 1 743 9 is_stmt 1 view .LVU410
 1418              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1419              		.loc 1 743 99 is_stmt 0 view .LVU411
 1420 07f7 4E8B6C2F 		mov	r13, QWORD PTR 8[rdi+r13]	# *_305, *_305
 1420      08
 1421              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1422              		.loc 1 743 83 view .LVU412
 1423 07fc 488D5E01 		lea	rbx, 1[rsi]	# tmp631,
 1424              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1425              		.loc 1 743 99 view .LVU413
 1426 0800 C442A9F7 		shlx	r12, r13, r10	# tmp512, *_305, shift
 1426      E5
 1427              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1428              		.loc 1 743 54 view .LVU414
 1429 0805 C462FBF7 		shrx	r13, QWORD PTR [rdi+rsi*8], rax	# tmp514, *_300, shift_flipped
 1429      2CF7
 1430              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1431              		.loc 1 743 83 view .LVU415
 1432 080b 48895C24 		mov	QWORD PTR -48[rsp], rbx	# %sfp, tmp631
 1432      D0
 1433              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1434              		.loc 1 743 72 view .LVU416
 1435 0810 4D09EC   		or	r12, r13	# tmp516, tmp514
 1436 0813 4E892437 		mov	QWORD PTR [rdi+r14], r12	# *_309, tmp516
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1437              		.loc 1 742 48 is_stmt 1 view .LVU417
 1438              	.LVL75:
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1439              		.loc 1 742 12 view .LVU418
 1440 0817 4883FA01 		cmp	rdx, 1	# prolog_loop_niters.174,
 1441              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1442              		.loc 1 743 29 is_stmt 0 view .LVU419
 1443 081b 4D89FE   		mov	r14, r15	# copy_word, _124
 1444 081e 745E     		je	.L62	#,
GAS LISTING /tmp/ccLUVin9.s 			page 45


 1445              		.loc 1 743 9 is_stmt 1 view .LVU420
 1446              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1447              		.loc 1 743 40 is_stmt 0 view .LVU421
 1448 0820 4C8D2CDD 		lea	r13, 0[0+rbx*8]	# _318,
 1448      00000000 
 1449              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1450              		.loc 1 743 83 view .LVU422
 1451 0828 4C8D7602 		lea	r14, 2[rsi]	# source_word,
 1452              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1453              		.loc 1 743 99 view .LVU423
 1454 082c C422A9F7 		shlx	r12, QWORD PTR 8[rdi+r13], r10	# tmp517, *_324, shift
 1454      642F08
 1455              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1456              		.loc 1 743 83 view .LVU424
 1457 0833 4C897424 		mov	QWORD PTR -48[rsp], r14	# %sfp, source_word
 1457      D0
 1458              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1459              		.loc 1 743 54 view .LVU425
 1460 0838 4E8B2C2F 		mov	r13, QWORD PTR [rdi+r13]	# *_319, *_319
 1461 083c C442FBF7 		shrx	r14, r13, rax	# tmp519, *_319, shift_flipped
 1461      F5
 1462              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1463              		.loc 1 743 72 view .LVU426
 1464 0841 4D09F4   		or	r12, r14	# tmp521, tmp519
 1465 0844 4883FA03 		cmp	rdx, 3	# prolog_loop_niters.174,
 1466 0848 4E8924FF 		mov	QWORD PTR [rdi+r15*8], r12	# *_328, tmp521
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1467              		.loc 1 742 48 is_stmt 1 view .LVU427
 1468              	# sieve_extend.c:742:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1469              		.loc 1 742 57 is_stmt 0 view .LVU428
 1470 084c 4C8D7103 		lea	r14, 3[rcx]	# copy_word,
 1471              	.LVL76:
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1472              		.loc 1 742 12 is_stmt 1 view .LVU429
 1473 0850 752C     		jne	.L62	#,
 1474              		.loc 1 743 9 view .LVU430
 1475              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1476              		.loc 1 743 40 is_stmt 0 view .LVU431
 1477 0852 4C8D6E02 		lea	r13, 2[rsi]	# source_word,
 1478              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1479              		.loc 1 743 83 view .LVU432
 1480 0856 4C8D6603 		lea	r12, 3[rsi]	# source_word,
 1481 085a 4C896424 		mov	QWORD PTR -48[rsp], r12	# %sfp, source_word
 1481      D0
 1482              	.LVL77:
 1483              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1484              		.loc 1 743 40 view .LVU433
 1485 085f 49C1E503 		sal	r13, 3	# source_word,
 1486              	.LVL78:
 1487              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1488              		.loc 1 743 99 view .LVU434
 1489 0863 C422A9F7 		shlx	r12, QWORD PTR 8[rdi+r13], r10	# tmp522, *_88, shift
 1489      642F08
 1490              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1491              		.loc 1 743 54 view .LVU435
 1492 086a 4E8B2C2F 		mov	r13, QWORD PTR [rdi+r13]	# *_99, *_99
GAS LISTING /tmp/ccLUVin9.s 			page 46


 1493 086e C442FBF7 		shrx	r13, r13, rax	# tmp524, *_99, shift_flipped
 1493      ED
 1494              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1495              		.loc 1 743 72 view .LVU436
 1496 0873 4D09EC   		or	r12, r13	# tmp526, tmp524
 1497 0876 4E8924F7 		mov	QWORD PTR [rdi+r14*8], r12	# *_81, tmp526
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1498              		.loc 1 742 48 is_stmt 1 view .LVU437
 1499              	# sieve_extend.c:742:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1500              		.loc 1 742 57 is_stmt 0 view .LVU438
 1501 087a 4C8D7104 		lea	r14, 4[rcx]	# copy_word,
 1502              	.LVL79:
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1503              		.loc 1 742 12 is_stmt 1 view .LVU439
 1504              	.L62:
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1505              		.loc 1 742 12 is_stmt 0 view .LVU440
 1506 087e 4801D6   		add	rsi, rdx	# tmp527, prolog_loop_niters.174
 1507 0881 4801D3   		add	rbx, rdx	# tmp530, prolog_loop_niters.174
 1508 0884 4929D3   		sub	r11, rdx	# niters.175, prolog_loop_niters.174
 1509 0887 488D0CF7 		lea	rcx, [rdi+rsi*8]	# vectp.181,
 1510 088b 488D34DF 		lea	rsi, [rdi+rbx*8]	# vectp.185,
 1511 088f 4C89DB   		mov	rbx, r11	# bnd.176, niters.175
 1512 0892 48C1EB02 		shr	rbx, 2	# bnd.176,
 1513 0896 C4C1796E 		vmovd	xmm1, r9d	# _15, _15
 1513      C9
 1514 089b 48C1E305 		sal	rbx, 5	# _472,
 1515 089f 4901D0   		add	r8, rdx	# tmp532, prolog_loop_niters.174
 1516 08a2 4C8D4BE0 		lea	r9, -32[rbx]	# tmp584,
 1517              	# sieve_extend.c:727:     copy_word++;
 727:sieve_extend.c **** 
 1518              		.loc 1 727 14 view .LVU441
 1519 08a6 31D2     		xor	edx, edx	# ivtmp.223
 1520 08a8 C5F96E44 		vmovd	xmm0, DWORD PTR -20[rsp]	# _12, %sfp
 1520      24EC
 1521 08ae 4E8D04C7 		lea	r8, [rdi+r8*8]	# vectp.190,
 1522 08b2 49C1E905 		shr	r9, 5	# tmp582,
 1523 08b6 4983C101 		add	r9, 1	# tmp585,
 1524 08ba 4183E107 		and	r9d, 7	# tmp586,
 1525 08be 0F841A01 		je	.L64	#,
 1525      0000
 1526 08c4 4983F901 		cmp	r9, 1	# tmp586,
 1527 08c8 0F84E700 		je	.L153	#,
 1527      0000
 1528 08ce 4983F902 		cmp	r9, 2	# tmp586,
 1529 08d2 0F84BD00 		je	.L154	#,
 1529      0000
 1530 08d8 4983F903 		cmp	r9, 3	# tmp586,
 1531 08dc 0F849200 		je	.L155	#,
 1531      0000
 1532 08e2 4983F904 		cmp	r9, 4	# tmp586,
 1533 08e6 746C     		je	.L156	#,
 1534 08e8 4983F905 		cmp	r9, 5	# tmp586,
 1535 08ec 7445     		je	.L157	#,
 1536 08ee 4983F906 		cmp	r9, 6	# tmp586,
 1537 08f2 741E     		je	.L158	#,
GAS LISTING /tmp/ccLUVin9.s 			page 47


 1538              		.loc 1 743 9 is_stmt 1 view .LVU442
 1539              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1540              		.loc 1 743 54 is_stmt 0 view .LVU443
 1541 08f4 C5FD6F31 		vmovdqa	ymm6, YMMWORD PTR [rcx]	# tmp971, MEM[base: vectp.181_192, index: ivtmp.223_470, offset: 0
 1542 08f8 BA200000 		mov	edx, 32	# ivtmp.223,
 1542      00
 1543              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1544              		.loc 1 743 99 view .LVU444
 1545 08fd C5FE6F3E 		vmovdqu	ymm7, YMMWORD PTR [rsi]	# tmp972, MEM[base: vectp.185_199, index: ivtmp.223_470, offset: 0
 1546              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1547              		.loc 1 743 54 view .LVU445
 1548 0901 C5CDD3D1 		vpsrlq	ymm2, ymm6, xmm1	# vect__41.183, tmp971, _15
 1549              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1550              		.loc 1 743 99 view .LVU446
 1551 0905 C5C5F3D8 		vpsllq	ymm3, ymm7, xmm0	# vect__46.187, tmp972, _12
 1552              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1553              		.loc 1 743 72 view .LVU447
 1554 0909 C5EDEBE3 		vpor	ymm4, ymm2, ymm3	# vect__49.188, vect__41.183, vect__46.187
 1555              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1556              		.loc 1 743 29 view .LVU448
 1557 090d C4C17E7F 		vmovdqu	YMMWORD PTR [r8], ymm4	# MEM[base: vectp.190_208, index: ivtmp.223_470, offset: 0B], vect_
 1557      20
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1558              		.loc 1 742 48 is_stmt 1 view .LVU449
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1559              		.loc 1 742 12 view .LVU450
 1560              	.L158:
 1561              		.loc 1 743 9 view .LVU451
 1562              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1563              		.loc 1 743 54 is_stmt 0 view .LVU452
 1564 0912 C5FD6F2C 		vmovdqa	ymm5, YMMWORD PTR [rcx+rdx]	# tmp973, MEM[base: vectp.181_192, index: ivtmp.223_470, offse
 1564      11
 1565              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1566              		.loc 1 743 99 view .LVU453
 1567 0917 C57E6F0C 		vmovdqu	ymm9, YMMWORD PTR [rsi+rdx]	# tmp974, MEM[base: vectp.185_199, index: ivtmp.223_470, offse
 1567      16
 1568              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1569              		.loc 1 743 54 view .LVU454
 1570 091c C555D3C1 		vpsrlq	ymm8, ymm5, xmm1	# vect__41.183, tmp973, _15
 1571              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1572              		.loc 1 743 99 view .LVU455
 1573 0920 C535F3D0 		vpsllq	ymm10, ymm9, xmm0	# vect__46.187, tmp974, _12
 1574              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1575              		.loc 1 743 72 view .LVU456
 1576 0924 C4413DEB 		vpor	ymm11, ymm8, ymm10	# vect__49.188, vect__41.183, vect__46.187
 1576      DA
 1577              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1578              		.loc 1 743 29 view .LVU457
 1579 0929 C4417E7F 		vmovdqu	YMMWORD PTR [r8+rdx], ymm11	# MEM[base: vectp.190_208, index: ivtmp.223_470, offset: 0B], 
 1579      1C10
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1580              		.loc 1 742 48 is_stmt 1 view .LVU458
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1581              		.loc 1 742 12 view .LVU459
 1582 092f 4883C220 		add	rdx, 32	# ivtmp.223,
 1583              	.L157:
 1584              		.loc 1 743 9 view .LVU460
GAS LISTING /tmp/ccLUVin9.s 			page 48


 1585              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1586              		.loc 1 743 54 is_stmt 0 view .LVU461
 1587 0933 C57D6F24 		vmovdqa	ymm12, YMMWORD PTR [rcx+rdx]	# tmp975, MEM[base: vectp.181_192, index: ivtmp.223_470, offs
 1587      11
 1588              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1589              		.loc 1 743 99 view .LVU462
 1590 0938 C57E6F34 		vmovdqu	ymm14, YMMWORD PTR [rsi+rdx]	# tmp976, MEM[base: vectp.185_199, index: ivtmp.223_470, offs
 1590      16
 1591              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1592              		.loc 1 743 54 view .LVU463
 1593 093d C51DD3E9 		vpsrlq	ymm13, ymm12, xmm1	# vect__41.183, tmp975, _15
 1594              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1595              		.loc 1 743 99 view .LVU464
 1596 0941 C50DF3F8 		vpsllq	ymm15, ymm14, xmm0	# vect__46.187, tmp976, _12
 1597              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1598              		.loc 1 743 72 view .LVU465
 1599 0945 C4C115EB 		vpor	ymm6, ymm13, ymm15	# vect__49.188, vect__41.183, vect__46.187
 1599      F7
 1600              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1601              		.loc 1 743 29 view .LVU466
 1602 094a C4C17E7F 		vmovdqu	YMMWORD PTR [r8+rdx], ymm6	# MEM[base: vectp.190_208, index: ivtmp.223_470, offset: 0B], v
 1602      3410
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1603              		.loc 1 742 48 is_stmt 1 view .LVU467
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1604              		.loc 1 742 12 view .LVU468
 1605 0950 4883C220 		add	rdx, 32	# ivtmp.223,
 1606              	.L156:
 1607              		.loc 1 743 9 view .LVU469
 1608              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1609              		.loc 1 743 54 is_stmt 0 view .LVU470
 1610 0954 C5FD6F14 		vmovdqa	ymm2, YMMWORD PTR [rcx+rdx]	# tmp977, MEM[base: vectp.181_192, index: ivtmp.223_470, offse
 1610      11
 1611              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1612              		.loc 1 743 99 view .LVU471
 1613 0959 C5FE6F1C 		vmovdqu	ymm3, YMMWORD PTR [rsi+rdx]	# tmp978, MEM[base: vectp.185_199, index: ivtmp.223_470, offse
 1613      16
 1614              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1615              		.loc 1 743 54 view .LVU472
 1616 095e C5EDD3F9 		vpsrlq	ymm7, ymm2, xmm1	# vect__41.183, tmp977, _15
 1617              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1618              		.loc 1 743 99 view .LVU473
 1619 0962 C5E5F3E0 		vpsllq	ymm4, ymm3, xmm0	# vect__46.187, tmp978, _12
 1620              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1621              		.loc 1 743 72 view .LVU474
 1622 0966 C5C5EBEC 		vpor	ymm5, ymm7, ymm4	# vect__49.188, vect__41.183, vect__46.187
 1623              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1624              		.loc 1 743 29 view .LVU475
 1625 096a C4C17E7F 		vmovdqu	YMMWORD PTR [r8+rdx], ymm5	# MEM[base: vectp.190_208, index: ivtmp.223_470, offset: 0B], v
 1625      2C10
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1626              		.loc 1 742 48 is_stmt 1 view .LVU476
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1627              		.loc 1 742 12 view .LVU477
 1628 0970 4883C220 		add	rdx, 32	# ivtmp.223,
 1629              	.L155:
 1630              		.loc 1 743 9 view .LVU478
GAS LISTING /tmp/ccLUVin9.s 			page 49


 1631              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1632              		.loc 1 743 54 is_stmt 0 view .LVU479
 1633 0974 C57D6F04 		vmovdqa	ymm8, YMMWORD PTR [rcx+rdx]	# tmp979, MEM[base: vectp.181_192, index: ivtmp.223_470, offse
 1633      11
 1634              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1635              		.loc 1 743 99 view .LVU480
 1636 0979 C57E6F14 		vmovdqu	ymm10, YMMWORD PTR [rsi+rdx]	# tmp980, MEM[base: vectp.185_199, index: ivtmp.223_470, offs
 1636      16
 1637              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1638              		.loc 1 743 54 view .LVU481
 1639 097e C53DD3C9 		vpsrlq	ymm9, ymm8, xmm1	# vect__41.183, tmp979, _15
 1640              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1641              		.loc 1 743 99 view .LVU482
 1642 0982 C52DF3D8 		vpsllq	ymm11, ymm10, xmm0	# vect__46.187, tmp980, _12
 1643              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1644              		.loc 1 743 72 view .LVU483
 1645 0986 C44135EB 		vpor	ymm12, ymm9, ymm11	# vect__49.188, vect__41.183, vect__46.187
 1645      E3
 1646              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1647              		.loc 1 743 29 view .LVU484
 1648 098b C4417E7F 		vmovdqu	YMMWORD PTR [r8+rdx], ymm12	# MEM[base: vectp.190_208, index: ivtmp.223_470, offset: 0B], 
 1648      2410
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1649              		.loc 1 742 48 is_stmt 1 view .LVU485
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1650              		.loc 1 742 12 view .LVU486
 1651 0991 4883C220 		add	rdx, 32	# ivtmp.223,
 1652              	.L154:
 1653              		.loc 1 743 9 view .LVU487
 1654              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1655              		.loc 1 743 54 is_stmt 0 view .LVU488
 1656 0995 C57D6F2C 		vmovdqa	ymm13, YMMWORD PTR [rcx+rdx]	# tmp981, MEM[base: vectp.181_192, index: ivtmp.223_470, offs
 1656      11
 1657              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1658              		.loc 1 743 99 view .LVU489
 1659 099a C57E6F3C 		vmovdqu	ymm15, YMMWORD PTR [rsi+rdx]	# tmp982, MEM[base: vectp.185_199, index: ivtmp.223_470, offs
 1659      16
 1660              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1661              		.loc 1 743 54 view .LVU490
 1662 099f C515D3F1 		vpsrlq	ymm14, ymm13, xmm1	# vect__41.183, tmp981, _15
 1663              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1664              		.loc 1 743 99 view .LVU491
 1665 09a3 C585F3F0 		vpsllq	ymm6, ymm15, xmm0	# vect__46.187, tmp982, _12
 1666              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1667              		.loc 1 743 72 view .LVU492
 1668 09a7 C58DEBD6 		vpor	ymm2, ymm14, ymm6	# vect__49.188, vect__41.183, vect__46.187
 1669              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1670              		.loc 1 743 29 view .LVU493
 1671 09ab C4C17E7F 		vmovdqu	YMMWORD PTR [r8+rdx], ymm2	# MEM[base: vectp.190_208, index: ivtmp.223_470, offset: 0B], v
 1671      1410
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1672              		.loc 1 742 48 is_stmt 1 view .LVU494
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1673              		.loc 1 742 12 view .LVU495
 1674 09b1 4883C220 		add	rdx, 32	# ivtmp.223,
 1675              	.L153:
 1676              		.loc 1 743 9 view .LVU496
GAS LISTING /tmp/ccLUVin9.s 			page 50


 1677              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1678              		.loc 1 743 54 is_stmt 0 view .LVU497
 1679 09b5 C5FD6F3C 		vmovdqa	ymm7, YMMWORD PTR [rcx+rdx]	# tmp983, MEM[base: vectp.181_192, index: ivtmp.223_470, offse
 1679      11
 1680              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1681              		.loc 1 743 99 view .LVU498
 1682 09ba C5FE6F1C 		vmovdqu	ymm3, YMMWORD PTR [rsi+rdx]	# tmp984, MEM[base: vectp.185_199, index: ivtmp.223_470, offse
 1682      16
 1683              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1684              		.loc 1 743 54 view .LVU499
 1685 09bf C5C5D3E1 		vpsrlq	ymm4, ymm7, xmm1	# vect__41.183, tmp983, _15
 1686              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1687              		.loc 1 743 99 view .LVU500
 1688 09c3 C5E5F3E8 		vpsllq	ymm5, ymm3, xmm0	# vect__46.187, tmp984, _12
 1689              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1690              		.loc 1 743 72 view .LVU501
 1691 09c7 C55DEBC5 		vpor	ymm8, ymm4, ymm5	# vect__49.188, vect__41.183, vect__46.187
 1692              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1693              		.loc 1 743 29 view .LVU502
 1694 09cb C4417E7F 		vmovdqu	YMMWORD PTR [r8+rdx], ymm8	# MEM[base: vectp.190_208, index: ivtmp.223_470, offset: 0B], v
 1694      0410
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1695              		.loc 1 742 48 is_stmt 1 view .LVU503
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1696              		.loc 1 742 12 view .LVU504
 1697 09d1 4883C220 		add	rdx, 32	# ivtmp.223,
 1698 09d5 4839DA   		cmp	rdx, rbx	# ivtmp.223, _472
 1699 09d8 0F842E01 		je	.L195	#,
 1699      0000
 1700              	.L64:
 1701              		.loc 1 743 9 discriminator 2 view .LVU505
 1702              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1703              		.loc 1 743 54 is_stmt 0 discriminator 2 view .LVU506
 1704 09de C57D6F0C 		vmovdqa	ymm9, YMMWORD PTR [rcx+rdx]	# tmp922, MEM[base: vectp.181_192, index: ivtmp.223_470, offse
 1704      11
 1705              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1706              		.loc 1 743 99 discriminator 2 view .LVU507
 1707 09e3 C57E6F1C 		vmovdqu	ymm11, YMMWORD PTR [rsi+rdx]	# tmp923, MEM[base: vectp.185_199, index: ivtmp.223_470, offs
 1707      16
 1708              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1709              		.loc 1 743 54 discriminator 2 view .LVU508
 1710 09e8 C535D3D1 		vpsrlq	ymm10, ymm9, xmm1	# vect__41.183, tmp922, _15
 1711              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1712              		.loc 1 743 99 discriminator 2 view .LVU509
 1713 09ec C525F3E0 		vpsllq	ymm12, ymm11, xmm0	# vect__46.187, tmp923, _12
 1714              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1715              		.loc 1 743 72 discriminator 2 view .LVU510
 1716 09f0 C4412DEB 		vpor	ymm13, ymm10, ymm12	# vect__49.188, vect__41.183, vect__46.187
 1716      EC
 1717              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1718              		.loc 1 743 29 discriminator 2 view .LVU511
 1719 09f5 C4417E7F 		vmovdqu	YMMWORD PTR [r8+rdx], ymm13	# MEM[base: vectp.190_208, index: ivtmp.223_470, offset: 0B], 
 1719      2C10
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1720              		.loc 1 742 48 is_stmt 1 discriminator 2 view .LVU512
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1721              		.loc 1 742 12 discriminator 2 view .LVU513
GAS LISTING /tmp/ccLUVin9.s 			page 51


 1722              		.loc 1 743 9 discriminator 2 view .LVU514
 1723              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1724              		.loc 1 743 54 is_stmt 0 discriminator 2 view .LVU515
 1725 09fb C57D6F74 		vmovdqa	ymm14, YMMWORD PTR 32[rcx+rdx]	# tmp924, MEM[base: vectp.181_192, index: ivtmp.223_470, of
 1725      1120
 1726              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1727              		.loc 1 743 99 discriminator 2 view .LVU516
 1728 0a01 C5FE6F74 		vmovdqu	ymm6, YMMWORD PTR 32[rsi+rdx]	# tmp925, MEM[base: vectp.185_199, index: ivtmp.223_470, off
 1728      1620
 1729              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1730              		.loc 1 743 54 discriminator 2 view .LVU517
 1731 0a07 C50DD3F9 		vpsrlq	ymm15, ymm14, xmm1	# vect__41.183, tmp924, _15
 1732              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1733              		.loc 1 743 99 discriminator 2 view .LVU518
 1734 0a0b C5CDF3D0 		vpsllq	ymm2, ymm6, xmm0	# vect__46.187, tmp925, _12
 1735              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1736              		.loc 1 743 72 discriminator 2 view .LVU519
 1737 0a0f C585EBFA 		vpor	ymm7, ymm15, ymm2	# vect__49.188, vect__41.183, vect__46.187
 1738              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1739              		.loc 1 743 29 discriminator 2 view .LVU520
 1740 0a13 C4C17E7F 		vmovdqu	YMMWORD PTR 32[r8+rdx], ymm7	# MEM[base: vectp.190_208, index: ivtmp.223_470, offset: 0B],
 1740      7C1020
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1741              		.loc 1 742 48 is_stmt 1 discriminator 2 view .LVU521
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1742              		.loc 1 742 12 discriminator 2 view .LVU522
 1743              		.loc 1 743 9 discriminator 2 view .LVU523
 1744              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1745              		.loc 1 743 54 is_stmt 0 discriminator 2 view .LVU524
 1746 0a1a C5FD6F64 		vmovdqa	ymm4, YMMWORD PTR 64[rcx+rdx]	# tmp926, MEM[base: vectp.181_192, index: ivtmp.223_470, off
 1746      1140
 1747              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1748              		.loc 1 743 99 discriminator 2 view .LVU525
 1749 0a20 C5FE6F5C 		vmovdqu	ymm3, YMMWORD PTR 64[rsi+rdx]	# tmp927, MEM[base: vectp.185_199, index: ivtmp.223_470, off
 1749      1640
 1750              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1751              		.loc 1 743 54 discriminator 2 view .LVU526
 1752 0a26 C5DDD3E9 		vpsrlq	ymm5, ymm4, xmm1	# vect__41.183, tmp926, _15
 1753              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1754              		.loc 1 743 99 discriminator 2 view .LVU527
 1755 0a2a C565F3C0 		vpsllq	ymm8, ymm3, xmm0	# vect__46.187, tmp927, _12
 1756              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1757              		.loc 1 743 72 discriminator 2 view .LVU528
 1758 0a2e C44155EB 		vpor	ymm9, ymm5, ymm8	# vect__49.188, vect__41.183, vect__46.187
 1758      C8
 1759              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1760              		.loc 1 743 29 discriminator 2 view .LVU529
 1761 0a33 C4417E7F 		vmovdqu	YMMWORD PTR 64[r8+rdx], ymm9	# MEM[base: vectp.190_208, index: ivtmp.223_470, offset: 0B],
 1761      4C1040
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1762              		.loc 1 742 48 is_stmt 1 discriminator 2 view .LVU530
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1763              		.loc 1 742 12 discriminator 2 view .LVU531
 1764              		.loc 1 743 9 discriminator 2 view .LVU532
 1765              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1766              		.loc 1 743 54 is_stmt 0 discriminator 2 view .LVU533
 1767 0a3a C57D6F54 		vmovdqa	ymm10, YMMWORD PTR 96[rcx+rdx]	# tmp928, MEM[base: vectp.181_192, index: ivtmp.223_470, of
GAS LISTING /tmp/ccLUVin9.s 			page 52


 1767      1160
 1768              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1769              		.loc 1 743 99 discriminator 2 view .LVU534
 1770 0a40 C57E6F64 		vmovdqu	ymm12, YMMWORD PTR 96[rsi+rdx]	# tmp929, MEM[base: vectp.185_199, index: ivtmp.223_470, of
 1770      1660
 1771              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1772              		.loc 1 743 54 discriminator 2 view .LVU535
 1773 0a46 C52DD3D9 		vpsrlq	ymm11, ymm10, xmm1	# vect__41.183, tmp928, _15
 1774              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1775              		.loc 1 743 99 discriminator 2 view .LVU536
 1776 0a4a C51DF3E8 		vpsllq	ymm13, ymm12, xmm0	# vect__46.187, tmp929, _12
 1777              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1778              		.loc 1 743 72 discriminator 2 view .LVU537
 1779 0a4e C44125EB 		vpor	ymm14, ymm11, ymm13	# vect__49.188, vect__41.183, vect__46.187
 1779      F5
 1780              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1781              		.loc 1 743 29 discriminator 2 view .LVU538
 1782 0a53 C4417E7F 		vmovdqu	YMMWORD PTR 96[r8+rdx], ymm14	# MEM[base: vectp.190_208, index: ivtmp.223_470, offset: 0B]
 1782      741060
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1783              		.loc 1 742 48 is_stmt 1 discriminator 2 view .LVU539
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1784              		.loc 1 742 12 discriminator 2 view .LVU540
 1785              		.loc 1 743 9 discriminator 2 view .LVU541
 1786              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1787              		.loc 1 743 54 is_stmt 0 discriminator 2 view .LVU542
 1788 0a5a C57D6FBC 		vmovdqa	ymm15, YMMWORD PTR 128[rcx+rdx]	# tmp930, MEM[base: vectp.181_192, index: ivtmp.223_470, o
 1788      11800000 
 1788      00
 1789              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1790              		.loc 1 743 99 discriminator 2 view .LVU543
 1791 0a63 C5FE6F94 		vmovdqu	ymm2, YMMWORD PTR 128[rsi+rdx]	# tmp931, MEM[base: vectp.185_199, index: ivtmp.223_470, of
 1791      16800000 
 1791      00
 1792              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1793              		.loc 1 743 54 discriminator 2 view .LVU544
 1794 0a6c C585D3F1 		vpsrlq	ymm6, ymm15, xmm1	# vect__41.183, tmp930, _15
 1795              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1796              		.loc 1 743 99 discriminator 2 view .LVU545
 1797 0a70 C5EDF3F8 		vpsllq	ymm7, ymm2, xmm0	# vect__46.187, tmp931, _12
 1798              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1799              		.loc 1 743 72 discriminator 2 view .LVU546
 1800 0a74 C5CDEBE7 		vpor	ymm4, ymm6, ymm7	# vect__49.188, vect__41.183, vect__46.187
 1801              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1802              		.loc 1 743 29 discriminator 2 view .LVU547
 1803 0a78 C4C17E7F 		vmovdqu	YMMWORD PTR 128[r8+rdx], ymm4	# MEM[base: vectp.190_208, index: ivtmp.223_470, offset: 0B]
 1803      A4108000 
 1803      0000
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1804              		.loc 1 742 48 is_stmt 1 discriminator 2 view .LVU548
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1805              		.loc 1 742 12 discriminator 2 view .LVU549
 1806              		.loc 1 743 9 discriminator 2 view .LVU550
 1807              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1808              		.loc 1 743 54 is_stmt 0 discriminator 2 view .LVU551
 1809 0a82 C5FD6FAC 		vmovdqa	ymm5, YMMWORD PTR 160[rcx+rdx]	# tmp932, MEM[base: vectp.181_192, index: ivtmp.223_470, of
 1809      11A00000 
GAS LISTING /tmp/ccLUVin9.s 			page 53


 1809      00
 1810              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1811              		.loc 1 743 99 discriminator 2 view .LVU552
 1812 0a8b C5FE6F9C 		vmovdqu	ymm3, YMMWORD PTR 160[rsi+rdx]	# tmp933, MEM[base: vectp.185_199, index: ivtmp.223_470, of
 1812      16A00000 
 1812      00
 1813              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1814              		.loc 1 743 54 discriminator 2 view .LVU553
 1815 0a94 C555D3C1 		vpsrlq	ymm8, ymm5, xmm1	# vect__41.183, tmp932, _15
 1816              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1817              		.loc 1 743 99 discriminator 2 view .LVU554
 1818 0a98 C565F3C8 		vpsllq	ymm9, ymm3, xmm0	# vect__46.187, tmp933, _12
 1819              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1820              		.loc 1 743 72 discriminator 2 view .LVU555
 1821 0a9c C4413DEB 		vpor	ymm10, ymm8, ymm9	# vect__49.188, vect__41.183, vect__46.187
 1821      D1
 1822              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1823              		.loc 1 743 29 discriminator 2 view .LVU556
 1824 0aa1 C4417E7F 		vmovdqu	YMMWORD PTR 160[r8+rdx], ymm10	# MEM[base: vectp.190_208, index: ivtmp.223_470, offset: 0B
 1824      9410A000 
 1824      0000
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1825              		.loc 1 742 48 is_stmt 1 discriminator 2 view .LVU557
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1826              		.loc 1 742 12 discriminator 2 view .LVU558
 1827              		.loc 1 743 9 discriminator 2 view .LVU559
 1828              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1829              		.loc 1 743 54 is_stmt 0 discriminator 2 view .LVU560
 1830 0aab C57D6F9C 		vmovdqa	ymm11, YMMWORD PTR 192[rcx+rdx]	# tmp934, MEM[base: vectp.181_192, index: ivtmp.223_470, o
 1830      11C00000 
 1830      00
 1831              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1832              		.loc 1 743 99 discriminator 2 view .LVU561
 1833 0ab4 C57E6FAC 		vmovdqu	ymm13, YMMWORD PTR 192[rsi+rdx]	# tmp935, MEM[base: vectp.185_199, index: ivtmp.223_470, o
 1833      16C00000 
 1833      00
 1834              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1835              		.loc 1 743 54 discriminator 2 view .LVU562
 1836 0abd C525D3E1 		vpsrlq	ymm12, ymm11, xmm1	# vect__41.183, tmp934, _15
 1837              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1838              		.loc 1 743 99 discriminator 2 view .LVU563
 1839 0ac1 C515F3F0 		vpsllq	ymm14, ymm13, xmm0	# vect__46.187, tmp935, _12
 1840              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1841              		.loc 1 743 72 discriminator 2 view .LVU564
 1842 0ac5 C4411DEB 		vpor	ymm15, ymm12, ymm14	# vect__49.188, vect__41.183, vect__46.187
 1842      FE
 1843              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1844              		.loc 1 743 29 discriminator 2 view .LVU565
 1845 0aca C4417E7F 		vmovdqu	YMMWORD PTR 192[r8+rdx], ymm15	# MEM[base: vectp.190_208, index: ivtmp.223_470, offset: 0B
 1845      BC10C000 
 1845      0000
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1846              		.loc 1 742 48 is_stmt 1 discriminator 2 view .LVU566
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1847              		.loc 1 742 12 discriminator 2 view .LVU567
 1848              		.loc 1 743 9 discriminator 2 view .LVU568
 1849              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
GAS LISTING /tmp/ccLUVin9.s 			page 54


 1850              		.loc 1 743 54 is_stmt 0 discriminator 2 view .LVU569
 1851 0ad4 C5FD6FB4 		vmovdqa	ymm6, YMMWORD PTR 224[rcx+rdx]	# tmp936, MEM[base: vectp.181_192, index: ivtmp.223_470, of
 1851      11E00000 
 1851      00
 1852              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1853              		.loc 1 743 99 discriminator 2 view .LVU570
 1854 0add C5FE6FBC 		vmovdqu	ymm7, YMMWORD PTR 224[rsi+rdx]	# tmp937, MEM[base: vectp.185_199, index: ivtmp.223_470, of
 1854      16E00000 
 1854      00
 1855              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1856              		.loc 1 743 54 discriminator 2 view .LVU571
 1857 0ae6 C5CDD3D1 		vpsrlq	ymm2, ymm6, xmm1	# vect__41.183, tmp936, _15
 1858              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1859              		.loc 1 743 99 discriminator 2 view .LVU572
 1860 0aea C5C5F3E0 		vpsllq	ymm4, ymm7, xmm0	# vect__46.187, tmp937, _12
 1861              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1862              		.loc 1 743 72 discriminator 2 view .LVU573
 1863 0aee C5EDEBEC 		vpor	ymm5, ymm2, ymm4	# vect__49.188, vect__41.183, vect__46.187
 1864              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1865              		.loc 1 743 29 discriminator 2 view .LVU574
 1866 0af2 C4C17E7F 		vmovdqu	YMMWORD PTR 224[r8+rdx], ymm5	# MEM[base: vectp.190_208, index: ivtmp.223_470, offset: 0B]
 1866      AC10E000 
 1866      0000
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1867              		.loc 1 742 48 is_stmt 1 discriminator 2 view .LVU575
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1868              		.loc 1 742 12 discriminator 2 view .LVU576
 1869 0afc 4881C200 		add	rdx, 256	# ivtmp.223,
 1869      010000
 1870 0b03 4839DA   		cmp	rdx, rbx	# ivtmp.223, _472
 1871 0b06 0F85D2FE 		jne	.L64	#,
 1871      FFFF
 1872              	.L195:
 1873 0b0c 4C8B6C24 		mov	r13, QWORD PTR -48[rsp]	# source_word, %sfp
 1873      D0
 1874 0b11 4D89DC   		mov	r12, r11	# niters_vector_mult_vf.177, niters.175
 1875 0b14 4983E4FC 		and	r12, -4	# niters_vector_mult_vf.177,
 1876 0b18 4D01E6   		add	r14, r12	# tmp.178, niters_vector_mult_vf.177
 1877 0b1b 4D01E5   		add	r13, r12	# source_word, niters_vector_mult_vf.177
 1878 0b1e 4D39E3   		cmp	r11, r12	# niters.175, niters_vector_mult_vf.177
 1879 0b21 0F844107 		je	.L205	#,
 1879      0000
 1880              	.LVL80:
 1881              		.loc 1 743 9 view .LVU577
 1882              	# sieve_extend.c:742:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1883              		.loc 1 742 5 is_stmt 0 view .LVU578
 1884 0b27 488B5C24 		mov	rbx, QWORD PTR -8[rsp]	# destination_stop_word, %sfp
 1884      F8
 1885              	# sieve_extend.c:742:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1886              		.loc 1 742 57 view .LVU579
 1887 0b2c 4D8D4E01 		lea	r9, 1[r14]	# copy_word,
 1888              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1889              		.loc 1 743 99 view .LVU580
 1890 0b30 C4A2A9F7 		shlx	rcx, QWORD PTR 8[rdi+r13*8], r10	# tmp542, *_45, shift
 1890      4CEF08
GAS LISTING /tmp/ccLUVin9.s 			page 55


 1891              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1892              		.loc 1 743 54 view .LVU581
 1893 0b37 C4A2FBF7 		shrx	rsi, QWORD PTR [rdi+r13*8], rax	# tmp544, *_40, shift_flipped
 1893      34EF
 1894              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1895              		.loc 1 743 72 view .LVU582
 1896 0b3d 4809F1   		or	rcx, rsi	# tmp546, tmp544
 1897              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1898              		.loc 1 743 83 view .LVU583
 1899 0b40 4D8D5D01 		lea	r11, 1[r13]	# _43,
 1900              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1901              		.loc 1 743 72 view .LVU584
 1902 0b44 4A890CF7 		mov	QWORD PTR [rdi+r14*8], rcx	# *_49, tmp546
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1903              		.loc 1 742 48 is_stmt 1 view .LVU585
 1904              	.LVL81:
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1905              		.loc 1 742 12 view .LVU586
 1906              	# sieve_extend.c:742:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1907              		.loc 1 742 5 is_stmt 0 view .LVU587
 1908 0b48 4C39CB   		cmp	rbx, r9	# destination_stop_word, copy_word
 1909 0b4b 0F821707 		jb	.L205	#,
 1909      0000
 1910              		.loc 1 743 9 is_stmt 1 view .LVU588
 1911              	# sieve_extend.c:742:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1912              		.loc 1 742 57 is_stmt 0 view .LVU589
 1913 0b51 4983C602 		add	r14, 2	# copy_word,
 1914              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1915              		.loc 1 743 99 view .LVU590
 1916 0b55 C4A2A9F7 		shlx	rdx, QWORD PTR 8[rdi+r11*8], r10	# tmp547, *_32, shift
 1916      54DF08
 1917              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1918              		.loc 1 743 54 view .LVU591
 1919 0b5c 4E8B04DF 		mov	r8, QWORD PTR [rdi+r11*8]	# *_27, *_27
 1920              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1921              		.loc 1 743 83 view .LVU592
 1922 0b60 4983C502 		add	r13, 2	# _30,
 1923              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1924              		.loc 1 743 54 view .LVU593
 1925 0b64 C442FBF7 		shrx	r12, r8, rax	# tmp549, *_27, shift_flipped
 1925      E0
 1926              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1927              		.loc 1 743 72 view .LVU594
 1928 0b69 4C09E2   		or	rdx, r12	# tmp551, tmp549
 1929 0b6c 4A8914CF 		mov	QWORD PTR [rdi+r9*8], rdx	# *_36, tmp551
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1930              		.loc 1 742 48 is_stmt 1 view .LVU595
 1931              	.LVL82:
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1932              		.loc 1 742 12 view .LVU596
 1933              	# sieve_extend.c:742:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1934              		.loc 1 742 5 is_stmt 0 view .LVU597
 1935 0b70 4C39F3   		cmp	rbx, r14	# destination_stop_word, copy_word
 1936 0b73 0F82EF06 		jb	.L205	#,
GAS LISTING /tmp/ccLUVin9.s 			page 56


 1936      0000
 1937              		.loc 1 743 9 is_stmt 1 view .LVU598
 1938              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1939              		.loc 1 743 99 is_stmt 0 view .LVU599
 1940 0b79 C422A9F7 		shlx	r10, QWORD PTR 8[rdi+r13*8], r10	# tmp552, *_178, shift
 1940      54EF08
 1941              	.LVL83:
 1942              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1943              		.loc 1 743 54 view .LVU600
 1944 0b80 4E8B2CEF 		mov	r13, QWORD PTR [rdi+r13*8]	# *_173, *_173
 1945              	.LVL84:
 1946              		.loc 1 743 54 view .LVU601
 1947 0b84 C4C2FBF7 		shrx	rax, r13, rax	# tmp554, *_173, shift_flipped
 1947      C5
 1948              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1949              		.loc 1 743 72 view .LVU602
 1950 0b89 4C09D0   		or	rax, r10	# tmp556, tmp552
 1951 0b8c 4A8904F7 		mov	QWORD PTR [rdi+r14*8], rax	# *_182, tmp556
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1952              		.loc 1 742 48 is_stmt 1 view .LVU603
 1953              	.LVL85:
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1954              		.loc 1 742 12 view .LVU604
 1955 0b90 C5F877   		vzeroupper
 1956              	.LVL86:
 1957              	.L67:
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1958              		.loc 1 742 12 is_stmt 0 view .LVU605
 1959 0b93 4C3B7C24 		cmp	r15, QWORD PTR -16[rsp]	# _124, %sfp
 1959      F0
 1960 0b98 41B80000 		mov	r8d, 0	# tmp563,
 1960      0000
 1961 0b9e 4C8B4C24 		mov	r9, QWORD PTR -32[rsp]	#, %sfp
 1961      E0
 1962 0ba3 4D0F46C1 		cmovbe	r8, r9	#,, tmp562
 1963 0ba7 4D01F8   		add	r8, r15	# copy_word, _124
 1964              	.L61:
 744:sieve_extend.c ****     }
 745:sieve_extend.c ****     bitarray[copy_word] &= chopmask(destination_stop);
 1965              		.loc 1 745 5 is_stmt 1 view .LVU606
 1966              	# sieve_extend.c:745:     bitarray[copy_word] &= chopmask(destination_stop);
 1967              		.loc 1 745 28 is_stmt 0 view .LVU607
 1968 0baa 448B5C24 		mov	r11d, DWORD PTR -40[rsp]	# tmp565, %sfp
 1968      D8
 1969 0baf 48C7C3FF 		mov	rbx, -1	# tmp568,
 1969      FFFFFF
 1970 0bb6 41F7D3   		not	r11d	# tmp565
 1971 0bb9 C462A3F7 		shrx	r15, rbx, r11	# tmp567, tmp568, tmp565
 1971      FB
 1972              	# sieve_extend.c:745:     bitarray[copy_word] &= chopmask(destination_stop);
 1973              		.loc 1 745 25 view .LVU608
 1974 0bbe 4E213CC7 		and	QWORD PTR [rdi+r8*8], r15	# *_51, tmp567
 1975              	.L206:
 1976              	# sieve_extend.c:747: }
 746:sieve_extend.c **** 
 747:sieve_extend.c **** }
 1977              		.loc 1 747 1 view .LVU609
GAS LISTING /tmp/ccLUVin9.s 			page 57


 1978 0bc2 488D65D8 		lea	rsp, -40[rbp]	#,
 1979              	.LVL87:
 1980              		.loc 1 747 1 view .LVU610
 1981 0bc6 5B       		pop	rbx	#
 1982 0bc7 415C     		pop	r12	#
 1983 0bc9 415D     		pop	r13	#
 1984 0bcb 415E     		pop	r14	#
 1985 0bcd 415F     		pop	r15	#
 1986 0bcf 5D       		pop	rbp	#
 1987              		.cfi_remember_state
 1988              		.cfi_def_cfa 7, 8
 1989              	.LVL88:
 1990              		.loc 1 747 1 view .LVU611
 1991 0bd0 C3       		ret	
 1992              	.LVL89:
 1993              		.p2align 4,,7
 1994 0bd1 0F1F8000 		.p2align 3
 1994      000000
 1995              	.L208:
 1996              		.cfi_restore_state
 1997              	.LBB315:
 732:sieve_extend.c **** 
 1998              		.loc 1 732 9 is_stmt 1 view .LVU612
 1999              	.LBB316:
 736:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2000              		.loc 1 736 14 view .LVU613
 736:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2001              		.loc 1 736 40 view .LVU614
 2002              	# sieve_extend.c:736:         for (register counter_t i = 0; i <loop_distance; i++) {
 736:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2003              		.loc 1 736 9 is_stmt 0 view .LVU615
 2004 0bd8 4D29C7   		sub	r15, r8	# loop_distance, copy_word
 2005              	.LVL90:
 736:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2006              		.loc 1 736 9 view .LVU616
 2007 0bdb 4C897C24 		mov	QWORD PTR -32[rsp], r15	# %sfp, loop_distance
 2007      E0
 2008 0be0 0F842904 		je	.L54	#,
 2008      0000
 2009 0be6 4C89F2   		mov	rdx, r14	# tmp412, _10
 2010              	.LVL91:
 736:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2011              		.loc 1 736 9 view .LVU617
 2012 0be9 4983EF01 		sub	r15, 1	# tmp414,
 2013              	.LVL92:
 736:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2014              		.loc 1 736 9 view .LVU618
 2015 0bed 48C1EA03 		shr	rdx, 3	# tmp412,
 2016 0bf1 BB050000 		mov	ebx, 5	# tmp416,
 2016      00
 2017 0bf6 48F7DA   		neg	rdx	# tmp413
 2018 0bf9 83E203   		and	edx, 3	# prolog_loop_niters.193,
 2019 0bfc 4C8D5A03 		lea	r11, 3[rdx]	# tmp415,
 2020 0c00 4983FB05 		cmp	r11, 5	# tmp415,
 2021 0c04 4C0F42DB 		cmovb	r11, rbx	# tmp415,, tmp588, tmp416
 2022 0c08 4D39DF   		cmp	r15, r11	# tmp414, tmp588
 2023 0c0b 0F82A506 		jb	.L68	#,
GAS LISTING /tmp/ccLUVin9.s 			page 58


 2023      0000
 2024 0c11 4885D2   		test	rdx, rdx	# prolog_loop_niters.193
 2025 0c14 0F843E06 		je	.L69	#,
 2025      0000
 737:sieve_extend.c ****         }
 2026              		.loc 1 737 13 is_stmt 1 view .LVU619
 2027              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2028              		.loc 1 737 109 is_stmt 0 view .LVU620
 2029 0c1a 4E8B642F 		mov	r12, QWORD PTR 8[rdi+r13]	# *_433, *_433
 2029      08
 2030 0c1f C442A9F7 		shlx	r13, r12, r10	# tmp417, *_433, shift
 2030      EC
 2031              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2032              		.loc 1 737 62 view .LVU621
 2033 0c24 4D8B36   		mov	r14, QWORD PTR [r14]	# *_10, *_10
 2034 0c27 C4C2FBF7 		shrx	rbx, r14, rax	# tmp419, *_10, shift_flipped
 2034      DE
 2035              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2036              		.loc 1 737 80 view .LVU622
 2037 0c2c 4909DD   		or	r13, rbx	# tmp421, tmp419
 2038 0c2f 4883FA01 		cmp	rdx, 1	# prolog_loop_niters.193,
 2039              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2040              		.loc 1 737 105 view .LVU623
 2041 0c33 4C8D5E01 		lea	r11, 1[rsi]	# tmp571,
 2042              	# sieve_extend.c:736:         for (register counter_t i = 0; i <loop_distance; i++) {
 736:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2043              		.loc 1 736 59 view .LVU624
 2044 0c37 41BF0100 		mov	r15d, 1	# i,
 2044      0000
 2045              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2046              		.loc 1 737 80 view .LVU625
 2047 0c3d 4E892CC7 		mov	QWORD PTR [rdi+r8*8], r13	# *_438, tmp421
 736:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2048              		.loc 1 736 58 is_stmt 1 view .LVU626
 2049              	.LVL93:
 736:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2050              		.loc 1 736 40 view .LVU627
 2051 0c41 7443     		je	.L56	#,
 737:sieve_extend.c ****         }
 2052              		.loc 1 737 13 view .LVU628
 2053              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2054              		.loc 1 737 109 is_stmt 0 view .LVU629
 2055 0c43 C422A9F7 		shlx	r15, QWORD PTR 8[rdi+r11*8], r10	# tmp423, *_453, shift
 2055      7CDF08
 2056              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2057              		.loc 1 737 62 view .LVU630
 2058 0c4a C422FBF7 		shrx	r12, QWORD PTR [rdi+r11*8], rax	# tmp425, *_448, shift_flipped
 2058      24DF
 2059              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
GAS LISTING /tmp/ccLUVin9.s 			page 59


 2060              		.loc 1 737 80 view .LVU631
 2061 0c50 4D09E7   		or	r15, r12	# tmp427, tmp425
 2062 0c53 4883FA03 		cmp	rdx, 3	# prolog_loop_niters.193,
 2063 0c57 4C897CCF 		mov	QWORD PTR 16[rdi+rcx*8], r15	# *_458, tmp427
 2063      10
 736:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2064              		.loc 1 736 58 is_stmt 1 view .LVU632
 2065              	.LVL94:
 736:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2066              		.loc 1 736 40 view .LVU633
 2067              	# sieve_extend.c:736:         for (register counter_t i = 0; i <loop_distance; i++) {
 736:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2068              		.loc 1 736 59 is_stmt 0 view .LVU634
 2069 0c5c 41BF0200 		mov	r15d, 2	# i,
 2069      0000
 2070 0c62 7522     		jne	.L56	#,
 737:sieve_extend.c ****         }
 2071              		.loc 1 737 13 is_stmt 1 view .LVU635
 2072              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2073              		.loc 1 737 58 is_stmt 0 view .LVU636
 2074 0c64 4C8D6E02 		lea	r13, 2[rsi]	# tmp428,
 2075              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2076              		.loc 1 737 109 view .LVU637
 2077 0c68 C422A9F7 		shlx	r14, QWORD PTR 8[rdi+r13*8], r10	# tmp430, *_232, shift
 2077      74EF08
 2078              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2079              		.loc 1 737 62 view .LVU638
 2080 0c6f 4A8B1CEF 		mov	rbx, QWORD PTR [rdi+r13*8]	# *_227, *_227
 2081 0c73 C462FBF7 		shrx	r15, rbx, rax	# tmp432, *_227, shift_flipped
 2081      FB
 2082              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2083              		.loc 1 737 80 view .LVU639
 2084 0c78 4D09FE   		or	r14, r15	# tmp434, tmp432
 2085              	# sieve_extend.c:736:         for (register counter_t i = 0; i <loop_distance; i++) {
 736:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2086              		.loc 1 736 59 view .LVU640
 2087 0c7b 41BF0300 		mov	r15d, 3	# i,
 2087      0000
 2088              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2089              		.loc 1 737 80 view .LVU641
 2090 0c81 4C8974CF 		mov	QWORD PTR 24[rdi+rcx*8], r14	# *_237, tmp434
 2090      18
 736:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2091              		.loc 1 736 58 is_stmt 1 view .LVU642
 2092              	.LVL95:
 736:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2093              		.loc 1 736 40 view .LVU643
 2094              	.L56:
 736:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2095              		.loc 1 736 40 is_stmt 0 view .LVU644
 2096 0c86 4C8B6C24 		mov	r13, QWORD PTR -32[rsp]	# niters.194, %sfp
 2096      E0
GAS LISTING /tmp/ccLUVin9.s 			page 60


 2097 0c8b 488D0C16 		lea	rcx, [rsi+rdx]	# tmp435,
 2098 0c8f 488D1CCF 		lea	rbx, [rdi+rcx*8]	# vectp.199,
 2099 0c93 4901D3   		add	r11, rdx	# tmp438, prolog_loop_niters.193
 2100 0c96 C4C1796E 		vmovd	xmm1, r9d	# _15, _15
 2100      C9
 2101 0c9b 4E8D1CDF 		lea	r11, [rdi+r11*8]	# vectp.203,
 2102 0c9f C5F96E44 		vmovd	xmm0, DWORD PTR -20[rsp]	# _12, %sfp
 2102      24EC
 2103 0ca5 4929D5   		sub	r13, rdx	# niters.194, prolog_loop_niters.193
 2104 0ca8 4D89EE   		mov	r14, r13	# bnd.195, niters.194
 2105 0cab 4C01C2   		add	rdx, r8	# tmp440, copy_word
 2106 0cae 49C1EE02 		shr	r14, 2	# bnd.195,
 2107 0cb2 4C8D24D7 		lea	r12, [rdi+rdx*8]	# vectp.208,
 2108 0cb6 49C1E605 		sal	r14, 5	# bnd.195,
 2109              	# sieve_extend.c:736:         for (register counter_t i = 0; i <loop_distance; i++) {
 736:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2110              		.loc 1 736 33 view .LVU645
 2111 0cba 31D2     		xor	edx, edx	# ivtmp.233
 2112 0cbc 498D4EE0 		lea	rcx, -32[r14]	# tmp578,
 2113 0cc0 48C1E905 		shr	rcx, 5	# tmp576,
 2114 0cc4 4883C101 		add	rcx, 1	# tmp579,
 2115 0cc8 83E107   		and	ecx, 7	# tmp580,
 2116 0ccb 0F840301 		je	.L58	#,
 2116      0000
 2117 0cd1 4883F901 		cmp	rcx, 1	# tmp580,
 2118 0cd5 0F84CE00 		je	.L147	#,
 2118      0000
 2119 0cdb 4883F902 		cmp	rcx, 2	# tmp580,
 2120 0cdf 0F84A200 		je	.L148	#,
 2120      0000
 2121 0ce5 4883F903 		cmp	rcx, 3	# tmp580,
 2122 0ce9 747B     		je	.L149	#,
 2123 0ceb 4883F904 		cmp	rcx, 4	# tmp580,
 2124 0cef 7453     		je	.L150	#,
 2125 0cf1 4883F905 		cmp	rcx, 5	# tmp580,
 2126 0cf5 742C     		je	.L151	#,
 2127 0cf7 4883F906 		cmp	rcx, 6	# tmp580,
 2128 0cfb 0F858F05 		jne	.L209	#,
 2128      0000
 2129              	.L152:
 737:sieve_extend.c ****         }
 2130              		.loc 1 737 13 is_stmt 1 view .LVU646
 2131              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2132              		.loc 1 737 62 is_stmt 0 view .LVU647
 2133 0d01 C57D6F24 		vmovdqa	ymm12, YMMWORD PTR [rbx+rdx]	# tmp959, MEM[base: vectp.199_276, index: ivtmp.233_473, offs
 2133      13
 2134              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2135              		.loc 1 737 109 view .LVU648
 2136 0d06 C4417E6F 		vmovdqu	ymm14, YMMWORD PTR [r11+rdx]	# tmp960, MEM[base: vectp.203_283, index: ivtmp.233_473, offs
 2136      3413
 2137              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2138              		.loc 1 737 62 view .LVU649
 2139 0d0c C51DD3E9 		vpsrlq	ymm13, ymm12, xmm1	# vect__28.201, tmp959, _15
 2140              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
GAS LISTING /tmp/ccLUVin9.s 			page 61


 737:sieve_extend.c ****         }
 2141              		.loc 1 737 109 view .LVU650
 2142 0d10 C50DF3F8 		vpsllq	ymm15, ymm14, xmm0	# vect__33.205, tmp960, _12
 2143              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2144              		.loc 1 737 80 view .LVU651
 2145 0d14 C4C115EB 		vpor	ymm6, ymm13, ymm15	# vect__37.206, vect__28.201, vect__33.205
 2145      F7
 2146              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2147              		.loc 1 737 35 view .LVU652
 2148 0d19 C4C17E7F 		vmovdqu	YMMWORD PTR [r12+rdx], ymm6	# MEM[base: vectp.208_292, index: ivtmp.233_473, offset: 0B], 
 2148      3414
 736:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2149              		.loc 1 736 58 is_stmt 1 view .LVU653
 736:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2150              		.loc 1 736 40 view .LVU654
 2151 0d1f 4883C220 		add	rdx, 32	# ivtmp.233,
 2152              	.L151:
 737:sieve_extend.c ****         }
 2153              		.loc 1 737 13 view .LVU655
 2154              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2155              		.loc 1 737 62 is_stmt 0 view .LVU656
 2156 0d23 C5FD6F14 		vmovdqa	ymm2, YMMWORD PTR [rbx+rdx]	# tmp961, MEM[base: vectp.199_276, index: ivtmp.233_473, offse
 2156      13
 2157              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2158              		.loc 1 737 109 view .LVU657
 2159 0d28 C4C17E6F 		vmovdqu	ymm4, YMMWORD PTR [r11+rdx]	# tmp962, MEM[base: vectp.203_283, index: ivtmp.233_473, offse
 2159      2413
 2160              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2161              		.loc 1 737 62 view .LVU658
 2162 0d2e C5EDD3F9 		vpsrlq	ymm7, ymm2, xmm1	# vect__28.201, tmp961, _15
 2163              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2164              		.loc 1 737 109 view .LVU659
 2165 0d32 C5DDF3E8 		vpsllq	ymm5, ymm4, xmm0	# vect__33.205, tmp962, _12
 2166              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2167              		.loc 1 737 80 view .LVU660
 2168 0d36 C545EBC5 		vpor	ymm8, ymm7, ymm5	# vect__37.206, vect__28.201, vect__33.205
 2169              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2170              		.loc 1 737 35 view .LVU661
 2171 0d3a C4417E7F 		vmovdqu	YMMWORD PTR [r12+rdx], ymm8	# MEM[base: vectp.208_292, index: ivtmp.233_473, offset: 0B], 
 2171      0414
 736:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2172              		.loc 1 736 58 is_stmt 1 view .LVU662
 736:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2173              		.loc 1 736 40 view .LVU663
 2174 0d40 4883C220 		add	rdx, 32	# ivtmp.233,
 2175              	.L150:
 737:sieve_extend.c ****         }
 2176              		.loc 1 737 13 view .LVU664
 2177              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
GAS LISTING /tmp/ccLUVin9.s 			page 62


 737:sieve_extend.c ****         }
 2178              		.loc 1 737 62 is_stmt 0 view .LVU665
 2179 0d44 C57D6F0C 		vmovdqa	ymm9, YMMWORD PTR [rbx+rdx]	# tmp963, MEM[base: vectp.199_276, index: ivtmp.233_473, offse
 2179      13
 2180              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2181              		.loc 1 737 109 view .LVU666
 2182 0d49 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR [r11+rdx]	# tmp964, MEM[base: vectp.203_283, index: ivtmp.233_473, offse
 2182      1C13
 2183              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2184              		.loc 1 737 62 view .LVU667
 2185 0d4f C535D3D1 		vpsrlq	ymm10, ymm9, xmm1	# vect__28.201, tmp963, _15
 2186              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2187              		.loc 1 737 109 view .LVU668
 2188 0d53 C565F3D8 		vpsllq	ymm11, ymm3, xmm0	# vect__33.205, tmp964, _12
 2189              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2190              		.loc 1 737 80 view .LVU669
 2191 0d57 C4412DEB 		vpor	ymm12, ymm10, ymm11	# vect__37.206, vect__28.201, vect__33.205
 2191      E3
 2192              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2193              		.loc 1 737 35 view .LVU670
 2194 0d5c C4417E7F 		vmovdqu	YMMWORD PTR [r12+rdx], ymm12	# MEM[base: vectp.208_292, index: ivtmp.233_473, offset: 0B],
 2194      2414
 736:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2195              		.loc 1 736 58 is_stmt 1 view .LVU671
 736:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2196              		.loc 1 736 40 view .LVU672
 2197 0d62 4883C220 		add	rdx, 32	# ivtmp.233,
 2198              	.L149:
 737:sieve_extend.c ****         }
 2199              		.loc 1 737 13 view .LVU673
 2200              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2201              		.loc 1 737 62 is_stmt 0 view .LVU674
 2202 0d66 C57D6F2C 		vmovdqa	ymm13, YMMWORD PTR [rbx+rdx]	# tmp965, MEM[base: vectp.199_276, index: ivtmp.233_473, offs
 2202      13
 2203              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2204              		.loc 1 737 109 view .LVU675
 2205 0d6b C4417E6F 		vmovdqu	ymm15, YMMWORD PTR [r11+rdx]	# tmp966, MEM[base: vectp.203_283, index: ivtmp.233_473, offs
 2205      3C13
 2206              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2207              		.loc 1 737 62 view .LVU676
 2208 0d71 C515D3F1 		vpsrlq	ymm14, ymm13, xmm1	# vect__28.201, tmp965, _15
 2209              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2210              		.loc 1 737 109 view .LVU677
 2211 0d75 C585F3F0 		vpsllq	ymm6, ymm15, xmm0	# vect__33.205, tmp966, _12
 2212              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2213              		.loc 1 737 80 view .LVU678
 2214 0d79 C58DEBD6 		vpor	ymm2, ymm14, ymm6	# vect__37.206, vect__28.201, vect__33.205
GAS LISTING /tmp/ccLUVin9.s 			page 63


 2215              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2216              		.loc 1 737 35 view .LVU679
 2217 0d7d C4C17E7F 		vmovdqu	YMMWORD PTR [r12+rdx], ymm2	# MEM[base: vectp.208_292, index: ivtmp.233_473, offset: 0B], 
 2217      1414
 736:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2218              		.loc 1 736 58 is_stmt 1 view .LVU680
 736:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2219              		.loc 1 736 40 view .LVU681
 2220 0d83 4883C220 		add	rdx, 32	# ivtmp.233,
 2221              	.L148:
 737:sieve_extend.c ****         }
 2222              		.loc 1 737 13 view .LVU682
 2223              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2224              		.loc 1 737 62 is_stmt 0 view .LVU683
 2225 0d87 C5FD6F3C 		vmovdqa	ymm7, YMMWORD PTR [rbx+rdx]	# tmp967, MEM[base: vectp.199_276, index: ivtmp.233_473, offse
 2225      13
 2226              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2227              		.loc 1 737 109 view .LVU684
 2228 0d8c C4C17E6F 		vmovdqu	ymm5, YMMWORD PTR [r11+rdx]	# tmp968, MEM[base: vectp.203_283, index: ivtmp.233_473, offse
 2228      2C13
 2229              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2230              		.loc 1 737 62 view .LVU685
 2231 0d92 C5C5D3E1 		vpsrlq	ymm4, ymm7, xmm1	# vect__28.201, tmp967, _15
 2232              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2233              		.loc 1 737 109 view .LVU686
 2234 0d96 C555F3C0 		vpsllq	ymm8, ymm5, xmm0	# vect__33.205, tmp968, _12
 2235              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2236              		.loc 1 737 80 view .LVU687
 2237 0d9a C4415DEB 		vpor	ymm9, ymm4, ymm8	# vect__37.206, vect__28.201, vect__33.205
 2237      C8
 2238              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2239              		.loc 1 737 35 view .LVU688
 2240 0d9f C4417E7F 		vmovdqu	YMMWORD PTR [r12+rdx], ymm9	# MEM[base: vectp.208_292, index: ivtmp.233_473, offset: 0B], 
 2240      0C14
 736:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2241              		.loc 1 736 58 is_stmt 1 view .LVU689
 736:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2242              		.loc 1 736 40 view .LVU690
 2243 0da5 4883C220 		add	rdx, 32	# ivtmp.233,
 2244              	.L147:
 737:sieve_extend.c ****         }
 2245              		.loc 1 737 13 view .LVU691
 2246              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2247              		.loc 1 737 62 is_stmt 0 view .LVU692
 2248 0da9 C57D6F14 		vmovdqa	ymm10, YMMWORD PTR [rbx+rdx]	# tmp969, MEM[base: vectp.199_276, index: ivtmp.233_473, offs
 2248      13
 2249              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2250              		.loc 1 737 109 view .LVU693
GAS LISTING /tmp/ccLUVin9.s 			page 64


 2251 0dae C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR [r11+rdx]	# tmp970, MEM[base: vectp.203_283, index: ivtmp.233_473, offse
 2251      1C13
 2252              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2253              		.loc 1 737 62 view .LVU694
 2254 0db4 C52DD3D9 		vpsrlq	ymm11, ymm10, xmm1	# vect__28.201, tmp969, _15
 2255              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2256              		.loc 1 737 109 view .LVU695
 2257 0db8 C565F3E0 		vpsllq	ymm12, ymm3, xmm0	# vect__33.205, tmp970, _12
 2258              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2259              		.loc 1 737 80 view .LVU696
 2260 0dbc C44125EB 		vpor	ymm13, ymm11, ymm12	# vect__37.206, vect__28.201, vect__33.205
 2260      EC
 2261              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2262              		.loc 1 737 35 view .LVU697
 2263 0dc1 C4417E7F 		vmovdqu	YMMWORD PTR [r12+rdx], ymm13	# MEM[base: vectp.208_292, index: ivtmp.233_473, offset: 0B],
 2263      2C14
 736:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2264              		.loc 1 736 58 is_stmt 1 view .LVU698
 736:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2265              		.loc 1 736 40 view .LVU699
 2266 0dc7 4883C220 		add	rdx, 32	# ivtmp.233,
 2267 0dcb 4C39F2   		cmp	rdx, r14	# ivtmp.233, _475
 2268 0dce 0F843601 		je	.L194	#,
 2268      0000
 2269              	.L58:
 737:sieve_extend.c ****         }
 2270              		.loc 1 737 13 discriminator 3 view .LVU700
 2271              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2272              		.loc 1 737 62 is_stmt 0 discriminator 3 view .LVU701
 2273 0dd4 C57D6F34 		vmovdqa	ymm14, YMMWORD PTR [rbx+rdx]	# tmp884, MEM[base: vectp.199_276, index: ivtmp.233_473, offs
 2273      13
 2274              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2275              		.loc 1 737 109 discriminator 3 view .LVU702
 2276 0dd9 C4C17E6F 		vmovdqu	ymm6, YMMWORD PTR [r11+rdx]	# tmp885, MEM[base: vectp.203_283, index: ivtmp.233_473, offse
 2276      3413
 2277              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2278              		.loc 1 737 62 discriminator 3 view .LVU703
 2279 0ddf C50DD3F9 		vpsrlq	ymm15, ymm14, xmm1	# vect__28.201, tmp884, _15
 2280              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2281              		.loc 1 737 109 discriminator 3 view .LVU704
 2282 0de3 C5CDF3D0 		vpsllq	ymm2, ymm6, xmm0	# vect__33.205, tmp885, _12
 2283              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2284              		.loc 1 737 80 discriminator 3 view .LVU705
 2285 0de7 C585EBFA 		vpor	ymm7, ymm15, ymm2	# vect__37.206, vect__28.201, vect__33.205
 2286              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2287              		.loc 1 737 35 discriminator 3 view .LVU706
 2288 0deb C4C17E7F 		vmovdqu	YMMWORD PTR [r12+rdx], ymm7	# MEM[base: vectp.208_292, index: ivtmp.233_473, offset: 0B], 
GAS LISTING /tmp/ccLUVin9.s 			page 65


 2288      3C14
 736:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2289              		.loc 1 736 58 is_stmt 1 discriminator 3 view .LVU707
 736:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2290              		.loc 1 736 40 discriminator 3 view .LVU708
 737:sieve_extend.c ****         }
 2291              		.loc 1 737 13 discriminator 3 view .LVU709
 2292              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2293              		.loc 1 737 62 is_stmt 0 discriminator 3 view .LVU710
 2294 0df1 C5FD6F64 		vmovdqa	ymm4, YMMWORD PTR 32[rbx+rdx]	# tmp886, MEM[base: vectp.199_276, index: ivtmp.233_473, off
 2294      1320
 2295              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2296              		.loc 1 737 109 discriminator 3 view .LVU711
 2297 0df7 C4417E6F 		vmovdqu	ymm8, YMMWORD PTR 32[r11+rdx]	# tmp887, MEM[base: vectp.203_283, index: ivtmp.233_473, off
 2297      441320
 2298              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2299              		.loc 1 737 62 discriminator 3 view .LVU712
 2300 0dfe C5DDD3E9 		vpsrlq	ymm5, ymm4, xmm1	# vect__28.201, tmp886, _15
 2301              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2302              		.loc 1 737 109 discriminator 3 view .LVU713
 2303 0e02 C53DF3C8 		vpsllq	ymm9, ymm8, xmm0	# vect__33.205, tmp887, _12
 2304              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2305              		.loc 1 737 80 discriminator 3 view .LVU714
 2306 0e06 C44155EB 		vpor	ymm10, ymm5, ymm9	# vect__37.206, vect__28.201, vect__33.205
 2306      D1
 2307              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2308              		.loc 1 737 35 discriminator 3 view .LVU715
 2309 0e0b C4417E7F 		vmovdqu	YMMWORD PTR 32[r12+rdx], ymm10	# MEM[base: vectp.208_292, index: ivtmp.233_473, offset: 0B
 2309      541420
 736:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2310              		.loc 1 736 58 is_stmt 1 discriminator 3 view .LVU716
 736:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2311              		.loc 1 736 40 discriminator 3 view .LVU717
 737:sieve_extend.c ****         }
 2312              		.loc 1 737 13 discriminator 3 view .LVU718
 2313              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2314              		.loc 1 737 62 is_stmt 0 discriminator 3 view .LVU719
 2315 0e12 C57D6F5C 		vmovdqa	ymm11, YMMWORD PTR 64[rbx+rdx]	# tmp888, MEM[base: vectp.199_276, index: ivtmp.233_473, of
 2315      1340
 2316              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2317              		.loc 1 737 109 discriminator 3 view .LVU720
 2318 0e18 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR 64[r11+rdx]	# tmp889, MEM[base: vectp.203_283, index: ivtmp.233_473, off
 2318      5C1340
 2319              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2320              		.loc 1 737 62 discriminator 3 view .LVU721
 2321 0e1f C525D3E1 		vpsrlq	ymm12, ymm11, xmm1	# vect__28.201, tmp888, _15
 2322              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
GAS LISTING /tmp/ccLUVin9.s 			page 66


 2323              		.loc 1 737 109 discriminator 3 view .LVU722
 2324 0e23 C565F3E8 		vpsllq	ymm13, ymm3, xmm0	# vect__33.205, tmp889, _12
 2325              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2326              		.loc 1 737 80 discriminator 3 view .LVU723
 2327 0e27 C4411DEB 		vpor	ymm14, ymm12, ymm13	# vect__37.206, vect__28.201, vect__33.205
 2327      F5
 2328              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2329              		.loc 1 737 35 discriminator 3 view .LVU724
 2330 0e2c C4417E7F 		vmovdqu	YMMWORD PTR 64[r12+rdx], ymm14	# MEM[base: vectp.208_292, index: ivtmp.233_473, offset: 0B
 2330      741440
 736:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2331              		.loc 1 736 58 is_stmt 1 discriminator 3 view .LVU725
 736:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2332              		.loc 1 736 40 discriminator 3 view .LVU726
 737:sieve_extend.c ****         }
 2333              		.loc 1 737 13 discriminator 3 view .LVU727
 2334              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2335              		.loc 1 737 62 is_stmt 0 discriminator 3 view .LVU728
 2336 0e33 C57D6F7C 		vmovdqa	ymm15, YMMWORD PTR 96[rbx+rdx]	# tmp890, MEM[base: vectp.199_276, index: ivtmp.233_473, of
 2336      1360
 2337              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2338              		.loc 1 737 109 discriminator 3 view .LVU729
 2339 0e39 C4C17E6F 		vmovdqu	ymm2, YMMWORD PTR 96[r11+rdx]	# tmp891, MEM[base: vectp.203_283, index: ivtmp.233_473, off
 2339      541360
 2340              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2341              		.loc 1 737 62 discriminator 3 view .LVU730
 2342 0e40 C585D3F1 		vpsrlq	ymm6, ymm15, xmm1	# vect__28.201, tmp890, _15
 2343              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2344              		.loc 1 737 109 discriminator 3 view .LVU731
 2345 0e44 C5EDF3F8 		vpsllq	ymm7, ymm2, xmm0	# vect__33.205, tmp891, _12
 2346              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2347              		.loc 1 737 80 discriminator 3 view .LVU732
 2348 0e48 C5CDEBE7 		vpor	ymm4, ymm6, ymm7	# vect__37.206, vect__28.201, vect__33.205
 2349              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2350              		.loc 1 737 35 discriminator 3 view .LVU733
 2351 0e4c C4C17E7F 		vmovdqu	YMMWORD PTR 96[r12+rdx], ymm4	# MEM[base: vectp.208_292, index: ivtmp.233_473, offset: 0B]
 2351      641460
 736:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2352              		.loc 1 736 58 is_stmt 1 discriminator 3 view .LVU734
 736:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2353              		.loc 1 736 40 discriminator 3 view .LVU735
 737:sieve_extend.c ****         }
 2354              		.loc 1 737 13 discriminator 3 view .LVU736
 2355              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2356              		.loc 1 737 62 is_stmt 0 discriminator 3 view .LVU737
 2357 0e53 C5FD6FAC 		vmovdqa	ymm5, YMMWORD PTR 128[rbx+rdx]	# tmp892, MEM[base: vectp.199_276, index: ivtmp.233_473, of
 2357      13800000 
 2357      00
GAS LISTING /tmp/ccLUVin9.s 			page 67


 2358              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2359              		.loc 1 737 109 discriminator 3 view .LVU738
 2360 0e5c C4417E6F 		vmovdqu	ymm9, YMMWORD PTR 128[r11+rdx]	# tmp893, MEM[base: vectp.203_283, index: ivtmp.233_473, of
 2360      8C138000 
 2360      0000
 2361              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2362              		.loc 1 737 62 discriminator 3 view .LVU739
 2363 0e66 C555D3C1 		vpsrlq	ymm8, ymm5, xmm1	# vect__28.201, tmp892, _15
 2364              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2365              		.loc 1 737 109 discriminator 3 view .LVU740
 2366 0e6a C535F3D0 		vpsllq	ymm10, ymm9, xmm0	# vect__33.205, tmp893, _12
 2367              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2368              		.loc 1 737 80 discriminator 3 view .LVU741
 2369 0e6e C4413DEB 		vpor	ymm11, ymm8, ymm10	# vect__37.206, vect__28.201, vect__33.205
 2369      DA
 2370              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2371              		.loc 1 737 35 discriminator 3 view .LVU742
 2372 0e73 C4417E7F 		vmovdqu	YMMWORD PTR 128[r12+rdx], ymm11	# MEM[base: vectp.208_292, index: ivtmp.233_473, offset: 0
 2372      9C148000 
 2372      0000
 736:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2373              		.loc 1 736 58 is_stmt 1 discriminator 3 view .LVU743
 736:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2374              		.loc 1 736 40 discriminator 3 view .LVU744
 737:sieve_extend.c ****         }
 2375              		.loc 1 737 13 discriminator 3 view .LVU745
 2376              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2377              		.loc 1 737 62 is_stmt 0 discriminator 3 view .LVU746
 2378 0e7d C57D6FA4 		vmovdqa	ymm12, YMMWORD PTR 160[rbx+rdx]	# tmp894, MEM[base: vectp.199_276, index: ivtmp.233_473, o
 2378      13A00000 
 2378      00
 2379              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2380              		.loc 1 737 109 discriminator 3 view .LVU747
 2381 0e86 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR 160[r11+rdx]	# tmp895, MEM[base: vectp.203_283, index: ivtmp.233_473, of
 2381      9C13A000 
 2381      0000
 2382              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2383              		.loc 1 737 62 discriminator 3 view .LVU748
 2384 0e90 C51DD3E9 		vpsrlq	ymm13, ymm12, xmm1	# vect__28.201, tmp894, _15
 2385              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2386              		.loc 1 737 109 discriminator 3 view .LVU749
 2387 0e94 C565F3F0 		vpsllq	ymm14, ymm3, xmm0	# vect__33.205, tmp895, _12
 2388              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2389              		.loc 1 737 80 discriminator 3 view .LVU750
 2390 0e98 C44115EB 		vpor	ymm15, ymm13, ymm14	# vect__37.206, vect__28.201, vect__33.205
 2390      FE
 2391              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
GAS LISTING /tmp/ccLUVin9.s 			page 68


 737:sieve_extend.c ****         }
 2392              		.loc 1 737 35 discriminator 3 view .LVU751
 2393 0e9d C4417E7F 		vmovdqu	YMMWORD PTR 160[r12+rdx], ymm15	# MEM[base: vectp.208_292, index: ivtmp.233_473, offset: 0
 2393      BC14A000 
 2393      0000
 736:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2394              		.loc 1 736 58 is_stmt 1 discriminator 3 view .LVU752
 736:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2395              		.loc 1 736 40 discriminator 3 view .LVU753
 737:sieve_extend.c ****         }
 2396              		.loc 1 737 13 discriminator 3 view .LVU754
 2397              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2398              		.loc 1 737 62 is_stmt 0 discriminator 3 view .LVU755
 2399 0ea7 C5FD6FB4 		vmovdqa	ymm6, YMMWORD PTR 192[rbx+rdx]	# tmp896, MEM[base: vectp.199_276, index: ivtmp.233_473, of
 2399      13C00000 
 2399      00
 2400              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2401              		.loc 1 737 109 discriminator 3 view .LVU756
 2402 0eb0 C4C17E6F 		vmovdqu	ymm7, YMMWORD PTR 192[r11+rdx]	# tmp897, MEM[base: vectp.203_283, index: ivtmp.233_473, of
 2402      BC13C000 
 2402      0000
 2403              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2404              		.loc 1 737 62 discriminator 3 view .LVU757
 2405 0eba C5CDD3D1 		vpsrlq	ymm2, ymm6, xmm1	# vect__28.201, tmp896, _15
 2406              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2407              		.loc 1 737 109 discriminator 3 view .LVU758
 2408 0ebe C5C5F3E0 		vpsllq	ymm4, ymm7, xmm0	# vect__33.205, tmp897, _12
 2409              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2410              		.loc 1 737 80 discriminator 3 view .LVU759
 2411 0ec2 C5EDEBEC 		vpor	ymm5, ymm2, ymm4	# vect__37.206, vect__28.201, vect__33.205
 2412              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2413              		.loc 1 737 35 discriminator 3 view .LVU760
 2414 0ec6 C4C17E7F 		vmovdqu	YMMWORD PTR 192[r12+rdx], ymm5	# MEM[base: vectp.208_292, index: ivtmp.233_473, offset: 0B
 2414      AC14C000 
 2414      0000
 736:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2415              		.loc 1 736 58 is_stmt 1 discriminator 3 view .LVU761
 736:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2416              		.loc 1 736 40 discriminator 3 view .LVU762
 737:sieve_extend.c ****         }
 2417              		.loc 1 737 13 discriminator 3 view .LVU763
 2418              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2419              		.loc 1 737 62 is_stmt 0 discriminator 3 view .LVU764
 2420 0ed0 C57D6F84 		vmovdqa	ymm8, YMMWORD PTR 224[rbx+rdx]	# tmp898, MEM[base: vectp.199_276, index: ivtmp.233_473, of
 2420      13E00000 
 2420      00
 2421              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2422              		.loc 1 737 109 discriminator 3 view .LVU765
 2423 0ed9 C4417E6F 		vmovdqu	ymm10, YMMWORD PTR 224[r11+rdx]	# tmp899, MEM[base: vectp.203_283, index: ivtmp.233_473, o
GAS LISTING /tmp/ccLUVin9.s 			page 69


 2423      9413E000 
 2423      0000
 2424              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2425              		.loc 1 737 62 discriminator 3 view .LVU766
 2426 0ee3 C53DD3C9 		vpsrlq	ymm9, ymm8, xmm1	# vect__28.201, tmp898, _15
 2427              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2428              		.loc 1 737 109 discriminator 3 view .LVU767
 2429 0ee7 C52DF3D8 		vpsllq	ymm11, ymm10, xmm0	# vect__33.205, tmp899, _12
 2430              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2431              		.loc 1 737 80 discriminator 3 view .LVU768
 2432 0eeb C44135EB 		vpor	ymm12, ymm9, ymm11	# vect__37.206, vect__28.201, vect__33.205
 2432      E3
 2433              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2434              		.loc 1 737 35 discriminator 3 view .LVU769
 2435 0ef0 C4417E7F 		vmovdqu	YMMWORD PTR 224[r12+rdx], ymm12	# MEM[base: vectp.208_292, index: ivtmp.233_473, offset: 0
 2435      A414E000 
 2435      0000
 736:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2436              		.loc 1 736 58 is_stmt 1 discriminator 3 view .LVU770
 736:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2437              		.loc 1 736 40 discriminator 3 view .LVU771
 2438 0efa 4881C200 		add	rdx, 256	# ivtmp.233,
 2438      010000
 2439 0f01 4C39F2   		cmp	rdx, r14	# ivtmp.233, _475
 2440 0f04 0F85CAFE 		jne	.L58	#,
 2440      FFFF
 2441              	.L194:
 2442 0f0a 4C89EB   		mov	rbx, r13	# niters_vector_mult_vf.196, niters.194
 2443 0f0d 4883E3FC 		and	rbx, -4	# niters_vector_mult_vf.196,
 2444 0f11 4901DF   		add	r15, rbx	# tmp.197, niters_vector_mult_vf.196
 2445 0f14 4939DD   		cmp	r13, rbx	# niters.194, niters_vector_mult_vf.196
 2446 0f17 0F846B03 		je	.L210	#,
 2446      0000
 2447 0f1d C5F877   		vzeroupper
 2448              	.L55:
 2449              	.LVL96:
 737:sieve_extend.c ****         }
 2450              		.loc 1 737 13 view .LVU772
 2451              	# sieve_extend.c:736:         for (register counter_t i = 0; i <loop_distance; i++) {
 736:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2452              		.loc 1 736 9 is_stmt 0 view .LVU773
 2453 0f20 488B5C24 		mov	rbx, QWORD PTR -32[rsp]	# loop_distance, %sfp
 2453      E0
 2454              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2455              		.loc 1 737 58 view .LVU774
 2456 0f25 4E8D2C3E 		lea	r13, [rsi+r15]	# tmp450,
 2457              	# sieve_extend.c:736:         for (register counter_t i = 0; i <loop_distance; i++) {
 736:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2458              		.loc 1 736 59 view .LVU775
 2459 0f29 498D5701 		lea	rdx, 1[r15]	# i,
 2460              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
GAS LISTING /tmp/ccLUVin9.s 			page 70


 2461              		.loc 1 737 109 view .LVU776
 2462 0f2d C422A9F7 		shlx	r14, QWORD PTR 8[rdi+r13*8], r10	# tmp452, *_342, shift
 2462      74EF08
 2463              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2464              		.loc 1 737 62 view .LVU777
 2465 0f34 4E8B1CEF 		mov	r11, QWORD PTR [rdi+r13*8]	# *_337, *_337
 2466              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2467              		.loc 1 737 21 view .LVU778
 2468 0f38 4F8D2438 		lea	r12, [r8+r15]	# tmp451,
 2469              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2470              		.loc 1 737 62 view .LVU779
 2471 0f3c C4C2FBF7 		shrx	rcx, r11, rax	# tmp454, *_337, shift_flipped
 2471      CB
 2472              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2473              		.loc 1 737 80 view .LVU780
 2474 0f41 4909CE   		or	r14, rcx	# tmp456, tmp454
 2475 0f44 4E8934E7 		mov	QWORD PTR [rdi+r12*8], r14	# *_347, tmp456
 736:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2476              		.loc 1 736 58 is_stmt 1 view .LVU781
 2477              	.LVL97:
 736:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2478              		.loc 1 736 40 view .LVU782
 2479              	# sieve_extend.c:736:         for (register counter_t i = 0; i <loop_distance; i++) {
 736:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2480              		.loc 1 736 9 is_stmt 0 view .LVU783
 2481 0f48 4839D3   		cmp	rbx, rdx	# loop_distance, i
 2482 0f4b 0F86BE00 		jbe	.L54	#,
 2482      0000
 737:sieve_extend.c ****         }
 2483              		.loc 1 737 13 is_stmt 1 view .LVU784
 2484              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2485              		.loc 1 737 58 is_stmt 0 view .LVU785
 2486 0f51 4C8D2C16 		lea	r13, [rsi+rdx]	# tmp457,
 2487              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2488              		.loc 1 737 21 view .LVU786
 2489 0f55 4C01C2   		add	rdx, r8	# tmp458, copy_word
 2490              	.LVL98:
 2491              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2492              		.loc 1 737 62 view .LVU787
 2493 0f58 4E8B34EF 		mov	r14, QWORD PTR [rdi+r13*8]	# *_355, *_355
 2494              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2495              		.loc 1 737 109 view .LVU788
 2496 0f5c C422A9F7 		shlx	r12, QWORD PTR 8[rdi+r13*8], r10	# tmp459, *_360, shift
 2496      64EF08
 2497              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2498              		.loc 1 737 62 view .LVU789
 2499 0f63 C442FBF7 		shrx	r11, r14, rax	# tmp461, *_355, shift_flipped
 2499      DE
GAS LISTING /tmp/ccLUVin9.s 			page 71


 2500              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2501              		.loc 1 737 80 view .LVU790
 2502 0f68 4D09DC   		or	r12, r11	# tmp463, tmp461
 2503 0f6b 4C8924D7 		mov	QWORD PTR [rdi+rdx*8], r12	# *_365, tmp463
 736:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2504              		.loc 1 736 58 is_stmt 1 view .LVU791
 2505              	# sieve_extend.c:736:         for (register counter_t i = 0; i <loop_distance; i++) {
 736:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2506              		.loc 1 736 59 is_stmt 0 view .LVU792
 2507 0f6f 498D5702 		lea	rdx, 2[r15]	# i,
 2508              	.LVL99:
 736:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2509              		.loc 1 736 40 is_stmt 1 view .LVU793
 2510              	# sieve_extend.c:736:         for (register counter_t i = 0; i <loop_distance; i++) {
 736:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2511              		.loc 1 736 9 is_stmt 0 view .LVU794
 2512 0f73 4839D3   		cmp	rbx, rdx	# loop_distance, i
 2513 0f76 0F869300 		jbe	.L54	#,
 2513      0000
 737:sieve_extend.c ****         }
 2514              		.loc 1 737 13 is_stmt 1 view .LVU795
 2515              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2516              		.loc 1 737 58 is_stmt 0 view .LVU796
 2517 0f7c 4C8D2C16 		lea	r13, [rsi+rdx]	# tmp464,
 2518              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2519              		.loc 1 737 21 view .LVU797
 2520 0f80 4C01C2   		add	rdx, r8	# tmp465, copy_word
 2521              	.LVL100:
 2522              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2523              		.loc 1 737 62 view .LVU798
 2524 0f83 4E8B24EF 		mov	r12, QWORD PTR [rdi+r13*8]	# *_373, *_373
 2525              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2526              		.loc 1 737 109 view .LVU799
 2527 0f87 C4A2A9F7 		shlx	rcx, QWORD PTR 8[rdi+r13*8], r10	# tmp466, *_378, shift
 2527      4CEF08
 2528              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2529              		.loc 1 737 62 view .LVU800
 2530 0f8e C442FBF7 		shrx	r14, r12, rax	# tmp468, *_373, shift_flipped
 2530      F4
 2531              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2532              		.loc 1 737 80 view .LVU801
 2533 0f93 4C09F1   		or	rcx, r14	# tmp470, tmp468
 2534 0f96 48890CD7 		mov	QWORD PTR [rdi+rdx*8], rcx	# *_383, tmp470
 736:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2535              		.loc 1 736 58 is_stmt 1 view .LVU802
 2536              	# sieve_extend.c:736:         for (register counter_t i = 0; i <loop_distance; i++) {
 736:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2537              		.loc 1 736 59 is_stmt 0 view .LVU803
 2538 0f9a 498D5703 		lea	rdx, 3[r15]	# i,
 2539              	.LVL101:
GAS LISTING /tmp/ccLUVin9.s 			page 72


 736:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2540              		.loc 1 736 40 is_stmt 1 view .LVU804
 2541              	# sieve_extend.c:736:         for (register counter_t i = 0; i <loop_distance; i++) {
 736:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2542              		.loc 1 736 9 is_stmt 0 view .LVU805
 2543 0f9e 4839D3   		cmp	rbx, rdx	# loop_distance, i
 2544 0fa1 766C     		jbe	.L54	#,
 737:sieve_extend.c ****         }
 2545              		.loc 1 737 13 is_stmt 1 view .LVU806
 2546              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2547              		.loc 1 737 58 is_stmt 0 view .LVU807
 2548 0fa3 4C8D1C16 		lea	r11, [rsi+rdx]	# tmp471,
 2549              	# sieve_extend.c:736:         for (register counter_t i = 0; i <loop_distance; i++) {
 736:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2550              		.loc 1 736 59 view .LVU808
 2551 0fa7 4D8D7704 		lea	r14, 4[r15]	# i,
 2552              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2553              		.loc 1 737 62 view .LVU809
 2554 0fab 4A8B0CDF 		mov	rcx, QWORD PTR [rdi+r11*8]	# *_391, *_391
 2555              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2556              		.loc 1 737 21 view .LVU810
 2557 0faf 4C01C2   		add	rdx, r8	# tmp472, copy_word
 2558              	.LVL102:
 2559              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2560              		.loc 1 737 109 view .LVU811
 2561 0fb2 C422A9F7 		shlx	r13, QWORD PTR 8[rdi+r11*8], r10	# tmp473, *_396, shift
 2561      6CDF08
 2562              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2563              		.loc 1 737 62 view .LVU812
 2564 0fb9 C462FBF7 		shrx	r12, rcx, rax	# tmp475, *_391, shift_flipped
 2564      E1
 2565              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2566              		.loc 1 737 80 view .LVU813
 2567 0fbe 4D09E5   		or	r13, r12	# tmp477, tmp475
 2568              	# sieve_extend.c:736:         for (register counter_t i = 0; i <loop_distance; i++) {
 736:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2569              		.loc 1 736 9 view .LVU814
 2570 0fc1 4C39F3   		cmp	rbx, r14	# loop_distance, i
 2571              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2572              		.loc 1 737 80 view .LVU815
 2573 0fc4 4C892CD7 		mov	QWORD PTR [rdi+rdx*8], r13	# *_401, tmp477
 736:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2574              		.loc 1 736 58 is_stmt 1 view .LVU816
 2575              	.LVL103:
 736:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2576              		.loc 1 736 40 view .LVU817
 2577              	# sieve_extend.c:736:         for (register counter_t i = 0; i <loop_distance; i++) {
 736:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2578              		.loc 1 736 9 is_stmt 0 view .LVU818
 2579 0fc8 7645     		jbe	.L54	#,
GAS LISTING /tmp/ccLUVin9.s 			page 73


 737:sieve_extend.c ****         }
 2580              		.loc 1 737 13 is_stmt 1 view .LVU819
 2581              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2582              		.loc 1 737 58 is_stmt 0 view .LVU820
 2583 0fca 4A8D1436 		lea	rdx, [rsi+r14]	# tmp478,
 2584              	# sieve_extend.c:736:         for (register counter_t i = 0; i <loop_distance; i++) {
 736:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2585              		.loc 1 736 59 view .LVU821
 2586 0fce 4983C705 		add	r15, 5	# i,
 2587              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2588              		.loc 1 737 62 view .LVU822
 2589 0fd2 4C8B1CD7 		mov	r11, QWORD PTR [rdi+rdx*8]	# *_409, *_409
 2590              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2591              		.loc 1 737 21 view .LVU823
 2592 0fd6 4D01C6   		add	r14, r8	# tmp479, copy_word
 2593              	.LVL104:
 2594              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2595              		.loc 1 737 109 view .LVU824
 2596 0fd9 C462A9F7 		shlx	r13, QWORD PTR 8[rdi+rdx*8], r10	# tmp480, *_414, shift
 2596      6CD708
 2597              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2598              		.loc 1 737 62 view .LVU825
 2599 0fe0 C4C2FBF7 		shrx	rcx, r11, rax	# tmp482, *_409, shift_flipped
 2599      CB
 2600              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2601              		.loc 1 737 80 view .LVU826
 2602 0fe5 4909CD   		or	r13, rcx	# tmp484, tmp482
 2603              	# sieve_extend.c:736:         for (register counter_t i = 0; i <loop_distance; i++) {
 736:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2604              		.loc 1 736 9 view .LVU827
 2605 0fe8 4C39FB   		cmp	rbx, r15	# loop_distance, i
 2606              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2607              		.loc 1 737 80 view .LVU828
 2608 0feb 4E892CF7 		mov	QWORD PTR [rdi+r14*8], r13	# *_419, tmp484
 736:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2609              		.loc 1 736 58 is_stmt 1 view .LVU829
 2610              	.LVL105:
 736:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2611              		.loc 1 736 40 view .LVU830
 2612              	# sieve_extend.c:736:         for (register counter_t i = 0; i <loop_distance; i++) {
 736:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2613              		.loc 1 736 9 is_stmt 0 view .LVU831
 2614 0fef 761E     		jbe	.L54	#,
 737:sieve_extend.c ****         }
 2615              		.loc 1 737 13 is_stmt 1 view .LVU832
 2616              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2617              		.loc 1 737 58 is_stmt 0 view .LVU833
 2618 0ff1 4A8D1C3E 		lea	rbx, [rsi+r15]	# tmp485,
 2619              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
GAS LISTING /tmp/ccLUVin9.s 			page 74


 737:sieve_extend.c ****         }
 2620              		.loc 1 737 21 view .LVU834
 2621 0ff5 4D01C7   		add	r15, r8	# tmp486, copy_word
 2622              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2623              		.loc 1 737 109 view .LVU835
 2624 0ff8 C462A9F7 		shlx	r8, QWORD PTR 8[rdi+rbx*8], r10	# tmp487, *_257, shift
 2624      44DF08
 2625              	.LVL106:
 2626              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2627              		.loc 1 737 62 view .LVU836
 2628 0fff 4C8B14DF 		mov	r10, QWORD PTR [rdi+rbx*8]	# *_252, *_252
 2629              	.LVL107:
 737:sieve_extend.c ****         }
 2630              		.loc 1 737 62 view .LVU837
 2631 1003 C4C2FBF7 		shrx	rax, r10, rax	# tmp489, *_252, shift_flipped
 2631      C2
 2632              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 2633              		.loc 1 737 80 view .LVU838
 2634 1008 4C09C0   		or	rax, r8	# tmp491, tmp487
 2635 100b 4A8904FF 		mov	QWORD PTR [rdi+r15*8], rax	# *_262, tmp491
 736:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2636              		.loc 1 736 58 is_stmt 1 view .LVU839
 736:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2637              		.loc 1 736 40 view .LVU840
 2638              	.L54:
 736:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2639              		.loc 1 736 40 is_stmt 0 view .LVU841
 2640              	.LBE316:
 739:sieve_extend.c ****     }
 2641              		.loc 1 739 9 is_stmt 1 view .LVU842
 2642              	.LVL108:
 739:sieve_extend.c ****     }
 2643              		.loc 1 739 39 view .LVU843
 739:sieve_extend.c ****     }
 2644              		.loc 1 739 39 is_stmt 0 view .LVU844
 2645              	.LBE315:
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2646              		.loc 1 742 12 is_stmt 1 view .LVU845
 2647 100f 4C8B6424 		mov	r12, QWORD PTR -32[rsp]	# loop_distance, %sfp
 2647      E0
 2648 1014 4C8B4424 		mov	r8, QWORD PTR -8[rsp]	# destination_stop_word, %sfp
 2648      F8
 2649              	.LBB319:
 2650              	# sieve_extend.c:739:         source_word += loop_distance; copy_word+= loop_distance;
 739:sieve_extend.c ****     }
 2651              		.loc 1 739 21 is_stmt 0 view .LVU846
 2652 1019 48C74424 		mov	QWORD PTR -32[rsp], 0	# %sfp,
 2652      E0000000 
 2652      00
 2653              	.LVL109:
 739:sieve_extend.c ****     }
 2654              		.loc 1 739 21 view .LVU847
 2655 1022 4A8D7426 		lea	rsi, 5[rsi+r12]	# tmp493,
 2655      05
GAS LISTING /tmp/ccLUVin9.s 			page 75


 2656              	.LVL110:
 739:sieve_extend.c ****     }
 2657              		.loc 1 739 21 view .LVU848
 2658 1027 4D8D7801 		lea	r15, 1[r8]	# _158,
 2659 102b 488D14F5 		lea	rdx, -40[0+rsi*8]	# _296,
 2659      D8FFFFFF 
 2660 1033 4C897C24 		mov	QWORD PTR -16[rsp], r15	# %sfp, _158
 2660      F0
 2661              	.LVL111:
 2662              	.L60:
 739:sieve_extend.c ****     }
 2663              		.loc 1 739 21 view .LVU849
 2664 1038 4C8B7424 		mov	r14, QWORD PTR -8[rsp]	# destination_stop_word, %sfp
 2664      F8
 2665 103d 4801FA   		add	rdx, rdi	# ivtmp.215, bitarray
 2666              	.LBE319:
 2667              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 743:sieve_extend.c ****     }
 2668              		.loc 1 743 99 view .LVU850
 2669 1040 440FB65C 		movzx	r11d, BYTE PTR -20[rsp]	# tmp943, %sfp
 2669      24EC
 2670 1046 C4E2A1F7 		shlx	rbx, QWORD PTR 8[rdx], r11	# tmp557, MEM[base: _468, offset: 8B], tmp943
 2670      5A08
 2671              	# sieve_extend.c:742:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2672              		.loc 1 742 57 view .LVU851
 2673 104c 4D8D5801 		lea	r11, 1[r8]	# copy_word,
 2674              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 743:sieve_extend.c ****     }
 2675              		.loc 1 743 54 view .LVU852
 2676 1050 C4E2B3F7 		shrx	rcx, QWORD PTR [rdx], r9	# tmp559, MEM[base: _468, offset: 0B], _15
 2676      0A
 2677 1055 4D89F5   		mov	r13, r14	# tmp572, destination_stop_word
 2678              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 743:sieve_extend.c ****     }
 2679              		.loc 1 743 72 view .LVU853
 2680 1058 4809CB   		or	rbx, rcx	# tmp561, tmp559
 2681 105b 4A891CC7 		mov	QWORD PTR [rdi+r8*8], rbx	# MEM[base: bitarray_69(D), index: copy_word_133, step: 8, offset: 0
 2682 105f 4D29C5   		sub	r13, r8	# tmp572, copy_word
 2683 1062 4183E507 		and	r13d, 7	# tmp573,
 2684              	.LVL112:
 743:sieve_extend.c ****     }
 2685              		.loc 1 743 9 is_stmt 1 view .LVU854
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2686              		.loc 1 742 48 view .LVU855
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2687              		.loc 1 742 12 view .LVU856
 2688              	# sieve_extend.c:742:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2689              		.loc 1 742 5 is_stmt 0 view .LVU857
 2690 1066 4D39DE   		cmp	r14, r11	# destination_stop_word, copy_word
 2691 1069 488D5A08 		lea	rbx, 8[rdx]	# ivtmp.215,
 2692 106d 0F8220FB 		jb	.L67	#,
 2692      FFFF
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2693              		.loc 1 742 5 view .LVU858
 2694 1073 4D85ED   		test	r13, r13	# tmp573
GAS LISTING /tmp/ccLUVin9.s 			page 76


 2695 1076 0F841C01 		je	.L199	#,
 2695      0000
 2696 107c 4983FD01 		cmp	r13, 1	# tmp573,
 2697 1080 0F84E700 		je	.L160	#,
 2697      0000
 2698 1086 4983FD02 		cmp	r13, 2	# tmp573,
 2699 108a 0F84BD00 		je	.L161	#,
 2699      0000
 2700 1090 4983FD03 		cmp	r13, 3	# tmp573,
 2701 1094 0F849400 		je	.L162	#,
 2701      0000
 2702 109a 4983FD04 		cmp	r13, 4	# tmp573,
 2703 109e 746E     		je	.L163	#,
 2704 10a0 4983FD05 		cmp	r13, 5	# tmp573,
 2705 10a4 7448     		je	.L164	#,
 2706 10a6 4983FD06 		cmp	r13, 6	# tmp573,
 2707 10aa 7423     		je	.L165	#,
 743:sieve_extend.c ****     }
 2708              		.loc 1 743 9 is_stmt 1 view .LVU859
 2709              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 743:sieve_extend.c ****     }
 2710              		.loc 1 743 54 is_stmt 0 view .LVU860
 2711 10ac 488B03   		mov	rax, QWORD PTR [rbx]	# MEM[base: _468, offset: 0B], MEM[base: _468, offset: 0B]
 2712 10af C4E2B3F7 		shrx	rsi, rax, r9	# tmp735, MEM[base: _468, offset: 0B], _15
 2712      F0
 2713              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 743:sieve_extend.c ****     }
 2714              		.loc 1 743 99 view .LVU861
 2715 10b4 440FB654 		movzx	r10d, BYTE PTR -20[rsp]	# tmp949, %sfp
 2715      24EC
 2716 10ba C462A9F7 		shlx	r12, QWORD PTR 8[rbx], r10	# tmp733, MEM[base: _468, offset: 8B], tmp949
 2716      6308
 2717              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 743:sieve_extend.c ****     }
 2718              		.loc 1 743 72 view .LVU862
 2719 10c0 4C09E6   		or	rsi, r12	# tmp736, tmp733
 2720 10c3 488D5A10 		lea	rbx, 16[rdx]	# ivtmp.215,
 2721 10c7 4A8934DF 		mov	QWORD PTR [rdi+r11*8], rsi	# MEM[base: bitarray_69(D), index: copy_word_133, step: 8, offset: 
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2722              		.loc 1 742 48 is_stmt 1 view .LVU863
 2723              	# sieve_extend.c:742:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2724              		.loc 1 742 57 is_stmt 0 view .LVU864
 2725 10cb 4D8D5802 		lea	r11, 2[r8]	# copy_word,
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2726              		.loc 1 742 12 is_stmt 1 view .LVU865
 2727              	.L165:
 743:sieve_extend.c ****     }
 2728              		.loc 1 743 9 view .LVU866
 2729              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 743:sieve_extend.c ****     }
 2730              		.loc 1 743 54 is_stmt 0 view .LVU867
 2731 10cf C462B3F7 		shrx	r14, QWORD PTR [rbx], r9	# tmp740, MEM[base: _468, offset: 0B], _15
 2731      33
 2732              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 743:sieve_extend.c ****     }
 2733              		.loc 1 743 99 view .LVU868
GAS LISTING /tmp/ccLUVin9.s 			page 77


 2734 10d4 0FB65424 		movzx	edx, BYTE PTR -20[rsp]	# tmp950, %sfp
 2734      EC
 2735 10d9 C462E9F7 		shlx	r8, QWORD PTR 8[rbx], rdx	# tmp738, MEM[base: _468, offset: 8B], tmp950
 2735      4308
 2736              	.LVL113:
 2737              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 743:sieve_extend.c ****     }
 2738              		.loc 1 743 72 view .LVU869
 2739 10df 4D09F0   		or	r8, r14	# tmp741, tmp740
 2740 10e2 4E8904DF 		mov	QWORD PTR [rdi+r11*8], r8	# MEM[base: bitarray_69(D), index: copy_word_133, step: 8, offset: 0
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2741              		.loc 1 742 48 is_stmt 1 view .LVU870
 2742 10e6 4883C308 		add	rbx, 8	# ivtmp.215,
 2743              	# sieve_extend.c:742:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2744              		.loc 1 742 57 is_stmt 0 view .LVU871
 2745 10ea 4983C301 		add	r11, 1	# copy_word,
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2746              		.loc 1 742 12 is_stmt 1 view .LVU872
 2747              	.L164:
 743:sieve_extend.c ****     }
 2748              		.loc 1 743 9 view .LVU873
 2749              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 743:sieve_extend.c ****     }
 2750              		.loc 1 743 54 is_stmt 0 view .LVU874
 2751 10ee C462B3F7 		shrx	r10, QWORD PTR [rbx], r9	# tmp745, MEM[base: _468, offset: 0B], _15
 2751      13
 2752              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 743:sieve_extend.c ****     }
 2753              		.loc 1 743 99 view .LVU875
 2754 10f3 440FB66C 		movzx	r13d, BYTE PTR -20[rsp]	# tmp951, %sfp
 2754      24EC
 2755 10f9 C4E291F7 		shlx	rcx, QWORD PTR 8[rbx], r13	# tmp743, MEM[base: _468, offset: 8B], tmp951
 2755      4B08
 2756              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 743:sieve_extend.c ****     }
 2757              		.loc 1 743 72 view .LVU876
 2758 10ff 4C09D1   		or	rcx, r10	# tmp746, tmp745
 2759 1102 4A890CDF 		mov	QWORD PTR [rdi+r11*8], rcx	# MEM[base: bitarray_69(D), index: copy_word_133, step: 8, offset: 
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2760              		.loc 1 742 48 is_stmt 1 view .LVU877
 2761 1106 4883C308 		add	rbx, 8	# ivtmp.215,
 2762              	# sieve_extend.c:742:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2763              		.loc 1 742 57 is_stmt 0 view .LVU878
 2764 110a 4983C301 		add	r11, 1	# copy_word,
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2765              		.loc 1 742 12 is_stmt 1 view .LVU879
 2766              	.L163:
 743:sieve_extend.c ****     }
 2767              		.loc 1 743 9 view .LVU880
 2768              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 743:sieve_extend.c ****     }
 2769              		.loc 1 743 54 is_stmt 0 view .LVU881
 2770 110e C4E2B3F7 		shrx	rsi, QWORD PTR [rbx], r9	# tmp750, MEM[base: _468, offset: 0B], _15
 2770      33
 2771              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
GAS LISTING /tmp/ccLUVin9.s 			page 78


 743:sieve_extend.c ****     }
 2772              		.loc 1 743 99 view .LVU882
 2773 1113 440FB664 		movzx	r12d, BYTE PTR -20[rsp]	# tmp952, %sfp
 2773      24EC
 2774 1119 C4E299F7 		shlx	rax, QWORD PTR 8[rbx], r12	# tmp748, MEM[base: _468, offset: 8B], tmp952
 2774      4308
 2775              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 743:sieve_extend.c ****     }
 2776              		.loc 1 743 72 view .LVU883
 2777 111f 4809F0   		or	rax, rsi	# tmp751, tmp750
 2778 1122 4A8904DF 		mov	QWORD PTR [rdi+r11*8], rax	# MEM[base: bitarray_69(D), index: copy_word_133, step: 8, offset: 
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2779              		.loc 1 742 48 is_stmt 1 view .LVU884
 2780 1126 4883C308 		add	rbx, 8	# ivtmp.215,
 2781              	# sieve_extend.c:742:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2782              		.loc 1 742 57 is_stmt 0 view .LVU885
 2783 112a 4983C301 		add	r11, 1	# copy_word,
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2784              		.loc 1 742 12 is_stmt 1 view .LVU886
 2785              	.L162:
 743:sieve_extend.c ****     }
 2786              		.loc 1 743 9 view .LVU887
 2787              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 743:sieve_extend.c ****     }
 2788              		.loc 1 743 54 is_stmt 0 view .LVU888
 2789 112e C462B3F7 		shrx	r14, QWORD PTR [rbx], r9	# tmp755, MEM[base: _468, offset: 0B], _15
 2789      33
 2790              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 743:sieve_extend.c ****     }
 2791              		.loc 1 743 99 view .LVU889
 2792 1133 0FB65424 		movzx	edx, BYTE PTR -20[rsp]	# tmp953, %sfp
 2792      EC
 2793 1138 C462E9F7 		shlx	r8, QWORD PTR 8[rbx], rdx	# tmp753, MEM[base: _468, offset: 8B], tmp953
 2793      4308
 2794              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 743:sieve_extend.c ****     }
 2795              		.loc 1 743 72 view .LVU890
 2796 113e 4D09F0   		or	r8, r14	# tmp756, tmp755
 2797 1141 4E8904DF 		mov	QWORD PTR [rdi+r11*8], r8	# MEM[base: bitarray_69(D), index: copy_word_133, step: 8, offset: 0
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2798              		.loc 1 742 48 is_stmt 1 view .LVU891
 2799 1145 4883C308 		add	rbx, 8	# ivtmp.215,
 2800              	# sieve_extend.c:742:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2801              		.loc 1 742 57 is_stmt 0 view .LVU892
 2802 1149 4983C301 		add	r11, 1	# copy_word,
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2803              		.loc 1 742 12 is_stmt 1 view .LVU893
 2804              	.L161:
 743:sieve_extend.c ****     }
 2805              		.loc 1 743 9 view .LVU894
 2806              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 743:sieve_extend.c ****     }
 2807              		.loc 1 743 54 is_stmt 0 view .LVU895
 2808 114d C462B3F7 		shrx	r10, QWORD PTR [rbx], r9	# tmp760, MEM[base: _468, offset: 0B], _15
 2808      13
GAS LISTING /tmp/ccLUVin9.s 			page 79


 2809              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 743:sieve_extend.c ****     }
 2810              		.loc 1 743 99 view .LVU896
 2811 1152 440FB66C 		movzx	r13d, BYTE PTR -20[rsp]	# tmp954, %sfp
 2811      24EC
 2812 1158 C4E291F7 		shlx	rcx, QWORD PTR 8[rbx], r13	# tmp758, MEM[base: _468, offset: 8B], tmp954
 2812      4B08
 2813              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 743:sieve_extend.c ****     }
 2814              		.loc 1 743 72 view .LVU897
 2815 115e 4C09D1   		or	rcx, r10	# tmp761, tmp760
 2816 1161 4A890CDF 		mov	QWORD PTR [rdi+r11*8], rcx	# MEM[base: bitarray_69(D), index: copy_word_133, step: 8, offset: 
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2817              		.loc 1 742 48 is_stmt 1 view .LVU898
 2818 1165 4883C308 		add	rbx, 8	# ivtmp.215,
 2819              	# sieve_extend.c:742:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2820              		.loc 1 742 57 is_stmt 0 view .LVU899
 2821 1169 4983C301 		add	r11, 1	# copy_word,
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2822              		.loc 1 742 12 is_stmt 1 view .LVU900
 2823              	.L160:
 743:sieve_extend.c ****     }
 2824              		.loc 1 743 9 view .LVU901
 2825              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 743:sieve_extend.c ****     }
 2826              		.loc 1 743 54 is_stmt 0 view .LVU902
 2827 116d C4E2B3F7 		shrx	rsi, QWORD PTR [rbx], r9	# tmp765, MEM[base: _468, offset: 0B], _15
 2827      33
 2828              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 743:sieve_extend.c ****     }
 2829              		.loc 1 743 99 view .LVU903
 2830 1172 440FB664 		movzx	r12d, BYTE PTR -20[rsp]	# tmp955, %sfp
 2830      24EC
 2831 1178 C4E299F7 		shlx	rax, QWORD PTR 8[rbx], r12	# tmp763, MEM[base: _468, offset: 8B], tmp955
 2831      4308
 2832              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 743:sieve_extend.c ****     }
 2833              		.loc 1 743 72 view .LVU904
 2834 117e 4809F0   		or	rax, rsi	# tmp766, tmp765
 2835 1181 4A8904DF 		mov	QWORD PTR [rdi+r11*8], rax	# MEM[base: bitarray_69(D), index: copy_word_133, step: 8, offset: 
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2836              		.loc 1 742 48 is_stmt 1 view .LVU905
 2837              	# sieve_extend.c:742:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2838              		.loc 1 742 57 is_stmt 0 view .LVU906
 2839 1185 4983C301 		add	r11, 1	# copy_word,
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2840              		.loc 1 742 12 is_stmt 1 view .LVU907
 2841 1189 4883C308 		add	rbx, 8	# ivtmp.215,
 2842              	# sieve_extend.c:742:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2843              		.loc 1 742 5 is_stmt 0 view .LVU908
 2844 118d 4C395C24 		cmp	QWORD PTR -8[rsp], r11	# %sfp, copy_word
 2844      F8
 2845 1192 0F82FBF9 		jb	.L67	#,
 2845      FFFF
GAS LISTING /tmp/ccLUVin9.s 			page 80


 2846              	.L199:
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2847              		.loc 1 742 5 view .LVU909
 2848 1198 8B5424EC 		mov	edx, DWORD PTR -20[rsp]	# _12, %sfp
 2849              	.L66:
 743:sieve_extend.c ****     }
 2850              		.loc 1 743 9 is_stmt 1 view .LVU910
 2851              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 743:sieve_extend.c ****     }
 2852              		.loc 1 743 54 is_stmt 0 view .LVU911
 2853 119c C462B3F7 		shrx	r8, QWORD PTR [rbx], r9	# tmp681, MEM[base: _468, offset: 0B], _15
 2853      03
 2854              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 743:sieve_extend.c ****     }
 2855              		.loc 1 743 99 view .LVU912
 2856 11a1 C462E9F7 		shlx	r14, QWORD PTR 8[rbx], rdx	# tmp679, MEM[base: _468, offset: 8B], _12
 2856      7308
 2857              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 743:sieve_extend.c ****     }
 2858              		.loc 1 743 72 view .LVU913
 2859 11a7 4D09C6   		or	r14, r8	# tmp682, tmp681
 2860 11aa 4883C340 		add	rbx, 64	# ivtmp.215,
 2861 11ae 4E8934DF 		mov	QWORD PTR [rdi+r11*8], r14	# MEM[base: bitarray_69(D), index: copy_word_133, step: 8, offset: 
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2862              		.loc 1 742 48 is_stmt 1 view .LVU914
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2863              		.loc 1 742 12 view .LVU915
 743:sieve_extend.c ****     }
 2864              		.loc 1 743 9 view .LVU916
 2865              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 743:sieve_extend.c ****     }
 2866              		.loc 1 743 54 is_stmt 0 view .LVU917
 2867 11b2 C4E2B3F7 		shrx	rcx, QWORD PTR -56[rbx], r9	# tmp688, MEM[base: _468, offset: 0B], _15
 2867      4BC8
 2868              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 743:sieve_extend.c ****     }
 2869              		.loc 1 743 99 view .LVU918
 2870 11b8 C462E9F7 		shlx	r13, QWORD PTR -48[rbx], rdx	# tmp686, MEM[base: _468, offset: 8B], _12
 2870      6BD0
 2871              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 743:sieve_extend.c ****     }
 2872              		.loc 1 743 72 view .LVU919
 2873 11be 4909CD   		or	r13, rcx	# tmp689, tmp688
 2874 11c1 4E896CDF 		mov	QWORD PTR 8[rdi+r11*8], r13	# MEM[base: bitarray_69(D), index: copy_word_133, step: 8, offset:
 2874      08
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2875              		.loc 1 742 48 is_stmt 1 view .LVU920
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2876              		.loc 1 742 12 view .LVU921
 743:sieve_extend.c ****     }
 2877              		.loc 1 743 9 view .LVU922
 2878              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 743:sieve_extend.c ****     }
 2879              		.loc 1 743 54 is_stmt 0 view .LVU923
 2880 11c6 C462B3F7 		shrx	r12, QWORD PTR -48[rbx], r9	# tmp695, MEM[base: _468, offset: 0B], _15
 2880      63D0
 2881              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
GAS LISTING /tmp/ccLUVin9.s 			page 81


 743:sieve_extend.c ****     }
 2882              		.loc 1 743 99 view .LVU924
 2883 11cc C462E9F7 		shlx	r10, QWORD PTR -40[rbx], rdx	# tmp693, MEM[base: _468, offset: 8B], _12
 2883      53D8
 2884              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 743:sieve_extend.c ****     }
 2885              		.loc 1 743 72 view .LVU925
 2886 11d2 4D09E2   		or	r10, r12	# tmp696, tmp695
 2887 11d5 4E8954DF 		mov	QWORD PTR 16[rdi+r11*8], r10	# MEM[base: bitarray_69(D), index: copy_word_133, step: 8, offset
 2887      10
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2888              		.loc 1 742 48 is_stmt 1 view .LVU926
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2889              		.loc 1 742 12 view .LVU927
 743:sieve_extend.c ****     }
 2890              		.loc 1 743 9 view .LVU928
 2891              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 743:sieve_extend.c ****     }
 2892              		.loc 1 743 54 is_stmt 0 view .LVU929
 2893 11da C4E2B3F7 		shrx	rsi, QWORD PTR -40[rbx], r9	# tmp702, MEM[base: _468, offset: 0B], _15
 2893      73D8
 2894              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 743:sieve_extend.c ****     }
 2895              		.loc 1 743 99 view .LVU930
 2896 11e0 C4E2E9F7 		shlx	rax, QWORD PTR -32[rbx], rdx	# tmp700, MEM[base: _468, offset: 8B], _12
 2896      43E0
 2897              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 743:sieve_extend.c ****     }
 2898              		.loc 1 743 72 view .LVU931
 2899 11e6 4809F0   		or	rax, rsi	# tmp703, tmp702
 2900 11e9 4A8944DF 		mov	QWORD PTR 24[rdi+r11*8], rax	# MEM[base: bitarray_69(D), index: copy_word_133, step: 8, offset
 2900      18
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2901              		.loc 1 742 48 is_stmt 1 view .LVU932
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2902              		.loc 1 742 12 view .LVU933
 743:sieve_extend.c ****     }
 2903              		.loc 1 743 9 view .LVU934
 2904              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 743:sieve_extend.c ****     }
 2905              		.loc 1 743 99 is_stmt 0 view .LVU935
 2906 11ee C462E9F7 		shlx	r14, QWORD PTR -24[rbx], rdx	# tmp707, MEM[base: _468, offset: 8B], _12
 2906      73E8
 2907              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 743:sieve_extend.c ****     }
 2908              		.loc 1 743 54 view .LVU936
 2909 11f4 C462B3F7 		shrx	r8, QWORD PTR -32[rbx], r9	# tmp709, MEM[base: _468, offset: 0B], _15
 2909      43E0
 2910              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 743:sieve_extend.c ****     }
 2911              		.loc 1 743 72 view .LVU937
 2912 11fa 4D09C6   		or	r14, r8	# tmp710, tmp709
 2913 11fd 4E8974DF 		mov	QWORD PTR 32[rdi+r11*8], r14	# MEM[base: bitarray_69(D), index: copy_word_133, step: 8, offset
 2913      20
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2914              		.loc 1 742 48 is_stmt 1 view .LVU938
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
GAS LISTING /tmp/ccLUVin9.s 			page 82


 2915              		.loc 1 742 12 view .LVU939
 743:sieve_extend.c ****     }
 2916              		.loc 1 743 9 view .LVU940
 2917              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 743:sieve_extend.c ****     }
 2918              		.loc 1 743 99 is_stmt 0 view .LVU941
 2919 1202 C462E9F7 		shlx	r13, QWORD PTR -16[rbx], rdx	# tmp714, MEM[base: _468, offset: 8B], _12
 2919      6BF0
 2920              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 743:sieve_extend.c ****     }
 2921              		.loc 1 743 54 view .LVU942
 2922 1208 C4E2B3F7 		shrx	rcx, QWORD PTR -24[rbx], r9	# tmp716, MEM[base: _468, offset: 0B], _15
 2922      4BE8
 2923              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 743:sieve_extend.c ****     }
 2924              		.loc 1 743 72 view .LVU943
 2925 120e 4909CD   		or	r13, rcx	# tmp717, tmp716
 2926 1211 4E896CDF 		mov	QWORD PTR 40[rdi+r11*8], r13	# MEM[base: bitarray_69(D), index: copy_word_133, step: 8, offset
 2926      28
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2927              		.loc 1 742 48 is_stmt 1 view .LVU944
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2928              		.loc 1 742 12 view .LVU945
 743:sieve_extend.c ****     }
 2929              		.loc 1 743 9 view .LVU946
 2930              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 743:sieve_extend.c ****     }
 2931              		.loc 1 743 99 is_stmt 0 view .LVU947
 2932 1216 C462E9F7 		shlx	r10, QWORD PTR -8[rbx], rdx	# tmp721, MEM[base: _468, offset: 8B], _12
 2932      53F8
 2933              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 743:sieve_extend.c ****     }
 2934              		.loc 1 743 54 view .LVU948
 2935 121c C462B3F7 		shrx	r12, QWORD PTR -16[rbx], r9	# tmp723, MEM[base: _468, offset: 0B], _15
 2935      63F0
 2936              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 743:sieve_extend.c ****     }
 2937              		.loc 1 743 72 view .LVU949
 2938 1222 4D09E2   		or	r10, r12	# tmp724, tmp723
 2939 1225 4E8954DF 		mov	QWORD PTR 48[rdi+r11*8], r10	# MEM[base: bitarray_69(D), index: copy_word_133, step: 8, offset
 2939      30
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2940              		.loc 1 742 48 is_stmt 1 view .LVU950
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2941              		.loc 1 742 12 view .LVU951
 743:sieve_extend.c ****     }
 2942              		.loc 1 743 9 view .LVU952
 2943              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 743:sieve_extend.c ****     }
 2944              		.loc 1 743 99 is_stmt 0 view .LVU953
 2945 122a C4E2E9F7 		shlx	rax, QWORD PTR [rbx], rdx	# tmp728, MEM[base: _468, offset: 8B], _12
 2945      03
 2946              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 743:sieve_extend.c ****     }
 2947              		.loc 1 743 54 view .LVU954
 2948 122f C4E2B3F7 		shrx	rsi, QWORD PTR -8[rbx], r9	# tmp730, MEM[base: _468, offset: 0B], _15
 2948      73F8
GAS LISTING /tmp/ccLUVin9.s 			page 83


 2949              	# sieve_extend.c:743:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 743:sieve_extend.c ****     }
 2950              		.loc 1 743 72 view .LVU955
 2951 1235 4809F0   		or	rax, rsi	# tmp731, tmp730
 2952 1238 4A8944DF 		mov	QWORD PTR 56[rdi+r11*8], rax	# MEM[base: bitarray_69(D), index: copy_word_133, step: 8, offset
 2952      38
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2953              		.loc 1 742 48 is_stmt 1 view .LVU956
 2954              	# sieve_extend.c:742:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2955              		.loc 1 742 57 is_stmt 0 view .LVU957
 2956 123d 4983C308 		add	r11, 8	# copy_word,
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2957              		.loc 1 742 12 is_stmt 1 view .LVU958
 2958              	# sieve_extend.c:742:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 742:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2959              		.loc 1 742 5 is_stmt 0 view .LVU959
 2960 1241 4C395C24 		cmp	QWORD PTR -8[rsp], r11	# %sfp, copy_word
 2960      F8
 2961 1246 0F8350FF 		jnb	.L66	#,
 2961      FFFF
 2962 124c E942F9FF 		jmp	.L67	#
 2962      FF
 2963              	.LVL114:
 2964              		.p2align 4,,7
 2965 1251 0F1F8000 		.p2align 3
 2965      000000
 2966              	.L69:
 2967              	.LBB320:
 2968              	.LBB317:
 2969              	# sieve_extend.c:736:         for (register counter_t i = 0; i <loop_distance; i++) {
 736:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2970              		.loc 1 736 33 view .LVU960
 2971 1258 4531FF   		xor	r15d, r15d	# i
 2972 125b 4C8D5E01 		lea	r11, 1[rsi]	# tmp571,
 2973 125f E922FAFF 		jmp	.L56	#
 2973      FF
 2974              	.LVL115:
 2975              		.p2align 4,,7
 2976 1264 0F1F4000 		.p2align 3
 2977              	.L205:
 736:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2978              		.loc 1 736 33 view .LVU961
 2979 1268 C5F877   		vzeroupper
 2980 126b E923F9FF 		jmp	.L67	#
 2980      FF
 2981              	.LVL116:
 2982              		.p2align 4,,7
 2983              		.p2align 3
 2984              	.L72:
 736:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2985              		.loc 1 736 33 view .LVU962
 2986              	.LBE317:
 2987              	.LBE320:
 2988              	# sieve_extend.c:718:     register counter_t source_word = wordindex(source_start);
 718:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 2989              		.loc 1 718 24 view .LVU963
GAS LISTING /tmp/ccLUVin9.s 			page 84


 2990 1270 48897424 		mov	QWORD PTR -48[rsp], rsi	# %sfp, source_word
 2990      D0
 2991              	# sieve_extend.c:727:     copy_word++;
 727:sieve_extend.c **** 
 2992              		.loc 1 727 14 view .LVU964
 2993 1275 4D89C6   		mov	r14, r8	# copy_word, copy_word
 2994 1278 488D5E01 		lea	rbx, 1[rsi]	# tmp631,
 2995 127c E9FDF5FF 		jmp	.L62	#
 2995      FF
 2996              	.LVL117:
 2997              		.p2align 4,,7
 2998 1281 0F1F8000 		.p2align 3
 2998      000000
 2999              	.L210:
 727:sieve_extend.c **** 
 3000              		.loc 1 727 14 view .LVU965
 3001 1288 C5F877   		vzeroupper
 3002 128b E97FFDFF 		jmp	.L54	#
 3002      FF
 3003              	.L209:
 3004              	.LBB321:
 3005              	.LBB318:
 737:sieve_extend.c ****         }
 3006              		.loc 1 737 13 is_stmt 1 view .LVU966
 3007              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 3008              		.loc 1 737 62 is_stmt 0 view .LVU967
 3009 1290 C57D6F03 		vmovdqa	ymm8, YMMWORD PTR [rbx]	# tmp957, MEM[base: vectp.199_276, index: ivtmp.233_473, offset: 0
 3010 1294 BA200000 		mov	edx, 32	# ivtmp.233,
 3010      00
 3011              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 3012              		.loc 1 737 109 view .LVU968
 3013 1299 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR [r11]	# tmp958, MEM[base: vectp.203_283, index: ivtmp.233_473, offset: 0
 3013      1B
 3014              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 3015              		.loc 1 737 62 view .LVU969
 3016 129e C53DD3C9 		vpsrlq	ymm9, ymm8, xmm1	# vect__28.201, tmp957, _15
 3017              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 3018              		.loc 1 737 109 view .LVU970
 3019 12a2 C565F3D0 		vpsllq	ymm10, ymm3, xmm0	# vect__33.205, tmp958, _12
 3020              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 3021              		.loc 1 737 80 view .LVU971
 3022 12a6 C44135EB 		vpor	ymm11, ymm9, ymm10	# vect__37.206, vect__28.201, vect__33.205
 3022      DA
 3023              	# sieve_extend.c:737:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 737:sieve_extend.c ****         }
 3024              		.loc 1 737 35 view .LVU972
 3025 12ab C4417E7F 		vmovdqu	YMMWORD PTR [r12], ymm11	# MEM[base: vectp.208_292, index: ivtmp.233_473, offset: 0B], vec
 3025      1C24
 736:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3026              		.loc 1 736 58 is_stmt 1 view .LVU973
 736:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3027              		.loc 1 736 40 view .LVU974
GAS LISTING /tmp/ccLUVin9.s 			page 85


 3028 12b1 E94BFAFF 		jmp	.L152	#
 3028      FF
 3029              	.LVL118:
 3030              	.L68:
 3031              	# sieve_extend.c:736:         for (register counter_t i = 0; i <loop_distance; i++) {
 736:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3032              		.loc 1 736 33 is_stmt 0 view .LVU975
 3033 12b6 4531FF   		xor	r15d, r15d	# tmp.197
 3034 12b9 E962FCFF 		jmp	.L55	#
 3034      FF
 3035              	.LBE318:
 3036              	.LBE321:
 3037              		.cfi_endproc
 3038              	.LFE73:
 3040 12be 6690     		.p2align 4
 3041              		.globl	compare_tuning_result
 3043              	compare_tuning_result:
 3044              	.LVL119:
 3045              	.LFB86:
 748:sieve_extend.c **** 
 749:sieve_extend.c **** static void  extendSieve_shiftright_base(bitword_t* bitarray, const counter_t source_start, const c
 750:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 751:sieve_extend.c ****    
 752:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 753:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 754:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_calc(source_start);
 755:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 756:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 757:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 758:sieve_extend.c **** 
 759:sieve_extend.c ****     if (copy_word >= destination_stop_word) { 
 760:sieve_extend.c ****         bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose da
 761:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 762:sieve_extend.c ****                                 & keepmask(copy_start) & chopmask(destination_stop);
 763:sieve_extend.c ****         return; // rapid exit for one word variant
 764:sieve_extend.c ****     }
 765:sieve_extend.c **** 
 766:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose data
 767:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 768:sieve_extend.c ****                                 & keepmask(copy_start);
 769:sieve_extend.c ****     
 770:sieve_extend.c ****     copy_word++;
 771:sieve_extend.c **** 
 772:sieve_extend.c ****     debug { printf("...start - %ju - %ju - end\n",(uintmax_t)wordindex(copy_start), (uintmax_t)dest
 773:sieve_extend.c **** 
 774:sieve_extend.c ****     for (; copy_word <= destination_stop_word; copy_word++, source_word++ ) 
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 776:sieve_extend.c ****     // bitarray[copy_word] &= chopmask(destination_stop);
 777:sieve_extend.c **** 
 778:sieve_extend.c **** }
 779:sieve_extend.c **** 
 780:sieve_extend.c **** static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source_start, const counter_
 781:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 782:sieve_extend.c **** 
 783:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 784:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 785:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_calc(copy_start);
GAS LISTING /tmp/ccLUVin9.s 			page 86


 786:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 787:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 788:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 789:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 790:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 791:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 792:sieve_extend.c **** 
 793:sieve_extend.c ****     copy_word++;
 794:sieve_extend.c ****     source_word++;
 795:sieve_extend.c **** 
 796:sieve_extend.c ****     const counter_t aligned_copy_word = min(source_word + size, destination_stop_word); // after <<
 797:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 798:sieve_extend.c ****     source_word += distance;
 799:sieve_extend.c ****     copy_word += distance;
 800:sieve_extend.c **** 
 801:sieve_extend.c ****      debug { counter_t fast_loop_stop_word = uintsafeminus(aligned_copy_word,2); printf("...start -
 802:sieve_extend.c **** 
 803:sieve_extend.c ****     #pragma GCC ivdep
 804:sieve_extend.c ****     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 805:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 806:sieve_extend.c ****     }
 807:sieve_extend.c **** 
 808:sieve_extend.c ****     if (copy_word >= destination_stop_word) return;
 809:sieve_extend.c **** 
 810:sieve_extend.c ****     source_word = copy_word - size; // recalibrate
 811:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 812:sieve_extend.c **** 
 813:sieve_extend.c ****     #pragma GCC ivdep
 814:sieve_extend.c ****     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 815:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 816:sieve_extend.c **** 
 817:sieve_extend.c ****     #pragma GCC ivdep
 818:sieve_extend.c ****     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 819:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 820:sieve_extend.c **** 
 821:sieve_extend.c **** 
 822:sieve_extend.c ****  }
 823:sieve_extend.c **** 
 824:sieve_extend.c **** static inline void extendSieve(bitword_t* bitarray, const counter_t source_start, const counter_t s
 825:sieve_extend.c ****     if (size < WORD_SIZE_counter)   {
 826:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 827:sieve_extend.c ****         return; // rapid exit for small sizes
 828:sieve_extend.c ****     }
 829:sieve_extend.c **** 
 830:sieve_extend.c ****     const counter_t copy_start  = source_start + size;
 831:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 832:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 833:sieve_extend.c **** 
 834:sieve_extend.c ****     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_start, size, destinatio
 835:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 836:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 837:sieve_extend.c **** }
 838:sieve_extend.c **** 
 839:sieve_extend.c **** static void sieve_block_stripe(bitword_t* bitarray, const counter_t block_start, const counter_t bl
 840:sieve_extend.c ****     counter_t prime = prime_start;
 841:sieve_extend.c ****     counter_t start = 0;
 842:sieve_extend.c ****     counter_t step  = prime * 2 + 1;
GAS LISTING /tmp/ccLUVin9.s 			page 87


 843:sieve_extend.c **** 
 844:sieve_extend.c ****     debug printf("Block strip for block %ju - %ju\n",(uintmax_t)block_start,(uintmax_t)block_stop);
 845:sieve_extend.c ****     
 846:sieve_extend.c ****     while (prime*step <= block_stop) {
 847:sieve_extend.c ****         if likely(block_start >= (prime + 1)) 
 848:sieve_extend.c ****             start = block_start + prime + prime - ((block_start + prime) % step);
 849:sieve_extend.c ****         else 
 850:sieve_extend.c ****             start = prime * prime * 2 + prime * 2;
 851:sieve_extend.c **** 
 852:sieve_extend.c ****         if (step < VECTORSTEP_FASTER) {
 853:sieve_extend.c ****             setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
 854:sieve_extend.c ****             prime = searchBitFalse(bitarray, prime+1 );
 855:sieve_extend.c ****         }
 856:sieve_extend.c ****         else {
 857:sieve_extend.c ****             setBitsTrue_largeRange(bitarray, start, step, block_stop);
 858:sieve_extend.c ****             prime = searchBitFalse_longRange(bitarray, prime+1 );
 859:sieve_extend.c ****         }
 860:sieve_extend.c **** 
 861:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 862:sieve_extend.c ****         step  = prime * 2 + 1;
 863:sieve_extend.c ****     }
 864:sieve_extend.c **** }
 865:sieve_extend.c **** 
 866:sieve_extend.c **** struct block {
 867:sieve_extend.c ****     counter_t pattern_size; // size of pattern applied 
 868:sieve_extend.c ****     counter_t pattern_start; // start of pattern
 869:sieve_extend.c ****     counter_t prime; // next prime to be striped
 870:sieve_extend.c **** };
 871:sieve_extend.c **** 
 872:sieve_extend.c **** // returns prime that could not be handled:
 873:sieve_extend.c **** // start is too large
 874:sieve_extend.c **** // range is too big
 875:sieve_extend.c **** static struct block sieve_block_extend(struct sieve_t *sieve, const counter_t block_start, const co
 876:sieve_extend.c ****     register counter_t prime   = 0;
 877:sieve_extend.c ****     counter_t patternsize_bits = 1;
 878:sieve_extend.c ****     counter_t pattern_start    = 0;
 879:sieve_extend.c ****     counter_t range_stop       = block_start;
 880:sieve_extend.c ****     bitword_t* bitarray        = sieve->bitarray;
 881:sieve_extend.c ****     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 };
 882:sieve_extend.c **** 
 883:sieve_extend.c ****     sieve->bitarray[0] = SAFE_ZERO; // only the first word has to be cleared; the rest is populated
 884:sieve_extend.c ****     
 885:sieve_extend.c ****     for (;range_stop < block_stop;) {
 886:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 887:sieve_extend.c ****         counter_t start = prime * prime * 2 + prime * 2;
 888:sieve_extend.c ****         if unlikely(start > block_stop) break;
 889:sieve_extend.c **** 
 890:sieve_extend.c ****         const counter_t step  = prime * 2 + 1;
 891:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 892:sieve_extend.c **** 
 893:sieve_extend.c ****         range_stop = block_start + patternsize_bits * step * 2;  // range is x2 so the second block
 894:sieve_extend.c ****         block.pattern_size = patternsize_bits;
 895:sieve_extend.c ****         block.pattern_start = pattern_start;
 896:sieve_extend.c ****         if (range_stop > block_stop) return block; //range_stop = block_stop;
 897:sieve_extend.c **** 
 898:sieve_extend.c ****         if (patternsize_bits>1) {
 899:sieve_extend.c ****             pattern_start = block_start | patternsize_bits;
GAS LISTING /tmp/ccLUVin9.s 			page 88


 900:sieve_extend.c ****             extendSieve(bitarray, pattern_start, patternsize_bits, range_stop);
 901:sieve_extend.c ****         }
 902:sieve_extend.c ****         patternsize_bits *= step;
 903:sieve_extend.c **** 
 904:sieve_extend.c ****         // if      (step < SMALLSTEP_FASTER)      setBitsTrue_smallStep (bitarray, start, (bitshift
 905:sieve_extend.c ****         // else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitarray, start, step, ran
 906:sieve_extend.c ****         if (step < VECTORSTEP_FASTER)     setBitsTrue_largeRange_vector(bitarray, start, step, rang
 907:sieve_extend.c ****         else                              setBitsTrue_largeRange(bitarray, start, step, range_stop)
 908:sieve_extend.c ****         block.prime = prime;
 909:sieve_extend.c ****     } 
 910:sieve_extend.c **** 
 911:sieve_extend.c ****     return block;
 912:sieve_extend.c **** }
 913:sieve_extend.c **** 
 914:sieve_extend.c **** static struct sieve_t* sieve_shake(const counter_t maxints, const counter_t blocksize) {
 915:sieve_extend.c ****     struct sieve_t *sieve = sieve_create(maxints);
 916:sieve_extend.c ****     bitword_t* bitarray = sieve->bitarray;
 917:sieve_extend.c **** 
 918:sieve_extend.c ****     debug printf("Running sieve to find all primes up to %ju with blocksize %ju\n",(uintmax_t)maxin
 919:sieve_extend.c **** 
 920:sieve_extend.c ****     // fill the whole sieve bij adding en copying incrementally
 921:sieve_extend.c ****     struct block block = sieve_block_extend(sieve, 0, sieve->bits);
 922:sieve_extend.c ****     extendSieve(bitarray, block.pattern_start, block.pattern_size, sieve->bits);
 923:sieve_extend.c ****     counter_t startprime = block.prime;
 924:sieve_extend.c **** 
 925:sieve_extend.c ****     // //#pragma GCC unroll 8
 926:sieve_extend.c ****     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= sieve->bits; block_sta
 927:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 928:sieve_extend.c ****         counter_t prime = searchBitFalse(bitarray, startprime);
 929:sieve_extend.c ****         sieve_block_stripe(bitarray, block_start, block_stop, prime);
 930:sieve_extend.c ****     } 
 931:sieve_extend.c **** 
 932:sieve_extend.c ****     return sieve;
 933:sieve_extend.c **** }
 934:sieve_extend.c **** 
 935:sieve_extend.c **** static struct sieve_t *sieve_blockbyblock(const counter_t maxints, const counter_t blocksize) {
 936:sieve_extend.c ****     struct sieve_t *sieve = sieve_create(maxints);
 937:sieve_extend.c ****     counter_t prime     = 1;
 938:sieve_extend.c ****     bitword_t* bitarray = sieve->bitarray;
 939:sieve_extend.c ****     for(counter_t index=0; index<wordindex(maxints/2); index++) {
 940:sieve_extend.c ****         bitarray[index]=SAFE_ZERO;
 941:sieve_extend.c ****     }
 942:sieve_extend.c **** 
 943:sieve_extend.c ****     debug printf("Running sieve to find all primes up to %ju with blocksize %ju\n",(uintmax_t)maxin
 944:sieve_extend.c **** 
 945:sieve_extend.c ****     // //#pragma GCC unroll 8
 946:sieve_extend.c ****     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= sieve->bits; block_sta
 947:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 948:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime);
 949:sieve_extend.c ****         sieve_block_stripe(bitarray, block_start, block_stop, prime);
 950:sieve_extend.c ****     } 
 951:sieve_extend.c **** 
 952:sieve_extend.c ****     return sieve;
 953:sieve_extend.c **** }
 954:sieve_extend.c **** 
 955:sieve_extend.c **** static void show_primes(struct sieve_t *sieve, counter_t maxFactor) {
 956:sieve_extend.c ****     counter_t primeCount = 1;    // We already have 2
GAS LISTING /tmp/ccLUVin9.s 			page 89


 957:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitarray, factor+
 958:sieve_extend.c ****         primeCount++;
 959:sieve_extend.c ****         if (factor < maxFactor/2) {
 960:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 961:sieve_extend.c ****             if (primeCount % 10 == 0) printf("\n");
 962:sieve_extend.c ****         }
 963:sieve_extend.c ****     }
 964:sieve_extend.c ****     printf("\nFound %ju primes until %ju\n",(uintmax_t)primeCount, (uintmax_t)sieve->bits*2+1);
 965:sieve_extend.c **** }
 966:sieve_extend.c **** 
 967:sieve_extend.c **** static counter_t count_primes(struct sieve_t *sieve) {
 968:sieve_extend.c ****     counter_t primeCount = 1;
 969:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitarray, factor+
 970:sieve_extend.c ****     return primeCount;
 971:sieve_extend.c **** }
 972:sieve_extend.c **** 
 973:sieve_extend.c **** static void deepAnalyzePrimes(struct sieve_t *sieve) {
 974:sieve_extend.c ****     printf("DeepAnalyzing\n");
 975:sieve_extend.c ****     counter_t warn_prime = 0;
 976:sieve_extend.c ****     counter_t warn_nonprime = 0;
 977:sieve_extend.c ****     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 978:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 979:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 980:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 981:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 982:sieve_extend.c ****                 }
 983:sieve_extend.c ****             }
 984:sieve_extend.c ****         }
 985:sieve_extend.c ****         else {
 986:sieve_extend.c ****             counter_t c_prime = 0;
 987:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 988:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 989:sieve_extend.c ****             }
 990:sieve_extend.c ****             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) was marked non-prime, 
 991:sieve_extend.c ****         }
 992:sieve_extend.c ****     }
 993:sieve_extend.c **** }
 994:sieve_extend.c **** 
 995:sieve_extend.c **** 
 996:sieve_extend.c **** int validatePrimeCount(struct sieve_t *sieve, int option_verboselevel) {
 997:sieve_extend.c **** 
 998:sieve_extend.c ****     counter_t primecount = count_primes(sieve);
 999:sieve_extend.c ****     counter_t valid_primes = 0;
1000:sieve_extend.c ****     switch(sieve->size) {
1001:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
1002:sieve_extend.c ****         case 100:           valid_primes = 25;       break;
1003:sieve_extend.c ****         case 1000:          valid_primes = 168;      break;
1004:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
1005:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
1006:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
1007:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
1008:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
1009:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
1010:sieve_extend.c ****         default:            valid_primes= 0;
1011:sieve_extend.c ****     }
1012:sieve_extend.c **** 
1013:sieve_extend.c ****     int valid = (valid_primes == primecount);
GAS LISTING /tmp/ccLUVin9.s 			page 90


1014:sieve_extend.c ****     if (valid  && option_verboselevel >= 4) printf("Result: Sievesize %ju is expected to have %ju p
1015:sieve_extend.c ****     if (!valid && option_verboselevel >= 1) {
1016:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
1017:sieve_extend.c ****         if (!valid && option_verboselevel >= 2) show_primes(sieve, default_show_primes_on_error);
1018:sieve_extend.c ****     }
1019:sieve_extend.c ****     if (!valid && option_verboselevel >= 2) deepAnalyzePrimes(sieve);
1020:sieve_extend.c ****     return (valid);
1021:sieve_extend.c **** }
1022:sieve_extend.c **** 
1023:sieve_extend.c **** void usage(char *name) {
1024:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
1025:sieve_extend.c ****     fprintf(stderr, "Options:\n");
1026:sieve_extend.c ****     fprintf(stderr, "  --verbose <level>  Show more output to a certain level:\n");
1027:sieve_extend.c ****     fprintf(stderr, "                     1 - show phase progress\n");
1028:sieve_extend.c ****     fprintf(stderr, "                     2 - show general progress within the phase\n");
1029:sieve_extend.c ****     fprintf(stderr, "                     3 - show actual work\n");
1030:sieve_extend.c ****     fprintf(stderr, "  --check            check the correctness of the algorithm\n");
1031:sieve_extend.c ****     fprintf(stderr, "  --show <maximum>   Show the primes found up to the maximum\n");
1032:sieve_extend.c ****     fprintf(stderr, "  --tune  <level>    find the best settings for the current os and hardware\n"
1033:sieve_extend.c ****     fprintf(stderr, "                     1 - fast tuning\n");
1034:sieve_extend.c ****     fprintf(stderr, "                     2 - refined tuning\n");
1035:sieve_extend.c ****     fprintf(stderr, "                     3 - maximum tuning (takes long)\n");
1036:sieve_extend.c ****     exit(1);
1037:sieve_extend.c **** }
1038:sieve_extend.c **** 
1039:sieve_extend.c **** typedef struct  {
1040:sieve_extend.c ****     counter_t maxints;
1041:sieve_extend.c ****     counter_t blocksize_bits;
1042:sieve_extend.c ****     counter_t blocksize_kb;
1043:sieve_extend.c ****     counter_t free_bits;
1044:sieve_extend.c ****     counter_t smallstep_faster;
1045:sieve_extend.c ****     counter_t mediumstep_faster;
1046:sieve_extend.c ****     counter_t vectorstep_faster;
1047:sieve_extend.c ****     counter_t sample_max;
1048:sieve_extend.c ****     double    sample_duration;
1049:sieve_extend.c ****     counter_t passes;
1050:sieve_extend.c ****     double    elapsed_time;
1051:sieve_extend.c ****     double    avg;
1052:sieve_extend.c **** } tuning_result_type;
1053:sieve_extend.c **** 
1054:sieve_extend.c **** int compare_tuning_result(const void *a, const void *b) {
 3046              		.loc 1 1054 57 is_stmt 1 view -0
 3047              		.cfi_startproc
 3048              		.loc 1 1054 57 is_stmt 0 view .LVU977
 3049 12c0 F30F1EFA 		endbr64	
1055:sieve_extend.c ****     tuning_result_type *resultA = (tuning_result_type *)a;
 3050              		.loc 1 1055 5 is_stmt 1 view .LVU978
 3051              	.LVL120:
1056:sieve_extend.c ****     tuning_result_type *resultB = (tuning_result_type *)b;
 3052              		.loc 1 1056 5 view .LVU979
1057:sieve_extend.c ****     return (resultB->avg > resultA->avg ? 1 : -1);
 3053              		.loc 1 1057 5 view .LVU980
 3054              	# sieve_extend.c:1057:     return (resultB->avg > resultA->avg ? 1 : -1);
 3055              		.loc 1 1057 45 is_stmt 0 view .LVU981
 3056 12c4 C5FB1046 		vmovsd	xmm0, QWORD PTR 88[rsi]	# MEM[(struct tuning_result_type *)b_5(D)].avg, MEM[(struct tuning_
 3056      58
 3057 12c9 31C0     		xor	eax, eax	# <retval>
GAS LISTING /tmp/ccLUVin9.s 			page 91


 3058 12cb C5F92F47 		vcomisd	xmm0, QWORD PTR 88[rdi]	# MEM[(struct tuning_result_type *)b_5(D)].avg, MEM[(struct tuning
 3058      58
 3059 12d0 0F97C0   		seta	al	#, <retval>
 3060 12d3 8D4400FF 		lea	eax, -1[rax+rax]	# <retval>,
 3061              	# sieve_extend.c:1058: }
1058:sieve_extend.c **** }
 3062              		.loc 1 1058 1 view .LVU982
 3063 12d7 C3       		ret	
 3064              		.cfi_endproc
 3065              	.LFE86:
 3067 12d8 0F1F8400 		.p2align 4
 3067      00000000 
 3069              	setBitsTrue_largeRange_vector:
 3070              	.LVL121:
 3071              	.LFB67:
 451:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 3072              		.loc 1 451 153 is_stmt 1 view -0
 3073              		.cfi_startproc
 451:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 3074              		.loc 1 451 153 is_stmt 0 view .LVU984
 3075 12e0 55       		push	rbp	#
 3076              		.cfi_def_cfa_offset 16
 3077              		.cfi_offset 6, -16
 3078 12e1 4889E5   		mov	rbp, rsp	#,
 3079              		.cfi_def_cfa_register 6
 3080 12e4 4157     		push	r15	#
 3081 12e6 4156     		push	r14	#
 3082 12e8 4155     		push	r13	#
 3083 12ea 4154     		push	r12	#
 3084 12ec 53       		push	rbx	#
 3085 12ed 4883E4E0 		and	rsp, -32	#,
 3086 12f1 488D6424 		lea	rsp, -96[rsp]	#,
 3086      A0
 3087              		.cfi_offset 15, -24
 3088              		.cfi_offset 14, -32
 3089              		.cfi_offset 13, -40
 3090              		.cfi_offset 12, -48
 3091              		.cfi_offset 3, -56
 3092              	# sieve_extend.c:451: static void setBitsTrue_largeRange_vector(bitword_t* __restrict bitarray_word
 451:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 3093              		.loc 1 451 153 view .LVU985
 3094 12f6 64488B04 		mov	rax, QWORD PTR fs:40	# tmp511, MEM[(<address-space-1> long unsigned int *)40B]
 3094      25280000 
 3094      00
 3095 12ff 48894424 		mov	QWORD PTR 88[rsp], rax	# D.6828, tmp511
 3095      58
 3096 1304 31C0     		xor	eax, eax	# tmp511
 452:sieve_extend.c **** 
 3097              		.loc 1 452 5 is_stmt 1 view .LVU986
 454:sieve_extend.c ****     counter_t range_start_atvector = vectorstart(range_start);
 3098              		.loc 1 454 5 view .LVU987
 3099              	.LVL122:
 455:sieve_extend.c ****     if likely((range_start_atvector + step) < range_start) { // not the first step possible in this
 3100              		.loc 1 455 5 view .LVU988
 3101              	# sieve_extend.c:455:     counter_t range_start_atvector = vectorstart(range_start);
 455:sieve_extend.c ****     if likely((range_start_atvector + step) < range_start) { // not the first step possible in this
 3102              		.loc 1 455 15 is_stmt 0 view .LVU989
GAS LISTING /tmp/ccLUVin9.s 			page 92


 3103 1306 4889F0   		mov	rax, rsi	# range_start_atvector, range_start
 3104 1309 30C0     		xor	al, al	# range_start_atvector
 3105              	.LVL123:
 456:sieve_extend.c ****         debug { printf("Range start+step %ju not at start of vector %ju\n",(uintmax_t)range_start+(
 3106              		.loc 1 456 5 is_stmt 1 view .LVU990
 3107              	# sieve_extend.c:456:     if likely((range_start_atvector + step) < range_start) { // not the first
 456:sieve_extend.c ****         debug { printf("Range start+step %ju not at start of vector %ju\n",(uintmax_t)range_start+(
 3108              		.loc 1 456 8 is_stmt 0 view .LVU991
 3109 130b 4C8D0410 		lea	r8, [rax+rdx]	# tmp174,
 3110 130f 4939F0   		cmp	r8, rsi	# tmp174, range_start
 3111 1312 0F83F800 		jnb	.L215	#,
 3111      0000
 457:sieve_extend.c **** 
 3112              		.loc 1 457 9 is_stmt 1 view .LVU992
 459:sieve_extend.c ****         if (unlikely(range_start_atvector > range_stop)) { // we should not be here; just handle wi
 3113              		.loc 1 459 9 view .LVU993
 3114              	# sieve_extend.c:459:         range_start_atvector += VECTOR_SIZE; // find next vector
 459:sieve_extend.c ****         if (unlikely(range_start_atvector > range_stop)) { // we should not be here; just handle wi
 3115              		.loc 1 459 30 is_stmt 0 view .LVU994
 3116 1318 48050001 		add	rax, 256	# range_start_atvector,
 3116      0000
 3117              	.LVL124:
 460:sieve_extend.c ****             debug2 printf("..Marking and returning without vector\n");
 3118              		.loc 1 460 9 is_stmt 1 view .LVU995
 3119              	# sieve_extend.c:460:         if (unlikely(range_start_atvector > range_stop)) { // we should not b
 460:sieve_extend.c ****             debug2 printf("..Marking and returning without vector\n");
 3120              		.loc 1 460 12 is_stmt 0 view .LVU996
 3121 131e 4839C8   		cmp	rax, rcx	# range_start_atvector, range_stop
 3122 1321 0F876909 		ja	.L216	#,
 3122      0000
 472:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3123              		.loc 1 472 16 is_stmt 1 view .LVU997
 3124              	# sieve_extend.c:472:         for (; range_start <= range_start_atvector; range_start += step) 
 472:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3125              		.loc 1 472 9 is_stmt 0 view .LVU998
 3126 1327 4839C6   		cmp	rsi, rax	# range_start, range_start_atvector
 3127              	# sieve_extend.c:473:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 473:sieve_extend.c ****     }
 3128              		.loc 1 473 54 view .LVU999
 3129 132a 41BA0100 		mov	r10d, 1	# tmp184,
 3129      0000
 3130              	# sieve_extend.c:472:         for (; range_start <= range_start_atvector; range_start += step) 
 472:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3131              		.loc 1 472 9 view .LVU1000
 3132 1330 0F87DA00 		ja	.L215	#,
 3132      0000
 3133              	.LVL125:
 3134              	.L217:
 473:sieve_extend.c ****     }
 3135              		.loc 1 473 13 is_stmt 1 discriminator 2 view .LVU1001
 3136              	# sieve_extend.c:473:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 473:sieve_extend.c ****     }
 3137              		.loc 1 473 51 is_stmt 0 discriminator 2 view .LVU1002
 3138 1336 4889F3   		mov	rbx, rsi	# tmp180, range_start
 3139              	# sieve_extend.c:473:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 473:sieve_extend.c ****     }
 3140              		.loc 1 473 54 discriminator 2 view .LVU1003
GAS LISTING /tmp/ccLUVin9.s 			page 93


 3141 1339 C442C9F7 		shlx	r9, r10, rsi	# tmp183, tmp184, range_start
 3141      CA
 3142              	# sieve_extend.c:473:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 473:sieve_extend.c ****     }
 3143              		.loc 1 473 51 discriminator 2 view .LVU1004
 3144 133e 48C1EB06 		shr	rbx, 6	# tmp180,
 3145              	# sieve_extend.c:472:         for (; range_start <= range_start_atvector; range_start += step) 
 472:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3146              		.loc 1 472 65 discriminator 2 view .LVU1005
 3147 1342 4801D6   		add	rsi, rdx	# range_start, step
 3148              	# sieve_extend.c:473:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 473:sieve_extend.c ****     }
 3149              		.loc 1 473 51 discriminator 2 view .LVU1006
 3150 1345 4C090CDF 		or	QWORD PTR [rdi+rbx*8], r9	# *_21, tmp183
 472:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3151              		.loc 1 472 53 is_stmt 1 discriminator 2 view .LVU1007
 472:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3152              		.loc 1 472 16 discriminator 2 view .LVU1008
 3153              	# sieve_extend.c:472:         for (; range_start <= range_start_atvector; range_start += step) 
 472:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3154              		.loc 1 472 9 is_stmt 0 discriminator 2 view .LVU1009
 3155 1349 4839F0   		cmp	rax, rsi	# range_start_atvector, range_start
 3156 134c 0F82BE00 		jb	.L215	#,
 3156      0000
 473:sieve_extend.c ****     }
 3157              		.loc 1 473 13 is_stmt 1 view .LVU1010
 3158              	# sieve_extend.c:473:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 473:sieve_extend.c ****     }
 3159              		.loc 1 473 51 is_stmt 0 view .LVU1011
 3160 1352 4989F3   		mov	r11, rsi	# tmp419, range_start
 3161              	# sieve_extend.c:473:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 473:sieve_extend.c ****     }
 3162              		.loc 1 473 54 view .LVU1012
 3163 1355 C442C9F7 		shlx	r12, r10, rsi	# tmp422, tmp184, range_start
 3163      E2
 3164              	# sieve_extend.c:473:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 473:sieve_extend.c ****     }
 3165              		.loc 1 473 51 view .LVU1013
 3166 135a 49C1EB06 		shr	r11, 6	# tmp419,
 3167              	# sieve_extend.c:472:         for (; range_start <= range_start_atvector; range_start += step) 
 472:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3168              		.loc 1 472 65 view .LVU1014
 3169 135e 4801D6   		add	rsi, rdx	# range_start, step
 3170              	# sieve_extend.c:473:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 473:sieve_extend.c ****     }
 3171              		.loc 1 473 51 view .LVU1015
 3172 1361 4E0924DF 		or	QWORD PTR [rdi+r11*8], r12	# *_21, tmp422
 472:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3173              		.loc 1 472 53 is_stmt 1 view .LVU1016
 472:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3174              		.loc 1 472 16 view .LVU1017
 3175              	# sieve_extend.c:472:         for (; range_start <= range_start_atvector; range_start += step) 
 472:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3176              		.loc 1 472 9 is_stmt 0 view .LVU1018
 3177 1365 4839F0   		cmp	rax, rsi	# range_start_atvector, range_start
 3178 1368 0F82A200 		jb	.L215	#,
 3178      0000
GAS LISTING /tmp/ccLUVin9.s 			page 94


 473:sieve_extend.c ****     }
 3179              		.loc 1 473 13 is_stmt 1 view .LVU1019
 3180              	# sieve_extend.c:473:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 473:sieve_extend.c ****     }
 3181              		.loc 1 473 51 is_stmt 0 view .LVU1020
 3182 136e 4989F5   		mov	r13, rsi	# tmp423, range_start
 3183              	# sieve_extend.c:473:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 473:sieve_extend.c ****     }
 3184              		.loc 1 473 54 view .LVU1021
 3185 1371 C442C9F7 		shlx	r14, r10, rsi	# tmp426, tmp184, range_start
 3185      F2
 3186              	# sieve_extend.c:473:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 473:sieve_extend.c ****     }
 3187              		.loc 1 473 51 view .LVU1022
 3188 1376 49C1ED06 		shr	r13, 6	# tmp423,
 3189              	# sieve_extend.c:472:         for (; range_start <= range_start_atvector; range_start += step) 
 472:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3190              		.loc 1 472 65 view .LVU1023
 3191 137a 4801D6   		add	rsi, rdx	# range_start, step
 3192              	# sieve_extend.c:473:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 473:sieve_extend.c ****     }
 3193              		.loc 1 473 51 view .LVU1024
 3194 137d 4E0934EF 		or	QWORD PTR [rdi+r13*8], r14	# *_21, tmp426
 472:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3195              		.loc 1 472 53 is_stmt 1 view .LVU1025
 472:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3196              		.loc 1 472 16 view .LVU1026
 3197              	# sieve_extend.c:472:         for (; range_start <= range_start_atvector; range_start += step) 
 472:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3198              		.loc 1 472 9 is_stmt 0 view .LVU1027
 3199 1381 4839F0   		cmp	rax, rsi	# range_start_atvector, range_start
 3200 1384 0F828600 		jb	.L215	#,
 3200      0000
 473:sieve_extend.c ****     }
 3201              		.loc 1 473 13 is_stmt 1 view .LVU1028
 3202              	# sieve_extend.c:473:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 473:sieve_extend.c ****     }
 3203              		.loc 1 473 51 is_stmt 0 view .LVU1029
 3204 138a 4989F7   		mov	r15, rsi	# tmp427, range_start
 3205              	# sieve_extend.c:473:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 473:sieve_extend.c ****     }
 3206              		.loc 1 473 54 view .LVU1030
 3207 138d C442C9F7 		shlx	r8, r10, rsi	# tmp430, tmp184, range_start
 3207      C2
 3208              	# sieve_extend.c:473:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 473:sieve_extend.c ****     }
 3209              		.loc 1 473 51 view .LVU1031
 3210 1392 49C1EF06 		shr	r15, 6	# tmp427,
 3211              	# sieve_extend.c:472:         for (; range_start <= range_start_atvector; range_start += step) 
 472:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3212              		.loc 1 472 65 view .LVU1032
 3213 1396 4801D6   		add	rsi, rdx	# range_start, step
 3214              	# sieve_extend.c:473:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 473:sieve_extend.c ****     }
 3215              		.loc 1 473 51 view .LVU1033
 3216 1399 4E0904FF 		or	QWORD PTR [rdi+r15*8], r8	# *_21, tmp430
 472:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
GAS LISTING /tmp/ccLUVin9.s 			page 95


 3217              		.loc 1 472 53 is_stmt 1 view .LVU1034
 472:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3218              		.loc 1 472 16 view .LVU1035
 3219              	# sieve_extend.c:472:         for (; range_start <= range_start_atvector; range_start += step) 
 472:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3220              		.loc 1 472 9 is_stmt 0 view .LVU1036
 3221 139d 4839F0   		cmp	rax, rsi	# range_start_atvector, range_start
 3222 13a0 726E     		jb	.L215	#,
 473:sieve_extend.c ****     }
 3223              		.loc 1 473 13 is_stmt 1 view .LVU1037
 3224              	# sieve_extend.c:473:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 473:sieve_extend.c ****     }
 3225              		.loc 1 473 51 is_stmt 0 view .LVU1038
 3226 13a2 4889F3   		mov	rbx, rsi	# tmp431, range_start
 3227              	# sieve_extend.c:473:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 473:sieve_extend.c ****     }
 3228              		.loc 1 473 54 view .LVU1039
 3229 13a5 C442C9F7 		shlx	r9, r10, rsi	# tmp434, tmp184, range_start
 3229      CA
 3230              	# sieve_extend.c:473:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 473:sieve_extend.c ****     }
 3231              		.loc 1 473 51 view .LVU1040
 3232 13aa 48C1EB06 		shr	rbx, 6	# tmp431,
 3233              	# sieve_extend.c:472:         for (; range_start <= range_start_atvector; range_start += step) 
 472:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3234              		.loc 1 472 65 view .LVU1041
 3235 13ae 4801D6   		add	rsi, rdx	# range_start, step
 3236              	# sieve_extend.c:473:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 473:sieve_extend.c ****     }
 3237              		.loc 1 473 51 view .LVU1042
 3238 13b1 4C090CDF 		or	QWORD PTR [rdi+rbx*8], r9	# *_21, tmp434
 472:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3239              		.loc 1 472 53 is_stmt 1 view .LVU1043
 472:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3240              		.loc 1 472 16 view .LVU1044
 3241              	# sieve_extend.c:472:         for (; range_start <= range_start_atvector; range_start += step) 
 472:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3242              		.loc 1 472 9 is_stmt 0 view .LVU1045
 3243 13b5 4839F0   		cmp	rax, rsi	# range_start_atvector, range_start
 3244 13b8 7256     		jb	.L215	#,
 473:sieve_extend.c ****     }
 3245              		.loc 1 473 13 is_stmt 1 view .LVU1046
 3246              	# sieve_extend.c:473:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 473:sieve_extend.c ****     }
 3247              		.loc 1 473 51 is_stmt 0 view .LVU1047
 3248 13ba 4989F3   		mov	r11, rsi	# tmp435, range_start
 3249              	# sieve_extend.c:473:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 473:sieve_extend.c ****     }
 3250              		.loc 1 473 54 view .LVU1048
 3251 13bd C442C9F7 		shlx	r12, r10, rsi	# tmp438, tmp184, range_start
 3251      E2
 3252              	# sieve_extend.c:473:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 473:sieve_extend.c ****     }
 3253              		.loc 1 473 51 view .LVU1049
 3254 13c2 49C1EB06 		shr	r11, 6	# tmp435,
 3255              	# sieve_extend.c:472:         for (; range_start <= range_start_atvector; range_start += step) 
 472:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
GAS LISTING /tmp/ccLUVin9.s 			page 96


 3256              		.loc 1 472 65 view .LVU1050
 3257 13c6 4801D6   		add	rsi, rdx	# range_start, step
 3258              	# sieve_extend.c:473:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 473:sieve_extend.c ****     }
 3259              		.loc 1 473 51 view .LVU1051
 3260 13c9 4E0924DF 		or	QWORD PTR [rdi+r11*8], r12	# *_21, tmp438
 472:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3261              		.loc 1 472 53 is_stmt 1 view .LVU1052
 472:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3262              		.loc 1 472 16 view .LVU1053
 3263              	# sieve_extend.c:472:         for (; range_start <= range_start_atvector; range_start += step) 
 472:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3264              		.loc 1 472 9 is_stmt 0 view .LVU1054
 3265 13cd 4839F0   		cmp	rax, rsi	# range_start_atvector, range_start
 3266 13d0 723E     		jb	.L215	#,
 473:sieve_extend.c ****     }
 3267              		.loc 1 473 13 is_stmt 1 view .LVU1055
 3268              	# sieve_extend.c:473:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 473:sieve_extend.c ****     }
 3269              		.loc 1 473 51 is_stmt 0 view .LVU1056
 3270 13d2 4989F5   		mov	r13, rsi	# tmp439, range_start
 3271              	# sieve_extend.c:473:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 473:sieve_extend.c ****     }
 3272              		.loc 1 473 54 view .LVU1057
 3273 13d5 C442C9F7 		shlx	r14, r10, rsi	# tmp442, tmp184, range_start
 3273      F2
 3274              	# sieve_extend.c:473:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 473:sieve_extend.c ****     }
 3275              		.loc 1 473 51 view .LVU1058
 3276 13da 49C1ED06 		shr	r13, 6	# tmp439,
 3277              	# sieve_extend.c:472:         for (; range_start <= range_start_atvector; range_start += step) 
 472:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3278              		.loc 1 472 65 view .LVU1059
 3279 13de 4801D6   		add	rsi, rdx	# range_start, step
 3280              	# sieve_extend.c:473:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 473:sieve_extend.c ****     }
 3281              		.loc 1 473 51 view .LVU1060
 3282 13e1 4E0934EF 		or	QWORD PTR [rdi+r13*8], r14	# *_21, tmp442
 472:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3283              		.loc 1 472 53 is_stmt 1 view .LVU1061
 472:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3284              		.loc 1 472 16 view .LVU1062
 3285              	# sieve_extend.c:472:         for (; range_start <= range_start_atvector; range_start += step) 
 472:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3286              		.loc 1 472 9 is_stmt 0 view .LVU1063
 3287 13e5 4839F0   		cmp	rax, rsi	# range_start_atvector, range_start
 3288 13e8 7226     		jb	.L215	#,
 473:sieve_extend.c ****     }
 3289              		.loc 1 473 13 is_stmt 1 view .LVU1064
 3290              	# sieve_extend.c:473:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 473:sieve_extend.c ****     }
 3291              		.loc 1 473 51 is_stmt 0 view .LVU1065
 3292 13ea 4989F7   		mov	r15, rsi	# tmp443, range_start
 3293              	# sieve_extend.c:473:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 473:sieve_extend.c ****     }
 3294              		.loc 1 473 54 view .LVU1066
 3295 13ed C442C9F7 		shlx	r8, r10, rsi	# tmp446, tmp184, range_start
GAS LISTING /tmp/ccLUVin9.s 			page 97


 3295      C2
 3296              	# sieve_extend.c:473:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 473:sieve_extend.c ****     }
 3297              		.loc 1 473 51 view .LVU1067
 3298 13f2 49C1EF06 		shr	r15, 6	# tmp443,
 3299              	# sieve_extend.c:472:         for (; range_start <= range_start_atvector; range_start += step) 
 472:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3300              		.loc 1 472 65 view .LVU1068
 3301 13f6 4801D6   		add	rsi, rdx	# range_start, step
 3302              	# sieve_extend.c:473:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 473:sieve_extend.c ****     }
 3303              		.loc 1 473 51 view .LVU1069
 3304 13f9 4E0904FF 		or	QWORD PTR [rdi+r15*8], r8	# *_21, tmp446
 472:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3305              		.loc 1 472 53 is_stmt 1 view .LVU1070
 472:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3306              		.loc 1 472 16 view .LVU1071
 3307              	# sieve_extend.c:472:         for (; range_start <= range_start_atvector; range_start += step) 
 472:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3308              		.loc 1 472 9 is_stmt 0 view .LVU1072
 3309 13fd 4839F0   		cmp	rax, rsi	# range_start_atvector, range_start
 3310 1400 0F8330FF 		jnb	.L217	#,
 3310      FFFF
 3311 1406 662E0F1F 		.p2align 4
 3311      84000000 
 3311      0000
 3312              		.p2align 3
 3313              	.L215:
 476:sieve_extend.c **** 
 3314              		.loc 1 476 5 is_stmt 1 view .LVU1073
 3315              	# sieve_extend.c:476:     const counter_t range_stop_unique =  min(range_start + VECTOR_SIZE_counte
 476:sieve_extend.c **** 
 3316              		.loc 1 476 42 is_stmt 0 view .LVU1074
 3317 1410 4989D2   		mov	r10, rdx	# tmp185, step
 3318 1413 49C1E208 		sal	r10, 8	# tmp185,
 3319 1417 4901F2   		add	r10, rsi	# tmp186, range_start
 3320              	# sieve_extend.c:476:     const counter_t range_stop_unique =  min(range_start + VECTOR_SIZE_counte
 476:sieve_extend.c **** 
 3321              		.loc 1 476 21 view .LVU1075
 3322 141a 4939CA   		cmp	r10, rcx	# tmp186, range_stop
 3323 141d 4C0F47D1 		cmova	r10, rcx	# tmp186,, range_stop_unique, range_stop
 3324              	.LVL126:
 3325              	.LBB328:
 480:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 3326              		.loc 1 480 10 is_stmt 1 view .LVU1076
 480:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 3327              		.loc 1 480 41 view .LVU1077
 3328              	# sieve_extend.c:480:     for (counter_t index = range_start; index < range_stop_unique;) {
 480:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 3329              		.loc 1 480 5 is_stmt 0 view .LVU1078
 3330 1421 4C39D6   		cmp	rsi, r10	# range_start, range_stop_unique
 3331 1424 0F83EA04 		jnb	.L214	#,
 3331      0000
 3332              	.LBB329:
 3333              	.LBB330:
 3334              	.LBB331:
 3335              	# sieve_extend.c:426:     register const counter_t range_stop_vector = vectorindex(range_stop);
GAS LISTING /tmp/ccLUVin9.s 			page 98


 426:sieve_extend.c ****     register const counter_t step_2 = step * 2;
 3336              		.loc 1 426 30 view .LVU1079
 3337 142a 48C1E908 		shr	rcx, 8	# range_stop,
 3338              	.LVL127:
 3339              	# sieve_extend.c:429:     register const counter_t step_4 = step * 4;
 429:sieve_extend.c **** 
 3340              		.loc 1 429 30 view .LVU1080
 3341 142e 4C8D2C95 		lea	r13, 0[0+rdx*4]	# step_4,
 3341      00000000 
 3342              	.LBB332:
 3343              	# sieve_extend.c:432:         register const counter_t loop_stop_vector = (range_stop_vector > step
 432:sieve_extend.c ****         //#pragma GCC unroll 16
 3344              		.loc 1 432 113 view .LVU1081
 3345 1436 4889CB   		mov	rbx, rcx	# iftmp.57_71, range_stop_vector
 3346              	.LBE332:
 3347              	# sieve_extend.c:426:     register const counter_t range_stop_vector = vectorindex(range_stop);
 426:sieve_extend.c ****     register const counter_t step_2 = step * 2;
 3348              		.loc 1 426 30 view .LVU1082
 3349 1439 4989C8   		mov	r8, rcx	# range_stop_vector, range_stop
 3350              	.LBB333:
 3351              	# sieve_extend.c:432:         register const counter_t loop_stop_vector = (range_stop_vector > step
 432:sieve_extend.c ****         //#pragma GCC unroll 16
 3352              		.loc 1 432 113 view .LVU1083
 3353 143c 4C29EB   		sub	rbx, r13	# iftmp.57_71, step_4
 3354 143f 4883FA01 		cmp	rdx, 1	# step,
 3355 1443 0F85EE04 		jne	.L395	#,
 3355      0000
 3356 1449 4883F904 		cmp	rcx, 4	# range_stop_vector,
 3357 144d BA000000 		mov	edx, 0	# tmp208,
 3357      00
 3358              	.LVL128:
 432:sieve_extend.c ****         //#pragma GCC unroll 16
 3359              		.loc 1 432 113 view .LVU1084
 3360              	.LBE333:
 3361              	.LBE331:
 3362              	.LBE330:
 3363              	# sieve_extend.c:482:         register bitvector_t quadmask = { };
 482:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 3364              		.loc 1 482 30 view .LVU1085
 3365 1452 C5E9EFD2 		vpxor	xmm2, xmm2, xmm2	# tmp209
 3366              	# sieve_extend.c:489:             quadmask[word] |= markmask(index);
 489:sieve_extend.c ****             index += step;
 3367              		.loc 1 489 31 view .LVU1086
 3368 1456 41BB0100 		mov	r11d, 1	# tmp213,
 3368      0000
 3369 145c 480F46DA 		cmovbe	rbx, rdx	# iftmp.57_71,, iftmp.57_164, tmp208
 3370              	.LVL129:
 3371              		.p2align 4
 3372              		.p2align 3
 3373              	.L232:
 481:sieve_extend.c ****         register bitvector_t quadmask = { };
 3374              		.loc 1 481 9 is_stmt 1 view .LVU1087
 3375              	# sieve_extend.c:481:         const counter_t current_vector_start_word =  vectorindex(index) << (S
 481:sieve_extend.c ****         register bitvector_t quadmask = { };
 3376              		.loc 1 481 54 is_stmt 0 view .LVU1088
 3377 1460 4889F1   		mov	rcx, rsi	# current_vector, range_start
 3378              	# sieve_extend.c:483:         register counter_t word = wordindex(index) - current_vector_start_wor
GAS LISTING /tmp/ccLUVin9.s 			page 99


 483:sieve_extend.c ****         
 3379              		.loc 1 483 35 view .LVU1089
 3380 1463 4889F0   		mov	rax, rsi	# tmp210, range_start
 3381              	# sieve_extend.c:481:         const counter_t current_vector_start_word =  vectorindex(index) << (S
 481:sieve_extend.c ****         register bitvector_t quadmask = { };
 3382              		.loc 1 481 54 view .LVU1090
 3383 1466 48C1E908 		shr	rcx, 8	# current_vector,
 3384              	# sieve_extend.c:483:         register counter_t word = wordindex(index) - current_vector_start_wor
 483:sieve_extend.c ****         
 3385              		.loc 1 483 35 view .LVU1091
 3386 146a 48C1E806 		shr	rax, 6	# tmp210,
 3387              	# sieve_extend.c:481:         const counter_t current_vector_start_word =  vectorindex(index) << (S
 481:sieve_extend.c ****         register bitvector_t quadmask = { };
 3388              		.loc 1 481 25 view .LVU1092
 3389 146e 4C8D2C8D 		lea	r13, 0[0+rcx*4]	# current_vector_start_word,
 3389      00000000 
 3390              	.LVL130:
 482:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 3391              		.loc 1 482 9 is_stmt 1 view .LVU1093
 3392              	# sieve_extend.c:482:         register bitvector_t quadmask = { };
 482:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 3393              		.loc 1 482 30 is_stmt 0 view .LVU1094
 3394 1476 C5FD7F54 		vmovdqa	YMMWORD PTR 32[rsp], ymm2	# quadmask, tmp209
 3394      2420
 483:sieve_extend.c ****         
 3395              		.loc 1 483 9 is_stmt 1 view .LVU1095
 3396              	# sieve_extend.c:483:         register counter_t word = wordindex(index) - current_vector_start_wor
 483:sieve_extend.c ****         
 3397              		.loc 1 483 28 is_stmt 0 view .LVU1096
 3398 147c 4C29E8   		sub	rax, r13	# word, current_vector_start_word
 3399              	.LVL131:
 3400              	.L227:
 489:sieve_extend.c ****             index += step;
 3401              		.loc 1 489 13 is_stmt 1 view .LVU1097
 3402              	# sieve_extend.c:489:             quadmask[word] |= markmask(index);
 489:sieve_extend.c ****             index += step;
 3403              		.loc 1 489 31 is_stmt 0 view .LVU1098
 3404 147f C442C9F7 		shlx	r9, r11, rsi	# tmp212, tmp213, range_start
 3404      CB
 3405              	# sieve_extend.c:489:             quadmask[word] |= markmask(index);
 489:sieve_extend.c ****             index += step;
 3406              		.loc 1 489 28 view .LVU1099
 3407 1484 4C094CC4 		or	QWORD PTR 32[rsp+rax*8], r9	# quadmask, tmp212
 3407      20
 490:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3408              		.loc 1 490 13 is_stmt 1 view .LVU1100
 3409              	# sieve_extend.c:490:             index += step;
 490:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3410              		.loc 1 490 19 is_stmt 0 view .LVU1101
 3411 1489 488D4601 		lea	rax, 1[rsi]	# tmp236,
 3412              	.LVL132:
 3413              	# sieve_extend.c:491:             word = wordindex(index) - current_vector_start_word;
 491:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3414              		.loc 1 491 20 view .LVU1102
 3415 148d 4989C7   		mov	r15, rax	# tmp214, range_start
 3416              	# sieve_extend.c:490:             index += step;
 490:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
GAS LISTING /tmp/ccLUVin9.s 			page 100


 3417              		.loc 1 490 19 view .LVU1103
 3418 1490 4889C6   		mov	rsi, rax	# range_start, tmp236
 491:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3419              		.loc 1 491 13 is_stmt 1 view .LVU1104
 3420              	# sieve_extend.c:491:             word = wordindex(index) - current_vector_start_word;
 491:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3421              		.loc 1 491 20 is_stmt 0 view .LVU1105
 3422 1493 49C1EF06 		shr	r15, 6	# tmp214,
 3423              	# sieve_extend.c:491:             word = wordindex(index) - current_vector_start_word;
 491:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3424              		.loc 1 491 18 view .LVU1106
 3425 1497 4D29EF   		sub	r15, r13	# word, current_vector_start_word
 492:sieve_extend.c ****         
 3426              		.loc 1 492 17 is_stmt 1 view .LVU1107
 3427              	# sieve_extend.c:492:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 492:sieve_extend.c ****         
 3428              		.loc 1 492 9 is_stmt 0 view .LVU1108
 3429 149a 4983FF03 		cmp	r15, 3	# word,
 3430 149e 0F87EC00 		ja	.L368	#,
 3430      0000
 489:sieve_extend.c ****             index += step;
 3431              		.loc 1 489 13 is_stmt 1 view .LVU1109
 3432              	# sieve_extend.c:490:             index += step;
 490:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3433              		.loc 1 490 19 is_stmt 0 view .LVU1110
 3434 14a4 4883C601 		add	rsi, 1	# range_start,
 3435              	# sieve_extend.c:489:             quadmask[word] |= markmask(index);
 489:sieve_extend.c ****             index += step;
 3436              		.loc 1 489 31 view .LVU1111
 3437 14a8 C442F9F7 		shlx	r12, r11, rax	# tmp349, tmp213, range_start
 3437      E3
 3438              	# sieve_extend.c:491:             word = wordindex(index) - current_vector_start_word;
 491:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3439              		.loc 1 491 20 view .LVU1112
 3440 14ad 4989F6   		mov	r14, rsi	# tmp350, range_start
 3441              	# sieve_extend.c:489:             quadmask[word] |= markmask(index);
 489:sieve_extend.c ****             index += step;
 3442              		.loc 1 489 28 view .LVU1113
 3443 14b0 4E0964FC 		or	QWORD PTR 32[rsp+r15*8], r12	# quadmask, tmp349
 3443      20
 490:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3444              		.loc 1 490 13 is_stmt 1 view .LVU1114
 3445              	.LVL133:
 491:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3446              		.loc 1 491 13 view .LVU1115
 3447              	# sieve_extend.c:491:             word = wordindex(index) - current_vector_start_word;
 491:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3448              		.loc 1 491 20 is_stmt 0 view .LVU1116
 3449 14b5 49C1EE06 		shr	r14, 6	# tmp350,
 3450              	# sieve_extend.c:491:             word = wordindex(index) - current_vector_start_word;
 491:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3451              		.loc 1 491 18 view .LVU1117
 3452 14b9 4D29EE   		sub	r14, r13	# word, current_vector_start_word
 492:sieve_extend.c ****         
 3453              		.loc 1 492 17 is_stmt 1 view .LVU1118
 3454              	# sieve_extend.c:492:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 492:sieve_extend.c ****         
GAS LISTING /tmp/ccLUVin9.s 			page 101


 3455              		.loc 1 492 9 is_stmt 0 view .LVU1119
 3456 14bc 4983FE03 		cmp	r14, 3	# word,
 3457 14c0 0F87CA00 		ja	.L368	#,
 3457      0000
 489:sieve_extend.c ****             index += step;
 3458              		.loc 1 489 13 is_stmt 1 view .LVU1120
 3459              	# sieve_extend.c:489:             quadmask[word] |= markmask(index);
 489:sieve_extend.c ****             index += step;
 3460              		.loc 1 489 31 is_stmt 0 view .LVU1121
 3461 14c6 C4C2C9F7 		shlx	rsi, r11, rsi	# tmp352, tmp213, range_start
 3461      F3
 3462              	.LVL134:
 3463              	# sieve_extend.c:489:             quadmask[word] |= markmask(index);
 489:sieve_extend.c ****             index += step;
 3464              		.loc 1 489 28 view .LVU1122
 3465 14cb 4A0974F4 		or	QWORD PTR 32[rsp+r14*8], rsi	# quadmask, tmp352
 3465      20
 490:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3466              		.loc 1 490 13 is_stmt 1 view .LVU1123
 3467              	.LVL135:
 3468              	# sieve_extend.c:490:             index += step;
 490:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3469              		.loc 1 490 19 is_stmt 0 view .LVU1124
 3470 14d0 488D7002 		lea	rsi, 2[rax]	# range_start,
 3471              	.LVL136:
 491:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3472              		.loc 1 491 13 is_stmt 1 view .LVU1125
 3473              	# sieve_extend.c:491:             word = wordindex(index) - current_vector_start_word;
 491:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3474              		.loc 1 491 20 is_stmt 0 view .LVU1126
 3475 14d4 4889F2   		mov	rdx, rsi	# tmp353, range_start
 3476 14d7 48C1EA06 		shr	rdx, 6	# tmp353,
 3477              	# sieve_extend.c:491:             word = wordindex(index) - current_vector_start_word;
 491:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3478              		.loc 1 491 18 view .LVU1127
 3479 14db 4C29EA   		sub	rdx, r13	# word, current_vector_start_word
 492:sieve_extend.c ****         
 3480              		.loc 1 492 17 is_stmt 1 view .LVU1128
 3481              	# sieve_extend.c:492:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 492:sieve_extend.c ****         
 3482              		.loc 1 492 9 is_stmt 0 view .LVU1129
 3483 14de 4883FA03 		cmp	rdx, 3	# word,
 3484 14e2 0F87A800 		ja	.L368	#,
 3484      0000
 489:sieve_extend.c ****             index += step;
 3485              		.loc 1 489 13 is_stmt 1 view .LVU1130
 3486              	# sieve_extend.c:489:             quadmask[word] |= markmask(index);
 489:sieve_extend.c ****             index += step;
 3487              		.loc 1 489 31 is_stmt 0 view .LVU1131
 3488 14e8 C442C9F7 		shlx	r9, r11, rsi	# tmp355, tmp213, range_start
 3488      CB
 3489              	# sieve_extend.c:490:             index += step;
 490:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3490              		.loc 1 490 19 view .LVU1132
 3491 14ed 488D7003 		lea	rsi, 3[rax]	# range_start,
 3492              	.LVL137:
 3493              	# sieve_extend.c:491:             word = wordindex(index) - current_vector_start_word;
GAS LISTING /tmp/ccLUVin9.s 			page 102


 491:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3494              		.loc 1 491 20 view .LVU1133
 3495 14f1 4989F7   		mov	r15, rsi	# tmp356, range_start
 3496              	# sieve_extend.c:489:             quadmask[word] |= markmask(index);
 489:sieve_extend.c ****             index += step;
 3497              		.loc 1 489 28 view .LVU1134
 3498 14f4 4C094CD4 		or	QWORD PTR 32[rsp+rdx*8], r9	# quadmask, tmp355
 3498      20
 490:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3499              		.loc 1 490 13 is_stmt 1 view .LVU1135
 3500              	.LVL138:
 491:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3501              		.loc 1 491 13 view .LVU1136
 3502              	# sieve_extend.c:491:             word = wordindex(index) - current_vector_start_word;
 491:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3503              		.loc 1 491 20 is_stmt 0 view .LVU1137
 3504 14f9 49C1EF06 		shr	r15, 6	# tmp356,
 3505              	# sieve_extend.c:491:             word = wordindex(index) - current_vector_start_word;
 491:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3506              		.loc 1 491 18 view .LVU1138
 3507 14fd 4D29EF   		sub	r15, r13	# word, current_vector_start_word
 492:sieve_extend.c ****         
 3508              		.loc 1 492 17 is_stmt 1 view .LVU1139
 3509              	# sieve_extend.c:492:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 492:sieve_extend.c ****         
 3510              		.loc 1 492 9 is_stmt 0 view .LVU1140
 3511 1500 4983FF03 		cmp	r15, 3	# word,
 3512 1504 0F878600 		ja	.L368	#,
 3512      0000
 489:sieve_extend.c ****             index += step;
 3513              		.loc 1 489 13 is_stmt 1 view .LVU1141
 3514              	# sieve_extend.c:489:             quadmask[word] |= markmask(index);
 489:sieve_extend.c ****             index += step;
 3515              		.loc 1 489 31 is_stmt 0 view .LVU1142
 3516 150a C442C9F7 		shlx	r12, r11, rsi	# tmp358, tmp213, range_start
 3516      E3
 3517              	# sieve_extend.c:490:             index += step;
 490:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3518              		.loc 1 490 19 view .LVU1143
 3519 150f 488D7004 		lea	rsi, 4[rax]	# range_start,
 3520              	.LVL139:
 3521              	# sieve_extend.c:491:             word = wordindex(index) - current_vector_start_word;
 491:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3522              		.loc 1 491 20 view .LVU1144
 3523 1513 4989F6   		mov	r14, rsi	# tmp359, range_start
 3524              	# sieve_extend.c:489:             quadmask[word] |= markmask(index);
 489:sieve_extend.c ****             index += step;
 3525              		.loc 1 489 28 view .LVU1145
 3526 1516 4E0964FC 		or	QWORD PTR 32[rsp+r15*8], r12	# quadmask, tmp358
 3526      20
 490:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3527              		.loc 1 490 13 is_stmt 1 view .LVU1146
 3528              	.LVL140:
 491:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3529              		.loc 1 491 13 view .LVU1147
 3530              	# sieve_extend.c:491:             word = wordindex(index) - current_vector_start_word;
 491:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
GAS LISTING /tmp/ccLUVin9.s 			page 103


 3531              		.loc 1 491 20 is_stmt 0 view .LVU1148
 3532 151b 49C1EE06 		shr	r14, 6	# tmp359,
 3533              	# sieve_extend.c:491:             word = wordindex(index) - current_vector_start_word;
 491:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3534              		.loc 1 491 18 view .LVU1149
 3535 151f 4D29EE   		sub	r14, r13	# word, current_vector_start_word
 492:sieve_extend.c ****         
 3536              		.loc 1 492 17 is_stmt 1 view .LVU1150
 3537              	# sieve_extend.c:492:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 492:sieve_extend.c ****         
 3538              		.loc 1 492 9 is_stmt 0 view .LVU1151
 3539 1522 4983FE03 		cmp	r14, 3	# word,
 3540 1526 7768     		ja	.L368	#,
 489:sieve_extend.c ****             index += step;
 3541              		.loc 1 489 13 is_stmt 1 view .LVU1152
 3542              	# sieve_extend.c:489:             quadmask[word] |= markmask(index);
 489:sieve_extend.c ****             index += step;
 3543              		.loc 1 489 31 is_stmt 0 view .LVU1153
 3544 1528 C4C2C9F7 		shlx	rsi, r11, rsi	# tmp361, tmp213, range_start
 3544      F3
 3545              	.LVL141:
 3546              	# sieve_extend.c:489:             quadmask[word] |= markmask(index);
 489:sieve_extend.c ****             index += step;
 3547              		.loc 1 489 28 view .LVU1154
 3548 152d 4A0974F4 		or	QWORD PTR 32[rsp+r14*8], rsi	# quadmask, tmp361
 3548      20
 490:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3549              		.loc 1 490 13 is_stmt 1 view .LVU1155
 3550              	.LVL142:
 3551              	# sieve_extend.c:490:             index += step;
 490:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3552              		.loc 1 490 19 is_stmt 0 view .LVU1156
 3553 1532 488D7005 		lea	rsi, 5[rax]	# range_start,
 3554              	.LVL143:
 491:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3555              		.loc 1 491 13 is_stmt 1 view .LVU1157
 3556              	# sieve_extend.c:491:             word = wordindex(index) - current_vector_start_word;
 491:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3557              		.loc 1 491 20 is_stmt 0 view .LVU1158
 3558 1536 4889F2   		mov	rdx, rsi	# tmp362, range_start
 3559 1539 48C1EA06 		shr	rdx, 6	# tmp362,
 3560              	# sieve_extend.c:491:             word = wordindex(index) - current_vector_start_word;
 491:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3561              		.loc 1 491 18 view .LVU1159
 3562 153d 4C29EA   		sub	rdx, r13	# word, current_vector_start_word
 492:sieve_extend.c ****         
 3563              		.loc 1 492 17 is_stmt 1 view .LVU1160
 3564              	# sieve_extend.c:492:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 492:sieve_extend.c ****         
 3565              		.loc 1 492 9 is_stmt 0 view .LVU1161
 3566 1540 4883FA03 		cmp	rdx, 3	# word,
 3567 1544 774A     		ja	.L368	#,
 489:sieve_extend.c ****             index += step;
 3568              		.loc 1 489 13 is_stmt 1 view .LVU1162
 3569              	# sieve_extend.c:489:             quadmask[word] |= markmask(index);
 489:sieve_extend.c ****             index += step;
 3570              		.loc 1 489 31 is_stmt 0 view .LVU1163
GAS LISTING /tmp/ccLUVin9.s 			page 104


 3571 1546 C442C9F7 		shlx	r9, r11, rsi	# tmp364, tmp213, range_start
 3571      CB
 3572              	# sieve_extend.c:490:             index += step;
 490:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3573              		.loc 1 490 19 view .LVU1164
 3574 154b 488D7006 		lea	rsi, 6[rax]	# range_start,
 3575              	.LVL144:
 3576              	# sieve_extend.c:491:             word = wordindex(index) - current_vector_start_word;
 491:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3577              		.loc 1 491 20 view .LVU1165
 3578 154f 4989F7   		mov	r15, rsi	# tmp365, range_start
 3579              	# sieve_extend.c:489:             quadmask[word] |= markmask(index);
 489:sieve_extend.c ****             index += step;
 3580              		.loc 1 489 28 view .LVU1166
 3581 1552 4C094CD4 		or	QWORD PTR 32[rsp+rdx*8], r9	# quadmask, tmp364
 3581      20
 490:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3582              		.loc 1 490 13 is_stmt 1 view .LVU1167
 3583              	.LVL145:
 491:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3584              		.loc 1 491 13 view .LVU1168
 3585              	# sieve_extend.c:491:             word = wordindex(index) - current_vector_start_word;
 491:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3586              		.loc 1 491 20 is_stmt 0 view .LVU1169
 3587 1557 49C1EF06 		shr	r15, 6	# tmp365,
 3588              	# sieve_extend.c:491:             word = wordindex(index) - current_vector_start_word;
 491:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3589              		.loc 1 491 18 view .LVU1170
 3590 155b 4D29EF   		sub	r15, r13	# word, current_vector_start_word
 492:sieve_extend.c ****         
 3591              		.loc 1 492 17 is_stmt 1 view .LVU1171
 3592              	# sieve_extend.c:492:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 492:sieve_extend.c ****         
 3593              		.loc 1 492 9 is_stmt 0 view .LVU1172
 3594 155e 4983FF03 		cmp	r15, 3	# word,
 3595 1562 772C     		ja	.L368	#,
 489:sieve_extend.c ****             index += step;
 3596              		.loc 1 489 13 is_stmt 1 view .LVU1173
 3597              	# sieve_extend.c:489:             quadmask[word] |= markmask(index);
 489:sieve_extend.c ****             index += step;
 3598              		.loc 1 489 31 is_stmt 0 view .LVU1174
 3599 1564 C442C9F7 		shlx	r12, r11, rsi	# tmp367, tmp213, range_start
 3599      E3
 3600              	# sieve_extend.c:490:             index += step;
 490:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3601              		.loc 1 490 19 view .LVU1175
 3602 1569 488D7007 		lea	rsi, 7[rax]	# range_start,
 3603              	.LVL146:
 3604              	# sieve_extend.c:491:             word = wordindex(index) - current_vector_start_word;
 491:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3605              		.loc 1 491 20 view .LVU1176
 3606 156d 4889F0   		mov	rax, rsi	# tmp368, range_start
 3607              	.LVL147:
 3608              	# sieve_extend.c:489:             quadmask[word] |= markmask(index);
 489:sieve_extend.c ****             index += step;
 3609              		.loc 1 489 28 view .LVU1177
 3610 1570 4E0964FC 		or	QWORD PTR 32[rsp+r15*8], r12	# quadmask, tmp367
GAS LISTING /tmp/ccLUVin9.s 			page 105


 3610      20
 490:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3611              		.loc 1 490 13 is_stmt 1 view .LVU1178
 3612              	.LVL148:
 491:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3613              		.loc 1 491 13 view .LVU1179
 3614              	# sieve_extend.c:491:             word = wordindex(index) - current_vector_start_word;
 491:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3615              		.loc 1 491 20 is_stmt 0 view .LVU1180
 3616 1575 48C1E806 		shr	rax, 6	# tmp368,
 3617              	.LVL149:
 3618              	# sieve_extend.c:491:             word = wordindex(index) - current_vector_start_word;
 491:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3619              		.loc 1 491 18 view .LVU1181
 3620 1579 4C29E8   		sub	rax, r13	# word, current_vector_start_word
 3621              	.LVL150:
 492:sieve_extend.c ****         
 3622              		.loc 1 492 17 is_stmt 1 view .LVU1182
 3623              	# sieve_extend.c:492:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 492:sieve_extend.c ****         
 3624              		.loc 1 492 9 is_stmt 0 view .LVU1183
 3625 157c 4883F803 		cmp	rax, 3	# word,
 3626 1580 0F86F9FE 		jbe	.L227	#,
 3626      FFFF
 3627              	.LVL151:
 3628 1586 662E0F1F 		.p2align 4
 3628      84000000 
 3628      0000
 3629              		.p2align 3
 3630              	.L368:
 495:sieve_extend.c ****         // const counter_t range_stop_vector = vectorindex(range_stop);
 3631              		.loc 1 495 9 is_stmt 1 view .LVU1184
 498:sieve_extend.c ****     }
 3632              		.loc 1 498 9 view .LVU1185
 3633 1590 C5FD6F44 		vmovdqa	ymm0, YMMWORD PTR 32[rsp]	# quadmask.56_166, quadmask
 3633      2420
 3634              	.LVL152:
 3635              	.LBB338:
 3636              	.LBI330:
 422:sieve_extend.c **** 
 3637              		.loc 1 422 20 view .LVU1186
 3638              	.LBB336:
 425:sieve_extend.c ****     register const counter_t range_stop_vector = vectorindex(range_stop);
 3639              		.loc 1 425 5 view .LVU1187
 426:sieve_extend.c ****     register const counter_t step_2 = step * 2;
 3640              		.loc 1 426 5 view .LVU1188
 427:sieve_extend.c ****     register const counter_t step_3 = step * 3;
 3641              		.loc 1 427 5 view .LVU1189
 428:sieve_extend.c ****     register const counter_t step_4 = step * 4;
 3642              		.loc 1 428 5 view .LVU1190
 429:sieve_extend.c **** 
 3643              		.loc 1 429 5 view .LVU1191
 431:sieve_extend.c ****         register const counter_t loop_stop_vector = (range_stop_vector > step_4) ? (range_stop_vect
 3644              		.loc 1 431 5 view .LVU1192
 3645              	# sieve_extend.c:431:     if (current_vector+step_4 <= range_stop_vector) {
 431:sieve_extend.c ****         register const counter_t loop_stop_vector = (range_stop_vector > step_4) ? (range_stop_vect
 3646              		.loc 1 431 23 is_stmt 0 view .LVU1193
GAS LISTING /tmp/ccLUVin9.s 			page 106


 3647 1596 488D5104 		lea	rdx, 4[rcx]	# current_vector,
 3648              	# sieve_extend.c:431:     if (current_vector+step_4 <= range_stop_vector) {
 431:sieve_extend.c ****         register const counter_t loop_stop_vector = (range_stop_vector > step_4) ? (range_stop_vect
 3649              		.loc 1 431 8 view .LVU1194
 3650 159a 4939D0   		cmp	r8, rdx	# range_stop_vector, current_vector
 3651 159d 0F820D02 		jb	.L228	#,
 3651      0000
 3652              	.LBB334:
 432:sieve_extend.c ****         //#pragma GCC unroll 16
 3653              		.loc 1 432 9 is_stmt 1 view .LVU1195
 3654              	.LVL153:
 435:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 3655              		.loc 1 435 15 view .LVU1196
 3656              	# sieve_extend.c:435:         for(; current_vector <= loop_stop_vector; current_vector += step_4) {
 435:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 3657              		.loc 1 435 9 is_stmt 0 view .LVU1197
 3658 15a3 4839CB   		cmp	rbx, rcx	# iftmp.57_164, current_vector
 3659 15a6 0F820402 		jb	.L228	#,
 3659      0000
 3660 15ac 4989D9   		mov	r9, rbx	# tmp231, iftmp.57_164
 3661 15af 4989CD   		mov	r13, rcx	# current_vector, current_vector
 3662              	.LVL154:
 435:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 3663              		.loc 1 435 9 view .LVU1198
 3664 15b2 49C1E505 		sal	r13, 5	# current_vector,
 3665 15b6 4929D1   		sub	r9, rdx	# tmp231, current_vector
 3666 15b9 4983C104 		add	r9, 4	# tmp232,
 3667 15bd 4901FD   		add	r13, rdi	# ivtmp.259, bitarray_word
 3668 15c0 49C1E902 		shr	r9, 2	# tmp230,
 3669 15c4 4183E103 		and	r9d, 3	# tmp230,
 3670 15c8 0F84A101 		je	.L229	#,
 3670      0000
 436:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= mask;
 3671              		.loc 1 436 13 is_stmt 1 view .LVU1199
 3672              	# sieve_extend.c:436:             bitarray_vector[current_vector       ] |= mask;
 436:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= mask;
 3673              		.loc 1 436 52 is_stmt 0 view .LVU1200
 3674 15ce C4417DEB 		vpor	ymm12, ymm0, YMMWORD PTR 0[r13]	# tmp335, quadmask.56_166, MEM[base: _102, offset: 0B]
 3674      6500
 3675              	# sieve_extend.c:437:             bitarray_vector[current_vector+step  ] |= mask;
 437:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= mask;
 3676              		.loc 1 437 52 view .LVU1201
 3677 15d4 C4417DEB 		vpor	ymm13, ymm0, YMMWORD PTR 32[r13]	# tmp336, quadmask.56_166, MEM[base: _102, offset: 32B]
 3677      6D20
 3678              	# sieve_extend.c:438:             bitarray_vector[current_vector+step_2] |= mask;
 438:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= mask;
 3679              		.loc 1 438 52 view .LVU1202
 3680 15da C4417DEB 		vpor	ymm14, ymm0, YMMWORD PTR 64[r13]	# tmp337, quadmask.56_166, MEM[base: _102, offset: 64B]
 3680      7540
 3681              	# sieve_extend.c:439:             bitarray_vector[current_vector+step_3] |= mask;
 439:sieve_extend.c ****         }
 3682              		.loc 1 439 52 view .LVU1203
 3683 15e0 C4417DEB 		vpor	ymm15, ymm0, YMMWORD PTR 96[r13]	# tmp338, quadmask.56_166, MEM[base: _102, offset: 96B]
 3683      7D60
 3684              	# sieve_extend.c:436:             bitarray_vector[current_vector       ] |= mask;
 436:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= mask;
 3685              		.loc 1 436 52 view .LVU1204
GAS LISTING /tmp/ccLUVin9.s 			page 107


 3686 15e6 C4417D7F 		vmovdqa	YMMWORD PTR 0[r13], ymm12	# MEM[base: _102, offset: 0B], tmp335
 3686      6500
 437:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= mask;
 3687              		.loc 1 437 13 is_stmt 1 view .LVU1205
 3688 15ec 4983ED80 		sub	r13, -128	# ivtmp.259,
 3689              	# sieve_extend.c:437:             bitarray_vector[current_vector+step  ] |= mask;
 437:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= mask;
 3690              		.loc 1 437 52 is_stmt 0 view .LVU1206
 3691 15f0 C4417D7F 		vmovdqa	YMMWORD PTR -96[r13], ymm13	# MEM[base: _102, offset: 32B], tmp336
 3691      6DA0
 438:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= mask;
 3692              		.loc 1 438 13 is_stmt 1 view .LVU1207
 3693              	# sieve_extend.c:435:         for(; current_vector <= loop_stop_vector; current_vector += step_4) {
 435:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 3694              		.loc 1 435 66 is_stmt 0 view .LVU1208
 3695 15f6 4889D1   		mov	rcx, rdx	# current_vector, current_vector
 3696              	.LVL155:
 3697              	# sieve_extend.c:438:             bitarray_vector[current_vector+step_2] |= mask;
 438:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= mask;
 3698              		.loc 1 438 52 view .LVU1209
 3699 15f9 C4417D7F 		vmovdqa	YMMWORD PTR -64[r13], ymm14	# MEM[base: _102, offset: 64B], tmp337
 3699      75C0
 439:sieve_extend.c ****         }
 3700              		.loc 1 439 13 is_stmt 1 view .LVU1210
 3701              	# sieve_extend.c:439:             bitarray_vector[current_vector+step_3] |= mask;
 439:sieve_extend.c ****         }
 3702              		.loc 1 439 52 is_stmt 0 view .LVU1211
 3703 15ff C4417D7F 		vmovdqa	YMMWORD PTR -32[r13], ymm15	# MEM[base: _102, offset: 96B], tmp338
 3703      7DE0
 435:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 3704              		.loc 1 435 51 is_stmt 1 view .LVU1212
 3705              	.LVL156:
 435:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 3706              		.loc 1 435 15 view .LVU1213
 3707              	# sieve_extend.c:435:         for(; current_vector <= loop_stop_vector; current_vector += step_4) {
 435:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 3708              		.loc 1 435 9 is_stmt 0 view .LVU1214
 3709 1605 4839DA   		cmp	rdx, rbx	# current_vector, iftmp.57_164
 3710 1608 0F87A201 		ja	.L228	#,
 3710      0000
 435:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 3711              		.loc 1 435 9 view .LVU1215
 3712 160e 4983F901 		cmp	r9, 1	# tmp233,
 3713 1612 488D5204 		lea	rdx, 4[rdx]	# current_vector,
 3714              	.LVL157:
 435:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 3715              		.loc 1 435 9 view .LVU1216
 3716 1616 0F845301 		je	.L229	#,
 3716      0000
 3717 161c 4983F902 		cmp	r9, 2	# tmp233,
 3718 1620 7438     		je	.L332	#,
 436:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= mask;
 3719              		.loc 1 436 13 is_stmt 1 view .LVU1217
 3720              	# sieve_extend.c:436:             bitarray_vector[current_vector       ] |= mask;
 436:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= mask;
 3721              		.loc 1 436 52 is_stmt 0 view .LVU1218
 3722 1622 C4C17DEB 		vpor	ymm1, ymm0, YMMWORD PTR 0[r13]	# tmp339, quadmask.56_166, MEM[base: _102, offset: 0B]
GAS LISTING /tmp/ccLUVin9.s 			page 108


 3722      4D00
 3723              	# sieve_extend.c:437:             bitarray_vector[current_vector+step  ] |= mask;
 437:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= mask;
 3724              		.loc 1 437 52 view .LVU1219
 3725 1628 C4C17DEB 		vpor	ymm3, ymm0, YMMWORD PTR 32[r13]	# tmp340, quadmask.56_166, MEM[base: _102, offset: 32B]
 3725      5D20
 3726              	# sieve_extend.c:438:             bitarray_vector[current_vector+step_2] |= mask;
 438:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= mask;
 3727              		.loc 1 438 52 view .LVU1220
 3728 162e C4C17DEB 		vpor	ymm4, ymm0, YMMWORD PTR 64[r13]	# tmp341, quadmask.56_166, MEM[base: _102, offset: 64B]
 3728      6540
 3729              	# sieve_extend.c:439:             bitarray_vector[current_vector+step_3] |= mask;
 439:sieve_extend.c ****         }
 3730              		.loc 1 439 52 view .LVU1221
 3731 1634 C4C17DEB 		vpor	ymm5, ymm0, YMMWORD PTR 96[r13]	# tmp342, quadmask.56_166, MEM[base: _102, offset: 96B]
 3731      6D60
 3732              	# sieve_extend.c:436:             bitarray_vector[current_vector       ] |= mask;
 436:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= mask;
 3733              		.loc 1 436 52 view .LVU1222
 3734 163a C4C17D7F 		vmovdqa	YMMWORD PTR 0[r13], ymm1	# MEM[base: _102, offset: 0B], tmp339
 3734      4D00
 437:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= mask;
 3735              		.loc 1 437 13 is_stmt 1 view .LVU1223
 3736 1640 488D5108 		lea	rdx, 8[rcx]	# current_vector,
 3737              	.LVL158:
 3738              	# sieve_extend.c:437:             bitarray_vector[current_vector+step  ] |= mask;
 437:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= mask;
 3739              		.loc 1 437 52 is_stmt 0 view .LVU1224
 3740 1644 C4C17D7F 		vmovdqa	YMMWORD PTR 32[r13], ymm3	# MEM[base: _102, offset: 32B], tmp340
 3740      5D20
 438:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= mask;
 3741              		.loc 1 438 13 is_stmt 1 view .LVU1225
 3742 164a 4983ED80 		sub	r13, -128	# ivtmp.259,
 3743              	# sieve_extend.c:438:             bitarray_vector[current_vector+step_2] |= mask;
 438:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= mask;
 3744              		.loc 1 438 52 is_stmt 0 view .LVU1226
 3745 164e C4C17D7F 		vmovdqa	YMMWORD PTR -64[r13], ymm4	# MEM[base: _102, offset: 64B], tmp341
 3745      65C0
 439:sieve_extend.c ****         }
 3746              		.loc 1 439 13 is_stmt 1 view .LVU1227
 3747              	# sieve_extend.c:439:             bitarray_vector[current_vector+step_3] |= mask;
 439:sieve_extend.c ****         }
 3748              		.loc 1 439 52 is_stmt 0 view .LVU1228
 3749 1654 C4C17D7F 		vmovdqa	YMMWORD PTR -32[r13], ymm5	# MEM[base: _102, offset: 96B], tmp342
 3749      6DE0
 435:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 3750              		.loc 1 435 51 is_stmt 1 view .LVU1229
 435:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 3751              		.loc 1 435 15 view .LVU1230
 3752              	.LVL159:
 3753              	.L332:
 436:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= mask;
 3754              		.loc 1 436 13 view .LVU1231
 3755              	# sieve_extend.c:436:             bitarray_vector[current_vector       ] |= mask;
 436:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= mask;
 3756              		.loc 1 436 52 is_stmt 0 view .LVU1232
 3757 165a C4C17DEB 		vpor	ymm6, ymm0, YMMWORD PTR 0[r13]	# tmp344, quadmask.56_166, MEM[base: _102, offset: 0B]
GAS LISTING /tmp/ccLUVin9.s 			page 109


 3757      7500
 3758              	# sieve_extend.c:437:             bitarray_vector[current_vector+step  ] |= mask;
 437:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= mask;
 3759              		.loc 1 437 52 view .LVU1233
 3760 1660 C4C17DEB 		vpor	ymm7, ymm0, YMMWORD PTR 32[r13]	# tmp345, quadmask.56_166, MEM[base: _102, offset: 32B]
 3760      7D20
 3761              	# sieve_extend.c:438:             bitarray_vector[current_vector+step_2] |= mask;
 438:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= mask;
 3762              		.loc 1 438 52 view .LVU1234
 3763 1666 C4417DEB 		vpor	ymm8, ymm0, YMMWORD PTR 64[r13]	# tmp346, quadmask.56_166, MEM[base: _102, offset: 64B]
 3763      4540
 3764              	# sieve_extend.c:439:             bitarray_vector[current_vector+step_3] |= mask;
 439:sieve_extend.c ****         }
 3765              		.loc 1 439 52 view .LVU1235
 3766 166c C4417DEB 		vpor	ymm9, ymm0, YMMWORD PTR 96[r13]	# tmp347, quadmask.56_166, MEM[base: _102, offset: 96B]
 3766      4D60
 3767              	# sieve_extend.c:436:             bitarray_vector[current_vector       ] |= mask;
 436:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= mask;
 3768              		.loc 1 436 52 view .LVU1236
 3769 1672 C4C17D7F 		vmovdqa	YMMWORD PTR 0[r13], ymm6	# MEM[base: _102, offset: 0B], tmp344
 3769      7500
 437:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= mask;
 3770              		.loc 1 437 13 is_stmt 1 view .LVU1237
 3771 1678 488D5204 		lea	rdx, 4[rdx]	# current_vector,
 3772              	# sieve_extend.c:437:             bitarray_vector[current_vector+step  ] |= mask;
 437:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= mask;
 3773              		.loc 1 437 52 is_stmt 0 view .LVU1238
 3774 167c C4C17D7F 		vmovdqa	YMMWORD PTR 32[r13], ymm7	# MEM[base: _102, offset: 32B], tmp345
 3774      7D20
 438:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= mask;
 3775              		.loc 1 438 13 is_stmt 1 view .LVU1239
 3776 1682 4983ED80 		sub	r13, -128	# ivtmp.259,
 3777              	# sieve_extend.c:438:             bitarray_vector[current_vector+step_2] |= mask;
 438:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= mask;
 3778              		.loc 1 438 52 is_stmt 0 view .LVU1240
 3779 1686 C4417D7F 		vmovdqa	YMMWORD PTR -64[r13], ymm8	# MEM[base: _102, offset: 64B], tmp346
 3779      45C0
 439:sieve_extend.c ****         }
 3780              		.loc 1 439 13 is_stmt 1 view .LVU1241
 3781              	# sieve_extend.c:439:             bitarray_vector[current_vector+step_3] |= mask;
 439:sieve_extend.c ****         }
 3782              		.loc 1 439 52 is_stmt 0 view .LVU1242
 3783 168c C4417D7F 		vmovdqa	YMMWORD PTR -32[r13], ymm9	# MEM[base: _102, offset: 96B], tmp347
 3783      4DE0
 435:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 3784              		.loc 1 435 51 is_stmt 1 view .LVU1243
 435:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 3785              		.loc 1 435 15 view .LVU1244
 3786 1692 E9D80000 		jmp	.L229	#
 3786      00
 3787              	.LVL160:
 3788              		.p2align 4,,7
 3789 1697 90       		.p2align 3
 3790              	.L396:
 436:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= mask;
 3791              		.loc 1 436 13 view .LVU1245
 3792              	# sieve_extend.c:436:             bitarray_vector[current_vector       ] |= mask;
GAS LISTING /tmp/ccLUVin9.s 			page 110


 436:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= mask;
 3793              		.loc 1 436 52 is_stmt 0 view .LVU1246
 3794 1698 C4C17DEB 		vpor	ymm1, ymm0, YMMWORD PTR 128[r13]	# tmp251, quadmask.56_166, MEM[base: _102, offset: 0B]
 3794      8D800000 
 3794      00
 3795              	# sieve_extend.c:437:             bitarray_vector[current_vector+step  ] |= mask;
 437:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= mask;
 3796              		.loc 1 437 52 view .LVU1247
 3797 16a1 C4C17DEB 		vpor	ymm3, ymm0, YMMWORD PTR 160[r13]	# tmp252, quadmask.56_166, MEM[base: _102, offset: 32B]
 3797      9DA00000 
 3797      00
 3798              	# sieve_extend.c:438:             bitarray_vector[current_vector+step_2] |= mask;
 438:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= mask;
 3799              		.loc 1 438 52 view .LVU1248
 3800 16aa C4C17DEB 		vpor	ymm4, ymm0, YMMWORD PTR 192[r13]	# tmp253, quadmask.56_166, MEM[base: _102, offset: 64B]
 3800      A5C00000 
 3800      00
 3801              	# sieve_extend.c:439:             bitarray_vector[current_vector+step_3] |= mask;
 439:sieve_extend.c ****         }
 3802              		.loc 1 439 52 view .LVU1249
 3803 16b3 C4C17DEB 		vpor	ymm5, ymm0, YMMWORD PTR 224[r13]	# tmp254, quadmask.56_166, MEM[base: _102, offset: 96B]
 3803      ADE00000 
 3803      00
 3804              	# sieve_extend.c:436:             bitarray_vector[current_vector       ] |= mask;
 436:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= mask;
 3805              		.loc 1 436 52 view .LVU1250
 3806 16bc C4C17DEB 		vpor	ymm6, ymm0, YMMWORD PTR 256[r13]	# tmp258, quadmask.56_166, MEM[base: _102, offset: 0B]
 3806      B5000100 
 3806      00
 3807              	# sieve_extend.c:437:             bitarray_vector[current_vector+step  ] |= mask;
 437:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= mask;
 3808              		.loc 1 437 52 view .LVU1251
 3809 16c5 C4C17DEB 		vpor	ymm7, ymm0, YMMWORD PTR 288[r13]	# tmp259, quadmask.56_166, MEM[base: _102, offset: 32B]
 3809      BD200100 
 3809      00
 3810              	# sieve_extend.c:438:             bitarray_vector[current_vector+step_2] |= mask;
 438:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= mask;
 3811              		.loc 1 438 52 view .LVU1252
 3812 16ce C4417DEB 		vpor	ymm8, ymm0, YMMWORD PTR 320[r13]	# tmp260, quadmask.56_166, MEM[base: _102, offset: 64B]
 3812      85400100 
 3812      00
 3813              	# sieve_extend.c:439:             bitarray_vector[current_vector+step_3] |= mask;
 439:sieve_extend.c ****         }
 3814              		.loc 1 439 52 view .LVU1253
 3815 16d7 C4417DEB 		vpor	ymm9, ymm0, YMMWORD PTR 352[r13]	# tmp261, quadmask.56_166, MEM[base: _102, offset: 96B]
 3815      8D600100 
 3815      00
 3816              	# sieve_extend.c:436:             bitarray_vector[current_vector       ] |= mask;
 436:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= mask;
 3817              		.loc 1 436 52 view .LVU1254
 3818 16e0 C4417DEB 		vpor	ymm10, ymm0, YMMWORD PTR 384[r13]	# tmp265, quadmask.56_166, MEM[base: _102, offset: 0B]
 3818      95800100 
 3818      00
 3819              	# sieve_extend.c:437:             bitarray_vector[current_vector+step  ] |= mask;
 437:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= mask;
 3820              		.loc 1 437 52 view .LVU1255
 3821 16e9 C4417DEB 		vpor	ymm11, ymm0, YMMWORD PTR 416[r13]	# tmp266, quadmask.56_166, MEM[base: _102, offset: 32B]
GAS LISTING /tmp/ccLUVin9.s 			page 111


 3821      9DA00100 
 3821      00
 3822              	# sieve_extend.c:438:             bitarray_vector[current_vector+step_2] |= mask;
 438:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= mask;
 3823              		.loc 1 438 52 view .LVU1256
 3824 16f2 C4417DEB 		vpor	ymm12, ymm0, YMMWORD PTR 448[r13]	# tmp267, quadmask.56_166, MEM[base: _102, offset: 64B]
 3824      A5C00100 
 3824      00
 3825              	# sieve_extend.c:439:             bitarray_vector[current_vector+step_3] |= mask;
 439:sieve_extend.c ****         }
 3826              		.loc 1 439 52 view .LVU1257
 3827 16fb C4417DEB 		vpor	ymm13, ymm0, YMMWORD PTR 480[r13]	# tmp268, quadmask.56_166, MEM[base: _102, offset: 96B]
 3827      ADE00100 
 3827      00
 3828              	# sieve_extend.c:436:             bitarray_vector[current_vector       ] |= mask;
 436:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= mask;
 3829              		.loc 1 436 52 view .LVU1258
 3830 1704 C4C17D7F 		vmovdqa	YMMWORD PTR 128[r13], ymm1	# MEM[base: _102, offset: 0B], tmp251
 3830      8D800000 
 3830      00
 437:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= mask;
 3831              		.loc 1 437 13 is_stmt 1 view .LVU1259
 3832 170d 488D5210 		lea	rdx, 16[rdx]	# current_vector,
 3833              	# sieve_extend.c:437:             bitarray_vector[current_vector+step  ] |= mask;
 437:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= mask;
 3834              		.loc 1 437 52 is_stmt 0 view .LVU1260
 3835 1711 C4C17D7F 		vmovdqa	YMMWORD PTR 160[r13], ymm3	# MEM[base: _102, offset: 32B], tmp252
 3835      9DA00000 
 3835      00
 438:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= mask;
 3836              		.loc 1 438 13 is_stmt 1 view .LVU1261
 3837 171a 4981C500 		add	r13, 512	# ivtmp.259,
 3837      020000
 3838              	# sieve_extend.c:438:             bitarray_vector[current_vector+step_2] |= mask;
 438:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= mask;
 3839              		.loc 1 438 52 is_stmt 0 view .LVU1262
 3840 1721 C4C17D7F 		vmovdqa	YMMWORD PTR -320[r13], ymm4	# MEM[base: _102, offset: 64B], tmp253
 3840      A5C0FEFF 
 3840      FF
 439:sieve_extend.c ****         }
 3841              		.loc 1 439 13 is_stmt 1 view .LVU1263
 3842              	# sieve_extend.c:439:             bitarray_vector[current_vector+step_3] |= mask;
 439:sieve_extend.c ****         }
 3843              		.loc 1 439 52 is_stmt 0 view .LVU1264
 3844 172a C4C17D7F 		vmovdqa	YMMWORD PTR -288[r13], ymm5	# MEM[base: _102, offset: 96B], tmp254
 3844      ADE0FEFF 
 3844      FF
 435:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 3845              		.loc 1 435 51 is_stmt 1 view .LVU1265
 435:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 3846              		.loc 1 435 15 view .LVU1266
 436:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= mask;
 3847              		.loc 1 436 13 view .LVU1267
 3848              	# sieve_extend.c:436:             bitarray_vector[current_vector       ] |= mask;
 436:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= mask;
 3849              		.loc 1 436 52 is_stmt 0 view .LVU1268
 3850 1733 C4C17D7F 		vmovdqa	YMMWORD PTR -256[r13], ymm6	# MEM[base: _102, offset: 0B], tmp258
GAS LISTING /tmp/ccLUVin9.s 			page 112


 3850      B500FFFF 
 3850      FF
 437:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= mask;
 3851              		.loc 1 437 13 is_stmt 1 view .LVU1269
 3852              	# sieve_extend.c:437:             bitarray_vector[current_vector+step  ] |= mask;
 437:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= mask;
 3853              		.loc 1 437 52 is_stmt 0 view .LVU1270
 3854 173c C4C17D7F 		vmovdqa	YMMWORD PTR -224[r13], ymm7	# MEM[base: _102, offset: 32B], tmp259
 3854      BD20FFFF 
 3854      FF
 438:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= mask;
 3855              		.loc 1 438 13 is_stmt 1 view .LVU1271
 3856              	# sieve_extend.c:438:             bitarray_vector[current_vector+step_2] |= mask;
 438:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= mask;
 3857              		.loc 1 438 52 is_stmt 0 view .LVU1272
 3858 1745 C4417D7F 		vmovdqa	YMMWORD PTR -192[r13], ymm8	# MEM[base: _102, offset: 64B], tmp260
 3858      8540FFFF 
 3858      FF
 439:sieve_extend.c ****         }
 3859              		.loc 1 439 13 is_stmt 1 view .LVU1273
 3860              	# sieve_extend.c:439:             bitarray_vector[current_vector+step_3] |= mask;
 439:sieve_extend.c ****         }
 3861              		.loc 1 439 52 is_stmt 0 view .LVU1274
 3862 174e C4417D7F 		vmovdqa	YMMWORD PTR -160[r13], ymm9	# MEM[base: _102, offset: 96B], tmp261
 3862      8D60FFFF 
 3862      FF
 435:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 3863              		.loc 1 435 51 is_stmt 1 view .LVU1275
 435:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 3864              		.loc 1 435 15 view .LVU1276
 436:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= mask;
 3865              		.loc 1 436 13 view .LVU1277
 3866              	# sieve_extend.c:436:             bitarray_vector[current_vector       ] |= mask;
 436:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= mask;
 3867              		.loc 1 436 52 is_stmt 0 view .LVU1278
 3868 1757 C4417D7F 		vmovdqa	YMMWORD PTR -128[r13], ymm10	# MEM[base: _102, offset: 0B], tmp265
 3868      5580
 437:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= mask;
 3869              		.loc 1 437 13 is_stmt 1 view .LVU1279
 3870              	# sieve_extend.c:437:             bitarray_vector[current_vector+step  ] |= mask;
 437:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= mask;
 3871              		.loc 1 437 52 is_stmt 0 view .LVU1280
 3872 175d C4417D7F 		vmovdqa	YMMWORD PTR -96[r13], ymm11	# MEM[base: _102, offset: 32B], tmp266
 3872      5DA0
 438:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= mask;
 3873              		.loc 1 438 13 is_stmt 1 view .LVU1281
 3874              	# sieve_extend.c:438:             bitarray_vector[current_vector+step_2] |= mask;
 438:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= mask;
 3875              		.loc 1 438 52 is_stmt 0 view .LVU1282
 3876 1763 C4417D7F 		vmovdqa	YMMWORD PTR -64[r13], ymm12	# MEM[base: _102, offset: 64B], tmp267
 3876      65C0
 439:sieve_extend.c ****         }
 3877              		.loc 1 439 13 is_stmt 1 view .LVU1283
 3878              	# sieve_extend.c:439:             bitarray_vector[current_vector+step_3] |= mask;
 439:sieve_extend.c ****         }
 3879              		.loc 1 439 52 is_stmt 0 view .LVU1284
 3880 1769 C4417D7F 		vmovdqa	YMMWORD PTR -32[r13], ymm13	# MEM[base: _102, offset: 96B], tmp268
GAS LISTING /tmp/ccLUVin9.s 			page 113


 3880      6DE0
 435:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 3881              		.loc 1 435 51 is_stmt 1 view .LVU1285
 435:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 3882              		.loc 1 435 15 view .LVU1286
 3883              	.LVL161:
 3884              	.L229:
 436:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= mask;
 3885              		.loc 1 436 13 view .LVU1287
 3886              	# sieve_extend.c:436:             bitarray_vector[current_vector       ] |= mask;
 436:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= mask;
 3887              		.loc 1 436 52 is_stmt 0 view .LVU1288
 3888 176f C4417DEB 		vpor	ymm10, ymm0, YMMWORD PTR 0[r13]	# tmp217, quadmask.56_166, MEM[base: _102, offset: 0B]
 3888      5500
 3889              	# sieve_extend.c:437:             bitarray_vector[current_vector+step  ] |= mask;
 437:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= mask;
 3890              		.loc 1 437 52 view .LVU1289
 3891 1775 C4417DEB 		vpor	ymm11, ymm0, YMMWORD PTR 32[r13]	# tmp218, quadmask.56_166, MEM[base: _102, offset: 32B]
 3891      5D20
 3892              	# sieve_extend.c:438:             bitarray_vector[current_vector+step_2] |= mask;
 438:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= mask;
 3893              		.loc 1 438 52 view .LVU1290
 3894 177b C4417DEB 		vpor	ymm12, ymm0, YMMWORD PTR 64[r13]	# tmp219, quadmask.56_166, MEM[base: _102, offset: 64B]
 3894      6540
 3895              	# sieve_extend.c:439:             bitarray_vector[current_vector+step_3] |= mask;
 439:sieve_extend.c ****         }
 3896              		.loc 1 439 52 view .LVU1291
 3897 1781 C4417DEB 		vpor	ymm13, ymm0, YMMWORD PTR 96[r13]	# tmp220, quadmask.56_166, MEM[base: _102, offset: 96B]
 3897      6D60
 3898              	# sieve_extend.c:435:         for(; current_vector <= loop_stop_vector; current_vector += step_4) {
 435:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 3899              		.loc 1 435 9 view .LVU1292
 3900 1787 4839DA   		cmp	rdx, rbx	# current_vector, iftmp.57_164
 3901              	# sieve_extend.c:435:         for(; current_vector <= loop_stop_vector; current_vector += step_4) {
 435:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 3902              		.loc 1 435 66 view .LVU1293
 3903 178a 4889D1   		mov	rcx, rdx	# current_vector, current_vector
 3904              	# sieve_extend.c:436:             bitarray_vector[current_vector       ] |= mask;
 436:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= mask;
 3905              		.loc 1 436 52 view .LVU1294
 3906 178d C4417D7F 		vmovdqa	YMMWORD PTR 0[r13], ymm10	# MEM[base: _102, offset: 0B], tmp217
 3906      5500
 437:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= mask;
 3907              		.loc 1 437 13 is_stmt 1 view .LVU1295
 3908              	# sieve_extend.c:437:             bitarray_vector[current_vector+step  ] |= mask;
 437:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= mask;
 3909              		.loc 1 437 52 is_stmt 0 view .LVU1296
 3910 1793 C4417D7F 		vmovdqa	YMMWORD PTR 32[r13], ymm11	# MEM[base: _102, offset: 32B], tmp218
 3910      5D20
 438:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= mask;
 3911              		.loc 1 438 13 is_stmt 1 view .LVU1297
 3912              	# sieve_extend.c:438:             bitarray_vector[current_vector+step_2] |= mask;
 438:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= mask;
 3913              		.loc 1 438 52 is_stmt 0 view .LVU1298
 3914 1799 C4417D7F 		vmovdqa	YMMWORD PTR 64[r13], ymm12	# MEM[base: _102, offset: 64B], tmp219
 3914      6540
 439:sieve_extend.c ****         }
GAS LISTING /tmp/ccLUVin9.s 			page 114


 3915              		.loc 1 439 13 is_stmt 1 view .LVU1299
 3916              	# sieve_extend.c:439:             bitarray_vector[current_vector+step_3] |= mask;
 439:sieve_extend.c ****         }
 3917              		.loc 1 439 52 is_stmt 0 view .LVU1300
 3918 179f C4417D7F 		vmovdqa	YMMWORD PTR 96[r13], ymm13	# MEM[base: _102, offset: 96B], tmp220
 3918      6D60
 435:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 3919              		.loc 1 435 51 is_stmt 1 view .LVU1301
 435:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 3920              		.loc 1 435 15 view .LVU1302
 3921              	# sieve_extend.c:435:         for(; current_vector <= loop_stop_vector; current_vector += step_4) {
 435:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 3922              		.loc 1 435 9 is_stmt 0 view .LVU1303
 3923 17a5 0F86EDFE 		jbe	.L396	#,
 3923      FFFF
 3924              	.LVL162:
 3925 17ab 0F1F4400 		.p2align 4
 3925      00
 3926              		.p2align 3
 3927              	.L228:
 435:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 3928              		.loc 1 435 9 view .LVU1304
 3929              	.LBE334:
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 3930              		.loc 1 445 11 is_stmt 1 view .LVU1305
 3931              	# sieve_extend.c:445:     for(; current_vector <= range_stop_vector; current_vector += step) {
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 3932              		.loc 1 445 5 is_stmt 0 view .LVU1306
 3933 17b0 4939C8   		cmp	r8, rcx	# range_stop_vector, current_vector
 3934 17b3 0F824F01 		jb	.L230	#,
 3934      0000
 3935 17b9 4989CF   		mov	r15, rcx	# tmp221, current_vector
 3936 17bc 4D89C4   		mov	r12, r8	# tmp226, range_stop_vector
 3937 17bf 49C1E705 		sal	r15, 5	# tmp221,
 3938 17c3 4929CC   		sub	r12, rcx	# tmp226, current_vector
 3939              	# sieve_extend.c:445:     for(; current_vector <= range_stop_vector; current_vector += step) {
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 3940              		.loc 1 445 63 view .LVU1307
 3941 17c6 4C8D6901 		lea	r13, 1[rcx]	# current_vector,
 3942 17ca 4901FF   		add	r15, rdi	# ivtmp.269, bitarray_word
 3943 17cd 4183E407 		and	r12d, 7	# tmp227,
 446:sieve_extend.c ****     }
 3944              		.loc 1 446 9 is_stmt 1 view .LVU1308
 3945              	# sieve_extend.c:446:         bitarray_vector[current_vector] |= mask;
 446:sieve_extend.c ****     }
 3946              		.loc 1 446 41 is_stmt 0 view .LVU1309
 3947 17d1 C4417DEB 		vpor	ymm14, ymm0, YMMWORD PTR [r15]	# tmp222, quadmask.56_166, MEM[base: _177, offset: 0B]
 3947      37
 3948              	# sieve_extend.c:445:     for(; current_vector <= range_stop_vector; current_vector += step) {
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 3949              		.loc 1 445 5 view .LVU1310
 3950 17d6 4D39E8   		cmp	r8, r13	# range_stop_vector, current_vector
 3951 17d9 498D4720 		lea	rax, 32[r15]	# ivtmp.269,
 3952              	# sieve_extend.c:446:         bitarray_vector[current_vector] |= mask;
 446:sieve_extend.c ****     }
 3953              		.loc 1 446 41 view .LVU1311
 3954 17dd C4417D7F 		vmovdqa	YMMWORD PTR [r15], ymm14	# MEM[base: _177, offset: 0B], tmp222
GAS LISTING /tmp/ccLUVin9.s 			page 115


 3954      37
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 3955              		.loc 1 445 48 is_stmt 1 view .LVU1312
 3956              	.LVL163:
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 3957              		.loc 1 445 11 view .LVU1313
 3958              	# sieve_extend.c:445:     for(; current_vector <= range_stop_vector; current_vector += step) {
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 3959              		.loc 1 445 5 is_stmt 0 view .LVU1314
 3960 17e2 0F822001 		jb	.L230	#,
 3960      0000
 3961 17e8 4D85E4   		test	r12, r12	# tmp227
 3962 17eb 0F84A100 		je	.L231	#,
 3962      0000
 3963 17f1 4983FC01 		cmp	r12, 1	# tmp227,
 3964 17f5 0F848200 		je	.L326	#,
 3964      0000
 3965 17fb 4983FC02 		cmp	r12, 2	# tmp227,
 3966 17ff 746C     		je	.L327	#,
 3967 1801 4983FC03 		cmp	r12, 3	# tmp227,
 3968 1805 7456     		je	.L328	#,
 3969 1807 4983FC04 		cmp	r12, 4	# tmp227,
 3970 180b 7440     		je	.L329	#,
 3971 180d 4983FC05 		cmp	r12, 5	# tmp227,
 3972 1811 742A     		je	.L330	#,
 3973 1813 4983FC06 		cmp	r12, 6	# tmp227,
 3974 1817 7414     		je	.L331	#,
 446:sieve_extend.c ****     }
 3975              		.loc 1 446 9 is_stmt 1 view .LVU1315
 3976              	# sieve_extend.c:446:         bitarray_vector[current_vector] |= mask;
 446:sieve_extend.c ****     }
 3977              		.loc 1 446 41 is_stmt 0 view .LVU1316
 3978 1819 C4417DEB 		vpor	ymm15, ymm0, YMMWORD PTR 32[r15]	# tmp328, quadmask.56_166, MEM[base: _177, offset: 0B]
 3978      7F20
 3979              	# sieve_extend.c:445:     for(; current_vector <= range_stop_vector; current_vector += step) {
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 3980              		.loc 1 445 63 view .LVU1317
 3981 181f 4C8D6902 		lea	r13, 2[rcx]	# current_vector,
 3982              	# sieve_extend.c:446:         bitarray_vector[current_vector] |= mask;
 446:sieve_extend.c ****     }
 3983              		.loc 1 446 41 view .LVU1318
 3984 1823 C4417D7F 		vmovdqa	YMMWORD PTR 32[r15], ymm15	# MEM[base: _177, offset: 0B], tmp328
 3984      7F20
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 3985              		.loc 1 445 48 is_stmt 1 view .LVU1319
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 3986              		.loc 1 445 11 view .LVU1320
 3987 1829 498D4740 		lea	rax, 64[r15]	# ivtmp.269,
 3988              	.L331:
 446:sieve_extend.c ****     }
 3989              		.loc 1 446 9 view .LVU1321
 3990              	# sieve_extend.c:446:         bitarray_vector[current_vector] |= mask;
 446:sieve_extend.c ****     }
 3991              		.loc 1 446 41 is_stmt 0 view .LVU1322
 3992 182d C5FDEB08 		vpor	ymm1, ymm0, YMMWORD PTR [rax]	# tmp329, quadmask.56_166, MEM[base: _177, offset: 0B]
 3993              	# sieve_extend.c:445:     for(; current_vector <= range_stop_vector; current_vector += step) {
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
GAS LISTING /tmp/ccLUVin9.s 			page 116


 3994              		.loc 1 445 63 view .LVU1323
 3995 1831 4983C501 		add	r13, 1	# current_vector,
 3996              	# sieve_extend.c:446:         bitarray_vector[current_vector] |= mask;
 446:sieve_extend.c ****     }
 3997              		.loc 1 446 41 view .LVU1324
 3998 1835 C5FD7F08 		vmovdqa	YMMWORD PTR [rax], ymm1	# MEM[base: _177, offset: 0B], tmp329
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 3999              		.loc 1 445 48 is_stmt 1 view .LVU1325
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4000              		.loc 1 445 11 view .LVU1326
 4001 1839 4883C020 		add	rax, 32	# ivtmp.269,
 4002              	.LVL164:
 4003              	.L330:
 446:sieve_extend.c ****     }
 4004              		.loc 1 446 9 view .LVU1327
 4005              	# sieve_extend.c:446:         bitarray_vector[current_vector] |= mask;
 446:sieve_extend.c ****     }
 4006              		.loc 1 446 41 is_stmt 0 view .LVU1328
 4007 183d C5FDEB18 		vpor	ymm3, ymm0, YMMWORD PTR [rax]	# tmp330, quadmask.56_166, MEM[base: _177, offset: 0B]
 4008              	# sieve_extend.c:445:     for(; current_vector <= range_stop_vector; current_vector += step) {
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4009              		.loc 1 445 63 view .LVU1329
 4010 1841 4983C501 		add	r13, 1	# current_vector,
 4011              	# sieve_extend.c:446:         bitarray_vector[current_vector] |= mask;
 446:sieve_extend.c ****     }
 4012              		.loc 1 446 41 view .LVU1330
 4013 1845 C5FD7F18 		vmovdqa	YMMWORD PTR [rax], ymm3	# MEM[base: _177, offset: 0B], tmp330
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4014              		.loc 1 445 48 is_stmt 1 view .LVU1331
 4015              	.LVL165:
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4016              		.loc 1 445 11 view .LVU1332
 4017 1849 4883C020 		add	rax, 32	# ivtmp.269,
 4018              	.LVL166:
 4019              	.L329:
 446:sieve_extend.c ****     }
 4020              		.loc 1 446 9 view .LVU1333
 4021              	# sieve_extend.c:446:         bitarray_vector[current_vector] |= mask;
 446:sieve_extend.c ****     }
 4022              		.loc 1 446 41 is_stmt 0 view .LVU1334
 4023 184d C5FDEB20 		vpor	ymm4, ymm0, YMMWORD PTR [rax]	# tmp331, quadmask.56_166, MEM[base: _177, offset: 0B]
 4024              	# sieve_extend.c:445:     for(; current_vector <= range_stop_vector; current_vector += step) {
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4025              		.loc 1 445 63 view .LVU1335
 4026 1851 4983C501 		add	r13, 1	# current_vector,
 4027              	# sieve_extend.c:446:         bitarray_vector[current_vector] |= mask;
 446:sieve_extend.c ****     }
 4028              		.loc 1 446 41 view .LVU1336
 4029 1855 C5FD7F20 		vmovdqa	YMMWORD PTR [rax], ymm4	# MEM[base: _177, offset: 0B], tmp331
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4030              		.loc 1 445 48 is_stmt 1 view .LVU1337
 4031              	.LVL167:
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4032              		.loc 1 445 11 view .LVU1338
 4033 1859 4883C020 		add	rax, 32	# ivtmp.269,
 4034              	.LVL168:
 4035              	.L328:
GAS LISTING /tmp/ccLUVin9.s 			page 117


 446:sieve_extend.c ****     }
 4036              		.loc 1 446 9 view .LVU1339
 4037              	# sieve_extend.c:446:         bitarray_vector[current_vector] |= mask;
 446:sieve_extend.c ****     }
 4038              		.loc 1 446 41 is_stmt 0 view .LVU1340
 4039 185d C5FDEB28 		vpor	ymm5, ymm0, YMMWORD PTR [rax]	# tmp332, quadmask.56_166, MEM[base: _177, offset: 0B]
 4040              	# sieve_extend.c:445:     for(; current_vector <= range_stop_vector; current_vector += step) {
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4041              		.loc 1 445 63 view .LVU1341
 4042 1861 4983C501 		add	r13, 1	# current_vector,
 4043              	# sieve_extend.c:446:         bitarray_vector[current_vector] |= mask;
 446:sieve_extend.c ****     }
 4044              		.loc 1 446 41 view .LVU1342
 4045 1865 C5FD7F28 		vmovdqa	YMMWORD PTR [rax], ymm5	# MEM[base: _177, offset: 0B], tmp332
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4046              		.loc 1 445 48 is_stmt 1 view .LVU1343
 4047              	.LVL169:
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4048              		.loc 1 445 11 view .LVU1344
 4049 1869 4883C020 		add	rax, 32	# ivtmp.269,
 4050              	.LVL170:
 4051              	.L327:
 446:sieve_extend.c ****     }
 4052              		.loc 1 446 9 view .LVU1345
 4053              	# sieve_extend.c:446:         bitarray_vector[current_vector] |= mask;
 446:sieve_extend.c ****     }
 4054              		.loc 1 446 41 is_stmt 0 view .LVU1346
 4055 186d C5FDEB30 		vpor	ymm6, ymm0, YMMWORD PTR [rax]	# tmp333, quadmask.56_166, MEM[base: _177, offset: 0B]
 4056              	# sieve_extend.c:445:     for(; current_vector <= range_stop_vector; current_vector += step) {
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4057              		.loc 1 445 63 view .LVU1347
 4058 1871 4983C501 		add	r13, 1	# current_vector,
 4059              	# sieve_extend.c:446:         bitarray_vector[current_vector] |= mask;
 446:sieve_extend.c ****     }
 4060              		.loc 1 446 41 view .LVU1348
 4061 1875 C5FD7F30 		vmovdqa	YMMWORD PTR [rax], ymm6	# MEM[base: _177, offset: 0B], tmp333
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4062              		.loc 1 445 48 is_stmt 1 view .LVU1349
 4063              	.LVL171:
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4064              		.loc 1 445 11 view .LVU1350
 4065 1879 4883C020 		add	rax, 32	# ivtmp.269,
 4066              	.LVL172:
 4067              	.L326:
 446:sieve_extend.c ****     }
 4068              		.loc 1 446 9 view .LVU1351
 4069              	# sieve_extend.c:446:         bitarray_vector[current_vector] |= mask;
 446:sieve_extend.c ****     }
 4070              		.loc 1 446 41 is_stmt 0 view .LVU1352
 4071 187d C5FDEB38 		vpor	ymm7, ymm0, YMMWORD PTR [rax]	# tmp334, quadmask.56_166, MEM[base: _177, offset: 0B]
 4072              	# sieve_extend.c:445:     for(; current_vector <= range_stop_vector; current_vector += step) {
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4073              		.loc 1 445 63 view .LVU1353
 4074 1881 4983C501 		add	r13, 1	# current_vector,
 4075              	# sieve_extend.c:446:         bitarray_vector[current_vector] |= mask;
 446:sieve_extend.c ****     }
 4076              		.loc 1 446 41 view .LVU1354
GAS LISTING /tmp/ccLUVin9.s 			page 118


 4077 1885 C5FD7F38 		vmovdqa	YMMWORD PTR [rax], ymm7	# MEM[base: _177, offset: 0B], tmp334
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4078              		.loc 1 445 48 is_stmt 1 view .LVU1355
 4079              	.LVL173:
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4080              		.loc 1 445 11 view .LVU1356
 4081 1889 4883C020 		add	rax, 32	# ivtmp.269,
 4082              	# sieve_extend.c:445:     for(; current_vector <= range_stop_vector; current_vector += step) {
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4083              		.loc 1 445 5 is_stmt 0 view .LVU1357
 4084 188d 4D39E8   		cmp	r8, r13	# range_stop_vector, current_vector
 4085 1890 7276     		jb	.L230	#,
 4086              	.LVL174:
 4087              	.L231:
 446:sieve_extend.c ****     }
 4088              		.loc 1 446 9 is_stmt 1 view .LVU1358
 4089              	# sieve_extend.c:446:         bitarray_vector[current_vector] |= mask;
 446:sieve_extend.c ****     }
 4090              		.loc 1 446 41 is_stmt 0 view .LVU1359
 4091 1892 C57DEB00 		vpor	ymm8, ymm0, YMMWORD PTR [rax]	# tmp272, quadmask.56_166, MEM[base: _177, offset: 0B]
 4092 1896 C57DEB48 		vpor	ymm9, ymm0, YMMWORD PTR 32[rax]	# tmp275, quadmask.56_166, MEM[base: _177, offset: 0B]
 4092      20
 4093 189b C57DEB50 		vpor	ymm10, ymm0, YMMWORD PTR 64[rax]	# tmp278, quadmask.56_166, MEM[base: _177, offset: 0B]
 4093      40
 4094 18a0 C57DEB58 		vpor	ymm11, ymm0, YMMWORD PTR 96[rax]	# tmp281, quadmask.56_166, MEM[base: _177, offset: 0B]
 4094      60
 4095 18a5 C57DEBA0 		vpor	ymm12, ymm0, YMMWORD PTR 128[rax]	# tmp284, quadmask.56_166, MEM[base: _177, offset: 0B]
 4095      80000000 
 4096 18ad C57DEBA8 		vpor	ymm13, ymm0, YMMWORD PTR 160[rax]	# tmp287, quadmask.56_166, MEM[base: _177, offset: 0B]
 4096      A0000000 
 4097 18b5 C57DEBB0 		vpor	ymm14, ymm0, YMMWORD PTR 192[rax]	# tmp290, quadmask.56_166, MEM[base: _177, offset: 0B]
 4097      C0000000 
 4098 18bd C57DEBB8 		vpor	ymm15, ymm0, YMMWORD PTR 224[rax]	# tmp293, quadmask.56_166, MEM[base: _177, offset: 0B]
 4098      E0000000 
 4099              	# sieve_extend.c:445:     for(; current_vector <= range_stop_vector; current_vector += step) {
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4100              		.loc 1 445 63 view .LVU1360
 4101 18c5 4983C508 		add	r13, 8	# current_vector,
 4102 18c9 48050001 		add	rax, 256	# ivtmp.269,
 4102      0000
 4103              	# sieve_extend.c:446:         bitarray_vector[current_vector] |= mask;
 446:sieve_extend.c ****     }
 4104              		.loc 1 446 41 view .LVU1361
 4105 18cf C57D7F80 		vmovdqa	YMMWORD PTR -256[rax], ymm8	# MEM[base: _177, offset: 0B], tmp272
 4105      00FFFFFF 
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4106              		.loc 1 445 48 is_stmt 1 view .LVU1362
 4107              	.LVL175:
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4108              		.loc 1 445 11 view .LVU1363
 446:sieve_extend.c ****     }
 4109              		.loc 1 446 9 view .LVU1364
 4110              	# sieve_extend.c:446:         bitarray_vector[current_vector] |= mask;
 446:sieve_extend.c ****     }
 4111              		.loc 1 446 41 is_stmt 0 view .LVU1365
 4112 18d7 C57D7F88 		vmovdqa	YMMWORD PTR -224[rax], ymm9	# MEM[base: _177, offset: 0B], tmp275
 4112      20FFFFFF 
GAS LISTING /tmp/ccLUVin9.s 			page 119


 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4113              		.loc 1 445 48 is_stmt 1 view .LVU1366
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4114              		.loc 1 445 11 view .LVU1367
 446:sieve_extend.c ****     }
 4115              		.loc 1 446 9 view .LVU1368
 4116              	# sieve_extend.c:446:         bitarray_vector[current_vector] |= mask;
 446:sieve_extend.c ****     }
 4117              		.loc 1 446 41 is_stmt 0 view .LVU1369
 4118 18df C57D7F90 		vmovdqa	YMMWORD PTR -192[rax], ymm10	# MEM[base: _177, offset: 0B], tmp278
 4118      40FFFFFF 
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4119              		.loc 1 445 48 is_stmt 1 view .LVU1370
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4120              		.loc 1 445 11 view .LVU1371
 446:sieve_extend.c ****     }
 4121              		.loc 1 446 9 view .LVU1372
 4122              	# sieve_extend.c:446:         bitarray_vector[current_vector] |= mask;
 446:sieve_extend.c ****     }
 4123              		.loc 1 446 41 is_stmt 0 view .LVU1373
 4124 18e7 C57D7F98 		vmovdqa	YMMWORD PTR -160[rax], ymm11	# MEM[base: _177, offset: 0B], tmp281
 4124      60FFFFFF 
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4125              		.loc 1 445 48 is_stmt 1 view .LVU1374
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4126              		.loc 1 445 11 view .LVU1375
 446:sieve_extend.c ****     }
 4127              		.loc 1 446 9 view .LVU1376
 4128              	# sieve_extend.c:446:         bitarray_vector[current_vector] |= mask;
 446:sieve_extend.c ****     }
 4129              		.loc 1 446 41 is_stmt 0 view .LVU1377
 4130 18ef C57D7F60 		vmovdqa	YMMWORD PTR -128[rax], ymm12	# MEM[base: _177, offset: 0B], tmp284
 4130      80
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4131              		.loc 1 445 48 is_stmt 1 view .LVU1378
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4132              		.loc 1 445 11 view .LVU1379
 446:sieve_extend.c ****     }
 4133              		.loc 1 446 9 view .LVU1380
 4134              	# sieve_extend.c:446:         bitarray_vector[current_vector] |= mask;
 446:sieve_extend.c ****     }
 4135              		.loc 1 446 41 is_stmt 0 view .LVU1381
 4136 18f4 C57D7F68 		vmovdqa	YMMWORD PTR -96[rax], ymm13	# MEM[base: _177, offset: 0B], tmp287
 4136      A0
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4137              		.loc 1 445 48 is_stmt 1 view .LVU1382
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4138              		.loc 1 445 11 view .LVU1383
 446:sieve_extend.c ****     }
 4139              		.loc 1 446 9 view .LVU1384
 4140              	# sieve_extend.c:446:         bitarray_vector[current_vector] |= mask;
 446:sieve_extend.c ****     }
 4141              		.loc 1 446 41 is_stmt 0 view .LVU1385
 4142 18f9 C57D7F70 		vmovdqa	YMMWORD PTR -64[rax], ymm14	# MEM[base: _177, offset: 0B], tmp290
 4142      C0
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4143              		.loc 1 445 48 is_stmt 1 view .LVU1386
GAS LISTING /tmp/ccLUVin9.s 			page 120


 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4144              		.loc 1 445 11 view .LVU1387
 446:sieve_extend.c ****     }
 4145              		.loc 1 446 9 view .LVU1388
 4146              	# sieve_extend.c:446:         bitarray_vector[current_vector] |= mask;
 446:sieve_extend.c ****     }
 4147              		.loc 1 446 41 is_stmt 0 view .LVU1389
 4148 18fe C57D7F78 		vmovdqa	YMMWORD PTR -32[rax], ymm15	# MEM[base: _177, offset: 0B], tmp293
 4148      E0
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4149              		.loc 1 445 48 is_stmt 1 view .LVU1390
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4150              		.loc 1 445 11 view .LVU1391
 4151              	# sieve_extend.c:445:     for(; current_vector <= range_stop_vector; current_vector += step) {
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4152              		.loc 1 445 5 is_stmt 0 view .LVU1392
 4153 1903 4D39E8   		cmp	r8, r13	# range_stop_vector, current_vector
 4154 1906 738A     		jnb	.L231	#,
 4155              	.LVL176:
 4156              	.L230:
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4157              		.loc 1 445 5 view .LVU1393
 4158              	.LBE336:
 4159              	.LBE338:
 4160              	.LBE329:
 480:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 4161              		.loc 1 480 41 is_stmt 1 view .LVU1394
 4162              	# sieve_extend.c:480:     for (counter_t index = range_start; index < range_stop_unique;) {
 480:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 4163              		.loc 1 480 5 is_stmt 0 view .LVU1395
 4164 1908 4939F2   		cmp	r10, rsi	# range_stop_unique, range_start
 4165 190b 0F874FFB 		ja	.L232	#,
 4165      FFFF
 4166              	.LVL177:
 4167              	.L394:
 480:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 4168              		.loc 1 480 5 view .LVU1396
 4169 1911 C5F877   		vzeroupper
 4170              	.L214:
 480:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 4171              		.loc 1 480 5 view .LVU1397
 4172              	.LBE328:
 4173              	# sieve_extend.c:500: }
 500:sieve_extend.c **** 
 4174              		.loc 1 500 1 view .LVU1398
 4175 1914 488B4424 		mov	rax, QWORD PTR 88[rsp]	# tmp512, D.6828
 4175      58
 4176 1919 64483304 		xor	rax, QWORD PTR fs:40	# tmp512, MEM[(<address-space-1> long unsigned int *)40B]
 4176      25280000 
 4176      00
 4177 1922 0F855C04 		jne	.L397	#,
 4177      0000
 4178 1928 488D65D8 		lea	rsp, -40[rbp]	#,
 4179 192c 5B       		pop	rbx	#
 4180 192d 415C     		pop	r12	#
 4181 192f 415D     		pop	r13	#
 4182 1931 415E     		pop	r14	#
GAS LISTING /tmp/ccLUVin9.s 			page 121


 4183 1933 415F     		pop	r15	#
 4184 1935 5D       		pop	rbp	#
 4185              		.cfi_remember_state
 4186              		.cfi_def_cfa 7, 8
 4187 1936 C3       		ret	
 4188              	.LVL178:
 4189              	.L395:
 4190              		.cfi_restore_state
 500:sieve_extend.c **** 
 4191              		.loc 1 500 1 view .LVU1399
 4192 1937 4C39E9   		cmp	rcx, r13	# range_stop_vector, step_4
 4193 193a B8000000 		mov	eax, 0	# tmp188,
 4193      00
 4194              	.LVL179:
 500:sieve_extend.c **** 
 4195              		.loc 1 500 1 view .LVU1400
 4196 193f 4889D1   		mov	rcx, rdx	# _200, step
 4197 1942 4989D1   		mov	r9, rdx	# _207, step
 4198 1945 480F47C3 		cmova	rax, rbx	# iftmp.57_71,, tmp188
 4199 1949 488D1C52 		lea	rbx, [rdx+rdx*2]	# tmp191,
 4200 194d 4989D4   		mov	r12, rdx	# _211, step
 4201              	.LBB341:
 4202              	.LBB340:
 4203              	# sieve_extend.c:489:             quadmask[word] |= markmask(index);
 489:sieve_extend.c ****             index += step;
 4204              		.loc 1 489 31 view .LVU1401
 4205 1950 41BB0100 		mov	r11d, 1	# tmp197,
 4205      0000
 4206 1956 48C1E107 		sal	rcx, 7	# _200,
 4207 195a 4C895424 		mov	QWORD PTR 16[rsp], r10	# %sfp, range_stop_unique
 4207      10
 4208 195f 4989CA   		mov	r10, rcx	# _200, _200
 4209              	.LVL180:
 489:sieve_extend.c ****             index += step;
 4210              		.loc 1 489 31 view .LVU1402
 4211 1962 48897C24 		mov	QWORD PTR 24[rsp], rdi	# %sfp, bitarray_word
 4211      18
 4212 1967 4889C7   		mov	rdi, rax	# iftmp.57_93, iftmp.57_93
 4213              	.LVL181:
 489:sieve_extend.c ****             index += step;
 4214              		.loc 1 489 31 view .LVU1403
 4215 196a 49C1E105 		sal	r9, 5	# _207,
 4216 196e 48C1E305 		sal	rbx, 5	# tmp192,
 4217              	# sieve_extend.c:482:         register bitvector_t quadmask = { };
 482:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 4218              		.loc 1 482 30 view .LVU1404
 4219 1972 C5E9EFD2 		vpxor	xmm2, xmm2, xmm2	# tmp193
 4220 1976 49C1E406 		sal	r12, 6	# _211,
 4221 197a 660F1F44 		.p2align 4
 4221      0000
 4222              		.p2align 3
 4223              	.L226:
 481:sieve_extend.c ****         register bitvector_t quadmask = { };
 4224              		.loc 1 481 9 is_stmt 1 view .LVU1405
 4225              	# sieve_extend.c:481:         const counter_t current_vector_start_word =  vectorindex(index) << (S
 481:sieve_extend.c ****         register bitvector_t quadmask = { };
 4226              		.loc 1 481 54 is_stmt 0 view .LVU1406
GAS LISTING /tmp/ccLUVin9.s 			page 122


 4227 1980 4889F0   		mov	rax, rsi	# current_vector, range_start
 4228              	# sieve_extend.c:483:         register counter_t word = wordindex(index) - current_vector_start_wor
 483:sieve_extend.c ****         
 4229              		.loc 1 483 35 view .LVU1407
 4230 1983 4989F6   		mov	r14, rsi	# tmp194, range_start
 4231              	# sieve_extend.c:481:         const counter_t current_vector_start_word =  vectorindex(index) << (S
 481:sieve_extend.c ****         register bitvector_t quadmask = { };
 4232              		.loc 1 481 54 view .LVU1408
 4233 1986 48C1E808 		shr	rax, 8	# current_vector,
 4234              	# sieve_extend.c:483:         register counter_t word = wordindex(index) - current_vector_start_wor
 483:sieve_extend.c ****         
 4235              		.loc 1 483 35 view .LVU1409
 4236 198a 49C1EE06 		shr	r14, 6	# tmp194,
 4237              	# sieve_extend.c:481:         const counter_t current_vector_start_word =  vectorindex(index) << (S
 481:sieve_extend.c ****         register bitvector_t quadmask = { };
 4238              		.loc 1 481 25 view .LVU1410
 4239 198e 488D0C85 		lea	rcx, 0[0+rax*4]	# current_vector_start_word,
 4239      00000000 
 4240              	.LVL182:
 482:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 4241              		.loc 1 482 9 is_stmt 1 view .LVU1411
 4242              	# sieve_extend.c:482:         register bitvector_t quadmask = { };
 482:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 4243              		.loc 1 482 30 is_stmt 0 view .LVU1412
 4244 1996 C5FD7F54 		vmovdqa	YMMWORD PTR 32[rsp], ymm2	# quadmask, tmp193
 4244      2420
 483:sieve_extend.c ****         
 4245              		.loc 1 483 9 is_stmt 1 view .LVU1413
 4246              	# sieve_extend.c:483:         register counter_t word = wordindex(index) - current_vector_start_wor
 483:sieve_extend.c ****         
 4247              		.loc 1 483 28 is_stmt 0 view .LVU1414
 4248 199c 4929CE   		sub	r14, rcx	# word, current_vector_start_word
 4249              	.LVL183:
 4250              	.L221:
 489:sieve_extend.c ****             index += step;
 4251              		.loc 1 489 13 is_stmt 1 discriminator 1 view .LVU1415
 4252              	# sieve_extend.c:489:             quadmask[word] |= markmask(index);
 489:sieve_extend.c ****             index += step;
 4253              		.loc 1 489 31 is_stmt 0 discriminator 1 view .LVU1416
 4254 199f C442C9F7 		shlx	r15, r11, rsi	# tmp196, tmp197, range_start
 4254      FB
 4255              	# sieve_extend.c:490:             index += step;
 490:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4256              		.loc 1 490 19 discriminator 1 view .LVU1417
 4257 19a4 4801D6   		add	rsi, rdx	# range_start, step
 4258              	# sieve_extend.c:489:             quadmask[word] |= markmask(index);
 489:sieve_extend.c ****             index += step;
 4259              		.loc 1 489 28 discriminator 1 view .LVU1418
 4260 19a7 4E097CF4 		or	QWORD PTR 32[rsp+r14*8], r15	# quadmask, tmp196
 4260      20
 490:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4261              		.loc 1 490 13 is_stmt 1 discriminator 1 view .LVU1419
 491:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4262              		.loc 1 491 13 discriminator 1 view .LVU1420
 4263              	# sieve_extend.c:491:             word = wordindex(index) - current_vector_start_word;
 491:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4264              		.loc 1 491 20 is_stmt 0 discriminator 1 view .LVU1421
GAS LISTING /tmp/ccLUVin9.s 			page 123


 4265 19ac 4989F6   		mov	r14, rsi	# tmp198, range_start
 4266              	.LVL184:
 491:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4267              		.loc 1 491 20 discriminator 1 view .LVU1422
 4268 19af 49C1EE06 		shr	r14, 6	# tmp198,
 4269              	# sieve_extend.c:491:             word = wordindex(index) - current_vector_start_word;
 491:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4270              		.loc 1 491 18 discriminator 1 view .LVU1423
 4271 19b3 4929CE   		sub	r14, rcx	# word, current_vector_start_word
 492:sieve_extend.c ****         
 4272              		.loc 1 492 17 is_stmt 1 discriminator 1 view .LVU1424
 4273              	# sieve_extend.c:492:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 492:sieve_extend.c ****         
 4274              		.loc 1 492 9 is_stmt 0 discriminator 1 view .LVU1425
 4275 19b6 4983FE03 		cmp	r14, 3	# word,
 4276 19ba 0F87E000 		ja	.L369	#,
 4276      0000
 489:sieve_extend.c ****             index += step;
 4277              		.loc 1 489 13 is_stmt 1 view .LVU1426
 4278              	# sieve_extend.c:489:             quadmask[word] |= markmask(index);
 489:sieve_extend.c ****             index += step;
 4279              		.loc 1 489 31 is_stmt 0 view .LVU1427
 4280 19c0 C442C9F7 		shlx	r15, r11, rsi	# tmp399, tmp197, range_start
 4280      FB
 4281              	# sieve_extend.c:490:             index += step;
 490:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4282              		.loc 1 490 19 view .LVU1428
 4283 19c5 4801D6   		add	rsi, rdx	# range_start, step
 4284              	# sieve_extend.c:489:             quadmask[word] |= markmask(index);
 489:sieve_extend.c ****             index += step;
 4285              		.loc 1 489 28 view .LVU1429
 4286 19c8 4E097CF4 		or	QWORD PTR 32[rsp+r14*8], r15	# quadmask, tmp399
 4286      20
 490:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4287              		.loc 1 490 13 is_stmt 1 view .LVU1430
 491:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4288              		.loc 1 491 13 view .LVU1431
 4289              	# sieve_extend.c:491:             word = wordindex(index) - current_vector_start_word;
 491:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4290              		.loc 1 491 20 is_stmt 0 view .LVU1432
 4291 19cd 4989F6   		mov	r14, rsi	# tmp400, range_start
 4292 19d0 49C1EE06 		shr	r14, 6	# tmp400,
 4293              	# sieve_extend.c:491:             word = wordindex(index) - current_vector_start_word;
 491:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4294              		.loc 1 491 18 view .LVU1433
 4295 19d4 4929CE   		sub	r14, rcx	# word, current_vector_start_word
 492:sieve_extend.c ****         
 4296              		.loc 1 492 17 is_stmt 1 view .LVU1434
 4297              	# sieve_extend.c:492:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 492:sieve_extend.c ****         
 4298              		.loc 1 492 9 is_stmt 0 view .LVU1435
 4299 19d7 4983FE03 		cmp	r14, 3	# word,
 4300 19db 0F87BF00 		ja	.L369	#,
 4300      0000
 489:sieve_extend.c ****             index += step;
 4301              		.loc 1 489 13 is_stmt 1 view .LVU1436
 4302              	# sieve_extend.c:489:             quadmask[word] |= markmask(index);
GAS LISTING /tmp/ccLUVin9.s 			page 124


 489:sieve_extend.c ****             index += step;
 4303              		.loc 1 489 31 is_stmt 0 view .LVU1437
 4304 19e1 C442C9F7 		shlx	r15, r11, rsi	# tmp402, tmp197, range_start
 4304      FB
 4305              	# sieve_extend.c:490:             index += step;
 490:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4306              		.loc 1 490 19 view .LVU1438
 4307 19e6 4801D6   		add	rsi, rdx	# range_start, step
 4308              	# sieve_extend.c:489:             quadmask[word] |= markmask(index);
 489:sieve_extend.c ****             index += step;
 4309              		.loc 1 489 28 view .LVU1439
 4310 19e9 4E097CF4 		or	QWORD PTR 32[rsp+r14*8], r15	# quadmask, tmp402
 4310      20
 490:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4311              		.loc 1 490 13 is_stmt 1 view .LVU1440
 491:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4312              		.loc 1 491 13 view .LVU1441
 4313              	# sieve_extend.c:491:             word = wordindex(index) - current_vector_start_word;
 491:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4314              		.loc 1 491 20 is_stmt 0 view .LVU1442
 4315 19ee 4989F6   		mov	r14, rsi	# tmp403, range_start
 4316 19f1 49C1EE06 		shr	r14, 6	# tmp403,
 4317              	# sieve_extend.c:491:             word = wordindex(index) - current_vector_start_word;
 491:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4318              		.loc 1 491 18 view .LVU1443
 4319 19f5 4929CE   		sub	r14, rcx	# word, current_vector_start_word
 492:sieve_extend.c ****         
 4320              		.loc 1 492 17 is_stmt 1 view .LVU1444
 4321              	# sieve_extend.c:492:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 492:sieve_extend.c ****         
 4322              		.loc 1 492 9 is_stmt 0 view .LVU1445
 4323 19f8 4983FE03 		cmp	r14, 3	# word,
 4324 19fc 0F879E00 		ja	.L369	#,
 4324      0000
 489:sieve_extend.c ****             index += step;
 4325              		.loc 1 489 13 is_stmt 1 view .LVU1446
 4326              	# sieve_extend.c:489:             quadmask[word] |= markmask(index);
 489:sieve_extend.c ****             index += step;
 4327              		.loc 1 489 31 is_stmt 0 view .LVU1447
 4328 1a02 C442C9F7 		shlx	r15, r11, rsi	# tmp405, tmp197, range_start
 4328      FB
 4329              	# sieve_extend.c:490:             index += step;
 490:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4330              		.loc 1 490 19 view .LVU1448
 4331 1a07 4801D6   		add	rsi, rdx	# range_start, step
 4332              	# sieve_extend.c:489:             quadmask[word] |= markmask(index);
 489:sieve_extend.c ****             index += step;
 4333              		.loc 1 489 28 view .LVU1449
 4334 1a0a 4E097CF4 		or	QWORD PTR 32[rsp+r14*8], r15	# quadmask, tmp405
 4334      20
 490:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4335              		.loc 1 490 13 is_stmt 1 view .LVU1450
 491:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4336              		.loc 1 491 13 view .LVU1451
 4337              	# sieve_extend.c:491:             word = wordindex(index) - current_vector_start_word;
 491:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4338              		.loc 1 491 20 is_stmt 0 view .LVU1452
GAS LISTING /tmp/ccLUVin9.s 			page 125


 4339 1a0f 4989F6   		mov	r14, rsi	# tmp406, range_start
 4340 1a12 49C1EE06 		shr	r14, 6	# tmp406,
 4341              	# sieve_extend.c:491:             word = wordindex(index) - current_vector_start_word;
 491:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4342              		.loc 1 491 18 view .LVU1453
 4343 1a16 4929CE   		sub	r14, rcx	# word, current_vector_start_word
 492:sieve_extend.c ****         
 4344              		.loc 1 492 17 is_stmt 1 view .LVU1454
 4345              	# sieve_extend.c:492:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 492:sieve_extend.c ****         
 4346              		.loc 1 492 9 is_stmt 0 view .LVU1455
 4347 1a19 4983FE03 		cmp	r14, 3	# word,
 4348 1a1d 0F877D00 		ja	.L369	#,
 4348      0000
 489:sieve_extend.c ****             index += step;
 4349              		.loc 1 489 13 is_stmt 1 view .LVU1456
 4350              	# sieve_extend.c:489:             quadmask[word] |= markmask(index);
 489:sieve_extend.c ****             index += step;
 4351              		.loc 1 489 31 is_stmt 0 view .LVU1457
 4352 1a23 C442C9F7 		shlx	r15, r11, rsi	# tmp408, tmp197, range_start
 4352      FB
 4353              	# sieve_extend.c:490:             index += step;
 490:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4354              		.loc 1 490 19 view .LVU1458
 4355 1a28 4801D6   		add	rsi, rdx	# range_start, step
 4356              	# sieve_extend.c:489:             quadmask[word] |= markmask(index);
 489:sieve_extend.c ****             index += step;
 4357              		.loc 1 489 28 view .LVU1459
 4358 1a2b 4E097CF4 		or	QWORD PTR 32[rsp+r14*8], r15	# quadmask, tmp408
 4358      20
 490:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4359              		.loc 1 490 13 is_stmt 1 view .LVU1460
 491:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4360              		.loc 1 491 13 view .LVU1461
 4361              	# sieve_extend.c:491:             word = wordindex(index) - current_vector_start_word;
 491:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4362              		.loc 1 491 20 is_stmt 0 view .LVU1462
 4363 1a30 4989F6   		mov	r14, rsi	# tmp409, range_start
 4364 1a33 49C1EE06 		shr	r14, 6	# tmp409,
 4365              	# sieve_extend.c:491:             word = wordindex(index) - current_vector_start_word;
 491:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4366              		.loc 1 491 18 view .LVU1463
 4367 1a37 4929CE   		sub	r14, rcx	# word, current_vector_start_word
 492:sieve_extend.c ****         
 4368              		.loc 1 492 17 is_stmt 1 view .LVU1464
 4369              	# sieve_extend.c:492:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 492:sieve_extend.c ****         
 4370              		.loc 1 492 9 is_stmt 0 view .LVU1465
 4371 1a3a 4983FE03 		cmp	r14, 3	# word,
 4372 1a3e 7760     		ja	.L369	#,
 489:sieve_extend.c ****             index += step;
 4373              		.loc 1 489 13 is_stmt 1 view .LVU1466
 4374              	# sieve_extend.c:489:             quadmask[word] |= markmask(index);
 489:sieve_extend.c ****             index += step;
 4375              		.loc 1 489 31 is_stmt 0 view .LVU1467
 4376 1a40 C442C9F7 		shlx	r15, r11, rsi	# tmp411, tmp197, range_start
 4376      FB
GAS LISTING /tmp/ccLUVin9.s 			page 126


 4377              	# sieve_extend.c:490:             index += step;
 490:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4378              		.loc 1 490 19 view .LVU1468
 4379 1a45 4801D6   		add	rsi, rdx	# range_start, step
 4380              	# sieve_extend.c:489:             quadmask[word] |= markmask(index);
 489:sieve_extend.c ****             index += step;
 4381              		.loc 1 489 28 view .LVU1469
 4382 1a48 4E097CF4 		or	QWORD PTR 32[rsp+r14*8], r15	# quadmask, tmp411
 4382      20
 490:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4383              		.loc 1 490 13 is_stmt 1 view .LVU1470
 491:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4384              		.loc 1 491 13 view .LVU1471
 4385              	# sieve_extend.c:491:             word = wordindex(index) - current_vector_start_word;
 491:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4386              		.loc 1 491 20 is_stmt 0 view .LVU1472
 4387 1a4d 4989F6   		mov	r14, rsi	# tmp412, range_start
 4388 1a50 49C1EE06 		shr	r14, 6	# tmp412,
 4389              	# sieve_extend.c:491:             word = wordindex(index) - current_vector_start_word;
 491:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4390              		.loc 1 491 18 view .LVU1473
 4391 1a54 4929CE   		sub	r14, rcx	# word, current_vector_start_word
 492:sieve_extend.c ****         
 4392              		.loc 1 492 17 is_stmt 1 view .LVU1474
 4393              	# sieve_extend.c:492:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 492:sieve_extend.c ****         
 4394              		.loc 1 492 9 is_stmt 0 view .LVU1475
 4395 1a57 4983FE03 		cmp	r14, 3	# word,
 4396 1a5b 7743     		ja	.L369	#,
 489:sieve_extend.c ****             index += step;
 4397              		.loc 1 489 13 is_stmt 1 view .LVU1476
 4398              	# sieve_extend.c:489:             quadmask[word] |= markmask(index);
 489:sieve_extend.c ****             index += step;
 4399              		.loc 1 489 31 is_stmt 0 view .LVU1477
 4400 1a5d C442C9F7 		shlx	r15, r11, rsi	# tmp414, tmp197, range_start
 4400      FB
 4401              	# sieve_extend.c:490:             index += step;
 490:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4402              		.loc 1 490 19 view .LVU1478
 4403 1a62 4801D6   		add	rsi, rdx	# range_start, step
 4404              	# sieve_extend.c:489:             quadmask[word] |= markmask(index);
 489:sieve_extend.c ****             index += step;
 4405              		.loc 1 489 28 view .LVU1479
 4406 1a65 4E097CF4 		or	QWORD PTR 32[rsp+r14*8], r15	# quadmask, tmp414
 4406      20
 490:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4407              		.loc 1 490 13 is_stmt 1 view .LVU1480
 491:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4408              		.loc 1 491 13 view .LVU1481
 4409              	# sieve_extend.c:491:             word = wordindex(index) - current_vector_start_word;
 491:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4410              		.loc 1 491 20 is_stmt 0 view .LVU1482
 4411 1a6a 4989F6   		mov	r14, rsi	# tmp415, range_start
 4412 1a6d 49C1EE06 		shr	r14, 6	# tmp415,
 4413              	# sieve_extend.c:491:             word = wordindex(index) - current_vector_start_word;
 491:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4414              		.loc 1 491 18 view .LVU1483
GAS LISTING /tmp/ccLUVin9.s 			page 127


 4415 1a71 4929CE   		sub	r14, rcx	# word, current_vector_start_word
 492:sieve_extend.c ****         
 4416              		.loc 1 492 17 is_stmt 1 view .LVU1484
 4417              	# sieve_extend.c:492:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 492:sieve_extend.c ****         
 4418              		.loc 1 492 9 is_stmt 0 view .LVU1485
 4419 1a74 4983FE03 		cmp	r14, 3	# word,
 4420 1a78 7726     		ja	.L369	#,
 489:sieve_extend.c ****             index += step;
 4421              		.loc 1 489 13 is_stmt 1 view .LVU1486
 4422              	# sieve_extend.c:489:             quadmask[word] |= markmask(index);
 489:sieve_extend.c ****             index += step;
 4423              		.loc 1 489 31 is_stmt 0 view .LVU1487
 4424 1a7a C442C9F7 		shlx	r15, r11, rsi	# tmp417, tmp197, range_start
 4424      FB
 4425              	# sieve_extend.c:490:             index += step;
 490:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4426              		.loc 1 490 19 view .LVU1488
 4427 1a7f 4801D6   		add	rsi, rdx	# range_start, step
 4428              	# sieve_extend.c:489:             quadmask[word] |= markmask(index);
 489:sieve_extend.c ****             index += step;
 4429              		.loc 1 489 28 view .LVU1489
 4430 1a82 4E097CF4 		or	QWORD PTR 32[rsp+r14*8], r15	# quadmask, tmp417
 4430      20
 490:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4431              		.loc 1 490 13 is_stmt 1 view .LVU1490
 491:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4432              		.loc 1 491 13 view .LVU1491
 4433              	# sieve_extend.c:491:             word = wordindex(index) - current_vector_start_word;
 491:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4434              		.loc 1 491 20 is_stmt 0 view .LVU1492
 4435 1a87 4989F6   		mov	r14, rsi	# tmp418, range_start
 4436 1a8a 49C1EE06 		shr	r14, 6	# tmp418,
 4437              	.LVL185:
 4438              	# sieve_extend.c:491:             word = wordindex(index) - current_vector_start_word;
 491:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4439              		.loc 1 491 18 view .LVU1493
 4440 1a8e 4929CE   		sub	r14, rcx	# word, current_vector_start_word
 4441              	.LVL186:
 492:sieve_extend.c ****         
 4442              		.loc 1 492 17 is_stmt 1 view .LVU1494
 4443              	# sieve_extend.c:492:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 492:sieve_extend.c ****         
 4444              		.loc 1 492 9 is_stmt 0 view .LVU1495
 4445 1a91 4983FE03 		cmp	r14, 3	# word,
 4446 1a95 0F8604FF 		jbe	.L221	#,
 4446      FFFF
 4447              	.LVL187:
 4448 1a9b 0F1F4400 		.p2align 4
 4448      00
 4449              		.p2align 3
 4450              	.L369:
 495:sieve_extend.c ****         // const counter_t range_stop_vector = vectorindex(range_stop);
 4451              		.loc 1 495 9 is_stmt 1 view .LVU1496
 498:sieve_extend.c ****     }
 4452              		.loc 1 498 9 view .LVU1497
 4453 1aa0 C5FD6F44 		vmovdqa	ymm0, YMMWORD PTR 32[rsp]	# quadmask.56_36, quadmask
GAS LISTING /tmp/ccLUVin9.s 			page 128


 4453      2420
 4454              	.LVL188:
 4455              	.LBB339:
 422:sieve_extend.c **** 
 4456              		.loc 1 422 20 view .LVU1498
 4457              	.LBB337:
 425:sieve_extend.c ****     register const counter_t range_stop_vector = vectorindex(range_stop);
 4458              		.loc 1 425 5 view .LVU1499
 426:sieve_extend.c ****     register const counter_t step_2 = step * 2;
 4459              		.loc 1 426 5 view .LVU1500
 427:sieve_extend.c ****     register const counter_t step_3 = step * 3;
 4460              		.loc 1 427 5 view .LVU1501
 428:sieve_extend.c ****     register const counter_t step_4 = step * 4;
 4461              		.loc 1 428 5 view .LVU1502
 429:sieve_extend.c **** 
 4462              		.loc 1 429 5 view .LVU1503
 431:sieve_extend.c ****         register const counter_t loop_stop_vector = (range_stop_vector > step_4) ? (range_stop_vect
 4463              		.loc 1 431 5 view .LVU1504
 4464              	# sieve_extend.c:431:     if (current_vector+step_4 <= range_stop_vector) {
 431:sieve_extend.c ****         register const counter_t loop_stop_vector = (range_stop_vector > step_4) ? (range_stop_vect
 4465              		.loc 1 431 23 is_stmt 0 view .LVU1505
 4466 1aa6 4E8D3428 		lea	r14, [rax+r13]	# current_vector,
 4467              	# sieve_extend.c:431:     if (current_vector+step_4 <= range_stop_vector) {
 431:sieve_extend.c ****         register const counter_t loop_stop_vector = (range_stop_vector > step_4) ? (range_stop_vect
 4468              		.loc 1 431 8 view .LVU1506
 4469 1aaa 4D39F0   		cmp	r8, r14	# range_stop_vector, current_vector
 4470 1aad 0F820501 		jb	.L222	#,
 4470      0000
 4471              	.LBB335:
 432:sieve_extend.c ****         //#pragma GCC unroll 16
 4472              		.loc 1 432 9 is_stmt 1 view .LVU1507
 4473              	.LVL189:
 435:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 4474              		.loc 1 435 15 view .LVU1508
 4475              	# sieve_extend.c:435:         for(; current_vector <= loop_stop_vector; current_vector += step_4) {
 435:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 4476              		.loc 1 435 9 is_stmt 0 view .LVU1509
 4477 1ab3 4839F8   		cmp	rax, rdi	# current_vector, iftmp.57_93
 4478 1ab6 0F87FC00 		ja	.L222	#,
 4478      0000
 4479 1abc 488B4C24 		mov	rcx, QWORD PTR 24[rsp]	# bitarray_word, %sfp
 4479      18
 4480              	.LVL190:
 435:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 4481              		.loc 1 435 9 view .LVU1510
 4482 1ac1 48C1E005 		sal	rax, 5	# tmp200,
 4483              	.LVL191:
 435:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 4484              		.loc 1 435 9 view .LVU1511
 4485 1ac5 4801C1   		add	rcx, rax	# ivtmp.287, tmp200
 4486              	.L223:
 436:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= mask;
 4487              		.loc 1 436 13 is_stmt 1 view .LVU1512
 4488              	# sieve_extend.c:436:             bitarray_vector[current_vector       ] |= mask;
 436:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= mask;
 4489              		.loc 1 436 52 is_stmt 0 view .LVU1513
 4490 1ac8 C5FDEB09 		vpor	ymm1, ymm0, YMMWORD PTR [rcx]	# tmp201, quadmask.56_36, MEM[base: _204, offset: 0B]
GAS LISTING /tmp/ccLUVin9.s 			page 129


 4491              	# sieve_extend.c:435:         for(; current_vector <= loop_stop_vector; current_vector += step_4) {
 435:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 4492              		.loc 1 435 66 view .LVU1514
 4493 1acc 4C89F0   		mov	rax, r14	# current_vector, current_vector
 4494              	# sieve_extend.c:436:             bitarray_vector[current_vector       ] |= mask;
 436:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= mask;
 4495              		.loc 1 436 52 view .LVU1515
 4496 1acf C5FD7F09 		vmovdqa	YMMWORD PTR [rcx], ymm1	# MEM[base: _204, offset: 0B], tmp201
 437:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= mask;
 4497              		.loc 1 437 13 is_stmt 1 view .LVU1516
 4498              	# sieve_extend.c:437:             bitarray_vector[current_vector+step  ] |= mask;
 437:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= mask;
 4499              		.loc 1 437 52 is_stmt 0 view .LVU1517
 4500 1ad3 C4A17DEB 		vpor	ymm3, ymm0, YMMWORD PTR [rcx+r9]	# tmp202, quadmask.56_36, MEM[base: _204, index: _207, offse
 4500      1C09
 4501 1ad9 C4A17D7F 		vmovdqa	YMMWORD PTR [rcx+r9], ymm3	# MEM[base: _204, index: _207, offset: 0B], tmp202
 4501      1C09
 438:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= mask;
 4502              		.loc 1 438 13 is_stmt 1 view .LVU1518
 4503              	# sieve_extend.c:438:             bitarray_vector[current_vector+step_2] |= mask;
 438:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= mask;
 4504              		.loc 1 438 52 is_stmt 0 view .LVU1519
 4505 1adf C4A17DEB 		vpor	ymm4, ymm0, YMMWORD PTR [rcx+r12]	# tmp203, quadmask.56_36, MEM[base: _204, index: _211, offs
 4505      2421
 4506 1ae5 C4A17D7F 		vmovdqa	YMMWORD PTR [rcx+r12], ymm4	# MEM[base: _204, index: _211, offset: 0B], tmp203
 4506      2421
 439:sieve_extend.c ****         }
 4507              		.loc 1 439 13 is_stmt 1 view .LVU1520
 4508              	# sieve_extend.c:439:             bitarray_vector[current_vector+step_3] |= mask;
 439:sieve_extend.c ****         }
 4509              		.loc 1 439 52 is_stmt 0 view .LVU1521
 4510 1aeb C5FDEB2C 		vpor	ymm5, ymm0, YMMWORD PTR [rcx+rbx]	# tmp204, quadmask.56_36, MEM[base: _204, index: _215, offs
 4510      19
 4511 1af0 C5FD7F2C 		vmovdqa	YMMWORD PTR [rcx+rbx], ymm5	# MEM[base: _204, index: _215, offset: 0B], tmp204
 4511      19
 435:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 4512              		.loc 1 435 51 is_stmt 1 view .LVU1522
 4513              	.LVL192:
 435:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 4514              		.loc 1 435 15 view .LVU1523
 4515 1af5 4C01D1   		add	rcx, r10	# ivtmp.287, _200
 4516              	# sieve_extend.c:435:         for(; current_vector <= loop_stop_vector; current_vector += step_4) {
 435:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 4517              		.loc 1 435 9 is_stmt 0 view .LVU1524
 4518 1af8 4939FE   		cmp	r14, rdi	# current_vector, iftmp.57_93
 4519 1afb 0F87B700 		ja	.L222	#,
 4519      0000
 4520              	.LVL193:
 4521              	# sieve_extend.c:436:             bitarray_vector[current_vector       ] |= mask;
 436:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= mask;
 4522              		.loc 1 436 52 view .LVU1525
 4523 1b01 C5FDEB31 		vpor	ymm6, ymm0, YMMWORD PTR [rcx]	# tmp241, quadmask.56_36, MEM[base: _204, offset: 0B]
 4524 1b05 4F8D3C2E 		lea	r15, [r14+r13]	# current_vector,
 436:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= mask;
 4525              		.loc 1 436 13 is_stmt 1 view .LVU1526
 4526              	# sieve_extend.c:436:             bitarray_vector[current_vector       ] |= mask;
 436:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= mask;
GAS LISTING /tmp/ccLUVin9.s 			page 130


 4527              		.loc 1 436 52 is_stmt 0 view .LVU1527
 4528 1b09 C5FD7F31 		vmovdqa	YMMWORD PTR [rcx], ymm6	# MEM[base: _204, offset: 0B], tmp241
 437:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= mask;
 4529              		.loc 1 437 13 is_stmt 1 view .LVU1528
 4530              	# sieve_extend.c:435:         for(; current_vector <= loop_stop_vector; current_vector += step_4) {
 435:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 4531              		.loc 1 435 66 is_stmt 0 view .LVU1529
 4532 1b0d 4C89F8   		mov	rax, r15	# current_vector, current_vector
 4533              	.LVL194:
 4534              	# sieve_extend.c:437:             bitarray_vector[current_vector+step  ] |= mask;
 437:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= mask;
 4535              		.loc 1 437 52 view .LVU1530
 4536 1b10 C4A17DEB 		vpor	ymm7, ymm0, YMMWORD PTR [rcx+r9]	# tmp242, quadmask.56_36, MEM[base: _204, index: _207, offse
 4536      3C09
 4537 1b16 C4A17D7F 		vmovdqa	YMMWORD PTR [rcx+r9], ymm7	# MEM[base: _204, index: _207, offset: 0B], tmp242
 4537      3C09
 438:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= mask;
 4538              		.loc 1 438 13 is_stmt 1 view .LVU1531
 4539              	# sieve_extend.c:438:             bitarray_vector[current_vector+step_2] |= mask;
 438:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= mask;
 4540              		.loc 1 438 52 is_stmt 0 view .LVU1532
 4541 1b1c C4217DEB 		vpor	ymm8, ymm0, YMMWORD PTR [rcx+r12]	# tmp243, quadmask.56_36, MEM[base: _204, index: _211, offs
 4541      0421
 4542 1b22 C4217D7F 		vmovdqa	YMMWORD PTR [rcx+r12], ymm8	# MEM[base: _204, index: _211, offset: 0B], tmp243
 4542      0421
 439:sieve_extend.c ****         }
 4543              		.loc 1 439 13 is_stmt 1 view .LVU1533
 4544              	# sieve_extend.c:439:             bitarray_vector[current_vector+step_3] |= mask;
 439:sieve_extend.c ****         }
 4545              		.loc 1 439 52 is_stmt 0 view .LVU1534
 4546 1b28 C57DEB0C 		vpor	ymm9, ymm0, YMMWORD PTR [rcx+rbx]	# tmp244, quadmask.56_36, MEM[base: _204, index: _215, offs
 4546      19
 4547 1b2d C57D7F0C 		vmovdqa	YMMWORD PTR [rcx+rbx], ymm9	# MEM[base: _204, index: _215, offset: 0B], tmp244
 4547      19
 435:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 4548              		.loc 1 435 51 is_stmt 1 view .LVU1535
 435:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 4549              		.loc 1 435 15 view .LVU1536
 4550 1b32 4C01D1   		add	rcx, r10	# ivtmp.287, _200
 4551              	# sieve_extend.c:435:         for(; current_vector <= loop_stop_vector; current_vector += step_4) {
 435:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 4552              		.loc 1 435 9 is_stmt 0 view .LVU1537
 4553 1b35 4939FF   		cmp	r15, rdi	# current_vector, iftmp.57_93
 4554 1b38 777E     		ja	.L222	#,
 4555              	# sieve_extend.c:436:             bitarray_vector[current_vector       ] |= mask;
 436:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= mask;
 4556              		.loc 1 436 52 view .LVU1538
 4557 1b3a C57DEB11 		vpor	ymm10, ymm0, YMMWORD PTR [rcx]	# tmp389, quadmask.56_36, MEM[base: _204, offset: 0B]
 4558 1b3e 4F8D342F 		lea	r14, [r15+r13]	# current_vector,
 4559              	.LVL195:
 436:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= mask;
 4560              		.loc 1 436 13 is_stmt 1 view .LVU1539
 4561              	# sieve_extend.c:436:             bitarray_vector[current_vector       ] |= mask;
 436:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= mask;
 4562              		.loc 1 436 52 is_stmt 0 view .LVU1540
 4563 1b42 C57D7F11 		vmovdqa	YMMWORD PTR [rcx], ymm10	# MEM[base: _204, offset: 0B], tmp389
 437:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= mask;
GAS LISTING /tmp/ccLUVin9.s 			page 131


 4564              		.loc 1 437 13 is_stmt 1 view .LVU1541
 4565              	# sieve_extend.c:435:         for(; current_vector <= loop_stop_vector; current_vector += step_4) {
 435:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 4566              		.loc 1 435 66 is_stmt 0 view .LVU1542
 4567 1b46 4C89F0   		mov	rax, r14	# current_vector, current_vector
 4568              	# sieve_extend.c:437:             bitarray_vector[current_vector+step  ] |= mask;
 437:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= mask;
 4569              		.loc 1 437 52 view .LVU1543
 4570 1b49 C4217DEB 		vpor	ymm11, ymm0, YMMWORD PTR [rcx+r9]	# tmp390, quadmask.56_36, MEM[base: _204, index: _207, offs
 4570      1C09
 4571 1b4f C4217D7F 		vmovdqa	YMMWORD PTR [rcx+r9], ymm11	# MEM[base: _204, index: _207, offset: 0B], tmp390
 4571      1C09
 438:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= mask;
 4572              		.loc 1 438 13 is_stmt 1 view .LVU1544
 4573              	# sieve_extend.c:438:             bitarray_vector[current_vector+step_2] |= mask;
 438:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= mask;
 4574              		.loc 1 438 52 is_stmt 0 view .LVU1545
 4575 1b55 C4217DEB 		vpor	ymm12, ymm0, YMMWORD PTR [rcx+r12]	# tmp391, quadmask.56_36, MEM[base: _204, index: _211, off
 4575      2421
 4576 1b5b C4217D7F 		vmovdqa	YMMWORD PTR [rcx+r12], ymm12	# MEM[base: _204, index: _211, offset: 0B], tmp391
 4576      2421
 439:sieve_extend.c ****         }
 4577              		.loc 1 439 13 is_stmt 1 view .LVU1546
 4578              	# sieve_extend.c:439:             bitarray_vector[current_vector+step_3] |= mask;
 439:sieve_extend.c ****         }
 4579              		.loc 1 439 52 is_stmt 0 view .LVU1547
 4580 1b61 C57DEB2C 		vpor	ymm13, ymm0, YMMWORD PTR [rcx+rbx]	# tmp392, quadmask.56_36, MEM[base: _204, index: _215, off
 4580      19
 4581 1b66 C57D7F2C 		vmovdqa	YMMWORD PTR [rcx+rbx], ymm13	# MEM[base: _204, index: _215, offset: 0B], tmp392
 4581      19
 435:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 4582              		.loc 1 435 51 is_stmt 1 view .LVU1548
 435:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 4583              		.loc 1 435 15 view .LVU1549
 4584 1b6b 4C01D1   		add	rcx, r10	# ivtmp.287, _200
 4585              	# sieve_extend.c:435:         for(; current_vector <= loop_stop_vector; current_vector += step_4) {
 435:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 4586              		.loc 1 435 9 is_stmt 0 view .LVU1550
 4587 1b6e 4939FE   		cmp	r14, rdi	# current_vector, iftmp.57_93
 4588 1b71 7745     		ja	.L222	#,
 4589              	# sieve_extend.c:436:             bitarray_vector[current_vector       ] |= mask;
 436:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= mask;
 4590              		.loc 1 436 52 view .LVU1551
 4591 1b73 C57DEB31 		vpor	ymm14, ymm0, YMMWORD PTR [rcx]	# tmp395, quadmask.56_36, MEM[base: _204, offset: 0B]
 4592 1b77 4F8D3C2E 		lea	r15, [r14+r13]	# current_vector,
 436:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= mask;
 4593              		.loc 1 436 13 is_stmt 1 view .LVU1552
 4594              	# sieve_extend.c:436:             bitarray_vector[current_vector       ] |= mask;
 436:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= mask;
 4595              		.loc 1 436 52 is_stmt 0 view .LVU1553
 4596 1b7b C57D7F31 		vmovdqa	YMMWORD PTR [rcx], ymm14	# MEM[base: _204, offset: 0B], tmp395
 437:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= mask;
 4597              		.loc 1 437 13 is_stmt 1 view .LVU1554
 4598              	# sieve_extend.c:435:         for(; current_vector <= loop_stop_vector; current_vector += step_4) {
 435:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 4599              		.loc 1 435 66 is_stmt 0 view .LVU1555
 4600 1b7f 4C89F8   		mov	rax, r15	# current_vector, current_vector
GAS LISTING /tmp/ccLUVin9.s 			page 132


 4601              	# sieve_extend.c:437:             bitarray_vector[current_vector+step  ] |= mask;
 437:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= mask;
 4602              		.loc 1 437 52 view .LVU1556
 4603 1b82 C4217DEB 		vpor	ymm15, ymm0, YMMWORD PTR [rcx+r9]	# tmp396, quadmask.56_36, MEM[base: _204, index: _207, offs
 4603      3C09
 4604 1b88 C4217D7F 		vmovdqa	YMMWORD PTR [rcx+r9], ymm15	# MEM[base: _204, index: _207, offset: 0B], tmp396
 4604      3C09
 438:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= mask;
 4605              		.loc 1 438 13 is_stmt 1 view .LVU1557
 4606              	# sieve_extend.c:438:             bitarray_vector[current_vector+step_2] |= mask;
 438:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= mask;
 4607              		.loc 1 438 52 is_stmt 0 view .LVU1558
 4608 1b8e C4A17DEB 		vpor	ymm1, ymm0, YMMWORD PTR [rcx+r12]	# tmp397, quadmask.56_36, MEM[base: _204, index: _211, offs
 4608      0C21
 4609 1b94 C4A17D7F 		vmovdqa	YMMWORD PTR [rcx+r12], ymm1	# MEM[base: _204, index: _211, offset: 0B], tmp397
 4609      0C21
 439:sieve_extend.c ****         }
 4610              		.loc 1 439 13 is_stmt 1 view .LVU1559
 4611              	# sieve_extend.c:439:             bitarray_vector[current_vector+step_3] |= mask;
 439:sieve_extend.c ****         }
 4612              		.loc 1 439 52 is_stmt 0 view .LVU1560
 4613 1b9a C5FDEB1C 		vpor	ymm3, ymm0, YMMWORD PTR [rcx+rbx]	# tmp398, quadmask.56_36, MEM[base: _204, index: _215, offs
 4613      19
 4614 1b9f C5FD7F1C 		vmovdqa	YMMWORD PTR [rcx+rbx], ymm3	# MEM[base: _204, index: _215, offset: 0B], tmp398
 4614      19
 435:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 4615              		.loc 1 435 51 is_stmt 1 view .LVU1561
 435:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 4616              		.loc 1 435 15 view .LVU1562
 4617 1ba4 4C01D1   		add	rcx, r10	# ivtmp.287, _200
 4618              	# sieve_extend.c:435:         for(; current_vector <= loop_stop_vector; current_vector += step_4) {
 435:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 4619              		.loc 1 435 9 is_stmt 0 view .LVU1563
 4620 1ba7 4939FF   		cmp	r15, rdi	# current_vector, iftmp.57_93
 4621 1baa 770C     		ja	.L222	#,
 4622              	.LVL196:
 435:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 4623              		.loc 1 435 9 view .LVU1564
 4624 1bac 4F8D342F 		lea	r14, [r15+r13]	# current_vector,
 4625              	.LVL197:
 435:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 4626              		.loc 1 435 9 view .LVU1565
 4627 1bb0 E913FFFF 		jmp	.L223	#
 4627      FF
 4628              	.LVL198:
 4629              		.p2align 4,,7
 4630 1bb5 0F1F00   		.p2align 3
 4631              	.L222:
 435:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 4632              		.loc 1 435 9 view .LVU1566
 4633              	.LBE335:
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4634              		.loc 1 445 11 is_stmt 1 view .LVU1567
 4635              	# sieve_extend.c:445:     for(; current_vector <= range_stop_vector; current_vector += step) {
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4636              		.loc 1 445 5 is_stmt 0 view .LVU1568
 4637 1bb8 4939C0   		cmp	r8, rax	# range_stop_vector, current_vector
GAS LISTING /tmp/ccLUVin9.s 			page 133


 4638 1bbb 0F82BF00 		jb	.L224	#,
 4638      0000
 4639 1bc1 4989C7   		mov	r15, rax	# tmp205, current_vector
 4640 1bc4 49C1E705 		sal	r15, 5	# tmp205,
 4641 1bc8 4C037C24 		add	r15, QWORD PTR 24[rsp]	# ivtmp.281, %sfp
 4641      18
 4642              	.L225:
 446:sieve_extend.c ****     }
 4643              		.loc 1 446 9 is_stmt 1 view .LVU1569
 4644              	# sieve_extend.c:445:     for(; current_vector <= range_stop_vector; current_vector += step) {
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4645              		.loc 1 445 63 is_stmt 0 view .LVU1570
 4646 1bcd 4C8D3410 		lea	r14, [rax+rdx]	# current_vector,
 4647              	# sieve_extend.c:446:         bitarray_vector[current_vector] |= mask;
 446:sieve_extend.c ****     }
 4648              		.loc 1 446 41 view .LVU1571
 4649 1bd1 C4C17DEB 		vpor	ymm4, ymm0, YMMWORD PTR [r15]	# tmp206, quadmask.56_36, MEM[base: _196, offset: 0B]
 4649      27
 4650              	# sieve_extend.c:445:     for(; current_vector <= range_stop_vector; current_vector += step) {
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4651              		.loc 1 445 5 view .LVU1572
 4652 1bd6 4D39F0   		cmp	r8, r14	# range_stop_vector, current_vector
 4653 1bd9 4B8D0C0F 		lea	rcx, [r15+r9]	# ivtmp.281,
 4654              	# sieve_extend.c:446:         bitarray_vector[current_vector] |= mask;
 446:sieve_extend.c ****     }
 4655              		.loc 1 446 41 view .LVU1573
 4656 1bdd C4C17D7F 		vmovdqa	YMMWORD PTR [r15], ymm4	# MEM[base: _196, offset: 0B], tmp206
 4656      27
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4657              		.loc 1 445 48 is_stmt 1 view .LVU1574
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4658              		.loc 1 445 11 view .LVU1575
 4659              	# sieve_extend.c:445:     for(; current_vector <= range_stop_vector; current_vector += step) {
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4660              		.loc 1 445 5 is_stmt 0 view .LVU1576
 4661 1be2 0F829800 		jb	.L224	#,
 4661      0000
 446:sieve_extend.c ****     }
 4662              		.loc 1 446 9 is_stmt 1 view .LVU1577
 4663              	# sieve_extend.c:446:         bitarray_vector[current_vector] |= mask;
 446:sieve_extend.c ****     }
 4664              		.loc 1 446 41 is_stmt 0 view .LVU1578
 4665 1be8 C5FDEB29 		vpor	ymm5, ymm0, YMMWORD PTR [rcx]	# tmp369, quadmask.56_36, MEM[base: _196, offset: 0B]
 4666              	# sieve_extend.c:445:     for(; current_vector <= range_stop_vector; current_vector += step) {
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4667              		.loc 1 445 63 view .LVU1579
 4668 1bec 4901D6   		add	r14, rdx	# current_vector, step
 4669              	# sieve_extend.c:446:         bitarray_vector[current_vector] |= mask;
 446:sieve_extend.c ****     }
 4670              		.loc 1 446 41 view .LVU1580
 4671 1bef C5FD7F29 		vmovdqa	YMMWORD PTR [rcx], ymm5	# MEM[base: _196, offset: 0B], tmp369
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4672              		.loc 1 445 48 is_stmt 1 view .LVU1581
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4673              		.loc 1 445 11 view .LVU1582
 4674 1bf3 4C01C9   		add	rcx, r9	# ivtmp.281, _207
 4675              	# sieve_extend.c:445:     for(; current_vector <= range_stop_vector; current_vector += step) {
GAS LISTING /tmp/ccLUVin9.s 			page 134


 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4676              		.loc 1 445 5 is_stmt 0 view .LVU1583
 4677 1bf6 4D39F0   		cmp	r8, r14	# range_stop_vector, current_vector
 4678 1bf9 0F828100 		jb	.L224	#,
 4678      0000
 446:sieve_extend.c ****     }
 4679              		.loc 1 446 9 is_stmt 1 view .LVU1584
 4680              	# sieve_extend.c:446:         bitarray_vector[current_vector] |= mask;
 446:sieve_extend.c ****     }
 4681              		.loc 1 446 41 is_stmt 0 view .LVU1585
 4682 1bff C5FDEB31 		vpor	ymm6, ymm0, YMMWORD PTR [rcx]	# tmp372, quadmask.56_36, MEM[base: _196, offset: 0B]
 4683              	# sieve_extend.c:445:     for(; current_vector <= range_stop_vector; current_vector += step) {
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4684              		.loc 1 445 63 view .LVU1586
 4685 1c03 4901D6   		add	r14, rdx	# current_vector, step
 4686              	# sieve_extend.c:446:         bitarray_vector[current_vector] |= mask;
 446:sieve_extend.c ****     }
 4687              		.loc 1 446 41 view .LVU1587
 4688 1c06 C5FD7F31 		vmovdqa	YMMWORD PTR [rcx], ymm6	# MEM[base: _196, offset: 0B], tmp372
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4689              		.loc 1 445 48 is_stmt 1 view .LVU1588
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4690              		.loc 1 445 11 view .LVU1589
 4691 1c0a 4C01C9   		add	rcx, r9	# ivtmp.281, _207
 4692              	# sieve_extend.c:445:     for(; current_vector <= range_stop_vector; current_vector += step) {
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4693              		.loc 1 445 5 is_stmt 0 view .LVU1590
 4694 1c0d 4D39F0   		cmp	r8, r14	# range_stop_vector, current_vector
 4695 1c10 726E     		jb	.L224	#,
 446:sieve_extend.c ****     }
 4696              		.loc 1 446 9 is_stmt 1 view .LVU1591
 4697              	# sieve_extend.c:446:         bitarray_vector[current_vector] |= mask;
 446:sieve_extend.c ****     }
 4698              		.loc 1 446 41 is_stmt 0 view .LVU1592
 4699 1c12 C5FDEB39 		vpor	ymm7, ymm0, YMMWORD PTR [rcx]	# tmp375, quadmask.56_36, MEM[base: _196, offset: 0B]
 4700              	# sieve_extend.c:445:     for(; current_vector <= range_stop_vector; current_vector += step) {
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4701              		.loc 1 445 63 view .LVU1593
 4702 1c16 4901D6   		add	r14, rdx	# current_vector, step
 4703              	# sieve_extend.c:446:         bitarray_vector[current_vector] |= mask;
 446:sieve_extend.c ****     }
 4704              		.loc 1 446 41 view .LVU1594
 4705 1c19 C5FD7F39 		vmovdqa	YMMWORD PTR [rcx], ymm7	# MEM[base: _196, offset: 0B], tmp375
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4706              		.loc 1 445 48 is_stmt 1 view .LVU1595
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4707              		.loc 1 445 11 view .LVU1596
 4708 1c1d 4C01C9   		add	rcx, r9	# ivtmp.281, _207
 4709              	# sieve_extend.c:445:     for(; current_vector <= range_stop_vector; current_vector += step) {
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4710              		.loc 1 445 5 is_stmt 0 view .LVU1597
 4711 1c20 4D39F0   		cmp	r8, r14	# range_stop_vector, current_vector
 4712 1c23 725B     		jb	.L224	#,
 446:sieve_extend.c ****     }
 4713              		.loc 1 446 9 is_stmt 1 view .LVU1598
 4714              	# sieve_extend.c:446:         bitarray_vector[current_vector] |= mask;
 446:sieve_extend.c ****     }
GAS LISTING /tmp/ccLUVin9.s 			page 135


 4715              		.loc 1 446 41 is_stmt 0 view .LVU1599
 4716 1c25 C57DEB01 		vpor	ymm8, ymm0, YMMWORD PTR [rcx]	# tmp378, quadmask.56_36, MEM[base: _196, offset: 0B]
 4717              	# sieve_extend.c:445:     for(; current_vector <= range_stop_vector; current_vector += step) {
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4718              		.loc 1 445 63 view .LVU1600
 4719 1c29 4901D6   		add	r14, rdx	# current_vector, step
 4720              	# sieve_extend.c:446:         bitarray_vector[current_vector] |= mask;
 446:sieve_extend.c ****     }
 4721              		.loc 1 446 41 view .LVU1601
 4722 1c2c C57D7F01 		vmovdqa	YMMWORD PTR [rcx], ymm8	# MEM[base: _196, offset: 0B], tmp378
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4723              		.loc 1 445 48 is_stmt 1 view .LVU1602
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4724              		.loc 1 445 11 view .LVU1603
 4725 1c30 4C01C9   		add	rcx, r9	# ivtmp.281, _207
 4726              	# sieve_extend.c:445:     for(; current_vector <= range_stop_vector; current_vector += step) {
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4727              		.loc 1 445 5 is_stmt 0 view .LVU1604
 4728 1c33 4D39F0   		cmp	r8, r14	# range_stop_vector, current_vector
 4729 1c36 7248     		jb	.L224	#,
 446:sieve_extend.c ****     }
 4730              		.loc 1 446 9 is_stmt 1 view .LVU1605
 4731              	# sieve_extend.c:446:         bitarray_vector[current_vector] |= mask;
 446:sieve_extend.c ****     }
 4732              		.loc 1 446 41 is_stmt 0 view .LVU1606
 4733 1c38 C57DEB09 		vpor	ymm9, ymm0, YMMWORD PTR [rcx]	# tmp381, quadmask.56_36, MEM[base: _196, offset: 0B]
 4734              	# sieve_extend.c:445:     for(; current_vector <= range_stop_vector; current_vector += step) {
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4735              		.loc 1 445 63 view .LVU1607
 4736 1c3c 4901D6   		add	r14, rdx	# current_vector, step
 4737              	# sieve_extend.c:446:         bitarray_vector[current_vector] |= mask;
 446:sieve_extend.c ****     }
 4738              		.loc 1 446 41 view .LVU1608
 4739 1c3f C57D7F09 		vmovdqa	YMMWORD PTR [rcx], ymm9	# MEM[base: _196, offset: 0B], tmp381
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4740              		.loc 1 445 48 is_stmt 1 view .LVU1609
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4741              		.loc 1 445 11 view .LVU1610
 4742 1c43 4C01C9   		add	rcx, r9	# ivtmp.281, _207
 4743              	# sieve_extend.c:445:     for(; current_vector <= range_stop_vector; current_vector += step) {
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4744              		.loc 1 445 5 is_stmt 0 view .LVU1611
 4745 1c46 4D39F0   		cmp	r8, r14	# range_stop_vector, current_vector
 4746 1c49 7235     		jb	.L224	#,
 446:sieve_extend.c ****     }
 4747              		.loc 1 446 9 is_stmt 1 view .LVU1612
 4748              	# sieve_extend.c:445:     for(; current_vector <= range_stop_vector; current_vector += step) {
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4749              		.loc 1 445 63 is_stmt 0 view .LVU1613
 4750 1c4b 4901D6   		add	r14, rdx	# current_vector, step
 4751              	# sieve_extend.c:446:         bitarray_vector[current_vector] |= mask;
 446:sieve_extend.c ****     }
 4752              		.loc 1 446 41 view .LVU1614
 4753 1c4e C57DEB11 		vpor	ymm10, ymm0, YMMWORD PTR [rcx]	# tmp384, quadmask.56_36, MEM[base: _196, offset: 0B]
 4754              	# sieve_extend.c:445:     for(; current_vector <= range_stop_vector; current_vector += step) {
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4755              		.loc 1 445 5 view .LVU1615
GAS LISTING /tmp/ccLUVin9.s 			page 136


 4756 1c52 4D39F0   		cmp	r8, r14	# range_stop_vector, current_vector
 4757 1c55 4E8D3C09 		lea	r15, [rcx+r9]	# ivtmp.281,
 4758              	# sieve_extend.c:446:         bitarray_vector[current_vector] |= mask;
 446:sieve_extend.c ****     }
 4759              		.loc 1 446 41 view .LVU1616
 4760 1c59 C57D7F11 		vmovdqa	YMMWORD PTR [rcx], ymm10	# MEM[base: _196, offset: 0B], tmp384
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4761              		.loc 1 445 48 is_stmt 1 view .LVU1617
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4762              		.loc 1 445 11 view .LVU1618
 4763              	# sieve_extend.c:445:     for(; current_vector <= range_stop_vector; current_vector += step) {
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4764              		.loc 1 445 5 is_stmt 0 view .LVU1619
 4765 1c5d 7221     		jb	.L224	#,
 446:sieve_extend.c ****     }
 4766              		.loc 1 446 9 is_stmt 1 view .LVU1620
 4767              	# sieve_extend.c:446:         bitarray_vector[current_vector] |= mask;
 446:sieve_extend.c ****     }
 4768              		.loc 1 446 41 is_stmt 0 view .LVU1621
 4769 1c5f C4417DEB 		vpor	ymm11, ymm0, YMMWORD PTR [r15]	# tmp387, quadmask.56_36, MEM[base: _196, offset: 0B]
 4769      1F
 4770              	# sieve_extend.c:445:     for(; current_vector <= range_stop_vector; current_vector += step) {
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4771              		.loc 1 445 63 view .LVU1622
 4772 1c64 498D0416 		lea	rax, [r14+rdx]	# current_vector,
 4773              	# sieve_extend.c:446:         bitarray_vector[current_vector] |= mask;
 446:sieve_extend.c ****     }
 4774              		.loc 1 446 41 view .LVU1623
 4775 1c68 C4417D7F 		vmovdqa	YMMWORD PTR [r15], ymm11	# MEM[base: _196, offset: 0B], tmp387
 4775      1F
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4776              		.loc 1 445 48 is_stmt 1 view .LVU1624
 4777              	.LVL199:
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4778              		.loc 1 445 11 view .LVU1625
 4779 1c6d 4D01CF   		add	r15, r9	# ivtmp.281, _207
 4780              	# sieve_extend.c:445:     for(; current_vector <= range_stop_vector; current_vector += step) {
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4781              		.loc 1 445 5 is_stmt 0 view .LVU1626
 4782 1c70 4939C0   		cmp	r8, rax	# range_stop_vector, current_vector
 4783 1c73 0F8354FF 		jnb	.L225	#,
 4783      FFFF
 4784              	.LVL200:
 4785 1c79 0F1F8000 		.p2align 4
 4785      000000
 4786              		.p2align 3
 4787              	.L224:
 445:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4788              		.loc 1 445 5 view .LVU1627
 4789              	.LBE337:
 4790              	.LBE339:
 4791              	.LBE340:
 480:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 4792              		.loc 1 480 41 is_stmt 1 view .LVU1628
 4793              	# sieve_extend.c:480:     for (counter_t index = range_start; index < range_stop_unique;) {
 480:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 4794              		.loc 1 480 5 is_stmt 0 view .LVU1629
GAS LISTING /tmp/ccLUVin9.s 			page 137


 4795 1c80 48397424 		cmp	QWORD PTR 16[rsp], rsi	# %sfp, range_start
 4795      10
 4796 1c85 0F87F5FC 		ja	.L226	#,
 4796      FFFF
 4797 1c8b E981FCFF 		jmp	.L394	#
 4797      FF
 4798              	.LVL201:
 4799              	.L216:
 480:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 4800              		.loc 1 480 5 view .LVU1630
 4801              	.LBE341:
 4802              	.LBB342:
 463:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4803              		.loc 1 463 49 is_stmt 1 view .LVU1631
 4804              	# sieve_extend.c:463:             for (counter_t index = range_start; index <= range_stop; index +=
 463:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4805              		.loc 1 463 13 is_stmt 0 view .LVU1632
 4806 1c90 4839CE   		cmp	rsi, rcx	# range_start, range_stop
 4807              		.p2align 4,,3
 4808 1c93 0F877BFC 		ja	.L214	#,
 4808      FFFF
 4809              	# sieve_extend.c:464:                 bitarray_word[wordindex(index)] |= markmask(index);
 464:sieve_extend.c ****             return;                 
 4810              		.loc 1 464 52 view .LVU1633
 4811 1c99 41BE0100 		mov	r14d, 1	# tmp179,
 4811      0000
 4812              	.LVL202:
 4813              	.L219:
 464:sieve_extend.c ****             return;                 
 4814              		.loc 1 464 17 is_stmt 1 discriminator 3 view .LVU1634
 4815              	# sieve_extend.c:464:                 bitarray_word[wordindex(index)] |= markmask(index);
 464:sieve_extend.c ****             return;                 
 4816              		.loc 1 464 49 is_stmt 0 discriminator 3 view .LVU1635
 4817 1c9f 4989F7   		mov	r15, rsi	# tmp175, range_start
 4818              	# sieve_extend.c:464:                 bitarray_word[wordindex(index)] |= markmask(index);
 464:sieve_extend.c ****             return;                 
 4819              		.loc 1 464 52 discriminator 3 view .LVU1636
 4820 1ca2 C442C9F7 		shlx	r9, r14, rsi	# tmp178, tmp179, range_start
 4820      CE
 4821              	# sieve_extend.c:464:                 bitarray_word[wordindex(index)] |= markmask(index);
 464:sieve_extend.c ****             return;                 
 4822              		.loc 1 464 49 discriminator 3 view .LVU1637
 4823 1ca7 49C1EF06 		shr	r15, 6	# tmp175,
 4824              	# sieve_extend.c:463:             for (counter_t index = range_start; index <= range_stop; index +=
 463:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4825              		.loc 1 463 76 discriminator 3 view .LVU1638
 4826 1cab 4801D6   		add	rsi, rdx	# range_start, step
 4827              	# sieve_extend.c:464:                 bitarray_word[wordindex(index)] |= markmask(index);
 464:sieve_extend.c ****             return;                 
 4828              		.loc 1 464 49 discriminator 3 view .LVU1639
 4829 1cae 4E090CFF 		or	QWORD PTR [rdi+r15*8], r9	# *_14, tmp178
 463:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4830              		.loc 1 463 70 is_stmt 1 discriminator 3 view .LVU1640
 463:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4831              		.loc 1 463 49 discriminator 3 view .LVU1641
 4832              	# sieve_extend.c:463:             for (counter_t index = range_start; index <= range_stop; index +=
 463:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
GAS LISTING /tmp/ccLUVin9.s 			page 138


 4833              		.loc 1 463 13 is_stmt 0 discriminator 3 view .LVU1642
 4834 1cb2 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 4835 1cb5 0F8259FC 		jb	.L214	#,
 4835      FFFF
 464:sieve_extend.c ****             return;                 
 4836              		.loc 1 464 17 is_stmt 1 view .LVU1643
 4837              	# sieve_extend.c:464:                 bitarray_word[wordindex(index)] |= markmask(index);
 464:sieve_extend.c ****             return;                 
 4838              		.loc 1 464 49 is_stmt 0 view .LVU1644
 4839 1cbb 4989F4   		mov	r12, rsi	# tmp294, range_start
 4840              	# sieve_extend.c:464:                 bitarray_word[wordindex(index)] |= markmask(index);
 464:sieve_extend.c ****             return;                 
 4841              		.loc 1 464 52 view .LVU1645
 4842 1cbe C442C9F7 		shlx	r13, r14, rsi	# tmp297, tmp179, range_start
 4842      EE
 4843              	# sieve_extend.c:464:                 bitarray_word[wordindex(index)] |= markmask(index);
 464:sieve_extend.c ****             return;                 
 4844              		.loc 1 464 49 view .LVU1646
 4845 1cc3 49C1EC06 		shr	r12, 6	# tmp294,
 4846              	# sieve_extend.c:463:             for (counter_t index = range_start; index <= range_stop; index +=
 463:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4847              		.loc 1 463 76 view .LVU1647
 4848 1cc7 4801D6   		add	rsi, rdx	# range_start, step
 4849              	# sieve_extend.c:464:                 bitarray_word[wordindex(index)] |= markmask(index);
 464:sieve_extend.c ****             return;                 
 4850              		.loc 1 464 49 view .LVU1648
 4851 1cca 4E092CE7 		or	QWORD PTR [rdi+r12*8], r13	# *_14, tmp297
 463:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4852              		.loc 1 463 70 is_stmt 1 view .LVU1649
 463:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4853              		.loc 1 463 49 view .LVU1650
 4854              	# sieve_extend.c:463:             for (counter_t index = range_start; index <= range_stop; index +=
 463:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4855              		.loc 1 463 13 is_stmt 0 view .LVU1651
 4856 1cce 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 4857 1cd1 0F823DFC 		jb	.L214	#,
 4857      FFFF
 464:sieve_extend.c ****             return;                 
 4858              		.loc 1 464 17 is_stmt 1 view .LVU1652
 4859              	# sieve_extend.c:464:                 bitarray_word[wordindex(index)] |= markmask(index);
 464:sieve_extend.c ****             return;                 
 4860              		.loc 1 464 49 is_stmt 0 view .LVU1653
 4861 1cd7 4889F0   		mov	rax, rsi	# tmp299, range_start
 4862              	# sieve_extend.c:464:                 bitarray_word[wordindex(index)] |= markmask(index);
 464:sieve_extend.c ****             return;                 
 4863              		.loc 1 464 52 view .LVU1654
 4864 1cda C4C2C9F7 		shlx	rbx, r14, rsi	# tmp302, tmp179, range_start
 4864      DE
 4865              	# sieve_extend.c:464:                 bitarray_word[wordindex(index)] |= markmask(index);
 464:sieve_extend.c ****             return;                 
 4866              		.loc 1 464 49 view .LVU1655
 4867 1cdf 48C1E806 		shr	rax, 6	# tmp299,
 4868              	# sieve_extend.c:463:             for (counter_t index = range_start; index <= range_stop; index +=
 463:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4869              		.loc 1 463 76 view .LVU1656
 4870 1ce3 4801D6   		add	rsi, rdx	# range_start, step
 4871              	# sieve_extend.c:464:                 bitarray_word[wordindex(index)] |= markmask(index);
GAS LISTING /tmp/ccLUVin9.s 			page 139


 464:sieve_extend.c ****             return;                 
 4872              		.loc 1 464 49 view .LVU1657
 4873 1ce6 48091CC7 		or	QWORD PTR [rdi+rax*8], rbx	# *_14, tmp302
 463:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4874              		.loc 1 463 70 is_stmt 1 view .LVU1658
 463:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4875              		.loc 1 463 49 view .LVU1659
 4876              	# sieve_extend.c:463:             for (counter_t index = range_start; index <= range_stop; index +=
 463:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4877              		.loc 1 463 13 is_stmt 0 view .LVU1660
 4878 1cea 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 4879 1ced 0F8221FC 		jb	.L214	#,
 4879      FFFF
 464:sieve_extend.c ****             return;                 
 4880              		.loc 1 464 17 is_stmt 1 view .LVU1661
 4881              	# sieve_extend.c:464:                 bitarray_word[wordindex(index)] |= markmask(index);
 464:sieve_extend.c ****             return;                 
 4882              		.loc 1 464 49 is_stmt 0 view .LVU1662
 4883 1cf3 4989F0   		mov	r8, rsi	# tmp304, range_start
 4884              	# sieve_extend.c:464:                 bitarray_word[wordindex(index)] |= markmask(index);
 464:sieve_extend.c ****             return;                 
 4885              		.loc 1 464 52 view .LVU1663
 4886 1cf6 C442C9F7 		shlx	r10, r14, rsi	# tmp307, tmp179, range_start
 4886      D6
 4887              	# sieve_extend.c:464:                 bitarray_word[wordindex(index)] |= markmask(index);
 464:sieve_extend.c ****             return;                 
 4888              		.loc 1 464 49 view .LVU1664
 4889 1cfb 49C1E806 		shr	r8, 6	# tmp304,
 4890              	# sieve_extend.c:463:             for (counter_t index = range_start; index <= range_stop; index +=
 463:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4891              		.loc 1 463 76 view .LVU1665
 4892 1cff 4801D6   		add	rsi, rdx	# range_start, step
 4893              	# sieve_extend.c:464:                 bitarray_word[wordindex(index)] |= markmask(index);
 464:sieve_extend.c ****             return;                 
 4894              		.loc 1 464 49 view .LVU1666
 4895 1d02 4E0914C7 		or	QWORD PTR [rdi+r8*8], r10	# *_14, tmp307
 463:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4896              		.loc 1 463 70 is_stmt 1 view .LVU1667
 463:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4897              		.loc 1 463 49 view .LVU1668
 4898              	# sieve_extend.c:463:             for (counter_t index = range_start; index <= range_stop; index +=
 463:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4899              		.loc 1 463 13 is_stmt 0 view .LVU1669
 4900 1d06 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 4901 1d09 0F8205FC 		jb	.L214	#,
 4901      FFFF
 464:sieve_extend.c ****             return;                 
 4902              		.loc 1 464 17 is_stmt 1 view .LVU1670
 4903              	# sieve_extend.c:464:                 bitarray_word[wordindex(index)] |= markmask(index);
 464:sieve_extend.c ****             return;                 
 4904              		.loc 1 464 49 is_stmt 0 view .LVU1671
 4905 1d0f 4989F3   		mov	r11, rsi	# tmp309, range_start
 4906              	# sieve_extend.c:464:                 bitarray_word[wordindex(index)] |= markmask(index);
 464:sieve_extend.c ****             return;                 
 4907              		.loc 1 464 52 view .LVU1672
 4908 1d12 C442C9F7 		shlx	r15, r14, rsi	# tmp312, tmp179, range_start
 4908      FE
GAS LISTING /tmp/ccLUVin9.s 			page 140


 4909              	# sieve_extend.c:464:                 bitarray_word[wordindex(index)] |= markmask(index);
 464:sieve_extend.c ****             return;                 
 4910              		.loc 1 464 49 view .LVU1673
 4911 1d17 49C1EB06 		shr	r11, 6	# tmp309,
 4912              	# sieve_extend.c:463:             for (counter_t index = range_start; index <= range_stop; index +=
 463:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4913              		.loc 1 463 76 view .LVU1674
 4914 1d1b 4801D6   		add	rsi, rdx	# range_start, step
 4915              	# sieve_extend.c:464:                 bitarray_word[wordindex(index)] |= markmask(index);
 464:sieve_extend.c ****             return;                 
 4916              		.loc 1 464 49 view .LVU1675
 4917 1d1e 4E093CDF 		or	QWORD PTR [rdi+r11*8], r15	# *_14, tmp312
 463:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4918              		.loc 1 463 70 is_stmt 1 view .LVU1676
 463:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4919              		.loc 1 463 49 view .LVU1677
 4920              	# sieve_extend.c:463:             for (counter_t index = range_start; index <= range_stop; index +=
 463:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4921              		.loc 1 463 13 is_stmt 0 view .LVU1678
 4922 1d22 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 4923 1d25 0F82E9FB 		jb	.L214	#,
 4923      FFFF
 464:sieve_extend.c ****             return;                 
 4924              		.loc 1 464 17 is_stmt 1 view .LVU1679
 4925              	# sieve_extend.c:464:                 bitarray_word[wordindex(index)] |= markmask(index);
 464:sieve_extend.c ****             return;                 
 4926              		.loc 1 464 49 is_stmt 0 view .LVU1680
 4927 1d2b 4989F4   		mov	r12, rsi	# tmp314, range_start
 4928              	# sieve_extend.c:464:                 bitarray_word[wordindex(index)] |= markmask(index);
 464:sieve_extend.c ****             return;                 
 4929              		.loc 1 464 52 view .LVU1681
 4930 1d2e C442C9F7 		shlx	r9, r14, rsi	# tmp317, tmp179, range_start
 4930      CE
 4931              	# sieve_extend.c:464:                 bitarray_word[wordindex(index)] |= markmask(index);
 464:sieve_extend.c ****             return;                 
 4932              		.loc 1 464 49 view .LVU1682
 4933 1d33 49C1EC06 		shr	r12, 6	# tmp314,
 4934              	# sieve_extend.c:463:             for (counter_t index = range_start; index <= range_stop; index +=
 463:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4935              		.loc 1 463 76 view .LVU1683
 4936 1d37 4801D6   		add	rsi, rdx	# range_start, step
 4937              	# sieve_extend.c:464:                 bitarray_word[wordindex(index)] |= markmask(index);
 464:sieve_extend.c ****             return;                 
 4938              		.loc 1 464 49 view .LVU1684
 4939 1d3a 4E090CE7 		or	QWORD PTR [rdi+r12*8], r9	# *_14, tmp317
 463:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4940              		.loc 1 463 70 is_stmt 1 view .LVU1685
 463:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4941              		.loc 1 463 49 view .LVU1686
 4942              	# sieve_extend.c:463:             for (counter_t index = range_start; index <= range_stop; index +=
 463:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4943              		.loc 1 463 13 is_stmt 0 view .LVU1687
 4944 1d3e 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 4945 1d41 0F82CDFB 		jb	.L214	#,
 4945      FFFF
 464:sieve_extend.c ****             return;                 
 4946              		.loc 1 464 17 is_stmt 1 view .LVU1688
GAS LISTING /tmp/ccLUVin9.s 			page 141


 4947              	# sieve_extend.c:464:                 bitarray_word[wordindex(index)] |= markmask(index);
 464:sieve_extend.c ****             return;                 
 4948              		.loc 1 464 49 is_stmt 0 view .LVU1689
 4949 1d47 4989F5   		mov	r13, rsi	# tmp319, range_start
 4950              	# sieve_extend.c:464:                 bitarray_word[wordindex(index)] |= markmask(index);
 464:sieve_extend.c ****             return;                 
 4951              		.loc 1 464 52 view .LVU1690
 4952 1d4a C4C2C9F7 		shlx	rax, r14, rsi	# tmp322, tmp179, range_start
 4952      C6
 4953              	# sieve_extend.c:464:                 bitarray_word[wordindex(index)] |= markmask(index);
 464:sieve_extend.c ****             return;                 
 4954              		.loc 1 464 49 view .LVU1691
 4955 1d4f 49C1ED06 		shr	r13, 6	# tmp319,
 4956              	# sieve_extend.c:463:             for (counter_t index = range_start; index <= range_stop; index +=
 463:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4957              		.loc 1 463 76 view .LVU1692
 4958 1d53 4801D6   		add	rsi, rdx	# range_start, step
 4959              	# sieve_extend.c:464:                 bitarray_word[wordindex(index)] |= markmask(index);
 464:sieve_extend.c ****             return;                 
 4960              		.loc 1 464 49 view .LVU1693
 4961 1d56 4A0904EF 		or	QWORD PTR [rdi+r13*8], rax	# *_14, tmp322
 463:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4962              		.loc 1 463 70 is_stmt 1 view .LVU1694
 463:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4963              		.loc 1 463 49 view .LVU1695
 4964              	# sieve_extend.c:463:             for (counter_t index = range_start; index <= range_stop; index +=
 463:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4965              		.loc 1 463 13 is_stmt 0 view .LVU1696
 4966 1d5a 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 4967 1d5d 0F82B1FB 		jb	.L214	#,
 4967      FFFF
 464:sieve_extend.c ****             return;                 
 4968              		.loc 1 464 17 is_stmt 1 view .LVU1697
 4969              	# sieve_extend.c:464:                 bitarray_word[wordindex(index)] |= markmask(index);
 464:sieve_extend.c ****             return;                 
 4970              		.loc 1 464 49 is_stmt 0 view .LVU1698
 4971 1d63 4889F3   		mov	rbx, rsi	# tmp324, range_start
 4972              	# sieve_extend.c:464:                 bitarray_word[wordindex(index)] |= markmask(index);
 464:sieve_extend.c ****             return;                 
 4973              		.loc 1 464 52 view .LVU1699
 4974 1d66 C442C9F7 		shlx	r8, r14, rsi	# tmp327, tmp179, range_start
 4974      C6
 4975              	# sieve_extend.c:464:                 bitarray_word[wordindex(index)] |= markmask(index);
 464:sieve_extend.c ****             return;                 
 4976              		.loc 1 464 49 view .LVU1700
 4977 1d6b 48C1EB06 		shr	rbx, 6	# tmp324,
 4978              	# sieve_extend.c:463:             for (counter_t index = range_start; index <= range_stop; index +=
 463:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4979              		.loc 1 463 76 view .LVU1701
 4980 1d6f 4801D6   		add	rsi, rdx	# range_start, step
 4981              	# sieve_extend.c:464:                 bitarray_word[wordindex(index)] |= markmask(index);
 464:sieve_extend.c ****             return;                 
 4982              		.loc 1 464 49 view .LVU1702
 4983 1d72 4C0904DF 		or	QWORD PTR [rdi+rbx*8], r8	# *_14, tmp327
 463:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4984              		.loc 1 463 70 is_stmt 1 view .LVU1703
 463:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
GAS LISTING /tmp/ccLUVin9.s 			page 142


 4985              		.loc 1 463 49 view .LVU1704
 4986              	# sieve_extend.c:463:             for (counter_t index = range_start; index <= range_stop; index +=
 463:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4987              		.loc 1 463 13 is_stmt 0 view .LVU1705
 4988 1d76 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 4989 1d79 0F8320FF 		jnb	.L219	#,
 4989      FFFF
 4990 1d7f E990FBFF 		jmp	.L214	#
 4990      FF
 4991              	.LVL203:
 4992              	.L397:
 463:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4993              		.loc 1 463 13 view .LVU1706
 4994              	.LBE342:
 4995              	# sieve_extend.c:500: }
 500:sieve_extend.c **** 
 4996              		.loc 1 500 1 view .LVU1707
 4997 1d84 E8000000 		call	__stack_chk_fail@PLT	#
 4997      00
 4998              	.LVL204:
 4999              		.cfi_endproc
 5000              	.LFE67:
 5002 1d89 0F1F8000 		.p2align 4
 5002      000000
 5004              	extendSieve_aligned:
 5005              	.LVL205:
 5006              	.LFB69:
 536:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 5007              		.loc 1 536 140 is_stmt 1 view -0
 5008              		.cfi_startproc
 537:sieve_extend.c **** 
 5009              		.loc 1 537 5 view .LVU1709
 539:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 5010              		.loc 1 539 5 view .LVU1710
 5011              	# sieve_extend.c:536: static void extendSieve_aligned(bitword_t* bitarray, const counter_t source_s
 536:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 5012              		.loc 1 536 140 is_stmt 0 view .LVU1711
 5013 1d90 55       		push	rbp	#
 5014              		.cfi_def_cfa_offset 16
 5015              		.cfi_offset 6, -16
 5016 1d91 4889E5   		mov	rbp, rsp	#,
 5017              		.cfi_def_cfa_register 6
 5018 1d94 4157     		push	r15	#
 5019 1d96 4156     		push	r14	#
 5020 1d98 4155     		push	r13	#
 5021              		.cfi_offset 15, -24
 5022              		.cfi_offset 14, -32
 5023              		.cfi_offset 13, -40
 5024 1d9a 4989FD   		mov	r13, rdi	# bitarray, tmp295
 5025 1d9d 4154     		push	r12	#
 5026              		.cfi_offset 12, -48
 5027 1d9f 4989D4   		mov	r12, rdx	# size, tmp297
 5028 1da2 53       		push	rbx	#
 5029              		.cfi_offset 3, -56
 5030              	# sieve_extend.c:539:     const counter_t destination_stop_word = wordindex(destination_stop);
 539:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 5031              		.loc 1 539 21 view .LVU1712
GAS LISTING /tmp/ccLUVin9.s 			page 143


 5032 1da3 4889CB   		mov	rbx, rcx	# tmp298, tmp298
 5033              	# sieve_extend.c:540:     const counter_t copy_start = source_start + size;
 540:sieve_extend.c ****     counter_t source_word = wordindex(source_start);
 5034              		.loc 1 540 21 view .LVU1713
 5035 1da6 488D0C16 		lea	rcx, [rsi+rdx]	# copy_start,
 5036              	.LVL206:
 5037              	# sieve_extend.c:536: static void extendSieve_aligned(bitword_t* bitarray, const counter_t source_s
 536:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 5038              		.loc 1 536 140 view .LVU1714
 5039 1daa 4883E4E0 		and	rsp, -32	#,
 5040              	# sieve_extend.c:542:     counter_t copy_word = wordindex(copy_start);
 542:sieve_extend.c ****     
 5041              		.loc 1 542 15 view .LVU1715
 5042 1dae 4889C8   		mov	rax, rcx	# ivtmp.342, copy_start
 5043              	# sieve_extend.c:541:     counter_t source_word = wordindex(source_start);
 541:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 5044              		.loc 1 541 15 view .LVU1716
 5045 1db1 48C1EE06 		shr	rsi, 6	# source_start,
 5046              	.LVL207:
 5047              	# sieve_extend.c:536: static void extendSieve_aligned(bitword_t* bitarray, const counter_t source_s
 536:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 5048              		.loc 1 536 140 view .LVU1717
 5049 1db5 488D6424 		lea	rsp, -32[rsp]	#,
 5049      E0
 5050              	# sieve_extend.c:542:     counter_t copy_word = wordindex(copy_start);
 542:sieve_extend.c ****     
 5051              		.loc 1 542 15 view .LVU1718
 5052 1dba 48C1E806 		shr	rax, 6	# ivtmp.342,
 5053              	# sieve_extend.c:544:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 544:sieve_extend.c **** 
 5054              		.loc 1 544 35 view .LVU1719
 5055 1dbe 488D3CF5 		lea	rdi, 0[0+rsi*8]	# _4,
 5055      00000000 
 5056              	.LVL208:
 5057              	# sieve_extend.c:539:     const counter_t destination_stop_word = wordindex(destination_stop);
 539:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 5058              		.loc 1 539 21 view .LVU1720
 5059 1dc6 48C1EB06 		shr	rbx, 6	# tmp298,
 5060              	.LVL209:
 540:sieve_extend.c ****     counter_t source_word = wordindex(source_start);
 5061              		.loc 1 540 5 is_stmt 1 view .LVU1721
 541:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 5062              		.loc 1 541 5 view .LVU1722
 5063              	# sieve_extend.c:544:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 544:sieve_extend.c **** 
 5064              		.loc 1 544 35 is_stmt 0 view .LVU1723
 5065 1dca 4D8D743D 		lea	r14, 0[r13+rdi]	# _5,
 5065      00
 5066              	# sieve_extend.c:541:     counter_t source_word = wordindex(source_start);
 541:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 5067              		.loc 1 541 15 view .LVU1724
 5068 1dcf 48897424 		mov	QWORD PTR 8[rsp], rsi	# %sfp, source_word
 5068      08
 5069              	.LVL210:
 542:sieve_extend.c ****     
 5070              		.loc 1 542 5 is_stmt 1 view .LVU1725
 544:sieve_extend.c **** 
GAS LISTING /tmp/ccLUVin9.s 			page 144


 5071              		.loc 1 544 5 view .LVU1726
 5072              	# sieve_extend.c:544:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 544:sieve_extend.c **** 
 5073              		.loc 1 544 52 is_stmt 0 view .LVU1727
 5074 1dd4 89CE     		mov	esi, ecx	# tmp183, copy_start
 5075              	.LVL211:
 5076              	# sieve_extend.c:546:     while (copy_word + size <= destination_stop_word) {
 546:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5077              		.loc 1 546 22 view .LVU1728
 5078 1dd6 498D0C04 		lea	rcx, [r12+rax]	# ivtmp.342,
 5079              	.LVL212:
 5080              	# sieve_extend.c:544:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 544:sieve_extend.c **** 
 5081              		.loc 1 544 52 view .LVU1729
 5082 1dda F7D6     		not	esi	# tmp183
 5083              	# sieve_extend.c:544:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 544:sieve_extend.c **** 
 5084              		.loc 1 544 35 view .LVU1730
 5085 1ddc 48893C24 		mov	QWORD PTR [rsp], rdi	# %sfp, _4
 5086              	# sieve_extend.c:544:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 544:sieve_extend.c **** 
 5087              		.loc 1 544 52 view .LVU1731
 5088 1de0 48C7C2FF 		mov	rdx, -1	# tmp186,
 5088      FFFFFF
 5089              	.LVL213:
 544:sieve_extend.c **** 
 5090              		.loc 1 544 52 view .LVU1732
 5091 1de7 C462CBF7 		shrx	r8, rdx, rsi	# tmp185, tmp186, tmp183
 5091      C2
 5092              	# sieve_extend.c:544:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 544:sieve_extend.c **** 
 5093              		.loc 1 544 49 view .LVU1733
 5094 1dec C442B8F2 		andn	r9, r8, QWORD PTR [r14]	# tmp189, tmp185, *_5
 5094      0E
 5095              	# sieve_extend.c:544:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 544:sieve_extend.c **** 
 5096              		.loc 1 544 25 view .LVU1734
 5097 1df1 4D894CC5 		mov	QWORD PTR 0[r13+rax*8], r9	# *_13, tmp189
 5097      00
 546:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5098              		.loc 1 546 5 is_stmt 1 view .LVU1735
 546:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5099              		.loc 1 546 11 view .LVU1736
 5100 1df6 4839CB   		cmp	rbx, rcx	# destination_stop_word, ivtmp.342
 5101 1df9 0F827101 		jb	.L399	#,
 5101      0000
 5102 1dff 4C8D14C5 		lea	r10, 0[0+rax*8]	# _12,
 5102      00000000 
 5103 1e07 488D04CD 		lea	rax, 0[0+rcx*8]	# tmp191,
 5103      00000000 
 5104              	.LVL214:
 546:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5105              		.loc 1 546 11 is_stmt 0 view .LVU1737
 5106 1e0f 4D01EA   		add	r10, r13	# tmp190, bitarray
 5107              	# sieve_extend.c:547:         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*
 547:sieve_extend.c ****         copy_word += size;
 5108              		.loc 1 547 9 view .LVU1738
GAS LISTING /tmp/ccLUVin9.s 			page 145


 5109 1e12 4E8D3CE5 		lea	r15, 0[0+r12*8]	# _15,
 5109      00000000 
 5110 1e1a 4929C2   		sub	r10, rax	# tmp190, tmp191
 5111 1e1d 4C895424 		mov	QWORD PTR 24[rsp], r10	# %sfp, tmp190
 5111      18
 5112              	.LVL215:
 5113              	.L400:
 547:sieve_extend.c ****         copy_word += size;
 5114              		.loc 1 547 9 is_stmt 1 view .LVU1739
 5115              	.LBB343:
 5116              	.LBI343:
 5117              		.file 2 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h"
   1:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** /* Copyright (C) 2004-2020 Free Software Foundation, Inc.
   2:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    This file is part of the GNU C Library.
   3:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
   4:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    The GNU C Library is free software; you can redistribute it and/or
   5:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    modify it under the terms of the GNU Lesser General Public
   6:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    License as published by the Free Software Foundation; either
   7:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    version 2.1 of the License, or (at your option) any later version.
   8:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
   9:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    The GNU C Library is distributed in the hope that it will be useful,
  10:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  12:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    Lesser General Public License for more details.
  13:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  14:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    You should have received a copy of the GNU Lesser General Public
  15:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    License along with the GNU C Library; if not, see
  16:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    <https://www.gnu.org/licenses/>.  */
  17:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  18:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #ifndef _BITS_STRING_FORTIFIED_H
  19:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #define _BITS_STRING_FORTIFIED_H 1
  20:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  21:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #ifndef _STRING_H
  22:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** # error "Never use <bits/string_fortified.h> directly; include <string.h> instead."
  23:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  24:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  25:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #if !__GNUC_PREREQ (5,0)
  26:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __warndecl (__warn_memset_zero_len,
  27:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	    "memset used with constant zero length parameter; this could be due to transposed parameters")
  28:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  29:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  30:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __fortify_function void *
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __NTH (memcpy (void *__restrict __dest, const void *__restrict __src,
 5118              		.loc 2 31 1 view .LVU1740
 5119              	.LBB344:
  32:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
  33:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
 5120              		.loc 2 34 3 view .LVU1741
 5121              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5122              		.loc 2 34 10 is_stmt 0 view .LVU1742
 5123 1e22 4C8B5C24 		mov	r11, QWORD PTR 24[rsp]	# _189, %sfp
 5123      18
 5124 1e27 4C89FA   		mov	rdx, r15	#, _15
 5125 1e2a 48894C24 		mov	QWORD PTR 16[rsp], rcx	# %sfp, ivtmp.342
 5125      10
 5126 1e2f 4C89F6   		mov	rsi, r14	#, _5
GAS LISTING /tmp/ccLUVin9.s 			page 146


 5127 1e32 498D3CCB 		lea	rdi, [r11+rcx*8]	# tmp193,
 5128 1e36 E8000000 		call	memcpy@PLT	#
 5128      00
 5129              	.LVL216:
 5130              		.loc 2 34 10 view .LVU1743
 5131              	.LBE344:
 5132              	.LBE343:
 548:sieve_extend.c ****     }
 5133              		.loc 1 548 9 is_stmt 1 view .LVU1744
 546:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5134              		.loc 1 546 11 view .LVU1745
 5135 1e3b 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.342, %sfp
 5135      10
 5136 1e40 4A8D0C20 		lea	rcx, [rax+r12]	# ivtmp.342,
 5137 1e44 4839CB   		cmp	rbx, rcx	# destination_stop_word, ivtmp.342
 5138 1e47 0F822301 		jb	.L399	#,
 5138      0000
 547:sieve_extend.c ****         copy_word += size;
 5139              		.loc 1 547 9 view .LVU1746
 5140              	.LVL217:
 5141              	.LBB352:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5142              		.loc 2 31 1 view .LVU1747
 5143              	.LBB345:
 5144              		.loc 2 34 3 view .LVU1748
 5145              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5146              		.loc 2 34 10 is_stmt 0 view .LVU1749
 5147 1e4d 488B7C24 		mov	rdi, QWORD PTR 24[rsp]	# _189, %sfp
 5147      18
 5148 1e52 4C89F6   		mov	rsi, r14	#, _5
 5149 1e55 48894C24 		mov	QWORD PTR 16[rsp], rcx	# %sfp, ivtmp.342
 5149      10
 5150              	.LVL218:
 5151              		.loc 2 34 10 view .LVU1750
 5152 1e5a 4C89FA   		mov	rdx, r15	#, _15
 5153 1e5d 488D3CCF 		lea	rdi, [rdi+rcx*8]	# tmp276,
 5154 1e61 E8000000 		call	memcpy@PLT	#
 5154      00
 5155              	.LVL219:
 5156              		.loc 2 34 10 view .LVU1751
 5157              	.LBE345:
 5158              	.LBE352:
 548:sieve_extend.c ****     }
 5159              		.loc 1 548 9 is_stmt 1 view .LVU1752
 546:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5160              		.loc 1 546 11 view .LVU1753
 5161 1e66 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.342, %sfp
 5161      10
 5162 1e6b 4A8D3420 		lea	rsi, [rax+r12]	# ivtmp.342,
 5163 1e6f 4839F3   		cmp	rbx, rsi	# destination_stop_word, ivtmp.342
 5164 1e72 0F82F800 		jb	.L399	#,
 5164      0000
 547:sieve_extend.c ****         copy_word += size;
 5165              		.loc 1 547 9 view .LVU1754
 5166              	.LVL220:
 5167              	.LBB353:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
GAS LISTING /tmp/ccLUVin9.s 			page 147


 5168              		.loc 2 31 1 view .LVU1755
 5169              	.LBB346:
 5170              		.loc 2 34 3 view .LVU1756
 5171              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5172              		.loc 2 34 10 is_stmt 0 view .LVU1757
 5173 1e78 488B5424 		mov	rdx, QWORD PTR 24[rsp]	# _189, %sfp
 5173      18
 5174 1e7d 48897424 		mov	QWORD PTR 16[rsp], rsi	# %sfp, ivtmp.342
 5174      10
 5175 1e82 488D3CF2 		lea	rdi, [rdx+rsi*8]	# tmp279,
 5176 1e86 4C89FA   		mov	rdx, r15	#, _15
 5177 1e89 4C89F6   		mov	rsi, r14	#, _5
 5178 1e8c E8000000 		call	memcpy@PLT	#
 5178      00
 5179              	.LVL221:
 5180              		.loc 2 34 10 view .LVU1758
 5181              	.LBE346:
 5182              	.LBE353:
 548:sieve_extend.c ****     }
 5183              		.loc 1 548 9 is_stmt 1 view .LVU1759
 546:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5184              		.loc 1 546 11 view .LVU1760
 5185 1e91 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.342, %sfp
 5185      10
 5186 1e96 4E8D0420 		lea	r8, [rax+r12]	# ivtmp.342,
 5187 1e9a 4C39C3   		cmp	rbx, r8	# destination_stop_word, ivtmp.342
 5188 1e9d 0F82CD00 		jb	.L399	#,
 5188      0000
 547:sieve_extend.c ****         copy_word += size;
 5189              		.loc 1 547 9 view .LVU1761
 5190              	.LVL222:
 5191              	.LBB354:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5192              		.loc 2 31 1 view .LVU1762
 5193              	.LBB347:
 5194              		.loc 2 34 3 view .LVU1763
 5195              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5196              		.loc 2 34 10 is_stmt 0 view .LVU1764
 5197 1ea3 4C8B4C24 		mov	r9, QWORD PTR 24[rsp]	# _189, %sfp
 5197      18
 5198 1ea8 4C89FA   		mov	rdx, r15	#, _15
 5199 1eab 4C894424 		mov	QWORD PTR 16[rsp], r8	# %sfp, ivtmp.342
 5199      10
 5200 1eb0 4C89F6   		mov	rsi, r14	#, _5
 5201 1eb3 4B8D3CC1 		lea	rdi, [r9+r8*8]	# tmp282,
 5202 1eb7 E8000000 		call	memcpy@PLT	#
 5202      00
 5203              	.LVL223:
 5204              		.loc 2 34 10 view .LVU1765
 5205              	.LBE347:
 5206              	.LBE354:
 548:sieve_extend.c ****     }
 5207              		.loc 1 548 9 is_stmt 1 view .LVU1766
 546:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5208              		.loc 1 546 11 view .LVU1767
 5209 1ebc 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.342, %sfp
 5209      10
GAS LISTING /tmp/ccLUVin9.s 			page 148


 5210 1ec1 4E8D1420 		lea	r10, [rax+r12]	# ivtmp.342,
 5211 1ec5 4C39D3   		cmp	rbx, r10	# destination_stop_word, ivtmp.342
 5212 1ec8 0F82A200 		jb	.L399	#,
 5212      0000
 547:sieve_extend.c ****         copy_word += size;
 5213              		.loc 1 547 9 view .LVU1768
 5214              	.LVL224:
 5215              	.LBB355:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5216              		.loc 2 31 1 view .LVU1769
 5217              	.LBB348:
 5218              		.loc 2 34 3 view .LVU1770
 5219              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5220              		.loc 2 34 10 is_stmt 0 view .LVU1771
 5221 1ece 4C8B5C24 		mov	r11, QWORD PTR 24[rsp]	# _189, %sfp
 5221      18
 5222 1ed3 4C89FA   		mov	rdx, r15	#, _15
 5223 1ed6 4C895424 		mov	QWORD PTR 16[rsp], r10	# %sfp, ivtmp.342
 5223      10
 5224 1edb 4C89F6   		mov	rsi, r14	#, _5
 5225 1ede 4B8D3CD3 		lea	rdi, [r11+r10*8]	# tmp285,
 5226 1ee2 E8000000 		call	memcpy@PLT	#
 5226      00
 5227              	.LVL225:
 5228              		.loc 2 34 10 view .LVU1772
 5229              	.LBE348:
 5230              	.LBE355:
 548:sieve_extend.c ****     }
 5231              		.loc 1 548 9 is_stmt 1 view .LVU1773
 546:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5232              		.loc 1 546 11 view .LVU1774
 5233 1ee7 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.342, %sfp
 5233      10
 5234 1eec 4A8D0C20 		lea	rcx, [rax+r12]	# ivtmp.342,
 5235 1ef0 4839CB   		cmp	rbx, rcx	# destination_stop_word, ivtmp.342
 5236 1ef3 727B     		jb	.L399	#,
 547:sieve_extend.c ****         copy_word += size;
 5237              		.loc 1 547 9 view .LVU1775
 5238              	.LVL226:
 5239              	.LBB356:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5240              		.loc 2 31 1 view .LVU1776
 5241              	.LBB349:
 5242              		.loc 2 34 3 view .LVU1777
 5243              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5244              		.loc 2 34 10 is_stmt 0 view .LVU1778
 5245 1ef5 488B7C24 		mov	rdi, QWORD PTR 24[rsp]	# _189, %sfp
 5245      18
 5246 1efa 4C89F6   		mov	rsi, r14	#, _5
 5247 1efd 48894C24 		mov	QWORD PTR 16[rsp], rcx	# %sfp, ivtmp.342
 5247      10
 5248 1f02 4C89FA   		mov	rdx, r15	#, _15
 5249 1f05 488D3CCF 		lea	rdi, [rdi+rcx*8]	# tmp288,
 5250 1f09 E8000000 		call	memcpy@PLT	#
 5250      00
 5251              	.LVL227:
 5252              		.loc 2 34 10 view .LVU1779
GAS LISTING /tmp/ccLUVin9.s 			page 149


 5253              	.LBE349:
 5254              	.LBE356:
 548:sieve_extend.c ****     }
 5255              		.loc 1 548 9 is_stmt 1 view .LVU1780
 546:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5256              		.loc 1 546 11 view .LVU1781
 5257 1f0e 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.342, %sfp
 5257      10
 5258 1f13 4A8D3420 		lea	rsi, [rax+r12]	# ivtmp.342,
 5259 1f17 4839F3   		cmp	rbx, rsi	# destination_stop_word, ivtmp.342
 5260 1f1a 7254     		jb	.L399	#,
 547:sieve_extend.c ****         copy_word += size;
 5261              		.loc 1 547 9 view .LVU1782
 5262              	.LVL228:
 5263              	.LBB357:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5264              		.loc 2 31 1 view .LVU1783
 5265              	.LBB350:
 5266              		.loc 2 34 3 view .LVU1784
 5267              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5268              		.loc 2 34 10 is_stmt 0 view .LVU1785
 5269 1f1c 488B5424 		mov	rdx, QWORD PTR 24[rsp]	# _189, %sfp
 5269      18
 5270 1f21 48897424 		mov	QWORD PTR 16[rsp], rsi	# %sfp, ivtmp.342
 5270      10
 5271 1f26 488D3CF2 		lea	rdi, [rdx+rsi*8]	# tmp291,
 5272 1f2a 4C89FA   		mov	rdx, r15	#, _15
 5273 1f2d 4C89F6   		mov	rsi, r14	#, _5
 5274 1f30 E8000000 		call	memcpy@PLT	#
 5274      00
 5275              	.LVL229:
 5276              		.loc 2 34 10 view .LVU1786
 5277              	.LBE350:
 5278              	.LBE357:
 548:sieve_extend.c ****     }
 5279              		.loc 1 548 9 is_stmt 1 view .LVU1787
 546:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5280              		.loc 1 546 11 view .LVU1788
 5281 1f35 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.342, %sfp
 5281      10
 5282 1f3a 4E8D0420 		lea	r8, [rax+r12]	# ivtmp.342,
 5283 1f3e 4C39C3   		cmp	rbx, r8	# destination_stop_word, ivtmp.342
 5284 1f41 722D     		jb	.L399	#,
 547:sieve_extend.c ****         copy_word += size;
 5285              		.loc 1 547 9 view .LVU1789
 5286              	.LVL230:
 5287              	.LBB358:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5288              		.loc 2 31 1 view .LVU1790
 5289              	.LBB351:
 5290              		.loc 2 34 3 view .LVU1791
 5291              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5292              		.loc 2 34 10 is_stmt 0 view .LVU1792
 5293 1f43 4C8B4C24 		mov	r9, QWORD PTR 24[rsp]	# _189, %sfp
 5293      18
 5294 1f48 4C89FA   		mov	rdx, r15	#, _15
 5295 1f4b 4C894424 		mov	QWORD PTR 16[rsp], r8	# %sfp, ivtmp.342
GAS LISTING /tmp/ccLUVin9.s 			page 150


 5295      10
 5296 1f50 4C89F6   		mov	rsi, r14	#, _5
 5297 1f53 4B8D3CC1 		lea	rdi, [r9+r8*8]	# tmp294,
 5298 1f57 E8000000 		call	memcpy@PLT	#
 5298      00
 5299              	.LVL231:
 5300              		.loc 2 34 10 view .LVU1793
 5301              	.LBE351:
 5302              	.LBE358:
 548:sieve_extend.c ****     }
 5303              		.loc 1 548 9 is_stmt 1 view .LVU1794
 546:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5304              		.loc 1 546 11 view .LVU1795
 5305 1f5c 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.342, %sfp
 5305      10
 5306              	.LVL232:
 546:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5307              		.loc 1 546 11 is_stmt 0 view .LVU1796
 5308 1f61 4A8D0C20 		lea	rcx, [rax+r12]	# ivtmp.342,
 5309              	.LVL233:
 546:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5310              		.loc 1 546 11 view .LVU1797
 5311 1f65 4839CB   		cmp	rbx, rcx	# destination_stop_word, ivtmp.342
 5312 1f68 0F83B4FE 		jnb	.L400	#,
 5312      FFFF
 5313              	.LVL234:
 5314 1f6e 6690     		.p2align 4
 5315              		.p2align 3
 5316              	.L399:
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5317              		.loc 1 551 10 is_stmt 1 view .LVU1798
 5318 1f70 4839C3   		cmp	rbx, rax	# destination_stop_word, ivtmp.342
 5319 1f73 0F864902 		jbe	.L510	#,
 5319      0000
 5320 1f79 4C8B1424 		mov	r10, QWORD PTR [rsp]	# _4, %sfp
 5321 1f7d 4C8D24C5 		lea	r12, 0[0+rax*8]	# _41,
 5321      00000000 
 5322              	.LVL235:
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5323              		.loc 1 551 10 is_stmt 0 view .LVU1799
 5324 1f85 4D8D7C24 		lea	r15, 32[r12]	# tmp199,
 5324      20
 5325 1f8a 498D7A20 		lea	rdi, 32[r10]	# tmp202,
 5326 1f8e 4D39FA   		cmp	r10, r15	# _4, tmp199
 5327 1f91 410F9DC3 		setge	r11b	#, tmp201
 5328 1f95 4939FC   		cmp	r12, rdi	# _41, tmp202
 5329 1f98 400F9DC6 		setge	sil	#, tmp204
 5330 1f9c 4108F3   		or	r11b, sil	# tmp201, tmp204
 5331 1f9f 0F844B02 		je	.L402	#,
 5331      0000
 5332 1fa5 488D53FF 		lea	rdx, -1[rbx]	# tmp206,
 5333 1fa9 4829C2   		sub	rdx, rax	# tmp207, ivtmp.342
 5334 1fac 4883FA05 		cmp	rdx, 5	# tmp207,
 5335 1fb0 0F863A02 		jbe	.L402	#,
 5335      0000
 5336 1fb6 4D89F7   		mov	r15, r14	# tmp210, _5
 5337 1fb9 49C1EF03 		shr	r15, 3	# tmp210,
GAS LISTING /tmp/ccLUVin9.s 			page 151


 5338 1fbd 49F7DF   		neg	r15	# tmp211
 5339 1fc0 4183E703 		and	r15d, 3	# prolog_loop_niters.310,
 5340 1fc4 0F842E03 		je	.L409	#,
 5340      0000
 552:sieve_extend.c ****         source_word++;
 5341              		.loc 1 552 9 is_stmt 1 view .LVU1800
 5342              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5343              		.loc 1 552 39 is_stmt 0 view .LVU1801
 5344 1fca 4D8B06   		mov	r8, QWORD PTR [r14]	# _150, *_5
 5345 1fcd 4983FF01 		cmp	r15, 1	# prolog_loop_niters.310,
 5346              	# sieve_extend.c:553:         source_word++;
 553:sieve_extend.c ****         copy_word++;
 5347              		.loc 1 553 20 view .LVU1802
 5348 1fd1 4C8B4C24 		mov	r9, QWORD PTR 8[rsp]	# source_word, %sfp
 5348      08
 5349              	# sieve_extend.c:554:         copy_word++;
 554:sieve_extend.c ****     }
 5350              		.loc 1 554 18 view .LVU1803
 5351 1fd6 4C8D7001 		lea	r14, 1[rax]	# copy_word,
 5352              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5353              		.loc 1 552 29 view .LVU1804
 5354 1fda 4F894425 		mov	QWORD PTR 0[r13+r12], r8	# *_149, _150
 5354      00
 553:sieve_extend.c ****         copy_word++;
 5355              		.loc 1 553 9 is_stmt 1 view .LVU1805
 5356              	# sieve_extend.c:553:         source_word++;
 553:sieve_extend.c ****         copy_word++;
 5357              		.loc 1 553 20 is_stmt 0 view .LVU1806
 5358 1fdf 4D8D6101 		lea	r12, 1[r9]	# source_word,
 5359              	.LVL236:
 554:sieve_extend.c ****     }
 5360              		.loc 1 554 9 is_stmt 1 view .LVU1807
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5361              		.loc 1 551 10 view .LVU1808
 5362 1fe3 742A     		je	.L403	#,
 552:sieve_extend.c ****         source_word++;
 5363              		.loc 1 552 9 view .LVU1809
 5364              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5365              		.loc 1 552 39 is_stmt 0 view .LVU1810
 5366 1fe5 4B8B4CE5 		mov	rcx, QWORD PTR 0[r13+r12*8]	# _163, *_160
 5366      00
 5367 1fea 4983FF03 		cmp	r15, 3	# prolog_loop_niters.310,
 5368              	# sieve_extend.c:553:         source_word++;
 553:sieve_extend.c ****         copy_word++;
 5369              		.loc 1 553 20 view .LVU1811
 5370 1fee 4D8D6102 		lea	r12, 2[r9]	# source_word,
 5371              	.LVL237:
 5372              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5373              		.loc 1 552 29 view .LVU1812
 5374 1ff2 4B894CF5 		mov	QWORD PTR 0[r13+r14*8], rcx	# *_162, _163
 5374      00
 553:sieve_extend.c ****         copy_word++;
 5375              		.loc 1 553 9 is_stmt 1 view .LVU1813
GAS LISTING /tmp/ccLUVin9.s 			page 152


 5376              	.LVL238:
 554:sieve_extend.c ****     }
 5377              		.loc 1 554 9 view .LVU1814
 5378              	# sieve_extend.c:554:         copy_word++;
 554:sieve_extend.c ****     }
 5379              		.loc 1 554 18 is_stmt 0 view .LVU1815
 5380 1ff7 4C8D7002 		lea	r14, 2[rax]	# copy_word,
 5381              	.LVL239:
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5382              		.loc 1 551 10 is_stmt 1 view .LVU1816
 5383 1ffb 7512     		jne	.L403	#,
 552:sieve_extend.c ****         source_word++;
 5384              		.loc 1 552 9 view .LVU1817
 5385              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5386              		.loc 1 552 39 is_stmt 0 view .LVU1818
 5387 1ffd 4F8B54E5 		mov	r10, QWORD PTR 0[r13+r12*8]	# _89, *_86
 5387      00
 5388              	# sieve_extend.c:553:         source_word++;
 553:sieve_extend.c ****         copy_word++;
 5389              		.loc 1 553 20 view .LVU1819
 5390 2002 4D8D6103 		lea	r12, 3[r9]	# source_word,
 5391              	.LVL240:
 5392              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5393              		.loc 1 552 29 view .LVU1820
 5394 2006 4F8954F5 		mov	QWORD PTR 0[r13+r14*8], r10	# *_88, _89
 5394      00
 553:sieve_extend.c ****         copy_word++;
 5395              		.loc 1 553 9 is_stmt 1 view .LVU1821
 5396              	.LVL241:
 554:sieve_extend.c ****     }
 5397              		.loc 1 554 9 view .LVU1822
 5398              	# sieve_extend.c:554:         copy_word++;
 554:sieve_extend.c ****     }
 5399              		.loc 1 554 18 is_stmt 0 view .LVU1823
 5400 200b 4C8D7003 		lea	r14, 3[rax]	# copy_word,
 5401              	.LVL242:
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5402              		.loc 1 551 10 is_stmt 1 view .LVU1824
 5403              	.L403:
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5404              		.loc 1 551 10 is_stmt 0 view .LVU1825
 5405 200f 488B7C24 		mov	rdi, QWORD PTR 8[rsp]	# source_word, %sfp
 5405      08
 5406 2014 4989DB   		mov	r11, rbx	# tmp212, destination_stop_word
 5407 2017 4D29FB   		sub	r11, r15	# tmp212, prolog_loop_niters.310
 5408 201a 4929C3   		sub	r11, rax	# niters.311, ivtmp.342
 5409 201d 4C01F8   		add	rax, r15	# tmp215, prolog_loop_niters.310
 5410 2020 4D89D8   		mov	r8, r11	# bnd.312, niters.311
 5411 2023 4C01FF   		add	rdi, r15	# source_word, prolog_loop_niters.310
 5412 2026 49C1E802 		shr	r8, 2	# bnd.312,
 5413 202a 4D8D7CC5 		lea	r15, 0[r13+rax*8]	# vectp.320,
 5413      00
 5414 202f 49C1E005 		sal	r8, 5	# _182,
 5415              	# sieve_extend.c:541:     counter_t source_word = wordindex(source_start);
 541:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
GAS LISTING /tmp/ccLUVin9.s 			page 153


 5416              		.loc 1 541 15 view .LVU1826
 5417 2033 31C0     		xor	eax, eax	# ivtmp.333
 5418 2035 498D50E0 		lea	rdx, -32[r8]	# tmp228,
 5419 2039 498D74FD 		lea	rsi, 0[r13+rdi*8]	# vectp.317,
 5419      00
 5420 203e 48C1EA05 		shr	rdx, 5	# tmp226,
 5421 2042 4883C201 		add	rdx, 1	# tmp229,
 5422 2046 83E207   		and	edx, 7	# tmp230,
 5423 2049 0F849500 		je	.L405	#,
 5423      0000
 5424 204f 4883FA01 		cmp	rdx, 1	# tmp230,
 5425 2053 7477     		je	.L469	#,
 5426 2055 4883FA02 		cmp	rdx, 2	# tmp230,
 5427 2059 7462     		je	.L470	#,
 5428 205b 4883FA03 		cmp	rdx, 3	# tmp230,
 5429 205f 744D     		je	.L471	#,
 5430 2061 4883FA04 		cmp	rdx, 4	# tmp230,
 5431 2065 7438     		je	.L472	#,
 5432 2067 4883FA05 		cmp	rdx, 5	# tmp230,
 5433 206b 7423     		je	.L473	#,
 5434 206d 4883FA06 		cmp	rdx, 6	# tmp230,
 5435 2071 740E     		je	.L474	#,
 552:sieve_extend.c ****         source_word++;
 5436              		.loc 1 552 9 is_stmt 1 view .LVU1827
 5437              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5438              		.loc 1 552 29 is_stmt 0 view .LVU1828
 5439 2073 C5FD6F0E 		vmovdqa	ymm1, YMMWORD PTR [rsi]	# tmp330, MEM[base: vectp.317_119, index: ivtmp.333_180, offset: 0
 5440 2077 B8200000 		mov	eax, 32	# ivtmp.333,
 5440      00
 5441 207c C4C17E7F 		vmovdqu	YMMWORD PTR [r15], ymm1	# MEM[base: vectp.320_125, index: ivtmp.333_180, offset: 0B], tmp3
 5441      0F
 553:sieve_extend.c ****         copy_word++;
 5442              		.loc 1 553 9 is_stmt 1 view .LVU1829
 554:sieve_extend.c ****     }
 5443              		.loc 1 554 9 view .LVU1830
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5444              		.loc 1 551 10 view .LVU1831
 5445              	.L474:
 552:sieve_extend.c ****         source_word++;
 5446              		.loc 1 552 9 view .LVU1832
 5447              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5448              		.loc 1 552 29 is_stmt 0 view .LVU1833
 5449 2081 C5FD6F3C 		vmovdqa	ymm7, YMMWORD PTR [rsi+rax]	# tmp331, MEM[base: vectp.317_119, index: ivtmp.333_180, offse
 5449      06
 5450 2086 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm7	# MEM[base: vectp.320_125, index: ivtmp.333_180, offset: 0B], 
 5450      3C07
 553:sieve_extend.c ****         copy_word++;
 5451              		.loc 1 553 9 is_stmt 1 view .LVU1834
 554:sieve_extend.c ****     }
 5452              		.loc 1 554 9 view .LVU1835
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5453              		.loc 1 551 10 view .LVU1836
 5454 208c 4883C020 		add	rax, 32	# ivtmp.333,
 5455              	.L473:
 552:sieve_extend.c ****         source_word++;
GAS LISTING /tmp/ccLUVin9.s 			page 154


 5456              		.loc 1 552 9 view .LVU1837
 5457              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5458              		.loc 1 552 29 is_stmt 0 view .LVU1838
 5459 2090 C5FD6F34 		vmovdqa	ymm6, YMMWORD PTR [rsi+rax]	# tmp332, MEM[base: vectp.317_119, index: ivtmp.333_180, offse
 5459      06
 5460 2095 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm6	# MEM[base: vectp.320_125, index: ivtmp.333_180, offset: 0B], 
 5460      3407
 553:sieve_extend.c ****         copy_word++;
 5461              		.loc 1 553 9 is_stmt 1 view .LVU1839
 554:sieve_extend.c ****     }
 5462              		.loc 1 554 9 view .LVU1840
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5463              		.loc 1 551 10 view .LVU1841
 5464 209b 4883C020 		add	rax, 32	# ivtmp.333,
 5465              	.L472:
 552:sieve_extend.c ****         source_word++;
 5466              		.loc 1 552 9 view .LVU1842
 5467              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5468              		.loc 1 552 29 is_stmt 0 view .LVU1843
 5469 209f C5FD6F2C 		vmovdqa	ymm5, YMMWORD PTR [rsi+rax]	# tmp333, MEM[base: vectp.317_119, index: ivtmp.333_180, offse
 5469      06
 5470 20a4 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm5	# MEM[base: vectp.320_125, index: ivtmp.333_180, offset: 0B], 
 5470      2C07
 553:sieve_extend.c ****         copy_word++;
 5471              		.loc 1 553 9 is_stmt 1 view .LVU1844
 554:sieve_extend.c ****     }
 5472              		.loc 1 554 9 view .LVU1845
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5473              		.loc 1 551 10 view .LVU1846
 5474 20aa 4883C020 		add	rax, 32	# ivtmp.333,
 5475              	.L471:
 552:sieve_extend.c ****         source_word++;
 5476              		.loc 1 552 9 view .LVU1847
 5477              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5478              		.loc 1 552 29 is_stmt 0 view .LVU1848
 5479 20ae C5FD6F24 		vmovdqa	ymm4, YMMWORD PTR [rsi+rax]	# tmp334, MEM[base: vectp.317_119, index: ivtmp.333_180, offse
 5479      06
 5480 20b3 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm4	# MEM[base: vectp.320_125, index: ivtmp.333_180, offset: 0B], 
 5480      2407
 553:sieve_extend.c ****         copy_word++;
 5481              		.loc 1 553 9 is_stmt 1 view .LVU1849
 554:sieve_extend.c ****     }
 5482              		.loc 1 554 9 view .LVU1850
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5483              		.loc 1 551 10 view .LVU1851
 5484 20b9 4883C020 		add	rax, 32	# ivtmp.333,
 5485              	.L470:
 552:sieve_extend.c ****         source_word++;
 5486              		.loc 1 552 9 view .LVU1852
 5487              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5488              		.loc 1 552 29 is_stmt 0 view .LVU1853
 5489 20bd C5FD6F04 		vmovdqa	ymm0, YMMWORD PTR [rsi+rax]	# tmp335, MEM[base: vectp.317_119, index: ivtmp.333_180, offse
 5489      06
GAS LISTING /tmp/ccLUVin9.s 			page 155


 5490 20c2 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm0	# MEM[base: vectp.320_125, index: ivtmp.333_180, offset: 0B], 
 5490      0407
 553:sieve_extend.c ****         copy_word++;
 5491              		.loc 1 553 9 is_stmt 1 view .LVU1854
 554:sieve_extend.c ****     }
 5492              		.loc 1 554 9 view .LVU1855
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5493              		.loc 1 551 10 view .LVU1856
 5494 20c8 4883C020 		add	rax, 32	# ivtmp.333,
 5495              	.L469:
 552:sieve_extend.c ****         source_word++;
 5496              		.loc 1 552 9 view .LVU1857
 5497              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5498              		.loc 1 552 29 is_stmt 0 view .LVU1858
 5499 20cc C5FD6F14 		vmovdqa	ymm2, YMMWORD PTR [rsi+rax]	# tmp336, MEM[base: vectp.317_119, index: ivtmp.333_180, offse
 5499      06
 5500 20d1 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm2	# MEM[base: vectp.320_125, index: ivtmp.333_180, offset: 0B], 
 5500      1407
 553:sieve_extend.c ****         copy_word++;
 5501              		.loc 1 553 9 is_stmt 1 view .LVU1859
 554:sieve_extend.c ****     }
 5502              		.loc 1 554 9 view .LVU1860
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5503              		.loc 1 551 10 view .LVU1861
 5504 20d7 4883C020 		add	rax, 32	# ivtmp.333,
 5505 20db 4C39C0   		cmp	rax, r8	# ivtmp.333, _182
 5506 20de 0F848D00 		je	.L506	#,
 5506      0000
 5507              	.L405:
 552:sieve_extend.c ****         source_word++;
 5508              		.loc 1 552 9 view .LVU1862
 5509              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5510              		.loc 1 552 29 is_stmt 0 view .LVU1863
 5511 20e4 C5FD6F1C 		vmovdqa	ymm3, YMMWORD PTR [rsi+rax]	# tmp319, MEM[base: vectp.317_119, index: ivtmp.333_180, offse
 5511      06
 5512 20e9 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm3	# MEM[base: vectp.320_125, index: ivtmp.333_180, offset: 0B], 
 5512      1C07
 553:sieve_extend.c ****         copy_word++;
 5513              		.loc 1 553 9 is_stmt 1 view .LVU1864
 554:sieve_extend.c ****     }
 5514              		.loc 1 554 9 view .LVU1865
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5515              		.loc 1 551 10 view .LVU1866
 552:sieve_extend.c ****         source_word++;
 5516              		.loc 1 552 9 view .LVU1867
 5517              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5518              		.loc 1 552 29 is_stmt 0 view .LVU1868
 5519 20ef C57D6F44 		vmovdqa	ymm8, YMMWORD PTR 32[rsi+rax]	# tmp320, MEM[base: vectp.317_119, index: ivtmp.333_180, off
 5519      0620
 5520 20f5 C4417E7F 		vmovdqu	YMMWORD PTR 32[r15+rax], ymm8	# MEM[base: vectp.320_125, index: ivtmp.333_180, offset: 0B]
 5520      440720
 553:sieve_extend.c ****         copy_word++;
 5521              		.loc 1 553 9 is_stmt 1 view .LVU1869
 554:sieve_extend.c ****     }
GAS LISTING /tmp/ccLUVin9.s 			page 156


 5522              		.loc 1 554 9 view .LVU1870
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5523              		.loc 1 551 10 view .LVU1871
 552:sieve_extend.c ****         source_word++;
 5524              		.loc 1 552 9 view .LVU1872
 5525              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5526              		.loc 1 552 29 is_stmt 0 view .LVU1873
 5527 20fc C57D6F4C 		vmovdqa	ymm9, YMMWORD PTR 64[rsi+rax]	# tmp321, MEM[base: vectp.317_119, index: ivtmp.333_180, off
 5527      0640
 5528 2102 C4417E7F 		vmovdqu	YMMWORD PTR 64[r15+rax], ymm9	# MEM[base: vectp.320_125, index: ivtmp.333_180, offset: 0B]
 5528      4C0740
 553:sieve_extend.c ****         copy_word++;
 5529              		.loc 1 553 9 is_stmt 1 view .LVU1874
 554:sieve_extend.c ****     }
 5530              		.loc 1 554 9 view .LVU1875
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5531              		.loc 1 551 10 view .LVU1876
 552:sieve_extend.c ****         source_word++;
 5532              		.loc 1 552 9 view .LVU1877
 5533              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5534              		.loc 1 552 29 is_stmt 0 view .LVU1878
 5535 2109 C57D6F54 		vmovdqa	ymm10, YMMWORD PTR 96[rsi+rax]	# tmp322, MEM[base: vectp.317_119, index: ivtmp.333_180, of
 5535      0660
 5536 210f C4417E7F 		vmovdqu	YMMWORD PTR 96[r15+rax], ymm10	# MEM[base: vectp.320_125, index: ivtmp.333_180, offset: 0B
 5536      540760
 553:sieve_extend.c ****         copy_word++;
 5537              		.loc 1 553 9 is_stmt 1 view .LVU1879
 554:sieve_extend.c ****     }
 5538              		.loc 1 554 9 view .LVU1880
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5539              		.loc 1 551 10 view .LVU1881
 552:sieve_extend.c ****         source_word++;
 5540              		.loc 1 552 9 view .LVU1882
 5541              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5542              		.loc 1 552 29 is_stmt 0 view .LVU1883
 5543 2116 C57D6F9C 		vmovdqa	ymm11, YMMWORD PTR 128[rsi+rax]	# tmp323, MEM[base: vectp.317_119, index: ivtmp.333_180, o
 5543      06800000 
 5543      00
 5544 211f C4417E7F 		vmovdqu	YMMWORD PTR 128[r15+rax], ymm11	# MEM[base: vectp.320_125, index: ivtmp.333_180, offset: 0
 5544      9C078000 
 5544      0000
 553:sieve_extend.c ****         copy_word++;
 5545              		.loc 1 553 9 is_stmt 1 view .LVU1884
 554:sieve_extend.c ****     }
 5546              		.loc 1 554 9 view .LVU1885
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5547              		.loc 1 551 10 view .LVU1886
 552:sieve_extend.c ****         source_word++;
 5548              		.loc 1 552 9 view .LVU1887
 5549              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5550              		.loc 1 552 29 is_stmt 0 view .LVU1888
 5551 2129 C57D6FA4 		vmovdqa	ymm12, YMMWORD PTR 160[rsi+rax]	# tmp324, MEM[base: vectp.317_119, index: ivtmp.333_180, o
 5551      06A00000 
GAS LISTING /tmp/ccLUVin9.s 			page 157


 5551      00
 5552 2132 C4417E7F 		vmovdqu	YMMWORD PTR 160[r15+rax], ymm12	# MEM[base: vectp.320_125, index: ivtmp.333_180, offset: 0
 5552      A407A000 
 5552      0000
 553:sieve_extend.c ****         copy_word++;
 5553              		.loc 1 553 9 is_stmt 1 view .LVU1889
 554:sieve_extend.c ****     }
 5554              		.loc 1 554 9 view .LVU1890
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5555              		.loc 1 551 10 view .LVU1891
 552:sieve_extend.c ****         source_word++;
 5556              		.loc 1 552 9 view .LVU1892
 5557              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5558              		.loc 1 552 29 is_stmt 0 view .LVU1893
 5559 213c C57D6FAC 		vmovdqa	ymm13, YMMWORD PTR 192[rsi+rax]	# tmp325, MEM[base: vectp.317_119, index: ivtmp.333_180, o
 5559      06C00000 
 5559      00
 5560 2145 C4417E7F 		vmovdqu	YMMWORD PTR 192[r15+rax], ymm13	# MEM[base: vectp.320_125, index: ivtmp.333_180, offset: 0
 5560      AC07C000 
 5560      0000
 553:sieve_extend.c ****         copy_word++;
 5561              		.loc 1 553 9 is_stmt 1 view .LVU1894
 554:sieve_extend.c ****     }
 5562              		.loc 1 554 9 view .LVU1895
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5563              		.loc 1 551 10 view .LVU1896
 552:sieve_extend.c ****         source_word++;
 5564              		.loc 1 552 9 view .LVU1897
 5565              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5566              		.loc 1 552 29 is_stmt 0 view .LVU1898
 5567 214f C57D6FB4 		vmovdqa	ymm14, YMMWORD PTR 224[rsi+rax]	# tmp326, MEM[base: vectp.317_119, index: ivtmp.333_180, o
 5567      06E00000 
 5567      00
 5568 2158 C4417E7F 		vmovdqu	YMMWORD PTR 224[r15+rax], ymm14	# MEM[base: vectp.320_125, index: ivtmp.333_180, offset: 0
 5568      B407E000 
 5568      0000
 553:sieve_extend.c ****         copy_word++;
 5569              		.loc 1 553 9 is_stmt 1 view .LVU1899
 554:sieve_extend.c ****     }
 5570              		.loc 1 554 9 view .LVU1900
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5571              		.loc 1 551 10 view .LVU1901
 5572 2162 48050001 		add	rax, 256	# ivtmp.333,
 5572      0000
 5573 2168 4C39C0   		cmp	rax, r8	# ivtmp.333, _182
 5574 216b 0F8573FF 		jne	.L405	#,
 5574      FFFF
 5575              	.L506:
 5576 2171 4D89D9   		mov	r9, r11	# niters_vector_mult_vf.313, niters.311
 5577 2174 4983E1FC 		and	r9, -4	# niters_vector_mult_vf.313,
 5578 2178 4D01CC   		add	r12, r9	# tmp.314, niters_vector_mult_vf.313
 5579 217b 4D01CE   		add	r14, r9	# tmp.315, niters_vector_mult_vf.313
 5580 217e 4D39CB   		cmp	r11, r9	# niters.311, niters_vector_mult_vf.313
 5581 2181 7455     		je	.L509	#,
 5582              	.LVL243:
GAS LISTING /tmp/ccLUVin9.s 			page 158


 552:sieve_extend.c ****         source_word++;
 5583              		.loc 1 552 9 view .LVU1902
 5584              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5585              		.loc 1 552 39 is_stmt 0 view .LVU1903
 5586 2183 4B8B4CE5 		mov	rcx, QWORD PTR 0[r13+r12*8]	# _37, *_21
 5586      00
 5587              	# sieve_extend.c:554:         copy_word++;
 554:sieve_extend.c ****     }
 5588              		.loc 1 554 18 view .LVU1904
 5589 2188 4D8D5601 		lea	r10, 1[r14]	# copy_word,
 5590              	# sieve_extend.c:553:         source_word++;
 553:sieve_extend.c ****         copy_word++;
 5591              		.loc 1 553 20 view .LVU1905
 5592 218c 4983C401 		add	r12, 1	# source_word,
 5593              	.LVL244:
 5594              	# sieve_extend.c:551:    while (copy_word < destination_stop_word) {
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5595              		.loc 1 551 10 view .LVU1906
 5596 2190 4C39D3   		cmp	rbx, r10	# destination_stop_word, copy_word
 5597              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5598              		.loc 1 552 29 view .LVU1907
 5599 2193 4B894CF5 		mov	QWORD PTR 0[r13+r14*8], rcx	# *_23, _37
 5599      00
 553:sieve_extend.c ****         copy_word++;
 5600              		.loc 1 553 9 is_stmt 1 view .LVU1908
 5601              	.LVL245:
 554:sieve_extend.c ****     }
 5602              		.loc 1 554 9 view .LVU1909
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5603              		.loc 1 551 10 view .LVU1910
 5604 2198 763E     		jbe	.L509	#,
 552:sieve_extend.c ****         source_word++;
 5605              		.loc 1 552 9 view .LVU1911
 5606              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5607              		.loc 1 552 39 is_stmt 0 view .LVU1912
 5608 219a 4E8D1CE5 		lea	r11, 0[0+r12*8]	# _134,
 5608      00000000 
 5609              	# sieve_extend.c:554:         copy_word++;
 554:sieve_extend.c ****     }
 5610              		.loc 1 554 18 view .LVU1913
 5611 21a2 4983C602 		add	r14, 2	# copy_word,
 5612              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5613              		.loc 1 552 39 view .LVU1914
 5614 21a6 4F8B64E5 		mov	r12, QWORD PTR 0[r13+r12*8]	# _138, *_135
 5614      00
 5615              	# sieve_extend.c:551:    while (copy_word < destination_stop_word) {
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5616              		.loc 1 551 10 view .LVU1915
 5617 21ab 4C39F3   		cmp	rbx, r14	# destination_stop_word, copy_word
 5618              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5619              		.loc 1 552 29 view .LVU1916
 5620 21ae 4F8964D5 		mov	QWORD PTR 0[r13+r10*8], r12	# *_137, _138
GAS LISTING /tmp/ccLUVin9.s 			page 159


 5620      00
 553:sieve_extend.c ****         copy_word++;
 5621              		.loc 1 553 9 is_stmt 1 view .LVU1917
 554:sieve_extend.c ****     }
 5622              		.loc 1 554 9 view .LVU1918
 5623              	.LVL246:
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5624              		.loc 1 551 10 view .LVU1919
 5625 21b3 7623     		jbe	.L509	#,
 552:sieve_extend.c ****         source_word++;
 5626              		.loc 1 552 9 view .LVU1920
 5627              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5628              		.loc 1 552 39 is_stmt 0 view .LVU1921
 5629 21b5 4B8B5C1D 		mov	rbx, QWORD PTR 8[r13+r11]	# _109, *_106
 5629      08
 5630              	.LVL247:
 5631              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5632              		.loc 1 552 29 view .LVU1922
 5633 21ba 4B895CF5 		mov	QWORD PTR 0[r13+r14*8], rbx	# *_108, _109
 5633      00
 553:sieve_extend.c ****         copy_word++;
 5634              		.loc 1 553 9 is_stmt 1 view .LVU1923
 554:sieve_extend.c ****     }
 5635              		.loc 1 554 9 view .LVU1924
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5636              		.loc 1 551 10 view .LVU1925
 5637 21bf C5F877   		vzeroupper
 5638              	.LVL248:
 5639              	.L510:
 5640              	# sieve_extend.c:557: }
 557:sieve_extend.c **** 
 5641              		.loc 1 557 1 is_stmt 0 view .LVU1926
 5642 21c2 488D65D8 		lea	rsp, -40[rbp]	#,
 5643 21c6 5B       		pop	rbx	#
 5644 21c7 415C     		pop	r12	#
 5645 21c9 415D     		pop	r13	#
 5646 21cb 415E     		pop	r14	#
 5647 21cd 415F     		pop	r15	#
 5648 21cf 5D       		pop	rbp	#
 5649              		.cfi_remember_state
 5650              		.cfi_def_cfa 7, 8
 5651 21d0 C3       		ret	
 5652              	.LVL249:
 5653              		.p2align 4,,7
 5654 21d1 0F1F8000 		.p2align 3
 5654      000000
 5655              	.L509:
 5656              		.cfi_restore_state
 557:sieve_extend.c **** 
 5657              		.loc 1 557 1 view .LVU1927
 5658 21d8 C5F877   		vzeroupper
 5659 21db 488D65D8 		lea	rsp, -40[rbp]	#,
 5660 21df 5B       		pop	rbx	#
 5661              	.LVL250:
 557:sieve_extend.c **** 
GAS LISTING /tmp/ccLUVin9.s 			page 160


 5662              		.loc 1 557 1 view .LVU1928
 5663 21e0 415C     		pop	r12	#
 5664 21e2 415D     		pop	r13	#
 5665              	.LVL251:
 557:sieve_extend.c **** 
 5666              		.loc 1 557 1 view .LVU1929
 5667 21e4 415E     		pop	r14	#
 5668 21e6 415F     		pop	r15	#
 5669 21e8 5D       		pop	rbp	#
 5670              		.cfi_remember_state
 5671              		.cfi_def_cfa 7, 8
 5672 21e9 C3       		ret	
 5673              	.LVL252:
 5674 21ea 660F1F44 		.p2align 4,,7
 5674      0000
 5675              		.p2align 3
 5676              	.L402:
 5677              		.cfi_restore_state
 5678              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5679              		.loc 1 552 39 view .LVU1930
 5680 21f0 488B7C24 		mov	rdi, QWORD PTR 8[rsp]	# source_word, %sfp
 5680      08
 5681 21f5 4F8D7425 		lea	r14, 0[r13+r12]	# ivtmp.328,
 5681      00
 5682 21fa 4D8D6CDD 		lea	r13, 0[r13+rbx*8]	# _179,
 5682      00
 5683              	.LVL253:
 552:sieve_extend.c ****         source_word++;
 5684              		.loc 1 552 39 view .LVU1931
 5685 21ff 4C89EE   		mov	rsi, r13	# tmp221, _179
 5686 2202 4C29F6   		sub	rsi, r14	# tmp221, ivtmp.328
 5687 2205 4829C7   		sub	rdi, rax	# source_word, ivtmp.342
 5688 2208 4883EE08 		sub	rsi, 8	# tmp222,
 5689 220c 48C1EE03 		shr	rsi, 3	# tmp220,
 5690 2210 4883C601 		add	rsi, 1	# tmp223,
 5691 2214 83E607   		and	esi, 7	# tmp224,
 5692 2217 0F848100 		je	.L407	#,
 5692      0000
 5693 221d 4883FE01 		cmp	rsi, 1	# tmp224,
 5694 2221 7466     		je	.L475	#,
 5695 2223 4883FE02 		cmp	rsi, 2	# tmp224,
 5696 2227 7454     		je	.L476	#,
 5697 2229 4883FE03 		cmp	rsi, 3	# tmp224,
 5698 222d 7442     		je	.L477	#,
 5699 222f 4883FE04 		cmp	rsi, 4	# tmp224,
 5700 2233 7430     		je	.L478	#,
 5701 2235 4883FE05 		cmp	rsi, 5	# tmp224,
 5702 2239 741E     		je	.L479	#,
 5703 223b 4883FE06 		cmp	rsi, 6	# tmp224,
 5704 223f 740C     		je	.L480	#,
 5705              	.LVL254:
 552:sieve_extend.c ****         source_word++;
 5706              		.loc 1 552 9 is_stmt 1 view .LVU1932
 5707              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5708              		.loc 1 552 39 is_stmt 0 view .LVU1933
GAS LISTING /tmp/ccLUVin9.s 			page 161


 5709 2241 4D8B3CFE 		mov	r15, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5710 2245 4983C608 		add	r14, 8	# ivtmp.328,
 5711              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5712              		.loc 1 552 29 view .LVU1934
 5713 2249 4D897EF8 		mov	QWORD PTR -8[r14], r15	# MEM[base: _174, offset: 0B], _70
 553:sieve_extend.c ****         copy_word++;
 5714              		.loc 1 553 9 is_stmt 1 view .LVU1935
 554:sieve_extend.c ****     }
 5715              		.loc 1 554 9 view .LVU1936
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5716              		.loc 1 551 10 view .LVU1937
 5717              	.L480:
 552:sieve_extend.c ****         source_word++;
 5718              		.loc 1 552 9 view .LVU1938
 5719              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5720              		.loc 1 552 39 is_stmt 0 view .LVU1939
 5721 224d 4D8B04FE 		mov	r8, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5722 2251 4983C608 		add	r14, 8	# ivtmp.328,
 5723              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5724              		.loc 1 552 29 view .LVU1940
 5725 2255 4D8946F8 		mov	QWORD PTR -8[r14], r8	# MEM[base: _174, offset: 0B], _70
 553:sieve_extend.c ****         copy_word++;
 5726              		.loc 1 553 9 is_stmt 1 view .LVU1941
 554:sieve_extend.c ****     }
 5727              		.loc 1 554 9 view .LVU1942
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5728              		.loc 1 551 10 view .LVU1943
 5729              	.L479:
 552:sieve_extend.c ****         source_word++;
 5730              		.loc 1 552 9 view .LVU1944
 5731              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5732              		.loc 1 552 39 is_stmt 0 view .LVU1945
 5733 2259 498B14FE 		mov	rdx, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5734 225d 4983C608 		add	r14, 8	# ivtmp.328,
 5735              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5736              		.loc 1 552 29 view .LVU1946
 5737 2261 498956F8 		mov	QWORD PTR -8[r14], rdx	# MEM[base: _174, offset: 0B], _70
 553:sieve_extend.c ****         copy_word++;
 5738              		.loc 1 553 9 is_stmt 1 view .LVU1947
 554:sieve_extend.c ****     }
 5739              		.loc 1 554 9 view .LVU1948
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5740              		.loc 1 551 10 view .LVU1949
 5741              	.L478:
 552:sieve_extend.c ****         source_word++;
 5742              		.loc 1 552 9 view .LVU1950
 5743              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5744              		.loc 1 552 39 is_stmt 0 view .LVU1951
 5745 2265 498B04FE 		mov	rax, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5746 2269 4983C608 		add	r14, 8	# ivtmp.328,
 5747              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
GAS LISTING /tmp/ccLUVin9.s 			page 162


 552:sieve_extend.c ****         source_word++;
 5748              		.loc 1 552 29 view .LVU1952
 5749 226d 498946F8 		mov	QWORD PTR -8[r14], rax	# MEM[base: _174, offset: 0B], _70
 553:sieve_extend.c ****         copy_word++;
 5750              		.loc 1 553 9 is_stmt 1 view .LVU1953
 554:sieve_extend.c ****     }
 5751              		.loc 1 554 9 view .LVU1954
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5752              		.loc 1 551 10 view .LVU1955
 5753              	.L477:
 552:sieve_extend.c ****         source_word++;
 5754              		.loc 1 552 9 view .LVU1956
 5755              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5756              		.loc 1 552 39 is_stmt 0 view .LVU1957
 5757 2271 4D8B0CFE 		mov	r9, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5758 2275 4983C608 		add	r14, 8	# ivtmp.328,
 5759              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5760              		.loc 1 552 29 view .LVU1958
 5761 2279 4D894EF8 		mov	QWORD PTR -8[r14], r9	# MEM[base: _174, offset: 0B], _70
 553:sieve_extend.c ****         copy_word++;
 5762              		.loc 1 553 9 is_stmt 1 view .LVU1959
 554:sieve_extend.c ****     }
 5763              		.loc 1 554 9 view .LVU1960
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5764              		.loc 1 551 10 view .LVU1961
 5765              	.L476:
 552:sieve_extend.c ****         source_word++;
 5766              		.loc 1 552 9 view .LVU1962
 5767              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5768              		.loc 1 552 39 is_stmt 0 view .LVU1963
 5769 227d 498B0CFE 		mov	rcx, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5770 2281 4983C608 		add	r14, 8	# ivtmp.328,
 5771              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5772              		.loc 1 552 29 view .LVU1964
 5773 2285 49894EF8 		mov	QWORD PTR -8[r14], rcx	# MEM[base: _174, offset: 0B], _70
 553:sieve_extend.c ****         copy_word++;
 5774              		.loc 1 553 9 is_stmt 1 view .LVU1965
 554:sieve_extend.c ****     }
 5775              		.loc 1 554 9 view .LVU1966
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5776              		.loc 1 551 10 view .LVU1967
 5777              	.L475:
 552:sieve_extend.c ****         source_word++;
 5778              		.loc 1 552 9 view .LVU1968
 5779              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5780              		.loc 1 552 39 is_stmt 0 view .LVU1969
 5781 2289 4D8B14FE 		mov	r10, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5782 228d 4983C608 		add	r14, 8	# ivtmp.328,
 5783              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5784              		.loc 1 552 29 view .LVU1970
 5785 2291 4D8956F8 		mov	QWORD PTR -8[r14], r10	# MEM[base: _174, offset: 0B], _70
GAS LISTING /tmp/ccLUVin9.s 			page 163


 553:sieve_extend.c ****         copy_word++;
 5786              		.loc 1 553 9 is_stmt 1 view .LVU1971
 554:sieve_extend.c ****     }
 5787              		.loc 1 554 9 view .LVU1972
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5788              		.loc 1 551 10 view .LVU1973
 5789 2295 4D39EE   		cmp	r14, r13	# ivtmp.328, _179
 5790 2298 0F8424FF 		je	.L510	#,
 5790      FFFF
 5791              	.LVL255:
 5792              	.L407:
 552:sieve_extend.c ****         source_word++;
 5793              		.loc 1 552 9 view .LVU1974
 5794              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5795              		.loc 1 552 39 is_stmt 0 view .LVU1975
 5796 229e 4D8B1CFE 		mov	r11, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5797              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5798              		.loc 1 552 29 view .LVU1976
 5799 22a2 4D891E   		mov	QWORD PTR [r14], r11	# MEM[base: _174, offset: 0B], _70
 553:sieve_extend.c ****         copy_word++;
 5800              		.loc 1 553 9 is_stmt 1 view .LVU1977
 554:sieve_extend.c ****     }
 5801              		.loc 1 554 9 view .LVU1978
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5802              		.loc 1 551 10 view .LVU1979
 552:sieve_extend.c ****         source_word++;
 5803              		.loc 1 552 9 view .LVU1980
 5804              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5805              		.loc 1 552 39 is_stmt 0 view .LVU1981
 5806 22a5 4D8B64FE 		mov	r12, QWORD PTR 8[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5806      08
 5807              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5808              		.loc 1 552 29 view .LVU1982
 5809 22aa 4D896608 		mov	QWORD PTR 8[r14], r12	# MEM[base: _174, offset: 0B], _70
 553:sieve_extend.c ****         copy_word++;
 5810              		.loc 1 553 9 is_stmt 1 view .LVU1983
 554:sieve_extend.c ****     }
 5811              		.loc 1 554 9 view .LVU1984
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5812              		.loc 1 551 10 view .LVU1985
 552:sieve_extend.c ****         source_word++;
 5813              		.loc 1 552 9 view .LVU1986
 5814              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5815              		.loc 1 552 39 is_stmt 0 view .LVU1987
 5816 22ae 498B5CFE 		mov	rbx, QWORD PTR 16[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5816      10
 5817              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5818              		.loc 1 552 29 view .LVU1988
 5819 22b3 49895E10 		mov	QWORD PTR 16[r14], rbx	# MEM[base: _174, offset: 0B], _70
 553:sieve_extend.c ****         copy_word++;
 5820              		.loc 1 553 9 is_stmt 1 view .LVU1989
GAS LISTING /tmp/ccLUVin9.s 			page 164


 554:sieve_extend.c ****     }
 5821              		.loc 1 554 9 view .LVU1990
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5822              		.loc 1 551 10 view .LVU1991
 552:sieve_extend.c ****         source_word++;
 5823              		.loc 1 552 9 view .LVU1992
 5824              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5825              		.loc 1 552 39 is_stmt 0 view .LVU1993
 5826 22b7 498B74FE 		mov	rsi, QWORD PTR 24[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5826      18
 5827              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5828              		.loc 1 552 29 view .LVU1994
 5829 22bc 49897618 		mov	QWORD PTR 24[r14], rsi	# MEM[base: _174, offset: 0B], _70
 553:sieve_extend.c ****         copy_word++;
 5830              		.loc 1 553 9 is_stmt 1 view .LVU1995
 554:sieve_extend.c ****     }
 5831              		.loc 1 554 9 view .LVU1996
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5832              		.loc 1 551 10 view .LVU1997
 552:sieve_extend.c ****         source_word++;
 5833              		.loc 1 552 9 view .LVU1998
 5834              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5835              		.loc 1 552 39 is_stmt 0 view .LVU1999
 5836 22c0 4D8B7CFE 		mov	r15, QWORD PTR 32[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5836      20
 5837              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5838              		.loc 1 552 29 view .LVU2000
 5839 22c5 4D897E20 		mov	QWORD PTR 32[r14], r15	# MEM[base: _174, offset: 0B], _70
 553:sieve_extend.c ****         copy_word++;
 5840              		.loc 1 553 9 is_stmt 1 view .LVU2001
 554:sieve_extend.c ****     }
 5841              		.loc 1 554 9 view .LVU2002
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5842              		.loc 1 551 10 view .LVU2003
 552:sieve_extend.c ****         source_word++;
 5843              		.loc 1 552 9 view .LVU2004
 5844              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5845              		.loc 1 552 39 is_stmt 0 view .LVU2005
 5846 22c9 4D8B44FE 		mov	r8, QWORD PTR 40[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5846      28
 5847              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5848              		.loc 1 552 29 view .LVU2006
 5849 22ce 4D894628 		mov	QWORD PTR 40[r14], r8	# MEM[base: _174, offset: 0B], _70
 553:sieve_extend.c ****         copy_word++;
 5850              		.loc 1 553 9 is_stmt 1 view .LVU2007
 554:sieve_extend.c ****     }
 5851              		.loc 1 554 9 view .LVU2008
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5852              		.loc 1 551 10 view .LVU2009
 552:sieve_extend.c ****         source_word++;
 5853              		.loc 1 552 9 view .LVU2010
GAS LISTING /tmp/ccLUVin9.s 			page 165


 5854              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5855              		.loc 1 552 39 is_stmt 0 view .LVU2011
 5856 22d2 498B54FE 		mov	rdx, QWORD PTR 48[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5856      30
 5857              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5858              		.loc 1 552 29 view .LVU2012
 5859 22d7 49895630 		mov	QWORD PTR 48[r14], rdx	# MEM[base: _174, offset: 0B], _70
 553:sieve_extend.c ****         copy_word++;
 5860              		.loc 1 553 9 is_stmt 1 view .LVU2013
 554:sieve_extend.c ****     }
 5861              		.loc 1 554 9 view .LVU2014
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5862              		.loc 1 551 10 view .LVU2015
 552:sieve_extend.c ****         source_word++;
 5863              		.loc 1 552 9 view .LVU2016
 5864              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5865              		.loc 1 552 39 is_stmt 0 view .LVU2017
 5866 22db 498B44FE 		mov	rax, QWORD PTR 56[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5866      38
 5867 22e0 4983C640 		add	r14, 64	# ivtmp.328,
 5868              	# sieve_extend.c:552:         bitarray[copy_word] = bitarray[source_word];
 552:sieve_extend.c ****         source_word++;
 5869              		.loc 1 552 29 view .LVU2018
 5870 22e4 498946F8 		mov	QWORD PTR -8[r14], rax	# MEM[base: _174, offset: 0B], _70
 553:sieve_extend.c ****         copy_word++;
 5871              		.loc 1 553 9 is_stmt 1 view .LVU2019
 554:sieve_extend.c ****     }
 5872              		.loc 1 554 9 view .LVU2020
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5873              		.loc 1 551 10 view .LVU2021
 5874 22e8 4D39EE   		cmp	r14, r13	# ivtmp.328, _179
 5875 22eb 75B1     		jne	.L407	#,
 5876 22ed E9D0FEFF 		jmp	.L510	#
 5876      FF
 5877              	.LVL256:
 5878              		.p2align 4,,7
 5879 22f2 660F1F44 		.p2align 3
 5879      0000
 5880              	.L409:
 5881              	# sieve_extend.c:541:     counter_t source_word = wordindex(source_start);
 541:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 5882              		.loc 1 541 15 is_stmt 0 view .LVU2022
 5883 22f8 4C8B6424 		mov	r12, QWORD PTR 8[rsp]	# source_word, %sfp
 5883      08
 5884              	# sieve_extend.c:551:    while (copy_word < destination_stop_word) {
 551:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5885              		.loc 1 551 10 view .LVU2023
 5886 22fd 4989C6   		mov	r14, rax	# copy_word, ivtmp.342
 5887 2300 E90AFDFF 		jmp	.L403	#
 5887      FF
 5888              		.cfi_endproc
 5889              	.LFE69:
 5891 2305 66662E0F 		.p2align 4
 5891      1F840000 
GAS LISTING /tmp/ccLUVin9.s 			page 166


 5891      000000
 5893              	extendSieve_shiftleft:
 5894              	.LVL257:
 5895              	.LFB75:
 780:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 5896              		.loc 1 780 142 is_stmt 1 view -0
 5897              		.cfi_startproc
 781:sieve_extend.c **** 
 5898              		.loc 1 781 5 view .LVU2025
 783:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 5899              		.loc 1 783 5 view .LVU2026
 5900              	# sieve_extend.c:780: static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source
 780:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 5901              		.loc 1 780 142 is_stmt 0 view .LVU2027
 5902 2310 55       		push	rbp	#
 5903              		.cfi_def_cfa_offset 16
 5904              		.cfi_offset 6, -16
 5905              	# sieve_extend.c:783:     const counter_t destination_stop_word = wordindex(destination_stop);
 783:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 5906              		.loc 1 783 21 view .LVU2028
 5907 2311 48C1E906 		shr	rcx, 6	# tmp1104,
 5908              	.LVL258:
 5909              	# sieve_extend.c:784:     const counter_t copy_start = source_start + size;
 784:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_calc(copy_start);
 5910              		.loc 1 784 21 view .LVU2029
 5911 2315 4C8D0416 		lea	r8, [rsi+rdx]	# copy_start,
 5912              	# sieve_extend.c:780: static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source
 780:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 5913              		.loc 1 780 142 view .LVU2030
 5914 2319 4889E5   		mov	rbp, rsp	#,
 5915              		.cfi_def_cfa_register 6
 5916 231c 4989D2   		mov	r10, rdx	# size, tmp1103
 5917 231f 4157     		push	r15	#
 5918              	# sieve_extend.c:788:     register counter_t copy_word = wordindex(copy_start);
 788:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 5919              		.loc 1 788 24 view .LVU2031
 5920 2321 4D89C3   		mov	r11, r8	# copy_word, copy_start
 5921              	# sieve_extend.c:780: static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source
 780:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 5922              		.loc 1 780 142 view .LVU2032
 5923 2324 4156     		push	r14	#
 5924              	# sieve_extend.c:788:     register counter_t copy_word = wordindex(copy_start);
 788:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 5925              		.loc 1 788 24 view .LVU2033
 5926 2326 49C1EB06 		shr	r11, 6	# copy_word,
 5927              		.cfi_offset 15, -24
 5928              		.cfi_offset 14, -32
 5929              	# sieve_extend.c:783:     const counter_t destination_stop_word = wordindex(destination_stop);
 783:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 5930              		.loc 1 783 21 view .LVU2034
 5931 232a 4989CE   		mov	r14, rcx	# destination_stop_word, tmp1104
 5932              	# sieve_extend.c:780: static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source
 780:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 5933              		.loc 1 780 142 view .LVU2035
 5934 232d 4155     		push	r13	#
 5935 232f 4154     		push	r12	#
 5936 2331 53       		push	rbx	#
GAS LISTING /tmp/ccLUVin9.s 			page 167


 5937              		.cfi_offset 13, -40
 5938              		.cfi_offset 12, -48
 5939              		.cfi_offset 3, -56
 5940 2332 4889FB   		mov	rbx, rdi	# bitarray, tmp1101
 5941 2335 4883E4E0 		and	rsp, -32	#,
 5942 2339 488D6424 		lea	rsp, -96[rsp]	#,
 5942      A0
 5943              	# sieve_extend.c:783:     const counter_t destination_stop_word = wordindex(destination_stop);
 783:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 5944              		.loc 1 783 21 view .LVU2036
 5945 233e 48894C24 		mov	QWORD PTR 88[rsp], rcx	# %sfp, destination_stop_word
 5945      58
 5946              	.LVL259:
 784:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_calc(copy_start);
 5947              		.loc 1 784 5 is_stmt 1 view .LVU2037
 785:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 5948              		.loc 1 785 5 view .LVU2038
 5949              	# sieve_extend.c:785:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 785:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 5950              		.loc 1 785 39 is_stmt 0 view .LVU2039
 5951 2343 4889F1   		mov	rcx, rsi	# _4, source_start
 5952              	.LVL260:
 5953              	# sieve_extend.c:787:     register counter_t source_word = wordindex(source_start);
 787:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 5954              		.loc 1 787 24 view .LVU2040
 5955 2346 48C1EE06 		shr	rsi, 6	# source_start,
 5956              	.LVL261:
 5957              	# sieve_extend.c:785:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 785:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 5958              		.loc 1 785 39 view .LVU2041
 5959 234a 83E13F   		and	ecx, 63	# _4,
 5960              	.LVL262:
 5961              	# sieve_extend.c:780: static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source
 780:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 5962              		.loc 1 780 142 view .LVU2042
 5963 234d 48895424 		mov	QWORD PTR 24[rsp], rdx	# %sfp, size
 5963      18
 5964              	# sieve_extend.c:787:     register counter_t source_word = wordindex(source_start);
 787:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 5965              		.loc 1 787 24 view .LVU2043
 5966 2352 4989F1   		mov	r9, rsi	# source_word, source_start
 5967              	# sieve_extend.c:785:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 785:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 5968              		.loc 1 785 69 view .LVU2044
 5969 2355 4C89C2   		mov	rdx, r8	# _5, copy_start
 5970              	.LVL263:
 5971              	# sieve_extend.c:785:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 785:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 5972              		.loc 1 785 31 view .LVU2045
 5973 2358 4989CF   		mov	r15, rcx	# shift, _4
 5974              	# sieve_extend.c:790:                              | (bitarray[source_word+1] << shift_flipped))
 790:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 5975              		.loc 1 790 41 view .LVU2046
 5976 235b 4D8D6101 		lea	r12, 1[r9]	# tmp.369,
 5977              	# sieve_extend.c:785:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 785:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 5978              		.loc 1 785 69 view .LVU2047
GAS LISTING /tmp/ccLUVin9.s 			page 168


 5979 235f 83E23F   		and	edx, 63	# _5,
 5980              	.LVL264:
 786:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 5981              		.loc 1 786 5 is_stmt 1 view .LVU2048
 787:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 5982              		.loc 1 787 5 view .LVU2049
 788:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 5983              		.loc 1 788 5 view .LVU2050
 789:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 5984              		.loc 1 789 5 view .LVU2051
 5985              	# sieve_extend.c:785:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 785:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 5986              		.loc 1 785 31 is_stmt 0 view .LVU2052
 5987 2362 4929D7   		sub	r15, rdx	# shift, _5
 5988              	.LVL265:
 5989              	# sieve_extend.c:796:     const counter_t aligned_copy_word = min(source_word + size, destination_s
 796:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 5990              		.loc 1 796 41 view .LVU2053
 5991 2365 4F8D1414 		lea	r10, [r12+r10]	# tmp563,
 5992              	.LVL266:
 5993              	# sieve_extend.c:789:     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 789:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 5994              		.loc 1 789 25 view .LVU2054
 5995 2369 4A8D34DD 		lea	rsi, 0[0+r11*8]	# _6,
 5995      00000000 
 5996              	# sieve_extend.c:786:     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 786:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 5997              		.loc 1 786 31 view .LVU2055
 5998 2371 4829CA   		sub	rdx, rcx	# tmp550, _4
 5999              	.LVL267:
 6000              	# sieve_extend.c:789:     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 789:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 6001              		.loc 1 789 38 view .LVU2056
 6002 2374 4A8D04CD 		lea	rax, 0[0+r9*8]	# _9,
 6002      00000000 
 6003              	# sieve_extend.c:786:     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 786:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 6004              		.loc 1 786 31 view .LVU2057
 6005 237c 4883C240 		add	rdx, 64	# shift_flipped,
 6006              	.LVL268:
 6007              	# sieve_extend.c:791:                              & ~chopmask(copy_start); // because this is the 
 791:sieve_extend.c **** 
 6008              		.loc 1 791 33 view .LVU2058
 6009 2380 41F7D0   		not	r8d	# tmp557
 6010              	.LVL269:
 6011              	# sieve_extend.c:790:                              | (bitarray[source_word+1] << shift_flipped))
 790:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 6012              		.loc 1 790 57 view .LVU2059
 6013 2383 C462E9F7 		shlx	r13, QWORD PTR 8[rdi+rax], rdx	# tmp552, *_16, shift_flipped
 6013      6C0708
 6014              	# sieve_extend.c:789:     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 789:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 6015              		.loc 1 789 52 view .LVU2060
 6016 238a 4A8B3CCF 		mov	rdi, QWORD PTR [rdi+r9*8]	# *_10, *_10
 6017              	.LVL270:
 6018              	# sieve_extend.c:791:                              & ~chopmask(copy_start); // because this is the 
 791:sieve_extend.c **** 
GAS LISTING /tmp/ccLUVin9.s 			page 169


 6019              		.loc 1 791 33 view .LVU2061
 6020 238e 48C7C1FF 		mov	rcx, -1	# tmp560,
 6020      FFFFFF
 6021              	# sieve_extend.c:789:     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 789:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 6022              		.loc 1 789 52 view .LVU2062
 6023 2395 C46283F7 		shrx	r9, rdi, r15	# tmp554, *_10, shift
 6023      CF
 6024              	# sieve_extend.c:791:                              & ~chopmask(copy_start); // because this is the 
 791:sieve_extend.c **** 
 6025              		.loc 1 791 33 view .LVU2063
 6026 239a C462BBF7 		shrx	r8, rcx, r8	# tmp559, tmp560, tmp557
 6026      C1
 6027              	# sieve_extend.c:789:     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 789:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 6028              		.loc 1 789 52 view .LVU2064
 6029 239f 44897C24 		mov	DWORD PTR 72[rsp], r15d	# %sfp, shift
 6029      48
 6030              	# sieve_extend.c:790:                              | (bitarray[source_word+1] << shift_flipped))
 790:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 6031              		.loc 1 790 30 view .LVU2065
 6032 23a4 4D09E9   		or	r9, r13	# tmp556, tmp552
 6033              	# sieve_extend.c:791:                              & ~chopmask(copy_start); // because this is the 
 791:sieve_extend.c **** 
 6034              		.loc 1 791 30 view .LVU2066
 6035 23a7 C442B8F2 		andn	r13, r8, r9	# tmp562, tmp559, tmp556
 6035      E9
 6036              	# sieve_extend.c:789:     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 789:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 6037              		.loc 1 789 25 view .LVU2067
 6038 23ac 4C092C33 		or	QWORD PTR [rbx+rsi], r13	# *_7, tmp562
 793:sieve_extend.c ****     source_word++;
 6039              		.loc 1 793 5 is_stmt 1 view .LVU2068
 6040              	# sieve_extend.c:796:     const counter_t aligned_copy_word = min(source_word + size, destination_s
 796:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 6041              		.loc 1 796 21 is_stmt 0 view .LVU2069
 6042 23b0 4D39F2   		cmp	r10, r14	# tmp563, destination_stop_word
 6043              	.LBB364:
 6044              	.LBB365:
 6045              	# sieve_extend.c:692:     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_co
 692:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 6046              		.loc 1 692 91 view .LVU2070
 6047 23b3 41B90200 		mov	r9d, 2	# tmp564,
 6047      0000
 6048              	.LBE365:
 6049              	.LBE364:
 6050              	# sieve_extend.c:790:                              | (bitarray[source_word+1] << shift_flipped))
 790:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 6051              		.loc 1 790 57 view .LVU2071
 6052 23b9 89542440 		mov	DWORD PTR 64[rsp], edx	# %sfp, shift_flipped
 6053              	# sieve_extend.c:793:     copy_word++;
 793:sieve_extend.c ****     source_word++;
 6054              		.loc 1 793 14 view .LVU2072
 6055 23bd 4D8D6B01 		lea	r13, 1[r11]	# tmp.370,
 6056              	.LVL271:
 794:sieve_extend.c **** 
 6057              		.loc 1 794 5 is_stmt 1 view .LVU2073
GAS LISTING /tmp/ccLUVin9.s 			page 170


 796:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 6058              		.loc 1 796 5 view .LVU2074
 6059              	# sieve_extend.c:796:     const counter_t aligned_copy_word = min(source_word + size, destination_s
 796:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 6060              		.loc 1 796 21 is_stmt 0 view .LVU2075
 6061 23c1 4D0F47D6 		cmova	r10, r14	# tmp563,, tmp563, destination_stop_word
 6062 23c5 4C895424 		mov	QWORD PTR 80[rsp], r10	# %sfp, aligned_copy_word
 6062      50
 6063              	.LVL272:
 797:sieve_extend.c ****     source_word += distance;
 6064              		.loc 1 797 5 is_stmt 1 view .LVU2076
 6065              	.LBB390:
 6066              	.LBI364:
 691:sieve_extend.c ****     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_copy_word - 2) : 0; // s
 6067              		.loc 1 691 25 view .LVU2077
 6068              	.LBB387:
 692:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 6069              		.loc 1 692 5 view .LVU2078
 6070              	# sieve_extend.c:692:     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_co
 692:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 6071              		.loc 1 692 91 is_stmt 0 view .LVU2079
 6072 23ca 4983FA02 		cmp	r10, 2	# aligned_copy_word,
 6073 23ce 4D0F43CA 		cmovnb	r9, r10	# aligned_copy_word,, _86
 6074              	# sieve_extend.c:692:     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_co
 692:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 6075              		.loc 1 692 21 view .LVU2080
 6076 23d2 498D79FE 		lea	rdi, -2[r9]	# fast_loop_stop_word,
 6077 23d6 48897C24 		mov	QWORD PTR 48[rsp], rdi	# %sfp, fast_loop_stop_word
 6077      30
 6078              	.LVL273:
 693:sieve_extend.c ****     counter_t distance = 0;
 6079              		.loc 1 693 5 is_stmt 1 view .LVU2081
 694:sieve_extend.c ****     while (copy_word < fast_loop_stop_word) {
 6080              		.loc 1 694 5 view .LVU2082
 695:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6081              		.loc 1 695 5 view .LVU2083
 695:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6082              		.loc 1 695 11 view .LVU2084
 6083 23db 4939FD   		cmp	r13, rdi	# tmp.370, fast_loop_stop_word
 6084 23de 0F83A004 		jnb	.L513	#,
 6084      0000
 6085 23e4 4D29D9   		sub	r9, r11	# tmp565, copy_word
 6086 23e7 4C8D5040 		lea	r10, 64[rax]	# tmp567,
 6087              	.LVL274:
 695:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6088              		.loc 1 695 11 is_stmt 0 view .LVU2085
 6089 23eb 4C8D4610 		lea	r8, 16[rsi]	# tmp568,
 6090 23ef 498D49FC 		lea	rcx, -4[r9]	# _282,
 6091 23f3 4C8D7648 		lea	r14, 72[rsi]	# tmp571,
 6092              	.LVL275:
 695:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6093              		.loc 1 695 11 view .LVU2086
 6094 23f7 4D39C2   		cmp	r10, r8	# tmp567, tmp568
 6095 23fa 48894C24 		mov	QWORD PTR 56[rsp], rcx	# %sfp, _282
 6095      38
 6096 23ff 488D4808 		lea	rcx, 8[rax]	# tmp787,
 6097 2403 410F9EC1 		setle	r9b	#, tmp570
GAS LISTING /tmp/ccLUVin9.s 			page 171


 6098 2407 4939CE   		cmp	r14, rcx	# tmp571, tmp787
 6099 240a 400F9EC7 		setle	dil	#, tmp574
 6100              	.LVL276:
 695:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6101              		.loc 1 695 11 view .LVU2087
 6102 240e 4109F9   		or	r9d, edi	# tmp575, tmp574
 6103 2411 488D7850 		lea	rdi, 80[rax]	# tmp576,
 6104 2415 48897C24 		mov	QWORD PTR 40[rsp], rdi	# %sfp, tmp576
 6104      28
 6105 241a 4C39C7   		cmp	rdi, r8	# tmp576, tmp568
 6106 241d 0F9E4424 		setle	BYTE PTR 39[rsp]	#, %sfp
 6106      27
 6107 2422 4883C010 		add	rax, 16	# tmp581,
 6108 2426 4939C6   		cmp	r14, rax	# tmp571, tmp581
 6109 2429 400F9EC7 		setle	dil	#, tmp583
 6110 242d 400A7C24 		or	dil, BYTE PTR 39[rsp]	# tmp584, %sfp
 6110      27
 6111 2432 4421CF   		and	edi, r9d	# tmp585, tmp575
 6112 2435 48837C24 		cmp	QWORD PTR 56[rsp], 11	# %sfp,
 6112      380B
 6113 243b 410F97C1 		seta	r9b	#, tmp587
 6114 243f 4421CF   		and	edi, r9d	# tmp588, tmp587
 6115 2442 4C8D4E08 		lea	r9, 8[rsi]	# tmp590,
 6116 2446 4D39CA   		cmp	r10, r9	# tmp567, tmp590
 6117 2449 410F9EC2 		setle	r10b	#, tmp592
 6118 244d 4883C640 		add	rsi, 64	# tmp593,
 6119 2451 4839CE   		cmp	rsi, rcx	# tmp593, tmp787
 6120 2454 0F9E4424 		setle	BYTE PTR 39[rsp]	#, %sfp
 6120      27
 6121 2459 440A5424 		or	r10b, BYTE PTR 39[rsp]	# tmp597, %sfp
 6121      27
 6122 245e 4421D7   		and	edi, r10d	# tmp598, tmp597
 6123 2461 4C394C24 		cmp	QWORD PTR 40[rsp], r9	# %sfp, tmp590
 6123      28
 6124 2466 410F9EC2 		setle	r10b	#, tmp602
 6125 246a 4839C6   		cmp	rsi, rax	# tmp593, tmp581
 6126 246d 0F9E4424 		setle	BYTE PTR 40[rsp]	#, %sfp
 6126      28
 6127 2472 440A5424 		or	r10b, BYTE PTR 40[rsp]	# tmp607, %sfp
 6127      28
 6128 2477 4484D7   		test	dil, r10b	# tmp598, tmp607
 6129 247a 0F84E80C 		je	.L514	#,
 6129      0000
 6130 2480 4D39CE   		cmp	r14, r9	# tmp571, tmp590
 6131 2483 410F9EC6 		setle	r14b	#, tmp612
 6132 2487 4C39C6   		cmp	rsi, r8	# tmp593, tmp568
 6133 248a 400F9EC6 		setle	sil	#, tmp616
 6134 248e 4108F6   		or	r14b, sil	# tmp612, tmp616
 6135 2491 0F84D10C 		je	.L514	#,
 6135      0000
 6136 2497 4801D9   		add	rcx, rbx	# vectp.391, bitarray
 6137 249a 4801D8   		add	rax, rbx	# vectp.395, bitarray
 6138              	.LBB366:
 6139              	# sieve_extend.c:697:         bitword_t source1 = bitarray[source_word+1];
 697:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6140              		.loc 1 697 19 view .LVU2088
 6141 249d C5FE6F08 		vmovdqu	ymm1, YMMWORD PTR [rax]	# MEM[base: vectp.395_449, index: ivtmp.446_748, offset: 0B], MEM[
GAS LISTING /tmp/ccLUVin9.s 			page 172


 6142 24a1 C4C1796E 		vmovd	xmm3, r15d	# _12,
 6142      DF
 6143 24a6 C5FE6F40 		vmovdqu	ymm0, YMMWORD PTR 32[rax]	# MEM[base: vectp.395_449, index: ivtmp.446_748, offset: 32B], M
 6143      20
 6144 24ab C5F96EE2 		vmovd	xmm4, edx	# _18,
 6145              	# sieve_extend.c:696:         bitword_t source0 = bitarray[source_word  ];
 696:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6146              		.loc 1 696 19 view .LVU2089
 6147 24af C5FE6F39 		vmovdqu	ymm7, YMMWORD PTR [rcx]	# tmp1186, MEM[base: vectp.391_440, index: ivtmp.446_748, offset: 
 6148              	# sieve_extend.c:697:         bitword_t source1 = bitarray[source_word+1];
 697:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6149              		.loc 1 697 19 view .LVU2090
 6150 24b3 C5F56CE8 		vpunpcklqdq	ymm5, ymm1, ymm0	# tmp624, MEM[base: vectp.395_449, index: ivtmp.446_748, offset: 0B],
 6151 24b7 C5756DF0 		vpunpckhqdq	ymm14, ymm1, ymm0	# tmp642, MEM[base: vectp.395_449, index: ivtmp.446_748, offset: 0B]
 6152              	# sieve_extend.c:696:         bitword_t source0 = bitarray[source_word  ];
 696:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6153              		.loc 1 696 19 view .LVU2091
 6154 24bb C5C56C51 		vpunpcklqdq	ymm2, ymm7, YMMWORD PTR 32[rcx]	# tmp628, tmp1186, MEM[base: vectp.391_440, index: ivt
 6154      20
 6155 24c0 4C8B7424 		mov	r14, QWORD PTR 56[rsp]	# _282, %sfp
 6155      38
 6156              	# sieve_extend.c:697:         bitword_t source1 = bitarray[source_word+1];
 697:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6157              		.loc 1 697 19 view .LVU2092
 6158 24c5 C463FD00 		vpermq	ymm8, ymm5, 216	# vect_perm_even_457, tmp624,
 6158      C5D8
 6159              	# sieve_extend.c:696:         bitword_t source0 = bitarray[source_word  ];
 696:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6160              		.loc 1 696 19 view .LVU2093
 6161 24cb C4E3FD00 		vpermq	ymm6, ymm2, 216	# tmp627, tmp628,
 6161      F2D8
 6162              	# sieve_extend.c:697:         bitword_t source1 = bitarray[source_word+1];
 697:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6163              		.loc 1 697 19 view .LVU2094
 6164 24d1 C443FD00 		vpermq	ymm15, ymm14, 216	# tmp641, tmp642,
 6164      FED8
 6165              	# sieve_extend.c:698:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6166              		.loc 1 698 63 view .LVU2095
 6167 24d7 C53DF3D4 		vpsllq	ymm10, ymm8, xmm4	# vect__100.399, vect_perm_even_457, _18
 6168              	# sieve_extend.c:698:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6169              		.loc 1 698 42 view .LVU2096
 6170 24db C54DD3CB 		vpsrlq	ymm9, ymm6, xmm3	# vect__98.398, tmp627, _12
 6171              	# sieve_extend.c:700:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 700:sieve_extend.c ****         copy_word += 2;
 6172              		.loc 1 700 42 view .LVU2097
 6173 24df C5BDD3C3 		vpsrlq	ymm0, ymm8, xmm3	# vect__109.401, vect_perm_even_457, _12
 6174              	# sieve_extend.c:700:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 700:sieve_extend.c ****         copy_word += 2;
 6175              		.loc 1 700 63 view .LVU2098
 6176 24e3 C585F3CC 		vpsllq	ymm1, ymm15, xmm4	# vect__110.402, tmp641, _18
 6177 24e7 49C1EE03 		shr	r14, 3	# _282,
 6178              	# sieve_extend.c:698:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6179              		.loc 1 698 52 view .LVU2099
 6180 24eb C44135EB 		vpor	ymm11, ymm9, ymm10	# vect__104.400, vect__98.398, vect__100.399
GAS LISTING /tmp/ccLUVin9.s 			page 173


 6180      DA
 6181              	# sieve_extend.c:700:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 700:sieve_extend.c ****         copy_word += 2;
 6182              		.loc 1 700 52 view .LVU2100
 6183 24f0 C5F5EBE8 		vpor	ymm5, ymm1, ymm0	# vect__114.403, vect__110.402, vect__109.401
 6184 24f4 4D8D56FF 		lea	r10, -1[r14]	# tmp809,
 6185              	# sieve_extend.c:698:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6186              		.loc 1 698 31 view .LVU2101
 6187 24f8 C4437D39 		vextracti128	xmm13, ymm11, 0x1	# tmp638, vect__104.400
 6187      DD01
 6188 24fe 4183E201 		and	r10d, 1	# tmp811,
 6189              	.LVL277:
 696:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6190              		.loc 1 696 9 is_stmt 1 view .LVU2102
 697:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6191              		.loc 1 697 9 view .LVU2103
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6192              		.loc 1 698 9 view .LVU2104
 6193              	# sieve_extend.c:700:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 700:sieve_extend.c ****         copy_word += 2;
 6194              		.loc 1 700 31 is_stmt 0 view .LVU2105
 6195 2502 C4E37D39 		vextracti128	xmm7, ymm5, 0x1	# tmp652, vect__114.403
 6195      EF01
 6196 2508 4983FE01 		cmp	r14, 1	# bnd.384,
 6197              	# sieve_extend.c:698:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6198              		.loc 1 698 31 view .LVU2106
 6199 250c C42179D6 		vmovq	QWORD PTR [rbx+r9], xmm11	# MEM[base: _463, index: ivtmp.446_748, offset: 0B], tmp634
 6199      1C0B
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6200              		.loc 1 698 31 view .LVU2107
 6201 2512 4E8D1C0B 		lea	r11, [rbx+r9]	# _463,
 6202 2516 C423F916 		vpextrq	QWORD PTR 16[rbx+r9], xmm11, 1	# MEM[base: _463, index: ivtmp.446_748, offset: 16B], tmp63
 6202      5C0B1001 
 6203 251e 4A8D3C03 		lea	rdi, [rbx+r8]	# _483,
 6204 2522 C42179D6 		vmovq	QWORD PTR 32[rbx+r9], xmm13	# MEM[base: _463, index: ivtmp.446_748, offset: 32B], tmp638
 6204      6C0B20
 6205 2529 C423F916 		vpextrq	QWORD PTR 48[rbx+r9], xmm13, 1	# MEM[base: _463, index: ivtmp.446_748, offset: 48B], tmp63
 6205      6C0B3001 
 699:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6206              		.loc 1 699 9 is_stmt 1 view .LVU2108
 6207              	.LVL278:
 700:sieve_extend.c ****         copy_word += 2;
 6208              		.loc 1 700 9 view .LVU2109
 6209 2531 41B90100 		mov	r9d, 1	# ivtmp.444,
 6209      0000
 6210              	# sieve_extend.c:700:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 700:sieve_extend.c ****         copy_word += 2;
 6211              		.loc 1 700 31 is_stmt 0 view .LVU2110
 6212 2537 C4A179D6 		vmovq	QWORD PTR [rbx+r8], xmm5	# MEM[base: _483, index: ivtmp.446_748, offset: 0B], tmp648
 6212      2C03
 700:sieve_extend.c ****         copy_word += 2;
 6213              		.loc 1 700 31 view .LVU2111
 6214 253d C4A3F916 		vpextrq	QWORD PTR 16[rbx+r8], xmm5, 1	# MEM[base: _483, index: ivtmp.446_748, offset: 16B], tmp648
 6214      6C031001 
 6215 2545 C4A179D6 		vmovq	QWORD PTR 32[rbx+r8], xmm7	# MEM[base: _483, index: ivtmp.446_748, offset: 32B], tmp652
GAS LISTING /tmp/ccLUVin9.s 			page 174


 6215      7C0320
 6216 254c C4A3F916 		vpextrq	QWORD PTR 48[rbx+r8], xmm7, 1	# MEM[base: _483, index: ivtmp.446_748, offset: 48B], tmp652
 6216      7C033001 
 701:sieve_extend.c ****         source_word += 2;
 6217              		.loc 1 701 9 is_stmt 1 view .LVU2112
 702:sieve_extend.c ****         distance += 2;
 6218              		.loc 1 702 9 view .LVU2113
 703:sieve_extend.c ****     }
 6219              		.loc 1 703 9 view .LVU2114
 703:sieve_extend.c ****     }
 6220              		.loc 1 703 9 is_stmt 0 view .LVU2115
 6221              	.LBE366:
 695:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6222              		.loc 1 695 11 is_stmt 1 view .LVU2116
 6223 2554 41B84000 		mov	r8d, 64	# ivtmp.446,
 6223      0000
 6224 255a 0F86EC01 		jbe	.L659	#,
 6224      0000
 6225 2560 4D85D2   		test	r10, r10	# tmp811
 6226 2563 0F84A700 		je	.L515	#,
 6226      0000
 6227              	.LBB367:
 696:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6228              		.loc 1 696 9 view .LVU2117
 697:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6229              		.loc 1 697 9 view .LVU2118
 6230              	# sieve_extend.c:697:         bitword_t source1 = bitarray[source_word+1];
 697:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6231              		.loc 1 697 19 is_stmt 0 view .LVU2119
 6232 2569 C57E6F48 		vmovdqu	ymm9, YMMWORD PTR 64[rax]	# MEM[base: vectp.395_449, index: ivtmp.446_748, offset: 0B], ME
 6232      40
 6233 256e 4983FE02 		cmp	r14, 2	# bnd.384,
 6234 2572 C57E6F50 		vmovdqu	ymm10, YMMWORD PTR 96[rax]	# MEM[base: vectp.395_449, index: ivtmp.446_748, offset: 32B], 
 6234      60
 6235 2577 41B90200 		mov	r9d, 2	# ivtmp.444,
 6235      0000
 6236              	# sieve_extend.c:696:         bitword_t source0 = bitarray[source_word  ];
 696:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6237              		.loc 1 696 19 view .LVU2120
 6238 257d C5FE6F71 		vmovdqu	ymm6, YMMWORD PTR 64[rcx]	# tmp1287, MEM[base: vectp.391_440, index: ivtmp.446_748, offset
 6238      40
 6239              	# sieve_extend.c:697:         bitword_t source1 = bitarray[source_word+1];
 697:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6240              		.loc 1 697 19 view .LVU2121
 6241 2582 C4C1356C 		vpunpcklqdq	ymm2, ymm9, ymm10	# tmp1075, MEM[base: vectp.395_449, index: ivtmp.446_748, offset: 0B
 6241      D2
 6242 2587 C441356D 		vpunpckhqdq	ymm8, ymm9, ymm10	# tmp1090, MEM[base: vectp.395_449, index: ivtmp.446_748, offset: 0B
 6242      C2
 6243              	# sieve_extend.c:696:         bitword_t source0 = bitarray[source_word  ];
 696:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6244              		.loc 1 696 19 view .LVU2122
 6245 258c C54D6C61 		vpunpcklqdq	ymm12, ymm6, YMMWORD PTR 96[rcx]	# tmp1079, tmp1287, MEM[base: vectp.391_440, index: i
 6245      60
 6246              	# sieve_extend.c:697:         bitword_t source1 = bitarray[source_word+1];
 697:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6247              		.loc 1 697 19 view .LVU2123
 6248 2591 C463FD00 		vpermq	ymm11, ymm2, 216	# vect_perm_even_457, tmp1075,
GAS LISTING /tmp/ccLUVin9.s 			page 175


 6248      DAD8
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6249              		.loc 1 698 9 is_stmt 1 view .LVU2124
 6250              	# sieve_extend.c:696:         bitword_t source0 = bitarray[source_word  ];
 696:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6251              		.loc 1 696 19 is_stmt 0 view .LVU2125
 6252 2597 C443FD00 		vpermq	ymm13, ymm12, 216	# tmp1080, tmp1079,
 6252      ECD8
 6253              	# sieve_extend.c:697:         bitword_t source1 = bitarray[source_word+1];
 697:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6254              		.loc 1 697 19 view .LVU2126
 6255 259d C4C3FD00 		vpermq	ymm7, ymm8, 216	# tmp1091, tmp1090,
 6255      F8D8
 6256 25a3 41B88000 		mov	r8d, 128	# ivtmp.446,
 6256      0000
 6257              	# sieve_extend.c:698:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6258              		.loc 1 698 42 view .LVU2127
 6259 25a9 C515D3F3 		vpsrlq	ymm14, ymm13, xmm3	# vect__98.398, tmp1080, _12
 6260              	# sieve_extend.c:698:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6261              		.loc 1 698 63 view .LVU2128
 6262 25ad C525F3FC 		vpsllq	ymm15, ymm11, xmm4	# vect__100.399, vect_perm_even_457, _18
 6263              	# sieve_extend.c:700:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 700:sieve_extend.c ****         copy_word += 2;
 6264              		.loc 1 700 42 view .LVU2129
 6265 25b1 C525D3D3 		vpsrlq	ymm10, ymm11, xmm3	# vect__109.401, vect_perm_even_457, _12
 6266              	# sieve_extend.c:700:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 700:sieve_extend.c ****         copy_word += 2;
 6267              		.loc 1 700 63 view .LVU2130
 6268 25b5 C545F3CC 		vpsllq	ymm9, ymm7, xmm4	# vect__110.402, tmp1091, _18
 6269              	# sieve_extend.c:698:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6270              		.loc 1 698 52 view .LVU2131
 6271 25b9 C4C10DEB 		vpor	ymm1, ymm14, ymm15	# vect__104.400, vect__98.398, vect__100.399
 6271      CF
 6272              	# sieve_extend.c:700:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 700:sieve_extend.c ****         copy_word += 2;
 6273              		.loc 1 700 52 view .LVU2132
 6274 25be C4C135EB 		vpor	ymm2, ymm9, ymm10	# vect__114.403, vect__110.402, vect__109.401
 6274      D2
 6275              	# sieve_extend.c:698:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6276              		.loc 1 698 31 view .LVU2133
 6277 25c3 C4E37D39 		vextracti128	xmm5, ymm1, 0x1	# tmp1087, vect__104.400
 6277      CD01
 6278              	# sieve_extend.c:700:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 700:sieve_extend.c ****         copy_word += 2;
 6279              		.loc 1 700 31 view .LVU2134
 6280 25c9 C4E37D39 		vextracti128	xmm6, ymm2, 0x1	# tmp1098, vect__114.403
 6280      D601
 6281              	# sieve_extend.c:698:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6282              		.loc 1 698 31 view .LVU2135
 6283 25cf C4C179D6 		vmovq	QWORD PTR 64[r11], xmm1	# MEM[base: _463, index: ivtmp.446_748, offset: 0B], tmp1084
 6283      4B40
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
GAS LISTING /tmp/ccLUVin9.s 			page 176


 6284              		.loc 1 698 31 view .LVU2136
 6285 25d5 C4C3F916 		vpextrq	QWORD PTR 80[r11], xmm1, 1	# MEM[base: _463, index: ivtmp.446_748, offset: 16B], tmp1084
 6285      4B5001
 6286 25dc C4C179D6 		vmovq	QWORD PTR 96[r11], xmm5	# MEM[base: _463, index: ivtmp.446_748, offset: 32B], tmp1087
 6286      6B60
 6287 25e2 C4C3F916 		vpextrq	QWORD PTR 112[r11], xmm5, 1	# MEM[base: _463, index: ivtmp.446_748, offset: 48B], tmp1087
 6287      6B7001
 699:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6288              		.loc 1 699 9 is_stmt 1 view .LVU2137
 700:sieve_extend.c ****         copy_word += 2;
 6289              		.loc 1 700 9 view .LVU2138
 6290              	# sieve_extend.c:700:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 700:sieve_extend.c ****         copy_word += 2;
 6291              		.loc 1 700 31 is_stmt 0 view .LVU2139
 6292 25e9 C5F9D657 		vmovq	QWORD PTR 64[rdi], xmm2	# MEM[base: _483, index: ivtmp.446_748, offset: 0B], tmp1095
 6292      40
 700:sieve_extend.c ****         copy_word += 2;
 6293              		.loc 1 700 31 view .LVU2140
 6294 25ee C4E3F916 		vpextrq	QWORD PTR 80[rdi], xmm2, 1	# MEM[base: _483, index: ivtmp.446_748, offset: 16B], tmp1095
 6294      575001
 6295 25f5 C5F9D677 		vmovq	QWORD PTR 96[rdi], xmm6	# MEM[base: _483, index: ivtmp.446_748, offset: 32B], tmp1098
 6295      60
 6296 25fa C4E3F916 		vpextrq	QWORD PTR 112[rdi], xmm6, 1	# MEM[base: _483, index: ivtmp.446_748, offset: 48B], tmp1098
 6296      777001
 701:sieve_extend.c ****         source_word += 2;
 6297              		.loc 1 701 9 is_stmt 1 view .LVU2141
 702:sieve_extend.c ****         distance += 2;
 6298              		.loc 1 702 9 view .LVU2142
 703:sieve_extend.c ****     }
 6299              		.loc 1 703 9 view .LVU2143
 703:sieve_extend.c ****     }
 6300              		.loc 1 703 9 is_stmt 0 view .LVU2144
 6301              	.LBE367:
 695:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6302              		.loc 1 695 11 is_stmt 1 view .LVU2145
 6303 2601 0F864501 		jbe	.L659	#,
 6303      0000
 6304 2607 660F1F84 		.p2align 4
 6304      00000000 
 6304      00
 6305              		.p2align 3
 6306              	.L515:
 6307              	.LBB368:
 696:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6308              		.loc 1 696 9 view .LVU2146
 697:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6309              		.loc 1 697 9 view .LVU2147
 6310              	# sieve_extend.c:697:         bitword_t source1 = bitarray[source_word+1];
 697:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6311              		.loc 1 697 19 is_stmt 0 view .LVU2148
 6312 2610 C4217E6F 		vmovdqu	ymm12, YMMWORD PTR [rax+r8]	# MEM[base: vectp.395_449, index: ivtmp.446_748, offset: 0B], 
 6312      2400
 6313 2616 4983C102 		add	r9, 2	# ivtmp.444,
 6314 261a C4217E6F 		vmovdqu	ymm13, YMMWORD PTR 32[rax+r8]	# MEM[base: vectp.395_449, index: ivtmp.446_748, offset: 32B
 6314      6C0020
 6315              	# sieve_extend.c:696:         bitword_t source0 = bitarray[source_word  ];
 696:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
GAS LISTING /tmp/ccLUVin9.s 			page 177


 6316              		.loc 1 696 19 view .LVU2149
 6317 2621 C4A17E6F 		vmovdqu	ymm1, YMMWORD PTR [rcx+r8]	# tmp1187, MEM[base: vectp.391_440, index: ivtmp.446_748, offse
 6317      0C01
 6318              	# sieve_extend.c:697:         bitword_t source1 = bitarray[source_word+1];
 697:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6319              		.loc 1 697 19 view .LVU2150
 6320 2627 C4411D6C 		vpunpcklqdq	ymm14, ymm12, ymm13	# tmp818, MEM[base: vectp.395_449, index: ivtmp.446_748, offset: 0
 6320      F5
 6321 262c C4411D6D 		vpunpckhqdq	ymm11, ymm12, ymm13	# tmp833, MEM[base: vectp.395_449, index: ivtmp.446_748, offset: 0
 6321      DD
 6322              	# sieve_extend.c:696:         bitword_t source0 = bitarray[source_word  ];
 696:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6323              		.loc 1 696 19 view .LVU2151
 6324 2631 C4A1756C 		vpunpcklqdq	ymm0, ymm1, YMMWORD PTR 32[rcx+r8]	# tmp822, tmp1187, MEM[base: vectp.391_440, index: 
 6324      440120
 6325              	# sieve_extend.c:697:         bitword_t source1 = bitarray[source_word+1];
 697:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6326              		.loc 1 697 19 view .LVU2152
 6327 2638 C443FD00 		vpermq	ymm15, ymm14, 216	# vect_perm_even_457, tmp818,
 6327      FED8
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6328              		.loc 1 698 9 is_stmt 1 view .LVU2153
 6329              	# sieve_extend.c:696:         bitword_t source0 = bitarray[source_word  ];
 696:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6330              		.loc 1 696 19 is_stmt 0 view .LVU2154
 6331 263e C4E3FD00 		vpermq	ymm5, ymm0, 216	# tmp823, tmp822,
 6331      E8D8
 6332              	# sieve_extend.c:697:         bitword_t source1 = bitarray[source_word+1];
 697:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6333              		.loc 1 697 19 view .LVU2155
 6334 2644 C4C3FD00 		vpermq	ymm6, ymm11, 216	# tmp834, tmp833,
 6334      F3D8
 6335              	# sieve_extend.c:698:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6336              		.loc 1 698 42 view .LVU2156
 6337 264a C555D3C3 		vpsrlq	ymm8, ymm5, xmm3	# vect__98.398, tmp823, _12
 6338              	# sieve_extend.c:698:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6339              		.loc 1 698 63 view .LVU2157
 6340 264e C585F3FC 		vpsllq	ymm7, ymm15, xmm4	# vect__100.399, vect_perm_even_457, _18
 6341              	# sieve_extend.c:700:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 700:sieve_extend.c ****         copy_word += 2;
 6342              		.loc 1 700 42 view .LVU2158
 6343 2652 C505D3EB 		vpsrlq	ymm13, ymm15, xmm3	# vect__109.401, vect_perm_even_457, _12
 6344              	# sieve_extend.c:700:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 700:sieve_extend.c ****         copy_word += 2;
 6345              		.loc 1 700 63 view .LVU2159
 6346 2656 C54DF3E4 		vpsllq	ymm12, ymm6, xmm4	# vect__110.402, tmp834, _18
 6347              	# sieve_extend.c:698:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6348              		.loc 1 698 52 view .LVU2160
 6349 265a C53DEBCF 		vpor	ymm9, ymm8, ymm7	# vect__104.400, vect__98.398, vect__100.399
 6350              	# sieve_extend.c:700:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 700:sieve_extend.c ****         copy_word += 2;
 6351              		.loc 1 700 52 view .LVU2161
 6352 265e C4411DEB 		vpor	ymm14, ymm12, ymm13	# vect__114.403, vect__110.402, vect__109.401
 6352      F5
GAS LISTING /tmp/ccLUVin9.s 			page 178


 6353              	# sieve_extend.c:698:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6354              		.loc 1 698 31 view .LVU2162
 6355 2663 C4637D39 		vextracti128	xmm2, ymm9, 0x1	# tmp830, vect__104.400
 6355      CA01
 6356              	# sieve_extend.c:700:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 700:sieve_extend.c ****         copy_word += 2;
 6357              		.loc 1 700 31 view .LVU2163
 6358 2669 C4637D39 		vextracti128	xmm1, ymm14, 0x1	# tmp841, vect__114.403
 6358      F101
 6359              	# sieve_extend.c:698:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6360              		.loc 1 698 31 view .LVU2164
 6361 266f C40179D6 		vmovq	QWORD PTR [r11+r8], xmm9	# MEM[base: _463, index: ivtmp.446_748, offset: 0B], tmp827
 6361      0C03
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6362              		.loc 1 698 31 view .LVU2165
 6363 2675 C403F916 		vpextrq	QWORD PTR 16[r11+r8], xmm9, 1	# MEM[base: _463, index: ivtmp.446_748, offset: 16B], tmp827
 6363      4C031001 
 6364 267d C48179D6 		vmovq	QWORD PTR 32[r11+r8], xmm2	# MEM[base: _463, index: ivtmp.446_748, offset: 32B], tmp830
 6364      540320
 6365 2684 C483F916 		vpextrq	QWORD PTR 48[r11+r8], xmm2, 1	# MEM[base: _463, index: ivtmp.446_748, offset: 48B], tmp830
 6365      54033001 
 699:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6366              		.loc 1 699 9 is_stmt 1 view .LVU2166
 700:sieve_extend.c ****         copy_word += 2;
 6367              		.loc 1 700 9 view .LVU2167
 6368              	# sieve_extend.c:700:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 700:sieve_extend.c ****         copy_word += 2;
 6369              		.loc 1 700 31 is_stmt 0 view .LVU2168
 6370 268c C42179D6 		vmovq	QWORD PTR [rdi+r8], xmm14	# MEM[base: _483, index: ivtmp.446_748, offset: 0B], tmp838
 6370      3407
 700:sieve_extend.c ****         copy_word += 2;
 6371              		.loc 1 700 31 view .LVU2169
 6372 2692 C423F916 		vpextrq	QWORD PTR 16[rdi+r8], xmm14, 1	# MEM[base: _483, index: ivtmp.446_748, offset: 16B], tmp83
 6372      74071001 
 6373 269a C4A179D6 		vmovq	QWORD PTR 32[rdi+r8], xmm1	# MEM[base: _483, index: ivtmp.446_748, offset: 32B], tmp841
 6373      4C0720
 6374 26a1 C4A3F916 		vpextrq	QWORD PTR 48[rdi+r8], xmm1, 1	# MEM[base: _483, index: ivtmp.446_748, offset: 48B], tmp841
 6374      4C073001 
 701:sieve_extend.c ****         source_word += 2;
 6375              		.loc 1 701 9 is_stmt 1 view .LVU2170
 702:sieve_extend.c ****         distance += 2;
 6376              		.loc 1 702 9 view .LVU2171
 703:sieve_extend.c ****     }
 6377              		.loc 1 703 9 view .LVU2172
 703:sieve_extend.c ****     }
 6378              		.loc 1 703 9 is_stmt 0 view .LVU2173
 6379              	.LBE368:
 695:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6380              		.loc 1 695 11 is_stmt 1 view .LVU2174
 6381              	.LBB369:
 696:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6382              		.loc 1 696 9 view .LVU2175
 697:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6383              		.loc 1 697 9 view .LVU2176
 6384              	# sieve_extend.c:697:         bitword_t source1 = bitarray[source_word+1];
GAS LISTING /tmp/ccLUVin9.s 			page 179


 697:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6385              		.loc 1 697 19 is_stmt 0 view .LVU2177
 6386 26a9 C4217E6F 		vmovdqu	ymm8, YMMWORD PTR 64[rax+r8]	# MEM[base: vectp.395_449, index: ivtmp.446_748, offset: 0B],
 6386      440040
 6387 26b0 C4A17E6F 		vmovdqu	ymm0, YMMWORD PTR 96[rax+r8]	# MEM[base: vectp.395_449, index: ivtmp.446_748, offset: 32B]
 6387      440060
 6388              	# sieve_extend.c:696:         bitword_t source0 = bitarray[source_word  ];
 696:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6389              		.loc 1 696 19 view .LVU2178
 6390 26b7 C4A17E6F 		vmovdqu	ymm7, YMMWORD PTR 64[rcx+r8]	# tmp1188, MEM[base: vectp.391_440, index: ivtmp.446_748, off
 6390      7C0140
 6391              	# sieve_extend.c:697:         bitword_t source1 = bitarray[source_word+1];
 697:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6392              		.loc 1 697 19 view .LVU2179
 6393 26be C5BD6CE8 		vpunpcklqdq	ymm5, ymm8, ymm0	# tmp848, MEM[base: vectp.395_449, index: ivtmp.446_748, offset: 0B],
 6394 26c2 C53D6DF8 		vpunpckhqdq	ymm15, ymm8, ymm0	# tmp863, MEM[base: vectp.395_449, index: ivtmp.446_748, offset: 0B]
 6395              	# sieve_extend.c:696:         bitword_t source0 = bitarray[source_word  ];
 696:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6396              		.loc 1 696 19 view .LVU2180
 6397 26c6 C421456C 		vpunpcklqdq	ymm10, ymm7, YMMWORD PTR 96[rcx+r8]	# tmp852, tmp1188, MEM[base: vectp.391_440, index:
 6397      540160
 6398              	# sieve_extend.c:697:         bitword_t source1 = bitarray[source_word+1];
 697:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6399              		.loc 1 697 19 view .LVU2181
 6400 26cd C463FD00 		vpermq	ymm9, ymm5, 216	# vect_perm_even_457, tmp848,
 6400      CDD8
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6401              		.loc 1 698 9 is_stmt 1 view .LVU2182
 6402              	# sieve_extend.c:696:         bitword_t source0 = bitarray[source_word  ];
 696:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6403              		.loc 1 696 19 is_stmt 0 view .LVU2183
 6404 26d3 C4C3FD00 		vpermq	ymm2, ymm10, 216	# tmp853, tmp852,
 6404      D2D8
 6405              	# sieve_extend.c:697:         bitword_t source1 = bitarray[source_word+1];
 697:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6406              		.loc 1 697 19 view .LVU2184
 6407 26d9 C4C3FD00 		vpermq	ymm1, ymm15, 216	# tmp864, tmp863,
 6407      CFD8
 6408              	# sieve_extend.c:698:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6409              		.loc 1 698 42 view .LVU2185
 6410 26df C56DD3DB 		vpsrlq	ymm11, ymm2, xmm3	# vect__98.398, tmp853, _12
 6411              	# sieve_extend.c:698:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6412              		.loc 1 698 63 view .LVU2186
 6413 26e3 C5B5F3F4 		vpsllq	ymm6, ymm9, xmm4	# vect__100.399, vect_perm_even_457, _18
 6414              	# sieve_extend.c:700:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 700:sieve_extend.c ****         copy_word += 2;
 6415              		.loc 1 700 42 view .LVU2187
 6416 26e7 C5B5D3C3 		vpsrlq	ymm0, ymm9, xmm3	# vect__109.401, vect_perm_even_457, _12
 6417              	# sieve_extend.c:700:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 700:sieve_extend.c ****         copy_word += 2;
 6418              		.loc 1 700 63 view .LVU2188
 6419 26eb C575F3C4 		vpsllq	ymm8, ymm1, xmm4	# vect__110.402, tmp864, _18
 6420              	# sieve_extend.c:698:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6421              		.loc 1 698 52 view .LVU2189
GAS LISTING /tmp/ccLUVin9.s 			page 180


 6422 26ef C525EBE6 		vpor	ymm12, ymm11, ymm6	# vect__104.400, vect__98.398, vect__100.399
 6423              	# sieve_extend.c:700:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 700:sieve_extend.c ****         copy_word += 2;
 6424              		.loc 1 700 52 view .LVU2190
 6425 26f3 C5BDEBE8 		vpor	ymm5, ymm8, ymm0	# vect__114.403, vect__110.402, vect__109.401
 6426              	# sieve_extend.c:698:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6427              		.loc 1 698 31 view .LVU2191
 6428 26f7 C4437D39 		vextracti128	xmm14, ymm12, 0x1	# tmp860, vect__104.400
 6428      E601
 6429              	# sieve_extend.c:700:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 700:sieve_extend.c ****         copy_word += 2;
 6430              		.loc 1 700 31 view .LVU2192
 6431 26fd C4E37D39 		vextracti128	xmm7, ymm5, 0x1	# tmp871, vect__114.403
 6431      EF01
 6432              	# sieve_extend.c:698:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6433              		.loc 1 698 31 view .LVU2193
 6434 2703 C40179D6 		vmovq	QWORD PTR 64[r11+r8], xmm12	# MEM[base: _463, index: ivtmp.446_748, offset: 0B], tmp857
 6434      640340
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6435              		.loc 1 698 31 view .LVU2194
 6436 270a C403F916 		vpextrq	QWORD PTR 80[r11+r8], xmm12, 1	# MEM[base: _463, index: ivtmp.446_748, offset: 16B], tmp85
 6436      64035001 
 6437 2712 C40179D6 		vmovq	QWORD PTR 96[r11+r8], xmm14	# MEM[base: _463, index: ivtmp.446_748, offset: 32B], tmp860
 6437      740360
 6438 2719 C403F916 		vpextrq	QWORD PTR 112[r11+r8], xmm14, 1	# MEM[base: _463, index: ivtmp.446_748, offset: 48B], tmp8
 6438      74037001 
 699:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6439              		.loc 1 699 9 is_stmt 1 view .LVU2195
 700:sieve_extend.c ****         copy_word += 2;
 6440              		.loc 1 700 9 view .LVU2196
 6441              	# sieve_extend.c:700:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 700:sieve_extend.c ****         copy_word += 2;
 6442              		.loc 1 700 31 is_stmt 0 view .LVU2197
 6443 2721 C4A179D6 		vmovq	QWORD PTR 64[rdi+r8], xmm5	# MEM[base: _483, index: ivtmp.446_748, offset: 0B], tmp868
 6443      6C0740
 700:sieve_extend.c ****         copy_word += 2;
 6444              		.loc 1 700 31 view .LVU2198
 6445 2728 C4A3F916 		vpextrq	QWORD PTR 80[rdi+r8], xmm5, 1	# MEM[base: _483, index: ivtmp.446_748, offset: 16B], tmp868
 6445      6C075001 
 6446 2730 C4A179D6 		vmovq	QWORD PTR 96[rdi+r8], xmm7	# MEM[base: _483, index: ivtmp.446_748, offset: 32B], tmp871
 6446      7C0760
 6447 2737 C4A3F916 		vpextrq	QWORD PTR 112[rdi+r8], xmm7, 1	# MEM[base: _483, index: ivtmp.446_748, offset: 48B], tmp87
 6447      7C077001 
 701:sieve_extend.c ****         source_word += 2;
 6448              		.loc 1 701 9 is_stmt 1 view .LVU2199
 702:sieve_extend.c ****         distance += 2;
 6449              		.loc 1 702 9 view .LVU2200
 703:sieve_extend.c ****     }
 6450              		.loc 1 703 9 view .LVU2201
 703:sieve_extend.c ****     }
 6451              		.loc 1 703 9 is_stmt 0 view .LVU2202
 6452              	.LBE369:
 695:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6453              		.loc 1 695 11 is_stmt 1 view .LVU2203
 6454 273f 4983E880 		sub	r8, -128	# ivtmp.446,
GAS LISTING /tmp/ccLUVin9.s 			page 181


 6455 2743 4D39CE   		cmp	r14, r9	# bnd.384, ivtmp.444
 6456 2746 0F87C4FE 		ja	.L515	#,
 6456      FFFF
 6457              	.L659:
 695:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6458              		.loc 1 695 11 is_stmt 0 view .LVU2204
 6459 274c 49C1E603 		sal	r14, 3	# _433,
 6460 2750 4B8D0C34 		lea	rcx, [r12+r14]	# tmp.386,
 6461 2754 4B8D4435 		lea	rax, 0[r13+r14]	# tmp.387,
 6461      00
 6462              	.LVL279:
 6463              	.LBB370:
 696:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6464              		.loc 1 696 9 is_stmt 1 view .LVU2205
 6465              	# sieve_extend.c:696:         bitword_t source0 = bitarray[source_word  ];
 696:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6466              		.loc 1 696 37 is_stmt 0 view .LVU2206
 6467 2759 4C8D1CCD 		lea	r11, 0[0+rcx*8]	# _639,
 6467      00000000 
 6468              	.LVL280:
 697:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6469              		.loc 1 697 9 is_stmt 1 view .LVU2207
 6470              	# sieve_extend.c:698:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6471              		.loc 1 698 42 is_stmt 0 view .LVU2208
 6472 2761 C4E283F7 		shrx	rsi, QWORD PTR [rbx+rcx*8], r15	# tmp656, *_640, shift
 6472      34CB
 6473              	# sieve_extend.c:697:         bitword_t source1 = bitarray[source_word+1];
 697:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6474              		.loc 1 697 19 view .LVU2209
 6475 2767 4A8B7C1B 		mov	rdi, QWORD PTR 8[rbx+r11]	# source1, *_644
 6475      08
 6476              	.LVL281:
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6477              		.loc 1 698 9 is_stmt 1 view .LVU2210
 6478              	# sieve_extend.c:698:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6479              		.loc 1 698 63 is_stmt 0 view .LVU2211
 6480 276c C462E9F7 		shlx	r10, rdi, rdx	# tmp658, source1, shift_flipped
 6480      D7
 6481              	# sieve_extend.c:698:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6482              		.loc 1 698 52 view .LVU2212
 6483 2771 4C09D6   		or	rsi, r10	# tmp659, tmp658
 6484              	# sieve_extend.c:700:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 700:sieve_extend.c ****         copy_word += 2;
 6485              		.loc 1 700 42 view .LVU2213
 6486 2774 C4E283F7 		shrx	rdi, rdi, r15	# tmp662, source1, shift
 6486      FF
 6487              	.LVL282:
 6488              	# sieve_extend.c:698:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6489              		.loc 1 698 52 view .LVU2214
 6490 2779 488934C3 		mov	QWORD PTR [rbx+rax*8], rsi	# *_649, tmp659
 6491              	.LVL283:
 699:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6492              		.loc 1 699 9 is_stmt 1 view .LVU2215
GAS LISTING /tmp/ccLUVin9.s 			page 182


 6493              	# sieve_extend.c:699:         bitword_t source2 = bitarray[source_word+2];
 699:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6494              		.loc 1 699 37 is_stmt 0 view .LVU2216
 6495 277d 4C8D4902 		lea	r9, 2[rcx]	# _652,
 6496              	.LVL284:
 700:sieve_extend.c ****         copy_word += 2;
 6497              		.loc 1 700 9 is_stmt 1 view .LVU2217
 6498              	# sieve_extend.c:700:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 700:sieve_extend.c ****         copy_word += 2;
 6499              		.loc 1 700 63 is_stmt 0 view .LVU2218
 6500 2781 4E8B441B 		mov	r8, QWORD PTR 16[rbx+r11]	# *_654, *_654
 6500      10
 6501 2786 C442E9F7 		shlx	r11, r8, rdx	# tmp660, *_654, shift_flipped
 6501      D8
 6502              	.LVL285:
 6503              	# sieve_extend.c:700:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 700:sieve_extend.c ****         copy_word += 2;
 6504              		.loc 1 700 52 view .LVU2219
 6505 278b 4C09DF   		or	rdi, r11	# tmp663, tmp660
 6506              	# sieve_extend.c:701:         copy_word += 2;
 701:sieve_extend.c ****         source_word += 2;
 6507              		.loc 1 701 19 view .LVU2220
 6508 278e 4C8D4002 		lea	r8, 2[rax]	# copy_word,
 6509              	.LVL286:
 701:sieve_extend.c ****         source_word += 2;
 6510              		.loc 1 701 19 view .LVU2221
 6511              	.LBE370:
 6512              	# sieve_extend.c:695:     while (copy_word < fast_loop_stop_word) {
 695:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6513              		.loc 1 695 11 view .LVU2222
 6514 2792 4C8B5C24 		mov	r11, QWORD PTR 48[rsp]	# fast_loop_stop_word, %sfp
 6514      30
 6515              	.LBB371:
 6516              	# sieve_extend.c:703:         distance += 2;
 703:sieve_extend.c ****     }
 6517              		.loc 1 703 18 view .LVU2223
 6518 2797 4D8D5602 		lea	r10, 2[r14]	# distance,
 6519              	# sieve_extend.c:700:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 700:sieve_extend.c ****         copy_word += 2;
 6520              		.loc 1 700 52 view .LVU2224
 6521 279b 48897CC3 		mov	QWORD PTR 8[rbx+rax*8], rdi	# *_660, tmp663
 6521      08
 6522              	.LVL287:
 701:sieve_extend.c ****         source_word += 2;
 6523              		.loc 1 701 9 is_stmt 1 view .LVU2225
 702:sieve_extend.c ****         distance += 2;
 6524              		.loc 1 702 9 view .LVU2226
 703:sieve_extend.c ****     }
 6525              		.loc 1 703 9 view .LVU2227
 703:sieve_extend.c ****     }
 6526              		.loc 1 703 9 is_stmt 0 view .LVU2228
 6527              	.LBE371:
 695:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6528              		.loc 1 695 11 is_stmt 1 view .LVU2229
 6529 27a0 4D39C3   		cmp	r11, r8	# fast_loop_stop_word, copy_word
 6530 27a3 0F86D500 		jbe	.L518	#,
 6530      0000
GAS LISTING /tmp/ccLUVin9.s 			page 183


 6531              	.LBB372:
 696:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6532              		.loc 1 696 9 view .LVU2230
 6533              	# sieve_extend.c:698:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6534              		.loc 1 698 42 is_stmt 0 view .LVU2231
 6535 27a9 4A8B34CB 		mov	rsi, QWORD PTR [rbx+r9*8]	# *_670, *_670
 6536              	# sieve_extend.c:696:         bitword_t source0 = bitarray[source_word  ];
 696:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6537              		.loc 1 696 37 view .LVU2232
 6538 27ad 4E8D14CD 		lea	r10, 0[0+r9*8]	# _669,
 6538      00000000 
 6539              	.LVL288:
 697:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6540              		.loc 1 697 9 is_stmt 1 view .LVU2233
 6541              	# sieve_extend.c:697:         bitword_t source1 = bitarray[source_word+1];
 697:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6542              		.loc 1 697 19 is_stmt 0 view .LVU2234
 6543 27b5 4A8B7C13 		mov	rdi, QWORD PTR 8[rbx+r10]	# source1, *_674
 6543      08
 6544              	.LVL289:
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6545              		.loc 1 698 9 is_stmt 1 view .LVU2235
 6546              	# sieve_extend.c:698:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6547              		.loc 1 698 42 is_stmt 0 view .LVU2236
 6548 27ba C4E283F7 		shrx	rsi, rsi, r15	# tmp664, *_670, shift
 6548      F6
 6549              	.LVL290:
 6550              	# sieve_extend.c:698:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6551              		.loc 1 698 63 view .LVU2237
 6552 27bf C462E9F7 		shlx	r9, rdi, rdx	# tmp666, source1, shift_flipped
 6552      CF
 6553              	.LVL291:
 6554              	# sieve_extend.c:698:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6555              		.loc 1 698 52 view .LVU2238
 6556 27c4 4C09CE   		or	rsi, r9	# tmp667, tmp666
 6557 27c7 4A8934C3 		mov	QWORD PTR [rbx+r8*8], rsi	# *_679, tmp667
 6558              	.LVL292:
 699:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6559              		.loc 1 699 9 is_stmt 1 view .LVU2239
 6560              	# sieve_extend.c:700:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 700:sieve_extend.c ****         copy_word += 2;
 6561              		.loc 1 700 42 is_stmt 0 view .LVU2240
 6562 27cb C4E283F7 		shrx	rdi, rdi, r15	# tmp670, source1, shift
 6562      FF
 6563              	.LVL293:
 6564              	# sieve_extend.c:700:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 700:sieve_extend.c ****         copy_word += 2;
 6565              		.loc 1 700 63 view .LVU2241
 6566 27d0 4E8B5413 		mov	r10, QWORD PTR 16[rbx+r10]	# *_684, *_684
 6566      10
 6567 27d5 C4C2E9F7 		shlx	rsi, r10, rdx	# tmp668, *_684, shift_flipped
 6567      F2
 6568              	# sieve_extend.c:700:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
GAS LISTING /tmp/ccLUVin9.s 			page 184


 700:sieve_extend.c ****         copy_word += 2;
 6569              		.loc 1 700 52 view .LVU2242
 6570 27da 4809F7   		or	rdi, rsi	# tmp671, tmp668
 6571              	# sieve_extend.c:699:         bitword_t source2 = bitarray[source_word+2];
 699:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6572              		.loc 1 699 37 view .LVU2243
 6573 27dd 4C8D4904 		lea	r9, 4[rcx]	# _682,
 700:sieve_extend.c ****         copy_word += 2;
 6574              		.loc 1 700 9 is_stmt 1 view .LVU2244
 6575              	# sieve_extend.c:700:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 700:sieve_extend.c ****         copy_word += 2;
 6576              		.loc 1 700 52 is_stmt 0 view .LVU2245
 6577 27e1 4A897CC3 		mov	QWORD PTR 8[rbx+r8*8], rdi	# *_690, tmp671
 6577      08
 701:sieve_extend.c ****         source_word += 2;
 6578              		.loc 1 701 9 is_stmt 1 view .LVU2246
 6579              	# sieve_extend.c:701:         copy_word += 2;
 701:sieve_extend.c ****         source_word += 2;
 6580              		.loc 1 701 19 is_stmt 0 view .LVU2247
 6581 27e6 4C8D4004 		lea	r8, 4[rax]	# copy_word,
 6582              	.LVL294:
 702:sieve_extend.c ****         distance += 2;
 6583              		.loc 1 702 9 is_stmt 1 view .LVU2248
 703:sieve_extend.c ****     }
 6584              		.loc 1 703 9 view .LVU2249
 703:sieve_extend.c ****     }
 6585              		.loc 1 703 9 is_stmt 0 view .LVU2250
 6586              	.LBE372:
 6587              	# sieve_extend.c:695:     while (copy_word < fast_loop_stop_word) {
 695:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6588              		.loc 1 695 11 view .LVU2251
 6589 27ea 4D39C3   		cmp	r11, r8	# fast_loop_stop_word, copy_word
 6590              	.LBB373:
 6591              	# sieve_extend.c:703:         distance += 2;
 703:sieve_extend.c ****     }
 6592              		.loc 1 703 18 view .LVU2252
 6593 27ed 4D8D5604 		lea	r10, 4[r14]	# distance,
 6594              	.LVL295:
 703:sieve_extend.c ****     }
 6595              		.loc 1 703 18 view .LVU2253
 6596              	.LBE373:
 695:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6597              		.loc 1 695 11 is_stmt 1 view .LVU2254
 6598 27f1 0F868700 		jbe	.L518	#,
 6598      0000
 6599              	.LBB374:
 696:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6600              		.loc 1 696 9 view .LVU2255
 6601              	# sieve_extend.c:696:         bitword_t source0 = bitarray[source_word  ];
 696:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6602              		.loc 1 696 37 is_stmt 0 view .LVU2256
 6603 27f7 4E8D14CD 		lea	r10, 0[0+r9*8]	# _699,
 6603      00000000 
 6604              	.LVL296:
 697:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6605              		.loc 1 697 9 is_stmt 1 view .LVU2257
 6606              	# sieve_extend.c:701:         copy_word += 2;
GAS LISTING /tmp/ccLUVin9.s 			page 185


 701:sieve_extend.c ****         source_word += 2;
 6607              		.loc 1 701 19 is_stmt 0 view .LVU2258
 6608 27ff 4883C006 		add	rax, 6	# copy_word,
 6609              	# sieve_extend.c:697:         bitword_t source1 = bitarray[source_word+1];
 697:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6610              		.loc 1 697 19 view .LVU2259
 6611 2803 4A8B7C13 		mov	rdi, QWORD PTR 8[rbx+r10]	# source1, *_704
 6611      08
 6612              	.LVL297:
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6613              		.loc 1 698 9 is_stmt 1 view .LVU2260
 6614              	# sieve_extend.c:699:         bitword_t source2 = bitarray[source_word+2];
 699:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6615              		.loc 1 699 37 is_stmt 0 view .LVU2261
 6616 2808 4883C106 		add	rcx, 6	# _712,
 6617              	# sieve_extend.c:698:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6618              		.loc 1 698 42 view .LVU2262
 6619 280c 4E8B0CCB 		mov	r9, QWORD PTR [rbx+r9*8]	# *_700, *_700
 6620              	.LVL298:
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6621              		.loc 1 698 42 view .LVU2263
 6622 2810 C4C283F7 		shrx	rsi, r9, r15	# tmp672, *_700, shift
 6622      F1
 6623              	# sieve_extend.c:698:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6624              		.loc 1 698 63 view .LVU2264
 6625 2815 C462E9F7 		shlx	r9, rdi, rdx	# tmp674, source1, shift_flipped
 6625      CF
 6626              	.LVL299:
 6627              	# sieve_extend.c:698:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6628              		.loc 1 698 52 view .LVU2265
 6629 281a 4C09CE   		or	rsi, r9	# tmp675, tmp674
 6630 281d 4A8934C3 		mov	QWORD PTR [rbx+r8*8], rsi	# *_709, tmp675
 6631              	.LVL300:
 699:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6632              		.loc 1 699 9 is_stmt 1 view .LVU2266
 700:sieve_extend.c ****         copy_word += 2;
 6633              		.loc 1 700 9 view .LVU2267
 6634              	# sieve_extend.c:700:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 700:sieve_extend.c ****         copy_word += 2;
 6635              		.loc 1 700 42 is_stmt 0 view .LVU2268
 6636 2821 C4E283F7 		shrx	rdi, rdi, r15	# tmp678, source1, shift
 6636      FF
 6637              	.LVL301:
 6638              	# sieve_extend.c:700:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 700:sieve_extend.c ****         copy_word += 2;
 6639              		.loc 1 700 63 view .LVU2269
 6640 2826 4E8B5413 		mov	r10, QWORD PTR 16[rbx+r10]	# *_714, *_714
 6640      10
 6641              	.LVL302:
 700:sieve_extend.c ****         copy_word += 2;
 6642              		.loc 1 700 63 view .LVU2270
 6643 282b C4C2E9F7 		shlx	rsi, r10, rdx	# tmp676, *_714, shift_flipped
 6643      F2
 6644              	# sieve_extend.c:700:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
GAS LISTING /tmp/ccLUVin9.s 			page 186


 700:sieve_extend.c ****         copy_word += 2;
 6645              		.loc 1 700 52 view .LVU2271
 6646 2830 4809F7   		or	rdi, rsi	# tmp679, tmp676
 6647              	.LBE374:
 6648              	# sieve_extend.c:695:     while (copy_word < fast_loop_stop_word) {
 695:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6649              		.loc 1 695 11 view .LVU2272
 6650 2833 4939C3   		cmp	r11, rax	# fast_loop_stop_word, copy_word
 6651              	.LBB375:
 6652              	# sieve_extend.c:700:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 700:sieve_extend.c ****         copy_word += 2;
 6653              		.loc 1 700 52 view .LVU2273
 6654 2836 4A897CC3 		mov	QWORD PTR 8[rbx+r8*8], rdi	# *_720, tmp679
 6654      08
 701:sieve_extend.c ****         source_word += 2;
 6655              		.loc 1 701 9 is_stmt 1 view .LVU2274
 6656              	.LVL303:
 702:sieve_extend.c ****         distance += 2;
 6657              		.loc 1 702 9 view .LVU2275
 703:sieve_extend.c ****     }
 6658              		.loc 1 703 9 view .LVU2276
 6659              	# sieve_extend.c:703:         distance += 2;
 703:sieve_extend.c ****     }
 6660              		.loc 1 703 18 is_stmt 0 view .LVU2277
 6661 283b 4D8D5606 		lea	r10, 6[r14]	# distance,
 6662              	.LVL304:
 703:sieve_extend.c ****     }
 6663              		.loc 1 703 18 view .LVU2278
 6664              	.LBE375:
 695:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6665              		.loc 1 695 11 is_stmt 1 view .LVU2279
 6666 283f 763D     		jbe	.L518	#,
 6667              	.LBB376:
 696:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6668              		.loc 1 696 9 view .LVU2280
 6669              	# sieve_extend.c:696:         bitword_t source0 = bitarray[source_word  ];
 696:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6670              		.loc 1 696 37 is_stmt 0 view .LVU2281
 6671 2841 4C8D1CCD 		lea	r11, 0[0+rcx*8]	# _402,
 6671      00000000 
 6672              	.LVL305:
 697:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6673              		.loc 1 697 9 is_stmt 1 view .LVU2282
 6674              	# sieve_extend.c:697:         bitword_t source1 = bitarray[source_word+1];
 697:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6675              		.loc 1 697 19 is_stmt 0 view .LVU2283
 6676 2849 4E8B4C1B 		mov	r9, QWORD PTR 8[rbx+r11]	# source1, *_407
 6676      08
 6677              	.LVL306:
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6678              		.loc 1 698 9 is_stmt 1 view .LVU2284
 6679              	# sieve_extend.c:698:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6680              		.loc 1 698 63 is_stmt 0 view .LVU2285
 6681 284e C442E9F7 		shlx	r8, r9, rdx	# tmp682, source1, shift_flipped
 6681      C1
 6682              	# sieve_extend.c:698:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
GAS LISTING /tmp/ccLUVin9.s 			page 187


 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6683              		.loc 1 698 42 view .LVU2286
 6684 2853 488B0CCB 		mov	rcx, QWORD PTR [rbx+rcx*8]	# *_403, *_403
 6685              	.LVL307:
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6686              		.loc 1 698 42 view .LVU2287
 6687 2857 C46283F7 		shrx	r10, rcx, r15	# tmp680, *_403, shift
 6687      D1
 6688              	.LVL308:
 6689              	# sieve_extend.c:698:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6690              		.loc 1 698 52 view .LVU2288
 6691 285c 4D09C2   		or	r10, r8	# tmp683, tmp682
 6692 285f 4C8914C3 		mov	QWORD PTR [rbx+rax*8], r10	# *_412, tmp683
 699:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6693              		.loc 1 699 9 is_stmt 1 view .LVU2289
 6694              	.LVL309:
 700:sieve_extend.c ****         copy_word += 2;
 6695              		.loc 1 700 9 view .LVU2290
 6696              	# sieve_extend.c:703:         distance += 2;
 703:sieve_extend.c ****     }
 6697              		.loc 1 703 18 is_stmt 0 view .LVU2291
 6698 2863 4D8D5608 		lea	r10, 8[r14]	# distance,
 6699              	# sieve_extend.c:700:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 700:sieve_extend.c ****         copy_word += 2;
 6700              		.loc 1 700 63 view .LVU2292
 6701 2867 4A8B741B 		mov	rsi, QWORD PTR 16[rbx+r11]	# *_417, *_417
 6701      10
 6702              	# sieve_extend.c:700:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 700:sieve_extend.c ****         copy_word += 2;
 6703              		.loc 1 700 42 view .LVU2293
 6704 286c C44283F7 		shrx	r11, r9, r15	# tmp686, source1, shift
 6704      D9
 6705              	.LVL310:
 6706              	# sieve_extend.c:700:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 700:sieve_extend.c ****         copy_word += 2;
 6707              		.loc 1 700 63 view .LVU2294
 6708 2871 C4E2E9F7 		shlx	rdi, rsi, rdx	# tmp684, *_417, shift_flipped
 6708      FE
 6709              	# sieve_extend.c:700:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 700:sieve_extend.c ****         copy_word += 2;
 6710              		.loc 1 700 52 view .LVU2295
 6711 2876 4909FB   		or	r11, rdi	# tmp687, tmp684
 6712 2879 4C895CC3 		mov	QWORD PTR 8[rbx+rax*8], r11	# *_423, tmp687
 6712      08
 701:sieve_extend.c ****         source_word += 2;
 6713              		.loc 1 701 9 is_stmt 1 view .LVU2296
 702:sieve_extend.c ****         distance += 2;
 6714              		.loc 1 702 9 view .LVU2297
 703:sieve_extend.c ****     }
 6715              		.loc 1 703 9 view .LVU2298
 6716              	.LVL311:
 703:sieve_extend.c ****     }
 6717              		.loc 1 703 9 is_stmt 0 view .LVU2299
 6718              	.LBE376:
 695:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6719              		.loc 1 695 11 is_stmt 1 view .LVU2300
GAS LISTING /tmp/ccLUVin9.s 			page 188


 6720              	.L518:
 695:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6721              		.loc 1 695 11 is_stmt 0 view .LVU2301
 6722 287e 4D01D4   		add	r12, r10	# tmp.369, distance
 6723 2881 4D01D5   		add	r13, r10	# tmp.370, distance
 6724              	.LVL312:
 6725              	.L513:
 705:sieve_extend.c **** }
 6726              		.loc 1 705 5 is_stmt 1 view .LVU2302
 705:sieve_extend.c **** }
 6727              		.loc 1 705 5 is_stmt 0 view .LVU2303
 6728              	.LBE387:
 6729              	.LBE390:
 798:sieve_extend.c ****     copy_word += distance;
 6730              		.loc 1 798 5 is_stmt 1 view .LVU2304
 799:sieve_extend.c **** 
 6731              		.loc 1 799 5 view .LVU2305
 801:sieve_extend.c **** 
 6732              		.loc 1 801 6 view .LVU2306
 804:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6733              		.loc 1 804 11 view .LVU2307
 6734              	# sieve_extend.c:804:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 804:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6735              		.loc 1 804 5 is_stmt 0 view .LVU2308
 6736 2884 4C8B5C24 		mov	r11, QWORD PTR 80[rsp]	# aligned_copy_word, %sfp
 6736      50
 6737 2889 4D39EB   		cmp	r11, r13	# aligned_copy_word, tmp.370
 6738 288c 0F82BE0A 		jb	.L535	#,
 6738      0000
 6739 2892 4E8D34E5 		lea	r14, 0[0+r12*8]	# _3,
 6739      00000000 
 6740 289a 498D4B01 		lea	rcx, 1[r11]	# tmp.357,
 6741 289e 4A8D3C33 		lea	rdi, [rbx+r14]	# vectp.364,
 6742 28a2 4989C8   		mov	r8, rcx	# niters.363, tmp.357
 6743 28a5 4889F8   		mov	rax, rdi	# tmp698, vectp.364
 6744 28a8 4D29EB   		sub	r11, r13	# tmp700, tmp.370
 6745 28ab 48C1E803 		shr	rax, 3	# tmp698,
 6746 28af 4D29E8   		sub	r8, r13	# niters.363, tmp.370
 6747 28b2 48F7D8   		neg	rax	# tmp699
 6748 28b5 41B90500 		mov	r9d, 5	# tmp702,
 6748      0000
 6749 28bb 83E003   		and	eax, 3	# prolog_loop_niters.365,
 6750 28be 488D7003 		lea	rsi, 3[rax]	# tmp701,
 6751 28c2 4883FE05 		cmp	rsi, 5	# tmp701,
 6752 28c6 490F42F1 		cmovb	rsi, r9	# tmp701,, tmp921, tmp702
 6753 28ca 4939F3   		cmp	r11, rsi	# tmp700, tmp921
 6754 28cd 0F823F03 		jb	.L520	#,
 6754      0000
 6755 28d3 4885C0   		test	rax, rax	# prolog_loop_niters.365
 6756 28d6 0F844408 		je	.L536	#,
 6756      0000
 6757              	.LVL313:
 805:sieve_extend.c ****     }
 6758              		.loc 1 805 9 is_stmt 1 view .LVU2309
 6759              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 6760              		.loc 1 805 94 is_stmt 0 view .LVU2310
GAS LISTING /tmp/ccLUVin9.s 			page 189


 6761 28dc 4E8B5C33 		mov	r11, QWORD PTR 8[rbx+r14]	# *_607, *_607
 6761      08
 6762              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 6763              		.loc 1 805 77 view .LVU2311
 6764 28e1 498D7424 		lea	rsi, 1[r12]	# tmp788,
 6764      01
 6765              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 6766              		.loc 1 805 56 view .LVU2312
 6767 28e6 488B3F   		mov	rdi, QWORD PTR [rdi]	# MEM[(uint64_t *)vectp.364_27], MEM[(uint64_t *)vectp.364_27]
 6768              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 6769              		.loc 1 805 94 view .LVU2313
 6770 28e9 C442E9F7 		shlx	r9, r11, rdx	# tmp703, *_607, shift_flipped
 6770      CB
 6771              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 6772              		.loc 1 805 56 view .LVU2314
 6773 28ee C46283F7 		shrx	r14, rdi, r15	# tmp705, MEM[(uint64_t *)vectp.364_27], shift
 6773      F7
 6774              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 6775              		.loc 1 805 66 view .LVU2315
 6776 28f3 4D09F1   		or	r9, r14	# tmp707, tmp705
 6777 28f6 4883F801 		cmp	rax, 1	# prolog_loop_niters.365,
 6778              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 6779              		.loc 1 805 77 view .LVU2316
 6780 28fa 4989F2   		mov	r10, rsi	# source_word, tmp788
 6781              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 6782              		.loc 1 805 66 view .LVU2317
 6783 28fd 4E890CEB 		mov	QWORD PTR [rbx+r13*8], r9	# *_611, tmp707
 804:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6784              		.loc 1 804 43 is_stmt 1 view .LVU2318
 6785              	# sieve_extend.c:804:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 804:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6786              		.loc 1 804 52 is_stmt 0 view .LVU2319
 6787 2901 4D8D7501 		lea	r14, 1[r13]	# copy_word,
 6788              	.LVL314:
 804:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6789              		.loc 1 804 11 is_stmt 1 view .LVU2320
 6790 2905 7456     		je	.L521	#,
 805:sieve_extend.c ****     }
 6791              		.loc 1 805 9 view .LVU2321
 6792              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 6793              		.loc 1 805 40 is_stmt 0 view .LVU2322
 6794 2907 4C8D1CF5 		lea	r11, 0[0+rsi*8]	# _620,
 6794      00000000 
 6795              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 6796              		.loc 1 805 94 view .LVU2323
 6797 290f C422E9F7 		shlx	r9, QWORD PTR 8[rbx+r11], rdx	# tmp708, *_626, shift_flipped
 6797      4C1B08
 6798              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
GAS LISTING /tmp/ccLUVin9.s 			page 190


 805:sieve_extend.c ****     }
 6799              		.loc 1 805 56 view .LVU2324
 6800 2916 4A8B3C1B 		mov	rdi, QWORD PTR [rbx+r11]	# *_621, *_621
 6801 291a C46283F7 		shrx	r11, rdi, r15	# tmp710, *_621, shift
 6801      DF
 6802              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 6803              		.loc 1 805 66 view .LVU2325
 6804 291f 4D09D9   		or	r9, r11	# tmp712, tmp710
 6805 2922 4883F803 		cmp	rax, 3	# prolog_loop_niters.365,
 6806 2926 4E890CF3 		mov	QWORD PTR [rbx+r14*8], r9	# *_630, tmp712
 804:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6807              		.loc 1 804 43 is_stmt 1 view .LVU2326
 6808              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 6809              		.loc 1 805 77 is_stmt 0 view .LVU2327
 6810 292a 4D8D5424 		lea	r10, 2[r12]	# source_word,
 6810      02
 6811              	# sieve_extend.c:804:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 804:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6812              		.loc 1 804 52 view .LVU2328
 6813 292f 4D8D7502 		lea	r14, 2[r13]	# copy_word,
 6814              	.LVL315:
 804:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6815              		.loc 1 804 11 is_stmt 1 view .LVU2329
 6816 2933 7528     		jne	.L521	#,
 805:sieve_extend.c ****     }
 6817              		.loc 1 805 9 view .LVU2330
 6818              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 6819              		.loc 1 805 40 is_stmt 0 view .LVU2331
 6820 2935 4E8D0CD5 		lea	r9, 0[0+r10*8]	# _205,
 6820      00000000 
 6821              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 6822              		.loc 1 805 94 view .LVU2332
 6823 293d C4A2E9F7 		shlx	rdi, QWORD PTR 8[rbx+r9], rdx	# tmp713, *_211, shift_flipped
 6823      7C0B08
 6824              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 6825              		.loc 1 805 56 view .LVU2333
 6826 2944 4E8B1C0B 		mov	r11, QWORD PTR [rbx+r9]	# *_206, *_206
 6827 2948 C44283F7 		shrx	r9, r11, r15	# tmp715, *_206, shift
 6827      CB
 6828              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 6829              		.loc 1 805 66 view .LVU2334
 6830 294d 4C09CF   		or	rdi, r9	# tmp717, tmp715
 6831              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 6832              		.loc 1 805 77 view .LVU2335
 6833 2950 4D8D5424 		lea	r10, 3[r12]	# source_word,
 6833      03
 6834              	.LVL316:
 6835              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 6836              		.loc 1 805 66 view .LVU2336
GAS LISTING /tmp/ccLUVin9.s 			page 191


 6837 2955 4A893CF3 		mov	QWORD PTR [rbx+r14*8], rdi	# *_215, tmp717
 804:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6838              		.loc 1 804 43 is_stmt 1 view .LVU2337
 6839              	# sieve_extend.c:804:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 804:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6840              		.loc 1 804 52 is_stmt 0 view .LVU2338
 6841 2959 4D8D7503 		lea	r14, 3[r13]	# copy_word,
 6842              	.LVL317:
 804:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6843              		.loc 1 804 11 is_stmt 1 view .LVU2339
 6844              	.L521:
 804:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6845              		.loc 1 804 11 is_stmt 0 view .LVU2340
 6846 295d 4929C0   		sub	r8, rax	# niters.366, prolog_loop_niters.365
 6847 2960 4801C6   		add	rsi, rax	# tmp721, prolog_loop_niters.365
 6848 2963 4E8D2420 		lea	r12, [rax+r12]	# tmp718,
 6849 2967 4C01E8   		add	rax, r13	# tmp723, tmp.370
 6850 296a 4D89C5   		mov	r13, r8	# bnd.367, niters.366
 6851 296d 488D3CF3 		lea	rdi, [rbx+rsi*8]	# vectp.376,
 6852 2971 49C1ED02 		shr	r13, 2	# bnd.367,
 6853 2975 4C8D0CC3 		lea	r9, [rbx+rax*8]	# vectp.381,
 6854 2979 49C1E505 		sal	r13, 5	# _733,
 6855              	# sieve_extend.c:798:     source_word += distance;
 798:sieve_extend.c ****     copy_word += distance;
 6856              		.loc 1 798 17 view .LVU2341
 6857 297d 31C0     		xor	eax, eax	# ivtmp.422
 6858 297f 498D75E0 		lea	rsi, -32[r13]	# tmp799,
 6859 2983 4E8D1CE3 		lea	r11, [rbx+r12*8]	# vectp.372,
 6860 2987 C5796E54 		vmovd	xmm10, DWORD PTR 72[rsp]	# _12, %sfp
 6860      2448
 6861 298d 48C1EE05 		shr	rsi, 5	# tmp797,
 6862 2991 C5796E5C 		vmovd	xmm11, DWORD PTR 64[rsp]	# _18, %sfp
 6862      2440
 6863 2997 4883C601 		add	rsi, 1	# tmp800,
 6864 299b 83E607   		and	esi, 7	# tmp801,
 6865 299e 0F841201 		je	.L523	#,
 6865      0000
 6866 29a4 4883FE01 		cmp	rsi, 1	# tmp801,
 6867 29a8 0F84DB00 		je	.L616	#,
 6867      0000
 6868 29ae 4883FE02 		cmp	rsi, 2	# tmp801,
 6869 29b2 0F84AE00 		je	.L617	#,
 6869      0000
 6870 29b8 4883FE03 		cmp	rsi, 3	# tmp801,
 6871 29bc 0F848000 		je	.L618	#,
 6871      0000
 6872 29c2 4883FE04 		cmp	rsi, 4	# tmp801,
 6873 29c6 7456     		je	.L619	#,
 6874 29c8 4883FE05 		cmp	rsi, 5	# tmp801,
 6875 29cc 742D     		je	.L620	#,
 6876 29ce 4883FE06 		cmp	rsi, 6	# tmp801,
 6877 29d2 0F856807 		jne	.L688	#,
 6877      0000
 6878              	.L621:
 805:sieve_extend.c ****     }
 6879              		.loc 1 805 9 is_stmt 1 view .LVU2342
 6880              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
GAS LISTING /tmp/ccLUVin9.s 			page 192


 805:sieve_extend.c ****     }
 6881              		.loc 1 805 56 is_stmt 0 view .LVU2343
 6882 29d8 C4417D6F 		vmovdqa	ymm13, YMMWORD PTR [r11+rax]	# tmp1262, MEM[base: vectp.372_257, index: ivtmp.422_731, off
 6882      2C03
 6883              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 6884              		.loc 1 805 94 view .LVU2344
 6885 29de C57E6F3C 		vmovdqu	ymm15, YMMWORD PTR [rdi+rax]	# tmp1263, MEM[base: vectp.376_264, index: ivtmp.422_731, off
 6885      07
 6886              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 6887              		.loc 1 805 56 view .LVU2345
 6888 29e3 C44115D3 		vpsrlq	ymm14, ymm13, xmm10	# vect__38.374, tmp1262, _12
 6888      F2
 6889              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 6890              		.loc 1 805 94 view .LVU2346
 6891 29e8 C4C105F3 		vpsllq	ymm1, ymm15, xmm11	# vect__43.378, tmp1263, _18
 6891      CB
 6892              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 6893              		.loc 1 805 66 view .LVU2347
 6894 29ed C50DEBC1 		vpor	ymm8, ymm14, ymm1	# vect__46.379, vect__38.374, vect__43.378
 6895              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 6896              		.loc 1 805 29 view .LVU2348
 6897 29f1 C4417E7F 		vmovdqu	YMMWORD PTR [r9+rax], ymm8	# MEM[base: vectp.381_273, index: ivtmp.422_731, offset: 0B], v
 6897      0401
 804:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6898              		.loc 1 804 43 is_stmt 1 view .LVU2349
 804:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6899              		.loc 1 804 11 view .LVU2350
 6900 29f7 4883C020 		add	rax, 32	# ivtmp.422,
 6901              	.L620:
 805:sieve_extend.c ****     }
 6902              		.loc 1 805 9 view .LVU2351
 6903              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 6904              		.loc 1 805 56 is_stmt 0 view .LVU2352
 6905 29fb C4C17D6F 		vmovdqa	ymm0, YMMWORD PTR [r11+rax]	# tmp1264, MEM[base: vectp.372_257, index: ivtmp.422_731, offs
 6905      0403
 6906              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 6907              		.loc 1 805 94 view .LVU2353
 6908 2a01 C57E6F0C 		vmovdqu	ymm9, YMMWORD PTR [rdi+rax]	# tmp1265, MEM[base: vectp.376_264, index: ivtmp.422_731, offs
 6908      07
 6909              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 6910              		.loc 1 805 56 view .LVU2354
 6911 2a06 C4C17DD3 		vpsrlq	ymm5, ymm0, xmm10	# vect__38.374, tmp1264, _12
 6911      EA
 6912              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 6913              		.loc 1 805 94 view .LVU2355
 6914 2a0b C4C135F3 		vpsllq	ymm7, ymm9, xmm11	# vect__43.378, tmp1265, _18
 6914      FB
 6915              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
GAS LISTING /tmp/ccLUVin9.s 			page 193


 805:sieve_extend.c ****     }
 6916              		.loc 1 805 66 view .LVU2356
 6917 2a10 C5D5EBDF 		vpor	ymm3, ymm5, ymm7	# vect__46.379, vect__38.374, vect__43.378
 6918              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 6919              		.loc 1 805 29 view .LVU2357
 6920 2a14 C4C17E7F 		vmovdqu	YMMWORD PTR [r9+rax], ymm3	# MEM[base: vectp.381_273, index: ivtmp.422_731, offset: 0B], v
 6920      1C01
 804:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6921              		.loc 1 804 43 is_stmt 1 view .LVU2358
 804:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6922              		.loc 1 804 11 view .LVU2359
 6923 2a1a 4883C020 		add	rax, 32	# ivtmp.422,
 6924              	.L619:
 805:sieve_extend.c ****     }
 6925              		.loc 1 805 9 view .LVU2360
 6926              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 6927              		.loc 1 805 56 is_stmt 0 view .LVU2361
 6928 2a1e C4C17D6F 		vmovdqa	ymm2, YMMWORD PTR [r11+rax]	# tmp1266, MEM[base: vectp.372_257, index: ivtmp.422_731, offs
 6928      1403
 6929              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 6930              		.loc 1 805 94 view .LVU2362
 6931 2a24 C5FE6F24 		vmovdqu	ymm4, YMMWORD PTR [rdi+rax]	# tmp1267, MEM[base: vectp.376_264, index: ivtmp.422_731, offs
 6931      07
 6932              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 6933              		.loc 1 805 56 view .LVU2363
 6934 2a29 C4C16DD3 		vpsrlq	ymm6, ymm2, xmm10	# vect__38.374, tmp1266, _12
 6934      F2
 6935              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 6936              		.loc 1 805 94 view .LVU2364
 6937 2a2e C4415DF3 		vpsllq	ymm12, ymm4, xmm11	# vect__43.378, tmp1267, _18
 6937      E3
 6938              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 6939              		.loc 1 805 66 view .LVU2365
 6940 2a33 C4414DEB 		vpor	ymm13, ymm6, ymm12	# vect__46.379, vect__38.374, vect__43.378
 6940      EC
 6941              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 6942              		.loc 1 805 29 view .LVU2366
 6943 2a38 C4417E7F 		vmovdqu	YMMWORD PTR [r9+rax], ymm13	# MEM[base: vectp.381_273, index: ivtmp.422_731, offset: 0B], 
 6943      2C01
 804:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6944              		.loc 1 804 43 is_stmt 1 view .LVU2367
 804:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6945              		.loc 1 804 11 view .LVU2368
 6946 2a3e 4883C020 		add	rax, 32	# ivtmp.422,
 6947              	.L618:
 805:sieve_extend.c ****     }
 6948              		.loc 1 805 9 view .LVU2369
 6949              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 6950              		.loc 1 805 56 is_stmt 0 view .LVU2370
GAS LISTING /tmp/ccLUVin9.s 			page 194


 6951 2a42 C4417D6F 		vmovdqa	ymm14, YMMWORD PTR [r11+rax]	# tmp1268, MEM[base: vectp.372_257, index: ivtmp.422_731, off
 6951      3403
 6952              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 6953              		.loc 1 805 94 view .LVU2371
 6954 2a48 C5FE6F0C 		vmovdqu	ymm1, YMMWORD PTR [rdi+rax]	# tmp1269, MEM[base: vectp.376_264, index: ivtmp.422_731, offs
 6954      07
 6955              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 6956              		.loc 1 805 56 view .LVU2372
 6957 2a4d C4410DD3 		vpsrlq	ymm15, ymm14, xmm10	# vect__38.374, tmp1268, _12
 6957      FA
 6958              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 6959              		.loc 1 805 94 view .LVU2373
 6960 2a52 C44175F3 		vpsllq	ymm8, ymm1, xmm11	# vect__43.378, tmp1269, _18
 6960      C3
 6961              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 6962              		.loc 1 805 66 view .LVU2374
 6963 2a57 C4C105EB 		vpor	ymm0, ymm15, ymm8	# vect__46.379, vect__38.374, vect__43.378
 6963      C0
 6964              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 6965              		.loc 1 805 29 view .LVU2375
 6966 2a5c C4C17E7F 		vmovdqu	YMMWORD PTR [r9+rax], ymm0	# MEM[base: vectp.381_273, index: ivtmp.422_731, offset: 0B], v
 6966      0401
 804:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6967              		.loc 1 804 43 is_stmt 1 view .LVU2376
 804:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6968              		.loc 1 804 11 view .LVU2377
 6969 2a62 4883C020 		add	rax, 32	# ivtmp.422,
 6970              	.L617:
 805:sieve_extend.c ****     }
 6971              		.loc 1 805 9 view .LVU2378
 6972              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 6973              		.loc 1 805 56 is_stmt 0 view .LVU2379
 6974 2a66 C4C17D6F 		vmovdqa	ymm5, YMMWORD PTR [r11+rax]	# tmp1270, MEM[base: vectp.372_257, index: ivtmp.422_731, offs
 6974      2C03
 6975              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 6976              		.loc 1 805 94 view .LVU2380
 6977 2a6c C5FE6F3C 		vmovdqu	ymm7, YMMWORD PTR [rdi+rax]	# tmp1271, MEM[base: vectp.376_264, index: ivtmp.422_731, offs
 6977      07
 6978              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 6979              		.loc 1 805 56 view .LVU2381
 6980 2a71 C44155D3 		vpsrlq	ymm9, ymm5, xmm10	# vect__38.374, tmp1270, _12
 6980      CA
 6981              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 6982              		.loc 1 805 94 view .LVU2382
 6983 2a76 C4C145F3 		vpsllq	ymm3, ymm7, xmm11	# vect__43.378, tmp1271, _18
 6983      DB
 6984              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
GAS LISTING /tmp/ccLUVin9.s 			page 195


 6985              		.loc 1 805 66 view .LVU2383
 6986 2a7b C5B5EBD3 		vpor	ymm2, ymm9, ymm3	# vect__46.379, vect__38.374, vect__43.378
 6987              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 6988              		.loc 1 805 29 view .LVU2384
 6989 2a7f C4C17E7F 		vmovdqu	YMMWORD PTR [r9+rax], ymm2	# MEM[base: vectp.381_273, index: ivtmp.422_731, offset: 0B], v
 6989      1401
 804:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6990              		.loc 1 804 43 is_stmt 1 view .LVU2385
 804:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6991              		.loc 1 804 11 view .LVU2386
 6992 2a85 4883C020 		add	rax, 32	# ivtmp.422,
 6993              	.L616:
 805:sieve_extend.c ****     }
 6994              		.loc 1 805 9 view .LVU2387
 6995              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 6996              		.loc 1 805 56 is_stmt 0 view .LVU2388
 6997 2a89 C4C17D6F 		vmovdqa	ymm6, YMMWORD PTR [r11+rax]	# tmp1272, MEM[base: vectp.372_257, index: ivtmp.422_731, offs
 6997      3403
 6998              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 6999              		.loc 1 805 94 view .LVU2389
 7000 2a8f C5FE6F24 		vmovdqu	ymm4, YMMWORD PTR [rdi+rax]	# tmp1273, MEM[base: vectp.376_264, index: ivtmp.422_731, offs
 7000      07
 7001              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7002              		.loc 1 805 56 view .LVU2390
 7003 2a94 C4414DD3 		vpsrlq	ymm12, ymm6, xmm10	# vect__38.374, tmp1272, _12
 7003      E2
 7004              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7005              		.loc 1 805 94 view .LVU2391
 7006 2a99 C4415DF3 		vpsllq	ymm13, ymm4, xmm11	# vect__43.378, tmp1273, _18
 7006      EB
 7007              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7008              		.loc 1 805 66 view .LVU2392
 7009 2a9e C4411DEB 		vpor	ymm14, ymm12, ymm13	# vect__46.379, vect__38.374, vect__43.378
 7009      F5
 7010              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7011              		.loc 1 805 29 view .LVU2393
 7012 2aa3 C4417E7F 		vmovdqu	YMMWORD PTR [r9+rax], ymm14	# MEM[base: vectp.381_273, index: ivtmp.422_731, offset: 0B], 
 7012      3401
 804:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7013              		.loc 1 804 43 is_stmt 1 view .LVU2394
 804:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7014              		.loc 1 804 11 view .LVU2395
 7015 2aa9 4883C020 		add	rax, 32	# ivtmp.422,
 7016 2aad 4C39E8   		cmp	rax, r13	# ivtmp.422, _733
 7017 2ab0 0F844401 		je	.L664	#,
 7017      0000
 7018              	.L523:
 805:sieve_extend.c ****     }
 7019              		.loc 1 805 9 discriminator 2 view .LVU2396
 7020              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
GAS LISTING /tmp/ccLUVin9.s 			page 196


 805:sieve_extend.c ****     }
 7021              		.loc 1 805 56 is_stmt 0 discriminator 2 view .LVU2397
 7022 2ab6 C4417D6F 		vmovdqa	ymm15, YMMWORD PTR [r11+rax]	# tmp1206, MEM[base: vectp.372_257, index: ivtmp.422_731, off
 7022      3C03
 7023              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7024              		.loc 1 805 94 discriminator 2 view .LVU2398
 7025 2abc C57E6F04 		vmovdqu	ymm8, YMMWORD PTR [rdi+rax]	# tmp1207, MEM[base: vectp.376_264, index: ivtmp.422_731, offs
 7025      07
 7026              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7027              		.loc 1 805 56 discriminator 2 view .LVU2399
 7028 2ac1 C4C105D3 		vpsrlq	ymm1, ymm15, xmm10	# vect__38.374, tmp1206, _12
 7028      CA
 7029              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7030              		.loc 1 805 94 discriminator 2 view .LVU2400
 7031 2ac6 C4C13DF3 		vpsllq	ymm0, ymm8, xmm11	# vect__43.378, tmp1207, _18
 7031      C3
 7032              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7033              		.loc 1 805 66 discriminator 2 view .LVU2401
 7034 2acb C5F5EBE8 		vpor	ymm5, ymm1, ymm0	# vect__46.379, vect__38.374, vect__43.378
 7035              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7036              		.loc 1 805 29 discriminator 2 view .LVU2402
 7037 2acf C4C17E7F 		vmovdqu	YMMWORD PTR [r9+rax], ymm5	# MEM[base: vectp.381_273, index: ivtmp.422_731, offset: 0B], v
 7037      2C01
 804:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7038              		.loc 1 804 43 is_stmt 1 discriminator 2 view .LVU2403
 804:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7039              		.loc 1 804 11 discriminator 2 view .LVU2404
 805:sieve_extend.c ****     }
 7040              		.loc 1 805 9 discriminator 2 view .LVU2405
 7041              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7042              		.loc 1 805 56 is_stmt 0 discriminator 2 view .LVU2406
 7043 2ad5 C4417D6F 		vmovdqa	ymm9, YMMWORD PTR 32[r11+rax]	# tmp1208, MEM[base: vectp.372_257, index: ivtmp.422_731, of
 7043      4C0320
 7044              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7045              		.loc 1 805 94 discriminator 2 view .LVU2407
 7046 2adc C5FE6F5C 		vmovdqu	ymm3, YMMWORD PTR 32[rdi+rax]	# tmp1209, MEM[base: vectp.376_264, index: ivtmp.422_731, of
 7046      0720
 7047              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7048              		.loc 1 805 56 discriminator 2 view .LVU2408
 7049 2ae2 C4C135D3 		vpsrlq	ymm7, ymm9, xmm10	# vect__38.374, tmp1208, _12
 7049      FA
 7050              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7051              		.loc 1 805 94 discriminator 2 view .LVU2409
 7052 2ae7 C4C165F3 		vpsllq	ymm2, ymm3, xmm11	# vect__43.378, tmp1209, _18
 7052      D3
 7053              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7054              		.loc 1 805 66 discriminator 2 view .LVU2410
GAS LISTING /tmp/ccLUVin9.s 			page 197


 7055 2aec C5C5EBF2 		vpor	ymm6, ymm7, ymm2	# vect__46.379, vect__38.374, vect__43.378
 7056              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7057              		.loc 1 805 29 discriminator 2 view .LVU2411
 7058 2af0 C4C17E7F 		vmovdqu	YMMWORD PTR 32[r9+rax], ymm6	# MEM[base: vectp.381_273, index: ivtmp.422_731, offset: 0B],
 7058      740120
 804:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7059              		.loc 1 804 43 is_stmt 1 discriminator 2 view .LVU2412
 804:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7060              		.loc 1 804 11 discriminator 2 view .LVU2413
 805:sieve_extend.c ****     }
 7061              		.loc 1 805 9 discriminator 2 view .LVU2414
 7062              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7063              		.loc 1 805 56 is_stmt 0 discriminator 2 view .LVU2415
 7064 2af7 C4417D6F 		vmovdqa	ymm12, YMMWORD PTR 64[r11+rax]	# tmp1210, MEM[base: vectp.372_257, index: ivtmp.422_731, o
 7064      640340
 7065              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7066              		.loc 1 805 94 discriminator 2 view .LVU2416
 7067 2afe C5FE6F64 		vmovdqu	ymm4, YMMWORD PTR 64[rdi+rax]	# tmp1211, MEM[base: vectp.376_264, index: ivtmp.422_731, of
 7067      0740
 7068              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7069              		.loc 1 805 56 discriminator 2 view .LVU2417
 7070 2b04 C4411DD3 		vpsrlq	ymm13, ymm12, xmm10	# vect__38.374, tmp1210, _12
 7070      EA
 7071              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7072              		.loc 1 805 94 discriminator 2 view .LVU2418
 7073 2b09 C4415DF3 		vpsllq	ymm14, ymm4, xmm11	# vect__43.378, tmp1211, _18
 7073      F3
 7074              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7075              		.loc 1 805 66 discriminator 2 view .LVU2419
 7076 2b0e C44115EB 		vpor	ymm15, ymm13, ymm14	# vect__46.379, vect__38.374, vect__43.378
 7076      FE
 7077              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7078              		.loc 1 805 29 discriminator 2 view .LVU2420
 7079 2b13 C4417E7F 		vmovdqu	YMMWORD PTR 64[r9+rax], ymm15	# MEM[base: vectp.381_273, index: ivtmp.422_731, offset: 0B]
 7079      7C0140
 804:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7080              		.loc 1 804 43 is_stmt 1 discriminator 2 view .LVU2421
 804:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7081              		.loc 1 804 11 discriminator 2 view .LVU2422
 805:sieve_extend.c ****     }
 7082              		.loc 1 805 9 discriminator 2 view .LVU2423
 7083              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7084              		.loc 1 805 56 is_stmt 0 discriminator 2 view .LVU2424
 7085 2b1a C4C17D6F 		vmovdqa	ymm1, YMMWORD PTR 96[r11+rax]	# tmp1212, MEM[base: vectp.372_257, index: ivtmp.422_731, of
 7085      4C0360
 7086              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7087              		.loc 1 805 94 discriminator 2 view .LVU2425
 7088 2b21 C5FE6F44 		vmovdqu	ymm0, YMMWORD PTR 96[rdi+rax]	# tmp1213, MEM[base: vectp.376_264, index: ivtmp.422_731, of
GAS LISTING /tmp/ccLUVin9.s 			page 198


 7088      0760
 7089              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7090              		.loc 1 805 56 discriminator 2 view .LVU2426
 7091 2b27 C44175D3 		vpsrlq	ymm8, ymm1, xmm10	# vect__38.374, tmp1212, _12
 7091      C2
 7092              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7093              		.loc 1 805 94 discriminator 2 view .LVU2427
 7094 2b2c C4C17DF3 		vpsllq	ymm5, ymm0, xmm11	# vect__43.378, tmp1213, _18
 7094      EB
 7095              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7096              		.loc 1 805 66 discriminator 2 view .LVU2428
 7097 2b31 C53DEBCD 		vpor	ymm9, ymm8, ymm5	# vect__46.379, vect__38.374, vect__43.378
 7098              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7099              		.loc 1 805 29 discriminator 2 view .LVU2429
 7100 2b35 C4417E7F 		vmovdqu	YMMWORD PTR 96[r9+rax], ymm9	# MEM[base: vectp.381_273, index: ivtmp.422_731, offset: 0B],
 7100      4C0160
 804:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7101              		.loc 1 804 43 is_stmt 1 discriminator 2 view .LVU2430
 804:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7102              		.loc 1 804 11 discriminator 2 view .LVU2431
 805:sieve_extend.c ****     }
 7103              		.loc 1 805 9 discriminator 2 view .LVU2432
 7104              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7105              		.loc 1 805 56 is_stmt 0 discriminator 2 view .LVU2433
 7106 2b3c C4C17D6F 		vmovdqa	ymm7, YMMWORD PTR 128[r11+rax]	# tmp1214, MEM[base: vectp.372_257, index: ivtmp.422_731, o
 7106      BC038000 
 7106      0000
 7107              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7108              		.loc 1 805 94 discriminator 2 view .LVU2434
 7109 2b46 C5FE6F9C 		vmovdqu	ymm3, YMMWORD PTR 128[rdi+rax]	# tmp1215, MEM[base: vectp.376_264, index: ivtmp.422_731, o
 7109      07800000 
 7109      00
 7110              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7111              		.loc 1 805 56 discriminator 2 view .LVU2435
 7112 2b4f C4C145D3 		vpsrlq	ymm2, ymm7, xmm10	# vect__38.374, tmp1214, _12
 7112      D2
 7113              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7114              		.loc 1 805 94 discriminator 2 view .LVU2436
 7115 2b54 C4C165F3 		vpsllq	ymm6, ymm3, xmm11	# vect__43.378, tmp1215, _18
 7115      F3
 7116              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7117              		.loc 1 805 66 discriminator 2 view .LVU2437
 7118 2b59 C56DEBE6 		vpor	ymm12, ymm2, ymm6	# vect__46.379, vect__38.374, vect__43.378
 7119              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7120              		.loc 1 805 29 discriminator 2 view .LVU2438
 7121 2b5d C4417E7F 		vmovdqu	YMMWORD PTR 128[r9+rax], ymm12	# MEM[base: vectp.381_273, index: ivtmp.422_731, offset: 0B
 7121      A4018000 
GAS LISTING /tmp/ccLUVin9.s 			page 199


 7121      0000
 804:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7122              		.loc 1 804 43 is_stmt 1 discriminator 2 view .LVU2439
 804:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7123              		.loc 1 804 11 discriminator 2 view .LVU2440
 805:sieve_extend.c ****     }
 7124              		.loc 1 805 9 discriminator 2 view .LVU2441
 7125              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7126              		.loc 1 805 56 is_stmt 0 discriminator 2 view .LVU2442
 7127 2b67 C4417D6F 		vmovdqa	ymm13, YMMWORD PTR 160[r11+rax]	# tmp1216, MEM[base: vectp.372_257, index: ivtmp.422_731, 
 7127      AC03A000 
 7127      0000
 7128              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7129              		.loc 1 805 94 discriminator 2 view .LVU2443
 7130 2b71 C5FE6FA4 		vmovdqu	ymm4, YMMWORD PTR 160[rdi+rax]	# tmp1217, MEM[base: vectp.376_264, index: ivtmp.422_731, o
 7130      07A00000 
 7130      00
 7131              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7132              		.loc 1 805 56 discriminator 2 view .LVU2444
 7133 2b7a C44115D3 		vpsrlq	ymm14, ymm13, xmm10	# vect__38.374, tmp1216, _12
 7133      F2
 7134              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7135              		.loc 1 805 94 discriminator 2 view .LVU2445
 7136 2b7f C4415DF3 		vpsllq	ymm15, ymm4, xmm11	# vect__43.378, tmp1217, _18
 7136      FB
 7137              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7138              		.loc 1 805 66 discriminator 2 view .LVU2446
 7139 2b84 C4C10DEB 		vpor	ymm1, ymm14, ymm15	# vect__46.379, vect__38.374, vect__43.378
 7139      CF
 7140              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7141              		.loc 1 805 29 discriminator 2 view .LVU2447
 7142 2b89 C4C17E7F 		vmovdqu	YMMWORD PTR 160[r9+rax], ymm1	# MEM[base: vectp.381_273, index: ivtmp.422_731, offset: 0B]
 7142      8C01A000 
 7142      0000
 804:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7143              		.loc 1 804 43 is_stmt 1 discriminator 2 view .LVU2448
 804:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7144              		.loc 1 804 11 discriminator 2 view .LVU2449
 805:sieve_extend.c ****     }
 7145              		.loc 1 805 9 discriminator 2 view .LVU2450
 7146              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7147              		.loc 1 805 56 is_stmt 0 discriminator 2 view .LVU2451
 7148 2b93 C4417D6F 		vmovdqa	ymm8, YMMWORD PTR 192[r11+rax]	# tmp1218, MEM[base: vectp.372_257, index: ivtmp.422_731, o
 7148      8403C000 
 7148      0000
 7149              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7150              		.loc 1 805 94 discriminator 2 view .LVU2452
 7151 2b9d C5FE6FAC 		vmovdqu	ymm5, YMMWORD PTR 192[rdi+rax]	# tmp1219, MEM[base: vectp.376_264, index: ivtmp.422_731, o
 7151      07C00000 
GAS LISTING /tmp/ccLUVin9.s 			page 200


 7151      00
 7152              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7153              		.loc 1 805 56 discriminator 2 view .LVU2453
 7154 2ba6 C4C13DD3 		vpsrlq	ymm0, ymm8, xmm10	# vect__38.374, tmp1218, _12
 7154      C2
 7155              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7156              		.loc 1 805 94 discriminator 2 view .LVU2454
 7157 2bab C44155F3 		vpsllq	ymm9, ymm5, xmm11	# vect__43.378, tmp1219, _18
 7157      CB
 7158              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7159              		.loc 1 805 66 discriminator 2 view .LVU2455
 7160 2bb0 C4C17DEB 		vpor	ymm7, ymm0, ymm9	# vect__46.379, vect__38.374, vect__43.378
 7160      F9
 7161              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7162              		.loc 1 805 29 discriminator 2 view .LVU2456
 7163 2bb5 C4C17E7F 		vmovdqu	YMMWORD PTR 192[r9+rax], ymm7	# MEM[base: vectp.381_273, index: ivtmp.422_731, offset: 0B]
 7163      BC01C000 
 7163      0000
 804:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7164              		.loc 1 804 43 is_stmt 1 discriminator 2 view .LVU2457
 804:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7165              		.loc 1 804 11 discriminator 2 view .LVU2458
 805:sieve_extend.c ****     }
 7166              		.loc 1 805 9 discriminator 2 view .LVU2459
 7167              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7168              		.loc 1 805 56 is_stmt 0 discriminator 2 view .LVU2460
 7169 2bbf C4C17D6F 		vmovdqa	ymm2, YMMWORD PTR 224[r11+rax]	# tmp1220, MEM[base: vectp.372_257, index: ivtmp.422_731, o
 7169      9403E000 
 7169      0000
 7170              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7171              		.loc 1 805 94 discriminator 2 view .LVU2461
 7172 2bc9 C5FE6F9C 		vmovdqu	ymm3, YMMWORD PTR 224[rdi+rax]	# tmp1221, MEM[base: vectp.376_264, index: ivtmp.422_731, o
 7172      07E00000 
 7172      00
 7173              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7174              		.loc 1 805 56 discriminator 2 view .LVU2462
 7175 2bd2 C4C16DD3 		vpsrlq	ymm6, ymm2, xmm10	# vect__38.374, tmp1220, _12
 7175      F2
 7176              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7177              		.loc 1 805 94 discriminator 2 view .LVU2463
 7178 2bd7 C44165F3 		vpsllq	ymm12, ymm3, xmm11	# vect__43.378, tmp1221, _18
 7178      E3
 7179              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7180              		.loc 1 805 66 discriminator 2 view .LVU2464
 7181 2bdc C4414DEB 		vpor	ymm13, ymm6, ymm12	# vect__46.379, vect__38.374, vect__43.378
 7181      EC
 7182              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
GAS LISTING /tmp/ccLUVin9.s 			page 201


 7183              		.loc 1 805 29 discriminator 2 view .LVU2465
 7184 2be1 C4417E7F 		vmovdqu	YMMWORD PTR 224[r9+rax], ymm13	# MEM[base: vectp.381_273, index: ivtmp.422_731, offset: 0B
 7184      AC01E000 
 7184      0000
 804:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7185              		.loc 1 804 43 is_stmt 1 discriminator 2 view .LVU2466
 804:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7186              		.loc 1 804 11 discriminator 2 view .LVU2467
 7187 2beb 48050001 		add	rax, 256	# ivtmp.422,
 7187      0000
 7188 2bf1 4C39E8   		cmp	rax, r13	# ivtmp.422, _733
 7189 2bf4 0F85BCFE 		jne	.L523	#,
 7189      FFFF
 7190              	.L664:
 7191 2bfa 4D89C3   		mov	r11, r8	# niters_vector_mult_vf.368, niters.366
 7192 2bfd 4983E3FC 		and	r11, -4	# niters_vector_mult_vf.368,
 7193 2c01 4D39D8   		cmp	r8, r11	# niters.366, niters_vector_mult_vf.368
 7194 2c04 4F8D241A 		lea	r12, [r10+r11]	# tmp.369,
 7195 2c08 4F8D2C1E 		lea	r13, [r14+r11]	# tmp.370,
 7196 2c0c 0F84DA00 		je	.L519	#,
 7196      0000
 7197              	.L520:
 7198              	.LVL318:
 805:sieve_extend.c ****     }
 7199              		.loc 1 805 9 view .LVU2468
 7200              	# sieve_extend.c:804:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 804:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7201              		.loc 1 804 5 is_stmt 0 view .LVU2469
 7202 2c12 4C8B5C24 		mov	r11, QWORD PTR 80[rsp]	# aligned_copy_word, %sfp
 7202      50
 7203              	# sieve_extend.c:804:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 804:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7204              		.loc 1 804 52 view .LVU2470
 7205 2c17 4D8D4D01 		lea	r9, 1[r13]	# copy_word,
 7206              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7207              		.loc 1 805 94 view .LVU2471
 7208 2c1b C422E9F7 		shlx	r8, QWORD PTR 8[rbx+r12*8], rdx	# tmp733, *_521, shift_flipped
 7208      44E308
 7209              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7210              		.loc 1 805 56 view .LVU2472
 7211 2c22 C42283F7 		shrx	r14, QWORD PTR [rbx+r12*8], r15	# tmp735, *_516, shift
 7211      34E3
 7212              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7213              		.loc 1 805 66 view .LVU2473
 7214 2c28 4D09F0   		or	r8, r14	# tmp737, tmp735
 7215              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7216              		.loc 1 805 77 view .LVU2474
 7217 2c2b 4D8D5424 		lea	r10, 1[r12]	# _519,
 7217      01
 7218              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7219              		.loc 1 805 66 view .LVU2475
 7220 2c30 4E8904EB 		mov	QWORD PTR [rbx+r13*8], r8	# *_525, tmp737
GAS LISTING /tmp/ccLUVin9.s 			page 202


 804:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7221              		.loc 1 804 43 is_stmt 1 view .LVU2476
 7222              	.LVL319:
 804:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7223              		.loc 1 804 11 view .LVU2477
 7224              	# sieve_extend.c:804:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 804:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7225              		.loc 1 804 5 is_stmt 0 view .LVU2478
 7226 2c34 4D39CB   		cmp	r11, r9	# aligned_copy_word, copy_word
 7227 2c37 0F82AF00 		jb	.L519	#,
 7227      0000
 805:sieve_extend.c ****     }
 7228              		.loc 1 805 9 is_stmt 1 view .LVU2479
 7229              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7230              		.loc 1 805 56 is_stmt 0 view .LVU2480
 7231 2c3d 4A8B3CD3 		mov	rdi, QWORD PTR [rbx+r10*8]	# *_533, *_533
 7232              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7233              		.loc 1 805 94 view .LVU2481
 7234 2c41 C4A2E9F7 		shlx	rsi, QWORD PTR 8[rbx+r10*8], rdx	# tmp738, *_538, shift_flipped
 7234      74D308
 7235              	# sieve_extend.c:804:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 804:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7236              		.loc 1 804 52 view .LVU2482
 7237 2c48 4D8D5502 		lea	r10, 2[r13]	# copy_word,
 7238              	.LVL320:
 7239              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7240              		.loc 1 805 56 view .LVU2483
 7241 2c4c C4E283F7 		shrx	rax, rdi, r15	# tmp740, *_533, shift
 7241      C7
 7242              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7243              		.loc 1 805 66 view .LVU2484
 7244 2c51 4809C6   		or	rsi, rax	# tmp742, tmp740
 7245              	# sieve_extend.c:804:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 804:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7246              		.loc 1 804 5 view .LVU2485
 7247 2c54 4D39D3   		cmp	r11, r10	# aligned_copy_word, copy_word
 7248              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7249              		.loc 1 805 66 view .LVU2486
 7250 2c57 4A8934CB 		mov	QWORD PTR [rbx+r9*8], rsi	# *_542, tmp742
 804:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7251              		.loc 1 804 43 is_stmt 1 view .LVU2487
 7252              	.LVL321:
 7253              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7254              		.loc 1 805 77 is_stmt 0 view .LVU2488
 7255 2c5b 4D8D4424 		lea	r8, 2[r12]	# _536,
 7255      02
 7256              	.LVL322:
 804:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7257              		.loc 1 804 11 is_stmt 1 view .LVU2489
 7258              	# sieve_extend.c:804:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 804:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
GAS LISTING /tmp/ccLUVin9.s 			page 203


 7259              		.loc 1 804 5 is_stmt 0 view .LVU2490
 7260 2c60 0F828600 		jb	.L519	#,
 7260      0000
 805:sieve_extend.c ****     }
 7261              		.loc 1 805 9 is_stmt 1 view .LVU2491
 7262              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7263              		.loc 1 805 94 is_stmt 0 view .LVU2492
 7264 2c66 C422E9F7 		shlx	r9, QWORD PTR 8[rbx+r8*8], rdx	# tmp743, *_555, shift_flipped
 7264      4CC308
 7265              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7266              		.loc 1 805 56 view .LVU2493
 7267 2c6d 4E8B04C3 		mov	r8, QWORD PTR [rbx+r8*8]	# *_550, *_550
 7268              	.LVL323:
 805:sieve_extend.c ****     }
 7269              		.loc 1 805 56 view .LVU2494
 7270 2c71 C4C283F7 		shrx	rsi, r8, r15	# tmp745, *_550, shift
 7270      F0
 7271              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7272              		.loc 1 805 66 view .LVU2495
 7273 2c76 4909F1   		or	r9, rsi	# tmp747, tmp745
 7274 2c79 4E890CD3 		mov	QWORD PTR [rbx+r10*8], r9	# *_559, tmp747
 804:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7275              		.loc 1 804 43 is_stmt 1 view .LVU2496
 7276              	# sieve_extend.c:804:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 804:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7277              		.loc 1 804 52 is_stmt 0 view .LVU2497
 7278 2c7d 4D8D5503 		lea	r10, 3[r13]	# copy_word,
 7279              	.LVL324:
 7280              	# sieve_extend.c:804:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 804:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7281              		.loc 1 804 5 view .LVU2498
 7282 2c81 4D39D3   		cmp	r11, r10	# aligned_copy_word, copy_word
 7283              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7284              		.loc 1 805 77 view .LVU2499
 7285 2c84 4D8D7424 		lea	r14, 3[r12]	# _553,
 7285      03
 7286              	.LVL325:
 804:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7287              		.loc 1 804 11 is_stmt 1 view .LVU2500
 7288              	# sieve_extend.c:804:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 804:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7289              		.loc 1 804 5 is_stmt 0 view .LVU2501
 7290 2c89 7261     		jb	.L519	#,
 805:sieve_extend.c ****     }
 7291              		.loc 1 805 9 is_stmt 1 view .LVU2502
 7292              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7293              		.loc 1 805 94 is_stmt 0 view .LVU2503
 7294 2c8b C4A2E9F7 		shlx	rax, QWORD PTR 8[rbx+r14*8], rdx	# tmp748, *_572, shift_flipped
 7294      44F308
 7295              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7296              		.loc 1 805 56 view .LVU2504
GAS LISTING /tmp/ccLUVin9.s 			page 204


 7297 2c92 4A8B3CF3 		mov	rdi, QWORD PTR [rbx+r14*8]	# *_567, *_567
 7298 2c96 C46283F7 		shrx	r14, rdi, r15	# tmp750, *_567, shift
 7298      F7
 7299              	.LVL326:
 7300              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7301              		.loc 1 805 66 view .LVU2505
 7302 2c9b 4C09F0   		or	rax, r14	# tmp752, tmp750
 7303 2c9e 4A8904D3 		mov	QWORD PTR [rbx+r10*8], rax	# *_576, tmp752
 804:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7304              		.loc 1 804 43 is_stmt 1 view .LVU2506
 7305              	# sieve_extend.c:804:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 804:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7306              		.loc 1 804 52 is_stmt 0 view .LVU2507
 7307 2ca2 4D8D5504 		lea	r10, 4[r13]	# copy_word,
 7308              	.LVL327:
 7309              	# sieve_extend.c:804:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 804:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7310              		.loc 1 804 5 view .LVU2508
 7311 2ca6 4D39D3   		cmp	r11, r10	# aligned_copy_word, copy_word
 7312              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7313              		.loc 1 805 77 view .LVU2509
 7314 2ca9 4D8D4C24 		lea	r9, 4[r12]	# _570,
 7314      04
 7315              	.LVL328:
 804:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7316              		.loc 1 804 11 is_stmt 1 view .LVU2510
 7317              	# sieve_extend.c:804:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 804:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7318              		.loc 1 804 5 is_stmt 0 view .LVU2511
 7319 2cae 723C     		jb	.L519	#,
 805:sieve_extend.c ****     }
 7320              		.loc 1 805 9 is_stmt 1 view .LVU2512
 7321              	# sieve_extend.c:804:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 804:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7322              		.loc 1 804 52 is_stmt 0 view .LVU2513
 7323 2cb0 4D8D6D05 		lea	r13, 5[r13]	# copy_word,
 7324              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7325              		.loc 1 805 94 view .LVU2514
 7326 2cb4 C422E9F7 		shlx	r8, QWORD PTR 8[rbx+r9*8], rdx	# tmp753, *_589, shift_flipped
 7326      44CB08
 7327              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7328              		.loc 1 805 56 view .LVU2515
 7329 2cbb 4A8B34CB 		mov	rsi, QWORD PTR [rbx+r9*8]	# *_584, *_584
 7330 2cbf C46283F7 		shrx	r9, rsi, r15	# tmp755, *_584, shift
 7330      CE
 7331              	.LVL329:
 7332              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7333              		.loc 1 805 66 view .LVU2516
 7334 2cc4 4D09C8   		or	r8, r9	# tmp757, tmp755
 7335              	# sieve_extend.c:804:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 804:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7336              		.loc 1 804 5 view .LVU2517
GAS LISTING /tmp/ccLUVin9.s 			page 205


 7337 2cc7 4D39EB   		cmp	r11, r13	# aligned_copy_word, copy_word
 7338              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7339              		.loc 1 805 66 view .LVU2518
 7340 2cca 4E8904D3 		mov	QWORD PTR [rbx+r10*8], r8	# *_593, tmp757
 804:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7341              		.loc 1 804 43 is_stmt 1 view .LVU2519
 7342              	.LVL330:
 804:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7343              		.loc 1 804 11 view .LVU2520
 7344              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7345              		.loc 1 805 77 is_stmt 0 view .LVU2521
 7346 2cce 4D8D6424 		lea	r12, 5[r12]	# _587,
 7346      05
 7347              	.LVL331:
 7348              	# sieve_extend.c:804:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 804:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7349              		.loc 1 804 5 view .LVU2522
 7350 2cd3 7217     		jb	.L519	#,
 805:sieve_extend.c ****     }
 7351              		.loc 1 805 9 is_stmt 1 view .LVU2523
 7352              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7353              		.loc 1 805 56 is_stmt 0 view .LVU2524
 7354 2cd5 4E8B1CE3 		mov	r11, QWORD PTR [rbx+r12*8]	# *_232, *_232
 7355              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7356              		.loc 1 805 94 view .LVU2525
 7357 2cd9 C4A2E9F7 		shlx	rdx, QWORD PTR 8[rbx+r12*8], rdx	# tmp758, *_237, shift_flipped
 7357      54E308
 7358              	.LVL332:
 7359              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7360              		.loc 1 805 56 view .LVU2526
 7361 2ce0 C44283F7 		shrx	r15, r11, r15	# tmp760, *_232, shift
 7361      FB
 7362              	.LVL333:
 7363              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 7364              		.loc 1 805 66 view .LVU2527
 7365 2ce5 4C09FA   		or	rdx, r15	# tmp762, tmp760
 7366 2ce8 4A8914EB 		mov	QWORD PTR [rbx+r13*8], rdx	# *_241, tmp762
 804:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7367              		.loc 1 804 43 is_stmt 1 view .LVU2528
 7368              	.LVL334:
 804:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7369              		.loc 1 804 11 view .LVU2529
 7370              	.L519:
 808:sieve_extend.c **** 
 7371              		.loc 1 808 5 view .LVU2530
 7372              	# sieve_extend.c:808:     if (copy_word >= destination_stop_word) return;
 808:sieve_extend.c **** 
 7373              		.loc 1 808 8 is_stmt 0 view .LVU2531
 7374 2cec 4C8B5424 		mov	r10, QWORD PTR 88[rsp]	# destination_stop_word, %sfp
 7374      58
 7375 2cf1 4939CA   		cmp	r10, rcx	# destination_stop_word, tmp.357
GAS LISTING /tmp/ccLUVin9.s 			page 206


 7376 2cf4 0F860E04 		jbe	.L685	#,
 7376      0000
 810:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 7377              		.loc 1 810 5 is_stmt 1 view .LVU2532
 7378              	# sieve_extend.c:810:     source_word = copy_word - size; // recalibrate
 810:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 7379              		.loc 1 810 17 is_stmt 0 view .LVU2533
 7380 2cfa 488B7C24 		mov	rdi, QWORD PTR 24[rsp]	# size, %sfp
 7380      18
 7381 2cff 4989CC   		mov	r12, rcx	# tmp.356, tmp.357
 7382              	# sieve_extend.c:814:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 814:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7383              		.loc 1 814 21 view .LVU2534
 7384 2d02 488D040F 		lea	rax, [rdi+rcx]	# ivtmp.417,
 7385              	# sieve_extend.c:810:     source_word = copy_word - size; // recalibrate
 810:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 7386              		.loc 1 810 17 view .LVU2535
 7387 2d06 4929FC   		sub	r12, rdi	# tmp.356, size
 7388              	.LVL335:
 811:sieve_extend.c **** 
 7389              		.loc 1 811 5 is_stmt 1 view .LVU2536
 7390              	# sieve_extend.c:814:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 814:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7391              		.loc 1 814 5 is_stmt 0 view .LVU2537
 7392 2d09 4939C2   		cmp	r10, rax	# destination_stop_word, ivtmp.417
 7393              	# sieve_extend.c:811:     const size_t memsize = (size_t)size*sizeof(bitword_t);
 811:sieve_extend.c **** 
 7394              		.loc 1 811 18 view .LVU2538
 7395 2d0c 4C8D34FD 		lea	r14, 0[0+rdi*8]	# memsize,
 7395      00000000 
 7396              	.LVL336:
 814:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7397              		.loc 1 814 11 is_stmt 1 view .LVU2539
 7398              	# sieve_extend.c:814:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 814:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7399              		.loc 1 814 5 is_stmt 0 view .LVU2540
 7400 2d14 0F826B01 		jb	.L526	#,
 7400      0000
 7401 2d1a 4C8D2CCB 		lea	r13, [rbx+rcx*8]	# tmp765,
 7402 2d1e 488D0CC5 		lea	rcx, 0[0+rax*8]	# tmp766,
 7402      00000000 
 7403              	.LVL337:
 7404              	# sieve_extend.c:815:         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 815:sieve_extend.c **** 
 7405              		.loc 1 815 38 view .LVU2541
 7406 2d26 4E8D3CE3 		lea	r15, [rbx+r12*8]	# _48,
 7407 2d2a 4929CD   		sub	r13, rcx	# _437, tmp766
 7408 2d2d 4C896424 		mov	QWORD PTR 72[rsp], r12	# %sfp, tmp.356
 7408      48
 7409 2d32 4989FC   		mov	r12, rdi	# size, size
 7410              	.LVL338:
 815:sieve_extend.c **** 
 7411              		.loc 1 815 38 view .LVU2542
 7412 2d35 48895C24 		mov	QWORD PTR 64[rsp], rbx	# %sfp, bitarray
 7412      40
 7413 2d3a 4C89D3   		mov	rbx, r10	# destination_stop_word, destination_stop_word
 7414              	.LVL339:
GAS LISTING /tmp/ccLUVin9.s 			page 207


 815:sieve_extend.c **** 
 7415              		.loc 1 815 38 view .LVU2543
 7416 2d3d C5F877   		vzeroupper
 7417              	.LVL340:
 7418              	.L527:
 815:sieve_extend.c **** 
 7419              		.loc 1 815 9 is_stmt 1 discriminator 2 view .LVU2544
 7420              	.LBB391:
 7421              	.LBI391:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7422              		.loc 2 31 1 discriminator 2 view .LVU2545
 7423              	.LBB392:
 7424              		.loc 2 34 3 discriminator 2 view .LVU2546
 7425              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 7426              		.loc 2 34 10 is_stmt 0 discriminator 2 view .LVU2547
 7427 2d40 498D7CC5 		lea	rdi, 0[r13+rax*8]	# tmp768,
 7427      00
 7428 2d45 4C89F2   		mov	rdx, r14	#, memsize
 7429 2d48 48894424 		mov	QWORD PTR 80[rsp], rax	# %sfp, ivtmp.417
 7429      50
 7430 2d4d 4C89FE   		mov	rsi, r15	#, _48
 7431 2d50 E8000000 		call	memcpy@PLT	#
 7431      00
 7432              	.LVL341:
 7433              		.loc 2 34 10 discriminator 2 view .LVU2548
 7434              	.LBE392:
 7435              	.LBE391:
 814:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7436              		.loc 1 814 54 is_stmt 1 discriminator 2 view .LVU2549
 814:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7437              		.loc 1 814 11 discriminator 2 view .LVU2550
 7438 2d55 488B4C24 		mov	rcx, QWORD PTR 80[rsp]	# ivtmp.417, %sfp
 7438      50
 7439 2d5a 4A8D0421 		lea	rax, [rcx+r12]	# ivtmp.417,
 7440              	# sieve_extend.c:814:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 814:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7441              		.loc 1 814 5 is_stmt 0 discriminator 2 view .LVU2551
 7442 2d5e 4839C3   		cmp	rbx, rax	# destination_stop_word, ivtmp.417
 7443 2d61 0F820901 		jb	.L673	#,
 7443      0000
 815:sieve_extend.c **** 
 7444              		.loc 1 815 9 is_stmt 1 view .LVU2552
 7445              	.LVL342:
 7446              	.LBB400:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7447              		.loc 2 31 1 view .LVU2553
 7448              	.LBB393:
 7449              		.loc 2 34 3 view .LVU2554
 7450              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 7451              		.loc 2 34 10 is_stmt 0 view .LVU2555
 7452 2d67 498D7CC5 		lea	rdi, 0[r13+rax*8]	# tmp990,
 7452      00
 7453 2d6c 4C89F2   		mov	rdx, r14	#, memsize
 7454 2d6f 48894424 		mov	QWORD PTR 80[rsp], rax	# %sfp, ivtmp.417
 7454      50
 7455              	.LVL343:
 7456              		.loc 2 34 10 view .LVU2556
GAS LISTING /tmp/ccLUVin9.s 			page 208


 7457 2d74 4C89FE   		mov	rsi, r15	#, _48
 7458 2d77 E8000000 		call	memcpy@PLT	#
 7458      00
 7459              	.LVL344:
 7460              		.loc 2 34 10 view .LVU2557
 7461              	.LBE393:
 7462              	.LBE400:
 814:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7463              		.loc 1 814 54 is_stmt 1 view .LVU2558
 814:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7464              		.loc 1 814 11 view .LVU2559
 7465 2d7c 488B4C24 		mov	rcx, QWORD PTR 80[rsp]	# ivtmp.417, %sfp
 7465      50
 7466 2d81 4E8D0421 		lea	r8, [rcx+r12]	# ivtmp.417,
 7467              	# sieve_extend.c:814:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 814:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7468              		.loc 1 814 5 is_stmt 0 view .LVU2560
 7469 2d85 4C39C3   		cmp	rbx, r8	# destination_stop_word, ivtmp.417
 7470 2d88 0F82E200 		jb	.L673	#,
 7470      0000
 815:sieve_extend.c **** 
 7471              		.loc 1 815 9 is_stmt 1 view .LVU2561
 7472              	.LVL345:
 7473              	.LBB401:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7474              		.loc 2 31 1 view .LVU2562
 7475              	.LBB394:
 7476              		.loc 2 34 3 view .LVU2563
 7477              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 7478              		.loc 2 34 10 is_stmt 0 view .LVU2564
 7479 2d8e 4C89FE   		mov	rsi, r15	#, _48
 7480 2d91 4B8D7CC5 		lea	rdi, 0[r13+r8*8]	# tmp993,
 7480      00
 7481 2d96 4C894424 		mov	QWORD PTR 80[rsp], r8	# %sfp, ivtmp.417
 7481      50
 7482 2d9b 4C89F2   		mov	rdx, r14	#, memsize
 7483 2d9e E8000000 		call	memcpy@PLT	#
 7483      00
 7484              	.LVL346:
 7485              		.loc 2 34 10 view .LVU2565
 7486              	.LBE394:
 7487              	.LBE401:
 814:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7488              		.loc 1 814 54 is_stmt 1 view .LVU2566
 814:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7489              		.loc 1 814 11 view .LVU2567
 7490 2da3 488B4C24 		mov	rcx, QWORD PTR 80[rsp]	# ivtmp.417, %sfp
 7490      50
 7491 2da8 4A8D3421 		lea	rsi, [rcx+r12]	# ivtmp.417,
 7492              	# sieve_extend.c:814:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 814:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7493              		.loc 1 814 5 is_stmt 0 view .LVU2568
 7494 2dac 4839F3   		cmp	rbx, rsi	# destination_stop_word, ivtmp.417
 7495 2daf 0F82BB00 		jb	.L673	#,
 7495      0000
 815:sieve_extend.c **** 
 7496              		.loc 1 815 9 is_stmt 1 view .LVU2569
GAS LISTING /tmp/ccLUVin9.s 			page 209


 7497              	.LVL347:
 7498              	.LBB402:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7499              		.loc 2 31 1 view .LVU2570
 7500              	.LBB395:
 7501              		.loc 2 34 3 view .LVU2571
 7502              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 7503              		.loc 2 34 10 is_stmt 0 view .LVU2572
 7504 2db5 498D7CF5 		lea	rdi, 0[r13+rsi*8]	# tmp996,
 7504      00
 7505 2dba 4C89F2   		mov	rdx, r14	#, memsize
 7506 2dbd 48897424 		mov	QWORD PTR 80[rsp], rsi	# %sfp, ivtmp.417
 7506      50
 7507 2dc2 4C89FE   		mov	rsi, r15	#, _48
 7508 2dc5 E8000000 		call	memcpy@PLT	#
 7508      00
 7509              	.LVL348:
 7510              		.loc 2 34 10 view .LVU2573
 7511              	.LBE395:
 7512              	.LBE402:
 814:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7513              		.loc 1 814 54 is_stmt 1 view .LVU2574
 814:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7514              		.loc 1 814 11 view .LVU2575
 7515 2dca 488B4C24 		mov	rcx, QWORD PTR 80[rsp]	# ivtmp.417, %sfp
 7515      50
 7516 2dcf 4E8D0C21 		lea	r9, [rcx+r12]	# ivtmp.417,
 7517              	# sieve_extend.c:814:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 814:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7518              		.loc 1 814 5 is_stmt 0 view .LVU2576
 7519 2dd3 4C39CB   		cmp	rbx, r9	# destination_stop_word, ivtmp.417
 7520 2dd6 0F829400 		jb	.L673	#,
 7520      0000
 815:sieve_extend.c **** 
 7521              		.loc 1 815 9 is_stmt 1 view .LVU2577
 7522              	.LVL349:
 7523              	.LBB403:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7524              		.loc 2 31 1 view .LVU2578
 7525              	.LBB396:
 7526              		.loc 2 34 3 view .LVU2579
 7527              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 7528              		.loc 2 34 10 is_stmt 0 view .LVU2580
 7529 2ddc 4C89F2   		mov	rdx, r14	#, memsize
 7530 2ddf 4B8D7CCD 		lea	rdi, 0[r13+r9*8]	# tmp999,
 7530      00
 7531 2de4 4C894C24 		mov	QWORD PTR 80[rsp], r9	# %sfp, ivtmp.417
 7531      50
 7532 2de9 4C89FE   		mov	rsi, r15	#, _48
 7533 2dec E8000000 		call	memcpy@PLT	#
 7533      00
 7534              	.LVL350:
 7535              		.loc 2 34 10 view .LVU2581
 7536              	.LBE396:
 7537              	.LBE403:
 814:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7538              		.loc 1 814 54 is_stmt 1 view .LVU2582
GAS LISTING /tmp/ccLUVin9.s 			page 210


 814:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7539              		.loc 1 814 11 view .LVU2583
 7540 2df1 488B4C24 		mov	rcx, QWORD PTR 80[rsp]	# ivtmp.417, %sfp
 7540      50
 7541 2df6 4A8D1421 		lea	rdx, [rcx+r12]	# ivtmp.417,
 7542              	# sieve_extend.c:814:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 814:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7543              		.loc 1 814 5 is_stmt 0 view .LVU2584
 7544 2dfa 4839D3   		cmp	rbx, rdx	# destination_stop_word, ivtmp.417
 7545 2dfd 7271     		jb	.L673	#,
 815:sieve_extend.c **** 
 7546              		.loc 1 815 9 is_stmt 1 view .LVU2585
 7547              	.LVL351:
 7548              	.LBB404:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7549              		.loc 2 31 1 view .LVU2586
 7550              	.LBB397:
 7551              		.loc 2 34 3 view .LVU2587
 7552              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 7553              		.loc 2 34 10 is_stmt 0 view .LVU2588
 7554 2dff 498D7CD5 		lea	rdi, 0[r13+rdx*8]	# tmp1002,
 7554      00
 7555 2e04 4C89FE   		mov	rsi, r15	#, _48
 7556 2e07 48895424 		mov	QWORD PTR 80[rsp], rdx	# %sfp, ivtmp.417
 7556      50
 7557 2e0c 4C89F2   		mov	rdx, r14	#, memsize
 7558 2e0f E8000000 		call	memcpy@PLT	#
 7558      00
 7559              	.LVL352:
 7560              		.loc 2 34 10 view .LVU2589
 7561              	.LBE397:
 7562              	.LBE404:
 814:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7563              		.loc 1 814 54 is_stmt 1 view .LVU2590
 814:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7564              		.loc 1 814 11 view .LVU2591
 7565 2e14 488B4C24 		mov	rcx, QWORD PTR 80[rsp]	# ivtmp.417, %sfp
 7565      50
 7566 2e19 4E8D1C21 		lea	r11, [rcx+r12]	# ivtmp.417,
 7567              	# sieve_extend.c:814:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 814:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7568              		.loc 1 814 5 is_stmt 0 view .LVU2592
 7569 2e1d 4C39DB   		cmp	rbx, r11	# destination_stop_word, ivtmp.417
 7570 2e20 724E     		jb	.L673	#,
 815:sieve_extend.c **** 
 7571              		.loc 1 815 9 is_stmt 1 view .LVU2593
 7572              	.LVL353:
 7573              	.LBB405:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7574              		.loc 2 31 1 view .LVU2594
 7575              	.LBB398:
 7576              		.loc 2 34 3 view .LVU2595
 7577              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 7578              		.loc 2 34 10 is_stmt 0 view .LVU2596
 7579 2e22 4B8D7CDD 		lea	rdi, 0[r13+r11*8]	# tmp1005,
 7579      00
 7580 2e27 4C89F2   		mov	rdx, r14	#, memsize
GAS LISTING /tmp/ccLUVin9.s 			page 211


 7581 2e2a 4C895C24 		mov	QWORD PTR 80[rsp], r11	# %sfp, ivtmp.417
 7581      50
 7582 2e2f 4C89FE   		mov	rsi, r15	#, _48
 7583 2e32 E8000000 		call	memcpy@PLT	#
 7583      00
 7584              	.LVL354:
 7585              		.loc 2 34 10 view .LVU2597
 7586              	.LBE398:
 7587              	.LBE405:
 814:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7588              		.loc 1 814 54 is_stmt 1 view .LVU2598
 814:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7589              		.loc 1 814 11 view .LVU2599
 7590 2e37 488B4C24 		mov	rcx, QWORD PTR 80[rsp]	# ivtmp.417, %sfp
 7590      50
 7591 2e3c 4E8D1421 		lea	r10, [rcx+r12]	# ivtmp.417,
 7592              	# sieve_extend.c:814:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 814:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7593              		.loc 1 814 5 is_stmt 0 view .LVU2600
 7594 2e40 4C39D3   		cmp	rbx, r10	# destination_stop_word, ivtmp.417
 7595 2e43 722B     		jb	.L673	#,
 815:sieve_extend.c **** 
 7596              		.loc 1 815 9 is_stmt 1 view .LVU2601
 7597              	.LVL355:
 7598              	.LBB406:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7599              		.loc 2 31 1 view .LVU2602
 7600              	.LBB399:
 7601              		.loc 2 34 3 view .LVU2603
 7602              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 7603              		.loc 2 34 10 is_stmt 0 view .LVU2604
 7604 2e45 4B8D7CD5 		lea	rdi, 0[r13+r10*8]	# tmp1008,
 7604      00
 7605 2e4a 4C89F2   		mov	rdx, r14	#, memsize
 7606 2e4d 4C895424 		mov	QWORD PTR 80[rsp], r10	# %sfp, ivtmp.417
 7606      50
 7607 2e52 4C89FE   		mov	rsi, r15	#, _48
 7608 2e55 E8000000 		call	memcpy@PLT	#
 7608      00
 7609              	.LVL356:
 7610              		.loc 2 34 10 view .LVU2605
 7611              	.LBE399:
 7612              	.LBE406:
 814:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7613              		.loc 1 814 54 is_stmt 1 view .LVU2606
 814:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7614              		.loc 1 814 11 view .LVU2607
 7615 2e5a 488B4C24 		mov	rcx, QWORD PTR 80[rsp]	# ivtmp.417, %sfp
 7615      50
 7616              	.LVL357:
 814:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7617              		.loc 1 814 11 is_stmt 0 view .LVU2608
 7618 2e5f 4A8D0421 		lea	rax, [rcx+r12]	# ivtmp.417,
 7619              	.LVL358:
 7620              	# sieve_extend.c:814:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 814:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7621              		.loc 1 814 5 view .LVU2609
GAS LISTING /tmp/ccLUVin9.s 			page 212


 7622 2e63 4839C3   		cmp	rbx, rax	# destination_stop_word, ivtmp.417
 7623 2e66 0F83D4FE 		jnb	.L527	#,
 7623      FFFF
 7624              	.LVL359:
 7625 2e6c 0F1F4000 		.p2align 4
 7626              		.p2align 3
 7627              	.L673:
 814:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7628              		.loc 1 814 5 view .LVU2610
 7629 2e70 4C8B6424 		mov	r12, QWORD PTR 72[rsp]	# tmp.356, %sfp
 7629      48
 7630              	# sieve_extend.c:818:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7631              		.loc 1 818 5 view .LVU2611
 7632 2e75 48394C24 		cmp	QWORD PTR 88[rsp], rcx	# %sfp, tmp.357
 7632      58
 7633 2e7a 488B5C24 		mov	rbx, QWORD PTR 64[rsp]	# bitarray, %sfp
 7633      40
 7634              	.LVL360:
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7635              		.loc 1 818 11 is_stmt 1 view .LVU2612
 7636              	# sieve_extend.c:818:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7637              		.loc 1 818 5 is_stmt 0 view .LVU2613
 7638 2e7f 0F827402 		jb	.L686	#,
 7638      0000
 7639              	.LVL361:
 7640              	.L526:
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7641              		.loc 1 818 5 view .LVU2614
 7642 2e85 4A8D3CE3 		lea	rdi, [rbx+r12*8]	# vectp.351,
 7643 2e89 41B80500 		mov	r8d, 5	# tmp778,
 7643      0000
 7644 2e8f 4C8B7424 		mov	r14, QWORD PTR 88[rsp]	# destination_stop_word, %sfp
 7644      58
 7645              	.LVL362:
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7646              		.loc 1 818 5 view .LVU2615
 7647 2e94 4989FD   		mov	r13, rdi	# tmp775, vectp.351
 7648 2e97 49C1ED03 		shr	r13, 3	# tmp775,
 7649 2e9b 49F7DD   		neg	r13	# tmp776
 7650 2e9e 4183E503 		and	r13d, 3	# prolog_loop_niters.352,
 7651 2ea2 4D8D7E01 		lea	r15, 1[r14]	# _49,
 7652 2ea6 498D7503 		lea	rsi, 3[r13]	# tmp777,
 7653 2eaa 4883FE05 		cmp	rsi, 5	# tmp777,
 7654 2eae 490F42F0 		cmovb	rsi, r8	# tmp777,, tmp967, tmp778
 7655 2eb2 4929CE   		sub	r14, rcx	# tmp779, tmp.357
 7656 2eb5 4C39F6   		cmp	rsi, r14	# tmp967, tmp779
 7657 2eb8 0F87BA01 		ja	.L529	#,
 7657      0000
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7658              		.loc 1 818 5 view .LVU2616
 7659 2ebe 4D85ED   		test	r13, r13	# prolog_loop_niters.352
 7660 2ec1 0F846902 		je	.L537	#,
 7660      0000
 819:sieve_extend.c **** 
 7661              		.loc 1 819 9 is_stmt 1 view .LVU2617
GAS LISTING /tmp/ccLUVin9.s 			page 213


 7662              	# sieve_extend.c:819:         bitarray[copy_word] = bitarray[source_word];
 819:sieve_extend.c **** 
 7663              		.loc 1 819 39 is_stmt 0 view .LVU2618
 7664 2ec7 488B17   		mov	rdx, QWORD PTR [rdi]	# _80, MEM[(uint64_t *)vectp.351_198]
 7665 2eca 4983FD01 		cmp	r13, 1	# prolog_loop_niters.352,
 7666              	# sieve_extend.c:818:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7667              		.loc 1 818 57 view .LVU2619
 7668 2ece 4C8D5901 		lea	r11, 1[rcx]	# copy_word,
 7669              	# sieve_extend.c:818:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7670              		.loc 1 818 71 view .LVU2620
 7671 2ed2 4D8D7424 		lea	r14, 1[r12]	# source_word,
 7671      01
 7672              	# sieve_extend.c:819:         bitarray[copy_word] = bitarray[source_word];
 819:sieve_extend.c **** 
 7673              		.loc 1 819 29 view .LVU2621
 7674 2ed7 488914CB 		mov	QWORD PTR [rbx+rcx*8], rdx	# *_56, _80
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7675              		.loc 1 818 48 is_stmt 1 view .LVU2622
 7676              	.LVL363:
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7677              		.loc 1 818 11 view .LVU2623
 7678 2edb 7428     		je	.L530	#,
 819:sieve_extend.c **** 
 7679              		.loc 1 819 9 view .LVU2624
 7680              	# sieve_extend.c:819:         bitarray[copy_word] = bitarray[source_word];
 819:sieve_extend.c **** 
 7681              		.loc 1 819 39 is_stmt 0 view .LVU2625
 7682 2edd 4E8B14F3 		mov	r10, QWORD PTR [rbx+r14*8]	# _507, *_504
 7683 2ee1 4983FD03 		cmp	r13, 3	# prolog_loop_niters.352,
 7684              	# sieve_extend.c:818:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7685              		.loc 1 818 71 view .LVU2626
 7686 2ee5 4D8D7424 		lea	r14, 2[r12]	# source_word,
 7686      02
 7687              	.LVL364:
 7688              	# sieve_extend.c:819:         bitarray[copy_word] = bitarray[source_word];
 819:sieve_extend.c **** 
 7689              		.loc 1 819 29 view .LVU2627
 7690 2eea 4E8914DB 		mov	QWORD PTR [rbx+r11*8], r10	# *_506, _507
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7691              		.loc 1 818 48 is_stmt 1 view .LVU2628
 7692              	# sieve_extend.c:818:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7693              		.loc 1 818 57 is_stmt 0 view .LVU2629
 7694 2eee 4C8D5902 		lea	r11, 2[rcx]	# copy_word,
 7695              	.LVL365:
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7696              		.loc 1 818 11 is_stmt 1 view .LVU2630
 7697 2ef2 7511     		jne	.L530	#,
 819:sieve_extend.c **** 
 7698              		.loc 1 819 9 view .LVU2631
 7699              	# sieve_extend.c:819:         bitarray[copy_word] = bitarray[source_word];
 819:sieve_extend.c **** 
 7700              		.loc 1 819 39 is_stmt 0 view .LVU2632
 7701 2ef4 4A8B04F3 		mov	rax, QWORD PTR [rbx+r14*8]	# _179, *_182
GAS LISTING /tmp/ccLUVin9.s 			page 214


 7702              	# sieve_extend.c:818:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7703              		.loc 1 818 71 view .LVU2633
 7704 2ef8 4D8D7424 		lea	r14, 3[r12]	# source_word,
 7704      03
 7705              	.LVL366:
 7706              	# sieve_extend.c:819:         bitarray[copy_word] = bitarray[source_word];
 819:sieve_extend.c **** 
 7707              		.loc 1 819 29 view .LVU2634
 7708 2efd 4A8904DB 		mov	QWORD PTR [rbx+r11*8], rax	# *_180, _179
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7709              		.loc 1 818 48 is_stmt 1 view .LVU2635
 7710              	# sieve_extend.c:818:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7711              		.loc 1 818 57 is_stmt 0 view .LVU2636
 7712 2f01 4C8D5903 		lea	r11, 3[rcx]	# copy_word,
 7713              	.LVL367:
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7714              		.loc 1 818 11 is_stmt 1 view .LVU2637
 7715              	.L530:
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7716              		.loc 1 818 11 is_stmt 0 view .LVU2638
 7717 2f05 4D29EF   		sub	r15, r13	# tmp780, prolog_loop_niters.352
 7718 2f08 4D01EC   		add	r12, r13	# tmp781, prolog_loop_niters.352
 7719 2f0b 4929CF   		sub	r15, rcx	# niters.353, tmp.357
 7720 2f0e 4C01E9   		add	rcx, r13	# tmp783, prolog_loop_niters.352
 7721 2f11 4C89FF   		mov	rdi, r15	# bnd.354, niters.353
 7722              	# sieve_extend.c:810:     source_word = copy_word - size; // recalibrate
 810:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 7723              		.loc 1 810 17 view .LVU2639
 7724 2f14 31F6     		xor	esi, esi	# ivtmp.409
 7725 2f16 48C1EF02 		shr	rdi, 2	# bnd.354,
 7726 2f1a 4E8D24E3 		lea	r12, [rbx+r12*8]	# vectp.359,
 7727 2f1e 48C1E705 		sal	rdi, 5	# _635,
 7728 2f22 488D0CCB 		lea	rcx, [rbx+rcx*8]	# vectp.362,
 7729 2f26 4C8D6FE0 		lea	r13, -32[rdi]	# tmp793,
 7730 2f2a 49C1ED05 		shr	r13, 5	# tmp791,
 7731 2f2e 4983C501 		add	r13, 1	# tmp794,
 7732 2f32 4183E507 		and	r13d, 7	# tmp795,
 7733 2f36 0F849600 		je	.L532	#,
 7733      0000
 7734 2f3c 4983FD01 		cmp	r13, 1	# tmp795,
 7735 2f40 7478     		je	.L623	#,
 7736 2f42 4983FD02 		cmp	r13, 2	# tmp795,
 7737 2f46 7463     		je	.L624	#,
 7738 2f48 4983FD03 		cmp	r13, 3	# tmp795,
 7739 2f4c 744E     		je	.L625	#,
 7740 2f4e 4983FD04 		cmp	r13, 4	# tmp795,
 7741 2f52 7439     		je	.L626	#,
 7742 2f54 4983FD05 		cmp	r13, 5	# tmp795,
 7743 2f58 7424     		je	.L627	#,
 7744 2f5a 4983FD06 		cmp	r13, 6	# tmp795,
 7745 2f5e 740F     		je	.L628	#,
 7746              	.LVL368:
 819:sieve_extend.c **** 
 7747              		.loc 1 819 9 is_stmt 1 view .LVU2640
 7748              	# sieve_extend.c:819:         bitarray[copy_word] = bitarray[source_word];
GAS LISTING /tmp/ccLUVin9.s 			page 215


 819:sieve_extend.c **** 
 7749              		.loc 1 819 29 is_stmt 0 view .LVU2641
 7750 2f60 C4417D6F 		vmovdqa	ymm10, YMMWORD PTR [r12]	# tmp1253, MEM[base: vectp.359_120, index: ivtmp.409_513, offset:
 7750      1424
 7751 2f66 BE200000 		mov	esi, 32	# ivtmp.409,
 7751      00
 7752 2f6b C57E7F11 		vmovdqu	YMMWORD PTR [rcx], ymm10	# MEM[base: vectp.362_97, index: ivtmp.409_513, offset: 0B], tmp1
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7753              		.loc 1 818 48 is_stmt 1 view .LVU2642
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7754              		.loc 1 818 11 view .LVU2643
 7755              	.L628:
 819:sieve_extend.c **** 
 7756              		.loc 1 819 9 view .LVU2644
 7757              	# sieve_extend.c:819:         bitarray[copy_word] = bitarray[source_word];
 819:sieve_extend.c **** 
 7758              		.loc 1 819 29 is_stmt 0 view .LVU2645
 7759 2f6f C4417D6F 		vmovdqa	ymm11, YMMWORD PTR [r12+rsi]	# tmp1254, MEM[base: vectp.359_120, index: ivtmp.409_513, off
 7759      1C34
 7760 2f75 C57E7F1C 		vmovdqu	YMMWORD PTR [rcx+rsi], ymm11	# MEM[base: vectp.362_97, index: ivtmp.409_513, offset: 0B], 
 7760      31
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7761              		.loc 1 818 48 is_stmt 1 view .LVU2646
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7762              		.loc 1 818 11 view .LVU2647
 7763 2f7a 4883C620 		add	rsi, 32	# ivtmp.409,
 7764              	.L627:
 819:sieve_extend.c **** 
 7765              		.loc 1 819 9 view .LVU2648
 7766              	# sieve_extend.c:819:         bitarray[copy_word] = bitarray[source_word];
 819:sieve_extend.c **** 
 7767              		.loc 1 819 29 is_stmt 0 view .LVU2649
 7768 2f7e C4417D6F 		vmovdqa	ymm14, YMMWORD PTR [r12+rsi]	# tmp1255, MEM[base: vectp.359_120, index: ivtmp.409_513, off
 7768      3434
 7769 2f84 C57E7F34 		vmovdqu	YMMWORD PTR [rcx+rsi], ymm14	# MEM[base: vectp.362_97, index: ivtmp.409_513, offset: 0B], 
 7769      31
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7770              		.loc 1 818 48 is_stmt 1 view .LVU2650
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7771              		.loc 1 818 11 view .LVU2651
 7772 2f89 4883C620 		add	rsi, 32	# ivtmp.409,
 7773              	.L626:
 819:sieve_extend.c **** 
 7774              		.loc 1 819 9 view .LVU2652
 7775              	# sieve_extend.c:819:         bitarray[copy_word] = bitarray[source_word];
 819:sieve_extend.c **** 
 7776              		.loc 1 819 29 is_stmt 0 view .LVU2653
 7777 2f8d C4C17D6F 		vmovdqa	ymm4, YMMWORD PTR [r12+rsi]	# tmp1256, MEM[base: vectp.359_120, index: ivtmp.409_513, offs
 7777      2434
 7778 2f93 C5FE7F24 		vmovdqu	YMMWORD PTR [rcx+rsi], ymm4	# MEM[base: vectp.362_97, index: ivtmp.409_513, offset: 0B], t
 7778      31
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7779              		.loc 1 818 48 is_stmt 1 view .LVU2654
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7780              		.loc 1 818 11 view .LVU2655
 7781 2f98 4883C620 		add	rsi, 32	# ivtmp.409,
 7782              	.L625:
GAS LISTING /tmp/ccLUVin9.s 			page 216


 819:sieve_extend.c **** 
 7783              		.loc 1 819 9 view .LVU2656
 7784              	# sieve_extend.c:819:         bitarray[copy_word] = bitarray[source_word];
 819:sieve_extend.c **** 
 7785              		.loc 1 819 29 is_stmt 0 view .LVU2657
 7786 2f9c C4417D6F 		vmovdqa	ymm15, YMMWORD PTR [r12+rsi]	# tmp1257, MEM[base: vectp.359_120, index: ivtmp.409_513, off
 7786      3C34
 7787 2fa2 C57E7F3C 		vmovdqu	YMMWORD PTR [rcx+rsi], ymm15	# MEM[base: vectp.362_97, index: ivtmp.409_513, offset: 0B], 
 7787      31
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7788              		.loc 1 818 48 is_stmt 1 view .LVU2658
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7789              		.loc 1 818 11 view .LVU2659
 7790 2fa7 4883C620 		add	rsi, 32	# ivtmp.409,
 7791              	.L624:
 819:sieve_extend.c **** 
 7792              		.loc 1 819 9 view .LVU2660
 7793              	# sieve_extend.c:819:         bitarray[copy_word] = bitarray[source_word];
 819:sieve_extend.c **** 
 7794              		.loc 1 819 29 is_stmt 0 view .LVU2661
 7795 2fab C4C17D6F 		vmovdqa	ymm1, YMMWORD PTR [r12+rsi]	# tmp1258, MEM[base: vectp.359_120, index: ivtmp.409_513, offs
 7795      0C34
 7796 2fb1 C5FE7F0C 		vmovdqu	YMMWORD PTR [rcx+rsi], ymm1	# MEM[base: vectp.362_97, index: ivtmp.409_513, offset: 0B], t
 7796      31
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7797              		.loc 1 818 48 is_stmt 1 view .LVU2662
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7798              		.loc 1 818 11 view .LVU2663
 7799 2fb6 4883C620 		add	rsi, 32	# ivtmp.409,
 7800              	.L623:
 819:sieve_extend.c **** 
 7801              		.loc 1 819 9 view .LVU2664
 7802              	# sieve_extend.c:819:         bitarray[copy_word] = bitarray[source_word];
 819:sieve_extend.c **** 
 7803              		.loc 1 819 29 is_stmt 0 view .LVU2665
 7804 2fba C4417D6F 		vmovdqa	ymm8, YMMWORD PTR [r12+rsi]	# tmp1259, MEM[base: vectp.359_120, index: ivtmp.409_513, offs
 7804      0434
 7805 2fc0 C57E7F04 		vmovdqu	YMMWORD PTR [rcx+rsi], ymm8	# MEM[base: vectp.362_97, index: ivtmp.409_513, offset: 0B], t
 7805      31
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7806              		.loc 1 818 48 is_stmt 1 view .LVU2666
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7807              		.loc 1 818 11 view .LVU2667
 7808 2fc5 4883C620 		add	rsi, 32	# ivtmp.409,
 7809 2fc9 4839FE   		cmp	rsi, rdi	# ivtmp.409, _635
 7810 2fcc 0F848E00 		je	.L662	#,
 7810      0000
 7811              	.L532:
 819:sieve_extend.c **** 
 7812              		.loc 1 819 9 discriminator 2 view .LVU2668
 7813              	# sieve_extend.c:819:         bitarray[copy_word] = bitarray[source_word];
 819:sieve_extend.c **** 
 7814              		.loc 1 819 29 is_stmt 0 discriminator 2 view .LVU2669
 7815 2fd2 C4C17D6F 		vmovdqa	ymm0, YMMWORD PTR [r12+rsi]	# tmp1239, MEM[base: vectp.359_120, index: ivtmp.409_513, offs
 7815      0434
 7816 2fd8 C5FE7F04 		vmovdqu	YMMWORD PTR [rcx+rsi], ymm0	# MEM[base: vectp.362_97, index: ivtmp.409_513, offset: 0B], t
 7816      31
GAS LISTING /tmp/ccLUVin9.s 			page 217


 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7817              		.loc 1 818 48 is_stmt 1 discriminator 2 view .LVU2670
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7818              		.loc 1 818 11 discriminator 2 view .LVU2671
 819:sieve_extend.c **** 
 7819              		.loc 1 819 9 discriminator 2 view .LVU2672
 7820              	# sieve_extend.c:819:         bitarray[copy_word] = bitarray[source_word];
 819:sieve_extend.c **** 
 7821              		.loc 1 819 29 is_stmt 0 discriminator 2 view .LVU2673
 7822 2fdd C4C17D6F 		vmovdqa	ymm5, YMMWORD PTR 32[r12+rsi]	# tmp1240, MEM[base: vectp.359_120, index: ivtmp.409_513, of
 7822      6C3420
 7823 2fe4 C5FE7F6C 		vmovdqu	YMMWORD PTR 32[rcx+rsi], ymm5	# MEM[base: vectp.362_97, index: ivtmp.409_513, offset: 0B],
 7823      3120
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7824              		.loc 1 818 48 is_stmt 1 discriminator 2 view .LVU2674
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7825              		.loc 1 818 11 discriminator 2 view .LVU2675
 819:sieve_extend.c **** 
 7826              		.loc 1 819 9 discriminator 2 view .LVU2676
 7827              	# sieve_extend.c:819:         bitarray[copy_word] = bitarray[source_word];
 819:sieve_extend.c **** 
 7828              		.loc 1 819 29 is_stmt 0 discriminator 2 view .LVU2677
 7829 2fea C4417D6F 		vmovdqa	ymm9, YMMWORD PTR 64[r12+rsi]	# tmp1241, MEM[base: vectp.359_120, index: ivtmp.409_513, of
 7829      4C3440
 7830 2ff1 C57E7F4C 		vmovdqu	YMMWORD PTR 64[rcx+rsi], ymm9	# MEM[base: vectp.362_97, index: ivtmp.409_513, offset: 0B],
 7830      3140
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7831              		.loc 1 818 48 is_stmt 1 discriminator 2 view .LVU2678
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7832              		.loc 1 818 11 discriminator 2 view .LVU2679
 819:sieve_extend.c **** 
 7833              		.loc 1 819 9 discriminator 2 view .LVU2680
 7834              	# sieve_extend.c:819:         bitarray[copy_word] = bitarray[source_word];
 819:sieve_extend.c **** 
 7835              		.loc 1 819 29 is_stmt 0 discriminator 2 view .LVU2681
 7836 2ff7 C4C17D6F 		vmovdqa	ymm7, YMMWORD PTR 96[r12+rsi]	# tmp1242, MEM[base: vectp.359_120, index: ivtmp.409_513, of
 7836      7C3460
 7837 2ffe C5FE7F7C 		vmovdqu	YMMWORD PTR 96[rcx+rsi], ymm7	# MEM[base: vectp.362_97, index: ivtmp.409_513, offset: 0B],
 7837      3160
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7838              		.loc 1 818 48 is_stmt 1 discriminator 2 view .LVU2682
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7839              		.loc 1 818 11 discriminator 2 view .LVU2683
 819:sieve_extend.c **** 
 7840              		.loc 1 819 9 discriminator 2 view .LVU2684
 7841              	# sieve_extend.c:819:         bitarray[copy_word] = bitarray[source_word];
 819:sieve_extend.c **** 
 7842              		.loc 1 819 29 is_stmt 0 discriminator 2 view .LVU2685
 7843 3004 C4C17D6F 		vmovdqa	ymm2, YMMWORD PTR 128[r12+rsi]	# tmp1243, MEM[base: vectp.359_120, index: ivtmp.409_513, o
 7843      94348000 
 7843      0000
 7844 300e C5FE7F94 		vmovdqu	YMMWORD PTR 128[rcx+rsi], ymm2	# MEM[base: vectp.362_97, index: ivtmp.409_513, offset: 0B]
 7844      31800000 
 7844      00
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7845              		.loc 1 818 48 is_stmt 1 discriminator 2 view .LVU2686
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
GAS LISTING /tmp/ccLUVin9.s 			page 218


 7846              		.loc 1 818 11 discriminator 2 view .LVU2687
 819:sieve_extend.c **** 
 7847              		.loc 1 819 9 discriminator 2 view .LVU2688
 7848              	# sieve_extend.c:819:         bitarray[copy_word] = bitarray[source_word];
 819:sieve_extend.c **** 
 7849              		.loc 1 819 29 is_stmt 0 discriminator 2 view .LVU2689
 7850 3017 C4C17D6F 		vmovdqa	ymm6, YMMWORD PTR 160[r12+rsi]	# tmp1244, MEM[base: vectp.359_120, index: ivtmp.409_513, o
 7850      B434A000 
 7850      0000
 7851 3021 C5FE7FB4 		vmovdqu	YMMWORD PTR 160[rcx+rsi], ymm6	# MEM[base: vectp.362_97, index: ivtmp.409_513, offset: 0B]
 7851      31A00000 
 7851      00
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7852              		.loc 1 818 48 is_stmt 1 discriminator 2 view .LVU2690
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7853              		.loc 1 818 11 discriminator 2 view .LVU2691
 819:sieve_extend.c **** 
 7854              		.loc 1 819 9 discriminator 2 view .LVU2692
 7855              	# sieve_extend.c:819:         bitarray[copy_word] = bitarray[source_word];
 819:sieve_extend.c **** 
 7856              		.loc 1 819 29 is_stmt 0 discriminator 2 view .LVU2693
 7857 302a C4C17D6F 		vmovdqa	ymm3, YMMWORD PTR 192[r12+rsi]	# tmp1245, MEM[base: vectp.359_120, index: ivtmp.409_513, o
 7857      9C34C000 
 7857      0000
 7858 3034 C5FE7F9C 		vmovdqu	YMMWORD PTR 192[rcx+rsi], ymm3	# MEM[base: vectp.362_97, index: ivtmp.409_513, offset: 0B]
 7858      31C00000 
 7858      00
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7859              		.loc 1 818 48 is_stmt 1 discriminator 2 view .LVU2694
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7860              		.loc 1 818 11 discriminator 2 view .LVU2695
 819:sieve_extend.c **** 
 7861              		.loc 1 819 9 discriminator 2 view .LVU2696
 7862              	# sieve_extend.c:819:         bitarray[copy_word] = bitarray[source_word];
 819:sieve_extend.c **** 
 7863              		.loc 1 819 29 is_stmt 0 discriminator 2 view .LVU2697
 7864 303d C4417D6F 		vmovdqa	ymm12, YMMWORD PTR 224[r12+rsi]	# tmp1246, MEM[base: vectp.359_120, index: ivtmp.409_513, 
 7864      A434E000 
 7864      0000
 7865 3047 C57E7FA4 		vmovdqu	YMMWORD PTR 224[rcx+rsi], ymm12	# MEM[base: vectp.362_97, index: ivtmp.409_513, offset: 0B
 7865      31E00000 
 7865      00
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7866              		.loc 1 818 48 is_stmt 1 discriminator 2 view .LVU2698
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7867              		.loc 1 818 11 discriminator 2 view .LVU2699
 7868 3050 4881C600 		add	rsi, 256	# ivtmp.409,
 7868      010000
 7869 3057 4839FE   		cmp	rsi, rdi	# ivtmp.409, _635
 7870 305a 0F8572FF 		jne	.L532	#,
 7870      FFFF
 7871              	.L662:
 7872 3060 4D89F8   		mov	r8, r15	# niters_vector_mult_vf.355, niters.353
 7873 3063 4983E0FC 		and	r8, -4	# niters_vector_mult_vf.355,
 7874 3067 4D39F8   		cmp	r8, r15	# niters_vector_mult_vf.355, niters.353
 7875 306a 4F8D2430 		lea	r12, [r8+r14]	# tmp.356,
 7876 306e 4B8D0C18 		lea	rcx, [r8+r11]	# tmp.357,
GAS LISTING /tmp/ccLUVin9.s 			page 219


 7877 3072 0F849000 		je	.L685	#,
 7877      0000
 7878              	.L529:
 7879              	.LVL369:
 819:sieve_extend.c **** 
 7880              		.loc 1 819 9 view .LVU2700
 7881              	# sieve_extend.c:818:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7882              		.loc 1 818 5 is_stmt 0 view .LVU2701
 7883 3078 4C8B7424 		mov	r14, QWORD PTR 88[rsp]	# destination_stop_word, %sfp
 7883      58
 7884              	# sieve_extend.c:818:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7885              		.loc 1 818 57 view .LVU2702
 7886 307d 4C8D4901 		lea	r9, 1[rcx]	# copy_word,
 7887              	# sieve_extend.c:819:         bitarray[copy_word] = bitarray[source_word];
 819:sieve_extend.c **** 
 7888              		.loc 1 819 39 view .LVU2703
 7889 3081 4E8B3CE3 		mov	r15, QWORD PTR [rbx+r12*8]	# _90, *_141
 7890              	# sieve_extend.c:818:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7891              		.loc 1 818 71 view .LVU2704
 7892 3085 4D8D5C24 		lea	r11, 1[r12]	# source_word,
 7892      01
 7893              	# sieve_extend.c:818:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7894              		.loc 1 818 5 view .LVU2705
 7895 308a 4D39CE   		cmp	r14, r9	# destination_stop_word, copy_word
 7896              	# sieve_extend.c:819:         bitarray[copy_word] = bitarray[source_word];
 819:sieve_extend.c **** 
 7897              		.loc 1 819 29 view .LVU2706
 7898 308d 4C893CCB 		mov	QWORD PTR [rbx+rcx*8], r15	# *_439, _90
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7899              		.loc 1 818 48 is_stmt 1 view .LVU2707
 7900              	.LVL370:
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7901              		.loc 1 818 11 view .LVU2708
 7902              	# sieve_extend.c:818:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7903              		.loc 1 818 5 is_stmt 0 view .LVU2709
 7904 3091 7275     		jb	.L685	#,
 819:sieve_extend.c **** 
 7905              		.loc 1 819 9 is_stmt 1 view .LVU2710
 7906              	# sieve_extend.c:819:         bitarray[copy_word] = bitarray[source_word];
 819:sieve_extend.c **** 
 7907              		.loc 1 819 39 is_stmt 0 view .LVU2711
 7908 3093 4A8B14DB 		mov	rdx, QWORD PTR [rbx+r11*8]	# _103, *_98
 7909              	# sieve_extend.c:818:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7910              		.loc 1 818 57 view .LVU2712
 7911 3097 4C8D5102 		lea	r10, 2[rcx]	# copy_word,
 7912              	# sieve_extend.c:818:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7913              		.loc 1 818 5 view .LVU2713
 7914 309b 4D39D6   		cmp	r14, r10	# destination_stop_word, copy_word
 7915              	# sieve_extend.c:818:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
GAS LISTING /tmp/ccLUVin9.s 			page 220


 7916              		.loc 1 818 71 view .LVU2714
 7917 309e 498D4424 		lea	rax, 2[r12]	# source_word,
 7917      02
 7918              	# sieve_extend.c:819:         bitarray[copy_word] = bitarray[source_word];
 819:sieve_extend.c **** 
 7919              		.loc 1 819 29 view .LVU2715
 7920 30a3 4A8914CB 		mov	QWORD PTR [rbx+r9*8], rdx	# *_102, _103
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7921              		.loc 1 818 48 is_stmt 1 view .LVU2716
 7922              	.LVL371:
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7923              		.loc 1 818 11 view .LVU2717
 7924              	# sieve_extend.c:818:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7925              		.loc 1 818 5 is_stmt 0 view .LVU2718
 7926 30a7 725F     		jb	.L685	#,
 819:sieve_extend.c **** 
 7927              		.loc 1 819 9 is_stmt 1 view .LVU2719
 7928              	# sieve_extend.c:819:         bitarray[copy_word] = bitarray[source_word];
 819:sieve_extend.c **** 
 7929              		.loc 1 819 39 is_stmt 0 view .LVU2720
 7930 30a9 488B3CC3 		mov	rdi, QWORD PTR [rbx+rax*8]	# _113, *_110
 7931              	# sieve_extend.c:818:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7932              		.loc 1 818 57 view .LVU2721
 7933 30ad 4C8D6903 		lea	r13, 3[rcx]	# copy_word,
 7934              	# sieve_extend.c:818:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7935              		.loc 1 818 5 view .LVU2722
 7936 30b1 4D39EE   		cmp	r14, r13	# destination_stop_word, copy_word
 7937              	# sieve_extend.c:818:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7938              		.loc 1 818 71 view .LVU2723
 7939 30b4 498D7424 		lea	rsi, 3[r12]	# source_word,
 7939      03
 7940              	# sieve_extend.c:819:         bitarray[copy_word] = bitarray[source_word];
 819:sieve_extend.c **** 
 7941              		.loc 1 819 29 view .LVU2724
 7942 30b9 4A893CD3 		mov	QWORD PTR [rbx+r10*8], rdi	# *_112, _113
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7943              		.loc 1 818 48 is_stmt 1 view .LVU2725
 7944              	.LVL372:
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7945              		.loc 1 818 11 view .LVU2726
 7946              	# sieve_extend.c:818:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7947              		.loc 1 818 5 is_stmt 0 view .LVU2727
 7948 30bd 7249     		jb	.L685	#,
 819:sieve_extend.c **** 
 7949              		.loc 1 819 9 is_stmt 1 view .LVU2728
 7950              	# sieve_extend.c:819:         bitarray[copy_word] = bitarray[source_word];
 819:sieve_extend.c **** 
 7951              		.loc 1 819 39 is_stmt 0 view .LVU2729
 7952 30bf 4C8B04F3 		mov	r8, QWORD PTR [rbx+rsi*8]	# _35, *_501
 7953              	# sieve_extend.c:818:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7954              		.loc 1 818 57 view .LVU2730
GAS LISTING /tmp/ccLUVin9.s 			page 221


 7955 30c3 4C8D7904 		lea	r15, 4[rcx]	# copy_word,
 7956              	# sieve_extend.c:818:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7957              		.loc 1 818 71 view .LVU2731
 7958 30c7 4983C404 		add	r12, 4	# source_word,
 7959              	# sieve_extend.c:818:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7960              		.loc 1 818 5 view .LVU2732
 7961 30cb 4D39F7   		cmp	r15, r14	# copy_word, destination_stop_word
 7962              	# sieve_extend.c:819:         bitarray[copy_word] = bitarray[source_word];
 819:sieve_extend.c **** 
 7963              		.loc 1 819 29 view .LVU2733
 7964 30ce 4E8904EB 		mov	QWORD PTR [rbx+r13*8], r8	# *_132, _35
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7965              		.loc 1 818 48 is_stmt 1 view .LVU2734
 7966              	.LVL373:
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7967              		.loc 1 818 11 view .LVU2735
 7968              	# sieve_extend.c:818:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7969              		.loc 1 818 5 is_stmt 0 view .LVU2736
 7970 30d2 7734     		ja	.L685	#,
 819:sieve_extend.c **** 
 7971              		.loc 1 819 9 is_stmt 1 view .LVU2737
 7972              	# sieve_extend.c:819:         bitarray[copy_word] = bitarray[source_word];
 819:sieve_extend.c **** 
 7973              		.loc 1 819 39 is_stmt 0 view .LVU2738
 7974 30d4 4E8D0CE5 		lea	r9, 0[0+r12*8]	# _42,
 7974      00000000 
 7975              	# sieve_extend.c:818:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7976              		.loc 1 818 57 view .LVU2739
 7977 30dc 4883C105 		add	rcx, 5	# copy_word,
 7978              	# sieve_extend.c:819:         bitarray[copy_word] = bitarray[source_word];
 819:sieve_extend.c **** 
 7979              		.loc 1 819 39 view .LVU2740
 7980 30e0 4E8B24E3 		mov	r12, QWORD PTR [rbx+r12*8]	# _46, *_43
 7981              	# sieve_extend.c:818:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7982              		.loc 1 818 5 view .LVU2741
 7983 30e4 4939CE   		cmp	r14, rcx	# destination_stop_word, copy_word
 7984              	# sieve_extend.c:819:         bitarray[copy_word] = bitarray[source_word];
 819:sieve_extend.c **** 
 7985              		.loc 1 819 29 view .LVU2742
 7986 30e7 4E8924FB 		mov	QWORD PTR [rbx+r15*8], r12	# *_45, _46
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7987              		.loc 1 818 48 is_stmt 1 view .LVU2743
 7988              	.LVL374:
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7989              		.loc 1 818 11 view .LVU2744
 7990              	# sieve_extend.c:818:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7991              		.loc 1 818 5 is_stmt 0 view .LVU2745
 7992 30eb 721B     		jb	.L685	#,
 819:sieve_extend.c **** 
 7993              		.loc 1 819 9 is_stmt 1 view .LVU2746
 7994              	# sieve_extend.c:819:         bitarray[copy_word] = bitarray[source_word];
GAS LISTING /tmp/ccLUVin9.s 			page 222


 819:sieve_extend.c **** 
 7995              		.loc 1 819 39 is_stmt 0 view .LVU2747
 7996 30ed 4E8B5C0B 		mov	r11, QWORD PTR 8[rbx+r9]	# _158, *_161
 7996      08
 7997              	# sieve_extend.c:819:         bitarray[copy_word] = bitarray[source_word];
 819:sieve_extend.c **** 
 7998              		.loc 1 819 29 view .LVU2748
 7999 30f2 4C891CCB 		mov	QWORD PTR [rbx+rcx*8], r11	# *_159, _158
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8000              		.loc 1 818 48 is_stmt 1 view .LVU2749
 818:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8001              		.loc 1 818 11 view .LVU2750
 8002 30f6 C5F877   		vzeroupper
 8003              	.L686:
 8004              	# sieve_extend.c:822:  }
 822:sieve_extend.c **** 
 8005              		.loc 1 822 2 is_stmt 0 view .LVU2751
 8006 30f9 488D65D8 		lea	rsp, -40[rbp]	#,
 8007              	.LVL375:
 822:sieve_extend.c **** 
 8008              		.loc 1 822 2 view .LVU2752
 8009 30fd 5B       		pop	rbx	#
 8010 30fe 415C     		pop	r12	#
 8011 3100 415D     		pop	r13	#
 8012 3102 415E     		pop	r14	#
 8013 3104 415F     		pop	r15	#
 8014 3106 5D       		pop	rbp	#
 8015              		.cfi_remember_state
 8016              		.cfi_def_cfa 7, 8
 8017              	.LVL376:
 822:sieve_extend.c **** 
 8018              		.loc 1 822 2 view .LVU2753
 8019 3107 C3       		ret	
 8020              	.LVL377:
 8021              		.p2align 4,,7
 8022              		.p2align 3
 8023              	.L685:
 8024              		.cfi_restore_state
 822:sieve_extend.c **** 
 8025              		.loc 1 822 2 view .LVU2754
 8026 3108 C5F877   		vzeroupper
 8027 310b 488D65D8 		lea	rsp, -40[rbp]	#,
 8028              	.LVL378:
 822:sieve_extend.c **** 
 8029              		.loc 1 822 2 view .LVU2755
 8030 310f 5B       		pop	rbx	#
 8031 3110 415C     		pop	r12	#
 8032 3112 415D     		pop	r13	#
 8033 3114 415E     		pop	r14	#
 8034 3116 415F     		pop	r15	#
 8035 3118 5D       		pop	rbp	#
 8036              		.cfi_remember_state
 8037              		.cfi_def_cfa 7, 8
 8038              	.LVL379:
 822:sieve_extend.c **** 
 8039              		.loc 1 822 2 view .LVU2756
 8040 3119 C3       		ret	
GAS LISTING /tmp/ccLUVin9.s 			page 223


 8041              	.LVL380:
 8042 311a 660F1F44 		.p2align 4,,7
 8042      0000
 8043              		.p2align 3
 8044              	.L536:
 8045              		.cfi_restore_state
 8046              	# sieve_extend.c:804:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 804:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8047              		.loc 1 804 5 view .LVU2757
 8048 3120 4D89EE   		mov	r14, r13	# copy_word, tmp.370
 8049              	# sieve_extend.c:798:     source_word += distance;
 798:sieve_extend.c ****     copy_word += distance;
 8050              		.loc 1 798 17 view .LVU2758
 8051 3123 4D89E2   		mov	r10, r12	# source_word, tmp.369
 8052 3126 498D7424 		lea	rsi, 1[r12]	# tmp788,
 8052      01
 8053 312b E92DF8FF 		jmp	.L521	#
 8053      FF
 8054              	.LVL381:
 8055              		.p2align 4,,7
 8056              		.p2align 3
 8057              	.L537:
 8058              	# sieve_extend.c:804:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 804:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8059              		.loc 1 804 5 view .LVU2759
 8060 3130 4989CB   		mov	r11, rcx	# copy_word, tmp.357
 8061              	# sieve_extend.c:810:     source_word = copy_word - size; // recalibrate
 810:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 8062              		.loc 1 810 17 view .LVU2760
 8063 3133 4D89E6   		mov	r14, r12	# source_word, tmp.356
 8064 3136 E9CAFDFF 		jmp	.L530	#
 8064      FF
 8065              	.LVL382:
 8066 313b 0F1F4400 		.p2align 4,,7
 8066      00
 8067              		.p2align 3
 8068              	.L688:
 805:sieve_extend.c ****     }
 8069              		.loc 1 805 9 is_stmt 1 view .LVU2761
 8070              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 8071              		.loc 1 805 56 is_stmt 0 view .LVU2762
 8072 3140 C4C17D6F 		vmovdqa	ymm3, YMMWORD PTR [r11]	# tmp1260, MEM[base: vectp.372_257, index: ivtmp.422_731, offset: 
 8072      1B
 8073 3145 B8200000 		mov	eax, 32	# ivtmp.422,
 8073      00
 8074              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 8075              		.loc 1 805 94 view .LVU2763
 8076 314a C5FE6F27 		vmovdqu	ymm4, YMMWORD PTR [rdi]	# tmp1261, MEM[base: vectp.376_264, index: ivtmp.422_731, offset: 
 8077              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 8078              		.loc 1 805 56 view .LVU2764
 8079 314e C4C165D3 		vpsrlq	ymm2, ymm3, xmm10	# vect__38.374, tmp1260, _12
 8079      D2
 8080              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
GAS LISTING /tmp/ccLUVin9.s 			page 224


 8081              		.loc 1 805 94 view .LVU2765
 8082 3153 C4C15DF3 		vpsllq	ymm6, ymm4, xmm11	# vect__43.378, tmp1261, _18
 8082      F3
 8083              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 8084              		.loc 1 805 66 view .LVU2766
 8085 3158 C56DEBE6 		vpor	ymm12, ymm2, ymm6	# vect__46.379, vect__38.374, vect__43.378
 8086              	# sieve_extend.c:805:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 805:sieve_extend.c ****     }
 8087              		.loc 1 805 29 view .LVU2767
 8088 315c C4417E7F 		vmovdqu	YMMWORD PTR [r9], ymm12	# MEM[base: vectp.381_273, index: ivtmp.422_731, offset: 0B], vect
 8088      21
 804:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8089              		.loc 1 804 43 is_stmt 1 view .LVU2768
 804:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8090              		.loc 1 804 11 view .LVU2769
 8091 3161 E972F8FF 		jmp	.L621	#
 8091      FF
 8092              	.LVL383:
 8093              		.p2align 4,,7
 8094 3166 6690     		.p2align 3
 8095              	.L514:
 804:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8096              		.loc 1 804 11 is_stmt 0 view .LVU2770
 8097 3168 4C8B7424 		mov	r14, QWORD PTR 48[rsp]	# fast_loop_stop_word, %sfp
 8097      30
 8098 316d 4D89E8   		mov	r8, r13	# tmp804, tmp.370
 8099 3170 49F7D0   		not	r8	# tmp804
 8100 3173 4801D9   		add	rcx, rbx	# ivtmp.437, bitarray
 8101              	.LBB407:
 8102              	.LBB388:
 8103              	.LBB377:
 8104              	# sieve_extend.c:698:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8105              		.loc 1 698 42 view .LVU2771
 8106 3176 4489F8   		mov	eax, r15d	# tmp1194, _12
 8107              	# sieve_extend.c:698:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8108              		.loc 1 698 63 view .LVU2772
 8109 3179 89D7     		mov	edi, edx	# tmp1195, _18
 8110 317b 4D01F0   		add	r8, r14	# tmp805, fast_loop_stop_word
 8111              	# sieve_extend.c:698:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8112              		.loc 1 698 42 view .LVU2773
 8113 317e C4E2FBF7 		shrx	rax, QWORD PTR [rcx], rax	# tmp689, MEM[base: _743, offset: 0B], tmp1194
 8113      01
 8114              	# sieve_extend.c:697:         bitword_t source1 = bitarray[source_word+1];
 697:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8115              		.loc 1 697 19 view .LVU2774
 8116 3183 488B7108 		mov	rsi, QWORD PTR 8[rcx]	# source1, MEM[base: _743, offset: 8B]
 8117              	# sieve_extend.c:698:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8118              		.loc 1 698 63 view .LVU2775
 8119 3187 C4E2C1F7 		shlx	rdi, rsi, rdi	# tmp691, source1, tmp1195
 8119      FE
 8120 318c 49D1E8   		shr	r8	# tmp803
 8121              	# sieve_extend.c:698:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
GAS LISTING /tmp/ccLUVin9.s 			page 225


 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8122              		.loc 1 698 52 view .LVU2776
 8123 318f 4809F8   		or	rax, rdi	# tmp692, tmp691
 8124              	# sieve_extend.c:701:         copy_word += 2;
 701:sieve_extend.c ****         source_word += 2;
 8125              		.loc 1 701 19 view .LVU2777
 8126 3192 498D7D02 		lea	rdi, 2[r13]	# copy_word,
 8127              	# sieve_extend.c:698:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8128              		.loc 1 698 63 view .LVU2778
 8129 3196 4189D2   		mov	r10d, edx	# _18, shift_flipped
 8130 3199 49F7D3   		not	r11	# tmp790
 8131 319c 4183E003 		and	r8d, 3	# tmp806,
 8132              	.LVL384:
 696:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 8133              		.loc 1 696 9 is_stmt 1 view .LVU2779
 697:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8134              		.loc 1 697 9 view .LVU2780
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8135              		.loc 1 698 9 view .LVU2781
 8136              	# sieve_extend.c:698:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8137              		.loc 1 698 52 is_stmt 0 view .LVU2782
 8138 31a0 4A8904EB 		mov	QWORD PTR [rbx+r13*8], rax	# MEM[base: bitarray_67(D), index: copy_word_362, step: 8, offset: 
 8139              	.LVL385:
 699:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 8140              		.loc 1 699 9 is_stmt 1 view .LVU2783
 700:sieve_extend.c ****         copy_word += 2;
 8141              		.loc 1 700 9 view .LVU2784
 8142              	# sieve_extend.c:698:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8143              		.loc 1 698 42 is_stmt 0 view .LVU2785
 8144 31a4 4589F9   		mov	r9d, r15d	# _12, shift
 8145              	# sieve_extend.c:700:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 700:sieve_extend.c ****         copy_word += 2;
 8146              		.loc 1 700 63 view .LVU2786
 8147 31a7 C4E2A9F7 		shlx	rax, QWORD PTR 16[rcx], r10	# tmp693, MEM[base: _743, offset: 16B], tmp1196
 8147      4110
 8148              	# sieve_extend.c:700:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 700:sieve_extend.c ****         copy_word += 2;
 8149              		.loc 1 700 42 view .LVU2787
 8150 31ad C4E2B3F7 		shrx	rsi, rsi, r9	# tmp695, source1, tmp1197
 8150      F6
 8151              	.LVL386:
 8152              	# sieve_extend.c:700:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 700:sieve_extend.c ****         copy_word += 2;
 8153              		.loc 1 700 52 view .LVU2788
 8154 31b2 4809C6   		or	rsi, rax	# tmp696, tmp693
 8155              	.LBE377:
 8156              	# sieve_extend.c:695:     while (copy_word < fast_loop_stop_word) {
 695:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8157              		.loc 1 695 11 view .LVU2789
 8158 31b5 4939FE   		cmp	r14, rdi	# fast_loop_stop_word, copy_word
 8159 31b8 4D8D143B 		lea	r10, [r11+rdi]	# distance,
 8160 31bc 488D4110 		lea	rax, 16[rcx]	# ivtmp.437,
 8161              	.LBB378:
 8162              	# sieve_extend.c:700:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
GAS LISTING /tmp/ccLUVin9.s 			page 226


 700:sieve_extend.c ****         copy_word += 2;
 8163              		.loc 1 700 52 view .LVU2790
 8164 31c0 4A8974EB 		mov	QWORD PTR 8[rbx+r13*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_362, step: 8, offset:
 8164      08
 8165              	.LVL387:
 701:sieve_extend.c ****         source_word += 2;
 8166              		.loc 1 701 9 is_stmt 1 view .LVU2791
 702:sieve_extend.c ****         distance += 2;
 8167              		.loc 1 702 9 view .LVU2792
 703:sieve_extend.c ****     }
 8168              		.loc 1 703 9 view .LVU2793
 703:sieve_extend.c ****     }
 8169              		.loc 1 703 9 is_stmt 0 view .LVU2794
 8170              	.LBE378:
 695:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8171              		.loc 1 695 11 is_stmt 1 view .LVU2795
 8172 31c5 0F86B3F6 		jbe	.L518	#,
 8172      FFFF
 8173 31cb 4D85C0   		test	r8, r8	# tmp806
 8174 31ce 0F849700 		je	.L676	#,
 8174      0000
 8175 31d4 4983F801 		cmp	r8, 1	# tmp806,
 8176 31d8 7446     		je	.L635	#,
 8177 31da 4983F802 		cmp	r8, 2	# tmp806,
 8178 31de 0F857401 		jne	.L689	#,
 8178      0000
 8179              	.LVL388:
 8180              	.L636:
 8181              	.LBB379:
 696:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 8182              		.loc 1 696 9 view .LVU2796
 697:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8183              		.loc 1 697 9 view .LVU2797
 8184              	# sieve_extend.c:697:         bitword_t source1 = bitarray[source_word+1];
 697:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8185              		.loc 1 697 19 is_stmt 0 view .LVU2798
 8186 31e4 488B7008 		mov	rsi, QWORD PTR 8[rax]	# source1, MEM[base: _743, offset: 8B]
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8187              		.loc 1 698 9 is_stmt 1 view .LVU2799
 8188              	# sieve_extend.c:698:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8189              		.loc 1 698 42 is_stmt 0 view .LVU2800
 8190 31e8 4489F9   		mov	ecx, r15d	# tmp1278, _12
 8191              	.LVL389:
 8192              	# sieve_extend.c:698:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8193              		.loc 1 698 63 view .LVU2801
 8194 31eb 4189D0   		mov	r8d, edx	# tmp1279, _18
 8195              	# sieve_extend.c:698:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8196              		.loc 1 698 42 view .LVU2802
 8197 31ee C4E2F3F7 		shrx	rcx, QWORD PTR [rax], rcx	# tmp1056, MEM[base: _743, offset: 0B], tmp1278
 8197      08
 8198              	# sieve_extend.c:698:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8199              		.loc 1 698 63 view .LVU2803
 8200 31f3 C462B9F7 		shlx	r9, rsi, r8	# tmp1057, source1, tmp1279
GAS LISTING /tmp/ccLUVin9.s 			page 227


 8200      CE
 8201              	# sieve_extend.c:698:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8202              		.loc 1 698 52 view .LVU2804
 8203 31f8 4C09C9   		or	rcx, r9	# tmp1058, tmp1057
 8204              	# sieve_extend.c:698:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8205              		.loc 1 698 42 view .LVU2805
 8206 31fb 4589FA   		mov	r10d, r15d	# _12, shift
 8207              	# sieve_extend.c:698:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8208              		.loc 1 698 63 view .LVU2806
 8209 31fe 4189D6   		mov	r14d, edx	# _18, shift_flipped
 8210              	# sieve_extend.c:698:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8211              		.loc 1 698 52 view .LVU2807
 8212 3201 48890CFB 		mov	QWORD PTR [rbx+rdi*8], rcx	# MEM[base: bitarray_67(D), index: copy_word_362, step: 8, offset: 
 8213              	.LVL390:
 699:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 8214              		.loc 1 699 9 is_stmt 1 view .LVU2808
 700:sieve_extend.c ****         copy_word += 2;
 8215              		.loc 1 700 9 view .LVU2809
 8216              	# sieve_extend.c:700:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 700:sieve_extend.c ****         copy_word += 2;
 8217              		.loc 1 700 42 is_stmt 0 view .LVU2810
 8218 3205 C4E2ABF7 		shrx	rsi, rsi, r10	# tmp1061, source1, tmp1281
 8218      F6
 8219              	# sieve_extend.c:700:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 700:sieve_extend.c ****         copy_word += 2;
 8220              		.loc 1 700 63 view .LVU2811
 8221 320a C4E289F7 		shlx	rcx, QWORD PTR 16[rax], r14	# tmp1060, MEM[base: _743, offset: 16B], tmp1280
 8221      4810
 8222              	# sieve_extend.c:700:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 700:sieve_extend.c ****         copy_word += 2;
 8223              		.loc 1 700 52 view .LVU2812
 8224 3210 4809CE   		or	rsi, rcx	# tmp1062, tmp1060
 8225 3213 488974FB 		mov	QWORD PTR 8[rbx+rdi*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_362, step: 8, offset:
 8225      08
 8226              	.LVL391:
 701:sieve_extend.c ****         source_word += 2;
 8227              		.loc 1 701 9 is_stmt 1 view .LVU2813
 8228 3218 4883C010 		add	rax, 16	# ivtmp.437,
 8229              	# sieve_extend.c:701:         copy_word += 2;
 701:sieve_extend.c ****         source_word += 2;
 8230              		.loc 1 701 19 is_stmt 0 view .LVU2814
 8231 321c 4883C702 		add	rdi, 2	# copy_word,
 702:sieve_extend.c ****         distance += 2;
 8232              		.loc 1 702 9 is_stmt 1 view .LVU2815
 703:sieve_extend.c ****     }
 8233              		.loc 1 703 9 view .LVU2816
 703:sieve_extend.c ****     }
 8234              		.loc 1 703 9 is_stmt 0 view .LVU2817
 8235              	.LBE379:
 695:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8236              		.loc 1 695 11 is_stmt 1 view .LVU2818
 8237              	.LVL392:
 8238              	.L635:
GAS LISTING /tmp/ccLUVin9.s 			page 228


 8239              	.LBB380:
 696:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 8240              		.loc 1 696 9 view .LVU2819
 697:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8241              		.loc 1 697 9 view .LVU2820
 8242              	# sieve_extend.c:697:         bitword_t source1 = bitarray[source_word+1];
 697:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8243              		.loc 1 697 19 is_stmt 0 view .LVU2821
 8244 3220 488B7008 		mov	rsi, QWORD PTR 8[rax]	# source1, MEM[base: _743, offset: 8B]
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8245              		.loc 1 698 9 is_stmt 1 view .LVU2822
 8246              	# sieve_extend.c:698:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8247              		.loc 1 698 42 is_stmt 0 view .LVU2823
 8248 3224 4589F8   		mov	r8d, r15d	# tmp1282, _12
 8249              	# sieve_extend.c:698:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8250              		.loc 1 698 63 view .LVU2824
 8251 3227 4189D1   		mov	r9d, edx	# tmp1283, _18
 8252              	# sieve_extend.c:698:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8253              		.loc 1 698 42 view .LVU2825
 8254 322a C4E2BBF7 		shrx	rcx, QWORD PTR [rax], r8	# tmp1066, MEM[base: _743, offset: 0B], tmp1282
 8254      08
 8255              	# sieve_extend.c:698:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8256              		.loc 1 698 63 view .LVU2826
 8257 322f C462B1F7 		shlx	r8, rsi, r9	# tmp1067, source1, tmp1283
 8257      C6
 8258              	# sieve_extend.c:698:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8259              		.loc 1 698 52 view .LVU2827
 8260 3234 4C09C1   		or	rcx, r8	# tmp1068, tmp1067
 8261              	# sieve_extend.c:698:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8262              		.loc 1 698 42 view .LVU2828
 8263 3237 4589FA   		mov	r10d, r15d	# _12, shift
 8264              	# sieve_extend.c:698:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8265              		.loc 1 698 63 view .LVU2829
 8266 323a 4189D6   		mov	r14d, edx	# _18, shift_flipped
 8267              	# sieve_extend.c:698:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8268              		.loc 1 698 52 view .LVU2830
 8269 323d 48890CFB 		mov	QWORD PTR [rbx+rdi*8], rcx	# MEM[base: bitarray_67(D), index: copy_word_362, step: 8, offset: 
 8270              	.LVL393:
 699:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 8271              		.loc 1 699 9 is_stmt 1 view .LVU2831
 700:sieve_extend.c ****         copy_word += 2;
 8272              		.loc 1 700 9 view .LVU2832
 8273              	# sieve_extend.c:700:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 700:sieve_extend.c ****         copy_word += 2;
 8274              		.loc 1 700 42 is_stmt 0 view .LVU2833
 8275 3241 C4E2ABF7 		shrx	rsi, rsi, r10	# tmp1071, source1, tmp1285
 8275      F6
 8276              	# sieve_extend.c:700:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 700:sieve_extend.c ****         copy_word += 2;
GAS LISTING /tmp/ccLUVin9.s 			page 229


 8277              		.loc 1 700 63 view .LVU2834
 8278 3246 C4E289F7 		shlx	rcx, QWORD PTR 16[rax], r14	# tmp1070, MEM[base: _743, offset: 16B], tmp1284
 8278      4810
 8279              	# sieve_extend.c:700:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 700:sieve_extend.c ****         copy_word += 2;
 8280              		.loc 1 700 52 view .LVU2835
 8281 324c 4809CE   		or	rsi, rcx	# tmp1072, tmp1070
 8282 324f 488974FB 		mov	QWORD PTR 8[rbx+rdi*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_362, step: 8, offset:
 8282      08
 8283              	.LVL394:
 701:sieve_extend.c ****         source_word += 2;
 8284              		.loc 1 701 9 is_stmt 1 view .LVU2836
 8285              	# sieve_extend.c:701:         copy_word += 2;
 701:sieve_extend.c ****         source_word += 2;
 8286              		.loc 1 701 19 is_stmt 0 view .LVU2837
 8287 3254 4883C702 		add	rdi, 2	# copy_word,
 702:sieve_extend.c ****         distance += 2;
 8288              		.loc 1 702 9 is_stmt 1 view .LVU2838
 703:sieve_extend.c ****     }
 8289              		.loc 1 703 9 view .LVU2839
 8290 3258 4883C010 		add	rax, 16	# ivtmp.437,
 8291              	.LBE380:
 8292              	# sieve_extend.c:695:     while (copy_word < fast_loop_stop_word) {
 695:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8293              		.loc 1 695 11 is_stmt 0 view .LVU2840
 8294 325c 48397C24 		cmp	QWORD PTR 48[rsp], rdi	# %sfp, copy_word
 8294      30
 8295 3261 4D8D143B 		lea	r10, [r11+rdi]	# distance,
 695:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8296              		.loc 1 695 11 is_stmt 1 view .LVU2841
 8297 3265 0F8613F6 		jbe	.L518	#,
 8297      FFFF
 8298              	.LVL395:
 8299              	.L676:
 695:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8300              		.loc 1 695 11 is_stmt 0 view .LVU2842
 8301 326b 4489F9   		mov	ecx, r15d	# _12, shift
 8302 326e 4189D0   		mov	r8d, edx	# _18, shift_flipped
 8303 3271 4C896424 		mov	QWORD PTR 56[rsp], r12	# %sfp, tmp.369
 8303      38
 8304              	.LVL396:
 8305              	.L517:
 8306              	.LBB381:
 696:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 8307              		.loc 1 696 9 is_stmt 1 view .LVU2843
 697:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8308              		.loc 1 697 9 view .LVU2844
 8309              	# sieve_extend.c:697:         bitword_t source1 = bitarray[source_word+1];
 697:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8310              		.loc 1 697 19 is_stmt 0 view .LVU2845
 8311 3276 4C8B6008 		mov	r12, QWORD PTR 8[rax]	# source1, MEM[base: _743, offset: 8B]
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8312              		.loc 1 698 9 is_stmt 1 view .LVU2846
 8313              	# sieve_extend.c:698:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8314              		.loc 1 698 42 is_stmt 0 view .LVU2847
 8315 327a C462F3F7 		shrx	r9, QWORD PTR [rax], rcx	# tmp878, MEM[base: _743, offset: 0B], _12
GAS LISTING /tmp/ccLUVin9.s 			page 230


 8315      08
 8316              	# sieve_extend.c:698:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8317              		.loc 1 698 63 view .LVU2848
 8318 327f C442B9F7 		shlx	r14, r12, r8	# tmp879, source1, _18
 8318      F4
 8319              	# sieve_extend.c:698:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8320              		.loc 1 698 52 view .LVU2849
 8321 3284 4D09F1   		or	r9, r14	# tmp880, tmp879
 8322              	# sieve_extend.c:700:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 700:sieve_extend.c ****         copy_word += 2;
 8323              		.loc 1 700 42 view .LVU2850
 8324 3287 C442F3F7 		shrx	r10, r12, rcx	# tmp883, source1, _12
 8324      D4
 8325              	# sieve_extend.c:698:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8326              		.loc 1 698 52 view .LVU2851
 8327 328c 4C890CFB 		mov	QWORD PTR [rbx+rdi*8], r9	# MEM[base: bitarray_67(D), index: copy_word_362, step: 8, offset: 0
 8328              	.LVL397:
 699:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 8329              		.loc 1 699 9 is_stmt 1 view .LVU2852
 700:sieve_extend.c ****         copy_word += 2;
 8330              		.loc 1 700 9 view .LVU2853
 8331              	# sieve_extend.c:700:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 700:sieve_extend.c ****         copy_word += 2;
 8332              		.loc 1 700 63 is_stmt 0 view .LVU2854
 8333 3290 C4E2B9F7 		shlx	rsi, QWORD PTR 16[rax], r8	# tmp882, MEM[base: _743, offset: 16B], _18
 8333      7010
 8334              	# sieve_extend.c:700:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 700:sieve_extend.c ****         copy_word += 2;
 8335              		.loc 1 700 52 view .LVU2855
 8336 3296 4C09D6   		or	rsi, r10	# tmp884, tmp883
 8337 3299 488974FB 		mov	QWORD PTR 8[rbx+rdi*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_362, step: 8, offset:
 8337      08
 8338              	.LVL398:
 701:sieve_extend.c ****         source_word += 2;
 8339              		.loc 1 701 9 is_stmt 1 view .LVU2856
 8340              	# sieve_extend.c:701:         copy_word += 2;
 701:sieve_extend.c ****         source_word += 2;
 8341              		.loc 1 701 19 is_stmt 0 view .LVU2857
 8342 329e 4C8D6702 		lea	r12, 2[rdi]	# tmp807,
 702:sieve_extend.c ****         distance += 2;
 8343              		.loc 1 702 9 is_stmt 1 view .LVU2858
 703:sieve_extend.c ****     }
 8344              		.loc 1 703 9 view .LVU2859
 703:sieve_extend.c ****     }
 8345              		.loc 1 703 9 is_stmt 0 view .LVU2860
 8346              	.LBE381:
 695:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8347              		.loc 1 695 11 is_stmt 1 view .LVU2861
 8348              	.LBB382:
 696:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 8349              		.loc 1 696 9 view .LVU2862
 8350              	.LVL399:
 697:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8351              		.loc 1 697 9 view .LVU2863
GAS LISTING /tmp/ccLUVin9.s 			page 231


 8352              	# sieve_extend.c:697:         bitword_t source1 = bitarray[source_word+1];
 697:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8353              		.loc 1 697 19 is_stmt 0 view .LVU2864
 8354 32a2 4C8B4818 		mov	r9, QWORD PTR 24[rax]	# source1, MEM[base: _743, offset: 8B]
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8355              		.loc 1 698 9 is_stmt 1 view .LVU2865
 8356              	# sieve_extend.c:698:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8357              		.loc 1 698 42 is_stmt 0 view .LVU2866
 8358 32a6 C4E2F3F7 		shrx	rsi, QWORD PTR 16[rax], rcx	# tmp890, MEM[base: _743, offset: 0B], _12
 8358      7010
 8359              	# sieve_extend.c:698:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8360              		.loc 1 698 63 view .LVU2867
 8361 32ac C442B9F7 		shlx	r14, r9, r8	# tmp891, source1, _18
 8361      F1
 8362              	# sieve_extend.c:698:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8363              		.loc 1 698 52 view .LVU2868
 8364 32b1 4C09F6   		or	rsi, r14	# tmp892, tmp891
 8365 32b4 4A8934E3 		mov	QWORD PTR [rbx+r12*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_362, step: 8, offset: 
 8366              	.LVL400:
 699:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 8367              		.loc 1 699 9 is_stmt 1 view .LVU2869
 700:sieve_extend.c ****         copy_word += 2;
 8368              		.loc 1 700 9 view .LVU2870
 8369              	# sieve_extend.c:700:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 700:sieve_extend.c ****         copy_word += 2;
 8370              		.loc 1 700 42 is_stmt 0 view .LVU2871
 8371 32b8 C442F3F7 		shrx	r9, r9, rcx	# tmp895, source1, _12
 8371      C9
 8372              	# sieve_extend.c:700:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 700:sieve_extend.c ****         copy_word += 2;
 8373              		.loc 1 700 63 view .LVU2872
 8374 32bd 4C8B5020 		mov	r10, QWORD PTR 32[rax]	# MEM[base: _743, offset: 16B], MEM[base: _743, offset: 16B]
 8375 32c1 C4C2B9F7 		shlx	rsi, r10, r8	# tmp894, MEM[base: _743, offset: 16B], _18
 8375      F2
 8376              	# sieve_extend.c:700:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 700:sieve_extend.c ****         copy_word += 2;
 8377              		.loc 1 700 52 view .LVU2873
 8378 32c6 4909F1   		or	r9, rsi	# tmp896, tmp894
 8379 32c9 4883C040 		add	rax, 64	# ivtmp.437,
 8380 32cd 4E894CE3 		mov	QWORD PTR 8[rbx+r12*8], r9	# MEM[base: bitarray_67(D), index: copy_word_362, step: 8, offset: 
 8380      08
 8381              	.LVL401:
 701:sieve_extend.c ****         source_word += 2;
 8382              		.loc 1 701 9 is_stmt 1 view .LVU2874
 8383              	# sieve_extend.c:701:         copy_word += 2;
 701:sieve_extend.c ****         source_word += 2;
 8384              		.loc 1 701 19 is_stmt 0 view .LVU2875
 8385 32d2 4C8D6704 		lea	r12, 4[rdi]	# copy_word,
 702:sieve_extend.c ****         distance += 2;
 8386              		.loc 1 702 9 is_stmt 1 view .LVU2876
 703:sieve_extend.c ****     }
 8387              		.loc 1 703 9 view .LVU2877
 703:sieve_extend.c ****     }
 8388              		.loc 1 703 9 is_stmt 0 view .LVU2878
GAS LISTING /tmp/ccLUVin9.s 			page 232


 8389              	.LBE382:
 695:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8390              		.loc 1 695 11 is_stmt 1 view .LVU2879
 8391              	.LBB383:
 696:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 8392              		.loc 1 696 9 view .LVU2880
 8393              	.LVL402:
 697:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8394              		.loc 1 697 9 view .LVU2881
 8395              	# sieve_extend.c:697:         bitword_t source1 = bitarray[source_word+1];
 697:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8396              		.loc 1 697 19 is_stmt 0 view .LVU2882
 8397 32d6 4C8B50E8 		mov	r10, QWORD PTR -24[rax]	# source1, MEM[base: _743, offset: 8B]
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8398              		.loc 1 698 9 is_stmt 1 view .LVU2883
 8399              	# sieve_extend.c:698:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8400              		.loc 1 698 42 is_stmt 0 view .LVU2884
 8401 32da C4E2F3F7 		shrx	rsi, QWORD PTR -32[rax], rcx	# tmp902, MEM[base: _743, offset: 0B], _12
 8401      70E0
 8402              	# sieve_extend.c:698:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8403              		.loc 1 698 63 view .LVU2885
 8404 32e0 C442B9F7 		shlx	r14, r10, r8	# tmp903, source1, _18
 8404      F2
 8405              	# sieve_extend.c:698:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8406              		.loc 1 698 52 view .LVU2886
 8407 32e5 4C09F6   		or	rsi, r14	# tmp904, tmp903
 8408 32e8 4A8934E3 		mov	QWORD PTR [rbx+r12*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_362, step: 8, offset: 
 8409              	.LVL403:
 699:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 8410              		.loc 1 699 9 is_stmt 1 view .LVU2887
 700:sieve_extend.c ****         copy_word += 2;
 8411              		.loc 1 700 9 view .LVU2888
 8412              	# sieve_extend.c:700:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 700:sieve_extend.c ****         copy_word += 2;
 8413              		.loc 1 700 42 is_stmt 0 view .LVU2889
 8414 32ec C442F3F7 		shrx	r10, r10, rcx	# tmp907, source1, _12
 8414      D2
 8415              	# sieve_extend.c:700:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 700:sieve_extend.c ****         copy_word += 2;
 8416              		.loc 1 700 63 view .LVU2890
 8417 32f1 4C8B48F0 		mov	r9, QWORD PTR -16[rax]	# MEM[base: _743, offset: 16B], MEM[base: _743, offset: 16B]
 8418 32f5 C4C2B9F7 		shlx	rsi, r9, r8	# tmp906, MEM[base: _743, offset: 16B], _18
 8418      F1
 8419              	# sieve_extend.c:700:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 700:sieve_extend.c ****         copy_word += 2;
 8420              		.loc 1 700 52 view .LVU2891
 8421 32fa 4909F2   		or	r10, rsi	# tmp908, tmp906
 8422 32fd 4E8954E3 		mov	QWORD PTR 8[rbx+r12*8], r10	# MEM[base: bitarray_67(D), index: copy_word_362, step: 8, offset:
 8422      08
 8423              	.LVL404:
 701:sieve_extend.c ****         source_word += 2;
 8424              		.loc 1 701 9 is_stmt 1 view .LVU2892
 8425              	# sieve_extend.c:701:         copy_word += 2;
 701:sieve_extend.c ****         source_word += 2;
GAS LISTING /tmp/ccLUVin9.s 			page 233


 8426              		.loc 1 701 19 is_stmt 0 view .LVU2893
 8427 3302 4C8D6706 		lea	r12, 6[rdi]	# copy_word,
 702:sieve_extend.c ****         distance += 2;
 8428              		.loc 1 702 9 is_stmt 1 view .LVU2894
 703:sieve_extend.c ****     }
 8429              		.loc 1 703 9 view .LVU2895
 703:sieve_extend.c ****     }
 8430              		.loc 1 703 9 is_stmt 0 view .LVU2896
 8431              	.LBE383:
 695:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8432              		.loc 1 695 11 is_stmt 1 view .LVU2897
 8433              	.LBB384:
 696:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 8434              		.loc 1 696 9 view .LVU2898
 8435              	.LVL405:
 697:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8436              		.loc 1 697 9 view .LVU2899
 8437              	# sieve_extend.c:697:         bitword_t source1 = bitarray[source_word+1];
 697:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8438              		.loc 1 697 19 is_stmt 0 view .LVU2900
 8439 3306 4C8B48F8 		mov	r9, QWORD PTR -8[rax]	# source1, MEM[base: _743, offset: 8B]
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8440              		.loc 1 698 9 is_stmt 1 view .LVU2901
 8441              	# sieve_extend.c:698:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8442              		.loc 1 698 42 is_stmt 0 view .LVU2902
 8443 330a C4E2F3F7 		shrx	rsi, QWORD PTR -16[rax], rcx	# tmp914, MEM[base: _743, offset: 0B], _12
 8443      70F0
 8444              	# sieve_extend.c:698:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8445              		.loc 1 698 63 view .LVU2903
 8446 3310 C442B9F7 		shlx	r14, r9, r8	# tmp915, source1, _18
 8446      F1
 8447              	# sieve_extend.c:698:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8448              		.loc 1 698 52 view .LVU2904
 8449 3315 4C09F6   		or	rsi, r14	# tmp916, tmp915
 8450 3318 4A8934E3 		mov	QWORD PTR [rbx+r12*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_362, step: 8, offset: 
 8451              	.LVL406:
 699:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 8452              		.loc 1 699 9 is_stmt 1 view .LVU2905
 700:sieve_extend.c ****         copy_word += 2;
 8453              		.loc 1 700 9 view .LVU2906
 8454              	# sieve_extend.c:701:         copy_word += 2;
 701:sieve_extend.c ****         source_word += 2;
 8455              		.loc 1 701 19 is_stmt 0 view .LVU2907
 8456 331c 4883C708 		add	rdi, 8	# copy_word,
 8457              	# sieve_extend.c:700:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 700:sieve_extend.c ****         copy_word += 2;
 8458              		.loc 1 700 42 view .LVU2908
 8459 3320 C442F3F7 		shrx	r9, r9, rcx	# tmp919, source1, _12
 8459      C9
 8460              	# sieve_extend.c:700:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 700:sieve_extend.c ****         copy_word += 2;
 8461              		.loc 1 700 63 view .LVU2909
 8462 3325 4C8B10   		mov	r10, QWORD PTR [rax]	# MEM[base: _743, offset: 16B], MEM[base: _743, offset: 16B]
 8463 3328 C4C2B9F7 		shlx	rsi, r10, r8	# tmp918, MEM[base: _743, offset: 16B], _18
GAS LISTING /tmp/ccLUVin9.s 			page 234


 8463      F2
 8464              	# sieve_extend.c:700:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 700:sieve_extend.c ****         copy_word += 2;
 8465              		.loc 1 700 52 view .LVU2910
 8466 332d 4909F1   		or	r9, rsi	# tmp920, tmp918
 8467              	.LBE384:
 8468              	# sieve_extend.c:695:     while (copy_word < fast_loop_stop_word) {
 695:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8469              		.loc 1 695 11 view .LVU2911
 8470 3330 48397C24 		cmp	QWORD PTR 48[rsp], rdi	# %sfp, copy_word
 8470      30
 8471 3335 4D8D143B 		lea	r10, [r11+rdi]	# distance,
 8472              	.LBB385:
 8473              	# sieve_extend.c:700:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 700:sieve_extend.c ****         copy_word += 2;
 8474              		.loc 1 700 52 view .LVU2912
 8475 3339 4E894CE3 		mov	QWORD PTR 8[rbx+r12*8], r9	# MEM[base: bitarray_67(D), index: copy_word_362, step: 8, offset: 
 8475      08
 8476              	.LVL407:
 701:sieve_extend.c ****         source_word += 2;
 8477              		.loc 1 701 9 is_stmt 1 view .LVU2913
 702:sieve_extend.c ****         distance += 2;
 8478              		.loc 1 702 9 view .LVU2914
 703:sieve_extend.c ****     }
 8479              		.loc 1 703 9 view .LVU2915
 703:sieve_extend.c ****     }
 8480              		.loc 1 703 9 is_stmt 0 view .LVU2916
 8481              	.LBE385:
 695:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8482              		.loc 1 695 11 is_stmt 1 view .LVU2917
 8483 333e 0F8732FF 		ja	.L517	#,
 8483      FFFF
 8484 3344 4C8B6424 		mov	r12, QWORD PTR 56[rsp]	# tmp.369, %sfp
 8484      38
 8485 3349 E930F5FF 		jmp	.L518	#
 8485      FF
 8486              	.LVL408:
 8487 334e 6690     		.p2align 4,,7
 8488              		.p2align 3
 8489              	.L535:
 695:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8490              		.loc 1 695 11 is_stmt 0 view .LVU2918
 8491              	.LBE388:
 8492              	.LBE407:
 8493              	# sieve_extend.c:804:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 804:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8494              		.loc 1 804 5 view .LVU2919
 8495 3350 4C89E9   		mov	rcx, r13	# tmp.357, tmp.370
 8496 3353 E994F9FF 		jmp	.L519	#
 8496      FF
 8497              	.LVL409:
 8498              	.L689:
 8499              	.LBB408:
 8500              	.LBB389:
 8501              	.LBB386:
 696:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 8502              		.loc 1 696 9 is_stmt 1 view .LVU2920
GAS LISTING /tmp/ccLUVin9.s 			page 235


 697:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8503              		.loc 1 697 9 view .LVU2921
 8504              	# sieve_extend.c:697:         bitword_t source1 = bitarray[source_word+1];
 697:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8505              		.loc 1 697 19 is_stmt 0 view .LVU2922
 8506 3358 4C8B4808 		mov	r9, QWORD PTR 8[rax]	# source1, MEM[base: _743, offset: 8B]
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8507              		.loc 1 698 9 is_stmt 1 view .LVU2923
 8508              	# sieve_extend.c:698:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8509              		.loc 1 698 42 is_stmt 0 view .LVU2924
 8510 335c 4589F8   		mov	r8d, r15d	# tmp1274, _12
 8511 335f C4E2BBF7 		shrx	rsi, QWORD PTR [rax], r8	# tmp1046, MEM[base: _743, offset: 0B], tmp1274
 8511      30
 8512              	# sieve_extend.c:698:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8513              		.loc 1 698 63 view .LVU2925
 8514 3364 4189D0   		mov	r8d, edx	# tmp1275, _18
 8515 3367 C442B9F7 		shlx	r8, r9, r8	# tmp1047, source1, tmp1275
 8515      C1
 8516              	# sieve_extend.c:698:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8517              		.loc 1 698 52 view .LVU2926
 8518 336c 4C09C6   		or	rsi, r8	# tmp1048, tmp1047
 8519 336f 488934FB 		mov	QWORD PTR [rbx+rdi*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_362, step: 8, offset: 
 8520              	.LVL410:
 699:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 8521              		.loc 1 699 9 is_stmt 1 view .LVU2927
 700:sieve_extend.c ****         copy_word += 2;
 8522              		.loc 1 700 9 view .LVU2928
 8523              	# sieve_extend.c:698:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8524              		.loc 1 698 42 is_stmt 0 view .LVU2929
 8525 3373 4589FA   		mov	r10d, r15d	# _12, shift
 8526              	# sieve_extend.c:700:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 700:sieve_extend.c ****         copy_word += 2;
 8527              		.loc 1 700 63 view .LVU2930
 8528 3376 488B4010 		mov	rax, QWORD PTR 16[rax]	# MEM[base: _743, offset: 16B], MEM[base: _743, offset: 16B]
 8529              	# sieve_extend.c:698:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 698:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8530              		.loc 1 698 63 view .LVU2931
 8531 337a 4189D6   		mov	r14d, edx	# _18, shift_flipped
 8532              	# sieve_extend.c:700:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 700:sieve_extend.c ****         copy_word += 2;
 8533              		.loc 1 700 42 view .LVU2932
 8534 337d C442ABF7 		shrx	r9, r9, r10	# tmp1051, source1, tmp1277
 8534      C9
 8535              	# sieve_extend.c:700:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 700:sieve_extend.c ****         copy_word += 2;
 8536              		.loc 1 700 63 view .LVU2933
 8537 3382 C46289F7 		shlx	r8, rax, r14	# tmp1050, MEM[base: _743, offset: 16B], tmp1276
 8537      C0
 8538              	# sieve_extend.c:700:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 700:sieve_extend.c ****         copy_word += 2;
 8539              		.loc 1 700 52 view .LVU2934
 8540 3387 4D09C8   		or	r8, r9	# tmp1052, tmp1051
 8541 338a 488D4120 		lea	rax, 32[rcx]	# ivtmp.437,
GAS LISTING /tmp/ccLUVin9.s 			page 236


 8542 338e 4C8944FB 		mov	QWORD PTR 8[rbx+rdi*8], r8	# MEM[base: bitarray_67(D), index: copy_word_362, step: 8, offset: 
 8542      08
 8543              	.LVL411:
 701:sieve_extend.c ****         source_word += 2;
 8544              		.loc 1 701 9 is_stmt 1 view .LVU2935
 8545              	# sieve_extend.c:701:         copy_word += 2;
 701:sieve_extend.c ****         source_word += 2;
 8546              		.loc 1 701 19 is_stmt 0 view .LVU2936
 8547 3393 498D7D04 		lea	rdi, 4[r13]	# copy_word,
 702:sieve_extend.c ****         distance += 2;
 8548              		.loc 1 702 9 is_stmt 1 view .LVU2937
 703:sieve_extend.c ****     }
 8549              		.loc 1 703 9 view .LVU2938
 703:sieve_extend.c ****     }
 8550              		.loc 1 703 9 is_stmt 0 view .LVU2939
 8551              	.LBE386:
 695:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8552              		.loc 1 695 11 is_stmt 1 view .LVU2940
 8553 3397 E948FEFF 		jmp	.L636	#
 8553      FF
 8554              	.LBE389:
 8555              	.LBE408:
 8556              		.cfi_endproc
 8557              	.LFE75:
 8559              		.section	.rodata.str1.1,"aMS",@progbits,1
 8560              	.LC4:
 8561 0000 25336A75 		.string	"%3ju "
 8561      2000
 8562              	.LC5:
 8563 0006 0A466F75 		.string	"\nFound %ju primes until %ju\n"
 8563      6E642025 
 8563      6A752070 
 8563      72696D65 
 8563      7320756E 
 8564              		.text
 8565 339c 0F1F4000 		.p2align 4
 8567              	show_primes.isra.0:
 8568              	.LVL412:
 8569              	.LFB100:
 955:sieve_extend.c ****     counter_t primeCount = 1;    // We already have 2
 8570              		.loc 1 955 13 view -0
 8571              		.cfi_startproc
 8572              	.LBB409:
 957:sieve_extend.c ****         primeCount++;
 8573              		.loc 1 957 30 view .LVU2942
 8574              	.LBE409:
 8575              	# sieve_extend.c:955: static void show_primes(struct sieve_t *sieve, counter_t maxFactor) {
 955:sieve_extend.c ****     counter_t primeCount = 1;    // We already have 2
 8576              		.loc 1 955 13 is_stmt 0 view .LVU2943
 8577 33a0 4157     		push	r15	#
 8578              		.cfi_def_cfa_offset 16
 8579              		.cfi_offset 15, -16
 8580 33a2 4156     		push	r14	#
 8581              		.cfi_def_cfa_offset 24
 8582              		.cfi_offset 14, -24
 8583 33a4 4155     		push	r13	#
 8584              		.cfi_def_cfa_offset 32
GAS LISTING /tmp/ccLUVin9.s 			page 237


 8585              		.cfi_offset 13, -32
 8586 33a6 4154     		push	r12	#
 8587              		.cfi_def_cfa_offset 40
 8588              		.cfi_offset 12, -40
 8589 33a8 4989F4   		mov	r12, rsi	# ISRA.73, tmp168
 8590 33ab 55       		push	rbp	#
 8591              		.cfi_def_cfa_offset 48
 8592              		.cfi_offset 6, -48
 8593 33ac 53       		push	rbx	#
 8594              		.cfi_def_cfa_offset 56
 8595              		.cfi_offset 3, -56
 8596 33ad 488D6424 		lea	rsp, -8[rsp]	#,
 8596      F8
 8597              		.cfi_def_cfa_offset 64
 8598              	.LBB426:
 8599              	# sieve_extend.c:957:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 957:sieve_extend.c ****         primeCount++;
 8600              		.loc 1 957 44 view .LVU2944
 8601 33b2 488B36   		mov	rsi, QWORD PTR [rsi]	# prephitmp_86, *ISRA.73_32(D)
 8602              	# sieve_extend.c:957:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 957:sieve_extend.c ****         primeCount++;
 8603              		.loc 1 957 5 view .LVU2945
 8604 33b5 4883FE01 		cmp	rsi, 1	# prephitmp_86,
 8605 33b9 0F867501 		jbe	.L697	#,
 8605      0000
 8606              	# sieve_extend.c:959:         if (factor < maxFactor/2) {
 959:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 8607              		.loc 1 959 31 view .LVU2946
 8608 33bf 48D1EA   		shr	rdx	# maxFactor
 8609              	.LVL413:
 959:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 8610              		.loc 1 959 31 view .LVU2947
 8611 33c2 4989FD   		mov	r13, rdi	# ISRA.72, tmp167
 8612              	# sieve_extend.c:957:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 957:sieve_extend.c ****         primeCount++;
 8613              		.loc 1 957 20 view .LVU2948
 8614 33c5 BB010000 		mov	ebx, 1	# factor,
 8614      00
 8615              	# sieve_extend.c:959:         if (factor < maxFactor/2) {
 959:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 8616              		.loc 1 959 31 view .LVU2949
 8617 33ca 4889D5   		mov	rbp, rdx	# _4, maxFactor
 8618              	.LBE426:
 8619              	# sieve_extend.c:956:     counter_t primeCount = 1;    // We already have 2
 956:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitarray, factor+
 8620              		.loc 1 956 15 view .LVU2950
 8621 33cd 41BF0100 		mov	r15d, 1	# primeCount,
 8621      0000
 8622              	.LBB427:
 8623              	.LBB410:
 8624              	.LBB411:
 8625              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 8626              		.file 3 "/usr/include/x86_64-linux-gnu/bits/stdio2.h"
   1:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** /* Checking macros for stdio functions.
   2:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    Copyright (C) 2004-2020 Free Software Foundation, Inc.
   3:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    This file is part of the GNU C Library.
   4:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
GAS LISTING /tmp/ccLUVin9.s 			page 238


   5:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    The GNU C Library is free software; you can redistribute it and/or
   6:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    modify it under the terms of the GNU Lesser General Public
   7:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    License as published by the Free Software Foundation; either
   8:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    version 2.1 of the License, or (at your option) any later version.
   9:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  10:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    The GNU C Library is distributed in the hope that it will be useful,
  11:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  13:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    Lesser General Public License for more details.
  14:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  15:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    You should have received a copy of the GNU Lesser General Public
  16:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    License along with the GNU C Library; if not, see
  17:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    <https://www.gnu.org/licenses/>.  */
  18:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  19:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #ifndef _BITS_STDIO2_H
  20:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #define _BITS_STDIO2_H 1
  21:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  22:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #ifndef _STDIO_H
  23:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # error "Never include <bits/stdio2.h> directly; use <stdio.h> instead."
  24:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
  25:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  26:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __sprintf_chk (char *__restrict __s, int __flag, size_t __slen,
  27:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  const char *__restrict __format, ...) __THROW;
  28:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vsprintf_chk (char *__restrict __s, int __flag, size_t __slen,
  29:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   const char *__restrict __format,
  30:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   __gnuc_va_list __ap) __THROW;
  31:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  32:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #ifdef __va_arg_pack
  33:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  34:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (sprintf (char *__restrict __s, const char *__restrict __fmt, ...))
  35:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  36:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___sprintf_chk (__s, __USE_FORTIFY_LEVEL - 1,
  37:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				  __bos (__s), __fmt, __va_arg_pack ());
  38:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  39:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #elif !defined __cplusplus
  40:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # define sprintf(str, ...) \
  41:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   __builtin___sprintf_chk (str, __USE_FORTIFY_LEVEL - 1, __bos (str), \
  42:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   __VA_ARGS__)
  43:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
  44:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  45:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  46:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (vsprintf (char *__restrict __s, const char *__restrict __fmt,
  47:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		 __gnuc_va_list __ap))
  48:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  49:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___vsprintf_chk (__s, __USE_FORTIFY_LEVEL - 1,
  50:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				   __bos (__s), __fmt, __ap);
  51:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  52:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  53:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #if defined __USE_ISOC99 || defined __USE_UNIX98
  54:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  55:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __snprintf_chk (char *__restrict __s, size_t __n, int __flag,
  56:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   size_t __slen, const char *__restrict __format,
  57:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   ...) __THROW;
  58:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vsnprintf_chk (char *__restrict __s, size_t __n, int __flag,
  59:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    size_t __slen, const char *__restrict __format,
  60:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    __gnuc_va_list __ap) __THROW;
  61:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
GAS LISTING /tmp/ccLUVin9.s 			page 239


  62:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # ifdef __va_arg_pack
  63:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  64:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (snprintf (char *__restrict __s, size_t __n,
  65:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		 const char *__restrict __fmt, ...))
  66:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  67:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
  68:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				   __bos (__s), __fmt, __va_arg_pack ());
  69:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  70:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # elif !defined __cplusplus
  71:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #  define snprintf(str, len, ...) \
  72:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   __builtin___snprintf_chk (str, len, __USE_FORTIFY_LEVEL - 1, __bos (str), \
  73:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    __VA_ARGS__)
  74:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # endif
  75:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  76:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  77:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (vsnprintf (char *__restrict __s, size_t __n,
  78:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		  const char *__restrict __fmt, __gnuc_va_list __ap))
  79:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  80:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___vsnprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
  81:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				    __bos (__s), __fmt, __ap);
  82:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  83:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  84:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
  85:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  86:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #if __USE_FORTIFY_LEVEL > 1
  87:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  88:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __fprintf_chk (FILE *__restrict __stream, int __flag,
  89:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  const char *__restrict __format, ...);
  90:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __printf_chk (int __flag, const char *__restrict __format, ...);
  91:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vfprintf_chk (FILE *__restrict __stream, int __flag,
  92:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   const char *__restrict __format, __gnuc_va_list __ap);
  93:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vprintf_chk (int __flag, const char *__restrict __format,
  94:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  __gnuc_va_list __ap);
  95:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  96:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # ifdef __va_arg_pack
  97:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** fprintf (FILE *__restrict __stream, const char *__restrict __fmt, ...)
  99:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt,
 101:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 102:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
 103:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
 104:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** printf (const char *__restrict __fmt, ...)
 106:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 107:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __printf_chk (__USE_FORTIFY_LEVEL - 1, __fmt, __va_arg_pack ());
 8627              		.loc 3 107 10 view .LVU2951
 8628 33d3 49BECDCC 		movabs	r14, -3689348814741910323	# tmp136,
 8628      CCCCCCCC 
 8628      CCCC
 8629              	.LVL414:
 8630 33dd 0F1F00   		.p2align 4
 8631              		.p2align 3
 8632              	.L696:
 8633              		.loc 3 107 10 view .LVU2952
 8634              	.LBE411:
 8635              	.LBE410:
GAS LISTING /tmp/ccLUVin9.s 			page 240


 958:sieve_extend.c ****         if (factor < maxFactor/2) {
 8636              		.loc 1 958 9 is_stmt 1 view .LVU2953
 8637              	# sieve_extend.c:958:         primeCount++;
 958:sieve_extend.c ****         if (factor < maxFactor/2) {
 8638              		.loc 1 958 19 is_stmt 0 view .LVU2954
 8639 33e0 4983C701 		add	r15, 1	# primeCount,
 8640              	.LVL415:
 959:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 8641              		.loc 1 959 9 is_stmt 1 view .LVU2955
 8642              	# sieve_extend.c:959:         if (factor < maxFactor/2) {
 959:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 8643              		.loc 1 959 12 is_stmt 0 view .LVU2956
 8644 33e4 4839DD   		cmp	rbp, rbx	# _4, factor
 8645 33e7 0F87FB00 		ja	.L720	#,
 8645      0000
 8646              	.L692:
 957:sieve_extend.c ****         primeCount++;
 8647              		.loc 1 957 52 is_stmt 1 view .LVU2957
 8648              	.LVL416:
 8649              	# sieve_extend.c:957:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 957:sieve_extend.c ****         primeCount++;
 8650              		.loc 1 957 61 is_stmt 0 view .LVU2958
 8651 33ed 4D8B4500 		mov	r8, QWORD PTR 0[r13]	# _11, *ISRA.72_33(D)
 8652 33f1 4883C301 		add	rbx, 1	# factor,
 8653              	.LVL417:
 8654              	.L719:
 8655              	.LBB416:
 8656              	.LBI416:
 121:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 8657              		.loc 1 121 25 is_stmt 1 view .LVU2959
 8658              	.LBB417:
 122:sieve_extend.c ****     return index;
 8659              		.loc 1 122 5 view .LVU2960
 122:sieve_extend.c ****     return index;
 8660              		.loc 1 122 11 view .LVU2961
 8661              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8662              		.loc 1 122 21 is_stmt 0 view .LVU2962
 8663 33f5 4889D9   		mov	rcx, rbx	# tmp124, factor
 8664 33f8 48C1E906 		shr	rcx, 6	# tmp124,
 8665              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8666              		.loc 1 122 12 view .LVU2963
 8667 33fc 4D8B0CC8 		mov	r9, QWORD PTR [r8+rcx*8]	# *_39,* _11
 8668              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8669              		.loc 1 122 11 view .LVU2964
 8670 3400 490FA3D9 		bt	r9, rbx	# *_39, factor
 8671 3404 0F83A600 		jnc	.L694	#,
 8671      0000
 122:sieve_extend.c ****     return index;
 8672              		.loc 1 122 58 is_stmt 1 view .LVU2965
 8673              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8674              		.loc 1 122 63 is_stmt 0 view .LVU2966
 8675 340a 4C8D5301 		lea	r10, 1[rbx]	# tmp138,
 8676              	.LVL418:
GAS LISTING /tmp/ccLUVin9.s 			page 241


 8677              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8678              		.loc 1 122 21 view .LVU2967
 8679 340e 4D89D3   		mov	r11, r10	# tmp129, factor
 8680              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8681              		.loc 1 122 63 view .LVU2968
 8682 3411 4C89D3   		mov	rbx, r10	# factor, tmp138
 122:sieve_extend.c ****     return index;
 8683              		.loc 1 122 11 is_stmt 1 view .LVU2969
 8684              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8685              		.loc 1 122 21 is_stmt 0 view .LVU2970
 8686 3414 49C1EB06 		shr	r11, 6	# tmp129,
 8687              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8688              		.loc 1 122 12 view .LVU2971
 8689 3418 4B8B04D8 		mov	rax, QWORD PTR [r8+r11*8]	# *_16, *_16
 8690              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8691              		.loc 1 122 11 view .LVU2972
 8692 341c 4C0FA3D0 		bt	rax, r10	# *_16, factor
 8693 3420 0F838A00 		jnc	.L694	#,
 8693      0000
 122:sieve_extend.c ****     return index;
 8694              		.loc 1 122 58 is_stmt 1 view .LVU2973
 8695              	.LVL419:
 8696              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8697              		.loc 1 122 63 is_stmt 0 view .LVU2974
 8698 3426 4883C301 		add	rbx, 1	# factor,
 8699              	.LVL420:
 122:sieve_extend.c ****     return index;
 8700              		.loc 1 122 11 is_stmt 1 view .LVU2975
 8701              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8702              		.loc 1 122 21 is_stmt 0 view .LVU2976
 8703 342a 4889DA   		mov	rdx, rbx	# tmp139, factor
 8704 342d 48C1EA06 		shr	rdx, 6	# tmp139,
 8705              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8706              		.loc 1 122 12 view .LVU2977
 8707 3431 498B3CD0 		mov	rdi, QWORD PTR [r8+rdx*8]	# *_16, *_16
 8708              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8709              		.loc 1 122 11 view .LVU2978
 8710 3435 480FA3DF 		bt	rdi, rbx	# *_16, factor
 8711 3439 7375     		jnc	.L694	#,
 122:sieve_extend.c ****     return index;
 8712              		.loc 1 122 58 is_stmt 1 view .LVU2979
 8713              	.LVL421:
 8714              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8715              		.loc 1 122 63 is_stmt 0 view .LVU2980
 8716 343b 498D5A02 		lea	rbx, 2[r10]	# factor,
 8717              	.LVL422:
 122:sieve_extend.c ****     return index;
GAS LISTING /tmp/ccLUVin9.s 			page 242


 8718              		.loc 1 122 11 is_stmt 1 view .LVU2981
 8719              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8720              		.loc 1 122 21 is_stmt 0 view .LVU2982
 8721 343f 4889D9   		mov	rcx, rbx	# tmp143, factor
 8722 3442 48C1E906 		shr	rcx, 6	# tmp143,
 8723              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8724              		.loc 1 122 12 view .LVU2983
 8725 3446 4D8B0CC8 		mov	r9, QWORD PTR [r8+rcx*8]	# *_16, *_16
 8726              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8727              		.loc 1 122 11 view .LVU2984
 8728 344a 490FA3D9 		bt	r9, rbx	# *_16, factor
 8729 344e 7360     		jnc	.L694	#,
 122:sieve_extend.c ****     return index;
 8730              		.loc 1 122 58 is_stmt 1 view .LVU2985
 8731              	.LVL423:
 8732              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8733              		.loc 1 122 63 is_stmt 0 view .LVU2986
 8734 3450 498D5A03 		lea	rbx, 3[r10]	# factor,
 8735              	.LVL424:
 122:sieve_extend.c ****     return index;
 8736              		.loc 1 122 11 is_stmt 1 view .LVU2987
 8737              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8738              		.loc 1 122 21 is_stmt 0 view .LVU2988
 8739 3454 4989DB   		mov	r11, rbx	# tmp147, factor
 8740 3457 49C1EB06 		shr	r11, 6	# tmp147,
 8741              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8742              		.loc 1 122 12 view .LVU2989
 8743 345b 4B8B04D8 		mov	rax, QWORD PTR [r8+r11*8]	# *_16, *_16
 8744              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8745              		.loc 1 122 11 view .LVU2990
 8746 345f 480FA3D8 		bt	rax, rbx	# *_16, factor
 8747 3463 734B     		jnc	.L694	#,
 122:sieve_extend.c ****     return index;
 8748              		.loc 1 122 58 is_stmt 1 view .LVU2991
 8749              	.LVL425:
 8750              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8751              		.loc 1 122 63 is_stmt 0 view .LVU2992
 8752 3465 498D5A04 		lea	rbx, 4[r10]	# factor,
 8753              	.LVL426:
 122:sieve_extend.c ****     return index;
 8754              		.loc 1 122 11 is_stmt 1 view .LVU2993
 8755              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8756              		.loc 1 122 21 is_stmt 0 view .LVU2994
 8757 3469 4889DA   		mov	rdx, rbx	# tmp151, factor
 8758 346c 48C1EA06 		shr	rdx, 6	# tmp151,
 8759              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8760              		.loc 1 122 12 view .LVU2995
GAS LISTING /tmp/ccLUVin9.s 			page 243


 8761 3470 498B3CD0 		mov	rdi, QWORD PTR [r8+rdx*8]	# *_16, *_16
 8762              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8763              		.loc 1 122 11 view .LVU2996
 8764 3474 480FA3DF 		bt	rdi, rbx	# *_16, factor
 8765 3478 7336     		jnc	.L694	#,
 122:sieve_extend.c ****     return index;
 8766              		.loc 1 122 58 is_stmt 1 view .LVU2997
 8767              	.LVL427:
 8768              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8769              		.loc 1 122 63 is_stmt 0 view .LVU2998
 8770 347a 498D5A05 		lea	rbx, 5[r10]	# factor,
 8771              	.LVL428:
 122:sieve_extend.c ****     return index;
 8772              		.loc 1 122 11 is_stmt 1 view .LVU2999
 8773              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8774              		.loc 1 122 21 is_stmt 0 view .LVU3000
 8775 347e 4889D9   		mov	rcx, rbx	# tmp155, factor
 8776 3481 48C1E906 		shr	rcx, 6	# tmp155,
 8777              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8778              		.loc 1 122 12 view .LVU3001
 8779 3485 4D8B0CC8 		mov	r9, QWORD PTR [r8+rcx*8]	# *_16, *_16
 8780              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8781              		.loc 1 122 11 view .LVU3002
 8782 3489 490FA3D9 		bt	r9, rbx	# *_16, factor
 8783 348d 7321     		jnc	.L694	#,
 122:sieve_extend.c ****     return index;
 8784              		.loc 1 122 58 is_stmt 1 view .LVU3003
 8785              	.LVL429:
 8786              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8787              		.loc 1 122 63 is_stmt 0 view .LVU3004
 8788 348f 498D5A06 		lea	rbx, 6[r10]	# factor,
 8789              	.LVL430:
 122:sieve_extend.c ****     return index;
 8790              		.loc 1 122 11 is_stmt 1 view .LVU3005
 8791              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8792              		.loc 1 122 21 is_stmt 0 view .LVU3006
 8793 3493 4989DB   		mov	r11, rbx	# tmp159, factor
 8794 3496 49C1EB06 		shr	r11, 6	# tmp159,
 8795              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8796              		.loc 1 122 12 view .LVU3007
 8797 349a 4B8B04D8 		mov	rax, QWORD PTR [r8+r11*8]	# *_16, *_16
 8798              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8799              		.loc 1 122 11 view .LVU3008
 8800 349e 480FA3D8 		bt	rax, rbx	# *_16, factor
 8801 34a2 730C     		jnc	.L694	#,
 122:sieve_extend.c ****     return index;
 8802              		.loc 1 122 58 is_stmt 1 view .LVU3009
 8803              	.LVL431:
GAS LISTING /tmp/ccLUVin9.s 			page 244


 8804              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8805              		.loc 1 122 63 is_stmt 0 view .LVU3010
 8806 34a4 498D5A07 		lea	rbx, 7[r10]	# factor,
 8807              	.LVL432:
 122:sieve_extend.c ****     return index;
 8808              		.loc 1 122 11 is_stmt 1 view .LVU3011
 8809 34a8 E948FFFF 		jmp	.L719	#
 8809      FF
 8810 34ad 0F1F00   		.p2align 4,,7
 8811              		.p2align 3
 8812              	.L694:
 8813              	.LVL433:
 122:sieve_extend.c ****     return index;
 8814              		.loc 1 122 11 is_stmt 0 view .LVU3012
 8815              	.LBE417:
 8816              	.LBE416:
 957:sieve_extend.c ****         primeCount++;
 8817              		.loc 1 957 30 is_stmt 1 view .LVU3013
 8818              	# sieve_extend.c:957:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 957:sieve_extend.c ****         primeCount++;
 8819              		.loc 1 957 5 is_stmt 0 view .LVU3014
 8820 34b0 4839F3   		cmp	rbx, rsi	# factor, prephitmp_86
 8821 34b3 0F8227FF 		jb	.L696	#,
 8821      FFFF
 8822              	.LVL434:
 8823              	.L691:
 957:sieve_extend.c ****         primeCount++;
 8824              		.loc 1 957 5 view .LVU3015
 8825              	.LBE427:
 964:sieve_extend.c **** }
 8826              		.loc 1 964 5 is_stmt 1 view .LVU3016
 8827              	.LBB428:
 8828              	.LBI428:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 8829              		.loc 3 105 1 view .LVU3017
 8830              	.LBB429:
 8831              		.loc 3 107 3 view .LVU3018
 8832              	.LBE429:
 8833              	.LBE428:
 8834              	# sieve_extend.c:965: }
 965:sieve_extend.c **** 
 8835              		.loc 1 965 1 is_stmt 0 view .LVU3019
 8836 34b9 488D6424 		lea	rsp, 8[rsp]	#,
 8836      08
 8837              		.cfi_remember_state
 8838              		.cfi_def_cfa_offset 56
 8839              	.LBB433:
 8840              	.LBB430:
 8841              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 8842              		.loc 3 107 10 view .LVU3020
 8843 34be 4C89FA   		mov	rdx, r15	#, primeCount
 8844              	.LBE430:
 8845              	.LBE433:
 8846              	# sieve_extend.c:965: }
 965:sieve_extend.c **** 
 8847              		.loc 1 965 1 view .LVU3021
GAS LISTING /tmp/ccLUVin9.s 			page 245


 8848 34c1 5B       		pop	rbx	#
 8849              		.cfi_def_cfa_offset 48
 8850              	# sieve_extend.c:964:     printf("\nFound %ju primes until %ju\n",(uintmax_t)primeCount, (uintmax_t
 964:sieve_extend.c **** }
 8851              		.loc 1 964 5 view .LVU3022
 8852 34c2 488D4C36 		lea	rcx, 1[rsi+rsi]	# tmp135,
 8852      01
 8853              	.LBB434:
 8854              	.LBB431:
 8855              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 8856              		.loc 3 107 10 view .LVU3023
 8857 34c7 BF010000 		mov	edi, 1	#,
 8857      00
 8858 34cc 31C0     		xor	eax, eax	#
 8859 34ce 488D3500 		lea	rsi, .LC5[rip]	#,
 8859      000000
 8860              	.LBE431:
 8861              	.LBE434:
 8862              	# sieve_extend.c:965: }
 965:sieve_extend.c **** 
 8863              		.loc 1 965 1 view .LVU3024
 8864 34d5 5D       		pop	rbp	#
 8865              		.cfi_def_cfa_offset 40
 8866 34d6 415C     		pop	r12	#
 8867              		.cfi_def_cfa_offset 32
 8868 34d8 415D     		pop	r13	#
 8869              		.cfi_def_cfa_offset 24
 8870 34da 415E     		pop	r14	#
 8871              		.cfi_def_cfa_offset 16
 8872 34dc 415F     		pop	r15	#
 8873              		.cfi_def_cfa_offset 8
 8874              	.LBB435:
 8875              	.LBB432:
 8876              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 8877              		.loc 3 107 10 view .LVU3025
 8878 34de E9000000 		jmp	__printf_chk@PLT	#
 8878      00
 8879              	.LVL435:
 8880              		.p2align 4,,7
 8881 34e3 0F1F4400 		.p2align 3
 8881      00
 8882              	.L720:
 8883              		.cfi_restore_state
 8884              		.loc 3 107 10 view .LVU3026
 8885              	.LBE432:
 8886              	.LBE435:
 8887              	.LBB436:
 960:sieve_extend.c ****             if (primeCount % 10 == 0) printf("\n");
 8888              		.loc 1 960 13 is_stmt 1 view .LVU3027
 8889              	.LBB418:
 8890              	.LBI410:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 8891              		.loc 3 105 1 view .LVU3028
 8892              	.LBB412:
 8893              		.loc 3 107 3 view .LVU3029
 8894              	.LBE412:
 8895              	.LBE418:
GAS LISTING /tmp/ccLUVin9.s 			page 246


 8896              	# sieve_extend.c:960:             printf("%3ju ",(uintmax_t)factor*2+1);
 960:sieve_extend.c ****             if (primeCount % 10 == 0) printf("\n");
 8897              		.loc 1 960 13 is_stmt 0 view .LVU3030
 8898 34e8 488D541B 		lea	rdx, 1[rbx+rbx]	# tmp111,
 8898      01
 8899              	.LBB419:
 8900              	.LBB413:
 8901              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 8902              		.loc 3 107 10 view .LVU3031
 8903 34ed BF010000 		mov	edi, 1	#,
 8903      00
 8904 34f2 31C0     		xor	eax, eax	#
 8905 34f4 488D3500 		lea	rsi, .LC4[rip]	#,
 8905      000000
 8906 34fb E8000000 		call	__printf_chk@PLT	#
 8906      00
 8907              	.LVL436:
 8908              		.loc 3 107 10 view .LVU3032
 8909              	.LBE413:
 8910              	.LBE419:
 961:sieve_extend.c ****         }
 8911              		.loc 1 961 13 is_stmt 1 view .LVU3033
 8912              	.LBB420:
 8913              	.LBB414:
 8914              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 8915              		.loc 3 107 10 is_stmt 0 view .LVU3034
 8916 3500 4C89F8   		mov	rax, r15	# tmp120, primeCount
 8917              	.LBE414:
 8918              	.LBE420:
 8919              	# sieve_extend.c:961:             if (primeCount % 10 == 0) printf("\n");
 961:sieve_extend.c ****         }
 8920              		.loc 1 961 16 view .LVU3035
 8921 3503 48BF9999 		movabs	rdi, 1844674407370955161	# tmp172,
 8921      99999999 
 8921      9919
 8922              	.LBB421:
 8923              	.LBB415:
 8924              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 8925              		.loc 3 107 10 view .LVU3036
 8926 350d 490FAFC6 		imul	rax, r14	# tmp120, tmp136
 8927 3511 C4E3FBF0 		rorx	rdx, rax, 1	# tmp122, tmp120,
 8927      D001
 8928              	.LBE415:
 8929              	.LBE421:
 8930              	# sieve_extend.c:961:             if (primeCount % 10 == 0) printf("\n");
 961:sieve_extend.c ****         }
 8931              		.loc 1 961 16 view .LVU3037
 8932 3517 4839FA   		cmp	rdx, rdi	# tmp122, tmp172
 8933 351a 760C     		jbe	.L693	#,
 8934              	.L718:
 8935 351c 498B3424 		mov	rsi, QWORD PTR [r12]	# prephitmp_86, *ISRA.73_32(D)
 8936              	.LBB422:
 8937              	.LBB423:
 8938              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 8939              		.loc 3 107 10 view .LVU3038
 8940 3520 E9C8FEFF 		jmp	.L692	#
 8940      FF
GAS LISTING /tmp/ccLUVin9.s 			page 247


 8941              		.p2align 4,,7
 8942 3525 0F1F00   		.p2align 3
 8943              	.L693:
 8944              	.LBE423:
 8945              	.LBE422:
 961:sieve_extend.c ****         }
 8946              		.loc 1 961 39 is_stmt 1 view .LVU3039
 8947              	.LVL437:
 8948              	.LBB425:
 8949              	.LBI422:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 8950              		.loc 3 105 1 view .LVU3040
 8951              	.LBB424:
 8952              		.loc 3 107 3 view .LVU3041
 8953              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 8954              		.loc 3 107 10 is_stmt 0 view .LVU3042
 8955 3528 BF0A0000 		mov	edi, 10	#,
 8955      00
 8956 352d E8000000 		call	putchar@PLT	#
 8956      00
 8957              	.LVL438:
 8958 3532 EBE8     		jmp	.L718	#
 8959              	.LVL439:
 8960              	.L697:
 8961              		.loc 3 107 10 view .LVU3043
 8962              	.LBE424:
 8963              	.LBE425:
 8964              	.LBE436:
 8965              	# sieve_extend.c:956:     counter_t primeCount = 1;    // We already have 2
 956:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitarray, factor+
 8966              		.loc 1 956 15 view .LVU3044
 8967 3534 41BF0100 		mov	r15d, 1	# primeCount,
 8967      0000
 8968 353a E97AFFFF 		jmp	.L691	#
 8968      FF
 8969              		.cfi_endproc
 8970              	.LFE100:
 8972 353f 90       		.p2align 4
 8974              	sieve_shake:
 8975              	.LVL440:
 8976              	.LFB79:
 914:sieve_extend.c ****     struct sieve_t *sieve = sieve_create(maxints);
 8977              		.loc 1 914 88 is_stmt 1 view -0
 8978              		.cfi_startproc
 915:sieve_extend.c ****     bitword_t* bitarray = sieve->bitarray;
 8979              		.loc 1 915 5 view .LVU3046
 8980              	# sieve_extend.c:914: static struct sieve_t* sieve_shake(const counter_t maxints, const counter_t b
 914:sieve_extend.c ****     struct sieve_t *sieve = sieve_create(maxints);
 8981              		.loc 1 914 88 is_stmt 0 view .LVU3047
 8982 3540 4157     		push	r15	#
 8983              		.cfi_def_cfa_offset 16
 8984              		.cfi_offset 15, -16
 8985 3542 4156     		push	r14	#
 8986              		.cfi_def_cfa_offset 24
 8987              		.cfi_offset 14, -24
 8988 3544 4155     		push	r13	#
 8989              		.cfi_def_cfa_offset 32
GAS LISTING /tmp/ccLUVin9.s 			page 248


 8990              		.cfi_offset 13, -32
 8991 3546 4154     		push	r12	#
 8992              		.cfi_def_cfa_offset 40
 8993              		.cfi_offset 12, -40
 8994 3548 55       		push	rbp	#
 8995              		.cfi_def_cfa_offset 48
 8996              		.cfi_offset 6, -48
 8997 3549 53       		push	rbx	#
 8998              		.cfi_def_cfa_offset 56
 8999              		.cfi_offset 3, -56
 9000 354a 4889FB   		mov	rbx, rdi	# maxints, tmp493
 9001              	.LVL441:
 9002              	.LBB468:
 9003              	.LBI468:
 104:sieve_extend.c ****     // size_t memSize = ; //make multiple of 8
 9004              		.loc 1 104 24 is_stmt 1 view .LVU3048
 9005              	.LBB469:
 107:sieve_extend.c ****     sieve->bitarray = aligned_alloc((size_t)anticiped_cache_line_bytesize, (size_t)ceiling(1+((size
 9006              		.loc 1 107 5 view .LVU3049
 9007              	# sieve_extend.c:107:     struct sieve_t *sieve = aligned_alloc(8, sizeof(struct sieve_t));
 107:sieve_extend.c ****     sieve->bitarray = aligned_alloc((size_t)anticiped_cache_line_bytesize, (size_t)ceiling(1+((size
 9008              		.loc 1 107 29 is_stmt 0 view .LVU3050
 9009 354d BF080000 		mov	edi, 8	#,
 9009      00
 9010              	.LVL442:
 107:sieve_extend.c ****     sieve->bitarray = aligned_alloc((size_t)anticiped_cache_line_bytesize, (size_t)ceiling(1+((size
 9011              		.loc 1 107 29 view .LVU3051
 9012              	.LBE469:
 9013              	.LBE468:
 9014              	# sieve_extend.c:914: static struct sieve_t* sieve_shake(const counter_t maxints, const counter_t b
 914:sieve_extend.c ****     struct sieve_t *sieve = sieve_create(maxints);
 9015              		.loc 1 914 88 view .LVU3052
 9016 3552 488D6424 		lea	rsp, -88[rsp]	#,
 9016      A8
 9017              		.cfi_def_cfa_offset 144
 9018              	.LBB473:
 9019              	.LBB470:
 9020              	# sieve_extend.c:108:     sieve->bitarray = aligned_alloc((size_t)anticiped_cache_line_bytesize, (s
 108:sieve_extend.c ****     sieve->bits     = size >> 1;
 9021              		.loc 1 108 84 view .LVU3053
 9022 3557 4989DE   		mov	r14, rbx	# prephitmp_565, maxints
 9023 355a 49D1EE   		shr	r14	# prephitmp_565
 9024              	.LBE470:
 9025              	.LBE473:
 9026              	# sieve_extend.c:914: static struct sieve_t* sieve_shake(const counter_t maxints, const counter_t b
 914:sieve_extend.c ****     struct sieve_t *sieve = sieve_create(maxints);
 9027              		.loc 1 914 88 view .LVU3054
 9028 355d 48897424 		mov	QWORD PTR 56[rsp], rsi	# %sfp, tmp494
 9028      38
 9029              	.LBB474:
 9030              	.LBB471:
 9031              	# sieve_extend.c:107:     struct sieve_t *sieve = aligned_alloc(8, sizeof(struct sieve_t));
 107:sieve_extend.c ****     sieve->bitarray = aligned_alloc((size_t)anticiped_cache_line_bytesize, (size_t)ceiling(1+((size
 9032              		.loc 1 107 29 view .LVU3055
 9033 3562 BE180000 		mov	esi, 24	#,
 9033      00
 9034              	.LVL443:
GAS LISTING /tmp/ccLUVin9.s 			page 249


 107:sieve_extend.c ****     sieve->bitarray = aligned_alloc((size_t)anticiped_cache_line_bytesize, (size_t)ceiling(1+((size
 9035              		.loc 1 107 29 view .LVU3056
 9036 3567 E8000000 		call	aligned_alloc@PLT	#
 9036      00
 9037              	.LVL444:
 9038              	# sieve_extend.c:108:     sieve->bitarray = aligned_alloc((size_t)anticiped_cache_line_bytesize, (s
 108:sieve_extend.c ****     sieve->bits     = size >> 1;
 9039              		.loc 1 108 84 view .LVU3057
 9040 356c 498DB600 		lea	rsi, 1024[r14]	# tmp275,
 9040      040000
 9041              	# sieve_extend.c:108:     sieve->bitarray = aligned_alloc((size_t)anticiped_cache_line_bytesize, (s
 108:sieve_extend.c ****     sieve->bits     = size >> 1;
 9042              		.loc 1 108 23 view .LVU3058
 9043 3573 BF800000 		mov	edi, 128	#,
 9043      00
 9044              	# sieve_extend.c:107:     struct sieve_t *sieve = aligned_alloc(8, sizeof(struct sieve_t));
 107:sieve_extend.c ****     sieve->bitarray = aligned_alloc((size_t)anticiped_cache_line_bytesize, (size_t)ceiling(1+((size
 9045              		.loc 1 107 29 view .LVU3059
 9046 3578 48894424 		mov	QWORD PTR 40[rsp], rax	# %sfp, <retval>
 9046      28
 9047 357d 4889C5   		mov	rbp, rax	# <retval>, tmp495
 9048              	.LVL445:
 108:sieve_extend.c ****     sieve->bits     = size >> 1;
 9049              		.loc 1 108 5 is_stmt 1 view .LVU3060
 9050              	# sieve_extend.c:108:     sieve->bitarray = aligned_alloc((size_t)anticiped_cache_line_bytesize, (s
 108:sieve_extend.c ****     sieve->bits     = size >> 1;
 9051              		.loc 1 108 76 is_stmt 0 view .LVU3061
 9052 3580 48C1EE0A 		shr	rsi, 10	# tmp276,
 9053              	# sieve_extend.c:108:     sieve->bitarray = aligned_alloc((size_t)anticiped_cache_line_bytesize, (s
 108:sieve_extend.c ****     sieve->bits     = size >> 1;
 9054              		.loc 1 108 23 view .LVU3062
 9055 3584 48C1E607 		sal	rsi, 7	# tmp277,
 9056              	# sieve_extend.c:108:     sieve->bitarray = aligned_alloc((size_t)anticiped_cache_line_bytesize, (s
 108:sieve_extend.c ****     sieve->bits     = size >> 1;
 9057              		.loc 1 108 84 view .LVU3063
 9058 3588 4C897424 		mov	QWORD PTR 8[rsp], r14	# %sfp, prephitmp_565
 9058      08
 9059              	# sieve_extend.c:108:     sieve->bitarray = aligned_alloc((size_t)anticiped_cache_line_bytesize, (s
 108:sieve_extend.c ****     sieve->bits     = size >> 1;
 9060              		.loc 1 108 23 view .LVU3064
 9061 358d E8000000 		call	aligned_alloc@PLT	#
 9061      00
 9062              	.LVL446:
 108:sieve_extend.c ****     sieve->bits     = size >> 1;
 9063              		.loc 1 108 23 view .LVU3065
 9064              	.LBE471:
 9065              	.LBE474:
 9066              	.LBB475:
 9067              	.LBB476:
 9068              	# sieve_extend.c:885:     for (;range_stop < block_stop;) {
 885:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 9069              		.loc 1 885 5 view .LVU3066
 9070 3592 4D85F6   		test	r14, r14	# prephitmp_565
 9071              	.LBE476:
 9072              	.LBE475:
 9073              	.LBB514:
 9074              	.LBB472:
GAS LISTING /tmp/ccLUVin9.s 			page 250


 9075              	# sieve_extend.c:108:     sieve->bitarray = aligned_alloc((size_t)anticiped_cache_line_bytesize, (s
 108:sieve_extend.c ****     sieve->bits     = size >> 1;
 9076              		.loc 1 108 23 view .LVU3067
 9077 3595 4989C7   		mov	r15, rax	# _94, tmp496
 9078              	# sieve_extend.c:108:     sieve->bitarray = aligned_alloc((size_t)anticiped_cache_line_bytesize, (s
 108:sieve_extend.c ****     sieve->bits     = size >> 1;
 9079              		.loc 1 108 21 view .LVU3068
 9080 3598 48894500 		mov	QWORD PTR 0[rbp], rax	# sieve_89->bitarray, _94
 109:sieve_extend.c ****     sieve->size     = size;
 9081              		.loc 1 109 5 is_stmt 1 view .LVU3069
 9082              	# sieve_extend.c:109:     sieve->bits     = size >> 1;
 109:sieve_extend.c ****     sieve->size     = size;
 9083              		.loc 1 109 21 is_stmt 0 view .LVU3070
 9084 359c 4C897508 		mov	QWORD PTR 8[rbp], r14	# sieve_89->bits, prephitmp_565
 110:sieve_extend.c **** 
 9085              		.loc 1 110 5 is_stmt 1 view .LVU3071
 9086              	# sieve_extend.c:110:     sieve->size     = size;
 110:sieve_extend.c **** 
 9087              		.loc 1 110 21 is_stmt 0 view .LVU3072
 9088 35a0 48895D10 		mov	QWORD PTR 16[rbp], rbx	# sieve_89->size, maxints
 112:sieve_extend.c **** }
 9089              		.loc 1 112 5 is_stmt 1 view .LVU3073
 9090              	.LVL447:
 112:sieve_extend.c **** }
 9091              		.loc 1 112 5 is_stmt 0 view .LVU3074
 9092              	.LBE472:
 9093              	.LBE514:
 916:sieve_extend.c **** 
 9094              		.loc 1 916 5 is_stmt 1 view .LVU3075
 918:sieve_extend.c **** 
 9095              		.loc 1 918 5 view .LVU3076
 921:sieve_extend.c ****     extendSieve(bitarray, block.pattern_start, block.pattern_size, sieve->bits);
 9096              		.loc 1 921 5 view .LVU3077
 9097              	.LBB515:
 9098              	.LBI475:
 875:sieve_extend.c ****     register counter_t prime   = 0;
 9099              		.loc 1 875 21 view .LVU3078
 9100              	.LBB507:
 876:sieve_extend.c ****     counter_t patternsize_bits = 1;
 9101              		.loc 1 876 5 view .LVU3079
 877:sieve_extend.c ****     counter_t pattern_start    = 0;
 9102              		.loc 1 877 5 view .LVU3080
 878:sieve_extend.c ****     counter_t range_stop       = block_start;
 9103              		.loc 1 878 5 view .LVU3081
 879:sieve_extend.c ****     bitword_t* bitarray        = sieve->bitarray;
 9104              		.loc 1 879 5 view .LVU3082
 880:sieve_extend.c ****     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 };
 9105              		.loc 1 880 5 view .LVU3083
 881:sieve_extend.c **** 
 9106              		.loc 1 881 5 view .LVU3084
 883:sieve_extend.c ****     
 9107              		.loc 1 883 5 view .LVU3085
 9108              	# sieve_extend.c:883:     sieve->bitarray[0] = SAFE_ZERO; // only the first word has to be cleared;
 883:sieve_extend.c ****     
 9109              		.loc 1 883 24 is_stmt 0 view .LVU3086
 9110 35a4 48C70000 		mov	QWORD PTR [rax], 0	# MEM[(uint64_t *)_94],
 9110      000000
GAS LISTING /tmp/ccLUVin9.s 			page 251


 885:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 9111              		.loc 1 885 5 is_stmt 1 view .LVU3087
 885:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 9112              		.loc 1 885 11 view .LVU3088
 9113              	# sieve_extend.c:885:     for (;range_stop < block_stop;) {
 885:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 9114              		.loc 1 885 5 is_stmt 0 view .LVU3089
 9115 35ab 0F84730A 		je	.L931	#,
 9115      0000
 9116              	.LBB477:
 9117              	# sieve_extend.c:886:         prime = searchBitFalse(bitarray, prime+1);
 886:sieve_extend.c ****         counter_t start = prime * prime * 2 + prime * 2;
 9118              		.loc 1 886 17 view .LVU3090
 9119 35b1 48C74424 		mov	QWORD PTR 16[rsp], 1	# %sfp,
 9119      10010000 
 9119      00
 9120              	.LBE477:
 9121              	# sieve_extend.c:881:     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 
 881:sieve_extend.c **** 
 9122              		.loc 1 881 18 view .LVU3091
 9123 35ba 31D2     		xor	edx, edx	# block$pattern_size
 9124              	# sieve_extend.c:878:     counter_t pattern_start    = 0;
 878:sieve_extend.c ****     counter_t range_stop       = block_start;
 9125              		.loc 1 878 15 view .LVU3092
 9126 35bc 48C74424 		mov	QWORD PTR 24[rsp], 0	# %sfp,
 9126      18000000 
 9126      00
 9127              	# sieve_extend.c:877:     counter_t patternsize_bits = 1;
 877:sieve_extend.c ****     counter_t pattern_start    = 0;
 9128              		.loc 1 877 15 view .LVU3093
 9129 35c5 41BD0100 		mov	r13d, 1	# patternsize_bits,
 9129      0000
 9130              	# sieve_extend.c:881:     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 
 881:sieve_extend.c **** 
 9131              		.loc 1 881 18 view .LVU3094
 9132 35cb 31F6     		xor	esi, esi	# block$pattern_start
 9133              	# sieve_extend.c:876:     register counter_t prime   = 0;
 876:sieve_extend.c ****     counter_t patternsize_bits = 1;
 9134              		.loc 1 876 24 view .LVU3095
 9135 35cd 31C9     		xor	ecx, ecx	# prime
 9136 35cf 488B4424 		mov	rax, QWORD PTR 16[rsp]	# index, %sfp
 9136      10
 9137              	.LVL448:
 9138 35d4 66662E0F 		.p2align 4
 9138      1F840000 
 9138      00000090 
 9139              		.p2align 3
 9140              	.L722:
 9141              	.LBB500:
 9142              	.LBB478:
 9143              	.LBB479:
 123:sieve_extend.c **** }
 9144              		.loc 1 123 5 is_stmt 1 view .LVU3096
 123:sieve_extend.c **** }
 9145              		.loc 1 123 5 is_stmt 0 view .LVU3097
 9146              	.LBE479:
 9147              	.LBE478:
GAS LISTING /tmp/ccLUVin9.s 			page 252


 887:sieve_extend.c ****         if unlikely(start > block_stop) break;
 9148              		.loc 1 887 9 is_stmt 1 view .LVU3098
 9149              	# sieve_extend.c:887:         counter_t start = prime * prime * 2 + prime * 2;
 887:sieve_extend.c ****         if unlikely(start > block_stop) break;
 9150              		.loc 1 887 45 is_stmt 0 view .LVU3099
 9151 35e0 488D5801 		lea	rbx, 1[rax]	# index,
 9152 35e4 4C8D2400 		lea	r12, [rax+rax]	# _303,
 9153              	# sieve_extend.c:887:         counter_t start = prime * prime * 2 + prime * 2;
 887:sieve_extend.c ****         if unlikely(start > block_stop) break;
 9154              		.loc 1 887 19 view .LVU3100
 9155 35e8 4889DD   		mov	rbp, rbx	# index, index
 9156 35eb 490FAFEC 		imul	rbp, r12	# index, _303
 9157              	.LVL449:
 888:sieve_extend.c **** 
 9158              		.loc 1 888 9 is_stmt 1 view .LVU3101
 9159              	# sieve_extend.c:888:         if unlikely(start > block_stop) break;
 888:sieve_extend.c **** 
 9160              		.loc 1 888 12 is_stmt 0 view .LVU3102
 9161 35ef 483B6C24 		cmp	rbp, QWORD PTR 8[rsp]	# index, %sfp
 9161      08
 9162 35f4 0F871B04 		ja	.L932	#,
 9162      0000
 890:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 9163              		.loc 1 890 9 is_stmt 1 view .LVU3103
 9164              	# sieve_extend.c:890:         const counter_t step  = prime * 2 + 1;
 890:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 9165              		.loc 1 890 25 is_stmt 0 view .LVU3104
 9166 35fa 4983C401 		add	r12, 1	# step,
 9167              	.LVL450:
 891:sieve_extend.c **** 
 9168              		.loc 1 891 9 is_stmt 1 view .LVU3105
 9169              	# sieve_extend.c:891:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 891:sieve_extend.c **** 
 9170              		.loc 1 891 12 is_stmt 0 view .LVU3106
 9171 35fe 4885DB   		test	rbx, rbx	# index
 9172 3601 7516     		jne	.L728	#,
 891:sieve_extend.c **** 
 9173              		.loc 1 891 41 is_stmt 1 view .LVU3107
 9174              	# sieve_extend.c:891:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 891:sieve_extend.c **** 
 9175              		.loc 1 891 102 is_stmt 0 view .LVU3108
 9176 3603 48C7C0FF 		mov	rax, -1	# tmp296,
 9176      FFFFFF
 9177 360a 31D2     		xor	edx, edx	# tmp295
 9178 360c 49F7F4   		div	r12	# step
 9179              	# sieve_extend.c:891:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 891:sieve_extend.c **** 
 9180              		.loc 1 891 47 view .LVU3109
 9181 360f 48C7C5FE 		mov	rbp, -2	# tmp297,
 9181      FFFFFF
 9182              	.LVL451:
 891:sieve_extend.c **** 
 9183              		.loc 1 891 47 view .LVU3110
 9184 3616 4829D5   		sub	rbp, rdx	# index, tmp295
 9185              	.LVL452:
 9186              	.L728:
 893:sieve_extend.c ****         block.pattern_size = patternsize_bits;
GAS LISTING /tmp/ccLUVin9.s 			page 253


 9187              		.loc 1 893 9 is_stmt 1 view .LVU3111
 9188              	# sieve_extend.c:893:         range_stop = block_start + patternsize_bits * step * 2;  // range is 
 893:sieve_extend.c ****         block.pattern_size = patternsize_bits;
 9189              		.loc 1 893 53 is_stmt 0 view .LVU3112
 9190 3619 4C89E6   		mov	rsi, r12	# _66, step
 9191 361c 490FAFF5 		imul	rsi, r13	# _66, patternsize_bits
 9192 3620 48897424 		mov	QWORD PTR 48[rsp], rsi	# %sfp, _66
 9192      30
 9193              	# sieve_extend.c:893:         range_stop = block_start + patternsize_bits * step * 2;  // range is 
 893:sieve_extend.c ****         block.pattern_size = patternsize_bits;
 9194              		.loc 1 893 60 view .LVU3113
 9195 3625 4C8D3436 		lea	r14, [rsi+rsi]	# _67,
 9196              	.LVL453:
 894:sieve_extend.c ****         block.pattern_start = pattern_start;
 9197              		.loc 1 894 9 is_stmt 1 view .LVU3114
 895:sieve_extend.c ****         if (range_stop > block_stop) return block; //range_stop = block_stop;
 9198              		.loc 1 895 9 view .LVU3115
 896:sieve_extend.c **** 
 9199              		.loc 1 896 9 view .LVU3116
 9200              	# sieve_extend.c:896:         if (range_stop > block_stop) return block; //range_stop = block_stop;
 896:sieve_extend.c **** 
 9201              		.loc 1 896 12 is_stmt 0 view .LVU3117
 9202 3629 4C3B7424 		cmp	r14, QWORD PTR 8[rsp]	# _67, %sfp
 9202      08
 9203 362e 0F87B109 		ja	.L933	#,
 9203      0000
 898:sieve_extend.c ****             pattern_start = block_start | patternsize_bits;
 9204              		.loc 1 898 9 is_stmt 1 view .LVU3118
 9205 3634 488B7C24 		mov	rdi, QWORD PTR 24[rsp]	# pattern_start, %sfp
 9205      18
 9206              	# sieve_extend.c:898:         if (patternsize_bits>1) {
 898:sieve_extend.c ****             pattern_start = block_start | patternsize_bits;
 9207              		.loc 1 898 12 is_stmt 0 view .LVU3119
 9208 3639 4983FD01 		cmp	r13, 1	# patternsize_bits,
 9209 363d 48897C24 		mov	QWORD PTR 32[rsp], rdi	# %sfp, pattern_start
 9209      20
 9210 3642 0F878803 		ja	.L934	#,
 9210      0000
 9211              	.L731:
 9212              	.LVL454:
 902:sieve_extend.c **** 
 9213              		.loc 1 902 9 is_stmt 1 view .LVU3120
 906:sieve_extend.c ****         else                              setBitsTrue_largeRange(bitarray, start, step, range_stop)
 9214              		.loc 1 906 9 view .LVU3121
 9215              	# sieve_extend.c:906:         if (step < VECTORSTEP_FASTER)     setBitsTrue_largeRange_vector(bitar
 906:sieve_extend.c ****         else                              setBitsTrue_largeRange(bitarray, start, step, range_stop)
 9216              		.loc 1 906 12 is_stmt 0 view .LVU3122
 9217 3648 4C3B2500 		cmp	r12, QWORD PTR global_VECTORSTEP_FASTER[rip]	# step, global_VECTORSTEP_FASTER
 9217      000000
 9218 364f 0F830B01 		jnb	.L735	#,
 9218      0000
 906:sieve_extend.c ****         else                              setBitsTrue_largeRange(bitarray, start, step, range_stop)
 9219              		.loc 1 906 43 is_stmt 1 view .LVU3123
 9220 3655 4C89F1   		mov	rcx, r14	#, _67
 9221 3658 4C89E2   		mov	rdx, r12	#, step
 9222 365b 4889EE   		mov	rsi, rbp	#, index
 9223 365e 4C89FF   		mov	rdi, r15	#, _94
GAS LISTING /tmp/ccLUVin9.s 			page 254


 9224 3661 E87ADCFF 		call	setBitsTrue_largeRange_vector	#
 9224      FF
 9225              	.LVL455:
 9226              	.L736:
 906:sieve_extend.c ****         else                              setBitsTrue_largeRange(bitarray, start, step, range_stop)
 9227              		.loc 1 906 43 is_stmt 0 view .LVU3124
 9228              	.LBE500:
 885:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 9229              		.loc 1 885 11 is_stmt 1 view .LVU3125
 9230              	# sieve_extend.c:885:     for (;range_stop < block_stop;) {
 885:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 9231              		.loc 1 885 5 is_stmt 0 view .LVU3126
 9232 3666 4C3B7424 		cmp	r14, QWORD PTR 8[rsp]	# _67, %sfp
 9232      08
 9233 366b 0F83EB02 		jnb	.L935	#,
 9233      0000
 9234              	.LVL456:
 9235              	.L745:
 9236              	.LBB501:
 886:sieve_extend.c ****         counter_t start = prime * prime * 2 + prime * 2;
 9237              		.loc 1 886 9 is_stmt 1 view .LVU3127
 9238              	.LBB481:
 9239              	.LBI478:
 121:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 9240              		.loc 1 121 25 view .LVU3128
 9241              	.LBB480:
 122:sieve_extend.c ****     return index;
 9242              		.loc 1 122 5 view .LVU3129
 122:sieve_extend.c ****     return index;
 9243              		.loc 1 122 11 view .LVU3130
 9244              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9245              		.loc 1 122 21 is_stmt 0 view .LVU3131
 9246 3671 4989D9   		mov	r9, rbx	# tmp279, index
 9247 3674 49C1E906 		shr	r9, 6	# tmp279,
 9248              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9249              		.loc 1 122 12 view .LVU3132
 9250 3678 4F8B1CCF 		mov	r11, QWORD PTR [r15+r9*8]	# *_344,* _94
 9251              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9252              		.loc 1 122 11 view .LVU3133
 9253 367c 490FA3DB 		bt	r11, rbx	# *_344, index
 9254 3680 0F83AA00 		jnc	.L724	#,
 9254      0000
 122:sieve_extend.c ****     return index;
 9255              		.loc 1 122 58 is_stmt 1 view .LVU3134
 9256              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9257              		.loc 1 122 63 is_stmt 0 view .LVU3135
 9258 3686 488D4B01 		lea	rcx, 1[rbx]	# tmp394,
 9259              	.LVL457:
 9260              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9261              		.loc 1 122 21 view .LVU3136
 9262 368a 4889C8   		mov	rax, rcx	# tmp284, index
 9263              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
GAS LISTING /tmp/ccLUVin9.s 			page 255


 122:sieve_extend.c ****     return index;
 9264              		.loc 1 122 63 view .LVU3137
 9265 368d 4889CB   		mov	rbx, rcx	# index, tmp394
 122:sieve_extend.c ****     return index;
 9266              		.loc 1 122 11 is_stmt 1 view .LVU3138
 9267              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9268              		.loc 1 122 21 is_stmt 0 view .LVU3139
 9269 3690 48C1E806 		shr	rax, 6	# tmp284,
 9270              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9271              		.loc 1 122 12 view .LVU3140
 9272 3694 498B34C7 		mov	rsi, QWORD PTR [r15+rax*8]	# *_47, *_47
 9273              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9274              		.loc 1 122 11 view .LVU3141
 9275 3698 480FA3CE 		bt	rsi, rcx	# *_47, index
 9276 369c 0F838E00 		jnc	.L724	#,
 9276      0000
 122:sieve_extend.c ****     return index;
 9277              		.loc 1 122 58 is_stmt 1 view .LVU3142
 9278              	.LVL458:
 9279              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9280              		.loc 1 122 63 is_stmt 0 view .LVU3143
 9281 36a2 4883C301 		add	rbx, 1	# index,
 9282              	.LVL459:
 122:sieve_extend.c ****     return index;
 9283              		.loc 1 122 11 is_stmt 1 view .LVU3144
 9284              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9285              		.loc 1 122 21 is_stmt 0 view .LVU3145
 9286 36a6 4989DC   		mov	r12, rbx	# tmp459, index
 9287 36a9 49C1EC06 		shr	r12, 6	# tmp459,
 9288              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9289              		.loc 1 122 12 view .LVU3146
 9290 36ad 4B8B2CE7 		mov	rbp, QWORD PTR [r15+r12*8]	# *_47, *_47
 9291              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9292              		.loc 1 122 11 view .LVU3147
 9293 36b1 480FA3DD 		bt	rbp, rbx	# *_47, index
 9294 36b5 7379     		jnc	.L724	#,
 122:sieve_extend.c ****     return index;
 9295              		.loc 1 122 58 is_stmt 1 view .LVU3148
 9296              	.LVL460:
 9297              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9298              		.loc 1 122 63 is_stmt 0 view .LVU3149
 9299 36b7 488D5902 		lea	rbx, 2[rcx]	# index,
 9300              	.LVL461:
 122:sieve_extend.c ****     return index;
 9301              		.loc 1 122 11 is_stmt 1 view .LVU3150
 9302              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9303              		.loc 1 122 21 is_stmt 0 view .LVU3151
 9304 36bb 4989DE   		mov	r14, rbx	# tmp463, index
GAS LISTING /tmp/ccLUVin9.s 			page 256


 9305 36be 49C1EE06 		shr	r14, 6	# tmp463,
 9306              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9307              		.loc 1 122 12 view .LVU3152
 9308 36c2 4F8B14F7 		mov	r10, QWORD PTR [r15+r14*8]	# *_47, *_47
 9309              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9310              		.loc 1 122 11 view .LVU3153
 9311 36c6 490FA3DA 		bt	r10, rbx	# *_47, index
 9312 36ca 7364     		jnc	.L724	#,
 122:sieve_extend.c ****     return index;
 9313              		.loc 1 122 58 is_stmt 1 view .LVU3154
 9314              	.LVL462:
 9315              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9316              		.loc 1 122 63 is_stmt 0 view .LVU3155
 9317 36cc 488D5903 		lea	rbx, 3[rcx]	# index,
 9318              	.LVL463:
 122:sieve_extend.c ****     return index;
 9319              		.loc 1 122 11 is_stmt 1 view .LVU3156
 9320              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9321              		.loc 1 122 21 is_stmt 0 view .LVU3157
 9322 36d0 4889DA   		mov	rdx, rbx	# tmp467, index
 9323 36d3 48C1EA06 		shr	rdx, 6	# tmp467,
 9324              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9325              		.loc 1 122 12 view .LVU3158
 9326 36d7 498B3CD7 		mov	rdi, QWORD PTR [r15+rdx*8]	# *_47, *_47
 9327              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9328              		.loc 1 122 11 view .LVU3159
 9329 36db 480FA3DF 		bt	rdi, rbx	# *_47, index
 9330 36df 734F     		jnc	.L724	#,
 122:sieve_extend.c ****     return index;
 9331              		.loc 1 122 58 is_stmt 1 view .LVU3160
 9332              	.LVL464:
 9333              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9334              		.loc 1 122 63 is_stmt 0 view .LVU3161
 9335 36e1 488D5904 		lea	rbx, 4[rcx]	# index,
 9336              	.LVL465:
 122:sieve_extend.c ****     return index;
 9337              		.loc 1 122 11 is_stmt 1 view .LVU3162
 9338              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9339              		.loc 1 122 21 is_stmt 0 view .LVU3163
 9340 36e5 4989D8   		mov	r8, rbx	# tmp471, index
 9341 36e8 49C1E806 		shr	r8, 6	# tmp471,
 9342              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9343              		.loc 1 122 12 view .LVU3164
 9344 36ec 4F8B0CC7 		mov	r9, QWORD PTR [r15+r8*8]	# *_47, *_47
 9345              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9346              		.loc 1 122 11 view .LVU3165
 9347 36f0 490FA3D9 		bt	r9, rbx	# *_47, index
GAS LISTING /tmp/ccLUVin9.s 			page 257


 9348 36f4 733A     		jnc	.L724	#,
 122:sieve_extend.c ****     return index;
 9349              		.loc 1 122 58 is_stmt 1 view .LVU3166
 9350              	.LVL466:
 9351              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9352              		.loc 1 122 63 is_stmt 0 view .LVU3167
 9353 36f6 488D5905 		lea	rbx, 5[rcx]	# index,
 9354              	.LVL467:
 122:sieve_extend.c ****     return index;
 9355              		.loc 1 122 11 is_stmt 1 view .LVU3168
 9356              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9357              		.loc 1 122 21 is_stmt 0 view .LVU3169
 9358 36fa 4989DB   		mov	r11, rbx	# tmp475, index
 9359 36fd 49C1EB06 		shr	r11, 6	# tmp475,
 9360              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9361              		.loc 1 122 12 view .LVU3170
 9362 3701 4B8B04DF 		mov	rax, QWORD PTR [r15+r11*8]	# *_47, *_47
 9363              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9364              		.loc 1 122 11 view .LVU3171
 9365 3705 480FA3D8 		bt	rax, rbx	# *_47, index
 9366 3709 7325     		jnc	.L724	#,
 122:sieve_extend.c ****     return index;
 9367              		.loc 1 122 58 is_stmt 1 view .LVU3172
 9368              	.LVL468:
 9369              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9370              		.loc 1 122 63 is_stmt 0 view .LVU3173
 9371 370b 488D5906 		lea	rbx, 6[rcx]	# index,
 9372              	.LVL469:
 122:sieve_extend.c ****     return index;
 9373              		.loc 1 122 11 is_stmt 1 view .LVU3174
 9374              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9375              		.loc 1 122 21 is_stmt 0 view .LVU3175
 9376 370f 4889DE   		mov	rsi, rbx	# tmp479, index
 9377 3712 48C1EE06 		shr	rsi, 6	# tmp479,
 9378              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9379              		.loc 1 122 12 view .LVU3176
 9380 3716 4D8B24F7 		mov	r12, QWORD PTR [r15+rsi*8]	# *_47, *_47
 9381              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9382              		.loc 1 122 11 view .LVU3177
 9383 371a 490FA3DC 		bt	r12, rbx	# *_47, index
 9384 371e 7310     		jnc	.L724	#,
 122:sieve_extend.c ****     return index;
 9385              		.loc 1 122 58 is_stmt 1 view .LVU3178
 9386              	.LVL470:
 9387              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 9388              		.loc 1 122 63 is_stmt 0 view .LVU3179
 9389 3720 488D5907 		lea	rbx, 7[rcx]	# index,
 9390              	.LVL471:
GAS LISTING /tmp/ccLUVin9.s 			page 258


 122:sieve_extend.c ****     return index;
 9391              		.loc 1 122 11 is_stmt 1 view .LVU3180
 9392 3724 E948FFFF 		jmp	.L745	#
 9392      FF
 9393              	.LVL472:
 9394 3729 0F1F8000 		.p2align 4,,7
 9394      000000
 9395              		.p2align 3
 9396              	.L724:
 122:sieve_extend.c ****     return index;
 9397              		.loc 1 122 11 is_stmt 0 view .LVU3181
 9398              	.LBE480:
 9399              	.LBE481:
 9400              	.LBE501:
 9401              	.LBE507:
 9402              	.LBE515:
 9403              	# sieve_extend.c:914: static struct sieve_t* sieve_shake(const counter_t maxints, const counter_t b
 914:sieve_extend.c ****     struct sieve_t *sieve = sieve_create(maxints);
 9404              		.loc 1 914 88 view .LVU3182
 9405 3730 488B4C24 		mov	rcx, QWORD PTR 32[rsp]	# pattern_start, %sfp
 9405      20
 9406 3735 4C89EA   		mov	rdx, r13	# block$pattern_size, patternsize_bits
 9407              	.LVL473:
 914:sieve_extend.c ****     struct sieve_t *sieve = sieve_create(maxints);
 9408              		.loc 1 914 88 view .LVU3183
 9409 3738 488B7424 		mov	rsi, QWORD PTR 24[rsp]	# block$pattern_start, %sfp
 9409      18
 9410              	.LVL474:
 914:sieve_extend.c ****     struct sieve_t *sieve = sieve_create(maxints);
 9411              		.loc 1 914 88 view .LVU3184
 9412 373d 4889D8   		mov	rax, rbx	# index, index
 9413 3740 4C8B6C24 		mov	r13, QWORD PTR 48[rsp]	# patternsize_bits, %sfp
 9413      30
 9414 3745 48894C24 		mov	QWORD PTR 24[rsp], rcx	# %sfp, pattern_start
 9414      18
 9415 374a 488B4C24 		mov	rcx, QWORD PTR 16[rsp]	# prime, %sfp
 9415      10
 9416              	.LVL475:
 914:sieve_extend.c ****     struct sieve_t *sieve = sieve_create(maxints);
 9417              		.loc 1 914 88 view .LVU3185
 9418 374f 48895C24 		mov	QWORD PTR 16[rsp], rbx	# %sfp, index
 9418      10
 9419 3754 E987FEFF 		jmp	.L722	#
 9419      FF
 9420              	.LVL476:
 9421 3759 0F1F8000 		.p2align 4,,7
 9421      000000
 9422              		.p2align 3
 9423              	.L735:
 9424              	.LBB516:
 9425              	.LBB508:
 9426              	.LBB502:
 907:sieve_extend.c ****         block.prime = prime;
 9427              		.loc 1 907 43 is_stmt 1 view .LVU3186
 9428              	.LBB482:
 9429              	.LBI482:
 385:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange (%ju occurances
GAS LISTING /tmp/ccLUVin9.s 			page 259


 9430              		.loc 1 385 20 view .LVU3187
 9431              	.LBB483:
 386:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 9432              		.loc 1 386 5 view .LVU3188
 387:sieve_extend.c **** 
 9433              		.loc 1 387 5 view .LVU3189
 9434              	# sieve_extend.c:387:     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * st
 387:sieve_extend.c **** 
 9435              		.loc 1 387 74 is_stmt 0 view .LVU3190
 9436 3760 4D89E2   		mov	r10, r12	# tmp303, step
 9437 3763 49C1E206 		sal	r10, 6	# tmp303,
 9438              	# sieve_extend.c:387:     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * st
 387:sieve_extend.c **** 
 9439              		.loc 1 387 21 view .LVU3191
 9440 3767 4901EA   		add	r10, rbp	# range_stop_unique, index
 9441              	.LVL477:
 9442              	.LBB484:
 391:sieve_extend.c ****         #if __APPLE__
 9443              		.loc 1 391 10 is_stmt 1 view .LVU3192
 391:sieve_extend.c ****         #if __APPLE__
 9444              		.loc 1 391 50 view .LVU3193
 9445              	# sieve_extend.c:391:     for (register counter_t index = range_start; index < range_stop_unique; i
 391:sieve_extend.c ****         #if __APPLE__
 9446              		.loc 1 391 5 is_stmt 0 view .LVU3194
 9447 376a 4C39D5   		cmp	rbp, r10	# index, range_stop_unique
 9448 376d 0F83F3FE 		jnb	.L736	#,
 9448      FFFF
 9449              	.LBB485:
 9450              	.LBB486:
 9451              	# sieve_extend.c:174:    const counter_t range_stop_word = wordindex(range_stop);
 174:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 9452              		.loc 1 174 20 view .LVU3195
 9453 3773 4D89F3   		mov	r11, r14	# range_stop_word, _67
 9454              	# sieve_extend.c:176:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 176:sieve_extend.c **** 
 9455              		.loc 1 176 110 view .LVU3196
 9456 3776 4B8D3CA4 		lea	rdi, [r12+r12*4]	# tmp306,
 9457              	# sieve_extend.c:174:    const counter_t range_stop_word = wordindex(range_stop);
 174:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 9458              		.loc 1 174 20 view .LVU3197
 9459 377a 49C1EB06 		shr	r11, 6	# range_stop_word,
 9460              	# sieve_extend.c:194:       *index_ptr |= (mask & chopmask(range_stop));
 194:sieve_extend.c ****    }
 9461              		.loc 1 194 29 view .LVU3198
 9462 377e 4489F1   		mov	ecx, r14d	# tmp308, _67
 9463              	# sieve_extend.c:176:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 176:sieve_extend.c **** 
 9464              		.loc 1 176 133 view .LVU3199
 9465 3781 4D89D9   		mov	r9, r11	# tmp312, range_stop_word
 9466              	# sieve_extend.c:188:    register const bitword_t* __restrict range_stop_ptr = &bitarray[(range_sto
 188:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 9467              		.loc 1 188 41 view .LVU3200
 9468 3784 4F8D04DF 		lea	r8, [r15+r11*8]	# range_stop_ptr,
 9469              	# sieve_extend.c:176:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 176:sieve_extend.c **** 
 9470              		.loc 1 176 133 view .LVU3201
 9471 3788 4929F9   		sub	r9, rdi	# tmp312, tmp306
GAS LISTING /tmp/ccLUVin9.s 			page 260


 9472              	# sieve_extend.c:176:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 176:sieve_extend.c **** 
 9473              		.loc 1 176 53 view .LVU3202
 9474 378b 4939FB   		cmp	r11, rdi	# range_stop_word, tmp306
 9475 378e 4F8D0CCF 		lea	r9, [r15+r9*8]	# tmp314,
 9476 3792 4D89E3   		mov	r11, r12	# _538, step
 9477              	# sieve_extend.c:194:       *index_ptr |= (mask & chopmask(range_stop));
 194:sieve_extend.c ****    }
 9478              		.loc 1 194 29 view .LVU3203
 9479 3795 F7D1     		not	ecx	# tmp308
 9480              	# sieve_extend.c:176:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 176:sieve_extend.c **** 
 9481              		.loc 1 176 53 view .LVU3204
 9482 3797 4D0F46CF 		cmovbe	r9, r15	# _94,, fast_loop_ptr
 9483              	# sieve_extend.c:194:       *index_ptr |= (mask & chopmask(range_stop));
 194:sieve_extend.c ****    }
 9484              		.loc 1 194 29 view .LVU3205
 9485 379b 48C7C0FF 		mov	rax, -1	# tmp641,
 9485      FFFFFF
 9486              	# sieve_extend.c:181:        *index_ptr |= mask;        index_ptr+=step;
 181:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9487              		.loc 1 181 44 view .LVU3206
 9488 37a2 4A8D14E5 		lea	rdx, 0[0+r12*8]	# _118,
 9488      00000000 
 9489 37aa 48C1E703 		sal	rdi, 3	# tmp318,
 9490              	# sieve_extend.c:194:       *index_ptr |= (mask & chopmask(range_stop));
 194:sieve_extend.c ****    }
 9491              		.loc 1 194 29 view .LVU3207
 9492 37ae C4E2F3F7 		shrx	rsi, rax, rcx	# _150, tmp641, tmp308
 9492      F0
 9493 37b3 49C1E304 		sal	r11, 4	# _538,
 9494 37b7 48897424 		mov	QWORD PTR 64[rsp], rsi	# %sfp, _150
 9494      40
 9495              	.LVL478:
 9496 37bc 0F1F4000 		.p2align 4
 9497              		.p2align 3
 9498              	.L743:
 194:sieve_extend.c ****    }
 9499              		.loc 1 194 29 view .LVU3208
 9500              	.LBE486:
 9501              	.LBE485:
 395:sieve_extend.c ****         #endif
 9502              		.loc 1 395 13 is_stmt 1 view .LVU3209
 9503 37c0 4889E8   		mov	rax, rbp	# tmp321, index
 9504 37c3 B9010000 		mov	ecx, 1	# tmp644,
 9504      00
 9505 37c8 48C1E806 		shr	rax, 6	# tmp321,
 9506 37cc C4E2D1F7 		shlx	rcx, rcx, rbp	# _103, tmp644, index
 9506      C9
 9507              	.LVL479:
 9508              	.LBB489:
 9509              	.LBI485:
 173:sieve_extend.c ****    const counter_t range_stop_word = wordindex(range_stop);
 9510              		.loc 1 173 20 view .LVU3210
 9511              	.LBB487:
 174:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 9512              		.loc 1 174 4 view .LVU3211
GAS LISTING /tmp/ccLUVin9.s 			page 261


 175:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 9513              		.loc 1 175 4 view .LVU3212
 9514              	# sieve_extend.c:175:    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(
 175:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 9515              		.loc 1 175 78 is_stmt 0 view .LVU3213
 9516 37d1 498D04C7 		lea	rax, [r15+rax*8]	# index_ptr,
 9517              	.LVL480:
 176:sieve_extend.c **** 
 9518              		.loc 1 176 4 is_stmt 1 view .LVU3214
 180:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9519              		.loc 1 180 10 view .LVU3215
 9520 37d5 4C39C8   		cmp	rax, r9	# index_ptr, fast_loop_ptr
 9521 37d8 0F830201 		jnb	.L738	#,
 9521      0000
 180:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9522              		.loc 1 180 10 is_stmt 0 view .LVU3216
 9523 37de 4A8D3418 		lea	rsi, [rax+r11]	# ivtmp.542,
 9524              	.L739:
 181:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9525              		.loc 1 181 8 is_stmt 1 view .LVU3217
 9526              	# sieve_extend.c:181:        *index_ptr |= mask;        index_ptr+=step;
 181:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9527              		.loc 1 181 19 is_stmt 0 view .LVU3218
 9528 37e2 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_336, offset: 0B], _103
 181:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9529              		.loc 1 181 35 is_stmt 1 view .LVU3219
 9530              	.LVL481:
 182:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9531              		.loc 1 182 8 view .LVU3220
 9532              	# sieve_extend.c:182:        *index_ptr |= mask;        index_ptr+=step;
 182:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9533              		.loc 1 182 19 is_stmt 0 view .LVU3221
 9534 37e5 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_336, index: _118, offset: 0B], _103
 182:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9535              		.loc 1 182 35 is_stmt 1 view .LVU3222
 9536              	.LVL482:
 183:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9537              		.loc 1 183 8 view .LVU3223
 9538              	# sieve_extend.c:183:        *index_ptr |= mask;        index_ptr+=step;
 183:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9539              		.loc 1 183 19 is_stmt 0 view .LVU3224
 9540 37e9 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _532, offset: 0B], _103
 183:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9541              		.loc 1 183 35 is_stmt 1 view .LVU3225
 9542              	.LVL483:
 184:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9543              		.loc 1 184 8 view .LVU3226
 9544              	# sieve_extend.c:184:        *index_ptr |= mask;        index_ptr+=step;
 184:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9545              		.loc 1 184 19 is_stmt 0 view .LVU3227
 9546 37ec 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _532, index: _118, offset: 0B], _103
 184:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9547              		.loc 1 184 35 is_stmt 1 view .LVU3228
 9548              	.LVL484:
 185:sieve_extend.c ****    }
 9549              		.loc 1 185 8 view .LVU3229
 9550 37f0 4801FE   		add	rsi, rdi	# ivtmp.542, tmp318
GAS LISTING /tmp/ccLUVin9.s 			page 262


 9551              	# sieve_extend.c:185:        *index_ptr |= mask;        index_ptr+=step;
 185:sieve_extend.c ****    }
 9552              		.loc 1 185 19 is_stmt 0 view .LVU3230
 9553 37f3 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_336, index: _118, step: 4, offset: 0B], _103
 185:sieve_extend.c ****    }
 9554              		.loc 1 185 35 is_stmt 1 view .LVU3231
 9555 37f7 4801F8   		add	rax, rdi	# index_ptr, tmp318
 9556              	.LVL485:
 180:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9557              		.loc 1 180 10 view .LVU3232
 9558 37fa 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 9559 37fd 0F86DD00 		jbe	.L738	#,
 9559      0000
 181:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9560              		.loc 1 181 8 view .LVU3233
 9561              	# sieve_extend.c:181:        *index_ptr |= mask;        index_ptr+=step;
 181:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9562              		.loc 1 181 19 is_stmt 0 view .LVU3234
 9563 3803 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_336, offset: 0B], _103
 181:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9564              		.loc 1 181 35 is_stmt 1 view .LVU3235
 9565              	.LVL486:
 182:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9566              		.loc 1 182 8 view .LVU3236
 9567              	# sieve_extend.c:182:        *index_ptr |= mask;        index_ptr+=step;
 182:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9568              		.loc 1 182 19 is_stmt 0 view .LVU3237
 9569 3806 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_336, index: _118, offset: 0B], _103
 182:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9570              		.loc 1 182 35 is_stmt 1 view .LVU3238
 9571              	.LVL487:
 183:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9572              		.loc 1 183 8 view .LVU3239
 9573              	# sieve_extend.c:183:        *index_ptr |= mask;        index_ptr+=step;
 183:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9574              		.loc 1 183 19 is_stmt 0 view .LVU3240
 9575 380a 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _532, offset: 0B], _103
 183:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9576              		.loc 1 183 35 is_stmt 1 view .LVU3241
 9577              	.LVL488:
 184:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9578              		.loc 1 184 8 view .LVU3242
 9579              	# sieve_extend.c:184:        *index_ptr |= mask;        index_ptr+=step;
 184:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9580              		.loc 1 184 19 is_stmt 0 view .LVU3243
 9581 380d 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _532, index: _118, offset: 0B], _103
 184:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9582              		.loc 1 184 35 is_stmt 1 view .LVU3244
 9583              	.LVL489:
 185:sieve_extend.c ****    }
 9584              		.loc 1 185 8 view .LVU3245
 9585 3811 4801FE   		add	rsi, rdi	# ivtmp.542, tmp318
 9586              	# sieve_extend.c:185:        *index_ptr |= mask;        index_ptr+=step;
 185:sieve_extend.c ****    }
 9587              		.loc 1 185 19 is_stmt 0 view .LVU3246
 9588 3814 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_336, index: _118, step: 4, offset: 0B], _103
 185:sieve_extend.c ****    }
GAS LISTING /tmp/ccLUVin9.s 			page 263


 9589              		.loc 1 185 35 is_stmt 1 view .LVU3247
 9590 3818 4801F8   		add	rax, rdi	# index_ptr, tmp318
 9591              	.LVL490:
 180:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9592              		.loc 1 180 10 view .LVU3248
 9593 381b 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 9594 381e 0F86BC00 		jbe	.L738	#,
 9594      0000
 181:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9595              		.loc 1 181 8 view .LVU3249
 9596              	# sieve_extend.c:181:        *index_ptr |= mask;        index_ptr+=step;
 181:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9597              		.loc 1 181 19 is_stmt 0 view .LVU3250
 9598 3824 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_336, offset: 0B], _103
 181:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9599              		.loc 1 181 35 is_stmt 1 view .LVU3251
 9600              	.LVL491:
 182:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9601              		.loc 1 182 8 view .LVU3252
 9602              	# sieve_extend.c:182:        *index_ptr |= mask;        index_ptr+=step;
 182:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9603              		.loc 1 182 19 is_stmt 0 view .LVU3253
 9604 3827 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_336, index: _118, offset: 0B], _103
 182:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9605              		.loc 1 182 35 is_stmt 1 view .LVU3254
 9606              	.LVL492:
 183:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9607              		.loc 1 183 8 view .LVU3255
 9608              	# sieve_extend.c:183:        *index_ptr |= mask;        index_ptr+=step;
 183:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9609              		.loc 1 183 19 is_stmt 0 view .LVU3256
 9610 382b 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _532, offset: 0B], _103
 183:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9611              		.loc 1 183 35 is_stmt 1 view .LVU3257
 9612              	.LVL493:
 184:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9613              		.loc 1 184 8 view .LVU3258
 9614              	# sieve_extend.c:184:        *index_ptr |= mask;        index_ptr+=step;
 184:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9615              		.loc 1 184 19 is_stmt 0 view .LVU3259
 9616 382e 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _532, index: _118, offset: 0B], _103
 184:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9617              		.loc 1 184 35 is_stmt 1 view .LVU3260
 9618              	.LVL494:
 185:sieve_extend.c ****    }
 9619              		.loc 1 185 8 view .LVU3261
 9620 3832 4801FE   		add	rsi, rdi	# ivtmp.542, tmp318
 9621              	# sieve_extend.c:185:        *index_ptr |= mask;        index_ptr+=step;
 185:sieve_extend.c ****    }
 9622              		.loc 1 185 19 is_stmt 0 view .LVU3262
 9623 3835 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_336, index: _118, step: 4, offset: 0B], _103
 185:sieve_extend.c ****    }
 9624              		.loc 1 185 35 is_stmt 1 view .LVU3263
 9625 3839 4801F8   		add	rax, rdi	# index_ptr, tmp318
 9626              	.LVL495:
 180:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9627              		.loc 1 180 10 view .LVU3264
GAS LISTING /tmp/ccLUVin9.s 			page 264


 9628 383c 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 9629 383f 0F869B00 		jbe	.L738	#,
 9629      0000
 181:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9630              		.loc 1 181 8 view .LVU3265
 9631              	# sieve_extend.c:181:        *index_ptr |= mask;        index_ptr+=step;
 181:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9632              		.loc 1 181 19 is_stmt 0 view .LVU3266
 9633 3845 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_336, offset: 0B], _103
 181:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9634              		.loc 1 181 35 is_stmt 1 view .LVU3267
 9635              	.LVL496:
 182:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9636              		.loc 1 182 8 view .LVU3268
 9637              	# sieve_extend.c:182:        *index_ptr |= mask;        index_ptr+=step;
 182:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9638              		.loc 1 182 19 is_stmt 0 view .LVU3269
 9639 3848 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_336, index: _118, offset: 0B], _103
 182:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9640              		.loc 1 182 35 is_stmt 1 view .LVU3270
 9641              	.LVL497:
 183:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9642              		.loc 1 183 8 view .LVU3271
 9643              	# sieve_extend.c:183:        *index_ptr |= mask;        index_ptr+=step;
 183:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9644              		.loc 1 183 19 is_stmt 0 view .LVU3272
 9645 384c 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _532, offset: 0B], _103
 183:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9646              		.loc 1 183 35 is_stmt 1 view .LVU3273
 9647              	.LVL498:
 184:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9648              		.loc 1 184 8 view .LVU3274
 9649              	# sieve_extend.c:184:        *index_ptr |= mask;        index_ptr+=step;
 184:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9650              		.loc 1 184 19 is_stmt 0 view .LVU3275
 9651 384f 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _532, index: _118, offset: 0B], _103
 184:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9652              		.loc 1 184 35 is_stmt 1 view .LVU3276
 9653              	.LVL499:
 185:sieve_extend.c ****    }
 9654              		.loc 1 185 8 view .LVU3277
 9655 3853 4801FE   		add	rsi, rdi	# ivtmp.542, tmp318
 9656              	# sieve_extend.c:185:        *index_ptr |= mask;        index_ptr+=step;
 185:sieve_extend.c ****    }
 9657              		.loc 1 185 19 is_stmt 0 view .LVU3278
 9658 3856 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_336, index: _118, step: 4, offset: 0B], _103
 185:sieve_extend.c ****    }
 9659              		.loc 1 185 35 is_stmt 1 view .LVU3279
 9660 385a 4801F8   		add	rax, rdi	# index_ptr, tmp318
 9661              	.LVL500:
 180:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9662              		.loc 1 180 10 view .LVU3280
 9663 385d 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 9664 3860 767E     		jbe	.L738	#,
 181:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9665              		.loc 1 181 8 view .LVU3281
 9666              	# sieve_extend.c:181:        *index_ptr |= mask;        index_ptr+=step;
GAS LISTING /tmp/ccLUVin9.s 			page 265


 181:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9667              		.loc 1 181 19 is_stmt 0 view .LVU3282
 9668 3862 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_336, offset: 0B], _103
 181:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9669              		.loc 1 181 35 is_stmt 1 view .LVU3283
 9670              	.LVL501:
 182:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9671              		.loc 1 182 8 view .LVU3284
 9672              	# sieve_extend.c:182:        *index_ptr |= mask;        index_ptr+=step;
 182:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9673              		.loc 1 182 19 is_stmt 0 view .LVU3285
 9674 3865 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_336, index: _118, offset: 0B], _103
 182:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9675              		.loc 1 182 35 is_stmt 1 view .LVU3286
 9676              	.LVL502:
 183:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9677              		.loc 1 183 8 view .LVU3287
 9678              	# sieve_extend.c:183:        *index_ptr |= mask;        index_ptr+=step;
 183:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9679              		.loc 1 183 19 is_stmt 0 view .LVU3288
 9680 3869 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _532, offset: 0B], _103
 183:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9681              		.loc 1 183 35 is_stmt 1 view .LVU3289
 9682              	.LVL503:
 184:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9683              		.loc 1 184 8 view .LVU3290
 9684              	# sieve_extend.c:184:        *index_ptr |= mask;        index_ptr+=step;
 184:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9685              		.loc 1 184 19 is_stmt 0 view .LVU3291
 9686 386c 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _532, index: _118, offset: 0B], _103
 184:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9687              		.loc 1 184 35 is_stmt 1 view .LVU3292
 9688              	.LVL504:
 185:sieve_extend.c ****    }
 9689              		.loc 1 185 8 view .LVU3293
 9690 3870 4801FE   		add	rsi, rdi	# ivtmp.542, tmp318
 9691              	# sieve_extend.c:185:        *index_ptr |= mask;        index_ptr+=step;
 185:sieve_extend.c ****    }
 9692              		.loc 1 185 19 is_stmt 0 view .LVU3294
 9693 3873 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_336, index: _118, step: 4, offset: 0B], _103
 185:sieve_extend.c ****    }
 9694              		.loc 1 185 35 is_stmt 1 view .LVU3295
 9695 3877 4801F8   		add	rax, rdi	# index_ptr, tmp318
 9696              	.LVL505:
 180:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9697              		.loc 1 180 10 view .LVU3296
 9698 387a 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 9699 387d 7661     		jbe	.L738	#,
 181:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9700              		.loc 1 181 8 view .LVU3297
 9701              	# sieve_extend.c:181:        *index_ptr |= mask;        index_ptr+=step;
 181:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9702              		.loc 1 181 19 is_stmt 0 view .LVU3298
 9703 387f 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_336, offset: 0B], _103
 181:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9704              		.loc 1 181 35 is_stmt 1 view .LVU3299
 9705              	.LVL506:
GAS LISTING /tmp/ccLUVin9.s 			page 266


 182:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9706              		.loc 1 182 8 view .LVU3300
 9707              	# sieve_extend.c:182:        *index_ptr |= mask;        index_ptr+=step;
 182:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9708              		.loc 1 182 19 is_stmt 0 view .LVU3301
 9709 3882 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_336, index: _118, offset: 0B], _103
 182:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9710              		.loc 1 182 35 is_stmt 1 view .LVU3302
 9711              	.LVL507:
 183:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9712              		.loc 1 183 8 view .LVU3303
 9713              	# sieve_extend.c:183:        *index_ptr |= mask;        index_ptr+=step;
 183:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9714              		.loc 1 183 19 is_stmt 0 view .LVU3304
 9715 3886 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _532, offset: 0B], _103
 183:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9716              		.loc 1 183 35 is_stmt 1 view .LVU3305
 9717              	.LVL508:
 184:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9718              		.loc 1 184 8 view .LVU3306
 9719              	# sieve_extend.c:184:        *index_ptr |= mask;        index_ptr+=step;
 184:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9720              		.loc 1 184 19 is_stmt 0 view .LVU3307
 9721 3889 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _532, index: _118, offset: 0B], _103
 184:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9722              		.loc 1 184 35 is_stmt 1 view .LVU3308
 9723              	.LVL509:
 185:sieve_extend.c ****    }
 9724              		.loc 1 185 8 view .LVU3309
 9725 388d 4801FE   		add	rsi, rdi	# ivtmp.542, tmp318
 9726              	# sieve_extend.c:185:        *index_ptr |= mask;        index_ptr+=step;
 185:sieve_extend.c ****    }
 9727              		.loc 1 185 19 is_stmt 0 view .LVU3310
 9728 3890 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_336, index: _118, step: 4, offset: 0B], _103
 185:sieve_extend.c ****    }
 9729              		.loc 1 185 35 is_stmt 1 view .LVU3311
 9730 3894 4801F8   		add	rax, rdi	# index_ptr, tmp318
 9731              	.LVL510:
 180:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9732              		.loc 1 180 10 view .LVU3312
 9733 3897 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 9734 389a 7644     		jbe	.L738	#,
 181:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9735              		.loc 1 181 8 view .LVU3313
 9736              	# sieve_extend.c:181:        *index_ptr |= mask;        index_ptr+=step;
 181:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9737              		.loc 1 181 19 is_stmt 0 view .LVU3314
 9738 389c 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_336, offset: 0B], _103
 181:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9739              		.loc 1 181 35 is_stmt 1 view .LVU3315
 9740              	.LVL511:
 182:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9741              		.loc 1 182 8 view .LVU3316
 9742              	# sieve_extend.c:182:        *index_ptr |= mask;        index_ptr+=step;
 182:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9743              		.loc 1 182 19 is_stmt 0 view .LVU3317
 9744 389f 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_336, index: _118, offset: 0B], _103
GAS LISTING /tmp/ccLUVin9.s 			page 267


 182:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9745              		.loc 1 182 35 is_stmt 1 view .LVU3318
 9746              	.LVL512:
 183:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9747              		.loc 1 183 8 view .LVU3319
 9748              	# sieve_extend.c:183:        *index_ptr |= mask;        index_ptr+=step;
 183:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9749              		.loc 1 183 19 is_stmt 0 view .LVU3320
 9750 38a3 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _532, offset: 0B], _103
 183:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9751              		.loc 1 183 35 is_stmt 1 view .LVU3321
 9752              	.LVL513:
 184:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9753              		.loc 1 184 8 view .LVU3322
 9754              	# sieve_extend.c:184:        *index_ptr |= mask;        index_ptr+=step;
 184:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9755              		.loc 1 184 19 is_stmt 0 view .LVU3323
 9756 38a6 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _532, index: _118, offset: 0B], _103
 184:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9757              		.loc 1 184 35 is_stmt 1 view .LVU3324
 9758              	.LVL514:
 185:sieve_extend.c ****    }
 9759              		.loc 1 185 8 view .LVU3325
 9760 38aa 4801FE   		add	rsi, rdi	# ivtmp.542, tmp318
 9761              	# sieve_extend.c:185:        *index_ptr |= mask;        index_ptr+=step;
 185:sieve_extend.c ****    }
 9762              		.loc 1 185 19 is_stmt 0 view .LVU3326
 9763 38ad 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_336, index: _118, step: 4, offset: 0B], _103
 185:sieve_extend.c ****    }
 9764              		.loc 1 185 35 is_stmt 1 view .LVU3327
 9765 38b1 4801F8   		add	rax, rdi	# index_ptr, tmp318
 9766              	.LVL515:
 180:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9767              		.loc 1 180 10 view .LVU3328
 9768 38b4 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 9769 38b7 7627     		jbe	.L738	#,
 181:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9770              		.loc 1 181 8 view .LVU3329
 9771              	# sieve_extend.c:181:        *index_ptr |= mask;        index_ptr+=step;
 181:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9772              		.loc 1 181 19 is_stmt 0 view .LVU3330
 9773 38b9 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_336, offset: 0B], _103
 181:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9774              		.loc 1 181 35 is_stmt 1 view .LVU3331
 9775              	.LVL516:
 182:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9776              		.loc 1 182 8 view .LVU3332
 9777              	# sieve_extend.c:182:        *index_ptr |= mask;        index_ptr+=step;
 182:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9778              		.loc 1 182 19 is_stmt 0 view .LVU3333
 9779 38bc 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_336, index: _118, offset: 0B], _103
 182:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9780              		.loc 1 182 35 is_stmt 1 view .LVU3334
 9781              	.LVL517:
 183:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9782              		.loc 1 183 8 view .LVU3335
 9783              	# sieve_extend.c:183:        *index_ptr |= mask;        index_ptr+=step;
GAS LISTING /tmp/ccLUVin9.s 			page 268


 183:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9784              		.loc 1 183 19 is_stmt 0 view .LVU3336
 9785 38c0 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _532, offset: 0B], _103
 183:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9786              		.loc 1 183 35 is_stmt 1 view .LVU3337
 9787              	.LVL518:
 184:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9788              		.loc 1 184 8 view .LVU3338
 9789              	# sieve_extend.c:184:        *index_ptr |= mask;        index_ptr+=step;
 184:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9790              		.loc 1 184 19 is_stmt 0 view .LVU3339
 9791 38c3 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _532, index: _118, offset: 0B], _103
 184:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9792              		.loc 1 184 35 is_stmt 1 view .LVU3340
 9793              	.LVL519:
 185:sieve_extend.c ****    }
 9794              		.loc 1 185 8 view .LVU3341
 9795 38c7 4801FE   		add	rsi, rdi	# ivtmp.542, tmp318
 9796              	# sieve_extend.c:185:        *index_ptr |= mask;        index_ptr+=step;
 185:sieve_extend.c ****    }
 9797              		.loc 1 185 19 is_stmt 0 view .LVU3342
 9798 38ca 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_336, index: _118, step: 4, offset: 0B], _103
 185:sieve_extend.c ****    }
 9799              		.loc 1 185 35 is_stmt 1 view .LVU3343
 9800 38ce 4801F8   		add	rax, rdi	# index_ptr, tmp318
 9801              	.LVL520:
 180:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9802              		.loc 1 180 10 view .LVU3344
 9803 38d1 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 9804 38d4 0F8708FF 		ja	.L739	#,
 9804      FFFF
 9805 38da 660F1F44 		.p2align 4
 9805      0000
 9806              		.p2align 3
 9807              	.L738:
 188:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 9808              		.loc 1 188 4 view .LVU3345
 189:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 9809              		.loc 1 189 4 view .LVU3346
 189:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 9810              		.loc 1 189 10 view .LVU3347
 9811 38e0 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 9812 38e3 765B     		jbe	.L740	#,
 9813              	.L741:
 190:sieve_extend.c ****    }
 9814              		.loc 1 190 8 view .LVU3348
 9815              	# sieve_extend.c:190:        *index_ptr |= mask;       index_ptr+=step;
 190:sieve_extend.c ****    }
 9816              		.loc 1 190 19 is_stmt 0 view .LVU3349
 9817 38e5 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_333, offset: 0B], _103
 190:sieve_extend.c ****    }
 9818              		.loc 1 190 34 is_stmt 1 view .LVU3350
 9819              	# sieve_extend.c:190:        *index_ptr |= mask;       index_ptr+=step;
 190:sieve_extend.c ****    }
 9820              		.loc 1 190 43 is_stmt 0 view .LVU3351
 9821 38e8 4801D0   		add	rax, rdx	# index_ptr, _118
 9822              	.LVL521:
GAS LISTING /tmp/ccLUVin9.s 			page 269


 189:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 9823              		.loc 1 189 10 is_stmt 1 view .LVU3352
 9824 38eb 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 9825 38ee 7650     		jbe	.L740	#,
 190:sieve_extend.c ****    }
 9826              		.loc 1 190 8 view .LVU3353
 9827              	# sieve_extend.c:190:        *index_ptr |= mask;       index_ptr+=step;
 190:sieve_extend.c ****    }
 9828              		.loc 1 190 19 is_stmt 0 view .LVU3354
 9829 38f0 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_333, offset: 0B], _103
 190:sieve_extend.c ****    }
 9830              		.loc 1 190 34 is_stmt 1 view .LVU3355
 9831              	# sieve_extend.c:190:        *index_ptr |= mask;       index_ptr+=step;
 190:sieve_extend.c ****    }
 9832              		.loc 1 190 43 is_stmt 0 view .LVU3356
 9833 38f3 4801D0   		add	rax, rdx	# index_ptr, _118
 9834              	.LVL522:
 189:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 9835              		.loc 1 189 10 is_stmt 1 view .LVU3357
 9836 38f6 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 9837 38f9 7645     		jbe	.L740	#,
 190:sieve_extend.c ****    }
 9838              		.loc 1 190 8 view .LVU3358
 9839              	# sieve_extend.c:190:        *index_ptr |= mask;       index_ptr+=step;
 190:sieve_extend.c ****    }
 9840              		.loc 1 190 19 is_stmt 0 view .LVU3359
 9841 38fb 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_333, offset: 0B], _103
 190:sieve_extend.c ****    }
 9842              		.loc 1 190 34 is_stmt 1 view .LVU3360
 9843              	# sieve_extend.c:190:        *index_ptr |= mask;       index_ptr+=step;
 190:sieve_extend.c ****    }
 9844              		.loc 1 190 43 is_stmt 0 view .LVU3361
 9845 38fe 4801D0   		add	rax, rdx	# index_ptr, _118
 9846              	.LVL523:
 189:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 9847              		.loc 1 189 10 is_stmt 1 view .LVU3362
 9848 3901 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 9849 3904 763A     		jbe	.L740	#,
 190:sieve_extend.c ****    }
 9850              		.loc 1 190 8 view .LVU3363
 9851              	# sieve_extend.c:190:        *index_ptr |= mask;       index_ptr+=step;
 190:sieve_extend.c ****    }
 9852              		.loc 1 190 19 is_stmt 0 view .LVU3364
 9853 3906 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_333, offset: 0B], _103
 190:sieve_extend.c ****    }
 9854              		.loc 1 190 34 is_stmt 1 view .LVU3365
 9855              	# sieve_extend.c:190:        *index_ptr |= mask;       index_ptr+=step;
 190:sieve_extend.c ****    }
 9856              		.loc 1 190 43 is_stmt 0 view .LVU3366
 9857 3909 4801D0   		add	rax, rdx	# index_ptr, _118
 9858              	.LVL524:
 189:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 9859              		.loc 1 189 10 is_stmt 1 view .LVU3367
 9860 390c 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 9861 390f 762F     		jbe	.L740	#,
 190:sieve_extend.c ****    }
 9862              		.loc 1 190 8 view .LVU3368
GAS LISTING /tmp/ccLUVin9.s 			page 270


 9863              	# sieve_extend.c:190:        *index_ptr |= mask;       index_ptr+=step;
 190:sieve_extend.c ****    }
 9864              		.loc 1 190 19 is_stmt 0 view .LVU3369
 9865 3911 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_333, offset: 0B], _103
 190:sieve_extend.c ****    }
 9866              		.loc 1 190 34 is_stmt 1 view .LVU3370
 9867              	# sieve_extend.c:190:        *index_ptr |= mask;       index_ptr+=step;
 190:sieve_extend.c ****    }
 9868              		.loc 1 190 43 is_stmt 0 view .LVU3371
 9869 3914 4801D0   		add	rax, rdx	# index_ptr, _118
 9870              	.LVL525:
 189:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 9871              		.loc 1 189 10 is_stmt 1 view .LVU3372
 9872 3917 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 9873 391a 7624     		jbe	.L740	#,
 190:sieve_extend.c ****    }
 9874              		.loc 1 190 8 view .LVU3373
 9875              	# sieve_extend.c:190:        *index_ptr |= mask;       index_ptr+=step;
 190:sieve_extend.c ****    }
 9876              		.loc 1 190 19 is_stmt 0 view .LVU3374
 9877 391c 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_333, offset: 0B], _103
 190:sieve_extend.c ****    }
 9878              		.loc 1 190 34 is_stmt 1 view .LVU3375
 9879              	# sieve_extend.c:190:        *index_ptr |= mask;       index_ptr+=step;
 190:sieve_extend.c ****    }
 9880              		.loc 1 190 43 is_stmt 0 view .LVU3376
 9881 391f 4801D0   		add	rax, rdx	# index_ptr, _118
 9882              	.LVL526:
 189:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 9883              		.loc 1 189 10 is_stmt 1 view .LVU3377
 9884 3922 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 9885 3925 7619     		jbe	.L740	#,
 190:sieve_extend.c ****    }
 9886              		.loc 1 190 8 view .LVU3378
 9887              	# sieve_extend.c:190:        *index_ptr |= mask;       index_ptr+=step;
 190:sieve_extend.c ****    }
 9888              		.loc 1 190 19 is_stmt 0 view .LVU3379
 9889 3927 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_333, offset: 0B], _103
 190:sieve_extend.c ****    }
 9890              		.loc 1 190 34 is_stmt 1 view .LVU3380
 9891              	# sieve_extend.c:190:        *index_ptr |= mask;       index_ptr+=step;
 190:sieve_extend.c ****    }
 9892              		.loc 1 190 43 is_stmt 0 view .LVU3381
 9893 392a 4801D0   		add	rax, rdx	# index_ptr, _118
 9894              	.LVL527:
 189:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 9895              		.loc 1 189 10 is_stmt 1 view .LVU3382
 9896 392d 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 9897 3930 760E     		jbe	.L740	#,
 190:sieve_extend.c ****    }
 9898              		.loc 1 190 8 view .LVU3383
 9899              	# sieve_extend.c:190:        *index_ptr |= mask;       index_ptr+=step;
 190:sieve_extend.c ****    }
 9900              		.loc 1 190 19 is_stmt 0 view .LVU3384
 9901 3932 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_333, offset: 0B], _103
 190:sieve_extend.c ****    }
 9902              		.loc 1 190 34 is_stmt 1 view .LVU3385
GAS LISTING /tmp/ccLUVin9.s 			page 271


 9903              	# sieve_extend.c:190:        *index_ptr |= mask;       index_ptr+=step;
 190:sieve_extend.c ****    }
 9904              		.loc 1 190 43 is_stmt 0 view .LVU3386
 9905 3935 4801D0   		add	rax, rdx	# index_ptr, _118
 9906              	.LVL528:
 189:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 9907              		.loc 1 189 10 is_stmt 1 view .LVU3387
 9908 3938 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 9909 393b 77A8     		ja	.L741	#,
 9910 393d 0F1F00   		.p2align 4
 9911              		.p2align 3
 9912              	.L740:
 193:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 9913              		.loc 1 193 4 view .LVU3388
 9914              	# sieve_extend.c:193:    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range
 193:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 9915              		.loc 1 193 7 is_stmt 0 view .LVU3389
 9916 3940 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 9917 3943 747B     		je	.L936	#,
 9918              	.LVL529:
 9919              	.L742:
 193:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 9920              		.loc 1 193 7 view .LVU3390
 9921              	.LBE487:
 9922              	.LBE489:
 391:sieve_extend.c ****         #if __APPLE__
 9923              		.loc 1 391 77 is_stmt 1 view .LVU3391
 9924              	# sieve_extend.c:391:     for (register counter_t index = range_start; index < range_stop_unique; i
 391:sieve_extend.c ****         #if __APPLE__
 9925              		.loc 1 391 83 is_stmt 0 view .LVU3392
 9926 3945 4C01E5   		add	rbp, r12	# index, step
 9927              	.LVL530:
 391:sieve_extend.c ****         #if __APPLE__
 9928              		.loc 1 391 50 is_stmt 1 view .LVU3393
 9929              	# sieve_extend.c:391:     for (register counter_t index = range_start; index < range_stop_unique; i
 391:sieve_extend.c ****         #if __APPLE__
 9930              		.loc 1 391 5 is_stmt 0 view .LVU3394
 9931 3948 4939EA   		cmp	r10, rbp	# range_stop_unique, index
 9932 394b 0F876FFE 		ja	.L743	#,
 9932      FFFF
 9933              	.LVL531:
 391:sieve_extend.c ****         #if __APPLE__
 9934              		.loc 1 391 5 view .LVU3395
 9935              	.LBE484:
 9936              	.LBE483:
 9937              	.LBE482:
 9938              	.LBE502:
 885:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 9939              		.loc 1 885 11 is_stmt 1 view .LVU3396
 9940              	# sieve_extend.c:885:     for (;range_stop < block_stop;) {
 885:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 9941              		.loc 1 885 5 is_stmt 0 view .LVU3397
 9942 3951 4C3B7424 		cmp	r14, QWORD PTR 8[rsp]	# _67, %sfp
 9942      08
 9943 3956 0F8215FD 		jb	.L745	#,
 9943      FFFF
 9944              	.L935:
GAS LISTING /tmp/ccLUVin9.s 			page 272


 885:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 9945              		.loc 1 885 5 view .LVU3398
 9946 395c 488B6C24 		mov	rbp, QWORD PTR 16[rsp]	# index, %sfp
 9946      10
 9947 3961 BA010000 		mov	edx, 1	# tmp327,
 9947      00
 9948 3966 488B5C24 		mov	rbx, QWORD PTR 40[rsp]	# <retval>, %sfp
 9948      28
 9949 396b 488B7424 		mov	rsi, QWORD PTR 24[rsp]	# block$pattern_start, %sfp
 9949      18
 9950 3970 4989EE   		mov	r14, rbp	# tmp324, index
 9951              	.LVL532:
 885:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 9952              		.loc 1 885 5 view .LVU3399
 9953 3973 89EF     		mov	edi, ebp	# tmp653, index
 9954 3975 4C8B6308 		mov	r12, QWORD PTR 8[rbx]	# prephitmp_565, sieve_89->bits
 9955              	.LVL533:
 885:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 9956              		.loc 1 885 5 view .LVU3400
 9957 3979 C462C1F7 		shlx	r8, rdx, rdi	# prephitmp_503, tmp327, tmp653
 9957      C2
 9958 397e 49C1EE06 		shr	r14, 6	# tmp324,
 9959 3982 4C89EA   		mov	rdx, r13	# block$pattern_size, patternsize_bits
 9960 3985 4F8D14F7 		lea	r10, [r15+r14*8]	# prephitmp_506,
 9961              	.LBE508:
 9962              	.LBE516:
 9963              	.LBB517:
 9964              	.LBB518:
 9965              	# sieve_extend.c:825:     if (size < WORD_SIZE_counter)   {
 825:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 9966              		.loc 1 825 8 view .LVU3401
 9967 3989 4883FA3F 		cmp	rdx, 63	# block$pattern_size,
 9968 398d 4C896424 		mov	QWORD PTR 8[rsp], r12	# %sfp, prephitmp_565
 9968      08
 9969              	.LVL534:
 825:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 9970              		.loc 1 825 8 view .LVU3402
 9971 3992 4C894424 		mov	QWORD PTR 48[rsp], r8	# %sfp, prephitmp_503
 9971      30
 9972              	.LVL535:
 825:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 9973              		.loc 1 825 8 view .LVU3403
 9974              	.LBE518:
 9975              	.LBE517:
 9976              	.LBB523:
 9977              	.LBB509:
 9978              	# sieve_extend.c:885:     for (;range_stop < block_stop;) {
 885:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 9979              		.loc 1 885 5 view .LVU3404
 9980 3997 48896C24 		mov	QWORD PTR 72[rsp], rbp	# %sfp, index
 9980      48
 911:sieve_extend.c **** }
 9981              		.loc 1 911 5 is_stmt 1 view .LVU3405
 9982              	.LVL536:
 911:sieve_extend.c **** }
 9983              		.loc 1 911 5 is_stmt 0 view .LVU3406
 9984              	.LBE509:
GAS LISTING /tmp/ccLUVin9.s 			page 273


 9985              	.LBE523:
 922:sieve_extend.c ****     counter_t startprime = block.prime;
 9986              		.loc 1 922 5 is_stmt 1 view .LVU3407
 9987              	.LBB524:
 9988              	.LBI517:
 824:sieve_extend.c ****     if (size < WORD_SIZE_counter)   {
 9989              		.loc 1 824 20 view .LVU3408
 9990              	.LBB519:
 825:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 9991              		.loc 1 825 5 view .LVU3409
 9992 399c 4C895424 		mov	QWORD PTR 64[rsp], r10	# %sfp, prephitmp_506
 9992      40
 9993              	# sieve_extend.c:825:     if (size < WORD_SIZE_counter)   {
 825:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 9994              		.loc 1 825 8 is_stmt 0 view .LVU3410
 9995 39a1 0F87AB00 		ja	.L746	#,
 9995      0000
 9996              	.LVL537:
 9997              	.L723:
 826:sieve_extend.c ****         return; // rapid exit for small sizes
 9998              		.loc 1 826 9 is_stmt 1 view .LVU3411
 9999 39a7 488B4C24 		mov	rcx, QWORD PTR 8[rsp]	#, %sfp
 9999      08
 10000 39ac 4C89FF   		mov	rdi, r15	#, _94
 10001 39af E84CC6FF 		call	extendSieve_smallSize	#
 10001      FF
 10002              	.LVL538:
 827:sieve_extend.c ****     }
 10003              		.loc 1 827 9 view .LVU3412
 10004 39b4 E9C30000 		jmp	.L747	#
 10004      00
 10005              	.LVL539:
 10006 39b9 0F1F8000 		.p2align 4,,7
 10006      000000
 10007              		.p2align 3
 10008              	.L936:
 827:sieve_extend.c ****     }
 10009              		.loc 1 827 9 is_stmt 0 view .LVU3413
 10010              	.LBE519:
 10011              	.LBE524:
 10012              	.LBB525:
 10013              	.LBB510:
 10014              	.LBB503:
 10015              	.LBB493:
 10016              	.LBB492:
 10017              	.LBB491:
 10018              	.LBB490:
 10019              	.LBB488:
 194:sieve_extend.c ****    }
 10020              		.loc 1 194 7 is_stmt 1 view .LVU3414
 10021              	# sieve_extend.c:194:       *index_ptr |= (mask & chopmask(range_stop));
 194:sieve_extend.c ****    }
 10022              		.loc 1 194 27 is_stmt 0 view .LVU3415
 10023 39c0 48234C24 		and	rcx, QWORD PTR 64[rsp]	# tmp323, %sfp
 10023      40
 10024              	.LVL540:
 10025              	# sieve_extend.c:194:       *index_ptr |= (mask & chopmask(range_stop));
GAS LISTING /tmp/ccLUVin9.s 			page 274


 194:sieve_extend.c ****    }
 10026              		.loc 1 194 18 view .LVU3416
 10027 39c5 490908   		or	QWORD PTR [r8], rcx	# *index_ptr_332, tmp323
 10028 39c8 E978FFFF 		jmp	.L742	#
 10028      FF
 10029              	.LVL541:
 10030 39cd 0F1F00   		.p2align 4,,7
 10031              		.p2align 3
 10032              	.L934:
 194:sieve_extend.c ****    }
 10033              		.loc 1 194 18 view .LVU3417
 10034              	.LBE488:
 10035              	.LBE490:
 10036              	.LBE491:
 10037              	.LBE492:
 10038              	.LBE493:
 899:sieve_extend.c ****             extendSieve(bitarray, pattern_start, patternsize_bits, range_stop);
 10039              		.loc 1 899 13 is_stmt 1 view .LVU3418
 900:sieve_extend.c ****         }
 10040              		.loc 1 900 13 view .LVU3419
 10041              	.LBB494:
 10042              	.LBI494:
 824:sieve_extend.c ****     if (size < WORD_SIZE_counter)   {
 10043              		.loc 1 824 20 view .LVU3420
 10044              	.LBB495:
 825:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 10045              		.loc 1 825 5 view .LVU3421
 10046              	# sieve_extend.c:825:     if (size < WORD_SIZE_counter)   {
 825:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 10047              		.loc 1 825 8 is_stmt 0 view .LVU3422
 10048 39d0 4983FD3F 		cmp	r13, 63	# patternsize_bits,
 10049 39d4 0F86E305 		jbe	.L937	#,
 10049      0000
 830:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 10050              		.loc 1 830 5 is_stmt 1 view .LVU3423
 10051              	.LVL542:
 831:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 10052              		.loc 1 831 5 view .LVU3424
 10053              	# sieve_extend.c:830:     const counter_t copy_start  = source_start + size;
 830:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 10054              		.loc 1 830 21 is_stmt 0 view .LVU3425
 10055 39da 4F8D442D 		lea	r8, [r13+r13]	# copy_start,
 10055      00
 10056              	# sieve_extend.c:832:     const bitshift_t source_bit = bitindex_calc(source_start);
 832:sieve_extend.c **** 
 10057              		.loc 1 832 22 view .LVU3426
 10058 39df 4D89E9   		mov	r9, r13	# source_bit, patternsize_bits
 10059              	# sieve_extend.c:831:     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 831:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 10060              		.loc 1 831 22 view .LVU3427
 10061 39e2 4183E03F 		and	r8d, 63	# copy_bit,
 10062              	.LVL543:
 832:sieve_extend.c **** 
 10063              		.loc 1 832 5 is_stmt 1 view .LVU3428
 10064              	# sieve_extend.c:832:     const bitshift_t source_bit = bitindex_calc(source_start);
 832:sieve_extend.c **** 
 10065              		.loc 1 832 22 is_stmt 0 view .LVU3429
GAS LISTING /tmp/ccLUVin9.s 			page 275


 10066 39e6 4183E13F 		and	r9d, 63	# source_bit,
 10067              	.LVL544:
 834:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 10068              		.loc 1 834 5 is_stmt 1 view .LVU3430
 10069              	# sieve_extend.c:834:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 834:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 10070              		.loc 1 834 13 is_stmt 0 view .LVU3431
 10071 39ea 4D39C8   		cmp	r8, r9	# copy_bit, source_bit
 10072              	# sieve_extend.c:834:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 834:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 10073              		.loc 1 834 37 view .LVU3432
 10074 39ed 4C89F1   		mov	rcx, r14	#, _67
 10075 39f0 4C89EA   		mov	rdx, r13	#, patternsize_bits
 10076 39f3 4C89EE   		mov	rsi, r13	#, patternsize_bits
 10077 39f6 4C89FF   		mov	rdi, r15	#, _94
 10078              	# sieve_extend.c:834:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 834:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 10079              		.loc 1 834 13 view .LVU3433
 10080 39f9 0F827204 		jb	.L938	#,
 10080      0000
 10081              	.LVL545:
 835:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 10082              		.loc 1 835 10 is_stmt 1 view .LVU3434
 10083              	# sieve_extend.c:835:     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, so
 835:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 10084              		.loc 1 835 13 is_stmt 0 view .LVU3435
 10085 39ff 0F865D04 		jbe	.L734	#,
 10085      0000
 835:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 10086              		.loc 1 835 37 is_stmt 1 view .LVU3436
 10087 3a05 E8B6CCFF 		call	extendSieve_shiftright_ivdep	#
 10087      FF
 10088              	.LVL546:
 835:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 10089              		.loc 1 835 37 is_stmt 0 view .LVU3437
 10090 3a0a 4C896C24 		mov	QWORD PTR 32[rsp], r13	# %sfp, patternsize_bits
 10090      20
 10091 3a0f 90       		.p2align 4,,3
 10092 3a10 E933FCFF 		jmp	.L731	#
 10092      FF
 10093              	.LVL547:
 10094              	.L932:
 835:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 10095              		.loc 1 835 37 view .LVU3438
 10096 3a15 4C8B6C24 		mov	r13, QWORD PTR 40[rsp]	# <retval>, %sfp
 10096      28
 10097 3a1a 4989CB   		mov	r11, rcx	# tmp289, prime
 10098 3a1d 49C1EB06 		shr	r11, 6	# tmp289,
 10099 3a21 41BC0100 		mov	r12d, 1	# tmp292,
 10099      0000
 10100 3a27 48894C24 		mov	QWORD PTR 72[rsp], rcx	# %sfp, prime
 10100      48
 10101 3a2c 4B8D04DF 		lea	rax, [r15+r11*8]	# prephitmp_506,
 10102 3a30 4D8B4D08 		mov	r9, QWORD PTR 8[r13]	# prephitmp_565, sieve_89->bits
 10103 3a34 C4C2F1F7 		shlx	rbx, r12, rcx	# prephitmp_503, tmp292, tmp624
 10103      DC
 10104 3a39 48894424 		mov	QWORD PTR 64[rsp], rax	# %sfp, prephitmp_506
GAS LISTING /tmp/ccLUVin9.s 			page 276


 10104      40
 10105 3a3e 48895C24 		mov	QWORD PTR 48[rsp], rbx	# %sfp, prephitmp_503
 10105      30
 10106 3a43 4C894C24 		mov	QWORD PTR 8[rsp], r9	# %sfp, prephitmp_565
 10106      08
 10107              	.LVL548:
 10108              	.L730:
 835:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 10109              		.loc 1 835 37 view .LVU3439
 10110              	.LBE495:
 10111              	.LBE494:
 10112              	.LBE503:
 10113              	.LBE510:
 10114              	.LBE525:
 922:sieve_extend.c ****     counter_t startprime = block.prime;
 10115              		.loc 1 922 5 is_stmt 1 view .LVU3440
 10116              	.LBB526:
 824:sieve_extend.c ****     if (size < WORD_SIZE_counter)   {
 10117              		.loc 1 824 20 view .LVU3441
 10118              	.LBB520:
 825:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 10119              		.loc 1 825 5 view .LVU3442
 10120              	# sieve_extend.c:825:     if (size < WORD_SIZE_counter)   {
 825:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 10121              		.loc 1 825 8 is_stmt 0 view .LVU3443
 10122 3a48 4883FA3F 		cmp	rdx, 63	# block$pattern_size,
 10123 3a4c 0F8655FF 		jbe	.L723	#,
 10123      FFFF
 10124              	.LVL549:
 10125              	.L746:
 830:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 10126              		.loc 1 830 5 is_stmt 1 view .LVU3444
 831:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 10127              		.loc 1 831 5 view .LVU3445
 10128              	# sieve_extend.c:830:     const counter_t copy_start  = source_start + size;
 830:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 10129              		.loc 1 830 21 is_stmt 0 view .LVU3446
 10130 3a52 488D2C16 		lea	rbp, [rsi+rdx]	# copy_start,
 10131              	.LVL550:
 10132              	# sieve_extend.c:832:     const bitshift_t source_bit = bitindex_calc(source_start);
 832:sieve_extend.c **** 
 10133              		.loc 1 832 22 view .LVU3447
 10134 3a56 4989F6   		mov	r14, rsi	# source_bit, block$pattern_start
 10135              	# sieve_extend.c:831:     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 831:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 10136              		.loc 1 831 22 view .LVU3448
 10137 3a59 83E53F   		and	ebp, 63	# copy_bit,
 10138              	.LVL551:
 832:sieve_extend.c **** 
 10139              		.loc 1 832 5 is_stmt 1 view .LVU3449
 10140              	# sieve_extend.c:832:     const bitshift_t source_bit = bitindex_calc(source_start);
 832:sieve_extend.c **** 
 10141              		.loc 1 832 22 is_stmt 0 view .LVU3450
 10142 3a5c 4183E63F 		and	r14d, 63	# source_bit,
 10143              	.LVL552:
 834:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 10144              		.loc 1 834 5 is_stmt 1 view .LVU3451
GAS LISTING /tmp/ccLUVin9.s 			page 277


 10145              	# sieve_extend.c:834:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 834:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 10146              		.loc 1 834 13 is_stmt 0 view .LVU3452
 10147 3a60 4C39F5   		cmp	rbp, r14	# copy_bit, source_bit
 10148              	# sieve_extend.c:834:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 834:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 10149              		.loc 1 834 37 view .LVU3453
 10150 3a63 4C89FF   		mov	rdi, r15	#, _94
 10151 3a66 488B4C24 		mov	rcx, QWORD PTR 8[rsp]	#, %sfp
 10151      08
 10152              	# sieve_extend.c:834:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 834:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 10153              		.loc 1 834 13 view .LVU3454
 10154 3a6b 0F826705 		jb	.L939	#,
 10154      0000
 10155              	.LVL553:
 835:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 10156              		.loc 1 835 10 is_stmt 1 view .LVU3455
 10157              	# sieve_extend.c:835:     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, so
 835:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 10158              		.loc 1 835 13 is_stmt 0 view .LVU3456
 10159 3a71 0F870904 		ja	.L940	#,
 10159      0000
 836:sieve_extend.c **** }
 10160              		.loc 1 836 37 is_stmt 1 view .LVU3457
 10161 3a77 E814E3FF 		call	extendSieve_aligned	#
 10161      FF
 10162              	.LVL554:
 10163              	.L747:
 836:sieve_extend.c **** }
 10164              		.loc 1 836 37 is_stmt 0 view .LVU3458
 10165              	.LBE520:
 10166              	.LBE526:
 923:sieve_extend.c **** 
 10167              		.loc 1 923 5 is_stmt 1 view .LVU3459
 926:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 10168              		.loc 1 926 5 view .LVU3460
 10169              	.LBB527:
 926:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 10170              		.loc 1 926 10 view .LVU3461
 10171              	# sieve_extend.c:926:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 926:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 10172              		.loc 1 926 38 is_stmt 0 view .LVU3462
 10173 3a7c 488B7424 		mov	rsi, QWORD PTR 56[rsp]	# blocksize, %sfp
 10173      38
 10174              	# sieve_extend.c:926:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 926:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 10175              		.loc 1 926 20 view .LVU3463
 10176 3a81 4531F6   		xor	r14d, r14d	# block_start
 10177              	# sieve_extend.c:926:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 926:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 10178              		.loc 1 926 83 view .LVU3464
 10179 3a84 4C8B5424 		mov	r10, QWORD PTR 40[rsp]	# <retval>, %sfp
 10179      28
 10180              	# sieve_extend.c:926:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 926:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 10181              		.loc 1 926 38 view .LVU3465
GAS LISTING /tmp/ccLUVin9.s 			page 278


 10182 3a89 4C8D66FF 		lea	r12, -1[rsi]	# block_stop,
 10183              	.LVL555:
 926:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 10184              		.loc 1 926 63 is_stmt 1 view .LVU3466
 10185              	# sieve_extend.c:926:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 926:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 10186              		.loc 1 926 83 is_stmt 0 view .LVU3467
 10187 3a8d 498B5208 		mov	rdx, QWORD PTR 8[r10]	# _8, sieve_89->bits
 10188              	.LVL556:
 10189 3a91 66662E0F 		.p2align 4
 10189      1F840000 
 10189      0000000F 
 10189      1F4000
 10190              		.p2align 3
 10191              	.L753:
 10192              	.LBB528:
 927:sieve_extend.c ****         counter_t prime = searchBitFalse(bitarray, startprime);
 10193              		.loc 1 927 9 is_stmt 1 view .LVU3468
 10194              	.LBB529:
 10195              	.LBB530:
 10196              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10197              		.loc 1 122 11 is_stmt 0 view .LVU3469
 10198 3aa0 488B7C24 		mov	rdi, QWORD PTR 64[rsp]	# prephitmp_506, %sfp
 10198      40
 10199 3aa5 4C39E2   		cmp	rdx, r12	# _8, block_stop
 10200 3aa8 4C8B6C24 		mov	r13, QWORD PTR 48[rsp]	# prephitmp_503, %sfp
 10200      30
 10201 3aad 4C8B4424 		mov	r8, QWORD PTR 72[rsp]	# index, %sfp
 10201      48
 10202 3ab2 4C0F46E2 		cmovbe	r12, rdx	# _8,, block_stop
 10203              	.LVL557:
 122:sieve_extend.c ****     return index;
 10204              		.loc 1 122 11 view .LVU3470
 10205 3ab6 4C896424 		mov	QWORD PTR 8[rsp], r12	# %sfp, block_stop
 10205      08
 10206              	.LVL558:
 122:sieve_extend.c ****     return index;
 10207              		.loc 1 122 11 view .LVU3471
 10208              	.LBE530:
 10209              	.LBE529:
 928:sieve_extend.c ****         sieve_block_stripe(bitarray, block_start, block_stop, prime);
 10210              		.loc 1 928 9 is_stmt 1 view .LVU3472
 10211              	.LBB532:
 10212              	.LBI529:
 121:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 10213              		.loc 1 121 25 view .LVU3473
 10214              	.LBB531:
 122:sieve_extend.c ****     return index;
 10215              		.loc 1 122 5 view .LVU3474
 122:sieve_extend.c ****     return index;
 10216              		.loc 1 122 11 view .LVU3475
 10217 3abb 4C852F   		test	QWORD PTR [rdi], r13	# MEM[(uint64_t *)prephitmp_506], prephitmp_503
 10218 3abe 0F84BC00 		je	.L750	#,
 10218      0000
 10219              	.LVL559:
 10220              	.L751:
GAS LISTING /tmp/ccLUVin9.s 			page 279


 122:sieve_extend.c ****     return index;
 10221              		.loc 1 122 58 view .LVU3476
 10222              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10223              		.loc 1 122 63 is_stmt 0 view .LVU3477
 10224 3ac4 4D8D4801 		lea	r9, 1[r8]	# tmp393,
 10225              	.LVL560:
 10226              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10227              		.loc 1 122 21 view .LVU3478
 10228 3ac8 4D89CB   		mov	r11, r9	# tmp330, index
 10229              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10230              		.loc 1 122 63 view .LVU3479
 10231 3acb 4D89C8   		mov	r8, r9	# index, tmp393
 122:sieve_extend.c ****     return index;
 10232              		.loc 1 122 11 is_stmt 1 view .LVU3480
 10233              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10234              		.loc 1 122 21 is_stmt 0 view .LVU3481
 10235 3ace 49C1EB06 		shr	r11, 6	# tmp330,
 10236              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10237              		.loc 1 122 12 view .LVU3482
 10238 3ad2 4B8B04DF 		mov	rax, QWORD PTR [r15+r11*8]	# *_32, *_32
 10239              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10240              		.loc 1 122 11 view .LVU3483
 10241 3ad6 4C0FA3C8 		bt	rax, r9	# *_32, index
 10242 3ada 0F83A000 		jnc	.L750	#,
 10242      0000
 122:sieve_extend.c ****     return index;
 10243              		.loc 1 122 58 is_stmt 1 view .LVU3484
 10244              	.LVL561:
 10245              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10246              		.loc 1 122 63 is_stmt 0 view .LVU3485
 10247 3ae0 4983C001 		add	r8, 1	# index,
 10248              	.LVL562:
 122:sieve_extend.c ****     return index;
 10249              		.loc 1 122 11 is_stmt 1 view .LVU3486
 10250              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10251              		.loc 1 122 21 is_stmt 0 view .LVU3487
 10252 3ae4 4D89C4   		mov	r12, r8	# tmp431, index
 10253 3ae7 49C1EC06 		shr	r12, 6	# tmp431,
 10254              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10255              		.loc 1 122 12 view .LVU3488
 10256 3aeb 4B8B0CE7 		mov	rcx, QWORD PTR [r15+r12*8]	# *_32, *_32
 10257              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10258              		.loc 1 122 11 view .LVU3489
 10259 3aef 4C0FA3C1 		bt	rcx, r8	# *_32, index
 10260 3af3 0F838700 		jnc	.L750	#,
 10260      0000
 122:sieve_extend.c ****     return index;
GAS LISTING /tmp/ccLUVin9.s 			page 280


 10261              		.loc 1 122 58 is_stmt 1 view .LVU3490
 10262              	.LVL563:
 10263              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10264              		.loc 1 122 63 is_stmt 0 view .LVU3491
 10265 3af9 4D8D4102 		lea	r8, 2[r9]	# index,
 10266              	.LVL564:
 122:sieve_extend.c ****     return index;
 10267              		.loc 1 122 11 is_stmt 1 view .LVU3492
 10268              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10269              		.loc 1 122 21 is_stmt 0 view .LVU3493
 10270 3afd 4C89C3   		mov	rbx, r8	# tmp435, index
 10271 3b00 48C1EB06 		shr	rbx, 6	# tmp435,
 10272              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10273              		.loc 1 122 12 view .LVU3494
 10274 3b04 498B2CDF 		mov	rbp, QWORD PTR [r15+rbx*8]	# *_32, *_32
 10275              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10276              		.loc 1 122 11 view .LVU3495
 10277 3b08 4C0FA3C5 		bt	rbp, r8	# *_32, index
 10278 3b0c 7372     		jnc	.L750	#,
 122:sieve_extend.c ****     return index;
 10279              		.loc 1 122 58 is_stmt 1 view .LVU3496
 10280              	.LVL565:
 10281              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10282              		.loc 1 122 63 is_stmt 0 view .LVU3497
 10283 3b0e 4D8D4103 		lea	r8, 3[r9]	# index,
 10284              	.LVL566:
 122:sieve_extend.c ****     return index;
 10285              		.loc 1 122 11 is_stmt 1 view .LVU3498
 10286              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10287              		.loc 1 122 21 is_stmt 0 view .LVU3499
 10288 3b12 4C89C6   		mov	rsi, r8	# tmp439, index
 10289 3b15 48C1EE06 		shr	rsi, 6	# tmp439,
 10290              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10291              		.loc 1 122 12 view .LVU3500
 10292 3b19 4D8B14F7 		mov	r10, QWORD PTR [r15+rsi*8]	# *_32, *_32
 10293              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10294              		.loc 1 122 11 view .LVU3501
 10295 3b1d 4D0FA3C2 		bt	r10, r8	# *_32, index
 10296 3b21 735D     		jnc	.L750	#,
 122:sieve_extend.c ****     return index;
 10297              		.loc 1 122 58 is_stmt 1 view .LVU3502
 10298              	.LVL567:
 10299              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10300              		.loc 1 122 63 is_stmt 0 view .LVU3503
 10301 3b23 4D8D4104 		lea	r8, 4[r9]	# index,
 10302              	.LVL568:
 122:sieve_extend.c ****     return index;
 10303              		.loc 1 122 11 is_stmt 1 view .LVU3504
GAS LISTING /tmp/ccLUVin9.s 			page 281


 10304              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10305              		.loc 1 122 21 is_stmt 0 view .LVU3505
 10306 3b27 4C89C7   		mov	rdi, r8	# tmp443, index
 10307 3b2a 48C1EF06 		shr	rdi, 6	# tmp443,
 10308              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10309              		.loc 1 122 12 view .LVU3506
 10310 3b2e 4D8B2CFF 		mov	r13, QWORD PTR [r15+rdi*8]	# *_32, *_32
 10311              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10312              		.loc 1 122 11 view .LVU3507
 10313 3b32 4D0FA3C5 		bt	r13, r8	# *_32, index
 10314 3b36 7348     		jnc	.L750	#,
 122:sieve_extend.c ****     return index;
 10315              		.loc 1 122 58 is_stmt 1 view .LVU3508
 10316              	.LVL569:
 10317              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10318              		.loc 1 122 63 is_stmt 0 view .LVU3509
 10319 3b38 4D8D4105 		lea	r8, 5[r9]	# index,
 10320              	.LVL570:
 122:sieve_extend.c ****     return index;
 10321              		.loc 1 122 11 is_stmt 1 view .LVU3510
 10322              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10323              		.loc 1 122 21 is_stmt 0 view .LVU3511
 10324 3b3c 4D89C3   		mov	r11, r8	# tmp447, index
 10325 3b3f 49C1EB06 		shr	r11, 6	# tmp447,
 10326              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10327              		.loc 1 122 12 view .LVU3512
 10328 3b43 4B8B04DF 		mov	rax, QWORD PTR [r15+r11*8]	# *_32, *_32
 10329              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10330              		.loc 1 122 11 view .LVU3513
 10331 3b47 4C0FA3C0 		bt	rax, r8	# *_32, index
 10332 3b4b 7333     		jnc	.L750	#,
 122:sieve_extend.c ****     return index;
 10333              		.loc 1 122 58 is_stmt 1 view .LVU3514
 10334              	.LVL571:
 10335              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10336              		.loc 1 122 63 is_stmt 0 view .LVU3515
 10337 3b4d 4D8D4106 		lea	r8, 6[r9]	# index,
 10338              	.LVL572:
 122:sieve_extend.c ****     return index;
 10339              		.loc 1 122 11 is_stmt 1 view .LVU3516
 10340              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10341              		.loc 1 122 21 is_stmt 0 view .LVU3517
 10342 3b51 4D89C4   		mov	r12, r8	# tmp451, index
 10343 3b54 49C1EC06 		shr	r12, 6	# tmp451,
 10344              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10345              		.loc 1 122 12 view .LVU3518
 10346 3b58 4B8B0CE7 		mov	rcx, QWORD PTR [r15+r12*8]	# *_32, *_32
GAS LISTING /tmp/ccLUVin9.s 			page 282


 10347              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10348              		.loc 1 122 11 view .LVU3519
 10349 3b5c 4C0FA3C1 		bt	rcx, r8	# *_32, index
 10350 3b60 731E     		jnc	.L750	#,
 122:sieve_extend.c ****     return index;
 10351              		.loc 1 122 58 is_stmt 1 view .LVU3520
 10352              	.LVL573:
 10353              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10354              		.loc 1 122 63 is_stmt 0 view .LVU3521
 10355 3b62 4D8D4107 		lea	r8, 7[r9]	# index,
 10356              	.LVL574:
 122:sieve_extend.c ****     return index;
 10357              		.loc 1 122 11 is_stmt 1 view .LVU3522
 10358              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10359              		.loc 1 122 21 is_stmt 0 view .LVU3523
 10360 3b66 4D89C1   		mov	r9, r8	# tmp455, index
 10361 3b69 49C1E906 		shr	r9, 6	# tmp455,
 10362              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10363              		.loc 1 122 12 view .LVU3524
 10364 3b6d 4B8B1CCF 		mov	rbx, QWORD PTR [r15+r9*8]	# *_32, *_32
 10365              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10366              		.loc 1 122 11 view .LVU3525
 10367 3b71 4C0FA3C3 		bt	rbx, r8	# *_32, index
 10368 3b75 0F8249FF 		jc	.L751	#,
 10368      FFFF
 10369              	.LVL575:
 10370 3b7b 0F1F4400 		.p2align 4
 10370      00
 10371              		.p2align 3
 10372              	.L750:
 123:sieve_extend.c **** }
 10373              		.loc 1 123 5 is_stmt 1 view .LVU3526
 123:sieve_extend.c **** }
 10374              		.loc 1 123 5 is_stmt 0 view .LVU3527
 10375              	.LBE531:
 10376              	.LBE532:
 929:sieve_extend.c ****     } 
 10377              		.loc 1 929 9 is_stmt 1 view .LVU3528
 10378              	.LBB533:
 10379              	.LBI533:
 839:sieve_extend.c ****     counter_t prime = prime_start;
 10380              		.loc 1 839 13 view .LVU3529
 10381              	.LBB534:
 840:sieve_extend.c ****     counter_t start = 0;
 10382              		.loc 1 840 5 view .LVU3530
 841:sieve_extend.c ****     counter_t step  = prime * 2 + 1;
 10383              		.loc 1 841 5 view .LVU3531
 842:sieve_extend.c **** 
 10384              		.loc 1 842 5 view .LVU3532
 10385              	# sieve_extend.c:842:     counter_t step  = prime * 2 + 1;
 842:sieve_extend.c **** 
 10386              		.loc 1 842 15 is_stmt 0 view .LVU3533
GAS LISTING /tmp/ccLUVin9.s 			page 283


 10387 3b80 4F8D5400 		lea	r10, 1[r8+r8]	# step,
 10387      01
 10388              	.LVL576:
 844:sieve_extend.c ****     
 10389              		.loc 1 844 5 is_stmt 1 view .LVU3534
 846:sieve_extend.c ****         if likely(block_start >= (prime + 1)) 
 10390              		.loc 1 846 5 view .LVU3535
 846:sieve_extend.c ****         if likely(block_start >= (prime + 1)) 
 10391              		.loc 1 846 11 view .LVU3536
 10392              	# sieve_extend.c:846:     while (prime*step <= block_stop) {
 846:sieve_extend.c ****         if likely(block_start >= (prime + 1)) 
 10393              		.loc 1 846 17 is_stmt 0 view .LVU3537
 10394 3b85 4C89C5   		mov	rbp, r8	# tmp336, index
 10395 3b88 490FAFEA 		imul	rbp, r10	# tmp336, step
 10396              	# sieve_extend.c:846:     while (prime*step <= block_stop) {
 846:sieve_extend.c ****         if likely(block_start >= (prime + 1)) 
 10397              		.loc 1 846 11 view .LVU3538
 10398 3b8c 48396C24 		cmp	QWORD PTR 8[rsp], rbp	# %sfp, tmp336
 10398      08
 10399 3b91 0F829D02 		jb	.L770	#,
 10399      0000
 10400              	.LBB535:
 10401              	.LBB536:
 10402              	.LBB537:
 10403              	.LBB538:
 10404              	.LBB539:
 10405              	# sieve_extend.c:174:    const counter_t range_stop_word = wordindex(range_stop);
 174:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 10406              		.loc 1 174 20 view .LVU3539
 10407 3b97 488B5424 		mov	rdx, QWORD PTR 8[rsp]	# block_stop, %sfp
 10407      08
 10408              	# sieve_extend.c:194:       *index_ptr |= (mask & chopmask(range_stop));
 194:sieve_extend.c ****    }
 10409              		.loc 1 194 29 view .LVU3540
 10410 3b9c 48C7C7FF 		mov	rdi, -1	# tmp671,
 10410      FFFFFF
 10411 3ba3 4C897424 		mov	QWORD PTR 24[rsp], r14	# %sfp, block_start
 10411      18
 10412              	# sieve_extend.c:174:    const counter_t range_stop_word = wordindex(range_stop);
 174:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 10413              		.loc 1 174 20 view .LVU3541
 10414 3ba8 4889D6   		mov	rsi, rdx	# range_stop_word, block_stop
 10415              	# sieve_extend.c:194:       *index_ptr |= (mask & chopmask(range_stop));
 194:sieve_extend.c ****    }
 10416              		.loc 1 194 29 view .LVU3542
 10417 3bab F7D2     		not	edx	# tmp338
 10418              	# sieve_extend.c:174:    const counter_t range_stop_word = wordindex(range_stop);
 174:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 10419              		.loc 1 174 20 view .LVU3543
 10420 3bad 48C1EE06 		shr	rsi, 6	# range_stop_word,
 10421              	# sieve_extend.c:194:       *index_ptr |= (mask & chopmask(range_stop));
 194:sieve_extend.c ****    }
 10422              		.loc 1 194 29 view .LVU3544
 10423 3bb1 C462EBF7 		shrx	r13, rdi, rdx	# _263, tmp671, tmp338
 10423      EF
 10424              	# sieve_extend.c:174:    const counter_t range_stop_word = wordindex(range_stop);
 174:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
GAS LISTING /tmp/ccLUVin9.s 			page 284


 10425              		.loc 1 174 20 view .LVU3545
 10426 3bb6 48897424 		mov	QWORD PTR 32[rsp], rsi	# %sfp, range_stop_word
 10426      20
 10427              	# sieve_extend.c:188:    register const bitword_t* __restrict range_stop_ptr = &bitarray[(range_sto
 188:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 10428              		.loc 1 188 41 view .LVU3546
 10429 3bbb 498D1CF7 		lea	rbx, [r15+rsi*8]	# range_stop_ptr,
 10430              	# sieve_extend.c:194:       *index_ptr |= (mask & chopmask(range_stop));
 194:sieve_extend.c ****    }
 10431              		.loc 1 194 29 view .LVU3547
 10432 3bbf 4C896C24 		mov	QWORD PTR 16[rsp], r13	# %sfp, _263
 10432      10
 10433              	.LVL577:
 10434 3bc4 66662E0F 		.p2align 4
 10434      1F840000 
 10434      00000090 
 10435              		.p2align 3
 10436              	.L769:
 194:sieve_extend.c ****    }
 10437              		.loc 1 194 29 view .LVU3548
 10438              	.LBE539:
 10439              	.LBE538:
 10440              	.LBE537:
 10441              	.LBE536:
 10442              	.LBE535:
 847:sieve_extend.c ****             start = block_start + prime + prime - ((block_start + prime) % step);
 10443              		.loc 1 847 9 is_stmt 1 view .LVU3549
 10444              	# sieve_extend.c:847:         if likely(block_start >= (prime + 1)) 
 847:sieve_extend.c ****             start = block_start + prime + prime - ((block_start + prime) % step);
 10445              		.loc 1 847 12 is_stmt 0 view .LVU3550
 10446 3bd0 488B4424 		mov	rax, QWORD PTR 24[rsp]	# block_start, %sfp
 10446      18
 10447 3bd5 498D6801 		lea	rbp, 1[r8]	# _157,
 10448 3bd9 4839E8   		cmp	rax, rbp	# block_start, _157
 10449 3bdc 0F82B603 		jb	.L755	#,
 10449      0000
 848:sieve_extend.c ****         else 
 10450              		.loc 1 848 13 is_stmt 1 view .LVU3551
 10451              	# sieve_extend.c:848:             start = block_start + prime + prime - ((block_start + prime) % st
 848:sieve_extend.c ****         else 
 10452              		.loc 1 848 33 is_stmt 0 view .LVU3552
 10453 3be2 4C01C0   		add	rax, r8	# _161, index
 10454              	# sieve_extend.c:848:             start = block_start + prime + prime - ((block_start + prime) % st
 848:sieve_extend.c ****         else 
 10455              		.loc 1 848 74 view .LVU3553
 10456 3be5 31D2     		xor	edx, edx	# tmp343
 10457              	# sieve_extend.c:848:             start = block_start + prime + prime - ((block_start + prime) % st
 848:sieve_extend.c ****         else 
 10458              		.loc 1 848 41 view .LVU3554
 10459 3be7 4A8D3400 		lea	rsi, [rax+r8]	# tmp341,
 10460              	# sieve_extend.c:848:             start = block_start + prime + prime - ((block_start + prime) % st
 848:sieve_extend.c ****         else 
 10461              		.loc 1 848 74 view .LVU3555
 10462 3beb 49F7F2   		div	r10	# step
 10463              	# sieve_extend.c:848:             start = block_start + prime + prime - ((block_start + prime) % st
 848:sieve_extend.c ****         else 
 10464              		.loc 1 848 19 view .LVU3556
GAS LISTING /tmp/ccLUVin9.s 			page 285


 10465 3bee 4829D6   		sub	rsi, rdx	# index, tmp343
 10466              	.LVL578:
 10467              	.L756:
 852:sieve_extend.c ****             setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
 10468              		.loc 1 852 9 is_stmt 1 view .LVU3557
 10469 3bf1 4989EB   		mov	r11, rbp	# tmp346, _157
 10470 3bf4 49C1EB06 		shr	r11, 6	# tmp346,
 10471 3bf8 49C1E303 		sal	r11, 3	# _527,
 10472              	# sieve_extend.c:852:         if (step < VECTORSTEP_FASTER) {
 852:sieve_extend.c ****             setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
 10473              		.loc 1 852 12 is_stmt 0 view .LVU3558
 10474 3bfc 4C391500 		cmp	QWORD PTR global_VECTORSTEP_FASTER[rip], r10	# global_VECTORSTEP_FASTER, step
 10474      000000
 10475 3c03 4F8D241F 		lea	r12, [r15+r11]	# _528,
 10476 3c07 0F879302 		ja	.L941	#,
 10476      0000
 857:sieve_extend.c ****             prime = searchBitFalse_longRange(bitarray, prime+1 );
 10477              		.loc 1 857 13 is_stmt 1 view .LVU3559
 10478              	.LVL579:
 10479              	.LBB550:
 10480              	.LBI535:
 385:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange (%ju occurances
 10481              		.loc 1 385 20 view .LVU3560
 10482              	.LBB548:
 386:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 10483              		.loc 1 386 5 view .LVU3561
 387:sieve_extend.c **** 
 10484              		.loc 1 387 5 view .LVU3562
 10485              	# sieve_extend.c:387:     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * st
 387:sieve_extend.c **** 
 10486              		.loc 1 387 74 is_stmt 0 view .LVU3563
 10487 3c0d 4D89D5   		mov	r13, r10	# tmp356, step
 10488 3c10 49C1E506 		sal	r13, 6	# tmp356,
 10489              	# sieve_extend.c:387:     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * st
 387:sieve_extend.c **** 
 10490              		.loc 1 387 21 view .LVU3564
 10491 3c14 4901F5   		add	r13, rsi	# range_stop_unique, index
 10492              	.LVL580:
 10493              	.LBB546:
 391:sieve_extend.c ****         #if __APPLE__
 10494              		.loc 1 391 10 is_stmt 1 view .LVU3565
 391:sieve_extend.c ****         #if __APPLE__
 10495              		.loc 1 391 50 view .LVU3566
 10496              	# sieve_extend.c:391:     for (register counter_t index = range_start; index < range_stop_unique; i
 391:sieve_extend.c ****         #if __APPLE__
 10497              		.loc 1 391 5 is_stmt 0 view .LVU3567
 10498 3c17 4C39EE   		cmp	rsi, r13	# index, range_stop_unique
 10499 3c1a 0F83C501 		jnb	.L768	#,
 10499      0000
 10500              	.LBB543:
 10501              	.LBB540:
 10502              	# sieve_extend.c:176:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 176:sieve_extend.c **** 
 10503              		.loc 1 176 133 view .LVU3568
 10504 3c20 4C8B7424 		mov	r14, QWORD PTR 32[rsp]	# range_stop_word, %sfp
 10504      20
 10505              	# sieve_extend.c:176:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
GAS LISTING /tmp/ccLUVin9.s 			page 286


 176:sieve_extend.c **** 
 10506              		.loc 1 176 110 view .LVU3569
 10507 3c25 4F8D0492 		lea	r8, [r10+r10*4]	# tmp365,
 10508              	# sieve_extend.c:181:        *index_ptr |= mask;        index_ptr+=step;
 181:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10509              		.loc 1 181 44 view .LVU3570
 10510 3c29 4A8D14D5 		lea	rdx, 0[0+r10*8]	# _231,
 10510      00000000 
 10511              	# sieve_extend.c:176:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 176:sieve_extend.c **** 
 10512              		.loc 1 176 133 view .LVU3571
 10513 3c31 4C89F1   		mov	rcx, r14	# tmp367, range_stop_word
 10514 3c34 4C29C1   		sub	rcx, r8	# tmp367, tmp365
 10515              	# sieve_extend.c:176:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 176:sieve_extend.c **** 
 10516              		.loc 1 176 53 view .LVU3572
 10517 3c37 4D39C6   		cmp	r14, r8	# range_stop_word, tmp365
 10518 3c3a 4D8D0CCF 		lea	r9, [r15+rcx*8]	# tmp369,
 10519 3c3e 4D89D6   		mov	r14, r10	# _556, step
 10520 3c41 4D0F46CF 		cmovbe	r9, r15	# _94,, fast_loop_ptr
 10521 3c45 49C1E003 		sal	r8, 3	# tmp373,
 10522 3c49 49C1E604 		sal	r14, 4	# _556,
 10523              	.LVL581:
 10524 3c4d 0F1F00   		.p2align 4
 10525              		.p2align 3
 10526              	.L767:
 176:sieve_extend.c **** 
 10527              		.loc 1 176 53 view .LVU3573
 10528              	.LBE540:
 10529              	.LBE543:
 395:sieve_extend.c ****         #endif
 10530              		.loc 1 395 13 is_stmt 1 view .LVU3574
 10531 3c50 4889F0   		mov	rax, rsi	# tmp376, index
 10532 3c53 BF010000 		mov	edi, 1	# tmp681,
 10532      00
 10533 3c58 48C1E806 		shr	rax, 6	# tmp376,
 10534 3c5c C4E2C9F7 		shlx	rcx, rdi, rsi	# _216, tmp681, index
 10534      CF
 10535              	.LVL582:
 10536              	.LBB544:
 10537              	.LBI538:
 173:sieve_extend.c ****    const counter_t range_stop_word = wordindex(range_stop);
 10538              		.loc 1 173 20 view .LVU3575
 10539              	.LBB541:
 174:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 10540              		.loc 1 174 4 view .LVU3576
 175:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 10541              		.loc 1 175 4 view .LVU3577
 10542              	# sieve_extend.c:175:    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(
 175:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 10543              		.loc 1 175 78 is_stmt 0 view .LVU3578
 10544 3c61 498D04C7 		lea	rax, [r15+rax*8]	# index_ptr,
 10545              	.LVL583:
 176:sieve_extend.c **** 
 10546              		.loc 1 176 4 is_stmt 1 view .LVU3579
 180:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10547              		.loc 1 180 10 view .LVU3580
GAS LISTING /tmp/ccLUVin9.s 			page 287


 10548 3c65 4C39C8   		cmp	rax, r9	# index_ptr, fast_loop_ptr
 10549 3c68 0F830201 		jnb	.L762	#,
 10549      0000
 180:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10550              		.loc 1 180 10 is_stmt 0 view .LVU3581
 10551 3c6e 4A8D3C30 		lea	rdi, [rax+r14]	# ivtmp.505,
 10552              	.L763:
 181:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10553              		.loc 1 181 8 is_stmt 1 view .LVU3582
 10554              	# sieve_extend.c:181:        *index_ptr |= mask;        index_ptr+=step;
 181:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10555              		.loc 1 181 19 is_stmt 0 view .LVU3583
 10556 3c72 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_327, offset: 0B], _216
 181:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10557              		.loc 1 181 35 is_stmt 1 view .LVU3584
 10558              	.LVL584:
 182:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10559              		.loc 1 182 8 view .LVU3585
 10560              	# sieve_extend.c:182:        *index_ptr |= mask;        index_ptr+=step;
 182:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10561              		.loc 1 182 19 is_stmt 0 view .LVU3586
 10562 3c75 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_327, index: _231, offset: 0B], _216
 182:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10563              		.loc 1 182 35 is_stmt 1 view .LVU3587
 10564              	.LVL585:
 183:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10565              		.loc 1 183 8 view .LVU3588
 10566              	# sieve_extend.c:183:        *index_ptr |= mask;        index_ptr+=step;
 183:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10567              		.loc 1 183 19 is_stmt 0 view .LVU3589
 10568 3c79 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _550, offset: 0B], _216
 183:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10569              		.loc 1 183 35 is_stmt 1 view .LVU3590
 10570              	.LVL586:
 184:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10571              		.loc 1 184 8 view .LVU3591
 10572              	# sieve_extend.c:184:        *index_ptr |= mask;        index_ptr+=step;
 184:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10573              		.loc 1 184 19 is_stmt 0 view .LVU3592
 10574 3c7c 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _550, index: _231, offset: 0B], _216
 184:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10575              		.loc 1 184 35 is_stmt 1 view .LVU3593
 10576              	.LVL587:
 185:sieve_extend.c ****    }
 10577              		.loc 1 185 8 view .LVU3594
 10578 3c80 4C01C7   		add	rdi, r8	# ivtmp.505, tmp373
 10579              	# sieve_extend.c:185:        *index_ptr |= mask;        index_ptr+=step;
 185:sieve_extend.c ****    }
 10580              		.loc 1 185 19 is_stmt 0 view .LVU3595
 10581 3c83 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_327, index: _231, step: 4, offset: 0B], _216
 185:sieve_extend.c ****    }
 10582              		.loc 1 185 35 is_stmt 1 view .LVU3596
 10583 3c87 4C01C0   		add	rax, r8	# index_ptr, tmp373
 10584              	.LVL588:
 180:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10585              		.loc 1 180 10 view .LVU3597
 10586 3c8a 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
GAS LISTING /tmp/ccLUVin9.s 			page 288


 10587 3c8d 0F86DD00 		jbe	.L762	#,
 10587      0000
 181:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10588              		.loc 1 181 8 view .LVU3598
 10589              	# sieve_extend.c:181:        *index_ptr |= mask;        index_ptr+=step;
 181:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10590              		.loc 1 181 19 is_stmt 0 view .LVU3599
 10591 3c93 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_327, offset: 0B], _216
 181:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10592              		.loc 1 181 35 is_stmt 1 view .LVU3600
 10593              	.LVL589:
 182:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10594              		.loc 1 182 8 view .LVU3601
 10595              	# sieve_extend.c:182:        *index_ptr |= mask;        index_ptr+=step;
 182:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10596              		.loc 1 182 19 is_stmt 0 view .LVU3602
 10597 3c96 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_327, index: _231, offset: 0B], _216
 182:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10598              		.loc 1 182 35 is_stmt 1 view .LVU3603
 10599              	.LVL590:
 183:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10600              		.loc 1 183 8 view .LVU3604
 10601              	# sieve_extend.c:183:        *index_ptr |= mask;        index_ptr+=step;
 183:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10602              		.loc 1 183 19 is_stmt 0 view .LVU3605
 10603 3c9a 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _550, offset: 0B], _216
 183:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10604              		.loc 1 183 35 is_stmt 1 view .LVU3606
 10605              	.LVL591:
 184:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10606              		.loc 1 184 8 view .LVU3607
 10607              	# sieve_extend.c:184:        *index_ptr |= mask;        index_ptr+=step;
 184:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10608              		.loc 1 184 19 is_stmt 0 view .LVU3608
 10609 3c9d 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _550, index: _231, offset: 0B], _216
 184:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10610              		.loc 1 184 35 is_stmt 1 view .LVU3609
 10611              	.LVL592:
 185:sieve_extend.c ****    }
 10612              		.loc 1 185 8 view .LVU3610
 10613 3ca1 4C01C7   		add	rdi, r8	# ivtmp.505, tmp373
 10614              	# sieve_extend.c:185:        *index_ptr |= mask;        index_ptr+=step;
 185:sieve_extend.c ****    }
 10615              		.loc 1 185 19 is_stmt 0 view .LVU3611
 10616 3ca4 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_327, index: _231, step: 4, offset: 0B], _216
 185:sieve_extend.c ****    }
 10617              		.loc 1 185 35 is_stmt 1 view .LVU3612
 10618 3ca8 4C01C0   		add	rax, r8	# index_ptr, tmp373
 10619              	.LVL593:
 180:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10620              		.loc 1 180 10 view .LVU3613
 10621 3cab 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 10622 3cae 0F86BC00 		jbe	.L762	#,
 10622      0000
 181:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10623              		.loc 1 181 8 view .LVU3614
 10624              	# sieve_extend.c:181:        *index_ptr |= mask;        index_ptr+=step;
GAS LISTING /tmp/ccLUVin9.s 			page 289


 181:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10625              		.loc 1 181 19 is_stmt 0 view .LVU3615
 10626 3cb4 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_327, offset: 0B], _216
 181:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10627              		.loc 1 181 35 is_stmt 1 view .LVU3616
 10628              	.LVL594:
 182:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10629              		.loc 1 182 8 view .LVU3617
 10630              	# sieve_extend.c:182:        *index_ptr |= mask;        index_ptr+=step;
 182:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10631              		.loc 1 182 19 is_stmt 0 view .LVU3618
 10632 3cb7 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_327, index: _231, offset: 0B], _216
 182:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10633              		.loc 1 182 35 is_stmt 1 view .LVU3619
 10634              	.LVL595:
 183:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10635              		.loc 1 183 8 view .LVU3620
 10636              	# sieve_extend.c:183:        *index_ptr |= mask;        index_ptr+=step;
 183:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10637              		.loc 1 183 19 is_stmt 0 view .LVU3621
 10638 3cbb 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _550, offset: 0B], _216
 183:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10639              		.loc 1 183 35 is_stmt 1 view .LVU3622
 10640              	.LVL596:
 184:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10641              		.loc 1 184 8 view .LVU3623
 10642              	# sieve_extend.c:184:        *index_ptr |= mask;        index_ptr+=step;
 184:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10643              		.loc 1 184 19 is_stmt 0 view .LVU3624
 10644 3cbe 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _550, index: _231, offset: 0B], _216
 184:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10645              		.loc 1 184 35 is_stmt 1 view .LVU3625
 10646              	.LVL597:
 185:sieve_extend.c ****    }
 10647              		.loc 1 185 8 view .LVU3626
 10648 3cc2 4C01C7   		add	rdi, r8	# ivtmp.505, tmp373
 10649              	# sieve_extend.c:185:        *index_ptr |= mask;        index_ptr+=step;
 185:sieve_extend.c ****    }
 10650              		.loc 1 185 19 is_stmt 0 view .LVU3627
 10651 3cc5 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_327, index: _231, step: 4, offset: 0B], _216
 185:sieve_extend.c ****    }
 10652              		.loc 1 185 35 is_stmt 1 view .LVU3628
 10653 3cc9 4C01C0   		add	rax, r8	# index_ptr, tmp373
 10654              	.LVL598:
 180:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10655              		.loc 1 180 10 view .LVU3629
 10656 3ccc 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 10657 3ccf 0F869B00 		jbe	.L762	#,
 10657      0000
 181:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10658              		.loc 1 181 8 view .LVU3630
 10659              	# sieve_extend.c:181:        *index_ptr |= mask;        index_ptr+=step;
 181:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10660              		.loc 1 181 19 is_stmt 0 view .LVU3631
 10661 3cd5 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_327, offset: 0B], _216
 181:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10662              		.loc 1 181 35 is_stmt 1 view .LVU3632
GAS LISTING /tmp/ccLUVin9.s 			page 290


 10663              	.LVL599:
 182:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10664              		.loc 1 182 8 view .LVU3633
 10665              	# sieve_extend.c:182:        *index_ptr |= mask;        index_ptr+=step;
 182:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10666              		.loc 1 182 19 is_stmt 0 view .LVU3634
 10667 3cd8 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_327, index: _231, offset: 0B], _216
 182:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10668              		.loc 1 182 35 is_stmt 1 view .LVU3635
 10669              	.LVL600:
 183:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10670              		.loc 1 183 8 view .LVU3636
 10671              	# sieve_extend.c:183:        *index_ptr |= mask;        index_ptr+=step;
 183:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10672              		.loc 1 183 19 is_stmt 0 view .LVU3637
 10673 3cdc 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _550, offset: 0B], _216
 183:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10674              		.loc 1 183 35 is_stmt 1 view .LVU3638
 10675              	.LVL601:
 184:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10676              		.loc 1 184 8 view .LVU3639
 10677              	# sieve_extend.c:184:        *index_ptr |= mask;        index_ptr+=step;
 184:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10678              		.loc 1 184 19 is_stmt 0 view .LVU3640
 10679 3cdf 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _550, index: _231, offset: 0B], _216
 184:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10680              		.loc 1 184 35 is_stmt 1 view .LVU3641
 10681              	.LVL602:
 185:sieve_extend.c ****    }
 10682              		.loc 1 185 8 view .LVU3642
 10683 3ce3 4C01C7   		add	rdi, r8	# ivtmp.505, tmp373
 10684              	# sieve_extend.c:185:        *index_ptr |= mask;        index_ptr+=step;
 185:sieve_extend.c ****    }
 10685              		.loc 1 185 19 is_stmt 0 view .LVU3643
 10686 3ce6 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_327, index: _231, step: 4, offset: 0B], _216
 185:sieve_extend.c ****    }
 10687              		.loc 1 185 35 is_stmt 1 view .LVU3644
 10688 3cea 4C01C0   		add	rax, r8	# index_ptr, tmp373
 10689              	.LVL603:
 180:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10690              		.loc 1 180 10 view .LVU3645
 10691 3ced 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 10692 3cf0 767E     		jbe	.L762	#,
 181:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10693              		.loc 1 181 8 view .LVU3646
 10694              	# sieve_extend.c:181:        *index_ptr |= mask;        index_ptr+=step;
 181:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10695              		.loc 1 181 19 is_stmt 0 view .LVU3647
 10696 3cf2 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_327, offset: 0B], _216
 181:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10697              		.loc 1 181 35 is_stmt 1 view .LVU3648
 10698              	.LVL604:
 182:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10699              		.loc 1 182 8 view .LVU3649
 10700              	# sieve_extend.c:182:        *index_ptr |= mask;        index_ptr+=step;
 182:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10701              		.loc 1 182 19 is_stmt 0 view .LVU3650
GAS LISTING /tmp/ccLUVin9.s 			page 291


 10702 3cf5 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_327, index: _231, offset: 0B], _216
 182:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10703              		.loc 1 182 35 is_stmt 1 view .LVU3651
 10704              	.LVL605:
 183:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10705              		.loc 1 183 8 view .LVU3652
 10706              	# sieve_extend.c:183:        *index_ptr |= mask;        index_ptr+=step;
 183:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10707              		.loc 1 183 19 is_stmt 0 view .LVU3653
 10708 3cf9 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _550, offset: 0B], _216
 183:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10709              		.loc 1 183 35 is_stmt 1 view .LVU3654
 10710              	.LVL606:
 184:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10711              		.loc 1 184 8 view .LVU3655
 10712              	# sieve_extend.c:184:        *index_ptr |= mask;        index_ptr+=step;
 184:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10713              		.loc 1 184 19 is_stmt 0 view .LVU3656
 10714 3cfc 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _550, index: _231, offset: 0B], _216
 184:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10715              		.loc 1 184 35 is_stmt 1 view .LVU3657
 10716              	.LVL607:
 185:sieve_extend.c ****    }
 10717              		.loc 1 185 8 view .LVU3658
 10718 3d00 4C01C7   		add	rdi, r8	# ivtmp.505, tmp373
 10719              	# sieve_extend.c:185:        *index_ptr |= mask;        index_ptr+=step;
 185:sieve_extend.c ****    }
 10720              		.loc 1 185 19 is_stmt 0 view .LVU3659
 10721 3d03 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_327, index: _231, step: 4, offset: 0B], _216
 185:sieve_extend.c ****    }
 10722              		.loc 1 185 35 is_stmt 1 view .LVU3660
 10723 3d07 4C01C0   		add	rax, r8	# index_ptr, tmp373
 10724              	.LVL608:
 180:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10725              		.loc 1 180 10 view .LVU3661
 10726 3d0a 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 10727 3d0d 7661     		jbe	.L762	#,
 181:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10728              		.loc 1 181 8 view .LVU3662
 10729              	# sieve_extend.c:181:        *index_ptr |= mask;        index_ptr+=step;
 181:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10730              		.loc 1 181 19 is_stmt 0 view .LVU3663
 10731 3d0f 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_327, offset: 0B], _216
 181:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10732              		.loc 1 181 35 is_stmt 1 view .LVU3664
 10733              	.LVL609:
 182:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10734              		.loc 1 182 8 view .LVU3665
 10735              	# sieve_extend.c:182:        *index_ptr |= mask;        index_ptr+=step;
 182:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10736              		.loc 1 182 19 is_stmt 0 view .LVU3666
 10737 3d12 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_327, index: _231, offset: 0B], _216
 182:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10738              		.loc 1 182 35 is_stmt 1 view .LVU3667
 10739              	.LVL610:
 183:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10740              		.loc 1 183 8 view .LVU3668
GAS LISTING /tmp/ccLUVin9.s 			page 292


 10741              	# sieve_extend.c:183:        *index_ptr |= mask;        index_ptr+=step;
 183:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10742              		.loc 1 183 19 is_stmt 0 view .LVU3669
 10743 3d16 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _550, offset: 0B], _216
 183:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10744              		.loc 1 183 35 is_stmt 1 view .LVU3670
 10745              	.LVL611:
 184:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10746              		.loc 1 184 8 view .LVU3671
 10747              	# sieve_extend.c:184:        *index_ptr |= mask;        index_ptr+=step;
 184:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10748              		.loc 1 184 19 is_stmt 0 view .LVU3672
 10749 3d19 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _550, index: _231, offset: 0B], _216
 184:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10750              		.loc 1 184 35 is_stmt 1 view .LVU3673
 10751              	.LVL612:
 185:sieve_extend.c ****    }
 10752              		.loc 1 185 8 view .LVU3674
 10753 3d1d 4C01C7   		add	rdi, r8	# ivtmp.505, tmp373
 10754              	# sieve_extend.c:185:        *index_ptr |= mask;        index_ptr+=step;
 185:sieve_extend.c ****    }
 10755              		.loc 1 185 19 is_stmt 0 view .LVU3675
 10756 3d20 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_327, index: _231, step: 4, offset: 0B], _216
 185:sieve_extend.c ****    }
 10757              		.loc 1 185 35 is_stmt 1 view .LVU3676
 10758 3d24 4C01C0   		add	rax, r8	# index_ptr, tmp373
 10759              	.LVL613:
 180:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10760              		.loc 1 180 10 view .LVU3677
 10761 3d27 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 10762 3d2a 7644     		jbe	.L762	#,
 181:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10763              		.loc 1 181 8 view .LVU3678
 10764              	# sieve_extend.c:181:        *index_ptr |= mask;        index_ptr+=step;
 181:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10765              		.loc 1 181 19 is_stmt 0 view .LVU3679
 10766 3d2c 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_327, offset: 0B], _216
 181:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10767              		.loc 1 181 35 is_stmt 1 view .LVU3680
 10768              	.LVL614:
 182:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10769              		.loc 1 182 8 view .LVU3681
 10770              	# sieve_extend.c:182:        *index_ptr |= mask;        index_ptr+=step;
 182:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10771              		.loc 1 182 19 is_stmt 0 view .LVU3682
 10772 3d2f 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_327, index: _231, offset: 0B], _216
 182:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10773              		.loc 1 182 35 is_stmt 1 view .LVU3683
 10774              	.LVL615:
 183:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10775              		.loc 1 183 8 view .LVU3684
 10776              	# sieve_extend.c:183:        *index_ptr |= mask;        index_ptr+=step;
 183:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10777              		.loc 1 183 19 is_stmt 0 view .LVU3685
 10778 3d33 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _550, offset: 0B], _216
 183:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10779              		.loc 1 183 35 is_stmt 1 view .LVU3686
GAS LISTING /tmp/ccLUVin9.s 			page 293


 10780              	.LVL616:
 184:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10781              		.loc 1 184 8 view .LVU3687
 10782              	# sieve_extend.c:184:        *index_ptr |= mask;        index_ptr+=step;
 184:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10783              		.loc 1 184 19 is_stmt 0 view .LVU3688
 10784 3d36 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _550, index: _231, offset: 0B], _216
 184:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10785              		.loc 1 184 35 is_stmt 1 view .LVU3689
 10786              	.LVL617:
 185:sieve_extend.c ****    }
 10787              		.loc 1 185 8 view .LVU3690
 10788 3d3a 4C01C7   		add	rdi, r8	# ivtmp.505, tmp373
 10789              	# sieve_extend.c:185:        *index_ptr |= mask;        index_ptr+=step;
 185:sieve_extend.c ****    }
 10790              		.loc 1 185 19 is_stmt 0 view .LVU3691
 10791 3d3d 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_327, index: _231, step: 4, offset: 0B], _216
 185:sieve_extend.c ****    }
 10792              		.loc 1 185 35 is_stmt 1 view .LVU3692
 10793 3d41 4C01C0   		add	rax, r8	# index_ptr, tmp373
 10794              	.LVL618:
 180:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10795              		.loc 1 180 10 view .LVU3693
 10796 3d44 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 10797 3d47 7627     		jbe	.L762	#,
 181:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10798              		.loc 1 181 8 view .LVU3694
 10799              	# sieve_extend.c:181:        *index_ptr |= mask;        index_ptr+=step;
 181:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10800              		.loc 1 181 19 is_stmt 0 view .LVU3695
 10801 3d49 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_327, offset: 0B], _216
 181:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10802              		.loc 1 181 35 is_stmt 1 view .LVU3696
 10803              	.LVL619:
 182:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10804              		.loc 1 182 8 view .LVU3697
 10805              	# sieve_extend.c:182:        *index_ptr |= mask;        index_ptr+=step;
 182:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10806              		.loc 1 182 19 is_stmt 0 view .LVU3698
 10807 3d4c 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_327, index: _231, offset: 0B], _216
 182:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10808              		.loc 1 182 35 is_stmt 1 view .LVU3699
 10809              	.LVL620:
 183:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10810              		.loc 1 183 8 view .LVU3700
 10811              	# sieve_extend.c:183:        *index_ptr |= mask;        index_ptr+=step;
 183:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10812              		.loc 1 183 19 is_stmt 0 view .LVU3701
 10813 3d50 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _550, offset: 0B], _216
 183:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10814              		.loc 1 183 35 is_stmt 1 view .LVU3702
 10815              	.LVL621:
 184:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10816              		.loc 1 184 8 view .LVU3703
 10817              	# sieve_extend.c:184:        *index_ptr |= mask;        index_ptr+=step;
 184:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10818              		.loc 1 184 19 is_stmt 0 view .LVU3704
GAS LISTING /tmp/ccLUVin9.s 			page 294


 10819 3d53 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _550, index: _231, offset: 0B], _216
 184:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10820              		.loc 1 184 35 is_stmt 1 view .LVU3705
 10821              	.LVL622:
 185:sieve_extend.c ****    }
 10822              		.loc 1 185 8 view .LVU3706
 10823 3d57 4C01C7   		add	rdi, r8	# ivtmp.505, tmp373
 10824              	# sieve_extend.c:185:        *index_ptr |= mask;        index_ptr+=step;
 185:sieve_extend.c ****    }
 10825              		.loc 1 185 19 is_stmt 0 view .LVU3707
 10826 3d5a 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_327, index: _231, step: 4, offset: 0B], _216
 185:sieve_extend.c ****    }
 10827              		.loc 1 185 35 is_stmt 1 view .LVU3708
 10828 3d5e 4C01C0   		add	rax, r8	# index_ptr, tmp373
 10829              	.LVL623:
 180:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10830              		.loc 1 180 10 view .LVU3709
 10831 3d61 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 10832 3d64 0F8708FF 		ja	.L763	#,
 10832      FFFF
 10833 3d6a 660F1F44 		.p2align 4
 10833      0000
 10834              		.p2align 3
 10835              	.L762:
 188:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 10836              		.loc 1 188 4 view .LVU3710
 189:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 10837              		.loc 1 189 4 view .LVU3711
 189:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 10838              		.loc 1 189 10 view .LVU3712
 10839 3d70 4839C3   		cmp	rbx, rax	# range_stop_ptr, index_ptr
 10840 3d73 765B     		jbe	.L764	#,
 10841              	.L765:
 190:sieve_extend.c ****    }
 10842              		.loc 1 190 8 view .LVU3713
 10843              	# sieve_extend.c:190:        *index_ptr |= mask;       index_ptr+=step;
 190:sieve_extend.c ****    }
 10844              		.loc 1 190 19 is_stmt 0 view .LVU3714
 10845 3d75 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_266, offset: 0B], _216
 190:sieve_extend.c ****    }
 10846              		.loc 1 190 34 is_stmt 1 view .LVU3715
 10847              	# sieve_extend.c:190:        *index_ptr |= mask;       index_ptr+=step;
 190:sieve_extend.c ****    }
 10848              		.loc 1 190 43 is_stmt 0 view .LVU3716
 10849 3d78 4801D0   		add	rax, rdx	# index_ptr, _231
 10850              	.LVL624:
 189:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 10851              		.loc 1 189 10 is_stmt 1 view .LVU3717
 10852 3d7b 4839C3   		cmp	rbx, rax	# range_stop_ptr, index_ptr
 10853 3d7e 7650     		jbe	.L764	#,
 190:sieve_extend.c ****    }
 10854              		.loc 1 190 8 view .LVU3718
 10855              	# sieve_extend.c:190:        *index_ptr |= mask;       index_ptr+=step;
 190:sieve_extend.c ****    }
 10856              		.loc 1 190 19 is_stmt 0 view .LVU3719
 10857 3d80 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_266, offset: 0B], _216
 190:sieve_extend.c ****    }
GAS LISTING /tmp/ccLUVin9.s 			page 295


 10858              		.loc 1 190 34 is_stmt 1 view .LVU3720
 10859              	# sieve_extend.c:190:        *index_ptr |= mask;       index_ptr+=step;
 190:sieve_extend.c ****    }
 10860              		.loc 1 190 43 is_stmt 0 view .LVU3721
 10861 3d83 4801D0   		add	rax, rdx	# index_ptr, _231
 10862              	.LVL625:
 189:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 10863              		.loc 1 189 10 is_stmt 1 view .LVU3722
 10864 3d86 4839C3   		cmp	rbx, rax	# range_stop_ptr, index_ptr
 10865 3d89 7645     		jbe	.L764	#,
 190:sieve_extend.c ****    }
 10866              		.loc 1 190 8 view .LVU3723
 10867              	# sieve_extend.c:190:        *index_ptr |= mask;       index_ptr+=step;
 190:sieve_extend.c ****    }
 10868              		.loc 1 190 19 is_stmt 0 view .LVU3724
 10869 3d8b 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_266, offset: 0B], _216
 190:sieve_extend.c ****    }
 10870              		.loc 1 190 34 is_stmt 1 view .LVU3725
 10871              	# sieve_extend.c:190:        *index_ptr |= mask;       index_ptr+=step;
 190:sieve_extend.c ****    }
 10872              		.loc 1 190 43 is_stmt 0 view .LVU3726
 10873 3d8e 4801D0   		add	rax, rdx	# index_ptr, _231
 10874              	.LVL626:
 189:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 10875              		.loc 1 189 10 is_stmt 1 view .LVU3727
 10876 3d91 4839C3   		cmp	rbx, rax	# range_stop_ptr, index_ptr
 10877 3d94 763A     		jbe	.L764	#,
 190:sieve_extend.c ****    }
 10878              		.loc 1 190 8 view .LVU3728
 10879              	# sieve_extend.c:190:        *index_ptr |= mask;       index_ptr+=step;
 190:sieve_extend.c ****    }
 10880              		.loc 1 190 19 is_stmt 0 view .LVU3729
 10881 3d96 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_266, offset: 0B], _216
 190:sieve_extend.c ****    }
 10882              		.loc 1 190 34 is_stmt 1 view .LVU3730
 10883              	# sieve_extend.c:190:        *index_ptr |= mask;       index_ptr+=step;
 190:sieve_extend.c ****    }
 10884              		.loc 1 190 43 is_stmt 0 view .LVU3731
 10885 3d99 4801D0   		add	rax, rdx	# index_ptr, _231
 10886              	.LVL627:
 189:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 10887              		.loc 1 189 10 is_stmt 1 view .LVU3732
 10888 3d9c 4839C3   		cmp	rbx, rax	# range_stop_ptr, index_ptr
 10889 3d9f 762F     		jbe	.L764	#,
 190:sieve_extend.c ****    }
 10890              		.loc 1 190 8 view .LVU3733
 10891              	# sieve_extend.c:190:        *index_ptr |= mask;       index_ptr+=step;
 190:sieve_extend.c ****    }
 10892              		.loc 1 190 19 is_stmt 0 view .LVU3734
 10893 3da1 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_266, offset: 0B], _216
 190:sieve_extend.c ****    }
 10894              		.loc 1 190 34 is_stmt 1 view .LVU3735
 10895              	# sieve_extend.c:190:        *index_ptr |= mask;       index_ptr+=step;
 190:sieve_extend.c ****    }
 10896              		.loc 1 190 43 is_stmt 0 view .LVU3736
 10897 3da4 4801D0   		add	rax, rdx	# index_ptr, _231
 10898              	.LVL628:
GAS LISTING /tmp/ccLUVin9.s 			page 296


 189:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 10899              		.loc 1 189 10 is_stmt 1 view .LVU3737
 10900 3da7 4839C3   		cmp	rbx, rax	# range_stop_ptr, index_ptr
 10901 3daa 7624     		jbe	.L764	#,
 190:sieve_extend.c ****    }
 10902              		.loc 1 190 8 view .LVU3738
 10903              	# sieve_extend.c:190:        *index_ptr |= mask;       index_ptr+=step;
 190:sieve_extend.c ****    }
 10904              		.loc 1 190 19 is_stmt 0 view .LVU3739
 10905 3dac 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_266, offset: 0B], _216
 190:sieve_extend.c ****    }
 10906              		.loc 1 190 34 is_stmt 1 view .LVU3740
 10907              	# sieve_extend.c:190:        *index_ptr |= mask;       index_ptr+=step;
 190:sieve_extend.c ****    }
 10908              		.loc 1 190 43 is_stmt 0 view .LVU3741
 10909 3daf 4801D0   		add	rax, rdx	# index_ptr, _231
 10910              	.LVL629:
 189:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 10911              		.loc 1 189 10 is_stmt 1 view .LVU3742
 10912 3db2 4839C3   		cmp	rbx, rax	# range_stop_ptr, index_ptr
 10913 3db5 7619     		jbe	.L764	#,
 190:sieve_extend.c ****    }
 10914              		.loc 1 190 8 view .LVU3743
 10915              	# sieve_extend.c:190:        *index_ptr |= mask;       index_ptr+=step;
 190:sieve_extend.c ****    }
 10916              		.loc 1 190 19 is_stmt 0 view .LVU3744
 10917 3db7 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_266, offset: 0B], _216
 190:sieve_extend.c ****    }
 10918              		.loc 1 190 34 is_stmt 1 view .LVU3745
 10919              	# sieve_extend.c:190:        *index_ptr |= mask;       index_ptr+=step;
 190:sieve_extend.c ****    }
 10920              		.loc 1 190 43 is_stmt 0 view .LVU3746
 10921 3dba 4801D0   		add	rax, rdx	# index_ptr, _231
 10922              	.LVL630:
 189:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 10923              		.loc 1 189 10 is_stmt 1 view .LVU3747
 10924 3dbd 4839C3   		cmp	rbx, rax	# range_stop_ptr, index_ptr
 10925 3dc0 760E     		jbe	.L764	#,
 190:sieve_extend.c ****    }
 10926              		.loc 1 190 8 view .LVU3748
 10927              	# sieve_extend.c:190:        *index_ptr |= mask;       index_ptr+=step;
 190:sieve_extend.c ****    }
 10928              		.loc 1 190 19 is_stmt 0 view .LVU3749
 10929 3dc2 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_266, offset: 0B], _216
 190:sieve_extend.c ****    }
 10930              		.loc 1 190 34 is_stmt 1 view .LVU3750
 10931              	# sieve_extend.c:190:        *index_ptr |= mask;       index_ptr+=step;
 190:sieve_extend.c ****    }
 10932              		.loc 1 190 43 is_stmt 0 view .LVU3751
 10933 3dc5 4801D0   		add	rax, rdx	# index_ptr, _231
 10934              	.LVL631:
 189:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 10935              		.loc 1 189 10 is_stmt 1 view .LVU3752
 10936 3dc8 4839C3   		cmp	rbx, rax	# range_stop_ptr, index_ptr
 10937 3dcb 77A8     		ja	.L765	#,
 10938 3dcd 0F1F00   		.p2align 4
 10939              		.p2align 3
GAS LISTING /tmp/ccLUVin9.s 			page 297


 10940              	.L764:
 193:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 10941              		.loc 1 193 4 view .LVU3753
 10942              	# sieve_extend.c:193:    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range
 193:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 10943              		.loc 1 193 7 is_stmt 0 view .LVU3754
 10944 3dd0 4839D8   		cmp	rax, rbx	# index_ptr, range_stop_ptr
 10945 3dd3 0F84B700 		je	.L942	#,
 10945      0000
 10946              	.LVL632:
 10947              	.L766:
 193:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 10948              		.loc 1 193 7 view .LVU3755
 10949              	.LBE541:
 10950              	.LBE544:
 391:sieve_extend.c ****         #if __APPLE__
 10951              		.loc 1 391 77 is_stmt 1 view .LVU3756
 10952              	# sieve_extend.c:391:     for (register counter_t index = range_start; index < range_stop_unique; i
 391:sieve_extend.c ****         #if __APPLE__
 10953              		.loc 1 391 83 is_stmt 0 view .LVU3757
 10954 3dd9 4C01D6   		add	rsi, r10	# index, step
 10955              	.LVL633:
 391:sieve_extend.c ****         #if __APPLE__
 10956              		.loc 1 391 50 is_stmt 1 view .LVU3758
 10957              	# sieve_extend.c:391:     for (register counter_t index = range_start; index < range_stop_unique; i
 391:sieve_extend.c ****         #if __APPLE__
 10958              		.loc 1 391 5 is_stmt 0 view .LVU3759
 10959 3ddc 4939F5   		cmp	r13, rsi	# range_stop_unique, index
 10960 3ddf 0F876BFE 		ja	.L767	#,
 10960      FFFF
 10961              	.L768:
 10962              	.LVL634:
 391:sieve_extend.c ****         #if __APPLE__
 10963              		.loc 1 391 5 view .LVU3760
 10964              	.LBE546:
 10965              	.LBE548:
 10966              	.LBE550:
 858:sieve_extend.c ****         }
 10967              		.loc 1 858 13 is_stmt 1 view .LVU3761
 10968              	.LBB551:
 10969              	.LBI551:
 127:sieve_extend.c ****     // return searchBitFalse(bitarray, index);
 10970              		.loc 1 127 25 view .LVU3762
 10971              	.LBB552:
 130:sieve_extend.c ****    bitshift_t index_bit  = bitindex_calc(index);
 10972              		.loc 1 130 4 view .LVU3763
 131:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 10973              		.loc 1 131 4 view .LVU3764
 10974              	# sieve_extend.c:132:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 132:sieve_extend.c ****    index += distance;
 10975              		.loc 1 132 89 is_stmt 0 view .LVU3765
 10976 3de5 498B3424 		mov	rsi, QWORD PTR [r12]	# MEM[(uint64_t *)_528], MEM[(uint64_t *)_528]
 10977              	# sieve_extend.c:131:    bitshift_t index_bit  = bitindex_calc(index);
 131:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 10978              		.loc 1 131 15 view .LVU3766
 10979 3de9 4989EA   		mov	r10, rbp	# index_bit, _157
 10980              	.LVL635:
GAS LISTING /tmp/ccLUVin9.s 			page 298


 131:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 10981              		.loc 1 131 15 view .LVU3767
 10982 3dec 4183E23F 		and	r10d, 63	# index_bit,
 10983              	.LVL636:
 132:sieve_extend.c ****    index += distance;
 10984              		.loc 1 132 4 is_stmt 1 view .LVU3768
 10985              	# sieve_extend.c:132:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 132:sieve_extend.c ****    index += distance;
 10986              		.loc 1 132 89 is_stmt 0 view .LVU3769
 10987 3df0 C462ABF7 		shrx	r12, rsi, r10	# tmp358, MEM[(uint64_t *)_528], index_bit
 10987      E6
 10988              	# sieve_extend.c:132:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 132:sieve_extend.c ****    index += distance;
 10989              		.loc 1 132 66 view .LVU3770
 10990 3df5 49F7D4   		not	r12	# tmp360
 10991              	# sieve_extend.c:132:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 132:sieve_extend.c ****    index += distance;
 10992              		.loc 1 132 25 view .LVU3771
 10993 3df8 F34D0FBC 		tzcnt	r13, r12	# distance, tmp360
 10993      EC
 10994              	.LVL637:
 133:sieve_extend.c ****    distance += index_bit;
 10995              		.loc 1 133 4 is_stmt 1 view .LVU3772
 10996              	# sieve_extend.c:133:    index += distance;
 133:sieve_extend.c ****    distance += index_bit;
 10997              		.loc 1 133 10 is_stmt 0 view .LVU3773
 10998 3dfd 4E8D442D 		lea	r8, 0[rbp+r13]	# index,
 10998      00
 10999              	.LVL638:
 134:sieve_extend.c **** 
 11000              		.loc 1 134 4 is_stmt 1 view .LVU3774
 136:sieve_extend.c ****        index_word++;
 11001              		.loc 1 136 4 view .LVU3775
 136:sieve_extend.c ****        index_word++;
 11002              		.loc 1 136 10 view .LVU3776
 11003              	# sieve_extend.c:134:    distance += index_bit;
 134:sieve_extend.c **** 
 11004              		.loc 1 134 13 is_stmt 0 view .LVU3777
 11005 3e02 4D01D5   		add	r13, r10	# distance, index_bit
 11006              	.LVL639:
 11007              	# sieve_extend.c:136:    while unlikely(distance == WORD_SIZE_bitshift) { // to prevent a bug from 
 136:sieve_extend.c ****        index_word++;
 11008              		.loc 1 136 10 view .LVU3778
 11009 3e05 4983FD40 		cmp	r13, 64	# distance,
 11010 3e09 0F849901 		je	.L943	#,
 11010      0000
 11011              	.LVL640:
 11012              	.L758:
 136:sieve_extend.c ****        index_word++;
 11013              		.loc 1 136 10 view .LVU3779
 11014              	.LBE552:
 11015              	.LBE551:
 861:sieve_extend.c ****         step  = prime * 2 + 1;
 11016              		.loc 1 861 9 is_stmt 1 view .LVU3780
 862:sieve_extend.c ****     }
 11017              		.loc 1 862 9 view .LVU3781
 11018              	# sieve_extend.c:862:         step  = prime * 2 + 1;
GAS LISTING /tmp/ccLUVin9.s 			page 299


 862:sieve_extend.c ****     }
 11019              		.loc 1 862 15 is_stmt 0 view .LVU3782
 11020 3e0f 4F8D5400 		lea	r10, 1[r8+r8]	# step,
 11020      01
 11021              	.LVL641:
 846:sieve_extend.c ****         if likely(block_start >= (prime + 1)) 
 11022              		.loc 1 846 11 is_stmt 1 view .LVU3783
 11023              	# sieve_extend.c:846:     while (prime*step <= block_stop) {
 846:sieve_extend.c ****         if likely(block_start >= (prime + 1)) 
 11024              		.loc 1 846 17 is_stmt 0 view .LVU3784
 11025 3e14 4C89C6   		mov	rsi, r8	# tmp384, index
 11026 3e17 490FAFF2 		imul	rsi, r10	# tmp384, step
 11027              	# sieve_extend.c:846:     while (prime*step <= block_stop) {
 846:sieve_extend.c ****         if likely(block_start >= (prime + 1)) 
 11028              		.loc 1 846 11 view .LVU3785
 11029 3e1b 48397424 		cmp	QWORD PTR 8[rsp], rsi	# %sfp, tmp384
 11029      08
 11030 3e20 0F83AAFD 		jnb	.L769	#,
 11030      FFFF
 11031 3e26 488B5C24 		mov	rbx, QWORD PTR 40[rsp]	# <retval>, %sfp
 11031      28
 11032 3e2b 4C8B7424 		mov	r14, QWORD PTR 24[rsp]	# block_start, %sfp
 11032      18
 11033 3e30 488B5308 		mov	rdx, QWORD PTR 8[rbx]	# _8, sieve_89->bits
 11034              	.LVL642:
 11035              	.L770:
 846:sieve_extend.c ****         if likely(block_start >= (prime + 1)) 
 11036              		.loc 1 846 11 view .LVU3786
 11037              	.LBE534:
 11038              	.LBE533:
 11039              	.LBE528:
 926:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11040              		.loc 1 926 91 is_stmt 1 view .LVU3787
 11041              	# sieve_extend.c:926:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 926:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11042              		.loc 1 926 103 is_stmt 0 view .LVU3788
 11043 3e34 4C8B4424 		mov	r8, QWORD PTR 56[rsp]	# blocksize, %sfp
 11043      38
 11044              	# sieve_extend.c:926:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 926:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11045              		.loc 1 926 128 view .LVU3789
 11046 3e39 4C8B6424 		mov	r12, QWORD PTR 8[rsp]	# block_stop, %sfp
 11046      08
 11047              	# sieve_extend.c:926:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 926:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11048              		.loc 1 926 103 view .LVU3790
 11049 3e3e 4D01C6   		add	r14, r8	# block_start, blocksize
 11050              	.LVL643:
 11051              	# sieve_extend.c:926:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 926:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11052              		.loc 1 926 128 view .LVU3791
 11053 3e41 4D01C4   		add	r12, r8	# block_stop, blocksize
 11054              	.LVL644:
 926:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11055              		.loc 1 926 63 is_stmt 1 view .LVU3792
 11056              	# sieve_extend.c:926:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 926:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
GAS LISTING /tmp/ccLUVin9.s 			page 300


 11057              		.loc 1 926 5 is_stmt 0 view .LVU3793
 11058 3e44 4C39F2   		cmp	rdx, r14	# _8, block_start
 11059 3e47 0F8353FC 		jnb	.L753	#,
 11059      FFFF
 11060              	.LBE527:
 11061              	# sieve_extend.c:933: }
 933:sieve_extend.c **** 
 11062              		.loc 1 933 1 view .LVU3794
 11063 3e4d 488B4424 		mov	rax, QWORD PTR 40[rsp]	#, %sfp
 11063      28
 11064 3e52 488D6424 		lea	rsp, 88[rsp]	#,
 11064      58
 11065              		.cfi_remember_state
 11066              		.cfi_def_cfa_offset 56
 11067 3e57 5B       		pop	rbx	#
 11068              		.cfi_def_cfa_offset 48
 11069 3e58 5D       		pop	rbp	#
 11070              		.cfi_def_cfa_offset 40
 11071 3e59 415C     		pop	r12	#
 11072              		.cfi_def_cfa_offset 32
 11073              	.LVL645:
 933:sieve_extend.c **** 
 11074              		.loc 1 933 1 view .LVU3795
 11075 3e5b 415D     		pop	r13	#
 11076              		.cfi_def_cfa_offset 24
 11077 3e5d 415E     		pop	r14	#
 11078              		.cfi_def_cfa_offset 16
 11079              	.LVL646:
 933:sieve_extend.c **** 
 11080              		.loc 1 933 1 view .LVU3796
 11081 3e5f 415F     		pop	r15	#
 11082              		.cfi_def_cfa_offset 8
 11083              	.LVL647:
 933:sieve_extend.c **** 
 11084              		.loc 1 933 1 view .LVU3797
 11085 3e61 C3       		ret	
 11086              	.LVL648:
 11087              	.L734:
 11088              		.cfi_restore_state
 11089              	.LBB563:
 11090              	.LBB511:
 11091              	.LBB504:
 11092              	.LBB498:
 11093              	.LBB496:
 836:sieve_extend.c **** }
 11094              		.loc 1 836 37 is_stmt 1 view .LVU3798
 11095 3e62 E829DFFF 		call	extendSieve_aligned	#
 11095      FF
 11096              	.LVL649:
 836:sieve_extend.c **** }
 11097              		.loc 1 836 37 is_stmt 0 view .LVU3799
 11098 3e67 4C896C24 		mov	QWORD PTR 32[rsp], r13	# %sfp, patternsize_bits
 11098      20
 11099 3e6c E9D7F7FF 		jmp	.L731	#
 11099      FF
 11100              	.LVL650:
 11101              	.L938:
GAS LISTING /tmp/ccLUVin9.s 			page 301


 834:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 11102              		.loc 1 834 37 is_stmt 1 view .LVU3800
 11103 3e71 E89AE4FF 		call	extendSieve_shiftleft	#
 11103      FF
 11104              	.LVL651:
 834:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 11105              		.loc 1 834 37 is_stmt 0 view .LVU3801
 11106 3e76 4C896C24 		mov	QWORD PTR 32[rsp], r13	# %sfp, patternsize_bits
 11106      20
 11107 3e7b E9C8F7FF 		jmp	.L731	#
 11107      FF
 11108              	.LVL652:
 11109              	.L940:
 834:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 11110              		.loc 1 834 37 view .LVU3802
 11111              	.LBE496:
 11112              	.LBE498:
 11113              	.LBE504:
 11114              	.LBE511:
 11115              	.LBE563:
 11116              	.LBB564:
 11117              	.LBB521:
 835:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 11118              		.loc 1 835 37 is_stmt 1 view .LVU3803
 11119 3e80 E83BC8FF 		call	extendSieve_shiftright_ivdep	#
 11119      FF
 11120              	.LVL653:
 835:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 11121              		.loc 1 835 37 is_stmt 0 view .LVU3804
 11122              		.p2align 4,,3
 11123 3e85 E9F2FBFF 		jmp	.L747	#
 11123      FF
 11124              	.LVL654:
 11125 3e8a 660F1F44 		.p2align 4,,7
 11125      0000
 11126              		.p2align 3
 11127              	.L942:
 835:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 11128              		.loc 1 835 37 view .LVU3805
 11129              	.LBE521:
 11130              	.LBE564:
 11131              	.LBB565:
 11132              	.LBB562:
 11133              	.LBB561:
 11134              	.LBB560:
 11135              	.LBB554:
 11136              	.LBB549:
 11137              	.LBB547:
 11138              	.LBB545:
 11139              	.LBB542:
 194:sieve_extend.c ****    }
 11140              		.loc 1 194 7 is_stmt 1 view .LVU3806
 11141              	# sieve_extend.c:194:       *index_ptr |= (mask & chopmask(range_stop));
 194:sieve_extend.c ****    }
 11142              		.loc 1 194 27 is_stmt 0 view .LVU3807
 11143 3e90 48234C24 		and	rcx, QWORD PTR 16[rsp]	# tmp378, %sfp
 11143      10
GAS LISTING /tmp/ccLUVin9.s 			page 302


 11144              	.LVL655:
 11145              	# sieve_extend.c:194:       *index_ptr |= (mask & chopmask(range_stop));
 194:sieve_extend.c ****    }
 11146              		.loc 1 194 18 view .LVU3808
 11147 3e95 48090B   		or	QWORD PTR [rbx], rcx	# MEM[(uint64_t *)range_stop_ptr_249], tmp378
 11148 3e98 E93CFFFF 		jmp	.L766	#
 11148      FF
 11149              	.LVL656:
 11150 3e9d 0F1F00   		.p2align 4,,7
 11151              		.p2align 3
 11152              	.L941:
 194:sieve_extend.c ****    }
 11153              		.loc 1 194 18 view .LVU3809
 11154              	.LBE542:
 11155              	.LBE545:
 11156              	.LBE547:
 11157              	.LBE549:
 11158              	.LBE554:
 853:sieve_extend.c ****             prime = searchBitFalse(bitarray, prime+1 );
 11159              		.loc 1 853 13 is_stmt 1 view .LVU3810
 11160 3ea0 488B4C24 		mov	rcx, QWORD PTR 8[rsp]	#, %sfp
 11160      08
 11161 3ea5 4C89D2   		mov	rdx, r10	#, step
 11162 3ea8 4C89FF   		mov	rdi, r15	#, _94
 11163 3eab E830D4FF 		call	setBitsTrue_largeRange_vector	#
 11163      FF
 11164              	.LVL657:
 854:sieve_extend.c ****         }
 11165              		.loc 1 854 13 view .LVU3811
 11166              	.LBB555:
 11167              	.LBI555:
 121:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 11168              		.loc 1 121 25 view .LVU3812
 11169              	.LBB556:
 122:sieve_extend.c ****     return index;
 11170              		.loc 1 122 5 view .LVU3813
 122:sieve_extend.c ****     return index;
 11171              		.loc 1 122 11 view .LVU3814
 11172              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 11173              		.loc 1 122 12 is_stmt 0 view .LVU3815
 11174 3eb0 498B1424 		mov	rdx, QWORD PTR [r12]	# MEM[(uint64_t *)_528], MEM[(uint64_t *)_528]
 11175              	.LBE556:
 11176              	.LBE555:
 11177              	# sieve_extend.c:847:         if likely(block_start >= (prime + 1)) 
 847:sieve_extend.c ****             start = block_start + prime + prime - ((block_start + prime) % step);
 11178              		.loc 1 847 12 view .LVU3816
 11179 3eb4 4989E8   		mov	r8, rbp	# index, _157
 11180              	.LBB558:
 11181              	.LBB557:
 11182              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 11183              		.loc 1 122 11 view .LVU3817
 11184 3eb7 480FA3EA 		bt	rdx, rbp	# MEM[(uint64_t *)_528], _157
 11185 3ebb 0F834EFF 		jnc	.L758	#,
 11185      FFFF
 11186              	.LVL658:
GAS LISTING /tmp/ccLUVin9.s 			page 303


 11187              	.L759:
 122:sieve_extend.c ****     return index;
 11188              		.loc 1 122 58 is_stmt 1 view .LVU3818
 11189              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 11190              		.loc 1 122 63 is_stmt 0 view .LVU3819
 11191 3ec1 4D8D4801 		lea	r9, 1[r8]	# tmp392,
 11192              	.LVL659:
 11193              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 11194              		.loc 1 122 21 view .LVU3820
 11195 3ec5 4D89CE   		mov	r14, r9	# tmp351, index
 11196              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 11197              		.loc 1 122 63 view .LVU3821
 11198 3ec8 4D89C8   		mov	r8, r9	# index, tmp392
 122:sieve_extend.c ****     return index;
 11199              		.loc 1 122 11 is_stmt 1 view .LVU3822
 11200              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 11201              		.loc 1 122 21 is_stmt 0 view .LVU3823
 11202 3ecb 49C1EE06 		shr	r14, 6	# tmp351,
 11203              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 11204              		.loc 1 122 12 view .LVU3824
 11205 3ecf 4B8B0CF7 		mov	rcx, QWORD PTR [r15+r14*8]	# *_174, *_174
 11206              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 11207              		.loc 1 122 11 view .LVU3825
 11208 3ed3 4C0FA3C9 		bt	rcx, r9	# *_174, index
 11209 3ed7 0F8332FF 		jnc	.L758	#,
 11209      FFFF
 122:sieve_extend.c ****     return index;
 11210              		.loc 1 122 58 is_stmt 1 view .LVU3826
 11211              	.LVL660:
 11212              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 11213              		.loc 1 122 63 is_stmt 0 view .LVU3827
 11214 3edd 4983C001 		add	r8, 1	# index,
 11215              	.LVL661:
 122:sieve_extend.c ****     return index;
 11216              		.loc 1 122 11 is_stmt 1 view .LVU3828
 11217              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 11218              		.loc 1 122 21 is_stmt 0 view .LVU3829
 11219 3ee1 4C89C0   		mov	rax, r8	# tmp397, index
 11220 3ee4 48C1E806 		shr	rax, 6	# tmp397,
 11221              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 11222              		.loc 1 122 12 view .LVU3830
 11223 3ee8 498B3CC7 		mov	rdi, QWORD PTR [r15+rax*8]	# *_174, *_174
 11224              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 11225              		.loc 1 122 11 view .LVU3831
 11226 3eec 4C0FA3C7 		bt	rdi, r8	# *_174, index
 11227 3ef0 0F8319FF 		jnc	.L758	#,
 11227      FFFF
GAS LISTING /tmp/ccLUVin9.s 			page 304


 122:sieve_extend.c ****     return index;
 11228              		.loc 1 122 58 is_stmt 1 view .LVU3832
 11229              	.LVL662:
 11230              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 11231              		.loc 1 122 63 is_stmt 0 view .LVU3833
 11232 3ef6 4D8D4102 		lea	r8, 2[r9]	# index,
 11233              	.LVL663:
 122:sieve_extend.c ****     return index;
 11234              		.loc 1 122 11 is_stmt 1 view .LVU3834
 11235              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 11236              		.loc 1 122 21 is_stmt 0 view .LVU3835
 11237 3efa 4D89C2   		mov	r10, r8	# tmp401, index
 11238 3efd 49C1EA06 		shr	r10, 6	# tmp401,
 11239              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 11240              		.loc 1 122 12 view .LVU3836
 11241 3f01 4B8B34D7 		mov	rsi, QWORD PTR [r15+r10*8]	# *_174, *_174
 11242              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 11243              		.loc 1 122 11 view .LVU3837
 11244 3f05 4C0FA3C6 		bt	rsi, r8	# *_174, index
 11245 3f09 0F8300FF 		jnc	.L758	#,
 11245      FFFF
 122:sieve_extend.c ****     return index;
 11246              		.loc 1 122 58 is_stmt 1 view .LVU3838
 11247              	.LVL664:
 11248              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 11249              		.loc 1 122 63 is_stmt 0 view .LVU3839
 11250 3f0f 4D8D4103 		lea	r8, 3[r9]	# index,
 11251              	.LVL665:
 122:sieve_extend.c ****     return index;
 11252              		.loc 1 122 11 is_stmt 1 view .LVU3840
 11253              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 11254              		.loc 1 122 21 is_stmt 0 view .LVU3841
 11255 3f13 4D89C4   		mov	r12, r8	# tmp405, index
 11256 3f16 49C1EC06 		shr	r12, 6	# tmp405,
 11257              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 11258              		.loc 1 122 12 view .LVU3842
 11259 3f1a 4F8B2CE7 		mov	r13, QWORD PTR [r15+r12*8]	# *_174, *_174
 11260              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 11261              		.loc 1 122 11 view .LVU3843
 11262 3f1e 4D0FA3C5 		bt	r13, r8	# *_174, index
 11263 3f22 0F83E7FE 		jnc	.L758	#,
 11263      FFFF
 122:sieve_extend.c ****     return index;
 11264              		.loc 1 122 58 is_stmt 1 view .LVU3844
 11265              	.LVL666:
 11266              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 11267              		.loc 1 122 63 is_stmt 0 view .LVU3845
 11268 3f28 4D8D4104 		lea	r8, 4[r9]	# index,
GAS LISTING /tmp/ccLUVin9.s 			page 305


 11269              	.LVL667:
 122:sieve_extend.c ****     return index;
 11270              		.loc 1 122 11 is_stmt 1 view .LVU3846
 11271              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 11272              		.loc 1 122 21 is_stmt 0 view .LVU3847
 11273 3f2c 4C89C5   		mov	rbp, r8	# tmp409, index
 11274 3f2f 48C1ED06 		shr	rbp, 6	# tmp409,
 11275              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 11276              		.loc 1 122 12 view .LVU3848
 11277 3f33 4D8B1CEF 		mov	r11, QWORD PTR [r15+rbp*8]	# *_174, *_174
 11278              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 11279              		.loc 1 122 11 view .LVU3849
 11280 3f37 4D0FA3C3 		bt	r11, r8	# *_174, index
 11281 3f3b 0F83CEFE 		jnc	.L758	#,
 11281      FFFF
 122:sieve_extend.c ****     return index;
 11282              		.loc 1 122 58 is_stmt 1 view .LVU3850
 11283              	.LVL668:
 11284              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 11285              		.loc 1 122 63 is_stmt 0 view .LVU3851
 11286 3f41 4D8D4105 		lea	r8, 5[r9]	# index,
 11287              	.LVL669:
 122:sieve_extend.c ****     return index;
 11288              		.loc 1 122 11 is_stmt 1 view .LVU3852
 11289              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 11290              		.loc 1 122 21 is_stmt 0 view .LVU3853
 11291 3f45 4C89C2   		mov	rdx, r8	# tmp413, index
 11292 3f48 48C1EA06 		shr	rdx, 6	# tmp413,
 11293              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 11294              		.loc 1 122 12 view .LVU3854
 11295 3f4c 4D8B34D7 		mov	r14, QWORD PTR [r15+rdx*8]	# *_174, *_174
 11296              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 11297              		.loc 1 122 11 view .LVU3855
 11298 3f50 4D0FA3C6 		bt	r14, r8	# *_174, index
 11299 3f54 0F83B5FE 		jnc	.L758	#,
 11299      FFFF
 122:sieve_extend.c ****     return index;
 11300              		.loc 1 122 58 is_stmt 1 view .LVU3856
 11301              	.LVL670:
 11302              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 11303              		.loc 1 122 63 is_stmt 0 view .LVU3857
 11304 3f5a 4D8D4106 		lea	r8, 6[r9]	# index,
 11305              	.LVL671:
 122:sieve_extend.c ****     return index;
 11306              		.loc 1 122 11 is_stmt 1 view .LVU3858
 11307              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 11308              		.loc 1 122 21 is_stmt 0 view .LVU3859
 11309 3f5e 4C89C1   		mov	rcx, r8	# tmp417, index
GAS LISTING /tmp/ccLUVin9.s 			page 306


 11310 3f61 48C1E906 		shr	rcx, 6	# tmp417,
 11311              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 11312              		.loc 1 122 12 view .LVU3860
 11313 3f65 498B04CF 		mov	rax, QWORD PTR [r15+rcx*8]	# *_174, *_174
 11314              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 11315              		.loc 1 122 11 view .LVU3861
 11316 3f69 4C0FA3C0 		bt	rax, r8	# *_174, index
 11317 3f6d 0F839CFE 		jnc	.L758	#,
 11317      FFFF
 122:sieve_extend.c ****     return index;
 11318              		.loc 1 122 58 is_stmt 1 view .LVU3862
 11319              	.LVL672:
 11320              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 11321              		.loc 1 122 63 is_stmt 0 view .LVU3863
 11322 3f73 4D8D4107 		lea	r8, 7[r9]	# index,
 11323              	.LVL673:
 122:sieve_extend.c ****     return index;
 11324              		.loc 1 122 11 is_stmt 1 view .LVU3864
 11325              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 11326              		.loc 1 122 21 is_stmt 0 view .LVU3865
 11327 3f77 4D89C1   		mov	r9, r8	# tmp421, index
 11328 3f7a 49C1E906 		shr	r9, 6	# tmp421,
 11329              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 11330              		.loc 1 122 12 view .LVU3866
 11331 3f7e 4B8B3CCF 		mov	rdi, QWORD PTR [r15+r9*8]	# *_174, *_174
 11332              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 11333              		.loc 1 122 11 view .LVU3867
 11334 3f82 4C0FA3C7 		bt	rdi, r8	# *_174, index
 11335 3f86 0F8235FF 		jc	.L759	#,
 11335      FFFF
 11336 3f8c E97EFEFF 		jmp	.L758	#
 11336      FF
 11337              	.LVL674:
 11338              		.p2align 4,,7
 11339 3f91 0F1F8000 		.p2align 3
 11339      000000
 11340              	.L755:
 122:sieve_extend.c ****     return index;
 11341              		.loc 1 122 11 view .LVU3868
 11342              	.LBE557:
 11343              	.LBE558:
 850:sieve_extend.c **** 
 11344              		.loc 1 850 13 is_stmt 1 view .LVU3869
 11345              	# sieve_extend.c:850:             start = prime * prime * 2 + prime * 2;
 850:sieve_extend.c **** 
 11346              		.loc 1 850 19 is_stmt 0 view .LVU3870
 11347 3f98 4C0FAFC5 		imul	r8, rbp	# tmp345, _157
 11348 3f9c 4B8D3400 		lea	rsi, [r8+r8]	# index,
 11349              	.LVL675:
 850:sieve_extend.c **** 
 11350              		.loc 1 850 19 view .LVU3871
GAS LISTING /tmp/ccLUVin9.s 			page 307


 11351 3fa0 E94CFCFF 		jmp	.L756	#
 11351      FF
 11352              	.LVL676:
 11353              		.p2align 4,,7
 11354 3fa5 0F1F00   		.p2align 3
 11355              	.L943:
 11356              	.LBB559:
 11357              	.LBB553:
 137:sieve_extend.c ****        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 11358              		.loc 1 137 8 is_stmt 1 view .LVU3872
 138:sieve_extend.c ****        index += distance;
 11359              		.loc 1 138 8 view .LVU3873
 11360              	# sieve_extend.c:138:        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 138:sieve_extend.c ****        index += distance;
 11361              		.loc 1 138 48 is_stmt 0 view .LVU3874
 11362 3fa8 4B8B6C1F 		mov	rbp, QWORD PTR 8[r15+r11]	# *_199, *_199
 11362      08
 11363              	.LVL677:
 138:sieve_extend.c ****        index += distance;
 11364              		.loc 1 138 48 view .LVU3875
 11365 3fad 48F7D5   		not	rbp	# tmp379
 11366              	.LVL678:
 139:sieve_extend.c ****    }
 11367              		.loc 1 139 8 is_stmt 1 view .LVU3876
 11368              	# sieve_extend.c:138:        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 138:sieve_extend.c ****        index += distance;
 11369              		.loc 1 138 17 is_stmt 0 view .LVU3877
 11370 3fb0 F34C0FBC 		tzcnt	r11, rbp	# distance, tmp379
 11370      DD
 11371              	.LVL679:
 11372              	# sieve_extend.c:139:        index += distance;
 139:sieve_extend.c ****    }
 11373              		.loc 1 139 14 view .LVU3878
 11374 3fb5 4D01D8   		add	r8, r11	# index, distance
 11375              	.LVL680:
 136:sieve_extend.c ****        index_word++;
 11376              		.loc 1 136 10 is_stmt 1 view .LVU3879
 11377 3fb8 E952FEFF 		jmp	.L758	#
 11377      FF
 11378              	.LVL681:
 11379              	.L937:
 136:sieve_extend.c ****        index_word++;
 11380              		.loc 1 136 10 is_stmt 0 view .LVU3880
 11381              	.LBE553:
 11382              	.LBE559:
 11383              	.LBE560:
 11384              	.LBE561:
 11385              	.LBE562:
 11386              	.LBE565:
 11387              	.LBB566:
 11388              	.LBB512:
 11389              	.LBB505:
 11390              	.LBB499:
 11391              	.LBB497:
 826:sieve_extend.c ****         return; // rapid exit for small sizes
 11392              		.loc 1 826 9 is_stmt 1 view .LVU3881
 11393 3fbd 4C89F1   		mov	rcx, r14	#, _67
GAS LISTING /tmp/ccLUVin9.s 			page 308


 11394 3fc0 4C89EA   		mov	rdx, r13	#, patternsize_bits
 11395 3fc3 4C89EE   		mov	rsi, r13	#, patternsize_bits
 11396 3fc6 4C89FF   		mov	rdi, r15	#, _94
 11397 3fc9 E832C0FF 		call	extendSieve_smallSize	#
 11397      FF
 11398              	.LVL682:
 827:sieve_extend.c ****     }
 11399              		.loc 1 827 9 view .LVU3882
 11400 3fce 4C896C24 		mov	QWORD PTR 32[rsp], r13	# %sfp, patternsize_bits
 11400      20
 11401 3fd3 E970F6FF 		jmp	.L731	#
 11401      FF
 11402              	.LVL683:
 11403              	.L939:
 827:sieve_extend.c ****     }
 11404              		.loc 1 827 9 is_stmt 0 view .LVU3883
 11405              	.LBE497:
 11406              	.LBE499:
 11407              	.LBE505:
 11408              	.LBE512:
 11409              	.LBE566:
 11410              	.LBB567:
 11411              	.LBB522:
 834:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 11412              		.loc 1 834 37 is_stmt 1 view .LVU3884
 11413 3fd8 E833E3FF 		call	extendSieve_shiftleft	#
 11413      FF
 11414              	.LVL684:
 834:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 11415              		.loc 1 834 37 is_stmt 0 view .LVU3885
 11416 3fdd 0F1F00   		.p2align 4,,3
 11417 3fe0 E997FAFF 		jmp	.L747	#
 11417      FF
 11418              	.LVL685:
 11419              	.L933:
 834:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 11420              		.loc 1 834 37 view .LVU3886
 11421 3fe5 488B6C24 		mov	rbp, QWORD PTR 40[rsp]	# <retval>, %sfp
 11421      28
 11422              	.LVL686:
 834:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 11423              		.loc 1 834 37 view .LVU3887
 11424 3fea 4989CA   		mov	r10, rcx	# tmp298, prime
 11425 3fed 49C1EA06 		shr	r10, 6	# tmp298,
 11426 3ff1 BF010000 		mov	edi, 1	# tmp301,
 11426      00
 11427 3ff6 48894C24 		mov	QWORD PTR 72[rsp], rcx	# %sfp, prime
 11427      48
 11428 3ffb 4B8D14D7 		lea	rdx, [r15+r10*8]	# prephitmp_506,
 11429 3fff 4C8B7508 		mov	r14, QWORD PTR 8[rbp]	# prephitmp_565, sieve_89->bits
 11430              	.LVL687:
 834:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 11431              		.loc 1 834 37 view .LVU3888
 11432 4003 C462F1F7 		shlx	r8, rdi, rcx	# prephitmp_503, tmp301, tmp634
 11432      C7
 11433              	.LBE522:
 11434              	.LBE567:
GAS LISTING /tmp/ccLUVin9.s 			page 309


 11435              	.LBB568:
 11436              	.LBB513:
 11437              	.LBB506:
 11438              	# sieve_extend.c:896:         if (range_stop > block_stop) return block; //range_stop = block_stop;
 896:sieve_extend.c **** 
 11439              		.loc 1 896 12 view .LVU3889
 11440 4008 488B7424 		mov	rsi, QWORD PTR 24[rsp]	# block$pattern_start, %sfp
 11440      18
 11441              	.LVL688:
 896:sieve_extend.c **** 
 11442              		.loc 1 896 12 view .LVU3890
 11443 400d 48895424 		mov	QWORD PTR 64[rsp], rdx	# %sfp, prephitmp_506
 11443      40
 11444 4012 4C89EA   		mov	rdx, r13	# block$pattern_size, patternsize_bits
 11445 4015 4C897424 		mov	QWORD PTR 8[rsp], r14	# %sfp, prephitmp_565
 11445      08
 11446              	.LVL689:
 896:sieve_extend.c **** 
 11447              		.loc 1 896 12 view .LVU3891
 11448 401a 4C894424 		mov	QWORD PTR 48[rsp], r8	# %sfp, prephitmp_503
 11448      30
 11449              	.LVL690:
 896:sieve_extend.c **** 
 11450              		.loc 1 896 12 view .LVU3892
 11451 401f E924FAFF 		jmp	.L730	#
 11451      FF
 11452              	.LVL691:
 11453              	.L931:
 896:sieve_extend.c **** 
 11454              		.loc 1 896 12 view .LVU3893
 11455              	.LBE506:
 11456              	# sieve_extend.c:885:     for (;range_stop < block_stop;) {
 885:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 11457              		.loc 1 885 5 view .LVU3894
 11458 4024 48894424 		mov	QWORD PTR 64[rsp], rax	# %sfp, _94
 11458      40
 11459              	# sieve_extend.c:881:     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 
 881:sieve_extend.c **** 
 11460              		.loc 1 881 18 view .LVU3895
 11461 4029 31D2     		xor	edx, edx	# block$pattern_size
 11462              	# sieve_extend.c:876:     register counter_t prime   = 0;
 876:sieve_extend.c ****     counter_t patternsize_bits = 1;
 11463              		.loc 1 876 24 view .LVU3896
 11464 402b 48C74424 		mov	QWORD PTR 72[rsp], 0	# %sfp,
 11464      48000000 
 11464      00
 11465              	# sieve_extend.c:881:     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 
 881:sieve_extend.c **** 
 11466              		.loc 1 881 18 view .LVU3897
 11467 4034 31F6     		xor	esi, esi	# block$pattern_start
 11468              	# sieve_extend.c:885:     for (;range_stop < block_stop;) {
 885:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 11469              		.loc 1 885 5 view .LVU3898
 11470 4036 48C74424 		mov	QWORD PTR 48[rsp], 1	# %sfp,
 11470      30010000 
 11470      00
 11471 403f E963F9FF 		jmp	.L723	#
GAS LISTING /tmp/ccLUVin9.s 			page 310


 11471      FF
 11472              	.LBE513:
 11473              	.LBE568:
 11474              		.cfi_endproc
 11475              	.LFE79:
 11477 4044 66662E0F 		.p2align 4
 11477      1F840000 
 11477      00000090 
 11479              	tune_benchmark:
 11480              	.LVL692:
 11481              	.LFB87:
1059:sieve_extend.c **** 
1060:sieve_extend.c **** static void tune_benchmark(tuning_result_type* tuning_result, counter_t tuning_result_index) {
 11482              		.loc 1 1060 94 is_stmt 1 view -0
 11483              		.cfi_startproc
 11484              		.loc 1 1060 94 is_stmt 0 view .LVU3900
 11485 4050 4154     		push	r12	#
 11486              		.cfi_def_cfa_offset 16
 11487              		.cfi_offset 12, -16
 11488 4052 4989F8   		mov	r8, rdi	# tmp149, tuning_result
 11489              	# sieve_extend.c:1066:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_f
1061:sieve_extend.c ****     counter_t passes = 0;
1062:sieve_extend.c ****     double elapsed_time = 0;
1063:sieve_extend.c ****     struct timespec start_time,end_time;
1064:sieve_extend.c ****     struct sieve_t *sieve;
1065:sieve_extend.c **** 
1066:sieve_extend.c ****     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_faster;
 11490              		.loc 1 1066 44 view .LVU3901
 11491 4055 488D3C76 		lea	rdi, [rsi+rsi*2]	# tmp114,
 11492              	.LVL693:
 11493              	# sieve_extend.c:1060: static void tune_benchmark(tuning_result_type* tuning_result, counter_t tuni
1060:sieve_extend.c ****     counter_t passes = 0;
 11494              		.loc 1 1060 94 view .LVU3902
 11495 4059 55       		push	rbp	#
 11496              		.cfi_def_cfa_offset 24
 11497              		.cfi_offset 6, -24
 11498              	# sieve_extend.c:1066:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_f
 11499              		.loc 1 1066 44 view .LVU3903
 11500 405a 48C1E705 		sal	rdi, 5	# tmp115,
 11501              	# sieve_extend.c:1061:     counter_t passes = 0;
1061:sieve_extend.c ****     counter_t passes = 0;
 11502              		.loc 1 1061 15 view .LVU3904
 11503 405e 4531E4   		xor	r12d, r12d	# passes
 11504              	# sieve_extend.c:1060: static void tune_benchmark(tuning_result_type* tuning_result, counter_t tuni
1060:sieve_extend.c ****     counter_t passes = 0;
 11505              		.loc 1 1060 94 view .LVU3905
 11506 4061 53       		push	rbx	#
 11507              		.cfi_def_cfa_offset 32
 11508              		.cfi_offset 3, -32
 11509              	# sieve_extend.c:1066:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_f
 11510              		.loc 1 1066 44 view .LVU3906
 11511 4062 498D1C38 		lea	rbx, [r8+rdi]	# _2,
 11512              	# sieve_extend.c:1070:     clock_gettime(CLOCK_MONOTONIC,&start_time);
1067:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
1068:sieve_extend.c ****     global_VECTORSTEP_FASTER = tuning_result[tuning_result_index].vectorstep_faster;
1069:sieve_extend.c **** 
1070:sieve_extend.c ****     clock_gettime(CLOCK_MONOTONIC,&start_time);
GAS LISTING /tmp/ccLUVin9.s 			page 311


 11513              		.loc 1 1070 5 view .LVU3907
 11514 4066 BF010000 		mov	edi, 1	#,
 11514      00
 11515              	# sieve_extend.c:1060: static void tune_benchmark(tuning_result_type* tuning_result, counter_t tuni
1060:sieve_extend.c ****     counter_t passes = 0;
 11516              		.loc 1 1060 94 view .LVU3908
 11517 406b 488D6424 		lea	rsp, -48[rsp]	#,
 11517      D0
 11518              		.cfi_def_cfa_offset 80
 11519              	# sieve_extend.c:1067:     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep
1067:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
 11520              		.loc 1 1067 30 view .LVU3909
 11521 4070 488B5328 		mov	rdx, QWORD PTR 40[rbx]	# _2->mediumstep_faster, _2->mediumstep_faster
 11522              	# sieve_extend.c:1070:     clock_gettime(CLOCK_MONOTONIC,&start_time);
 11523              		.loc 1 1070 5 view .LVU3910
 11524 4074 4889E6   		mov	rsi, rsp	# tmp119,
 11525              	.LVL694:
 11526              	# sieve_extend.c:1068:     global_VECTORSTEP_FASTER = tuning_result[tuning_result_index].vectorstep
1068:sieve_extend.c **** 
 11527              		.loc 1 1068 30 view .LVU3911
 11528 4077 488B4B30 		mov	rcx, QWORD PTR 48[rbx]	# _2->vectorstep_faster, _2->vectorstep_faster
 11529              	# sieve_extend.c:1060: static void tune_benchmark(tuning_result_type* tuning_result, counter_t tuni
1060:sieve_extend.c ****     counter_t passes = 0;
 11530              		.loc 1 1060 94 view .LVU3912
 11531 407b 64488B04 		mov	rax, QWORD PTR fs:40	# tmp160, MEM[(<address-space-1> long unsigned int *)40B]
 11531      25280000 
 11531      00
 11532 4084 48894424 		mov	QWORD PTR 40[rsp], rax	# D.7189, tmp160
 11532      28
 11533 4089 31C0     		xor	eax, eax	# tmp160
1061:sieve_extend.c ****     double elapsed_time = 0;
 11534              		.loc 1 1061 5 is_stmt 1 view .LVU3913
 11535              	.LVL695:
1062:sieve_extend.c ****     struct timespec start_time,end_time;
 11536              		.loc 1 1062 5 view .LVU3914
1063:sieve_extend.c ****     struct sieve_t *sieve;
 11537              		.loc 1 1063 5 view .LVU3915
1064:sieve_extend.c **** 
 11538              		.loc 1 1064 5 view .LVU3916
1066:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
 11539              		.loc 1 1066 5 view .LVU3917
 11540              	# sieve_extend.c:1066:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_f
1066:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
 11541              		.loc 1 1066 29 is_stmt 0 view .LVU3918
 11542 408b 488B4320 		mov	rax, QWORD PTR 32[rbx]	# _2->smallstep_faster, _2->smallstep_faster
 11543              	# sieve_extend.c:1067:     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep
1067:sieve_extend.c ****     global_VECTORSTEP_FASTER = tuning_result[tuning_result_index].vectorstep_faster;
 11544              		.loc 1 1067 30 view .LVU3919
 11545 408f 48891500 		mov	QWORD PTR global_MEDIUMSTEP_FASTER[rip], rdx	# global_MEDIUMSTEP_FASTER, _2->mediumstep_faster
 11545      000000
 11546              	# sieve_extend.c:1068:     global_VECTORSTEP_FASTER = tuning_result[tuning_result_index].vectorstep
1068:sieve_extend.c **** 
 11547              		.loc 1 1068 30 view .LVU3920
 11548 4096 48890D00 		mov	QWORD PTR global_VECTORSTEP_FASTER[rip], rcx	# global_VECTORSTEP_FASTER, _2->vectorstep_faster
 11548      000000
 11549              	# sieve_extend.c:1066:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_f
1066:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
GAS LISTING /tmp/ccLUVin9.s 			page 312


 11550              		.loc 1 1066 29 view .LVU3921
 11551 409d 48890500 		mov	QWORD PTR global_SMALLSTEP_FASTER[rip], rax	# global_SMALLSTEP_FASTER, _2->smallstep_faster
 11551      000000
1067:sieve_extend.c ****     global_VECTORSTEP_FASTER = tuning_result[tuning_result_index].vectorstep_faster;
 11552              		.loc 1 1067 5 is_stmt 1 view .LVU3922
1068:sieve_extend.c **** 
 11553              		.loc 1 1068 5 view .LVU3923
 11554              		.loc 1 1070 5 view .LVU3924
 11555 40a4 E8000000 		call	clock_gettime@PLT	#
 11555      00
 11556              	.LVL696:
1071:sieve_extend.c ****     while (elapsed_time <= tuning_result[tuning_result_index].sample_duration && passes < tuning_re
 11557              		.loc 1 1071 5 view .LVU3925
 11558              		.loc 1 1071 11 view .LVU3926
 11559 40a9 C5D957E4 		vxorpd	xmm4, xmm4, xmm4	# elapsed_time
 11560 40ad C5F92F63 		vcomisd	xmm4, QWORD PTR 64[rbx]	# elapsed_time, _2->sample_duration
 11560      40
 11561 40b2 C5FB103D 		vmovsd	xmm7, QWORD PTR .LC7[rip]	# _58,
 11561      00000000 
 11562 40ba 7676     		jbe	.L945	#,
 11563 40bc E99E0000 		jmp	.L946	#
 11563      00
 11564              	.LVL697:
 11565              		.p2align 4,,7
 11566 40c1 0F1F8000 		.p2align 3
 11566      000000
 11567              	.L949:
1072:sieve_extend.c ****         sieve = sieve_shake(tuning_result[tuning_result_index].maxints, tuning_result[tuning_result
 11568              		.loc 1 1072 9 view .LVU3927
 11569              	# sieve_extend.c:1072:         sieve = sieve_shake(tuning_result[tuning_result_index].maxints, tuni
 11570              		.loc 1 1072 17 is_stmt 0 view .LVU3928
 11571 40c8 488B7308 		mov	rsi, QWORD PTR 8[rbx]	# _2->blocksize_bits, _2->blocksize_bits
 11572              	# sieve_extend.c:1074:         passes++;
1073:sieve_extend.c ****         sieve_delete(sieve);
1074:sieve_extend.c ****         passes++;
 11573              		.loc 1 1074 15 view .LVU3929
 11574 40cc 4983C401 		add	r12, 1	# passes,
 11575              	.LVL698:
 11576              	# sieve_extend.c:1072:         sieve = sieve_shake(tuning_result[tuning_result_index].maxints, tuni
1072:sieve_extend.c ****         sieve = sieve_shake(tuning_result[tuning_result_index].maxints, tuning_result[tuning_result
 11577              		.loc 1 1072 17 view .LVU3930
 11578 40d0 488B3B   		mov	rdi, QWORD PTR [rbx]	#, _2->maxints
 11579 40d3 E868F4FF 		call	sieve_shake	#
 11579      FF
 11580              	.LVL699:
 11581              	.LBB569:
 11582              	.LBB570:
 11583              	# sieve_extend.c:116:     free(sieve->bitarray);
 116:sieve_extend.c ****     free(sieve);
 11584              		.loc 1 116 5 view .LVU3931
 11585 40d8 488B38   		mov	rdi, QWORD PTR [rax]	#, sieve_37->bitarray
 11586              	.LBE570:
 11587              	.LBE569:
 11588              	# sieve_extend.c:1072:         sieve = sieve_shake(tuning_result[tuning_result_index].maxints, tuni
1072:sieve_extend.c ****         sieve = sieve_shake(tuning_result[tuning_result_index].maxints, tuning_result[tuning_result
 11589              		.loc 1 1072 17 view .LVU3932
 11590 40db 4889C5   		mov	rbp, rax	# sieve, tmp151
GAS LISTING /tmp/ccLUVin9.s 			page 313


 11591              	.LVL700:
1073:sieve_extend.c ****         sieve_delete(sieve);
 11592              		.loc 1 1073 9 is_stmt 1 view .LVU3933
 11593              	.LBB572:
 11594              	.LBI569:
 115:sieve_extend.c ****     free(sieve->bitarray);
 11595              		.loc 1 115 13 view .LVU3934
 11596              	.LBB571:
 116:sieve_extend.c ****     free(sieve);
 11597              		.loc 1 116 5 view .LVU3935
 11598 40de E8000000 		call	free@PLT	#
 11598      00
 11599              	.LVL701:
 117:sieve_extend.c **** }
 11600              		.loc 1 117 5 view .LVU3936
 11601 40e3 4889EF   		mov	rdi, rbp	#, sieve
 11602 40e6 E8000000 		call	free@PLT	#
 11602      00
 11603              	.LVL702:
 117:sieve_extend.c **** }
 11604              		.loc 1 117 5 is_stmt 0 view .LVU3937
 11605              	.LBE571:
 11606              	.LBE572:
 11607              		.loc 1 1074 9 is_stmt 1 view .LVU3938
1075:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&end_time);
 11608              		.loc 1 1075 9 view .LVU3939
 11609 40eb 488D7424 		lea	rsi, 16[rsp]	# tmp122,
 11609      10
 11610 40f0 BF010000 		mov	edi, 1	#,
 11610      00
 11611 40f5 E8000000 		call	clock_gettime@PLT	#
 11611      00
 11612              	.LVL703:
1076:sieve_extend.c ****         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time.tv_
 11613              		.loc 1 1076 9 view .LVU3940
 11614              	# sieve_extend.c:1076:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 11615              		.loc 1 1076 58 is_stmt 0 view .LVU3941
 11616 40fa C4E1FB2A 		vcvtsi2sd	xmm0, xmm0, QWORD PTR 24[rsp]	# tmp123, end_time.tv_nsec
 11616      442418
 11617              	# sieve_extend.c:1076:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 11618              		.loc 1 1076 64 view .LVU3942
 11619 4101 C4E1F32A 		vcvtsi2sd	xmm1, xmm1, QWORD PTR [rsp]	# tmp124, start_time.tv_sec
 11619      0C24
 11620              	# sieve_extend.c:1076:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 11621              		.loc 1 1076 104 view .LVU3943
 11622 4107 C4E1E32A 		vcvtsi2sd	xmm3, xmm3, QWORD PTR 8[rsp]	# tmp126, start_time.tv_nsec
 11622      5C2408
 11623              	# sieve_extend.c:1076:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 11624              		.loc 1 1076 40 view .LVU3944
 11625 410e C4E1EB2A 		vcvtsi2sd	xmm2, xmm2, QWORD PTR 16[rsp]	# tmp127, end_time.tv_sec
 11625      542410
 11626 4115 C4E2F19B 		vfmsub132sd	xmm0, xmm1, QWORD PTR .LC8[rip]	# _60, tmp124,
 11626      05000000 
 11626      00
 11627 411e C4E2E99D 		vfnmadd132sd	xmm3, xmm2, QWORD PTR .LC8[rip]	# _61, tmp127,
 11627      1D000000 
 11627      00
GAS LISTING /tmp/ccLUVin9.s 			page 314


 11628              	# sieve_extend.c:1076:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 11629              		.loc 1 1076 22 view .LVU3945
 11630 4127 C5FB58E3 		vaddsd	xmm4, xmm0, xmm3	# elapsed_time, _60, _61
 11631              	.LVL704:
1071:sieve_extend.c ****         sieve = sieve_shake(tuning_result[tuning_result_index].maxints, tuning_result[tuning_result
 11632              		.loc 1 1071 11 is_stmt 1 view .LVU3946
 11633 412b C5F92F63 		vcomisd	xmm4, QWORD PTR 64[rbx]	# elapsed_time, _2->sample_duration
 11633      40
 11634 4130 7706     		ja	.L960	#,
 11635              	.LVL705:
 11636              	.L945:
 11637              	# sieve_extend.c:1071:     while (elapsed_time <= tuning_result[tuning_result_index].sample_duratio
1071:sieve_extend.c ****         sieve = sieve_shake(tuning_result[tuning_result_index].maxints, tuning_result[tuning_result
 11638              		.loc 1 1071 79 is_stmt 0 discriminator 1 view .LVU3947
 11639 4132 4C396338 		cmp	QWORD PTR 56[rbx], r12	# _2->sample_max, passes
 11640 4136 7790     		ja	.L949	#,
 11641              	.L960:
1071:sieve_extend.c ****         sieve = sieve_shake(tuning_result[tuning_result_index].maxints, tuning_result[tuning_result
 11642              		.loc 1 1071 79 discriminator 1 view .LVU3948
 11643 4138 C4C1CB2A 		vcvtsi2sd	xmm6, xmm6, r12	# tmp133, passes
 11643      F4
 11644 413d 4D85E4   		test	r12, r12	# passes
 11645 4140 7919     		jns	.L951	#,
1071:sieve_extend.c ****         sieve = sieve_shake(tuning_result[tuning_result_index].maxints, tuning_result[tuning_result
 11646              		.loc 1 1071 79 discriminator 1 view .LVU3949
 11647 4142 4C89E6   		mov	rsi, r12	# tmp135, passes
 11648 4145 4D89E1   		mov	r9, r12	# tmp136, passes
 11649 4148 48D1EE   		shr	rsi	# tmp135
 11650 414b 4183E101 		and	r9d, 1	# tmp136,
 11651 414f 4C09CE   		or	rsi, r9	# tmp148, tmp136
 11652 4152 C4E1D32A 		vcvtsi2sd	xmm5, xmm5, rsi	# tmp134, tmp148
 11652      EE
 11653 4157 C5D358F5 		vaddsd	xmm6, xmm5, xmm5	# tmp133, tmp134, tmp134
 11654              	.L951:
1071:sieve_extend.c ****         sieve = sieve_shake(tuning_result[tuning_result_index].maxints, tuning_result[tuning_result
 11655              		.loc 1 1071 79 discriminator 1 view .LVU3950
 11656 415b C5CB5EFC 		vdivsd	xmm7, xmm6, xmm4	# _58, tmp133, elapsed_time
 11657              	.LVL706:
 11658              	.L946:
1077:sieve_extend.c ****     }
1078:sieve_extend.c ****     tuning_result[tuning_result_index].passes = passes;
 11659              		.loc 1 1078 5 is_stmt 1 view .LVU3951
 11660              	# sieve_extend.c:1078:     tuning_result[tuning_result_index].passes = passes;
 11661              		.loc 1 1078 47 is_stmt 0 view .LVU3952
 11662 415f 4C896348 		mov	QWORD PTR 72[rbx], r12	# _2->passes, passes
1079:sieve_extend.c ****     tuning_result[tuning_result_index].elapsed_time = elapsed_time;
 11663              		.loc 1 1079 5 is_stmt 1 view .LVU3953
 11664              	# sieve_extend.c:1079:     tuning_result[tuning_result_index].elapsed_time = elapsed_time;
 11665              		.loc 1 1079 53 is_stmt 0 view .LVU3954
 11666 4163 C5FB1163 		vmovsd	QWORD PTR 80[rbx], xmm4	# _2->elapsed_time, elapsed_time
 11666      50
1080:sieve_extend.c ****     tuning_result[tuning_result_index].avg = passes/elapsed_time;
 11667              		.loc 1 1080 5 is_stmt 1 view .LVU3955
 11668              	# sieve_extend.c:1080:     tuning_result[tuning_result_index].avg = passes/elapsed_time;
 11669              		.loc 1 1080 44 is_stmt 0 view .LVU3956
 11670 4168 C5FB117B 		vmovsd	QWORD PTR 88[rbx], xmm7	# _2->avg, _58
 11670      58
GAS LISTING /tmp/ccLUVin9.s 			page 315


 11671              	# sieve_extend.c:1081: }
1081:sieve_extend.c **** }
 11672              		.loc 1 1081 1 view .LVU3957
 11673 416d 488B4424 		mov	rax, QWORD PTR 40[rsp]	# tmp161, D.7189
 11673      28
 11674 4172 64483304 		xor	rax, QWORD PTR fs:40	# tmp161, MEM[(<address-space-1> long unsigned int *)40B]
 11674      25280000 
 11674      00
 11675 417b 750A     		jne	.L961	#,
 11676 417d 488D6424 		lea	rsp, 48[rsp]	#,
 11676      30
 11677              		.cfi_remember_state
 11678              		.cfi_def_cfa_offset 32
 11679 4182 5B       		pop	rbx	#
 11680              		.cfi_def_cfa_offset 24
 11681 4183 5D       		pop	rbp	#
 11682              		.cfi_def_cfa_offset 16
 11683 4184 415C     		pop	r12	#
 11684              		.cfi_def_cfa_offset 8
 11685 4186 C3       		ret	
 11686              	.L961:
 11687              		.cfi_restore_state
 11688 4187 E8000000 		call	__stack_chk_fail@PLT	#
 11688      00
 11689              	.LVL707:
 11690              		.cfi_endproc
 11691              	.LFE87:
 11693 418c 0F1F4000 		.p2align 4
 11694              		.globl	shiftvec
 11696              	shiftvec:
 11697              	.LVL708:
 11698              	.LFB70:
 563:sieve_extend.c ****     int i = 0;
 11699              		.loc 1 563 1 is_stmt 1 view -0
 11700              		.cfi_startproc
 563:sieve_extend.c ****     int i = 0;
 11701              		.loc 1 563 1 is_stmt 0 view .LVU3959
 11702 4190 F30F1EFA 		endbr64	
 564:sieve_extend.c ****     // MSVC: use steps of 2 for SSE, 4 for AVX2, 8 for AVX512
 11703              		.loc 1 564 5 is_stmt 1 view .LVU3960
 11704              	.LVL709:
 566:sieve_extend.c ****     {
 11705              		.loc 1 566 5 view .LVU3961
 566:sieve_extend.c ****     {
 11706              		.loc 1 566 12 view .LVU3962
 11707              	# sieve_extend.c:566:     for (; i+4 < size; i+=4,dst+=4,src+=4)
 566:sieve_extend.c ****     {
 11708              		.loc 1 566 5 is_stmt 0 view .LVU3963
 11709 4194 83FA04   		cmp	edx, 4	# size,
 11710 4197 0F8E9D03 		jle	.L1007	#,
 11710      0000
 11711 419d 41BB4000 		mov	r11d, 64	# tmp130,
 11711      0000
 11712 41a3 448D42FB 		lea	r8d, -5[rdx]	# tmp131,
 11713 41a7 4489D8   		mov	eax, r11d	# _4, tmp130
 11714 41aa C5F96EC9 		vmovd	xmm1, ecx	# shift, shift
 11715 41ae 29C8     		sub	eax, ecx	# _4, shift
GAS LISTING /tmp/ccLUVin9.s 			page 316


 11716              	.LBB573:
 11717              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11718              		.loc 1 569 25 view .LVU3964
 11719 41b0 C4E3FD00 		vpermq	ymm2, YMMWORD PTR [rsi], 85	# vect__102.567, MEM[base: src_35(D), index: ivtmp.581_114, off
 11719      1655
 11720              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11721              		.loc 1 569 34 view .LVU3965
 11722 41b6 C5FE6F26 		vmovdqu	ymm4, YMMWORD PTR [rsi]	# tmp269, MEM[base: src_35(D), index: ivtmp.581_114, offset: 0B]
 11723 41ba C4E1F96E 		vmovq	xmm0, rax	# _4, _4
 11723      C0
 11724 41bf 41C1E802 		shr	r8d, 2	# _25,
 11725 41c3 41B90100 		mov	r9d, 1	# ivtmp.578,
 11725      0000
 11726              	.LBE573:
 11727              	.LBB574:
 11728              	# sieve_extend.c:571:             *(dst+j) |= (*(src+1)>>(64-shift));
 571:sieve_extend.c ****     }
 11729              		.loc 1 571 34 view .LVU3966
 11730 41c9 C5EDD3E8 		vpsrlq	ymm5, ymm2, xmm0	# vect__57.568, vect__102.567, _4
 11731              	.LBE574:
 11732              	.LBB575:
 11733              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11734              		.loc 1 569 34 view .LVU3967
 11735 41cd C5DDF3D9 		vpsllq	ymm3, ymm4, xmm1	# vect__104.572, tmp269, shift
 11736 41d1 458D5001 		lea	r10d, 1[r8]	# tmp164,
 11737 41d5 4589C3   		mov	r11d, r8d	# tmp169, _25
 11738              	.LBE575:
 11739              	.LBB576:
 11740              	# sieve_extend.c:571:             *(dst+j) |= (*(src+1)>>(64-shift));
 571:sieve_extend.c ****     }
 11741              		.loc 1 571 22 view .LVU3968
 11742 41d8 C5D5EBF3 		vpor	ymm6, ymm5, ymm3	# vect__58.573, vect__57.568, vect__104.572
 11743 41dc 4183E307 		and	r11d, 7	# tmp169,
 11744              	.LVL710:
 571:sieve_extend.c ****     }
 11745              		.loc 1 571 22 view .LVU3969
 11746              	.LBE576:
 11747              	.LBB577:
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11748              		.loc 1 568 25 is_stmt 1 view .LVU3970
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11749              		.loc 1 569 13 view .LVU3971
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11750              		.loc 1 568 32 view .LVU3972
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11751              		.loc 1 568 25 view .LVU3973
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11752              		.loc 1 569 13 view .LVU3974
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11753              		.loc 1 568 32 view .LVU3975
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11754              		.loc 1 568 25 view .LVU3976
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11755              		.loc 1 569 13 view .LVU3977
GAS LISTING /tmp/ccLUVin9.s 			page 317


 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11756              		.loc 1 568 32 view .LVU3978
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11757              		.loc 1 568 25 view .LVU3979
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11758              		.loc 1 569 13 view .LVU3980
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11759              		.loc 1 568 32 view .LVU3981
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11760              		.loc 1 568 25 view .LVU3982
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11761              		.loc 1 568 25 is_stmt 0 view .LVU3983
 11762              	.LBE577:
 11763              	.LBB578:
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11764              		.loc 1 570 25 is_stmt 1 view .LVU3984
 571:sieve_extend.c ****     }
 11765              		.loc 1 571 13 view .LVU3985
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11766              		.loc 1 570 32 view .LVU3986
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11767              		.loc 1 570 25 view .LVU3987
 571:sieve_extend.c ****     }
 11768              		.loc 1 571 13 view .LVU3988
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11769              		.loc 1 570 32 view .LVU3989
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11770              		.loc 1 570 25 view .LVU3990
 571:sieve_extend.c ****     }
 11771              		.loc 1 571 13 view .LVU3991
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11772              		.loc 1 570 32 view .LVU3992
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11773              		.loc 1 570 25 view .LVU3993
 571:sieve_extend.c ****     }
 11774              		.loc 1 571 13 view .LVU3994
 11775 41e0 4183FA01 		cmp	r10d, 1	# tmp164,
 11776 41e4 B8200000 		mov	eax, 32	# ivtmp.581,
 11776      00
 11777              	# sieve_extend.c:571:             *(dst+j) |= (*(src+1)>>(64-shift));
 571:sieve_extend.c ****     }
 11778              		.loc 1 571 22 is_stmt 0 view .LVU3995
 11779 41e9 C5FE7F37 		vmovdqu	YMMWORD PTR [rdi], ymm6	# MEM[base: dst_34(D), index: ivtmp.581_114, offset: 0B], vect__58
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11780              		.loc 1 570 32 is_stmt 1 view .LVU3996
 11781              	.LVL711:
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11782              		.loc 1 570 25 view .LVU3997
 11783              	.LBE578:
 566:sieve_extend.c ****     {
 11784              		.loc 1 566 24 view .LVU3998
 566:sieve_extend.c ****     {
 11785              		.loc 1 566 12 view .LVU3999
 11786 41ed 0F866002 		jbe	.L1005	#,
 11786      0000
 11787 41f3 4585DB   		test	r11d, r11d	# tmp169
 11788 41f6 0F841E01 		je	.L965	#,
GAS LISTING /tmp/ccLUVin9.s 			page 318


 11788      0000
 11789 41fc 4183FB01 		cmp	r11d, 1	# tmp169,
 11790 4200 0F84E500 		je	.L992	#,
 11790      0000
 11791 4206 4183FB02 		cmp	r11d, 2	# tmp169,
 11792 420a 0F84B600 		je	.L993	#,
 11792      0000
 11793 4210 4183FB03 		cmp	r11d, 3	# tmp169,
 11794 4214 0F848700 		je	.L994	#,
 11794      0000
 11795 421a 4183FB04 		cmp	r11d, 4	# tmp169,
 11796 421e 745B     		je	.L995	#,
 11797 4220 4183FB05 		cmp	r11d, 5	# tmp169,
 11798 4224 7430     		je	.L996	#,
 11799 4226 4183FB06 		cmp	r11d, 6	# tmp169,
 11800 422a 0F85DC02 		jne	.L1008	#,
 11800      0000
 11801              	.L997:
 11802              	.LVL712:
 11803              	.LBB579:
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11804              		.loc 1 568 25 view .LVU4000
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11805              		.loc 1 569 13 view .LVU4001
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11806              		.loc 1 568 32 view .LVU4002
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11807              		.loc 1 568 25 view .LVU4003
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11808              		.loc 1 569 13 view .LVU4004
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11809              		.loc 1 568 32 view .LVU4005
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11810              		.loc 1 568 25 view .LVU4006
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11811              		.loc 1 569 13 view .LVU4007
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11812              		.loc 1 568 32 view .LVU4008
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11813              		.loc 1 568 25 view .LVU4009
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11814              		.loc 1 569 13 view .LVU4010
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11815              		.loc 1 568 32 view .LVU4011
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11816              		.loc 1 568 25 view .LVU4012
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11817              		.loc 1 568 25 is_stmt 0 view .LVU4013
 11818              	.LBE579:
 11819              	.LBB580:
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11820              		.loc 1 570 25 is_stmt 1 view .LVU4014
 571:sieve_extend.c ****     }
 11821              		.loc 1 571 13 view .LVU4015
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11822              		.loc 1 570 32 view .LVU4016
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
GAS LISTING /tmp/ccLUVin9.s 			page 319


 11823              		.loc 1 570 25 view .LVU4017
 571:sieve_extend.c ****     }
 11824              		.loc 1 571 13 view .LVU4018
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11825              		.loc 1 570 32 view .LVU4019
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11826              		.loc 1 570 25 view .LVU4020
 571:sieve_extend.c ****     }
 11827              		.loc 1 571 13 view .LVU4021
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11828              		.loc 1 570 32 view .LVU4022
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11829              		.loc 1 570 25 view .LVU4023
 571:sieve_extend.c ****     }
 11830              		.loc 1 571 13 view .LVU4024
 11831              	.LBE580:
 11832              	.LBB581:
 11833              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11834              		.loc 1 569 25 is_stmt 0 view .LVU4025
 11835 4230 C463FD00 		vpermq	ymm12, YMMWORD PTR [rsi+rax], 85	# vect__102.567, MEM[base: src_35(D), index: ivtmp.581_114
 11835      240655
 11836 4237 4183C101 		add	r9d, 1	# ivtmp.578,
 11837              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11838              		.loc 1 569 34 view .LVU4026
 11839 423b C57E6F34 		vmovdqu	ymm14, YMMWORD PTR [rsi+rax]	# tmp279, MEM[base: src_35(D), index: ivtmp.581_114, offset: 
 11839      06
 11840              	.LBE581:
 11841              	.LBB582:
 11842              	# sieve_extend.c:571:             *(dst+j) |= (*(src+1)>>(64-shift));
 571:sieve_extend.c ****     }
 11843              		.loc 1 571 34 view .LVU4027
 11844 4240 C51DD3E8 		vpsrlq	ymm13, ymm12, xmm0	# vect__57.568, vect__102.567, _4
 11845              	.LBE582:
 11846              	.LBB583:
 11847              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11848              		.loc 1 569 34 view .LVU4028
 11849 4244 C50DF3F9 		vpsllq	ymm15, ymm14, xmm1	# vect__104.572, tmp279, shift
 11850              	.LBE583:
 11851              	.LBB584:
 11852              	# sieve_extend.c:571:             *(dst+j) |= (*(src+1)>>(64-shift));
 571:sieve_extend.c ****     }
 11853              		.loc 1 571 22 view .LVU4029
 11854 4248 C4C115EB 		vpor	ymm2, ymm13, ymm15	# vect__58.573, vect__57.568, vect__104.572
 11854      D7
 11855 424d C5FE7F14 		vmovdqu	YMMWORD PTR [rdi+rax], ymm2	# MEM[base: dst_34(D), index: ivtmp.581_114, offset: 0B], vect
 11855      07
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11856              		.loc 1 570 32 is_stmt 1 view .LVU4030
 11857              	.LVL713:
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11858              		.loc 1 570 25 view .LVU4031
 11859              	.LBE584:
 566:sieve_extend.c ****     {
 11860              		.loc 1 566 24 view .LVU4032
GAS LISTING /tmp/ccLUVin9.s 			page 320


 566:sieve_extend.c ****     {
 11861              		.loc 1 566 12 view .LVU4033
 11862 4252 4883C020 		add	rax, 32	# ivtmp.581,
 11863              	.L996:
 11864              	.LVL714:
 11865              	.LBB585:
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11866              		.loc 1 568 25 view .LVU4034
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11867              		.loc 1 569 13 view .LVU4035
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11868              		.loc 1 568 32 view .LVU4036
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11869              		.loc 1 568 25 view .LVU4037
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11870              		.loc 1 569 13 view .LVU4038
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11871              		.loc 1 568 32 view .LVU4039
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11872              		.loc 1 568 25 view .LVU4040
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11873              		.loc 1 569 13 view .LVU4041
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11874              		.loc 1 568 32 view .LVU4042
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11875              		.loc 1 568 25 view .LVU4043
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11876              		.loc 1 569 13 view .LVU4044
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11877              		.loc 1 568 32 view .LVU4045
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11878              		.loc 1 568 25 view .LVU4046
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11879              		.loc 1 568 25 is_stmt 0 view .LVU4047
 11880              	.LBE585:
 11881              	.LBB586:
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11882              		.loc 1 570 25 is_stmt 1 view .LVU4048
 571:sieve_extend.c ****     }
 11883              		.loc 1 571 13 view .LVU4049
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11884              		.loc 1 570 32 view .LVU4050
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11885              		.loc 1 570 25 view .LVU4051
 571:sieve_extend.c ****     }
 11886              		.loc 1 571 13 view .LVU4052
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11887              		.loc 1 570 32 view .LVU4053
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11888              		.loc 1 570 25 view .LVU4054
 571:sieve_extend.c ****     }
 11889              		.loc 1 571 13 view .LVU4055
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11890              		.loc 1 570 32 view .LVU4056
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11891              		.loc 1 570 25 view .LVU4057
 571:sieve_extend.c ****     }
GAS LISTING /tmp/ccLUVin9.s 			page 321


 11892              		.loc 1 571 13 view .LVU4058
 11893              	.LBE586:
 11894              	.LBB587:
 11895              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11896              		.loc 1 569 25 is_stmt 0 view .LVU4059
 11897 4256 C4E3FD00 		vpermq	ymm5, YMMWORD PTR [rsi+rax], 85	# vect__102.567, MEM[base: src_35(D), index: ivtmp.581_114,
 11897      2C0655
 11898 425d 4183C101 		add	r9d, 1	# ivtmp.578,
 11899              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11900              		.loc 1 569 34 view .LVU4060
 11901 4261 C5FE6F1C 		vmovdqu	ymm3, YMMWORD PTR [rsi+rax]	# tmp280, MEM[base: src_35(D), index: ivtmp.581_114, offset: 0
 11901      06
 11902              	.LBE587:
 11903              	.LBB588:
 11904              	# sieve_extend.c:571:             *(dst+j) |= (*(src+1)>>(64-shift));
 571:sieve_extend.c ****     }
 11905              		.loc 1 571 34 view .LVU4061
 11906 4266 C5D5D3E0 		vpsrlq	ymm4, ymm5, xmm0	# vect__57.568, vect__102.567, _4
 11907              	.LBE588:
 11908              	.LBB589:
 11909              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11910              		.loc 1 569 34 view .LVU4062
 11911 426a C5E5F3F1 		vpsllq	ymm6, ymm3, xmm1	# vect__104.572, tmp280, shift
 11912              	.LBE589:
 11913              	.LBB590:
 11914              	# sieve_extend.c:571:             *(dst+j) |= (*(src+1)>>(64-shift));
 571:sieve_extend.c ****     }
 11915              		.loc 1 571 22 view .LVU4063
 11916 426e C5DDEBFE 		vpor	ymm7, ymm4, ymm6	# vect__58.573, vect__57.568, vect__104.572
 11917 4272 C5FE7F3C 		vmovdqu	YMMWORD PTR [rdi+rax], ymm7	# MEM[base: dst_34(D), index: ivtmp.581_114, offset: 0B], vect
 11917      07
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11918              		.loc 1 570 32 is_stmt 1 view .LVU4064
 11919              	.LVL715:
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11920              		.loc 1 570 25 view .LVU4065
 11921              	.LBE590:
 566:sieve_extend.c ****     {
 11922              		.loc 1 566 24 view .LVU4066
 566:sieve_extend.c ****     {
 11923              		.loc 1 566 12 view .LVU4067
 11924 4277 4883C020 		add	rax, 32	# ivtmp.581,
 11925              	.L995:
 11926              	.LVL716:
 11927              	.LBB591:
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11928              		.loc 1 568 25 view .LVU4068
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11929              		.loc 1 569 13 view .LVU4069
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11930              		.loc 1 568 32 view .LVU4070
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11931              		.loc 1 568 25 view .LVU4071
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
GAS LISTING /tmp/ccLUVin9.s 			page 322


 11932              		.loc 1 569 13 view .LVU4072
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11933              		.loc 1 568 32 view .LVU4073
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11934              		.loc 1 568 25 view .LVU4074
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11935              		.loc 1 569 13 view .LVU4075
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11936              		.loc 1 568 32 view .LVU4076
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11937              		.loc 1 568 25 view .LVU4077
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11938              		.loc 1 569 13 view .LVU4078
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11939              		.loc 1 568 32 view .LVU4079
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11940              		.loc 1 568 25 view .LVU4080
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11941              		.loc 1 568 25 is_stmt 0 view .LVU4081
 11942              	.LBE591:
 11943              	.LBB592:
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11944              		.loc 1 570 25 is_stmt 1 view .LVU4082
 571:sieve_extend.c ****     }
 11945              		.loc 1 571 13 view .LVU4083
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11946              		.loc 1 570 32 view .LVU4084
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11947              		.loc 1 570 25 view .LVU4085
 571:sieve_extend.c ****     }
 11948              		.loc 1 571 13 view .LVU4086
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11949              		.loc 1 570 32 view .LVU4087
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11950              		.loc 1 570 25 view .LVU4088
 571:sieve_extend.c ****     }
 11951              		.loc 1 571 13 view .LVU4089
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11952              		.loc 1 570 32 view .LVU4090
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11953              		.loc 1 570 25 view .LVU4091
 571:sieve_extend.c ****     }
 11954              		.loc 1 571 13 view .LVU4092
 11955              	.LBE592:
 11956              	.LBB593:
 11957              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11958              		.loc 1 569 25 is_stmt 0 view .LVU4093
 11959 427b C463FD00 		vpermq	ymm8, YMMWORD PTR [rsi+rax], 85	# vect__102.567, MEM[base: src_35(D), index: ivtmp.581_114,
 11959      040655
 11960 4282 4183C101 		add	r9d, 1	# ivtmp.578,
 11961              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11962              		.loc 1 569 34 view .LVU4094
 11963 4286 C57E6F14 		vmovdqu	ymm10, YMMWORD PTR [rsi+rax]	# tmp281, MEM[base: src_35(D), index: ivtmp.581_114, offset: 
 11963      06
 11964              	.LBE593:
GAS LISTING /tmp/ccLUVin9.s 			page 323


 11965              	.LBB594:
 11966              	# sieve_extend.c:571:             *(dst+j) |= (*(src+1)>>(64-shift));
 571:sieve_extend.c ****     }
 11967              		.loc 1 571 34 view .LVU4095
 11968 428b C53DD3C8 		vpsrlq	ymm9, ymm8, xmm0	# vect__57.568, vect__102.567, _4
 11969              	.LBE594:
 11970              	.LBB595:
 11971              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11972              		.loc 1 569 34 view .LVU4096
 11973 428f C52DF3D9 		vpsllq	ymm11, ymm10, xmm1	# vect__104.572, tmp281, shift
 11974              	.LBE595:
 11975              	.LBB596:
 11976              	# sieve_extend.c:571:             *(dst+j) |= (*(src+1)>>(64-shift));
 571:sieve_extend.c ****     }
 11977              		.loc 1 571 22 view .LVU4097
 11978 4293 C44135EB 		vpor	ymm12, ymm9, ymm11	# vect__58.573, vect__57.568, vect__104.572
 11978      E3
 11979 4298 C57E7F24 		vmovdqu	YMMWORD PTR [rdi+rax], ymm12	# MEM[base: dst_34(D), index: ivtmp.581_114, offset: 0B], vec
 11979      07
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11980              		.loc 1 570 32 is_stmt 1 view .LVU4098
 11981              	.LVL717:
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11982              		.loc 1 570 25 view .LVU4099
 11983              	.LBE596:
 566:sieve_extend.c ****     {
 11984              		.loc 1 566 24 view .LVU4100
 566:sieve_extend.c ****     {
 11985              		.loc 1 566 12 view .LVU4101
 11986 429d 4883C020 		add	rax, 32	# ivtmp.581,
 11987              	.L994:
 11988              	.LVL718:
 11989              	.LBB597:
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11990              		.loc 1 568 25 view .LVU4102
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11991              		.loc 1 569 13 view .LVU4103
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11992              		.loc 1 568 32 view .LVU4104
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11993              		.loc 1 568 25 view .LVU4105
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11994              		.loc 1 569 13 view .LVU4106
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11995              		.loc 1 568 32 view .LVU4107
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11996              		.loc 1 568 25 view .LVU4108
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11997              		.loc 1 569 13 view .LVU4109
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11998              		.loc 1 568 32 view .LVU4110
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11999              		.loc 1 568 25 view .LVU4111
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12000              		.loc 1 569 13 view .LVU4112
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
GAS LISTING /tmp/ccLUVin9.s 			page 324


 12001              		.loc 1 568 32 view .LVU4113
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12002              		.loc 1 568 25 view .LVU4114
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12003              		.loc 1 568 25 is_stmt 0 view .LVU4115
 12004              	.LBE597:
 12005              	.LBB598:
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12006              		.loc 1 570 25 is_stmt 1 view .LVU4116
 571:sieve_extend.c ****     }
 12007              		.loc 1 571 13 view .LVU4117
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12008              		.loc 1 570 32 view .LVU4118
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12009              		.loc 1 570 25 view .LVU4119
 571:sieve_extend.c ****     }
 12010              		.loc 1 571 13 view .LVU4120
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12011              		.loc 1 570 32 view .LVU4121
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12012              		.loc 1 570 25 view .LVU4122
 571:sieve_extend.c ****     }
 12013              		.loc 1 571 13 view .LVU4123
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12014              		.loc 1 570 32 view .LVU4124
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12015              		.loc 1 570 25 view .LVU4125
 571:sieve_extend.c ****     }
 12016              		.loc 1 571 13 view .LVU4126
 12017              	.LBE598:
 12018              	.LBB599:
 12019              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12020              		.loc 1 569 25 is_stmt 0 view .LVU4127
 12021 42a1 C463FD00 		vpermq	ymm13, YMMWORD PTR [rsi+rax], 85	# vect__102.567, MEM[base: src_35(D), index: ivtmp.581_114
 12021      2C0655
 12022 42a8 4183C101 		add	r9d, 1	# ivtmp.578,
 12023              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12024              		.loc 1 569 34 view .LVU4128
 12025 42ac C57E6F3C 		vmovdqu	ymm15, YMMWORD PTR [rsi+rax]	# tmp282, MEM[base: src_35(D), index: ivtmp.581_114, offset: 
 12025      06
 12026              	.LBE599:
 12027              	.LBB600:
 12028              	# sieve_extend.c:571:             *(dst+j) |= (*(src+1)>>(64-shift));
 571:sieve_extend.c ****     }
 12029              		.loc 1 571 34 view .LVU4129
 12030 42b1 C515D3F0 		vpsrlq	ymm14, ymm13, xmm0	# vect__57.568, vect__102.567, _4
 12031              	.LBE600:
 12032              	.LBB601:
 12033              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12034              		.loc 1 569 34 view .LVU4130
 12035 42b5 C585F3D1 		vpsllq	ymm2, ymm15, xmm1	# vect__104.572, tmp282, shift
 12036              	.LBE601:
 12037              	.LBB602:
 12038              	# sieve_extend.c:571:             *(dst+j) |= (*(src+1)>>(64-shift));
GAS LISTING /tmp/ccLUVin9.s 			page 325


 571:sieve_extend.c ****     }
 12039              		.loc 1 571 22 view .LVU4131
 12040 42b9 C58DEBEA 		vpor	ymm5, ymm14, ymm2	# vect__58.573, vect__57.568, vect__104.572
 12041 42bd C5FE7F2C 		vmovdqu	YMMWORD PTR [rdi+rax], ymm5	# MEM[base: dst_34(D), index: ivtmp.581_114, offset: 0B], vect
 12041      07
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12042              		.loc 1 570 32 is_stmt 1 view .LVU4132
 12043              	.LVL719:
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12044              		.loc 1 570 25 view .LVU4133
 12045              	.LBE602:
 566:sieve_extend.c ****     {
 12046              		.loc 1 566 24 view .LVU4134
 566:sieve_extend.c ****     {
 12047              		.loc 1 566 12 view .LVU4135
 12048 42c2 4883C020 		add	rax, 32	# ivtmp.581,
 12049              	.L993:
 12050              	.LVL720:
 12051              	.LBB603:
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12052              		.loc 1 568 25 view .LVU4136
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12053              		.loc 1 569 13 view .LVU4137
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12054              		.loc 1 568 32 view .LVU4138
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12055              		.loc 1 568 25 view .LVU4139
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12056              		.loc 1 569 13 view .LVU4140
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12057              		.loc 1 568 32 view .LVU4141
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12058              		.loc 1 568 25 view .LVU4142
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12059              		.loc 1 569 13 view .LVU4143
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12060              		.loc 1 568 32 view .LVU4144
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12061              		.loc 1 568 25 view .LVU4145
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12062              		.loc 1 569 13 view .LVU4146
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12063              		.loc 1 568 32 view .LVU4147
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12064              		.loc 1 568 25 view .LVU4148
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12065              		.loc 1 568 25 is_stmt 0 view .LVU4149
 12066              	.LBE603:
 12067              	.LBB604:
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12068              		.loc 1 570 25 is_stmt 1 view .LVU4150
 571:sieve_extend.c ****     }
 12069              		.loc 1 571 13 view .LVU4151
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12070              		.loc 1 570 32 view .LVU4152
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12071              		.loc 1 570 25 view .LVU4153
GAS LISTING /tmp/ccLUVin9.s 			page 326


 571:sieve_extend.c ****     }
 12072              		.loc 1 571 13 view .LVU4154
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12073              		.loc 1 570 32 view .LVU4155
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12074              		.loc 1 570 25 view .LVU4156
 571:sieve_extend.c ****     }
 12075              		.loc 1 571 13 view .LVU4157
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12076              		.loc 1 570 32 view .LVU4158
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12077              		.loc 1 570 25 view .LVU4159
 571:sieve_extend.c ****     }
 12078              		.loc 1 571 13 view .LVU4160
 12079              	.LBE604:
 12080              	.LBB605:
 12081              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12082              		.loc 1 569 25 is_stmt 0 view .LVU4161
 12083 42c6 C4E3FD00 		vpermq	ymm4, YMMWORD PTR [rsi+rax], 85	# vect__102.567, MEM[base: src_35(D), index: ivtmp.581_114,
 12083      240655
 12084 42cd 4183C101 		add	r9d, 1	# ivtmp.578,
 12085              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12086              		.loc 1 569 34 view .LVU4162
 12087 42d1 C5FE6F1C 		vmovdqu	ymm3, YMMWORD PTR [rsi+rax]	# tmp283, MEM[base: src_35(D), index: ivtmp.581_114, offset: 0
 12087      06
 12088              	.LBE605:
 12089              	.LBB606:
 12090              	# sieve_extend.c:571:             *(dst+j) |= (*(src+1)>>(64-shift));
 571:sieve_extend.c ****     }
 12091              		.loc 1 571 34 view .LVU4163
 12092 42d6 C5DDD3F0 		vpsrlq	ymm6, ymm4, xmm0	# vect__57.568, vect__102.567, _4
 12093              	.LBE606:
 12094              	.LBB607:
 12095              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12096              		.loc 1 569 34 view .LVU4164
 12097 42da C5E5F3F9 		vpsllq	ymm7, ymm3, xmm1	# vect__104.572, tmp283, shift
 12098              	.LBE607:
 12099              	.LBB608:
 12100              	# sieve_extend.c:571:             *(dst+j) |= (*(src+1)>>(64-shift));
 571:sieve_extend.c ****     }
 12101              		.loc 1 571 22 view .LVU4165
 12102 42de C54DEBC7 		vpor	ymm8, ymm6, ymm7	# vect__58.573, vect__57.568, vect__104.572
 12103 42e2 C57E7F04 		vmovdqu	YMMWORD PTR [rdi+rax], ymm8	# MEM[base: dst_34(D), index: ivtmp.581_114, offset: 0B], vect
 12103      07
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12104              		.loc 1 570 32 is_stmt 1 view .LVU4166
 12105              	.LVL721:
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12106              		.loc 1 570 25 view .LVU4167
 12107              	.LBE608:
 566:sieve_extend.c ****     {
 12108              		.loc 1 566 24 view .LVU4168
 566:sieve_extend.c ****     {
 12109              		.loc 1 566 12 view .LVU4169
GAS LISTING /tmp/ccLUVin9.s 			page 327


 12110 42e7 4883C020 		add	rax, 32	# ivtmp.581,
 12111              	.L992:
 12112              	.LVL722:
 12113              	.LBB609:
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12114              		.loc 1 568 25 view .LVU4170
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12115              		.loc 1 569 13 view .LVU4171
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12116              		.loc 1 568 32 view .LVU4172
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12117              		.loc 1 568 25 view .LVU4173
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12118              		.loc 1 569 13 view .LVU4174
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12119              		.loc 1 568 32 view .LVU4175
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12120              		.loc 1 568 25 view .LVU4176
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12121              		.loc 1 569 13 view .LVU4177
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12122              		.loc 1 568 32 view .LVU4178
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12123              		.loc 1 568 25 view .LVU4179
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12124              		.loc 1 569 13 view .LVU4180
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12125              		.loc 1 568 32 view .LVU4181
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12126              		.loc 1 568 25 view .LVU4182
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12127              		.loc 1 568 25 is_stmt 0 view .LVU4183
 12128              	.LBE609:
 12129              	.LBB610:
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12130              		.loc 1 570 25 is_stmt 1 view .LVU4184
 571:sieve_extend.c ****     }
 12131              		.loc 1 571 13 view .LVU4185
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12132              		.loc 1 570 32 view .LVU4186
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12133              		.loc 1 570 25 view .LVU4187
 571:sieve_extend.c ****     }
 12134              		.loc 1 571 13 view .LVU4188
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12135              		.loc 1 570 32 view .LVU4189
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12136              		.loc 1 570 25 view .LVU4190
 571:sieve_extend.c ****     }
 12137              		.loc 1 571 13 view .LVU4191
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12138              		.loc 1 570 32 view .LVU4192
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12139              		.loc 1 570 25 view .LVU4193
 571:sieve_extend.c ****     }
 12140              		.loc 1 571 13 view .LVU4194
 12141              	.LBE610:
GAS LISTING /tmp/ccLUVin9.s 			page 328


 12142              	.LBB611:
 12143              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12144              		.loc 1 569 25 is_stmt 0 view .LVU4195
 12145 42eb C463FD00 		vpermq	ymm9, YMMWORD PTR [rsi+rax], 85	# vect__102.567, MEM[base: src_35(D), index: ivtmp.581_114,
 12145      0C0655
 12146 42f2 4183C101 		add	r9d, 1	# ivtmp.578,
 12147              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12148              		.loc 1 569 34 view .LVU4196
 12149 42f6 C57E6F1C 		vmovdqu	ymm11, YMMWORD PTR [rsi+rax]	# tmp284, MEM[base: src_35(D), index: ivtmp.581_114, offset: 
 12149      06
 12150              	.LBE611:
 12151              	.LBB612:
 12152              	# sieve_extend.c:571:             *(dst+j) |= (*(src+1)>>(64-shift));
 571:sieve_extend.c ****     }
 12153              		.loc 1 571 34 view .LVU4197
 12154 42fb C535D3D0 		vpsrlq	ymm10, ymm9, xmm0	# vect__57.568, vect__102.567, _4
 12155              	.LBE612:
 12156              	.LBB613:
 12157              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12158              		.loc 1 569 34 view .LVU4198
 12159 42ff C525F3E1 		vpsllq	ymm12, ymm11, xmm1	# vect__104.572, tmp284, shift
 12160              	.LBE613:
 12161              	.LBB614:
 12162              	# sieve_extend.c:571:             *(dst+j) |= (*(src+1)>>(64-shift));
 571:sieve_extend.c ****     }
 12163              		.loc 1 571 22 view .LVU4199
 12164 4303 C4412DEB 		vpor	ymm13, ymm10, ymm12	# vect__58.573, vect__57.568, vect__104.572
 12164      EC
 12165 4308 C57E7F2C 		vmovdqu	YMMWORD PTR [rdi+rax], ymm13	# MEM[base: dst_34(D), index: ivtmp.581_114, offset: 0B], vec
 12165      07
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12166              		.loc 1 570 32 is_stmt 1 view .LVU4200
 12167              	.LVL723:
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12168              		.loc 1 570 25 view .LVU4201
 12169              	.LBE614:
 566:sieve_extend.c ****     {
 12170              		.loc 1 566 24 view .LVU4202
 566:sieve_extend.c ****     {
 12171              		.loc 1 566 12 view .LVU4203
 12172 430d 4883C020 		add	rax, 32	# ivtmp.581,
 12173 4311 4539CA   		cmp	r10d, r9d	# tmp164, ivtmp.578
 12174 4314 0F863901 		jbe	.L1005	#,
 12174      0000
 12175              	.L965:
 12176              	.LVL724:
 12177              	.LBB615:
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12178              		.loc 1 568 25 view .LVU4204
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12179              		.loc 1 569 13 view .LVU4205
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12180              		.loc 1 568 32 view .LVU4206
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
GAS LISTING /tmp/ccLUVin9.s 			page 329


 12181              		.loc 1 568 25 view .LVU4207
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12182              		.loc 1 569 13 view .LVU4208
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12183              		.loc 1 568 32 view .LVU4209
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12184              		.loc 1 568 25 view .LVU4210
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12185              		.loc 1 569 13 view .LVU4211
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12186              		.loc 1 568 32 view .LVU4212
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12187              		.loc 1 568 25 view .LVU4213
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12188              		.loc 1 569 13 view .LVU4214
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12189              		.loc 1 568 32 view .LVU4215
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12190              		.loc 1 568 25 view .LVU4216
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12191              		.loc 1 568 25 is_stmt 0 view .LVU4217
 12192              	.LBE615:
 12193              	.LBB616:
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12194              		.loc 1 570 25 is_stmt 1 view .LVU4218
 571:sieve_extend.c ****     }
 12195              		.loc 1 571 13 view .LVU4219
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12196              		.loc 1 570 32 view .LVU4220
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12197              		.loc 1 570 25 view .LVU4221
 571:sieve_extend.c ****     }
 12198              		.loc 1 571 13 view .LVU4222
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12199              		.loc 1 570 32 view .LVU4223
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12200              		.loc 1 570 25 view .LVU4224
 571:sieve_extend.c ****     }
 12201              		.loc 1 571 13 view .LVU4225
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12202              		.loc 1 570 32 view .LVU4226
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12203              		.loc 1 570 25 view .LVU4227
 571:sieve_extend.c ****     }
 12204              		.loc 1 571 13 view .LVU4228
 12205              	.LBE616:
 12206              	.LBB617:
 12207              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12208              		.loc 1 569 25 is_stmt 0 view .LVU4229
 12209 431a C463FD00 		vpermq	ymm14, YMMWORD PTR [rsi+rax], 85	# vect__102.567, MEM[base: src_35(D), index: ivtmp.581_114
 12209      340655
 12210 4321 C4E3FD00 		vpermq	ymm6, YMMWORD PTR 32[rsi+rax], 85	# vect__102.567, MEM[base: src_35(D), index: ivtmp.581_11
 12210      74062055 
 12211              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12212              		.loc 1 569 34 view .LVU4230
GAS LISTING /tmp/ccLUVin9.s 			page 330


 12213 4329 C5FE6F14 		vmovdqu	ymm2, YMMWORD PTR [rsi+rax]	# tmp270, MEM[base: src_35(D), index: ivtmp.581_114, offset: 0
 12213      06
 12214              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12215              		.loc 1 569 25 view .LVU4231
 12216 432e C463FD00 		vpermq	ymm10, YMMWORD PTR 64[rsi+rax], 85	# vect__102.567, MEM[base: src_35(D), index: ivtmp.581_1
 12216      54064055 
 12217              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12218              		.loc 1 569 34 view .LVU4232
 12219 4336 C5FE6F5C 		vmovdqu	ymm3, YMMWORD PTR 32[rsi+rax]	# tmp271, MEM[base: src_35(D), index: ivtmp.581_114, offset:
 12219      0620
 12220 433c 4183C108 		add	r9d, 8	# ivtmp.578,
 12221              	.LBE617:
 12222              	.LBB618:
 12223              	# sieve_extend.c:571:             *(dst+j) |= (*(src+1)>>(64-shift));
 571:sieve_extend.c ****     }
 12224              		.loc 1 571 34 view .LVU4233
 12225 4340 C50DD3F8 		vpsrlq	ymm15, ymm14, xmm0	# vect__57.568, vect__102.567, _4
 12226 4344 C5CDD3F8 		vpsrlq	ymm7, ymm6, xmm0	# vect__57.568, vect__102.567, _4
 12227              	.LBE618:
 12228              	.LBB619:
 12229              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12230              		.loc 1 569 34 view .LVU4234
 12231 4348 C5EDF3E9 		vpsllq	ymm5, ymm2, xmm1	# vect__104.572, tmp270, shift
 12232 434c C565F3C1 		vpsllq	ymm8, ymm3, xmm1	# vect__104.572, tmp271, shift
 12233 4350 C57E6F64 		vmovdqu	ymm12, YMMWORD PTR 64[rsi+rax]	# tmp272, MEM[base: src_35(D), index: ivtmp.581_114, offset
 12233      0640
 12234              	.LBE619:
 12235              	.LBB620:
 12236              	# sieve_extend.c:571:             *(dst+j) |= (*(src+1)>>(64-shift));
 571:sieve_extend.c ****     }
 12237              		.loc 1 571 22 view .LVU4235
 12238 4356 C585EBE5 		vpor	ymm4, ymm15, ymm5	# vect__58.573, vect__57.568, vect__104.572
 12239              	.LBE620:
 12240              	.LBB621:
 12241              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12242              		.loc 1 569 34 view .LVU4236
 12243 435a C5FE6F9C 		vmovdqu	ymm3, YMMWORD PTR 128[rsi+rax]	# tmp274, MEM[base: src_35(D), index: ivtmp.581_114, offset
 12243      06800000 
 12243      00
 12244              	.LBE621:
 12245              	.LBB622:
 12246              	# sieve_extend.c:571:             *(dst+j) |= (*(src+1)>>(64-shift));
 571:sieve_extend.c ****     }
 12247              		.loc 1 571 22 view .LVU4237
 12248 4363 C44145EB 		vpor	ymm9, ymm7, ymm8	# vect__58.573, vect__57.568, vect__104.572
 12248      C8
 12249              	.LBE622:
 12250              	.LBB623:
 12251              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12252              		.loc 1 569 25 view .LVU4238
 12253 4368 C463FD00 		vpermq	ymm15, YMMWORD PTR 96[rsi+rax], 85	# vect__102.567, MEM[base: src_35(D), index: ivtmp.581_1
 12253      7C066055 
GAS LISTING /tmp/ccLUVin9.s 			page 331


 12254 4370 C4E3FD00 		vpermq	ymm7, YMMWORD PTR 128[rsi+rax], 85	# vect__102.567, MEM[base: src_35(D), index: ivtmp.581_1
 12254      BC068000 
 12254      000055
 12255              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12256              		.loc 1 569 34 view .LVU4239
 12257 437b C5FE6F6C 		vmovdqu	ymm5, YMMWORD PTR 96[rsi+rax]	# tmp273, MEM[base: src_35(D), index: ivtmp.581_114, offset:
 12257      0660
 12258              	.LBE623:
 12259              	.LBB624:
 12260              	# sieve_extend.c:571:             *(dst+j) |= (*(src+1)>>(64-shift));
 571:sieve_extend.c ****     }
 12261              		.loc 1 571 34 view .LVU4240
 12262 4381 C52DD3D8 		vpsrlq	ymm11, ymm10, xmm0	# vect__57.568, vect__102.567, _4
 12263              	.LBE624:
 12264              	.LBB625:
 12265              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12266              		.loc 1 569 34 view .LVU4241
 12267 4385 C51DF3E9 		vpsllq	ymm13, ymm12, xmm1	# vect__104.572, tmp272, shift
 12268              	.LBE625:
 12269              	.LBB626:
 12270              	# sieve_extend.c:571:             *(dst+j) |= (*(src+1)>>(64-shift));
 571:sieve_extend.c ****     }
 12271              		.loc 1 571 34 view .LVU4242
 12272 4389 C585D3D0 		vpsrlq	ymm2, ymm15, xmm0	# vect__57.568, vect__102.567, _4
 12273              	# sieve_extend.c:571:             *(dst+j) |= (*(src+1)>>(64-shift));
 571:sieve_extend.c ****     }
 12274              		.loc 1 571 22 view .LVU4243
 12275 438d C5FE7F24 		vmovdqu	YMMWORD PTR [rdi+rax], ymm4	# MEM[base: dst_34(D), index: ivtmp.581_114, offset: 0B], vect
 12275      07
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12276              		.loc 1 570 32 is_stmt 1 view .LVU4244
 12277              	.LVL725:
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12278              		.loc 1 570 25 view .LVU4245
 12279              	.LBE626:
 566:sieve_extend.c ****     {
 12280              		.loc 1 566 24 view .LVU4246
 566:sieve_extend.c ****     {
 12281              		.loc 1 566 12 view .LVU4247
 12282              	.LBB627:
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12283              		.loc 1 568 25 view .LVU4248
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12284              		.loc 1 569 13 view .LVU4249
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12285              		.loc 1 568 32 view .LVU4250
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12286              		.loc 1 568 25 view .LVU4251
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12287              		.loc 1 569 13 view .LVU4252
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12288              		.loc 1 568 32 view .LVU4253
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12289              		.loc 1 568 25 view .LVU4254
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
GAS LISTING /tmp/ccLUVin9.s 			page 332


 12290              		.loc 1 569 13 view .LVU4255
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12291              		.loc 1 568 32 view .LVU4256
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12292              		.loc 1 568 25 view .LVU4257
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12293              		.loc 1 569 13 view .LVU4258
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12294              		.loc 1 568 32 view .LVU4259
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12295              		.loc 1 568 25 view .LVU4260
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12296              		.loc 1 568 25 is_stmt 0 view .LVU4261
 12297              	.LBE627:
 12298              	.LBB628:
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12299              		.loc 1 570 25 is_stmt 1 view .LVU4262
 571:sieve_extend.c ****     }
 12300              		.loc 1 571 13 view .LVU4263
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12301              		.loc 1 570 32 view .LVU4264
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12302              		.loc 1 570 25 view .LVU4265
 571:sieve_extend.c ****     }
 12303              		.loc 1 571 13 view .LVU4266
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12304              		.loc 1 570 32 view .LVU4267
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12305              		.loc 1 570 25 view .LVU4268
 571:sieve_extend.c ****     }
 12306              		.loc 1 571 13 view .LVU4269
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12307              		.loc 1 570 32 view .LVU4270
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12308              		.loc 1 570 25 view .LVU4271
 571:sieve_extend.c ****     }
 12309              		.loc 1 571 13 view .LVU4272
 12310              	# sieve_extend.c:571:             *(dst+j) |= (*(src+1)>>(64-shift));
 571:sieve_extend.c ****     }
 12311              		.loc 1 571 22 is_stmt 0 view .LVU4273
 12312 4392 C44125EB 		vpor	ymm14, ymm11, ymm13	# vect__58.573, vect__57.568, vect__104.572
 12312      F5
 12313              	# sieve_extend.c:571:             *(dst+j) |= (*(src+1)>>(64-shift));
 571:sieve_extend.c ****     }
 12314              		.loc 1 571 34 view .LVU4274
 12315 4397 C545D3C0 		vpsrlq	ymm8, ymm7, xmm0	# vect__57.568, vect__102.567, _4
 12316              	# sieve_extend.c:571:             *(dst+j) |= (*(src+1)>>(64-shift));
 571:sieve_extend.c ****     }
 12317              		.loc 1 571 22 view .LVU4275
 12318 439b C57E7F4C 		vmovdqu	YMMWORD PTR 32[rdi+rax], ymm9	# MEM[base: dst_34(D), index: ivtmp.581_114, offset: 0B], ve
 12318      0720
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12319              		.loc 1 570 32 is_stmt 1 view .LVU4276
 12320              	.LVL726:
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12321              		.loc 1 570 25 view .LVU4277
 12322              	.LBE628:
GAS LISTING /tmp/ccLUVin9.s 			page 333


 566:sieve_extend.c ****     {
 12323              		.loc 1 566 24 view .LVU4278
 566:sieve_extend.c ****     {
 12324              		.loc 1 566 12 view .LVU4279
 12325              	.LBB629:
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12326              		.loc 1 568 25 view .LVU4280
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12327              		.loc 1 569 13 view .LVU4281
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12328              		.loc 1 568 32 view .LVU4282
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12329              		.loc 1 568 25 view .LVU4283
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12330              		.loc 1 569 13 view .LVU4284
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12331              		.loc 1 568 32 view .LVU4285
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12332              		.loc 1 568 25 view .LVU4286
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12333              		.loc 1 569 13 view .LVU4287
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12334              		.loc 1 568 32 view .LVU4288
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12335              		.loc 1 568 25 view .LVU4289
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12336              		.loc 1 569 13 view .LVU4290
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12337              		.loc 1 568 32 view .LVU4291
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12338              		.loc 1 568 25 view .LVU4292
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12339              		.loc 1 568 25 is_stmt 0 view .LVU4293
 12340              	.LBE629:
 12341              	.LBB630:
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12342              		.loc 1 570 25 is_stmt 1 view .LVU4294
 571:sieve_extend.c ****     }
 12343              		.loc 1 571 13 view .LVU4295
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12344              		.loc 1 570 32 view .LVU4296
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12345              		.loc 1 570 25 view .LVU4297
 571:sieve_extend.c ****     }
 12346              		.loc 1 571 13 view .LVU4298
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12347              		.loc 1 570 32 view .LVU4299
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12348              		.loc 1 570 25 view .LVU4300
 571:sieve_extend.c ****     }
 12349              		.loc 1 571 13 view .LVU4301
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12350              		.loc 1 570 32 view .LVU4302
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12351              		.loc 1 570 25 view .LVU4303
 571:sieve_extend.c ****     }
 12352              		.loc 1 571 13 view .LVU4304
GAS LISTING /tmp/ccLUVin9.s 			page 334


 12353              	.LBE630:
 12354              	.LBB631:
 12355              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12356              		.loc 1 569 25 is_stmt 0 view .LVU4305
 12357 43a1 C463FD00 		vpermq	ymm11, YMMWORD PTR 160[rsi+rax], 85	# vect__102.567, MEM[base: src_35(D), index: ivtmp.581_
 12357      9C06A000 
 12357      000055
 12358              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12359              		.loc 1 569 34 view .LVU4306
 12360 43ac C5D5F3E1 		vpsllq	ymm4, ymm5, xmm1	# vect__104.572, tmp273, shift
 12361 43b0 C565F3C9 		vpsllq	ymm9, ymm3, xmm1	# vect__104.572, tmp274, shift
 12362 43b4 C57E6FAC 		vmovdqu	ymm13, YMMWORD PTR 160[rsi+rax]	# tmp275, MEM[base: src_35(D), index: ivtmp.581_114, offse
 12362      06A00000 
 12362      00
 12363              	.LBE631:
 12364              	.LBB632:
 12365              	# sieve_extend.c:571:             *(dst+j) |= (*(src+1)>>(64-shift));
 571:sieve_extend.c ****     }
 12366              		.loc 1 571 22 view .LVU4307
 12367 43bd C5EDEBF4 		vpor	ymm6, ymm2, ymm4	# vect__58.573, vect__57.568, vect__104.572
 12368              	.LBE632:
 12369              	.LBB633:
 12370              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12371              		.loc 1 569 34 view .LVU4308
 12372 43c1 C5FE6F9C 		vmovdqu	ymm3, YMMWORD PTR 224[rsi+rax]	# tmp277, MEM[base: src_35(D), index: ivtmp.581_114, offset
 12372      06E00000 
 12372      00
 12373              	.LBE633:
 12374              	.LBB634:
 12375              	# sieve_extend.c:571:             *(dst+j) |= (*(src+1)>>(64-shift));
 571:sieve_extend.c ****     }
 12376              		.loc 1 571 22 view .LVU4309
 12377 43ca C4413DEB 		vpor	ymm10, ymm8, ymm9	# vect__58.573, vect__57.568, vect__104.572
 12377      D1
 12378              	.LBE634:
 12379              	.LBB635:
 12380              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12381              		.loc 1 569 25 view .LVU4310
 12382 43cf C4E3FD00 		vpermq	ymm2, YMMWORD PTR 192[rsi+rax], 85	# vect__102.567, MEM[base: src_35(D), index: ivtmp.581_1
 12382      9406C000 
 12382      000055
 12383 43da C463FD00 		vpermq	ymm8, YMMWORD PTR 224[rsi+rax], 85	# vect__102.567, MEM[base: src_35(D), index: ivtmp.581_1
 12383      8406E000 
 12383      000055
 12384              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12385              		.loc 1 569 34 view .LVU4311
 12386 43e5 C5FE6FA4 		vmovdqu	ymm4, YMMWORD PTR 192[rsi+rax]	# tmp276, MEM[base: src_35(D), index: ivtmp.581_114, offset
 12386      06C00000 
 12386      00
 12387              	.LBE635:
 12388              	.LBB636:
 12389              	# sieve_extend.c:571:             *(dst+j) |= (*(src+1)>>(64-shift));
GAS LISTING /tmp/ccLUVin9.s 			page 335


 571:sieve_extend.c ****     }
 12390              		.loc 1 571 22 view .LVU4312
 12391 43ee C57E7F74 		vmovdqu	YMMWORD PTR 64[rdi+rax], ymm14	# MEM[base: dst_34(D), index: ivtmp.581_114, offset: 0B], v
 12391      0740
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12392              		.loc 1 570 32 is_stmt 1 view .LVU4313
 12393              	.LVL727:
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12394              		.loc 1 570 25 view .LVU4314
 12395              	.LBE636:
 566:sieve_extend.c ****     {
 12396              		.loc 1 566 24 view .LVU4315
 566:sieve_extend.c ****     {
 12397              		.loc 1 566 12 view .LVU4316
 12398              	.LBB637:
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12399              		.loc 1 568 25 view .LVU4317
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12400              		.loc 1 569 13 view .LVU4318
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12401              		.loc 1 568 32 view .LVU4319
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12402              		.loc 1 568 25 view .LVU4320
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12403              		.loc 1 569 13 view .LVU4321
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12404              		.loc 1 568 32 view .LVU4322
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12405              		.loc 1 568 25 view .LVU4323
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12406              		.loc 1 569 13 view .LVU4324
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12407              		.loc 1 568 32 view .LVU4325
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12408              		.loc 1 568 25 view .LVU4326
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12409              		.loc 1 569 13 view .LVU4327
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12410              		.loc 1 568 32 view .LVU4328
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12411              		.loc 1 568 25 view .LVU4329
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12412              		.loc 1 568 25 is_stmt 0 view .LVU4330
 12413              	.LBE637:
 12414              	.LBB638:
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12415              		.loc 1 570 25 is_stmt 1 view .LVU4331
 571:sieve_extend.c ****     }
 12416              		.loc 1 571 13 view .LVU4332
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12417              		.loc 1 570 32 view .LVU4333
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12418              		.loc 1 570 25 view .LVU4334
 571:sieve_extend.c ****     }
 12419              		.loc 1 571 13 view .LVU4335
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12420              		.loc 1 570 32 view .LVU4336
GAS LISTING /tmp/ccLUVin9.s 			page 336


 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12421              		.loc 1 570 25 view .LVU4337
 571:sieve_extend.c ****     }
 12422              		.loc 1 571 13 view .LVU4338
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12423              		.loc 1 570 32 view .LVU4339
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12424              		.loc 1 570 25 view .LVU4340
 571:sieve_extend.c ****     }
 12425              		.loc 1 571 13 view .LVU4341
 12426              	# sieve_extend.c:571:             *(dst+j) |= (*(src+1)>>(64-shift));
 571:sieve_extend.c ****     }
 12427              		.loc 1 571 34 is_stmt 0 view .LVU4342
 12428 43f4 C525D3E0 		vpsrlq	ymm12, ymm11, xmm0	# vect__57.568, vect__102.567, _4
 12429              	# sieve_extend.c:571:             *(dst+j) |= (*(src+1)>>(64-shift));
 571:sieve_extend.c ****     }
 12430              		.loc 1 571 22 view .LVU4343
 12431 43f8 C5FE7F74 		vmovdqu	YMMWORD PTR 96[rdi+rax], ymm6	# MEM[base: dst_34(D), index: ivtmp.581_114, offset: 0B], ve
 12431      0760
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12432              		.loc 1 570 32 is_stmt 1 view .LVU4344
 12433              	.LVL728:
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12434              		.loc 1 570 25 view .LVU4345
 12435              	.LBE638:
 566:sieve_extend.c ****     {
 12436              		.loc 1 566 24 view .LVU4346
 566:sieve_extend.c ****     {
 12437              		.loc 1 566 12 view .LVU4347
 12438              	.LBB639:
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12439              		.loc 1 568 25 view .LVU4348
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12440              		.loc 1 569 13 view .LVU4349
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12441              		.loc 1 568 32 view .LVU4350
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12442              		.loc 1 568 25 view .LVU4351
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12443              		.loc 1 569 13 view .LVU4352
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12444              		.loc 1 568 32 view .LVU4353
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12445              		.loc 1 568 25 view .LVU4354
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12446              		.loc 1 569 13 view .LVU4355
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12447              		.loc 1 568 32 view .LVU4356
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12448              		.loc 1 568 25 view .LVU4357
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12449              		.loc 1 569 13 view .LVU4358
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12450              		.loc 1 568 32 view .LVU4359
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12451              		.loc 1 568 25 view .LVU4360
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
GAS LISTING /tmp/ccLUVin9.s 			page 337


 12452              		.loc 1 568 25 is_stmt 0 view .LVU4361
 12453              	.LBE639:
 12454              	.LBB640:
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12455              		.loc 1 570 25 is_stmt 1 view .LVU4362
 571:sieve_extend.c ****     }
 12456              		.loc 1 571 13 view .LVU4363
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12457              		.loc 1 570 32 view .LVU4364
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12458              		.loc 1 570 25 view .LVU4365
 571:sieve_extend.c ****     }
 12459              		.loc 1 571 13 view .LVU4366
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12460              		.loc 1 570 32 view .LVU4367
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12461              		.loc 1 570 25 view .LVU4368
 571:sieve_extend.c ****     }
 12462              		.loc 1 571 13 view .LVU4369
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12463              		.loc 1 570 32 view .LVU4370
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12464              		.loc 1 570 25 view .LVU4371
 571:sieve_extend.c ****     }
 12465              		.loc 1 571 13 view .LVU4372
 12466              	# sieve_extend.c:571:             *(dst+j) |= (*(src+1)>>(64-shift));
 571:sieve_extend.c ****     }
 12467              		.loc 1 571 22 is_stmt 0 view .LVU4373
 12468 43fe C57E7F94 		vmovdqu	YMMWORD PTR 128[rdi+rax], ymm10	# MEM[base: dst_34(D), index: ivtmp.581_114, offset: 0B], 
 12468      07800000 
 12468      00
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12469              		.loc 1 570 32 is_stmt 1 view .LVU4374
 12470              	.LVL729:
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12471              		.loc 1 570 25 view .LVU4375
 12472              	.LBE640:
 566:sieve_extend.c ****     {
 12473              		.loc 1 566 24 view .LVU4376
 566:sieve_extend.c ****     {
 12474              		.loc 1 566 12 view .LVU4377
 12475              	.LBB641:
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12476              		.loc 1 568 25 view .LVU4378
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12477              		.loc 1 569 13 view .LVU4379
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12478              		.loc 1 568 32 view .LVU4380
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12479              		.loc 1 568 25 view .LVU4381
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12480              		.loc 1 569 13 view .LVU4382
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12481              		.loc 1 568 32 view .LVU4383
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12482              		.loc 1 568 25 view .LVU4384
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
GAS LISTING /tmp/ccLUVin9.s 			page 338


 12483              		.loc 1 569 13 view .LVU4385
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12484              		.loc 1 568 32 view .LVU4386
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12485              		.loc 1 568 25 view .LVU4387
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12486              		.loc 1 569 13 view .LVU4388
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12487              		.loc 1 568 32 view .LVU4389
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12488              		.loc 1 568 25 view .LVU4390
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12489              		.loc 1 568 25 is_stmt 0 view .LVU4391
 12490              	.LBE641:
 12491              	.LBB642:
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12492              		.loc 1 570 25 is_stmt 1 view .LVU4392
 571:sieve_extend.c ****     }
 12493              		.loc 1 571 13 view .LVU4393
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12494              		.loc 1 570 32 view .LVU4394
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12495              		.loc 1 570 25 view .LVU4395
 571:sieve_extend.c ****     }
 12496              		.loc 1 571 13 view .LVU4396
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12497              		.loc 1 570 32 view .LVU4397
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12498              		.loc 1 570 25 view .LVU4398
 571:sieve_extend.c ****     }
 12499              		.loc 1 571 13 view .LVU4399
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12500              		.loc 1 570 32 view .LVU4400
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12501              		.loc 1 570 25 view .LVU4401
 571:sieve_extend.c ****     }
 12502              		.loc 1 571 13 view .LVU4402
 12503              	# sieve_extend.c:571:             *(dst+j) |= (*(src+1)>>(64-shift));
 571:sieve_extend.c ****     }
 12504              		.loc 1 571 34 is_stmt 0 view .LVU4403
 12505 4407 C5EDD3E8 		vpsrlq	ymm5, ymm2, xmm0	# vect__57.568, vect__102.567, _4
 12506              	.LBE642:
 12507              	.LBB643:
 12508              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12509              		.loc 1 569 34 view .LVU4404
 12510 440b C515F3F1 		vpsllq	ymm14, ymm13, xmm1	# vect__104.572, tmp275, shift
 12511              	.LBE643:
 12512              	.LBB644:
 12513              	# sieve_extend.c:571:             *(dst+j) |= (*(src+1)>>(64-shift));
 571:sieve_extend.c ****     }
 12514              		.loc 1 571 34 view .LVU4405
 12515 440f C53DD3C8 		vpsrlq	ymm9, ymm8, xmm0	# vect__57.568, vect__102.567, _4
 12516              	.LBE644:
 12517              	.LBB645:
 12518              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
GAS LISTING /tmp/ccLUVin9.s 			page 339


 12519              		.loc 1 569 34 view .LVU4406
 12520 4413 C5DDF3F1 		vpsllq	ymm6, ymm4, xmm1	# vect__104.572, tmp276, shift
 12521 4417 C565F3D1 		vpsllq	ymm10, ymm3, xmm1	# vect__104.572, tmp277, shift
 12522              	.LBE645:
 12523              	.LBB646:
 12524              	# sieve_extend.c:571:             *(dst+j) |= (*(src+1)>>(64-shift));
 571:sieve_extend.c ****     }
 12525              		.loc 1 571 22 view .LVU4407
 12526 441b C4411DEB 		vpor	ymm15, ymm12, ymm14	# vect__58.573, vect__57.568, vect__104.572
 12526      FE
 12527 4420 C5D5EBFE 		vpor	ymm7, ymm5, ymm6	# vect__58.573, vect__57.568, vect__104.572
 12528 4424 C57E7FBC 		vmovdqu	YMMWORD PTR 160[rdi+rax], ymm15	# MEM[base: dst_34(D), index: ivtmp.581_114, offset: 0B], 
 12528      07A00000 
 12528      00
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12529              		.loc 1 570 32 is_stmt 1 view .LVU4408
 12530              	.LVL730:
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12531              		.loc 1 570 25 view .LVU4409
 12532              	.LBE646:
 566:sieve_extend.c ****     {
 12533              		.loc 1 566 24 view .LVU4410
 566:sieve_extend.c ****     {
 12534              		.loc 1 566 12 view .LVU4411
 12535              	.LBB647:
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12536              		.loc 1 568 25 view .LVU4412
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12537              		.loc 1 569 13 view .LVU4413
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12538              		.loc 1 568 32 view .LVU4414
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12539              		.loc 1 568 25 view .LVU4415
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12540              		.loc 1 569 13 view .LVU4416
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12541              		.loc 1 568 32 view .LVU4417
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12542              		.loc 1 568 25 view .LVU4418
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12543              		.loc 1 569 13 view .LVU4419
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12544              		.loc 1 568 32 view .LVU4420
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12545              		.loc 1 568 25 view .LVU4421
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12546              		.loc 1 569 13 view .LVU4422
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12547              		.loc 1 568 32 view .LVU4423
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12548              		.loc 1 568 25 view .LVU4424
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12549              		.loc 1 568 25 is_stmt 0 view .LVU4425
 12550              	.LBE647:
 12551              	.LBB648:
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12552              		.loc 1 570 25 is_stmt 1 view .LVU4426
GAS LISTING /tmp/ccLUVin9.s 			page 340


 571:sieve_extend.c ****     }
 12553              		.loc 1 571 13 view .LVU4427
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12554              		.loc 1 570 32 view .LVU4428
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12555              		.loc 1 570 25 view .LVU4429
 571:sieve_extend.c ****     }
 12556              		.loc 1 571 13 view .LVU4430
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12557              		.loc 1 570 32 view .LVU4431
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12558              		.loc 1 570 25 view .LVU4432
 571:sieve_extend.c ****     }
 12559              		.loc 1 571 13 view .LVU4433
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12560              		.loc 1 570 32 view .LVU4434
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12561              		.loc 1 570 25 view .LVU4435
 571:sieve_extend.c ****     }
 12562              		.loc 1 571 13 view .LVU4436
 12563              	# sieve_extend.c:571:             *(dst+j) |= (*(src+1)>>(64-shift));
 571:sieve_extend.c ****     }
 12564              		.loc 1 571 22 is_stmt 0 view .LVU4437
 12565 442d C44135EB 		vpor	ymm11, ymm9, ymm10	# vect__58.573, vect__57.568, vect__104.572
 12565      DA
 12566 4432 C5FE7FBC 		vmovdqu	YMMWORD PTR 192[rdi+rax], ymm7	# MEM[base: dst_34(D), index: ivtmp.581_114, offset: 0B], v
 12566      07C00000 
 12566      00
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12567              		.loc 1 570 32 is_stmt 1 view .LVU4438
 12568              	.LVL731:
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12569              		.loc 1 570 25 view .LVU4439
 12570              	.LBE648:
 566:sieve_extend.c ****     {
 12571              		.loc 1 566 24 view .LVU4440
 566:sieve_extend.c ****     {
 12572              		.loc 1 566 12 view .LVU4441
 12573              	.LBB649:
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12574              		.loc 1 568 25 view .LVU4442
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12575              		.loc 1 569 13 view .LVU4443
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12576              		.loc 1 568 32 view .LVU4444
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12577              		.loc 1 568 25 view .LVU4445
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12578              		.loc 1 569 13 view .LVU4446
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12579              		.loc 1 568 32 view .LVU4447
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12580              		.loc 1 568 25 view .LVU4448
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12581              		.loc 1 569 13 view .LVU4449
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12582              		.loc 1 568 32 view .LVU4450
GAS LISTING /tmp/ccLUVin9.s 			page 341


 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12583              		.loc 1 568 25 view .LVU4451
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12584              		.loc 1 569 13 view .LVU4452
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12585              		.loc 1 568 32 view .LVU4453
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12586              		.loc 1 568 25 view .LVU4454
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12587              		.loc 1 568 25 is_stmt 0 view .LVU4455
 12588              	.LBE649:
 12589              	.LBB650:
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12590              		.loc 1 570 25 is_stmt 1 view .LVU4456
 571:sieve_extend.c ****     }
 12591              		.loc 1 571 13 view .LVU4457
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12592              		.loc 1 570 32 view .LVU4458
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12593              		.loc 1 570 25 view .LVU4459
 571:sieve_extend.c ****     }
 12594              		.loc 1 571 13 view .LVU4460
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12595              		.loc 1 570 32 view .LVU4461
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12596              		.loc 1 570 25 view .LVU4462
 571:sieve_extend.c ****     }
 12597              		.loc 1 571 13 view .LVU4463
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12598              		.loc 1 570 32 view .LVU4464
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12599              		.loc 1 570 25 view .LVU4465
 571:sieve_extend.c ****     }
 12600              		.loc 1 571 13 view .LVU4466
 12601              	# sieve_extend.c:571:             *(dst+j) |= (*(src+1)>>(64-shift));
 571:sieve_extend.c ****     }
 12602              		.loc 1 571 22 is_stmt 0 view .LVU4467
 12603 443b C57E7F9C 		vmovdqu	YMMWORD PTR 224[rdi+rax], ymm11	# MEM[base: dst_34(D), index: ivtmp.581_114, offset: 0B], 
 12603      07E00000 
 12603      00
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12604              		.loc 1 570 32 is_stmt 1 view .LVU4468
 12605              	.LVL732:
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12606              		.loc 1 570 25 view .LVU4469
 12607              	.LBE650:
 566:sieve_extend.c ****     {
 12608              		.loc 1 566 24 view .LVU4470
 566:sieve_extend.c ****     {
 12609              		.loc 1 566 12 view .LVU4471
 12610 4444 48050001 		add	rax, 256	# ivtmp.581,
 12610      0000
 12611 444a 4539CA   		cmp	r10d, r9d	# tmp164, ivtmp.578
 12612 444d 0F87C7FE 		ja	.L965	#,
 12612      FFFF
 12613              	.L1005:
 12614 4453 4589C3   		mov	r11d, r8d	# _25, _25
GAS LISTING /tmp/ccLUVin9.s 			page 342


 12615 4456 428D0495 		lea	eax, 0[0+r10*4]	# i,
 12615      00000000 
 12616 445e 4983C301 		add	r11, 1	# tmp140,
 12617 4462 49C1E305 		sal	r11, 5	# _105,
 12618 4466 4C01DF   		add	rdi, r11	# dst, _105
 12619 4469 4C01DE   		add	rsi, r11	# src, _105
 12620 446c C5F877   		vzeroupper
 12621              	.LVL733:
 12622              	.L966:
 573:sieve_extend.c ****     {
 12623              		.loc 1 573 12 view .LVU4472
 12624              	# sieve_extend.c:573:     for (; i < size; ++i,++src,++dst)
 573:sieve_extend.c ****     {
 12625              		.loc 1 573 5 is_stmt 0 view .LVU4473
 12626 446f 39C2     		cmp	edx, eax	# size, i
 12627 4471 0F8E9400 		jle	.L1009	#,
 12627      0000
 12628              	# sieve_extend.c:575:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 575:sieve_extend.c ****     }    
 12629              		.loc 1 575 35 view .LVU4474
 12630 4477 4C8B5608 		mov	r10, QWORD PTR 8[rsi]	# _57, MEM[(const uint64_t *)src_30 + 8B]
 12631 447b 41B84000 		mov	r8d, 64	# tmp142,
 12631      0000
 12632              	# sieve_extend.c:575:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 575:sieve_extend.c ****     }    
 12633              		.loc 1 575 23 view .LVU4475
 12634 4481 C462F3F7 		shrx	r9, QWORD PTR [rsi], rcx	# tmp143, *src_30, shift
 12634      0E
 12635 4486 4129C8   		sub	r8d, ecx	# _97, shift
 575:sieve_extend.c ****     }    
 12636              		.loc 1 575 9 is_stmt 1 view .LVU4476
 12637              	# sieve_extend.c:575:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 575:sieve_extend.c ****     }    
 12638              		.loc 1 575 43 is_stmt 0 view .LVU4477
 12639 4489 C442B9F7 		shlx	r11, r10, r8	# tmp145, _57, _97
 12639      DA
 12640              	# sieve_extend.c:575:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 575:sieve_extend.c ****     }    
 12641              		.loc 1 575 32 view .LVU4478
 12642 448e 4D09D9   		or	r9, r11	# tmp146, tmp145
 12643 4491 4C890F   		mov	QWORD PTR [rdi], r9	# *dst_86, tmp146
 573:sieve_extend.c ****     {
 12644              		.loc 1 573 22 is_stmt 1 view .LVU4479
 12645              	.LVL734:
 573:sieve_extend.c ****     {
 12646              		.loc 1 573 12 view .LVU4480
 12647              	# sieve_extend.c:573:     for (; i < size; ++i,++src,++dst)
 573:sieve_extend.c ****     {
 12648              		.loc 1 573 22 is_stmt 0 view .LVU4481
 12649 4494 448D4801 		lea	r9d, 1[rax]	# i,
 12650              	.LVL735:
 12651              	# sieve_extend.c:573:     for (; i < size; ++i,++src,++dst)
 573:sieve_extend.c ****     {
 12652              		.loc 1 573 5 view .LVU4482
 12653 4498 4439CA   		cmp	edx, r9d	# size, i
 12654 449b 7E6D     		jle	.L1006	#,
 575:sieve_extend.c ****     }    
GAS LISTING /tmp/ccLUVin9.s 			page 343


 12655              		.loc 1 575 9 is_stmt 1 view .LVU4483
 12656              	# sieve_extend.c:575:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 575:sieve_extend.c ****     }    
 12657              		.loc 1 575 35 is_stmt 0 view .LVU4484
 12658 449d 4C8B4E10 		mov	r9, QWORD PTR 16[rsi]	# _109, MEM[(const uint64_t *)src_30 + 16B]
 12659              	.LVL736:
 12660              	# sieve_extend.c:575:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 575:sieve_extend.c ****     }    
 12661              		.loc 1 575 23 view .LVU4485
 12662 44a1 C442F3F7 		shrx	r10, r10, rcx	# tmp148, _57, shift
 12662      D2
 12663              	# sieve_extend.c:575:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 575:sieve_extend.c ****     }    
 12664              		.loc 1 575 43 view .LVU4486
 12665 44a6 C442B9F7 		shlx	r11, r9, r8	# tmp149, _109, _97
 12665      D9
 12666              	# sieve_extend.c:575:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 575:sieve_extend.c ****     }    
 12667              		.loc 1 575 32 view .LVU4487
 12668 44ab 4D09DA   		or	r10, r11	# tmp150, tmp149
 12669 44ae 4C895708 		mov	QWORD PTR 8[rdi], r10	# MEM[(uint64_t *)dst_86 + 8B], tmp150
 573:sieve_extend.c ****     {
 12670              		.loc 1 573 22 is_stmt 1 view .LVU4488
 12671              	.LVL737:
 573:sieve_extend.c ****     {
 12672              		.loc 1 573 12 view .LVU4489
 12673              	# sieve_extend.c:573:     for (; i < size; ++i,++src,++dst)
 573:sieve_extend.c ****     {
 12674              		.loc 1 573 22 is_stmt 0 view .LVU4490
 12675 44b2 448D5002 		lea	r10d, 2[rax]	# i,
 12676              	.LVL738:
 12677              	# sieve_extend.c:573:     for (; i < size; ++i,++src,++dst)
 573:sieve_extend.c ****     {
 12678              		.loc 1 573 5 view .LVU4491
 12679 44b6 4439D2   		cmp	edx, r10d	# size, i
 12680 44b9 7E4F     		jle	.L1006	#,
 575:sieve_extend.c ****     }    
 12681              		.loc 1 575 9 is_stmt 1 view .LVU4492
 12682              	# sieve_extend.c:575:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 575:sieve_extend.c ****     }    
 12683              		.loc 1 575 35 is_stmt 0 view .LVU4493
 12684 44bb 4C8B5618 		mov	r10, QWORD PTR 24[rsi]	# _54, MEM[(const uint64_t *)src_30 + 24B]
 12685              	.LVL739:
 12686              	# sieve_extend.c:575:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 575:sieve_extend.c ****     }    
 12687              		.loc 1 575 23 view .LVU4494
 12688 44bf C442F3F7 		shrx	r9, r9, rcx	# tmp152, _109, shift
 12688      C9
 12689              	# sieve_extend.c:575:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 575:sieve_extend.c ****     }    
 12690              		.loc 1 575 43 view .LVU4495
 12691 44c4 C442B9F7 		shlx	r11, r10, r8	# tmp153, _54, _97
 12691      DA
 12692              	# sieve_extend.c:575:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 575:sieve_extend.c ****     }    
 12693              		.loc 1 575 32 view .LVU4496
 12694 44c9 4D09D9   		or	r9, r11	# tmp154, tmp153
GAS LISTING /tmp/ccLUVin9.s 			page 344


 12695 44cc 4C894F10 		mov	QWORD PTR 16[rdi], r9	# MEM[(uint64_t *)dst_86 + 16B], tmp154
 573:sieve_extend.c ****     {
 12696              		.loc 1 573 22 is_stmt 1 view .LVU4497
 12697              	.LVL740:
 573:sieve_extend.c ****     {
 12698              		.loc 1 573 12 view .LVU4498
 12699              	# sieve_extend.c:573:     for (; i < size; ++i,++src,++dst)
 573:sieve_extend.c ****     {
 12700              		.loc 1 573 22 is_stmt 0 view .LVU4499
 12701 44d0 448D4803 		lea	r9d, 3[rax]	# i,
 12702              	.LVL741:
 12703              	# sieve_extend.c:573:     for (; i < size; ++i,++src,++dst)
 573:sieve_extend.c ****     {
 12704              		.loc 1 573 5 view .LVU4500
 12705 44d4 4439CA   		cmp	edx, r9d	# size, i
 12706 44d7 7E31     		jle	.L1006	#,
 575:sieve_extend.c ****     }    
 12707              		.loc 1 575 9 is_stmt 1 view .LVU4501
 12708              	# sieve_extend.c:575:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 575:sieve_extend.c ****     }    
 12709              		.loc 1 575 35 is_stmt 0 view .LVU4502
 12710 44d9 4C8B4E20 		mov	r9, QWORD PTR 32[rsi]	# _77, MEM[(const uint64_t *)src_30 + 32B]
 12711              	.LVL742:
 12712              	# sieve_extend.c:573:     for (; i < size; ++i,++src,++dst)
 573:sieve_extend.c ****     {
 12713              		.loc 1 573 22 view .LVU4503
 12714 44dd 83C004   		add	eax, 4	# i,
 12715              	.LVL743:
 12716              	# sieve_extend.c:575:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 575:sieve_extend.c ****     }    
 12717              		.loc 1 575 23 view .LVU4504
 12718 44e0 C442F3F7 		shrx	r10, r10, rcx	# tmp156, _54, shift
 12718      D2
 12719              	# sieve_extend.c:575:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 575:sieve_extend.c ****     }    
 12720              		.loc 1 575 43 view .LVU4505
 12721 44e5 C442B9F7 		shlx	r11, r9, r8	# tmp157, _77, _97
 12721      D9
 12722              	# sieve_extend.c:575:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 575:sieve_extend.c ****     }    
 12723              		.loc 1 575 32 view .LVU4506
 12724 44ea 4D09DA   		or	r10, r11	# tmp158, tmp157
 12725              	# sieve_extend.c:573:     for (; i < size; ++i,++src,++dst)
 573:sieve_extend.c ****     {
 12726              		.loc 1 573 5 view .LVU4507
 12727 44ed 39C2     		cmp	edx, eax	# size, i
 12728              	# sieve_extend.c:575:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 575:sieve_extend.c ****     }    
 12729              		.loc 1 575 32 view .LVU4508
 12730 44ef 4C895718 		mov	QWORD PTR 24[rdi], r10	# MEM[(uint64_t *)dst_86 + 24B], tmp158
 573:sieve_extend.c ****     {
 12731              		.loc 1 573 22 is_stmt 1 view .LVU4509
 12732              	.LVL744:
 573:sieve_extend.c ****     {
 12733              		.loc 1 573 12 view .LVU4510
 12734              	# sieve_extend.c:573:     for (; i < size; ++i,++src,++dst)
 573:sieve_extend.c ****     {
GAS LISTING /tmp/ccLUVin9.s 			page 345


 12735              		.loc 1 573 5 is_stmt 0 view .LVU4511
 12736 44f3 7E15     		jle	.L1006	#,
 575:sieve_extend.c ****     }    
 12737              		.loc 1 575 9 is_stmt 1 discriminator 2 view .LVU4512
 12738              	# sieve_extend.c:575:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 575:sieve_extend.c ****     }    
 12739              		.loc 1 575 43 is_stmt 0 discriminator 2 view .LVU4513
 12740 44f5 488B5628 		mov	rdx, QWORD PTR 40[rsi]	# MEM[(const uint64_t *)src_30 + 40B], MEM[(const uint64_t *)src_30 + 4
 12741              	.LVL745:
 12742              	# sieve_extend.c:575:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 575:sieve_extend.c ****     }    
 12743              		.loc 1 575 23 discriminator 2 view .LVU4514
 12744 44f9 C4C2F3F7 		shrx	rcx, r9, rcx	# tmp162, _77, shift
 12744      C9
 12745              	.LVL746:
 12746              	# sieve_extend.c:575:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 575:sieve_extend.c ****     }    
 12747              		.loc 1 575 43 discriminator 2 view .LVU4515
 12748 44fe C4E2B9F7 		shlx	rsi, rdx, r8	# tmp160, MEM[(const uint64_t *)src_30 + 40B], _97
 12748      F2
 12749              	.LVL747:
 12750              	# sieve_extend.c:575:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 575:sieve_extend.c ****     }    
 12751              		.loc 1 575 32 discriminator 2 view .LVU4516
 12752 4503 4809F1   		or	rcx, rsi	# tmp163, tmp160
 12753 4506 48894F20 		mov	QWORD PTR 32[rdi], rcx	# MEM[(uint64_t *)dst_86 + 32B], tmp163
 573:sieve_extend.c ****     {
 12754              		.loc 1 573 22 is_stmt 1 discriminator 2 view .LVU4517
 12755              	.LVL748:
 573:sieve_extend.c ****     {
 12756              		.loc 1 573 12 discriminator 2 view .LVU4518
 12757              	.L1006:
 12758              	# sieve_extend.c:577: }
 577:sieve_extend.c **** 
 12759              		.loc 1 577 1 is_stmt 0 view .LVU4519
 12760 450a C3       		ret	
 12761              	.LVL749:
 12762              	.L1009:
 577:sieve_extend.c **** 
 12763              		.loc 1 577 1 view .LVU4520
 12764 450b C3       		ret	
 12765              	.LVL750:
 12766              	.L1008:
 12767              	.LBB651:
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12768              		.loc 1 568 25 is_stmt 1 view .LVU4521
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12769              		.loc 1 569 13 view .LVU4522
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12770              		.loc 1 568 32 view .LVU4523
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12771              		.loc 1 568 25 view .LVU4524
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12772              		.loc 1 569 13 view .LVU4525
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12773              		.loc 1 568 32 view .LVU4526
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
GAS LISTING /tmp/ccLUVin9.s 			page 346


 12774              		.loc 1 568 25 view .LVU4527
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12775              		.loc 1 569 13 view .LVU4528
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12776              		.loc 1 568 32 view .LVU4529
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12777              		.loc 1 568 25 view .LVU4530
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12778              		.loc 1 569 13 view .LVU4531
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12779              		.loc 1 568 32 view .LVU4532
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12780              		.loc 1 568 25 view .LVU4533
 568:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12781              		.loc 1 568 25 is_stmt 0 view .LVU4534
 12782              	.LBE651:
 12783              	.LBB652:
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12784              		.loc 1 570 25 is_stmt 1 view .LVU4535
 571:sieve_extend.c ****     }
 12785              		.loc 1 571 13 view .LVU4536
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12786              		.loc 1 570 32 view .LVU4537
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12787              		.loc 1 570 25 view .LVU4538
 571:sieve_extend.c ****     }
 12788              		.loc 1 571 13 view .LVU4539
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12789              		.loc 1 570 32 view .LVU4540
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12790              		.loc 1 570 25 view .LVU4541
 571:sieve_extend.c ****     }
 12791              		.loc 1 571 13 view .LVU4542
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12792              		.loc 1 570 32 view .LVU4543
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12793              		.loc 1 570 25 view .LVU4544
 571:sieve_extend.c ****     }
 12794              		.loc 1 571 13 view .LVU4545
 12795              	.LBE652:
 12796              	.LBB653:
 12797              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12798              		.loc 1 569 25 is_stmt 0 view .LVU4546
 12799 450c C4E3FD00 		vpermq	ymm7, YMMWORD PTR 32[rsi], 85	# vect__102.567, MEM[base: src_35(D), index: ivtmp.581_114, o
 12799      7E2055
 12800 4513 41B90200 		mov	r9d, 2	# ivtmp.578,
 12800      0000
 12801              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12802              		.loc 1 569 34 view .LVU4547
 12803 4519 C57E6F4E 		vmovdqu	ymm9, YMMWORD PTR 32[rsi]	# tmp278, MEM[base: src_35(D), index: ivtmp.581_114, offset: 0B]
 12803      20
 12804 451e B8400000 		mov	eax, 64	# ivtmp.581,
 12804      00
 12805              	.LBE653:
 12806              	.LBB654:
GAS LISTING /tmp/ccLUVin9.s 			page 347


 12807              	# sieve_extend.c:571:             *(dst+j) |= (*(src+1)>>(64-shift));
 571:sieve_extend.c ****     }
 12808              		.loc 1 571 34 view .LVU4548
 12809 4523 C545D3C0 		vpsrlq	ymm8, ymm7, xmm0	# vect__57.568, vect__102.567, _4
 12810              	.LBE654:
 12811              	.LBB655:
 12812              	# sieve_extend.c:569:             *(dst+j) = (*(src+j))<<shift;
 569:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12813              		.loc 1 569 34 view .LVU4549
 12814 4527 C535F3D1 		vpsllq	ymm10, ymm9, xmm1	# vect__104.572, tmp278, shift
 12815              	.LBE655:
 12816              	.LBB656:
 12817              	# sieve_extend.c:571:             *(dst+j) |= (*(src+1)>>(64-shift));
 571:sieve_extend.c ****     }
 12818              		.loc 1 571 22 view .LVU4550
 12819 452b C4413DEB 		vpor	ymm11, ymm8, ymm10	# vect__58.573, vect__57.568, vect__104.572
 12819      DA
 12820 4530 C57E7F5F 		vmovdqu	YMMWORD PTR 32[rdi], ymm11	# MEM[base: dst_34(D), index: ivtmp.581_114, offset: 0B], vect_
 12820      20
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12821              		.loc 1 570 32 is_stmt 1 view .LVU4551
 12822              	.LVL751:
 570:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12823              		.loc 1 570 25 view .LVU4552
 12824              	.LBE656:
 566:sieve_extend.c ****     {
 12825              		.loc 1 566 24 view .LVU4553
 566:sieve_extend.c ****     {
 12826              		.loc 1 566 12 view .LVU4554
 12827 4535 E9F6FCFF 		jmp	.L997	#
 12827      FF
 12828              	.LVL752:
 12829              	.L1007:
 12830              	# sieve_extend.c:564:     int i = 0;
 564:sieve_extend.c ****     // MSVC: use steps of 2 for SSE, 4 for AVX2, 8 for AVX512
 12831              		.loc 1 564 9 is_stmt 0 view .LVU4555
 12832 453a 31C0     		xor	eax, eax	# i
 12833 453c E92EFFFF 		jmp	.L966	#
 12833      FF
 12834              		.cfi_endproc
 12835              	.LFE70:
 12837              		.section	.rodata.str1.8,"aMS",@progbits,1
 12838              		.align 8
 12839              	.LC9:
 12840 0000 52657375 		.string	"Result: Sievesize %ju is expected to have %ju primes. algorithm produced %ju primes\n"
 12840      6C743A20 
 12840      53696576 
 12840      6573697A 
 12840      6520256A 
 12841 0055 000000   		.align 8
 12842              	.LC10:
 12843 0058 4E6F2076 		.string	"No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produced %j
 12843      616C6964 
 12843      20726573 
 12843      756C742E 
 12843      20536965 
 12844              		.section	.rodata.str1.1
GAS LISTING /tmp/ccLUVin9.s 			page 348


 12845              	.LC11:
 12846 0023 44656570 		.string	"DeepAnalyzing"
 12846      416E616C 
 12846      797A696E 
 12846      6700
 12847              		.section	.rodata.str1.8
 12848 00bb 00000000 		.align 8
 12848      00
 12849              	.LC12:
 12850 00c0 4E756D62 		.string	"Number %ju (%ju) was marked prime, but %ju * %ju = %ju\n"
 12850      65722025 
 12850      6A752028 
 12850      256A7529 
 12850      20776173 
 12851              		.align 8
 12852              	.LC13:
 12853 00f8 4E756D62 		.string	"Number %ju (%ju) was marked non-prime, but no factors found. So it is prime\n"
 12853      65722025 
 12853      6A752028 
 12853      256A7529 
 12853      20776173 
 12854              		.text
 12855 4541 66662E0F 		.p2align 4
 12855      1F840000 
 12855      0000000F 
 12855      1F4000
 12856              		.globl	validatePrimeCount
 12858              	validatePrimeCount:
 12859              	.LVL753:
 12860              	.LFB84:
 996:sieve_extend.c **** 
 12861              		.loc 1 996 72 is_stmt 1 view -0
 12862              		.cfi_startproc
 996:sieve_extend.c **** 
 12863              		.loc 1 996 72 is_stmt 0 view .LVU4557
 12864 4550 F30F1EFA 		endbr64	
 998:sieve_extend.c ****     counter_t valid_primes = 0;
 12865              		.loc 1 998 5 is_stmt 1 view .LVU4558
 12866              	# sieve_extend.c:996: int validatePrimeCount(struct sieve_t *sieve, int option_verboselevel) {
 996:sieve_extend.c **** 
 12867              		.loc 1 996 72 is_stmt 0 view .LVU4559
 12868 4554 4157     		push	r15	#
 12869              		.cfi_def_cfa_offset 16
 12870              		.cfi_offset 15, -16
 12871 4556 4156     		push	r14	#
 12872              		.cfi_def_cfa_offset 24
 12873              		.cfi_offset 14, -24
 12874 4558 4155     		push	r13	#
 12875              		.cfi_def_cfa_offset 32
 12876              		.cfi_offset 13, -32
 12877 455a 4154     		push	r12	#
 12878              		.cfi_def_cfa_offset 40
 12879              		.cfi_offset 12, -40
 12880 455c 55       		push	rbp	#
 12881              		.cfi_def_cfa_offset 48
 12882              		.cfi_offset 6, -48
 12883 455d 4889FD   		mov	rbp, rdi	# sieve, tmp307
GAS LISTING /tmp/ccLUVin9.s 			page 349


 12884 4560 53       		push	rbx	#
 12885              		.cfi_def_cfa_offset 56
 12886              		.cfi_offset 3, -56
 12887 4561 89F3     		mov	ebx, esi	# option_verboselevel, tmp308
 12888 4563 488D6424 		lea	rsp, -56[rsp]	#,
 12888      C8
 12889              		.cfi_def_cfa_offset 112
 12890              	# sieve_extend.c:998:     counter_t primecount = count_primes(sieve);
 998:sieve_extend.c ****     counter_t valid_primes = 0;
 12891              		.loc 1 998 28 view .LVU4560
 12892 4568 488B17   		mov	rdx, QWORD PTR [rdi]	# _24, MEM[(uint64_t * *)sieve_18(D)]
 12893 456b 488B7F08 		mov	rdi, QWORD PTR 8[rdi]	# _25, MEM[(long unsigned int *)sieve_18(D) + 8B]
 12894              	.LVL754:
 12895              	.LBB678:
 12896              	.LBI678:
 967:sieve_extend.c ****     counter_t primeCount = 1;
 12897              		.loc 1 967 18 is_stmt 1 view .LVU4561
 12898              	.LBB679:
 12899              	.LBB680:
 969:sieve_extend.c ****     return primeCount;
 12900              		.loc 1 969 30 view .LVU4562
 12901 456f 4C8B4D10 		mov	r9, QWORD PTR 16[rbp]	# pretmp_201, sieve_18(D)->size
 12902              	# sieve_extend.c:969:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 969:sieve_extend.c ****     return primeCount;
 12903              		.loc 1 969 5 is_stmt 0 view .LVU4563
 12904 4573 4883FF01 		cmp	rdi, 1	# _25,
 12905 4577 0F860B05 		jbe	.L1011	#,
 12905      0000
 12906              	# sieve_extend.c:969:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 969:sieve_extend.c ****     return primeCount;
 12907              		.loc 1 969 20 view .LVU4564
 12908 457d B8010000 		mov	eax, 1	# factor,
 12908      00
 12909              	.LBE680:
 12910              	# sieve_extend.c:968:     counter_t primeCount = 1;
 968:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitarray, factor+
 12911              		.loc 1 968 15 view .LVU4565
 12912 4582 41B80100 		mov	r8d, 1	# primeCount,
 12912      0000
 12913              	.LVL755:
 12914 4588 0F1F8400 		.p2align 4
 12914      00000000 
 12915              		.p2align 3
 12916              	.L1014:
 12917              	.LBB683:
 969:sieve_extend.c ****     return primeCount;
 12918              		.loc 1 969 104 is_stmt 1 view .LVU4566
 12919              	# sieve_extend.c:969:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 969:sieve_extend.c ****     return primeCount;
 12920              		.loc 1 969 114 is_stmt 0 view .LVU4567
 12921 4590 4983C001 		add	r8, 1	# primeCount,
 12922              	.LVL756:
 969:sieve_extend.c ****     return primeCount;
 12923              		.loc 1 969 52 is_stmt 1 view .LVU4568
 12924              	# sieve_extend.c:969:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 969:sieve_extend.c ****     return primeCount;
 12925              		.loc 1 969 61 is_stmt 0 view .LVU4569
GAS LISTING /tmp/ccLUVin9.s 			page 350


 12926 4594 4883C001 		add	rax, 1	# factor,
 12927              	.LVL757:
 12928              	.L1158:
 12929              	.LBB681:
 12930              	.LBI681:
 121:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 12931              		.loc 1 121 25 is_stmt 1 view .LVU4570
 12932              	.LBB682:
 122:sieve_extend.c ****     return index;
 12933              		.loc 1 122 5 view .LVU4571
 122:sieve_extend.c ****     return index;
 12934              		.loc 1 122 11 view .LVU4572
 12935              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12936              		.loc 1 122 21 is_stmt 0 view .LVU4573
 12937 4598 4889C1   		mov	rcx, rax	# tmp162, factor
 12938 459b 48C1E906 		shr	rcx, 6	# tmp162,
 12939              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12940              		.loc 1 122 12 view .LVU4574
 12941 459f 4C8B1CCA 		mov	r11, QWORD PTR [rdx+rcx*8]	# *_106,* _24
 12942              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12943              		.loc 1 122 11 view .LVU4575
 12944 45a3 490FA3C3 		bt	r11, rax	# *_106, factor
 12945 45a7 0F83A300 		jnc	.L1012	#,
 12945      0000
 122:sieve_extend.c ****     return index;
 12946              		.loc 1 122 58 is_stmt 1 view .LVU4576
 12947              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12948              		.loc 1 122 63 is_stmt 0 view .LVU4577
 12949 45ad 4C8D6801 		lea	r13, 1[rax]	# tmp235,
 12950              	.LVL758:
 12951              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12952              		.loc 1 122 21 view .LVU4578
 12953 45b1 4D89EE   		mov	r14, r13	# tmp167, factor
 12954              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12955              		.loc 1 122 63 view .LVU4579
 12956 45b4 4C89E8   		mov	rax, r13	# factor, tmp235
 122:sieve_extend.c ****     return index;
 12957              		.loc 1 122 11 is_stmt 1 view .LVU4580
 12958              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12959              		.loc 1 122 21 is_stmt 0 view .LVU4581
 12960 45b7 49C1EE06 		shr	r14, 6	# tmp167,
 12961              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12962              		.loc 1 122 12 view .LVU4582
 12963 45bb 4E8B3CF2 		mov	r15, QWORD PTR [rdx+r14*8]	# *_35, *_35
 12964              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12965              		.loc 1 122 11 view .LVU4583
 12966 45bf 4D0FA3EF 		bt	r15, r13	# *_35, factor
 12967 45c3 0F838700 		jnc	.L1012	#,
GAS LISTING /tmp/ccLUVin9.s 			page 351


 12967      0000
 122:sieve_extend.c ****     return index;
 12968              		.loc 1 122 58 is_stmt 1 view .LVU4584
 12969              	.LVL759:
 12970              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12971              		.loc 1 122 63 is_stmt 0 view .LVU4585
 12972 45c9 4883C001 		add	rax, 1	# factor,
 12973              	.LVL760:
 122:sieve_extend.c ****     return index;
 12974              		.loc 1 122 11 is_stmt 1 view .LVU4586
 12975              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12976              		.loc 1 122 21 is_stmt 0 view .LVU4587
 12977 45cd 4989C4   		mov	r12, rax	# tmp279, factor
 12978 45d0 49C1EC06 		shr	r12, 6	# tmp279,
 12979              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12980              		.loc 1 122 12 view .LVU4588
 12981 45d4 4A8B34E2 		mov	rsi, QWORD PTR [rdx+r12*8]	# *_35, *_35
 12982              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12983              		.loc 1 122 11 view .LVU4589
 12984 45d8 480FA3C6 		bt	rsi, rax	# *_35, factor
 12985 45dc 7372     		jnc	.L1012	#,
 122:sieve_extend.c ****     return index;
 12986              		.loc 1 122 58 is_stmt 1 view .LVU4590
 12987              	.LVL761:
 12988              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12989              		.loc 1 122 63 is_stmt 0 view .LVU4591
 12990 45de 498D4502 		lea	rax, 2[r13]	# factor,
 12991              	.LVL762:
 122:sieve_extend.c ****     return index;
 12992              		.loc 1 122 11 is_stmt 1 view .LVU4592
 12993              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12994              		.loc 1 122 21 is_stmt 0 view .LVU4593
 12995 45e2 4989C2   		mov	r10, rax	# tmp283, factor
 12996 45e5 49C1EA06 		shr	r10, 6	# tmp283,
 12997              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12998              		.loc 1 122 12 view .LVU4594
 12999 45e9 4A8B0CD2 		mov	rcx, QWORD PTR [rdx+r10*8]	# *_35, *_35
 13000              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13001              		.loc 1 122 11 view .LVU4595
 13002 45ed 480FA3C1 		bt	rcx, rax	# *_35, factor
 13003 45f1 735D     		jnc	.L1012	#,
 122:sieve_extend.c ****     return index;
 13004              		.loc 1 122 58 is_stmt 1 view .LVU4596
 13005              	.LVL763:
 13006              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13007              		.loc 1 122 63 is_stmt 0 view .LVU4597
 13008 45f3 498D4503 		lea	rax, 3[r13]	# factor,
 13009              	.LVL764:
GAS LISTING /tmp/ccLUVin9.s 			page 352


 122:sieve_extend.c ****     return index;
 13010              		.loc 1 122 11 is_stmt 1 view .LVU4598
 13011              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13012              		.loc 1 122 21 is_stmt 0 view .LVU4599
 13013 45f7 4989C3   		mov	r11, rax	# tmp287, factor
 13014 45fa 49C1EB06 		shr	r11, 6	# tmp287,
 13015              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13016              		.loc 1 122 12 view .LVU4600
 13017 45fe 4E8B34DA 		mov	r14, QWORD PTR [rdx+r11*8]	# *_35, *_35
 13018              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13019              		.loc 1 122 11 view .LVU4601
 13020 4602 490FA3C6 		bt	r14, rax	# *_35, factor
 13021 4606 7348     		jnc	.L1012	#,
 122:sieve_extend.c ****     return index;
 13022              		.loc 1 122 58 is_stmt 1 view .LVU4602
 13023              	.LVL765:
 13024              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13025              		.loc 1 122 63 is_stmt 0 view .LVU4603
 13026 4608 498D4504 		lea	rax, 4[r13]	# factor,
 13027              	.LVL766:
 122:sieve_extend.c ****     return index;
 13028              		.loc 1 122 11 is_stmt 1 view .LVU4604
 13029              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13030              		.loc 1 122 21 is_stmt 0 view .LVU4605
 13031 460c 4989C7   		mov	r15, rax	# tmp291, factor
 13032 460f 49C1EF06 		shr	r15, 6	# tmp291,
 13033              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13034              		.loc 1 122 12 view .LVU4606
 13035 4613 4E8B24FA 		mov	r12, QWORD PTR [rdx+r15*8]	# *_35, *_35
 13036              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13037              		.loc 1 122 11 view .LVU4607
 13038 4617 490FA3C4 		bt	r12, rax	# *_35, factor
 13039 461b 7333     		jnc	.L1012	#,
 122:sieve_extend.c ****     return index;
 13040              		.loc 1 122 58 is_stmt 1 view .LVU4608
 13041              	.LVL767:
 13042              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13043              		.loc 1 122 63 is_stmt 0 view .LVU4609
 13044 461d 498D4505 		lea	rax, 5[r13]	# factor,
 13045              	.LVL768:
 122:sieve_extend.c ****     return index;
 13046              		.loc 1 122 11 is_stmt 1 view .LVU4610
 13047              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13048              		.loc 1 122 21 is_stmt 0 view .LVU4611
 13049 4621 4889C6   		mov	rsi, rax	# tmp295, factor
 13050 4624 48C1EE06 		shr	rsi, 6	# tmp295,
 13051              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
GAS LISTING /tmp/ccLUVin9.s 			page 353


 13052              		.loc 1 122 12 view .LVU4612
 13053 4628 4C8B14F2 		mov	r10, QWORD PTR [rdx+rsi*8]	# *_35, *_35
 13054              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13055              		.loc 1 122 11 view .LVU4613
 13056 462c 490FA3C2 		bt	r10, rax	# *_35, factor
 13057 4630 731E     		jnc	.L1012	#,
 122:sieve_extend.c ****     return index;
 13058              		.loc 1 122 58 is_stmt 1 view .LVU4614
 13059              	.LVL769:
 13060              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13061              		.loc 1 122 63 is_stmt 0 view .LVU4615
 13062 4632 498D4506 		lea	rax, 6[r13]	# factor,
 13063              	.LVL770:
 122:sieve_extend.c ****     return index;
 13064              		.loc 1 122 11 is_stmt 1 view .LVU4616
 13065              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13066              		.loc 1 122 21 is_stmt 0 view .LVU4617
 13067 4636 4889C1   		mov	rcx, rax	# tmp299, factor
 13068 4639 48C1E906 		shr	rcx, 6	# tmp299,
 13069              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13070              		.loc 1 122 12 view .LVU4618
 13071 463d 4C8B1CCA 		mov	r11, QWORD PTR [rdx+rcx*8]	# *_35, *_35
 13072              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13073              		.loc 1 122 11 view .LVU4619
 13074 4641 490FA3C3 		bt	r11, rax	# *_35, factor
 13075 4645 7309     		jnc	.L1012	#,
 122:sieve_extend.c ****     return index;
 13076              		.loc 1 122 58 is_stmt 1 view .LVU4620
 13077              	.LVL771:
 13078              	# sieve_extend.c:122:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 13079              		.loc 1 122 63 is_stmt 0 view .LVU4621
 13080 4647 498D4507 		lea	rax, 7[r13]	# factor,
 13081              	.LVL772:
 122:sieve_extend.c ****     return index;
 13082              		.loc 1 122 11 is_stmt 1 view .LVU4622
 13083 464b E948FFFF 		jmp	.L1158	#
 13083      FF
 13084              		.p2align 4,,7
 13085              		.p2align 3
 13086              	.L1012:
 13087              	.LVL773:
 122:sieve_extend.c ****     return index;
 13088              		.loc 1 122 11 is_stmt 0 view .LVU4623
 13089              	.LBE682:
 13090              	.LBE681:
 969:sieve_extend.c ****     return primeCount;
 13091              		.loc 1 969 30 is_stmt 1 view .LVU4624
 13092              	# sieve_extend.c:969:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 969:sieve_extend.c ****     return primeCount;
 13093              		.loc 1 969 5 is_stmt 0 view .LVU4625
 13094 4650 4839C7   		cmp	rdi, rax	# _25, factor
GAS LISTING /tmp/ccLUVin9.s 			page 354


 13095 4653 0F8737FF 		ja	.L1014	#,
 13095      FFFF
 969:sieve_extend.c ****     return primeCount;
 13096              		.loc 1 969 5 view .LVU4626
 13097              	.LBE683:
 970:sieve_extend.c **** }
 13098              		.loc 1 970 5 is_stmt 1 view .LVU4627
 13099              	.LVL774:
 970:sieve_extend.c **** }
 13100              		.loc 1 970 5 is_stmt 0 view .LVU4628
 13101              	.LBE679:
 13102              	.LBE678:
 999:sieve_extend.c ****     switch(sieve->size) {
 13103              		.loc 1 999 5 is_stmt 1 view .LVU4629
1000:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 13104              		.loc 1 1000 5 view .LVU4630
 13105 4659 83FB03   		cmp	ebx, 3	# option_verboselevel,
 13106 465c 0F9FC2   		setg	dl	#, tmp172
 13107 465f 4981F9A0 		cmp	r9, 100000	# pretmp_201,
 13107      860100
 13108 4666 0F843406 		je	.L1015	#,
 13108      0000
 13109 466c 0F86D402 		jbe	.L1159	#,
 13109      0000
 13110 4672 4981F900 		cmp	r9, 100000000	# pretmp_201,
 13110      E1F505
 13111 4679 0F84E005 		je	.L1023	#,
 13111      0000
 13112 467f 90       		.p2align 4,,4
 13113 4680 0F863A03 		jbe	.L1160	#,
 13113      0000
 13114 4686 4981F900 		cmp	r9, 1000000000	# pretmp_201,
 13114      CA9A3B
 13115 468d 0F85F105 		jne	.L1021	#,
 13115      0000
 13116 4693 4981F82E 		cmp	r8, 50847534	# primeCount,
 13116      DF0703
 13117              	# sieve_extend.c:1009:         case 1000000000:    valid_primes = 50847534; break;
1009:sieve_extend.c ****         default:            valid_primes= 0;
 13118              		.loc 1 1009 42 is_stmt 0 view .LVU4631
 13119 469a B92EDF07 		mov	ecx, 50847534	# valid_primes,
 13119      03
 13120 469f 410F94C5 		sete	r13b	#, tmp189
 13121 46a3 4421EA   		and	edx, r13d	# _253, tmp189
 13122 46a6 4981F82E 		cmp	r8, 50847534	# primeCount,
 13122      DF0703
 13123 46ad 450FB6ED 		movzx	r13d, r13b	# <retval>, tmp189
 13124 46b1 410F95C4 		setne	r12b	#, _135
1009:sieve_extend.c ****         default:            valid_primes= 0;
 13125              		.loc 1 1009 29 is_stmt 1 view .LVU4632
 13126              	.LVL775:
1009:sieve_extend.c ****         default:            valid_primes= 0;
 13127              		.loc 1 1009 54 view .LVU4633
 13128 46b5 66662E0F 		.p2align 4
 13128      1F840000 
 13128      000000
 13129              		.p2align 3
GAS LISTING /tmp/ccLUVin9.s 			page 355


 13130              	.L1028:
1013:sieve_extend.c ****     if (valid  && option_verboselevel >= 4) printf("Result: Sievesize %ju is expected to have %ju p
 13131              		.loc 1 1013 5 view .LVU4634
1014:sieve_extend.c ****     if (!valid && option_verboselevel >= 1) {
 13132              		.loc 1 1014 5 view .LVU4635
 13133              	# sieve_extend.c:1014:     if (valid  && option_verboselevel >= 4) printf("Result: Sievesize %ju is
1014:sieve_extend.c ****     if (!valid && option_verboselevel >= 1) {
 13134              		.loc 1 1014 8 is_stmt 0 view .LVU4636
 13135 46c0 84D2     		test	dl, dl	# _253
 13136 46c2 0F841704 		je	.L1029	#,
 13136      0000
1014:sieve_extend.c ****     if (!valid && option_verboselevel >= 1) {
 13137              		.loc 1 1014 45 is_stmt 1 discriminator 1 view .LVU4637
 13138              	.LVL776:
 13139              	.LBB685:
 13140              	.LBI685:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 13141              		.loc 3 105 1 discriminator 1 view .LVU4638
 13142              	.LBB686:
 13143              		.loc 3 107 3 discriminator 1 view .LVU4639
 13144              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 13145              		.loc 3 107 10 is_stmt 0 discriminator 1 view .LVU4640
 13146 46c8 4C89CA   		mov	rdx, r9	#, pretmp_201
 13147 46cb 488D3500 		lea	rsi, .LC9[rip]	#,
 13147      000000
 13148 46d2 BF010000 		mov	edi, 1	#,
 13148      00
 13149 46d7 31C0     		xor	eax, eax	#
 13150 46d9 E8000000 		call	__printf_chk@PLT	#
 13150      00
 13151              	.LVL777:
 13152              		.loc 3 107 10 discriminator 1 view .LVU4641
 13153              	.LBE686:
 13154              	.LBE685:
1015:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 13155              		.loc 1 1015 5 is_stmt 1 discriminator 1 view .LVU4642
 13156              	.L1030:
1019:sieve_extend.c ****     return (valid);
 13157              		.loc 1 1019 5 view .LVU4643
 13158              	# sieve_extend.c:1019:     if (!valid && option_verboselevel >= 2) deepAnalyzePrimes(sieve);
1019:sieve_extend.c ****     return (valid);
 13159              		.loc 1 1019 8 is_stmt 0 view .LVU4644
 13160 46de 83FB01   		cmp	ebx, 1	# option_verboselevel,
 13161 46e1 0F8E4C02 		jle	.L1010	#,
 13161      0000
 13162 46e7 4584E4   		test	r12b, r12b	# _135
 13163 46ea 0F844302 		je	.L1010	#,
 13163      0000
 13164              	.L1032:
1019:sieve_extend.c ****     return (valid);
 13165              		.loc 1 1019 45 is_stmt 1 discriminator 1 view .LVU4645
 13166              	.LBB687:
 13167              	.LBI687:
 973:sieve_extend.c ****     printf("DeepAnalyzing\n");
 13168              		.loc 1 973 13 discriminator 1 view .LVU4646
 13169              	.LVL778:
 13170              	.LBB688:
GAS LISTING /tmp/ccLUVin9.s 			page 356


 974:sieve_extend.c ****     counter_t warn_prime = 0;
 13171              		.loc 1 974 5 discriminator 1 view .LVU4647
 13172              	.LBB689:
 13173              	.LBI689:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 13174              		.loc 3 105 1 discriminator 1 view .LVU4648
 13175              	.LBB690:
 13176              		.loc 3 107 3 discriminator 1 view .LVU4649
 13177              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 13178              		.loc 3 107 10 is_stmt 0 discriminator 1 view .LVU4650
 13179 46f0 488D3D00 		lea	rdi, .LC11[rip]	#,
 13179      000000
 13180 46f7 E8000000 		call	puts@PLT	#
 13180      00
 13181              	.LVL779:
 13182              		.loc 3 107 10 discriminator 1 view .LVU4651
 13183              	.LBE690:
 13184              	.LBE689:
 975:sieve_extend.c ****     counter_t warn_nonprime = 0;
 13185              		.loc 1 975 5 is_stmt 1 discriminator 1 view .LVU4652
 976:sieve_extend.c ****     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 13186              		.loc 1 976 5 discriminator 1 view .LVU4653
 977:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 13187              		.loc 1 977 5 discriminator 1 view .LVU4654
 13188              	.LBB691:
 977:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 13189              		.loc 1 977 10 discriminator 1 view .LVU4655
 977:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 13190              		.loc 1 977 31 discriminator 1 view .LVU4656
 13191              	# sieve_extend.c:977:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 977:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 13192              		.loc 1 977 44 is_stmt 0 discriminator 1 view .LVU4657
 13193 46fc 488B7D08 		mov	rdi, QWORD PTR 8[rbp]	# _137, MEM[(uint64_t *)sieve_18(D) + 8B]
 13194              	# sieve_extend.c:977:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 977:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 13195              		.loc 1 977 5 discriminator 1 view .LVU4658
 13196 4700 4883FF01 		cmp	rdi, 1	# _137,
 13197 4704 0F862902 		jbe	.L1010	#,
 13197      0000
 13198              	.LBB692:
 13199              	.LBB693:
 13200              	.LBB694:
 13201              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 13202              		.loc 3 107 10 view .LVU4659
 13203 470a 44896C24 		mov	DWORD PTR 36[rsp], r13d	# %sfp, <retval>
 13203      24
 13204              	.LBE694:
 13205              	.LBE693:
 13206              	.LBE692:
 13207              	# sieve_extend.c:977:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 977:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 13208              		.loc 1 977 5 view .LVU4660
 13209 470f 41BE0200 		mov	r14d, 2	# ivtmp.614,
 13209      0000
 13210 4715 41BC0300 		mov	r12d, 3	# ivtmp.612,
 13210      0000
 13211              	.LBE691:
GAS LISTING /tmp/ccLUVin9.s 			page 357


 13212              	# sieve_extend.c:975:     counter_t warn_prime = 0;
 975:sieve_extend.c ****     counter_t warn_nonprime = 0;
 13213              		.loc 1 975 15 view .LVU4661
 13214 471b 4531C0   		xor	r8d, r8d	# warn_prime
 13215              	# sieve_extend.c:976:     counter_t warn_nonprime = 0;
 976:sieve_extend.c ****     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 13216              		.loc 1 976 15 view .LVU4662
 13217 471e 48C74424 		mov	QWORD PTR 24[rsp], 0	# %sfp,
 13217      18000000 
 13217      00
 13218              	.LBB713:
 13219              	# sieve_extend.c:977:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 977:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 13220              		.loc 1 977 20 view .LVU4663
 13221 4727 41BF0100 		mov	r15d, 1	# prime,
 13221      0000
 13222              	.LBB701:
 13223              	.LBB698:
 13224              	.LBB695:
 13225              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 13226              		.loc 3 107 10 view .LVU4664
 13227 472d 4989ED   		mov	r13, rbp	# sieve, sieve
 13228              	.LVL780:
 13229              		.p2align 4
 13230              		.p2align 3
 13231              	.L1041:
 13232              		.loc 3 107 10 view .LVU4665
 13233              	.LBE695:
 13234              	.LBE698:
 13235              	.LBE701:
 978:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 13236              		.loc 1 978 9 is_stmt 1 view .LVU4666
 13237              	# sieve_extend.c:978:         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { 
 978:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 13238              		.loc 1 978 29 is_stmt 0 view .LVU4667
 13239 4730 498B6D00 		mov	rbp, QWORD PTR 0[r13]	# MEM[(uint64_t * *)sieve_18(D)], MEM[(uint64_t * *)sieve_18(D)]
 13240              	# sieve_extend.c:978:         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { 
 978:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 13241              		.loc 1 978 30 view .LVU4668
 13242 4734 4C89FB   		mov	rbx, r15	# tmp198, prime
 13243 4737 48C1EB06 		shr	rbx, 6	# tmp198,
 13244              	# sieve_extend.c:978:         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { 
 978:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 13245              		.loc 1 978 71 view .LVU4669
 13246 473b 4C8B4CDD 		mov	r9, QWORD PTR 0[rbp+rbx*8]	# *_47, *_47
 13246      00
 13247 4740 C4C283F7 		shrx	rcx, r9, r15	# tmp201, *_47, prime
 13247      C9
 13248              	# sieve_extend.c:978:         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { 
 978:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 13249              		.loc 1 978 12 view .LVU4670
 13250 4745 83E101   		and	ecx, 1	# c,
 13251 4748 0F84BA02 		je	.L1033	#,
 13251      0000
 13252              	.LVL781:
 13253              	.LBB702:
 13254              	.LBB703:
GAS LISTING /tmp/ccLUVin9.s 			page 358


 987:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13255              		.loc 1 987 32 is_stmt 1 view .LVU4671
 13256              	.LBE703:
 13257              	# sieve_extend.c:986:             counter_t c_prime = 0;
 986:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 13258              		.loc 1 986 23 is_stmt 0 view .LVU4672
 13259 474e 31ED     		xor	ebp, ebp	# c_prime
 13260              	.LBB704:
 13261              	# sieve_extend.c:987:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 987:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13262              		.loc 1 987 13 view .LVU4673
 13263 4750 4885FF   		test	rdi, rdi	# _137
 13264 4753 BE030000 		mov	esi, 3	# ivtmp.604,
 13264      00
 13265 4758 0F84E003 		je	.L1148	#,
 13265      0000
 13266 475e 4989FB   		mov	r11, rdi	# tmp231, _137
 13267 4761 4929CB   		sub	r11, rcx	# tmp231, c
 13268 4764 4183E303 		and	r11d, 3	# tmp231,
 13269 4768 4D89DA   		mov	r10, r11	# tmp232, tmp231
 13270 476b 0F84BF00 		je	.L1034	#,
 13270      0000
 13271              	.LVL782:
 988:sieve_extend.c ****             }
 13272              		.loc 1 988 17 is_stmt 1 view .LVU4674
 13273              	# sieve_extend.c:988:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 988:sieve_extend.c ****             }
 13274              		.loc 1 988 48 is_stmt 0 view .LVU4675
 13275 4771 488D0409 		lea	rax, [rcx+rcx]	# tmp239,
 13276 4775 4C39F0   		cmp	rax, r14	# tmp239, ivtmp.614
 13277 4778 7411     		je	.L1088	#,
 13278              	# sieve_extend.c:988:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 988:sieve_extend.c ****             }
 13279              		.loc 1 988 33 view .LVU4676
 13280 477a 31D2     		xor	edx, edx	# tmp241
 13281 477c 4C89E0   		mov	rax, r12	# tmp242, ivtmp.612
 13282 477f 48F7F6   		div	rsi	# ivtmp.604
 13283              	# sieve_extend.c:988:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 988:sieve_extend.c ****             }
 13284              		.loc 1 988 82 view .LVU4677
 13285 4782 31ED     		xor	ebp, ebp	# c_prime
 988:sieve_extend.c ****             }
 13286              		.loc 1 988 82 view .LVU4678
 13287 4784 4885D2   		test	rdx, rdx	# tmp241
 13288 4787 400F94C5 		sete	bpl	#, c_prime
 13289              	.LVL783:
 13290              	.L1088:
 987:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13291              		.loc 1 987 68 is_stmt 1 view .LVU4679
 13292              	# sieve_extend.c:987:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 987:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13293              		.loc 1 987 69 is_stmt 0 view .LVU4680
 13294 478b 4883C101 		add	rcx, 1	# c,
 13295              	.LVL784:
 987:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13296              		.loc 1 987 32 is_stmt 1 view .LVU4681
 13297              	# sieve_extend.c:987:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
GAS LISTING /tmp/ccLUVin9.s 			page 359


 987:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13298              		.loc 1 987 13 is_stmt 0 view .LVU4682
 13299 478f 4839F9   		cmp	rcx, rdi	# c, _137
 13300 4792 0F877801 		ja	.L1040	#,
 13300      0000
 13301              	# sieve_extend.c:987:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 987:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13302              		.loc 1 987 51 view .LVU4683
 13303 4798 4989C9   		mov	r9, rcx	# tmp244, c
 13304 479b BE050000 		mov	esi, 5	# ivtmp.604,
 13304      00
 13305 47a0 4C0FAFC9 		imul	r9, rcx	# tmp244, c
 13306              	# sieve_extend.c:987:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 987:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13307              		.loc 1 987 47 view .LVU4684
 13308 47a4 4D39E1   		cmp	r9, r12	# tmp244, ivtmp.612
 13309 47a7 0F876301 		ja	.L1040	#,
 13309      0000
 13310 47ad 4983FA01 		cmp	r10, 1	# tmp232,
 13311 47b1 747D     		je	.L1034	#,
 13312 47b3 4983FA02 		cmp	r10, 2	# tmp232,
 13313 47b7 7438     		je	.L1119	#,
 988:sieve_extend.c ****             }
 13314              		.loc 1 988 17 is_stmt 1 view .LVU4685
 13315              	# sieve_extend.c:988:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 988:sieve_extend.c ****             }
 13316              		.loc 1 988 48 is_stmt 0 view .LVU4686
 13317 47b9 488D1C09 		lea	rbx, [rcx+rcx]	# tmp245,
 13318 47bd 4C39F3   		cmp	rbx, r14	# tmp245, ivtmp.614
 13319 47c0 7417     		je	.L1090	#,
 13320              	# sieve_extend.c:988:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 988:sieve_extend.c ****             }
 13321              		.loc 1 988 33 view .LVU4687
 13322 47c2 31D2     		xor	edx, edx	# tmp247
 13323 47c4 4C89E0   		mov	rax, r12	# tmp248, ivtmp.612
 13324 47c7 48F7F6   		div	rsi	# ivtmp.604
 13325              	# sieve_extend.c:988:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 988:sieve_extend.c ****             }
 13326              		.loc 1 988 20 view .LVU4688
 13327 47ca 4885D2   		test	rdx, rdx	# tmp247
 13328 47cd 410F94C3 		sete	r11b	#, tmp249
 13329              	# sieve_extend.c:988:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 988:sieve_extend.c ****             }
 13330              		.loc 1 988 82 view .LVU4689
 13331 47d1 4180FB01 		cmp	r11b, 1	# tmp249,
 13332 47d5 4883DDFF 		sbb	rbp, -1	# c_prime,
 13333              	.LVL785:
 13334              	.L1090:
 987:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13335              		.loc 1 987 68 is_stmt 1 view .LVU4690
 13336              	# sieve_extend.c:987:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 987:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13337              		.loc 1 987 69 is_stmt 0 view .LVU4691
 13338 47d9 4883C101 		add	rcx, 1	# c,
 13339              	.LVL786:
 987:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13340              		.loc 1 987 32 is_stmt 1 view .LVU4692
GAS LISTING /tmp/ccLUVin9.s 			page 360


 13341 47dd 4883C602 		add	rsi, 2	# ivtmp.604,
 13342              	# sieve_extend.c:987:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 987:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13343              		.loc 1 987 51 is_stmt 0 view .LVU4693
 13344 47e1 4989CA   		mov	r10, rcx	# tmp250, c
 13345 47e4 4C0FAFD1 		imul	r10, rcx	# tmp250, c
 13346              	# sieve_extend.c:987:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 987:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13347              		.loc 1 987 47 view .LVU4694
 13348 47e8 4D39E2   		cmp	r10, r12	# tmp250, ivtmp.612
 13349 47eb 0F871F01 		ja	.L1040	#,
 13349      0000
 13350              	.L1119:
 988:sieve_extend.c ****             }
 13351              		.loc 1 988 17 is_stmt 1 view .LVU4695
 13352              	# sieve_extend.c:988:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 988:sieve_extend.c ****             }
 13353              		.loc 1 988 48 is_stmt 0 view .LVU4696
 13354 47f1 4C8D0C09 		lea	r9, [rcx+rcx]	# tmp251,
 13355 47f5 4D39F1   		cmp	r9, r14	# tmp251, ivtmp.614
 13356 47f8 7415     		je	.L1093	#,
 13357              	# sieve_extend.c:988:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 988:sieve_extend.c ****             }
 13358              		.loc 1 988 33 view .LVU4697
 13359 47fa 31D2     		xor	edx, edx	# tmp253
 13360 47fc 4C89E0   		mov	rax, r12	# tmp254, ivtmp.612
 13361 47ff 48F7F6   		div	rsi	# ivtmp.604
 13362              	# sieve_extend.c:988:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 988:sieve_extend.c ****             }
 13363              		.loc 1 988 20 view .LVU4698
 13364 4802 4885D2   		test	rdx, rdx	# tmp253
 13365 4805 0F94C3   		sete	bl	#, tmp255
 13366              	# sieve_extend.c:988:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 988:sieve_extend.c ****             }
 13367              		.loc 1 988 82 view .LVU4699
 13368 4808 80FB01   		cmp	bl, 1	# tmp255,
 13369 480b 4883DDFF 		sbb	rbp, -1	# c_prime,
 13370              	.LVL787:
 13371              	.L1093:
 987:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13372              		.loc 1 987 68 is_stmt 1 view .LVU4700
 13373              	# sieve_extend.c:987:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 987:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13374              		.loc 1 987 69 is_stmt 0 view .LVU4701
 13375 480f 4883C101 		add	rcx, 1	# c,
 13376              	.LVL788:
 987:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13377              		.loc 1 987 32 is_stmt 1 view .LVU4702
 13378 4813 4883C602 		add	rsi, 2	# ivtmp.604,
 13379              	# sieve_extend.c:987:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 987:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13380              		.loc 1 987 51 is_stmt 0 view .LVU4703
 13381 4817 4989CB   		mov	r11, rcx	# tmp256, c
 13382 481a 4C0FAFD9 		imul	r11, rcx	# tmp256, c
 13383              	# sieve_extend.c:987:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 987:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13384              		.loc 1 987 47 view .LVU4704
GAS LISTING /tmp/ccLUVin9.s 			page 361


 13385 481e 4D39E3   		cmp	r11, r12	# tmp256, ivtmp.612
 13386 4821 0F87E900 		ja	.L1040	#,
 13386      0000
 13387              	.LVL789:
 13388 4827 660F1F84 		.p2align 4
 13388      00000000 
 13388      00
 13389              		.p2align 3
 13390              	.L1034:
 988:sieve_extend.c ****             }
 13391              		.loc 1 988 17 is_stmt 1 view .LVU4705
 13392              	# sieve_extend.c:988:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 988:sieve_extend.c ****             }
 13393              		.loc 1 988 48 is_stmt 0 view .LVU4706
 13394 4830 4C8D1409 		lea	r10, [rcx+rcx]	# tmp210,
 13395 4834 4D39F2   		cmp	r10, r14	# tmp210, ivtmp.614
 13396 4837 7417     		je	.L1039	#,
 13397              	# sieve_extend.c:988:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 988:sieve_extend.c ****             }
 13398              		.loc 1 988 33 view .LVU4707
 13399 4839 31D2     		xor	edx, edx	# tmp214
 13400 483b 4C89E0   		mov	rax, r12	# tmp215, ivtmp.612
 13401 483e 48F7F6   		div	rsi	# ivtmp.604
 13402              	# sieve_extend.c:988:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 988:sieve_extend.c ****             }
 13403              		.loc 1 988 20 view .LVU4708
 13404 4841 4885D2   		test	rdx, rdx	# tmp214
 13405 4844 410F94C1 		sete	r9b	#, tmp217
 13406              	# sieve_extend.c:988:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 988:sieve_extend.c ****             }
 13407              		.loc 1 988 82 view .LVU4709
 13408 4848 4180F901 		cmp	r9b, 1	# tmp217,
 13409 484c 4883DDFF 		sbb	rbp, -1	# c_prime,
 13410              	.LVL790:
 13411              	.L1039:
 987:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13412              		.loc 1 987 68 is_stmt 1 view .LVU4710
 13413              	# sieve_extend.c:987:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 987:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13414              		.loc 1 987 69 is_stmt 0 view .LVU4711
 13415 4850 4883C101 		add	rcx, 1	# tmp234,
 13416              	.LVL791:
 987:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13417              		.loc 1 987 32 is_stmt 1 view .LVU4712
 13418              	# sieve_extend.c:987:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 987:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13419              		.loc 1 987 13 is_stmt 0 view .LVU4713
 13420 4854 4839F9   		cmp	rcx, rdi	# tmp234, _137
 13421 4857 0F87B300 		ja	.L1040	#,
 13421      0000
 13422              	# sieve_extend.c:987:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 987:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13423              		.loc 1 987 51 view .LVU4714
 13424 485d 4889CB   		mov	rbx, rcx	# tmp218, tmp234
 13425 4860 4883C602 		add	rsi, 2	# tmp233,
 13426 4864 480FAFD9 		imul	rbx, rcx	# tmp218, tmp234
 13427              	# sieve_extend.c:987:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
GAS LISTING /tmp/ccLUVin9.s 			page 362


 987:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13428              		.loc 1 987 47 view .LVU4715
 13429 4868 4C39E3   		cmp	rbx, r12	# tmp218, ivtmp.612
 13430 486b 0F879F00 		ja	.L1040	#,
 13430      0000
 988:sieve_extend.c ****             }
 13431              		.loc 1 988 17 is_stmt 1 view .LVU4716
 13432              	# sieve_extend.c:988:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 988:sieve_extend.c ****             }
 13433              		.loc 1 988 48 is_stmt 0 view .LVU4717
 13434 4871 4C8D1C09 		lea	r11, [rcx+rcx]	# tmp257,
 13435 4875 4D39F3   		cmp	r11, r14	# tmp257, ivtmp.614
 13436 4878 7417     		je	.L1097	#,
 13437              	# sieve_extend.c:988:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 988:sieve_extend.c ****             }
 13438              		.loc 1 988 33 view .LVU4718
 13439 487a 31D2     		xor	edx, edx	# tmp259
 13440 487c 4C89E0   		mov	rax, r12	# tmp260, ivtmp.612
 13441 487f 48F7F6   		div	rsi	# tmp233
 13442              	# sieve_extend.c:988:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 988:sieve_extend.c ****             }
 13443              		.loc 1 988 20 view .LVU4719
 13444 4882 4885D2   		test	rdx, rdx	# tmp259
 13445 4885 410F94C2 		sete	r10b	#, tmp261
 13446              	# sieve_extend.c:988:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 988:sieve_extend.c ****             }
 13447              		.loc 1 988 82 view .LVU4720
 13448 4889 4180FA01 		cmp	r10b, 1	# tmp261,
 13449 488d 4883DDFF 		sbb	rbp, -1	# c_prime,
 13450              	.LVL792:
 13451              	.L1097:
 987:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13452              		.loc 1 987 68 is_stmt 1 view .LVU4721
 13453              	# sieve_extend.c:987:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 987:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13454              		.loc 1 987 69 is_stmt 0 view .LVU4722
 13455 4891 4C8D4901 		lea	r9, 1[rcx]	# c,
 987:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13456              		.loc 1 987 32 is_stmt 1 view .LVU4723
 13457 4895 488D5E02 		lea	rbx, 2[rsi]	# ivtmp.604,
 13458              	# sieve_extend.c:987:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 987:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13459              		.loc 1 987 51 is_stmt 0 view .LVU4724
 13460 4899 4D89CB   		mov	r11, r9	# tmp264, c
 13461 489c 4D0FAFD9 		imul	r11, r9	# tmp264, c
 13462              	# sieve_extend.c:987:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 987:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13463              		.loc 1 987 47 view .LVU4725
 13464 48a0 4D39E3   		cmp	r11, r12	# tmp264, ivtmp.612
 13465 48a3 776B     		ja	.L1040	#,
 988:sieve_extend.c ****             }
 13466              		.loc 1 988 17 is_stmt 1 view .LVU4726
 13467              	# sieve_extend.c:988:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 988:sieve_extend.c ****             }
 13468              		.loc 1 988 48 is_stmt 0 view .LVU4727
 13469 48a5 4D01C9   		add	r9, r9	# tmp265
 13470 48a8 4D39F1   		cmp	r9, r14	# tmp265, ivtmp.614
GAS LISTING /tmp/ccLUVin9.s 			page 363


 13471 48ab 7417     		je	.L1099	#,
 13472              	# sieve_extend.c:988:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 988:sieve_extend.c ****             }
 13473              		.loc 1 988 33 view .LVU4728
 13474 48ad 31D2     		xor	edx, edx	# tmp267
 13475 48af 4C89E0   		mov	rax, r12	# tmp268, ivtmp.612
 13476 48b2 48F7F3   		div	rbx	# ivtmp.604
 13477              	# sieve_extend.c:988:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 988:sieve_extend.c ****             }
 13478              		.loc 1 988 20 view .LVU4729
 13479 48b5 4885D2   		test	rdx, rdx	# tmp267
 13480 48b8 410F94C2 		sete	r10b	#, tmp269
 13481              	# sieve_extend.c:988:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 988:sieve_extend.c ****             }
 13482              		.loc 1 988 82 view .LVU4730
 13483 48bc 4180FA01 		cmp	r10b, 1	# tmp269,
 13484 48c0 4883DDFF 		sbb	rbp, -1	# c_prime,
 13485              	.LVL793:
 13486              	.L1099:
 987:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13487              		.loc 1 987 68 is_stmt 1 view .LVU4731
 13488              	# sieve_extend.c:987:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 987:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13489              		.loc 1 987 69 is_stmt 0 view .LVU4732
 13490 48c4 4C8D4902 		lea	r9, 2[rcx]	# c,
 987:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13491              		.loc 1 987 32 is_stmt 1 view .LVU4733
 13492 48c8 488D5E04 		lea	rbx, 4[rsi]	# ivtmp.604,
 13493              	# sieve_extend.c:987:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 987:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13494              		.loc 1 987 51 is_stmt 0 view .LVU4734
 13495 48cc 4D89CB   		mov	r11, r9	# tmp272, c
 13496 48cf 4D0FAFD9 		imul	r11, r9	# tmp272, c
 13497              	# sieve_extend.c:987:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 987:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13498              		.loc 1 987 47 view .LVU4735
 13499 48d3 4D39E3   		cmp	r11, r12	# tmp272, ivtmp.612
 13500 48d6 7738     		ja	.L1040	#,
 988:sieve_extend.c ****             }
 13501              		.loc 1 988 17 is_stmt 1 view .LVU4736
 13502              	# sieve_extend.c:988:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 988:sieve_extend.c ****             }
 13503              		.loc 1 988 48 is_stmt 0 view .LVU4737
 13504 48d8 4D01C9   		add	r9, r9	# tmp273
 13505 48db 4D39F1   		cmp	r9, r14	# tmp273, ivtmp.614
 13506 48de 7417     		je	.L1101	#,
 13507              	# sieve_extend.c:988:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 988:sieve_extend.c ****             }
 13508              		.loc 1 988 33 view .LVU4738
 13509 48e0 31D2     		xor	edx, edx	# tmp275
 13510 48e2 4C89E0   		mov	rax, r12	# tmp276, ivtmp.612
 13511 48e5 48F7F3   		div	rbx	# ivtmp.604
 13512              	# sieve_extend.c:988:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 988:sieve_extend.c ****             }
 13513              		.loc 1 988 20 view .LVU4739
 13514 48e8 4885D2   		test	rdx, rdx	# tmp275
 13515 48eb 410F94C2 		sete	r10b	#, tmp277
GAS LISTING /tmp/ccLUVin9.s 			page 364


 13516              	# sieve_extend.c:988:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 988:sieve_extend.c ****             }
 13517              		.loc 1 988 82 view .LVU4740
 13518 48ef 4180FA01 		cmp	r10b, 1	# tmp277,
 13519 48f3 4883DDFF 		sbb	rbp, -1	# c_prime,
 13520              	.LVL794:
 13521              	.L1101:
 987:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13522              		.loc 1 987 68 is_stmt 1 view .LVU4741
 13523              	# sieve_extend.c:987:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 987:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13524              		.loc 1 987 69 is_stmt 0 view .LVU4742
 13525 48f7 4883C103 		add	rcx, 3	# c,
 13526              	.LVL795:
 987:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13527              		.loc 1 987 32 is_stmt 1 view .LVU4743
 13528 48fb 4883C606 		add	rsi, 6	# ivtmp.604,
 13529              	# sieve_extend.c:987:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 987:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13530              		.loc 1 987 51 is_stmt 0 view .LVU4744
 13531 48ff 4989C9   		mov	r9, rcx	# tmp278, c
 13532 4902 4C0FAFC9 		imul	r9, rcx	# tmp278, c
 13533              	# sieve_extend.c:987:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 987:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13534              		.loc 1 987 47 view .LVU4745
 13535 4906 4D39E1   		cmp	r9, r12	# tmp278, ivtmp.612
 13536 4909 0F8621FF 		jbe	.L1034	#,
 13536      FFFF
 13537              	.LVL796:
 13538 490f 90       		.p2align 4
 13539              		.p2align 3
 13540              	.L1040:
 987:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13541              		.loc 1 987 47 view .LVU4746
 13542              	.LBE704:
 990:sieve_extend.c ****         }
 13543              		.loc 1 990 13 is_stmt 1 view .LVU4747
 13544              	# sieve_extend.c:990:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
 990:sieve_extend.c ****         }
 13545              		.loc 1 990 16 is_stmt 0 view .LVU4748
 13546 4910 4885ED   		test	rbp, rbp	# c_prime
 13547 4913 0F840C02 		je	.L1161	#,
 13547      0000
 13548              	.LVL797:
 13549              	.L1037:
 990:sieve_extend.c ****         }
 13550              		.loc 1 990 16 view .LVU4749
 13551              	.LBE702:
 977:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 13552              		.loc 1 977 52 is_stmt 1 view .LVU4750
 13553              	# sieve_extend.c:977:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 977:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 13554              		.loc 1 977 57 is_stmt 0 view .LVU4751
 13555 4919 4983C701 		add	r15, 1	# prime,
 13556              	.LVL798:
 977:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 13557              		.loc 1 977 31 is_stmt 1 view .LVU4752
GAS LISTING /tmp/ccLUVin9.s 			page 365


 13558 491d 4983C402 		add	r12, 2	# ivtmp.612,
 13559 4921 4983C602 		add	r14, 2	# ivtmp.614,
 13560              	# sieve_extend.c:977:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 977:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 13561              		.loc 1 977 5 is_stmt 0 view .LVU4753
 13562 4925 4939FF   		cmp	r15, rdi	# prime, _137
 13563 4928 0F8202FE 		jb	.L1041	#,
 13563      FFFF
 13564              	.LVL799:
 13565              	.L1150:
 977:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 13566              		.loc 1 977 5 view .LVU4754
 13567 492e 448B6C24 		mov	r13d, DWORD PTR 36[rsp]	# <retval>, %sfp
 13567      24
 13568              	.LVL800:
 13569              	.L1010:
 977:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 13570              		.loc 1 977 5 view .LVU4755
 13571              	.LBE713:
 13572              	.LBE688:
 13573              	.LBE687:
 13574              	# sieve_extend.c:1021: }
1021:sieve_extend.c **** 
 13575              		.loc 1 1021 1 view .LVU4756
 13576 4933 488D6424 		lea	rsp, 56[rsp]	#,
 13576      38
 13577              		.cfi_remember_state
 13578              		.cfi_def_cfa_offset 56
 13579 4938 4489E8   		mov	eax, r13d	#, <retval>
 13580 493b 5B       		pop	rbx	#
 13581              		.cfi_def_cfa_offset 48
 13582 493c 5D       		pop	rbp	#
 13583              		.cfi_def_cfa_offset 40
 13584 493d 415C     		pop	r12	#
 13585              		.cfi_def_cfa_offset 32
 13586 493f 415D     		pop	r13	#
 13587              		.cfi_def_cfa_offset 24
 13588 4941 415E     		pop	r14	#
 13589              		.cfi_def_cfa_offset 16
 13590 4943 415F     		pop	r15	#
 13591              		.cfi_def_cfa_offset 8
 13592 4945 C3       		ret	
 13593              	.LVL801:
 13594              	.L1159:
 13595              		.cfi_restore_state
 13596              	# sieve_extend.c:1000:     switch(sieve->size) {
1000:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 13597              		.loc 1 1000 5 view .LVU4757
 13598 4946 4981F9E8 		cmp	r9, 1000	# pretmp_201,
 13598      030000
 13599 494d 0F84E502 		je	.L1017	#,
 13599      0000
 13600 4953 7633     		jbe	.L1162	#,
 13601 4955 4981F910 		cmp	r9, 10000	# pretmp_201,
 13601      270000
 13602 495c 0F852203 		jne	.L1021	#,
 13602      0000
GAS LISTING /tmp/ccLUVin9.s 			page 366


 13603 4962 4981F8CD 		cmp	r8, 1229	# primeCount,
 13603      040000
 13604              	# sieve_extend.c:1004:         case 10000:         valid_primes = 1229;     break;
1004:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 13605              		.loc 1 1004 42 view .LVU4758
 13606 4969 B9CD0400 		mov	ecx, 1229	# valid_primes,
 13606      00
 13607 496e 400F94C6 		sete	sil	#, tmp179
 13608 4972 21F2     		and	edx, esi	# _253, tmp179
 13609 4974 4981F8CD 		cmp	r8, 1229	# primeCount,
 13609      040000
 13610 497b 440FB6EE 		movzx	r13d, sil	# <retval>, tmp179
 13611 497f 410F95C4 		setne	r12b	#, _135
1004:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 13612              		.loc 1 1004 29 is_stmt 1 view .LVU4759
 13613              	.LVL802:
1004:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 13614              		.loc 1 1004 54 view .LVU4760
 13615              	# sieve_extend.c:1004:         case 10000:         valid_primes = 1229;     break;
1004:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 13616              		.loc 1 1004 9 is_stmt 0 view .LVU4761
 13617 4983 E938FDFF 		jmp	.L1028	#
 13617      FF
 13618              	.LVL803:
 13619              	.L1162:
 13620              	# sieve_extend.c:1000:     switch(sieve->size) {
1000:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 13621              		.loc 1 1000 5 view .LVU4762
 13622 4988 4983F90A 		cmp	r9, 10	# pretmp_201,
 13623 498c 0F841902 		je	.L1019	#,
 13623      0000
 13624 4992 4983F964 		cmp	r9, 100	# pretmp_201,
 13625 4996 0F85E802 		jne	.L1021	#,
 13625      0000
 13626 499c 4983F819 		cmp	r8, 25	# primeCount,
 13627 49a0 0F94C1   		sete	cl	#, tmp173
 13628 49a3 21CA     		and	edx, ecx	# _253, tmp173
 13629 49a5 4983F819 		cmp	r8, 25	# primeCount,
 13630 49a9 440FB6E9 		movzx	r13d, cl	# <retval>, tmp173
 13631 49ad 410F95C4 		setne	r12b	#, _135
 13632              	# sieve_extend.c:1002:         case 100:           valid_primes = 25;       break;
1002:sieve_extend.c ****         case 1000:          valid_primes = 168;      break;
 13633              		.loc 1 1002 42 view .LVU4763
 13634 49b1 B9190000 		mov	ecx, 25	# valid_primes,
 13634      00
 13635 49b6 E905FDFF 		jmp	.L1028	#
 13635      FF
 13636 49bb 0F1F4400 		.p2align 4,,7
 13636      00
 13637              		.p2align 3
 13638              	.L1160:
 13639              	# sieve_extend.c:1000:     switch(sieve->size) {
1000:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 13640              		.loc 1 1000 5 view .LVU4764
 13641 49c0 4981F940 		cmp	r9, 1000000	# pretmp_201,
 13641      420F00
 13642 49c7 0F84B701 		je	.L1025	#,
GAS LISTING /tmp/ccLUVin9.s 			page 367


 13642      0000
 13643 49cd 4981F980 		cmp	r9, 10000000	# pretmp_201,
 13643      969800
 13644 49d4 0F85AA02 		jne	.L1021	#,
 13644      0000
 13645 49da 4981F803 		cmp	r8, 664579	# primeCount,
 13645      240A00
 13646              	# sieve_extend.c:1007:         case 10000000:      valid_primes = 664579;   break;
1007:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 13647              		.loc 1 1007 42 view .LVU4765
 13648 49e1 B903240A 		mov	ecx, 664579	# valid_primes,
 13648      00
 13649 49e6 410F94C7 		sete	r15b	#, tmp185
 13650 49ea 4421FA   		and	edx, r15d	# _253, tmp185
 13651 49ed 4981F803 		cmp	r8, 664579	# primeCount,
 13651      240A00
 13652 49f4 450FB6EF 		movzx	r13d, r15b	# <retval>, tmp185
 13653 49f8 410F95C4 		setne	r12b	#, _135
1007:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 13654              		.loc 1 1007 29 is_stmt 1 view .LVU4766
 13655              	.LVL804:
1007:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 13656              		.loc 1 1007 54 view .LVU4767
 13657              	# sieve_extend.c:1007:         case 10000000:      valid_primes = 664579;   break;
1007:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 13658              		.loc 1 1007 9 is_stmt 0 view .LVU4768
 13659 49fc E9BFFCFF 		jmp	.L1028	#
 13659      FF
 13660              	.LVL805:
 13661              		.p2align 4,,7
 13662 4a01 0F1F8000 		.p2align 3
 13662      000000
 13663              	.L1033:
 13664              	.LBB718:
 13665              	.LBB716:
 13666              	.LBB714:
 13667              	.LBB711:
 979:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 13668              		.loc 1 979 32 is_stmt 1 view .LVU4769
 13669              	# sieve_extend.c:979:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 979:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 13670              		.loc 1 979 13 is_stmt 0 view .LVU4770
 13671 4a08 4885FF   		test	rdi, rdi	# _137
 13672 4a0b 0F841DFF 		je	.L1150	#,
 13672      FFFF
 13673              	# sieve_extend.c:979:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 979:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 13674              		.loc 1 979 27 view .LVU4771
 13675 4a11 BB010000 		mov	ebx, 1	# c,
 13675      00
 13676 4a16 EB20     		jmp	.L1038	#
 13677              	.LVL806:
 13678              		.p2align 4,,7
 13679              		.p2align 3
 13680              	.L1047:
 13681              	# sieve_extend.c:981:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marke
 981:sieve_extend.c ****                 }
GAS LISTING /tmp/ccLUVin9.s 			page 368


 13682              		.loc 1 981 35 view .LVU4772
 13683 4a18 4989E8   		mov	r8, rbp	# warn_prime, warn_prime
 13684              	.LVL807:
 13685              	.L1036:
 979:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 13686              		.loc 1 979 68 is_stmt 1 view .LVU4773
 13687              	# sieve_extend.c:979:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 979:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 13688              		.loc 1 979 69 is_stmt 0 view .LVU4774
 13689 4a1b 4883C301 		add	rbx, 1	# c,
 13690              	.LVL808:
 979:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 13691              		.loc 1 979 32 is_stmt 1 view .LVU4775
 13692              	# sieve_extend.c:979:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 979:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 13693              		.loc 1 979 13 is_stmt 0 view .LVU4776
 13694 4a1f 4839FB   		cmp	rbx, rdi	# c, _137
 13695 4a22 0F87F1FE 		ja	.L1037	#,
 13695      FFFF
 13696              	# sieve_extend.c:979:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 979:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 13697              		.loc 1 979 51 view .LVU4777
 13698 4a28 4989DB   		mov	r11, rbx	# tmp209, c
 13699 4a2b 4C0FAFDB 		imul	r11, rbx	# tmp209, c
 13700              	# sieve_extend.c:979:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 979:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 13701              		.loc 1 979 47 view .LVU4778
 13702 4a2f 4D39E3   		cmp	r11, r12	# tmp209, ivtmp.612
 13703 4a32 0F87E1FE 		ja	.L1037	#,
 13703      FFFF
 13704              	.LVL809:
 13705              	.L1038:
 980:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 13706              		.loc 1 980 17 is_stmt 1 view .LVU4779
 13707 4a38 488D2C1B 		lea	rbp, [rbx+rbx]	# _218,
 13708 4a3c 31D2     		xor	edx, edx	# tmp204
 13709 4a3e 4C89E0   		mov	rax, r12	# tmp203, ivtmp.612
 13710              	# sieve_extend.c:980:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 980:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 13711              		.loc 1 980 39 is_stmt 0 view .LVU4780
 13712 4a41 488D7501 		lea	rsi, 1[rbp]	# _55,
 13713 4a45 48F7F6   		div	rsi	# _55
 13714              	# sieve_extend.c:980:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 980:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 13715              		.loc 1 980 48 view .LVU4781
 13716 4a48 4885D2   		test	rdx, rdx	# tmp204
 13717 4a4b 75CE     		jne	.L1036	#,
 980:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 13718              		.loc 1 980 48 view .LVU4782
 13719 4a4d 4939EE   		cmp	r14, rbp	# ivtmp.614, _218
 13720 4a50 74C9     		je	.L1036	#,
 981:sieve_extend.c ****                 }
 13721              		.loc 1 981 21 is_stmt 1 view .LVU4783
 13722              	# sieve_extend.c:981:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marke
 981:sieve_extend.c ****                 }
 13723              		.loc 1 981 24 is_stmt 0 view .LVU4784
 13724 4a52 4983F81D 		cmp	r8, 29	# warn_prime,
GAS LISTING /tmp/ccLUVin9.s 			page 369


 13725              	# sieve_extend.c:981:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marke
 981:sieve_extend.c ****                 }
 13726              		.loc 1 981 35 view .LVU4785
 13727 4a56 498D6801 		lea	rbp, 1[r8]	# warn_prime,
 13728              	.LVL810:
 13729              	# sieve_extend.c:981:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marke
 981:sieve_extend.c ****                 }
 13730              		.loc 1 981 24 view .LVU4786
 13731 4a5a 77BC     		ja	.L1047	#,
 981:sieve_extend.c ****                 }
 13732              		.loc 1 981 44 is_stmt 1 view .LVU4787
 13733              	.LVL811:
 13734              	.LBB699:
 13735              	.LBI693:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 13736              		.loc 3 105 1 view .LVU4788
 13737              	.LBB696:
 13738              		.loc 3 107 3 view .LVU4789
 13739              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 13740              		.loc 3 107 10 is_stmt 0 view .LVU4790
 13741 4a5c 4989F0   		mov	r8, rsi	#, _55
 13742 4a5f 4989C1   		mov	r9, rax	#, tmp203
 13743 4a62 BF010000 		mov	edi, 1	#,
 13743      00
 13744 4a67 4C89F9   		mov	rcx, r15	#, prime
 13745 4a6a 4C892424 		mov	QWORD PTR [rsp], r12	#, ivtmp.612
 13746 4a6e 4C89E2   		mov	rdx, r12	#, ivtmp.612
 13747 4a71 488D3500 		lea	rsi, .LC12[rip]	#,
 13747      000000
 13748 4a78 31C0     		xor	eax, eax	#
 13749 4a7a E8000000 		call	__printf_chk@PLT	#
 13749      00
 13750              	.LVL812:
 13751 4a7f 498B7D08 		mov	rdi, QWORD PTR 8[r13]	# _137, MEM[(uint64_t *)sieve_18(D) + 8B]
 13752              	.LBE696:
 13753              	.LBE699:
 13754              	# sieve_extend.c:981:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marke
 981:sieve_extend.c ****                 }
 13755              		.loc 1 981 35 view .LVU4791
 13756 4a83 4989E8   		mov	r8, rbp	# warn_prime, warn_prime
 13757              	.LBB700:
 13758              	.LBB697:
 13759              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 13760              		.loc 3 107 10 view .LVU4792
 13761 4a86 EB93     		jmp	.L1036	#
 13762              	.LVL813:
 13763              	.L1011:
 13764              		.loc 3 107 10 view .LVU4793
 13765              	.LBE697:
 13766              	.LBE700:
 13767              	.LBE711:
 13768              	.LBE714:
 13769              	.LBE716:
 13770              	.LBE718:
 13771              	.LBB719:
 13772              	.LBB684:
 970:sieve_extend.c **** }
GAS LISTING /tmp/ccLUVin9.s 			page 370


 13773              		.loc 1 970 5 is_stmt 1 view .LVU4794
 970:sieve_extend.c **** }
 13774              		.loc 1 970 5 is_stmt 0 view .LVU4795
 13775              	.LBE684:
 13776              	.LBE719:
 999:sieve_extend.c ****     switch(sieve->size) {
 13777              		.loc 1 999 5 is_stmt 1 view .LVU4796
1000:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 13778              		.loc 1 1000 5 view .LVU4797
 13779 4a88 4531ED   		xor	r13d, r13d	# <retval>
 13780 4a8b 4981F9A0 		cmp	r9, 100000	# pretmp_201,
 13780      860100
 13781 4a92 41BC0100 		mov	r12d, 1	# _135,
 13781      0000
 13782 4a98 41B80100 		mov	r8d, 1	# primeCount,
 13782      0000
 13783 4a9e 0F842202 		je	.L1050	#,
 13783      0000
 13784 4aa4 0F872201 		ja	.L1042	#,
 13784      0000
 13785 4aaa 4983F964 		cmp	r9, 100	# pretmp_201,
 13786 4aae B9190000 		mov	ecx, 25	# valid_primes,
 13786      00
 13787 4ab3 742A     		je	.L1029	#,
 13788              		.p2align 4,,2
 13789 4ab5 0F863F01 		jbe	.L1163	#,
 13789      0000
 13790 4abb 4981F9E8 		cmp	r9, 1000	# pretmp_201,
 13790      030000
 13791              	# sieve_extend.c:1003:         case 1000:          valid_primes = 168;      break;
1003:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 13792              		.loc 1 1003 42 is_stmt 0 view .LVU4798
 13793 4ac2 B9A80000 		mov	ecx, 168	# valid_primes,
 13793      00
 13794              	# sieve_extend.c:1000:     switch(sieve->size) {
1000:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 13795              		.loc 1 1000 5 view .LVU4799
 13796 4ac7 7416     		je	.L1029	#,
 13797 4ac9 4981F910 		cmp	r9, 10000	# pretmp_201,
 13797      270000
 13798 4ad0 B9CD0400 		mov	ecx, 1229	# tmp223,
 13798      00
 13799 4ad5 41BA0000 		mov	r10d, 0	# tmp224,
 13799      0000
 13800 4adb 490F45CA 		cmovne	rcx, r10	# tmp223,, valid_primes, tmp224
 13801              	.LVL814:
 13802              	.L1029:
1015:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 13803              		.loc 1 1015 5 is_stmt 1 view .LVU4800
 13804              	# sieve_extend.c:1015:     if (!valid && option_verboselevel >= 1) {
1015:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 13805              		.loc 1 1015 8 is_stmt 0 view .LVU4801
 13806 4adf 85DB     		test	ebx, ebx	# option_verboselevel
 13807 4ae1 0F8EF7FB 		jle	.L1030	#,
 13807      FFFF
 13808 4ae7 4584E4   		test	r12b, r12b	# _135
 13809 4aea 0F84EEFB 		je	.L1030	#,
GAS LISTING /tmp/ccLUVin9.s 			page 371


 13809      FFFF
1016:sieve_extend.c ****         if (!valid && option_verboselevel >= 2) show_primes(sieve, default_show_primes_on_error);
 13810              		.loc 1 1016 9 is_stmt 1 view .LVU4802
 13811              	.LVL815:
 13812              	.LBB720:
 13813              	.LBI720:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 13814              		.loc 3 105 1 view .LVU4803
 13815              	.LBB721:
 13816              		.loc 3 107 3 view .LVU4804
 13817              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 13818              		.loc 3 107 10 is_stmt 0 view .LVU4805
 13819 4af0 31C0     		xor	eax, eax	#
 13820 4af2 4C89CA   		mov	rdx, r9	#, pretmp_201
 13821 4af5 488D3500 		lea	rsi, .LC10[rip]	#,
 13821      000000
 13822 4afc BF010000 		mov	edi, 1	#,
 13822      00
 13823 4b01 E8000000 		call	__printf_chk@PLT	#
 13823      00
 13824              	.LVL816:
 13825              		.loc 3 107 10 view .LVU4806
 13826              	.LBE721:
 13827              	.LBE720:
1017:sieve_extend.c ****     }
 13828              		.loc 1 1017 9 is_stmt 1 view .LVU4807
 13829              	# sieve_extend.c:1017:         if (!valid && option_verboselevel >= 2) show_primes(sieve, default_s
1017:sieve_extend.c ****     }
 13830              		.loc 1 1017 12 is_stmt 0 view .LVU4808
 13831 4b06 83FB01   		cmp	ebx, 1	# option_verboselevel,
 13832 4b09 0F8424FE 		je	.L1010	#,
 13832      FFFF
1017:sieve_extend.c ****     }
 13833              		.loc 1 1017 49 is_stmt 1 discriminator 1 view .LVU4809
 13834 4b0f 488D7508 		lea	rsi, 8[rbp]	# tmp195,
 13835 4b13 BA640000 		mov	edx, 100	#,
 13835      00
 13836 4b18 4889EF   		mov	rdi, rbp	#, sieve
 13837 4b1b E880E8FF 		call	show_primes.isra.0	#
 13837      FF
 13838              	.LVL817:
1019:sieve_extend.c ****     return (valid);
 13839              		.loc 1 1019 5 discriminator 1 view .LVU4810
 13840 4b20 E9CBFBFF 		jmp	.L1032	#
 13840      FF
 13841              	.LVL818:
 13842              	.L1161:
 13843              	.LBB722:
 13844              	.LBB717:
 13845              	.LBB715:
 13846              	.LBB712:
 13847              	# sieve_extend.c:990:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
 990:sieve_extend.c ****         }
 13848              		.loc 1 990 44 is_stmt 0 view .LVU4811
 13849 4b25 488B4C24 		mov	rcx, QWORD PTR 24[rsp]	# warn_nonprime, %sfp
 13849      18
 13850              	# sieve_extend.c:990:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
GAS LISTING /tmp/ccLUVin9.s 			page 372


 990:sieve_extend.c ****         }
 13851              		.loc 1 990 28 view .LVU4812
 13852 4b2a 4883F91D 		cmp	rcx, 29	# warn_nonprime,
 13853              	# sieve_extend.c:990:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
 990:sieve_extend.c ****         }
 13854              		.loc 1 990 44 view .LVU4813
 13855 4b2e 488D5901 		lea	rbx, 1[rcx]	# warn_nonprime,
 13856              	.LVL819:
 13857              	# sieve_extend.c:990:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
 990:sieve_extend.c ****         }
 13858              		.loc 1 990 28 view .LVU4814
 13859 4b32 761D     		jbe	.L1045	#,
 13860              	# sieve_extend.c:990:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
 990:sieve_extend.c ****         }
 13861              		.loc 1 990 44 view .LVU4815
 13862 4b34 48895C24 		mov	QWORD PTR 24[rsp], rbx	# %sfp, warn_nonprime
 13862      18
 13863 4b39 E9DBFDFF 		jmp	.L1037	#
 13863      FF
 13864              	.LVL820:
 13865              	.L1148:
 990:sieve_extend.c ****         }
 13866              		.loc 1 990 44 view .LVU4816
 13867 4b3e 488B5424 		mov	rdx, QWORD PTR 24[rsp]	# warn_nonprime, %sfp
 13867      18
 13868              	# sieve_extend.c:990:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
 990:sieve_extend.c ****         }
 13869              		.loc 1 990 28 view .LVU4817
 13870 4b43 4883FA1D 		cmp	rdx, 29	# warn_nonprime,
 13871              	# sieve_extend.c:990:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
 990:sieve_extend.c ****         }
 13872              		.loc 1 990 44 view .LVU4818
 13873 4b47 488D5A01 		lea	rbx, 1[rdx]	# warn_nonprime,
 13874              	.LVL821:
 13875              	# sieve_extend.c:990:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
 990:sieve_extend.c ****         }
 13876              		.loc 1 990 28 view .LVU4819
 13877 4b4b 0F87DDFD 		ja	.L1150	#,
 13877      FFFF
 13878              	.LVL822:
 13879              	.L1045:
 13880              	.LBB705:
 13881              	.LBB706:
 13882              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 13883              		.loc 3 107 10 view .LVU4820
 13884 4b51 BF010000 		mov	edi, 1	#,
 13884      00
 13885              	.LBE706:
 13886              	.LBE705:
 13887              	# sieve_extend.c:990:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
 990:sieve_extend.c ****         }
 13888              		.loc 1 990 53 view .LVU4821
 13889 4b56 4B8D543F 		lea	rdx, 1[r15+r15]	# tmp220,
 13889      01
 13890              	.LBB709:
 13891              	.LBB707:
 13892              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
GAS LISTING /tmp/ccLUVin9.s 			page 373


 13893              		.loc 3 107 10 view .LVU4822
 13894 4b5b 4C89F9   		mov	rcx, r15	#, prime
 13895 4b5e 488D3500 		lea	rsi, .LC13[rip]	#,
 13895      000000
 13896 4b65 4C894424 		mov	QWORD PTR 40[rsp], r8	# %sfp, warn_prime
 13896      28
 13897              	.LBE707:
 13898              	.LBE709:
 990:sieve_extend.c ****         }
 13899              		.loc 1 990 53 is_stmt 1 view .LVU4823
 13900              	.LVL823:
 13901              	.LBB710:
 13902              	.LBI705:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 13903              		.loc 3 105 1 view .LVU4824
 13904              	.LBB708:
 13905              		.loc 3 107 3 view .LVU4825
 13906              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 13907              		.loc 3 107 10 is_stmt 0 view .LVU4826
 13908 4b6a 31C0     		xor	eax, eax	#
 13909 4b6c E8000000 		call	__printf_chk@PLT	#
 13909      00
 13910              	.LVL824:
 13911              		.loc 3 107 10 view .LVU4827
 13912 4b71 498B7D08 		mov	rdi, QWORD PTR 8[r13]	# _137, MEM[(uint64_t *)sieve_18(D) + 8B]
 13913 4b75 4C8B4424 		mov	r8, QWORD PTR 40[rsp]	# warn_prime, %sfp
 13913      28
 13914 4b7a 48895C24 		mov	QWORD PTR 24[rsp], rbx	# %sfp, warn_nonprime
 13914      18
 13915 4b7f E995FDFF 		jmp	.L1037	#
 13915      FF
 13916              	.LVL825:
 13917              	.L1025:
 13918              		.loc 3 107 10 view .LVU4828
 13919 4b84 4981F8A2 		cmp	r8, 78498	# primeCount,
 13919      320100
 13920              	.LBE708:
 13921              	.LBE710:
 13922              	.LBE712:
 13923              	.LBE715:
 13924              	.LBE717:
 13925              	.LBE722:
 13926              	# sieve_extend.c:1006:         case 1000000:       valid_primes = 78498;    break;
1006:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 13927              		.loc 1 1006 42 view .LVU4829
 13928 4b8b B9A23201 		mov	ecx, 78498	# valid_primes,
 13928      00
 13929 4b90 410F94C6 		sete	r14b	#, tmp183
 13930 4b94 4421F2   		and	edx, r14d	# _253, tmp183
 13931 4b97 4981F8A2 		cmp	r8, 78498	# primeCount,
 13931      320100
 13932 4b9e 450FB6EE 		movzx	r13d, r14b	# <retval>, tmp183
 13933 4ba2 410F95C4 		setne	r12b	#, _135
1006:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 13934              		.loc 1 1006 29 is_stmt 1 view .LVU4830
 13935              	.LVL826:
1006:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
GAS LISTING /tmp/ccLUVin9.s 			page 374


 13936              		.loc 1 1006 54 view .LVU4831
 13937              	# sieve_extend.c:1006:         case 1000000:       valid_primes = 78498;    break;
1006:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 13938              		.loc 1 1006 9 is_stmt 0 view .LVU4832
 13939 4ba6 E915FBFF 		jmp	.L1028	#
 13939      FF
 13940              	.LVL827:
 13941              	.L1019:
1006:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 13942              		.loc 1 1006 9 view .LVU4833
 13943 4bab 4983F804 		cmp	r8, 4	# primeCount,
 13944              	# sieve_extend.c:1001:         case 10:            valid_primes = 4;        break;
1001:sieve_extend.c ****         case 100:           valid_primes = 25;       break;
 13945              		.loc 1 1001 42 view .LVU4834
 13946 4baf B9040000 		mov	ecx, 4	# valid_primes,
 13946      00
 13947 4bb4 410F94C2 		sete	r10b	#, tmp175
 13948 4bb8 4421D2   		and	edx, r10d	# _253, tmp175
 13949 4bbb 4983F804 		cmp	r8, 4	# primeCount,
 13950 4bbf 450FB6EA 		movzx	r13d, r10b	# <retval>, tmp175
 13951 4bc3 410F95C4 		setne	r12b	#, _135
 13952 4bc7 E9F4FAFF 		jmp	.L1028	#
 13952      FF
 13953              	.LVL828:
 13954              	.L1042:
 13955              	# sieve_extend.c:1000:     switch(sieve->size) {
1000:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 13956              		.loc 1 1000 5 view .LVU4835
 13957 4bcc 4981F900 		cmp	r9, 100000000	# pretmp_201,
 13957      E1F505
 13958              	# sieve_extend.c:1008:         case 100000000:     valid_primes = 5761455;  break;
1008:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 13959              		.loc 1 1008 42 view .LVU4836
 13960 4bd3 B9AFE957 		mov	ecx, 5761455	# valid_primes,
 13960      00
 13961              	# sieve_extend.c:1000:     switch(sieve->size) {
1000:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 13962              		.loc 1 1000 5 view .LVU4837
 13963 4bd8 0F8401FF 		je	.L1029	#,
 13963      FFFF
 13964 4bde 762C     		jbe	.L1164	#,
 13965 4be0 4981F900 		cmp	r9, 1000000000	# pretmp_201,
 13965      CA9A3B
 13966 4be7 B92EDF07 		mov	ecx, 50847534	# tmp227,
 13966      03
 13967 4bec B8000000 		mov	eax, 0	# tmp228,
 13967      00
 13968 4bf1 480F45C8 		cmovne	rcx, rax	# tmp227,, valid_primes, tmp228
 13969 4bf5 E9E5FEFF 		jmp	.L1029	#
 13969      FF
 13970              	.L1163:
 13971 4bfa 31C9     		xor	ecx, ecx	# valid_primes
 13972 4bfc 4983F90A 		cmp	r9, 10	# pretmp_201,
 13973 4c00 0F94C1   		sete	cl	#, valid_primes
 13974 4c03 48C1E102 		sal	rcx, 2	# valid_primes,
 13975 4c07 E9D3FEFF 		jmp	.L1029	#
 13975      FF
GAS LISTING /tmp/ccLUVin9.s 			page 375


 13976              	.L1164:
 13977 4c0c 4981F940 		cmp	r9, 1000000	# pretmp_201,
 13977      420F00
 13978              	# sieve_extend.c:1006:         case 1000000:       valid_primes = 78498;    break;
1006:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 13979              		.loc 1 1006 42 view .LVU4838
 13980 4c13 B9A23201 		mov	ecx, 78498	# valid_primes,
 13980      00
 13981              	# sieve_extend.c:1000:     switch(sieve->size) {
1000:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 13982              		.loc 1 1000 5 view .LVU4839
 13983 4c18 0F84C1FE 		je	.L1029	#,
 13983      FFFF
 13984 4c1e 4981F980 		cmp	r9, 10000000	# pretmp_201,
 13984      969800
 13985 4c25 B903240A 		mov	ecx, 664579	# tmp225,
 13985      00
 13986 4c2a BE000000 		mov	esi, 0	# tmp226,
 13986      00
 13987 4c2f 480F45CE 		cmovne	rcx, rsi	# tmp225,, valid_primes, tmp226
 13988 4c33 E9A7FEFF 		jmp	.L1029	#
 13988      FF
 13989              	.LVL829:
 13990              	.L1017:
1000:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 13991              		.loc 1 1000 5 view .LVU4840
 13992 4c38 4981F8A8 		cmp	r8, 168	# primeCount,
 13992      000000
 13993              	# sieve_extend.c:1003:         case 1000:          valid_primes = 168;      break;
1003:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 13994              		.loc 1 1003 42 view .LVU4841
 13995 4c3f B9A80000 		mov	ecx, 168	# valid_primes,
 13995      00
 13996 4c44 410F94C4 		sete	r12b	#, tmp177
 13997 4c48 4421E2   		and	edx, r12d	# _253, tmp177
 13998 4c4b 4981F8A8 		cmp	r8, 168	# primeCount,
 13998      000000
 13999 4c52 450FB6EC 		movzx	r13d, r12b	# <retval>, tmp177
 14000 4c56 410F95C4 		setne	r12b	#, _135
1003:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 14001              		.loc 1 1003 29 is_stmt 1 view .LVU4842
 14002              	.LVL830:
1003:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 14003              		.loc 1 1003 54 view .LVU4843
 14004              	# sieve_extend.c:1003:         case 1000:          valid_primes = 168;      break;
1003:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 14005              		.loc 1 1003 9 is_stmt 0 view .LVU4844
 14006 4c5a E961FAFF 		jmp	.L1028	#
 14006      FF
 14007              	.LVL831:
 14008              	.L1023:
1003:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 14009              		.loc 1 1003 9 view .LVU4845
 14010 4c5f 4981F8AF 		cmp	r8, 5761455	# primeCount,
 14010      E95700
 14011              	# sieve_extend.c:1008:         case 100000000:     valid_primes = 5761455;  break;
1008:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
GAS LISTING /tmp/ccLUVin9.s 			page 376


 14012              		.loc 1 1008 42 view .LVU4846
 14013 4c66 B9AFE957 		mov	ecx, 5761455	# valid_primes,
 14013      00
 14014 4c6b 0F94C0   		sete	al	#, tmp187
 14015 4c6e 21C2     		and	edx, eax	# _253, tmp187
 14016 4c70 4981F8AF 		cmp	r8, 5761455	# primeCount,
 14016      E95700
 14017 4c77 440FB6E8 		movzx	r13d, al	# <retval>, tmp187
 14018 4c7b 410F95C4 		setne	r12b	#, _135
1008:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 14019              		.loc 1 1008 29 is_stmt 1 view .LVU4847
 14020              	.LVL832:
1008:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 14021              		.loc 1 1008 54 view .LVU4848
 14022              	# sieve_extend.c:1008:         case 100000000:     valid_primes = 5761455;  break;
1008:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 14023              		.loc 1 1008 9 is_stmt 0 view .LVU4849
 14024 4c7f E93CFAFF 		jmp	.L1028	#
 14024      FF
 14025              	.LVL833:
 14026              	.L1021:
1008:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 14027              		.loc 1 1008 9 view .LVU4850
 14028 4c84 4D85C0   		test	r8, r8	# primeCount
 14029 4c87 410F94C3 		sete	r11b	#, tmp191
 14030 4c8b 4421DA   		and	edx, r11d	# _253, tmp191
 14031 4c8e 4D85C0   		test	r8, r8	# primeCount
 14032 4c91 450FB6EB 		movzx	r13d, r11b	# <retval>, tmp191
 14033 4c95 410F95C4 		setne	r12b	#, _135
1010:sieve_extend.c ****     }
 14034              		.loc 1 1010 29 is_stmt 1 view .LVU4851
 14035              	# sieve_extend.c:1010:         default:            valid_primes= 0;
1010:sieve_extend.c ****     }
 14036              		.loc 1 1010 41 is_stmt 0 view .LVU4852
 14037 4c99 31C9     		xor	ecx, ecx	# valid_primes
 14038 4c9b E920FAFF 		jmp	.L1028	#
 14038      FF
 14039              	.L1015:
1010:sieve_extend.c ****     }
 14040              		.loc 1 1010 41 view .LVU4853
 14041 4ca0 4981F878 		cmp	r8, 9592	# primeCount,
 14041      250000
 14042              	# sieve_extend.c:1005:         case 100000:        valid_primes = 9592;     break;
1005:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 14043              		.loc 1 1005 42 view .LVU4854
 14044 4ca7 B9782500 		mov	ecx, 9592	# valid_primes,
 14044      00
 14045 4cac 400F94C7 		sete	dil	#, tmp181
 14046 4cb0 21FA     		and	edx, edi	# _253, tmp181
 14047 4cb2 4981F878 		cmp	r8, 9592	# primeCount,
 14047      250000
 14048 4cb9 440FB6EF 		movzx	r13d, dil	# <retval>, tmp181
 14049 4cbd 410F95C4 		setne	r12b	#, _135
1005:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 14050              		.loc 1 1005 29 is_stmt 1 view .LVU4855
 14051              	.LVL834:
1005:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
GAS LISTING /tmp/ccLUVin9.s 			page 377


 14052              		.loc 1 1005 54 view .LVU4856
 14053              	# sieve_extend.c:1005:         case 100000:        valid_primes = 9592;     break;
1005:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 14054              		.loc 1 1005 9 is_stmt 0 view .LVU4857
 14055 4cc1 E9FAF9FF 		jmp	.L1028	#
 14055      FF
 14056              	.LVL835:
 14057              	.L1050:
 14058              	# sieve_extend.c:1005:         case 100000:        valid_primes = 9592;     break;
1005:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 14059              		.loc 1 1005 42 view .LVU4858
 14060 4cc6 B9782500 		mov	ecx, 9592	# valid_primes,
 14060      00
 14061 4ccb E90FFEFF 		jmp	.L1029	#
 14061      FF
 14062              		.cfi_endproc
 14063              	.LFE84:
 14065              		.section	.rodata.str1.8
 14066 0145 000000   		.align 8
 14067              	.LC14:
 14068 0148 55736167 		.string	"Usage: %s [options] [maximum]\n"
 14068      653A2025 
 14068      73205B6F 
 14068      7074696F 
 14068      6E735D20 
 14069              		.section	.rodata.str1.1
 14070              	.LC15:
 14071 0031 4F707469 		.string	"Options:\n"
 14071      6F6E733A 
 14071      0A00
 14072              		.section	.rodata.str1.8
 14073 0167 00       		.align 8
 14074              	.LC16:
 14075 0168 20202D2D 		.string	"  --verbose <level>  Show more output to a certain level:\n"
 14075      76657262 
 14075      6F736520 
 14075      3C6C6576 
 14075      656C3E20 
 14076 01a3 00000000 		.align 8
 14076      00
 14077              	.LC17:
 14078 01a8 20202020 		.string	"                     1 - show phase progress\n"
 14078      20202020 
 14078      20202020 
 14078      20202020 
 14078      20202020 
 14079 01d6 0000     		.align 8
 14080              	.LC18:
 14081 01d8 20202020 		.string	"                     2 - show general progress within the phase\n"
 14081      20202020 
 14081      20202020 
 14081      20202020 
 14081      20202020 
 14082 0219 00000000 		.align 8
 14082      000000
 14083              	.LC19:
 14084 0220 20202020 		.string	"                     3 - show actual work\n"
GAS LISTING /tmp/ccLUVin9.s 			page 378


 14084      20202020 
 14084      20202020 
 14084      20202020 
 14084      20202020 
 14085 024b 00000000 		.align 8
 14085      00
 14086              	.LC20:
 14087 0250 20202D2D 		.string	"  --check            check the correctness of the algorithm\n"
 14087      63686563 
 14087      6B202020 
 14087      20202020 
 14087      20202020 
 14088 028d 000000   		.align 8
 14089              	.LC21:
 14090 0290 20202D2D 		.string	"  --show <maximum>   Show the primes found up to the maximum\n"
 14090      73686F77 
 14090      203C6D61 
 14090      78696D75 
 14090      6D3E2020 
 14091 02ce 0000     		.align 8
 14092              	.LC22:
 14093 02d0 20202D2D 		.string	"  --tune  <level>    find the best settings for the current os and hardware\n"
 14093      74756E65 
 14093      20203C6C 
 14093      6576656C 
 14093      3E202020 
 14094 031d 000000   		.align 8
 14095              	.LC23:
 14096 0320 20202020 		.string	"                     1 - fast tuning\n"
 14096      20202020 
 14096      20202020 
 14096      20202020 
 14096      20202020 
 14097 0346 0000     		.align 8
 14098              	.LC24:
 14099 0348 20202020 		.string	"                     2 - refined tuning\n"
 14099      20202020 
 14099      20202020 
 14099      20202020 
 14099      20202020 
 14100 0371 00000000 		.align 8
 14100      000000
 14101              	.LC25:
 14102 0378 20202020 		.string	"                     3 - maximum tuning (takes long)\n"
 14102      20202020 
 14102      20202020 
 14102      20202020 
 14102      20202020 
 14103              		.text
 14104              		.p2align 4
 14105              		.globl	usage
 14107              	usage:
 14108              	.LVL836:
 14109              	.LFB85:
1023:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 14110              		.loc 1 1023 24 is_stmt 1 view -0
 14111              		.cfi_startproc
GAS LISTING /tmp/ccLUVin9.s 			page 379


1023:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 14112              		.loc 1 1023 24 is_stmt 0 view .LVU4860
 14113 4cd0 F30F1EFA 		endbr64	
 14114 4cd4 50       		push	rax	#
 14115              		.cfi_def_cfa_offset 16
 14116 4cd5 58       		pop	rax	#
 14117              		.cfi_def_cfa_offset 8
1024:sieve_extend.c ****     fprintf(stderr, "Options:\n");
 14118              		.loc 1 1024 5 is_stmt 1 view .LVU4861
 14119              	.LVL837:
 14120              	.LBB723:
 14121              	.LBI723:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14122              		.loc 3 98 1 view .LVU4862
 14123              	.LBB724:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14124              		.loc 3 100 3 view .LVU4863
 14125              	.LBE724:
 14126              	.LBE723:
 14127              	# sieve_extend.c:1023: void usage(char *name) {
1023:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 14128              		.loc 1 1023 24 is_stmt 0 view .LVU4864
 14129 4cd6 488D6424 		lea	rsp, -8[rsp]	#,
 14129      F8
 14130              		.cfi_def_cfa_offset 16
 14131              	# sieve_extend.c:1023: void usage(char *name) {
1023:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 14132              		.loc 1 1023 24 view .LVU4865
 14133 4cdb 4889F9   		mov	rcx, rdi	# name, tmp107
 14134              	.LBB726:
 14135              	.LBB725:
 14136              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14137              		.loc 3 100 10 view .LVU4866
 14138 4cde 488B3D00 		mov	rdi, QWORD PTR stderr[rip]	#, stderr
 14138      000000
 14139              	.LVL838:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14140              		.loc 3 100 10 view .LVU4867
 14141 4ce5 488D1500 		lea	rdx, .LC14[rip]	#,
 14141      000000
 14142 4cec BE010000 		mov	esi, 1	#,
 14142      00
 14143 4cf1 31C0     		xor	eax, eax	#
 14144 4cf3 E8000000 		call	__fprintf_chk@PLT	#
 14144      00
 14145              	.LVL839:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14146              		.loc 3 100 10 view .LVU4868
 14147              	.LBE725:
 14148              	.LBE726:
1025:sieve_extend.c ****     fprintf(stderr, "  --verbose <level>  Show more output to a certain level:\n");
 14149              		.loc 1 1025 5 is_stmt 1 view .LVU4869
 14150              	.LBB727:
 14151              	.LBI727:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14152              		.loc 3 98 1 view .LVU4870
GAS LISTING /tmp/ccLUVin9.s 			page 380


 14153              	.LBB728:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14154              		.loc 3 100 3 view .LVU4871
 14155              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14156              		.loc 3 100 10 is_stmt 0 view .LVU4872
 14157 4cf8 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 14157      000000
 14158 4cff BA090000 		mov	edx, 9	#,
 14158      00
 14159 4d04 BE010000 		mov	esi, 1	#,
 14159      00
 14160 4d09 488D3D00 		lea	rdi, .LC15[rip]	#,
 14160      000000
 14161 4d10 E8000000 		call	fwrite@PLT	#
 14161      00
 14162              	.LVL840:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14163              		.loc 3 100 10 view .LVU4873
 14164              	.LBE728:
 14165              	.LBE727:
1026:sieve_extend.c ****     fprintf(stderr, "                     1 - show phase progress\n");
 14166              		.loc 1 1026 5 is_stmt 1 view .LVU4874
 14167              	.LBB729:
 14168              	.LBI729:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14169              		.loc 3 98 1 view .LVU4875
 14170              	.LBB730:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14171              		.loc 3 100 3 view .LVU4876
 14172              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14173              		.loc 3 100 10 is_stmt 0 view .LVU4877
 14174 4d15 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 14174      000000
 14175 4d1c BA3A0000 		mov	edx, 58	#,
 14175      00
 14176 4d21 BE010000 		mov	esi, 1	#,
 14176      00
 14177 4d26 488D3D00 		lea	rdi, .LC16[rip]	#,
 14177      000000
 14178 4d2d E8000000 		call	fwrite@PLT	#
 14178      00
 14179              	.LVL841:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14180              		.loc 3 100 10 view .LVU4878
 14181              	.LBE730:
 14182              	.LBE729:
1027:sieve_extend.c ****     fprintf(stderr, "                     2 - show general progress within the phase\n");
 14183              		.loc 1 1027 5 is_stmt 1 view .LVU4879
 14184              	.LBB731:
 14185              	.LBI731:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14186              		.loc 3 98 1 view .LVU4880
 14187              	.LBB732:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14188              		.loc 3 100 3 view .LVU4881
GAS LISTING /tmp/ccLUVin9.s 			page 381


 14189              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14190              		.loc 3 100 10 is_stmt 0 view .LVU4882
 14191 4d32 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 14191      000000
 14192 4d39 BA2D0000 		mov	edx, 45	#,
 14192      00
 14193 4d3e BE010000 		mov	esi, 1	#,
 14193      00
 14194 4d43 488D3D00 		lea	rdi, .LC17[rip]	#,
 14194      000000
 14195 4d4a E8000000 		call	fwrite@PLT	#
 14195      00
 14196              	.LVL842:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14197              		.loc 3 100 10 view .LVU4883
 14198              	.LBE732:
 14199              	.LBE731:
1028:sieve_extend.c ****     fprintf(stderr, "                     3 - show actual work\n");
 14200              		.loc 1 1028 5 is_stmt 1 view .LVU4884
 14201              	.LBB733:
 14202              	.LBI733:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14203              		.loc 3 98 1 view .LVU4885
 14204              	.LBB734:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14205              		.loc 3 100 3 view .LVU4886
 14206              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14207              		.loc 3 100 10 is_stmt 0 view .LVU4887
 14208 4d4f 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 14208      000000
 14209 4d56 BA400000 		mov	edx, 64	#,
 14209      00
 14210 4d5b BE010000 		mov	esi, 1	#,
 14210      00
 14211 4d60 488D3D00 		lea	rdi, .LC18[rip]	#,
 14211      000000
 14212 4d67 E8000000 		call	fwrite@PLT	#
 14212      00
 14213              	.LVL843:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14214              		.loc 3 100 10 view .LVU4888
 14215              	.LBE734:
 14216              	.LBE733:
1029:sieve_extend.c ****     fprintf(stderr, "  --check            check the correctness of the algorithm\n");
 14217              		.loc 1 1029 5 is_stmt 1 view .LVU4889
 14218              	.LBB735:
 14219              	.LBI735:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14220              		.loc 3 98 1 view .LVU4890
 14221              	.LBB736:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14222              		.loc 3 100 3 view .LVU4891
 14223              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14224              		.loc 3 100 10 is_stmt 0 view .LVU4892
GAS LISTING /tmp/ccLUVin9.s 			page 382


 14225 4d6c 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 14225      000000
 14226 4d73 BA2A0000 		mov	edx, 42	#,
 14226      00
 14227 4d78 BE010000 		mov	esi, 1	#,
 14227      00
 14228 4d7d 488D3D00 		lea	rdi, .LC19[rip]	#,
 14228      000000
 14229 4d84 E8000000 		call	fwrite@PLT	#
 14229      00
 14230              	.LVL844:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14231              		.loc 3 100 10 view .LVU4893
 14232              	.LBE736:
 14233              	.LBE735:
1030:sieve_extend.c ****     fprintf(stderr, "  --show <maximum>   Show the primes found up to the maximum\n");
 14234              		.loc 1 1030 5 is_stmt 1 view .LVU4894
 14235              	.LBB737:
 14236              	.LBI737:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14237              		.loc 3 98 1 view .LVU4895
 14238              	.LBB738:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14239              		.loc 3 100 3 view .LVU4896
 14240              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14241              		.loc 3 100 10 is_stmt 0 view .LVU4897
 14242 4d89 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 14242      000000
 14243 4d90 BA3C0000 		mov	edx, 60	#,
 14243      00
 14244 4d95 BE010000 		mov	esi, 1	#,
 14244      00
 14245 4d9a 488D3D00 		lea	rdi, .LC20[rip]	#,
 14245      000000
 14246 4da1 E8000000 		call	fwrite@PLT	#
 14246      00
 14247              	.LVL845:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14248              		.loc 3 100 10 view .LVU4898
 14249              	.LBE738:
 14250              	.LBE737:
1031:sieve_extend.c ****     fprintf(stderr, "  --tune  <level>    find the best settings for the current os and hardware\n"
 14251              		.loc 1 1031 5 is_stmt 1 view .LVU4899
 14252              	.LBB739:
 14253              	.LBI739:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14254              		.loc 3 98 1 view .LVU4900
 14255              	.LBB740:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14256              		.loc 3 100 3 view .LVU4901
 14257              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14258              		.loc 3 100 10 is_stmt 0 view .LVU4902
 14259 4da6 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 14259      000000
 14260 4dad BA3D0000 		mov	edx, 61	#,
GAS LISTING /tmp/ccLUVin9.s 			page 383


 14260      00
 14261 4db2 BE010000 		mov	esi, 1	#,
 14261      00
 14262 4db7 488D3D00 		lea	rdi, .LC21[rip]	#,
 14262      000000
 14263 4dbe E8000000 		call	fwrite@PLT	#
 14263      00
 14264              	.LVL846:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14265              		.loc 3 100 10 view .LVU4903
 14266              	.LBE740:
 14267              	.LBE739:
1032:sieve_extend.c ****     fprintf(stderr, "                     1 - fast tuning\n");
 14268              		.loc 1 1032 5 is_stmt 1 view .LVU4904
 14269              	.LBB741:
 14270              	.LBI741:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14271              		.loc 3 98 1 view .LVU4905
 14272              	.LBB742:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14273              		.loc 3 100 3 view .LVU4906
 14274              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14275              		.loc 3 100 10 is_stmt 0 view .LVU4907
 14276 4dc3 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 14276      000000
 14277 4dca BA4C0000 		mov	edx, 76	#,
 14277      00
 14278 4dcf BE010000 		mov	esi, 1	#,
 14278      00
 14279 4dd4 488D3D00 		lea	rdi, .LC22[rip]	#,
 14279      000000
 14280 4ddb E8000000 		call	fwrite@PLT	#
 14280      00
 14281              	.LVL847:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14282              		.loc 3 100 10 view .LVU4908
 14283              	.LBE742:
 14284              	.LBE741:
1033:sieve_extend.c ****     fprintf(stderr, "                     2 - refined tuning\n");
 14285              		.loc 1 1033 5 is_stmt 1 view .LVU4909
 14286              	.LBB743:
 14287              	.LBI743:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14288              		.loc 3 98 1 view .LVU4910
 14289              	.LBB744:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14290              		.loc 3 100 3 view .LVU4911
 14291              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14292              		.loc 3 100 10 is_stmt 0 view .LVU4912
 14293 4de0 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 14293      000000
 14294 4de7 BA250000 		mov	edx, 37	#,
 14294      00
 14295 4dec BE010000 		mov	esi, 1	#,
 14295      00
GAS LISTING /tmp/ccLUVin9.s 			page 384


 14296 4df1 488D3D00 		lea	rdi, .LC23[rip]	#,
 14296      000000
 14297 4df8 E8000000 		call	fwrite@PLT	#
 14297      00
 14298              	.LVL848:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14299              		.loc 3 100 10 view .LVU4913
 14300              	.LBE744:
 14301              	.LBE743:
1034:sieve_extend.c ****     fprintf(stderr, "                     3 - maximum tuning (takes long)\n");
 14302              		.loc 1 1034 5 is_stmt 1 view .LVU4914
 14303              	.LBB745:
 14304              	.LBI745:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14305              		.loc 3 98 1 view .LVU4915
 14306              	.LBB746:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14307              		.loc 3 100 3 view .LVU4916
 14308              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14309              		.loc 3 100 10 is_stmt 0 view .LVU4917
 14310 4dfd 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 14310      000000
 14311 4e04 BA280000 		mov	edx, 40	#,
 14311      00
 14312 4e09 BE010000 		mov	esi, 1	#,
 14312      00
 14313 4e0e 488D3D00 		lea	rdi, .LC24[rip]	#,
 14313      000000
 14314 4e15 E8000000 		call	fwrite@PLT	#
 14314      00
 14315              	.LVL849:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14316              		.loc 3 100 10 view .LVU4918
 14317              	.LBE746:
 14318              	.LBE745:
1035:sieve_extend.c ****     exit(1);
 14319              		.loc 1 1035 5 is_stmt 1 view .LVU4919
 14320              	.LBB747:
 14321              	.LBI747:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14322              		.loc 3 98 1 view .LVU4920
 14323              	.LBB748:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14324              		.loc 3 100 3 view .LVU4921
 14325              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14326              		.loc 3 100 10 is_stmt 0 view .LVU4922
 14327 4e1a 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 14327      000000
 14328 4e21 488D3D00 		lea	rdi, .LC25[rip]	#,
 14328      000000
 14329 4e28 BA350000 		mov	edx, 53	#,
 14329      00
 14330 4e2d BE010000 		mov	esi, 1	#,
 14330      00
 14331 4e32 E8000000 		call	fwrite@PLT	#
GAS LISTING /tmp/ccLUVin9.s 			page 385


 14331      00
 14332              	.LVL850:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14333              		.loc 3 100 10 view .LVU4923
 14334              	.LBE748:
 14335              	.LBE747:
1036:sieve_extend.c **** }
 14336              		.loc 1 1036 5 is_stmt 1 view .LVU4924
 14337 4e37 BF010000 		mov	edi, 1	#,
 14337      00
 14338 4e3c E8000000 		call	exit@PLT	#
 14338      00
 14339              	.LVL851:
 14340              		.cfi_endproc
 14341              	.LFE85:
 14343              		.section	.rodata.str1.1
 14344              	.LC26:
 14345 003b 256400   		.string	"%d"
 14346              	.LC27:
 14347 003e 2C253033 		.string	",%03d"
 14347      6400
 14348              		.text
 14349 4e41 66662E0F 		.p2align 4
 14349      1F840000 
 14349      0000000F 
 14349      1F4000
 14350              		.globl	printfcomma2
 14352              	printfcomma2:
 14353              	.LVL852:
 14354              	.LFB90:
1082:sieve_extend.c **** 
1083:sieve_extend.c **** static inline void tuning_result_print(tuning_result_type tuning_result) {
1084:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
1085:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
1086:sieve_extend.c ****                             (uintmax_t)tuning_result.smallstep_faster,(uintmax_t)tuning_result.medi
1087:sieve_extend.c ****                             (uintmax_t)tuning_result.passes, (uintmax_t) tuning_result.sample_max,
1088:sieve_extend.c ****                             tuning_result.elapsed_time, tuning_result.sample_duration, tuning_resul
1089:sieve_extend.c **** }
1090:sieve_extend.c **** 
1091:sieve_extend.c **** static tuning_result_type tune(int tune_level, counter_t maxints, int option_verboselevel) {
1092:sieve_extend.c ****     counter_t best_blocksize_bits = default_blocksize;
1093:sieve_extend.c **** 
1094:sieve_extend.c ****     double best_avg = 0;
1095:sieve_extend.c ****     best_blocksize_bits = 0;
1096:sieve_extend.c ****     counter_t best_smallstep_faster = 0;
1097:sieve_extend.c ****     counter_t best_mediumstep_faster = 0;
1098:sieve_extend.c ****     counter_t best_vectorstep_faster = 0;
1099:sieve_extend.c ****     counter_t smallstep_faster_steps = 4;
1100:sieve_extend.c ****     counter_t mediumstep_faster_steps = 4;
1101:sieve_extend.c ****     counter_t vectorstep_faster_steps = 32;
1102:sieve_extend.c ****     counter_t freebits_steps = anticiped_cache_line_bytesize;
1103:sieve_extend.c ****     counter_t sample_max = default_sample_max;
1104:sieve_extend.c ****     double sample_duration = default_sample_duration;
1105:sieve_extend.c **** 
1106:sieve_extend.c ****     // determines the size of the resultset
1107:sieve_extend.c ****     switch (tune_level) {
1108:sieve_extend.c ****         case 1:
GAS LISTING /tmp/ccLUVin9.s 			page 386


1109:sieve_extend.c ****             smallstep_faster_steps  = WORD_SIZE/4;
1110:sieve_extend.c ****             mediumstep_faster_steps = WORD_SIZE/4;
1111:sieve_extend.c ****             vectorstep_faster_steps = WORD_SIZE/2;
1112:sieve_extend.c ****             freebits_steps = anticiped_cache_line_bytesize*8*2;
1113:sieve_extend.c ****             sample_max = 8;
1114:sieve_extend.c ****             sample_duration = 0.1;
1115:sieve_extend.c ****             break;
1116:sieve_extend.c ****         case 2:
1117:sieve_extend.c ****             smallstep_faster_steps  = WORD_SIZE/8;
1118:sieve_extend.c ****             mediumstep_faster_steps = WORD_SIZE/8;
1119:sieve_extend.c ****             vectorstep_faster_steps = WORD_SIZE/4;
1120:sieve_extend.c ****             freebits_steps = anticiped_cache_line_bytesize*8;
1121:sieve_extend.c ****             sample_max = 8;
1122:sieve_extend.c ****             sample_duration = 0.2;
1123:sieve_extend.c ****             break;
1124:sieve_extend.c ****         case 3:
1125:sieve_extend.c ****             smallstep_faster_steps  = WORD_SIZE/16;
1126:sieve_extend.c ****             mediumstep_faster_steps = WORD_SIZE/16;
1127:sieve_extend.c ****             vectorstep_faster_steps = WORD_SIZE/16;
1128:sieve_extend.c ****             freebits_steps = anticiped_cache_line_bytesize/2;
1129:sieve_extend.c ****             sample_max = 8;
1130:sieve_extend.c ****             sample_duration = 0.2;
1131:sieve_extend.c ****             break;
1132:sieve_extend.c ****     }
1133:sieve_extend.c ****     
1134:sieve_extend.c ****     if (option_verboselevel >= 1) printf("Tuning..."); 
1135:sieve_extend.c ****     if (option_verboselevel >= 2) printf("\n");
1136:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
1137:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
1138:sieve_extend.c ****     counter_t tuning_results=0;
1139:sieve_extend.c ****     counter_t tuning_result_index=0;
1140:sieve_extend.c ****     
1141:sieve_extend.c ****     for (counter_t smallstep_faster = 0; smallstep_faster <= WORD_SIZE_counter/2; smallstep_faster 
1142:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE_counter
1143:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE_
1144:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
1145:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
1146:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
1147:sieve_extend.c **** 
1148:sieve_extend.c ****                         // set variables
1149:sieve_extend.c ****                         tuning_results++;
1150:sieve_extend.c ****                         tuning_result[tuning_result_index].maxints = maxints;
1151:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_duration = sample_duration;
1152:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_max = sample_max;
1153:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_kb = blocksize_kb;
1154:sieve_extend.c ****                         tuning_result[tuning_result_index].free_bits = free_bits;
1155:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_bits = blocksize_bits;
1156:sieve_extend.c ****                         tuning_result[tuning_result_index].smallstep_faster = smallstep_faster;
1157:sieve_extend.c ****                         tuning_result[tuning_result_index].mediumstep_faster = mediumstep_faster;
1158:sieve_extend.c ****                         tuning_result[tuning_result_index].vectorstep_faster = vectorstep_faster;
1159:sieve_extend.c ****                         tune_benchmark(tuning_result, tuning_result_index);
1160:sieve_extend.c **** 
1161:sieve_extend.c ****                         if ( tuning_result[tuning_result_index].avg > best_avg) {
1162:sieve_extend.c ****                             best_avg = tuning_result[tuning_result_index].avg;
1163:sieve_extend.c ****                             best_blocksize_bits = blocksize_bits;
1164:sieve_extend.c ****                             best_smallstep_faster = smallstep_faster;
1165:sieve_extend.c ****                             best_mediumstep_faster = mediumstep_faster;
GAS LISTING /tmp/ccLUVin9.s 			page 387


1166:sieve_extend.c ****                             best_vectorstep_faster = vectorstep_faster;
1167:sieve_extend.c ****                             if (option_verboselevel >=2) { printf(".(>)"); tuning_result_print(tuni
1168:sieve_extend.c ****                         }
1169:sieve_extend.c ****                         if (option_verboselevel >= 3) { printf("...."); tuning_result_print(tuning_
1170:sieve_extend.c ****                         tuning_result_index++;
1171:sieve_extend.c ****                     }
1172:sieve_extend.c ****                 }
1173:sieve_extend.c ****             }
1174:sieve_extend.c ****         }
1175:sieve_extend.c ****     }
1176:sieve_extend.c ****     if (option_verboselevel >= 2) {
1177:sieve_extend.c ****         printf("%ju results. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju; b
1178:sieve_extend.c ****         printf("Best options\n");
1179:sieve_extend.c ****     }
1180:sieve_extend.c ****     counter_t step=0;
1181:sieve_extend.c ****     while (tuning_results>4) {
1182:sieve_extend.c ****         qsort(tuning_result, (size_t)tuning_results, sizeof(tuning_result_type), compare_tuning_res
1183:sieve_extend.c ****         step++;
1184:sieve_extend.c ****         if (option_verboselevel >= 2) {
1185:sieve_extend.c ****             tuning_result_index = 0;
1186:sieve_extend.c ****             printf("(%ju) ",(uintmax_t)step); tuning_result_print(tuning_result[tuning_result_index
1187:sieve_extend.c ****             if (option_verboselevel >= 3) {
1188:sieve_extend.c ****                 for (counter_t tuning_result_index=0; tuning_result_index<min(10,tuning_results); t
1189:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
1190:sieve_extend.c ****                 }
1191:sieve_extend.c ****             }
1192:sieve_extend.c ****         }
1193:sieve_extend.c **** 
1194:sieve_extend.c ****         tuning_results = tuning_results / 2;
1195:sieve_extend.c **** 
1196:sieve_extend.c ****         for (counter_t i=0; i<tuning_results; i++) {
1197:sieve_extend.c ****             tune_benchmark(tuning_result, i);
1198:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
1199:sieve_extend.c ****         }
1200:sieve_extend.c ****         
1201:sieve_extend.c ****     }
1202:sieve_extend.c ****     tuning_result_type best_result = tuning_result[0];
1203:sieve_extend.c ****     if (option_verboselevel >= 1) {
1204:sieve_extend.c ****         tuning_result_index = 0;
1205:sieve_extend.c ****         printf(".Best result:"); tuning_result_print(tuning_result[tuning_result_index]);
1206:sieve_extend.c ****     }
1207:sieve_extend.c **** 
1208:sieve_extend.c ****     free(tuning_result);
1209:sieve_extend.c ****     return best_result;
1210:sieve_extend.c **** }
1211:sieve_extend.c **** 
1212:sieve_extend.c **** void printfcomma2 (int n) {
 14355              		.loc 1 1212 27 view -0
 14356              		.cfi_startproc
 14357              		.loc 1 1212 27 is_stmt 0 view .LVU4926
 14358 4e50 F30F1EFA 		endbr64	
1213:sieve_extend.c ****     if (n < 1000) {
 14359              		.loc 1 1213 5 is_stmt 1 view .LVU4927
 14360              	# sieve_extend.c:1212: void printfcomma2 (int n) {
1212:sieve_extend.c ****     if (n < 1000) {
 14361              		.loc 1 1212 27 is_stmt 0 view .LVU4928
 14362 4e54 4154     		push	r12	#
GAS LISTING /tmp/ccLUVin9.s 			page 388


 14363              		.cfi_def_cfa_offset 16
 14364              		.cfi_offset 12, -16
 14365              	.LBB759:
 14366              	.LBB760:
 14367              	.LBB761:
 14368              	.LBB762:
 14369              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14370              		.loc 3 107 10 view .LVU4929
 14371 4e56 89FA     		mov	edx, edi	#, n
 14372              	.LBE762:
 14373              	.LBE761:
 14374              	.LBE760:
 14375              	.LBE759:
 14376              	# sieve_extend.c:1212: void printfcomma2 (int n) {
1212:sieve_extend.c ****     if (n < 1000) {
 14377              		.loc 1 1212 27 view .LVU4930
 14378 4e58 4189FC   		mov	r12d, edi	# n, tmp99
 14379 4e5b 53       		push	rbx	#
 14380              		.cfi_def_cfa_offset 24
 14381              		.cfi_offset 3, -24
 14382              	.LBB766:
 14383              	.LBB765:
 14384              	.LBB764:
 14385              	.LBB763:
 14386              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14387              		.loc 3 107 10 view .LVU4931
 14388 4e5c 488D3500 		lea	rsi, .LC26[rip]	#,
 14388      000000
 14389              	.LBE763:
 14390              	.LBE764:
 14391              	.LBE765:
 14392              	.LBE766:
 14393              	# sieve_extend.c:1212: void printfcomma2 (int n) {
1212:sieve_extend.c ****     if (n < 1000) {
 14394              		.loc 1 1212 27 view .LVU4932
 14395 4e63 488D6424 		lea	rsp, -8[rsp]	#,
 14395      F8
 14396              		.cfi_def_cfa_offset 32
 14397              	# sieve_extend.c:1213:     if (n < 1000) {
 14398              		.loc 1 1213 8 view .LVU4933
 14399 4e68 81FFE703 		cmp	edi, 999	# n,
 14399      0000
 14400 4e6e 7E2E     		jle	.L1170	#,
1214:sieve_extend.c ****         printf ("%d", n);
1215:sieve_extend.c ****         return;
1216:sieve_extend.c ****     }
1217:sieve_extend.c ****     printfcomma2 (n/1000);
 14401              		.loc 1 1217 5 is_stmt 1 view .LVU4934
 14402 4e70 4863DF   		movsx	rbx, edi	# n, n
 14403 4e73 89F8     		mov	eax, edi	# tmp90, n
 14404 4e75 4869DBD3 		imul	rbx, rbx, 274877907	# tmp87, n,
 14404      4D6210
 14405 4e7c C1F81F   		sar	eax, 31	# tmp90,
 14406 4e7f 48C1FB26 		sar	rbx, 38	# tmp89,
 14407 4e83 29C3     		sub	ebx, eax	# tmp85, tmp90
 14408 4e85 89DF     		mov	edi, ebx	#, tmp85
 14409              	.LVL853:
GAS LISTING /tmp/ccLUVin9.s 			page 389


 14410              		.loc 1 1217 5 is_stmt 0 view .LVU4935
 14411 4e87 E8000000 		call	printfcomma2	#
 14411      00
 14412              	.LVL854:
1218:sieve_extend.c ****     printf (",%03d", n%1000);
 14413              		.loc 1 1218 5 is_stmt 1 view .LVU4936
 14414              	.LBB767:
 14415              	.LBI767:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14416              		.loc 3 105 1 view .LVU4937
 14417              	.LBB768:
 14418              		.loc 3 107 3 view .LVU4938
 14419              	.LBE768:
 14420              	.LBE767:
 14421              	# sieve_extend.c:1218:     printf (",%03d", n%1000);
 14422              		.loc 1 1218 5 is_stmt 0 view .LVU4939
 14423 4e8c 69CBE803 		imul	ecx, ebx, 1000	# tmp97, tmp85,
 14423      0000
 14424 4e92 4489E2   		mov	edx, r12d	# n, n
 14425              	.LBB773:
 14426              	.LBB769:
 14427              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14428              		.loc 3 107 10 view .LVU4940
 14429 4e95 488D3500 		lea	rsi, .LC27[rip]	#,
 14429      000000
 14430              	.LBE769:
 14431              	.LBE773:
 14432              	# sieve_extend.c:1218:     printf (",%03d", n%1000);
 14433              		.loc 1 1218 5 view .LVU4941
 14434 4e9c 29CA     		sub	edx, ecx	# n, tmp97
 14435              	.LVL855:
 14436              	.L1170:
 14437              	# sieve_extend.c:1219: }
1219:sieve_extend.c **** }
 14438              		.loc 1 1219 1 view .LVU4942
 14439 4e9e 488D6424 		lea	rsp, 8[rsp]	#,
 14439      08
 14440              		.cfi_def_cfa_offset 24
 14441              	.LBB774:
 14442              	.LBB770:
 14443              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14444              		.loc 3 107 10 view .LVU4943
 14445 4ea3 BF010000 		mov	edi, 1	#,
 14445      00
 14446              	.LBE770:
 14447              	.LBE774:
 14448              	# sieve_extend.c:1219: }
 14449              		.loc 1 1219 1 view .LVU4944
 14450 4ea8 5B       		pop	rbx	#
 14451              		.cfi_def_cfa_offset 16
 14452              	.LBB775:
 14453              	.LBB771:
 14454              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14455              		.loc 3 107 10 view .LVU4945
 14456 4ea9 31C0     		xor	eax, eax	#
 14457              	.LBE771:
 14458              	.LBE775:
GAS LISTING /tmp/ccLUVin9.s 			page 390


 14459              	# sieve_extend.c:1219: }
 14460              		.loc 1 1219 1 view .LVU4946
 14461 4eab 415C     		pop	r12	#
 14462              		.cfi_def_cfa_offset 8
 14463              	.LVL856:
 14464              	.LBB776:
 14465              	.LBB772:
 14466              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14467              		.loc 3 107 10 view .LVU4947
 14468 4ead E9000000 		jmp	__printf_chk@PLT	#
 14468      00
 14469              	.LVL857:
 14470              	.LBE772:
 14471              	.LBE776:
 14472              		.cfi_endproc
 14473              	.LFE90:
 14475 4eb2 66662E0F 		.p2align 4
 14475      1F840000 
 14475      0000000F 
 14475      1F00
 14476              		.globl	printfcomma
 14478              	printfcomma:
 14479              	.LVL858:
 14480              	.LFB91:
1220:sieve_extend.c **** 
1221:sieve_extend.c **** void printfcomma (int n) {
 14481              		.loc 1 1221 26 is_stmt 1 view -0
 14482              		.cfi_startproc
 14483              		.loc 1 1221 26 is_stmt 0 view .LVU4949
 14484 4ec0 F30F1EFA 		endbr64	
1222:sieve_extend.c ****     if (n < 0) {
 14485              		.loc 1 1222 5 is_stmt 1 view .LVU4950
 14486              	# sieve_extend.c:1221: void printfcomma (int n) {
1221:sieve_extend.c ****     if (n < 0) {
 14487              		.loc 1 1221 26 is_stmt 0 view .LVU4951
 14488 4ec4 4157     		push	r15	#
 14489              		.cfi_def_cfa_offset 16
 14490              		.cfi_offset 15, -16
 14491 4ec6 4156     		push	r14	#
 14492              		.cfi_def_cfa_offset 24
 14493              		.cfi_offset 14, -24
 14494 4ec8 4155     		push	r13	#
 14495              		.cfi_def_cfa_offset 32
 14496              		.cfi_offset 13, -32
 14497 4eca 4154     		push	r12	#
 14498              		.cfi_def_cfa_offset 40
 14499              		.cfi_offset 12, -40
 14500 4ecc 4189FC   		mov	r12d, edi	# n, tmp159
 14501 4ecf 55       		push	rbp	#
 14502              		.cfi_def_cfa_offset 48
 14503              		.cfi_offset 6, -48
 14504 4ed0 53       		push	rbx	#
 14505              		.cfi_def_cfa_offset 56
 14506              		.cfi_offset 3, -56
 14507 4ed1 488D6424 		lea	rsp, -8[rsp]	#,
 14507      F8
 14508              		.cfi_def_cfa_offset 64
GAS LISTING /tmp/ccLUVin9.s 			page 391


 14509              	# sieve_extend.c:1222:     if (n < 0) {
 14510              		.loc 1 1222 8 view .LVU4952
 14511 4ed6 85FF     		test	edi, edi	# n
 14512 4ed8 0F880A01 		js	.L1180	#,
 14512      0000
 14513              	.LVL859:
 14514              	.L1172:
1223:sieve_extend.c ****         printf ("-");
1224:sieve_extend.c ****         n = -n;
1225:sieve_extend.c ****     }
1226:sieve_extend.c ****     printfcomma2 (n);
 14515              		.loc 1 1226 5 is_stmt 1 view .LVU4953
 14516              	.LBB829:
 14517              	.LBI829:
1212:sieve_extend.c ****     if (n < 1000) {
 14518              		.loc 1 1212 6 view .LVU4954
 14519              	.LBB830:
1213:sieve_extend.c ****         printf ("%d", n);
 14520              		.loc 1 1213 5 view .LVU4955
 14521              	# sieve_extend.c:1213:     if (n < 1000) {
1213:sieve_extend.c ****         printf ("%d", n);
 14522              		.loc 1 1213 8 is_stmt 0 view .LVU4956
 14523 4ede 4181FCE7 		cmp	r12d, 999	# n,
 14523      030000
 14524              	.LBB831:
 14525              	.LBB832:
 14526              	.LBB833:
 14527              	.LBB834:
 14528              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14529              		.loc 3 107 10 view .LVU4957
 14530 4ee5 4489E2   		mov	edx, r12d	#, n
 14531 4ee8 488D3500 		lea	rsi, .LC26[rip]	#,
 14531      000000
 14532              	.LBE834:
 14533              	.LBE833:
 14534              	.LBE832:
 14535              	.LBE831:
 14536              	# sieve_extend.c:1213:     if (n < 1000) {
1213:sieve_extend.c ****         printf ("%d", n);
 14537              		.loc 1 1213 8 view .LVU4958
 14538 4eef 0F8EBF00 		jle	.L1179	#,
 14538      0000
 14539              	.LVL860:
1217:sieve_extend.c ****     printf (",%03d", n%1000);
 14540              		.loc 1 1217 5 is_stmt 1 view .LVU4959
 14541 4ef5 4489E3   		mov	ebx, r12d	# n, n
 14542 4ef8 4C69EBD3 		imul	r13, rbx, 274877907	# tmp90, n,
 14542      4D6210
 14543 4eff 49C1ED26 		shr	r13, 38	# _8,
 14544              	.LVL861:
 14545              	.LBB835:
 14546              	.LBI835:
1212:sieve_extend.c ****     if (n < 1000) {
 14547              		.loc 1 1212 6 view .LVU4960
 14548              	.LBB836:
1213:sieve_extend.c ****         printf ("%d", n);
 14549              		.loc 1 1213 5 view .LVU4961
GAS LISTING /tmp/ccLUVin9.s 			page 392


 14550              	# sieve_extend.c:1213:     if (n < 1000) {
1213:sieve_extend.c ****         printf ("%d", n);
 14551              		.loc 1 1213 8 is_stmt 0 view .LVU4962
 14552 4f03 4181FC3F 		cmp	r12d, 999999	# n,
 14552      420F00
 14553 4f0a 0F8EC000 		jle	.L1181	#,
 14553      0000
1217:sieve_extend.c ****     printf (",%03d", n%1000);
 14554              		.loc 1 1217 5 is_stmt 1 view .LVU4963
 14555 4f10 4489ED   		mov	ebp, r13d	# _8, _8
 14556 4f13 4C69F5D3 		imul	r14, rbp, 274877907	# tmp98, _8,
 14556      4D6210
 14557 4f1a 49C1EE26 		shr	r14, 38	# _10,
 14558              	.LVL862:
 14559              	.LBB837:
 14560              	.LBI837:
1212:sieve_extend.c ****     if (n < 1000) {
 14561              		.loc 1 1212 6 view .LVU4964
 14562              	.LBB838:
1213:sieve_extend.c ****         printf ("%d", n);
 14563              		.loc 1 1213 5 view .LVU4965
 14564              	# sieve_extend.c:1213:     if (n < 1000) {
1213:sieve_extend.c ****         printf ("%d", n);
 14565              		.loc 1 1213 8 is_stmt 0 view .LVU4966
 14566 4f1e 4181FCFF 		cmp	r12d, 999999999	# n,
 14566      C99A3B
 14567 4f25 0F8ED500 		jle	.L1182	#,
 14567      0000
1217:sieve_extend.c ****     printf (",%03d", n%1000);
 14568              		.loc 1 1217 5 is_stmt 1 view .LVU4967
 14569              	.LVL863:
 14570              	.LBB839:
 14571              	.LBI839:
1212:sieve_extend.c ****     if (n < 1000) {
 14572              		.loc 1 1212 6 view .LVU4968
 14573              	.LBE839:
 14574              	.LBE838:
 14575              	.LBE837:
 14576              	.LBE836:
 14577              	.LBE835:
 14578              	.LBE830:
 14579              	.LBE829:
1213:sieve_extend.c ****         printf ("%d", n);
 14580              		.loc 1 1213 5 view .LVU4969
 14581              	.LBB905:
 14582              	.LBB900:
 14583              	.LBB887:
 14584              	.LBB884:
 14585              	.LBB872:
 14586              	.LBB870:
 14587              	.LBB856:
 14588              	.LBB840:
 14589              	.LBI840:
1212:sieve_extend.c ****     if (n < 1000) {
 14590              		.loc 1 1212 6 view .LVU4970
 14591              	.LBB841:
1214:sieve_extend.c ****         return;
GAS LISTING /tmp/ccLUVin9.s 			page 393


 14592              		.loc 1 1214 9 view .LVU4971
 14593              	.LBB842:
 14594              	.LBI842:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14595              		.loc 3 105 1 view .LVU4972
 14596              	.LBB843:
 14597              		.loc 3 107 3 view .LVU4973
 14598              	.LBE843:
 14599              	.LBE842:
 14600              	.LBE841:
 14601              	.LBE840:
 14602              	.LBE856:
 14603              	# sieve_extend.c:1217:     printfcomma2 (n/1000);
1217:sieve_extend.c ****     printf (",%03d", n%1000);
 14604              		.loc 1 1217 5 is_stmt 0 view .LVU4974
 14605 4f2b 4589F7   		mov	r15d, r14d	# _10, _10
 14606              	.LBB857:
 14607              	.LBB853:
 14608              	.LBB850:
 14609              	.LBB847:
 14610              	.LBB844:
 14611              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14612              		.loc 3 107 10 view .LVU4975
 14613 4f2e 488D3500 		lea	rsi, .LC26[rip]	#,
 14613      000000
 14614              	.LBE844:
 14615              	.LBE847:
 14616              	.LBE850:
 14617              	.LBE853:
 14618              	.LBE857:
 14619              	# sieve_extend.c:1217:     printfcomma2 (n/1000);
1217:sieve_extend.c ****     printf (",%03d", n%1000);
 14620              		.loc 1 1217 5 view .LVU4976
 14621 4f35 4D69FFD3 		imul	r15, r15, 274877907	# tmp107, _10,
 14621      4D6210
 14622              	.LBB858:
 14623              	.LBB854:
 14624              	.LBB851:
 14625              	.LBB848:
 14626              	.LBB845:
 14627              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14628              		.loc 3 107 10 view .LVU4977
 14629 4f3c BF010000 		mov	edi, 1	#,
 14629      00
 14630 4f41 31C0     		xor	eax, eax	#
 14631              	.LBE845:
 14632              	.LBE848:
 14633              	.LBE851:
 14634              	.LBE854:
 14635              	.LBE858:
 14636              	# sieve_extend.c:1217:     printfcomma2 (n/1000);
1217:sieve_extend.c ****     printf (",%03d", n%1000);
 14637              		.loc 1 1217 5 view .LVU4978
 14638 4f43 49C1EF26 		shr	r15, 38	# tmp105,
 14639              	.LBB859:
 14640              	.LBB855:
 14641              	.LBB852:
GAS LISTING /tmp/ccLUVin9.s 			page 394


 14642              	.LBB849:
 14643              	.LBB846:
 14644              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14645              		.loc 3 107 10 view .LVU4979
 14646 4f47 4489FA   		mov	edx, r15d	#, tmp105
 14647              	.LVL864:
 14648              		.loc 3 107 10 view .LVU4980
 14649 4f4a E8000000 		call	__printf_chk@PLT	#
 14649      00
 14650              	.LVL865:
 14651              		.loc 3 107 10 view .LVU4981
 14652              	.LBE846:
 14653              	.LBE849:
1215:sieve_extend.c ****     }
 14654              		.loc 1 1215 9 is_stmt 1 view .LVU4982
1215:sieve_extend.c ****     }
 14655              		.loc 1 1215 9 is_stmt 0 view .LVU4983
 14656              	.LBE852:
 14657              	.LBE855:
 14658              	.LBE859:
1218:sieve_extend.c **** }
 14659              		.loc 1 1218 5 is_stmt 1 view .LVU4984
 14660              	.LBB860:
 14661              	.LBI860:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14662              		.loc 3 105 1 view .LVU4985
 14663              	.LBB861:
 14664              		.loc 3 107 3 view .LVU4986
 14665              	.LBE861:
 14666              	.LBE860:
 14667              	# sieve_extend.c:1218:     printf (",%03d", n%1000);
1218:sieve_extend.c **** }
 14668              		.loc 1 1218 5 is_stmt 0 view .LVU4987
 14669 4f4f 4169C7E8 		imul	eax, r15d, 1000	# tmp119, tmp105,
 14669      030000
 14670 4f56 4489F2   		mov	edx, r14d	# _10, _10
 14671              	.LBB864:
 14672              	.LBB862:
 14673              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14674              		.loc 3 107 10 view .LVU4988
 14675 4f59 488D3500 		lea	rsi, .LC27[rip]	#,
 14675      000000
 14676 4f60 BF010000 		mov	edi, 1	#,
 14676      00
 14677              	.LBE862:
 14678              	.LBE864:
 14679              	# sieve_extend.c:1218:     printf (",%03d", n%1000);
1218:sieve_extend.c **** }
 14680              		.loc 1 1218 5 view .LVU4989
 14681 4f65 29C2     		sub	edx, eax	# _10, tmp119
 14682              	.LBB865:
 14683              	.LBB863:
 14684              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14685              		.loc 3 107 10 view .LVU4990
 14686 4f67 31C0     		xor	eax, eax	#
 14687 4f69 E8000000 		call	__printf_chk@PLT	#
 14687      00
GAS LISTING /tmp/ccLUVin9.s 			page 395


 14688              	.LVL866:
 14689              	.L1177:
 14690              		.loc 3 107 10 view .LVU4991
 14691              	.LBE863:
 14692              	.LBE865:
 14693              	.LBE870:
 14694              	.LBE872:
1218:sieve_extend.c **** }
 14695              		.loc 1 1218 5 is_stmt 1 view .LVU4992
 14696              	.LBB873:
 14697              	.LBI873:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14698              		.loc 3 105 1 view .LVU4993
 14699              	.LBB874:
 14700              		.loc 3 107 3 view .LVU4994
 14701              	.LBE874:
 14702              	.LBE873:
 14703              	# sieve_extend.c:1218:     printf (",%03d", n%1000);
1218:sieve_extend.c **** }
 14704              		.loc 1 1218 5 is_stmt 0 view .LVU4995
 14705 4f6e 4869D5D3 		imul	rdx, rbp, 274877907	# tmp131, _8,
 14705      4D6210
 14706              	.LBB877:
 14707              	.LBB875:
 14708              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14709              		.loc 3 107 10 view .LVU4996
 14710 4f75 488D3500 		lea	rsi, .LC27[rip]	#,
 14710      000000
 14711 4f7c BF010000 		mov	edi, 1	#,
 14711      00
 14712 4f81 31C0     		xor	eax, eax	#
 14713              	.LBE875:
 14714              	.LBE877:
 14715              	# sieve_extend.c:1218:     printf (",%03d", n%1000);
1218:sieve_extend.c **** }
 14716              		.loc 1 1218 5 view .LVU4997
 14717 4f83 48C1EA26 		shr	rdx, 38	# tmp129,
 14718 4f87 69CAE803 		imul	ecx, edx, 1000	# tmp133, tmp129,
 14718      0000
 14719 4f8d 4489EA   		mov	edx, r13d	# _8, _8
 14720 4f90 29CA     		sub	edx, ecx	# _8, tmp133
 14721              	.LBB878:
 14722              	.LBB876:
 14723              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14724              		.loc 3 107 10 view .LVU4998
 14725 4f92 E8000000 		call	__printf_chk@PLT	#
 14725      00
 14726              	.LVL867:
 14727              	.L1175:
 14728              		.loc 3 107 10 view .LVU4999
 14729              	.LBE876:
 14730              	.LBE878:
 14731              	.LBE884:
 14732              	.LBE887:
1218:sieve_extend.c **** }
 14733              		.loc 1 1218 5 is_stmt 1 view .LVU5000
 14734              	.LBB888:
GAS LISTING /tmp/ccLUVin9.s 			page 396


 14735              	.LBI888:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14736              		.loc 3 105 1 view .LVU5001
 14737              	.LBB889:
 14738              		.loc 3 107 3 view .LVU5002
 14739              	.LBE889:
 14740              	.LBE888:
 14741              	# sieve_extend.c:1218:     printf (",%03d", n%1000);
1218:sieve_extend.c **** }
 14742              		.loc 1 1218 5 is_stmt 0 view .LVU5003
 14743 4f97 4869F3D3 		imul	rsi, rbx, 274877907	# tmp145, n,
 14743      4D6210
 14744 4f9e 4489E2   		mov	edx, r12d	# n, n
 14745 4fa1 48C1EE26 		shr	rsi, 38	# tmp143,
 14746 4fa5 69FEE803 		imul	edi, esi, 1000	# tmp147, tmp143,
 14746      0000
 14747              	.LBB894:
 14748              	.LBB890:
 14749              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14750              		.loc 3 107 10 view .LVU5004
 14751 4fab 488D3500 		lea	rsi, .LC27[rip]	#,
 14751      000000
 14752              	.LBE890:
 14753              	.LBE894:
 14754              	# sieve_extend.c:1218:     printf (",%03d", n%1000);
1218:sieve_extend.c **** }
 14755              		.loc 1 1218 5 view .LVU5005
 14756 4fb2 29FA     		sub	edx, edi	# n, tmp147
 14757              	.LVL868:
 14758              	.L1179:
1218:sieve_extend.c **** }
 14759              		.loc 1 1218 5 view .LVU5006
 14760              	.LBE900:
 14761              	.LBE905:
 14762              	# sieve_extend.c:1227: }
1227:sieve_extend.c **** }
 14763              		.loc 1 1227 1 view .LVU5007
 14764 4fb4 488D6424 		lea	rsp, 8[rsp]	#,
 14764      08
 14765              		.cfi_remember_state
 14766              		.cfi_def_cfa_offset 56
 14767              	.LBB906:
 14768              	.LBB901:
 14769              	.LBB895:
 14770              	.LBB891:
 14771              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14772              		.loc 3 107 10 view .LVU5008
 14773 4fb9 BF010000 		mov	edi, 1	#,
 14773      00
 14774              	.LBE891:
 14775              	.LBE895:
 14776              	.LBE901:
 14777              	.LBE906:
 14778              	# sieve_extend.c:1227: }
 14779              		.loc 1 1227 1 view .LVU5009
 14780 4fbe 5B       		pop	rbx	#
 14781              		.cfi_def_cfa_offset 48
GAS LISTING /tmp/ccLUVin9.s 			page 397


 14782              	.LBB907:
 14783              	.LBB902:
 14784              	.LBB896:
 14785              	.LBB892:
 14786              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14787              		.loc 3 107 10 view .LVU5010
 14788 4fbf 31C0     		xor	eax, eax	#
 14789              	.LBE892:
 14790              	.LBE896:
 14791              	.LBE902:
 14792              	.LBE907:
 14793              	# sieve_extend.c:1227: }
 14794              		.loc 1 1227 1 view .LVU5011
 14795 4fc1 5D       		pop	rbp	#
 14796              		.cfi_def_cfa_offset 40
 14797 4fc2 415C     		pop	r12	#
 14798              		.cfi_def_cfa_offset 32
 14799              	.LVL869:
 14800              		.loc 1 1227 1 view .LVU5012
 14801 4fc4 415D     		pop	r13	#
 14802              		.cfi_def_cfa_offset 24
 14803 4fc6 415E     		pop	r14	#
 14804              		.cfi_def_cfa_offset 16
 14805 4fc8 415F     		pop	r15	#
 14806              		.cfi_def_cfa_offset 8
 14807              	.LBB908:
 14808              	.LBB903:
 14809              	.LBB897:
 14810              	.LBB893:
 14811              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14812              		.loc 3 107 10 view .LVU5013
 14813 4fca E9000000 		jmp	__printf_chk@PLT	#
 14813      00
 14814              	.LVL870:
 14815 4fcf 90       		.p2align 4,,7
 14816              		.p2align 3
 14817              	.L1181:
 14818              		.cfi_restore_state
 14819              		.loc 3 107 10 view .LVU5014
 14820              	.LBE893:
 14821              	.LBE897:
 14822              	.LBB898:
 14823              	.LBB885:
 14824              	.LBB879:
 14825              	.LBI879:
1212:sieve_extend.c ****     if (n < 1000) {
 14826              		.loc 1 1212 6 is_stmt 1 view .LVU5015
 14827              	.LBB880:
1214:sieve_extend.c ****         return;
 14828              		.loc 1 1214 9 view .LVU5016
 14829              	.LBB881:
 14830              	.LBI881:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14831              		.loc 3 105 1 view .LVU5017
 14832              	.LBB882:
 14833              		.loc 3 107 3 view .LVU5018
 14834              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
GAS LISTING /tmp/ccLUVin9.s 			page 398


 14835              		.loc 3 107 10 is_stmt 0 view .LVU5019
 14836 4fd0 4489EA   		mov	edx, r13d	#, _8
 14837              	.LVL871:
 14838              		.loc 3 107 10 view .LVU5020
 14839 4fd3 488D3500 		lea	rsi, .LC26[rip]	#,
 14839      000000
 14840 4fda BF010000 		mov	edi, 1	#,
 14840      00
 14841 4fdf 31C0     		xor	eax, eax	#
 14842 4fe1 E8000000 		call	__printf_chk@PLT	#
 14842      00
 14843              	.LVL872:
 14844              		.loc 3 107 10 view .LVU5021
 14845              	.LBE882:
 14846              	.LBE881:
1215:sieve_extend.c ****     }
 14847              		.loc 1 1215 9 is_stmt 1 view .LVU5022
 14848 4fe6 EBAF     		jmp	.L1175	#
 14849              	.LVL873:
 14850              		.p2align 4,,7
 14851              		.p2align 3
 14852              	.L1180:
1215:sieve_extend.c ****     }
 14853              		.loc 1 1215 9 is_stmt 0 view .LVU5023
 14854              	.LBE880:
 14855              	.LBE879:
 14856              	.LBE885:
 14857              	.LBE898:
 14858              	.LBE903:
 14859              	.LBE908:
1223:sieve_extend.c ****         n = -n;
 14860              		.loc 1 1223 9 is_stmt 1 view .LVU5024
 14861              	.LBB909:
 14862              	.LBI909:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14863              		.loc 3 105 1 view .LVU5025
 14864              	.LBB910:
 14865              		.loc 3 107 3 view .LVU5026
 14866              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14867              		.loc 3 107 10 is_stmt 0 view .LVU5027
 14868 4fe8 BF2D0000 		mov	edi, 45	#,
 14868      00
 14869              	.LVL874:
 14870              		.loc 3 107 10 view .LVU5028
 14871              	.LBE910:
 14872              	.LBE909:
 14873              	# sieve_extend.c:1224:         n = -n;
1224:sieve_extend.c ****     }
 14874              		.loc 1 1224 11 view .LVU5029
 14875 4fed 41F7DC   		neg	r12d	# n
 14876              	.LVL875:
 14877              	.LBB912:
 14878              	.LBB911:
 14879              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14880              		.loc 3 107 10 view .LVU5030
 14881 4ff0 E8000000 		call	putchar@PLT	#
 14881      00
GAS LISTING /tmp/ccLUVin9.s 			page 399


 14882              	.LVL876:
 14883              		.loc 3 107 10 view .LVU5031
 14884              	.LBE911:
 14885              	.LBE912:
1224:sieve_extend.c ****     }
 14886              		.loc 1 1224 9 is_stmt 1 view .LVU5032
1224:sieve_extend.c ****     }
 14887              		.loc 1 1224 9 is_stmt 0 view .LVU5033
 14888 4ff5 E9E4FEFF 		jmp	.L1172	#
 14888      FF
 14889              	.LVL877:
 14890 4ffa 660F1F44 		.p2align 4,,7
 14890      0000
 14891              		.p2align 3
 14892              	.L1182:
 14893              	.LBB913:
 14894              	.LBB904:
 14895              	.LBB899:
 14896              	.LBB886:
 14897              	.LBB883:
 14898              	.LBB871:
 14899              	.LBB866:
 14900              	.LBI866:
1212:sieve_extend.c ****     if (n < 1000) {
 14901              		.loc 1 1212 6 is_stmt 1 view .LVU5034
 14902              	.LBB867:
1214:sieve_extend.c ****         return;
 14903              		.loc 1 1214 9 view .LVU5035
 14904              	.LBB868:
 14905              	.LBI868:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14906              		.loc 3 105 1 view .LVU5036
 14907              	.LBB869:
 14908              		.loc 3 107 3 view .LVU5037
 14909              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14910              		.loc 3 107 10 is_stmt 0 view .LVU5038
 14911 5000 4489F2   		mov	edx, r14d	#, _10
 14912              	.LVL878:
 14913              		.loc 3 107 10 view .LVU5039
 14914 5003 488D3500 		lea	rsi, .LC26[rip]	#,
 14914      000000
 14915 500a BF010000 		mov	edi, 1	#,
 14915      00
 14916 500f 31C0     		xor	eax, eax	#
 14917 5011 E8000000 		call	__printf_chk@PLT	#
 14917      00
 14918              	.LVL879:
 14919              		.loc 3 107 10 view .LVU5040
 14920              	.LBE869:
 14921              	.LBE868:
1215:sieve_extend.c ****     }
 14922              		.loc 1 1215 9 is_stmt 1 view .LVU5041
 14923 5016 E953FFFF 		jmp	.L1177	#
 14923      FF
 14924              	.LBE867:
 14925              	.LBE866:
 14926              	.LBE871:
GAS LISTING /tmp/ccLUVin9.s 			page 400


 14927              	.LBE883:
 14928              	.LBE886:
 14929              	.LBE899:
 14930              	.LBE904:
 14931              	.LBE913:
 14932              		.cfi_endproc
 14933              	.LFE91:
 14935 501b 0F1F4400 		.p2align 4
 14935      00
 14936              		.globl	benchmark
 14938              	benchmark:
 14939              	.LVL880:
 14940              	.LFB92:
1228:sieve_extend.c **** 
1229:sieve_extend.c **** int benchmark(double max_time, void (*function)(bitword_t*, counter_t ), bitword_t* bitarray, count
 14941              		.loc 1 1229 111 view -0
 14942              		.cfi_startproc
 14943              		.loc 1 1229 111 is_stmt 0 view .LVU5043
 14944 5020 F30F1EFA 		endbr64	
 14945 5024 4157     		push	r15	#
 14946              		.cfi_def_cfa_offset 16
 14947              		.cfi_offset 15, -16
 14948 5026 4156     		push	r14	#
 14949              		.cfi_def_cfa_offset 24
 14950              		.cfi_offset 14, -24
 14951 5028 4155     		push	r13	#
 14952              		.cfi_def_cfa_offset 32
 14953              		.cfi_offset 13, -32
 14954 502a 4989D5   		mov	r13, rdx	# max, tmp138
 14955 502d 4154     		push	r12	#
 14956              		.cfi_def_cfa_offset 40
 14957              		.cfi_offset 12, -40
 14958              	# sieve_extend.c:1231:     int passes = 0;
1230:sieve_extend.c ****     struct timespec start_time,end_time;
1231:sieve_extend.c ****     int passes = 0;
 14959              		.loc 1 1231 9 view .LVU5044
 14960 502f 4531E4   		xor	r12d, r12d	# <retval>
 14961              	# sieve_extend.c:1229: int benchmark(double max_time, void (*function)(bitword_t*, counter_t ), bit
1229:sieve_extend.c ****     struct timespec start_time,end_time;
 14962              		.loc 1 1229 111 view .LVU5045
 14963 5032 55       		push	rbp	#
 14964              		.cfi_def_cfa_offset 48
 14965              		.cfi_offset 6, -48
 14966 5033 4889F5   		mov	rbp, rsi	# bitarray, tmp137
 14967 5036 53       		push	rbx	#
 14968              		.cfi_def_cfa_offset 56
 14969              		.cfi_offset 3, -56
 14970 5037 4889FB   		mov	rbx, rdi	# function, tmp136
 14971              	# sieve_extend.c:1233:     clock_gettime(CLOCK_MONOTONIC,&start_time);
1232:sieve_extend.c ****     double elapsed_time = 0;
1233:sieve_extend.c ****     clock_gettime(CLOCK_MONOTONIC,&start_time);
 14972              		.loc 1 1233 5 view .LVU5046
 14973 503a BF010000 		mov	edi, 1	#,
 14973      00
 14974              	.LVL881:
 14975              	# sieve_extend.c:1229: int benchmark(double max_time, void (*function)(bitword_t*, counter_t ), bit
1229:sieve_extend.c ****     struct timespec start_time,end_time;
GAS LISTING /tmp/ccLUVin9.s 			page 401


 14976              		.loc 1 1229 111 view .LVU5047
 14977 503f 488D6424 		lea	rsp, -72[rsp]	#,
 14977      B8
 14978              		.cfi_def_cfa_offset 128
 14979              	# sieve_extend.c:1229: int benchmark(double max_time, void (*function)(bitword_t*, counter_t ), bit
1229:sieve_extend.c ****     struct timespec start_time,end_time;
 14980              		.loc 1 1229 111 view .LVU5048
 14981 5044 C5FB1144 		vmovsd	QWORD PTR 8[rsp], xmm0	# %sfp, tmp135
 14981      2408
 14982              	# sieve_extend.c:1233:     clock_gettime(CLOCK_MONOTONIC,&start_time);
 14983              		.loc 1 1233 5 view .LVU5049
 14984 504a 488D7424 		lea	rsi, 16[rsp]	# tmp99,
 14984      10
 14985              	.LVL882:
 14986              	# sieve_extend.c:1229: int benchmark(double max_time, void (*function)(bitword_t*, counter_t ), bit
1229:sieve_extend.c ****     struct timespec start_time,end_time;
 14987              		.loc 1 1229 111 view .LVU5050
 14988 504f 64488B04 		mov	rax, QWORD PTR fs:40	# tmp139, MEM[(<address-space-1> long unsigned int *)40B]
 14988      25280000 
 14988      00
 14989 5058 48894424 		mov	QWORD PTR 56[rsp], rax	# D.7394, tmp139
 14989      38
 14990 505d 31C0     		xor	eax, eax	# tmp139
1230:sieve_extend.c ****     int passes = 0;
 14991              		.loc 1 1230 5 is_stmt 1 view .LVU5051
1231:sieve_extend.c ****     double elapsed_time = 0;
 14992              		.loc 1 1231 5 view .LVU5052
 14993              	.LVL883:
1232:sieve_extend.c ****     double elapsed_time = 0;
 14994              		.loc 1 1232 5 view .LVU5053
 14995              		.loc 1 1233 5 view .LVU5054
 14996 505f E8000000 		call	clock_gettime@PLT	#
 14996      00
 14997              	.LVL884:
1234:sieve_extend.c ****     while (elapsed_time <= max_time) {
 14998              		.loc 1 1234 5 view .LVU5055
 14999              		.loc 1 1234 11 view .LVU5056
 15000 5064 C5FB106C 		vmovsd	xmm5, QWORD PTR 8[rsp]	# max_time, %sfp
 15000      2408
 15001 506a C5F92F2D 		vcomisd	xmm5, QWORD PTR .LC6[rip]	# max_time,
 15001      00000000 
 15002 5072 0F827801 		jb	.L1183	#,
 15002      0000
 15003 5078 4C8D7424 		lea	r14, 32[rsp]	# tmp111,
 15003      20
 15004              	.LVL885:
 15005              	.L1186:
1235:sieve_extend.c ****         function(bitarray, max);
 15006              		.loc 1 1235 9 view .LVU5057
 15007 507d 4C89EE   		mov	rsi, r13	#, max
 15008 5080 4889EF   		mov	rdi, rbp	#, bitarray
 15009 5083 FFD3     		call	rbx	# function
 15010              	.LVL886:
1236:sieve_extend.c ****         passes++;
 15011              		.loc 1 1236 9 view .LVU5058
 15012              	# sieve_extend.c:1237:         clock_gettime(CLOCK_MONOTONIC,&end_time);
1237:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&end_time);
GAS LISTING /tmp/ccLUVin9.s 			page 402


 15013              		.loc 1 1237 9 is_stmt 0 view .LVU5059
 15014 5085 4C89F6   		mov	rsi, r14	#, tmp111
 15015 5088 BF010000 		mov	edi, 1	#,
 15015      00
 15016 508d E8000000 		call	clock_gettime@PLT	#
 15016      00
 15017              	.LVL887:
 15018              	# sieve_extend.c:1238:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
1238:sieve_extend.c ****         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time.tv_
 15019              		.loc 1 1238 58 view .LVU5060
 15020 5092 C4E1FB2A 		vcvtsi2sd	xmm0, xmm0, QWORD PTR 40[rsp]	# tmp102, end_time.tv_nsec
 15020      442428
 15021              	# sieve_extend.c:1236:         passes++;
1236:sieve_extend.c ****         passes++;
 15022              		.loc 1 1236 15 view .LVU5061
 15023 5099 458D7C24 		lea	r15d, 1[r12]	# tmp113,
 15023      01
 15024              	.LVL888:
 15025              	# sieve_extend.c:1238:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15026              		.loc 1 1238 64 view .LVU5062
 15027 509e C4E1F32A 		vcvtsi2sd	xmm1, xmm1, QWORD PTR 16[rsp]	# tmp103, start_time.tv_sec
 15027      4C2410
 15028              	# sieve_extend.c:1236:         passes++;
1236:sieve_extend.c ****         passes++;
 15029              		.loc 1 1236 15 view .LVU5063
 15030 50a5 4589FC   		mov	r12d, r15d	# <retval>, tmp113
1237:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&end_time);
 15031              		.loc 1 1237 9 is_stmt 1 view .LVU5064
 15032              		.loc 1 1238 9 view .LVU5065
 15033              	# sieve_extend.c:1238:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15034              		.loc 1 1238 104 is_stmt 0 view .LVU5066
 15035 50a8 C4E1E32A 		vcvtsi2sd	xmm3, xmm3, QWORD PTR 24[rsp]	# tmp105, start_time.tv_nsec
 15035      5C2418
 15036              	# sieve_extend.c:1238:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15037              		.loc 1 1238 40 view .LVU5067
 15038 50af C4E1EB2A 		vcvtsi2sd	xmm2, xmm2, QWORD PTR 32[rsp]	# tmp106, end_time.tv_sec
 15038      542420
 15039              	# sieve_extend.c:1234:     while (elapsed_time <= max_time) {
1234:sieve_extend.c ****         function(bitarray, max);
 15040              		.loc 1 1234 11 view .LVU5068
 15041 50b6 C5FB1064 		vmovsd	xmm4, QWORD PTR 8[rsp]	# max_time, %sfp
 15041      2408
 15042 50bc C4E2F9BB 		vfmsub231sd	xmm1, xmm0, QWORD PTR .LC8[rip]	# _30, tmp102,
 15042      0D000000 
 15042      00
 15043 50c5 C4E2E99D 		vfnmadd132sd	xmm3, xmm2, QWORD PTR .LC8[rip]	# _19, tmp106,
 15043      1D000000 
 15043      00
 15044              	.LVL889:
1234:sieve_extend.c ****         function(bitarray, max);
 15045              		.loc 1 1234 11 is_stmt 1 view .LVU5069
 15046              	# sieve_extend.c:1238:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15047              		.loc 1 1238 22 is_stmt 0 view .LVU5070
 15048 50ce C5E358F1 		vaddsd	xmm6, xmm3, xmm1	# elapsed_time, _19, _30
 15049              	# sieve_extend.c:1234:     while (elapsed_time <= max_time) {
1234:sieve_extend.c ****         function(bitarray, max);
 15050              		.loc 1 1234 11 view .LVU5071
GAS LISTING /tmp/ccLUVin9.s 			page 403


 15051 50d2 C5F92FE6 		vcomisd	xmm4, xmm6	# max_time, elapsed_time
 15052 50d6 0F821401 		jb	.L1183	#,
 15052      0000
 15053              	.LVL890:
1235:sieve_extend.c ****         passes++;
 15054              		.loc 1 1235 9 is_stmt 1 view .LVU5072
 15055 50dc 4C89EE   		mov	rsi, r13	#, max
 15056 50df 4889EF   		mov	rdi, rbp	#, bitarray
 15057 50e2 FFD3     		call	rbx	# function
 15058              	.LVL891:
1236:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&end_time);
 15059              		.loc 1 1236 9 view .LVU5073
 15060              	# sieve_extend.c:1237:         clock_gettime(CLOCK_MONOTONIC,&end_time);
1237:sieve_extend.c ****         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time.tv_
 15061              		.loc 1 1237 9 is_stmt 0 view .LVU5074
 15062 50e4 4C89F6   		mov	rsi, r14	#, tmp111
 15063 50e7 BF010000 		mov	edi, 1	#,
 15063      00
 15064 50ec E8000000 		call	clock_gettime@PLT	#
 15064      00
 15065              	.LVL892:
 15066              	# sieve_extend.c:1238:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15067              		.loc 1 1238 58 view .LVU5075
 15068 50f1 C4E1C32A 		vcvtsi2sd	xmm7, xmm7, QWORD PTR 40[rsp]	# tmp114, end_time.tv_nsec
 15068      7C2428
 15069              	# sieve_extend.c:1236:         passes++;
1236:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&end_time);
 15070              		.loc 1 1236 15 view .LVU5076
 15071 50f8 4183C401 		add	r12d, 1	# <retval>,
 15072              	.LVL893:
1237:sieve_extend.c ****         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time.tv_
 15073              		.loc 1 1237 9 is_stmt 1 view .LVU5077
 15074              		.loc 1 1238 9 view .LVU5078
 15075              	# sieve_extend.c:1238:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15076              		.loc 1 1238 64 is_stmt 0 view .LVU5079
 15077 50fc C461BB2A 		vcvtsi2sd	xmm8, xmm8, QWORD PTR 16[rsp]	# tmp115, start_time.tv_sec
 15077      442410
 15078              	# sieve_extend.c:1238:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15079              		.loc 1 1238 104 view .LVU5080
 15080 5103 C461B32A 		vcvtsi2sd	xmm9, xmm9, QWORD PTR 24[rsp]	# tmp117, start_time.tv_nsec
 15080      4C2418
 15081              	# sieve_extend.c:1238:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15082              		.loc 1 1238 40 view .LVU5081
 15083 510a C461AB2A 		vcvtsi2sd	xmm10, xmm10, QWORD PTR 32[rsp]	# tmp118, end_time.tv_sec
 15083      542420
 15084              	# sieve_extend.c:1234:     while (elapsed_time <= max_time) {
1234:sieve_extend.c ****         function(bitarray, max);
 15085              		.loc 1 1234 11 view .LVU5082
 15086 5111 C57B1064 		vmovsd	xmm12, QWORD PTR 8[rsp]	# max_time, %sfp
 15086      2408
 15087 5117 C462C1BB 		vfmsub231sd	xmm8, xmm7, QWORD PTR .LC8[rip]	# _30, tmp114,
 15087      05000000 
 15087      00
 15088 5120 C462A99D 		vfnmadd132sd	xmm9, xmm10, QWORD PTR .LC8[rip]	# _19, tmp118,
 15088      0D000000 
 15088      00
 15089              	.LVL894:
GAS LISTING /tmp/ccLUVin9.s 			page 404


1234:sieve_extend.c ****         function(bitarray, max);
 15090              		.loc 1 1234 11 is_stmt 1 view .LVU5083
 15091              	# sieve_extend.c:1238:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15092              		.loc 1 1238 22 is_stmt 0 view .LVU5084
 15093 5129 C4413358 		vaddsd	xmm11, xmm9, xmm8	# elapsed_time, _19, _30
 15093      D8
 15094              	# sieve_extend.c:1234:     while (elapsed_time <= max_time) {
1234:sieve_extend.c ****         function(bitarray, max);
 15095              		.loc 1 1234 11 view .LVU5085
 15096 512e C441792F 		vcomisd	xmm12, xmm11	# max_time, elapsed_time
 15096      E3
 15097 5133 0F82B700 		jb	.L1183	#,
 15097      0000
 15098              	.LVL895:
1235:sieve_extend.c ****         passes++;
 15099              		.loc 1 1235 9 is_stmt 1 view .LVU5086
 15100 5139 4C89EE   		mov	rsi, r13	#, max
 15101 513c 4889EF   		mov	rdi, rbp	#, bitarray
 15102 513f FFD3     		call	rbx	# function
 15103              	.LVL896:
1236:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&end_time);
 15104              		.loc 1 1236 9 view .LVU5087
 15105              	# sieve_extend.c:1237:         clock_gettime(CLOCK_MONOTONIC,&end_time);
1237:sieve_extend.c ****         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time.tv_
 15106              		.loc 1 1237 9 is_stmt 0 view .LVU5088
 15107 5141 4C89F6   		mov	rsi, r14	#, tmp111
 15108 5144 BF010000 		mov	edi, 1	#,
 15108      00
 15109 5149 E8000000 		call	clock_gettime@PLT	#
 15109      00
 15110              	.LVL897:
 15111              	# sieve_extend.c:1238:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15112              		.loc 1 1238 58 view .LVU5089
 15113 514e C461932A 		vcvtsi2sd	xmm13, xmm13, QWORD PTR 40[rsp]	# tmp121, end_time.tv_nsec
 15113      6C2428
 15114              	# sieve_extend.c:1236:         passes++;
1236:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&end_time);
 15115              		.loc 1 1236 15 view .LVU5090
 15116 5155 458D6702 		lea	r12d, 2[r15]	# <retval>,
 15117              	.LVL898:
1237:sieve_extend.c ****         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time.tv_
 15118              		.loc 1 1237 9 is_stmt 1 view .LVU5091
 15119              		.loc 1 1238 9 view .LVU5092
 15120              	# sieve_extend.c:1238:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15121              		.loc 1 1238 64 is_stmt 0 view .LVU5093
 15122 5159 C4618B2A 		vcvtsi2sd	xmm14, xmm14, QWORD PTR 16[rsp]	# tmp122, start_time.tv_sec
 15122      742410
 15123              	# sieve_extend.c:1238:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15124              		.loc 1 1238 104 view .LVU5094
 15125 5160 C461832A 		vcvtsi2sd	xmm15, xmm15, QWORD PTR 24[rsp]	# tmp124, start_time.tv_nsec
 15125      7C2418
 15126              	# sieve_extend.c:1238:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15127              		.loc 1 1238 40 view .LVU5095
 15128 5167 C4E1D32A 		vcvtsi2sd	xmm5, xmm5, QWORD PTR 32[rsp]	# tmp125, end_time.tv_sec
 15128      6C2420
 15129              	# sieve_extend.c:1234:     while (elapsed_time <= max_time) {
1234:sieve_extend.c ****         function(bitarray, max);
GAS LISTING /tmp/ccLUVin9.s 			page 405


 15130              		.loc 1 1234 11 view .LVU5096
 15131 516e C5FB104C 		vmovsd	xmm1, QWORD PTR 8[rsp]	# max_time, %sfp
 15131      2408
 15132 5174 C46291BB 		vfmsub231sd	xmm14, xmm13, QWORD PTR .LC8[rip]	# _30, tmp121,
 15132      35000000 
 15132      00
 15133 517d C462D19D 		vfnmadd132sd	xmm15, xmm5, QWORD PTR .LC8[rip]	# _19, tmp125,
 15133      3D000000 
 15133      00
 15134              	.LVL899:
1234:sieve_extend.c ****         function(bitarray, max);
 15135              		.loc 1 1234 11 is_stmt 1 view .LVU5097
 15136              	# sieve_extend.c:1238:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15137              		.loc 1 1238 22 is_stmt 0 view .LVU5098
 15138 5186 C4C10358 		vaddsd	xmm0, xmm15, xmm14	# elapsed_time, _19, _30
 15138      C6
 15139              	# sieve_extend.c:1234:     while (elapsed_time <= max_time) {
1234:sieve_extend.c ****         function(bitarray, max);
 15140              		.loc 1 1234 11 view .LVU5099
 15141 518b C5F92FC8 		vcomisd	xmm1, xmm0	# max_time, elapsed_time
 15142 518f 725F     		jb	.L1183	#,
 15143              	.LVL900:
1235:sieve_extend.c ****         passes++;
 15144              		.loc 1 1235 9 is_stmt 1 view .LVU5100
 15145 5191 4C89EE   		mov	rsi, r13	#, max
 15146 5194 4889EF   		mov	rdi, rbp	#, bitarray
 15147 5197 FFD3     		call	rbx	# function
 15148              	.LVL901:
1236:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&end_time);
 15149              		.loc 1 1236 9 view .LVU5101
 15150              	# sieve_extend.c:1237:         clock_gettime(CLOCK_MONOTONIC,&end_time);
1237:sieve_extend.c ****         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time.tv_
 15151              		.loc 1 1237 9 is_stmt 0 view .LVU5102
 15152 5199 4C89F6   		mov	rsi, r14	#, tmp111
 15153 519c BF010000 		mov	edi, 1	#,
 15153      00
 15154 51a1 E8000000 		call	clock_gettime@PLT	#
 15154      00
 15155              	.LVL902:
 15156              	# sieve_extend.c:1238:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15157              		.loc 1 1238 58 view .LVU5103
 15158 51a6 C4E1E32A 		vcvtsi2sd	xmm3, xmm3, QWORD PTR 40[rsp]	# tmp128, end_time.tv_nsec
 15158      5C2428
 15159              	# sieve_extend.c:1236:         passes++;
1236:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&end_time);
 15160              		.loc 1 1236 15 view .LVU5104
 15161 51ad 458D6703 		lea	r12d, 3[r15]	# <retval>,
 15162              	.LVL903:
1237:sieve_extend.c ****         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time.tv_
 15163              		.loc 1 1237 9 is_stmt 1 view .LVU5105
 15164              		.loc 1 1238 9 view .LVU5106
 15165              	# sieve_extend.c:1238:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15166              		.loc 1 1238 64 is_stmt 0 view .LVU5107
 15167 51b1 C4E1CB2A 		vcvtsi2sd	xmm6, xmm6, QWORD PTR 16[rsp]	# tmp129, start_time.tv_sec
 15167      742410
 15168              	# sieve_extend.c:1238:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15169              		.loc 1 1238 104 view .LVU5108
GAS LISTING /tmp/ccLUVin9.s 			page 406


 15170 51b8 C4E1DB2A 		vcvtsi2sd	xmm4, xmm4, QWORD PTR 24[rsp]	# tmp131, start_time.tv_nsec
 15170      642418
 15171              	# sieve_extend.c:1238:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15172              		.loc 1 1238 40 view .LVU5109
 15173 51bf C4E1EB2A 		vcvtsi2sd	xmm2, xmm2, QWORD PTR 32[rsp]	# tmp132, end_time.tv_sec
 15173      542420
 15174              	# sieve_extend.c:1234:     while (elapsed_time <= max_time) {
1234:sieve_extend.c ****         function(bitarray, max);
 15175              		.loc 1 1234 11 view .LVU5110
 15176 51c6 C57B1044 		vmovsd	xmm8, QWORD PTR 8[rsp]	# max_time, %sfp
 15176      2408
 15177 51cc C4E2E1BB 		vfmsub231sd	xmm6, xmm3, QWORD PTR .LC8[rip]	# _30, tmp128,
 15177      35000000 
 15177      00
 15178 51d5 C4E2E99D 		vfnmadd132sd	xmm4, xmm2, QWORD PTR .LC8[rip]	# _19, tmp132,
 15178      25000000 
 15178      00
 15179              	.LVL904:
1234:sieve_extend.c ****         function(bitarray, max);
 15180              		.loc 1 1234 11 is_stmt 1 view .LVU5111
 15181              	# sieve_extend.c:1238:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15182              		.loc 1 1238 22 is_stmt 0 view .LVU5112
 15183 51de C5DB58FE 		vaddsd	xmm7, xmm4, xmm6	# elapsed_time, _19, _30
 15184              	# sieve_extend.c:1234:     while (elapsed_time <= max_time) {
1234:sieve_extend.c ****         function(bitarray, max);
 15185              		.loc 1 1234 11 view .LVU5113
 15186 51e2 C5792FC7 		vcomisd	xmm8, xmm7	# max_time, elapsed_time
 15187 51e6 0F8391FE 		jnb	.L1186	#,
 15187      FFFF
 15188              	.LVL905:
 15189 51ec 0F1F4000 		.p2align 4
 15190              		.p2align 3
 15191              	.L1183:
 15192              	# sieve_extend.c:1241: }
1239:sieve_extend.c ****     }
1240:sieve_extend.c ****     return passes;
1241:sieve_extend.c **** }
 15193              		.loc 1 1241 1 view .LVU5114
 15194 51f0 488B4424 		mov	rax, QWORD PTR 56[rsp]	# tmp140, D.7394
 15194      38
 15195 51f5 64483304 		xor	rax, QWORD PTR fs:40	# tmp140, MEM[(<address-space-1> long unsigned int *)40B]
 15195      25280000 
 15195      00
 15196 51fe 7513     		jne	.L1199	#,
 15197 5200 488D6424 		lea	rsp, 72[rsp]	#,
 15197      48
 15198              		.cfi_remember_state
 15199              		.cfi_def_cfa_offset 56
 15200 5205 4489E0   		mov	eax, r12d	#, <retval>
 15201 5208 5B       		pop	rbx	#
 15202              		.cfi_def_cfa_offset 48
 15203              	.LVL906:
 15204              		.loc 1 1241 1 view .LVU5115
 15205 5209 5D       		pop	rbp	#
 15206              		.cfi_def_cfa_offset 40
 15207              	.LVL907:
 15208              		.loc 1 1241 1 view .LVU5116
GAS LISTING /tmp/ccLUVin9.s 			page 407


 15209 520a 415C     		pop	r12	#
 15210              		.cfi_def_cfa_offset 32
 15211 520c 415D     		pop	r13	#
 15212              		.cfi_def_cfa_offset 24
 15213              	.LVL908:
 15214              		.loc 1 1241 1 view .LVU5117
 15215 520e 415E     		pop	r14	#
 15216              		.cfi_def_cfa_offset 16
 15217 5210 415F     		pop	r15	#
 15218              		.cfi_def_cfa_offset 8
 15219 5212 C3       		ret	
 15220              	.LVL909:
 15221              	.L1199:
 15222              		.cfi_restore_state
 15223              		.loc 1 1241 1 view .LVU5118
 15224 5213 E8000000 		call	__stack_chk_fail@PLT	#
 15224      00
 15225              	.LVL910:
 15226              		.cfi_endproc
 15227              	.LFE92:
 15229 5218 0F1F8400 		.p2align 4
 15229      00000000 
 15230              		.globl	test
 15232              	test:
 15233              	.LVL911:
 15234              	.LFB93:
1242:sieve_extend.c **** 
1243:sieve_extend.c **** void test(bitword_t* __restrict bitarray, counter_t max) {
 15235              		.loc 1 1243 58 is_stmt 1 view -0
 15236              		.cfi_startproc
 15237              		.loc 1 1243 58 is_stmt 0 view .LVU5120
 15238 5220 F30F1EFA 		endbr64	
 15239              	.LBB915:
1244:sieve_extend.c ****     //#pragma GCC unroll 16
1245:sieve_extend.c ****     #pragma GCC ivdep 
1246:sieve_extend.c ****     for (counter_t x=0; x<max; x++) {
 15240              		.loc 1 1246 10 is_stmt 1 view .LVU5121
 15241              	.LVL912:
 15242              		.loc 1 1246 25 view .LVU5122
 15243              	# sieve_extend.c:1246:     for (counter_t x=0; x<max; x++) {
 15244              		.loc 1 1246 5 is_stmt 0 view .LVU5123
 15245 5224 4885F6   		test	rsi, rsi	# max
 15246 5227 0F846901 		je	.L1242	#,
 15246      0000
 15247 522d 4889F1   		mov	rcx, rsi	# tmp97, max
 15248              	# sieve_extend.c:1246:     for (counter_t x=0; x<max; x++) {
 15249              		.loc 1 1246 20 view .LVU5124
 15250 5230 31C0     		xor	eax, eax	# x
 15251 5232 83E107   		and	ecx, 7	# tmp97,
 15252              	# sieve_extend.c:1247:         bitarray[wordindex(x)] = markmask(x);
1247:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15253              		.loc 1 1247 34 view .LVU5125
 15254 5235 BA010000 		mov	edx, 1	# tmp92,
 15254      00
 15255 523a 0F84AD00 		je	.L1202	#,
 15255      0000
 15256 5240 4883F901 		cmp	rcx, 1	# tmp97,
GAS LISTING /tmp/ccLUVin9.s 			page 408


 15257 5244 0F848600 		je	.L1227	#,
 15257      0000
 15258 524a 4883F902 		cmp	rcx, 2	# tmp97,
 15259 524e 746C     		je	.L1228	#,
 15260 5250 4883F903 		cmp	rcx, 3	# tmp97,
 15261 5254 7452     		je	.L1229	#,
 15262 5256 4883F904 		cmp	rcx, 4	# tmp97,
 15263 525a 7438     		je	.L1230	#,
 15264 525c 4883F905 		cmp	rcx, 5	# tmp97,
 15265 5260 741E     		je	.L1231	#,
 15266 5262 4883F906 		cmp	rcx, 6	# tmp97,
 15267 5266 0F852C01 		jne	.L1243	#,
 15267      0000
 15268              	.LVL913:
 15269              	.L1232:
 15270              		.loc 1 1247 9 is_stmt 1 view .LVU5126
 15271              	# sieve_extend.c:1247:         bitarray[wordindex(x)] = markmask(x);
 15272              		.loc 1 1247 18 is_stmt 0 view .LVU5127
 15273 526c 4989C1   		mov	r9, rax	# tmp122, x
 15274              	# sieve_extend.c:1247:         bitarray[wordindex(x)] = markmask(x);
 15275              		.loc 1 1247 34 view .LVU5128
 15276 526f C462F9F7 		shlx	r8, rdx, rax	# tmp123, tmp92, x
 15276      C2
 15277              	# sieve_extend.c:1247:         bitarray[wordindex(x)] = markmask(x);
 15278              		.loc 1 1247 18 view .LVU5129
 15279 5274 49C1E906 		shr	r9, 6	# tmp122,
 15280              	# sieve_extend.c:1246:     for (counter_t x=0; x<max; x++) {
1246:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15281              		.loc 1 1246 33 view .LVU5130
 15282 5278 4883C001 		add	rax, 1	# x,
 15283              	# sieve_extend.c:1247:         bitarray[wordindex(x)] = markmask(x);
 15284              		.loc 1 1247 34 view .LVU5131
 15285 527c 4E8904CF 		mov	QWORD PTR [rdi+r9*8], r8	# *_4, tmp123
1246:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15286              		.loc 1 1246 32 is_stmt 1 view .LVU5132
1246:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15287              		.loc 1 1246 25 view .LVU5133
 15288              	.L1231:
 15289              		.loc 1 1247 9 view .LVU5134
 15290              	# sieve_extend.c:1247:         bitarray[wordindex(x)] = markmask(x);
 15291              		.loc 1 1247 18 is_stmt 0 view .LVU5135
 15292 5280 4989C2   		mov	r10, rax	# tmp124, x
 15293              	# sieve_extend.c:1247:         bitarray[wordindex(x)] = markmask(x);
 15294              		.loc 1 1247 34 view .LVU5136
 15295 5283 C462F9F7 		shlx	r11, rdx, rax	# tmp125, tmp92, x
 15295      DA
 15296              	# sieve_extend.c:1247:         bitarray[wordindex(x)] = markmask(x);
 15297              		.loc 1 1247 18 view .LVU5137
 15298 5288 49C1EA06 		shr	r10, 6	# tmp124,
 15299              	# sieve_extend.c:1246:     for (counter_t x=0; x<max; x++) {
1246:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15300              		.loc 1 1246 33 view .LVU5138
 15301 528c 4883C001 		add	rax, 1	# x,
 15302              	# sieve_extend.c:1247:         bitarray[wordindex(x)] = markmask(x);
 15303              		.loc 1 1247 34 view .LVU5139
 15304 5290 4E891CD7 		mov	QWORD PTR [rdi+r10*8], r11	# *_4, tmp125
1246:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
GAS LISTING /tmp/ccLUVin9.s 			page 409


 15305              		.loc 1 1246 32 is_stmt 1 view .LVU5140
1246:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15306              		.loc 1 1246 25 view .LVU5141
 15307              	.L1230:
 15308              		.loc 1 1247 9 view .LVU5142
 15309              	# sieve_extend.c:1247:         bitarray[wordindex(x)] = markmask(x);
 15310              		.loc 1 1247 18 is_stmt 0 view .LVU5143
 15311 5294 4889C1   		mov	rcx, rax	# tmp126, x
 15312              	# sieve_extend.c:1247:         bitarray[wordindex(x)] = markmask(x);
 15313              		.loc 1 1247 34 view .LVU5144
 15314 5297 C462F9F7 		shlx	r9, rdx, rax	# tmp127, tmp92, x
 15314      CA
 15315              	# sieve_extend.c:1247:         bitarray[wordindex(x)] = markmask(x);
 15316              		.loc 1 1247 18 view .LVU5145
 15317 529c 48C1E906 		shr	rcx, 6	# tmp126,
 15318              	# sieve_extend.c:1246:     for (counter_t x=0; x<max; x++) {
1246:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15319              		.loc 1 1246 33 view .LVU5146
 15320 52a0 4883C001 		add	rax, 1	# x,
 15321              	# sieve_extend.c:1247:         bitarray[wordindex(x)] = markmask(x);
 15322              		.loc 1 1247 34 view .LVU5147
 15323 52a4 4C890CCF 		mov	QWORD PTR [rdi+rcx*8], r9	# *_4, tmp127
1246:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15324              		.loc 1 1246 32 is_stmt 1 view .LVU5148
1246:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15325              		.loc 1 1246 25 view .LVU5149
 15326              	.L1229:
 15327              		.loc 1 1247 9 view .LVU5150
 15328              	# sieve_extend.c:1247:         bitarray[wordindex(x)] = markmask(x);
 15329              		.loc 1 1247 18 is_stmt 0 view .LVU5151
 15330 52a8 4989C2   		mov	r10, rax	# tmp128, x
 15331              	# sieve_extend.c:1247:         bitarray[wordindex(x)] = markmask(x);
 15332              		.loc 1 1247 34 view .LVU5152
 15333 52ab C462F9F7 		shlx	r8, rdx, rax	# tmp129, tmp92, x
 15333      C2
 15334              	# sieve_extend.c:1247:         bitarray[wordindex(x)] = markmask(x);
 15335              		.loc 1 1247 18 view .LVU5153
 15336 52b0 49C1EA06 		shr	r10, 6	# tmp128,
 15337              	# sieve_extend.c:1246:     for (counter_t x=0; x<max; x++) {
1246:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15338              		.loc 1 1246 33 view .LVU5154
 15339 52b4 4883C001 		add	rax, 1	# x,
 15340              	# sieve_extend.c:1247:         bitarray[wordindex(x)] = markmask(x);
 15341              		.loc 1 1247 34 view .LVU5155
 15342 52b8 4E8904D7 		mov	QWORD PTR [rdi+r10*8], r8	# *_4, tmp129
1246:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15343              		.loc 1 1246 32 is_stmt 1 view .LVU5156
1246:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15344              		.loc 1 1246 25 view .LVU5157
 15345              	.L1228:
 15346              		.loc 1 1247 9 view .LVU5158
 15347              	# sieve_extend.c:1247:         bitarray[wordindex(x)] = markmask(x);
 15348              		.loc 1 1247 18 is_stmt 0 view .LVU5159
 15349 52bc 4989C3   		mov	r11, rax	# tmp130, x
 15350              	# sieve_extend.c:1247:         bitarray[wordindex(x)] = markmask(x);
 15351              		.loc 1 1247 34 view .LVU5160
 15352 52bf C4E2F9F7 		shlx	rcx, rdx, rax	# tmp131, tmp92, x
GAS LISTING /tmp/ccLUVin9.s 			page 410


 15352      CA
 15353              	# sieve_extend.c:1247:         bitarray[wordindex(x)] = markmask(x);
 15354              		.loc 1 1247 18 view .LVU5161
 15355 52c4 49C1EB06 		shr	r11, 6	# tmp130,
 15356              	# sieve_extend.c:1246:     for (counter_t x=0; x<max; x++) {
1246:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15357              		.loc 1 1246 33 view .LVU5162
 15358 52c8 4883C001 		add	rax, 1	# x,
 15359              	# sieve_extend.c:1247:         bitarray[wordindex(x)] = markmask(x);
 15360              		.loc 1 1247 34 view .LVU5163
 15361 52cc 4A890CDF 		mov	QWORD PTR [rdi+r11*8], rcx	# *_4, tmp131
1246:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15362              		.loc 1 1246 32 is_stmt 1 view .LVU5164
1246:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15363              		.loc 1 1246 25 view .LVU5165
 15364              	.L1227:
 15365              		.loc 1 1247 9 view .LVU5166
 15366              	# sieve_extend.c:1247:         bitarray[wordindex(x)] = markmask(x);
 15367              		.loc 1 1247 18 is_stmt 0 view .LVU5167
 15368 52d0 4989C1   		mov	r9, rax	# tmp132, x
 15369              	# sieve_extend.c:1247:         bitarray[wordindex(x)] = markmask(x);
 15370              		.loc 1 1247 34 view .LVU5168
 15371 52d3 C462F9F7 		shlx	r10, rdx, rax	# tmp133, tmp92, x
 15371      D2
 15372              	# sieve_extend.c:1247:         bitarray[wordindex(x)] = markmask(x);
 15373              		.loc 1 1247 18 view .LVU5169
 15374 52d8 49C1E906 		shr	r9, 6	# tmp132,
 15375              	# sieve_extend.c:1246:     for (counter_t x=0; x<max; x++) {
1246:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15376              		.loc 1 1246 33 view .LVU5170
 15377 52dc 4883C001 		add	rax, 1	# x,
 15378              	# sieve_extend.c:1247:         bitarray[wordindex(x)] = markmask(x);
 15379              		.loc 1 1247 34 view .LVU5171
 15380 52e0 4E8914CF 		mov	QWORD PTR [rdi+r9*8], r10	# *_4, tmp133
1246:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15381              		.loc 1 1246 32 is_stmt 1 view .LVU5172
1246:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15382              		.loc 1 1246 25 view .LVU5173
 15383              	# sieve_extend.c:1246:     for (counter_t x=0; x<max; x++) {
1246:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15384              		.loc 1 1246 5 is_stmt 0 view .LVU5174
 15385 52e4 4839C6   		cmp	rsi, rax	# max, x
 15386 52e7 0F84BD00 		je	.L1244	#,
 15386      0000
 15387              	.L1202:
 15388              		.loc 1 1247 9 is_stmt 1 discriminator 3 view .LVU5175
 15389              	# sieve_extend.c:1246:     for (counter_t x=0; x<max; x++) {
1246:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15390              		.loc 1 1246 33 is_stmt 0 discriminator 3 view .LVU5176
 15391 52ed 488D4801 		lea	rcx, 1[rax]	# tmp98,
 15392              	# sieve_extend.c:1247:         bitarray[wordindex(x)] = markmask(x);
 15393              		.loc 1 1247 18 discriminator 3 view .LVU5177
 15394 52f1 4989C3   		mov	r11, rax	# tmp90, x
 15395 52f4 49C1EB06 		shr	r11, 6	# tmp90,
 15396 52f8 4989C9   		mov	r9, rcx	# tmp100, tmp98
 15397 52fb 49C1E906 		shr	r9, 6	# tmp100,
 15398              	# sieve_extend.c:1247:         bitarray[wordindex(x)] = markmask(x);
GAS LISTING /tmp/ccLUVin9.s 			page 411


 15399              		.loc 1 1247 34 discriminator 3 view .LVU5178
 15400 52ff C462F9F7 		shlx	r8, rdx, rax	# tmp93, tmp92, x
 15400      C2
 15401 5304 C462F1F7 		shlx	r10, rdx, rcx	# tmp101, tmp92, tmp98
 15401      D2
 15402 5309 4E8904DF 		mov	QWORD PTR [rdi+r11*8], r8	# *_4, tmp93
1246:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15403              		.loc 1 1246 32 is_stmt 1 discriminator 3 view .LVU5179
1246:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15404              		.loc 1 1246 25 discriminator 3 view .LVU5180
 15405              		.loc 1 1247 9 discriminator 3 view .LVU5181
 15406              	# sieve_extend.c:1247:         bitarray[wordindex(x)] = markmask(x);
 15407              		.loc 1 1247 34 is_stmt 0 discriminator 3 view .LVU5182
 15408 530d 4E8914CF 		mov	QWORD PTR [rdi+r9*8], r10	# *_4, tmp101
1246:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15409              		.loc 1 1246 32 is_stmt 1 discriminator 3 view .LVU5183
 15410              	# sieve_extend.c:1246:     for (counter_t x=0; x<max; x++) {
1246:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15411              		.loc 1 1246 33 is_stmt 0 discriminator 3 view .LVU5184
 15412 5311 4C8D5802 		lea	r11, 2[rax]	# x,
1246:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15413              		.loc 1 1246 25 is_stmt 1 discriminator 3 view .LVU5185
 15414              		.loc 1 1247 9 discriminator 3 view .LVU5186
 15415              	# sieve_extend.c:1246:     for (counter_t x=0; x<max; x++) {
1246:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15416              		.loc 1 1246 33 is_stmt 0 discriminator 3 view .LVU5187
 15417 5315 4C8D4803 		lea	r9, 3[rax]	# x,
 15418              	# sieve_extend.c:1247:         bitarray[wordindex(x)] = markmask(x);
 15419              		.loc 1 1247 18 discriminator 3 view .LVU5188
 15420 5319 4D89D8   		mov	r8, r11	# tmp103, x
 15421 531c 49C1E806 		shr	r8, 6	# tmp103,
 15422 5320 4D89CA   		mov	r10, r9	# tmp106, x
 15423 5323 49C1EA06 		shr	r10, 6	# tmp106,
 15424              	# sieve_extend.c:1247:         bitarray[wordindex(x)] = markmask(x);
 15425              		.loc 1 1247 34 discriminator 3 view .LVU5189
 15426 5327 C4E2A1F7 		shlx	rcx, rdx, r11	# tmp104, tmp92, x
 15426      CA
 15427 532c C462B1F7 		shlx	r11, rdx, r9	# tmp107, tmp92, x
 15427      DA
 15428 5331 4A890CC7 		mov	QWORD PTR [rdi+r8*8], rcx	# *_4, tmp104
1246:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15429              		.loc 1 1246 32 is_stmt 1 discriminator 3 view .LVU5190
1246:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15430              		.loc 1 1246 25 discriminator 3 view .LVU5191
 15431              		.loc 1 1247 9 discriminator 3 view .LVU5192
 15432              	# sieve_extend.c:1247:         bitarray[wordindex(x)] = markmask(x);
 15433              		.loc 1 1247 34 is_stmt 0 discriminator 3 view .LVU5193
 15434 5335 4E891CD7 		mov	QWORD PTR [rdi+r10*8], r11	# *_4, tmp107
1246:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15435              		.loc 1 1246 32 is_stmt 1 discriminator 3 view .LVU5194
 15436              	# sieve_extend.c:1246:     for (counter_t x=0; x<max; x++) {
1246:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15437              		.loc 1 1246 33 is_stmt 0 discriminator 3 view .LVU5195
 15438 5339 488D4804 		lea	rcx, 4[rax]	# x,
1246:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15439              		.loc 1 1246 25 is_stmt 1 discriminator 3 view .LVU5196
 15440              		.loc 1 1247 9 discriminator 3 view .LVU5197
GAS LISTING /tmp/ccLUVin9.s 			page 412


 15441              	# sieve_extend.c:1246:     for (counter_t x=0; x<max; x++) {
1246:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15442              		.loc 1 1246 33 is_stmt 0 discriminator 3 view .LVU5198
 15443 533d 4C8D5005 		lea	r10, 5[rax]	# x,
 15444              	# sieve_extend.c:1247:         bitarray[wordindex(x)] = markmask(x);
 15445              		.loc 1 1247 18 discriminator 3 view .LVU5199
 15446 5341 4989C8   		mov	r8, rcx	# tmp109, x
 15447 5344 49C1E806 		shr	r8, 6	# tmp109,
 15448 5348 4D89D3   		mov	r11, r10	# tmp112, x
 15449 534b 49C1EB06 		shr	r11, 6	# tmp112,
 15450              	# sieve_extend.c:1247:         bitarray[wordindex(x)] = markmask(x);
 15451              		.loc 1 1247 34 discriminator 3 view .LVU5200
 15452 534f C462F1F7 		shlx	r9, rdx, rcx	# tmp110, tmp92, x
 15452      CA
 15453 5354 C4E2A9F7 		shlx	rcx, rdx, r10	# tmp113, tmp92, x
 15453      CA
 15454 5359 4E890CC7 		mov	QWORD PTR [rdi+r8*8], r9	# *_4, tmp110
1246:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15455              		.loc 1 1246 32 is_stmt 1 discriminator 3 view .LVU5201
1246:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15456              		.loc 1 1246 25 discriminator 3 view .LVU5202
 15457              		.loc 1 1247 9 discriminator 3 view .LVU5203
 15458              	# sieve_extend.c:1247:         bitarray[wordindex(x)] = markmask(x);
 15459              		.loc 1 1247 34 is_stmt 0 discriminator 3 view .LVU5204
 15460 535d 4A890CDF 		mov	QWORD PTR [rdi+r11*8], rcx	# *_4, tmp113
1246:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15461              		.loc 1 1246 32 is_stmt 1 discriminator 3 view .LVU5205
 15462              	# sieve_extend.c:1246:     for (counter_t x=0; x<max; x++) {
1246:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15463              		.loc 1 1246 33 is_stmt 0 discriminator 3 view .LVU5206
 15464 5361 4C8D4806 		lea	r9, 6[rax]	# x,
1246:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15465              		.loc 1 1246 25 is_stmt 1 discriminator 3 view .LVU5207
 15466              		.loc 1 1247 9 discriminator 3 view .LVU5208
 15467              	# sieve_extend.c:1246:     for (counter_t x=0; x<max; x++) {
1246:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15468              		.loc 1 1246 33 is_stmt 0 discriminator 3 view .LVU5209
 15469 5365 4C8D5807 		lea	r11, 7[rax]	# x,
 15470              	# sieve_extend.c:1247:         bitarray[wordindex(x)] = markmask(x);
 15471              		.loc 1 1247 18 discriminator 3 view .LVU5210
 15472 5369 4D89C8   		mov	r8, r9	# tmp115, x
 15473              	# sieve_extend.c:1247:         bitarray[wordindex(x)] = markmask(x);
 15474              		.loc 1 1247 34 discriminator 3 view .LVU5211
 15475 536c C462B1F7 		shlx	r10, rdx, r9	# tmp116, tmp92, x
 15475      D2
 15476              	# sieve_extend.c:1246:     for (counter_t x=0; x<max; x++) {
1246:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15477              		.loc 1 1246 33 discriminator 3 view .LVU5212
 15478 5371 4883C008 		add	rax, 8	# x,
 15479              	# sieve_extend.c:1247:         bitarray[wordindex(x)] = markmask(x);
 15480              		.loc 1 1247 18 discriminator 3 view .LVU5213
 15481 5375 49C1E806 		shr	r8, 6	# tmp115,
 15482 5379 4D89D9   		mov	r9, r11	# tmp118, x
 15483 537c 49C1E906 		shr	r9, 6	# tmp118,
 15484              	# sieve_extend.c:1246:     for (counter_t x=0; x<max; x++) {
1246:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15485              		.loc 1 1246 5 discriminator 3 view .LVU5214
GAS LISTING /tmp/ccLUVin9.s 			page 413


 15486 5380 4839C6   		cmp	rsi, rax	# max, x
 15487              	# sieve_extend.c:1247:         bitarray[wordindex(x)] = markmask(x);
 15488              		.loc 1 1247 34 discriminator 3 view .LVU5215
 15489 5383 C4E2A1F7 		shlx	rcx, rdx, r11	# tmp119, tmp92, x
 15489      CA
 15490 5388 4E8914C7 		mov	QWORD PTR [rdi+r8*8], r10	# *_4, tmp116
1246:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15491              		.loc 1 1246 32 is_stmt 1 discriminator 3 view .LVU5216
1246:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15492              		.loc 1 1246 25 discriminator 3 view .LVU5217
 15493              		.loc 1 1247 9 discriminator 3 view .LVU5218
 15494              	# sieve_extend.c:1247:         bitarray[wordindex(x)] = markmask(x);
 15495              		.loc 1 1247 34 is_stmt 0 discriminator 3 view .LVU5219
 15496 538c 4A890CCF 		mov	QWORD PTR [rdi+r9*8], rcx	# *_4, tmp119
1246:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15497              		.loc 1 1246 32 is_stmt 1 discriminator 3 view .LVU5220
 15498              	.LVL914:
1246:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15499              		.loc 1 1246 25 discriminator 3 view .LVU5221
 15500              	# sieve_extend.c:1246:     for (counter_t x=0; x<max; x++) {
1246:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15501              		.loc 1 1246 5 is_stmt 0 discriminator 3 view .LVU5222
 15502 5390 0F8557FF 		jne	.L1202	#,
 15502      FFFF
 15503              	.LVL915:
 15504              	.L1242:
1246:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15505              		.loc 1 1246 5 discriminator 3 view .LVU5223
 15506              	.LBE915:
 15507              	# sieve_extend.c:1249: }
1248:sieve_extend.c ****     }
1249:sieve_extend.c **** }
 15508              		.loc 1 1249 1 view .LVU5224
 15509 5396 C3       		ret	
 15510              	.LVL916:
 15511              		.p2align 4,,7
 15512 5397 90       		.p2align 3
 15513              	.L1243:
 15514              	.LBB916:
1247:sieve_extend.c ****     }
 15515              		.loc 1 1247 9 is_stmt 1 view .LVU5225
 15516              	# sieve_extend.c:1247:         bitarray[wordindex(x)] = markmask(x);
1247:sieve_extend.c ****     }
 15517              		.loc 1 1247 34 is_stmt 0 view .LVU5226
 15518 5398 48C704C7 		mov	QWORD PTR [rdi+rax*8], 1	# *_4,
 15518      01000000 
1246:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15519              		.loc 1 1246 32 is_stmt 1 view .LVU5227
 15520              	.LVL917:
 15521              	# sieve_extend.c:1246:     for (counter_t x=0; x<max; x++) {
1246:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15522              		.loc 1 1246 33 is_stmt 0 view .LVU5228
 15523 53a0 B8010000 		mov	eax, 1	# x,
 15523      00
1246:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15524              		.loc 1 1246 25 is_stmt 1 view .LVU5229
 15525 53a5 E9C2FEFF 		jmp	.L1232	#
GAS LISTING /tmp/ccLUVin9.s 			page 414


 15525      FF
 15526              	.L1244:
1246:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15527              		.loc 1 1246 25 is_stmt 0 view .LVU5230
 15528 53aa C3       		ret	
 15529              	.LBE916:
 15530              		.cfi_endproc
 15531              	.LFE93:
 15533 53ab 0F1F4400 		.p2align 4
 15533      00
 15534              		.globl	test2
 15536              	test2:
 15537              	.LFB107:
 15538              		.cfi_startproc
 15539 53b0 F30F1EFA 		endbr64	
 15540 53b4 4885F6   		test	rsi, rsi	# max
 15541 53b7 0F846901 		je	.L1287	#,
 15541      0000
 15542 53bd 4889F1   		mov	rcx, rsi	# tmp97, max
 15543 53c0 31C0     		xor	eax, eax	# x
 15544 53c2 83E107   		and	ecx, 7	# tmp97,
 15545 53c5 BA010000 		mov	edx, 1	# tmp92,
 15545      00
 15546 53ca 0F84AD00 		je	.L1247	#,
 15546      0000
 15547 53d0 4883F901 		cmp	rcx, 1	# tmp97,
 15548 53d4 0F848600 		je	.L1272	#,
 15548      0000
 15549 53da 4883F902 		cmp	rcx, 2	# tmp97,
 15550 53de 746C     		je	.L1273	#,
 15551 53e0 4883F903 		cmp	rcx, 3	# tmp97,
 15552 53e4 7452     		je	.L1274	#,
 15553 53e6 4883F904 		cmp	rcx, 4	# tmp97,
 15554 53ea 7438     		je	.L1275	#,
 15555 53ec 4883F905 		cmp	rcx, 5	# tmp97,
 15556 53f0 741E     		je	.L1276	#,
 15557 53f2 4883F906 		cmp	rcx, 6	# tmp97,
 15558 53f6 0F852C01 		jne	.L1288	#,
 15558      0000
 15559              	.L1277:
 15560 53fc 4989C1   		mov	r9, rax	# tmp122, x
 15561 53ff C462F9F7 		shlx	r8, rdx, rax	# tmp123, tmp92, x
 15561      C2
 15562 5404 49C1E906 		shr	r9, 6	# tmp122,
 15563 5408 4883C001 		add	rax, 1	# x,
 15564 540c 4E8904CF 		mov	QWORD PTR [rdi+r9*8], r8	# *_9, tmp123
 15565              	.L1276:
 15566 5410 4989C2   		mov	r10, rax	# tmp124, x
 15567 5413 C462F9F7 		shlx	r11, rdx, rax	# tmp125, tmp92, x
 15567      DA
 15568 5418 49C1EA06 		shr	r10, 6	# tmp124,
 15569 541c 4883C001 		add	rax, 1	# x,
 15570 5420 4E891CD7 		mov	QWORD PTR [rdi+r10*8], r11	# *_9, tmp125
 15571              	.L1275:
 15572 5424 4889C1   		mov	rcx, rax	# tmp126, x
 15573 5427 C462F9F7 		shlx	r9, rdx, rax	# tmp127, tmp92, x
 15573      CA
GAS LISTING /tmp/ccLUVin9.s 			page 415


 15574 542c 48C1E906 		shr	rcx, 6	# tmp126,
 15575 5430 4883C001 		add	rax, 1	# x,
 15576 5434 4C890CCF 		mov	QWORD PTR [rdi+rcx*8], r9	# *_9, tmp127
 15577              	.L1274:
 15578 5438 4989C2   		mov	r10, rax	# tmp128, x
 15579 543b C462F9F7 		shlx	r8, rdx, rax	# tmp129, tmp92, x
 15579      C2
 15580 5440 49C1EA06 		shr	r10, 6	# tmp128,
 15581 5444 4883C001 		add	rax, 1	# x,
 15582 5448 4E8904D7 		mov	QWORD PTR [rdi+r10*8], r8	# *_9, tmp129
 15583              	.L1273:
 15584 544c 4989C3   		mov	r11, rax	# tmp130, x
 15585 544f C4E2F9F7 		shlx	rcx, rdx, rax	# tmp131, tmp92, x
 15585      CA
 15586 5454 49C1EB06 		shr	r11, 6	# tmp130,
 15587 5458 4883C001 		add	rax, 1	# x,
 15588 545c 4A890CDF 		mov	QWORD PTR [rdi+r11*8], rcx	# *_9, tmp131
 15589              	.L1272:
 15590 5460 4989C1   		mov	r9, rax	# tmp132, x
 15591 5463 C462F9F7 		shlx	r10, rdx, rax	# tmp133, tmp92, x
 15591      D2
 15592 5468 49C1E906 		shr	r9, 6	# tmp132,
 15593 546c 4883C001 		add	rax, 1	# x,
 15594 5470 4E8914CF 		mov	QWORD PTR [rdi+r9*8], r10	# *_9, tmp133
 15595 5474 4839C6   		cmp	rsi, rax	# max, x
 15596 5477 0F84BD00 		je	.L1289	#,
 15596      0000
 15597              	.L1247:
 15598 547d 488D4801 		lea	rcx, 1[rax]	# tmp98,
 15599 5481 4989C3   		mov	r11, rax	# tmp90, x
 15600 5484 49C1EB06 		shr	r11, 6	# tmp90,
 15601 5488 4989C9   		mov	r9, rcx	# tmp100, tmp98
 15602 548b 49C1E906 		shr	r9, 6	# tmp100,
 15603 548f C462F9F7 		shlx	r8, rdx, rax	# tmp93, tmp92, x
 15603      C2
 15604 5494 C462F1F7 		shlx	r10, rdx, rcx	# tmp101, tmp92, tmp98
 15604      D2
 15605 5499 4E8904DF 		mov	QWORD PTR [rdi+r11*8], r8	# *_9, tmp93
 15606 549d 4E8914CF 		mov	QWORD PTR [rdi+r9*8], r10	# *_9, tmp101
 15607 54a1 4C8D5802 		lea	r11, 2[rax]	# x,
 15608 54a5 4C8D4803 		lea	r9, 3[rax]	# x,
 15609 54a9 4D89D8   		mov	r8, r11	# tmp103, x
 15610 54ac 49C1E806 		shr	r8, 6	# tmp103,
 15611 54b0 4D89CA   		mov	r10, r9	# tmp106, x
 15612 54b3 49C1EA06 		shr	r10, 6	# tmp106,
 15613 54b7 C4E2A1F7 		shlx	rcx, rdx, r11	# tmp104, tmp92, x
 15613      CA
 15614 54bc C462B1F7 		shlx	r11, rdx, r9	# tmp107, tmp92, x
 15614      DA
 15615 54c1 4A890CC7 		mov	QWORD PTR [rdi+r8*8], rcx	# *_9, tmp104
 15616 54c5 4E891CD7 		mov	QWORD PTR [rdi+r10*8], r11	# *_9, tmp107
 15617 54c9 488D4804 		lea	rcx, 4[rax]	# x,
 15618 54cd 4C8D5005 		lea	r10, 5[rax]	# x,
 15619 54d1 4989C8   		mov	r8, rcx	# tmp109, x
 15620 54d4 49C1E806 		shr	r8, 6	# tmp109,
 15621 54d8 4D89D3   		mov	r11, r10	# tmp112, x
 15622 54db 49C1EB06 		shr	r11, 6	# tmp112,
GAS LISTING /tmp/ccLUVin9.s 			page 416


 15623 54df C462F1F7 		shlx	r9, rdx, rcx	# tmp110, tmp92, x
 15623      CA
 15624 54e4 C4E2A9F7 		shlx	rcx, rdx, r10	# tmp113, tmp92, x
 15624      CA
 15625 54e9 4E890CC7 		mov	QWORD PTR [rdi+r8*8], r9	# *_9, tmp110
 15626 54ed 4A890CDF 		mov	QWORD PTR [rdi+r11*8], rcx	# *_9, tmp113
 15627 54f1 4C8D4806 		lea	r9, 6[rax]	# x,
 15628 54f5 4C8D5807 		lea	r11, 7[rax]	# x,
 15629 54f9 4D89C8   		mov	r8, r9	# tmp115, x
 15630 54fc C462B1F7 		shlx	r10, rdx, r9	# tmp116, tmp92, x
 15630      D2
 15631 5501 4883C008 		add	rax, 8	# x,
 15632 5505 49C1E806 		shr	r8, 6	# tmp115,
 15633 5509 4D89D9   		mov	r9, r11	# tmp118, x
 15634 550c 49C1E906 		shr	r9, 6	# tmp118,
 15635 5510 4839C6   		cmp	rsi, rax	# max, x
 15636 5513 C4E2A1F7 		shlx	rcx, rdx, r11	# tmp119, tmp92, x
 15636      CA
 15637 5518 4E8914C7 		mov	QWORD PTR [rdi+r8*8], r10	# *_9, tmp116
 15638 551c 4A890CCF 		mov	QWORD PTR [rdi+r9*8], rcx	# *_9, tmp119
 15639 5520 0F8557FF 		jne	.L1247	#,
 15639      FFFF
 15640              	.L1287:
 15641 5526 C3       		ret	
 15642              		.p2align 4,,7
 15643 5527 90       		.p2align 3
 15644              	.L1288:
 15645 5528 48C704C7 		mov	QWORD PTR [rdi+rax*8], 1	# *_9,
 15645      01000000 
 15646 5530 B8010000 		mov	eax, 1	# x,
 15646      00
 15647 5535 E9C2FEFF 		jmp	.L1277	#
 15647      FF
 15648              	.L1289:
 15649 553a C3       		ret	
 15650              		.cfi_endproc
 15651              	.LFE107:
 15653 553b 0F1F4400 		.p2align 4
 15653      00
 15654              		.globl	test3
 15656              	test3:
 15657              	.LVL918:
 15658              	.LFB95:
1250:sieve_extend.c **** 
1251:sieve_extend.c **** void test2(bitword_t* __restrict bitarray, counter_t max) {
1252:sieve_extend.c ****     //#pragma GCC unroll 16
1253:sieve_extend.c ****     #pragma GCC ivdep 
1254:sieve_extend.c ****     for (counter_t x=0; x<max; x++) {
1255:sieve_extend.c ****         *(bitarray+wordindex(x)) = markmask(x);
1256:sieve_extend.c ****     }
1257:sieve_extend.c **** }
1258:sieve_extend.c **** 
1259:sieve_extend.c **** void test3(bitword_t* __restrict bitarray, counter_t max) {
 15659              		.loc 1 1259 59 is_stmt 1 view -0
 15660              		.cfi_startproc
 15661              		.loc 1 1259 59 is_stmt 0 view .LVU5232
 15662 5540 F30F1EFA 		endbr64	
GAS LISTING /tmp/ccLUVin9.s 			page 417


1260:sieve_extend.c ****     for (register counter_t x=0; x<max; ) {
 15663              		.loc 1 1260 5 is_stmt 1 view .LVU5233
 15664              	.LBB917:
 15665              		.loc 1 1260 10 view .LVU5234
 15666              	.LVL919:
 15667              		.loc 1 1260 34 view .LVU5235
 15668              	# sieve_extend.c:1260:     for (register counter_t x=0; x<max; ) {
 15669              		.loc 1 1260 5 is_stmt 0 view .LVU5236
 15670 5544 4885F6   		test	rsi, rsi	# max
 15671 5547 0F840401 		je	.L1314	#,
 15671      0000
 15672              	# sieve_extend.c:1260:     for (register counter_t x=0; x<max; ) {
 15673              		.loc 1 1260 29 view .LVU5237
 15674 554d 31C0     		xor	eax, eax	# x
 15675              	.LBB918:
 15676              	# sieve_extend.c:1266:             mask |= markmask(x);
1261:sieve_extend.c ****         register bitword_t mask = SAFE_ZERO;
1262:sieve_extend.c ****         register counter_t index_word = wordstart(x);
1263:sieve_extend.c **** 
1264:sieve_extend.c ****         #pragma GCC ivdep
1265:sieve_extend.c ****         do {
1266:sieve_extend.c ****             mask |= markmask(x);
 15677              		.loc 1 1266 21 view .LVU5238
 15678 554f 41BA0100 		mov	r10d, 1	# tmp95,
 15678      0000
 15679              	.LVL920:
 15680 5555 66662E0F 		.p2align 4
 15680      1F840000 
 15680      000000
 15681              		.p2align 3
 15682              	.L1293:
1261:sieve_extend.c ****         register bitword_t mask = SAFE_ZERO;
 15683              		.loc 1 1261 9 is_stmt 1 view .LVU5239
1262:sieve_extend.c **** 
 15684              		.loc 1 1262 9 view .LVU5240
 15685              	# sieve_extend.c:1262:         register counter_t index_word = wordstart(x);
1262:sieve_extend.c **** 
 15686              		.loc 1 1262 28 is_stmt 0 view .LVU5241
 15687 5560 4989C0   		mov	r8, rax	# index_word, x
 15688              	# sieve_extend.c:1261:         register bitword_t mask = SAFE_ZERO;
1261:sieve_extend.c ****         register bitword_t mask = SAFE_ZERO;
 15689              		.loc 1 1261 28 view .LVU5242
 15690 5563 31C9     		xor	ecx, ecx	# mask
 15691              	# sieve_extend.c:1262:         register counter_t index_word = wordstart(x);
1262:sieve_extend.c **** 
 15692              		.loc 1 1262 28 view .LVU5243
 15693 5565 4983E0C0 		and	r8, -64	# index_word,
 15694              	.LVL921:
 15695              	.L1292:
 15696              		.loc 1 1266 13 is_stmt 1 discriminator 1 view .LVU5244
 15697              	# sieve_extend.c:1267:             x++;
1267:sieve_extend.c ****             x++;
 15698              		.loc 1 1267 14 is_stmt 0 discriminator 1 view .LVU5245
 15699 5569 4C8D4801 		lea	r9, 1[rax]	# tmp98,
 15700              	# sieve_extend.c:1266:             mask |= markmask(x);
1266:sieve_extend.c ****             x++;
 15701              		.loc 1 1266 21 discriminator 1 view .LVU5246
GAS LISTING /tmp/ccLUVin9.s 			page 418


 15702 556d C4C2F9F7 		shlx	rdx, r10, rax	# tmp94, tmp95, x
 15702      D2
 15703              	# sieve_extend.c:1268:         } while(wordstart(x)==index_word);
1268:sieve_extend.c ****         } while(wordstart(x)==index_word);
 15704              		.loc 1 1268 17 discriminator 1 view .LVU5247
 15705 5572 4D89CB   		mov	r11, r9	# tmp96, x
 15706              	# sieve_extend.c:1266:             mask |= markmask(x);
1266:sieve_extend.c ****             x++;
 15707              		.loc 1 1266 18 discriminator 1 view .LVU5248
 15708 5575 4809D1   		or	rcx, rdx	# mask, tmp94
 15709              	.LVL922:
1267:sieve_extend.c ****             x++;
 15710              		.loc 1 1267 13 is_stmt 1 discriminator 1 view .LVU5249
 15711              	# sieve_extend.c:1268:         } while(wordstart(x)==index_word);
 15712              		.loc 1 1268 17 is_stmt 0 discriminator 1 view .LVU5250
 15713 5578 4983E3C0 		and	r11, -64	# tmp96,
 15714              	# sieve_extend.c:1267:             x++;
1267:sieve_extend.c ****             x++;
 15715              		.loc 1 1267 14 discriminator 1 view .LVU5251
 15716 557c 4C89C8   		mov	rax, r9	# x, tmp98
 15717              	.LVL923:
 15718              		.loc 1 1268 16 is_stmt 1 discriminator 1 view .LVU5252
 15719              	# sieve_extend.c:1268:         } while(wordstart(x)==index_word);
 15720              		.loc 1 1268 9 is_stmt 0 discriminator 1 view .LVU5253
 15721 557f 4D39C3   		cmp	r11, r8	# tmp96, index_word
 15722 5582 0F85B800 		jne	.L1313	#,
 15722      0000
1266:sieve_extend.c ****             x++;
 15723              		.loc 1 1266 13 is_stmt 1 view .LVU5254
 15724              	# sieve_extend.c:1267:             x++;
1267:sieve_extend.c ****             x++;
 15725              		.loc 1 1267 14 is_stmt 0 view .LVU5255
 15726 5588 4883C001 		add	rax, 1	# x,
 15727              	.LVL924:
 15728              	# sieve_extend.c:1266:             mask |= markmask(x);
1266:sieve_extend.c ****             x++;
 15729              		.loc 1 1266 21 view .LVU5256
 15730 558c C4C2B1F7 		shlx	rdx, r10, r9	# tmp99, tmp95, x
 15730      D2
 15731              	# sieve_extend.c:1268:         } while(wordstart(x)==index_word);
 15732              		.loc 1 1268 17 view .LVU5257
 15733 5591 4989C3   		mov	r11, rax	# tmp100, x
 15734              	# sieve_extend.c:1266:             mask |= markmask(x);
1266:sieve_extend.c ****             x++;
 15735              		.loc 1 1266 18 view .LVU5258
 15736 5594 4809D1   		or	rcx, rdx	# mask, tmp99
 15737              	.LVL925:
1267:sieve_extend.c ****             x++;
 15738              		.loc 1 1267 13 is_stmt 1 view .LVU5259
 15739              		.loc 1 1268 16 view .LVU5260
 15740              	# sieve_extend.c:1268:         } while(wordstart(x)==index_word);
 15741              		.loc 1 1268 17 is_stmt 0 view .LVU5261
 15742 5597 4983E3C0 		and	r11, -64	# tmp100,
 15743              	# sieve_extend.c:1268:         } while(wordstart(x)==index_word);
 15744              		.loc 1 1268 9 view .LVU5262
 15745 559b 4D39C3   		cmp	r11, r8	# tmp100, index_word
 15746 559e 0F859C00 		jne	.L1313	#,
GAS LISTING /tmp/ccLUVin9.s 			page 419


 15746      0000
1266:sieve_extend.c ****             x++;
 15747              		.loc 1 1266 13 is_stmt 1 view .LVU5263
 15748              	# sieve_extend.c:1266:             mask |= markmask(x);
1266:sieve_extend.c ****             x++;
 15749              		.loc 1 1266 21 is_stmt 0 view .LVU5264
 15750 55a4 C4C2F9F7 		shlx	rax, r10, rax	# tmp101, tmp95, x
 15750      C2
 15751              	.LVL926:
 15752              	# sieve_extend.c:1266:             mask |= markmask(x);
1266:sieve_extend.c ****             x++;
 15753              		.loc 1 1266 18 view .LVU5265
 15754 55a9 4809C1   		or	rcx, rax	# mask, tmp101
 15755              	.LVL927:
1267:sieve_extend.c ****             x++;
 15756              		.loc 1 1267 13 is_stmt 1 view .LVU5266
 15757              	# sieve_extend.c:1267:             x++;
1267:sieve_extend.c ****             x++;
 15758              		.loc 1 1267 14 is_stmt 0 view .LVU5267
 15759 55ac 498D4102 		lea	rax, 2[r9]	# x,
 15760              	.LVL928:
 15761              		.loc 1 1268 16 is_stmt 1 view .LVU5268
 15762              	# sieve_extend.c:1268:         } while(wordstart(x)==index_word);
 15763              		.loc 1 1268 17 is_stmt 0 view .LVU5269
 15764 55b0 4889C2   		mov	rdx, rax	# tmp102, x
 15765 55b3 4883E2C0 		and	rdx, -64	# tmp102,
 15766              	# sieve_extend.c:1268:         } while(wordstart(x)==index_word);
 15767              		.loc 1 1268 9 view .LVU5270
 15768 55b7 4C39C2   		cmp	rdx, r8	# tmp102, index_word
 15769 55ba 0F858000 		jne	.L1313	#,
 15769      0000
1266:sieve_extend.c ****             x++;
 15770              		.loc 1 1266 13 is_stmt 1 view .LVU5271
 15771              	# sieve_extend.c:1266:             mask |= markmask(x);
1266:sieve_extend.c ****             x++;
 15772              		.loc 1 1266 21 is_stmt 0 view .LVU5272
 15773 55c0 C442F9F7 		shlx	r11, r10, rax	# tmp103, tmp95, x
 15773      DA
 15774              	# sieve_extend.c:1267:             x++;
1267:sieve_extend.c ****             x++;
 15775              		.loc 1 1267 14 view .LVU5273
 15776 55c5 498D4103 		lea	rax, 3[r9]	# x,
 15777              	.LVL929:
 15778              	# sieve_extend.c:1268:         } while(wordstart(x)==index_word);
 15779              		.loc 1 1268 17 view .LVU5274
 15780 55c9 4889C2   		mov	rdx, rax	# tmp104, x
 15781              	# sieve_extend.c:1266:             mask |= markmask(x);
1266:sieve_extend.c ****             x++;
 15782              		.loc 1 1266 18 view .LVU5275
 15783 55cc 4C09D9   		or	rcx, r11	# mask, tmp103
 15784              	.LVL930:
1267:sieve_extend.c ****             x++;
 15785              		.loc 1 1267 13 is_stmt 1 view .LVU5276
 15786              		.loc 1 1268 16 view .LVU5277
 15787              	# sieve_extend.c:1268:         } while(wordstart(x)==index_word);
 15788              		.loc 1 1268 17 is_stmt 0 view .LVU5278
 15789 55cf 4883E2C0 		and	rdx, -64	# tmp104,
GAS LISTING /tmp/ccLUVin9.s 			page 420


 15790              	# sieve_extend.c:1268:         } while(wordstart(x)==index_word);
 15791              		.loc 1 1268 9 view .LVU5279
 15792 55d3 4C39C2   		cmp	rdx, r8	# tmp104, index_word
 15793 55d6 7568     		jne	.L1313	#,
1266:sieve_extend.c ****             x++;
 15794              		.loc 1 1266 13 is_stmt 1 view .LVU5280
 15795              	# sieve_extend.c:1266:             mask |= markmask(x);
1266:sieve_extend.c ****             x++;
 15796              		.loc 1 1266 21 is_stmt 0 view .LVU5281
 15797 55d8 C4C2F9F7 		shlx	rax, r10, rax	# tmp105, tmp95, x
 15797      C2
 15798              	.LVL931:
 15799              	# sieve_extend.c:1266:             mask |= markmask(x);
1266:sieve_extend.c ****             x++;
 15800              		.loc 1 1266 18 view .LVU5282
 15801 55dd 4809C1   		or	rcx, rax	# mask, tmp105
 15802              	.LVL932:
1267:sieve_extend.c ****             x++;
 15803              		.loc 1 1267 13 is_stmt 1 view .LVU5283
 15804              	# sieve_extend.c:1267:             x++;
1267:sieve_extend.c ****             x++;
 15805              		.loc 1 1267 14 is_stmt 0 view .LVU5284
 15806 55e0 498D4104 		lea	rax, 4[r9]	# x,
 15807              	.LVL933:
 15808              		.loc 1 1268 16 is_stmt 1 view .LVU5285
 15809              	# sieve_extend.c:1268:         } while(wordstart(x)==index_word);
 15810              		.loc 1 1268 17 is_stmt 0 view .LVU5286
 15811 55e4 4989C3   		mov	r11, rax	# tmp106, x
 15812 55e7 4983E3C0 		and	r11, -64	# tmp106,
 15813              	# sieve_extend.c:1268:         } while(wordstart(x)==index_word);
 15814              		.loc 1 1268 9 view .LVU5287
 15815 55eb 4D39C3   		cmp	r11, r8	# tmp106, index_word
 15816 55ee 7550     		jne	.L1313	#,
1266:sieve_extend.c ****             x++;
 15817              		.loc 1 1266 13 is_stmt 1 view .LVU5288
 15818              	# sieve_extend.c:1266:             mask |= markmask(x);
1266:sieve_extend.c ****             x++;
 15819              		.loc 1 1266 21 is_stmt 0 view .LVU5289
 15820 55f0 C4C2F9F7 		shlx	rdx, r10, rax	# tmp107, tmp95, x
 15820      D2
 15821              	# sieve_extend.c:1267:             x++;
1267:sieve_extend.c ****             x++;
 15822              		.loc 1 1267 14 view .LVU5290
 15823 55f5 498D4105 		lea	rax, 5[r9]	# x,
 15824              	.LVL934:
 15825              	# sieve_extend.c:1268:         } while(wordstart(x)==index_word);
 15826              		.loc 1 1268 17 view .LVU5291
 15827 55f9 4989C3   		mov	r11, rax	# tmp108, x
 15828              	# sieve_extend.c:1266:             mask |= markmask(x);
1266:sieve_extend.c ****             x++;
 15829              		.loc 1 1266 18 view .LVU5292
 15830 55fc 4809D1   		or	rcx, rdx	# mask, tmp107
 15831              	.LVL935:
1267:sieve_extend.c ****             x++;
 15832              		.loc 1 1267 13 is_stmt 1 view .LVU5293
 15833              		.loc 1 1268 16 view .LVU5294
 15834              	# sieve_extend.c:1268:         } while(wordstart(x)==index_word);
GAS LISTING /tmp/ccLUVin9.s 			page 421


 15835              		.loc 1 1268 17 is_stmt 0 view .LVU5295
 15836 55ff 4983E3C0 		and	r11, -64	# tmp108,
 15837              	# sieve_extend.c:1268:         } while(wordstart(x)==index_word);
 15838              		.loc 1 1268 9 view .LVU5296
 15839 5603 4D39C3   		cmp	r11, r8	# tmp108, index_word
 15840 5606 7538     		jne	.L1313	#,
1266:sieve_extend.c ****             x++;
 15841              		.loc 1 1266 13 is_stmt 1 view .LVU5297
 15842              	# sieve_extend.c:1266:             mask |= markmask(x);
1266:sieve_extend.c ****             x++;
 15843              		.loc 1 1266 21 is_stmt 0 view .LVU5298
 15844 5608 C4C2F9F7 		shlx	rax, r10, rax	# tmp109, tmp95, x
 15844      C2
 15845              	.LVL936:
 15846              	# sieve_extend.c:1266:             mask |= markmask(x);
1266:sieve_extend.c ****             x++;
 15847              		.loc 1 1266 18 view .LVU5299
 15848 560d 4809C1   		or	rcx, rax	# mask, tmp109
 15849              	.LVL937:
1267:sieve_extend.c ****             x++;
 15850              		.loc 1 1267 13 is_stmt 1 view .LVU5300
 15851              	# sieve_extend.c:1267:             x++;
1267:sieve_extend.c ****             x++;
 15852              		.loc 1 1267 14 is_stmt 0 view .LVU5301
 15853 5610 498D4106 		lea	rax, 6[r9]	# x,
 15854              	.LVL938:
 15855              		.loc 1 1268 16 is_stmt 1 view .LVU5302
 15856              	# sieve_extend.c:1268:         } while(wordstart(x)==index_word);
 15857              		.loc 1 1268 17 is_stmt 0 view .LVU5303
 15858 5614 4889C2   		mov	rdx, rax	# tmp110, x
 15859 5617 4883E2C0 		and	rdx, -64	# tmp110,
 15860              	# sieve_extend.c:1268:         } while(wordstart(x)==index_word);
 15861              		.loc 1 1268 9 view .LVU5304
 15862 561b 4C39C2   		cmp	rdx, r8	# tmp110, index_word
 15863 561e 7520     		jne	.L1313	#,
1266:sieve_extend.c ****             x++;
 15864              		.loc 1 1266 13 is_stmt 1 view .LVU5305
 15865              	# sieve_extend.c:1266:             mask |= markmask(x);
1266:sieve_extend.c ****             x++;
 15866              		.loc 1 1266 21 is_stmt 0 view .LVU5306
 15867 5620 C442F9F7 		shlx	r11, r10, rax	# tmp111, tmp95, x
 15867      DA
 15868              	# sieve_extend.c:1267:             x++;
1267:sieve_extend.c ****             x++;
 15869              		.loc 1 1267 14 view .LVU5307
 15870 5625 498D4107 		lea	rax, 7[r9]	# x,
 15871              	.LVL939:
 15872              	# sieve_extend.c:1268:         } while(wordstart(x)==index_word);
 15873              		.loc 1 1268 17 view .LVU5308
 15874 5629 4989C1   		mov	r9, rax	# tmp112, x
 15875              	.LVL940:
 15876              	# sieve_extend.c:1266:             mask |= markmask(x);
1266:sieve_extend.c ****             x++;
 15877              		.loc 1 1266 18 view .LVU5309
 15878 562c 4C09D9   		or	rcx, r11	# mask, tmp111
 15879              	.LVL941:
1267:sieve_extend.c ****             x++;
GAS LISTING /tmp/ccLUVin9.s 			page 422


 15880              		.loc 1 1267 13 is_stmt 1 view .LVU5310
 15881              		.loc 1 1268 16 view .LVU5311
 15882              	# sieve_extend.c:1268:         } while(wordstart(x)==index_word);
 15883              		.loc 1 1268 17 is_stmt 0 view .LVU5312
 15884 562f 4983E1C0 		and	r9, -64	# tmp112,
 15885              	# sieve_extend.c:1268:         } while(wordstart(x)==index_word);
 15886              		.loc 1 1268 9 view .LVU5313
 15887 5633 4D39C1   		cmp	r9, r8	# tmp112, index_word
 15888 5636 0F842DFF 		je	.L1292	#,
 15888      FFFF
 15889 563c 0F1F4000 		.p2align 4
 15890              		.p2align 3
 15891              	.L1313:
1269:sieve_extend.c ****         bitarray[wordindex(index_word)] = mask;
 15892              		.loc 1 1269 9 is_stmt 1 view .LVU5314
 15893              	# sieve_extend.c:1269:         bitarray[wordindex(index_word)] = mask;
 15894              		.loc 1 1269 18 is_stmt 0 view .LVU5315
 15895 5640 49C1E806 		shr	r8, 6	# tmp97,
 15896              	.LVL942:
 15897              		.loc 1 1269 18 view .LVU5316
 15898              	.LBE918:
 15899              	# sieve_extend.c:1260:     for (register counter_t x=0; x<max; ) {
1260:sieve_extend.c ****         register bitword_t mask = SAFE_ZERO;
 15900              		.loc 1 1260 5 view .LVU5317
 15901 5644 4839C6   		cmp	rsi, rax	# max, x
 15902              	.LBB919:
 15903              	# sieve_extend.c:1269:         bitarray[wordindex(index_word)] = mask;
 15904              		.loc 1 1269 41 view .LVU5318
 15905 5647 4A890CC7 		mov	QWORD PTR [rdi+r8*8], rcx	# *_6, mask
 15906              		.loc 1 1269 41 view .LVU5319
 15907              	.LBE919:
1260:sieve_extend.c ****         register bitword_t mask = SAFE_ZERO;
 15908              		.loc 1 1260 34 is_stmt 1 view .LVU5320
 15909              	# sieve_extend.c:1260:     for (register counter_t x=0; x<max; ) {
1260:sieve_extend.c ****         register bitword_t mask = SAFE_ZERO;
 15910              		.loc 1 1260 5 is_stmt 0 view .LVU5321
 15911 564b 0F870FFF 		ja	.L1293	#,
 15911      FFFF
 15912              	.LVL943:
 15913              	.L1314:
1260:sieve_extend.c ****         register bitword_t mask = SAFE_ZERO;
 15914              		.loc 1 1260 5 view .LVU5322
 15915              	.LBE917:
 15916              	# sieve_extend.c:1271: }
1270:sieve_extend.c ****     }
1271:sieve_extend.c **** }
 15917              		.loc 1 1271 1 view .LVU5323
 15918 5651 C3       		ret	
 15919              		.cfi_endproc
 15920              	.LFE95:
 15922 5652 66662E0F 		.p2align 4
 15922      1F840000 
 15922      0000000F 
 15922      1F00
 15923              		.globl	testshuffle_vector
 15925              	testshuffle_vector:
 15926              	.LVL944:
GAS LISTING /tmp/ccLUVin9.s 			page 423


 15927              	.LFB96:
1272:sieve_extend.c **** 
1273:sieve_extend.c **** //void test4(bitword_t* __restrict bitarray, counter_t max) {
1274:sieve_extend.c **** //    bitvector_t* bitvector = (bitvector_t*) bitarray;
1275:sieve_extend.c **** //    for (register int x=0; x<max; ) {
1276:sieve_extend.c **** //        register bitvector_t mask = {};
1277:sieve_extend.c **** //        register counter_t index_vector = vectorstart(x);
1278:sieve_extend.c **** //        register counter_t index_word = wordindex(x);
1279:sieve_extend.c **** //        register word = wordindex(x);
1280:sieve_extend.c **** //        #pragma GCC ivdep
1281:sieve_extend.c **** //        do {
1282:sieve_extend.c **** //            mask[word[] |= markmask(x);
1283:sieve_extend.c **** //            x++;
1284:sieve_extend.c **** //            word =
1285:sieve_extend.c **** //        } while(wordstart(x)==index_word);
1286:sieve_extend.c **** //        bitvector[wordindex(index_word)] = mask;
1287:sieve_extend.c **** //    }
1288:sieve_extend.c **** //}
1289:sieve_extend.c **** 
1290:sieve_extend.c **** void testshuffle_vector(bitword_t* __restrict bitarray, counter_t max) {
 15928              		.loc 1 1290 72 is_stmt 1 view -0
 15929              		.cfi_startproc
 15930              		.loc 1 1290 72 is_stmt 0 view .LVU5325
 15931 5660 F30F1EFA 		endbr64	
1291:sieve_extend.c ****     
1292:sieve_extend.c ****     bitword_t* bitarray_word     = (bitword_t*)bitarray;
 15932              		.loc 1 1292 5 is_stmt 1 view .LVU5326
 15933              	.LVL945:
1293:sieve_extend.c ****     bitvector_t* bitarray_vector = (bitvector_t*)bitarray;
 15934              		.loc 1 1293 5 view .LVU5327
1294:sieve_extend.c ****     
1295:sieve_extend.c ****     for (counter_t i=1; i<8*64 && i < max; i+=20) {
 15935              		.loc 1 1295 5 view .LVU5328
 15936              	.LBB920:
 15937              		.loc 1 1295 10 view .LVU5329
 15938              		.loc 1 1295 25 view .LVU5330
 15939              	# sieve_extend.c:1295:     for (counter_t i=1; i<8*64 && i < max; i+=20) {
 15940              		.loc 1 1295 5 is_stmt 0 view .LVU5331
 15941 5664 4883FE01 		cmp	rsi, 1	# max,
 15942 5668 0F86C300 		jbe	.L1316	#,
 15942      0000
 15943              	# sieve_extend.c:1296:         bitarray_word[wordindex(i)] |= markmask(i);
1296:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 15944              		.loc 1 1296 37 view .LVU5332
 15945 566e 48830F02 		or	QWORD PTR [rdi], 2	# *_3,
 15946              	# sieve_extend.c:1295:     for (counter_t i=1; i<8*64 && i < max; i+=20) {
1295:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 15947              		.loc 1 1295 5 view .LVU5333
 15948 5672 4883FE15 		cmp	rsi, 21	# max,
 15949              	# sieve_extend.c:1296:         bitarray_word[wordindex(i)] |= markmask(i);
 15950              		.loc 1 1296 40 view .LVU5334
 15951 5676 B9010000 		mov	ecx, 1	# tmp134,
 15951      00
 15952              		.loc 1 1296 9 is_stmt 1 view .LVU5335
1295:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 15953              		.loc 1 1295 44 view .LVU5336
 15954              	# sieve_extend.c:1295:     for (counter_t i=1; i<8*64 && i < max; i+=20) {
GAS LISTING /tmp/ccLUVin9.s 			page 424


1295:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 15955              		.loc 1 1295 45 is_stmt 0 view .LVU5337
 15956 567b B8150000 		mov	eax, 21	# i,
 15956      00
1295:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 15957              		.loc 1 1295 25 is_stmt 1 view .LVU5338
 15958              	# sieve_extend.c:1295:     for (counter_t i=1; i<8*64 && i < max; i+=20) {
1295:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 15959              		.loc 1 1295 5 is_stmt 0 view .LVU5339
 15960 5680 0F86AB00 		jbe	.L1316	#,
 15960      0000
 15961              	.L1317:
 15962              		.loc 1 1296 9 is_stmt 1 discriminator 3 view .LVU5340
 15963              	# sieve_extend.c:1296:         bitarray_word[wordindex(i)] |= markmask(i);
 15964              		.loc 1 1296 37 is_stmt 0 discriminator 3 view .LVU5341
 15965 5686 4889C2   		mov	rdx, rax	# tmp169, i
 15966              	# sieve_extend.c:1295:     for (counter_t i=1; i<8*64 && i < max; i+=20) {
1295:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 15967              		.loc 1 1295 45 discriminator 3 view .LVU5342
 15968 5689 4C8D4814 		lea	r9, 20[rax]	# tmp167,
 15969              	# sieve_extend.c:1296:         bitarray_word[wordindex(i)] |= markmask(i);
 15970              		.loc 1 1296 37 discriminator 3 view .LVU5343
 15971 568d 48C1EA06 		shr	rdx, 6	# tmp169,
 15972              	# sieve_extend.c:1296:         bitarray_word[wordindex(i)] |= markmask(i);
 15973              		.loc 1 1296 40 discriminator 3 view .LVU5344
 15974 5691 C462F9F7 		shlx	r8, rcx, rax	# tmp172, tmp134, i
 15974      C1
 15975              	# sieve_extend.c:1296:         bitarray_word[wordindex(i)] |= markmask(i);
 15976              		.loc 1 1296 37 discriminator 3 view .LVU5345
 15977 5696 4C0904D7 		or	QWORD PTR [rdi+rdx*8], r8	# *_3, tmp172
1295:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 15978              		.loc 1 1295 44 is_stmt 1 discriminator 3 view .LVU5346
1295:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 15979              		.loc 1 1295 25 discriminator 3 view .LVU5347
 15980              	# sieve_extend.c:1295:     for (counter_t i=1; i<8*64 && i < max; i+=20) {
1295:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 15981              		.loc 1 1295 5 is_stmt 0 discriminator 3 view .LVU5348
 15982 569a 4981F9FF 		cmp	r9, 511	# tmp167,
 15982      010000
 15983 56a1 0F878A00 		ja	.L1316	#,
 15983      0000
 15984 56a7 4C39CE   		cmp	rsi, r9	# max, tmp167
 15985 56aa 0F868100 		jbe	.L1316	#,
 15985      0000
 15986              		.loc 1 1296 9 is_stmt 1 view .LVU5349
 15987              	# sieve_extend.c:1296:         bitarray_word[wordindex(i)] |= markmask(i);
 15988              		.loc 1 1296 37 is_stmt 0 view .LVU5350
 15989 56b0 4D89CA   		mov	r10, r9	# tmp210, tmp167
 15990              	# sieve_extend.c:1295:     for (counter_t i=1; i<8*64 && i < max; i+=20) {
1295:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 15991              		.loc 1 1295 45 view .LVU5351
 15992 56b3 488D5028 		lea	rdx, 40[rax]	# i,
 15993              	# sieve_extend.c:1296:         bitarray_word[wordindex(i)] |= markmask(i);
 15994              		.loc 1 1296 37 view .LVU5352
 15995 56b7 49C1EA06 		shr	r10, 6	# tmp210,
 15996              	# sieve_extend.c:1296:         bitarray_word[wordindex(i)] |= markmask(i);
 15997              		.loc 1 1296 40 view .LVU5353
GAS LISTING /tmp/ccLUVin9.s 			page 425


 15998 56bb C462B1F7 		shlx	r11, rcx, r9	# tmp213, tmp134, tmp167
 15998      D9
 15999              	# sieve_extend.c:1296:         bitarray_word[wordindex(i)] |= markmask(i);
 16000              		.loc 1 1296 37 view .LVU5354
 16001 56c0 4E091CD7 		or	QWORD PTR [rdi+r10*8], r11	# *_3, tmp213
1295:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16002              		.loc 1 1295 44 is_stmt 1 view .LVU5355
1295:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16003              		.loc 1 1295 25 view .LVU5356
 16004              	# sieve_extend.c:1295:     for (counter_t i=1; i<8*64 && i < max; i+=20) {
1295:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16005              		.loc 1 1295 5 is_stmt 0 view .LVU5357
 16006 56c4 4839D6   		cmp	rsi, rdx	# max, i
 16007 56c7 7668     		jbe	.L1316	#,
 16008              		.loc 1 1296 9 is_stmt 1 view .LVU5358
 16009              	# sieve_extend.c:1296:         bitarray_word[wordindex(i)] |= markmask(i);
 16010              		.loc 1 1296 37 is_stmt 0 view .LVU5359
 16011 56c9 4989D0   		mov	r8, rdx	# tmp217, i
 16012              	# sieve_extend.c:1295:     for (counter_t i=1; i<8*64 && i < max; i+=20) {
1295:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16013              		.loc 1 1295 45 view .LVU5360
 16014 56cc 4C8D503C 		lea	r10, 60[rax]	# i,
 16015              	# sieve_extend.c:1296:         bitarray_word[wordindex(i)] |= markmask(i);
 16016              		.loc 1 1296 37 view .LVU5361
 16017 56d0 49C1E806 		shr	r8, 6	# tmp217,
 16018              	# sieve_extend.c:1296:         bitarray_word[wordindex(i)] |= markmask(i);
 16019              		.loc 1 1296 40 view .LVU5362
 16020 56d4 C462E9F7 		shlx	r9, rcx, rdx	# tmp220, tmp134, i
 16020      C9
 16021              	# sieve_extend.c:1296:         bitarray_word[wordindex(i)] |= markmask(i);
 16022              		.loc 1 1296 37 view .LVU5363
 16023 56d9 4E090CC7 		or	QWORD PTR [rdi+r8*8], r9	# *_3, tmp220
1295:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16024              		.loc 1 1295 44 is_stmt 1 view .LVU5364
1295:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16025              		.loc 1 1295 25 view .LVU5365
 16026              	# sieve_extend.c:1295:     for (counter_t i=1; i<8*64 && i < max; i+=20) {
1295:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16027              		.loc 1 1295 5 is_stmt 0 view .LVU5366
 16028 56dd 4C39D6   		cmp	rsi, r10	# max, i
 16029 56e0 764F     		jbe	.L1316	#,
 16030              		.loc 1 1296 9 is_stmt 1 view .LVU5367
 16031              	# sieve_extend.c:1296:         bitarray_word[wordindex(i)] |= markmask(i);
 16032              		.loc 1 1296 37 is_stmt 0 view .LVU5368
 16033 56e2 4D89D3   		mov	r11, r10	# tmp224, i
 16034              	# sieve_extend.c:1295:     for (counter_t i=1; i<8*64 && i < max; i+=20) {
1295:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16035              		.loc 1 1295 45 view .LVU5369
 16036 56e5 4C8D4850 		lea	r9, 80[rax]	# i,
 16037              	# sieve_extend.c:1296:         bitarray_word[wordindex(i)] |= markmask(i);
 16038              		.loc 1 1296 37 view .LVU5370
 16039 56e9 49C1EB06 		shr	r11, 6	# tmp224,
 16040              	# sieve_extend.c:1296:         bitarray_word[wordindex(i)] |= markmask(i);
 16041              		.loc 1 1296 40 view .LVU5371
 16042 56ed C4E2A9F7 		shlx	rdx, rcx, r10	# tmp227, tmp134, i
 16042      D1
 16043              	# sieve_extend.c:1296:         bitarray_word[wordindex(i)] |= markmask(i);
GAS LISTING /tmp/ccLUVin9.s 			page 426


 16044              		.loc 1 1296 37 view .LVU5372
 16045 56f2 4A0914DF 		or	QWORD PTR [rdi+r11*8], rdx	# *_3, tmp227
1295:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16046              		.loc 1 1295 44 is_stmt 1 view .LVU5373
1295:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16047              		.loc 1 1295 25 view .LVU5374
 16048              	# sieve_extend.c:1295:     for (counter_t i=1; i<8*64 && i < max; i+=20) {
1295:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16049              		.loc 1 1295 5 is_stmt 0 view .LVU5375
 16050 56f6 4C39CE   		cmp	rsi, r9	# max, i
 16051 56f9 7636     		jbe	.L1316	#,
 16052              		.loc 1 1296 9 is_stmt 1 view .LVU5376
 16053              	# sieve_extend.c:1296:         bitarray_word[wordindex(i)] |= markmask(i);
 16054              		.loc 1 1296 37 is_stmt 0 view .LVU5377
 16055 56fb 4D89C8   		mov	r8, r9	# tmp231, i
 16056              	# sieve_extend.c:1295:     for (counter_t i=1; i<8*64 && i < max; i+=20) {
1295:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16057              		.loc 1 1295 45 view .LVU5378
 16058 56fe 4C8D5864 		lea	r11, 100[rax]	# i,
 16059              	# sieve_extend.c:1296:         bitarray_word[wordindex(i)] |= markmask(i);
 16060              		.loc 1 1296 37 view .LVU5379
 16061 5702 49C1E806 		shr	r8, 6	# tmp231,
 16062              	# sieve_extend.c:1296:         bitarray_word[wordindex(i)] |= markmask(i);
 16063              		.loc 1 1296 40 view .LVU5380
 16064 5706 C462B1F7 		shlx	r10, rcx, r9	# tmp234, tmp134, i
 16064      D1
 16065              	# sieve_extend.c:1296:         bitarray_word[wordindex(i)] |= markmask(i);
 16066              		.loc 1 1296 37 view .LVU5381
 16067 570b 4E0914C7 		or	QWORD PTR [rdi+r8*8], r10	# *_3, tmp234
1295:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16068              		.loc 1 1295 44 is_stmt 1 view .LVU5382
1295:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16069              		.loc 1 1295 25 view .LVU5383
 16070              	# sieve_extend.c:1295:     for (counter_t i=1; i<8*64 && i < max; i+=20) {
1295:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16071              		.loc 1 1295 5 is_stmt 0 view .LVU5384
 16072 570f 4C39DE   		cmp	rsi, r11	# max, i
 16073 5712 761D     		jbe	.L1316	#,
 16074              		.loc 1 1296 9 is_stmt 1 view .LVU5385
 16075              	# sieve_extend.c:1296:         bitarray_word[wordindex(i)] |= markmask(i);
 16076              		.loc 1 1296 37 is_stmt 0 view .LVU5386
 16077 5714 4D89D9   		mov	r9, r11	# tmp238, i
 16078              	# sieve_extend.c:1295:     for (counter_t i=1; i<8*64 && i < max; i+=20) {
1295:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16079              		.loc 1 1295 45 view .LVU5387
 16080 5717 4883C078 		add	rax, 120	# i,
 16081              	# sieve_extend.c:1296:         bitarray_word[wordindex(i)] |= markmask(i);
 16082              		.loc 1 1296 37 view .LVU5388
 16083 571b 49C1E906 		shr	r9, 6	# tmp238,
 16084              	# sieve_extend.c:1296:         bitarray_word[wordindex(i)] |= markmask(i);
 16085              		.loc 1 1296 40 view .LVU5389
 16086 571f C4E2A1F7 		shlx	rdx, rcx, r11	# tmp241, tmp134, i
 16086      D1
 16087              	# sieve_extend.c:1296:         bitarray_word[wordindex(i)] |= markmask(i);
 16088              		.loc 1 1296 37 view .LVU5390
 16089 5724 4A0914CF 		or	QWORD PTR [rdi+r9*8], rdx	# *_3, tmp241
1295:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
GAS LISTING /tmp/ccLUVin9.s 			page 427


 16090              		.loc 1 1295 44 is_stmt 1 view .LVU5391
1295:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16091              		.loc 1 1295 25 view .LVU5392
 16092              	# sieve_extend.c:1295:     for (counter_t i=1; i<8*64 && i < max; i+=20) {
1295:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16093              		.loc 1 1295 5 is_stmt 0 view .LVU5393
 16094 5728 4839C6   		cmp	rsi, rax	# max, i
 16095 572b 0F8755FF 		ja	.L1317	#,
 16095      FFFF
 16096              	.LVL946:
 16097              	.L1316:
1295:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16098              		.loc 1 1295 5 view .LVU5394
 16099              	.LBE920:
1297:sieve_extend.c ****     }
1298:sieve_extend.c **** 
1299:sieve_extend.c ****     counter_t source_start = 66+64;
 16100              		.loc 1 1299 5 is_stmt 1 view .LVU5395
1300:sieve_extend.c ****     counter_t destination_start = 3*4*64 + 12;
 16101              		.loc 1 1300 5 view .LVU5396
1301:sieve_extend.c ****     bitarray_word[wordindex(source_start)]  |= markmask_calc(source_start);
 16102              		.loc 1 1301 5 view .LVU5397
1302:sieve_extend.c ****     bitarray_word[wordindex(source_start+1)]  |= markmask_calc(source_start+1);
 16103              		.loc 1 1302 5 view .LVU5398
 16104              	# sieve_extend.c:1302:     bitarray_word[wordindex(source_start+1)]  |= markmask_calc(source_start+
 16105              		.loc 1 1302 47 is_stmt 0 view .LVU5399
 16106 5731 48834F10 		or	QWORD PTR 16[rdi], 12	# MEM[(uint64_t *)bitarray_29(D) + 16B],
 16106      0C
1303:sieve_extend.c **** 
1304:sieve_extend.c **** 
1305:sieve_extend.c ****     counter_t source_vector = vectorindex(source_start);
 16107              		.loc 1 1305 5 is_stmt 1 view .LVU5400
 16108              	.LVL947:
1306:sieve_extend.c ****     counter_t delta_word   = 4-((wordindex(destination_start) - wordindex(source_start)) % 4);
 16109              		.loc 1 1306 5 view .LVU5401
1307:sieve_extend.c ****     int32_t delta_bit    = bitindex_calc(destination_start) - bitindex_calc(source_start); // could
 16110              		.loc 1 1307 5 view .LVU5402
1308:sieve_extend.c ****     
1309:sieve_extend.c ****     bitshift_t shift_bit = delta_bit; 
 16111              		.loc 1 1309 5 view .LVU5403
1310:sieve_extend.c ****     bitshift_t shift_bit_flipped = WORD_SIZE_bitshift - shift_bit; 
 16112              		.loc 1 1310 5 view .LVU5404
1311:sieve_extend.c **** 
1312:sieve_extend.c **** //    if (delta_bit) ....
1313:sieve_extend.c **** 
1314:sieve_extend.c ****     const bitvector_t shuffle1 = { delta_word-1, delta_word, delta_word+1, delta_word+2 };
 16113              		.loc 1 1314 5 view .LVU5405
1315:sieve_extend.c ****     const bitvector_t shuffle2 = { delta_word, delta_word+1, delta_word+2, delta_word+3 };
 16114              		.loc 1 1315 5 view .LVU5406
1316:sieve_extend.c ****     const bitvector_t shift = { shift_bit, shift_bit, shift_bit, shift_bit };
 16115              		.loc 1 1316 5 view .LVU5407
1317:sieve_extend.c ****     const bitvector_t shift_flipped = { shift_bit_flipped, shift_bit_flipped, shift_bit_flipped, sh
 16116              		.loc 1 1317 5 view .LVU5408
1318:sieve_extend.c **** 
1319:sieve_extend.c ****     for (counter_t copy_vector = 3; copy_vector<400; copy_vector++, source_vector++ ) {
 16117              		.loc 1 1319 5 view .LVU5409
 16118              	.LBB921:
GAS LISTING /tmp/ccLUVin9.s 			page 428


 16119              		.loc 1 1319 10 view .LVU5410
 16120              		.loc 1 1319 37 view .LVU5411
 16121 5736 488D7760 		lea	rsi, 96[rdi]	# ivtmp.687,
 16122              	.LVL948:
 16123              		.loc 1 1319 37 is_stmt 0 view .LVU5412
 16124 573a C57D6F47 		vmovdqa	ymm8, YMMWORD PTR 32[rdi]	# D__lsm1.661, MEM[(bitvector_t *)bitarray_29(D) + 32B]
 16124      20
 16125              	# sieve_extend.c:1319:     for (counter_t copy_vector = 3; copy_vector<400; copy_vector++, source_v
 16126              		.loc 1 1319 20 view .LVU5413
 16127 573f B8030000 		mov	eax, 3	# copy_vector,
 16127      00
 16128 5744 C57D6F67 		vmovdqa	ymm12, YMMWORD PTR 64[rdi]	# D__lsm2.662, MEM[(bitvector_t *)bitarray_29(D) + 64B]
 16128      40
 16129 5749 C5FD6F27 		vmovdqa	ymm4, YMMWORD PTR [rdi]	# D__lsm0.660, MEM[(bitvector_t *)bitarray_29(D)]
 16130              	.LVL949:
 16131              	.L1319:
 16132              	.LBB922:
1320:sieve_extend.c ****         bitvector_t source0 = bitarray_vector[source_vector];
 16133              		.loc 1 1320 9 is_stmt 1 discriminator 3 view .LVU5414
1321:sieve_extend.c ****         bitvector_t source1 = bitarray_vector[source_vector+1];
 16134              		.loc 1 1321 9 discriminator 3 view .LVU5415
1322:sieve_extend.c ****         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> shift_flipped;
 16135              		.loc 1 1322 9 discriminator 3 view .LVU5416
1323:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16136              		.loc 1 1323 9 discriminator 3 view .LVU5417
1324:sieve_extend.c ****         bitarray_vector[copy_vector] = dest1 | dest2;
 16137              		.loc 1 1324 9 discriminator 3 view .LVU5418
 16138              	# sieve_extend.c:1322:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1322:sieve_extend.c ****         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> shift_flipped;
 16139              		.loc 1 1322 29 is_stmt 0 discriminator 3 view .LVU5419
 16140 574d C4C35D46 		vperm2i128	ymm3, ymm4, ymm8, 33	# tmp140, D__lsm0.660, D__lsm1.661,
 16140      D821
 16141 5753 C4C33D46 		vperm2i128	ymm7, ymm8, ymm12, 33	# tmp146, D__lsm1.661, D__lsm2.662,
 16141      FC21
 16142 5759 C4E3650F 		vpalignr	ymm2, ymm3, ymm4, 8	# tmp141, tmp140, D__lsm0.660,
 16142      D408
 16143              	# sieve_extend.c:1323:         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << s
1323:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16144              		.loc 1 1323 21 discriminator 3 view .LVU5420
 16145 575f C5D573F3 		vpsllq	ymm5, ymm3, 10	# dest2, tmp140,
 16145      0A
 16146              	# sieve_extend.c:1322:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1322:sieve_extend.c ****         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> shift_flipped;
 16147              		.loc 1 1322 21 discriminator 3 view .LVU5421
 16148 5764 C5DD73D2 		vpsrlq	ymm4, ymm2, 54	# dest1, tmp141,
 16148      36
 16149              	.LVL950:
 16150              	# sieve_extend.c:1324:         bitarray_vector[copy_vector] = dest1 | dest2;
 16151              		.loc 1 1324 46 discriminator 3 view .LVU5422
 16152 5769 C5DDEBF5 		vpor	ymm6, ymm4, ymm5	# D__lsm0.660, dest1, dest2
 16153              	# sieve_extend.c:1323:         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << s
1323:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16154              		.loc 1 1323 21 discriminator 3 view .LVU5423
 16155 576d C5B573F7 		vpsllq	ymm9, ymm7, 10	# dest2, tmp146,
 16155      0A
 16156              	# sieve_extend.c:1322:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1322:sieve_extend.c ****         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> shift_flipped;
GAS LISTING /tmp/ccLUVin9.s 			page 429


 16157              		.loc 1 1322 29 discriminator 3 view .LVU5424
 16158 5772 C4C3450F 		vpalignr	ymm1, ymm7, ymm8, 8	# tmp147, tmp146, D__lsm1.661,
 16158      C808
 16159 5778 C4631D46 		vperm2i128	ymm11, ymm12, ymm6, 33	# tmp152, D__lsm2.662, D__lsm0.660,
 16159      DE21
 16160              	# sieve_extend.c:1322:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1322:sieve_extend.c ****         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> shift_flipped;
 16161              		.loc 1 1322 21 discriminator 3 view .LVU5425
 16162 577e C5BD73D1 		vpsrlq	ymm8, ymm1, 54	# dest1, tmp147,
 16162      36
 16163              	.LVL951:
 16164              	# sieve_extend.c:1322:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1322:sieve_extend.c ****         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> shift_flipped;
 16165              		.loc 1 1322 29 discriminator 3 view .LVU5426
 16166 5783 C4C3250F 		vpalignr	ymm0, ymm11, ymm12, 8	# tmp153, tmp152, D__lsm2.662,
 16166      C408
 16167              	# sieve_extend.c:1324:         bitarray_vector[copy_vector] = dest1 | dest2;
 16168              		.loc 1 1324 46 discriminator 3 view .LVU5427
 16169 5789 C4413DEB 		vpor	ymm10, ymm8, ymm9	# D__lsm1.661, dest1, dest2
 16169      D1
 16170              	# sieve_extend.c:1322:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1322:sieve_extend.c ****         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> shift_flipped;
 16171              		.loc 1 1322 21 discriminator 3 view .LVU5428
 16172 578e C59D73D0 		vpsrlq	ymm12, ymm0, 54	# dest1, tmp153,
 16172      36
 16173              	# sieve_extend.c:1323:         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << s
1323:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16174              		.loc 1 1323 21 discriminator 3 view .LVU5429
 16175 5793 C4C11573 		vpsllq	ymm13, ymm11, 10	# dest2, tmp152,
 16175      F30A
 16176              	# sieve_extend.c:1322:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1322:sieve_extend.c ****         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> shift_flipped;
 16177              		.loc 1 1322 29 discriminator 3 view .LVU5430
 16178 5799 C4434D46 		vperm2i128	ymm15, ymm6, ymm10, 33	# tmp181, D__lsm0.660, D__lsm1.661,
 16178      FA21
 16179              	# sieve_extend.c:1324:         bitarray_vector[copy_vector] = dest1 | dest2;
 16180              		.loc 1 1324 46 discriminator 3 view .LVU5431
 16181 579f C4411DEB 		vpor	ymm14, ymm12, ymm13	# D__lsm2.662, dest1, dest2
 16181      F5
 16182              	# sieve_extend.c:1323:         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << s
1323:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16183              		.loc 1 1323 21 discriminator 3 view .LVU5432
 16184 57a4 C4C15D73 		vpsllq	ymm4, ymm15, 10	# dest2, tmp181,
 16184      F70A
 16185              	# sieve_extend.c:1324:         bitarray_vector[copy_vector] = dest1 | dest2;
 16186              		.loc 1 1324 38 discriminator 3 view .LVU5433
 16187 57aa C5FD7F36 		vmovdqa	YMMWORD PTR [rsi], ymm6	# MEM[base: _134, offset: 0B], D__lsm0.660
 16188              	.LBE922:
1319:sieve_extend.c ****         bitvector_t source0 = bitarray_vector[source_vector];
 16189              		.loc 1 1319 54 is_stmt 1 discriminator 3 view .LVU5434
1319:sieve_extend.c ****         bitvector_t source0 = bitarray_vector[source_vector];
 16190              		.loc 1 1319 37 discriminator 3 view .LVU5435
 16191              	.LBB923:
1320:sieve_extend.c ****         bitvector_t source1 = bitarray_vector[source_vector+1];
 16192              		.loc 1 1320 9 discriminator 3 view .LVU5436
1321:sieve_extend.c ****         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> shift_flipped;
 16193              		.loc 1 1321 9 discriminator 3 view .LVU5437
GAS LISTING /tmp/ccLUVin9.s 			page 430


1322:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16194              		.loc 1 1322 9 discriminator 3 view .LVU5438
1323:sieve_extend.c ****         bitarray_vector[copy_vector] = dest1 | dest2;
 16195              		.loc 1 1323 9 discriminator 3 view .LVU5439
 16196              		.loc 1 1324 9 discriminator 3 view .LVU5440
 16197              	.LBE923:
 16198              	# sieve_extend.c:1319:     for (counter_t copy_vector = 3; copy_vector<400; copy_vector++, source_v
1319:sieve_extend.c ****         bitvector_t source0 = bitarray_vector[source_vector];
 16199              		.loc 1 1319 65 is_stmt 0 discriminator 3 view .LVU5441
 16200 57ae 4883C009 		add	rax, 9	# copy_vector,
 16201              	.LBB924:
 16202              	# sieve_extend.c:1322:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1322:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16203              		.loc 1 1322 29 discriminator 3 view .LVU5442
 16204 57b2 C4E3050F 		vpalignr	ymm3, ymm15, ymm6, 8	# tmp182, tmp181, D__lsm0.660,
 16204      DE08
 16205 57b8 C4C32D46 		vperm2i128	ymm6, ymm10, ymm14, 33	# tmp186, D__lsm1.661, D__lsm2.662,
 16205      F621
 16206              	# sieve_extend.c:1322:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1322:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16207              		.loc 1 1322 21 discriminator 3 view .LVU5443
 16208 57be C5ED73D3 		vpsrlq	ymm2, ymm3, 54	# dest1, tmp182,
 16208      36
 16209              	# sieve_extend.c:1322:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1322:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16210              		.loc 1 1322 29 discriminator 3 view .LVU5444
 16211 57c3 C4C34D0F 		vpalignr	ymm7, ymm6, ymm10, 8	# tmp187, tmp186, D__lsm1.661,
 16211      FA08
 16212              	# sieve_extend.c:1324:         bitarray_vector[copy_vector] = dest1 | dest2;
 16213              		.loc 1 1324 46 discriminator 3 view .LVU5445
 16214 57c9 C5EDEBEC 		vpor	ymm5, ymm2, ymm4	# D__lsm0.660, dest1, dest2
 16215              	# sieve_extend.c:1322:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1322:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16216              		.loc 1 1322 21 discriminator 3 view .LVU5446
 16217 57cd C5F573D7 		vpsrlq	ymm1, ymm7, 54	# dest1, tmp187,
 16217      36
 16218              	# sieve_extend.c:1323:         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << s
1323:sieve_extend.c ****         bitarray_vector[copy_vector] = dest1 | dest2;
 16219              		.loc 1 1323 21 discriminator 3 view .LVU5447
 16220 57d2 C5BD73F6 		vpsllq	ymm8, ymm6, 10	# dest2, tmp186,
 16220      0A
 16221 57d7 488D8EC0 		lea	rcx, 192[rsi]	# ivtmp.687,
 16221      000000
 16222              	# sieve_extend.c:1324:         bitarray_vector[copy_vector] = dest1 | dest2;
 16223              		.loc 1 1324 38 discriminator 3 view .LVU5448
 16224 57de C57D7F56 		vmovdqa	YMMWORD PTR 32[rsi], ymm10	# MEM[base: _134, offset: 32B], D__lsm1.661
 16224      20
 16225              	.LBE924:
1319:sieve_extend.c ****         bitvector_t source0 = bitarray_vector[source_vector];
 16226              		.loc 1 1319 54 is_stmt 1 discriminator 3 view .LVU5449
1319:sieve_extend.c ****         bitvector_t source0 = bitarray_vector[source_vector];
 16227              		.loc 1 1319 37 discriminator 3 view .LVU5450
 16228              	.LBB925:
1320:sieve_extend.c ****         bitvector_t source1 = bitarray_vector[source_vector+1];
 16229              		.loc 1 1320 9 discriminator 3 view .LVU5451
1321:sieve_extend.c ****         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> shift_flipped;
 16230              		.loc 1 1321 9 discriminator 3 view .LVU5452
GAS LISTING /tmp/ccLUVin9.s 			page 431


1322:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16231              		.loc 1 1322 9 discriminator 3 view .LVU5453
1323:sieve_extend.c ****         bitarray_vector[copy_vector] = dest1 | dest2;
 16232              		.loc 1 1323 9 discriminator 3 view .LVU5454
 16233              		.loc 1 1324 9 discriminator 3 view .LVU5455
 16234              	# sieve_extend.c:1324:         bitarray_vector[copy_vector] = dest1 | dest2;
 16235              		.loc 1 1324 46 is_stmt 0 discriminator 3 view .LVU5456
 16236 57e3 C44175EB 		vpor	ymm9, ymm1, ymm8	# D__lsm1.661, dest1, dest2
 16236      C8
 16237              	# sieve_extend.c:1322:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1322:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16238              		.loc 1 1322 29 discriminator 3 view .LVU5457
 16239 57e8 C4630D46 		vperm2i128	ymm10, ymm14, ymm5, 33	# tmp191, D__lsm2.662, D__lsm0.660,
 16239      D521
 16240 57ee 4881C620 		add	rsi, 288	# ivtmp.687,
 16240      010000
 16241              	# sieve_extend.c:1324:         bitarray_vector[copy_vector] = dest1 | dest2;
 16242              		.loc 1 1324 38 discriminator 3 view .LVU5458
 16243 57f5 C57D7FB6 		vmovdqa	YMMWORD PTR -224[rsi], ymm14	# MEM[base: _134, offset: 64B], D__lsm2.662
 16243      20FFFFFF 
 16244              	.LBE925:
1319:sieve_extend.c ****         bitvector_t source0 = bitarray_vector[source_vector];
 16245              		.loc 1 1319 54 is_stmt 1 discriminator 3 view .LVU5459
1319:sieve_extend.c ****         bitvector_t source0 = bitarray_vector[source_vector];
 16246              		.loc 1 1319 37 discriminator 3 view .LVU5460
 16247              	.LBB926:
1320:sieve_extend.c ****         bitvector_t source1 = bitarray_vector[source_vector+1];
 16248              		.loc 1 1320 9 discriminator 3 view .LVU5461
1321:sieve_extend.c ****         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> shift_flipped;
 16249              		.loc 1 1321 9 discriminator 3 view .LVU5462
1322:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16250              		.loc 1 1322 9 discriminator 3 view .LVU5463
1323:sieve_extend.c ****         bitarray_vector[copy_vector] = dest1 | dest2;
 16251              		.loc 1 1323 9 discriminator 3 view .LVU5464
 16252              		.loc 1 1324 9 discriminator 3 view .LVU5465
 16253              	# sieve_extend.c:1323:         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << s
1323:sieve_extend.c ****         bitarray_vector[copy_vector] = dest1 | dest2;
 16254              		.loc 1 1323 21 is_stmt 0 discriminator 3 view .LVU5466
 16255 57fd C4C11D73 		vpsllq	ymm12, ymm10, 10	# dest2, tmp191,
 16255      F20A
 16256              	# sieve_extend.c:1322:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1322:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16257              		.loc 1 1322 29 discriminator 3 view .LVU5467
 16258 5803 C4432D0F 		vpalignr	ymm11, ymm10, ymm14, 8	# tmp192, tmp191, D__lsm2.662,
 16258      DE08
 16259 5809 C4435546 		vperm2i128	ymm14, ymm5, ymm9, 33	# tmp198, D__lsm0.660, D__lsm1.661,
 16259      F121
 16260              	# sieve_extend.c:1322:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1322:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16261              		.loc 1 1322 21 discriminator 3 view .LVU5468
 16262 580f C4C17D73 		vpsrlq	ymm0, ymm11, 54	# dest1, tmp192,
 16262      D336
 16263              	# sieve_extend.c:1322:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1322:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16264              		.loc 1 1322 29 discriminator 3 view .LVU5469
 16265 5815 C4630D0F 		vpalignr	ymm15, ymm14, ymm5, 8	# tmp199, tmp198, D__lsm0.660,
 16265      FD08
GAS LISTING /tmp/ccLUVin9.s 			page 432


 16266              	# sieve_extend.c:1324:         bitarray_vector[copy_vector] = dest1 | dest2;
 16267              		.loc 1 1324 46 discriminator 3 view .LVU5470
 16268 581b C4417DEB 		vpor	ymm13, ymm0, ymm12	# D__lsm2.662, dest1, dest2
 16268      EC
 16269              	# sieve_extend.c:1322:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1322:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16270              		.loc 1 1322 21 discriminator 3 view .LVU5471
 16271 5820 C4C16D73 		vpsrlq	ymm2, ymm15, 54	# dest1, tmp199,
 16271      D736
 16272              	# sieve_extend.c:1324:         bitarray_vector[copy_vector] = dest1 | dest2;
 16273              		.loc 1 1324 38 discriminator 3 view .LVU5472
 16274 5826 C5FD7FAE 		vmovdqa	YMMWORD PTR -192[rsi], ymm5	# MEM[base: _134, offset: 0B], D__lsm0.660
 16274      40FFFFFF 
 16275              	.LBE926:
1319:sieve_extend.c ****         bitvector_t source0 = bitarray_vector[source_vector];
 16276              		.loc 1 1319 54 is_stmt 1 discriminator 3 view .LVU5473
1319:sieve_extend.c ****         bitvector_t source0 = bitarray_vector[source_vector];
 16277              		.loc 1 1319 37 discriminator 3 view .LVU5474
 16278              	.LBB927:
1320:sieve_extend.c ****         bitvector_t source1 = bitarray_vector[source_vector+1];
 16279              		.loc 1 1320 9 discriminator 3 view .LVU5475
1321:sieve_extend.c ****         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> shift_flipped;
 16280              		.loc 1 1321 9 discriminator 3 view .LVU5476
1322:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16281              		.loc 1 1322 9 discriminator 3 view .LVU5477
1323:sieve_extend.c ****         bitarray_vector[copy_vector] = dest1 | dest2;
 16282              		.loc 1 1323 9 discriminator 3 view .LVU5478
 16283              		.loc 1 1324 9 discriminator 3 view .LVU5479
 16284              	# sieve_extend.c:1323:         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << s
1323:sieve_extend.c ****         bitarray_vector[copy_vector] = dest1 | dest2;
 16285              		.loc 1 1323 21 is_stmt 0 discriminator 3 view .LVU5480
 16286 582e C4C16573 		vpsllq	ymm3, ymm14, 10	# dest2, tmp198,
 16286      F60A
 16287              	# sieve_extend.c:1322:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1322:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16288              		.loc 1 1322 29 discriminator 3 view .LVU5481
 16289 5834 C4C33546 		vperm2i128	ymm5, ymm9, ymm13, 33	# tmp202, D__lsm1.661, D__lsm2.662,
 16289      ED21
 16290              	# sieve_extend.c:1324:         bitarray_vector[copy_vector] = dest1 | dest2;
 16291              		.loc 1 1324 46 discriminator 3 view .LVU5482
 16292 583a C5EDEBE3 		vpor	ymm4, ymm2, ymm3	# D__lsm0.660, dest1, dest2
 16293              	# sieve_extend.c:1324:         bitarray_vector[copy_vector] = dest1 | dest2;
 16294              		.loc 1 1324 38 discriminator 3 view .LVU5483
 16295 583e C57D7F8E 		vmovdqa	YMMWORD PTR -160[rsi], ymm9	# MEM[base: _134, offset: 32B], D__lsm1.661
 16295      60FFFFFF 
 16296              	.LBE927:
1319:sieve_extend.c ****         bitvector_t source0 = bitarray_vector[source_vector];
 16297              		.loc 1 1319 54 is_stmt 1 discriminator 3 view .LVU5484
1319:sieve_extend.c ****         bitvector_t source0 = bitarray_vector[source_vector];
 16298              		.loc 1 1319 37 discriminator 3 view .LVU5485
 16299              	.LBB928:
1320:sieve_extend.c ****         bitvector_t source1 = bitarray_vector[source_vector+1];
 16300              		.loc 1 1320 9 discriminator 3 view .LVU5486
1321:sieve_extend.c ****         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> shift_flipped;
 16301              		.loc 1 1321 9 discriminator 3 view .LVU5487
1322:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16302              		.loc 1 1322 9 discriminator 3 view .LVU5488
GAS LISTING /tmp/ccLUVin9.s 			page 433


1323:sieve_extend.c ****         bitarray_vector[copy_vector] = dest1 | dest2;
 16303              		.loc 1 1323 9 discriminator 3 view .LVU5489
 16304              		.loc 1 1324 9 discriminator 3 view .LVU5490
 16305              	# sieve_extend.c:1323:         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << s
1323:sieve_extend.c ****         bitarray_vector[copy_vector] = dest1 | dest2;
 16306              		.loc 1 1323 21 is_stmt 0 discriminator 3 view .LVU5491
 16307 5846 C5F573F5 		vpsllq	ymm1, ymm5, 10	# dest2, tmp202,
 16307      0A
 16308              	# sieve_extend.c:1322:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1322:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16309              		.loc 1 1322 29 discriminator 3 view .LVU5492
 16310 584b C4C3550F 		vpalignr	ymm6, ymm5, ymm9, 8	# tmp203, tmp202, D__lsm1.661,
 16310      F108
 16311 5851 C4631546 		vperm2i128	ymm9, ymm13, ymm4, 33	# tmp206, D__lsm2.662, D__lsm0.660,
 16311      CC21
 16312              	# sieve_extend.c:1322:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1322:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16313              		.loc 1 1322 21 discriminator 3 view .LVU5493
 16314 5857 C5C573D6 		vpsrlq	ymm7, ymm6, 54	# dest1, tmp203,
 16314      36
 16315              	# sieve_extend.c:1322:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1322:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16316              		.loc 1 1322 29 discriminator 3 view .LVU5494
 16317 585c C443350F 		vpalignr	ymm10, ymm9, ymm13, 8	# tmp207, tmp206, D__lsm2.662,
 16317      D508
 16318              	# sieve_extend.c:1323:         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << s
1323:sieve_extend.c ****         bitarray_vector[copy_vector] = dest1 | dest2;
 16319              		.loc 1 1323 21 discriminator 3 view .LVU5495
 16320 5862 C4C17D73 		vpsllq	ymm0, ymm9, 10	# dest2, tmp206,
 16320      F10A
 16321              	# sieve_extend.c:1322:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1322:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16322              		.loc 1 1322 21 discriminator 3 view .LVU5496
 16323 5868 C4C12573 		vpsrlq	ymm11, ymm10, 54	# dest1, tmp207,
 16323      D236
 16324              	# sieve_extend.c:1324:         bitarray_vector[copy_vector] = dest1 | dest2;
 16325              		.loc 1 1324 38 discriminator 3 view .LVU5497
 16326 586e C57D7F6E 		vmovdqa	YMMWORD PTR -128[rsi], ymm13	# MEM[base: _134, offset: 64B], D__lsm2.662
 16326      80
 16327              	.LBE928:
1319:sieve_extend.c ****         bitvector_t source0 = bitarray_vector[source_vector];
 16328              		.loc 1 1319 54 is_stmt 1 discriminator 3 view .LVU5498
1319:sieve_extend.c ****         bitvector_t source0 = bitarray_vector[source_vector];
 16329              		.loc 1 1319 37 discriminator 3 view .LVU5499
 16330              	.LBB929:
1320:sieve_extend.c ****         bitvector_t source1 = bitarray_vector[source_vector+1];
 16331              		.loc 1 1320 9 discriminator 3 view .LVU5500
1321:sieve_extend.c ****         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> shift_flipped;
 16332              		.loc 1 1321 9 discriminator 3 view .LVU5501
1322:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16333              		.loc 1 1322 9 discriminator 3 view .LVU5502
1323:sieve_extend.c ****         bitarray_vector[copy_vector] = dest1 | dest2;
 16334              		.loc 1 1323 9 discriminator 3 view .LVU5503
 16335              		.loc 1 1324 9 discriminator 3 view .LVU5504
 16336              	.LVL952:
 16337              	# sieve_extend.c:1324:         bitarray_vector[copy_vector] = dest1 | dest2;
 16338              		.loc 1 1324 46 is_stmt 0 discriminator 3 view .LVU5505
GAS LISTING /tmp/ccLUVin9.s 			page 434


 16339 5873 C545EBC1 		vpor	ymm8, ymm7, ymm1	# D__lsm1.661, dest1, dest2
 16340              	# sieve_extend.c:1324:         bitarray_vector[copy_vector] = dest1 | dest2;
 16341              		.loc 1 1324 38 discriminator 3 view .LVU5506
 16342 5877 C5FD7F66 		vmovdqa	YMMWORD PTR -96[rsi], ymm4	# MEM[base: _134, offset: 0B], D__lsm0.660
 16342      A0
 16343              	.LBE929:
1319:sieve_extend.c ****         bitvector_t source0 = bitarray_vector[source_vector];
 16344              		.loc 1 1319 54 is_stmt 1 discriminator 3 view .LVU5507
1319:sieve_extend.c ****         bitvector_t source0 = bitarray_vector[source_vector];
 16345              		.loc 1 1319 37 discriminator 3 view .LVU5508
 16346              	.LBB930:
1320:sieve_extend.c ****         bitvector_t source1 = bitarray_vector[source_vector+1];
 16347              		.loc 1 1320 9 discriminator 3 view .LVU5509
 16348              	.LVL953:
1321:sieve_extend.c ****         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> shift_flipped;
 16349              		.loc 1 1321 9 discriminator 3 view .LVU5510
1322:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16350              		.loc 1 1322 9 discriminator 3 view .LVU5511
1323:sieve_extend.c ****         bitarray_vector[copy_vector] = dest1 | dest2;
 16351              		.loc 1 1323 9 discriminator 3 view .LVU5512
 16352              		.loc 1 1324 9 discriminator 3 view .LVU5513
 16353              	# sieve_extend.c:1324:         bitarray_vector[copy_vector] = dest1 | dest2;
 16354              		.loc 1 1324 46 is_stmt 0 discriminator 3 view .LVU5514
 16355 587c C525EBE0 		vpor	ymm12, ymm11, ymm0	# D__lsm2.662, dest1, dest2
 16356              	# sieve_extend.c:1324:         bitarray_vector[copy_vector] = dest1 | dest2;
 16357              		.loc 1 1324 38 discriminator 3 view .LVU5515
 16358 5880 C57D7F41 		vmovdqa	YMMWORD PTR 32[rcx], ymm8	# MEM[base: _134, offset: 32B], D__lsm1.661
 16358      20
 16359              	.LBE930:
1319:sieve_extend.c ****         bitvector_t source0 = bitarray_vector[source_vector];
 16360              		.loc 1 1319 54 is_stmt 1 discriminator 3 view .LVU5516
1319:sieve_extend.c ****         bitvector_t source0 = bitarray_vector[source_vector];
 16361              		.loc 1 1319 37 discriminator 3 view .LVU5517
 16362              	.LBB931:
1320:sieve_extend.c ****         bitvector_t source1 = bitarray_vector[source_vector+1];
 16363              		.loc 1 1320 9 discriminator 3 view .LVU5518
 16364              	.LVL954:
1321:sieve_extend.c ****         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> shift_flipped;
 16365              		.loc 1 1321 9 discriminator 3 view .LVU5519
1322:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16366              		.loc 1 1322 9 discriminator 3 view .LVU5520
1323:sieve_extend.c ****         bitarray_vector[copy_vector] = dest1 | dest2;
 16367              		.loc 1 1323 9 discriminator 3 view .LVU5521
 16368              		.loc 1 1324 9 discriminator 3 view .LVU5522
 16369              		.loc 1 1324 9 is_stmt 0 discriminator 3 view .LVU5523
 16370 5885 483D8F01 		cmp	rax, 399	# copy_vector,
 16370      0000
 16371              	# sieve_extend.c:1324:         bitarray_vector[copy_vector] = dest1 | dest2;
 16372              		.loc 1 1324 38 discriminator 3 view .LVU5524
 16373 588b C57D7F61 		vmovdqa	YMMWORD PTR 64[rcx], ymm12	# MEM[base: _134, offset: 64B], D__lsm2.662
 16373      40
 16374              	.LBE931:
1319:sieve_extend.c ****         bitvector_t source0 = bitarray_vector[source_vector];
 16375              		.loc 1 1319 54 is_stmt 1 discriminator 3 view .LVU5525
1319:sieve_extend.c ****         bitvector_t source0 = bitarray_vector[source_vector];
 16376              		.loc 1 1319 37 discriminator 3 view .LVU5526
 16377 5890 0F85B7FE 		jne	.L1319	#,
GAS LISTING /tmp/ccLUVin9.s 			page 435


 16377      FFFF
 16378 5896 4C8D8780 		lea	r8, 12672[rdi]	# ivtmp.672,
 16378      310000
 16379 589d 488DBFA0 		lea	rdi, 12704[rdi]	# _24,
 16379      310000
 16380              	.LVL955:
 16381 58a4 66662E0F 		.p2align 4
 16381      1F840000 
 16381      00000090 
 16382              		.p2align 3
 16383              	.L1320:
 16384              	.LBB932:
1320:sieve_extend.c ****         bitvector_t source1 = bitarray_vector[source_vector+1];
 16385              		.loc 1 1320 9 view .LVU5527
1321:sieve_extend.c ****         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> shift_flipped;
 16386              		.loc 1 1321 9 view .LVU5528
1322:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16387              		.loc 1 1322 9 view .LVU5529
1323:sieve_extend.c ****         bitarray_vector[copy_vector] = dest1 | dest2;
 16388              		.loc 1 1323 9 view .LVU5530
 16389              		.loc 1 1324 9 view .LVU5531
 16390              	# sieve_extend.c:1323:         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << s
1323:sieve_extend.c ****         bitarray_vector[copy_vector] = dest1 | dest2;
 16391              		.loc 1 1323 29 is_stmt 0 view .LVU5532
 16392 58b0 C4417D6F 		vmovdqa	ymm13, YMMWORD PTR [r8]	# tmp247, MEM[base: _102, offset: 0B]
 16392      28
 16393 58b5 4983C020 		add	r8, 32	# ivtmp.672,
 16394              	.LVL956:
1323:sieve_extend.c ****         bitarray_vector[copy_vector] = dest1 | dest2;
 16395              		.loc 1 1323 29 view .LVU5533
 16396 58b9 C4431546 		vperm2i128	ymm14, ymm13, YMMWORD PTR [r8], 33	# tmp158, tmp247, MEM[base: _102, offset: 32B],
 16396      3021
 16397              	# sieve_extend.c:1322:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1322:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16398              		.loc 1 1322 29 view .LVU5534
 16399 58bf C4C30D0F 		vpalignr	ymm2, ymm14, YMMWORD PTR -32[r8], 8	# tmp162, tmp158, MEM[base: _102, offset: 0B],
 16399      50E008
 16400              	# sieve_extend.c:1323:         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << s
1323:sieve_extend.c ****         bitarray_vector[copy_vector] = dest1 | dest2;
 16401              		.loc 1 1323 21 view .LVU5535
 16402 58c6 C4C10573 		vpsllq	ymm15, ymm14, 10	# dest2, tmp158,
 16402      F60A
 16403              	# sieve_extend.c:1322:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1322:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16404              		.loc 1 1322 21 view .LVU5536
 16405 58cc C5E573D2 		vpsrlq	ymm3, ymm2, 54	# dest1, tmp162,
 16405      36
 16406              	# sieve_extend.c:1324:         bitarray_vector[copy_vector] = dest1 | dest2;
 16407              		.loc 1 1324 46 view .LVU5537
 16408 58d1 C585EBE3 		vpor	ymm4, ymm15, ymm3	# tmp164, dest2, dest1
 16409              	# sieve_extend.c:1324:         bitarray_vector[copy_vector] = dest1 | dest2;
 16410              		.loc 1 1324 38 view .LVU5538
 16411 58d5 C4C17D7F 		vmovdqa	YMMWORD PTR 64[r8], ymm4	# MEM[base: _84, offset: 12768B], tmp164
 16411      6040
 16412              	.LBE932:
1319:sieve_extend.c ****         bitvector_t source0 = bitarray_vector[source_vector];
 16413              		.loc 1 1319 54 is_stmt 1 view .LVU5539
GAS LISTING /tmp/ccLUVin9.s 			page 436


1319:sieve_extend.c ****         bitvector_t source0 = bitarray_vector[source_vector];
 16414              		.loc 1 1319 37 view .LVU5540
 16415              	# sieve_extend.c:1319:     for (counter_t copy_vector = 3; copy_vector<400; copy_vector++, source_v
1319:sieve_extend.c ****         bitvector_t source0 = bitarray_vector[source_vector];
 16416              		.loc 1 1319 5 is_stmt 0 view .LVU5541
 16417 58db 4C39C7   		cmp	rdi, r8	# _24, ivtmp.672
 16418 58de 75D0     		jne	.L1320	#,
 16419 58e0 C5F877   		vzeroupper
 16420              	.LBE921:
 16421              	# sieve_extend.c:1326: }
1325:sieve_extend.c ****     }
1326:sieve_extend.c **** }
 16422              		.loc 1 1326 1 view .LVU5542
 16423 58e3 C3       		ret	
 16424              		.cfi_endproc
 16425              	.LFE96:
 16427 58e4 66662E0F 		.p2align 4
 16427      1F840000 
 16427      00000090 
 16428              		.globl	testshuffle_vector2
 16430              	testshuffle_vector2:
 16431              	.LFB109:
 16432              		.cfi_startproc
 16433 58f0 F30F1EFA 		endbr64	
 16434 58f4 E967FDFF 		jmp	testshuffle_vector	#
 16434      FF
 16435              		.cfi_endproc
 16436              	.LFE109:
 16438 58f9 0F1F8000 		.p2align 4
 16438      000000
 16439              		.globl	testshuffle_word
 16441              	testshuffle_word:
 16442              	.LVL957:
 16443              	.LFB98:
1327:sieve_extend.c **** 
1328:sieve_extend.c **** void testshuffle_vector2(bitword_t* __restrict bitarray, counter_t max) {
1329:sieve_extend.c ****     
1330:sieve_extend.c ****     bitword_t* bitarray_word     = (bitword_t*)bitarray;
1331:sieve_extend.c ****     bitvector_t* bitarray_vector = (bitvector_t*)bitarray;
1332:sieve_extend.c **** 
1333:sieve_extend.c ****     for (counter_t i=1; i<8*64 && i < max; i+=20) {
1334:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
1335:sieve_extend.c ****     }
1336:sieve_extend.c **** 
1337:sieve_extend.c ****     counter_t source_start = 66+64;
1338:sieve_extend.c ****     counter_t destination_start = 3*4*64 + 12;
1339:sieve_extend.c ****     bitarray_word[wordindex(source_start)]  |= markmask_calc(source_start);
1340:sieve_extend.c ****     bitarray_word[wordindex(source_start+1)]  |= markmask_calc(source_start+1);
1341:sieve_extend.c **** 
1342:sieve_extend.c **** 
1343:sieve_extend.c ****     counter_t source_vector = vectorindex(source_start);
1344:sieve_extend.c ****     counter_t delta_word   = 4-((wordindex(destination_start) - wordindex(source_start)) % 4);
1345:sieve_extend.c ****     int32_t delta_bit    = bitindex_calc(destination_start) - bitindex_calc(source_start); // could
1346:sieve_extend.c ****     
1347:sieve_extend.c ****     bitshift_t shift_bit = delta_bit; 
1348:sieve_extend.c ****     bitshift_t shift_bit_flipped = WORD_SIZE_bitshift - shift_bit; 
1349:sieve_extend.c **** 
GAS LISTING /tmp/ccLUVin9.s 			page 437


1350:sieve_extend.c **** //    if (delta_bit) ....
1351:sieve_extend.c **** 
1352:sieve_extend.c ****     register const bitvector_t shuffle1 = { delta_word-1, delta_word, delta_word+1, delta_word+2 };
1353:sieve_extend.c ****     register const bitvector_t shuffle2 = { delta_word, delta_word+1, delta_word+2, delta_word+3 };
1354:sieve_extend.c ****     register const bitvector_t shift = { shift_bit, shift_bit, shift_bit, shift_bit };
1355:sieve_extend.c ****     register const bitvector_t shift_flipped = { shift_bit_flipped, shift_bit_flipped, shift_bit_fl
1356:sieve_extend.c **** 
1357:sieve_extend.c ****     for (counter_t copy_vector = 3; copy_vector<400; copy_vector++, source_vector++ ) {
1358:sieve_extend.c ****         register bitvector_t source0 = bitarray_vector[source_vector];
1359:sieve_extend.c ****         register bitvector_t source1 = bitarray_vector[source_vector+1];
1360:sieve_extend.c ****         bitarray_vector[copy_vector] = (__builtin_shuffle(source0,source1,shuffle1) >> shift_flippe
1361:sieve_extend.c ****     }
1362:sieve_extend.c **** }
1363:sieve_extend.c **** 
1364:sieve_extend.c **** void testshuffle_word(bitword_t* __restrict bitarray, counter_t max) {
 16444              		.loc 1 1364 70 is_stmt 1 view -0
 16445              		.cfi_startproc
 16446              		.loc 1 1364 70 is_stmt 0 view .LVU5544
 16447 5900 F30F1EFA 		endbr64	
1365:sieve_extend.c ****     
1366:sieve_extend.c ****     bitword_t* bitarray_word     = (bitword_t*)bitarray;
 16448              		.loc 1 1366 5 is_stmt 1 view .LVU5545
 16449              	.LVL958:
1367:sieve_extend.c **** 
1368:sieve_extend.c ****     for (counter_t i=1; i<8*64 && i<max; i+=20) {
 16450              		.loc 1 1368 5 view .LVU5546
 16451              	.LBB933:
 16452              		.loc 1 1368 10 view .LVU5547
 16453              		.loc 1 1368 25 view .LVU5548
 16454              	.LBE933:
 16455              	# sieve_extend.c:1364: void testshuffle_word(bitword_t* __restrict bitarray, counter_t max) {
1364:sieve_extend.c ****     
 16456              		.loc 1 1364 70 is_stmt 0 view .LVU5549
 16457 5904 4157     		push	r15	#
 16458              		.cfi_def_cfa_offset 16
 16459              		.cfi_offset 15, -16
 16460              	.LBB934:
 16461              	# sieve_extend.c:1368:     for (counter_t i=1; i<8*64 && i<max; i+=20) {
 16462              		.loc 1 1368 5 view .LVU5550
 16463 5906 4883FE01 		cmp	rsi, 1	# max,
 16464              	.LBE934:
 16465              	# sieve_extend.c:1364: void testshuffle_word(bitword_t* __restrict bitarray, counter_t max) {
1364:sieve_extend.c ****     
 16466              		.loc 1 1364 70 view .LVU5551
 16467 590a 4156     		push	r14	#
 16468              		.cfi_def_cfa_offset 24
 16469              		.cfi_offset 14, -24
 16470 590c 4155     		push	r13	#
 16471              		.cfi_def_cfa_offset 32
 16472              		.cfi_offset 13, -32
 16473 590e 4154     		push	r12	#
 16474              		.cfi_def_cfa_offset 40
 16475              		.cfi_offset 12, -40
 16476 5910 55       		push	rbp	#
 16477              		.cfi_def_cfa_offset 48
 16478              		.cfi_offset 6, -48
 16479 5911 53       		push	rbx	#
GAS LISTING /tmp/ccLUVin9.s 			page 438


 16480              		.cfi_def_cfa_offset 56
 16481              		.cfi_offset 3, -56
 16482              	.LBB935:
 16483              	# sieve_extend.c:1368:     for (counter_t i=1; i<8*64 && i<max; i+=20) {
 16484              		.loc 1 1368 5 view .LVU5552
 16485 5912 0F86C300 		jbe	.L1348	#,
 16485      0000
 16486              	# sieve_extend.c:1369:         bitarray_word[wordindex(i)] |= markmask(i);
1369:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16487              		.loc 1 1369 37 view .LVU5553
 16488 5918 48830F02 		or	QWORD PTR [rdi], 2	# *_3,
 16489              	# sieve_extend.c:1368:     for (counter_t i=1; i<8*64 && i<max; i+=20) {
1368:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16490              		.loc 1 1368 5 view .LVU5554
 16491 591c 4883FE15 		cmp	rsi, 21	# max,
 16492              	# sieve_extend.c:1369:         bitarray_word[wordindex(i)] |= markmask(i);
 16493              		.loc 1 1369 40 view .LVU5555
 16494 5920 B9010000 		mov	ecx, 1	# tmp185,
 16494      00
 16495              		.loc 1 1369 9 is_stmt 1 view .LVU5556
1368:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16496              		.loc 1 1368 42 view .LVU5557
 16497              	# sieve_extend.c:1368:     for (counter_t i=1; i<8*64 && i<max; i+=20) {
1368:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16498              		.loc 1 1368 43 is_stmt 0 view .LVU5558
 16499 5925 B8150000 		mov	eax, 21	# i,
 16499      00
1368:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16500              		.loc 1 1368 25 is_stmt 1 view .LVU5559
 16501              	# sieve_extend.c:1368:     for (counter_t i=1; i<8*64 && i<max; i+=20) {
1368:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16502              		.loc 1 1368 5 is_stmt 0 view .LVU5560
 16503 592a 0F86AB00 		jbe	.L1348	#,
 16503      0000
 16504              	.L1349:
 16505              		.loc 1 1369 9 is_stmt 1 discriminator 3 view .LVU5561
 16506              	# sieve_extend.c:1369:         bitarray_word[wordindex(i)] |= markmask(i);
 16507              		.loc 1 1369 37 is_stmt 0 discriminator 3 view .LVU5562
 16508 5930 4889C2   		mov	rdx, rax	# tmp248, i
 16509              	# sieve_extend.c:1368:     for (counter_t i=1; i<8*64 && i<max; i+=20) {
1368:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16510              		.loc 1 1368 43 discriminator 3 view .LVU5563
 16511 5933 488D5814 		lea	rbx, 20[rax]	# tmp246,
 16512              	# sieve_extend.c:1369:         bitarray_word[wordindex(i)] |= markmask(i);
 16513              		.loc 1 1369 37 discriminator 3 view .LVU5564
 16514 5937 48C1EA06 		shr	rdx, 6	# tmp248,
 16515              	# sieve_extend.c:1369:         bitarray_word[wordindex(i)] |= markmask(i);
 16516              		.loc 1 1369 40 discriminator 3 view .LVU5565
 16517 593b C462F9F7 		shlx	r8, rcx, rax	# tmp251, tmp185, i
 16517      C1
 16518              	# sieve_extend.c:1369:         bitarray_word[wordindex(i)] |= markmask(i);
 16519              		.loc 1 1369 37 discriminator 3 view .LVU5566
 16520 5940 4C0904D7 		or	QWORD PTR [rdi+rdx*8], r8	# *_3, tmp251
1368:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16521              		.loc 1 1368 42 is_stmt 1 discriminator 3 view .LVU5567
1368:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16522              		.loc 1 1368 25 discriminator 3 view .LVU5568
GAS LISTING /tmp/ccLUVin9.s 			page 439


 16523              	# sieve_extend.c:1368:     for (counter_t i=1; i<8*64 && i<max; i+=20) {
1368:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16524              		.loc 1 1368 5 is_stmt 0 discriminator 3 view .LVU5569
 16525 5944 4881FBFF 		cmp	rbx, 511	# tmp246,
 16525      010000
 16526 594b 0F878A00 		ja	.L1348	#,
 16526      0000
 16527 5951 4839DE   		cmp	rsi, rbx	# max, tmp246
 16528 5954 0F868100 		jbe	.L1348	#,
 16528      0000
 16529              		.loc 1 1369 9 is_stmt 1 view .LVU5570
 16530              	# sieve_extend.c:1369:         bitarray_word[wordindex(i)] |= markmask(i);
 16531              		.loc 1 1369 37 is_stmt 0 view .LVU5571
 16532 595a 4889DD   		mov	rbp, rbx	# tmp255, tmp246
 16533              	# sieve_extend.c:1368:     for (counter_t i=1; i<8*64 && i<max; i+=20) {
1368:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16534              		.loc 1 1368 43 view .LVU5572
 16535 595d 4C8D5028 		lea	r10, 40[rax]	# i,
 16536              	# sieve_extend.c:1369:         bitarray_word[wordindex(i)] |= markmask(i);
 16537              		.loc 1 1369 37 view .LVU5573
 16538 5961 48C1ED06 		shr	rbp, 6	# tmp255,
 16539              	# sieve_extend.c:1369:         bitarray_word[wordindex(i)] |= markmask(i);
 16540              		.loc 1 1369 40 view .LVU5574
 16541 5965 C462E1F7 		shlx	r9, rcx, rbx	# tmp258, tmp185, tmp246
 16541      C9
 16542              	# sieve_extend.c:1369:         bitarray_word[wordindex(i)] |= markmask(i);
 16543              		.loc 1 1369 37 view .LVU5575
 16544 596a 4C090CEF 		or	QWORD PTR [rdi+rbp*8], r9	# *_3, tmp258
1368:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16545              		.loc 1 1368 42 is_stmt 1 view .LVU5576
1368:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16546              		.loc 1 1368 25 view .LVU5577
 16547              	# sieve_extend.c:1368:     for (counter_t i=1; i<8*64 && i<max; i+=20) {
1368:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16548              		.loc 1 1368 5 is_stmt 0 view .LVU5578
 16549 596e 4C39D6   		cmp	rsi, r10	# max, i
 16550 5971 7668     		jbe	.L1348	#,
 16551              		.loc 1 1369 9 is_stmt 1 view .LVU5579
 16552              	# sieve_extend.c:1369:         bitarray_word[wordindex(i)] |= markmask(i);
 16553              		.loc 1 1369 37 is_stmt 0 view .LVU5580
 16554 5973 4D89D3   		mov	r11, r10	# tmp262, i
 16555              	# sieve_extend.c:1368:     for (counter_t i=1; i<8*64 && i<max; i+=20) {
1368:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16556              		.loc 1 1368 43 view .LVU5581
 16557 5976 4C8D683C 		lea	r13, 60[rax]	# i,
 16558              	# sieve_extend.c:1369:         bitarray_word[wordindex(i)] |= markmask(i);
 16559              		.loc 1 1369 37 view .LVU5582
 16560 597a 49C1EB06 		shr	r11, 6	# tmp262,
 16561              	# sieve_extend.c:1369:         bitarray_word[wordindex(i)] |= markmask(i);
 16562              		.loc 1 1369 40 view .LVU5583
 16563 597e C462A9F7 		shlx	r12, rcx, r10	# tmp265, tmp185, i
 16563      E1
 16564              	# sieve_extend.c:1369:         bitarray_word[wordindex(i)] |= markmask(i);
 16565              		.loc 1 1369 37 view .LVU5584
 16566 5983 4E0924DF 		or	QWORD PTR [rdi+r11*8], r12	# *_3, tmp265
1368:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16567              		.loc 1 1368 42 is_stmt 1 view .LVU5585
GAS LISTING /tmp/ccLUVin9.s 			page 440


1368:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16568              		.loc 1 1368 25 view .LVU5586
 16569              	# sieve_extend.c:1368:     for (counter_t i=1; i<8*64 && i<max; i+=20) {
1368:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16570              		.loc 1 1368 5 is_stmt 0 view .LVU5587
 16571 5987 4C39EE   		cmp	rsi, r13	# max, i
 16572 598a 764F     		jbe	.L1348	#,
 16573              		.loc 1 1369 9 is_stmt 1 view .LVU5588
 16574              	# sieve_extend.c:1369:         bitarray_word[wordindex(i)] |= markmask(i);
 16575              		.loc 1 1369 37 is_stmt 0 view .LVU5589
 16576 598c 4D89EE   		mov	r14, r13	# tmp269, i
 16577              	# sieve_extend.c:1368:     for (counter_t i=1; i<8*64 && i<max; i+=20) {
1368:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16578              		.loc 1 1368 43 view .LVU5590
 16579 598f 488D5050 		lea	rdx, 80[rax]	# i,
 16580              	# sieve_extend.c:1369:         bitarray_word[wordindex(i)] |= markmask(i);
 16581              		.loc 1 1369 37 view .LVU5591
 16582 5993 49C1EE06 		shr	r14, 6	# tmp269,
 16583              	# sieve_extend.c:1369:         bitarray_word[wordindex(i)] |= markmask(i);
 16584              		.loc 1 1369 40 view .LVU5592
 16585 5997 C46291F7 		shlx	r15, rcx, r13	# tmp272, tmp185, i
 16585      F9
 16586              	# sieve_extend.c:1369:         bitarray_word[wordindex(i)] |= markmask(i);
 16587              		.loc 1 1369 37 view .LVU5593
 16588 599c 4E093CF7 		or	QWORD PTR [rdi+r14*8], r15	# *_3, tmp272
1368:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16589              		.loc 1 1368 42 is_stmt 1 view .LVU5594
1368:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16590              		.loc 1 1368 25 view .LVU5595
 16591              	# sieve_extend.c:1368:     for (counter_t i=1; i<8*64 && i<max; i+=20) {
1368:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16592              		.loc 1 1368 5 is_stmt 0 view .LVU5596
 16593 59a0 4839D6   		cmp	rsi, rdx	# max, i
 16594 59a3 7636     		jbe	.L1348	#,
 16595              		.loc 1 1369 9 is_stmt 1 view .LVU5597
 16596              	# sieve_extend.c:1369:         bitarray_word[wordindex(i)] |= markmask(i);
 16597              		.loc 1 1369 37 is_stmt 0 view .LVU5598
 16598 59a5 4989D0   		mov	r8, rdx	# tmp276, i
 16599              	# sieve_extend.c:1368:     for (counter_t i=1; i<8*64 && i<max; i+=20) {
1368:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16600              		.loc 1 1368 43 view .LVU5599
 16601 59a8 488D6864 		lea	rbp, 100[rax]	# i,
 16602              	# sieve_extend.c:1369:         bitarray_word[wordindex(i)] |= markmask(i);
 16603              		.loc 1 1369 37 view .LVU5600
 16604 59ac 49C1E806 		shr	r8, 6	# tmp276,
 16605              	# sieve_extend.c:1369:         bitarray_word[wordindex(i)] |= markmask(i);
 16606              		.loc 1 1369 40 view .LVU5601
 16607 59b0 C4E2E9F7 		shlx	rbx, rcx, rdx	# tmp279, tmp185, i
 16607      D9
 16608              	# sieve_extend.c:1369:         bitarray_word[wordindex(i)] |= markmask(i);
 16609              		.loc 1 1369 37 view .LVU5602
 16610 59b5 4A091CC7 		or	QWORD PTR [rdi+r8*8], rbx	# *_3, tmp279
1368:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16611              		.loc 1 1368 42 is_stmt 1 view .LVU5603
1368:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16612              		.loc 1 1368 25 view .LVU5604
 16613              	# sieve_extend.c:1368:     for (counter_t i=1; i<8*64 && i<max; i+=20) {
GAS LISTING /tmp/ccLUVin9.s 			page 441


1368:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16614              		.loc 1 1368 5 is_stmt 0 view .LVU5605
 16615 59b9 4839EE   		cmp	rsi, rbp	# max, i
 16616 59bc 761D     		jbe	.L1348	#,
 16617              		.loc 1 1369 9 is_stmt 1 view .LVU5606
 16618              	# sieve_extend.c:1369:         bitarray_word[wordindex(i)] |= markmask(i);
 16619              		.loc 1 1369 37 is_stmt 0 view .LVU5607
 16620 59be 4989E9   		mov	r9, rbp	# tmp283, i
 16621              	# sieve_extend.c:1368:     for (counter_t i=1; i<8*64 && i<max; i+=20) {
1368:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16622              		.loc 1 1368 43 view .LVU5608
 16623 59c1 4883C078 		add	rax, 120	# i,
 16624              	# sieve_extend.c:1369:         bitarray_word[wordindex(i)] |= markmask(i);
 16625              		.loc 1 1369 37 view .LVU5609
 16626 59c5 49C1E906 		shr	r9, 6	# tmp283,
 16627              	# sieve_extend.c:1369:         bitarray_word[wordindex(i)] |= markmask(i);
 16628              		.loc 1 1369 40 view .LVU5610
 16629 59c9 C462D1F7 		shlx	r10, rcx, rbp	# tmp286, tmp185, i
 16629      D1
 16630              	# sieve_extend.c:1369:         bitarray_word[wordindex(i)] |= markmask(i);
 16631              		.loc 1 1369 37 view .LVU5611
 16632 59ce 4E0914CF 		or	QWORD PTR [rdi+r9*8], r10	# *_3, tmp286
1368:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16633              		.loc 1 1368 42 is_stmt 1 view .LVU5612
1368:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16634              		.loc 1 1368 25 view .LVU5613
 16635              	# sieve_extend.c:1368:     for (counter_t i=1; i<8*64 && i<max; i+=20) {
1368:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16636              		.loc 1 1368 5 is_stmt 0 view .LVU5614
 16637 59d2 4839C6   		cmp	rsi, rax	# max, i
 16638 59d5 0F8755FF 		ja	.L1349	#,
 16638      FFFF
 16639              	.LVL959:
 16640              	.L1348:
1368:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16641              		.loc 1 1368 5 view .LVU5615
 16642              	.LBE935:
1370:sieve_extend.c ****     }
1371:sieve_extend.c **** 
1372:sieve_extend.c ****     counter_t source_start = 66+64;
 16643              		.loc 1 1372 5 is_stmt 1 view .LVU5616
1373:sieve_extend.c ****     counter_t destination_start = 3*4*64 + 12;
 16644              		.loc 1 1373 5 view .LVU5617
1374:sieve_extend.c ****     bitarray_word[wordindex(source_start)]  |= markmask_calc(source_start);
 16645              		.loc 1 1374 5 view .LVU5618
1375:sieve_extend.c ****     bitarray_word[wordindex(source_start+1)]  |= markmask_calc(source_start+1);
 16646              		.loc 1 1375 5 view .LVU5619
 16647 59db 488B4738 		mov	rax, QWORD PTR 56[rdi]	# D__lsm1.715, MEM[(uint64_t *)bitarray_57(D) + 56B]
 16648              	# sieve_extend.c:1375:     bitarray_word[wordindex(source_start+1)]  |= markmask_calc(source_start+
 16649              		.loc 1 1375 47 is_stmt 0 view .LVU5620
 16650 59df 48834F10 		or	QWORD PTR 16[rdi], 12	# MEM[(uint64_t *)bitarray_57(D) + 16B],
 16650      0C
1376:sieve_extend.c **** 
1377:sieve_extend.c ****     counter_t source_vector = vectorindex(source_start);
 16651              		.loc 1 1377 5 is_stmt 1 view .LVU5621
 16652              	.LVL960:
1378:sieve_extend.c ****     int32_t delta_bit    = bitindex_calc(destination_start) - bitindex_calc(source_start); // could
GAS LISTING /tmp/ccLUVin9.s 			page 442


 16653              		.loc 1 1378 5 view .LVU5622
1379:sieve_extend.c ****     
1380:sieve_extend.c ****     bitshift_t shift_bit = delta_bit; 
 16654              		.loc 1 1380 5 view .LVU5623
1381:sieve_extend.c ****     bitshift_t shift_bit_flipped = WORD_SIZE_bitshift - shift_bit; 
 16655              		.loc 1 1381 5 view .LVU5624
1382:sieve_extend.c **** 
1383:sieve_extend.c ****     for (counter_t copy_vector = 3; copy_vector<400; copy_vector++, source_vector++) {
 16656              		.loc 1 1383 5 view .LVU5625
 16657              	.LBB936:
 16658              		.loc 1 1383 10 view .LVU5626
 16659              		.loc 1 1383 37 view .LVU5627
 16660 59e4 488B4F18 		mov	rcx, QWORD PTR 24[rdi]	# D__lsm0.714, MEM[(uint64_t *)bitarray_57(D) + 24B]
 16661 59e8 4C8B7758 		mov	r14, QWORD PTR 88[rdi]	# D__lsm2.716, MEM[(uint64_t *)bitarray_57(D) + 88B]
 16662 59ec 4C8B6F10 		mov	r13, QWORD PTR 16[rdi]	# D__lsm0.702, MEM[(uint64_t *)bitarray_57(D) + 16B]
 16663 59f0 4C8B6730 		mov	r12, QWORD PTR 48[rdi]	# D__lsm1.703, MEM[(uint64_t *)bitarray_57(D) + 48B]
 16664 59f4 488B7750 		mov	rsi, QWORD PTR 80[rdi]	# D__lsm2.704, MEM[(uint64_t *)bitarray_57(D) + 80B]
 16665              	.LVL961:
 16666              		.loc 1 1383 37 is_stmt 0 view .LVU5628
 16667 59f8 488B6F08 		mov	rbp, QWORD PTR 8[rdi]	# D__lsm0.706, MEM[(uint64_t *)bitarray_57(D) + 8B]
 16668 59fc 488B5F28 		mov	rbx, QWORD PTR 40[rdi]	# D__lsm1.707, MEM[(uint64_t *)bitarray_57(D) + 40B]
 16669 5a00 488B5748 		mov	rdx, QWORD PTR 72[rdi]	# D__lsm2.708, MEM[(uint64_t *)bitarray_57(D) + 72B]
 16670 5a04 4C8B1F   		mov	r11, QWORD PTR [rdi]	# D__lsm0.710, *bitarray_57(D)
 16671 5a07 4C8B5720 		mov	r10, QWORD PTR 32[rdi]	# D__lsm1.711, MEM[(uint64_t *)bitarray_57(D) + 32B]
 16672 5a0b 4C8B4F40 		mov	r9, QWORD PTR 64[rdi]	# D__lsm2.712, MEM[(uint64_t *)bitarray_57(D) + 64B]
 16673 5a0f 48894424 		mov	QWORD PTR -16[rsp], rax	# %sfp, D__lsm1.715
 16673      F0
 16674 5a14 488D4718 		lea	rax, 24[rdi]	# ivtmp.740,
 16675 5a18 48894C24 		mov	QWORD PTR -24[rsp], rcx	# %sfp, D__lsm0.714
 16675      E8
 16676              	# sieve_extend.c:1383:     for (counter_t copy_vector = 3; copy_vector<400; copy_vector++, source_v
 16677              		.loc 1 1383 20 view .LVU5629
 16678 5a1d 48C74424 		mov	QWORD PTR -32[rsp], 3	# %sfp,
 16678      E0030000 
 16678      00
 16679 5a26 4C897424 		mov	QWORD PTR -8[rsp], r14	# %sfp, D__lsm2.716
 16679      F8
 16680              	.LVL962:
 16681              	.L1351:
1384:sieve_extend.c ****         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >> shift_bit_flipped) | 
 16682              		.loc 1 1384 9 is_stmt 1 discriminator 3 view .LVU5630
 16683              	# sieve_extend.c:1384:         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >
 16684              		.loc 1 1384 76 is_stmt 0 discriminator 3 view .LVU5631
 16685 5a2b 41BF3600 		mov	r15d, 54	# tmp312,
 16685      0000
 16686 5a31 C4E283F7 		shrx	rcx, QWORD PTR -32[rax], r15	# tmp190, MEM[base: _352, offset: -32B], tmp312
 16686      48E0
 16687              	# sieve_extend.c:1387:         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >
1385:sieve_extend.c ****         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >> shift_bit_flipped) | 
1386:sieve_extend.c ****         bitarray_word[copy_vector*4+2] = (bitarray_word[source_vector*4+1] >> shift_bit_flipped) | 
1387:sieve_extend.c ****         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >> shift_bit_flipped) | 
 16688              		.loc 1 1387 134 discriminator 3 view .LVU5632
 16689 5a37 4C8B7C24 		mov	r15, QWORD PTR -24[rsp]	# D__lsm0.714, %sfp
 16689      E8
 16690              	# sieve_extend.c:1384:         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >
1384:sieve_extend.c ****         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >> shift_bit_flipped) | 
 16691              		.loc 1 1384 134 discriminator 3 view .LVU5633
GAS LISTING /tmp/ccLUVin9.s 			page 443


 16692 5a3c 4D89D8   		mov	r8, r11	# tmp192, D__lsm0.710
 16693 5a3f 49C1E00A 		sal	r8, 10	# tmp192,
 16694              	# sieve_extend.c:1385:         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >
1385:sieve_extend.c ****         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >> shift_bit_flipped) | 
 16695              		.loc 1 1385 134 discriminator 3 view .LVU5634
 16696 5a43 4989EE   		mov	r14, rbp	# tmp194, D__lsm0.706
 16697              	# sieve_extend.c:1386:         bitarray_word[copy_vector*4+2] = (bitarray_word[source_vector*4+1] >
1386:sieve_extend.c ****         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >> shift_bit_flipped) | 
 16698              		.loc 1 1386 76 discriminator 3 view .LVU5635
 16699 5a46 48C1ED36 		shr	rbp, 54	# tmp195,
 16700              	# sieve_extend.c:1384:         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >
1384:sieve_extend.c ****         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >> shift_bit_flipped) | 
 16701              		.loc 1 1384 98 discriminator 3 view .LVU5636
 16702 5a4a 4C09C1   		or	rcx, r8	# _24, tmp192
 16703              	# sieve_extend.c:1387:         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >
 16704              		.loc 1 1387 134 discriminator 3 view .LVU5637
 16705 5a4d 49C1E70A 		sal	r15, 10	# D__lsm0.714,
 16706              	# sieve_extend.c:1386:         bitarray_word[copy_vector*4+2] = (bitarray_word[source_vector*4+1] >
1386:sieve_extend.c ****         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >> shift_bit_flipped) | 
 16707              		.loc 1 1386 134 discriminator 3 view .LVU5638
 16708 5a51 4D89E8   		mov	r8, r13	# tmp196, D__lsm0.702
 16709              	# sieve_extend.c:1387:         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >
 16710              		.loc 1 1387 76 discriminator 3 view .LVU5639
 16711 5a54 49C1ED36 		shr	r13, 54	# tmp197,
 16712              	# sieve_extend.c:1386:         bitarray_word[copy_vector*4+2] = (bitarray_word[source_vector*4+1] >
1386:sieve_extend.c ****         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >> shift_bit_flipped) | 
 16713              		.loc 1 1386 134 discriminator 3 view .LVU5640
 16714 5a58 49C1E00A 		sal	r8, 10	# tmp196,
 16715              	# sieve_extend.c:1387:         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >
 16716              		.loc 1 1387 98 discriminator 3 view .LVU5641
 16717 5a5c 4D09EF   		or	r15, r13	# _51, tmp197
 16718              	# sieve_extend.c:1384:         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >
1384:sieve_extend.c ****         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >> shift_bit_flipped) | 
 16719              		.loc 1 1384 134 discriminator 3 view .LVU5642
 16720 5a5f 4D89D5   		mov	r13, r10	# tmp201, D__lsm1.711
 16721              	# sieve_extend.c:1386:         bitarray_word[copy_vector*4+2] = (bitarray_word[source_vector*4+1] >
1386:sieve_extend.c ****         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >> shift_bit_flipped) | 
 16722              		.loc 1 1386 98 discriminator 3 view .LVU5643
 16723 5a62 4909E8   		or	r8, rbp	# _42, tmp195
 16724              	# sieve_extend.c:1385:         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >
1385:sieve_extend.c ****         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >> shift_bit_flipped) | 
 16725              		.loc 1 1385 76 discriminator 3 view .LVU5644
 16726 5a65 49C1EA36 		shr	r10, 54	# D__lsm1.711,
 16727 5a69 49C1EB36 		shr	r11, 54	# tmp193,
 16728 5a6d 4C89D5   		mov	rbp, r10	# tmp202, D__lsm1.711
 16729              	# sieve_extend.c:1384:         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >
1384:sieve_extend.c ****         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >> shift_bit_flipped) | 
 16730              		.loc 1 1384 134 discriminator 3 view .LVU5645
 16731 5a70 49C1E50A 		sal	r13, 10	# tmp201,
 16732              	# sieve_extend.c:1385:         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >
1385:sieve_extend.c ****         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >> shift_bit_flipped) | 
 16733              		.loc 1 1385 134 discriminator 3 view .LVU5646
 16734 5a74 4989DA   		mov	r10, rbx	# tmp203, D__lsm1.707
 16735 5a77 49C1E20A 		sal	r10, 10	# tmp203,
 16736 5a7b 49C1E60A 		sal	r14, 10	# tmp194,
 16737              	# sieve_extend.c:1385:         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >
1385:sieve_extend.c ****         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >> shift_bit_flipped) | 
GAS LISTING /tmp/ccLUVin9.s 			page 444


 16738              		.loc 1 1385 98 discriminator 3 view .LVU5647
 16739 5a7f 4C09D5   		or	rbp, r10	# D__lsm0.706, tmp203
 16740              	# sieve_extend.c:1387:         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >
 16741              		.loc 1 1387 134 discriminator 3 view .LVU5648
 16742 5a82 4C8B5424 		mov	r10, QWORD PTR -16[rsp]	# D__lsm1.715, %sfp
 16742      F0
 16743              	# sieve_extend.c:1385:         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >
1385:sieve_extend.c ****         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >> shift_bit_flipped) | 
 16744              		.loc 1 1385 98 discriminator 3 view .LVU5649
 16745 5a87 4D09DE   		or	r14, r11	# _33, tmp193
 16746              	# sieve_extend.c:1384:         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >
1384:sieve_extend.c ****         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >> shift_bit_flipped) | 
 16747              		.loc 1 1384 40 discriminator 3 view .LVU5650
 16748 5a8a 48894848 		mov	QWORD PTR 72[rax], rcx	# MEM[base: _352, offset: 72B], _24
1385:sieve_extend.c ****         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >> shift_bit_flipped) | 
 16749              		.loc 1 1385 9 is_stmt 1 discriminator 3 view .LVU5651
 16750              	# sieve_extend.c:1384:         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >
1384:sieve_extend.c ****         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >> shift_bit_flipped) | 
 16751              		.loc 1 1384 76 is_stmt 0 discriminator 3 view .LVU5652
 16752 5a8e 41BB3600 		mov	r11d, 54	# tmp317,
 16752      0000
 16753 5a94 C462A3F7 		shrx	r11, QWORD PTR [rax], r11	# tmp199, MEM[base: _352, offset: 0B], tmp317
 16753      18
 16754              	# sieve_extend.c:1385:         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >
1385:sieve_extend.c ****         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >> shift_bit_flipped) | 
 16755              		.loc 1 1385 40 discriminator 3 view .LVU5653
 16756 5a99 4C897050 		mov	QWORD PTR 80[rax], r14	# MEM[base: _352, offset: 80B], _33
1386:sieve_extend.c ****         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >> shift_bit_flipped) | 
 16757              		.loc 1 1386 9 is_stmt 1 discriminator 3 view .LVU5654
 16758              	# sieve_extend.c:1387:         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >
 16759              		.loc 1 1387 134 is_stmt 0 discriminator 3 view .LVU5655
 16760 5a9d 49C1E20A 		sal	r10, 10	# D__lsm1.715,
 16761              	# sieve_extend.c:1384:         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >
1384:sieve_extend.c ****         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >> shift_bit_flipped) | 
 16762              		.loc 1 1384 98 discriminator 3 view .LVU5656
 16763 5aa1 4D09EB   		or	r11, r13	# D__lsm0.710, tmp201
 16764              	# sieve_extend.c:1386:         bitarray_word[copy_vector*4+2] = (bitarray_word[source_vector*4+1] >
1386:sieve_extend.c ****         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >> shift_bit_flipped) | 
 16765              		.loc 1 1386 40 discriminator 3 view .LVU5657
 16766 5aa4 4C894058 		mov	QWORD PTR 88[rax], r8	# MEM[base: _352, offset: 88B], _42
 16767              		.loc 1 1387 9 is_stmt 1 discriminator 3 view .LVU5658
 16768              	# sieve_extend.c:1386:         bitarray_word[copy_vector*4+2] = (bitarray_word[source_vector*4+1] >
1386:sieve_extend.c ****         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >> shift_bit_flipped) | 
 16769              		.loc 1 1386 76 is_stmt 0 discriminator 3 view .LVU5659
 16770 5aa8 4989DD   		mov	r13, rbx	# D__lsm1.707, D__lsm1.707
 16771 5aab 49C1ED36 		shr	r13, 54	# D__lsm1.707,
 16772              	# sieve_extend.c:1386:         bitarray_word[copy_vector*4+2] = (bitarray_word[source_vector*4+1] >
1386:sieve_extend.c ****         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >> shift_bit_flipped) | 
 16773              		.loc 1 1386 134 discriminator 3 view .LVU5660
 16774 5aaf 4C89E3   		mov	rbx, r12	# tmp205, D__lsm1.703
 16775 5ab2 48C1E30A 		sal	rbx, 10	# tmp205,
 16776              	# sieve_extend.c:1387:         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >
 16777              		.loc 1 1387 76 discriminator 3 view .LVU5661
 16778 5ab6 49C1EC36 		shr	r12, 54	# tmp206,
 16779              	# sieve_extend.c:1386:         bitarray_word[copy_vector*4+2] = (bitarray_word[source_vector*4+1] >
1386:sieve_extend.c ****         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >> shift_bit_flipped) | 
 16780              		.loc 1 1386 98 discriminator 3 view .LVU5662
GAS LISTING /tmp/ccLUVin9.s 			page 445


 16781 5aba 4909DD   		or	r13, rbx	# D__lsm0.702, tmp205
 16782              	# sieve_extend.c:1384:         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >
1384:sieve_extend.c ****         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >> shift_bit_flipped) | 
 16783              		.loc 1 1384 134 discriminator 3 view .LVU5663
 16784 5abd 4C89CB   		mov	rbx, r9	# tmp210, D__lsm2.712
 16785              	# sieve_extend.c:1387:         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >
 16786              		.loc 1 1387 98 discriminator 3 view .LVU5664
 16787 5ac0 4D09D4   		or	r12, r10	# tmp206, tmp207
 16788              	# sieve_extend.c:1384:         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >
1384:sieve_extend.c ****         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >> shift_bit_flipped) | 
 16789              		.loc 1 1384 134 discriminator 3 view .LVU5665
 16790 5ac3 48C1E30A 		sal	rbx, 10	# tmp210,
 16791              	# sieve_extend.c:1385:         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >
1385:sieve_extend.c ****         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >> shift_bit_flipped) | 
 16792              		.loc 1 1385 76 discriminator 3 view .LVU5666
 16793 5ac7 49C1E936 		shr	r9, 54	# D__lsm2.712,
 16794              	# sieve_extend.c:1387:         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >
 16795              		.loc 1 1387 40 discriminator 3 view .LVU5667
 16796 5acb 4C89A080 		mov	QWORD PTR 128[rax], r12	# MEM[base: _352, offset: 128B], D__lsm0.714
 16796      000000
 16797              	# sieve_extend.c:1387:         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >
 16798              		.loc 1 1387 98 discriminator 3 view .LVU5668
 16799 5ad2 4C896424 		mov	QWORD PTR -24[rsp], r12	# %sfp, D__lsm0.714
 16799      E8
 16800              	# sieve_extend.c:1384:         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >
1384:sieve_extend.c ****         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >> shift_bit_flipped) | 
 16801              		.loc 1 1384 76 discriminator 3 view .LVU5669
 16802 5ad7 41BC3600 		mov	r12d, 54	# tmp326,
 16802      0000
 16803 5add C4629BF7 		shrx	r10, QWORD PTR 32[rax], r12	# tmp208, MEM[base: _352, offset: 32B], tmp326
 16803      5020
 16804              	# sieve_extend.c:1384:         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >
1384:sieve_extend.c ****         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >> shift_bit_flipped) | 
 16805              		.loc 1 1384 98 discriminator 3 view .LVU5670
 16806 5ae3 4909DA   		or	r10, rbx	# D__lsm1.711, tmp210
 16807              	# sieve_extend.c:1385:         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >
1385:sieve_extend.c ****         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >> shift_bit_flipped) | 
 16808              		.loc 1 1385 76 discriminator 3 view .LVU5671
 16809 5ae6 4C89CB   		mov	rbx, r9	# tmp211, D__lsm2.712
 16810              	# sieve_extend.c:1385:         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >
1385:sieve_extend.c ****         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >> shift_bit_flipped) | 
 16811              		.loc 1 1385 134 discriminator 3 view .LVU5672
 16812 5ae9 4989D1   		mov	r9, rdx	# tmp212, D__lsm2.708
 16813 5aec 49C1E10A 		sal	r9, 10	# tmp212,
 16814              	# sieve_extend.c:1386:         bitarray_word[copy_vector*4+2] = (bitarray_word[source_vector*4+1] >
1386:sieve_extend.c ****         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >> shift_bit_flipped) | 
 16815              		.loc 1 1386 76 discriminator 3 view .LVU5673
 16816 5af0 4989D4   		mov	r12, rdx	# D__lsm2.708, D__lsm2.708
 16817              	# sieve_extend.c:1385:         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >
1385:sieve_extend.c ****         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >> shift_bit_flipped) | 
 16818              		.loc 1 1385 98 discriminator 3 view .LVU5674
 16819 5af3 4C09CB   		or	rbx, r9	# D__lsm1.707, tmp212
 16820              	# sieve_extend.c:1386:         bitarray_word[copy_vector*4+2] = (bitarray_word[source_vector*4+1] >
1386:sieve_extend.c ****         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >> shift_bit_flipped) | 
 16821              		.loc 1 1386 134 discriminator 3 view .LVU5675
 16822 5af6 4889F2   		mov	rdx, rsi	# tmp214, D__lsm2.704
 16823              	# sieve_extend.c:1387:         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >
GAS LISTING /tmp/ccLUVin9.s 			page 446


 16824              		.loc 1 1387 134 discriminator 3 view .LVU5676
 16825 5af9 4C8B4C24 		mov	r9, QWORD PTR -8[rsp]	# D__lsm2.716, %sfp
 16825      F8
 16826              	# sieve_extend.c:1386:         bitarray_word[copy_vector*4+2] = (bitarray_word[source_vector*4+1] >
1386:sieve_extend.c ****         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >> shift_bit_flipped) | 
 16827              		.loc 1 1386 76 discriminator 3 view .LVU5677
 16828 5afe 49C1EC36 		shr	r12, 54	# D__lsm2.708,
 16829              	# sieve_extend.c:1386:         bitarray_word[copy_vector*4+2] = (bitarray_word[source_vector*4+1] >
1386:sieve_extend.c ****         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >> shift_bit_flipped) | 
 16830              		.loc 1 1386 134 discriminator 3 view .LVU5678
 16831 5b02 48C1E20A 		sal	rdx, 10	# tmp214,
 16832              	# sieve_extend.c:1387:         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >
 16833              		.loc 1 1387 134 discriminator 3 view .LVU5679
 16834 5b06 49C1E10A 		sal	r9, 10	# D__lsm2.716,
 16835              	# sieve_extend.c:1386:         bitarray_word[copy_vector*4+2] = (bitarray_word[source_vector*4+1] >
1386:sieve_extend.c ****         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >> shift_bit_flipped) | 
 16836              		.loc 1 1386 98 discriminator 3 view .LVU5680
 16837 5b0a 4909D4   		or	r12, rdx	# D__lsm1.703, tmp214
 16838              	# sieve_extend.c:1387:         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >
 16839              		.loc 1 1387 76 discriminator 3 view .LVU5681
 16840 5b0d 48C1EE36 		shr	rsi, 54	# tmp215,
 16841              	# sieve_extend.c:1384:         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >
1384:sieve_extend.c ****         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >> shift_bit_flipped) | 
 16842              		.loc 1 1384 134 discriminator 3 view .LVU5682
 16843 5b11 4889CA   		mov	rdx, rcx	# tmp219, _24
 16844              	# sieve_extend.c:1387:         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >
 16845              		.loc 1 1387 40 discriminator 3 view .LVU5683
 16846 5b14 4C897860 		mov	QWORD PTR 96[rax], r15	# MEM[base: _352, offset: 96B], _51
1383:sieve_extend.c ****         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >> shift_bit_flipped) | 
 16847              		.loc 1 1383 54 is_stmt 1 discriminator 3 view .LVU5684
 16848              	.LVL963:
1383:sieve_extend.c ****         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >> shift_bit_flipped) | 
 16849              		.loc 1 1383 37 discriminator 3 view .LVU5685
1384:sieve_extend.c ****         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >> shift_bit_flipped) | 
 16850              		.loc 1 1384 9 discriminator 3 view .LVU5686
 16851              	# sieve_extend.c:1387:         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >
 16852              		.loc 1 1387 98 is_stmt 0 discriminator 3 view .LVU5687
 16853 5b18 4C09CE   		or	rsi, r9	# tmp215, tmp216
 16854              	# sieve_extend.c:1384:         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >
1384:sieve_extend.c ****         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >> shift_bit_flipped) | 
 16855              		.loc 1 1384 134 discriminator 3 view .LVU5688
 16856 5b1b 48C1E20A 		sal	rdx, 10	# tmp219,
 16857              	# sieve_extend.c:1383:     for (counter_t copy_vector = 3; copy_vector<400; copy_vector++, source_v
1383:sieve_extend.c ****         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >> shift_bit_flipped) | 
 16858              		.loc 1 1383 65 discriminator 3 view .LVU5689
 16859 5b1f 48834424 		add	QWORD PTR -32[rsp], 4	# %sfp,
 16859      E004
 16860              	.LVL964:
 16861              	# sieve_extend.c:1387:         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >
 16862              		.loc 1 1387 40 discriminator 3 view .LVU5690
 16863 5b25 4889B0A0 		mov	QWORD PTR 160[rax], rsi	# MEM[base: _352, offset: 160B], D__lsm1.715
 16863      000000
 16864 5b2c 4883E880 		sub	rax, -128	# ivtmp.740,
 16865              	# sieve_extend.c:1387:         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >
 16866              		.loc 1 1387 98 discriminator 3 view .LVU5691
 16867 5b30 48897424 		mov	QWORD PTR -16[rsp], rsi	# %sfp, D__lsm1.715
 16867      F0
GAS LISTING /tmp/ccLUVin9.s 			page 447


 16868              	# sieve_extend.c:1384:         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >
1384:sieve_extend.c ****         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >> shift_bit_flipped) | 
 16869              		.loc 1 1384 76 discriminator 3 view .LVU5692
 16870 5b35 BE360000 		mov	esi, 54	# tmp335,
 16870      00
 16871 5b3a C462CBF7 		shrx	r9, QWORD PTR -64[rax], rsi	# tmp217, MEM[base: _352, offset: 64B], tmp335
 16871      48C0
 16872              	# sieve_extend.c:1384:         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >
1384:sieve_extend.c ****         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >> shift_bit_flipped) | 
 16873              		.loc 1 1384 98 discriminator 3 view .LVU5693
 16874 5b40 4909D1   		or	r9, rdx	# D__lsm2.712, tmp219
 16875              	# sieve_extend.c:1385:         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >
1385:sieve_extend.c ****         bitarray_word[copy_vector*4+2] = (bitarray_word[source_vector*4+1] >> shift_bit_flipped) | 
 16876              		.loc 1 1385 134 discriminator 3 view .LVU5694
 16877 5b43 4C89F2   		mov	rdx, r14	# tmp221, _33
 16878              	# sieve_extend.c:1386:         bitarray_word[copy_vector*4+2] = (bitarray_word[source_vector*4+1] >
1386:sieve_extend.c ****         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >> shift_bit_flipped) | 
 16879              		.loc 1 1386 134 discriminator 3 view .LVU5695
 16880 5b46 4C89C6   		mov	rsi, r8	# tmp223, _42
 16881              	# sieve_extend.c:1385:         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >
1385:sieve_extend.c ****         bitarray_word[copy_vector*4+2] = (bitarray_word[source_vector*4+1] >> shift_bit_flipped) | 
 16882              		.loc 1 1385 76 discriminator 3 view .LVU5696
 16883 5b49 48C1E936 		shr	rcx, 54	# tmp220,
 16884              	# sieve_extend.c:1385:         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >
1385:sieve_extend.c ****         bitarray_word[copy_vector*4+2] = (bitarray_word[source_vector*4+1] >> shift_bit_flipped) | 
 16885              		.loc 1 1385 134 discriminator 3 view .LVU5697
 16886 5b4d 48C1E20A 		sal	rdx, 10	# tmp221,
 16887              	# sieve_extend.c:1386:         bitarray_word[copy_vector*4+2] = (bitarray_word[source_vector*4+1] >
1386:sieve_extend.c ****         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >> shift_bit_flipped) | 
 16888              		.loc 1 1386 76 discriminator 3 view .LVU5698
 16889 5b51 49C1EE36 		shr	r14, 54	# tmp222,
 16890              	# sieve_extend.c:1385:         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >
1385:sieve_extend.c ****         bitarray_word[copy_vector*4+2] = (bitarray_word[source_vector*4+1] >> shift_bit_flipped) | 
 16891              		.loc 1 1385 98 discriminator 3 view .LVU5699
 16892 5b55 4809CA   		or	rdx, rcx	# D__lsm2.708, tmp220
 16893              	# sieve_extend.c:1383:     for (counter_t copy_vector = 3; copy_vector<400; copy_vector++, source_v
1383:sieve_extend.c ****         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >> shift_bit_flipped) | 
 16894              		.loc 1 1383 65 discriminator 3 view .LVU5700
 16895 5b58 488B4C24 		mov	rcx, QWORD PTR -32[rsp]	# copy_vector, %sfp
 16895      E0
 16896              	# sieve_extend.c:1386:         bitarray_word[copy_vector*4+2] = (bitarray_word[source_vector*4+1] >
1386:sieve_extend.c ****         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >> shift_bit_flipped) | 
 16897              		.loc 1 1386 134 discriminator 3 view .LVU5701
 16898 5b5d 48C1E60A 		sal	rsi, 10	# tmp223,
 16899              	# sieve_extend.c:1387:         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >
 16900              		.loc 1 1387 134 discriminator 3 view .LVU5702
 16901 5b61 49C1E70A 		sal	r15, 10	# tmp225,
 16902              	# sieve_extend.c:1386:         bitarray_word[copy_vector*4+2] = (bitarray_word[source_vector*4+1] >
1386:sieve_extend.c ****         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >> shift_bit_flipped) | 
 16903              		.loc 1 1386 98 discriminator 3 view .LVU5703
 16904 5b65 4C09F6   		or	rsi, r14	# D__lsm2.704, tmp222
 16905              	# sieve_extend.c:1387:         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >
 16906              		.loc 1 1387 76 discriminator 3 view .LVU5704
 16907 5b68 49C1E836 		shr	r8, 54	# tmp224,
 16908              	# sieve_extend.c:1384:         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >
1384:sieve_extend.c ****         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >> shift_bit_flipped) | 
 16909              		.loc 1 1384 40 discriminator 3 view .LVU5705
GAS LISTING /tmp/ccLUVin9.s 			page 448


 16910 5b6c 4C8958E8 		mov	QWORD PTR -24[rax], r11	# MEM[base: _352, offset: 104B], D__lsm0.710
1385:sieve_extend.c ****         bitarray_word[copy_vector*4+2] = (bitarray_word[source_vector*4+1] >> shift_bit_flipped) | 
 16911              		.loc 1 1385 9 is_stmt 1 discriminator 3 view .LVU5706
 16912              	# sieve_extend.c:1387:         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >
 16913              		.loc 1 1387 98 is_stmt 0 discriminator 3 view .LVU5707
 16914 5b70 4D09F8   		or	r8, r15	# tmp224, tmp225
 16915              	# sieve_extend.c:1385:         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >
1385:sieve_extend.c ****         bitarray_word[copy_vector*4+2] = (bitarray_word[source_vector*4+1] >> shift_bit_flipped) | 
 16916              		.loc 1 1385 40 discriminator 3 view .LVU5708
 16917 5b73 488968F0 		mov	QWORD PTR -16[rax], rbp	# MEM[base: _352, offset: 112B], D__lsm0.706
1386:sieve_extend.c ****         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >> shift_bit_flipped) | 
 16918              		.loc 1 1386 9 is_stmt 1 discriminator 3 view .LVU5709
 16919              	# sieve_extend.c:1386:         bitarray_word[copy_vector*4+2] = (bitarray_word[source_vector*4+1] >
1386:sieve_extend.c ****         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >> shift_bit_flipped) | 
 16920              		.loc 1 1386 40 is_stmt 0 discriminator 3 view .LVU5710
 16921 5b77 4C8968F8 		mov	QWORD PTR -8[rax], r13	# MEM[base: _352, offset: 120B], D__lsm0.702
 16922              		.loc 1 1387 9 is_stmt 1 discriminator 3 view .LVU5711
1383:sieve_extend.c ****         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >> shift_bit_flipped) | 
 16923              		.loc 1 1383 54 discriminator 3 view .LVU5712
1383:sieve_extend.c ****         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >> shift_bit_flipped) | 
 16924              		.loc 1 1383 37 discriminator 3 view .LVU5713
1384:sieve_extend.c ****         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >> shift_bit_flipped) | 
 16925              		.loc 1 1384 9 discriminator 3 view .LVU5714
 16926              	# sieve_extend.c:1384:         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >
1384:sieve_extend.c ****         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >> shift_bit_flipped) | 
 16927              		.loc 1 1384 40 is_stmt 0 discriminator 3 view .LVU5715
 16928 5b7b 4C895008 		mov	QWORD PTR 8[rax], r10	# MEM[base: _352, offset: 136B], D__lsm1.711
1385:sieve_extend.c ****         bitarray_word[copy_vector*4+2] = (bitarray_word[source_vector*4+1] >> shift_bit_flipped) | 
 16929              		.loc 1 1385 9 is_stmt 1 discriminator 3 view .LVU5716
 16930              	# sieve_extend.c:1385:         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >
1385:sieve_extend.c ****         bitarray_word[copy_vector*4+2] = (bitarray_word[source_vector*4+1] >> shift_bit_flipped) | 
 16931              		.loc 1 1385 40 is_stmt 0 discriminator 3 view .LVU5717
 16932 5b7f 48895810 		mov	QWORD PTR 16[rax], rbx	# MEM[base: _352, offset: 144B], D__lsm1.707
1386:sieve_extend.c ****         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >> shift_bit_flipped) | 
 16933              		.loc 1 1386 9 is_stmt 1 discriminator 3 view .LVU5718
 16934              	# sieve_extend.c:1386:         bitarray_word[copy_vector*4+2] = (bitarray_word[source_vector*4+1] >
1386:sieve_extend.c ****         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >> shift_bit_flipped) | 
 16935              		.loc 1 1386 40 is_stmt 0 discriminator 3 view .LVU5719
 16936 5b83 4C896018 		mov	QWORD PTR 24[rax], r12	# MEM[base: _352, offset: 152B], D__lsm1.703
 16937              		.loc 1 1387 9 is_stmt 1 discriminator 3 view .LVU5720
1383:sieve_extend.c ****         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >> shift_bit_flipped) | 
 16938              		.loc 1 1383 54 discriminator 3 view .LVU5721
1383:sieve_extend.c ****         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >> shift_bit_flipped) | 
 16939              		.loc 1 1383 37 discriminator 3 view .LVU5722
1384:sieve_extend.c ****         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >> shift_bit_flipped) | 
 16940              		.loc 1 1384 9 discriminator 3 view .LVU5723
 16941              	# sieve_extend.c:1384:         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >
1384:sieve_extend.c ****         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >> shift_bit_flipped) | 
 16942              		.loc 1 1384 40 is_stmt 0 discriminator 3 view .LVU5724
 16943 5b87 4C894828 		mov	QWORD PTR 40[rax], r9	# MEM[base: _352, offset: 168B], D__lsm2.712
1385:sieve_extend.c ****         bitarray_word[copy_vector*4+2] = (bitarray_word[source_vector*4+1] >> shift_bit_flipped) | 
 16944              		.loc 1 1385 9 is_stmt 1 discriminator 3 view .LVU5725
 16945              	# sieve_extend.c:1385:         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >
1385:sieve_extend.c ****         bitarray_word[copy_vector*4+2] = (bitarray_word[source_vector*4+1] >> shift_bit_flipped) | 
 16946              		.loc 1 1385 40 is_stmt 0 discriminator 3 view .LVU5726
 16947 5b8b 48895030 		mov	QWORD PTR 48[rax], rdx	# MEM[base: _352, offset: 176B], D__lsm2.708
1386:sieve_extend.c ****         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >> shift_bit_flipped) | 
GAS LISTING /tmp/ccLUVin9.s 			page 449


 16948              		.loc 1 1386 9 is_stmt 1 discriminator 3 view .LVU5727
 16949              	# sieve_extend.c:1386:         bitarray_word[copy_vector*4+2] = (bitarray_word[source_vector*4+1] >
1386:sieve_extend.c ****         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >> shift_bit_flipped) | 
 16950              		.loc 1 1386 40 is_stmt 0 discriminator 3 view .LVU5728
 16951 5b8f 48897038 		mov	QWORD PTR 56[rax], rsi	# MEM[base: _352, offset: 184B], D__lsm2.704
 16952              		.loc 1 1387 9 is_stmt 1 discriminator 3 view .LVU5729
 16953              	# sieve_extend.c:1387:         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >
 16954              		.loc 1 1387 40 is_stmt 0 discriminator 3 view .LVU5730
 16955 5b93 4C894040 		mov	QWORD PTR 64[rax], r8	# MEM[base: _352, offset: 192B], D__lsm2.716
1383:sieve_extend.c ****         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >> shift_bit_flipped) | 
 16956              		.loc 1 1383 54 is_stmt 1 discriminator 3 view .LVU5731
 16957              	.LVL965:
1383:sieve_extend.c ****         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >> shift_bit_flipped) | 
 16958              		.loc 1 1383 37 discriminator 3 view .LVU5732
 16959 5b97 4881F98F 		cmp	rcx, 399	# copy_vector,
 16959      010000
 16960              	# sieve_extend.c:1387:         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >
 16961              		.loc 1 1387 98 is_stmt 0 discriminator 3 view .LVU5733
 16962 5b9e 4C894424 		mov	QWORD PTR -8[rsp], r8	# %sfp, D__lsm2.716
 16962      F8
 16963 5ba3 0F8582FE 		jne	.L1351	#,
 16963      FFFF
 16964 5ba9 488D8780 		lea	rax, 12672[rdi]	# ivtmp.726,
 16964      310000
 16965 5bb0 4C8DB7E0 		lea	r14, 12768[rdi]	# ivtmp.727,
 16965      310000
 16966 5bb7 4881C7A0 		add	rdi, 12704	# _224,
 16966      310000
 16967              	.LVL966:
 16968 5bbe 6690     		.p2align 4
 16969              		.p2align 3
 16970              	.L1352:
1384:sieve_extend.c ****         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >> shift_bit_flipped) | 
 16971              		.loc 1 1384 9 is_stmt 1 view .LVU5734
 16972              	# sieve_extend.c:1384:         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >
1384:sieve_extend.c ****         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >> shift_bit_flipped) | 
 16973              		.loc 1 1384 134 is_stmt 0 view .LVU5735
 16974 5bc0 41B80A00 		mov	r8d, 10	# tmp343,
 16974      0000
 16975              	# sieve_extend.c:1384:         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >
1384:sieve_extend.c ****         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >> shift_bit_flipped) | 
 16976              		.loc 1 1384 76 view .LVU5736
 16977 5bc6 41BF3600 		mov	r15d, 54	# tmp344,
 16977      0000
 16978              	# sieve_extend.c:1384:         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >
1384:sieve_extend.c ****         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >> shift_bit_flipped) | 
 16979              		.loc 1 1384 134 view .LVU5737
 16980 5bcc C462B9F7 		shlx	r11, QWORD PTR [rax], r8	# tmp226, MEM[base: _232, offset: 0B], tmp343
 16980      18
 16981              	# sieve_extend.c:1384:         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >
1384:sieve_extend.c ****         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >> shift_bit_flipped) | 
 16982              		.loc 1 1384 76 view .LVU5738
 16983 5bd1 C4E283F7 		shrx	rbp, QWORD PTR -8[rax], r15	# tmp228, MEM[base: _232, offset: -8B], tmp344
 16983      68F8
 16984              	# sieve_extend.c:1384:         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >
1384:sieve_extend.c ****         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >> shift_bit_flipped) | 
 16985              		.loc 1 1384 98 view .LVU5739
GAS LISTING /tmp/ccLUVin9.s 			page 450


 16986 5bd7 4909EB   		or	r11, rbp	# tmp230, tmp228
 16987 5bda 4883C020 		add	rax, 32	# ivtmp.726,
 16988 5bde 4D891E   		mov	QWORD PTR [r14], r11	# MEM[base: _231, offset: 0B], tmp230
1385:sieve_extend.c ****         bitarray_word[copy_vector*4+2] = (bitarray_word[source_vector*4+1] >> shift_bit_flipped) | 
 16989              		.loc 1 1385 9 is_stmt 1 view .LVU5740
 16990              	# sieve_extend.c:1385:         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >
1385:sieve_extend.c ****         bitarray_word[copy_vector*4+2] = (bitarray_word[source_vector*4+1] >> shift_bit_flipped) | 
 16991              		.loc 1 1385 134 is_stmt 0 view .LVU5741
 16992 5be1 C462B9F7 		shlx	r13, QWORD PTR -24[rax], r8	# tmp231, MEM[base: _232, offset: 8B], tmp345
 16992      68E8
 16993              	# sieve_extend.c:1385:         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >
1385:sieve_extend.c ****         bitarray_word[copy_vector*4+2] = (bitarray_word[source_vector*4+1] >> shift_bit_flipped) | 
 16994              		.loc 1 1385 76 view .LVU5742
 16995 5be7 C46283F7 		shrx	r10, QWORD PTR -32[rax], r15	# tmp233, MEM[base: _232, offset: 0B], tmp346
 16995      50E0
 16996              	# sieve_extend.c:1385:         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >
1385:sieve_extend.c ****         bitarray_word[copy_vector*4+2] = (bitarray_word[source_vector*4+1] >> shift_bit_flipped) | 
 16997              		.loc 1 1385 98 view .LVU5743
 16998 5bed 4D09D5   		or	r13, r10	# tmp235, tmp233
 16999 5bf0 4D896E08 		mov	QWORD PTR 8[r14], r13	# MEM[base: _231, offset: 8B], tmp235
1386:sieve_extend.c ****         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >> shift_bit_flipped) | 
 17000              		.loc 1 1386 9 is_stmt 1 view .LVU5744
 17001              	# sieve_extend.c:1386:         bitarray_word[copy_vector*4+2] = (bitarray_word[source_vector*4+1] >
1386:sieve_extend.c ****         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >> shift_bit_flipped) | 
 17002              		.loc 1 1386 134 is_stmt 0 view .LVU5745
 17003 5bf4 C4E2B9F7 		shlx	rbx, QWORD PTR -16[rax], r8	# tmp236, MEM[base: _232, offset: 16B], tmp347
 17003      58F0
 17004              	# sieve_extend.c:1386:         bitarray_word[copy_vector*4+2] = (bitarray_word[source_vector*4+1] >
1386:sieve_extend.c ****         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >> shift_bit_flipped) | 
 17005              		.loc 1 1386 76 view .LVU5746
 17006 5bfa C46283F7 		shrx	r12, QWORD PTR -24[rax], r15	# tmp238, MEM[base: _232, offset: 8B], tmp348
 17006      60E8
 17007              	# sieve_extend.c:1386:         bitarray_word[copy_vector*4+2] = (bitarray_word[source_vector*4+1] >
1386:sieve_extend.c ****         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >> shift_bit_flipped) | 
 17008              		.loc 1 1386 98 view .LVU5747
 17009 5c00 4C09E3   		or	rbx, r12	# tmp240, tmp238
 17010 5c03 49895E10 		mov	QWORD PTR 16[r14], rbx	# MEM[base: _231, offset: 16B], tmp240
 17011              		.loc 1 1387 9 is_stmt 1 view .LVU5748
 17012              	# sieve_extend.c:1387:         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >
 17013              		.loc 1 1387 76 is_stmt 0 view .LVU5749
 17014 5c07 C46283F7 		shrx	r9, QWORD PTR -16[rax], r15	# tmp241, MEM[base: _232, offset: 16B], tmp349
 17014      48F0
 17015              	# sieve_extend.c:1387:         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >
 17016              		.loc 1 1387 134 view .LVU5750
 17017 5c0d C4E2B9F7 		shlx	rdx, QWORD PTR -8[rax], r8	# tmp243, MEM[base: _232, offset: 24B], tmp350
 17017      50F8
 17018              	# sieve_extend.c:1387:         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >
 17019              		.loc 1 1387 98 view .LVU5751
 17020 5c13 4909D1   		or	r9, rdx	# tmp245, tmp243
 17021 5c16 4D894E18 		mov	QWORD PTR 24[r14], r9	# MEM[base: _231, offset: 24B], tmp245
1383:sieve_extend.c ****         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >> shift_bit_flipped) | 
 17022              		.loc 1 1383 54 is_stmt 1 view .LVU5752
1383:sieve_extend.c ****         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >> shift_bit_flipped) | 
 17023              		.loc 1 1383 37 view .LVU5753
 17024 5c1a 4983C620 		add	r14, 32	# ivtmp.727,
 17025              	# sieve_extend.c:1383:     for (counter_t copy_vector = 3; copy_vector<400; copy_vector++, source_v
1383:sieve_extend.c ****         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >> shift_bit_flipped) | 
GAS LISTING /tmp/ccLUVin9.s 			page 451


 17026              		.loc 1 1383 5 is_stmt 0 view .LVU5754
 17027 5c1e 4839C7   		cmp	rdi, rax	# _224, ivtmp.726
 17028 5c21 759D     		jne	.L1352	#,
 17029              	.LBE936:
 17030              	# sieve_extend.c:1389: }
1388:sieve_extend.c ****     }
1389:sieve_extend.c **** }
 17031              		.loc 1 1389 1 view .LVU5755
 17032 5c23 5B       		pop	rbx	#
 17033              		.cfi_def_cfa_offset 48
 17034 5c24 5D       		pop	rbp	#
 17035              		.cfi_def_cfa_offset 40
 17036 5c25 415C     		pop	r12	#
 17037              		.cfi_def_cfa_offset 32
 17038 5c27 415D     		pop	r13	#
 17039              		.cfi_def_cfa_offset 24
 17040 5c29 415E     		pop	r14	#
 17041              		.cfi_def_cfa_offset 16
 17042 5c2b 415F     		pop	r15	#
 17043              		.cfi_def_cfa_offset 8
 17044 5c2d C3       		ret	
 17045              		.cfi_endproc
 17046              	.LFE98:
 17048              		.section	.rodata.str1.1
 17049              	.LC29:
 17050 0044 5573696E 		.string	"Using Pointers"
 17050      6720506F 
 17050      696E7465 
 17050      727300
 17051              	.LC30:
 17052 0053 2D2D6865 		.string	"--help"
 17052      6C7000
 17053              	.LC31:
 17054 005a 2D2D7665 		.string	"--verbose"
 17054      72626F73 
 17054      6500
 17055              	.LC32:
 17056 0064 4E6F2076 		.string	"No verbose level specified\n"
 17056      6572626F 
 17056      7365206C 
 17056      6576656C 
 17056      20737065 
 17057              		.section	.rodata.str1.8
 17058 03ae 0000     		.align 8
 17059              	.LC33:
 17060 03b0 4572726F 		.string	"Error: Invalid measurement time: %s\n"
 17060      723A2049 
 17060      6E76616C 
 17060      6964206D 
 17060      65617375 
 17061              		.section	.rodata.str1.1
 17062              	.LC34:
 17063 0080 56657262 		.string	"Verbose level set to %d\n"
 17063      6F736520 
 17063      6C657665 
 17063      6C207365 
 17063      7420746F 
GAS LISTING /tmp/ccLUVin9.s 			page 452


 17064              	.LC35:
 17065 0099 2D2D6368 		.string	"--check"
 17065      65636B00 
 17066              	.LC36:
 17067 00a1 2D2D7475 		.string	"--tune"
 17067      6E6500
 17068              	.LC37:
 17069 00a8 4E6F2074 		.string	"No tune level specified\n"
 17069      756E6520 
 17069      6C657665 
 17069      6C207370 
 17069      65636966 
 17070              		.section	.rodata.str1.8
 17071 03d5 000000   		.align 8
 17072              	.LC38:
 17073 03d8 4572726F 		.string	"Error: Invalid tune level: %s\n"
 17073      723A2049 
 17073      6E76616C 
 17073      69642074 
 17073      756E6520 
 17074              		.section	.rodata.str1.1
 17075              	.LC39:
 17076 00c1 54756E65 		.string	"Tune level set to %d\n"
 17076      206C6576 
 17076      656C2073 
 17076      65742074 
 17076      6F202564 
 17077              	.LC40:
 17078 00d7 2D2D7368 		.string	"--show"
 17078      6F7700
 17079              	.LC41:
 17080 00de 4E6F2073 		.string	"No show maximum specified\n"
 17080      686F7720 
 17080      6D617869 
 17080      6D756D20 
 17080      73706563 
 17081              	.LC42:
 17082 00f9 256A7500 		.string	"%ju"
 17083              		.section	.rodata.str1.8
 17084 03f7 00       		.align 8
 17085              	.LC43:
 17086 03f8 4572726F 		.string	"Error: Invalid show maximum: %s\n"
 17086      723A2049 
 17086      6E76616C 
 17086      69642073 
 17086      686F7720 
 17087              		.section	.rodata.str1.1
 17088              	.LC44:
 17089 00fd 53686F77 		.string	"Show maximum set to %ju\n"
 17089      206D6178 
 17089      696D756D 
 17089      20736574 
 17089      20746F20 
 17090              	.LC45:
 17091 0116 496E7661 		.string	"Invalid size %s\n"
 17091      6C696420 
 17091      73697A65 
GAS LISTING /tmp/ccLUVin9.s 			page 453


 17091      2025730A 
 17091      00
 17092              	.LC46:
 17093 0127 56616C69 		.string	"Validating... "
 17093      64617469 
 17093      6E672E2E 
 17093      2E2000
 17094              	.LC47:
 17095 0136 2E2E2E43 		.string	"...Checking size %ju ..."
 17095      6865636B 
 17095      696E6720 
 17095      73697A65 
 17095      20256A75 
 17096              	.LC48:
 17097 014f 2E626C6F 		.string	".blocksize %ju-"
 17097      636B7369 
 17097      7A652025 
 17097      6A752D00 
 17098              	.LC49:
 17099 015f 76616C69 		.string	"valid;"
 17099      643B00
 17100              	.LC50:
 17101 0166 2E2E2E56 		.string	"...Valid algorithm"
 17101      616C6964 
 17101      20616C67 
 17101      6F726974 
 17101      686D00
 17102              	.LC51:
 17103 0179 54756E69 		.string	"Tuning..."
 17103      6E672E2E 
 17103      2E00
 17104              	.LC52:
 17105 0183 2E283E29 		.string	".(>)"
 17105      00
 17106              		.section	.rodata.str1.8
 17107 0419 00000000 		.align 8
 17107      000000
 17108              	.LC53:
 17109 0420 626C6F63 		.string	"blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector %
 17109      6B73697A 
 17109      655F6269 
 17109      74732025 
 17109      31306A75 
 17110              		.section	.rodata.str1.1
 17111              	.LC54:
 17112 0188 2E2E2E2E 		.string	"...."
 17112      00
 17113              		.section	.rodata.str1.8
 17114 04a7 00       		.align 8
 17115              	.LC55:
 17116 04a8 256A7520 		.string	"%ju results. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju; best ve
 17116      72657375 
 17116      6C74732E 
 17116      20496E69 
 17116      74616C20 
 17117              		.section	.rodata.str1.1
 17118              	.LC56:
GAS LISTING /tmp/ccLUVin9.s 			page 454


 17119 018d 42657374 		.string	"Best options"
 17119      206F7074 
 17119      696F6E73 
 17119      00
 17120              	.LC57:
 17121 019a 28256A75 		.string	"(%ju) "
 17121      292000
 17122              	.LC58:
 17123 01a1 2E2E2E00 		.string	"..."
 17124              	.LC59:
 17125 01a5 2E426573 		.string	".Best result:"
 17125      74207265 
 17125      73756C74 
 17125      3A00
 17126              		.section	.rodata.str1.8
 17127 050f 00       		.align 8
 17128              	.LC60:
 17129 0510 42656E63 		.string	"Benchmarking... with blocksize %ju steps: %ju/%ju/%ju\n"
 17129      686D6172 
 17129      6B696E67 
 17129      2E2E2E20 
 17129      77697468 
 17130 0547 00       		.align 8
 17131              	.LC62:
 17132 0548 726F6769 		.string	"rogiervandam_extend;%ju;%f;1;algorithm=other,faithful=yes,bits=1\n"
 17132      65727661 
 17132      6E64616D 
 17132      5F657874 
 17132      656E643B 
 17133 058a 00000000 		.align 8
 17133      0000
 17134              	.LC63:
 17135 0590 50617373 		.string	"Passes - per 5 seconds: %f - per second %f\n"
 17135      6573202D 
 17135      20706572 
 17135      20352073 
 17135      65636F6E 
 17136              		.section	.rodata.str1.1
 17137              	.LC64:
 17138 01b3 53686F77 		.string	"Show result set:"
 17138      20726573 
 17138      756C7420 
 17138      7365743A 
 17138      00
 17139              		.section	.text.startup,"ax",@progbits
 17140              		.p2align 4
 17141              		.globl	main
 17143              	main:
 17144              	.LVL967:
 17145              	.LFB99:
1390:sieve_extend.c **** int main(int argc, char *argv[]) {
 17146              		.loc 1 1390 34 is_stmt 1 view -0
 17147              		.cfi_startproc
 17148              		.loc 1 1390 34 is_stmt 0 view .LVU5757
 17149 0000 F30F1EFA 		endbr64	
 17150 0004 4157     		push	r15	#
 17151              		.cfi_def_cfa_offset 16
GAS LISTING /tmp/ccLUVin9.s 			page 455


 17152              		.cfi_offset 15, -16
 17153 0006 4156     		push	r14	#
 17154              		.cfi_def_cfa_offset 24
 17155              		.cfi_offset 14, -24
 17156 0008 4155     		push	r13	#
 17157              		.cfi_def_cfa_offset 32
 17158              		.cfi_offset 13, -32
 17159 000a 4154     		push	r12	#
 17160              		.cfi_def_cfa_offset 40
 17161              		.cfi_offset 12, -40
 17162 000c 55       		push	rbp	#
 17163              		.cfi_def_cfa_offset 48
 17164              		.cfi_offset 6, -48
 17165 000d 53       		push	rbx	#
 17166              		.cfi_def_cfa_offset 56
 17167              		.cfi_offset 3, -56
 17168 000e 488DA424 		lea	rsp, -248[rsp]	#,
 17168      08FFFFFF 
 17169              		.cfi_def_cfa_offset 304
 17170              	# sieve_extend.c:1390: int main(int argc, char *argv[]) {
 17171              		.loc 1 1390 34 view .LVU5758
 17172 0016 64488B04 		mov	rax, QWORD PTR fs:40	# tmp571, MEM[(<address-space-1> long unsigned int *)40B]
 17172      25280000 
 17172      00
 17173 001f 48898424 		mov	QWORD PTR 232[rsp], rax	# D.7648, tmp571
 17173      E8000000 
 17174 0027 31C0     		xor	eax, eax	# tmp571
1391:sieve_extend.c ****     
1392:sieve_extend.c **** //     struct sieve_t* sieve = sieve_create(1000000);
1393:sieve_extend.c **** //     bitvector_t* bitarray = (bitvector_t*)sieve->bitarray;
1394:sieve_extend.c **** 
1395:sieve_extend.c **** //     int passes1 = benchmark(1, testshuffle_vector , sieve->bitarray, 500000);
1396:sieve_extend.c **** //     int passes2 = benchmark(1, testshuffle_vector2, sieve->bitarray, 500000);
1397:sieve_extend.c **** //     // int passes3 = benchmark(1, test3, sieve->bitarray, 500000);
1398:sieve_extend.c **** 
1399:sieve_extend.c **** //     // testshuffle(bitarray,1000000);
1400:sieve_extend.c **** // //    dump_bitarray((bitword_t *)bitarray,20);
1401:sieve_extend.c **** 
1402:sieve_extend.c **** //     sieve_delete(sieve);
1403:sieve_extend.c **** //     printf("Passes1:"); printfcomma2(passes1);printf("\n");
1404:sieve_extend.c **** //     printf("Passes2:"); printfcomma2(passes2);printf("\n");
1405:sieve_extend.c **** //     // printf("Passes3:"); printfcomma2(passes3);printf("\n");
1406:sieve_extend.c **** //     exit(0);
1407:sieve_extend.c ****     
1408:sieve_extend.c ****     
1409:sieve_extend.c ****     counter_t option_maxFactor  = default_sieve_limit;
 17175              		.loc 1 1409 5 is_stmt 1 view .LVU5759
 17176              	# sieve_extend.c:1409:     counter_t option_maxFactor  = default_sieve_limit;
 17177              		.loc 1 1409 15 is_stmt 0 view .LVU5760
 17178 0029 48C78424 		mov	QWORD PTR 176[rsp], 1000000	# option_maxFactor,
 17178      B0000000 
 17178      40420F00 
1410:sieve_extend.c ****     counter_t option_showMaxFactor = default_showMaxFactor;
 17179              		.loc 1 1410 5 is_stmt 1 view .LVU5761
 17180              	.LBB1045:
 17181              	# sieve_extend.c:1415:     for (int arg=1; arg < argc; arg++) {
1411:sieve_extend.c ****     int option_verboselevel = default_verbose_level;
GAS LISTING /tmp/ccLUVin9.s 			page 456


1412:sieve_extend.c ****     int option_check = default_check_level;
1413:sieve_extend.c ****     int option_tunelevel = default_tune_level;
1414:sieve_extend.c **** 
1415:sieve_extend.c ****     for (int arg=1; arg < argc; arg++) {
 17182              		.loc 1 1415 5 is_stmt 0 view .LVU5762
 17183 0035 83FF01   		cmp	edi, 1	# argc,
 17184              	.LBE1045:
 17185              	# sieve_extend.c:1410:     counter_t option_showMaxFactor = default_showMaxFactor;
1410:sieve_extend.c ****     counter_t option_showMaxFactor = default_showMaxFactor;
 17186              		.loc 1 1410 15 view .LVU5763
 17187 0038 48C78424 		mov	QWORD PTR 184[rsp], 0	# option_showMaxFactor,
 17187      B8000000 
 17187      00000000 
1411:sieve_extend.c ****     int option_verboselevel = default_verbose_level;
 17188              		.loc 1 1411 5 is_stmt 1 view .LVU5764
 17189              	# sieve_extend.c:1411:     int option_verboselevel = default_verbose_level;
1411:sieve_extend.c ****     int option_verboselevel = default_verbose_level;
 17190              		.loc 1 1411 9 is_stmt 0 view .LVU5765
 17191 0044 C78424A8 		mov	DWORD PTR 168[rsp], 2	# option_verboselevel,
 17191      00000002 
 17191      000000
1412:sieve_extend.c ****     int option_tunelevel = default_tune_level;
 17192              		.loc 1 1412 5 is_stmt 1 view .LVU5766
 17193              	.LVL968:
1413:sieve_extend.c **** 
 17194              		.loc 1 1413 5 view .LVU5767
 17195              	# sieve_extend.c:1413:     int option_tunelevel = default_tune_level;
1413:sieve_extend.c **** 
 17196              		.loc 1 1413 9 is_stmt 0 view .LVU5768
 17197 004f C78424AC 		mov	DWORD PTR 172[rsp], 1	# option_tunelevel,
 17197      00000001 
 17197      000000
 17198              		.loc 1 1415 5 is_stmt 1 view .LVU5769
 17199              	.LBB1070:
 17200              		.loc 1 1415 10 view .LVU5770
 17201              	.LVL969:
 17202              		.loc 1 1415 21 view .LVU5771
 17203              	# sieve_extend.c:1415:     for (int arg=1; arg < argc; arg++) {
 17204              		.loc 1 1415 5 is_stmt 0 view .LVU5772
 17205 005a 0F8E2C05 		jle	.L1400	#,
 17205      0000
 17206 0060 89FD     		mov	ebp, edi	# argc, tmp527
 17207 0062 4989F4   		mov	r12, rsi	# argv, tmp528
 17208              	# sieve_extend.c:1415:     for (int arg=1; arg < argc; arg++) {
 17209              		.loc 1 1415 14 view .LVU5773
 17210 0065 BB010000 		mov	ebx, 1	# arg,
 17210      00
 17211 006a 4C8D2D00 		lea	r13, .LC30[rip]	# tmp467,
 17211      000000
 17212              	# sieve_extend.c:1417:         else if (strcmp(argv[arg], "--verbose")==0) {
1416:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1417:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 17213              		.loc 1 1417 18 view .LVU5774
 17214 0071 4C8D3500 		lea	r14, .LC31[rip]	# tmp482,
 17214      000000
 17215 0078 EB66     		jmp	.L1383	#
 17216              	.LVL970:
GAS LISTING /tmp/ccLUVin9.s 			page 457


 17217 007a 660F1F44 		.p2align 4,,7
 17217      0000
 17218              		.p2align 3
 17219              	.L1519:
1418:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\n"); usage(argv[0]); }
 17220              		.loc 1 1418 13 is_stmt 1 view .LVU5775
 17221              	# sieve_extend.c:1418:             if (++arg >= argc) { fprintf(stderr, "No verbose level specified
 17222              		.loc 1 1418 16 is_stmt 0 view .LVU5776
 17223 0080 83C301   		add	ebx, 1	# arg,
 17224              	.LVL971:
 17225              		.loc 1 1418 16 view .LVU5777
 17226 0083 39DD     		cmp	ebp, ebx	# argc, arg
 17227 0085 0F8E2B0F 		jle	.L1517	#,
 17227      0000
1419:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option_verboselevel > 4) {
 17228              		.loc 1 1419 13 is_stmt 1 view .LVU5778
 17229              	# sieve_extend.c:1419:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option
 17230              		.loc 1 1419 28 is_stmt 0 view .LVU5779
 17231 008b 4D8D7C04 		lea	r15, 8[r12+rax]	# _16,
 17231      08
 17232              	# sieve_extend.c:1419:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option
 17233              		.loc 1 1419 17 view .LVU5780
 17234 0090 488D9424 		lea	rdx, 168[rsp]	# tmp303,
 17234      A8000000 
 17235 0098 498B3F   		mov	rdi, QWORD PTR [r15]	#, *_16
 17236 009b 31C0     		xor	eax, eax	#
 17237 009d 488D3500 		lea	rsi, .LC26[rip]	#,
 17237      000000
 17238 00a4 E8000000 		call	__isoc99_sscanf@PLT	#
 17238      00
 17239              	.LVL972:
 17240              	# sieve_extend.c:1419:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option
 17241              		.loc 1 1419 16 view .LVU5781
 17242 00a9 83F801   		cmp	eax, 1	# tmp529,
 17243 00ac 0F850C05 		jne	.L1389	#,
 17243      0000
 17244              	# sieve_extend.c:1419:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option
 17245              		.loc 1 1419 91 discriminator 1 view .LVU5782
 17246 00b2 8B9424A8 		mov	edx, DWORD PTR 168[rsp]	# option_verboselevel.16_19, option_verboselevel
 17246      000000
 17247              	# sieve_extend.c:1419:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option
 17248              		.loc 1 1419 68 discriminator 1 view .LVU5783
 17249 00b9 83FA04   		cmp	edx, 4	# option_verboselevel.16_19,
 17250 00bc 0F8FFC04 		jg	.L1389	#,
 17250      0000
1420:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid measurement time: %s\n", argv[arg]); usage(argv[0])
1421:sieve_extend.c ****             }
1422:sieve_extend.c ****             printf("Verbose level set to %d\n",option_verboselevel);
 17251              		.loc 1 1422 13 is_stmt 1 view .LVU5784
 17252              	.LVL973:
 17253              	.LBB1046:
 17254              	.LBI1046:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17255              		.loc 3 105 1 view .LVU5785
 17256              	.LBB1047:
 17257              		.loc 3 107 3 view .LVU5786
 17258              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
GAS LISTING /tmp/ccLUVin9.s 			page 458


 17259              		.loc 3 107 10 is_stmt 0 view .LVU5787
 17260 00c2 488D3500 		lea	rsi, .LC34[rip]	#,
 17260      000000
 17261 00c9 BF010000 		mov	edi, 1	#,
 17261      00
 17262 00ce 31C0     		xor	eax, eax	#
 17263 00d0 E8000000 		call	__printf_chk@PLT	#
 17263      00
 17264              	.LVL974:
 17265              	.L1391:
 17266              		.loc 3 107 10 view .LVU5788
 17267              	.LBE1047:
 17268              	.LBE1046:
1415:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 17269              		.loc 1 1415 33 is_stmt 1 discriminator 2 view .LVU5789
 17270              	# sieve_extend.c:1415:     for (int arg=1; arg < argc; arg++) {
1415:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 17271              		.loc 1 1415 36 is_stmt 0 discriminator 2 view .LVU5790
 17272 00d5 83C301   		add	ebx, 1	# arg,
 17273              	.LVL975:
1415:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 17274              		.loc 1 1415 21 is_stmt 1 discriminator 2 view .LVU5791
 17275              	# sieve_extend.c:1415:     for (int arg=1; arg < argc; arg++) {
1415:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 17276              		.loc 1 1415 5 is_stmt 0 discriminator 2 view .LVU5792
 17277 00d8 39DD     		cmp	ebp, ebx	# argc, arg
 17278 00da 0F8E0001 		jle	.L1518	#,
 17278      0000
 17279              	.LVL976:
 17280              	.L1383:
1416:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 17281              		.loc 1 1416 9 is_stmt 1 view .LVU5793
 17282              	# sieve_extend.c:1416:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1416:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 17283              		.loc 1 1416 24 is_stmt 0 view .LVU5794
 17284 00e0 4863C3   		movsx	rax, ebx	# arg, arg
 17285              	# sieve_extend.c:1416:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1416:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 17286              		.loc 1 1416 13 view .LVU5795
 17287 00e3 41B90700 		mov	r9d, 7	# tmp292,
 17287      0000
 17288              	# sieve_extend.c:1416:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1416:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 17289              		.loc 1 1416 24 view .LVU5796
 17290 00e9 48C1E003 		sal	rax, 3	# _2,
 17291              	# sieve_extend.c:1416:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1416:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 17292              		.loc 1 1416 13 view .LVU5797
 17293 00ed 4C89EF   		mov	rdi, r13	# tmp291, tmp467
 17294              	# sieve_extend.c:1416:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1416:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 17295              		.loc 1 1416 24 view .LVU5798
 17296 00f0 4D8D3C04 		lea	r15, [r12+rax]	# _3,
 17297              	# sieve_extend.c:1416:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1416:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 17298              		.loc 1 1416 13 view .LVU5799
 17299 00f4 4C89C9   		mov	rcx, r9	# tmp493, tmp292
GAS LISTING /tmp/ccLUVin9.s 			page 459


 17300 00f7 4D8B07   		mov	r8, QWORD PTR [r15]	# _4, *_3
 17301 00fa 4C89C6   		mov	rsi, r8	# _4, _4
 17302 00fd F3A6     		repz cmpsb
 17303 00ff 0F97C2   		seta	dl	#, tmp293
 17304 0102 80DA00   		sbb	dl, 0	# _5
 17305              	# sieve_extend.c:1416:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1416:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 17306              		.loc 1 1416 12 view .LVU5800
 17307 0105 84D2     		test	dl, dl	# _5
 17308 0107 0F84CE04 		je	.L1515	#,
 17308      0000
1417:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\n"); usage(argv[0]); }
 17309              		.loc 1 1417 14 is_stmt 1 view .LVU5801
 17310              	# sieve_extend.c:1417:         else if (strcmp(argv[arg], "--verbose")==0) {
1417:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\n"); usage(argv[0]); }
 17311              		.loc 1 1417 18 is_stmt 0 view .LVU5802
 17312 010d B90A0000 		mov	ecx, 10	# tmp298,
 17312      00
 17313 0112 4C89C6   		mov	rsi, r8	# _4, _4
 17314 0115 4C89F7   		mov	rdi, r14	# tmp297, tmp482
 17315 0118 F3A6     		repz cmpsb
 17316 011a 410F97C2 		seta	r10b	#, tmp299
 17317 011e 4180DA00 		sbb	r10b, 0	# _11
 17318              	# sieve_extend.c:1417:         else if (strcmp(argv[arg], "--verbose")==0) {
1417:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\n"); usage(argv[0]); }
 17319              		.loc 1 1417 17 view .LVU5803
 17320 0122 4584D2   		test	r10b, r10b	# _11
 17321 0125 0F8455FF 		je	.L1519	#,
 17321      FFFF
1423:sieve_extend.c ****         } 
1424:sieve_extend.c ****         else if (strcmp(argv[arg], "--check")==0) { option_check=1; }
 17322              		.loc 1 1424 14 is_stmt 1 view .LVU5804
 17323              	# sieve_extend.c:1424:         else if (strcmp(argv[arg], "--check")==0) { option_check=1; }
 17324              		.loc 1 1424 18 is_stmt 0 view .LVU5805
 17325 012b B9080000 		mov	ecx, 8	# tmp308,
 17325      00
 17326 0130 4C89C6   		mov	rsi, r8	# _4, _4
 17327 0133 488D3D00 		lea	rdi, .LC35[rip]	# tmp307,
 17327      000000
 17328 013a F3A6     		repz cmpsb
 17329 013c 410F97C3 		seta	r11b	#, tmp309
 17330 0140 4180DB00 		sbb	r11b, 0	# _23
 17331              	# sieve_extend.c:1424:         else if (strcmp(argv[arg], "--check")==0) { option_check=1; }
 17332              		.loc 1 1424 17 view .LVU5806
 17333 0144 4584DB   		test	r11b, r11b	# _23
 17334 0147 748C     		je	.L1391	#,
1425:sieve_extend.c ****         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
 17335              		.loc 1 1425 14 is_stmt 1 view .LVU5807
 17336              	# sieve_extend.c:1425:         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
 17337              		.loc 1 1425 18 is_stmt 0 view .LVU5808
 17338 0149 4C89C6   		mov	rsi, r8	# _4, _4
 17339 014c 488D3D00 		lea	rdi, .LC36[rip]	# tmp313,
 17339      000000
 17340 0153 4C89C9   		mov	rcx, r9	# tmp499, tmp292
 17341 0156 F3A6     		repz cmpsb
 17342 0158 0F97C2   		seta	dl	#, tmp315
 17343 015b 80DA00   		sbb	dl, 0	# _24
GAS LISTING /tmp/ccLUVin9.s 			page 460


 17344              	# sieve_extend.c:1425:         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
 17345              		.loc 1 1425 17 view .LVU5809
 17346 015e 84D2     		test	dl, dl	# _24
 17347 0160 0F855A01 		jne	.L1392	#,
 17347      0000
 17348              		.loc 1 1425 52 is_stmt 1 discriminator 1 view .LVU5810
 17349              	# sieve_extend.c:1425:         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
 17350              		.loc 1 1425 68 is_stmt 0 discriminator 1 view .LVU5811
 17351 0166 C78424AC 		mov	DWORD PTR 172[rsp], 0	# option_tunelevel,
 17351      00000000 
 17351      000000
1426:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No tune level specified\n"); usage(argv[0]); }
 17352              		.loc 1 1426 13 is_stmt 1 discriminator 1 view .LVU5812
 17353              	# sieve_extend.c:1426:             if (++arg >= argc) { fprintf(stderr, "No tune level specified\n"
 17354              		.loc 1 1426 16 is_stmt 0 discriminator 1 view .LVU5813
 17355 0171 83C301   		add	ebx, 1	# arg,
 17356              	.LVL977:
 17357              		.loc 1 1426 16 discriminator 1 view .LVU5814
 17358 0174 39DD     		cmp	ebp, ebx	# argc, arg
 17359 0176 0F8E7A0E 		jle	.L1520	#,
 17359      0000
1427:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tunelevel > 4) {
 17360              		.loc 1 1427 13 is_stmt 1 view .LVU5815
 17361              	# sieve_extend.c:1427:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tu
 17362              		.loc 1 1427 28 is_stmt 0 view .LVU5816
 17363 017c 4D8D7C04 		lea	r15, 8[r12+rax]	# _29,
 17363      08
 17364              	# sieve_extend.c:1427:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tu
 17365              		.loc 1 1427 17 view .LVU5817
 17366 0181 488D9424 		lea	rdx, 172[rsp]	# tmp319,
 17366      AC000000 
 17367 0189 498B3F   		mov	rdi, QWORD PTR [r15]	#, *_29
 17368 018c 31C0     		xor	eax, eax	#
 17369 018e 488D3500 		lea	rsi, .LC26[rip]	#,
 17369      000000
 17370 0195 E8000000 		call	__isoc99_sscanf@PLT	#
 17370      00
 17371              	.LVL978:
 17372              	# sieve_extend.c:1427:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tu
 17373              		.loc 1 1427 16 view .LVU5818
 17374 019a 83F801   		cmp	eax, 1	# tmp530,
 17375 019d 0F85350E 		jne	.L1394	#,
 17375      0000
 17376              	# sieve_extend.c:1427:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tu
 17377              		.loc 1 1427 85 discriminator 1 view .LVU5819
 17378 01a3 8B9424AC 		mov	edx, DWORD PTR 172[rsp]	# option_tunelevel.20_32, option_tunelevel
 17378      000000
 17379              	# sieve_extend.c:1427:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tu
 17380              		.loc 1 1427 65 discriminator 1 view .LVU5820
 17381 01aa 83FA04   		cmp	edx, 4	# option_tunelevel.20_32,
 17382 01ad 0F8F250E 		jg	.L1394	#,
 17382      0000
1428:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid tune level: %s\n", argv[arg]); usage(argv[0]);
1429:sieve_extend.c ****             }
1430:sieve_extend.c ****             printf("Tune level set to %d\n",option_tunelevel);
 17383              		.loc 1 1430 13 is_stmt 1 view .LVU5821
 17384              	.LVL979:
GAS LISTING /tmp/ccLUVin9.s 			page 461


 17385              	.LBB1048:
 17386              	.LBI1048:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17387              		.loc 3 105 1 view .LVU5822
 17388              	.LBB1049:
 17389              		.loc 3 107 3 view .LVU5823
 17390              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17391              		.loc 3 107 10 is_stmt 0 view .LVU5824
 17392 01b3 31C0     		xor	eax, eax	#
 17393 01b5 488D3500 		lea	rsi, .LC39[rip]	#,
 17393      000000
 17394 01bc BF010000 		mov	edi, 1	#,
 17394      00
 17395              	.LBE1049:
 17396              	.LBE1048:
 17397              	# sieve_extend.c:1415:     for (int arg=1; arg < argc; arg++) {
1415:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 17398              		.loc 1 1415 36 view .LVU5825
 17399 01c1 83C301   		add	ebx, 1	# arg,
 17400              	.LVL980:
 17401              	.LBB1051:
 17402              	.LBB1050:
 17403              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17404              		.loc 3 107 10 view .LVU5826
 17405 01c4 E8000000 		call	__printf_chk@PLT	#
 17405      00
 17406              	.LVL981:
 17407              		.loc 3 107 10 view .LVU5827
 17408              	.LBE1050:
 17409              	.LBE1051:
1415:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 17410              		.loc 1 1415 33 is_stmt 1 view .LVU5828
1415:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 17411              		.loc 1 1415 21 view .LVU5829
 17412              	# sieve_extend.c:1415:     for (int arg=1; arg < argc; arg++) {
1415:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 17413              		.loc 1 1415 5 is_stmt 0 view .LVU5830
 17414 01c9 39DD     		cmp	ebp, ebx	# argc, arg
 17415 01cb 0F8F0FFF 		jg	.L1383	#,
 17415      FFFF
 17416 01d1 66662E0F 		.p2align 4
 17416      1F840000 
 17416      0000000F 
 17416      1F4000
 17417              		.p2align 3
 17418              	.L1518:
1415:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 17419              		.loc 1 1415 5 view .LVU5831
 17420              	.LBE1070:
1431:sieve_extend.c ****         }
1432:sieve_extend.c ****         else if (strcmp(argv[arg], "--show")==0) { option_showMaxFactor=0;
1433:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
1434:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
1435:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
1436:sieve_extend.c ****             }
1437:sieve_extend.c ****             printf("Show maximum set to %ju\n",(uintmax_t)option_showMaxFactor);
1438:sieve_extend.c ****         }
GAS LISTING /tmp/ccLUVin9.s 			page 462


1439:sieve_extend.c ****         else if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_maxFactor) != 1) {
1440:sieve_extend.c ****             fprintf(stderr, "Invalid size %s\n",argv[arg]); usage(argv[0]); 
1441:sieve_extend.c ****             printf("Maximum set to %ju\n",(uintmax_t)option_maxFactor);
1442:sieve_extend.c ****         }
1443:sieve_extend.c ****     }
1444:sieve_extend.c **** 
1445:sieve_extend.c ****     if (option_runonce) { // used for stats and debugging
 17421              		.loc 1 1445 5 is_stmt 1 view .LVU5832
1446:sieve_extend.c ****         struct sieve_t* sieve = sieve_shake(option_maxFactor, default_blocksize);
1447:sieve_extend.c ****         printf("\nResult set:\n");
1448:sieve_extend.c ****         show_primes(sieve, option_showMaxFactor);
1449:sieve_extend.c ****         int valid = validatePrimeCount(sieve,3);
1450:sieve_extend.c ****         if (!valid) printf("The sieve is NOT valid\n");
1451:sieve_extend.c ****         else printf("The sieve is VALID\n");
1452:sieve_extend.c ****         sieve_delete(sieve);
1453:sieve_extend.c ****         exit(0);
1454:sieve_extend.c ****     }
1455:sieve_extend.c **** 
1456:sieve_extend.c ****     struct timespec start_time,end_time;
 17422              		.loc 1 1456 5 view .LVU5833
1457:sieve_extend.c **** 
1458:sieve_extend.c ****     if (option_verboselevel >=1) {
 17423              		.loc 1 1458 5 view .LVU5834
 17424              	# sieve_extend.c:1458:     if (option_verboselevel >=1) {
 17425              		.loc 1 1458 8 is_stmt 0 view .LVU5835
 17426 01e0 8BAC24A8 		mov	ebp, DWORD PTR 168[rsp]	#, option_verboselevel
 17426      000000
 17427              	.LVL982:
 17428              		.loc 1 1458 8 view .LVU5836
 17429 01e7 85ED     		test	ebp, ebp	#
 17430 01e9 0F8F9D03 		jg	.L1400	#,
 17430      0000
 17431              	.LVL983:
 17432              	.L1401:
1459:sieve_extend.c ****         #if __APPLE__
1460:sieve_extend.c ****             printf("Apple detected. Using arrays instead of pointers\n");
1461:sieve_extend.c ****         #else
1462:sieve_extend.c ****             printf("Using Pointers\n");
1463:sieve_extend.c ****         #endif
1464:sieve_extend.c ****     }
1465:sieve_extend.c ****         
1466:sieve_extend.c ****     if (option_check) {
1467:sieve_extend.c ****         // Count the number of primes and validate the result
1468:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Validating... ");
1469:sieve_extend.c ****         if (option_verboselevel >= 2) printf("\n");
 17433              		.loc 1 1469 9 is_stmt 1 view .LVU5837
 17434              	# sieve_extend.c:1469:         if (option_verboselevel >= 2) printf("\n");
 17435              		.loc 1 1469 12 is_stmt 0 view .LVU5838
 17436 01ef 83BC24A8 		cmp	DWORD PTR 168[rsp], 1	# option_verboselevel,
 17436      00000001 
 17437 01f7 7E0A     		jle	.L1402	#,
 17438              		.loc 1 1469 39 is_stmt 1 view .LVU5839
 17439              	.LVL984:
 17440              	.LBB1071:
 17441              	.LBI1071:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17442              		.loc 3 105 1 view .LVU5840
GAS LISTING /tmp/ccLUVin9.s 			page 463


 17443              	.LBB1072:
 17444              		.loc 3 107 3 view .LVU5841
 17445              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17446              		.loc 3 107 10 is_stmt 0 view .LVU5842
 17447 01f9 BF0A0000 		mov	edi, 10	#,
 17447      00
 17448 01fe E8000000 		call	putchar@PLT	#
 17448      00
 17449              	.LVL985:
 17450              	.L1402:
 17451              		.loc 3 107 10 view .LVU5843
 17452              	.LBE1072:
 17453              	.LBE1071:
 17454              	.LBB1073:
 17455              	# sieve_extend.c:1415:     for (int arg=1; arg < argc; arg++) {
1415:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 17456              		.loc 1 1415 14 view .LVU5844
 17457 0203 C7442428 		mov	DWORD PTR 40[rsp], 5	# %sfp,
 17457      05000000 
 17458 020b 41BD6400 		mov	r13d, 100	# sieveSize_check,
 17458      0000
 17459              	.LBE1073:
 17460              	.LBB1074:
 17461              	.LBB1075:
 17462              	.LBB1076:
 17463              	.LBB1077:
 17464              	.LBB1078:
 17465              	.LBB1079:
 17466              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17467              		.loc 3 107 10 view .LVU5845
 17468 0211 4C8D3500 		lea	r14, .LC48[rip]	# tmp481,
 17468      000000
 17469              	.L1409:
 17470              	.LVL986:
 17471              		.loc 3 107 10 view .LVU5846
 17472              	.LBE1079:
 17473              	.LBE1078:
 17474              	.LBE1077:
 17475              	.LBE1076:
1470:sieve_extend.c **** 
1471:sieve_extend.c ****         // validate algorithm - run one time for all sizes
1472:sieve_extend.c ****         for (counter_t sieveSize_check = 100; sieveSize_check <= 1000000; sieveSize_check *=10) {
1473:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 17476              		.loc 1 1473 13 is_stmt 1 view .LVU5847
 17477              	# sieve_extend.c:1473:             if (option_verboselevel >= 2) printf("...Checking size %ju ...",
 17478              		.loc 1 1473 37 is_stmt 0 view .LVU5848
 17479 0218 8B8424A8 		mov	eax, DWORD PTR 168[rsp]	# prephitmp_67, option_verboselevel
 17479      000000
 17480              	# sieve_extend.c:1473:             if (option_verboselevel >= 2) printf("...Checking size %ju ...",
 17481              		.loc 1 1473 16 view .LVU5849
 17482 021f 83F801   		cmp	eax, 1	# prephitmp_67,
 17483 0222 7E1D     		jle	.L1403	#,
 17484              		.loc 1 1473 43 is_stmt 1 view .LVU5850
 17485              	.LVL987:
 17486              	.LBB1095:
 17487              	.LBI1095:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
GAS LISTING /tmp/ccLUVin9.s 			page 464


 17488              		.loc 3 105 1 view .LVU5851
 17489              	.LBB1096:
 17490              		.loc 3 107 3 view .LVU5852
 17491              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17492              		.loc 3 107 10 is_stmt 0 view .LVU5853
 17493 0224 4C89EA   		mov	rdx, r13	#, sieveSize_check
 17494 0227 488D3500 		lea	rsi, .LC47[rip]	#,
 17494      000000
 17495 022e BF010000 		mov	edi, 1	#,
 17495      00
 17496 0233 31C0     		xor	eax, eax	#
 17497 0235 E8000000 		call	__printf_chk@PLT	#
 17497      00
 17498              	.LVL988:
 17499 023a 8B8424A8 		mov	eax, DWORD PTR 168[rsp]	# prephitmp_67, option_verboselevel
 17499      000000
 17500              	.LVL989:
 17501              	.L1403:
 17502              		.loc 3 107 10 view .LVU5854
 17503              	.LBE1096:
 17504              	.LBE1095:
 17505              	.LBE1075:
 17506              	.LBE1074:
 17507              	.LBB1105:
 17508              	# sieve_extend.c:1415:     for (int arg=1; arg < argc; arg++) {
1415:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 17509              		.loc 1 1415 14 view .LVU5855
 17510 0241 41BC0500 		mov	r12d, 5	# ivtmp_69,
 17510      0000
 17511 0247 BD000400 		mov	ebp, 1024	# blocksize_bits,
 17511      00
 17512 024c EB56     		jmp	.L1407	#
 17513              	.LVL990:
 17514 024e 6690     		.p2align 4,,7
 17515              		.p2align 3
 17516              	.L1404:
1415:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 17517              		.loc 1 1415 14 view .LVU5856
 17518              	.LBE1105:
 17519              	.LBB1106:
 17520              	.LBB1102:
 17521              	.LBB1097:
 17522              	.LBB1090:
1474:sieve_extend.c ****             struct sieve_t *sieve_check;
1475:sieve_extend.c ****             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; blocksize_bits *= 2) {
1476:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
1477:sieve_extend.c ****                 sieve_check = sieve_shake(sieveSize_check, blocksize_bits);
 17523              		.loc 1 1477 17 is_stmt 1 view .LVU5857
 17524              	# sieve_extend.c:1477:                 sieve_check = sieve_shake(sieveSize_check, blocksize_bits);
 17525              		.loc 1 1477 31 is_stmt 0 view .LVU5858
 17526 0250 4889EE   		mov	rsi, rbp	#, blocksize_bits
 17527 0253 4C89EF   		mov	rdi, r13	#, sieveSize_check
 17528 0256 E8000000 		call	sieve_shake	#
 17528      00
 17529              	.LVL991:
 17530              	# sieve_extend.c:1478:                 int valid = validatePrimeCount(sieve_check,option_verboselev
1478:sieve_extend.c ****                 int valid = validatePrimeCount(sieve_check,option_verboselevel);
GAS LISTING /tmp/ccLUVin9.s 			page 465


 17531              		.loc 1 1478 29 view .LVU5859
 17532 025b 8BB424A8 		mov	esi, DWORD PTR 168[rsp]	#, option_verboselevel
 17532      000000
 17533              	# sieve_extend.c:1477:                 sieve_check = sieve_shake(sieveSize_check, blocksize_bits);
1477:sieve_extend.c ****                 int valid = validatePrimeCount(sieve_check,option_verboselevel);
 17534              		.loc 1 1477 31 view .LVU5860
 17535 0262 4989C7   		mov	r15, rax	# sieve_check, tmp533
 17536              	.LVL992:
 17537              		.loc 1 1478 17 is_stmt 1 view .LVU5861
 17538              	# sieve_extend.c:1478:                 int valid = validatePrimeCount(sieve_check,option_verboselev
 17539              		.loc 1 1478 29 is_stmt 0 view .LVU5862
 17540 0265 4889C7   		mov	rdi, rax	#, sieve_check
 17541 0268 E8000000 		call	validatePrimeCount	#
 17541      00
 17542              	.LVL993:
 17543              	.LBB1081:
 17544              	.LBB1082:
 17545              	# sieve_extend.c:116:     free(sieve->bitarray);
 116:sieve_extend.c ****     free(sieve);
 17546              		.loc 1 116 5 view .LVU5863
 17547 026d 498B3F   		mov	rdi, QWORD PTR [r15]	#, sieve_check_130->bitarray
 17548              	.LBE1082:
 17549              	.LBE1081:
 17550              	# sieve_extend.c:1478:                 int valid = validatePrimeCount(sieve_check,option_verboselev
 17551              		.loc 1 1478 29 view .LVU5864
 17552 0270 89C3     		mov	ebx, eax	# valid, tmp534
 17553              	.LVL994:
1479:sieve_extend.c ****                 sieve_delete(sieve_check);
 17554              		.loc 1 1479 17 is_stmt 1 view .LVU5865
 17555              	.LBB1084:
 17556              	.LBI1081:
 115:sieve_extend.c ****     free(sieve->bitarray);
 17557              		.loc 1 115 13 view .LVU5866
 17558              	.LBB1083:
 116:sieve_extend.c ****     free(sieve);
 17559              		.loc 1 116 5 view .LVU5867
 17560 0272 E8000000 		call	free@PLT	#
 17560      00
 17561              	.LVL995:
 117:sieve_extend.c **** }
 17562              		.loc 1 117 5 view .LVU5868
 17563 0277 4C89FF   		mov	rdi, r15	#, sieve_check
 17564 027a E8000000 		call	free@PLT	#
 17564      00
 17565              	.LVL996:
 117:sieve_extend.c **** }
 17566              		.loc 1 117 5 is_stmt 0 view .LVU5869
 17567              	.LBE1083:
 17568              	.LBE1084:
1480:sieve_extend.c ****                 if (!valid) return 0; else if (option_verboselevel >= 3) printf("valid;");
 17569              		.loc 1 1480 17 is_stmt 1 view .LVU5870
 17570              	# sieve_extend.c:1480:                 if (!valid) return 0; else if (option_verboselevel >= 3) pri
 17571              		.loc 1 1480 20 is_stmt 0 view .LVU5871
 17572 027f 85DB     		test	ebx, ebx	# valid
 17573 0281 0F84D902 		je	.L1445	#,
 17573      0000
 17574              		.loc 1 1480 44 is_stmt 1 discriminator 2 view .LVU5872
GAS LISTING /tmp/ccLUVin9.s 			page 466


 17575              	# sieve_extend.c:1480:                 if (!valid) return 0; else if (option_verboselevel >= 3) pri
 17576              		.loc 1 1480 68 is_stmt 0 discriminator 2 view .LVU5873
 17577 0287 8B8424A8 		mov	eax, DWORD PTR 168[rsp]	# prephitmp_67, option_verboselevel
 17577      000000
 17578              	# sieve_extend.c:1480:                 if (!valid) return 0; else if (option_verboselevel >= 3) pri
 17579              		.loc 1 1480 47 discriminator 2 view .LVU5874
 17580 028e 83F802   		cmp	eax, 2	# prephitmp_67,
 17581 0291 0F8FE900 		jg	.L1521	#,
 17581      0000
 17582              	.LBE1090:
1475:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 17583              		.loc 1 1475 75 is_stmt 1 discriminator 2 view .LVU5875
 17584              	# sieve_extend.c:1475:             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; bl
1475:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 17585              		.loc 1 1475 90 is_stmt 0 discriminator 2 view .LVU5876
 17586 0297 4801ED   		add	rbp, rbp	# blocksize_bits
 17587              	.LVL997:
1475:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 17588              		.loc 1 1475 49 is_stmt 1 discriminator 2 view .LVU5877
 17589              	# sieve_extend.c:1475:             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; bl
1475:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 17590              		.loc 1 1475 13 is_stmt 0 discriminator 2 view .LVU5878
 17591 029a 4183EC01 		sub	r12d, 1	# ivtmp_69,
 17592 029e 0F840301 		je	.L1522	#,
 17592      0000
 17593              	.LVL998:
 17594              	.L1407:
 17595              	.LBB1091:
1476:sieve_extend.c ****                 sieve_check = sieve_shake(sieveSize_check, blocksize_bits);
 17596              		.loc 1 1476 17 is_stmt 1 view .LVU5879
 17597              	# sieve_extend.c:1476:                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uint
1476:sieve_extend.c ****                 sieve_check = sieve_shake(sieveSize_check, blocksize_bits);
 17598              		.loc 1 1476 20 is_stmt 0 view .LVU5880
 17599 02a4 83F802   		cmp	eax, 2	# prephitmp_67,
 17600 02a7 7EA7     		jle	.L1404	#,
1476:sieve_extend.c ****                 sieve_check = sieve_shake(sieveSize_check, blocksize_bits);
 17601              		.loc 1 1476 47 is_stmt 1 view .LVU5881
 17602              	.LVL999:
 17603              	.LBB1085:
 17604              	.LBI1078:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17605              		.loc 3 105 1 view .LVU5882
 17606              	.LBB1080:
 17607              		.loc 3 107 3 view .LVU5883
 17608              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17609              		.loc 3 107 10 is_stmt 0 view .LVU5884
 17610 02a9 4889EA   		mov	rdx, rbp	#, blocksize_bits
 17611 02ac 4C89F6   		mov	rsi, r14	#, tmp481
 17612 02af BF010000 		mov	edi, 1	#,
 17612      00
 17613 02b4 31C0     		xor	eax, eax	#
 17614 02b6 E8000000 		call	__printf_chk@PLT	#
 17614      00
 17615              	.LVL1000:
 17616 02bb EB93     		jmp	.L1404	#
 17617              	.LVL1001:
 17618 02bd 0F1F00   		.p2align 4,,7
GAS LISTING /tmp/ccLUVin9.s 			page 467


 17619              		.p2align 3
 17620              	.L1392:
 17621              		.loc 3 107 10 view .LVU5885
 17622              	.LBE1080:
 17623              	.LBE1085:
 17624              	.LBE1091:
 17625              	.LBE1097:
 17626              	.LBE1102:
 17627              	.LBE1106:
 17628              	.LBB1107:
1432:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 17629              		.loc 1 1432 14 is_stmt 1 view .LVU5886
 17630              	# sieve_extend.c:1432:         else if (strcmp(argv[arg], "--show")==0) { option_showMaxFactor=0;
1432:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 17631              		.loc 1 1432 18 is_stmt 0 view .LVU5887
 17632 02c0 4C89C9   		mov	rcx, r9	# tmp292, tmp292
 17633 02c3 4C89C6   		mov	rsi, r8	# _4, _4
 17634 02c6 488D3D00 		lea	rdi, .LC40[rip]	# tmp323,
 17634      000000
 17635 02cd F3A6     		repz cmpsb
 17636 02cf 410F97C1 		seta	r9b	#, tmp325
 17637 02d3 4180D900 		sbb	r9b, 0	# _36
 17638              	# sieve_extend.c:1432:         else if (strcmp(argv[arg], "--show")==0) { option_showMaxFactor=0;
1432:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 17639              		.loc 1 1432 17 view .LVU5888
 17640 02d7 4584C9   		test	r9b, r9b	# _36
 17641 02da 756C     		jne	.L1396	#,
1432:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 17642              		.loc 1 1432 52 is_stmt 1 discriminator 1 view .LVU5889
 17643              	# sieve_extend.c:1432:         else if (strcmp(argv[arg], "--show")==0) { option_showMaxFactor=0;
1432:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 17644              		.loc 1 1432 72 is_stmt 0 discriminator 1 view .LVU5890
 17645 02dc 48C78424 		mov	QWORD PTR 184[rsp], 0	# option_showMaxFactor,
 17645      B8000000 
 17645      00000000 
1433:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 17646              		.loc 1 1433 13 is_stmt 1 discriminator 1 view .LVU5891
 17647              	# sieve_extend.c:1433:             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\
1433:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 17648              		.loc 1 1433 16 is_stmt 0 discriminator 1 view .LVU5892
 17649 02e8 83C301   		add	ebx, 1	# arg,
 17650              	.LVL1002:
1433:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 17651              		.loc 1 1433 16 discriminator 1 view .LVU5893
 17652 02eb 39DD     		cmp	ebp, ebx	# argc, arg
 17653 02ed 0F8E2E0D 		jle	.L1523	#,
 17653      0000
1434:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 17654              		.loc 1 1434 13 is_stmt 1 view .LVU5894
 17655              	# sieve_extend.c:1434:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) 
1434:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 17656              		.loc 1 1434 28 is_stmt 0 view .LVU5895
 17657 02f3 4D8D7C04 		lea	r15, 8[r12+rax]	# _41,
 17657      08
 17658              	# sieve_extend.c:1434:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) 
1434:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 17659              		.loc 1 1434 17 view .LVU5896
GAS LISTING /tmp/ccLUVin9.s 			page 468


 17660 02f8 488D9424 		lea	rdx, 184[rsp]	# tmp329,
 17660      B8000000 
 17661 0300 498B3F   		mov	rdi, QWORD PTR [r15]	#, *_41
 17662 0303 31C0     		xor	eax, eax	#
 17663 0305 488D3500 		lea	rsi, .LC42[rip]	#,
 17663      000000
 17664 030c E8000000 		call	__isoc99_sscanf@PLT	#
 17664      00
 17665              	.LVL1003:
 17666              	# sieve_extend.c:1434:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) 
1434:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 17667              		.loc 1 1434 16 view .LVU5897
 17668 0311 83F801   		cmp	eax, 1	# tmp531,
 17669 0314 0F85CD0C 		jne	.L1398	#,
 17669      0000
 17670              	# sieve_extend.c:1434:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) 
1434:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 17671              		.loc 1 1434 106 discriminator 1 view .LVU5898
 17672 031a 488B9424 		mov	rdx, QWORD PTR 184[rsp]	# option_showMaxFactor.24_44, option_showMaxFactor
 17672      B8000000 
 17673              	# sieve_extend.c:1434:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) 
1434:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 17674              		.loc 1 1434 82 discriminator 1 view .LVU5899
 17675 0322 483B9424 		cmp	rdx, QWORD PTR 176[rsp]	# option_showMaxFactor.24_44, option_maxFactor
 17675      B0000000 
 17676 032a 0F87B70C 		ja	.L1398	#,
 17676      0000
1437:sieve_extend.c ****         }
 17677              		.loc 1 1437 13 is_stmt 1 view .LVU5900
 17678              	.LVL1004:
 17679              	.LBB1052:
 17680              	.LBI1052:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17681              		.loc 3 105 1 view .LVU5901
 17682              	.LBB1053:
 17683              		.loc 3 107 3 view .LVU5902
 17684              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17685              		.loc 3 107 10 is_stmt 0 view .LVU5903
 17686 0330 488D3500 		lea	rsi, .LC44[rip]	#,
 17686      000000
 17687 0337 BF010000 		mov	edi, 1	#,
 17687      00
 17688 033c 31C0     		xor	eax, eax	#
 17689 033e E8000000 		call	__printf_chk@PLT	#
 17689      00
 17690              	.LVL1005:
 17691 0343 E98DFDFF 		jmp	.L1391	#
 17691      FF
 17692              	.LVL1006:
 17693              		.p2align 4,,7
 17694              		.p2align 3
 17695              	.L1396:
 17696              		.loc 3 107 10 view .LVU5904
 17697              	.LBE1053:
 17698              	.LBE1052:
1439:sieve_extend.c ****             fprintf(stderr, "Invalid size %s\n",argv[arg]); usage(argv[0]); 
 17699              		.loc 1 1439 14 is_stmt 1 view .LVU5905
GAS LISTING /tmp/ccLUVin9.s 			page 469


 17700              	# sieve_extend.c:1439:         else if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_maxFactor) != 
1439:sieve_extend.c ****             fprintf(stderr, "Invalid size %s\n",argv[arg]); usage(argv[0]); 
 17701              		.loc 1 1439 18 is_stmt 0 view .LVU5906
 17702 0348 31C0     		xor	eax, eax	#
 17703 034a 488D9424 		lea	rdx, 176[rsp]	# tmp331,
 17703      B0000000 
 17704 0352 488D3500 		lea	rsi, .LC42[rip]	#,
 17704      000000
 17705 0359 4C89C7   		mov	rdi, r8	#, _4
 17706 035c E8000000 		call	__isoc99_sscanf@PLT	#
 17706      00
 17707              	.LVL1007:
 17708              	# sieve_extend.c:1439:         else if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_maxFactor) != 
1439:sieve_extend.c ****             fprintf(stderr, "Invalid size %s\n",argv[arg]); usage(argv[0]); 
 17709              		.loc 1 1439 17 view .LVU5907
 17710 0361 83F801   		cmp	eax, 1	# tmp532,
 17711 0364 0F846BFD 		je	.L1391	#,
 17711      FFFF
1440:sieve_extend.c ****             printf("Maximum set to %ju\n",(uintmax_t)option_maxFactor);
 17712              		.loc 1 1440 13 is_stmt 1 view .LVU5908
 17713              	.LVL1008:
 17714              	.LBB1054:
 17715              	.LBI1054:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17716              		.loc 3 98 1 view .LVU5909
 17717              	.LBB1055:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17718              		.loc 3 100 3 view .LVU5910
 17719              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17720              		.loc 3 100 10 is_stmt 0 view .LVU5911
 17721 036a 498B0F   		mov	rcx, QWORD PTR [r15]	#, *_3
 17722 036d 488D1500 		lea	rdx, .LC45[rip]	#,
 17722      000000
 17723 0374 E94F0200 		jmp	.L1514	#
 17723      00
 17724              	.LVL1009:
 17725 0379 0F1F8000 		.p2align 4,,7
 17725      000000
 17726              		.p2align 3
 17727              	.L1521:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17728              		.loc 3 100 10 view .LVU5912
 17729              	.LBE1055:
 17730              	.LBE1054:
 17731              	.LBE1107:
 17732              	.LBB1108:
 17733              	.LBB1103:
 17734              	.LBB1098:
 17735              	.LBB1092:
 17736              		.loc 1 1480 74 is_stmt 1 view .LVU5913
 17737              	.LBB1086:
 17738              	.LBI1086:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17739              		.loc 3 105 1 view .LVU5914
 17740              	.LBB1087:
 17741              		.loc 3 107 3 view .LVU5915
GAS LISTING /tmp/ccLUVin9.s 			page 470


 17742              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17743              		.loc 3 107 10 is_stmt 0 view .LVU5916
 17744 0380 31C0     		xor	eax, eax	#
 17745 0382 488D3500 		lea	rsi, .LC49[rip]	#,
 17745      000000
 17746 0389 BF010000 		mov	edi, 1	#,
 17746      00
 17747              	.LBE1087:
 17748              	.LBE1086:
 17749              	.LBE1092:
 17750              	# sieve_extend.c:1475:             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; bl
1475:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 17751              		.loc 1 1475 90 view .LVU5917
 17752 038e 4801ED   		add	rbp, rbp	# blocksize_bits
 17753              	.LVL1010:
 17754              	.LBB1093:
 17755              	.LBB1089:
 17756              	.LBB1088:
 17757              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17758              		.loc 3 107 10 view .LVU5918
 17759 0391 E8000000 		call	__printf_chk@PLT	#
 17759      00
 17760              	.LVL1011:
 17761 0396 8B8424A8 		mov	eax, DWORD PTR 168[rsp]	# prephitmp_67, option_verboselevel
 17761      000000
 17762              	.LVL1012:
 17763              		.loc 3 107 10 view .LVU5919
 17764              	.LBE1088:
 17765              	.LBE1089:
 17766              	.LBE1093:
1475:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 17767              		.loc 1 1475 75 is_stmt 1 view .LVU5920
1475:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 17768              		.loc 1 1475 49 view .LVU5921
 17769              	# sieve_extend.c:1475:             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; bl
1475:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 17770              		.loc 1 1475 13 is_stmt 0 view .LVU5922
 17771 039d 4183EC01 		sub	r12d, 1	# ivtmp_69,
 17772 03a1 0F85FDFE 		jne	.L1407	#,
 17772      FFFF
 17773              	.L1522:
1475:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 17774              		.loc 1 1475 13 view .LVU5923
 17775              	.LBE1098:
1481:sieve_extend.c ****             }
1482:sieve_extend.c ****             if (option_verboselevel >= 2) printf("\n");
 17776              		.loc 1 1482 13 is_stmt 1 view .LVU5924
 17777              	# sieve_extend.c:1482:             if (option_verboselevel >= 2) printf("\n");
 17778              		.loc 1 1482 16 is_stmt 0 view .LVU5925
 17779 03a7 83F801   		cmp	eax, 1	# prephitmp_67,
 17780 03aa 7E0A     		jle	.L1408	#,
 17781              		.loc 1 1482 43 is_stmt 1 view .LVU5926
 17782              	.LVL1013:
 17783              	.LBB1099:
 17784              	.LBI1099:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17785              		.loc 3 105 1 view .LVU5927
GAS LISTING /tmp/ccLUVin9.s 			page 471


 17786              	.LBB1100:
 17787              		.loc 3 107 3 view .LVU5928
 17788              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17789              		.loc 3 107 10 is_stmt 0 view .LVU5929
 17790 03ac BF0A0000 		mov	edi, 10	#,
 17790      00
 17791 03b1 E8000000 		call	putchar@PLT	#
 17791      00
 17792              	.LVL1014:
 17793              	.L1408:
 17794              		.loc 3 107 10 view .LVU5930
 17795              	.LBE1100:
 17796              	.LBE1099:
 17797              	.LBE1103:
1472:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 17798              		.loc 1 1472 75 is_stmt 1 discriminator 2 view .LVU5931
 17799              	# sieve_extend.c:1472:         for (counter_t sieveSize_check = 100; sieveSize_check <= 1000000; si
1472:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 17800              		.loc 1 1472 91 is_stmt 0 discriminator 2 view .LVU5932
 17801 03b6 4F8D6CAD 		lea	r13, 0[r13+r13*4]	# tmp337,
 17801      00
 17802              	.LVL1015:
1472:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 17803              		.loc 1 1472 91 discriminator 2 view .LVU5933
 17804 03bb 4D01ED   		add	r13, r13	# sieveSize_check
 17805              	.LVL1016:
1472:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 17806              		.loc 1 1472 47 is_stmt 1 discriminator 2 view .LVU5934
 17807              	# sieve_extend.c:1472:         for (counter_t sieveSize_check = 100; sieveSize_check <= 1000000; si
1472:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 17808              		.loc 1 1472 9 is_stmt 0 discriminator 2 view .LVU5935
 17809 03be 836C2428 		sub	DWORD PTR 40[rsp], 1	# %sfp,
 17809      01
 17810 03c3 0F854FFE 		jne	.L1409	#,
 17810      FFFF
 17811              	.LBE1108:
1483:sieve_extend.c ****         }
1484:sieve_extend.c ****         if (option_verboselevel >= 1) printf("...Valid algorithm\n");
 17812              		.loc 1 1484 9 is_stmt 1 view .LVU5936
 17813              	# sieve_extend.c:1484:         if (option_verboselevel >= 1) printf("...Valid algorithm\n");
 17814              		.loc 1 1484 12 is_stmt 0 view .LVU5937
 17815 03c9 83BC24A8 		cmp	DWORD PTR 168[rsp], 0	# option_verboselevel,
 17815      00000000 
 17816 03d1 0F8FCC09 		jg	.L1524	#,
 17816      0000
1485:sieve_extend.c ****     }
1486:sieve_extend.c ****     
1487:sieve_extend.c ****     counter_t best_blocksize_bits = default_blocksize;
 17817              		.loc 1 1487 5 is_stmt 1 view .LVU5938
 17818              	.LVL1017:
1488:sieve_extend.c ****     if (option_tunelevel) {
 17819              		.loc 1 1488 5 view .LVU5939
 17820              	# sieve_extend.c:1488:     if (option_tunelevel) {
 17821              		.loc 1 1488 9 is_stmt 0 view .LVU5940
 17822 03d7 448B8424 		mov	r8d, DWORD PTR 172[rsp]	# option_tunelevel.41_405, option_tunelevel
 17822      AC000000 
 17823              	# sieve_extend.c:1487:     counter_t best_blocksize_bits = default_blocksize;
GAS LISTING /tmp/ccLUVin9.s 			page 472


1487:sieve_extend.c ****     if (option_tunelevel) {
 17824              		.loc 1 1487 15 view .LVU5941
 17825 03df 41BC00FC 		mov	r12d, 261120	# best_result$blocksize_bits,
 17825      0300
 17826              	# sieve_extend.c:1488:     if (option_tunelevel) {
 17827              		.loc 1 1488 8 view .LVU5942
 17828 03e5 4585C0   		test	r8d, r8d	# option_tunelevel.41_405
 17829 03e8 0F85B802 		jne	.L1525	#,
 17829      0000
 17830              	.LVL1018:
 17831              	.L1438:
 17832              	.LBB1109:
1489:sieve_extend.c ****         tuning_result_type tuning_result = tune(option_tunelevel, option_maxFactor, option_verbosel
1490:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
1491:sieve_extend.c ****         global_MEDIUMSTEP_FASTER = tuning_result.mediumstep_faster;
1492:sieve_extend.c ****         global_VECTORSTEP_FASTER = tuning_result.vectorstep_faster;
1493:sieve_extend.c ****         best_blocksize_bits = tuning_result.blocksize_bits;
1494:sieve_extend.c ****     }
1495:sieve_extend.c **** 
1496:sieve_extend.c ****     double max_time = default_sieve_duration;
1497:sieve_extend.c ****     if (best_blocksize_bits > 0) {
1498:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
1499:sieve_extend.c ****         counter_t passes = 0;
 17833              		.loc 1 1499 9 is_stmt 1 view .LVU5943
1500:sieve_extend.c ****         counter_t blocksize_bits = best_blocksize_bits;
 17834              		.loc 1 1500 9 view .LVU5944
1501:sieve_extend.c ****         double elapsed_time = 0;
 17835              		.loc 1 1501 9 view .LVU5945
1502:sieve_extend.c ****         struct sieve_t *sieve;
 17836              		.loc 1 1502 9 view .LVU5946
1503:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&start_time);
 17837              		.loc 1 1503 9 view .LVU5947
 17838 03ee 488DB424 		lea	rsi, 192[rsp]	# tmp440,
 17838      C0000000 
 17839 03f6 BF010000 		mov	edi, 1	#,
 17839      00
 17840 03fb E8000000 		call	clock_gettime@PLT	#
 17840      00
 17841              	.LVL1019:
1504:sieve_extend.c ****         while (elapsed_time <= max_time) {
 17842              		.loc 1 1504 9 view .LVU5948
 17843              		.loc 1 1504 15 view .LVU5949
 17844              	# sieve_extend.c:1499:         counter_t passes = 0;
1499:sieve_extend.c ****         counter_t blocksize_bits = best_blocksize_bits;
 17845              		.loc 1 1499 19 is_stmt 0 view .LVU5950
 17846 0400 4531FF   		xor	r15d, r15d	# passes
 17847 0403 4C8DAC24 		lea	r13, 208[rsp]	# tmp464,
 17847      D0000000 
 17848              	.LVL1020:
 17849              	.L1439:
1505:sieve_extend.c ****             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksize_bits);
 17850              		.loc 1 1505 13 is_stmt 1 view .LVU5951
 17851              	# sieve_extend.c:1505:             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksiz
 17852              		.loc 1 1505 21 is_stmt 0 view .LVU5952
 17853 040b 488BBC24 		mov	rdi, QWORD PTR 176[rsp]	#, option_maxFactor
 17853      B0000000 
 17854 0413 4C89E6   		mov	rsi, r12	#, best_result$blocksize_bits
GAS LISTING /tmp/ccLUVin9.s 			page 473


 17855              	# sieve_extend.c:1507:             passes++;
1506:sieve_extend.c ****             sieve_delete(sieve);
1507:sieve_extend.c ****             passes++;
 17856              		.loc 1 1507 19 view .LVU5953
 17857 0416 4983C701 		add	r15, 1	# passes,
 17858              	# sieve_extend.c:1505:             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksiz
1505:sieve_extend.c ****             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksize_bits);
 17859              		.loc 1 1505 21 view .LVU5954
 17860 041a E8000000 		call	sieve_shake	#
 17860      00
 17861              	.LVL1021:
 17862              	.LBB1110:
 17863              	.LBB1111:
 17864              	# sieve_extend.c:116:     free(sieve->bitarray);
 116:sieve_extend.c ****     free(sieve);
 17865              		.loc 1 116 5 view .LVU5955
 17866 041f 488B38   		mov	rdi, QWORD PTR [rax]	#, sieve_148->bitarray
 17867              	.LBE1111:
 17868              	.LBE1110:
 17869              	# sieve_extend.c:1505:             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksiz
1505:sieve_extend.c ****             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksize_bits);
 17870              		.loc 1 1505 21 view .LVU5956
 17871 0422 4989C6   		mov	r14, rax	# sieve, tmp536
 17872              	.LVL1022:
1506:sieve_extend.c ****             sieve_delete(sieve);
 17873              		.loc 1 1506 13 is_stmt 1 view .LVU5957
 17874              	.LBB1115:
 17875              	.LBI1110:
 115:sieve_extend.c ****     free(sieve->bitarray);
 17876              		.loc 1 115 13 view .LVU5958
 17877              	.LBB1112:
 116:sieve_extend.c ****     free(sieve);
 17878              		.loc 1 116 5 view .LVU5959
 17879 0425 E8000000 		call	free@PLT	#
 17879      00
 17880              	.LVL1023:
 117:sieve_extend.c **** }
 17881              		.loc 1 117 5 view .LVU5960
 17882 042a 4C89F7   		mov	rdi, r14	#, sieve
 17883 042d E8000000 		call	free@PLT	#
 17883      00
 17884              	.LVL1024:
 117:sieve_extend.c **** }
 17885              		.loc 1 117 5 is_stmt 0 view .LVU5961
 17886              	.LBE1112:
 17887              	.LBE1115:
 17888              		.loc 1 1507 13 is_stmt 1 view .LVU5962
1508:sieve_extend.c ****             clock_gettime(CLOCK_MONOTONIC,&end_time);
 17889              		.loc 1 1508 13 view .LVU5963
 17890 0432 4C89EE   		mov	rsi, r13	#, tmp464
 17891 0435 BF010000 		mov	edi, 1	#,
 17891      00
 17892 043a E8000000 		call	clock_gettime@PLT	#
 17892      00
 17893              	.LVL1025:
1509:sieve_extend.c ****             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time
 17894              		.loc 1 1509 13 view .LVU5964
GAS LISTING /tmp/ccLUVin9.s 			page 474


 17895              	# sieve_extend.c:1509:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 17896              		.loc 1 1509 62 is_stmt 0 view .LVU5965
 17897 043f C4E1D32A 		vcvtsi2sd	xmm5, xmm5, QWORD PTR 216[rsp]	# tmp443, end_time.tv_nsec
 17897      AC24D800 
 17897      0000
 17898              	# sieve_extend.c:1509:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 17899              		.loc 1 1509 68 view .LVU5966
 17900 0449 C4E1EB2A 		vcvtsi2sd	xmm2, xmm2, QWORD PTR 192[rsp]	# tmp444, start_time.tv_sec
 17900      9424C000 
 17900      0000
 17901              	# sieve_extend.c:1509:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 17902              		.loc 1 1509 108 view .LVU5967
 17903 0453 C461BB2A 		vcvtsi2sd	xmm8, xmm8, QWORD PTR 200[rsp]	# tmp446, start_time.tv_nsec
 17903      8424C800 
 17903      0000
 17904              	# sieve_extend.c:1509:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 17905              		.loc 1 1509 44 view .LVU5968
 17906 045d C461B32A 		vcvtsi2sd	xmm9, xmm9, QWORD PTR 208[rsp]	# tmp447, end_time.tv_sec
 17906      8C24D000 
 17906      0000
 17907              	# sieve_extend.c:1504:         while (elapsed_time <= max_time) {
1504:sieve_extend.c ****             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksize_bits);
 17908              		.loc 1 1504 15 view .LVU5969
 17909 0467 C57B1015 		vmovsd	xmm10, QWORD PTR .LC61[rip]	# tmp649,
 17909      00000000 
 17910 046f C4E2E99B 		vfmsub132sd	xmm5, xmm2, QWORD PTR .LC8[rip]	# _305, tmp444,
 17910      2D000000 
 17910      00
 17911 0478 C462B19D 		vfnmadd132sd	xmm8, xmm9, QWORD PTR .LC8[rip]	# _306, tmp447,
 17911      05000000 
 17911      00
 17912              	# sieve_extend.c:1509:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 17913              		.loc 1 1509 26 view .LVU5970
 17914 0481 C4C15358 		vaddsd	xmm0, xmm5, xmm8	# elapsed_time, _305, _306
 17914      C0
 17915              	.LVL1026:
1504:sieve_extend.c ****             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksize_bits);
 17916              		.loc 1 1504 15 is_stmt 1 view .LVU5971
 17917 0486 C5792FD0 		vcomisd	xmm10, xmm0	# tmp649, elapsed_time
 17918 048a 0F828500 		jb	.L1511	#,
 17918      0000
 17919              	.LVL1027:
1505:sieve_extend.c ****             sieve_delete(sieve);
 17920              		.loc 1 1505 13 view .LVU5972
 17921              	# sieve_extend.c:1505:             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksiz
1505:sieve_extend.c ****             sieve_delete(sieve);
 17922              		.loc 1 1505 21 is_stmt 0 view .LVU5973
 17923 0490 488BBC24 		mov	rdi, QWORD PTR 176[rsp]	#, option_maxFactor
 17923      B0000000 
 17924 0498 4C89E6   		mov	rsi, r12	#, best_result$blocksize_bits
 17925              	# sieve_extend.c:1507:             passes++;
1507:sieve_extend.c ****             clock_gettime(CLOCK_MONOTONIC,&end_time);
 17926              		.loc 1 1507 19 view .LVU5974
 17927 049b 4983C701 		add	r15, 1	# passes,
 17928              	# sieve_extend.c:1505:             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksiz
1505:sieve_extend.c ****             sieve_delete(sieve);
 17929              		.loc 1 1505 21 view .LVU5975
GAS LISTING /tmp/ccLUVin9.s 			page 475


 17930 049f E8000000 		call	sieve_shake	#
 17930      00
 17931              	.LVL1028:
 17932              	.LBB1116:
 17933              	.LBB1113:
 17934              	# sieve_extend.c:116:     free(sieve->bitarray);
 116:sieve_extend.c ****     free(sieve);
 17935              		.loc 1 116 5 view .LVU5976
 17936 04a4 488B38   		mov	rdi, QWORD PTR [rax]	#, sieve_148->bitarray
 17937              	.LBE1113:
 17938              	.LBE1116:
 17939              	# sieve_extend.c:1505:             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksiz
1505:sieve_extend.c ****             sieve_delete(sieve);
 17940              		.loc 1 1505 21 view .LVU5977
 17941 04a7 4889C5   		mov	rbp, rax	# sieve, tmp538
1506:sieve_extend.c ****             passes++;
 17942              		.loc 1 1506 13 is_stmt 1 view .LVU5978
 17943              	.LVL1029:
 17944              	.LBB1117:
 115:sieve_extend.c ****     free(sieve->bitarray);
 17945              		.loc 1 115 13 view .LVU5979
 17946              	.LBB1114:
 116:sieve_extend.c ****     free(sieve);
 17947              		.loc 1 116 5 view .LVU5980
 17948 04aa E8000000 		call	free@PLT	#
 17948      00
 17949              	.LVL1030:
 117:sieve_extend.c **** }
 17950              		.loc 1 117 5 view .LVU5981
 17951 04af 4889EF   		mov	rdi, rbp	#, sieve
 17952 04b2 E8000000 		call	free@PLT	#
 17952      00
 17953              	.LVL1031:
 117:sieve_extend.c **** }
 17954              		.loc 1 117 5 is_stmt 0 view .LVU5982
 17955              	.LBE1114:
 17956              	.LBE1117:
1507:sieve_extend.c ****             clock_gettime(CLOCK_MONOTONIC,&end_time);
 17957              		.loc 1 1507 13 is_stmt 1 view .LVU5983
1508:sieve_extend.c ****             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time
 17958              		.loc 1 1508 13 view .LVU5984
 17959 04b7 4C89EE   		mov	rsi, r13	#, tmp464
 17960 04ba BF010000 		mov	edi, 1	#,
 17960      00
 17961 04bf E8000000 		call	clock_gettime@PLT	#
 17961      00
 17962              	.LVL1032:
 17963              		.loc 1 1509 13 view .LVU5985
 17964              	# sieve_extend.c:1509:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 17965              		.loc 1 1509 62 is_stmt 0 view .LVU5986
 17966 04c4 C461A32A 		vcvtsi2sd	xmm11, xmm11, QWORD PTR 216[rsp]	# tmp521, end_time.tv_nsec
 17966      9C24D800 
 17966      0000
 17967              	# sieve_extend.c:1509:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 17968              		.loc 1 1509 68 view .LVU5987
 17969 04ce C4619B2A 		vcvtsi2sd	xmm12, xmm12, QWORD PTR 192[rsp]	# tmp522, start_time.tv_sec
 17969      A424C000 
GAS LISTING /tmp/ccLUVin9.s 			page 476


 17969      0000
 17970              	# sieve_extend.c:1509:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 17971              		.loc 1 1509 108 view .LVU5988
 17972 04d8 C461932A 		vcvtsi2sd	xmm13, xmm13, QWORD PTR 200[rsp]	# tmp524, start_time.tv_nsec
 17972      AC24C800 
 17972      0000
 17973              	# sieve_extend.c:1509:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 17974              		.loc 1 1509 44 view .LVU5989
 17975 04e2 C4618B2A 		vcvtsi2sd	xmm14, xmm14, QWORD PTR 208[rsp]	# tmp525, end_time.tv_sec
 17975      B424D000 
 17975      0000
 17976              	# sieve_extend.c:1504:         while (elapsed_time <= max_time) {
1504:sieve_extend.c ****             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksize_bits);
 17977              		.loc 1 1504 15 view .LVU5990
 17978 04ec C57B103D 		vmovsd	xmm15, QWORD PTR .LC61[rip]	# tmp656,
 17978      00000000 
 17979 04f4 C462999B 		vfmsub132sd	xmm11, xmm12, QWORD PTR .LC8[rip]	# _305, tmp522,
 17979      1D000000 
 17979      00
 17980 04fd C462899D 		vfnmadd132sd	xmm13, xmm14, QWORD PTR .LC8[rip]	# _306, tmp525,
 17980      2D000000 
 17980      00
 17981              	# sieve_extend.c:1509:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 17982              		.loc 1 1509 26 view .LVU5991
 17983 0506 C4C12358 		vaddsd	xmm0, xmm11, xmm13	# elapsed_time, _305, _306
 17983      C5
 17984              	.LVL1033:
1504:sieve_extend.c ****             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksize_bits);
 17985              		.loc 1 1504 15 is_stmt 1 view .LVU5992
 17986 050b C5792FF8 		vcomisd	xmm15, xmm0	# tmp656, elapsed_time
 17987 050f 0F83F6FE 		jnb	.L1439	#,
 17987      FFFF
 17988              	.L1511:
1510:sieve_extend.c ****         }
1511:sieve_extend.c ****         printf("rogiervandam_extend;%ju;%f;1;algorithm=other,faithful=yes,bits=1\n", (uintmax_t)pas
 17989              		.loc 1 1511 9 view .LVU5993
 17990              	.LVL1034:
 17991              	.LBB1118:
 17992              	.LBI1118:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17993              		.loc 3 105 1 view .LVU5994
 17994              	.LBB1119:
 17995              		.loc 3 107 3 view .LVU5995
 17996              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17997              		.loc 3 107 10 is_stmt 0 view .LVU5996
 17998 0515 4C89FA   		mov	rdx, r15	#, passes
 17999 0518 488D3500 		lea	rsi, .LC62[rip]	#,
 17999      000000
 18000 051f BF010000 		mov	edi, 1	#,
 18000      00
 18001 0524 B8010000 		mov	eax, 1	#,
 18001      00
 18002 0529 C5FB1144 		vmovsd	QWORD PTR 40[rsp], xmm0	# %sfp, elapsed_time
 18002      2428
 18003 052f E8000000 		call	__printf_chk@PLT	#
 18003      00
 18004              	.LVL1035:
GAS LISTING /tmp/ccLUVin9.s 			page 477


 18005              		.loc 3 107 10 view .LVU5997
 18006              	.LBE1119:
 18007              	.LBE1118:
1512:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - per second %f\n", 5*pass
 18008              		.loc 1 1512 9 is_stmt 1 view .LVU5998
 18009              	# sieve_extend.c:1512:         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - p
 18010              		.loc 1 1512 12 is_stmt 0 view .LVU5999
 18011 0534 83BC24A8 		cmp	DWORD PTR 168[rsp], 0	# option_verboselevel,
 18011      00000000 
 18012 053c 0F8FF500 		jg	.L1526	#,
 18012      0000
 18013              	.LVL1036:
 18014              	.L1437:
 18015              		.loc 1 1512 12 view .LVU6000
 18016              	.LBE1109:
1513:sieve_extend.c ****     }
1514:sieve_extend.c ****     
1515:sieve_extend.c ****     if (option_showMaxFactor > 0) {
 18017              		.loc 1 1515 5 is_stmt 1 view .LVU6001
 18018              	# sieve_extend.c:1515:     if (option_showMaxFactor > 0) {
 18019              		.loc 1 1515 8 is_stmt 0 view .LVU6002
 18020 0542 4883BC24 		cmp	QWORD PTR 184[rsp], 0	# option_showMaxFactor,
 18020      B8000000 
 18020      00
 18021 054b 0F859300 		jne	.L1527	#,
 18021      0000
 18022 0551 66662E0F 		.p2align 4
 18022      1F840000 
 18022      0000000F 
 18022      1F4000
 18023              		.p2align 3
 18024              	.L1445:
 18025              	.LBB1126:
 18026              	.LBB1104:
 18027              	.LBB1101:
 18028              	.LBB1094:
1480:sieve_extend.c ****             }
 18029              		.loc 1 1480 29 is_stmt 1 discriminator 1 view .LVU6003
 18030              	.LBE1094:
 18031              	.LBE1101:
 18032              	.LBE1104:
 18033              	.LBE1126:
 18034              	# sieve_extend.c:1522: }
1516:sieve_extend.c ****         printf("Show result set:\n");
1517:sieve_extend.c ****         struct sieve_t* sieve = sieve_shake(option_maxFactor, option_maxFactor);
1518:sieve_extend.c ****         show_primes(sieve, option_showMaxFactor);
1519:sieve_extend.c ****         sieve_delete(sieve);
1520:sieve_extend.c ****         printf("\n");
1521:sieve_extend.c ****     }
1522:sieve_extend.c **** }
 18035              		.loc 1 1522 1 is_stmt 0 discriminator 1 view .LVU6004
 18036 0560 488B8424 		mov	rax, QWORD PTR 232[rsp]	# tmp572, D.7648
 18036      E8000000 
 18037 0568 64483304 		xor	rax, QWORD PTR fs:40	# tmp572, MEM[(<address-space-1> long unsigned int *)40B]
 18037      25280000 
 18037      00
 18038 0571 0F85A50A 		jne	.L1528	#,
GAS LISTING /tmp/ccLUVin9.s 			page 478


 18038      0000
 18039              	# sieve_extend.c:1522: }
 18040              		.loc 1 1522 1 view .LVU6005
 18041 0577 488DA424 		lea	rsp, 248[rsp]	#,
 18041      F8000000 
 18042              		.cfi_remember_state
 18043              		.cfi_def_cfa_offset 56
 18044 057f 31C0     		xor	eax, eax	#
 18045 0581 5B       		pop	rbx	#
 18046              		.cfi_def_cfa_offset 48
 18047 0582 5D       		pop	rbp	#
 18048              		.cfi_def_cfa_offset 40
 18049 0583 415C     		pop	r12	#
 18050              		.cfi_def_cfa_offset 32
 18051 0585 415D     		pop	r13	#
 18052              		.cfi_def_cfa_offset 24
 18053 0587 415E     		pop	r14	#
 18054              		.cfi_def_cfa_offset 16
 18055 0589 415F     		pop	r15	#
 18056              		.cfi_def_cfa_offset 8
 18057 058b C3       		ret	
 18058              	.L1400:
 18059              		.cfi_restore_state
1462:sieve_extend.c ****         #endif
 18060              		.loc 1 1462 13 is_stmt 1 view .LVU6006
 18061              	.LVL1037:
 18062              	.LBB1127:
 18063              	.LBI1127:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18064              		.loc 3 105 1 view .LVU6007
 18065              	.LBB1128:
 18066              		.loc 3 107 3 view .LVU6008
 18067              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18068              		.loc 3 107 10 is_stmt 0 view .LVU6009
 18069 058c 488D3D00 		lea	rdi, .LC29[rip]	#,
 18069      000000
 18070 0593 E8000000 		call	puts@PLT	#
 18070      00
 18071              	.LVL1038:
 18072              		.loc 3 107 10 view .LVU6010
 18073              	.LBE1128:
 18074              	.LBE1127:
1466:sieve_extend.c ****         // Count the number of primes and validate the result
 18075              		.loc 1 1466 5 is_stmt 1 view .LVU6011
1468:sieve_extend.c ****         if (option_verboselevel >= 2) printf("\n");
 18076              		.loc 1 1468 9 view .LVU6012
 18077              	# sieve_extend.c:1468:         if (option_verboselevel >= 1) printf("Validating... ");
1468:sieve_extend.c ****         if (option_verboselevel >= 2) printf("\n");
 18078              		.loc 1 1468 12 is_stmt 0 view .LVU6013
 18079 0598 83BC24A8 		cmp	DWORD PTR 168[rsp], 0	# option_verboselevel,
 18079      00000000 
 18080 05a0 0F8E49FC 		jle	.L1401	#,
 18080      FFFF
1468:sieve_extend.c ****         if (option_verboselevel >= 2) printf("\n");
 18081              		.loc 1 1468 39 is_stmt 1 view .LVU6014
 18082              	.LVL1039:
 18083              	.LBB1129:
GAS LISTING /tmp/ccLUVin9.s 			page 479


 18084              	.LBI1129:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18085              		.loc 3 105 1 view .LVU6015
 18086              	.LBB1130:
 18087              		.loc 3 107 3 view .LVU6016
 18088              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18089              		.loc 3 107 10 is_stmt 0 view .LVU6017
 18090 05a6 488D3500 		lea	rsi, .LC46[rip]	#,
 18090      000000
 18091 05ad BF010000 		mov	edi, 1	#,
 18091      00
 18092 05b2 31C0     		xor	eax, eax	#
 18093 05b4 E8000000 		call	__printf_chk@PLT	#
 18093      00
 18094              	.LVL1040:
 18095 05b9 E931FCFF 		jmp	.L1401	#
 18095      FF
 18096              	.LVL1041:
 18097              	.L1389:
 18098              		.loc 3 107 10 view .LVU6018
 18099              	.LBE1130:
 18100              	.LBE1129:
 18101              	.LBB1131:
1420:sieve_extend.c ****             }
 18102              		.loc 1 1420 17 is_stmt 1 view .LVU6019
 18103              	.LBB1056:
 18104              	.LBI1056:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18105              		.loc 3 98 1 view .LVU6020
 18106              	.LBB1057:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18107              		.loc 3 100 3 view .LVU6021
 18108              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18109              		.loc 3 100 10 is_stmt 0 view .LVU6022
 18110 05be 498B0F   		mov	rcx, QWORD PTR [r15]	#, *_16
 18111 05c1 488D1500 		lea	rdx, .LC33[rip]	#,
 18111      000000
 18112              	.LVL1042:
 18113              	.L1514:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18114              		.loc 3 100 10 view .LVU6023
 18115              	.LBE1057:
 18116              	.LBE1056:
 18117              	.LBB1058:
 18118              	.LBB1059:
 18119 05c8 488B3D00 		mov	rdi, QWORD PTR stderr[rip]	#, stderr
 18119      000000
 18120 05cf BE010000 		mov	esi, 1	#,
 18120      00
 18121 05d4 31C0     		xor	eax, eax	#
 18122 05d6 E8000000 		call	__fprintf_chk@PLT	#
 18122      00
 18123              	.LVL1043:
 18124              	.L1515:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18125              		.loc 3 100 10 view .LVU6024
GAS LISTING /tmp/ccLUVin9.s 			page 480


 18126              	.LBE1059:
 18127              	.LBE1058:
1428:sieve_extend.c ****             }
 18128              		.loc 1 1428 80 is_stmt 1 view .LVU6025
 18129 05db 498B3C24 		mov	rdi, QWORD PTR [r12]	#, *argv_161(D)
 18130 05df E8000000 		call	usage	#
 18130      00
 18131              	.LVL1044:
 18132              	.L1527:
1428:sieve_extend.c ****             }
 18133              		.loc 1 1428 80 is_stmt 0 view .LVU6026
 18134              	.LBE1131:
 18135              	.LBB1132:
1516:sieve_extend.c ****         struct sieve_t* sieve = sieve_shake(option_maxFactor, option_maxFactor);
 18136              		.loc 1 1516 9 is_stmt 1 view .LVU6027
 18137              	.LBB1133:
 18138              	.LBI1133:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18139              		.loc 3 105 1 view .LVU6028
 18140              	.LBB1134:
 18141              		.loc 3 107 3 view .LVU6029
 18142              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18143              		.loc 3 107 10 is_stmt 0 view .LVU6030
 18144 05e4 488D3D00 		lea	rdi, .LC64[rip]	#,
 18144      000000
 18145 05eb E8000000 		call	puts@PLT	#
 18145      00
 18146              	.LVL1045:
 18147              		.loc 3 107 10 view .LVU6031
 18148              	.LBE1134:
 18149              	.LBE1133:
1517:sieve_extend.c ****         show_primes(sieve, option_showMaxFactor);
 18150              		.loc 1 1517 9 is_stmt 1 view .LVU6032
 18151              	# sieve_extend.c:1517:         struct sieve_t* sieve = sieve_shake(option_maxFactor, option_maxFact
1517:sieve_extend.c ****         show_primes(sieve, option_showMaxFactor);
 18152              		.loc 1 1517 33 is_stmt 0 view .LVU6033
 18153 05f0 488BBC24 		mov	rdi, QWORD PTR 176[rsp]	# option_maxFactor.52_94, option_maxFactor
 18153      B0000000 
 18154 05f8 4889FE   		mov	rsi, rdi	#, option_maxFactor.52_94
 18155 05fb E8000000 		call	sieve_shake	#
 18155      00
 18156              	.LVL1046:
 18157              	# sieve_extend.c:1518:         show_primes(sieve, option_showMaxFactor);
1518:sieve_extend.c ****         sieve_delete(sieve);
 18158              		.loc 1 1518 9 view .LVU6034
 18159 0600 488B9424 		mov	rdx, QWORD PTR 184[rsp]	#, option_showMaxFactor
 18159      B8000000 
 18160              	# sieve_extend.c:1517:         struct sieve_t* sieve = sieve_shake(option_maxFactor, option_maxFact
1517:sieve_extend.c ****         show_primes(sieve, option_showMaxFactor);
 18161              		.loc 1 1517 33 view .LVU6035
 18162 0608 4989C4   		mov	r12, rax	# sieve, tmp537
 18163              	.LVL1047:
1518:sieve_extend.c ****         sieve_delete(sieve);
 18164              		.loc 1 1518 9 is_stmt 1 view .LVU6036
 18165 060b 488D7008 		lea	rsi, 8[rax]	# tmp462,
 18166 060f 4889C7   		mov	rdi, rax	#, sieve
 18167 0612 E8000000 		call	show_primes.isra.0	#
GAS LISTING /tmp/ccLUVin9.s 			page 481


 18167      00
 18168              	.LVL1048:
1519:sieve_extend.c ****         printf("\n");
 18169              		.loc 1 1519 9 view .LVU6037
 18170              	.LBB1135:
 18171              	.LBI1135:
 115:sieve_extend.c ****     free(sieve->bitarray);
 18172              		.loc 1 115 13 view .LVU6038
 18173              	.LBB1136:
 116:sieve_extend.c ****     free(sieve);
 18174              		.loc 1 116 5 view .LVU6039
 18175 0617 498B3C24 		mov	rdi, QWORD PTR [r12]	#, sieve_153->bitarray
 18176 061b E8000000 		call	free@PLT	#
 18176      00
 18177              	.LVL1049:
 117:sieve_extend.c **** }
 18178              		.loc 1 117 5 view .LVU6040
 18179 0620 4C89E7   		mov	rdi, r12	#, sieve
 18180 0623 E8000000 		call	free@PLT	#
 18180      00
 18181              	.LVL1050:
 117:sieve_extend.c **** }
 18182              		.loc 1 117 5 is_stmt 0 view .LVU6041
 18183              	.LBE1136:
 18184              	.LBE1135:
1520:sieve_extend.c ****     }
 18185              		.loc 1 1520 9 is_stmt 1 view .LVU6042
 18186              	.LBB1137:
 18187              	.LBI1137:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18188              		.loc 3 105 1 view .LVU6043
 18189              	.LBB1138:
 18190              		.loc 3 107 3 view .LVU6044
 18191              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18192              		.loc 3 107 10 is_stmt 0 view .LVU6045
 18193 0628 BF0A0000 		mov	edi, 10	#,
 18193      00
 18194 062d E8000000 		call	putchar@PLT	#
 18194      00
 18195              	.LVL1051:
 18196 0632 E929FFFF 		jmp	.L1445	#
 18196      FF
 18197              	.LVL1052:
 18198              	.L1526:
 18199              		.loc 3 107 10 view .LVU6046
 18200              	.LBE1138:
 18201              	.LBE1137:
 18202              	.LBE1132:
 18203              	.LBB1139:
1512:sieve_extend.c ****     }
 18204              		.loc 1 1512 39 is_stmt 1 discriminator 1 view .LVU6047
 18205              	.LBB1120:
 18206              	.LBI1120:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18207              		.loc 3 105 1 discriminator 1 view .LVU6048
 18208              	.LBB1121:
 18209              		.loc 3 107 3 discriminator 1 view .LVU6049
GAS LISTING /tmp/ccLUVin9.s 			page 482


 18210              	.LBE1121:
 18211              	.LBE1120:
 18212              	# sieve_extend.c:1512:         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - p
1512:sieve_extend.c ****     }
 18213              		.loc 1 1512 39 is_stmt 0 discriminator 1 view .LVU6050
 18214 0637 C4C1FB2A 		vcvtsi2sd	xmm0, xmm0, r15	# tmp450, passes
 18214      C7
 18215 063c 4D85FF   		test	r15, r15	# passes
 18216 063f C5FB1074 		vmovsd	xmm6, QWORD PTR 40[rsp]	# elapsed_time, %sfp
 18216      2428
 18217 0645 7919     		jns	.L1442	#,
 18218 0647 4C89F9   		mov	rcx, r15	# tmp452, passes
 18219 064a 4D89FA   		mov	r10, r15	# tmp453, passes
 18220 064d 48D1E9   		shr	rcx	# tmp452
 18221 0650 4183E201 		and	r10d, 1	# tmp453,
 18222 0654 4C09D1   		or	rcx, r10	# tmp517, tmp453
 18223 0657 C4E1C32A 		vcvtsi2sd	xmm7, xmm7, rcx	# tmp451, tmp517
 18223      F9
 18224 065c C5C358C7 		vaddsd	xmm0, xmm7, xmm7	# tmp450, tmp451, tmp451
 18225              	.L1442:
1512:sieve_extend.c ****     }
 18226              		.loc 1 1512 39 discriminator 1 view .LVU6051
 18227 0660 C5FB5ECE 		vdivsd	xmm1, xmm0, xmm6	# tmp454, tmp450, elapsed_time
 18228              	# sieve_extend.c:1512:         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - p
1512:sieve_extend.c ****     }
 18229              		.loc 1 1512 95 discriminator 1 view .LVU6052
 18230 0664 4B8D14BF 		lea	rdx, [r15+r15*4]	# tmp455,
 18231              	# sieve_extend.c:1512:         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - p
1512:sieve_extend.c ****     }
 18232              		.loc 1 1512 39 discriminator 1 view .LVU6053
 18233 0668 4885D2   		test	rdx, rdx	# tmp455
 18234 066b C4E1E32A 		vcvtsi2sd	xmm3, xmm3, rdx	# tmp456, tmp455
 18234      DA
 18235 0670 7915     		jns	.L1444	#,
 18236 0672 4989D3   		mov	r11, rdx	# tmp458, tmp455
 18237 0675 83E201   		and	edx, 1	# tmp459,
 18238 0678 49D1EB   		shr	r11	# tmp458
 18239 067b 4909D3   		or	r11, rdx	# tmp518, tmp459
 18240 067e C4C1DB2A 		vcvtsi2sd	xmm4, xmm4, r11	# tmp457, tmp518
 18240      E3
 18241 0683 C5DB58DC 		vaddsd	xmm3, xmm4, xmm4	# tmp456, tmp457, tmp457
 18242              	.L1444:
 18243 0687 C5E35EC6 		vdivsd	xmm0, xmm3, xmm6	# tmp460, tmp456, elapsed_time
 18244              	.LBB1123:
 18245              	.LBB1122:
 18246              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18247              		.loc 3 107 10 discriminator 1 view .LVU6054
 18248 068b 488D3500 		lea	rsi, .LC63[rip]	#,
 18248      000000
 18249 0692 BF010000 		mov	edi, 1	#,
 18249      00
 18250 0697 B8020000 		mov	eax, 2	#,
 18250      00
 18251 069c E8000000 		call	__printf_chk@PLT	#
 18251      00
 18252              	.LVL1053:
 18253 06a1 E99CFEFF 		jmp	.L1437	#
GAS LISTING /tmp/ccLUVin9.s 			page 483


 18253      FF
 18254              	.LVL1054:
 18255              	.L1525:
 18256              		.loc 3 107 10 discriminator 1 view .LVU6055
 18257              	.LBE1122:
 18258              	.LBE1123:
 18259              	.LBE1139:
 18260              	.LBB1140:
1489:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
 18261              		.loc 1 1489 9 is_stmt 1 view .LVU6056
 18262              	# sieve_extend.c:1489:         tuning_result_type tuning_result = tune(option_tunelevel, option_max
1489:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
 18263              		.loc 1 1489 44 is_stmt 0 view .LVU6057
 18264 06a6 448B9424 		mov	r10d, DWORD PTR 168[rsp]	# option_verboselevel.42_64, option_verboselevel
 18264      A8000000 
 18265 06ae 4183E801 		sub	r8d, 1	#,
 18266 06b2 4C8B9C24 		mov	r11, QWORD PTR 176[rsp]	# option_maxFactor.43_65, option_maxFactor
 18266      B0000000 
 18267 06ba 4183F802 		cmp	r8d, 2	# _215,
 18268 06be 44895424 		mov	DWORD PTR 104[rsp], r10d	# %sfp, option_verboselevel.42_64
 18268      68
 18269 06c3 4C899C24 		mov	QWORD PTR 136[rsp], r11	# %sfp, option_maxFactor.43_65
 18269      88000000 
 18270              	.LVL1055:
 18271              	.LBB1141:
 18272              	.LBI1141:
1091:sieve_extend.c ****     counter_t best_blocksize_bits = default_blocksize;
 18273              		.loc 1 1091 27 is_stmt 1 view .LVU6058
 18274              	.LBB1142:
1092:sieve_extend.c **** 
 18275              		.loc 1 1092 5 view .LVU6059
1094:sieve_extend.c ****     best_blocksize_bits = 0;
 18276              		.loc 1 1094 5 view .LVU6060
1095:sieve_extend.c ****     counter_t best_smallstep_faster = 0;
 18277              		.loc 1 1095 5 view .LVU6061
1096:sieve_extend.c ****     counter_t best_mediumstep_faster = 0;
 18278              		.loc 1 1096 5 view .LVU6062
1097:sieve_extend.c ****     counter_t best_vectorstep_faster = 0;
 18279              		.loc 1 1097 5 view .LVU6063
1098:sieve_extend.c ****     counter_t smallstep_faster_steps = 4;
 18280              		.loc 1 1098 5 view .LVU6064
1099:sieve_extend.c ****     counter_t mediumstep_faster_steps = 4;
 18281              		.loc 1 1099 5 view .LVU6065
1100:sieve_extend.c ****     counter_t vectorstep_faster_steps = 32;
 18282              		.loc 1 1100 5 view .LVU6066
1101:sieve_extend.c ****     counter_t freebits_steps = anticiped_cache_line_bytesize;
 18283              		.loc 1 1101 5 view .LVU6067
1102:sieve_extend.c ****     counter_t sample_max = default_sample_max;
 18284              		.loc 1 1102 5 view .LVU6068
1103:sieve_extend.c ****     double sample_duration = default_sample_duration;
 18285              		.loc 1 1103 5 view .LVU6069
1104:sieve_extend.c **** 
 18286              		.loc 1 1104 5 view .LVU6070
1107:sieve_extend.c ****         case 1:
 18287              		.loc 1 1107 5 view .LVU6071
 18288 06cb 0F86EA07 		jbe	.L1446	#,
 18288      0000
GAS LISTING /tmp/ccLUVin9.s 			page 484


 18289 06d1 C5FB1035 		vmovsd	xmm6, QWORD PTR .LC28[rip]	# sample_duration,
 18289      00000000 
 18290 06d9 48C74424 		mov	QWORD PTR 120[rsp], 5	# %sfp,
 18290      78050000 
 18290      00
 18291 06e2 48C74424 		mov	QWORD PTR 112[rsp], 128	# %sfp,
 18291      70800000 
 18291      00
 18292 06eb 48C78424 		mov	QWORD PTR 144[rsp], 32	# %sfp,
 18292      90000000 
 18292      20000000 
 18293 06f7 48C78424 		mov	QWORD PTR 152[rsp], 4	# %sfp,
 18293      98000000 
 18293      04000000 
 18294 0703 C5FB11B4 		vmovsd	QWORD PTR 128[rsp], xmm6	# %sfp, sample_duration
 18294      24800000 
 18294      00
 18295              	.LVL1056:
 18296              	.L1414:
1136:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 18297              		.loc 1 1136 5 view .LVU6072
 18298              	# sieve_extend.c:1136:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1136:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 18299              		.loc 1 1136 33 is_stmt 0 view .LVU6073
 18300 070c B8400000 		mov	eax, 64	# tmp350,
 18300      00
 18301 0711 31D2     		xor	edx, edx	# tmp349
 18302 0713 48F7B424 		div	QWORD PTR 152[rsp]	# %sfp
 18302      98000000 
 18303              	# sieve_extend.c:1136:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1136:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 18304              		.loc 1 1136 254 view .LVU6074
 18305 071b 31D2     		xor	edx, edx	# tmp357
 18306              	# sieve_extend.c:1138:     counter_t tuning_results=0;
1138:sieve_extend.c ****     counter_t tuning_result_index=0;
 18307              		.loc 1 1138 15 view .LVU6075
 18308 071d 4531FF   		xor	r15d, r15d	# tuning_results
 18309              	# sieve_extend.c:1136:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1136:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 18310              		.loc 1 1136 83 view .LVU6076
 18311 0720 488D7801 		lea	rdi, 1[rax]	# _232,
 18312              	.LVL1057:
1137:sieve_extend.c ****     counter_t tuning_results=0;
 18313              		.loc 1 1137 5 is_stmt 1 view .LVU6077
 18314              	# sieve_extend.c:1136:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1136:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 18315              		.loc 1 1136 254 is_stmt 0 view .LVU6078
 18316 0724 B8001000 		mov	eax, 4096	# tmp358,
 18316      00
 18317 0729 48F77424 		div	QWORD PTR 112[rsp]	# %sfp
 18317      70
 18318              	.LVL1058:
 18319              	# sieve_extend.c:1136:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1136:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 18320              		.loc 1 1136 148 view .LVU6079
 18321 072e 31D2     		xor	edx, edx	# tmp367
 18322              	# sieve_extend.c:1137:     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_r
GAS LISTING /tmp/ccLUVin9.s 			page 485


1137:sieve_extend.c ****     counter_t tuning_results=0;
 18323              		.loc 1 1137 41 view .LVU6080
 18324 0730 480FAFC7 		imul	rax, rdi	# tmp363, _232
 18325              	.LVL1059:
1137:sieve_extend.c ****     counter_t tuning_results=0;
 18326              		.loc 1 1137 41 view .LVU6081
 18327 0734 480FAFF8 		imul	rdi, rax	# tmp364, tmp363
 18328              	.LVL1060:
 18329              	# sieve_extend.c:1136:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1136:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 18330              		.loc 1 1136 148 view .LVU6082
 18331 0738 B8000100 		mov	eax, 256	# tmp368,
 18331      00
 18332 073d 48F7B424 		div	QWORD PTR 144[rsp]	# %sfp
 18332      90000000 
 18333              	# sieve_extend.c:1136:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1136:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 18334              		.loc 1 1136 201 view .LVU6083
 18335 0745 4883C001 		add	rax, 1	# tmp373,
 18336              	# sieve_extend.c:1137:     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_r
1137:sieve_extend.c ****     counter_t tuning_results=0;
 18337              		.loc 1 1137 41 view .LVU6084
 18338 0749 480FAFF8 		imul	rdi, rax	# tmp374, tmp373
 18339 074d 48C1E708 		sal	rdi, 8	# tmp374,
 18340 0751 E8000000 		call	malloc@PLT	#
 18340      00
 18341              	.LVL1061:
 18342              	# sieve_extend.c:1094:     double best_avg = 0;
1094:sieve_extend.c ****     best_blocksize_bits = 0;
 18343              		.loc 1 1094 12 view .LVU6085
 18344 0756 C5F157C9 		vxorpd	xmm1, xmm1, xmm1	# best_avg
 18345              	# sieve_extend.c:1137:     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_r
1137:sieve_extend.c ****     counter_t tuning_results=0;
 18346              		.loc 1 1137 41 view .LVU6086
 18347 075a 48894424 		mov	QWORD PTR 64[rsp], rax	# %sfp, tmp535
 18347      40
 18348              	.LVL1062:
1138:sieve_extend.c ****     counter_t tuning_result_index=0;
 18349              		.loc 1 1138 5 is_stmt 1 view .LVU6087
1139:sieve_extend.c ****     
 18350              		.loc 1 1139 5 view .LVU6088
1141:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE_counter
 18351              		.loc 1 1141 5 view .LVU6089
 18352              	.LBB1143:
1141:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE_counter
 18353              		.loc 1 1141 10 view .LVU6090
1141:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE_counter
 18354              		.loc 1 1141 42 view .LVU6091
 18355              	.LBE1143:
 18356              	# sieve_extend.c:1098:     counter_t best_vectorstep_faster = 0;
1098:sieve_extend.c ****     counter_t smallstep_faster_steps = 4;
 18357              		.loc 1 1098 15 is_stmt 0 view .LVU6092
 18358 075f 48C74424 		mov	QWORD PTR 96[rsp], 0	# %sfp,
 18358      60000000 
 18358      00
 18359              	# sieve_extend.c:1097:     counter_t best_mediumstep_faster = 0;
1097:sieve_extend.c ****     counter_t best_vectorstep_faster = 0;
GAS LISTING /tmp/ccLUVin9.s 			page 486


 18360              		.loc 1 1097 15 view .LVU6093
 18361 0768 48C74424 		mov	QWORD PTR 88[rsp], 0	# %sfp,
 18361      58000000 
 18361      00
 18362              	# sieve_extend.c:1096:     counter_t best_smallstep_faster = 0;
1096:sieve_extend.c ****     counter_t best_mediumstep_faster = 0;
 18363              		.loc 1 1096 15 view .LVU6094
 18364 0771 48C74424 		mov	QWORD PTR 80[rsp], 0	# %sfp,
 18364      50000000 
 18364      00
 18365              	# sieve_extend.c:1095:     best_blocksize_bits = 0;
1095:sieve_extend.c ****     counter_t best_smallstep_faster = 0;
 18366              		.loc 1 1095 25 view .LVU6095
 18367 077a 48C74424 		mov	QWORD PTR 72[rsp], 0	# %sfp,
 18367      48000000 
 18367      00
 18368              	.LBB1173:
 18369              	# sieve_extend.c:1141:     for (counter_t smallstep_faster = 0; smallstep_faster <= WORD_SIZE_count
1141:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE_counter
 18370              		.loc 1 1141 20 view .LVU6096
 18371 0783 48C74424 		mov	QWORD PTR 48[rsp], 0	# %sfp,
 18371      30000000 
 18371      00
 18372              	.LBE1173:
 18373              	# sieve_extend.c:1094:     double best_avg = 0;
1094:sieve_extend.c ****     best_blocksize_bits = 0;
 18374              		.loc 1 1094 12 view .LVU6097
 18375 078c C5FB114C 		vmovsd	QWORD PTR 56[rsp], xmm1	# %sfp, best_avg
 18375      2438
 18376              	.LVL1063:
 18377              	.L1416:
 18378              	.LBB1174:
 18379              	.LBB1144:
1142:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE_
 18380              		.loc 1 1142 62 is_stmt 1 view .LVU6098
 18381              	.LBB1145:
 18382              	.LBB1146:
 18383              	# sieve_extend.c:1144:                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_
1144:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 18384              		.loc 1 1144 32 is_stmt 0 view .LVU6099
 18385 0792 4C8B4424 		mov	r8, QWORD PTR 48[rsp]	# smallstep_faster, %sfp
 18385      30
 18386 0797 4C894424 		mov	QWORD PTR 40[rsp], r8	# %sfp, smallstep_faster
 18386      28
 18387              	.LVL1064:
 18388 079c 0F1F4000 		.p2align 4
 18389              		.p2align 3
 18390              	.L1428:
1144:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 18391              		.loc 1 1144 32 view .LVU6100
 18392              	.LBE1146:
1143:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 18393              		.loc 1 1143 67 is_stmt 1 view .LVU6101
 18394              	.LBB1169:
 18395              	# sieve_extend.c:1144:                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_
1144:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 18396              		.loc 1 1144 32 is_stmt 0 view .LVU6102
GAS LISTING /tmp/ccLUVin9.s 			page 487


 18397 07a0 4C8B7424 		mov	r14, QWORD PTR 40[rsp]	# vectorstep_faster, %sfp
 18397      28
 18398              	.LVL1065:
 18399 07a5 66662E0F 		.p2align 4
 18399      1F840000 
 18399      000000
 18400              		.p2align 3
 18401              	.L1426:
1144:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 18402              		.loc 1 1144 50 is_stmt 1 view .LVU6103
 18403              	.LBB1147:
 18404              	# sieve_extend.c:1145:                     for (counter_t free_bits=0; (free_bits < (anticiped_cach
1145:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 18405              		.loc 1 1145 36 is_stmt 0 view .LVU6104
 18406 07b0 C744246C 		mov	DWORD PTR 108[rsp], 6	# %sfp,
 18406      06000000 
 18407              	.LBE1147:
 18408              	# sieve_extend.c:1144:                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_
1144:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 18409              		.loc 1 1144 32 view .LVU6105
 18410 07b8 41BC0001 		mov	r12d, 256	# blocksize_kb,
 18410      0000
 18411              	.LVL1066:
 18412 07be 6690     		.p2align 4
 18413              		.p2align 3
 18414              	.L1424:
 18415              	.LBB1167:
1145:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 18416              		.loc 1 1145 49 is_stmt 1 view .LVU6106
 18417 07c0 4F8D147F 		lea	r10, [r15+r15*2]	# tmp401,
 18418              	# sieve_extend.c:1145:                     for (counter_t free_bits=0; (free_bits < (anticiped_cach
1145:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 18419              		.loc 1 1145 134 is_stmt 0 view .LVU6107
 18420 07c4 4C89E3   		mov	rbx, r12	# ivtmp.778, blocksize_kb
 18421 07c7 4C8B5C24 		mov	r11, QWORD PTR 64[rsp]	# tuning_result, %sfp
 18421      40
 18422              	# sieve_extend.c:1145:                     for (counter_t free_bits=0; (free_bits < (anticiped_cach
1145:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 18423              		.loc 1 1145 36 view .LVU6108
 18424 07cc 31ED     		xor	ebp, ebp	# free_bits
 18425 07ce 49C1E205 		sal	r10, 5	# tmp402,
 18426              	# sieve_extend.c:1145:                     for (counter_t free_bits=0; (free_bits < (anticiped_cach
1145:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 18427              		.loc 1 1145 134 view .LVU6109
 18428 07d2 48C1E30D 		sal	rbx, 13	# ivtmp.778,
 18429 07d6 4F8D2C13 		lea	r13, [r11+r10]	# ivtmp.777,
 18430 07da EB4F     		jmp	.L1422	#
 18431              	.LVL1067:
 18432 07dc 0F1F4000 		.p2align 4,,7
 18433              		.p2align 3
 18434              	.L1419:
 18435              	.LBB1148:
1162:sieve_extend.c ****                             best_blocksize_bits = blocksize_bits;
 18436              		.loc 1 1162 29 is_stmt 1 view .LVU6110
1163:sieve_extend.c ****                             best_smallstep_faster = smallstep_faster;
 18437              		.loc 1 1163 29 view .LVU6111
1164:sieve_extend.c ****                             best_mediumstep_faster = mediumstep_faster;
GAS LISTING /tmp/ccLUVin9.s 			page 488


 18438              		.loc 1 1164 29 view .LVU6112
1165:sieve_extend.c ****                             best_vectorstep_faster = vectorstep_faster;
 18439              		.loc 1 1165 29 view .LVU6113
1166:sieve_extend.c ****                             if (option_verboselevel >=2) { printf(".(>)"); tuning_result_print(tuni
 18440              		.loc 1 1166 29 view .LVU6114
1167:sieve_extend.c ****                         }
 18441              		.loc 1 1167 29 view .LVU6115
 18442              	# sieve_extend.c:1167:                             if (option_verboselevel >=2) { printf(".(>)"); t
1167:sieve_extend.c ****                         }
 18443              		.loc 1 1167 32 is_stmt 0 view .LVU6116
 18444 07e0 837C2468 		cmp	DWORD PTR 104[rsp], 1	# %sfp,
 18444      01
 18445 07e5 0F8F0504 		jg	.L1529	#,
 18445      0000
1167:sieve_extend.c ****                         }
 18446              		.loc 1 1167 32 view .LVU6117
 18447 07eb 488B7424 		mov	rsi, QWORD PTR 40[rsp]	# mediumstep_faster, %sfp
 18447      28
 18448 07f0 488B5424 		mov	rdx, QWORD PTR 48[rsp]	# smallstep_faster, %sfp
 18448      30
 18449 07f5 4C897424 		mov	QWORD PTR 96[rsp], r14	# %sfp, vectorstep_faster
 18449      60
 18450              	# sieve_extend.c:1162:                             best_avg = tuning_result[tuning_result_index].av
1162:sieve_extend.c ****                             best_blocksize_bits = blocksize_bits;
 18451              		.loc 1 1162 38 view .LVU6118
 18452 07fa C5FB115C 		vmovsd	QWORD PTR 56[rsp], xmm3	# %sfp, _256
 18452      2438
 18453 0800 48897424 		mov	QWORD PTR 88[rsp], rsi	# %sfp, mediumstep_faster
 18453      58
 18454              	# sieve_extend.c:1163:                             best_blocksize_bits = blocksize_bits;
1163:sieve_extend.c ****                             best_smallstep_faster = smallstep_faster;
 18455              		.loc 1 1163 49 view .LVU6119
 18456 0805 48895C24 		mov	QWORD PTR 72[rsp], rbx	# %sfp, ivtmp.778
 18456      48
 18457 080a 48895424 		mov	QWORD PTR 80[rsp], rdx	# %sfp, smallstep_faster
 18457      50
 18458              	.LVL1068:
 18459              	.L1417:
1170:sieve_extend.c ****                     }
 18460              		.loc 1 1170 25 is_stmt 1 view .LVU6120
1170:sieve_extend.c ****                     }
 18461              		.loc 1 1170 25 is_stmt 0 view .LVU6121
 18462              	.LBE1148:
1145:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 18463              		.loc 1 1145 141 is_stmt 1 view .LVU6122
 18464              	# sieve_extend.c:1145:                     for (counter_t free_bits=0; (free_bits < (anticiped_cach
1145:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 18465              		.loc 1 1145 151 is_stmt 0 view .LVU6123
 18466 080f 488B5424 		mov	rdx, QWORD PTR 112[rsp]	# freebits_steps, %sfp
 18466      70
 18467 0814 4983C560 		add	r13, 96	# ivtmp.777,
 18468 0818 4801D5   		add	rbp, rdx	# free_bits, freebits_steps
 18469              	.LVL1069:
1145:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 18470              		.loc 1 1145 49 is_stmt 1 view .LVU6124
 18471 081b 4829D3   		sub	rbx, rdx	# ivtmp.778, freebits_steps
 18472              	.LVL1070:
GAS LISTING /tmp/ccLUVin9.s 			page 489


 18473              	# sieve_extend.c:1145:                     for (counter_t free_bits=0; (free_bits < (anticiped_cach
1145:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 18474              		.loc 1 1145 21 is_stmt 0 view .LVU6125
 18475 081e 4881FDFF 		cmp	rbp, 4095	# free_bits,
 18475      0F0000
 18476 0825 0F87ED00 		ja	.L1418	#,
 18476      0000
 18477              	.LVL1071:
 18478              	.L1422:
 18479              	.LBB1165:
1146:sieve_extend.c **** 
 18480              		.loc 1 1146 25 is_stmt 1 view .LVU6126
1149:sieve_extend.c ****                         tuning_result[tuning_result_index].maxints = maxints;
 18481              		.loc 1 1149 25 view .LVU6127
 18482              	# sieve_extend.c:1156:                         tuning_result[tuning_result_index].smallstep_faster 
1156:sieve_extend.c ****                         tuning_result[tuning_result_index].mediumstep_faster = mediumstep_faster;
 18483              		.loc 1 1156 77 is_stmt 0 view .LVU6128
 18484 082b 488B7C24 		mov	rdi, QWORD PTR 48[rsp]	# smallstep_faster, %sfp
 18484      30
 18485 0830 4C89FE   		mov	rsi, r15	# tuning_results, tuning_results
 18486              	# sieve_extend.c:1150:                         tuning_result[tuning_result_index].maxints = maxints
1150:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_duration = sample_duration;
 18487              		.loc 1 1150 68 view .LVU6129
 18488 0833 488B8C24 		mov	rcx, QWORD PTR 136[rsp]	# option_maxFactor.43_65, %sfp
 18488      88000000 
 18489              	# sieve_extend.c:1149:                         tuning_results++;
1149:sieve_extend.c ****                         tuning_result[tuning_result_index].maxints = maxints;
 18490              		.loc 1 1149 39 view .LVU6130
 18491 083b 4983C701 		add	r15, 1	# tuning_results,
 18492              	.LVL1072:
1150:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_duration = sample_duration;
 18493              		.loc 1 1150 25 is_stmt 1 view .LVU6131
 18494              	# sieve_extend.c:1152:                         tuning_result[tuning_result_index].sample_max = samp
1152:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_kb = blocksize_kb;
 18495              		.loc 1 1152 71 is_stmt 0 view .LVU6132
 18496 083f 4C8B4C24 		mov	r9, QWORD PTR 120[rsp]	# sample_max, %sfp
 18496      78
 18497              	# sieve_extend.c:1157:                         tuning_result[tuning_result_index].mediumstep_faster
1157:sieve_extend.c ****                         tuning_result[tuning_result_index].vectorstep_faster = vectorstep_faster;
 18498              		.loc 1 1157 78 view .LVU6133
 18499 0844 488B4424 		mov	rax, QWORD PTR 40[rsp]	# mediumstep_faster, %sfp
 18499      28
 18500              	# sieve_extend.c:1156:                         tuning_result[tuning_result_index].smallstep_faster 
1156:sieve_extend.c ****                         tuning_result[tuning_result_index].mediumstep_faster = mediumstep_faster;
 18501              		.loc 1 1156 77 view .LVU6134
 18502 0849 49897D20 		mov	QWORD PTR 32[r13], rdi	# MEM[base: _520, offset: 32B], smallstep_faster
 18503              	# sieve_extend.c:1159:                         tune_benchmark(tuning_result, tuning_result_index);
1159:sieve_extend.c **** 
 18504              		.loc 1 1159 25 view .LVU6135
 18505 084d 488B7C24 		mov	rdi, QWORD PTR 64[rsp]	#, %sfp
 18505      40
 18506              	# sieve_extend.c:1151:                         tuning_result[tuning_result_index].sample_duration =
1151:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_max = sample_max;
 18507              		.loc 1 1151 76 view .LVU6136
 18508 0852 C5FB10A4 		vmovsd	xmm4, QWORD PTR 128[rsp]	# sample_duration, %sfp
 18508      24800000 
 18508      00
GAS LISTING /tmp/ccLUVin9.s 			page 490


 18509              	# sieve_extend.c:1150:                         tuning_result[tuning_result_index].maxints = maxints
1150:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_duration = sample_duration;
 18510              		.loc 1 1150 68 view .LVU6137
 18511 085b 49894D00 		mov	QWORD PTR 0[r13], rcx	# MEM[base: _520, offset: 0B], option_maxFactor.43_65
1151:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_max = sample_max;
 18512              		.loc 1 1151 25 is_stmt 1 view .LVU6138
 18513              	# sieve_extend.c:1152:                         tuning_result[tuning_result_index].sample_max = samp
1152:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_kb = blocksize_kb;
 18514              		.loc 1 1152 71 is_stmt 0 view .LVU6139
 18515 085f 4D894D38 		mov	QWORD PTR 56[r13], r9	# MEM[base: _520, offset: 56B], sample_max
 18516              	# sieve_extend.c:1153:                         tuning_result[tuning_result_index].blocksize_kb = bl
1153:sieve_extend.c ****                         tuning_result[tuning_result_index].free_bits = free_bits;
 18517              		.loc 1 1153 73 view .LVU6140
 18518 0863 4D896510 		mov	QWORD PTR 16[r13], r12	# MEM[base: _520, offset: 16B], blocksize_kb
 18519              	# sieve_extend.c:1154:                         tuning_result[tuning_result_index].free_bits = free_
1154:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_bits = blocksize_bits;
 18520              		.loc 1 1154 70 view .LVU6141
 18521 0867 49896D18 		mov	QWORD PTR 24[r13], rbp	# MEM[base: _520, offset: 24B], free_bits
 18522              	# sieve_extend.c:1155:                         tuning_result[tuning_result_index].blocksize_bits = 
1155:sieve_extend.c ****                         tuning_result[tuning_result_index].smallstep_faster = smallstep_faster;
 18523              		.loc 1 1155 75 view .LVU6142
 18524 086b 49895D08 		mov	QWORD PTR 8[r13], rbx	# MEM[base: _520, offset: 8B], ivtmp.778
 18525              	# sieve_extend.c:1157:                         tuning_result[tuning_result_index].mediumstep_faster
1157:sieve_extend.c ****                         tuning_result[tuning_result_index].vectorstep_faster = vectorstep_faster;
 18526              		.loc 1 1157 78 view .LVU6143
 18527 086f 49894528 		mov	QWORD PTR 40[r13], rax	# MEM[base: _520, offset: 40B], mediumstep_faster
 18528              	# sieve_extend.c:1158:                         tuning_result[tuning_result_index].vectorstep_faster
1158:sieve_extend.c ****                         tune_benchmark(tuning_result, tuning_result_index);
 18529              		.loc 1 1158 78 view .LVU6144
 18530 0873 4D897530 		mov	QWORD PTR 48[r13], r14	# MEM[base: _520, offset: 48B], vectorstep_faster
 18531              	# sieve_extend.c:1151:                         tuning_result[tuning_result_index].sample_duration =
1151:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_max = sample_max;
 18532              		.loc 1 1151 76 view .LVU6145
 18533 0877 C4C17B11 		vmovsd	QWORD PTR 64[r13], xmm4	# MEM[base: _520, offset: 64B], sample_duration
 18533      6540
1152:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_kb = blocksize_kb;
 18534              		.loc 1 1152 25 is_stmt 1 view .LVU6146
1153:sieve_extend.c ****                         tuning_result[tuning_result_index].free_bits = free_bits;
 18535              		.loc 1 1153 25 view .LVU6147
1154:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_bits = blocksize_bits;
 18536              		.loc 1 1154 25 view .LVU6148
1155:sieve_extend.c ****                         tuning_result[tuning_result_index].smallstep_faster = smallstep_faster;
 18537              		.loc 1 1155 25 view .LVU6149
1156:sieve_extend.c ****                         tuning_result[tuning_result_index].mediumstep_faster = mediumstep_faster;
 18538              		.loc 1 1156 25 view .LVU6150
1157:sieve_extend.c ****                         tuning_result[tuning_result_index].vectorstep_faster = vectorstep_faster;
 18539              		.loc 1 1157 25 view .LVU6151
1158:sieve_extend.c ****                         tune_benchmark(tuning_result, tuning_result_index);
 18540              		.loc 1 1158 25 view .LVU6152
1159:sieve_extend.c **** 
 18541              		.loc 1 1159 25 view .LVU6153
 18542 087d E8000000 		call	tune_benchmark	#
 18542      00
 18543              	.LVL1073:
1161:sieve_extend.c ****                             best_avg = tuning_result[tuning_result_index].avg;
 18544              		.loc 1 1161 25 view .LVU6154
 18545              	# sieve_extend.c:1161:                         if ( tuning_result[tuning_result_index].avg > best_a
GAS LISTING /tmp/ccLUVin9.s 			page 491


1161:sieve_extend.c ****                             best_avg = tuning_result[tuning_result_index].avg;
 18546              		.loc 1 1161 64 is_stmt 0 view .LVU6155
 18547 0882 C4C17B10 		vmovsd	xmm3, QWORD PTR 88[r13]	# _256, MEM[base: _520, offset: 88B]
 18547      5D58
 18548              	# sieve_extend.c:1161:                         if ( tuning_result[tuning_result_index].avg > best_a
1161:sieve_extend.c ****                             best_avg = tuning_result[tuning_result_index].avg;
 18549              		.loc 1 1161 28 view .LVU6156
 18550 0888 C5F92F5C 		vcomisd	xmm3, QWORD PTR 56[rsp]	# _256, %sfp
 18550      2438
 18551 088e 0F874CFF 		ja	.L1419	#,
 18551      FFFF
 18552              	.L1420:
1169:sieve_extend.c ****                         tuning_result_index++;
 18553              		.loc 1 1169 25 is_stmt 1 view .LVU6157
 18554              	# sieve_extend.c:1169:                         if (option_verboselevel >= 3) { printf("...."); tuni
1169:sieve_extend.c ****                         tuning_result_index++;
 18555              		.loc 1 1169 28 is_stmt 0 view .LVU6158
 18556 0894 837C2468 		cmp	DWORD PTR 104[rsp], 2	# %sfp,
 18556      02
 18557 0899 0F8E70FF 		jle	.L1417	#,
 18557      FFFF
1169:sieve_extend.c ****                         tuning_result_index++;
 18558              		.loc 1 1169 57 is_stmt 1 view .LVU6159
 18559              	.LVL1074:
 18560              	.LBB1149:
 18561              	.LBI1149:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18562              		.loc 3 105 1 view .LVU6160
 18563              	.LBB1150:
 18564              		.loc 3 107 3 view .LVU6161
 18565              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18566              		.loc 3 107 10 is_stmt 0 view .LVU6162
 18567 089f 488D3500 		lea	rsi, .LC54[rip]	#,
 18567      000000
 18568 08a6 BF010000 		mov	edi, 1	#,
 18568      00
 18569 08ab 31C0     		xor	eax, eax	#
 18570 08ad E8000000 		call	__printf_chk@PLT	#
 18570      00
 18571              	.LVL1075:
 18572              		.loc 3 107 10 view .LVU6163
 18573              	.LBE1150:
 18574              	.LBE1149:
1169:sieve_extend.c ****                         tuning_result_index++;
 18575              		.loc 1 1169 73 is_stmt 1 view .LVU6164
 18576              	.LBB1151:
 18577              	.LBI1151:
1083:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
 18578              		.loc 1 1083 20 view .LVU6165
 18579              	.LBB1152:
1084:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
 18580              		.loc 1 1084 5 view .LVU6166
 18581              	.LBB1153:
 18582              	.LBI1153:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18583              		.loc 3 105 1 view .LVU6167
 18584              	.LBB1154:
GAS LISTING /tmp/ccLUVin9.s 			page 492


 18585              		.loc 3 107 3 view .LVU6168
 18586              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18587              		.loc 3 107 10 is_stmt 0 view .LVU6169
 18588 08b2 498B4538 		mov	rax, QWORD PTR 56[r13]	# MEM[base: _520, offset: 56B], MEM[base: _520, offset: 56B]
 18589 08b6 BF010000 		mov	edi, 1	#,
 18589      00
 18590 08bb C4C17B10 		vmovsd	xmm0, QWORD PTR 80[r13]	# MEM[base: _520, offset: 80B], MEM[base: _520, offset: 80B]
 18590      4550
 18591 08c1 498B4D10 		mov	rcx, QWORD PTR 16[r13]	# MEM[base: _520, offset: 16B], MEM[base: _520, offset: 16B]
 18592 08c5 498B5508 		mov	rdx, QWORD PTR 8[r13]	# MEM[base: _520, offset: 8B], MEM[base: _520, offset: 8B]
 18593 08c9 48894424 		mov	QWORD PTR 24[rsp], rax	#, MEM[base: _520, offset: 56B]
 18593      18
 18594 08ce B8030000 		mov	eax, 3	#,
 18594      00
 18595 08d3 498B7548 		mov	rsi, QWORD PTR 72[r13]	# MEM[base: _520, offset: 72B], MEM[base: _520, offset: 72B]
 18596 08d7 48897424 		mov	QWORD PTR 16[rsp], rsi	#, MEM[base: _520, offset: 72B]
 18596      10
 18597 08dc 488D3500 		lea	rsi, .LC53[rip]	#,
 18597      000000
 18598 08e3 4D8B4530 		mov	r8, QWORD PTR 48[r13]	# MEM[base: _520, offset: 48B], MEM[base: _520, offset: 48B]
 18599 08e7 4C894424 		mov	QWORD PTR 8[rsp], r8	#, MEM[base: _520, offset: 48B]
 18599      08
 18600 08ec 4D8B5528 		mov	r10, QWORD PTR 40[r13]	# MEM[base: _520, offset: 40B], MEM[base: _520, offset: 40B]
 18601 08f0 4C891424 		mov	QWORD PTR [rsp], r10	#, MEM[base: _520, offset: 40B]
 18602 08f4 4D8B4D20 		mov	r9, QWORD PTR 32[r13]	#, MEM[base: _520, offset: 32B]
 18603 08f8 4D8B4518 		mov	r8, QWORD PTR 24[r13]	#, MEM[base: _520, offset: 24B]
 18604 08fc C4C17B10 		vmovsd	xmm2, QWORD PTR 88[r13]	#, MEM[base: _520, offset: 88B]
 18604      5558
 18605 0902 C4C17B10 		vmovsd	xmm1, QWORD PTR 64[r13]	#, MEM[base: _520, offset: 64B]
 18605      4D40
 18606 0908 E8000000 		call	__printf_chk@PLT	#
 18606      00
 18607              	.LVL1076:
 18608              		.loc 3 107 10 view .LVU6170
 18609              	.LBE1154:
 18610              	.LBE1153:
 18611              	# sieve_extend.c:1089: }
1089:sieve_extend.c **** 
 18612              		.loc 1 1089 1 view .LVU6171
 18613 090d E9FDFEFF 		jmp	.L1417	#
 18613      FF
 18614              	.LVL1077:
 18615              		.p2align 4,,7
 18616 0912 660F1F44 		.p2align 3
 18616      0000
 18617              	.L1418:
1089:sieve_extend.c **** 
 18618              		.loc 1 1089 1 view .LVU6172
 18619              	.LBE1152:
 18620              	.LBE1151:
 18621              	.LBE1165:
 18622              	.LBE1167:
1144:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 18623              		.loc 1 1144 67 is_stmt 1 view .LVU6173
 18624              	# sieve_extend.c:1144:                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_
1144:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 18625              		.loc 1 1144 80 is_stmt 0 view .LVU6174
GAS LISTING /tmp/ccLUVin9.s 			page 493


 18626 0918 49D1EC   		shr	r12	# blocksize_kb
 18627              	.LVL1078:
1144:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 18628              		.loc 1 1144 50 is_stmt 1 view .LVU6175
 18629              	# sieve_extend.c:1144:                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_
1144:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 18630              		.loc 1 1144 17 is_stmt 0 view .LVU6176
 18631 091b 836C246C 		sub	DWORD PTR 108[rsp], 1	# %sfp,
 18631      01
 18632 0920 0F859AFE 		jne	.L1424	#,
 18632      FFFF
 18633              	.LBE1169:
1143:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 18634              		.loc 1 1143 109 is_stmt 1 view .LVU6177
 18635              	# sieve_extend.c:1143:             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep
1143:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 18636              		.loc 1 1143 127 is_stmt 0 view .LVU6178
 18637 0926 4C03B424 		add	r14, QWORD PTR 144[rsp]	# vectorstep_faster, %sfp
 18637      90000000 
 18638              	.LVL1079:
1143:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 18639              		.loc 1 1143 67 is_stmt 1 view .LVU6179
 18640              	# sieve_extend.c:1143:             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep
1143:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 18641              		.loc 1 1143 13 is_stmt 0 view .LVU6180
 18642 092e 4981FE00 		cmp	r14, 256	# vectorstep_faster,
 18642      010000
 18643 0935 0F8675FE 		jbe	.L1426	#,
 18643      FFFF
 18644              	.LBE1145:
1142:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE_
 18645              		.loc 1 1142 102 is_stmt 1 view .LVU6181
 18646              	# sieve_extend.c:1142:         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_fast
1142:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE_
 18647              		.loc 1 1142 120 is_stmt 0 view .LVU6182
 18648 093b 4C8BB424 		mov	r14, QWORD PTR 152[rsp]	# smallstep_faster_steps, %sfp
 18648      98000000 
 18649              	.LVL1080:
1142:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE_
 18650              		.loc 1 1142 120 view .LVU6183
 18651 0943 4C017424 		add	QWORD PTR 40[rsp], r14	# %sfp, smallstep_faster_steps
 18651      28
 18652              	.LVL1081:
1142:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE_
 18653              		.loc 1 1142 120 view .LVU6184
 18654 0948 4C8B6424 		mov	r12, QWORD PTR 40[rsp]	# mediumstep_faster, %sfp
 18654      28
 18655              	.LVL1082:
1142:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE_
 18656              		.loc 1 1142 62 is_stmt 1 view .LVU6185
 18657              	# sieve_extend.c:1142:         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_fast
1142:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE_
 18658              		.loc 1 1142 9 is_stmt 0 view .LVU6186
 18659 094d 4983FC40 		cmp	r12, 64	# mediumstep_faster,
 18660 0951 0F8649FE 		jbe	.L1428	#,
 18660      FFFF
 18661              	.LBE1144:
GAS LISTING /tmp/ccLUVin9.s 			page 494


1141:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE_counter
 18662              		.loc 1 1141 83 is_stmt 1 view .LVU6187
 18663              	# sieve_extend.c:1141:     for (counter_t smallstep_faster = 0; smallstep_faster <= WORD_SIZE_count
1141:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE_counter
 18664              		.loc 1 1141 100 is_stmt 0 view .LVU6188
 18665 0957 488B9C24 		mov	rbx, QWORD PTR 152[rsp]	# smallstep_faster_steps, %sfp
 18665      98000000 
 18666 095f 48015C24 		add	QWORD PTR 48[rsp], rbx	# %sfp, smallstep_faster_steps
 18666      30
 18667              	.LVL1083:
1141:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE_counter
 18668              		.loc 1 1141 100 view .LVU6189
 18669 0964 4C8B6C24 		mov	r13, QWORD PTR 48[rsp]	# smallstep_faster, %sfp
 18669      30
 18670              	.LVL1084:
1141:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE_counter
 18671              		.loc 1 1141 42 is_stmt 1 view .LVU6190
 18672              	# sieve_extend.c:1141:     for (counter_t smallstep_faster = 0; smallstep_faster <= WORD_SIZE_count
1141:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE_counter
 18673              		.loc 1 1141 5 is_stmt 0 view .LVU6191
 18674 0969 4983FD20 		cmp	r13, 32	# smallstep_faster,
 18675 096d 0F861FFE 		jbe	.L1416	#,
 18675      FFFF
 18676              	.LBE1174:
1176:sieve_extend.c ****         printf("%ju results. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju; b
 18677              		.loc 1 1176 5 is_stmt 1 view .LVU6192
 18678              	# sieve_extend.c:1176:     if (option_verboselevel >= 2) {
1176:sieve_extend.c ****         printf("%ju results. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju; b
 18679              		.loc 1 1176 8 is_stmt 0 view .LVU6193
 18680 0973 837C2468 		cmp	DWORD PTR 104[rsp], 1	# %sfp,
 18680      01
 18681 0978 7E3A     		jle	.L1429	#,
1177:sieve_extend.c ****         printf("Best options\n");
 18682              		.loc 1 1177 9 is_stmt 1 view .LVU6194
 18683              	.LVL1085:
 18684              	.LBB1175:
 18685              	.LBI1175:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18686              		.loc 3 105 1 view .LVU6195
 18687              	.LBB1176:
 18688              		.loc 3 107 3 view .LVU6196
 18689              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18690              		.loc 3 107 10 is_stmt 0 view .LVU6197
 18691 097a 488B6C24 		mov	rbp, QWORD PTR 96[rsp]	# best_vectorstep_faster, %sfp
 18691      60
 18692              	.LVL1086:
 18693              		.loc 3 107 10 view .LVU6198
 18694 097f BF010000 		mov	edi, 1	#,
 18694      00
 18695 0984 4C8B4C24 		mov	r9, QWORD PTR 88[rsp]	#, %sfp
 18695      58
 18696 0989 4C89FA   		mov	rdx, r15	#, tuning_results
 18697 098c 4C8B4424 		mov	r8, QWORD PTR 80[rsp]	#, %sfp
 18697      50
 18698 0991 488D3500 		lea	rsi, .LC55[rip]	#,
 18698      000000
 18699 0998 488B4C24 		mov	rcx, QWORD PTR 72[rsp]	#, %sfp
GAS LISTING /tmp/ccLUVin9.s 			page 495


 18699      48
 18700 099d 31C0     		xor	eax, eax	#
 18701 099f 48892C24 		mov	QWORD PTR [rsp], rbp	#, best_vectorstep_faster
 18702 09a3 E8000000 		call	__printf_chk@PLT	#
 18702      00
 18703              	.LVL1087:
 18704              		.loc 3 107 10 view .LVU6199
 18705              	.LBE1176:
 18706              	.LBE1175:
1178:sieve_extend.c ****     }
 18707              		.loc 1 1178 9 is_stmt 1 view .LVU6200
 18708              	.LBB1177:
 18709              	.LBI1177:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18710              		.loc 3 105 1 view .LVU6201
 18711              	.LBB1178:
 18712              		.loc 3 107 3 view .LVU6202
 18713              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18714              		.loc 3 107 10 is_stmt 0 view .LVU6203
 18715 09a8 488D3D00 		lea	rdi, .LC56[rip]	#,
 18715      000000
 18716 09af E8000000 		call	puts@PLT	#
 18716      00
 18717              	.LVL1088:
 18718              	.L1429:
 18719              		.loc 3 107 10 view .LVU6204
 18720              	.LBE1178:
 18721              	.LBE1177:
 18722              	.LBB1179:
 18723              	# sieve_extend.c:1196:         for (counter_t i=0; i<tuning_results; i++) {
1196:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18724              		.loc 1 1196 24 view .LVU6205
 18725 09b4 4531DB   		xor	r11d, r11d	# step
 18726              	.LBE1179:
 18727              	.LBB1180:
 18728              	# sieve_extend.c:1188:                 for (counter_t tuning_result_index=0; tuning_result_index<mi
1188:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 18729              		.loc 1 1188 75 view .LVU6206
 18730 09b7 41BE0A00 		mov	r14d, 10	# tmp476,
 18730      0000
 18731 09bd 4C8B6C24 		mov	r13, QWORD PTR 120[rsp]	# sample_max, %sfp
 18731      78
 18732              	.LVL1089:
1188:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 18733              		.loc 1 1188 75 view .LVU6207
 18734 09c2 4C8B6424 		mov	r12, QWORD PTR 64[rsp]	# tuning_result, %sfp
 18734      40
 18735              	.LVL1090:
1188:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 18736              		.loc 1 1188 75 view .LVU6208
 18737 09c7 4C895C24 		mov	QWORD PTR 48[rsp], r11	# %sfp, step
 18737      30
 18738              	.LVL1091:
 18739              	.L1434:
1188:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 18740              		.loc 1 1188 75 view .LVU6209
 18741              	.LBE1180:
GAS LISTING /tmp/ccLUVin9.s 			page 496


1181:sieve_extend.c ****         qsort(tuning_result, (size_t)tuning_results, sizeof(tuning_result_type), compare_tuning_res
 18742              		.loc 1 1181 11 is_stmt 1 view .LVU6210
 18743 09cc 4983FF04 		cmp	r15, 4	# tuning_results,
 18744 09d0 0F862E04 		jbe	.L1530	#,
 18744      0000
1182:sieve_extend.c ****         step++;
 18745              		.loc 1 1182 9 view .LVU6211
 18746 09d6 488D0D00 		lea	rcx, compare_tuning_result[rip]	#,
 18746      000000
 18747 09dd BA600000 		mov	edx, 96	#,
 18747      00
 18748 09e2 4C89FE   		mov	rsi, r15	#, tuning_results
 18749 09e5 4C89E7   		mov	rdi, r12	#, tuning_result
 18750 09e8 E8000000 		call	qsort@PLT	#
 18750      00
 18751              	.LVL1092:
1183:sieve_extend.c ****         if (option_verboselevel >= 2) {
 18752              		.loc 1 1183 9 view .LVU6212
1184:sieve_extend.c ****             tuning_result_index = 0;
 18753              		.loc 1 1184 9 view .LVU6213
 18754              	# sieve_extend.c:1183:         step++;
1183:sieve_extend.c ****         if (option_verboselevel >= 2) {
 18755              		.loc 1 1183 13 is_stmt 0 view .LVU6214
 18756 09ed 48834424 		add	QWORD PTR 48[rsp], 1	# %sfp,
 18756      3001
 18757              	.LVL1093:
 18758              	# sieve_extend.c:1184:         if (option_verboselevel >= 2) {
1184:sieve_extend.c ****             tuning_result_index = 0;
 18759              		.loc 1 1184 12 view .LVU6215
 18760 09f3 837C2468 		cmp	DWORD PTR 104[rsp], 1	# %sfp,
 18760      01
 18761 09f8 0F8F8902 		jg	.L1430	#,
 18761      0000
 18762              	.L1432:
1194:sieve_extend.c **** 
 18763              		.loc 1 1194 9 is_stmt 1 view .LVU6216
 18764              	# sieve_extend.c:1194:         tuning_results = tuning_results / 2;
1194:sieve_extend.c **** 
 18765              		.loc 1 1194 24 is_stmt 0 view .LVU6217
 18766 09fe 49D1EF   		shr	r15	# tuning_results
 18767              	.LVL1094:
1196:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18768              		.loc 1 1196 9 is_stmt 1 view .LVU6218
 18769              	.LBB1189:
1196:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18770              		.loc 1 1196 14 view .LVU6219
1196:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18771              		.loc 1 1196 29 view .LVU6220
 18772              	# sieve_extend.c:1196:         for (counter_t i=0; i<tuning_results; i++) {
1196:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18773              		.loc 1 1196 24 is_stmt 0 view .LVU6221
 18774 0a01 31ED     		xor	ebp, ebp	# i
 18775 0a03 4D89FB   		mov	r11, r15	# tmp490, tuning_results
 18776 0a06 498D5C24 		lea	rbx, 56[r12]	# ivtmp.759,
 18776      38
 18777 0a0b 4183E307 		and	r11d, 7	# tmp490,
 18778 0a0f 0F84D300 		je	.L1431	#,
GAS LISTING /tmp/ccLUVin9.s 			page 497


 18778      0000
 18779 0a15 4983FB01 		cmp	r11, 1	# tmp490,
 18780 0a19 0F84AA00 		je	.L1489	#,
 18780      0000
 18781 0a1f 4983FB02 		cmp	r11, 2	# tmp490,
 18782 0a23 0F848A00 		je	.L1490	#,
 18782      0000
 18783 0a29 4983FB03 		cmp	r11, 3	# tmp490,
 18784 0a2d 746E     		je	.L1491	#,
 18785 0a2f 4983FB04 		cmp	r11, 4	# tmp490,
 18786 0a33 7452     		je	.L1492	#,
 18787 0a35 4983FB05 		cmp	r11, 5	# tmp490,
 18788 0a39 7436     		je	.L1493	#,
 18789 0a3b 4983FB06 		cmp	r11, 6	# tmp490,
 18790 0a3f 741A     		je	.L1494	#,
1197:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18791              		.loc 1 1197 13 is_stmt 1 view .LVU6222
 18792 0a41 31F6     		xor	esi, esi	#
 18793 0a43 4C89E7   		mov	rdi, r12	#, tuning_result
 18794 0a46 E8000000 		call	tune_benchmark	#
 18794      00
 18795              	.LVL1095:
1198:sieve_extend.c ****         }
 18796              		.loc 1 1198 13 view .LVU6223
 18797              	# sieve_extend.c:1196:         for (counter_t i=0; i<tuning_results; i++) {
1196:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18798              		.loc 1 1196 48 is_stmt 0 view .LVU6224
 18799 0a4b BD010000 		mov	ebp, 1	# i,
 18799      00
 18800              	# sieve_extend.c:1198:             tuning_result[i].sample_max += sample_max;
1198:sieve_extend.c ****         }
 18801              		.loc 1 1198 41 view .LVU6225
 18802 0a50 4C012B   		add	QWORD PTR [rbx], r13	# MEM[base: _159, offset: 0B], sample_max
1196:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18803              		.loc 1 1196 47 is_stmt 1 view .LVU6226
 18804              	.LVL1096:
1196:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18805              		.loc 1 1196 29 view .LVU6227
 18806 0a53 498D9C24 		lea	rbx, 152[r12]	# ivtmp.759,
 18806      98000000 
 18807              	.L1494:
1197:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18808              		.loc 1 1197 13 view .LVU6228
 18809 0a5b 4889EE   		mov	rsi, rbp	#, i
 18810 0a5e 4C89E7   		mov	rdi, r12	#, tuning_result
 18811 0a61 E8000000 		call	tune_benchmark	#
 18811      00
 18812              	.LVL1097:
1198:sieve_extend.c ****         }
 18813              		.loc 1 1198 13 view .LVU6229
 18814              	# sieve_extend.c:1196:         for (counter_t i=0; i<tuning_results; i++) {
1196:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18815              		.loc 1 1196 48 is_stmt 0 view .LVU6230
 18816 0a66 4883C501 		add	rbp, 1	# i,
 18817              	# sieve_extend.c:1198:             tuning_result[i].sample_max += sample_max;
1198:sieve_extend.c ****         }
 18818              		.loc 1 1198 41 view .LVU6231
GAS LISTING /tmp/ccLUVin9.s 			page 498


 18819 0a6a 4C012B   		add	QWORD PTR [rbx], r13	# MEM[base: _159, offset: 0B], sample_max
1196:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18820              		.loc 1 1196 47 is_stmt 1 view .LVU6232
1196:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18821              		.loc 1 1196 29 view .LVU6233
 18822 0a6d 4883C360 		add	rbx, 96	# ivtmp.759,
 18823              	.L1493:
1197:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18824              		.loc 1 1197 13 view .LVU6234
 18825 0a71 4889EE   		mov	rsi, rbp	#, i
 18826 0a74 4C89E7   		mov	rdi, r12	#, tuning_result
 18827 0a77 E8000000 		call	tune_benchmark	#
 18827      00
 18828              	.LVL1098:
1198:sieve_extend.c ****         }
 18829              		.loc 1 1198 13 view .LVU6235
 18830              	# sieve_extend.c:1196:         for (counter_t i=0; i<tuning_results; i++) {
1196:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18831              		.loc 1 1196 48 is_stmt 0 view .LVU6236
 18832 0a7c 4883C501 		add	rbp, 1	# i,
 18833              	# sieve_extend.c:1198:             tuning_result[i].sample_max += sample_max;
1198:sieve_extend.c ****         }
 18834              		.loc 1 1198 41 view .LVU6237
 18835 0a80 4C012B   		add	QWORD PTR [rbx], r13	# MEM[base: _159, offset: 0B], sample_max
1196:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18836              		.loc 1 1196 47 is_stmt 1 view .LVU6238
1196:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18837              		.loc 1 1196 29 view .LVU6239
 18838 0a83 4883C360 		add	rbx, 96	# ivtmp.759,
 18839              	.L1492:
1197:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18840              		.loc 1 1197 13 view .LVU6240
 18841 0a87 4889EE   		mov	rsi, rbp	#, i
 18842 0a8a 4C89E7   		mov	rdi, r12	#, tuning_result
 18843 0a8d E8000000 		call	tune_benchmark	#
 18843      00
 18844              	.LVL1099:
1198:sieve_extend.c ****         }
 18845              		.loc 1 1198 13 view .LVU6241
 18846              	# sieve_extend.c:1196:         for (counter_t i=0; i<tuning_results; i++) {
1196:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18847              		.loc 1 1196 48 is_stmt 0 view .LVU6242
 18848 0a92 4883C501 		add	rbp, 1	# i,
 18849              	# sieve_extend.c:1198:             tuning_result[i].sample_max += sample_max;
1198:sieve_extend.c ****         }
 18850              		.loc 1 1198 41 view .LVU6243
 18851 0a96 4C012B   		add	QWORD PTR [rbx], r13	# MEM[base: _159, offset: 0B], sample_max
1196:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18852              		.loc 1 1196 47 is_stmt 1 view .LVU6244
1196:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18853              		.loc 1 1196 29 view .LVU6245
 18854 0a99 4883C360 		add	rbx, 96	# ivtmp.759,
 18855              	.L1491:
1197:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18856              		.loc 1 1197 13 view .LVU6246
 18857 0a9d 4889EE   		mov	rsi, rbp	#, i
 18858 0aa0 4C89E7   		mov	rdi, r12	#, tuning_result
GAS LISTING /tmp/ccLUVin9.s 			page 499


 18859 0aa3 E8000000 		call	tune_benchmark	#
 18859      00
 18860              	.LVL1100:
1198:sieve_extend.c ****         }
 18861              		.loc 1 1198 13 view .LVU6247
 18862              	# sieve_extend.c:1196:         for (counter_t i=0; i<tuning_results; i++) {
1196:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18863              		.loc 1 1196 48 is_stmt 0 view .LVU6248
 18864 0aa8 4883C501 		add	rbp, 1	# i,
 18865              	# sieve_extend.c:1198:             tuning_result[i].sample_max += sample_max;
1198:sieve_extend.c ****         }
 18866              		.loc 1 1198 41 view .LVU6249
 18867 0aac 4C012B   		add	QWORD PTR [rbx], r13	# MEM[base: _159, offset: 0B], sample_max
1196:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18868              		.loc 1 1196 47 is_stmt 1 view .LVU6250
1196:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18869              		.loc 1 1196 29 view .LVU6251
 18870 0aaf 4883C360 		add	rbx, 96	# ivtmp.759,
 18871              	.L1490:
1197:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18872              		.loc 1 1197 13 view .LVU6252
 18873 0ab3 4889EE   		mov	rsi, rbp	#, i
 18874 0ab6 4C89E7   		mov	rdi, r12	#, tuning_result
 18875 0ab9 E8000000 		call	tune_benchmark	#
 18875      00
 18876              	.LVL1101:
1198:sieve_extend.c ****         }
 18877              		.loc 1 1198 13 view .LVU6253
 18878              	# sieve_extend.c:1196:         for (counter_t i=0; i<tuning_results; i++) {
1196:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18879              		.loc 1 1196 48 is_stmt 0 view .LVU6254
 18880 0abe 4883C501 		add	rbp, 1	# i,
 18881              	# sieve_extend.c:1198:             tuning_result[i].sample_max += sample_max;
1198:sieve_extend.c ****         }
 18882              		.loc 1 1198 41 view .LVU6255
 18883 0ac2 4C012B   		add	QWORD PTR [rbx], r13	# MEM[base: _159, offset: 0B], sample_max
1196:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18884              		.loc 1 1196 47 is_stmt 1 view .LVU6256
1196:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18885              		.loc 1 1196 29 view .LVU6257
 18886 0ac5 4883C360 		add	rbx, 96	# ivtmp.759,
 18887              	.L1489:
1197:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18888              		.loc 1 1197 13 view .LVU6258
 18889 0ac9 4889EE   		mov	rsi, rbp	#, i
 18890 0acc 4C89E7   		mov	rdi, r12	#, tuning_result
 18891              	# sieve_extend.c:1196:         for (counter_t i=0; i<tuning_results; i++) {
1196:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18892              		.loc 1 1196 48 is_stmt 0 view .LVU6259
 18893 0acf 4883C501 		add	rbp, 1	# i,
 18894              	# sieve_extend.c:1197:             tune_benchmark(tuning_result, i);
1197:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18895              		.loc 1 1197 13 view .LVU6260
 18896 0ad3 E8000000 		call	tune_benchmark	#
 18896      00
 18897              	.LVL1102:
1198:sieve_extend.c ****         }
GAS LISTING /tmp/ccLUVin9.s 			page 500


 18898              		.loc 1 1198 13 is_stmt 1 view .LVU6261
 18899              	# sieve_extend.c:1198:             tuning_result[i].sample_max += sample_max;
1198:sieve_extend.c ****         }
 18900              		.loc 1 1198 41 is_stmt 0 view .LVU6262
 18901 0ad8 4C012B   		add	QWORD PTR [rbx], r13	# MEM[base: _159, offset: 0B], sample_max
1196:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18902              		.loc 1 1196 47 is_stmt 1 view .LVU6263
1196:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18903              		.loc 1 1196 29 view .LVU6264
 18904 0adb 4883C360 		add	rbx, 96	# ivtmp.759,
 18905              	# sieve_extend.c:1196:         for (counter_t i=0; i<tuning_results; i++) {
1196:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18906              		.loc 1 1196 9 is_stmt 0 view .LVU6265
 18907 0adf 4939EF   		cmp	r15, rbp	# tuning_results, i
 18908 0ae2 0F84E4FE 		je	.L1434	#,
 18908      FFFF
 18909              	.L1431:
1197:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18910              		.loc 1 1197 13 is_stmt 1 view .LVU6266
 18911 0ae8 4889EE   		mov	rsi, rbp	#, i
 18912 0aeb 4C89E7   		mov	rdi, r12	#, tuning_result
 18913 0aee E8000000 		call	tune_benchmark	#
 18913      00
 18914              	.LVL1103:
1198:sieve_extend.c ****         }
 18915              		.loc 1 1198 13 view .LVU6267
 18916 0af3 488D7B60 		lea	rdi, 96[rbx]	# tmp492,
 18917              	# sieve_extend.c:1198:             tuning_result[i].sample_max += sample_max;
1198:sieve_extend.c ****         }
 18918              		.loc 1 1198 41 is_stmt 0 view .LVU6268
 18919 0af7 4C012B   		add	QWORD PTR [rbx], r13	# MEM[base: _159, offset: 0B], sample_max
1196:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18920              		.loc 1 1196 47 is_stmt 1 view .LVU6269
 18921 0afa 48897C24 		mov	QWORD PTR 40[rsp], rdi	# %sfp, tmp492
 18921      28
 18922              	# sieve_extend.c:1196:         for (counter_t i=0; i<tuning_results; i++) {
1196:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18923              		.loc 1 1196 48 is_stmt 0 view .LVU6270
 18924 0aff 488D7501 		lea	rsi, 1[rbp]	# tmp491,
1196:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18925              		.loc 1 1196 29 is_stmt 1 view .LVU6271
1197:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18926              		.loc 1 1197 13 view .LVU6272
 18927 0b03 4C89E7   		mov	rdi, r12	#, tuning_result
 18928 0b06 E8000000 		call	tune_benchmark	#
 18928      00
 18929              	.LVL1104:
1198:sieve_extend.c ****         }
 18930              		.loc 1 1198 13 view .LVU6273
 18931              	# sieve_extend.c:1198:             tuning_result[i].sample_max += sample_max;
1198:sieve_extend.c ****         }
 18932              		.loc 1 1198 41 is_stmt 0 view .LVU6274
 18933 0b0b 4C8B4C24 		mov	r9, QWORD PTR 40[rsp]	# tmp492, %sfp
 18933      28
 18934 0b10 488D83C0 		lea	rax, 192[rbx]	# ivtmp.759,
 18934      000000
 18935              	# sieve_extend.c:1196:         for (counter_t i=0; i<tuning_results; i++) {
GAS LISTING /tmp/ccLUVin9.s 			page 501


1196:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18936              		.loc 1 1196 48 view .LVU6275
 18937 0b17 488D7502 		lea	rsi, 2[rbp]	# i,
 18938              	# sieve_extend.c:1197:             tune_benchmark(tuning_result, i);
1197:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18939              		.loc 1 1197 13 view .LVU6276
 18940 0b1b 4C89E7   		mov	rdi, r12	#, tuning_result
 18941 0b1e 48894424 		mov	QWORD PTR 40[rsp], rax	# %sfp, ivtmp.759
 18941      28
 18942              	# sieve_extend.c:1198:             tuning_result[i].sample_max += sample_max;
1198:sieve_extend.c ****         }
 18943              		.loc 1 1198 41 view .LVU6277
 18944 0b23 4D0129   		add	QWORD PTR [r9], r13	# MEM[base: _159, offset: 0B], sample_max
1196:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18945              		.loc 1 1196 47 is_stmt 1 view .LVU6278
1196:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18946              		.loc 1 1196 29 view .LVU6279
1197:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18947              		.loc 1 1197 13 view .LVU6280
 18948 0b26 E8000000 		call	tune_benchmark	#
 18948      00
 18949              	.LVL1105:
1198:sieve_extend.c ****         }
 18950              		.loc 1 1198 13 view .LVU6281
 18951              	# sieve_extend.c:1198:             tuning_result[i].sample_max += sample_max;
1198:sieve_extend.c ****         }
 18952              		.loc 1 1198 41 is_stmt 0 view .LVU6282
 18953 0b2b 488B7424 		mov	rsi, QWORD PTR 40[rsp]	# ivtmp.759, %sfp
 18953      28
 18954 0b30 4C8D8320 		lea	r8, 288[rbx]	# ivtmp.759,
 18954      010000
 18955 0b37 4C894424 		mov	QWORD PTR 40[rsp], r8	# %sfp, ivtmp.759
 18955      28
 18956              	# sieve_extend.c:1197:             tune_benchmark(tuning_result, i);
1197:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18957              		.loc 1 1197 13 view .LVU6283
 18958 0b3c 4C89E7   		mov	rdi, r12	#, tuning_result
 18959              	# sieve_extend.c:1198:             tuning_result[i].sample_max += sample_max;
1198:sieve_extend.c ****         }
 18960              		.loc 1 1198 41 view .LVU6284
 18961 0b3f 4C012E   		add	QWORD PTR [rsi], r13	# MEM[base: _159, offset: 0B], sample_max
1196:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18962              		.loc 1 1196 47 is_stmt 1 view .LVU6285
 18963              	# sieve_extend.c:1196:         for (counter_t i=0; i<tuning_results; i++) {
1196:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18964              		.loc 1 1196 48 is_stmt 0 view .LVU6286
 18965 0b42 488D7503 		lea	rsi, 3[rbp]	# i,
1196:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18966              		.loc 1 1196 29 is_stmt 1 view .LVU6287
1197:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18967              		.loc 1 1197 13 view .LVU6288
 18968 0b46 E8000000 		call	tune_benchmark	#
 18968      00
 18969              	.LVL1106:
1198:sieve_extend.c ****         }
 18970              		.loc 1 1198 13 view .LVU6289
 18971              	# sieve_extend.c:1198:             tuning_result[i].sample_max += sample_max;
GAS LISTING /tmp/ccLUVin9.s 			page 502


1198:sieve_extend.c ****         }
 18972              		.loc 1 1198 41 is_stmt 0 view .LVU6290
 18973 0b4b 4C8B5424 		mov	r10, QWORD PTR 40[rsp]	# ivtmp.759, %sfp
 18973      28
 18974 0b50 488D9380 		lea	rdx, 384[rbx]	# ivtmp.759,
 18974      010000
 18975              	# sieve_extend.c:1196:         for (counter_t i=0; i<tuning_results; i++) {
1196:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18976              		.loc 1 1196 48 view .LVU6291
 18977 0b57 488D7504 		lea	rsi, 4[rbp]	# i,
 18978              	# sieve_extend.c:1197:             tune_benchmark(tuning_result, i);
1197:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18979              		.loc 1 1197 13 view .LVU6292
 18980 0b5b 4C89E7   		mov	rdi, r12	#, tuning_result
 18981 0b5e 48895424 		mov	QWORD PTR 40[rsp], rdx	# %sfp, ivtmp.759
 18981      28
 18982              	# sieve_extend.c:1198:             tuning_result[i].sample_max += sample_max;
1198:sieve_extend.c ****         }
 18983              		.loc 1 1198 41 view .LVU6293
 18984 0b63 4D012A   		add	QWORD PTR [r10], r13	# MEM[base: _159, offset: 0B], sample_max
1196:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18985              		.loc 1 1196 47 is_stmt 1 view .LVU6294
1196:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18986              		.loc 1 1196 29 view .LVU6295
1197:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18987              		.loc 1 1197 13 view .LVU6296
 18988 0b66 E8000000 		call	tune_benchmark	#
 18988      00
 18989              	.LVL1107:
1198:sieve_extend.c ****         }
 18990              		.loc 1 1198 13 view .LVU6297
 18991              	# sieve_extend.c:1198:             tuning_result[i].sample_max += sample_max;
1198:sieve_extend.c ****         }
 18992              		.loc 1 1198 41 is_stmt 0 view .LVU6298
 18993 0b6b 488B4C24 		mov	rcx, QWORD PTR 40[rsp]	# ivtmp.759, %sfp
 18993      28
 18994 0b70 4C8D9BE0 		lea	r11, 480[rbx]	# ivtmp.759,
 18994      010000
 18995              	# sieve_extend.c:1196:         for (counter_t i=0; i<tuning_results; i++) {
1196:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18996              		.loc 1 1196 48 view .LVU6299
 18997 0b77 488D7505 		lea	rsi, 5[rbp]	# i,
 18998              	# sieve_extend.c:1197:             tune_benchmark(tuning_result, i);
1197:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18999              		.loc 1 1197 13 view .LVU6300
 19000 0b7b 4C89E7   		mov	rdi, r12	#, tuning_result
 19001 0b7e 4C895C24 		mov	QWORD PTR 40[rsp], r11	# %sfp, ivtmp.759
 19001      28
 19002              	# sieve_extend.c:1198:             tuning_result[i].sample_max += sample_max;
1198:sieve_extend.c ****         }
 19003              		.loc 1 1198 41 view .LVU6301
 19004 0b83 4C0129   		add	QWORD PTR [rcx], r13	# MEM[base: _159, offset: 0B], sample_max
1196:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19005              		.loc 1 1196 47 is_stmt 1 view .LVU6302
1196:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19006              		.loc 1 1196 29 view .LVU6303
1197:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
GAS LISTING /tmp/ccLUVin9.s 			page 503


 19007              		.loc 1 1197 13 view .LVU6304
 19008 0b86 E8000000 		call	tune_benchmark	#
 19008      00
 19009              	.LVL1108:
1198:sieve_extend.c ****         }
 19010              		.loc 1 1198 13 view .LVU6305
 19011              	# sieve_extend.c:1198:             tuning_result[i].sample_max += sample_max;
1198:sieve_extend.c ****         }
 19012              		.loc 1 1198 41 is_stmt 0 view .LVU6306
 19013 0b8b 488B7C24 		mov	rdi, QWORD PTR 40[rsp]	# ivtmp.759, %sfp
 19013      28
 19014 0b90 4C8D8B40 		lea	r9, 576[rbx]	# ivtmp.759,
 19014      020000
 19015 0b97 4C894C24 		mov	QWORD PTR 40[rsp], r9	# %sfp, ivtmp.759
 19015      28
 19016              	# sieve_extend.c:1196:         for (counter_t i=0; i<tuning_results; i++) {
1196:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19017              		.loc 1 1196 48 view .LVU6307
 19018 0b9c 488D7506 		lea	rsi, 6[rbp]	# i,
 19019              	# sieve_extend.c:1198:             tuning_result[i].sample_max += sample_max;
1198:sieve_extend.c ****         }
 19020              		.loc 1 1198 41 view .LVU6308
 19021 0ba0 4C012F   		add	QWORD PTR [rdi], r13	# MEM[base: _159, offset: 0B], sample_max
1196:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19022              		.loc 1 1196 47 is_stmt 1 view .LVU6309
1196:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19023              		.loc 1 1196 29 view .LVU6310
1197:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 19024              		.loc 1 1197 13 view .LVU6311
 19025 0ba3 4C89E7   		mov	rdi, r12	#, tuning_result
 19026 0ba6 E8000000 		call	tune_benchmark	#
 19026      00
 19027              	.LVL1109:
1198:sieve_extend.c ****         }
 19028              		.loc 1 1198 13 view .LVU6312
 19029              	# sieve_extend.c:1198:             tuning_result[i].sample_max += sample_max;
1198:sieve_extend.c ****         }
 19030              		.loc 1 1198 41 is_stmt 0 view .LVU6313
 19031 0bab 488B4424 		mov	rax, QWORD PTR 40[rsp]	# ivtmp.759, %sfp
 19031      28
 19032              	# sieve_extend.c:1196:         for (counter_t i=0; i<tuning_results; i++) {
1196:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19033              		.loc 1 1196 48 view .LVU6314
 19034 0bb0 488D7507 		lea	rsi, 7[rbp]	# i,
 19035 0bb4 4C8D83A0 		lea	r8, 672[rbx]	# ivtmp.759,
 19035      020000
 19036              	# sieve_extend.c:1197:             tune_benchmark(tuning_result, i);
1197:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 19037              		.loc 1 1197 13 view .LVU6315
 19038 0bbb 4C89E7   		mov	rdi, r12	#, tuning_result
 19039 0bbe 4C894424 		mov	QWORD PTR 40[rsp], r8	# %sfp, ivtmp.759
 19039      28
 19040              	# sieve_extend.c:1196:         for (counter_t i=0; i<tuning_results; i++) {
1196:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19041              		.loc 1 1196 48 view .LVU6316
 19042 0bc3 4883C508 		add	rbp, 8	# i,
 19043              	# sieve_extend.c:1198:             tuning_result[i].sample_max += sample_max;
GAS LISTING /tmp/ccLUVin9.s 			page 504


1198:sieve_extend.c ****         }
 19044              		.loc 1 1198 41 view .LVU6317
 19045 0bc7 4C0128   		add	QWORD PTR [rax], r13	# MEM[base: _159, offset: 0B], sample_max
1196:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19046              		.loc 1 1196 47 is_stmt 1 view .LVU6318
1196:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19047              		.loc 1 1196 29 view .LVU6319
1197:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 19048              		.loc 1 1197 13 view .LVU6320
 19049 0bca 4881C300 		add	rbx, 768	# ivtmp.759,
 19049      030000
 19050 0bd1 E8000000 		call	tune_benchmark	#
 19050      00
 19051              	.LVL1110:
1198:sieve_extend.c ****         }
 19052              		.loc 1 1198 13 view .LVU6321
 19053              	# sieve_extend.c:1198:             tuning_result[i].sample_max += sample_max;
1198:sieve_extend.c ****         }
 19054              		.loc 1 1198 41 is_stmt 0 view .LVU6322
 19055 0bd6 488B7424 		mov	rsi, QWORD PTR 40[rsp]	# ivtmp.759, %sfp
 19055      28
 19056 0bdb 4C012E   		add	QWORD PTR [rsi], r13	# MEM[base: _159, offset: 0B], sample_max
1196:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19057              		.loc 1 1196 47 is_stmt 1 view .LVU6323
 19058              	.LVL1111:
1196:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19059              		.loc 1 1196 29 view .LVU6324
 19060              	# sieve_extend.c:1196:         for (counter_t i=0; i<tuning_results; i++) {
1196:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19061              		.loc 1 1196 9 is_stmt 0 view .LVU6325
 19062 0bde 4939EF   		cmp	r15, rbp	# tuning_results, i
 19063 0be1 0F8501FF 		jne	.L1431	#,
 19063      FFFF
 19064 0be7 E9E0FDFF 		jmp	.L1434	#
 19064      FF
 19065              	.LVL1112:
 19066 0bec 0F1F4000 		.p2align 4,,7
 19067              		.p2align 3
 19068              	.L1529:
1196:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19069              		.loc 1 1196 9 view .LVU6326
 19070              	.LBE1189:
 19071              	.LBB1190:
 19072              	.LBB1172:
 19073              	.LBB1171:
 19074              	.LBB1170:
 19075              	.LBB1168:
 19076              	.LBB1166:
 19077              	.LBB1155:
 19078              	.LBB1156:
 19079              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19080              		.loc 3 107 10 view .LVU6327
 19081 0bf0 488D3500 		lea	rsi, .LC52[rip]	#,
 19081      000000
 19082 0bf7 BF010000 		mov	edi, 1	#,
 19082      00
 19083 0bfc C5FB115C 		vmovsd	QWORD PTR 56[rsp], xmm3	# %sfp, _256
GAS LISTING /tmp/ccLUVin9.s 			page 505


 19083      2438
 19084              	.LBE1156:
 19085              	.LBE1155:
1167:sieve_extend.c ****                         }
 19086              		.loc 1 1167 60 is_stmt 1 view .LVU6328
 19087              	.LVL1113:
 19088              	.LBB1158:
 19089              	.LBI1155:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19090              		.loc 3 105 1 view .LVU6329
 19091              	.LBB1157:
 19092              		.loc 3 107 3 view .LVU6330
 19093              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19094              		.loc 3 107 10 is_stmt 0 view .LVU6331
 19095 0c02 31C0     		xor	eax, eax	#
 19096 0c04 E8000000 		call	__printf_chk@PLT	#
 19096      00
 19097              	.LVL1114:
 19098              		.loc 3 107 10 view .LVU6332
 19099              	.LBE1157:
 19100              	.LBE1158:
1167:sieve_extend.c ****                         }
 19101              		.loc 1 1167 76 is_stmt 1 view .LVU6333
 19102              	.LBB1159:
 19103              	.LBI1159:
1083:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
 19104              		.loc 1 1083 20 view .LVU6334
 19105              	.LBB1160:
1084:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
 19106              		.loc 1 1084 5 view .LVU6335
 19107              	.LBB1161:
 19108              	.LBI1161:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19109              		.loc 3 105 1 view .LVU6336
 19110              	.LBB1162:
 19111              		.loc 3 107 3 view .LVU6337
 19112              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19113              		.loc 3 107 10 is_stmt 0 view .LVU6338
 19114 0c09 4D8B4538 		mov	r8, QWORD PTR 56[r13]	# MEM[base: _520, offset: 56B], MEM[base: _520, offset: 56B]
 19115 0c0d BF010000 		mov	edi, 1	#,
 19115      00
 19116 0c12 498B4D10 		mov	rcx, QWORD PTR 16[r13]	# MEM[base: _520, offset: 16B], MEM[base: _520, offset: 16B]
 19117 0c16 488D3500 		lea	rsi, .LC53[rip]	#,
 19117      000000
 19118 0c1d C4C17B10 		vmovsd	xmm0, QWORD PTR 80[r13]	# MEM[base: _520, offset: 80B], MEM[base: _520, offset: 80B]
 19118      4550
 19119 0c23 B8030000 		mov	eax, 3	#,
 19119      00
 19120 0c28 498B5508 		mov	rdx, QWORD PTR 8[r13]	# MEM[base: _520, offset: 8B], MEM[base: _520, offset: 8B]
 19121 0c2c 4C894424 		mov	QWORD PTR 24[rsp], r8	#, MEM[base: _520, offset: 56B]
 19121      18
 19122 0c31 4D8B5548 		mov	r10, QWORD PTR 72[r13]	# MEM[base: _520, offset: 72B], MEM[base: _520, offset: 72B]
 19123 0c35 4C895424 		mov	QWORD PTR 16[rsp], r10	#, MEM[base: _520, offset: 72B]
 19123      10
 19124 0c3a 4D8B5D30 		mov	r11, QWORD PTR 48[r13]	# MEM[base: _520, offset: 48B], MEM[base: _520, offset: 48B]
 19125 0c3e 4C895C24 		mov	QWORD PTR 8[rsp], r11	#, MEM[base: _520, offset: 48B]
 19125      08
GAS LISTING /tmp/ccLUVin9.s 			page 506


 19126 0c43 4D8B4D28 		mov	r9, QWORD PTR 40[r13]	# MEM[base: _520, offset: 40B], MEM[base: _520, offset: 40B]
 19127 0c47 4C890C24 		mov	QWORD PTR [rsp], r9	#, MEM[base: _520, offset: 40B]
 19128 0c4b 4D8B4D20 		mov	r9, QWORD PTR 32[r13]	#, MEM[base: _520, offset: 32B]
 19129 0c4f 4D8B4518 		mov	r8, QWORD PTR 24[r13]	#, MEM[base: _520, offset: 24B]
 19130 0c53 C4C17B10 		vmovsd	xmm2, QWORD PTR 88[r13]	#, MEM[base: _520, offset: 88B]
 19130      5558
 19131 0c59 C4C17B10 		vmovsd	xmm1, QWORD PTR 64[r13]	#, MEM[base: _520, offset: 64B]
 19131      4D40
 19132 0c5f E8000000 		call	__printf_chk@PLT	#
 19132      00
 19133              	.LVL1115:
 19134              		.loc 3 107 10 view .LVU6339
 19135              	.LBE1162:
 19136              	.LBE1161:
 19137              	# sieve_extend.c:1089: }
1089:sieve_extend.c **** 
 19138              		.loc 1 1089 1 view .LVU6340
 19139 0c64 488B4C24 		mov	rcx, QWORD PTR 40[rsp]	# mediumstep_faster, %sfp
 19139      28
 19140 0c69 488B7C24 		mov	rdi, QWORD PTR 48[rsp]	# smallstep_faster, %sfp
 19140      30
 19141 0c6e 4C897424 		mov	QWORD PTR 96[rsp], r14	# %sfp, vectorstep_faster
 19141      60
 19142              	.LBE1160:
 19143              	.LBE1159:
 19144              	# sieve_extend.c:1163:                             best_blocksize_bits = blocksize_bits;
1163:sieve_extend.c ****                             best_smallstep_faster = smallstep_faster;
 19145              		.loc 1 1163 49 view .LVU6341
 19146 0c73 48895C24 		mov	QWORD PTR 72[rsp], rbx	# %sfp, ivtmp.778
 19146      48
 19147              	.LBB1164:
 19148              	.LBB1163:
 19149              	# sieve_extend.c:1089: }
1089:sieve_extend.c **** 
 19150              		.loc 1 1089 1 view .LVU6342
 19151 0c78 48894C24 		mov	QWORD PTR 88[rsp], rcx	# %sfp, mediumstep_faster
 19151      58
 19152 0c7d 48897C24 		mov	QWORD PTR 80[rsp], rdi	# %sfp, smallstep_faster
 19152      50
 19153 0c82 E90DFCFF 		jmp	.L1420	#
 19153      FF
 19154              	.LVL1116:
 19155              	.L1430:
1089:sieve_extend.c **** 
 19156              		.loc 1 1089 1 view .LVU6343
 19157              	.LBE1163:
 19158              	.LBE1164:
 19159              	.LBE1166:
 19160              	.LBE1168:
 19161              	.LBE1170:
 19162              	.LBE1171:
 19163              	.LBE1172:
 19164              	.LBE1190:
1185:sieve_extend.c ****             printf("(%ju) ",(uintmax_t)step); tuning_result_print(tuning_result[tuning_result_index
 19165              		.loc 1 1185 13 is_stmt 1 view .LVU6344
1186:sieve_extend.c ****             if (option_verboselevel >= 3) {
 19166              		.loc 1 1186 13 view .LVU6345
GAS LISTING /tmp/ccLUVin9.s 			page 507


 19167              	.LBB1191:
 19168              	.LBI1191:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19169              		.loc 3 105 1 view .LVU6346
 19170              	.LBB1192:
 19171              		.loc 3 107 3 view .LVU6347
 19172              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19173              		.loc 3 107 10 is_stmt 0 view .LVU6348
 19174 0c87 488B5424 		mov	rdx, QWORD PTR 48[rsp]	#, %sfp
 19174      30
 19175 0c8c 488D3500 		lea	rsi, .LC57[rip]	#,
 19175      000000
 19176 0c93 BF010000 		mov	edi, 1	#,
 19176      00
 19177 0c98 31C0     		xor	eax, eax	#
 19178 0c9a E8000000 		call	__printf_chk@PLT	#
 19178      00
 19179              	.LVL1117:
 19180              		.loc 3 107 10 view .LVU6349
 19181              	.LBE1192:
 19182              	.LBE1191:
1186:sieve_extend.c ****             if (option_verboselevel >= 3) {
 19183              		.loc 1 1186 47 is_stmt 1 view .LVU6350
 19184              	.LBB1193:
 19185              	.LBI1193:
1083:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
 19186              		.loc 1 1083 20 view .LVU6351
 19187              	.LBB1194:
1084:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
 19188              		.loc 1 1084 5 view .LVU6352
 19189              	.LBB1195:
 19190              	.LBI1195:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19191              		.loc 3 105 1 view .LVU6353
 19192              	.LBB1196:
 19193              		.loc 3 107 3 view .LVU6354
 19194              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19195              		.loc 3 107 10 is_stmt 0 view .LVU6355
 19196 0c9f 498B5C24 		mov	rbx, QWORD PTR 56[r12]	# MEM[(struct tuning_result_type *)tuning_result_242 + 56B], MEM[(struc
 19196      38
 19197 0ca4 488D3500 		lea	rsi, .LC53[rip]	#,
 19197      000000
 19198 0cab C4C17B10 		vmovsd	xmm0, QWORD PTR 80[r12]	# MEM[(struct tuning_result_type *)tuning_result_242 + 80B], MEM[(s
 19198      442450
 19199 0cb2 498B4C24 		mov	rcx, QWORD PTR 16[r12]	# MEM[(struct tuning_result_type *)tuning_result_242 + 16B], MEM[(struc
 19199      10
 19200 0cb7 498B5424 		mov	rdx, QWORD PTR 8[r12]	# MEM[(struct tuning_result_type *)tuning_result_242 + 8B], MEM[(struct 
 19200      08
 19201 0cbc 48895C24 		mov	QWORD PTR 24[rsp], rbx	#, MEM[(struct tuning_result_type *)tuning_result_242 + 56B]
 19201      18
 19202 0cc1 498B7C24 		mov	rdi, QWORD PTR 72[r12]	# MEM[(struct tuning_result_type *)tuning_result_242 + 72B], MEM[(struc
 19202      48
 19203 0cc6 48897C24 		mov	QWORD PTR 16[rsp], rdi	#, MEM[(struct tuning_result_type *)tuning_result_242 + 72B]
 19203      10
 19204 0ccb BF010000 		mov	edi, 1	#,
 19204      00
 19205 0cd0 4D8B4C24 		mov	r9, QWORD PTR 48[r12]	# MEM[(struct tuning_result_type *)tuning_result_242 + 48B], MEM[(struct
GAS LISTING /tmp/ccLUVin9.s 			page 508


 19205      30
 19206 0cd5 4C894C24 		mov	QWORD PTR 8[rsp], r9	#, MEM[(struct tuning_result_type *)tuning_result_242 + 48B]
 19206      08
 19207 0cda 498B4424 		mov	rax, QWORD PTR 40[r12]	# MEM[(struct tuning_result_type *)tuning_result_242 + 40B], MEM[(struc
 19207      28
 19208 0cdf 48890424 		mov	QWORD PTR [rsp], rax	#, MEM[(struct tuning_result_type *)tuning_result_242 + 40B]
 19209 0ce3 B8030000 		mov	eax, 3	#,
 19209      00
 19210 0ce8 4D8B4C24 		mov	r9, QWORD PTR 32[r12]	#, MEM[(struct tuning_result_type *)tuning_result_242 + 32B]
 19210      20
 19211 0ced 4D8B4424 		mov	r8, QWORD PTR 24[r12]	#, MEM[(struct tuning_result_type *)tuning_result_242 + 24B]
 19211      18
 19212 0cf2 C4C17B10 		vmovsd	xmm2, QWORD PTR 88[r12]	#, MEM[(struct tuning_result_type *)tuning_result_242 + 88B]
 19212      542458
 19213 0cf9 C4C17B10 		vmovsd	xmm1, QWORD PTR 64[r12]	#, MEM[(struct tuning_result_type *)tuning_result_242 + 64B]
 19213      4C2440
 19214 0d00 E8000000 		call	__printf_chk@PLT	#
 19214      00
 19215              	.LVL1118:
 19216              		.loc 3 107 10 view .LVU6356
 19217              	.LBE1196:
 19218              	.LBE1195:
 19219              	.LBE1194:
 19220              	.LBE1193:
1187:sieve_extend.c ****                 for (counter_t tuning_result_index=0; tuning_result_index<min(10,tuning_results); t
 19221              		.loc 1 1187 13 is_stmt 1 view .LVU6357
 19222              	# sieve_extend.c:1187:             if (option_verboselevel >= 3) {
1187:sieve_extend.c ****                 for (counter_t tuning_result_index=0; tuning_result_index<min(10,tuning_results); t
 19223              		.loc 1 1187 16 is_stmt 0 view .LVU6358
 19224 0d05 837C2468 		cmp	DWORD PTR 104[rsp], 2	# %sfp,
 19224      02
 19225 0d0a 0F84EEFC 		je	.L1432	#,
 19225      FFFF
 19226 0d10 498D5C24 		lea	rbx, 8[r12]	# ivtmp.765,
 19226      08
 19227              	.LBB1197:
 19228              	# sieve_extend.c:1188:                 for (counter_t tuning_result_index=0; tuning_result_index<mi
1188:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 19229              		.loc 1 1188 32 view .LVU6359
 19230 0d15 31ED     		xor	ebp, ebp	# tuning_result_index
 19231              	.L1433:
 19232              	.LVL1119:
1189:sieve_extend.c ****                 }
 19233              		.loc 1 1189 21 is_stmt 1 view .LVU6360
 19234              	.LBB1181:
 19235              	.LBI1181:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19236              		.loc 3 105 1 view .LVU6361
 19237              	.LBB1182:
 19238              		.loc 3 107 3 view .LVU6362
 19239              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19240              		.loc 3 107 10 is_stmt 0 view .LVU6363
 19241 0d17 488D3500 		lea	rsi, .LC58[rip]	#,
 19241      000000
 19242 0d1e BF010000 		mov	edi, 1	#,
 19242      00
 19243 0d23 31C0     		xor	eax, eax	#
GAS LISTING /tmp/ccLUVin9.s 			page 509


 19244              	.LBE1182:
 19245              	.LBE1181:
 19246              	# sieve_extend.c:1188:                 for (counter_t tuning_result_index=0; tuning_result_index<mi
1188:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 19247              		.loc 1 1188 118 view .LVU6364
 19248 0d25 4883C501 		add	rbp, 1	# tuning_result_index,
 19249              	.LVL1120:
 19250              	.LBB1184:
 19251              	.LBB1183:
 19252              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19253              		.loc 3 107 10 view .LVU6365
 19254 0d29 E8000000 		call	__printf_chk@PLT	#
 19254      00
 19255              	.LVL1121:
 19256              		.loc 3 107 10 view .LVU6366
 19257              	.LBE1183:
 19258              	.LBE1184:
1189:sieve_extend.c ****                 }
 19259              		.loc 1 1189 36 is_stmt 1 view .LVU6367
 19260              	.LBB1185:
 19261              	.LBI1185:
1083:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
 19262              		.loc 1 1083 20 view .LVU6368
 19263              	.LBB1186:
1084:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
 19264              		.loc 1 1084 5 view .LVU6369
 19265              	.LBB1187:
 19266              	.LBI1187:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19267              		.loc 3 105 1 view .LVU6370
 19268              	.LBB1188:
 19269              		.loc 3 107 3 view .LVU6371
 19270              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19271              		.loc 3 107 10 is_stmt 0 view .LVU6372
 19272 0d2e 488B7330 		mov	rsi, QWORD PTR 48[rbx]	# MEM[base: _224, offset: 48B], MEM[base: _224, offset: 48B]
 19273 0d32 BF010000 		mov	edi, 1	#,
 19273      00
 19274 0d37 488B4B08 		mov	rcx, QWORD PTR 8[rbx]	# MEM[base: _224, offset: 8B], MEM[base: _224, offset: 8B]
 19275 0d3b B8030000 		mov	eax, 3	#,
 19275      00
 19276 0d40 C5FB1043 		vmovsd	xmm0, QWORD PTR 72[rbx]	# MEM[base: _224, offset: 72B], MEM[base: _224, offset: 72B]
 19276      48
 19277 0d45 4883C360 		add	rbx, 96	# ivtmp.765,
 19278 0d49 48897424 		mov	QWORD PTR 24[rsp], rsi	#, MEM[base: _224, offset: 48B]
 19278      18
 19279 0d4e 488D3500 		lea	rsi, .LC53[rip]	#,
 19279      000000
 19280 0d55 4C8B43E0 		mov	r8, QWORD PTR -32[rbx]	# MEM[base: _224, offset: 64B], MEM[base: _224, offset: 64B]
 19281 0d59 4C894424 		mov	QWORD PTR 16[rsp], r8	#, MEM[base: _224, offset: 64B]
 19281      10
 19282 0d5e 4C8B53C8 		mov	r10, QWORD PTR -56[rbx]	# MEM[base: _224, offset: 40B], MEM[base: _224, offset: 40B]
 19283 0d62 4C895424 		mov	QWORD PTR 8[rsp], r10	#, MEM[base: _224, offset: 40B]
 19283      08
 19284 0d67 488B53C0 		mov	rdx, QWORD PTR -64[rbx]	# MEM[base: _224, offset: 32B], MEM[base: _224, offset: 32B]
 19285 0d6b 48891424 		mov	QWORD PTR [rsp], rdx	#, MEM[base: _224, offset: 32B]
 19286 0d6f 4C8B4BB8 		mov	r9, QWORD PTR -72[rbx]	#, MEM[base: _224, offset: 24B]
 19287 0d73 4C8B43B0 		mov	r8, QWORD PTR -80[rbx]	#, MEM[base: _224, offset: 16B]
GAS LISTING /tmp/ccLUVin9.s 			page 510


 19288 0d77 488B53A0 		mov	rdx, QWORD PTR -96[rbx]	#, MEM[base: _224, offset: 0B]
 19289 0d7b C5FB1053 		vmovsd	xmm2, QWORD PTR -16[rbx]	#, MEM[base: _224, offset: 80B]
 19289      F0
 19290 0d80 C5FB104B 		vmovsd	xmm1, QWORD PTR -40[rbx]	#, MEM[base: _224, offset: 56B]
 19290      D8
 19291 0d85 E8000000 		call	__printf_chk@PLT	#
 19291      00
 19292              	.LVL1122:
 19293              		.loc 3 107 10 view .LVU6373
 19294              	.LBE1188:
 19295              	.LBE1187:
 19296              	.LBE1186:
 19297              	.LBE1185:
1188:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 19298              		.loc 1 1188 99 is_stmt 1 view .LVU6374
1188:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 19299              		.loc 1 1188 55 view .LVU6375
 19300              	# sieve_extend.c:1188:                 for (counter_t tuning_result_index=0; tuning_result_index<mi
1188:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 19301              		.loc 1 1188 75 is_stmt 0 view .LVU6376
 19302 0d8a 4983FF0A 		cmp	r15, 10	# tuning_results,
 19303 0d8e 4C89F1   		mov	rcx, r14	# tmp424, tmp476
 19304 0d91 490F46CF 		cmovbe	rcx, r15	# tuning_results,, tmp424
 19305              	# sieve_extend.c:1188:                 for (counter_t tuning_result_index=0; tuning_result_index<mi
1188:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 19306              		.loc 1 1188 17 view .LVU6377
 19307 0d95 4839CD   		cmp	rbp, rcx	# tuning_result_index, tmp424
 19308 0d98 0F8279FF 		jb	.L1433	#,
 19308      FFFF
 19309 0d9e E95BFCFF 		jmp	.L1432	#
 19309      FF
 19310              	.LVL1123:
 19311              	.L1524:
1188:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 19312              		.loc 1 1188 17 view .LVU6378
 19313              	.LBE1197:
 19314              	.LBE1142:
 19315              	.LBE1141:
 19316              	.LBE1140:
1484:sieve_extend.c ****     }
 19317              		.loc 1 1484 39 is_stmt 1 view .LVU6379
 19318              	.LBB1216:
 19319              	.LBI1216:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19320              		.loc 3 105 1 view .LVU6380
 19321              	.LBB1217:
 19322              		.loc 3 107 3 view .LVU6381
 19323              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19324              		.loc 3 107 10 is_stmt 0 view .LVU6382
 19325 0da3 488D3D00 		lea	rdi, .LC50[rip]	#,
 19325      000000
 19326              	.LBE1217:
 19327              	.LBE1216:
 19328              	# sieve_extend.c:1487:     counter_t best_blocksize_bits = default_blocksize;
1487:sieve_extend.c ****     if (option_tunelevel) {
 19329              		.loc 1 1487 15 view .LVU6383
 19330 0daa 41BC00FC 		mov	r12d, 261120	# best_result$blocksize_bits,
GAS LISTING /tmp/ccLUVin9.s 			page 511


 19330      0300
 19331              	.LBB1219:
 19332              	.LBB1218:
 19333              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19334              		.loc 3 107 10 view .LVU6384
 19335 0db0 E8000000 		call	puts@PLT	#
 19335      00
 19336              	.LVL1124:
 19337              		.loc 3 107 10 view .LVU6385
 19338              	.LBE1218:
 19339              	.LBE1219:
1487:sieve_extend.c ****     if (option_tunelevel) {
 19340              		.loc 1 1487 5 is_stmt 1 view .LVU6386
1488:sieve_extend.c ****         tuning_result_type tuning_result = tune(option_tunelevel, option_maxFactor, option_verbosel
 19341              		.loc 1 1488 5 view .LVU6387
 19342              	# sieve_extend.c:1488:     if (option_tunelevel) {
1488:sieve_extend.c ****         tuning_result_type tuning_result = tune(option_tunelevel, option_maxFactor, option_verbosel
 19343              		.loc 1 1488 9 is_stmt 0 view .LVU6388
 19344 0db5 448B8424 		mov	r8d, DWORD PTR 172[rsp]	# option_tunelevel.41_63, option_tunelevel
 19344      AC000000 
 19345              	# sieve_extend.c:1488:     if (option_tunelevel) {
1488:sieve_extend.c ****         tuning_result_type tuning_result = tune(option_tunelevel, option_maxFactor, option_verbosel
 19346              		.loc 1 1488 8 view .LVU6389
 19347 0dbd 4585C0   		test	r8d, r8d	# option_tunelevel.41_63
 19348 0dc0 0F858701 		jne	.L1531	#,
 19348      0000
 19349              	.LVL1125:
 19350              	.L1411:
 19351              	.LBB1220:
1498:sieve_extend.c ****         counter_t passes = 0;
 19352              		.loc 1 1498 9 is_stmt 1 view .LVU6390
 19353              	# sieve_extend.c:1498:         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize
1498:sieve_extend.c ****         counter_t passes = 0;
 19354              		.loc 1 1498 12 is_stmt 0 view .LVU6391
 19355 0dc6 83BC24A8 		cmp	DWORD PTR 168[rsp], 0	# option_verboselevel,
 19355      00000000 
 19356 0dce 0F8E1AF6 		jle	.L1438	#,
 19356      FFFF
1498:sieve_extend.c ****         counter_t passes = 0;
 19357              		.loc 1 1498 39 is_stmt 1 discriminator 1 view .LVU6392
 19358              	.LVL1126:
 19359              	.LBB1124:
 19360              	.LBI1124:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19361              		.loc 3 105 1 discriminator 1 view .LVU6393
 19362              	.LBB1125:
 19363              		.loc 3 107 3 discriminator 1 view .LVU6394
 19364              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19365              		.loc 3 107 10 is_stmt 0 discriminator 1 view .LVU6395
 19366 0dd4 4C8B0D00 		mov	r9, QWORD PTR global_VECTORSTEP_FASTER[rip]	#, global_VECTORSTEP_FASTER
 19366      000000
 19367 0ddb 4C89E2   		mov	rdx, r12	#, best_result$blocksize_bits
 19368 0dde 4C8B0500 		mov	r8, QWORD PTR global_MEDIUMSTEP_FASTER[rip]	#, global_MEDIUMSTEP_FASTER
 19368      000000
 19369 0de5 488D3500 		lea	rsi, .LC60[rip]	#,
 19369      000000
 19370 0dec 488B0D00 		mov	rcx, QWORD PTR global_SMALLSTEP_FASTER[rip]	#, global_SMALLSTEP_FASTER
GAS LISTING /tmp/ccLUVin9.s 			page 512


 19370      000000
 19371 0df3 BF010000 		mov	edi, 1	#,
 19371      00
 19372 0df8 31C0     		xor	eax, eax	#
 19373 0dfa E8000000 		call	__printf_chk@PLT	#
 19373      00
 19374              	.LVL1127:
 19375 0dff E9EAF5FF 		jmp	.L1438	#
 19375      FF
 19376              	.LVL1128:
 19377              	.L1530:
 19378              		.loc 3 107 10 discriminator 1 view .LVU6396
 19379              	.LBE1125:
 19380              	.LBE1124:
 19381              	.LBE1220:
 19382              	.LBB1221:
 19383              	.LBB1213:
 19384              	.LBB1210:
1202:sieve_extend.c ****     if (option_verboselevel >= 1) {
 19385              		.loc 1 1202 5 is_stmt 1 view .LVU6397
 19386              	# sieve_extend.c:1202:     tuning_result_type best_result = tuning_result[0];
1202:sieve_extend.c ****     if (option_verboselevel >= 1) {
 19387              		.loc 1 1202 24 is_stmt 0 view .LVU6398
 19388 0e04 4C8B7C24 		mov	r15, QWORD PTR 64[rsp]	# tuning_result, %sfp
 19388      40
 19389              	.LVL1129:
 19390              	# sieve_extend.c:1203:     if (option_verboselevel >= 1) {
1203:sieve_extend.c ****         tuning_result_index = 0;
 19391              		.loc 1 1203 8 view .LVU6399
 19392 0e09 837C2468 		cmp	DWORD PTR 104[rsp], 0	# %sfp,
 19392      00
 19393              	# sieve_extend.c:1202:     tuning_result_type best_result = tuning_result[0];
1202:sieve_extend.c ****     if (option_verboselevel >= 1) {
 19394              		.loc 1 1202 24 view .LVU6400
 19395 0e0e 4D8B6708 		mov	r12, QWORD PTR 8[r15]	# best_result$blocksize_bits, MEM[(struct tuning_result_type *)tuning_re
 19396              	.LVL1130:
1202:sieve_extend.c ****     if (option_verboselevel >= 1) {
 19397              		.loc 1 1202 24 view .LVU6401
 19398 0e12 4D8B7720 		mov	r14, QWORD PTR 32[r15]	# best_result$smallstep_faster, MEM[(struct tuning_result_type *)tuning
 19399 0e16 498B6F28 		mov	rbp, QWORD PTR 40[r15]	# best_result$mediumstep_faster, MEM[(struct tuning_result_type *)tunin
 19400 0e1a 498B5F30 		mov	rbx, QWORD PTR 48[r15]	# best_result$vectorstep_faster, MEM[(struct tuning_result_type *)tunin
1203:sieve_extend.c ****         tuning_result_index = 0;
 19401              		.loc 1 1203 5 is_stmt 1 view .LVU6402
 19402              	# sieve_extend.c:1203:     if (option_verboselevel >= 1) {
1203:sieve_extend.c ****         tuning_result_index = 0;
 19403              		.loc 1 1203 8 is_stmt 0 view .LVU6403
 19404 0e1e 7E6E     		jle	.L1436	#,
1204:sieve_extend.c ****         printf(".Best result:"); tuning_result_print(tuning_result[tuning_result_index]);
 19405              		.loc 1 1204 9 is_stmt 1 view .LVU6404
 19406              	.LVL1131:
1205:sieve_extend.c ****     }
 19407              		.loc 1 1205 9 view .LVU6405
 19408              	.LBB1198:
 19409              	.LBI1198:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19410              		.loc 3 105 1 view .LVU6406
 19411              	.LBB1199:
GAS LISTING /tmp/ccLUVin9.s 			page 513


 19412              		.loc 3 107 3 view .LVU6407
 19413              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19414              		.loc 3 107 10 is_stmt 0 view .LVU6408
 19415 0e20 488D3500 		lea	rsi, .LC59[rip]	#,
 19415      000000
 19416 0e27 BF010000 		mov	edi, 1	#,
 19416      00
 19417 0e2c 31C0     		xor	eax, eax	#
 19418 0e2e E8000000 		call	__printf_chk@PLT	#
 19418      00
 19419              	.LVL1132:
 19420              		.loc 3 107 10 view .LVU6409
 19421              	.LBE1199:
 19422              	.LBE1198:
1205:sieve_extend.c ****     }
 19423              		.loc 1 1205 34 is_stmt 1 view .LVU6410
 19424              	.LBB1200:
 19425              	.LBI1200:
1083:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
 19426              		.loc 1 1083 20 view .LVU6411
 19427              	.LBB1201:
1084:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
 19428              		.loc 1 1084 5 view .LVU6412
 19429              	.LBB1202:
 19430              	.LBI1202:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19431              		.loc 3 105 1 view .LVU6413
 19432              	.LBB1203:
 19433              		.loc 3 107 3 view .LVU6414
 19434              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19435              		.loc 3 107 10 is_stmt 0 view .LVU6415
 19436 0e33 4D8B4F38 		mov	r9, QWORD PTR 56[r15]	# MEM[(struct tuning_result_type *)tuning_result_242 + 56B], MEM[(struct
 19437 0e37 BF010000 		mov	edi, 1	#,
 19437      00
 19438 0e3c C4C17B10 		vmovsd	xmm0, QWORD PTR 80[r15]	# MEM[(struct tuning_result_type *)tuning_result_242 + 80B], MEM[(s
 19438      4750
 19439 0e42 498B4F10 		mov	rcx, QWORD PTR 16[r15]	# MEM[(struct tuning_result_type *)tuning_result_242 + 16B], MEM[(struc
 19440 0e46 498B5708 		mov	rdx, QWORD PTR 8[r15]	# MEM[(struct tuning_result_type *)tuning_result_242 + 8B], MEM[(struct 
 19441 0e4a 4C894C24 		mov	QWORD PTR 24[rsp], r9	#, MEM[(struct tuning_result_type *)tuning_result_242 + 56B]
 19441      18
 19442 0e4f 498B4748 		mov	rax, QWORD PTR 72[r15]	# MEM[(struct tuning_result_type *)tuning_result_242 + 72B], MEM[(struc
 19443 0e53 48894424 		mov	QWORD PTR 16[rsp], rax	#, MEM[(struct tuning_result_type *)tuning_result_242 + 72B]
 19443      10
 19444 0e58 B8030000 		mov	eax, 3	#,
 19444      00
 19445 0e5d 498B7730 		mov	rsi, QWORD PTR 48[r15]	# MEM[(struct tuning_result_type *)tuning_result_242 + 48B], MEM[(struc
 19446 0e61 48897424 		mov	QWORD PTR 8[rsp], rsi	#, MEM[(struct tuning_result_type *)tuning_result_242 + 48B]
 19446      08
 19447 0e66 488D3500 		lea	rsi, .LC53[rip]	#,
 19447      000000
 19448 0e6d 4D8B4728 		mov	r8, QWORD PTR 40[r15]	# MEM[(struct tuning_result_type *)tuning_result_242 + 40B], MEM[(struct
 19449 0e71 4C890424 		mov	QWORD PTR [rsp], r8	#, MEM[(struct tuning_result_type *)tuning_result_242 + 40B]
 19450 0e75 4D8B4F20 		mov	r9, QWORD PTR 32[r15]	#, MEM[(struct tuning_result_type *)tuning_result_242 + 32B]
 19451 0e79 4D8B4718 		mov	r8, QWORD PTR 24[r15]	#, MEM[(struct tuning_result_type *)tuning_result_242 + 24B]
 19452 0e7d C4C17B10 		vmovsd	xmm2, QWORD PTR 88[r15]	#, MEM[(struct tuning_result_type *)tuning_result_242 + 88B]
 19452      5758
 19453 0e83 C4C17B10 		vmovsd	xmm1, QWORD PTR 64[r15]	#, MEM[(struct tuning_result_type *)tuning_result_242 + 64B]
GAS LISTING /tmp/ccLUVin9.s 			page 514


 19453      4F40
 19454 0e89 E8000000 		call	__printf_chk@PLT	#
 19454      00
 19455              	.LVL1133:
 19456              	.L1436:
 19457              		.loc 3 107 10 view .LVU6416
 19458              	.LBE1203:
 19459              	.LBE1202:
 19460              	.LBE1201:
 19461              	.LBE1200:
1208:sieve_extend.c ****     return best_result;
 19462              		.loc 1 1208 5 is_stmt 1 view .LVU6417
 19463 0e8e 488B7C24 		mov	rdi, QWORD PTR 64[rsp]	#, %sfp
 19463      40
 19464 0e93 E8000000 		call	free@PLT	#
 19464      00
 19465              	.LVL1134:
1209:sieve_extend.c **** }
 19466              		.loc 1 1209 5 view .LVU6418
1209:sieve_extend.c **** }
 19467              		.loc 1 1209 5 is_stmt 0 view .LVU6419
 19468              	.LBE1210:
 19469              	.LBE1213:
1490:sieve_extend.c ****         global_MEDIUMSTEP_FASTER = tuning_result.mediumstep_faster;
 19470              		.loc 1 1490 9 is_stmt 1 view .LVU6420
 19471              	# sieve_extend.c:1490:         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
1490:sieve_extend.c ****         global_MEDIUMSTEP_FASTER = tuning_result.mediumstep_faster;
 19472              		.loc 1 1490 33 is_stmt 0 view .LVU6421
 19473 0e98 4C893500 		mov	QWORD PTR global_SMALLSTEP_FASTER[rip], r14	# global_SMALLSTEP_FASTER, best_result$smallstep_f
 19473      000000
1491:sieve_extend.c ****         global_VECTORSTEP_FASTER = tuning_result.vectorstep_faster;
 19474              		.loc 1 1491 9 is_stmt 1 view .LVU6422
 19475              	.LBE1221:
 19476              	# sieve_extend.c:1497:     if (best_blocksize_bits > 0) {
1497:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 19477              		.loc 1 1497 8 is_stmt 0 view .LVU6423
 19478 0e9f 4D85E4   		test	r12, r12	# best_result$blocksize_bits
 19479              	.LBB1222:
 19480              	# sieve_extend.c:1491:         global_MEDIUMSTEP_FASTER = tuning_result.mediumstep_faster;
1491:sieve_extend.c ****         global_VECTORSTEP_FASTER = tuning_result.vectorstep_faster;
 19481              		.loc 1 1491 34 view .LVU6424
 19482 0ea2 48892D00 		mov	QWORD PTR global_MEDIUMSTEP_FASTER[rip], rbp	# global_MEDIUMSTEP_FASTER, best_result$mediumste
 19482      000000
1492:sieve_extend.c ****         best_blocksize_bits = tuning_result.blocksize_bits;
 19483              		.loc 1 1492 9 is_stmt 1 view .LVU6425
 19484              	# sieve_extend.c:1492:         global_VECTORSTEP_FASTER = tuning_result.vectorstep_faster;
1492:sieve_extend.c ****         best_blocksize_bits = tuning_result.blocksize_bits;
 19485              		.loc 1 1492 34 is_stmt 0 view .LVU6426
 19486 0ea9 48891D00 		mov	QWORD PTR global_VECTORSTEP_FASTER[rip], rbx	# global_VECTORSTEP_FASTER, best_result$vectorste
 19486      000000
1493:sieve_extend.c ****     }
 19487              		.loc 1 1493 9 is_stmt 1 view .LVU6427
 19488              	.LVL1135:
1493:sieve_extend.c ****     }
 19489              		.loc 1 1493 9 is_stmt 0 view .LVU6428
 19490              	.LBE1222:
1496:sieve_extend.c ****     if (best_blocksize_bits > 0) {
GAS LISTING /tmp/ccLUVin9.s 			page 515


 19491              		.loc 1 1496 5 is_stmt 1 view .LVU6429
1497:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 19492              		.loc 1 1497 5 view .LVU6430
 19493              	# sieve_extend.c:1497:     if (best_blocksize_bits > 0) {
1497:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 19494              		.loc 1 1497 8 is_stmt 0 view .LVU6431
 19495 0eb0 0F848CF6 		je	.L1437	#,
 19495      FFFF
 19496 0eb6 E90BFFFF 		jmp	.L1411	#
 19496      FF
 19497              	.LVL1136:
 19498              	.L1446:
1497:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 19499              		.loc 1 1497 8 view .LVU6432
 19500 0ebb 488D3D00 		lea	rdi, CSWTCH.120[rip]	# tmp339,
 19500      000000
 19501 0ec2 4C8D0D00 		lea	r9, CSWTCH.121[rip]	# tmp341,
 19501      000000
 19502 0ec9 488D2D00 		lea	rbp, CSWTCH.122[rip]	# tmp343,
 19502      000000
 19503              	.LVL1137:
1497:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 19504              		.loc 1 1497 8 view .LVU6433
 19505 0ed0 488D1D00 		lea	rbx, CSWTCH.123[rip]	# tmp345,
 19505      000000
 19506              	.LVL1138:
1497:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 19507              		.loc 1 1497 8 view .LVU6434
 19508 0ed7 4A8B0CC7 		mov	rcx, QWORD PTR [rdi+r8*8]	# smallstep_faster_steps, CSWTCH.120
 19509 0edb 4F8B34C1 		mov	r14, QWORD PTR [r9+r8*8]	# vectorstep_faster_steps, CSWTCH.121
 19510 0edf 4E8B7CC5 		mov	r15, QWORD PTR 0[rbp+r8*8]	# freebits_steps, CSWTCH.122
 19510      00
 19511              	.LVL1139:
1497:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 19512              		.loc 1 1497 8 view .LVU6435
 19513 0ee4 C4A17B10 		vmovsd	xmm7, QWORD PTR [rbx+r8*8]	# sample_duration, CSWTCH.123
 19513      3CC3
 19514 0eea 48898C24 		mov	QWORD PTR 152[rsp], rcx	# %sfp, smallstep_faster_steps
 19514      98000000 
 19515 0ef2 4C89B424 		mov	QWORD PTR 144[rsp], r14	# %sfp, vectorstep_faster_steps
 19515      90000000 
 19516 0efa 4C897C24 		mov	QWORD PTR 112[rsp], r15	# %sfp, freebits_steps
 19516      70
 19517              	.LBB1223:
 19518              	# sieve_extend.c:1415:     for (int arg=1; arg < argc; arg++) {
1415:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 19519              		.loc 1 1415 14 view .LVU6436
 19520 0eff 48C74424 		mov	QWORD PTR 120[rsp], 8	# %sfp,
 19520      78080000 
 19520      00
 19521 0f08 C5FB11BC 		vmovsd	QWORD PTR 128[rsp], xmm7	# %sfp, sample_duration
 19521      24800000 
 19521      00
 19522              	.L1412:
 19523              	.LVL1140:
1415:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 19524              		.loc 1 1415 14 view .LVU6437
GAS LISTING /tmp/ccLUVin9.s 			page 516


 19525              	.LBE1223:
 19526              	.LBB1224:
 19527              	.LBB1214:
 19528              	.LBB1211:
1134:sieve_extend.c ****     if (option_verboselevel >= 2) printf("\n");
 19529              		.loc 1 1134 5 is_stmt 1 view .LVU6438
 19530              	# sieve_extend.c:1134:     if (option_verboselevel >= 1) printf("Tuning..."); 
1134:sieve_extend.c ****     if (option_verboselevel >= 2) printf("\n");
 19531              		.loc 1 1134 8 is_stmt 0 view .LVU6439
 19532 0f11 448B6C24 		mov	r13d, DWORD PTR 104[rsp]	# option_verboselevel.42_64, %sfp
 19532      68
 19533              	.LVL1141:
1134:sieve_extend.c ****     if (option_verboselevel >= 2) printf("\n");
 19534              		.loc 1 1134 8 view .LVU6440
 19535 0f16 4585ED   		test	r13d, r13d	# option_verboselevel.42_64
 19536 0f19 0F8EEDF7 		jle	.L1414	#,
 19536      FFFF
1134:sieve_extend.c ****     if (option_verboselevel >= 2) printf("\n");
 19537              		.loc 1 1134 35 is_stmt 1 view .LVU6441
 19538              	.LVL1142:
 19539              	.LBB1204:
 19540              	.LBI1204:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19541              		.loc 3 105 1 view .LVU6442
 19542              	.LBB1205:
 19543              		.loc 3 107 3 view .LVU6443
 19544              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19545              		.loc 3 107 10 is_stmt 0 view .LVU6444
 19546 0f1f 31C0     		xor	eax, eax	#
 19547 0f21 488D3500 		lea	rsi, .LC51[rip]	#,
 19547      000000
 19548 0f28 BF010000 		mov	edi, 1	#,
 19548      00
 19549              	.LBE1205:
 19550              	.LBE1204:
 19551              	# sieve_extend.c:1135:     if (option_verboselevel >= 2) printf("\n");
1135:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 19552              		.loc 1 1135 8 view .LVU6445
 19553 0f2d 4489EB   		mov	ebx, r13d	# option_verboselevel.42_64, option_verboselevel.42_64
 19554              	.LBB1207:
 19555              	.LBB1206:
 19556              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19557              		.loc 3 107 10 view .LVU6446
 19558 0f30 E8000000 		call	__printf_chk@PLT	#
 19558      00
 19559              	.LVL1143:
 19560              		.loc 3 107 10 view .LVU6447
 19561              	.LBE1206:
 19562              	.LBE1207:
1135:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 19563              		.loc 1 1135 5 is_stmt 1 view .LVU6448
 19564              	# sieve_extend.c:1135:     if (option_verboselevel >= 2) printf("\n");
1135:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 19565              		.loc 1 1135 8 is_stmt 0 view .LVU6449
 19566 0f35 83EB01   		sub	ebx, 1	# option_verboselevel.42_64,
 19567 0f38 0F84CEF7 		je	.L1414	#,
 19567      FFFF
GAS LISTING /tmp/ccLUVin9.s 			page 517


1135:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 19568              		.loc 1 1135 35 is_stmt 1 view .LVU6450
 19569              	.LVL1144:
 19570              	.LBB1208:
 19571              	.LBI1208:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19572              		.loc 3 105 1 view .LVU6451
 19573              	.LBB1209:
 19574              		.loc 3 107 3 view .LVU6452
 19575              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19576              		.loc 3 107 10 is_stmt 0 view .LVU6453
 19577 0f3e BF0A0000 		mov	edi, 10	#,
 19577      00
 19578 0f43 E8000000 		call	putchar@PLT	#
 19578      00
 19579              	.LVL1145:
 19580 0f48 E9BFF7FF 		jmp	.L1414	#
 19580      FF
 19581              	.LVL1146:
 19582              	.L1531:
 19583              		.loc 3 107 10 view .LVU6454
 19584              	.LBE1209:
 19585              	.LBE1208:
 19586              	.LBE1211:
 19587              	.LBE1214:
1489:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
 19588              		.loc 1 1489 9 is_stmt 1 view .LVU6455
 19589              	# sieve_extend.c:1489:         tuning_result_type tuning_result = tune(option_tunelevel, option_max
1489:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
 19590              		.loc 1 1489 44 is_stmt 0 view .LVU6456
 19591 0f4d 8B9424A8 		mov	edx, DWORD PTR 168[rsp]	# option_verboselevel.42_64, option_verboselevel
 19591      000000
 19592 0f54 4183E801 		sub	r8d, 1	#,
 19593 0f58 488BB424 		mov	rsi, QWORD PTR 176[rsp]	# option_maxFactor.43_65, option_maxFactor
 19593      B0000000 
 19594 0f60 4183F802 		cmp	r8d, 2	# _215,
 19595 0f64 89542468 		mov	DWORD PTR 104[rsp], edx	# %sfp, option_verboselevel.42_64
 19596 0f68 4889B424 		mov	QWORD PTR 136[rsp], rsi	# %sfp, option_maxFactor.43_65
 19596      88000000 
 19597              	.LVL1147:
 19598              	.LBB1215:
1091:sieve_extend.c ****     counter_t best_blocksize_bits = default_blocksize;
 19599              		.loc 1 1091 27 is_stmt 1 view .LVU6457
 19600              	.LBB1212:
1092:sieve_extend.c **** 
 19601              		.loc 1 1092 5 view .LVU6458
1094:sieve_extend.c ****     best_blocksize_bits = 0;
 19602              		.loc 1 1094 5 view .LVU6459
1095:sieve_extend.c ****     counter_t best_smallstep_faster = 0;
 19603              		.loc 1 1095 5 view .LVU6460
1096:sieve_extend.c ****     counter_t best_mediumstep_faster = 0;
 19604              		.loc 1 1096 5 view .LVU6461
1097:sieve_extend.c ****     counter_t best_vectorstep_faster = 0;
 19605              		.loc 1 1097 5 view .LVU6462
1098:sieve_extend.c ****     counter_t smallstep_faster_steps = 4;
 19606              		.loc 1 1098 5 view .LVU6463
1099:sieve_extend.c ****     counter_t mediumstep_faster_steps = 4;
GAS LISTING /tmp/ccLUVin9.s 			page 518


 19607              		.loc 1 1099 5 view .LVU6464
1100:sieve_extend.c ****     counter_t vectorstep_faster_steps = 32;
 19608              		.loc 1 1100 5 view .LVU6465
1101:sieve_extend.c ****     counter_t freebits_steps = anticiped_cache_line_bytesize;
 19609              		.loc 1 1101 5 view .LVU6466
1102:sieve_extend.c ****     counter_t sample_max = default_sample_max;
 19610              		.loc 1 1102 5 view .LVU6467
1103:sieve_extend.c ****     double sample_duration = default_sample_duration;
 19611              		.loc 1 1103 5 view .LVU6468
1104:sieve_extend.c **** 
 19612              		.loc 1 1104 5 view .LVU6469
1107:sieve_extend.c ****         case 1:
 19613              		.loc 1 1107 5 view .LVU6470
 19614 0f70 0F8645FF 		jbe	.L1446	#,
 19614      FFFF
 19615 0f76 C5FB1005 		vmovsd	xmm0, QWORD PTR .LC28[rip]	# sample_duration,
 19615      00000000 
 19616 0f7e 48C74424 		mov	QWORD PTR 120[rsp], 5	# %sfp,
 19616      78050000 
 19616      00
 19617 0f87 48C74424 		mov	QWORD PTR 112[rsp], 128	# %sfp,
 19617      70800000 
 19617      00
 19618 0f90 48C78424 		mov	QWORD PTR 144[rsp], 32	# %sfp,
 19618      90000000 
 19618      20000000 
 19619 0f9c 48C78424 		mov	QWORD PTR 152[rsp], 4	# %sfp,
 19619      98000000 
 19619      04000000 
 19620 0fa8 C5FB1184 		vmovsd	QWORD PTR 128[rsp], xmm0	# %sfp, sample_duration
 19620      24800000 
 19620      00
 19621 0fb1 E95BFFFF 		jmp	.L1412	#
 19621      FF
 19622              	.LVL1148:
 19623              	.L1517:
1107:sieve_extend.c ****         case 1:
 19624              		.loc 1 1107 5 is_stmt 0 view .LVU6471
 19625              	.LBE1212:
 19626              	.LBE1215:
 19627              	.LBE1224:
 19628              	.LBB1225:
1418:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option_verboselevel > 4) {
 19629              		.loc 1 1418 34 is_stmt 1 discriminator 1 view .LVU6472
 19630              	.LBB1061:
 19631              	.LBI1061:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19632              		.loc 3 98 1 discriminator 1 view .LVU6473
 19633              	.LBB1062:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19634              		.loc 3 100 3 discriminator 1 view .LVU6474
 19635              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19636              		.loc 3 100 10 is_stmt 0 discriminator 1 view .LVU6475
 19637 0fb6 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 19637      000000
 19638 0fbd BA1B0000 		mov	edx, 27	#,
GAS LISTING /tmp/ccLUVin9.s 			page 519


 19638      00
 19639 0fc2 BE010000 		mov	esi, 1	#,
 19639      00
 19640 0fc7 488D3D00 		lea	rdi, .LC32[rip]	#,
 19640      000000
 19641 0fce E8000000 		call	fwrite@PLT	#
 19641      00
 19642              	.LVL1149:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19643              		.loc 3 100 10 discriminator 1 view .LVU6476
 19644              	.LBE1062:
 19645              	.LBE1061:
1418:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option_verboselevel > 4) {
 19646              		.loc 1 1418 83 is_stmt 1 discriminator 1 view .LVU6477
 19647 0fd3 E903F6FF 		jmp	.L1515	#
 19647      FF
 19648              	.L1394:
1428:sieve_extend.c ****             }
 19649              		.loc 1 1428 17 view .LVU6478
 19650              	.LVL1150:
 19651              	.LBB1063:
 19652              	.LBI1058:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19653              		.loc 3 98 1 view .LVU6479
 19654              	.LBB1060:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19655              		.loc 3 100 3 view .LVU6480
 19656              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19657              		.loc 3 100 10 is_stmt 0 view .LVU6481
 19658 0fd8 498B0F   		mov	rcx, QWORD PTR [r15]	#, *_29
 19659 0fdb 488D1500 		lea	rdx, .LC38[rip]	#,
 19659      000000
 19660 0fe2 E9E1F5FF 		jmp	.L1514	#
 19660      FF
 19661              	.LVL1151:
 19662              	.L1398:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19663              		.loc 3 100 10 view .LVU6482
 19664              	.LBE1060:
 19665              	.LBE1063:
1435:sieve_extend.c ****             }
 19666              		.loc 1 1435 17 is_stmt 1 view .LVU6483
 19667              	.LBB1064:
 19668              	.LBI1064:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19669              		.loc 3 98 1 view .LVU6484
 19670              	.LBB1065:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19671              		.loc 3 100 3 view .LVU6485
 19672              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19673              		.loc 3 100 10 is_stmt 0 view .LVU6486
 19674 0fe7 498B0F   		mov	rcx, QWORD PTR [r15]	#, *_41
 19675 0fea 488D1500 		lea	rdx, .LC43[rip]	#,
 19675      000000
 19676 0ff1 E9D2F5FF 		jmp	.L1514	#
GAS LISTING /tmp/ccLUVin9.s 			page 520


 19676      FF
 19677              	.LVL1152:
 19678              	.L1520:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19679              		.loc 3 100 10 view .LVU6487
 19680              	.LBE1065:
 19681              	.LBE1064:
1426:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tunelevel > 4) {
 19682              		.loc 1 1426 34 is_stmt 1 discriminator 1 view .LVU6488
 19683              	.LBB1066:
 19684              	.LBI1066:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19685              		.loc 3 98 1 discriminator 1 view .LVU6489
 19686              	.LBB1067:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19687              		.loc 3 100 3 discriminator 1 view .LVU6490
 19688              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19689              		.loc 3 100 10 is_stmt 0 discriminator 1 view .LVU6491
 19690 0ff6 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 19690      000000
 19691 0ffd 488D3D00 		lea	rdi, .LC37[rip]	#,
 19691      000000
 19692 1004 BA180000 		mov	edx, 24	#,
 19692      00
 19693 1009 BE010000 		mov	esi, 1	#,
 19693      00
 19694 100e E8000000 		call	fwrite@PLT	#
 19694      00
 19695              	.LVL1153:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19696              		.loc 3 100 10 discriminator 1 view .LVU6492
 19697              	.LBE1067:
 19698              	.LBE1066:
1426:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tunelevel > 4) {
 19699              		.loc 1 1426 80 is_stmt 1 discriminator 1 view .LVU6493
 19700 1013 498B3C24 		mov	rdi, QWORD PTR [r12]	#, *argv_161(D)
 19701 1017 E8000000 		call	usage	#
 19701      00
 19702              	.LVL1154:
 19703              	.L1528:
1426:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tunelevel > 4) {
 19704              		.loc 1 1426 80 is_stmt 0 discriminator 1 view .LVU6494
 19705              	.LBE1225:
 19706              	# sieve_extend.c:1522: }
 19707              		.loc 1 1522 1 view .LVU6495
 19708 101c E8000000 		call	__stack_chk_fail@PLT	#
 19708      00
 19709              	.LVL1155:
 19710              	.L1523:
 19711              	.LBB1226:
1433:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 19712              		.loc 1 1433 34 is_stmt 1 discriminator 1 view .LVU6496
 19713              	.LBB1068:
 19714              	.LBI1068:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19715              		.loc 3 98 1 discriminator 1 view .LVU6497
GAS LISTING /tmp/ccLUVin9.s 			page 521


 19716              	.LBB1069:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19717              		.loc 3 100 3 discriminator 1 view .LVU6498
 19718              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19719              		.loc 3 100 10 is_stmt 0 discriminator 1 view .LVU6499
 19720 1021 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 19720      000000
 19721 1028 488D3D00 		lea	rdi, .LC41[rip]	#,
 19721      000000
 19722 102f BA1A0000 		mov	edx, 26	#,
 19722      00
 19723 1034 BE010000 		mov	esi, 1	#,
 19723      00
 19724 1039 E8000000 		call	fwrite@PLT	#
 19724      00
 19725              	.LVL1156:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19726              		.loc 3 100 10 discriminator 1 view .LVU6500
 19727              	.LBE1069:
 19728              	.LBE1068:
1433:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 19729              		.loc 1 1433 82 is_stmt 1 discriminator 1 view .LVU6501
 19730 103e 498B3C24 		mov	rdi, QWORD PTR [r12]	#, *argv_161(D)
 19731 1042 E8000000 		call	usage	#
 19731      00
 19732              	.LVL1157:
 19733              	.LBE1226:
 19734              		.cfi_endproc
 19735              	.LFE99:
 19737              		.section	.rodata
 19738              		.align 16
 19741              	CSWTCH.123:
 19742 0000 9A999999 		.long	2576980378
 19743 0004 9999B93F 		.long	1069128089
 19744 0008 9A999999 		.long	2576980378
 19745 000c 9999C93F 		.long	1070176665
 19746 0010 9A999999 		.long	2576980378
 19747 0014 9999C93F 		.long	1070176665
 19748 0018 00000000 		.align 16
 19748      00000000 
 19751              	CSWTCH.122:
 19752 0020 00080000 		.quad	2048
 19752      00000000 
 19753 0028 00040000 		.quad	1024
 19753      00000000 
 19754 0030 40000000 		.quad	64
 19754      00000000 
 19755 0038 00000000 		.align 16
 19755      00000000 
 19758              	CSWTCH.121:
 19759 0040 20000000 		.quad	32
 19759      00000000 
 19760 0048 10000000 		.quad	16
 19760      00000000 
 19761 0050 04000000 		.quad	4
 19761      00000000 
GAS LISTING /tmp/ccLUVin9.s 			page 522


 19762 0058 00000000 		.align 16
 19762      00000000 
 19765              	CSWTCH.120:
 19766 0060 10000000 		.quad	16
 19766      00000000 
 19767 0068 08000000 		.quad	8
 19767      00000000 
 19768 0070 04000000 		.quad	4
 19768      00000000 
 19769              		.globl	global_VECTORSTEP_FASTER
 19770              		.data
 19771              		.align 8
 19774              	global_VECTORSTEP_FASTER:
 19775 0000 80000000 		.quad	128
 19775      00000000 
 19776              		.globl	global_MEDIUMSTEP_FASTER
 19777              		.bss
 19778              		.align 8
 19781              	global_MEDIUMSTEP_FASTER:
 19782 0000 00000000 		.zero	8
 19782      00000000 
 19783              		.globl	global_SMALLSTEP_FASTER
 19784              		.align 8
 19787              	global_SMALLSTEP_FASTER:
 19788 0008 00000000 		.zero	8
 19788      00000000 
 19789              		.section	.rodata.cst32,"aM",@progbits,32
 19790              		.align 32
 19791              	.LC0:
 19792 0000 00000000 		.quad	0
 19792      00000000 
 19793 0008 01000000 		.quad	1
 19793      00000000 
 19794 0010 02000000 		.quad	2
 19794      00000000 
 19795 0018 03000000 		.quad	3
 19795      00000000 
 19796              		.align 32
 19797              	.LC1:
 19798 0020 08000000 		.quad	8
 19798      00000000 
 19799 0028 08000000 		.quad	8
 19799      00000000 
 19800 0030 08000000 		.quad	8
 19800      00000000 
 19801 0038 08000000 		.quad	8
 19801      00000000 
 19802              		.align 32
 19803              	.LC2:
 19804 0040 04000000 		.quad	4
 19804      00000000 
 19805 0048 04000000 		.quad	4
 19805      00000000 
 19806 0050 04000000 		.quad	4
 19806      00000000 
 19807 0058 04000000 		.quad	4
 19807      00000000 
GAS LISTING /tmp/ccLUVin9.s 			page 523


 19808              		.align 32
 19809              	.LC3:
 19810 0060 3F000000 		.long	63
 19811 0064 3F000000 		.long	63
 19812 0068 3F000000 		.long	63
 19813 006c 3F000000 		.long	63
 19814 0070 3F000000 		.long	63
 19815 0074 3F000000 		.long	63
 19816 0078 3F000000 		.long	63
 19817 007c 3F000000 		.long	63
 19818              		.section	.rodata.cst8,"aM",@progbits,8
 19819              		.align 8
 19820              	.LC6:
 19821 0000 00000000 		.long	0
 19822 0004 00000000 		.long	0
 19823              		.align 8
 19824              	.LC7:
 19825 0008 00000000 		.long	0
 19826 000c 0000F87F 		.long	2146959360
 19827              		.align 8
 19828              	.LC8:
 19829 0010 95D626E8 		.long	3894859413
 19830 0014 0B2E113E 		.long	1041313291
 19831              		.align 8
 19832              	.LC28:
 19833 0018 9A999999 		.long	2576980378
 19834 001c 9999B93F 		.long	1069128089
 19835              		.align 8
 19836              	.LC61:
 19837 0020 00000000 		.long	0
 19838 0024 00001440 		.long	1075052544
 19839              		.text
 19840              	.Letext0:
 19841              		.file 4 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h"
 19842              		.file 5 "/usr/include/x86_64-linux-gnu/bits/types.h"
 19843              		.file 6 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h"
 19844              		.file 7 "/usr/include/x86_64-linux-gnu/bits/types/FILE.h"
 19845              		.file 8 "/usr/include/stdio.h"
 19846              		.file 9 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h"
 19847              		.file 10 "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h"
 19848              		.file 11 "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h"
 19849              		.file 12 "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h"
 19850              		.file 13 "/usr/include/stdint.h"
 19851              		.file 14 "/usr/include/time.h"
 19852              		.file 15 "/usr/include/math.h"
 19853              		.file 16 "/usr/include/stdlib.h"
 19854              		.file 17 "<built-in>"
 46418              		.section	.note.gnu.property,"a"
 46419              		.align 8
 46420 0000 04000000 		.long	 1f - 0f
 46421 0004 10000000 		.long	 4f - 1f
 46422 0008 05000000 		.long	 5
 46423              	0:
 46424 000c 474E5500 		.string	 "GNU"
 46425              	1:
 46426              		.align 8
 46427 0010 020000C0 		.long	 0xc0000002
GAS LISTING /tmp/ccLUVin9.s 			page 524


 46428 0014 04000000 		.long	 3f - 2f
 46429              	2:
 46430 0018 03000000 		.long	 0x3
 46431              	3:
 46432 001c 00000000 		.align 8
 46433              	4:
GAS LISTING /tmp/ccLUVin9.s 			page 525


DEFINED SYMBOLS
                            *ABS*:0000000000000000 sieve_extend.c
     /tmp/ccLUVin9.s:86     .text:0000000000000000 extendSieve_smallSize
     /tmp/ccLUVin9.s:19791  .rodata.cst32:0000000000000000 .LC0
     /tmp/ccLUVin9.s:19797  .rodata.cst32:0000000000000020 .LC1
     /tmp/ccLUVin9.s:19803  .rodata.cst32:0000000000000040 .LC2
     /tmp/ccLUVin9.s:19809  .rodata.cst32:0000000000000060 .LC3
     /tmp/ccLUVin9.s:1227   .text:00000000000006c0 extendSieve_shiftright_ivdep
     /tmp/ccLUVin9.s:3043   .text:00000000000012c0 compare_tuning_result
     /tmp/ccLUVin9.s:3069   .text:00000000000012e0 setBitsTrue_largeRange_vector
     /tmp/ccLUVin9.s:5004   .text:0000000000001d90 extendSieve_aligned
     /tmp/ccLUVin9.s:5893   .text:0000000000002310 extendSieve_shiftleft
     /tmp/ccLUVin9.s:8567   .text:00000000000033a0 show_primes.isra.0
     /tmp/ccLUVin9.s:8562   .rodata.str1.1:0000000000000006 .LC5
     /tmp/ccLUVin9.s:8560   .rodata.str1.1:0000000000000000 .LC4
     /tmp/ccLUVin9.s:8974   .text:0000000000003540 sieve_shake
     /tmp/ccLUVin9.s:19774  .data:0000000000000000 global_VECTORSTEP_FASTER
     /tmp/ccLUVin9.s:11479  .text:0000000000004050 tune_benchmark
     /tmp/ccLUVin9.s:19781  .bss:0000000000000000 global_MEDIUMSTEP_FASTER
     /tmp/ccLUVin9.s:19787  .bss:0000000000000008 global_SMALLSTEP_FASTER
     /tmp/ccLUVin9.s:19824  .rodata.cst8:0000000000000008 .LC7
     /tmp/ccLUVin9.s:19828  .rodata.cst8:0000000000000010 .LC8
     /tmp/ccLUVin9.s:11696  .text:0000000000004190 shiftvec
     /tmp/ccLUVin9.s:12858  .text:0000000000004550 validatePrimeCount
     /tmp/ccLUVin9.s:12839  .rodata.str1.8:0000000000000000 .LC9
     /tmp/ccLUVin9.s:12845  .rodata.str1.1:0000000000000023 .LC11
     /tmp/ccLUVin9.s:12849  .rodata.str1.8:00000000000000c0 .LC12
     /tmp/ccLUVin9.s:12842  .rodata.str1.8:0000000000000058 .LC10
     /tmp/ccLUVin9.s:12852  .rodata.str1.8:00000000000000f8 .LC13
     /tmp/ccLUVin9.s:14107  .text:0000000000004cd0 usage
     /tmp/ccLUVin9.s:14067  .rodata.str1.8:0000000000000148 .LC14
     /tmp/ccLUVin9.s:14070  .rodata.str1.1:0000000000000031 .LC15
     /tmp/ccLUVin9.s:14074  .rodata.str1.8:0000000000000168 .LC16
     /tmp/ccLUVin9.s:14077  .rodata.str1.8:00000000000001a8 .LC17
     /tmp/ccLUVin9.s:14080  .rodata.str1.8:00000000000001d8 .LC18
     /tmp/ccLUVin9.s:14083  .rodata.str1.8:0000000000000220 .LC19
     /tmp/ccLUVin9.s:14086  .rodata.str1.8:0000000000000250 .LC20
     /tmp/ccLUVin9.s:14089  .rodata.str1.8:0000000000000290 .LC21
     /tmp/ccLUVin9.s:14092  .rodata.str1.8:00000000000002d0 .LC22
     /tmp/ccLUVin9.s:14095  .rodata.str1.8:0000000000000320 .LC23
     /tmp/ccLUVin9.s:14098  .rodata.str1.8:0000000000000348 .LC24
     /tmp/ccLUVin9.s:14101  .rodata.str1.8:0000000000000378 .LC25
     /tmp/ccLUVin9.s:14352  .text:0000000000004e50 printfcomma2
     /tmp/ccLUVin9.s:14344  .rodata.str1.1:000000000000003b .LC26
     /tmp/ccLUVin9.s:14346  .rodata.str1.1:000000000000003e .LC27
     /tmp/ccLUVin9.s:14478  .text:0000000000004ec0 printfcomma
     /tmp/ccLUVin9.s:14938  .text:0000000000005020 benchmark
     /tmp/ccLUVin9.s:19820  .rodata.cst8:0000000000000000 .LC6
     /tmp/ccLUVin9.s:15232  .text:0000000000005220 test
     /tmp/ccLUVin9.s:15536  .text:00000000000053b0 test2
     /tmp/ccLUVin9.s:15656  .text:0000000000005540 test3
     /tmp/ccLUVin9.s:15925  .text:0000000000005660 testshuffle_vector
     /tmp/ccLUVin9.s:16430  .text:00000000000058f0 testshuffle_vector2
     /tmp/ccLUVin9.s:16441  .text:0000000000005900 testshuffle_word
     /tmp/ccLUVin9.s:17143  .text.startup:0000000000000000 main
     /tmp/ccLUVin9.s:17051  .rodata.str1.1:0000000000000053 .LC30
     /tmp/ccLUVin9.s:17053  .rodata.str1.1:000000000000005a .LC31
GAS LISTING /tmp/ccLUVin9.s 			page 526


     /tmp/ccLUVin9.s:17062  .rodata.str1.1:0000000000000080 .LC34
     /tmp/ccLUVin9.s:17064  .rodata.str1.1:0000000000000099 .LC35
     /tmp/ccLUVin9.s:17066  .rodata.str1.1:00000000000000a1 .LC36
     /tmp/ccLUVin9.s:17075  .rodata.str1.1:00000000000000c1 .LC39
     /tmp/ccLUVin9.s:17096  .rodata.str1.1:000000000000014f .LC48
     /tmp/ccLUVin9.s:17094  .rodata.str1.1:0000000000000136 .LC47
     /tmp/ccLUVin9.s:17077  .rodata.str1.1:00000000000000d7 .LC40
     /tmp/ccLUVin9.s:17081  .rodata.str1.1:00000000000000f9 .LC42
     /tmp/ccLUVin9.s:17088  .rodata.str1.1:00000000000000fd .LC44
     /tmp/ccLUVin9.s:17090  .rodata.str1.1:0000000000000116 .LC45
     /tmp/ccLUVin9.s:17098  .rodata.str1.1:000000000000015f .LC49
     /tmp/ccLUVin9.s:19836  .rodata.cst8:0000000000000020 .LC61
     /tmp/ccLUVin9.s:17131  .rodata.str1.8:0000000000000548 .LC62
     /tmp/ccLUVin9.s:17049  .rodata.str1.1:0000000000000044 .LC29
     /tmp/ccLUVin9.s:17092  .rodata.str1.1:0000000000000127 .LC46
     /tmp/ccLUVin9.s:17059  .rodata.str1.8:00000000000003b0 .LC33
     /tmp/ccLUVin9.s:17137  .rodata.str1.1:00000000000001b3 .LC64
     /tmp/ccLUVin9.s:17134  .rodata.str1.8:0000000000000590 .LC63
     /tmp/ccLUVin9.s:19832  .rodata.cst8:0000000000000018 .LC28
     /tmp/ccLUVin9.s:17111  .rodata.str1.1:0000000000000188 .LC54
     /tmp/ccLUVin9.s:17108  .rodata.str1.8:0000000000000420 .LC53
     /tmp/ccLUVin9.s:17115  .rodata.str1.8:00000000000004a8 .LC55
     /tmp/ccLUVin9.s:17118  .rodata.str1.1:000000000000018d .LC56
     /tmp/ccLUVin9.s:17104  .rodata.str1.1:0000000000000183 .LC52
     /tmp/ccLUVin9.s:17120  .rodata.str1.1:000000000000019a .LC57
     /tmp/ccLUVin9.s:17122  .rodata.str1.1:00000000000001a1 .LC58
     /tmp/ccLUVin9.s:17100  .rodata.str1.1:0000000000000166 .LC50
     /tmp/ccLUVin9.s:17128  .rodata.str1.8:0000000000000510 .LC60
     /tmp/ccLUVin9.s:17124  .rodata.str1.1:00000000000001a5 .LC59
     /tmp/ccLUVin9.s:19765  .rodata:0000000000000060 CSWTCH.120
     /tmp/ccLUVin9.s:19758  .rodata:0000000000000040 CSWTCH.121
     /tmp/ccLUVin9.s:19751  .rodata:0000000000000020 CSWTCH.122
     /tmp/ccLUVin9.s:19741  .rodata:0000000000000000 CSWTCH.123
     /tmp/ccLUVin9.s:17102  .rodata.str1.1:0000000000000179 .LC51
     /tmp/ccLUVin9.s:17055  .rodata.str1.1:0000000000000064 .LC32
     /tmp/ccLUVin9.s:17072  .rodata.str1.8:00000000000003d8 .LC38
     /tmp/ccLUVin9.s:17085  .rodata.str1.8:00000000000003f8 .LC43
     /tmp/ccLUVin9.s:17068  .rodata.str1.1:00000000000000a8 .LC37
     /tmp/ccLUVin9.s:17079  .rodata.str1.1:00000000000000de .LC41

UNDEFINED SYMBOLS
__stack_chk_fail
_GLOBAL_OFFSET_TABLE_
memcpy
__printf_chk
putchar
aligned_alloc
clock_gettime
free
puts
stderr
__fprintf_chk
fwrite
exit
__isoc99_sscanf
malloc
qsort
GAS LISTING /tmp/ccLUVin9.s 			page 527


